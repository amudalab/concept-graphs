
Branch and bound
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 

 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 


Graph and tree
search algorithms





A*
B*
Beam
BellmanFord
Best-first
Bidirectional
Borvka
Branch & bound
BFS
British Museum
D*
DFS
Depth-limited
Dijkstra
Edmonds
FloydWarshall
Hill climbing
Iterative deepening
Kruskal
Johnson
Lexicographic BFS
Prim
Uniform-cost




Listings




Graph algorithms
Search algorithms
List of graph algorithms




Related topics




Dynamic programming
Graph traversal
Tree traversal
Search games







v
t
e










This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (December 2009) 


Branch and bound (BB or B&B) is a general algorithm for finding optimal solutions of various optimization problems, especially in discrete and combinatorial optimization. A branch-and-bound algorithm consists of a systematic enumeration of all candidate solutions, where large subsets of fruitless candidates are discarded en masse, by using upper and lower estimated bounds of the quantity being optimized.
The method was first proposed by A. H. Land and A. G. Doig[1] in 1960 for discrete programming.




Contents


1 General description
2 Applications
3 See also
4 References




[edit] General description
In order to facilitate a concrete description, we assume that the goal is to find the minimum value of a function , where  ranges over some set  of admissible or candidate solutions (the search space or feasible region). Note that one can find the maximum value of  by finding the minimum of . (For example,  could be the set of all possible trip schedules for a bus fleet, and  could be the expected revenue for schedule .)
A branch-and-bound procedure requires two tools. The first one is a splitting procedure that, given a set  of candidates, returns two or more smaller sets  whose union covers . Note that the minimum of  over  is , where each  is the minimum of  within . This step is called branching, since its recursive application defines a tree structure (the search tree) whose nodes are the subsets of .
The second tool is a procedure that computes upper and lower bounds for the minimum value of  within a given subset of . This step is called bounding.
The key idea of the BB algorithm is: if the lower bound for some tree node (set of candidates)  is greater than the upper bound for some other node , then  may be safely discarded from the search. This step is called pruning, and is usually implemented by maintaining a global variable  (shared among all nodes of the tree) that records the minimum upper bound seen among all subregions examined so far. Any node whose lower bound is greater than  can be discarded.
The recursion stops when the current candidate set  is reduced to a single element, or when the upper bound for set  matches the lower bound. Either way, any element of  will be a minimum of the function within .
[edit] Applications
This approach is used for a number of NP-hard problems, such as

Knapsack problem
Integer programming
Nonlinear programming
Traveling salesman problem (TSP)
Quadratic assignment problem (QAP)
Maximum satisfiability problem (MAX-SAT)
Nearest neighbor search (NNS)
Cutting stock problem
False noise analysis (FNA)
Computational phylogenetics

Branch-and-bound may also be a base of various heuristics. For example, one may wish to stop branching when the gap between the upper and lower bounds becomes smaller than a certain threshold. This is used when the solution is "good enough for practical purposes" and can greatly reduce the computations required. This type of solution is particularly applicable when the cost function used is noisy or is the result of statistical estimates and so is not known precisely but rather only known to lie within a range of values with a specific probability. An example of its application here is in biology when performing cladistic analysis to evaluate evolutionary relationships between organisms, where the data sets are often impractically large without heuristics[citation needed].
For this reason, branch-and-bound techniques are often used in game tree search algorithms, most notably through the use of alpha-beta pruning.
[edit] See also

Branch-and-cut, a hybrid between branch-and-bound and the cutting plane methods that is used extensively for solving integer linear programs.

[edit] References


^ A. H. Land and A. G. Doig (1960). "An automatic method of solving discrete programming problems". Econometrica 28 (3): pp.497520. doi:10.2307/1910129.










v
t
e


Optimization: Algorithms, methods, and heuristics











Unconstrained nonlinear: Methods calling ...










... functions



Golden section search
Interpolation methods
Line search
Successive parabolic interpolation








... and gradients




Convergence



Trust region
Wolfe conditions








QuasiNewton



BFGS and L-BFGS
DFP
Symmetric rank-one (SR1)








Other methods



GaussNewton
Gradient
LevenbergMarquardt
Conjugate gradient











... and Hessians



Newton's method
























Constrained nonlinear










General



Barrier methods
Penalty methods








Differentiable



Augmented Lagrangian methods
Sequential quadratic programming
Successive linear programming



















Convex optimization










Convex minimization



Cutting-plane method
Reduced gradient (FrankWolfe)
Subgradient method








Linear and
quadratic




Interior point



Ellipsoid algorithm of Khachiyan
Projective algorithm of Karmarkar








Basis-Exchange



Simplex algorithm of Dantzig
Criss-cross algorithm
Principal pivoting algorithm of Lemke






















Combinatorial










Paradigms



Approximation algorithm
Dynamic programming
Greedy algorithm
Integer programming

Branch & bound or cut










Graph algorithms




Minimum spanning tree



BellmanFord
Borvka
Dijkstra
FloydWarshall
Johnson
Kruskal











Network flows



Dinic
EdmondsKarp
FordFulkerson
Push-relabel maximum flow



















Metaheuristics









Evolutionary algorithm
Hill climbing
Local search
Simulated annealing
Tabu search














Categories

Algorithms and methods
Heuristics


Software








 
NewPP limit report
Preprocessor visited node count: 5204/1000000
Preprocessor generated node count: 38337/1500000
Post-expand include size: 126130/2048000 bytes
Template argument size: 88934/2048000 bytes
Highest expansion depth: 22/40
Expensive parser function count: 2/500

 Saved in parser cache with key enwiki:pcache:idhash:456580-0!0!0!!en!4!* and timestamp 20130117211444 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Branch_and_bound&oldid=533587220"				
 /printfooter 
 catlinks 
Categories: Optimization algorithms and methodsCombinatorial optimizationHidden categories: Articles needing additional references from December 2009All articles needing additional referencesAll articles with unsourced statementsArticles with unsourced statements from December 2011  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 