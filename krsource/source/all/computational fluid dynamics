
Computational fluid dynamics
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 

 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 





This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (June 2008) 




Computational physics






Numerical analysis Simulation
Data analysis Visualization




Potentials
Lennard-Jones potential Yukawa potential Morse potential






Fluid dynamics
Finite element Riemann solver
Smoothed particle hydrodynamics






Monte Carlo methods
Integration Gibbs sampling Metropolis algorithm






Particle
N-body Particle-in-cell
Molecular dynamics






Scientists
Godunov Ulam  von Neumann







v
t
e





Computational fluid dynamics, usually abbreviated as CFD, is a branch of fluid mechanics that uses numerical methods and algorithms to solve and analyze problems that involve fluid flows. Computers are used to perform the calculations required to simulate the interaction of liquids and gases with surfaces defined by boundary conditions. With high-speed supercomputers, better solutions can be achieved. Ongoing research yields software that improves the accuracy and speed of complex simulation scenarios such as transonic or turbulent flows. Initial validation of such software is performed using a wind tunnel with the final validation coming in full-scale testing, e.g. flight tests.




Contents


1 Background and history
2 Methodology

2.1 Discretization methods

2.1.1 Finite volume method
2.1.2 Finite element method
2.1.3 Finite difference method
2.1.4 Spectral element method
2.1.5 Boundary element method
2.1.6 High-resolution discretization schemes


2.2 Turbulence models

2.2.1 Reynolds-averaged NavierStokes
2.2.2 Large eddy simulation
2.2.3 Detached eddy simulation
2.2.4 Direct numerical simulation
2.2.5 Coherent vortex simulation
2.2.6 PDF methods
2.2.7 Vortex method
2.2.8 Vorticity confinement method
2.2.9 Linear eddy model


2.3 Two-phase flow
2.4 Solution algorithms


3 See also
4 Notes
5 References
6 External links




[edit] Background and history




A computer simulation of high velocity air flow around the Space Shuttle during re-entry.






A simulation of the Hyper-X scramjet vehicle in operation at Mach-7


The fundamental basis of almost all CFD problems are the NavierStokes equations, which define any single-phase fluid flow. These equations can be simplified by removing terms describing viscosity to yield the Euler equations. Further simplification, by removing terms describing vorticity yields the full potential equations. Finally, for small perturbations in subsonic and supersonic flows (not transonic or hypersonic) these equations can be linearized to yield the linearized potential equations.
Historically, methods were first developed to solve the Linearized Potential equations. Two-dimensional methods, using conformal transformations of the flow about a cylinder to the flow about an airfoil were developed in the 1930s.[1] The computer power available paced development of three-dimensional methods. The first work using computers to model fluid flow, as governed by the Navier-Stokes equations, was performed at Los Alamos National Labs, in the T3 group. The group published a paper modeling two dimensional swirling flow around an object in July 1963. This paper used the vorticity stream function method, developed by Jake Fromm at LANL.
The first paper with three-dimensional model was published by John Hess and A.M.O. Smith of Douglas Aircraft in 1967.[2] This method discretized the surface of the geometry with panels, giving rise to this class of programs being called Panel Methods. Their method itself was simplified, in that it did not include lifting flows and hence was mainly applied to ship hulls and aircraft fuselages. The first lifting Panel Code (A230) was described in a paper written by Paul Rubbert and Gary Saaris of Boeing Aircraft in 1968.[3] In time, more advanced three-dimensional Panel Codes were developed at Boeing (PANAIR, A502),[4] Lockheed (Quadpan),[5] Douglas (HESS),[6] McDonnell Aircraft (MACAERO),[7] NASA (PMARC)[8] and Analytical Methods (WBAERO,[9] USAERO[10] and VSAERO[11][12]). Some (PANAIR, HESS and MACAERO) were higher order codes, using higher order distributions of surface singularities, while others (Quadpan, PMARC, USAERO and VSAERO) used single singularities on each surface panel. The advantage of the lower order codes was that they ran much faster on the computers of the time. Today, VSAERO has grown to be a multi-order code and is the most widely used program of this class. It has been used in the development of many submarines, surface ships, automobiles, helicopters, aircraft, and more recently wind turbines. Its sister code, USAERO is an unsteady panel method that has also been used for modeling such things as high speed trains and racing yachts. The NASA PMARC code from an early version of VSAERO and a derivative of PMARC, named CMARC,[13] is also commercially available.
In the two-dimensional realm, a number of Panel Codes have been developed for airfoil analysis and design. The codes typically have a boundary layer analysis included, so that viscous effects can be modeled. Professor Richard Eppler of the University of Stuttgart developed the PROFILE code, partly with NASA funding, which became available in the early 1980s.[14] This was soon followed by MIT Professor Mark Drela's XFOIL code.[15] Both PROFILE and XFOIL incorporate two-dimensional panel codes, with coupled boundary layer codes for airfoil analysis work. PROFILE uses a conformal transformation method for inverse airfoil design, while XFOIL has both a conformal transformation and an inverse panel method for airfoil design.
An intermediate step between Panel Codes and Full Potential codes were codes that used the Transonic Small Disturbance equations. In particular, the three-dimensional WIBCO code,[16] developed by Charlie Boppe of Grumman Aircraft in the early 1980s has seen heavy use.
Developers turned to Full Potential codes, as panel methods could not calculate the non-linear flow present at transonic speeds. The first description of a means of using the Full Potential equations was published by Earll Murman and Julian Cole of Boeing in 1970.[17] Frances Bauer, Paul Garabedian and David Korn of the Courant Institute at New York University (NYU) wrote a series of two-dimensional Full Potential airfoil codes that were widely used, the most important being named Program H.[18] A further growth of Program H was developed by Bob Melnik and his group at Grumman Aerospace as Grumfoil.[19] Antony Jameson, originally at Grumman Aircraft and the Courant Institute of NYU, worked with David Caughey to develop the important three-dimensional Full Potential code FLO22[20] in 1975. Many Full Potential codes emerged after this, culminating in Boeing's Tranair (A633) code,[21] which still sees heavy use.
The next step was the Euler equations, which promised to provide more accurate solutions of transonic flows. The methodology used by Jameson in his three-dimensional FLO57 code[22] (1981) was used by others to produce such programs as Lockheed's TEAM program[23] and IAI/Analytical Methods' MGAERO program.[24] MGAERO is unique in being a structured cartesian mesh code, while most other such codes use structured body-fitted grids (with the exception of NASA's highly successful CART3D code,[25] Lockheed's SPLITFLOW code[26] and Georgia Tech's NASCART-GT).[27] Antony Jameson also developed the three-dimensional AIRPLANE code[28] which made use of unstructured tetrahedral grids.
In the two-dimensional realm, Mark Drela and Michael Giles, then graduate students at MIT, developed the ISES Euler program[29] (actually a suite of programs) for airfoil design and analysis. This code first became available in 1986 and has been further developed to design, analyze and optimize single or multi-element airfoils, as the MSES program.[30] MSES sees wide use throughout the world. A derivative of MSES, for the design and analysis of airfoils in a cascade, is MISES,[31] developed by Harold "Guppy" Youngren while he was a graduate student at MIT.
The NavierStokes equations were the ultimate target of developers. Two-dimensional codes, such as NASA Ames' ARC2D code first emerged. A number of three-dimensional codes were developed (ARC3D, OVERFLOW, CFL3D are three successful NASA contributions), leading to numerous commercial packages.
[edit] Methodology
In all of these approaches the same basic procedure is followed.

During preprocessing

The geometry (physical bounds) of the problem is defined.
The volume occupied by the fluid is divided into discrete cells (the mesh). The mesh may be uniform or non uniform.
The physical modeling is defined  for example, the equations of motions + enthalpy + radiation + species conservation
Boundary conditions are defined. This involves specifying the fluid behaviour and properties at the boundaries of the problem. For transient problems, the initial conditions are also defined.


The simulation is started and the equations are solved iteratively as a steady-state or transient.
Finally a postprocessor is used for the analysis and visualization of the resulting solution.

[edit] Discretization methods
The stability of the chosen discretization is generally established numerically rather than that of analytically as with simple linear problems. Special care must also be taken to ensure that the discretization handles discontinuous solutions gracefully. The Euler equations and NavierStokes equations both admit shocks, and contact surfaces.
Some of the discretization methods being used are:
[edit] Finite volume method
Main article: Finite volume method
The finite volume method (FVM) is a common approach used in CFD codes, as it has an advantage in memory usage and solution speed, especially for large problems, high Reynolds number turbulent flows, and source term dominated flows (like combustion).[32]
In the finite volume method, the governing equations partial differential equations (typically the Navier-Stokes equations, the mass and energy conservation equations, and the turbulence equations) are recast in a conservative form, and then solved over discrete control volumes. This discretization guarantees the conservation of fluxes through a particular control volume. The finite volume equation yields governing equations in the form,



where  is the vector of conserved variables,  is the vector of fluxes (see Euler equations or NavierStokes equations),  is the volume of the control volume element, and  is the surface area of the control volume element.
[edit] Finite element method
Main article: Finite element method
The finite element method (FEM) is used in structural analysis of solids, but is also applicable to fluids. However, the FEM formulation requires special care to ensure a conservative solution. The FEM formulation has been adapted for use with fluid dynamics governing equations.[citation needed] Although FEM must be carefully formulated to be conservative, it is much more stable than the finite volume approach.[33] However, FEM can require more memory and has slower solution times than the FVM.[34]
In this method, a weighted residual equation is formed:



where  is the equation residual at an element vertex ,  is the conservation equation expressed on an element basis,  is the weight factor, and  is the volume of the element.
[edit] Finite difference method
Main article: Finite difference method
The finite difference method (FDM) has historical importance[citation needed] and is simple to program. It is currently only used in few specialized codes, which handle complex geometry with high accuracy and efficiency by using embedded boundaries or overlapping grids (with the solution interpolated across each grid).[citation needed]



where  is the vector of conserved variables, and , , and  are the fluxes in the , , and  directions respectively.
[edit] Spectral element method
Main article: Spectral element method
Spectral element method is a finite element type method. It requires the mathematical problem (the partial differential equation) to be cast in a weak formulation. This is typically done by multiplying the differential equation by an arbitrary test function and integrating over the whole domain. Purely mathematically, the test functions are completely arbitrary - they belong to an infinitely dimensional function space. Clearly an infinitely dimensional function space cannot be represented on a discrete spectral element mesh. And this is where the spectral element discretization begins. The most crucial thing is the choice of interpolating and testing functions. In a standard, low order FEM in 2D, for quadrilateral elements the most typical choice is the bilinear test or interpolating function of the form . In a spectral element method however, the interpolating and test functions are chosen to be polynomials of a very high order (typically e.g. of the 10th order in CFD applications). This guarantees the rapid convergence of the method. Furthermore, very efficient integration procedures must be used, since the number of integrations to be performed in a numerical codes is big. Thus, high order Gauss integration quadratures are employed, since they achieve the highest accuracy with the smallest number of computations to be carried out. At the time there are some academic CFD codes based on the spectral element method and some more are currently under development, since the new time-stepping schemes arrise in the scientific world. You can refer to the C-CFD website to see movies of incompressible flows in channels simulated with a spectral element solver or to the Numerical Mechanics (see bottom of the page) website to see a movie of the lid-driven cavity flow obtained with a compeletely novel unconditionally stable time-stepping scheme combined with a spectral element solver.
[edit] Boundary element method
Main article: Boundary element method
In the boundary element method, the boundary occupied by the fluid is divided into a surface mesh.
[edit] High-resolution discretization schemes
Main article: High-resolution scheme
High-resolution schemes are used where shocks or discontinuities are present. Capturing sharp changes in the solution requires the use of second or higher-order numerical schemes that do not introduce spurious oscillations. This usually necessitates the application of flux limiters to ensure that the solution is total variation diminishing.[citation needed]
[edit] Turbulence models



This section requires expansion with:

Models should be listed in some order (increasing cost, increasing accuracy, alphabetically...)
Add the One-dimensional turbulence model (and its predecessor Linear eddy model). (November 2010)




In studying turbulent flows, the objective is to obtain a theory or a model that can yield quantities of interest, such as velocities. For turbulent flow, the range of length scales and complexity of phenomena make most approaches impossible. The primary approach in this case is to create numerical models to calculate the properties of interest. A selection of some commonly-used computational models for turbulent flows are presented in this section.
The chief difficulty in modeling turbulent flows comes from the wide range of length and time scales associated with turbulent flow. As a result, turbulence models can be classified based on the range of these length and time scales that are modeled and the range of length and time scales that are resolved. The more turbulent scales that are resolved, the finer the resolution of the simulation, and therefore the higher the computational cost. If a majority or all of the turbulent scales are modeled, the computational cost is very low, but the tradeoff comes in the form of decreased accuracy.
In addition to the wide range of length and time scales and the associated computational cost, the governing equations of fluid dynamics contain a non-linear convection term and a non-linear and non-local pressure gradient term. These nonlinear equations must be solved numerically with the appropriate boundary and initial conditions.
[edit] Reynolds-averaged NavierStokes
Main article: Reynolds-averaged NavierStokes equations
Reynolds-averaged Navier-Stokes (RANS) equations are the oldest approach to turbulence modeling. An ensemble version of the governing equations is solved, which introduces new apparent stresses known as Reynolds stresses. This adds a second order tensor of unknowns for which various models can provide different levels of closure. It is a common misconception that the RANS equations do not apply to flows with a time-varying mean flow because these equations are 'time-averaged'. In fact, statistically unsteady (or non-stationary) flows can equally be treated. This is sometimes referred to as URANS. There is nothing inherent in Reynolds averaging to preclude this, but the turbulence models used to close the equations are valid only as long as the time over which these changes in the mean occur is large compared to the time scales of the turbulent motion containing most of the energy.
RANS models can be divided into two broad approaches:

Boussinesq hypothesis
This method involves using an algebraic equation for the Reynolds stresses which include determining the turbulent viscosity, and depending on the level of sophistication of the model, solving transport equations for determining the turbulent kinetic energy and dissipation. Models include k- (Launder and Spalding),[35] Mixing Length Model (Prandtl),[36] and Zero Equation Model (Cebeci and Smith).[36] The models available in this approach are often referred to by the number of transport equations associated with the method. For example, the Mixing Length model is a "Zero Equation" model because no transport equations are solved; the  is a "Two Equation" model because two transport equations (one for  and one for ) are solved.
Reynolds stress model (RSM)
This approach attempts to actually solve transport equations for the Reynolds stresses. This means introduction of several transport equations for all the Reynolds stresses and hence this approach is much more costly in CPU effort.[citation needed]

[edit] Large eddy simulation
Main article: Large eddy simulation




Volume rendering of a non-premixed swirl flame as simulated by LES.


Large eddy simulation (LES) is a technique in which the smallest scales of the flow are removed through a filtering operation, and their effect modeled using subgrid scale models. This allows the largest and most important scales of the turbulence to be resolved, while greatly reducing the computational cost incurred by the smallest scales. This method requires greater computational resources than RANS methods, but is far cheaper than DNS.
[edit] Detached eddy simulation
Main article: Detached eddy simulation
Detached eddy simulations (DES) is a modification of a RANS model in which the model switches to a subgrid scale formulation in regions fine enough for LES calculations. Regions near solid boundaries and where the turbulent length scale is less than the maximum grid dimension are assigned the RANS mode of solution. As the turbulent length scale exceeds the grid dimension, the regions are solved using the LES mode. Therefore the grid resolution for DES is not as demanding as pure LES, thereby considerably cutting down the cost of the computation. Though DES was initially formulated for the Spalart-Allmaras model (Spalart et al., 1997), it can be implemented with other RANS models (Strelets, 2001), by appropriately modifying the length scale which is explicitly or implicitly involved in the RANS model. So while Spalart-Allmaras model based DES acts as LES with a wall model, DES based on other models (like two equation models) behave as a hybrid RANS-LES model. Grid generation is more complicated than for a simple RANS or LES case due to the RANS-LES switch. DES is a non-zonal approach and provides a single smooth velocity field across the RANS and the LES regions of the solutions.
[edit] Direct numerical simulation
Main article: Direct numerical simulation
Direct numerical simulation (DNS) resolves the entire range of turbulent length scales. This marginalizes the effect of models, but is extremely expensive. The computational cost is proportional to .[37] DNS is intractable for flows with complex geometries or flow configurations.
[edit] Coherent vortex simulation
The coherent vortex simulation approach decomposes the turbulent flow field into a coherent part, consisting of organized vortical motion, and the incoherent part, which is the random background flow.[38] This decomposition is done using wavelet filtering. The approach has much in common with LES, since it uses decomposition and resolves only the filtered portion, but different in that it does not use a linear, low-pass filter. Instead, the filtering operation is based on wavelets, and the filter can be adapted as the flow field evolves. Farge and Schneider tested the CVS method with two flow configurations and showed that the coherent portion of the flow exhibited the  energy spectrum exhibited by the total flow, and corresponded to coherent structures (vortex tubes), while the incoherent parts of the flow composed homogeneous background noise, which exhibited no organized structures. Goldstein and Oleg[39] applied the FDV model to large eddy simulation, but did not assume that the wavelet filter completely eliminated all coherent motions from the subfilter scales. By employing both LES and CVS filtering, they showed that the SFS dissipation was dominated by the SFS flow field's coherent portion.
[edit] PDF methods
Probability density function (PDF) methods for turbulence, first introduced by Lundgren,[40] are based on tracking the one-point PDF of the velocity, , which gives the probability of the velocity at point  being between  and . This approach is analogous to the kinetic theory of gases, in which the macroscopic properties of a gas are described by a large number of particles. PDF methods are unique in that they can be applied in the framework of a number of different turbulence models; the main differences occur in the form of the PDF transport equation. For example, in the context of large eddy simulation, the PDF becomes the filtered PDF.[41] PDF methods can also be used to describe chemical reactions,[42][43] and are particularly useful for simulating chemically reacting flows because the chemical source term is closed and does not require a model. The PDF is commonly tracked by using Lagrangian particle methods; when combined with large eddy simulation, this leads to a Langevin equation for subfiler particle evolution.
[edit] Vortex method
The vortex method is a grid-free technique for the simulation of turbulent flows. It uses vortices as the computational elements, mimicking the physical structures in turbulence. Vortex methods were developed as a grid-free methodology that would not be limited by the fundamental smoothing effects associated with grid-based methods. To be practical, however, vortex methods require means for rapidly computing velocities from the vortex elements  in other words they require the solution to a particular form of the N-body problem (in which the motion of N objects is tied to their mutual influences). A breakthrough came in the late 1980s with the development of the fast multipole method (FMM), an algorithm by V. Rokhlin (Yale) and L. Greengard (Courant Institute). This breakthrough paved the way to practical computation of the velocities from the vortex elements and is the basis of successful algorithms. They are especially well-suited to simulating filamentary motion, such as wisps of smoke, in real-time simulations such as video games, because of the fine detail achieved using minimal computation.[44]
Software based on the vortex method offer a new means for solving tough fluid dynamics problems with minimal user intervention.[citation needed] All that is required is specification of problem geometry and setting of boundary and initial conditions. Among the significant advantages of this modern technology;

It is practically grid-free, thus eliminating numerous iterations associated with RANS and LES.
All problems are treated identically. No modeling or calibration inputs are required.
Time-series simulations, which are crucial for correct analysis of acoustics, are possible.
The small scale and large scale are accurately simulated at the same time.

[edit] Vorticity confinement method
Main article: Vorticity confinement
The vorticity confinement (VC) method is an Eulerian technique used in the simulation of turbulent wakes. It uses a solitary-wave like approach to produce a stable solution with no numerical spreading. VC can capture the small scale features to within as few as 2 grid cells. Within these features, a nonlinear difference equation is solved as opposed to the finite difference equation. VC is similar to shock capturing methods, where conservation laws are satisfied, so that the essential integral quantities are accurately computed.
[edit] Linear eddy model
The Linear eddy model is a technique used to simulate the convective mixing that takes place in turbulent flow.[45] Specifically, it provides a mathematical way to describe the interactions of a scalar variable within the vector flow field. It is primarily used in one-dimensional representations of turbulent flow, since it can be applied across a wide range of length scales and Reynolds numbers. This model is generally used as a building block for more complicated flow representations, as it provides high resolution predictions that hold across a large range of flow conditions.
[edit] Two-phase flow
The modeling of two-phase flow is still under development. Different methods have been proposed lately.[46][47] The Volume of fluid method has received a lot of attention lately,[by whom?] for problems that do not have dispersed particles,[citation needed] but the Level set method and front tracking are also valuable approaches [according to whom?]. Most of these methods are either good in maintaining a sharp interface or at conserving mass [according to whom?]. This is crucial since the evaluation of the density, viscosity and surface tension is based on the values averaged over the interface.[citation needed] Lagrangian multiphase models, which are used for dispersed media, are based on solving the Lagrangian equation of motion for the dispersed phase.[citation needed]
[edit] Solution algorithms
Discretization in space produces a system of ordinary differential equations for unsteady problems and algebraic equations for steady problems. Implicit or semi-implicit methods are generally used to integrate the ordinary differential equations, producing a system of (usually) nonlinear algebraic equations. Applying a Newton or Picard iteration produces a system of linear equations which is nonsymmetric in the presence of advection and indefinite in the presence of incompressibility. Such systems, particularly in 3D, are frequently too large for direct solvers, so iterative methods are used, either stationary methods such as successive overrelaxation or Krylov subspace methods. Krylov methods such as GMRES, typically used with preconditioning, operate by minimizing the residual over successive subspaces generated by the preconditioned operator.
Multigrid has the advantage of asymptotically optimal performance on many problems. Traditional[according to whom?] solvers and preconditioners are effective at reducing high-frequency components of the residual, but low-frequency components typically require many iterations to reduce. By operating on multiple scales, multigrid reduces all components of the residual by similar factors, leading to a mesh-independent number of iterations.[citation needed]
For indefinite systems, preconditioners such as incomplete LU factorization, additive Schwarz, and multigrid perform poorly or fail entirely, so the problem structure must be used for effective preconditioning.[48] Methods commonly used in CFD are the SIMPLE and Uzawa algorithms which exhibit mesh-dependent convergence rates, but recent advances based on block LU factorization combined with multigrid for the resulting definite systems have led to preconditioners that deliver mesh-independent convergence rates.[49]
[edit] See also

Blade element theory
Computational magnetohydrodynamics
Finite element analysis
Fluid simulation
Immersed boundary method
KIVA (Software)
Lattice Boltzmann methods
List of finite element software packages
Multidisciplinary design optimization
Turbulence modeling
Visualization
Wind tunnel
Meshfree methods
Smoothed-particle hydrodynamics
Moving particle semi-implicit method

[edit] Notes


^ Milne-Thomson, L.M. (1973). Theoretical Aerodynamics. Dover Publications. ISBN0-486-61980-X.
^ Hess, J.L.; A.M.O. Smith (1967). "Calculation of Potential Flow About Arbitrary Bodies". Progress in Aeronautics Sciences 8: 1138. Bibcode 1967PrAeS...8....1H. doi:10.1016/0376-0421(67)90003-6. http://www.sciencedirect.com/science?_ob=ArticleURL&_udi=B6V3V-4811PYT-33&_user=10&_coverDate=12%2F31%2F1967&_alid=1339703692&_rdoc=1&_fmt=high&_orig=search&_cdi=5740&_docanchor=&view=c&_ct=176&_acct=C000050221&_version=1&_urlVersion=0&_userid=10&md5=2939d59a5c94a28fcc51ab6d6cec0305.
^ Rubbert, Paul and Saaris, Gary, "Review and Evaluation of a Three-Dimensional Lifting Potential Flow Analysis Method for Arbitrary Configurations," AIAA paper 72-188, presented at the AIAA 10th Aerospace Sciences Meeting, San Diego California, January 1972.
^ Carmichael, R. and Erickson, L.L., "PAN AIR - A Higher Order Panel Method for Predicting Subsonic or Supersonic Linear Potential Flows About Arbitrary Configurations," AIAA paper 81-1255, presented at the AIAA 14th Fluid and Plasma Dynamics Conference, Palo Alto California, June 1981.
^ Youngren, H.H., Bouchard, E.E., Coopersmith, R.M. and Miranda, L.R., "Comparison of Panel Method Formulations and its Influence on the Development of QUADPAN, an Advanced Low Order Method," AIAA paper 83-1827, presented at the AIAA Applied Aerodynamics Conference, Danvers, Massachusetts, July 1983.
^ Hess, J.L. and Friedman, D.M., "Analysis of Complex Inlet Configurations Using a Higher-Order Panel Method," AIAA paper 83-1828, presented at the AIAA Applied Aerodynamics Conference, Danvers, Massachusetts, July 1983.
^ Bristow, D.R., "Development of Panel Methods for Subsonic Analysis and Design," NASA CR-3234, 1980.
^ Ashby, Dale L.; Dudley, Michael R.; Iguchi, Steve K.; Browne, Lindsey and Katz, Joseph, Potential Flow Theory and Operation Guide for the Panel Code PMARC, NASA NASA-TM-102851 1991.
^ Woodward, F.A., Dvorak, F.A. and Geller, E.W., "A Computer Program for Three-Dimensional Lifting Bodies in Subsonic Inviscid Flow," USAAMRDL Technical Report, TR 74-18, Ft. Eustis, Virginia, April 1974.
^ Katz, J. and Maskew, B., "Unsteady Low-Speed Aevodynamic Model for Complete Aircraft Configurations," AIAA paper 86-2180, presented at the AIAA Atmospheric Flight Mechanics Conference, Williamsburg Virginia, August 1986.
^ Maskew, Brian, "Prediction of Subsonic Aerodynamic Characteristics: A Case for Low-Order Panel Methods," AIAA paper 81-0252, presented at the AIAA 19th Aerospace Sciences Meeting, St. Louis, Missouri, January 1981.
^ Maskew, Brian, Program VSAERO Theory Document: A Computer Program for Calculating Nonlinear Aerodynamic Characteristics of Arbitrary Configurations, NASA CR-4023, 1987.
^ Pinella, David and Garrison, Peter, Digital Wind Tunnel CMARC; Three-Dimensional Low-Order Panel Codes, Aerologic, 2009.
^ Eppler, R.; Somers, D. M., "A Computer Program for the Design and Analysis of Low-Speed Airfoils," NASA TM-80210, 1980.
^ Drela, Mark, "XFOIL: An Analysis and Design System for Low Reynolds Number Airfoils," in Springer-Verlag Lecture Notes in Engineering, No. 54, 1989.
^ Boppe, C.W., "Calculation of Transonic Wing Flows by Grid Embedding," AIAA paper 77-207, presented at the AIAA 15th Aerospace Sciences Meeting, Los Angeles California, January 1977.
^ Murman, Earll and Cole, Julian, "Calculation of Plane Steady Transonic Flow," AIAA paper 70-188, presented at the AIAA 8th Aerospace Sciences Meeting, New York New York, January 1970.
^ Bauer, F., Garabedian, P., and Korn, D. G., "A Theory of Supercritical Wing Sections, with Computer Programs and Examples," Lecture Notes in Economics and Mathematical Systems 66, Springer-Verlag, May 1972. ISBN 978-3540058076
^ Mead, H. R.; Melnik, R. E., "GRUMFOIL: A computer code for the viscous transonic flow over airfoils," NASA CR-3806, 1985.
^ Jameson A. and Caughey D., "A Finite Volume Method for Transonic Potential Flow Calculations," AIAA paper 77-635, presented at the Third AIAA Computational Fluid Dynamics Conference, Alburquerque New Mexico, June 1977.
^ Samant, S.S., Bussoletti J.E., Johnson F.T., Burkhart, R.H., Everson, B.L., Melvin, R.G., Young, D.P., Erickson, L.L., Madson M.D. and Woo, A.C., "TRANAIR: A Computer Code for Transonic Analyses of Arbitrary Configurations," AIAA paper 87-0034, presented at the AIAA 25th Aerospace Sciences Meeting, Reno Nevada, January 1987.
^ Jameson, A., Schmidt, W. and Turkel, E., "Numerical Solution of the Euler Equations by Finite Volume Methods Using Runge-Kutta Time-Stepping Schemes," AIAA paper 81-1259, presented at the AIAA 14th Fluid and Plasma Dynamics Conference, Palo Alto California, 1981.
^ Raj, P. and Brennan, J.E., "Improvements to an Euler Aerodynamic Method for Transonic Flow Simulation," AIAA paper 87-0040, presented at the 25th Aerospace Sciences Meeting, Reno Nevada, January 1987.
^ Tidd, D.M., Strash, D.J., Epstein, B., Luntz, A., Nachshon A. and Rubin T., "Application of an Efficient 3-D Multigrid Euler Method (MGAERO) to Complete Aircraft Configuraitons," AIAA paper 91-3236, presented at the AIAA 9th Applied Aerodynamics Conference, Baltimore Maryland, September 1991.
^ Melton, J.E., Berger, M.J., Aftosmis, M.J. and Wong, M.D., "3D Application of a Cartesian Grid Euler Method," AIAA paper 95-0853, presented at the 33rd Aerospace Sciences Meeting and Exhibit, Reno Nevada, January 1995.
^ Karmna, Steve L. Jr., "SPLITFLOW: A 3D Unstructurted Cartesian Prismatic Grid CFD Code for Complex Geometries," AIAA paper 95-0343, presented at the 33rd Aerospace Sciences Meeting and Exhibit, Reno Nevada, January 1995.
^ Marshall, D., and Ruffin, S.M., " An Embedded Boundary Cartesian Grid Scheme for Viscous Flows using a New Viscous Wall Boundary Condition Treatment, AIAA Paper 2004-0581, presented at the AIAA 42nd Aerospace Sciences Meeting, January 2004.
^ Jameson, A., Baker, T.J. and Weatherill, N.P., "Calculation of Inviscid Tramonic Flow over a Complete Aircraft," AIAA paper 86-0103, presented at the AIAA 24th Aerospace Sciences Meeting, Reno Nevada, January 1986.
^ Giles, M., Drela, M. and Thompkins, W.T. Jr., "Newton Solution of Direct and Inverse Transonic Euler Equations," AIAA paper 85-1530, presented at the Third Symposium on Numerical and Physical Aspects of Aerodynamic Flows, Long Beach, California, January 1985.
^ Drela, M. "Newton Solution of Coupled Viscous/Inviscid Multielement Airfoil Flows,", AIAA paper 90-1470, presented at the AIAA 21st Fluid Dynamics, Plasma Dynamics and Lasers Conference, Seattle Washington, June 1990.
^ Drela, M. and Youngren H., "A User's Guide to MISES 2.53", MIT Computational Sciences Laboratory, December 1998.
^ Patankar, Suhas V. (1980). Numerical Heat Transfer and Fluid FLow. Hemisphere Publishing Corporation. ISBN0891165223.
^ Surana, K.A.; Allu, S.; Tenpas, P.W.; Reddy, J.N. (February 2007). "k-version of finite element method in gas dynamics: higher-order global differentiability numerical solutions". International Journal for Numerical Methods in Engineering 69 (6): 11091157. Bibcode 2007IJNME..69.1109S. doi:10.1002/nme.1801.
^ Huebner, K. H., Thornton, E. A., and Byron, T. D. (1995). The Finite Element Method for Engineers (Third ed.). Wiley Interscience.
^ Launder, B. E.; D. B. Spalding (1974). "The Numerical Computation of Turbulent Flows". Computer Methods in Applied Mechanics and Engineering 3 (2): 269289. Bibcode 1974CMAME...3..269L. doi:10.1016/0045-7825(74)90029-2.
^ a b Wilcox, David C. (2006). Turbulence Modeling for CFD (3 ed.). DCW Industries, Inc.. ISBN978-1-928729-08-2.
^ Pope, S. B. (2000). Turbulent Flows. Cambridge University Press. ISBN978-0-521-59886-6.
^ Farge, Marie; Schneider, Kai (2001). "Coherent Vortex Simulation (CVS), A Semi-Deterministic Turbulence Model Using Wavelets". Flow, Turbulence and Combustion 66 (4): 393426. doi:10.1023/A:1013512726409.
^ Goldstein, Daniel; Vasilyev, Oleg (1995). "Stochastic coherent adaptive large eddy simulation method". Physics of Fluids A 24 (7): 2497. Bibcode 2004PhFl...16.2497G. doi:10.1063/1.1736671.
^ Lundgren, T.S. (1969). "Model equation for nonhomogeneous turbulence". Physics of Fluids A 12 (3): 485497. Bibcode 1969PhFl...12..485L. doi:10.1063/1.1692511.
^ Colucci, P. J.; Jaberi, F. A; Givi, P.; Pope, S. B. (1998). "Filtered density function for large eddy simulation of turbulent reacting flows". Physics of Fluids A 10 (2): 499515. Bibcode 1998PhFl...10..499C. doi:10.1063/1.869537.
^ Fox, Rodney (2003). Computational models for turbulent reacting flows. Cambridge University Press. ISBN978-0-521-65049-6.
^ Pope, S. B. (1985). "PDF methods for turbulent reactive flows". Progress in Energy and Combustion Science 11 (2): 119192. Bibcode 1985PrECS..11..119P. doi:10.1016/0360-1285(85)90002-4.
^ Gourlay, Michael J. (July 2009). "Fluid Simulation for Video Games". Intel Software Network. http://software.intel.com/en-us/articles/fluid-simulation-for-video-games-part-1/.
^ Krueger, Steven K. (1993). "Linear Eddy Simulations Of Mixing In A Homogeneous Turbulent Flow". Physics Of Fluids 5 (4): 1023.
^ Hirt, C.W.; Nichols, B.D. (1981). "Volume of fluid (VOF) method for the dynamics of free boundaries". Journal of Computational Physics.
^ Unverdi, S. O.; Tryggvason, G. (1992). "A Front-Tracking Method for Viscous, Incompressible, Multi-Fluid Flows". J. Comput. Phys.
^ Benzi, Golub, Liesen (2005). "Numerical solution of saddle-point problems". Acta Numerica 14: 1137. doi:10.1017/S0962492904000212.
^ Elman et al.; Howle, V; Shadid, J; Shuttleworth, R; Tuminaro, R (January 2008). "A taxonomy and comparison of parallel block multi-level preconditioners for the incompressible NavierStokes equations". Journal of Computational Physics 227 (3): 17901808. doi:10.1016/j.jcp.2007.09.026.


[edit] References

Anderson, John D. (1995). Computational Fluid Dynamics: The Basics With Applications. Science/Engineering/Math. McGraw-Hill Science. ISBN0-07-001685-2
Patankar, Suhas (1980). Numerical Heat Transfer and Fluid Flow. Hemisphere Series on Computational Methods in Mechanics and Thermal Science. Taylor & Francis. ISBN0-89116-522-3
Shah, Tasneem M.; Sadaf Siddiq, Zafar U. Koreshi. "An analysis and comparison of tube natural frequency modes with fluctuating force frequency from the thermal cross-flow fluid in 300 MWe PWR". International Journal of Engineering and Technology 9 (9): 201205. http://docs.google.com/viewer?a=v&q=cache:4gQM2Vj9itIJ:www.ijens.org/1936091%2520IJET.pdf+tasneem+M.+Shah&hl=en&gl=us&pid=bl&srcid=ADGEESg-lxYkvf5xfu4Nv6UfF-xgO2yzh2O6wa7EzNVurfVgtXdi_bkvvSAijrk7DvwDqWJE9Ke-trzYKGEM5GCvi5w-qmbo5nvDaGt4kv-mBr-XL6in2xo0WRyHVX3o4roKLkcZgTAk&sig=AHIEtbQ4XElNn3nmOsUXoM0JdkNeY9cMxg.

[edit] External links



Wikimedia Commons has media related to: Computational fluid dynamics



CFD Tutorial Many examples and images, with references to robotic fish.
CFD-Wiki
Course: Introduction to CFD  Dmitri Kuzmin (Dortmund University of Technology)

 
NewPP limit report
Preprocessor visited node count: 22400/1000000
Preprocessor generated node count: 57750/1500000
Post-expand include size: 158151/2048000 bytes
Template argument size: 63628/2048000 bytes
Highest expansion depth: 21/40
Expensive parser function count: 16/500

 Saved in parser cache with key enwiki:pcache:idhash:305924-0!0!0!!en!4!* and timestamp 20130124164201 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Computational_fluid_dynamics&oldid=534674486"				
 /printfooter 
 catlinks 
Categories: Computational fluid dynamicsHidden categories: Articles needing additional references from June 2008All articles needing additional referencesAll articles with unsourced statementsArticles with unsourced statements from November 2010Articles to be expanded from November 2010All articles to be expandedArticles with specifically marked weasel-worded phrases from November 2010All articles with specifically marked weasel-worded phrasesArticles with inconsistent citation formatsCommons category template with no category set  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 