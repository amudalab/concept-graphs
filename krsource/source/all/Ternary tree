
Ternary tree
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 

 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 
This article is about rooted trees with three children per node.  For unrooted trees with three neighbors per node, see unrooted binary tree.






A simple ternary tree of size 10 and height 2.




In computer science, a ternary tree is a tree data structure in which each node has at most three child nodes, usually distinguished as "left", mid and "right". Nodes with children are parent nodes, and child nodes may contain references to their parents. Outside the tree, there is often a reference to the "root" node (the ancestor of all nodes), if it exists. Any node in the data structure can be reached by starting at root node and repeatedly following references to either the left, mid or right child.
Ternary trees are used to implement Ternary search trees and Ternary heaps.




Contents


1 Definition
2 Properties of ternary trees
3 Common operations

3.1 Insertion

3.1.1 External nodes
3.1.2 Internal nodes


3.2 Deletion

3.2.1 Node with zero or one child




4 Comparison with other trees
5 Examples of ternary trees
6 See also
7 References




[edit] Definition

Directed Edge - The link from the parent to the child.
Root - The node with no parents. There is at most one root node in a rooted tree.
Leaf Node - The node which has no children.
Child Node - The nodes that are located underneath of a node.
Depth - Length of the path from the root to the node. The set of all nodes at a given depth is sometimes called a level of the tree. The root node is at depth zero.
Height - Length of the path from the root to the deepest node in the tree. A (rooted) tree with only one node (the root) has a height of zero. In the example diagram, the tree has height of 2.
Sibling - Nodes that share the same parent node.

- A node p is an ancestor of a node q if it exists on the path from q to the root. The node q is then termed a descendant of p.
- A size of a node is the number of descendants it has including itself.
[edit] Properties of ternary trees

Maximum number of nodes

 Let  be height of a ternary tree.
 Let  be the maximum number of nodes in a ternary tree of height h


h
M(h)


0
1


1
4


2
13


3
40


 
 Every tree of height h has at most  nodes.

If a node  occupies TREE [k}, then its Left Child is stored in tree .
Mid Child is stored in TREE .
Right Child is stored in TREE .

[edit] Common operations
[edit] Insertion
Nodes can be inserted into ternary trees in between three other nodes or added after an external node. In Ternary trees, a node that is inserted is specified as to which child it is.
[edit] External nodes
Say that the external node being added on to is node A. To add a new node after node A, A assigns the new node as one of its children and the new node assigns node A as its parent.
[edit] Internal nodes
Insertion on internal nodes is more complex than on external nodes. Say that the internal node is node A and that node B is the child of A. (If the insertion is to insert a right child, then B is the right child of A, and similarly with a left child insertion or mid child.) A assigns its child to the new node and the new node assigns its parent to A. Then the new node assigns its child to B and B assigns its parent as the new node.
[edit] Deletion
Deletion is the process whereby a node is removed from the tree. Only certain nodes in a binary tree can be removed unambiguously.
[edit] Node with zero or one child
Say that the node to delete is node A. If a node has no children (external node), deletion is accomplished by setting the child of A's parent to null and A's parent to null. If it has one child, set the parent of A's child to A's parent and set the child of A's parent to A's child.
[edit] Comparison with other trees
The picture below is a binary search tree that represents 12 two-letter words. All nodes on the left child have smaller values, while all nodes on the right child have greater values for all nodes. A search starts from the root. To find the word "ON", we compare it to "IN" and take the right branch. Every comparison could access each character of both words.

        in
      /    \
     be    of
    /  \  /  \
   as  by is  or
    \   \  \  / \
    at  he it on to 

Digital search tries to store strings character by character. The next picture is a tree that represents the same set of 12 words;

         _ _ _ _ _ _ _ _ _ _ _ _ _ 
        /     /    / \       \     \
       /     /    /   \       \     \
      a     b    h     i       o     t
     / \   / \   |   / | \    /|\    |
    s  t  e   y  e  n  s  t  f n r   o
   as at be  by he in is it of on or to

each input word is shown beneath the node that represents it. In a tree representing words of lower case letters, each node has 26-way branching. Searches are very fast: A search for "IS" starts at the root, takes the "I" branch, then the "S" branch, and ends at the desired node. At every node, one accesses an array element, tests for null, and takes a branch.

                    i
              /     |    \
             /      |     \
            b       s      o
         / |  \    / \    |  \
        a  e   h  n   t   n   t
        |   \  |         / \  |
        s    y e        f  r  o
         \
          t

The above picture is a balanced ternary search tree for the same set of 12 words. The low and high pointers are shown as solid lines, while equal pointers are shown as dashed lines. Each input word is shown beneath its terminal node. A search for the word "IS" starts at the root, proceeds down the equal child to the node with value "S", and stops there after two comparisons. A search for "AX" makes three comparisons to the first letter "A" and two comparisons to the second letter "X" before reporting that the word is not in the tree.[1]
[edit] Examples of ternary trees

Ternary search tree
Ternary heap
An infinite ternary tree containing all primitive Pythagorean triples is described in Tree of primitive Pythagorean triples and in Formulas for generating Pythagorean triples. The root node contains triple [3,4,5].[2]

[edit] See also

Binary tree
Tree structure

[edit] References


^ Jon Bentley and Bob Sedgewick (1998), Dr. Dobb's Journal
^ Price, H. Lee (2008). "The Pythagorean Tree: A New Species". arXiv:0809.4324.


 
NewPP limit report
Preprocessor visited node count: 654/1000000
Preprocessor generated node count: 11554/1500000
Post-expand include size: 1734/2048000 bytes
Template argument size: 1224/2048000 bytes
Highest expansion depth: 11/40
Expensive parser function count: 0/500

 Saved in parser cache with key enwiki:pcache:idhash:21661207-0!0!0!!en!4!* and timestamp 20130122193615 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Ternary_tree&oldid=471785040"				
 /printfooter 
 catlinks 
Categories: Trees (data structures)  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 