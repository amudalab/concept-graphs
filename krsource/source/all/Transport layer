
Transport layer
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 

 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 


The OSI model


7 Application layer


6 Presentation layer


5 Session layer


4 Transport layer


3 Network layer


2 Data link layer




LLC sublayer
MAC sublayer




1 Physical layer





v
t
e







Internet protocols


Application layer




DHCP
DHCPv6
DNS
FTP
HTTP
IMAP
IRC
LDAP
MGCP
NNTP
NTP
POP
RPC
RTP
RTCP
RTSP
SIP
SMTP
SNMP
SOCKS
SSH
Telnet
TLS/SSL
XMPP
(more)




Transport layer




TCP
UDP
DCCP
SCTP
RSVP
(more)




Routing protocols *




BGP
OSPF
RIP
(more)




Internet layer




IP

IPv4
IPv6


ICMP
ICMPv6
ECN
IGMP
IPsec
(more)




Link layer




ARP/InARP
NDP
Tunnels

L2TP


PPP
Media access control

Ethernet
DSL
ISDN
FDDI


(more)




* Not a layer. A routing protocol belongs either to application or network layer.





v
t
e





In computer networking, the transport layer or layer 4 provides end-to-end communication services for applications[1] within a layered architecture of network components and protocols. The transport layer provides convenient services such as connection-oriented data stream support, reliability, flow control, and multiplexing.
Transport layers are contained in both the TCP/IP model (RFC 1122),[2] which is the foundation of the Internet, and the Open Systems Interconnection (OSI) model of general networking. The definitions of the transport layer are slightly different in these two models. This article primarily refers to the TCP/IP model, in which TCP is largely for a convenient application programming interface to internet hosts, as opposed to the OSI-model definition of the transport layer.
The most well-known transport protocol is the Transmission Control Protocol (TCP). It lent its name to the title of the entire Internet Protocol Suite, TCP/IP. It is used for connection-oriented transmissions, whereas the connectionless User Datagram Protocol (UDP) is used for simpler messaging transmissions. TCP is the more complex protocol, due to its stateful design incorporating reliable transmission and data stream services. Other prominent protocols in this group are the Datagram Congestion Control Protocol (DCCP) and the Stream Control Transmission Protocol (SCTP).




Contents


1 Services
2 Analysis
3 Protocols
4 Comparison of transport-layer protocols
5 Comparison of OSI transport protocols
6 References




[edit] Services
There are many services that can be optionally provided by a transport-layer protocol, and different protocols may or may not implement them.

Connection-oriented communication: Interpreting the connection as a data stream can provide many benefits to applications. It is normally easier to deal with than the underlying connection-less models, such as the Transmission Control Protocol's underlying Internet Protocol model of datagrams.
Byte orientation: Rather than processing the messages in the underlying communication system format, it is often easier for an application to process the data stream as a sequence of bytes. This simplification helps applications work with various underlying message formats.
Same order delivery: The network layer doesn't generally guarantee that packets of data will arrive in the same order that they were sent, but often this is a desirable feature. This is usually done through the use of segment numbering, with the receiver passing them to the application in order. This can cause head-of-line blocking.
Reliability: Packets may be lost during transport due to network congestion and errors. By means of an error detection code, such as a checksum, the transport protocol may check that the data is not corrupted, and verify correct receipt by sending an ACK or NACK message to the sender. Automatic repeat request schemes may be used to retransmit lost or corrupted data.
flow control: The rate of data transmission between two nodes must sometimes be managed to prevent a fast sender from transmitting more data than can be supported by the receiving data buffer, causing a buffer overrun. This can also be used to improve efficiency by reducing buffer underrun.
Congestion avoidance: Congestion control can control traffic entry into a telecommunications network, so as to avoid congestive collapse by attempting to avoid oversubscription of any of the processing or link capabilities of the intermediate nodes and networks and taking resource reducing steps, such as reducing the rate of sending packets. For example, automatic repeat requests may keep the network in a congested state; this situation can be avoided by adding congestion avoidance to the flow control, including slow-start. This keeps the bandwidth consumption at a low level in the beginning of the transmission, or after packet retransmission.
Multiplexing: Ports can provide multiple endpoints on a single node. For example, the name on a postal address is a kind of multiplexing, and distinguishes between different recipients of the same location. Computer applications will each listen for information on their own ports, which enables the use of more than one network service at the same time. It is part of the transport layer in the TCP/IP model, but of the session layer in the OSI model.

[edit] Analysis
The transport layer is responsible for delivering data to the appropriate application process on the host computers. This involves statistical multiplexing of data from different application processes, i.e. forming data packets, and adding source and destination port numbers in the header of each transport-layer data packet. Together with the source and destination IP address, the port numbers constitutes a network socket, i.e. an identification address of the process-to-process communication. In the OSI model, this function is supported by the session layer.
Some transport-layer protocols, for example TCP, but not UDP, support virtual circuits, i.e. provide connection oriented communication over an underlying packet oriented datagram network. A byte-stream is delivered while hiding the packet mode communication for the application processes. This involves connection establishment, dividing of the data stream into packets called segments, segment numbering and reordering of out-of order data.
Finally, some transport-layer protocols, for example TCP, but not UDP, provide end-to-end reliable communication, i.e. error recovery by means of error detecting code and automatic repeat request (ARQ) protocol. The ARQ protocol also provides flow control, which may be combined with congestion avoidance.
UDP is a very simple protocol, and does not provide virtual circuits, nor reliable communication, delegating these functions to the application program. UDP packets are called datagrams, rather than segments.
TCP is used for many protocols, including HTTP web browsing and email transfer. UDP may be used for multicasting and broadcasting, since retransmissions are not possible to a large amount of hosts. UDP typically gives higher throughput and shorter latency, and is therefore often used for real-time multimedia communication where packet loss occasionally can be accepted, for example IP-TV and IP-telephony, and for online computer games.


The OSI model


7 Application layer


6 Presentation layer


5 Session layer


4 Transport layer


3 Network layer


2 Data link layer




LLC sublayer
MAC sublayer




1 Physical layer





v
t
e





In many non-IP-based networks, for example X.25, Frame Relay and ATM, the connection oriented communication is implemented at network layer or data link layer rather than the transport layer. In X.25, in telephone network modems and in wireless communication systems, reliable node-to-node communication is implemented at lower protocol layers.
The OSI model defines five classes of transport protocols: TP0, providing the least error recovery, to TP4, which is designed for less reliable networks.
[edit] Protocols
The exact definition of what qualifies as a transport-layer protocol is not firm. The following is a short list:

ATP, AppleTalk Transaction Protocol
CUDP, Cyclic UDP
DCCP, Datagram Congestion Control Protocol
FCP, Fiber Channel Protocol
IL, IL Protocol
NBF, NetBIOS Frames protocol
RDP, Reliable Datagram Protocol
SCTP, Stream Control Transmission Protocol
SPX, Sequenced Packet Exchange
SST, Structured Stream Transport
TCP, Transmission Control Protocol
UDP, User Datagram Protocol
UDP Lite
TP, Micro Transport Protocol

[edit] Comparison of transport-layer protocols


Feature Name
UDP
UDP Lite
TCP
SCTP
DCCP
RUDP


Packet header size
8 bytes
8 bytes
2060 bytes
12 bytes
12 or 16 bytes



Transport-layer packet entity
Datagram
Datagram
Segment
Datagram
Datagram
Datagram


Connection oriented
No
No
Yes
Yes
Yes
Yes


Reliable transport
No
No
Yes
Yes
No
Yes


Unreliable transport
Yes
Yes
No
Yes
Yes
Yes


Preserve message boundary
Yes
Yes
No
Yes
Yes
Yes


Ordered delivery
No
No
Yes
Yes
No
Yes


Unordered delivery
Yes
Yes
No
Yes
Yes
Yes


Data checksum
Optional
Yes
Yes
Yes
Yes
Unsure


Checksum size (bits)
16
16
16
32
16
Unsure


Partial checksum
No
Yes
No
No
Yes
No


Path MTU
No
No
Yes
Yes
Yes
Unsure


Flow control
No
No
Yes
Yes
No
Yes


Congestion control
No
No
Yes
Yes
Yes
Unsure


ECN support
No
No
Yes
Yes
Yes



Multiple streams
No
No
No
Yes
No
No


Multi-homing support
No
No
No
Yes
No
No


Bundling / Nagle
No
No
Yes
Yes
No
Unsure


NAT friendly[3]
Yes
Yes
Yes
Yes[4]
Yes
Yes


[edit] Comparison of OSI transport protocols
The OSI model defines five classes of connection-mode transport protocols designated class 0 (TP0) to class 4 (TP4). Class 0 contains no error recovery, and was designed for use on network layers that provide error-free connections. Class 4 is closest to TCP, although TCP contains functions, such as the graceful close, which OSI assigns to the session layer. All OSI connection-mode protocol classes provide expedited data and preservation of record boundaries. Detailed characteristics of the classes are shown in the following table:[5]


Service
TP0
TP1
TP2
TP3
TP4


Connection oriented network
Yes
Yes
Yes
Yes
Yes


Connectionless network
No
No
No
No
Yes


Concatenation and separation
No
Yes
Yes
Yes
Yes


Segmentation and reassembly
Yes
Yes
Yes
Yes
Yes


Error Recovery
No
Yes
No
Yes
Yes


Reinitiate connection (if an excessive number of PDUs are unacknowledged)
No
Yes
No
Yes
No


multiplexing and demultiplexing over a single virtual circuit
No
No
Yes
Yes
Yes


Explicit flow control
No
No
Yes
Yes
Yes


Retransmission on timeout
No
No
No
No
Yes


Reliable Transport Service
No
Yes
No
Yes
Yes


[edit] References


^ RFC 1122, 1.1.3. "The transport layer provides end-to-end communication services for applications."
^ RFC 1122, Requirements for Internet Hosts  Communication Layers, IETF, R. Braden (Editor), October 1989
^ RFC 3235, Network Address Translator (NAT)-Friendly Application Design Guidelines. D. Senie. January 2002.
^ Hayes, D.; But, J., Alias_sctp Version 0.2: SCTP NAT implementation in IPFW, http://caia.swin.edu.au/reports/081128A/CAIA-TR-081128A.pdf
^ "ITU-T Recommendation X.224 (11/1995) ISO/IEC 8073". http://www.itu.int/rec/T-REC-X.224-199511-I/en/.


 
NewPP limit report
Preprocessor visited node count: 2805/1000000
Preprocessor generated node count: 21363/1500000
Post-expand include size: 42585/2048000 bytes
Template argument size: 7640/2048000 bytes
Highest expansion depth: 14/40
Expensive parser function count: 0/500

 Saved in parser cache with key enwiki:pcache:idhash:146145-0!*!0!!en!*!* and timestamp 20121219060049 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Transport_layer&oldid=526444890"				
 /printfooter 
 catlinks 
Categories: Internet protocolsTransport layer protocolsOSI protocols  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 