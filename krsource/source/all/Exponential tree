
Exponential tree
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 

 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 


Exponential tree


Type
Tree


Invented
1995


Invented by
Arne Andersson


Time complexity
in big O notation



Average
Worst case


Space
O(nlogn)
O(nlogn)


Search
O(min(logn, logn/logw, loglogn, logw loglogn))
O(min(logn, logn/logw, loglogn, logw loglogn))


Insert
O(min(logn, logn/logw, loglogn, logw loglogn))
O(min(logn, logn/logw, loglogn, logw loglogn))


Delete
O(min(logn, logn/logw, loglogn, logw loglogn))
O(min(logn, logn/logw, loglogn, logw loglogn))


An exponential tree is almost identical to a binary search tree, with the exception that the dimension of the tree is not the same at all levels. In a normal binary search tree, each node has a dimension (d) of 1, and has 2d children. In an exponential tree, the dimension equals the depth of the node, with the root node having a d=1. So the second level can hold two nodes, the third can hold eight nodes, the fourth 64 nodes, and so on.
[edit] Layout
"Exponential Tree" can also refer to a method of laying out the nodes of a tree structure in n (typically 2) dimensional space. Nodes are placed closer to a baseline than their parent node, by a factor equal to the number of child nodes of that parent node (or by some sort of weighting), and scaled according to how close they are. Thus, no matter how "deep" the tree may be, there is always room for more nodes, and the geometry of a subtree is unrelated to its position in the whole tree. The whole has a fractal structure.
In fact, this method of laying out a tree can be viewed as an application of the upper half-plane model of hyperbolic geometry, with isometries limited to translations only.

[edit] See also

Faster deterministic sorting and searching in linear space (Original paper from '95)
http://www.parc.xerox.com/csl/groups/sda/publications/papers/Lamping-UIST94/for-web.pdf [link not working]
Implementation and Performance Analysis of Exponential Tree Sorting









v
t
e


Trees in computer science






Binary trees



Binary search tree (BST)
Cartesian tree
MVP Tree
Top tree
T-tree








Self-balancing binary search trees



AA tree
AVL tree
LLRB tree
Redblack tree
Scapegoat tree
Splay tree
Treap








B-trees



B+ tree
B*-tree
Bx-tree
UB-tree
2-3 tree
2-3-4 tree
(a,b)-tree
Dancing tree
Htree








Tries



Suffix tree
Radix tree
Ternary search tree
X-fast trie
Y-fast trie








Binary space partitioning (BSP) trees



Quadtree
Octree
k-d tree
Implicit k-d tree
VP tree








Non-binary trees



Exponential tree
Fusion tree
Interval tree
PQ tree
Range tree
SPQR tree
Van Emde Boas tree








Spatial data partitioning trees



R-tree
R+ tree
R* tree
X-tree
M-tree
Segment tree
Hilbert R-tree
Priority R-tree








Other trees



Heap
Hash calendar
Hash tree
Finger tree
Order statistic tree
Metric tree
Cover tree
BK-tree
Doubly chained tree
iDistance
Link-cut tree
Fenwick tree











This algorithms or data structures-related article is a stub. You can help Wikipedia by expanding it.


v
t
e





 
NewPP limit report
Preprocessor visited node count: 765/1000000
Preprocessor generated node count: 8825/1500000
Post-expand include size: 22327/2048000 bytes
Template argument size: 4990/2048000 bytes
Highest expansion depth: 13/40
Expensive parser function count: 0/500

 Saved in parser cache with key enwiki:pcache:idhash:572903-0!*!0!!*!4!* and timestamp 20130123072835 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Exponential_tree&oldid=532624246"				
 /printfooter 
 catlinks 
Categories: ExponentialsTrees (data structures)Algorithms and data structures stubsHidden categories: WikiProject Computer science stubs  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 