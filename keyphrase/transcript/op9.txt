An operating System (OS) is an intermediary between users and computer hardware. It provides users an environment in which a user can execute programs conveniently and efficiently. In technical terms, it is software which manages hardware. An operating System controls the allocation of resources and services such as memory, processors, devices and information. Definition An operating system is a program that acts as an interface between the user and the computer hardware and controls the execution of all kinds of programs.     Following are some of important functions of an operating System. * Memory Management * Processor Management * Device Management * File Management * Security * Control over system performance * Job accounting * Error detecting aids * Coordination between other software and users Memory Management Memory management refers to management of Primary Memory or Main Memory. Main memory is a large array of words or bytes where each word or byte has its own address. Main memory provides a fast storage that can be access directly by the CPU. So for a program to be executed, it must in the main memory. Operating System does the following activities for memory management. * Keeps tracks of primary memory i.e. what part of it are in use by whom, what part are not in use. * In multiprogramming, OS decides which process will get memory when and how much. * Allocates the memory when the process requests it to do so. * De-allocates the memory when the process no longer needs it or has been terminated. Processor Management In multiprogramming environment, OS decides which process gets the processor when and how much time. This function is called process scheduling. Operating System does the following activities for processor management. * Keeps tracks of processor and status of process. Program responsible for this task is known as traffic controller. * Allocates the processor (CPU) to a process. * De-allocates processor when processor is no longer required.     3 Device Management OS manages device communication via their respective drivers. Operating System does the following activities for device management. * Keeps tracks of all devices. Program responsible for this task is known as the I/O controller. * Decides which process gets the device when and for how much time. * Allocates the device in the efficient way. * De-allocates devices. File Management A file system is normally organized into directories for easy navigation and usage. These directories may contain files and other directions. Operating System does the following activities for file management. * Keeps track of information, location, uses, status etc. The collective facilities are often known as file system. * Decides who gets the resources. * Allocates the resources. * De-allocates the resources. Other Important Activities Following are some of the important activities that Operating System does. * Security -- By means of password and similar other techniques, preventing unauthorized access to programs and data. * Control over system performance -- Recording delays between request for a service and response from the system. * Job accounting -- Keeping track of time and resources used by various jobs and users. * Error detecting aids -- Production of dumps, traces, error messages and other debugging and error detecting aids. * Coordination between other software and users -- Coordination and assignment of compilers, interpreters, assemblers and other software to the various users of the computer systems.     4 Types of Operating Systems This section describes various types of Operating Systems. Operating systems are there from the very first computer generation. Operating systems keep evolving over the period of time. Following are few of the important types of operating system which are most commonly used. Batch operating system The users of batch operating system do not interact with the computer directly. Each user prepares his job on an off-line device like punch cards and submits it to the computer operator. To speed up processing, jobs with similar needs are batched together and run as a group. Thus, the programmers left their programs with the operator. The operator then sorts programs into batches with similar requirements. The problems with Batch Systems are following. * Lack of interaction between the user and job. * CPU is often idle, because the speeds of the mechanical I/O devices are slower than CPU. * Difficult to provide the desired priority.        5 Time-sharing operating systems Time sharing is a technique which enables many people, located at various terminals, to use a particular computer system at the same time. Time-sharing or multitasking is a logical extension of multiprogramming. Processor's time which is shared among multiple users simultaneously is termed as time-sharing. The main difference between Multiprogrammed Batch Systems and Time-Sharing Systems is that in case of multiprogrammed batch systems, objective is to maximize processor use, whereas in Time-Sharing Systems objective is to minimize response time. Multiple jobs are executed by the CPU by switching between them, but the switches occur so frequently. Thus, the user can receive an immediate response. For example, in a transaction processing, processor execute each user program in a short burst or quantum of computation. That is if n users are present, each user can get time quantum. When the user submits the command, the response time is in few seconds at most. Operating system uses CPU scheduling and multiprogramming to provide each user with a small portion of a time. Computer systems that were designed primarily as batch systems have been modified to time-sharing systems. Advantages of Timesharing operating systems are following * Provide advantage of quick response. * Avoids duplication of software. * Reduces CPU idle time. Disadvantages of Timesharing operating systems are following. * Problem of reliability. * Question of security and integrity of user programs and data. * Problem of data communication.     6 Distributed operating System Distributed systems use multiple central processors to serve multiple real time application and multiple users. Data processing jobs are distributed among the processors accordingly to which one can perform each job most efficiently. The processors communicate with one another through various communication lines (such as high-speed buses or telephone lines). These are referred as loosely coupled systems or distributed systems. Processors in a distributed system may vary in size and function. These processors are referred as sites, nodes, and computers and so on. The advantages of distributed systems are following. * With resource sharing facility user at one site may be able to use the resources available at another. * Speedup the exchange of data with one another via electronic mail. * If one site fails in a distributed system, the remaining sites can potentially continue operating. * Better service to the customers. * Reduction of the load on the host computer. * Reduction of delays in data processing.     7 Network operating System Network Operating System runs on a server and and provides server the capability to manage data, users, groups, security, applications, and other networking functions. The primary purpose of the network operating system is to allow shared file and printer access among multiple computers in a network, typically a local area network (LAN), a private network or to other networks. Examples of network operating systems are Microsoft Windows Server 2003, Microsoft Windows Server 2008, UNIX, Linux, Mac OS X, Novell NetWare, and BSD. The advantages of network operating systems are following. * Centralized servers are highly stable. * Security is server managed. * Upgrades to new technologies and hardware can be easily integrated into the system. * Remote access to servers is possible from different locations and types of systems. The disadvantages of network operating systems are following. * High cost of buying and running a server. * Dependency on a central location for most operations. * Regular maintenance and updates are required.     8 Real Time operating System Real time system is defines as a data processing system in which the time interval required to process and respond to inputs is so small that it controls the environment. Real time processing is always on line whereas on line system need not be real time. The time taken by the system to respond to an input and display of required updated information is termed as response time. So in this method response time is very less as compared to the online processing. Real-time systems are used when there are rigid time requirements on the operation of a processor or the flow of data and real-time systems can be used as a control device in a dedicated application. Real-time operating system has well-defined, fixed time constraints otherwise system will fail. For example Scientific experiments, medical imaging systems, industrial control systems, weapon systems, robots, and home-appliance controllers, Air traffic control system etc. There are two types of real-time operating systems. Hard real-time systems Hard real-time systems guarantee that critical tasks complete on time. In hard real-time systems secondary storage is limited or missing with data stored in ROM. In these systems virtual memory is almost never found. Soft real-time systems Soft real time systems are less restrictive. Critical real-time task gets priority over other tasks and retains the priority until it completes. Soft real-time systems have limited utility than hard realtime systems. For example, Multimedia, virtual reality, Advanced Scientific Projects like undersea exploration and planetary rovers etc.
