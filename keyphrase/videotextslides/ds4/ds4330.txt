Row 1::Height 2::another solution
Row 2::Height 1::can do better, with a hash table --o(1) expected
Row 3::Height 1::time, o(n+m) space, where m is table size
Row 4::Height 1::like an array, but come up with a fraction to map
Row 5::Height 1::the large range into one which we can manage
Row 6::Height 1::e.g.,take the original key, modulo the (relatively)
Row 7::Height 1::small) size of the array, and use that as an index
Row 8::Height 1::insert (9635-8904, ankur) into a hashed array
Row 9::Height 1::with, say, five slots. 96358904 mod 5=4
