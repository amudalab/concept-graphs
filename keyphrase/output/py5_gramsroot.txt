introduction to computer::introduction to computer
computer programming summer::computer programming summer
marek janicki june::marek janicki june
assignment at office::assignment at office
tuesday that week::tuesday that week
week the midterm::week the midterm
regular lecture room::regular lecture room
lecture room june::lecture room june
class who requires::class who requires
requires a volunteer::requires a volunteer
disability by signing::disability by signing
posting your notes::posting your notes
make a significant::make a significant
individual s capacity::individual s capacity
person to accessibility::person to accessibility
huron st suite::huron st suite
notice the quality::notice the quality
improves through volunteering::improves through volunteering
receive a certificate::receive a certificate
certificate of recognition::certificate of recognition
change an immutable::change an immutable
lot of work::lot of work
things like ints::things like ints
ints and strings::ints and strings
takes a lot::takes a lot
things like images::things like images
object without keeping::object without keeping
keeping the original::keeping the original
making a big::making a big
tossing the rest::tossing the rest
rest is wasteful::rest is wasteful
allowed to change::allowed to change
functions that change::functions that change
ints are immutable::ints are immutable
aliasing let pic::aliasing let pic
sets the green::sets the green
pics are mutable::pics are mutable
show a picture::show a picture
aliasing and functions::aliasing and functions
calls a function::calls a function
bunch of assignment::bunch of assignment
parameters are assigned::parameters are assigned
local variable refers::local variable refers
functions can change::functions can change
change mutable objects::change mutable objects
immutable ones june::immutable ones june
slow in high-dimensional::slow in high-dimensional
high-dimensional spaces python::high-dimensional spaces python
grouping similar items::grouping similar items
i-1 because lists::i-1 because lists
lists are indexed::lists are indexed
element list named::element list named
list named list_name::list named list_name
lists are mutable::lists are mutable
index into lists::index into lists
lists are heterogeneous::lists are heterogeneous
lists themselves june::lists themselves june
functions and methods::functions and methods
returns the length::returns the length
return the min::return the min
min and max::min and max
returns the sum::returns the sum
sum of elements::sum of elements
numbered not defined::numbered not defined
defined for lists::defined for lists
lists of strings::lists of strings
adds the value::adds the value
sorts the list::sorts the list
inserts the element::inserts the element
index specified remove::index specified remove
removes the first::removes the first
instance of value::instance of value
counts the number::counts the number
number of instances::number of instances
instances of value::instances of value
looping over lists::looping over lists
loops for item::loops for item
item in list::item in list
item = list::item = list
tricky with immutable::tricky with immutable
objects for item::objects for item
item is immutable::item is immutable
alter the list::alter the list
returns an ordered::returns an ordered
list of ints::list of ints
j-1 inclusive range::j-1 inclusive range
returns a list::returns a list
ints so range::ints so range
modify a list::modify a list
element by element::element by element
makes a list::makes a list
beginning to j-1::beginning to j-1
worried about aliasing::worried about aliasing
make a tuple::make a tuple
items are referenced::items are referenced
referenced by tuple_name::referenced by tuple_name
single element tuples::single element tuples
strings revisted strings::strings revisted strings
tuples of individual::tuples of individual
strings can reference::strings can reference
reference individual characters::reference individual characters
characters by string::characters by string
defined on strings::defined on strings
string methods revisted::string methods revisted
index into strings::index into strings
string methods find::string methods find
give the index::give the index
matching the substring::matching the substring
character exists rfind::character exists rfind
lists because lists::lists because lists
lists of lists::lists of lists
represent a grid::represent a grid
grid or higher::grid or higher
higher dimenstional space::higher dimenstional space
elements by list_name::elements by list_name
item in list_name::item in list_name
item2 in item::item2 in item
err..complete the questions::err..complete the questions
spaces in program::NNS in program
code snippets represents::code snippets represents
represents a common::represents a common
common error made::common error made
introductory programming student::introductory programming student
ripped these errors::ripped these errors
introductory programming website::introductory programming website
code snippet program::code snippet program
snippet program text::snippet program text
sentence " my_list::sentence " my_list
my_string to lowercase::my_string to lowercase
lowercase program text::lowercase program text
print every element::print every element
element in my_list::element in my_list
my_list in reverse::my_list in reverse
reverse order program::reverse order program
order program text::order program text
reverse the order::reverse the order
order of elements::order of elements
elements in my_list::elements in my_list
my_list program text::my_list program text
add the resulting::add the resulting
value to my_list::value to my_list
string program text::string program text
bigger_input = user_input::bigger_input = user_input
create a backup::create a backup
copy of my_list::copy of my_list
remove the largest::remove the largest
element from my_list::element from my_list
new_list = my_list::new_list = my_list
finds the position::finds the position
function always returns::function always returns
returns the correct::returns the correct
correct value program::correct value program
value program text::value program text
prints all elements::prints all elements
elements of my_list::elements of my_list
finds the largest::finds the largest
list program text::list program text
integer in list::integer in list
list assumes list::list assumes list
return i return::return i return
return max page::return max page
names ! disclaimer::names ! disclaimer
style in subsequent::style in subsequent
meaningful variable names::meaningful variable names
names every variable::names every variable
variable is created::variable is created
reflect the values::reflect the values
values you choose::values you choose
choose to store::choose to store
find the bug::find the bug
code the function::code the function
function should swap::function should swap
swap the maximum::swap the maximum
maximum and minimum::maximum and minimum
swap_max_min max_position temp::swap_max_min max_position temp
max_position temp list::max_position temp list
temp list min_position::temp list min_position
list min_position answer::list min_position answer
written a function::written a function
function that calculates::function that calculates
calculates the square::calculates the square
write a square::write a square
square root function::square root function
program that controls::program that controls
kind of important::kind of important
function works correctly::function works correctly
works correctly staring::works correctly staring
write a couple::write a couple
couple of test::couple of test
cases to make::cases to make
works program text::works program text
returns the square::returns the square
root of num::root of num
print " test::print " test
built-in zip function::built-in zip function
function to make::function to make
make the last::make the last
last three lines::last three lines
complete our testing::complete our testing
variety of test::variety of test
cases in order::cases in order
order to catch::order to catch
test every random::test every random
made a big::made a big
fact that lists::fact that lists
mutable the reason::mutable the reason
objects are immutable::objects are immutable
primitives like integers::primitives like integers
integers and booleans::integers and booleans
object is immutable::object is immutable
variables are pointing::variables are pointing
two different strings::two different strings
meaning this revelation::meaning this revelation
strings have member::strings have member
functions for strings::functions for strings
variable table day::variable table day
functions in lists::functions in lists
modified the list::modified the list
return value strings::return value strings
strings are immutable::strings are immutable
string member functions::string member functions
member functions work::member functions work
work it turns::work it turns
out that member::out that member
functions of strings::functions of strings
tend to return::tend to return
print message message.lower::print message message.lower
effect print message::effect print message
print message message::print message message
message = message.lower::message = message.lower
print message output::print message output
function that converts::function that converts
converts a string::converts a string
string into lowercase::string into lowercase
python quick reference::python quick reference
quick reference website::quick reference website
reference website shown::reference website shown
shown in class::shown in class
reminder before starting::reminder before starting
completely different characters::completely different characters
functions that manipulate::functions that manipulate
generally a good::generally a good
idea to deal::idea to deal
functions that return::functions that return
string ­ str.capitalize::string ­ str.capitalize
returns a copy::returns a copy
copy of str::copy of str
converted to uppercase::converted to uppercase
lowercase ­ str.strip::lowercase ­ str.strip
beginning and end::beginning and end
test " .strip::test " .strip
functions which return::functions which return
string ­ str.count::string ­ str.count
returns the number::returns the number
number of times::number of times
times substring appears::times substring appears
appears within str::appears within str
str ­ str.find::str ­ str.find
returns the position::returns the position
instance of substring::instance of substring
substring within str::substring within str
str rfind returns::str rfind returns
substring ­ s.startswith::substring ­ s.startswith
ends with substring::ends with substring
functions which transform::functions which transform
transform the string::transform the string
types ­ str.split::types ­ str.split
list of words::list of words
words in str::words in str
mississippi " .split::mississippi " .split
tricky it takes::tricky it takes
takes a list::takes a list
list of strings::list of strings
seq and combines::seq and combines
string each element::string each element
element in seq::element in seq
seq is separated::seq is separated
separated by separator::separated by separator
world " day::world " day
counterpart of lists::counterpart of lists
unlike a list::unlike a list
tuple as multi-dimensional::tuple as multi-dimensional
store an integer::store an integer
store a two-dimensional::store a two-dimensional
develop an instinct::develop an instinct
tuples versus lists::tuples versus lists
creates the tuple::creates the tuple
tuple with elements::tuple with elements
tuples are ordered::tuples are ordered
ples of sequences::ples of sequences
nything e syntax::nything e syntax
syntax e item::syntax e item
sequence eq ring::sequence eq ring
e.g plus operator::e.g plus operator
ach ch pic::ach ch pic
stored a sequence::stored a sequence
sequence of items::sequence of items
store a table::store a table
create a singleton::create a singleton
tuples in tuples::tuples in tuples
strings and tuples::strings and tuples
exa he case::exa he case
case of strings::case of strings
nt an official::nt an official
similar in fact::similar in fact
return t returns::return t returns
returns the equence::returns the equence
sequence for strings::sequence for strings
dat es store::dat es store
completely different types::completely different types
equal to combine::equal to combine
combine two sequences::combine two sequences
data where lists::data where lists
integer also note::integer also note
formats using str::formats using str
tuples ! note::tuples ! note
sequence notation lists::sequence notation lists
examples of sequences::examples of sequences
series of ordered::series of ordered
sequence of characters::sequence of characters
syntax ­ indexing::syntax ­ indexing
return the item::return the item
position ­ length::position ­ length
sequence ­ slicing::sequence ­ slicing
seq is true::seq is true
item of seq::item of seq
seq is equal::seq is equal
e.g " ello::e.g " ello
true ­ concatenation::true ­ concatenation
operator to combine::operator to combine
e.g " yay::e.g " yay
loops we learned::loops we learned
works on lists::works on lists
last major topic::last major topic
dictionaries like lists::dictionaries like lists
note that dictionaries::note that dictionaries
dictionaries are considered::dictionaries are considered
matter what order::matter what order
order we list::order we list
call the names::call the names
primitives and immutable::primitives and immutable
remember that dictionaries::remember that dictionaries
fact that dictionaries::fact that dictionaries
dictionaries are unordered::dictionaries are unordered
creates an empty::creates an empty
table the amount::table the amount
amount of spacing::amount of spacing
irrelevant ­ len::irrelevant ­ len
works on dictionaries::works on dictionaries
find the number::find the number
number of entries::number of entries
dictionary has length::dictionary has length
access or change::access or change
change a value::change a value
two identical keys::two identical keys
keys  writing::keys  writing
change the value::change the value
dictionary with identical::dictionary with identical
remove that entry::remove that entry
entry with key::entry with key
dictionary member functions::dictionary member functions
dictionaries have member::dictionaries have member
removes all items::removes all items
removes the entry::removes the entry
function also returns::function also returns
returns the value::returns the value
loops and dictionaries::loops and dictionaries
loops with dictionaries::loops with dictionaries
dictionaries for loops::dictionaries for loops
loops will iterate::loops will iterate
computer programming::computer programming
programming summer::programming summer
marek janicki::marek janicki
janicki june::janicki june
office hours::office hours
hours assignment::hours assignment
held monday::held monday
held june::held june
regular lecture::regular lecture
lecture room::lecture room
room june::room june
volunteer note-taker::volunteer note-taker
volunteer notetaker::volunteer notetaker
significant difference::significant difference
accessibility services::accessibility services
students notice::students notice
notetaking improves::notetaking improves
recognition june::recognition june
immutable objects::immutable objects
nt change::nt change
immutable object::immutable object
small things::small things
large things::large things
images june::images june
mutable objects::mutable objects
large object::large object
big copy::big copy
mutable object::mutable object
define functions::define functions
change objects::change objects
immutable june::immutable june
initialised picture::initialised picture
green june::green june
assignment statements::assignment statements
local variables::local variables
local variable::local variable
variable refers::variable refers
first june::first june
lists recall::lists recall
high-dimensional spaces::high-dimensional spaces
spaces python::spaces python
similar items::similar items
list denoted::list denoted
i-th element::i-th element
element list::element list
list named::list named
named list_name::named list_name
mutable june::mutable june
empty list::empty list
back list_name::back list_name
back lists::back lists
functions lists::functions lists
methods len::methods len
list min::list min
defined sum::defined sum
re numbered::re numbered
strings june::strings june
methods append::methods append
list sort::list sort
consistent notions::consistent notions
element value::element value
first instance::first instance
value count::value count
list june::list june
similar operation::similar operation
list python::list python
block item::block item
lists loops::lists loops
list elements::list elements
function range::function range
ordered list::ordered list
ints ranging::ints ranging
i-1 range::i-1 range
inclusive range::inclusive range
list element::list element
block june::block june
list slicing::list slicing
perform operations::perform operations
aliasing carelessness::aliasing carelessness
tuple tuple_name::tuple tuple_name
single element::single element
element tuples::element tuples
avoid ambiguity::avoid ambiguity
strings revisted::strings revisted
revisted strings::revisted strings
considered tuples::considered tuples
individual characters::individual characters
list knowlege::list knowlege
characters min::characters min
slice strings::slice strings
lists june::lists june
string methods::string methods
methods revisted::methods revisted
methods find::methods find
first character::first character
character exists::character exists
exists rfind::exists rfind
right find::right find
nested lists::nested lists
higher dimenstional::higher dimenstional
dimenstional space::dimenstional space
reference elements::reference elements
nested loops::nested loops
block csc::block csc
block page::block page
worksheet session::worksheet session
program text::program text
common errors::common errors
code snippets::code snippets
snippets represents::snippets represents
common error::common error
error made::error made
introductory programming::introductory programming
programming student::programming student
programming website::programming website
wrong assume::wrong assume
definitions occur::definitions occur
code snippet::code snippet
snippet program::snippet program
convert my_string::convert my_string
lowercase program::lowercase program
reverse order::reverse order
order program::order program
my_list program::my_list program
my_list.reverse answer::my_list.reverse answer
string representation::string representation
number entered::number entered
resulting value::resulting value
string program::string program
backup copy::backup copy
largest element::largest element
my_list my_list.remove::my_list my_list.remove
function finds::function finds
last instance::last instance
list hints::list hints
syntax errors::syntax errors
correct value::correct value
value program::value program
def rindex::def rindex
last occurrence::last occurrence
return len::return len
my_ list::my_ list
list program::list program
def find_max::def find_max
largest integer::largest integer
list assumes::list assumes
assumes list::assumes list
positive integers::positive integers
max page::max page
meaningful names::meaningful names
bit exaggerated::bit exaggerated
programming style::programming style
subsequent courses::subsequent courses
meaningful variable::meaningful variable
variable names::variable names
introductory student::introductory student
class imagine::class imagine
minimum elements::minimum elements
list well..maybe::list well..maybe
swap_max_min max_position::swap_max_min max_position
max_position temp::max_position temp
temp list::temp list
list min_position::list min_position
min_position answer::min_position answer
test cases::test cases
square root::square root
negative number::negative number
function returns::function returns
root function::root function
larger program::larger program
function works::function works
works correctly::works correctly
works program::works program
assume sqrt_3::assume sqrt_3
def custom_sqrt::def custom_sqrt
code snipped::code snipped
test case::test case
built-in zip::built-in zip
zip function::zip function
point fill::point fill
testing code::testing code
unique cases::unique cases
wide variety::wide variety
random number::random number
delicate balance::delicate balance
notes session::notes session
big deal::big deal
changed strings::changed strings
treated strings::treated strings
member functions::member functions
variable table::variable table
table day::table day
strings revisited::strings revisited
lists modified::lists modified
return value::return value
value strings::value strings
string member::string member
functions work::functions work
strings tend::strings tend
print message::print message
message message.lower::message message.lower
effect print::effect print
message message::message message
message output::message output
string functions::string functions
python quick::python quick
quick reference::quick reference
reference website::reference website
website shown::website shown
quick reminder::quick reminder
writing functions::writing functions
manipulate strings::manipulate strings
good idea::good idea
single case::single case
letters converted::letters converted
string removed::string removed
string replaced::string replaced
return information::return information
times substring::times substring
substring appears::substring appears
str rfind::str rfind
rfind returns::rfind returns
string starts::string starts
true functions::true functions
delimiter string::delimiter string
strings seq::strings seq
returned string::returned string
tuples tuples::tuples tuples
immutable counterpart::immutable counterpart
multi-dimensional data::multi-dimensional data
two-dimensional coordinate::two-dimensional coordinate
versus lists::versus lists
create tuples::create tuples
elements ered::elements ered
characters nything::characters nything
integer ach::integer ach
lists stored::lists stored
dictionaries store::dictionaries store
nest tuples::nest tuples
ree elements::ree elements
sequen sequence::sequen sequence
official term::official term
last major::last major
list similarl::list similarl
ordered items::ordered items
store data::store data
dictionar page::dictionar page
singleton tuple::singleton tuple
elements notation::elements notation
section day::section day
sequence notation::sequence notation
notation lists::notation lists
characters sequence::characters sequence
indexing seq::indexing seq
length len::length len
slice sequences::slice sequences
sliced lists::sliced lists
returns true::returns true
operator works::operator works
string day::string day
major topic::major topic
table page::table page
list entries::list entries
left keys::left keys
right values::right values
store primitives::store primitives
e.g lists::e.g lists
dictionary notation::dictionary notation
curly braces::curly braces
empty dictionary::empty dictionary
index notation::index notation
print example_dict::print example_dict
identical keys::identical keys
writing example_dict::writing example_dict
make sense::make sense
identical values::identical values
del example_dict::del example_dict
false day::false day
dictionary member::dictionary member
dictionaries remember::dictionaries remember
csc::csc
108h::108h
introduction::introduction
computer::computer
programming::programming
summer::summer
marek::marek
janicki::janicki
june::june
administration::administration
clear::clear
questions::questions
assignment::assignment
office::office
hours::hours
last::last
out::out
weekend::weekend
deadline::deadline
moved::moved
27th::27th
held::held
monday::monday
tuesday::tuesday
week::week
midterm::midterm
30th::30th
regular::regular
lecture::lecture
room::room
request::request
volunteer::volunteer
note-taker::note-taker
student::student
class::class
requires::requires
notetaker::notetaker
accommodation::accommodation
disability::disability
signing::signing
posting::posting
notes::notes
make::make
significant::significant
difference::difference
individual::individual
capacity::capacity
fully::fully
participate::participate
http::http
person::person
accessibility::accessibility
services::services
huron::huron
suite::suite
students::students
notice::notice
quality::quality
notetaking::notetaking
improves::improves
volunteering::volunteering
receive::receive
certificate::certificate
recognition::recognition
immutable::immutable
objects::objects
ve::ve
nt::nt
change::change
making::making
int::int
throw::throw
object::object
lot::lot
work::work
identical::identical
small::small
things::things
ints::ints
strings::strings
takes::takes
large::large
images::images
mutable::mutable
keeping::keeping
original::original
big::big
copy::copy
modifying::modifying
tossing::tossing
rest::rest
wasteful::wasteful
re::re
allowed::allowed
define::define
functions::functions
return::return
aliasing::aliasing
print::print
screen::screen
pic::pic
initialised::initialised
picture::picture
sets::sets
green::green
pixel::pixel
media.set_green::media.set_green
pixel,0::pixel,0
media.show::media.show
pics::pics
show::show
calls::calls
function::function
effectively::effectively
beginning::beginning
bunch::bunch
statements::statements
parameters::parameters
assigned::assigned
local::local
variables::variables
variable::variable
refers::refers
break::break
first::first
lists::lists
recall::recall
co-ordinate::co-ordinate
annoying::annoying
easily::easily
slow::slow
high-dimensional::high-dimensional
spaces::spaces
python::python
grouping::grouping
similar::similar
items::items
list::list
denoted::denoted
list_name::list_name
list_elt0::list_elt0
list_elt1::list_elt1
list_eltn::list_eltn
i-th::i-th
element::element
i-1::i-1
indexed::indexed
means::means
elements::elements
named::named
empty::empty
index::index
back::back
returns::returns
heterogeneous::heterogeneous
type::type
lots::lots
methods::methods
len::len
length::length
min::min
max::max
long::long
defined::defined
sum::sum
numbered::numbered
append::append
value::value
adds::adds
end::end
sort::sort
sorts::sorts
consistent::consistent
notions::notions
insert::insert
inserts::inserts
remove::remove
removes::removes
instance::instance
count::count
counts::counts
number::number
instances::instances
looping::looping
operation::operation
loops::loops
item::item
block::block
equivalent::equivalent
tricky::tricky
alter::alter
indices::indices
range::range
ordered::ordered
ranging::ranging
i,j::i,j
j-1::j-1
inclusive::inclusive
i,j,k::i,j,k
step::step
i,k::i,k
i,k,1::i,k,1
modify::modify
slicing::slicing
perform::perform
operations::operations
sublist::sublist
makes::makes
aliased::aliased
tuples::tuples
worried::worried
carelessness::carelessness
tuple::tuple
tuple_name::tuple_name
item0,item1,item2::item0,item1,item2,
referenced::referenced
single::single
avoid::avoid
ambiguity::ambiguity
revisted::revisted
considered::considered
characters::characters
knowlege::knowlege
gained::gained
apply::apply
reference::reference
string::string
heterogenous::heterogenous
slice::slice
find::find
substring::substring
give::give
character::character
matching::matching
left::left
exists::exists
rfind::rfind
right::right
substring,i,j::substring,i,j
nested::nested
matrices::matrices
represent::represent
grid::grid
higher::higher
dimenstional::dimenstional
space::space
naturally::naturally
loop::loop
item2::item2
page::page
worksheet::worksheet
session::session
administrivia::administrivia
instructions::instructions
err..complete::err..complete
calculators::calculators
laptops::laptops
output::output
write::write
spaces::NNS
program::program
text::text
problem::problem
common::common
errors::errors
code::code
snippets::snippets
represents::represents
error::error
made::made
introductory::introductory
ripped::ripped
website::website
wrong::wrong
assume::assume
definitions::definitions
occur::occur
snippet::snippet
my_string::my_string
sentence::sentence
my_list::my_list
4,2,6,8::4,2,6,8
user_input::user_input
my_integer::my_integer
convert::convert
lowercase::lowercase
my_string.lower::my_string.lower
answer::answer
reverse::reverse
order::order
my_list.reverse::my_list.reverse
representation::representation
entered::entered
user::user
multiply::multiply
add::add
resulting::resulting
bigger_input::bigger_input
my_list.append::my_list.append
create::create
backup::backup
largest::largest
new_list::new_list
my_list.remove::my_list.remove
finds::finds
position::position
hints::hints
syntax::syntax
correct::correct
def::def
rindex::rindex
occurrence::occurrence
prints::prints
my_::my_
find_max::find_max
integer::integer
assumes::assumes
positive::positive
integers::integers
meaningful::meaningful
names::names
disclaimer::disclaimer
bit::bit
exaggerated::exaggerated
learn::learn
style::style
subsequent::subsequent
courses::courses
thing::thing
imprint::imprint
created::created
reason::reason
reflect::reflect
values::values
choose::choose
store::store
written::written
imagine::imagine
bug::bug
stuff::stuff
elif::elif
task::task
swap::swap
maximum::maximum
minimum::minimum
well..maybe::well..maybe
swap_max_min::swap_max_min
max_position::max_position
temp::temp
min_position::min_position
test::test
cases::cases
calculates::calculates
square::square
root::root
negative::negative
don::don
larger::larger
controls::controls
robot::robot
kind::kind
important::important
works::works
correctly::correctly
staring::staring
minutes::minutes
solution..instead::solution..instead
couple::couple
sq_3::sq_3
sqrt_3::sqrt_3
initialized::initialized
test_cases::test_cases
_____::_____
test_case_answers::test_case_answers
custom_sqrt::custom_sqrt
num::num
snipped::snipped
case::case
failed::failed
note::note
built-in::built-in
zip::zip
lines::lines
prettier::prettier
point::point
fill::fill
blanks::blanks
complete::complete
testing::testing
unique::unique
1,2,3,4,5,6::1,2,3,4,5,6
gave::gave
wide::wide
variety::variety
catch::catch
bugs::bugs
random::random
delicate::delicate
balance::balance
day::day
earlier::earlier
deal::deal
fact::fact
changed::changed
prime::prime
treated::treated
primitives::primitives
booleans::booleans
matter::matter
two::two
pointing::pointing
treat::treat
meaning::meaning
revelation::revelation
member::member
easiest::easiest
directly::directly
stored::stored
table::table
revisited::revisited
modified::modified
turns::turns
tend::tend
message::message
message.lower::message.lower
effect::effect
lower::lower
converts::converts
memorize::memorize
remember::remember
quick::quick
shown::shown
reminder::reminder
starting::starting
completely::completely
writing::writing
manipulate::manipulate
generally::generally
good::good
idea::idea
str.capitalize::str.capitalize
str.lower::str.lower
str::str
letters::letters
converted::converted
uppercase::uppercase
str.strip::str.strip
whitespace::whitespace
spaces::newlines
removed::removed
.strip::.strip
str.replace::str.replace
old,new::old,new
replaced::replaced
hallo::hallo
.replace::.replace
ell::ell
information::information
str.count::str.count
times::times
appears::appears
str.find::str.find
str.rfind::str.rfind
s.startswith::s.startswith
str.endswith::str.endswith
true::true
starts::starts
ends::ends
.startswith::.startswith
false::false
.endswith::.endswith
transform::transform
types::types
str.split::str.split
separator::separator
words::words
delimiter::delimiter
world::world
mihir::mihir
.split::.split
mississippi::mississippi
ippi::ippi
separator.join::separator.join
seq::seq
combines::combines
separated::separated
returned::returned
.join::.join
counterpart::counterpart
unlike::unlike
multi-dimensional::multi-dimensional
data::data
two-dimensional::two-dimensional
coordinate::coordinate
6,-3::6,-3
ll::ll
develop::develop
instinct::instinct
versus::versus
continue::continue
easier::easier
parentheses::parentheses
1,3,8::1,3,8
creates::creates
expect::expect
1,3::1,3
3,1::3,1
uple::uple
formats::formats
teger::teger
ered::ered
ples::ples
sequences::sequences
nything::nything
sequence::sequence
ring::ring
e.g::e.g
operator::operator
ach::ach
dictionaries::dictionaries
singleton::singleton
mer::mer
4,6::4,6
nest::nest
ree::ree
exa::exa
sequen::sequen
official::official
term::term
share::share
equence::equence
eck::eck
learned::learned
iterates::iterates
major::major
dat::dat
similarl::similarl
equal::equal
combine::combine
dictionarie::dictionarie
dictionar::dictionar
tup::tup
notation::notation
similarly::similarly
1,2::1,2
1,2,3::1,2,3
covered::covered
section::section
examples::examples
series::series
observation::observation
thes::thes
indexing::indexing
sliced::sliced
hel::hel
operators::operators
check::check
ello::ello
concatenation::concatenation
duplicate::duplicate
yay::yay
topic::topic
unordered::unordered
entries::entries
call::call
keys::keys
dictionary::dictionary
intuitive::intuitive
fundamentally::fundamentally
curly::curly
braces::braces
example_dict::example_dict
amount::amount
spacing::spacing
colon::colon
irrelevant::irrelevant
access::access
implies::implies
mapped::mapped
sense::sense
del::del
entry::entry
key::key
d.clear::d.clear
d.copy::d.copy
d.pop::d.pop
iterate::iterate
