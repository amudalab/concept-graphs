brindha computer architecture::brindha computer architecture
computer architecture prof::computer architecture prof
architecture prof anshul::architecture prof anshul
prof anshul kumar::prof anshul kumar
anshul kumar department::anshul kumar department
department of computer::department of computer
science and engineering::science and engineering
engineering iit delhi::engineering iit delhi
iit delhi lecture::iit delhi lecture
control for multi::control for multi
multi cycle design::multi cycle design
processor where execution::processor where execution
instruction is divided::instruction is divided
divided into multiple::divided into multiple
multiple clock cycles::multiple clock cycles
path is designed::path is designed
designed and today::designed and today
sequence of lectures::sequence of lectures
designing of processor::designing of processor
processor we started::processor we started
instruction was done::instruction was done
single clock cycle::single clock cycle
cycle we notice::cycle we notice
notice the problem::notice the problem
problem with performance::problem with performance
putting these sequences::putting these sequences
sequences of actions::sequences of actions
build the flow::build the flow
flow of control::flow of control
control for carrying::control for carrying
out these instructions::out these instructions
identify what control::identify what control
signals are required::signals are required
required to control::required to control
control this data::control this data
steps for doing::steps for doing
group the control::group the control
define some meaningful::define some meaningful
operations called micro::operations called micro
set of micro::set of micro
establishing a relationship::establishing a relationship
relationship between control::relationship between control
states um transit::states um transit
complete the design::complete the design
design of control::design of control
data path last::data path last
memory register file::memory register file
file and alu::file and alu
out from memory::out from memory
stored in instruction::stored in instruction
register when data::register when data
data is read::data is read
stored in data::stored in data
operand from register::operand from register
file are brought::file are brought
out into registers::out into registers
results of alu::results of alu
register called res::register called res
short for result::short for result
change their states::change their states
multiplexer as usual::multiplexer as usual
control for alu::control for alu
alu register file::alu register file
file and memory::file and memory
components like registers::components like registers
instructions are divided::instructions are divided
activity is done::activity is done
read one word::read one word
word from memory::word from memory
memory into instruction::memory into instruction
register that form::register that form
form the instruction::form the instruction
address of memory::address of memory
operations are done::operations are done
concurrently within first::concurrently within first
read the operand::read the operand
two are brought::two are brought
addresses of register::addresses of register
sixteen to twenty::sixteen to twenty
first one corresponds::first one corresponds
meant by putting::meant by putting
clock cycle number::clock cycle number
operation being performed::operation being performed
transferring this result::transferring this result
eleven to fifteen::eleven to fifteen
fifteen which corresponds::fifteen which corresponds
made a careful::made a careful
done in sequence::done in sequence
first cycle involves::first cycle involves
involves um access::involves um access
access to memory::access to memory
memory to fetch::memory to fetch
fetch the instruction::fetch the instruction
instruction and updation::instruction and updation
updation of program::updation of program
involves um bringing::involves um bringing
bringing the registers::bringing the registers
access two registers::access two registers
participate in address::participate in address
carry the value::carry the value
fields of instruction::fields of instruction
instruction register file::instruction register file
file is accessed::file is accessed
accessed and registers::accessed and registers
registers are values::registers are values
values are brought::values are brought
cycle we calculate::cycle we calculate
calculate the address::calculate the address
adding offset coming::adding offset coming
coming from bit::coming from bit
fifteen of instruction::fifteen of instruction
instruction with sign::instruction with sign
register called result::register called result
contents of res::contents of res
written into memory::written into memory
write is performed::write is performed
require four cycles::require four cycles
load word instruction::load word instruction
instruction first cycle::instruction first cycle
involves um reading::involves um reading
reading one register::reading one register
register from register::register from register
read from memory::read from memory
stored in register::stored in register
fourth cycle memory::fourth cycle memory
cycle memory access::cycle memory access
access is performed::access is performed
performed the data::performed the data
address is carried::address is carried
carried in res::carried in res
read is brought::read is brought
value into register::value into register
file the address::file the address
cycles which complete::cycles which complete
complete load word::complete load word
beq first cycle::beq first cycle
lot of work::lot of work
address in case::address in case
alu is free::alu is free
alu for comparison::alu for comparison
free we calculate::free we calculate
calculate this address::calculate this address
don t transfer::don t transfer
res the condition::res the condition
checking the condition::checking the condition
alu will compare::alu will compare
out from register::out from register
address is transferred::address is transferred
req this requires::req this requires
compose this address::compose this address
instruction by taking::instruction by taking
two bit shift::two bit shift
shift is concatenated::shift is concatenated
accessing the instruction::accessing the instruction
memory access required::memory access required
required no alu::required no alu
alu operation required::alu operation required
occupying two cycles::occupying two cycles
bits are picked::bits are picked
cycle and put::cycle and put
takes one cycle::takes one cycle
cycle to fetch::cycle to fetch
occupying additional cycle::occupying additional cycle
single cycle approach::single cycle approach
roughly taking equivalent::roughly taking equivalent
approach the data::approach the data
directly we picked::directly we picked
bits and formed::bits and formed
formed the address::formed the address
required is max::required is max
decided one clock::decided one clock
requiring two cycles::requiring two cycles
basically first clock::basically first clock
first clock period::first clock period
instruction into cycles::instruction into cycles
cycles the division::cycles the division
division of activity::division of activity
form overall flow::form overall flow
instructions or groups::instructions or groups
put their actions::put their actions
pieces of text::pieces of text
matter of detail::matter of detail
omitted some details::omitted some details
register file performing::register file performing
arithmetic or logical::arithmetic or logical
logical operations storing::logical operations storing
storing in register::storing in register
file um storing::file um storing
storing in memory::storing in memory
reading from memory::reading from memory
taking different cycles::taking different cycles
notice some commonality::notice some commonality
things start differing::things start differing
boxes will correspond::boxes will correspond
sort of state::sort of state
state transition diagram::state transition diagram
describe the control::describe the control
action is required::action is required
out same activity::out same activity
contemplating a bifurcation::contemplating a bifurcation
onwards after first::onwards after first
instruction or instruction::instruction or instruction
fetched the instruction::fetched the instruction
instruction and brought::instruction and brought
cycle on onwards::cycle on onwards
opcode second cycle::opcode second cycle
decoding of opcode::decoding of opcode
opcode or understanding::opcode or understanding
understanding which instruction::understanding which instruction
activity the circuit::activity the circuit
identify particular instruction::identify particular instruction
typically be allowed::typically be allowed
allowed a full::allowed a full
cycle fully occupied::cycle fully occupied
bifurcation or split::bifurcation or split
split must occur::split must occur
step is completed::step is completed
required to make::required to make
make it common::make it common
read two values::read two values
values from register::values from register
values two values::values two values
reading two values::reading two values
consume some energy::consume some energy
energy in doing::energy in doing
agree to fetch::agree to fetch
thing you notice::thing you notice
holding any value::holding any value
jump um requires::jump um requires
instruction a jump::instruction a jump
common decoding cycle::common decoding cycle
operand fetch cycle::operand fetch cycle
instruction whose frequency::instruction whose frequency
frequency of occurrence::frequency of occurrence
two common cycles::two common cycles
end first cycle::end first cycle
cycle our operands::cycle our operands
address is ready::address is ready
ready in res::ready in res
cycles are required::cycles are required
two for store::two for store
small finite state::small finite state
finite state machine::finite state machine
instruction is follow::instruction is follow
long as power::long as power
require four clock::require four clock
four clock cycles::four clock cycles
range of number::range of number
number of clock::number of clock
action we perform::action we perform
small improvement possibility::small improvement possibility
word and store::word and store
store are concerned::store are concerned
bifurcate into load::bifurcate into load
load and store::load and store
number of control::number of control
total of ten::total of ten
made very clear::made very clear
component which require::component which require
require a control::require a control
write is rew::write is rew
signals control signals::signals control signals
cycle the cha::cycle the cha
state is changed::state is changed
decide the values::decide the values
requires some controls::requires some controls
controls so control::controls so control
instruction or data::instruction or data
sources this multiplexer::sources this multiplexer
written into register::written into register
two r memory::two r memory
memory to register::memory to register
multiplexer is controlled::multiplexer is controlled
controlled by signal::controlled by signal
earlier two registers::earlier two registers
hand two multiplexers::hand two multiplexers
signal is labeled::signal is labeled
noiselor pc source::noiselor pc source
source the memory::source the memory
usual control signals::usual control signals
single cycle data::single cycle data
cycle data path::cycle data path
signals as compared::signals as compared
build the table::build the table
group the related::group the related
related control signals::related control signals
call as micro::call as micro
grouping the signals::grouping the signals
things group wise::things group wise
simplify the matter::simplify the matter
group of signals::group of signals
build a table::build a table
list micro operations::list micro operations
two signals pwu::two signals pwu
pwu and pwc::pwu and pwc
state will generate::state will generate
generate a signal::generate a signal
calling as pwc::calling as pwc
four i make::four i make
make pc pwu::make pc pwu
output of alu::output of alu
alu directly output::alu directly output
alu through res::alu through res
back and check::back and check
don t bring::don t bring
register into picture::register into picture
single cycle design::single cycle design
control a multiplexer::control a multiplexer
coming from controller::coming from controller
controlled a multiplexer::controlled a multiplexer
making a choice::making a choice
four plus offset::four plus offset
things are handled::things are handled
cycle the choice::cycle the choice
address is calculated::address is calculated
derived from pwu::derived from pwu
transfer an address::transfer an address
activate this signal::activate this signal
signal the source::signal the source
two three etcetera::two three etcetera
signal takes multiple::signal takes multiple
takes multiple value::takes multiple value
case the source::case the source
doesn t matter::doesn t matter
controller will produce::controller will produce
clear any question::clear any question
formed for jump::formed for jump
control the data::control the data
make this happen::make this happen
make the unconditional::make the unconditional
unconditional write signal::unconditional write signal
don t care::don t care
values here don::values here don
don t matter::don t matter
matter the result::matter the result
sort of overriding::sort of overriding
overriding um signal::overriding um signal
pwc is don::pwc is don
select the correct::select the correct
operation um notice::operation um notice
multiplexer is selecting::multiplexer is selecting
selecting the sources::selecting the sources
input of multiplexer::input of multiplexer
multiplexer one input::multiplexer one input
signals are taking::signals are taking
transfer is taking::transfer is taking
changing the value::changing the value
give some names::give some names
make things convenient::make things convenient
convenient in subsequent::convenient in subsequent
names for convenience::names for convenience
operations which revolve::operations which revolve
memory the relevant::memory the relevant
write and read::write and read
read control signals::read control signals
data this signal::data this signal
source of address::source of address
two signals decide::two signals decide
register this controls::register this controls
operation is fetching::operation is fetching
fetching the instruction::fetching the instruction
read is written::read is written
data from memory::data from memory
writing into memory::writing into memory
kind of redundancy::kind of redundancy
make such observation::make such observation
observation and simplify::observation and simplify
simplify the controller::simplify the controller
finally the default::finally the default
read both signals::read both signals
register load signals::register load signals
load signals low::load signals low
matter some convenient::matter some convenient
memory read memory::memory read memory
read memory write::read memory write
set of values::set of values
group is register::group is register
register file group::register file group
talking of writing::talking of writing
writing a signal::writing a signal
signal rw register::signal rw register
register file write::register file write
file write rdst::file write rdst
written is coming::written is coming
coming from memory::coming from memory
register so reading::register so reading
two r don::two r don
give a write::give a write
doesn t require::doesn t require
require similarly reading::require similarly reading
writing into register::writing into register
make the write::make the write
address is coming::address is coming
values being written::values being written
make any change::make any change
two signals rdst::two signals rdst
rdst and m2r::rdst and m2r
m2r are complementary::m2r are complementary
reduce the signals::reduce the signals
rs2a rt2b res2rd::rs2a rt2b res2rd
rt2b res2rd mem2rt::rt2b res2rd mem2rt
finally the alu::finally the alu
signals are opc::signals are opc
two bit value::two bit value
part of circuitry::part of circuitry
multiplexer control signals::multiplexer control signals
signals a source::signals a source
signal which controls::signal which controls
writing into result::writing into result
earlier is appearing::earlier is appearing
ensure that addition::ensure that addition
addition is done::addition is done
offset for load::offset for load
store and offset::store and offset
offset for branch::offset for branch
two for load::two for load
load store offset::load store offset
source are concerned::source are concerned
writing into res::writing into res
opc and coding::opc and coding
simply perform addition::simply perform addition
addition without doing::addition without doing
load store instruction::load store instruction
wha our logic::wha our logic
controller would ensure::controller would ensure
ensure that alu::ensure that alu
perform the addition::perform the addition
matter what alu::matter what alu
ensure that rew::ensure that rew
relationship between micro::relationship between micro
assert various control::assert various control
signals what values::signals what values
increment arithmetic memory::increment arithmetic memory
arithmetic memory address::arithmetic memory address
redraw the diagram::redraw the diagram
micro operation symbol::micro operation symbol
described in previous::described in previous
previous few slides::previous few slides
rs2a and rt2b::rs2a and rt2b
rt2b and paddr::rt2b and paddr
table will define::table will define
state what micro::state what micro
table next table::table next table
states and signal::states and signal
listing signal values::listing signal values
listing the micro::listing the micro
groups i identified::groups i identified
identified pc group::identified pc group
group memory group::group memory group
group and alu::group and alu
shows the pair::shows the pair
requires to control::requires to control
group the operation::group the operation
operation is fetch::operation is fetch
fetching these operands::fetching these operands
operands and calculating::operands and calculating
calculating um branch::calculating um branch
first um sep::first um sep
first distinct state::first distinct state
perform the arithmetic::perform the arithmetic
value gets written::value gets written
state for load::state for load
store here memory::store here memory
address gets calculated::address gets calculated
completes the store::completes the store
performs memory read::performs memory read
memory read operation::memory read operation
transfer of data::transfer of data
completes the branch::completes the branch
branch operation branch::branch operation branch
operation branch micro::operation branch micro
branch micro operation::branch micro operation
micro operation shows::micro operation shows
requires a comparison::requires a comparison
change the state::change the state
completes the jump::completes the jump
symbol um replace::symbol um replace
bit vector defines::bit vector defines
defines the relevant::defines the relevant
relevant control signals::relevant control signals
states in binary::states in binary
bits to encode::bits to encode
encode this state::encode this state
state i form::state i form
form a truth::form a truth
input the code::input the code
control state transitions::control state transitions
transitions take place::transitions take place
four for load::four for load
conditions wont occur::conditions wont occur
instruction we start::instruction we start
kinds of truth::kinds of truth
state these form::state these form
form one input::form one input
bits which encode::bits which encode
plas to implement::plas to implement
holding the control::holding the control
state four bit::state four bit
four bit register::four bit register
bit register hold::bit register hold
state will form::state will form
form the controller::form the controller
draw that picture::draw that picture
instruction get divided::instruction get divided
divided into sequences::divided into sequences
sequences of micro::sequences of micro
control operations control::control operations control
operations control signals::operations control signals
operation and control::operation and control
identified control state::identified control state
processor design microprogrammed::processor design microprogrammed
design microprogrammed control::design microprogrammed control
lecture i started::lecture i started
design of controller::design of controller
multi multi cycle::multi multi cycle
multi cycle datapath::multi cycle datapath
complete that design::complete that design
style of design::style of design
design called microprogrammed::design called microprogrammed
concentrate on microprogrammed::concentrate on microprogrammed
finish this control::finish this control
control part design::control part design
two different alternatives::two different alternatives
implementation of controller::implementation of controller
parts one part::parts one part
produces the control::produces the control
signals other part::signals other part
talk about microprogrammed::talk about microprogrammed
microprogrammed control design::microprogrammed control design
multi cycle approach::multi cycle approach
controlling various components::controlling various components
flow chart indicating::flow chart indicating
indicating how control::indicating how control
control control state::control control state
cycle to cycle::cycle to cycle
identified um groups::identified um groups
groups of control::groups of control
operation were identified::operation were identified
pattern of control::pattern of control
control signals required::control signals required
make them effective::make them effective
names were assigned::names were assigned
tables one table::tables one table
table um describes::table um describes
describes the control::describes the control
indicating what micro::indicating what micro
supposed to perform::supposed to perform
replace each micro::replace each micro
truth table description::truth table description
encode these control::encode these control
forms the truth::forms the truth
part showing black::part showing black
input and part::input and part
part showing green::part showing green
numbers upto twenty::numbers upto twenty
twenty so twenty::twenty so twenty
earlier for single::earlier for single
four input coming::four input coming
signals um group::signals um group
altogether twenty signal::altogether twenty signal
grouped as usual::grouped as usual
usual r class::usual r class
row and column::row and column
capturing this flowchart::capturing this flowchart
flowchart or state::flowchart or state
control state codes::control state codes
states are replaced::states are replaced
codes and opcodes::codes and opcodes
opcodes also put::opcodes also put
describe the truth::describe the truth
table is defining::table is defining
defining four bits::defining four bits
described by implement::described by implement
lot of sparsity::lot of sparsity
two d table::two d table
dimensional um table::dimensional um table
combinations are listed::combinations are listed
state and instruction::state and instruction
two raise power::two raise power
raise power ten::raise power ten
power ten entries::power ten entries
bits of input::bits of input
don t cares::don t cares
combinations are captured::combinations are captured
replace the state::replace the state
state numbers state::state numbers state
numbers state labels::numbers state labels
form the truth::form the truth
first two column::first two column
two column represent::two column represent
represent the input::represent the input
ten bit input::ten bit input
four bit output::four bit output
bits of control::bits of control
bits of opcode::bits of opcode
opcode to produce::opcode to produce
produce um nex::produce um nex
nex next state::nex next state
pla s implementing::pla s implementing
two specific tables::two specific tables
register which holds::register which holds
holds the state::holds the state
clock this value::clock this value
value will change::value will change
current control state::current control state
pla is generating::pla is generating
generating the control::generating the control
opcode and deciding::opcode and deciding
single combination circuit::single combination circuit
circuit with total::circuit with total
inputs and twenty::inputs and twenty
twenty four outputs::twenty four outputs
two smaller pla::two smaller pla
pla s put::pla s put
alternative to pla::alternative to pla
general purpose component::general purpose component
fully expanded truthtable::fully expanded truthtable
rows and defines::rows and defines
defines m outputs::defines m outputs
essentially by putting::essentially by putting
putting this pattern::putting this pattern
pattern of outputs::pattern of outputs
talking about read::talking about read
read only memory::read only memory
memory the kind::memory the kind
kind of memory::kind of memory
modifying the contents::modifying the contents
contents you give::contents you give
give an address::give an address
address as input::address as input
apply as address::apply as address
read out contents::read out contents
output um combinational::output um combinational
circuit that definition::circuit that definition
part um corresponds::part um corresponds
terms of size::terms of size
raise to power::raise to power
power n words::power n words
number of bits::number of bits
input m output::input m output
logic and false::logic and false
implement and gates::implement and gates
size what governs::size what governs
governs the size::governs the size
size is governed::size is governed
number of column::number of column
number of vertical::number of vertical
run each vertical::run each vertical
line here corresponds::line here corresponds
corresponds to suppose::corresponds to suppose
fully expanded form::fully expanded form
lots of don::lots of don
accommodates um rows::accommodates um rows
width in proportional::width in proportional
makes a pla::makes a pla
compact as compared::compact as compared
table have lot::table have lot
lot of sparkcity::lot of sparkcity
lot of don::lot of don
form of pla::form of pla
illustrate this point::illustrate this point
input the output::input the output
terms are grouped::terms are grouped
irrespective the value::irrespective the value
value second input::value second input
fully expanded truth::fully expanded truth
expanded truth table::expanded truth table
inputs that means::inputs that means
means two raised::means two raised
two raised power::two raised power
ten or thousand::ten or thousand
four um words::four um words
memory each word::memory each word
bits and total::bits and total
number of words::number of words
ten eleven twelve::ten eleven twelve
thirteen fourteen terms::thirteen fourteen terms
correspond to product::correspond to product
term in case::term in case
sixty four term::sixty four term
mention microprogrammed control::mention microprogrammed control
program flow chart::program flow chart
computer which executes::computer which executes
executes a simple::executes a simple
programs that program::programs that program
generates control signals::generates control signals
deal with manipulating::deal with manipulating
steps each step::steps each step
step involves generating::step involves generating
generating some control::generating some control
reading out words::reading out words
talking of memory::talking of memory
mentioned some disadvantage::mentioned some disadvantage
memory based design::memory based design
notice so imagine::notice so imagine
imagine a memory::imagine a memory
applied as control::applied as control
tho those signals::tho those signals
generated by circuit::generated by circuit
word um generates::word um generates
arrangement to make::arrangement to make
address is presented::address is presented
word is read::word is read
generate this address::generate this address
calling as micro::calling as micro
sequencer so micro::sequencer so micro
sequencer is ensuring::sequencer is ensuring
ensuring that right::ensuring that right
address is put::address is put
stepping through memory::stepping through memory
register it steps::register it steps
micro programmed memory::micro programmed memory
memory to ensure::memory to ensure
signals are generated::signals are generated
correctly each micro::correctly each micro
micro programmed counter::micro programmed counter
simple incrementer adder::simple incrementer adder
branching another point::branching another point
follow in simple::follow in simple
call it dispatch::call it dispatch
micro program terminology::micro program terminology
multi way branch::multi way branch
call that dispatch::call that dispatch
call that reset::call that reset
possibilities are sequence::possibilities are sequence
dispatch one dispatch::dispatch one dispatch
two and reset::two and reset
four four possibilities::four four possibilities
complex um design::complex um design
two bit field::two bit field
address is concerned::address is concerned
two bits coming::two bits coming
call as sequence::call as sequence
select either current::select either current
opcode and generating::opcode and generating
generating the correct::generating the correct
tables um depending::tables um depending
four possible addresses::four possible addresses
addresses here depending::addresses here depending
depending upon opcode::depending upon opcode
small roms small::small roms small
roms small plas::roms small plas
number of ways::number of ways
program will control::program will control
control this multiplexer::control this multiplexer
low level program::low level program
level program lower::level program lower
single language program::single language program
simple primitive operations::simple primitive operations
done each line::done each line
represents one micro::represents one micro
micro program memory::micro program memory
incidentally micro program::incidentally micro program
rest are reset::rest are reset
micro program written::micro program written
assembler can translate::assembler can translate
structure your micro::structure your micro
horizontal micro programming::horizontal micro programming
path can support::path can support
provision of doing::provision of doing
doing many micro::doing many micro
degree of concurrency::degree of concurrency
concurrency um vertical::concurrency um vertical
fetching an instruction::fetching an instruction
two different instructions::two different instructions
conserve the space::conserve the space
altogether the space::altogether the space
space we require::space we require
word having twenty::word having twenty
twenty two bits::twenty two bits
past many processor::past many processor
complex and micro::complex and micro
micro program run::micro program run
run two thousands::run two thousands
thousands of words::thousands of words
concurrency of micro::concurrency of micro
pattern of bits::pattern of bits
number of patterns::number of patterns
number of pattern::number of pattern
pattern in general::pattern in general
raised the power::raised the power
power of number::power of number
low memory requirement::low memory requirement
programming the idea::programming the idea
don t lose::don t lose
micro programmed approach::micro programmed approach
programmed approach versus::programmed approach versus
versus um non::versus um non
non micro program::non micro program
state machine based::state machine based
machine based approach::machine based approach
pros and cons::pros and cons
easy to write::easy to write
definition of control::definition of control
chart like form::chart like form
work with design::work with design
architecture and design::architecture and design
design of micro::design of micro
terms of performance::terms of performance
separate memory chip::separate memory chip
make a change::make a change
add few instruction::add few instruction
memory and rest::memory and rest
rest could remain::rest could remain
times the families::times the families
families of processor::families of processor
processor were designed::processor were designed
micro program implementation::micro program implementation
attempts like emulation::attempts like emulation
architecture in mind::architecture in mind
emulate um emulation::emulate um emulation
simulation in microprogramming::simulation in microprogramming
simulate the effect::simulate the effect
set of instructions::set of instructions
internal registers temporary::internal registers temporary
registers temporary registers::registers temporary registers
working at microprogrammed::working at microprogrammed
level could make::level could make
makes it slower::makes it slower
longer um popular::longer um popular
lot of performance::lot of performance
tools where tdf::tools where tdf
tdf final state::tdf final state
final state machine::final state machine
state machine design::state machine design
done by hand::done by hand
advantage of micro::advantage of micro
tools can design::tools can design
design very efficient::design very efficient
machine or hardwired::machine or hardwired
hardwired controllers starting::hardwired controllers starting
kind of description::kind of description
levels various stages::levels various stages
process of design::process of design
initial representation level::initial representation level
draw a finite::draw a finite
state machine diagram::state machine diagram
program micro program::program micro program
program at sequencing::program at sequencing
sequencing control level::sequencing control level
function um coming::function um coming
pla or memory::pla or memory
micro program counter::micro program counter
counter plus dispatch::counter plus dispatch
write is logic::write is logic
write as truth::write as truth
finally at implementation::finally at implementation
pla or read::pla or read
technically all combinations::technically all combinations
completed the design::completed the design
require two pla::require two pla
care of generating::care of generating
path and taking::path and taking
thirdly we looked::thirdly we looked
looked at micro::looked at micro
approach to control::approach to control
main um things::main um things
drive this memory::drive this memory
microsequencer which determines::microsequencer which determines
pipelined processor design::pipelined processor design
datapath and control::datapath and control
lecture we discussed::lecture we discussed
type of design::type of design
design called pipelined::design called pipelined
frequency of clock::frequency of clock
clock the idea::clock the idea
attempt to initiate::attempt to initiate
initiate one instruction::initiate one instruction
number of instructions::number of instructions
stages of execution::stages of execution
ideally each stage::ideally each stage
ways of handling::ways of handling
handling those situations::handling those situations
hazards we looked::hazards we looked
types of hazards::types of hazards
hazards structural hazards::hazards structural hazards
structural hazards data::structural hazards data
hazards data hazards::hazards data hazards
hazards and control::hazards and control
eliminate structural hazards::eliminate structural hazards
hazards but data::hazards but data
reduce their effect::reduce their effect
last time complete::last time complete
ignore the hazards::ignore the hazards
condition in ideal::condition in ideal
condition how pipeline::condition how pipeline
controlled and instructions::controlled and instructions
instruction per clock::instruction per clock
complete the datapath::complete the datapath
shifters um bit::shifters um bit
introduce the controller::introduce the controller
simple pipeline design::simple pipeline design
pipeline design behaves::pipeline design behaves
behaves in context::behaves in context
possibly in subsequent::possibly in subsequent
augment our design::augment our design
design to handle::design to handle
handle these hazards::handle these hazards
single cycle datapath::single cycle datapath
basis for designing::basis for designing
designing um pipelined::designing um pipelined
omitted um instruction::omitted um instruction
reduce the size::reduce the size
easier for discussions::easier for discussions
components like multiplexers::components like multiplexers
multiplexers and sign::multiplexers and sign
extenders and shifters::extenders and shifters
number of components::number of components
diagram is smaller::diagram is smaller
analyze and discuss::analyze and discuss
basically to introduce::basically to introduce
stage is considered::stage is considered
considered um instruction::considered um instruction
instruction fetch stage::instruction fetch stage
stage which involves::stage which involves
introduced a register::introduced a register
decoded control signals::decoded control signals
generated and operands::generated and operands
fetched from register::fetched from register
register third stage::register third stage
calculation for branch::calculation for branch
final the fourth::final the fourth
stage is memory::stage is memory
read or write::read or write
write of data::write of data
stage is writing::stage is writing
skip some stages::skip some stages
skip some stage::skip some stage
forward going paths::forward going paths
thirty two bits::thirty two bits
bits of instruction::bits of instruction
instruction plus thirty::instruction plus thirty
sixty four bit::sixty four bit
register the register::register the register
twenty eight bit::twenty eight bit
cutting three paths::cutting three paths
ninety six bits::ninety six bits
means the information::means the information
cycle of delay::cycle of delay
backward going paths::backward going paths
back to register::back to register
passing through register::passing through register
initiate next instruction::initiate next instruction
instruction unless first::instruction unless first
turning this back::turning this back
loop can turn::loop can turn
values every cycle::values every cycle
instruction gets pumped::instruction gets pumped
removed for convenience::removed for convenience
convenience of discussion::convenience of discussion
put this back::put this back
peculiar thing happening::peculiar thing happening
four value generate::four value generate
generate for instruction::generate for instruction
analyze but lets::analyze but lets
two different sources::two different sources
adding data coming::adding data coming
coming from register::coming from register
instruction the offset::instruction the offset
offset a multiplexer::offset a multiplexer
register file output::register file output
output of memory::output of memory
memory or output::memory or output
alu so notice::alu so notice
instruction where memory::instruction where memory
experiencing a delay::experiencing a delay
doing anything idling::doing anything idling
homogenous and uniform::homogenous and uniform
right back operation::right back operation
back is happening::back is happening
amount of delay::amount of delay
carry the data::carry the data
data and address::data and address
experience same delay::experience same delay
change we require::change we require
feeding the address::feeding the address
address all move::address all move
instruction and address::instruction and address
lot of options::lot of options
consequences of multiplexing::consequences of multiplexing
consuming five bits::consuming five bits
don t multiplex::don t multiplex
two five bit::two five bit
length will increase::length will increase
imagine the consequence::imagine the consequence
consequence of positioning::consequence of positioning
positioning the sign::positioning the sign
sign extension unit::sign extension unit
input of sign::input of sign
extension is sixteen::extension is sixteen
thirty two lines::thirty two lines
lines to pass::lines to pass
consuming sixteen bits::consuming sixteen bits
position best position::position best position
address is made::address is made
hand in hand::hand in hand
data and reach::data and reach
reach the register::reach the register
introduce um control::introduce um control
generate control signals::generate control signals
components which require::components which require
register files multiplexers::register files multiplexers
thi this multiplexer::thi this multiplexer
passing two things::passing two things
sixty four bits::sixty four bits
bring this multiplexer::bring this multiplexer
discussing this point::discussing this point
lets also understand::lets also understand
understand other implications::understand other implications
implications of making::implications of making
repositioning of components::repositioning of components
components of multiplexer::components of multiplexer
register after register::register after register
stage the paths::stage the paths
form the part::form the part
path which starts::path which starts
file and ends::file and ends
delay that delay::delay that delay
calculate the maximum::calculate the maximum
maximum path delay::maximum path delay
critical path delays::critical path delays
data memory delay::data memory delay
two choices achieves::two choices achieves
delay okay suppose::delay okay suppose
delay of data::delay of data
larger than delay::larger than delay
typically then keeping::typically then keeping
keeping this multiplexer::keeping this multiplexer
delay and make::delay and make
make things worse::make things worse
slack some room::slack some room
side to accommodate::side to accommodate
point of view::point of view
cost in terms::cost in terms
terms of register::terms of register
register length register::register length register
length register size::length register size
style of control::style of control
follow the single::follow the single
single cycle type::single cycle type
type of control::type of control
design or multi-cycle::design or multi-cycle
design in single::design in single
cycle the key::cycle the key
purely a combinational::purely a combinational
generates the sig::generates the sig
generates the signals::generates the signals
decide the control::decide the control
signals gets determined::signals gets determined
sense the influence::sense the influence
influence of opcode::influence of opcode
making the control::making the control
reduce the number::reduce the number
signals to generate::signals to generate
first two states::first two states
branching off depending::branching off depending
suppose we don::suppose we don
don t branch::don t branch
states four states::states four states
determine what control::determine what control
recall your theory::recall your theory
theory of finite::theory of finite
finite state machines::finite state machines
mealy machine type::mealy machine type
type of approach::type of approach
moore machine type::moore machine type
suit the pipeline::suit the pipeline
controller be combinational::controller be combinational
remember the states::remember the states
purely combinational circuit::purely combinational circuit
cycles and control::cycles and control
maintain several control::maintain several control
decide control signals::decide control signals
fortunately what turns::fortunately what turns
derive the controller::derive the controller
lets um reconstruct::lets um reconstruct
reconstruct the controller::reconstruct the controller
lets um superimpose::lets um superimpose
control signal goint::control signal goint
controls the write::controls the write
write operation register::write operation register
operation register file::operation register file
signal for alu::signal for alu
control for data::control for data
data memory read::data memory read
memory read control::memory read control
gate which generates::gate which generates
generates um signal::generates um signal
care of branch::care of branch
result of comparison::result of comparison
controls this multiplexer::controls this multiplexer
mixing of datapath::mixing of datapath
two different instruction::two different instruction
coming from instruction::coming from instruction
generated is found::generated is found
drive the controller::drive the controller
ignoring the identity::ignoring the identity
solved the problem::solved the problem
problem of synchronizing::problem of synchronizing
address and data::address and data
data while writing::data while writing
writing to register::writing to register
done for control::done for control
generate the control::generate the control
cur current stage::cur current stage
stage you delay::stage you delay
applicable two stages::applicable two stages
extend these registers::extend these registers
registers to accommodate::registers to accommodate
accommodate the control::accommodate the control
extended these walls::extended these walls
walls to separate::walls to separate
separate um control::separate um control
basically the signals::basically the signals
directly the signal::directly the signal
basically you put::basically you put
units of delay::units of delay
register they pass::register they pass
applicable here signals::applicable here signals
reach the multiplexer::reach the multiplexer
simply by inserting::simply by inserting
inserting register extend::inserting register extend
portions of registers::portions of registers
signals are passing::signals are passing
carrying the control::carrying the control
bits here eleven::bits here eleven
bit here twelve::bit here twelve
twelve bit register::twelve bit register
required for instruction::required for instruction
circuit is identical::circuit is identical
focus your tension::focus your tension
unit do multiplexing::unit do multiplexing
signal which enables::signal which enables
correct this signal::correct this signal
irrelevant for write::irrelevant for write
output of multiplexing::output of multiplexing
out from controller::out from controller
registers and bringing::registers and bringing
back and applying::back and applying
applying into register::applying into register
addresses and control::addresses and control
complete design datapath::complete design datapath
out jump instruction::out jump instruction
remaining eight instructions::remaining eight instructions
position this multiplexer::position this multiplexer
delaying the data::delaying the data
giving write signal::giving write signal
change this register::change this register
move this multiplexer::move this multiplexer
register other consequence::register other consequence
passed and made::passed and made
register file operation::register file operation
generated this address::generated this address
address you store::address you store
store um suppose::store um suppose
suppose next instruction::suppose next instruction
two three addresses::two three addresses
cycle we store::cycle we store
cycle we move::cycle we move
first in first::first in first
first out kind::first out kind
out kind arrangement::out kind arrangement
done this design::done this design
recall that last::recall that last
datapath for data::datapath for data
hazard and control::hazard and control
introduce appropriate delays::introduce appropriate delays
suffer the delays::suffer the delays
delays are reduced::delays are reduced
two consecutive instructions::two consecutive instructions
means the value::means the value
two gap depending::two gap depending
opportunities for data::opportunities for data
putting a result::putting a result
required by add::required by add
delay the register::delay the register
register read stage::register read stage
matches with register::matches with register
write or write::write or write
write back stage::write back stage
sharing a cycle::sharing a cycle
cycle between read::cycle between read
read and write::read and write
write of register::write of register
register file half::register file half
half the cycle::half the cycle
cycle for writing::cycle for writing
cycle for reading::cycle for reading
two ideal cycles::two ideal cycles
made any arrangement::made any arrangement
arrangement to check::arrangement to check
check this situation::check this situation
situation and introduce::situation and introduce
read old results::read old results
valid and computation::valid and computation
problem which exist::problem which exist
instructions following close::instructions following close
pass on part::pass on part
compare an instruction::compare an instruction
stage and instruction::stage and instruction
stage okay lets::stage okay lets
write into register::write into register
instruction to proceed::instruction to proceed
read um address::read um address
directly because instruction::directly because instruction
instruction is stored::instruction is stored
carried this information::carried this information
address for instruction::address for instruction
enable those paths::enable those paths
halt these instruction::halt these instruction
control um transfer::control um transfer
transfer of information::transfer of information
register it means::register it means
don t clock::don t clock
doesn t pass::doesn t pass
disable the clock::disable the clock
doesn t change::doesn t change
value means inactive::value means inactive
giving the basic::giving the basic
happening when control::happening when control
control hazards occur::control hazards occur
taking some decision::taking some decision
tendency the pipeline::tendency the pipeline
pipeline to start::pipeline to start
flush these instructions::flush these instructions
delayed is starting::delayed is starting
easy you don::easy you don
coming out indicating::coming out indicating
ready to flush::ready to flush
flush the instruction::flush the instruction
branch instruction freeze::branch instruction freeze
instruction freeze don::instruction freeze don
point you decide::point you decide
happen and start::happen and start
opcode what kind::opcode what kind
kind of branch::kind of branch
branch it means::branch it means
loops are iterated::loops are iterated
iterated several times::iterated several times
arrangement also means::arrangement also means
encountered this instruction::encountered this instruction
prediction that last::prediction that last
case um lets::case um lets
actions we require::actions we require
require in light::require in light
out the design::out the design
hazard the first::hazard the first
instructions with dependence::instructions with dependence
introduce suitable number::introduce suitable number
two is required::two is required
required sometimes delay::required sometimes delay
pipeline where things::pipeline where things
things are moving::things are moving
smoothly you insert::smoothly you insert
instructions more complex::instructions more complex
data forwarding path::data forwarding path
enable the paths::enable the paths
introduction of bubbles::introduction of bubbles
forwarding will eliminate::forwarding will eliminate
eliminate the delay::eliminate the delay
cycles of delay::cycles of delay
instructions are flowing::instructions are flowing
held up including::held up including
fetching next instruction::fetching next instruction
moving of forward::moving of forward
control hazards require::control hazards require
detect identify branch::detect identify branch
identify branch instructions::identify branch instructions
flush wrong instruction::flush wrong instruction
blindly inline instructions::blindly inline instructions
fairly straight forward::fairly straight forward
complex dynamic prediction::complex dynamic prediction
care by introducing::care by introducing
introducing more hardware::introducing more hardware
hazards are coming::hazards are coming
program is interacting::program is interacting
software the answer::software the answer
software um assembler::software um assembler
assembler or compiler::assembler or compiler
whichever is generating::whichever is generating
generating the code::generating the code
analysis and rearrange::analysis and rearrange
hazard is minimized::hazard is minimized
hazard is coming::hazard is coming
coming when dependent::coming when dependent
instructions are close::instructions are close
instruction without changing::instruction without changing
changing the meaning::changing the meaning
make the program::make the program
depend upon instruction::depend upon instruction
instructions are independent::instructions are independent
separate out instruction::separate out instruction
don t find::don t find
insert no ops::insert no ops
sequence is organized::sequence is organized
worry about data::worry about data
hazards are data::hazards are data
hazards are removed::hazards are removed
removed by construction::removed by construction
handle the branch::handle the branch
branch instruction similar::branch instruction similar
instruction similar spirit::instruction similar spirit
done both ways::done both ways
instruction and imagine::instruction and imagine
imagine the branch::imagine the branch
find something common::find something common
instruction and place::instruction and place
decide two cycles::decide two cycles
slots two delay::slots two delay
two delay slots::two delay slots
program can done::program can done
programmer if program::programmer if program
program is written::program is written
simplifies the task::simplifies the task
task of hardware::task of hardware
case of data::case of data
data hazard data::data hazard data
hazard data hazards::hazard data hazards
branch the hardware::branch the hardware
branches are effective::branches are effective
completed the datapath::completed the datapath
cycle datapath design::cycle datapath design
design with inter::design with inter
inter stage registers::inter stage registers
number of register::number of register
thing was controller::thing was controller
controller also turn::controller also turn
cycle datapath controller::cycle datapath controller
controller but control::controller but control
involves many thing::involves many thing
thing get fed::thing get fed
back the data::back the data
control and address::control and address
carefully so handling::carefully so handling
handling of hazards::handling of hazards
hazards requires detection::hazards requires detection
requires detection stalling::requires detection stalling
detection stalling flushing::detection stalling flushing
support from software::support from software
software which simplify::software which simplify
simplify the task::simplify the task
minimize their effect::minimize their effect
handling data hazards::handling data hazards
design may face::design may face
hazards we started::hazards we started
care of structural::care of structural
hazards that means::hazards that means
means enough resources::means enough resources
resources are introduced::resources are introduced
problem of data::problem of data
handle data hazards::handle data hazards
introduce no ops::introduce no ops
ops or bubbles::ops or bubbles
functionality remains correcst::functionality remains correcst
techniques of data::techniques of data
forwarding and improve::forwarding and improve
improve the situation::improve the situation
question of stalling::question of stalling
stalling th pipeline::stalling th pipeline
pipeline in detail::pipeline in detail
types of instruction::types of instruction
number of stall::number of stall
stall cycles required::stall cycles required
introduce the stall::introduce the stall
additional control circuitry::additional control circuitry
circuitry is required::circuitry is required
define the conditions::define the conditions
detected in order::detected in order
exercise this control::exercise this control
sort of bypass::sort of bypass
bypass the register::bypass the register
require the additional::require the additional
introduce additional paths::introduce additional paths
spite of introducing::spite of introducing
introducing data forwarding::introducing data forwarding
cases how stalling::cases how stalling
stalling is done::stalling is done
datapath and introduce::datapath and introduce
introduce inter stage::introduce inter stage
cycle um control::cycle um control
make the control::make the control
control signal pass::control signal pass
find a pair::find a pair
pair of instructions::pair of instructions
dependent so suppose::dependent so suppose
calling if instruction::calling if instruction
load instruction storing::load instruction storing
immediately an add::immediately an add
cycle goes waste::cycle goes waste
instruction and register::instruction and register
first instruction happen::first instruction happen
sense when reading::sense when reading
reading and writing::reading and writing
writing of register::writing of register
cycle you write::cycle you write
cycle you read::cycle you read
case the value::case the value
lets say middle::lets say middle
cycle um instruction::cycle um instruction
read correct values::read correct values
instruction would remain::instruction would remain
values and proceed::values and proceed
implement um delaying::implement um delaying
delaying of instructions::delaying of instructions
instruction the pipeline::instruction the pipeline
pipeline you notice::pipeline you notice
proceed further forward::proceed further forward
discuss that pipeline::discuss that pipeline
two different views::two different views
instruction by instruction::instruction by instruction
horizontal axis indicating::horizontal axis indicating
instruction you put::instruction you put
show which stage::show which stage
show all stages::show all stages
shot snap shots::shot snap shots
throw more light::throw more light
two the previous::two the previous
reached this point::reached this point
two has reached::two has reached
ins these stages::ins these stages
cycles of instruction::cycles of instruction
instructions will remain::instructions will remain
means no operation::means no operation
shown alu shaded::shown alu shaded
shaded which means::shaded which means
occupying a cycle::occupying a cycle
stopping that moves::stopping that moves
two are stuck::two are stuck
move to alu::move to alu
pipeline two bubbles::pipeline two bubbles
lets tell fluid::lets tell fluid
fluid was flowing::fluid was flowing
indicating no activity::indicating no activity
two no operations::two no operations
correct time instant::correct time instant
instruction wise background::instruction wise background
two inactive stage::two inactive stage
two two nops::two two nops
two nops introduced::two nops introduced
operations get introduced::operations get introduced
introduced from alu::introduced from alu
alu stage onwards::alu stage onwards
fetched from memory::fetched from memory
forward so nop::forward so nop
out a condition::out a condition
condition is true::condition is true
cycle one nop::cycle one nop
nop gets introduced::nop gets introduced
nops gets introduced::nops gets introduced
re-rooted some wires::re-rooted some wires
sake of clarity::sake of clarity
introduce no operations::introduce no operations
prevent any instruction::prevent any instruction
instruction from moving::instruction from moving
clock this register::clock this register
instruction was fetched::instruction was fetched
explicitly shown control::explicitly shown control
shown control signals::shown control signals
care of stalling::care of stalling
define control signals::define control signals
order to introduce::order to introduce
introduce a null::introduce a null
signals all null::signals all null
null control signal::null control signal
registers see remember::registers see remember
applicable for subsequent::applicable for subsequent
defined our control::defined our control
means inactive situation::means inactive situation
put a multiplexer::put a multiplexer
controls are passing::controls are passing
multiplexer other input::multiplexer other input
select this multiplexer::select this multiplexer
signals get passed::signals get passed
values get passed::values get passed
introducing a bubble::introducing a bubble
calling as bubble::calling as bubble
operation nop instruction::operation nop instruction
combination of control::combination of control
control will achieve::control will achieve
achieve the desired::achieve the desired
detect that condition::detect that condition
detect the dependency::detect the dependency
hazard so first::hazard so first
stating this condition::stating this condition
condition in words::condition in words
instruction the alu::instruction the alu
hazard between instruction::hazard between instruction
stage and alu::stage and alu
instruction rf stage::instruction rf stage
stage to held::stage to held
held back instruction::held back instruction
back instruction alu::back instruction alu
instruction alu stage::instruction alu stage
stage will proceed::stage will proceed
condition that means::condition that means
instruction to move::instruction to move
forward and write::forward and write
con conditional persists::con conditional persists
suppose we notice::suppose we notice
notice the hazard::notice the hazard
two cycles introduced::two cycles introduced
depending will pass::depending will pass
check this condition::check this condition
introducing some notation::introducing some notation
inter stage register::inter stage register
stage okay instruction::stage okay instruction
active that means::active that means
condition is satisfied::condition is satisfied
comparing the register::comparing the register
comparing rs address::comparing rs address
means an instruction::means an instruction
register which matches::register which matches
specification of instruction::specification of instruction
destination is matching::destination is matching
intends to write::intends to write
source and destination::source and destination
put the condition::put the condition
reads the register::reads the register
instructions like jump::instructions like jump
read the registers::read the registers
back a jump::back a jump
refined little bit::refined little bit
reads the registers::reads the registers
omitting those details::omitting those details
condition another point::condition another point
two alternative destination::two alternative destination
alternative destination addresses::alternative destination addresses
addresses are multiplexed::addresses are multiplexed
influence in terms::influence in terms
terms of number::terms of number
bates and clock::bates and clock
multiplex is showing::multiplex is showing
signal pc write::signal pc write
signal and bubble::signal and bubble
considered as part::considered as part
data forwarding paths::data forwarding paths
introducing two cycles::introducing two cycles
two consecutive instruction::two consecutive instruction
two dependent instructions::two dependent instructions
instructions are separated::instructions are separated
case this match::case this match
match would occur::match would occur
instruction has reached::instruction has reached
reached dm stage::reached dm stage
find any conflict::find any conflict
data forwarding techniques::data forwarding techniques
recall that idea::recall that idea
result is generated::result is generated
generated we pass::generated we pass
repeat those slides::repeat those slides
result of first::result of first
input of alu::input of alu
means two paths::means two paths
two paths leading::two paths leading
instruction like add::instruction like add
case the data::case the data
state to alu::state to alu
instruction um requires::instruction um requires
requires two registers::requires two registers
register the value::register the value
required in fourth::required in fourth
out of alu::out of alu
alu is required::alu is required
don t pass::don t pass
directly from alu::directly from alu
dma and fourth::dma and fourth
store so output::store so output
register to alu::register to alu
register and send::register and send
datapath okay augmented::datapath okay augmented
paths and shown::paths and shown
identify these paths::identify these paths
inputs of alu::inputs of alu
two gets selected::two gets selected
selected and coming::selected and coming
bringing a copy::bringing a copy
introduced an multiplexer::introduced an multiplexer
require three control::require three control
work out conditions::work out conditions
give proper value::give proper value
two bit signal::two bit signal
paths are organized::paths are organized
conditions to energize::conditions to energize
energize these paths::energize these paths
two the paths::two the paths
stages the control::stages the control
control we require::control we require
forward a equal::forward a equal
don t hold::don t hold
hold by default::hold by default
holds the value::holds the value
similar but first::similar but first
instruction ex stage::instruction NN stage
stage um intends::stage um intends
intending to write::intending to write
taking special care::taking special care
made this check::made this check
check in earlier::check in earlier
condition without forwarding::condition without forwarding
digit one instruction::digit one instruction
instruction is writing::instruction is writing
right or wrong::right or wrong
wrong another instruction::wrong another instruction
write it intends::write it intends
non zero address::non zero address
address is matching::address is matching
back so instruction::back so instruction
instruction here intends::instruction here intends
intends to read::intends to read
stage the instruction::stage the instruction
moved further intends::moved further intends
write into non::write into non
non zero register::non zero register
matches the destination::matches the destination
matches the source::matches the source
register where instruction::register where instruction
forward the data::forward the data
supposed to read::supposed to read
register the instruction::register the instruction
introduced this additional::introduced this additional
additional um check::additional um check
matching that means::matching that means
means the instruction::means the instruction
condition for defining::condition for defining
controlling the multiplexer::controlling the multiplexer
relevant register field::relevant register field
place rs rest::place rs rest
condition that instruction::condition that instruction
destination there matches::destination there matches
require rt register::require rt register
checked by control::checked by control
energize or enable::energize or enable
enable the right::enable the right
right forwarding paths::right forwarding paths
paths having done::paths having done
spite of forwarding::spite of forwarding
result is ready::result is ready
ready after fourth::ready after fourth
introduce um stall::introduce um stall
condition when data::condition when data
forwarding is happening::forwarding is happening
described the condition::described the condition
specifically a load::specifically a load
check is happening::check is happening
check when instruction::check when instruction
stage that load::stage that load
read is load::read is load
signal is active::signal is active
exercise our controls::exercise our controls
controls for holding::controls for holding
holding the instruction::holding the instruction
cycle and introducing::cycle and introducing
introducing a nop::introducing a nop
instruction we don::instruction we don
two different ways::two different ways
notice that instructions::notice that instructions
times um times::times um times
times time slabs::times time slabs
nops are inserted::nops are inserted
inserted the control::inserted the control
signal were defined::signal were defined
conditions were defined::conditions were defined
defined we check::defined we check
check the hazard::check the hazard
hazard and activate::hazard and activate
activate those control::activate those control
improve the performance::improve the performance
performance we talked::performance we talked
types of data::types of data
situations where stalls::situations where stalls
stalls are required::stalls are required
conditions for introducing::conditions for introducing
basically the conditions::basically the conditions
develop for stall::develop for stall
condition we developed::condition we developed
set of control::set of control
select these multiplexers::select these multiplexers
special cases introduce::special cases introduce
introduce the stalls::introduce the stalls
handling control hazards::handling control hazards
discussing pipelined design::discussing pipelined design
design for mips::design for mips
processor um last::processor um last
out the logic::out the logic
detect when hazards::detect when hazards
hazards are occurring::hazards are occurring
out the dependency::out the dependency
introduce appropriate control::introduce appropriate control
signals for today::signals for today
modify to handle::modify to handle
handle the control::handle the control
performance in view::performance in view
couple of techniques::couple of techniques
possibility of eliminating::possibility of eliminating
execution of branches::execution of branches
prediction of branch::prediction of branch
instruction level parallel::instruction level parallel
level parallel architecture::level parallel architecture
architecture and tha::architecture and tha
view of branch::view of branch
hazards and data::hazards and data
effect of data::effect of data
execution of instructions::execution of instructions
introduce um null::introduce um null
instruction or nop::instruction or nop
instructions or bubbles::instructions or bubbles
sequence of instructions::sequence of instructions
stage wise view::stage wise view
showing various stages::showing various stages
notice that nops::notice that nops
two nop instruction::two nop instruction
back to alu::back to alu
possibly after multiplexer::possibly after multiplexer
back to memory::back to memory
derive control signals::derive control signals
signals which guide::signals which guide
guide these multiplexers::guide these multiplexers
enable this paths::enable this paths
imagine a branch::imagine a branch
sequentially or branch::sequentially or branch
continues getting instructions::continues getting instructions
instructions in sequence::instructions in sequence
sequence is broken::sequence is broken
fetch the target::fetch the target
entered the pipeline::entered the pipeline
generate a control::generate a control
datapath and controller::datapath and controller
designed the branch::designed the branch
condition regarding tested::condition regarding tested
tested in alu::tested in alu
tested by alu::tested by alu
generated for feeding::generated for feeding
end of fourth::end of fourth
fetch cycle shifts::fetch cycle shifts
trapping this output::trapping this output
making this pass::making this pass
register um consequences::register um consequences
determines the clock::determines the clock
undergo a change::undergo a change
gate this multiplexer::gate this multiplexer
gate and multiplexer::gate and multiplexer
borne in mind::borne in mind
flush the instructions::flush the instructions
loading the target::loading the target
out the instructions::out the instructions
make the contents::make the contents
introducing um nop::introducing um nop
hazards so similar::hazards so similar
action somewhat similar::action somewhat similar
handle the branches::handle the branches
instruction in general::instruction in general
completed somewhere target::completed somewhere target
machine is completed::machine is completed
inline that means::inline that means
branch is taking::branch is taking
activities are happening::activities are happening
happening would determine::happening would determine
mind these delays::mind these delays
happening we started::happening we started
basically the computation::basically the computation
address and condition::address and condition
reduce the delay::reduce the delay
mind another factor::mind another factor
architectures where condition::architectures where condition
evaluation and branching::evaluation and branching
branching are split::branching are split
set some flags::set some flags
flags the branch::flags the branch
test the flag::test the flag
carry out branching::carry out branching
branching so condition::branching so condition
fact the real::fact the real
real evaluation takes::real evaluation takes
evaluation takes place::evaluation takes place
immediately preceding instruction::immediately preceding instruction
instruction the condition::instruction the condition
speed up branch::speed up branch
move these events::move these events
events as early::events as early
increase the gap::increase the gap
making and actual::making and actual
thing is branch::thing is branch
saving a lot::saving a lot
correctly you lose::correctly you lose
improved the situation::improved the situation
doing dynamic predication::doing dynamic predication
remember the target::remember the target
decision but calculation::decision but calculation
illustration of branch::illustration of branch
testing some condition::testing some condition
condition is false::condition is false
instruction or predicated::instruction or predicated
attach a condition::attach a condition
two you attached::two you attached
attached the condition::attached the condition
true the instruction::true the instruction
instruction gets done::instruction gets done
specifies which condition::specifies which condition
tested so condition::tested so condition
condition being tested::condition being tested
result of previous::result of previous
flag is set::flag is set
branch to current::branch to current
two that means::two that means
means you skip::means you skip
set nz means::set nz means
removing this branch::removing this branch
branch instruction explicit::branch instruction explicit
instruction explicit branch::instruction explicit branch
explicit branch instruction::explicit branch instruction
instruction and putting::instruction and putting
putting that condition::putting that condition
testing is part::testing is part
preparation for doing::preparation for doing
doing the addition::doing the addition
addition and depending::addition and depending
store the result::store the result
speed up execution::speed up execution
execution of branch::execution of branch
speed up target::speed up target
target is calculation::target is calculation
calculation and condition::calculation and condition
calculating the target::calculating the target
generate target address::generate target address
decode the instruction::decode the instruction
target address calculation::target address calculation
calculate target address::calculate target address
address in anticipation::address in anticipation
fetching the registers::fetching the registers
complex if virtual::complex if virtual
memory was involved::memory was involved
calculation also involves::calculation also involves
involves um page::involves um page
doing that translation::doing that translation
translation from virtual::translation from virtual
address to real::address to real
simply um address::simply um address
simply involve making::simply involve making
making um doing::making um doing
doing an addition::doing an addition
starting in anticipation::starting in anticipation
sequence of cycles::sequence of cycles
showing a part::showing a part
design okay last::design okay last
introduced a comparator::introduced a comparator
cycle because alu::cycle because alu
alu was free::alu was free
utilize the alu::utilize the alu
moving that adder::moving that adder
moving and introducing::moving and introducing
introducing a comparator::introducing a comparator
terms of clock::terms of clock
coming in series::coming in series
multiplexer these dont::multiplexer these dont
main um effect::main um effect
delay of register::delay of register
remember that testing::remember that testing
testing for equality::testing for equality
simpler as compared::simpler as compared
compared to testing::compared to testing
greater than right::greater than right
bit by bit::bit by bit
afford um equality::afford um equality
equality or inequality::equality or inequality
greater than comparison::greater than comparison
done within alu::done within alu
alu the fast::alu the fast
beq bna kind::beq bna kind
doing this right::doing this right
putting a simpler::putting a simpler
comparison here comparator::comparison here comparator
design with slight::design with slight
losing one cycle::losing one cycle
basically when branch::basically when branch
branch actually occurs::branch actually occurs
gap between condition::gap between condition
condition code evaluation::condition code evaluation
instructions to evaluate::instructions to evaluate
setting the condition::setting the condition
data hazard situation::data hazard situation
instruction is dependent::instruction is dependent
instruction is setting::instruction is setting
code other instruction::code other instruction
instruction is testing::instruction is testing
waiting is cut::waiting is cut
instruction can calculate::instruction can calculate
calculate its target::calculate its target
branch that means::branch that means
assume that branch::assume that branch
true or false::true or false
cycles so lets::cycles so lets
instruction that means::instruction that means
done whether condition::done whether condition
role of compiler::role of compiler
find um suitable::find um suitable
suitable independent instruction::suitable independent instruction
decision about branching::decision about branching
make branch effective::make branch effective
effective one cycle::effective one cycle
technique of branch::technique of branch
branches that means::branches that means
don t worry::don t worry
operation that means::operation that means
means um don::means um don
basic idea question::basic idea question
ways of doing::ways of doing
find the branch::find the branch
true and branch::true and branch
criteria is fixed::criteria is fixed
depend upon situation::depend upon situation
predict um inline::predict um inline
predict the target::predict the target
kind of branches::kind of branches
care of situations::care of situations
decide the dynamic::decide the dynamic
dynamic branch prediction::dynamic branch prediction
occurs several times::occurs several times
inside a loop::inside a loop
condition was true::condition was true
minded um approach::minded um approach
last several occurrences::last several occurrences
occurrences and based::occurrences and based
make the design::make the design
giving the programmer::giving the programmer
bypassing the delay::bypassing the delay
branch with nullification::branch with nullification
predicting okay depending::predicting okay depending
simple branch prediction::simple branch prediction
strict forward logic::strict forward logic
instructions which loops::instructions which loops
suppose your strategy::suppose your strategy
enter the loop::enter the loop
bra some loop::bra some loop
find that last::find that last
condition becomes false::condition becomes false
make a mistake::make a mistake
entering the loop::entering the loop
exiting the loop::exiting the loop
static branch policy::static branch policy
predict that loop::predict that loop
make one mistake::make one mistake
mistake per loop::mistake per loop
dynamic prediction strategy::dynamic prediction strategy
strategy does worse::strategy does worse
worse than static::worse than static
static prediction strategy::static prediction strategy
make branch dynamic::make branch dynamic
branch dynamic branch::branch dynamic branch
modify our dynamic::modify our dynamic
remembering what happened::remembering what happened
showing a scheme::showing a scheme
remembering one bit::remembering one bit
effectively two bits::effectively two bits
bits of information::bits of information
summary of last::summary of last
last several outcomes::last several outcomes
don t change::don t change
change your decision::change your decision
predicting that branch::predicting that branch
point um branch::point um branch
arcs are indicating::arcs are indicating
transiting the state::transiting the state
outcome and based::outcome and based
predict that branch::predict that branch
taking the branch::taking the branch
continue to predict::continue to predict
continue in state::continue in state
avoid making double::avoid making double
making double mistakes::making double mistakes
keeping the history::keeping the history
done in anticipation::done in anticipation
type of instruction::type of instruction
address is obtained::address is obtained
obtained by adding::obtained by adding
adding a constant::adding a constant
things are changing::things are changing
keeping in mind::keeping in mind
scheme will work::scheme will work
associative or contrantive::associative or contrantive
contrantive decibel memory::contrantive decibel memory
current um instruction::current um instruction
field carries instruction::field carries instruction
carries instruction address::carries instruction address
field carry prediction::field carry prediction
carry prediction statistics::carry prediction statistics
match that address::match that address
occurs you pick::occurs you pick
store target address::store target address
store target instruction::store target instruction
instruction branch instruction::instruction branch instruction
branch instruction carries::branch instruction carries
doing in anticipation::doing in anticipation
probability of changing::probability of changing
changing of target::changing of target
ninety five percent::ninety five percent
predicted with hundred::predicted with hundred
hundred percent accuracy::hundred percent accuracy
basis of outcome::basis of outcome
history of branches::history of branches
encode um outcome::encode um outcome
zeros which represent::zeros which represent
last few branches::last few branches
accuracy the outcome::accuracy the outcome
improve your prediction::improve your prediction
hardware to carry::hardware to carry
out these things::out these things
hardware to undo::hardware to undo
undo the effect::undo the effect
effect of wrong::effect of wrong
due to data::due to data
hazards or branch::hazards or branch
putting the instruction::putting the instruction
analyze the instruction::analyze the instruction
instruction and push::instruction and push
push those striking::push those striking
striking the pipeline::striking the pipeline
causing any stalls::causing any stalls
right um wha::right um wha
doing data forwarding::doing data forwarding
check the dependency::check the dependency
dependency between instruction::dependency between instruction
built in hardware::built in hardware
instruction is producing::instruction is producing
pushed in pipeline::pushed in pipeline
done by compiler::done by compiler
complete um picture::complete um picture
change the order::change the order
order of instruction::order of instruction
out of order::out of order
nicely support speculative::nicely support speculative
support speculative execution::support speculative execution
execution and dynamic::execution and dynamic
prediction the kind::prediction the kind
kind of stuff::kind of stuff
forms the basis::forms the basis
super scalar architecture::super scalar architecture
decode and execute::decode and execute
execute several instructions::execute several instructions
necessarily a dynamic::necessarily a dynamic
window of instructions::window of instructions
stream of instructions::stream of instructions
idea of dynamic::idea of dynamic
extended to multiple::extended to multiple
instruction level parallelism::instruction level parallelism
talking of parallel::talking of parallel
parallelism in terms::parallelism in terms
terms of multiple::terms of multiple
multiple processors doing::multiple processors doing
processors doing multiple::processors doing multiple
doing multiple instructions::doing multiple instructions
processor is capable::processor is capable
capable of fetching::capable of fetching
fetching and decoding::fetching and decoding
decoding and executing::decoding and executing
executing several instructions::executing several instructions
instructions and finds::instructions and finds
out which instruction::out which instruction
hardware which executes::hardware which executes
executes these instruction::executes these instruction
instruction in parallel::instruction in parallel
results are obtained::results are obtained
coming to ilp::coming to ilp
ilp or instruction::ilp or instruction
compiler to identify::compiler to identify
identify what instructions::identify what instructions
don t leave::don t leave
leave this query::leave this query
carrying multiple operations::carrying multiple operations
long instruction word::long instruction word
word um whe::word um whe
coded multiple instructions::coded multiple instructions
multiple instructions put::multiple instructions put
picture very large::picture very large
large instruction word::large instruction word
meaning of vliw::meaning of vliw
architecture with dynamic::architecture with dynamic
compiler driven vliw::compiler driven vliw
driven vliw approach::driven vliw approach
multiple functional units::multiple functional units
units so multiple::units so multiple
handle multiple instructions::handle multiple instructions
access the register::access the register
file so register::file so register
support multiple read::support multiple read
multiple read write::multiple read write
read write ports::read write ports
parallel between vliw::parallel between vliw
vliw and super::vliw and super
scalar the difference::scalar the difference
case of vliw::case of vliw
long instructions carrying::long instructions carrying
instructions carrying multiple::instructions carrying multiple
hand um super::hand um super
scalar um architecture::scalar um architecture
decode and issue::decode and issue
fetched simultaneously pick::fetched simultaneously pick
showing that multiple::showing that multiple
terms of stream::terms of stream
vliw each instruction::vliw each instruction
two alternative architecture::two alternative architecture
alternative architecture versus::alternative architecture versus
architecture versus timing::architecture versus timing
top picture shows::top picture shows
four stage pipeline::four stage pipeline
stage pipeline lets::stage pipeline lets
stages are instruction::stages are instruction
instruction fetch decode::instruction fetch decode
fetch decode execute::fetch decode execute
execute and write::execute and write
overlapping this manner::overlapping this manner
instructions in flight::instructions in flight
super scalar suppose::super scalar suppose
degree of parallelism::degree of parallelism
fetching three instructions::fetching three instructions
decoding three instructions::decoding three instructions
executing three instructions::executing three instructions
instructions doing write::instructions doing write
doing write back::doing write back
instructions um biw::instructions um biw
instruction being fetched::instruction being fetched
fetched single instruction::fetched single instruction
instruction being decoded::instruction being decoded
out multiple operation::out multiple operation
place three architecture::place three architecture
super scalar processors::super scalar processors
ibm s power::ibm s power
high performance desktop::high performance desktop
performance desktop computing::performance desktop computing
desktop computing machines::desktop computing machines
scalar processors vliw::scalar processors vliw
specialized in varied::specialized in varied
applications so question::applications so question
scalar is popular::scalar is popular
popular for general::popular for general
general purpose computing::general purpose computing
binary code compatibility::binary code compatibility
eighty six processor::eighty six processor
pentium a super::pentium a super
super scalar version::super scalar version
thing the code::thing the code
code compatibility exists::code compatibility exists
made to work::made to work
machine and run::machine and run
series as long::series as long
long as instruction::long as instruction
user is concerned::user is concerned
machine doing executing::machine doing executing
speed through vliw::speed through vliw
regenerate the code::regenerate the code
detect um parallelism::detect um parallelism
parallelism at instruction::parallelism at instruction
instruction level pack::instruction level pack
pack the instruction::pack the instruction
run the code::run the code
source level compatibility::source level compatibility
object level compatibility::object level compatibility
vliw um processor::vliw um processor
require very specialize::require very specialize
impossible to code::impossible to code
code normal scalar::code normal scalar
normal scalar machine::normal scalar machine
machine by hand::machine by hand
code super scalar::code super scalar
require anything extra::require anything extra
designed for super::designed for super
super scalar processor::super scalar processor
account some features::account some features
features and produce::features and produce
produce better code::produce better code
machine is super::machine is super
busy the compiler::busy the compiler
compiler can produce::compiler can produce
specially for super::specially for super
density in vliw::density in vliw
find many instructions::find many instructions
cost super scalars::cost super scalars
achieve a higher::achieve a higher
degree of performance::degree of performance
performance in vlwi::performance in vlwi
vlwi technique provided::vlwi technique provided
words about exception::words about exception
discussed exceptional handling::discussed exceptional handling
handling in case::handling in case
case of multi::case of multi
case of pipeline::case of pipeline
design in fact::design in fact
fact in pipeline::fact in pipeline
pipeline design exception::pipeline design exception
design exception handling::design exception handling
instructions in processing::instructions in processing
instruction is showing::instruction is showing
overflow another instruction::overflow another instruction
showing um page::showing um page
fault or illegal::fault or illegal
types of exceptions::types of exceptions
show an exception::show an exception
results in overflow::results in overflow
overflow okay overflow::overflow okay overflow
done the arithmetic::done the arithmetic
supposed to occur::supposed to occur
things very difficult::things very difficult
interrupt or imprecise::interrupt or imprecise
case of precise::case of precise
precise interrupt means::precise interrupt means
interrupts or exception::interrupts or exception
instructions are occurring::instructions are occurring
insist on precise::insist on precise
interrupts to happen::interrupts to happen
saving of status::saving of status
naturally very complex::naturally very complex
handle the exception::handle the exception
back in resume::back in resume
resume the instruction::resume the instruction
instructions were executed::instructions were executed
out and restart::out and restart
lot of possibilities::lot of possibilities
point um realizing::point um realizing
finally to summarize::finally to summarize
stalls which occurred::stalls which occurred
due to branch::due to branch
pipeline we looked::pipeline we looked
techniques to improve::techniques to improve
improve branch performance::improve branch performance
branch performance including::branch performance including
performance including branch::performance including branch
including branch elimination::including branch elimination
branch elimination branch::branch elimination branch
elimination branch speed::elimination branch speed
static or dynamic::static or dynamic
dyna dynamic scheduling::dyna dynamic scheduling
superscalar and vliw::superscalar and vliw
basically instruction level::basically instruction level
level parallel architectures::level parallel architectures
performance beyond cpi::performance beyond cpi
ideally it lies::ideally it lies
lies to make::lies to make
cpi one barrier::cpi one barrier
super scalar manner::super scalar manner
science and engineering,iit::science and engineering,iit
engineering,iit delhi lecture::engineering,iit delhi lecture
set architecture-1 today::set architecture-1 today
discussion on instruction::discussion on instruction
instruction set arhitecture::instruction set arhitecture
lecture instructions form::lecture instructions form
form the interface::form the interface
interface between hardware::interface between hardware
hardware and software::hardware and software
software instructions provide::software instructions provide
provide the primitive::provide the primitive
operations in terms::operations in terms
basic behaviour definitions::basic behaviour definitions
definitions which hardware::definitions which hardware
understand what action::understand what action
action they perform::action they perform
things so first::things so first
instructions for carrying::instructions for carrying
carrying out arithmetic::carrying out arithmetic
out arithmetic operations::out arithmetic operations
arithmetic operations simple::arithmetic operations simple
data the data::data the data
data is required::data is required
memory and registers::memory and registers
decisions are made::decisions are made
made in program::made in program
control is defined::control is defined
defined using instructions::defined using instructions
handle constant operands::handle constant operands
situations where constant::situations where constant
participate in computations::participate in computations
carry the distinction::carry the distinction
assembly and machine::assembly and machine
relationship between machine::relationship between machine
language um machine::language um machine
basic building blocks::basic building blocks
harware can interpret::harware can interpret
designing an instruction::designing an instruction
goal certain goal::goal certain goal
provide a set::provide a set
set of operations::set of operations
operations where computation::operations where computation
maximize performance maximize::maximize performance maximize
performance maximize efficiency::performance maximize efficiency
cost of implementing::cost of implementing
implementing these instructions::implementing these instructions
goals as power::goals as power
purpose of reaching::purpose of reaching
takes a toy::takes a toy
machine and describe::machine and describe
developed by people::developed by people
people at stanford::people at stanford
stanford in early::stanford in early
risk reduced instruction::risk reduced instruction
reduced instruction set::reduced instruction set
instruction set computers::instruction set computers
lines and mips::lines and mips
video games silicon::video games silicon
games silicon graphics::games silicon graphics
silicon graphics computers::silicon graphics computers
sony play station::sony play station
begin with arithmetic::begin with arithmetic
simplest arithmetic operations::simplest arithmetic operations
add and subtract::add and subtract
add two numbers::add two numbers
numbers to produce::numbers to produce
produce the result::produce the result
equivalently in mips::equivalently in mips
mips assembly language::mips assembly language
register name dollar::register name dollar
two another register::two another register
association between registers::association between registers
established by compiler::established by compiler
arbitarily some decision::arbitarily some decision
registers of mips::registers of mips
two are appearing::two are appearing
two are operands::two are operands
register and putting::register and putting
putting the result::putting the result
simple and infact::simple and infact
architecture and simplicity::architecture and simplicity
simplicity favors regularity::simplicity favors regularity
follow certain uniformity::follow certain uniformity
uniformity various operations::uniformity various operations
follow similar format::follow similar format
instructions for doing::instructions for doing
instruction which adds::instruction which adds
adds two numbers::adds two numbers
operands in mips::operands in mips
mips are thirty::mips are thirty
thirty two bit::thirty two bit
two bit numbers::two bit numbers
registers are thirty::registers are thirty
two bit registers::two bit registers
registers um question::registers um question
instruction can add::instruction can add
add two number::add two number
limit the size::limit the size
size because working::size because working
working on arbitary::working on arbitary
commonly your numbers::commonly your numbers
numbers can fit::numbers can fit
fit within thirty::fit within thirty
addition of thirty::addition of thirty
add larger numbers::add larger numbers
involve several operations::involve several operations
statement which subtracts::statement which subtracts
additions being done::additions being done
two the result::two the result
high level language::high level language
level language program::level language program
done by putting::done by putting
done in straight::done in straight
straight forward manner::straight forward manner
hold the program::hold the program
program but memory::program but memory
hold bulk data::hold bulk data
larger data structures::larger data structures
records structures arrays::records structures arrays
complexing you build::complexing you build
number of registers::number of registers
registers is limited::registers is limited
limited in mips::limited in mips
thirty two registers::thirty two registers
talking of arrays::talking of arrays
instructions to move::instructions to move
data between memory::data between memory
data from specific::data from specific
locations of memory::locations of memory
memory so memory::memory so memory
large one dimensional::large one dimensional
dimensional array consisting::dimensional array consisting
consisting of bytes::consisting of bytes
memory is considered::memory is considered
byte whereas operands::byte whereas operands
two bit operations::two bit operations
half the word::half the word
word of thirty::word of thirty
addressability is provided::addressability is provided
resolution that means::resolution that means
address each individual::address each individual
addressed so addresses::addressed so addresses
terms of byte::terms of byte
bits of address::bits of address
raised to power::raised to power
thirty two bytes::thirty two bytes
raised power thirty::raised power thirty
thirty two minus::thirty two minus
talking of words::talking of words
two bit words::two bit words
words each consisting::words each consisting
power thirty words::power thirty words
relationship of bytes::relationship of bytes
bytes with word::bytes with word
two different conventions::two different conventions
ignore this spelling::ignore this spelling
error little endian::error little endian
endian or big::endian or big
endian little endian::endian little endian
word you start::word you start
start numbering bytes::start numbering bytes
two are reverse::two are reverse
showing most significant::showing most significant
bit of word::bit of word
big endian convention::big endian convention
lsb least significant::lsb least significant
significant bit end::significant bit end
follow different conventions::follow different conventions
intel processors follow::intel processors follow
follow little endian::follow little endian
endian convention spark::endian convention spark
convention spark processor::convention spark processor
processor follows big::processor follows big
work in lab::work in lab
lab with simulator::lab with simulator
adapts the convention::adapts the convention
running on pentiums::running on pentiums
find one convention::find one convention
fifty in computer::fifty in computer
find different convention::find different convention
words are aligned::words are aligned
situations where words::situations where words
aligned to address::aligned to address
physically these bytes::physically these bytes
bytes are grouped::bytes are grouped
grouped as shown::grouped as shown
word which consists::word which consists
consists of byte::consists of byte
logically can pick::logically can pick
word from byte::word from byte
consisting of byte::consisting of byte
word is spread::word is spread
back to instructions::back to instructions
instructions which excess::instructions which excess
moved between registers::moved between registers
registers and memory::registers and memory
store so suppose::store so suppose
element okay lets::element okay lets
memory one word::memory one word
stands for load::stands for load
load w stands::load w stands
stands for word::stands for word
loading a word::loading a word
instructions for load::instructions for load
lets not worry::lets not worry
writing a number::writing a number
imagining that register::imagining that register
holds the starting::holds the starting
elements of type::elements of type
integer which means::integer which means
byte of thirty::byte of thirty
numbers one number::numbers one number
number is thirty::number is thirty
two another number::two another number
contained in register::contained in register
added and define::added and define
define the address::define the address
address is loaded::address is loaded
perform an addition::perform an addition
loaded from memory::loaded from memory
result is put::result is put
put in register::put in register
writes this value::writes this value
instruction sw stand::instruction sw stand
stand for store::stand for store
word the address::word the address
change this constant::change this constant
described a simple::described a simple
index of array::index of array
memory perform arithmetic::memory perform arithmetic
perform arithmetic put::perform arithmetic put
put the result::put the result
back in memory::back in memory
simply a matter::simply a matter
matter of moving::matter of moving
interchange two elements::interchange two elements
taking an array::taking an array
variable to interchange::variable to interchange
programming for interchanging::programming for interchanging
interchanging two variables::interchanging two variables
temporary and cycle::temporary and cycle
basically its clear::basically its clear
require two loads::require two loads
first two instructions::first two instructions
contents of register::contents of register
multiply instruction takes::multiply instruction takes
takes one value::takes one value
offset we require::offset we require
require four times::require four times
address of array::address of array
four to begin::four to begin
address is prepared::address is prepared
prepared in register::prepared in register
offset zero offset::offset zero offset
done entire address::done entire address
entire address calculation::entire address calculation
two and offset::two and offset
load a word::load a word
word you pick::word you pick
fifteen this loads::fifteen this loads
loads second load::loads second load
store in opposite::store in opposite
sixteen is stored::sixteen is stored
fifteen is stored::fifteen is stored
two get interchanged::two get interchanged
explicitly used temporary::explicitly used temporary
put in reverse::put in reverse
order um ignore::order um ignore
talking of instructions::talking of instructions
written in symbolic::written in symbolic
machine machine instruction::machine machine instruction
instruction or machine::instruction or machine
instructions in binary::instructions in binary
form are thirty::form are thirty
uniformity the data::uniformity the data
instructions also thirty::instructions also thirty
operation is add::operation is add
registers involved registers::registers involved registers
total of thirty::total of thirty
etcetera are numbered::etcetera are numbered
etcetera numbered sixteen::etcetera numbered sixteen
numbered sixteen seventeen::numbered sixteen seventeen
directly by number::directly by number
register two register::register two register
register five register::register five register
two bit word::two bit word
word is divided::word is divided
fields each field::fields each field
fields the first::fields the first
short this specifies::short this specifies
specifies which operation::specifies which operation
done which operation::done which operation
operation the instruction::operation the instruction
code op code::code op code
code for add::code for add
limit the total::limit the total
real machine requires::real machine requires
group of instructions::group of instructions
infact subtract instruction::infact subtract instruction
pattern here contrary::pattern here contrary
instruction add subtract::instruction add subtract
fields five bits::fields five bits
field because registers::field because registers
bit numbers numbering::bit numbers numbering
instruction this filed::instruction this filed
filed is unused::filed is unused
short for shift::short for shift
register fields correspond::register fields correspond
stands for register::stands for register
code for seventeen::code for seventeen
two bit number::two bit number
number which defines::number which defines
defines this instruction::defines this instruction
instruction so add::instruction so add
machine is concerned::machine is concerned
writing a long::writing a long
write in compact::write in compact
form in hexa::form in hexa
hexa decimal form::hexa decimal form
instructions load store::instructions load store
store in machine::store in machine
follow same form::follow same form
make a deviation::make a deviation
idea of regularity::idea of regularity
realize that good::realize that good
good design demands::good design demands
demands a compromise::demands a compromise
format r stands::format r stands
constants so lets::constants so lets
number of fields::number of fields
basically four fields::basically four fields
sixteen bit field::sixteen bit field
instruction like load::instruction like load
thirty two dollar::thirty two dollar
field so corresponds::field so corresponds
writing in binary::writing in binary
put decimal equivalents::put decimal equivalents
code of eighteen::code of eighteen
two is put::two is put
coming in load::coming in load
sixteen bit number::sixteen bit number
instructions and instructions::instructions and instructions
instructions for moving::instructions for moving
instruction which define::instruction which define
two simple instructions::two simple instructions
bne and beq::bne and beq
beq bne stands::beq bne stands
stands for branch::stands for branch
equal and beq::equal and beq
branch if equal::branch if equal
equal to illustrate::equal to illustrate
illustrate this lets::illustrate this lets
simple if statement::simple if statement
perform this addition::perform this addition
make this comparison::make this comparison
appearing as equality::appearing as equality
language or symbolic::language or symbolic
symbolic assembly language::symbolic assembly language
equal then branch::equal then branch
two a statement::two a statement
arbitary in names::arbitary in names
doesn t hold::doesn t hold
label is linked::label is linked
symbol j stands::symbol j stands
stands for jump::stands for jump
operand for comparison::operand for comparison
simply say unconditional::simply say unconditional
branching to label::branching to label
puts the result::puts the result
result this adds::result this adds
addition we don::addition we don
jump here jump::jump here jump
jump to lab::jump to lab
two this label::two this label
label is label::label is label
instruction after subtract::instruction after subtract
instruction the control::instruction the control
jumps to lab::jumps to lab
two so lab::two so lab
control is organised::control is organised
comparison for equality::comparison for equality
greater than type::greater than type
type of comparison::type of comparison
instruction called slt::instruction called slt
slt which stands::slt which stands
stands for set::stands for set
set a register::set a register
register to value::register to value
depending upon comparison::depending upon comparison
alter the flow::alter the flow
beq or bna::beq or bna
bna to achieve::bna to achieve
achieve an effect::achieve an effect
lets say blt::lets say blt
spirit as beq::spirit as beq
compare two register::compare two register
register for equality::register for equality
equality and branch::equality and branch
condition holds suppose::condition holds suppose
suppose the comparison::suppose the comparison
combine a comparison::combine a comparison
instruction or beq::instruction or beq
beq or bne::beq or bne
make compare make::make compare make
compare make comparison::compare make comparison
make comparison result::make comparison result
register is equal::register is equal
introduced this jump::introduced this jump
jump instruction lets::jump instruction lets
introduced for decision::introduced for decision
making and flow::making and flow
control so bne::control so bne
code two register::code two register
defines the label::defines the label
pick the data::pick the data
define an address::define an address
address but address::address but address
assembly form symbolic::assembly form symbolic
form symbolic form::form symbolic form
written a label::written a label
number which appears::number which appears
essentially an offset::essentially an offset
define the destination::define the destination
destination where jump::destination where jump
code and remaining::code and remaining
twenty six bits::twenty six bits
jump address slt::jump address slt
address slt instruction::address slt instruction
code three register::code three register
register fields shift::register fields shift
fields shift amount::fields shift amount
shift amount field::shift amount field
field and function::field and function
function together define::function together define
define slt instruction::define slt instruction
move to handling::move to handling
handling of constants::handling of constants
lot of cases::lot of cases
deal with constants::deal with constants
follow different approach::follow different approach
program is loaded::program is loaded
memory this constant::memory this constant
put the constants::put the constants
constants as part::constants as part
putting same instructions::putting same instructions
stands for add::stands for add
brought from register::brought from register
register or memory::register or memory
described the meaning::described the meaning
meaning is obvious::meaning is obvious
instructions also follow::instructions also follow
follow i format::follow i format
code two registers::code two registers
constants are sixteen::constants are sixteen
hardwared to register::hardwared to register
register whose contents::register whose contents
suppose you write::suppose you write
write an add::write an add
instruction with register::instruction with register
leave it unchanged::leave it unchanged
perform add operation::perform add operation
simply moving data::simply moving data
separate move instruction::separate move instruction
instruction um add::instruction um add
moving by virtue::moving by virtue
written as dollar::written as dollar
contained in sixteen::contained in sixteen
work with thirty::work with thirty
two bit constants::two bit constants
deal with sixteen::deal with sixteen
sixteen bit constant::sixteen bit constant
bit constant rate::bit constant rate
designed for larger::designed for larger
eighteen twenty twenty::eighteen twenty twenty
single instruction handling::single instruction handling
instruction handling thirty::instruction handling thirty
two bit constant::two bit constant
instructions one instruction::instructions one instruction
left half left::left half left
half left sixteen::half left sixteen
sixteen another instruction::sixteen another instruction
half right sixteen::half right sixteen
right sixteen bits::right sixteen bits
extraction called lui::extraction called lui
lui which stands::lui which stands
lui upper means::lui upper means
means it loads::means it loads
loads upper part::loads upper part
part of register::part of register
register left half::register left half
half of register::half of register
constant so lui::constant so lui
constant sixteen bit::constant sixteen bit
constant this instruction::constant this instruction
instruction will bring::instruction will bring
bring this constant::bring this constant
constant into upper::constant into upper
half or left::half or left
constant which corresponds::constant which corresponds
happening is shown::happening is shown
instruction is executed::instruction is executed
half the right::half the right
instruction is taking::instruction is taking
taking this constant::taking this constant
right half left::right half left
two are odd::two are odd
odd which means::odd which means
load a constant::load a constant
work with single::work with single
binary or machine::binary or machine
subtract immediate add::subtract immediate add
follow r format::follow r format
add immediate subtract::add immediate subtract
subtract immediate follow::subtract immediate follow
two branch instructions::two branch instructions
discussed the format::discussed the format
unconditional branch instruction::unconditional branch instruction
instruction called jump::instruction called jump
jump the format::jump the format
out here load::out here load
load word store::load word store
word store word::word store word
word also form::word also form
format lui load::format lui load
lui load upper::lui load upper
form of bne::form of bne
bne is branch::bne is branch
beq is branch::beq is branch
smaller in size::smaller in size
size adding smaller::size adding smaller
adding smaller numbers::adding smaller numbers
numbers the circuitory::numbers the circuitory
hardware for adding::hardware for adding
adding two thirty::adding two thirty
numbers is faster::numbers is faster
faster than hardware::faster than hardware
adding two sixty::adding two sixty
four bit numbers::four bit numbers
swap instruction swap::swap instruction swap
instruction swap operation::instruction swap operation
basically the key::basically the key
two load instructions::two load instructions
two store instructions::two store instructions
reading two words::reading two words
words from memory::words from memory
sixteen and writing::sixteen and writing
swapped what remains::swapped what remains
preparing the addresses::preparing the addresses
addresses of memory::addresses of memory
array is constant::array is constant
array where compiler::array where compiler
compiler would put::compiler would put
four and index::four and index
integers are concerned::integers are concerned
concerned they occupy::concerned they occupy
occupy one word::occupy one word
addressing is byte::addressing is byte
add four times::add four times
first multiply instruction::first multiply instruction
preparing four times::preparing four times
two so register::two so register
four are added::four are added
two has complete::two has complete
additional four offset::additional four offset
takes two thirty::takes two thirty
words and performs::words and performs
performs or operation::performs or operation
takes one register::takes one register
bits but actual::bits but actual
two bit operation::two bit operation
operation so remaining::operation so remaining
remaining sixteen positions::remaining sixteen positions
positions are filled::positions are filled
filled with zeros::filled with zeros
number first number::number first number
number is contained::number is contained
number is obtained::number is obtained
obtained by prefixing::obtained by prefixing
prefixing sixteen zeros::prefixing sixteen zeros
put two parts::put two parts
form a thirty::form a thirty
market the natural::market the natural
performance which performs::performance which performs
instructions are organized::instructions are organized
computer is designed::computer is designed
designed the question::designed the question
alternatives which alternative::alternatives which alternative
issue of performance::issue of performance
relationship between performance::relationship between performance
performance and architectural::performance and architectural
performance the question::performance the question
perspective okay user::perspective okay user
view of design::view of design
basis for comparison::basis for comparison
compare one versus::compare one versus
definition is required::definition is required
talk of users::talk of users
understand the relationship::understand the relationship
purchasers perpesctive suppose::purchasers perpesctive suppose
buy a computer::buy a computer
lot of variety::lot of variety
manufacturers different vendors::manufacturers different vendors
set of choices::set of choices
range of machines::range of machines
compare performance wise::compare performance wise
performance and cost::performance and cost
performance price ratio::performance price ratio
pose this question::pose this question
hand from designers::hand from designers
major styles load::major styles load
styles load store::styles load store
load store style::load store style
style or memory::style or memory
memory memory style::memory memory style
memory style stack::memory style stack
style stack style::style stack style
style okay accumulator::style okay accumulator
type of machine::type of machine
philosophies of designing::philosophies of designing
designing and instruction::designing and instruction
build the hardware::build the hardware
choices on cost::choices on cost
cost and performance::cost and performance
instruction design stage::instruction design stage
question of performance::question of performance
fix the price::fix the price
out different ways::out different ways
study of performance::study of performance
quantitative and precised::quantitative and precised
measuring the performance::measuring the performance
measurement may involve::measurement may involve
number which summarizes::number which summarizes
experiment and based::experiment and based
make good choices::make good choices
two issues involved::two issues involved
issues involved performance::issues involved performance
make a judgement::make a judgement
market a system::market a system
project certain things::project certain things
account your requirements::account your requirements
evaluation or definition::evaluation or definition
understanding of performance::understanding of performance
method of measurement::method of measurement
method of summarizing::method of summarizing
method of comparing::method of comparing
comparing is isimportant::comparing is isimportant
view of understanding::view of understanding
understanding various design::understanding various design
piece of hardware::piece of hardware
design choice performs::design choice performs
doing word processing::doing word processing
things may happen::things may happen
influencing the performance::influencing the performance
performance are related::performance are related
related to hardware::related to hardware
factors are related::factors are related
related to architectural::related to architectural
influence of instruction::influence of instruction
performance okay including::performance okay including
including certain instruction::including certain instruction
influence on performance::influence on performance
performance or instruction::performance or instruction
develop certain understanding::develop certain understanding
bring some basic::bring some basic
points into attention::points into attention
set of aircrafts::set of aircrafts
shows a set::shows a set
kind of perfomance::kind of perfomance
first three columns::first three columns
ignore the last::ignore the last
last two columns::last two columns
moment the first::moment the first
first second column::first second column
aircraft okay expressed::aircraft okay expressed
expressed in miles::expressed in miles
range in terms::range in terms
terms of miles::terms of miles
capacity in terms::capacity in terms
number of passengers::number of passengers
matter of telling::matter of telling
speed all right::speed all right
target was speed::target was speed
speed then concorde::speed then concorde
interested in long::interested in long
connect two airports::connect two airports
fifty all right::fifty all right
non stop flight::non stop flight
talking of passenger::talking of passenger
four fifty passengers::four fifty passengers
choice is boeing::choice is boeing
four seven right::four seven right
make two trips::make two trips
fix your targets::fix your targets
area of interest::area of interest
whats your application::whats your application
hours to connect::hours to connect
connect two points::connect two points
two points lets::two points lets
four thousand miles::four thousand miles
number of hours::number of hours
throughput okay number::throughput okay number
carried into miles::carried into miles
kind of composite::kind of composite
two the figures::two the figures
combination of capacity::combination of capacity
criteria okay multiple::criteria okay multiple
machines of performance::machines of performance
context of computers::context of computers
question how long::question how long
job to run::job to run
run so moment::run so moment
run it takes::run it takes
takes certain amount::takes certain amount
execute the program::execute the program
interactive environment lets::interactive environment lets
lets say database::lets say database
query or atm::query or atm
type of environment::type of environment
give a command::give a command
make a request::make a request
seconds or minutes::seconds or minutes
minutes or hours::minutes or hours
type of measure::type of measure
out the rate::out the rate
carried out number::carried out number
number of tasks::number of tasks
tasks per unit::tasks per unit
average execution rate::average execution rate
shoes of computer::shoes of computer
computer system manager::computer system manager
run every hour::run every hour
wait or user::wait or user
collection of computers::collection of computers
throughput some waiting::throughput some waiting
times are introduced::times are introduced
replace all computers::replace all computers
throughput more important::throughput more important
important than execution::important than execution
depends upon perhas::depends upon perhas
perhas the person::perhas the person
concern of response::concern of response
number a larger::number a larger
larger number represents::larger number represents
represents better performance::represents better performance
reciprocal of execution::reciprocal of execution
performance of lets::performance of lets
lets say machine::lets say machine
long it takes::long it takes
simple and straight::simple and straight
straight forward definition::straight forward definition
talk of relative::talk of relative
two performance numbers::two performance numbers
performance numbers performance::performance numbers performance
terms of execution::terms of execution
machine a runs::machine a runs
runs the program::runs the program
program in twenty::program in twenty
seconds and machine::seconds and machine
machine b runs::machine b runs
twenty five seconds::twenty five seconds
twenty times faster::twenty times faster
four or twenty::four or twenty
twenty five percent::twenty five percent
point eight times::point eight times
concorde versus boeing::concorde versus boeing
ratio of speeds::ratio of speeds
ratio which means::ratio which means
means two point::means two point
point two times::point two times
two times faster::two times faster
twenty percent times::twenty percent times
percent times faster::percent times faster
faster than boeing::faster than boeing
point five hours::point five hours
throughput okay suppose::throughput okay suppose
suppose we define::suppose we define
chart as persons::chart as persons
persons or passengers::persons or passengers
passengers carried multiplied::passengers carried multiplied
multiplied by miles::multiplied by miles
pmph figure passenger::pmph figure passenger
figure passenger capacity::figure passenger capacity
passenger capacity multiplied::passenger capacity multiplied
multiplied by speed::multiplied by speed
boeing so concorde::boeing so concorde
concorde is point::concorde is point
percent time faster::percent time faster
faster than concorde::faster than concorde
sense all right::sense all right
comparison was faster::comparison was faster
faster in speed::faster in speed
sense or travel::sense or travel
travel time sense::travel time sense
understand the question::understand the question
order to improve::order to improve
upgrading a machine::upgrading a machine
lets say pentium::lets say pentium
four two point::four two point
point eight giga::point eight giga
hertz is replaced::hertz is replaced
replaced by pentium::replaced by pentium
point zero giga::point zero giga
response time change::response time change
improve okay increasing::improve okay increasing
increasing the number::increasing the number
number of jobs::number of jobs
running a sequence::running a sequence
sequence of jobs::sequence of jobs
jobs all right::jobs all right
right so imagine::right so imagine
imagine that people::imagine that people
start taking multiple::start taking multiple
taking multiple jobs::taking multiple jobs
improve the throughput::improve the throughput
reduce the response::reduce the response
overhead of switching::overhead of switching
overhead of doing::overhead of doing
doing time sharing::doing time sharing
incurring some overhead::incurring some overhead
incurring so response::incurring so response
deteriorate okay suppose::deteriorate okay suppose
couple of machines::couple of machines
machines five machines::machines five machines
machines are lying::machines are lying
add a couple::add a couple
throughput certainly throughput::throughput certainly throughput
throughput will improve::throughput will improve
improve more jobs::improve more jobs
response time doesn::response time doesn
wait in front::wait in front
talking of total::talking of total
takes to execute::takes to execute
execute your job::execute your job
machines or ten::machines or ten
machines or fifty::machines or fifty
network of atm::network of atm
increase the number::increase the number
number of processors::number of processors
number of network::number of network
network of atmmachines::network of atmmachines
end for supporting::end for supporting
supporting this atm::supporting this atm
right more machines::right more machines
fire a transcaction::fire a transcaction
transcaction on atm::transcaction on atm
atm but processor::atm but processor
processor is busy::processor is busy
processors take care::processors take care
fast so continuing::fast so continuing
kind of practical::kind of practical
question now suppose::question now suppose
processors two machines::processors two machines
vendors the pentium::vendors the pentium
takes eight seconds::takes eight seconds
takes ten seconds::takes ten seconds
reasons to buy::reasons to buy
budget limiting budget::budget limiting budget
fairly complicated depending::fairly complicated depending
output to happen::output to happen
multi tasking environment::multi tasking environment
ultimately is sum::ultimately is sum
hand the cpu::hand the cpu
cpu actually spends::cpu actually spends
doing your program::doing your program
exclude the disk::exclude the disk
exclude the waiting::exclude the waiting
spent actually executing::spent actually executing
executing your instructions::executing your instructions
doing some service::doing some service
loads your program::loads your program
program it takes::program it takes
care of communication::care of communication
incurrs is attributable::incurrs is attributable
speaking the total::speaking the total
total cpu execution::total cpu execution
spent on user::spent on user
executed to serve::executed to serve
serve your program::serve your program
factors which influence::factors which influence
essentially user cpu::essentially user cpu
long a cpu::long a cpu
give an architecture::give an architecture
run that program::run that program
clarify these points::clarify these points
program is twenty::program is twenty
twenty two seconds::twenty two seconds
two seconds user::two seconds user
seconds user component::seconds user component
component is ninety::component is ninety
hundred twelve seconds::hundred twelve seconds
total one sixty::total one sixty
sixty two seconds::sixty two seconds
spent in executing::spent in executing
executing a user::executing a user
express in terms::express in terms
processor is running::processor is running
two giga hertz::two giga hertz
hertz that means::hertz that means
half ano seconds::half ano seconds
ano seconds cycle::ano seconds cycle
events takes place::events takes place
place at discrete::place at discrete
clock changes state::clock changes state
two hundred mega::two hundred mega
hundred mega hertz::hundred mega hertz
hertz the cycle::hertz the cycle
execute to cycle::execute to cycle
cpu clock cycles::cpu clock cycles
cycles into clock::cycles into clock
suppose your cycle::suppose your cycle
cycles for doing::cycles for doing
cpu will spend::cpu will spend
spend one milli::spend one milli
clock cycles divivded::clock cycles divivded
divivded by clock::divivded by clock
frequency or clock::frequency or clock
thing because clock::thing because clock
rate and cycle::rate and cycle
rewritten as cpu::rewritten as cpu
clock cycles depend::clock cycles depend
product of instruction::product of instruction
count and cpi::count and cpi
stands for cycles::stands for cycles
cycles per instruction::cycles per instruction
number of cycles::number of cycles
takes to run::takes to run
run a program::run a program
cpu time equal::cpu time equal
equal to instruction::equal to instruction
instruction count multiplied::instruction count multiplied
multiplied by cpi::multiplied by cpi
multiplied by clock::multiplied by clock
period alternatively cpu::period alternatively cpu
divided by clock::divided by clock
rate or clock::rate or clock
frequency so units::frequency so units
units of thee::units of thee
talking of seconds::talking of seconds
cpu time seconds::cpu time seconds
instructions per program::instructions per program
cpi is cycles::cpi is cycles
instruction and clock::instruction and clock
rate is seconds::rate is seconds
seconds per clock::seconds per clock
balanced okay instructions::balanced okay instructions
cancel with instruction::cancel with instruction
instruction um cycles::instruction um cycles
cycles get cancel::cycles get cancel
cancel with cycles::cancel with cycles
seconds per program::seconds per program
left hand side::left hand side
hand side seconds::hand side seconds
side seconds required::side seconds required
required to execute::required to execute
execute a program::execute a program
program or seconds::program or seconds
processor with clock::processor with clock
rate of fifty::rate of fifty
fifty mega hertz::fifty mega hertz
talking of cycles::talking of cycles
cycles everything happening::cycles everything happening
happening in cycles::happening in cycles
talking of average::talking of average
substituting the value::substituting the value
value the instruction::value the instruction
count is thousand::count is thousand
rate is fifty::rate is fifty
hertz so fifty::hertz so fifty
fifty into ten::fifty into ten
ten raised power::ten raised power
seventy into ten::seventy into ten
raised power minus::raised power minus
minus six seconds::minus six seconds
seconds or seventy::seconds or seventy
seventy macro seconds::seventy macro seconds
clock frequency increases::clock frequency increases
asked this kind::asked this kind
kind of question::kind of question
two fifty mega::two fifty mega
hertz other factors::hertz other factors
factors others remaining::factors others remaining
ratio of inverse::ratio of inverse
rates or direct::rates or direct
ratio of clock::ratio of clock
two five times::two five times
point of fractional::point of fractional
mentioned that cpi::mentioned that cpi
implement the hardware::implement the hardware
notice that hardware::notice that hardware
hardware takes longer::hardware takes longer
instructions and shorter::instructions and shorter
find an average::find an average
average so cpi::average so cpi
essentially a waited::essentially a waited
average of cpis::average of cpis
cpis of individual::cpis of individual
individual instructions suppose::individual instructions suppose
instructions or instruction::instructions or instruction
frequently this instruction::frequently this instruction
instruction is occuring::instruction is occuring
categories of instructions::categories of instructions
instructions arithmetic instructions::instructions arithmetic instructions
present fifty percent::present fifty percent
program that means::program that means
half the instruction::half the instruction
program are add::program are add
subtract multiply divide::subtract multiply divide
category twenty percent::category twenty percent
percent of instructions::percent of instructions
load ten percent::load ten percent
store twenty percent::store twenty percent
twenty percent branches::twenty percent branches
hundred the cpi::hundred the cpi
alu instruction cpi::alu instruction cpi
stands for arithmetic::stands for arithmetic
arithmetic logic unit::arithmetic logic unit
logic unit instruction::logic unit instruction
arithmetical or logical::arithmetical or logical
cycle load takes::cycle load takes
takes five cycles::takes five cycles
cycles store takes::cycles store takes
takes three cycles::takes three cycles
cycles branch takes::cycles branch takes
takes two cycles::takes two cycles
fraction while computing::fraction while computing
two into point::two into point
average an instruction::average an instruction
spends two point::spends two point
point two cycles::point two cycles
cpu would spend::cpu would spend
spend doing alu::spend doing alu
doing alu instructions::doing alu instructions
spend doing load::spend doing load
doing load instrution::doing load instrution
divided by total::divided by total
two so point::two so point
twenty three percent::twenty three percent
forty five percent::forty five percent
point two point::point two point
processor will spend::processor will spend
write a program::write a program
attention on minimizing::attention on minimizing
minimizing the loads::minimizing the loads
kind of instructions::kind of instructions
instructions take longer::instructions take longer
instructions take shorter::instructions take shorter
group all alu::group all alu
situations where multiplications::situations where multiplications
multiplications and divisions::multiplications and divisions
longer than addition::longer than addition
addition and subtraction::addition and subtraction
operations and floating::operations and floating
floating point operations::floating point operations
point operations floating::point operations floating
operations floating point::operations floating point
longer than integer::longer than integer
integer operations memory::integer operations memory
operations memory accesses::operations memory accesses
accesses take longer::accesses take longer
longer than accessing::longer than accessing
instructions for adding::instructions for adding
adding one picks::adding one picks
picks up operands::picks up operands
operands from memory::operands from memory
memory one picks::memory one picks
operands from registers::operands from registers
taking from register::taking from register
change your cycle::change your cycle
redesign a faster::redesign a faster
cycles because number::cycles because number
required for doing::required for doing
doing an instruction::doing an instruction
make the cycle::make the cycle
divide into cycles::divide into cycles
cycles would determine::cycles would determine
make your cycles::make your cycles
work per cycle::work per cycle
product of clock::product of clock
multiplied by number::multiplied by number
attempt to pull::attempt to pull
quantity and hoping::quantity and hoping
change can influence::change can influence
program is cycles::program is cycles
cycles per program::cycles per program
multiplied by seconds::multiplied by seconds
seconds per cycle::seconds per cycle
multiplied by cycles::multiplied by cycles
reduce this seconds::reduce this seconds
increase the clock::increase the clock
make a move::make a move
complicated statement lets::complicated statement lets
program which runs::program which runs
runs in ten::runs in ten
seconds on computer::seconds on computer
four hundred mega::four hundred mega
design and build::design and build
run this program::run this program
program is concerned::program is concerned
increase will effect::increase will effect
effect the rest::effect the rest
cpu design causing::cpu design causing
design causing machine::design causing machine
require one point::require one point
program what clock::program what clock
designer to target::designer to target
answer is giving::answer is giving
sir the number::sir the number
seconds by executing::seconds by executing
executing n instructions::executing n instructions
set is instruction::set is instruction
figure would change::figure would change
two and divided::two and divided
times four hundred::times four hundred
four hundred multiplied::four hundred multiplied
multiplied by ten::multiplied by ten
answer all right::answer all right
difference between system::difference between system
system cpu execution::system cpu execution
system means operating::system means operating
means operating system::means operating system
thing just word::thing just word
computer architecture today::computer architecture today
walks of life::walks of life
shapes and sizes::shapes and sizes
computer of today::computer of today
today it packs::today it packs
power more storage::power more storage
computer of nineteen::computer of nineteen
occupied a big::occupied a big
hall much bigger::hall much bigger
form of computer::form of computer
weather prediction nuclear::weather prediction nuclear
prediction nuclear simulation::prediction nuclear simulation
simulation for astronomical::simulation for astronomical
calculation and bio::calculation and bio
tiny and small::tiny and small
home appliances cameras::home appliances cameras
appliances cameras mobile::appliances cameras mobile
cameras mobile phones::cameras mobile phones
remote to control::remote to control
control this projector::control this projector
variety of computers::variety of computers
computers entire diversity::computers entire diversity
diversity in space::diversity in space
principle which binds::principle which binds
forms of computers::forms of computers
motivation for studying::motivation for studying
define the term::define the term
term computer architecture::term computer architecture
propose to learn::propose to learn
find this basic::find this basic
principle is common::principle is common
small and large::small and large
learn how computers::learn how computers
people have developed::people have developed
developed wrong notion::developed wrong notion
designed or built::designed or built
design and construction::design and construction
aspects of computers::aspects of computers
important in todays::important in todays
responsible for giving::responsible for giving
kind of performance::kind of performance
structure into cahes::structure into cahes
cahes and virtual::cahes and virtual
pipelined how instructions::pipelined how instructions
put in parallel::put in parallel
build a computer::build a computer
opportunity for designing::opportunity for designing
design an improved::design an improved
processors getting designed::processors getting designed
software stream understanding::software stream understanding
understanding of architecture::understanding of architecture
influences the performance::influences the performance
relationship between hardware::relationship between hardware
manager or administrator::manager or administrator
buy a set::buy a set
set of computers::set of computers
system is important::system is important
knowledge of basic::knowledge of basic
relations with basic::relations with basic
area of embedded::area of embedded
computers where computer::computers where computer
computer is part::computer is part
application where computer::application where computer
architecture um simplest::architecture um simplest
giving an idea::giving an idea
idea what computer::idea what computer
architectural buildings building::architectural buildings building
buildings building architecture::buildings building architecture
basically a plan::basically a plan
parts of building::parts of building
components of building::components of building
make a plan::make a plan
hand a civil::hand a civil
design which means::design which means
stand it shouldn::stand it shouldn
shouldn t fall::shouldn t fall
care of stresses::care of stresses
stresses and strains::stresses and strains
design or circuit::design or circuit
realise this functionality::realise this functionality
realise this plan::realise this plan
put basic components::put basic components
components together transistors::components together transistors
transistors registers capacitors::transistors registers capacitors
move little bit::move little bit
computers are designed::computers are designed
designed and built::designed and built
immediately it brings::immediately it brings
disciplines of engineering::disciplines of engineering
engineering and science::engineering and science
talk of architecture::talk of architecture
architecture you find::architecture you find
layers and layers::layers and layers
layers of abstraction::layers of abstraction
abstraction what abstraction::abstraction what abstraction
leave out details::leave out details
relevant and focus::relevant and focus
focus on matters::focus on matters
matters and issues::matters and issues
abstraction by information::abstraction by information
information is reduced::information is reduced
relationship between architecture::relationship between architecture
architecture and circuit::architecture and circuit
similarly the architecture::similarly the architecture
software are seperated::software are seperated
layers of abstractions::layers of abstractions
abstractions the abstractions::abstractions the abstractions
computer at level::computer at level
level of basic::level of basic
components from circuit::components from circuit
millions and millions::millions and millions
millions of basic::millions of basic
defining your computer::defining your computer
computer in terms::computer in terms
complex and mind::complex and mind
numbers and returns::numbers and returns
returns the result::returns the result
level language programmer::level language programmer
solution but computer::solution but computer
directly this solution::directly this solution
language which computer::language which computer
computer can understand::computer can understand
produce an eqivalent::produce an eqivalent
computation is broken::computation is broken
number of steps::number of steps
preparing the data::preparing the data
data before addition::data before addition
putting the data::putting the data
circuitary inside processor::circuitary inside processor
processor can perform::processor can perform
link this function::link this function
function to main::function to main
program called assembler::program called assembler
sequence of numbers::sequence of numbers
straight forward process::straight forward process
machine language program::machine language program
program or machine::program or machine
essentially a number::essentially a number
number number notation::number number notation
hexa decimal number::hexa decimal number
two hexa decimal::two hexa decimal
hexa decimal digits::hexa decimal digits
number or bytes::number or bytes
sequence of bytes::sequence of bytes
bytes which represent::bytes which represent
turn it represents::turn it represents
represents this program::represents this program
written by programmer::written by programmer
zeros but hexa::zeros but hexa
hexa decimal notation::hexa decimal notation
corresponds with binary::corresponds with binary
binary notation inside::binary notation inside
inside a computer::inside a computer
data or program::data or program
data or instructions::data or instructions
instructions the numbers::instructions the numbers
don t distinguish::don t distinguish
understands the hardware::understands the hardware
abstraction one major::abstraction one major
central processing unit::central processing unit
input output devices::input output devices
mouse keyboard display::mouse keyboard display
keyboard display disk::keyboard display disk
display disk drive::display disk drive
controller the processor::controller the processor
processor is connected::processor is connected
connected to memory::connected to memory
program counter register::program counter register
counter register file::counter register file
register file alu::register file alu
alu and bus::alu and bus
bus interface program::bus interface program
interface program counter::interface program counter
counter keeps track::counter keeps track
track of current::track of current
instruction being executed::instruction being executed
executed register file::executed register file
register file stores::register file stores
file stores operand::file stores operand
operations arithmetical logical::operations arithmetical logical
arithmetical logical relational::arithmetical logical relational
logical relational comparison::logical relational comparison
relational comparison operation::relational comparison operation
operation and bus::operation and bus
connects these modules::connects these modules
gates or gates::gates or gates
exclusive or gates::exclusive or gates
gates not gate::gates not gate
consisting of basic::consisting of basic
basic devices transistor::basic devices transistor
devices transistor register::devices transistor register
eventually you reach::eventually you reach
reach a level::reach a level
transistors of basic::transistors of basic
shown these pictures::shown these pictures
floppy disk drive::floppy disk drive
disk drive hard::disk drive hard
drive hard disk::drive hard disk
hard disk drive::hard disk drive
disk drive cdrom::disk drive cdrom
drive cdrom drive::drive cdrom drive
fins of heat::fins of heat
system the memory::system the memory
input output cards::input output cards
bottom some part::bottom some part
part is visible::part is visible
slots where zoomed::slots where zoomed
plug in input::plug in input
pci slots pci::pci slots pci
cards are connected::cards are connected
connected various controllers::connected various controllers
controllers are connected::controllers are connected
memory individual memory::memory individual memory
individual memory chips::individual memory chips
put together form::put together form
form a memory::form a memory
form the complete::form the complete
complete memory system::complete memory system
seagate hard disk::seagate hard disk
drive okay shown::drive okay shown
recording is done::recording is done
level language programs::level language programs
major building block::major building block
building block registers::building block registers
block registers adders::block registers adders
components and transistors::components and transistors
hardware software boundary::hardware software boundary
instructions which define::instructions which define
define the basic::define the basic
major harware components::major harware components
understand those instructions::understand those instructions
software in terms::software in terms
levels of hierarchy::levels of hierarchy
hierarchy within software::hierarchy within software
instruction set level::instruction set level
micro architecture level::micro architecture level
level so instruction::level so instruction
instruction set architecture::instruction set architecture
set architecture refers::set architecture refers
lowest level visible::lowest level visible
visible to programmer::visible to programmer
programmer so programmer::programmer so programmer
flops or adders::flops or adders
unit of computation::unit of computation
instruction whereas micro::instruction whereas micro
concerns a hardware::concerns a hardware
define any instruction::define any instruction
information is made::information is made
made to flow::made to flow
defines the instruction::defines the instruction
place instruction set::place instruction set
software and hardware::software and hardware
hardware at top::hardware at top
compiler is required::compiler is required
required to translate::required to translate
translate these high::translate these high
high level programs::high level programs
programs to machine::programs to machine
required to manage::required to manage
manage the resources::manage the resources
resources and make::resources and make
compile compile load::compile compile load
load and execute::load and execute
design the broad::design the broad
broad cpu design::broad cpu design
fabricating the circuit::fabricating the circuit
place the transistor::place the transistor
place a wire::place a wire
network but physical::network but physical
physical dimension physical::physical dimension physical
dimension physical manifestation::dimension physical manifestation
manifestation is assigned::manifestation is assigned
earlier assembly language::earlier assembly language
assembly language view::assembly language view
language view defines::language view defines
instruction to instruction::instruction to instruction
state defined state::state defined state
state is defined::state is defined
defined in terms::defined in terms
terms of contents::terms of contents
registers and flip::registers and flip
processor so memory::processor so memory
memory whereas memory::memory whereas memory
data and program::data and program
program what registers::program what registers
performing an addition::performing an addition
typically the operand::typically the operand
instructions are represented::instructions are represented
set of instruction::set of instruction
instruction is represented::instruction is represented
represented in terms::represented in terms
zeros or hexa::zeros or hexa
digits for convenience::digits for convenience
layer of abstraction::layer of abstraction
hardware components high::hardware components high
components high level::components high level
level as register::level as register
register files alu::register files alu
level as transistors::level as transistors
transistors and resistances::transistors and resistances
make this instruction::make this instruction
instruction set posssible::instruction set posssible
put these components::put these components
components these blocks::components these blocks
lots of tricks::lots of tricks
tricks and techniques::tricks and techniques
employed to make::employed to make
make everything happen::make everything happen
talking of hand::talking of hand
hand held devices::hand held devices
held devices devices::held devices devices
small computers lap::small computers lap
computers lap tops::computers lap tops
lap tops mobile::lap tops mobile
tops mobile phones::tops mobile phones
consumption is important::consumption is important
last very long::last very long
carry out computation::carry out computation
computation while consuming::computation while consuming
issue sometime power::issue sometime power
extreme power saving::extreme power saving
ultimately the cost::ultimately the cost
find different ways::find different ways
ways of executing::ways of executing
executing same instruction::executing same instruction
lots and lots::lots and lots
lots of transistors::lots of transistors
lies in making::lies in making
making right choice::making right choice
choice while designing::choice while designing
designing a processor::designing a processor
works is captured::works is captured
code or program::code or program
program in machine::program in machine
supposed to operate::supposed to operate
means to bring::means to bring
computations are done::computations are done
structure called stack::structure called stack
functions about hierarchy::functions about hierarchy
system is cpu::system is cpu
counter and alu::counter and alu
alu registers condition::alu registers condition
registers condition codes::registers condition codes
perform all arithematic::perform all arithematic
arithematic and logical::arithematic and logical
operands are contained::operands are contained
contained in registers::contained in registers
alu will carry::alu will carry
out the desired::out the desired
sequence of instruction::sequence of instruction
instruction will differ::instruction will differ
encoded what operations::encoded what operations
operations they invoke::operations they invoke
operation is done::operation is done
subsequently for decision::subsequently for decision
helps in providing::helps in providing
branches and loops::branches and loops
high level languages::high level languages
processor or simple::processor or simple
talk little bit::talk little bit
make an abstraction::make an abstraction
works in terms::works in terms
terms of simple::terms of simple
abstraction some details::abstraction some details
making an abstraction::making an abstraction
kind of simplification::kind of simplification
registers or memory::registers or memory
store supposedly integers::store supposedly integers
integers and reals::integers and reals
mathematics are unbounded::mathematics are unbounded
talk of real::talk of real
programs and real::programs and real
bounded okay integer::bounded okay integer
integer in mathematics::integer in mathematics
integers and finite::integers and finite
understand these differences::understand these differences
numbers is concerned::numbers is concerned
properties which real::properties which real
number would satisfy::number would satisfy
working in mathematical::working in mathematical
talking of real::talking of real
add three numbers::add three numbers
talking of numbers::talking of numbers
numbers as abstracted::numbers as abstracted
understand to understand::understand to understand
understand a processor::understand a processor
understand its assembly::understand its assembly
real life program::real life program
programming is done::programming is done
language is required::language is required
mind to understand::mind to understand
understand how programs::understand how programs
model of memory::model of memory
array of bytes::array of bytes
bytes or words::bytes or words
memory is bound::memory is bound
number of word::number of word
word or limit::word or limit
number of bytes::number of bytes
fast to read::fast to read
read different words::read different words
words of memory::words of memory
memory one acess::memory one acess
acess to memory::acess to memory
makes that happen::makes that happen
structure in real::structure in real
talking of performance::talking of performance
performance in program::performance in program
architecture how long::architecture how long
execute that program::execute that program
terms of milli::terms of milli
milli seconds seconds::milli seconds seconds
seconds and minutes::seconds and minutes
minutes if program::minutes if program
program is taking::program is taking
long i mentioned::long i mentioned
mentioned about embedded::mentioned about embedded
embedded computers domain::embedded computers domain
provide you opportunities::provide you opportunities
opportunities for making::opportunities for making
making new designs::making new designs
typically require designing::typically require designing
require designing hardware::require designing hardware
harder than designing::harder than designing
designing just software::designing just software
software or designing::software or designing
designing just hardware::designing just hardware
issues so embedded::issues so embedded
components okay embedded::components okay embedded
processor is part::processor is part
system it appears::system it appears
component which performs::component which performs
performs some intelligent::performs some intelligent
control a proces::control a proces
information or perform::information or perform
perform some communication::perform some communication
opens up lot::opens up lot
lot of application::lot of application
embedded computer domain::embedded computer domain
worry about real::worry about real
real time operation::real time operation
computer in embedded::computer in embedded
work with information::work with information
appears in real::appears in real
lot of design::lot of design
customize a processor::customize a processor
add or subtract::add or subtract
part the key::part the key
variety of processors::variety of processors
applications from tiny::applications from tiny
desk top computers::desk top computers
top computers lap::top computers lap
computers lap top::computers lap top
lap top computers::lap top computers
top computers mobile::top computers mobile
computers mobile phones::computers mobile phones
mobile phones washing::mobile phones washing
phones washing machines::phones washing machines
set and executing::set and executing
difference in instructions::difference in instructions
difference in terms::difference in terms
performance or speed::performance or speed
lot of difference::lot of difference
terms of power::terms of power
power consumption cost::power consumption cost
terms of instructions::terms of instructions
general purpose general::general purpose general
purpose general purpose::purpose general purpose
general purpose means::general purpose means
kind of application::kind of application
desk top computer::desk top computer
power point presentation::power point presentation
listening to music::listening to music
music whereas special::music whereas special
special purpose computer::special purpose computer
process the calls::process the calls
function is unchanged::function is unchanged
unlike in desk::unlike in desk
desk top processor::desk top processor
change the program::change the program
phone the program::phone the program
program is fixed::program is fixed
two different cpus::two different cpus
intel same manufacturer::intel same manufacturer
type of processor::type of processor
typically in embedded::typically in embedded
application the actual::application the actual
small rectangular tcq::small rectangular tcq
tcq see inside::tcq see inside
inside this circular::inside this circular
case the actual::case the actual
size this big::size this big
thing like forty::thing like forty
accommodate forty pins::accommodate forty pins
made so big::made so big
device same circuitory::device same circuitory
packages roughly lets::packages roughly lets
approximately this size::approximately this size
two contrasting devices::two contrasting devices
general purpose processor::general purpose processor
high performance consumes::high performance consumes
performance consumes lot::performance consumes lot
lot of power::lot of power
special purpose applications::special purpose applications
lower power consumption::lower power consumption
consumption um doesn::consumption um doesn
doesn t care::doesn t care
care about performance::care about performance
left would work::left would work
work at giga::work at giga
hertz of frequency::hertz of frequency
essentially a quartz::essentially a quartz
erase the program::erase the program
store the program::store the program
put the program::put the program
inside its memory::inside its memory
make some upgrade::make some upgrade
ultra violet light::ultra violet light
light the memory::light the memory
program will remain::program will remain
don t chage::don t chage
summarize with list::summarize with list
list of major::list of major
forms an outline::forms an outline
meant by performance::meant by performance
specific instruction set::specific instruction set
set a simple::set a simple
simple but powerful::simple but powerful
computation in terms::computation in terms
terms of doing::terms of doing
architecture at instruction::architecture at instruction
operations are carried::operations are carried
out in terms::out in terms
terms of binary::terms of binary
circuitory to carry::circuitory to carry
out those numbers::out those numbers
operations then based::operations then based
based around based::based around based
build a processor::build a processor
processor to execute::processor to execute
execute the instruction::execute the instruction
put register file::put register file
put program counter::put program counter
put a controller::put a controller
controller to make::controller to make
make the data::make the data
flow of data::flow of data
technique of pipelining::technique of pipelining
high performance system::high performance system
today have pipelining::today have pipelining
component is memory::component is memory
talk of input::talk of input
output devices input::output devices input
devices input output::devices input output
input output controllers::input output controllers
connect to memory::connect to memory
memory and processors::memory and processors
out various announcements::out various announcements
overview similar list::overview similar list
list of topics::list of topics
incidently doctor kolin::incidently doctor kolin
doctor kolin paul::doctor kolin paul
preparing presentation material::preparing presentation material
maintain a lab::maintain a lab
instructions about lab::instructions about lab
first lab exercise::first lab exercise
make a submission::make a submission
submission so guidelines::submission so guidelines
submission of assignment::submission of assignment
initial few exercises::initial few exercises
simulator called spin::simulator called spin
account but don::account but don
computer services centre::computer services centre
computer organisation design::computer organisation design
design the hardware::design the hardware
hardware software interface::hardware software interface
book other books::book other books
refered to computer::refered to computer
computer system design::computer system design
design and architecture::design and architecture
architecture by huring::architecture by huring
huring and jordan::huring and jordan
jordan and computer::jordan and computer
architecture and organisation::architecture and organisation
terms computer design::terms computer design
computer design computer::computer design computer
design computer organisation::design computer organisation
computer organisation computer::computer organisation computer
organisation computer architecture::organisation computer architecture
list a book::list a book
rigerously the term::rigerously the term
terms of describing::terms of describing
functionality whereas design::functionality whereas design
hardware building aspects::hardware building aspects
minors majors lab::minors majors lab
majors lab exercises::majors lab exercises
exercises um weightage::exercises um weightage
weightage of lab::weightage of lab
percent and quizs::percent and quizs
interface peripheral computer::interface peripheral computer
peripheral computer interface::peripheral computer interface
mobile phone mobile::mobile phone mobile
phone mobile phone::phone mobile phone
computer okay infact::computer okay infact
infact many mobiles::infact many mobiles
palm palm top::palm palm top
top yes palm::top yes palm
general purpose computer::general purpose computer
variety of function::variety of function
generally a gap::generally a gap
delivered same day::delivered same day
history of computers::history of computers
lecture i talked::lecture i talked
history is important::history is important
political history economic::political history economic
history economic history::history economic history
history or history::history or history
history of science::history of science
science or history::science or history
place in past::place in past
past have made::past have made
made um significant::made um significant
tommorow so first::tommorow so first
half a century::half a century
period gets divided::period gets divided
impact on history::impact on history
interesting old pictures::interesting old pictures
pictures of computers::pictures of computers
briefly this mentioned::briefly this mentioned
mentioned what technology::mentioned what technology
decide what kind::decide what kind
kind of computers::kind of computers
future this period::future this period
differences of opinion::differences of opinion
people only recognize::people only recognize
generation as recognised::generation as recognised
develop computer systems::develop computer systems
systems or electronic::systems or electronic
system in general::system in general
major technological development::major technological development
technological development takes::technological development takes
development takes place::development takes place
significant very drastic::significant very drastic
drastic sudden change::drastic sudden change
size of computers::size of computers
top in terms::top in terms
terms of cost::terms of cost
cost the affordability::cost the affordability
affordable by large::affordable by large
organisations now large::organisations now large
number of people::number of people
people can afford::people can afford
computers and infact::computers and infact
count all computers::count all computers
devices all appliances::devices all appliances
appliances mobile phones::appliances mobile phones
equipment the number::equipment the number
number of computers::number of computers
today the power::today the power
consumption has changed::consumption has changed
large of magnitude::large of magnitude
efficiency in terms::efficiency in terms
computers can work::computers can work
reliabily for extended::reliabily for extended
beginning in forties::beginning in forties
forties to fifties::forties to fifties
device was vacuum::device was vacuum
vacuum tube vacuum::vacuum tube vacuum
tube vacuum tube::tube vacuum tube
bulb like device::bulb like device
basic electronic device::basic electronic device
voltage at current::voltage at current
bulky and reliable::bulky and reliable
reliable and powerguzzlers::reliable and powerguzzlers
powerguzzlers the computer::powerguzzlers the computer
computer is built::computer is built
roomful of system::roomful of system
devices were punched::devices were punched
cards and paper::cards and paper
tapes the memories::tapes the memories
rotating drum magnetic::rotating drum magnetic
drum magnetic rotating::drum magnetic rotating
magnetic rotating drum::magnetic rotating drum
program was machine::program was machine
first generation computers::first generation computers
notice a period::notice a period
indicating are overlapping::indicating are overlapping
suddenly on day::suddenly on day
growth development improvement::growth development improvement
change is marked::change is marked
abrupt but rapid::abrupt but rapid
change here accord::change here accord
accord with arrival::accord with arrival
arrival of transistor::arrival of transistor
transitor from texas::transitor from texas
instruments these transistors::instruments these transistors
perform roughly similar::perform roughly similar
roughly similar function::roughly similar function
function what vacuum::function what vacuum
smaller faster cheaper::smaller faster cheaper
efficient in terms::efficient in terms
terms of energy::terms of energy
energy also reliability::energy also reliability
development in terms::development in terms
terms of software::terms of software
machine language people::machine language people
language people started::language people started
period some languages::period some languages
languages high level::languages high level
languages the early::languages the early
put several transistors::put several transistors
single silicon chip::single silicon chip
integrate many transistors::integrate many transistors
device the picture::device the picture
picture here shows::picture here shows
shows the layout::shows the layout
early chip depending::early chip depending
level of integration::level of integration
characterised as ssi::characterised as ssi
msi or lsi::msi or lsi
lsi ssi stands::lsi ssi stands
stands for small::stands for small
small scale integration::small scale integration
scale integration medium::scale integration medium
integration medium scale::integration medium scale
medium scale integration::medium scale integration
integration and large::integration and large
large scale integration::large scale integration
integration or small::integration or small
devices few transistors::devices few transistors
tens of transistors::tens of transistors
transistors large scale::transistors large scale
scale would scale::scale would scale
scale few thousands::scale few thousands
thousands of transistors::thousands of transistors
naturally equipment computer::naturally equipment computer
compact the speed::compact the speed
increased the efficiency::increased the efficiency
efficiency increased additional::efficiency increased additional
increased additional peripherals::increased additional peripherals
interactive with cards::interactive with cards
batch processing environment::batch processing environment
submit your program::submit your program
program for running::program for running
days later depending::days later depending
load and efficiency::load and efficiency
press a button::press a button
prepare a deck::prepare a deck
deck of cards::deck of cards
progam is punched::progam is punched
punched and data::punched and data
punched or prepare::punched or prepare
prepare a roll::prepare a roll
roll of paper::roll of paper
tape by punching::tape by punching
small syntactic mistakes::small syntactic mistakes
result is nil::result is nil
make that correction::make that correction
terminals and keyboards::terminals and keyboards
interactive and online::interactive and online
mode and operating::mode and operating
system also evolved::system also evolved
change next major::change next major
major change occur::major change occur
make entire processor::make entire processor
chip the number::chip the number
number of transistors::number of transistors
chip was large::chip was large
lsi to vlsi::lsi to vlsi
vlsi vlsi stands::vlsi vlsi stands
large scale integrated::large scale integrated
scale integrated circuits::scale integrated circuits
vlsi also terms::vlsi also terms
defined like ulsi::defined like ulsi
ulsi ultra large::ulsi ultra large
ultra large scale::ultra large scale
seventies late seventies::seventies late seventies
talking of vlsi::talking of vlsi
number of times::number of times
million um infact::million um infact
tending to hundreds::tending to hundreds
hundreds of millions::hundreds of millions
vlsi basically meant::vlsi basically meant
tens and hundreds::tens and hundreds
hundreds of thousands::hundreds of thousands
level of change::level of change
owning their computers::owning their computers
computers personal computing::computers personal computing
personal computing home::personal computing home
computing home computing::computing home computing
home computing embedded::home computing embedded
computing embedded computing::computing embedded computing
computing that means::computing that means
posible when processor::posible when processor
processor really shrunk::processor really shrunk
terms of capablities::terms of capablities
capablities of computers::capablities of computers
emphasis on graphics::emphasis on graphics
graphics graphical user::graphics graphical user
graphical user interface::graphical user interface
mouse um hand::mouse um hand
devices also started::devices also started
basically same microprocessor::basically same microprocessor
literature you find::literature you find
mention fifth generation::mention fifth generation
terms of capability::terms of capability
capability of computers::capability of computers
computers um computers::computers um computers
processing to increase::processing to increase
increase the performance::increase the performance
performance and input::performance and input
natural in human::natural in human
life so infact::life so infact
undertaken in japan::undertaken in japan
unlike previous definition::unlike previous definition
definition of previous::definition of previous
defined by change::defined by change
style of computing::style of computing
computing and level::computing and level
level of performance::level of performance
performance has increased::performance has increased
cost has decreased::cost has decreased
combine the effect::combine the effect
cost per unit::cost per unit
technologies are compared::technologies are compared
compared here vacuum::compared here vacuum
vacuum tube transistor::vacuum tube transistor
tube transistor integrated::tube transistor integrated
transistor integrated circuit::transistor integrated circuit
circuit and vlsi::circuit and vlsi
four different generation::four different generation
years nineteen fifty::years nineteen fifty
fifty one sixty::fifty one sixty
sixty five seventy::sixty five seventy
performance per cost::performance per cost
unit cost raises::unit cost raises
amount of progress::amount of progress
place in terms::place in terms
rupee or dollar::rupee or dollar
capacity has changed::capacity has changed
dram or dynamic::dram or dynamic
ram the basic::ram the basic
basic semiconductor memory::basic semiconductor memory
changed in terms::changed in terms
terms of capacity::terms of capacity
talking of capacity::talking of capacity
capacity per chip::capacity per chip
capacity as theyears::capacity as theyears
theyears have passed::theyears have passed
sixteen k capacity::sixteen k capacity
four million bits::four million bits
year to year::year to year
years the capacity::years the capacity
frequency of processor::frequency of processor
scale of complete::scale of complete
complete computer system::complete computer system
include performance contribution::include performance contribution
performance contribution made::performance contribution made
made by cpu::made by cpu
ten years period::ten years period
rise in performance::rise in performance
decade um sunfour::decade um sunfour
sunfour two sixty::sunfour two sixty
mix machines ibm::mix machines ibm
machines ibm machine::machines ibm machine
machine hp bakel::machine hp bakel
bakel for twenty::bakel for twenty
twenty one thousand::twenty one thousand
thousand two sixty::thousand two sixty
terms of generation::terms of generation
events the significant::events the significant
events which occur::events which occur
impact so lets::impact so lets
couple of slides::couple of slides
major events beginning::major events beginning
beginning with introduction::beginning with introduction
first programmable computer::first programmable computer
computer by konrad::computer by konrad
four um computer::four um computer
computer called harvard::computer called harvard
architecture essentially means::architecture essentially means
program and memory::program and memory
memory which accomodates::memory which accomodates
program and data::program and data
two different memory::two different memory
units for program::units for program
idea even today::idea even today
caches for program::caches for program
okat this basic::okat this basic
eniac one computer::eniac one computer
developers were eckert::developers were eckert
large as compared::large as compared
compared to previous::compared to previous
periods of forties::periods of forties
researching on development::researching on development
development of computers::development of computers
significant in terms::significant in terms
size its capabilities::size its capabilities
difficult to pin::difficult to pin
inventor of computer::inventor of computer
john fon newman::john fon newman
involved in developing::involved in developing
precisely the concept::precisely the concept
principle of computer::principle of computer
counter the processor::counter the processor
processor takes instruction::processor takes instruction
instruction and executes::instruction and executes
stated by john::stated by john
plug in wires::plug in wires
slot to change::slot to change
change the functionality::change the functionality
sort of computer::sort of computer
easy to program::easy to program
program then nineteen::program then nineteen
transistor was invented::transistor was invented
event which changed::event which changed
first commercial computer::first commercial computer
computer is considered::computer is considered
considered as univac::considered as univac
univac and people::univac and people
involved with eniac::involved with eniac
responsible for development::responsible for development
buy then ibms::buy then ibms
ibms first computer::ibms first computer
computer is ibm::computer is ibm
enters the history::enters the history
remained very significant::remained very significant
industry the language::industry the language
first high level::first high level
language which easy::language which easy
four fortran seventy::four fortran seventy
original um event::original um event
event is nineteen::event is nineteen
version was made::version was made
stanford research institute::stanford research institute
institute and bank::institute and bank
bank of america::bank of america
computer was developed::computer was developed
micr was made::micr was made
magnetic ink corrector::magnetic ink corrector
ink corrector reading::ink corrector reading
ics integrated circuits::ics integrated circuits
integrated circuits date::integrated circuits date
back to nineteen::back to nineteen
first computer game::first computer game
computer game nineteen::computer game nineteen
game nineteen sixty::game nineteen sixty
sixty two spacewar::sixty two spacewar
spacewar um invention::spacewar um invention
invention of computer::invention of computer
sixty four first::sixty four first
four first computer::four first computer
first computer network::first computer network
computer network arpanet::computer network arpanet
arpanet in nineteen::arpanet in nineteen
developed by defence::developed by defence
defence funding arpa::defence funding arpa
funding arpa stands::funding arpa stands
stands for advanced::stands for advanced
advanced research project::advanced research project
research project agency::research project agency
agency which funds::agency which funds
funds research projects::funds research projects
projects in usa::projects in usa
usa um large::usa um large
scale integration begins::scale integration begins
intel first memory::intel first memory
first memory chip::first memory chip
first dynamic ram::first dynamic ram
dynamic ram chip::dynamic ram chip
chip and first::chip and first
microprocessor is intel::microprocessor is intel
flexible storage unit::flexible storage unit
storage unit flexible::storage unit flexible
unit flexible disk::unit flexible disk
nature um ethernet::nature um ethernet
ethernet computer networking::ethernet computer networking
consumer so first::consumer so first
first home computer::first home computer
computer or consumer::computer or consumer
computers in seventy::computers in seventy
seventy four seventy::seventy four seventy
span many years::span many years
years from apple::years from apple
apple trs eighty::apple trs eighty
eighty and commodore::eighty and commodore
commodore um spreadsheet::commodore um spreadsheet
spreadsheet was visicalc::spreadsheet was visicalc
developed in nineteen::developed in nineteen
first word processor::first word processor
word processor wordstar::word processor wordstar
processor wordstar nineteen::processor wordstar nineteen
wordstar nineteen seventy::wordstar nineteen seventy
level a series::level a series
computing the earlier::computing the earlier
earlier consumer computer::earlier consumer computer
computing also moved::computing also moved
moved to individuals::moved to individuals
reaped maximum benefit::reaped maximum benefit
event were microsoft::event were microsoft
microsoft and intel::microsoft and intel
first operating system::first operating system
system first version::system first version
version of microsoft::version of microsoft
microsoft operating system::microsoft operating system
operating system msdos::operating system msdos
apple lisa computer::apple lisa computer
computer with extensive::computer with extensive
extensive gui graphic::extensive gui graphic
gui graphic user::gui graphic user
graphic user interface::graphic user interface
convenient another popular::convenient another popular
computer of apple::computer of apple
apple apple macintosh::apple apple macintosh
macintosh um windows::macintosh um windows
appeared in nineteen::appeared in nineteen
history of events::history of events
lot of significant::lot of significant
events took place::events took place
looked as compared::looked as compared
computer from ibm::computer from ibm
ibm s ssec::ibm s ssec
compute tables indicating::compute tables indicating
tables indicating moon::tables indicating moon
indicating moon positions::indicating moon positions
flight to moon::flight to moon
moon in nineteen::moon in nineteen
talk of millions::talk of millions
millions of operations::millions of operations
input and output::input and output
cards and pumched::cards and pumched
tape the technology::tape the technology
tubes and relays::tubes and relays
relays are devices::relays are devices
voltage the current::voltage the current
required floor space::required floor space
space of twenty::space of twenty
twenty feet twenty::twenty feet twenty
twenty five feet::twenty five feet
feet by forty::feet by forty
forty feet univac::forty feet univac
thousand of operation::thousand of operation
terms of magnetic::terms of magnetic
magnetic tape printer::magnetic tape printer
tape printer memory::tape printer memory
printer memory size::printer memory size
thousand words thousand::thousand words thousand
words thousand numbers::words thousand numbers
storage was delay::storage was delay
vacuum tubes magnetic::vacuum tubes magnetic
tubes magnetic tapes::tubes magnetic tapes
thousand us dollars::thousand us dollars
orders of magnitude::orders of magnitude
magnitude as compared::magnitude as compared
compared to todays::compared to todays
cost of printer::cost of printer
two very popular::two very popular
popular systems ibm::popular systems ibm
ibm three sixty::ibm three sixty
left and cdc::left and cdc
architecturally cdc sixty::architecturally cdc sixty
introduced the idea::introduced the idea
idea of pipelening::idea of pipelening
pipelening and idea::pipelening and idea
modern day processors::modern day processors
architectural details illiac::architectural details illiac
system a parallel::system a parallel
parallel system developed::parallel system developed
developed by university::developed by university
university of illionos::university of illionos
illionos urbana champaign::illionos urbana champaign
first major attempt::first major attempt
attempt to develop::attempt to develop
develop a large::develop a large
large parallel system::large parallel system
seventies the level::seventies the level
integration became high::integration became high
high computers computers::high computers computers
computers computers shrunk::computers computers shrunk
shrunk from room::shrunk from room
writer like device::writer like device
acts as terminal::acts as terminal
picture xerox alto::picture xerox alto
xerox alto machine::xerox alto machine
first work stations::first work stations
stations so work::stations so work
basically powerful desk::basically powerful desk
powerful desk top::powerful desk top
full fledged capability::full fledged capability
capability of large::capability of large
computer but good::computer but good
good user interface::good user interface
user interface graphic::user interface graphic
interface graphic user::interface graphic user
interface so xerox::interface so xerox
work in developing::work in developing
developing window based::developing window based
window based interface::window based interface
early super computers::early super computers
super computers cray::super computers cray
company called clay::company called clay
clay which fall::clay which fall
category of super::category of super
high performance computer::high performance computer
highest performance computer::highest performance computer
number of cabinets::number of cabinets
reduce the length::reduce the length
length of wire::length of wire
length of cables::length of cables
cables which connect::cables which connect
connect back panels::connect back panels
reason for keeping::reason for keeping
keeping this cable::keeping this cable
required extensive cooling::required extensive cooling
cooling to make::cooling to make
make it work::make it work
computers of aragon::computers of aragon
kind of technology::kind of technology
lot of things::lot of things
things which research::things which research
research is taking::research is taking
place the devices::place the devices
devices are shrinking::devices are shrinking
reaching the atomic::reaching the atomic
nano technology area::nano technology area
technology area nano::technology area nano
area nano technology::area nano technology
nano technology means::nano technology means
means all dimensions::means all dimensions
meters um grid::meters um grid
grid computing refers::grid computing refers
refers to computing::refers to computing
number of hundred::number of hundred
thousands of billions::thousands of billions
billions of computers::billions of computers
computers all netrworked::computers all netrworked
solve a single::solve a single
extended quantum computing::extended quantum computing
quantum computing based::quantum computing based
based on quantum::based on quantum
promise of solving::promise of solving
tough computing problems::tough computing problems
shorter time dna::shorter time dna
structure and computing::structure and computing
extent and depending::extent and depending
totally different kind::totally different kind
computers in future::computers in future
design a part::design a part
discussing instruction set::discussing instruction set
set level architecture::set level architecture
simple instruction set::simple instruction set
set for mips::set for mips
architecture has thirty::architecture has thirty
perform arithmetic add::perform arithmetic add
arithmetic add subtract::arithmetic add subtract
summary of instructions::summary of instructions
add subtract add::add subtract add
instructions one operand::instructions one operand
equality and inequality::equality and inequality
beq and bne::beq and bne
instruction or jump::instruction or jump
instruction for moving::instruction for moving
parts and first::parts and first
loads upper half::loads upper half
back the remaining::back the remaining
divided into fields::divided into fields
format or register::format or register
upto three registers::upto three registers
registers i format::registers i format
format is required::format is required
performing an operation::performing an operation
field of sixteen::field of sixteen
instruction where twenty::instruction where twenty
point and talk::point and talk
case of simple::case of simple
type of structures::type of structures
typically beq bne::typically beq bne
beq bne instruction::beq bne instruction
possibily in conjuction::possibily in conjuction
conjuction with slt::conjuction with slt
loops we don::loops we don
introduce new instruction::introduce new instruction
loop you access::loop you access
access an array::access an array
accessed with index::accessed with index
type of statements::type of statements
variation from instruction::variation from instruction
differences so lets::differences so lets
programming is summing::programming is summing
straight forward thing::straight forward thing
form where instructions::form where instructions
structure have put::structure have put
put in terms::put in terms
terms of conditions::terms of conditions
elements we begin::elements we begin
begin by intialising::begin by intialising
intialising a variable::intialising a variable
hold the sum::hold the sum
element of array::element of array
array and submit::array and submit
update the index::update the index
index and perform::index and perform
perform loop termination::perform loop termination
loop termination check::loop termination check
test in today::test in today
instructions these steps::instructions these steps
steps are implemented::steps are implemented
straight forward move::straight forward move
forward move instruction::forward move instruction
remember the correlation::remember the correlation
register for holding::register for holding
holding the value::holding the value
register to hold::register to hold
hold the value::hold the value
written a single::written a single
statement s equal::statement s equal
repair the address::repair the address
address to make::address to make
make an excess::make an excess
talking of integers::talking of integers
occupy four bytes::occupy four bytes
array the offset::array the offset
put a comment::put a comment
address of first::address of first
two were added::two were added
added together give::added together give
two are added::two are added
added the result::added the result
doing the job::doing the job
two we branch::two we branch
start the loop::start the loop
talked of blt::talked of blt
blt instruction blt::blt instruction blt
compares two registers::compares two registers
two real instructions::two real instructions
slt slt compares::slt slt compares
value is stored::value is stored
make a branch::make a branch
branch all right::branch all right
branch will occur::branch will occur
implemented using slt::implemented using slt
slt and beq::slt and beq
beq or slt::beq or slt
slt and bne::slt and bne
kinds of comparison::kinds of comparison
simply use blt::simply use blt
assembler which expands::assembler which expands
introduced another register::introduced another register
stands for assembler::stands for assembler
expecting that blt::expecting that blt
hold some temporary::hold some temporary
value some intermediate::value some intermediate
terms of numbers::terms of numbers
modify the contents::modify the contents
convention is good::convention is good
directly and leave::directly and leave
directives which define::directives which define
define the data::define the data
area so dot::area so dot
define some data::define some data
assembler directive dot::assembler directive dot
directive dot space::directive dot space
four hundred bytes::four hundred bytes
data area leave::data area leave
area leave space::area leave space
array of size::array of size
assume we assume::assume we assume
symbolic language programmer::symbolic language programmer
assembly language programmer::assembly language programmer
assembler to figure::assembler to figure
assembler will assign::assembler will assign
assign some address::assign some address
default data area::default data area
arbitary size thirty::arbitary size thirty
lecture that loading::lecture that loading
loading a large::loading a large
requires two steps::requires two steps
steps first step::steps first step
first step loads::first step loads
loads the upper::loads the upper
half next step::half next step
loads the lower::loads the lower
right a upper::right a upper
upper is loaded::upper is loaded
loaded by lui::loaded by lui
instruction into upper::instruction into upper
simply um superposes::simply um superposes
superposes the lower::superposes the lower
initialization i wanted::initialization i wanted
two hundred hundred::two hundred hundred
instruction get loaded::instruction get loaded
hundred and put::hundred and put
code to input::code to input
input the data::input the data
perform the sum::perform the sum
code for computation::code for computation
done the summation::done the summation
output the result::output the result
skipping the details::skipping the details
details of input::details of input
written some code::written some code
code which works::code which works
pointers or addresses::pointers or addresses
code or improve::code or improve
pointing to starting::pointing to starting
indexing the array::indexing the array
dereferencing the pointer::dereferencing the pointer
addition to incrementing::addition to incrementing
incrementing the index::incrementing the index
incrementing the pointer::incrementing the pointer
pointer and rest::pointer and rest
two extra statements::two extra statements
initialization of pointer::initialization of pointer
updation of pointer::updation of pointer
pointer the summation::pointer the summation
summation gets replaced::summation gets replaced
introducing more statements::introducing more statements
translate this summation::translate this summation
gain is occuring::gain is occuring
worried about making::worried about making
making the loop::making the loop
done several times::done several times
instructions has reduced::instructions has reduced
jump two steps::jump two steps
load address dollar::load address dollar
statement gets expressed::statement gets expressed
expressed in terms::expressed in terms
terms of real::terms of real
simply a loading::simply a loading
loading the word::loading the word
word and performing::word and performing
performing the addition::performing the addition
addition because address::addition because address
multiply the index::multiply the index
two initial address::two initial address
initial address preparation::initial address preparation
address preparation steps::address preparation steps
straight away load::straight away load
load the data::load the data
opportunity for improving::opportunity for improving
improving the code::improving the code
notice whats happening::notice whats happening
working with pointer::working with pointer
simply to control::simply to control
control the termination::control the termination
maintaining a index::maintaining a index
access a array::access a array
reached the final::reached the final
attempt to improve::attempt to improve
improve the code::improve the code
removed i equal::removed i equal
added a statement::added a statement
statement which computes::statement which computes
computes the final::computes the final
introduced a statement::introduced a statement
preparing the final::preparing the final
two is equivalent::two is equivalent
careful to add::careful to add
place of hundred::place of hundred
loop is programmed::loop is programmed
two nested loops::two nested loops
simple sorting algorithm::simple sorting algorithm
array okay finds::array okay finds
out the smallest::out the smallest
smallest one smallest::smallest one smallest
smallest one place::smallest one place
put for structures::put for structures
comparison then jumps::comparison then jumps
makes a pass::makes a pass
array the main::array the main
seperately main step::seperately main step
scanning and compares::scanning and compares
interchange is done::interchange is done
first outer loop::first outer loop
loop first iteration::loop first iteration
first with encoded::first with encoded
encoded the first::encoded the first
array then anchor::array then anchor
scan the array::scan the array
comparison and interchange::comparison and interchange
indices are changing::indices are changing
working with pointers::working with pointers
pointer to begin::pointer to begin
four please correct::four please correct
basically comparing elements::basically comparing elements
comparing elements pointed::comparing elements pointed
comparison is done::comparison is done
repeat this process::repeat this process
simply the pointer::simply the pointer
initialization is load::initialization is load
prepares next statement::prepares next statement
ninety six right::ninety six right
two is initialized::two is initialized
equal to comparison::equal to comparison
comparing limits pointed::comparing limits pointed
limit or element::limit or element
skip this integer::skip this integer
require three assignments::require three assignments
load the values::load the values
store the values::store the values
four the order::four the order
basically that statement::basically that statement
understand how comparison::understand how comparison
branch and jump::branch and jump
unlike boolean comparison::unlike boolean comparison
true and false::true and false
pieces of code::pieces of code
means after performing::means after performing
performing f equal::performing f equal
end you put::end you put
put a break::put a break
make repeated comparisons::make repeated comparisons
right you compare::right you compare
action then compare::action then compare
statement had lots::statement had lots
lots of cases::lots of cases
tedious and messy::tedious and messy
doing a multiway::doing a multiway
jump on register::jump on register
table and jump::table and jump
value k falls::value k falls
skip second comparison::skip second comparison
comparison is made::comparison is made
shown it whats::shown it whats
prepare an index::prepare an index
obtain four times::obtain four times
performing a multiplication::performing a multiplication
doubling the number::doubling the number
value so add::value so add
four is assumed::four is assumed
jump table starting::jump table starting
table starting address::table starting address
prepared the index::prepared the index
array same thing::array same thing
thing is done::thing is done
done starting address::done starting address
address is added::address is added
added and final::added and final
contents of memory::contents of memory
memory location address::memory location address
table we pick::table we pick
table is shown::table is shown
table and register::table and register
finally is made::finally is made
made to point::made to point
find straight forward::find straight forward
straight forward code::straight forward code
forward code doing::forward code doing
subtraction another subtraction::subtraction another subtraction
btehe more statements::btehe more statements
finally you jumped::finally you jumped
jumped to exit::jumped to exit
case but problems::case but problems
talking of values::talking of values
values were relevant::values were relevant
non continuos values::non continuos values
waste the space::waste the space
range is compact::range is compact
compact that means::compact that means
values of range::values of range
bodies or cases::bodies or cases
blanks to make::blanks to make
suppose um suppose::suppose um suppose
suppose these addresses::suppose these addresses
addresses are thousand::addresses are thousand
lets say thousand::lets say thousand
thousand twenty thousand::thousand twenty thousand
twenty thousand fourty::twenty thousand fourty
fourty and thousand::fourty and thousand
starting address thousand::starting address thousand
thousand plus twenty::thousand plus twenty
addresses are arbitary::addresses are arbitary
compute the address::compute the address
address by taking::address by taking
taking a base::taking a base
range of instructions::range of instructions
built using beq::built using beq
computing the address::computing the address
address j instruction::address j instruction
format j format::format j format
twenty six bit::twenty six bit
format provides fields::format provides fields
registers we require::registers we require
fields are unused::fields are unused
first lets begin::first lets begin
begin with load::begin with load
imagine a instruction::imagine a instruction
type load word::type load word
register or base::register or base
addressed is obtained::addressed is obtained
positive or negative::positive or negative
number the value::number the value
range two minus::range two minus
two fifteen minus::two fifteen minus
twos complement form::twos complement form
familiar with twos::familiar with twos
twos complement notation::twos complement notation
address in beq::address in beq
worried about word::worried about word
terms of bytes::terms of bytes
words or double::words or double
varieties may exist::varieties may exist
processors where instructions::processors where instructions
located at aligned::located at aligned
boundaries the instruction::boundaries the instruction
fact is made::fact is made
offset the address::offset the address
offset again positive::offset again positive
negative with respect::negative with respect
jumping four instructions::jumping four instructions
give a positive::give a positive
write a table::write a table
label of destination::label of destination
current instruction assembler::current instruction assembler
negative the offset::negative the offset
terms of word::terms of word
addresses for instructions::addresses for instructions
shown here beq::shown here beq
two c compare::two c compare
register specifying address::register specifying address
strictly speaking notice::strictly speaking notice
notice that depending::notice that depending
depending on outcome::depending on outcome
outcome of comparison::outcome of comparison
instruction in jump::instruction in jump
number as destination::number as destination
full fledged thirty::full fledged thirty
two bit address::two bit address
terms of hardware::terms of hardware
address is computed::address is computed
instruction dot dot::instruction dot dot
dot dot twenty::dot dot twenty
twenty six lsbs::twenty six lsbs
two to twenty::two to twenty
unchanged and bits::unchanged and bits
defined by twenty::defined by twenty
effectively in terms::effectively in terms
twenty eight byte::twenty eight byte
twenty eight bits::twenty eight bits
range of jump::range of jump
segment of size::segment of size
memory is divivded::memory is divivded
divivded into segments::divivded into segments
segments with thirty::segments with thirty
memory two raised::memory two raised
four gb imagine::four gb imagine
four gb space::four gb space
space is divided::space is divided
divided into segments::divided into segments
segments of size::segments of size
size two fifty::size two fifty
jump is occuring::jump is occuring
segment then jump::segment then jump
jump will occur::jump will occur
segment and jump::segment and jump
word will occur::word will occur
two bit register::two bit register
doing is transfering::doing is transfering
transfering the contents::transfering the contents
fledged thirty bit::fledged thirty bit
thirty bit address::thirty bit address
carrying out jump::carrying out jump
today i began::today i began
began with examples::began with examples
compare and branch::compare and branch
statements to carry::statements to carry
carry out simple::carry out simple
out simple loops::out simple loops
simple loops nested::simple loops nested
loops nested loops::loops nested loops
opportunities for improving::opportunities for improving
loop the body::loop the body
whats the importance::whats the importance
language in practice::language in practice
point in bothering::point in bothering
small nitty gritty::small nitty gritty
nitty gritty improvements::nitty gritty improvements
understanding is required::understanding is required
required for compiler::required for compiler
transformations these improvements::transformations these improvements
mind by code::mind by code
code is generated::code is generated
beginning actually comppiler::beginning actually comppiler
generate the final::generate the final
final improved code::final improved code
program we wrote::program we wrote
write using index::write using index
index but compiler::index but compiler
implement a switch::implement a switch
address the memory::address the memory
point computer architecture::point computer architecture
set architecture-3 today::set architecture-3 today
important programming language::important programming language
programming language abstraction::programming language abstraction
abstraction namely function::abstraction namely function
function or procedure::function or procedure
bottom up fashion::bottom up fashion
construct large program::construct large program
impossible the set::impossible the set
learnt is summarized::learnt is summarized
includes arithmetic instructions::includes arithmetic instructions
instructions and logical::instructions and logical
first two rows::first two rows
operands are registers::operands are registers
comparison and branch::comparison and branch
branch unconditional jump::branch unconditional jump
unconditional jump load::unconditional jump load
jump load store::jump load store
load store load::load store load
store load upper::store load upper
jump with register::jump with register
means to jump::means to jump
mechanism to carry::mechanism to carry
out multiway branch::out multiway branch
defined are shown::defined are shown
shown here move::shown here move
moving a data::moving a data
essentially a copy::essentially a copy
copy of value::copy of value
value is made::value is made
made load address::made load address
load address load::load address load
loads a constant::loads a constant
variations of branch::variations of branch
branch these instructions::branch these instructions
instructions are implemented::instructions are implemented
discuss in tutorials::discuss in tutorials
today will talk::today will talk
abstraction to implement::abstraction to implement
implement a procedure::implement a procedure
require what activities::require what activities
function the instruction::function the instruction
form of functions::form of functions
order to develop::order to develop
develop a program::develop a program
abstraction essentially procedural::abstraction essentially procedural
essentially procedural abstraction::essentially procedural abstraction
procedural abstraction means::procedural abstraction means
piece of code::piece of code
defined well identified::defined well identified
operation either single::operation either single
operation or single::operation or single
ease and convenience::ease and convenience
computation is performed::computation is performed
require several things::require several things
worry about flow::worry about flow
control that means::control that means
means from main::means from main
call that means::call that means
tranfer the control::tranfer the control
ends the control::ends the control
made a call::made a call
made because call::made because call
call may occur::call may occur
points and ruturn::points and ruturn
everytime you invoke::everytime you invoke
invoke a procedure::invoke a procedure
set of data::set of data
set of parameters::set of parameters
parameters of procedures::parameters of procedures
procedures called sub::procedures called sub
sub data flows::sub data flows
parameter which carry::parameter which carry
local storage decorations::local storage decorations
inside a procedural::inside a procedural
call a function::call a function
function multiple times::function multiple times
allocation of storage::allocation of storage
procure may make::procure may make
make an access::make an access
case where main::case where main
matter gets complicated::matter gets complicated
recursion and indirect::recursion and indirect
recursion that means::recursion that means
direct or indirect::direct or indirect
issues of control::issues of control
control flow data::control flow data
flow data flow::flow data flow
data flow organising::data flow organising
flow organising local::flow organising local
local and global::local and global
recursion so lets::recursion so lets
organize the flow::organize the flow
simple minded sorting::simple minded sorting
minded sorting program::minded sorting program
simply had double::simply had double
main operation inside::main operation inside
inside the loop::inside the loop
interchange we suppose::interchange we suppose
calling as xchg::calling as xchg
basically this exchange::basically this exchange
level um rest::level um rest
comparison and exchange::comparison and exchange
basically a set::basically a set
don t place::don t place
put a call::put a call
jump and link::jump and link
link jal stands::link jal stands
xchg as label::xchg as label
effect of jal::effect of jal
tranfer the call::tranfer the call
transfer the control::transfer the control
thing it saves::thing it saves
saves the current::saves the current
address of instruction::address of instruction
special in terms::special in terms
terms of functionality::terms of functionality
stands for return::stands for return
return address register::return address register
return after completing::return after completing
completing the prodedure::completing the prodedure
address and link::address and link
back so rest::back so rest
call as main::call as main
returning any values::returning any values
value is void::value is void
parameter being passed::parameter being passed
values and doing::values and doing
added a return::added a return
terms of mips::terms of mips
instruction which takes::instruction which takes
destination or target::destination or target
stored return address::stored return address
provide control flow::provide control flow
flow and linkage::flow and linkage
linkage of caller::linkage of caller
question of passing::question of passing
care of data::care of data
arguments the parameters::arguments the parameters
done the simplest::done the simplest
designated for passing::designated for passing
procedure are loaded::procedure are loaded
part of set::part of set
set of register::set of register
convey the parameters::convey the parameters
changed the register::changed the register
number of parameters::number of parameters
parameters the convention::parameters the convention
upto four parameters::upto four parameters
four registers designated::four registers designated
lots of common::lots of common
similarly the values::similarly the values
values being returned::values being returned
procedure or function::procedure or function
number of values::number of values
resort to memory::resort to memory
specific memory locations::specific memory locations
function is restricted::function is restricted
restricted to load::restricted to load
partly through registers::partly through registers
returned to memory::returned to memory
defining local storage::defining local storage
local storage suppose::local storage suppose
function or procedures::function or procedures
data area code::data area code
area code area::area code area
data and code::data and code
functions or procedures::functions or procedures
compiler would follow::compiler would follow
convention and produce::convention and produce
produce the code::produce the code
case of nested::case of nested
calls that means::calls that means
means a function::means a function
function can call::function can call
call another function::call another function
bring the control::bring the control
control gets tranferred::control gets tranferred
dollar ra brings::dollar ra brings
happen when first::happen when first
first call occurs::first call occurs
occurs the ddress::occurs the ddress
jal gets stored::jal gets stored
reach this point::reach this point
array gets replaced::array gets replaced
replaced by address::replaced by address
call will occur::call will occur
correctly this return::correctly this return
return will occur::return will occur
return the program::return the program
preserves its return::preserves its return
address all right::address all right
calls can occur::calls can occur
care of saving::care of saving
enter the procedure::enter the procedure
huh you save::huh you save
save the contents::save the contents
call the last::call the last
return the last::return the last
memory location load::memory location load
array is free::array is free
make any calls::make any calls
make a call::make a call
nesting of calls::nesting of calls
sorting case sorting::sorting case sorting
case sorting problem::case sorting problem
find a minimum::find a minimum
minimum and put::minimum and put
number of elements::number of elements
pointer to place::pointer to place
place where minimum::place where minimum
area in array::area in array
onwards and bring::onwards and bring
bring the minimum::bring the minimum
back to location::back to location
single loop call::single loop call
call to min::call to min
min um min::min um min
performs that exchange::performs that exchange
exchange condition conditional::exchange condition conditional
condition conditional exchange::condition conditional exchange
conditional exchange compare::conditional exchange compare
compare and exchange::compare and exchange
jal to min::jal to min
makes a call::makes a call
call to exchange::call to exchange
updates r compares::updates r compares
basically forms body::basically forms body
save and load::save and load
saving ra value::saving ra value
call ra save::call ra save
constant or large::constant or large
assembler will translate::assembler will translate
possibly two instructions::possibly two instructions
prepare the address::prepare the address
move a step::move a step
call which means::call which means
means a procedure::means a procedure
changed this loop::changed this loop
min into recursive::min into recursive
improving the program::improving the program
jump to exchange::jump to exchange
value of parameter::value of parameter
exchange or exchange::exchange or exchange
exceeds final value::exceeds final value
finding this false::finding this false
chain of return::chain of return
return will happen::return will happen
follow this program::follow this program
translation in minutes::translation in minutes
restoring this right::restoring this right
making this comparison::making this comparison
comparison and looping::comparison and looping
making a call::making a call
fixed memory location::fixed memory location
stored is value::stored is value
inside so subsequent::inside so subsequent
return takes place::return takes place
everytime now return::everytime now return
original entry point::original entry point
lose any value::lose any value
natural structure natural::natural structure natural
structure natural data::structure natural data
natural data structure::natural data structure
last in first::last in first
first out structure::first out structure
returns take place::returns take place
first out manner::first out manner
enter into function::enter into function
call is occuring::call is occuring
occuring the return::occuring the return
address gets pushed::address gets pushed
returning i popped::returning i popped
popped the latest::popped the latest
calls are occuring::calls are occuring
pushing the return::pushing the return
enter a function::enter a function
push the return::push the return
address into stack::address into stack
stack and return::stack and return
pushing and popping::pushing and popping
stack is created::stack is created
register called stack::register called stack
implement a stack::implement a stack
make stack grow::make stack grow
grow towards reducing::grow towards reducing
addresses or increasing::addresses or increasing
imagining that lets::imagining that lets
lets say address::lets say address
top and maximum::top and maximum
stack and start::stack and start
start building stack::start building stack
stack towards lower::stack towards lower
point to top::point to top
decrement stack pointer::decrement stack pointer
pointer to create::pointer to create
space for putting::space for putting
putting in data::putting in data
store the value::store the value
stack so add::stack so add
subtract immediate instruction::subtract immediate instruction
instruction you add::instruction you add
four from stack::four from stack
pointer and pop::pointer and pop
pick up value::pick up value
stack as pointed::stack as pointed
stack pointer put::stack pointer put
register and update::register and update
update the stack::update the stack
stack pointer increase::stack pointer increase
save and restore::save and restore
restore the values::restore the values
values of return::values of return
environment all right::environment all right
ensuring that information::ensuring that information
information about return::information about return
previous example situation::previous example situation
situation was simple::situation was simple
back i don::back i don
basically um everytime::basically um everytime
everytime a call::everytime a call
call is made::call is made
made the fresh::made the fresh
values are passed::values are passed
value i don::value i don
code after recursive::code after recursive
passed you passed::passed you passed
passed on values::passed on values
afford to lose::afford to lose
lose whole values::lose whole values
passed through registers::passed through registers
registers if situation::registers if situation
situation is simple::situation is simple
calls whole parameters::calls whole parameters
save the parameters::save the parameters
pass the parameters::pass the parameters
parameters through stack::parameters through stack
answered which memory::answered which memory
locations so additional::locations so additional
call you load::call you load
load the parameter::load the parameter
inside the function::inside the function
allocating the local::allocating the local
enter the function::enter the function
space which corresponds::space which corresponds
create local arrays::create local arrays
talking of procedure::talking of procedure
writing a program::writing a program
program you assume::program you assume
call occurs control::call occurs control
program will continue::program will continue
imagine a situation::imagine a situation
situation that main::situation that main
person one programmer::person one programmer
function is written::function is written
write in sequence::write in sequence
vision all right::vision all right
ease the task::ease the task
save the registers::save the registers
writing the calling::writing the calling
done partial computation::done partial computation
computation some results::computation some results
back and continue::back and continue
caller should save::caller should save
save or callee::save or callee
callee should save::callee should save
question this conflict::question this conflict
programs two people::programs two people
people will write::people will write
destroy the value::destroy the value
fingers will point::fingers will point
saved temporary registers::saved temporary registers
caller can assume::caller can assume
safe to leave::safe to leave
ensure that values::ensure that values
preserved across calls::preserved across calls
results for left::results for left
assume that values::assume that values
feels the necessity::feels the necessity
save the values::save the values
save the callers::save the callers
value which work::value which work
make a make::make a make
restore those values::restore those values
caller is concerned::caller is concerned
caller will stick::caller will stick
assumption that values::assumption that values
simply temporary registers::simply temporary registers
registers where values::registers where values
responsibility of leaving::responsibility of leaving
leaving these untempored::leaving these untempored
hand if caller::hand if caller
requires these values::requires these values
saved across calls::saved across calls
caller is expected::caller is expected
expected to save::expected to save
safely then make::safely then make
recover that recover::recover that recover
recover these values::recover these values
saved by caller::saved by caller
values or touching::values or touching
touching the values::touching the values
values and saving::values and saving
saving in case::saving in case
talking of lots::talking of lots
lots of register::lots of register
ensured by hardware::ensured by hardware
value is constant::value is constant
thing you missed::thing you missed
out here dollar::out here dollar
eighty is register::eighty is register
expanding pseudo instructions::expanding pseudo instructions
pseudo instructions requires::pseudo instructions requires
requires a temporary::requires a temporary
preparation of address::preparation of address
address or storing::address or storing
storing the comparison::storing the comparison
result then assembler::result then assembler
normal is expected::normal is expected
run into problem::run into problem
function many procedures::function many procedures
access various components::access various components
dollar zero dollar::dollar zero dollar
dollar two dollar::dollar two dollar
dollar four etcetera::dollar four etcetera
usage so hardware::usage so hardware
ensured that register::ensured that register
value and jal::value and jal
jal instruction assumes::jal instruction assumes
assumes that value::assumes that value
matter of convention::matter of convention
convention the hardware::convention the hardware
convention and hardware::convention and hardware
doesn t understand::doesn t understand
understand this stack::understand this stack
register for pointing::register for pointing
pointing to stack::pointing to stack
execute jal instruction::execute jal instruction
instruction the return::instruction the return
instruction it starts::instruction it starts
specifically for return::specifically for return
talked abou putting::talked abou putting
mentioned was stack::mentioned was stack
stack is organised::stack is organised
follow different convention::follow different convention
create an activation::create an activation
record on top::record on top
return you clear::return you clear
nested calls occur::nested calls occur
build these activation::build these activation
typically the stack::typically the stack
pointer will point::pointer will point
mentioned other register::mentioned other register
frame pointer points::frame pointer points
previous activation record::previous activation record
record okay convention::record okay convention
earlier the arguments::earlier the arguments
record the return::record the return
saved is saved::saved is saved
saved here local::saved here local
data is allocated::data is allocated
local local data::local local data
local data area::local data area
access is made::access is made
referenced in terms::referenced in terms
doing any dynamic::doing any dynamic
dynamic storage allocation::dynamic storage allocation
suppose the program::suppose the program
program is sophisticated::program is sophisticated
allocation gets done::allocation gets done
act as reference::act as reference
reference point accessing::reference point accessing
accessing the data::accessing the data
access is load::access is load
word some constant::word some constant
pointer the offsets::pointer the offsets
stack is filled::stack is filled
offset is required::offset is required
lets summarize lets::lets summarize lets
create procedural abstraction::create procedural abstraction
arranging procedure call::arranging procedure call
call and return::call and return
parameters are passed::parameters are passed
passed we talked::passed we talked
talked of complications::talked of complications
complications which arise::complications which arise
recursion the solution::recursion the solution
lot of conventions::lot of conventions
illustration and show::illustration and show
complex recursive procedure::complex recursive procedure
activation record creation::activation record creation
explain frame pointer::explain frame pointer
writing the program::writing the program
piece of data::piece of data
accessed with constant::accessed with constant
offset with respect::offset with respect
top of stack::top of stack
size may grow::size may grow
grow or shrink::grow or shrink
changing so stack::changing so stack
part is constant::part is constant
constant all right::constant all right
methods but atleast::methods but atleast
atleast the part::atleast the part
unchanged whose location::unchanged whose location
location or seat::location or seat
seat is unchanged::seat is unchanged
access by constant::access by constant
push and pop::push and pop
couldn t calculate::couldn t calculate
terms the pushes::terms the pushes
push different things::push different things
push return address::push return address
made to grow::made to grow
clear off activation::clear off activation
space which isallocated::space which isallocated
source of error::source of error
pushes and pops::pushes and pops
memory is allocated::memory is allocated
stack pointer stack::stack pointer stack
pointer stack stack::pointer stack stack
stack stack pointer::stack stack pointer
start at lets::start at lets
areas two data::areas two data
two data areas::two data areas
areas which grow::areas which grow
grow in opposite::grow in opposite
stack it grows::stack it grows
grows and shrinks::grows and shrinks
heap which grows::heap which grows
shrinks so heap::shrinks so heap
allocations for malloc::allocations for malloc
allocations when calls::allocations when calls
calls and return::calls and return
make a fixed::make a fixed
area for heap::area for heap
area for stack::area for stack
area less heap::area less heap
area less stack::area less stack
don t clash::don t clash
out of memory::out of memory
answered this question::answered this question
space you allocate::space you allocate
allocate a fixed::allocate a fixed
space and leave::space and leave
class i discussed::class i discussed
discussed how sub::discussed how sub
routines or procedures::routines or procedures
assembly language programs::assembly language programs
link the flow::link the flow
talked about convention::talked about convention
convention of register::convention of register
usage which helps::usage which helps
helps in usage::helps in usage
usage of temporary::usage of temporary
temporary areas temporary::temporary areas temporary
areas temporary words::areas temporary words
structure like stack::structure like stack
match the order::match the order
define an activation::define an activation
layout of memory::layout of memory
memory in stack::memory in stack
kep the temporary::kep the temporary
data um today::data um today
ideas and show::ideas and show
show and illustrate::show and illustrate
create activation records::create activation records
records in order::records in order
order to define::order to define
define recursive procedures::define recursive procedures
call these records::call these records
records get created::records get created
return some functions::return some functions
examples and rest::examples and rest
calling this picture::calling this picture
funtions or procedures::funtions or procedures
calls could occur::calls could occur
arrange for flow::arrange for flow
manner or non::manner or non
non recursive manner::non recursive manner
illustrate the point::illustrate the point
implementation first describe::implementation first describe
begin with description::begin with description
description of main::description of main
care of inputting::care of inputting
inputting an array::inputting an array
array of integers::array of integers
integers then call::integers then call
call the sort::call the sort
array of dimension::array of dimension
dimension as input::dimension as input
care of entering::care of entering
entering the value::entering the value
array or size::array or size
input the values::input the values
integers and integers::integers and integers
integers are input::integers are input
input and stored::input and stored
call to sort::call to sort
output the sorted::output the sorted
output all right::output all right
straight forward function::straight forward function
function you input::function you input
perform a sort::perform a sort
sort and output::sort and output
output i don::output i don
function the merge::function the merge
merge function merge::merge function merge
function merge sort::function merge sort
merge sort function::merge sort function
sub matrices sub::sub matrices sub
matrices sub arrays::matrices sub arrays
purpose um special::purpose um special
split the array::split the array
array that array::array that array
sorted when size::sorted when size
two parts sort::two parts sort
out two integers::out two integers
halves roughly equal::halves roughly equal
roughly equal halves::roughly equal halves
halves of size::halves of size
size of data::size of data
two sorted arrays::two sorted arrays
function all right::function all right
forward in terms::forward in terms
structure one small::structure one small
permit a variable::permit a variable
variable size array::variable size array
spliting the array::spliting the array
smaller and smaller::smaller and smaller
maximum possible size::maximum possible size
wastage of space::wastage of space
sake of simplicity::sake of simplicity
manner so infact::manner so infact
sort it creates::sort it creates
creates two local::creates two local
two local arrays::two local arrays
arrays of size::arrays of size
order is maintained::order is maintained
output and small::output and small
small p small::small p small
small q give::small q give
give the dimensions::give the dimensions
local variables initialised::local variables initialised
element and pick::element and pick
creating array sorted::creating array sorted
array sorted array::array sorted array
array in ascending::array in ascending
transfer one element::transfer one element
reach a point::reach a point
pass on elements::pass on elements
pass on remaining::pass on remaining
implement these recursive::implement these recursive
based on defining::based on defining
defining activation records::defining activation records
activation records creating::activation records creating
call and disposing::call and disposing
return so lets::return so lets
define the structure::define the structure
record so first::record so first
create activation record::create activation record
parameters addresses starting::parameters addresses starting
addresses starting addresses::addresses starting addresses
right the order::right the order
things are appearing::things are appearing
space on top::space on top
parameters return address::parameters return address
return the stack::return the stack
registers for passing::registers for passing
put those put::put those put
creating activation record::creating activation record
addresses are put::addresses are put
smaller activation record::smaller activation record
basically my entire::basically my entire
split between registers::split between registers
bit beyond convention::bit beyond convention
convention is defined::convention is defined
registers are concerned::registers are concerned
parameters through registers::parameters through registers
thing has put::thing has put
put into registers::put into registers
two array addresses::two array addresses
address b address::address b address
space for return::space for return
order the entire::order the entire
upper half upper::upper half upper
half upper part::half upper part
initialising these locations::initialising these locations
move the stack::move the stack
defined activation records::defined activation records
code of merge::code of merge
encode this part::encode this part
part um keeping::part um keeping
begin by accessing::begin by accessing
accessing the value::accessing the value
location from top::location from top
word within offset::word within offset
four and register::four and register
basically your stack::basically your stack
stack is stack::stack is stack
pointing to top::pointing to top
contents of stack::contents of stack
loading p keeping::loading p keeping
keeping in register::keeping in register
pseudo instruction bge::pseudo instruction bge
instruction bge branch::instruction bge branch
branch if greater::branch if greater
greater than equal::greater than equal
prepare the indices::prepare the indices
indices for arrays::indices for arrays
four and add::four and add
done this kind::done this kind
two steps multiplication::two steps multiplication
multiplication and addition::multiplication and addition
bring one word::bring one word
four then add::four then add
add the starting::add the starting
read from array::read from array
back in register::back in register
back in array::back in array
picture of activation::picture of activation
record in front::record in front
picking from activation::picking from activation
out the offset::out the offset
required with respect::required with respect
respect to stack::respect to stack
pointer and access::pointer and access
access that value::access that value
record for merge::record for merge
merge was created::merge was created
inside the procedure::inside the procedure
described the entire::described the entire
calling this function::calling this function
record of sort::record of sort
record of merge::record of merge
achieve that starting::achieve that starting
moment and execution::moment and execution
call should result::call should result
result in creation::result in creation
stack and filling::stack and filling
passed the array::passed the array
address of starting::address of starting
statement takes care::statement takes care
care of filling::care of filling
two is starting::two is starting
starting twenty word::starting twenty word
means eighty bytes::means eighty bytes
array second parameter::array second parameter
twenty plus twenty::twenty plus twenty
forty one forty::forty one forty
forty two forty::forty two forty
forty three forty::forty three forty
leave a gap::leave a gap
gap of forty::gap of forty
forty four words::forty four words
seventy six bytes::seventy six bytes
thethird statement requires::thethird statement requires
statement requires correction::statement requires correction
put this address::put this address
put the contents::put the contents
storing the value::storing the value
read that location::read that location
two all right::two all right
previous activation records::previous activation records
first we bring::first we bring
pointer stack pointer::pointer stack pointer
twenty forty words::twenty forty words
stack which means::stack which means
means one sixty::means one sixty
read from offset::read from offset
sixty from top::sixty from top
minus eight offset::minus eight offset
offset from top::offset from top
brought a value::brought a value
offset and stored::offset and stored
offset that means::offset that means
bring the value::bring the value
sixty four offset::sixty four offset
four offset bring::four offset bring
minus four offset::minus four offset
values to create::values to create
create the activation::create the activation
record and stack::record and stack
pointer is raised::pointer is raised
raised by twelve::raised by twelve
created activation record::created activation record
words two words::words two words
reach the beginning::reach the beginning
saving the return::saving the return
address at top::address at top
care of creating::care of creating
creating small activation::creating small activation
small activation record::small activation record
activation record filling::activation record filling
call has occurred::call has occurred
address and put::address and put
simple single statement::simple single statement
return from merge::return from merge
added one activation::added one activation
record for sort::record for sort
sort and registers::sort and registers
parameters and temporary::parameters and temporary
statements before returning::statements before returning
bring the return::bring the return
first load statement::first load statement
load statement loads::load statement loads
statement loads return::statement loads return
loads return address::loads return address
pointer actually shrinks::pointer actually shrinks
shrinks the stack::shrinks the stack
basically the activation::basically the activation
record is disposed::record is disposed
bring the stack::bring the stack
jump register brings::jump register brings
brings the control::brings the control
back so return::back so return
point where sort::point where sort
calls to sort::calls to sort
record which corresponds::record which corresponds
build another activation::build another activation
showing only part::showing only part
create a copy::create a copy
thing okay copy::thing okay copy
value is filled::value is filled
call the parameter::call the parameter
prime b prime::prime b prime
prime n prime::prime n prime
showing the first::showing the first
statement of sort::statement of sort
save the return::save the return
address okay return::address okay return
sixty eight offset::sixty eight offset
stack so twenty::stack so twenty
twenty forty forty::twenty forty forty
two and forty::two and forty
forty two times::forty two times
store return address::store return address
location one sixty::location one sixty
sixty eight deep::sixty eight deep
first lets pick::first lets pick
offset we load::offset we load
load the address::load the address
minus twelve offset::minus twelve offset
offset which means::offset which means
means the top::means the top
record which means::record which means
means the address::means the address
stored in minus::stored in minus
stored at minus::stored at minus
forty sorry eighty::forty sorry eighty
sixty one sixty::sixty one sixty
four one sixty::four one sixty
two one seventy::two one seventy
immediately one eighty::immediately one eighty
minus four minus::minus four minus
brought the address::brought the address
address in stack::address in stack
brought the value::brought the value
activation record generation::activation record generation
space for local::space for local
total space required::total space required
required just push::required just push
push the stack::push the stack
two arrays twenty::two arrays twenty
total of forty::total of forty
forty six words::forty six words
eighty four bytes::eighty four bytes
create the space::create the space
space simply tranfer::space simply tranfer
return from sort::return from sort
recover the return::recover the return
address and dispose::address and dispose
dispose the stack::dispose the stack
recovering the return::recovering the return
stack pointer equal::stack pointer equal
equal to stack::equal to stack
stack pointer minus::stack pointer minus
minus one eighty::minus one eighty
complete this assembly::complete this assembly
exercise as part::exercise as part
complete this write::complete this write
values of small::values of small
small m small::small m small
lectures you recall::lectures you recall
make the code::make the code
write a pointer::write a pointer
write same thing::write same thing
thing in pointers::thing in pointers
sort is made::sort is made
creating a large::creating a large
large activation record::large activation record
record of size::record of size
size one eighty::size one eighty
equal to twenty::equal to twenty
essentially two times::essentially two times
terms of words::terms of words
times m words::times m words
bytes for rest::bytes for rest
depth of recursive::depth of recursive
chain of calls::chain of calls
calls it grows::calls it grows
return it shrinks::return it shrinks
shrinks so depending::shrinks so depending
upto certain depth::upto certain depth
depth and based::depth and based
maximum use usage::maximum use usage
usage of stack::usage of stack
analytically all right::analytically all right
experimentally for analytical::experimentally for analytical
depth of recursion::depth of recursion
size of array::size of array
describe the maximum::describe the maximum
maximum stack size::maximum stack size
experimentally by introducing::experimentally by introducing
introducing some additional::introducing some additional
address the minimum::address the minimum
empty stack assign::empty stack assign
grows the value::grows the value
allocating an array::allocating an array
passed as parameter::passed as parameter
space for output::space for output
creating a local::creating a local
space and reserve::space and reserve
improvement is required::improvement is required
rewrite this function::rewrite this function
arrays all right::arrays all right
present algorithm written::present algorithm written
written the space::written the space
create array everytime::create array everytime
everytime you make::everytime you make
depth of calls::depth of calls
calls the space::calls the space
space gets multiplied::space gets multiplied
rewrite first first::rewrite first first
usage is proportional::usage is proportional
recursive functions entire::recursive functions entire
functions entire usage::functions entire usage
usage of activation::usage of activation
stack and crucial::stack and crucial
decisions are deciding::decisions are deciding
deciding a format::deciding a format
structure of activation::structure of activation
decided the structure::decided the structure
structure the usage::structure the usage
offsets are constants::offsets are constants
easily access data::easily access data
appropriately create space::appropriately create space
today computer architecture::today computer architecture
understand instruction set::understand instruction set
architecture by taking::architecture by taking
taking a simple::taking a simple
space which means::space which means
main key features::main key features
learnt about mips::learnt about mips
examples so first::examples so first
summarize the key::summarize the key
key points key::key points key
points key characteristics::points key characteristics
characteristics of mips::characteristics of mips
two terms risc::two terms risc
risc and cisc::risc and cisc
cisc which stand::cisc which stand
stand for reduced::stand for reduced
instruction set computer::instruction set computer
computer and complex::computer and complex
complex instruction set::complex instruction set
broadly different architectural::broadly different architectural
examples will elaborate::examples will elaborate
versus other architecture::versus other architecture
things which characterize::things which characterize
characterize a instruction::characterize a instruction
set of basic::set of basic
operations or primitive::operations or primitive
structure is organized::structure is organized
organized um storage::organized um storage
terms of registers::terms of registers
registers that means::registers that means
means the registers::means the registers
registers are general::registers are general
general purpose registers::general purpose registers
registers or special::registers or special
special purpose registers::special purpose registers
memory address space::memory address space
range of addresses::range of addresses
accessed by bytes::accessed by bytes
bytes or word::bytes or word
operands three operands::operands three operands
operands less operands::operands less operands
instructions in terms::instructions in terms
characterize mips architecture::characterize mips architecture
complete mips architecture::complete mips architecture
primarily about add::primarily about add
multiply and divide::multiply and divide
divide logical operations::divide logical operations
operations exist relational::operations exist relational
exist relational operation::exist relational operation
branch an equal::branch an equal
operation which compares::operation which compares
jump where flow::jump where flow
control is changed::control is changed
point another instruction::point another instruction
represent the logic::represent the logic
call the procedure::call the procedure
procedure or return::procedure or return
return from procedure::return from procedure
instructions for movement::instructions for movement
movement of data::movement of data
data bringing data::data bringing data
memory to registers::memory to registers
registers or registers::registers or registers
registers to memory::registers to memory
memory or movement::memory or movement
operations which work::operations which work
work on non::work on non
broadly this list::broadly this list
class of instructions::class of instructions
structure is shown::structure is shown
instructions are concerned::instructions are concerned
register with equal::register with equal
two which requires::two which requires
field to access::field to access
put any registers::put any registers
play a specific::play a specific
exception is register::exception is register
hardware and register::hardware and register
register number thirty::register number thirty
task of programming::task of programming
set of convention::set of convention
address of curent::address of curent
upto two raised::upto two raised
power thirty minus::power thirty minus
four okay sothis::four okay sothis
call as address::call as address
space that means::space that means
fifty six mega::fifty six mega
bytes of memory::bytes of memory
means that rest::means that rest
physically have depends::physically have depends
type of configuration::type of configuration
access the operands::access the operands
operands which participate::operands which participate
results of arithmetic::results of arithmetic
targets for branch::targets for branch
branch or jump::branch or jump
addressing mode register::addressing mode register
mode register addressing::mode register addressing
register addressing mode::register addressing mode
addressing mode base::addressing mode base
base or index::base or index
index pc relative::index pc relative
relative pseudo direct::relative pseudo direct
direct and register::direct and register
operand is put::operand is put
number of instruction::number of instruction
versions of arithmetic::versions of arithmetic
instructions like add::instructions like add
instructions can work::instructions can work
work with constant::work with constant
provided as part::provided as part
case of mips::case of mips
mips these constants::mips these constants
mode is register::mode is register
first addressing mode::first addressing mode
mode is applicable::mode is applicable
operand or destination::operand or destination
source of operand::source of operand
applicable for source::applicable for source
field and source::field and source
lot of instructions::lot of instructions
multiply divide slt::multiply divide slt
divide slt beq::divide slt beq
slt beq bne::slt beq bne
operand in registers::operand in registers
base addressing involves::base addressing involves
involves two things::involves two things
things a register::things a register
values are added::values are added
resulting address refers::resulting address refers
destination for variety::destination for variety
variety of operation::variety of operation
instruction which make::instruction which make
reference to memory::reference to memory
instructions or logical::instructions or logical
instructions always assume::instructions always assume
registers or constants::registers or constants
source in case::source in case
case of load::case of load
load and destination::load and destination
destination in case::destination in case
case of store::case of store
similar to base::similar to base
constant another difference::constant another difference
constant in base::constant in base
base addressing refers::base addressing refers
relative addressing refers::relative addressing refers
constant is hundred::constant is hundred
hundred bytes hundred::hundred bytes hundred
bytes hundred words::bytes hundred words
thirty two byte::thirty two byte
two byte address::two byte address
add this constant::add this constant
constant after multiplication::constant after multiplication
two subtle differences::two subtle differences
refers to data::refers to data
data in memory::data in memory
memory this refers::memory this refers
instruction in memory::instruction in memory
addressing the meaning::addressing the meaning
meaning of direct::meaning of direct
instruction specifies address::instruction specifies address
source or destination::source or destination
call it direct::call it direct
addressing we call::addressing we call
call it pseudo::call it pseudo
bits from program::bits from program
instruction or jal::instruction or jal
bit constant field::bit constant field
thirty bit word::thirty bit word
bit word address::bit word address
two zeros forms::two zeros forms
forms a thirty::forms a thirty
two bit byte::two bit byte
bit byte address::bit byte address
access an instruction::access an instruction
instruction is accessed::instruction is accessed
stricly speaking direct::stricly speaking direct
speaking direct address::speaking direct address
register indirect addressing::register indirect addressing
specifies the register::specifies the register
applicable to specific::applicable to specific
specification of mode::specification of mode
mode and specification::mode and specification
totally independent manner::totally independent manner
manner that means::manner that means
set of modes::set of modes
twelve or sixteen::twelve or sixteen
completely orthogonal parts::completely orthogonal parts
finally the last::finally the last
feature we wanted::feature we wanted
wanted to focus::wanted to focus
provision of sixteen::provision of sixteen
constant j format::constant j format
format the largest::format the largest
instructions actually follow::instructions actually follow
add it means::add it means
means all arithmetic::means all arithmetic
logical and comparison::logical and comparison
important to summarize::important to summarize
firstly all instructions::firstly all instructions
number of general::number of general
purpose registers thirty::purpose registers thirty
doan arithmetic operation::doan arithmetic operation
flow okay branch::flow okay branch
conditional branch instruction::conditional branch instruction
comparison being made::comparison being made
simpler hardware wise::simpler hardware wise
wise as compared::wise as compared
compared to comparison::compared to comparison
equal or greater::equal or greater
done with branch::done with branch
doing any arbitary::doing any arbitary
comparison and branching::comparison and branching
deliberately each instruction::deliberately each instruction
limited addressing modes::limited addressing modes
fixed addressing modes::fixed addressing modes
instruction which perform::instruction which perform
arithmetic or logic::arithmetic or logic
operation so source::operation so source
source one source::source one source
counter which runs::counter which runs
sequentially through instruction::sequentially through instruction
idea of store::idea of store
store program computer::store program computer
firstly in terms::firstly in terms
terms of operations::terms of operations
processors which define::processors which define
define very complex::define very complex
operation has single::operation has single
takes a variable::takes a variable
variable in memory::variable in memory
increments it compares::increments it compares
value and branches::value and branches
memory access arithmetic::memory access arithmetic
branching all happening::branching all happening
happening in single::happening in single
make a logical::make a logical
processor which provide::processor which provide
provide such instructions::provide such instructions
copying a block::copying a block
block of data::block of data
area in memory::area in memory
goal of including::goal of including
including such instructions::including such instructions
compact and shorter::compact and shorter
danger the negative::danger the negative
side the flip::side the flip
make the machine::make the machine
giga hertz pentium::giga hertz pentium
pentium that means::pentium that means
means the basic::means the basic
basic time reference::basic time reference
giga hertz periodic::giga hertz periodic
hertz periodic signal::hertz periodic signal
signal and operations::signal and operations
include more complex::include more complex
instruction in addition::instruction in addition
clock cycles required::clock cycles required
lectures that performance::lectures that performance
performance does depend::performance does depend
factors the rate::factors the rate
sufficient for doing::sufficient for doing
doing any computation::doing any computation
fortunately that universality::fortunately that universality
implement any logic::implement any logic
express any computation::express any computation
decision to include::decision to include
include a complex::include a complex
designing an architecture::designing an architecture
make it worse::make it worse
operands of instruction::operands of instruction
instruction are located::instruction are located
faster to access::faster to access
registers as compared::registers as compared
compared to accessing::compared to accessing
takes much longer::takes much longer
instructions which work::instructions which work
work with register::work with register
register work faster::register work faster
philosophy behind restricting::philosophy behind restricting
restricting arithmetic operations::restricting arithmetic operations
support rr operations::support rr operations
possibilities do exist::possibilities do exist
refers to instruction::refers to instruction
operand both operands::operand both operands
operands in registers::operands in registers
linked in somwhere::linked in somwhere
restricting the operands::restricting the operands
operands to register::operands to register
separate out memory::separate out memory
out memory access::out memory access
access and arithmetic::access and arithmetic
fact that registers::fact that registers
registers and registers::registers and registers
type of instructions::type of instructions
number of operand::number of operand
number the machines::number the machines
machines or architectures::machines or architectures
architectures get classified::architectures get classified
address two address::address two address
address one address::address one address
main computing instructions::main computing instructions
registers in general::registers in general
two address machines::two address machines
typically the result::typically the result
two getting added::two getting added
thing becomes implicit::thing becomes implicit
implicit so acc::implicit so acc
register called accumulator::register called accumulator
acc is assumed::acc is assumed
machine where instruction::machine where instruction
performed on operand::performed on operand
lying on top::lying on top
operands are removed::operands are removed
removed the result::removed the result
stack so instruction::stack so instruction
values from stack::values from stack
stack perform addition::stack perform addition
addition um put::addition um put
prosessor an architecture::prosessor an architecture
classify the machine::classify the machine
arithmetic and logical::arithmetic and logical
basically three address::basically three address
simply a jump::simply a jump
things two operands::things two operands
operands being compared::operands being compared
fair amount fair::fair amount fair
amount fair number::amount fair number
participating in operation::participating in operation
machine the stack::machine the stack
kind so registerless::kind so registerless
registerless which means::registerless which means
means zero registers::means zero registers
registers accumulator based::registers accumulator based
accumulator based machine::accumulator based machine
machine which means::machine which means
large then machines::large then machines
mips like architectures::mips like architectures
fifty six registers::fifty six registers
registers um sun::registers um sun
registers are divided::registers are divided
divided into groups::divided into groups
groups each forms::groups each forms
kind of switching::kind of switching
switching is done::switching is done
additional addressing modes::additional addressing modes
modes which machines::modes which machines
orthogonality between addressing::orthogonality between addressing
modes and opcodes::modes and opcodes
talked about pseudo::talked about pseudo
direct addressing mode::direct addressing mode
mode the entire::mode the entire
size becomes crucial::size becomes crucial
address is thirty::address is thirty
direct address instruction::direct address instruction
instruction the instruction::instruction the instruction
two okay indirect::two okay indirect
specifically called register::specifically called register
indirect that means::indirect that means
machines which support::machines which support
simply called indirect::simply called indirect
indirect and meaning::indirect and meaning
picking up address::picking up address
making another access::making another access
talked about base::talked about base
mentioned pc relative::mentioned pc relative
instruction is added::instruction is added
added to contents::added to contents
value the base::value the base
indexing mode interpretation::indexing mode interpretation
base and register::base and register
array is provided::array is provided
constant so constant::constant so constant
index into array::index into array
array our case::array our case
call a base::call a base
doesn t work::doesn t work
times you perform::times you perform
perform a sequential::perform a sequential
access to data::access to data
order of address::order of address
address or decreasing::address or decreasing
providing the address::providing the address
increment or decrement::increment or decrement
decrement the address::decrement the address
increment or auto::increment or auto
means that everytime::means that everytime
understood that address::understood that address
incrementing or decrementing::incrementing or decrementing
decrement or post::decrement or post
decrement or pre::decrement or pre
increment or post::increment or post
increment that means::increment that means
decrementing before making::decrementing before making
making a memory::making a memory
architecture is provide::architecture is provide
case of auto::case of auto
increment and auto::increment and auto
register to make::register to make
make memory access::make memory access
processors which provide::processors which provide
provide a stack::provide a stack
stack based addressing::stack based addressing
addressing with auto::addressing with auto
increment and decrement::increment and decrement
accessing a sequence::accessing a sequence
bytes or sequence::bytes or sequence
sequence of textual::sequence of textual
textual data characters::textual data characters
accessing half words::accessing half words
accessing full word::accessing full word
access full words::access full words
accessing double words::accessing double words
double words lets::double words lets
floating point numbers::floating point numbers
complex in stack::complex in stack
decrement we require::decrement we require
require with stack::require with stack
four or decrementing::four or decrementing
sixty four depending::sixty four depending
allocation or deallocation::allocation or deallocation
deallocation we make::deallocation we make
provisions for comon::provisions for comon
cases are helpful::cases are helpful
helpful but complete::helpful but complete
difficult at times::difficult at times
concept of risc::concept of risc
cisc risc stands::cisc risc stands
stands for reduced::stands for reduced
computer and cisc::computer and cisc
stands for complex::stands for complex
coined in early::coined in early
eighties by henassi::eighties by henassi
henassi and patterson::henassi and patterson
day which existed::day which existed
argument in favor::argument in favor
favor of risc::favor of risc
uniformity of instruction::uniformity of instruction
instruction in terms::instruction in terms
number of formats::number of formats
formats simple set::formats simple set
operations and addressing::operations and addressing
modes and register::modes and register
register based architecture::register based architecture
choices on hardware::choices on hardware
implementation and performance::implementation and performance
ideas were propagated::ideas were propagated
propagated basically targeting::propagated basically targeting
targeting for achieving::targeting for achieving
achieving high performance::achieving high performance
comparitively lower cost::comparitively lower cost
machine called architecture::machine called architecture
architecture called risc::architecture called risc
risc one risc::risc one risc
berkley by patterson::berkley by patterson
contemporarily by henassi::contemporarily by henassi
architecture called mips::architecture called mips
mips was designed::mips was designed
architecture so mips::architecture so mips
versions of mips::versions of mips
purpose computing application::purpose computing application
hand the basic::hand the basic
ideas of risc::ideas of risc
risc architectures developed::risc architectures developed
architectures developed berkley::architectures developed berkley
developed berkley found::developed berkley found
found their place::found their place
place in sparc::place in sparc
beginning with eighties::beginning with eighties
developments new architecture::developments new architecture
architectures do continue::architectures do continue
intel x eighty::intel x eighty
eighty six architecture::eighty six architecture
historical and commercial::historical and commercial
commercial reason describing::commercial reason describing
describing so lets::describing so lets
mention so sun::mention so sun
sun s sparc::sun s sparc
roots in risc::roots in risc
architecture of berkley::architecture of berkley
risc pa stands::risc pa stands
stands for precison::stands for precison
architecture from hewlett::architecture from hewlett
hewlett packard motorola::hewlett packard motorola
packard motorola developed::packard motorola developed
leading cisc machine::leading cisc machine
cisc machine manufacturer::cisc machine manufacturer
architectures are risc::architectures are risc
back to sixties::back to sixties
four the term::four the term
feature we talked::feature we talked
talked of today::talked of today
high performance machine::high performance machine
architecture is vax::architecture is vax
dec which stood::dec which stood
stood for digital::stood for digital
digital equipment coorporation::digital equipment coorporation
coorporation so vax::coorporation so vax
history in terms::history in terms
popular mini computer::popular mini computer
computer called pdp::computer called pdp
instructions the instruction::instructions the instruction
size could vary::size could vary
byte to fifty::byte to fifty
fifty four bytes::fifty four bytes
extent of non::extent of non
right and hardware::right and hardware
programming some crucial::programming some crucial
system program operating::system program operating
program operating system::program operating system
system many critical::system many critical
entire operating systems::entire operating systems
systems are written::systems are written
written in high::written in high
language and considerations::language and considerations
make assembly language::make assembly language
assembly language powerful::assembly language powerful
powerful and easy::powerful and easy
found it difficult::found it difficult
hundreds of instructions::hundreds of instructions
instructions to generate::instructions to generate
generate optimal program::generate optimal program
optimal program generate::optimal program generate
program generate good::program generate good
generate good code::generate good code
instructions was difficult::instructions was difficult
difficult for compiler::difficult for compiler
hand with simple::hand with simple
instruction set compilers::instruction set compilers
generate very efficient::generate very efficient
talking of small::talking of small
programs um compilers::programs um compilers
compilers can produce::compilers can produce
produce machine code::produce machine code
efficient by hand::efficient by hand
hand written code::hand written code
programs of substantial::programs of substantial
examples of cisc::examples of cisc
series from motorola::series from motorola
starting with sixty::starting with sixty
sixty eight thousand::sixty eight thousand
thousand and sixty::thousand and sixty
sixty eight ten::sixty eight ten
ten twenty forty::ten twenty forty
twenty forty sixty::twenty forty sixty
four bit version::four bit version
version the first::version the first
microprocessor four thousand::microprocessor four thousand
sixteen bit processors::sixteen bit processors
processors now thirty::processors now thirty
features got added::features got added
place the architecture::place the architecture
redesigned so carrying::redesigned so carrying
carrying old baggage::carrying old baggage
makes the architecture::makes the architecture
clumsy and hard::clumsy and hard
hard to understand::hard to understand
understand and discuss::understand and discuss
compatibility of code::compatibility of code
code that means::code that means
possibily still run::possibily still run
run on modern::run on modern
compatibility has helped::compatibility has helped
investment in technology::investment in technology
high performing processors::high performing processors
performing processors today::performing processors today
make things run::make things run
close by summarizing::close by summarizing
instruction set complexity::instruction set complexity
performance by impact::performance by impact
cycles you require::cycles you require
good design principles::good design principles
regularity and uniformity::regularity and uniformity
uniformity um smaller::uniformity um smaller
smaller is faster::smaller is faster
accessing smaller structure::accessing smaller structure
smaller structure working::smaller structure working
working on smaller::working on smaller
compromise and make::compromise and make
exceptions and good::exceptions and good
make a common::make a common
case more fast::case more fast
lets say ninety::lets say ninety
make that fast::make that fast
fast as compared::fast as compared
remaining ten percent::remaining ten percent
percent the efforts::percent the efforts
examples we began::examples we began
began understanding instruction::began understanding instruction
understanding instruction set::understanding instruction set
conceptually very simple::conceptually very simple
directions architectural developments::directions architectural developments
place to bring::place to bring
variety of features::variety of features
mentioned about risc::mentioned about risc
stacks of architecture::stacks of architecture
emphasis on simplicity::emphasis on simplicity
simplicity and efficient::simplicity and efficient
case the emphasis::case the emphasis
emphasis on providing::emphasis on providing
providing powerful features::providing powerful features
architecture and study::architecture and study
study in detail::study in detail
studied in case::studied in case
deal with instructions::deal with instructions
simple and emphasis::simple and emphasis
emphasis on uniformity::emphasis on uniformity
uniformity of instructions::uniformity of instructions
instructions are expressed::instructions are expressed
instruction the architecture::instruction the architecture
instruction performing arithmetic::instruction performing arithmetic
arithmetic typically takes::arithmetic typically takes
takes three operands::takes three operands
two for sources::two for sources
examples of risc::examples of risc
style of architecture::style of architecture
architecture i mentioned::architecture i mentioned
mentioned are sun::mentioned are sun
motorola s power::motorola s power
power pc dec::power pc dec
dec s alpha::dec s alpha
machine of nineteen::machine of nineteen
sixties namely cdc::sixties namely cdc
kind of style::kind of style
details of sun::details of sun
cisc particularly machines::cisc particularly machines
machines of earlier::machines of earlier
earlier times seventies::earlier times seventies
machine which grew::machine which grew
compact code minimize::compact code minimize
minimize the code::minimize the code
size and make::size and make
programmer the variation::programmer the variation
variation in instruction::variation in instruction
series of processors::series of processors
eighty x eighty::eighty x eighty
eighty six starting::eighty six starting
origin the idea::origin the idea
idea we needed::idea we needed
needed from earlier::needed from earlier
earlier sixteen bit::earlier sixteen bit
bit eight bit::bit eight bit
four bit macro::four bit macro
bit macro processors::bit macro processors
vax and intel::vax and intel
starting with power::starting with power
power pc architecture::power pc architecture
company including ibm::company including ibm
including ibm motorola::including ibm motorola
motorola and apple::motorola and apple
apple so motorola::apple so motorola
primarily the semiconductor::primarily the semiconductor
business of macro::business of macro
macro processor development::macro processor development
right from early::right from early
rival of intel::rival of intel
intel apple started::intel apple started
started with small::started with small
small desk top::small desk top
desk top personal::desk top personal
top personal computers::top personal computers
computers and ibms::computers and ibms
based on xcxc::based on xcxc
architecture called power::architecture called power
system six thousand::system six thousand
essentially a machine::essentially a machine
two bit architecture::two bit architecture
versions in late::versions in late
four bit kind::four bit kind
extensively in machintosh::extensively in machintosh
versions which find::versions which find
find a wide::find a wide
variety of applications::variety of applications
lots of similarities::lots of similarities
similarities between mips::similarities between mips
architecture roughly similar::architecture roughly similar
roughly similar principles::roughly similar principles
presented some instruction::presented some instruction
branch instruction area::branch instruction area
register so condition::register so condition
set or reset::set or reset
depending upon previous::depending upon previous
operations in case::operations in case
result of instruction::result of instruction
arithmetic is put::arithmetic is put
put in special::put in special
register or flags::register or flags
comparing one bit::comparing one bit
register would carry::register would carry
carry the information::carry the information
subtraction is done::subtraction is done
done or addition::done or addition
result was positive::result was positive
result was odd::result was odd
register called condition::register called condition
two other special::two other special
addresses are stored::addresses are stored
beginning the loop::beginning the loop
loop address stored::loop address stored
information to jump::information to jump
back you don::back you don
explicitly the address::explicitly the address
register called count::register called count
store iteration count::store iteration count
decremented and tested::decremented and tested
execution of loop::execution of loop
iterations are driven::iterations are driven
count so lets::count so lets
formats of power::formats of power
find again lot::find again lot
lot of similarity::lot of similarity
bit register filelds::bit register filelds
operations to provide::operations to provide
provide an operand::provide an operand
operand then register::operand then register
terms of format::terms of format
format the idea::format the idea
opcode the main::opcode the main
main opcode field::main opcode field
expanding the number::expanding the number
group of instruction::group of instruction
distinguished by opcode::distinguished by opcode
ten bit field::ten bit field
make an effect::make an effect
enable condition setting::enable condition setting
disable condition setting::disable condition setting
requiring to test::requiring to test
change the value::change the value
disallow an instruction::disallow an instruction
instruction to modify::instruction to modify
modify the condition::modify the condition
mentioned in context::mentioned in context
context of mips::context of mips
mips that base::mips that base
addressing and index::addressing and index
two register contents::two register contents
contents are read::contents are read
carries the base::carries the base
carries an index::carries an index
index all right::index all right
bytes or array::bytes or array
array of words::array of words
byte or half::byte or half
word or full::word or full
word or double::word or double
information about size::information about size
addition after adding::addition after adding
adding this index::adding this index
auto increment auto::auto increment auto
increment auto decrement::increment auto decrement
decrement where address::decrement where address
address gets modified::address gets modified
field actually carries::field actually carries
aspects and makes::aspects and makes
two special bits::two special bits
special bits rest::special bits rest
means a twenty::means a twenty
twenty four bit::twenty four bit
four bit constant::four bit constant
unconditional jump instructions::unconditional jump instructions
fourteen bit constant::fourteen bit constant
fourteen bit displacement::fourteen bit displacement
displacement is absolute::displacement is absolute
making a link::making a link
transfer of control::transfer of control
branch instructions unconditional::branch instructions unconditional
setting this bit::setting this bit
address gets saved::address gets saved
values are equal::values are equal
equal or unequal::equal or unequal
chck a condition::chck a condition
condition and make::condition and make
make a control::make a control
control transfer based::control transfer based
contents of link::contents of link
register and count::register and count
register so count::register so count
instructions will shorten::instructions will shorten
shorten the code::shorten the code
instruction in mips::instruction in mips
side corresponding instruction::side corresponding instruction
instruction in power::instruction in power
computed by adding::computed by adding
adding two registers::adding two registers
wasting this constant::wasting this constant
index index mode::index index mode
index both added::index both added
result is brought::result is brought
offset also updates::offset also updates
loop in power::loop in power
branch and count::branch and count
count to loop::count to loop
condition being checked::condition being checked
checked is count::checked is count
lot of conditions::lot of conditions
done when counter::done when counter
taking is sparc::taking is sparc
term sparc stands::term sparc stands
stands for scalable::stands for scalable
scalable processor architecture::scalable processor architecture
scalability here means::scalability here means
architecture would scale::architecture would scale
performance also scale::performance also scale
higher word size::higher word size
size so infact::size so infact
infact this architecture::infact this architecture
scaled to sixty::scaled to sixty
main one texas::main one texas
texas instruments toshiba::texas instruments toshiba
instruments toshiba fujitsu::instruments toshiba fujitsu
toshiba fujitsu cypress::toshiba fujitsu cypress
fujitsu cypress tatung::fujitsu cypress tatung
cypress tatung etcetera::cypress tatung etcetera
two bit opcode::two bit opcode
four different patterns::four different patterns
opcode extension fields::opcode extension fields
bit extension field::bit extension field
fields and size::fields and size
sizes thirteen bit::sizes thirteen bit
thirteen bit twelve::thirteen bit twelve
bit twelve bit::bit twelve bit
cases and thirty::cases and thirty
uncnditional jump instruction::uncnditional jump instruction
addressability all right::addressability all right
right you don::right you don
address entire memory::address entire memory
entire memory space::entire memory space
reason why opcode::reason why opcode
exceptions are made::exceptions are made
made and extensions::made and extensions
extensions are made::extensions are made
displacement of twenty::displacement of twenty
twenty two bit::twenty two bit
bit with reference::bit with reference
limited to thirteen::limited to thirteen
thirteen bit constant::thirteen bit constant
constant is larger::constant is larger
address arithmetic type::address arithmetic type
out by sparc::out by sparc
concept of register::concept of register
sees only thirty::sees only thirty
window of thirty::window of thirty
worry a lot::worry a lot
caller what register::caller what register
share the registers::share the registers
lot of transfers::lot of transfers
transfers to memory::transfers to memory
addressed by register::addressed by register
call to aprocedure::call to aprocedure
aprocedure or function::aprocedure or function
set of registers::set of registers
callee can work::callee can work
linkages some flow::linkages some flow
data between caller::data between caller
caller and callee::caller and callee
callee in terms::callee in terms
terms of parameters::terms of parameters
overlapping and overlap::overlapping and overlap
parts um input::parts um input
input local output::input local output
local output global::local output global
change the global::change the global
out of array::out of array
registers the first::registers the first
state always part::state always part
window and local::window and local
out are overlapping::out are overlapping
context you make::context you make
upto eight values::upto eight values
call the window::call the window
twenty four registers::twenty four registers
registers the globals::registers the globals
current window pointer::current window pointer
pointer or cwp::pointer or cwp
pointer is pointing::pointer is pointing
window when return::window when return
thing so suppose::thing so suppose
set of windows::set of windows
window the first::window the first
saved in memory::saved in memory
saving and restoring::saving and restoring
depth of lets::depth of lets
worry about saving::worry about saving
saving or restoring::saving or restoring
purposes the depth::purposes the depth
windows are fives::windows are fives
efforts in saving::efforts in saving
restoring the windows::restoring the windows
windows otherwise call::windows otherwise call
procedure is speeded::procedure is speeded
developed by dec::developed by dec
dec or digital::dec or digital
coorporation in nineteen::coorporation in nineteen
successor of pdp::successor of pdp
eleven a mini::eleven a mini
successful mini computer::successful mini computer
eleven was sixteen::eleven was sixteen
sixteen bit machine::sixteen bit machine
two bit machine::two bit machine
discontinued um dec::discontinued um dec
started with architecture::started with architecture
architecture called alpha::architecture called alpha
predominant pc manufacturer::predominant pc manufacturer
manufacturer system manufacturer::manufacturer system manufacturer
history un vax::history un vax
concept of virtual::concept of virtual
discuss this topic::discuss this topic
topic in detail::topic in detail
sixteen general purpose::sixteen general purpose
registers okay unlike::registers okay unlike
two in mips::two in mips
mips or sparc::mips or sparc
sparc or power::sparc or power
register also stack::register also stack
condition codes similar::condition codes similar
similar to power::similar to power
orthogonality that means::orthogonality that means
operands is independent::operands is independent
support all addressing::support all addressing
specific addressing mode::specific addressing mode
mode all right::mode all right
instructions whole lot::instructions whole lot
lot of addressing::lot of addressing
lots of instructions::lots of instructions
lots of addressing::lots of addressing
combinations are valid::combinations are valid
hard to remember::hard to remember
mentioned the size::mentioned the size
lot one byte::lot one byte
easy the opcode::easy the opcode
specifies many things::specifies many things
typically a byte::typically a byte
operations which operation::operations which operation
operands two operands::operands two operands
operands six operands::operands six operands
operands different modes::operands different modes
number of operands::number of operands
working on integers::working on integers
integers reals double::integers reals double
reals double precison::reals double precison
double precison bytes::double precison bytes
information is packed::information is packed
data types varying::data types varying
deal with character::deal with character
represent a character::represent a character
character or string::character or string
string of decimal::string of decimal
digits one digit::digits one digit
four bits theer::four bits theer
theer are lots::theer are lots
constants eight bit::constants eight bit
constants sixteen bit::constants sixteen bit
sixteen bit constants::sixteen bit constants
bit constants thirty::bit constants thirty
mode that means::mode that means
means register carries::means register carries
carries the operand::carries the operand
find the term::find the term
modes so deferred::modes so deferred
kind of indirection::kind of indirection
indirection that means::indirection that means
address and make::address and make
operand so register::operand so register
register mode means::register mode means
means that register::means that register
operand register deferred::operand register deferred
register deferred means::register deferred means
deferred means register::deferred means register
carries the address::carries the address
memory access cycle::memory access cycle
cycle so displacement::cycle so displacement
displacement with respect::displacement with respect
respect to registers::respect to registers
relative and register::relative and register
two different modes::two different modes
two bit displacement::two bit displacement
version that means::version that means
address so indexing::address so indexing
indexing with scaling::indexing with scaling
scaling that means::scaling that means
two four depending::two four depending
depending upon operand::depending upon operand
operand size autoincrement::operand size autoincrement
size autoincrement autodecrement::size autoincrement autodecrement
autodecrement with deferred::autodecrement with deferred
variety of data::variety of data
data transfer variety::data transfer variety
variety of operations::variety of operations
things like operations::things like operations
work on polynomials::work on polynomials
directly or operations::directly or operations
insertion in queue::insertion in queue
counting the destination::counting the destination
bit long integer::bit long integer
long integer integer::long integer integer
integer here means::integer here means
bit they call::bit they call
variety of addressing::variety of addressing
thing naturally don::thing naturally don
don t make::don t make
operation the datatype::operation the datatype
datatype and number::datatype and number
number of addresses::number of addresses
byte two specifies::byte two specifies
specifies the mode::specifies the mode
addresses and register::addresses and register
bits specified mode::bits specified mode
base addressing mode::base addressing mode
means the constant::means the constant
two byte carry::two byte carry
carry the constant::carry the constant
reason why instruction::reason why instruction
instruction size varies::instruction size varies
size varies depending::size varies depending
depending upon modes::depending upon modes
modes and number::modes and number
operands the instruction::operands the instruction
modes were registers::modes were registers
instruction would occupy::instruction would occupy
occupy less number::occupy less number
two additional bytes::two additional bytes
constant immediate mode::constant immediate mode
carry this constant::carry this constant
vary in size::vary in size
adding two decimal::adding two decimal
two decimal numbers::two decimal numbers
number is represented::number is represented
string of digits::string of digits
digits packed digits::digits packed digits
packed digits means::packed digits means
pack a digit::pack a digit
destination each requires::destination each requires
two two operand::two two operand
two operand specification::two operand specification
case the length::case the length
confined to thirty::confined to thirty
bits or sixty::bits or sixty
strings of digits::strings of digits
digits and single::digits and single
instruction could add::instruction could add
finally lets talk::finally lets talk
talk of intel::talk of intel
bit sixteen bit::bit sixteen bit
sixteen bit thirty::sixteen bit thirty
starting with sixeen::starting with sixeen
sixeen bit processor::sixeen bit processor
bit processor eighty::bit processor eighty
processor eighty eighty::processor eighty eighty
introduced in seventy::introduced in seventy
amount of compatibility::amount of compatibility
announced in seventy::announced in seventy
essentially sixteen bit::essentially sixteen bit
sixteen bit architecture::sixteen bit architecture
companion floating point::companion floating point
floating point processor::floating point processor
point processor coprocessor::point processor coprocessor
coprocessor was added::coprocessor was added
added in nineteen::added in nineteen
eighty two eighty::eighty two eighty
introduced which increase::introduced which increase
increase the address::increase the address
space to twenty::space to twenty
twenty four bits::twenty four bits
sixty four kilo::sixty four kilo
four kilo bytes::four kilo bytes
increased the space::increased the space
twenty four byte::twenty four byte
four byte twenty::four byte twenty
sixteen mega bytes::sixteen mega bytes
instructions are added::instructions are added
added with eighty::added with eighty
newer addressing modes::newer addressing modes
modes were defined::modes were defined
paging in terms::paging in terms
terms of virtual::terms of virtual
memory was introduced::memory was introduced
eighty forties eighty::eighty forties eighty
pentium pentium pro::pentium pentium pro
pentium pro pentium::pentium pro pentium
adding more instructions::adding more instructions
compatibility is maintained::compatibility is maintained
added for higher::added for higher
higher performance mmx::higher performance mmx
operations on arrays::operations on arrays
core instruction set::core instruction set
set has remained::set has remained
remained so lets::remained so lets
read some interesting::read some interesting
illustrates the impact::illustrates the impact
handcuffs of compatibility::handcuffs of compatibility
compatibility the architecture::compatibility the architecture
sort of constrained::sort of constrained
adding new features::adding new features
difficult to explain::difficult to explain
explain and impossible::explain and impossible
impossible to love::impossible to love
difficult to make::difficult to make
lacks in style::lacks in style
style is made::style is made
size like vax::size like vax
two address machine::two address machine
sources also doubles::sources also doubles
type of architecture::type of architecture
architecture all right::architecture all right
right you remember::right you remember
remember i talked::remember i talked
memory so vax::memory so vax
complex addressing modes::complex addressing modes
modes almost similar::modes almost similar
mode or scaled::mode or scaled
bit or thirty::bit or thirty
bit and index::bit and index
access in series::access in series
series of bytes::series of bytes
bytes or series::bytes or series
series of words::series of words
words now difficulty::words now difficulty
combination of instruction::combination of instruction
instruction in addressing::instruction in addressing
extremes of mips::extremes of mips
lots of exceptions::lots of exceptions
difficult to remember::difficult to remember
remember so lots::remember so lots
lots of special::lots of special
hard to learn::hard to learn
instruction on condition::instruction on condition
complex and irregular::complex and irregular
frequently used instructions::frequently used instructions
difficult to build::difficult to build
build and compilers::build and compilers
compilers have learned::compilers have learned
learned to avoid::learned to avoid
avoid the portions::avoid the portions
portions of architecture::portions of architecture
compiler also focus::compiler also focus
glimpse of register::glimpse of register
registers of eighty::registers of eighty
eax and ebx::eax and ebx
ebx ecx edx::ebx ecx edx
stands for extension::stands for extension
extension extended extended::extension extended extended
extended a register::extended a register
architectures with registers::architectures with registers
stands for high::stands for high
high l stands::high l stands
stands for low::stands for low
thirty bit registers::thirty bit registers
eax ebx ecx::eax ebx ecx
means take data::means take data
work with quarters::work with quarters
ebp esp edi::ebp esp edi
stands for extended::stands for extended
base pointer stack::base pointer stack
referred to operations::referred to operations
work on string::work on string
string and destination::string and destination
indexing individual element::indexing individual element
sixteen bit segment::sixteen bit segment
bit segment registers::bit segment registers
stands for code::stands for code
code segment stack::code segment stack
segment stack segment::segment stack segment
stack segment data::stack segment data
segment data segment::segment data segment
data so segmentation::data so segmentation
brought into earlier::brought into earlier
architecture to address::architecture to address
address larger memory::address larger memory
sixteen bit address::sixteen bit address
bit address register::bit address register
sixteen bit register::sixteen bit register
register is limited::register is limited
limited to sixty::limited to sixty
four k bytes::four k bytes
access larger memory::access larger memory
register you set::register you set
sixty four register::sixty four register
register sorry sixty::register sorry sixty
addres another area::addres another area
move your base::move your base
address um sixty::address um sixty
twenty bit twenty::twenty bit twenty
four bit addressing::four bit addressing
addressing you imagine::addressing you imagine
imagine that segment::imagine that segment
register is shifted::register is shifted
sixteen bit value::sixteen bit value
add another address::add another address
full fledged twenty::full fledged twenty
four bit address::four bit address
flags and program::flags and program
mention another peculiar::mention another peculiar
concept of prefix::concept of prefix
prefix that means::prefix that means
put a byte::put a byte
code an instruction::code an instruction
modifies the meaning::modifies the meaning
upto three prefixes::upto three prefixes
instruction the kind::instruction the kind
kind of modifications::kind of modifications
modifications these prefixes::modifications these prefixes
default data size::default data size
unlike vax case::unlike vax case
size was carried::size was carried
carried as part::carried as part
size is set::size is set
prefixes can override::prefixes can override
default segment register::default segment register
implementing some special::implementing some special
instruction like semaphore::instruction like semaphore
bus and bus::bus and bus
locked um prefixes::locked um prefixes
instruction certain number::instruction certain number
default address size::default address size
modify effective instruction::modify effective instruction
impression of infact::impression of infact
infact a large::infact a large
conclude by summarizing::conclude by summarizing
two important features::two important features
beginning with power::beginning with power
set of branch::set of branch
instructions um sparc::instructions um sparc
register windows vax::register windows vax
modes and strength::modes and strength
modes are orthogonal::modes are orthogonal
orthogonal to opcodes::orthogonal to opcodes
eighty six intel::eighty six intel
discussion on performance::discussion on performance
evaluation of processors::evaluation of processors
definitions may change::definitions may change
follow the definition::follow the definition
individual users perspective::individual users perspective
machine which matters::machine which matters
community of architects::community of architects
architects and users::architects and users
users could share::users could share
share same ideas::share same ideas
interlink three aspects::interlink three aspects
aspects the number::aspects the number
require to execute::require to execute
program the number::program the number
executing the program::executing the program
number of seconds::number of seconds
terms of clocks::terms of clocks
slightly higher level::slightly higher level
done in terms::done in terms
abstract less abstract::abstract less abstract
define which link::define which link
relationship between instructions::relationship between instructions
instructions and cycles::instructions and cycles
expressed as cycles::expressed as cycles
cycles per instructions::cycles per instructions
instructions okay number::instructions okay number
talk of individual::talk of individual
talk of collection::talk of collection
collection of instructions::collection of instructions
talking of entire::talking of entire
matter is average::matter is average
cpi or average::cpi or average
program now remember::program now remember
program to program::program to program
ipc or instructions::ipc or instructions
instructions per cycle::instructions per cycle
talk of instructions::talk of instructions
talking of basic::talking of basic
two are reciprocal::two are reciprocal
conversely clock frequency::conversely clock frequency
finally the relationship::finally the relationship
takes okay seconds::takes okay seconds
seconds per instruction::seconds per instruction
seconds are required::seconds are required
talking of instruction::talking of instruction
capture the entire::capture the entire
long a program::long a program
program may execute::program may execute
instructions are done::instructions are done
done so instructions::done so instructions
unit you talk::unit you talk
talk of million::talk of million
instructions per unit::instructions per unit
unit or mips::unit or mips
instructions get executed::instructions get executed
executed right reciprocal::executed right reciprocal
number of micro::number of micro
spending per instruction::spending per instruction
talk of mips::talk of mips
talked of peak::talked of peak
instructions so peak::instructions so peak
performance is determined::performance is determined
determined by execution::determined by execution
programmer or individual::programmer or individual
people have talked::people have talked
variables truly represent::variables truly represent
possibilities are number::possibilities are number
cycles to execute::cycles to execute
instruction average number::instruction average number
important the execution::important the execution
talking of number::talking of number
instructions in program::instructions in program
statistically a program::statistically a program
bytes or kilo::bytes or kilo
bytes it occupies::bytes it occupies
talking of dynamic::talking of dynamic
instructions that number::instructions that number
execute certain number::execute certain number
indicators or performance::indicators or performance
looked at last::looked at last
today so suppose::today so suppose
architecture or isa::architecture or isa
isa lets call::isa lets call
ways of implementing::ways of implementing
suppose a implementation::suppose a implementation
ten nano seconds::ten nano seconds
twenty nano seconds::twenty nano seconds
cpi the rate::cpi the rate
instructions that executed::instructions that executed
executed or number::executed or number
instruction on average::instruction on average
two in case::two in case
program which machine::program which machine
implementation is faster::implementation is faster
apply the formula::apply the formula
instructions executed multiplied::instructions executed multiplied
quantities remain equal::quantities remain equal
remain equal number::remain equal number
things could vary::things could vary
vary clock rate::vary clock rate
varying um mips::varying um mips
number the rate::number the rate
done will vary::done will vary
instruction the number::instruction the number
find relative performance::find relative performance
essentially you product::essentially you product
figures okay ten::figures okay ten
instructions where twenty::instructions where twenty
twenty four nano::twenty four nano
four nano seconds::four nano seconds
spent per instruction::spent per instruction
instructions would vary::instructions would vary
shoes of compiler::shoes of compiler
two alternative sequences::two alternative sequences
sequences of code::sequences of code
code to translate::code to translate
level language computation::level language computation
statement in high::statement in high
two alternative ways::two alternative ways
make a choice::make a choice
architecture are first::architecture are first
first three classes::first three classes
classes of instructions::classes of instructions
differ in terms::differ in terms
terms of cycles::terms of cycles
cycles the number::cycles the number
cases okay class::cases okay class
class a instructions::class a instructions
cycles and class::cycles and class
designer is debating::designer is debating
two code sequences::two code sequences
sequences first sequence::sequences first sequence
instructions of type::instructions of type
instruction of type::instruction of type
translate same computation::translate same computation
evaluate this choice::evaluate this choice
sequence the sequence::sequence the sequence
sequence will require::sequence will require
require a total::require a total
faster all right::faster all right
instructions first sequence::instructions first sequence
sequence is shorter::sequence is shorter
information you realize::information you realize
two fast instruction::two fast instruction
quantify the difference::quantify the difference
sequence two faster::sequence two faster
ten all right::ten all right
basically all right::basically all right
counted the number::counted the number
divide by number::divide by number
instructions which means::instructions which means
two so cpi::two so cpi
kind of similarity::kind of similarity
frequency is ten::frequency is ten
ten hundred mega::ten hundred mega
instructions um similar::instructions um similar
compiler one produces::compiler one produces
entire program situation::entire program situation
situation is similar::situation is similar
program so compiler::program so compiler
million of type::million of type
compiler produces ten::compiler produces ten
produces ten million::produces ten million
producing more instruction::producing more instruction
add these add::add these add
add the cycles::add the cycles
cycles are running::cycles are running
running is hundred::running is hundred
hertz so total::hertz so total
total of cycles::total of cycles
total ten million::total ten million
ten million cycles::ten million cycles
cycle takes point::cycle takes point
point one nano::point one nano
seconds all right::seconds all right
nano sorry ten::nano sorry ten
nano seconds multiplied::nano seconds multiplied
ten miliion cycles::ten miliion cycles
ten just check::ten just check
check my calculations::check my calculations
mips okay seventy::mips okay seventy
seventy million instructions::seventy million instructions
basically fifteen million::basically fifteen million
total time spent::total time spent
point five times::point five times
pose to point::pose to point
point one seconds::point one seconds
instructions being done::instructions being done
done is twelve::done is twelve
answers are seventy::answers are seventy
mips in first::mips in first
case and eighty::case and eighty
giving you faster::giving you faster
mips more mips::mips more mips
total time spend::total time spend
two is producing::two is producing
producing a poor::producing a poor
lower in first::lower in first
mips is higher::mips is higher
clock fifty mega::clock fifty mega
seventy five mega::seventy five mega
case the cpi::case the cpi
apparently whats happening::apparently whats happening
longer clock cycle::longer clock cycle
find the composite::find the composite
ratio of execution::ratio of execution
two and clock::two and clock
factors two point::factors two point
two by seventy::two by seventy
longer as compared::longer as compared
thirty one percent::thirty one percent
percent more thirty::percent more thirty
takes now question::takes now question
clock rate keeping::clock rate keeping
keeping that cpi::keeping that cpi
factor as unknown::factor as unknown
unknown and put::unknown and put
rate you require::rate you require
change the design::change the design
change the compiler::change the compiler
examine the combined::examine the combined
faced the question::faced the question
out the performance::out the performance
long system works::long system works
set of programs::set of programs
kind of average::kind of average
average okay depending::average okay depending
area of application::area of application
compilations editings run::compilations editings run
run some scientific::run some scientific
application so depending::application so depending
typical work load::typical work load
benchmarks okay benchmarks::benchmarks okay benchmarks
testing the performance::testing the performance
bear in mind::bear in mind
mind that benchmark::mind that benchmark
set of benchmarks::set of benchmarks
set of users::set of users
users all right::users all right
user runs commercial::user runs commercial
runs commercial applications::runs commercial applications
applications and benchmarks::applications and benchmarks
type if user::type if user
application then benchmark::application then benchmark
benchmark should reflect::benchmark should reflect
reflect that kind::reflect that kind
give a false::give a false
improvement of false::improvement of false
sense of related::sense of related
set of features::set of features
misrepresent the level::misrepresent the level
small simple benchmarks::small simple benchmarks
usefulness would vary::usefulness would vary
defines these benchmarks::defines these benchmarks
defined by users::defined by users
agreed upon small::agreed upon small
benchmarks are easy::benchmarks are easy
nice for discussing::nice for discussing
discussing the performance::discussing the performance
performance by lets::performance by lets
lets say designers::lets say designers
designers and architects::designers and architects
benchmark is performing::benchmark is performing
cases of small::cases of small
benchmarks and cases::benchmarks and cases
cases where computer::cases where computer
vendors would generate::vendors would generate
highly optimized code::highly optimized code
sense of high::sense of high
consortium was developed::consortium was developed
developed in middle::developed in middle
middle of nineties::middle of nineties
stands for system::stands for system
system performance evaluation::system performance evaluation
performance evaluation cooperative::performance evaluation cooperative
number of industries::number of industries
hands to standardize::hands to standardize
standardize this process::standardize this process
process of defining::process of defining
defining benchmarks declaring::defining benchmarks declaring
benchmarks declaring performance::benchmarks declaring performance
declaring performance summarizing::declaring performance summarizing
summarizing and tabulating::summarizing and tabulating
tabulating the performance::tabulating the performance
performance and bringing::performance and bringing
bringing a common::bringing a common
write small artificial::write small artificial
artificial or synthetic::artificial or synthetic
programs which users::programs which users
standard implementations define::standard implementations define
define some test::define some test
spent on small::spent on small
make a machine::make a machine
machine work faster::machine work faster
collection of benchmarks::collection of benchmarks
number of programs::number of programs
harder to pick::harder to pick
out the critical::out the critical
programs and make::programs and make
abuse but chances::abuse but chances
benchmarks are valuable::benchmarks are valuable
indicators of performance::indicators of performance
performance of hardware::performance of hardware
hardware plus software::hardware plus software
software the total::software the total
machine a hardware::machine a hardware
compiler which generates::compiler which generates
generates a code::generates a code
defined in standard::defined in standard
standard high level::standard high level
compiler is important::compiler is important
machine but compiler::machine but compiler
out a set::out a set
set of benchmak::set of benchmak
machine all right::machine all right
comparison of benchmark::comparison of benchmark
two different compilers::two different compilers
version of first::version of first
first one improved::first one improved
number where higher::number where higher
higher number means::higher number means
number means higher::number means higher
means higher performance::means higher performance
obtained by running::obtained by running
running the program::running the program
higher the number::higher the number
pair of bars::pair of bars
bars each pair::bars each pair
takes to compile::takes to compile
compile a program::compile a program
compiler was compiled::compiler was compiled
rating you don::rating you don
circuit optimization program::circuit optimization program
optimization program spice::optimization program spice
orange and dark::orange and dark
loops and give::loops and give
give a dramatic::give a dramatic
dramatic performance improvement::dramatic performance improvement
programs get designed::programs get designed
designed a set::designed a set
involved in integer::involved in integer
computation so spec::computation so spec
int and spec::int and spec
user who work::user who work
work with floating::work with floating
floating point heavy::floating point heavy
point heavy numerical::point heavy numerical
heavy numerical computation::heavy numerical computation
set of typical::set of typical
work in symbolic::work in symbolic
non numeric computation::non numeric computation
computation the set::computation the set
things like compiler::things like compiler
compiler simulator lisp::compiler simulator lisp
simulator lisp interpreter::simulator lisp interpreter
benchmarks and names::benchmarks and names
artificial intelligence program::artificial intelligence program
intelligence program plays::intelligence program plays
plays the game::plays the game
simulator so simulates::simulator so simulates
simulates a processor::simulates a processor
gcc is gnu::gcc is gnu
gnu c compiler::gnu c compiler
program for compression::program for compression
compression and decompression::compression and decompression
decompression of files::decompression of files
lisp interpreter ijpeg::lisp interpreter ijpeg
interpreter ijpeg ijpeg::interpreter ijpeg ijpeg
ijpeg is graphics::ijpeg is graphics
graphics compression decompresion::graphics compression decompresion
compression decompresion perl::compression decompresion perl
written in language::written in language
perl it manipulates::perl it manipulates
strings and prime::strings and prime
prime numbers vortex::prime numbers vortex
database program tomcatv::database program tomcatv
mesh generation program::mesh generation program
shallow water model::shallow water model
mixture of integer::mixture of integer
integer and floating::integer and floating
benchmarks from quantum::benchmarks from quantum
quantum physics astrophysics::quantum physics astrophysics
equations solver partial::equations solver partial
solver partial differential::solver partial differential
partial differential equations::partial differential equations
cube solves problems::cube solves problems
problems regarding temperature::problems regarding temperature
temperature wind velocity::temperature wind velocity
velocity and pollutant::velocity and pollutant
change the machines::change the machines
amount of memory::amount of memory
prevalent in ninety::prevalent in ninety
programs different set::programs different set
programs to evaluate::programs to evaluate
evaluate in benchmark::evaluate in benchmark
content ready machines::content ready machines
meaningful to work::meaningful to work
variety of questions::variety of questions
two different versions::two different versions
question whether doubling::question whether doubling
doubling the clock::doubling the clock
clock rate doubles::clock rate doubles
doubles the performance::doubles the performance
program of spec::program of spec
spec int set::spec int set
set over pentium::set over pentium
pentium and pentium::pentium and pentium
refers to pentium::refers to pentium
pentium this refers::pentium this refers
hertz one fifty::hertz one fifty
doubled from hundred::doubled from hundred
factor what happened::factor what happened
account the memory::account the memory
cycles for memory::cycles for memory
spent if memory::spent if memory
memory is slow::memory is slow
doubling the processor::doubling the processor
doubled the memory::doubled the memory
memory io perpherals::memory io perpherals
benchmarks are run::benchmarks are run
run on physical::run on physical
program from end::program from end
end to end::end to end
end from input::end from input
diagram the question::diagram the question
machine with slower::machine with slower
performance again simple::performance again simple
two machines pentium::two machines pentium
points the benchmarks::points the benchmarks
means for floating::means for floating
floating point performance::floating point performance
notice that pentium::notice that pentium
out performing pentium::out performing pentium
instructions pentium pro::instructions pentium pro
concerned about speeding::concerned about speeding
speeding up execution::speeding up execution
execution of programs::execution of programs
means by improving::means by improving
improving the architecture::improving the architecture
architecture improving instruction::architecture improving instruction
improving instruction set::improving instruction set
instruction set improving::instruction set improving
improving the hardware::improving the hardware
hardware implementation improving::hardware implementation improving
implementation improving compiler::implementation improving compiler
mind very simple::mind very simple
simple but important::simple but important
law called amdahls::law called amdahls
first lets define::first lets define
reduced new execution::reduced new execution
speedup so simple::speedup so simple
ratio of performance::ratio of performance
performance of load::performance of load
speedup only part::speedup only part
big rectangle represents::big rectangle represents
represents the entire::represents the entire
spend by entire::spend by entire
attention was focussed::attention was focussed
designed your architecture::designed your architecture
architecture of compiler::architecture of compiler
mind which effects::mind which effects
remaining part remains::remaining part remains
part remains unchanged::part remains unchanged
out the fraction::out the fraction
enhanced so fraction::enhanced so fraction
fraction subscript enhanced::fraction subscript enhanced
task is speeded::task is speeded
factor called speedup::factor called speedup
speedup subscript enhanced::speedup subscript enhanced
taking three fourths::taking three fourths
program or seventy::program or seventy
seventy five percent::seventy five percent
program and speeding::program and speeding
minus this fraction::minus this fraction
fraction remains unchanged::fraction remains unchanged
enhanced is reduced::enhanced is reduced
two five remains::two five remains
unchanged and point::unchanged and point
speeded up part::speeded up part
mind the part::mind the part
big this fraction::big this fraction
suppose your attention::suppose your attention
affected is divided::affected is divided
runs in hundred::runs in hundred
multiplication instruction responsible::multiplication instruction responsible
responsible for eighty::responsible for eighty
multiplying and remaining::multiplying and remaining
remaining twenty percent::remaining twenty percent
adding subtracting loading::adding subtracting loading
subtracting loading data::subtracting loading data
memory taking decision::memory taking decision
taking decision branching::taking decision branching
multiply or multiplication::multiply or multiplication
multiplication dominant program::multiplication dominant program
improve the speed::improve the speed
speed of multiplication::speed of multiplication
run four times::run four times
four times faster::four times faster
speedup factor required::speedup factor required
required for multiplication::required for multiplication
multiplication alone pardon::multiplication alone pardon
four times improvement::four times improvement
make it sixteen::make it sixteen
principle which underlines::principle which underlines
good enough fraction::good enough fraction
mentioned earlier fifty::mentioned earlier fifty
earlier fifty percent::earlier fifty percent
machine and enhance::machine and enhance
enhance its floating::enhance its floating
floating point capability::floating point capability
capability okay suppose::capability okay suppose
suppose floating point::suppose floating point
floating point instructions::floating point instructions
instructions are speeded::instructions are speeded
floating point enhancement::floating point enhancement
enhancement is ten::enhancement is ten
seconds is spent::seconds is spent
spent executing floating::spent executing floating
executing floating point::executing floating point
half the instructions::half the instructions
instructions are floating::instructions are floating
make them run::make them run
run five times::run five times
seconds are remaining::seconds are remaining
remaining unchanged remaining::remaining unchanged remaining
remaining five seconds::remaining five seconds
seconds are speeded::seconds are speeded
speedup is ten::speedup is ten
benchmark to show::benchmark to show
floating point unit::floating point unit
point unit described::point unit described
show a speedup::show a speedup
runs for hundred::runs for hundred
floating point hardware::floating point hardware
program in order::program in order
order to yield::order to yield
yield the desired::yield the desired
instructions fifty percent::instructions fifty percent
spent in floating::spent in floating
suppose you wanted::suppose you wanted
wanted to project::wanted to project
project your floating::project your floating
floating point improvement::floating point improvement
improvement what kind::improvement what kind
kind of benchmark::kind of benchmark
choose a benchmark::choose a benchmark
runs three times::runs three times
floating point computation::floating point computation
eighty three percent::eighty three percent
improvement which takes::improvement which takes
place with technology::place with technology
assume a processor::assume a processor
processor currently requires::processor currently requires
requires ten seconds::requires ten seconds
seconds to run::seconds to run
performance is improved::performance is improved
improved by fifty::improved by fifty
percent every year::percent every year
mega hertz today::mega hertz today
times x mega::times x mega
factor performance improves::factor performance improves
point five raised::point five raised
years would reduce::years would reduce
spot what assumtions::spot what assumtions
made what simplifying::made what simplifying
memory is memory::memory is memory
effectively assumed memory::effectively assumed memory
memory also improves::memory also improves
indicator which people::indicator which people
past is mflops::past is mflops
mflops or mega::mflops or mega
point operations people::point operations people
talked of mflops::talked of mflops
mflops which stand::mflops which stand
million floating point::million floating point
metric again similar::metric again similar
similar to mips::similar to mips
focus is floating::focus is floating
relevant for people::relevant for people
predominantly floating point::predominantly floating point
point so advantage::point so advantage
easy to understand::easy to understand
measure and project::measure and project
out the problem::out the problem
good benchmarks standardized::good benchmarks standardized
benchmarks standardized benchmarks::benchmarks standardized benchmarks
industries for evaluation::industries for evaluation
evaluation and performance::evaluation and performance
performance such aspect::performance such aspect
measures like mips::measures like mips
mips and mega::mips and mega
flops look easy::flops look easy
easy and simple::easy and simple
mind amdahls law::mind amdahls law
law while talking::law while talking
talking of speedup::talking of speedup
mesures of performance::mesures of performance
focussed on execution::focussed on execution
influenced by compiler::influenced by compiler
compiler technology instruction::compiler technology instruction
technology instruction set::technology instruction set
set architecture micro::set architecture micro
architecture micro architecture::architecture micro architecture
architecture which means::architecture which means
means how instructions::means how instructions
implemented in hardware::implemented in hardware
basic circuit technology::basic circuit technology
technology or fabrication::technology or fabrication
capture a large::capture a large
fraction the common::fraction the common
computer architecture prof.anshul::computer architecture prof.anshul
architecture prof.anshul kumar::architecture prof.anshul kumar
prof.anshul kumar department::prof.anshul kumar department
alu design today::alu design today
topic our discussion::topic our discussion
set of architecture::set of architecture
discussing about micro::discussing about micro
realized in hardware::realized in hardware
done in hardware::done in hardware
hardware will talk::hardware will talk
talk of arithmetic::talk of arithmetic
operators um logical::operators um logical
processor called alu::processor called alu
alu arithmetic logic::alu arithmetic logic
unit is built::unit is built
purpose of instruction::purpose of instruction
instruction and whats::instruction and whats
whats the functionality::whats the functionality
functionality they achieved::functionality they achieved
performance is defined::performance is defined
performance and instruction::performance and instruction
develop and understanding::develop and understanding
understanding micro architecture::understanding micro architecture
architecture and relationship::architecture and relationship
relationship between instruction::relationship between instruction
architecture and micro::architecture and micro
architecture and idea::architecture and idea
idea of performance::idea of performance
case for mips::case for mips
two bit operands::two bit operands
operands and produces::operands and produces
produces a result::produces a result
result under control::result under control
instruction so depending::instruction so depending
execute this unit::execute this unit
unit will perform::unit will perform
perform some operation::perform some operation
perform addition subtraction::perform addition subtraction
addition subtraction multiplication::addition subtraction multiplication
subtraction multiplication division::subtraction multiplication division
lectures the focus::lectures the focus
sequence of sub::sequence of sub
today starting today::today starting today
talk about binary::talk about binary
arithmetic and design::arithmetic and design
design of alu::design of alu
include um idea::include um idea
idea of overflow::idea of overflow
exceeds the limit::exceeds the limit
talk of multiplier::talk of multiplier
multiplier and divider::multiplier and divider
operation then simple::operation then simple
simple add subtract::simple add subtract
techniques to speed::techniques to speed
operation of addition::operation of addition
addition or subtraction::addition or subtraction
non integer operations::non integer operations
integer operations floating::integer operations floating
numbers are represented::numbers are represented
kind of operations::kind of operations
operations are performed::operations are performed
finally the hardware::finally the hardware
out the operations::out the operations
starting with binary::starting with binary
subtraction are done::subtraction are done
circuit is built::circuit is built
built will talk::built will talk
comparison little bit::comparison little bit
bit logical operation::bit logical operation
familiar with binary::familiar with binary
inside um computer::inside um computer
represented in bits::represented in bits
bit um represents::bit um represents
represents two states::represents two states
meaning a assign::meaning a assign
assign two bit::assign two bit
bit a bit::bit a bit
bit could represent::bit could represent
represent different things::represent different things
string of bit::string of bit
represent an integer::represent an integer
represent a fractional::represent a fractional
represent a piece::represent a piece
piece of text::piece of text
symbols in encoded::symbols in encoded
set of bits::set of bits
bits um dep::bits um dep
difference ways depending::difference ways depending
begin with lets::begin with lets
talk of integers::talk of integers
represented as string::represented as string
string of bits::string of bits
essentially from mathematical::essentially from mathematical
talking of binary::talking of binary
two or base::two or base
bits can represent::bits can represent
represent a number::represent a number
represent two raised::represent two raised
range of numbers::range of numbers
numbers or non::numbers or non
non zero numbers::non zero numbers
ticks you talk::ticks you talk
ranging from minus::ranging from minus
correspondent between integer::correspondent between integer
mathematics and integer::mathematics and integer
question of overflow::question of overflow
worry about sign::worry about sign
positive and negative::positive and negative
negative numbers number::negative numbers number
number of choices::number of choices
understand the implication::understand the implication
pattern representing numbers::pattern representing numbers
sign and remaining::sign and remaining
remaining n minus::remaining n minus
typically could represent::typically could represent
represent as sign::represent as sign
typically zero corresponds::typically zero corresponds
corresponds to negative::corresponds to negative
pattern would corresponds::pattern would corresponds
magnitude can range::magnitude can range
two bits gap::two bits gap
gap for magnitude::gap for magnitude
number ones compliment::number ones compliment
number is positive::number is positive
positive you represent::positive you represent
handling a positive::handling a positive
bits okay turn::bits okay turn
side and minus::side and minus
column here shows::column here shows
whats called twos::whats called twos
twos compliment representation::twos compliment representation
positive number coincide::positive number coincide
representation of positive::representation of positive
positive number identical::positive number identical
cases but negative::cases but negative
four okay minus::four okay minus
minus three minus::minus three minus
two and minus::two and minus
essentially this representation::essentially this representation
representation um remove::representation um remove
remove this ambiguity::remove this ambiguity
ambiguity each number::ambiguity each number
range is unbalanced::range is unbalanced
right um range::right um range
unbalanced in sense::unbalanced in sense
bits the range::bits the range
range in negative::range in negative
important positive point::important positive point
positive point positive::positive point positive
point positive feature::point positive feature
easies the arithmetic::easies the arithmetic
operations and makes::operations and makes
makes the hardware::makes the hardware
hardware so work::hardware so work
compliment is defined::compliment is defined
number like minus::number like minus
obtained by inverting::obtained by inverting
shows the range::shows the range
values in decimal::values in decimal
largest positive number::largest positive number
raised for thirty::raised for thirty
thirty one minus::thirty one minus
smallest negative number::smallest negative number
end and add::end and add
magnitude is increasing::magnitude is increasing
largest negative number::largest negative number
minus two raised::minus two raised
numbers are max::numbers are max
max int maximum::max int maximum
int maximum positive::int maximum positive
maximum positive integer::maximum positive integer
positive integer value::positive integer value
value and min::value and min
negative integer value::negative integer value
subtraction with binary::subtraction with binary
presume some familiarity::presume some familiarity
method you add::method you add
paper and pencil::paper and pencil
learnt in school::learnt in school
represent only thing::represent only thing
right so lets::right so lets
positive two adding::positive two adding
adding five subtracting::adding five subtracting
bits are generated::bits are generated
generated from left::generated from left
right to left::right to left
left because carry::left because carry
carry a borrow::carry a borrow
borrow will flow::borrow will flow
number is larger::number is larger
word can accompanied::word can accompanied
bring in negative::bring in negative
adding or subtracting::adding or subtracting
subtracting positive numbers::subtracting positive numbers
representing in twos::representing in twos
twos compliment form::twos compliment form
subtracting you continue::subtracting you continue
integers okay don::integers okay don
sign twos compliment::sign twos compliment
twos compliment number::twos compliment number
compliment number perform::compliment number perform
number perform addition::number perform addition
subtract operation ignoring::subtract operation ignoring
ignoring the sign::ignoring the sign
two we expect::two we expect
basically we adding::basically we adding
subtraction of minus::subtraction of minus
two should give::two should give
give a negative::give a negative
representation these number::representation these number
representation of minus::representation of minus
compliment and add::compliment and add
invert all bits::invert all bits
bits and add::bits and add
negative or positive::negative or positive
thing is happening::thing is happening
case let lets::case let lets
step by step::step by step
borrow you gate::borrow you gate
ultimately a borrow::ultimately a borrow
represent you find::represent you find
examples just listed::examples just listed
listed the point::listed the point
mentioned earlier question::mentioned earlier question
ignore the fact::ignore the fact
fact that design::fact that design
design the answer::design the answer
minus x lets::minus x lets
talking about minus::talking about minus
number a negative::number a negative
number with magnitude::number with magnitude
large positive number::large positive number
positive number minus::positive number minus
number minus positive::number minus positive
minus positive number::minus positive number
unsigned number systems::unsigned number systems
right um representation::right um representation
talking four bits::talking four bits
complimenting these bits::complimenting these bits
subtract binary number::subtract binary number
basically each bit::basically each bit
shows the relationship::shows the relationship
doing we adding::doing we adding
adding and subtracting::adding and subtracting
subtracting twos compliment::subtracting twos compliment
minus negative number::minus negative number
number are bringing::number are bringing
additional two raised::additional two raised
suppose in fact::suppose in fact
carrying an extra::carrying an extra
extra two raised::extra two raised
series of number::series of number
number some positive::number some positive
positive some negative::positive some negative
out as super::out as super
super flows carry::super flows carry
relating negative numbers::relating negative numbers
doing subtraction suppose::doing subtraction suppose
basically this subtraction::basically this subtraction
instruction programmable add::instruction programmable add
require one operand::require one operand
integer one small::integer one small
inside a processor::inside a processor
common for add::common for add
instruction or add::instruction or add
add immediate instruction::add immediate instruction
addition is added::addition is added
capable of adding::capable of adding
two bits number::two bits number
integers sixteen bit::integers sixteen bit
sixteen bit integers::sixteen bit integers
rerepresented in thirty::rerepresented in thirty
bit is repeated::bit is repeated
repeated to fill::repeated to fill
additional sixteen point::additional sixteen point
sixteen point addition::sixteen point addition
addition sixteen places::addition sixteen places
four bit negative::four bit negative
bit negative number::bit negative number
extension the sign::extension the sign
bit is extended::bit is extended
extended to fill::extended to fill
additional bit spaces::additional bit spaces
talked about load::talked about load
bytes from memory::bytes from memory
memory and fills::memory and fills
instruction load byte::instruction load byte
load half word::load half word
word so load::word so load
load byte pixel::load byte pixel
pixel one byte::pixel one byte
byte from memory::byte from memory
memory and places::memory and places
remaining three byte::remaining three byte
position or remaining::position or remaining
byte and load::byte and load
load byte unsigned::load byte unsigned
byte unsigned lbu::byte unsigned lbu
lbu so lbu::lbu so lbu
lbu will fill::lbu will fill
twenty four bites::twenty four bites
bit bit number::bit bit number
thirty one bit::thirty one bit
signed bit replicates::signed bit replicates
replicates and filled::replicates and filled
design a performing::design a performing
addition the method::addition the method
method is simples::method is simples
basically we move::basically we move
move from right::move from right
left and perform::left and perform
perform addition bit::perform addition bit
bit that means::bit that means
means one bit::means one bit
bit position adding::bit position adding
adding two bits::adding two bits
coming from right::coming from right
thing for thirty::thing for thirty
represents ith bit::represents ith bit
bit of sum::bit of sum
sum ci represents::sum ci represents
represents the carry::represents the carry
position from right::position from right
module which performs::module which performs
performs one bit::performs one bit
circuit two add::circuit two add
add two thirty::add two thirty
array of thirty::array of thirty
two such units::two such units
carries the carry::carries the carry
connect one unit::connect one unit
unit and form::unit and form
form a change::form a change
change okay initial::change okay initial
carry for bit::carry for bit
zooming that bit::zooming that bit
bit and bit::bit and bit
twos compliment notation::twos compliment notation
notation i don::notation i don
signed number unsigned::signed number unsigned
number unsigned numbers::number unsigned numbers
design for unsigned::design for unsigned
bit adder module::bit adder module
truth table defines::truth table defines
table defines row::table defines row
row by row::row by row
combination of inputs::combination of inputs
two column label::two column label
sum and carry::sum and carry
two one make::two one make
make it equivalent::make it equivalent
equivalent of binary::equivalent of binary
two which means::two which means
means the number::means the number
number three sum::number three sum
describes the relationship::describes the relationship
relationship between input::relationship between input
captured by boolean::captured by boolean
equations a boolean::equations a boolean
equation then defined::equation then defined
defined whats circuit::defined whats circuit
circuit you require::circuit you require
require to implement::require to implement
sum is concerned::sum is concerned
familiar with crado::familiar with crado
systematically by drawing::systematically by drawing
drawing a cardo::drawing a cardo
map and finding::map and finding
finding a minimal::finding a minimal
sum of product::sum of product
boolean expressions representing::boolean expressions representing
expressions representing output::expressions representing output
gates you connect::gates you connect
number of possibilities::number of possibilities
possibilities is large::possibilities is large
ways of writing::ways of writing
writing the boolean::writing the boolean
representing um depending::representing um depending
representation in terms::representation in terms
two input gates::two input gates
stages of logic::stages of logic
two two stage::two two stage
two stage logic::two stage logic
gates a signal::gates a signal
speed different cost::speed different cost
digital hardware design::digital hardware design
easy to comprehend::easy to comprehend
easy to rivet::easy to rivet
rivet and comprehend::rivet and comprehend
build an adder::build an adder
build a subtractor::build a subtractor
two positive integers::two positive integers
inverted before making::inverted before making
care of doing::care of doing
prime or adding::prime or adding
adding ones compliment::adding ones compliment
put these modules::put these modules
form a thirteen::form a thirteen
thirteen bits subtractor::thirteen bits subtractor
care by making::care by making
making the initial::making the initial
bit is inverted::bit is inverted
carry is initial::carry is initial
carry is made::carry is made
made one right::made one right
circuits for adder::circuits for adder
adder and subtractor::adder and subtractor
multiplex what multiplex::multiplex what multiplex
case that choices::case that choices
choices between taking::choices between taking
multiplexer to choose::multiplexer to choose
subtraction depending depending::subtraction depending depending
control the multiplexer::control the multiplexer
multiplexer is choosing::multiplexer is choosing
choosing this right::choosing this right
right it requires::right it requires
requires it control::requires it control
calling binv standing::calling binv standing
multiplexer will select::multiplexer will select
select this input::select this input
subtraction so putting::subtraction so putting
showing that details::showing that details
boxes is repeated::boxes is repeated
calling at adder::calling at adder
adder or subtractor::adder or subtractor
binv this control::binv this control
bits of number::bits of number
two arithmetic operations::two arithmetic operations
looked at multiplied::looked at multiplied
multiplied and divide::multiplied and divide
move towards logical::move towards logical
mips and instruction::mips and instruction
perform logical operation::perform logical operation
logical operation bit::logical operation bit
bit on thirty::bit on thirty
two bit vectors::two bit vectors
perform and operation::perform and operation
bit and operation::bit and operation
similarly or operation::similarly or operation
numbers will give::numbers will give
circuit is doing::circuit is doing
doing for bit::doing for bit
out of thirty::out of thirty
two or gates::two or gates
addition subtraction anding::addition subtraction anding
subtraction anding oring::subtraction anding oring
put various thing::put various thing
add in multiplexer::add in multiplexer
two and depending::two and depending
adder come subtractor::adder come subtractor
purpose of subtraction::purpose of subtraction
inverter and multiplexer::inverter and multiplexer
module one bit::module one bit
unit of alu::unit of alu
capable of performing::capable of performing
two possible values::two possible values
two among addition::two among addition
doing and operation::doing and operation
subtraction it doesn::subtraction it doesn
cascade of thirty::cascade of thirty
alu zero alu::alu zero alu
initial carry position::initial carry position
position and binv::position and binv
control also form::control also form
form another control::form another control
fact strictly speaking::fact strictly speaking
instruction but additional::instruction but additional
additional four instruction::additional four instruction
instruction which corresponds::instruction which corresponds
add negative constant::add negative constant
effective low subtract::effective low subtract
effectively that means::effectively that means
means seven instructions::means seven instructions
ori and add::ori and add
utilize this part::utilize this part
part of circuit::part of circuit
two different types::two different types
types of add::types of add
add instruction add::add instruction add
add and add::add and add
add and aadd::add and aadd
aadd and addu::aadd and addu
two separate instructions::two separate instructions
separate instructions add::separate instructions add
add and addu::add and addu
reduction of overflow::reduction of overflow
two very large::two very large
adding two large::adding two large
two large negative::two large negative
large negative numbers::large negative numbers
exist the result::exist the result
subtracting a large::subtracting a large
large negative number::large negative number
number or vice::number or vice
subtract large positive::subtract large positive
limits were positive::limits were positive
negative numbers differ::negative numbers differ
differ or signed::differ or signed
signed and unsigned::signed and unsigned
unsigned numbers differ::unsigned numbers differ
working with signed::working with signed
maximum negative number::maximum negative number
number is minus::number is minus
maximum positive number::maximum positive number
working with unsigned::working with unsigned
number the range::number the range
detection of overflow::detection of overflow
numbers are signed::numbers are signed
signed or unsigned::signed or unsigned
process of addition::process of addition
addition subtraction remains::addition subtraction remains
subtraction remains unchanged::subtraction remains unchanged
circuit will cater::circuit will cater
versions of coarse::versions of coarse
addu and subtractu::addu and subtractu
version of add::version of add
add immediate addiu::add immediate addiu
sufficient to implement::sufficient to implement
things the register::things the register
file the program::file the program
instruction from memory::instruction from memory
interpreting it storing::interpreting it storing
storing the result::storing the result
unit which performs::unit which performs
performs the operation::performs the operation
looked up twos::looked up twos
representation for signed::representation for signed
brings unique representation::brings unique representation
simplifies our mechanism::simplifies our mechanism
mechanism for performing::mechanism for performing
operation so circuit::operation so circuit
circuit is simpler::circuit is simpler
notice that addition::notice that addition
hardware had lot::hardware had lot
lot of commonality::lot of commonality
share the hardware::share the hardware
included that design::included that design
simply by putting::simply by putting
putting those gates::putting those gates
gates and multiplex::gates and multiplex
extend the circuit::extend the circuit
instruction like slt::instruction like slt
slt or instruction::slt or instruction
instruction like beq::instruction like beq
beq so beq::beq so beq
beq makes comparison::beq makes comparison
argument our alu::argument our alu
operation which means::operation which means
means the comparison::means the comparison
generating a result::generating a result
discussed on alu::discussed on alu
subtraction and logical::subtraction and logical
extend this design::extend this design
design to include::design to include
comparison um equality::comparison um equality
condition which defers::condition which defers
defers from signed::defers from signed
numbers and unsigned::numbers and unsigned
lectures on design::lectures on design
discussed binary arithmetic::discussed binary arithmetic
arithmetic how numbers::arithmetic how numbers
represented in signed::represented in signed
started with alu::started with alu
compare signed numbers::compare signed numbers
extend the alu::extend the alu
include these operations::include these operations
issue of overflow::issue of overflow
detection for signed::detection for signed
numbers in addition::numbers in addition
operation and subtraction::operation and subtraction
difference between instructions::difference between instructions
suffix which stands::suffix which stands
stands for unsigned::stands for unsigned
unsigned counter parts::unsigned counter parts
manipulates the pattern::manipulates the pattern
inputs each thirty::inputs each thirty
bits and produces::bits and produces
produces the result::produces the result
desired which operation::desired which operation
done is desired::done is desired
number of signals::number of signals
change of identical::change of identical
design is shown::design is shown
inverter and small::inverter and small
care of addition::care of addition
gate or gate::gate or gate
bits to decide::bits to decide
require another signal::require another signal
signal one bit::signal one bit
bit to decide::bit to decide
put these blocks::put these blocks
change the carry::change the carry
two bit alu::two bit alu
address the question::address the question
compare two integers::compare two integers
integers one possibility::integers one possibility
check the result::check the result
perform the subtraction::perform the subtraction
position to design::position to design
design a circuit::design a circuit
directly perform comparison::directly perform comparison
circuit which produces::circuit which produces
directly without resorting::directly without resorting
resorting to subtraction::resorting to subtraction
ways of performing::ways of performing
performing a direct::performing a direct
comparison for greater::comparison for greater
greater than first::greater than first
giving a result::giving a result
result of bits::result of bits
condition is equivalent::condition is equivalent
equivalent to comparison::equivalent to comparison
comparison of bits::comparison of bits
bit is concerned::bit is concerned
possibility other possibility::possibility other possibility
define um result::define um result
two bits interval::two bits interval
lsb to msb::lsb to msb
msb least significant::msb least significant
note that correction::note that correction
bit and updating::bit and updating
updating the result::updating the result
results of bits::results of bits
generating the result::generating the result
minus one thirty::minus one thirty
starting from lsb::starting from lsb
lsb and propagating::lsb and propagating
propagating the result::propagating the result
result to msb::result to msb
reason is clear::reason is clear
bit which met::bit which met
simple logic yields::simple logic yields
yields a result::yields a result
side to lsb::side to lsb
equal and comparison::equal and comparison
additional bit inclusive::additional bit inclusive
inclusive is equal::inclusive is equal
side to msb::side to msb
comparing these bits::comparing these bits
product or product::product or product
sense of logical::sense of logical
thirty one means::thirty one means
anding or conjuncting::anding or conjuncting
individual bit comparisons::individual bit comparisons
sign bit suppose::sign bit suppose
result of subtraction::result of subtraction
strictly positive excluding::strictly positive excluding
extend alu design::extend alu design
include slt instructions::include slt instructions
slt instructions slt::slt instructions slt
instructions slt instructions::instructions slt instructions
compare first operand::compare first operand
operand and set::operand and set
set the result::set the result
subtraction for alu::subtraction for alu
output the msb::output the msb
explore but calling::explore but calling
set all bits::set all bits
extend this multiplexer::extend this multiplexer
multiplexer to include::multiplexer to include
putting these putting::putting these putting
two alu thirty::two alu thirty
input is connected::input is connected
irrespective of comparison::irrespective of comparison
comparison irrespective result::comparison irrespective result
set these thirty::set these thirty
thirty one bits::thirty one bits
result is negative::result is negative
bits are set::bits are set
execute slt instruction::execute slt instruction
slt instruction alu::slt instruction alu
instructive to perform::instructive to perform
select the fourth::select the fourth
performing slt binv::performing slt binv
thing does subtraction::thing does subtraction
control to select::control to select
select the last::select the last
put some thing::put some thing
care of beq::care of beq
output of subtraction::output of subtraction
asked the adder::asked the adder
subtractor to perform::subtractor to perform
gates will check::gates will check
input which means::input which means
means the result::means the result
comparison a result::comparison a result
alu is capable::alu is capable
capable of handling::capable of handling
handling this entire::handling this entire
slightly move involved::slightly move involved
move involved issue::move involved issue
out is exceeding::out is exceeding
exceeding the range::exceeding the range
doing unsigned addition::doing unsigned addition
restarting this point::restarting this point
taking a small::taking a small
small word size::small word size
values can range::values can range
shows the sum::shows the sum
value will wrapper::value will wrapper
shown in red::shown in red
extreme left end::extreme left end
equal to thirty::equal to thirty
overflow in unsigned::overflow in unsigned
corresponds to first::corresponds to first
corresponds to correct::corresponds to correct
corresponds to overflow::corresponds to overflow
overflow the result::overflow the result
subtraction unsigned subtraction::subtraction unsigned subtraction
two unsigned numbers::two unsigned numbers
numbers two positive::numbers two positive
two positive values::two positive values
unsigned or positive::unsigned or positive
zooming that subtraction::zooming that subtraction
out by adding::out by adding
adding twos compliment::adding twos compliment
compliment ones compliment::compliment ones compliment
result of subtracting::result of subtracting
result of adding::result of adding
put there twos::put there twos
numbers these results::numbers these results
positive or unsigned::positive or unsigned
red region corresponds::red region corresponds
subtracting is larger::subtracting is larger
flip this part::flip this part
red angle flips::red angle flips
larger and larger::larger and larger
lets cn equal::lets cn equal
out of range::out of range
slightly more involved::slightly more involved
range from minus::range from minus
two large positive::two large positive
large positive numbers::large positive numbers
move you increase::move you increase
side beyond minus::side beyond minus
overflow condition lets::overflow condition lets
top red region::top red region
sum is negative::sum is negative
adding two positive::adding two positive
two positive numbers::two positive numbers
positive numbers positive::positive numbers positive
positive or non::positive or non
non negative numbers::non negative numbers
adding to negative::adding to negative
last two carries::last two carries
msb it means::msb it means
means that number::means that number
number is turning::number is turning
positive number side::positive number side
number is exceeding::number is exceeding
turning the sign::turning the sign
sign to negative::sign to negative
carry is turning::carry is turning
indication of normal::indication of normal
normal negative numbers::normal negative numbers
subtraction um signed::subtraction um signed
two is negative::two is negative
twos compliment value::twos compliment value
pattern of numbers::pattern of numbers
numbers will remain::numbers will remain
minus one minus::minus one minus
minus two minus::minus two minus
two three minus::two three minus
four will remain::four will remain
range is minus::range is minus
color has changed::color has changed
minus four value::minus four value
four from minus::four from minus
correct subtracting minus::correct subtracting minus
turn to red::turn to red
region which continuous::region which continuous
range this region::range this region
giving me wrong::giving me wrong
flips the rows::flips the rows
case of signed::case of signed
sign the indication::sign the indication
result is wrong::result is wrong
thing is wrong::thing is wrong
change of sign::change of sign
final bit position::final bit position
understanding of overflow::understanding of overflow
overflow in signed::overflow in signed
signed case unsigned::signed case unsigned
case unsigned case::case unsigned case
looked at sign::looked at sign
overflow this result::overflow this result
overflow just reversive::overflow just reversive
simply goes reverse::simply goes reverse
case of unsigned::case of unsigned
counter part add::counter part add
part add subtract::part add subtract
add immediate mult::add immediate mult
mult multiply divide::mult multiply divide
discussed multiply divide::discussed multiply divide
divide in detail::divide in detail
understanding the meaning::understanding the meaning
word okay slt::word okay slt
counter part slti::counter part slti
suffix means unsigned::suffix means unsigned
differs from instruction::differs from instruction
instruction is concerned::instruction is concerned
overflow is detected::overflow is detected
suffix overflow detection::suffix overflow detection
green column overflow::green column overflow
column overflow detection::column overflow detection
detection is run::detection is run
happen then overflow::happen then overflow
overflow the processor::overflow the processor
halting the program::halting the program
printing an error::printing an error
add or addu::add or addu
addu or subtract::addu or subtract
instructions the result::instructions the result
result would differ::result would differ
notice that divide::notice that divide
divide actually falls::divide actually falls
category that means::category that means
difference of overflow::difference of overflow
subtract is concerned::subtract is concerned
compliment of representation::compliment of representation
matter of interpretation::matter of interpretation
numbers and perform::numbers and perform
interpret these numbers::interpret these numbers
numbers as unsigned::numbers as unsigned
correct unsigned sum::correct unsigned sum
correct signed sum::correct signed sum
discarding the result::discarding the result
result and taking::result and taking
taking some special::taking some special
overflow results identical::overflow results identical
case with multiplication::case with multiplication
multu the result::multu the result
multu unsigned multiplication::multu unsigned multiplication
signed comparison unsigned::signed comparison unsigned
comparison unsigned comparison::comparison unsigned comparison
comparison the result::comparison the result
doing sign interpretation::doing sign interpretation
find that first::find that first
comparison differs depending::comparison differs depending
interpreting this number::interpreting this number
number is signed::number is signed
load byte load::load byte load
byte load half::byte load half
load half words::load half words
words are concerned::words are concerned
loading a full::loading a full
part gets filled::part gets filled
instruction is lbu::instruction is lbu
lbu or lhu::lbu or lhu
lhu and signed::lhu and signed
extension is done::extension is done
treat the byte::treat the byte
sign will fill::sign will fill
circle where signed::circle where signed
constant is sixteen::constant is sixteen
bits but operation::bits but operation
performed over thirty::performed over thirty
question of filling::question of filling
remaining sixteen bits::remaining sixteen bits
bits in add::bits in add
add immediate unsigned::add immediate unsigned
cases sign extension::cases sign extension
slightly a misnomer::slightly a misnomer
number and extension::number and extension
constant is sign::constant is sign
cases in slti::cases in slti
slti um sign::slti um sign
interpretation of unsigned::interpretation of unsigned
instructions whether overflow::instructions whether overflow
meaning in signed::meaning in signed
case and unsigned::case and unsigned
done to covert::done to covert
covert small numbers::covert small numbers
numbers into large::numbers into large
kind of operation::kind of operation
manipulate bit pattern::manipulate bit pattern
pattern or extracting::pattern or extracting
extracting bit fields::extracting bit fields
long bit pattern::long bit pattern
operation is shift::operation is shift
shift left logical::shift left logical
shows um shifting::shows um shifting
thirty one shifting::thirty one shifting
shifting at left::shifting at left
means all bits::means all bits
bits up push::bits up push
push to left::push to left
out and lost::out and lost
part is shift::part is shift
shift right logical::shift right logical
shifting the pattern::shifting the pattern
zeros to write::zeros to write
write so zeros::write so zeros
zeros get filled::zeros get filled
interpreting these numbers::interpreting these numbers
numbers as signed::numbers as signed
sign could change::sign could change
bit left shift::bit left shift
shift is multiplied::shift is multiplied
two three bit::two three bit
two so shifting::two so shifting
numbers are unsigned::numbers are unsigned
interpreted as division::interpreted as division
division by power::division by power
two then problem::two then problem
problem will occur::problem will occur
changing the sign::changing the sign
shift right arithmetic::shift right arithmetic
right um shift::right um shift
feeling in zeros::feeling in zeros
vacated or filled::vacated or filled
filled by sign::filled by sign
picture shows shifting::picture shows shifting
replicated to fill::replicated to fill
dividing a signed::dividing a signed
number a sign::number a sign
quotient the remainder::quotient the remainder
case of overflow::case of overflow
number was large::number was large
left and remain::left and remain
suppose eight twenty::suppose eight twenty
shift left multiplying::shift left multiplying
keeping one keeping::keeping one keeping
keeping a thirty::keeping a thirty
allowing other bits::allowing other bits
bits to enter::bits to enter
reducing the number::reducing the number
artificial putting zeros::artificial putting zeros
instructions in mips::instructions in mips
instruction called sll::instruction called sll
sll shift left::sll shift left
logical it takes::logical it takes
takes two registers::takes two registers
two registers destination::two registers destination
registers destination register::registers destination register
register and source::register and source
field you remember::field you remember
talked of add::talked of add
labeled as shift::labeled as shift
field can carry::field can carry
carry a number::carry a number
amount of shift::amount of shift
instructions sll sllv::instructions sll sllv
sllv which stands::sllv which stands
stands for shift::stands for shift
left logical variable::left logical variable
providing a constant::providing a constant
srl for shift::srl for shift
logical and srlv::logical and srlv
right logical variable::right logical variable
variable and shift::variable and shift
kind of hardware::kind of hardware
hardware is required::hardware is required
showing a circuit::showing a circuit
multiplexer and wire::multiplexer and wire
first two positions::first two positions
select this set::select this set
inputs and passed::inputs and passed
out and zeros::out and zeros
zeros are filling::zeros are filling
simply a multiplexer::simply a multiplexer
input can select::input can select
shift and shift::shift and shift
put um multiple::put um multiple
precisely the first::precisely the first
first one selects::first one selects
shift two shift::shift two shift
shift this selects::shift this selects
suitably choosing combination::suitably choosing combination
choosing combination suppose::choosing combination suppose
bit nine position::bit nine position
combination will give::combination will give
give you shifting::give you shifting
showing the details::showing the details
essentially a multiplexer::essentially a multiplexer
multiplexer with probate::multiplexer with probate
mult this box::mult this box
box is required::box is required
required to shift::required to shift
suitably can shift::suitably can shift
thirty one positions::thirty one positions
detection in case::detection in case
case of sign::case of sign
sign addition subtraction::sign addition subtraction
subtraction or unsigned::subtraction or unsigned
unsigned addition subtraction::unsigned addition subtraction
discussed shift operations::discussed shift operations
terms of overflow::terms of overflow
detection or action::detection or action
action of overflow::action of overflow
circuit to support::circuit to support
support the instructions::support the instructions
g.sathis kumar computer::g.sathis kumar computer
kumar computer architecture::kumar computer architecture
discussed the design::discussed the design
alu with respect::alu with respect
respect to addition::respect to addition
addition subtraction comparison::addition subtraction comparison
comparison and logical::comparison and logical
discussed other operation::discussed other operation
operation like shift::operation like shift
slightly more complex::slightly more complex
operation namely multiplier::operation namely multiplier
point talk talk::point talk talk
simple design shift::simple design shift
shift and add::shift and add
build the circuit::build the circuit
ways which defer::ways which defer
interms of cost::interms of cost
cost of hardware::cost of hardware
simplicity of hardware::simplicity of hardware
talk about signed::talk about signed
directly um signed::directly um signed
required for signed::required for signed
begin with multiplication::begin with multiplication
pencil okay simple::pencil okay simple
simple multiplication method::simple multiplication method
translated to binary::translated to binary
binary in fact::binary in fact
vertex and simplify::vertex and simplify
multiplied with left::multiplied with left
left most bit::left most bit
multiplication is multiplication::multiplication is multiplication
straight forward multiplication::straight forward multiplication
represents a partial::represents a partial
means the place::means the place
propagately towards left::propagately towards left
add first partial::add first partial
first partial product::first partial product
add second partial::add second partial
carrying out addition::carrying out addition
addition of initial::addition of initial
initial zero value::initial zero value
positions and adding::positions and adding
means um performing::means um performing
essentially and operation::essentially and operation
equivalent to multiplication::equivalent to multiplication
multiplied by bits::multiplied by bits
circuit for doing::circuit for doing
bits um situation::bits um situation
gate actually represents::gate actually represents
represents an array::represents an array
showing a single::showing a single
single and gate::single and gate
taking a vector::taking a vector
vector of bits::vector of bits
effectively an array::effectively an array
four and gates::four and gates
add this point::add this point
require um shifters::require um shifters
shifter is doing::shifter is doing
right these shifter::right these shifter
select between shift::select between shift
matter of wiring::matter of wiring
effectively shift takes::effectively shift takes
shift takes place::shift takes place
stage is addition::stage is addition
addition so starting::addition so starting
wiring it means::wiring it means
bits are connected::bits are connected
connected at propagate::connected at propagate
input of adder::input of adder
directly or shift::directly or shift
position or shift::position or shift
capturing this idea::capturing this idea
idea of summing::idea of summing
summing the partial::summing the partial
requires n adder::requires n adder
require n adder::require n adder
adding one partial::adding one partial
simplify the circuit::simplify the circuit
keeping a count::keeping a count
repeated n times::repeated n times
done this loop::done this loop
two separate assignments::two separate assignments
two in hardware::two in hardware
adding a multiplied::adding a multiplied
doubled or shifted::doubled or shifted
hardware is concerned::hardware is concerned
updating i doubling::updating i doubling
care of taking::care of taking
simplify the hardware::simplify the hardware
bit but move::bit but move
move the bits::move the bits
detail is limited::detail is limited
care of performing::care of performing
performing this type::performing this type
events will happen::events will happen
concurrently with edge::concurrently with edge
two n bit::two n bit
shifted to left::shifted to left
adder of double::adder of double
double the size::double the size
position and last::position and last
essentially double digits::essentially double digits
digits to accumulate::digits to accumulate
double the length::double the length
end its reach::end its reach
require another register::require another register
experience right shift::experience right shift
iteration we shift::iteration we shift
work in conjunction::work in conjunction
conjunction with control::conjunction with control
firstly takes care::firstly takes care
count the process::count the process
thirty two times::thirty two times
showing these red::showing these red
working under control::working under control
circuit will pass::circuit will pass
essence of circuits::essence of circuits
step to step::step to step
step basically involves::step basically involves
involves these things::involves these things
addition conditionally left::addition conditionally left
conditionally left shift::conditionally left shift
explicitly its part::explicitly its part
changing on right::changing on right
changing on left::changing on left
arrange your information::arrange your information
value is positioned::value is positioned
denoting the high::denoting the high
high high end::high high end
shifting the part::shifting the part
partial product obtains::partial product obtains
position and achieve::position and achieve
register a doesn::register a doesn
doesn t shift::doesn t shift
added to left::added to left
introduce another step::introduce another step
right and rest::right and rest
result of summation::result of summation
summation and shifting::summation and shifting
single single step::single single step
clarity we assume::clarity we assume
assume that first::assume that first
shift is done::shift is done
pure um simple::pure um simple
simple right shift::simple right shift
reduced the size::reduced the size
size of adder::size of adder
addition and shift::addition and shift
bits keep truckling::bits keep truckling
product can added::product can added
entering the right::entering the right
register is filled::register is filled
filled with value::filled with value
possibility of combining::possibility of combining
two actually match::two actually match
two n bits::two n bits
right most bit::right most bit
put together performing::put together performing
shift and rest::shift and rest
single n bit::single n bit
mult multiplying instruction::mult multiplying instruction
takes two operand::takes two operand
two special register::two special register
thirty two general::thirty two general
two general purpose::two general purpose
output of multiplication::output of multiplication
specific registers high::specific registers high
high and low::high and low
instructions for multiplication::instructions for multiplication
multiplication which takes::multiplication which takes
takes three registers::takes three registers
two for operand::two for operand
expects um small::expects um small
move towards sign::move towards sign
sign in magnitude::sign in magnitude
separately that means::separately that means
two signed numbers::two signed numbers
numbers we find::numbers we find
find them magnitudes::find them magnitudes
product and determine::product and determine
determine the sign::determine the sign
sign so sign::sign so sign
numbers are opposite::numbers are opposite
sign is negative::sign is negative
sign is positive::sign is positive
propagate form twos::propagate form twos
form twos compliment::form twos compliment
directly multiply sign::directly multiply sign
multiply sign integers::multiply sign integers
twos compliment representations::twos compliment representations
compliment representations made::compliment representations made
sign and unsigned::sign and unsigned
addition subtraction process::addition subtraction process
process was oblivious::process was oblivious
device a method::device a method
directly multiply signed::directly multiply signed
multiply signed numbers::multiply signed numbers
common expressions representing::common expressions representing
representing the values::representing the values
values of positive::values of positive
number in terms::number in terms
find some thing::find some thing
thing which handles::thing which handles
numbers again representation::numbers again representation
representation is shown::representation is shown
kind of summation::kind of summation
bit n minus::bit n minus
bit is handled::bit is handled
done is put::done is put
put a negative::put a negative
number is non::number is non
number is negative::number is negative
negative the sign::negative the sign
out the last::out the last
term and put::term and put
sign it doesn::sign it doesn
minus it doesn::minus it doesn
positive in non::positive in non
non negative integer::non negative integer
bit of analyses::bit of analyses
basically minus magnitude::basically minus magnitude
prefix with minus::prefix with minus
find the magnitude::find the magnitude
magnitude by knowing::magnitude by knowing
representations so twos::representations so twos
compliment representation means::compliment representation means
equivalent um magnitude::equivalent um magnitude
value and subtracted::value and subtracted
definition of twos::definition of twos
minus two terms::minus two terms
summation and bring::summation and bring
corresponds to sign::corresponds to sign
times two raised::times two raised
difference will correspond::difference will correspond
thing is equivalent::thing is equivalent
rewritten um bringing::rewritten um bringing
minus one back::minus one back
write this multiplied::write this multiplied
expressed in twos::expressed in twos
expression which ignores::expression which ignores
direct signed multiplication::direct signed multiplication
basically a multiplied::basically a multiplied
first on negative::first on negative
term in positive::term in positive
terms are broken::terms are broken
two is written::two is written
effectively have put::effectively have put
put a factor::put a factor
verified by working::verified by working
minus two common::minus two common
combined the term::combined the term
factor two raised::factor two raised
minus n minus::minus n minus
similarly this term::similarly this term
term will combine::term will combine
involving bn minus::involving bn minus
minus bi weighted::minus bi weighted
introduced a dummy::introduced a dummy
dummy b minus::dummy b minus
term will remain::term will remain
unpaired to combine::unpaired to combine
introduced zero term::introduced zero term
reduce the last::reduce the last
write a multiplied::write a multiplied
require it requires::require it requires
requires partial products::requires partial products
minus a means::minus a means
means basically subtracting::means basically subtracting
subtracting a right::subtracting a right
algorithm so lets::algorithm so lets
lets compare unsigned::lets compare unsigned
compare unsigned multiplication::compare unsigned multiplication
unsigned multiplication signed::unsigned multiplication signed
multiplication signed multiplication::multiplication signed multiplication
perform no addition::perform no addition
addition of perform::addition of perform
done no addition::done no addition
addition no subtraction::addition no subtraction
doing bi minus::doing bi minus
require no addition::require no addition
small change introduce::small change introduce
thing you remember::thing you remember
shown as adder::shown as adder
bits and decides::bits and decides
instruct that circuit::instruct that circuit
circuit to perform::circuit to perform
addition or addition::addition or addition
mentioned as booths::mentioned as booths
multiplication its motivation::multiplication its motivation
doing some thing::doing some thing
scanning the bit::scanning the bit
bit from lsb::bit from lsb
run of zeros::run of zeros
write in number::write in number
algorithm was devised::algorithm was devised
devised by booth::devised by booth
attempt was made::attempt was made
made to minimize::made to minimize
minimize the number::minimize the number
number of addition::number of addition
involving in addition::involving in addition
step not involving::step not involving
involving the addition::involving the addition
perform one addition::perform one addition
mechanism to speed::mechanism to speed
speed up things::speed up things
manner and carry::manner and carry
carry out signed::carry out signed
out signed multiplication::out signed multiplication
finally lets lets::finally lets lets
range of values::range of values
multiplication would produced::multiplication would produced
talking of unsigned::talking of unsigned
numbers the result::numbers the result
result would vary::result would vary
largest unsigned value::largest unsigned value
largest um sum::largest um sum
expressed i illustrated::expressed i illustrated
first n minus::first n minus
registers to hold::registers to hold
hold the result::hold the result
largest most negative::largest most negative
two n minus::two n minus
multiply most negative::multiply most negative
first most positive::first most positive
largest positive value::largest positive value
largest negative value::largest negative value
half the value::half the value
bit fully oaky::bit fully oaky
mult and multu::mult and multu
multu two instructions::multu two instructions
lecture i ment::lecture i ment
group where overflow::group where overflow
difference in signed::difference in signed
multu will interpret::multu will interpret
operand as unsigned::operand as unsigned
mult will treat::mult will treat
integers and perform::integers and perform
multiplication get results::multiplication get results
hand the pseudo::hand the pseudo
instruction these instructions::instruction these instructions
write this instruction::write this instruction
bits the result::bits the result
move from high::move from high
move from low::move from low
put different register::put different register
register can move::register can move
gprs the high::gprs the high
part another gpr::part another gpr
instruction which works::instruction which works
multiply with overflow::multiply with overflow
results and ignoring::results and ignoring
ignoring the high::ignoring the high
higher n bits::higher n bits
paper pencil method::paper pencil method
understood from earlier::understood from earlier
earlier of school::earlier of school
multiply the multiplicand::multiply the multiplicand
digits by digits::digits by digits
translates to multiplying::translates to multiplying
multiplying the multiplicand::multiplying the multiplicand
multiplicand by bits::multiplicand by bits
adding these partial::adding these partial
sort of wrap::sort of wrap
adder performs addition::adder performs addition
gradually we made::gradually we made
made certain observation::made certain observation
improve the circuits::improve the circuits
circuits the first::circuits the first
reduce the requirement::reduce the requirement
requirement of addition::requirement of addition
holding the multiplicand::holding the multiplicand
reduced by sharing::reduced by sharing
basically um derived::basically um derived
representations for positive::representations for positive
algorithm was booths::algorithm was booths
discuss how binary::discuss how binary
division is carried::division is carried
circuit to carried::circuit to carried
out for processor::out for processor
discussing various arithmetic::discussing various arithmetic
operation and logical::operation and logical
last we discussed::last we discussed
carry out multiplication::carry out multiplication
designs of multipliers::designs of multipliers
multipliers will continue::multipliers will continue
talk of binary::talk of binary
division and design::division and design
design of divider::design of divider
multiplication and division::multiplication and division
illustrate division operation::illustrate division operation
taking two numbers::taking two numbers
derive the algorithms::derive the algorithms
ensure that algorithm::ensure that algorithm
correct and discuss::correct and discuss
discuss the circuits::discuss the circuits
talk of unsigned::talk of unsigned
multiplication we looked::multiplication we looked
work on paper::work on paper
process was captured::process was captured
captured by circuit::captured by circuit
set of refinements::set of refinements
circuit in algorithm::circuit in algorithm
essentially the multiplication::essentially the multiplication
operation was broken::operation was broken
shifting and adding::shifting and adding
absolute to add::absolute to add
talked about booths::talked about booths
discussed the range::discussed the range
types of multiplication::types of multiplication
multiplication then mips::multiplication then mips
mips which type::mips which type
type to produce::type to produce
produce signed result::produce signed result
result or unsigned::result or unsigned
single word output::single word output
two one word::two one word
integers the output::integers the output
output is exceeding::output is exceeding
exceeding one word::exceeding one word
division by taking::division by taking
taking two small::taking two small
small four bit::small four bit
stands for thirteen::stands for thirteen
naturally this division::naturally this division
set of shift::set of shift
shift and subtract::shift and subtract
multiplier this divider::multiplier this divider
four bit quotient::four bit quotient
four bit divider::four bit divider
bit as part::bit as part
dropping of zeros::dropping of zeros
finally we subtract::finally we subtract
subtraction is carried::subtraction is carried
result is subtraction::result is subtraction
subtraction not carried::subtraction not carried
mapping of normal::mapping of normal
normal decimal division::normal decimal division
require basically comparison::require basically comparison
subtract we compare::subtract we compare
step we shift::step we shift
shift the position::shift the position
divisor um multiplied::divisor um multiplied
multiplied with powers::multiplied with powers
shifted three bits::shifted three bits
record the results::record the results
attempt was subtract::attempt was subtract
value being subtracted::value being subtracted
initially is put::initially is put
repeat this comparison::repeat this comparison
comparison and subtraction::comparison and subtraction
positioned at propagate::positioned at propagate
minus one position::minus one position
shifted the divider::shifted the divider
left we comparing::left we comparing
hold we don::hold we don
quotient is recorded::quotient is recorded
simply then step::simply then step
basic unsigned division::basic unsigned division
unsigned division algorithm::unsigned division algorithm
doing is correct::doing is correct
modification and improvements::modification and improvements
transformations and implement::transformations and implement
form of circuit::form of circuit
doing actually computes::doing actually computes
invariant it maintains::invariant it maintains
invariant and first::invariant and first
reached a value::reached a value
put i equal::put i equal
unique this equality::unique this equality
equality a equal::equality a equal
two given values::two given values
positive non negative::positive non negative
ensuring the loop::ensuring the loop
quotient and remainder::quotient and remainder
remainder and remainder::remainder and remainder
inductively okay first::inductively okay first
start after initialization::start after initialization
initialization this holds::initialization this holds
initialization is making::initialization is making
making i equal::making i equal
put these values::put these values
initially we store::initially we store
right which ensured::right which ensured
put r equal::put r equal
meet this condition::meet this condition
order to ensure::order to ensure
two four bit::two four bit
four bits divisor::four bits divisor
four bit number::four bit number
number in general::number in general
means the left::means the left
left n bits::left n bits
taking i working::taking i working
left four bits::left four bits
general in inductive::general in inductive
mathematical induction assume::mathematical induction assume
iteration this holes::iteration this holes
iteration that means::iteration that means
checked action depend::checked action depend
assume this condition::assume this condition
holds this inequality::holds this inequality
carried out subtraction::carried out subtraction
minus i minus::minus i minus
means that atleast::means that atleast
atleast this equality::atleast this equality
equality also holds::equality also holds
condition of subtraction::condition of subtraction
subtraction is ensuring::subtraction is ensuring
inequality is ensured::inequality is ensured
part is ensured::part is ensured
noticing that invariant::noticing that invariant
subtracted this quantity::subtracted this quantity
subtract this quantity::subtract this quantity
iteration r lies::iteration r lies
invariant both components::invariant both components
components of invariant::components of invariant
assume that invariant::assume that invariant
holds before iteration::holds before iteration
false that means::false that means
setting a bit::setting a bit
condition of omitting::condition of omitting
lies in range::lies in range
case also invariant::case also invariant
suitable hardware implementation::suitable hardware implementation
algorithm which added::algorithm which added
case of multiplication::case of multiplication
directions of shift::directions of shift
position n minus::position n minus
making d shift::making d shift
comparison becomes comparison::comparison becomes comparison
subtraction becomes subtraction::subtraction becomes subtraction
setting different bits::setting different bits
shifting q left::shifting q left
two and adding::two and adding
shift um left::shift um left
left and set::left and set
set the last::set the last
last bit set::last bit set
basically same thing::basically same thing
move d right::move d right
draw a circuit::draw a circuit
circuit which carries::circuit which carries
out this operation::out this operation
addition has replaced::addition has replaced
replaced by subtractions::replaced by subtractions
space gets created::space gets created
subtractor is doing::subtractor is doing
doing compressed comparison::doing compressed comparison
basically we assuming::basically we assuming
indication that result::indication that result
result is positive::result is positive
modify the value::modify the value
captures the straight::captures the straight
straight forward algorithm::straight forward algorithm
carry similar kind::carry similar kind
kind of improvements::kind of improvements
subtractor is reduced::subtractor is reduced
reduced in size::reduced in size
left and graduality::left and graduality
graduality shifting right::graduality shifting right
bits are significant::bits are significant
change this situation::change this situation
situation and make::situation and make
make d stationary::make d stationary
effect by shifting::effect by shifting
keeping r stationary::keeping r stationary
stationary and shift::stationary and shift
interms of algorithm::interms of algorithm
minus one bit::minus one bit
position is maintained::position is maintained
left n positions::left n positions
two parts left::two parts left
right n bits::right n bits
left one bit::left one bit
obtain this position::obtain this position
right not writing::right not writing
bit shifted left::bit shifted left
compared and subtraction::compared and subtraction
shifting r left::shifting r left
simply shifts left::simply shifts left
size of register::size of register
position get vacated::position get vacated
stuffing the bits::stuffing the bits
utilize the part::utilize the part
vacated to accumulate::vacated to accumulate
accumulate the bits::accumulate the bits
straight forward change::straight forward change
omitted a register::omitted a register
doing r equal::doing r equal
effect of shifting::effect of shifting
sort of combine::sort of combine
leads to circuit::leads to circuit
shifting another register::shifting another register
controls the operations::controls the operations
introduce another form::introduce another form
form of division::form of division
introduced the shifting::introduced the shifting
non restoring approach::non restoring approach
subtract and alternative::subtract and alternative
carry out subtraction::carry out subtraction
subtraction in anticipation::subtraction in anticipation
made a mistake::made a mistake
restore of making::restore of making
making a correction::making a correction
make r equal::make r equal
make any correction::make any correction
part d equal::part d equal
change has occurred::change has occurred
introduced an unconditional::introduced an unconditional
two clock cycles::two clock cycles
out um addition::out um addition
steps the subtractor::steps the subtractor
motivation for doing::motivation for doing
postponed this restorations::postponed this restorations
restoring by adding::restoring by adding
subtract d min::subtract d min
doing any restoration::doing any restoration
iteration the initial::iteration the initial
initial unconditional subtraction::initial unconditional subtraction
replaced by addition::replaced by addition
equivalent to subtracting::equivalent to subtracting
subtracting sorry adding::subtracting sorry adding
wording an additional::wording an additional
step of restoring::step of restoring
effect by choosing::effect by choosing
choosing the initial::choosing the initial
initial unconditional step::initial unconditional step
pending restoration requirement::pending restoration requirement
subtracted where subtraction::subtracted where subtraction
negative r value::negative r value
negative r implies::negative r implies
case we start::case we start
showing a separate::showing a separate
recording a bit::recording a bit
completes the iteration::completes the iteration
eliminated two steps::eliminated two steps
care that restoration::care that restoration
postponing your restoration::postponing your restoration
iterations are left::iterations are left
adding a step::adding a step
make a final::make a final
doing initial addition::doing initial addition
make q equal::make q equal
two q minus::two q minus
start with initial::start with initial
subtraction and make::subtraction and make
notice is happening::notice is happening
recording of bit::recording of bit
achieved by doing::achieved by doing
require a correction::require a correction
correction is done::correction is done
examples and works::examples and works
brought the algorithm::brought the algorithm
iteration by adding::iteration by adding
bring r closer::bring r closer
initially um large::initially um large
subtract half subtract::subtract half subtract
dividend was negative::dividend was negative
adding a positive::adding a positive
negative by subtracting::negative by subtracting
subtract or add::subtract or add
opposite sign values::opposite sign values
final correction step::final correction step
step also makes::step also makes
makes a similar::makes a similar
check it compares::check it compares
relationship between signs::relationship between signs
signs of dividend::signs of dividend
dividend divisor quotient::dividend divisor quotient
remainder so lets::remainder so lets
dividend and divisor::dividend and divisor
two right columns::two right columns
right columns show::right columns show
signs of quotient::signs of quotient
quotient would follow::quotient would follow
follow similar logic::follow similar logic
multiplied two numbers::multiplied two numbers
positive into positive::positive into positive
negative into negative::negative into negative
dividing a positive::dividing a positive
quotient you divide::quotient you divide
divide a negative::divide a negative
number by negative::number by negative
number you gat::number you gat
gat a positive::gat a positive
logic as multiplication::logic as multiplication
signs are opposite::signs are opposite
opposite the quotient::opposite the quotient
quotient is negative::quotient is negative
quotient is positive::quotient is positive
remainder always takes::remainder always takes
dividend because remainder::dividend because remainder
out of dividend::out of dividend
reduce the dividend::reduce the dividend
ensure that remainder::ensure that remainder
prove that remainder::prove that remainder
written several algorithms::written several algorithms
kind of proof::kind of proof
quotient would depend::quotient would depend
sign of divisor::sign of divisor
divisor and dividend::divisor and dividend
done we started::done we started
four bit division::four bit division
basically compare shift::basically compare shift
shift and subtraction::shift and subtraction
carry out division::carry out division
develop basic algorithm::develop basic algorithm
algorithm we analyze::algorithm we analyze
derived the circuit::derived the circuit
improvements were made::improvements were made
made first improvement::made first improvement
subtractor we reduce::subtractor we reduce
improvisation and reduce::improvisation and reduce
ultimately you work::ultimately you work
concept of restoring::concept of restoring
initially you carry::initially you carry
carry out anticipatory::carry out anticipatory
out anticipatory subtraction::out anticipatory subtraction
blindly you subtract::blindly you subtract
postponed which simplify::postponed which simplify
simplify each iteration::simplify each iteration
restoration of final::restoration of final
modify this algorithm::modify this algorithm
talking of signed::talking of signed
doing addition subtraction::doing addition subtraction
subtraction with twos::subtraction with twos
long as representation::long as representation
representation is twos::representation is twos
two signed integers::two signed integers
integers and performed::integers and performed
carry out basic::carry out basic
out basic arithmetic::out basic arithmetic
basic arithmetic operations::basic arithmetic operations
manner without worrying::manner without worrying
worrying about performance::worrying about performance
sequence of lecture::sequence of lecture
discussed the basic::discussed the basic
operation and today::operation and today
talk of speeding::talk of speeding
speeding up addition::speeding up addition
out to floating::out to floating
govern the performance::govern the performance
compute the carry::compute the carry
carry save addition::carry save addition
carry and wait::carry and wait
simple adder circuit::simple adder circuit
addition using paper::addition using paper
two operands perform::two operands perform
circuit which adds::circuit which adds
adds two individual::adds two individual
two individual bits::two individual bits
adders are cascaded::adders are cascaded
cascaded or change::cascaded or change
thirty two units::thirty two units
unit is dependent::unit is dependent
two is depend::two is depend
dependents of carry::dependents of carry
account to complete::account to complete
complete the operation::complete the operation
aspect of carry::aspect of carry
edge one end::edge one end
end from lsb::end from lsb
inputs ith bit::inputs ith bit
raise to defined::raise to defined
simple combination circuit::simple combination circuit
realization is shown::realization is shown
form of expression::form of expression
simple a simpler::simple a simpler
define the performance::define the performance
suppose the input::suppose the input
gate has transistor::gate has transistor
transistor which switch::transistor which switch
gates are driving::gates are driving
driving some loader::driving some loader
loader some capacitance::loader some capacitance
dictates that delay::dictates that delay
delay we assume::delay we assume
talking of gates::talking of gates
row of peek::row of peek
peek of seconds::peek of seconds
tens of peek::tens of peek
delays of wired::delays of wired
signal change propagate::signal change propagate
propagate over wire::propagate over wire
significant and comparable::significant and comparable
gates are working::gates are working
assume that wired::assume that wired
delays are significant::delays are significant
account that delay::account that delay
delay which occurs::delay which occurs
number of gates::number of gates
fitting another gate::fitting another gate
gate that feeds::gate that feeds
feeds another gate::feeds another gate
delay gets accumulated::delay gets accumulated
delay would depend::delay would depend
larger the delays::larger the delays
ideal condition delay::ideal condition delay
gate is lets::gate is lets
change k gates::change k gates
factor d independent::factor d independent
inputs the gate::inputs the gate
gates this gate::gates this gate
gate is feeding::gate is feeding
means that delay::means that delay
delay is function::delay is function
function of fan::function of fan
slightly more delay::slightly more delay
two input gate::two input gate
four input gate::four input gate
varies it increases::varies it increases
slowly it doesn::slowly it doesn
doesn t increase::doesn t increase
increase but increases::increase but increases
number of inputs::number of inputs
inputs or outputs::inputs or outputs
making an approximation::making an approximation
gate is effected::gate is effected
effected by number::effected by number
speed up circuit::speed up circuit
circuit is effected::circuit is effected
input to output::input to output
path the path::path the path
level of logic::level of logic
express circuits boolean::express circuits boolean
circuits boolean circuits::circuits boolean circuits
two level sum::two level sum
sum of products::sum of products
alternatively do product::alternatively do product
product of sum::product of sum
parenthesis and deep::parenthesis and deep
ands and ors::ands and ors
form a product::form a product
depth of logic::depth of logic
imagine that delay::imagine that delay
level of anding::level of anding
ignoring again inverters::ignoring again inverters
inverters this compliments::inverters this compliments
smaller as compare::smaller as compare
circuit can compute::circuit can compute
compute this sum::compute this sum
restructure this gates::restructure this gates
delay is reduced::delay is reduced
improve your algorithm::improve your algorithm
doing same computation::doing same computation
delay is rippling::delay is rippling
avoid this ripple::avoid this ripple
write for examples::write for examples
four directly interms::four directly interms
lets go step::lets go step
two level expression::two level expression
left that parenthesis::left that parenthesis
two are anded::two are anded
increasing the level::increasing the level
low or number::low or number
form and substitute::form and substitute
four billion terms::four billion terms
assumption we made::assumption we made
gate is constant::gate is constant
number of fan::number of fan
thirty two inputs::thirty two inputs
thirty two input::thirty two input
input three input::input three input
input of gate::input of gate
things two level::things two level
assumption about delay::assumption about delay
delay of individual::delay of individual
gate will break::gate will break
atleast a primary::atleast a primary
two a inputs::two a inputs
two b inputs::two b inputs
lot of fan::lot of fan
number of term::number of term
playing in determination::playing in determination
determination of carry::determination of carry
bit position digest::bit position digest
generates the carry::generates the carry
carry and condition::carry and condition
coming from input::coming from input
condition when carry::condition when carry
carry gets generated::carry gets generated
carry is coming::carry is coming
propagate to output::propagate to output
generated by stage::generated by stage
earlier in terms::earlier in terms
line and substitute::line and substitute
term this term::term this term
term we substitute::term we substitute
thirty two stages::thirty two stages
reason this out::reason this out
generated at stage::generated at stage
generated the stage::generated the stage
generation at stage::generation at stage
two which propagates::two which propagates
propagates through stage::propagates through stage
carry which propagates::carry which propagates
derive these expression::derive these expression
expression by substitution::expression by substitution
substitution or reason::substitution or reason
directly um based::directly um based
understand the circuit::understand the circuit
block which computes::block which computes
computes all carry::computes all carry
computing the sums::computing the sums
delay this circuit::delay this circuit
first stage delay::first stage delay
gate single level::gate single level
shown for brevity::shown for brevity
write as sum::write as sum
sums are coming::sums are coming
built larger adders::built larger adders
represents this sum::represents this sum
collapsed three stages::collapsed three stages
suppressing internal retails::suppressing internal retails
build larger adders::build larger adders
inputs one side::inputs one side
suppose we connect::suppose we connect
ripple carry adder::ripple carry adder
four bit adders::four bit adders
eleven d units::eleven d units
allowed normal ripple::allowed normal ripple
normal ripple carry::normal ripple carry
carry to operate::carry to operate
operate for sixteen::operate for sixteen
saving and saving::saving and saving
saving will show::saving will show
increase the value::increase the value
number of stages::number of stages
rippling of carry::rippling of carry
extern this block::extern this block
stages or thirty::stages or thirty
increases the cost::increases the cost
gates become wider::gates become wider
delay also starts::delay also starts
letting the carry::letting the carry
equivalent to propagate::equivalent to propagate
propagate and generate::propagate and generate
signal at block::signal at block
level we generate::level we generate
generate block propagate::generate block propagate
small purple box::small purple box
carries get generated::carries get generated
carry gets propagated::carry gets propagated
blocks propagate generate::blocks propagate generate
propagate generate signals::propagate generate signals
signals or group::signals or group
group propagate generates::group propagate generates
propagate generates signals::propagate generates signals
call this group::call this group
generate or block::generate or block
recall that expression::recall that expression
block propagates carry::block propagates carry
generate condition generation::generate condition generation
condition generation condition::condition generation condition
means that generation::means that generation
generation takes place::generation takes place
stage two stage::stage two stage
stages and propagate::stages and propagate
four in terms::four in terms
terms of capital::terms of capital
generates a carry::generates a carry
loop ahead manner::loop ahead manner
stages gi propagating::stages gi propagating
twelve c sixteen::twelve c sixteen
basically same form::basically same form
term was exponential::term was exponential
case the growth::case the growth
growth is linear::growth is linear
two and substitute::two and substitute
substitute its value::substitute its value
term containing carry::term containing carry
substitution it grows::substitution it grows
sort of abbreviated::sort of abbreviated
term is essential::term is essential
things um slow::things um slow
added more stages::added more stages
reasonable and feasible::reasonable and feasible
lets move attention::lets move attention
attention to multiplication::attention to multiplication
number of multipliers::number of multipliers
number of adders::number of adders
adders to add::adders to add
add the partial::add the partial
adder so lets::adder so lets
number of orders::number of orders
perform addition store::perform addition store
redo the addition::redo the addition
interms of speed::interms of speed
multipliers for natural::multipliers for natural
approaches for multiplication::approaches for multiplication
adding four terms::adding four terms
add two terms::add two terms
separately two terms::separately two terms
add several term::add several term
formed a tree::formed a tree
clause of multipliers::clause of multipliers
multipliers we focus::multipliers we focus
focus our attention::focus our attention
adding different terms::adding different terms
question of addition::question of addition
addition or multiple::addition or multiple
showing a multiplier::showing a multiplier
adds four numbers::adds four numbers
multiplication these number::multiplication these number
number will happen::number will happen
four arbitrary values::four arbitrary values
adder which adds::adder which adds
adds two terms::adds two terms
adds fourth term::adds fourth term
term so suppose::term so suppose
suppose we put::suppose we put
put the usual::put the usual
usual ripple carry::usual ripple carry
count for propagation::count for propagation
signals to propagate::signals to propagate
propagation of carry::propagation of carry
equivalent that lets::equivalent that lets
right this adder::right this adder
postponed this carry::postponed this carry
left we make::left we make
leftward carry propagation::leftward carry propagation
last stage carry::last stage carry
require one extra::require one extra
fed us carries::fed us carries
symmetrical with respect::symmetrical with respect
calling us carry::calling us carry
circuit is concerned::circuit is concerned
two output adder::two output adder
reduces three inputs::reduces three inputs
inputs are interchangeable::inputs are interchangeable
stage is taking::stage is taking
move diagonally sums::move diagonally sums
input gets added::input gets added
problem is showing::problem is showing
showing as minus::showing as minus
manner that delays::manner that delays
delays are smaller::delays are smaller
compare the delays::compare the delays
noticing one extra::noticing one extra
accommodate for extra::accommodate for extra
carries you don::carries you don
don t throw::don t throw
lets take paths::lets take paths
talking for small::talking for small
circuit it doesn::circuit it doesn
doesn t show::doesn t show
path of length::path of length
adder see carry::adder see carry
expensive but faster::expensive but faster
put extra logic::put extra logic
logic for carry::logic for carry
adder that means::adder that means
faster and expensive::faster and expensive
stage to make::stage to make
principle is applied::principle is applied
multiplied b equal::multiplied b equal
equal to sigma::equal to sigma
matter of waiting::matter of waiting
term simplify things::term simplify things
simplify things denoting::simplify things denoting
denoting with pij::denoting with pij
added a multiplied::added a multiplied
require eight result::require eight result
right these initial::right these initial
normal carry ripple::normal carry ripple
four this delay::four this delay
length but easier::length but easier
easier to quantify::easier to quantify
propagation some vertical::propagation some vertical
propagation some horizontal::propagation some horizontal
approximately n right::approximately n right
saving you carry::saving you carry
require same twelve::require same twelve
twelve adder units::twelve adder units
form okay takes::form okay takes
takes three inputs::takes three inputs
column the sum::column the sum
sum of indices::sum of indices
term gets added::term gets added
addition is concerned::addition is concerned
true for subtraction::true for subtraction
subtraction the key::subtraction the key
type of delay::type of delay
levels if suppose::levels if suppose
four bit addition::four bit addition
four another unit::four another unit
proposal to log::proposal to log
putting a base::putting a base
incase of multiplier::incase of multiplier
move from delay::move from delay
doing carry save::doing carry save
floating point arithmetic::floating point arithmetic
series of lectures::series of lectures
lectures on arithmetic::lectures on arithmetic
operation and arithmetic::operation and arithmetic
arithmetic unit design::arithmetic unit design
unit design today::unit design today
talking of floating::talking of floating
represented as integers::represented as integers
integers you represent::integers you represent
operation on floating::operation on floating
primarily integer arithmetic::primarily integer arithmetic
talked about logical::talked about logical
numbers what kind::numbers what kind
kind of representation::kind of representation
unit for carrying::unit for carrying
out the operation::out the operation
operation so first::operation so first
four then define::four then define
define the concept::define the concept
concept of overflow::concept of overflow
overflow and underflow::overflow and underflow
underflow in case::underflow in case
case of floating::case of floating
out will talk::out will talk
primarily add subtract::primarily add subtract
divide and talk::divide and talk
issue of accuracy::issue of accuracy
important in floating::important in floating
finally i conclude::finally i conclude
kind of provisions::kind of provisions
processor like mips::processor like mips
familiar different data::familiar different data
encounter in programming::encounter in programming
world of mathematics::world of mathematics
mathematics we talk::mathematics we talk
subset of rational::subset of rational
subset of real::subset of real
subset of complex::subset of complex
word and integers::word and integers
topic of today::topic of today
care of situation::care of situation
large in terms::large in terms
talk of huge::talk of huge
lets a pluto::lets a pluto
pluto and sun::pluto and sun
raised for twelve::raised for twelve
requirement is limited::requirement is limited
large that integer::large that integer
quantity like mars::quantity like mars
mars of electron::mars of electron
raised for minus::raised for minus
twenty eight grams::twenty eight grams
extend or thing::extend or thing
thing of deperent::thing of deperent
deperent different representation::deperent different representation
accommodate large range::accommodate large range
part so representing::part so representing
representing fractions means::representing fractions means
non integers value::non integers value
value as rational::value as rational
number let select::number let select
minus two forty::minus two forty
forty seven point::forty seven point
represent um number::represent um number
left of decimal::left of decimal
decimal and propagate::decimal and propagate
part of decimal::part of decimal
unlike this representation::unlike this representation
corrector to represent::corrector to represent
represent that position::represent that position
position this position::position this position
point actually lies::point actually lies
right okay soum::right okay soum
point is fixed::point is fixed
fixed point notation::fixed point notation
care of large::care of large
extremely large value::extremely large value
extremely small value::extremely small value
work with large::work with large
power to represent::power to represent
represent extremely high::represent extremely high
extremely high values::extremely high values
values and negative::values and negative
represent extremely low::represent extremely low
extremely low values::extremely low values
bits or digits::bits or digits
basically um values::basically um values
represent irrational quantities::represent irrational quantities
length of storage::length of storage
number is concerned::number is concerned
represent only reasonable::represent only reasonable
infinite number bits::infinite number bits
bits or bytes::bits or bytes
representing rational number::representing rational number
deeper and understand::deeper and understand
understand the meaning::understand the meaning
meaning of binary::meaning of binary
equivalent decimal value::equivalent decimal value
representation but lets::representation but lets
multiply this fraction::multiply this fraction
collecting the integer::collecting the integer
part and point::part and point
remaining fractional part::remaining fractional part
fractional part point::fractional part point
integer part point::integer part point
fractional part repeat::fractional part repeat
repeat the process::repeat the process
follow same steps::follow same steps
show the repetition::show the repetition
repetition have shown::repetition have shown
shown different colors::shown different colors
talking of finite::talking of finite
pair of integers::pair of integers
convenient to work::convenient to work
loss of accuracy::loss of accuracy
introduce the exponent::introduce the exponent
base and raise::base and raise
typically a floating::typically a floating
floating point representation::floating point representation
minus one raised::minus one raised
care of sign::care of sign
part so faction::part so faction
fixed point sum::fixed point sum
sum that means::sum that means
assume binary point::assume binary point
talking a binary::talking a binary
mantissa or significant::mantissa or significant
concept the question::concept the question
word of memory::word of memory
parts that means::parts that means
straight forward requires::straight forward requires
lots of operations::lots of operations
lots of options::lots of options
assume the point::assume the point
standard has emerged::standard has emerged
acceptable and today::acceptable and today
four standard ieee::four standard ieee
standard ieee stands::standard ieee stands
stands for institution::stands for institution
institution of electrical::institution of electrical
electrical and electronics::electrical and electronics
publishing the scientific::publishing the scientific
define various standards::define various standards
standard defines representation::standard defines representation
precision and double::precision and double
double precision double::double precision double
precision double precision::precision double precision
number of significant::number of significant
twenty three bits::twenty three bits
mantissa in double::mantissa in double
extend the precision::extend the precision
increase the range::increase the range
makes a big::makes a big
four bits representation::four bits representation
representation for double::representation for double
precision so twenty::precision so twenty
twenty remaining bits::twenty remaining bits
word together fifty::word together fifty
fifty two bits::fifty two bits
single precision case::single precision case
bits we assume::bits we assume
sitting there invisible::sitting there invisible
point some thing::point some thing
decide the range::decide the range
point all zeros::point all zeros
similarly in double::similarly in double
invisible or implicit::invisible or implicit
implicit that means::implicit that means
means you assume::means you assume
twenty three bit::twenty three bit
two more precise::two more precise
last bit twenty::last bit twenty
twenty third bit::twenty third bit
bit its equivalent::bit its equivalent
similarly for double::similarly for double
double precision numbers::double precision numbers
numbers we accept::numbers we accept
accept for twenty::accept for twenty
representing the floating::representing the floating
floating point number::floating point number
value actually falls::value actually falls
divide by suitable::divide by suitable
make the propagate::make the propagate
propagate just make::propagate just make
two and adjusted::two and adjusted
adjusted by increasing::adjusted by increasing
increasing the exponent::increasing the exponent
small you multiplied::small you multiplied
multiplied by powers::multiplied by powers
suitably and decrement::suitably and decrement
decrement the exponent::decrement the exponent
value always lies::value always lies
two and make::two and make
adjust the exponent::adjust the exponent
sim single precision::sim single precision
single precision number::single precision number
notation the sign::notation the sign
represented as twos::represented as twos
minus one twenty::minus one twenty
carry a value::carry a value
exponent two fifty::exponent two fifty
fifty four corresponds::fifty four corresponds
corresponds to minus::corresponds to minus
minus one fifty::minus one fifty
numbers the bias::numbers the bias
range in range::range in range
precision is minus::precision is minus
excluding the cases::excluding the cases
talked of positive::talked of positive
assume an explicit::assume an explicit
decimal to left::decimal to left
bits zero sign::bits zero sign
signifies floating point::signifies floating point
principle any number::principle any number
value of exponent::value of exponent
exponent would represents::exponent would represents
corresponds to multiple::corresponds to multiple
representation in ieee::representation in ieee
non zero positive::non zero positive
compare so test::compare so test
circuit which test::circuit which test
test a number::test a number
number for integer::number for integer
test for sign::test for sign
two cases integer::two cases integer
comparison now magnitude::comparison now magnitude
comparison also turns::comparison also turns
similar to integer::similar to integer
choice wehave made::choice wehave made
terms of significance::terms of significance
significance its natural::significance its natural
compare to floating::compare to floating
point numbers treating::point numbers treating
find that exponent::find that exponent
happen in case::happen in case
case of integer::case of integer
msb s give::msb s give
representation so irrespective::representation so irrespective
irrespective of sign::irrespective of sign
exponent this comparison::exponent this comparison
comparison will work::comparison will work
comparison and unsigned::comparison and unsigned
unsigned comparison differ::unsigned comparison differ
two floating point::two floating point
numbers which means::numbers which means
excluding the sign::excluding the sign
sign bit rest::sign bit rest
rest we compare::rest we compare
magnitudes of integers::magnitudes of integers
integer we talked::integer we talked
talked about overflow::talked about overflow
overflow we talked::overflow we talked
talked of overflow::talked of overflow
large positive integer::large positive integer
large negative integer::large negative integer
exceed the positive::exceed the positive
limit or negative::limit or negative
concept of underflow::concept of underflow
limit of values::limit of values
smallest floating point::smallest floating point
floating point notation::floating point notation
integer the smallest::integer the smallest
two and largest::two and largest
largest positive power::largest positive power
twenty seven interms::twenty seven interms
approximately ten raised::approximately ten raised
terms of familiar::terms of familiar
familiar decimal system::familiar decimal system
ten the smallest::ten the smallest
sign is concerned::sign is concerned
writing separate range::writing separate range
range of positive::range of positive
smallest f value::smallest f value
smallest e value::smallest e value
powers of ten::powers of ten
two two raised::two two raised
extremely large number::extremely large number
bits as twenty::bits as twenty
translate to equivalent::translate to equivalent
equivalent decimal digits::equivalent decimal digits
divide this twenty::divide this twenty
log of ten::log of ten
number of digits::number of digits
digits similarly divide::digits similarly divide
similarly divide fifty::similarly divide fifty
two by log::two by log
thing eight digits::thing eight digits
operations on floating::operations on floating
number be minus::number be minus
bring the exponents::bring the exponents
level so suppose::level so suppose
two okay find::two okay find
exponent is made::exponent is made
change the fraction::change the fraction
prime is obtained::prime is obtained
obtained by dividing::obtained by dividing
specifically two raised::specifically two raised
power the difference::power the difference
dividing by power::dividing by power
man y positions::man y positions
position two adder::position two adder
two adder subtract::two adder subtract
prime so depending::prime so depending
sum or difference::sum or difference
logic for determining::logic for determining
difficult to work::difficult to work
shift it left::shift it left
left and adjust::left and adjust
lock diagram indicating::lock diagram indicating
flow of information::flow of information
floating point adder::floating point adder
subtractor so lets::subtractor so lets
two register holding::two register holding
two numbers sign::two numbers sign
numbers sign exponent::numbers sign exponent
exponent and significant::exponent and significant
part the first::part the first
done is compare::done is compare
compare the exponent::compare the exponent
operands it computes::operands it computes
computes the difference::computes the difference
exponent get aligned::exponent get aligned
perform right shift::perform right shift
selected is determined::selected is determined
control unit control::control unit control
unit control unit::unit control unit
unit is guided::unit is guided
out so knowing::out so knowing
two is greater::two is greater
big alu adds::big alu adds
adds or subtracts::adds or subtracts
significants or mantissas::significants or mantissas
stage where exponent::stage where exponent
circuit is compared::circuit is compared
exponent is brought::exponent is brought
stage where addition::stage where addition
stage where normalization::stage where normalization
normalization takes place::normalization takes place
place so normalization::place so normalization
normalization would involve::normalization would involve
ignore this multiplexer::ignore this multiplexer
moment this output::moment this output
two exponents selected::two exponents selected
selected and passed::selected and passed
out for increment::out for increment
rounding so rounding::rounding so rounding
throwing some thing::throwing some thing
make an adjustment::make an adjustment
adjust the mantissa::adjust the mantissa
round of normalization::round of normalization
back and multiplexer::back and multiplexer
original value coming::original value coming
coming from top::coming from top
finally the result::finally the result
hardware for add::hardware for add
consecutively multiply operation::consecutively multiply operation
result is exclusive::result is exclusive
exponent gets summed::exponent gets summed
normalization and rounding::normalization and rounding
rounding the reason::rounding the reason
two the product::two the product
require one smaller::require one smaller
two you divided::two you divided
increment the exponent::increment the exponent
exponent terms divide::exponent terms divide
divide is similar::divide is similar
similar two numbers::similar two numbers
numbers same thing::numbers same thing
thing um sign::thing um sign
sign is determined::sign is determined
fractions get divided::fractions get divided
divided the exponents::divided the exponents
exponents get subtracted::exponents get subtracted
ration of fractions::ration of fractions
fractions could lie::fractions could lie
question of accuracy::question of accuracy
accuracy and issue::accuracy and issue
issue of rounding::issue of rounding
doing an operations::doing an operations
shifting the number::shifting the number
multiplying two fractions::multiplying two fractions
bit or lets::bit or lets
two twenty twenty::two twenty twenty
four bits including::four bits including
including the invisible::including the invisible
invisible one bit::invisible one bit
four bit exponents::four bit exponents
exponents sorry twenty::exponents sorry twenty
twenty two twenty::twenty two twenty
four bits fractions::four bits fractions
multiplying the result::multiplying the result
forty eight bits::forty eight bits
bits in general::bits in general
throw remaining bits::throw remaining bits
bits and retain::bits and retain
loss of precision::loss of precision
working with finite::working with finite
finite word length::finite word length
minimize the loss::minimize the loss
bits for intermediate::bits for intermediate
finally do round::finally do round
round off based::round off based
stands for guard::stands for guard
two more bits::two more bits
calculation we retain::calculation we retain
tells the distinguishes::tells the distinguishes
zeros and case::zeros and case
atleast a single::atleast a single
relative sense lets::relative sense lets
sense lets imagine::sense lets imagine
relative level lets::relative level lets
level lets assume::level lets assume
weightage of point::weightage of point
lsb now lsb::lsb now lsb
means the bit::means the bit
corresponds to point::corresponds to point
dead at point::dead at point
numbers are equal::numbers are equal
bit this bit::bit this bit
bit being considered::bit being considered
considered as lsb::considered as lsb
leave the number::leave the number
odd you add::odd you add
meaning of round::meaning of round
gains may accumulate::gains may accumulate
party on loss::party on loss
rounding up takes::rounding up takes
takes place half::takes place half
rounding down takes::rounding down takes
place other half::place other half
codes for exponents::codes for exponents
exponents or reserved::exponents or reserved
reserved for special::reserved for special
double precision number::double precision number
last one represents::last one represents
object what kind::object what kind
kind of number::kind of number
high the highest::high the highest
value two fifty::value two fifty
sign the sign::sign the sign
point you lets::point you lets
lets say reach::lets say reach
reach a situation::reach a situation
result is coming::result is coming
program would understand::program would understand
method for doing::method for doing
represents a denormalized::represents a denormalized
requirement of normalization::requirement of normalization
situation that exponent::situation that exponent
fifty four mantissa::fifty four mantissa
non zero value::non zero value
situation which lead::situation which lead
lead to number::lead to number
choosing some code::choosing some code
programs specific meaning::programs specific meaning
give a summary::give a summary
processor to handle::processor to handle
handle floating point::handle floating point
number so first::number so first
thirty two floating::thirty two floating
floating point registers::floating point registers
point registers labeled::point registers labeled
labeled as dollar::labeled as dollar
dollar f thirty::dollar f thirty
thirty two register::thirty two register
floating point activity::floating point activity
processor whose special::processor whose special
task to work::task to work
usual operations add::usual operations add
operations add subtract::operations add subtract
multiply divide absolute::multiply divide absolute
divide absolute value::divide absolute value
absolute value negate::absolute value negate
work on single::work on single
single precision data::single precision data
data or multi::data or multi
multi precision double::multi precision double
double precision data::double precision data
dot d stands::dot d stands
stands for single::stands for single
single precision addition::single precision addition
addition or double::addition or double
double precision addition::double precision addition
integer mips addition::integer mips addition
addition this requires::addition this requires
requires three floating::requires three floating
working with double::working with double
double precision arithmetic::double precision arithmetic
form one pair::form one pair
form another pair::form another pair
processor and floating::processor and floating
processor is considered::processor is considered
instructions would load::instructions would load
unit that means::unit that means
part sixteen bit::part sixteen bit
bit constant part::bit constant part
memory address store::memory address store
address store instruction::address store instruction
instruction is similar::instruction is similar
stands for true::stands for true
determine the condition::determine the condition
instructions to set::instructions to set
set the condition::set the condition
condition so imagine::condition so imagine
comparison was brought::comparison was brought
comparison is brought::comparison is brought
test for truth::test for truth
truth and test::truth and test
test for false::test for false
mead single precision::mead single precision
precision or double::precision or double
instructions for single::instructions for single
instructions for conversion::instructions for conversion
representation integer single::representation integer single
integer single precision::integer single precision
number three point::number three point
representation in single::representation in single
precision some representation::precision some representation
representation double precision::representation double precision
two bit pattern::two bit pattern
four bit pattern::four bit pattern
conversions or conversion::conversions or conversion
conversion to integer::conversion to integer
out the integer::out the integer
convert to floating::convert to floating
point three point::point three point
precision to lower::precision to lower
lose some information::lose some information
talked about range::talked about range
range of value::range of value
definition of overflow::definition of overflow
underflow we learnt::underflow we learnt
perform various operations::perform various operations
operations we talked::operations we talked
talked about accuracy::talked about accuracy
bits for rounding::bits for rounding
looked at notations::looked at notations
instructions mips processor::instructions mips processor
last few lectures::last few lectures
focused on design::focused on design
processor namely alu::processor namely alu
alu or arithmetic::alu or arithmetic
add more pieces::add more pieces
pieces of hardware::pieces of hardware
hardware to make::hardware to make
complete so first::complete so first
blocks including alu::blocks including alu
require to build::require to build
build the processor::build the processor
put this building::put this building
simplest possible manner::simplest possible manner
data would flow::data would flow
design more sophisticated::design more sophisticated
design this term::design this term
term multi cycle::term multi cycle
two major parts::two major parts
major parts data::major parts data
parts data path::parts data path
path and control::path and control
style of designing::style of designing
designing the control::designing the control
control called mac::control called mac
mac program control::mac program control
small low level::small low level
enhance our design::enhance our design
instructions we talked::instructions we talked
talked of thing::talked of thing
thing like overflow::thing like overflow
situation so first::situation so first
enhance the design::enhance the design
design to accommodate::design to accommodate
begin with taking::begin with taking
taking a set::taking a set
instructions from mips::instructions from mips
design we talk::design we talk
simple manageable design::simple manageable design
discuss and understand::discuss and understand
understand the class::understand the class
divided into data::divided into data
types of building::types of building
building blocks combinational::building blocks combinational
combinational and sequential::combinational and sequential
issue of clock::issue of clock
clock which times::clock which times
clock frequency puts::clock frequency puts
design what kind::design what kind
kind of clock::kind of clock
specific to mips::specific to mips
initially the initial::initially the initial
thing which required::thing which required
specifically build mips::specifically build mips
instructions we learnt::instructions we learnt
instructions so lets::instructions so lets
lets take add::lets take add
two arithmetic instructions::two arithmetic instructions
instructions two logical::instructions two logical
two logical instructions::two logical instructions
two memory reference::two memory reference
memory reference instructions::memory reference instructions
reference instructions load::reference instructions load
instructions load word::instructions load word
word two control::word two control
two control flow::two control flow
control flow instructions::control flow instructions
flow instructions branch::flow instructions branch
equal and jump::equal and jump
simple comparison slt::simple comparison slt
comparison and alu::comparison and alu
circuits that comp::circuits that comp
equality is simpler::equality is simpler
simpler as compare::simpler as compare
compare to comparison::compare to comparison
comparing for equality::comparing for equality
separately and check::separately and check
written um recursive::written um recursive
recursive equation describing::recursive equation describing
describing the comparison::describing the comparison
comparison like equ::comparison like equ
test is combined::test is combined
possibly with branch::possibly with branch
design which cater::design which cater
design by making::design by making
making small incremental::making small incremental
cases the change::cases the change
nature of instruction::nature of instruction
add an instructions::add an instructions
diverse from work::diverse from work
structure overall outline::structure overall outline
design then adding::design then adding
adding other things::adding other things
intend to implement::intend to implement
implement a processor::implement a processor
instruction is located::instruction is located
fetching the instructions::fetching the instructions
file you read::file you read
read the values::read the values
values the instructions::values the instructions
instructions then tells::instructions then tells
done whether addition::done whether addition
supply the address::supply the address
calling a instructions::calling a instructions
fields some fields::fields some fields
fields specify registers::fields specify registers
registers some fields::registers some fields
fields specify operation::fields specify operation
instruction we pick::instruction we pick
register resist access::register resist access
access the values::access the values
lets say alu::lets say alu
performing the operation::performing the operation
result of alu::result of alu
load or stored::load or stored
access data memory::access data memory
memory a data::memory a data
data memory accessing::data memory accessing
accessing will required::accessing will required
required again address::required again address
quantent of register::quantent of register
alu for doing::alu for doing
doing this things::doing this things
instruction or read::instruction or read
alu we looked::alu we looked
talking of today::talking of today
today all covered::today all covered
memory or data::memory or data
hole one thing::hole one thing
controller so data::controller so data
path so data::path so data
values or operands::values or operands
working so data::working so data
data is stored::data is stored
calculations get done::calculations get done
alu to perform::alu to perform
subtraction or comparison::subtraction or comparison
controller will instruct::controller will instruct
components in data::components in data
data path works::data path works
works under instruction::works under instruction
controller but controller::controller but controller
kinds of signals::kinds of signals
signals which flows::signals which flows
flows from controller::flows from controller
controller to data::controller to data
path and data::path and data
path to controller::path to controller
controller in deciding::controller in deciding
deciding the action::deciding the action
kind of element::kind of element
element which operate::element which operate
operate only data::operate only data
call them combinational::call them combinational
elements so combinational::elements so combinational
circuits have output::circuits have output
combinational circuit elements::combinational circuit elements
inputs and respond::inputs and respond
delay you remember::delay you remember
memory the remember::memory the remember
remember what happened::remember what happened
output is function::output is function
state contains state::state contains state
represents a summary::represents a summary
past so summary::past so summary
speaking the output::speaking the output
output of sequential::output of sequential
state encapsulates state::state encapsulates state
encapsulates state captures::encapsulates state captures
captures the relevant::captures the relevant
give some examples::give some examples
examples all gates::examples all gates
gates are combinational::gates are combinational
case we assume::case we assume
assume zero delay::assume zero delay
circuit have output::circuit have output
nand nor exclusive::nand nor exclusive
exclusive or inverter::exclusive or inverter
combinational circuits multiplexer::combinational circuits multiplexer
multiplexer which makes::multiplexer which makes
combinational circuit decoder::combinational circuit decoder
circuit decoder decoder::circuit decoder decoder
input and identifies::input and identifies
identifies the bit::identifies the bit
bit patterns suppose::bit patterns suppose
suppose we talk::suppose we talk
four input decoder::four input decoder
input then components::input then components
components like adder::components like adder
adder subtractor comparator::adder subtractor comparator
subtractor comparator alu::subtractor comparator alu
circuits okay multiplier::circuits okay multiplier
multiplier we discuss::multiplier we discuss
discuss various designs::discuss various designs
simply a collection::simply a collection
collection of adders::collection of adders
circuits the sequential::circuits the sequential
bit of memory::bit of memory
signal which occurred::signal which occurred
occurred past counters::occurred past counters
counters are sequential::counters are sequential
sequential circuits registers::sequential circuits registers
registers so registers::registers so registers
registers are extension::registers are extension
essentially flip flops::essentially flip flops
dimension okay register::dimension okay register
files and memories::files and memories
memories are extension::memories are extension
extension of flip::extension of flip
talk of component::talk of component
mips instruction set::mips instruction set
circuits which work::circuits which work
work with clock::work with clock
clocked state elements::clocked state elements
elements and unclocked::elements and unclocked
unclocked state elements::unclocked state elements
occur with clock::occur with clock
playing a special::playing a special
designated as clock::designated as clock
change in state::change in state
edges is assumed::edges is assumed
edge is considered::edge is considered
transition alright suppose::transition alright suppose
convenience of keeping::convenience of keeping
keeping the rising::keeping the rising
edge as active::edge as active
examples of clocked::examples of clocked
clocked and unclocked::clocked and unclocked
simplest um unclocked::simplest um unclocked
two nor gates::two nor gates
two nand gates::two nand gates
gates and cross::gates and cross
electronics we don::electronics we don
unclocked rs latch::unclocked rs latch
stands for reset::stands for reset
reset s stands::reset s stands
cross couple signals::cross couple signals
information gets stored::information gets stored
calling one signal::calling one signal
suppose d signal::suppose d signal
signal is changing::signal is changing
analyses and convince::analyses and convince
clock is high::clock is high
output will change::output will change
holds the last::holds the last
spend some times::spend some times
clocked d flip::clocked d flip
flop by putting::flop by putting
two d latches::two d latches
diagram and put::diagram and put
connected to compliment::connected to compliment
change it state::change it state
holding the last::holding the last
falling edge triggered::falling edge triggered
right in fact::right in fact
call level trigger::call level trigger
level trigger circuits::level trigger circuits
level of clock::level of clock
edge trigger circuits::edge trigger circuits
edge triggered circuits::edge triggered circuits
triggered circuits edge::triggered circuits edge
circuits edge triggered::circuits edge triggered
require more hardware::require more hardware
give us nice::give us nice
suppose a change::suppose a change
path that change::path that change
noticed that imagine::noticed that imagine
circuits from output::circuits from output
reflect a change::reflect a change
observed when clock::observed when clock
edge this case::edge this case
trigger another change::trigger another change
brings this level::brings this level
level of convenience::level of convenience
active because clock::active because clock
clock is active::clock is active
period of instability::period of instability
clock period relates::clock period relates
portion or circuit::portion or circuit
circuit we suppose::circuit we suppose
path through combinational::path through combinational
element two resulting::element two resulting
allowed for signals::allowed for signals
delays these circuit::delays these circuit
hold time requirement::hold time requirement
flop may find::flop may find
close to react::close to react
change becomes stable::change becomes stable
instant and continuous::instant and continuous
value or takes::value or takes
flops some flip::flops some flip
flop may react::flop may react
mixed of value::mixed of value
discuss the performance::discuss the performance
performance and timings::performance and timings
create a design::create a design
design for implementing::design for implementing
instructions and lets::instructions and lets
require registers adder::require registers adder
registers adder alu::registers adder alu
adder alu multiplexer::adder alu multiplexer
alu multiplexer register::alu multiplexer register
multiplexer register file::multiplexer register file
register file program::register file program
file program memory::file program memory
program memory data::program memory data
memory data memory::memory data memory
components for bit::components for bit
manipulation so lets::manipulation so lets
value program counter::value program counter
elements so clock::elements so clock
inputs and thirty::inputs and thirty
thirty two output::thirty two output
two output thirty::two output thirty
two bit input::two bit input
bit input thirty::bit input thirty
two bit output::two bit output
output will address::output will address
change its value::change its value
clock edge occurs::clock edge occurs
adders and alus::adders and alus
alu will perform::alu will perform
perform main arithmetic::perform main arithmetic
adder will perform::adder will perform
expressed in thirty::expressed in thirty
lots of zeros::lots of zeros
simplify the design::simplify the design
constant but lets::constant but lets
lets no worry::lets no worry
put an adder::put an adder
adding an offset::adding an offset
four for implementing::four for implementing
implementing branch instructions::implementing branch instructions
carrying outer evaluate::carrying outer evaluate
outer evaluate branch::outer evaluate branch
means the offset::means the offset
instructions is added::instructions is added
two bit operand::two bit operand
bit operand produce::bit operand produce
told which operation::told which operation
multi function unit::multi function unit
function unit depending::function unit depending
test for equality::test for equality
test is done::test is done
result of slt::result of slt
result of beq::result of beq
build the provision::build the provision
provision for exception::provision for exception
handling will require::handling will require
implemented by making::implemented by making
crucial component register::crucial component register
component register file::component register file
care of instruction::care of instruction
array of flip::array of flip
two dimensional array::two dimensional array
right a thirty::right a thirty
two by thirty::two by thirty
thirty two array::thirty two array
array of registers::array of registers
register being thirty::register being thirty
two into thirty::two into thirty
bits of storage::bits of storage
provision for reading::provision for reading
reading two thirty::reading two thirty
two bit values::two bit values
values and writing::values and writing
writing one thirty::writing one thirty
label read data::label read data
register which register::register which register
addresses for read::addresses for read
read one address::read one address
address for write::address for write
memory for data::memory for data
data and instruction::data and instruction
assume two separate::assume two separate
two separate memory::two separate memory
instructions we don::instructions we don
sequential element memories::sequential element memories
memories are sequential::memories are sequential
show any clock::show any clock
counter and outcomes::counter and outcomes
outcomes the instructions::outcomes the instructions
input and data::input and data
data output read::data output read
output read data::output read data
data and write::data and write
unlike register file::unlike register file
memory is concerned::memory is concerned
instruction which writes::instruction which writes
writes into memory::writes into memory
single address input::single address input
care of reading::care of reading
done whether read::done whether read
done or write::done or write
kind of circuit::kind of circuit
require to put::require to put
complete the picture::complete the picture
require sign instruction::require sign instruction
instruction so imagine::instruction so imagine
imagine the instructions::imagine the instructions
perform load operation::perform load operation
address calculation requires::address calculation requires
requires a sixteen::requires a sixteen
sixteen bit offset::sixteen bit offset
added to quantent::added to quantent
thirty bit number::thirty bit number
require any active::require any active
wiring the inputs::wiring the inputs
inputs and outputs::inputs and outputs
bits are input::bits are input
input eight bits::input eight bits
bits are output::bits are output
upper four bits::upper four bits
word of set::word of set
byte of set::byte of set
four so multiplying::four so multiplying
require ant active::require ant active
ant active element::ant active element
element any gate::element any gate
two the output::two the output
task of putting::task of putting
summarize we began::summarize we began
subset of instructions::subset of instructions
design the processor::design the processor
concept of designing::concept of designing
interms of data::interms of data
thing is divided::thing is divided
circuits are distinguished::circuits are distinguished
distinguished from sequential::distinguished from sequential
circuits how sequential::circuits how sequential
circuits are classified::circuits are classified
classified as clocked::classified as clocked
clocked or unclocked::clocked or unclocked
looked at generic::looked at generic
combinational sequential circuits::combinational sequential circuits
clock and timing::clock and timing
post by clock::post by clock
looked at specific::looked at specific
required to build::required to build
build mips processor::build mips processor
processor namely register::processor namely register
register multiplexer adder::register multiplexer adder
multiplexer adder alu::multiplexer adder alu
adder alu register::adder alu register
memory and data::memory and data
required to construct::required to construct
construct the processor::construct the processor
improve the design::improve the design
simplest possible solution::simplest possible solution
problem of taking::problem of taking
execute those instructions::execute those instructions
build this design::build this design
instructions which includes::instructions which includes
includes arithmetic logical::includes arithmetic logical
comparison add subtract::comparison add subtract
instructions by instruction::instructions by instruction
design will include::design will include
include other instructions::include other instructions
step so first::step so first
include load store::include load store
load store instructions::load store instructions
four five instructions::four five instructions
include the jump::include the jump
jump and branch::jump and branch
put the data::put the data
interms of control::interms of control
interconnect a controller::interconnect a controller
out to considered::out to considered
considered for building::considered for building
building this data::building this data
subtract two arithmetic::subtract two arithmetic
instructions and slt::instructions and slt
result in register::result in register
store which access::store which access
basically the data::basically the data
data is transferred::data is transferred
transferred between register::transferred between register
instructions which influence::instructions which influence
influence the flow::influence the flow
conditional jump instruction::conditional jump instruction
parts the data::parts the data
controller the signal::controller the signal
signals and signals::signals and signals
controller i considered::controller i considered
signals so controller::signals so controller
controller um times::controller um times
instant so status::instant so status
information which controller::information which controller
path to decide::path to decide
instructions add subtract::instructions add subtract
memory taking program::memory taking program
taking program counter::taking program counter
program counter contents::program counter contents
contents as address::contents as address
address then depending::address then depending
file a passed::file a passed
produce by alu::produce by alu
alu is passed::alu is passed
instructions the format::instructions the format
field is opcode::field is opcode
register five bit::register five bit
bit third register::bit third register
address of destination::address of destination
begins by fetching::begins by fetching
counter a register::counter a register
carry the address::carry the address
memory okay instruction::memory okay instruction
change the contents::change the contents
instantly the instruction::instantly the instruction
right we assume::right we assume
infact such memories::infact such memories
read only memories::read only memories
process you load::process you load
load the contents::load the contents
require a clock::require a clock
function which transforms::function which transforms
transforms in input::transforms in input
output is fixed::output is fixed
feeds the address::feeds the address
instructions various field::instructions various field
field in instructions::field in instructions
address the register::address the register
remember and bits::remember and bits
two bit instructions::two bit instructions
address register file::address register file
array of register::array of register
register with provision::register with provision
provision of reading::provision of reading
read two registers::read two registers
write one register::write one register
things two reading::things two reading
writing or provided::writing or provided
inside but register::inside but register
file will respond::file will respond
inputs are read::inputs are read
address one read::address one read
two and write::two and write
two data outputs::two data outputs
data outputs read::data outputs read
outputs read data::outputs read data
input write data::input write data
bits so specific::bits so specific
bit number twenty::bit number twenty
address bit number::address bit number
form the fields::form the fields
fields which defines::fields which defines
address is rad::address is rad
taking two groups::taking two groups
bits and connecting::bits and connecting
connecting into register::connecting into register
respond with data::respond with data
couple of lecture::couple of lecture
subtraction and operation::subtraction and operation
operation or operation::operation or operation
purpose of slt::purpose of slt
inside we understand::inside we understand
understand that design::understand that design
build a larger::build a larger
outputs are forming::outputs are forming
forming two inputs::forming two inputs
produced by alu::produced by alu
file for storage::file for storage
cycle of flow::cycle of flow
data or cycle::data or cycle
talk of control::talk of control
field and bit::field and bit
signals to alu::signals to alu
file okay port::file okay port
two read ports::two read ports
file so bit::file so bit
cycle is complete::cycle is complete
file this information::file this information
assuming that transition::assuming that transition
state of register::state of register
instruction so lets::instruction so lets
lets a complete::lets a complete
complete that part::complete that part
quantents and connect::quantents and connect
connect the result::connect the result
four one input::four one input
counting time interms::counting time interms
interms of clock::interms of clock
current instruction completes::current instruction completes
completes by storing::completes by storing
storing its value::storing its value
value and ready::value and ready
completes one cycle::completes one cycle
cycle that instruction::cycle that instruction
important thing note::important thing note
clock cycle remember::clock cycle remember
talked of cpi::talked of cpi
talked a figures::talked a figures
figures of cpi::figures of cpi
cpi which add::cpi which add
design where instruction::design where instruction
design is aimed::design is aimed
aimed at doing::aimed at doing
doing the instruction::doing the instruction
talking of simple::talking of simple
simple possible design::simple possible design
include more instructions::include more instructions
making a small::making a small
small incremental changing::small incremental changing
mechanism for calculation::mechanism for calculation
calculation of memory::calculation of memory
offset sixteen bit::offset sixteen bit
number and contents::number and contents
defines the register::defines the register
exchange the data::exchange the data
add more things::add more things
add load instruction::add load instruction
instruction so first::instruction so first
bring in data::bring in data
right unlike instruction::right unlike instruction
unlike instruction memory::unlike instruction memory
address read port::address read port
read port write::read port write
port write port::port write port
two port memory::two port memory
perform a read::perform a read
single port memory::single port memory
memory two read::memory two read
single read write::single read write
read write port::read write port
write port infact::write port infact
set of wires::set of wires
wires which connected::wires which connected
send the data::send the data
line and bidirectional::line and bidirectional
bidirectional data line::bidirectional data line
common address line::common address line
single read port::single read port
positioned the memory::positioned the memory
connect the inputs::connect the inputs
produce by performing::produce by performing
require other arithmetic::require other arithmetic
address for doing::address for doing
right um input::right um input
alu for calculating::alu for calculating
directly connect register::directly connect register
connect register file::connect register file
output to alu::output to alu
performing address calculation::performing address calculation
doing signed extensions::doing signed extensions
extensions it takes::extensions it takes
takes sixteen bits::takes sixteen bits
bits as input::bits as input
input bit number::input bit number
labeled things assume::labeled things assume
bit output thirty::bit output thirty
two bit signals::two bit signals
two bits exceptions::two bits exceptions
multiplexer to select::multiplexer to select
select this path::select this path
load or store::load or store
multiplexer control input::multiplexer control input
add subtract instruction::add subtract instruction
two paths conversing::two paths conversing
responsibility of controller::responsibility of controller
controller to control::controller to control
data gets passed::data gets passed
part takes care::part takes care
care of inputs::care of inputs
data memory address::data memory address
memory address input::memory address input
data from register::data from register
arrangements for performing::arrangements for performing
performing store word::performing store word
store word instruction::store word instruction
address generation part::address generation part
mechanism same paths::mechanism same paths
data from data::data from data
memory and put::memory and put
file at propagate::file at propagate
address so first::address so first
instructions the control::instructions the control
load instruction control::load instruction control
give the correct::give the correct
correct write address::correct write address
subtract instruction write::subtract instruction write
instruction write address::instruction write address
part okay bit::part okay bit
twenty for load::twenty for load
decides the write::decides the write
introduce a multiplexer::introduce a multiplexer
make a provision::make a provision
remove this line::remove this line
line and put::line and put
done and add::done and add
slt and load::slt and load
path is concerned::path is concerned
instruction is chosen::instruction is chosen
didn t modify::didn t modify
modify this part::modify this part
part for load::part for load
alu for equality::alu for equality
done and alu::done and alu
alu will produce::alu will produce
produce a bit::produce a bit
inputs for equal::inputs for equal
added as word::added as word
retain as common::retain as common
introduce more options::introduce more options
shift this number::shift this number
number from word::number from word
simply wiring things::simply wiring things
correct offset coming::correct offset coming
discuss the control::discuss the control
moment we assume::moment we assume
wiring of signals::wiring of signals
two bits takes::two bits takes
bits takes place::bits takes place
extension and shifting::extension and shifting
active component involved::active component involved
component involved sign::component involved sign
involved sign extension::involved sign extension
sign extension means::sign extension means
extension means repeating::extension means repeating
bit and shifting::bit and shifting
means just rearranging::means just rearranging
supplying a constant::supplying a constant
diagram the sign::diagram the sign
essentially these kind::essentially these kind
kind of wiring::kind of wiring
jump instruction jump::jump instruction jump
instruction jump instruction::instruction jump instruction
fields the opcode::fields the opcode
retain some bits::retain some bits
require another multiplexer::require another multiplexer
provide one additional::provide one additional
multiplexer here remove::multiplexer here remove
line and pass::line and pass
multiplexer is coming::multiplexer is coming
taking this twenty::taking this twenty
field okay shifted::field okay shifted
number four bits::number four bits
four okay bit::four okay bit
bits are concatenated::bits are concatenated
form a jump::form a jump
counters so program::counters so program
possibilities either plain::possibilities either plain
bits and instruction::bits and instruction
single three input::single three input
apply control signals::apply control signals
multiplexer would require::multiplexer would require
exercise of identifying::exercise of identifying
identifying the control::identifying the control
purpose of reference::purpose of reference
call this control::call this control
multiplexer as rdsd::multiplexer as rdsd
rdsd or register::rdsd or register
register file destination::register file destination
first five instructions::first five instructions
distinguish whether alu::distinguish whether alu
normal arithmetic logical::normal arithmetic logical
arithmetic logical operations::arithmetic logical operations
logical operations alu::logical operations alu
alu would require::alu would require
bits to control::bits to control
recall the design::recall the design
four input multiplexer::four input multiplexer
select and output::select and output
output or output::output or output
output for slt::output for slt
bits are required::bits are required
bit to choose::bit to choose
choose between add::choose between add
standing for operation::standing for operation
view beq instruction::view beq instruction
instruction so comparison::instruction so comparison
recall of based::recall of based
subtraction and checking::subtraction and checking
control data memory::control data memory
data memory requires::data memory requires
memory requires control::memory requires control
control for read::control for read
stands for memory::stands for memory
read mw stands::read mw stands
kind of arrangement::kind of arrangement
arrangement where read::arrangement where read
lines are separate::lines are separate
address same location::address same location
source pc source::source pc source
require some circuit::require some circuit
eleven these eleven::eleven these eleven
twelve inputs infact::twelve inputs infact
complete the task::complete the task
bits are sufficient::bits are sufficient
sufficient to distinguish::sufficient to distinguish
distinguish between jump::distinguish between jump
jump branch load::jump branch load
branch load store::branch load store
group of add::group of add
add subtract etcetera::add subtract etcetera
straight away figure::straight away figure
connect the output::connect the output
show the outputs::show the outputs
outputs and connect::outputs and connect
write register file::write register file
write and memory::write and memory
distinguish between load::distinguish between load
controller will activate::controller will activate
activate a signal::activate a signal
signal which tells::signal which tells
output to control::output to control
passes the upper::passes the upper
branch we don::branch we don
controller will make::controller will make
make this output::make this output
comparison was true::comparison was true
registers are equal::registers are equal
four will continue::four will continue
recall the gross::recall the gross
path and controller::path and controller
shown status signal::shown status signal
strictly speaking controller::strictly speaking controller
simplifies a matter::simplifies a matter
separately with makes::separately with makes
multiplexer by figuring::multiplexer by figuring
left is opcode::left is opcode
operation which alu::operation which alu
kind of control::kind of control
controller alu control::controller alu control
remember that alu::remember that alu
class of instruction::class of instruction
two bit information::two bit information
class instruction add::class instruction add
possibility load store::possibility load store
store together grouped::store together grouped
calling it opc::calling it opc
opc which stands::opc which stands
stands for operation::stands for operation
basically this circuit::basically this circuit
inputs eight inputs::inputs eight inputs
inputs and producing::inputs and producing
producing three outputs::producing three outputs
number of input::number of input
lines and number::lines and number
number of output::number of output
size of circuit::size of circuit
circuit the complexity::circuit the complexity
worried about keeping::worried about keeping
keeping the numbers::keeping the numbers
numbers of input::numbers of input
input as low::input as low
larger numbers input::larger numbers input
combine the results::combine the results
information it requires::information it requires
requires about opcode::requires about opcode
enumerate what outputs::enumerate what outputs
outputs you require::outputs you require
designed a processor::designed a processor
slt load word::slt load word
store word beq::store word beq
put the components::put the components
table connect wires::table connect wires
wires and build::wires and build
group of first::group of first
similar in nature::similar in nature
control the alu::control the alu
store and load::store and load
added beq beq::added beq beq
beq and jump::beq and jump
identified the control::identified the control
controllers which expected::controllers which expected
expected to produce::expected to produce
produce this signals::produce this signals
boxes and design::boxes and design
processor design simple::processor design simple
design simple design::design simple design
design of processor::design of processor
design the data::design the data
slightly different angle::slightly different angle
details of control::details of control
design so data::design so data
doing the computation::doing the computation
computation and control::computation and control
guides or directories::guides or directories
directories of computation::directories of computation
right action takes::right action takes
action takes place::action takes place
instruction gets executed::instruction gets executed
data path design::data path design
instruction or group::instruction or group
merge the results::merge the results
results or merge::results or merge
merge the outcome::merge the outcome
inputs are required::inputs are required
required to drive::required to drive
drive various components::drive various components
path and based::path and based
build the specification::build the specification
pla a programmable::pla a programmable
programmable logic array::programmable logic array
performance or analyze::performance or analyze
analyze the delay::analyze the delay
understand those limitation::understand those limitation
design lets call::design lets call
group namely arithmetic::group namely arithmetic
arithmetic logical group::arithmetic logical group
group we augmented::group we augmented
augmented or analyze::augmented or analyze
analyze the design::analyze the design
design by including::design by including
including store instruction::including store instruction
instruction we improved::instruction we improved
including the load::including the load
added on beq::added on beq
place j instructions::place j instructions
design the degradability::design the degradability
design this processor::design this processor
entire instruction set::entire instruction set
adding or enhancing::adding or enhancing
enhancing the design::enhancing the design
instructions so first::instructions so first
separately then beq::separately then beq
beq an isolation::beq an isolation
part will remain::part will remain
solutions and put::solutions and put
point even yesterday::point even yesterday
doing add subtract::doing add subtract
add subtract operation::add subtract operation
supply the instruction::supply the instruction
register address fields::register address fields
address fields fetch::address fields fetch
fetch two operands::fetch two operands
operands from register::operands from register
isolation here alu::isolation here alu
data memory component::data memory component
address for data::address for data
input i don::input i don
address is found::address is found
found by adding::found by adding
adding one register::adding one register
data path portion::data path portion
portion of data::portion of data
instruction so notice::instruction so notice
case of stored::case of stored
stored both word::stored both word
register takes care::register takes care
care of address::care of address
destination of data::destination of data
coming from memories::coming from memories
omitted data memory::omitted data memory
data memory alu::data memory alu
fed to alu::fed to alu
case the condition::case the condition
calculated by adding::calculated by adding
four and note::four and note
two although similar::two although similar
finally for jump::finally for jump
putting the right::putting the right
form the destination::form the destination
address we don::address we don
register file doesn::register file doesn
require alu doesn::require alu doesn
circuitry to wire::circuitry to wire
wire the bits::wire the bits
forming the address::forming the address
form the final::form the final
lets quickly sight::lets quickly sight
common each instruction::common each instruction
reconstruct the entire::reconstruct the entire
sheets of paper::sheets of paper
naturally the thing::naturally the thing
common will fall::common will fall
fall in place::fall in place
corrective of majors::corrective of majors
two different thing::two different thing
identify the points::identify the points
points of conflict::points of conflict
two different things::two different things
two different situations::two different situations
point of conflict::point of conflict
add subtract instructions::add subtract instructions
subtract instructions send::subtract instructions send
send one thing::send one thing
send some thing::send some thing
adding two operands::adding two operands
two operands coming::two operands coming
back in load::back in load
load instruction output::load instruction output
output of data::output of data
address the right::address the right
fifteen or ins::fifteen or ins
twenty different fields::twenty different fields
instructions are addressing::instructions are addressing
incase of branch::incase of branch
out of address::out of address
finally this point::finally this point
point where jump::point where jump
calculating address branch::calculating address branch
multiplexers and multiplexer::multiplexers and multiplexer
driven by suitable::driven by suitable
suitable control signals::suitable control signals
connect the signal::connect the signal
conflict between non::conflict between non
put for branch::put for branch
provision of passing::provision of passing
four will suffice::four will suffice
suffice for non::suffice for non
lets now remove::lets now remove
remove the conflicting::remove the conflicting
put a propagate::put a propagate
connection in place::connection in place
arrive at yesterday::arrive at yesterday
convenient that approach::convenient that approach
follow nothing secured::follow nothing secured
move towards working::move towards working
identified control points::identified control points
controlling the multiplexers::controlling the multiplexers
controlling read write::controlling read write
read write operation::read write operation
operation of memory::operation of memory
memory um write::memory um write
operation of register::operation of register
design is simplified::design is simplified
signals what input::signals what input
basically arithmetic logic::basically arithmetic logic
arithmetic logic instruction::arithmetic logic instruction
logic instruction rdst::logic instruction rdst
address by bits::address by bits
give this control::give this control
tells the register::tells the register
file alu source::file alu source
taking the bottom::taking the bottom
diagram in relation::diagram in relation
jump control multiplexer::jump control multiplexer
signal the polarity::signal the polarity
call it jump::call it jump
set of inputs::set of inputs
give at control::give at control
input we give::input we give
give to opi::give to opi
separately but lets::separately but lets
table of values::table of values
instruction and repeat::instruction and repeat
repeat this exercise::repeat this exercise
value of rdst::value of rdst
matter if alu::matter if alu
bottom input memory::bottom input memory
input memory write::input memory write
store instruction memory::store instruction memory
instruction memory read::instruction memory read
simplify your circuit::simplify your circuit
load instruction similar::load instruction similar
instruction similar exercise::instruction similar exercise
back into register::back into register
files so rdst::files so rdst
taking the top::taking the top
register file brn::register file brn
brn and jmp::brn and jmp
instruction in beq::instruction in beq
write from data::write from data
file in compare::file in compare
brought into consideration::brought into consideration
brn will control::brn will control
control pc source::control pc source
source jmp continues::source jmp continues
instruction so jump::instruction so jump
instruction again doesn::instruction again doesn
active so rdst::active so rdst
choosing alu doesn::choosing alu doesn
give as input::give as input
multiplexer this control::multiplexer this control
control by jmp::control by jmp
inputs so doesn::inputs so doesn
inputs for jump::inputs for jump
instruction and lets::instruction and lets
lets now put::lets now put
table for jump::table for jump
tabulate the instruction::tabulate the instruction
put the opcodes::put the opcodes
derive this control::derive this control
form a kind::form a kind
kind of compact::kind of compact
compact truth table::compact truth table
table for controller::table for controller
design a combinational::design a combinational
lets a put::lets a put
arithmetic logical instruction::arithmetic logical instruction
instruction this part::instruction this part
part is common::part is common
two control boxes::two control boxes
controller which controls::controller which controls
controls the alu::controls the alu
completed that design::completed that design
first um define::first um define
encoding opc opc::encoding opc opc
instruction one category::instruction one category
category load store::category load store
store another category::store another category
category for jump::category for jump
choose some code::choose some code
code or type::code or type
bits as inputs::bits as inputs
bits of opc::bits of opc
inputs ten outputs::inputs ten outputs
ten outputs circuit::ten outputs circuit
field in case::field in case
instruction and decide::instruction and decide
decide three bits::decide three bits
bits input control::bits input control
type is instruction::type is instruction
field um opcode::field um opcode
column shows individual::column shows individual
shows individual instructions::shows individual instructions
last column shows::last column shows
shows the function::shows the function
field the function::field the function
part of address::part of address
give to alu::give to alu
alu control circuit::alu control circuit
bits of inputs::bits of inputs
inputs two bits::inputs two bits
bits of function::bits of function
function alu suppose::function alu suppose
suppose to perform::suppose to perform
operation for add::operation for add
subtract for subtraction::subtract for subtraction
perform subtract operation::perform subtract operation
operation for jump::operation for jump
enumerated the action::enumerated the action
required by alu::required by alu
position two define::position two define
define what control::define what control
control input required::control input required
required for alu::required for alu
recollecting the alu::recollecting the alu
design one bit::design one bit
bit of alu::bit of alu
control the output::control the output
doing a subtraction::doing a subtraction
form ones compliment::form ones compliment
compliment and give::compliment and give
give initial carry::give initial carry
two bits control::two bits control
operation b invert::operation b invert
invert becomes don::invert becomes don
selecting the first::selecting the first
keeping b invert::keeping b invert
picture is complete::picture is complete
inputs eight bit::inputs eight bit
stage of design::stage of design
design actually finishes::design actually finishes
forward almost mechanical::forward almost mechanical
implement that truth::implement that truth
gate or gates::gate or gates
follow other realization::follow other realization
sum on nand::sum on nand
follow um pla::follow um pla
pla based design::pla based design
basically it stands::basically it stands
stands for programmable::stands for programmable
programmable logical array::programmable logical array
array okay logic::array okay logic
logic array means::logic array means
array of gates::array of gates
ypu can program::ypu can program
describe the pla::describe the pla
restate the basic::restate the basic
plane which corresponds::plane which corresponds
type of implementation::type of implementation
implementation or sum::implementation or sum
plane has set::plane has set
gates which implement::gates which implement
out the output::out the output
set of signals::set of signals
representing the products::representing the products
plane actually sums::plane actually sums
sums those products::sums those products
products to form::products to form
form the sum::form the sum
inside the plane::inside the plane
inputs called abc::inputs called abc
implement the products::implement the products
capable of taking::capable of taking
taking every input::taking every input
input and gate::input and gate
gate that means::gate that means
form an arbitrary::form an arbitrary
means each literal::means each literal
gate is forming::gate is forming
forming the product::forming the product
product a bar::product a bar
bar b bar::bar b bar
form um power::form um power
form enough number::form enough number
number of terms::number of terms
required sub set::required sub set
term and sum::term and sum
input gets connect::input gets connect
similarly which product::similarly which product
gate gates don::gate gates don
wired and gates::wired and gates
gates or wired::gates or wired
wired or gates::wired or gates
gates and real::gates and real
nand nand organization::nand nand organization
concisely lets continue::concisely lets continue
vertical line represents::vertical line represents
represents one product::represents one product
line is crossing::line is crossing
crossing every input::crossing every input
line which correspond::line which correspond
terms are crossing::terms are crossing
connection is formed::connection is formed
outputs in product::outputs in product
place your dots::place your dots
move this dots::move this dots
term get formed::term get formed
term get summed::term get summed
kind of universal::kind of universal
universal programmable logic::universal programmable logic
placing this dots::placing this dots
form the required::form the required
gates of formed::gates of formed
showing that exact::showing that exact
suppose we leave::suppose we leave
details to coarse::details to coarse
coarse on digital::coarse on digital
interms of performance::interms of performance
calculate that delay::calculate that delay
period so first::period so first
build it bottom::build it bottom
register one register::register one register
assume the delay::assume the delay
simplify the analysis::simplify the analysis
delay will assume::delay will assume
offset so lets::offset so lets
lets call lets::lets call lets
call lets denote::call lets denote
delay of alu::delay of alu
alu will denote::alu will denote
delay of multiplexer::delay of multiplexer
multiplexer will assume::multiplexer will assume
make the expression::make the expression
expression are analysis::expression are analysis
analysis little simpler::analysis little simpler
delay the delays::delay the delays
file tr program::file tr program
memory ti data::memory ti data
finally the bit::finally the bit
bit mani manipulation::bit mani manipulation
mani manipulation components::mani manipulation components
gates or logic::gates or logic
fast then wire::fast then wire
delay becomes comparable::delay becomes comparable
comparable or significant::comparable or significant
simplicity will ignore::simplicity will ignore
determined the clock::determined the clock
analyze the paths::analyze the paths
edge of clock::edge of clock
begins that data::begins that data
ultimately you write::ultimately you write
file or write::file or write
information to propagate::information to propagate
difference between register::difference between register
delay and register::delay and register
register file delay::register file delay
collection of registers::collection of registers
registers register delay::registers register delay
talking of single::talking of single
register like program::register like program
file has additional::file has additional
giving an address::giving an address
address that address::address that address
out output end::out output end
delay of memory::delay of memory
memory the bulk::memory the bulk
access time register::access time register
influencing the clock::influencing the clock
moment lets assume::moment lets assume
designing we put::designing we put
memory as part::memory as part
simplification but lets::simplification but lets
build other components::build other components
components of processor::components of processor
delays are comparable::delays are comparable
put as non::put as non
simplify the problem::simplify the problem
put the results::put the results
computing the sum::computing the sum
instruction memory register::instruction memory register
summed other path::summed other path
adder to compute::adder to compute
straight away neglect::straight away neglect
expression will dominant::expression will dominant
period is max::period is max
two the reason::two the reason
concerns since alu::concerns since alu
attempt to make::attempt to make
make this alu::make this alu
alu very fast::alu very fast
fast otherwise thing::fast otherwise thing
logic and stuff::logic and stuff
lets say cushion::lets say cushion
delay in carry::delay in carry
addition and delay::addition and delay
carry propagate addition::carry propagate addition
propositional to log::propositional to log
writing both incase::writing both incase
incase of memory::incase of memory
memory and incase::memory and incase
incase of register::incase of register
file in general::file in general
out of proportion::out of proportion
remains another path::remains another path
picking the offset::picking the offset
comparison being done::comparison being done
put as max::put as max
group of expression::group of expression
expression each row::expression each row
instructions second line::instructions second line
store third line::store third line
line for load::line for load
load fourth line::load fourth line
line for beq::line for beq
line for jump::line for jump
word lw dominates::word lw dominates
dominates the big::dominates the big
expression the first::expression the first
coming form load::coming form load
form load word::form load word
coming from beq::coming from beq
term each individual::term each individual
factor each individual::factor each individual
individual t value::individual t value
sake of arguments::sake of arguments
seconds which means::seconds which means
means two hundred::means two hundred
mega hertz clock::mega hertz clock
things standard moment::things standard moment
slow slowest instruction::slow slowest instruction
instruction is pulling::instruction is pulling
utilization is poor::utilization is poor
put two adders::put two adders
adders for doing::adders for doing
doing an operation::doing an operation
done so question::done so question
adders can alu::adders can alu
thing without loss::thing without loss
loss of performance::loss of performance
answer that question::answer that question
cycle the answer::cycle the answer
multiple clock cycle::multiple clock cycle
instruction which read::instruction which read
constraint of data::constraint of data
memory with single::memory with single
instruction which requires::instruction which requires
cycle or complex::cycle or complex
instruction which require::instruction which require
require a moving::require a moving
moving a block::moving a block
area would require::area would require
require several reads::require several reads
reads several writes::reads several writes
writes or instruction::writes or instruction
instruction which required::instruction which required
required in similar::required in similar
similar manner multi::similar manner multi
manner multi pole::manner multi pole
multi pole operation::multi pole operation
close with summarizing::close with summarizing
approach to arrive::approach to arrive
design and approaches::design and approaches
design and merge::design and merge
conflict by putting::conflict by putting
examine the control::examine the control
identified the value::identified the value
value of control::value of control
control parts specification::control parts specification
specification as truth::specification as truth
tables we looked::tables we looked
finally we analyze::finally we analyze
design from performance::design from performance
approach the slowest::approach the slowest
slowest instruction pushed::slowest instruction pushed
discussed very simple::discussed very simple
form of processor::form of processor
design called single::design called single
lecture we ended::lecture we ended
ended by making::ended by making
making some observation::making some observation
design these observations::design these observations
kind of instruction::kind of instruction
instruction so today::instruction so today
introduce another type::introduce another type
approach call multi::approach call multi
call multi cycle::call multi cycle
overcome this problems::overcome this problems
plan and today::plan and today
start by repeating::start by repeating
repeating those problem::repeating those problem
reobserving those problems::reobserving those problems
related to single::related to single
analyzed the delays::analyzed the delays
improved how clock::improved how clock
improving the resource::improving the resource
utilization the resources::utilization the resources
main hardware components::main hardware components
share these components::share these components
memories and alu::memories and alu
half will lower::half will lower
registers and multiplexers::registers and multiplexers
instruction is completed::instruction is completed
ends by updating::ends by updating
updating the state::updating the state
processor in register::processor in register
running as glow::running as glow
glow as slowest::glow as slowest
full fledge alu::full fledge alu
data memory separate::data memory separate
fetch an instruction::fetch an instruction
today on first::today on first
first two issues::first two issues
analyzed the performance::analyzed the performance
performance by taking::performance by taking
taking the delays::taking the delays
delays of individual::delays of individual
components some simple::components some simple
assigned zero delay::assigned zero delay
hand some significant::hand some significant
significant delay denoted::significant delay denoted
simples are denoting::simples are denoting
denoting the delays::denoting the delays
instruction we enumerated::instruction we enumerated
enumerated various paths::enumerated various paths
paths from storage::paths from storage
element to storage::element to storage
decide the clock::decide the clock
putting these values::putting these values
values in numeric::values in numeric
show the delays::show the delays
involved in fetching::involved in fetching
fetching the operands::fetching the operands
file then doing::file then doing
doing the arithmetic::doing the arithmetic
dictate the clock::dictate the clock
first three cases::first three cases
kind of values::kind of values
dominate and dictate::dominate and dictate
periods so clock::periods so clock
remember that horizontal::remember that horizontal
period is fixed::period is fixed
fixed all instructions::fixed all instructions
instructions are taking::instructions are taking
introduce multi cycle::introduce multi cycle
execution of instruction::execution of instruction
done in first::done in first
lots of choices::lots of choices
equivalent and largest::equivalent and largest
decides the clock::decides the clock
improvement in performance::improvement in performance
earlier okay earlier::earlier okay earlier
taking one clock::taking one clock
taking five clocks::taking five clocks
performance or save::performance or save
reason the adders::reason the adders
jump branch instruction::jump branch instruction
instruction and doing::instruction and doing
approach or instruction::approach or instruction
takes four cycle::takes four cycle
period is larger::period is larger
sufficient to accommodate::sufficient to accommodate
taking four cycles::taking four cycles
case taking longer::case taking longer
longer than single::longer than single
cycle and beq::cycle and beq
bit of saving::bit of saving
saving in jump::saving in jump
add the cycle::add the cycle
cycle per instruction::cycle per instruction
cpi of individual::cpi of individual
instruction a class::instruction a class
calculate every cpi::calculate every cpi
ion a program::ion a program
single cycle case::single cycle case
implemented um multiple::implemented um multiple
multiple cycle design::multiple cycle design
identify the activity::identify the activity
part that kind::part that kind
kind of idea::kind of idea
done this action::done this action
reserved two clocks::reserved two clocks
picture the number::picture the number
number of possibility::number of possibility
straight forward solution::straight forward solution
find a suitable::find a suitable
suitable clock period::suitable clock period
due to quantization::due to quantization
clock is minimized::clock is minimized
identified the major::identified the major
follow that approach::follow that approach
approach um keeping::approach um keeping
back of mind::back of mind
issue was improving::issue was improving
eliminate two adders::eliminate two adders
question in general::question in general
resources a clock::resources a clock
end of cycle::end of cycle
recall two design::recall two design
design of multiplier::design of multiplier
multiplier we discussed::multiplier we discussed
types of design::types of design
cascaded of adders::cascaded of adders
partial some flew::partial some flew
flew through flows::flew through flows
active and signals::active and signals
signals are propagating::signals are propagating
hand the sequential::hand the sequential
store the results::store the results
results in register::results in register
register and reuse::register and reuse
reuse that adder::reuse that adder
store one result::store one result
case is free::case is free
mind is register::mind is register
file okay alu::file okay alu
change is required::change is required
share this resources::share this resources
separate clock cycle::separate clock cycle
lets a merge::lets a merge
merge instruction memory::merge instruction memory
memory okay replace::memory okay replace
route its inputs::route its inputs
means the alu::means the alu
supplying the address::supplying the address
supply an alternative::supply an alternative
rerouted and brought::rerouted and brought
block so first::block so first
address for memory::address for memory
memory is connected::memory is connected
bringing a conflict::bringing a conflict
bring all connections::bring all connections
similarly the data::similarly the data
output old output::output old output
memory is removed::memory is removed
brought from alu::brought from alu
remove this multiplexer::remove this multiplexer
multiplexer and reorganize::multiplexer and reorganize
multiplexer is required::multiplexer is required
alu so first::alu so first
space for carrying::space for carrying
out an interconnection::out an interconnection
thing with thing::thing with thing
eliminate this adder::eliminate this adder
eliminate that adder::eliminate that adder
route the interconnection::route the interconnection
remove that adder::remove that adder
remove that connection::remove that connection
connection from top::connection from top
generating jump address::generating jump address
put all values::put all values
resource which computed::resource which computed
make that connection::make that connection
care of removing::care of removing
removing the first::removing the first
inputs again brought::inputs again brought
operand is coming::operand is coming
output second input::output second input
adder is removed::adder is removed
simply get rid::simply get rid
output i make::output i make
make some space::make some space
main belated difficulty::main belated difficulty
addition is meant::addition is meant
happen is first::happen is first
first this value::first this value
decision of sending::decision of sending
distinction will show::distinction will show
applied to show::applied to show
kind of design::kind of design
resource is stored::resource is stored
introduce a registers::introduce a registers
reading two things::reading two things
things the instruction::things the instruction
reading the data::reading the data
store the data::store the data
small individual registers::small individual registers
place one register::place one register
carrying an information::carrying an information
holds the first::holds the first
made the distinction::made the distinction
alu is doing::alu is doing
doing normal addition::doing normal addition
normal addition subtraction::normal addition subtraction
calculated for load::calculated for load
calculate by adding::calculate by adding
offset will sit::offset will sit
purpose this register::purpose this register
register will serve::register will serve
thing which remains::thing which remains
introduce the multiplexers::introduce the multiplexers
require fresh multiplexers::require fresh multiplexers
enhance the size::enhance the size
size or restructure::size or restructure
restructure the multiplexer::restructure the multiplexer
feeding the program::feeding the program
multiplexer three input::multiplexer three input
input one output::input one output
multiplexer which appears::multiplexer which appears
physically just bring::physically just bring
inputs one input::inputs one input
first i switch::first i switch
switch the output::switch the output
result one input::result one input
alu okay alu::alu okay alu
two input multiplexer::two input multiplexer
shown from register::shown from register
feeding second input::feeding second input
register the constant::register the constant
four this offset::four this offset
instruction for calculating::instruction for calculating
calculating the address::calculating the address
instruction with signed::instruction with signed
extension for branch::extension for branch
two separate values::two separate values
place a bigger::place a bigger
connect this signals::connect this signals
control value control::control value control
value control input::value control input
input is required::input is required
move over attention::move over attention
din to register::din to register
move that wire::move that wire
coming from result::coming from result
two address resources::two address resources
res where load::res where load
load store address::load store address
extend this line::extend this line
top same thing::top same thing
path for multi::path for multi
basically more effort::basically more effort
ensure that resources::ensure that resources
collapse multiple components::collapse multiple components
feed different inputs::feed different inputs
registers were introduced::registers were introduced
introduced to break::introduced to break
interval gets broken::interval gets broken
considered for delay::considered for delay
alu to result::alu to result
sources of delay::sources of delay
components memory register::components memory register
rearrange this diagram::rearrange this diagram
diagram to make::diagram to make
lots of multiplex::lots of multiplex
control and multiplexer::control and multiplexer
require two bits::require two bits
usual control requirement::usual control requirement
requirement for memory::requirement for memory
cycle we load::cycle we load
load this register::load this register
lets say add::lets say add
res gets loaded::res gets loaded
end of first::end of first
instruction and branch::instruction and branch
similarly in jump::similarly in jump
require two bit::require two bit
input so total::input so total
signals we require::signals we require
two for memory::two for memory
memory one bit::memory one bit
bits for alu::bits for alu
simply combinational box::simply combinational box
set of cycles::set of cycles
cycles four cycle::cycles four cycle
cycle five cycle::cycle five cycle
reason the single::reason the single
design was considered::design was considered
design to multi::design to multi
compared their performance::compared their performance
attends to reduce::attends to reduce
reduce the cost::reduce the cost
careful that losses::careful that losses
overshadow of gains::overshadow of gains
eliminated those adders::eliminated those adders
eliminate one memory::eliminate one memory
incurred extra cost::incurred extra cost
extra cost interms::extra cost interms
interms of registers::interms of registers
overhead of sharing::overhead of sharing
calculation and ensure::calculation and ensure
overshadow the gain::overshadow the gain
path conceptually simple::path conceptually simple
conceptually simple interms::conceptually simple interms
interms of key::interms of key
alu one memory::alu one memory
register and multiplexer::register and multiplexer
multiplexer which glue::multiplexer which glue
issue of control::issue of control
shobana computer architecture::shobana computer architecture
architecture by prof::architecture by prof
memory hierarchy basic::memory hierarchy basic
hierarchy basic idea::hierarchy basic idea
component of complete::component of complete
recent few lecture::recent few lecture
focused on increasing::focused on increasing
increasing the performance::increasing the performance
puts great demand::puts great demand
demand on memory::demand on memory
simple pipeline case::simple pipeline case
case one instruction::case one instruction
instruction per cycle::instruction per cycle
instruction to fetch::instruction to fetch
fetch per cycle::fetch per cycle
requirement of instruction::requirement of instruction
requirement of data::requirement of data
transfer for instruction::transfer for instruction
instruction which access::instruction which access
memory like load::memory like load
assume that memory::assume that memory
memory is flat::memory is flat
flat that means::flat that means
simply an array::simply an array
words you give::words you give
write the word::write the word
technology if memory::technology if memory
memory is organized::memory is organized
meet the demands::meet the demands
demands of performance::demands of performance
start discussing today::start discussing today
notice a point::notice a point
variation in cost::variation in cost
cost and speed::cost and speed
speed and sizes::speed and sizes
memory hie hierarchy::memory hie hierarchy
attempt to put::attempt to put
principle of locality::principle of locality
case of hierarchy::case of hierarchy
hierarchy or specific::hierarchy or specific
level of hierarchy::level of hierarchy
hierarchy called cache::hierarchy called cache
simple cache organization::simple cache organization
parameter called miss::parameter called miss
miss rate varies::miss rate varies
today for computer::today for computer
online computer store::online computer store
items you note::items you note
storage of information::storage of information
two cache ram::two cache ram
cache ram fdd::cache ram fdd
technology or media::technology or media
media for storing::media for storing
part are arid::part are arid
part ge generate::part ge generate
typically several mega::typically several mega
fdd or hdd::fdd or hdd
cache is faster::cache is faster
fast the processor::fast the processor
giga hertz spec::giga hertz spec
point four giga::point four giga
four giga hertz::four giga hertz
size of memory::size of memory
memory so size::memory so size
memory is important::memory is important
types of memory::types of memory
configuration is important::configuration is important
rate of clock::rate of clock
processor in terms::processor in terms
fifteen inch monitor::fifteen inch monitor
seventeen inch monitor::seventeen inch monitor
briefly be notice::briefly be notice
solid state semiconductor::solid state semiconductor
state semiconductor memory::state semiconductor memory
moving parts involved::moving parts involved
find in floppy::find in floppy
media for optical::media for optical
differences in terms::differences in terms
stored here information::stored here information
similarly in optical::similarly in optical
memory there region::memory there region
opaque or transparent::opaque or transparent
makes a difference::makes a difference
movement is involved::movement is involved
whi which makes::whi which makes
things somewhat slower::things somewhat slower
comparatively much faster::comparatively much faster
difference in organization::difference in organization
address it takes::address it takes
words are organized::words are organized
faster some information::faster some information
slower because things::slower because things
things are organized::things are organized
organized along tracks::organized along tracks
two factors mechanical::two factors mechanical
factors mechanical movement::factors mechanical movement
movement and sequentiality::movement and sequentiality
make these memories::make these memories
magnetic or optical::magnetic or optical
optical memory case::optical memory case
memory case order::memory case order
order of magnitude::order of magnitude
cost of storage::cost of storage
storage per bit::storage per bit
byte are powered::byte are powered
incase of magnetic::incase of magnetic
magnetic and optical::magnetic and optical
capacity than fdds::capacity than fdds
fdds also hdd::fdds also hdd
hdd is faster::hdd is faster
faster than fdd::faster than fdd
part of cpu::part of cpu
memories and main::memories and main
sram is faster::sram is faster
faster than dram::faster than dram
dram s sram::dram s sram
sram in sram::sram in sram
sram the information::sram the information
information is stored::information is stored
stored in terms::stored in terms
terms of flip::terms of flip
imagine cross coupled::imagine cross coupled
cross coupled gates::cross coupled gates
two stable states::two stable states
writing are sensing::writing are sensing
sensing the state::sensing the state
flop or changing::flop or changing
changing the state::changing the state
happened in dram::happened in dram
dram where information::dram where information
terms of charge::terms of charge
longer to charge::longer to charge
charge and discharge::charge and discharge
speed and cost::speed and cost
offer you larger::offer you larger
capacity and vise::capacity and vise
idea of hierarchical::idea of hierarchical
kinds of memory::kinds of memory
typically the fastest::typically the fastest
fastest memory close::fastest memory close
close to cpu::close to cpu
cpu next slow::cpu next slow
slow zone farthest::slow zone farthest
smallest in size::smallest in size
size the cost::size the cost
cost per bit::cost per bit
largest in size::largest in size
size and cost::size and cost
effective um feeling::effective um feeling
cost of cost::cost of cost
cost or size::cost or size
developed over years::developed over years
years in organizing::years in organizing
organizing hierarchical memories::organizing hierarchical memories
memories um tend::memories um tend
tend to give::tend to give
enjoy the capacity::enjoy the capacity
processor would start::processor would start
considered a hit::considered a hit
high hit rate::high hit rate
small miss rate::small miss rate
focus your attention::focus your attention
thing will work::thing will work
hit the information::hit the information
nt same thing::nt same thing
thing will happen::thing will happen
unit of data::unit of data
processor is accessing::processor is accessing
accessing the first::accessing the first
level of memory::level of memory
fetching an instruct::fetching an instruct
read a word::read a word
information um keeping::information um keeping
keeping the future::keeping the future
requirements in mind::requirements in mind
mind so unit::mind so unit
unit of transfer::unit of transfer
transfer may differ::transfer may differ
locality which means::locality which means
means that references::means that references
references to memory::references to memory
memory or localized::memory or localized
localized in sense::localized in sense
terms of space::terms of space
space temporal locality::space temporal locality
temporal locality means::temporal locality means
spatial locality means::spatial locality means
accessing a word::accessing a word
access other word::access other word
address features close::address features close
form of spatial::form of spatial
locality that means::locality that means
accessing um neighboring::accessing um neighboring
analytical way suppose::analytical way suppose
levels we call::levels we call
levels in terms::levels in terms
level the size::level the size
size is increased::size is increased
increased the unit::increased the unit
unit cost decreases::unit cost decreases
out one thing::out one thing
level that means::level that means
slower and slower::slower and slower
cost and total::cost and total
simply are weighted::simply are weighted
lot of simplifications::lot of simplifications
adding the cost::adding the cost
controllers or interfaces::controllers or interfaces
give um broad::give um broad
overhead which lead::overhead which lead
arrayed in general::arrayed in general
configuring a system::configuring a system
designing a system::designing a system
choices you make::choices you make
composed of individual::composed of individual
levels so tow::levels so tow
spend at level::spend at level
data at level::data at level
sum of access::sum of access
made that level::made that level
sum of tow::sum of tow
tow one tow::tow one tow
expect the hit::expect the hit
ratios or hit::ratios or hit
ninety percent chances::ninety percent chances
chances of finding::chances of finding
level but chances::level but chances
level maybe ninety::level maybe ninety
ninety nine point::ninety nine point
capacities are larger::capacities are larger
information at level::information at level
misses before level::misses before level
hit at level::hit at level
terminates at level::terminates at level
right the chances::right the chances
chances of misses::chances of misses
miss at levels::miss at levels
hitting at level::hitting at level
sor sorry level::sor sorry level
higher larger value::higher larger value
level so first::level so first
minus one right::minus one right
probability one minus::probability one minus
probability so miss::probability so miss
miss at level::miss at level
level one miss::level one miss
level two miss::level two miss
level i minus::level i minus
considered the total::considered the total
cost and effective::cost and effective
basically s values::basically s values
values and tow::values and tow
choose s values::choose s values
affect the miss::affect the miss
combination of cost::combination of cost
bring this cost::bring this cost
generally about hierarchy::generally about hierarchy
hierarchy of memory::hierarchy of memory
two particular hierarchal::two particular hierarchal
memory or first::memory or first
first few levels::first few levels
levels of memory::levels of memory
forms a reference::forms a reference
level of cache::level of cache
cache two levels::cache two levels
levels of cache::levels of cache
main memory virtual::main memory virtual
memory virtual memory::memory virtual memory
virtual memory interface::virtual memory interface
cache and main::cache and main
main memory interface::main memory interface
interface so lets::interface so lets
start with cache::start with cache
cache the idea::cache the idea
cache le lets::cache le lets
first make reference::first make reference
reference to cache::reference to cache
location you find::location you find
reference are made::reference are made
fortunately that doesn::fortunately that doesn
doesn t happen::doesn t happen
bring in temporal::bring in temporal
records were consecutive::records were consecutive
locations get accessed::locations get accessed
accessed some computation::accessed some computation
memory main memory::memory main memory
larger size cache::larger size cache
cache of smaller::cache of smaller
part you place::part you place
cache one simple::cache one simple
direct map cache::direct map cache
out its location::out its location
cache of size::cache of size
thirty two words::thirty two words
words just simple::words just simple
illustrate the idea::illustrate the idea
imagine the main::imagine the main
portions or size::portions or size
first eight words::first eight words
memory first quarter::memory first quarter
memory and locations::memory and locations
locations of cache::locations of cache
four such quadrilles::four such quadrilles
main memory map::main memory map
orange locations map::orange locations map
makes the task::makes the task
task very simple::task very simple
simple given memory::simple given memory
out which location::out which location
job is done::job is done
showing this illustration::showing this illustration
illustration with thousand::illustration with thousand
twenty four words::twenty four words
addresses are thirty::addresses are thirty
two bit addresses::two bit addresses
addresses which means::addresses which means
four giga bytes::four giga bytes
last two bits::last two bits
number or byte::number or byte
word so lets::word so lets
out the remaining::out the remaining
remaining thirty word::remaining thirty word
thirty word define::thirty word define
rest per thirty::rest per thirty
thirty memory main::thirty memory main
main memory words::main memory words
words which means::words which means
address by ten::address by ten
bits the lower::bits the lower
lower ten bits::lower ten bits
carry some identity::carry some identity
address the lower::address the lower
index and reach::index and reach
reach one point::reach one point
two bit tag::two bit tag
picture the remaining::picture the remaining
remaining twenty bits::remaining twenty bits
bits will identify::bits will identify
million possible words::million possible words
words of main::words of main
carry a twenty::carry a twenty
twenty bit tag::twenty bit tag
store in thirty::store in thirty
bits of data::bits of data
restruction we carry::restruction we carry
carry additional twenty::carry additional twenty
additional twenty bits::additional twenty bits
cache is filled::cache is filled
distinguish an empty::distinguish an empty
thirty bits address::thirty bits address
remain twenty bits::remain twenty bits
address and match::address and match
valid that means::valid that means
valid but tag::valid but tag
read out write::read out write
out write process::out write process
talking of interface::talking of interface
interface between cache::interface between cache
transfer one word::transfer one word
transfer more words::transfer more words
four word blocks::four word blocks
blocks that means::blocks that means
rate of point::rate of point
locality ok locality::locality ok locality
locality of space::locality of space
structure i extend::structure i extend
word of data::word of data
data but multiple::data but multiple
words of data::words of data
data and rest::data and rest
mechanism is sim::mechanism is sim
sim sim similar::sim sim similar
field size change::field size change
assuming a larger::assuming a larger
assuming a twelve::assuming a twelve
twelve bit index::twelve bit index
part will minus::part will minus
thousand are blocks::thousand are blocks
cache each block::cache each block
cache is sixteen::cache is sixteen
sixteen k words::sixteen k words
usual manner index::usual manner index
similarly tag matching::similarly tag matching
matching the tag::matching the tag
array ok pickup::array ok pickup
pickup one row::pickup one row
matching and hand::matching and hand
out four words::out four words
block of set::block of set
word is missed::word is missed
worry about miss::worry about miss
block size increases::block size increases
series of graphs::series of graphs
graphs which show::graphs which show
show miss rate::show miss rate
miss rate depicted::miss rate depicted
percentage versus block::percentage versus block
versus block size::versus block size
total cache size::total cache size
notice for obvious::notice for obvious
increase the cache::increase the cache
size the miss::size the miss
top one corresponds::top one corresponds
sixteen kb sixty::sixteen kb sixty
increasing the cache::increasing the cache
rates are lower::rates are lower
size is increasing::size is increasing
capturing more spatial::capturing more spatial
decrease in miss::decrease in miss
rate to increase::rate to increase
pronounced in smaller::pronounced in smaller
cache get replaced::cache get replaced
cache is small::cache is small
number of localities::number of localities
typically a program::typically a program
program would behave::program would behave
accessing some data::accessing some data
large larger block::large larger block
larger block size::larger block size
block size means::block size means
size means fewer::size means fewer
means fewer blocks::means fewer blocks
throwing something throwing::throwing something throwing
number of block::number of block
point it doesn::point it doesn
doesn t pay::doesn t pay
increase the block::increase the block
gainfully also depends::gainfully also depends
caches are large::caches are large
impact of block::impact of block
size which doesn::size which doesn
process a miss::process a miss
miss rate miss::miss rate miss
rate miss rate::rate miss rate
derive the expressions::derive the expressions
impact um cache::impact um cache
key indicator cycles::key indicator cycles
spends more cycles::spends more cycles
cycles in executing::cycles in executing
influence by miss::influence by miss
throw some light::throw some light
transfer now multiple::transfer now multiple
words between memory::words between memory
memory and cache::memory and cache
done one approach::done one approach
approach is shown::approach is shown
word width connecting::word width connecting
width connecting cpu::width connecting cpu
cpu and cache::cpu and cache
cache and cpu::cache and cpu
cache and memory::cache and memory
cpu cache connection::cpu cache connection
transfer a multiple::transfer a multiple
multiple word block::multiple word block
block between memory::block between memory
kind of organization::kind of organization
four word wide::four word wide
memory gets organized::memory gets organized
word is thirty::word is thirty
transferring one twenty::transferring one twenty
make things expensive::make things expensive
necessarily cpu cycle::necessarily cpu cycle
cycle one cycle::cycle one cycle
memory as banks::memory as banks
wide memory connected::wide memory connected
bank and interleave::bank and interleave
interleave the addresses::interleave the addresses
bank zero address::bank zero address
bank one address::bank one address
two in bank::two in bank
bank two address::bank two address
addresses are interleaved::addresses are interleaved
four word block::four word block
block is spread::block is spread
four memory banks::four memory banks
four will respond::four will respond
words gets transferred::words gets transferred
give the address::give the address
narrower but faster::narrower but faster
organization of cache::organization of cache
block of main::block of main
flexibility of placing::flexibility of placing
showing a direct::showing a direct
relay on tag::relay on tag
thing is sitting::thing is sitting
word and place::word and place
found in parallel::found in parallel
memory so cache::memory so cache
supply the tag::supply the tag
direct map caches::direct map caches
fully associated match::fully associated match
associative um cache::associative um cache
doesn t match::doesn t match
miss such memory::miss such memory
memory can turn::memory can turn
match the tags::match the tags
give a limited::give a limited
limited fle flexibility::limited fle flexibility
make the set::make the set
reduces to direct::reduces to direct
hand you make::hand you make
fully associative memory::fully associative memory
memory so set::memory so set
sets so suppose::sets so suppose
two places whi::two places whi
whi which means::whi which means
skip the cache::skip the cache
policies and stop::policies and stop
looked at memory::looked at memory
technologies get speed::technologies get speed
means same data::means same data
data or instruction::data or instruction
locality of addresses::locality of addresses
talked of direct::talked of direct
direct mapped cache::direct mapped cache
simple simplest cache::simple simplest cache
simplest cache organization::simplest cache organization
briefly the possibility::briefly the possibility
possibility of associative::possibility of associative
looked at miss::looked at miss
miss rate variation::miss rate variation
types of cache::types of cache
lecture we discuss::lecture we discuss
discuss the basic::discuss the basic
principles of memory::principles of memory
locality of reference::locality of reference
instructions from lower::instructions from lower
lower level memory::lower level memory
memory to higher::memory to higher
higher level memory::higher level memory
gain in terms::gain in terms
high level memory::high level memory
attention on cache::attention on cache
processor and lies::processor and lies
light of cache::light of cache
accesses in light::accesses in light
light of memory::light of memory
influence of choosing::influence of choosing
choosing different memory::choosing different memory
addition time analyze::addition time analyze
analyze to spend::analyze to spend
alternative which exist::alternative which exist
stages read stage::stages read stage
read stage load::read stage load
stage load stage::stage load stage
typically three levels::typically three levels
closer to cpu::closer to cpu
cpu main memory::cpu main memory
faster memory closer::faster memory closer
memory but giving::memory but giving
giving large capacity::giving large capacity
variation in terms::variation in terms
registers with kind::registers with kind
fraction of nanosecond::fraction of nanosecond
nanosecond to access::nanosecond to access
order of lets::order of lets
lets say point::lets say point
point one nanosecond::point one nanosecond
figure which change::figure which change
change every year::change every year
ball path figure::ball path figure
talking of exact::talking of exact
made of sram::made of sram
cache gets integrate::cache gets integrate
integrate with processor::integrate with processor
cases the value::cases the value
dynamic ram technology::dynamic ram technology
typically an order::typically an order
slower as compared::slower as compared
compared to cache::compared to cache
build around hard::build around hard
hard disc drive::hard disc drive
two different kind::two different kind
kind of timing::kind of timing
disk to reach::disk to reach
reach that point::reach that point
moving um med::moving um med
couple of milliseconds::couple of milliseconds
point the transfer::point the transfer
transfer it takes::transfer it takes
takes place faster::takes place faster
rate of transfer::rate of transfer
ten mega bytes::ten mega bytes
organizing these levels::organizing these levels
mind that kind::mind that kind
kind of order::kind of order
magnitude of difference::magnitude of difference
levels of technologies::levels of technologies
technologies which exists::technologies which exists
map the addresses::map the addresses
instruction which reside::instruction which reside
memory address modulo::memory address modulo
modulo the cache::modulo the cache
implication of doing::implication of doing
maximum fl flexibility::maximum fl flexibility
range of locations::range of locations
set of locations::set of locations
memory are set::memory are set
set of address::set of address
locations in main::locations in main
main memory compete::main memory compete
four location cache::four location cache
flexibility the degree::flexibility the degree
degree of set::degree of set
degree of associativity::degree of associativity
associativity in set::associativity in set
set associative case::set associative case
typically you talk::typically you talk
eventually it shows::eventually it shows
redrawn the diagrams::redrawn the diagrams
diagrams of hardware::diagrams of hardware
access with direct::access with direct
direct access mechanism::direct access mechanism
size or larger::size or larger
size and associative::size and associative
address will vary::address will vary
four k words::four k words
words cache size::words cache size
right and main::right and main
main memory address::main memory address
address we assuming::address we assuming
four k word::four k word
word which means::word which means
sixteen k bytes::sixteen k bytes
talking of sixteen::talking of sixteen
sixteen k byte::sixteen k byte
byte cache memory::byte cache memory
direct access case::direct access case
twelve bit field::twelve bit field
field will select::field will select
select one word::select one word
access will require::access will require
match the tag::match the tag
main memory addresses::main memory addresses
address this cache::address this cache
location would differ::location would differ
terms of tag::terms of tag
hit if tag::hit if tag
call as valid::call as valid
lot of misses::lot of misses
matter of replacement::matter of replacement
words they replace::words they replace
conditions are met::conditions are met
hit now lets::hit now lets
lets um extend::lets um extend
extend the size::extend the size
effectively each block::effectively each block
transfer each word::transfer each word
accessible or addressable::accessible or addressable
capacity of cache::capacity of cache
cache would involve::cache would involve
carry a single::carry a single
capturing some spatial::capturing some spatial
terms of transfer::terms of transfer
set of words::set of words
advantages to transfer::advantages to transfer
blocks of data::blocks of data
work and reap::work and reap
reap the advantages::reap the advantages
case the index::case the index
reduces to ten::reduces to ten
eighteen bit tags::eighteen bit tags
neighborhood that entire::neighborhood that entire
entire block absent::entire block absent
block is line::block is line
talk of cache::talk of cache
line which means::line which means
means same thing::means same thing
thing as block::thing as block
logically you imagine::logically you imagine
set associative organization::set associative organization
diagram some lines::diagram some lines
four way set::four way set
organization that means::organization that means
means each block::means each block
line here forms::line here forms
fifty six sets::fifty six sets
sets get indexed::sets get indexed
two two bits::two two bits
previous um situations::previous um situations
size have shrunk::size have shrunk
block which means::block which means
means four words::means four words
four four blocks::four four blocks
accessing this entire::accessing this entire
done in parallel::done in parallel
reading out tags::reading out tags
out tags matching::out tags matching
match may occur::match may occur
show a match::show a match
shows a match::shows a match
pickup a word::pickup a word
righ the required::righ the required
four words coming::four words coming
round of selection::round of selection
signals will enable::signals will enable
spending on tags::spending on tags
overheads of increasing::overheads of increasing
increasing the degree::increasing the degree
reduce the miss::reduce the miss
associativity is lower::associativity is lower
type of graphic::type of graphic
twenty bit tags::twenty bit tags
accessing one word::accessing one word
byte address memory::byte address memory
send one word::send one word
showing there read::showing there read
operation right operation::operation right operation
alignment again multiple::alignment again multiple
talking of reading::talking of reading
writing a word::writing a word
answer your question::answer your question
memory address divide::memory address divide
effectively three parts::effectively three parts
call as tags::call as tags
part is set::part is set
tag gets compared::tag gets compared
cache set index::cache set index
select a set::select a set
parts of word::parts of word
field this selects::field this selects
selects an addressable::selects an addressable
characterize a performance::characterize a performance
hierarchy n level::hierarchy n level
hierarchy in terms::hierarchy in terms
achieve a suitable::achieve a suitable
combination of effective::combination of effective
cost now lets::cost now lets
case two levels::case two levels
two is main::two is main
two is tow::two is tow
made an attempt::made an attempt
attempt at cache::attempt at cache
cache level failed::cache level failed
made an access::made an access
main memory level::main memory level
level beyond main::level beyond main
miss before level::miss before level
start from level::start from level
simply one minus::simply one minus
express t effective::express t effective
two by tow::two by tow
hit or miss::hit or miss
miss the addition::miss the addition
written as average::written as average
average memory access::average memory access
hit plus miss::hit plus miss
measure of performance::measure of performance
performance so ins::performance so ins
count into cycle::count into cycle
typically we talk::typically we talk
memory stall cycles::memory stall cycles
miss you hold::miss you hold
back the cpu::back the cpu
cpu you similar::cpu you similar
hazard you introduce::hazard you introduce
cycles still data::cycles still data
cycle you spend::cycle you spend
factor memory stalls::factor memory stalls
stalls per instruction::stalls per instruction
miss rate multiplied::miss rate multiplied
multiplied by miss::multiplied by miss
miss penalty multiplied::miss penalty multiplied
multiplied by memory::multiplied by memory
accesses per instruction::accesses per instruction
access per instruction::access per instruction
instruction would dep::instruction would dep
instruction are executed::instruction are executed
made to fetch::made to fetch
fetch that instruction::fetch that instruction
instruction and load::instruction and load
store are instruction::store are instruction
make another access::make another access
find the average::find the average
number of memory::number of memory
instruction so miss::instruction so miss
rate and miss::rate and miss
times you make::times you make
spend per instruction::spend per instruction
misses any question::misses any question
performance from cache::performance from cache
cache organization point::cache organization point
sort of subsumed::sort of subsumed
account while counting::account while counting
counting the cycles::counting the cycles
change which reduces::change which reduces
ensure that advantage::ensure that advantage
reduce miss penalty::reduce miss penalty
penalty or reduce::penalty or reduce
reduce miss rate::reduce miss rate
rate or reduce::rate or reduce
reduce this product::reduce this product
reduce a product::reduce a product
penalty is dependant::penalty is dependant
word wide memory::word wide memory
word wide bus::word wide bus
bus other extreme::bus other extreme
memory as wide::memory as wide
degree of interleaving::degree of interleaving
block size suppose::block size suppose
size suppose block::size suppose block
suppose block size::suppose block size
size is sixteen::size is sixteen
four way interleaving::four way interleaving
larger the width::larger the width
larger the degree::larger the degree
send the address::send the address
required for ram::required for ram
internal that means::internal that means
means after address::means after address
address um ram::address um ram
data so lets::data so lets
assuming that bus::assuming that bus
bus also takes::bus also takes
cycle for sending::cycle for sending
assume that block::assume that block
spending fifteen cycles::spending fifteen cycles
cycles for access::cycles for access
access one cycle::access one cycle
cycle for transferring::cycle for transferring
data so total::data so total
number of cpu::number of cpu
four factor reduces::four factor reduces
access four words::access four words
four words transfer::four words transfer
spend only seventeen::spend only seventeen
banks of memory::banks of memory
bus to send::bus to send
imagine intermediate situation::imagine intermediate situation
intermediate situation suppose::intermediate situation suppose
suppose in case::suppose in case
memory and bus::memory and bus
two words wide::two words wide
words out spend::words out spend
spend two cycles::spend two cycles
cycles in sending::cycles in sending
addresses are interlinked::addresses are interlinked
dram in dynamic::dram in dynamic
dram the storage::dram the storage
cells are organized::cells are organized
two dimensional structure::two dimensional structure
structure in row::structure in row
row and columns::row and columns
part row row::part row row
row row address::row row address
address and column::address and column
give row address::give row address
address an entire::address an entire
row is accessed::row is accessed
pick out things::pick out things
out things faster::out things faster
access one word::access one word
make faster access::make faster access
access so first::access so first
first word takes::first word takes
word takes longer::word takes longer
longer but subsequent::longer but subsequent
faster so reading::faster so reading
reading multiple bit::reading multiple bit
give even column::give even column
repeatedly you give::repeatedly you give
give on column::give on column
randomly read bits::randomly read bits
row by giving::row by giving
giving only column::giving only column
column address row::column address row
address row address::address row address
lots of variation::lots of variation
varieties of ways::varieties of ways
read that means::read that means
means initiate data::means initiate data
data of initiate::data of initiate
initiate data transfer::initiate data transfer
transfer between memory::transfer between memory
cache load means::cache load means
data gets filled::data gets filled
cache fetch means::cache fetch means
initiate a transfer::initiate a transfer
transfer replacement means::transfer replacement means
choose which block::choose which block
reading one variation::reading one variation
making an access::making an access
initiate an access::initiate an access
access to main::access to main
memory in anticipation::memory in anticipation
cache um shows::cache um shows
shows a miss::shows a miss
required for cache::required for cache
sequential or concurrent::sequential or concurrent
cache one approach::cache one approach
fill up entire::fill up entire
block you give::block you give
give one word::give one word
doing load word::doing load word
entire word entire::entire word entire
word entire block::word entire block
two are sequentialized::two are sequentialized
kind of forwarding::kind of forwarding
memory to processor::memory to processor
typically one cycle::typically one cycle
cycle two cycle::cycle two cycle
cycle an ideal::cycle an ideal
read one cycle::read one cycle
typically first level::typically first level
load different words::load different words
words which form::words which form
form a block::form a block
simple more simple::simple more simple
forwarding the data::forwarding the data
data to cpu::data to cpu
advantageous to fill::advantageous to fill
leave the words::leave the words
round robin fashion::round robin fashion
robin fashion start::robin fashion start
back and fill::back and fill
wrap around fashion::wrap around fashion
start the transfer::start the transfer
encounter a miss::encounter a miss
fetch the data::fetch the data
prefetch which means::prefetch which means
prefetching or software::prefetching or software
miss and artificial::miss and artificial
force a hardware::force a hardware
initiate a prefetch::initiate a prefetch
prefetch by software::prefetch by software
super flows work::super flows work
load the memory::load the memory
memory memory processor::memory memory processor
memory processor bus::memory processor bus
bus our question::bus our question
matter of trade::matter of trade
four way associative::four way associative
commonly used policy::commonly used policy
policy is lru::policy is lru
replaced alternative strategies::replaced alternative strategies
simply fifo approach::simply fifo approach
brought in earliest::brought in earliest
kind of heuristics::kind of heuristics
found in fact::found in fact
kinds of write::kinds of write
focus our discussion::focus our discussion
terms of read::terms of read
follow two approaches::follow two approaches
first lets assume::first lets assume
cases first lets::cases first lets
first lets examine::first lets examine
lets examine write::lets examine write
examine write hit::examine write hit
write hit case::write hit case
case so write::case so write
write hit means::write hit means
write that block::write that block
block is present::block is present
write back case::write back case
write into cache::write into cache
write into main::write into main
consequence um main::consequence um main
update the main::update the main
memory is updated::memory is updated
maintain a bit::maintain a bit
clean but moment::clean but moment
moment you write::moment you write
write you call::write you call
call it dirty::call it dirty
trouble in write::trouble in write
write in cache::write in cache
cache in parallel::cache in parallel
write in main::write in main
memory um incase::memory um incase
incase of write::incase of write
miss um write::miss um write
write back arrangement::write back arrangement
arrangement would require::arrangement would require
require that first::require that first
block from main::block from main
serve the miss::serve the miss
allocate and write::allocate and write
allocate that means::allocate that means
means now imagine::means now imagine
cache it doesn::cache it doesn
encounter more misses::encounter more misses
bring a block::bring a block
writing in cache::writing in cache
cache because writing::cache because writing
writing into mein::writing into mein
mein main memory::mein main memory
write into buffers::write into buffers
write back policy::write back policy
policy the buffer::policy the buffer
writing one block::writing one block
writing one word::writing one word
buffer would allocate::buffer would allocate
buffer would accommodate::buffer would accommodate
accommodate a couple::accommodate a couple
couple of words::couple of words
required to read::required to read
data is sitting::data is sitting
buffer it doesn::buffer it doesn
doesn t reach::doesn t reach
reach main memory::reach main memory
buffer gets cleared::buffer gets cleared
data you wanted::data you wanted
wanted to read::wanted to read
read is waiting::read is waiting
buffer and read::buffer and read
complication arise moment::complication arise moment
complication or side::complication or side
effect which arise::effect which arise
writing into main::writing into main
main memory means::main memory means
write in memory::write in memory
attempted to write::attempted to write
last um lets::last um lets
lets say last::lets say last
updation of main::updation of main
terminating the program::terminating the program
reason for transferring::reason for transferring
word was modified::word was modified
maintain one bit::maintain one bit
trouble of writing::trouble of writing
experience with locality::experience with locality
dirtied many words::dirtied many words
word is dirty::word is dirty
maintain the set::maintain the set
set block level::set block level
talk of couple::talk of couple
couple of variations::couple of variations
right or separate::right or separate
cache for instruction::cache for instruction
instruction and data::instruction and data
basically split cache::basically split cache
split cache unified::split cache unified
unified cache means::unified cache means
cons of split::cons of split
split and unified::split and unified
cache allows specializing::cache allows specializing
policy may suit::policy may suit
suit instruction cache::suit instruction cache
cache different set::cache different set
set of policy::set of policy
caches in unified::caches in unified
common policy split::common policy split
policy split cache::policy split cache
cache also noted::cache also noted
two separate caches::two separate caches
separate caches means::separate caches means
simultaneously accessing data::simultaneously accessing data
data and instructions::data and instructions
hand a unified::hand a unified
capacity ok suppose::capacity ok suppose
lets say sixteen::lets say sixteen
make a decision::make a decision
decision eight byte::decision eight byte
byte eight kilo::byte eight kilo
execution your requirement::execution your requirement
point more requirement::point more requirement
entire sixteen kilo::entire sixteen kilo
sixteen kilo bytes::sixteen kilo bytes
data will share::data will share
unified cache utilize::unified cache utilize
utilize a capacity::utilize a capacity
incase of split::incase of split
words and instruction::words and instruction
short in data::short in data
typically in multi::typically in multi
multi level caches::multi level caches
caches the first::caches the first
invariably um split::invariably um split
talk of on-chip::talk of on-chip
cache or off-chip::cache or off-chip
cache ok cache::cache ok cache
advantages of speed::advantages of speed
speed so on-chip::speed so on-chip
fast but small::fast but small
small off-chip cache::small off-chip cache
multi level cache::multi level cache
level two level::level two level
level three level::level three level
position multiple caches::position multiple caches
addresses from main::addresses from main
memory to cache::memory to cache
cache we looked::cache we looked
looked at direct::looked at direct
direct mapping associative::direct mapping associative
mapping associative mapping::mapping associative mapping
set associative mapping::set associative mapping
mapping we looked::mapping we looked
expression for performance::expression for performance
cycles or total::cycles or total
spend for executing::spend for executing
executing a program::executing a program
miss penalty depending::miss penalty depending
dram s serves::dram s serves
serves similar purpose::serves similar purpose
purpose as interleaving::purpose as interleaving
variety of policies::variety of policies
policies for reading::policies for reading
reading loading fetching::reading loading fetching
loading fetching replacement::loading fetching replacement
replacement and writing::replacement and writing
discussed various aspects::discussed various aspects
aspects of cache::aspects of cache
organization in today::organization in today
today s lecture::today s lecture
give some illustration::give some illustration
accesses are done::accesses are done
numerical problems pertaining::numerical problems pertaining
pertaining to cache::pertaining to cache
essentially like simulation::essentially like simulation
change the block::change the block
change the associativity::change the associativity
individual access level::individual access level
miss gets converted::miss gets converted
hit or hit::hit or hit
hit gets converted::hit gets converted
miss by making::miss by making
making a change::making a change
detailed view detailed::detailed view detailed
view detailed illustration::view detailed illustration
illustration is meant::illustration is meant
mechanism which works::mechanism which works
cache accesses misses::cache accesses misses
misses and hits::misses and hits
spend little bit::spend little bit
organization in terms::organization in terms
bits you required::bits you required
required for holding::required for holding
holding the tags::holding the tags
couple of numerical::couple of numerical
cache with sixteen::cache with sixteen
worrying about bytes::worrying about bytes
bytes and words::bytes and words
words lets assume::words lets assume
sequence from memory::sequence from memory
access a memory::access a memory
sequence of address::sequence of address
number of accesses::number of accesses
number of hits::number of hits
encountered and misses::encountered and misses
kind of cache::kind of cache
memory the location::memory the location
cache is fixed::cache is fixed
address modulo sixteen::address modulo sixteen
essentially which word::essentially which word
memory is sitting::memory is sitting
supposed to sit::supposed to sit
cache was empty::cache was empty
record the addresses::record the addresses
record the misses::record the misses
lost of misses::lost of misses
address is start::address is start
misses lets proceed::misses lets proceed
position eight sits::position eight sits
column but assume::column but assume
numbers are sitting::numbers are sitting
happen um address::happen um address
helped right nineteen::helped right nineteen
position three fifty::position three fifty
fifty six replaces::fifty six replaces
fifty six modulo::fifty six modulo
forty three replaces::forty three replaces
replaces the eleven::replaces the eleven
couple of steps::couple of steps
quickly so twenty::quickly so twenty
four throws twenty::four throws twenty
back again imagine::back again imagine
four and twenty::four and twenty
thirteen are misses::thirteen are misses
suppose we change::suppose we change
size we increase::size we increase
size what block::size what block
continue with direct::continue with direct
data was brought::data was brought
cache with block::cache with block
block size equal::block size equal
split the cache::split the cache
form one block::form one block
form another block::form another block
block level tags::block level tags
tags are stored::tags are stored
find a miss::find a miss
memory and filling::memory and filling
block got filled::block got filled
four was encountered::four was encountered
block get referred::block get referred
fills another block::fills another block
replaces this block::replaces this block
four was replaced::four was replaced
replaced by twenty::replaced by twenty
block as seventeen::block as seventeen
block beginning fifty::block beginning fifty
miss again eleven::miss again eleven
remains a hit::remains a hit
number of blocks::number of blocks
blocks is reduced::blocks is reduced
effect of increasing::effect of increasing
increasing the block::increasing the block
hits maybe lost::hits maybe lost
shown you variation::shown you variation
rate by versus::rate by versus
versus a block::versus a block
miss rate decreases::miss rate decreases
increase a block::increase a block
loosing and miss::loosing and miss
rate may increase::rate may increase
follow lru policy::follow lru policy
repeated those addresses::repeated those addresses
effectively each row::effectively each row
form a set::form a set
addresses now modulo::addresses now modulo
set so twenty::set so twenty
short of space::short of space
extend the degree::extend the degree
associativity further lets::associativity further lets
sixteen block cache::sixteen block cache
block cache sixteen::block cache sixteen
cache sixteen word::cache sixteen word
sixteen word cache::sixteen word cache
cache is divided::cache is divided
capture same number::capture same number
kind of situation::kind of situation
scenario is concerned::scenario is concerned
concerned by increasing::concerned by increasing
types of misses::types of misses
compulsory miss compulsory::compulsory miss compulsory
miss compulsory misses::miss compulsory misses
starting with empty::starting with empty
cache they compel::cache they compel
compulsorily some misses::compulsorily some misses
misses because noting::misses because noting
cache so first::cache so first
capacity misses capacity::capacity misses capacity
misses capacity misses::misses capacity misses
cache has limited::cache has limited
limitation are categorized::limitation are categorized
categorized as capacity::categorized as capacity
conflict misses conflict::conflict misses conflict
misses conflict miss::misses conflict miss
specific mapping approach::specific mapping approach
misses so conflicts::misses so conflicts
main memory location::main memory location
examples ok lets::examples ok lets
misses are compulsory::misses are compulsory
lots of compulsory::lots of compulsory
compulsory misses lets::compulsory misses lets
misses lets find::misses lets find
out which misses::out which misses
making second reference::making second reference
reference ok tha::reference ok tha
due to conflict::due to conflict
conflict or limited::conflict or limited
compulsory miss misses::compulsory miss misses
reduced compulsory misses::reduced compulsory misses
kind of miss::kind of miss
bit of problem::bit of problem
call it capacity::call it capacity
miss or conflict::miss or conflict
miss and conflict::miss and conflict
hard to pinpoint::hard to pinpoint
pinpoint for individual::pinpoint for individual
conflict or capacity::conflict or capacity
ninety nine hits::ninety nine hits
compulsory misses point::compulsory misses point
capacity misses point::capacity misses point
define um capacity::define um capacity
fully associative cache::fully associative cache
cache which means::cache which means
misses and capacity::misses and capacity
terms of average::terms of average
average in terms::average in terms
total gross behavior::total gross behavior
attributed to conflict::attributed to conflict
problem to categorize::problem to categorize
categorize a miss::categorize a miss
lets um move::lets um move
issue of sizes::issue of sizes
sizes and bits::sizes and bits
size certain organization::size certain organization
incur as overheads::incur as overheads
overheads for storing::overheads for storing
storing the times::storing the times
suppose the memory::suppose the memory
space is address::space is address
two and suppose::two and suppose
suppose cache size::suppose cache size
memory is byte::memory is byte
cache in bytes::cache in bytes
size of block::size of block
denote the degree::denote the degree
direct mapping cache::direct mapping cache
number of sets::number of sets
two way set::two way set
associative the total::associative the total
half the num::half the num
bits you require::bits you require
require to index::require to index
address is divided::address is divided
divided into tag::divided into tag
part um index::part um index
block to access::block to access
access a byte::access a byte
block so number::block so number
required to access::required to access
required to address::required to address
address a byte::address a byte
block is log::block is log
subtract the number::subtract the number
bits and number::bits and number
byte the remaining::byte the remaining
remaining are tag::remaining are tag
required to define::required to define
define each tag::define each tag
increases the tag::increases the tag
size will increase::size will increase
right the total::right the total
number of tag::number of tag
tag bits equal::tag bits equal
tag size multiplied::tag size multiplied
number of tags::number of tags
tags and number::tags and number
calculate the overhead::calculate the overhead
cache in terms::cache in terms
tag the cache::tag the cache
parts cache directory::parts cache directory
move to lets::move to lets
relate various performance::relate various performance
cpi in terms::cpi in terms
cycles they depend::cycles they depend
rate miss penalty::rate miss penalty
penalty that means::penalty that means
means additional cycles::means additional cycles
additional cycles encountered::additional cycles encountered
cycles encountered additional::cycles encountered additional
encountered additional stall::encountered additional stall
additional stall cycles::additional stall cycles
stall cycles encountered::stall cycles encountered
encountered per miss::encountered per miss
factor is number::factor is number
point two right::point two right
right um miss::right um miss
point five percent::point five percent
percent and block::percent and block
find the miss::find the miss
find miss penalty::find miss penalty
assume that number::assume that number
penalty will depend::penalty will depend
memory cache interface::memory cache interface
wide and multiple::wide and multiple
words can flow::words can flow
suppose it takes::suppose it takes
cycle to transfer::cycle to transfer
transfer either data::transfer either data
data or address::data or address
assuming a bus::assuming a bus
bus bus cycle::bus bus cycle
cpu cycle assume::cpu cycle assume
latency is ten::latency is ten
cycle that means::cycle that means
means once address::means once address
delay of ten::delay of ten
find out miss::find out miss
out miss penalty::out miss penalty
penalty for case::penalty for case
word is accessed::word is accessed
word you spend::word you spend
spend one cycle::spend one cycle
address ten cycle::address ten cycle
memory one cycle::memory one cycle
back so total::back so total
total twelve cycles::total twelve cycles
sixteen word block::sixteen word block
block this process::block this process
total of miss::total of miss
means this cycle::means this cycle
forty eight cycles::forty eight cycles
last case suppose::last case suppose
suppose we assume::suppose we assume
wide that means::wide that means
transaction will send::transaction will send
cycle then memory::cycle then memory
memory takes ten::memory takes ten
takes ten cycles::takes ten cycles
cpu so total::cpu so total
total of fifteen::total of fifteen
repeated four times::repeated four times
block of sixteen::block of sixteen
total miss penalty::total miss penalty
penalty of sixty::penalty of sixty
answers for cpi::answers for cpi
back to cpi::back to cpi
fraction here miss::fraction here miss
substitute the values::substitute the values
values and number::values and number
putting the value::putting the value
two as miss::two as miss
case um miss::case um miss
penalty is forty::penalty is forty
forty eight cpi::forty eight cpi
four third case::four third case
case miss penalty::case miss penalty
penalty is sixty::penalty is sixty
variation from lets::variation from lets
change the miss::change the miss
terms of cpi::terms of cpi
architectures so suppose::architectures so suppose
two are direct::two are direct
set associative cache::set associative cache
two way associative::two way associative
access the block::access the block
misses and data::misses and data
out of hundred::out of hundred
similarly we make::similarly we make
make hundred access::make hundred access
remaining cases miss::remaining cases miss
cases miss penalty::cases miss penalty
details lets lets::details lets lets
instruction make reference::instruction make reference
reference to data::reference to data
makes one reference::makes one reference
reference for fetching::reference for fetching
percent of ins::percent of ins
ins instruction make::ins instruction make
instruction make data::instruction make data
make data reference::make data reference
calculate the number::calculate the number
four for data::four for data
make data access::make data access
multiply by half::multiply by half
two the miss::two the miss
penalty is ten::penalty is ten
ten because block::ten because block
two d miss::two d miss
case again similar::case again similar
factor is reduced::factor is reduced
arid over basic::arid over basic
cpi two point::cpi two point
point zero point::point zero point
stalls cache stalls::stalls cache stalls
case two point::case two point
point zero minus::point zero minus
number of cycle::number of cycle
clocks clock cycle::clocks clock cycle
clock cycle clock::clock cycle clock
cycle clock period::cycle clock period
cache the cycle::cache the cycle
figure is figure::figure is figure
map caches clock::map caches clock
caches clock period::caches clock period
point four nanoseconds::point four nanoseconds
multiply the cpi::multiply the cpi
making it associative::making it associative
miss getting reduced::miss getting reduced
two level caches::two level caches
processor in cpi::processor in cpi
running at clock::running at clock
hertz the main::hertz the main
main memory access::main memory access
two hundred nanoseconds::two hundred nanoseconds
cache second level::cache second level
suppose the miss::suppose the miss
access time data::access time data
cache and suppose::cache and suppose
twenty nanoseconds main::twenty nanoseconds main
nanoseconds main memory::nanoseconds main memory
two is twenty::two is twenty
cache is subsumed::cache is subsumed
nanoseconds to convert::nanoseconds to convert
cycles we divided::cycles we divided
two or hundred::two or hundred
penalty for making::penalty for making
bus architectural block::bus architectural block
architectural block size::architectural block size
result is lets::result is lets
rate into hundred::rate into hundred
made an assumption::made an assumption
suppose we introduce::suppose we introduce
twenty nanoseconds divided::twenty nanoseconds divided
nanoseconds which means::nanoseconds which means
means ten cycles::means ten cycles
cpi plus stalls::cpi plus stalls
due to misses::due to misses
cycles you incur::cycles you incur
cpi five percent::cpi five percent
reference per instruction::reference per instruction
two level multiplied::two level multiplied
multiplied by hundred::multiplied by hundred
first one first::first one first
factor has performance::factor has performance
divide um cpi::divide um cpi
earlier six point::earlier six point
clarify certain terminology::clarify certain terminology
two percent miss::two percent miss
level cache terminology::level cache terminology
cache is put::cache is put
system is taking::system is taking
care of ninety::care of ninety
ninety eight percent::ninety eight percent
two is receiving::two is receiving
receiving some access::receiving some access
receiving some requests::receiving some requests
term called solo::term called solo
solo miss solo::solo miss solo
miss solo miss::miss solo miss
two level cache::two level cache
level cache system::level cache system
system you remove::system you remove
two solo means::two solo means
inclusive of data::inclusive of data
typically of larger::typically of larger
hold but suppose::hold but suppose
suppose it holds::suppose it holds
two will turn::two will turn
miss having put::miss having put
request and reducing::request and reducing
reducing the penalty::reducing the penalty
global miss sponsored::global miss sponsored
suppose hundred request::suppose hundred request
request are made::request are made
two is taking::two is taking
miss is forty::miss is forty
percent right local::percent right local
right local miss::right local miss
requests are coming::requests are coming
property the inclusion::property the inclusion
retain some data::retain some data
structure and replacement::structure and replacement
independently the degree::independently the degree
policies like write::policies like write
write through write::write through write
situations could arrive::situations could arrive
simulate um cache::simulate um cache
situations an idea::situations an idea
attention on individual::attention on individual
hits and misses::hits and misses
factor is affecting::factor is affecting
moved on quantify::moved on quantify
quantify the storage::quantify the storage
cache organization countered::cache organization countered
countered the tag::countered the tag
influence the performance::influence the performance
penalty um stall::penalty um stall
cycles not miss::cycles not miss
miss penalty stall::miss penalty stall
penalty stall cycle::penalty stall cycle
effect the cpi::effect the cpi
due to change::due to change
level how things::level how things
educational technology services::educational technology services
technology services centre::technology services centre
services centre iit::services centre iit
centre iit delhi::centre iit delhi
iit delhi computer::iit delhi computer
delhi computer architecture::delhi computer architecture
computer architecture lecture::computer architecture lecture
memory hierarchy huh::memory hierarchy huh
discussed the cache::discussed the cache
organization we move::organization we move
virtual memory huh::virtual memory huh
compare huh virtual::compare huh virtual
huh virtual memory::huh virtual memory
make changes huh::make changes huh
problem of mapping::problem of mapping
mapping virtual addresses::mapping virtual addresses
addresses to physical::addresses to physical
virtual memory organization::virtual memory organization
organization is huh::organization is huh
start with virtual::start with virtual
addresses and map::addresses and map
structure of page::structure of page
page tables huh::page tables huh
huh how huh::huh how huh
huh one major::huh one major
handle is due::handle is due
memory are shown::memory are shown
cache primary memory::cache primary memory
memory or main::memory or main
back up memory::back up memory
discussed the interface::discussed the interface
turn may update::turn may update
structures at architecture::structures at architecture
view main memory::view main memory
programmer and cache::programmer and cache
memory and huh::memory and huh
sense that programmer::sense that programmer
typically be aware::typically be aware
device a magic::device a magic
memory organization built::memory organization built
size of main::size of main
huh done huh::huh done huh
manner huh transparent::manner huh transparent
user program huh::user program huh
program or application::program or application
totally huh unaware::totally huh unaware
large memory huh::large memory huh
huh the objective::huh the objective
noticed the main::noticed the main
overcome the size::overcome the size
huh most convenient::huh most convenient
programmer it huh::programmer it huh
bother about moving::bother about moving
moving the data::moving the data
instruction between virtual::instruction between virtual
huh that disk::huh that disk
divide the program::divide the program
data into portions::data into portions
portions and huh::portions and huh
huh take huh::huh take huh
care of bringing::care of bringing
bringing the right::bringing the right
memory at right::memory at right
huh old contents::huh old contents
contents upto brought::contents upto brought
automate this process::automate this process
objective another purpose::objective another purpose
purpose virtual memory::purpose virtual memory
memory organization serves::memory organization serves
programs to share::programs to share
share same physical::share same physical
physical memory huh::physical memory huh
personal typing type::personal typing type
processes which huh::processes which huh
huh are serving::huh are serving
serving the purpose::serving the purpose
programs or multiple::programs or multiple
manner which provide::manner which provide
huh a task::huh a task
huh it makes::huh it makes
reposition or relocate::reposition or relocate
relocate a program::relocate a program
in into earlier::in- into earlier
state of program::state of program
flexibility of huh::flexibility of huh
putting a program::putting a program
problem of relocation::problem of relocation
relocation you call::relocation you call
recall that huh::recall that huh
language programming huh::language programming huh
instruction in relation::instruction in relation
instruction is re-locatable::instruction is re-locatable
position your data::position your data
shift your program::shift your program
problem so huh::problem so huh
on one device::on- one device
device which huh::device which huh
huh the register::huh the register
point of program::point of program
program plus data::program plus data
space is allocated::space is allocated
relocate the program::relocate the program
bu but virtual::bu- but virtual
makes the program::makes the program
flexible in terms::flexible in terms
huh our focus::huh our focus
care of providing::care of providing
providing large size::providing large size
virtual memory virtual::virtual memory virtual
simply an illusion::simply an illusion
memory so huh::memory so huh
basically a large::basically a large
large virtual address::large virtual address
virtual address space::virtual address space
memory physically present::memory physically present
present and huh::present and huh
memory is present::memory is present
machines are bought::machines are bought
bought with huh::bought with huh
memory five twelve::memory five twelve
amounts of memory::amounts of memory
processor so huh::processor so huh
total physical space::total physical space
occupied for financial::occupied for financial
imagine a larger::imagine a larger
larger virtual space::larger virtual space
space where huh::space where huh
huh programmer huh::huh programmer huh
huh can place::huh can place
huh without worrying::huh without worrying
physically smaller amount::physically smaller amount
the virtual address::the- virtual address
physical address space::physical address space
divided into huh::divided into huh
chance of equal::chance of equal
pages so virtual::pages so virtual
divided into pages::divided into pages
pages of equal::pages of equal
mapping huh takes::mapping huh takes
huh takes place::huh takes place
level of page::level of page
out of entire::out of entire
set of virtual::set of virtual
constitute the virtual::constitute the virtual
memory some pages::memory some pages
huh physical memory::huh physical memory
set could change::set could change
program ok huh::program ok huh
remember that huh::remember that huh
huh i talked::huh i talked
talked about multiple::talked about multiple
multiple processes multiple::multiple processes multiple
processes multiple programs::processes multiple programs
share some memory::share some memory
separate virtual space::separate virtual space
talked of dividing::talked of dividing
spaces into huh::spaces into huh
areas of equal::areas of equal
equal size huh::equal size huh
possibility of doing::possibility of doing
group of functions::group of functions
structure or group::structure or group
group of da::group of da-
da data structures::da- data structures
call as segment::call as segment
data is divided::data is divided
size an an::size an- an-
talk of keeping::talk of keeping
keeping some segments::keeping some segments
huh the advantage::huh the advantage
complete logical entity::complete logical entity
executing a function::executing a function
memory whereas page::memory whereas page
taking a program::taking a program
program and chopping::program and chopping
equal parts huh::equal parts huh
huh which makes::huh which makes
makes things convenient::makes things convenient
divide into pages::divide into pages
pages equally huh::pages equally huh
huh implement huh::huh implement huh
implement huh virtual::implement huh virtual
memory you implement::memory you implement
basically by relying::basically by relying
relying on hard::relying on hard
firstly a non::firstly a non
non volatile medium::non volatile medium
cost so we::cost so we-
we we begin::we- we begin
begin by assuming::begin by assuming
pages are huh::pages are huh
made to change::made to change
change overtime huh::change overtime huh
happen the instruction::happen the instruction
architecture should support::architecture should support
support a larger::support a larger
larger disk space::larger disk space
space so huh::space so huh
bits ok addresses::bits ok addresses
bits which means::bits which means
means four gigabyte::means four gigabyte
gigabyte of space::gigabyte of space
huh a programmer::huh a programmer
gigabytes of virtual::gigabytes of virtual
virtual space and::virtual space and-
work with smaller::work with smaller
megabytes so huh::megabytes so huh
huh you takes::huh you takes
rest its huh::rest its huh
huh some hardware::huh some hardware
software which huh::software which huh
huh we huh::huh we- huh
basically the opening::basically the opening
opening system software::opening system software
cache the answer::cache the answer
hierarchy and huh::hierarchy and huh
concerned huh things::concerned huh things
things are similar::things are similar
mind while huh::mind while huh
fact that huh::fact that huh
speeds are huh::speeds are huh
talk of speed::talk of speed
difference between cache::difference between cache
memory we notice::memory we notice
huh this figure::huh this figure
large ok so::large ok so-
techniques which worked::techniques which worked
fact in mind::fact in mind
memory several orders::memory several orders
nt find things::nt find things
huh you expect::huh you expect
hold the processor::hold the processor
needful and continue::needful and continue
special software doing::special software doing
cycles so hardware::cycles so hardware
memory and serve::memory and serve
serve a miss::serve a miss
afford to switch::afford to switch
context because context::context because context
context switch means::context switch means
means that huh::means that huh
require huh large::require huh large
huh large amount::huh large amount
working with virtual::working with virtual
disk the times::disk the times
switch the context::switch the context
mille several milliseconds::mille several milliseconds
milliseconds of gap::milliseconds of gap
gap the processor::gap the processor
task it switches::task it switches
handle by software::handle by software
conveniently by software::conveniently by software
th the terminology::th- the terminology
historical reasons things::historical reasons things
differently so we::differently so we-
talking of pages::talking of pages
talking of huh::talking of huh
huh we talk::huh we talk
talk of page::talk of page
miss and huh::miss and huh
efficient terminology difference::efficient terminology difference
huh another implication::huh another implication
huh miss rate::huh miss rate
remember the expression::remember the expression
talking of effective::talking of effective
penalty is small::penalty is small
penalty is huh::penalty is huh
cycles then point::cycles then point
point one miss::point one miss
rate will make::rate will make
penalty is lets::penalty is lets
lets say huh::lets say huh
ten to hundreds::ten to hundreds
thousands then miss::thousands then miss
figure at hand::figure at hand
tremendously in terms::tremendously in terms
huh miss miss::huh miss miss
miss miss rate::miss miss rate
huh large physical::huh large physical
large physical memory::large physical memory
physical memory size::physical memory size
size as compared::size as compared
compared to huh::compared to huh
huh small cache::huh small cache
small cache size::small cache size
context of cache::context of cache
big the cache::big the cache
cache is larger::cache is larger
larger the cache::larger the cache
smaller the miss::smaller the miss
rate so huh::rate so huh
huh basically depends::huh basically depends
large miss rate::large miss rate
rate is lower::rate is lower
terms kilo bytes::terms kilo bytes
kilo bytes main::kilo bytes main
bytes main memory::bytes main memory
terms of megabytes::terms of megabytes
lower huh miss::lower huh miss
organize other things::organize other things
helps in keeping::helps in keeping
keeping the miss::keeping the miss
rate as low::rate as low
larger than huh::larger than huh
huh in cache::huh in cache
increase the miss::increase the miss
two larger block::two larger block
words four words::words four words
words sixteen words::words sixteen words
words but huh::words but huh
generally not larger::generally not larger
large page size::large page size
page size huh::page size huh
capture much larger::capture much larger
data from disk::data from disk
huh it doesn::huh it doesn
doesn t make::doesn t make
spend few milliseconds::spend few milliseconds
milliseconds to reach::milliseconds to reach
transfer substantial amount::transfer substantial amount
amount of data::amount of data
huh four kilo::huh four kilo
bytes to sixteen::bytes to sixteen
thirty-two or sixty-four::thirty-two or sixty-four
sixty-four kilo bytes::sixty-four kilo bytes
mapping in case::mapping in case
case of cache::case of cache
mapping and set::mapping and set
common is set::common is set
associative with degree::associative with degree
fully associative mapping::fully associative mapping
nt use associative::nt use associative
flexibility in terms::flexibility in terms
terms of mapping::terms of mapping
choice of write::choice of write
back and write::back and write
write through huh::write through huh
write back write::write back write
write through doesn::write through doesn
sense to write::sense to write
write one word::write one word
word into disk::word into disk
write back choice::write back choice
choice also reduces::choice also reduces
reduces the number::reduces the number
number of misses::number of misses
point of write::point of write
back it caches::back it caches
back is larger::back is larger
write a word::write a word
word is smaller::word is smaller
word and write::word and write
write back approach::write back approach
memory with write::memory with write
write back huh::write back huh
point is huh::point is huh
huh what replacement::huh what replacement
throwing back throwing::throwing back throwing
huh wrong piece::huh wrong piece
piece of information::piece of information
huh the ideal::huh the ideal
data for instruction::data for instruction
easy to implement::easy to implement
tagging each block::tagging each block
case each page::case each page
bound ok unbounded::bound ok unbounded
practical to huh::practical to huh
huh use huh::huh use huh
restrict huh programs::restrict huh programs
limited time huh::limited time huh
people doing research::people doing research
research who huh::research who huh
put their program::put their program
program for execution::program for execution
execution for days::execution for days
huh an order::huh an order
call it number::call it number
recently used call::recently used call
shuffle the order::shuffle the order
order as accesses::order as accesses
accesses take place::accesses take place
huh again th::huh again th-
th the problem::th- the problem
huh su suppose::huh su- suppose
blocks and huh::blocks and huh
sophisticate data structures::sophisticate data structures
make one access::make one access
memory you huh::memory you huh
nicely so huh::nicely so huh
hardware is infact::hardware is infact
infact more difficult::infact more difficult
huh and doing::huh and doing
worry about doing::worry about doing
approximate policy huh::approximate policy huh
case of virtual::case of virtual
background lets huh::background lets huh
picture which shows::picture which shows
shows virtual memory::shows virtual memory
side and physical::side and physical
pages each page::pages each page
page of virtual::page of virtual
memory each virtual::memory each virtual
virtual page huh::virtual page huh
mapped to physical::mapped to physical
disk huh infact::disk huh infact
infact strictly speaking::infact strictly speaking
mechanism which defines::mechanism which defines
address huh imagine::address huh imagine
showing thirty-two bits::showing thirty-two bits
huh page offset::huh page offset
offset and virtual::offset and virtual
virtual page number::virtual page number
suppose huh page::suppose huh page
huh page size::huh page size
bytes which means::bytes which means
means a twelve::means a twelve
twelve bit number::twelve bit number
bits specifying page::bits specifying page
number and twelve::number and twelve
bits specifying address::bits specifying address
physical memory present::physical memory present
power thirty huh::power thirty huh
thirty huh bytes::thirty huh bytes
huh four gigabytes::huh four gigabytes
gigabyte now physical::gigabyte now physical
memory can physical::memory can physical
physical memory address::physical memory address
divided into page::divided into page
number and offset::number and offset
problem now remains::problem now remains
translate virtual page::translate virtual page
number into physical::number into physical
physical page number::physical page number
mechanism using page::mechanism using page
table so page::table so page
page table huh::page table huh
page is located::page is located
give you physical::give you physical
page number right::page number right
page number huh::page number huh
page is present::page is present
present in physical::present in physical
huh the disk::huh the disk
address or pointed::address or pointed
pointed to area::pointed to area
area where disk::area where disk
huh the location::huh the location
obtained from huh::obtained from huh
huh a register::huh a register
page table register::page table register
process ok huh::process ok huh
in in terms::in- in terms
in in cache::in- in cache
cache we huh::cache we huh
huh we didn::huh we didn
didn t huh::didn t huh
huh in direct::huh in direct
bits and huh::bits and huh
cache where huh::cache where huh
make a check::make a check
tag bits huh::tag bits huh
access the huh::access the huh
huh higher level::huh higher level
table to huh::table to huh
reach the position::reach the position
directly reached huh::directly reached huh
huh the cache::huh the cache
direct memory access::direct memory access
locations are fixed::locations are fixed
fixed in terms::fixed in terms
associative cache whe::associative cache whe-
making any comparison::making any comparison
entry per virtual::entry per virtual
entry per cache::entry per cache
number of entries::number of entries
entries in cache::entries in cache
directories is equal::directories is equal
number of huh::number of huh
blocks in high::blocks in high
huh the number::huh the number
number of entry::number of entry
equal to number::equal to number
number of pages::number of pages
low level memory::low level memory
huh this picture::huh this picture
shows the mapping::shows the mapping
mapping process huh::mapping process huh
huh virtual page::huh virtual page
page number taking::page number taking
taking it taking::taking it taking
table is telling::table is telling
miss then huh::miss then huh
fault and page::fault and page
page fault result::page fault result
result in huh::result in huh
huh context switch::huh context switch
context switch so::context switch so-
so so first::so- so first
huh the current::huh the current
made this request::made this request
request is suspended::request is suspended
initiate a request::initiate a request
transfer meanwhile disk::transfer meanwhile disk
disk is ready::disk is ready
ready several milliseconds::ready several milliseconds
execute thousand thousand::execute thousand thousand
thousand of instruction::thousand of instruction
instruction so control::instruction so control
control is transferred::control is transferred
waiting for execution::waiting for execution
page table stored::page table stored
understand how big::understand how big
big that table::big that table
typical example suppose::typical example suppose
suppose virtual address::suppose virtual address
thirty-two bits page::thirty-two bits page
bits page size::bits page size
page table entry::page table entry
bit and physical::bit and physical
information about memory::information about memory
protection in context::protection in context
context of multiple::context of multiple
bytes of information::bytes of information
information per entry::information per entry
number of page::number of page
page table entries::page table entries
power thirty-two virtual::power thirty-two virtual
thirty-two virtual memory::thirty-two virtual memory
virtual memory size::virtual memory size
memory size divided::memory size divided
divided by page::divided by page
memory and size::memory and size
obtained by multiplying::obtained by multiplying
million by huh::million by huh
hundreds and thousands::hundreds and thousands
thousands of processes::thousands of processes
decided to huh::decided to huh
allocate same amount::allocate same amount
amount of virtual::amount of virtual
direct separate memory::direct separate memory
main memory huh::main memory huh
huh but main::huh but main
terms of huh::terms of huh
megabytes few hundreds::megabytes few hundreds
hundreds of megabytes::hundreds of megabytes
hundreds of huh::hundreds of huh
huh page table::huh page table
simply huh leave::simply huh leave
leave no space::leave no space
listed here common::listed here common
page table size::page table size
table size exploit::table size exploit
exploit the sparseness::exploit the sparseness
sparseness that means::sparseness that means
huh whole page::huh whole page
techniques like paging::techniques like paging
paging the page::paging the page
huh you give::huh you give
tens of megabytes::tens of megabytes
bound and huh::bound and huh
reduce the memory::reduce the memory
memory huh virtual::memory huh virtual
size the page::size the page
size also reduces::size also reduces
reduces so allocate::reduces so allocate
expand or grow::expand or grow
requirement typically huh::requirement typically huh
huh the programs::huh the programs
programs are organized::programs are organized
organized to grow::organized to grow
area is stand::area is stand
stand ok huh::stand ok huh
huh which grows::huh which grows
grows or shrinks::grows or shrinks
shrinks as call::shrinks as call
wh which grows::wh- which grows
shrinks as memory::shrinks as memory
randomly allocated reallocated::randomly allocated reallocated
two opposite directions::two opposite directions
opposite directions suppose::opposite directions suppose
space huh stack::space huh stack
huh stack grows::huh stack grows
grows in stack::grows in stack
direction keep grows::direction keep grows
difficult to accomod::difficult to accomod-
two virtual memory::two virtual memory
virtual memory segments::virtual memory segments
two page tables::two page tables
stack and heap::stack and heap
requirement substantially huh::requirement substantially huh
huh one thing::huh one thing
table because huh::table because huh
keeping one entry::keeping one entry
pages actually present::pages actually present
huh keep track::huh keep track
entries of page::entries of page
huh have current::huh have current
huh one possibility::huh one possibility
back to cache::back to cache
cache like approach::cache like approach
associative memory huh::associative memory huh
entries would correspond::entries would correspond
correspond to number::correspond to number
size is impractical::size is impractical
impractical so alternative::impractical so alternative
apply suitable hashing::apply suitable hashing
suitable hashing function::suitable hashing function
hashing function huh::hashing function huh
index which takes::index which takes
directly the huh::directly the huh
huh physical page::huh physical page
inverted page table::inverted page table
table because you::table because you-
entries huh organized::entries huh organized
huh more common::huh more common
tabl two level::tabl- two level
two level page::two level page
level page table::level page table
table or huh::table or huh
organize the virtual::organize the virtual
space in terms::space in terms
terms of segments::terms of segments
segments are divided::segments are divided
earlier which correspond::earlier which correspond
boundaries or function::boundaries or function
function in data::function in data
structure so lets::structure so lets
segments of equal::segments of equal
huh entire virtual::huh entire virtual
entire virtual memory::entire virtual memory
memory is divided::memory is divided
divided into smaller::divided into smaller
segment and huh::segment and huh
reducing of space::reducing of space
requirement the segment::requirement the segment
huh this organization::huh this organization
page table page::page table page
table page table::table page table
four page table::four page table
table i page::table i page
table n minus::table n minus
smaller page table::smaller page table
form your good::form your good
good old single::good old single
single monolithic page::single monolithic page
monolithic page table::monolithic page table
huh the starting::huh the starting
tables is pointed::tables is pointed
calling segment table::calling segment table
table so first::table so first
first you make::first you make
access to segment::access to segment
table now imagine::table now imagine
imagine that virtual::imagine that virtual
virtual addresses divided::virtual addresses divided
parts segment number::parts segment number
segment number page::segment number page
number page number::number page number
segment and byte::segment and byte
number you pick::number you pick
table is lets::table is lets
page page table::page- page table
number and index::number and index
huh the physical::huh the physical
address or physical::address or physical
huh by making::huh by making
two step access::two step access
step access huh::step access huh
reach the required::reach the required
fault will occur::fault will occur
point and first::point and first
bring this page::bring this page
table into physical::table into physical
memory then make::memory then make
access to huh::access to huh
right so the::right so the-
the the starting::the- the starting
points two places::points two places
encounter page fault::encounter page fault
page fault huh::page fault huh
huh when accessing::huh when accessing
accessing a page::accessing a page
table itself huh::table itself huh
table but huh::table but huh
page page fault::page page fault
huh lastly huh::huh lastly huh
keeping the page::keeping the page
imagining page table::imagining page table
huh and worrying::huh and worrying
place the page::place the page
automatically some part::automatically some part
make accesses huh::make accesses huh
huh few entries::huh few entries
locate this page::locate this page
access any memory::access any memory
table if page::table if page
keeping page table::keeping page table
user page table::user page table
table in huh::table in huh
huh system virtual::huh system virtual
system virtual space::system virtual space
assigned a virtual::assigned a virtual
virtual space huh::virtual space huh
space huh lets::space huh lets
lets keep user::lets keep user
space and huh::space and huh
ensure that huh::ensure that huh
huh system space::huh system space
system space table::system space table
entire page table::entire page table
find that part::find that part
page table wh::page table wh-
the the address::the- the address
address of huh::address of huh
number so huh::number so huh
huh if lets::huh if lets
lets say page::lets say page
times this number::times this number
huh normally imagine::huh normally imagine
imagine if page::imagine if page
memory directly read::memory directly read
read the page::read the page
entry and proceed::entry and proceed
huh this address::huh this address
physical counter part::physical counter part
huh systems page::huh systems page
systems page table::systems page table
system page table::system page table
access that huh::access that huh
huh the page::huh the page
table entry huh::table entry huh
entry huh hoping::entry huh hoping
memory you make::memory you make
access there huh::access there huh
out whether page::out whether page
ultimately is present::ultimately is present
huh two step::huh two step
two step process::two step process
process one first::process one first
step is huh::step is huh
accessing the system::accessing the system
memory then accessing::memory then accessing
accessing huh users::accessing huh users
huh users page::huh users page
users page table::users page table
access to physical::access to physical
totally three steps::totally three steps
steps are involved::steps are involved
huh we started::huh we started
started by virtual::started by virtual
organization and noticed::organization and noticed
similarities also noticed::similarities also noticed
noticed the differences::noticed the differences
differences are important::differences are important
important otherwise things::important otherwise things
translate virtual addresses::translate virtual addresses
physical addresses page::physical addresses page
addresses page tables::addresses page tables
tables are tend::tables are tend
large which poses::large which poses
poses a problem::poses a problem
techniques to counter::techniques to counter
techniques basically exploit::techniques basically exploit
exploit the limited::exploit the limited
size the sparse::size the sparse
sparse sparseness locality::sparse sparseness locality
ultimately the relevant::ultimately the relevant
part of page::part of page
discussed virtual memory::discussed virtual memory
memory as huh::memory as huh
mechanism to give::mechanism to give
give an illusion::give an illusion
large huh adjustable::large huh adjustable
huh adjustable space::huh adjustable space
performance as good::performance as good
physical memory today::physical memory today
mechanism in organizing::mechanism in organizing
organizing a virtual::organizing a virtual
memory which helps::memory which helps
translating virtual addresses::translating virtual addresses
huh we notice::huh we notice
notice that storage::notice that storage
storage of page::storage of page
large in size::large in size
size we looked::size we looked
introduce another structure::introduce another structure
present in hardware::present in hardware
translation lookaside buffer::translation lookaside buffer
possibility of huh::possibility of huh
huh addressing cache::huh addressing cache
cache by virtual::cache by virtual
huh physical addresses::huh physical addresses
role of virtual::role of virtual
organization in memory::organization in memory
out the physical::out the physical
page is absent::page is absent
page is stored::page is stored
stored on hard::stored on hard
directly disk track::directly disk track
track and sector::track and sector
huh in concept::huh in concept
large size we::large size we-
size we notice::size we- notice
me mega bytes::me- mega bytes
processes simultaneously active::processes simultaneously active
require a separate::require a separate
separate page table::separate page table
entire physical memory::entire physical memory
tables so huh::tables so huh
huh we discussed::huh we discussed
possibilities and huh::possibilities and huh
huh multilevel page::huh multilevel page
multilevel page table::multilevel page table
page table structure::page table structure
simple flat huh::simple flat huh
flat huh array::flat huh array
array but you::array but you-
you you structure::you- you structure
level or larger::level or larger
tree like structure::tree like structure
helps in reducing::helps in reducing
reducing the requirement::reducing the requirement
table in virtual::table in virtual
problem is huh::problem is huh
entire virtual space::entire virtual space
virtual space divided::virtual space divided
huh thousand segments::huh thousand segments
segments each segment::segments each segment
segment containing thousand::segment containing thousand
page table wi::page table wi-
thousand pages huh::thousand pages huh
thousand such small::thousand such small
small small tables::small small tables
tables and depending::tables and depending
existing somewhere huh::existing somewhere huh
table and huh::table and huh
huh the entry::huh the entry
table will point::table will point
points of huh::points of huh
huh these page::huh these page
indication valid bit::indication valid bit
memory or present::memory or present
call this division::call this division
division as segments::division as segments
segments and pages::segments and pages
call it huh::call it huh
work it works::work it works
huh the virtual::huh the virtual
parts huh higher::parts huh higher
higher few bits::higher few bits
bits will diff::bits will diff-
diff will decide::diff- will decide
decide which segment::decide which segment
huh one field::huh one field
field you address::field you address
address this segment::address this segment
basically this leads::basically this leads
table you index::table you index
diagram where huh::diagram where huh
made so starting::made so starting
huh virtual address::huh virtual address
segment field huh::segment field huh
imagine a register::imagine a register
call segment register::call segment register
huh the required::huh the required
table ok huh::table ok huh
showing a multiplying::showing a multiplying
multiplying constant multiplying::multiplying constant multiplying
constant multiplying factor::constant multiplying factor
factor here huh::factor here huh
suppose each segment::suppose each segment
segment table entry::segment table entry
huh the idea::huh the idea
huh starting point::huh starting point
weightage here huh::weightage here huh
location of segment::location of segment
assuming that segment::assuming that segment
smaller ok lets::smaller ok lets
kilo bytes huh::kilo bytes huh
storage to huh::storage to huh
hit this address::hit this address
relevant page table::relevant page table
add the page::add the page
find a page::find a page
page number concatenated::page number concatenated
complete physical address::complete physical address
access huh instruction::access huh instruction
speaking three steps::speaking three steps
steps one step::steps one step
making one access::making one access
access second access::access second access
mentioned was huh::mentioned was huh
huh not structuring::huh not structuring
structuring into multiple::structuring into multiple
level but huh::level but huh
allowing the page::allowing the page
fragmented ok huh::fragmented ok huh
consisting of pages::consisting of pages
area some data::area some data
data structure huh::data structure huh
huh and huh::huh and huh
pages so huh::pages so huh
mechanism to work::mechanism to work
table are present::table are present
memory the rest::memory the rest
placing the page::placing the page
avoid huh cyclic::avoid huh cyclic
huh cyclic references::huh cyclic references
user virtual space::user virtual space
space in system::space in system
access to system::access to system
huh we made::huh we made
assumption that huh::assumption that huh
address and huh::address and huh
stands for users::stands for users
users virtual space::users virtual space
space s stands::space s stands
point is virtual::point is virtual
usel users virtual::usel- users virtual
consist of page::consist of page
page part page::page part page
part page number::part page number
byte number huh::byte number huh
number huh notice::number huh notice
make a reference::make a reference
address of user::address of user
stands for user::stands for user
table in system::table in system
address plus page::address plus page
thirty-two bit number::thirty-two bit number
page number part::page number part
byte number part::byte number part
page table base::page table base
table base address::table base address
find huh pointed::find huh pointed
entry in system::entry in system
assuming that system::assuming that system
system base system::system base system
base system page::base system page
page number offset::page number offset
location either tells::location either tells
huh page number::huh page number
number ok physical::number ok physical
number that physical::number that physical
huh users huh::huh users huh
users huh page::users huh page
access to users::access to users
address is huh::address is huh
huh translated part::huh translated part
two address translation::two address translation
means one offset::means one offset
virtual to physical::virtual to physical
physical in system::physical in system
basically that edition::basically that edition
translating this virtual::translating this virtual
address using users::address using users
access to da::access to da-
da huh data::da- huh data
it may huh::it- may huh
huh first translation::huh first translation
huh user page::huh user page
number of user::number of user
address and user::address and user
table base huh::table base huh
access here huh::access here huh
huh with concatenation::huh with concatenation
concatenation of byte::concatenation of byte
address this part::address this part
translation and huh::translation and huh
forming another address::forming another address
huh next level::huh next level
proceed but huh::proceed but huh
huh physical space::huh physical space
two mechanism huh::two mechanism huh
land up huh::land up huh
huh we lets::huh we lets
small huh miss::small huh miss
rate or page::rate or page
page fault rate::page fault rate
reduce the effect::reduce the effect
simple page table::simple page table
table structure suppose::table structure suppose
suppose the page::suppose the page
require two physical::require two physical
two physical access::two physical access
access two access::access two access
two memory accesses::two memory accesses
memory accesses made::memory accesses made
reduce the performance::reduce the performance
performance by factor::performance by factor
hit us huh::hit us huh
times the physical::times the physical
physical memory access::physical memory access
access time huh::access time huh
paged page table::paged page table
access second memory::access second memory
access third memory::access third memory
memory access assuming::memory access assuming
memory access to::memory access to-
make three access::make three access
pretty bad huh::pretty bad huh
huh the solution::huh the solution
special memory huh::special memory huh
huh as part::huh as part
recent address translation::recent address translation
recently accessed entries::recently accessed entries
preserved for future::preserved for future
idea of locality::idea of locality
make this successful::make this successful
huh this buffer::huh this buffer
stands for translation::stands for translation
lookaside buffer huh::lookaside buffer huh
two column table::two column table
column table huh::column table huh
calling as tag::calling as tag
captured by huh::captured by huh
remembering the virtual::remembering the virtual
page number physical::page number physical
number physical page::number physical page
page number pairs::page number pairs
last few pairs::last few pairs
huh associative memory::huh associative memory
valid bit huh::valid bit huh
page number field::page number field
pick up physical::pick up physical
number and make::number and make
process of translation::process of translation
translation through page::translation through page
out but huh::out but huh
dividing the process::dividing the process
huh typically lets::huh typically lets
right and huh::right and huh
reduced the hit::reduced the hit
huh time memory::huh time memory
inaudible background noise::inaudible background noise
suppose you miss::suppose you miss
cache in principle::cache in principle
cache so imagine::cache so imagine
bringing in bringing::bringing in- bringing
virtual address consisting::virtual address consisting
thirty-two bit address::thirty-two bit address
address the page::address the page
typically twenty bits::typically twenty bits
size is twelve::size is twelve
bits and remaining::bits and remaining
remaining twelve bits::remaining twelve bits
page so first::page so first
doing is huh::doing is huh
associative memory comparing::associative memory comparing
check the valid::check the valid
bit is huh::bit is huh
bit so huh::bit so huh
huh dirty bit::huh dirty bit
bit is dirty::bit is dirty
bit or clean::bit or clean
operation you remember::operation you remember
remember in cache::remember in cache
track of huh::track of huh
blocks are replaced::blocks are replaced
date with respect::date with respect
respect to huh::respect to huh
table so huh::table so huh
entry is thrown::entry is thrown
thrown page table::thrown page table
shows that huh::shows that huh
hit we read::hit we read
out this huh::out this huh
page number stored::page number stored
stored here concatenate::stored here concatenate
view of cache::view of cache
differently into fields::differently into fields
field and index::field and index
field and huh::field and huh
field you access::field you access
access the cache::access the cache
cache right huh::cache right huh
huh direct map::huh direct map
location we match::location we match
tag as part::tag as part
bit is set::bit is set
level then hit::level then hit
consequence of huh::consequence of huh
finding a success::finding a success
success or failure::success or failure
mentioned that huh::mentioned that huh
diagram first thing::diagram first thing
basically a shortcut::basically a shortcut
page table access::page table access
showing two outcomes::showing two outcomes
outcomes here huh::outcomes here huh
access you notice::access you notice
resort to page::resort to page
access ok lets::access ok lets
find a hit::find a hit
made to physical::made to physical
ends at cache::ends at cache
miss here huh::miss here huh
ends here huh::ends here huh
access to cache::access to cache
straight to memory::straight to memory
huh we huh::huh we huh
effectively this branch::effectively this branch
branch is leading::branch is leading
point here huh::point here huh
service this page::service this page
fault so context::fault so context
switch will occur::switch will occur
occur and huh::occur and huh
levels no physical::levels no physical
access is required::access is required
process just done::process just done
done one physical::done one physical
memory access huh::memory access huh
make another physical::make another physical
two physical memory::two physical memory
access are made::access are made
made here huh::made here huh
made one physical::made one physical
fault and make::fault and make
make another memory::make another memory
tests ok huh::tests ok huh
huh together huh::huh together huh
possibilities a hit::possibilities a hit
right so total::right so total
page table ea::page table ea-
possibilities huh question::possibilities huh question
level and huh::level and huh
eventually you suppose::eventually you suppose
suppose you succeed::suppose you succeed
access cache huh::access cache huh
simply count huh::simply count huh
leading here imagine::leading here imagine
imagine huh repetition::imagine huh repetition
huh a tree::huh a tree
assuming that inclusive::assuming that inclusive
property here suppose::property here suppose
assume lets assume::assume lets assume
lets assume inclusive::lets assume inclusive
assume inclusive property::assume inclusive property
property that huh::property that huh
cache is subset::cache is subset
assumption some huh::assumption some huh
out that means::out that means
hit at cache::hit at cache
tha that combination::tha- that combination
combination gets ruled::combination gets ruled
out so whi::out so whi-
two combinations huh::two combinations huh
combinations huh miss::combinations huh miss
hit so tho::hit so tho-
two are huh::two are huh
huh huh lets::huh huh lets
lets say non-existent::lets say non-existent
leaves six huh::leaves six huh
huh eventually subset::huh eventually subset
subset of huh::subset of huh
wont be holding::wont be holding
holding an entry::holding an entry
hit the cache::hit the cache
translate huh virtual::translate huh virtual
address to physical::address to physical
address that means::address that means
cache is concerned::cache is concerned
cache is organized::cache is organized
basis of physical::basis of physical
organized as part::organized as part
huh a cache::huh a cache
memory but huh::memory but huh
huh in principle::huh in principle
straight away access::straight away access
huh the first::huh the first
cache miss huh::cache miss huh
huh main memory::huh main memory
path is short::path is short
hope will occur::hope will occur
access and cache::access and cache
first time huh::first time huh
fastest possible approach::fastest possible approach
approach so the::approach so the-
huh a merit::huh a merit
cost somewhat huh::cost somewhat huh
done so huh::done so huh
huh the problem::huh the problem
huh aliasing bu::huh aliasing bu-
mention that huh::mention that huh
huh to achieve::huh to achieve
distinguish huh entries::distinguish huh entries
processes because huh::processes because huh
address space huh::address space huh
huh or lets::huh or lets
for for process::for- for process
confusion huh ho::confusion huh ho-
huh a process::huh a process
taking its virtual::taking its virtual
extending another field::extending another field
field that in::field that in-
distinguish the entries::distinguish the entries
context switch occurs::context switch occurs
process you start::process you start
start with clearing::start with clearing
empty the cache::empty the cache
start a fresh::start a fresh
lose by doing::lose by doing
processes genuinely shared::processes genuinely shared
data and huh::data and huh
huh part part::huh part part
spend more bits::spend more bits
huh having done::huh having done
problem of aliasing::problem of aliasing
aliasing aliasing means::aliasing aliasing means
huh shared object::huh shared object
two different virtual::two different virtual
virtual addresses huh::virtual addresses huh
addresses huh lets::addresses huh lets
shared data structure::shared data structure
structure in process::structure in process
process a virtual::process a virtual
lying somewhere process::lying somewhere process
process b virtual::process b virtual
processes are running::processes are running
mapped to huh::mapped to huh
two different areas::two different areas
two copies exist::two copies exist
address gets translated::address gets translated
inconsistency one process::inconsistency one process
process may update::process may update
update one copy::update one copy
read a wrong::read a wrong
eliminate this kind::eliminate this kind
kind of problem::kind of problem
virtually address cache::virtually address cache
physically address cache::physically address cache
virtually indexed cache::virtually indexed cache
cache that means::cache that means
picture huh cache::picture huh cache
huh cache requires::huh cache requires
requires two parts::requires two parts
tag so huh::tag so huh
difficult to imagine::difficult to imagine
index ok you::index ok you-
first need index::first need index
out and make::out and make
make a comparison::make a comparison
two is dependent::two is dependent
address translation process::address translation process
translation process in::translation process in-
bits of index::bits of index
done the translation::done the translation
translation but suppose::translation but suppose
suppose the picture::suppose the picture
huh this huh::huh this huh
tag was larger::tag was larger
bits were independent::bits were independent
cache the page::cache the page
manner that huh::manner that huh
huh the index::huh the index
case huh index::case huh index
out from virtual::out from virtual
translation this part::translation this part
bit the field::bit the field
access immediately whe::access immediately whe-
ready for comparison::ready for comparison
part is coming::part is coming
physical address huh::physical address huh
index is coming::index is coming
virtual address huh::virtual address huh
infact it huh::infact it huh
virtual and physical::virtual and physical
address but huh::address but huh
huh this part::huh this part
huh very huh::huh very huh
huh inexpensive arrangement::huh inexpensive arrangement
bit about huh::bit about huh
memory for expanding::memory for expanding
expanding the address::expanding the address
huh in spite::huh in spite
spite of limited::spite of limited
limited physical memory::limited physical memory
huh another thing::huh another thing
helping in huh::helping in huh
putting the protection::putting the protection
protection in place::protection in place
place protection means::place protection means
processes huh data::processes huh data
huh data area::huh data area
area or ins::area or ins-
ins instruction area::ins- instruction area
area also huh::area also huh
huh user processes::huh user processes
access restricted part::access restricted part
huh is allowed::huh is allowed
huh which huh::huh which huh
huh user program::huh user program
control over page::control over page
table gets initialized::table gets initialized
initialized by operating::initialized by operating
updated automatically huh::updated automatically huh
automatically huh huh::automatically huh huh
huh huh as::huh huh as-
huh as huh::huh as- huh
as huh pages::as- huh pages
pages are brought::pages are brought
out huh updation::out huh updation
page table takes::page table takes
table takes place::table takes place
place automatically user::place automatically user
automatically user process::automatically user process
protection gets maintained::protection gets maintained
requires that huh::requires that huh
huh a processor::huh a processor
supports two modes::supports two modes
modes of execution::modes of execution
execution the kernel::execution the kernel
mode or supervisor::mode or supervisor
accesses all permissions::accesses all permissions
initializing the page::initializing the page
accessible in user::accessible in user
lets say user::lets say user
program is running::program is running
register some status::register some status
mode or kernel::mode or kernel
huh naturally user::huh naturally user
naturally user program::naturally user program
allowed to set::allowed to set
set a reset::set a reset
running that bit::running that bit
bit is reset::bit is reset
reset that means::reset that means
huh its running::huh its running
running in user::running in user
user mode huh::user mode huh
makes a system::makes a system
system call th::system call th-
call th th::call th- th-
huh this bit::huh this bit
set that means::set that means
transiting from user::transiting from user
program to huh::program to huh
huh system call::huh system call
huh the bit::huh the bit
bit will flip::bit will flip
bit and user::bit and user
change the mode::change the mode
mode so huh::mode so huh
basis of huh::basis of huh
huh is protection::huh is protection
ultimately actually huh::ultimately actually huh
protection or security::protection or security
huh deep huh::huh deep huh
deep huh multilayered::deep huh multilayered
huh multilayered mechanism::huh multilayered mechanism
modes and restriction::modes and restriction
operating system data::operating system data
huh the application::huh the application
programs are huh::programs are huh
huh communication processes::huh communication processes
huh we began::huh we began
huh the techniques::huh the techniques
techniques to handle::techniques to handle
handle the issue::handle the issue
issue of large::issue of large
large page table::large page table
two level structure::two level structure
structure and paged::structure and paged
noticed that huh::noticed that huh
table huh based::table huh based
huh based approach::huh based approach
data but huh::data but huh
introducing these strategies::introducing these strategies
makes it huh::makes it huh
huh see memory::huh see memory
level three memory::level three memory
memory accesses means::memory accesses means
means your hit::means your hit
high to improve::high to improve
cache page table::cache page table
possibility of accessing::possibility of accessing
directly by virtual::directly by virtual
additional important role::additional important role
virtual memory mechanism::virtual memory mechanism
introduction huh today::introduction huh today
input output subsystem::input output subsystem
talked about processor::talked about processor
processor and memory::processor and memory
entire system huh::entire system huh
programs are executed::programs are executed
memory is essential::memory is essential
essential in order::essential in order
order to hold::order to hold
huh some instruction::huh some instruction
operate and huh::operate and huh
huh input output::huh input output
output is important::output is important
important to connect::important to connect
connect the computer::connect the computer
means of input::means of input
output no information::output no information
information can enter::information can enter
huh the memory::huh the memory
essential to make::essential to make
data you process::data you process
process and produce::process and produce
produce the results::produce the results
talk about performance::talk about performance
performance considerations huh::performance considerations huh
talk of peripheral::talk of peripheral
computer system huh::computer system huh
data gets transformed::data gets transformed
understandable by huh::understandable by huh
computer in form::computer in form
form of huh::form of huh
talk about interfaces::talk about interfaces
means to connect::means to connect
connect the input::connect the input
input output huh::input output huh
output huh devices::output huh devices
devices or peripherals::devices or peripherals
peripherals to rest::peripherals to rest
output is carried::output is carried
first two aspects::first two aspects
huh is contributed::huh is contributed
talk of huh::talk of huh
huh your benefit::huh your benefit
benefit of performance::benefit of performance
program which takes::program which takes
takes hundred seconds::takes hundred seconds
consume ninety percent::consume ninety percent
huh ten percent::huh ten percent
means the data::means the data
data is brought::data is brought
brought in results::brought in results
out and huh::out and huh
technological innovations huh::technological innovations huh
huh the speed::huh the speed
speed of processor::speed of processor
improving and huh::improving and huh
fifty percent improvement::fifty percent improvement
improvement every year::improvement every year
seconds which huh::seconds which huh
reduced to sixty::reduced to sixty
sixty forty twenty-seven::sixty forty twenty-seven
forty twenty-seven eighteen::forty twenty-seven eighteen
eighteen and twelve::eighteen and twelve
improvement by factor::improvement by factor
half time huh::half time huh
performance remains unchanged::performance remains unchanged
total time huh::total time huh
hundred next state::hundred next state
seventy next state::seventy next state
ratio of hundred::ratio of hundred
improvement so huh::improvement so huh
huh not improving::huh not improving
performance could bring::performance could bring
expected performance improvements::expected performance improvements
performance improvements huh::performance improvements huh
improvements huh so::improvements huh so-
program is computation::program is computation
computation bound computation::computation bound computation
bound computation bound::bound computation bound
computation bound means::computation bound means
means that majority::means that majority
performing computation arithmetic::performing computation arithmetic
computation arithmetic logic::computation arithmetic logic
arithmetic logic decision::arithmetic logic decision
comparatively much small::comparatively much small
bound where process::bound where process-
essentially huh input::essentially huh input
huh scientific computation::huh scientific computation
scientific computation huh::scientific computation huh
computation huh lets::computation huh lets
lets say weather::lets say weather
prediction or nuclear::prediction or nuclear
crunching or huh::crunching or huh
huh heavy computation::huh heavy computation
business data processing::business data processing
data processing huh::data processing huh
processing huh or::processing huh or-
or or database::or- or database
database oriented application::database oriented application
spent in input::spent in input
output so huh::output so huh
lets say ratios::lets say ratios
ratios were reversed::ratios were reversed
ten percent part::ten percent part
huh its important::huh its important
improvement also huh::improvement also huh
perspective your requirement::perspective your requirement
requirement huh the::requirement huh the-
throughput oriented measure::throughput oriented measure
measure that means::measure that means
output gets done::output gets done
transfer gets done::transfer gets done
done per unit::done per unit
unit time huh::unit time huh
talk of amount::talk of amount
transfer in unit::transfer in unit
talk of number::talk of number
operations per unit::operations per unit
operation may involve::operation may involve
involve some transfer::involve some transfer
lets say maximize::lets say maximize
transfers take place::transfers take place
action you give::action you give
give some command::give some command
command and huh::command and huh
huh it takes::huh it takes
takes to respond::takes to respond
huh reservation system::huh reservation system
system for railways::system for railways
railways or airlines::railways or airlines
individual user huh::individual user huh
done as fast::done as fast
requirements are fed::requirements are fed
system to respond::system to respond
immediately so huh::immediately so huh
request are huh::request are huh
central database huh::central database huh
perspectives the huh::perspectives the huh
interested in lets::interested in lets
lets say total::lets say total
divide the total::divide the total
execution for computation::execution for computation
data or sending::data or sending
out the data::out the data
super computing application::super computing application
typically huh scientific::typically huh scientific
huh scientific application::huh scientific application
typically a computation::typically a computation
computation bound application::computation bound application
application but huh::application but huh
lots of results::lots of results
results or simulation::results or simulation
measured in kilo::measured in kilo
bytes or megabytes::bytes or megabytes
huh transaction processing::huh transaction processing
huh is important::huh is important
request for drawing::request for drawing
drawing some money::drawing some money
immediately so response::immediately so response
file server suppose::file server suppose
cluster of computers::cluster of computers
department and huh::department and huh
server would receive::server would receive
request for creating::request for creating
creating files opening::creating files opening
files opening files::files opening files
opening files reading::opening files reading
files reading writing::files reading writing
operation ok so::operation ok so-
depending upon huh::depending upon huh
describe your huh::describe your huh
huh in terms::huh in terms
huh while talking::huh while talking
discrepancy in terms::discrepancy in terms
terms of units::terms of units
we we talk::we- we talk
talking of kilo::talking of kilo
talk of memory::talk of memory
memory size huh::memory size huh
huh one kilo::huh one kilo
kilo byte huh::kilo byte huh
two four bytes::two four bytes
two is power::two is power
similarly one megabyte::similarly one megabyte
megabyte is huh::megabyte is huh
two four kilo::two four kilo
bytes or huh::bytes or huh
two huh tenth::two huh tenth
huh tenth power::huh tenth power
talking of thousands::talking of thousands
thousands and millions::thousands and millions
millions in huh::millions in huh
thousand kilo bytes::thousand kilo bytes
mind that huh::mind that huh
talking in memory::talking in memory
domain so huh::domain so huh
word of caution::word of caution
lets huh move::lets huh move
move towards huh::move towards huh
huh peripheral devices::huh peripheral devices
conceive a stored::conceive a stored
stored program computed::stored program computed
classical block diagram::classical block diagram
block diagram showing::block diagram showing
showing five units::showing five units
control arithmetic memory::control arithmetic memory
arithmetic memory input::arithmetic memory input
control and arithmetic::control and arithmetic
huh are huh::huh are huh
mentioned here huh::mentioned here huh
huh these form::huh these form
form the central::form the central
bringing in huh::bringing in huh
huh two levels::huh two levels
memory and main::memory and main
huh the interconnection::huh the interconnection
point to point::point to point
point here -like::point here -like
the the processor::the- the processor
huh in subsequent::huh in subsequent
two things involved::two things involved
devices or peripheral::devices or peripheral
controllers which huh::controllers which huh
devices and rest::devices and rest
care of multiple::care of multiple
devices and controllers::devices and controllers
connected so huh::connected so huh
talk of buses::talk of buses
buses and huh::buses and huh
huh other means::huh other means
means of connection::means of connection
finally we talk::finally we talk
attention on devices::attention on devices
devices and controller::devices and controller
things ok huh::things ok huh
physically the controller::physically the controller
controller and device::controller and device
speaking that devices::speaking that devices
lets say printer::lets say printer
printer you send::printer you send
bits and bytes::bits and bytes
printed page huh::printed page huh
huh the processor::huh the processor
processor and buses::processor and buses
hand and huh::hand and huh
mechanism so the::mechanism so the-
wh which takes::wh- which takes
care of movement::care of movement
variety of peripheral::variety of peripheral
ways so yo::ways so yo-
behavior in terms::behavior in terms
input that means::input that means
means bring information::means bring information
information into processor::information into processor
processor in memory::processor in memory
out or play::out or play
input device printer::input device printer
output device huh::output device huh
communicate or huh::communicate or huh
devices make processor::devices make processor
make processor talk::make processor talk
human programmer human::human programmer human
programmer human operator::programmer human operator
computer another machine::computer another machine
environment in general::environment in general
machine nor huh::machine nor huh
huh a human::huh a human
huh some kind::huh some kind
kind of internal::kind of internal
store information disk::store information disk
huh human huh::huh human huh
human huh operators::human huh operators
operators ok huh::operators ok huh
huh network controller::huh network controller
controller will connect::controller will connect
connect one machine::connect one machine
machine huh environment::machine huh environment
huh environment huh::huh environment huh
temperature or huh::temperature or huh
turn a motor::turn a motor
motor huh storage::motor huh storage
huh a disk::huh a disk
characterized in terms::characterized in terms
kind of data::kind of data
speed some devices::speed some devices
devices very slow::devices very slow
megabytes getting huh::megabytes getting huh
huh the device::huh the device
device is capable::device is capable
capable of transferring::capable of transferring
transferring so huh::transferring so huh
huh that capability::huh that capability
ca ca capacity::ca- ca- capacity
capacity gets utilized::capacity gets utilized
nt huh disk::nt huh disk
ready to transfer::ready to transfer
data gets transferred::data gets transferred
chunk one quantum::chunk one quantum
data which means::data which means
information goes bit::information goes bit
bit ok as::bit ok as-
bits sixteen bits::bits sixteen bits
huh one group::huh one group
kind of encoding::kind of encoding
encoding and huh::encoding and huh
huh whole variety::huh whole variety
current situation huh::current situation huh
set of peripheral::set of peripheral
years ago so::years ago so-
picture of huh::picture of huh
huh paint huh::huh paint huh
huh when huh::huh when huh
exposed to computer::exposed to computer
devices only peripheral::devices only peripheral
device at hand::device at hand
paper tape reader::paper tape reader
reader and paper::reader and paper
paper tape punch::paper tape punch
tape punch huh::tape punch huh
punch huh huh::punch huh huh
huh the paper::huh the paper
strip of paper::strip of paper
paper with holes::paper with holes
group of holes::group of holes
form one character::form one character
device called huh::device called huh
huh a typewriter::huh a typewriter
typewriter like device::typewriter like device
end so as::end so as-
run a punch::run a punch
sheet of paper::sheet of paper
paper so huh::paper so huh
computer is concerned::computer is concerned
directly connected peripherals::directly connected peripherals
peripherals are paper::peripherals are paper
punch so eve::punch so eve-
eve everything huh::eve- everything huh
form of paper::form of paper
tape the outputting::tape the outputting
system the compiler::system the compiler
punched on paper::punched on paper
tape and huh::tape and huh
larger room huh::larger room huh
typewriter like devices::typewriter like devices
prepare a programs::prepare a programs
you you print::you- you print
couple of years::couple of years
additional device introduced::additional device introduced
tape where program::tape where program
stored for repeated::stored for repeated
ten twenty character::ten twenty character
printer so li::printer so li-
li line printer::li- line printer
line printer huh::line printer huh
hundred lines huh::hundred lines huh
huh per minute::huh per minute
print one line::print one line
life little easier::life little easier
subsequently huh tape::subsequently huh tape
tape got replaced::tape got replaced
replaced by punched::replaced by punched
system also moved::system also moved
cards each card::cards each card
one one statement::one- one statement
put back huh::put back huh
huh new cards::huh new cards
change a card::change a card
editing in paper::editing in paper
paper tape environment::paper tape environment
tape environment huh::tape environment huh
huh was huh::huh was huh
cut the tape::cut the tape
tape and patch::tape and patch
surprising that people::surprising that people
huh some people::huh some people
tape and read::tape and read
punched holes huh::punched holes huh
holes huh disk::holes huh disk
huh disk drive::huh disk drive
disk drive was::disk drive was-
was again added::was- again added
faster then huh::faster then huh
tape the tape::tape the tape
sequential but huh::sequential but huh
track completely tape::track completely tape
huh twenty megabytes::huh twenty megabytes
memory was huh::memory was huh
huh thirty-two kilo::huh thirty-two kilo
thirty-two kilo bytes::thirty-two kilo bytes
bytes or sixty-four::bytes or sixty-four
bytes that order::bytes that order
variety of peripherals::variety of peripherals
peripherals and huh::peripherals and huh
huh with huh::huh with huh
kind of classification::kind of classification
earlier so lets::earlier so lets
introduction with human::introduction with human
beings ok human::beings ok human
programmer or operator::programmer or operator
putting here huh::putting here huh
rate or throughput::rate or throughput
throughput rate huh::throughput rate huh
huh these peripherals::huh these peripherals
peripherals are dealing::peripherals are dealing
design a complete::design a complete
huh a feel::huh a feel
things so huh::things so huh
devices like keyboard::devices like keyboard
keyboard and mouse::keyboard and mouse
limited by huh::limited by huh
type so it::type so it-
fraction of kilo::fraction of kilo
is the rate::is- the rate
faster than huh::faster than huh
input and voice::input and voice
huh the trend::huh the trend
developing these type::developing these type
type of capabilities::type of capabilities
capabilities voice input::capabilities voice input
voice input voice::voice input voice
input voice output::input voice output
voice output huh::voice output huh
output huh pictorial::output huh pictorial
huh pictorial input::huh pictorial input
pictorial input pictorial::pictorial input pictorial
input pictorial output::input pictorial output
pictorial output huh::pictorial output huh
output huh wh::output huh wh-
huh wh wh::huh wh- wh-
natural to human::natural to human
talk to computer::talk to computer
issue of peripheral::issue of peripheral
recognition of huh::recognition of huh
spoken or generating::spoken or generating
generating speech outputs::generating speech outputs
speech outputs huh::speech outputs huh
voice input huh::voice input huh
input huh voice::input huh voice
digitized and huh::digitized and huh
sequence of samples::sequence of samples
textbook are huh::textbook are huh
huh twenty bytes::huh twenty bytes
rate of information::rate of information
typically the speech::typically the speech
speech huh inputs::speech huh inputs
inputs are sampled::inputs are sampled
kilo ten sample::kilo ten sample
sample is huh::sample is huh
ten kilo bytes::ten kilo bytes
huh a plain::huh a plain
range of forty::range of forty
forty fifty huh::forty fifty huh
fifty huh thousand::fifty huh thousand
huh thousand samples::huh thousand samples
device is scanner::device is scanner
basically scan huh::basically scan huh
scan huh text::scan huh text
text or image::text or image
paper and huh::paper and huh
rates so huh::rates so huh
th the resolution::th- the resolution
accuracy here measured::accuracy here measured
measured in terms::measured in terms
terms of dots::terms of dots
dots per inch::dots per inch
huh six hundred::huh six hundred
th that means::th- that means
finely the information::finely the information
value is lower::value is lower
finer shaper picture::finer shaper picture
variety of output::variety of output
output devices line::output devices line
devices line printers::devices line printers
line printers laser::line printers laser
printers laser printers::printers laser printers
laser printers huh::laser printers huh
printers huh graphic::printers huh graphic
huh graphic display::huh graphic display
notice graphic display::notice graphic display
highly demanding huh::highly demanding huh
demanding huh peripheral::demanding huh peripheral
shown as sixty::shown as sixty
sixty thousand kilo::sixty thousand kilo
screen suppose huh::screen suppose huh
huh roughly speaking::huh roughly speaking
thousand by thousand::thousand by thousand
accurately thousand twenty-four::accurately thousand twenty-four
approximate calculation suppose::approximate calculation suppose
settings so huh::settings so huh
byte to represent::byte to represent
represent one pixel::represent one pixel
means three bytes::means three bytes
bytes per pixel::bytes per pixel
million pixel means::million pixel means
pixel means huh::pixel means huh
present on screen::present on screen
persistent display huh::persistent display huh
rate of repetition::rate of repetition
twenty-five huh frame::twenty-five huh frame
huh peripheral device::huh peripheral device
variety of huh::variety of huh
devices which connect::devices which connect
connect a computer::connect a computer
network of computers::network of computers
kinds of modems::kinds of modems
fax modem huh::fax modem huh
modem huh cable::modem huh cable
huh cable modem::huh cable modem
cable modem cable::cable modem cable
modem cable modem::modem cable modem
cable modem connects::cable modem connects
connects to huh::connects to huh
cable ok fax::cable ok fax
fax modem connects::fax modem connects
modem also connects::modem also connects
telephone line huh::telephone line huh
capable of carrying::capable of carrying
carrying digital information::carrying digital information
digital information huh::digital information huh
huh lan adapters::huh lan adapters
lan adapters local::lan adapters local
adapters local area::adapters local area
local area network::local area network
area network adapters::area network adapters
network adapters wired::network adapters wired
wired or wireless::wired or wireless
data rates huh::data rates huh
huh for lans::huh for lans
lans are higher::lans are higher
higher huh depending::higher huh depending
huh ten megabytes::huh ten megabytes
lan or hundred::lan or hundred
lan so typi::lan so typi-
translated into bytes::translated into bytes
reducing one order::reducing one order
variety of speeds::variety of speeds
speeds huh th::speeds huh th-
modem which works::modem which works
works on telephone::works on telephone
fifty-six kilo bauds::fifty-six kilo bauds
bauds is fifty-six::bauds is fifty-six
fifty-six kilo bits::fifty-six kilo bits
heard the term::heard the term
thing as bits::thing as bits
terms of communication::terms of communication
rates in terms::rates in terms
terms of bits::terms of bits
bauds are fifty-six::bauds are fifty-six
devices for storage::devices for storage
storage huh floppy::storage huh floppy
huh floppy disk::huh floppy disk
disk drive optical::disk drive optical
drive optical disk::drive optical disk
form of optical::form of optical
optical so huh::optical so huh
transparent and depending::transparent and depending
huh opaque region::huh opaque region
region and transparent::region and transparent
bits per huh::bits per huh
huh unit area::huh unit area
area and huh::area and huh
much of data::much- of data
out as huh::out as huh
huh the medium::huh the medium
devices so information::devices so information
end in serial::end in serial
long time storage::long time storage
hundred kilo bytes::hundred kilo bytes
drive to huh::drive to huh
ten thousand kilo::ten thousand kilo
huh hard disk::huh hard disk
huh another huh::huh another huh
list is huh::list is huh
drive the kind::drive the kind
carrying my lecture::carrying my lecture
lecture and plugged::lecture and plugged
plugged into huh::plugged into huh
huh a semiconductor::huh a semiconductor
type called flash::type called flash
exact figure huh::exact figure huh
figure huh lets::figure huh lets
disk drive huh::disk drive huh
group of rotating::group of rotating
shows two platters::shows two platters
huh each platter::huh each platter
typically is capable::typically is capable
capable of storing::capable of storing
form of polarity::form of polarity
polarity or magnetization::polarity or magnetization
set of read::set of read
read write heads::read write heads
rotation this end::rotation this end
head can move::head can move
center or move::center or move
tracks and huh::tracks and huh
huh these heads::huh these heads
heads get positioned::heads get positioned
positioned over huh::positioned over huh
huh some tracks::huh some tracks
heads are positioned::heads are positioned
positioned on track::positioned on track
track number ten::track number ten
movement of head::movement of head
head from track::head from track
track to track::track to track
movement of disk::movement of disk
disk is rotary::disk is rotary
reach some point::reach some point
head and head::head and head
effectively this moves::effectively this moves
done by information::done by information
recorded or read::recorded or read
surfaces eight recording::surfaces eight recording
surfaces and huh::surfaces and huh
point and so::point and so-
head will move::head will move
move outside outwards::move outside outwards
outwards or inwards::outwards or inwards
move from track::move from track
track the rotational::track the rotational
typically huh the::typically huh the-
huh the they::huh the- they-
they they follow::they- they follow
follow certain standards::follow certain standards
standards so huh::standards so huh
thirty-six hundred revolution::thirty-six hundred revolution
revolution per minute::revolution per minute
change to fifty-four::change to fifty-four
fifty-four hundred revolution::fifty-four hundred revolution
seventy-two hundred revolution::seventy-two hundred revolution
point three thousand::point three thousand
thousand or fif::thousand or fif-
fif fifteen thousand::fif- fifteen thousand
disk from sea::disk from sea
gate so huh::gate so huh
huh fifteen point::huh fifteen point
huh highest speed::huh highest speed
speed you find::speed you find
find these days::find these days
commercially and huh::commercially and huh
that that decides::that- that decides
decides how fast::decides how fast
data ok huh::data ok huh
huh it inferences::huh it inferences
takes to reach::takes to reach
reach the initial::reach the initial
disk is rotating::disk is rotating
right point huh::right point huh
huh the rate::huh the rate
determines the rate::determines the rate
encountering the data::encountering the data
capacity of huh::capacity of huh
speed is fifteen::speed is fifteen
seek time seek::seek time seek
reach the desired::reach the desired
interface also huh::interface also huh
transfer three twenty::transfer three twenty
interface huh th::interface huh th-
th that interface::th- that interface
disk you connect::disk you connect
rotating at huh::rotating at huh
actual data generated::actual data generated
huh very high::huh very high
huh somewhat slower::huh somewhat slower
half the speed::half the speed
huh but capacity::huh but capacity
capacity is larger::capacity is larger
larger so capacity::larger so capacity
huh two fifty::huh two fifty
huh buffer size::huh buffer size
size which means::size which means
processor or memory::processor or memory
directly its first::directly its first
size eight megabytes::size eight megabytes
transferred average latency::transferred average latency
average latency huh::average latency huh
latency so huh::latency so huh
point is determined::point is determined
determined by huh::determined by huh
huh two things::huh two things
case four point::case four point
point two millisecond::point two millisecond
millisecond and huh::millisecond and huh
revolutions per minute::revolutions per minute
average huh rotational::average huh rotational
huh rotational latency::huh rotational latency
point two milliseconds::point two milliseconds
two milliseconds huh::two milliseconds huh
huh the seek::huh the seek
milliseconds and huh::milliseconds and huh
move one track::move one track
reading eight point::reading eight point
point nine milliseconds::point nine milliseconds
milliseconds and writing::milliseconds and writing
writing ten point::writing ten point
basically a huh::basically a huh
reach the first::reach the first
transfer the data::transfer the data
point then things::point then things
things are faster::things are faster
buffer to disk::buffer to disk
thirty-seven mega bits::thirty-seven mega bits
buffer to host::buffer to host
interface this takes::interface this takes
takes hundred megabyte::takes hundred megabyte
transfer between disk::transfer between disk
disk and buffer::disk and buffer
busy in transferring::busy in transferring
busy in seeking::busy in seeking
disk is faster::disk is faster
in-between it spends::in-between it spends
moving to huh::moving to huh
huh the desired::huh the desired
parameters which define::parameters which define
define the storage::define the storage
storage layout huh::storage layout huh
layout huh cylinder::layout huh cylinder
sort of coinciding::sort of coinciding
platters so suppose::platters so suppose
platters on huh::platters on huh
huh you talk::huh you talk
talk of tenth::talk of tenth
cylinder so of::cylinder so of-
of often huh::of- often huh
write in terms::write in terms
number of tracks::number of tracks
tracks you talk::tracks you talk
talk of total::talk of total
number of cylinders::number of cylinders
figure the total::figure the total
number of heads::number of heads
huh each surface::huh each surface
surface is accessed::surface is accessed
huh then number::huh then number
track is divided::track is divided
divided into number::divided into number
number of sectors::number of sectors
western digital internet::western digital internet
digital internet site::digital internet site
rest huh number::rest huh number
sectors per track::sectors per track
huh total capacity::huh total capacity
bytes per sector::bytes per sector
half kilo byte::half kilo byte
huh lets huh::huh lets huh
important peripheral device::important peripheral device
device that disk::device that disk
communicate with disk::communicate with disk
huh from samsung::huh from samsung
views are shown::views are shown
shown huh interesting::shown huh interesting
huh interesting thing::huh interesting thing
view which shows::view which shows
shows how thin::shows how thin
twenty into twelve::twenty into twelve
hundred and huh::hundred and huh
huh the viewing::huh the viewing
limited viewing angle::limited viewing angle
wireless lan adapters::wireless lan adapters
serial bus we::serial bus we-
inside the computer::inside the computer
huh graphics card::huh graphics card
card so th::card so th-
cards which drive::cards which drive
drive really high::drive really high
high resolution monitors::high resolution monitors
show you huh::show you huh
huh changing scenes::huh changing scenes
scanners are characterized::scanners are characterized
number of colors::number of colors
forty-eight bit color::forty-eight bit color
color six bytes::color six bytes
bytes huh the::bytes huh the-
the these scanners::the- these scanners
document feeder attached::document feeder attached
attached that means::attached that means
put a bunch::put a bunch
bunch of papers::bunch of papers
huh automatically feed::huh automatically feed
huh inkjet printers::huh inkjet printers
effective and huh::effective and huh
continuously improving huh::continuously improving huh
number of dots::number of dots
figures here huh::figures here huh
huh direct network::huh direct network
direct network interface::direct network interface
picture my idea::picture my idea
inkjet printing mech::inkjet printing mech-
printing mech huh::printing mech- huh
mech huh printer::mech- huh printer
huh printer mechanism::huh printer mechanism
printer mechanism huh::printer mechanism huh
paper gets set::paper gets set
area where printing::area where printing
printing gets done::printing gets done
out here huh::out here huh
essentially paper feed::essentially paper feed
feed and huh::feed and huh
interface but huh::interface but huh
happened over last::happened over last
huh ink ve::huh ink ve-
drops of ink::drops of ink
huh huh thrown::huh huh thrown
thrown on paper::thrown on paper
paper to form::paper to form
huh high quality::huh high quality
high quality pictures::high quality pictures
huh piezoelectric mechanism::huh piezoelectric mechanism
huh that vibration::huh that vibration
finely controlled droplet::finely controlled droplet
controlled by huh::controlled by huh
huh the electrical::huh the electrical
an another view::an- another view
chamber where ink::chamber where ink
droplet gets thrown::droplet gets thrown
vibration of piezoelectric::vibration of piezoelectric
piezoelectric huh disk::piezoelectric huh disk
mechanism where huh::mechanism where huh
huh the ink::huh the ink
droplet is thrown::droplet is thrown
localized hitting process::localized hitting process
hitted by electrical::hitted by electrical
current and huh::current and huh
out so huh::out so huh
huh you remember::huh you remember
talking of resolution::talking of resolution
resolution of nature::resolution of nature
nature of twelve::nature of twelve
twelve hundred dots::twelve hundred dots
level of control::level of control
droplet to make::droplet to make
technology of peripheral::technology of peripheral
devices which existed::devices which existed
couple of decades::couple of decades
summarize we talked::summarize we talked
talked of huh::talked of huh
briefly we talked::briefly we talked
talked about throughput::talked about throughput
definition or response::definition or response
response time type::response time type
type of definition::type of definition
huh we looked::huh we looked
looked at variety::looked at variety
counts huh tired::counts huh tired
data transfer rates::data transfer rates
examples of peripherals::examples of peripherals
interfaces and buses::interfaces and buses
lecture on input::lecture on input
subsystem we talked::subsystem we talked
sense trans carrying::sense trans- carrying
trans carrying information::trans- carrying information
information from huh::information from huh
processor of memory::processor of memory
world and vice::world and vice
versa and transforming::versa and transforming
transforming the information::transforming the information
information into suitable::information into suitable
interfaced to huh::interfaced to huh
types of alternatives::types of alternatives
interconnect various subsystems::interconnect various subsystems
focus on buses::focus on buses
buses as huh::buses as huh
types of buses::types of buses
buses how buses::buses how buses
role and huh::role and huh
huh the information::huh the information
information which flows::information which flows
buses can follow::buses can follow
follow different types::follow different types
types of protocol::types of protocol
synchronous or asynchronous::synchronous or asynchronous
asynchronous synchronous means::asynchronous synchronous means
clock and asynchronous::clock and asynchronous
huh not synchronized::huh not synchronized
carry the event::carry the event
event sequence information::event sequence information
performance of huh::performance of huh
two different protocols::two different protocols
huh processor memory::huh processor memory
processor memory cache::processor memory cache
typically the case::typically the case
connecting to huh::connecting to huh
controller may connect::controller may connect
huh this open::huh this open
in-between which connects::in-between which connects
flow between huh::flow between huh
huh processor cache::huh processor cache
processor cache combination::processor cache combination
combination and memory::combination and memory
combination and devices::combination and devices
device directly huh::device directly huh
side or vice::side or vice
alternatives which exist::alternatives which exist
straight forward huh::straight forward huh
forward huh answer::forward huh answer
memory to talk::memory to talk
talk to huh::talk to huh
huh this device::huh this device
device so establish::device so establish
establish a connection::establish a connection
cache or processor::cache or processor
processor to talk::processor to talk
connection also connection::connection also connection
connection between cache::connection between cache
memory so whichever::memory so whichever
pairs of devices::pairs of devices
devices or subsystem::devices or subsystem
huh shared set::huh shared set
bus so bus::bus so bus
shared communication link::shared communication link
link where huh::link where huh
huh different types::huh different types
types of information::types of information
collection of huh::collection of huh
huh basically wires::huh basically wires
wires and signals::wires and signals
wires would carry::wires would carry
carry different types::carry different types
huh the data::huh the data
direction and control::direction and control
bus huh so::bus huh so-
huh the nature::huh the nature
nature of information::nature of information
huh the design::huh the design
bus is determined::bus is determined
organize these signals::organize these signals
number of wires::number of wires
information is carried::information is carried
carried the basic::carried the basic
wires to connect::wires to connect
huh one pair::huh one pair
anytime ok huh::anytime ok huh
huh they the::huh they the-
the the conversation::the- the- conversation
sequenced but it::sequenced but it-
convenient and cost::convenient and cost
huh to put::huh to put
sort of exchange::sort of exchange
cross bar switch::cross bar switch
bar switch huh::bar switch huh
huh here huh::huh here huh
huh make establish::huh make establish
make establish connections::make establish connections
connected and huh::connected and huh
in in general::in- in general
pairs so huh::pairs so- huh
so huh th::so- huh th-
point connection bus::point connection bus
bus and cross::bus and cross
bar in terms::bar in terms
cost bus offers::cost bus offers
expensive the throughput::expensive the throughput
throughput is low::throughput is low
low in case::low in case
case of bus::case of bus
higher in case::higher in case
require multiple ports::require multiple ports
two separate ports::two separate ports
distinct isolated connections::distinct isolated connections
connections and huh::connections and huh
four five parties::four five parties
th the cost::th- the cost
links but huh::links but huh
issue of multiple::issue of multiple
question is expansion::question is expansion
expansion that huh::expansion that huh
add more huh::add more huh
easier in case::easier in case
case of point::case of point
create more links::create more links
increase the capacity::increase the capacity
huh three specific::huh three specific
huh the limitation::huh the limitation
provide multiple buses::provide multiple buses
spectrum you form::spectrum you form
completely low cost::completely low cost
low cost low::low cost low
slightly improve things::slightly improve things
things by introducing::things by introducing
introducing more buses::introducing more buses
buses you incur::buses you incur
incur more cost::incur more cost
monolithic single cross::monolithic single cross
single cross bar::single cross bar
switch which connects::switch which connects
divide into huh::divide into huh
huh a fewer::huh a fewer
fewer but smaller::fewer but smaller
smaller cross bar::smaller cross bar
cross bar switches::cross bar switches
switches and huh::switches and huh
device to talk::device to talk
complete huh cross::complete huh cross
huh cross bar::huh cross bar
cross bar capability::cross bar capability
huh multiple smaller::huh multiple smaller
multiple smaller switches::multiple smaller switches
effectively huh reduce::effectively huh reduce
bar will make::bar will make
huh which means::huh which means
pairs ok huh::pairs ok huh
number of communicating::number of communicating
incur less lower::incur less lower
point onwards huh::point onwards huh
onwards huh lets::onwards huh lets
huh lets focus::huh lets focus
system huh the::system huh the-
the are the::the- are the-
buses or huh::buses or huh
mixes is characteristics::mixes is characteristics
processor memory bus::processor memory bus
bus whose responsibility::bus whose responsibility
memory huh wh::memory huh wh-
typically mean processor::typically mean processor
processor and cache::processor and cache
buses are required::buses are required
extremely high speed::extremely high speed
high speed buses::high speed buses
short in length::short in length
length that means::length that means
standard huh standardization::standard huh standardization
standardization is required::standardization is required
connect a large::connect a large
variety of subsystems::variety of subsystems
based on huh::based on huh
intel s pentium::intel s pentium
four so huh::four so huh
pentium s behavior::pentium s behavior
processor to huh::processor to huh
sense that huh::sense that huh
subsystem and plug-in::subsystem and plug-in
connected to peripheral::connected to peripheral
primarily it connects::primarily it connects
bus where huh::bus where huh
huh the main::huh the main
devices to rest::devices to rest
bus and huh::bus and huh
huh this bus::huh this bus
bus is com::bus is com-
carrying comparatively huh::carrying comparatively huh
comparatively huh lower::comparatively huh lower
huh lower huh::huh lower huh
lower huh speed::lower huh speed
speed of traffic::speed of traffic
larger in number::larger in number
ph physically spread::ph- physically spread
out this necessarily::out this necessarily
expected that huh::expected that huh
manufactured by huh::manufactured by huh
huh different manufacturers::huh different manufacturers
definition of huh::definition of huh
huh the bus::huh the bus
operation the bus::operation the bus
bus signals huh::bus signals huh
bus width data::bus width data
width data rate::width data rate
huh multiple parties::huh multiple parties
parties to design::parties to design
design their system::design their system
standard are required::standard are required
examples of standard::examples of standard
subsequent lectures huh::subsequent lectures huh
issue of huh::issue of huh
huh may connect::huh may connect
connect processor memory::connect processor memory
backpanel back back::backpanel back- back-
back back backplane::back- back- backplane
back backplane bus::back- backplane bus
bus a question::bus a question
reasons because earlier::reasons because earlier
system was designed::system was designed
designed was huh::designed was huh
box where huh::box where huh
huh each subsystem::huh each subsystem
connecting a single::connecting a single
front front side::front front side
huh a dis::huh a dis-
board or multiple::board or multiple
single chip memory::single chip memory
typically one board::typically one board
typically a bus::typically a bus
located the backside::located the backside
cabinet so no::cabinet so no-
system like huh::system like huh
pentium four huh::pentium four huh
which which huh::which- which huh
huh backplane bus::huh backplane bus
bus but in::bus but in-
in logical sense::in- logical sense
plugged in huh::plugged in huh
nt have huh::nt have huh
huh processor board::huh processor board
board and memory::board and memory
memory board plug-in::memory board plug-in
devices all connecting::devices all connecting
co complete subsystem::co- complete subsystem
physically integral part::physically integral part
transforms information huh::transforms information huh
memory will understand::memory will understand
huh in case::huh in case
case huh lets::case huh lets
laser printer huh::laser printer huh
characters of pictures::characters of pictures
huh binary encoded::huh binary encoded
connecting a processor::connecting a processor
output is organized::output is organized
organized in terms::organized in terms
buses so the::buses so the-
bus and backplane::bus and backplane
bus takes care::bus takes care
connected to processor::connected to processor
adapters or interfaces::adapters or interfaces
nt simply connect::nt simply connect
the the reason::the- the reason
wo the width::wo- the width
transferring thirty-two bit::transferring thirty-two bit
bit or sixty-four::bit or sixty-four
sixty-four bit data::sixty-four bit data
character by character::character by character
character or byte::character or byte
byte by byte::byte by byte
byte the speeds::byte the speeds
slower the speed::slower the speed
catering for processor::catering for processor
the they occupy::the- they occupy
occupy the bus::occupy the bus
bus mainly huh::bus mainly huh
usage so huh::usage so huh
expensive in terms::expensive in terms
terms of fits::terms of fits
fits huh design::fits huh design-
huh design cost::huh design- cost
huh various reasons::huh various reasons
seperate infact multiple::seperate infact multiple
infact multiple huh::infact multiple huh
storage devices disk::storage devices disk
disk and huh::disk and huh
care of huh::care of huh
huh serial peripheral::huh serial peripheral
serial peripheral lets::serial peripheral lets
connect your scanner::connect your scanner
huh grouping peripheral::huh grouping peripheral
grouping peripheral devices::grouping peripheral devices
types of bus::types of bus
adapters which connect::adapters which connect
connect backplane bus::connect backplane bus
kinds of adapters::kinds of adapters
definition of signals::definition of signals
signals the protocols::signals the protocols
protocols the speeds::protocols the speeds
ends and make::ends and make
make them match::make them match
match right huh::match right huh
so so infact::so- so infact
huh a typical::huh a typical
typical sophisticated system::typical sophisticated system
huh infact huh::huh infact huh
huh our pentium::huh our pentium
huh a bus::huh a bus
the the controllers::the- the controllers
th the device::th- the device
right that huh::right that huh
huh multiple devices::huh multiple devices
no now lets::no- now lets
sharing of information::sharing of information
information or sharing::information or sharing
bus by multiple::bus by multiple
devices so huh::devices so huh
connecting multiple devices::connecting multiple devices
multiple devices huh::multiple devices huh
firstly as huh::firstly as huh
huh would multiple::huh would multiple
question and then::question and then-
system together are::system together are-
are are multiple::are- are multiple
devices simultaneously speak::devices simultaneously speak
speak to memory::speak to memory
memory that means::memory that means
means the huh::means the huh
disk to memory::disk to memory
memory some file::memory some file
memory end huh::memory end huh
reading a word::reading a word
word or writing::word or writing
word so how::word so how-
lets say localized::lets say localized
the the disk::the- the disk
data is flowing::data is flowing
sequentialized but huh::sequentialized but huh
printer its flowing::printer its flowing
suppose this capacity::suppose this capacity
two different streams::two different streams
streams of data::streams of data
sort of inter::sort of inter-
designed this bus::designed this bus
traffic is coming::traffic is coming
road it merges::road it merges
highway so on::highway so on-
kind of structure::kind of structure
structure huh brings::structure huh brings
huh a huh::huh a- huh
printer busy huh::printer busy huh
utilized there huh::utilized there huh
huh capacity huh::huh capacity huh
it its managed::it- its managed
managed in terms::managed in terms
sequence so huh::sequence so huh
lets say coming::lets say coming
figure suppose backplane::figure suppose backplane
suppose backplane bus::suppose backplane bus
rate of twenty::rate of twenty
sake of argument::sake of argument
wide which means::wide which means
huh every fifty::huh every fifty
nano second huh::nano second huh
data each byte::data each byte
byte of data::byte of data
data occupies fifty::data occupies fifty
occupies fifty nano::occupies fifty nano
twent yeah fifty::twent- yeah fifty
fifty nano seconds::fifty nano seconds
huh each byte::huh each byte
occupies this bus::occupies this bus
bus for huh::bus for huh
hundred nano seconds::hundred nano seconds
coming one byte::coming one byte
two hundred nano::two hundred nano
huh every huh::huh every huh
huh thousand nano::huh thousand nano
data is coming::data is coming
someway sequenced right::someway sequenced right
sequenced right huh::sequenced right huh
inter at huh::inter- at huh
level or group::level or group
group of byte::group of byte
byte level huh::byte level huh
level huh tha::level huh tha-
tha that depends::tha- that depends
depends upon huh::depends upon huh
organize this bus::organize this bus
huh this adapter::huh this adapter
adapter may collect::adapter may collect
collect several bytes::collect several bytes
bytes and put::bytes and put
chance it puts::chance it puts
huh own packet::huh own packet
bus so huh::bus so huh
huh if bus::huh if bus
bus as higher::bus as higher
things in sequence::things in sequence
huh considering huh::huh considering huh
devices like disk::devices like disk
disk are sitting::disk are sitting
huh these ideas::huh these ideas
bus organization huh::bus organization huh
huh but lets::huh but lets
huh and lot::huh and lot
lot of variations::lot of variations
types of lines::types of lines
lines which tells::lines which tells
address since the::address since the-
words or memory::words or memory
bytes so huh::bytes so huh
show an output::show an output
transaction that means::transaction that means
device so huh::device so huh
shade huh memory::shade huh memory
reading or writing::reading or writing
writing so huh::writing so huh
huh if right::huh if right
half is shaded::half is shaded
begin with huh::begin with huh
data so me::data so me-
me memory huh::me- memory huh
huh internally pick::huh internally pick
word or byte::word or byte
addressed and bring::addressed and bring
data will flow::data will flow
lines and huh::lines and huh
huh this disk::huh this disk
disk is supposed::disk is supposed
data and absorb::data and absorb
absorb it write::absorb it write
write so huh::write so huh
huh the the::huh the- the-
sequence of huh::sequence of huh
huh information flowing::huh information flowing
data or memory::data or memory
shows the opposite::shows the opposite
operation where huh::operation where huh
disk and writing::disk and writing
address and told::address and told
write and huh::write and huh
disk is told::disk is told
told to read::told to read
data this data::data this data
out and memory::out and memory
nature of signals::nature of signals
huh this information::huh this information
organized huh asynchronous::organized huh asynchronous
asynchronous and synchronous::asynchronous and synchronous
synchronous in asynchronous::synchronous in asynchronous
involved to synchronize::involved to synchronize
huh the events::huh the events
party which involved::party which involved
lets huh lets::lets huh lets
case of reading::case of reading
memory will huh::memory will huh
send a signal::send a signal
calling as read::calling as read
signal is activated::signal is activated
activated the meaning::activated the meaning
operation and send::operation and send
send out data::send out data
out data huh::out data huh
data bus huh::data bus huh
active is carrying::active is carrying
carrying the address::carrying the address
parties that huh::parties that huh
bus is carrying::bus is carrying
sending the address::sending the address
receiving the address::receiving the address
change of read::change of read
memory would send::memory would send
send an acknowledgement::send an acknowledgement
huh in asynchronous::huh in asynchronous
asynchronous huh transaction::asynchronous huh transaction
response to read::response to read
nano seconds huh::nano seconds huh
huh this carries::huh this carries
noticed that read::noticed that read
huh this read::huh this read
originated from processor::originated from processor
shown by arrow::shown by arrow
done these events::done these events
huh since data::huh since data
bus becomes free::bus becomes free
huh signal shape::huh signal shape
signal shape indicating::signal shape indicating
indicating that huh::indicating that huh
occurring here huh::occurring here huh
huh an individual::huh an individual
bunch of signals::bunch of signals
change is occurring::change is occurring
worried about huh::worried about huh
huh what change::huh what change
level is huh::level is huh
huh level indicating::huh level indicating
indicating that bus::indicating that bus
bus is free::bus is free
huh these buses::huh these buses
buses are organized::buses are organized
organized as huh::organized as huh
high impedance state::high impedance state
impedance state huh::impedance state huh
state huh high::state huh high
huh high impedance::huh high impedance
impedance state means::impedance state means
bus is infact::bus is infact
connected its nei::connected its nei-
bus the bus::bus the bus
huh floating state::huh floating state
huh low impedance::huh low impedance
low impedance path::low impedance path
path to huh::path to huh
level nor huh::level nor huh
path to power::path to power
upto this point::upto this point
point was floating::point was floating
point the data::point the data
data is removed::data is removed
address is removed::address is removed
huh now huh::huh now huh
huh this sequence::huh this sequence
completed by huh::completed by huh
lowering the acknowledge::lowering the acknowledge
signal so memory::signal so memory
huh after raising::huh after raising
raising acknowledge signal::raising acknowledge signal
four which complete::four which complete
complete huh cycle::complete huh cycle
homework and huh::homework and huh
back with data::back with data
bus and activate::bus and activate
activate the signal::activate the signal
data is ready::data is ready
device to acknowledge::device to acknowledge
read the data::read the data
remove the data::remove the data
lower the signal::lower the signal
th the data::th- the data
device will lower::device will lower
lower the acknowledge::lower the acknowledge
cycle is completed::cycle is completed
recognized that data::recognized that data
four huh events::four huh events
lock lock manner::lock lock manner
bus to bus::bus to bus
variations in terms::variations in terms
terms of nomenclature::terms of nomenclature
pulse or negative::pulse or negative
negative pulse huh::negative pulse huh
event is timing::event is timing
event that event::event that event
huh transaction completes::huh transaction completes
will huh sort::will- huh sort
sort of read::sort of read
out aloud huh::out aloud huh
handshaking to occur::handshaking to occur
huh internally huh::huh internally huh
device and memory::device and memory
sequence of states::sequence of states
states and huh::states and huh
state it response::state it response
observed and huh::observed and huh
device and huh::device and huh
huh the requesting::huh the requesting
device is putting::device is putting
address on data::address on data
lines and asserts::lines and asserts
asserts read request::asserts read request
read request signal::read request signal
signal ok huh::signal ok huh
waiting for read::waiting for read
state when read::state when read
huh it observes::huh it observes
observes the data::observes the data
address it remembers::address it remembers
remembers the address::remembers the address
asserts the acknowledgement::asserts the acknowledgement
done this huh::done this huh
watching the acknowledgement::watching the acknowledgement
long as acknowledgement::long as acknowledgement
huh this proceeds::huh this proceeds
release the data::release the data
lines and reassert::lines and reassert
reassert read request::reassert read request
acknowledgement signal huh::acknowledgement signal huh
signal huh memory::signal huh memory
remain in read::remain in read
read request state::read request state
remain in state::remain in state
long as read::long as read
notice that huh::notice that huh
th the transitions::th- the transitions
two state diagrams::two state diagrams
diagrams are occurring::diagrams are occurring
follow these diagrams::follow these diagrams
previous huh wave::previous huh wave
huh wave form::huh wave form
form is captured::form is captured
indicating how huh::indicating how huh
huh this action::huh this action
out inside the::out inside the-
inside the memory::inside the- memory
memory and inside::memory and inside
device so the::device so the-
huh observe occurrences::huh observe occurrences
carry out state::carry out state
state changes inside::state changes inside
synchronous bus huh::synchronous bus huh
buses and multiple::buses and multiple
multiple synchronous buses::multiple synchronous buses
twenty megahertz clock::twenty megahertz clock
hundred megahertz clock::hundred megahertz clock
case all events::case all events
timed by huh::timed by huh
huh the clock::huh the clock
show huh lets::show huh lets
lets say raising::lets say raising
occur here huh::occur here huh
cycle where transaction::cycle where transaction
signal called start::signal called start
start and huh::start and huh
cycle or mu::cycle or mu-
mu multiple integral::mu- multiple integral
multiple integral number::multiple integral number
cycle most common::cycle most common
clock cycles huh::clock cycles huh
device can make::device can make
make this assumption::make this assumption
assumption that bus::assumption that bus
waiting to check::waiting to check
check whether memory::check whether memory
huh no confirmation::huh no confirmation
pick up data::pick up data
assumed that huh::assumed that huh
huh memory understands::huh memory understands
device huh sitting::device huh sitting
form there huh::form there huh
fixed clock cycle::fixed clock cycle
compare and huh::compare and huh
huh how throughput::huh how throughput
determined huh depending::determined huh depending
so so lets::so- so lets
huh asynchronous bus::huh asynchronous bus
running at fifty::running at fifty
megahertz and huh::megahertz and huh
huh the address::huh the address
means one cycle::means one cycle
cycle memory takes::cycle memory takes
seconds to respond::seconds to respond
respond after bus::respond after bus
huh after address::huh after address
fixed four clock::fixed four clock
cycles and suppose::cycles and suppose
suppose huh fifty::suppose huh fifty
huh fifty nano::huh fifty nano
required to send::required to send
huh entire sequence::huh entire sequence
clear one cycle::clear one cycle
cycle you send::cycle you send
address then huh::address then huh
huh four cycle::huh four cycle
cycle to huh::cycle to huh
require six cycles::require six cycles
transferring one word::transferring one word
word lets assume::word lets assume
bytes are transferred::bytes are transferred
four bytes divided::four bytes divided
point three megabytes::point three megabytes
bandwidth or bus::bandwidth or bus
basic operations lets::basic operations lets
similar speed asynchronous::similar speed asynchronous
speed asynchronous bus::speed asynchronous bus
huh no constraint::huh no constraint
constraint on timing::constraint on timing
timing in term::timing in term
term in terms::term in terms
event is coming::event is coming
coming in response::coming in response
sake of calculation::sake of calculation
calculation lets assume::calculation lets assume
huh is taking::huh is taking
minimum of forty::minimum of forty
forty nano seconds::forty nano seconds
minimum time huh::minimum time huh
four five etcetera::four five etcetera
huh these pertain::huh these pertain
chain of events::chain of events
huh first step::huh first step
first step huh::first step huh
step huh takes::step huh takes
huh takes forty::huh takes forty
takes forty nano::takes forty nano
seconds its huh::seconds its huh
huh basically delay::huh basically delay
delay one event::delay one event
huh this delay::huh this delay
delay this interval::delay this interval
interval this interval::interval this interval
interval effectively huh::interval effectively huh
huh the interval::huh the interval
availability of data::availability of data
protocol is concerned::protocol is concerned
concerned is forty::concerned is forty
forty plus forty::forty plus forty
quantities three times::quantities three times
requiring forty nano::requiring forty nano
huh the total::huh the total
upto three sixty::upto three sixty
sixty nano seconds::sixty nano seconds
bus is huh::bus is huh
huh one word::huh one word
bandwidth of eleven::bandwidth of eleven
point one megabyte::point one megabyte
huh well huh::huh well huh
indicating is synchronous::indicating is synchronous
picked up huh::picked up huh
th the relative::th- the relative
huh synchronous buses::huh synchronous buses
faster because huh::faster because huh
waiting for huh::waiting for huh
sensing the signals::sensing the signals
signals and acknowledging::signals and acknowledging
increase bus bandwidth::increase bus bandwidth
increase the bus::increase the bus
thirty-two bit wide::thirty-two bit wide
bit wide bus::bit wide bus
sixty-four bit wide::sixty-four bit wide
twenty-eight bit wide::twenty-eight bit wide
huh block transfer::huh block transfer
transfer between cache::transfer between cache
transfer huh multi::transfer huh multi
huh multi block::huh multi block
multi block words::multi block words
transfer multiple words::transfer multiple words
split transaction split::split transaction split
transaction split transaction::transaction split transaction
split transaction means::split transaction means
huh between initiation::huh between initiation
transfer and completion::transfer and completion
noticed that buses::noticed that buses
buses lie unutilized::buses lie unutilized
delay is large::delay is large
initiate another transaction::initiate another transaction
transaction gets splits::transaction gets splits
in two parts::in- two parts
two parts initiation::two parts initiation
parts initiation part::parts initiation part
huh le lets::huh le- lets
le lets huh::le- lets huh
word but multiple::word but multiple
transferred so huh::transferred so huh
talk of block::talk of block
block size varying::block size varying
sixty-four bits synchronous::sixty-four bits synchronous
bits synchronous bus::bits synchronous bus
synchronous bus frequency::synchronous bus frequency
two hundred megahertz::two hundred megahertz
hundred megahertz takes::hundred megahertz takes
takes one clock::takes one clock
clock to send::clock to send
send either data::send either data
address two clocks::address two clocks
clocks between huh::clocks between huh
huh each bus::huh each bus
two clock cycle::two clock cycle
bus huh memory::bus huh memory
huh memory access::huh memory access
memory access takes::memory access takes
access takes huh::access takes huh
first four words::first four words
words but subsequent::words but subsequent
huh faster lets::huh faster lets
lets say subsequent::lets say subsequent
two twenty nano::two twenty nano
inter-leaving or huh::inter-leaving or huh
huh page mode::huh page mode
huh bus transfer::huh bus transfer
transfer and reading::transfer and reading
reading next data::reading next data
overlap that means::overlap that means
huh one data::huh one data
bus meanwhile memory::bus meanwhile memory
memory is working::memory is working
word are overlapping::word are overlapping
find the bandwidth::find the bandwidth
bandwidth and latency::bandwidth and latency
latency for transferring::latency for transferring
two fifty-six words::two fifty-six words
words ok total::words ok total
words which huh::words which huh
blocks of size::blocks of size
four or blocks::four or blocks
require sixty-four transactions::require sixty-four transactions
count the cycle::count the cycle
sending address huh::sending address huh
address huh forty::address huh forty
forty for memory::forty for memory
clock period huh::clock period huh
huh we send::huh we send
cycles of idle::cycles of idle
cycles are forty-five::cycles are forty-five
cycles is sixty-four::cycles is sixty-four
multiplied by forty-five::multiplied by forty-five
require for entire::require for entire
words and huh::words and huh
huh each cycle::huh each cycle
latency in terms::latency in terms
huh nano seconds::huh nano seconds
effectively the bus::effectively the bus
point one megabytes::point one megabytes
huh four word::huh four word
blocks same exercise::blocks same exercise
sixteen word blocks::sixteen word blocks
blocks the number::blocks the number
number of transactions::number of transactions
sixteen and huh::sixteen and huh
sixteen sixteen words::sixteen sixteen words
sixteen words huh::sixteen words huh
fifty-seven the total::fifty-seven the total
cycles is sixteen::cycles is sixteen
number of transaction::number of transaction
transaction into fifty-seven::transaction into fifty-seven
latency this number::latency this number
rate sixteen transactions::rate sixteen transactions
means three point::means three point
bandwidth is huh::bandwidth is huh
two twenty-four point::two twenty-four point
huh and summarize::huh and summarize
interconnection alternatives huh::interconnection alternatives huh
alternatives huh bus::alternatives huh bus
huh most popular::huh most popular
buses namely backplane::buses namely backplane
backplane bus processor::backplane bus processor
bus processor memory::bus processor memory
huh standard buses::huh standard buses
standard buses standard::standard buses standard
applicable across multiple::applicable across multiple
organizations whereas processor::organizations whereas processor
processor memory buses::processor memory buses
buses are proprietary::buses are proprietary
proprietary and backplane::proprietary and backplane
types of protocols::types of protocols
synchronous and asynchronous::synchronous and asynchronous
generally faster huh::generally faster huh
effect of huh::effect of huh
choosing a suitable::choosing a suitable
suitable bla block::suitable bla- block
bla block size::bla- block size
size in terms::size in terms
improves the bus::improves the bus
output subsystem consist::output subsystem consist
consist of huh::consist of huh
connected to huh::connected to huh
system through buses::system through buses
buses so buses::buses so buses
typically the medium::typically the medium
medium of huh::medium of huh
communication between peripherals::communication between peripherals
buses in terms::buses in terms
throughput or bandwidth::throughput or bandwidth
discussion huh talk::discussion huh talk
talk about huh::talk about huh
issue of bus::issue of bus
bus we noticed::bus we noticed
factors which huh::factors which huh
exploited to increase::exploited to increase
bus that means::bus that means
bit of data::bit of data
huh is carried::huh is carried
buses sixteen bit::buses sixteen bit
sixteen bit buses::sixteen bit buses
buses thirty-two bit::buses thirty-two bit
thirty-two bit buses::thirty-two bit buses
bit buses sixty-four::bit buses sixty-four
the the rate::the- the rate
proportional to width::proportional to width
bus maybe multiplexed::bus maybe multiplexed
lines are multiplexed::lines are multiplexed
multiplexed that means::multiplexed that means
bus or data::bus or data
communicated so huh::communicated so huh
huh provide separate::huh provide separate
provide separate lines::provide separate lines
lines which means::lines which means
means additional cost::means additional cost
asynchronous synchronous protocol::asynchronous synchronous protocol
synchronous protocol implies::synchronous protocol implies
implies that huh::implies that huh
events occur huh::events occur huh
huh at active::huh at active
times are measured::times are measured
asynchronous bus huh::asynchronous bus huh
bus huh th::bus huh th-
interlocked response huh::interlocked response huh
request from huh::request from huh
memory or processor::memory or processor
huh one event::huh one event
event occurs huh::event occurs huh
huh which triggers::huh which triggers
triggers another event::triggers another event
event that triggers::event that triggers
events get chained::events get chained
chained or interlocked::chained or interlocked
huh allow arbitrary::huh allow arbitrary
event these protocols::event these protocols
lower as compared::lower as compared
compared to synchronous::compared to synchronous
th the higher::th- the higher
higher speed buses::higher speed buses
buses typically follow::buses typically follow
typically follow huh::typically follow huh
follow huh synchronous::follow huh synchronous
huh synchronous approach::huh synchronous approach
approach we huh::approach we huh
huh the block::huh the block
transfer larger blocks::transfer larger blocks
larger blocks chunks::larger blocks chunks
chunks of larger::chunks of larger
throughput is faster::throughput is faster
typically the bus::typically the bus
bus is occupied::bus is occupied
starting a transaction::starting a transaction
transactions or initiate::transactions or initiate
initiate other transactions::initiate other transactions
split transaction protocol::split transaction protocol
device another mechanism::device another mechanism
mechanism to improve::mechanism to improve
improve the bus::improve the bus
throughput so lets::throughput so lets
back to huh::back to huh
effect on bus::effect on bus
asynchronous handshaking protocol::asynchronous handshaking protocol
sixty-four bit synchronous::sixty-four bit synchronous
bit synchronous bus::bit synchronous bus
varying the block::varying the block
cycle to send::cycle to send
require two clock::require two clock
cycles between huh::cycles between huh
bus and memory::bus and memory
accessed is capable::accessed is capable
capable of huh::capable of huh
huh sending first::huh sending first
four words huh::four words huh
huh at huh::huh at huh
additional word huh::additional word huh
word huh requires::word huh requires
huh requires twenty::huh requires twenty
requires twenty nano::requires twenty nano
huh a mechanism::huh a mechanism
words within huh::words within huh
huh twenty nano::huh twenty nano
means when huh::means when huh
groups of sixteen::groups of sixteen
calculation of finding::calculation of finding
finding the latency::finding the latency
latency that means::latency that means
means how long::means how long
takes to transfer::takes to transfer
width that means::width that means
means the total::means the total
total huh rate::total huh rate
possibilities the block::possibilities the block
words or sixteen::words or sixteen
transfer that transaction::transfer that transaction
transferring four words::transferring four words
done sixty-four times::done sixty-four times
transferring sixteen words::transferring sixteen words
done sixteen times::done sixteen times
make a total::make a total
cycles each transaction::cycles each transaction
transaction takes huh::transaction takes huh
takes huh involves::takes huh involves
huh involves sending::huh involves sending
sending an address::sending an address
address which takes::address which takes
clock then allowing::clock then allowing
memory to access::memory to access
access the data::access the data
data which takes::data which takes
takes forty clocks::takes forty clocks
hundred megahertz means::hundred megahertz means
means five nano::means five nano
period so forty::period so forty
forty clock periods::forty clock periods
clock periods huh::clock periods huh
memory is fetching::memory is fetching
fetching four words::fetching four words
bus is sixty-four::bus is sixty-four
wide ok lets::wide ok lets
takes two hundred::takes two hundred
takes twenty nano::takes twenty nano
two word wide::two word wide
requires two cycles::requires two cycles
cycles to send::cycles to send
send this data::send this data
huh between huh::huh between huh
huh one transfer::huh one transfer
huh these figures::huh these figures
huh sending huh::huh sending huh
huh four words::huh four words
words only huh::words only huh
multiplying this part::multiplying this part
size in words::size in words
takes forty-five word::takes forty-five word-
forty-five word forty-five::forty-five word- forty-five
word forty-five cycles::word- forty-five cycles
takes fifty-seven cycles::takes fifty-seven cycles
cycle per transaction::cycle per transaction
transactions to make::transactions to make
words so forty-five::words so forty-five
multiplied by sixty-four::multiplied by sixty-four
product of the::product of the-
seconds by multiplying::seconds by multiplying
total time required::total time required
required to transfer::required to transfer
fifty-six to read::fifty-six to read
talk of transaction::talk of transaction
means different thing::means different thing
transaction here means::transaction here means
sending four words::sending four words
four words transaction::four words transaction
means sending sixteen::means sending sixteen
sending sixteen words::sending sixteen words
words so number::words so number
huh thousand times::huh thousand times
huh four point::huh four point
four million transactions::four million transactions
bytes being transferred::bytes being transferred
bandwidth or throughput::bandwidth or throughput
throughput is huh::throughput is huh
lets say measured::lets say measured
measured in megabytes::measured in megabytes
fifty-six words multiplied::fifty-six words multiplied
four which means::four which means
throughput so seventy::throughput so seventy
seventy one point::seventy one point
throughput there so::throughput there so-
thing we talked::thing we talked
suppose one transaction::suppose one transaction
transaction huh begins::transaction huh begins
right and sending::right and sending
sending a request::sending a request
request to memory::request to memory
in-between huh the::in-between huh the-
the the device::the- the device
released and made::released and made
signals that data::signals that data
ready or huh::ready or huh
synchronous you wait::synchronous you wait
bus and read::bus and read
data now in-between::data now in-between
transaction to begin::transaction to begin
link the beginnings::link the beginnings
means the device::means the device
device which send::device which send
send a request::send a request
request here huh::request here huh
huh s bu::huh s- bu-
obvious that utilization::obvious that utilization
huh many huh::huh many huh
huh parties connected::huh parties connected
typically a concept::typically a concept
concept of master::concept of master
master and slave::master and slave
initiates a transaction::initiates a transaction
request for read::request for read
write and slave::write and slave
situation processor talking::situation processor talking
talking to memory::talking to memory
memory so processor::memory so processor
data containing instructions::data containing instructions
instructions ok or::instructions ok or-
write a block::write a block
memory huh conversation::memory huh conversation
huh conversation processor::huh conversation processor
master and memory::master and memory
slave another scenario::slave another scenario
huh a disk::huh a- disk
write into memory::write into memory
memory or read::memory or read
case the disk::case the disk
disk drive controller::disk drive controller
scenario that processor::scenario that processor
transfer so processor::transfer so processor
instruct the disk::instruct the disk
huh set number::huh set number
send one thousand::send one thousand
bytes of data::bytes of data
data to memory::data to memory
huh initiation process::huh initiation process
huh among masters::huh among masters
processors or peripherals::processors or peripherals
peripherals and slaves::peripherals and slaves
peripherals or memory::peripherals or memory
memory so peripherals::memory so peripherals
slaves while talking::slaves while talking
talking to processor::talking to processor
master while talking::master while talking
huh multiple masters::huh multiple masters
huh after bus::huh after bus
master another master::master another master
arrangement of priorities::arrangement of priorities
priorities so huh::priorities so huh
huh this priority::huh this priority
resolve the conflict::resolve the conflict
conflict when multiple::conflict when multiple
huh would depend::huh would depend
depend upon huh::depend upon huh
fairness is es::fairness is es-
es essential huh::es- essential huh
huh whether huh::huh whether huh
party as low::party as low
priority or higher::priority or higher
huh reasonably distributed::huh reasonably distributed
four different mechanisms::four different mechanisms
mechanisms called daisy::mechanisms called daisy
daisy chaining centralized::daisy chaining centralized
chaining centralized parallel::chaining centralized parallel
centralized parallel arbitration::centralized parallel arbitration
parallel arbitration distributed::parallel arbitration distributed
arbitration distributed arbitration::arbitration distributed arbitration
arbitration and arbitration::arbitration and arbitration
arbitration by collision::arbitration by collision
detection so which::detection so which-
huh different mechanisms::huh different mechanisms
scenario showing huh::scenario showing huh
approach called daisy::approach called daisy
chain for huh::chain for huh
resolving the huh::resolving the huh
huh accessed issued::huh accessed issued
access the bus::access the bus
showing the bus::showing the bus
bus completely bus::bus completely bus
lines and address::lines and address
define the discipline::define the discipline
discipline of transfer::discipline of transfer
control of bus::control of bus
master we assume::master we assume
huh a block::huh a block
bus arbiter huh::bus arbiter huh
devices are arranged::devices are arranged
arranged in huh::arranged in huh
huh decreasing order::huh decreasing order
order of priority::order of priority
priority highest priority::priority highest priority
priority is sitting::priority is sitting
lowest priority sits::lowest priority sits
priority sits farthest::priority sits farthest
huh bus request::huh bus request
bus request signals::bus request signals
signals and bus::signals and bus
bus release signals::bus release signals
device can send::device can send
bus huh device::bus huh device
bus any longer::bus any longer
bus grant signal::bus grant signal
arbiter is chained::arbiter is chained
chain so grant::chain so grant
highest priority device::highest priority device
device say device::device say device
two in response::two in response
arbiter will send::arbiter will send
send a grant::send a grant
device one doesn::device one doesn
signal to pass::signal to pass
device two device::device two device
huh grant signal::huh grant signal
blocked if the::blocked if the-
the are multiple::the- are multiple
multiple devices requesting::multiple devices requesting
arbiter will block::arbiter will block
huh down stream::huh down stream
priorities are managed::priorities are managed
sequence of events::sequence of events
raising this line::raising this line
line bus request::line bus request
bus request line::bus request line
convention but huh::convention but huh
sake of explanation::sake of explanation
assuming that huh::assuming that huh
huh the request::huh the request
device is requesting::device is requesting
requesting in response::requesting in response
free the huh::free the huh
arbiter will activate::arbiter will activate
activate the grant::activate the grant
signal and huh::signal and huh
lower the request::lower the request
activate release signal::activate release signal
assuming that release::assuming that release
arbiter huh sees::arbiter huh sees
sees that bus::sees that bus
lower the grant::lower the grant
lower its release::lower its release
acquiring the bus::acquiring the bus
bus and releasing::bus and releasing
releasing the bus::releasing the bus
bus now lets::bus now lets
happen if the::happen if the-
requesting the bus::requesting the bus
lets say bus::lets say bus
bus was free::bus was free
bus arbiter notices::bus arbiter notices
bus now huh::bus now huh
imagine that imagine::imagine that imagine
release and request::release and request
request are wired::request are wired
huh each device::huh each device
device may send::device may send
send its individual::send its individual
devices are requesting::devices are requesting
bus arbiter doesn::bus arbiter doesn
doesn t worry::doesn t worry
simply huh activates::simply huh activates
activates the grant::activates the grant
grant line indicating::grant line indicating
naturally the device::naturally the device
chain will wait::chain will wait
bus huh wh::bus huh wh-
priority device completes::priority device completes
completes the cycle::completes the cycle
but but huh::but- but huh
huh this line::huh this line
line will stay::line will stay
high because huh::high because huh
lower priority device::lower priority device
bus huh grant::bus huh grant
lowered down release::lowered down release
lowered down huh::lowered down huh
give the grant::give the grant
huh eventually huh::huh eventually huh
huh if multiple::huh if multiple
devices had requested::devices had requested
huh one device::huh one device
device gets served::device gets served
served then huh::served then huh
happen if huh::happen if huh
higher priority device::higher priority device
device comes huh::device comes huh
find that grant::find that grant
huh the grant::huh the grant
situation because huh::situation because huh
huh the high::huh the high
high priority device::high priority device
device will hijack::device will hijack
huh while low::huh while low
low priority device::low priority device
avoid that huh::avoid that huh
we we follow::we- we follow
follow a rule::follow a rule
rule that huh::rule that huh
signal is sufficient::signal is sufficient
sufficient to ensure::sufficient to ensure
priority device coming::priority device coming
device coming in-between::device coming in-between
in-between when bus::in-between when bus
priority device huh::priority device huh
find grant signal::find grant signal
mentioned raising edge::mentioned raising edge
signal is significant::signal is significant
level th the::level th- the-
huh release signal::huh release signal
request signal huh::request signal huh
usage of bus::usage of bus
huh a device::huh a device
removed its request::removed its request
persisting you wont::persisting you wont
wont know huh::wont know huh
huh this change::huh this change
change so you::change so you-
arrangement is huh::arrangement is huh
huh very simple::huh very simple
simple and inexpensive::simple and inexpensive
request and release::request and release
release and activates::release and activates
chain is long::chain is long
propagation huh the::propagation huh the-
delay so huh::delay so huh
signal as changed::signal as changed
huh the operation::huh the operation
back to previous::back to previous
previous diagram huh::previous diagram huh
happen that huh::happen that huh
huh high priority::huh high priority
huh a low::huh a low
suppose huh device::suppose huh device
huh two releases::huh two releases
two releases grant::two releases grant
huh meanwhile request::huh meanwhile request
huh getting passed::huh getting passed
high priority devices::high priority devices
devices at low::devices at low
disallowed to reacquire::disallowed to reacquire
sees the request::sees the request
line go low::line go low
line will continue::line will continue
line as serve::line as serve
line goes low::line goes low
huh no device::huh no device
requesting that means::requesting that means
requested some point::requested some point
huh is served::huh is served
served so huh::served so huh
mentioned about arbitration::mentioned about arbitration
huh many devices::huh many devices
separate request line::separate request line
device and separate::device and separate
separate grant line::separate grant line
line for device::line for device
grant line request::grant line request
line request line::line request line
two grant line::two grant line
two request line::two request line
logic is contained::logic is contained
arbiter arbiter huh::arbiter arbiter huh
huh is supposed::huh is supposed
request and issue::request and issue
issue them grants::issue them grants
individually so huh::individually so huh
huh then the::huh then the-
fair manner huh::fair manner huh
manner huh assign::manner huh assign
assign the bus::assign the bus
bus or give::bus or give
devices huh turn::devices huh turn
turn by turn::turn by turn
turn alright huh::turn alright huh
th the priority::th- the priority
lowest priority but::lowest priority but-
priority but but::priority but- but-
but but huh::but- but- huh
but huh th::but- huh th-
th the position::th- the position
huh the priority::huh the priority
arbitrarily define priorities::arbitrarily define priorities
devices and huh::devices and huh
resolution of multiple::resolution of multiple
kind of huh::kind of huh
arbiter so arbiter::arbiter so arbiter
complex then huh::complex then huh
distribute this task::distribute this task
task of arbitration::task of arbitration
huh democratic kind::huh democratic kind
kind of system::kind of system
sort of negotiate::sort of negotiate
huh collectively decide::huh collectively decide
bus so you::bus so you-
devices can send::devices can send
send their request::send their request
put their identity::put their identity
huh specific lines::huh specific lines
lines so ea::lines so ea-
huh the identities::huh the identities
device two sees::device two sees
sees that device::sees that device
requesting and device::requesting and device
requesting and huh::requesting and huh
huh the priorities::huh the priorities
devices are understood::devices are understood
manner all devices::manner all devices
bus what request::bus what request
detection so th::detection so th-
huh shared medium::huh shared medium
devices are connected::devices are connected
notice each device::notice each device
device simply sees::device simply sees
initiate your transaction::initiate your transaction
multiple huh devices::multiple huh devices
huh devices happen::huh devices happen
check if huh::check if huh
huh did collide::huh did collide
collision takes place::collision takes place
collide that means::collide that means
indication of collision::indication of collision
huh to ensure::huh to ensure
huh both devices::huh both devices
devices which collided::devices which collided
delay is huh::delay is huh
huh five microseconds::huh five microseconds
lost in huh::lost in huh
collision so huh::collision so huh
coming from huh::coming from huh
devices and priorities::devices and priorities
priorities are fixed::priorities are fixed
kind i mentioned::kind i mentioned
mentioned earlier huh::mentioned earlier huh
huh then starvation::huh then starvation
starvation could occur::starvation could occur
huh re request::huh re- request
request actually huh::request actually huh
huh get held::huh get held
modifying the priorities::modifying the priorities
dynamically the priorities::dynamically the priorities
priorities could rotate::priorities could rotate
device which lets::device which lets
bus huh kind::bus huh kind
queue and stand::queue and stand
huh one scenario::huh one scenario
typically a proprietary::typically a proprietary
proprietary bus connects::proprietary bus connects
bus connects processor::bus connects processor
connects processor memory::connects processor memory
backplane huh bus::backplane huh bus
indirectly and processor::indirectly and processor
indirectly all connected::indirectly all connected
huh disk drives::huh disk drives
huh maybe huh::huh maybe huh
huh printers scanners::huh printers scanners
ty typically huh::ty- typically huh
buses are standard::buses are standard
standard processor memory::standard processor memory
proprietary backplane buses::proprietary backplane buses
huh standard huh::huh standard huh
highest at processor::highest at processor
memory bus level::memory bus level
level and lowest::level and lowest
bus level huh::bus level huh
buses will tend::buses will tend
huh would tend::huh would tend
asynchronous but huh::asynchronous but huh
lines backplane buses::lines backplane buses
generally synchronous huh::generally synchronous huh
huh oversimplified situation::huh oversimplified situation
real system huh::real system huh
system huh thing::system huh thing
typical huh pentium::typical huh pentium
four huh type::four huh type
two huh controllers::two huh controllers
motherboard is built::motherboard is built
huh which interface::huh which interface
motherboard so the::motherboard so the-
two complex chips::two complex chips
memory control hub::memory control hub
graphics memory control::graphics memory control
hub so huh::hub so huh
side it connects::side it connects
connects to memory::connects to memory
simply a video::simply a video
huh this connects::huh this connects
peripherals including huh::peripherals including huh
bus and the::bus and the-
variety of devices::variety of devices
lan ok huh::lan ok huh
diagram so huh::diagram so huh
cases of frequencies::cases of frequencies
huh the hub::huh the hub
front side bus::front side bus
designed to connect::designed to connect
run at huh::run at huh
huh three thirty-three::huh three thirty-three
four hundred megahertz::four hundred megahertz
thirty-three megahertz huh::thirty-three megahertz huh
basically disk drive::basically disk drive
drive huh interfaces::drive huh interfaces
huh interfaces huh::huh interfaces huh
kind of serial::kind of serial
talked of adapters::talked of adapters
connecting multiple buses::connecting multiple buses
buses ok huh::buses ok huh
huh device high::huh device high
device high speed::device high speed
high speed devices::high speed devices
devices like graphic::devices like graphic
display are connecting::display are connecting
directly to memory::directly to memory
huh are connecting::huh are connecting
connecting are coming::connecting are coming
huh display devices::huh display devices
huh the huh::huh the huh
huh the transfer::huh the transfer
demand the bandwidth::demand the bandwidth
highest throughput requirement::highest throughput requirement
huh we talked::huh we talked
didn t show::didn t show
huh two buses::huh two buses
huh backside bus::huh backside bus
backside bus front::backside bus front
bus front side::bus front side
connects the main::connects the main
memory ok huh::memory ok huh
bus which connects::bus which connects
bus right huh::bus right huh
huh a and::huh a- and-
motherboard its huh::motherboard its huh
the are numerous::the- are numerous
huh real system::huh real system
the are huh::the- are huh
lots of variations::lots of variations
mentioning the term::mentioning the term
term standard bus::term standard bus
standards are huh::standards are huh
manufacturers could talk::manufacturers could talk
case if the::case if the-
standard buses huh::standard buses huh
expect entire system::expect entire system
compatibility is ensured::compatibility is ensured
define a standard::define a standard
interface so huh::interface so huh
huh one company::huh one company
company can build::company can build
build different huh::build different huh
peripherals so huh::peripherals so huh
parties to build::parties to build
build different things::build different things
good at huh::good at huh
technology develops huh::technology develops huh
develops huh the::develops huh the-
the these huh::the- these huh
huh speeds change::huh speeds change
change and huh::change and huh
huh various requirements::huh various requirements
requirements huh change::requirements huh change
two contradictory requirements::two contradictory requirements
contradictory requirements huh::contradictory requirements huh
things to improve::things to improve
defined a bus::defined a bus
make one device::make one device
compatible two hundred::compatible- two hundred
megahertz you make::megahertz you make
make it compatible::make it compatible
compatible two hundred::compatible two hundred
sort of agreed::sort of agreed
agreed and frozen::agreed and frozen
make my devices::make my devices
megahertz so huh::megahertz so huh
huh by standardizing::huh by standardizing
sort of freezing::sort of freezing
freezing and huh::freezing and huh
arresting the growth::arresting the growth
an an commercial::an- an- commercial
an commercial pressure::an- commercial pressure
revising and refining::revising and refining
refining your standards::refining your standards
huh a continuous::huh a continuous
continuous process huh::continuous process huh
huh so you::huh so you-
huh formal mechanisms::huh formal mechanisms
mechanisms of huh::mechanisms of huh
defining these standards::defining these standards
done by huh::done by huh
huh either groups::huh either groups
groups of industries::groups of industries
collectively defining standards::collectively defining standards
define the standard::define the standard
acceptable to larger::acceptable to larger
larger huh community::larger huh community
huh a proprietary::huh a proprietary
interface or proprietary::interface or proprietary
proprietary huh mechanism::proprietary huh mechanism
popular gets adapted::popular gets adapted
standard so other::standard so other-
other see benefit::other- see benefit
benefit in huh::benefit in huh
huh a popular::huh a popular
person is doing::person is doing
buses are concerned::buses are concerned
huh is defined::huh is defined
level at physical::level at physical
level at electrical::level at electrical
shape size dimension::shape size dimension
connectors ok huh::connectors ok huh
huh the voltage::huh the voltage
voltage and current::voltage and current
levels the impedances::levels the impedances
define the meaning::define the meaning
events take place::events take place
place so huh::place so huh
logical level huh::logical level huh
level huh lets::level huh lets
examples of huh::examples of huh
huh various kinds::huh various kinds
kinds of buses::kinds of buses
domain huh in::domain huh in-
in in early::in- in early
transformed industry standard::transformed industry standard
industry standard architecture::industry standard architecture
standard architecture huh::standard architecture huh
bus then huh::bus then huh
felt that huh::felt that huh
link and peripherals::link and peripherals
link so huh::link so huh
stands for video::stands for video
video electronics standards::video electronics standards
electronics standards association::electronics standards association
association a local::association a local
bus is defined::bus is defined
bus was defined::bus was defined
stands for peripheral::stands for peripheral
peripheral component interconnect::peripheral component interconnect
component interconnect bus::component interconnect bus
backplane bus huh::backplane bus huh
stands for accelerated::stands for accelerated
accelerated graphics port::accelerated graphics port
graphics port huh::graphics port huh
devices get connected::devices get connected
earlier eight bit::earlier eight bit
thirty-two bit bus::thirty-two bit bus
point three megahertz::point three megahertz
megahertz later versions::megahertz later versions
sixty-six to double::sixty-six to double
huh one megabyte::huh one megabyte
meant to represent::meant to represent
represent two power::represent two- power
two power twenty::two- power twenty
figure by huh::figure by huh
huh lets spend::huh lets spend
lets spend huh::lets spend huh
huh a couple::huh a couple
couple of minutes::couple of minutes
invariably there in::invariably there in-
huh thirty-three megahertz::huh thirty-three megahertz
thirty-three megahertz synchronous::thirty-three megahertz synchronous
megahertz synchronous bus::megahertz synchronous bus
synchronous bus width::synchronous bus width
huh peak transfer::huh peak transfer
peak transfer rate::peak transfer rate
rate that means::rate that means
continuously transferring data::continuously transferring data
delays and idle::delays and- idle
address which flows::address which flows
address four gigabytes::address four gigabytes
gigabytes of memory::gigabytes of memory
terms of voltage::terms of voltage
point three volt::point three volt
lead to huh::lead to huh
version two point::version two point
wide sixty-six megahertz::wide sixty-six megahertz
roughly four times::roughly four times
factor get doubled::factor get doubled
version also huh::version also huh
rate of huh::rate of huh
huh one thirty-three::huh one thirty-three
megahertz so bandwidth::megahertz so bandwidth
two sixty-six version::two sixty-six version
two sixty-six megahertz::two sixty-six megahertz
megahertz and bandwidth::megahertz and bandwidth
variations like mini::variations like mini
details of huh::details of huh
huh what signals::huh what signals
serial version serial::serial version serial
version serial buses::version serial buses
typically huh cheaper::typically huh cheaper
cables are cheaper::cables are cheaper
cheaper the connectors::cheaper the connectors
connectors are cheaper::connectors are cheaper
cost is lower::cost is lower
ob obviously huh::ob- obviously huh
sending one bit::sending one bit
total data rate::total data rate
rate gets reduced::rate gets reduced
port ok huh::port ok huh
connect huh external::connect huh external
huh external modems::huh external modems
external modems huh::external modems huh
modems huh parallel::modems huh parallel
huh parallel port::huh parallel port
typically connect printer::typically connect printer
extended parallel port::extended parallel port
huh flash memory::huh flash memory
flash memory device::flash memory device
devices like cameras::devices like cameras
huh other high::huh other high
high performance serial::high performance serial
performance serial de::performance serial de-
serial de serial::serial de- serial
de serial ports::de- serial ports
ports like fire::ports like fire
fire wire fiber::fire wire fiber
wire fiber channel::wire fiber channel
terms of throughput::terms of throughput
rate huh starting::rate huh starting
starting from huh::starting from huh
huh a fraction::huh a fraction
fraction of megabytes::fraction of megabytes
four hundred megabytes::four hundred megabytes
disk disk drives::disk disk drives
disk drives huh::disk drives huh
small computer system::small computer system
computer system interface::computer system interface
system interface huh::system interface huh
standards have evolved::standards have evolved
ultra wide fast::ultra wide fast
improve so starting::improve so starting
upto one sixty::upto one sixty
huh steps in-between::huh steps in-between
close at point::close at point
today is huh::today is huh
variation of block::variation of block
block size huh::block size huh
huh would huh::huh would huh
huh per huh::huh per- huh
huh would change::huh would change
change the performance::change the performance
quantitatively we huh::quantitatively we huh
methods of arbitration::methods of arbitration
arbitration of bus::arbitration of bus
bus when the::bus when the-
huh the requirement::huh the requirement
lead to starvation::lead to starvation
fairness we huh::fairness we huh
organization of buses::organization of buses
we we huh::we- we huh
huh briefly looked::huh briefly looked
series of buses::series of buses
drive or huh::drive or huh
huh time progresses::huh time progresses
progresses the buses::progresses the buses
refined and redefined::refined and redefined
redefined the standards::redefined the standards
changing to huh::changing to huh
huh keep pace::huh keep pace
continuing our discussion::continuing our discussion
buses which interconnect::buses which interconnect
entire activity appears::entire activity appears
devices are addressed::devices are addressed
addressed and huh::addressed and huh
huh one crucial::huh one crucial
operation is checking::operation is checking
checking the status::checking the status
status or identifying::status or identifying
events are occurring::events are occurring
occurring and huh::occurring and huh
devices to talk::devices to talk
talk from software::talk from software
finally how memory::finally how memory
memory directly interacts::memory directly interacts
huh a high::huh a high
activity in terms::activity in terms
statements like printf::statements like printf
printf and scanf::printf and scanf
huh your view::huh your view
levels of abstraction::levels of abstraction
abstraction so huh::abstraction so huh
machine language level::machine language level
language level the::language level the-
the are lots::the- are lots
lots of details::lots of details
worry about huh::worry about huh
huh the formatting::huh the formatting
formatting of data::formatting of data
data so huh::data so huh
data as huh::data as huh
huh high level::huh high level
language program sees::language program sees
arrays and structures::arrays and structures
structures and huh::structures and huh
huh these structures::huh these structures
structures could consist::structures could consist
huh various types::huh various types
primitive elements integers::primitive elements integers
elements integers floating::elements integers floating
integers floating point::integers floating point
floating point strings::floating point strings
converted into raw::converted into raw
form of data::form of data
data huh th::data huh th-
th that formatting::th- that formatting
done the values::done the values
devices can understand::devices can understand
huh display device::huh display device
display device understands::display device understands
device understands things::device understands things
things in terms::things in terms
matrix or pixels::matrix or pixels
huh a character::huh a- character
character level device::character level device
terms of ascii::terms of ascii
form which huh::form which huh
device is sending::device is sending
form which programmer::form which programmer
versa then huh::versa then huh
memory what kind::memory what kind
kind of bus::kind of bus
data through huh::data through huh
huh these paths::huh these paths
huh timing characteristics::huh timing characteristics
track it takes::track it takes
huh taken care::huh taken care
software and huh::software and huh
role of system::role of system
format conversions examples::format conversions examples
conversions examples huh::conversions examples huh
lot of huh::lot of huh
lots of library::lots of library
library function library::library function library
function library routines::function library routines
care of converting::care of converting
operations into low::operations into low
low level operation::low level operation
operation so things::operation so things
things like format::things like format
level then huh::level then huh
question of huh::question of huh
tracks and sectors::tracks and sectors
drive these details::drive these details
huh specific peripheral::huh specific peripheral
specific peripheral devices::specific peripheral devices
family of peripheral::family of peripheral
devices and understand::devices and understand
understand th details::understand th- details
require to work::require to work
work with interrupts::work with interrupts
devices or the::devices or the-
the their timings::the- their timings
handled through interrupts::handled through interrupts
interrupts or exceptions::interrupts or exceptions
exceptions and huh::exceptions and huh
earlier that huh::earlier that huh
handled by exception::handled by exception
routine or interrupt::routine or interrupt
interrupt handling routine::interrupt handling routine
kernel so huh::kernel so huh
interrupt system huh::interrupt system huh
number of interrupts::number of interrupts
huh given processor::huh given processor
handled by huh::handled by huh
huh a portion::huh a portion
question of multiple::question of multiple
processes huh sharing::processes huh sharing
sharing different peripheral::sharing different peripheral
huh several programs::huh several programs
programs or processors::programs or processors
share a disk::share a disk
disk or share::disk or share
share a printer::share a printer
printer or display::printer or display
display on display::display on display
multiple windows coming::multiple windows coming
coming up due::coming up due
due to huh::due to huh
huh multiple tasks::huh multiple tasks
tasks so th::tasks so th-
th the sharing::th- the sharing
huh the role::huh the role
devices like base::devices like base
base or huh::base or huh
hard disk drives::hard disk drives
drives pro properties::drives pro- properties
pro properties drives::pro- properties drives
information is organized::information is organized
terms of files::terms of files
view of files::view of files
program but the::program but the-
the these files::the- these files
huh physical devices::huh physical devices
mapping is done::mapping is done
file system part::file system part
part of huh::part of huh
huh operating system::huh operating system
huh take lot::huh take lot
huh could vary::huh could vary
depending upon nature::depending upon nature
device the kind::device the kind
kind of speed::kind of speed
huh th th::huh th- th-
th th the::th- th- the-
the the demand::the- the demand
keyboard or mouse::keyboard or mouse
huh are producing::huh are producing
operator can enter::operator can enter
keyboard is limited::keyboard is limited
th the demand::th- the demand
character one byte::character one byte
groups of bytes::groups of bytes
mou mouse huh::mou- mouse huh
mouse huh th::mouse huh th-
th the mouse::th- the mouse
basically is tracking::basically is tracking
huh the position::huh the position
move the mouse::move the mouse
huh essentially huh::huh essentially huh
minus x direction::minus x direction
the the movement::the- the movement
huh is huh::huh is huh
huh slow huh::huh slow huh
slow huh imagine::slow huh imagine
imagine that processor::imagine that processor
processor is working::processor is working
huh several gigahertz::huh several gigahertz
pretty small huh::pretty small huh
huh so th::huh so th-
handling small volume::handling small volume
peripheral huh the::peripheral huh the-
block of information::block of information
talking of sending::talking of sending
sending a byte::sending a byte
network or sending::network or sending
sending ten bytes::sending ten bytes
bytes on network::bytes on network
huh big blocks::huh big blocks
blocks or packets::blocks or packets
packets so the::packets so the-
huh network operation::huh network operation
memory ok you::memory ok you-
position of memory::position of memory
the the network::the- the- network
the network standards::the- network standards
network standards talk::network standards talk
talk of ten::talk of ten
going to ten::going- to ten
tens or hundreds::tens or hundreds
turn our attention::turn our attention
attention to graphic::attention to graphic
graphic display huh::graphic display huh
huh in graphic::huh in graphic
human eye sees::human eye sees
refresh it huh::refresh it huh
huh several times::huh several times
huh twenty-five huh::huh twenty-five huh
twenty-five huh times::twenty-five huh times
maintain an image::maintain an image
image of huh::image of huh
screen in memory::screen in memory
screen you you::screen you- you-
you you modify::you- you modify
modify certain area::modify certain area
huh some activity::huh some activity
activity which takes::activity which takes
takes huh matrix::takes huh matrix
matrix of pixels::matrix of pixels
pixels as stored::pixels as stored
refresh certain number::refresh certain number
screen so huh::screen so huh
modern systems work::modern systems work
systems work huh::systems work huh
huh in earlier::huh in earlier
sep separately huh::sep- separately huh
port so huh::port so huh
sequence of characters::sequence of characters
characters or sequence::characters or sequence
huh some intelligence::huh some intelligence
device would huh::device would huh
characters and huh::characters and huh
modify the display::modify the display
huh there huh::huh there huh
huh the chan::huh the chan-
chan the rate::chan- the rate
encode the changed::encode the changed
information and send::information and send
huh serial port::huh serial port
serial port huh::serial port huh
huh all workstations::huh all workstations
disk drive typical::disk drive typical
drive typical operation::drive typical operation
head read write::head read write
read write head::read write head
involve huh bulk::involve huh bulk
bulk of data::bulk of data
data transfer huh::data transfer huh
variety in terms::variety in terms
transferred the quantum::transferred the quantum
quantum of data::quantum of data
handled and huh::handled and huh
mechanism of data::mechanism of data
automatically being picked::automatically being picked
transferred whereas huh::transferred whereas huh
huh in network::huh in network
mouse or keyboard::mouse or keyboard
keys get huh::keys get huh
information gets transferred::information gets transferred
transferred or huh::transferred or huh
in in network::in- in network
change that huh::change that huh
huh pixel matrix::huh pixel matrix
transfer from pixel::transfer from pixel
pixel matrix huh::pixel matrix huh
continuous activity huh::continuous activity huh
address huh the::address huh the-
the are large::the- are large
number of devices::number of devices
address them huh::address them huh
speaking the controller::speaking the controller
processor ok huh::processor ok huh
registers or view::registers or view
view them ports::view them ports
call them ports::call them ports
huh give commands::huh give commands
peripheral device huh::peripheral device huh
load some huh::load some huh
treated as command::treated as command
expected to work::expected to work
involve some parameters::involve some parameters
command to seek::command to seek
seek the disk::seek the disk
number and sect::number and sect
read the status::read the status
huh certain register::huh certain register
designated as status::designated as status
huh that register::huh that register
register and check::register and check
check specific bits::check specific bits
bits to find::bits to find
things have occurred::things have occurred
huh if key::huh if key
keyboard or huh::keyboard or huh
read or written::read or written
written so huh::written so huh
huh each de::huh each de-
device each device::device each device
registers and huh::registers and huh
huh these registers::huh these registers
huh a program::huh a program
write a register::write a register
two ways addresses::two ways addresses
memory space memory::memory space memory
space memory address::space memory address
leave some area::leave some area
space you leaving::space you leaving
utilized for memory::utilized for memory
last one thousand::last one thousand
addresses are reserved::addresses are reserved
reserved for register::reserved for register
reducing the memory::reducing the memory
huh very critical::huh very critical
critical and huh::critical and huh
tha that area::tha- that area
separate address space::separate address space
mentioned in memory::mentioned in memory
part of memory::part of memory
space is reserved::space is reserved
instructions for reading::instructions for reading
writing the register::writing the register
memory is designed::memory is designed
designed to ignore::designed to ignore
huh the addresses::huh the addresses
instruction is good::instruction is good
doesn t respond::doesn t respond
assigned will respond::assigned will respond
doing a store::doing a store
store instruction huh::store instruction huh
instruction huh depending::instruction huh depending
address falls address::address falls address
falls address falls::falls address falls
falls in memory::falls in memory
huh address space::huh address space
space for input::space for input
large as huh::large as huh
ten to fifteen::ten to fifteen
large address space::large address space
device the distinction::device the distinction
first case huh::first case huh
case huh depending::case huh depending
determine whether address::determine whether address
address is meant::address is meant
address could fall::address could fall
additional to distinguish::additional to distinguish
distinguish whether address::distinguish whether address
memory so the::memory so the-
additional control lines::additional control lines
instructions to work::instructions to work
case so huh::case so huh
additional instruction similar::additional instruction similar
similar to load::similar to load
right but huh::right but huh
huh different op-codes::huh different op-codes
huh transferring data::huh transferring data
huh before huh::huh before huh
transferring data huh::transferring data huh
device is ready::device is ready
ready for transferring::ready for transferring
case of keyboard::case of keyboard
keyboard huh the::keyboard huh the-
determine if key::determine if key
check whether huh::check whether huh
periodically and huh::periodically and huh
out this approach::out this approach
sampling and huh::sampling and huh
read a status::read a status
status register check::status register check
check particular bit::check particular bit
bit and figure::bit and figure
huh processor doesn::huh processor doesn
and whenever huh::and- whenever huh
device to invoke::device to invoke
send an exception::send an exception
exception or interrupt::exception or interrupt
device will intimates::device will intimates
intimates its readiness::intimates its readiness
readiness by raising::readiness by raising
raising an exception::raising an exception
exception in huh::exception in huh
basically means huh::basically means huh
processor is activated::processor is activated
activated and an::activated and an-
an processor huh::an- processor huh
huh a hardware::huh a hardware
transfer its control::transfer its control
control to exception::control to exception
signal gets activated::signal gets activated
activated so huh::activated so huh
huh in general::huh in general
general a processor::general a processor
huh multiple interrupt::huh multiple interrupt-
multiple interrupt signal::multiple interrupt- signal
interrupt signal coming::interrupt- signal coming
huh time huh::huh time huh
visualize the polling::visualize the polling
the some status::the- some status
status is changing::status is changing
polled here spent::polled here spent
reading the status::reading the status
status and figuring::status and figuring
out if huh::out if huh
back here find::back here find
find that status::find that status
status is ready::status is ready
out the process::out the process-
huh and put::huh and put
put some numerical::put some numerical
value see huh::value see huh
suppose it consumes::suppose it consumes
consumes four hundred::consumes four hundred
four hundred cycles::four hundred cycles
types of devices::types of devices
speeds so lets::speeds so lets
lets say first::lets say first
an this figure::an- this figure
figure is huh::figure is huh
mind how fast::mind how fast
mouse second case::mouse second case
drive which transfers::drive which transfers
transfers the data::transfers the data
fifty kilo bytes::fifty kilo bytes
data of data::data of data
cases huh the::cases huh the-
huh vast variation::huh vast variation
terms of speed::terms of speed
speed and you::speed and you-
you your polling::you- your polling
faster and faster::faster and faster
faster accordingly huh::faster accordingly huh
tied up huh::tied up huh
rate of thirty::rate of thirty
cycles so thirty::cycles so thirty
consumed in polling::consumed in polling
running huh lets::running huh lets
hundred million cycles::hundred million cycles
executing other computation::executing other computation
divide this huh::divide this huh
ratio huh convert::ratio huh convert
percent so huh::percent so huh
spent and huh::spent and huh
settling out mind::settling out mind
doing huh polling::doing huh polling
polling of mouse::polling of mouse
manner ok huh::manner ok huh
drive huh th::drive huh th-
th the rate::th- the rate
rate of sampling::rate of sampling
sampling or rate::sampling or rate
rate of polling::rate of polling
polling is higher::polling is higher
rate ok huh::rate ok huh
data huh we::data huh we-
rate ok sixteen::rate ok sixteen
transferring is fifty::transferring is fifty
huh into tens::huh into tens
divid may lead::divid- may lead
percent that means::percent that means
huh are dedicated::huh are dedicated
comfortable as huh::comfortable as huh
percentages would add::percentages would add
activities finally huh::activities finally huh
huh we move::huh we move
fast even faster::fast even faster
device four megabytes::device four megabytes
figure is divided::figure is divided
divided by sixteen::divided by sixteen
transfer four words::transfer four words
transfer we spend::transfer we spend
spend four hundred::spend four hundred
hundred cycles divides::hundred cycles divides
figure of twenty::figure of twenty
twenty percent wh::twenty percent wh-
spend twenty percent::spend twenty percent
huh just polling::huh just polling
interrupt driven input::interrupt driven input
driven input output::driven input output
device to inform::device to inform
inform the processor::inform the processor
readiness so huh::readiness so huh
processor will huh::processor will huh
huh probably instruct::huh probably instruct
instruct the device::instruct the device
send an interrupt::send an interrupt
interrupt or send::interrupt or send
attention so processor::attention so processor
device by transferring::device by transferring
exception handling routine::exception handling routine
routine and huh::routine and huh
huh exception handling::huh exception handling
needful so th::needful so th-
exceptions here coming::exceptions here coming
coming from external::coming from external
word of input::word of input
output the mechanism::output the mechanism
instruction or page::instruction or page
asynchronous with respect::asynchronous with respect
instruction whereas huh::instruction whereas huh
huh internal exceptions::huh internal exceptions
instruction but huh::instruction but huh
instruction and huh::instruction and huh
huh therefore huh::huh therefore huh
end of instruction::end of instruction
exception from external::exception from external
huh these exceptions::huh these exceptions
comparatively lower priority::comparatively lower priority
priority as compared::priority as compared
compared to internal::compared to internal
external exceptions huh::external exceptions huh
speed so devices::speed so devices
priority slow devices::priority slow- devices
similar to internal::similar to internal
interrupt or non::interrupt or non
non vector interrupt::non vector interrupt
vector interrupt vector::vector interrupt vector
interrupt vector interrupt::interrupt vector interrupt
vector interrupt means::vector interrupt means
huh the control::huh the control
directly gets transferred::directly gets transferred
non vector case::non vector case
set the calls::set the calls
calls of exception::calls of exception
register but transfer::register but transfer
control takes place::control takes place
location and then::location and then-
run some code::run some code
register and branch::register and branch
points so huh::points so huh
huh similar scenario::huh similar scenario
quantify the overheads::quantify the overheads
overheads of interrupt::overheads of interrupt
interrupt driven transfer::interrupt driven transfer
hundred megahertz huh::hundred megahertz huh
overhead per interrupt::overhead per interrupt
hundred cycles huh::hundred cycles huh
work in case::work in case
case of hard::case of hard
drive now huh::drive now huh
huh if disk::huh if disk
active then things::active then things
bad as polling::bad as polling
continuous interrupt infact::continuous interrupt infact
interrupt the overhead::interrupt the overhead
overhead is larger::overhead is larger
huh but th::huh but th-
device or huh::device or huh
active so suppose::active so suppose
suppose its active::suppose its active
entire huh duration::entire huh duration
duration of program::duration of program
busy then data::busy then data
device would inform::device would inform
happen and the::happen and the-
polling based approach::polling based approach
continuously keep polling::continuously keep polling
huh the overhead::huh the overhead
continuously busy huh::continuously busy huh
expression four megabytes::expression four megabytes
transferring sixteen bytes::transferring sixteen bytes
cycles per interrupt::cycles per interrupt
interrupt and divided::interrupt and divided
huh we assuming::huh we- assuming
busy or active::busy or active
active five percent::active five percent
two five percent::two five percent
score now huh::score now huh
huh at times::huh at times
percent huh overhead::percent huh overhead
devices huh hard::devices huh hard
overheads are added::overheads are added
added then lot::added then lot
processor in transfer::processor in transfer
group of words::group of words
device to deposit::device to deposit
role in direct::role in direct
huh the trans::huh the trans-
trans or setup::trans- or setup
device that huh::device that huh
huh from track::huh from track
huh tra huh::huh tra- huh
huh that initialization::huh that initialization
initialization is done::initialization is done
done the processor::done the processor
words or bytes::words or bytes
memory and processor::memory and processor
done and th::done and th-
huh check huh::huh check huh
found a bad::found a bad
occurred then status::occurred then status
entrusted to huh::entrusted to huh
huh special controller::huh special controller
huh specify memory::huh specify memory
memory addresses amount::memory addresses amount
amount of huh::amount of huh
huh word amount::huh word amount
transferred the direction::transferred the direction
direction of transfer::direction of transfer
device but multiple::device but multiple
multiple peripheral devices::multiple peripheral devices
devices which huh::devices which huh
huh are required::huh are required
huh four channel::huh four channel
four high speed::four high speed
devices to transfer::devices to transfer
data to huh::data to huh
data comes huh::data comes huh
updating the memory::updating the memory
transfer is done::transfer is done
lets huh le::lets huh le-
processor huh running::processor huh running
hundred megahertz suppose::hundred megahertz suppose
megahertz suppose huh::megahertz suppose huh
suppose huh initiation::suppose huh initiation
requires thousand cycles::requires thousand cycles
setup and huh::setup and huh
processor gets involved::processor gets involved
involved when huh::involved when huh
spending thousand cycle::spending thousand cycle
hundred cycle lets::hundred cycle lets
cycle lets imagine::cycle lets imagine
huh the chunk::huh the chunk
chunk of data::chunk of data
cycles the processor::cycles the processor
processor will achieve::processor will achieve
process so huh::process so huh
situation when hard::situation when hard
kind we discussed::kind we discussed
discussed in previous::discussed in previous
transfer four megabytes::transfer four megabytes
huh four megabytes::huh four megabytes
rate and huh::rate and huh
requires eight kilo::requires eight kilo
two will give::two will give
done ok huh::done ok huh
end and divided::end and- divided
clock frequency huh::clock frequency huh
huh will give::huh will give
lots of work::lots of work
work the work::work the work
factor the ratio::factor the ratio
tens power minus::tens power minus
figure alright as::figure alright as-
transfer to interrupt::transfer- to interrupt
chose a suitable::chose a suitable
mechanism for transfer::mechanism for transfer
transfer and huh::transfer and huh
higher and higher::higher and higher
higher performance huh::higher performance huh
controller means huh::controller means huh
means huh additional::means huh additional
huh additional cost::huh additional cost
cost similarly interrupt::cost similarly interrupt
interrupt also requires::interrupt also requires
requires certain mechanism::requires certain mechanism
huh one step::huh one step
transfer but huh::transfer but huh
huh be asked::huh be asked
read a block::read a block
number one send::number one send
send a block::send a block
sequence of operations::sequence of operations
huh block size::huh block size
defined and huh::defined and huh
sequence so fo::sequence so fo-
huh each appears::huh each appears
the these instructions::the- these instructions
huh a dedicated::huh a dedicated
activity and huh::activity and huh
processor will sequence::processor will sequence
communication between memory::communication between memory
work when memory::work when memory
hierarchy is present::hierarchy is present
present so huh::present so huh
caused by presence::caused by presence
presence of virtual::presence of virtual
memory in terms::memory in terms
work with physical::work with physical
address so huh::address so huh
controller that transfer::controller that transfer
address huh an::address huh an-
working in huh::working in huh
addresses so huh::addresses so huh
created an array::created an array
address now huh::address now huh
page huh contiguous::page huh contiguous
map to huh::map to huh
huh two pages::huh two pages
done once huh::done once huh
ways to handle::ways to handle
huh you restrict::huh you restrict
suppose a page::suppose a page
transfer eight kilo::transfer eight kilo
you your data::you- your data
huh one physical::huh one physical
huh in contiguous::huh in contiguous
area in virtual::area in virtual
limit your data::limit your data
transfer larger piece::transfer larger piece
in the overhead::in- the overhead
overhead of multiple::overhead of multiple
huh what problems::huh what problems
bring in huh::bring in huh
essentially a problem::essentially a problem
problem of consistency::problem of consistency
talking to cache::talking to cache
read from main::read from main
memory so th::memory so th-
problem of huh::problem of huh
information as compared::information as compared
happening the information::happening the information
coming from devices::coming from devices
devices getting put::devices getting put
out of date::out of date
cache what processor::cache what processor
cache is huh::cache is huh
reverse happening huh::reverse happening huh
huh that huh::huh that huh
block and huh::block and huh
control will pick::control will pick
pick up information::pick up information
information from memory::information from memory
write back cache::write back cache
updating main memory::updating main memory
huh in write::huh in write
recall huh data::recall huh data
memory gets updated::memory gets updated
updates into cache::updates into cache
blocks and bu::blocks and bu-
huh corresponding block::huh corresponding block
similar problem occurs::similar problem occurs
cases also huh::cases also huh
share same memory::share same memory
imagine two processors::imagine two processors
common shared memory::common shared memory
data which huh::data which huh
communicate to huh::communicate to huh
two through shared::two through shared
shared memory huh::shared memory huh
memory huh th::memory huh th-
inconsistent so huh::inconsistent so huh
first problem virtual::first problem virtual
problem virtual memory::problem virtual memory
limiting your data::limiting your data
fo for huh::fo- for huh
increasing the overhead::increasing the overhead
overhead so suppose::overhead so suppose
virtual memory problem::virtual memory problem
supply appropriate physical::supply appropriate physical
problem but huh::problem but huh
overhead has occurred::overhead has occurred
occurred four times::occurred four times
increase the overhead::increase the overhead
protocols are huh::protocols are huh
huh additional actions::huh additional actions
actions which huh::actions which huh
huh cache controllers::huh cache controllers
copies of data::copies of data
exist in multiple::exist in multiple
caches and memory::caches and memory
cache in memory::cache in memory
problem of coherence::problem of coherence
coherence so huh::coherence so huh
huh these protocols::huh these protocols
coherence is maintained::coherence is maintained
maintained for at::maintained for at-
out of sync::out of sync
occurs so huh::occurs so huh
means additional overhead::means additional overhead
additional overhead work::additional overhead work
point and summarize::point and summarize
role of huh::role of huh
huh system software::huh system software
software in huh::software in huh
software is required::software is required
required a system::required a system
handle huh device::handle huh device
huh device specific::huh device specific
device specific details::device specific details
care of sharing::care of sharing
sharing of device::sharing of device
device by multiple::device by multiple
multiple processor huh::multiple processor huh
devices are viewed::devices are viewed
viewed as set::viewed as set
space or defining::space or defining
defining huh separate::defining huh separate
huh separate address::huh separate address
mechanism of checking::mechanism of checking
device status huh::device status huh
status huh polling::status huh polling
polling and interrupts::polling and interrupts
interrupts huh polling::interrupts huh polling
polling as higher::polling as higher
overhead particularly huh::overhead particularly huh
undesirable for fast::undesirable for fast
devices and interrupts::devices and interrupts
interrupts also huh::interrupts also huh
huh not acceptable::huh not acceptable
huh direct communication::huh direct communication
essential for fast::essential for fast
fast devices huh::fast devices huh
huh like network::huh like network
network controller disk::network controller disk
controller disk drive::controller disk drive
designing i systems::designing JJ systems
previous two lectures::previous two lectures
talked about individual::talked about individual
talked about peripherals::talked about peripherals
interconnect them huh::interconnect them huh
system design issues::system design issues
huh the discussion::huh the discussion
form of examples::form of examples
huh certain performance::huh certain performance
designing the system::designing the system
performance in mind::performance in mind
earlier the performance::earlier the performance
performance could focus::performance could focus
throughput aspects or::throughput aspects or-
latency is important::latency is important
important in terms::important in terms
achieving certain response::achieving certain response
occurs outside huh::occurs outside huh
huh the system::huh the system
respond and huh::respond and huh
huh the response::huh the response
data which moves::data which moves
moves from external::moves from external
system it processed::system it processed
back so huh::back so huh
delays get added::delays get added
data gets generated::data gets generated
crosses through controller::crosses through controller
buses and adapters::buses and adapters
adapters and huh::adapters and huh
huh somewhat similar::huh somewhat similar
throughput issue huh::throughput issue huh
pipeline and th::pipeline and th-
th the slowest::th- the slowest
throughput is concerned::throughput is concerned
comparatively huh easier::comparatively huh easier
huh easier huh::huh easier huh
state with data::state with data
understand the capability::understand the capability
rate the data::rate the data
data can flow::data can flow
huh but latency::huh but latency
data and counters::data and counters
pieces of information::pieces of information
information which flow::information which flow
flow through huh::flow through huh
huh various components::huh various components
system and huh::system and huh
simulate the entire::simulate the entire
accurate manner huh::accurate manner huh
huh what kind::huh what kind
kind of latenc::kind of latenc-
huh li li::huh li- li-
give as idea::give as idea
idea of throughput::idea of throughput
first example huh::first example huh
application where huh::application where huh
huh huge amount::huh huge amount
read out read::read out read
disks so huh::disks so huh
huh s lots::huh s- lots
lots of data::lots of data
memory and lots::memory and lots
lots of disk::lots of disk
maximize our throughput::maximize our throughput
capacity of processor::capacity of processor
huh certain number::huh certain number
number of adapters::number of adapters
supporting multiple disks::supporting multiple disks
disks and huh::disks and huh
send the blocks::send the blocks
blocks which huh::blocks which huh
huh gets read::huh gets read
amount of processing::amount of processing
processing involved huh::processing involved huh
view to organize::view to organize
instruction execution rate::instruction execution rate
hundred million instruction::hundred million instruction
quantifies the capacity::quantifies the capacity
processor to perform::processor to perform
perform certain tasks::perform certain tasks
tasks the bus::tasks the bus
memory is capable::memory is capable
handling a throughput::handling a throughput
throughput of hundred::throughput of hundred
sources is huh::sources is huh
arrive at huh::arrive at huh
huh bus throughput::huh bus throughput
bus throughput limit::bus throughput limit
the the size::the- the size
suppose that analysis::suppose that analysis
analysis was carried::analysis was carried
figure of hundred::figure of hundred
hundred megabytes performance::hundred megabytes performance
capacity of twenty::capacity of twenty
buses are huh::buses are huh
carrying the data::carrying the data
controller is capable::controller is capable
upto seven disk::upto seven disk
drive huh requires::drive huh requires
huh requires ten::huh requires ten
requires ten milliseconds::requires ten milliseconds
milliseconds to access::milliseconds to access
latency plus controller::latency plus controller
data gets huh::data gets huh
read out data::read out data
operation involves sixty-four::operation involves sixty-four
involves sixty-four kilo::involves sixty-four kilo
track but eve::track but eve-
milliseconds of delay::milliseconds of delay
huh have incurred::huh have incurred
incurred the ten::incurred the ten
ten milliseconds delay::ten milliseconds delay
delay then huh::delay then huh
huh sixty-four kilo::huh sixty-four kilo
huh five megabytes::huh five megabytes
bus is concerned::bus is concerned
disk is busy::disk is busy
seeking or huh::seeking or huh
huh its rotating::huh its rotating
huh other disk::huh other disk
transferring the data::transferring the data
seeking and transfer::seeking and transfer
disk could overlap::disk could overlap
operation of huh::operation of huh
kilo bytes transfer::kilo bytes transfer
bytes transfer requires::bytes transfer requires
transfer requires huh::transfer requires huh
huh some work::huh some work
hundred thousand instructions::hundred thousand instructions
instructions are executed::instructions are executed
program and fifty::program and fifty
fifty thousand instructions::fifty thousand instructions
executed by operating::executed by operating
system so huh::system so huh
imagine that huh::imagine that huh
huh each transfer::huh each transfer
transfer takes place::transfer takes place
process which means::process which means
th the processor::th- the processor
initially setup huh::initially setup huh
huh the process::huh the process
showing so lets::showing so lets
control is lumped::control is lumped
controller to read::controller to read
supplies the address::supplies the address
memory where things::memory where things
instruction get executed::instruction get executed
thousand instructions huh::thousand instructions huh
huh all put::huh all put
put together beginning::put together beginning
beginning and end::beginning and end
end and th::end and th-
data huh is::data huh is-
huh is processed::huh is- processed
huh it requires::huh it requires
requires huh hundred::requires huh hundred
hundred k instructions::hundred k instructions
maximum input output::maximum input output
input output rate::input output rate
rate that huh::rate that huh
huh this system::huh this system
system can sustain::system can sustain
processor one single::processor one single
single processor memory::single processor memory
flexibilities in terms::flexibilities in terms
system and depending::system and depending
number of disk::number of disk
require certain number::require certain number
problem involves first::problem involves first
involves first finding::involves first finding
operations as defined::operations as defined
controllers are required::controllers are required
huh to solve::huh to solve
solve this fo::solve this fo-
huh first lets::huh first lets
first lets analyze::first lets analyze
limits of individual::limits of individual
individual huh component::individual huh component
component and huh::component and huh
hundred plus fifty::hundred plus fifty
fifty thousand instruction::fifty thousand instruction
huh this execution::huh this execution
hundred million instructions::hundred million instructions
processor is concerned::processor is concerned
concerned is huh::concerned is huh
hundred million divided::hundred million divided
processor if rest::processor if rest
system was capable::system was capable
matching this rate::matching this rate
processor is ready::processor is ready
two thousand operations::two thousand operations
object is processor::object is processor
bandwidth of hundred::bandwidth of hundred
transfer of sixty-four::transfer of sixty-four
figure out huh::figure out huh
out huh hundred::out huh hundred
hundred million bytes::hundred million bytes
sixty-four k bytes::sixty-four k bytes
figures two thousand::figures two thousand
two of huh::two of huh
neck so processor::neck so processor
dictate the rate::dictate the rate
huh out first::huh out first
out first answer::out first answer
achieve this huh::achieve this huh
put to huh::put to huh
seek plus rotational::seek plus rotational
rate and sixty-four::rate and sixty-four
bytes of block::bytes of block
size the transfer::size the transfer
kilo bytes divided::kilo bytes divided
point eight milliseconds::point eight milliseconds
milliseconds ok so::milliseconds ok so-
operation basically disk::operation basically disk
spend ten milliseconds::spend ten milliseconds
busy for huh::busy for huh
huh the sum::huh the sum
ten milliseconds latency::ten milliseconds latency
latency plus twelve::latency plus twelve
asked to seek::asked to seek
seek and transfer::seek and transfer
transfer the rate::transfer the rate
blocks is reciprocal::blocks is reciprocal
milliseconds or forty-three::milliseconds or forty-three
the the throughput::the- the throughput
huh the throughput::huh the throughput
disk is huh::disk is huh
sustaining is sixty-four::sustaining is sixty-four
huh although transfer::huh although transfer
point eight megabytes::point eight megabytes
demand each disk::demand each disk
disk is placing::disk is placing
bus will con::bus will con-
disks and send::disks and send
huh to begin::huh to begin
begin with lets::begin with lets-
number of disks::number of disks
drive is forty-three::drive is forty-three
require to saturate::require to saturate
fifteen sixty-two divided::fifteen sixty-two divided
divided by forty-three::divided by forty-three
distribute this thirty-six::distribute this thirty-six
disks to huh::disks to huh
number of controllers::number of controllers
controllers you require::controllers you require
huh addressing capability::huh addressing capability
number of controller::number of controller
number of drives::number of drives
controller is assigned::controller is assigned
drives are grouped::drives are grouped
groups and huh::groups and huh
huh each controller::huh each controller
times two point::times two point
limit of huh::limit of huh
exercise where huh::exercise where huh
parameter were number::parameter- were number
disks and number::disks and number
analyze and de::analyze and de-
question so huh::question so huh
calculation very simple::calculation very simple
complicate formula you::complicate- formula you-
things are put::things are put
understand the operation::understand the operation
things are happening::things are happening
happening huh rest::happening huh rest
huh rest huh::huh rest huh
huh design problem::huh design problem
design problem huh::design problem huh
design a multi-function::design a multi-function
multi-function unit huh::multi-function unit huh
photocopy and huh::photocopy and huh
send and receive::send and receive
low cost scanner::low cost scanner
scanner a low::scanner a low
low cost printer::low cost printer
cost printer huh::cost printer huh
modem and connect::modem and connect
processor and huh::processor and huh
huh suitable memory::huh suitable memory
put these peripheral::put these peripheral
scan a document::scan a document
document and fax::document and fax
fax and print::fax and print
scan and print::scan and print
modem plus printer::modem plus printer
function as fax::function as fax
fax receiver scanner::fax receiver scanner
scanner plus modem::scanner plus modem
sender and scanner::sender and scanner
scanner plus printer::scanner plus printer
calculation that huh::calculation that huh
operation may require::operation may require
number of copies::number of copies
print a couple::print a couple
couple of copies::couple of copies
copies you print::copies you print
scan is huh::scan is huh
kind of scenario::kind of scenario
work so lets::work so lets
heavy huh fax::heavy huh fax
huh fax load::huh fax load
load so huh::load so huh
huh continuously fax::huh continuously fax
fax are coming::fax are coming
assumption that huh::assumption- that huh
huh the telephone::huh the telephone
continuously kept busy::continuously kept busy
busy so ha::busy so ha-
ha huh lets::ha- huh lets
lets say half::lets say half
incoming and outgoing::incoming and outgoing
faxes are balanced::faxes are balanced
balanced that means::balanced that means
al almost equal::al- almost equal
number of fax::number of fax
fax is coming::fax is coming
coming and equal::coming and equal
huh each fax::huh each fax
nt want to::nt want to-
worry about complication::worry about complication
complication of sending::complication of sending
sending multiple pages::sending multiple pages
four size pages::four size pages
size pages huh::size pages huh
pages huh so::pages huh so-
so both printer::so- both printer
printer and scanner::printer and scanner
huh after satisfying::huh after satisfying
satisfying the fax::satisfying the fax
fax load huh::fax load huh
capacity of scanner::capacity of scanner
scanner and printer::scanner and printer
utilized for photocopying::utilized for photocopying
eventually the throughput::eventually the throughput
type of operation::type of operation
rate of fax::rate of fax
sustained and huh::sustained and huh
rate of photocopying::rate of photocopying
huh this sim::huh this sim-
make it low::make it low
low cost huh::low cost huh
cost huh setup::cost huh setup
bus so the::bus so the-
bus adapter sitting::bus adapter sitting
sitting here huh::sitting here huh
huh a scanner::huh a scanner
scanner printer modem::scanner printer modem
modem which hooks::modem which hooks
specification so huh::specification so huh
sort of dedicated::sort of dedicated
dedicated system huh::dedicated system huh
doing this huh::doing this huh
huh fax machine::huh fax machine
so whatever program::so- whatever program
put in huh::put in huh
huh non-volatile memory::huh non-volatile memory
required we wont::required we wont
bit of money::bit of money
huh these huh::huh these huh
huh am ignoring::huh am ignoring
ignoring the details::ignoring the details
type of port::type of port
ignore that last::ignore that last
last point detail::last point detail
detail and assume::detail and assume
single bus huh::single bus huh
sort of fixed::sort of fixed
choices we make::choices we make
make so lets::make so lets
low or medium::low or medium
medium resolution print::medium resolution print-
resolution print huh::resolution print- huh
print huh machines::print- huh machines
machines three hundred::machines three hundred
hundred or twelve::hundred or twelve
page size fixed::page size fixed
size fixed page::size fixed page
fixed page size::fixed page size
modes one mode::modes one mode
mode is when::mode is when-
huh simply work::huh simply work
simply work huh::simply work huh
huh with black::huh with black
black and white::black and white
gray levels huh::gray levels huh
black or white::black or white
white ok and::white ok and-
two fifty-six gray::two fifty-six gray
fifty-six gray level::fifty-six gray level
will use mode::will- use mode
for photocopy purpose::for- photocopy purpose
mode two huh::mode two huh
two huh lets::two huh lets
pages per minute::pages per minute
minute and printer::minute and printer
modem available huh::modem available huh
modem we lets::modem we lets
lets take huh::lets take huh
huh thirty-three kilo::huh thirty-three kilo
thirty-three kilo bits::thirty-three kilo bits
modem and huh::modem and huh
ten percent overhead::ten percent overhead
bits as part::bits as part
modem and lets::modem and lets
ten percent extra::ten percent extra
percent extra data::percent extra data
disk available huh::disk available huh
latency of ten::latency of ten
milliseconds and transfer::milliseconds and transfer
low cost processor::low cost processor
cost processor huh::cost processor huh
two options hundred::two options hundred
options hundred megahertz::options hundred megahertz
directly accesses memory::directly accesses memory
accesses memory huh::accesses memory huh
huh the fax::huh the fax
requires certain encoding::requires certain encoding
encoding actually compresses::encoding actually compresses
compresses the size::compresses the size
similarly the fax::similarly the fax
decoded and put::decoded and put
number is mentioned::number is mentioned
compression or decompression::compression or decompression
decompression of factor::decompression of factor
factor of ten::factor of ten
huh this process::huh this process
process of encoding::process of encoding
encoding or decoding::encoding or decoding
decoding involves hundred::decoding involves hundred
involves hundred instructions::involves hundred instructions
instructions per byte::instructions per byte
byte of raw::byte of raw
scanned the image::scanned the image
image is huh::image is huh
huh ten kilo::huh ten kilo
require hundred instructions::require hundred instructions
executed performance byte::executed performance byte
algorithm of encoding::algorithm of encoding
sending a fax::sending a fax
fax would involve::fax would involve
scanning and huh::scanning and huh
average the program::average the program
lets say thirty::lets say thirty
make additional access::make additional access
huh the memory::huh the- memory
two sizes sixty-four::two sizes sixty-four
sizes sixty-four megabytes::sizes sixty-four megabytes
two speeds huh::two speeds huh
speeds huh forty::speeds huh forty
huh forty million::huh forty million
forty million words::forty million words
sixty million words::sixty million words
proceed and huh::proceed and huh
kind of rates::kind of rates
made for processor::made for processor
lets first huh::lets first huh
huh what information::huh what information
information each page::information each page
page carries huh::page carries huh
size of eleven::size of eleven
number of pixels::number of pixels
pixels as eleven::pixels as eleven
gray scale mode::gray scale mode
bits per pixel::bits per pixel
pixel so mode::pixel so mode
bit per pixel::bit per pixel
pixel and mode::pixel and mode
two mega pixels::two mega pixels
megabytes or point::megabytes or point
megabytes ok huh::megabytes ok huh
converted to bytes::converted to bytes
huh the compression::huh the compression
compression in fax::compression in fax
fax and coding::fax and coding
coding was ten::coding was ten
send or receive::send or receive
receive a page::receive a page
fax line huh::fax line huh
line huh will::line huh will-
memory and disk::memory and disk
disk size lets::disk size lets
huh sixty-four megabytes::huh sixty-four megabytes
megabytes of memory::megabytes of memory
put one twenty-eight::put one twenty-eight
megabytes will accommodate::megabytes will accommodate
easily the program::easily the program
buffer several pages::buffer several pages
waiting for printing::waiting for printing
megabytes so sixty-four::megabytes so sixty-four
cushion for accommodating::cushion for accommodating
accommodating a couple::accommodating a couple
couple of scan::couple of scan
accommodated in memory::accommodated in memory
huh nonvolatile memory::huh nonvolatile memory
huh volatile memory::huh volatile memory
volatile memory huh::volatile memory huh
memory huh augmented::memory huh augmented
augmented with flash::augmented with flash
memory because flash::memory because flash
memory is slower::memory is slower
directly from flash::directly from flash
put a huh::put a huh
huh fax process::huh fax process
process so modem::process so modem
speed is thirty-three::speed is thirty-three
thirty-three kilo bytes::thirty-three kilo bytes
two five kilo::two five kilo
huh the compressed::huh the compressed
page or encoded::page or encoded
page is point::page is point
ninety-nine kilo bytes::ninety-nine kilo bytes
percent of overhead::percent of overhead
find out transmission::find out transmission
transmission or re::transmission or re-
right so ninety-nine::right so ninety-nine
point four seconds::point four seconds
page huh takes::page huh takes
received plus huh::received plus huh
line huh th::line huh th-
establish a call::establish a call
call and modem::call and modem
modem will respond::modem will respond
connection or huh::connection or huh
dialed and connection::dialed and connection
established so lets::established so lets
lets say twenty::lets say twenty
fo for establishing::fo- for establishing
establishing a call::establishing a call
twenty is total::twenty is total
modem and line::modem and line
line are busy::line are busy
rate the rate::rate the rate
huh handling faxes::huh handling faxes
handling faxes huh::handling faxes huh
faxes huh incoming::faxes huh incoming
convenient figure in::convenient figure in-
in per minute::in- per minute
huh one point::huh one point
two per minute::two per minute
th th setup::th- th- setup
th setup huh::th- setup huh
things actually limited::things actually limited
th the modem::th- the modem
rate which modem::rate which modem
modem can sustain::modem can sustain
sustain and rest::sustain and rest
turn out attention::turn out attention
attention to scanner::attention to scanner
printer so scanning::printer so scanning
or in terms::or- in terms
terms of pages::terms of pages
huh the outgoing::huh the outgoing
outgoing fax rate::outgoing fax rate
fax rate huh::fax rate huh
rate huh point::rate huh point
two we divide::two we divide
divide into point::divide into point
incoming and point::incoming and point
th the scanner::th- the scanner
match the outgoing::match the outgoing
th the capacity::th- the capacity
capacity of point::capacity of point
continuously scan pages::continuously scan pages
scanned and huh::scanned and huh
faxed out rest::faxed out rest
photocopying purpose huh::photocopying purpose huh
hand printing rate::hand printing rate
incoming fax rate::incoming fax rate
rate is point::rate is point
photocopying is point::photocopying is point
two two pages::two two pages
spare capacity and::spare capacity and-
capacity and huh::capacity and- huh
and huh photocopy::and- huh photocopy
huh photocopy operations::huh photocopy operations
recall i mentioned::recall i mentioned
average three copies::average three copies
copies so printer::copies so printer
slightly higher load::slightly higher load
load and huh::load and huh
basically huh printer::basically huh printer
printer would dictate::printer would dictate
dictate the photocopying::dictate the photocopying
average so point::average so point
scanned and point::scanned and point
scanner and huh::scanner and huh
sustain the throughput::sustain the throughput
huh so wh::huh so wh-
receiving a fax::receiving a fax
coming from modem::coming from modem
similarly for outgoing::similarly for outgoing
bus similarly huh::bus similarly huh
huh from memory::huh from memory
memory to printer::memory to printer
printer or scanner::printer or scanner
scanner to memory::scanner to memory
memory will happen::memory will happen
happen at huh::happen at huh
huh this rate::huh this rate
huh each page::huh each page
page per page::page per page
megabytes per page::megabytes per page
printer scanner traffic::printer scanner traffic
data rate huh::data rate huh
operation is point::operation is point
two two faxes::two two faxes
multiply by huh::multiply by huh
two four megabytes::two four megabytes
operation for photocopy::operation for photocopy
photocopy operation huh::photocopy operation huh
traffic between memory::traffic between memory
huh to printer::huh to printer
huh that sends::huh that sends
data and point::data and point
data so sum::data so- sum
bus so sum::bus so sum
two huh point::two huh point
is one point::is- one point
-cept that solution::-cept that solution
processor is doing::processor is doing
execute per fax::execute per fax
fax message huh::fax message huh
message huh is::message huh is-
huh is huh::huh is- huh
huh i mentioned::huh i mentioned
the are hundred::the- are hundred
page huh data::page huh data
decoding a page::decoding a page
fax out involves::fax out involves
involves two operation::involves two operation
operation so ei::operation so ei-
ei either huh::ei- either huh
modem or writing::modem or writing
huh either scanning::huh either scanning
scanning or printing::scanning or printing
total of instructions::total of instructions
executed is huh::executed is huh
huh either sending::huh either sending
sending or receiving::sending or receiving
two million instructions::two million instructions
huh per fax::huh per fax
incoming or outgoing::incoming or outgoing
executed per photocopy::executed per photocopy
doing one scan::doing one scan
doing three prints::doing three prints
four here huh::four here huh
instructions so total::instructions so total
total instructions throughput::total instructions throughput
instructions throughput required::instructions throughput required
scan rate huh::scan rate huh
small so small::small so small
small factor huh::small factor huh
makes minor difference::makes minor difference
total huh instruction::total huh instruction
huh instruction rate::huh instruction rate
instruction rate required::instruction rate required
part of processor::part of processor
talked of hundred::talked of hundred
basically hundred megahertz::basically hundred megahertz
deliver twenty-five mips::deliver twenty-five mips
huh very comfortable::huh very comfortable
comfortable to handle::comfortable to handle
hundred megahertz processor::hundred megahertz processor
megahertz process infact::megahertz process- infact
fifty megahertz version::fifty megahertz version
version available huh::version available huh
memory bandwidth huh::memory bandwidth huh
huh now we::huh now we-
capacity but suppose::capacity but suppose
tra that suppose::tra- that suppose
run at full::run at full
stroll for lack::stroll for lack
work or lack::work or lack
lack of work::lack of work
huh twenty-five mips::huh twenty-five mips
mips would require::mips would require
require twenty-five million::require twenty-five million
twenty-five million instruction::twenty-five million instruction
million instruction words::million instruction words
huh load store::huh load store
store we noticed::store we noticed
earlier was thirty::earlier was thirty
load store type::load store type
traffic which processor::traffic which processor
processor will generate::processor will generate
memory ok twenty-five::memory ok twenty-five
twenty-five million words::twenty-five million words
point five words::point five words
traffic and data::traffic and data
data traffic load::data traffic load
traffic load store::traffic load store
load store traffic::load store traffic
huh very small::huh very small
small one point::small one point
mem huh memory::mem- huh memory
huh memory bandwidth::huh memory bandwidth
handling this twenty-five::handling this twenty-five
forty and sixty::forty and sixty
sixty t possibilities::sixty t- possibilities
huh throughput rate::huh throughput rate
rate for fax::rate for fax
fax and huh::fax and huh
huh photocopy operation::huh photocopy operation
processors and slower::processors and slower
huh i hope::huh i hope
hope these huh::hope these huh
manner and huh::manner and huh
fixed huh rule::fixed huh rule
rule or procedure::rule or procedure
procedure to solve::procedure to solve
solve such problems::solve such problems
huh no accumulations::huh no accumulations
accumulations of data::accumulations of data
data or huh::data or huh
huh getting st::huh getting st-
st for huh::st- for huh
huh all traffic::huh all traffic
traffic all data::traffic all data
traffic or instruction::traffic or instruction
traffic is flowing::traffic is flowing
huh multiple buses::huh multiple buses
multiple buses converging::multiple buses converging
add the traffic::add the traffic
out of huh::out of huh
huh multiple de::huh multiple de-
multiple de devices::multiple de- devices
huh we we::huh we- we-
takes to print::takes to print
issue or huh::issue or huh
press a scan::press a scan
complicated and huh::complicated and huh
add the delays::add the delays
delays because huh::delays because huh
huh these operations::huh these operations
you huh receiving::you- huh receiving
receiving and sending::receiving and sending
sending faxes photocopying::sending faxes photocopying
photocopying is taking::photocopying is taking
interleaved and huh::interleaved and huh
huh th the::huh th- the-
huh bandwidth calculation::huh bandwidth calculation
two huh wh::two huh wh-
huh wh when::huh wh- when-
bus be free::bus be free
printer be free::printer be free
huh that analysis::huh that analysis
analysis may require::analysis may require
scenario and huh::scenario and huh
then then study::then- then study
latency is involved::latency is involved
moment any questions::moment any questions
realistic and it::realistic and it-
simultaneous but lets::simultaneous but lets
one one disk::one- one disk
huh as huh::huh as huh
huh started transferring::huh started transferring
huh get put::huh get put
lets say they::lets say they-
taking huh twelve::taking huh twelve
huh twelve point::huh twelve point
disk is active::disk is active
active for twelve::active for twelve
bus is twenty::bus is twenty
interleaving of huh::interleaving of huh
huh the blocks::huh the blocks
sources and huh::sources and huh
sixty-four kilo bits::sixty-four kilo bits
data over huh::data over huh
so basically huh::so- basically huh
interleaved leaving huh::interleaved- leaving huh
buffer this sixty-four::buffer this sixty-four
disk controller end::disk controller end
scsi controller end::scsi controller end
end and huh::end and huh
the then put::the- then put
bus right let::bus right let-
lets say spent::lets say spent-
huh lets imagine::huh lets imagine
imagine this data::imagine this data
occupying a scsi::occupying a scsi
shorter period huh::shorter period huh
fraction of milliseconds::fraction of milliseconds
bus now in-between::bus now in-between
contiguously but the::contiguously but the-
line three point::line three point
milliseconds it spends::milliseconds it spends
spends on th::spends on th-
th scsi bus::th- scsi bus
spend three point::spend three point
two by huh::two by huh
basically these streams::basically these streams
bus so suitable::bus so suitable
lecture on computer::lecture on computer
conclude huh series::conclude huh series
lectures so today::lectures so today
stand so lets::stand so lets-
first lecture huh::first lecture huh
learn how computer::learn how computer
analyze the performance::analyze the- performance
build the computers::build the computers
computers and huh::computers and huh
huh improve performance::huh improve performance
modern processors issues::modern processors issues
issues like caches::issues like caches
caches or memory::caches or memory
memory hierarchy pipelining::memory hierarchy pipelining
covered various topics::covered various topics
topics we talked::topics we talked
set and huh::set and huh
discussed some code::discussed some code
out to build::out to build
out those instructions::out those instructions
constructed a complete::constructed a complete
execute these instructions::execute these instructions
concept of pipelining::concept of pipelining
pipelining to improve::pipelining to improve
memory is hierarchical::memory is hierarchical
array of huh::array of huh
finally to complete::finally to complete
picture we talked::picture we talked
talked about input::talked about input
decades and huh::decades and huh
you would notice::you- would notice
growth in performance::growth in performance
single monetary unit::single monetary unit
unit so performance::unit so performance
performance per rupee::performance per rupee
vacuum tube system::vacuum tube system
huh the computers::huh the computers
historical into generations::historical into generations
huh focus huh::huh focus huh
talking of architecture::talking of architecture
interface of hardware::interface of hardware
essentially huh machine::essentially huh machine
huh machine instructions::huh machine instructions
huh the building::huh the building
blocks like huh::blocks like huh
adders registers multiplexers::adders registers multiplexers
registers multiplexers buses::registers multiplexers buses
focused is shown::focused is shown
huh risk variety::huh risk variety
risk variety reduce::risk variety reduce
th computer huh::th- computer huh
instructions and simple::instructions and simple
instruction each instruction::instruction each instruction-
mix many things::mix many things
things the advantage::things the advantage
building a fast::building a fast
fast processor huh::fast processor huh
processor huh ease::processor huh ease
ease of doing::ease of doing
ease of generating::ease of generating
code so huh::code so huh
instruction we talked::instruction we talked
talked about huh::talked about huh
huh nicely fall::huh nicely fall
beginning and huh::beginning and huh
lot of discussion::lot of discussion
discussion was huh::discussion was huh
design a system::design a system
huh power consumption::huh power consumption
important and huh::important and huh
power being produced::power being produced
produced or power::produced or power
power being dissipated::power being dissipated
chip per lets::chip per lets
lets say square::lets say square
square centimeters increasing::square centimeters increasing
view we looked::view we looked
two possible directions::two possible directions
throughput huh throughput::throughput huh throughput
huh several tasks::huh several tasks
tasks being executed::tasks being executed
user huh execution::user huh execution
basic huh parameters::basic huh parameters
parameters the instructions::parameters the instructions
program the instruction::program the instruction
instruction count cycles::instruction count cycles
period or clock::period or clock
rate the factor::rate the factor
factor which influence::factor which influence
influence these are::influence these are-
varied the compiler::varied the compiler
compiler w generates::compiler w- generates
architecture what instruction::architecture what instruction
micro-architecture that means::micro-architecture that means
implement those instruction::implement those instruction
performance its important::performance its important
case and huh::case and huh
make everything fast::make everything fast
make the common::make the common
common case fast::common case fast
instructions from programming::instructions from programming
view and huh::view and huh
developing some understanding::developing some understanding
out to design::out to design
processor which carries::processor which carries
out all arithmetic::out all arithmetic
huh its design::huh its design
design was done::design was done
construction was huh::construction was huh
huh put hardware::huh put hardware
hardware in place::hardware in place
huh thirty-two times::huh thirty-two times
additional logic shown::additional logic shown
equality comparison so::equality comparison so-
worked with huh::worked with huh
huh while doing::huh while doing
operations like multiplier::operations like multiplier
primarily discussed iterative::primarily discussed iterative
discussed iterative algorithm::discussed iterative algorithm
huh thirty-two steps::huh thirty-two steps
produce one result::produce one result
result of the::result of the-
the one bit::the- one bit
structure here huh::structure here huh
division was done::division was done
restoring manner non-restoring::restoring manner non-restoring
manner non-restoring manner::manner non-restoring manner
non-restor non-restoring division::non-restor- non-restoring division
merge the multiplier::merge the multiplier
hardware and divider::hardware and divider
lot in common::lot in common
huh the key::huh the key
huh the big::huh the big
case and left::case and left
ways and organize::ways and- organize
organize the control::organize the control-
control appropriately huh::control- appropriately huh
make this huh::make this huh
huh this unit::huh this unit
capable of doing::capable of doing
huh a single::huh a single
multiplication or division::multiplication or division
huh design huh::huh design huh
technique ok huh::technique ok huh
takes from huh::takes from huh
improvement to speed::improvement to speed
speed up multiplication::speed up multiplication
looked at huh::looked at huh
possibility using huh::possibility using huh
huh carry save::huh carry save
carry save adders::carry save adders
doing iteratively huh::doing iteratively huh
out into huh::out into huh
adders which add::adders which add
carry save additions::carry save additions
improves the delay::improves the delay
noticing the limitation::noticing the limitation
limitation of huh::limitation of huh
huh integer operation::huh integer operation
operation we talked::operation we talked
talked about floating::talked about floating
floating point operation::floating point operation
the are varieties::the- are varieties
four standard huh::four standard huh
issues of huh::issues of huh
underflow so underflow::underflow so underflow
feature which occurs::feature which occurs
occurs in floating::occurs in floating
round and sticky::round and sticky
instructions which support::instructions which support
support this type::support this type
type of arithmetic::type of arithmetic
huh having understood::huh having understood
understood how basic::understood how basic
done we looked::done we looked
process of instruction::process of instruction
instruction executions starting::instruction executions starting
starting from fetch::starting from fetch
fetching of instructions::fetching of instructions
doing the operation::doing the operation
back in place::back in place
design we looked::design we looked
entire instruction execution::entire instruction execution
execution is finished::execution is finished
simple combinational circuit::simple combinational circuit
huh data path::huh data path
clear distinction made::clear distinction made
notice the limitations::notice the limitations
huh various points::huh various points
points of view::points of view
improve the performance::improve- the performance
helps in huh::helps in huh
sharing the resources::sharing the resources
implement much larger::implement much larger
variety of instructions::variety of instructions
takes the instruction::takes the instruction
th this flow::th- this flow
in multiple cycles::in- multiple cycles
cycles each box::cycles each box
box represents activity::box represents activity
execution is divided::execution is divided
divided into cycle::divided into cycle
determines that influences::determines that influences
determines how wide::determines how wide
wide the clock::wide the clock
huh the slowest::huh the slowest
divide these things::divide these things
distribute these things::distribute these things
instruction take multiple::instruction take multiple
cycle but huh::cycle but huh
instructions get issued::instructions get issued
huh this design::huh this design
design was obtained::design was obtained
design and introducing::design and introducing
registers which separate::registers which separate
separate pipeline stages::separate pipeline stages
so in terms::so- in terms
terms of concept::terms of concept
simple but huh::simple but huh
notice some hazards::notice some hazards
hazards huh structure::hazards huh structure
huh structure hazards::huh structure hazards
structure hazards data::structure hazards data
hazards so structure::hazards so structure
simpler to handle::simpler to handle
provide enough resources::provide enough resources
occur but data::occur but data
data and control::data and control
inherent huh in::inherent huh in-
design and pa::design and pa-
huh program logic::huh program logic
provide for huh::provide for huh
huh extra control::huh extra control
flushing out instructions::flushing out instructions
out instructions huh::out instructions huh
instructions huh wh::instructions huh wh-
instruction may fetched::instruction may fetched
huh for handling::huh for handling
data hazards huh::data hazards huh
delay by forwarding::delay by forwarding
forwarding data huh::forwarding data huh
in some data::in- some data
huh a number::huh a number
huh data flow::huh data flow
flow from instruction::flow from instruction
spent several lectures::spent several lectures
lectures on processor::lectures on processor
discussion on memory::discussion on memory
advantage of huh::advantage of huh
bulk of huh::bulk of huh
huh inexpensive and::huh inexpensive and-
inexpensive and dense::inexpensive and- dense
advantage of size::advantage of size
manner so huh::manner so huh
typical cache organization::typical cache organization
cache organization is::cache organization is-
organization is shown::organization is- shown
shown here huh::shown here huh
we we looked::we- we looked
organizations direct map::organizations direct map
cache with varying::cache with varying
degree of huh::degree of huh
four alternative slots::four alternative slots
slots and huh::slots and huh
huh this number::huh this number
kind of flexibility::kind of flexibility
placing a block::placing a block
larger the number::larger the number
larger the flexibility::larger the flexibility
number also implies::number also implies
huh more hardware::huh more hardware
doing parallel comparison::doing parallel comparison
parallel comparison huh::parallel comparison huh
huh parallel comparison::huh parallel comparison
comparison and associative::comparison and associative
associative huh search::associative huh search
increase the degree::increase the degree
degree of associative::degree of associative-
associative the clock::associative- the clock
period becomes larger::period becomes larger
larger which means::larger which means
impact on performance::impact on performance
huh the positive::huh the positive
giving more flexibility::giving more flexibility
flexibility you reduce::flexibility you reduce
throw away huh::throw away huh
space is required::space is required
hierarchy is virtual::hierarchy is virtual
main memory form::main memory form-
form one level::form- one level
disk stores huh::disk stores huh
process of accessing::process of accessing
accessing huh virtual::accessing huh virtual
finally we moved::finally we moved
first huh lecture::first huh lecture
huh a computer::huh a computer
fan on top::fan on top
huh graphics display::huh graphics display
graphics display card::graphics display card
things could of::things could of-
huh very recent::huh very recent
two three years::two three years
part of motherboard::part of motherboard
graphics display huh::graphics display huh
connected as close::connected as close
processor memory interconnection::processor memory interconnection
interconnection whereas huh::interconnection whereas huh
huh other things::huh other things
things might sit::things might sit
sit on huh::sit on huh
points of motivation::points of motivation
huh so ideal::huh so ideal
opportunity to design::opportunity to design
architecture new instruction::architecture new instruction
instruction set build::instruction set build
design take place::design take place
design or build::design or build
huh from software::huh from software
view this knowledge::view this knowledge
huh to write::huh to write
write better software::write better software
software ok huh::software ok huh
ap application level::ap- application level
understanding of huh::understanding of huh
huh what architectural::huh what architectural
architectural huh com::architectural huh com-
com are you::com- are you-
software or if::software or if-
compiler operating system::compiler operating system
operating system area::operating system area
doing a technical::doing a technical
development of hardware::development of hardware
hardware software huh::hardware software huh
software huh understanding::software huh understanding
architecture and performance::architecture and performance
issues is important::issues is important
purchasing a computer::purchasing a computer
computing or general::computing or general
computing in mind::computing in mind
huh embedded computers::huh embedded computers
embedded computers huh::embedded computers huh
opportunities and huh::opportunities and huh
basically designing huh::basically designing huh
designing huh huh::designing huh huh
huh adapt huh::huh adapt huh
adapt huh building::adapt huh building
building a complete::building a complete
it its interesting::it- its interesting
typically gets sold::typically gets sold
sold every year::sold every year
classes of systems::classes of systems
systems are put::systems are put
table servers huh::table servers huh
servers huh desktops::servers huh desktops
desktops and embedded::desktops and embedded
so the figures::so- the figures
wise over last::wise over last
last huh ov::last huh ov-
varying by orders::varying by orders
server to desktop::server to desktop
desktop to embedded::desktop to embedded
huh but embedded::huh but embedded
embedded are huh::embedded are huh
huh very fast::huh very fast
machines per person::machines per person
com here huh::com- here huh
huh per person::huh per person
person but embedded::person but embedded
huh other devices::huh other devices
devices various appliances::devices various appliances
appliances your mobile::appliances your mobile
huh num number::huh num- number
purpose computing device::purpose computing device
huh intelligent function::huh intelligent function
nt have user::nt have user
typically do fix::typically do fix-
set of functions::set of functions
functions they operate::functions they operate
operate in real::operate in real
real time interact::real time interact
environment and huh::environment and huh
discussed that huh::discussed that huh
address that issue::address that issue
address the hardware::address the hardware
software design issues::software design issues
combined hardware software::combined hardware software
hardware software co-design::hardware software co-design
huh a design::huh a design
size rate power::size rate power
power and cost::power and cost
customized so huh::customized so huh
opportunities of huh::opportunities of huh
huh do doing::huh do- doing
doing some interesting::doing some interesting
huh where huh::huh where huh
huh the knowledge::huh the knowledge
th the question::th- the question
huh different processors::huh different processors
processors huh fo::processors huh fo-
types of things::types of things
huh servers desktop::huh servers desktop
servers desktop embedded::servers desktop embedded
desktop embedded huh::desktop embedded huh
difference between processors::difference between processors
desktops laptops mobile::desktops laptops mobile
laptops mobile phones::laptops mobile phones
phones and appliances::phones and appliances
appliances like washing::appliances like washing
washing machines etcetera::washing machines etcetera
aspects in performance::aspects in performance
difference in power::difference in power
general purpose huh::general purpose huh
purpose huh operation::purpose huh operation
bit processor huh::bit processor huh
processor plus memory::processor plus memory
th the program::th- the program
program and huh::program and- huh
repeatedly just execute::repeatedly just execute
huh so huh::huh so huh
talks of huh::talks of huh
lots of huh::lots of huh
huh real life::huh real life
briefly and huh::briefly and huh
interesting huh possibilities::interesting huh possibilities
possibilities so huh::possibilities so huh
and towards end::and- towards end
attempt to huh::attempt to huh
huh take computers::huh take computers
designed by huh::designed by huh
group of people::group of people
people for huh::people for huh
villages the idea::villages the idea
make it huh::make it huh
affordability for people::affordability for people
people with huh::people with huh
huh small means::huh small means
hard disk huh::hard disk huh
couple of generations::couple of generations
charged by huh::charged by huh
huh a bicycle::huh a bicycle
bicycle wireless internet::bicycle wireless internet
wireless internet cards::wireless internet cards
cards which connect::cards which connect
solar powered hilltop::solar powered hilltop
powered hilltop relay::powered hilltop relay
hilltop relay station::hilltop relay station
huh it connects::huh it connects
linux and huh::linux and huh
language its communication::language its communication
nt know english::nt know english
heard of simputer::heard of simputer
attempt to build::attempt to build
build a small::build a small
small huh low::small huh low
huh low cost::huh low cost
low cost computer::low cost computer
computer and huh::computer and huh
bangalore the processor::bangalore the processor
strong arm huh::strong arm huh
low power consumption::low power consumption
power consumption huh::power consumption huh
and input output::and- input output
work through icons::work through icons
text to speech::text to speech
input but speech::input but speech
medium of communication::medium of communication
communication so huh::communication so huh
track the information::track- the information
coming from computer::coming from computer
spoken out and::spoken out and-
and the input::and- the input
touching the icons::touching the icons
computers and modern::computers and modern
carrying out huh::carrying out huh
huh some scientific::huh some scientific
tree and huh::tree and huh
huh some scientist::huh some scientist
wanted to study::wanted to study
study huh th::study huh th-
th the biological::th- the biological
phenomenon here huh::phenomenon here huh
trees and huh::trees and huh
huh they wanted::huh they wanted
tree absorb moisture::tree absorb moisture
moisture from huh::moisture from huh
atmosphere from fog::atmosphere from fog
fog so initial::fog so initial
attempts were huh::attempts were huh
huh to place::huh to place
lot of heavy::lot of heavy
lot of cables::lot of cables
replaced by huh::replaced by huh
huh some simple::huh some simple
simple huh sensors::simple huh sensors
huh sensors miniature::huh sensors miniature
sensors miniature battery::sensors miniature battery
battery driven wireless::battery driven wireless
driven wireless sensor::driven wireless sensor
wireless the scientist::wireless the scientist
scientist could move::scientist could move
running huh huge::running huh huge
huh huge cables::huh huge cables
safety into huh::safety into huh
automobiles or huh::automobiles or huh
key to safety::key to safety
computer based huh::computer based huh
entire huh track::entire huh track
huh track system::huh track system
system is divided::system is divided
segments or blocks::segments or blocks
blocks of huh::blocks of huh
size one point::size one point
point five kilometer::point five kilometer
kilometer so at::kilometer so at-
at at places::at- at places
essentially huh sensors::essentially huh sensors
sensors and computers::sensors and computers
system issues commands::system issues commands
commands to huh::commands to huh
supposed to huh::supposed to huh
continue or stop::continue or stop
commands and act::commands and act
fails to listen::fails to listen
putting the details::putting the details
details here huh::details here huh
news medium wh::news medium wh-
huh basically huh::huh basically huh
huh from huh::huh from huh
huh web sources::huh web sources
web sources huh::web sources huh
collected and published::collected and published
automatically and huh::automatically and huh
th that crosses::th- that crosses
crosses huh th::crosses huh th-
th the typical::th- the typical
boundaries and regional::boundaries and regional
totally different nontraditional::totally different nontraditional
nontraditional nonlocal source::nontraditional nonlocal source
source of news::source of news
huh how computers::huh how computers
pieces of art::pieces of art
huh image processing::huh image processing
image processing techniques::image processing techniques
computers in huh::computers in huh
diagnosis through huh::diagnosis through huh
huh some interesting::huh some interesting
interesting huh applications::interesting huh applications
device for scanning::device for scanning
vehicle in general::vehicle in general
general for security::general for security
security so huh::security so huh
huh what huh::huh what huh
huh the security::huh the security
increasingly important concern::increasingly important concern
huh prevent huh::huh prevent huh
huh some dangerous::huh some dangerous
thing being attached::thing being attached
car being brought::car being brought
car the traditional::car the traditional
huh security people::huh security people
people would carry::people would carry
carry a mirror::carry a mirror
drill but doesn::drill but doesn
car so exhaustive::car so exhaustive
basically a camera::basically a camera
camera base system::camera base- system
units each unit::units each unit
huh these bright::huh these bright
sources which emit::sources which emit
digital camera video::digital camera video
camera video camera::camera video camera
video camera sitting::video camera sitting
lights illuminate th::lights illuminate th-
bottom gets illuminated::bottom gets illuminated
illuminated and cameras::illuminated and cameras
cameras take picture::cameras take picture
limited huh field::limited huh field
field of view::field of view
sees only part::sees only part
car is passing::car is passing
passing a camera::passing a camera
small part and::small part and-
and each camera::and- each camera
camera actually captures::camera actually captures
captures a video::captures a video
video of huh::video of huh
huh a strip::huh a strip
huh each video::huh each video
huh you generate::huh you- generate
generate a single::generate a single
requires sophisticated huh::requires sophisticated huh
techniques to form::techniques to form
strip of huh::strip of huh
strips are put::strips are put
form a complete::form a complete
image is divided::image is divided
huh the stitching::huh the stitching
stitching is done::stitching is done
huh computer it::huh computer it-
computer it it::computer it- it-
computer is performing::computer is performing
performing huh single::performing huh single
task of creating::task of creating
creating this image::creating this image
huh to automate::huh to automate
automate the kind::automate the kind
kind of process::kind of process
entry exit gates::entry exit gates
exit gates huh::exit gates huh
huh the car::huh the car-
carry a sticker::carry a sticker
windscreen and huh::windscreen and huh
huh the person::huh the person
supposed to carry::supposed to carry
carry a card::carry a card
gate the security::gate the security
check the card::check the card
huh identification number::huh identification number
card identification number::card identification number
person is driving::person is driving
driving the right::driving the right
system in principle::system in principle
huh its impossible::huh its impossible
put this kind::put this kind
works right huh::works right huh
patience in people::patience in people
driving to wait::driving to wait
huh which carries::huh which carries
carries huh small::carries huh small
huh small huh::huh small huh
small huh computer::small huh computer
huh computer huh::huh computer huh
computer huh so::computer huh so-
variation of huh::variation of huh
prom huh erasable::prom huh erasable
erasable and programmable::erasable and programmable
basically same processor::basically same processor
processor is sitting::processor is sitting
sitting there huh::sitting there huh
huh which communicates::huh which communicates
communicates with huh::communicates with huh
huh this pair::huh this pair
pair of devices::pair of devices
basically huh th::basically huh th-
th this th::th- this th-
th the main::th- the main
source infrared huh::source infrared- huh
infrared huh sender::infrared- huh sender
sender and receiver::sender and receiver
sending and receiving::sending and receiving
receiving infrared signals::receiving infrared signals
number is printed::number is printed
carries my identity::carries my identity
huh a smart::huh a- smart
huh this golden::huh this golden
basically a chip::basically a chip
plastic to make::plastic to make
credit card size::credit card size
card size thing::card size thing
thing so huh::thing so huh
huh basically th::huh basically th-
th this carries::th- this carries
carries the identity::carries the identity
huh well th::huh well th-
th these cards::th- these cards
and and huh::and- and huh
cash also huh::cash also huh
huh electron electronic::huh electron- electronic
electron electronic cash::electron- electronic cash
huh a set::huh a set
case this carries::case this carries
driving the car::driving the car
car and huh::car and huh
huh this identity::huh this identity
is actually huh::is- actually huh
inside this device::inside this device
you you insert::you- you insert
seek the identity::seek the identity
identity so identity::identity so identity
encrypted and communicated::encrypted and communicated
huh then computer::huh then computer
turn a light::turn a light
light huh green::light huh green
green or red::green or red
red or open::red or open
the are interesting::the- are interesting
interesting design issues::interesting design issues
battery driven device::battery driven device
driven device huh::driven device huh
power consumption reducing::power consumption reducing
reducing the power::reducing the power
consumption becomes ex::consumption becomes ex-
ex extremely important::ex- extremely important
consumption is minimized::consumption is minimized
numerous other areas::numerous other areas
specially designed computer::specially designed computer
designed computer based::designed computer based
computer based system::computer based system
system could touch::system could touch
touch our lives::touch our lives
lives so th::lives so th-
areas very challenging::areas very challenging
challenging and huh::challenging and huh
lot of excitement::lot of excitement
brindha computer::brindha computer
computer architecture::computer architecture
architecture prof::architecture prof
prof anshul::prof anshul
anshul kumar::anshul kumar
kumar department::kumar department
computer science::computer science
engineering iit::engineering iit
iit delhi::iit delhi
delhi lecture::delhi lecture
processor design::processor design
multi cycle::multi cycle
cycle design::cycle design
discussing design::discussing design
multiple clock::multiple clock
clock cycles::clock cycles
data path::data path
controller aspects::controller aspects
simple design::simple design
single clock::single clock
clock cycle::clock cycle
control signals::control signals
control steps::control steps
meaningful operations::meaningful operations
micro operations::micro operations
simplify establishing::simplify establishing
control states::control states
signal values::signal values
control part::control part
starting point::starting point
key resources::key resources
memory register::memory register
register file::register file
maximum utilization::maximum utilization
intermediate results::intermediate results
instruction register::instruction register
data register::data register
alu operation::alu operation
signal indicating::signal indicating
similarly control::similarly control
alu register::alu register
registers multiplexer::registers multiplexer
class instruction::class instruction
first cycle::first cycle
instruction address::instruction address
relevant fields::relevant fields
bit twenty::bit twenty
single box::single box
cycle number::cycle number
actual operation::actual operation
generic sense::generic sense
function field::function field
last cycle::last cycle
involve transferring::involve transferring
bits eleven::bits eleven
destination register::destination register
careful choice::careful choice
store word::store word
cycle involves::cycle involves
program counter::program counter
address calculation::address calculation
adding offset::adding offset
sign extension::sign extension
memory write::memory write
load word::load word
word instruction::word instruction
address corresponds::address corresponds
calculate address::calculate address
fourth cycle::fourth cycle
cycle memory::cycle memory
memory access::memory access
memory address::memory address
complete load::complete load
doing lot::doing lot
target address::target address
case branch::case branch
condition holds::condition holds
jump instruction::jump instruction
taking bits::taking bits
bit shift::bit shift
single cycle::single cycle
access required::access required
operation required::operation required
total delay::total delay
consuming activity::consuming activity
additional cycle::additional cycle
cycle approach::cycle approach
taking equivalent::taking equivalent
instruction access::instruction access
sequencing pins::sequencing pins
first clock::first clock
clock period::clock period
simple activity::simple activity
clock periods::clock periods
change things::change things
put things::put things
global view::global view
single screen::single screen
main resources::main resources
exist memory::exist memory
file performing::file performing
logical operations::logical operations
operations storing::operations storing
memory reading::memory reading
instructions taking::instructions taking
instructions require::instructions require
first part::first part
common state::common state
things start::things start
state transition::state transition
transition diagram::transition diagram
single graph::single graph
single state::single state
pro point::pro point
important thing::important thing
point onwards::point onwards
instruction group::instruction group
cycle onwards::cycle onwards
complex design::complex design
full cycle::full cycle
opcode decoding::opcode decoding
first step::first step
special action::special action
instructions read::instructions read
common action::common action
branch instruction::branch instruction
energy consumption::energy consumption
result register::result register
instruction tha::instruction tha
beq action::beq action
unnecessary activity::unnecessary activity
common decoding::common decoding
decoding cycle::decoding cycle
operand fetch::operand fetch
fetch cycle::fetch cycle
clean situation::clean situation
common cycles::common cycles
branch address::branch address
separate branches::separate branches
broader cycle::broader cycle
last states::last states
small finite::small finite
finite state::finite state
state machine::state machine
fetch decode::fetch decode
instruction cycle::instruction cycle
small improvement::small improvement
improvement possibility::improvement possibility
cycle common::cycle common
load store::load store
reduces number::reduces number
ten states::ten states
control signal::control signal
res write::res write
signals control::signals control
cha state::cha state
flow chart::flow chart
multiplexer decides::multiplexer decides
accessing instruction::accessing instruction
single multiplexer::single multiplexer
usual control::usual control
cycle data::cycle data
related control::related control
meaningful operation::meaningful operation
micro operation::micro operation
understandable action::understandable action
things group::things group
group wise::group wise
last multiplexer::last multiplexer
write signal::write signal
signals pwu::signals pwu
call pwu::call pwu
correct source::correct source
jump address::jump address
write output::write output
bring register::bring register
signal coming::signal coming
signal takes::signal takes
takes multiple::takes multiple
multiple value::multiple value
binary code::binary code
decimal value::decimal value
default value::default value
write signals::write signals
source doesn::source doesn
unconditional write::unconditional write
activate pwc::activate pwc
correct value::correct value
takes care::takes care
taking care::taking care
taking place::taking place
make things::make things
subsequent discussion::subsequent discussion
relevant signals::relevant signals
read control::read control
signal decides::signal decides
signals decide::signals decide
controls writing::controls writing
multiplexer code::multiplexer code
controller design::controller design
write read::write read
register load::register load
load signals::load signals
memory read::memory read
read memory::read memory
file group::file group
file write::file write
write rdst::write rdst
rdst don::rdst don
case m2r::case m2r
value rdst::value rdst
signals rdst::signals rdst
rs2a rt2b::rs2a rt2b
rt2b res2rd::rt2b res2rd
res2rd mem2rt::res2rd mem2rt
alu group::alu group
bit value::bit value
function bits::function bits
multiplexer control::multiplexer control
store offset::store offset
branch offset::branch offset
simply perform::simply perform
perform addition::perform addition
store instruction::store instruction
address calculations::address calculations
alu controller::alu controller
alu perform::alu perform
perform subtraction::perform subtraction
last case::last case
care doesn::care doesn
arithmetic memory::arithmetic memory
address branch::address branch
symbols put::symbols put
operation symbol::operation symbol
doing fetch::doing fetch
doing rs2a::doing rs2a
control state::control state
first relationship::first relationship
group memory::group memory
memory group::memory group
distinct state::distinct state
arithmetic operation::arithmetic operation
class instructions::class instructions
store operation::store operation
performs memory::performs memory
read operation::read operation
performs transfer::performs transfer
branch operation::branch operation
operation branch::operation branch
branch micro::branch micro
operation shows::operation shows
bit vector::bit vector
vector defines::vector defines
relevant control::relevant control
truth table::truth table
control design::control design
state transitions::state transitions
opcode value::opcode value
conditions wont::conditions wont
truth tables::truth tables
combinational block::combinational block
state value::state value
table shown::table shown
register holding::register holding
bit register::bit register
register hold::register hold
control operations::control operations
operations control::operations control
defined relationship::defined relationship
identified control::identified control
design microprogrammed::design microprogrammed
microprogrammed control::microprogrammed control
previous lecture::previous lecture
started design::started design
multi multi::multi multi
cycle datapath::cycle datapath
microprogrammed design::microprogrammed design
part design::part design
design pla::design pla
part produces::part produces
part decides::part decides
picture shows::picture shows
chart indicating::chart indicating
control control::control control
basic operation::basic operation
signals required::signals required
symbolic names::symbolic names
crucial part::crucial part
implementation starts::implementation starts
indicating don::indicating don
table description::table description
binary form::binary form
part showing::part showing
showing black::showing black
upto twenty::upto twenty
twenty output::twenty output
table describes::table describes
input coming::input coming
twenty signal::twenty signal
present state::present state
column combination::column combination
binary equivalent::binary equivalent
substitute code::substitute code
state codes::state codes
compact representation::compact representation
notice lot::notice lot
input combinations::input combinations
current state::current state
instruction combination::instruction combination
raise power::raise power
power ten::power ten
ten entries::ten entries
ten bits::ten bits
relevant combinations::relevant combinations
fixed state::fixed state
state numbers::state numbers
numbers state::numbers state
state labels::state labels
conventional form::conventional form
column represent::column represent
ten bit::ten bit
bit input::bit input
bit output::bit output
specific tables::specific tables
state register::state register
current control::current control
single combination::single combination
combination circuit::combination circuit
ten inputs::ten inputs
smaller pla::smaller pla
general purpose::general purpose
purpose component::purpose component
combinational circuit::combinational circuit
out contents::out contents
address word::address word
output column::output column
output part::output part
alternative compare::alternative compare
total number::total number
output circuit::output circuit
rows running::rows running
true logic::true logic
false logic::false logic
vertical lines::vertical lines
product terms::product terms
column number::column number
vertical line::vertical line
product term::product term
expanded form::expanded form
compact form::compact form
total size::total size
roughly area::roughly area
dimension multiplied::dimension multiplied
plane accommodates::plane accommodates
plane corresponds::plane corresponds
reasonable alternative::reasonable alternative
define output::define output
last input::last input
expanded truth::expanded truth
simple illustration::simple illustration
raised power::raised power
thousand twenty::thousand twenty
rom things::rom things
small program::small program
small computer::small computer
program flow::program flow
simple programs::simple programs
basic operations::basic operations
generates control::generates control
manipulating data::manipulating data
main memory::main memory
register files::register files
step involves::step involves
micro program::micro program
out words::out words
memory based::memory based
based design::based design
bit pattern::bit pattern
twenty bits::twenty bits
sequentially word::sequentially word
right address::right address
correct word::correct word
micro sequencer::micro sequencer
microprogrammed counter::microprogrammed counter
counter part::counter part
main program::main program
memory locations::memory locations
micro programmed::micro programmed
programmed memory::programmed memory
right signals::right signals
micro instruction::micro instruction
current value::current value
programmed counter::programmed counter
signals coming::signals coming
opcode bits::opcode bits
inputs ten::inputs ten
simple incrementer::simple incrementer
incrementer adder::incrementer adder
simple sequence::simple sequence
branch point::branch point
program terminology::program terminology
lets call::lets call
sequence dispatch::sequence dispatch
specific case::specific case
bit field::bit field
bits coming::bits coming
sequence control::sequence control
small boxes::small boxes
correct address::correct address
small tables::small tables
small roms::small roms
small plas::small plas
main point::main point
small number::small number
ten instructions::ten instructions
low level::low level
level program::level program
single language::single language
language program::language program
simple primitive::simple primitive
primitive operations::primitive operations
line represents::line represents
program memory::program memory
incidentally micro::incidentally micro
control store::control store
first instruction::first instruction
normal sequencing::normal sequencing
doing dispatch::doing dispatch
labels beginning::labels beginning
program written::program written
symbolic form::symbolic form
micro assembler::micro assembler
horizontal micro::horizontal micro
micro programming::micro programming
horizontal microprogramming::horizontal microprogramming
high degree::high degree
low degree::low degree
ten words::ten words
program run::program run
compact encoding::compact encoding
vertical approach::vertical approach
low memory::low memory
memory requirement::memory requirement
lose performance::lose performance
programmed approach::programmed approach
approach versus::approach versus
non micro::non micro
hardwired approach::hardwired approach
machine based::machine based
based approach::based approach
specific advantages::specific advantages
good work::good work
separate memory::separate memory
memory chip::memory chip
program implementation::program implementation
fixed architecture::fixed architecture
internal registers::internal registers
temporary registers::temporary registers
person working::person working
signal level::signal level
microprogrammed level::microprogrammed level
make access::make access
performance penalty::performance penalty
final state::final state
machine design::machine design
assembler fill::assembler fill
today tools::today tools
hardwired controllers::hardwired controllers
controllers starting::controllers starting
multiple options::multiple options
initial representation::initial representation
representation level::representation level
machine diagram::machine diagram
program micro::program micro
sequencing control::sequencing control
control level::control level
state function::state function
dispatch roms::dispatch roms
logic equations::logic equations
implementation level::implementation level
finally implement::finally implement
large size::large size
microprogram memory::microprogram memory
micro instructions::micro instructions
microprogram counter::microprogram counter
determines contents::determines contents
pipelined processor::pipelined processor
last lecture::last lecture
pipelined design::pipelined design
low cpi::low cpi
high frequency::high frequency
maximum benefit::maximum benefit
structural hazards::structural hazards
hazards data::hazards data
data hazards::data hazards
control hazards::control hazards
skeleton datapath::skeleton datapath
normal condition::normal condition
ideal condition::ideal condition
datapath design::datapath design
components multiplexers::components multiplexers
bit rooters::bit rooters
simple pipeline::simple pipeline
pipeline design::pipeline design
design behaves::design behaves
subsequent lectures::subsequent lectures
pipelined datapath::pipelined datapath
simplify things::simplify things
sign extenders::sign extenders
separate stages::separate stages
first stage::first stage
instruction fetch::instruction fetch
fetch stage::fetch stage
instruction memory::instruction memory
decoded control::decoded control
add subtract::add subtract
final stage::final stage
fourth stage::fourth stage
writing results::writing results
pipeline operates::pipeline operates
uniform manner::uniform manner
first register::first register
large registers::large registers
intermediate design::intermediate design
special case::special case
peculiar thing::peculiar thing
thing happening::thing happening
value generate::value generate
lets leave::lets leave
adding data::adding data
data coming::data coming
memory output::memory output
file output::file output
memory stage::memory stage
uniform fashion::uniform fashion
slight problem::slight problem
back operation::back operation
stage activity::stage activity
register stages::register stages
taking data::taking data
bit pieces::bit pieces
register length::register length
extension unit::extension unit
sixteen lines::sixteen lines
allowing thirty::allowing thirty
right solution::right solution
sixteen bits::sixteen bits
idea clear::idea clear
crucial thing::crucial thing
lets move::lets move
control controller::control controller
generate control::generate control
files multiplexers::files multiplexers
thi thi::thi thi
point lets::point lets
longest path::longest path
storage element::storage element
neglecting treating::neglecting treating
real life::real life
small delay::small delay
maximum path::maximum path
path delay::path delay
critical path::critical path
path delays::path delays
data memory::data memory
memory delay::memory delay
choices achieves::choices achieves
hardware cost::hardware cost
length register::length register
register size::register size
universal answer::universal answer
specific design::specific design
things changed::things changed
add control::add control
cycle type::cycle type
multi-cycle type::multi-cycle type
instruction generates::instruction generates
sig generates::sig generates
multi-cycle design::multi-cycle design
state control::state control
organized things::organized things
control transition::control transition
students asked::students asked
fetch state::fetch state
decode state::decode state
instruction suppose::instruction suppose
state machines::state machines
mealy machine::mealy machine
machine type::machine type
moore machine::moore machine
multiple cycles::multiple cycles
decide control::decide control
simple change::simple change
signal goint::signal goint
write operation::write operation
operation register::operation register
small controller::small controller
feeding alu::feeding alu
write control::write control
signal result::signal result
comparison coming::comparison coming
address coming::address coming
output end::output end
decode stage::decode stage
synchronizing address::synchronizing address
current stage::current stage
cycle signals::cycle signals
data signals::data signals
alu stage::alu stage
alu control::alu control
write back::write back
simple arrangement::simple arrangement
inserting register::inserting register
register extend::register extend
sequential circuit::sequential circuit
sense carrying::sense carrying
twelve bit::twelve bit
correction required::correction required
signal required::signal required
enables write::enables write
convenience tapping::convenience tapping
datas addresses::datas addresses
complete design::complete design
design datapath::design datapath
out jump::out jump
interesting point::interesting point
instruction change::instruction change
subsequent cycles::subsequent cycles
instruction code::instruction code
file operation::file operation
small path::small path
out kind::out kind
kind arrangement::kind arrangement
data hazard::data hazard
consecutive instructions::consecutive instructions
value computed::value computed
gap depending::gap depending
deep pipeline::deep pipeline
add instruction::add instruction
register read::register read
read stage::read stage
register write::register write
back stage::back stage
file half::file half
writing half::writing half
ideal cycles::ideal cycles
introduce delays::introduce delays
register fields::register fields
register field::register field
relevant information::relevant information
consecutive cycles::consecutive cycles
information forward::information forward
fields lets::fields lets
write field::write field
write address::write address
read addresses::read addresses
forwarding path::forwarding path
passed instruction::passed instruction
instruction doesn::instruction doesn
value means::value means
basic idea::basic idea
whats happening::whats happening
hazards occur::hazards occur
instruction label::instruction label
instruction freeze::instruction freeze
freeze don::freeze don
point decide::point decide
correct thing::correct thing
branch prediction::branch prediction
inline operation::inline operation
backward branch::backward branch
last instruction::last instruction
static prediction::static prediction
dynamic prediction::dynamic prediction
simple prediction::simple prediction
first thing::first thing
detect instructions::detect instructions
suitable number::suitable number
insert bubbles::insert bubbles
complex approach::complex approach
data forwarding::data forwarding
delaying logic::delaying logic
including fetching::including fetching
hazards require::hazards require
identify branch::identify branch
branch instructions::branch instructions
wrong instruction::wrong instruction
inline instructions::inline instructions
straight forward::straight forward
complex dynamic::complex dynamic
last question::last question
software solutions::software solutions
hardware resources::hardware resources
compiler whichever::compiler whichever
rearrange instruction::rearrange instruction
dependent instructions::dependent instructions
key line::key line
out instruction::out instruction
dependent insert::dependent insert
worst case::worst case
instruction sequence::instruction sequence
similar spirit::similar spirit
put instructions::put instructions
part lets::part lets
extra instructions::extra instructions
delay slots::delay slots
follow branch::follow branch
tagged instructions::tagged instructions
compiler assembler::compiler assembler
hazard data::hazard data
delay starts::delay starts
learnt today::learnt today
inter stage::inter stage
stage registers::stage registers
right number::right number
datapath controller::datapath controller
stage involves::stage involves
data control::data control
hazards requires::hazards requires
requires detection::requires detection
detection stalling::detection stalling
stalling flushing::stalling flushing
handling data::handling data
handle data::handle data
functionality remains::functionality remains
introduce techniques::introduce techniques
instruction sequences::instruction sequences
stall cycles::stall cycles
cycles required::cycles required
additional control::additional control
control circuitry::control circuitry
additional path::additional path
additional paths::additional paths
introducing data::introducing data
previous lectures::previous lectures
introduce inter::introduce inter
introducing controls::introducing controls
things looked::things looked
signal pass::signal pass
data dependent::data dependent
load instruction::load instruction
instruction storing::instruction storing
instruction starts::instruction starts
instruction happen::instruction happen
makes sense::makes sense
written lets::written lets
cycle remember::cycle remember
horizontal axis::horizontal axis
correct picture::correct picture
cycle wha::cycle wha
correct values::correct values
read values::read values
instruction stays::instruction stays
show instruction::show instruction
axis indicating::axis indicating
put show::put show
shot snap::shot snap
snap shots::snap shots
previous instruction::previous instruction
remain stuck::remain stuck
null instruction::null instruction
shown alu::shown alu
alu shaded::alu shaded
moves forward::moves forward
understanding lets::understanding lets
instruction wise::instruction wise
wise background::wise background
inactive stage::inactive stage
nops introduced::nops introduced
stage onwards::stage onwards
alu onwards::alu onwards
profile nop::profile nop
condition persists::condition persists
cycle instruction::cycle instruction
remains stuck::remains stuck
shown control::shown control
define control::define control
operation instruction::operation instruction
null control::null control
subsequent stages::subsequent stages
cycle land::cycle land
inactive situation::inactive situation
operation nop::operation nop
nop instruction::nop instruction
desired result::desired result
first first::first first
hazard condition::hazard condition
back instruction::back instruction
instruction alu::instruction alu
conditional persists::conditional persists
tow nops::tow nops
cycles introduced::cycles introduced
stage register::stage register
means instruction::means instruction
register addresses::register addresses
instruction setting::instruction setting
instruction intends::instruction intends
hat instruction::hat instruction
alternative destination::alternative destination
destination addresses::destination addresses
reason suppose::reason suppose
register bates::register bates
bubble signal::bubble signal
combinational logic::combinational logic
simple solution::simple solution
forwarding paths::forwarding paths
consecutive instruction::consecutive instruction
delay introduced::delay introduced
earlier instruction::earlier instruction
forwarding techniques::forwarding techniques
activate means::activate means
paths leading::paths leading
dependent instruction::dependent instruction
alu state::alu state
cycle delay::cycle delay
solid thing::solid thing
actual requirement::actual requirement
fourth possibility::fourth possibility
alu output::alu output
alu input::alu input
lets identify::lets identify
additional multiplexer::additional multiplexer
normal input::normal input
input labeled::input labeled
multiplexer output::multiplexer output
normal path::normal path
out conditions::out conditions
proper value::proper value
similar equations::similar equations
conditions don::conditions don
first lets::first lets
special care::special care
earlier case::earlier case
destination matches::destination matches
latest value::latest value
relevant register::relevant register
forward data::forward data
similar condition::similar condition
stage intends::stage intends
right forwarding::right forwarding
stalling condition::stalling condition
stage reads::stage reads
alu stages::alu stages
instruction reached::instruction reached
introduced nops::introduced nops
stage view::stage view
define conditions::define conditions
introducing stalls::introducing stalls
control condition::control condition
special cases::special cases
cases introduce::cases introduce
handling control::handling control
mips processor::mips processor
bypass paths::bypass paths
cases delay::cases delay
stall cycle::stall cycle
improve performance::improve performance
branch hazards::branch hazards
eliminating branches::eliminating branches
dynamic scheduling::dynamic scheduling
instruction level::instruction level
level parallel::level parallel
parallel architecture::parallel architecture
nop instructions::nop instructions
stage wise::stage wise
wise view::wise view
subsequent instructions::subsequent instructions
improve things::improve things
derive control::derive control
source address::source address
destination address::destination address
processor continues::processor continues
point suppose::point suppose
address change::address change
target instruction::target instruction
additional delay::additional delay
cycle shifts::cycle shifts
delay calculation::delay calculation
multiplexer delay::multiplexer delay
similar action::similar action
make contents::make contents
simple manner::simple manner
condition evaluation::condition evaluation
subtract instruction::subtract instruction
real evaluation::real evaluation
evaluation takes::evaluation takes
takes place::takes place
preceding instruction::preceding instruction
previously instruction::previously instruction
eliminate branches::eliminate branches
branch execution::branch execution
decision making::decision making
actual branching::actual branching
rare event::rare event
probabilistic sense::probabilistic sense
dynamic predication::dynamic predication
small illustration::small illustration
branch elimination::branch elimination
conditional structure::conditional structure
conditional instruction::conditional instruction
predicated instruction::predicated instruction
conditional branch::conditional branch
mips language::mips language
current instruction::current instruction
means non::means non
instruction explicit::instruction explicit
explicit branch::explicit branch
condition testing::condition testing
start preparation::start preparation
generate target::generate target
instruction find::instruction find
calculate target::calculate target
virtual memory::virtual memory
page table::page table
virtual address::virtual address
real address::real address
omit page::omit page
harm done::harm done
stretch things::stretch things
last stages::last stages
make space::make space
adverse effect::adverse effect
bit comparison::bit comparison
inequality comparison::inequality comparison
fast alu::fast alu
beq bna::beq bna
bna kind::bna kind
simpler comparison::simpler comparison
flush instruction::flush instruction
slight improvement::slight improvement
condition code::condition code
code evaluation::code evaluation
separate instructions::separate instructions
evaluate condition::evaluate condition
hazard situation::hazard situation
delayed branch::delayed branch
unconditional statement::unconditional statement
code generator::code generator
suitable independent::suitable independent
independent instruction::independent instruction
make branch::make branch
treat branches::treat branches
unconditional branches::unconditional branches
means don::means don
branch continues::branch continues
idea question::idea question
fixed prediction::fixed prediction
guess inline::guess inline
branch condition::branch condition
make choice::make choice
forward jump::forward jump
exception condition::exception condition
condition checking::condition checking
dynamic branch::dynamic branch
times inside::times inside
previous occurrences::previous occurrences
sophisticated decision::sophisticated decision
programmer flexibility::programmer flexibility
delay slot::delay slot
exercise option::exercise option
simple branch::simple branch
last occurrence::last occurrence
strict forward::strict forward
forward logic::forward logic
simple loop::simple loop
loops back::loops back
larger loop::larger loop
outer loop::outer loop
predict based::predict based
previous outcome::previous outcome
vice versa::vice versa
loop instance::loop instance
static branch::static branch
branch policy::branch policy
prediction strategy::prediction strategy
bit information::bit information
machine remembers::machine remembers
suppose branch::suppose branch
means branch::means branch
actual outcome::actual outcome
continuously branch::continuously branch
single loop::single loop
general mechanism::general mechanism
double mistakes::double mistakes
actual computation::actual computation
previous occurrence::previous occurrence
constant address::constant address
beq type::beq type
beq bne::beq bne
contrantive decibel::contrantive decibel
decibel memory::decibel memory
field carries::field carries
carries instruction::carries instruction
field carry::field carry
carry prediction::carry prediction
prediction statistics::prediction statistics
first field::first field
match occurs::match occurs
store target::store target
instruction branch::instruction branch
instruction carries::instruction carries
repeated occurrences::repeated occurrences
hundred percent::hundred percent
percent accuracy::percent accuracy
simple case::simple case
global history::global history
means history::means history
recent occurrences::recent occurrences
incurring cost::incurring cost
control hardware::control hardware
wrong decisions::wrong decisions
powerful method::powerful method
avoid stalls::avoid stalls
dynamic solutions::dynamic solutions
doing data::doing data
correct action::correct action
similar mechanism::similar mechanism
producing result::producing result
compiler doesn::compiler doesn
dynamic pipeline::dynamic pipeline
expensive thing::expensive thing
extra hardware::extra hardware
find instructions::find instructions
pipeline busy::pipeline busy
order instruction::order instruction
speculative execution::speculative execution
super scalar::super scalar
scalar architecture::scalar architecture
multiple instruction::multiple instruction
level parallelism::level parallelism
parallel parallelism::parallel parallelism
multiple processors::multiple processors
processors doing::processors doing
doing multiple::doing multiple
multiple instructions::multiple instructions
carrying multiple::carrying multiple
multiple operations::multiple operations
long instruction::long instruction
instruction word::instruction word
coded multiple::coded multiple
instructions put::instructions put
term vliw::term vliw
large instruction::large instruction
compiler driven::compiler driven
driven vliw::driven vliw
vliw approach::vliw approach
basic thing::basic thing
multiple functional::multiple functional
functional units::functional units
multiple alu::multiple alu
handle multiple::handle multiple
basic requirement::basic requirement
support multiple::support multiple
multiple read::multiple read
write ports::write ports
compiler forms::compiler forms
long instructions::long instructions
instructions carrying::instructions carrying
complicated decode::complicated decode
issue unit::issue unit
scalar instruction::scalar instruction
special instruction::special instruction
operational fields::operational fields
alternative architecture::alternative architecture
architecture versus::architecture versus
versus timing::versus timing
top picture::top picture
stage pipeline::stage pipeline
pipeline lets::pipeline lets
decode execute::decode execute
ideal case::ideal case
scalar suppose::scalar suppose
instructions decoding::instructions decoding
instructions executing::instructions executing
instructions doing::instructions doing
single instruction::single instruction
multiple operation::multiple operation
execute operations::execute operations
common perspective::common perspective
modern processors::modern processors
scalar processors::scalar processors
high performance::high performance
performance desktop::performance desktop
desktop computing::desktop computing
computing machines::computing machines
processors vliw::processors vliw
varied applications::varied applications
purpose computing::purpose computing
main reason::main reason
code compatibility::code compatibility
scalar version::scalar version
compatibility exists::compatibility exists
older machines::older machines
code code::code code
instruction set::instruction set
machine doing::machine doing
doing executing::doing executing
code faster::code faster
achieve speed::achieve speed
vliw technique::vliw technique
specialized compiler::specialized compiler
level pack::level pack
source level::source level
level compatibility::level compatibility
object level::object level
commercial point::commercial point
major issue::major issue
processor require::processor require
normal scalar::normal scalar
scalar machine::scalar machine
code super::code super
scalar processor::scalar processor
earlier code::earlier code
code density::code density
cost super::cost super
super scalars::super scalars
higher degree::higher degree
vlwi technique::vlwi technique
technique provided::technique provided
good compiler::good compiler
exception handling::exception handling
exceptional handling::exceptional handling
design exception::design exception
main problem::main problem
showing overflow::showing overflow
page fault::page fault
illegal opcode::illegal opcode
wrong opcode::wrong opcode
makes things::makes things
precise interrupt::precise interrupt
interrupt means::interrupt means
detect interrupts::detect interrupts
machines insist::machines insist
imprecise interrupts::imprecise interrupts
complexities involved::complexities involved
improve branch::improve branch
branch performance::branch performance
performance including::performance including
including branch::including branch
elimination branch::elimination branch
branch speed::branch speed
dynamic manner::dynamic manner
vliw architecture::vliw architecture
basically instruction::basically instruction
parallel architectures::parallel architectures
make cpi::make cpi
real case::real case
vliw manner::vliw manner
scalar manner::scalar manner
engineering,iit delhi::engineering,iit delhi
start discussion::start discussion
set arhitecture::set arhitecture
lecture instructions::lecture instructions
instructions form::instructions form
software instructions::software instructions
instructions provide::instructions provide
hardware point::hardware point
view instructions::view instructions
basic behaviour::basic behaviour
behaviour definitions::behaviour definitions
simple instructions::simple instructions
arithmetic operations::arithmetic operations
addition subtraction::addition subtraction
move data::move data
constant operands::constant operands
machine instructions::machine instructions
machine language::machine language
assembly language::assembly language
basic building::basic building
building blocks::building blocks
maximize performance::maximize performance
performance maximize::performance maximize
maximize efficiency::maximize efficiency
instructions hardware::instructions hardware
power consumption::power consumption
toy machine::toy machine
real machine::real machine
early eighties::early eighties
typical architecture::typical architecture
risk reduced::risk reduced
reduced instruction::reduced instruction
set computers::set computers
eighties onwards::eighties onwards
typical architectures::typical architectures
video games::video games
games silicon::games silicon
silicon graphics::silicon graphics
graphics computers::graphics computers
play station::play station
real architecture::real architecture
toy architecture::toy architecture
fairly simple::fairly simple
short period::short period
full grasp::full grasp
simple architecture::simple architecture
arithmetic instructions::arithmetic instructions
simplest arithmetic::simplest arithmetic
simplest form::simplest form
register dollar::register dollar
special symbol::special symbol
variable names::variable names
mips machine::mips machine
infix symbols::infix symbols
adding contents::adding contents
infact simplicity::infact simplicity
design goals::design goals
simplicity favors::simplicity favors
favors regularity::favors regularity
similar format::similar format
primitive instruction::primitive instruction
bit numbers::bit numbers
bit registers::bit registers
arbitary sides::arbitary sides
atleast make::atleast make
single step::single step
larger numbers::larger numbers
common case::common case
fast beat::fast beat
complex expressions::complex expressions
temporary location::temporary location
high level::high level
level language::level language
first statement::first statement
subtraction operation::subtraction operation
restate forward::restate forward
forward manner::forward manner
hold bulk::hold bulk
bulk data::bulk data
larger data::larger data
data structures::data structures
records structures::records structures
structures arrays::structures arrays
mips registers::mips registers
specific locations::specific locations
dimensional array::dimensional array
array consisting::array consisting
addressable unit::addressable unit
bit operations::bit operations
final resolution::final resolution
individual byte::individual byte
byte addresses::byte addresses
byte number::byte number
power thirty::power thirty
words thirty::words thirty
bit words::bit words
typically addresses::typically addresses
thirty words::thirty words
spelling error::spelling error
big endian::big endian
endian means::endian means
numbering bytes::numbering bytes
significant side::significant side
left side::left side
significant bit::significant bit
right side::right side
endian convention::endian convention
bit end::bit end
machines follow::machines follow
intel processors::intel processors
processors follow::processors follow
convention spark::convention spark
spark processor::spark processor
simulator depending::simulator depending
host machine::host machine
computer centre::computer centre
word beginning::word beginning
fourth byte::fourth byte
logical word::logical word
point ending::point ending
byte address::byte address
word consisting::word consisting
physical words::physical words
excess memory::excess memory
array add::array add
eigth element::eigth element
lets assume::lets assume
integer array::integer array
load byte::load byte
number thirty::number thirty
starting address::starting address
type integer::type integer
data loaded::data loaded
instruction writes::instruction writes
simple situation::simple situation
constant indices::constant indices
complex situation::complex situation
complex expression::complex expression
memory perform::memory perform
arithmetic put::arithmetic put
moving data::moving data
variable index::variable index
small function::small function
temporary variable::temporary variable
standard thing::standard thing
structural view::structural view
put values::put values
multiply instruction::multiply instruction
multiply contents::multiply contents
instruction takes::instruction takes
byte offset::byte offset
final address::final address
variable part::variable part
entire address::entire address
complete address::complete address
register fifteen::register fifteen
load load::load load
opposite order::opposite order
reverse order::reverse order
instructions written::instructions written
machine machine::machine machine
machine instruction::machine instruction
add operation::add operation
registers involved::registers involved
involved registers::involved registers
etcetera numbered::etcetera numbered
previous examples::previous examples
registers labelled::registers labelled
add dollar::add dollar
bit word::bit word
field specifies::field specifies
bit fields::bit fields
first bit::first bit
code field::code field
zeros subtract::zeros subtract
code divide::code divide
machine requires::machine requires
last field::last field
fuction field::fuction field
infact subtract::infact subtract
instruction add::instruction add
numbers numbering::numbers numbering
shift amount::shift amount
shift instructions::shift instructions
fields correspond::fields correspond
register destination::register destination
register source::register source
code eighteen::code eighteen
bit number::bit number
long string::long string
hexa decimal::hexa decimal
decimal form::decimal form
store instructions::store instructions
instructions load::instructions load
machine representation::machine representation
form uniform::form uniform
similar nature::similar nature
good design::good design
design demands::design demands
sixteen bit::sixteen bit
decimal equivalents::decimal equivalents
eighteen line::eighteen line
offset thirty::offset thirty
constant part::constant part
define flow::define flow
bne stands::bne stands
beq stands::beq stands
equality comparison::equality comparison
symbolic assembly::symbolic assembly
instructions allowing::instructions allowing
equality doesn::equality doesn
branch statement::branch statement
conditional branches::conditional branches
testing condition::testing condition
unconditional branch::unconditional branch
instruction symbol::instruction symbol
unconditional jump::unconditional jump
condition doesn::condition doesn
label lab::label lab
instruction subtract::instruction subtract
instruction subtracts::instruction subtracts
instruction addition::instruction addition
control flows::control flows
common point::common point
language statement::language statement
equality equality::equality equality
slt stands::slt stands
slt dollar::slt dollar
set value::set value
equivalent definition::equivalent definition
blt suppose::blt suppose
holds suppose::holds suppose
bne types::bne types
compare make::compare make
make comparison::make comparison
comparison result::comparison result
instruction lets::instruction lets
beq follow::beq follow
assembly form::assembly form
exact thing::exact thing
remaining twenty::remaining twenty
address slt::address slt
slt instruction::slt instruction
fields shift::fields shift
amount field::amount field
define slt::define slt
constants put::constants put
constant data::constant data
possibilities exist::possibilities exist
register number::register number
normal add::normal add
memory location::memory location
logical operation::logical operation
larger constants::larger constants
special constant::special constant
special register::special register
contents remain::contents remain
program suppose::program suppose
separate move::separate move
move instruction::move instruction
large constants::large constants
bit constants::bit constants
instructions deal::instructions deal
bit constant::bit constant
constant rate::constant rate
larger design::larger design
eighteen twenty::eighteen twenty
twenty twenty::twenty twenty
instruction handling::instruction handling
handling thirty::handling thirty
total thirty::total thirty
left half::left half
half left::half left
instruction fills::instruction fills
right half::right half
special extraction::special extraction
load upper::load upper
lui upper::lui upper
upper means::upper means
upper part::upper part
register left::register left
lui dollar::lui dollar
upper half::upper half
instruction ori::instruction ori
lower half::lower half
constant put::constant put
executed register::executed register
small constant::small constant
register operand::register operand
subtract add::subtract add
subtract follow::subtract follow
format add::format add
logical instruction::logical instruction
odd man::odd man
word store::word store
format lui::format lui
lui load::lui load
full form::full form
bne bne::bne bne
equal beq::equal beq
size adding::size adding
smaller numbers::smaller numbers
entererd swap::entererd swap
swap instruction::swap instruction
instruction swap::instruction swap
swap operation::swap operation
key part::key part
load instructions::load instructions
first multiply::first multiply
operation bit::operation bit
bit operation::bit operation
sixteen positions::sixteen positions
first number::first number
sixteen zeros::sixteen zeros
instruction ors::instruction ors
large constant::large constant
natural question::natural question
performance point::performance point
term means::term means
architectural choices::architectural choices
design alternatives::design alternatives
deign choice::deign choice
design choice::design choice
quantitative metric::quantitative metric
precise definition::precise definition
users perpective::users perpective
designers perspective::designers perspective
perpesctive suppose::perpesctive suppose
computer system::computer system
lab organisation::lab organisation
personal computer::personal computer
compare performance::compare performance
performance wise::performance wise
machine vendor::machine vendor
cost implication::cost implication
save money::save money
lower performance::lower performance
performance price::performance price
price ratio::price ratio
instruction sets::instruction sets
major styles::major styles
styles load::styles load
store style::store style
memory memory::memory memory
memory style::memory style
style stack::style stack
stack style::stack style
accumulator type::accumulator type
instruction design::instruction design
design stage::design stage
hardware stage::hardware stage
cheapest option::cheapest option
performance means::performance means
precised terms::precised terms
measurable quantity::measurable quantity
summary number::summary number
good choices::good choices
issues involved::issues involved
involved performance::involved performance
performance number::performance number
performance method::performance method
measurement method::measurement method
summarizing method::summarizing method
design choices::design choices
choice performs::choice performs
doing word::doing word
word processing::word processing
factors influencing::factors influencing
hardware design::hardware design
performance factors::performance factors
architectural issues::architectural issues
instruction style::instruction style
basic points::basic points
computer performance::computer performance
daily life::daily life
aircrafts shows::aircrafts shows
perfomance comparison::perfomance comparison
carrying capacity::carrying capacity
simple matter::simple matter
speed concorde::speed concorde
maximum speed::maximum speed
long flights::long flights
thousand miles::thousand miles
non stop::non stop
stop flight::stop flight
passenger capacity::passenger capacity
carry lets::carry lets
fifty passengers::fifty passengers
achieve whats::achieve whats
points lets::points lets
passengers carried::passengers carried
composite measure::composite measure
view boeing::view boeing
multiple criteria::multiple criteria
multiple machines::multiple machines
aircraft context::aircraft context
wall clock::wall clock
interactive environment::interactive environment
environment lets::environment lets
database query::database query
atm type::atm type
generic term::generic term
out number::out number
machine run::machine run
average execution::average execution
execution rate::execution rate
individual user::individual user
important factor::important factor
lets put::lets put
system manager::system manager
user community::user community
user programs::user programs
single computer::single computer
high throughput::high throughput
waiting times::waiting times
quick access::quick access
machine busy::machine busy
maximize throughput::maximize throughput
complete grasp::complete grasp
improve response::improve response
define performance::define performance
throughput aspect::throughput aspect
individual concern::individual concern
bigger number::bigger number
larger number::larger number
number represents::number represents
takes measure::takes measure
forward definition::forward definition
relative performance::relative performance
performance numbers::performance numbers
numbers performance::numbers performance
power execution::power execution
suppose machine::suppose machine
twenty seconds::twenty seconds
twenty times::twenty times
percent faster::percent faster
concorde versus::concorde versus
versus boeing::versus boeing
travel times::travel times
mph divided::mph divided
twenty percent::twenty percent
percent times::percent times
hours divided::hours divided
reciprocal ratio::reciprocal ratio
compared throughput::compared throughput
pmph figure::pmph figure
figure passenger::figure passenger
capacity multiplied::capacity multiplied
sixty percent::sixty percent
throughput sense::throughput sense
first comparison::first comparison
speed sense::speed sense
current discussion::current discussion
faster clock::faster clock
processor replace::processor replace
faster processor::faster processor
giga hertz::giga hertz
throughput change::throughput change
jobs suppose::jobs suppose
programs run::programs run
improve throughput::improve throughput
taking multiple::taking multiple
multiple jobs::multiple jobs
scheduled manner::scheduled manner
throughput infact::throughput infact
sharing processor::sharing processor
lab environment::lab environment
work done::work done
processor takes::processor takes
ten machines::ten machines
fifty machines::fifty machines
atm machine::atm machine
back end::back end
atm machines::atm machines
similar environment::similar environment
waiting waitin::waiting waitin
practical question::practical question
cost factor::cost factor
aircraft situation::aircraft situation
budget limiting::budget limiting
limiting budget::limiting budget
minimum cost::minimum cost
access files::access files
input output::input output
multi tasking::multi tasking
tasking environment::tasking environment
cpu execution::cpu execution
disk access::disk access
total cpu::total cpu
user code::user code
peripheral design::peripheral design
processor architecture::processor architecture
user cpu::user cpu
scheduling policy::scheduling policy
user program::user program
user component::user component
ninety seconds::ninety seconds
hundred twelve::hundred twelve
twelve seconds::twelve seconds
fifty seconds::fifty seconds
cpu spent::cpu spent
processors run::processors run
periodic signal::periodic signal
ano seconds::ano seconds
seconds cycle::seconds cycle
events takes::events takes
hardware activity::hardware activity
discrete edges::discrete edges
clock frequency::clock frequency
hundred mega::hundred mega
mega hertz::mega hertz
nano seconds::nano seconds
cpu clock::cpu clock
milli seconds::milli seconds
cycles divivded::cycles divivded
clock rate::clock rate
cycles depend::cycles depend
instruction count::instruction count
cpi stands::cpi stands
write cpu::write cpu
count multiplied::count multiplied
cpi multiplied::cpi multiplied
cpi divided::cpi divided
thee quantities::thee quantities
equation cpu::equation cpu
program cpi::program cpi
instructions cancel::instructions cancel
left hand::left hand
hand side::hand side
side seconds::side seconds
seconds required::seconds required
lets illustrate::lets illustrate
fifty mega::fifty mega
find execution::find execution
thousand instructions::thousand instructions
find cpu::find cpu
thousand cpi::thousand cpi
ten raised::ten raised
power minus::power minus
seventy macro::seventy macro
macro seconds::macro seconds
frequency increases::frequency increases
case clock::case clock
factors remain::factors remain
inverse ratio::inverse ratio
clock rates::clock rates
direct ratio::direct ratio
fractional cpi::fractional cpi
hardware takes::hardware takes
takes longer::takes longer
individual instructions::individual instructions
instructions suppose::instructions suppose
instruction types::instruction types
individual instruction::individual instruction
present fifty::present fifty
fifty percent::fifty percent
category twenty::category twenty
ten percent::ten percent
percent branches::percent branches
alu instruction::alu instruction
instruction cpi::instruction cpi
alu stands::alu stands
arithmetic logic::arithmetic logic
logic unit::logic unit
unit instruction::unit instruction
cycle load::cycle load
load takes::load takes
store takes::store takes
cycles branch::cycles branch
branch takes::branch takes
find cpi::find cpi
taking fraction::taking fraction
instruction spends::instruction spends
doing alu::doing alu
alu instructions::alu instructions
doing load::doing load
load instrution::load instrution
total cpi::total cpi
fraction point::fraction point
fourteen percent::fourteen percent
processor spends::processor spends
spend maximum::spend maximum
doing loads::doing loads
efficient manner::efficient manner
integer operations::integer operations
floating point::floating point
point operations::point operations
operations floating::operations floating
operations memory::operations memory
memory accesses::memory accesses
accessing registers::accessing registers
instruction depends::instruction depends
cycle faster::cycle faster
cycle right::cycle right
multiply operation::multiply operation
period multiplied::period multiplied
composite effect::composite effect
formula seconds::formula seconds
program multiplied::program multiplied
program right::program right
simple equations::simple equations
complicated statement::complicated statement
statement lets::statement lets
ten seconds::ten seconds
computer design::computer design
expensive technology::expensive technology
cpu design::cpu design
design causing::design causing
causing machine::causing machine
target pardon::target pardon
doubled reduce::doubled reduce
first case::first case
system cpu::system cpu
system means::system means
means operating::means operating
operating system::operating system
architecture today::architecture today
exciting area::exciting area
integral part::integral part
daily activities::daily activities
typical computer::typical computer
storage capacity::storage capacity
nineteen fifties::nineteen fifties
big hall::big hall
sitting today::sitting today
common form::common form
weather prediction::weather prediction
prediction nuclear::prediction nuclear
nuclear simulation::nuclear simulation
astronomical calculation::astronomical calculation
bio informatics::bio informatics
computing power::computing power
small computers::small computers
home appliances::home appliances
appliances cameras::appliances cameras
cameras mobile::cameras mobile
mobile phones::mobile phones
entire variety::entire variety
computers entire::computers entire
entire diversity::entire diversity
common principle::common principle
term computer::term computer
computers work::computers work
basic principle::basic principle
important issue::important issue
performance people::performance people
wrong notion::wrong notion
chip area::chip area
basic principles::basic principles
computer works::computer works
construction aspects::construction aspects
sophisticated techniques::sophisticated techniques
todays architectures::todays architectures
memory structure::memory structure
modern concepts::modern concepts
advanced courses::advanced courses
basic features::basic features
modern computers::modern computers
improved version::improved version
existing system::existing system
small today::small today
software stream::software stream
devolping software::devolping software
good understanding::good understanding
stream understanding::stream understanding
agin understanding::agin understanding
basic performance::basic performance
embedded computers::embedded computers
design opportunities::design opportunities
embedded component::embedded component
computer achitecture::computer achitecture
architectural buildings::architectural buildings
buildings building::buildings building
building architecture::building architecture
decide functionality::decide functionality
residential building::residential building
living area::living area
dining area::dining area
civil engineer::civil engineer
structured design::structured design
strains durability::strains durability
computer architect::computer architect
logic design::logic design
circuit design::circuit design
functionality realise::functionality realise
circuit designer::circuit designer
basic components::basic components
transistors registers::transistors registers
registers capacitors::registers capacitors
design aspect::design aspect
find abstractions::find abstractions
abstraction means::abstraction means
out details::out details
circuit point::circuit point
mind boggling::mind boggling
software abstraction::software abstraction
essentially solution::essentially solution
trivial function::trivial function
language programmer::language programmer
eqivalent program::eqivalent program
simple computation::simple computation
right place::right place
circuitary inside::circuitary inside
inside processor::inside processor
last statement::last statement
assembler assembler::assembler assembler
forward process::forward process
machine code::machine code
number number::number number
number notation::number notation
decimal number::decimal number
base sixteen::base sixteen
decimal digits::decimal digits
decimal notation::decimal notation
binary notation::binary notation
notation inside::notation inside
binary numbers::binary numbers
program data::program data
numbers don::numbers don
hardware understands::hardware understands
major module::major module
processor cpu::processor cpu
central processing::central processing
processing unit::processing unit
output devices::output devices
mouse keyboard::mouse keyboard
keyboard display::keyboard display
display disk::display disk
disk drive::disk drive
system bus::system bus
memory bus::memory bus
bridge connecting::bridge connecting
labelled cpu::labelled cpu
sub divided::sub divided
counter register::counter register
file alu::file alu
bus interface::bus interface
interface program::interface program
file stores::file stores
stores operand::stores operand
arithmetical logical::arithmetical logical
logical relational::logical relational
relational comparison::relational comparison
comparison operation::comparison operation
large number::large number
basic devices::basic devices
devices transistor::devices transistor
transistor register::transistor register
harware level::harware level
sub systems::sub systems
complex electronic::complex electronic
components mounted::components mounted
bottom side::bottom side
floppy disk::floppy disk
hard disk::hard disk
drive cdrom::drive cdrom
parallel bar::parallel bar
heat sink::heat sink
output cards::output cards
processor area::processor area
slots pci::slots pci
memory module::memory module
package form::package form
individual memory::individual memory
memory chips::memory chips
complete memory::complete memory
memory system::memory system
seagate hard::seagate hard
disk controller::disk controller
controller circuit::controller circuit
highest level::highest level
language programs::language programs
lowest level::lowest level
hardware side::hardware side
major building::major building
building block::building block
block registers::block registers
registers adders::registers adders
individual components::individual components
hardware software::hardware software
software boundary::software boundary
basic capability::basic capability
major harware::major harware
harware components::harware components
machine defined::machine defined
hardware designer::hardware designer
hardware levels::hardware levels
software architecture::software architecture
set level::set level
micro architecture::micro architecture
architecture level::architecture level
set architecture::set architecture
architecture refers::architecture refers
flip flops::flip flops
basic unit::basic unit
logic modules::logic modules
typical view::typical view
place instruction::place instruction
application programs::application programs
system software::system software
level programs::level programs
compile load::compile load
execute programs::execute programs
broad cpu::broad cpu
lower level::lower level
physical dimension::physical dimension
physical manifestation::physical manifestation
language view::language view
view defines::view defines
processor state::processor state
execute instruction::execute instruction
state defined::state defined
defined state::defined state
memory contents::memory contents
permanent data::permanent data
hardware components::hardware components
files alu::files alu
hand held::hand held
held devices::held devices
devices devices::devices devices
computers lap::computers lap
lap tops::lap tops
consuming power::consuming power
large rate::large rate
out computation::out computation
dominating issue::dominating issue
suitable trade::suitable trade
extreme power::extreme power
power saving::power saving
require lots::require lots
architect lies::architect lies
making right::making right
right choice::right choice
specialized structure::specialized structure
create functions::create functions
program abstractions::program abstractions
key components::key components
alu registers::alu registers
registers condition::registers condition
condition codes::condition codes
desired operation::desired operation
right thing::right thing
providing branches::providing branches
level languages::level languages
sophisticated processor::sophisticated processor
simple processor::simple processor
specific examples::specific examples
common thing::common thing
processor works::processor works
simple instruction::simple instruction
real problem::real problem
real situation::real situation
memory words::memory words
supposedly integers::supposedly integers
understand mathematics::understand mathematics
real programs::real programs
real hardware::real hardware
finite number::finite number
real numbers::real numbers
finite precison::finite precison
finite range::finite range
nice properties::nice properties
real number::real number
mathematical domain::mathematical domain
real instructions::real instructions
life program::life program
asembly language::asembly language
physical reality::physical reality
abstract model::abstract model
unbounded array::unbounded array
physically memory::physically memory
fixed number::fixed number
flat array::flat array
hierarchial structure::hierarchial structure
real practice::real practice
discussion focuses::discussion focuses
asymptotic complexity::asymptotic complexity
bottom line::bottom line
theoritical consideration::theoritical consideration
seconds seconds::seconds seconds
computers domain::computers domain
designing hardware::designing hardware
embedded processor::embedded processor
intelligent function::intelligent function
conventional view::conventional view
computing engine::computing engine
proces information::proces information
communication opens::communication opens
application possibilities::application possibilities
embedded computer::embedded computer
computer domain::computer domain
embedded domain::embedded domain
embedded application::embedded application
customized design::customized design
standard processor::standard processor
completary design::completary design
simplest part::simplest part
desk top::desk top
top computers::top computers
phones washing::phones washing
washing machines::washing machines
executing instructions::executing instructions
tremendous difference::tremendous difference
consumption cost::consumption cost
purpose means::purpose means
top computer::top computer
power point::power point
point presentation::point presentation
special purpose::special purpose
purpose computer::purpose computer
mobile phone::mobile phone
specific task::specific task
top processor::top processor
pentium processor::pentium processor
micro controller::micro controller
actual chip::actual chip
small rectangular::small rectangular
rectangular tcq::rectangular tcq
circular window::circular window
big space::big space
packaging requirements::packaging requirements
forty pins::forty pins
accommodate forty::accommodate forty
smaller packages::smaller packages
roughly lets::roughly lets
contrasting devices::contrasting devices
purpose processor::purpose processor
performance consumes::performance consumes
consumes lot::consumes lot
purpose applications::purpose applications
lower power::lower power
right works::right works
transparent window::transparent window
quartz window::quartz window
program inside::program inside
make correction::make correction
ultra violet::ultra violet
violet light::violet light
memory content::memory content
major topics::major topics
architectural aspects::architectural aspects
specific instruction::specific instruction
instructions work::instructions work
express computation::express computation
doing instructions::doing instructions
design aspects::design aspects
arithmetic unit::arithmetic unit
build circuitory::build circuitory
put register::put register
put buses::put buses
put program::put program
data flow::data flow
common technique::common technique
performance system::performance system
important component::important component
good performance::good performance
reasonable cost::reasonable cost
devices input::devices input
output controllers::output controllers
announcements put::announcements put
lab exercises::lab exercises
similar list::similar list
incidently doctor::incidently doctor
doctor kolin::doctor kolin
kolin paul::kolin paul
preparing presentation::preparing presentation
presentation material::presentation material
teaching assistant::teaching assistant
harsh dand::harsh dand
lab homepage::lab homepage
first lab::first lab
lab exercise::lab exercise
make submission::make submission
computer services::computer services
services centre::services centre
main book::main book
computer organisation::computer organisation
organisation design::organisation design
software interface::software interface
system design::system design
terms computer::terms computer
design computer::design computer
organisation computer::organisation computer
term architecture::term architecture
design refers::design refers
hardware building::hardware building
building aspects::building aspects
minors majors::minors majors
majors lab::majors lab
class asignment::class asignment
discussed today::discussed today
peripheral computer::peripheral computer
computer interface::computer interface
phone mobile::phone mobile
understand computer::understand computer
processor memory::processor memory
main functionality::main functionality
user point::user point
computer point::computer point
palm palm::palm palm
palm top::palm top
communication variety::communication variety
computers history::computers history
studying history::studying history
good insight::good insight
political history::political history
economic history::economic history
significant impact::significant impact
past half::past half
landmark development::landmark development
regular generation::regular generation
develop computer::develop computer
computer systems::computer systems
electronic system::electronic system
major technological::major technological
technological development::technological development
development takes::development takes
drastic sudden::drastic sudden
sudden change::sudden change
size size::size size
earlier computer::earlier computer
large organisations::large organisations
individual computers::individual computers
computer density::computer density
appliances mobile::appliances mobile
situation today::situation today
extended periods::extended periods
first generation::first generation
basic device::basic device
vacuum tube::vacuum tube
tube vacuum::tube vacuum
basic electronic::basic electronic
electronic device::electronic device
switch voltage::switch voltage
current levels::current levels
expensive bulky::expensive bulky
huge roomful::huge roomful
punched cards::punched cards
paper tapes::paper tapes
rotating drum::rotating drum
magnetic rotating::magnetic rotating
generation computers::generation computers
generation ends::generation ends
rapid transition::rapid transition
growth development::growth development
development improvement::development improvement
generation change::generation change
texas instruments::texas instruments
transistors perform::transistors perform
similar function::similar function
smaller faster::smaller faster
faster cheaper::faster cheaper
language people::language people
people started::people started
early versions::early versions
fortran cobol::fortran cobol
technology moved::technology moved
single silicon::single silicon
silicon chip::silicon chip
integrated circuits::integrated circuits
single device::single device
early chip::early chip
chip depending::chip depending
ssi msi::ssi msi
lsi ssi::lsi ssi
ssi stands::ssi stands
small scale::small scale
scale integration::scale integration
integration medium::integration medium
medium scale::medium scale
large scale::large scale
naturally equipment::naturally equipment
equipment computer::equipment computer
speed increased::speed increased
efficiency increased::efficiency increased
additional peripherals::additional peripherals
paper tape::paper tape
batch processing::batch processing
processing environment::processing environment
punching program::punching program
central facility::central facility
small syntactic::small syntactic
syntactic mistakes::syntactic mistakes
full stop::full stop
program result::program result
error message::error message
correction submit::correction submit
tedious process::tedious process
computing started::computing started
online mode::online mode
major change::major change
change occur::change occur
vlsi appeared::vlsi appeared
entire processor::entire processor
single chip::single chip
arise lsi::arise lsi
vlsi vlsi::vlsi vlsi
vlsi stands::vlsi stands
scale integrated::scale integrated
ulsi ultra::ulsi ultra
late seventies::late seventies
infact tens::infact tens
initially vlsi::initially vlsi
individuals owning::individuals owning
personal computing::personal computing
computing home::computing home
home computing::home computing
means computers::means computers
large system::large system
graphical user::graphical user
user interface::user interface
fourth generation::fourth generation
microprocessor era::microprocessor era
find mention::find mention
technological revolution::technological revolution
artificial intelligence::artificial intelligence
parallel processing::parallel processing
input outputs::input outputs
human life::human life
generation computing::generation computing
massive project::massive project
previous definition::previous definition
previous generation::previous generation
hardware technology::hardware technology
technical features::technical features
performance divided::performance divided
unit cost::unit cost
astonishing improvement::astonishing improvement
relative scale::relative scale
tube transistor::tube transistor
transistor integrated::transistor integrated
integrated circuit::integrated circuit
years nineteen::years nineteen
cost raises::cost raises
interesting thing::interesting thing
memory capacity::memory capacity
entire period::entire period
dynamic ram::dynamic ram
basic semiconductor::basic semiconductor
semiconductor memory::semiconductor memory
computers today::computers today
linear rise::linear rise
log scale::log scale
exponential rise::exponential rise
early period::early period
twenty years::twenty years
capacity change::capacity change
half years::half years
capacity doubles::capacity doubles
graph shows::graph shows
complete computer::complete computer
include performance::include performance
performance contribution::performance contribution
contribution made::contribution made
single figure::single figure
ten years::ten years
years period::years period
early machines::early machines
mix machines::mix machines
machines ibm::machines ibm
ibm machine::ibm machine
key developments::key developments
technology changed::technology changed
significant events::significant events
major events::major events
events beginning::events beginning
first programmable::first programmable
programmable computer::programmable computer
konrad zuse::konrad zuse
nineteen forty::nineteen forty
harvard mark::harvard mark
harvard architecture::harvard architecture
storing program::storing program
storing data::storing data
commonly today::commonly today
single memory::single memory
accomodates program::accomodates program
memory units::memory units
previous attempts::previous attempts
computers developed::computers developed
formed basis::formed basis
pin point::pin point
competing claims::competing claims
john fon::john fon
fon newman::fon newman
store program::store program
takes instruction::takes instruction
simple idea::simple idea
changed history::changed history
commercial computer::commercial computer
kind system::kind system
research lab::research lab
first computer::first computer
ibm enters::ibm enters
significant player::significant player
language fortran::language fortran
first high::first high
original form::original form
fortran seventy::fortran seventy
nineteen fifty::nineteen fifty
first version::first version
stanford research::stanford research
research institute::research institute
banking industry::banking industry
magnetic ink::magnetic ink
ink corrector::ink corrector
corrector reading::corrector reading
ics integrated::ics integrated
circuits date::circuits date
computer game::computer game
game nineteen::game nineteen
nineteen sixty::nineteen sixty
computer mouse::computer mouse
computer network::computer network
network arpanet::network arpanet
network developed::network developed
defence funding::defence funding
funding arpa::funding arpa
arpa stands::arpa stands
advanced research::advanced research
research project::research project
project agency::project agency
defence agency::defence agency
funds research::funds research
research projects::research projects
integration begins::integration begins
first memory::first memory
first dynamic::first dynamic
ram chip::ram chip
first microprocessor::first microprocessor
flexible storage::flexible storage
storage unit::storage unit
flexible disk::flexible disk
flexible nature::flexible nature
ethernet computer::ethernet computer
computer networking::computer networking
nineteen seventy::nineteen seventy
first computers::first computers
first home::first home
home computer::home computer
consumer computers::consumer computers
popular computers::popular computers
apple trs::apple trs
trs eighty::trs eighty
spreadsheet program::spreadsheet program
first spreadsheet::first spreadsheet
visicalc developed::visicalc developed
first word::first word
word processor::word processor
processor wordstar::processor wordstar
wordstar nineteen::wordstar nineteen
important landmark::important landmark
nineteen eighty::nineteen eighty
personal level::personal level
series computing::series computing
earlier consumer::earlier consumer
consumer computer::consumer computer
reaped maximum::reaped maximum
first operating::first operating
microsoft operating::microsoft operating
system msdos::system msdos
apple lisa::apple lisa
lisa computer::lisa computer
extensive gui::extensive gui
graphic user::graphic user
textual interface::textual interface
give command::give command
graphic interface::graphic interface
popular computer::popular computer
apple apple::apple apple
apple macintosh::apple macintosh
traced history::traced history
end lets::end lets
early computer::early computer
ibm ibm::ibm ibm
compute tables::compute tables
tables indicating::tables indicating
indicating moon::indicating moon
moon positions::moon positions
apollo flight::apollo flight
fifty multiplications::fifty multiplications
pumched tape::pumched tape
vacuum tubes::vacuum tubes
control voltage::control voltage
ideal size::ideal size
required floor::required floor
floor space::floor space
twenty feet::twenty feet
feet twenty::feet twenty
forty feet::forty feet
feet univac::feet univac
first commercial::first commercial
magnetic tape::magnetic tape
tape printer::tape printer
printer memory::printer memory
memory size::memory size
thousand words::thousand words
words thousand::words thousand
thousand numbers::thousand numbers
twelve digits::twelve digits
delay lines::delay lines
magnetic tapes::magnetic tapes
fifty thousand::fifty thousand
todays system::todays system
similar order::similar order
popular systems::popular systems
systems ibm::systems ibm
cdc sixty::cdc sixty
modern day::modern day
day processors::day processors
architectural details::architectural details
details illiac::details illiac
parallel system::parallel system
system developed::system developed
illionos urbana::illionos urbana
urbana champaign::urbana champaign
major attempt::major attempt
large parallel::large parallel
high computers::high computers
computers computers::computers computers
computers shrunk::computers shrunk
mini computers::mini computers
type writer::type writer
crt monitor::crt monitor
picture xerox::picture xerox
xerox alto::xerox alto
alto machine::alto machine
first work::first work
work stations::work stations
powerful desk::powerful desk
fledged capability::fledged capability
large computer::large computer
good user::good user
pirating work::pirating work
developing window::developing window
window based::window based
based interface::based interface
granted today::granted today
super computer::super computer
early super::early super
super computers::super computers
computers cray::computers cray
performance computer::performance computer
highest performance::highest performance
circular form::circular form
wire length::wire length
cable short::cable short
extensive cooling::extensive cooling
high speed::high speed
interesting pictures::interesting pictures
atomic dimensions::atomic dimensions
specific elements::specific elements
nano technology::nano technology
technology area::technology area
area nano::area nano
technology means::technology means
nano meters::nano meters
computing refers::computing refers
spread world::spread world
massive number::massive number
hundred thousands::hundred thousands
single problem::single problem
computing capability::computing capability
extended quantum::extended quantum
quantum computing::quantum computing
computing based::computing based
quantum principles::quantum principles
tough computing::tough computing
computing problems::computing problems
dna computing::dna computing
complex structure::complex structure
technologies develop::technologies develop
depth understand::depth understand
programmers point::programmers point
discussing instruction::discussing instruction
level architecture::level architecture
arithmetic add::arithmetic add
bne instructions::bne instructions
large thirty::large thirty
loads upper::loads upper
instructions format::instructions format
register format::register format
bit opcode::bit opcode
controlled constructs::controlled constructs
thenelse type::thenelse type
simple check::simple check
typically beq::typically beq
bne instruction::bne instruction
executing loops::executing loops
switch type::switch type
mips instruction::mips instruction
subtle differences::subtle differences
lets start::lets start
summing elements::summing elements
forward thing::forward thing
unusual form::unusual form
main body::main body
submit update::submit update
perform loop::perform loop
loop termination::loop termination
termination check::termination check
forward move::forward move
single statement::single statement
first element::first element
word loaded::word loaded
running sum::running sum
index compare::index compare
means start::means start
blt instruction::blt instruction
instruction blt::instruction blt
pseudo instruction::pseudo instruction
real instruction::real instruction
pseudo instructions::pseudo instructions
blt compares::blt compares
slt slt::slt slt
slt compares::slt compares
assembler temporary::assembler temporary
temporary value::temporary value
intermediate value::intermediate value
special role::special role
assemblers usage::assemblers usage
assembler directives::assembler directives
data area::data area
code area::code area
dot data::dot data
directive dot::directive dot
dot space::dot space
hundred bytes::hundred bytes
area leave::area leave
leave space::leave space
size hundred::size hundred
dot text::dot text
load address::load address
symbolic language::symbolic language
data directive::data directive
default data::default data
arbitary size::arbitary size
size thirty::size thirty
register requires::register requires
step loads::step loads
lower right::lower right
lui instruction::lui instruction
right portion::right portion
data fill::data fill
output code::output code
faster code::faster code
improve code::improve code
modification made::modification made
performing sum::performing sum
extra statements::extra statements
pointer updation::pointer updation
lesser number::lesser number
extra statement::extra statement
loop efficient::loop efficient
hundred times::hundred times
address dollar::address dollar
previous case::previous case
initial address::initial address
address preparation::address preparation
preparation steps::preparation steps
remaining part::remaining part
notice whats::notice whats
loop question::loop question
check pointer::check pointer
final value::final value
final code::final code
programmed lets::programmed lets
nested loops::nested loops
simple sorting::simple sorting
sorting algorithm::sorting algorithm
first position::first position
loop makes::loop makes
main step::main step
key position::key position
first outer::first outer
first iteration::first iteration
position scan::position scan
interchange step::interchange step
initial position::initial position
end value::end value
last element::last element
comparing elements::comparing elements
elements pointed::elements pointed
updated comparison::updated comparison
pointer initialization::pointer initialization
statement prepares::statement prepares
comparison purpose::comparison purpose
comparing limits::comparing limits
limits pointed::limits pointed
element pointed::element pointed
abstract sense::abstract sense
earlier lecture::earlier lecture
values pointed::values pointed
blt statement::blt statement
cross fashion::cross fashion
interchange manner::interchange manner
jump instructions::jump instructions
control structure::control structure
boolean comparison::boolean comparison
false outcome::false outcome
result falls::result falls
small pieces::small pieces
switch statement::switch statement
break statement::break statement
repeated comparisons::repeated comparisons
multiway branch::multiway branch
register content::register content
starting addresses::starting addresses
label exit::label exit
add statement::add statement
jump table::jump table
table starting::table starting
prepared address::prepared address
location address::location address
properiat address::properiat address
forward code::forward code
code doing::code doing
non continuos::non continuos
continuos values::continuos values
table approach::table approach
specific cases::specific cases
thousand lets::thousand lets
twenty thousand::twenty thousand
thousand fourty::thousand fourty
thousand sixty::thousand sixty
address thousand::address thousand
general approach::general approach
base address::base address
blt bge::blt bge
lets begin::lets begin
type load::type load
register register::register register
index register::index register
base register::base register
exact effect::exact effect
negative right::negative right
offset lies::offset lies
twos complement::twos complement
complement form::complement form
complement notation::complement notation
representation detail::representation detail
word address::word address
double word::double word
exist instruction::exist instruction
varying size::varying size
aligned boundaries::aligned boundaries
instruction addresses::instruction addresses
current position::current position
positive offset::positive offset
negative offset::negative offset
instruction assembler::instruction assembler
word offset::word offset
speaking notice::speaking notice
hardware implementation::hardware implementation
hardware convenience::hardware convenience
full fledged::full fledged
fledged thirty::fledged thirty
bit address::bit address
instruction dot::instruction dot
dot dot::dot dot
dot twenty::dot twenty
lsb twenty::lsb twenty
bits twenty::bits twenty
memory space::memory space
effectively twenty::effectively twenty
byte twenty::byte twenty
current segment::current segment
power twenty::power twenty
exception case::exception case
jump statement::jump statement
initial value::initial value
last point::last point
last word::last word
thirty bit::thirty bit
instruction specifies::instruction specifies
learned today::learned today
simple compare::simple compare
branch statements::branch statements
simple loops::simple loops
loops nested::loops nested
loop begins::loop begins
tight loop::tight loop
efficient loop::efficient loop
small nitty::small nitty
nitty gritty::nitty gritty
gritty improvements::gritty improvements
compiler point::compiler point
compiler writters::compiler writters
generate code::generate code
efficient code::efficient code
improved code::improved code
inefficient program::inefficient program
final form::final form
systematic tranformations::systematic tranformations
subtle manner::subtle manner
instructions address::instructions address
point computer::point computer
important programming::important programming
programming language::programming language
language abstraction::language abstraction
build program::build program
hierarchial manner::hierarchial manner
construct large::construct large
large program::large program
logical instructions::logical instructions
constant comparison::constant comparison
jump load::jump load
store load::store load
arbitary location::arbitary location
made load::made load
address load::address load
procedural abstraction::procedural abstraction
last class::last class
times thinking::times thinking
arbitary piece::arbitary piece
single operation::single operation
control linkage::control linkage
means tranfer::means tranfer
control returns::control returns
sub data::sub data
data flows::data flows
procedure parameters::procedure parameters
result flow::result flow
calling program::calling program
carry values::carry values
carry value::carry value
local storage::local storage
storage decorations::storage decorations
procedural function::procedural function
function multiple::function multiple
multiple times::multiple times
fresh allocation::fresh allocation
global data::global data
local data::local data
previous picture::previous picture
direct recursion::direct recursion
indirect recursion::indirect recursion
control flow::control flow
flow data::flow data
global storage::global storage
sorting program::sorting program
double loop::double loop
main operation::main operation
operation inside::operation inside
suppose define::suppose define
xchg exchange::xchg exchange
assembly level::assembly level
place instructions::place instructions
call instruction::call instruction
jal jump::jal jump
link jal::link jal
jal stands::jal stands
treating xchg::treating xchg
label attached::label attached
jal instruction::jal instruction
call transfer::call transfer
additional thing::additional thing
current address::current address
return address::return address
address register::address register
return value::return value
global values::global values
return statement::return statement
takes contents::takes contents
stored return::stored return
provide control::provide control
passing parameters::passing parameters
simplest method::simplest method
specific registers::specific registers
registers designated::registers designated
cover lots::cover lots
common cases::common cases
additional parameters::additional parameters
specific memory::specific memory
simple extension::simple extension
storage suppose::storage suppose
array declaration::array declaration
storage area::storage area
area code::area code
continuous allocation::continuous allocation
code part::code part
specific convention::specific convention
data part::data part
storage assignment::storage assignment
nested calls::nested calls
calling fuction::calling fuction
return point::return point
first call::first call
call occurs::call occurs
endless loop::endless loop
procedure huh::procedure huh
last thing::last thing
location load::location load
sorting case::sorting case
case sorting::case sorting
sorting problem::sorting problem
minimum value::minimum value
start scanning::start scanning
location pointer::location pointer
loop call::loop call
exchange condition::exchange condition
conditional exchange::conditional exchange
exchange compare::exchange compare
exchange update::exchange update
exchange lets::exchange lets
callee understand::callee understand
min procedure::min procedure
exchange updates::exchange updates
forms body::forms body
address call::address call
suitable offset::suitable offset
recursive call::recursive call
recursive calls::recursive calls
parameter exchange::parameter exchange
start return::start return
appropriately exit::appropriately exit
fixed memory::fixed memory
subsequent calls::subsequent calls
generated inside::generated inside
subsequent returns::subsequent returns
return takes::return takes
original entry::original entry
entry point::entry point
natural structure::natural structure
natural data::natural data
data structure::data structure
out structure::out structure
calls occur::calls occur
out manner::out manner
return addresses::return addresses
function push::function push
direct instructions::direct instructions
stack pointer::stack pointer
make stack::make stack
stack grow::stack grow
reducing addresses::reducing addresses
increasing addresses::increasing addresses
maximum address::maximum address
start building::start building
building stack::building stack
lower addresses::lower addresses
decrement stack::decrement stack
create space::create space
side observation::side observation
listed subtract::listed subtract
negative constant::negative constant
pointer put::pointer put
desired register::desired register
pointer increase::pointer increase
longer considered::longer considered
recursive environment::recursive environment
return doesn::return doesn
fresh values::fresh values
stack stack::stack stack
declared suppose::declared suppose
local array::local array
fixed address::fixed address
natural place::natural place
earmark space::earmark space
local arrays::local arrays
local structures::local structures
longer required::longer required
pay attention::pay attention
assume availability::assume availability
occurs control::occurs control
require register::require register
conflict imagine::conflict imagine
finishes tells::finishes tells
fixed vision::fixed vision
partial computation::partial computation
convention helps::convention helps
write programs::write programs
write program::write program
leave values::leave values
partial results::partial results
callee feels::callee feels
transparent manner::transparent manner
callers value::callers value
work left::work left
concerned caller::concerned caller
similarly registers::similarly registers
caller requires::caller requires
conventions define::conventions define
case required::case required
register names::register names
hardware constraint::hardware constraint
dollar eighty::dollar eighty
expanding pseudo::expanding pseudo
instructions requires::instructions requires
temporary calculation::temporary calculation
assembler dollar::assembler dollar
parameter passing::parameter passing
basically number::basically number
returning values::returning values
passing values::passing values
saved temporaries::saved temporaries
global pointers::global pointers
continuous area::continuous area
frame pointer::frame pointer
hardware wise::hardware wise
instruction assumes::instruction assumes
hardware doesn::hardware doesn
return instruction::return instruction
general instruction::general instruction
activation record::activation record
systems follow::systems follow
everytime function::everytime function
activation records::activation records
pointer points::pointer points
first location::first location
last location::last location
previous activation::previous activation
local local::local local
make reference::make reference
top everythinh::top everythinh
dynamic storage::dynamic storage
storage allocation::storage allocation
dynamically allocation::dynamically allocation
longer act::longer act
reference point::reference point
point accessing::point accessing
constant offset::constant offset
point offsets::point offsets
lets summarize::lets summarize
summarize lets::summarize lets
basic ideas::basic ideas
first issue::first issue
arranging procedure::arranging procedure
procedure call::procedure call
follow lot::follow lot
complex recursive::complex recursive
recursive procedure::recursive procedure
record creation::record creation
data allocated::data allocated
local link::local link
function proceeds::function proceeds
link record::link record
constant offsets::constant offsets
dynamic part::dynamic part
complex methods::complex methods
simply access::simply access
aggregate terms::aggregate terms
push arguments::push arguments
push return::push return
push registers::push registers
matched infact::matched infact
common source::common source
pops match::pops match
memory allocated::memory allocated
pointer stack::pointer stack
entire memory::entire memory
typical case::typical case
data areas::data areas
opposite direction::opposite direction
direction grows::direction grows
random allocations::random allocations
automatic allocations::automatic allocations
return happen::return happen
fixed partition::fixed partition
stack area::stack area
heap area::heap area
count policy::count policy
total space::total space
program works::program works
fixed space::fixed space
recursive programs::recursive programs
previous class::previous class
sub routines::sub routines
register usage::register usage
temporary areas::temporary areas
temporary words::temporary words
recursive procedures::recursive procedures
temporary values::temporary values
create activation::create activation
function call::function call
main funtion::main funtion
sorting procedure::sorting procedure
merge sort::merge sort
recursive manner::recursive manner
recursive implementation::recursive implementation
crucial points::crucial points
assembly implementation::assembly implementation
main function::main function
sort function::sort function
recursive function::recursive function
maximum dimension::maximum dimension
actual size::actual size
sorted values::sorted values
forward function::forward function
input perform::input perform
elaboration lets::elaboration lets
merge function::merge function
function merge::function merge
recursive funtion::recursive funtion
sub matrices::sub matrices
matrices sub::matrices sub
sub arrays::sub arrays
parts sort::parts sort
equal halves::equal halves
output output::output output
temporary array::temporary array
sorted arrays::sorted arrays
stright forward::stright forward
small thing::small thing
variable size::variable size
size array::size array
maximum value::maximum value
split portion::split portion
local variables::local variables
variables initialised::variables initialised
max limits::max limits
smaller element::smaller element
larger element::larger element
creating array::creating array
array sorted::array sorted
sorted array::sorted array
ascending order::ascending order
remaining elements::remaining elements
tail end::tail end
defining activation::defining activation
records creating::records creating
lets define::lets define
merge procedure::merge procedure
parameters addresses::parameters addresses
addresses starting::addresses starting
reserve space::reserve space
parameters return::parameters return
put upto::put upto
creating activation::creating activation
smaller activation::smaller activation
entire requirement::entire requirement
usual convention::usual convention
additional registers::additional registers
procedure sort::procedure sort
array addresses::array addresses
integer value::integer value
similar idea::similar idea
entire array::entire array
half upper::half upper
defined activation::defined activation
showing part::showing part
main loop::main loop
transfering elements::transfering elements
local values::local values
instruction bge::instruction bge
bge branch::bge branch
begins loop::begins loop
steps multiplication::steps multiplication
preparing address::preparing address
register stored::register stored
loop ends::loop ends
offset required::offset required
procedure merge::procedure merge
entire procedure::entire procedure
calling point::calling point
sort procedure::sort procedure
additional record::additional record
statement takes::statement takes
starting twenty::starting twenty
twenty word::twenty word
means eighty::means eighty
eighty bytes::eighty bytes
actual argument::actual argument
forty forty::forty forty
thethird statement::thethird statement
statement requires::statement requires
requires correction::requires correction
twenty forty::twenty forty
forty words::forty words
sixty bytes::sixty bytes
sixty offset::sixty offset
offset bring::offset bring
twelve bytes::twelve bytes
created activation::created activation
small activation::small activation
record filling::record filling
simple single::simple single
temporary data::temporary data
first load::first load
load statement::load statement
statement loads::statement loads
loads return::loads return
adding twelve::adding twelve
jump register::jump register
register brings::register brings
current invocation::current invocation
values adress::values adress
store forty::store forty
store return::store return
sort call::sort call
address place::address place
lets pick::lets pick
offset twenty::offset twenty
minus twelve::minus twelve
top position::top position
offset forty::offset forty
eighty eighty::eighty eighty
record generation::record generation
space required::space required
arrays twenty::arrays twenty
stack dispose::stack dispose
pointer minus::pointer minus
assembly encoding::assembly encoding
lab work::lab work
array size::array size
pointer version::pointer version
first write::first write
assembly version::assembly version
large activation::large activation
stack grows::stack grows
analytical calculation::analytical calculation
recursion related::recursion related
maximum stack::maximum stack
stack size::stack size
additional code::additional code
empty stack::empty stack
stack assign::stack assign
value decreases::value decreases
update value::update value
maximum size::maximum size
actual value::actual value
parameter value::parameter value
input array::input array
data size::data size
present algorithm::present algorithm
algorithm written::algorithm written
space usage::space usage
create array::create array
array everytime::array everytime
recursive functions::recursive functions
entire usage::entire usage
crucial decisions::crucial decisions
easily access::easily access
access data::access data
stack fill::stack fill
return recover::return recover
today computer::today computer
architecture space::architecture space
understand instruction::understand instruction
mips architecture::mips architecture
things work::things work
level close::level close
architectural space::architectural space
main key::main key
key features::key features
key points::key points
key characteristics::key characteristics
terms risc::terms risc
set computer::set computer
complex instruction::complex instruction
architectural styles::architectural styles
lecture today::lecture today
main things::main things
storage structure::storage structure
purpose registers::purpose registers
address space::address space
represent instructions::represent instructions
binary patterns::binary patterns
predominant features::predominant features
characterize mips::characterize mips
complete mips::complete mips
basic instructions::basic instructions
common operation::common operation
small set::small set
operations exist::operations exist
relational operation::relational operation
equal branch::equal branch
slt operation::slt operation
procedure linkage::procedure linkage
data bringing::data bringing
bringing data::bringing data
non integers::non integers
sixteen registers::sixteen registers
equal ease::equal ease
register numbers::register numbers
register play::register play
specific role::specific role
value doesn::value doesn
procedure linkages::procedure linkages
harder fast::harder fast
curent instruction::curent instruction
thirty minus::thirty minus
mega bytes::mega bytes
spaces empty::spaces empty
addressing mode::addressing mode
access operands::access operands
addressing modes::addressing modes
right column::right column
mode register::mode register
register addressing::register addressing
mode base::mode base
relative pseudo::relative pseudo
register indirect::register indirect
constant operand::constant operand
first addressing::first addressing
source operand::source operand
destination result::destination result
jump target::jump target
divide slt::divide slt
slt beq::slt beq
base addressing::base addressing
addressing involves::addressing involves
resulting address::resulting address
address refers::address refers
assume operands::assume operands
destination source::destination source
relative addressing::relative addressing
implicit register::implicit register
addressing refers::addressing refers
bytes hundred::bytes hundred
hundred words::hundred words
direct addressing::direct addressing
specifies address::specifies address
address field::address field
link instruction::link instruction
constant field::constant field
significant end::significant end
zeros forms::zeros forms
bit byte::bit byte
direct address::direct address
indirect addressing::indirect addressing
register points::register points
specific instructions::specific instructions
instruction opcode::instruction opcode
independent manner::independent manner
orthogonal parts::orthogonal parts
last feature::last feature
address fields::address fields
common format::common format
largest number::largest number
arithmetic logical::arithmetic logical
comparison instruction::comparison instruction
format type::format type
limited number::limited number
instruction formats::instruction formats
fair number::fair number
registers thirty::registers thirty
small exception::small exception
implementation comparison::implementation comparison
simpler hardware::simpler hardware
arbitary comparison::arbitary comparison
instruction perform::instruction perform
wide number::wide number
logic operation::logic operation
constrasting architecture::constrasting architecture
things change::things change
common feature::common feature
program computer::program computer
complex operation::complex operation
memory increments::memory increments
comparison succeeds::comparison succeeds
incrementing comparison::incrementing comparison
logical sense::logical sense
single instructions::single instructions
program compact::program compact
negative side::negative side
flip side::flip side
machine slower::machine slower
hertz pentium::hertz pentium
hertz periodic::hertz periodic
operations occur::operations occur
individual cycles::individual cycles
negative impact::negative impact
fast clock::fast clock
clock ticks::clock ticks
small cost::small cost
small instruction::small instruction
basic necessity::basic necessity
complex instructions::complex instructions
crucial factor::crucial factor
accessing data::accessing data
register work::register work
work faster::work faster
register operands::register operands
instruction instructions::instruction instructions
out memory::out memory
accessed fact::accessed fact
operand fields::operand fields
operand sources::operand sources
address architecture::address architecture
main computing::main computing
computing instructions::computing instructions
address machines::address machines
result replaces::result replaces
acc stands::acc stands
address instruction::address instruction
real examples::real examples
address machine::address machine
stack machines::stack machines
stack perform::stack perform
address instructions::address instructions
beq instruction::beq instruction
register organization::register organization
fair amount::fair amount
amount fair::amount fair
registers lets::registers lets
extreme cases::extreme cases
single register::single register
registerless machine::registerless machine
stack organization::stack organization
registers accumulator::registers accumulator
accumulator based::accumulator based
based machine::based machine
sun sparc::sun sparc
register window::register window
additional addressing::additional addressing
instruction size::instruction size
indirect address::indirect address
support address::support address
making access::making access
indexing mode::indexing mode
data value::data value
mode interpretation::mode interpretation
register index::register index
constant index::constant index
sequential access::sequential access
increasing order::increasing order
decreasing order::decreasing order
auto increment::auto increment
auto decrement::auto decrement
decrementing depending::decrementing depending
pre decrement::pre decrement
post decrement::post decrement
post increment::post increment
make memory::make memory
stack based::stack based
textual data::textual data
data characters::data characters
accessing half::accessing half
half words::half words
full word::full word
full words::full words
double words::double words
words lets::words lets
point numbers::point numbers
specific provisions::specific provisions
comon cases::comon cases
complete generalization::complete generalization
cisc risc::cisc risc
risc stands::risc stands
cisc stands::cisc stands
popular machines::popular machines
main features::main features
formats simple::formats simple
register based::register based
based architecture::based architecture
lower cost::lower cost
henassi architecture::henassi architecture
mips processors::mips processors
computing application::computing application
risc architectures::risc architectures
architectures developed::architectures developed
developed berkley::developed berkley
berkley found::berkley found
sparc architecture::sparc architecture
fact beginning::fact beginning
architecture developments::architecture developments
risc type::risc type
cisc architectures::cisc architectures
continue today::continue today
cisc kind::cisc kind
commercial reason::commercial reason
reason describing::reason describing
risc architecture::risc architecture
precison architecture::precison architecture
hewlett packard::hewlett packard
packard motorola::packard motorola
motorola developed::motorola developed
leading cisc::leading cisc
cisc machine::cisc machine
machine manufacturer::machine manufacturer
alpha architecture::alpha architecture
modern architectures::modern architectures
term risc::term risc
performance machine::performance machine
cisc architecture::cisc architecture
company dec::company dec
digital equipment::digital equipment
equipment coorporation::equipment coorporation
popular mini::popular mini
mini computer::mini computer
pdp level::pdp level
complex set::complex set
non uniformity::non uniformity
interpret instruction::interpret instruction
wide range::wide range
complex objective::complex objective
compact code::compact code
crucial components::crucial components
system program::system program
program operating::program operating
critical parts::critical parts
entire operating::entire operating
operating systems::operating systems
compilers found::compilers found
entire set::entire set
optimal program::optimal program
program generate::program generate
good code::good code
set compilers::set compilers
produce machine::produce machine
hand written::hand written
written code::written code
code programs::code programs
substantial size::substantial size
classical examples::classical examples
cisc machines::cisc machines
ten twenty::ten twenty
forty sixty::forty sixty
long history::long history
bit version::bit version
bit processors::bit processors
modern pentium::modern pentium
money means::money means
performing processors::performing processors
processors today::processors today
elegant architecture::elegant architecture
beautiful architecture::beautiful architecture
things run::things run
set complexity::set complexity
main issues::main issues
instruction execution::instruction execution
design principles::design principles
simplicity requires::simplicity requires
smaller structure::smaller structure
structure working::structure working
smaller operands::smaller operands
make compromise::make compromise
done lets::done lets
ninety percent::ninety percent
remaining ten::remaining ten
architecture examples::architecture examples
understanding instruction::understanding instruction
directions architectural::directions architectural
architectural developments::architectural developments
cisc stacks::cisc stacks
efficient implementation::efficient implementation
powerful features::powerful features
programmer today::programmer today
salient features::salient features
recall risc::recall risc
simple thing::simple thing
instruction performing::instruction performing
risc style::risc style
risc motorola::risc motorola
earlier machine::earlier machine
nineteen sixties::nineteen sixties
numerous examples::numerous examples
earlier times::earlier times
times seventies::times seventies
seventies machine::seventies machine
machines vax::machines vax
code minimize::code minimize
code size::code size
motorola sixty::motorola sixty
processors starting::processors starting
thousand ten::thousand ten
intels eighty::intels eighty
earlier sixteen::earlier sixteen
bit macro::bit macro
macro processors::macro processors
intel eighty::intel eighty
company including::company including
including ibm::including ibm
ibm motorola::ibm motorola
semiconductor manufacturer::semiconductor manufacturer
macro processor::macro processor
processor development::processor development
early seventies::early seventies
main rival::main rival
intel apple::intel apple
apple started::apple started
small desk::small desk
top personal::top personal
personal computers::personal computers
ibms experience::ibms experience
xcxc series::xcxc series
major companies::major companies
ibm system::ibm system
initially power::initially power
bit architecture::bit architecture
late nineties::late nineties
bit kind::bit kind
hundred series::hundred series
machintosh systems::machintosh systems
embedded versions::embedded versions
wide variety::wide variety
similar principles::similar principles
instruction area::instruction area
condition register::condition register
reset depending::reset depending
previous arithmetic::previous arithmetic
instruction slt::instruction slt
instruction result::instruction result
special bits::special bits
simply subtraction::simply subtraction
special registers::special registers
link register::link register
unlike dollar::unlike dollar
link addresses::link addresses
double purpose::double purpose
procedural linkages::procedural linkages
loop address::loop address
address stored::address stored
count register::count register
store iteration::store iteration
iteration count::iteration count
special instructions::special instructions
facilitates execution::facilitates execution
register filelds::register filelds
main opcode::main opcode
opcode field::opcode field
opcode extension::opcode extension
sixteen minus::sixteen minus
condition bits::condition bits
enable condition::enable condition
condition setting::condition setting
disable condition::disable condition
set condition::set condition
additional mode::additional mode
accessing memory::accessing memory
indexed addressing::indexed addressing
index addressing::index addressing
register contents::register contents
accessing array::accessing array
constant indicating::constant indicating
half word::half word
increment auto::increment auto
modified value::modified value
carries information::carries information
long constant::long constant
bits rest::bits rest
smaller constant::smaller constant
fourteen bit::fourteen bit
bit displacement::bit displacement
specific register::specific register
indirect jump::indirect jump
control transfer::control transfer
transfer based::transfer based
require address::require address
index index::index index
index mode::index mode
update version::update version
lwu means::lwu means
counter maintained::counter maintained
register lets::register lets
negative value::negative value
term sparc::term sparc
sparc stands::sparc stands
scalable processor::scalable processor
higher word::higher word
word size::word size
open architecture::open architecture
companies sun::companies sun
instruments toshiba::instruments toshiba
toshiba fujitsu::toshiba fujitsu
fujitsu cypress::fujitsu cypress
cypress tatung::cypress tatung
tatung etcetera::tatung etcetera
extension fields::extension fields
bit extension::bit extension
extension field::extension field
sizes thirteen::sizes thirteen
thirteen bit::thirteen bit
bit twelve::bit twelve
uncnditional jump::uncnditional jump
complete addressability::complete addressability
thirty bits::thirty bits
arithmetic type::arithmetic type
interesting feature::interesting feature
register windows::register windows
size differs::size differs
program sees::program sees
larger requirement::larger requirement
memory save::memory save
fresh set::fresh set
regular fashion::regular fashion
local output::local output
windows change::windows change
global registers::global registers
first state::first state
pass parameters::pass parameters
window slides::window slides
globals remain::globals remain
carried information::carried information
local usage::local usage
cwp stands::cwp stands
current window::current window
window pointer::window pointer
suppose cwp::suppose cwp
return occurs::return occurs
finite set::finite set
windows act::windows act
registers acts::registers acts
cyclic buffer::cyclic buffer
practical purposes::practical purposes
rare cases::rare cases
vax architecture::vax architecture
pdp eleven::pdp eleven
successful mini::successful mini
bit machine::bit machine
dec started::dec started
manufacturer system::manufacturer system
system manufacturer::system manufacturer
vax brought::vax brought
larger memory::larger memory
unlike thirty::unlike thirty
separate register::separate register
key feature::key feature
extreme orthogonality::extreme orthogonality
instructions support::instructions support
specific addressing::specific addressing
intel machine::intel machine
instructions lots::instructions lots
bit hard::bit hard
byte stream::byte stream
opcode specifies::opcode specifies
things opcode::things opcode
specifies operations::specifies operations
operand types::operand types
integers reals::integers reals
double precison::double precison
precison bytes::precison bytes
data types::data types
character strings::character strings
byte represent::byte represent
digit coded::digit coded
bits theer::bits theer
constants thirty::constants thirty
register carries::register carries
term deferred::term deferred
deferred refers::deferred refers
register mode::register mode
mode means::mode means
operand register::operand register
register deferred::register deferred
deferred means::deferred means
access cycle::access cycle
displacement displacement::displacement displacement
sixteen thirty::sixteen thirty
deferred version::deferred version
operand size::operand size
size autoincrement::size autoincrement
autoincrement autodecrement::autoincrement autodecrement
data transfer::data transfer
transfer variety::transfer variety
peculiar things::peculiar things
implies thirty::implies thirty
integer integer::integer integer
naturally don::naturally don
make sense::make sense
sixteen modes::sixteen modes
byte carry::byte carry
size varies::size varies
varies depending::varies depending
registers suppose::registers suppose
additional bytes::additional bytes
decimal numbers::decimal numbers
digits packed::digits packed
packed digits::packed digits
digits means::digits means
smallest number::smallest number
digit unpacked::digit unpacked
pack pack::pack pack
operand specification::operand specification
long numbers::long numbers
long strings::long strings
lets talk::lets talk
bit thirty::bit thirty
major breaks::major breaks
sixeen bit::sixeen bit
bit processor::bit processor
processor eighty::processor eighty
reasonable amount::reasonable amount
companion floating::companion floating
point processor::point processor
processor coprocessor::processor coprocessor
kilo bytes::kilo bytes
demand increased::demand increased
sixteen mega::sixteen mega
newer addressing::newer addressing
eighty forties::eighty forties
forties eighty::forties eighty
pentium pentium::pentium pentium
pentium pro::pentium pro
pro pentium::pro pentium
higher performance::higher performance
performance mmx::performance mmx
multimedia extension::multimedia extension
simd instructions::simd instructions
performing operations::performing operations
core instruction::core instruction
interesting comments::interesting comments
history illustrates::history illustrates
golden handcuffs::golden handcuffs
maintain compatibility::maintain compatibility
adding features::adding features
adding clothing::adding clothing
packed bag::packed bag
complex architecture::complex architecture
pursued manner::pursued manner
commercial success::commercial success
large quantities::large quantities
vax supports::vax supports
complex addressing::complex addressing
similar set::similar set
scaled index::scaled index
permitted combination::permitted combination
correspondence vax::correspondence vax
peculiar combinations::peculiar combinations
saving grace::saving grace
small subset::small subset
register structure::register structure
major thirty::major thirty
ebx ecx::ebx ecx
ecx edx::ecx edx
extension extended::extension extended
bit architectures::bit architectures
eax ebx::eax ebx
quarters refered::quarters refered
earlier versions::earlier versions
ebp esp::ebp esp
esp edi::esp edi
base pointer::base pointer
source index::source index
destination index::destination index
usual meaning::usual meaning
source string::source string
destination string::destination string
individual element::individual element
bit segment::bit segment
segment registers::segment registers
code segment::code segment
segment stack::segment stack
stack segment::stack segment
segment data::segment data
data segment::data segment
segment register::segment register
access sixty::access sixty
multiplication factor::multiplication factor
twenty bit::twenty bit
bit addressing::bit addressing
fledged twenty::fledged twenty
instruction pointer::instruction pointer
peculiar feature::peculiar feature
sense modifies::sense modifies
unlike vax::unlike vax
vax case::vax case
default size::default size
default segment::default segment
default address::default address
address size::address size
effective instruction::effective instruction
important features::important features
powerful set::powerful set
significant feature::significant feature
windows vax::windows vax
strongest feature::strongest feature
performance evaluation::performance evaluation
peformance issue::peformance issue
individual users::individual users
quantitative manner::quantitative manner
large community::large community
higher level::higher level
real measure::real measure
entire program::entire program
average cpi::average cpi
average cycles::average cycles
inverse manner::inverse manner
important talk::important talk
basic architectures::basic architectures
relates cycles::relates cycles
conversely clock::conversely clock
instruction rate::instruction rate
entire picture::entire picture
program takes::program takes
fast rate::fast rate
total instruction::total instruction
convenient unit::convenient unit
million instructions::million instructions
average rate::average rate
executed right::executed right
micro seconds::micro seconds
average people::average people
peak mips::peak mips
instantaneous rate::instantaneous rate
slow instructions::slow instructions
fast instructions::fast instructions
fastest instructions::fastest instructions
nut shell::nut shell
individual programmer::individual programmer
stages people::stages people
represent performance::represent performance
program number::program number
average number::average number
instruction average::instruction average
dynamic number::dynamic number
instructions executed::instructions executed
right term::right term
data program::data program
common pitfall::common pitfall
true indicators::true indicators
isa lets::isa lets
ten nano::ten nano
quantities remain::quantities remain
equal number::equal number
program expressed::program expressed
vary clock::vary clock
varying cpi::varying cpi
common factor::common factor
suppose put::suppose put
compiler designer::compiler designer
alternative sequences::alternative sequences
language computation::language computation
alternative ways::alternative ways
cycles spent::cycles spent
cycle clas::cycle clas
code sequences::code sequences
first sequence::first sequence
ten cycles::ten cycles
compare number::compare number
cycle information::cycle information
slow instruction::slow instruction
fast instruction::fast instruction
cycles divided::cycles divided
similar situation::similar situation
program situation::program situation
compiler produces::compiler produces
produces ten::produces ten
ten million::ten million
higher mips::higher mips
total ten::total ten
million cycles::million cycles
cycle takes::cycle takes
takes point::takes point
seconds multiplied::seconds multiplied
ten miliion::ten miliion
miliion cycles::miliion cycles
seventy mips::seventy mips
seventy million::seventy million
right lets::right lets
fifteen million::fifteen million
spent point::spent point
spendind point::spendind point
twelve million::twelve million
eighty mips::eighty mips
comparison criteria::comparison criteria
program generated::program generated
faster mips::faster mips
poor report::poor report
clock fifty::clock fifty
case seventy::case seventy
longer clock::longer clock
shorter cycles::shorter cycles
execution times::execution times
remaining factors::remaining factors
taking thirty::taking thirty
percent longer::percent longer
redesigned possibility::redesigned possibility
rate keeping::rate keeping
combined effect::combined effect
complex situations::complex situations
focussed user::focussed user
single program::single program
long system::long system
system works::system works
work load::work load
compilations editings::compilations editings
editings run::editings run
scientific application::scientific application
typical work::typical work
general sense::general sense
evaluating performance::evaluating performance
general attempts::general attempts
basically programs::basically programs
user runs::user runs
commercial applications::commercial applications
false improvement::false improvement
false sense::false sense
related performance::related performance
varied complexity::varied complexity
small simple::small simple
simple benchmarks::simple benchmarks
small benchmarks::small benchmarks
computer vendors::computer vendors
optimized code::optimized code
system performance::system performance
evaluation cooperative::evaluation cooperative
joined hands::joined hands
defining benchmarks::defining benchmarks
benchmarks declaring::benchmarks declaring
declaring performance::declaring performance
performance summarizing::performance summarizing
common platform::common platform
small artificial::small artificial
synthetic programs::synthetic programs
standard implementations::standard implementations
implementations define::implementations define
test inputs::test inputs
large programs::large programs
machine work::machine work
benchmarks number::benchmarks number
critical code::critical code
valuable indicators::valuable indicators
total environment::total environment
standard high::standard high
machine combination::machine combination
typical result::typical result
benchmak tests::benchmak tests
showing comparison::showing comparison
benchmark figures::benchmark figures
lighter colour::lighter colour
enhanced version::enhanced version
vertical axis::vertical axis
performance rating::performance rating
higher number::higher number
number means::number means
running running::running running
program finding::program finding
scaling factor::scaling factor
pair corresponds::pair corresponds
compiler takes::compiler takes
marginal improvement::marginal improvement
circuit optimization::circuit optimization
optimization program::optimization program
program spice::program spice
simulation program::simulation program
lisp interpreter::lisp interpreter
light orange::light orange
dark orange::dark orange
dramatic difference::dramatic difference
clever trick::clever trick
dramatic performance::dramatic performance
performance improvement::performance improvement
startling results::startling results
benchmarks beginning::benchmarks beginning
integer computation::integer computation
spec int::spec int
heavy numerical::heavy numerical
numerical computation::numerical computation
typical programs::typical programs
symbolic computation::symbolic computation
numeric computation::numeric computation
integer case::integer case
compiler simulator::compiler simulator
simulator lisp::simulator lisp
intelligence program::intelligence program
program plays::program plays
motorola eighty::motorola eighty
chip simulator::chip simulator
processor gcc::processor gcc
compiler compress::compiler compress
interpreter ijpeg::interpreter ijpeg
ijpeg ijpeg::ijpeg ijpeg
graphics compression::graphics compression
compression decompresion::compression decompresion
decompresion perl::decompresion perl
language perl::language perl
manipulates strings::manipulates strings
prime numbers::prime numbers
numbers vortex::numbers vortex
database program::database program
program tomcatv::program tomcatv
mesh generation::mesh generation
generation program::generation program
shallow water::shallow water
water model::water model
quantum physics::quantum physics
physics astrophysics::physics astrophysics
partial differential::partial differential
differential equations::differential equations
simulates turbulence::simulates turbulence
cube solves::cube solves
solves problems::solves problems
temperature wind::temperature wind
wind velocity::wind velocity
pollutant distribution::pollutant distribution
quantum chemistry::quantum chemistry
plasma physics::plasma physics
applications change::applications change
machines change::machines change
benchmark content::benchmark content
current set::current set
answer variety::answer variety
rate doubles::rate doubles
int set::int set
performance varying::performance varying
proportional factor::proportional factor
suppose cycles::suppose cycles
memory speed::memory speed
additional cycles::additional cycles
effective cpi::effective cpi
processor frequency::processor frequency
memory effect::memory effect
small domain::small domain
things memory::things memory
physical systems::physical systems
slower clock::slower clock
simple question::simple question
machines pentium::machines pentium
point performance::point performance
put notice::put notice
performing pentium::performing pentium
instructions pentium::instructions pentium
lower clock::lower clock
out perform::out perform
architecture improving::architecture improving
improving instruction::improving instruction
set improving::set improving
implementation improving::implementation improving
improving compiler::improving compiler
important law::important law
amdahls law::amdahls law
performance figures::performance figures
program execution::program execution
big rectangle::big rectangle
rectangle represents::rectangle represents
shaded area::shaded area
effect rest::effect rest
part remains::part remains
find figure::find figure
enhanced fraction::enhanced fraction
fraction subscript::fraction subscript
subscript enhanced::subscript enhanced
speedup subscript::speedup subscript
fraction lets::fraction lets
fraction remains::fraction remains
program speeded::program speeded
noise captured::noise captured
taking half::taking half
speeding speeding::speeding speeding
large factor::large factor
total speedup::total speedup
half remains::half remains
improvement factor::improvement factor
program runs::program runs
hundred seconds::hundred seconds
multiplication instruction::multiplication instruction
eighty percent::eighty percent
adding subtracting::adding subtracting
subtracting loading::subtracting loading
loading data::loading data
memory taking::memory taking
taking decision::taking decision
decision branching::decision branching
multiplication dominant::multiplication dominant
dominant program::dominant program
speedup factor::speedup factor
factor required::factor required
sixteen times::sixteen times
huge improvement::huge improvement
times improvement::times improvement
net result::net result
common part::common part
earlier fifty::earlier fifty
small fraction::small fraction
point capability::point capability
suppose floating::suppose floating
point instructions::point instructions
times execution::times execution
point enhancement::point enhancement
executing floating::executing floating
smaller fraction::smaller fraction
question suppose::question suppose
point unit::point unit
unit described::unit described
point hardware::point hardware
desired speedup::desired speedup
previous program::previous program
point improvement::point improvement
thing runs::thing runs
original program::original program
point computation::point computation
processor performance::processor performance
simple terms::simple terms
hertz today::hertz today
factor performance::factor performance
performance improves::performance improves
simplifying assumptions::simplifying assumptions
memory improving::memory improving
assumed memory::assumed memory
performance indicator::performance indicator
mega flops::mega flops
operations people::operations people
understand measure::understand measure
reflecting performance::reflecting performance
good benchmarks::good benchmarks
standardized benchmarks::standardized benchmarks
aspect measures::aspect measures
mind amdahls::mind amdahls
performance execution::performance execution
simple formula::simple formula
compiler technology::compiler technology
technology instruction::technology instruction
architecture micro::architecture micro
basic circuit::basic circuit
circuit technology::circuit technology
fabrication technology::fabrication technology
large fraction::large fraction
prof.anshul kumar::prof.anshul kumar
binary arithmetic::binary arithmetic
alu design::alu design
design today::design today
arithmetic operators::arithmetic operators
logical comparison::logical comparison
understanding micro::understanding micro
bit operands::bit operands
subtraction multiplication::subtraction multiplication
multiplication division::multiplication division
starting today::starting today
result exceeds::result exceeds
divider design::divider design
simple add::simple add
key operation::key operation
binary representation::binary representation
mips instructions::mips instructions
inherent meaning::inherent meaning
fractional number::fractional number
logical value::logical value
encoded form::encoded form
depends decides::depends decides
difference ways::difference ways
ways depending::ways depending
integers represented::integers represented
mathematical point::mathematical point
positive numbers::positive numbers
macro ticks::macro ticks
integers ranging::integers ranging
negative numbers::negative numbers
numbers number::numbers number
choices existent::choices existent
represent fractions::represent fractions
makes thing::makes thing
test string::test string
pattern representing::pattern representing
representing numbers::representing numbers
sign magnitude::sign magnitude
represent magnitude::represent magnitude
positive sign::positive sign
negative sign::negative sign
bits situation::bits situation
integer shown::integer shown
bits gap::bits gap
positive side::positive side
word handling::word handling
positive number::positive number
turn zeros::turn zeros
shows whats::shows whats
twos compliment::twos compliment
compliment representation::compliment representation
number coincide::number coincide
unique representation::unique representation
negative points::negative points
negative point::negative point
important positive::important positive
positive point::positive point
positive feature::positive feature
work simpler::work simpler
negative number::negative number
righting num::righting num
equivalent values::equivalent values
decimal base::decimal base
largest positive::largest positive
smallest negative::smallest negative
represents minus::represents minus
largest negative::largest negative
max int::max int
int maximum::int maximum
positive integer::positive integer
min int::min int
negative integer::negative integer
compliment form::compliment form
complicated life::complicated life
positive integers::positive integers
sign twos::sign twos
compliment number::compliment number
number perform::number perform
correct answer::correct answer
subtract operation::subtract operation
operation ignoring::operation ignoring
adding minus::adding minus
answer subtracting::answer subtracting
negative answer::negative answer
carry flowing::carry flowing
earlier question::earlier question
answer lies::answer lies
represent minus::represent minus
large positive::large positive
number minus::number minus
unsigned number::unsigned number
number systems::number systems
representing minus::representing minus
binary number::binary number
subtracting twos::subtracting twos
adding series::adding series
super flows::super flows
flows carry::flows carry
representation bring::representation bring
doing subtraction::doing subtraction
subtraction suppose::subtraction suppose
carry subtraction::carry subtraction
additional fact::additional fact
programmable add::programmable add
large integer::large integer
small integer::small integer
bits number::bits number
shorter integers::shorter integers
bit integers::bit integers
sign bit::sign bit
additional sixteen::additional sixteen
sixteen point::sixteen point
point addition::point addition
sixteen places::sixteen places
positions filled::positions filled
signed extension::signed extension
additional bit::additional bit
bit spaces::bit spaces
instruction load::instruction load
load half::load half
byte pixel::byte pixel
byte position::byte position
sign byte::sign byte
unsigned byte::unsigned byte
signed bit::signed bit
unsigned lbu::unsigned lbu
bit bit::bit bit
bit replicates::bit replicates
performing addition::performing addition
simples method::simples method
addition bit::addition bit
bit position::bit position
position adding::position adding
carry coming::carry coming
bit addition::bit addition
cascade array::cascade array
carry signals::carry signals
initial carry::initial carry
compliment notation::compliment notation
signed number::signed number
number unsigned::number unsigned
unsigned numbers::unsigned numbers
bit adder::bit adder
adder module::adder module
table defines::table defines
defines row::defines row
columns label::columns label
column label::column label
means sum::means sum
unique case::unique case
boolean equations::boolean equations
boolean equation::boolean equation
defined whats::defined whats
whats circuit::whats circuit
crado map::crado map
digital electronics::digital electronics
cardo map::cardo map
minimal representation::minimal representation
product form::product form
boolean expressions::boolean expressions
expressions representing::expressions representing
representing output::representing output
input gates::input gates
representation means::representation means
stage logic::stage logic
terms formed::terms formed
form connection::form connection
complex issue::complex issue
digital hardware::digital hardware
signed numbers::signed numbers
put inverter::put inverter
thirteen bits::thirteen bits
bits subtractor::bits subtractor
slight difference::slight difference
single circuit::single circuit
multiplexer multiplex::multiplexer multiplex
put multiplexer::put multiplexer
subtraction depending::subtraction depending
control input::control input
calling binv::calling binv
binv standing::binv standing
inverted input::inverted input
blue boxes::blue boxes
carry input::carry input
signal binv::signal binv
bit vectors::bit vectors
performed bit::performed bit
lets combine::lets combine
subtraction anding::subtraction anding
anding oring::anding oring
present target::present target
bit unit::bit unit
alu thirty::alu thirty
first unit::first unit
carry position::carry position
binv position::binv position
operation control::operation control
full instruction::full instruction
low subtract::low subtract
andi ori::andi ori
subtract concern::subtract concern
instructions add::instructions add
large numbers::large numbers
large negative::large negative
exist limit::exist limit
numbers differ::numbers differ
maximum negative::maximum negative
subtraction remains::subtraction remains
overflow detection::overflow detection
unsigned versions::unsigned versions
unsigned version::unsigned version
small unit::small unit
memory interpreting::memory interpreting
key unit::key unit
brings unique::brings unique
performing operation::performing operation
subtraction hardware::subtraction hardware
doing addition::doing addition
logical functions::logical functions
commutate instruction::commutate instruction
beq makes::beq makes
makes comparison::makes comparison
equality check::equality check
key component::key component
include comparison::include comparison
permissible limits::permissible limits
overflow condition::overflow condition
logical part::logical part
unsigned fashion::unsigned fashion
addition operation::addition operation
unsigned counter::unsigned counter
counter parts::counter parts
shift operation::shift operation
controlled inputs::controlled inputs
identical units::identical units
small multiplexer::small multiplexer
selects output::selects output
blocks thirty::blocks thirty
bit alu::bit alu
lets address::lets address
hardware built::hardware built
result check::result check
positive negative::positive negative
perform comparison::perform comparison
direct comparison::direct comparison
equate comparison::equate comparison
comparison giving::comparison giving
cursive definition::cursive definition
recursive definition::recursive definition
addition compa::addition compa
additional conditions::additional conditions
condition generates::condition generates
first method::first method
simpler logic::simpler logic
higher bits::higher bits
simple logic::simple logic
logic yields::logic yields
recursive form::recursive form
msb side::msb side
lsb side::lsb side
individual bit::individual bit
bit comparisons::bit comparisons
bit suppose::bit suppose
subtractor outputs::subtractor outputs
positive excluding::positive excluding
include slt::include slt
slt instructions::slt instructions
instructions slt::instructions slt
first operand::first operand
previous diagram::previous diagram
subtraction output::subtraction output
question mark::question mark
case bit::case bit
putting thirty::putting thirty
irrespective result::irrespective result
controlled input::controlled input
execute slt::execute slt
fourth output::fourth output
performing slt::performing slt
slt binv::slt binv
subtraction result::subtraction result
basically subtraction::basically subtraction
equality test::equality test
involved issue::involved issue
unsigned addition::unsigned addition
small word::small word
value increase::value increase
sum increases::sum increases
maximum limit::maximum limit
overflow area::overflow area
extreme left::extreme left
left end::left end
output carry::output carry
last page::last page
correct result::correct result
subtraction unsigned::subtraction unsigned
unsigned subtraction::unsigned subtraction
positive values::positive values
adding twos::adding twos
lets verified::lets verified
invalid case::invalid case
unsigned result::unsigned result
smaller number::smaller number
red region::red region
region corresponds::region corresponds
right order::right order
red angle::red angle
angle flips::angle flips
entire region::entire region
signed addition::signed addition
numbers range::numbers range
axis numbers::axis numbers
condition lets::condition lets
top red::top red
normalness condition::normalness condition
positive sum::positive sum
opposite polarity::opposite polarity
first condition::first condition
number side::number side
normal negative::normal negative
signed subtraction::signed subtraction
compliment value::compliment value
remain minus::remain minus
subtract minus::subtract minus
subtracting minus::subtracting minus
wrong values::wrong values
negative values::negative values
lets flips::lets flips
problem area::problem area
internal sign::internal sign
negative result::negative result
indication remains::indication remains
wrong carry::wrong carry
final bit::final bit
signed case::signed case
case unsigned::case unsigned
unsigned case::unsigned case
reversive diseaser::reversive diseaser
instruction mips::instruction mips
precise difference::precise difference
part add::part add
part slti::part slti
suffix means::suffix means
meaning differs::meaning differs
suffix overflow::suffix overflow
green column::green column
column overflow::column overflow
overflow occurs::overflow occurs
instruction results::instruction results
subtract subtractu::subtract subtractu
unsigned sum::unsigned sum
signed sum::signed sum
overflow results::overflow results
mult multu::mult multu
result produces::result produces
unsigned multiplication::unsigned multiplication
true sense::true sense
signed comparison::signed comparison
comparison unsigned::comparison unsigned
unsigned comparison::unsigned comparison
doing sign::doing sign
sign interpretation::sign interpretation
unsigned interpretation::unsigned interpretation
comparison differs::comparison differs
differs depending::differs depending
byte load::byte load
remaining bits::remaining bits
lbu lhu::lbu lhu
operation performed::operation performed
remaining sixteen::remaining sixteen
cases sign::cases sign
interpretation result::interpretation result
unsigned results::unsigned results
true interpretation::true interpretation
meanings preserved::meanings preserved
small numbers::small numbers
shift operations::shift operations
manipulate bit::manipulate bit
extracting bit::extracting bit
long bit::long bit
restriction shows::restriction shows
shifting left::shifting left
bits means::bits means
loose bits::loose bits
right shift::right shift
shift left::shift left
bit left::bit left
left shift::left shift
integer division::integer division
sign extensions::sign extensions
sign bits::sign bits
vacating positions::vacating positions
sign integer::sign integer
wrong value::wrong value
putting zeros::putting zeros
sll shift::sll shift
registers destination::registers destination
source register::source register
add instructions::add instructions
instructions sll::instructions sll
sll sllv::sll sllv
logical variable::logical variable
value part::value part
register thirty::register thirty
large value::large value
srlv shift::srlv shift
simple suppose::simple suppose
carried state::carried state
position shifted::position shifted
left position::left position
arbitrary shift::arbitrary shift
multiple units::multiple units
choosing combination::choosing combination
combination suppose::combination suppose
position shift::position shift
probate wiring::probate wiring
sign addition::sign addition
discussed shift::discussed shift
instruction differ::instruction differ
kumar computer::kumar computer
multiplier design::multiplier design
subtraction comparison::subtraction comparison
multiplier multiplication::multiplier multiplication
point talk::point talk
talk talk::talk talk
design shift::design shift
add multiplication::add multiplication
add approach::add approach
multiple ways::multiple ways
defer interms::defer interms
signed multiplication::signed multiplication
essential differences::essential differences
simple multiplication::simple multiplication
multiplication method::multiplication method
decimal system::decimal system
thing translated::thing translated
suitable vertex::suitable vertex
simplify add::simplify add
middle bit::middle bit
zeros multiplied::zeros multiplied
individual multiplication::individual multiplication
forward multiplication::forward multiplication
partial products::partial products
partial product::partial product
place shifting::place shifting
capture hardware::capture hardware
hardware work::hardware work
first partial::first partial
change add::change add
final results::final results
out addition::out addition
thing breaks::thing breaks
single bit::single bit
fixed amount::fixed amount
active logic::active logic
fixed shift::fixed shift
effectively shift::effectively shift
shift takes::shift takes
propagate points::propagate points
iterative algorithm::iterative algorithm
initialization step::initialization step
bit multiplication::bit multiplication
separate assignments::separate assignments
improvements made::improvements made
activities added::activities added
incrementky shifting::incrementky shifting
successive iteration::successive iteration
hardware equivalent::hardware equivalent
form input::form input
first addition::first addition
extreme position::extreme position
last addition::last addition
double digits::double digits
repeated thirty::repeated thirty
times operation::times operation
red signals::red signals
controlled signal::controlled signal
instruct addition::instruct addition
closure step::closure step
things checking::things checking
bit wide::bit wide
modified circuit::modified circuit
high high::high high
high end::high end
shifting right::shifting right
product obtains::product obtains
reality position::reality position
counter increments::counter increments
crucial change::crucial change
single single::single single
conceptual clarity::conceptual clarity
circle point::circle point
vacant position::vacant position
individuate carry::individuate carry
shuttle consideration::shuttle consideration
interesting observation::interesting observation
making spaces::making spaces
observation leads::observation leads
gradually bit::gradually bit
vacated bit::vacated bit
rest remain::rest remain
final circuit::final circuit
multiplying instruction::multiplying instruction
bit results::bit results
sign multiplication::sign multiplication
handle sign::handle sign
opposite sign::opposite sign
sign sign::sign sign
propagate form::propagate form
form twos::form twos
sign integers::sign integers
unlike addition::unlike addition
compliment representations::compliment representations
representations made::representations made
overflow detections::overflow detections
subtraction process::subtraction process
common expressions::common expressions
negative integers::negative integers
handles positive::handles positive
similar kind::similar kind
last bit::last bit
negative signs::negative signs
usual thing::usual thing
last term::last term
minus magnitude::minus magnitude
minus sign::minus sign
minus waited::minus waited
unsigned integer::unsigned integer
magnitude retained::magnitude retained
inside summation::inside summation
thing substitute::thing substitute
single expression::single expression
convenient form::convenient form
working reverse::working reverse
multiplying factor::multiplying factor
term involving::term involving
facilitate writing::facilitate writing
definition assuming::definition assuming
difficult minus::difficult minus
booths algorithm::booths algorithm
lets compare::lets compare
multiplication signed::multiplication signed
small change::small change
change introduce::change introduce
decides instruct::decides instruct
word comprising::word comprising
step involving::step involving
modern hardware::modern hardware
iteration takes::iteration takes
lets lets::lets lets
unsigned value::unsigned value
common pattern::common pattern
positive value::positive value
lets work::lets work
value half::value half
unsigned operation::unsigned operation
unsigned integers::unsigned integers
signed integers::signed integers
perform multiplication::perform multiplication
cases irrespective::cases irrespective
instructions move::instructions move
high part::high part
low part::low part
high low::high low
case result::case result
operand result::operand result
high higher::high higher
exact description::exact description
paper pencil::paper pencil
pencil method::pencil method
multiplicand digits::multiplicand digits
thing translates::thing translates
adder performs::adder performs
performs addition::performs addition
first improvement::first improvement
multiplicand sorter::multiplicand sorter
register requirement::register requirement
accumulated sum::accumulated sum
common representations::common representations
resulting algorithm::resulting algorithm
original motivation::original motivation
discussed range::discussed range
detect overflow::detect overflow
binary division::binary division
discussed design::discussed design
out multiplication::out multiplication
illustrate division::illustrate division
division operation::division operation
unsigned division::unsigned division
signed division::signed division
multiplication operation::multiplication operation
signed result::signed result
single word::single word
word output::word output
word integers::word integers
subtract operations::subtract operations
lsb position::lsb position
bit quotient::bit quotient
bit divider::bit divider
simple mapping::simple mapping
normal decimal::normal decimal
decimal division::decimal division
binary domain::binary domain
basically comparison::basically comparison
dividend divisor::dividend divisor
position number::position number
last value::last value
subtraction step::subtraction step
propagate power::propagate power
division algorithm::division algorithm
improvements transformations::improvements transformations
loop proceeds::loop proceeds
required result::required result
invariant put::invariant put
single equation::single equation
positive non::positive non
loop invariant::loop invariant
right quotient::right quotient
correct remainder::correct remainder
correct quotient::correct quotient
correct results::correct results
relation ship::relation ship
bit product::bit product
bit dividend::bit dividend
bits divisor::bits divisor
right value::right value
algorithm works::algorithm works
inductive manner::inductive manner
mathematical induction::mathematical induction
induction assume::induction assume
checked action::checked action
action depend::action depend
invariants hold::invariants hold
means subtraction::means subtraction
inequality holds::inequality holds
condition subtraction::condition subtraction
out subtraction::out subtraction
equality holds::equality holds
left part::left part
invariant holds::invariant holds
invariant hold::invariant hold
difficult case::difficult case
subtraction condition::subtraction condition
omitting subtraction::omitting subtraction
half range::half range
correct algorithm::correct algorithm
suitable hardware::suitable hardware
initial shift::initial shift
bit set::bit set
directions addition::directions addition
input result::input result
controller sitting::controller sitting
compressed comparison::compressed comparison
control acts::control acts
circuit captures::circuit captures
forward algorithm::forward algorithm
bit subtraction::bit subtraction
graduality shifting::graduality shifting
bit subtractor::bit subtractor
stationary achieve::stationary achieve
relative position::relative position
correct position::correct position
units left::units left
parts left::parts left
position left::position left
bit shifted::bit shifted
starting position::starting position
bits size::bits size
registers shift::registers shift
right end::right end
forward change::forward change
register shifting::register shifting
simple control::simple control
restoring division::restoring division
first form::first form
basic algorithm::basic algorithm
shifting operation::shifting operation
restoring approach::restoring approach
complete step::complete step
unconditional subtraction::unconditional subtraction
conditional addition::conditional addition
additional steps::additional steps
big deal::big deal
initial subtraction::initial subtraction
initial unconditional::initial unconditional
additional step::additional step
unconditional step::unconditional step
pending restoration::pending restoration
restoration requirement::restoration requirement
previous iteration::previous iteration
usual right::usual right
normal case::normal case
separate step::separate step
last step::last step
final adjustment::final adjustment
final correction::final correction
initial addition::initial addition
doing lets::doing lets
anticipatory subtraction::anticipatory subtraction
adjust recording::adjust recording
part remain::part remain
final step::final step
correction done::correction done
resome points::resome points
doing corrections::doing corrections
correction continues::correction continues
subtracting divisor::subtracting divisor
sign values::sign values
correction step::correction step
similar check::similar check
final addition::final addition
divisor quotient::divisor quotient
basically dividend::basically dividend
sign combinations::sign combinations
right columns::right columns
columns show::columns show
similar logic::similar logic
positive quotient::positive quotient
correct sign::correct sign
simple handwork::simple handwork
bit division::bit division
compare shift::compare shift
out division::out division
sequential manner::sequential manner
out anticipatory::out anticipatory
comparison involved::comparison involved
final restoration::final restoration
algorithm work::algorithm work
performed division::performed division
done transcriptor::done transcriptor
fast addition::fast addition
basic arithmetic::basic arithmetic
performance today::performance today
operation improve::operation improve
basic design::basic design
simple adder::simple adder
bottle neck::bottle neck
carry fast::carry fast
fast manner::fast manner
carry save::carry save
save addition::save addition
adder circuit::adder circuit
simple circuits::simple circuits
operands perform::operands perform
individual bits::individual bits
bit adders::bit adders
form adder::form adder
simple task::simple task
simple combination::simple combination
simpler form::simpler form
gate behave::gate behave
inherent delay::inherent delay
signal propagating::signal propagating
seconds tens::seconds tens
signal change::signal change
change propagate::change propagate
wired delays::wired delays
present discussion::present discussion
logic part::logic part
larger circuit::larger circuit
gate fitting::gate fitting
condition delay::condition delay
pico seconds::pico seconds
input gate::input gate
larger delay::larger delay
idealize situation::idealize situation
approximate situation::approximate situation
maximum number::maximum number
deepest level::deepest level
express circuits::express circuits
circuits boolean::circuits boolean
boolean circuits::boolean circuits
level sum::level sum
logic consideration::logic consideration
current design::current design
algorithm doing::algorithm doing
large delay::large delay
dependents means::dependents means
primary input::primary input
usual expression::usual expression
level expression::level expression
large expression::large expression
generate expression::generate expression
impractical solution::impractical solution
inputs number::inputs number
fan ins::fan ins
longer case::longer case
individual gate::individual gate
large fan::large fan
primary inputs::primary inputs
inputs thirty::inputs thirty
unworkable circuit::unworkable circuit
fifteen terms::fifteen terms
intermediate carries::intermediate carries
individual circuits::individual circuits
position digest::position digest
preprocess form::preprocess form
stage generates::stage generates
input side::input side
position irrespective::position irrespective
output side::output side
propagate condition::propagate condition
values interms::values interms
make substitution::make substitution
first line::first line
growing expression::growing expression
limited stage::limited stage
incoming carries::incoming carries
similarly lets::similarly lets
incoming carry::incoming carry
limited extern::limited extern
lets understand::lets understand
green boxes::green boxes
gate generates::gate generates
circuits computing::circuits computing
maximum delay::maximum delay
stage delay::stage delay
single level::single level
final carry::final carry
larger adders::larger adders
abstract form::abstract form
internal retails::internal retails
block box::block box
smaller form::smaller form
chain form::chain form
ripple carry::ripple carry
carry adder::carry adder
purple box::purple box
carry times::carry times
normal ripple::normal ripple
considerable saving::considerable saving
partial rippling::partial rippling
carry question::carry question
sixteen stages::sixteen stages
carry ripple::carry ripple
block level::block level
generate block::generate block
block propagate::block propagate
generate signals::generate signals
small purple::small purple
blocks propagate::blocks propagate
group propagate::group propagate
propagate generates::propagate generates
generates signals::generates signals
block propagates::block propagates
propagates carry::propagates carry
propagation condition::propagation condition
generate condition::generate condition
condition generation::condition generation
generation condition::generation condition
generation takes::generation takes
block generates::block generates
similar conditions::similar conditions
sixteen expressed::sixteen expressed
carry appearing::carry appearing
roughly doubles::roughly doubles
generate term::generate term
propagate term::propagate term
essential taking::essential taking
made things::made things
move attention::move attention
put number::put number
multipliers number::multipliers number
single adder::single adder
sequential approach::sequential approach
addition store::addition store
signals propagate::signals propagate
storage involves::storage involves
advantage interms::advantage interms
array multipliers::array multipliers
natural reasons::natural reasons
array multiplier::array multiplier
tree multipliers::tree multipliers
cascade form::cascade form
multiple terms::multiple terms
arbitrary values::arbitrary values
fourth term::fourth term
usual ripple::usual ripple
carry rippling::carry rippling
prevent propagation::prevent propagation
left neighbor::left neighbor
adder cell::adder cell
making carries::making carries
leftward carry::leftward carry
carry propagation::carry propagation
saving carry::saving carry
last stage::last stage
stage carry::stage carry
extra stage::extra stage
previous stage::previous stage
feed carries::feed carries
operand fed::operand fed
output adder::output adder
sums coming::sums coming
carries coming::carries coming
carries carries::carries carries
diagonally sums::diagonally sums
fourth input::fourth input
resolution problem::resolution problem
sums position::sums position
adder cells::adder cells
horizontal movement::horizontal movement
vertical movement::vertical movement
extra adder::extra adder
extra bits::extra bits
small circuit::small circuit
path lets::path lets
extra logic::extra logic
carry computation::carry computation
last adder::last adder
expensive adder::expensive adder
term simplify::term simplify
things denoting::things denoting
first term::first term
result bits::result bits
initial carries::initial carries
normal carry::normal carry
path leading::path leading
times delay::times delay
horizontal propagation::horizontal propagation
vertical propagation::vertical propagation
carry saving::carry saving
twelve adder::twelve adder
adder units::adder units
order generates::order generates
diagonal movement::diagonal movement
key idea::key idea
multiple levels::multiple levels
out sixty::out sixty
propositional factor::propositional factor
doing carry::doing carry
unit design::unit design
usual arithmetic::usual arithmetic
integer arithmetic::integer arithmetic
hardware unit::hardware unit
standard representation::standard representation
special numbers::special numbers
programming languages::programming languages
rational number::rational number
complex number::complex number
large space::large space
numeric word::numeric word
integer lets::integer lets
representing values::representing values
scientific domain::scientific domain
huge distances::huge distances
twelve meters::twelve meters
fractional values::fractional values
integer representation::integer representation
minus twenty::minus twenty
small value::small value
represents fractions::represents fractions
large range::large range
representing fractions::representing fractions
fractions means::fractions means
integer part::integer part
non integer::non integer
integers value::integers value
rational numbers::rational numbers
integer pairs::integer pairs
select minus::select minus
string minus::string minus
propagate sign::propagate sign
fixed position::fixed position
binary point::binary point
number string::number string
decimal point::decimal point
fixed point::fixed point
point notation::point notation
large names::large names
fraction part::fraction part
manner described::manner described
power associate::power associate
large ranges::large ranges
positive power::positive power
high values::high values
negative power::negative power
low values::low values
significant digits::significant digits
irrational quantities::irrational quantities
infinite length::infinite length
irrational number::irrational number
reasonable approximation::reasonable approximation
infinite number::infinite number
number bits::number bits
simple number::simple number
fractional part::fractional part
negative powers::negative powers
propagate weightage::propagate weightage
base ten::base ten
binary fraction::binary fraction
hand suppose::hand suppose
decimal fraction::decimal fraction
integer parts::integer parts
part point::part point
part repeat::part repeat
represent point::represent point
exact representation::exact representation
lets introduce::lets introduce
exponent part::exponent part
point representation::point representation
point sum::point sum
positive exponent::positive exponent
negative exponent::negative exponent
allocate bits::allocate bits
multiple answers::multiple answers
standard ieee::standard ieee
ieee stands::ieee stands
electronics engineers::electronics engineers
scientific literature::scientific literature
standard defines::standard defines
defines representation::defines representation
single precision::single precision
double precision::double precision
addition bits::addition bits
small difference::small difference
big impact::big impact
total sixty::total sixty
bits representation::bits representation
twenty remaining::twenty remaining
mantissa part::mantissa part
significant part::significant part
precision case::precision case
largest value::largest value
left extreme::left extreme
value ranges::value ranges
slightly sort::slightly sort
precision numbers::precision numbers
point number::point number
normalized representation::normalized representation
suitable power::suitable power
adjusted adjust::adjusted adjust
precision number::precision number
represent exponents::represent exponents
bias notation::bias notation
sign exponents::sign exponents
real range::real range
positive exponents::positive exponents
range excludes::range excludes
signifies floating::signifies floating
multiple representation::multiple representation
similar test::similar test
sign test::sign test
positive requires::positive requires
magnitude comparison::magnitude comparison
choice wehave::choice wehave
wehave made::wehave made
larger exponent::larger exponent
larger weightage::larger weightage
mantissas lets::mantissas lets
larger mantissa::larger mantissa
natural places::natural places
numbers treating::numbers treating
exponent bits::exponent bits
exponent bit::exponent bit
bias representation::bias representation
sign comparison::sign comparison
comparison differ::comparison differ
bit rest::bit rest
comparing magnitudes::comparing magnitudes
positive limit::positive limit
negative limit::negative limit
additional concept::additional concept
smallest positive::smallest positive
smallest integer::smallest integer
extreme values::extreme values
familiar decimal::familiar decimal
separate bit::separate bit
separate range::separate range
minus thirty::minus thirty
significant bits::significant bits
equivalent decimal::equivalent decimal
finally lets::finally lets
perform operations::perform operations
hardware circuit::hardware circuit
exponent exponent::exponent exponent
adder subtract::adder subtract
operations sum::operations sum
determining sign::determining sign
normalization process::normalization process
large shift::large shift
small shift::small shift
opposite manner::opposite manner
details circuit::details circuit
lock diagram::lock diagram
diagram indicating::diagram indicating
point adder::point adder
numbers sign::numbers sign
sign exponent::sign exponent
circuit comparing::circuit comparing
small alu::small alu
alignment stage::alignment stage
control unit::control unit
unit control::unit control
big alu::big alu
alu adds::alu adds
exponent circuit::exponent circuit
small exponent::small exponent
large exponent::large exponent
normalization takes::normalization takes
involve output::involve output
normalized value::normalized value
exponents selected::exponents selected
rounding means::rounding means
rounding logic::rounding logic
lost normalization::lost normalization
original value::original value
value coming::value coming
zeros result::zeros result
initial alignment::initial alignment
largest side::largest side
smaller adjustment::smaller adjustment
exponent terms::exponent terms
terms divide::terms divide
range point::range point
bits including::bits including
bit exponents::bit exponents
bits fractions::bits fractions
integers result::integers result
throw remaining::throw remaining
retain twenty::retain twenty
finite word::finite word
word length::word length
intermediate calculation::intermediate calculation
guard bit::guard bit
round bit::round bit
sticky bit::sticky bit
additional bits::additional bits
intermediate stages::intermediate stages
relative sense::relative sense
sense lets::sense lets
lets imagine::lets imagine
relative level::relative level
level lets::level lets
lsb means::lsb means
financial applications::financial applications
rounding method::rounding method
place half::place half
highest value::highest value
stop computation::stop computation
subsequent part::subsequent part
suppose exponent::suppose exponent
mantissa non::mantissa non
denormalized number::denormalized number
underflow occurs::underflow occurs
represent numbers::represent numbers
system normalization::system normalization
smallest value::smallest value
denormalized numbers::denormalized numbers
normal situation::normal situation
specific meaning::specific meaning
handle floating::handle floating
point registers::point registers
registers labeled::registers labeled
entire hardware::entire hardware
point activity::point activity
special task::special task
usual operations::usual operations
operations add::operations add
absolute value::absolute value
value negate::value negate
precision data::precision data
multi precision::multi precision
add dot::add dot
precision addition::precision addition
integer mips::integer mips
mips addition::mips addition
register pairs::register pairs
sixteen pair::sixteen pair
instructions lwc::instructions lwc
processor attached::processor attached
main processor::main processor
integer register::integer register
usual manner::usual manner
address store::address store
false condition::false condition
compare instructions::compare instructions
separate flag::separate flag
false hood::false hood
means compare::means compare
representation integer::representation integer
integer single::integer single
higher precision::higher precision
lower precision::lower precision
handle definition::handle definition
instructions mips::instructions mips
specific component::specific component
blocks including::blocks including
including alu::including alu
involved design::involved design
sophisticated design::sophisticated design
term multi::term multi
major parts::major parts
parts data::parts data
specific style::specific style
mac program::mac program
program control::program control
small low::small low
exceptional situation::exceptional situation
simple manageable::simple manageable
manageable design::manageable design
understand discuss::understand discuss
timing constraints::timing constraints
frequency puts::frequency puts
initial discussion::initial discussion
build mips::build mips
build circuit::build circuit
memory reference::memory reference
reference instructions::reference instructions
flow instructions::flow instructions
instructions branch::instructions branch
simple comparison::simple comparison
comparison slt::comparison slt
complex comparison::complex comparison
discuss comparison::discuss comparison
alu circuits::alu circuits
overflow information::overflow information
individual result::individual result
doing comparison::doing comparison
carry flows::carry flows
information flowing::information flowing
recursive equation::recursive equation
equation describing::equation describing
instructions processor::instructions processor
addition instruction::addition instruction
small incremental::small incremental
story begins::story begins
memory instruction::memory instruction
done subtraction::done subtraction
done comparison::done comparison
shown connections::shown connections
instructions memory::instructions memory
instructions instruction::instructions instruction
register resist::register resist
resist access::resist access
registers passed::registers passed
memory accessing::memory accessing
add quantent::add quantent
half set::half set
instructions register::instructions register
provide address::provide address
designing alu::designing alu
made provision::made provision
full design::full design
drawn skeleton::drawn skeleton
instruct memory::instruct memory
path works::path works
information coming::information coming
status signal::status signal
data values::data values
combinational elements::combinational elements
call state::call state
sequential elements::sequential elements
combinational circuits::combinational circuits
output determine::output determine
current input::current input
circuit elements::circuit elements
current inputs::current inputs
previous input::previous input
state represents::state represents
previous inputs::previous inputs
sequential element::sequential element
state encapsulates::state encapsulates
encapsulates state::encapsulates state
state captures::state captures
relevant part::relevant part
gate depending::gate depending
instantly react::instantly react
output function::output function
circuits multiplexer::circuits multiplexer
makes choice::makes choice
circuit decoder::circuit decoder
decoder decoder::decoder decoder
bit patterns::bit patterns
patterns suppose::patterns suppose
input decoder::input decoder
sixteen outputs::sixteen outputs
outputs depending::outputs depending
sixteen combination::sixteen combination
adder subtractor::adder subtractor
subtractor comparator::subtractor comparator
comparator alu::comparator alu
logic put::logic put
sequential multiplier::sequential multiplier
sequential circuits::sequential circuits
past counters::past counters
circuits registers::circuits registers
essentially flip::essentially flip
clocked state::clocked state
state elements::state elements
unclocked state::unclocked state
clocked case::clocked case
state occur::state occur
unclocked elements::unclocked elements
distinguish bet::distinguish bet
clocked elements::clocked elements
active edge::active edge
rising edge::rising edge
falling edge::falling edge
unclocked circuits::unclocked circuits
unclocked element::unclocked element
nand gates::nand gates
cross coupled::cross coupled
reset state::reset state
feedback loop::feedback loop
cross couple::cross couple
couple signals::couple signals
stable storage::stable storage
inversion brings::inversion brings
stable states::stable states
stable state::stable state
put gates::put gates
data input::data input
clock input::clock input
clocked element::clocked element
point clock::point clock
flip flop::flip flop
change state::change state
edge triggered::edge triggered
level trigger::level trigger
trigger circuits::trigger circuits
active atleast::active atleast
edge trigger::edge trigger
triggered circuits::triggered circuits
circuits edge::circuits edge
nice property::nice property
change occurs::change occurs
clock edge::clock edge
change results::change results
important point::important point
change appears::change appears
change fur::change fur
period relates::period relates
state element::state element
circuit presents::circuit presents
slow clock::slow clock
recent value::recent value
stable atleast::stable atleast
register continuing::register continuing
important consideration::important consideration
require registers::require registers
adder alu::adder alu
alu multiplexer::alu multiplexer
multiplexer register::multiplexer register
file program::file program
memory data::memory data
additional components::additional components
bit manipulation::bit manipulation
value program::value program
register implements::register implements
output thirty::output thirty
input thirty::input thirty
edge occurs::edge occurs
require adders::require adders
main arithmetic::main arithmetic
adder noting::adder noting
implementing branch::implementing branch
carrying outer::carrying outer
outer evaluate::outer evaluate
evaluate branch::evaluate branch
bit operand::bit operand
operand produce::operand produce
multi function::multi function
function unit::function unit
unit depending::unit depending
doing test::doing test
require alu::require alu
crucial component::crucial component
component register::component register
bit values::bit values
read data::read data
right data::right data
address input::address input
initial design::initial design
thing simple::thing simple
read instructions::read instructions
element memories::element memories
present contexts::present contexts
input address::input address
data output::data output
write data::write data
unlike register::unlike register
doing read::doing read
single address::single address
writing operation::writing operation
external input::external input
miscellaneous kind::miscellaneous kind
require sign::require sign
sign instruction::sign instruction
perform load::perform load
load operation::load operation
calculation requires::calculation requires
bit offset::bit offset
polarity preserved::polarity preserved
circuit element::circuit element
sixteen inputs::sixteen inputs
active components::active components
branch addresses::branch addresses
beq instructions::beq instructions
equivalent byte::equivalent byte
ant active::ant active
active element::active element
manner suppose::manner suppose
bits connected::bits connected
simple subset::simple subset
system interms::system interms
generic examples::generic examples
combinational sequential::combinational sequential
timing issues::timing issues
constraints post::constraints post
circuit delay::circuit delay
specific circuits::specific circuits
register multiplexer::register multiplexer
multiplexer adder::multiplexer adder
performance issues::performance issues
circuit execute::circuit execute
small steps::small steps
clear picture::clear picture
comparison add::comparison add
basic skeleton::basic skeleton
instructions step::instructions step
basic set::basic set
require interms::require interms
right operation::right operation
detail design::detail design
registers perform::registers perform
operation put::operation put
access memory::access memory
control beq::control beq
conditional jump::conditional jump
status signals::status signals
times activities::times activities
process involve::process involve
taking program::taking program
counter contents::counter contents
register values::register values
instruction fields::instruction fields
result produce::result produce
begin lets::begin lets
single code::single code
larger group::larger group
common opcode::common opcode
action begins::action begins
current instructions::current instructions
fixed contents::fixed contents
means infact::means infact
special process::special process
bit instructions::bit instructions
discussed yesterday::discussed yesterday
address inputs::address inputs
read address::read address
data outputs::data outputs
outputs read::outputs read
specific fields::specific fields
number twenty::number twenty
address bit::address bit
twenty form::twenty form
alu imagine::alu imagine
control alu::control alu
right function::right function
right port::right port
emphasis terminology::emphasis terminology
port means::port means
read ports::read ports
write port::write port
defines address::defines address
give lets::give lets
instruction completes::instruction completes
value storing::value storing
thing note::thing note
discuss design::discuss design
multiple cycle::multiple cycle
good reason::good reason
simple component::simple component
incremental changing::incremental changing
signed offset::signed offset
register add::register add
field defines::field defines
memory depending::memory depending
add load::add load
unlike instruction::unlike instruction
address read::address read
read port::read port
port write::port write
port memory::port memory
single port::single port
single read::single read
read write::read write
port infact::port infact
address line::address line
bidirectional data::bidirectional data
data line::data line
separate read::separate read
write lines::write lines
common address::common address
calculating address::calculating address
connect register::connect register
performing address::performing address
signed extensions::signed extensions
input bit::input bit
labeled things::labeled things
things assume::things assume
bit signals::bit signals
carrying thirty::carrying thirty
bits exceptions::bits exceptions
sign extended::sign extended
give input::give input
paths conversing::paths conversing
part takes::part takes
adder inputs::adder inputs
complete arrangements::complete arrangements
address generation::address generation
generation part::generation part
propagate address::propagate address
give control::give control
instruction control::instruction control
correct write::correct write
lets figure::lets figure
instruction write::instruction write
write destination::write destination
bit eleven::bit eleven
complete picture::complete picture
instructions influence::instructions influence
part continues::part continues
format opcode::format opcode
word number::word number
wiring things::wiring things
correct offset::correct offset
offset coming::offset coming
bits takes::bits takes
active gate::active gate
active component::active component
component involved::component involved
involved sign::involved sign
extension means::extension means
shifting means::shifting means
wiring arrangements::wiring arrangements
instruction jump::instruction jump
full thirty::full thirty
additional choice::additional choice
instruction bits::instruction bits
instruction field::instruction field
program counters::program counters
input multiplexer::input multiplexer
start worrying::start worrying
apply control::apply control
require control::require control
assign names::assign names
file destination::file destination
alu source::alu source
normal arithmetic::normal arithmetic
operations alu::operations alu
minus output::minus output
status output::status output
view beq::view beq
control data::control data
memory requires::memory requires
requires control::requires control
eleven outputs::eleven outputs
twelve inputs::twelve inputs
inputs infact::inputs infact
monolithic circuit::monolithic circuit
jump branch::jump branch
branch load::branch load
subtract etcetera::subtract etcetera
controlling alu::controlling alu
eleven signals::eleven signals
lets connect::lets connect
write register::write register
multiplexer passes::multiplexer passes
upper input::upper input
test failed::test failed
gross diagram::gross diagram
shown status::shown status
speaking controller::speaking controller
inputs circuit::inputs circuit
input circuit::input circuit
opcode operation::opcode operation
control circuit::control circuit
controller alu::controller alu
possibility load::possibility load
operation class::operation class
input lines::input lines
output line::output line
complexity grows::complexity grows
numbers input::numbers input
additional information::additional information
controller details::controller details
word beq::word beq
simple step::simple step
step approach::step approach
table connect::table connect
connect wires::connect wires
added store::added store
added beq::added beq
beq beq::beq beq
block boxes::block boxes
design simple::design simple
right action::right action
action takes::action takes
simple implementation::simple implementation
entire instruction::entire instruction
performance consideration::performance consideration
path design::path design
separate consideration::separate consideration
control inputs::control inputs
programmable logic::programmable logic
logic array::logic array
analyze performance::analyze performance
design approach::design approach
improved design::improved design
design lets::design lets
logical group::logical group
including store::including store
similar approach::similar approach
separate design::separate design
brought components::brought components
design point::design point
doing add::doing add
register address::register address
fields fetch::fields fetch
alu result::alu result
first group::first group
memory component::memory component
suppose leave::suppose leave
path portion::path portion
register takes::register takes
omitted data::omitted data
memory alu::memory alu
right bits::right bits
file doesn::file doesn
alu doesn::alu doesn
require memory::require memory
bits forming::bits forming
partial designs::partial designs
final design::final design
sub design::sub design
entire designs::entire designs
identify conflicts::identify conflicts
subtract instructions::subtract instructions
instructions send::instructions send
operands coming::operands coming
conflict interms::conflict interms
instruction output::instruction output
ins eleven::ins eleven
suitable control::suitable control
introduce multiplexer::introduce multiplexer
non branch::non branch
conflicting line::conflicting line
propagate connection::propagate connection
control points::control points
controlling read::controlling read
gate controlling::gate controlling
type instruction::type instruction
logic instruction::logic instruction
instruction rdst::instruction rdst
top input::top input
bottom input::bottom input
signal jmp::signal jmp
jump control::jump control
control multiplexer::control multiplexer
jump signal::jump signal
jump bar::jump bar
instruction done::instruction done
exercise rdst::exercise rdst
input memory::input memory
cares doesn::cares doesn
similar exercise::similar exercise
putting thing::putting thing
writing memory::writing memory
file brn::file brn
jmp continue::jmp continue
green table::green table
source jmp::source jmp
jmp continues::jmp continues
values put::values put
choosing alu::choosing alu
upper inputs::upper inputs
compact truth::compact truth
control boxes::control boxes
main control::main control
encoding opc::encoding opc
opc opc::opc opc
main controller::main controller
instruction falling::instruction falling
category load::category load
turn outputs::turn outputs
ten outputs::ten outputs
outputs circuit::outputs circuit
bits input::bits input
input control::input control
type entry::type entry
opcode filed::opcode filed
column shows::column shows
last column::last column
address offset::address offset
control circuits::control circuits
output bits::output bits
first noticing::first noticing
function alu::function alu
alu suppose::alu suppose
perform subtract::perform subtract
action required::action required
output multiplexer::output multiplexer
bits control::bits control
adder part::adder part
zeroth input::zeroth input
designed alu::designed alu
input required::input required
complete table::complete table
mechanical process::mechanical process
write sum::write sum
product expression::product expression
realization product::realization product
nand nand::nand nand
multiple outputs::multiple outputs
pla based::pla based
programmable logical::programmable logical
logical array::logical array
array means::array means
universal ypu::universal ypu
desired function::desired function
product implementation::product implementation
sum terms::sum terms
signals representing::signals representing
final output::final output
direct correspondents::direct correspondents
true form::true form
complimentary form::complimentary form
output pla::output pla
arbitrary product::arbitrary product
literal means::literal means
power terms::power terms
sum sum::sum sum
required sub::required sub
sub set::sub set
summing output::summing output
actual practice::actual practice
gate gates::gate gates
gates don::gates don
nand organization::nand organization
concisely lets::concisely lets
lets continue::lets continue
top part::top part
bottom part::bottom part
comp compliments::comp compliments
dot put::dot put
inputs outputs::inputs outputs
functional specification::functional specification
power term::power term
required connection::required connection
required function::required function
exact circuit::exact circuit
cross point::cross point
transistor whe::transistor whe
cross wire::cross wire
programmable structure::programmable structure
code work::code work
fair interms::fair interms
doing show::doing show
component delays::component delays
prominent component::prominent component
register delay::register delay
adder delay::adder delay
call lets::call lets
lets denote::lets denote
rational assumption::rational assumption
small compare::small compare
bit mani::bit mani
mani manipulation::mani manipulation
manipulation components::manipulation components
interconnecting wires::interconnecting wires
wire delay::wire delay
cycle begins::cycle begins
file delay::file delay
additional circuitry::additional circuitry
out output::out output
moment assume::moment assume
normal memory::normal memory
bulk memory::bulk memory
cache memory::cache memory
moment lets::moment lets
put memory::put memory
alu concerns::alu concerns
alu timing::alu timing
make attempt::make attempt
slow adder::slow adder
carry propagate::carry propagate
propagate addition::propagate addition
upper group::upper group
row corresponds::row corresponds
fourth line::fourth line
long expression::long expression
big expression::big expression
bottom expressions::bottom expressions
coming form::coming form
form load::form load
word coming::word coming
individual factor::individual factor
basically lets::basically lets
hertz clock::hertz clock
things standard::things standard
standard moment::standard moment
slow slowest::slow slowest
slowest instruction::slowest instruction
clock performance::clock performance
resource utilization::resource utilization
extra adders::extra adders
multiple steps::multiple steps
requires reading::requires reading
address doing::address doing
similar manner::similar manner
manner multi::manner multi
multi pole::multi pole
pole operation::pole operation
necessarily sequence::necessarily sequence
fundamentally limitation::fundamentally limitation
simpler design::simpler design
resolve conflict::resolve conflict
putting multiplexers::putting multiplexers
control requirement::control requirement
instruction identified::instruction identified
control parts::control parts
parts specification::parts specification
view looked::view looked
instruction pushed::instruction pushed
subsequent lecture::subsequent lecture
simple form::simple form
approach call::approach call
call multi::call multi
lecture plan::lecture plan
problem reobserving::problem reobserving
main hardware::main hardware
activities begin::activities begin
cycle ends::cycle ends
wide disparity::wide disparity
full fledge::full fledge
fledge alu::fledge alu
fetch data::fetch data
focus today::focus today
significant delay::significant delay
delay denoted::delay denoted
final expression::final expression
simplified form::simplified form
sub expressions::sub expressions
numeric sense::numeric sense
delay involved::delay involved
instruction fetching::instruction fetching
equal values::equal values
slight differences::slight differences
point remember::point remember
introduce multi::introduce multi
divide execution::divide execution
simple choice::simple choice
major action::major action
individual times::individual times
small dead::small dead
vast disparity::vast disparity
problem situation::problem situation
individual activity::individual activity
case taking::case taking
taking longer::taking longer
significant saving::significant saving
cpi depending::cpi depending
instruction ion::instruction ion
good infact::good infact
cycle case::cycle case
activity perform::activity perform
wasting lot::wasting lot
balance possibilities::balance possibilities
multiple action::multiple action
simplest thing::simplest thing
multiple periods::multiple periods
forward solution::forward solution
suitable clock::suitable clock
dead times::dead times
major actions::major actions
single alu::single alu
share resources::share resources
solution lies::solution lies
operation stored::operation stored
adder store::adder store
key thing::key thing
resource adder::resource adder
separate clock::separate clock
firstly lets::firstly lets
merge instruction::merge instruction
single block::single block
alternative address::alternative address
lets bring::lets bring
arithmetic instruction::arithmetic instruction
conflict point::conflict point
extra memory::extra memory
thing move::thing move
offset addition::offset addition
generating jump::generating jump
first adder::first adder
first input::first input
belated difficulty::belated difficulty
identical right::identical right
design process::design process
introduce registers::introduce registers
reading operands::reading operands
small individual::small individual
individual registers::individual registers
information brought::information brought
register holds::register holds
call res::call res
normal addition::normal addition
fresh multiplexers::fresh multiplexers
multiplexer inputs::multiplexer inputs
register result::register result
earlier multiplexer::earlier multiplexer
separate values::separate values
bigger multiplexer::bigger multiplexer
control value::control value
value control::value control
fee din::fee din
extended brought::extended brought
address resources::address resources
store address::store address
collapse multiple::collapse multiple
multiple components::multiple components
delay analyses::delay analyses
shorter path::shorter path
fetching instruction::fetching instruction
similarly path::similarly path
main sources::main sources
components memory::components memory
make redraw::make redraw
required control::required control
cycle res::cycle res
value written::value written
combinational box::combinational box
sequential machine::sequential machine
cycle depending::cycle depending
control things::control things
resource sharing::resource sharing
individual action::individual action
extra cost::extra cost
cost interms::cost interms
simple interms::simple interms
shobana computer::shobana computer
memory hierarchy::memory hierarchy
main component::main component
puts great::puts great
great demand::great demand
pipeline case::pipeline case
memory technology::memory technology
discussing today::discussing today
memory technologies::memory technologies
memory hie::memory hie
hie hierarchy::hie hierarchy
frame work::frame work
specific level::specific level
cache organization::cache organization
simple cache::simple cache
performance parameter::performance parameter
miss rate::miss rate
rate varies::rate varies
architectural parameter::architectural parameter
block size::block size
cache policies::cache policies
typical add::typical add
online computer::online computer
computer store::computer store
typical configuration::typical configuration
cache ram::cache ram
ram fdd::ram fdd
storing information::storing information
similar things::similar things
generate doesn::generate doesn
backup memory::backup memory
faster memory::faster memory
cpu chip::cpu chip
hertz spec::hertz spec
prize differs::prize differs
prize difference::prize difference
powerful processor::powerful processor
price difference::price difference
inch monitor::inch monitor
notice presence::notice presence
solid state::solid state
state semiconductor::state semiconductor
moving parts::moving parts
parts involved::parts involved
magnetic memory::magnetic memory
moving media::moving media
optical memory::optical memory
magnetic form::magnetic form
storing medium::storing medium
involved whi::involved whi
movement involved::movement involved
semiconductor memories::semiconductor memories
random access::random access
information faster::information faster
information slower::information slower
mechanical movement::mechanical movement
sequentiality make::sequentiality make
memory case::memory case
case order::case order
lower incase::lower incase
optical memories::optical memories
identical part::identical part
memories sram::memories sram
imagine cross::imagine cross
coupled gates::coupled gates
discharge capacitor::discharge capacitor
slower offer::slower offer
larger capacity::larger capacity
vise versa::vise versa
hierarchical structure::hierarchical structure
kind memory::kind memory
fastest memory::fastest memory
memory close::memory close
slow zone::slow zone
zone farthest::zone farthest
hierarchical memories::hierarchical memories
largest memory::largest memory
hit lets::hit lets
ninety point::ninety point
high hit::high hit
hit rate::hit rate
small miss::small miss
single parameter::single parameter
first level::first level
instruct instruction::instruct instruction
future requirements::future requirements
thing works::thing works
temporal sense::temporal sense
spatial sense::spatial sense
temporal locality::temporal locality
locality means::locality means
spatial locality::spatial locality
address features::address features
features close::features close
special form::special form
sequential locality::sequential locality
neighboring addresses::neighboring addresses
cost decreases::cost decreases
means thing::means thing
total cost::total cost
total effect::total effect
weighted sum::weighted sum
additional cost::additional cost
broad picture::broad picture
storage cost::storage cost
individual access::individual access
previous level::previous level
earlier level::earlier level
hit ratios::hit ratios
hit percentages::hit percentages
percent chances::percent chances
greater probability::greater probability
last level::last level
higher larger::higher larger
larger value::larger value
sum tow::sum tow
hit probability::hit probability
miss probability::miss probability
technologies characterized::technologies characterized
tow values::tow values
miss probabilities::miss probabilities
right combination::right combination
simplified model::simplified model
hierarchal interfaces::hierarchal interfaces
low levels::low levels
memory interface::memory interface
subsequent reference::subsequent reference
loops bring::loops bring
small loop::small loop
arrays records::arrays records
consecutive locations::consecutive locations
memory main::memory main
larger size::larger size
size cache::size cache
smaller size::smaller size
simple organization::simple organization
direct map::direct map
map cache::map cache
fixed place::fixed place
first quarter::first quarter
direct correspondence::direct correspondence
grey locations::grey locations
memory map::memory map
grey location::grey location
orange locations::orange locations
locations map::locations map
quarter maps::quarter maps
hardware structure::hardware structure
memory addresses::memory addresses
bit addresses::bit addresses
giga bytes::giga bytes
giga words::giga words
last last::last last
remaining thirty::remaining thirty
thirty word::thirty word
word define::word define
thirty memory::thirty memory
lower ten::lower ten
found wha::found wha
word sitting::word sitting
gray position::gray position
bit tag::bit tag
cache word::cache word
ide identify::ide identify
data restruction::data restruction
additional twenty::additional twenty
valid bit::valid bit
empty cache::empty cache
bring thing::bring thing
empty location::empty location
bits address::bits address
remain twenty::remain twenty
tags match::tags match
valid entry::valid entry
write process::write process
word blocks::word blocks
multiple words::multiple words
sim sim::sim sim
field size::field size
size change::size change
larger cache::larger cache
bit index::bit index
block consisting::block consisting
total capacity::total capacity
twelve bits::twelve bits
manner index::manner index
tag size::tag size
valid bits::valid bits
tag matching::tag matching
decide hit::decide hit
selection signal::selection signal
larger block::larger block
capture locality::capture locality
feature references::feature references
size increases::size increases
show miss::show miss
rate depicted::rate depicted
percentage versus::percentage versus
versus block::versus block
curves correspond::curves correspond
total cache::total cache
cache size::cache size
obvious reasons::obvious reasons
cache capacity::cache capacity
miss rates::miss rates
smaller caches::smaller caches
original values::original values
larger blocks::larger blocks
spend lot::spend lot
large larger::large larger
size means::size means
fewer blocks::fewer blocks
work work::work work
rate miss::rate miss
cache misses::cache misses
key indicator::key indicator
indicator cycles::indicator cycles
large block::large block
miss occurs::miss occurs
word width::word width
width connecting::width connecting
connecting cpu::connecting cpu
multiple word::multiple word
word block::word block
word wide::word wide
wider path::wider path
bit bus::bit bus
bus cycle::bus cycle
cpu cycle::cpu cycle
block transferred::block transferred
high cost::high cost
reasonable performance::reasonable performance
organized memory::organized memory
wide memory::wide memory
memory connected::memory connected
wide bus::wide bus
memory banks::memory banks
bus narrow::bus narrow
memory memories::memory memories
faster bus::faster bus
additional transfer::additional transfer
reasonable arrangement::reasonable arrangement
placing things::placing things
full flexibility::full flexibility
associative memory::associative memory
tag value::tag value
map caches::map caches
form sets::form sets
cache area::cache area
limited flexibility::limited flexibility
limited fle::limited fle
fle flexibility::fle flexibility
set size::set size
single set::single set
cache divide::cache divide
places whi::places whi
limited context::limited context
mapped cache::mapped cache
simple simplest::simple simplest
simplest cache::simplest cache
associative cache::associative cache
rate variation::rate variation
underlying idea::underlying idea
bring data::bring data
level memory::level memory
mapping alternatives::mapping alternatives
performance issue::performance issue
cache accesses::cache accesses
memory organization::memory organization
miss penalty::miss penalty
stages read::stages read
stage load::stage load
load stage::load stage
performance implications::performance implications
memory closer::memory closer
slower memory::slower memory
large capacity::large capacity
vast variation::vast variation
access times::access times
cpu registers::cpu registers
technology require::technology require
ball path::ball path
path figure::path figure
exact values::exact values
static ram::static ram
cache memories::cache memories
basically dram::basically dram
ram technology::ram technology
magnitude slower::magnitude slower
secondary memory::secondary memory
hard disc::hard disc
data exist::data exist
med medium::med medium
reset point::reset point
place faster::place faster
ten mega::ten mega
gain mind::gain mind
first question::first question
simplest solution::simplest solution
address modulo::address modulo
small pool::small pool
sixteen locations::sixteen locations
memory compete::memory compete
location cache::location cache
increased flexibility::increased flexibility
set degree::set degree
associative case::associative case
direct access::direct access
access mechanism::access mechanism
associative access::associative access
words cache::words cache
byte cache::byte cache
access case::access case
tag match::tag match
tag field::tag field
cache address::cache address
cache location::cache location
tag matches::tag matches
tag doesn::tag doesn
hit occur::hit occur
program begins::program begins
forming part::forming part
single tag::single tag
misses occur::misses occur
transfer blocks::transfer blocks
index field::index field
address reduces::address reduces
eighteen bit::eighteen bit
bit tags::bit tags
entire neighborhood::entire neighborhood
entire block::entire block
block absent::block absent
line cache::line cache
cache line::cache line
associative organization::associative organization
horizontal line::horizontal line
larger right::larger right
entire row::entire row
out tags::out tags
tags matching::tags matching
required word::required word
words coming::words coming
block offset::block offset
match signals::match signals
matching hardware::matching hardware
extra thing::extra thing
graphic error::graphic error
address memory::address memory
miss alignment::miss alignment
multiple access::multiple access
address divide::address divide
set index::set index
tag stored::tag stored
cache set::cache set
single field::single field
level hierarchy::level hierarchy
suitable combination::suitable combination
lets simplify::lets simplify
cache level::cache level
level failed::level failed
memory level::memory level
hit probabilities::hit probabilities
case spend::case spend
common term::common term
average memory::average memory
term penalty::term penalty
find things::find things
ultimate interest::ultimate interest
ultimate measure::ultimate measure
extra cycles::extra cycles
memory stall::memory stall
introduce stalls::introduce stalls
executing instruction::executing instruction
factor memory::factor memory
memory stalls::memory stalls
rate multiplied::rate multiplied
penalty multiplied::penalty multiplied
dep depend::dep depend
extra cycle::extra cycle
organization point::organization point
reduce miss::reduce miss
reduce hit::reduce hit
transfer data::transfer data
fastest possibility::fastest possibility
alternative arrangement::alternative arrangement
interleaved memory::interleaved memory
size suppose::size suppose
suppose block::suppose block
sixteen words::sixteen words
lets quantify::lets quantify
fifteen cycles::fifteen cycles
memory transaction::memory transaction
bus cycles::bus cycles
sending data::sending data
taking figures::taking figures
first organization::first organization
send address::send address
spending fifteen::spending fifteen
transferring data::transferring data
factor reduces::factor reduces
words transfer::words transfer
seventeen cycles::seventeen cycles
intermediate situation::intermediate situation
situation suppose::situation suppose
out spend::out spend
intermediate case::intermediate case
similar effect::similar effect
page mode::page mode
storage cells::storage cells
dimensional structure::dimensional structure
part row::part row
row row::row row
row address::row address
column address::column address
give row::give row
out things::out things
faster access::faster access
word takes::word takes
subsequent words::subsequent words
reading multiple::reading multiple
multiple bit::multiple bit
consecutive bits::consecutive bits
read bits::read bits
address row::address row
means initiate::means initiate
initiate data::initiate data
cache load::cache load
load means::load means
cache fetch::cache fetch
fetch means::fetch means
transfer replacement::transfer replacement
replacement means::replacement means
write hit::write hit
write miss::write miss
cache hit::cache hit
concurrent read::concurrent read
data brought::data brought
word suppose::word suppose
entire word::entire word
word entire::word entire
data state::data state
cycle read::cycle read
cycle write::cycle write
multiple level::multiple level
subsequent levels::subsequent levels
cache suppose::cache suppose
simple taught::simple taught
miss occurred::miss occurred
words invalid::words invalid
round robin::round robin
robin fashion::robin fashion
fashion start::fashion start
fetching means::fetching means
demand fetching::demand fetching
anticipate things::anticipate things
hardware prefetching::hardware prefetching
software prefetching::software prefetching
simple mechanism::simple mechanism
hardware prefetch::hardware prefetch
sequential references::sequential references
artificial miss::artificial miss
open question::open question
flows work::flows work
wasteful transfer::wasteful transfer
memory processor::memory processor
processor bus::processor bus
replacement issue::replacement issue
replacement policy::replacement policy
alternative strategies::alternative strategies
simply fifo::simply fifo
fifo approach::fifo approach
profound influence::profound influence
write policy::write policy
lets examine::lets examine
hit case::hit case
hit means::hit means
back case::back case
clean bit::clean bit
dirty bit::dirty bit
back arrangement::back arrangement
cache serve::cache serve
write allocate::write allocate
back policy::back policy
allocate buffer::allocate buffer
reach main::reach main
buffer figure::buffer figure
complication arise::complication arise
arise moment::arise moment
architectural improvement::architectural improvement
side effect::side effect
wri writing::wri writing
memory means::memory means
memory lets::memory lets
bean read::bean read
cache update::cache update
mein main::mein main
transferring blocks::transferring blocks
dirty flag::dirty flag
set block::set block
separate cache::separate cache
split cache::split cache
cache unified::cache unified
behavior cache::behavior cache
suit instruction::suit instruction
instruction cache::instruction cache
suit data::suit data
separate caches::separate caches
common policy::common policy
policy split::policy split
pipelined implementation::pipelined implementation
source cache::source cache
caches means::caches means
unified cache::unified cache
afford lets::afford lets
entire sixteen::entire sixteen
sixteen kilo::sixteen kilo
instruction data::instruction data
cache words::cache words
multi level::multi level
level caches::level caches
on-chip cache::on-chip cache
off-chip cache::off-chip cache
small off-chip::small off-chip
level cache::level cache
magnitude difference::magnitude difference
position multiple::position multiple
multiple caches::multiple caches
direct mapping::direct mapping
associative mapping::associative mapping
penalty depending::penalty depending
dram organization::dram organization
similar purpose::similar purpose
interleaving looked::interleaving looked
reading loading::reading loading
loading fetching::loading fetching
fetching replacement::fetching replacement
numerical problems::numerical problems
problems pertaining::problems pertaining
cache performance::cache performance
sample references::sample references
access level::access level
statistical sense::statistical sense
detailed view::detailed view
view detailed::view detailed
detailed illustration::detailed illustration
exact mechanism::exact mechanism
accesses misses::accesses misses
small cache::small cache
address sequence::address sequence
miss depending::miss depending
cache numbered::cache numbered
accesses made::accesses made
hits encountered::hits encountered
misses encountered::misses encountered
modulo sixteen::modulo sixteen
first address::first address
start repeating::start repeating
misses lets::misses lets
lets proceed::lets proceed
space aspect::space aspect
initially numbers::initially numbers
address twenty::address twenty
twenty replaced::twenty replaced
throws twenty::throws twenty
program behavior::program behavior
sixteen accesses::sixteen accesses
additional hits::additional hits
level tags::level tags
location filled::location filled
twenty replaces::twenty replaces
seventeen replaces::seventeen replaces
seventeen fifty::seventeen fifty
block beginning::block beginning
beginning fifty::beginning fifty
total performance::total performance
hit remains::hit remains
rate decreases::rate decreases
placing blocks::placing blocks
follow lru::follow lru
lru policy::lru policy
earlier bur::earlier bur
observe twenty::observe twenty
twenty modulo::twenty modulo
lets extend::lets extend
sixteen block::sixteen block
block cache::block cache
cache sixteen::cache sixteen
sixteen word::sixteen word
word cache::word cache
fair comparison::fair comparison
situation point::situation point
compulsory miss::compulsory miss
miss compulsory::miss compulsory
compulsory misses::compulsory misses
capacity misses::capacity misses
misses capacity::misses capacity
limited capacity::limited capacity
conflict misses::conflict misses
misses conflict::misses conflict
conflict miss::conflict miss
specific mapping::specific mapping
mapping approach::mapping approach
lets find::lets find
miss misses::miss misses
reduced compulsory::reduced compulsory
longer miss::longer miss
capacity miss::capacity miss
individual miss::individual miss
statistical level::statistical level
percent misses::percent misses
misses point::misses point
additional misses::additional misses
total gross::total gross
gross behavior::gross behavior
dep depends::dep depends
suppose cache::suppose cache
byte addressable::byte addressable
mapping cache::mapping cache
num number::num number
tag part::tag part
index part::index part
bits required::bits required
index bits::index bits
tag bits::tag bits
minus log::minus log
size multiplied::size multiplied
cache directory::cache directory
cache data::cache data
performance parameters::performance parameters
cpi assuming::cpi assuming
ideal situation::ideal situation
cycles encountered::cycles encountered
additional stall::additional stall
basic cpi::basic cpi
find miss::find miss
memory cache::memory cache
cache interface::cache interface
multiple world::multiple world
page dram::page dram
bus bus::bus bus
cycle assume::cycle assume
memory latency::memory latency
ten cycle::ten cycle
cycle sending::cycle sending
address ten::address ten
total twelve::total twelve
twelve cycles::twelve cycles
encounter forty::encounter forty
case suppose::case suppose
memory takes::memory takes
required send::required send
total miss::total miss
cpi calculation::cpi calculation
case miss::case miss
sixty cpi::sixty cpi
performance varies::performance varies
cache caches::cache caches
instruction misses::instruction misses
data misses::data misses
hundred instructions::hundred instructions
hundred access::hundred access
remaining cases::remaining cases
cases miss::cases miss
details lets::details lets
instruction make::instruction make
instruction makes::instruction makes
ins instruction::ins instruction
make data::make data
data reference::data reference
data access::data access
miss point::miss point
extra values::extra values
stalls cache::stalls cache
cache stalls::cache stalls
minus point::minus point
clocks clock::clocks clock
cycle clock::cycle clock
multiple comparison::multiple comparison
bit exaggerated::bit exaggerated
caches clock::caches clock
cpi figure::cpi figure
negative effect::negative effect
analyze situation::analyze situation
cache brings::cache brings
hundred nanoseconds::hundred nanoseconds
single cache::single cache
net effect::net effect
twenty nanoseconds::twenty nanoseconds
hundred cycle::hundred cycle
architectural block::architectural block
hundred cycles::hundred cycles
nanoseconds divided::nanoseconds divided
totals cpi::totals cpi
account misses::account misses
base cpi::base cpi
percent miss::percent miss
level multiplied::level multiplied
performance improved::performance improved
cache terminology::cache terminology
global miss::global miss
local miss::local miss
solo miss::solo miss
miss solo::miss solo
term suppose::term suppose
cache system::cache system
solo means::solo means
nice relationship::nice relationship
inclusion property::inclusion property
miss sponsored::miss sponsored
processor ninety::processor ninety
forty percent::forty percent
large figure::large figure
selected requests::selected requests
lets conclude::lets conclude
simple situations::simple situations
focus attention::focus attention
individual hits::individual hits
storage overheads::storage overheads
organization countered::organization countered
factors influence::factors influence
gross sense::gross sense
penalty stall::penalty stall
ultimately effect::ultimately effect
educational technology::educational technology
technology services::technology services
centre iit::centre iit
delhi computer::delhi computer
architecture lecture::architecture lecture
cache hierar::cache hierar-
hierarchy huh::hierarchy huh
memory huh::memory huh
compare huh::compare huh
virtual addresses::virtual addresses
physical addresses::physical addresses
huh made::huh made
page tables::page tables
tables huh::tables huh
located huh::located huh
major problem::major problem
referring fig::referring fig
primary memory::primary memory
main huh::main huh
access cache::access cache
architecture point::architecture point
view main::view main
huh processor::huh processor
magic device::magic device
instructions huh::instructions huh
huh notice::huh notice
organization built::organization built
extend size::extend size
huh done::huh done
done huh::done huh
manner huh::manner huh
huh transparent::huh transparent
program huh::program huh
application program::application program
concerned huh::concerned huh
huh unaware::huh unaware
disk huh::disk huh
large memory::large memory
huh huh::huh huh
main objective::main objective
size limitation::size limitation
physical memory::physical memory
earlier technique::earlier technique
primitive huh::primitive huh
huh care::huh care
contents upto::contents upto
organization serves::organization serves
multiple programs::multiple programs
single user::single user
personal typing::personal typing
typing type::typing type
multiple processes::multiple processes
provide protection::provide protection
task combined::task combined
easily reposition::easily reposition
earlier part::earlier part
huh putting::huh putting
language programming::language programming
programming huh::programming huh
absolute addresses::absolute addresses
huh shift::huh shift
huh on::huh on-
local context::local context
background noise::background noise
program bu::program bu-
first aspect::first aspect
large virtual::large virtual
huh it::huh it-
huh machines::huh machines
larger physical::larger physical
total physical::total physical
physical space::physical space
financial reasons::financial reasons
larger virtual::larger virtual
virtual space::virtual space
huh programmer::huh programmer
programmer huh::programmer huh
data huh::data huh
smaller amount::smaller amount
the virtual::the- virtual
physical address::physical address
huh chance::huh chance
equal sizes::equal sizes
equal size::equal size
mapping huh::mapping huh
huh takes::huh takes
virtual pages::virtual pages
change huh::change huh
processes multiple::processes multiple
separate virtual::separate virtual
huh areas::huh areas
size huh::size huh
logical plane::logical plane
da data::da- data
size an::size an-
an an::an- an-
huh talk::huh talk
complete logical::complete logical
logical entity::logical entity
function huh::function huh
entire function::entire function
equal parts::equal parts
parts huh::parts huh
things convenient::things convenient
implement huh::implement huh
non volatile::non volatile
volatile medium::volatile medium
change overtime::change overtime
overtime huh::overtime huh
larger disk::larger disk
disk space::disk space
space and::space and-
hardware support::hardware support
opening system::opening system
huh change::huh change
huh things::huh things
important differences::important differences
huh organizing::huh organizing
main difference::main difference
huh speeds::huh speeds
speed difference::speed difference
smaller difference::smaller difference
cache huh::cache huh
continue execution::continue execution
huh action::huh action
hardware you::hardware you-
special software::special software
software doing::software doing
require huh::require huh
context switch::context switch
switch means::switch means
large amount::large amount
miss huh::miss huh
software huh::software huh
huh differences::huh differences
historical reasons::historical reasons
reasons things::reasons things
efficient terminology::efficient terminology
terminology difference::terminology difference
huh miss::huh miss
performance ei::performance ei-
factor huh::factor huh
small huh::small huh
huh small::huh small
huh lets::huh lets
performance huh::performance huh
miss miss::miss miss
large physical::large physical
cache smaller::cache smaller
large miss::large miss
terms kilo::terms kilo
lower huh::lower huh
huh reduce::huh reduce
sixty-four words::sixty-four words
large page::large page
page size::page size
larger locality::larger locality
substantial amount::substantial amount
huh the::huh the-
access huh::access huh
sixty-four kilo::sixty-four kilo
complete flexibility::complete flexibility
right huh::right huh
back write::back write
back choice::back choice
larger huh::larger huh
back approach::back approach
wrong piece::wrong piece
ideal thing::ideal thing
realistic wh::realistic wh-
basis huh::basis huh
unbounded quantity::unbounded quantity
restrict huh::restrict huh
huh programs::huh programs
people doing::people doing
doing research::doing research
huh put::huh put
workable huh::workable huh
maintaining huh::maintaining huh
number call::number call
place huh::place huh
huh su::huh su-
su suppose::su- suppose
maintaining order::maintaining order
cache blocks::cache blocks
sophisticate data::sophisticate data
huh doing::huh doing
difficult huh::difficult huh
lose efficiency::lose efficiency
hardware huh::hardware huh
approximate policy::approximate policy
policy huh::policy huh
huh case::huh case
background lets::background lets
lets huh::lets huh
side huh::side huh
virtual page::virtual page
page huh::page huh
huh infact::huh infact
huh mechanism::huh mechanism
address huh::address huh
huh imagine::huh imagine
huh page::huh page
page offset::page offset
page number::page number
page rest::page rest
page suppose::page suppose
huh physical::huh physical
memory present::memory present
thirty huh::thirty huh
huh bytes::huh bytes
physical page::physical page
translation process::translation process
table huh::table huh
number right::number right
number huh::number huh
disk address::disk address
table register::table register
huh in::huh in-
doing huh::doing huh
bits huh::bits huh
huh reach::huh reach
reached huh::reached huh
direct memory::direct memory
cache whe::cache whe-
tags present::tags present
comparison huh::comparison huh
cache block::cache block
cache directories::cache directories
huh blocks::huh blocks
mapping process::mapping process
process huh::process huh
number taking::number taking
fault result::fault result
huh context::huh context
switch so::switch so-
current process::current process
execute thousand::execute thousand
thousand thousand::thousand thousand
table stored::table stored
answer huh::answer huh
space requirement::space requirement
su lets::su- lets
suppose virtual::suppose virtual
bits page::bits page
table entry::table entry
memory protection::memory protection
table entries::table entries
size divided::size divided
huh size::huh size
information huh::information huh
direct separate::direct separate
huh megabytes::huh megabytes
huh hundreds::huh hundreds
table size::table size
size exploit::size exploit
huh functions::huh functions
huh organized::huh organized
opposite directions::opposite directions
directions suppose::directions suppose
space huh::space huh
huh stack::huh stack
accomod accommodate::accomod- accommodate
huh thinking::huh thinking
memory segments::memory segments
heap huh::heap huh
handle sparsesity::handle sparsesity
current requirement::current requirement
hashing technique::hashing technique
suitable hashing::suitable hashing
hashing function::hashing function
smaller table::smaller table
inverted page::inverted page
cache situation::cache situation
level page::level page
huh paging::huh paging
huh segments::huh segments
logical boundaries::logical boundaries
huh entire::huh entire
larger chunks::larger chunks
smaller chunks::smaller chunks
segment table::segment table
organization huh::organization huh
track information::track information
organized huh::organized huh
table page::table page
smaller page::smaller page
single monolithic::single monolithic
monolithic page::monolithic page
calling segment::calling segment
addresses divided::addresses divided
parts segment::parts segment
segment number::segment number
number page::number page
step access::step access
required point::required point
register huh::register huh
encounter page::encounter page
fault huh::fault huh
page page::page page
imagining page::imagining page
techniques suppose::techniques suppose
make accesses::make accesses
accesses huh::accesses huh
keeping page::keeping page
user page::user page
huh system::huh system
user processes::user processes
system process::system process
system space::system space
space table::space table
huh find::huh find
entire page::entire page
table wh::table wh-
making reference::making reference
huh entry::huh entry
tenth entry::tenth entry
physical counter::physical counter
huh systems::huh systems
systems page::systems page
system page::system page
entry huh::entry huh
huh hoping::huh hoping
step process::step process
huh accessing::huh accessing
accessing huh::accessing huh
huh users::huh users
users page::users page
involved huh::involved huh
clear idea::clear idea
point huh::point huh
noticed similarities::noticed similarities
differences differences::differences differences
key mechanism::key mechanism
addresses page::addresses page
problem an::problem an-
limited size::limited size
sparse sparseness::sparse sparseness
sparseness locality::sparseness locality
large huh::large huh
adjustable space::adjustable space
memory today::memory today
big issue::big issue
continue huh::continue huh
details huh::details huh
translation lookaside::translation lookaside
lookaside buffer::lookaside buffer
huh addressing::huh addressing
addressing cache::addressing cache
case page::case page
directly disk::directly disk
disk track::disk track
sector distribute::sector distribute
size we::size we-
we notice::we- notice
separate page::separate page
entire physical::entire physical
today huh::today huh
huh multilevel::huh multilevel
multilevel page::multilevel page
table structure::table structure
simple flat::simple flat
flat huh::flat huh
huh array::huh array
larger levels::larger levels
huh keeping::huh keeping
huh coming::huh coming
huh organization::huh organization
entire virtual::entire virtual
space divided::space divided
huh thousand::huh thousand
thousand segments::thousand segments
thousand pages::thousand pages
table wi::table wi-
pages huh::pages huh
small small::small small
starting points::starting points
indication valid::indication valid
huh level::huh level
huh byte::huh byte
segment field::segment field
field huh::field huh
call segment::call segment
required entry::required entry
multiplying constant::multiplying constant
constant multiplying::constant multiplying
huh suppose::huh suppose
huh starting::huh starting
huh leads::huh leads
bytes huh::bytes huh
present huh::present huh
relevant page::relevant page
exact location::exact location
number concatenated::number concatenated
complete physical::complete physical
huh instruction::huh instruction
huh allowing::huh allowing
paging mechanism::paging mechanism
relevant pages::relevant pages
active pages::active pages
avoid huh::avoid huh
cyclic references::cyclic references
addresses flowing::addresses flowing
usel users::usel- users
page part::page part
part page::part page
thing represents::thing represents
byte part::byte part
huh sum::huh sum
number part::number part
table base::table base
find huh::find huh
huh pointed::huh pointed
system base::system base
base system::base system
number offset::number offset
users huh::users huh
huh number::huh number
byte give::byte give
translated part::translated part
address translation::address translation
user space::user space
translation means::translation means
offset edition::offset edition
translation huh::translation huh
final access::final access
da huh::da- huh
huh data::huh data
bit complicated::bit complicated
first translation::first translation
huh user::huh user
user address::user address
base huh::base huh
activity and::activity and-
huh addition::huh addition
level function::level function
mechanism huh::mechanism huh
fault rate::fault rate
simple page::simple page
structure suppose::structure suppose
physical access::physical access
paged page::paged page
access assuming::access assuming
access to::access to-
reality things::reality things
bad huh::bad huh
buffer huh::buffer huh
special memory::special memory
recent address::recent address
accessed entries::accessed entries
future reference::future reference
lookup table::lookup table
huh entries::huh entries
translation done::translation done
huh remembering::huh remembering
number pairs::number pairs
parallel huh::parallel huh
huh associative::huh associative
bit huh::bit huh
number field::number field
user process::user process
incomplete information::incomplete information
inaudible background::inaudible background
shows huh::shows huh
huh flow::huh flow
address consisting::address consisting
huh address::huh address
typically twenty::typically twenty
remaining twelve::remaining twelve
tags huh::tags huh
memory comparing::memory comparing
blank entries::blank entries
huh dirty::huh dirty
thrown page::thrown page
huh comparison::huh comparison
number stored::number stored
cache access::cache access
huh direct::huh direct
huh finding::huh finding
table access::table access
access made::access made
search ends::search ends
matter ends::matter ends
failure huh::failure huh
huh fault::huh fault
huh service::huh service
desirable path::desirable path
huh tests::huh tests
table ea::table ea-
possibilities huh::possibilities huh
huh question::huh question
cache an::cache an-
imagine huh::imagine huh
huh repetition::huh repetition
tree leading::tree leading
missing huh::missing huh
inclusive property::inclusive property
assume lets::assume lets
huh cache::huh cache
means huh::means huh
combinations huh::combinations huh
huh hit::huh hit
translate huh::translate huh
concerned cache::concerned cache
case huh::case huh
str straight::str- straight
cache miss::cache miss
reversed huh::reversed huh
case path::case path
hand reverse::hand reverse
problems huh::problems huh
huh aliasing::huh aliasing
aliasing bu::aliasing bu-
huh mention::huh mention
distinguish huh::distinguish huh
confusion huh::confusion huh
huh ho::huh ho-
put process::put process
extra overhead::extra overhead
switch occurs::switch occurs
huh part::huh part
part part::part part
drawback huh::drawback huh
cost spend::cost spend
aliasing aliasing::aliasing aliasing
aliasing means::aliasing means
shared object::shared object
addresses huh::addresses huh
shared data::shared data
huh depending::huh depending
running huh::running huh
copies exist::copies exist
wrong copy::wrong copy
involved solution::involved solution
problem the::problem the-
virtually address::virtually address
address cache::address cache
physically address::physically address
indexed cache::indexed cache
picture huh::picture huh
cache requires::cache requires
process in::process in-
parameters organized::parameters organized
huh index::huh index
part doesn::part doesn
non-changing part::non-changing part
access completed::access completed
unchanged so::unchanged so-
huh inexpensive::huh inexpensive
inexpensive arrangement::inexpensive arrangement
organization place::organization place
limited physical::limited physical
place protection::place protection
protection means::protection means
unauthorized access::unauthorized access
processes huh::processes huh
ins instruction::ins- instruction
access restricted::access restricted
restricted part::restricted part
systems area::systems area
physical pages::physical pages
transition process::transition process
areas huh::areas huh
direct control::direct control
huh as::huh as-
as huh::as- huh
huh pages::huh pages
huh updation::huh updation
table takes::table takes
explicit access::explicit access
maintained huh::maintained huh
processor supports::processor supports
kernel mode::kernel mode
supervisor mode::supervisor mode
user mode::user mode
critical things::critical things
huh initializing::huh initializing
status register::status register
processor huh::processor huh
mode huh::mode huh
system call::system call
call th::call th-
th th::th- th-
system area::system area
executing code::executing code
user doesn::user doesn
huh that::huh that-
huh deep::huh deep
deep huh::deep huh
huh multilayered::huh multilayered
multilayered mechanism::multilayered mechanism
system data::system data
security huh::security huh
huh communication::huh communication
communication processes::communication processes
network level::network level
summarize huh::summarize huh
began today::began today
level structure::level structure
huh based::huh based
physical data::physical data
huh introducing::huh introducing
strategies makes::strategies makes
accesses means::accesses means
cache work::cache work
cache page::cache page
accessing cache::accessing cache
additional important::additional important
important role::important role
memory mechanism::memory mechanism
introduction huh::introduction huh
huh today::huh today
last topic::last topic
output subsystem::output subsystem
central component::central component
entire system::entire system
system huh::system huh
executed memory::executed memory
instruction operate::instruction operate
huh input::huh input
enter huh::enter huh
computation involves::computation involves
subsystem huh::subsystem huh
performance considerations::performance considerations
considerations huh::considerations huh
peripheral devices::peripheral devices
output huh::output huh
huh devices::huh devices
operational aspect::operational aspect
neglected huh::neglected huh
huh speeding::huh speeding
processor executing::processor executing
performance improvements::performance improvements
benchmark program::benchmark program
consume ninety::consume ninety
technological innovations::technological innovations
innovations huh::innovations huh
percent improvement::percent improvement
sixty forty::sixty forty
twenty-seven eighteen::twenty-seven eighteen
performance remains::performance remains
total figure::total figure
expected performance::expected performance
improvements huh::improvements huh
computation bound::computation bound
bound computation::bound computation
bound means::bound means
performing computation::performing computation
logic decision::logic decision
small amount::small amount
process processing::process- processing
scientific computation::scientific computation
computation huh::computation huh
nuclear modeling::nuclear modeling
number crunching::number crunching
heavy computation::heavy computation
business data::business data
data processing::data processing
processing huh::processing huh
huh or::huh or-
oriented application::oriented application
percent part::percent part
requirement huh::requirement huh
oriented measure::oriented measure
huh transfers::huh transfers
the huh::the- huh
huh reservation::huh reservation
reservation system::reservation system
user huh::user huh
huh response::huh response
involve computation::involve computation
hand huh::hand huh
central database::central database
huh request::huh request
database huh::database huh
huh consideration::huh consideration
considerations suppose::considerations suppose
super computing::super computing
huh scientific::huh scientific
bound application::bound application
simulation results::simulation results
data throughput::data throughput
huh transaction::huh transaction
transaction processing::transaction processing
system point::system point
important huh::important huh
file server::file server
server suppose::server suppose
receive request::receive request
creating files::creating files
files opening::files opening
opening files::opening files
files reading::files reading
request huh::request huh
huh situation::huh situation
memory we::memory we-
kilo byte::kilo byte
byte huh::byte huh
huh tenth::huh tenth
tenth power::tenth power
twentieth power::twentieth power
real sense::real sense
thousand bytes::thousand bytes
tens power::tens power
thousand kilo::thousand kilo
dif difference::dif- difference
memory domain::memory domain
processor domain::processor domain
huh move::huh move
stored program::stored program
program computed::program computed
classical block::classical block
block diagram::block diagram
diagram showing::diagram showing
computer huh::computer huh
school days::school days
memory input::memory input
arithmetic huh::arithmetic huh
central processor::central processor
huh elaborating::huh elaborating
showing point::showing point
in-between the::in-between the-
things involved::things involved
multiple devices::multiple devices
understand huh::understand huh
separate things::separate things
converts information::converts information
printed page::printed page
printing mechanism::printing mechanism
controller wh::controller wh-
means bring::means bring
bring information::bring information
memory combination::memory combination
aspect huh::aspect huh
input device::input device
device printer::device printer
output device::output device
device huh::device huh
devices make::devices make
make processor::make processor
processor talk::processor talk
human programmer::human programmer
programmer human::programmer human
human operator::human operator
computer talk::computer talk
internal devices::internal devices
store information::store information
information disk::information disk
huh keyboard::huh keyboard
huh human::huh human
human huh::human huh
huh operators::huh operators
huh network::huh network
network controller::network controller
machine huh::machine huh
huh environment::huh environment
environment huh::environment huh
sensing temperature::sensing temperature
huh computer::huh computer
motor huh::motor huh
huh storage::huh storage
organize rest::organize rest
ca ca::ca- ca-
ca capacity::ca- capacity
huh disk::huh disk
serial data::serial data
means information::means information
parallel data::parallel data
bit means::bit means
variety exist::variety exist
current situation::current situation
situation huh::situation huh
huh years::huh years
huh paint::huh paint
paint huh::paint huh
present position::present position
peripheral device::peripheral device
tape reader::tape reader
tape punch::tape punch
punch huh::punch huh
holes punched::holes punched
huh group::huh group
holes form::holes form
input information::input information
device typewriter::device typewriter
typewriter wi::typewriter wi-
huh lot::huh lot
tape attached::tape attached
type information::type information
punch tape::punch tape
connected peripherals::connected peripherals
outputting system::outputting system
compiler huh::compiler huh
larger room::larger room
room huh::room huh
smaller room::smaller room
huh prepare::huh prepare
additional device::additional device
device introduced::device introduced
faster huh::faster huh
hundred character::hundred character
twenty character::twenty character
line printer::line printer
li line::li- line
printer huh::printer huh
make life::make life
huh tape::huh tape
current location::current location
punch card::punch card
back huh::back huh
tape environment::tape environment
people huh::people huh
punched holes::punched holes
holes huh::holes huh
drive was::drive was-
added convenience::added convenience
completely tape::completely tape
sequential huh::sequential huh
disk capacity::disk capacity
huh twenty::huh twenty
twenty megabytes::twenty megabytes
big huh::big huh
me memory::me- memory
huh kind::huh kind
human beings::human beings
data rate::data rate
throughput rate::throughput rate
rate huh::rate huh
mouse huh::mouse huh
feed information::feed information
fastest huh::fastest huh
voice input::voice input
voice output::voice output
capabilities voice::capabilities voice
input voice::input voice
huh pictorial::huh pictorial
pictorial input::pictorial input
input pictorial::input pictorial
pictorial output::pictorial output
huh wh::huh wh-
wh wh::wh- wh-
generating speech::generating speech
speech outputs::speech outputs
outputs huh::outputs huh
part huh::part huh
input huh::input huh
huh voice::huh voice
huh brought::huh brought
huh point::huh point
twenty bytes::twenty bytes
speech huh::speech huh
huh inputs::huh inputs
plain speech::plain speech
higher rate::higher rate
forty fifty::forty fifty
fifty huh::fifty huh
thousand samples::thousand samples
huh text::huh text
resolution huh::resolution huh
data rates::data rates
huh th::huh th-
huh sort::huh sort
finer shaper::finer shaper
shaper picture::shaper picture
devices line::devices line
line printers::line printers
printers laser::printers laser
laser printers::laser printers
printers huh::printers huh
graphic display::graphic display
demanding huh::demanding huh
sixty thousand::sixty thousand
sixty megabytes::sixty megabytes
resolution on::resolution on-
screen suppose::screen suppose
suppose huh::suppose huh
thousand pixels::thousand pixels
approximate calculation::approximate calculation
calculation suppose::calculation suppose
screen huh::screen huh
color settings::color settings
huh yo::huh yo-
twenty-four bits::twenty-four bits
good quality::good quality
pixel means::pixel means
information present::information present
persistent display::persistent display
display huh::display huh
persistent picture::persistent picture
twenty-five huh::twenty-five huh
huh frame::huh frame
fifty frame::fifty frame
sixty frame::sixty frame
account huh::account huh
fax modem::fax modem
modem huh::modem huh
huh cable::huh cable
cable modem::cable modem
modem cable::modem cable
modem connects::modem connects
video cable::video cable
telephone line::telephone line
line huh::line huh
carrying digital::carrying digital
digital information::digital information
huh lan::huh lan
lan adapters::lan adapters
local area::local area
area network::area network
network adapters::network adapters
adapters wired::adapters wired
rates huh::rates huh
higher huh::higher huh
huh ten::huh ten
ten megabytes::ten megabytes
hundred megabytes::hundred megabytes
common standards::common standards
speeds huh::speeds huh
telephone lines::telephone lines
fifty-six kilo::fifty-six kilo
kilo bauds::kilo bauds
kilo bits::kilo bits
term baud::term baud
communication huh::communication huh
storage huh::storage huh
huh floppy::huh floppy
optical disk::optical disk
huh portions::huh portions
huh opaque::huh opaque
opaque region::opaque region
transparent regions::transparent regions
huh unit::huh unit
unit area::unit area
medium moves::medium moves
tape huh::tape huh
sequential devices::sequential devices
serial form::serial form
archival purpose::archival purpose
huh varying::huh varying
hundred kilo::hundred kilo
floppy drive::floppy drive
flash memories::flash memories
pen drive::pen drive
moving part::moving part
non-volatile type::non-volatile type
flash memory::flash memory
transfer rate::transfer rate
magnetic disk::magnetic disk
exact figure::exact figure
figure huh::figure huh
bit deeper::bit deeper
peripherals huh::peripherals huh
drive huh::drive huh
rotating disks::rotating disks
surface information::surface information
stored huh::stored huh
write heads::write heads
arm huh::arm huh
peripheral huh::peripheral huh
circular tracks::circular tracks
heads move::heads move
huh platter::huh platter
track number::track number
number ten::number ten
real picture::real picture
huh hard::huh hard
recording surfaces::recording surfaces
inwards move::inwards move
rotational speeds::rotational speeds
the they::the- they-
huh standards::huh standards
changing huh::changing huh
fifteen point::fifteen point
sea gate::sea gate
huh fifteen::huh fifteen
highest speed::highest speed
initial point::initial point
rotating huh::rotating huh
right point::right point
rotates determines::rotates determines
transfer huh::transfer huh
huh seek::huh seek
desired point::desired point
average huh::average huh
rate sustained::rate sustained
interface huh::interface huh
interface depending::interface depending
actual data::actual data
data generated::data generated
high capacitors::high capacitors
fast disk::fast disk
speed huh::speed huh
huh buffer::huh buffer
buffer size::buffer size
data doesn::data doesn
first brought::first brought
local memory::local memory
average latency::average latency
latency huh::latency huh
rotational latency::rotational latency
milliseconds huh::milliseconds huh
track seek::track seek
average figure::average figure
ten point::ten point
first piece::first piece
disk transfer::disk transfer
thirty-seven mega::thirty-seven mega
mega bits::mega bits
rotational speed::rotational speed
host huh::host huh
hundred megabyte::hundred megabyte
slower interface::slower interface
continuing huh::continuing huh
layout huh::layout huh
huh cylinder::huh cylinder
huh collection::huh collection
tenth track::tenth track
form huh::form huh
heads huh::heads huh
head huh::head huh
western digital::western digital
digital internet::digital internet
internet site::internet site
rest huh::rest huh
huh total::huh total
important peripheral::important peripheral
storage device::storage device
monitor huh::monitor huh
shown huh::shown huh
huh interesting::huh interesting
unlike huh::unlike huh
high resolution::high resolution
twelve hundred::twelve hundred
viewing angle::viewing angle
monitors huh::monitors huh
seventy degree::seventy degree
wireless lan::wireless lan
serial bus::serial bus
bus we::bus we-
huh graphics::huh graphics
graphics card::graphics card
resolution monitors::resolution monitors
changing scenes::changing scenes
scanners scanners::scanners scanners
forty-eight bit::forty-eight bit
bit color::bit color
document feeder::document feeder
feeder attached::feeder attached
photocopy machine::photocopy machine
huh inkjet::huh inkjet
inkjet printers::inkjet printers
cost effective::cost effective
huh quality::huh quality
improving huh::improving huh
printing quality::printing quality
resolve huh::resolve huh
direct network::direct network
network interface::network interface
inkjet printing::inkjet printing
printing mech::printing mech-
mech huh::mech- huh
huh printer::huh printer
printer mechanism::printer mechanism
ink cartridges::ink cartridges
ink cartridge::ink cartridge
crucial mechanism::crucial mechanism
essentially paper::essentially paper
paper feed::paper feed
huh movement::huh movement
technological breakthrough::technological breakthrough
last couple::last couple
huh ink::huh ink
ink ve::ink ve-
huh thrown::huh thrown
high quality::high quality
quality pictures::quality pictures
huh piezoelectric::huh piezoelectric
piezoelectric mechanism::piezoelectric mechanism
huh plate::huh plate
controlled droplet::controlled droplet
electrical signal::electrical signal
huh vibration::huh vibration
piezoelectric huh::piezoelectric huh
thermal mechanism::thermal mechanism
ink droplet::ink droplet
hitting process::hitting process
hitting register::hitting register
electrical current::electrical current
controlled hitting::controlled hitting
hundred dots::hundred dots
existed couple::existed couple
decades back::decades back
throughput type::throughput type
performance definition::performance definition
definition huh::definition huh
counts huh::counts huh
transfer rates::transfer rates
first lecture::first lecture
huh peripheral::huh peripheral
sense trans::sense trans-
trans carrying::trans- carrying
carrying information::carrying information
suitable forms::suitable forms
asynchronous synchronous::asynchronous synchronous
synchronous means::synchronous means
asynchronous means::asynchronous means
uh-huh signals::uh-huh signals
event sequence::event sequence
sequence information::sequence information
huh beginning::huh beginning
controllers connecting::controllers connecting
left huh::left huh
processor cache::processor cache
cache combination::cache combination
connecting huh::connecting huh
huh straight::huh straight
huh answer::huh answer
point connection::point connection
device establish::device establish
whichever pairs::whichever pairs
dedicated connection::dedicated connection
huh shared::huh shared
shared set::shared set
shared communication::shared communication
communication link::communication link
information flow::information flow
connect huh::connect huh
wires run::wires run
bus huh::bus huh
huh so::huh so-
wires assigned::wires assigned
com huh::com- huh
telephone exchange::telephone exchange
cross bar::cross bar
bar switch::bar switch
switch huh::switch huh
huh responsibility::huh responsibility
huh make::huh make
make establish::make establish
establish connections::establish connections
multiple conversations::multiple conversations
point scenario::point scenario
alternatives compare::alternatives compare
connection bus::connection bus
cost bus::cost bus
bus offers::bus offers
low cost::low cost
multiple ports::multiple ports
separate ports::separate ports
distinct isolated::distinct isolated
isolated connections::isolated connections
huh memory::huh memory
multiple port::multiple port
expensive affair::expensive affair
huh issue::huh issue
designed system::designed system
huh pieces::huh pieces
uniform interface::uniform interface
things huh::things huh
specific possibilities::specific possibilities
multiple buses::multiple buses
huh spectrum::huh spectrum
increase performance::increase performance
monolithic single::monolithic single
single cross::single cross
smaller cross::smaller cross
bar switches::bar switches
complete huh::complete huh
huh cross::huh cross
bar capability::bar capability
organize huh::organize huh
huh multiple::huh multiple
multiple smaller::multiple smaller
smaller switches::smaller switches
communicating pair::communicating pair
huh incur::huh incur
onwards huh::onwards huh
lets focus::lets focus
interconnecting subsystem::interconnecting subsystem
clear definitions::clear definitions
connect processor::connect processor
speed buses::speed buses
standard huh::standard huh
huh standardization::huh standardization
large variety::large variety
subsystems huh::subsystems huh
system based::system based
huh intel::huh intel
pentium huh::pentium huh
proprietary design::proprietary design
arbitrary subsystem::arbitrary subsystem
connects processor::connects processor
main purpose::main purpose
com carrying::com- carrying
huh lower::huh lower
huh speed::huh speed
huh standard::huh standard
common definition::common definition
bus operation::bus operation
bus signals::bus signals
signals huh::signals huh
bus width::bus width
width data::width data
multiple parties::multiple parties
standard buses::standard buses
lectures huh::lectures huh
backplane bus::backplane bus
hanging so::hanging so-
backpanel back::backpanel back-
back back::back- back-
back backplane::back- backplane
term backplane::term backplane
earlier huh::earlier huh
separate card::separate card
single bus::single bus
front front::front front
front side::front side
dis huh::dis- huh
bus running::bus running
single board::single board
multiple boards::multiple boards
chip memory::chip memory
bus connecting::bus connecting
huh cabinet::huh cabinet
huh pentium::huh pentium
huh backplane::huh backplane
huh wi::huh wi-
processor board::processor board
memory board::memory board
board plug-in::board plug-in
co complete::co- complete
complete subsystem::complete subsystem
controller huh::controller huh
transforms information::transforms information
laser printer::laser printer
huh characters::huh characters
printed form::printed form
memory process::memory process
huh binary::huh binary
binary encoded::binary encoded
sixty-four bit::sixty-four bit
bit data::bit data
transferring character::transferring character
free slots::free slots
fits huh::fits huh
design cost::design- cost
seperate infact::seperate infact
infact multiple::infact multiple
multiple huh::multiple huh
storage devices::storage devices
devices disk::devices disk
huh serial::huh serial
peripheral lets::peripheral lets
huh grouping::huh grouping
bus adapters::bus adapters
connect backplane::connect backplane
infact huh::infact huh
typical sophisticated::typical sophisticated
sophisticated system::sophisticated system
motherboard huh::motherboard huh
common interface::common interface
crucial issue::crucial issue
connecting multiple::connecting multiple
devices huh::devices huh
multiple transactions::multiple transactions
printer information::printer information
memory end::memory end
end huh::end huh
huh concurrency::huh concurrency
localized area::localized area
disk data::disk data
printer data::printer data
common bus::common bus
data parallel::data parallel
smaller lanes::smaller lanes
bigger road::bigger road
merges huh::merges huh
faster highway::faster highway
system level::system level
structure huh::structure huh
huh brings::huh brings
concurrency huh::concurrency huh
point things::point things
printer busy::printer busy
busy huh::busy huh
huh capacity::huh capacity
capacity huh::capacity huh
figure suppose::figure suppose
suppose backplane::suppose backplane
argument lets::argument lets
byte wide::byte wide
fifty nano::fifty nano
data occupies::data occupies
huh twent::huh twent-
adapter huh::adapter huh
hundred nano::hundred nano
thousand nano::thousand nano
microsecond data::microsecond data
someway sequenced::someway sequenced
sequenced right::sequenced right
byte level::byte level
packet level::packet level
level huh::level huh
huh tha::huh tha-
higher capacity::higher capacity
sequence inter::sequence inter-
illustration huh::illustration huh
bus organization::bus organization
output transactions::output transactions
protocol huh::protocol huh
variations exist::variations exist
control lines::control lines
data lines::data lines
carry address::carry address
memory bytes::memory bytes
physical lines::physical lines
output transaction::output transaction
shade huh::shade huh
device reflecting::device reflecting
the the::the- the-
huh information::huh information
responsible data::responsible data
huh record::huh record-
opposite operation::opposite operation
memory supposed::memory supposed
asynchronous case::asynchronous case
clock involved::clock involved
synchronize huh::synchronize huh
huh send::huh send
read request::read request
out data::out data
data bus::data bus
understood huh::understood huh
asynchronous huh::asynchronous huh
seconds huh::seconds huh
huh noticed::huh noticed
huh whosoever::huh whosoever
acknowledge signal::acknowledge signal
sequencing shown::sequencing shown
huh signal::huh signal
signal shape::signal shape
shape indicating::shape indicating
change occurring::change occurring
individual signal::individual signal
transition point::transition point
occurring huh::occurring huh
nature huh::nature huh
level indicating::level indicating
tri-state bus::tri-state bus
high impedance::high impedance
impedance state::impedance state
state huh::state huh
huh high::huh high
state means::state means
disk connected::disk connected
huh floating::huh floating
floating state::floating state
low impedance::low impedance
impedance path::impedance path
huh ground::huh ground
intermediate level::intermediate level
state continues::state continues
removed huh::removed huh
bus floats::bus floats
huh lowering::huh lowering
raising acknowledge::raising acknowledge
huh cycle::huh cycle
expecting data::expecting data
huh turn::huh turn
huh device::huh device
huh sequence::huh sequence
huh events::huh events
lock lock::lock lock
lock manner::lock manner
positive pulse::positive pulse
negative pulse::negative pulse
pulse huh::pulse huh
exact sequence::exact sequence
event triggers::event triggers
transaction completes::transaction completes
occur huh::occur huh
huh states::huh states
huh step::huh step
state diagram::state diagram
requesting device::requesting device
putting address::putting address
asserts read::asserts read
request signal::request signal
hand memory::hand memory
acknowledgement line::acknowledgement line
acknowledgement signal::acknowledgement signal
signal huh::signal huh
request state::request state
state diagrams::state diagrams
transition occurs::transition occurs
diagrams huh::diagrams huh
previous huh::previous huh
huh wave::huh wave
wave form::wave form
the memory::the- memory
huh observe::huh observe
observe occurrences::observe occurrences
huh carry::huh carry
out state::out state
synchronous bus::synchronous bus
complete system::complete system
synchronous buses::synchronous buses
independent clocks::independent clocks
twenty megahertz::twenty megahertz
megahertz clock::megahertz clock
hundred megahertz::hundred megahertz
raising edge::raising edge
transaction begins::transaction begins
mu multiple::mu- multiple
integral number::integral number
cycle suppose::cycle suppose
cycles huh::cycles huh
bus address::bus address
huh pick::huh pick
memory understands::memory understands
huh sitting::huh sitting
bus understand::bus understand
fixed clock::fixed clock
determined huh::determined huh
protocol so::protocol so-
asynchronous bus::asynchronous bus
fifty megahertz::fifty megahertz
takes huh::takes huh
huh fifty::huh fifty
entire sequence::entire sequence
huh transfer::huh transfer
huh transferring::huh transferring
word lets::word lets
peak bandwidth::peak bandwidth
bytes divided::bytes divided
thirteen point::thirteen point
bus bandwidth::bus bandwidth
operations lets::operations lets
similar speed::similar speed
calculation lets::calculation lets
response huh::response huh
forty nano::forty nano
maximum throughput::maximum throughput
etcetera huh::etcetera huh
huh first::huh first
step huh::step huh
takes forty::takes forty
event huh::event huh
point acknowledgement::point acknowledgement
huh minimum::huh minimum
bus protocol::bus protocol
times forty::times forty
requiring forty::requiring forty
twenty nano::twenty nano
sixty nano::sixty nano
total bandwidth::total bandwidth
eleven point::eleven point
relative values::relative values
huh sensing::huh sensing
make assumption::make assumption
increase bus::increase bus
twenty-eight bit::twenty-eight bit
huh block::huh block
block transfer::block transfer
separate data::separate data
address lines::address lines
huh multi::huh multi
multi block::multi block
block words::block words
transfer multiple::transfer multiple
moment huh::moment huh
split transaction::split transaction
transaction split::transaction split
transaction means::transaction means
buses lie::buses lie
parts initiation::parts initiation
initiation part::initiation part
ending part::ending part
huh close::huh close
size varying::size varying
sixty-four bits::sixty-four bits
bus frequency::bus frequency
megahertz takes::megahertz takes
access takes::access takes
huh faster::huh faster
faster lets::faster lets
huh bus::huh bus
bus transfer::bus transfer
data overlap::data overlap
means lets::means lets
previous data::previous data
scenario huh::scenario huh
make blocks::make blocks
sixty-four transactions::sixty-four transactions
sending address::sending address
huh forty::huh forty
period huh::period huh
total cycles::total cycles
total latency::total latency
transaction rate::transaction rate
transactions huh::transactions huh
sixty-four transaction::sixty-four transaction
huh nano::huh nano
seventy-one point::seventy-one point
transactions reduces::transactions reduces
huh sixteen::huh sixteen
sixteen sixteen::sixteen sixteen
words huh::words huh
total adds::total adds
sixteen huh::sixteen huh
fifty-seven latency::fifty-seven latency
number multiplied::number multiplied
sixteen transactions::sixteen transactions
twenty-four point::twenty-four point
tremendous increase::tremendous increase
huh bandwidth::huh bandwidth
interconnection alternatives::interconnection alternatives
alternatives huh::alternatives huh
bus processor::bus processor
multiple organizations::multiple organizations
memory buses::memory buses
backplane buses::backplane buses
huh choosing::huh choosing
suitable bla::suitable bla-
bla block::bla- block
subsystem consist::subsystem consist
huh rest::huh rest
buses form::buses form
peripherals processor::peripherals processor
huh performance::huh performance
discussion huh::discussion huh
bus arbitration::bus arbitration
huh buses::huh buses
serial buses::serial buses
bit buses::bit buses
data moves::data moves
typically address::typically address
separate lines::separate lines
synchronous protocol::synchronous protocol
protocol implies::protocol implies
huh clock::huh clock
events occur::events occur
interlocked response::interlocked response
event occurs::event occurs
occurs huh::occurs huh
arbitrary amount::arbitrary amount
protocols tend::protocols tend
fast devices::fast devices
sense signals::sense signals
higher speed::higher speed
huh synchronous::huh synchronous
synchronous approach::synchronous approach
blocks chunks::blocks chunks
idle period::idle period
unutilized period::unutilized period
interleave transactions::interleave transactions
transaction protocol::transaction protocol
bus throughput::bus throughput
bus performance::bus performance
asynchronous handshaking::asynchronous handshaking
handshaking protocol::handshaking protocol
huh sending::huh sending
additional word::additional word
word huh::word huh
huh requires::huh requires
requires twenty::requires twenty
huh repeat::huh repeat
additional words::additional words
busy reading::busy reading
band width::band width
total huh::total huh
huh rate::huh rate
transaction required::transaction required
transferring sixteen::transferring sixteen
transaction takes::transaction takes
huh involves::huh involves
involves sending::involves sending
allowing memory::allowing memory
forty clocks::forty clocks
megahertz means::megahertz means
forty clock::forty clock
periods huh::periods huh
data requires::data requires
takes twenty::takes twenty
sending huh::sending huh
forty-five word::forty-five word-
forty-five cycles::forty-five cycles
fifty-seven cycles::fifty-seven cycles
transaction multiplied::transaction multiplied
forty-five multiplied::forty-five multiplied
sixty-four product::sixty-four product
cycles product::cycles product
huh convert::huh convert
twelve multiplied::twelve multiplied
words transaction::words transaction
sending sixteen::sending sixteen
thousand times::thousand times
words multiplied::words multiplied
huh throughput::huh throughput
transaction huh::transaction huh
huh begins::huh begins
in-between huh::in-between huh
memory signals::memory signals
huh you::huh you-
huh parties::huh parties
parties connected::parties connected
general sitting::general sitting
bus master::bus master
situation processor::situation processor
processor talking::processor talking
huh conversation::huh conversation
conversation processor::conversation processor
drive controller::drive controller
master memory::master memory
slave huh::slave huh
huh set::huh set
set number::set number
huh initiation::huh initiation
initiation process::initiation process
peripheral controller::peripheral controller
slaves peripherals::slaves peripherals
masters memories::masters memories
multiple masters::multiple masters
higher priority::higher priority
lower priority::lower priority
multiple request::multiple request
priorities huh::priorities huh
es essential::es- essential
essential huh::essential huh
low priority::low priority
daisy chaining::daisy chaining
chaining centralized::chaining centralized
centralized parallel::centralized parallel
parallel arbitration::parallel arbitration
arbitration distributed::arbitration distributed
distributed arbitration::distributed arbitration
collision detection::collision detection
scenario showing::scenario showing
showing huh::showing huh
first approach::first approach
daisy chain::daisy chain
huh accessed::huh accessed
term device::term device
potential masters::potential masters
huh define::huh define
bus arbiter::bus arbiter
arbiter huh::arbiter huh
huh decreasing::huh decreasing
highest priority::highest priority
sitting closest::sitting closest
lowest priority::lowest priority
priority sits::priority sits
sits farthest::sits farthest
bus request::bus request
request signals::request signals
bus release::bus release
release signals::release signals
common signal::common signal
bus can::bus can-
interesting part::interesting part
bus grant::bus grant
grant signal::grant signal
priority device::priority device
device number::device number
huh grant::huh grant
devices requesting::devices requesting
line bus::line bus
request line::request line
opposite convention::opposite convention
huh arbiter::huh arbiter
huh assuming::huh assuming
activate release::activate release
release signal::release signal
huh sees::huh sees
complete transaction::complete transaction
arbiter notices::arbiter notices
signals release::signals release
individual request::individual request
arbiter doesn::arbiter doesn
huh activates::huh activates
grant line::grant line
line indicating::line indicating
device completes::device completes
request but::request but-
overlapping manner::overlapping manner
request bu::request bu-
disaster situation::disaster situation
high priority::high priority
bus granted::bus granted
device coming::device coming
find grant::find grant
level th::level th-
th the::th- the-
huh release::huh release
clear indication::clear indication
activates grant::activates grant
deactivates grants::deactivates grants
propagation huh::propagation huh
long huh::long huh
diagram huh::diagram huh
priority devices::priority devices
request pending::request pending
central arbiter::central arbiter
send grants::send grants
separate request::separate request
separate grant::separate grant
line request::line request
arbiter arbiter::arbiter arbiter
the priorities::the- priorities
fair manner::fair manner
huh assign::huh assign
priority but::priority but-
but but::but- but-
but huh::but- huh
define priorities::define priorities
distributed manner::distributed manner
single arbiter::single arbiter
huh democratic::huh democratic
democratic kind::democratic kind
devices sort::devices sort
huh specific::huh specific
specific lines::specific lines
honest manner::honest manner
devices supposed::devices supposed
ethernet huh::ethernet huh
shared medium::shared medium
devices happen::devices happen
collision occurred::collision occurred
free huh::free huh
collision takes::collision takes
huh delay::huh delay
usage requirement::usage requirement
heavy huh::heavy huh
fixed huh::fixed huh
repeated huh::repeated huh
huh modifying::huh modifying
queue end::queue end
proprietary bus::proprietary bus
bus connects::bus connects
backplane huh::backplane huh
disk drives::disk drives
huh printers::huh printers
printers scanners::printers scanners
huh ty::huh ty-
proprietary backplane::proprietary backplane
bus level::bus level
buses huh::buses huh
lines backplane::lines backplane
synchronous huh::synchronous huh
huh oversimplified::huh oversimplified
oversimplified situation::oversimplified situation
real system::real system
huh thing::huh thing
typical huh::typical huh
huh type::huh type
huh controllers::huh controllers
huh adapters::huh adapters
chip set::chip set
complex chips::complex chips
memory control::memory control
control hub::control hub
graphics memory::graphics memory
memory modules::memory modules
display modules::display modules
huh variety::huh variety
peripherals including::peripherals including
including huh::including huh
people call::people call
north bridge::north bridge
south bridge::south bridge
side bus::side bus
thirty-three megahertz::thirty-three megahertz
megahertz huh::megahertz huh
huh interfaces::huh interfaces
interfaces huh::interfaces huh
audio interface::audio interface
speed devices::speed devices
memory hub::memory hub
huh display::huh display
display devices::display devices
transfer demand::transfer demand
bandwidth demand::bandwidth demand
throughput requirement::throughput requirement
highest throughput::highest throughput
huh backside::huh backside
backside bus::backside bus
bus front::bus front
numerous varieties::numerous varieties
huh lots::huh lots
term standard::term standard
standard bus::standard bus
huh subsystem::huh subsystem
huh compatibility::huh compatibility
build memory::build memory
single company::single company
technology develops::technology develops
develops huh::develops huh
speeds change::speeds change
requirements huh::requirements huh
contradictory requirements::contradictory requirements
improve huh::improve huh
freezing huh::freezing huh
huh arresting::huh arresting
an commercial::an- commercial
commercial pressure::commercial pressure
performance specs::performance specs
continuous process::continuous process
formal mechanisms::formal mechanisms
huh defining::huh defining
formed industries::formed industries
defining standards::defining standards
professional bodies::professional bodies
huh organizations::huh organizations
huh community::huh community
proprietary interface::proprietary interface
proprietary huh::proprietary huh
popular person::popular person
standard standard::standard standard
physical level::physical level
electrical level::electrical level
logical level::logical level
shape size::shape size
size dimension::size dimension
define huh::define huh
signals change::signals change
bus standard::bus standard
complex definition::complex definition
domain huh::domain huh
early stages::early stages
transformed industry::transformed industry
industry standard::industry standard
standard architecture::standard architecture
architecture huh::architecture huh
faster link::faster link
slower link::slower link
local bus::local bus
video electronics::video electronics
electronics standards::electronics standards
standards association::standards association
defined stands::defined stands
peripheral component::peripheral component
component interconnect::component interconnect
interconnect bus::interconnect bus
accelerated graphics::accelerated graphics
graphics port::graphics port
port huh::port huh
mentioned huh::mentioned huh
frequency huh::frequency huh
width huh::width huh
huh meant::huh meant
two power::two- power
huh combining::huh combining
lets spend::lets spend
huh thirty-three::huh thirty-three
huh peak::huh peak
peak transfer::peak transfer
thirty-three megabyte::thirty-three megabyte
protocol delays::protocol delays
serial version::serial version
detail huh::detail huh
version serial::version serial
huh cheaper::huh cheaper
total data::total data
serial port::serial port
huh external::huh external
external modems::external modems
modems huh::modems huh
parallel port::parallel port
connect printer::connect printer
extended parallel::extended parallel
huh flash::huh flash
memory device::memory device
connect devices::connect devices
cameras printers::cameras printers
performance serial::performance serial
serial de::serial de-
de serial::de- serial
serial ports::serial ports
fire wire::fire wire
wire fiber::wire fiber
fiber channel::fiber channel
upto huh::upto huh
disk disk::disk disk
drives huh::drives huh
rom drives::rom drives
system interface::system interface
ultra wide::ultra wide
wide fast::wide fast
standards improve::standards improve
sixty megabyte::sixty megabyte
huh steps::huh steps
support priorities::support priorities
huh we::huh we-
backplane level::backplane level
huh series::huh series
operations continuing::operations continuing
today talk::today talk
software point::software point
entire activity::entire activity
activity appears::activity appears
processor point::processor point
processor participates::processor participates
huh activity::huh activity
abstract statements::abstract statements
high levels::high levels
language level::language level
level the::level the-
printf statement::printf statement
huh arrays::huh arrays
primitive elements::primitive elements
elements integers::elements integers
integers floating::integers floating
point strings::point strings
raw form::raw form
representing information::representing information
display device::display device
device understands::device understands
understands things::understands things
huh matrix::huh matrix
pixels huh::pixels huh
character level::character level
level device::level device
keyboard huh::keyboard huh
ascii characters::ascii characters
interconnection structure::interconnection structure
huh timing::huh timing
timing characteristics::timing characteristics
head move::head move
timings involved::timings involved
abstract view::abstract view
precise huh::precise huh
format conversions::format conversions
conversions examples::conversions examples
examples huh::examples huh
library function::library function
function library::function library
library routines::library routines
object code::object code
abstract operations::abstract operations
level operation::level operation
format conversion::format conversion
complex details::complex details
huh dots::huh dots
pixel matrix::pixel matrix
huh tracks::huh tracks
device driver::device driver
device drivers::device drivers
specific peripheral::specific peripheral
th details::th- details
exception routine::exception routine
interrupt handling::interrupt handling
handling routine::handling routine
interrupt system::interrupt system
multiple windows::multiple windows
windows coming::windows coming
multiple tasks::multiple tasks
properties drives::properties drives
logical view::logical view
files huh::files huh
physical devices::physical devices
file system::file system
system part::system part
huh operating::huh operating
aspects huh::aspects huh
devices place::devices place
slow devices::slow devices
producing information::producing information
small groups::small groups
mou mouse::mou- mouse
tracking huh::tracking huh
direction minus::direction minus
movement huh::movement huh
huh slow::huh slow
slow huh::slow huh
mouse movement::mouse movement
small volume::small volume
small rate::small rate
big blocks::big blocks
network operation::network operation
the network::the- network
network standards::network standards
standards talk::standards talk
ten megabits::ten megabits
hundred megabits::hundred megabits
ten gigabits::ten gigabits
huh tens::huh tens
lets turn::lets turn
human eye::human eye
eye sees::eye sees
constant image::constant image
huh twenty-five::huh twenty-five
huh times::huh times
thirty times::thirty times
huh what::huh what-
video memory::video memory
screen you::screen you-
you you::you- you-
huh refresh::huh refresh
modern systems::modern systems
systems work::systems work
work huh::work huh
earlier days::earlier days
peripheral sep::peripheral sep-
intelligence in::intelligence in-
huh modify::huh modify
changed information::changed information
workstations huh::workstations huh
typical operation::typical operation
head read::head read
write head::write head
huh bulk::huh bulk
action huh::action huh
huh mouse::huh mouse
transfer occurs::transfer occurs
huh pixel::huh pixel
matrix huh::matrix huh
continuous activity::continuous activity
activity huh::activity huh
operations huh::operations huh
device appears::device appears
ports huh::ports huh
huh give::huh give
give commands::give commands
huh code::huh code
command commands::command commands
sect number::sect number
read huh::read huh
check specific::check specific
specific bits::specific bits
de depending::de- depending
program running::program running
ways addresses::ways addresses
memory mapped::memory mapped
space memory::space memory
higher end::higher end
leaving huh::leaving huh
thousand addresses::thousand addresses
separate address::separate address
usual load::usual load
ignore huh::ignore huh
load occurs::load occurs
memory doesn::memory doesn
instruction huh::instruction huh
address falls::address falls
falls address::falls address
memory range::memory range
fifteen bits::fifteen bits
large address::large address
address value::address value
additional instruction::additional instruction
huh take::huh take-
huh key::huh key
check frequent::check frequent
polling wh::polling wh-
register check::register check
processor doesn::processor doesn
status it::status it-
task and::task and-
invoke action::invoke action
an processor::an- processor
multiple interrupt::multiple interrupt-
interrupt signal::interrupt- signal
polling activity::polling activity
back check::back check
numerical value::numerical value
processor running::processor running
decision suppose::decision suppose
polling overhead::polling overhead
fifty kilo::fifty kilo
transfers data::transfers data
cases huh::cases huh
huh vast::huh vast
wasting lots::wasting lots
significant extent::significant extent
huh poll::huh poll
cycles consumed::cycles consumed
percentage huh::percentage huh
computation instruction::computation instruction
ratio huh::ratio huh
huh polling::huh polling
poll huh::poll huh
similar factors::similar factors
processor clock::processor clock
lost sufficient::lost sufficient
tolerable device::tolerable device
faster device::faster device
sixteen bytes::sixteen bytes
cycles divides::cycles divides
percent wh::percent wh-
spend twenty::spend twenty
huh solution::huh solution
interrupt driven::interrupt driven
driven input::driven input
processor attention::processor attention
transferring control::transferring control
huh exception::huh exception
handle exceptions::handle exceptions
external word::external word
internal exceptions::internal exceptions
illegal instruction::illegal instruction
arithmetic overflow::arithmetic overflow
specific cycle::specific cycle
huh respond::huh respond
external exceptions::external exceptions
exceptions huh::exceptions huh
early attention::early attention
exceptions occurring::exceptions occurring
huh an::huh an-
vector interrupt::vector interrupt
non vector::non vector
interrupt vector::interrupt vector
exception handler::exception handler
specific exception::specific exception
vector case::vector case
control takes::control takes
specific location::specific location
code check::code check
similar scenario::similar scenario
driven transfer::driven transfer
processor working::processor working
continuous interrupt::continuous interrupt
interrupt infact::interrupt infact
entire huh::entire huh
huh duration::huh duration
huh saving::huh saving
attention when::attention when-
polling based::polling based
clock sequence::clock sequence
twenty-five percent::twenty-five percent
we assuming::we- assuming
real overhead::real overhead
percent huh::percent huh
huh overhead::huh overhead
huh process::huh process
involve processor::involve processor
deposit data::deposit data
processors role::processors role
initiate huh::initiate huh
setup things::setup things
huh tra::huh tra-
tra huh::tra- huh
entire job::entire job
huh check::huh check
check huh::check huh
bad sector::bad sector
processor interrupted::processor interrupted
error huh::error huh
special controller::special controller
special piece::special piece
addresses amount::addresses amount
huh word::huh word
word amount::word amount
processor logic::processor logic
sequential address::sequential address
huh le::huh le-
le lets::le- lets
huh running::huh running
megahertz suppose::megahertz suppose
requires thousand::requires thousand
thousand cycles::thousand cycles
huh end::huh end
spending thousand::spending thousand
thousand cycle::thousand cycle
cycle lets::cycle lets
achieve transfer::achieve transfer
operation requires::operation requires
end and::end and-
and divided::and- divided
first factor::first factor
hundred huh::hundred huh
huh polled::huh polled
transfer depending::transfer- depending
huh requirement::huh requirement
device we::device we-
suitable mechanism::suitable mechanism
cost issue::cost issue
controller means::controller means
cost huh::cost huh
huh read::huh read
operation number::operation number
dedicated memory::dedicated memory
major activity::major activity
direct communication::direct communication
thing work::thing work
huh wha::huh wha-
problems caused::problems caused
huh translation::huh translation
transfer lets::transfer lets
explicit conversion::explicit conversion
huh remember::huh remember
arbitrary addresses::arbitrary addresses
contiguous areas::contiguous areas
contiguous area::contiguous area
larger piece::larger piece
huh consistency::huh consistency
recent information::recent information
input happening::input happening
copy exist::copy exist
date huh::date huh
reverse happening::reverse happening
happening huh::happening huh
upto date::upto date
back cache::back cache
making updates::making updates
similar problem::similar problem
problem occurs::problem occurs
multiprocessor cases::multiprocessor cases
shared memory::shared memory
first problem::first problem
page fo::page fo-
memory problem::memory problem
huh additional::huh additional
additional actions::additional actions
cache controllers::cache controllers
multiple copies::multiple copies
protocols huh::protocols huh
huh coherence::huh coherence
sync huh::sync huh
updation occurs::updation occurs
additional overhead::additional overhead
overhead work::overhead work
handle huh::handle huh
device specific::device specific
specific details::specific details
handle interrupts::handle interrupts
multiple processor::multiple processor
file organization::file organization
defining huh::defining huh
device status::device status
status huh::status huh
interrupts huh::interrupts huh
higher overhead::higher overhead
complex mechanism::complex mechanism
controller disk::controller disk
individual aspects::individual aspects
design issues::design issues
achieve huh::achieve huh
performance objectives::performance objectives
mind and::mind and-
latency aspect::latency aspect
throughput aspects::throughput aspects
huh achieving::huh achieving
huh when::huh when-
huh crosses::huh crosses
controller buses::controller buses
huh processing::huh processing
similar path::similar path
throughput issue::throughput issue
issue huh::issue huh
slowest link::slowest link
huh easier::huh easier
easier huh::easier huh
data flowing::data flowing
throughput huh::throughput huh
complicated issue::complicated issue
delay huh::delay huh
complex interaction::complex interaction
last resort::last resort
entire behavior::entire behavior
huh then::huh then-
accurate manner::accurate manner
latenc huh::latenc- huh
state flow::state flow
huh li::huh li-
li li::li- li-
huge amount::huge amount
out read::out read
reverse that::reverse that-
simple application::simple application
huh attain::huh attain
adapters buffer::adapters buffer
supporting multiple::supporting multiple
multiple disks::multiple disks
data send::data send
processing involved::processing involved
numerical parameter::numerical parameter
components huh::components huh
huh con::huh con-
throughput limit::throughput limit
discussed depends::discussed depends
protocol the::protocol the-
megabytes performance::megabytes performance
ten milliseconds::ten milliseconds
rotation latency::rotation latency
controller delay::controller delay
operation involves::operation involves
single track::single track
milliseconds delay::milliseconds delay
huh sixty-four::huh sixty-four
position huh::position huh
bytes transfer::bytes transfer
transfer requires::transfer requires
requires huh::requires huh
transfer takes::transfer takes
sector huh::sector huh
deposited huh::deposited huh
initiation path::initiation path
huh hundred::huh hundred
problem problem::problem problem
maximum input::maximum input
output rate::output rate
fixed components::fixed components
single processor::single processor
problem involves::problem involves
first finding::first finding
fo huh::fo- huh
lets analyze::lets analyze
individual huh::individual huh
huh component::huh component
fixed component::fixed component
thousand instruction::thousand instruction
hundred mille::hundred mille
huh maximum::huh maximum
huh matching::huh matching
thousand operations::thousand operations
huh object::huh object
block huh::block huh
out huh::out huh
smaller figure::smaller figure
first answer::first answer
twelve point::twelve point
milliseconds latency::milliseconds latency
milliseconds transfer::milliseconds transfer
transfer seek::transfer seek
forty-three point::forty-three point
huh sustaining::huh sustaining
thirty-six disks::thirty-six disks
huh controller::huh controller
addressing capability::addressing capability
pumping data::pumping data
de huh::de- huh
simple calculation::simple calculation
simple rules::simple rules
complicate formula::complicate- formula
formula you::formula you-
huh design::huh design
design problem::design problem
problem huh::problem huh
multi-function unit::multi-function unit
unit huh::unit huh
receive faxes::receive faxes
cost scanner::cost scanner
cost printer::cost printer
inexpensive processor::inexpensive processor
suitable memory::suitable memory
incoming fax::incoming fax
photocopy operation::photocopy operation
printer function::printer function
fax receiver::fax receiver
receiver scanner::receiver scanner
modem function::modem function
fax sender::fax sender
memory sitting::memory sitting
background huh::background huh
operating requirements::operating requirements
huh fax::huh fax
fax load::fax load
continuously fax::continuously fax
ha huh::ha- huh
outgoing faxes::outgoing faxes
fax message::fax message
single page::single page
to worry::to- worry
sending multiple::sending multiple
multiple pages::multiple pages
size pages::size pages
load huh::load huh
spare capacity::spare capacity
photocopying process::photocopying process
fax message::fax message-
mind huh::mind huh
huh setup::huh setup
bus adapter::bus adapter
adapter sitting::adapter sitting
scanner printer::scanner printer
printer modem::printer modem
huh build::huh build
dedicated system::dedicated system
huh work::huh work
fax machine::fax machine
non-volatile memory::non-volatile memory
point detail::point detail
medium resolution::medium resolution
resolution print::resolution print-
print huh::print- huh
size fixed::size fixed
fixed page::fixed page
eleven inch::eleven inch
simply work::simply work
gray levels::gray levels
levels huh::levels huh
gray level::gray level
fax purpose::fax purpose
for photocopy::for- photocopy
photocopy purpose::photocopy purpose
scanner works::scanner works
printer works::printer works
huh continuing::huh continuing
thirty-three kilo::thirty-three kilo
percent overhead::percent overhead
percent extra::percent extra
extra data::extra data
added huh::added huh
cost processor::cost processor
options hundred::options hundred
gigahertz type::gigahertz type
accesses memory::accesses memory
operation huh::operation huh
fax requires::fax requires
huh decoding::huh decoding
scan image::scan- image
huh compression::huh compression
decoding involves::decoding involves
involves hundred::involves hundred
raw data::raw data
image huh::image huh
ten kilo::ten kilo
executed performance::executed performance
performance byte::performance byte
incur cum::incur cum
computational load::computational load
flat rate::flat rate
instructions performance::instructions performance
thirty percent::thirty percent
additional access::additional access
sixty-four megabytes::sixty-four megabytes
twenty-eight megabytes::twenty-eight megabytes
forty million::forty million
million words::million words
bus huh::bus- huh
wh choice::wh- choice
so lets::so- lets
page carries::page carries
carries huh::carries huh
eleven inches::eleven inches
white mode::white mode
gray scale::gray scale
scale mode::scale mode
mega pixels::mega pixels
fax line::fax line
huh will::huh will-
disk size::disk size
size lets::size lets
code huh::code huh
reasonable cushion::reasonable cushion
scan pages::scan pages
huh nonvolatile::huh nonvolatile
nonvolatile memory::nonvolatile memory
volatile memory::volatile memory
huh augmented::huh augmented
execute program::execute program
flash huh::flash huh
fax process::fax process
modem speed::modem speed
compressed page::compressed page
encoded page::encoded page
ninety-nine kilo::ninety-nine kilo
out transmission::out transmission
ninety-nine multiplied::ninety-nine multiplied
incoming call::incoming call
establish connection::establish connection
purpose fo::purpose fo-
call huh::call huh
fax rate::fax rate
huh handling::huh handling
handling faxes::handling faxes
faxes huh::faxes huh
convenient figure::convenient figure
figure in::figure in-
minute huh::minute huh
minute so::minute so-
send fax::send fax
out attention::out attention
scanning rate::scanning rate
outgoing fax::outgoing fax
out rest::out rest
photocopying purpose::photocopying purpose
purpose huh::purpose huh
hand printing::hand printing
printing rate::printing rate
capacity and::capacity and-
and huh::and- huh
huh photocopy::huh photocopy
photocopy operations::photocopy operations
higher load::higher load
photocopying rate::photocopying rate
huh churn::huh churn
photocopy pages::photocopy pages
printed huh::printed huh
photocopy process::photocopy process
modem scanner::modem scanner
modem traffic::modem traffic
printer scanner::printer scanner
scanner traffic::scanner traffic
bus sees::bus sees
fax operation::fax operation
faxing operation::faxing operation
doing photocopy::doing photocopy
scanning point::scanning point
total demand::total demand
photocopying operation::photocopying operation
message huh::message huh
huh is::huh is-
is huh::is- huh
out involves::out involves
huh reading::huh reading
small component::small component
computation power::computation power
ninety-nine point::ninety-nine point
fax incoming::fax incoming
photocopy huh::photocopy huh
requires hundred::requires hundred
total point::total point
total instructions::total instructions
instructions throughput::instructions throughput
scan rate::scan rate
small factor::small factor
minor difference::minor difference
rate required::rate required
twenty-five mips::twenty-five mips
megahertz processor::megahertz processor
megahertz version::megahertz version
memory bandwidth::memory bandwidth
bandwidth huh::bandwidth huh
full capacity::full capacity
suppose processor::suppose processor
twenty-five million::twenty-five million
million instruction::million instruction
instruction words::instruction words
huh load::huh load
store type::store type
additional demand::additional demand
huh traffic::huh traffic
instruction traffic::instruction traffic
data traffic::data traffic
store traffic::store traffic
mem huh::mem- huh
end result::end result
questions huh::questions huh
proceed huh::proceed huh
huh rule::huh rule
steady state::steady state
huh congestions::huh congestions
starving huh::starving huh
sturdy state::sturdy state
buses converging::buses converging
multiple de::multiple de-
de devices::de- devices
we we::we- we-
latency issue::latency issue
scan button::scan button
copies printed::copies printed
you huh::you- huh
huh receiving::huh receiving
sending faxes::sending faxes
faxes photocopying::faxes photocopying
queuing delays::queuing delays
bandwidth calculation::bandwidth calculation
wh when::wh- when-
processor execute::processor execute
instructions required::instructions required
require tools::require tools
queuing theory::queuing theory
huh scenario::huh scenario
huh started::huh started
disk end::disk end
controller end::controller end
bus do::bus do-
taking huh::taking huh
huh twelve::huh twelve
scsi bus::scsi bus
occupied huh::occupied huh
interleaved leaving::interleaved- leaving
scsi controller::scsi controller
disk lets::disk lets
shorter period::shorter period
huh present::huh present
th scsi::th- scsi
thing coming::thing coming
streams coming::streams coming
suitable bus::suitable bus-
concluding remarks::concluding remarks
lecture huh::lecture huh
objectives huh::objectives huh
computer work::computer work
processors issues::processors issues
hierarchy pipelining::hierarchy pipelining
summary huh::summary huh
huh discussed::huh discussed
code instruction::code instruction
complete processor::complete processor
huh words::huh words
exponential growth::exponential growth
single monetary::single monetary
monetary unit::monetary unit
dollar huh::dollar huh
tube system::tube system
divided huh::divided huh
huh focus::huh focus
focus huh::focus huh
software meet::software meet
huh machine::huh machine
program end::program end
adders registers::adders registers
registers multiplexers::registers multiplexers
multiplexers buses::multiplexers buses
hardware end::hardware end
huh risk::huh risk
risk variety::risk variety
variety reduce::variety reduce
instruction tr::instruction- tr-
choice huh::choice huh
huh building::huh building
fast processor::fast processor
huh ease::huh ease
doing pipelining::doing pipelining
generating code::generating code
huh pertaining::huh pertaining
huh aspects::huh aspects
huh power::huh power
processor chip::processor chip
square centimeters::square centimeters
centimeters increasing::centimeters increasing
elaborate arrangement::elaborate arrangement
directions execution::directions execution
gross level::gross level
huh execution::huh execution
basic huh::basic huh
huh parameters::huh parameters
count cycles::count cycles
are varied::are- varied
case fast::case fast
programming point::programming point
huh developing::huh developing
design huh::design huh
put hardware::put hardware
additional logic::additional logic
logic shown::logic shown
comparison so::comparison so-
complex operations::complex operations
divider huh::divider huh
divider design::divider design-
notice similarity::notice similarity
restoring manner::restoring manner
manner non-restoring::manner non-restoring
non-restoring manner::non-restoring manner
non-restor non-restoring::non-restor- non-restoring
non-restoring division::non-restoring division
multiplier hardware::multiplier hardware
divider hardware::divider hardware
common huh::common huh
key differen::key differen-
big register::big register
bottom shifts::bottom shifts
unit capable::unit capable
single unit::single unit
division depending::division depending
tremendous improvement::tremendous improvement
save adders::save adders
array form::array form
huh adders::huh adders
save additions::save additions
significant factor::significant factor
huh noticing::huh noticing
huh integer::huh integer
integer operation::integer operation
point operation::point operation
standard method::standard method
additional feature::additional feature
performed huh::performed huh
accurate arithmetic::accurate arithmetic
sticky bits::sticky bits
special number::special number
entire process::entire process
instruction executions::instruction executions
executions starting::executions starting
instructions picking::instructions picking
operands doing::operands doing
first design::first design
simple combinational::simple combinational
huh black::huh black
clear distinction::clear distinction
distinction made::distinction made
huh sharing::huh sharing
huh makes::huh makes
larger variety::larger variety
box represents::box represents
represents activity::represents activity
boxes determines::boxes determines
accommodate huh::accommodate huh
box so::box so-
things distribute::things distribute
huh pipelining::huh pipelining
huh instructions::huh instructions
issued huh::issued huh
introducing registers::introducing registers
separate pipeline::separate pipeline
pipeline stages::pipeline stages
hazards huh::hazards huh
huh structure::huh structure
structure hazards::structure hazards
conflicts occur::conflicts occur
inherent huh::inherent huh
huh program::huh program
program logic::program logic
huh extra::huh extra
extra control::extra control
huh flushing::huh flushing
out instructions::out instructions
bl decision::bl- decision
forwarding data::forwarding data
huh spent::huh spent
flat structure::flat structure
huh fast::huh fast
inexpensive and::inexpensive and-
and dense::and- dense
inexpens manner::inexpens- manner
typical cache::typical cache
organization is::organization is-
is shown::is- shown
varying degree::varying degree
huh associative::huh associative-
associative huh::associative huh
alternative slots::alternative slots
associative manner::associative manner
doing parallel::doing parallel
parallel comparison::parallel comparison
huh parallel::huh parallel
huh search::huh search
adv impact::adv- impact
positive impact::positive impact
huh throw::huh throw
huh main::huh main
memory form::memory form-
disk stores::disk stores
stores huh::stores huh
virtual huh::virtual huh
associative buffer::associative buffer
first huh::first huh
huh lecture::huh lecture
network card::network card
graphics display::graphics display
display card::display card
recent board::recent board
years huh::years huh
performance and::performance and-
memory interconnection::memory interconnection
complete motherboard::complete motherboard
set build::set build
rare opportunity::rare opportunity
ap application::ap- application
application level::application level
architectural huh::architectural huh
huh com::huh com-
compiler operating::compiler operating
deep understanding::deep understanding
technical development::technical development
huh understanding::huh understanding
al al::al- al-
huh points::huh points
huh embedded::huh embedded
computers huh::computers huh
designing huh::designing huh
huh adapt::huh adapt
adapt huh::adapt huh
complete solution::complete solution
huh statistics::huh statistics
table servers::table servers
servers huh::servers huh
huh desktops::huh desktops
embedded processors::embedded processors
last huh::last huh
huh ov::huh ov-
cons years::cons- years
saturating huh::saturating huh
curve th::curve th-
fast growth::fast growth
so wh::so- wh-
huh availability::huh availability
person huh::person huh
huh num::huh num-
num number::num- number
computing device::computing device
huh intelligent::huh intelligent
programming the::programming the-
fix function::fix- function
fix set::fix- set
software design::software design
combined hardware::combined hardware
size rate::size rate
rate power::rate power
tremendous opportunities::tremendous opportunities
huh do::huh do-
do doing::do- doing
interesting work::interesting work
area huh::area huh
processors huh::processors huh
huh servers::huh servers
servers desktop::servers desktop
embedded huh::embedded huh
desktops laptops::desktops laptops
laptops mobile::laptops mobile
machines etcetera::machines etcetera
huh operation::huh operation
micro-controller huh::micro-controller huh
program and::program and-
huh computers::huh computers
interesting huh::interesting huh
huh possibilities::huh possibilities
personal experience::personal experience
huh villages::huh villages
small means::small means
delicate things::delicate things
inexpensive intel::inexpensive intel
huh couple::huh couple
cheap huh::cheap huh
car battery::car battery
bicycle wireless::bicycle wireless
wireless internet::wireless internet
internet cards::internet cards
powered hilltop::powered hilltop
hilltop relay::hilltop relay
relay station::relay station
telephone system::telephone system
local language::local language
similar huh::similar huh
huh bangalore::huh bangalore
huh recognize::huh recognize
cost computer::cost computer
strong arm::strong arm
low power::low power
consumption huh::consumption huh
modem linux::modem linux
touch pad::touch pad
speech capability::speech capability
speech input::speech input
speech output::speech output
read text::read text
illiterate person::illiterate person
reasonable medium::reasonable medium
huh spoken::huh spoken
out and::out and-
modern technology::modern technology
scientific experiments::scientific experiments
redwood tree::redwood tree
scientist wanted::scientist wanted
study huh::study huh
biological phenomenon::biological phenomenon
joint trees::joint trees
tree absorb::tree absorb
absorb moisture::absorb moisture
initial attempts::initial attempts
place lot::place lot
cables running::cables running
simple huh::simple huh
huh sensors::huh sensors
sensors miniature::sensors miniature
miniature battery::miniature battery
driven wireless::driven wireless
wireless sensor::wireless sensor
huh trees::huh trees
base and::base and-
huge cables::huge cables
bring safety::bring safety
huh automobiles::huh automobiles
huh french::huh french
train system::train system
fast system::fast- system
signaling system::signaling system
computer based::computer based
based huh::based huh
huh track::huh track
track system::track system
signaling mechanism::signaling mechanism
system issues::system issues
issues commands::issues commands
driver huh::driver huh
huh continue::huh continue
news medium::news medium
medium wh::medium wh-
traditional huh::traditional huh
newspaper medium::newspaper medium
huh web::huh web
web sources::web sources
sources huh::sources huh
regional boundaries::regional boundaries
nontraditional nonlocal::nontraditional nonlocal
nonlocal source::nonlocal source
news huh::news huh
huh preserving::huh preserving
huh image::huh image
image processing::image processing
processing techniques::processing techniques
huh diagnosis::huh diagnosis
add huh::add huh
huh applications::huh applications
developing huh::developing huh
important concern::important concern
terrorism the::terrorism the-
huh prevent::huh prevent
prevent huh::prevent huh
dangerous thing::dangerous thing
traditional approach::traditional approach
huh security::huh security
security people::security people
problem th::problem th-
small part::small part
exhaustive checking::exhaustive checking
camera base::camera base-
base system::base- system
bright dots::bright dots
displays huh::displays huh
emit light::emit light
digital camera::digital camera
camera video::camera video
video camera::video camera
camera sitting::camera sitting
lights illuminate::lights illuminate
vehicle rides::vehicle rides
limited huh::limited huh
huh field::huh field
part and::part and-
video signals::video signals
control room::control room
video huh::video huh
you generate::you- generate
single picture::single picture
sophisticated huh::sophisticated huh
complete image::complete image
careful huh::careful huh
computer it::computer it-
it it::it- it-
dedicated application::dedicated application
performing huh::performing huh
sophisticated task::sophisticated task
entry exit::entry exit
exit gates::exit gates
gates huh::gates huh
driven cars::driven cars
driving huh::driving huh
security man::security man
card huh::card huh
huh identification::huh identification
identification number::identification number
card identification::card identification
right person::right person
right car::right car
workable system::workable system
patience huh::patience huh
device installed::device installed
car huh::car huh
packaging huh::packaging huh
prom huh::prom huh
programmable read::programmable read
main thing::main thing
infrared source::infrared source
huh sender::huh sender
infrared signals::infrared signals
carrying huh::carrying huh
smart card::smart card
golden thing::golden thing
chip wh::chip wh-
tiny processor::tiny processor
credit card::credit card
card size::card size
size thing::size thing
electronic cash::electronic cash
electron electronic::electron- electronic
carries identity::carries identity
control computer::control computer
car is::car is-
gate you::gate you-
gate huh::gate huh
light huh::light huh
interesting design::interesting design
battery driven::battery driven
driven device::driven device
consumption reducing::consumption reducing
operation organized::operation organized
in-house development::in-house development
designed computer::designed computer
based system::based system
interesting areas::interesting areas
transcription::transcription
brindha::brindha
computer::computer
architecture::architecture
prof::prof
anshul::anshul
kumar::kumar
department::department
science::science
engineering::engineering
iit::iit
delhi::delhi
lecture::lecture
processor::processor
design::design
control::control
multi::multi
cycle::cycle
discussing::discussing
execution::execution
instruction::instruction
divided::divided
multiple::multiple
clock::clock
cycles::cycles
data::data
path::path
designed::designed
today::today
controller::controller
aspects::aspects
controlled::controlled
sequence::sequence
lectures::lectures
designing::designing
started::started
simple::simple
done::done
single::single
notice::notice
problem::problem
performance::performance
issues::issues
moved::moved
style::style
wha::wha
actions::actions
instructions::instructions
putting::putting
sequences::sequences
build::build
flow::flow
carrying::carrying
out::out
identify::identify
signals::signals
required::required
steps::steps
doing::doing
group::group
groups::groups
define::define
meaningful::meaningful
operations::operations
micro::micro
viewed::viewed
set::set
simplify::simplify
establishing::establishing
relationship::relationship
states::states
signal::signal
values::values
finally::finally
transit::transit
complete::complete
part::part
starting::starting
point::point
arrived::arrived
last::last
key::key
resources::resources
memory::memory
register::register
file::file
alu::alu
maximum::maximum
utilization::utilization
recall::recall
intermediate::intermediate
results::results
store::store
registers::registers
brought::brought
stored::stored
read::read
similarly::similarly
operand::operand
operation::operation
res::res
short::short
result::result
components::components
change::change
indicating::indicating
write::write
multiplexer::multiplexer
usual::usual
changed::changed
size::size
organization::organization
redefine::redefine
first::first
lets::lets
back::back
activity::activity
recorded::recorded
start::start
working::working
noise::noise
class::class
word::word
form::form
address::address
takes::takes
value::value
concurrently::concurrently
two::two
addresses::addresses
excuse::excuse
provided::provided
relevant::relevant
fields::fields
bit::bit
twenty::twenty
sixteen::sixteen
corresponds::corresponds
meant::meant
box::box
simultaneously::simultaneously
number::number
actual::actual
performed::performed
written::written
generic::generic
sense::sense
guided::guided
function::function
field::field
involve::involve
transferring::transferring
bits::bits
eleven::eleven
fifteen::fifteen
destination::destination
things::things
made::made
careful::careful
choice::choice
involves::involves
access::access
fetch::fetch
updation::updation
program::program
counter::counter
bringing::bringing
participate::participate
calculation::calculation
carry::carry
accessed::accessed
calculate::calculate
adding::adding
offset::offset
coming::coming
sign::sign
extension::extension
temporarily::temporarily
contents::contents
require::require
four::four
load::load
similar::similar
reading::reading
manner::manner
fourth::fourth
carried::carried
move::move
beq::beq
lot::lot
work::work
operands::operands
compared::compared
ready::ready
target::target
case::case
branch::branch
free::free
comparison::comparison
don::don
transfer::transfer
immediately::immediately
condition::condition
checked::checked
checking::checking
compare::compare
holds::holds
transferred::transferred
req::req
requires::requires
lastly::lastly
jump::jump
compose::compose
taking::taking
missed::missed
shift::shift
concatenated::concatenated
impression::impression
earlier::earlier
resource::resource
consuming::consuming
accessing::accessing
total::total
delay::delay
max::max
occupying::occupying
reason::reason
sequentially::sequentially
pick::pick
incremented::incremented
incrementing::incrementing
put::put
picked::picked
sequenced::sequenced
additional::additional
approach::approach
roughly::roughly
equivalent::equivalent
addition::addition
update::update
directly::directly
formed::formed
right::right
decided::decided
encompasses::encompasses
requiring::requiring
sequencing::sequencing
pins::pins
timings::timings
conceived::conceived
imagining::imagining
basically::basically
period::period
accommodate::accommodate
quantized::quantized
discretized::discretized
periods::periods
clear::clear
proceed::proceed
worse::worse
essential::essential
division::division
separately::separately
picture::picture
global::global
view::view
thing::thing
screen::screen
omitted::omitted
pieces::pieces
text::text
matter::matter
detail::detail
retain::retain
destinations::destinations
main::main
cases::cases
exist::exist
details::details
excess::excess
performing::performing
arithmetic::arithmetic
logical::logical
storing::storing
essence::essence
skeleton::skeleton
captured::captured
task::task
commonality::commonality
common::common
merge::merge
apparently::apparently
action::action
state::state
differing::differing
boxes::boxes
correspond::correspond
arrive::arrive
sort::sort
transition::transition
diagram::diagram
describe::describe
moment::moment
graph::graph
moves::moves
merged::merged
merging::merging
pro::pro
branching::branching
important::important
noticed::noticed
stage::stage
contemplating::contemplating
bifurcation::bifurcation
splitting::splitting
onwards::onwards
opcode::opcode
split::split
fetched::fetched
typically::typically
complex::complex
decoding::decoding
understanding::understanding
circuit::circuit
allowed::allowed
full::full
place::place
fully::fully
occupied::occupied
practically::practically
occur::occur
step::step
completed::completed
chains::chains
special::special
make::make
harm::harm
answer::answer
functionality::functionality
consume::consume
energy::energy
agree::agree
attempt::attempt
calculated::calculated
repeat::repeat
occupy::occupy
discard::discard
consumption::consumption
holding::holding
overwritten::overwritten
trouble::trouble
tha::tha
postpone::postpone
superfluous::superfluous
unnecessary::unnecessary
discarded::discarded
occurring::occurring
postponed::postponed
referred::referred
hit::hit
eventually::eventually
remember::remember
frequency::frequency
occurrence::occurrence
comparatively::comparatively
lower::lower
impact::impact
loss::loss
negligible::negligible
mind::mind
clean::clean
situation::situation
end::end
separate::separate
branches::branches
broader::broader
repeated::repeated
chain::chain
concerned::concerned
small::small
finite::finite
machine::machine
ten::ten
cycling::cycling
decode::decode
follow::follow
paths::paths
long::long
power::power
range::range
varied::varied
worry::worry
perform::perform
improvement::improvement
possibility::possibility
bifurcate::bifurcate
reduces::reduces
exercise::exercise
component::component
understand::understand
abbreviating::abbreviating
rew::rew
cha::cha
chart::chart
decide::decide
multiplexers::multiplexers
controls::controls
decides::decides
sources::sources
writing::writing
calling::calling
rdst::rdst
source::source
hand::hand
handling::handling
inputs::inputs
labeled::labeled
noiselor::noiselor
table::table
exhaustively::exhaustively
related::related
call::call
considered::considered
understandable::understandable
affect::affect
grouping::grouping
wise::wise
substantially::substantially
talk::talk
list::list
psrc::psrc
pwu::pwu
pwc::pwc
unconditional::unconditional
conditional::conditional
unconditionally::unconditionally
generate::generate
derived::derived
explain::explain
imply::imply
dont::dont
care::care
selecting::selecting
output::output
check::check
correct::correct
bring::bring
keeping::keeping
gate::gate
making::making
handled::handled
differently::differently
effect::effect
generated::generated
conditionally::conditionally
activate::activate
means::means
etcetera::etcetera
binary::binary
code::code
decimal::decimal
activities::activities
default::default
feed::feed
points::points
inactive::inactive
doesn::doesn
irrespective::irrespective
dictates::dictates
produce::produce
gates::gates
derive::derive
connected::connected
question::question
worrying::worrying
happening::happening
happen::happen
overriding::overriding
suppress::suppress
select::select
input::input
changing::changing
give::give
names::names
convenient::convenient
subsequent::subsequent
discussion::discussion
increment::increment
convenience::convenience
assigned::assigned
revolve::revolve
fetching::fetching
makes::makes
heard::heard
occurred::occurred
kind::kind
redundancy::redundancy
possibilities::possibilities
totally::totally
identical::identical
observation::observation
limit::limit
low::low
talking::talking
tells::tells
m2r::m2r
modifying::modifying
complementary::complementary
reduce::reduce
rs2a::rs2a
rt2b::rt2b
res2rd::res2rd
mem2rt::mem2rt
opc::opc
circuitry::circuitry
unchanged::unchanged
appearing::appearing
influences::influences
ensure::ensure
comparing::comparing
coding::coding
simply::simply
calculations::calculations
logic::logic
subtraction::subtraction
encoding::encoding
fill::fill
assert::assert
tabulate::tabulate
redraw::redraw
symbols::symbols
sinamic::sinamic
statements::statements
replaced::replaced
symbol::symbol
described::described
previous::previous
slides::slides
paddr::paddr
numbered::numbered
tables::tables
depend::depend
bifurcating::bifurcating
listing::listing
identified::identified
shows::shows
pair::pair
mentioned::mentioned
ends::ends
calculating::calculating
sep::sep
distinct::distinct
find::find
offsetting::offsetting
completes::completes
performs::performs
infirmsed::infirmsed
influencing::influencing
replace::replace
vector::vector
defines::defines
encode::encode
truth::truth
transitions::transitions
defining::defining
depending::depending
conditions::conditions
wont::wont
kinds::kinds
combinational::combinational
block::block
implement::implement
shown::shown
plas::plas
hold::hold
draw::draw
alternative::alternative
stop::stop
summarize::summarize
defined::defined
microprogrammed::microprogrammed
datapath::datapath
scheme::scheme
concentrate::concentrate
finish::finish
alternatives::alternatives
pla::pla
rom::rom
implementation::implementation
parts::parts
produces::produces
implemented::implemented
discuss::discuss
controlling::controlling
basic::basic
pattern::pattern
effective::effective
symbolic::symbolic
assignments::assignments
transfers::transfers
label::label
crucial::crucial
starts::starts
capture::capture
describes::describes
supposed::supposed
substitute::substitute
zeros::zeros
description::description
encoded::encoded
forms::forms
showing::showing
black::black
green::green
numbers::numbers
upto::upto
discussed::discussed
altogether::altogether
present::present
grouped::grouped
row::row
column::column
combination::combination
describing::describing
capturing::capturing
flowchart::flowchart
codes::codes
opcodes::opcodes
outputs::outputs
compact::compact
representation::representation
sparsity::sparsity
dimensional::dimensional
combinations::combinations
listed::listed
vertically::vertically
current::current
raise::raise
entries::entries
lots::lots
cares::cares
fixed::fixed
rewritten::rewritten
labels::labels
conventional::conventional
represent::represent
nex::nex
implementing::implementing
specific::specific
drives::drives
generating::generating
deciding::deciding
thought::thought
smaller::smaller
general::general
purpose::purpose
suppose::suppose
expanded::expanded
truthtable::truthtable
rows::rows
essentially::essentially
apply::apply
effectively::effectively
works::works
definition::definition
implements::implements
difference::difference
terms::terms
words::words
multiplied::multiplied
plane::plane
running::running
true::true
false::false
vertical::vertical
lines::lines
product::product
governs::governs
governed::governed
factors::factors
run::run
line::line
term::term
alternatively::alternatively
area::area
rectangle::rectangle
promotional::promotional
dimension::dimension
accommodates::accommodates
height::height
proportional::proportional
width::width
economic::economic
rom001234::rom001234
sparkcity::sparkcity
reasonable::reasonable
illustrate::illustrate
contribute::contribute
show::show
option::option
illustration::illustration
raised::raised
thousand::thousand
twelve::twelve
thirteen::thirteen
fourteen::fourteen
expands::expands
expand::expand
sixty::sixty
mention::mention
executes::executes
programs::programs
generates::generates
deal::deal
manipulating::manipulating
files::files
disadvantage::disadvantage
based::based
differences::differences
imagine::imagine
applied::applied
tho::tho
remains::remains
arrangement::arrangement
presented::presented
sequencer::sequencer
ensuring::ensuring
stepping::stepping
locations::locations
programmed::programmed
correctly::correctly
information::information
communicated::communicated
wondering::wondering
isn::isn
incrementer::incrementer
adder::adder
bulk::bulk
restarting::restarting
dispatch::dispatch
terminology::terminology
reset::reset
larger::larger
sufficient::sufficient
determining::determining
selected::selected
roms::roms
leave::leave
ways::ways
determine::determine
level::level
language::language
studied::studied
initially::initially
primitive::primitive
represents::represents
incidentally::incidentally
normal::normal
rest::rest
beginning::beginning
assembler::assembler
translate::translate
variations::variations
structure::structure
horizontal::horizontal
programming::programming
microprogramming::microprogramming
support::support
provision::provision
high::high
degree::degree
concurrency::concurrency
idea::idea
conserve::conserve
space::space
past::past
thousands::thousands
patterns::patterns
utilize::utilize
log::log
requirement::requirement
lose::lose
versus::versus
non::non
contrast::contrast
hardwired::hardwired
pros::pros
cons::cons
advantages::advantages
easy::easy
easily::easily
good::good
independently::independently
chip::chip
drawn::drawn
add::add
modify::modify
remain::remain
fact::fact
times::times
families::families
attempts::attempts
emulation::emulation
hardware::hardware
process::process
emulate::emulate
simulation::simulation
simulate::simulate
internal::internal
temporary::temporary
person::person
penalty::penalty
slower::slower
tend::tend
longer::longer
popular::popular
partly::partly
tools::tools
tdf::tdf
final::final
difficult::difficult
advantage::advantage
efficient::efficient
controllers::controllers
talked::talked
options::options
levels::levels
stages::stages
initial::initial
express::express
arrows::arrows
equations::equations
technically::technically
large::large
significant::significant
thirdly::thirdly
looked::looked
microprogram::microprogram
drive::drive
microsequencer::microsequencer
determines::determines
pipelined::pipelined
type::type
objective::objective
cpi::cpi
initiate::initiate
ideally::ideally
pipeline::pipeline
benefit::benefit
situations::situations
introduced::introduced
briefly::briefly
hinted::hinted
hazards::hazards
types::types
structural::structural
eliminate::eliminate
inherent::inherent
concept::concept
rules::rules
ignore::ignore
ideal::ideal
initiated::initiated
introduce::introduce
shifters::shifters
rooters::rooters
behaves::behaves
context::context
possibly::possibly
augment::augment
handle::handle
basis::basis
complicated::complicated
easier::easier
discussions::discussions
simplification::simplification
extenders::extenders
analyze::analyze
updating::updating
decoded::decoded
subtract::subtract
facility::facility
skip::skip
wasting::wasting
operates::operates
uniform::uniform
cutting::cutting
forward::forward
cut::cut
thirty::thirty
ninety::ninety
pass::pass
couple::couple
backward::backward
passing::passing
deliberately::deliberately
turning::turning
multiplexing::multiplexing
expecting::expecting
spirit::spirit
loop::loop
turn::turn
pumped::pumped
missing::missing
removed::removed
computing::computing
choices::choices
peculiar::peculiar
consequence::consequence
experiencing::experiencing
idling::idling
homogenous::homogenous
fashion::fashion
slight::slight
day::day
delayed::delayed
amount::amount
experience::experience
feeding::feeding
position::position
consistent::consistent
mismatch::mismatch
multiplex::multiplex
logically::logically
consequences::consequences
length::length
increase::increase
early::early
argument::argument
positioning::positioning
unit::unit
allowing::allowing
positioned::positioned
solution::solution
saving::saving
reach::reach
correction::correction
thi::thi
share::share
implications::implications
influence::influence
repositioning::repositioning
dictated::dictated
longest::longest
storage::storage
element::element
neglecting::neglecting
treating::treating
real::real
life::life
combined::combined
delays::delays
critical::critical
lumped::lumped
achieves::achieves
balance::balance
slack::slack
room::room
side::side
trade::trade
cost::cost
universal::universal
optimize::optimize
multi-cycle::multi-cycle
vision::vision
purely::purely
sig::sig
organized::organized
determined::determined
questions::questions
students::students
asked::asked
theory::theory
machines::machines
mealy::mealy
moore::moore
suit::suit
flight::flight
maintain::maintain
fortunately::fortunately
turns::turns
reconstruct::reconstruct
superimpose::superimpose
goint::goint
lsb::lsb
connect::connect
gated::gated
havnt::havnt
mixing::mixing
found::found
ing::ing
sitting::sitting
ignoring::ignoring
identity::identity
places::places
solved::solved
synchronizing::synchronizing
cur::cur
applicable::applicable
extend::extend
passed::passed
extended::extended
walls::walls
units::units
inserting::inserting
sequential::sequential
portions::portions
remembering::remembering
timed::timed
focus::focus
tension::tension
enables::enables
root::root
irrelevant::irrelevant
modified::modified
remove::remove
tapping::tapping
applying::applying
datas::datas
remaining::remaining
interesting::interesting
suggested::suggested
delaying::delaying
giving::giving
stay::stay
internally::internally
pull::pull
added::added
series::series
bothering::bothering
hazard::hazard
suffer::suffer
reduced::reduced
consecutive::consecutive
dependence::dependence
computed::computed
gap::gap
deep::deep
opportunities::opportunities
extent::extent
matches::matches
sharing::sharing
half::half
bubbles::bubbles
absence::absence
valid::valid
computation::computation
wrong::wrong
detect::detect
dependency::dependency
close::close
match::match
reached::reached
forwarding::forwarding
enable::enable
halt::halt
disable::disable
whats::whats
decision::decision
tendency::tendency
realize::realize
mistake::mistake
nullify::nullify
flush::flush
detecting::detecting
freeze::freeze
prediction::prediction
statically::statically
heuristic::heuristic
predict::predict
inline::inline
loops::loops
iterated::iterated
static::static
dynamic::dynamic
track::track
happened::happened
encountered::encountered
sophisticated::sophisticated
light::light
suitable::suitable
moving::moving
smoothly::smoothly
insert::insert
suitably::suitably
introduction::introduction
flowing::flowing
held::held
including::including
blindly::blindly
flushed::flushed
predictions::predictions
fairly::fairly
straight::straight
software::software
solutions::solutions
unlike::unlike
introducing::introducing
interacting::interacting
compiler::compiler
whichever::whichever
analysis::analysis
rearrange::rearrange
minimized::minimized
dependent::dependent
meaning::meaning
rearrangement::rearrangement
order::order
independent::independent
reordered::reordered
reordering::reordering
worst::worst
ops::ops
construction::construction
extra::extra
positions::positions
slots::slots
filled::filled
tagged::tagged
transformation::transformation
programmer::programmer
simplifies::simplifies
learnt::learnt
inter::inter
carefully::carefully
con::con
fed::fed
detection::detection
stalling::stalling
flushing::flushing
minimize::minimize
face::face
therf::therf
correcst::correcst
techniques::techniques
improve::improve
examine::examine
stall::stall
stalls::stalls
detected::detected
technique::technique
bypass::bypass
spite::spite
recollect::recollect
issue::issue
begin::begin
waste::waste
middle::middle
forwarded::forwarded
axis::axis
expect::expect
prolong::prolong
fruitful::fruitful
stuck::stuck
stays::stays
proceeds::proceeds
views::views
shot::shot
snap::snap
shots::shots
emerge::emerge
throw::throw
minus::minus
tower::tower
trace::trace
shaded::shaded
ins::ins
queue::queue
null::null
utilizing::utilizing
spent::spent
culminate::culminate
stopping::stopping
fluid::fluid
air::air
bubble::bubble
instant::instant
background::background
accurately::accurately
nop::nop
nops::nops
profile::profile
persists::persists
re-rooted::re-rooted
wires::wires
sake::sake
clarity::clarity
prevent::prevent
explicitly::explicitly
turned::turned
land::land
assuming::assuming
illustrated::illustrated
achieve::achieve
desired::desired
figure::figure
stating::stating
waiting::waiting
tow::tow
occasion::occasion
precisely::precisely
notation::notation
dot::dot
active::active
satisfied::satisfied
specification::specification
matching::matching
setting::setting
intends::intends
cache::cache
haven::haven
hat::hat
reads::reads
refined::refined
omitting::omitting
multiplexed::multiplexed
bates::bates
separated::separated
conflict::conflict
scenarios::scenarios
leading::leading
solid::solid
dotted::dotted
tap::tap
dma::dma
strictly::strictly
speaking::speaking
dm::NNP
send::send
augmented::augmented
copy::copy
proper::proper
symbolically::symbolically
energize::energize
equal::equal
intending::intending
digit::digit
picking::picking
writes::writes
overwrite::overwrite
latest::latest
freshly::freshly
specifically::specifically
referring::referring
shortcoming::shortcoming
analyzed::analyzed
effects::effects
slabs::slabs
inserted::inserted
activated::activated
develop::develop
developed::developed
mips::mips
worked::worked
eliminating::eliminating
speed::speed
scheduling::scheduling
parallel::parallel
instants::instants
guide::guide
continue::continue
assume::assume
continues::continues
broken::broken
entered::entered
intended::intended
expected::expected
tested::tested
outcome::outcome
latching::latching
shifts::shifts
prove::prove
trapping::trapping
ultimately::ultimately
undergo::undergo
account::account
redistributed::redistributed
borne::borne
anticipation::anticipation
loading::loading
realized::realized
acts::acts
evaluated::evaluated
evaluation::evaluation
earliest::earliest
predicting::predicting
factor::factor
architectures::architectures
flags::flags
test::test
flag::flag
trivial::trivial
preceding::preceding
previously::previously
rid::rid
decisions::decisions
events::events
rare::rare
event::event
probabilistic::probabilistic
average::average
improved::improved
dynamically::dynamically
distinguish::distinguish
predication::predication
elimination::elimination
testing::testing
predicated::predicated
processors::processors
feature::feature
attach::attach
fused::fused
attached::attached
specifies::specifies
removing::removing
explicit::explicit
preparation::preparation
saved::saved
virtual::virtual
involved::involved
page::page
translation::translation
advantageous::advantageous
omit::omit
stretch::stretch
horizontally::horizontally
thrown::thrown
quality::quality
comparator::comparator
motivation::motivation
implication::implication
adverse::adverse
equality::equality
simpler::simpler
greater::greater
proprigated::proprigated
afford::afford
inequality::inequality
fast::fast
bna::bna
speeded::speeded
marginally::marginally
losing::losing
occurs::occurs
speeding::speeding
evaluate::evaluate
statement::statement
role::role
generator::generator
treat::treat
undo::undo
guess::guess
criteria::criteria
created::created
equally::equally
exception::exception
occasionally::occasionally
executing::executing
record::record
inside::inside
occurrences::occurrences
minded::minded
intelligent::intelligent
flexibility::flexibility
selectively::selectively
bypassing::bypassing
nullification::nullification
annulment::annulment
slot::slot
poorly::poorly
strict::strict
outer::outer
iterations::iterations
strategy::strategy
vice::vice
versa::versa
instance::instance
mispredictions::mispredictions
enter::enter
bra::bra
iterate::iterate
entering::entering
exiting::exiting
chosen::chosen
policy::policy
commonly::commonly
represented::represented
remembers::remembers
summary::summary
outcomes::outcomes
arcs::arcs
transiting::transiting
arc::arc
depict::depict
comfortably::comfortably
continuously::continuously
depicted::depicted
mechanism::mechanism
avoid::avoid
double::double
mistakes::mistakes
history::history
buffer::buffer
assumption::assumption
constant::constant
obtained::obtained
bound::bound
bne::bne
organizations::organizations
associative::associative
contrantive::contrantive
decibel::decibel
carries::carries
statistics::statistics
search::search
variation::variation
assumed::assumed
due::due
anticipated::anticipated
predicted::predicted
probability::probability
percent::percent
coupling::coupling
correlation::correlation
left::left
varies::varies
hundred::hundred
accuracy::accuracy
recently::recently
recent::recent
string::string
incurring::incurring
powerful::powerful
method::method
push::push
striking::striking
causing::causing
built::built
producing::producing
pushed::pushed
expensive::expensive
busy::busy
nicely::nicely
speculative::speculative
stuff::stuff
super::super
scalar::scalar
execute::execute
necessarily::necessarily
window::window
stream::stream
parallelism::parallelism
capable::capable
finds::finds
consistently::consistently
ilp::ilp
rely::rely
query::query
whe::whe
coded::coded
vliw::vliw
driven::driven
functional::functional
ports::ports
assign::assign
operational::operational
timing::timing
top::top
overlapping::overlapping
biw::biw
scale::scale
perspective::perspective
modern::modern
pentium::pentium
ibm::ibm
risc::risc
desktop::desktop
specialized::specialized
applications::applications
compatibility::compatibility
intel::intel
eighty::eighty
version::version
exists::exists
older::older
user::user
faster::faster
architecturally::architecturally
fundamentally::fundamentally
regenerate::regenerate
pack::pack
appropriately::appropriately
object::object
commercial::commercial
major::major
specialize::specialize
impossible::impossible
features::features
specially::specially
density::density
poor::poor
packed::packed
scalars::scalars
higher::higher
vlwi::vlwi
conclude::conclude
exceptional::exceptional
cycle-design::cycle-design
processing::processing
exceptions::exceptions
overflow::overflow
fault::fault
illegal::illegal
knowing::knowing
precise::precise
interrupt::interrupt
imprecise::imprecise
interrupts::interrupts
model::model
inconsistent::inconsistent
insist::insist
status::status
naturally::naturally
resume::resume
executed::executed
partially::partially
restart::restart
realizing::realizing
complexities::complexities
pipelining::pipelining
wrongly::wrongly
dyna::dyna
led::led
superscalar::superscalar
lies::lies
slightly::slightly
cross::cross
barrier::barrier
engineering,iit::engineering,iit
architecture-1::architecture-1
arhitecture::arhitecture
interface::interface
provide::provide
behaviour::behaviour
definitions::definitions
computations::computations
distinction::distinction
assembly::assembly
building::building
blocks::blocks
harware::harware
interpret::interpret
goal::goal
expressed::expressed
efficiently::efficiently
maximize::maximize
efficiency::efficiency
goals::goals
reaching::reaching
toy::toy
people::people
stanford::stanford
eighties::eighties
typical::typical
risk::risk
computers::computers
subsequently::subsequently
developments::developments
nec::nec
nintendo::nintendo
video::video
games::games
silicon::silicon
graphics::graphics
sony::sony
play::play
station::station
grasp::grasp
simplest::simplest
assignment::assignment
sum::sum
equivalently::equivalently
dollar::dollar
signify::signify
association::association
variable::variable
established::established
arbitarily::arbitarily
infix::infix
opponent::opponent
conventionally::conventionally
infact::infact
simplicity::simplicity
favors::favors
regularity::regularity
uniformity::uniformity
format::format
adds::adds
limiting::limiting
arbitary::arbitary
sides::sides
fit::fit
atleast::atleast
possibily::possibily
spend::spend
beat::beat
expressions::expressions
subtracts::subtracts
additions::additions
location::location
seat::seat
restate::restate
structures::structures
records::records
arrays::arrays
complexing::complexing
capacity::capacity
limited::limited
mapped::mapped
array::array
consisting::consisting
bytes::bytes
convention::convention
addressable::addressable
byte::byte
quarter::quarter
addressability::addressability
resolution::resolution
individual::individual
addressed::addressed
index::index
conventions::conventions
spelling::spelling
error::error
endian::endian
big::big
numbering::numbering
minute::minute
reverse::reverse
spark::spark
lab::lab
simulator::simulator
adapts::adapts
host::host
pentiums::pentiums
fifty::fifty
centre::centre
aligned::aligned
bottom::bottom
ending::ending
physically::physically
consists::consists
twoand::twoand
spread::spread
physical::physical
direction::direction
eigth::eigth
integer::integer
stands::stands
elements::elements
contained::contained
loaded::loaded
stand::stand
indices::indices
expression::expression
interchange::interchange
arguments::arguments
standard::standard
interchanging::interchanging
variables::variables
loads::loads
preparing::preparing
multiply::multiply
elaborate::elaborate
multiplication::multiplication
indexing::indexing
prepared::prepared
entire::entire
opposite::opposite
interchanged::interchanged
temporaries::temporaries
return::return
seventeen::seventeen
examples::examples
labelled::labelled
divide::divide
signifies::signifies
fuction::fuction
contrary::contrary
filed::filed
unused::unused
shamt::shamt
appears::appears
eighteen::eighteen
hexa::hexa
deviate::deviate
uniformly::uniformly
deviation::deviation
nature::nature
demands::demands
compromise::compromise
rigid::rigid
constants::constants
equivalents::equivalents
skipping::skipping
linked::linked
subtracting::subtracting
puts::puts
flows::flows
jumps::jumps
organised::organised
slt::slt
compares::compares
sone::sone
alter::alter
combine::combine
blt::blt
told::told
formats::formats
exact::exact
intialized::intialized
suffix::suffix
obvious::obvious
deviated::deviated
hardwared::hardwared
virtue::virtue
rate::rate
devote::devote
fills::fills
extraction::extraction
lui::lui
upper::upper
ori::ori
odd::odd
job::job
flavors::flavors
counterpart::counterpart
man::man
learned::learned
circuitory::circuitory
student::student
entererd::entererd
swap::swap
swapped::swapped
ensured::ensured
integers::integers
addressing::addressing
prefixing::prefixing
ors::ors
market::market
natural::natural
designer::designer
deeper::deeper
architectural::architectural
users::users
perspectives::perspectives
deign::deign
quantitative::quantitative
metric::metric
quantification::quantification
perpective::perpective
designers::designers
purchasers::purchasers
perpesctive::perpesctive
buy::buy
system::system
organisation::organisation
personal::personal
variety::variety
manufacturers::manufacturers
vendors::vendors
vendor::vendor
intuitive::intuitive
save::save
money::money
settle::settle
rupee::rupee
price::price
ratio::ratio
pose::pose
sets::sets
styles::styles
stack::stack
accumulator::accumulator
philosophies::philosophies
fix::fix
cheapest::cheapest
study::study
precised::precised
measuring::measuring
measurable::measurable
quantity::quantity
measure::measure
report::report
measurement::measurement
experiments::experiments
summarizes::summarizes
experiment::experiment
judgement::judgement
project::project
hype::hype
requirements::requirements
reflects::reflects
summarizing::summarizing
isimportant::isimportant
piece::piece
emailing::emailing
attention::attention
domain::domain
daily::daily
parallels::parallels
aircrafts::aircrafts
airline::airline
debating::debating
declared::declared
perfomance::perfomance
columns::columns
aircraft::aircraft
miles::miles
hour::hour
refueling::refueling
passengers::passengers
parameters::parameters
telling::telling
concorde::concorde
interested::interested
flights::flights
stoppage::stoppage
airports::airports
distance::distance
passenger::passenger
boeing::boeing
trips::trips
targets::targets
interest::interest
application::application
hours::hours
atlantic::atlantic
inversely::inversely
throughput::throughput
composite::composite
figures::figures
brings::brings
notions::notions
travel::travel
response::response
latency::latency
concern::concern
wall::wall
interactive::interactive
environment::environment
database::database
atm::atm
command::command
request::request
seconds::seconds
minutes::minutes
tasks::tasks
jobs::jobs
shoes::shoes
manager::manager
catering::catering
community::community
secondary::secondary
wait::wait
service::service
collection::collection
needed::needed
choose::choose
measures::measures
quick::quick
lead::lead
policies::policies
depends::depends
perhas::perhas
aspect::aspect
predominantly::predominantly
bigger::bigger
reciprocal::reciprocal
relative::relative
runs::runs
speeds::speeds
mph::mph
persons::persons
pmph::pmph
focussing::focussing
closely::closely
upgrading::upgrading
giga::giga
hertz::hertz
increasing::increasing
scheduled::scheduled
overhead::overhead
switching::switching
knew::knew
deteriorate::deteriorate
lying::lying
counting::counting
front::front
network::network
atmmachines::atmmachines
supporting::supporting
waitin::waitin
fire::fire
transcaction::transcaction
waits::waits
transaction::transaction
respond::respond
continuing::continuing
practical::practical
reasons::reasons
costing::costing
isolation::isolation
ticket::ticket
budget::budget
minimum::minimum
cpu::cpu
disk::disk
tasking::tasking
spends::spends
exclude::exclude
communication::communication
incurrs::incurrs
attributable::attributable
serve::serve
peripheral::peripheral
clarify::clarify
break::break
periodic::periodic
ano::ano
discrete::discrete
edges::edges
mega::mega
nano::nano
relating::relating
million::million
milli::milli
divivded::divivded
reciprocals::reciprocals
count::count
thee::thee
quantities::quantities
equation::equation
dimensionally::dimensionally
balanced::balanced
cancel::cancel
fraction::fraction
formula::formula
substituting::substituting
seventy::seventy
macro::macro
increases::increases
depended::depended
inverse::inverse
rates::rates
direct::direct
fractional::fractional
shorter::shorter
waited::waited
cpis::cpis
weightage::weightage
frequently::frequently
occuring::occuring
categories::categories
category::category
totals::totals
arithmetical::arithmetical
weighted::weighted
percentage::percentage
interestingly::interestingly
instrution::instrution
forty::forty
minimizing::minimizing
explaination::explaination
multiplications::multiplications
divisions::divisions
floating::floating
accesses::accesses
picks::picks
redesign::redesign
hoping::hoping
improving::improving
closing::closing
gradually::gradually
technology::technology
informed::informed
pardon::pardon
sir::sir
doubled::doubled
seperately::seperately
operating::operating
exciting::exciting
walks::walks
integral::integral
shapes::shapes
sizes::sizes
packs::packs
capability::capability
nineteen::nineteen
fifties::fifties
began::began
hall::hall
insufficient::insufficient
weather::weather
nuclear::nuclear
astronomical::astronomical
bio::bio
informatics::informatics
tiny::tiny
hidden::hidden
home::home
appliances::appliances
cameras::cameras
mobile::mobile
phones::phones
projector::projector
remote::remote
diversity::diversity
learn::learn
principle::principle
binds::binds
outline::outline
firstly::firstly
studying::studying
structured::structured
objectives::objectives
propose::propose
notion::notion
misleading::misleading
principles::principles
todays::todays
responsible::responsible
cahes::cahes
concepts::concepts
scope::scope
advanced::advanced
courses::courses
covered::covered
glimpse::glimpse
opportunity::opportunity
existing::existing
devolping::devolping
administrator::administrator
responsibility::responsibility
agin::agin
knowledge::knowledge
relations::relations
embedded::embedded
throws::throws
open::open
achitecture::achitecture
relate::relate
buildings::buildings
plan::plan
layout::layout
residential::residential
living::living
dining::dining
kitchen::kitchen
balcony::balcony
civil::civil
engineer::engineer
wory::wory
shouldn::shouldn
fall::fall
durable::durable
stresses::stresses
strains::strains
durability::durability
architect::architect
realise::realise
transistors::transistors
capacitors::capacitors
abstractions::abstractions
disciplines::disciplines
layers::layers
abstraction::abstraction
matters::matters
consideration::consideration
depth::depth
seperated::seperated
coping::coping
complexity::complexity
millions::millions
extremely::extremely
boggling::boggling
familiar::familiar
java::java
returns::returns
translated::translated
eqivalent::eqivalent
okat::okat
automat::automat
circuitary::circuitary
link::link
understood::understood
base::base
digits::digits
originally::originally
understands::understands
module::module
central::central
devices::devices
mouse::mouse
keyboard::keyboard
display::display
bus::bus
buses::buses
bridge::bridge
connecting::connecting
sub::sub
stores::stores
relational::relational
connects::connects
modules::modules
world::world
composed::composed
exclusive::exclusive
consisted::consisted
transistor::transistor
systems::systems
fabricated::fabricated
pictures::pictures
peep::peep
motherboard::motherboard
electronic::electronic
mounted::mounted
supply::supply
peripherals::peripherals
floppy::floppy
hard::hard
cdrom::cdrom
fan::fan
bar::bar
fins::fins
heat::heat
sink::sink
heart::heart
cards::cards
zoomed::zoomed
visible::visible
plug::plug
contollers::contollers
pci::pci
package::package
chips::chips
seagate::seagate
medium::medium
recording::recording
highest::highest
lus::lus
lowest::lowest
showed::showed
adders::adders
boundary::boundary
hierarchy::hierarchy
refers::refers
flip::flip
flops::flops
concerns::concerns
manage::manage
compile::compile
isa::isa
broad::broad
fabricating::fabricating
wire::wire
interconnect::interconnect
manifestation::manifestation
permanent::permanent
layer::layer
compilers::compilers
resistances::resistances
posssible::posssible
tricks::tricks
employed::employed
lap::lap
tops::tops
battery::battery
dominating::dominating
extreme::extreme
methods::methods
progress::progress
operate::operate
create::create
functions::functions
arithematic::arithematic
operated::operated
differ::differ
invoke::invoke
helps::helps
providing::providing
languages::languages
deviced::deviced
revolutionary::revolutionary
permits::permits
lost::lost
supposedly::supposedly
reals::reals
mathematics::mathematics
unbounded::unbounded
bounded::bounded
coincide::coincide
approximation::approximation
precison::precison
nice::nice
properties::properties
satisfy::satisfy
mathematical::mathematical
associativity::associativity
property::property
abstracted::abstracted
asembly::asembly
behave::behave
feeling::feeling
limitations::limitations
isolated::isolated
reality::reality
abstract::abstract
acess::acess
slow::slow
memories::memories
flat::flat
hierarchial::hierarchial
practice::practice
focuses::focuses
asymptotic::asymptotic
answered::answered
theoritical::theoritical
designs::designs
harder::harder
treated::treated
engine::engine
proces::proces
opens::opens
customized::customized
customize::customize
completary::completary
desk::desk
washing::washing
tremendous::tremendous
apriory::apriory
presentation::presentation
listening::listening
music::music
phone::phone
calls::calls
cpus::cpus
manufacturer::manufacturer
rectangular::rectangular
tcq::tcq
circular::circular
packaging::packaging
device::device
packages::packages
approximately::approximately
spaced::spaced
contrasting::contrasting
consumes::consumes
transparent::transparent
quartz::quartz
erase::erase
forget::forget
generally::generally
upgrade::upgrade
expose::expose
ultra::ultra
violet::violet
content::content
cared::cared
infrequent::infrequent
chage::chage
topics::topics
cover::cover
feel::feel
properly::properly
dealing::dealing
homepage::homepage
announcements::announcements
exercises::exercises
overview::overview
incidently::incidently
doctor::doctor
kolin::kolin
paul::paul
conducting::conducting
tutorials::tutorials
joining::joining
material::material
teaching::teaching
assistant::assistant
harsh::harsh
dand::dand
announced::announced
submission::submission
guidelines::guidelines
submitting::submitting
spin::spin
download::download
services::services
textbooks::textbooks
book::book
readable::readable
henasy::henasy
paterson::paterson
books::books
vocationally::vocationally
refered::refered
huring::huring
jordan::jordan
haze::haze
interchangeably::interchangeably
rigerously::rigerously
minors::minors
majors::majors
quizs::quizs
asignment::asignment
consist::consist
recollecting::recollecting
mobiles::mobiles
palm::palm
organiser::organiser
net::net
delivered::delivered
insight::insight
subject::subject
political::political
future::future
tommorow::tommorow
century::century
generations::generations
landmark::landmark
development::development
labs::labs
opinion::opinion
recognize::recognize
regular::regular
generation::generation
recognised::recognised
technological::technological
drastic::drastic
sudden::sudden
shape::shape
rise::rise
fundamental::fundamental
shunk::shunk
affordability::affordability
affordable::affordable
organisations::organisations
equipment::equipment
drastically::drastically
magnitude::magnitude
reliability::reliability
reliabily::reliabily
forties::forties
vacuum::vacuum
tube::tube
bulb::bulb
amplify::amplify
switch::switch
voltage::voltage
bulky::bulky
reliable::reliable
powerguzzlers::powerguzzlers
huge::huge
roomful::roomful
punched::punched
paper::paper
tapes::tapes
rotating::rotating
drum::drum
magnetic::magnetic
suddenly::suddenly
rapid::rapid
growth::growth
marked::marked
absolutely::absolutely
abrupt::abrupt
accord::accord
arrival::arrival
transitor::transitor
texas::texas
instruments::instruments
cheaper::cheaper
fail::fail
versions::versions
fortran::fortran
cobol::cobol
integrated::integrated
circuits::circuits
integrate::integrate
integration::integration
characterised::characterised
ssi::ssi
msi::msi
lsi::lsi
tens::tens
increased::increased
tape::tape
batch::batch
submit::submit
days::days
press::press
button::button
prepare::prepare
deck::deck
progam::progam
roll::roll
punching::punching
somedays::somedays
syntactic::syntactic
nil::nil
message::message
tedious::tedious
terminals::terminals
keyboards::keyboards
interact::interact
online::online
mode::mode
evolved::evolved
vlsi::vlsi
appeared::appeared
arise::arise
ulsi::ulsi
seventies::seventies
late::late
tending::tending
hundreds::hundreds
individuals::individuals
owning::owning
posible::posible
shrunk::shrunk
capablities::capablities
emphasis::emphasis
graphical::graphical
microprocessor::microprocessor
era::era
literature::literature
revolution::revolution
artificial::artificial
intelligence::intelligence
human::human
massive::massive
undertaken::undertaken
japan::japan
technical::technical
respect::respect
decreased::decreased
astonishing::astonishing
technologies::technologies
years::years
raises::raises
dram::dram
ram::ram
semiconductor::semiconductor
linear::linear
exponential::exponential
theyears::theyears
year::year
doubles::doubles
quadraple::quadraple
doubling::doubling
include::include
contribution::contribution
decade::decade
sunfour::sunfour
mix::mix
bakel::bakel
programmable::programmable
konrad::konrad
zuse::zuse
harvard::harvard
mark::mark
accomodates::accomodates
caches::caches
traced::traced
eniac::eniac
developers::developers
eckert::eckert
mauchly::mauchly
significantly::significantly
successful::successful
researching::researching
capabilities::capabilities
pin::pin
inventor::inventor
competing::competing
claims::claims
virtues::virtues
john::john
fon::fon
newman::newman
developing::developing
wrote::wrote
neatly::neatly
stated::stated
invented::invented
univac::univac
research::research
repeatable::repeatable
commercially::commercially
ibms::ibms
enters::enters
remained::remained
player::player
industry::industry
original::original
institute::institute
bank::bank
america::america
banking::banking
micr::micr
ink::ink
corrector::corrector
ics::ics
date::date
game::game
spacewar::spacewar
invention::invention
arpanet::arpanet
defence::defence
funding::funding
arpa::arpa
agency::agency
funds::funds
projects::projects
usa::usa
begins::begins
flexible::flexible
ethernet::ethernet
networking::networking
consumer::consumer
span::span
apple::apple
trs::trs
commodore::commodore
spreadsheet::spreadsheet
visicalc::visicalc
wordstar::wordstar
hobby::hobby
companies::companies
reaped::reaped
microsoft::microsoft
largely::largely
msdos::msdos
lisa::lisa
extensive::extensive
gui::gui
graphic::graphic
primarily::primarily
textual::textual
textually::textually
macintosh::macintosh
windows::windows
photographs::photographs
ssec::ssec
compute::compute
moon::moon
apollo::apollo
pumched::pumched
tubes::tubes
relays::relays
switched::switched
floor::floor
feet::feet
printer::printer
dollars::dollars
orders::orders
cdc::cdc
pipelening::pipelening
ideas::ideas
traceable::traceable
illiac::illiac
university::university
illionos::illionos
urbana::urbana
champaign::champaign
mini::mini
cabinet::cabinet
pedestal::pedestal
pdp::pdp
writer::writer
crt::crt
monitor::monitor
terminal::terminal
xerox::xerox
alto::alto
stations::stations
fledged::fledged
pirating::pirating
granted::granted
cray::cray
company::company
clay::clay
cabinets::cabinets
arrange::arrange
cables::cables
panels::panels
cable::cable
cooling::cooling
aragon::aragon
shrinking::shrinking
atomic::atomic
dimensions::dimensions
atoms::atoms
meters::meters
grid::grid
wide::wide
billions::billions
netrworked::netrworked
solve::solve
quantum::quantum
promise::promise
solving::solving
tough::tough
problems::problems
dna::dna
dnas::dnas
grow::grow
programmers::programmers
architecture-2::architecture-2
letter::letter
constructs::constructs
thenelse::thenelse
conjuction::conjuction
pointer::pointer
subtle::subtle
summing::summing
unusual::unusual
correlate::correlate
intialising::intialising
body::body
termination::termination
header::header
prefix::prefix
ging::ging
repair::repair
comment::comment
pseudo::pseudo
tutorial::tutorial
cursor::cursor
dedicated::dedicated
restrain::restrain
mixed::mixed
assemblers::assemblers
usage::usage
core::core
directives::directives
directive::directive
initialize::initialize
leaving::leaving
bother::bother
halves::halves
denoting::denoting
superposes::superposes
portion::portion
initialization::initialization
wanted::wanted
summation::summation
pointers::pointers
modification::modification
pointing::pointing
dereferencing::dereferencing
star::star
lesser::lesser
gain::gain
worried::worried
skipped::skipped
improvent::improvent
maintaining::maintaining
eliminated::eliminated
computes::computes
improvements::improvements
nested::nested
sorting::sorting
algorithm::algorithm
iterates::iterates
smallest::smallest
detailed::detailed
scanning::scanning
iteration::iteration
scan::scan
anchor::anchor
terminate::terminate
initialized::initialized
updated::updated
pointed::pointed
prepares::prepares
limits::limits
staement::staement
encounter::encounter
lie::lie
boolean::boolean
falls::falls
comparisons::comparisons
messy::messy
elegant::elegant
multiway::multiway
exit::exit
obtain::obtain
properiat::properiat
jumping::jumping
subtractions::subtractions
btehe::btehe
jumped::jumped
offered::offered
contiuous::contiuous
continuos::continuos
sparse::sparse
bared::bared
bodies::bodies
paded::paded
blanks::blanks
fourty::fourty
bge::bge
noted::noted
positive::positive
negative::negative
twos::twos
complement::complement
varieties::varieties
varying::varying
located::located
boundaries::boundaries
multiples::multiples
aloop::aloop
automatically::automatically
lsbs::lsbs
segment::segment
segments::segments
region::region
figuring::figuring
transfering::transfering
tight::tight
importance::importance
nitty::nitty
gritty::gritty
writters::writters
transformations::transformations
comppiler::comppiler
inefficient::inefficient
convert::convert
systematic::systematic
tranformations::tranformations
architecture-3::architecture-3
procedure::procedure
construct::construct
summarized::summarized
includes::includes
felt::felt
procedural::procedural
dealt::dealt
thinking::thinking
ease::ease
procedures::procedures
linkage::linkage
tranfer::tranfer
ruturn::ruturn
everytime::everytime
parameter::parameter
caller::caller
consumed::consumed
local::local
decorations::decorations
fresh::fresh
allocation::allocation
procure::procure
accessable::accessable
nesting::nesting
recursion::recursion
indirect::indirect
organising::organising
organize::organize
xchg::xchg
exchange::exchange
enveloped::enveloped
jal::jal
saves::saves
denote::denote
pertaining::pertaining
wiill::wiill
completing::completing
prodedure::prodedure
encapsulated::encapsulated
returning::returning
void::void
callee::callee
designated::designated
convey::convey
returned::returned
resort::resort
restricted::restricted
declaration::declaration
tructures::tructures
continuous::continuous
tranferred::tranferred
lengthed::lengthed
ddress::ddress
endless::endless
precaution::precaution
restored::restored
preserves::preserves
huh::huh
redefined::redefined
min::min
repeating::repeating
replacement::replacement
updates::updates
padded::padded
elaboration::elaboration
recursive::recursive
indirectly::indirectly
exceeds::exceeds
finding::finding
restoring::restoring
looping::looping
repeatedly::repeatedly
entry::entry
popped::popped
pushing::pushing
popping::popping
pictorially::pictorially
conceptually::conceptually
reducing::reducing
decrement::decrement
pop::pop
restore::restore
allocating::allocating
earmark::earmark
pay::pay
availability::availability
freely::freely
finishes::finishes
partial::partial
preserve::preserve
destroy::destroy
fingers::fingers
safe::safe
preserved::preserved
complying::complying
feels::feels
necessity::necessity
callers::callers
stick::stick
disturbed::disturbed
aspected::aspected
calleee::calleee
untempored::untempored
guarantee::guarantee
safely::safely
recover::recover
temporing::temporing
touching::touching
constraint::constraint
expanding::expanding
kernel::kernel
reserved::reserved
shared::shared
frame::frame
shortly::shortly
conveniently::conveniently
assumes::assumes
reported::reported
usages::usages
activation::activation
abou::abou
vary::vary
allocated::allocated
sees::sees
reference::reference
accessible::accessible
everythinh::everythinh
referenced::referenced
difficulty::difficulty
act::act
bracket::bracket
offsets::offsets
arranging::arranging
complications::complications
creation::creation
shrink::shrink
couldn::couldn
aggregate::aggregate
pushes::pushes
pops::pops
isallocated::isallocated
deallocated::deallocated
matched::matched
areas::areas
heap::heap
grows::grows
shrinks::shrinks
random::random
allocations::allocations
malloc::malloc
automatic::automatic
partition::partition
clash::clash
successfully::successfully
hope::hope
allocate::allocate
routines::routines
kep::kep
disposed::disposed
funtion::funtion
funtions::funtions
inputting::inputting
matrix::matrix
sorted::sorted
matrices::matrices
arekept::arekept
stright::stright
declarations::declarations
permit::permit
spliting::spliting
wastage::wastage
utilised::utilised
creates::creates
maintained::maintained
initialised::initialised
scanned::scanned
creating::creating
ascending::ascending
exhausted::exhausted
tail::tail
disposing::disposing
reserve::reserve
inaccessable::inaccessable
recursively::recursively
vaue::vaue
initialising::initialising
fom::fom
quickly::quickly
sample::sample
filling::filling
thethird::thethird
copying::copying
copied::copied
dispose::dispose
comparitively::comparitively
invocation::invocation
labeling::labeling
prime::prime
adress::adress
recovering::recovering
peak::peak
analytically::analytically
experimentally::experimentally
analytical::analytical
empty::empty
decreases::decreases
rewrite::rewrite
restructure::restructure
existence::existence
characteristics::characteristics
cisc::cisc
broadly::broadly
characterize::characterize
predominant::predominant
flavour::flavour
movement::movement
linkages::linkages
curent::curent
sothis::sothis
supplied::supplied
spaces::spaces
configuration::configuration
modes::modes
resulting::resulting
implicit::implicit
borrow::borrow
suffixed::suffixed
stricly::stricly
completely::completely
orthogonal::orthogonal
largest::largest
fair::fair
doan::doan
orthogonality::orthogonality
constrasting::constrasting
increments::increments
succeeds::succeeds
danger::danger
slowing::slowing
ticks::ticks
universality::universality
philosophy::philosophy
restricting::restricting
mixture::mixture
somwhere::somwhere
favor::favor
classified::classified
replaces::replaces
acc::acc
participating::participating
implicitly::implicitly
prosessor::prosessor
classify::classify
registerless::registerless
sun::sun
sparc::sparc
instances::instances
interpretation::interpretation
decreasing::decreasing
auto::auto
decrementing::decrementing
pre::pre
post::post
catered::catered
generalities::generalities
characters::characters
generality::generality
deallocation::deallocation
provisions::provisions
comon::comon
helpful::helpful
generalization::generalization
coined::coined
henassi::henassi
patterson::patterson
existed::existed
approaches::approaches
propagated::propagated
targeting::targeting
achieving::achieving
berkley::berkley
contemporarily::contemporarily
popularly::popularly
historical::historical
roots::roots
hewlett::hewlett
packard::packard
motorola::motorola
dec::dec
alpha::alpha
sixties::sixties
classical::classical
vax::vax
stood::stood
digital::digital
coorporation::coorporation
considerations::considerations
optimal::optimal
substantial::substantial
intels::intels
redesigned::redesigned
baggage::baggage
clumsy::clumsy
helped::helped
pump::pump
investment::investment
beautiful::beautiful
perfected::perfected
desirable::desirable
pays::pays
efforts::efforts
directions::directions
stacks::stacks
salient::salient
numerous::numerous
grew::grew
climax::climax
origin::origin
effort::effort
business::business
rival::rival
mainframes::mainframes
xcxc::xcxc
servers::servers
nineties::nineties
extensively::extensively
machintosh::machintosh
similarities::similarities
parity::parity
worth::worth
mentioning::mentioning
decremented::decremented
facilitates::facilitates
similarity::similarity
filelds::filelds
distinguished::distinguished
choosing::choosing
disallow::disallow
indexed::indexed
versatile::versatile
displacement::displacement
absolute::absolute
subroutine::subroutine
unequal::unequal
chck::chck
shorten::shorten
lwu::lwu
scalable::scalable
scalability::scalability
scaled::scaled
toshiba::toshiba
fujitsu::fujitsu
cypress::cypress
tatung::tatung
extensions::extensions
uncnditional::uncnditional
squeezed::squeezed
implementations::implementations
differs::differs
aprocedure::aprocedure
disjoint::disjoint
overlap::overlap
globals::globals
cwp::cwp
cyclic::cyclic
sliding::sliding
purposes::purposes
fives::fives
successor::successor
discontinued::discontinued
compaq::compaq
illusion::illusion
topic::topic
extends::extends
character::character
strings::strings
theer::theer
deferred::deferred
indirection::indirection
scaling::scaling
autoincrement::autoincrement
autodecrement::autodecrement
polynomials::polynomials
insertion::insertion
datatype::datatype
implies::implies
excluded::excluded
informations::informations
packing::packing
unpacked::unpacked
confined::confined
breaks::breaks
sixeen::sixeen
companion::companion
coprocessor::coprocessor
kilo::kilo
demand::demand
newer::newer
paging::paging
mmx::mmx
multimedia::multimedia
simd::simd
comments::comments
textbook::textbook
illustrates::illustrates
golden::golden
handcuffs::handcuffs
tied::tied
constrained::constrained
clothing::clothing
bag::bag
love::love
pursued::pursued
lacks::lacks
success::success
widely::widely
headache::headache
supports::supports
permitted::permitted
irregular::irregular
extremes::extremes
correspondence::correspondence
grace::grace
subset::subset
eax::eax
ebx::ebx
ecx::ecx
edx::edx
quarters::quarters
ebp::ebp
esp::esp
edi::edi
segmentation::segmentation
addres::addres
shifted::shifted
proceeded::proceeded
modifies::modifies
prefixes::prefixes
modifications::modifications
override::override
semaphore::semaphore
locked::locked
overridden::overridden
strength::strength
strongest::strongest
contd::contd
angles::angles
peformance::peformance
professionally::professionally
architects::architects
interlink::interlink
clocks::clocks
measured::measured
ipc::ipc
confine::confine
relates::relates
conversely::conversely
talks::talks
spending::spending
instantaneous::instantaneous
fastest::fastest
nut::nut
shell::shell
statistically::statistically
occupies::occupies
pitfall::pitfall
indicators::indicators
knock::knock
classes::classes
clas::clas
tempted::tempted
essentilly::essentilly
trades::trades
quantify::quantify
counted::counted
miliion::miliion
spendind::spendind
answers::answers
unknown::unknown
faced::faced
focussed::focussed
compilations::compilations
editings::editings
scientific::scientific
personalized::personalized
evaluating::evaluating
benchmarks::benchmarks
collectively::collectively
bear::bear
benchmark::benchmark
reflect::reflect
overly::overly
misrepresent::misrepresent
usefulness::usefulness
mutually::mutually
agreed::agreed
standardized::standardized
abused::abused
highly::highly
optimized::optimized
consortium::consortium
spec::spec
cooperative::cooperative
industries::industries
joined::joined
hands::hands
standardize::standardize
declaring::declaring
tabulating::tabulating
platform::platform
synthetic::synthetic
abuse::abuse
attack::attack
chances::chances
abuses::abuses
valuable::valuable
benchmak::benchmak
tests::tests
lighter::lighter
colour::colour
orange::orange
enhanced::enhanced
optimization::optimization
rating::rating
bars::bars
gcc::gcc
compiled::compiled
marginal::marginal
stress::stress
spice::spice
lisp::lisp
interpreter::interpreter
dark::dark
dramatic::dramatic
clever::clever
trick::trick
totality::totality
startling::startling
int::int
heavy::heavy
numerical::numerical
numeric::numeric
plays::plays
ksim::ksim
simulates::simulates
gnu::gnu
compress::compress
compression::compression
decompression::decompression
ijpeg::ijpeg
decompresion::decompresion
perl::perl
manipulates::manipulates
vortex::vortex
tomcatv::tomcatv
mesh::mesh
swim::swim
shallow::shallow
water::water
physics::physics
astrophysics::astrophysics
solver::solver
differential::differential
turbulence::turbulence
cube::cube
solves::solves
temperature::temperature
wind::wind
velocity::velocity
pollutant::pollutant
distribution::distribution
chemistry::chemistry
plasma::plasma
revised::revised
prevalent::prevalent
periodically::periodically
pent::pent
ium::ium
adjust::adjust
remind::remind
perpherals::perpherals
law::law
amdahls::amdahls
speedup::speedup
subscript::subscript
fourths::fourths
infinitely::infinitely
unaffected::unaffected
affected::affected
quantifying::quantifying
multiplying::multiplying
dominant::dominant
underlines::underlines
achievement::achievement
enhance::enhance
enhancement::enhancement
yield::yield
synthesize::synthesize
tally::tally
improves::improves
spot::spot
assumtions::assumtions
simplifying::simplifying
assumptions::assumptions
indicator::indicator
mflops::mflops
fallacies::fallacies
reflecting::reflecting
avilable::avilable
enhancements::enhancements
mesures::mesures
influenced::influenced
fabrication::fabrication
prof.anshul::prof.anshul
operators::operators
achieved::achieved
aiming::aiming
multiplier::multiplier
divider::divider
presume::presume
refresh::refresh
comfortable::comfortable
quaintest::quaintest
dep::dep
circumstances::circumstances
radix::radix
complication::complication
ranging::ranging
infinitive::infinitive
correspondent::correspondent
existent::existent
fractions::fractions
representing::representing
mathematically::mathematically
compliment::compliment
representations::representations
ambiguity::ambiguity
unique::unique
inst::inst
unbalanced::unbalanced
easies::easies
flipping::flipping
inverting::inverting
righting::righting
num::num
ber::ber
closed::closed
billion::billion
familiarity::familiarity
pencil::pencil
school::school
permissible::permissible
accompanied::accompanied
invert::invert
triple::triple
unsigned::unsigned
complimenting::complimenting
flipped::flipped
rerepresented::rerepresented
conversion::conversion
signed::signed
pixel::pixel
lbu::lbu
bites::bites
replicates::replicates
simples::simples
cascade::cascade
zooming::zooming
cater::cater
crado::crado
map::map
electronics::electronics
systematically::systematically
drawing::drawing
cardo::cardo
minimal::minimal
incases::incases
oaring::oaring
connection::connection
deeply::deeply
comprehend::comprehend
rivet::rivet
subtractor::subtractor
note::note
inverter::inverter
inverted::inverted
selects::selects
binv::binv
standing::standing
blue::blue
inversion::inversion
vectors::vectors
anding::anding
oring::oring
anasit::anasit
routed::routed
mis::mis
andi::andi
aadd::aadd
addu::addu
reduction::reduction
exceeded::exceeded
coarse::coarse
subtractu::subtractu
addiu::addiu
interpreting::interpreting
included::included
commutate::commutate
accumulate::accumulate
lau::lau
defers::defers
resorting::resorting
equate::equate
cursive::cursive
compa::compa
rison::rison
interval::interval
cond::cond
ition::ition
msb::msb
propagating::propagating
met::met
yields::yields
inclusive::inclusive
individually::individually
conjuncting::conjuncting
indication::indication
excluding::excluding
explore::explore
tapped::tapped
insure::insure
instructive::instructive
mux::mux
exceeding::exceeding
ranges::ranges
wrapper::wrapper
red::red
verified::verified
progressing::progressing
diagonally::diagonally
invalid::invalid
angle::angle
flips::flips
diagonal::diagonal
normalness::normalness
polarity::polarity
propagately::propagately
color::color
corners::corners
corner::corner
reversive::reversive
diseaser::diseaser
mult::mult
slti::slti
halting::halting
printing::printing
cores::cores
discarding::discarding
multu::multu
lhu::lhu
circle::circle
misnomer::misnomer
sltiu::sltiu
meanings::meanings
covert::covert
manipulate::manipulate
extracting::extracting
restriction::restriction
shifting::shifting
loose::loose
rising::rising
interpreted::interpreted
vacated::vacated
replicated::replicated
vacating::vacating
dividing::dividing
quotient::quotient
remainder::remainder
prevented::prevented
sll::sll
wastages::wastages
sllv::sllv
srl::srl
srlv::srlv
wired::wired
wiring::wiring
arbitrary::arbitrary
shifter::shifter
probate::probate
stopped::stopped
transcriptor::transcriptor
g.sathis::g.sathis
defer::defer
interms::interms
vertex::vertex
multipli::multipli
cation::cation
multiplicand::multiplicand
products::products
successively::successively
summit::summit
illustrating::illustrating
anded::anded
propagate::propagate
iterative::iterative
accumulated::accumulated
intention::intention
accumulates::accumulates
accumulation::accumulation
accumulating::accumulating
incrementky::incrementky
successive::successive
compensate::compensate
supplies::supplies
edge::edge
conjunction::conjunction
instruct::instruct
closure::closure
mange::mange
ial::ial
obtains::obtains
consequent::consequent
conceptual::conceptual
pure::pure
vacant::vacant
individuate::individuate
accommodated::accommodated
shuttle::shuttle
truckling::truckling
leads::leads
combining::combining
initializes::initializes
expects::expects
ignores::ignores
magnitudes::magnitudes
identically::identically
detections::detections
oblivious::oblivious
handles::handles
signs::signs
analyses::analyses
retained::retained
subtracted::subtracted
subseq::subseq
uent::uent
involving::involving
summed::summed
facilitate::facilitate
dummy::dummy
unpaired::unpaired
enumerate::enumerate
insteadly::insteadly
booths::booths
devised::devised
comprising::comprising
booth::booth
produced::produced
square::square
pos::pos
itive::itive
utilized::utilized
oaky::oaky
ment::ment
ion::ion
accommodating::accommodating
gprs::gprs
gpr::gpr
translates::translates
wrap::wrap
sorter::sorter
multipliers::multipliers
algorithms::algorithms
manually::manually
refinements::refinements
dropping::dropping
insignificant::insignificant
justified::justified
regarded::regarded
mapping::mapping
dividend::dividend
divisor::divisor
powers::powers
relation::relation
displays::displays
wholes::wholes
invariant::invariant
maintains::maintains
intuitively::intuitively
inductively::inductively
ship::ship
meet::meet
intuition::intuition
learning::learning
inductive::inductive
induction::induction
holes::holes
invariants::invariants
noticing::noticing
trivially::trivially
ensures::ensures
regressively::regressively
operationally::operationally
placing::placing
compressed::compressed
captures::captures
graduality::graduality
stationary::stationary
stuffing::stuffing
restorations::restorations
restoration::restoration
wording::wording
pending::pending
fore::fore
halved::halved
collies::collies
postponing::postponing
adjustment::adjustment
anticipatory::anticipatory
corrected::corrected
resome::resome
corrections::corrections
locally::locally
putted::putted
converted::converted
suggest::suggest
convinced::convinced
closer::closer
observe::observe
governing::governing
gat::gat
proof::proof
handwork::handwork
improvisation::improvisation
remembered::remembered
conches::conches
fits::fits
chapter::chapter
focused::focused
govern::govern
bottle::bottle
neck::neck
cascaded::cascaded
dependents::dependents
realization::realization
waveforms::waveforms
attribute::attribute
driving::driving
loader::loader
capacitance::capacitance
charged::charged
charging::charging
peek::peek
comparable::comparable
fitting::fitting
feeds::feeds
pico::pico
proportionally::proportionally
slowly::slowly
idealize::idealize
approximate::approximate
idealizing::idealizing
effected::effected
strongly::strongly
deepest::deepest
parenthesis::parenthesis
ands::ands
inverters::inverters
compliments::compliments
reorganize::reorganize
rippling::rippling
ripple::ripple
primary::primary
brocket::brocket
theoretically::theoretically
impractical::impractical
thet::thet
unworkable::unworkable
verify::verify
absorbed::absorbed
preprocessing::preprocessing
playing::playing
determination::determination
digest::digest
preprocess::preprocess
propagates::propagates
substitution::substitution
growing::growing
feasible::feasible
incoming::incoming
extern::extern
sums::sums
brevity::brevity
collapsed::collapsed
suppressing::suppressing
retails::retails
separating::separating
purple::purple
considerable::considerable
wider::wider
letting::letting
capital::capital
propagation::propagation
substituted::substituted
linearly::linearly
explaining::explaining
abbreviated::abbreviated
iteratively::iteratively
redo::redo
tree::tree
clause::clause
neighbor::neighbor
cell::cell
leftward::leftward
symmetrical::symmetrical
interchangeable::interchangeable
cells::cells
rearranged::rearranged
pij::pij
sigma::sigma
excitable::excitable
easiest::easiest
finished::finished
doubtful::doubtful
proposal::proposal
propositional::propositional
incase::incase
ieee::ieee
underflow::underflow
rational::rational
distances::distances
astronomy::astronomy
pluto::pluto
mars::mars
electron::electron
grams::grams
deperent::deperent
pairs::pairs
soum::soum
ability::ability
associate::associate
precision::precision
irrational::irrational
infinite::infinite
collecting::collecting
repetition::repetition
colors::colors
truncated::truncated
exponent::exponent
faction::faction
mantissa::mantissa
emerged::emerged
acceptable::acceptable
institution::institution
electrical::electrical
engineers::engineers
publishing::publishing
standards::standards
invisible::invisible
accept::accept
normalized::normalized
adjusted::adjusted
sim::sim
exponents::exponents
bias::bias
excludes::excludes
wehave::wehave
mantissas::mantissas
significance::significance
exceed::exceed
hen::hen
normalization::normalization
lock::lock
significants::significants
alignment::alignment
rounding::rounding
throwing::throwing
round::round
consecutively::consecutively
ration::ration
aligning::aligning
guard::guard
sticky::sticky
externally::externally
distinguishes::distinguishes
dead::dead
nearest::nearest
financial::financial
gains::gains
party::party
denormalized::denormalized
force::force
undefined::undefined
negate::negate
lwc::lwc
swc::swc
hood::hood
mead::mead
conversions::conversions
lossy::lossy
notations::notations
mac::mac
manageable::manageable
constraints::constraints
comp::comp
arity::arity
equ::equ
incremental::incremental
diverse::diverse
intend::intend
story::story
quantents::quantents
connections::connections
resist::resist
quantent::quantent
hole::hole
extract::extract
instantly::instantly
encapsulates::encapsulates
react::react
nand::nand
decoder::decoder
identifies::identifies
counters::counters
clocked::clocked
unclocked::unclocked
bet::bet
ween::ween
falling::falling
coupled::coupled
latch::latch
feedback::feedback
stable::stable
convince::convince
flop::flop
latches::latches
triggered::triggered
trigger::trigger
observed::observed
fur::fur
ther::ther
instability::instability
presents::presents
tolerate::tolerate
registered::registered
unpredictable::unpredictable
manipulation::manipulation
alus::alus
noting::noting
debate::debate
contexts::contexts
responds::responds
external::external
miscellaneous::miscellaneous
restrictions::restrictions
extending::extending
ant::ant
directs::directs
seeks::seeks
beg::beg
transforms::transforms
yesterday::yesterday
rad::rad
forming::forming
port::port
gateways::gateways
aimed::aimed
mech::mech
anism::anism
bidirectional::bidirectional
conversing::conversing
arranged::arranged
arrangements::arrangements
touch::touch
sends::sends
didn::didn
sending::sending
rearranging::rearranging
supplying::supplying
plain::plain
identifying::identifying
rdsd::rdsd
distinguishing::distinguishing
monolithic::monolithic
hardest::hardest
passes::passes
failed::failed
gross::gross
dint::dint
exponentially::exponentially
guides::guides
directories::directories
limitation::limitation
belong::belong
expended::expended
degradability::degradability
continued::continued
enhancing::enhancing
union::union
curser::curser
sight::sight
sheets::sheets
corrective::corrective
erasing::erasing
superimposed::superimposed
conflicts::conflicts
resolved::resolved
suffice::suffice
conflicting::conflicting
secured::secured
simplified::simplified
jmp::jmp
breeze::breeze
reversed::reversed
opi::opi
exploit::exploit
brn::brn
amd::amd
collide::collide
sin::sin
enumerated::enumerated
zeroth::zeroth
mechanical::mechanical
ypu::ypu
correspondents::correspondents
abc::abc
def::def
complimentary::complimentary
literal::literal
derivable::derivable
concisely::concisely
crossing::crossing
dots::dots
distributed::distributed
prominent::prominent
mani::mani
wirings::wirings
interconnecting::interconnecting
additionally::additionally
sceneries::sceneries
meaningless::meaningless
neglect::neglect
cushion::cushion
quiet::quiet
vastly::vastly
proportion::proportion
accompanying::accompanying
dominates::dominates
slowest::slowest
pulling::pulling
soso::soso
pole::pole
resolve::resolve
tabulated::tabulated
ended::ended
observations::observations
overcome::overcome
reobserving::reobserving
consensually::consensually
disparity::disparity
glow::glow
fledge::fledge
denoted::denoted
dictate::dictate
dropped::dropped
invariably::invariably
dominate::dominate
defying::defying
vast::vast
broody::broody
imbalance::imbalance
productive::productive
beneficial::beneficial
quantization::quantization
flew::flew
duration::duration
reuse::reuse
clubbed::clubbed
mul::mul
tiple::tiple
route::route
rerouted::rerouted
dissolved::dissolved
collapse::collapse
interconnection::interconnection
hanging::hanging
belated::belated
retaining::retaining
precious::precious
resting::resting
sit::sit
fee::fee
din::din
neater::neater
attends::attends
losses::losses
overshadow::overshadow
crores::crores
imbalanced::imbalanced
incurred::incurred
glue::glue
shobana::shobana
attempting::attempting
great::great
nt::nt
hie::hie
locality::locality
reused::reused
miss::miss
items::items
fdd::fdd
media::media
arid::arid
backup::backup
hdd::hdd
prize::prize
usi::usi
inch::inch
presence::presence
optical::optical
dvd::dvd
surface::surface
magnetized::magnetized
opaque::opaque
whi::whi
symmetrically::symmetrically
sequentiality::sequentiality
tracks::tracks
powered::powered
fdds::fdds
sram::sram
stably::stably
sensing::sensing
charge::charge
capacitor::capacitor
discharge::discharge
typi::typi
offer::offer
vise::vise
hierarchical::hierarchical
zone::zone
farthest::farthest
closest::closest
organizing::organizing
enjoy::enjoy
optimistic::optimistic
traverse::traverse
references::references
localized::localized
temporal::temporal
spatial::spatial
neighboring::neighboring
simplifications::simplifications
interfaces::interfaces
arrayed::arrayed
configuring::configuring
ratios::ratios
percentages::percentages
capacities::capacities
unsuccessfully::unsuccessfully
misses::misses
terminates::terminates
incur::incur
decrease::decrease
expressible::expressible
hitting::hitting
sor::sor
expresses::expresses
theses::theses
characterized::characterized
probabilities::probabilities
accurate::accurate
analyzing::analyzing
overlooked::overlooked
formulation::formulation
hierarchal::hierarchal
pickup::pickup
hits::hits
localities::localities
quadrilles::quadrilles
grey::grey
maps::maps
gray::gray
tag::tag
fondingly::fondingly
ide::ide
restruction::restruction
tags::tags
inconsistency::inconsistency
selection::selection
graphs::graphs
curves::curves
peculiarly::peculiarly
pronounced::pronounced
inaudible::inaudible
fewer::fewer
replacing::replacing
gainfully::gainfully
banks::banks
chopped::chopped
interleave::interleave
interleaved::interleaved
fanned::fanned
narrow::narrow
narrower::narrower
badly::badly
relay::relay
comparators::comparators
fle::fle
underlying::underlying
effectives::effectives
nanosecond::nanosecond
ball::ball
disc::disc
med::med
millisecond::millisecond
milliseconds::milliseconds
reside::reside
modulo::modulo
compete::compete
pool::pool
anytime::anytime
redrawn::redrawn
diagrams::diagrams
gigabytes::gigabytes
laid::laid
reap::reap
neighborhood::neighborhood
absent::absent
quadrants::quadrants
righ::righ
replication::replication
overheads::overheads
visualize::visualize
formulated::formulated
lookup::lookup
punishment::punishment
ultimate::ultimate
subsumed::subsumed
dependant::dependant
interleaving::interleaving
transactions::transactions
interlinked::interlinked
organizes::organizes
gave::gave
randomly::randomly
abort::abort
concurrent::concurrent
altered::altered
stalled::stalled
sequentialized::sequentialized
synchronize::synchronize
taught::taught
unfilled::unfilled
robin::robin
anticipate::anticipate
prefetch::prefetch
prefetching::prefetching
hopping::hopping
wasteful::wasteful
judgment::judgment
lru::lru
strategies::strategies
fifo::fifo
arbitrarily::arbitrarily
heuristics::heuristics
profound::profound
judicially::judicially
dirty::dirty
mein::mein
buffers::buffers
cleared::cleared
checks::checks
wri::wri
attempted::attempted
useless::useless
print::print
bean::bean
forced::forced
terminating::terminating
dirtied::dirtied
toss::toss
unified::unified
specializing::specializing
behavior::behavior
behaviors::behaviors
sur::sur
surplus::surplus
on-chip::on-chip
off-chip::off-chip
spectrum::spectrum
serves::serves
grossly::grossly
statistical::statistical
demo::demo
examined::examined
board::board
demonstration::demonstration
sits::sits
fighting::fighting
scenario::scenario
scrolling::scrolling
loosing::loosing
bur::bur
vacancy::vacancy
compulsory::compulsory
compel::compel
compulsorily::compulsorily
categorized::categorized
pinpoint::pinpoint
attributed::attributed
categorize::categorize
parametes::parametes
directory::directory
exaggerated::exaggerated
nanoseconds::nanoseconds
gaining::gaining
drops::drops
receiving::receiving
requests::requests
solo::solo
inclusion::inclusion
serving::serving
sponsored::sponsored
affecting::affecting
countered::countered
educational::educational
fig::fig
hierar::hierar-
th::th-
cough::cough
throat_clearing::throat_clearing
aware::aware
magic::magic
pre::pre-
unaware::unaware
overlays::overlays
evicting::evicting
automate::automate
typing::typing
processes::processes
protection::protection
an::an-
reposition::reposition
relocate::relocate
in::in-
relocation::relocation
re-locatable::re-locatable
on::on-
datum::datum
sounds::sounds
coughing::coughing
bu::bu-
smack::smack
it::it-
bought::bought
fifty-six::fifty-six
amounts::amounts
the::the-
chance::chance
pages::pages
constitute::constitute
da::da-
entity::entity
chopping::chopping
organizationally::organizationally
relying::relying
volatile::volatile
we::we-
overtime::overtime
thirty-two::thirty-two
gigabyte::gigabyte
and::and-
megabytes::megabytes
opening::opening
so::so-
needful::needful
you::you-
mille::mille
switches::switches
tolerated::tolerated
ei::ei-
tolerable::tolerable
tremendously::tremendously
hair::hair
faintly::faintly
sixty-four::sixty-four
when::when-
trend::trend
co::co-
suits::suits
realistic::realistic
wh::wh-
tagging::tagging
restrict::restrict
workable::workable
shuffle::shuffle
su::su-
shuffled::shuffled
sophisticate::sophisticate
housekeeping::housekeeping
residence::residence
whe::whe-
suspended::suspended
elapse::elapse
ruled::ruled
sparseness::sparseness
one::one-
reallocated::reallocated
accomod::accomod-
sparsesity::sparsesity
hashing::hashing
tabl::tabl-
chunks::chunks
page::page-
locate::locate
tenth::tenth
poses::poses
adjustable::adjustable
wi::wi-
translating::translating
lookaside::lookaside
sector::sector
distribute::distribute
me::me-
multilevel::multilevel
eased::eased
diff::diff-
referral::referral
dedicate::dedicate
looking::looking-
is::is-
structuring::structuring
fragmented::fragmented
spreading::spreading
qualified::qualified
usel::usel-
edition::edition
glance::glance
concatenation::concatenation
as::as-
pretty::pretty
amortize::amortize
paged::paged
to::to-
bad::bad
incomplete::incomplete
hopeful::hopeful
succeed::succeed
failure::failure
sniffing::sniffing
blank::blank
evicted::evicted
concatenate::concatenate
reinterpreted::reinterpreted
shortcut::shortcut
deliver::deliver
clutter::clutter
-ong::-ong
ea::ea-
um-hm::um-hm
leaves::leaves
leaf::leaf
tha::tha-
whi::whi-
tho::tho-
non-existent::non-existent
ye::ye-
str::str-
what::what-
merit::merit
aliasing::aliasing
processed::processed
for::for-
confusion::confusion
ho::ho-
clearing::clearing
genuinely::genuinely
drawback::drawback
copies::copies
virtually::virtually
covering::covering
non-changing::non-changing
mis-normal::mis-normal
inexpensive::inexpensive
helping::helping
unauthorized::unauthorized
ins::ins-
inherently::inherently
not::not-
which::which-
supervisor::supervisor
permissions::permissions
initializing::initializing
that::that-
ba::ba-
security::security
multilayered::multilayered
exits::exits
played::played
subsystem::subsystem
extremities::extremities
transformed::transformed
zeroes::zeroes
clicking::clicking
contributed::contributed
neglected::neglected
innovations::innovations
twenty-seven::twenty-seven
twenty-two::twenty-two
majority::majority
process::process-
modeling::modeling
crunching::crunching
or::or-
oriented::oriented
ramped::ramped
megabyte::megabyte
uh-huh::uh-huh
environments::environments
reservation::reservation
railways::railways
airlines::airlines
responding::responding
at::at-
bottleneck::bottleneck
printed::printed
server::server
cluster::cluster
acting::acting
homes::homes
receive::receive
sustain::sustain
discrepancy::discrepancy
twentieth::twentieth
dif::dif-
caution::caution
conceive::conceive
elaborating::elaborating
-like::-like
in-between::in-between
interconnected::interconnected
packaged::packaged
converts::converts
yo::yo-
roles::roles
partner::partner
communicate::communicate
operator::operator
sensor::sensor
motor::motor
classification::classification
ca::ca-
chunk::chunk
serial::serial
ago::ago
paint::paint
exposed::exposed
reader::reader
punch::punch
strip::strip
typewriter::typewriter
sheet::sheet
eve::eve-
outputting::outputting
library::library
li::li-
card::card
editing::editing
painful::painful
patch::patch
surprising::surprising
was::was-
serially::serially
beings::beings
typist::typist
voice::voice
pictorial::pictorial
nicer::nicer
recognition::recognition
spoken::spoken
speech::speech
concentrating::concentrating
digitized::digitized
samples::samples
sampled::sampled
fort::fort-
scanner::scanner
image::image
finely::finely
finer::finer
shaper::shaper
printers::printers
laser::laser
demanding::demanding
pixels::pixels
twenty-four::twenty-four
re::re-
settings::settings
persistent::persistent
refreshed::refreshed
twenty-five::twenty-five
modems::modems
fax::fax
modem::modem
telephone::telephone
lan::lan
adapters::adapters
wireless::wireless
lans::lans
typi::typi-
bauds::bauds
baud::baud
regions::regions
much::much-
migrated::migrated
archival::archival
disks::disks
flash::flash
pen::pen
plugged::plugged
non-volatile::non-volatile
schematic::schematic
platters::platters
platter::platter
coating::coating
magnetically::magnetically
sensitive::sensitive
magnetization::magnetization
heads::heads
arm::arm
pivoted::pivoted
rotates::rotates
rotation::rotation
head::head
center::center
circumference::circumference
rotary::rotary
rotate::rotate
contact::contact
radically::radically
surfaces::surfaces
tip::tip
outwards::outwards
inwards::inwards
rotational::rotational
they::they-
thirty-six::thirty-six
fifty-four::fifty-four
seventy-two::seventy-two
fif::fif-
revolutions::revolutions
sea::sea
inferences::inferences
encountering::encountering
seventy-three::seventy-three
seek::seek
sustained::sustained
rustling::rustling
figured::figured
thirty-seven::thirty-seven
seeking::seeking
cylinder::cylinder
coinciding::coinciding
of::of-
cylinders::cylinders
sectors::sectors
western::western
internet::internet
site::site
samsung::samsung
thin::thin
monitors::monitors
viewing::viewing
scenes::scenes
scanners::scanners
forty-eight::forty-eight
document::document
feeder::feeder
bunch::bunch
papers::papers
photocopy::photocopy
feeded::feeded
inkjet::inkjet
mech::mech-
cartridges::cartridges
cartridge::cartridge
breakthrough::breakthrough
ve::ve-
piezoelectric::piezoelectric
thermal::thermal
chamber::chamber
plate::plate
piezo::piezo-
vibrate::vibrate
vibration::vibration
droplet::droplet
receives::receives
hitted::hitted
expansion::expansion
drop::drop
con::con-
decades::decades
counts::counts
tired::tired
interfaced::interfaced
trans::trans-
transforming::transforming
subsystems::subsystems
protocol::protocol
synchronous::synchronous
asynchronous::asynchronous
synchronized::synchronized
protocols::protocols
establish::establish
alimentation::alimentation
com::com-
communicating::communicating
conversation::conversation
conversations::conversations
offers::offers
parties::parties
affair::affair
links::links
plug-in::plug-in
now::now-
blurred::blurred
mixes::mixes
proprietary::proprietary
standardization::standardization
poss::poss-
hung::hung
traffic::traffic
lengthy::lengthy
ph::ph-
manufactured::manufactured
compatible::compatible
interoperability::interoperability
backplane::backplane
every::every-
backpanel::backpanel
back::back-
connector::connector
backside::backside
dis::dis-
connectors::connectors
boards::boards
no::no-
wo::wo-
design::design-
seperate::seperate
hook::hook
meeting::meeting
adapter::adapter
adaptation::adaptation
are::are-
then::then-
speak::speak
how::how-
streams::streams
inter::inter-
lanes::lanes
road::road
merges::merges
highway::highway
managed::managed
twent::twent-
microsecond::microsecond
someway::someway
packet::packet
collect::collect
bust::bust
send::send-
shade::shade
absorb::absorb
record::record-
acknowledgement::acknowledgement
originated::originated
whosoever::whosoever
acknowledge::acknowledge
lowered::lowered
confirmation::confirmation
arrow::arrow
thi::thi-
tri-state::tri-state
impedance::impedance
nei::nei-
isolates::isolates
ground::ground
floats::floats
lowering::lowering
raising::raising
monitoring::monitoring
handshaking::handshaking
homework::homework
confirmed::confirmed
recognized::recognized
nomenclature::nomenclature
pulse::pulse
triggers::triggers
texture::texture
will::will-
aloud::aloud
requesting::requesting
asserts::asserts
observes::observes
watching::watching
release::release
reassert::reassert
wave::wave
megahertz::megahertz
mu::mu-
bandwidth::bandwidth
chaining::chaining
pertain::pertain
acknowledging::acknowledging
twenty-eight::twenty-eight
initiation::initiation
completion::completion
unutilized::unutilized
splits::splits
le::le-
inter-leaving::inter-leaving
idle::idle
forty-five::forty-five
seventy-one::seventy-one
fifty-seven::fifty-seven
would::would-
bla::bla-
arbitration::arbitration
exploited::exploited
fo::fo-
interlocked::interlocked
chained::chained
unoccupied::unoccupied
recollection::recollection
band::band
word::word-
released::released
beginnings::beginnings
requested::requested
master::master
slave::slave
initiates::initiates
masters::masters
slaves::slaves
mul::mul-
coordinate::coordinate
transact::transact
discipline::discipline
releasing::releasing
priorities::priorities
priority::priority
urgency::urgency
urgent::urgent
fairness::fairness
es::es-
mechanisms::mechanisms
daisy::daisy
centralized::centralized
collision::collision
resolving::resolving
issued::issued
potential::potential
arbiter::arbiter
can::can-
grant::grant
blocked::blocked
explanation::explanation
acquiring::acquiring
notices::notices
activates::activates
low::low-
but::but-
persisting::persisting
served::served
disaster::disaster
hijack::hijack
rule::rule
with::with-
avoided::avoided
tran::tran-
this::this-
deactivates::deactivates
grants::grants
carr::carr-
slow::slow-
st::st-
shuttling::shuttling
releases::releases
disallowed::disallowed
reacquire::reacquire
concentrated::concentrated
democratic::democratic
negotiate::negotiate
identities::identities
honest::honest
collided::collided
microseconds::microseconds
starved::starved
starvation::starvation
restrict::restrict-
ty::ty-
oversimplified::oversimplified
hubs::hubs
hub::hub
-ser::-ser
north::north
south::south
frequencies::frequencies
thirty-three::thirty-three
audio::audio
derivative::derivative
develops::develops
freezing::freezing
contradictory::contradictory
compatible::compatible-
frozen::frozen
standardizing::standardizing
arresting::arresting
pressure::pressure
revising::revising
refining::refining
specs::specs
formal::formal
professional::professional
adapted::adapted
other::other-
impedances::impedances
sp::sp-
revisions::revisions
accelerated::accelerated
sixty-six::sixty-six
quadruple::quadruple
two::two-
volt::volt
signaling::signaling
ob::ob-
de::de-
fiber::fiber
channel::channel
infer::infer-
per::per-
quantitatively::quantitatively
progresses::progresses
pace::pace
participates::participates
interacts::interacts
printf::printf
scanf::scanf
formatting::formatting
raw::raw
ascii::ascii
converting::converting
driver::driver
drivers::drivers
family::family
routine::routine
pro::pro-
drudgery::drudgery
mou::mou-
tracking::tracking
sensed::sensed
gigahertz::gigahertz
volume::volume
packets::packets
megabits::megabits
gigabits::gigabits
going::going-
steadily::steadily
displayed::displayed
eye::eye
reflected::reflected
al::al-
sep::sep-
chan::chan-
workstations::workstations
be::be-
pr::pr-
keys::keys
depressed::depressed
commands::commands
sect::sect
train::train
has::has-
op-codes::op-codes
take::take-
frequent::frequent
polling::polling
sampling::sampling
intimates::intimates
readiness::readiness
interrupt::interrupt-
polled::polled
poll::poll
breathing::breathing
consume::consume-
settling::settling
divid::divid-
divides::divides
undesi::undesi-
inform::inform
overthrow::overthrow
handler::handler
score::score
desi::desi-
deposit::deposit
setup::setup
tra::tra-
interrupted::interrupted
end::end-
entrusted::entrusted
augmentation::augmentation
outsource::outsource
quit::quit-
-table::-table
transfer::transfer-
chose::chose
progression::progression
wha::wha-
caused::caused
initiating::initiating
contiguous::contiguous
consistency::consistency
multiprocessor::multiprocessor
coherence::coherence
sync::sync
undesirable::undesirable
crosses::crosses
sturdy::sturdy
estimate::estimate
interaction::interaction
latenc::latenc-
pipes::pipes
functionally::functionally
attain::attain
travels::travels
ul::ul-
quantifies::quantifies
deposited::deposited
comes::comes-
flexibilities::flexibilities
-fully::-fully
forty-three::forty-three
sustaining::sustaining
pumping::pumping
lets::lets-
saturate::saturate
sixty-two::sixty-two
rounded::rounded
parameter::parameter-
figure::figure-
complicate::complicate-
commonsense::commonsense
multi-function::multi-function
faxes::faxes
receiver::receiver
sender::sender
photocopier::photocopier
assumption::assumption-
ha::ha-
outgoing::outgoing
satisfying::satisfying
spare::spare
photocopying::photocopying
message::message-
sim::sim-
hooks::hooks
assembled::assembled
hooked::hooked
print::print-
nt::nt-
white::white
scan::scan-
compresses::compresses
received::received
cum::cum
computational::computational
bus::bus-
inches::inches
adequate::adequate
nonvolatile::nonvolatile
ninety-nine::ninety-nine
transmission::transmission
recession::recession
twenty-six::twenty-six
dialed::dialed
forty-six::forty-six
responses::responses
photocopy::photocopy-
faxed::faxed
churn::churn
faxing::faxing
-cept::-cept
prints::prints
minor::minor
stroll::stroll
lack::lack
mem::mem-
steady::steady
accumulations::accumulations
congestions::congestions
starving::starving
converging::converging
analyze::analyze-
queuing::queuing
stimulate::stimulate
buffered::buffered
simultaneous::simultaneous
halfway::halfway
buffering::buffering
also::also-
do::do-
scsi::scsi
interleaved::interleaved-
let::let-
spent::spent-
contiguously::contiguously
concluding::concluding
remarks::remarks
review::review
spelt::spelt
constructed::constructed
monetary::monetary
-as::-as
projected::projected
instructs::instructs
instruction::instruction-
tr::tr-
dissipated::dissipated
centimeters::centimeters
from::from-
micro-architecture::micro-architecture
under::under-
non-restoring::non-restoring
non-restor::non-restor-
differen::differen-
control::control-
look::look-
de-normalize::de-normalize
indeterminate::indeterminate
executions::executions
improve::improve-
if::if-
pa::pa-
bl::bl-
dense::dense
inexpens::inexpens-
associative::associative-
adv::adv-
form::form-
ap::ap-
purchasing::purchasing
adapt::adapt
sold::sold
desktops::desktops
ov::ov-
cons::cons-
saturating::saturating
curve::curve
num::num-
fix::fix-
co-design::co-design
laptops::laptops
micro-controller::micro-controller
ge::ge-
encourage::encourage
villages::villages
portable::portable
delicate::delicate
cheap::cheap
car::car
bicycle::bicycle
solar::solar
hilltop::hilltop
linux::linux
english::english
bangalore::bangalore
simputer::simputer
team::team
startup::startup
strong::strong
pad::pad
icons::icons
illiterate::illiterate
track::track-
redwood::redwood
scientist::scientist
biological::biological
phenomenon::phenomenon
tall::tall
joint::joint
trees::trees
moisture::moisture
atmosphere::atmosphere
fog::fog
sensors::sensors
miniature::miniature
laptop::laptop
collected::collected
climb::climb
safety::safety
automobiles::automobiles
transporting::transporting
french::french
fast::fast-
kilometer::kilometer
section::section
fails::fails
listen::listen
news::news
traditional::traditional
newspaper::newspaper
web::web
published::published
regional::regional
nontraditional::nontraditional
nonlocal::nonlocal
preserving::preserving
art::art
diagnosis::diagnosis
underbelly::underbelly
vehicle::vehicle
increasingly::increasingly
terrorism::terrorism
dangerous::dangerous
premise::premise
explode::explode
mirror::mirror
illumination::illumination
drill::drill
exhaustive::exhaustive
camera::camera
base::base-
bright::bright
emit::emit
lights::lights
illuminate::illuminate
pit::pit
rides::rides
illuminated::illuminated
cabling::cabling
stitch::stitch
strips::strips
stitching::stitching
videos::videos
cars::cars
gate::gate-
car::car-
authorized::authorized
sticker::sticker
windscreen::windscreen
se::se-
identification::identification
patience::patience
installed::installed
prom::prom
erasable::erasable
communicates::communicates
infrared::infrared
infrared::infrared-
smart::smart
pocket::pocket
plastic::plastic
credit::credit
cash::cash
electron::electron-
encrypted::encrypted
ex::ex-
in-house::in-house
lives::lives
challenging::challenging
excitement::excitement
