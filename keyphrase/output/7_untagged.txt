computer networks prof sujoy ghosh dept of computer science and engineering  iit kharagpur lecture # 07 switches-1  reference time  00  45  good day so today and in the next lecture we will be talking about switches switches are the  refer slide time  01  01  01  03  most important part of a computer networks and we will look into some aspects of the different types of switches in this lecture we will look at the kind of switches that are used in telecom networks there is a special version of these  which we will cover in a later lecture and then in the next lecture we will be talking about packet switches  which are closer to the heart of data networks first thing is why do we need switches ?  slide refer time  01  38 ? 02  15  the problem is that each user can potentially call any other user  as we have seen in telephone networks and we can not have direct lines we can not have an order n2 kind of lines so every user is connected to essentially a switch in the switching office switches establish temporary circuits ; that means they establish a temporary connection between the caller and the callee at the switching station switching systems come in two parts  one is the switch and the other is the switch controller  refer slide time 02  16 ? 03  41  as you remember from our discussion about telecom networks  people want to talk to other subscribers  who are in maybe a different location  under a different switching station the switching stations have to connect among themselves for making this connection through the signaling that we talked about  there is a control plane over here control planes are some kind of computers  which are capable of sending some kind of signals or instructions to the individual switches in the control plane  we set up the path and there is a corresponding signal from the controller to the corresponding switch for setting up a particular circuit or a particular connection  so that an end-to-end connection from one user to the other is set up this control plane is sort of an overlay network over the actual switch  and once the connection is set up naturally the call and all the signals  etc  flow in this plane  refer slide time 03  42 ? 04  10  there is a network device called a router and there is routing  which is very close to switching the only thing is that in routing  we decide about long-range paths if you remember from our discussion about the seven-layer osi protocols  you remember that there was a network layer and the router is a device in the network layer whose job it is to find out that in order to reach the ultimate destination station  what is the local link that i have to take here ? for a switch it is slightly simpler ; it is strictly a local decision but for the router there is a global implication ? what is the local link on the output side that i must take for a signal coming from input line to a particular destination  so that i will finally go through all these connections through various other routers to reach my destination  whereas for a switch the job is a little simpler in the sense that when the signal is coming from one incoming link and is going to go out to a particular outgoing link  which is known at the switch  how to set up the connection ? actually  a router is a switch with some added functionality  refer slide time 05  34 ? 06  22  many connections will need paths through more than one switch  so that is when we required routing static routing uses the same approach all the time ; that means same destination is routed through the same path all the time a dynamic routing may allow changes in routing depending on traffic ; that means some part of the network may be congested  so it might want to avoid that path and go to the same destination through some other path as we have seen at least in telephone networks  because of the way we distribute the telephone numbers to subscribers  it is easy to route you can look at those incoming digits and just decide on the route switching is the local connectivity between input and output lines now we will discuss some basic concepts and terminology  refer slide time  06  31 07  21  one is the transfer medium ? transfer medium in a switch  could be buses  electronic buses  through which you can send a stream of cells queues are memory locations that temporarily store cells switches often require some queues ; the queues may be on the input side or the queues may be on the output side ; queues may be in various places so we will look at all these different cases but these are temporary memory locations  where we temporarily store some cells till we know what to do with it or forward it to its destination a switching element is the building block for the switch a switch may be either on or off and if it is on that connection is there or if it is off the connection is not there sometimes the switch is like this ? at a particular point a switch may connect either to one point or to another point a switch is just a simple element and in a big switch  we have a lot of these switching elements these switching elements form the so-called  refer slide time  07  58 08  09  switching fabric ; that means the shape of the switch  like  how the switches are organized so that all the incoming calls can be handled there is a term called blocking and non-blocking  refer slide time  08  18  08  35  blocking means a network is unable to connect stations because all paths are in use a blocking network allows this this is used in voice systems and the main reason is that we have short-duration calls the point is that there are so many subscribers  may be thousands of subscribers ; if we want to provide the switching capability to the maximum possible extent  that means  if everybody is busy talking to somebody or the other  that means  if every subscriber is using this  then if we try to provision our equipment based on this assumption that everybody may be talking to everybody at the same time  then the switch will become very big and very expensive so what the telephone people have done is that they have made an extensive study of how many people are likely to talk during a particular time of the day  especially bell labs in usa they were the pioneers and a giant telephone company  which was the largest at one point of time  and later was broken up etc during the early part of may be 1940s and 1950s  they made a very extensive study about people ? s calling habits they found out that during the busy time or the peak hour when all the officers are open  how many people out of a subscriber base are likely to call that is one kind of statistic they collected ; and the other kind of statistic they collected is that if one person starts talking what is the distribution of the call duration ; for how long is this particular subscriber likely to hold on to that line they found the statistical distribution ; and based on that they decided that if i provision this much in terms of our switching elements and switching capacity  then almost all the time everybody will be able to get the service  but exceptions may occur this is based on some statistical study at some particular point of time it may so happen that the number of subscribers who wanted to speak is just larger than the overall switching capacity that you have in that case some of the calls will be blocked i am just talking in terms of switching capacity this kind of blocking may occur elsewhere in the network also we provision based on some statistical averages but at exceptional times  for short durations of time  we may have to block some of the calls because we do not have the capacity to handle so many calls at the same time so that is a situation where it is blocking and what people try to do is that they try to calculate the blocking probability  which may be 1 %  2 % or 5 % ? 5 % is quite high  as nowadays people do not even like that that is the blocking probability that we wish to achieve ? we are provisioning this much for these many subscribers  refer slide time  12  08 ? 12  38  non-blocking permits all stations to connect in pairs at once this may be used for some data connection where blocking is not allowed or blocking is not acceptable under any circumstances if you want to make it fully non-blocking  that solution would be more expensive than if you allow a limited amount of blocking of course a high degree of blocking will not be acceptable to the users at all  refer slide time  12  39 ? 13  21  there are various kinds of switches i am trying to present here a taxonomy of different types of switches ? not that all actual switches neatly fit into the boxes some of them take some portions of this and there is some kind of a hybrid or mixture but this is one way in which the different types of switches can be classified we have space division switching and time division switching like in multiplexing we have a time division multiplexing and frequency division multiplexing  here we have space division switching and time division switching time division switching is very close to time division multiplexing as we will see now space division switches  refer slide time  13  37 14  22  maybe single stage or multistage in single stage we have a switching matrix ; then we have a knockout network  shuffle exchange networks in multistage  it may be a single path or multipath like delta networks or benes networks  sorting networks  etc in time division switches we have shared memory and shared medium shared memory could be a central memory or shared medium could be a bus or a ring etc ; so these are different types of switches we will not have the time to look at all these in detail so we will just look at some of the very common types of switches that are used  refer slide time  14  23 ? 15  25  let us first talk about space division switching it was developed mainly for analog environment why do we call it is space division ? because the different calls go through separate physical paths that is why they are called space division switches  unlike time division  where different calls may be going through the same physical path at different time slots ; we will come to that when we discuss time division switching but in space division switching  different calls go through separate physical paths the simplest of space division switches is the cross bar switch the number of cross points grows as the square of number of stations ; loss of cross point prevents connection ; if a particular cross point becomes bad it is an inefficient use of cross points ; all stations are connected but only a few cross points are actually in use ; and this is fully non-blocking let us first have a quick look at a cross bar switch a cross bar switch is very simple  refer slide time 15  32 16  36  what do we have in a switch ? in a switch you have n input lines coming on from one side and n output lines ? you have to connect some of the line let us say i want to connect this particular line to let us say this particular output line  i.e  the fourth input line to be connected to the fifth output line i want this particular switch to be on and the other switch off if this particular switch is on  there is a connection between this line and this line so i have a direct physical path between the fourth input line and the fifth output line and each of these crosses that you see is a single switching element and as you can see  since there are n lines i.e  if there are n lines on the input side and n lines on the output side  we have n2 switching elements  which actually is quite a lot  refer slide time  16  37 16  38  so if you go back  refer slide time  16  38  17  49  the number of cross points grows as the square of the number of stations if a particular switch  which is at the crossing point between the fourth input line and the fifth output line  if that particular switching element  somehow has gone bad  then four and five can not talk to each other ever that is again another drawback of this kind of switches of course it is an inefficient use of cross point ? at every cross point we have a switch and all stations are connected but only a few cross points are actually in use at most n/2 cross points can actually be in use  whereas we are using n2 cross points  which is a really a poor utilization of the switches one good thing about this kind of switch is that it is totally non-blocking ; that means  all pairs of subscribers can talk to each other at the same time  refer slide time  17  50 ? 18  52  the cross bar switch is the simplest form of n input lines and n output lines that feed to n2electronic switches if all lines are full duplex  that means all lines allow communication in both the directions  then we require only half the number of switches we possibly do not require the diagonal switches  the switches which are in the diagonal i do not want to talk to myself ; the other thing is that only either the top half or the bottom half of the switches ? top half means top half of the principal diagonal or the bottom half of the principal diagonal ? only those switches are required  in general n2/ 2 switches would be required if you have full duplex lines the other problem about the cross bar switches is that apart from the number of switches  the number of i/o pins is also a problem if you want to a make let us say 1000/1000 line switches for 1000 subscribers  you may have 1000 incoming lines  1000 outgoing lines  but how do you put all these 2000 pins on the chip ? it also becomes a problem ? people have gone to more sophisticated design for switches they are classified in various ways  through input queuing  output queuing  refer slide time  19  32 ? 19  34  or central queuing we will look at these one by one later on  refer slide time  19  35 20  05  let us look at another kind of a space division switches known as knockout switches  which were introduced in 1987 by at&t bell labs essentially we require using output queuing over here we will look at output queuing and the issues in detail later on if the switch is trying to pump in more number of bits or more number of bits to a particular output line than that an output line can handle  you have to either drop them or you have to store them somewhere  maybe in a queue  and that queuing is associated with the output ports that is what we mean by output queuing so n inlets  refer slide time  20  26 ? 20  44  and n outlets operate at the same speed transfer medium consists of n broadcast buses  one for each inlet n bus interface units  one for each outlet  takes input from all the broadcast buses each delivers an output to its own outlet let us take a look at the figure  refer slide time  20  47 21  52  so we have the n input lines on one side a call may come from anywhere  let us say subscriber 1 is trying to call to subscriber 2 so what subscriber 1 will do is that it will broadcast the signal over this bus there are n buses over here and all these n bus interface units are connected to all the buses  each of the bus interface units ? 1  2  3 up to n ? will receive that signal from n but this bus interface unit 2 knows that this is supposed be meant for me so he will allow this signal to transfer to the output line  whereas others will simply ignore it this is again another fairly simple scheme we have  of course  reduced the number of switching elements that are required  refer slide time  21  53  22  01  it is not using a bus  and you will not get a very fast switching  but this works fairly well if you want to go beyond this  that means  you do not want so many lines  etc  as i said and even if you have 1000 subscribers you want to service from the same switch  even in knockout switch you have 1000 buses inside  which is not technically feasible so we go to the other kind of switches which i showed earlier ; namely  multistage switches and multistage switches have one of the most commonly used switching architecture even today  so far as space division is concerned in multistage switches we may actually provision less number of switching elements than are strictly required for the highest use  as we want to reduce the cost of the switch all the input lines can go to all the output lines and it is broken up into several stages as we will see  refer slide time  23  19 ? 24  04  the advantage of a multistage switch is that it has reduced number of cross points  more than one path through the network ; this increases reliability as you remember  in our simple cross bar switch  if one particular switch is bad that particular pair of users can not talk to each other ; that is not really desirable since there are more than one path through the network  even if one particular switching element becomes bad they are still able to communicate the control becomes more complex and it may be blocking so  as i said  in most of the cases it will not block  but in some cases  it may be blocking  refer slide time  24  05 ? 24  36  they have a large number of inlets and outlets which are  sort of  grouped into small groups so that these problems with pins and input lines are not there often they have identical switching building blocks  forming a fabric so there are many switching building blocks consisting of some number of switches and such modules are used all over the switch as you can guess  in a multistage switch  we will have different stages the input will come from one side and will go to one stage  then may be another stage  and a third stage  and then may be out so there are multiple stages and each stage is broken up into small modules these modules may or may not be identical  so it is sort of cheaper to manufacture and it also handles all the pins  etc  in this fashion so it often has  refer slide time  25  11 25  15  identical switching building blocks forming a fabric  and a fabric has multiple stages  refer slide time  25  16 ? 26  16  this is just one example of a small multistage interconnection network so as you see  this is one stage  this is another stage and this is the third stage there are three stages over here each stage is broken up into small blocks ; so this is an 8 ? 8 sort of switch if you remember to have 8 ? 8 switches in our cross bar switch  we require 64  or even if we take half of it  maybe 30 or above 30 switches here each is a 2 ? 2 switch ; so actually you can handle it with only one switch the number of switches has come down drastically but there are problems  as we will see  that it may be blocking kind of system  refer slide time  26  17-28  01  so how do you know that something  which is coming over from an input line  would reach the particular output line ? suppose the output lines are numbered and since there are eight output lines  we can code them using these three bits  from 000 to 111 in a binary fashion this particular line  which really is the input line number 011  wants to have a call to the output line number 101 if you know to which output line you want to go to  1  0  and 1 really become control signals for these switches on the way so 1 means go to the lower output line ; 0 means go to the upper output line and you can see that those that are starting with 0 come at the top  those that are starting with 1 come over here and that is the same binary number order that we are maintaining the switch is simply a rule that if it looks at bit  if it is 0 it connects to the upper line and if it is 1 it is connected to the lower line so 1 will connect to the lower line  0 it will connect it to the upper line 1 over in this stage will be connected to the lower line and we will reach 101 this is almost self routing through the switching fabric and because of this  routing is easy  refer slide time  28  02 ? 28  34  delta network is one kind of a multistage interconnection networks it is constructed of identical k ? k switching elements it has regular interconnection patterns suitable for a large-scale chip integration it is self routing as we have shown  requiring log_k n number of digits and a log-k n number of stages each  with n/k switching elements so  refer slide time  28  34  29  53  this is the picture that we had seen earlier ; this is the diagram of a bigger delta network  may be with 16 input lines and 16 output lines as you can see  this is a four-stage switch  because in order to code for 16 lines  it will require four bits from 0000 up to 1111 each bit decides whether that particular switch connects you to the upper output line or the lower output line and from any of these input lines there is a path to any of the other output line this is the 16 ? 16 banyan network as you can see  by doing it in this multistage fashion in a regular cross bar switch  while we require some thing like 125 switching elements here  you require only  say  32 switching elements so the number of switching elements is much less  refer slide time  29  54 ? 30  11  but there may be a problem of contention in a delta network cells can be simultaneously switched through the network however cells may have to contend for the same switching element let us go back to the earlier diagram  refer slide time  30  13 ? 30  39  you see this  say  0000 wants to talk to 0001  so he will simply go like this and similarly another line over here  may want to go straight down to somewhere over here so many calls can go through together but this is not always the case there may be a contention for the same switching element as we will see in this diagram  refer slide time  30  42-31  58  let us say 0 1 1 0  so 0  1  and then 1,0 ; 0 will come here  then 1 will go straight ; 0 1 1 0 ; and then 0 1 0 0 so 0  upper 1  1  and you see that we have potentially got a contention for the same switching element from two different points in the network ; it is sort of converging to the same switching element before it can proceed so there is going to be a contention over there if there is a contention  obviously both of them can not be handled at the same time ; either one of them has to wait you have to make it wait by putting it in some buffer  etc  or one of them will have to be blocked or dropped although we save on the number of switching elements  sometimes we get a contention some ways to reduce contention is  refer slide time  32  26 ? 32  37  to provide buffers in every basic switching element  increase the internal link speed relative to the external speed  and use a backward feedback these are different sort of techniques to reduce contention one is of course providing buffers as we have already discussed ; you could increase the internal link speed relative to the external speed that means if the internal link is much faster than the external speed at which you are pumping in  then it may be able to handle both of them so far as the input streams  refer slide time  33  04 ? 33  31  or the output streams are concerned  they will not notice the faster switching that is going on within the switch so that they will think that there is no contention you can use backward feedback ; that means  at some later point in the main if you find that there is a contention then give one of them feedback so that it sort of re-circulates  refer slide time  33  32 ? 34  07  the other ways are to use multiple networks in parallel ; provide multiple links internally between switching elements ; and shuffle cells first so that they do not collide later this is also another kind of switch that is quite common ; it is known as the batcher banyan switch we have seen the banyan switch part ; in batcher part there is some shuffling of the input cells so that in the banyan part they do not collide by contending for the same switching element  refer slide time  34  08 ? 34-57  in the space division switch  the big switch is broken into multistage smaller chunks i will show a three-stage switch suppose i want an n/n switch ; suppose it were a cross bar  then it would be an n/n switch this is replaced by n/n number of n ? k switches in the first stage  followed by k  n/n  ?  n/n  switches in the second stage  followed by n/n number of k ? n switches in the third stage so let us take a first look at a simple example  refer slide time  34  58-35  57  so this is a three-stage switch ; in the first stage  we have 10 of them so n is 10 ; and k is 2 so we have 5 ? 2 switches we have 1 2 3 4 5 at the input stage  so n/n  that is  two of them or 5 ? 2 switches and then two 2 ? 2 switches followed by 2 ? 5 switches let us say 5 wants to speak to 2  so 5 comes here ; gets switched in this fashion to 2 ; and 6 wants to talk to 1 so 6 goes to this switching fabric in this fashion in the third stage  refer slide time  35  58 ? 37  59  if you take the general case of n = 1000  n = 50  k = 10  this reduces the number of switches to 24,000 from about 500,000 because 1000 ? 1000/2 is 500,000 ; that is  the number of switching elements you would require for a simple cross bar kind of switch  whereas by breaking it up into three stages in this fashion taking this particular value of n = 50 and k = 10  you reduce the number of switches to 24,000 however  the switch can handle only n * k/n so if n = 1000 and k = 10 and n = 50  so n * k/n would be 200 so only 200 simultaneous calls  so only 400 users can use it at the same time as i mentioned  it may be fairly alright because you have a phone but you are not talking on that phone all the time ; most of the time actually it is just lying idle if the telephone company makes a good study and finds out that 400 is the maximum number that is sufficient for a very low blocking probability even during busy hour  then that is fine  refer slide time  37  34 -38  24  the general scheme of this is that you have n lines fitting into each of these n/n modules at the first stage so you have a total of n lines fitting into one module so you have n ? k kind of switches so that this switch can be directed to any of the switches on this side so there are k of them here there are n/n switch modules in this first stage  k modules in the second stage  and again n/n modules in the last stage  third stage so you have  n/n + k + n/n  modules  refer slide time  38  25 ? 39  28  in the multistage interconnect network  you may either have a connection based kind of system  that means  once a connection is made it is permanent till the call is held  as we have in a usual telephone network  or it may be a cell-by-cell  that means  although the user sort of goes on having the conversation  his stream of bits is divided into small cells and each cell is individually routed through the main many connections will need paths through more than one switch ? cell-based means routing tag versus network-based  which is routing tables so if you have tags it is faster ; if it is table it is slightly slower and as i said  the static routing uses the same approach all the time ; dynamic routing allows for change in routing depending on the traffic so what is a tag ?  refer slide time  39  32 ? 39  35  you remember that in a delta network we were putting 001 etc ; we were encoding the input or the output  specifically the output lines  and then using that address so that the cell can route itself through the network that is an example of a tag  which means that within a switch each of the lines has got some kind of code in it ; you might call it tag this tag will be used for routing now if it is self-routing  like the one shown in delta network  which is very simple  it will be very fast if it is some other kind of tag we are using where such a simple scheme does not hold  then maybe we have to look up to some table to find out where i want to go with tags  cells can be  refer slide time  40  27 ? 40  58  augmented to include extra header information when they enter a switch that means you look at which is the output line it wants to go to and then add the code for that output line on to this cell  which sort of becomes the tag for example  with the siemens atm chip set  each 53-byte octet or byte cell is augmented to a 64-byte cell as it enters the switch so these extra bytes are for putting in this tags  etc this extra information speeds up the routing process  refer slide time  40  59 ? 42  09  in a connection-based system ? we discussed this earlier  but once again ? the path is determined once for the duration of the connection that means  once the connection is made  for the entire duration of the connection the path remains the same all cells of the connection follow the same path now it may be a connection-based system with cells ; that means  once the connection is set up  a particular path is designated that this is the path all the cells  which are originating for this particular call  will take so  all cells of the connection follow the same path this guarantees proper sequencing of cells ; of course  they will now go in an order the connection  of course  may be refused  that means when you are trying to set up a connection you find that in an intermediate stage there is not enough resource there is too much contention for that  so the connection may be refused paths can be determined by a combination of random selection to distribute the load if you remember  in a multistage switch specially  there are various paths from the input to the output ; there are various possible paths  so that if one path is not alright because of some defect or one path is not very good because at that particular point of time that path is loaded  you may route your path through some other path of the switch  refer slide time 42  32 ? 42  49  you might do a random selection amongst the paths to distribute the load  do a careful selection to arrive at the correct destination ? if this and this selection can be done either centrally or in a step-by-step fashion as is done in a delta network  refer slide time  42  50 ? 43  49  we have different types of switching ? we have connections plus tags  you have connectionless  which are tags of course we will look at connectionless switches in more detail when we discuss packet switches so the same discussion that we have now  part of the discussion that we are having here  could also be useful in the next lecture we have connectionless plus tables  that means  if tags are not possible you have to do some table lookup because this table lookup will always be slightly costly in terms of time the kind of speed that you can achieve with a table lookup becomes limited because of that ; but any way if this is again a possibility that you can have connections-oriented system by using tables  you can have connectionless systems using tables ; this is also used in routers specially  refer slide time 43  50 ? 44  40  we will look into buffers in more detail when we discuss packet switches buffers may be complete sharing  which is the best utilization of memory and best for bursts of equal loads complete sharing means everybody can share all  so there is a central memory kind of thing  which is shared it may be a complete partitioning ; naturally complete partitioning would be faster and best for unbalanced load partial sharing means some of it may be centralized  some of it may be distributed  etc there may be various strategies regarding buffers  refer slide time 44  41 ? 44  43  next we come to time division switches ? time division switches follow almost the same principle as time division multiplexing  in which the same line was being used for communication by different channels ; what we did was that we kept a specific time slot for one channel and these time slots go in a round robin fashion so after a particular frame is over  that means  all the input lines have had their time slots then one particular channel will get back its second time slot  and so on so it will go on in a round robin fashion we use the same principle in time division switches ; in time division switches the bits or bit streams may follow the same path  that means  different calls are following the same path but they are using different time slots so a fixed  refer slide time  45  55 ? 46  17  the number of bits from each line is read into a ram in order ? this constitutes a single frame that means a fixed number of bits from each frame  each line a mapping table reads from the ram in a different order for switching from line j to line k  the j th location is read in the k th step  refer slide time 46  18 ? 47  27  this is shown here suppose these are the input lines 0 1 2 3 4 5 6 7 the output is read in a somewhat different fashion 4 7 6 3 0 5 2 1 that means actually whatever the 0  its line 0  puts in this slot would be read by line 4  because line 4 is reading in that time slot so line 0 is  in effect  connected to line 4 similarly  line 1 is connected to line 7  line 3 is not connected to anybody it ? s idle at the moment  so 3 3 ; similarly a 5 5 ; so it is idle similarly  just as we have 0 4 we 4 0 ; so this is a bidirectional communication  duplex communication going on so in the first slot or  let ? s say  the 0 th slot  the line number 4 reads it and in the 4 th time slot  line number 0 reads it so line 0 is switched to line 4  1 to 7  etc lines 3 and 5 are idle  refer slide time 47  28 ? 48  29  basic components of a tdm switch ? we will not have the time to go into the details of this it has a dedicated internal buffer memory  distinct from the ram memory used for program code and data and this buffer will sort of contain the bits which are to be written into and read often on a completely separate physical module  that means  printed writing card usually it has at least two dma bidirectional serial ports if you have studied operating system  that is direct memory access  which is used for fast communication without the intervention of cpu  that is dma of course we want this as fast as possible ; so dma bidirectional serial ports  input and output  are simultaneous on each port with dedicated hardware for each operation so our memories are very special ; that means  they have multiple port memories and serial i/o on each port this is a very simplified block diagram  refer slide time 48  32 ? 49  25  usually in your line  the bit stream will come serially but on the bus internally we want to put them together  maybe 1 byte at a time so we have a serial to parallel converter for getting 8 bits and converting it to a byte  which will be fed in parallel so database goes into the buffer ram memory ? there is a connection memory which is a mapping table that we have talked about so when you are setting up a connection  you will make entries into the connection memory we will just have a look at the connection memory  that is  what we have already seen and then it gets consecutive address generated here and then from the buffer memory once again it goes to the output side and then there is a parallel to serial converter for feeding into the individual lines so this is the data bus and this is the address bus  refer slide time  49  26 ? 49  47  connection memory contains a list or table for mapping input time slots to output time slots when a call is set up  you make an increase in this connection memory the pointer data values are set from the cpu on a per call basis the data output of this memory is used as an address to access the buffer ram ; decimal representation is shown  refer slide time 49  48 ? 50  02  this is another example so in address 0  we have pointer or content is 14 ; that means line number 0 may be connected into line number 14 in this example  refer slide time  50  03 ? 52  06  now just one more thing ? that assuming 1 byte is read from each line  each frame is to be processed in 125 micro seconds you remember how this 125 micro second comes about ? remember we talked about the voice channel  and each voice channel requires a capacity of 64 kbps as we mentioned so 64 kbps means that what is the gap between every bit in 1 second ? there are 64,000 of them so it would be 64 kbps if we handle 1 byte at a time  it will be 8 kbps and 1/8 kbps would be 125 micro seconds so this is the basic time for frame and in the entire time division hierarchy  as we will see in time division multiplexing  this 125 micro second is a very sacred figure ; this is what everybody sort of sticks to so that a voice call can smoothly fit into this of course if you want to have a higher speed channel then what you might do is in the same 125 micro seconds ? slot  you may pack in a large number of bits that is alright but we keep the frame size to 125 micro second if the memory cycle time is t micro second and there are n lines we have 2nt  because each of them has two operations  one read and one write so 2nt would be 125 so a 1000 line switch will require a cycle time of about 60 nanoseconds that is the kind of memory speed  and as we will see  as the number of lines goes up or as the speed of switches goes up  this memory speed becomes a constraint as with space to division switches  it is possible to device multistage switches  refer slide time  52  07 ? 53  15  now just one last point about capacity allocation ; i mentioned that the service providers actually want to provision less than the maximum possible but what would be the blocking probability if you provision it in a certain manner  let us say  in the c stage switch ? so i will just give you the formula if the average call arrival rate is  say  ? calls per second  which is an exponential distribution as people have seen for a voice network ? for data network it is different ; we will come to that in the next lecture ? the average holding time is m seconds per call  which is poisson distribution the call load in erlangs is a = ? m this is called the load and given a load a  we try to allocate a channel capacity n such that the call blocking probability b is at an acceptable level  typically around 1 % or less this is the typical figure that we try to achieve the difference is that within the busy hour  we get not more than 1 % call blocking probability and the formula for calculating this is this  refer slide time  53  16 ? 53  39  b is equal to a * * n / n ! *  ?  a * * i/i !   ? so you can use this formula or may be write a small program using this formula to calculate the call blocking probability giving values of a  n  i  etc  refer slide time  53  40 ? 54  19  so you can verify this this is one last this thing ? verify using erlang-b and stirlings approximation for handling the factorial  that for large n  say 100  even with 70 % average channel utilization  that is a/n  we get very small blocking probability but of course  if the channel utilization or a/n becomes 80 % and then 90 %  what will happen is that you will find that your channel probability is going up and then you can do the same thing for a small n and try to see what happens thank you  refer slide time  54  22  54  25  good day so in this lecture we will discuss about packet switches that means packet switches are switches which as specifically designed for handling packets we have seen the telecom switches like space division time division switches etc ok we have also discuss something about multistage switches which are used quit often in packet switches also but in this lecture we will specifically discuss about a packet switches  refer slide time  54  59  55  01  which is at the heart of all most all your computer networks ok so  refer slide time 55  11  55  26  first just to give you some motivation that why do we require switches the performance of a lan can be considerably enhanced by moving over to switched lans moving over from what if you remember that some of the earliest kinds of lans that we have just seen a brief glance of some of them used shared memory like a hub or a bus etc now in a if you are using a shared medium what is going to happen is that only two nodes connected to this lan can communicate with each other at a particular point of time where as if you have a switch multiple pairs of users or multiple pairs of nodes can communicate with each other at the same time so naturally you get a very good boost in performance of the over all lan so that is one reason why we require switches of course we require switches in other place also  refer slide time  56  18  56  23  multiple distinct source destination pairs are able to communicate at the same time thorough a switch so that is why we require a switch in  refer slide time ? 56  24 56  34  packet networks a packet switch needs to look at the header of each packet to find the destination address of the packet so you do not have to do a full scale sort of lookup of a very big table a refer slide time 56  43-57  52  so you have a you lookup only a very small table of v c i and v p i in the v c table replace but of course virtual connection just as their setup they may be taken down so replace old v c i v p i with new ones forward cell to outgoing interface transmit cell onto link so this is the this is how an a t m switch works so if you so you see that the basic concept of the cell remains the same that means we have we have some we have to find out the output port from the address and the here the address once it is setup after that the output the address is simply a small table of v c i v p i which makes this lookup process much faster so this together with the fact that the cells are of same size so you can develop your hardware in such a way so that this a t m switches will work very fast otherwise the rest of the switch and the switching principle remains the same as we have discussed already  refer slide time 57  53-58  08  next comes comes ethernet switch which is perhaps the common most common type of switch that you see almost every where as a matter of fact this number of ethernet switches which are being used and which hare being put to use the almost regularly is so high that the cost of this switches have also come down you know because if if you produce something in very large number you can amountize the cost of is development etc over a large number of switches so this cost of the switch comes down so ethernet switches have become very cheap these days ok switch which are used to cost may be a lack or so may be ten fifteen years back cause only a few thousand rupees today so this is the most common type of switch which we see every where 