circuits and systems
prof s srinivasan
department of electrical
electrical engineering indian
engineering indian institute
institute of technology
technology madras lecture
introduction to digital
circuits and digital
signals a signal
light intensity variation
lot of processing
processing of signals
signals in real
microphone the speech
typical signal processing
signal processing scenario
electrical engineering domain
domain we talk
signals that means
quantity a voltage
signal is defined
variation of electrical
variation any signal
occurs the speech
speech or temperature
seismic earthquake activity
activity any signal
transducer a sort
device this device
device which converts
converts non electrical
non electrical quantity
electrical quantity electrical
quantity electrical signal
transducers in electrical
define the signal
parameter of interests
interests the voltage
voltage or current
signal varies continuously
variation of signal
signal voltage level
number of values
values this signal
call this minimum
value as vmax
two different values
values we define
signal always varies
make a measurement
analog signal analog
signal analog signal
signal or analog
process the signal
monitor the temperature
system every minute
signal the signal
signal will vary
suppose i put
put this value
easier i make
monitor the value
discrete time signal
varies an analog
signal which takes
takes any value
two defined limits
signal the problem
nanosecond can change
observe physical parameter
parameter will vary
vary with input
input and output
observer the observation
analog time signal
signal the variation
supposing my initial
allowing this signal
signal to change
difficulty in representing
represent any number
number of digits
number of levels
transmit a signal
speak my speech
speech is picked
converted into electrical
signal is amplified
speaker which brings
sake we don
nice to watch
sitting and watching
beach and sit
watch the waves
things i pick
signal and process
system another transducer
convert this signal
variation over today
temperature reading store
today is hotter
hotter than yesterday
store or transmit
represent my variations
send the signal
define various levels
levels the signals
signal with continuous
continuous amplitude variation
amplitude continuously vary
vary but discretize
amount of level
level specific number
number of discrete
process those discrete
transmit those discrete
levels are introduced
accuracy in transmission
transmission and reproduction
discretize the amplitude
amplitude in addition
addition to discretize
signal that means
narrow or broad
broad these ranges
number of steps
decided the total
represent the signal
make a prior
nearest lower level
level or nearest
nearest upper level
stored or represented
digits to represent
fewer for storing
storing and fewer
levels to transmit
case of transmission
divide this range
expect much variation
variation in temperature
interested to find
find a variation
easy to store
values and transmit
supposing the signal
digits to transmit
flexibility of increasing
increasing the accuracy
accuracy by increasing
increasing the number
store more levels
levels and transmit
transmit more levels
levels we improve
improve our accuracy
interested in storing
storing more levels
levels and transmitting
transmitting more levels
decide the accuracy
domain in analog
physics lab make
measurement of current
current or voltage
voltage the representation
representation is analog
analog the needle
make a guess
meter with minor
built in analog
making it official
permitted always represent
represent your signal
give an analog
meter i approximate
improve the accuracy
accuracy of analog
make a mistake
make a reading
divide into smaller
smaller and smaller
sub-divisions this possibility
improves the accuracy
amount by putting
instrumentation by making
making a precise
instrument for measuring
improve the measurements
measurements of analog
analog signals likewise
levels so accuracy
call it hardware
hardware or extra
extra precise instruments
put more money
potential of improving
improving the accuracy
accuracy by putting
levels which means
representing more digits
digits more levels
hardware to represent
terms of instrument
analog why digital
signal and digital
dealing with digital
talking about analog
analog electronics poe
electronics poe principles
principles of electronics
signals and digital
representation of signals
analog in nature
signals are analog
temperature always jumps
temperature will change
change you don
likewise all signals
put the thing
processing or storing
transducer reverse transducer
case of microphone
microphone the reverse
makes the sound
speaker the electrical
signal is converted
converted into sound
light is picked
tube at home
home television receiver
receiver the electrical
back into light
conversion of analog
analog to digital
digital to analog
provision to improve
accuracy by spending
reason is digital
signals are easy
store and manipulate
measuring an analog
storing an analog
store an analog
voltage ? capacitor
store the value
supposing i charge
charge my capacitor
today and tomorrow
equal to storing
storing and retrieving
storing and transmitting
1.27v and tomorrow
leave a voltage
capacitor and measure
last for analog
value you put
transmitting analog signal
1.72v the receiving
1.75v this person
values of storage
level one supposing
supposing i send
noise was added
added same channel
noise is added
effect of noise
1.25v you send
occasionally these type
type of extremities
analog in noise
store and reproduce
accurately ? accuracy
depends on number
stretch of imagination
accurate accuracy depends
transmit and receive
back to accuracy
improved by analog
analog or digital
case in digital
giving an instrument
handle these lower
lower order values
increasing the sensitivity
current carrying coil
makes a deflection
make more accurate
easier in digital
increase the number
levels so reproduction
reproduction of levels
effort hardware wise
system in analog
slog more analog
analog improvement accuracy
difficult than digital
digital improved accuracy
improved accuracy digital
accuracy digital improved
improved accuracy means
means more levels
measure and give
ruler and measure
accurately in analog
systems is difficult
levels and improving
accuracy or precision
system is proportional
case of digital
case of analog
analog in analog
analog the increase
increase in cost
digital i spend
spend more money
levels be happy
give me double
double the cost
difficult to make
make more meaningful
measurements more accurate
measurements in analog
compared to digital
digital or storage
measurement it means
storage and transmission
part of signal
handling or signal
processing the signal
call it handling
principle of electronics
good tempting thought
real life signals
light or heart
waveforms in monitors
suddenly the heart
represent a person
jobs so analog
convert these analog
signals to digital
live with digital
people but today
technology has improved
digital becoming lower
lower and lower
analog i told
first we pick
convert into digital
amplify it supposing
supposing you don
signal gets lost
signal is lost
analog signal convert
convert to digital
put separately store
separately store measure
storing and reproducing
back to analog
today in electronics
today you design
ninety to ninety
ninety five percent
activities are digital
signal whatever processing
effort is put
put on digital
digital more amount
amount of work
work is done
done in digital
domain than analog
domain but design
difficult in analog
accuracy in analog
easy but digital
digital is easy
easy so effort
professors and pick
digital as lot
convert to analog
represented in digital
basic building blocks
blocks of digital
point of view
analyze the behavior
define the input
input output relationship
divided into combinations
circuits and sequential
systems and digital
digital circuits find
out their behavior
designing the requirements
design phase design
choose the proper
proper building blocks
make it work
work to give
types of circuits
define the difference
doing the analysis
design of combinational
combinational sequential building
sequential building blocks
required for digital
sentence course formulation
moris m mano
mano this print
stores this moris
last twenty years
years this person
books and updating
updating and improving
improving the contents
digital design edition
roth ? fundamentals
fundamentals of logic
title like digital
digital and logic
logic design digital
design digital circuits
first introductory material
material and digital
scores of books
book that cover
cover to cover
cover one topic
cover a topic
sort of give
give an essence
experience of teaching
follow the material
follow a book
book from page
page to page
digital because book
first course lot
things are done
today digital world
world so lots
lots of opportunities
doing some mini
project in digital
borrow or copy
thinking of buying
buying a book
develop a material
detailed subject matter
represent digital signals
book and follow
follow the book
read the book
understand this topic
start also working
working out problems
stop here today
today digital circuits
maps and implicants
simplification of boolean
functions or logic
functions the last
lecture we talked
talked about boolean
set of formulae
formulae or identities
expression without changing
changing the boolean
set of input
conditions an output
output is defined
defined as true
true or false
make a simplification
change whatever simplifications
simplifications you make
make the output
output is supposed
systematized for easy
function gets bigger
bigger and bigger
automated reduction techniques
type of concept
order to reduce
reduce or simplify
simplify the function
reduce the number
number of terms
number of variables
combine the terms
term two terms
saving in hardware
applied in graph
learn the procedure
method of boolean
boolean simplification today
map the truth
give the minimum
minimum possible solution
possibility of combining
concept of boolean
set of equations
equations or identities
variables are present
map in true
form and complement
bar b bar
bar c bar
abc that means
draw a graph
map i call
vary the true
true complement value
means a bar
bar this cell
bar and value
bar you don
cell is supposed
write a bar
adjacency rule remember
type of identity
repeatedly to combine
combine to knock
bar and knock
two variables change
change from cell
cell to cell
combine them effectively
bar a bar
two adjacent cells
repeatedly this formula
variable which varies
value c value
work also backwards
cell a bar
bar that means
apply rotational symmetry
two more rows
direction or vertical
direction will differ
applies from end
end to end
values of output
case that means
means the truth
bar is equal
identify the entire
map our original
couple of classes
write the map
cells and mark
left hand side
map is complete
complete this map
mentioned in text
apply that function
output you remember
original truth table
last few classes
rows the output
seventh and eighth
bit of binary
represent a maximum
two binary bits
values in digital
design or digital
system or digital
representation wherever digital
things are involved
call this zeroth
call these variations
variations or combinations
terms so first
first min term
term is min
term a small
terms we talked
talked about max
terms also yesterday
write this truth
circuit can represent
represent a truth
yesterday using boolean
reduce this table
karnaugh map yesterday
boolean algebra today
end to verify
right or wrong
table you list
input combinations possibilities
list those combinations
bar q bar
bar r bar
bar y bar
bar z bar
alpha beta gamma
point in writing
equal to min
term m4 min
term m5 min
term m6 min
min terms output
output is true
sum of product
term i represent
equal to sigma
sigma m standing
standing min terms
out of laziness
boring just don
sigma m means
means the sum
product terms involved
karnaugh map represent
map this truth
write these min
min term numbers
min term number
terms my job
map or represent
map the min
expressed as sum
sum of products
terms we wrote
adjacent cells differ
variable one cell
adjacent variable cell
adjacency works left
top to bottom
end not diagonally
bottom or side
side to side
two and find
cell it appears
easy to identify
cells a appears
cells and connect
bar this corresponds
bar is common
merged or combined
terms three variables
done is identified
identified the adjacent
variable is removed
bar is constant
extend this argument
two b bar
two cells adjacent
step by step
order to knock
group adjacent cells
function we started
considered the largest
largest possible groups
largest possible group
question of doing
final output compared
compared to boolean
lies the difference
karnaugh map method
variables four variables
four variables simplify
variables simplify minimize
map the function
give the variables
function in mind
output or true
output and rest
representation in min
min term form
mind no specific
function of pqrs
pqrs four variables
write a truth
sixteen rows min
rows min terms
min terms min
terms min term
false as outputs
function i wanted
map and minimize
write the minimum
minimum possible expression
expression minimum sum
msp not sum
product expression sop
sop is sum
standard truth table
truth table representation
relationship and minimum
variable to change
changed i don
adjacent two cells
cells are defined
physically you put
variable karnaugh map
standard whether variables
drop these min
group the idea
remember the boolean
simplify the boolean
cells are blank
cell is adjacent
physically not adjacent
talking about logical
terms of groups
write a sum
product expressions sop
expressions sop minimum
sop minimum sum
finally the fourth
bar s bar
means my final
pqs plus pqr
terms which combine
suppose i write
write a term
term i won
two cells cell
cells cell number
covering a larger
implicant a prime
find a larger
group an implicant
implicant gets submerged
implicants any prime
wrote this number
wrote three terms
terms i included
defined an implicant
defined a prime
defining an essential
essential prime implicant
four are essential
essential prime implicants
four prime implicants
implicants are essential
non essential prime
ways of combining
result or similar
implicant that means
left out suppose
two different ways
find several possibilities
prime implicant prime
implicant prime implicant
implicant is important
two prime implicant
include all non
implicants as required
required to cover
map whereas essential
lecture digital circuits
lecture we introduced
simplification we drew
drew a karnaugh
truth table filled
filled this graph
map the entry
cluttered the objective
satisfying the adjacency
rule and remove
remove or knock
today some special
call these variables
function this expresses
expresses the sum
group the adjacent
keeping in mind
mind the group
make as large
mind the adjacency
worry about combining
standing out separately
point of covering
group all groups
point in unnecessarily
suppose i marked
differently that means
map with large
large possible groups
definitions we gave
lecture i talked
talked about implicant
implicant an implicant
implicant an essential
draw this map
four are prime
two other ways
make another prime
make prime implican
talking about definitions
implicants having drawn
efficient simplification compared
expression in order
order to complete
complete the expression
case a non
clear and obvious
two non essential
simplicity or complexity
case the choice
reduce the logic
expression in terms
terms of number
variables and number
involving a non
call it wxyz
min term outputs
wrote the map
wrote the min
illustrate a point
point in terms
terms of implicants
maps to give
give you examples
draw the map
smallest possible number
number of prime
implicants and make
make a combination
minimum possible combination
form a map
group a prime
roll over top
bottom and left
call this first
first prime implicant
day the adjacency
cells are adjacent
implicant and essential
find its place
expression the debate
implicant in fact
two are combining
absorbs smaller implicants
four larger prime
larger prime implicant
essential prime omplicant
complete my simplification
left out remember
order to include
iii is essential
implicants because essential
options of covering
covering this min
min term represented
iii are epi
write the final
wanted to bring
definitions of implicant
implicant and non
role of non
implicant in simplification
goal of minimum
products i don
terms with variables
case what wxyz
terms of variables
wxyz you write
simplified minimum sum
four variable map
started with simple
drew the simple
structure using gates
gates and wrote
wrote the truth
truth table found
out the truth
truth table resulted
four variables wxyz
output f circuit
circuit of system
relationship between input
equation not identity
identity boolean expression
expression this boolean
output and wxyz
hand as inputs
reason to choose
terms of wxyz
two w bar
expression is done
done x bar
bar w bar
gates with inputs
four and gates
bar x bar
circuit whose karnaugh
write the truth
table the truth
input and gate
input or gate
input and gates
components in order
order to build
build a circuit
associate with wxyz
wxyz some signals
incidence of parameters
trigger an event
boolean relationship mapping
drawing the circuit
digital systems today
complex a system
systems like missiles
told you missiles
missiles and aircrafts
aircrafts and things
four variables classroom
variables classroom exercises
happen if variables
represent sixteen cells
map two dimensional
variable the variables
variables we start
last min term
power n minus
draw two maps
out because first
first sixteen entries
truth table m15
map with variables
bcde always remembering
whichever min term
output you map
map it map
four variables map
careful the adjacency
map are adjacent
adjacent that property
reading the map
map the entire
implicant one essential
iii but don
four are left
call this iii
essential i made
variables i wanted
wanted to drive
home the point
made them essential
worry about non
implicants or proper
writing the minimum
product expression based
call this reading
read the map
map after putting
grouping them identifying
writing the final
terms of abcd
prime e prime
bar e bar
prime c bar
map third epi
include the information
add a bar
implicant this part
draw your gate
variable map identify
identify the common
draw it side
side by side
map a bar
writing the expression
games you play
find a method
method of doing
inefficient we started
simplicity an efficiency
reaching a point
simplicity is lost
four is good
done is adjacency
write a computer
program to find
out the adjacent
handle for computers
steps you write
write a program
algorithm they call
program you write
write an algorithm
truth table merge
computer the program
program is limited
list all essential
implicants and non
make a choice
computer based methods
hand to understand
understand the algorithm
method called tabulation
method some people
prime implicant method
method some books
call it graphical
method a tabulation
understand the concept
programs very easy
easy to understand
karnaugh map minimization
minimization using maxterms
taking about minimization
minimization of boolean
method by drawing
drawing a graphical
identifying the patterns
reduce the variables
talked about min
terms and max
write an expression
expression boolean algebra
products or product
product of sums
sums because analogous
series of product
terms and sum
series of sum
multiply these sum
draw a karnaugh
map to simplify
simplify you find
number of literals
implicants and essential
true the function
function is true
function is false
expression by grouping
approach some people
type of gates
product of sum
simplify the logic
row and last
last four rows
rows the first
pattern is good
good large groups
expression because larger
larger and larger
larger groups give
give you smaller
smaller product terms
simplify the expression
feel these entries
simplify my logic
write prime implicants
identify prime implicants
implicants or essential
bar is sum
sum of prime
combination of prime
implement a function
asserted as true
output not asserted
asserted or output
applying demorgans theorem
variable gets changed
changed into complement
variable gets complemented
terms get knocked
couple of points
grouping is easier
find a simplified
simplification this simplification
wanted the solution
solution in product
expression the minimum
sum term represent
sum is equal
call it sum
operation and dot
sum term represents
gate and product
product term represents
fewer or gates
gates and larger
fewer and gates
expression or product
writing a bar
bar and taking
taking its complement
read a product
read a sum
remember to complement
complement each variable
variable and remember
complement each operation
operation and variables
simplify my procedure
visualize the procedure
prove this point
variable map sigma
sigma m number
number of min
terms will form
form the sum
call them abcd
min term min
term min terms
prime implicant isthese
four 1s form
form a prime
done this earlier
terms of non
put a product
terms and small
draw another map
order to avoid
four 0s form
form a group
two 0s form
write f bar
write the product
sum form bar
map for product
expression by treating
treating a variable
complement any variable
variable is read
operator is read
operator and vice
bar d bar
read as abc
identical your choice
restrictions are designed
availability of parts
inventory of types
types of parts
talked about implicants
examples of systems
giving you min
max term lists
expression or arbitrary
real life examples
map with sixteen
table with sixteen
rows or cells
cells an output
combinations because based
designing a system
system a circuit
define the output
list of combinations
combinations in input
combinations the output
combinations may occur
effect your process
system any circuit
define the inputs
inputs are undefined
define for practical
combination of inputs
occur in practice
effect my processing
combinations of inputs
simple example suppose
supposing i show
showing any sign
supposing i put
fingers and determine
determine the condition
finger you don
showing this thumb
thumb you don
affect my output
care that thing
happen i don
giving a logical
combination is coming
coming the output
safe i don
output is required
combinations always produce
produce an output
fix this don
condition the states
outputs the condition
enclose it write
map gets reduced
reduced my expression
difficult my expression
order to simplify
simplify the hardware
condition to simplify
simplify my hardware
put an extra
make a nice
advantage to reduce
reduce my hardware
hardware to reduce
reduce my term
bother to cover
advantage the don
variables we call
call them literals
introduce an extra
term to cover
cover a don
care i don
introduce a term
term in order
reduce the hardware
hardware the theme
beginning is reduce
reduction will result
result in power
hardware but reliable
hardware usually fifty
reduced the hardware
percent of marks
reduction without losing
losing the reliability
thing and put
put some don
care some books
books by phi
books by capital
arbitrarily i put
show the effect
effect i don
conditions of input
map gets modified
modified with don
modified map modified
modified k map
map with don
simplify this map
reduce this map
make an effort
effort to include
waste of effort
combinations of input
effect my circuit
implicants now remember
make a simpler
literals that means
gate and gate
concept of don
write the expression
cares then combine
write a normal
obliged to include
include every don
burden to include
covered you put
waste one extra
extra nand gate
extra and gate
gate that means
means or gate
expression b bar
two and gates
writing the values
extra two inverters
exhausted all possibilities
possibilities of simplification
sort of arbitrary
device except don
combination but justifying
system you write
design you identify
identify a physical
physical device system
algebra to simplify
map and simplify
sum way depending
type of hardware
examples of logic
talking about logic
logic gates logic
gates logic means
logic means decision
inputs are true
cases the output
output is false
sense or gate
inputs is true
true the output
intensive you remember
remember we talked
arithmetic circuit logic
arithmetic using logic
gates like add
circuit and things
talking about binary
variables a variable
arithmetic or logic
add two binary
two binary numbers
numbers two binary
values and output
happen if sum
remember to include
include another output
output called carry
handle the carry
input to determine
introduction to boolean
min terms max
terms max terms
karnaugh map simplification
realization of things
logically and arithmetic
design and build
build that means
inputs and outputs
outputs and find
drawn in terms
terms of true
circuit will work
subsequent lectures digital
lectures digital circuits
latch you store
store a bit
control called clock
clock is high
clock is low
basic sr flip-flop
single bit data
stored with single
input d data
input by connecting
modified the input
input nand gate
gate and found
output keeps changing
retains its content
gate is disturbing
type of behavior
prevent this racing
make a clock
clock active period
master slave concept
master slave operation
input gates remember
two nand gate
nand gate combination
structure we discussed
tying the output
two input gates
give external input
feedback now output
latch with part
stage of flip-flops
basic sr latch
taking the feedback
feedback all right
stage i put
connect the clock
invert my clock
clock is common
clock is fed
two external inputs
stage you put
stage and feed
output will change
operation the flip-flop
enable the output
output to change
change the output
feeding a clock
flip-flop whose output
output is fed
fed as input
flip-flop are identical
two input gate
importantly the difference
low and vice
flip-flop this flip-flop
flip-flop will change
happen because feedback
gates the input
changing this flip-flop
high this clock
affect the flip-flop
state the memory
flip-flop is low
flip-flop is enabled
enabled the clock
flip-flop is disabled
disabled any change
changed from high
high to low
low to high
affect this gate
affect the operation
preventing this continuous
high any change
two stage flip-flop
clock being high
clock being low
first stage clock
clock becomes low
clock becomes high
isolating the fluctuations
output or output
master slave combination
output and convert
clock is enabled
slave is enabled
clock is disabled
affect the master
flip-flop becomes high
period that means
point the slave
high slave clock
clock pulse period
last lecture constant
lecture constant toggling
racing is undesirable
undesirable that means
original sr flip-flop
unreliability undefined performance
solved the racing
problem by putting
putting an extra
master slave configuration
type of flip-flop
clock and slave
clock with face
configuration it doesn
flip-flop that means
flip-flop is tamed
back the memories
modified sr flip-flop
stage to control
control the operation
case sr flip-flop
flip-flop is permitted
additional toggling facility
put a clock
state that means
complementary the present
write toggling mode
mode you write
write q bar
nth clock pulse
minus 1th clock
1th clock pulse
conditions are made
circuit as inputs
inputs and toggling
design counters toggling
counters toggling property
bit of information
introduce a clock
put a simple
simple data bit
clock whatever data
data you put
feedback extra input
previous clock cycle
master slave mode
mode or master
master slave flip-flop
flip-flop they call
two d flip-flops
put one value
value gets stored
flip-flop the slave
change i make
data per clock
period you put
put a master
configuration the master
low from high
takes the output
flip-flop a master
slave d flip-flop
ways of making
put the data
flip-flop you put
value the master
slave the clock
flip-flop the master
helps to avoid
storing the data
simply store data
action you put
generally sr flip-flops
data storage purposes
two most popular
input for clock
clock gets inverted
give some power
supply no circuit
work without powering
voltage and ground
give the voltage
voltage called vcc
vcc or vdd
bipolar transistor technology
technology or cmos
talking about power
talking about signals
power source power
source power source
source is required
put in addition
type of thing
clock is required
flip-flop ? clock
flip-flops if clock
state when clock
give the toggle
input which means
bar the previous
previous value complemented
inputs that means
totally four types
types of flip-flops
flip-flop is equal
flip-flop only toggling
operation or performance
design this extra
hardware this slave
hardware almost doubling
doubling the thing
effort in terms
number of gates
things high speed
cost or small
unnecessarily putting extra
putting extra hardware
extra flip-flop duplicate
duplicate an extra
clock can change
flip-flops any flip-flop
flip-flop how fast
change the data
rate the propagation
data to travel
addition to propagation
couple of things
things called set
set up term
change the input
input that means
clock it faster
flip-flop which includes
includes propagation delay
times in today
technology the speed
high we don
high speed applications
improving the technology
technology and inventing
newer and newer
cutting edge technology
edge technology cutting
technology cutting edge
cutting edge application
change of clock
clock the limit
data can change
change the clock
flip-flop that involves
involves several things
including the propagation
reduce by factor
half the speed
extra things coming
half this speed
work a single
flip-flops two delays
allowing the racing
period the output
output can change
technique called edge
edge triggered technique
bit extra hardware
lot of doubling
doubling the flip-flop
flip-flop can lead
change is made
triggering and level
role to play
gate is high
high rather clock
enabling gate enabling
gate enabling function
enabling function speaking
speaking about clock
high flip-flop works
low the flip-flop
high the flip-flop
flip-flop can change
output any number
number of times
talking about master
flip-flop a single
high the clock
master slave remember
making a case
case for doing
doing a non
non master slave
save time delay
save some hardware
flip-flop a non
output i don
sensitive or level
make my flip-flop
recognize the input
monitor the input
sample the input
sampling the flip-flop
flip-flop will sample
decide the output
output any change
high or low
clock transition occurs
edge triggering operation
output should change
make a reference
edge some people
edge and negative
voltages are positive
talking about positive
edge it means
make a flip-flop
occurs whatever input
positive edge transition
determine the output
positive edge occurs
positive edge triggered
edge triggered flip-flop
triggered flip-flop likewise
likewise whatever input
terminals whatever signal
inputs will determine
negative edge occurs
negative edge triggered
input keeps changing
changing here clock
negative edge points
positive edge points
design my flip-flop
positive transition occurring
occurring in clock
set the outputs
negative edge occurring
negative edge flip-flop
solved the problem
problem of toggling
toggling because toggling
toggling can happen
problem of racing
racing because racing
question of racing
racing so racing
avoided by positive
flip-flop or edge
edge triggered flip-flops
slave that means
make it faster
extra logic built
flip-flop the original
conditions of feedback
generally jk flip-flops
master slave flip-flops
flip-flops are edge
flip-flops the reason
flip-flop the toggling
meaningfully with toggling
data storage application
application d flip-flop
flip-flop a data
environment where memory
rate and retrieved
flip-flops and master
restricted but generally
flip-flop no problem
input can change
required to modify
original d flip-flop
gates will block
blocks the variation
gates are connected
analyze the circuit
change can occur
means the circuit
circuit is designed
case of positive
case of negative
edge can change
change the inputs
finally the input
remember that back
back to back
back connected nand
connected nand gate
back nand latch
two nand gates
nand gates connected
low any change
change that occurs
affect the output
books standard text
standard text books
configuration of edge
triggered d latch
latch edge triggered
triggered d flip-flop
extra logic involved
understand that logic
locate that circuit
understand the operation
make a change
latch that latch
input should remain
logic is designed
standard text book
concept of edge
diagram and understand
understand the circuit
talked about level
triggering and edge
talked about master
flip-flops so today
types of triggering
triggering for easy
order to determine
explain the difference
difference of behavior
flip-flops in terms
terms of triggering
assuming a clock
generally regular clock
regular clock generation
periods in general
general it doesn
likewise it doesn
make them equal
term duty cycle
cycle a duty
period the ratio
clock remains high
total clock period
duty cycle duty
cycle duty cycle
positive and negative
clock pulse equal
non fifty percent
fifty percent duty
percent duty cycle
assumed an arbitrary
clock is applied
edge level triggered
triggered and negative
triggered so first
slave flip-flop first
level triggered flip-flop
two flip-flops master
master and slave
slave the master
level the sensitive
flip-flop whose clock
master slave clock
concept of master
output ? master
level sensitive output
practice to change
high it remains
types of things
behavior of flip-flop
drawing the waveform
slave so master
level sensitive level
sensitive level triggered
output will follow
follow the input
point the clock
out the period
negative or clock
reflect the output
low the entire
entire flip-flop behaved
high the input
naturally the output
level triggered mode
clock on period
transition is reflected
transition will reflect
triggered mode level
mode level sensitive
sensitive level sensitive
sensitive d flip-flop
case of master
flip-flop this output
master is fed
clock this clock
input which reflects
reflects the change
reflect the slave
output can reflect
follow the master
clock was low
output the master
changed the output
happened when clock
clock was high
means this input
momentarily the output
activate whatever mechanism
mechanism or output
pulse very small
small portion fraction
two narrow pulses
pulses or glitches
slave flip-flop serves
serves the purpose
purpose of frequent
affecting the master
makes the change
originally we thought
thought of master
slave for avoiding
racing to avoid
racing we thought
made to eliminate
frequently also helps
output transition takes
transition takes place
negative edge transition
positive triggered flip-flop
entire clock period
period you don
change the flip-flop
drawn the positive
edge triggered output
out the output
data and decide
output remains stationary
positive edge trigger
period but change
inputs when clock
result in affecting
affecting the output
output negative edge
edges and positive
input and decide
slave flip-flop works
flip-flop is identical
slave flip-flop identical
giving the negative
master and regular
means the original
slave and inverted
flip-flop will behave
behavior any behavior
talked about latch
element a bit
pulse to decide
stored we introduce
introduce the clock
call the clocked
latch a flip-flop
wanted a single
wanted to remove
worried about racing
racing and removed
removed the racing
racing by introducing
introducing master slave
edge triggered concept
toggling will happen
behavior in terms
terms of waveforms
data and store
information you give
put another value
addition to data
storage in addition
mode so first
feature because data
put a data
feature is sort
flip-flop it doesn
write the symbol
level triggered clock
triggered clock level
clock level triggered
put an arrow
symbol for edge
positive edge triggering
triggering you put
edge triggering positive
triggering positive edge
bubble where bubble
bubble so bubble
stands for inversion
symbol for master
slave you put
master slave behaves
output the output
present clock cycle
draw a clock
giving this clock
high level voltage
voltage you choose
edge the output
clock negative edge
earlier the period
waveform and reach
reach an identical
two clock periods
two clock period
earlier the clock
half positive half
positive half negative
frequency by factor
divide a clock
mode toggle mode
mode a toggle
flip-flop is divided
give this clock
period become half
half a period
period becomes half
half clock period
divide the input
divide a frequency
frequency a frequency
places where frequency
simple general knowledge
general knowledge question
divider ? watches
divided into seconds
seconds and seconds
divided into minutes
minutes and minutes
minutes into hours
hours and hours
hours into days
days and days
divided into weeks
dividing the input
input clock original
clock original clock
two every stage
stages get divided
space to draw
draw this waveform
four jk flip-flops
flip-flops or negative
triggered jk flip-flops
flip-flops and connecting
connecting the outputs
two clock pulses
four clock pulses
waveform for sixteen
sixteen clock cycles
binary so supposing
supposing this clock
call this clock
start with binary
circuitry to count
count the number
number of clock
cycles have elapsed
tenth clock pulse
clock pulse counting
11th clock pulse
counter they divide
power n circuit
power n counter
power p counter
counter we count
power p minus
combination of outputs
fifteenth clock cycle
thirteenth clock cycle
cycle that means
including this starting
fourteen clock cycles
start the count
give the sixteenth
sixteenth clock pulse
pulse will revert
modulo counter modulo
counter that means
count any pulse
power pth pulse
factor clock division
number of people
put this counter
period of duration
counters the waveform
basically a set
set of flip-flops
count binary values
make it decimal
two binary counter
make it count
power n values
leave this room
people have left
left this room
room so counting
leave the room
room the count
discussing the applications
applications of flip-flops
flip-flops in addition
element a flip-flop
two each flip-flop
divides the clock
counter by stacking
serially by connecting
series of flip-flops
lecture the counting
number of counts
counts or number
number of distinct
states the counter
number of flip-flops
flip-flops the number
bar always complementary
counter whatever counter
outputs up count
count the flip-flop
cycle the modulo
modulos the total
number of states
terminate the count
counter a decimal
back to .or
start a count
start a counter
count or end
start any count
end any count
count and start
terminating the count
count and starting
extra mechanism required
two are inputs
two more inputs
supply and ground
work without power
devices like transistors
transistors either bipolar
transistors or mos
mos transistors inside
details but utmost
gate level detail
gates have active
component like transistors
transistors and mos
vcc and ground
ground or vdd
vdd and ground
two inputs power
inputs power supply
preset and clear
clear this input
stands for preset
preset and clr
stands for clear
input and preset
input an input
input which activates
activates the circuit
active low input
input such inputs
inputs we draw
bubble an input
low an input
activate the required
active high input
draw an input
makes q1 irrespective
clock being positive
means the preset
electronic circuit parlance
circuit parlance overrides
pst is equal
long as preset
overriding input likewise
likewise a clear
input will make
suggests it clears
clears the output
bit extra logic
logic by regard
regard to make
property of making
making the output
write a table
preset clear table
table and preset
functions normally taking
normal the behavior
clear and preset
start or count
end my count
terminate and make
detecting that point
point and clearing
detect the point
arbitrarily and end
arbitrarily that means
counter by taking
taking q bars
flip-flops have clear
inputs and preset
detect the count
cleared that means
process of preset
full clock period
reached i clear
period of clock
referred to glitch
short duration output
duration output variation
small time delay
terminate at count
flip-flops that means
clutter the drawing
drawing i put
flip-flop so assume
assume the flip-flops
momentary short duration
short duration count
appropriately to preset
start at count
end at count
reaches the count
wait for count
preset this flip-flop
flip-flop and clear
preset b preset
count and arbitrary
arbitrary starting point
arbitrary ending point
point and number
total maximum number
state or first
count the maximum
complete the drawing
show the rest
clear and clear
counter which counts
flip-flop the first
arbitrarily the clock
arbitrarily the counter
counter can reach
cycle of count
account the initial
power the first
guarantee the flip-flop
portion in linear
transients you don
talk about transient
state a stable
state you analyze
call it latency
latency digital terminology
digital terminology digital
terminology digital parlance
circuit to start
give the inputs
circuit starts delivering
delivering the output
design any counter
clock being divided
division of frequency
high crystal frequency
run on redundant
crystal the watches
watches the watch
call it watch
watch a watch
clock is derived
high frequency stable
frequency stable source
easy to build
stable the frequency
watches you buy
moment you start
clock in morning
slow and showing
clock the reason
stable it counts
required to make
exercise ; assume
assume a crystal
high frequency megahertz
stages of counting
counting is required
count of seconds
minutes and hours
crystal frequency clock
divisions to make
seconds then divide
divide by sixty
cycles per minute
minutes to make
clock exact frequency
make an hour
make a minute
hour so make
design a series
series of counters
divided at right
count of minutes
minutes and count
count of hours
counters we feed
feed a clock
clock is passed
passed from flip-flop
flip-flop to flip-flop
talked about small
glitch the moment
moment i reset
short time duration
activate the circuitry
circuitry for clear
amount of delay
delay i told
propagation delay involved
clock it takes
applying the clock
flip-flop c flip-flop
feeding the clock
delay of flip-flop
flip-flop we call
things like reset
make it approximate
sheet you find
stage which affects
affects the change
delay in counting
longer and longer
reach ? flip-flop
flip-flop propagation delay
8tp to materialize
question of propagation
maximum propagation delay
reliable now talking
clocks the watches
out the number
number of flip-flop
flip-flop stages required
required each count
longer to materialize
clock and stopping
period to settle
period the count
8tp to settle
period but supposing
number of stages
large clock period
period may approximate
approximate the value
flip-flops each flip-flop
run this counter
ntp thus maximum
maximum clock period
run my counter
counts are arbitrary
count has reached
clock keeps coming
number of transition
extremely low frequency
low frequency clock
crystal oscillator stable
oscillator stable oscillators
reduce the clock
reason of stability
speed of counting
count this fast
events keep coming
coming the number
count if people
people keep coming
events some atomic
event or increase
increase the clock
high frequency clock
ripple counter suffers
clock i give
give the clock
flip-flops the clock
stage it accumulates
accumulates a delay
clock accumulates delay
stages is larger
delay is longer
events the distance
count ripple counter
ripple which means
flip-flop which ripples
stages the ripple
ripple counter files
total propagation delay
practical electronic circuit
approaches the order
clock frequency clock
frequency clock period
period the total
propagation delay approaches
predict exact values
lot of things
count up count
count down start
systems but ripple
counter a synchronous
counter in principle
problem ripple counter
counter is suffers
stages in propagation
propagation delay affecting
affecting the total
number of count
hand a synchronous
counter all flip-flops
receive the clock
question of clock
clock or stable
clock you design
change will depend
flip-flops whose clocks
lot of work
exercise on ripple
talk about synchronous
flip-flops in counter
count or counting
drove the input
play a role
increases the propagation
repel counter increases
linearly the number
count to stabilize
count is longer
count we sort
sort of wondered
pulse is applied
clock goes high
active in order
flip-flops to settle
supply the clock
flip-flops to decide
decide the counting
period the delay
apply the clock
feed the system
clock the input
control the currents
give a clock
clock all flip-flops
toggle that means
counter we call
call this synchronous
counters the synchronous
3-bit to start
start with easy
easy to handle
triggered or master
write the counts
first clock period
first clock pulse
write the sequence
desired sequence natural
sequence natural binary
natural binary sequence
flip-flop c output
giving the clock
clock the output
suppose i feed
feed the output
put this character
give one value
clock pulse applied
pulse applied remains
flip-flop will toggle
two clock cycles
repeat this argument
four clock cycles
four clock periods
flip-flop will remain
pulses it remains
transition to happen
fourth clock pulse
3-bits three positions
make the fourth
fourth flip-flop toggle
toggle and remain
flip-flops have changed
change can happen
earlier we tied
clock was delayed
first flip-flop received
received the input
received a clock
half the frequency
fourth the frequency
divided the clock
lower frequency clocks
toggling action slower
slower and slower
slower the idea
flip-flop to toggle
rate this slower
toggling is required
earlier we controlled
synchronous and ripple
counter ? repel
non synchronous counter
synchronous counter asynchronous
synchronous is asynchronous
asynchronous so asynchronous
counters or ripple
synchronous counter clocks
clocks are supplied
action is done
flip-flops the advantage
pulse has arrived
clock has arrived
clock is due
clock period delay
two propagation delays
four propagation delays
period that condition
problem all systems
systems use flip-flops
flip-flops and counting
mode of counting
hardware and gates
put two input
previous and gate
flip-flops the synchronous
synchronous counters non
counters non synchronous
non synchronous counters
synchronous counters asynchronous
counters asynchronous counters
asynchronous counters ripple
counters ripple counters
counters basically flip-flops
counter and terminating
power n states
count and end
synchronous or asynchronous
counting ? counting
intention of starting
starting sequential circuits
element to store
flip-flop a flip-flop
store one bit
bit in practice
8-bits sixteen bits
bits thirty-two bits
code ascii code
translate your alphabets
alphabets and numerals
numerals into binary
bit for parity
parity so 8-bit
store that code
8-bit eight flip-flops
memories using single
circuits or devices
combination of flip-flops
digital books register
bunch of flip-flops
flip-flops a group
group of flip-flops
storage and data
flip-flop is good
controlled by single
clock to connect
connect one power
supply to connect
flip-flops need vcc
edged triggered positive
positive or negative
clock is connected
show the clock
put any data
put this data
put this information
information and clock
memory in order
inputs get stored
design a clock
piece of hardware
designing a sub
common entity suppose
big digital system
huge digital circuit
require clock pulses
pulses for operation
clock is generated
generated and distributed
units this clock
data and remove
remove it suppose
put another data
data that means
pulse will overwrite
overwrite my data
pulse will put
put this random
random junk thing
data gets corrupted
store the data
period the data
control called load
load is active
clock pulse arrives
load will put
two more reserve
synchronous and asynchronous
asynchronous synchronous load
synchronous load means
means the load
data asynchronous means
load pulse arrives
arrives whatever data
conditions we talked
choice of synchronous
load or asynchronous
load is removed
removed the store
rate much faster
microseconds if load
microsecond the data
microsecond my storage
data after hundred
find junk inside
put this load
remove this load
removed arbitrary random
arbitrary random values
reading the data
pulse and capture
set of data
clear a flip-flop
control called clear
removes the data
makes the data
remove the data
data or make
input automatically irrespective
flip-flops will assume
pulse or independent
clear will work
call it asynchronous
bunches or groups
groups of flip-flops
stored and read
load new data
data is destroyed
change the value
value i put
set of value
convenient control inputs
design larger systems
counters thus data
application of flip-flops
applications data storage
division by factor
application but data
data is put
put and cleared
inputs called data
data and clear
clear in addition
data or clear
clear the data
generally not true
registers get cleared
frequency is desired
system will decide
decide the clock
point in storing
first d flip-flop
clock them synchronous
asynchronous or repel
putting the data
connecting the output
data i put
pulse that data
data will shift
initially i put
data i call
call this initial
call this input
in2 second input
shifting the data
arrangement of flip-flops
sense it shows
data from flip-flop
4-bit shift register
stands for shift
show individual connections
flip-flops have outputs
load a value
start shifting shifting
load the flip-flops
clear the flip-flops
flip-flops i start
pushing in data
option of serial
serial load parallel
load parallel load
load or serial
serial input parallel
input parallel input
parallel input likewise
redraw the flip-flops
output at serial
serial output last
output last output
out and parallel
case of registers
put parallel data
features in shift
flip-flops and make
set of values
values by putting
values and loading
clearing or loading
start the clock
pulse the clock
clock will shift
shift the output
out that means
four different combinations
combinations of operations
serial in serial
serial in parallel
parallel in serial
parallel in parallel
serially take output
serially one bit
clock pulses equal
case four clock
pulses whatever data
4-bit shift registers
8-bit shift register
serial out mode
out mode number
delay is equal
equal to number
times the clock
clock pulses delay
flip-flops eight clock
clock periods delay
periods delay serial
serial input data
serial to parallel
input data coming
assume ascii code
ascii code 8-bits
transmit one bit
supplying the ascii
ascii that keyboard
including the parity
bit keep coming
application where serial
input parallel output
parallel output parallel
output parallel output
required for processing
processing whereas serial
dial up modem
pair of lines
generation of data
send a mail
output your computer
process in parallel
medium is serial
convert my parallel
data into serial
serial mode data
data and send
back into parallel
things are covered
covered ; serial
output and parallel
parallel input serial
input serial output
examples are modems
finally this parallel
out is similar
disable the load
question of shifting
shifting my shift
normal register operation
converting parallel data
serial into parallel
talked about shifting
connection the output
connected to input
left shift flip-flop
shift left shift
left shift register
register and shift
shift right shift
right shift register
input as data
serial data output
parallel data output
buy a shift
shift left 4-bit
left 4-bit shift
register with serial
input and serial
shift left feature
shift right feature
serial in feature
serial out feature
parallel in feature
feature and parallel
parallel out feature
8-bit shift registers
registers such shift
universal shift registers
shift left operation
shift right operation
operation or parallel
load and serial
reduced the width
book of flip-flops
basic storage element
application of shift
applications of shift
registers we talked
talked about flip-flops
counters and registers
registers are group
shift that data
flip-flops in counters
likewise an application
application for registers
applications of registers
storage elements shift
elements shift registers
applications i thought
shift register applications
load in feature
put through serial
clock either positive
edge or negative
negative edge doesn
shift the bits
load and clear
give parallel inputs
first you put
put a pattern
bits get shifted
exclusive or gate
gate and feed
gates is loaded
load a pattern
pulse at first
pulse one fourth
putting one initial
pattern it doesn
uplift clock pulse
pulse the bits
shifted one bit
bit is added
clock second clock
clock third clock
fourth fifth sixth
sixth seventh eighth
seventh eighth ninth
eighth ninth tenth
tenth eleven twelve
eleven twelve thirteenth
twelve thirteenth clock
thirteenth clock fifteenth
clock fifteenth clock
fifteen clock pulses
frequency of repetition
repetition is fifteen
fifteen clock durations
durations after fifteenth
fifteenth clock pulse
pulse the original
pattern is restored
pseudo random noise
random noise generator
call it pseudo
pseudo random generator
pattern you put
put a bit
sending and receiving
pseudo random sequence
random sequence generator
generation of noise
check the transmission
start sending data
data i check
change that means
fifteen different patterns
patterns will arise
arise the sequence
pseudo random pseudo
random pseudo random
pseudo random means
random means semi-random
give the initial
pattern and send
sorts of variations
simple test design
testing the system
establishing the reliability
sending the transmission
purpose of explanation
call these flip-flops
showing this drawing
separately also doesn
output of first
input of first
pulse this output
pulse i put
clock pulse shifts
sixth clock pulse
cycles of clock
draw the waveforms
clock clock clock
clock time axis
pulses and low
pulses and high
pulses it repeats
first two clock
first three clock
show the timing
pulses will remain
dividing this clock
period is equal
times the period
clock or multiple
times the system
system clock period
call this system
two successive waveforms
original clock period
period between successive
suppose i turn
turn on lights
lights and turn
turn off lights
multi phase clock
counter ? counter
counter will give
clock pulse divide
divide the clock
frequency is divided
counter we twist
counter the output
fourth and output
output of fourth
exercise you connect
counter a counter
counter or recirculating
recirculating shift register
register they call
twisted pair ring
pair ring counter
recirculating shift registers
fed as serial
ring counter put
pattern and connect
twisted ring counter
multiple phase clock
phase clock generation
phases this counter
commonly for multiple
multiple phase generation
duration one period
period another clock
periods and suppose
period but remains
half the clock
period it starts
generate these waveforms
bar so similar
clock period total
period total clock
times the original
bar ab bar
bar and fourth
bar c complement
case the first
showing c bar
showing a bar
clubbed to form
form a bar
variety of choices
light on overlapping
period first light
johnson s counter
counter or twisted
stage and shifted
applications we started
parallel to serial
serial converter suppose
suppose the serial
data is coming
examples of data
coming through telephone
lines in bit
computer generated data
parallel data bytes
bytes or words
serially and send
converter and serial
important building block
combinational building blocks
building blocks flip-flops
build shift registers
shift registers shift
registers shift register
frequently used component
serial and serial
parallel and things
completing the discussion
blocks in combinational
talk of systems
blocks like gates
blocks of sequential
application and developed
registers and shift
case of gates
blocks of gates
gates and developed
lots of things
combinational basic building
blocks are gates
gates and sequential
blocks or basic
blocks are flip-flops
things to build
type of complexity
define a system
system to synthesize
minute and stay
start from gates
gates and finished
things like multiplexers
multiplexers and decoders
combination of building
building blocks switched
switched to sequential
sequential in order
order to give
combinational and sequential
sequential basic tiles
block i told
told you basic
generally we define
systems as small
small scale ics
made of silicon
call it met
semiconductor filed effect
filed effect transistor
transistor or bjt
bjt bipolar junction
bipolar junction transistor
components like resistors
resistors occasionally capacitors
things you build
build a basic
basic building block
things are integrated
circuit is integrated
small single piece
piece of silicon
lots of means
crude term today
done by chemical
process but today
lithography using lasers
surgery earlier people
back but today
done by precision
transistors and gates
gates and things
technology has grown
places and formed
general integrated circuits
active and passive
passive active components
components are transistors
components are resistors
easy to make
make but passive
values and inductors
integrated components integrated
components integrated circuits
circuits are classified
classified into small
small scale integrated
scale integrated circuits
medium scale integrated
large scale integrated
circuits a small
scale integrated circuit
circuit a gate
couple of resistors
unit of gate
gate you call
ten gate functions
function of ten
suppose you draw
draw a simple
simple combinational logic
combinational logic circuit
logic circuit system
system few gates
small scale integration
approximately thumb rules
rules nobody defines
numbers like planck
idea of complexity
nt mean thousand
gates you put
people use ulsi
ultra large scale
falls between vlsi
vlsi and ulsi
basically a structure
blocks and combinational
combinational or sequential
classified as small
small scale circuits
gates the functional
functional complexity increases
understood the basic
building blocks bricks
bricks to build
build the subsystems
scale like multiplexers
4-bit full adder
similarly a 4-bit
register may qualify
level and design
100,000 gates connected
levels of abstractions
level of abstraction
talk about msi
meaningful in sense
sense of system
basically smaller systems
systems to start
two bigger systems
start with small
small circuits digital
circuits digital circuits
encoders and decoders
lecture two lectures
lectures we talked
talked about multiplexers
multiplexers in detail
blocks or functional
units in designing
designing a combinational
combinational logic today
decoder so first
number of bits
expands it back
inputs is active
high or active
process of encoding
encoding encoding reduces
reduces the possibilities
number of inputs
sixteen to four
four so compressing
compressing the data
case we talk
talk of priority
input is active
build some rules
type of msi
inputs are low
low the output
encoding my question
input is high
highest binary value
lowest binary value
scheme you make
make the rule
build the circuit
inputs have priority
priority that means
process of reducing
reducing the number
bits into smaller
loss of data
highest order bits
making o5 high
possibilities are required
run eight lines
lines from inputs
inputs to outputs
running eight lines
lines and finding
send three lines
code a coded
output will decode
bits to find
out which input
data is compressed
compressed eight lines
input being high
encoder the priority
priority scheme built
recognized and coded
combinational logic design
design combinational logic
build these gates
draw a truth
make a truth
combination will make
make o0 high
inverter i told
sort of universal
encoder and decoder
nand gates universal
gates universal gates
combination of gates
equivalent gate functions
fifteen or twenty
number of outputs
outputs and priority
priority schemes built
integrated circuit msi
msi our aim
last few lectures
integrated circuit components
design a combinational
logic using decoder
terms are generated
generated the question
make a circuit
realize a function
function f sigma
times 1-bit full
1-bit full adder
full adder min
adder min terms
full adder sums
realize a full
multiplexer to start
thing with decoder
mapped and output
put i0 inside
scheme of realizing
realizing a combinational
out of abc
out f sum
msi concept medium
concept medium scale
integrated circuit replacing
replacing the bunch
bunch of gates
availability is limited
straight cut method
method for doing
heuristic method sort
identify the hardware
extra hardware required
reduced in terms
number of ics
drastically reduced saving
reduced saving space
stressing on right
right from beginning
bare bone sort
input output specification
order of voltage
suppose you buy
buy an led
type of led
type of current
gate level electrical
level electrical specifications
replace this logic
logic by components
adequate in terms
signal called enable
signals in flip-flops
simple analysis understanding
introduce a signal
signal ? enable
signal the active
put a bubble
signal it means
means the signal
signal is active
tied to ground
ground in electronic
means if enable
enable is low
encoder is true
true if enable
enable is high
connect the enable
enable to ground
behave as expected
encoders have enable
decoders have enable
required for controlling
put it back
affect the rest
equivalence of removing
removing and putting
putting it back
back when enable
equivalent to keeping
equivalent to removing
things are required
designs are complex
requires certain paths
draw a circuit
circuit and show
simply say enable
bar so people
bar which means
operation so enable
operation and enable
electrical open circuit
define a term
defined a term
tri-state operation output
operation output tri-states
postponing these things
things the output
output is tri-stated
output high impedance
output impedance high
high impedance state
impedance state high
state high impedance
high impedance means
impedance means impedance
electric magnetic circuits
put hundred mega
hundred mega ohms
equivalent to open
circuit for practical
mathematicians may argue
engineers not mathematicians
implementations therefore high
means the output
class and disconnect
function called tri-state
tri-state gate function
put in output
g2a and g2b
g2b where g2a
g2b are active
numbers in fact
inputs eight outputs
enables that means
circuit normal operation
times of view
occur as required
outputs are tri-stated
outputs are high
high impedance states
impedance state capitalize
state z state
state means high
means high impedance
state for digital
state it means
means a high
outputs are active
put the enables
representation of circuitry
active low outputs
occurs the combination
occurs after enable
connected the enables
ground and power
connected to high
connected to low
power supply connected
done that suppose
suppose i give
bar and bubble
bubble are redundant
active high outputs
change this design
bar m2 bar
bar m6 bar
bar m4 bar
bar m7 bar
sum so sum
sum is nand
nand so connect
sum for full
out so carry
assuming the outputs
proper power supply
power supply voltage
voltage in ground
remember the details
things an input
input or output
low or high
high where low
gate the tri-state
states tri-state gates
states the signals
signals of tri-state
states ; low
high and high
tri-state was long
long ago coined
coined by national
semiconductors a major
major semiconductor manufacturer
term was patented
find in text
books freely tri-states
careful to write
write three state
court and file
file a patent
patent violation case
word was coined
two state gate
make it high
input called enable
table becomes true
true or normal
find a circuit
nt always assume
data sheet today
sheet in fact
inverter i gave
thing can apply
enable in principle
low and gate
high whatever inputs
inputs you give
high impedance output
sources of data
data or control
source of data
determining this gate
interfere that means
means this output
circuit all feeding
remove this ics
low where low
means practically ground
push this high
gates will put
gates are tri-state
control the circuit
circuit which means
circuits the enable
feature in multiplexers
multiplexers all ics
ics especially msi
msi and lsis
lsi will sit
vehicle that transports
people can join
signals can join
msi and lsi
complex in design
lot of people
person is allowed
allowed to talk
practically covered lot
lot of grounds
case of msi
lsi the basic
concept of msi
msi based design
gate based design
design the advantage
replace the tons
tons of gates
advantages in terms
speed of operations
operations and performance
talked about mux
mux and decoder
two major components
components in msi
msi in design
hardware we talked
low and active
talked about enable
enable feature controls
controls the operation
circuit is disabled
state the high
high z state
lsis large scale
make a simple
mappable or non-mappable
make a large
mention that msi
combinational logic circuits
combinational logic building
logic building blocks
counter a 4-bit
full adder msi
exclusive or gates
gates for add
gates it qualifies
functionally small scale
couple of gates
gates including clock
make a 4-bit
4-bit full adders
adders are adder
type of things
finish the programmable
aspect of combinational
combinational logics large
logics large scale
circuits the programmable
devices called plds
plds where pld
stands for programmable
programmable logic device
talking about plds
plds programmable logic
programmable logic devices
back to revisit
revisit the msi
msi sequential circuits
implementing the sequential
digital circuits
systems prof
srinivasan department
electrical engineering
engineering indian
indian institute
technology madras
madras lecture
digital systems
physical parameter
temperature variation
light intensity
intensity variation
real life
speech signal
sound signal
typical signal
signal processing
processing scenario
engineering domain
electrical signals
means variation
electrical quantity
seismic earthquake
earthquake activity
electrical variations
physical parameters
converts non
electrical signal
signal varies
varies continuously
signal voltage
voltage level
minimum value
maximum value
analog signal
signal analog
analog quantity
limit defined
discrete instance
thirty minutes
definite instance
signal suppose
equal intervals
starting point
continuously varies
defined limits
specific intervals
continuously monitor
continuous variation
defined points
initial value
entire signal
processing involved
variation sake
clock yesterday
clock today
temperature reading
reading store
clock temperature
infinite number
level tomorrow
level sot
continuous amplitude
amplitude variation
specific amount
specific number
discrete levels
input signal
reproduction depend
signal present
discrete level
digital signal
total number
signal value
prior understanding
nearest lower
lower level
nearest upper
upper level
smaller number
fewer digits
fewer levels
hot today
cool today
digital domain
analog domain
physics lab
lab make
needle moves
large meter
minor sub-divisions
accuracy built
observation power
levels permitted
analog meter
inaccuracy built
precise meter
large range
range subdivided
sub regions
mistake supposing
smaller sub-divisions
possibility improves
precise instrumentation
precise instrument
analog signals
signals likewise
digital instruments
application required
digital analog
potential inaccuracy
extra hardware
extra precise
precise instruments
hardware put
levels means
instrument implementation
analog electronics
electronics poe
poe principles
specific applications
digital signals
digital processing
digital representation
degree intervals
infinite levels
transducer reverse
reverse transducer
loud speaker
signal makes
picture tube
home television
television receiver
digital path
improve accuracy
precise hardware
minor reason
real reason
analog value
analog voltage
store voltage
capacitor supposing
transmitting analog
receiving end
end receives
transmission part
noise added
transmitted signal
minimum number
lowest level
digital transmission
analog transmission
predefined levels
marginal thing
perfect transmission
noise performance
reproduce values
accuracy depends
accurate accuracy
good reason
digital case
lower order
order values
meter works
current carrying
carrying coil
accurate measurement
sensitive coils
sensitive analog
effort hardware
hardware wise
similar hardware
digital system
analog system
analog improvement
improvement accuracy
improved accuracy
accuracy digital
digital improved
accuracy means
earlier levels
foot ruler
inch calibration
nearest millimeter
millimeter calibration
analog systems
accurate system
accurate systems
accuracy improvement
levels give
meaningful measurements
accurate measurements
analog compared
means storage
signal handling
signal doesn
digital world
good tempting
tempting thought
life signals
heart rate
ecg waveforms
person dying
analog people
digital people
today technology
digital cost
weak signals
signal convert
digital preprocess
store measure
processing today
technology advances
dominant today
system today
design ninety
proper signal
design efforts
effort wise
analog professors
applications today
process convert
future courses
signals represented
basic building
building blocks
analysis point
building block
input output
output relationship
subject matter
combinations circuits
sequential circuits
circuits find
reverse mode
design phase
phase design
proper building
satisfactory results
digital category
nut shell
combinational sequential
sequential building
good book
digital design
cheap edition
book stores
moris mano
last twenty
twenty years
writing books
latest version
design edition
logic design
jaico publishers
design digital
basic stuff
first introductory
introductory material
good books
first level
books doesn
follow books
good practice
basic digital
today digital
advanced world
mini project
major project
digital area
reference book
good idea
stop today
detailed subject
present levels
simple gates
book read
prescribe homework
out problems
karnaugh maps
implicants today
boolean functions
logic functions
last lecture
boolean algebra
logic expression
boolean relationship
input conditions
input combinations
graphical method
systematic procedure
easy handling
automated reduction
reduction techniques
graph method
concept identify
smaller term
computerized methods
implicant methods
map method
boolean simplification
simplification today
truth table
true form
complement form
input combination
finally abc
variable map
vertical axis
true complement
complement value
true value
horizontal axis
adjacency rule
rule remember
variables change
horizontal direction
vertical direction
variable change
previous cell
adjacent cells
variables remains
formula repeatedly
formula identity
thing applies
value remains
adjacency work
backwards round
circular symmetry
rotational symmetry
adjacency applies
simplified expression
entire group
graphical representation
original function
last couple
left hand
hand side
karnaugh map
map mentioned
text books
remember abc
original truth
first row
fourth row
sixth seventh
eighth rows
number representation
essential thing
binary number
binary bit
binary bits
first value
digital things
first entry
zeroth row
sixth row
seventh row
min terms
first min
min term
max terms
proved yesterday
map yesterday
algebra today
combinations possibilities
alpha beta
beta gamma
big table
terms output
product expression
product term
standing min
product terms
terms involved
map represent
term numbers
term number
wrote yesterday
fewer literals
fewer terms
final implementation
final representation
cells differ
variable cell
adjacency works
works left
diagonally adjacency
adjacency diagonally
distributive property
single term
variable terms
simplification procedure
cells adjacent
remain constant
group adjacent
background theory
final function
final output
output compared
sixteen cells
variables simplify
simplify minimize
product representation
term form
specific system
specific circuit
sixteen rows
rows min
terms min
true outputs
expression minimum
minimum sum
product msp
expression sop
canonical sum
standard truth
table representation
product relationship
horizontal scale
vertical scale
adjacency relationship
clearer map
smallest number
smaller group
larger group
first group
cell number
physical adjacency
logical adjacency
product expressions
expressions sop
final expression
prime implicant
cells cell
prime implicants
combined earlier
essential prime
non essential
similar results
left out
out suppose
implicant prime
lecture digital
logic minimization
table filled
output true
avoid cluttering
map doesn
identify groups
simpler representation
boolean function
examples today
special cases
variables abcd
large groups
rules make
map groups
out separately
unnecessarily doing
slightly differently
small map
large map
largest group
simple reason
non epi
prime implican
variable term
efficient simplification
simplification compared
fact remains
clear case
obvious apparent
final solution
terms involving
interesting case
term outputs
word description
taking maps
first draw
first prime
function minimum
smaller implicants
larger prime
prime omplicant
simple fact
out remember
individual things
term represented
non epis
equal complexity
final simplification
include depends
variables wxyz
simple structure
table found
original circuit
table resulted
smaller circuit
mapping method
boolean functionality
functional relationship
boolean equation
identity boolean
boolean expression
expression terms
inverted wxz
gates tied
fourth term
lose track
function represented
functional description
put wxyz
condition wxyz
relationship mapping
variables xyz
systems today
micro processor
automotive system
fuel injection
complex systems
variables classroom
classroom exercises
variables abcde
last min
table m15
sixteen entries
variables bcde
map likewise
variables map
considered adjacent
entire variable
arbitrary thing
drive home
proper choice
expression based
term reading
bar part
gate structure
map identify
common cells
people draw
mathematical procedure
convenience whichever
unlimited fun
checker games
adjacency find
computer program
problem whichever
step combine
computers put
program algorithm
step program
table merge
program computer
right combination
tabulation method
computer based
based methods
books talk
people call
implicant method
books call
computer programs
map minimization
expression boolean
terms combined
sum terms
bar complement
bar expression
minimum expression
logic function
fourth rows
large number
good large
small sum
larger groups
groups give
smaller product
output false
write prime
identify prime
bar correct
problem definition
output asserted
bar output
applying demorgans
demorgans theorem
minimum form
random fashion
minimum product
sum expression
gates feeding
sum term
term represent
gate sum
term represents
larger number
mentally writing
complement knocking
procedure visualize
map sigma
term min
implicant isthese
first term
abc simple
max term
specific reason
gates fitting
condition constraint
sum form
form bar
vice versa
simple trick
logical steps
abc bar
real examples
term lists
physical relationship
physical correlation
arbitrary sum
arbitrary product
life examples
simple concept
care condition
care state
false asserted
defined means
practical reasons
care states
input giving
logical output
false output
reasonable argument
reasonable arguments
nice term
cares strewn
write terms
whichever don
extra term
reduce hardware
hardware reduction
power saving
cost saving
size saving
space saving
efficient hardware
reliable hardware
fifty percent
care terms
modified map
map modified
map reduce
unnecessary waste
care conditions
acquired output
circuit performance
occur doesn
essential epi
simpler grouping
hardware saving
normal expression
including don
feel obliged
extra nand
nand gate
gate input
extra burden
modified form
arbitrary fashion
physical device
device system
hardware relationship
simple examples
arithmetic functions
interesting thing
logic gates
logic means
means decision
logical statement
make sense
logical gate
computational intensive
basic thing
arithmetic circuit
circuit logic
arithmetic add
subsequent lectures
arithmetic gates
add circuit
subtract circuit
logic blocks
binary variables
binary numbers
carry output
arithmetic part
determine output
arithmetic operations
basic introduction
terms max
map simplification
subsequent classes
combinational logic
first design
true gates
gate circuit
logic circuit
lectures digital
additional control
single bit
bit data
single input
data input
input nand
flip-flops output
memory state
frequent change
desirable behavior
nice idea
input condition
present state
complementary state
clock period
active period
propagation delay
practical solution
master slave
slave concept
slave operation
input gates
gates remember
gate combination
basic structure
identical flip-flop
clock input
external input
external inputs
identical stage
similar stage
intermediate outputs
output stage
extra stage
feedback flip-flop
discussed yesterday
clock cycle
normal operation
extra input
feedback input
input gate
change state
racing condition
nand gates
constantly changing
previous state
original clock
output fed
local change
stage clock
first stage
input stage
slave combination
master flip-flop
clock slave
master clock
slave flip-flop
master output
positive edge
slave clock
high slave
clock pulse
pulse period
previous circuit
lecture constant
constant toggling
toggling mode
controlled change
uncontrolled change
unreliability undefined
undefined performance
uncertain performance
racing problem
extra flip-flop
slave configuration
clock connected
face inversion
toggling output
additional toggling
toggling facility
reset state
toggle means
previous value
nth clock
design counters
counters toggling
toggling property
means introduce
simple data
data bit
extra gate
feedback extra
output complementary
previous clock
slave mode
clock high
value stored
data stored
store data
data storage
master takes
half period
slave takes
stage data
toggling action
storage purposes
popular flip-flops
internal feedback
internal inversion
single hardware
bar outputs
internal clock
power supply
vdd depending
bipolar transistor
transistor technology
cmos technology
power source
source power
active circuit
flip-flop type
toggle input
toggle state
characteristic table
output remains
value complemented
toggle flip-flop
slave hardware
thing effort
gates hardware
high speed
low power
low cost
small size
flip-flop duplicate
fastest rate
single flip-flop
hold term
discussion today
delay involved
input faster
total delay
includes propagation
extreme cases
speed applications
newer circuits
cutting edge
edge technology
technology cutting
edge application
theoretical point
clock faster
things including
limiting factor
limiting speed
extra things
things coming
important racing
bad thing
unpredictable performance
edge triggered
triggered technique
bit extra
entire duration
edge triggering
level triggering
enabling function
enabling role
high clock
enabling gate
gate enabling
function speaking
high flip-flop
flip-flop works
flip-flop remains
normal flip-flop
flip-flop output
gate function
slave remember
non master
period based
technical term
change occurring
clock transition
transition occurs
triggering operation
reference point
rising edge
falling edge
negative edge
positive logic
flip-flop sensitive
input occurs
input terminals
edge transition
edge occurs
triggered flip-flop
flip-flop likewise
negative transition
edge points
output based
positive transition
transition occurring
edge occurring
edge flip-flop
level triggered
racing occurs
triggered flip-flops
flip-flop operation
extra logic
logic built
original flip-flop
slave flip-flops
toggling condition
toggling conditions
storage application
data flip-flop
fast rate
change correspondingly
extra modification
extra gates
great thing
variation occurs
connected nand
back nand
nand latch
gates connected
input doesn
reading exercise
books standard
latch edge
logic involved
first locate
final latch
latch input
designed makes
reading assignment
standard text
text book
circuit diagram
clock waveform
flip-flop clock
regular clock
clock generation
standard circuits
uniform periods
term duty
duty cycle
total period
high period
clock remains
total clock
cycle duty
negative regions
non fifty
percent duty
arbitrary clock
triggering mechanisms
edge level
flip-flop first
simple level
sensitive flip-flop
sensitive output
arbitrary waveform
things changing
high changing
flip-flop completely
sensitive level
entire flip-flop
flip-flop behaved
transition shows
clock edge
clock continues
triggered mode
low continues
high continues
transition reflects
mode level
level sensitive
clock inverted
slave output
output continues
slave likewise
change inputs
taking care
inputs change
change happened
change occurred
input change
temporary pulses
flat waveform
output devices
narrow pulse
small portion
portion fraction
narrow pulses
flip-flop serves
input affecting
avoiding racing
clock output
ignore glitches
output transition
transition takes
takes place
output change
clock changing
entire clock
clock transits
output remain
triggered output
edge trigger
pulse middle
give input
logic applies
negative edges
positive edges
slave waveform
clock invert
inverted clock
storage element
bit storage
control pulse
clocked latch
condition made
introducing master
triggered concept
characteristic tables
simple thing
data clock
storage data
toggling feature
put clock
triggered clock
clock level
knife edge
bubble stands
separate symbol
slave behaves
output toggles
present output
past output
present clock
high level
level voltage
identical point
clock periods
positive half
clock frequency
toggled flip-flop
mode toggle
toggle mode
clock divide
half clock
input clock
frequency divider
large frequency
simple general
general knowledge
knowledge question
waveform supposing
first clock
first flip-flop
clock pulses
drawing waveform
draw waveform
sixteen clock
clock cycles
tenth clock
pulse counting
11th clock
fifteenth clock
thirteenth clock
sixteenth clock
modulo counter
counter modulo
pulse starting
power pth
pth pulse
factor clock
clock division
person coming
counter sequence
counters based
binary counter
binary values
decimal counter
arbitrary value
count dozens
count non
people leave
flip-flop divides
stacking flip-flops
connecting series
counting depends
distinct states
bit counter
count starts
complementary outputs
flip-flop states
flip-flops depending
counting events
last state
full cycle
extra mechanism
mechanism required
active devices
bipolar transistors
mos transistors
transistors inside
circuit details
gate level
level detail
active component
mos devices
ground depending
nomenclature leaving
inputs power
inputs defined
pst stands
clr stands
clear input
preset input
inverted input
active low
low input
required thing
active high
high input
electronic circuit
circuit parlance
parlance overrides
overriding input
input likewise
output means
happen irrespective
overriding inputs
overriding property
preset clear
clear table
flip-flop functions
past high
normal functioning
flip-flop acts
behavior depends
pre-overriding input
permitted don
design make
intermediate point
preset inputs
clear inputs
normal sequence
arbitrarily counter
significant bit
count reaches
clearing operation
preset clearing
full clock
reaches assuming
presetting process
clearing process
small glitch
previous lectures
narrow variation
short duration
duration output
output variation
clearing circuitry
circuitry involved
clock count
narrow period
detect state
msb flip-flop
lsb flip-flop
momentary short
duration count
clear suppose
flip-flop reaches
arbitrary starting
arbitrary ending
ending point
total maximum
maximum number
first count
maximum count
count people
count events
count things
transient state
first counter
first cycle
starting value
circuit settles
initial state
initial portion
linear circuit
steady state
stable state
latency digital
digital terminology
terminology digital
digital parlance
common word
circuit starts
in-built latency
high crystal
crystal frequency
clocks run
redundant crystal
watch chips
watch chip
integrated circuit
high frequency
frequency stable
stable source
crystal oscillator
build crystals
high frequencies
stable frequency
wrist watches
good watch
original crystal
crystal clock
frequency megahertz
hour display
minute display
frequency clock
count seconds
sixty cycles
clock exact
exact frequency
number finally
seconds make
minutes make
megahertz clock
frequency divided
right numbers
inherent delay
duration depending
small delay
small amount
short pulse
initial stage
clocking stage
latching stage
final amount
propagation delays
data sheet
flip-flop stage
flip-flop propagation
flip-flops delay
count takes
maximum propagation
flip-flop stages
stages required
insignificant part
large clock
speed faster
maximum clock
counter faster
count settles
case reliability
small number
low frequency
oscillator stable
stable oscillators
megahertz range
fast events
small events
atomic events
events happen
large value
counter fails
ripple counter
counter suffers
clock doesn
clock accumulates
accumulates delay
count ripple
counter files
total propagation
practical electronic
delay approaches
reliable circuit
exact values
value end
important things
application systems
synchronous counter
problem ripple
delay affecting
flip-flops receive
clock ripple
stable clock
previous count
flip-flops change
toggle flip-flops
intermediate counts
first flip-flops
synchronous counters
ripple counters
flavor exercise
decimal counters
shift registers
discussing counters
counter design
arbitrary count
ripple configuration
flip-flop drove
flip-flops play
desirable thing
flip-flops increases
total count
count increases
repel counter
counter increases
stable count
counting period
system clock
flip-flops toggle
binary sequence
desired sequence
natural binary
flip flip-flop
output compliments
flip-flop input
pulse applied
pulse appears
clock arrives
toggling operation
alternate pulse
fourth clock
fourth position
3-bit counter
fourth flip-flop
flip-flop toggle
previous flip-flops
queue controlled
flip-flop received
lower frequency
frequency clocks
action slower
slower rate
slower compared
asynchronous counters
previous output
counter clocks
period delay
long chain
individual flip-flop
counting mode
synchronous mode
counters non
counters ripple
counting starting
original intention
design memory
bit flip-flop
code ascii
ascii code
binary code
extra bit
8-bit code
building memories
single flip-flops
devices sold
digital books
books register
4-bit register
single clock
supply voltage
require clock
connected likewise
sub system
common entity
entity suppose
big digital
huge digital
digital circuit
functional units
control independent
independent control
short period
removed data
removed means
arbitrary values
random combination
random junk
junk thing
stored data
load control
internal circuit
pulse arrives
reserve operations
synchronous load
load means
asynchronous means
load pulse
clear conditions
asynchronous load
hundred microseconds
first microsecond
original data
random values
find junk
junk inside
junk value
original values
arbitrary random
data likewise
clear removes
clear makes
synchronous clearing
clear pulse
asynchronous clear
value load
convenient control
control inputs
larger systems
major application
applications data
input data
shift register
clock supplied
clear applied
asynchronous counter
flip-flop suppose
initial data
input value
shows data
4-bit shift
individual connections
serial output
start shifting
shifting shifting
serial load
load parallel
parallel load
serial input
input parallel
parallel input
last output
parallel out
parallel data
main operation
applying clock
bits out
minor operation
arbitrary number
delay element
out mode
mode number
flip-flops times
pulses delay
periods delay
parallel conversion
data coming
assume ascii
code 8-bits
8-bit shift
serial connection
ascii including
parity bit
parallel output
output parallel
telephone modem
telephone line
serial mode
mode data
input serial
register operation
normal register
powerful device
converting parallel
proper connection
taking output
left shift
shift flip-flop
shift left
right shift
serial data
data output
shift right
left feature
right feature
clearing feature
loading feature
out feature
universal shift
left operation
right operation
inside inside
basic storage
latch connected
parity generators
parity checkers
registers registers
shifting feature
prominent applications
memory storage
storage elements
elements shift
register applications
edge doesn
clear features
parallel inputs
fresh input
initial pattern
arbitrary pattern
uplift clock
bit position
starting pattern
seventh eighth
eighth ninth
ninth tenth
clock fifteenth
fifteen clock
clock durations
original pattern
sixteen possibilities
fifteen patterns
pseudo random
random noise
noise generator
random generator
verification pattern
bit pattern
random sequence
sequence generator
sending data
receive data
fifteen words
random pseudo
random means
completely random
test pattern
important applications
simple test
test design
initial test
first pulse
pulse shifts
sixth clock
clock clock
separate clock
phase difference
multi-phase clock
multiple phase
successive waveforms
successive clocks
sequence suppose
multiple phases
multi phase
phase clock
pulse divide
flip-flop frequency
similar thing
assignment exercise
ring counter
last flip-flop
recirculating shift
twisted pair
pair ring
counter put
twisted ring
johnson counter
phase generation
lights turning
lights turned
draw waveforms
period total
complement operations
first light
basic modification
stage fetched
right depending
serial converter
converter suppose
giving examples
telephone lines
bit form
computer generated
generated data
data bytes
parallel converter
important building
sequential system
combinational building
blocks flip-flops
build counters
build registers
build shift
registers shift
combinational domain
gates gates
flip-flops application
developed counters
developed adders
combinational basic
build subsystems
order type
build systems
finished gates
programmable arrays
blocks switched
sequential basic
basic tiles
lego block
build castles
define systems
small scale
scale ics
integrated circuits
single circuit
sense gate
basic component
transistor mosfet
semiconductor filed
filed effect
effect transistor
bjt bipolar
bipolar junction
junction transistor
extra components
occasionally capacitors
small single
single piece
silicon crystal
means etching
crude term
term today
chemical process
precision required
electron beam
molecular beam
precisely cut
earlier people
precision beams
laser beams
active components
passive components
precision values
integrated components
components integrated
scale integrated
medium scale
large scale
ten gates
equivalent function
gate functions
simple combinational
circuit system
scale integration
approximately thumb
thumb rules
thousand gates
today people
big falls
scale circuits
functional complexity
complexity increases
blocks bricks
full adder
msi functions
large circuit
higher levels
higher level
system design
smaller systems
bigger systems
small circuits
logic today
encoder assuming
active input
encoding encoding
encoding reduces
inputs required
priority encoding
highest binary
binary value
lowest binary
lowest order
higher inputs
means supposing
encoding process
complimentary operation
decoding operation
highest order
order bits
encoding operation
coded information
sending side
compression data
length requirement
priority scheme
expansion scheme
priority encoder
normal encoder
scheme built
multiplexers helped
gate design
gate realization
gates finally
universal combination
gates universal
universal gates
equivalent gate
twenty depending
inputs number
priority schemes
schemes built
circuit msi
circuit components
combinational circuits
hardware encoder
straightforward procedure
mapping procedure
straightforward case
adder min
adder sums
simple scheme
fco carry
msi concept
concept medium
circuit replacing
mapping process
hardware availability
straight cut
cut method
heuristic method
method sort
intuitive method
input requirements
hardware required
equivalent msi
saving space
bare bone
bone sort
practical issues
output specification
data sheets
current levels
electrical specifications
physical design
enabled class
enable signal
extra signals
logical design
simple analysis
analysis understanding
negative signal
bubble signal
represents ground
electronic circuits
decoder encoder
ics multiplexer
enable signals
back suppose
electrical equivalence
complex designs
operations requires
enable bar
people understand
abnormal operation
electrical open
open circuit
tri-state operation
operation output
output tri-states
output impedance
high impedance
impedance state
impedance means
means impedance
electric magnetic
magnetic circuits
hundred mega
mega ohms
practical implementations
tri-state gate
practical decoder
circuit works
remember numbers
control signals
impedance states
state capitalize
state means
accepted nomenclature
practical note
g2a g2b
low outputs
combination occurs
problem make
supply connected
excluded operation
high outputs
adder circuit
inputs likewise
practical things
proper power
low means
high means
tri-state meaning
tri-state gates
national semiconductors
major semiconductor
semiconductor manufacturer
state buffers
company literature
patent violation
violation case
user tri-state
simple inverter
state gate
high impendence
enable input
enable concept
sheet today
manufacturer search
fellow give
high state
important development
digital hardware
gate works
impedance output
control functions
circuit description
good solution
practically ground
high voltage
feature built
enable inputs
common feature
msi lsi
transports lot
bus refers
common bus
outputs feed
common signals
bus operations
covered lot
basic concept
msi based
based design
simple hardware
attendant advantages
power consumption
hardware feature
design procedure
major components
enable feature
feature controls
larger circuits
simple circuit
logic circuits
logic building
4-bit full
adder msi
gates including
including clock
put flip-flops
full adders
adder subtracters
talked counters
msi circuits
programmable aspect
combinational logics
programmable devices
pld stands
programmable logic
logic device
logic devices
msi sequential
counter register
sequential logic
digital
circuits
systems
prof
srinivasan
department
electrical
engineering
indian
institute
technology
madras
lecture
introduction
signals
signal
variation
physical
parameter
temperature
speech
speak
video
light
intensity
processed
end
stored
lot
processing
real
life
microphone
give
amplified
out
speaker
sound
typical
scenario
domain
talk
means
quantity
voltage
current
function
defined
change
value
naturally
occurs
illumination
television
seismic
earthquake
activity
first
convert
variations
mechanical
parameters
transducer
sort
device
converts
non
output
transducers
define
interests
limits
instance
varies
continuously
level
plot
number
values
limit
minimum
call
maximum
vmax
two
range
instant
make
measurement
immediately
measure
remaining
analog
process
discrete
suppose
monitor
system
minute
hour
thirty
minutes
discretize
vary
definite
put
equal
intervals
starting
point
explain
easier
long
interested
takes
specific
subset
problem
cases
continuous
finally
micro
microseconds
nanosecond
observe
input
observer
observation
points
supposing
initial
allowing
difficulty
representing
limitations
digits
calculator
represent
meaningful
theoretically
levels
transmit
entire
meaning
picked
converted
amplifier
brings
involved
sake
don
stare
nice
changing
watch
sitting
watching
wave
ocean
beach
sit
waves
fun
relaxation
store
things
pick
yesterday
today
clock
reading
hotter
accurately
infinite
limited
channel
send
directly
receive
reproduce
safely
tomorrow
sot
start
originally
amplitude
introduce
discretization
amount
control
record
reproduction
depend
present
crude
four
introduced
accuracy
transmission
addition
write
depending
narrow
broad
ranges
total
steps
decided
prior
understanding
round
nearest
lower
upper
case
represented
smaller
intended
fewer
storing
divide
expect
find
hot
cool
easy
removing
required
flexibility
increasing
improve
transmitting
application
decide
physics
lab
representation
needle
moves
stays
interpret
guess
accurate
large
meter
minor
sub-divisions
doing
built
power
legalizing
making
official
permitted
approximate
systematic
talking
inaccuracy
precise
subdivided
sub
regions
mistake
possibility
improves
putting
instrumentation
instrument
measuring
measurements
likewise
instruments
based
advantage
potential
improved
extra
hardware
money
words
car
right
improving
earlier
cost
terms
implementation
difference
dealing
electronics
poe
principles
learn
applications
deal
digitally
basically
nature
generated
jumps
degree
jump
force
cognizance
fact
similarly
thing
back
reverse
loud
makes
picture
tube
home
receiver
shadows
movements
addicted
conversion
path
provision
spending
suddenly
salary
teaching
reason
manipulate
error
capacitor
charge
1.27v
measures
retrieving
1.25v
person
volts
fellow
doesn
leave
last
limitation
measured
leakage
wire
1.72v
receiving
1.75v
idea
receives
0.03v
noise
added
part
uncertainty
storage
transmitted
step
told
lowest
sending
received
recorded
effect
compared
predefined
guy
care
marginal
1.24v
referred
occasionally
type
extremities
perfect
performance
reasons
reliably
depends
truncate
stretch
imagination
chose
wanted
convinced
good
bit
giving
handle
order
sensitivity
equipment
work
works
carrying
coil
deflection
pointer
stops
sensitive
coils
increase
effort
wise
similar
struggle
slog
improvement
difficult
identical
sixteen
distance
feet
easily
foot
ruler
inches
careful
scale
inch
rule
calibration
millimeter
precision
proportional
increases
exponentially
spend
happy
double
handling
matter
world
altogether
principle
semester
tempting
thought
body
heart
rate
ecg
waveforms
monitors
hospitals
movies
dying
movie
fortunately
people
won
jobs
job
live
weak
amplify
amplification
lost
completely
preprocess
separately
combine
reproducing
flow
advances
dominant
push
design
ninety
percent
activities
ten
proper
important
done
efforts
slightly
reality
sense
misunderstand
misquote
professors
fight
colleagues
future
courses
basic
building
blocks
study
details
analysis
view
analyze
behavior
block
relationship
build
crux
subject
divided
combinations
sequential
mode
requirement
designing
requirements
connect
properly
phase
specifications
circuit
choose
satisfactory
results
types
combinational
category
nut
shell
content
sentence
formulation
books
book
moris
mano
print
cheap
edition
stores
iterations
twenty
years
writing
updating
contents
latest
version
roth
junior
fundamentals
logic
jaico
publishers
title
stuff
basics
introductory
material
scores
library
strictly
teach
cover
interesting
topic
follow
times
essence
experience
practice
complaints
studies
classroom
explained
class
page
technologically
advanced
lots
opportunities
mini
project
major
area
reference
borrow
copy
thinking
buying
buy
doubtful
browse
develop
homework
prescribe
problems
stop
lectures
detailed
simple
gates
read
understand
working
karnaugh
maps
implicants
continue
simplification
boolean
functions
talked
algebra
set
formulae
identities
simplify
expression
conditions
true
false
simplifications
supposed
graphical
method
mentioned
theory
procedure
systematized
bigger
automate
automated
reduction
techniques
graph
concept
identify
combining
reduce
term
variables
combined
saving
applied
methods
computerized
implicant
conceptually
procedures
map
truth
table
solution
repeatedly
equations
form
complement
combination
bar
abc
draw
cells
horizontally
vertically
variable
vertical
axis
cell
horizontal
possibilities
varying
correspond
familiar
happen
adjacency
remember
identity
knock
direction
previous
effectively
technique
remains
remain
adjacent
formula
retain
applies
backwards
wrapping
circular
symmetry
columns
rows
apply
rotational
differ
folding
simplified
written
group
exhausted
original
couple
classes
mark
left
hand
side
top
complete
invented
named
simply
text
entries
examples
row
fourth
sixth
seventh
eighth
included
essential
binary
digit
bits
entry
zeroth
inputs
min
symbol
small
max
capital
started
considered
proved
objective
verify
result
wrong
waste
information
list
big
alpha
beta
gamma
sum
product
sigma
remove
standing
minimize
laziness
stationery
boring
products
outputs
beginning
drop
numbers
expressed
wrote
deduce
literals
final
bottom
diagonally
appearing
appears
corresponds
common
distributive
property
merged
single
knocked
reduced
great
identified
marked
found
constan
removed
constant
convenience
extend
argument
grouping
showed
background
individual
largest
groups
whereever
question
confident
lies
arbitrarily
mind
rest
arbitrary
pqrs
msp
sop
canonical
standard
changed
situation
physically
delta
mapped
exercises
cluttered
clearer
purposely
straight
smallest
submerged
larger
include
asserted
harm
space
blank
logical
mix
expressions
pqs
pqr
prime
prs
covering
context
covered
irrespective
defining
ways
lead
hanging
redundant
minimization
drew
filled
didn
avoid
cluttering
satisfying
simpler
special
abcd
pattern
expresses
keeping
totally
rules
worry
efficient
unnecessarily
bard
bcd
differently
general
miss
brought
definitions
gave
epi
implican
drawn
obvious
clear
inefficiently
efficiently
apparent
correct
simplicity
complexity
choice
unique
aim
proclaiming
resulting
involving
wxyz
word
description
automatically
illustrate
taking
roll
day
necessarily
place
debate
omitting
concerned
options
absorbs
omplicant
uncovered
unlike
option
iii
epis
english
operator
explains
role
bring
trivial
goal
meant
structure
resulted
mapping
revisit
functionality
functional
equation
quickly
inverted
wxz
tied
gate
lose
track
expansion
requires
inverters
inventory
components
associate
previously
condition
monitoring
incidence
trigger
event
definition
drawing
test
xyz
complex
processor
controller
automotive
fuel
injection
missiles
aircrafts
dimensional
abcde
listing
minus
m15
m16
bcde
remembering
whichever
graphically
including
made
drive
identifying
operation
add
bce
mathematical
feel
comfortable
unlimited
checker
games
play
inefficient
efficiency
reaching
ordeal
exam
manage
cumbersome
computer
program
computers
algorithm
systematically
merge
redundancy
resolve
intelligent
feeding
intelligence
intervened
tabulation
extremely
programs
maxterms
patterns
sums
analogous
series
multiply
morgan
theorem
approach
implement
applying
demorgans
sides
complemented
randomly
situated
nicely
grouped
spread
random
fashion
prove
dot
represents
topology
distribution
skip
judiciously
mentally
knocking
bars
visualize
isthese
account
ambiguity
happened
equally
proceeded
fitting
constraint
redo
ago
treating
vice
versa
trick
bypassing
derivation
asked
restrictions
designed
availability
parts
matching
circuitry
designs
implementations
length
lists
correlation
move
state
occur
undefined
practical
states
count
fingers
finger
show
showing
sign
thumb
determine
affect
worried
action
coming
safe
fair
produce
reasonable
arguments
fix
fixing
enclose
longer
convenient
ditch
completed
cares
strewn
bother
literal
theme
size
reliable
fifty
marks
losing
reliability
replaced
phi
assuming
modified
unnecessary
ignore
acquired
mandatory
advantageous
separate
normal
exploit
obliged
burden
recommended
nand
fit
increased
inverter
story
shown
justify
justifying
gain
arithmetic
decision
statement
logically
computational
intensive
subtract
subsequent
adder
carry
operations
realization
tools
learnt
flip-flops
latch
flip-flop
additional
high
data
low
retained
connecting
constantly
retains
memory
frequent
disturbing
racing
desirable
complementary
provided
period
prevent
active
propagation
delay
master
slave
discussed
stage
feed
tying
duplicating
external
feedback
fed
intermediate
invert
behave
cycle
enable
importantly
stay
enabled
disabled
anytime
preventing
locally
local
closed
recognized
isolating
fluctuations
reflected
half
toggling
continues
positive
edge
delayed
pulse
controlled
uncontrolled
undesirable
eliminated
unreliability
uncertain
ran
solved
configuration
connected
face
inversion
tamed
nomenclature
memories
calling
facility
reset
toggle
odd
nth
1th
encountered
counters
summarize
clocked
affected
pass
helps
generally
purposes
popular
internal
supply
powering
ground
terminals
vcc
vdd
bipolar
transistor
cmos
source
toggles
characteristic
assume
internally
doubling
goals
speed
duplicate
fastest
fast
travel
hold
bunch
discussion
faster
catch
includes
setup
extreme
inventing
newer
cutting
theoretical
slow
involves
limiting
factor
places
approximately
delays
scheme
bad
unpredictable
triggered
modification
duration
triggering
enabling
speaking
transition
save
recognize
sample
technical
sampling
correspondingly
occurring
rising
falling
negative
voltages
volt
3.3v
shuttling
avoided
extern
free
meaningfully
environment
accessed
retrieved
restricted
modify
to1
core
leaving
exercise
locate
assignment
diagram
behaving
extended
waveform
uniform
regular
generation
periods
clocks
heard
duty
ratio
interval
assumed
mechanisms
adhered
middle
reflect
behaved
shows
easiest
reflects
inverse
initially
finds
continued
occurred
temporary
pulses
glitches
momentarily
flat
activate
mechanism
devices
portion
fraction
serves
purpose
affecting
avoiding
eliminate
frequently
transits
fall
stationary
edges
incuriously
opposite
achieved
element
timing
introducing
symbols
tables
feature
inside
arrow
knife
meets
bubble
stands
behaves
past
access
reach
frequency
toggled
dividing
divider
knowledge
answers
watches
seconds
hours
days
weeks
stages
repeated
cycles
tells
elapsed
tenth
counting
11th
counter
fifteenth
thirteenth
fourteen
counted
fifteen
sixteenth
revert
modulo
pth
division
room
door
momentary
sequence
decimal
terminate
dozens
pack
packaged
discussing
divides
stacking
serially
counts
distinct
raised
starts
looked
chain
events
full
modulos
.or
greater
flip
terminating
depicting
transistors
mos
utmost
detail
component
preset
pst
clr
activates
affective
electronic
parlance
overrides
overriding
suggests
clears
regard
determined
influence
functioning
acts
predominant
pre-overriding
detecting
clearing
detect
significant
complements
reached
reaches
cleared
wait
presetting
moment
glitch
short
neglect
alternative
clutter
msb
lsb
appropriately
allowed
ending
questions
transient
guarantee
switch
guaranteed
settle
settles
linear
transients
steady
stable
latency
terminology
delivering
in-built
crystal
run
chips
chip
integrated
derived
oscillator
crystals
frequencies
khz
megahertz
drift
wrist
shops
bazaar
rupees
wearing
morning
display
divisions
sixty
exact
multiple
mhz
disadvantage
passed
inherent
clocking
latching
subscript
compute
nanoseconds
sheet
computation
affects
8tp
materialize
million
stopping
insignificant
ntp
stressing
oscillators
stability
atomic
situations
ready
fails
ripple
suffers
accumulates
ripples
files
mathematically
approaches
fail
predict
synchronous
practically
flavor
10so
assignments
worthwhile
shift
registers
drove
repel
linearly
stabilize
wondered
independent
uniformly
currents
nt
3-bit
desired
natural
compliments
unconditionally
character
arrives
alternate
repeat
position
4-bit
3-bits
positions
remained
queue
slower
controlling
asynchronous
supplied
arrived
settled
fixed
locked
due
anymore
adequate
amply
supported
intention
main
4-bits
8-bits
thirty-two
code
ascii
translate
alphabets
numerals
parity
8-bit
alphabet
sold
market
register
connector
externally
user
edged
require
delete
piece
entity
huge
units
distributed
commonly
disturb
forever
related
overwrite
junk
corrupted
erased
disturbed
load
reserve
activated
microsecond
hundred
rewritten
disappeared
junked
enter
capture
removes
bunches
destroyed
destructive
manipulated
universal
adjustments
shorter
factors
parallely
specifically
simultaneously
bumped
moved
in2
in3
in1
shifting
arrangement
shifts
connections
serial
pushing
loaded
parallel
redraw
loading
features
freeze
supplying
keyboard
connection
telephone
modem
dial
pair
lines
line
mail
medium
modems
disable
powerful
delaying
converting
configure
commercially
width
chapters
adders
generators
checkers
prominent
elements
shifted
exclusive
fresh
uplift
repeats
ninth
eleven
twelve
repetition
durations
restored
repeating
pseudo
generator
verification
accepted
agree
check
sender
happening
secret
arise
semi-random
testing
tap
sorts
sequences
establishing
communication
established
explanation
twist
phases
multi-phase
successive
lights
turn
turned
multi
twisting
ring
recirculating
circulate
twisted
circulating
johnson
turning
switches
turns
disappearing
leds
motor
generate
imagine
clubbed
variety
choices
overlapping
kind
fetched
converter
assemble
bytes
completing
multiplexers
decoders
developed
subtracters
subsystems
act
synthesize
deviate
finished
programmable
arrays
switched
tiles
lego
castles
ics
silicon
field
mosfet
met
semiconductor
filed
bjt
junction
resistors
capacitors
etch
etching
chemical
lithography
lasers
electron
beam
molecular
precisely
cut
surgery
open
stitch
beams
laser
grown
formed
passive
diodes
fets
inductors
resistance
classified
equivalent
unit
integration
defines
planck
thousand
lsi
vlsi
ulsi
ultra
falls
100,000
opinion
understood
bricks
qualified
msi
qualify
microprocessor
300,000
boggling
higher
abstractions
abstraction
ideas
encoders
decoder
encoder
codes
expands
inactive
encoding
reduces
compressing
priority
highest
recognizer
coded
reducing
loss
complimentary
decoding
running
finding
decode
compression
compressed
expanded
helped
schemes
compress
straightforward
multiplexer
realize
1-bit
cin
realizing
fsum
fco
replacing
heuristic
intuitive
match
software
optional
correspondence
worth
drastically
bare
bone
issues
specification
250v
10kv
sheets
led
replace
expected
board
pull
equivalence
electrically
inserted
socket
co-exist
paths
abnormal
tri-state
tri-states
compulsions
postponing
tri-stated
impedance
electric
magnetic
mega
ohms
mathematicians
argue
engineers
disconnected
disconnect
meetings
enables
g2a
g2b
capitalize
remembered
note
permanently
excluded
pin
knowing
tri-stating
4.2v
coined
national
semiconductors
manufacturer
patented
buffers
sufficiently
patent
expired
freely
company
literature
court
file
violation
tri-status
history
impendence
web
website
search
confuse
development
destination
sources
determining
interfere
effective
grounded
disconnecting
lsis
bus
vehicle
transports
join
refers
coexist
roles
shut
grounds
tons
attendant
advantages
consumption
non-availability
dubitation
suggestions
mux
controls
mappable
non-mappable
throw
mention
qualifies
functionally
msis
on.first
finish
aspect
logics
plds
pld
implementing
