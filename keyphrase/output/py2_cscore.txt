mutable object::20.0
writing good docstrings::19.0195500087
makes a picture::15.8496250072
mutable objects::12.0
immutable object::10.0
looping over lists::9.50977500433
list of ints::9.50977500433
makes a list::9.50977500433
item in list::9.50977500433
good docstrings::9.0
local variable::9.0
immutable objects::8.0
test cases::8.0
computer programming summer::7.92481250361
true false false::7.92481250361
introduction to computer::7.92481250361
local variables::7.0
sunset by decreasing::6.33985000288
ints and strings::6.33985000288
false false true::6.33985000288
true true false::6.33985000288
green and blue::6.33985000288
returns an ordered::6.33985000288
lists are heterogeneous::6.33985000288
decreasing the green::6.33985000288
item = list::6.33985000288
alter the list::6.33985000288
pic and make::6.33985000288
ints ranging::6.0
list element::6.0
unit test::5.0
picture pic::5.0
boolean expression::5.0
marek janicki june::4.75488750216
testing with nose::4.75488750216
lot of work::4.75488750216
print “ person::4.75488750216
amount of red::4.75488750216
repeat an action::4.75488750216
makes the purpose::4.75488750216
clear and refers::4.75488750216
false true true::4.75488750216
takes a picture::4.75488750216
good docstrings make::4.75488750216
good docstrings describes::4.75488750216
number of instances::4.75488750216
pic and makes::4.75488750216
true false::4.0
list slicing::4.0
false true::4.0
list elements::4.0
ordered list::4.0
list june::4.0
a sunset::4.0
re writing::4.0
office hours::4.0
mutable june::4.0
global variable::4.0
assignment statements::4.0
things like images::3.16992500144
returns a value::3.16992500144
single element tuples::3.16992500144
good docstrings makes::3.16992500144
matching the substring::3.16992500144
tuples of individual::3.16992500144
false true false::3.16992500144
immutable ones june::3.16992500144
defined for lists::3.16992500144
higher dimenstional space::3.16992500144
tricky with immutable::3.16992500144
things like ints::3.16992500144
instance of value::3.16992500144
give the index::3.16992500144
test in nose::3.16992500144
elements by list_name::3.16992500144
returns a list::3.16992500144
variables are defined::3.16992500144
slow in high-dimensional::3.16992500144
make a tuple::3.16992500144
disability by signing::3.16992500144
returns the sum::3.16992500144
functions can change::3.16992500144
aliasing let pic::3.16992500144
sets the green::3.16992500144
receive a certificate::3.16992500144
object without keeping::3.16992500144
failure or error::3.16992500144
show a picture::3.16992500144
inserts the element::3.16992500144
tuesday that week::3.16992500144
beginning to j-1::3.16992500144
lists themselves june::3.16992500144
tests before writing::3.16992500144
change an immutable::3.16992500144
bunch of assignment::3.16992500144
lecture room june::3.16992500144
lists because lists::3.16992500144
min and max::3.16992500144
certificate of recognition::3.16992500144
j-1 inclusive range::3.16992500144
high-dimensional spaces python::3.16992500144
strings revisted strings::3.16992500144
i-1 because lists::3.16992500144
aliasing and functions::3.16992500144
number of tests::3.16992500144
ints so range::3.16992500144
block the condition::3.16992500144
rest is wasteful::3.16992500144
notice the quality::3.16992500144
calls a function::3.16992500144
check local variables::3.16992500144
strings can reference::3.16992500144
numbered not defined::3.16992500144
lists are indexed::3.16992500144
adds the value::3.16992500144
writing code makes::3.16992500144
element list named::3.16992500144
make a significant::3.16992500144
value and format::3.16992500144
tossing the rest::3.16992500144
referenced by tuple_name::3.16992500144
item2 in item::3.16992500144
removes the first::3.16992500144
state any assumptions::3.16992500144
week the midterm::3.16992500144
returns the length::3.16992500144
reference individual characters::3.16992500144
correct use commands::3.16992500144
lists of lists::3.16992500144
characters by string::3.16992500144
condition is true::3.16992500144
true if int::3.16992500144
functions and methods::3.16992500144
return the min::3.16992500144
statement the general::3.16992500144
sum of elements::3.16992500144
list named list_name::3.16992500144
change mutable objects::3.16992500144
instances of value::3.16992500144
questions csc 108h::3.16992500144
individual unit tests::3.16992500144
sorts the list::3.16992500144
picture and makes::3.16992500144
allowed to change::3.16992500144
string methods revisted::3.16992500144
posting your notes::3.16992500144
grid or higher::3.16992500144
code this means::3.16992500144
line of code::3.16992500144
assignment at office::3.16992500144
represent a grid::3.16992500144
local variable refers::3.16992500144
items are referenced::3.16992500144
run a module::3.16992500144
index into lists::3.16992500144
summary want individual::3.16992500144
index specified remove::3.16992500144
person to accessibility::3.16992500144
keeping the original::3.16992500144
pics are mutable::3.16992500144
regular lecture room::3.16992500144
evaluates to true::3.16992500144
functions that change::3.16992500144
takes a lot::3.16992500144
independent of eachother::3.16992500144
item in list_name::3.16992500144
ints are immutable::3.16992500144
element by element::3.16992500144
index into strings::3.16992500144
loops for item::3.16992500144
huron st suite::3.16992500144
assumptions the function::3.16992500144
class who requires::3.16992500144
character exists rfind::3.16992500144
grouping similar items::3.16992500144
item is immutable::3.16992500144
defined on strings::3.16992500144
lists are mutable::3.16992500144
making a big::3.16992500144
requires a volunteer::3.16992500144
modify a list::3.16992500144
improves through volunteering::3.16992500144
parameters are assigned::3.16992500144
lists of strings::3.16992500144
worried about aliasing::3.16992500144
string methods find::3.16992500144
counts the number::3.16992500144
objects for item::3.16992500144
nested list::3.0
first line::3.0
first june::3.0
strings june::3.0
run tests::3.0
function returns::3.0
string methods::3.0
string print::3.0
return statement::3.0
parameter clear::3.0
relational operators::3.0
robust code::3.0
return true::3.0
grammatically correct::2.0
back lists::2.0
characters min::2.0
nested lists::2.0
marek janicki::2.0
true true::2.0
bad style::2.0
error information::2.0
defined sum::2.0
consistent notions::2.0
nested loops::2.0
individual characters::2.0
element value::2.0
i-1 range::2.0
large object::2.0
unit tests::2.0
unnecessary information::2.0
list denoted::2.0
large things::2.0
re numbered::2.0
change code::2.0
lists loops::2.0
volunteer notetaker::2.0
significant difference::2.0
slice strings::2.0
first character::2.0
considered tuples::2.0
functions lists::2.0
function range::2.0
tuple tuple_name::2.0
back list_name::2.0
nose output::2.0
green june::2.0
accessibility services::2.0
students notice::2.0
related functions::2.0
global variables::2.0
design tests::2.0
initialised picture::2.0
aliasing carelessness::2.0
similar operation::2.0
big copy::2.0
right find::2.0
rerun tests::2.0
list sort::2.0
value count::2.0
recognition june::2.0
boolean expressions::2.0
i-th element::2.0
images june::2.0
define functions::2.0
condition evaluates::2.0
writing code::2.0
immutable june::2.0
first instance::2.0
held june::2.0
notetaking improves::2.0
methods len::2.0
lists june::2.0
double quote::2.0
block june::2.0
reference elements::2.0
avoid ambiguity::2.0
list python::2.0
regular lecture::2.0
block item::2.0
testing summary::2.0
explicitly state::2.0
average amount::2.0
perform operations::2.0
empty list::2.0
function works::2.0
list min::2.0
last week::2.0
volunteer note-taker::2.0
held monday::2.0
special character::2.0
multiple variables::2.0
general form::2.0
list knowlege::2.0
enclosing function::2.0
lists recall::2.0
test code::2.0
change objects::2.0
hours assignment::2.0
user input::2.0
regression testing::2.0
small things::2.0
style tests::2.0
methods append::2.0
recording the moves::1.58496250072
hard to satisfy::1.58496250072
tests this first::1.58496250072
style it makes::1.58496250072
tests each function::1.58496250072
true false true::1.58496250072
reals and booleans::1.58496250072
two main aspects::1.58496250072
specifies some kind::1.58496250072
ba1170 on june::1.58496250072
local and global::1.58496250072
individual move text::1.58496250072
variables local variables::1.58496250072
quotes quote type::1.58496250072
statement this lead::1.58496250072
counting non-prime factors::1.58496250072
general if statement::1.58496250072
running a module::1.58496250072
boolean expression recall::1.58496250072
input using raw_input::1.58496250072
statement print takes::1.58496250072
done by get_move_lst::1.58496250072
find the first::1.58496250072
unicode is larger::1.58496250072
evalutates the conditions::1.58496250072
true or false::1.58496250072
series of python::1.58496250072
float % .2f::1.58496250072
returns a string::1.58496250072
office hours held::1.58496250072
great idea note::1.58496250072
tutorials consider switching::1.58496250072
inside of functions::1.58496250072
docstring is surrounded::1.58496250072
accepted after june::1.58496250072
order it executes::1.58496250072
loop next week::1.58496250072
information that python::1.58496250072
component chunks chunk::1.58496250072
bits of code::1.58496250072
values contain ways::1.58496250072
right after writing::1.58496250072
call the smaller::1.58496250072
choose a subset::1.58496250072
loop instead python::1.58496250072
make it easier::1.58496250072
thinking about tests::1.58496250072
pad the float::1.58496250072
lot of constraints::1.58496250072
code should return::1.58496250072
easiest to fix::1.58496250072
multiple function calls::1.58496250072
testing unit tests::1.58496250072
arguments are false::1.58496250072
short and simple::1.58496250072
write specific code::1.58496250072
e-mail is quellan::1.58496250072
create a module::1.58496250072
true or returns::1.58496250072
false so test__func::1.58496250072
adapatively assign boolean::1.58496250072
functions that call::1.58496250072
hard to read::1.58496250072
call a function::1.58496250072
docstring all functions::1.58496250072
print will display::1.58496250072
hints the docstring::1.58496250072
__name__ in addition::1.58496250072
block is skipped::1.58496250072
types to strings::1.58496250072
expressions and representation::1.58496250072
weight we put::1.58496250072
python to insert::1.58496250072
write test cases::1.58496250072
body of test__func::1.58496250072
model from last::1.58496250072
methods can find::1.58496250072
code or make::1.58496250072
ideally one tests::1.58496250072
testing two main::1.58496250072
portability and updating::1.58496250072
string to return::1.58496250072
rid of double::1.58496250072
__main__ ” recall::1.58496250072
docstring for sqrt::1.58496250072
information on functions::1.58496250072
false is represented::1.58496250072
lead to strange::1.58496250072
check built-in variables::1.58496250072
thing is true::1.58496250072
block python evalutates::1.58496250072
true true true::1.58496250072
apply g first::1.58496250072
display the variable::1.58496250072
parts the functions::1.58496250072
true the final::1.58496250072
methods a type::1.58496250072
space or global::1.58496250072
test often find::1.58496250072
ways to mitigate::1.58496250072
arguments are true::1.58496250072
action a fixed::1.58496250072
string python saves::1.58496250072
function is doing::1.58496250072
behaviours is bad::1.58496250072
module named mod::1.58496250072
false and vice::1.58496250072
two types str::1.58496250072
versa and returns::1.58496250072
july 14th website::1.58496250072
saves the string::1.58496250072
calling other functions::1.58496250072
documentation with docstrings::1.58496250072
black box regression::1.58496250072
operators can check::1.58496250072
information to code::1.58496250072
block elif condition3::1.58496250072
block elif condition2::1.58496250072
code is correct::1.58496250072
add a number::1.58496250072
updating and testing::1.58496250072
languages have built-in::1.58496250072
block of code::1.58496250072
head to make::1.58496250072
early ! test::1.58496250072
functions we started::1.58496250072
test all inputs::1.58496250072
vague and ambiguous::1.58496250072
writing this means::1.58496250072
condition is met::1.58496250072
functions and variables::1.58496250072
state are intertwined::1.58496250072
boolean variables recall::1.58496250072
cases before writing::1.58496250072
statement if condition1::1.58496250072
lead to unreadable::1.58496250072
return the number::1.58496250072
capitalised letters june::1.58496250072
functions from module_name::1.58496250072
get_move_lst and get_move_str::1.58496250072
constraints in python::1.58496250072
tests a dot::1.58496250072
testing much easier::1.58496250072
short for documentation::1.58496250072
concatenation “ str::1.58496250072
strange behaviour exploiting::1.58496250072
testing in python::1.58496250072
check the standard::1.58496250072
box regression testing::1.58496250072
rely on global::1.58496250072
str and unicode::1.58496250072
answer is clear::1.58496250072
choose as bad::1.58496250072
execute different lines::1.58496250072
number of errors::1.58496250072
times in programs::1.58496250072
tests treat functions::1.58496250072
comments and questions::1.58496250072
bundle up related::1.58496250072
representing boolean expressions::1.58496250072
good software tests::1.58496250072
two values true::1.58496250072
function that game::1.58496250072
behave differently depending::1.58496250072
span multiple lines::1.58496250072
module_name import fn_name1::1.58496250072
aspects of testing::1.58496250072
inform your design::1.58496250072
wildcard to import::1.58496250072
break a program::1.58496250072
advice for booleans::1.58496250072
unsure of precedence::1.58496250072
test and update::1.58496250072
python to run::1.58496250072
true iff int::1.58496250072
picking test cases::1.58496250072
parentheses will make::1.58496250072
fail a test::1.58496250072
test the tools::1.58496250072
definitions or hints::1.58496250072
function works makes::1.58496250072
lines of code::1.58496250072
give much information::1.58496250072
working on grading::1.58496250072
code for opening::1.58496250072
bunch of functions::1.58496250072
complicated expressions simplify::1.58496250072
output the information::1.58496250072
combine boolean operators::1.58496250072
recall that functions::1.58496250072
parsing the input::1.58496250072
testing nose makes::1.58496250072
parentheses for complicated::1.58496250072
code will work::1.58496250072
return the value::1.58496250072
executes the block::1.58496250072
recent one stays::1.58496250072
pic by int::1.58496250072
read and prone::1.58496250072
read the error::1.58496250072
extract a bunch::1.58496250072
class in ba1170::1.58496250072
programs to recipes::1.58496250072
designing tests early::1.58496250072
number of characters::1.58496250072
true is represented::1.58496250072
representation can lead::1.58496250072
initialise and call::1.58496250072
important distinction june::1.58496250072
instances of substr::1.58496250072
module causes python::1.58496250072
function or module::1.58496250072
bunch of statements::1.58496250072
good docstrings docstrings::1.58496250072
strings using relational::1.58496250072
kind of input::1.58496250072
module called module_m::1.58496250072
place a piece::1.58496250072
return an int::1.58496250072
display mixed types::1.58496250072
test a function::1.58496250072
legally this code::1.58496250072
boolean docstrings def::1.58496250072
easy to reuse::1.58496250072
add useful documentation::1.58496250072
denoted by single::1.58496250072
writing code thinking::1.58496250072
docstrings a docstring::1.58496250072
solution other things::1.58496250072
review of functions::1.58496250072
escape characters denoted::1.58496250072
assert statements assert::1.58496250072
nature of boolean::1.58496250072
selectively execute blocks::1.58496250072
ve seen ints::1.58496250072
line by line::1.58496250072
re not returning::1.58496250072
lower case letters::1.58496250072
string operations strings::1.58496250072
decreases the amount::1.58496250072
block the block::1.58496250072
information most direct::1.58496250072
python has local::1.58496250072
write the code::1.58496250072
ve been testing::1.58496250072
cases that test::1.58496250072
subtle but important::1.58496250072
function then check::1.58496250072
dot means pass::1.58496250072
testing is key::1.58496250072
tab aside len::1.58496250072
testing in shell::1.58496250072
kind each failure::1.58496250072
regression testing nose::1.58496250072
write the tests::1.58496250072
strings are denoted::1.58496250072
build on eachother::1.58496250072
developing good software::1.58496250072
evaluates a boolean::1.58496250072
simplify your boolean::1.58496250072
assigned a value::1.58496250072
circuit evaluation python::1.58496250072
documentation string python::1.58496250072
line of output::1.58496250072
create a local::1.58496250072
function has def::1.58496250072
assignment questions csc::1.58496250072
supposed to return::1.58496250072
quellan @ cs.toronto.edu::1.58496250072
strings that span::1.58496250072
check if substrings::1.58496250072
goto statement june::1.58496250072
context for testing::1.58496250072
block is executed::1.58496250072
cases while designing::1.58496250072
modules methods belong::1.58496250072
test the larger::1.58496250072
lots of test::1.58496250072
pixel in picture::1.58496250072
characters two types::1.58496250072
error the last::1.58496250072
condition is checked::1.58496250072
module called test__mod::1.58496250072
functions or modules::1.58496250072
conditions in order::1.58496250072
operators that return::1.58496250072
expressions get rid::1.58496250072
case letters string.upper::1.58496250072
posted on announcements::1.58496250072
last bit tells::1.58496250072
easy to run::1.58496250072
test it based::1.58496250072
nose and testing::1.58496250072
docstrings be clear::1.58496250072
largely language independent::1.58496250072
types of input::1.58496250072
make our code::1.58496250072
fn_name1 and fn_name::1.58496250072
things from module_name::1.58496250072
global variables local::1.58496250072
people in thursday::1.58496250072
nose the context::1.58496250072
python only evaluates::1.58496250072
exploiting these behaviours::1.58496250072
nose that helps::1.58496250072
assign boolean values::1.58496250072
representation can combine::1.58496250072
type – strings::1.58496250072
problem of recording::1.58496250072
double quotes quote::1.58496250072
test professional coders::1.58496250072
separated by commas::1.58496250072
call these methods::1.58496250072
assert statement assert::1.58496250072
call variables exploiting::1.58496250072
print “ pass::1.58496250072
code is executed::1.58496250072
14th website typo::1.58496250072
key to developing::1.58496250072
module called nose::1.58496250072
ll use str::1.58496250072
added my e-mail::1.58496250072
red per pixel::1.58496250072
manipulation and logic::1.58496250072
group of related::1.58496250072
python uses loops::1.58496250072
functions that return::1.58496250072
belong to modules::1.58496250072
return the sqrt::1.58496250072
reaches some number::1.58496250072
run each line::1.58496250072
cs.toronto.edu not quellan::1.58496250072
instant sanity check::1.58496250072
ing ” results::1.58496250072
function the tests::1.58496250072
find an error::1.58496250072
failure is incorrect::1.58496250072
functions name space::1.58496250072
returns the average::1.58496250072
means an error::1.58496250072
blocks of code::1.58496250072
functions a similar::1.58496250072
number of times::1.58496250072
import it importing::1.58496250072
files and dealing::1.58496250072
multiply a string::1.58496250072
mitigate this pain::1.58496250072
module we import::1.58496250072
write any code::1.58496250072
type must match::1.58496250072
match ! june::1.58496250072
function documentation recall::1.58496250072
single or double::1.58496250072
computer the average::1.58496250072
bit of information::1.58496250072
typo in info::1.58496250072
programs can behave::1.58496250072
update the function::1.58496250072
out what methods::1.58496250072
true the block::1.58496250072
insert a type::1.58496250072
worry about inputs::1.58496250072
local variables defined::1.58496250072
tests each test::1.58496250072
python choose variables::1.58496250072
considered a factor::1.58496250072
leave a blank::1.58496250072
return vs print::1.58496250072
module or function::1.58496250072
evaluates to false::1.58496250072
add some information::1.58496250072
legal expression arithmetic::1.58496250072
easy to access::1.58496250072
lead to weirdness::1.58496250072
write a function::1.58496250072
machines no questions::1.58496250072
decimal places june::1.58496250072
intercepts in general::1.58496250072
conventions for functions::1.58496250072
moves and boards::1.58496250072
throw an error::1.58496250072
prone to errors::1.58496250072
coders often write::1.58496250072
importing a module::1.58496250072
take picture pic::1.58496250072
import a module::1.58496250072
administration office hours::1.58496250072
print “ string::1.58496250072
functions that build::1.58496250072
suspect programmer error::1.58496250072
worry about lines::1.58496250072
piece could move::1.58496250072
repetition often times::1.58496250072
shift to capitalised::1.58496250072
game_summary and strip_tag_info::1.58496250072
remember ! functions::1.58496250072
shift to lower::1.58496250072
types in python::1.58496250072
return the square::1.58496250072
fact we wrote::1.58496250072
addition to variables::1.58496250072
short circuit evaluation::1.58496250072
belong to objects::1.58496250072
execute a block::1.58496250072
iff iff stands::1.58496250072
covered in greater::1.58496250072
loops while loops::1.58496250072
check global variables::1.58496250072
output the first::1.58496250072
print statement print::1.58496250072
return true iff::1.58496250072
true of values::1.58496250072
variable is defined::1.58496250072
game summary calls::1.58496250072
multiplication operator functions::1.58496250072
int percent percent::1.58496250072
python are objects::1.58496250072
sequences of characters::1.58496250072
call this concatenation::1.58496250072
exist an alternative::1.58496250072
write the docstring::1.58496250072
error produces information::1.58496250072
assert statement::1.0
parse information::1.0
awkward print::1.0
return false::1.0
first aspect::1.0
fixed number::1.0
announcements june::1.0
design makes::1.0
work read::1.0
converted june::1.0
file posted::1.0
include definitions::1.0
style advice::1.0
functions calling::1.0
basic types::1.0
weight june::1.0
moves done::1.0
logic manipulation::1.0
code relies::1.0
first point::1.0
boundary conditions::1.0
returns false::1.0
local namespace::1.0
parentheses separated::1.0
python statements::1.0
boolean functions::1.0
functions end::1.0
tests cases::1.0
giving input::1.0
square root::1.0
black-box fashion::1.0
typical inputs::1.0
algebraic notation::1.0
acceptable answer::1.0
info sheet::1.0
questions csc::1.0
output tells::1.0
enclosing functions::1.0
pain test::1.0
blank line::1.0
standard library::1.0
reuse bits::1.0
skill june::1.0
common paradigm::1.0
chinese characters::1.0
vice versa::1.0
code based::1.0
function individually::1.0
docstring specifies::1.0
call functions::1.0
block csc::1.0
accurate programs::1.0
answer june::1.0
checked first::1.0
double negatives::1.0
boolean representation::1.0
expressions separated::1.0
method information::1.0
administration assignment::1.0
times june::1.0
parts game_summary::1.0
made using ::1.0
boards state::1.0
string string.lower::1.0
single quote::1.0
import mod::1.0
special characters::1.0
python testing::1.0
import fn_name1::1.0
tests failed::1.0
nose runs::1.0
built-in function::1.0
def decrease_red::1.0
choose parameters::1.0
number manipulation::1.0
simple assignment::1.0
larger functions::1.0
human mind::1.0
bad inputs::1.0
function definitions::1.0
file modules::1.0
write test::1.0
makes portability::1.0
piece started::1.0
lectures page::1.0
accented letters::1.0
import nose::1.0
goto statement::1.0
good chunking::1.0
code adaptive::1.0
false false::1.0
native functions::1.0
boolean false::1.0
iff int::1.0
strings sequences::1.0
function expects::1.0
terrible docstrings::1.0
docstrings a::1.0
arithmetic operators::1.0
print recall::1.0
return information::1.0
commas print::1.0
tests passes::1.0
thursday tutorials::1.0
designing functions::1.0
means fail::1.0
testing testing::1.0
keyword return::1.0
function names::1.0
global parameters::1.0
executed june::1.0
converting types::1.0
built-in tools::1.0
testing i.e::1.0
administration questions::1.0
function str.lower::1.0
makes code::1.0
tells python::1.0
code python::1.0
cdf machines::1.0
avoid exploiting::1.0
stays june::1.0
method subtle::1.0
design tool::1.0
returning true::1.0
unit testing::1.0
string formatting::1.0
values values::1.0
opening files::1.0
smaller functions::1.0
string june::1.0
luckily python::1.0
truth tables::1.0
block executes::1.0
defined inside::1.0
memory model::1.0
import things::1.0
code inefficient::1.0
boolean condition::1.0
docstring short::1.0
compare strings::1.0
code differs::1.0
global namespace::1.0
symbols unicode::1.0
assert func::1.0
compared programs::1.0
produces output::1.0
test functions::1.0
return functions::1.0
true ages::1.0
actual code::1.0
comparison operators::1.0
prefix june::1.0
part strip_tag_info::1.0
test things::1.0
user-friendly python::1.0
module_name import::1.0
boolean variables::1.0
function func::1.0
variables june::1.0
updating easier::1.0
style conventions::1.0
fix things::1.0
equality operator::1.0
incorrect output::1.0
picture pic.::1.0
similar thing::1.0
greater detail::1.0
roman alphabet::1.0
limited::0.0
func::0.0
searchable::0.0
saves::0.0
prefix::0.0
disability::0.0
otherwise.::0.0
move_piece::0.0
namespaces::0.0
assert statements::0.0
solution::0.0
enclosing::0.0
indices::0.0
marek::0.0
consistent::0.0
heterogenous::0.0
variable refers::0.0
machines::0.0
blue::0.0
errors::0.0
item2::0.0
great idea::0.0
designing::0.0
replaced::0.0
notions::0.0
error::0.0
equals::0.0
met::0.0
represented::0.0
items::0.0
changes::0.0
prints::0.0
out  rule::0.0
box regression::0.0
substr::0.0
cheating::0.0
browse::0.0
call::0.0
typo::0.0
elif condition2::0.0
elif condition3::0.0
separated::0.0
posting::0.0
descriptions takes::0.0
language::0.0
component chunks::0.0
immutable::0.0
letters string.upper::0.0
give::0.0
get_move_lst::0.0
module_m.__name__::0.0
similar items::0.0
end::0.0
describes::0.0
returning::0.0
span multiple::0.0
grammatically::0.0
answer::0.0
j-1::0.0
types::0.0
evalutates::0.0
perform::0.0
green::0.0
decreasing::0.0
order::0.0
operations::0.0
executed::0.0
office::0.0
expects::0.0
executes::0.0
fix::0.0
writing::0.0
differently::0.0
easier::0.0
break::0.0
boolean docstrings::0.0
debug::0.0
higher::0.0
chunks chunk::0.0
inserts::0.0
signing::0.0
series::0.0
spaces python::0.0
extract::0.0
re::0.0
test professional::0.0
checked::0.0
t12-2::0.0
correctness::0.0
user::0.0
grade::0.0
concise::0.0
ranging::0.0
element list::0.0
direct::0.0
janicki june::0.0
keyword::0.0
dimenstional space::0.0
board::0.0
f2-4::0.0
short circuit::0.0
fashion::0.0
mind::0.0
i-th::0.0
__main__::0.0
tells::0.0
person::0.0
indexed::0.0
reals::0.0
knowlege::0.0
tests early::0.0
object::0.0
.2f::0.0
simplify::0.0
regular::0.0
mitigate::0.0
 june::0.0
string.upper::0.0
statement june::0.0
wildcard::0.0
dot::0.0
cdf.toronto.edu::0.0
participate::0.0
subtle::0.0
operator functions::0.0
iff stands::0.0
runs::0.0
bad::0.0
sunset.::0.0
reference::0.0
character exists::0.0
testing::0.0
result::0.0
fail::0.0
capacity::0.0
lots::0.0
specifiction::0.0
sorts::0.0
nature::0.0
component::0.0
picking::0.0
behaviour::0.0
hardcode::0.0
rfind::0.0
administration office::0.0
distinction::0.0
main aspects::0.0
30th::0.0
individual unit::0.0
aspect::0.0
2nd::0.0
.::0.0
tuples::0.0
tutorials::0.0
function_name::0.0
note-taker::0.0
exception::0.0
strings revisted::0.0
get_init_move::0.0
weirdness::0.0
game_summary::0.0
things::0.0
make::0.0
format::0.0
independent::0.0
characters::0.0
ideally::0.0
quote type::0.0
programs::0.0
paradigm::0.0
left::0.0
wasteful::0.0
assigned::0.0
quotes::0.0
human::0.0
27th::0.0
character::0.0
initialise::0.0
statement print::0.0
easy::0.0
reuse::0.0
treat functions::0.0
intertwined::0.0
unnecessary::0.0
specific::0.0
largely language::0.0
right::0.0
people::0.0
variables exploiting::0.0
escape::0.0
pain::0.0
counts::0.0
grading::0.0
comments::0.0
unit::0.0
update_board::0.0
python evalutates::0.0
choose variables::0.0
float::0.0
stop::0.0
revisted strings::0.0
rely::0.0
head::0.0
inclusive range::0.0
removes::0.0
testing nose::0.0
module_name.function_name::0.0
true::0.0
produces information::0.0
type::0.0
inside::0.0
rerun::0.0
high-dimensional::0.0
developing::0.0
execute blocks::0.0
exist::0.0
annoying::0.0
check::0.0
non-prime::0.0
generally::0.0
methods belong::0.0
module.::0.0
test::0.0
nt::0.0
docstrings make::0.0
picture::0.0
update::0.0
variable::0.0
weekend::0.0
modules::0.0
docstrings makes::0.0
global::0.0
get_piece_type::0.0
finally::0.0
programming summer::0.0
string::0.0
images::0.0
trouble::0.0
room::0.0
leave::0.0
item::0.0
docstrings describes::0.0
dir::0.0
work::0.0
dealing::0.0
print takes::0.0
stands::0.0
nt change::0.0
formatting::0.0
suspect::0.0
relational::0.0
satisfy::0.0
unsure::0.0
out we ve::0.0
change::0.0
box::0.0
root::0.0
commonly::0.0
docstrings::0.0
modifying::0.0
working::0.0
variable_name.fn_name::0.0
software tests::0.0
scope::0.0
decrease_red::0.0
unreadable::0.0
str.lower::0.0
acceptable::0.0
cases::0.0
easiest::0.0
volunteering::0.0
values::0.0
designing tests::0.0
figure::0.0
print statement::0.0
substring::0.0
string python::0.0
allowed::0.0
counting::0.0
variables defined::0.0
summary calls::0.0
nt searchable::0.0
docstrings def::0.0
write::0.0
parameter::0.0
autograder::0.0
inputs::0.0
max::0.0
nt want numbers::0.0
remember::0.0
inform::0.0
aliased::0.0
representation::0.0
exclusive::0.0
fn_name1::0.0
types str::0.0
differs::0.0
statements::0.0
group::0.0
list named::0.0
decreases::0.0
forms::0.0
item0,item1,item2::0.0
fn_name::0.0
main::0.0
string operations::0.0
parsing::0.0
execute::0.0
equality::0.0
good software::0.0
nose makes::0.0
careless::0.0
individually::0.0
square::0.0
conventions::0.0
worried::0.0
space::0.0
test__mod::0.0
correct::0.0
suspect programmer::0.0
adapatively::0.0
goto::0.0
i,k,1::0.0
last bit::0.0
complicated::0.0
accommodation::0.0
care::0.0
100.::0.0
fixed::0.0
programming::0.0
thing::0.0
place::0.0
first::0.0
variables::0.0
nested::0.0
submit::0.0
sheet::0.0
returns::0.0
convention::0.0
legally::0.0
bits::0.0
a::0.0
inefficient::0.0
short::0.0
copy::0.0
representing::0.0
logic::0.0
added we call::0.0
outcome::0.0
largely::0.0
quotes quote::0.0
form::0.0
means pass::0.0
note::0.0
take::0.0
switching::0.0
multiple::0.0
track::0.0
algebraic::0.0
multiply::0.0
considered::0.0
average::0.0
documentation recall::0.0
ways::0.0
sunset::0.0
professional::0.0
accented::0.0
show::0.0
spaces::0.0
slow::0.0
explicitly::0.0
black::0.0
module named::0.0
double quotes::0.0
sunset.  takes::0.0
held::0.0
summary::0.0
expression recall::0.0
review::0.0
opening::0.0
import::0.0
multiplied::0.0
notice::0.0
screen::0.0
style::0.0
i,j::0.0
parentheses::0.0
picking test::0.0
module.  changes::0.0
expression::0.0
distinction june::0.0
inclusive::0.0
statement assert::0.0
case::0.0
situation::0.0
concatenation::0.0
parse::0.0
skipped::0.0
worry::0.0
alphabet::0.0
figuring::0.0
pad::0.0
arguments::0.0
week::0.0
running::0.0
relies::0.0
slicing::0.0
midterm::0.0
website typo::0.0
model::0.0
summer::0.0
tossing::0.0
unicode::0.0
thinking::0.0
versa::0.0
aspects::0.0
read::0.0
grid::0.0
accepted::0.0
vague::0.0
mod::0.0
black box::0.0
sanity::0.0
output::0.0
decimal::0.0
grouping::0.0
specifies::0.0
assertionerror::0.0
slice::0.0
nt have intercepts::0.0
legal::0.0
important distinction::0.0
error produces::0.0
23rd::0.0
higher dimenstional::0.0
equivalent::0.0
high-dimensional spaces::0.0
__name__::0.0
refers::0.0
throw::0.0
docstrings a sunset::0.0
comparison::0.0
mixed::0.0
referenced::0.0
python saves::0.0
operator::0.0
conceptually::0.0
area::0.0
lot::0.0
game summary::0.0
combined::0.0
describe::0.0
moved::0.0
general::0.0
file::0.0
importing::0.0
moves::0.0
incorrect::0.0
odd.::0.0
announcements::0.0
operation::0.0
separate::0.0
students::0.0
important::0.0
shift::0.0
tricky::0.0
calls::0.0
strings::0.0
represent::0.0
chinese::0.0
deadline::0.0
expressions::0.0
thursday::0.0
program::0.0
reader::0.0
denoted::0.0
difference::0.0
condition::0.0
list::0.0
large::0.0
small::0.0
decimal places::0.0
built-in::0.0
design::0.0
pass::0.0
snippets::0.0
sum::0.0
pic.::0.0
method::0.0
places june::0.0
idea note::0.0
modify::0.0
hours::0.0
i.e::0.0
standard::0.0
matching::0.0
pics::0.0
amount::0.0
action::0.0
shorthand::0.0
function calls::0.0
named list_name::0.0
chunks::0.0
documentation string::0.0
letters june::0.0
takes::0.0
improves::0.0
two::0.0
operators::0.0
tested::0.0
multiple lines::0.0
keeping::0.0
recall::0.0
sunset.  makes::0.0
cs.toronto.edu::0.0
learn::0.0
def::0.0
compare::0.0
numbers::0.0
modules methods::0.0
information::0.0
early::0.0
awkward::0.0
csc::0.0
regression::0.0
snippet::0.0
notetaking::0.0
mutable::0.0
chunking::0.0
advice::0.0
expressions simplify::0.0
documentation::0.0
media.show::0.0
sanity check::0.0
stays::0.0
co-ordinate::0.0
built-in variables::0.0
parts::0.0
alter::0.0
good::0.0
return::0.0
expected_output::0.0
easily::0.0
fully::0.0
single element::0.0
iff::0.0
module_name::0.0
referred::0.0
initialised::0.0
weight::0.0
hard::0.0
idea::0.0
loops::0.0
surrounded::0.0
methods we ve::0.0
print::0.0
evaluation::0.0
put::0.0
beginning::0.0
terrible::0.0
circuit::0.0
assign::0.0
student::0.0
number::0.0
instances::0.0
done::0.0
blank::0.0
passes::0.0
introduction::0.0
i-1::0.0
passed::0.0
store::0.0
statement::0.0
capitalised letters::0.0
luckily::0.0
part::0.0
kind::0.0
double::0.0
recording::0.0
supposed::0.0
str::0.0
ages::0.0
depending::0.0
picture.  returns::0.0
behaviour exploiting::0.0
build::0.0
methods revisted::0.0
aliasing::0.0
tool::0.0
tests treat::0.0
added::0.0
function does changes::0.0
quote::0.0
sets::0.0
escape characters::0.0
individual move::0.0
significant::0.0
services::0.0
adds::0.0
clear::0.0
cover::0.0
hints::0.0
sunset.  take::0.0
cdf::0.0
commas::0.0
sublist::0.0
ba1170::0.0
find::0.0
parameters::0.0
heavily::0.0
failed::0.0
pretty::0.0
factor::0.0
strip_tag_info::0.0
room june::0.0
take picture::0.0
notation::0.0
rest::0.0
remove::0.0
common::0.0
wrote::0.0
individual::0.0
descriptions::0.0
conditions::0.0
code makes::0.0
last::0.0
carelessness::0.0
roman::0.0
objects::0.0
picture.::0.0
context::0.0
condition3::0.0
condition2::0.0
multiplication operator::0.0
point::0.0
simple::0.0
circuit evaluation::0.0
average_red::0.0
simply::0.0
create::0.0
i,k::0.0
notetaker::0.0
bit tells::0.0
great::0.0
representative::0.0
indefinitely::0.0
function makes::0.0
substrings::0.0
intercepts::0.0
evaluates::0.0
loop::0.0
shortened::0.0
get_fin_sq::0.0
copycopycopy::0.0
overlooked::0.0
mixed types::0.0
black-box::0.0
rid::0.0
belong::0.0
failure::0.0
assignment::0.0
purpose::0.0
robust::0.0
recent::0.0
lower::0.0
convenient::0.0
precedence::0.0
pic,percent::0.0
i,j,k::0.0
questions::0.0
alternative::0.0
list_name::0.0
tables::0.0
source::0.0
real_num::0.0
input::0.0
insert::0.0
big::0.0
game::0.0
integer::0.0
bit::0.0
spaghetti  code::0.0
methods::0.0
back::0.0
understood::0.0
lower case::0.0
behave::0.0
run::0.0
dimenstional::0.0
step::0.0
negatives::0.0
media.set_green::0.0
range::0.0
call variables::0.0
block::0.0
percent percent::0.0
professional coders::0.0
ints::0.0
span::0.0
value.fn_name::0.0
long::0.0
files::0.0
memory::0.0
line::0.0
lecture room::0.0
posted::0.0
info::0.0
hours held::0.0
module_m::0.0
heterogeneous::0.0
similar::0.0
ordered::0.0
defined::0.0
works makes::0.0
accessibility::0.0
single::0.0
huron::0.0
dot means::0.0
string.lower::0.0
arithmetic::0.0
elements::0.0
structure::0.0
ago::0.0
vice::0.0
age::0.0
requires::0.0
code::0.0
results::0.0
strange behaviour::0.0
nose::0.0
languages::0.0
helps::0.0
suite::0.0
include::0.0
nose.runmodule::0.0
booleans::0.0
specific code::0.0
s.replace::0.0
matrices::0.0
pixel,0::0.0
notes::0.0
get_move_str::0.0
coders::0.0
smaller::0.0
odd::0.0
append::0.0
index::0.0
giving::0.0
access::0.0
body::0.0
len::0.0
intercept::0.0
making::0.0
methods find::0.0
108h::0.0
convert::0.0
receive::0.0
larger::0.0
operations strings::0.0
function documentation::0.0
makes::0.0
boolean values::0.0
named::0.0
instant sanity::0.0
programmer error::0.0
boolean::0.0
names::0.0
apply::0.0
tools::0.0
complicated expressions::0.0
certificate::0.0
test__func::0.0
process::0.0
sort::0.0
started::0.0
backslash::0.0
individual s capacity::0.0
portability::0.0
raw_input::0.0
is_odd::0.0
effectively::0.0
assumptions::0.0
tab::0.0
native::0.0
namespace::0.0
blocks::0.0
characters denoted::0.0
docstring::0.0
multiplication::0.0
ambiguous::0.0
lines::0.0
element::0.0
software::0.0
elif::0.0
move::0.0
symbols::0.0
looping::0.0
converting::0.0
bunch::0.0
chosen::0.0
ll::0.0
choose::0.0
covered::0.0
pixel::0.0
greater::0.0
python::0.0
truth::0.0
constraints::0.0
subset::0.0
doing::0.0
chunk::0.0
related::0.0
programmer::0.0
special::0.0
out::0.0
behaviours::0.0
mate::0.0
lecture::0.0
adaptive::0.0
red::0.0
language independent::0.0
,etc::0.0
recipes::0.0
times::0.0
length::0.0
quellan::0.0
reaches::0.0
spaghetti::0.0
quality::0.0
adversarially::0.0
janicki::0.0
final::0.0
painful::0.0
prone::0.0
shell::0.0
2-4::0.0
tuple::0.0
lists::0.0
manipulation::0.0
july::0.0
updating::0.0
capitalised::0.0
false::0.0
pieces::0.0
python choose::0.0
min::0.0
instance::0.0
lectures::0.0
testing unit::0.0
definitions::0.0
class::0.0
eachother::0.0
request::0.0
typical::0.0
fact::0.0
people s code::0.0
fn_name2::0.0
exists rfind::0.0
text::0.0
evaluation python::0.0
redirect::0.0
based::0.0
produces::0.0
ambiguity::0.0
local::0.0
means::0.0
calling::0.0
python s native::0.0
exists::0.0
module::0.0
computer::0.0
state::0.0
limit::0.0
boundary::0.0
key::0.0
optional::0.0
commands::0.0
instant::0.0
selectively::0.0
named mod::0.0
tuesday::0.0
unreadable spaghetti::0.0
sequences::0.0
addition::0.0
treat::0.0
revisted::0.0
move text::0.0
define::0.0
block python::0.0
assert::0.0
repetition::0.0
volunteer::0.0
value::0.0
ve::0.0
list_elt1::0.0
list_elt0::0.0
multiple function::0.0
generic::0.0
administration::0.0
sqrt::0.0
strange::0.0
test boundary conditions::0.0
http::0.0
list_eltn::0.0
assignment questions::0.0
1-2::0.0
substring,i,j::0.0
numbered::0.0
computer programming::0.0
condition1::0.0
user-friendly::0.0
chosen adversarially::0.0
find_factor::0.0
accurate::0.0
skill::0.0
add::0.0
combine::0.0
match::0.0
identical::0.0
tests::0.0
height::0.0
exploiting::0.0
legal expression::0.0
works::0.0
page::0.0
library::0.0
recognition::0.0
lead::0.0
avoid::0.0
14th::0.0
e-mail::0.0
non-prime factors::0.0
int percent::0.0
adversary::0.0
gained::0.0
actual::0.0
boards::0.0
tuple_name::0.0
letters::0.0
true iff::0.0
element tuples::0.0
docstrings docstrings::0.0
case letters::0.0
naturally::0.0
function::0.0
basic::0.0
count::0.0
made::0.0
places::0.0
converted::0.0
empty::0.0
problem::0.0
piece::0.0
display::0.0
website::0.0
iff iff::0.0
boolean operators::0.0
int::0.0
pic::0.0
good docstrings a::0.0
ing::0.0
trailing::0.0
code thinking::0.0
functions::0.0
compared::0.0
percent::0.0
detail::0.0
repeat::0.0
monday::0.0
variables recall::0.0
june::0.0
statements assert::0.0
bundle::0.0
string.count::0.0
factors::0.0
rule::0.0
original::0.0
