linked list::61.9858541893
data structure::47.986398259
search tree::38.9934711643
binary search tree::38.9934711643
binary search::38.9932898078
avl tree::29.9956474429
unit test::27.9967355822
ing algorithm::25.9938338774
ordered set::22.9967355822
recursive algorithm::22.9965542256
data structures::20.9956474429
linked lists::20.9949220167
duction code::19.9981864345
white space::19.9974610083
root node::19.9972796518
priority queue::18.998005078
recursive algorithms::18.9972796518
production code::17.9983677911
activation record::17.9981864345
left subtree::17.9972796518
iterative solution::16.9978237214
right subtree::15.9967355822
singly linked list::14.9961915125
heap order::13.9985491476
doubly linked list::13.9969169387
tree data::12.9981864345
tree data structure::12.9981864345
recursive call::12.9974610083
normal queue::11.9989118607
searching algorithm::11.9989118607
maximum value::11.9987305042
method call::11.9985491476
iterative solutions::10.9987305042
hash table::10.9983677911
return root::9.99909321727
min heap::9.99909321727
unordered set::9.99836779108
big oh notation::9.99818643453
run time complexity::9.99746100834
backing data::8.99891186072
backing data structure::8.99891186072
in order::8.99800507798
right rotation::7.99927457381
suite of tests::7.99927457381
heap ordering::7.99927457381
visit binary search::7.99927457381
traversal is shown::7.99927457381
queue data::7.99927457381
visit binary::7.99927457381
appendix d testing::7.99927457381
queue data structure::7.99927457381
unit testing::7.99927457381
run time complexities::7.99909321727
shown in figure::7.99909321727
ordered sets::7.99909321727
test suite::7.99909321727
activation records::7.99909321727
code coverage::7.99909321727
common denomina::7.99909321727
greatest common::7.99909321727
insertion and deletion::7.99909321727
greatest common denomina::7.99909321727
fibonacci algorithm::7.99891186072
head and tail::7.99891186072
largest value::7.99873050417
run times::7.99836779108
base case::7.99800507798
number of items::7.99782372144
appendix c recursive::6.99927457381
recursive vs iterative::6.99909321727
heap array::6.99891186072
value to remove::6.99873050417
shell sort::6.99873050417
programming language::6.99854914762
recursive calls::6.99854914762
sorting algo::6.99836779108
largestv alue::6.99746100834
return false::6.99709829525
list.count and list::5.99945593036
rst order::5.99945593036
total amount::5.99945593036
number of digits::5.99945593036
access the item::5.99945593036
tree example chapter::5.99945593036
balance condition::5.99945593036
bst properties::5.99945593036
searching algorithms::5.99945593036
stack space::5.99945593036
testing frameworks::5.99945593036
highest priority::5.99945593036
index < list.count::5.99945593036
normal queues::5.99945593036
algorithm signature::5.99945593036
post condi::5.99945593036
left rotation::5.99945593036
top-of-stack index::5.99945593036
language construct::5.99945593036
method calls::5.99945593036
greatest common denominator::5.99927457381
ended queue::5.99927457381
double ended queue::5.99927457381
standard queue::5.99927457381
common operation::5.99927457381
simple algorithm::5.99927457381
recursive in nature::5.99927457381
amount of memory::5.99927457381
double ended::5.99927457381
tree rotation::5.99927457381
smallest value::5.99927457381
object oriented::5.99927457381
right child::5.99927457381
inorder traversal::5.99927457381
common denominator::5.99927457381
structures and algorithms::5.99909321727
resizing algorithm::5.99909321727
cursive in nature::5.99909321727
parent node::5.99909321727
unit tests::5.99891186072
heap strategy::5.99891186072
return list::5.99891186072
number of words::5.99891186072
structures and algo::5.99891186072
radix sort::5.99873050417
head node::5.99873050417
algo rithm::5.99873050417
sorting algorithm::5.99854914762
nal messages::4.99945593036
reading this book::4.99945593036
add an item::4.99945593036
backing array::4.99927457381
imple mentation::4.99927457381
vast majority::4.99927457381
call chain::4.99927457381
value < root.value::4.99927457381
imperative programming language::4.99909321727
base cases::4.99909321727
trace table::4.99909321727
algorithm design::4.99909321727
appendix a algorithm::4.99909321727
end remove::4.99909321727
values of ascending::4.99909321727
sorted into values::4.99909321727
imperative programming::4.99909321727
ascending order::4.99891186072
reverse traversal::4.99891186072
merge sort::4.99891186072
quick sort::4.99854914762
problem into smaller::3.99945593036
return index::3.99945593036
single occurrence::3.99945593036
string operations::3.99945593036
sequential search::3.99945593036
point of reference::3.99945593036
oriented concepts::3.99945593036
smaller problems::3.99945593036
test driven::3.99945593036
list the algorithm::3.99945593036
rst traversal::3.99945593036
counting the number::3.99945593036
detecting a palindrome::3.99945593036
order of words::3.99945593036
heap data::3.99945593036
actual parameter::3.99945593036
head or tail::3.99945593036
mum number::3.99945593036
object oriented concepts::3.99945593036
common operations::3.99945593036
heap data structure::3.99945593036
random insertion::3.99945593036
occurrence of white::3.99945593036
worst case::3.99945593036
linked list node::3.99945593036
breadth first::3.99945593036
max heap::3.99945593036
unordered sets::3.99945593036
list node::3.99945593036
base consisting::3.99945593036
probability search::3.99945593036
root.value = value::3.99945593036
pretty trivial::3.99945593036
sort chapter::3.99927457381
heap items::3.99927457381
del tongo::3.99927457381
store the heap::3.99927457381
algo rithms::3.99927457381
algorithm trace::3.99927457381
granville barne::3.99927457381
luca del tongo::3.99927457381
node to remove::3.99927457381
luca del::3.99927457381
recursive case::3.99927457381
rst case::3.99927457381
binary chop::3.99927457381
imperative language::3.99927457381
doubly linked lists::3.99927457381
iterative algorithm::3.99927457381
reverse order::3.99909321727
ispalindrome algorithm::3.99909321727
insertion sort::3.99909321727
algorithm remove::3.99909321727
singly linked lists::3.99909321727
bubble sort::3.99891186072
logarithmic run::3.99873050417
sorting algorithms::3.99873050417
virtual machine::2.99945593036
end add::2.99945593036
garbage value::2.99945593036
smaller chunks::2.99945593036
granville barnett::2.99945593036
recursive method::2.99945593036
set intersection::2.99945593036
number of values::2.99945593036
right pointer::2.99945593036
algorithm add::2.99945593036
structure or algorithm::2.99945593036
data type::2.99945593036
opposite is true::2.99945593036
index < value.length::2.99945593036
iterative algorithms::2.99945593036
value to add::2.99945593036
left to right::2.99945593036
trivial to implement::2.99945593036
table a.2::2.99945593036
respective algorithm::2.99945593036
current node::2.99927457381
high level::2.99927457381
foreach item::2.99927457381
deletion algorithm::2.99927457381
programming languages::2.99927457381
algorithm works::2.99909321727
tail node::2.99909321727
end insert::2.99909321727
end foreach::2.99909321727
algorithm insert::2.99909321727
nodetoremove.value < parent.value::2.99891186072
rithms presented::1.99945593036
language of choice::1.99945593036
return word::1.99945593036
avl balance::1.99945593036
array count::1.99945593036
return value::1.99945593036
upper bound::1.99945593036
algorithm described::1.99945593036
searching searching::1.99945593036
node with value::1.99945593036
list in reverse::1.99945593036
node to start::1.99945593036
self balancing::1.99945593036
value is located::1.99945593036
pseudocode listings::1.99945593036
value to search::1.99945593036
straight forward::1.99945593036
quadratic run::1.99945593036
good reason::1.99945593036
correct location::1.99927457381
largestv alue.right::1.99927457381
repeated words::1.99927457381
number of repeated::1.99927457381
traversing the list::1.99927457381
value is removed::1.99927457381
