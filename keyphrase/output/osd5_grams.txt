intermediary between users
users and computer
users an environment
user can execute
conveniently and efficiently
efficiently in technical
software which manages
hardware an operating
operating system controls
controls the allocation
allocation of resources
resources and services
devices and information
definition an operating
program that acts
hardware and controls
controls the execution
kinds of programs
programs conceptual view
operating system memory
system memory management
memory management processor
management processor management
processor management device
management device management
device management file
management file management
file management security
management security control
control over system
system performance job
performance job accounting
job accounting error
accounting error detecting
error detecting aids
detecting aids coordination
software and users
types of operating
operating system operating
system operating systems
first computer generation
computer generation operating
generation operating systems
systems keep evolving
commonly used batch
batch operating system
system the users
users of batch
directly each user
prepares his job
device like punch
cards and submits
operator to speed
speed up processing
jobs with similar
left their programs
operator the operator
operator then sorts
programs into batches
batches with similar
requirements the problems
problems with batch
lack of interaction
user and job
mechanical i devices
devices is slower
slower than cpu
difficult to provide
provide the desired
desired priority time-sharing
priority time-sharing operating
time-sharing operating systems
systems time sharing
technique which enables
enables many people
time-sharing or multitasking
extension of multiprogramming
shared among multiple
simultaneously is termed
termed as time-sharing
time-sharing the main
difference between multiprogrammed
multiprogrammed batch systems
systems and time-sharing
case of multiprogrammed
time-sharing systems objective
response time multiple
jobs are executed
cpu by switching
occur so frequently
user can receives
execute each user
burst or quantum
quantum of computation
users are present
submits the command
distributed operating system
operating system distributed
system distributed systems
systems use multiple
multiple central processors
processors to serve
serve multiple real
real time application
application and multiple
multiple users data
users data processing
data processing jobs
jobs are distributed
perform each job
job most efficiently
efficiently the processors
buses or telephone
loosely coupled systems
systems or distributed
distributed systems processors
system may vary
vary in size
size and function
function these processors
processors are referred
referred as sites
network operating system
operating system network
system network operating
operating system runs
server the capability
capability to manage
functions the primary
file and printer
access among multiple
typically a local
local area network
examples of network
network operating systems
systems are microsoft
real time operating
operating system real
real time system
system is defines
data processing system
required to process
process and respond
respond to inputs
controls the environment
real time processing
system to respond
input and display
display of required
required updated information
information is termed
termed as response
online processing real-time
processing real-time systems
rigid time requirements
flow of data
data and real-time
dedicated application real-time
application real-time operating
real-time operating system
system has well-defined
fixed time constraints
constraints otherwise system
system will fail.for
fail.for example scientific
medical imaging systems
industrial control systems
air traffic control
traffic control system
system etc operating
services an operating
system provides services
environment to execute
services to execute
execute the programs
common services provided
provided by operating
operating systems program
systems program execution
execution i operations
operations file system
file system manipulation
system manipulation communication
manipulation communication error
communication error detection
error detection resource
detection resource allocation
resource allocation protection
allocation protection operating
protection operating system
tasks that operating
operating system handles
system handles batch
handles batch processing
batch processing batch
processing batch processing
operating system collects
collects one programs
programs and data
batch before processing
processing starts operating
starts operating system
related to batch
processing os defines
defines a job
sequence of commands
number a jobs
jobs in memory
memory and executes
manual information jobs
jobs are processed
order of submission
submission i.e first
first served fashion
fashion when job
completes its execution
memory is released
job gets copied
printing or processing
batch processing multitasking
processing multitasking multitasking
multitasking multitasking refers
refers to term
term where multiple
simultaneously by switching
switching between them.switches
users may interact
running multitasking multiprogramming
programs are residing
residing in memory
sharing the processor
processor is referred
multiprogramming multiprogramming assumes
assumes a single
single shared processor
shared processor multiprogramming
processor multiprogramming increases
multiprogramming increases cpu
increases cpu utilization
utilization by organizing
execute following figure
shows the memory
multiprogramming system memory
memory layout interactivity
layout interactivity interactivity
interactivity interactivity refers
user is capable
capable to interact
interact with computer
computer system operating
system operating system
related to interactivity
user an interface
interface to interact
interact with system
system os managers
managers input devices
keyboard os manages
manages output devices
devices to show
monitor os response
submits and waits
real time systems
embedded systems operating
systems operating system
related to real
systems typically read
react to sensor
data the operating
system must guarantee
response to events
events within fixed
ensure correct performance
correct performance distributed
performance distributed environment
distributed environment distributed
environment distributed environment
distributed environment refers
refers to multiple
multiple independent cpus
cpus or processors
related to distributed
environment os distributes
distributes computation logics
processors the processors
memory os manages
manages the communications
processors they communicate
communication lines spooling
lines spooling spooling
acronym for simultaneous
simultaneous peripheral operations
operations on line
line spooling refers
refers to putting
buffer this buffer
area in memory
i devices operating
devices operating system
environment os handles
handles i device
device data spooling
spooling as devices
data access rates
rates os maintains
maintains the spooling
station where data
data can rest
slower device catches
maintains parallel computation
computer can perform
i in parallel
computer read data
data to disk
doing its computing
computing task spooling
task spooling operating
spooling operating system
process a process
program in execution
execution the execution
process must progress
sequential fashion definition
definition of process
process is defined
entity which represents
represents the basic
unit of work
components of process
component & description
object program code
executing the program
resources while executing
require some resources
verifies the status
process execution.a process
process can run
run to completion
data and resources
program a program
static entity made
statement while process
dynamic entity program
executed by processor
processor a program
takes a space
space at single
place in main
memory and continues
continues to stay
perform any action
state the state
state & description
ready the process
process is waiting
processor ready processes
processes are waiting
running process instructions
i.e the process
waiting the process
event to occur
terminated the process
process has finished
finished execution process
execution process states
process states operating
states operating system
process scheduling definition
definition the process
manager that handles
handles the removal
strategy process scheduling
multiprogramming operating system
system such operating
loaded process shares
shares the cpu
multiplexing scheduling queues
scheduling queues scheduling
queues scheduling queues
scheduling queues refers
refers to queues
queues of processes
processes or devices
process is put
queue this queue
system the operating
system also maintains
maintains other queues
device queue device
queue device queue
device each device
queue this figure
shows the queuing
diagram of process
process scheduling queue
queue is represented
represented by rectangular
box the circles
represent the resources
resources that serve
serve the queues
queues the arrows
system queuing diagram
queuing diagram queues
types ready queue
ready queue device
newly arrived process
ready queue processes
queue processes waits
waits in ready
queue for allocating
allocating the cpu
cpu is assigned
process will execute
execute while executing
executing the process
events can occur
occur the process
process could issue
queue the process
process could create
create new sub
termination the process
result of interrupt
interrupt and put
queue two state
two state process
state process model
model two state
process model refers
refers to running
running and non-running
described below s.n
process is created
created by operating
system that process
turn to execute
execute each entry
queue is implemented
process is interrupted
process is transferred
process has completed
completed or aborted
process is discarded
dispatcher then selects
selects a process
queue to execute
execute schedulers schedulers
schedulers are special
special system softwares
softwares which handles
handles process scheduling
ways.their main task
select the jobs
decide which process
process to run
types long term
long term scheduler
term scheduler short
scheduler short term
short term scheduler
term scheduler medium
scheduler medium term
medium term scheduler
discuss four major
four major scheduling
major scheduling algorithms
scheduling priority scheduling
priority scheduling round
scheduling round robin
scheduling multilevel queue
multilevel queue scheduling
queue scheduling operating
scheduling operating system
flow of execution
registers and stack
stack a thread
light weight process
weight process threads
process threads provide
improve application performance
performance through parallelism
parallelism threads represent
represent a software
approach to improving
performance of operating
system by reducing
reducing the overhead
thread is equivalent
process each thread
thread can exist
represents a separate
flow of control.threads
implementing network servers
servers and web
provide a suitable
foundation for parallel
execution of applications
applications on shared
shared memory multiprocessors
memory multiprocessors folowing
multiprocessors folowing figure
folowing figure shows
shows the working
single and multithreaded
multithreaded processes single
single vs multithreaded
multithreaded process difference
difference between process
process and thread
thread s.n process
s.n process thread
process is heavy
weight or resource
resource intensive thread
thread is light
light weight taking
weight taking lesser
taking lesser resources
switching needs interaction
interaction with operating
operating system thread
system thread switching
interact with operating
multiple processing environments
environments each process
memory and file
resources all threads
threads can share
share same set
set of open
process is blocked
process can execute
process is unblocked
thread is blocked
blocked and waiting
task can run
resources multiple threaded
multiple threaded processes
processes use fewer
processes each process
thread can read
write or change
change another thread
thread s data
advantages of thread
thread thread minimize
thread minimize context
minimize context switching
threads provides concurrency
process efficient communication
efficient communication economy
economical to create
create and context
context switch threads
switch threads utilization
utilization of multiprocessor
scale and efficiency
types of thread
threads are implemented
two ways user
ways user level
user level threads
user managed threads
managed threads kernel
threads kernel level
kernel level threads
operating system managed
system managed threads
managed threads acting
acting on kernel
operating system core
memory management memory
management memory management
system which handles
handles or manages
manages primary memory
primary memory memory
memory memory management
management keeps track
free it checks
allocated to processes
processes it decides
decides which process
memory gets freed
freed or unallocated
correspondingly it updates
updates the status
status memory management
management provides protection
register the base
base register holds
holds the smallest
smallest legal physical
legal physical memory
physical memory address
limit register specifies
specifies the size
access all addresses
memory management instructions
instructions and data
data to memory
process will reside
compile time binding
generate the absolute
absolute code load
reside in memory
compiler generates re-locatable
generates re-locatable code
re-locatable code execution
done at run
run time dynamic
loading in dynamic
program all routines
re-locatable load format
format the main
program is loaded
loaded into memory
executed other routines
methods or modules
modules are loaded
loaded on request
request dynamic loading
dynamic loading makes
makes better memory
memory space utilization
utilization and unused
loaded dynamic linking
dynamic linking linking
process of collecting
collecting and combining
combining various modules
modules of code
code and data
memory and executed
executed operating system
system can link
link system level
system level libraries
combines the libraries
libraries at load
linking is done
linking in static
linked at compile
program code size
size becomes bigger
dynamic linking libraries
linking libraries linked
linked at execution
code size remains
size remains smaller
remains smaller logical
smaller logical versus
logical versus physical
versus physical address
physical address space
space an address
address whereas address
physical address logical
address logical address
virtual address virtual
virtual and physical
compile-time and load-time
load-time address-binding schemes
address-binding schemes virtual
physical addresses differ
differ in execution-time
execution-time address-binding scheme
scheme the set
logical addresses generated
program is referred
logical address space
space the set
addresses is referred
space the run-time
mapping from virtual
virtual to physical
address is done
memory management unit
hardware device mmu
mechanism to convert
convert virtual address
address to physical
address the value
register is added
treated as offset
base register value
reallocated to location
user program deals
deals with virtual
sees the real
real physical addresses
physical addresses swapping
addresses swapping swapping
out of main
back into memory
memory for continued
continued execution backing
execution backing store
hard disk drive
fast in access
access and large
capable of providing
providing direct access
memory images major
major time consuming
part of swapping
swapping is transfer
transfer time total
amount of memory
standard hard disk
disk with transfer
milliseconds process swapping
process swapping memory
swapping memory allocation
memory allocation main
allocation main memory
two partitions low
partitions low memory
operating system resides
memory high memory
processes then held
held in high
high memory operating
memory operating system
memory allocation mechanism
allocation mechanism s.n
mechanism s.n memory
s.n memory allocation
memory allocation description
type of allocation
protect user processes
changing operating-system code
data relocation register
register contains value
value of smallest
smallest physical address
address whereas limit
register contains range
range of logical
addresses each logical
memory is divided
number of fixed-sized
partition is free
process is selected
fragmentation as processes
processes are loaded
loaded and removed
removed from memory
free memory space
space is broken
allocated to memory
size and memory
memory blocks remains
blocks remains unused
unused this problem
two types s.n
types s.n fragmentation
s.n fragmentation description
external fragmentation total
fragmentation total memory
total memory space
satisfy a request
reside a process
internal fragmentation memory
fragmentation memory block
memory block assigned
assigned to process
process is bigger
bigger some portion
portion of memory
memory is left
process external fragmentation
reduced by compaction
compaction or shuffle
shuffle memory contents
contents to place
place all free
block to make
make compaction feasible
dynamic paging external
paging external fragmentation
fragmentation is avoided
paging technique paging
memory is broken
broken into blocks
size called pages
size is power
pages are loaded
memory frames logical
frames logical address
process is allocated
allocated physical memory
free memory frame
system keeps track
free frames operating
frames operating system
frames to run
run a program
program of size
size n pages
pages address generated
generated by cpu
cpu is divided
divided into page
page in physical
physical memory page
memory page offset
offset is combined
combined with base
address to define
define the physical
memory address paging
paging following figure
show the paging
paging table architecture
table architecture paging
paging example segmentation
technique to break
memory into logical
represents a group
group of related
segments or code
segment for operating
paging unlike paging
eliminates internal fragmentation
internal fragmentation external
fragmentation external fragmentation
fragmentation still exists
lesser extent logical
extent logical address
address space address
space address generated
divided into segment
segment in physical
limit of segment
segment segment offset
offset is first
checked against limit
memory address segmentation
segmentation example operating
virtual memory virtual
memory virtual memory
execution of processes
memory the main
main visible advantage
larger than physical
physical memory virtual
separation of user
user logical memory
memory from physical
memory this separation
extremely large virtual
large virtual memory
provided for programmers
smaller physical memory
fully in main
main memory user
memory user written
user written error
written error handling
error handling routines
data or computation
computation certain options
options and features
rarely many tables
tables are assigned
assigned a fixed
amount of address
ability to execute
execute a program
partially in memory
memory would counter
counter many benefits
benefits less number
needed to load
load or swap
swap each user
program into memory
memory a program
longer be constrained
amount of physical
increase in cpu
utilization and throughput
throughput virtual memory
implemented by demand
segmentation system demand
system demand segmentation
provide virtual memory
virtual memory operating
hardware overview computers
overview computers operate
kinds of devices
devices general types
general types include
types include storage
include storage devices
specialized a device
system by sending
air the device
connection point termed
termed a port
set of wires
bus.in other terms
rigidly defined protocol
protocol that specifies
specifies a set
set of messages
wires daisy chain
chain when device
cable that plugs
plugs into device
device c plugs
controller a controller
collection of electronics
operate a port
device a serial-port
simple device controller
computer that controls
controls the signals
port the scsi
scsi bus controller
separate circuit board
memory to enable
process the scsi
scsi protocol messages
messages some devices
controllers i port
port typically consists
data-out registers s.n
registers s.n register
register & description
register the status
register contains bits
host these bits
bits indicate states
command has completed
register the control
host to start
start a command
change the mode
device for instance
serial port chooses
chooses between full-duplex
full-duplex and half-duplex
enables parity checking
sets the word
register the data-in
register is read
register the data
data out register
register is written
host to send
send output polling
output polling polling
waits for controller
reading the status
bit of status
register becomes clear
clear the controller
uses the busy
clears the busy
ready to accept
command the host
register the host
sets the command-ready
controller to execute
host writes output
controller by handshaking
handshaking the host
host repeatedly reads
reads the busy
bit becomes clear
clear the host
sets the write
register and writes
writes a byte
bit is set
sets the busy
bit the controller
reads the command
register and sees
sees the write
command it reads
reads the data-out
device the controller
clears the command-ready
clears the error
device i succeeded
finished i devices
devices i devices
category s.n category
category & description
human readable human
readable human readable
human readable devices
devices are suitable
suitable for communicating
computer user examples
examples are printers
video display terminals
machine readable machine
readable machine readable
machine readable devices
communicating with electronic
electronic equipment examples
examples are disk
disk and tape
controllers and actuators
communication communication devices
communicating with remote
remote devices examples
examples are digital
digital line drivers
drivers and modems
i devices s.n
devices s.n criteria
criteria & description
orders of magnitude
data transfer rates
application different devices
complexity of control
control a disk
printer requires simple
requires simple control
simple control interface
unit of transfer
stream of bytes
bytes or characters
representation different data
data encoding schemes
conditions the nature
nature of errors
direct memory access
computers avoid burdening
burdening the main
cpu with programmed
i by offloading
special purpose processor
processor this type
type of processor
controller a special
special control unit
block of data
processor this approach
polling or interrupt
interrupt software dma
devices like disks
bytes of information
transferred in single
single i operations
cpu is notified
byte or word
provide the memory
bus signals controlling
controlling the data
data transfer interaction
controller is managed
device driver handshaking
performed via wires
wires using terms
terms dma request
request and dma
dma acknowledge dma
acknowledge dma step
dma step description
driver is instructed
instructed to transfer
transfer disk data
driver then instruct
instruct disk controller
controller to transfer
data to buffer
disk controller starts
controller starts dma
starts dma transfer
disk controller sends
sends each byte
byte to dma
dma controller transfers
controller transfers bytes
bytes to buffer
increases the memory
decreases the counter
dma interrupts cpu
cpu to signal
signal transfer completion
transfer completion device
completion device controllers
controllers a computer
respective controllers network
controllers network card
network card graphics
card graphics adapter
graphics adapter disk
adapter disk controller
disk controller dvd-rom
controller dvd-rom controller
dvd-rom controller serial
controller serial port
serial port usb
port usb sound
usb sound card
sound card operating
card operating system
interrupts the cpu
interrupt request line
request line wire
wire which helps
cpu to sense
sense after executing
executing every instruction
controller has put
put a signal
saves a state
interrupt handler routine
address the interrupt
interrupt handler part
handler part determines
processing and executes
executes a interrupt
instruction to return
return the cpu
state the basic
mechanism of interrurpt
enables the cpu
cpu to respond
ready for service
service most cpus
two interrupt request
interrupt request lines
request lines non-maskable
lines non-maskable interrupt
kind of interrupts
interrupts are reserved
reserved for events
events like unrecoverable
unrecoverable memory errors
memory errors maskable
errors maskable interrupt
execution of critical
interrupted the interrupt
interrupt mechanism accepts
accepts an address
number that selects
selects a specific
specific interrupt handling
set.in most architectures
interrupt vector table
table this vector
addresses of specialized
specialized interrupt handlers
interrupt handlers application
application i interface
i interface application
i interface represents
represents the structuring
techniques and interfaces
system to enable
enable i devices
actual differences lies
differences lies kernel
lies kernel level
kernel level modules
modules called device
devices but show
interfaces to applications
applications the purpose
hide the differences
differences among device
i system calls
interfaces with respected
respected to devices
character-stream device transfers
device transfers bytes
block device transfers
transfers a complete
unit of bytes
sequential device transfers
device transfers data
fixed order determined
instructed to seek
data storage locations
storage locations synchronous
synchronous device performs
device performs data
performs data transfers
asynchronous device shows
device shows irregular
irregular or unpredictable
response time sharable
processes or threads
speed of operation
speeds may range
perform both input
input and output
read only clocks
timers the clock
clock software takes
takes the form
character based device
device the clock
driver the exact
driver may vary
depending on operating
clock driver include
s.n task description
day the clock
clock driver implements
real time clock
clock function.it requires
function.it requires incrementing
incrementing a counter
processes from running
running too long
process is started
initializes the quantum
counter in clock
process the clock
clock driver decrements
decrements the quantum
clock driver calls
calls the scheduler
scheduler to set
process thus clock
clock driver helps
helps in preventing
accounting for cpu
usage another function
performed by clock
driver is doing
doing cpu accounting
cpu accounting cpu
accounting cpu accounting
cpu accounting implies
accounting implies telling
telling how long
long the process
process has run
providing watchdog timers
timers for parts
system itself watchdog
system must turn
kernel i subsystem
i subsystem kernel
subsystem is responsible
responsible to provide
provide many services
services provided scheduling
schedules a set
requests to determine
determine a good
issues a blocking
blocking i system
device the kernel
kernel i scheduler
i scheduler rearranges
rearranges the order
queue to improve
response time experienced
i subsystem maintains
maintains a memory
buffer that stores
application operation buffering
buffering is done
done to cope
producer and consumer
adapt between devices
data transfer sizes
transfer sizes caching
kernel maintains cache
maintains cache memory
region of fast
memory that holds
copies of data
efficient than access
spooling and device
reservation a spool
buffer that holds
accept interleaved data
interleaved data streams
streams the spooling
spooling system copies
copies the queued
queued spool files
spooling is managed
system daemon process
kernel thread error
thread error handling
handling an operating
memory can guard
kinds of hardware
hardware and application
application errors device
errors device driver
device driver device
driver device driver
program or routine
device a device
device driver implements
implements i operations
operations or behaviours
class of devices
number of multiple
brands of terminals
slightly different terminals
single terminal driver
device driver lies
lies between interrupt
handler and device
independent i software
software the job
device independent software
request is executed
operating system
computer hardware
execute programs
technical terms
manages hardware
system controls
information definition
conceptual view
important functions
system memory
memory management
management processor
processor management
management device
device management
management file
file management
management security
security control
system performance
performance job
job accounting
accounting error
error detecting
detecting aids
aids coordination
users types
system operating
operating systems
first computer
computer generation
generation operating
important types
batch operating
computer directly
user prepares
off-line device
punch cards
computer operator
programmers left
sorts programs
similar requirements
batch systems
job cpu
cpu difficult
desired priority
priority time-sharing
time-sharing operating
computer system
logical extension
multiprogramming processor
multiple users
main difference
multiprogrammed batch
time-sharing systems
maximize processor
minimize response
multiple jobs
switches occur
transaction processing
processor execute
user program
short burst
user submits
system distributed
distributed systems
central processors
serve multiple
multiple real
users data
data processing
processing jobs
processors communicate
communication lines
high-speed buses
telephone lines
coupled systems
systems processors
distributed system
network operating
system network
system runs
manage data
networking functions
primary purpose
printer access
multiple computers
local area
area network
private network
networks examples
microsoft windows
novell netware
system real
processing system
interval required
line system
updated information
method response
online processing
processing real-time
real-time systems
control device
dedicated application
application real-time
real-time operating
scientific experiments
medical imaging
imaging systems
industrial control
control systems
weapon systems
home-applicance controllers
air traffic
traffic control
control system
convenient manner
common services
services provided
systems program
program execution
file system
system manipulation
manipulation communication
communication error
error detection
detection resource
resource allocation
allocation protection
protection operating
important tasks
system handles
handles batch
processing batch
batch processing
system collects
processing starts
starts operating
activities related
predefined sequence
single unit
manual information
information jobs
i.e first
served fashion
job completes
output spool
processing multitasking
multitasking multitasking
multitasking refers
them.switches occur
running multitasking
multitasking multiprogramming
multiprogramming multiprogramming
multiprogramming assumes
shared processor
processor multiprogramming
multiprogramming increases
increases cpu
cpu utilization
organizing jobs
figure shows
multiprogramming system
layout interactivity
interactivity interactivity
interactivity refers
managers input
input devices
manages output
output devices
show outputs
systems represents
embedded systems
systems operating
system activity
sensor data
guarantee response
fixed periods
correct performance
performance distributed
distributed environment
environment distributed
environment refers
independent cpus
distributes computation
computation logics
physical processors
share memory
local memory
lines spooling
spooling spooling
simultaneous peripheral
peripheral operations
line spooling
spooling refers
putting data
special area
devices operating
activites related
device data
data spooling
data access
access rates
spooling buffer
waiting station
slower device
device catches
parallel computation
spooling process
parallel fashin
computer read
read data
write data
tape printer
computing task
task spooling
spooling operating
processes process
sequential fashion
fashion definition
basic unit
system components
s.n component
object program
program code
data data
status verifies
process execution.a
execution.a process
requested resources
resources program
static entity
entity made
program statement
dynamic entity
entity program
program takes
single place
main memory
process states
process executes
current activity
process process
s.n state
processor ready
ready processes
processor allocated
running process
process instructions
finished execution
execution process
states operating
process scheduling
scheduling definition
process manager
strategy process
essential part
multiprogramming operating
executable memory
loaded process
process shares
multiplexing scheduling
scheduling queues
queues scheduling
queues refers
process enters
job queue
queue consists
device queue
queue device
multiple processes
queuing diagram
scheduling queue
rectangular box
circles represent
process flow
system queuing
diagram queues
arrived process
ready queue
queue processes
processes waits
sub process
state process
process model
model refers
non-running states
running state
running processes
process queue
linked list
waiting queue
execute schedulers
schedulers schedulers
special system
system softwares
handles process
ways.their main
main task
run schedulers
term scheduler
short term
scheduler medium
medium term
scheduling algorithms
major scheduling
scheduling priority
priority scheduling
scheduling round
round robin
scheduling multilevel
multilevel queue
queue scheduling
scheduling operating
process code
program counter
system registers
light weight
weight process
process threads
threads provide
improve application
application performance
parallelism threads
threads represent
software approach
improving performance
overhead thread
classical process
thread belongs
thread represents
separate flow
implementing network
network servers
web server
suitable foundation
parallel execution
shared memory
memory multiprocessors
multiprocessors folowing
folowing figure
multithreaded processes
multithreaded process
process difference
thread s.n
s.n process
process thread
heavy weight
resource intensive
intensive thread
weight taking
taking lesser
lesser resources
process switching
system thread
thread switching
multiple processing
processing environments
file resources
open files
child processes
first process
resources multiple
multiple threaded
threaded processes
fewer resources
process operates
data advantages
thread thread
thread minimize
minimize context
context switching
process efficient
efficient communication
communication economy
context switch
switch threads
threads utilization
multiprocessor architectures
greater scale
efficiency types
thread threads
user level
level threads
user managed
managed threads
threads kernel
kernel level
system managed
threads acting
system core
management memory
primary memory
memory memory
memory location
status memory
base register
limit register
register holds
smallest legal
legal physical
physical memory
memory address
register specifies
legally access
management instructions
memory addresses
absolute code
code load
compiler generates
re-locatable code
code execution
memory segment
dynamic loading
re-locatable load
load format
main program
routines methods
loading makes
memory space
space utilization
unused routines
dynamic linking
linking linking
executable file
executed operating
link system
system level
level libraries
static linking
libraries linked
code size
linking libraries
size remains
remains smaller
logical versus
physical address
address space
address generated
logical address
memory unit
virtual address
physical addresses
load-time address-binding
address-binding schemes
addresses differ
execution-time address-binding
address-binding scheme
logical addresses
addresses generated
run-time mapping
management unit
hardware device
device mmu
user process
register value
address location
program deals
virtual addresses
real physical
addresses swapping
swapping swapping
backing store
continued execution
execution backing
hard disk
secondary storage
accommodate copies
memory images
direct access
consuming part
total transfer
memory swapped
standard hard
transfer rate
actual transfer
milliseconds process
process swapping
swapping memory
memory allocation
allocation main
low memory
system resides
memory high
high memory
user processes
memory operating
allocation mechanism
mechanism s.n
s.n memory
allocation description
single-partition allocation
relocation-register scheme
protect user
operating-system code
data relocation
relocation register
smallest physical
multiple-partition allocation
fixed-sized partitions
input queue
free partition
process terminates
process fragmentation
free memory
memory blocks
small size
blocks remains
remains unused
fragmentation fragmentation
types s.n
s.n fragmentation
fragmentation description
external fragmentation
fragmentation total
total memory
internal fragmentation
fragmentation memory
memory block
block assigned
shuffle memory
memory contents
large block
make compaction
dynamic paging
paging technique
technique paging
memory frames
memory frame
free frames
frames operating
pages address
page number
page table
base address
memory page
page offset
address paging
figure show
paging table
table architecture
architecture paging
segmentation segmentation
break memory
logical pieces
piece represents
related information
code segment
data segment
varying sizes
lesser extent
space address
segment number
segment table
segment segment
segment offset
address segmentation
virtual memory
main visible
visible advantage
logical memory
large virtual
smaller physical
entire program
memory user
user written
written error
error handling
handling routines
error occured
fixed amount
small amount
demand paging
segmentation system
system demand
demand segmentation
hardware overview
overview computers
computers operate
general types
types include
include storage
storage devices
transmission devices
network cards
human-interface devices
device communicates
sending signals
connection point
point termed
serial port
common set
defined protocol
wires daisy
daisy chain
bus controller
serial-port controller
simple device
device controller
single chip
scsi bus
separate circuit
circuit board
host adapter
private memory
scsi protocol
protocol messages
built-in controllers
data-out registers
registers s.n
s.n register
status register
current command
data-in register
device error
control register
port chooses
half-duplex communication
enables parity
parity checking
bit sets
word length
bits select
speeds supported
out register
send output
output polling
polling polling
host waits
controller response.it
looping process
busy bit
busy working
host signals
command-ready bit
command register
host sets
host writes
writes output
write bit
data-out register
controller notices
controller reads
write command
controller clears
error bit
category s.n
s.n category
readable human
readable devices
computer user
user examples
video display
display terminals
readable machine
electronic equipment
equipment examples
tape drives
communication communication
communication devices
remote devices
devices examples
digital line
line drivers
devices s.n
s.n criteria
data rate
data transfer
transfer rates
printer requires
requires simple
simple control
control interface
transfer data
larger blocks
data representation
data encoding
encoding schemes
error conditions
errors differs
direct memory
memory access
computers avoid
main cpu
special purpose
purpose processor
special control
control unit
transfer block
external device
interrupt software
software dma
entire block
word transferred
bus signals
transfer interaction
device driver
driver handshaking
dma controller
terms dma
dma request
dma acknowledge
acknowledge dma
dma step
step description
transfer disk
disk data
buffer address
instruct disk
disk controller
controller starts
starts dma
dma transfer
controller sends
controller transfers
transfers bytes
dma interrupts
interrupts cpu
signal transfer
transfer completion
completion device
device controllers
respective controllers
controllers network
network card
card graphics
graphics adapter
adapter disk
controller dvd-rom
dvd-rom controller
controller serial
port usb
usb sound
sound card
card operating
softwares interrupts
cpu hardware
interrupt request
request line
line wire
helps cpu
cpu checks
cpu saves
current value
instruction pointer
interrupt handler
handler routine
fixed address
handler part
part determines
interrupt instruction
execution state
basic mechanism
interrurpt enables
asynchronous event
request lines
non-maskable interrupt
unrecoverable memory
memory errors
maskable interrupt
critical instructions
interrupt mechanism
mechanism accepts
specific interrupt
interrupt handling
small set.in
offset stored
interrupt vector
vector table
interrupt handlers
handlers application
interface application
interface represents
structuring techniques
actual differences
differences lies
lies kernel
level modules
device drivers
standard interfaces
device-driver layer
system calls
devices character-stream
character-stream device
device transfers
block device
complete unit
sequential device
transfers data
fixed order
order determined
random-access device
seek position
data storage
storage locations
synchronous device
device performs
performs data
data transfers
asynchronous device
device shows
unpredictable response
sharable device
dedicated device
device speeds
devices perform
data direction
clocks clocks
clock software
software takes
blocking device
character based
based device
clock driver
exact function
driver include
s.n task
task description
driver implements
clock function.it
function.it requires
clock tick
preventing processes
scheduler initializes
quantum counter
clock ticks
driver decrements
clock interrupt
driver calls
driver helps
slice allowed
cpu usage
function performed
doing cpu
cpu accounting
accounting cpu
accounting implies
implies telling
providing watchdog
watchdog timers
timers set
floppy disk
speed kernel
subsystem kernel
services related
provided scheduling
kernel schedules
good order
application issues
system call
scheduler rearranges
system efficiency
average response
applications buffering
subsystem maintains
memory area
stores data
application operation
operation buffering
speed mismatch
data stream
transfer sizes
sizes caching
kernel maintains
maintains cache
cache memory
fast memory
holds copies
cached copy
original spooling
device reservation
holds output
interleaved data
data streams
spooling system
system copies
queued spool
spool files
system daemon
daemon process
kernel thread
thread error
protected memory
application errors
errors device
driver device
specific class
system supports
multiple brands
single terminal
terminal driver
layered structure
driver lies
device independent
accept request
independent software
operating
system
intermediary
users
computer
hardware
environment
user
execute
programs
conveniently
efficiently
technical
terms
software
manages
controls
allocation
resources
services
memory
processors
devices
information
definition
program
acts
interface
execution
kinds
conceptual
view
important
functions
management
processor
device
file
security
control
performance
job
accounting
error
detecting
aids
coordination
types
systems
first
generation
evolving
period
commonly
batch
interact
directly
prepares
off-line
punch
cards
submits
operator
speed
processing
jobs
similar
batched
run
group
programmers
left
sorts
batches
requirements
problems
lack
interaction
cpu
idle
speeds
mechanical
slower
difficult
provide
desired
priority
time-sharing
sharing
technique
enables
people
located
terminals
multitasking
logical
extension
multiprogramming
shared
multiple
simultaneously
termed
main
difference
multiprogrammed
case
objective
maximize
minimize
response
executed
switching
switches
occur
frequently
receives
transaction
short
burst
quantum
computation
present
command
seconds
distributed
central
serve
real
application
data
perform
communicate
communication
lines
high-speed
buses
telephone
referred
loosely
coupled
vary
size
function
sites
nodes
computers
network
runs
server
capability
manage
groups
applications
networking
primary
purpose
printer
access
typically
local
area
lan
private
networks
examples
microsoft
windows
unix
linux
mac
novell
netware
bsd
defines
interval
required
process
respond
inputs
small
line
input
display
updated
method
compared
online
real-time
rigid
operation
flow
dedicated
well-defined
fixed
constraints
fail.for
scientific
experiments
medical
imaging
industrial
weapon
robots
home-applicance
controllers
air
traffic
convenient
manner
common
provided
i
operations
manipulation
detection
resource
protection
properties
tasks
handles
collects
starts
activities
related
predefined
sequence
commands
single
unit
number
executes
manual
processed
order
submission
i.e
served
fashion
completes
released
output
copied
spool
printing
refers
term
them.switches
running
two
residing
assumes
increases
utilization
organizing
figure
shows
layout
interactivity
capable
managers
keyboard
show
outputs
monitor
waits
result
represents
embedded
activity
read
react
sensor
guarantee
events
periods
ensure
correct
independent
cpus
distributes
logics
physical
share
clock
communications
spooling
acronym
simultaneous
peripheral
putting
buffer
special
hard
disk
accessible
activites
rates
maintains
waiting
station
rest
catches
parallel
fashin
tape
write
out
doing
computing
task
processes
progress
sequential
defined
entity
basic
work
implemented
components
s.n
component
description
object
code
executing
require
status
verifies
execution.a
completion
requested
allocated
static
made
statement
dynamic
instructions
takes
space
place
continues
stay
action
states
state
current
created
ready
assigned
event
terminated
finished
scheduling
manager
removal
selection
basis
strategy
essential
part
loaded
executable
shares
multiplexing
queues
enters
put
queue
consists
queuing
diagram
represented
rectangular
box
circles
represent
arrows
newly
arrived
allocating
issue
request
create
sub
wait
termination
removed
forcibly
interrupt
back
model
non-running
described
turn
entry
pointer
linked
list
dispatcher
interrupted
transferred
completed
aborted
discarded
selects
schedulers
softwares
ways.their
select
submitted
decide
long
scheduler
medium
algorithms
ll
discuss
four
major
fcfs
shortest-job-first
sjf
round
robin
multilevel
multi-threading
thread
counter
registers
stack
light
weight
threads
improve
parallelism
approach
improving
reducing
overhead
equivalent
classical
belongs
exist
separate
control.threads
successfully
implementing
servers
web
suitable
foundation
multiprocessors
folowing
working
multithreaded
heavy
intensive
taking
lesser
environments
set
open
files
child
blocked
unblocked
threaded
fewer
operates
independently
change
advantages
context
concurrency
efficient
economy
economical
switch
multiprocessor
architectures
greater
scale
efficiency
ways
level
managed
kernel
acting
core
functionality
track
location
free
checks
decides
tracks
freed
unallocated
correspondingly
updates
base
register
limit
holds
smallest
legal
address
specifies
range
legally
addresses
done
compile
reside
binding
generate
absolute
load
compiler
generates
re-locatable
moved
segment
delayed
loading
routine
routines
format
methods
modules
makes
unused
linking
collecting
combining
link
libraries
combines
bigger
remains
smaller
versus
generated
virtual
compile-time
load-time
address-binding
schemes
differ
execution-time
scheme
run-time
mapping
mmu
mechanism
convert
value
added
treated
offset
attempt
dynamically
reallocated
deals
sees
swapping
swapped
temporarily
backing
store
brought
continued
drive
secondary
storage
fast
large
accommodate
copies
images
providing
direct
consuming
transfer
total
proportional
amount
assume
100kb
standard
rate
actual
100k
1000kb
milliseconds
partitions
low
resides
high
held
single-partition
type
relocation-register
protect
changing
operating-system
relocation
multiple-partition
divided
fixed-sized
partition
selected
terminates
fragmentation
broken
pieces
blocks
problem
external
satisfy
contiguous
internal
block
portion
reduced
compaction
shuffle
contents
make
feasible
paging
avoided
pages
power
bytes
frames
non-contiguous
frame
page
index
table
combined
define
architecture
segmentation
break
piece
,data
segments
unlike
varying
sizes
eliminates
exists
extent
checked
completely
visible
advantage
larger
separation
extremely
situations
entire
fully
written
handling
occured
options
features
rarely
tables
ability
partially
benefits
needed
swap
longer
constrained
increase
throughput
demand
overview
operate
general
include
disks
tapes
transmission
modems
human-interface
screen
mouse
specialized
communicates
sending
signals
cable
machine
connection
point
port
serial
wires
bus.in
bus
rigidly
protocol
messages
daisy
chain
plugs
arrangement
controller
collection
electronics
serial-port
simple
chip
scsi
circuit
board
host
adapter
microcode
enable
built-in
data-in
data-out
bits
byte
start
mode
instance
bit
chooses
full-duplex
half-duplex
parity
checking
sets
word
length
supported
send
polling
response.it
looping
reading
busy
clear
uses
clears
accept
command-ready
writes
coordinating
handshaking
repeatedly
reads
notices
succeeded
categorized
category
human
readable
communicating
printers
video
electronic
equipment
drives
sensors
actuators
remote
digital
drivers
differences
criteria
orders
magnitude
complexity
complex
requires
stream
characters
representation
encoding
conditions
nature
errors
differs
widely
dma
avoid
burdening
programmed
offloading
intervention
notified
controlling
driver
performed
acknowledge
step
instructed
instruct
sends
transfers
decreases
interrupts
signal
respective
card
graphics
dvd-rom
usb
sound
wire
helps
sense
instruction
saves
jumps
handler
determines
performs
return
interrurpt
asynchronous
service
non-maskable
kind
reserved
unrecoverable
maskable
switched
critical
accepts
specific
set.in
stored
vector
handlers
structuring
techniques
interfaces
uniform
lies
custom
tailored
device-driver
layer
hide
subsystem
calls
characteristics
respected
character-stream
complete
random-access
determined
seek
position
locations
synchronous
irregular
unpredictable
sharable
concurrently
gigabytes
read-write
support
direction
clocks
timers
form
blocking
character
based
exact
depending
generally
maintaining
day
implements
function.it
incrementing
tick
preventing
started
initializes
ticks
decrements
slice
allowed
usage
implies
telling
watchdog
parts
floppy
motor
500msec
responsible
schedules
requests
determine
good
issues
call
rearranges
average
experienced
buffering
stores
cope
mismatch
producer
consumer
adapt
caching
cache
region
cached
copy
original
reservation
interleaved
streams
queued
daemon
handled
protected
guard
developed
behaviours
class
supports
brands
slightly
terminal
layered
structure
