csc 108h  introduction to computer programming summer 2011 marek janicki june 9 2011 administration just to be clear  it 's okay to ask questions about the assignment at office hours  even if it 's in the last 24 hours assignment 2 will come out over the weekend  and the deadline will be moved to the 27th  office hours will be held monday instead of tuesday that week the midterm will be held june 30th at the regular lecture time and regular lecture room june 9 2011 administration there is a request for a volunteer note-taker there is a student in this class who requires a volunteer notetaker as an accommodation for a disability by signing up and posting your notes  you can make a significant difference for this individual 's capacity to fully participate in this course go to  http  //www.studentlife.utoronto.ca/accessibility/pcourselist.aspx or come in person to accessibility services 215 huron st suite 939 many students notice the quality of their notetaking improves through volunteering you will also receive a certificate of recognition june 9 2011 immutable objects so far all we 've seen are immutable objects that is objects do n't change instead of making an old int into a new one  we make a new int  and throw the old one away june 9 2011 immutable objects what if we want to change an immutable object it 's a lot of work  we need to make a new object that is identical to the old one except for our changes this is fine for small things like ints and strings  but takes a lot of time for large things like images june 9 2011 mutable objects if we want to change a really large object without keeping the original  then making a big copy  modifying it and tossing the rest is wasteful instead  we can use a mutable object  that we 're allowed to change this also allows us to define functions that change objects  rather than return new ones june 9 2011 aliasing consider  x = 10 y = x x = 5 print x  y we know this will print 5 10 to the screen  because ints are immutable june 9 2011 aliasing let pic be an already initialised picture and consider  x = pic y = x # sets the green to 0 for pixel in x  media.set_green  pixel,0  media.show  y  pics are mutable  so this will show a picture with no green june 9 2011 aliasing and functions when one calls a function  one is effectively beginning with a bunch of assignment statements that is  the parameters are assigned to the local variables but with mutable objects  these assignment statements mean that the local variable refers to a mutable object that it can change this is why functions can change mutable objects  but not immutable ones june 9 2011 break  the first june 9 2011 lists recall from the assignment that you had to refer to each co-ordinate by a variable this is annoying  and can easily be really slow in high-dimensional spaces python has a way of grouping similar items called a list denoted by  list_name =  list_elt0  list_elt1    list_eltn  june 9 2011 lists to get to the i-th element of a list we use  list_name  i-1  we use i-1 because lists are indexed from 0 this means to refer to the elements of a 4 element list named list_name we use list_name  0   list_name  1   list_name  2   list_name  3  lists are mutable june 9 2011 lists you can also have an empty list     you can index into lists from the back list_name  -i  returns the ith element from the back lists are heterogeneous  that is  the elements in a list need not be the same type  can have ints and strings can even have lists themselves june 9 2011 lists  functions lists come with lots of useful functions and methods len  list_name   as with strings  returns the length of the list min  list_name  and max  list_name  return the min and max so long as the list is well defined sum  list_name  returns the sum of elements so long as they 're numbered not defined for lists of strings june 9 2011 lists  methods append  value  – adds the value to the end of the list sort    sorts the list so long as this is well defined  need consistent notions of > and = =  insert  index  value  – inserts the element value at the index specified remove  value  – removes the first instance of value count  value  – counts the number of instances of value in the list june 9 2011 looping over lists often we want to do a similar operation to every element of the list python allows us to do this using for loops for item in list  block this is equivalent to  item = list  0  block item = list  1  block  june 9 2011 looping over lists loops can be tricky with immutable objects for item in list  block here  item is immutable  so we ca n't alter the list elements if we want to alter the list elements  we need to refer to the indices of the list june 9 2011 looping over lists to do that  we use the range   function range  i  returns an ordered list of ints ranging from 0 to i-1 range  i,j  returns an ordered list of ints ranging from i to j-1 inclusive range  i,j,k  returns a list of ints ranging from i to j-1 with a step of at least k between ints so range  i,k  = = range  i,k,1  to modify a list element by element we use  for i in range  len  list    block june 9 2011 list slicing sometimes we want to perform operations on a sublist to refer to a sublist we use list slicing y = x  i  j  gives us a list y with the elements from i to j-1 inclusive x    makes a list that contains all the elements of the original x  i   makes a list that contains the elements from i to the end x   j  makes a list that contains the elements from the beginning to j-1 y is a new list  so that it is not aliased with x june 9 2011 break  the second june 9 2011 tuples sometimes we want our lists to be immutable can help if we 're worried about aliasing carelessness to do that we can make a tuple tuple_name =  item0,item1,item2  items are referenced by tuple_name  i  not tuple_name  i  single element tuples must be defined with a comma to avoid ambiguity –  8 + 3  vs  8 + 3   june 9 2011 strings revisted strings can be considered tuples of individual characters  since they are immutable   in particular  this means that we can use the list knowlege that we gained  an apply it to strings can reference individual characters by string  + /-i   strings are not heterogenous  they can only contain characters min   and max   defined on strings  but sum   is not you can slice strings just as you can lists june 9 2011 string methods revisted now that we know that we can index into strings  we can look at some more string methods find  substring   give the index of the first character in a matching the substring from the left or -1 if no such character exists rfind  substring   same as above  but from the right find  substring,i,j   same as find    but looks only in string  i  j   june 9 2011 nested lists because lists are heterogeneous  we can have lists of lists this is useful if we want matrices  or to represent a grid or higher dimenstional space we then reference elements by list_name  i   j  if we want the jth element of the ith list so then naturally  if we wish to loop over all the elements we need nested loops  for item in list_name  for item2 in item  block csc 108h  introduction to computer programming summer 2011 marek janicki june 9 2011 administration just to be clear  it 's okay to ask questions about the assignment at office hours  even if it 's in the last 24 hours assignment 2 will come out over the weekend  and the deadline will be moved to the 27th  office hours will be held monday instead of tuesday that week the midterm will be held june 30th at the regular lecture time and regular lecture room june 9 2011 administration there is a request for a volunteer note-taker there is a student in this class who requires a volunteer notetaker as an accommodation for a disability by signing up and posting your notes  you can make a significant difference for this individual 's capacity to fully participate in this course go to  http  //www.studentlife.utoronto.ca/accessibility/pcourselist.aspx or come in person to accessibility services 215 huron st suite 939 many students notice the quality of their notetaking improves through volunteering you will also receive a certificate of recognition june 9 2011 immutable objects so far all we 've seen are immutable objects that is objects do n't change instead of making an old int into a new one  we make a new int  and throw the old one away june 9 2011 immutable objects what if we want to change an immutable object it 's a lot of work  we need to make a new object that is identical to the old one except for our changes this is fine for small things like ints and strings  but takes a lot of time for large things like images june 9 2011 mutable objects if we want to change a really large object without keeping the original  then making a big copy  modifying it and tossing the rest is wasteful instead  we can use a mutable object  that we 're allowed to change this also allows us to define functions that change objects  rather than return new ones june 9 2011 aliasing consider  x = 10 y = x x = 5 print x  y we know this will print 5 10 to the screen  because ints are immutable june 9 2011 aliasing let pic be an already initialised picture and consider  x = pic y = x # sets the green to 0 for pixel in x  media.set_green  pixel,0  media.show  y  pics are mutable  so this will show a picture with no green june 9 2011 aliasing and functions when one calls a function  one is effectively beginning with a bunch of assignment statements that is  the parameters are assigned to the local variables but with mutable objects  these assignment statements mean that the local variable refers to a mutable object that it can change this is why functions can change mutable objects  but not immutable ones june 9 2011 break  the first june 9 2011 lists recall from the assignment that you had to refer to each co-ordinate by a variable this is annoying  and can easily be really slow in high-dimensional spaces python has a way of grouping similar items called a list denoted by  list_name =  list_elt0  list_elt1    list_eltn  june 9 2011 lists to get to the i-th element of a list we use  list_name  i-1  we use i-1 because lists are indexed from 0 this means to refer to the elements of a 4 element list named list_name we use list_name  0   list_name  1   list_name  2   list_name  3  lists are mutable june 9 2011 lists you can also have an empty list     you can index into lists from the back list_name  -i  returns the ith element from the back lists are heterogeneous  that is  the elements in a list need not be the same type  can have ints and strings can even have lists themselves june 9 2011 lists  functions lists come with lots of useful functions and methods len  list_name   as with strings  returns the length of the list min  list_name  and max  list_name  return the min and max so long as the list is well defined sum  list_name  returns the sum of elements so long as they 're numbered not defined for lists of strings june 9 2011 lists  methods append  value  – adds the value to the end of the list sort    sorts the list so long as this is well defined  need consistent notions of > and = =  insert  index  value  – inserts the element value at the index specified remove  value  – removes the first instance of value count  value  – counts the number of instances of value in the list june 9 2011 looping over lists often we want to do a similar operation to every element of the list python allows us to do this using for loops for item in list  block this is equivalent to  item = list  0  block item = list  1  block  june 9 2011 looping over lists loops can be tricky with immutable objects for item in list  block here  item is immutable  so we ca n't alter the list elements if we want to alter the list elements  we need to refer to the indices of the list june 9 2011 looping over lists to do that  we use the range   function range  i  returns an ordered list of ints ranging from 0 to i-1 range  i,j  returns an ordered list of ints ranging from i to j-1 inclusive range  i,j,k  returns a list of ints ranging from i to j-1 with a step of at least k between ints so range  i,k  = = range  i,k,1  to modify a list element by element we use  for i in range  len  list    block june 9 2011 list slicing sometimes we want to perform operations on a sublist to refer to a sublist we use list slicing y = x  i  j  gives us a list y with the elements from i to j-1 inclusive x    makes a list that contains all the elements of the original x  i   makes a list that contains the elements from i to the end x   j  makes a list that contains the elements from the beginning to j-1 y is a new list  so that it is not aliased with x june 9 2011 break  the second june 9 2011 tuples sometimes we want our lists to be immutable can help if we 're worried about aliasing carelessness to do that we can make a tuple tuple_name =  item0,item1,item2  items are referenced by tuple_name  i  not tuple_name  i  single element tuples must be defined with a comma to avoid ambiguity –  8 + 3  vs  8 + 3   june 9 2011 strings revisted strings can be considered tuples of individual characters  since they are immutable   in particular  this means that we can use the list knowlege that we gained  an apply it to strings can reference individual characters by string  + /-i   strings are not heterogenous  they can only contain characters min   and max   defined on strings  but sum   is not you can slice strings just as you can lists june 9 2011 string methods revisted now that we know that we can index into strings  we can look at some more string methods find  substring   give the index of the first character in a matching the substring from the left or -1 if no such character exists rfind  substring   same as above  but from the right find  substring,i,j   same as find    but looks only in string  i  j   june 9 2011 nested lists because lists are heterogeneous  we can have lists of lists this is useful if we want matrices  or to represent a grid or higher dimenstional space we then reference elements by list_name  i   j  if we want the jth element of the ith list so then naturally  if we wish to loop over all the elements we need nested loops  for item in list_name  for item2 in item  block csc 108h  introduction to computer programming summer 2011 marek janicki june 9 2011 administration just to be clear  it 's okay to ask questions about the assignment at office hours  even if it 's in the last 24 hours assignment 2 will come out over the weekend  and the deadline will be moved to the 27th  office hours will be held monday instead of tuesday that week the midterm will be held june 30th at the regular lecture time and regular lecture room june 9 2011 administration there is a request for a volunteer note-taker there is a student in this class who requires a volunteer notetaker as an accommodation for a disability by signing up and posting your notes  you can make a significant difference for this individual 's capacity to fully participate in this course go to  http  //www.studentlife.utoronto.ca/accessibility/pcourselist.aspx or come in person to accessibility services 215 huron st suite 939 many students notice the quality of their notetaking improves through volunteering you will also receive a certificate of recognition june 9 2011 immutable objects so far all we 've seen are immutable objects that is objects do n't change instead of making an old int into a new one  we make a new int  and throw the old one away june 9 2011 immutable objects what if we want to change an immutable object it 's a lot of work  we need to make a new object that is identical to the old one except for our changes this is fine for small things like ints and strings  but takes a lot of time for large things like images june 9 2011 mutable objects if we want to change a really large object without keeping the original  then making a big copy  modifying it and tossing the rest is wasteful instead  we can use a mutable object  that we 're allowed to change this also allows us to define functions that change objects  rather than return new ones june 9 2011 aliasing consider  x = 10 y = x x = 5 print x  y we know this will print 5 10 to the screen  because ints are immutable june 9 2011 aliasing let pic be an already initialised picture and consider  x = pic y = x # sets the green to 0 for pixel in x  media.set_green  pixel,0  media.show  y  pics are mutable  so this will show a picture with no green june 9 2011 aliasing and functions when one calls a function  one is effectively beginning with a bunch of assignment statements that is  the parameters are assigned to the local variables but with mutable objects  these assignment statements mean that the local variable refers to a mutable object that it can change this is why functions can change mutable objects  but not immutable ones june 9 2011 break  the first june 9 2011 lists recall from the assignment that you had to refer to each co-ordinate by a variable this is annoying  and can easily be really slow in high-dimensional spaces python has a way of grouping similar items called a list denoted by  list_name =  list_elt0  list_elt1    list_eltn  june 9 2011 lists to get to the i-th element of a list we use  list_name  i-1  we use i-1 because lists are indexed from 0 this means to refer to the elements of a 4 element list named list_name we use list_name  0   list_name  1   list_name  2   list_name  3  lists are mutable june 9 2011 lists you can also have an empty list     you can index into lists from the back list_name  -i  returns the ith element from the back lists are heterogeneous  that is  the elements in a list need not be the same type  can have ints and strings can even have lists themselves june 9 2011 lists  functions lists come with lots of useful functions and methods len  list_name   as with strings  returns the length of the list min  list_name  and max  list_name  return the min and max so long as the list is well defined sum  list_name  returns the sum of elements so long as they 're numbered not defined for lists of strings june 9 2011 lists  methods append  value  – adds the value to the end of the list sort    sorts the list so long as this is well defined  need consistent notions of > and = =  insert  index  value  – inserts the element value at the index specified remove  value  – removes the first instance of value count  value  – counts the number of instances of value in the list june 9 2011 looping over lists often we want to do a similar operation to every element of the list python allows us to do this using for loops for item in list  block this is equivalent to  item = list  0  block item = list  1  block  june 9 2011 looping over lists loops can be tricky with immutable objects for item in list  block here  item is immutable  so we ca n't alter the list elements if we want to alter the list elements  we need to refer to the indices of the list june 9 2011 looping over lists to do that  we use the range   function range  i  returns an ordered list of ints ranging from 0 to i-1 range  i,j  returns an ordered list of ints ranging from i to j-1 inclusive range  i,j,k  returns a list of ints ranging from i to j-1 with a step of at least k between ints so range  i,k  = = range  i,k,1  to modify a list element by element we use  for i in range  len  list    block june 9 2011 list slicing sometimes we want to perform operations on a sublist to refer to a sublist we use list slicing y = x  i  j  gives us a list y with the elements from i to j-1 inclusive x    makes a list that contains all the elements of the original x  i   makes a list that contains the elements from i to the end x   j  makes a list that contains the elements from the beginning to j-1 y is a new list  so that it is not aliased with x june 9 2011 break  the second june 9 2011 tuples sometimes we want our lists to be immutable can help if we 're worried about aliasing carelessness to do that we can make a tuple tuple_name =  item0,item1,item2  items are referenced by tuple_name  i  not tuple_name  i  single element tuples must be defined with a comma to avoid ambiguity –  8 + 3  vs  8 + 3   june 9 2011 strings revisted strings can be considered tuples of individual characters  since they are immutable   in particular  this means that we can use the list knowlege that we gained  an apply it to strings can reference individual characters by string  + /-i   strings are not heterogenous  they can only contain characters min   and max   defined on strings  but sum   is not you can slice strings just as you can lists june 9 2011 string methods revisted now that we know that we can index into strings  we can look at some more string methods find  substring   give the index of the first character in a matching the substring from the left or -1 if no such character exists rfind  substring   same as above  but from the right find  substring,i,j   same as find    but looks only in string  i  j   june 9 2011 nested lists because lists are heterogeneous  we can have lists of lists this is useful if we want matrices  or to represent a grid or higher dimenstional space we then reference elements by list_name  i   j  if we want the jth element of the ith list so then naturally  if we wish to loop over all the elements we need nested loops  for item in list_name  for item2 in item  block csc 108h  introduction to computer programming summer 2011 marek janicki june 9 2011 administration just to be clear  it 's okay to ask questions about the assignment at office hours  even if it 's in the last 24 hours assignment 2 will come out over the weekend  and the deadline will be moved to the 27th  office hours will be held monday instead of tuesday that week the midterm will be held june 30th at the regular lecture time and regular lecture room june 9 2011 administration there is a request for a volunteer note-taker there is a student in this class who requires a volunteer notetaker as an accommodation for a disability by signing up and posting your notes  you can make a significant difference for this individual 's capacity to fully participate in this course go to  http  //www.studentlife.utoronto.ca/accessibility/pcourselist.aspx or come in person to accessibility services 215 huron st suite 939 many students notice the quality of their notetaking improves through volunteering you will also receive a certificate of recognition june 9 2011 immutable objects so far all we 've seen are immutable objects that is objects do n't change instead of making an old int into a new one  we make a new int  and throw the old one away june 9 2011 immutable objects what if we want to change an immutable object it 's a lot of work  we need to make a new object that is identical to the old one except for our changes this is fine for small things like ints and strings  but takes a lot of time for large things like images june 9 2011 mutable objects if we want to change a really large object without keeping the original  then making a big copy  modifying it and tossing the rest is wasteful instead  we can use a mutable object  that we 're allowed to change this also allows us to define functions that change objects  rather than return new ones june 9 2011 aliasing consider  x = 10 y = x x = 5 print x  y we know this will print 5 10 to the screen  because ints are immutable june 9 2011 aliasing let pic be an already initialised picture and consider  x = pic y = x # sets the green to 0 for pixel in x  media.set_green  pixel,0  media.show  y  pics are mutable  so this will show a picture with no green june 9 2011 aliasing and functions when one calls a function  one is effectively beginning with a bunch of assignment statements that is  the parameters are assigned to the local variables but with mutable objects  these assignment statements mean that the local variable refers to a mutable object that it can change this is why functions can change mutable objects  but not immutable ones june 9 2011 break  the first june 9 2011 lists recall from the assignment that you had to refer to each co-ordinate by a variable this is annoying  and can easily be really slow in high-dimensional spaces python has a way of grouping similar items called a list denoted by  list_name =  list_elt0  list_elt1    list_eltn  june 9 2011 lists to get to the i-th element of a list we use  list_name  i-1  we use i-1 because lists are indexed from 0 this means to refer to the elements of a 4 element list named list_name we use list_name  0   list_name  1   list_name  2   list_name  3  lists are mutable june 9 2011 lists you can also have an empty list     you can index into lists from the back list_name  -i  returns the ith element from the back lists are heterogeneous  that is  the elements in a list need not be the same type  can have ints and strings can even have lists themselves june 9 2011 lists  functions lists come with lots of useful functions and methods len  list_name   as with strings  returns the length of the list min  list_name  and max  list_name  return the min and max so long as the list is well defined sum  list_name  returns the sum of elements so long as they 're numbered not defined for lists of strings june 9 2011 lists  methods append  value  – adds the value to the end of the list sort    sorts the list so long as this is well defined  need consistent notions of > and = =  insert  index  value  – inserts the element value at the index specified remove  value  – removes the first instance of value count  value  – counts the number of instances of value in the list june 9 2011 looping over lists often we want to do a similar operation to every element of the list python allows us to do this using for loops for item in list  block this is equivalent to  item = list  0  block item = list  1  block  june 9 2011 looping over lists loops can be tricky with immutable objects for item in list  block here  item is immutable  so we ca n't alter the list elements if we want to alter the list elements  we need to refer to the indices of the list june 9 2011 looping over lists to do that  we use the range   function range  i  returns an ordered list of ints ranging from 0 to i-1 range  i,j  returns an ordered list of ints ranging from i to j-1 inclusive range  i,j,k  returns a list of ints ranging from i to j-1 with a step of at least k between ints so range  i,k  = = range  i,k,1  to modify a list element by element we use  for i in range  len  list    block june 9 2011 list slicing sometimes we want to perform operations on a sublist to refer to a sublist we use list slicing y = x  i  j  gives us a list y with the elements from i to j-1 inclusive x    makes a list that contains all the elements of the original x  i   makes a list that contains the elements from i to the end x   j  makes a list that contains the elements from the beginning to j-1 y is a new list  so that it is not aliased with x june 9 2011 break  the second june 9 2011 tuples sometimes we want our lists to be immutable can help if we 're worried about aliasing carelessness to do that we can make a tuple tuple_name =  item0,item1,item2  items are referenced by tuple_name  i  not tuple_name  i  single element tuples must be defined with a comma to avoid ambiguity –  8 + 3  vs  8 + 3   june 9 2011 strings revisted strings can be considered tuples of individual characters  since they are immutable   in particular  this means that we can use the list knowlege that we gained  an apply it to strings can reference individual characters by string  + /-i   strings are not heterogenous  they can only contain characters min   and max   defined on strings  but sum   is not you can slice strings just as you can lists june 9 2011 string methods revisted now that we know that we can index into strings  we can look at some more string methods find  substring   give the index of the first character in a matching the substring from the left or -1 if no such character exists rfind  substring   same as above  but from the right find  substring,i,j   same as find    but looks only in string  i  j   june 9 2011 nested lists because lists are heterogeneous  we can have lists of lists this is useful if we want matrices  or to represent a grid or higher dimenstional space we then reference elements by list_name  i   j  if we want the jth element of the ith list so then naturally  if we wish to loop over all the elements we need nested loops  for item in list_name  for item2 in item  block 