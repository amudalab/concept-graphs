features of mathematics::features of mathematics
science like mathematicians::science like mathematicians
scientists use formal::scientists use formal
languages to denote::languages to denote
components into systems::components into systems
systems and evaluating::systems and evaluating
tradeoffs among alternatives::tradeoffs among alternatives
alternatives like scientists::alternatives like scientists
observe the behavior::observe the behavior
behavior of complex::behavior of complex
predictions the single::predictions the single
single most important::single most important
scientist is problem::scientist is problem
problem solving problem::problem solving problem
solving problem solving::solving problem solving
problem solving means::problem solving means
means the ability::means the ability
ability to formulate::ability to formulate
creatively about solutions::creatively about solutions
express a solution::express a solution
process of learning::process of learning
learning to program::learning to program
opportunity to practice::opportunity to practice
practice problem solving::practice problem solving
problem solving skills::problem solving skills
python programming language::python programming language
language the programming::language the programming
learning is python::learning is python
languages loosely speaking::languages loosely speaking
execute programs written::execute programs written
written in low-level::written in low-level
run this extra::run this extra
extra processing takes::extra processing takes
disadvantage of high-level::disadvantage of high-level
advantages are enormous::advantages are enormous
easier to program::easier to program
high-level language programs::high-level language programs
language programs written::language programs written
shorter and easier::shorter and easier
easier to read::easier to read
languages are portable::languages are portable
kinds of computers::kinds of computers
modifications low-level programs::modifications low-level programs
programs can run::programs can run
kind of computer::kind of computer
rewritten to run::rewritten to run
programs are written::programs are written
written in high-level::written in high-level
high-level languages low-level::high-level languages low-level
languages low-level languages::languages low-level languages
applications two kinds::applications two kinds
kinds of programs::kinds of programs
programs process high-level::programs process high-level
process high-level languages::process high-level languages
languages into low-level::languages into low-level
interpreters and compilers::interpreters and compilers
compilers an interpreter::compilers an interpreter
reads a high-level::reads a high-level
program and executes::program and executes
processes the program::processes the program
alternately reading lines::alternately reading lines
lines and performing::lines and performing
performing computations source::performing computations source
computations source output::computations source output
source output code::source output code
output code interpreter::output code interpreter
interpreter a compiler::interpreter a compiler
reads the program::reads the program
program and translates::program and translates
program starts running::program starts running
program is compiled::program is compiled
translation output code::translation output code
output code object::output code object
code object executor::code object executor
object executor code::object executor code
executor code source::executor code source
code source compiler::code source compiler
source compiler python::source compiler python
python is considered::python is considered
considered an interpreted::considered an interpreted
language because python::language because python
programs are executed::programs are executed
mode and script::mode and script
mode in command-line::mode in command-line
type python programs::type python programs
prints the result::prints the result
credits or license::credits or license
command that starts::command that starts
starts the python::starts the python
lines are messages::lines are messages
prompt the interpreter::prompt the interpreter
ready we typed::ready we typed
write a program::write a program
interpreter to execute::interpreter to execute
execute the contents::execute the contents
editor to create::editor to create
create a file::create a file
file named latoya.py::file named latoya.py
programs have names::programs have names
names that end::names that end
end with .py::end with .py
.py to execute::.py to execute
execute the program::execute the program
details of executing::details of executing
programs may differ::programs may differ
book are executed::book are executed
command line working::command line working
line is convenient::line is convenient
convenient for program::convenient for program
development and testing::development and testing
programs and execute::programs and execute
execute them immediately::execute them immediately
execute or modify::execute or modify
program a program::program a program
sequence of instructions::sequence of instructions
instructions that specifies::instructions that specifies
perform a computation::perform a computation
computation the computation::computation the computation
solving a system::solving a system
system of equations::system of equations
equations or finding::equations or finding
finding the roots::finding the roots
searching and replacing::searching and replacing
compiling a program::compiling a program
program the details::program the details
screen or send::screen or send
perform basic mathematical::perform basic mathematical
basic mathematical operations::basic mathematical operations
operations like addition::operations like addition
addition and multiplication::addition and multiplication
multiplication conditional execution::multiplication conditional execution
conditions and execute::conditions and execute
sequence of statements::sequence of statements
perform some action::perform some action
matter how complicated::matter how complicated
process of breaking::process of breaking
breaking a large::breaking a large
task into smaller::task into smaller
smaller and smaller::smaller and smaller
subtasks are simple::subtasks are simple
talk about algorithms::talk about algorithms
done by human::done by human
leads to errors::leads to errors
errors for whimsical::errors for whimsical
process of tracking::process of tracking
debugging three kinds::debugging three kinds
kinds of errors::kinds of errors
errors can occur::errors can occur
order to track::order to track
quickly 1.3.1 syntax::quickly 1.3.1 syntax
1.3.1 syntax errors::1.3.1 syntax errors
syntax errors python::syntax errors python
execute a program::execute a program
fails and returns::fails and returns
returns an error::returns an error
error message syntax::error message syntax
message syntax refers::message syntax refers
sentence must begin::sentence must begin
letter and end::letter and end
period this sentence::period this sentence
read the poetry::read the poetry
cummings without spewing::cummings without spewing
spewing error messages::spewing error messages
error messages python::error messages python
single syntax error::single syntax error
python will print::python will print
print an error::print an error
message and quit::message and quit
run your program::run your program
first few weeks::first few weeks
spend a lot::spend a lot
tracking down syntax::tracking down syntax
make fewer errors::make fewer errors
errors and find::errors and find
find them faster::find them faster
1.3.2 runtime errors::1.3.2 runtime errors
type of error::type of error
run the program::run the program
program these errors::program these errors
happened runtime errors::happened runtime errors
errors are rare::errors are rare
first few chapters::first few chapters
1.3.3 semantic errors::1.3.3 semantic errors
generate any error::generate any error
program you wrote::program you wrote
program you wanted::program you wanted
wanted to write::wanted to write
write the meaning::write the meaning
wrong identifying semantic::wrong identifying semantic
identifying semantic errors::identifying semantic errors
doing 1.3.4 experimental::doing 1.3.4 experimental
1.3.4 experimental debugging::1.3.4 experimental debugging
acquire is debugging::acquire is debugging
parts of programming::parts of programming
confronted with clues::confronted with clues
infer the processes::infer the processes
processes and events::processes and events
events that led::events that led
modify your program::modify your program
hypothesis was correct::hypothesis was correct
predict the result::predict the result
hypothesis was wrong::hypothesis was wrong
sherlock holmes pointed::sherlock holmes pointed
eliminated the impossible::eliminated the impossible
programming and debugging::programming and debugging
debugging a program::debugging a program
make small modifications::make small modifications
thousands of lines::thousands of lines
lines of code::lines of code
simple program linus::simple program linus
program linus torvalds::program linus torvalds
explore the intel::explore the intel
switch between printing::switch between printing
aaaa and bbbb::aaaa and bbbb
evolved to linux::evolved to linux
linux users guide::linux users guide
users guide beta::users guide beta
guide beta version::guide beta version
chapters will make::chapters will make
make more suggestions::make more suggestions
suggestions about debugging::suggestions about debugging
formal and natural::formal and natural
natural languages natural::natural languages natural
languages natural languages::languages natural languages
languages that people::languages that people
designed by people::designed by people
impose some order::impose some order
evolved naturally formal::evolved naturally formal
naturally formal languages::naturally formal languages
languages are languages::languages are languages
people for specific::people for specific
notation that mathematicians::notation that mathematicians
good at denoting::good at denoting
relationships among numbers::relationships among numbers
numbers and symbols::numbers and symbols
language to represent::language to represent
represent the chemical::represent the chemical
structure of molecules::structure of molecules
languages are formal::languages are formal
designed to express::designed to express
express computations formal::express computations formal
computations formal languages::computations formal languages
formal languages tend::formal languages tend
rules about syntax::rules about syntax
syntactically correct mathematical::syntactically correct mathematical
correct mathematical statement::correct mathematical statement
syntactically correct chemical::syntactically correct chemical
pertaining to tokens::pertaining to tokens
tokens and structure::tokens and structure
token in mathematics::token in mathematics
type of syntax::type of syntax
syntax error pertains::syntax error pertains
tokens are arranged::tokens are arranged
arranged the statement::arranged the statement
create what appears::create what appears
well-structured english sentence::well-structured english sentence
sentence with unrecognizable::sentence with unrecognizable
write another sentence::write another sentence
read a sentence::read a sentence
sentence in english::sentence in english
hear the sentence::hear the sentence
subject and fell::subject and fell
parsed a sentence::parsed a sentence
means to fall::means to fall
understand the general::understand the general
sentence although formal::sentence although formal
features in common::features in common
languages are full::languages are full
full of ambiguity::full of ambiguity
information formal languages::information formal languages
languages are designed::languages are designed
order to make::order to make
ambiguity and reduce::ambiguity and reduce
natural languages employ::natural languages employ
languages employ lots::languages employ lots
lots of redundancy::lots of redundancy
verbose formal languages::verbose formal languages
full of idiom::full of idiom
idiom and metaphor::idiom and metaphor
falling formal languages::falling formal languages
people who grow::people who grow
grow up speaking::grow up speaking
speaking a natural::speaking a natural
hard time adjusting::hard time adjusting
adjusting to formal::adjusting to formal
difference between formal::difference between formal
difference between poetry::difference between poetry
poetry and prose::poetry and prose
poem together creates::poem together creates
creates an effect::creates an effect
effect or emotional::effect or emotional
emotional response ambiguity::emotional response ambiguity
meaning of words::meaning of words
contributes more meaning::contributes more meaning
amenable to analysis::amenable to analysis
analysis than poetry::analysis than poetry
program is unambiguous::program is unambiguous
unambiguous and literal::unambiguous and literal
suggestions for reading::suggestions for reading
remember that formal::remember that formal
dense than natural::dense than natural
longer to read::longer to read
idea to read::idea to read
read from top::read from top
top to bottom::top to bottom
left to right::left to right
learn to parse::learn to parse
parse the program::parse the program
identifying the tokens::identifying the tokens
tokens and interpreting::tokens and interpreting
interpreting the structure::interpreting the structure
matter little things::matter little things
things like spelling::things like spelling
errors and bad::errors and bad
make a big::make a big
first program written::first program written
display the words::display the words
paper it displays::paper it displays
displays a value::displays a value
mark the beginning::mark the beginning
beginning and end::beginning and end
result some people::result some people
judge the quality::judge the quality
world ! program::world ! program
glossary problem solving::glossary problem solving
process of formulating::process of formulating
formulating a problem::formulating a problem
finding a solution::finding a solution
expressing the solution::expressing the solution
solution high-level language::solution high-level language
language like python::language like python
easy for humans::easy for humans
humans to read::humans to read
read and write::read and write
write low-level language::write low-level language
computer to execute::computer to execute
assembly language portability::assembly language portability
language by translating::language by translating
translate a program::translate a program
execution source code::execution source code
compiled object code::compiled object code
translates the program::translates the program
set of instructions::set of instructions
specifies a computation::specifies a computation
process for solving::process for solving
solving a category::solving a category
category of problems::category of problems
process of finding::process of finding
finding and removing::finding and removing
kinds of programming::kinds of programming
programming errors syntax::programming errors syntax
program syntax error::program syntax error
program that makes::program that makes
makes it impossible::makes it impossible
impossible to parse::impossible to parse
impossible to interpret::impossible to interpret
program has started::program has started
started to execute::started to execute
prevents the program::prevents the program
program from continuing::program from continuing
runtime error semantic::runtime error semantic
error semantic error::error semantic error
programmer intended semantics::programmer intended semantics
program natural language::program natural language
speak that evolved::speak that evolved
naturally formal language::naturally formal language
people have designed::people have designed
designed for specific::designed for specific
representing mathematical ideas::representing mathematical ideas
ideas or computer::ideas or computer
formal languages token::formal languages token
natural language parse::natural language parse
examine a program::examine a program
program and analyze::program and analyze
analyze the syntactic::analyze the syntactic
syntactic structure print::syntactic structure print
structure print statement::structure print statement
interpreter to display::interpreter to display
display a value::display a value
expressions and statements::expressions and statements
values and types::values and types
types a value::types a value
manipulates the values::manipulates the values
string of letters::string of letters
enclosed in quotation::enclosed in quotation
marks the print::marks the print
statement also works::statement also works
works for integers::works for integers
type a value::type a value
str and integers::str and integers
type called float::type called float
numbers are represented::numbers are represented
format called floating-point::format called floating-point
marks like strings::marks like strings
type a large::type a large
commas between groups::commas between groups
integer in python::integer in python
runs without producing::runs without producing
producing an error::producing an error
ability to manipulate::ability to manipulate
variables a variable::variables a variable
value the assignment::value the assignment
assignment statement creates::assignment statement creates
creates new variables::creates new variables
makes three assignments::makes three assignments
assignments the first::assignments the first
assigns the string::assigns the string
variable named message::variable named message
variables on paper::variables on paper
variable s value::variable s value
value this kind::value this kind
kind of figure::kind of figure
shows what state::shows what state
variable s state::variable s state
state of mind::state of mind
shows the result::shows the result
names and keywords::names and keywords
works with variables::works with variables
case the result::case the result
value it refers::value it refers
programmers generally choose::programmers generally choose
generally choose names::generally choose names
meaningful they document::meaningful they document
letters and numbers::letters and numbers
convention we don::convention we don
remember that case::remember that case
case matters bruce::case matters bruce
bruce and bruce::bruce and bruce
variables the underscore::variables the underscore
names with multiple::names with multiple
price of tea::price of tea
tea in china::tea in china
give a variable::give a variable
variable an illegal::variable an illegal
76trombones = big::76trombones = big
big parade syntaxerror::big parade syntaxerror
class = computer::class = computer
invalid syntax 76trombones::invalid syntax 76trombones
76trombones is illegal::76trombones is illegal
wrong with class::wrong with class
class it turns::class it turns
out that class::out that class
python keywords keywords::python keywords keywords
keywords keywords define::keywords keywords define
define the language::define the language
language s rules::language s rules
rules and structure::rules and structure
variable names python::variable names python
python has twenty-nine::python has twenty-nine
return assert del::return assert del
del finally import::del finally import
pass while class::pass while class
print yield continue::print yield continue
continue except global::continue except global
global lambda raise::global lambda raise
statements a statement::statements a statement
interpreter can execute::interpreter can execute
kinds of statements::kinds of statements
print and assignment::print and assignment
type a statement::type a statement
displays the result::displays the result
value assignment statements::value assignment statements
assignment statements don::assignment statements don
don t produce::don t produce
produce a result::produce a result
result a script::result a script
print x produces::print x produces
produces the output::produces the output
assignment statement produces::assignment statement produces
produces no output::produces no output
expressions an expression::expressions an expression
combination of values::combination of values
type an expression::type an expression
expressions contain values::expressions contain values
elements a value::elements a value
considered an expression::considered an expression
evaluating an expression::evaluating an expression
thing as printing::thing as printing
printing a value::printing a value
python interpreter displays::python interpreter displays
displays the value::displays the value
enter a value::enter a value
case of strings::case of strings
includes the quotation::includes the quotation
displays the contents::displays the contents
change the script::change the script
script to display::script to display
display the values::display the values
operators and operands::operators and operands
operators are special::operators are special
symbols that represent::symbols that represent
computations like addition::computations like addition
multiplication the values::multiplication the values
values the operator::values the operator
legal python expressions::legal python expressions
expressions whose meaning::expressions whose meaning
parenthesis for grouping::parenthesis for grouping
mathematics the asterisk::mathematics the asterisk
symbol for multiplication::symbol for multiplication
symbol for exponentiation::symbol for exponentiation
variable name appears::variable name appears
operation is performed::operation is performed
surprised by division::surprised by division
value of minute::value of minute
python is performing::python is performing
performing integer division::performing integer division
operands are integers::operands are integers
division always rounds::division always rounds
calculate a percentage::calculate a percentage
result is rounded::result is rounded
correct another alternative::correct another alternative
order of operations::order of operations
order of evaluation::order of evaluation
rules of precedence::rules of precedence
operators that mathematics::operators that mathematics
remember the order::remember the order
operations on strings::operations on strings
force an expression::force an expression
expression to evaluate::expression to evaluate
expressions in parentheses::expressions in parentheses
parentheses are evaluated::parentheses are evaluated
parentheses to make::parentheses to make
make an expression::make an expression
doesn t change::doesn t change
change the result::change the result
multiplication and division::multiplication and division
higher than addition::higher than addition
addition and subtraction::addition and subtraction
precedence are evaluated::precedence are evaluated
evaluated from left::evaluated from left
multiplication happens first::multiplication happens first
right to left::right to left
strings in general::strings in general
perform mathematical operations::perform mathematical operations
assuming that message::assuming that message
message has type::message has type
message-1 hello message::message-1 -NONE- message
operator does work::operator does work
work with strings::work with strings
expect for strings::expect for strings
operator represents concatenation::operator represents concatenation
operands by linking::operands by linking
linking them end-to-end::linking them end-to-end
fruit = banana::fruit = banana
bakedgood = nut::bakedgood = nut
nut bread print::nut bread print
bread print fruit::bread print fruit
fruit + bakedgood::fruit + bakedgood
bakedgood the output::bakedgood the output
program is banana::program is banana
banana nut bread::banana nut bread
bread the space::bread the space
nut is part::nut is part
produce the space::produce the space
strings the operator::strings the operator
operator also works::operator also works
works on strings::works on strings
sense by analogy::sense by analogy
analogy with addition::analogy with addition
fun + fun::fun + fun
concatenation and repetition::concatenation and repetition
property that addition::property that addition
statements in isolation::statements in isolation
features of programming::features of programming
small building blocks::small building blocks
blocks and compose::blocks and compose
expression involving numbers::expression involving numbers
inside a print::inside a print
number of minutes::number of minutes
minutes since midnight::minutes since midnight
put arbitrary expressions::put arbitrary expressions
examples where composition::examples where composition
express complex computations::express complex computations
neatly and concisely::neatly and concisely
comments as programs::comments as programs
programs get bigger::programs get bigger
difficult to read::difficult to read
read formal languages::read formal languages
languages are dense::languages are dense
piece of code::piece of code
code and figure::code and figure
idea to add::idea to add
programs to explain::programs to explain
explain in natural::explain in natural
program is doing::program is doing
doing these notes::doing these notes
compute the percentage::compute the percentage
program the message::program the message
message is intended::message is intended
reminds the reader::reminds the reader
behavior of integer::behavior of integer
division this sort::division this sort
sort of comment::sort of comment
integer division operation::integer division operation
effect is deliberate::effect is deliberate
integer division operator::integer division operator
number or string::number or string
variable or computed::variable or computed
set of values::set of values
values the type::values the type
format for representing::format for representing
numbers with fractional::numbers with fractional
fractional parts variable::fractional parts variable
section of code::section of code
code that represents::code that represents
represents a command::represents a command
command or action::command or action
assignments and print::assignments and print
print statements assignment::print statements assignment
statement that assigns::statement that assigns
assigns a value::assigns a value
operator may change::operator may change
change in future::change in future
versions of python::versions of python
statements state diagram::statements state diagram
set of variables::set of variables
compiler to parse::compiler to parse
parse a program::parse a program
variable names operator::variable names operator
symbol that represents::symbol that represents
represents a simple::represents a simple
computation like addition::computation like addition
string concatenation operand::string concatenation operand
operator operates expression::operator operates expression
combination of variables::combination of variables
values that represents::values that represents
represents a single::represents a single
single result value::single result value
result value evaluate::result value evaluate
simplify an expression::simplify an expression
expression by performing::expression by performing
performing the operations::performing the operations
operations in order::operations in order
order to yield::order to yield
yield a single::yield a single
single value integer::single value integer
value integer division::value integer division
operation that divides::operation that divides
divides one integer::divides one integer
yields an integer::yields an integer
integer integer division::integer integer division
integer division yields::integer division yields
number of times::number of times
numerator is divisible::numerator is divisible
denominator and discards::denominator and discards
discards any remainder::discards any remainder
set of rules::set of rules
governing the order::governing the order
expressions involving multiple::expressions involving multiple
involving multiple operators::involving multiple operators
operands are evaluated::operands are evaluated
join two operands::join two operands
two operands end-to-end::two operands end-to-end
operands end-to-end composition::operands end-to-end composition
ability to combine::ability to combine
combine simple expressions::combine simple expressions
statements into compound::statements into compound
statements and expressions::statements and expressions
expressions in order::expressions in order
order to represent::order to represent
represent complex computations::represent complex computations
complex computations concisely::complex computations concisely
computations concisely comment::computations concisely comment
reading the source::reading the source
function is type::function is type
displays the type::displays the type
value or variable::value or variable
variable the value::variable the value
enclosed in parentheses::enclosed in parentheses
takes an argument::takes an argument
argument and returns::argument and returns
returns a result::returns a result
result the result::result the result
printing the return::printing the return
betty = type::betty = type
takes a value::takes a value
variable and returns::variable and returns
returns an integer::returns an integer
integer that acts::integer that acts
unique number related::unique number related
type conversion python::type conversion python
collection of built-in::collection of built-in
functions that convert::functions that convert
int function takes::int function takes
takes any value::takes any value
value and converts::value and converts
literal for int::literal for int
convert floating-point values::convert floating-point values
values to integers::values to integers
truncates the fractional::truncates the fractional
float function converts::float function converts
function converts integers::function converts integers
integers and strings::integers and strings
strings to floating-point::strings to floating-point
str function converts::str function converts
converts to type::converts to type
odd that python::odd that python
distinguishes the integer::distinguishes the integer
types the reason::types the reason
represented differently inside::represented differently inside
inside the computer::inside the computer
convert between types::convert between types
deal with integer::deal with integer
integer division returning::integer division returning
calculate the fraction::calculate the fraction
past the hour::past the hour
minute to floating-point::minute to floating-point
rules for automatic::rules for automatic
automatic type conversion::automatic type conversion
making the denominator::making the denominator
denominator a float::denominator a float
functions in mathematics::functions in mathematics
functions like sin::functions like sin
sin and log::sin and log
learned to evaluate::learned to evaluate
expressions like sin::expressions like sin
evaluate the expression::evaluate the expression
expression in parentheses::expression in parentheses
evaluate the function::evaluate the function
performing various computations::performing various computations
computations the sin::computations the sin
assuming that log::assuming that log
repeatedly to evaluate::repeatedly to evaluate
evaluate more complicated::evaluate more complicated
expressions like log::expressions like log
evaluate the argument::evaluate the argument
familiar mathematical functions::familiar mathematical functions
functions a module::functions a module
collection of related::collection of related
related functions grouped::related functions grouped
math to call::math to call
period this format::period this format
height = math.sin::height = math.sin
first statement sets::first statement sets
statement sets decibel::statement sets decibel
function called log::function called log
log that takes::log that takes
takes logarithm base::takes logarithm base
finds the sine::finds the sine
variable angle sin::variable angle sin
arguments in radians::arguments in radians
radians to convert::radians to convert
convert from degrees::convert from degrees
degrees to radians::degrees to radians
find the sine::find the sine
calculate the angle::calculate the angle
angle in radians::angle in radians
angle = degrees::angle = degrees
check the previous::check the previous
result by comparing::result by comparing
expression as part::expression as part
takes the value::takes the value
adds the result::adds the result
value of angle::value of angle
angle the sum::angle the sum
function and pass::function and pass
finds the log::finds the log
power the result::power the result
result gets assigned::result gets assigned
adding new functions::adding new functions
add new functions::add new functions
creating new functions::creating new functions
functions to solve::functions to solve
general-purpose programming language::general-purpose programming language
context of programming::context of programming
statements that performs::statements that performs
performs a desired::performs a desired
operation this operation::operation this operation
definition the functions::definition the functions
functions without worrying::functions without worrying
definitions the syntax::definitions the syntax
list of parameters::list of parameters
functions you create::functions you create
keyword the list::keyword the list
specifies what information::specifies what information
provide in order::provide in order
number of statements::number of statements
inside the function::inside the function
spaces the first::spaces the first
couple of functions::couple of functions
print this function::print this function
function is named::function is named
newline the empty::newline the empty
outputs a newline::outputs a newline
syntax for calling::syntax for calling
syntax for built-in::syntax for built-in
print first line::print first line
first line newline::first line newline
print second line::print second line
line the output::line the output
functions first line::functions first line
line second line::line second line
notice the extra::notice the extra
wanted more space::wanted more space
function named threelines::function named threelines
threelines that prints::threelines that prints
first line threelines::first line threelines
line this function::line this function
repeatedly in fact::repeatedly in fact
call another function::call another function
case threelines calls::case threelines calls
threelines calls newline::threelines calls newline
worth the trouble::worth the trouble
trouble to create::trouble to create
lot of reasons::lot of reasons
group of statements::group of statements
functions can simplify::functions can simplify
simplify a program::simplify a program
program by hiding::program by hiding
hiding a complex::hiding a complex
words in place::words in place
place of arcane::place of arcane
function can make::function can make
make a program::make a program
smaller by eliminating::smaller by eliminating
eliminating repetitive code::eliminating repetitive code
print nine consecutive::print nine consecutive
consecutive new lines::consecutive new lines
threelines three times::threelines three times
write a function::write a function
function called ninelines::function called ninelines
threelines to print::threelines to print
print nine blank::print nine blank
twentyseven new lines::twentyseven new lines
fragments from section::fragments from section
print def threelines::print def threelines
line this program::line this program
two function definitions::two function definitions
newline and threelines::newline and threelines
threelines function definitions::threelines function definitions
definitions get executed::definitions get executed
function the statements::function the statements
function definition generates::function definition generates
generates no output::generates no output
create a function::create a function
move the last::move the last
last three lines::last three lines
program and move::program and move
move the definition::move the definition
definition of newline::definition of newline
definition of threelines::definition of threelines
run this program::run this program
flow of execution::flow of execution
execution in order::execution in order
order to ensure::order to ensure
function is defined::function is defined
statements are executed::statements are executed
execution always begins::execution always begins
order from top::order from top
bottom function definitions::bottom function definitions
alter the flow::alter the flow
remember that statements::remember that statements
define one function::define one function
isn t executed::isn t executed
back to pick::back to pick
function can call::function can call
execute the statements::execute the statements
python is adept::python is adept
adept at keeping::adept at keeping
read a program::read a program
don t read::don t read
follow the flow::follow the flow
parameters and arguments::parameters and arguments
values that control::values that control
takes a numeric::takes a numeric
argument some functions::argument some functions
takes two arguments::takes two arguments
passed get assigned::passed get assigned
assigned to variables::assigned to variables
variables called parameters::variables called parameters
takes a single::takes a single
argument and assigns::argument and assigns
parameter named bruce::parameter named bruce
bruce the value::bruce the value
bruce was chosen::bruce was chosen
chosen to suggest::chosen to suggest
give a parameter::give a parameter
illustrative than bruce::illustrative than bruce
bruce the function::bruce the function
function printtwice works::function printtwice works
first function call::first function call
rules of composition::rules of composition
apply to built-in::apply to built-in
apply to user-defined::apply to user-defined
kind of expression::kind of expression
argument for printtwice::argument for printtwice
expression is evaluated::expression is evaluated
function is run::function is run
printtwice prints spamspamspamspam::printtwice prints spamspamspamspam
prints spamspamspamspam spamspamspamspam::prints spamspamspamspam spamspamspamspam
write a call::write a call
call to printtwice::call to printtwice
single or double::single or double
type of quote::type of quote
enclose the string::enclose the string
michael = eric::michael = eric
half a bee::half a bee
variable we pass::variable we pass
doesn t matter::doesn t matter
call everybody bruce::call everybody bruce
variables and parameters::variables and parameters
parameters are local::parameters are local
create a local::create a local
local variable inside::local variable inside
inside a function::inside a function
cat = part1::cat = part1
part1 + part2::part1 + part2
call the function::call the function
chant1 = pie::chant1 = pie
pie jesu domine::pie jesu domine
chant2 = dona::chant2 = dona
dona eis requiem::dona eis requiem
eis requiem pie::eis requiem pie
requiem pie jesu::requiem pie jesu
requiem when cattwice::requiem when cattwice
cat is destroyed::cat is destroyed
print cat nameerror::print cat nameerror
thing as bruce::thing as bruce
python will complain::python will complain
draw a stack::draw a stack
diagram like state::diagram like state
stack diagrams show::stack diagrams show
show the value::show the value
show the function::show the function
belongs each function::belongs each function
function is represented::function is represented
frame a frame::frame a frame
parameters and variables::parameters and variables
cattwice chant1 chant2::cattwice chant1 chant2
chant1 chant2 pie::chant1 chant2 pie
chant2 pie jesu::chant2 pie jesu
eis requiem __main__::eis requiem __main__
requiem __main__ printtwice::requiem __main__ printtwice
__main__ printtwice part1::__main__ printtwice part1
printtwice part1 part2::printtwice part1 part2
part1 part2 cat::part1 part2 cat
part2 cat pie::part2 cat pie
cat pie jesu::cat pie jesu
eis requiem dona::eis requiem dona
requiem dona eis::requiem dona eis
eis requiem bruce::eis requiem bruce
requiem bruce pie::requiem bruce pie
bruce pie jesu::bruce pie jesu
requiem the order::requiem the order
shows the flow::shows the flow
create a variable::create a variable
belongs to main::belongs to main
value as chant1::value as chant1
value as chant2::value as chant2
value as cat::value as cat
back to main::back to main
printtwice print cat::printtwice print cat
cat this list::cat this list
list of functions::list of functions
traceback it tells::traceback it tells
file the error::file the error
functions were executing::functions were executing
shows the line::shows the line
line of code::line of code
code that caused::code that caused
caused the error::caused the error
notice the similarity::notice the similarity
functions with results::functions with results
results other functions::results other functions
perform an action::perform an action
action but don::action but don
don t return::don t return
return a value::return a value
value that raises::value that raises
raises some questions::raises some questions
call a function::call a function
don t assign::don t assign
result as part::result as part
functions that yield::functions that yield
stuck with simple::stuck with simple
function like newline::function like newline
newline and printtwice::newline and printtwice
printtwice the answer::printtwice the answer
legal or illegal::legal or illegal
illegal in python::illegal in python
glossary function call::glossary function call
statement that executes::statement that executes
executes a function::executes a function
function it consists::function it consists
list of arguments::list of arguments
value is assigned::value is assigned
function return value::function return value
expression type conversion::expression type conversion
statement that takes::statement that takes
type and computes::type and computes
type type coercion::type type coercion
python s coercion::python s coercion
coercion rules module::coercion rules module
functions and classes::functions and classes
classes dot notation::classes dot notation
calling a function::calling a function
result function definition::result function definition
statement that creates::statement that creates
statements it executes::statements it executes
program run parameter::program run parameter
argument local variable::argument local variable
variable defined inside::variable defined inside
function a local::function a local
inside its function::inside its function
function stack diagram::function stack diagram
stack of functions::stack of functions
diagram that represents::diagram that represents
represents a function::represents a function
runtime error occurs::runtime error occurs
conditionals and recursion::conditionals and recursion
operator the modulus::operator the modulus
modulus operator works::modulus operator works
works on integers::works on integers
yields the remainder::yields the remainder
operand is divided::operand is divided
modulus operator turns::modulus operator turns
number is divisible::number is divisible
extract the right-most::extract the right-most
digit or digits::digit or digits
yields the right-most::yields the right-most
yields the last::yields the last
last two digits::last two digits
expressions a boolean::expressions a boolean
true or false::true or false
write a boolean::write a boolean
compares two values::compares two values
values and produces::values and produces
produces a boolean::produces a boolean
operands are equal::operands are equal
expression is true::expression is true
true and false::true and false
false are special::false are special
built into python::built into python
symbols a common::symbols a common
single equal sign::single equal sign
double equal sign::double equal sign
operators is similar::operators is similar
meaning in english::meaning in english
conditions is true::conditions is true
negates a boolean::negates a boolean
strict any nonzero::strict any nonzero
number is interpreted::number is interpreted
interpreted as true::interpreted as true
sort of thing::sort of thing
considered good style::considered good style
compare a value::compare a value
order to write::order to write
write useful programs::write useful programs
ability to check::ability to check
conditions and change::conditions and change
change the behavior::change the behavior
program accordingly conditional::program accordingly conditional
conditional statements give::conditional statements give
ability the simplest::ability the simplest
positive the boolean::positive the boolean
statement gets executed::statement gets executed
statement is made::statement is made
block of statements::block of statements
statement the header::statement the header
line and ends::line and ends
statements that follow::statements that follow
block the first::block the first
first unindented statement::first unindented statement
unindented statement marks::unindented statement marks
marks the end::marks the end
block a statement::block a statement
statement block inside::statement block inside
inside a compound::inside a compound
keeper for code::keeper for code
haven t written::haven t written
statement is alternative::statement is alternative
executed the syntax::executed the syntax
displays a message::displays a message
condition is false::condition is false
set of statements::set of statements
statements is executed::statements is executed
executed the alternatives::executed the alternatives
check the parity::check the parity
evenness or oddness::evenness or oddness
wrap this code::wrap this code
provide any integer::provide any integer
express a computation::express a computation
number of elif::number of elif
print invalid choice::print invalid choice
choice each condition::choice each condition
condition is checked::condition is checked
checked in order::checked in order
condition is true::condition is true
first true branch::first true branch
true branch executes::true branch executes
wrap these examples::wrap these examples
examples in functions::examples in functions
functions called compare::functions called compare
conditionals one conditional::conditionals one conditional
written the trichotomy::written the trichotomy
branches the first::branches the first
simple output statement::simple output statement
makes the structure::makes the structure
conditionals become difficult::conditionals become difficult
read very quickly::read very quickly
quickly in general::quickly in general
idea to avoid::idea to avoid
operators often provide::operators often provide
simplify nested conditional::simplify nested conditional
nested conditional statements::nested conditional statements
positive single digit::positive single digit
digit the print::digit the print
statement is executed::statement is executed
make it past::make it past
recursion these kinds::recursion these kinds
kinds of conditions::kinds of conditions
conditions are common::conditions are common
similar to mathematical::similar to mathematical
digit this condition::digit this condition
compound boolean expression::compound boolean expression
statement the return::statement the return
terminate the execution::terminate the execution
reach the end::reach the end
end one reason::end one reason
detect an error::detect an error
import math def::import math def
math def printlogarithm::math def printlogarithm
print positive numbers::print positive numbers
result = math.log::result = math.log
print the log::print the log
result the function::result the function
case it displays::case it displays
displays an error::displays an error
return to exit::return to exit
exit the function::exit the function
function the flow::function the flow
execution immediately returns::execution immediately returns
recursion we mentioned::recursion we mentioned
function to call::function to call
neglected to mention::neglected to mention
magical and interesting::magical and interesting
things a program::things a program
print n countdown::print n countdown
expects the parameter::expects the parameter
outputs the word::outputs the word
calls a function::calls a function
function named countdown::function named countdown
countdown itself passing::countdown itself passing
call this function::call this function
execution of countdown::execution of countdown
outputs the value::outputs the value
returns the countdown::returns the countdown
back in main::back in main
wanted to output::wanted to output
program is similar::program is similar
similar to countdown::similar to countdown
outputs one newline::outputs one newline
output n-1 additional::output n-1 additional
n-1 additional newlines::n-1 additional newlines
number of newlines::number of newlines
diagrams for recursive::diagrams for recursive
functions in section::functions in section
diagram to represent::diagram to represent
represent the state::represent the state
kind of diagram::kind of diagram
interpret a recursive::interpret a recursive
function s local::function s local
shows a stack::shows a stack
diagram for countdown::diagram for countdown
__main__ countdown countdown::__main__ countdown countdown
countdown countdown countdown::countdown countdown countdown
frame for main::frame for main
create any variables::create any variables
variables in main::variables in main
main or pass::main or pass
pass any arguments::pass any arguments
four countdown frames::four countdown frames
make a recursive::make a recursive
diagram for nlines::diagram for nlines
recursion never reaches::recursion never reaches
reaches a base::reaches a base
making recursive calls::making recursive calls
program never terminates::program never terminates
generally not considered::generally not considered
considered a good::considered a good
program with infinite::program with infinite
run forever python::run forever python
forever python reports::forever python reports
reports an error::reports an error
maximum recursion depth::maximum recursion depth
depth is reached::depth is reached
recursion depth exceeded::recursion depth exceeded
exceeded this traceback::exceeded this traceback
function with infinite::function with infinite
recursion and run::recursion and run
input the programs::input the programs
accept no input::accept no input
python provides built-in::python provides built-in
keyboard the simplest::keyboard the simplest
stops and waits::stops and waits
user to type::user to type
user presses return::user presses return
resumes and raw::resumes and raw
raw input returns::raw input returns
input = raw_input::input = raw_input
recursion before calling::recursion before calling
calling raw input::calling raw input
idea to print::idea to print
print a message::print a message
telling the user::telling the user
input this message::input this message
supply a prompt::supply a prompt
argument to raw::argument to raw
print name arthur::print name arthur
expect the response::expect the response
prompt = what...is::prompt = what...is
what...is the airspeed::what...is the airspeed
speed = input::speed = input
represents a newline::represents a newline
user s input::user s input
types a string::types a string
string of digits::string of digits
integer and assigned::integer and assigned
assigned to speed::assigned to speed
types a character::types a character
european swallow syntaxerror::european swallow syntaxerror
syntax to avoid::syntax to avoid
avoid this kind::avoid this kind
kind of error::kind of error
generally a good::generally a good
functions to convert::functions to convert
glossary modulus operator::glossary modulus operator
integers and yields::integers and yields
number is divided::number is divided
false comparison operator::false comparison operator
operators that compares::operators that compares
operators that combines::operators that combines
combines boolean expressions::combines boolean expressions
statement that controls::statement that controls
controls the flow::controls the flow
statement that determines::statement that determines
determines which branch::determines which branch
branch is executed::branch is executed
executed compound statement::executed compound statement
statement that consists::statement that consists
body the header::body the header
body is indented::body is indented
group of consecutive::group of consecutive
conditional statement inside::conditional statement inside
inside a branch::inside a branch
conditional statement recursion::conditional statement recursion
process of calling::process of calling
calling the function::calling the function
executing base case::executing base case
recursive call infinite::recursive call infinite
call infinite recursion::call infinite recursion
function that calls::function that calls
reaching the base::reaching the base
runtime error prompt::runtime error prompt
cue that tells::cue that tells
tells the user::tells the user
user to input::user to input
produced results calling::produced results calling
height = radius::height = radius
written has returned::written has returned
returned a value::returned a value
functions that return::functions that return
call fruitful functions::call fruitful functions
returns the area::returns the area
math def area::math def area
temp = math.pi::temp = math.pi
function the return::function the return
return statement includes::return statement includes
includes a return::includes a return
value this statement::value this statement
value the expression::value the expression
written this function::written this function
return math.pi radius::return math.pi radius
variables like temp::variables like temp
temp often make::temp often make
make debugging easier::make debugging easier
multiple return statements::multiple return statements
terminates without executing::terminates without executing
executing any subsequent::executing any subsequent
subsequent statements code::subsequent statements code
code that appears::code that appears
place the flow::place the flow
idea to ensure::idea to ensure
hits a return::hits a return
ends without hitting::ends without hitting
hitting a return::hitting a return
write a compare::write a compare
function that returns::function that returns
doing the exercises::doing the exercises
written some small::written some small
write larger functions::write larger functions
runtime and semantic::runtime and semantic
increasingly complex programs::increasingly complex programs
suggest a technique::suggest a technique
technique called incremental::technique called incremental
development the goal::development the goal
goal of incremental::goal of incremental
avoid long debugging::avoid long debugging
long debugging sessions::long debugging sessions
sessions by adding::sessions by adding
adding and testing::adding and testing
amount of code::amount of code
find the distance::find the distance
parameters the return::parameters the return
write an outline::write an outline
doesn t compute::doesn t compute
complicated to test::complicated to test
chose these values::chose these values
horizontal distance equals::horizontal distance equals
vertical distance equals::vertical distance equals
testing a function::testing a function
start adding lines::start adding lines
test the function::test the function
line we added::line we added
added a logical::added a logical
logical first step::logical first step
find the differences::find the differences
store those values::store those values
values in temporary::values in temporary
temporary variables named::temporary variables named
functions def distance::functions def distance
function is working::function is working
arguments and performing::arguments and performing
performing the first::performing the first
first computation correctly::first computation correctly
lines to check::lines to check
compute the sum::compute the sum
sum of squares::sum of squares
removed the print::removed the print
statements we wrote::statements we wrote
previous step code::previous step code
helpful for building::helpful for building
building the program::building the program
stage and check::stage and check
check the output::check the output
imported the math::imported the math
function to compute::function to compute
compute and return::compute and return
return the result::return the result
result = math.sqrt::result = math.sqrt
print the value::print the value
value of result::value of result
two of code::two of code
gain more experience::gain more experience
find yourself writing::find yourself writing
writing and debugging::writing and debugging
debugging bigger chunks::debugging bigger chunks
incremental development process::incremental development process
process can save::process can save
lot of debugging::lot of debugging
program and make::program and make
make small incremental::make small incremental
variables to hold::variables to hold
hold intermediate values::hold intermediate values
output and check::output and check
program is working::program is working
scaffolding or consolidate::scaffolding or consolidate
consolidate multiple statements::consolidate multiple statements
make the program::make the program
development to write::development to write
function called hypotenuse::function called hypotenuse
hypotenuse that returns::hypotenuse that returns
returns the length::returns the length
legs as arguments::legs as arguments
record each stage::record each stage
call one function::call one function
function that takes::function that takes
takes two points::takes two points
computes the area::computes the area
point is stored::point is stored
find the radius::find the radius
radius = distance::radius = distance
find the area::find the area
radius and return::radius and return
result = area::result = area
return result wrapping::return result wrapping
area2 to distinguish::area2 to distinguish
area function defined::area function defined
function defined earlier::function defined earlier
functions the temporary::functions the temporary
temporary variables radius::temporary variables radius
radius and result::radius and result
development and debugging::development and debugging
concise by composing::concise by composing
composing the function::composing the function
returns the slope::returns the slope
function called intercept::function called intercept
returns the y-intercept::returns the y-intercept
boolean functions functions::boolean functions functions
functions can return::functions can return
return boolean values::return boolean values
convenient for hiding::convenient for hiding
hiding complicated tests::hiding complicated tests
complicated tests inside::complicated tests inside
tests inside functions::tests inside functions
function is isdivisible::function is isdivisible
common to give::common to give
give boolean functions::give boolean functions
boolean functions names::boolean functions names
names that sound::names that sound
yes questions isdivisible::NNP questions isdivisible
questions isdivisible returns::questions isdivisible returns
returns either true::returns either true
make the function::make the function
function more concise::function more concise
concise by taking::concise by taking
function in action::function in action
true boolean functions::true boolean functions
tempting to write::tempting to write
comparison is unnecessary::comparison is unnecessary
learned a small::learned a small
subset of python::subset of python
complete programming language::complete programming language
language any program::language any program
program ever written::program ever written
commands to control::commands to control
proving that claim::proving that claim
exercise first accomplished::exercise first accomplished
accomplished by alan::accomplished by alan
first computer scientists::first computer scientists
lot of early::lot of early
early computer scientists::early computer scientists
computer scientists started::computer scientists started
started as mathematicians::started as mathematicians
theory of computation::theory of computation
proof to give::proof to give
recursively defined mathematical::recursively defined mathematical
defined mathematical functions::defined mathematical functions
functions a recursive::functions a recursive
definition is similar::definition is similar
thing being defined::thing being defined
mathematical function factorial::mathematical function factorial
write a recursive::write a recursive
write a python::write a python
program to evaluate::program to evaluate
conclude that factorial::conclude that factorial
call to find::call to find
find the factorial::find the factorial
recurse = factorial::recurse = factorial
recurse return result::recurse return result
result the flow::result the flow
flow of countdown::flow of countdown
countdown in section::countdown in section
branch and calculate::branch and calculate
calculate the factorial::calculate the factorial
factorial of n-1::factorial of n-1
branch and return::branch and return
calls the return::calls the return
result is returned::result is returned
returned the return::returned the return
call that started::call that started
leap of faith::leap of faith
sequence of function::sequence of function
factorial factorial factorial::factorial factorial factorial
values are shown::values are shown
shown being passed::shown being passed
local variables recurse::local variables recurse
recurse and result::recurse and result
branch that creates::branch that creates
quickly become labyrinthine::quickly become labyrinthine
labyrinthine an alternative::labyrinthine an alternative
call the leap::call the leap
correctly and returns::correctly and returns
value in fact::value in fact
practicing this leap::practicing this leap
math.cos or math.exp::math.cos or math.exp
don t examine::don t examine
examine the implementations::examine the implementations
people who wrote::people who wrote
wrote the built-in::wrote the built-in
functions were good::functions were good
wrote a function::wrote a function
function called isdivisible::function called isdivisible
isdivisible that determines::isdivisible that determines
function is correct::function is correct
correct by testing::correct by testing
testing and examining::testing and examining
examining the code::examining the code
true of recursive::true of recursive
fruitful functions call::fruitful functions call
functions call works::functions call works
yields the correct::yields the correct
compute the factorial::compute the factorial
strange to assume::strange to assume
haven t finished::haven t finished
variables to spell::variables to spell
out the steps::out the steps
make the code::make the code
easier to debug::easier to debug
return n factorial::return n factorial
inspired after factorial::inspired after factorial
defined mathematical function::defined mathematical function
function is fibonacci::function is fibonacci
translated into python::translated into python
fairly small values::fairly small values
two recursive calls::two recursive calls
recursive calls work::recursive calls work
result by adding::result by adding
factorial and give::factorial and give
miss the base::miss the base
first recursive call::first recursive call
generalize the factorial::generalize the factorial
function to work::function to work
work with floating-point::work with floating-point
make factorial check::make factorial check
check the type::check the type
argument the first::argument the first
built-in function isinstance::built-in function isinstance
isinstance to verify::isinstance to verify
verify the type::verify the type
argument is positive::argument is positive
defined for integers::defined for integers
defined for positive::defined for positive
positive integers return::positive integers return
cases the first::cases the first
first catches nonintegers::first catches nonintegers
catches negative integers::catches negative integers
prints an error::prints an error
message and returns::message and returns
returns a special::returns a special
past both checks::past both checks
functions this program::functions this program
demonstrates a pattern::demonstrates a pattern
guardian the first::guardian the first
first two conditionals::first two conditionals
two conditionals act::two conditionals act
act as guardians::act as guardians
protecting the code::protecting the code
error the guardians::error the guardians
prove the correctness::prove the correctness
glossary fruitful function::glossary fruitful function
function that yields::function that yields
yields a return::yields a return
return value return::return value return
value return value::value return value
function call temporary::function call temporary
call temporary variable::call temporary variable
store an intermediate::store an intermediate
complex calculation dead::complex calculation dead
calculation dead code::calculation dead code
special python value::special python value
python value returned::python value returned
returned by functions::returned by functions
argument incremental development::argument incremental development
program development plan::program development plan
development plan intended::development plan intended
intended to avoid::intended to avoid
debugging by adding::debugging by adding
final version guardian::final version guardian
condition that checks::condition that checks
legal to make::legal to make
makes an existing::makes an existing
bruce the output::bruce the output
first time bruce::first time bruce
bruce is printed::bruce is printed
first print statement::first print statement
print statement suppresses::print statement suppresses
suppresses the newline::suppresses the newline
bruce with multiple::bruce with multiple
important to distinguish::important to distinguish
statement of equality::statement of equality
equality because python::equality because python
tempting to interpret::tempting to interpret
interpret a statement::interpret a statement
equality is commutative::equality is commutative
commutative and assignment::commutative and assignment
statement can make::statement can make
make two variables::make two variables
two variables equal::two variables equal
change the value::change the value
values of variables::values of variables
read and debug::read and debug
automate repetitive tasks::automate repetitive tasks
repetitive tasks repeating::repetitive tasks repeating
tasks repeating identical::tasks repeating identical
identical or similar::identical or similar
tasks without making::tasks without making
people do poorly::people do poorly
nlines and countdown::nlines and countdown
recursion to perform::recursion to perform
iteration because iteration::iteration because iteration
features to make::features to make
make it easier::make it easier
easier the first::easier the first
removed the recursive::removed the recursive
english it means::english it means
displaying the value::displaying the value
reducing the value::reducing the value
display the word::display the word
evaluate the condition::evaluate the condition
statement and continue::statement and continue
back to step::back to step
indentation this type::indentation this type
type of flow::type of flow
false the first::false the first
inside the loop::inside the loop
executed the body::executed the body
loop should change::loop should change
eventually the condition::eventually the condition
condition becomes false::condition becomes false
loop will repeat::loop will repeat
loop an endless::loop an endless
source of amusement::source of amusement
amusement for computer::amusement for computer
directions on shampoo::directions on shampoo
case of countdown::case of countdown
loop will continue::loop will continue
make the condition::make the condition
value is replaced::value is replaced
passed to sequence::passed to sequence
previous example ends::previous example ends
iteration particular values::iteration particular values
rewrite the function::rewrite the function
nlines from section::nlines from section
loops are good::loops are good
generating tabular data::generating tabular data
data before computers::data before computers
sines and cosines::sines and cosines
functions by hand::functions by hand
hand to make::hand to make
make that easier::make that easier
mathematics books contained::mathematics books contained
contained long tables::contained long tables
long tables listing::long tables listing
listing the values::listing the values
creating the tables::creating the tables
tables was slow::tables was slow
slow and boring::slow and boring
full of errors::full of errors
errors when computers::errors when computers
computers to generate::computers to generate
generate the tables::generate the tables
errors that turned::errors that turned
computers and calculators::computers and calculators
tables became obsolete::tables became obsolete
computers use tables::computers use tables
tables of values::tables of values
computations to improve::computations to improve
improve the approximation::improve the approximation
table the intel::table the intel
perform floating-point division::perform floating-point division
makes a good::makes a good
outputs a sequence::outputs a sequence
sequence of values::sequence of values
represents a tab::represents a tab
character as characters::character as characters
characters and strings::characters and strings
strings are displayed::strings are displayed
cursor keeps track::cursor keeps track
line the tab::line the tab
tab character shifts::tab character shifts
shifts the cursor::shifts the cursor
tab stops tabs::tab stops tabs
columns of text::columns of text
values seem odd::values seem odd
function uses base::function uses base
important in computer::important in computer
logarithms with respect::logarithms with respect
respect to base::respect to base
loge x loge::loge x loge
changing the output::changing the output
wanted to find::wanted to find
find the logarithms::find the logarithms
modify the program::modify the program
yields an arithmetic::yields an arithmetic
yielding a geometric::yielding a geometric
sequence the result::sequence the result
number of digits::number of digits
first column logarithm::first column logarithm
column logarithm tables::column logarithm tables
knowing the powers::knowing the powers
modify this program::modify this program
outputs the powers::outputs the powers
out and memorize::out and memorize
escape sequence escape::escape sequence escape
sequence escape sequences::sequence escape sequences
represent invisible characters::represent invisible characters
characters like tabs::characters like tabs
tabs and newlines::tabs and newlines
newlines the sequence::newlines the sequence
newline an escape::newline an escape
tab escape sequence::tab escape sequence
represent a backslash::represent a backslash
write a single::write a single
string that produces::string that produces
produces this output::produces this output
tables a two-dimensional::tables a two-dimensional
read the value::read the value
column a multiplication::column a multiplication
print a multiplication::print a multiplication
write a loop::write a loop
loop that prints::loop that prints
prints the multiples::prints the multiples
encapsulation and generalization::encapsulation and generalization
first line initializes::first line initializes
initializes a variable::initializes a variable
counter or loop::counter or loop
print statement starts::print statement starts
encapsulate and generalize::encapsulate and generalize
process of wrapping::process of wrapping
wrapping a piece::wrapping a piece
functions are good::functions are good
examples of encapsulation::examples of encapsulation
printparity in section::printparity in section
isdivisible in section::isdivisible in section
generalization means taking::generalization means taking
taking something specific::taking something specific
printing the multiples::printing the multiples
integer this function::integer this function
encapsulates the previous::encapsulates the previous
loop and generalizes::loop and generalizes
print to encapsulate::print to encapsulate
add the first::add the first
list to generalize::list to generalize
replace the value::replace the value
table by calling::table by calling
arguments in fact::arguments in fact
notice how similar::notice how similar
similar this loop::similar this loop
replace the print::replace the print
call the output::call the output
encapsulation to demonstrate::encapsulation to demonstrate
end of section::end of section
common development plan::common development plan
plan we develop::plan we develop
code by writing::code by writing
function this development::function this development
divide the program::divide the program
program into functions::program into functions
functions this approach::functions this approach
lets you design::lets you design
printmultiples and printmulttable::printmultiples and printmulttable
variable the answer::variable the answer
variable variables created::variable variables created
variables created inside::variables created inside
definition are local::definition are local
access a local::access a local
function that means::function that means
function the stack::function the stack
two variables named::two variables named
printmultiples the value::printmultiples the value
printmulttable calls printmultiples::printmulttable calls printmultiples
argument that value::argument that value
value gets assigned::value gets assigned
parameter n inside::parameter n inside
changing this variable::changing this variable
frequently as loop::frequently as loop
harder to read::harder to read
imagine you wanted::imagine you wanted
wanted a program::wanted a program
add a parameter::add a parameter
parameter to printmulttable::parameter to printmulttable
replaced the value::replaced the value
number of rows::number of rows
rows and columns::rows and columns
add another parameter::add another parameter
parameter to printmultiples::parameter to printmultiples
columns the table::columns the table
call this parameter::call this parameter
print def printmulttable::print def printmulttable
change the first::change the first
change the place::change the place
printmulttable as expected::printmulttable as expected
generates a square::generates a square
square seven-by-seven table::square seven-by-seven table
generalize a function::generalize a function
program with capabilities::program with capabilities
capabilities you didn::capabilities you didn
didn t plan::didn t plan
ink by printing::ink by printing
half the table::half the table
change one line::change one line
line of printmulttable::line of printmulttable
printmulttable change printmultiples::printmulttable change printmultiples
trace the execution::trace the execution
version of printmulttable::version of printmulttable
printmulttable and figure::printmulttable and figure
makes your program::makes your program
dividing a long::dividing a long
facilitate both recursion::facilitate both recursion
recursion and iteration::recursion and iteration
iteration well-designed functions::iteration well-designed functions
write and debug::write and debug
glossary multiple assignment::glossary multiple assignment
recursive function call::recursive function call
statement or group::statement or group
statements that execute::statements that execute
condition is satisfied::condition is satisfied
satisfied infinite loop::satisfied infinite loop
inside a loop::inside a loop
loop loop variable::loop loop variable
cursor to move::cursor to move
current line newline::current line newline
printed escape sequence::printed escape sequence
designate a nonprintable::designate a nonprintable
nonprintable character encapsulate::nonprintable character encapsulate
divide a large::divide a large
large complex program::large complex program
program into components::program into components
isolate the components::isolate the components
variable or parameter::variable or parameter
generalization makes code::generalization makes code
code more versatile::code more versatile
easier to write::easier to write
write development plan::write development plan
process for developing::process for developing
developing a program::developing a program
demonstrated a style::demonstrated a style
style of development::style of development
based on developing::based on developing
encapsulating and generalizing::encapsulating and generalizing
compound data type::compound data type
smaller pieces characters::smaller pieces characters
pieces characters types::pieces characters types
types that comprise::types that comprise
comprise smaller pieces::comprise smaller pieces
compound data types::compound data types
data types depending::data types depending
treat a compound::treat a compound
access its parts::access its parts
parts this ambiguity::parts this ambiguity
bracket operator selects::bracket operator selects
selects a single::selects a single
letter = fruit::letter = fruit
letter the expression::letter the expression
selects character number::selects character number
fruit the variable::fruit the variable
variable letter refers::variable letter refers
letter of banana::letter of banana
expression in brackets::expression in brackets
index an index::index an index
specifies a member::specifies a member
case the set::case the set
set of characters::set of characters
string the index::string the index
length the len::length the len
len function returns::len function returns
returns the number::returns the number
number of characters::number of characters
length = len::length = len
last = fruit::last = fruit
won t work::won t work
runtime error indexerror::runtime error indexerror
out of range::out of range
range the reason::range the reason
letter in banana::letter in banana
letters are numbered::letters are numbered
string the expression::string the expression
loop a lot::loop a lot
lot of computations::lot of computations
computations involve processing::computations involve processing
processing a string::processing a string
string one character::string one character
select each character::select each character
character in turn::character in turn
end this pattern::end this pattern
pattern of processing::pattern of processing
encode a traversal::encode a traversal
index < len::index < len
print letter index::print letter index
index = index::index = index
traverses the string::traverses the string
string and displays::string and displays
displays each letter::displays each letter
condition is index::condition is index
index is equal::index is equal
executed the last::executed the last
last character accessed::last character accessed
takes a string::takes a string
argument and outputs::argument and outputs
outputs the letters::outputs the letters
index to traverse::index to traverse
traverse a set::traverse a set
common that python::common that python
char in fruit::char in fruit
string is assigned::string is assigned
char the loop::char the loop
characters are left::characters are left
loop to generate::loop to generate
generate an abecedarian::generate an abecedarian
abecedarian series abecedarian::abecedarian series abecedarian
series abecedarian refers::series abecedarian refers
series or list::series or list
mccloskey s book::mccloskey s book
quack this loop::quack this loop
outputs these names::outputs these names
names in order::names in order
prefixes = jklmnopq::prefixes = jklmnopq
suffix = ack::suffix = ack
ack for letter::ack for letter
letter in prefixes::letter in prefixes
letter + suffix::letter + suffix
suffix the output::suffix the output
jack kack lack::jack kack lack
kack lack mack::kack lack mack
lack mack nack::lack mack nack
mack nack oack::mack nack oack
nack oack pack::nack oack pack
oack pack qack::oack pack qack
right because ouack::right because ouack
ouack and quack::ouack and quack
quack are misspelled::quack are misspelled
program to fix::program to fix
fix this error::fix this error
slices a segment::slices a segment
selecting a slice::selecting a slice
slice is similar::slice is similar
similar to selecting::similar to selecting
selecting a character::selecting a character
mary the operator::mary the operator
returns the part::returns the part
including the first::including the first
first but excluding::first but excluding
excluding the last::excluding the last
last this behavior::last this behavior
behavior is counterintuitive::behavior is counterintuitive
makes more sense::makes more sense
imagine the indices::imagine the indices
omit the first::omit the first
comparison the comparison::comparison the comparison
comparison operators work::comparison operators work
work on strings::work on strings
strings are equal::strings are equal
strings are immutable::strings are immutable
words in alphabetical::words in alphabetical
word < banana::word < banana
print your word::print your word
banana elif word::banana elif word
word > banana::word > banana
upper and lowercase::upper- and lowercase
banana a common::banana a common
address this problem::address this problem
performing the comparison::performing the comparison
problem is making::problem is making
making the program::making the program
realize that zebras::realize that zebras
intention of changing::intention of changing
changing a character::changing a character
world ! greeting::world ! greeting
error ! print::error ! print
producing the output::producing the output
produces the runtime::produces the runtime
runtime error typeerror::runtime error typeerror
doesn t support::doesn t support
support item assignment::support item assignment
item assignment strings::item assignment strings
change an existing::change an existing
world ! newgreeting::world ! newgreeting
newgreeting the solution::newgreeting the solution
slice of greeting::slice of greeting
greeting this operation::greeting this operation
function do def::function do def
return index index::return index index
taking an index::taking an index
index and extracting::index and extracting
takes a character::takes a character
character and finds::character and finds
finds the index::finds the index
return statement inside::return statement inside
loop if str::loop if str
exits the loop::exits the loop
pattern of computation::pattern of computation
modify the find::modify the find
looping and counting::looping and counting
counts the number::counts the number
times the letter::times the letter
letter a appears::letter a appears
count = count::count = count
count this program::count this program
demonstrates another pattern::demonstrates another pattern
counter the variable::counter the variable
count is initialized::count is initialized
opposite of decrement::opposite of decrement
unrelated to excrement::unrelated to excrement
result the total::result the total
encapsulate this code::encapsulate this code
function named countletters::function named countletters
accepts the string::accepts the string
letter as arguments::letter as arguments
rewrite this function::rewrite this function
traversing the string::traversing the string
version of find::version of find
module the string::module the string
functions that manipulate::functions that manipulate
strings as usual::strings as usual
import the module::import the module
string the string::string the string
string module includes::string module includes
includes a function::includes a function
function named find::function named find
function we wrote::function we wrote
wrote to call::wrote to call
function using dot::function using dot
index = string.find::index = string.find
benefits of modules::benefits of modules
names of built-in::names of built-in
functions and user-defined::functions and user-defined
takes an additional::takes an additional
argument that specifies::argument that specifies
specifies the index::specifies the index
two additional arguments::two additional arguments
range of indices::range of indices
helpful to examine::helpful to examine
examine a character::examine a character
character and test::character and test
upper or lowercase::upper- or lowercase
digit the string::digit the string
purposes the string::purposes the string
constants and find::constants and find
find to classify::find to classify
returns a value::returns a value
discuss which version::discuss which version
version of islower::version of islower
reasons besides speed::reasons besides speed
speed to prefer::speed to prefer
module may surprise::module may surprise
print string.whitespace whitespace::print string.whitespace whitespace
string.whitespace whitespace characters::string.whitespace whitespace characters
whitespace characters move::whitespace characters move
move the cursor::move the cursor
cursor without printing::cursor without printing
create the white::create the white
space between visible::space between visible
isn t intended::isn t intended
python library reference::python library reference
glossary compound data::glossary compound data
values are made::values are made
performing a similar::performing a similar
variable or value::variable or value
select a member::select a member
types whose elements::types whose elements
assigned new values::assigned new values
increase the value::increase the value
decrease the value::decrease the value
characters that move::characters that move
printing visible characters::printing visible characters
characters the constant::characters the constant
lists a list::lists a list
value is identified::value is identified
index the values::index the values
values that make::values that make
lists are similar::lists are similar
similar to strings::similar to strings
sets of characters::sets of characters
lists and strings::lists and strings
things that behave::things that behave
behave like ordered::behave like ordered
ways to create::ways to create
enclose the elements::enclose the elements
elements in square::elements in square
strings the elements::strings the elements
integers are common::integers are common
lists the range::lists the range
range function takes::range function takes
arguments and returns::arguments and returns
returns a list::returns a list
two other forms::two other forms
forms of range::forms of range
creates a list::creates a list
list that starts::list that starts
specifies the space::specifies the space
space between successive::space between successive
couldn t assign::couldn t assign
assign list values::assign list values
values to variables::values to variables
variables or pass::variables or pass
lists as arguments::lists as arguments
arguments to functions::arguments to functions
elements the syntax::elements the syntax
syntax for accessing::syntax for accessing
accessing the elements::accessing the elements
accessing the characters::accessing the characters
string the bracket::string the bracket
inside the brackets::inside the brackets
element of numbers::element of numbers
read or write::read or write
write an element::write an element
list assignment index::list assignment index
doesn t exist::doesn t exist
list index horsemen::list index horsemen
printing the i-eth::printing the i-eth
element this pattern::element this pattern
length the function::length the function
function len returns::function len returns
loop is executed::loop is executed
equal to len::equal to len
list still counts::list still counts
element the length::element the length
pol le veq::pol le veq
loop that traverses::loop that traverses
traverses the previous::traverses the previous
list and prints::list and prints
prints the length::prints the length
send an integer::send an integer
integer to len::integer to len
operator that tests::operator that tests
works with lists::works with lists
pestilence in horsemen::pestilence in horsemen
debauchery in horsemen::debauchery in horsemen
false since pestilence::false since pestilence
operator returns true::operator returns true
true since debauchery::true since debauchery
lists the generalized::lists the generalized
variable in list::variable in list
body this statement::body this statement
statement is equivalent::statement is equivalent
variable = list::variable = list
eliminate the loop::eliminate the loop
previous loop written::previous loop written
loop for horseman::loop for horseman
horseman in horsemen::horseman in horsemen
reads like english::reads like english
horseman any list::horseman any list
number in range::number in range
number for fruit::number for fruit
eat + fruit::eat + fruit
first example prints::first example prints
operator concatenates lists::operator concatenates lists
repeats a list::repeats a list
first example repeats::first example repeats
repeats the list::repeats the list
slices the slice::slices the slice
work on lists::work on lists
lists are mutable::lists are mutable
mutable unlike strings::mutable unlike strings
change their elements::change their elements
update several elements::update several elements
list by assigning::list by assigning
assigning the empty::assigning the empty
list by squeezing::list by squeezing
deletion using slices::deletion using slices
slices to delete::slices to delete
delete list elements::delete list elements
readable del removes::readable del removes
removes an element::removes an element
del handles negative::del handles negative
handles negative indices::handles negative indices
index for del::index for del
lists as usual::lists as usual
objects and values::objects and values
execute these assignment::execute these assignment
two possible states::two possible states
two different things::two different things
thing these things::thing these things
things have names::things have names
objects an object::objects an object
function by printing::function by printing
printing the identifier::printing the identifier
means that python::means that python
python only created::python only created
created one string::created one string
lists behave differently::lists behave differently
create two lists::create two lists
aliasing since variables::aliasing since variables
assign one variable::assign one variable
two different names::two different names
aliased changes made::aliased changes made
unexpected or undesirable::unexpected or undesirable
undesirable in general::undesirable in general
safer to avoid::safer to avoid
working with mutable::working with mutable
python is free::python is free
free to alias::free to alias
sees an opportunity::sees an opportunity
opportunity to economize::opportunity to economize
modify a list::modify a list
make a copy::make a copy
reference this process::reference this process
avoid the ambiguity::avoid the ambiguity
copy the easiest::copy the easiest
clone a list::clone a list
taking any slice::taking any slice
case the slice::case the slice
free to make::free to make
draw a state::draw a state
list parameters passing::list parameters passing
passing a list::passing a list
argument actually passes::argument actually passes
passes a reference::passes a reference
function head takes::function head takes
takes a list::takes a list
returns the first::returns the first
numbers are aliases::numbers are aliases
object the state::object the state
__main__ numbers head::__main__ numbers head
object is shared::object is shared
modifies a list::modifies a list
sees the change::sees the change
removes the first::removes the first
returns a reference::returns a reference
rest = tail::rest = tail
value was created::value was created
list creating rest::list creating rest
effect on numbers::effect on numbers
lists a nested::lists a nested
list that appears::list that appears
extract an element::extract an element
elt = list::elt = list
bracket operators evaluate::bracket operators evaluate
evaluate from left::evaluate from left
element of list::element of list
list and extracts::list and extracts
extracts the one-eth::extracts the one-eth
matrices nested lists::matrices nested lists
strings and lists::strings and lists
select an entire::select an entire
extract a single::extract a single
first index selects::first index selects
selects the row::selects the row
selects the column::selects the column
matrices is common::matrices is common
possibility a small::possibility a small
list of columns::list of columns
list of rows::list of rows
string module involve::string module involve
module involve lists::module involve lists
lists of strings::lists of strings
strings the split::strings the split
split function breaks::split function breaks
breaks a string::breaks a string
list of words::list of words
words by default::words by default
number of whitespace::number of whitespace
characters is considered::characters is considered
considered a word::considered a word
rain in spain::rain in spain
list the join::list the join
inverse of split::inverse of split
split it takes::split it takes
list of strings::list of strings
strings and concatenates::strings and concatenates
concatenates the elements::concatenates the elements
lists like split::lists like split
takes an optional::takes an optional
inserted between elements::inserted between elements
describe the relationship::describe the relationship
relationship between string.join::relationship between string.join
collection of objects::collection of objects
object is identified::object is identified
operator selects elements::operator selects elements
types that consist::types that consist
set of elements::set of elements
index nested list::index nested list
list list traversal::list list traversal
existing object copying::existing object copying
copying a reference::copying a reference
creates an alias::creates an alias
alias but doesn::alias but doesn
doesn t clone::doesn t clone
clone the object::clone the object
character or string::character or string
mutability and tuples::mutability and tuples
two compound types::two compound types
differences we noted::differences we noted
immutable and lists::immutable and lists
type in python::type in python
list of values::list of values
conventional to enclose::conventional to enclose
tuples in parentheses::tuples in parentheses
create a tuple::create a tuple
include the final::include the final
string in parentheses::string in parentheses
tuples syntax issues::tuples syntax issues
operations on tuples::operations on tuples
operations on lists::operations on lists
lists the index::lists the index
index operator selects::index operator selects
selects an element::selects an element
slice operator selects::slice operator selects
selects a range::selects a range
range of elements::range of elements
modify the elements::modify the elements
swap the values::swap the values
variables with conventional::variables with conventional
conventional assignment statements::conventional assignment statements
approach becomes cumbersome::approach becomes cumbersome
form of tuple::form of tuple
assignment that solves::assignment that solves
solves this problem::solves this problem
tuple of variables::tuple of variables
tuple of values::tuple of values
values each value::values each value
side are evaluated::side are evaluated
assignments this feature::assignments this feature
feature makes tuple::feature makes tuple
makes tuple assignment::makes tuple assignment
assignment quite versatile::assignment quite versatile
number of variables::number of variables
number of values::number of values
tuples as return::tuples as return
tuple of wrong::tuple of wrong
return values functions::return values functions
function that swaps::function that swaps
swaps two parameters::swaps two parameters
assign the return::assign the return
advantage in making::advantage in making
swap a function::swap a function
function in fact::function in fact
changing x inside::changing x inside
inside swap makes::inside swap makes
doesn t work::doesn t work
numbers most computer::numbers most computer
calculation to yield::calculation to yield
making a program::making a program
program truly nondeterministic::program truly nondeterministic
ways to make::ways to make
generate random numbers::generate random numbers
determine the outcome::determine the outcome
function that generates::function that generates
generates pseudorandom numbers::generates pseudorandom numbers
function called random::function called random
random that returns::random that returns
returns a floatingpoint::returns a floatingpoint
run this loop::run this loop
generate a random::generate a random
bound like high::bound like high
number between low::number between low
low and high::low and high
integer between low::integer between low
including both end::including both end
list of random::list of random
numbers the first::numbers the first
generate a list::generate a list
random values randomlist::random values randomlist
values randomlist takes::values randomlist takes
takes an integer::takes an integer
length it starts::length it starts
number the return::number the return
test this function::test this function
elements for purposes::elements for purposes
purposes of debugging::purposes of debugging
idea to start::idea to start
generated by random::generated by random
random are supposed::random are supposed
divide the range::divide the range
values into equal-sized::values into equal-sized
count the number::count the number
times a random::times a random
random value falls::random value falls
test this theory::test this theory
theory by writing::theory by writing
writing a program::writing a program
program to divide::program to divide
range into buckets::range into buckets
buckets and count::buckets and count
counting a good::counting a good
approach to problems::approach to problems
divide the problem::divide the problem
problem into subproblems::problem into subproblems
subproblems that fit::subproblems that fit
fit a computational::fit a computational
traverse a list::traverse a list
list of numbers::list of numbers
numbers and count::numbers and count
times a value::times a value
range that sounds::range that sounds
familiar in section::familiar in section
wrote a program::wrote a program
program that traversed::program that traversed
traversed a string::traversed a string
string and counted::string and counted
counted the number::counted the number
proceed by copying::proceed by copying
program and adapting::program and adapting
problem the original::problem the original
count the first::count the first
char with num::char with num
num that doesn::num that doesn
change the program::change the program
change the test::change the test
test we aren::test we aren
aren t interested::aren t interested
interested in finding::interested in finding
low < num::low < num
num < high::num < high
count the last::count the last
function called inbucket::function called inbucket
inbucket the parameters::inbucket the parameters
high def inbucket::high def inbucket
count by copying::count by copying
copying and modifying::copying and modifying
modifying an existing::modifying an existing
write this function::write this function
quickly and save::quickly and save
save a lot::save a lot
find yourself working::find yourself working
reuse the solution::reuse the solution
number of buckets::number of buckets
low = inbucket::low = inbucket
high = inbucket::high = inbucket
bucket1 = inbucket::bucket1 = inbucket
bucket2 = inbucket::bucket2 = inbucket
bucket3 = inbucket::bucket3 = inbucket
bucket4 = inbucket::bucket4 = inbucket
compute the range::compute the range
buckets is numbuckets::buckets is numbuckets
loop to compute::loop to compute
bucket the loop::bucket the loop
high = low::high = low
low + bucketwidth::low + bucketwidth
bucketwidth print low::bucketwidth print low
high to compute::high to compute
compute the low::compute the low
multiply the loop::multiply the loop
width the high::width the high
don t overlap::don t overlap
cover the entire::cover the entire
store eight integers::store eight integers
create the bucket::create the bucket
repeatedly and update::repeatedly and update
update the i-eth::update the i-eth
produces this bucket::produces this bucket
random number generator::random number generator
generator is working::generator is working
traverses the entire::traverses the entire
lot of traversals::lot of traversals
make a single::make a single
list and compute::list and compute
value the index::value the index
bucketwidth to find::bucketwidth to find
find the lower::find the lower
find the index::find the index
divide by bucketwidth::divide by bucketwidth
multiplying that guess::multiplying that guess
guess is correct::guess is correct
correct since bucketwidth::correct since bucketwidth
dividing by bucketwidth::dividing by bucketwidth
multiplying by numbuckets::multiplying by numbuckets
multiply a number::multiply a number
round that number::round that number
index = int::index = int
function to convert::function to convert
convert a floating-point::convert a floating-point
calculation to produce::calculation to produce
produce an index::produce an index
negative or greater::negative or greater
greater than len::greater than len
list like buckets::list like buckets
function called histogram::function called histogram
histogram that takes::histogram that takes
buckets as arguments::buckets as arguments
returns a histogram::returns a histogram
glossary immutable type::glossary immutable type
assignments to elements::assignments to elements
elements or slices::elements or slices
slices of immutable::slices of immutable
error mutable type::error mutable type
modified all mutable::modified all mutable
types are compound::types are compound
compound types lists::compound types lists
lists and dictionaries::lists and dictionaries
dictionaries are mutable::dictionaries are mutable
mutable data types::mutable data types
types ; strings::types ; strings
strings and tuples::strings and tuples
type is required::type is required
dictionary tuple assignment::dictionary tuple assignment
single assignment statement::single assignment statement
assignment statement tuple::assignment statement tuple
statement tuple assignment::statement tuple assignment
tuple assignment occurs::tuple assignment occurs
occurs in parallel::occurs in parallel
swapping values deterministic::swapping values deterministic
sequence of numbers::sequence of numbers
deterministic computation histogram::deterministic computation histogram
list of integers::list of integers
plan that involves::plan that involves
identifying a familiar::identifying a familiar
familiar computational pattern::familiar computational pattern
pattern and copying::pattern and copying
copying the solution::copying the solution
dictionaries the compound::dictionaries the compound
learned about strings::learned about strings
tuples use integers::tuples use integers
integers as indices::integers as indices
dictionaries are similar::dictionaries are similar
create a dictionary::create a dictionary
dictionary to translate::dictionary to translate
translate english words::translate english words
words into spanish::words into spanish
indices are strings::indices are strings
dictionary and add::dictionary and add
elements the empty::elements the empty
dictionary is denoted::dictionary is denoted
dos the first::dos the first
first assignment creates::first assignment creates
creates a dictionary::creates a dictionary
dictionary named eng2sp::dictionary named eng2sp
add new elements::add new elements
print the current::print the current
list each entry::list each entry
provide a list::provide a list
list of key-value::list of key-value
value of eng2sp::value of eng2sp
reason to care::reason to care
indexed with integer::indexed with integer
dos the key::dos the key
key two yields::key two yields
yields the value::yields the value
operations the del::operations the del
del statement removes::del statement removes
removes a key-value::removes a key-value
fruit in stock::fruit in stock
remove the entry::remove the entry
expecting more pears::expecting more pears
function also works::function also works
works on dictionaries::works on dictionaries
number of key-value::number of key-value
methods a method::methods a method
method is similar::method is similar
function it takes::function it takes
keys method takes::keys method takes
takes a dictionary::takes a dictionary
dictionary and returns::dictionary and returns
function syntax keys::function syntax keys
method syntax eng2sp.keys::method syntax eng2sp.keys
form of dot::form of dot
dot notation specifies::dot notation specifies
object to apply::object to apply
apply the function::apply the function
eng2sp the parentheses::eng2sp the parentheses
parameters a method::parameters a method
eng2sp the values::eng2sp the values
items method returns::items method returns
list of tuples::list of tuples
information the square::information the square
list the parentheses::list the parentheses
list are tuples::list are tuples
method has key::method has key
takes a key::takes a key
key and returns::key and returns
call a method::call a method
aliasing and copying::aliasing and copying
copying because dictionaries::copying because dictionaries
aware of aliasing::aware of aliasing
modify a dictionary::modify a dictionary
pairs of opposites::pairs of opposites
alias = opposites::alias = opposites
copy = opposites.copy::copy = opposites.copy
alias and opposites::alias and opposites
object ; copy::object ; copy
opposites is unchanged::opposites is unchanged
matrices in section::matrices in section
list of lists::list of lists
lists to represent::lists to represent
represent a matrix::represent a matrix
lot of zeroes::lot of zeroes
row and column::row and column
matrix each key::matrix each key
integer to access::integer to access
access an element::access an element
nested list representation::nested list representation
two integer indices::two integer indices
tuple of integers::tuple of integers
improves the semantics::improves the semantics
semantics of accessing::semantics of accessing
accessing a sparse::accessing a sparse
sparse matrix shame::sparse matrix shame
function from section::function from section
bigger the argument::bigger the argument
argument you provide::argument you provide
longer the function::longer the function
takes to run::takes to run
run time increases::run time increases
increases very quickly::increases very quickly
takes roughly forever::takes roughly forever
dictionaries to understand::dictionaries to understand
graph for fibonacci::graph for fibonacci
call graph shows::call graph shows
shows a set::shows a set
set function frames::set function frames
connecting each frame::connecting each frame
functions it calls::functions it calls
argument gets bigger::argument gets bigger
bigger a good::bigger a good
track of values::track of values
computed by storing::computed by storing
previously computed value::previously computed value
implementation of fibonacci::implementation of fibonacci
fibonacci using hints::fibonacci using hints
newvalue = fibonacci::newvalue = fibonacci
newvalue return newvalue::newvalue return newvalue
newvalue the dictionary::newvalue the dictionary
dictionary named previous::dictionary named previous
previous keeps track::previous keeps track
checks the dictionary::checks the dictionary
dictionary to determine::dictionary to determine
function can return::function can return
immediately without making::immediately without making
value is added::value is added
version of fibonacci::version of fibonacci
machines can compute::machines can compute
big to fit::big to fit
python integer python::python integer python
converted the result::converted the result
long integers python::long integers python
type called long::type called long
handle any size::handle any size
create a long::create a long
write an integer::write an integer
convert a value::convert a value
long can accept::long can accept
accept any numerical::accept any numerical
strings of digits::strings of digits
math operations work::math operations work
work on longs::work on longs
general any code::general any code
code that works::code that works
works with integers::works with integers
detects the overflow::detects the overflow
overflow and returns::overflow and returns
returns the result::returns the result
result has type::result has type
letters in chapter::letters in chapter
function that counted::function that counted
number of occurrences::number of occurrences
form a histogram::form a histogram
times each letter::times each letter
compressing a text::compressing a text
compress a file::compress a file
codes for common::codes for common
letters and longer::letters and longer
codes for letters::codes for letters
frequently dictionaries provide::frequently dictionaries provide
provide an elegant::provide an elegant
generate a histogram::generate a histogram
letter in mississippi::letter in mississippi
find the current::find the current
dictionary contains pairs::dictionary contains pairs
pairs of letters::pairs of letters
appealing to display::appealing to display
display the histogram::display the histogram
histogram in alphabetical::histogram in alphabetical
items and sort::items and sort
letteritems = lettercounts.items::letteritems = lettercounts.items
encountered that applies::encountered that applies
applies to lists::applies to lists
consult the python::consult the python
documentation for details::documentation for details
collection of key-value::collection of key-value
pairs that maps::pairs that maps
maps from keys::maps from keys
keys to values::keys to values
values the keys::values the keys
dictionary key-value pair::dictionary key-value pair
kind of function::kind of function
syntax and invoked::syntax and invoked
value to avoid::value to avoid
avoid redundant computation::avoid redundant computation
files and exceptions::files and exceptions
program is running::program is running
data in memory::data in memory
disappears to store::disappears to store
number of files::number of files
organized into directories::organized into directories
file is identified::file is identified
reading and writing::reading and writing
programs can exchange::programs can exchange
generate printable formats::generate printable formats
formats like pdf::formats like pdf
working with files::working with files
lot like working::lot like working
working with books::working with books
book is open::book is open
applies to files::applies to files
open a file::open a file
opening a file::opening a file
creates a file::creates a file
variable f refers::variable f refers
open function takes::open function takes
arguments the first::arguments the first
mode w means::mode w means
opening the file::opening the file
file for writing::file for writing
file named test.dat::file named test.dat
print the file::print the file
object to put::object to put
file we invoke::file we invoke
invoke the write::invoke the write
close the file::close the file
closing the file::closing the file
tells the system::tells the system
writing and makes::writing and makes
makes the file::makes the file
open the file::open the file
read the contents::read the contents
file that doesn::file that doesn
file or directory::file or directory
read method reads::read method reads
method reads data::method reads data
reads the entire::reads the entire
text = f.read::text = f.read
write a space::write a space
characters to read::characters to read
returns the remaining::returns the remaining
returns the empty::returns the empty
copies a file::copies a file
text = f1.read::text = f1.read
return the break::return the break
executing it breaks::executing it breaks
loop is infinite::loop is infinite
files a text::files a text
characters and whitespace::characters and whitespace
organized into lines::organized into lines
separated by newline::separated by newline
characters since python::characters since python
designed to process::designed to process
process text files::process text files
methods that make::methods that make
make the job::make the job
easy to demonstrate::easy to demonstrate
create a text::create a text
lines of text::lines of text
separated by newlines::separated by newlines
two \ nline::two \ nline
readline method reads::readline method reads
exceptions readlines returns::exceptions readlines returns
newline character appears::newline character appears
string and readlines::string and readlines
line-processing program filterfile::line-processing program filterfile
program filterfile makes::program filterfile makes
makes a copy::makes a copy
copy of oldfile::copy of oldfile
omitting any lines::omitting any lines
lines that begin::lines that begin
text = f1.readline::text = f1.readline
break if text::break if text
return the continue::return the continue
continue statement ends::continue statement ends
ends the current::ends the current
looping the flow::looping the flow
checks the condition::checks the condition
character of text::character of text
variables the argument::variables the argument
argument of write::argument of write
put other values::put other values
first the easiest::first the easiest
applied to integers::applied to integers
operator the first::operator the first
tuple of expressions::tuple of expressions
expressions the result::expressions the result
letter d stands::letter d stands
stands for decimal::stands for decimal
embed a value::embed a value
july we sold::july we sold
cars % cars::cars % cars
cars the format::cars the format
days we made::days we made
dollars by default::dollars by default
floating-point format prints::floating-point format prints
prints six decimal::prints six decimal
places the number::places the number
number of expressions::number of expressions
match the number::match the number
number of format::number of format
match the format::match the format
arguments for format::arguments for format
illegal argument type::illegal argument type
type for built-in::type for built-in
format of numbers::format of numbers
digits as part::digits as part
number of spaces::number of spaces
spaces the number::spaces the number
value provided takes::value provided takes
provided takes fewer::provided takes fewer
takes fewer digits::takes fewer digits
spaces are added::spaces are added
spaces is negative::spaces is negative
takes up twelve::takes up twelve
spaces and includes::spaces and includes
includes two digits::includes two digits
decimal this format::decimal this format
printing dollar amounts::printing dollar amounts
decimal points aligned::decimal points aligned
imagine a dictionary::imagine a dictionary
names as keys::names as keys
wages as values::wages as values
function that prints::function that prints
prints the contents::prints the contents
students = wages.keys::students = wages.keys
student in students::student in students
print % -20s::print % -20s
create a small::create a small
dictionary and print::dictionary and print
print the contents::print the contents
controlling the width::controlling the width
columns will line::columns will line
names contain fewer::names contain fewer
fewer than twenty-one::fewer than twenty-one
dollars an hour::dollars an hour
file by opening::file by opening
ran the program::ran the program
file for reading::file for reading
file is located::file is located
opens a file::opens a file
file named words::file named words
words that resides::words that resides
directory named dict::directory named dict
resides in share::resides in share
resides in usr::resides in usr
delimiter between directory::delimiter between directory
directory and filenames::directory and filenames
filenames the file::filenames the file
pickling in order::pickling in order
order to put::order to put
string the original::string the original
original type information::original type information
lost in fact::lost in fact
solution is pickling::solution is pickling
preserves data structures::preserves data structures
structures the pickle::structures the pickle
exceptions to store::exceptions to store
store a data::store a data
reading and load::reading and load
load the data::load the data
structures we dumped::structures we dumped
creates an exception::creates an exception
stops and python::stops and python
division or modulo::division or modulo
accessing a nonexistent::accessing a nonexistent
nonexistent list item::nonexistent list item
range or accessing::range or accessing
accessing a key::accessing a key
key that isn::key that isn
open a nonexistent::open a nonexistent
colon normally python::colon normally python
python also prints::python also prints
prints a traceback::prints a traceback
execute an operation::execute an operation
program to stop::program to stop
handle the exception::handle the exception
prompt the user::prompt the user
program to crash::program to crash
filename = raw_input::filename = raw_input
enter a file::enter a file
executes the statements::executes the statements
exception of type::exception of type
type ioerror occurs::type ioerror occurs
encapsulate this capability::encapsulate this capability
takes a filename::takes a filename
filename and returns::filename and returns
true except ioerror::true except ioerror
multiple except blocks::multiple except blocks
blocks to handle::blocks to handle
handle different kinds::handle different kinds
kinds of exceptions::kinds of exceptions
exceptions the python::exceptions the python
python reference manual::python reference manual
detects an error::detects an error
make it raise::make it raise
raise an exception::raise an exception
user and checks::user and checks
exceptions def inputnumber::exceptions def inputnumber
pick a number::pick a number
bad number return::bad number return
raise statement takes::raise statement takes
type and specific::type and specific
exception types python::exception types python
variety of occasions::variety of occasions
occasions other examples::occasions other examples
examples include typeerror::examples include typeerror
handles the error::handles the error
program can continue::program can continue
prints the error::prints the error
message and exits::message and exits
number the error::number the error
error message includes::error message includes
includes the exception::includes the exception
information you provided::information you provided
inputnumber to input::inputnumber to input
input a number::input a number
handles the valueerror::handles the valueerror
stream of characters::stream of characters
collection of files::collection of files
sequence of directory::sequence of directory
names that specifies::names that specifies
specifies the exact::specifies the exact
file text file::file text file
printable characters organized::printable characters organized
newline characters break::newline characters break
characters break statement::characters break statement
execution to exit::execution to exit
exit a loop::exit a loop
loop continue statement::loop continue statement
loop to end::loop to end
end the flow::end the flow
evaluates the condition::evaluates the condition
proceeds accordingly format::proceeds accordingly format
takes a format::takes a format
expressions and yields::expressions and yields
yields a string::yields a string
string that includes::string that includes
includes the expressions::includes the expressions
characters and format::characters and format
format values format::format values format
values format sequence::values format sequence
sequence of characters::sequence of characters
format a value::format a value
write a data::write a data
reconstituted later exception::reconstituted later exception
error that occurs::error that occurs
occurs at runtime::occurs at runtime
prevent an exception::prevent an exception
exception from terminating::exception from terminating
terminating a program::terminating a program
signal an exception::signal an exception
classes and objects::classes and objects
user-defined compound types::user-defined compound types
python s built-in::python s built-in
ready to create::ready to create
create a userdefined::create a userdefined
object in mathematical::object in mathematical
written in parentheses::written in parentheses
separating the coordinates::separating the coordinates
represents the origin::represents the origin
represents the point::represents the point
point x units::point x units
origin a natural::origin a natural
represent a point::represent a point
point in python::point in python
two floating-point values::two floating-point values
values the question::values the question
object the quick::object the quick
quick and dirty::quick and dirty
list or tuple::list or tuple
choice an alternative::choice an alternative
user-defined compound type::user-defined compound type
class this approach::class this approach
involves a bit::involves a bit
bit more effort::bit more effort
pass class definitions::pass class definitions
class defi nition::class defi- nition
objects this definition::objects this definition
class called point::class called point
point the pass::point the pass
body by creating::body by creating
creating the point::creating the point
point the members::point the members
type or objects::type or objects
instantiation to instantiate::instantiation to instantiate
instantiate a point::instantiate a point
blank = point::blank = point
blank is assigned::blank is assigned
assigned a reference::assigned a reference
object a function::object a function
function like point::function like point
point that creates::point that creates
creates new objects::creates new objects
add new data::add new data
instance using dot::instance using dot
syntax is similar::syntax is similar
syntax for selecting::syntax for selecting
selecting a variable::selecting a variable
math.pi or string.uppercase::math.pi or string.uppercase
selecting a data::selecting a data
instance these named::instance these named
state diagram shows::state diagram shows
blank the variable::blank the variable
variable blank refers::variable blank refers
attributes each attribute::attributes each attribute
expression blank.x means::expression blank.x means
object blank refers::object blank refers
assign that value::assign that value
instances as arguments::instances as arguments
purpose of dot::purpose of dot
identify which variable::identify which variable
referring to unambiguously::referring to unambiguously
notation as part::notation as part
statements are legal::statements are legal
distancesquared = blank.x::distancesquared = blank.x
blank.x + blank.y::blank.x + blank.y
blank.y the first::blank.y the first
first line outputs::first line outputs
calculates the value::calculates the value
tempted to print::tempted to print
value of blank::value of blank
blank the result::blank the result
defined in main::defined in main
written in hexadecimal::written in hexadecimal
display a point::display a point
change it shortly::change it shortly
create and print::create and print
print a point::print a point
print the object::print the object
object s unique::object s unique
unique identifier translate::unique identifier translate
translate the hexadecimal::translate the hexadecimal
form into decimal::form into decimal
decimal and confirm::decimal and confirm
pass an instance::pass an instance
takes a point::takes a point
argument and displays::argument and displays
rewrite the distance::rewrite the distance
points as arguments::points as arguments
sameness the meaning::sameness the meaning
make and model::make and model
two different cars::two different cars
idea of sameness::idea of sameness
talk about objects::talk about objects
object to find::object to find
variables are aliases::variables are aliases
true this type::true this type
type of equality::type of equality
objects to compare::objects to compare
compare the contents::compare the contents
objects deep equality::objects deep equality
function called samepoint::function called samepoint
two different objects::two different objects
samepoint to find::samepoint to find
1not all languages::1not all languages
kinds of sameness::kinds of sameness
sameness same car::sameness same car
shallow and deep::shallow and deep
class to represent::class to represent
represent a rectangle::represent a rectangle
rectangle the question::rectangle the question
rectangle is oriented::rectangle is oriented
width and height::width and height
two opposing corners::two opposing corners
corners a conventional::corners a conventional
pass and instantiate::pass and instantiate
box = rectangle::box = rectangle
two floating-point attributes::two floating-point attributes
embed an object::embed an object
object ! box.corner::object ! box.corner
box.corner = point::box.corner = point
dot operator composes::dot operator composes
composes the expression::composes the expression
expression box.corner.x means::expression box.corner.x means
object box refers::object box refers
select the attribute::select the attribute
attribute named corner::attribute named corner
object and select::object and select
objects the figure::objects the figure
shows the state::shows the state
instances as return::instances as return
takes a rectangle::takes a rectangle
returns a point::returns a point
p.x = box.corner.x::p.x = box.corner.x
p.y = box.corner.y::p.y = box.corner.y
argument and assign::argument and assign
assign the result::assign the result
center = findcenter::center = findcenter
objects are mutable::objects are mutable
change the state::change the state
object by making::object by making
making an assignment::making an assignment
change the size::change the size
rectangle without changing::rectangle without changing
changing its position::changing its position
modify the values::modify the values
values of width::values of width
box.width = box.width::box.width = box.width
box.height = box.height::box.height = box.height
method and generalize::method and generalize
grow the rectangle::grow the rectangle
box.width + dwidth::box.width + dwidth
box.height + dheight::box.height + dheight
dwidth and dheight::dwidth and dheight
rectangle should grow::rectangle should grow
invoking this method::invoking this method
effect of modifying::effect of modifying
modifying the rectangle::modifying the rectangle
rectangle named bob::rectangle named bob
bob and pass::bob and pass
bob = rectangle::bob = rectangle
bob.corner = point::bob.corner = point
growrect is running::growrect is running
alias for bob::alias for bob
made to box::made to box
box also affect::box also affect
function named moverect::function named moverect
moverect that takes::moverect that takes
two parameters named::two parameters named
change the location::change the location
rectangle by adding::rectangle by adding
coordinate of corner::coordinate of corner
corner and adding::corner and adding
aliasing can make::aliasing can make
copying an object::copying an object
alternative to aliasing::alternative to aliasing
aliasing the copy::aliasing the copy
function called copy::function called copy
duplicate any object::duplicate any object
import the copy::import the copy
method to make::method to make
objects to copy::objects to copy
copy a simple::copy a simple
copy is sufficient::copy is sufficient
thing it copies::thing it copies
copies the reference::copies the reference
create a box::create a box
resulting state diagram::resulting state diagram
width height corner::width height corner
behavior is confusing::behavior is confusing
confusing and error-prone::confusing and error-prone
method named deepcopy::method named deepcopy
deepcopy that copies::deepcopy that copies
surprised to learn::surprised to learn
completely separate objects::completely separate objects
deepcopy to rewrite::deepcopy to rewrite
import copy newbox::import copy newbox
newbox = copy.deepcopy::newbox = copy.deepcopy
newbox.width = newbox.width::newbox.width = newbox.width
newbox.width + dwidth::newbox.width + dwidth
newbox.height = newbox.height::newbox.height = newbox.height
newbox.height + dheight::newbox.height + dheight
dheight return newbox::dheight return newbox
creates and returns::creates and returns
type a class::type a class
create an instance::create an instance
object that belongs::object that belongs
model a thing::model a thing
thing or concept::thing or concept
real world constructor::real world constructor
create new objects::create new objects
named data items::named data items
items that makes::items that makes
instance shallow equality::instance shallow equality
equality of references::equality of references
references that point::references that point
object deep equality::object deep equality
equality of values::equality of values
point to objects::point to objects
value shallow copy::value shallow copy
copy the contents::copy the contents
including any references::including any references
references to embedded::references to embedded
objects ; implemented::objects ; implemented
copy module deep::copy module deep
module deep copy::module deep copy
classes and functions::classes and functions
define a class::define a class
day the class::day the class
object and assign::object and assign
attributes for hours::attributes for hours
hours minutes seconds::hours minutes seconds
printtime that takes::printtime that takes
argument and prints::argument and prints
two time objects::two time objects
chronologically and false::chronologically and false
write two versions::write two versions
function called addtime::function called addtime
calculates the sum::calculates the sum
demonstrate two kinds::demonstrate two kinds
kinds of functions::kinds of functions
functions and modifiers::functions and modifiers
version of addtime::version of addtime
sum.hours = t1.hours::sum.hours = t1.hours
t1.hours + t2.hours::t1.hours + t2.hours
sum.minutes = t1.minutes::sum.minutes = t1.minutes
t1.minutes + t2.minutes::t1.minutes + t2.minutes
sum.seconds = t1.seconds::sum.seconds = t1.seconds
t1.seconds + t2.seconds::t1.seconds + t2.seconds
t2.seconds return sum::t2.seconds return sum
sum the function::sum the function
initializes its attributes::initializes its attributes
displaying a value::displaying a value
breadmaker to make::breadmaker to make
addtime to figure::addtime to figure
finished writing printtime::finished writing printtime
donetime = addtime::donetime = addtime
deal with cases::deal with cases
number of seconds::number of seconds
seconds or minutes::seconds or minutes
carry the extra::carry the extra
t2.seconds if sum.seconds::t2.seconds if sum.seconds
sum.seconds = sum.seconds::sum.seconds = sum.seconds
sum.minutes = sum.minutes::sum.minutes = sum.minutes
sum.hours = sum.hours::sum.hours = sum.hours
suggest an alternative::suggest an alternative
approach that yields::approach that yields
yields shorter code::yields shorter code
function to modify::function to modify
objects it passes::objects it passes
makes are visible::makes are visible
functions that work::functions that work
modifier a rough::modifier a rough
functions def increment::functions def increment
time.seconds = time.seconds::time.seconds = time.seconds
time.seconds + seconds::time.seconds + seconds
seconds if time.seconds::seconds if time.seconds
time.minutes = time.minutes::time.minutes = time.minutes
time.hours = time.hours::time.hours = time.hours
first line performs::first line performs
performs the basic::performs the basic
greater than sixty::greater than sixty
sixty one solution::sixty one solution
seconds while time.seconds::seconds while time.seconds
write function calls::write function calls
done with modifiers::done with modifiers
done with pure::done with pure
functions in fact::functions in fact
evidence that programs::evidence that programs
functions are faster::functions are faster
faster to develop::faster to develop
error-prone than programs::error-prone than programs
modifiers are convenient::modifiers are convenient
convenient at times::convenient at times
prototype development versus::prototype development versus
development versus planning::development versus planning
write pure functions::write pure functions
resort to modifiers::resort to modifiers
advantage this approach::advantage this approach
functional programming style::functional programming style
demonstrated an approach::demonstrated an approach
approach to program::approach to program
call prototype development::call prototype development
wrote a rough::wrote a rough
performed the basic::performed the basic
lead to code::lead to code
cases and unreliable::cases and unreliable
errors an alternative::errors an alternative
alternative is planned::alternative is planned
problem can make::problem can make
make the programming::make the programming
programming much easier::programming much easier
number in base::number in base
thirty-six hundreds column::thirty-six hundreds column
addtime and increment::addtime and increment
effectively doing addition::effectively doing addition
addition in base::addition in base
suggests another approach::suggests another approach
arithmetic with numbers::arithmetic with numbers
minutes = t.hours::minutes = t.hours
seconds = minutes::seconds = minutes
t.seconds return seconds::t.seconds return seconds
time.hours = seconds::time.hours = seconds
time.seconds = seconds::time.seconds = seconds
bit to convince::bit to convince
converttoseconds to rewrite::converttoseconds to rewrite
functions def addtime::functions def addtime
seconds = converttoseconds::seconds = converttoseconds
easier to demonstrate::easier to demonstrate
converting from base::converting from base
back is harder::back is harder
dealing with times::dealing with times
times base conversion::times base conversion
intuition for dealing::intuition for dealing
insight to treat::insight to treat
times as base::times as base
numbers and make::numbers and make
make the investment::make the investment
investment of writing::investment of writing
writing the conversion::writing the conversion
converttoseconds and maketime::converttoseconds and maketime
easier to add::easier to add
subtracting two times::subtracting two times
times to find::times to find
find the duration::find the duration
subtraction with borrowing::subtraction with borrowing
making a problem::making a problem
makes it easier::makes it easier
fewer special cases::fewer special cases
cases and fewer::cases and fewer
opportunities for error::opportunities for error
write a general::write a general
class of problems::class of problems
written an algorithm::written an algorithm
algorithm we mentioned::algorithm we mentioned
mentioned this word::mentioned this word
define it carefully::define it carefully
easy to define::easy to define
couple of approaches::couple of approaches
multiply single-digit numbers::multiply single-digit numbers
memorized the multiplication::memorized the multiplication
table in effect::table in effect
solutions that kind::solutions that kind
kind of knowledge::kind of knowledge
cheated by learning::cheated by learning
find the product::find the product
digit this trick::digit this trick
solution for multiplying::solution for multiplying
multiplying any single-digit::multiplying any single-digit
techniques you learned::techniques you learned
learned for addition::learned for addition
addition with carrying::addition with carrying
characteristics of algorithms::characteristics of algorithms
require any intelligence::require any intelligence
intelligence to carry::intelligence to carry
embarrassing that humans::embarrassing that humans
learning to execute::learning to execute
require no intelligence::require no intelligence
process of designing::process of designing
algorithms is interesting::algorithms is interesting
things that people::things that people
difficulty or conscious::difficulty or conscious
hardest to express::hardest to express
express algorithmically understanding::express algorithmically understanding
algorithmically understanding natural::algorithmically understanding natural
understanding natural language::understanding natural language
glossary pure function::glossary pure function
objects it receives::objects it receives
receives as arguments::receives as arguments
arguments most pure::arguments most pure
functions are fruitful::functions are fruitful
arguments most modifiers::arguments most modifiers
modifiers are fruitless::modifiers are fruitless
fruitless functional programming::fruitless functional programming
style of program::style of program
majority of functions::majority of functions
functions are pure::functions are pure
pure prototype development::pure prototype development
developing programs starting::developing programs starting
testing and improving::testing and improving
improving it planned::improving it planned
programs that involves::programs that involves
involves high-level insight::involves high-level insight
planning than incremental::planning than incremental
development or prototype::development or prototype
prototype development algorithm::prototype development algorithm
instructions for solving::instructions for solving
solving a class::solving a class
classes and methods::classes and methods
object-oriented features python::object-oriented features python
object-oriented programming language::object-oriented programming language
features that support::features that support
support object-oriented programming::support object-oriented programming
define object-oriented programming::define object-oriented programming
programs are made::programs are made
definitions and function::definitions and function
computation is expressed::computation is expressed
expressed in terms::expressed in terms
terms of operations::terms of operations
operations on objects::operations on objects
objects each object::objects each object
object definition corresponds::object definition corresponds
object or concept::object or concept
functions that operate::functions that operate
ways real-world objects::ways real-world objects
real-world objects interact::real-world objects interact
defined in chapter::defined in chapter
functions we defined::functions we defined
kinds of things::kinds of things
point and rectangle::point and rectangle
rectangle classes correspond::rectangle classes correspond
programming strictly speaking::programming strictly speaking
provide an alternative::provide an alternative
syntax for things::syntax for things
conveys the structure::conveys the structure
methods this observation::methods this observation
motivation for methods::motivation for methods
keys and values::keys and values
invoked on dictionaries::invoked on dictionaries
dictionaries each method::dictionaries each method
invoked on instances::invoked on instances
methods are defined::methods are defined
inside a class::inside a class
definition in order::definition in order
make the relationship::make the relationship
explicit the syntax::explicit the syntax
syntax for invoking::syntax for invoking
invoking a method::invoking a method
previous two chapters::previous two chapters
chapters and transform::chapters and transform
methods this transformation::methods this transformation
sequence of steps::sequence of steps
printtime in chapter::printtime in chapter
defined a class::defined a class
function named printtime::function named printtime
pass def printtime::pass def printtime
printtime a method::printtime a method
move the function::move the function
function definition inside::function definition inside
inside the class::inside the class
class definition notice::class definition notice
notice the change::notice the change
change in indentation::change in indentation
printtime using dot::printtime using dot
method is invoked::method is invoked
dot the object::dot the object
invoked is assigned::invoked is assigned
currenttime is assigned::currenttime is assigned
metaphor the syntax::metaphor the syntax
print in object-oriented::print in object-oriented
agents an invocation::agents an invocation
invocation like currenttime.printtime::invocation like currenttime.printtime
change in perspective::change in perspective
write more versatile::write more versatile
easier to maintain::easier to maintain
maintain and reuse::maintain and reuse
method to save::method to save
out previously defined::out previously defined
previously defined methods::previously defined methods
previous method definitions::previous method definitions
definitions here def::definitions here def
self.seconds = seconds::self.seconds = seconds
seconds + self.seconds::seconds + self.seconds
methods while self.seconds::methods while self.seconds
self.seconds = self.seconds::self.seconds = self.seconds
self.minutes = self.minutes::self.minutes = self.minutes
self.hours = self.hours::self.hours = self.hours
mechanical we move::mechanical we move
move the method::move the method
definition and change::definition and change
invoked gets assigned::invoked gets assigned
slightly more complicated::slightly more complicated
self.hour > time2.hour::self.hour > time2.hour
self.hour < time2.hour::self.hour < time2.hour
self.minute > time2.minute::self.minute > time2.minute
self.minute < time2.minute::self.minute < time2.minute
self.second > time2.second::self.second > time2.second
invoke this method::invoke this method
object and pass::object and pass
print the bread::print the bread
read the invocation::read the invocation
invocation like english::invocation like english
number of arguments::number of arguments
write user-defined functions::write user-defined functions
functions with optional::functions with optional
optional argument lists::optional argument lists
thing as string.find::thing as string.find
version from section::version from section
index = start::index = start
start while index::start while index
value and starts::value and starts
overrides the default::overrides the default
add a fourth::add a fourth
stop looking warning::stop looking warning
tricky the default::tricky the default
value of end::value of end
work the default::work the default
values are evaluated::values are evaluated
find is defined::find is defined
find its length::find its length
method the initialization::method the initialization
object is created::object is created
method is init::method is init
two underscore characters::two underscore characters
two more underscores::two more underscores
self.hours = hours::self.hours = hours
self.minutes = minutes::self.minutes = minutes
parameter hours dot::parameter hours dot
hours dot notation::hours dot notation
specifies which variable::specifies which variable
arguments we provide::arguments we provide
provide are passed::provide are passed
arguments are optional::arguments are optional
parameters by naming::parameters by naming
rewrite the point::rewrite the point
class from section::class from section
initialization method takes::initialization method takes
values as optional::values as optional
returns a string::returns a string
method named str::method named str
python built-in str::python built-in str
built-in str function::built-in str function
printing a point::printing a point
object implicitly invokes::object implicitly invokes
implicitly invokes str::implicitly invokes str
behavior of print::behavior of print
start by writing::start by writing
easier to instantiate::easier to instantiate
overloading some languages::overloading some languages
change the definition::change the definition
applied to user-defined::applied to user-defined
types this feature::types this feature
defining new mathematical::defining new mathematical
override the addition::override the addition
provide a method::provide a method
method named add::method named add
methods here def::methods here def
self.x + other.x::self.x + other.x
self.y + other.y::self.y + other.y
add two points::add two points
create and return::create and return
operator to point::operator to point
python invokes add::python invokes add
add a method::add a method
overloads the subtraction::overloads the subtraction
ways to override::ways to override
override the behavior::override the behavior
defining a method::defining a method
method named mul::method named mul
python invokes mul::python invokes mul
point it computes::point it computes
computes the dot::computes the dot
rules of linear::rules of linear
return self.x other.x::return self.x other.x
other.x + self.y::other.x + self.y
python invokes rmul::python invokes rmul
performs scalar multiplication::performs scalar multiplication
point whose coordinates::point whose coordinates
rmul will yield::rmul will yield
yield an error::yield an error
demonstrates both kinds::demonstrates both kinds
kinds of multiplication::kinds of multiplication
argument inside mul::argument inside mul
difficulties of object-oriented::difficulties of object-oriented
out what code::out what code
code is running::code is running
written only work::written only work
methods that operate::methods that operate
set of operations::set of operations
common in linear::common in linear
takes three arguments::takes three arguments
multiplies the first::multiplies the first
method will work::method will work
point is multiplied::point is multiplied
dot product yields::dot product yields
yields a numeric::yields a numeric
value a function::value a function
prints a list::prints a list
forward and backward::forward and backward
back = copy.copy::back = copy.copy
list before reversing::list before reversing
doesn t modify::doesn t modify
modify the list::modify the list
intended to apply::intended to apply
apply this function::apply this function
function to lists::function to lists
point to determine::point to determine
apply the fundamental::apply the fundamental
rule of polymorphism::rule of polymorphism
type the operations::type the operations
method include copy::method include copy
print copy works::print copy works
written a str::written a str
method for points::method for points
self.y = self.y::self.y = self.y
points to frontandback::points to frontandback
kind of polymorphism::kind of polymorphism
glossary object-oriented language::glossary object-oriented language
classes and inheritance::classes and inheritance
facilitate object-oriented programming::facilitate object-oriented programming
object-oriented programming object-oriented::object-oriented programming object-oriented
programming object-oriented programming::programming object-oriented programming
style of programming::style of programming
operations that manipulate::operations that manipulate
organized into classes::organized into classes
replace a default::replace a default
default examples include::default examples include
examples include replacing::examples include replacing
replacing a default::replacing a default
argument and replacing::argument and replacing
method by providing::method by providing
initializes the object::initializes the object
object s attributes::object s attributes
methods operator overloading::methods operator overloading
extending built-in operators::extending built-in operators
card1 = card::card1 = card
print card1 jack::print card1 jack
jack of diamonds::jack of diamonds
diamonds class attributes::diamonds class attributes
attributes like suitlist::attributes like suitlist
suitlist are shared::suitlist are shared
objects the advantage::objects the advantage
object to access::object to access
access the class::access the class
card2 = card::card2 = card
sets of objects::sets of objects
objects the disadvantage::objects the disadvantage
modify a class::modify a class
affects every instance::affects every instance
decide that jack::decide that jack
whales the problem::whales the problem
idea to modify::idea to modify
modify class attributes::modify class attributes
cards for primitive::cards for primitive
values and determine::values and determine
operators by providing::operators by providing
providing a method::providing a method
method named cmp::method named cmp
object is greater::object is greater
ordered some sets::ordered some sets
sets are unordered::sets are unordered
element is bigger::element is bigger
fruits are unordered::fruits are unordered
apples and oranges::apples and oranges
oranges the set::oranges the set
set of playing::set of playing
clubs is higher::clubs is higher
diamonds is higher::diamonds is higher
suit in order::suit in order
make cards comparable::make cards comparable
rank or suit::rank or suit
choice is arbitrary::choice is arbitrary
sake of choosing::sake of choosing
deck of cards::deck of cards
cards comes sorted::cards comes sorted
check the suits::check the suits
suits if self.suit::suits if self.suit
self.suit > other.suit::self.suit > other.suit
self.suit < other.suit::self.suit < other.suit
ranks if self.rank::ranks if self.rank
self.rank > other.rank::self.rank > other.rank
self.rank < other.rank::self.rank < other.rank
aces appear lower::aces appear lower
lower than deuces::lower than deuces
aces are ranked::aces are ranked
higher than kings::higher than kings
objects to represent::objects to represent
represent a deck::represent a deck
deck is made::deck is made
list of cards::list of cards
class the initialization::class the initialization
initialization method creates::initialization method creates
creates the attribute::creates the attribute
cards and generates::cards and generates
generates the standard::generates the standard
suit in range::suit in range
rank in range::rank in range
populate the deck::populate the deck
loop the outer::loop the outer
outer loop enumerates::outer loop enumerates
enumerates the suits::enumerates the suits
enumerates the ranks::enumerates the ranks
outer loop iterates::outer loop iterates
iterates four times::iterates four times
loop iterates thirteen::loop iterates thirteen
iterates thirteen times::iterates thirteen times
times the body::times the body
body is executed::body is executed
instance of card::instance of card
suit and rank::suit and rank
appends that card::appends that card
list the append::list the append
append method works::append method works
works on lists::works on lists
printing the deck::printing the deck
deck as usual::deck as usual
type of object::type of object
method that prints::method that prints
object to print::object to print
print a deck::print a deck
traverse the list::traverse the list
list and print::list and print
print each card::print each card
objects class deck::objects class deck
card in self.cards::card in self.cards
alternative to printdeck::alternative to printdeck
write a str::write a str
class the advantage::class the advantage
advantage of str::advantage of str
printing the contents::printing the contents
generates a string::generates a string
program can manipulate::program can manipulate
manipulate before printing::manipulate before printing
version of str::version of str
str that returns::str that returns
deck to add::deck to add
add a bit::add a bit
bit of pizzazz::bit of pizzazz
arranges the cards::arranges the cards
card is indented::card is indented
indented one space::indented one space
demonstrates several features::demonstrates several features
self.cards and assigning::self.cards and assigning
assigning each card::assigning each card
string multiplication operator::string multiplication operator
operator to indent::operator to indent
indent each card::indent each card
last the expression::last the expression
expression i yields::expression i yields
yields a number::yields a number
command to print::command to print
print the cards::print the cards
str function passing::str function passing
passing an object::passing an object
argument to str::argument to str
str is equivalent::str is equivalent
equivalent to invoking::equivalent to invoking
invoking the str::invoking the str
string is generated::string is generated
generated and concatenated::generated and concatenated
complete string representation::complete string representation
shuffling the deck::shuffling the deck
deck = deck::deck = deck
print deck ace::print deck ace
ace of clubs::ace of clubs
jack of clubs::jack of clubs
queen of clubs::queen of clubs
king of clubs::king of clubs
ace of diamonds::ace of diamonds
card to shuffle::card to shuffle
shuffle the deck::shuffle the deck
two integer arguments::two integer arguments
chooses a random::chooses a random
chooses the index::chooses the index
traversing the cards::traversing the cards
cards and swapping::cards and swapping
swapping each card::swapping each card
precluded that possibility::precluded that possibility
import random ncards::import random ncards
ncards = len::ncards = len
list and store::list and store
choose a random::choose a random
swap the current::swap the current
swap the cards::swap the cards
rewrite this line::rewrite this line
removing and dealing::removing and dealing
cards another method::cards another method
class is removecard::class is removecard
takes a card::takes a card
deck and false::deck and false
object s cmp::object s cmp
method to determine::method to determine
equality with items::equality with items
card class checks::card class checks
checks for deep::checks for deep
removecard method checks::removecard method checks
equality to deal::equality to deal
remove and return::remove and return
return the top::return the top
card the list::card the list
list method pop::list method pop
removes the last::removes the last
boolean function isempty::boolean function isempty
represent one set::represent one set
values by constructing::values by constructing
constructing a mapping::constructing a mapping
method class attributes::method class attributes
attributes are accessible::attributes are accessible
loop to accumulate::loop to accumulate
accumulate a series::accumulate a series
series of values::series of values
string or adding::string or adding
inheritance the language::inheritance the language
programming is inheritance::programming is inheritance
ability to define::ability to define
class the primary::class the primary
add new methods::add new methods
class without modifying::class without modifying
modifying the existing::modifying the existing
existing class extending::existing class extending
extending this metaphor::extending this metaphor
feature some programs::feature some programs
complicated without inheritance::complicated without inheritance
inheritance can facilitate::inheritance can facilitate
facilitate code reuse::facilitate code reuse
customize the behavior::customize the behavior
behavior of parent::behavior of parent
inheritance structure reflects::inheritance structure reflects
reflects the natural::reflects the natural
makes the program::makes the program
easier to understand::easier to understand
inheritance can make::inheritance can make
make programs difficult::make programs difficult
find its definition::find its definition
definition the relevant::definition the relevant
done using inheritance::done using inheritance
harm than good::harm than good
inheritance as part::inheritance as part
program that plays::program that plays
plays the card::plays the card
game old maid::game old maid
reused to implement::reused to implement
implement other card::implement other card
hand of cards::hand of cards
represent a hand::represent a hand
cards a hand::cards a hand
hand is similar::hand is similar
set of cards::set of cards
operations like adding::operations like adding
adding and removing::adding and removing
ability to shuffle::ability to shuffle
shuffle both decks::shuffle both decks
decks and hands::decks and hands
hands a hand::hands a hand
game being played::game being played
perform some operations::perform some operations
operations on hands::operations on hands
hands that don::hands that don
don t make::don t make
classify a hand::classify a hand
hand in bridge::hand in bridge
compute a score::compute a score
hand in order::hand in order
make a bid::make a bid
bid this situation::bid this situation
inheritance if hand::inheritance if hand
subclass of deck::subclass of deck
methods of deck::methods of deck
parent class appears::parent class appears
appears in parentheses::appears in parentheses
pass this statement::pass this statement
hand class inherits::hand class inherits
existing deck class::existing deck class
class the hand::class the hand
hand constructor initializes::hand constructor initializes
initializes the attributes::initializes the attributes
cards the string::cards the string
string name identifies::string name identifies
identifies this hand::identifies this hand
player that holds::player that holds
default value cards::default value cards
add and remove::add and remove
deck removing cards::deck removing cards
hand inherits removecard::hand inherits removecard
removecard from deck::removecard from deck
omitted other methods::omitted other methods
methods the list::methods the list
list append method::list append method
append method adds::append method adds
deck into hands::deck into hands
natural to put::natural to put
out the entire::out the entire
add one card::add one card
hand deal takes::hand deal takes
number of cards::number of cards
cards to deal::cards to deal
cards and stops::cards and stops
nhands = len::nhands = len
break # break::break # break
out of cards::out of cards
card = self.popcard::card = self.popcard
top card hand::top card hand
hand = hands::hand = hands
add the card::add the card
dealt the loop::dealt the loop
card is removed::card is removed
removes and returns::removes and returns
returns the last::returns the last
list the modulus::list the modulus
number of hands::number of hands
printing a hand::printing a hand
hand to print::hand to print
printdeck and str::printdeck and str
str methods inherited::str methods inherited
inherited from deck::inherited from deck
hand = hand::hand = hand
print hand hand::print hand hand
hand hand frank::hand hand frank
ace of hearts::ace of hearts
convenient to inherit::convenient to inherit
inherit the existing::inherit the existing
provide a str::provide a str
class that overrides::class that overrides
hand + self.name::hand + self.name
self.name if self.isempty::self.name if self.isempty
string that identifies::string that identifies
identifies the hand::identifies the hand
hand is empty::hand is empty
appends the words::appends the words
words is empty::words is empty
empty and returns::empty and returns
appends the word::appends the word
computed by invoking::computed by invoking
odd to send::odd to send
kind of deck::kind of deck
deck hand objects::deck hand objects
legal to send::legal to send
send a hand::send a hand
method in general::method in general
subclass in place::subclass in place
class the cardgame::class the cardgame
cardgame class takes::cardgame class takes
class takes care::class takes care
basic chores common::basic chores common
creating the deck::creating the deck
deck and shuffling::deck and shuffling
self.deck = deck::self.deck = deck
initialization method performs::initialization method performs
performs a significant::performs a significant
attributes to implement::attributes to implement
implement specific games::implement specific games
inherit from cardgame::inherit from cardgame
cardgame and add::cardgame and add
write a simulation::write a simulation
maid the object::maid the object
rid of cards::rid of cards
cards by rank::cards by rank
rank and color::rank and color
suits are black::suits are black
black the jack::black the jack
jack of hearts::jack of hearts
matches the jack::matches the jack
red to begin::red to begin
begin the game::begin the game
clubs is removed::clubs is removed
queen of spades::queen of spades
match the fifty-one::match the fifty-one
fifty-one remaining cards::fifty-one remaining cards
cards are dealt::cards are dealt
match and discard::match and discard
begins in turn::begins in turn
picks a card::picks a card
chosen card matches::chosen card matches
matches a card::matches a card
player s hand::player s hand
pair is removed::pair is removed
card is added::card is added
matches are made::matches are made
loser s hand::loser s hand
plays all hands::plays all hands
game are lost::game are lost
neighbor to pick::neighbor to pick
pick that card::pick that card
failing to display::failing to display
failing to fail::failing to fail
fail to display::fail to display
display that card::display that card
card more prominently::card more prominently
prominently the computer::prominently the computer
computer simply picks::computer simply picks
picks a neighbor::picks a neighbor
neighbor s card::neighbor s card
card at random::card at random
class a hand::class a hand
hand for playing::hand for playing
playing old maid::playing old maid
requires some abilities::requires some abilities
inherits from hand::inherits from hand
method called removematches::method called removematches
inheritance class oldmaidhand::inheritance class oldmaidhand
originalcards = self.cards::originalcards = self.cards
card in originalcards::card in originalcards
match = card::match = card
match in self.cards::match in self.cards
count we start::count we start
start by making::start by making
making a copy::making a copy
traverse the copy::traverse the copy
copy while removing::copy while removing
original since self.cards::original since self.cards
self.cards is modified::self.cards is modified
control the traversal::control the traversal
traversing a list::traversing a list
color the expression::color the expression
turns a club::turns a club
operations also work::operations also work
cards are removed::cards are removed
game = cardgame::game = cardgame
hand = oldmaidhand::hand = oldmaidhand
frank contains ace::frank contains ace
ace of spades::ace of spades
clubs hand frank::clubs hand frank
class we inherit::class we inherit
turn our attention::turn our attention
game itself oldmaidgame::game itself oldmaidgame
subclass of cardgame::subclass of cardgame
method called play::method called play
play that takes::play that takes
list of players::list of players
argument since init::argument since init
init is inherited::init is inherited
inherited from cardgame::inherited from cardgame
make a hand::make a hand
deal the cards::deal the cards
inheritance # remove::inheritance # remove
remove initial matches::remove initial matches
initial matches matches::initial matches matches
matches = self.removeallmatches::matches = self.removeallmatches
play begins self.printhands::play begins self.printhands
cards are matched::cards are matched
numhands = len::numhands = len
matches = matches::matches = matches
matches + self.playoneturn::matches + self.playoneturn
separated into methods::separated into methods
methods removeallmatches traverses::methods removeallmatches traverses
traverses the list::traverses the list
list of hands::list of hands
hands and invokes::hands and invokes
hand in self.hands::hand in self.hands
count + hand.removematches::count + hand.removematches
printhands which traverses::printhands which traverses
self.hands and prints::self.hands and prints
prints each hand::prints each hand
accumulator that adds::accumulator that adds
number of matches::number of matches
hand and returns::hand and returns
returns the total::returns the total
matches reaches twenty-five::matches reaches twenty-five
card is left::card is left
turn keeps track::turn keeps track
player s turn::player s turn
modulus operator wraps::modulus operator wraps
method playoneturn takes::method playoneturn takes
neighbor = self.findneighbor::neighbor = self.findneighbor
pickedcard = self.hands::pickedcard = self.hands
count = self.hands::count = self.hands
consists of finding::consists of finding
finding the first::finding the first
taking one card::taking one card
checking for matches::checking for matches
matches before returning::matches before returning
hand are shuffled::hand are shuffled
player s choice::player s choice
choice is random::choice is random
random the method::random the method
method findneighbor starts::method findneighbor starts
left and continues::left and continues
finds a player::finds a player
neighbor if findneighbor::neighbor if findneighbor
circle without finding::circle without finding
game is detected::game is detected
omitted the printhands::omitted the printhands
top fifteen cards::top fifteen cards
tens and higher::tens and higher
game = cards.oldmaidgame::game = cards.oldmaidgame
dealt hand allen::dealt hand allen
allen contains king::allen contains king
king of hearts::king of hearts
king of spades::king of spades
diamonds hand jeff::diamonds hand jeff
queen of hearts::queen of hearts
jack of spades::jack of spades
king of diamonds::king of diamonds
queen of diamonds::queen of diamonds
diamonds hand chris::diamonds hand chris
chris contains jack::chris contains jack
clubs hand jeff::clubs hand jeff
hearts matches queen::hearts matches queen
play begins hand::play begins hand
begins hand allen::begins hand allen
jeff contains jack::jeff contains jack
hand allen picked::hand allen picked
allen picked king::allen picked king
diamonds hand allen::diamonds hand allen
hearts matches king::hearts matches king
hand jeff picked::hand jeff picked
hearts hand chris::hearts hand chris
hand chris picked::hand chris picked
chris picked jack::chris picked jack
clubs hand allen::clubs hand allen
allen picked jack::allen picked jack
hearts hand jeff::hearts hand jeff
jeff picked jack::jeff picked jack
chris picked queen::chris picked queen
spades hand allen::spades hand allen
hearts matches jack::hearts matches jack
jeff picked king::jeff picked king
clubs hand chris::clubs hand chris
chris picked king::chris picked king
hearts hand allen::hearts hand allen
jeff picked queen::jeff picked queen
spades hand chris::spades hand chris
clubs matches jack::clubs matches jack
spades hand jeff::spades hand jeff
clubs matches king::clubs matches king
allen is empty::allen is empty
empty hand jeff::empty hand jeff
jeff contains queen::jeff contains queen
chris is empty::chris is empty
previously defined class::previously defined class
defined class parent::defined class parent
class parent class::class parent class
child class inherits::child class inherits
class inherits child::class inherits child
inherits child class::inherits child class
created by inheriting::created by inheriting
examples of attributes::examples of attributes
common data structure::common data structure
feature linked lists::feature linked lists
lists are made::lists are made
list in addition::list in addition
unit of data::unit of data
cargo a linked::cargo a linked
list is considered::list is considered
considered a recursive::considered a recursive
recursive data structure::recursive data structure
definition a linked::definition a linked
linked list recursive::linked list recursive
list recursive data::list recursive data
recursive data structures::recursive data structures
data structures lend::data structures lend
class as usual::class as usual
usual when writing::usual when writing
initialization and str::initialization and str
test the basic::test the basic
mechanism of creating::mechanism of creating
creating and displaying::creating and displaying
linked lists class::linked lists class
lists class node::lists class node
self.cargo = cargo::self.cargo = cargo
method are optional::method are optional
optional by default::optional by default
store any value::store any value
list to test::list to test
test the implementation::test the implementation
create a node::create a node
node and print::node and print
node = node::node = node
print node test::print node test
test to make::test to make
make it interesting::make it interesting
node1 = node::node1 = node
node2 = node::node2 = node
node3 = node::node3 = node
creates three nodes::creates three nodes
linked the state::linked the state
node2 none cargo::node2 none cargo
node1 none cargo::node1 none cargo
link the nodes::link the nodes
make the first::make the first
node1.next = node2::node1.next = node2
node2.next = node3::node2.next = node3
node3 the reference::node3 the reference
lists as collections::lists as collections
nodes and link::nodes and link
assemble multiple objects::assemble multiple objects
list to pass::list to pass
pass the list::pass the list
pass a reference::pass a reference
function printlist takes::function printlist takes
prints each node::prints each node
node = node.next::node = node.next
print to invoke::print to invoke
invoke this function::invoke this function
variable that refers::variable that refers
node to traverse::node to traverse
traverse a linked::traverse a linked
variable like node::variable like node
nodes in succession::nodes in succession
succession this diagram::succession this diagram
shows the nodes::shows the nodes
values that node::values that node
linked lists node1::linked lists node1
lists node1 cargo::lists node1 cargo
node3 none node::node3 none node
node by convention::node by convention
printed in brackets::printed in brackets
brackets with commas::brackets with commas
lists and recursion::lists and recursion
natural to express::natural to express
express many list::express many list
operations using recursive::operations using recursive
algorithm for printing::algorithm for printing
printing a list::printing a list
separate the list::separate the list
print the tail::print the tail
print the head::print the head
recursive call works::recursive call works
works the leap::works the leap
natural base case::natural base case
head = list::head = list
tail = list.next::tail = list.next
first line handles::first line handles
handles the base::handles the base
case by doing::case by doing
two lines split::two lines split
split the list::split the list
list into head::list into head
head and tail::head and tail
tail the last::tail the last
last two lines::last two lines
two lines print::two lines print
print the list::print the list
line keeps python::line keeps python
python from printing::python from printing
printing a newline::printing a newline
printlist and printbackward::printlist and printbackward
printbackward are functions::printbackward are functions
class the reason::class the reason
represent the empty::represent the empty
legal to invoke::legal to invoke
invoke a method::invoke a method
awkward to write::awkward to write
write list-manipulating code::write list-manipulating code
clean object-oriented style::clean object-oriented style
prove that printbackward::prove that printbackward
reach the base::reach the base
case in fact::case in fact
lists will make::lists will make
make this function::make this function
prevent a node::prevent a node
node from referring::node from referring
shows a list::shows a list
infinitely this sort::infinitely this sort
sort of behavior::sort of behavior
behavior makes infinite::behavior makes infinite
makes infinite lists::makes infinite lists
infinite lists difficult::infinite lists difficult
difficult to work::difficult to work
represent a number::represent a number
list of digits::list of digits
list to represent::list to represent
represent a repeating::represent a repeating
prove that printlist::prove that printlist
functions will terminate::functions will terminate
terminate this sort::terminate this sort
sort of claim::sort of claim
precondition it imposes::precondition it imposes
imposes a constraint::imposes a constraint
arguments and describes::arguments and describes
describes the behavior::describes the behavior
constraint is satisfied::constraint is satisfied
fundamental ambiguity theorem::fundamental ambiguity theorem
theorem one part::theorem one part
part of printbackward::part of printbackward
raised an eyebrow::raised an eyebrow
head and list::head and list
variable the reason::variable the reason
two variables play::two variables play
play different roles::play different roles
list these roles::list these roles
programmer in general::programmer in general
program what role::program what role
role a variable::role a variable
plays this ambiguity::plays this ambiguity
names like node::names like node
node and list::node and list
list to document::list to document
create additional variables::create additional variables
variables to disambiguate::variables to disambiguate
printbackward without head::printbackward without head
possibly less clear::possibly less clear
two function calls::two function calls
remember that printbackward::remember that printbackward
treats its argument::treats its argument
collection and print::collection and print
object the fundamental::object the fundamental
ambiguity theorem describes::ambiguity theorem describes
describes the ambiguity::describes the ambiguity
node might treat::node might treat
treat the node::treat the node
list of nodes::list of nodes
ways to modify::ways to modify
modify a linked::modify a linked
change the cargo::change the cargo
reorder the nodes::reorder the nodes
function that removes::function that removes
list and returns::list and returns
wrappers and helpers::wrappers and helpers
first = list::first = list
list.next # make::list.next # make
first.next = second.next::first.next = second.next
second.next # separate::second.next # separate
variables to make::variables to make
code more readable::code more readable
shows the effect::shows the effect
pass a list::pass a list
pass the empty::pass the empty
fix the function::fix the function
function to handle::function to handle
handle a violation::handle a violation
divide a list::divide a list
print a list::print a list
function to print::function to print
print the brackets::print the brackets
idea to check::idea to check
work with special::work with special
propose an alternative::propose an alternative
explain what problems::explain what problems
problems it solves::problems it solves
class called linkedlist::class called linkedlist
linkedlist its attributes::linkedlist its attributes
first node linkedlist::first node linkedlist
node linkedlist objects::node linkedlist objects
linkedlist objects serve::linkedlist objects serve
serve as handles::serve as handles
handles for manipulating::handles for manipulating
lists of node::lists of node
place to put::place to put
put wrapper functions::put wrapper functions
make a method::make a method
tail = self.next::tail = self.next
make things confusing::make things confusing
two methods named::two methods named
methods named printbackward::methods named printbackward
wrapper invokes self.head.printbackward::wrapper invokes self.head.printbackward
invoking the helper::invoking the helper
object another benefit::object another benefit
add or remove::add or remove
remove the first::remove the first
method for linkedlists::method for linkedlists
takes an item::takes an item
item of cargo::item of cargo
argument and puts::argument and puts
node.next = self.head::node.next = self.head
self.head = node::self.head = node
self.length = self.length::self.length = self.length
handles the special::handles the special
invariants some lists::invariants some lists
methods to crash::methods to crash
require that lists::require that lists
loops another requirement::loops another requirement
number of nodes::number of nodes
invariants for objects::invariants for objects
easier to prove::easier to prove
correctness of code::correctness of code
check the integrity::check the integrity
integrity of data::integrity of data
errors one thing::errors one thing
confusing about invariants::confusing about invariants
middle of addfirst::middle of addfirst
added the node::added the node
invariant is violated::invariant is violated
violated this kind::violated this kind
kind of violation::kind of violation
violation is acceptable::violation is acceptable
impossible to modify::impossible to modify
modify an object::modify an object
object without violating::object without violating
violating an invariant::violating an invariant
method that violates::method that violates
violates an invariant::violates an invariant
invariant must restore::invariant must restore
restore the invariant::restore the invariant
stretch of code::stretch of code
comments to make::comments to make
make that clear::make that clear
operations are performed::operations are performed
performed that depend::performed that depend
glossary embedded reference::glossary embedded reference
object linked list::object linked list
structure that implements::structure that implements
implements a collection::implements a collection
sequence of linked::sequence of linked
linked nodes node::linked nodes node
item of data::item of data
link one object::link one object
true in order::true in order
method to work::method to work
work correctly fundamental::work correctly fundamental
correctly fundamental ambiguity::correctly fundamental ambiguity
single node wrapper::single node wrapper
method that acts::method that acts
making the method::making the method
error-prone to invoke::error-prone to invoke
method to perform::method to perform
abstract data types::abstract data types
types the data::types the data
card class represents::card class represents
represents a card::represents a card
represent a card::represent a card
implementations an abstract::implementations an abstract
abstract data type::abstract data type
specifies a set::specifies a set
makes it abstract::makes it abstract
simplifies the task::simplifies the task
denote the operations::denote the operations
ways to implement::ways to implement
implement an adt::implement an adt
write an algorithm::write an algorithm
implementations well-known adts::implementations well-known adts
implemented in standard::implemented in standard
programmers the operations::programmers the operations
operations on adts::operations on adts
provide a common::provide a common
common high-level language::common high-level language
talking about algorithms::talking about algorithms
talk about adts::talk about adts
distinguish the code::distinguish the code
code that implements::code that implements
implements the adt::implements the adt
stack a stack::stack a stack
elements other collections::elements other collections
dictionaries and lists::dictionaries and lists
lists an adt::lists an adt
adt is defined::adt is defined
interface the interface::interface the interface
empty stack push::empty stack push
return an item::return an item
stack the item::stack the item
stack is empty::stack is empty
empty a stack::empty a stack
lifo data structure::lifo data structure
last item added::last item added
stacks with python::stacks with python
lists the list::lists the list
operations that define::operations that define
define a stack::define a stack
stack the interface::stack the interface
code to translate::code to translate
operations this code::operations this code
adt in general::adt in general
set of methods::set of methods
methods that satisfy::methods that satisfy
satisfy the syntactic::satisfy the syntactic
syntactic and semantic::syntactic and semantic
pushing and popping::pushing and popping
attribute named items::attribute named items
list of items::list of items
stack the initialization::stack the initialization
initialization method sets::initialization method sets
method sets items::method sets items
list to push::list to push
items to pop::items to pop
pop an item::pop an item
homonymous1 list method::homonymous1 list method
method to remove::method to remove
return the last::return the last
isempty compares items::isempty compares items
list an implementation::list an implementation
consist of simple::consist of simple
invocations of existing::invocations of existing
veneer in real::veneer in real
coating of good::coating of good
good quality wood::good quality wood
furniture-making to hide::furniture-making to hide
hide lower quality::hide lower quality
lower quality wood::lower quality wood
quality wood underneath::quality wood underneath
wood underneath computer::wood underneath computer
underneath computer scientists::underneath computer scientists
metaphor to describe::metaphor to describe
describe a small::describe a small
code that hides::code that hides
hides the details::hides the details
popping a stack::popping a stack
generic data structure::generic data structure
add any type::add any type
type of item::type of item
pushes two integers::pushes two integers
isempty and pop::isempty and pop
pop to remove::pop to remove
remove and print::remove and print
stack to print::stack to print
print the items::print the items
backward ! granted::backward ! granted
format for printing::format for printing
compare this bit::compare this bit
bit of code::bit of code
implementation of printbackward::implementation of printbackward
printbackward in section::printbackward in section
version of printbackward::version of printbackward
recursion the stack::recursion the stack
stack to evaluate::stack to evaluate
expressions are written::expressions are written
infix an alternative::infix an alternative
postfix in postfix::postfix in postfix
evaluate a postfix::evaluate a postfix
operator or operand::operator or operand
pop two operands::pop two operands
perform the operation::perform the operation
push the result::push the result
stack that operand::stack that operand
apply this algorithm::apply this algorithm
advantages of postfix::advantages of postfix
parentheses to control::parentheses to control
control the order::control the order
result in infix::result in infix
write a postfix::write a postfix
parsing to implement::parsing to implement
implement the previous::implement the previous
traverse a string::traverse a string
string and break::string and break
operands and operators::operands and operators
operators this process::operators this process
results the individual::results the individual
remember these words::remember these words
words from chapter::words from chapter
modules the function::modules the function
function string.split splits::function string.split splits
splits a string::splits a string
string is split::string is split
space the function::space the function
provide a regular::provide a regular
delimiter a regular::delimiter a regular
set of strings::set of strings
negates a set::negates a set
string the resulting::string the resulting
resulting list includes::resulting list includes
includes the operands::includes the operands
includes two empty::includes two empty
two empty strings::two empty strings
inserted as phantom::inserted as phantom
postfix to evaluate::postfix to evaluate
implements the operators::implements the operators
stacks def evalpostfix::stacks def evalpostfix
import re tokenlist::import re tokenlist
tokenlist = re.split::tokenlist = re.split
stack = stack::stack = stack
token in tokenlist::token in tokenlist
continue if token::continue if token
sum = stack.pop::sum = stack.pop
product = stack.pop::product = stack.pop
first condition takes::first condition takes
condition takes care::condition takes care
care of spaces::care of spaces
spaces and empty::spaces and empty
two conditions handle::two conditions handle
conditions handle operators::conditions handle operators
operators we assume::operators we assume
check for erroneous::check for erroneous
input and report::input and report
report an error::report an error
evaluating the postfix::evaluating the postfix
clients and providers::clients and providers
separate the interests::separate the interests
writes the code::writes the code
adt the provider::adt the provider
implementation is correct::implementation is correct
correct in accord::correct in accord
adt is correct::adt is correct
correct and doesn::correct and doesn
doesn t worry::doesn t worry
luxury of thinking::luxury of thinking
write client code::write client code
code to test::code to test
play both roles::play both roles
make some effort::make some effort
glossary abstract data::glossary abstract data
variety of ways::variety of ways
define an adt::define an adt
code that satisfies::code that satisfies
satisfies the syntactic::satisfies the syntactic
person who wrote::person who wrote
implements an adt::implements an adt
definition that implements::definition that implements
adt with method::adt with method
transformations the veneer::transformations the veneer
improves or standardizes::improves or standardizes
standardizes the interface::standardizes the interface
client generic data::client generic data
kind of data::kind of data
writing mathematical expressions::writing mathematical expressions
read a string::read a string
string of characters::string of characters
characters or tokens::characters or tokens
tokens and analyze::tokens and analyze
analyze its grammatical::analyze its grammatical
grammatical structure token::grammatical structure token
unit for purposes::unit for purposes
purposes of parsing::purposes of parsing
natural language delimiter::natural language delimiter
queues this chapter::queues this chapter
presents two adts::presents two adts
queue in real::queue in real
line of customers::line of customers
waiting for service::waiting for service
customer in line::customer in line
customers whose flights::customers whose flights
flights are leaving::flights are leaving
queue at supermarkets::queue at supermarkets
items go first::items go first
first the rule::first the rule
rule that determines::rule that determines
policy the simplest::policy the simplest
simplest queueing policy::simplest queueing policy
general queueing policy::general queueing policy
policy is priority::policy is priority
customer is assigned::customer is assigned
assigned a priority::assigned a priority
priority goes first::priority goes first
order of arrival::order of arrival
groceries the customer::groceries the customer
important the customer::important the customer
policies are fair::policies are fair
beholder the queue::beholder the queue
priority queue adt::priority queue adt
operations the difference::operations the difference
priority queueing policy::priority queueing policy
adt the queue::adt the queue
empty queue insert::empty queue insert
queue the item::queue the item
queue is empty::queue is empty
queue the first::queue the first
linked node objects::linked node objects
list is empty::list is empty
node goes first::node goes first
find the last::find the last
last = self.head::last = self.head
self.head while last.next::self.head while last.next
last = last.next::last = last.next
last.next # append::last.next # append
last.next = node::last.next = node
cargo = self.head.cargo::cargo = self.head.cargo
self.head = self.head.next::self.head = self.head.next
cargo the methods::cargo the methods
isempty and remove::isempty and remove
remove are identical::remove are identical
linkedlist methods isempty::linkedlist methods isempty
isempty and removefirst::isempty and removefirst
removefirst the insert::removefirst the insert
bit more complicated::bit more complicated
insert new items::insert new items
node and tack::node and tack
identify the last::identify the last
properly formed queue::properly formed queue
formed queue object::formed queue object
object the value::object the value
value of length::value of length
preserves both invariants::preserves both invariants
method how long::method how long
run time change::run time change
number of items::number of items
loops or function::loops or function
constant time operation::constant time operation
operation in reality::operation in reality
skips the body::skips the body
significant the performance::significant the performance
performance of insert::performance of insert
list to find::list to find
element this traversal::element this traversal
takes time proportional::takes time proportional
linear time compared::linear time compared
compared to constant::compared to constant
improved linked queue::improved linked queue
perform all operations::perform all operations
operations in constant::operations in constant
modify the queue::modify the queue
maintains a reference::maintains a reference
cargo next cargo::cargo next cargo
queues the improvedqueue::queues the improvedqueue
insert and remove::insert and remove
node is head::node is head
head and last::head and last
self.head = self.last::self.head = self.last
self.last = node::self.last = node
last node last::last node last
last = self.last::last = self.last
self.last # append::self.last # append
last keeps track::last keeps track
method is constant::method is constant
price to pay::price to pay
add a special::add a special
case to remove::case to remove
remove to set::remove to set
node is removed::node is removed
linked queue implementation::linked queue implementation
difficult to demonstrate::difficult to demonstrate
correct the advantage::correct the advantage
achieved the goal::achieved the goal
goal both insert::goal both insert
remove are constant::remove are constant
constant time operations::constant time operations
write an implementation::write an implementation
python list compare::python list compare
compare the performance::compare the performance
range of queue::range of queue
queue the priority::queue the priority
highest priority isempty::highest priority isempty
empty the semantic::empty the semantic
necessarily the first::necessarily the first
priority queue implementation::priority queue implementation
implementation it depends::implementation it depends
queue have names::queue have names
highest to lowest::highest to lowest
lowest to highest::lowest to highest
compare the items::compare the items
find and remove::find and remove
priority this implementation::priority this implementation
implementation of priority::implementation of priority
attribute a python::attribute a python
queue class priorityqueue::queue class priorityqueue
queues def insert::queues def insert
veneers on list::veneers on list
method is remove::method is remove
item = self.items::item = self.items
holds the index::holds the index
compares the i-eth::compares the i-eth
item is bigger::item is bigger
value of maxi::value of maxi
maxi is set::maxi is set
item this item::item this item
item is removed::item is removed
list and returned::list and returned
queue contains simple::queue contains simple
numbers or strings::numbers or strings
removed in numerical::removed in numerical
numerical or alphabetical::numerical or alphabetical
python can find::python can find
find the biggest::find the biggest
integer or string::integer or string
built-in comparison operators::built-in comparison operators
provide a cmp::provide a cmp
method when remove::method when remove
operator to compare::operator to compare
invokes the cmp::invokes the cmp
items and passes::items and passes
cmp method works::cmp method works
queue will work::queue will work
definition of priority::definition of priority
implement a class::implement a class
class called golfer::class called golfer
names and scores::names and scores
scores of golfers::scores of golfers
golfers as usual::golfers as usual
start by defining::start by defining
init and str::init and str
self.score = score::self.score = score
score def __str__::score def __str__
return % -16s::return % -16s
operator to put::operator to put
put the names::put the names
scores in neat::scores in neat
define a version::define a version
version of cmp::version of cmp
score gets highest::score gets highest
equal class golfer::equal class golfer
self.score < other.score::self.score < other.score
self.score > other.score::self.score > other.score
ready to test::ready to test
test the priority::test the priority
tiger = golfer::tiger = golfer
phil = golfer::phil = golfer
hal = golfer::hal = golfer
python list implementation::python list implementation
set of objects::set of objects
adt that performs::adt that performs
performs the operations::performs the operations
queue queueing policy::queue queueing policy
rules that determine::rules that determine
determine which member::determine which member
queue is removed::queue is removed
removed next fifo::removed next fifo
member to arrive::member to arrive
removed priority queue::removed priority queue
determined by external::determined by external
factors the member::factors the member
adt that defines::adt that defines
defines the operations::defines the operations
priority queue linked::priority queue linked
queue linked queue::queue linked queue
linked list constant::linked list constant
operation whose runtime::operation whose runtime
data structure linear::data structure linear
data structure chapter::data structure chapter
trees like linked::trees like linked
trees are made::trees are made
nodes a common::nodes a common
kind of tree::kind of tree
two other nodes::two other nodes
references are referred::references are referred
subtrees like list::subtrees like list
cargo a state::cargo a state
left right left::left right left
omit the nones::omit the nones
nones the top::nones the top
node tree refers::node tree refers
root in keeping::root in keeping
tips with null::tips with null
draw the picture::draw the picture
thing to make::thing to make
make things worse::make things worse
computer scientists mix::computer scientists mix
metaphor the family::metaphor the family
tree the top::tree the top
nodes it refers::nodes it refers
vocabulary for talking::vocabulary for talking
talking about trees::talking about trees
comprise a level::comprise a level
metaphors for talking::metaphors for talking
trees are recursive::trees are recursive
recursively a tree::recursively a tree
two tree references::two tree references
trees the process::trees the process
process of assembling::process of assembling
assembling a tree::assembling a tree
tree is similar::tree is similar
assembling a linked::assembling a linked
list each constructor::list each constructor
constructor invocation builds::constructor invocation builds
builds a single::builds a single
single node class::single node class
node class tree::node class tree
self.left = left::self.left = left
right def __str__::right def __str__
arguments for left::arguments for left
tree nodes left::tree nodes left
right are optional::right are optional
print a node::print a node
print the cargo::print the cargo
build a tree::build a tree
bottom up allocate::bottom up allocate
allocate the child::allocate the child
child nodes first::child nodes first
left = tree::left = tree
right = tree::right = tree
create the parent::create the parent
node and link::node and link
tree = tree::tree = tree
write this code::write this code
concisely by nesting::concisely by nesting
nesting constructor invocations::nesting constructor invocations
traverse a tree::traverse a tree
tree is recursively::tree is recursively
tree contains integers::tree contains integers
integers as cargo::integers as cargo
returns their sum::returns their sum
tree.cargo the base::tree.cargo the base
recursive step makes::recursive step makes
makes two recursive::makes two recursive
calls to find::calls to find
find the sum::find the sum
recursive calls complete::recursive calls complete
add the cargo::add the cargo
parent and return::parent and return
return the total::return the total
trees a tree::trees a tree
represent the structure::represent the structure
unlike other notations::unlike other notations
represent the computation::represent the computation
addition this expression::addition this expression
expression tree represents::expression tree represents
cargo + cargo::cargo + cargo
tree left right::tree left right
right left right::right left right
right the nodes::right the nodes
nodes ; operator::nodes ; operator
nodes contain references::nodes contain references
operators are binary::operators are binary
build this tree::build this tree
first in order::first in order
order to compute::order to compute
addition expression trees::addition expression trees
chapter uses trees::chapter uses trees
trees to translate::trees to translate
expressions to postfix::expressions to postfix
infix similar trees::infix similar trees
compilers to parse::compilers to parse
traverse an expression::traverse an expression
tree and print::tree and print
print a tree::print a tree
print the entire::print the entire
entire left subtree::entire left subtree
entire right subtree::entire right subtree
traversing a tree::traversing a tree
notation called prefix::notation called prefix
traverse the tree::traverse the tree
print the subtrees::print the subtrees
order of traversal::order of traversal
print the left::print the left
expression in infix::expression in infix
omitted an important::omitted an important
write an expression::write an expression
parentheses to preserve::parentheses to preserve
preserve the order::preserve the order
sufficient to generate::sufficient to generate
generate an infix::generate an infix
recursive traversals provide::recursive traversals provide
provide a general::provide a general
operator and pair::operator and pair
pair of operands::pair of operands
correct and unambiguous::correct and unambiguous
generate a graphical::generate a graphical
level + str::level + str
level keeps track::level keeps track
tree by default::tree by default
child s level::child s level
item is indented::item is indented
spaces per level::spaces per level
level the result::level the result
building an expression::building an expression
parse infix expressions::parse infix expressions
expressions and build::expressions and build
simplified the diagram::simplified the diagram
diagram by leaving::diagram by leaving
out the names::out the names
attributes the parser::attributes the parser
write handles expressions::write handles expressions
expressions that include::expressions that include
list the token::list the token
preventing the parser::preventing the parser
parser from reading::parser from reading
past the end::past the end
takes an expression::takes an expression
string and returns::string and returns
returns a token::returns a token
list the first::list the first
write is gettoken::write is gettoken
takes a token::takes a token
token as arguments::token as arguments
arguments it compares::arguments it compares
compares the expected::compares the expected
removes the token::removes the token
false since tokenlist::false since tokenlist
returns a leaf::returns a leaf
returns none def::returns none def
return none del::return none del
getnumber in isolation::getnumber in isolation
isolation we assign::isolation we assign
assign a list::assign a list
numbers to tokenlist::numbers to tokenlist
extract the first::extract the first
print the result::print the result
print what remains::print what remains
builds an expression::builds an expression
tree for products::tree for products
products a simple::products a simple
numbers as operands::numbers as operands
version of getproduct::version of getproduct
getproduct that handles::getproduct that handles
handles simple products::handles simple products
simple products def::simple products def
products def getproduct::products def getproduct
return a assuming::return a assuming
assuming that getnumber::assuming that getnumber
succeeds and returns::succeeds and returns
returns a singleton::returns a singleton
assign the first::assign the first
number and build::number and build
build an expression::build an expression
return the leaf::return the leaf
tree = getproduct::tree = getproduct
kind of product::kind of product
product this definition::product this definition
definition of product::definition of product
product is counterintuitive::product is counterintuitive
deal with compound::deal with compound
treat this expression::treat this expression
product of products::product of products
change in getproduct::change in getproduct
handle an arbitrarily::handle an arbitrarily
arbitrarily long product::arbitrarily long product
line changed return::line changed return
changed return tree::changed return tree
right this kind::right this kind
kind of recursive::kind of recursive
starting to feel::starting to feel
add the ability::add the ability
ability to parse::ability to parse
slightly counterintuitive definition::slightly counterintuitive definition
definition of sum::definition of sum
represent any expression::represent any expression
sum of products::sum of products
products this property::products this property
parsing algorithm getsum::parsing algorithm getsum
doesn t find::doesn t find
builds a product::builds a product
product def getsum::product def getsum
tree = getsum::tree = getsum
entire sum enclosed::entire sum enclosed
getnumber to handle::getnumber to handle
remove the closing::remove the closing
closing parenthesis return::closing parenthesis return
return none tokenlist::return none tokenlist
test this code::test this code
trees the parser::trees the parser
handled the parentheses::handled the parentheses
idea to give::idea to give
assuming that expressions::assuming that expressions
expressions are well-formed::expressions are well-formed
missing parenthesis return::missing parenthesis return
omitted the raise::omitted the raise
raise statement creates::raise statement creates
case a valueerror::case a valueerror
handles the exception::handles the exception
find other places::find other places
functions where errors::functions where errors
occur and add::occur and add
add appropriate raise::add appropriate raise
raise statements test::raise statements test
test your code::test your code
improperly formed expressions::improperly formed expressions
develop a small::develop a small
tree to represent::tree to represent
represent a knowledge::represent a knowledge
base the program::base the program
user to create::user to create
create a tree::create a tree
tree of questions::tree of questions
questions and animal::questions and animal
animals name dog::animals name dog
dog what question::dog what question
question would distinguish::question would distinguish
distinguish a dog::distinguish a dog
animal were dog::animal were dog
dog the answer::dog the answer
animals name cat::animals name cat
cat what question::cat what question
distinguish a cat::distinguish a cat
animal were cat::animal were cat
cat the answer::cat the answer
tree this dialog::tree this dialog
bark cat dog::bark cat dog
tree and asks::tree and asks
asks the first::asks the first
first question depending::first question depending
child and continues::child and continues
makes a guess::makes a guess
asks the user::asks the user
question that distinguishes::question that distinguishes
adds a node::adds a node
trees def animal::trees def animal
root = tree::root = tree
quits while true::quits while true
break # walk::break # walk
walk the tree::walk the tree
tree = root::tree = root
root while tree.getleft::root while tree.getleft
prompt = tree.getcargo::prompt = tree.getcargo
tree = tree.getright::tree = tree.getright
tree = tree.getleft::tree = tree.getleft
make a guess::make a guess
guess = tree.getcargo::guess = tree.getcargo
print i rule::print i rule
rule ! continue::rule ! continue
animal = raw_input::animal = raw_input
question = raw_input::question = raw_input
add new information::add new information
prompt % animal::prompt % animal
prints a prompt::prints a prompt
function returns true::function returns true
string import lower::string import lower
import lower ans::import lower ans
ans = lower::ans = lower
loop is true::loop is true
break statement executes::break statement executes
walks the tree::walks the tree
tree from top::tree from top
user s responses::user s responses
node is added::node is added
replaces the cargo::replaces the cargo
cargo one shortcoming::cargo one shortcoming
save the knowledge::save the knowledge
glossary binary tree::glossary binary tree
two dependent nodes::two dependent nodes
dependent nodes root::dependent nodes root
node that refers::node that refers
nodes that share::nodes that share
share a common::share a common
common parent level::common parent level
set of nodes::set of nodes
root binary operator::root binary operator
operator that takes::operator that takes
takes two operands::takes two operands
two operands subexpression::two operands subexpression
parentheses that acts::parentheses that acts
larger expression preorder::larger expression preorder
visiting each node::visiting each node
children prefix notation::children prefix notation
writing a mathematical::writing a mathematical
visiting the children::visiting the children
node itself inorder::node itself inorder
visiting the left::visiting the left
computer scientist::computer scientist
thinking combines::thinking combines
natural science::natural science
computer scientists::computer scientists
formal languages::formal languages
denote ideas::denote ideas
specifically computations::specifically computations
design things::design things
assembling components::assembling components
evaluating tradeoffs::evaluating tradeoffs
complex systems::complex systems
form hypotheses::form hypotheses
test predictions::test predictions
important skill::important skill
problem solving::problem solving
solving problem::solving problem
solving means::solving means
formulate problems::formulate problems
excellent opportunity::excellent opportunity
practice problem::practice problem
solving skills::solving skills
python programming::python programming
programming language::programming language
python python::python python
high-level language::high-level language
high-level languages::high-level languages
lowlevel languages::lowlevel languages
machine languages::machine languages
program languages::program languages
execute programs::execute programs
programs written::programs written
low-level languages::low-level languages
extra processing::extra processing
processing takes::processing takes
small disadvantage::small disadvantage
language programs::language programs
modifications low-level::modifications low-level
low-level programs::low-level programs
languages low-level::languages low-level
specialized applications::specialized applications
programs process::programs process
process high-level::process high-level
interpreter reads::interpreter reads
high-level program::high-level program
reading lines::reading lines
performing computations::performing computations
computations source::computations source
source output::source output
output code::output code
code interpreter::code interpreter
compiler reads::compiler reads
program starts::program starts
starts running::starts running
source code::source code
translated program::translated program
object code::object code
translation output::translation output
code object::code object
object executor::object executor
executor code::executor code
code source::code source
source compiler::source compiler
compiler python::compiler python
interpreted language::interpreted language
python programs::python programs
commandline mode::commandline mode
script mode::script mode
command-line mode::command-line mode
type python::type python
interpreter prints::interpreter prints
first line::first line
python interpreter::python interpreter
line starts::line starts
interpreter replied::interpreter replied
text editor::text editor
file named::file named
development environments::development environments
executing programs::executing programs
command line::command line
line working::line working
program development::program development
type programs::type programs
working program::working program
symbolic computation::symbolic computation
replacing text::replacing text
basic instructions::basic instructions
program input::program input
device output::device output
display data::display data
send data::send data
device math::device math
basic mathematical::basic mathematical
mathematical operations::mathematical operations
conditional execution::conditional execution
statements repetition::statements repetition
describe programming::describe programming
complex task::complex task
smaller subtasks::smaller subtasks
debugging programming::debugging programming
complex process::complex process
human beings::human beings
whimsical reasons::whimsical reasons
programming errors::programming errors
syntax errors::syntax errors
runtime errors::runtime errors
semantic errors::semantic errors
errors python::errors python
process fails::process fails
error message::error message
message syntax::message syntax
syntax refers::syntax refers
capital letter::capital letter
syntax error::syntax error
significant problem::significant problem
spewing error::spewing error
error messages::error messages
messages python::messages python
single syntax::single syntax
programming career::programming career
gain experience::gain experience
fewer errors::fewer errors
runtime error::runtime error
happened runtime::happened runtime
simple programs::simple programs
semantic error::semantic error
right thing::right thing
wrong identifying::wrong identifying
work backward::work backward
experimental debugging::experimental debugging
important skills::important skills
interesting parts::interesting parts
detective work::detective work
experimental science::experimental science
step closer::step closer
sherlock holmes::sherlock holmes
holmes pointed::holmes pointed
conan doyle::conan doyle
small modifications::small modifications
operating system::operating system
simple program::simple program
program linus::program linus
linus torvalds::linus torvalds
larry greenfield::larry greenfield
earlier projects::earlier projects
printing aaaa::printing aaaa
linux users::linux users
users guide::users guide
guide beta::guide beta
beta version::beta version
programming practices::programming practices
natural languages::natural languages
people speak::people speak
evolved naturally::evolved naturally
specific applications::specific applications
formal language::formal language
denoting relationships::denoting relationships
symbols chemists::symbols chemists
chemical structure::chemical structure
programming languages::programming languages
express computations::express computations
languages tend::languages tend
strict rules::strict rules
correct mathematical::correct mathematical
mathematical statement::mathematical statement
correct chemical::correct chemical
syntax rules::syntax rules
structure tokens::structure tokens
basic elements::basic elements
chemical elements::chemical elements
legal token::legal token
error pertains::error pertains
equal sign::equal sign
molecular formulas::molecular formulas
well-structured english::well-structured english
english sentence::english sentence
unrecognizable tokens::unrecognizable tokens
valid tokens::valid tokens
invalid structure::invalid structure
natural language::natural language
shoe fell::shoe fell
sentence assuming::sentence assuming
general implication::general implication
common tokens::common tokens
people deal::people deal
contextual clues::contextual clues
context redundancy::context redundancy
reduce misunderstandings::reduce misunderstandings
languages employ::languages employ
employ lots::employ lots
concise literalness::concise literalness
emotional response::emotional response
response ambiguity::response ambiguity
deliberate prose::deliberate prose
literal meaning::literal meaning
structure contributes::structure contributes
meaning prose::meaning prose
ambiguous programs::ambiguous programs
computer program::computer program
reading programs::reading programs
good idea::good idea
details matter::details matter
spelling errors::spelling errors
bad punctuation::bad punctuation
big difference::big difference
first program::first program
program written::program written
print statement::print statement
quotation marks::quotation marks
program mark::program mark
people judge::people judge
glossary problem::glossary problem
solution high-level::solution high-level
write low-level::write low-level
low-level language::low-level language
machine language::machine language
assembly language::assembly language
language portability::language portability
computer interpret::computer interpret
lowlevel language::lowlevel language
execution source::execution source
compiled object::compiled object
executed script::executed script
program stored::program stored
computation algorithm::computation algorithm
general process::general process
problems bug::problems bug
program debugging::program debugging
errors syntax::errors syntax
program syntax::program syntax
continuing exception::continuing exception
programmer intended::programmer intended
intended semantics::intended semantics
specific purposes::specific purposes
mathematical ideas::mathematical ideas
computer programs::computer programs
languages token::languages token
syntactic structure::syntactic structure
language parse::language parse
structure print::structure print
program chapter::program chapter
fundamental things::fundamental things
program manipulates::program manipulates
values belong::values belong
identify strings::identify strings
strings belong::strings belong
type str::type str
type int::type int
decimal point::decimal point
large integer::large integer
legal integer::legal integer
legal expression::legal expression
python interprets::python interprets
comma-separated list::comma-separated list
prints consecutively::prints consecutively
code runs::code runs
powerful features::powerful features
manipulate variables::manipulate variables
assignment statement::assignment statement
statement creates::statement creates
first assigns::first assigns
named message::named message
floating-point number::floating-point number
represent variables::represent variables
arrow pointing::arrow pointing
state diagram::state diagram
diagram shows::diagram shows
assignment statements::assignment statements
variable names::variable names
print message::print message
variable variables::variable variables
keywords programmers::keywords programmers
choose names::choose names
arbitrarily long::arbitrarily long
uppercase letters::uppercase letters
case matters::case matters
matters bruce::matters bruce
underscore character::underscore character
multiple words::multiple words
big parade::big parade
parade syntaxerror::parade syntaxerror
invalid syntax::invalid syntax
computer science::computer science
syntax 76trombones::syntax 76trombones
illegal character::illegal character
dollar sign::dollar sign
python keywords::python keywords
keywords keywords::keywords keywords
keywords define::keywords define
names python::names python
twenty-nine keywords::twenty-nine keywords
def exec::def exec
return assert::return assert
assert del::assert del
finally import::finally import
print yield::print yield
yield continue::yield continue
global lambda::global lambda
lambda raise::lambda raise
list handy::list handy
interpreter complains::interpreter complains
python executes::python executes
value assignment::value assignment
statements don::statements don
statements execute::statements execute
script print::script print
evaluating expressions::evaluating expressions
statement produces::statement produces
interpreter evaluates::interpreter evaluates
interpreter displays::interpreter displays
python displays::python displays
legal statement::legal statement
operands operators::operands operators
special symbols::special symbols
represent computations::represent computations
legal python::legal python
python expressions::python expressions
performed addition::performed addition
unexpected result::unexpected result
conventional arithmetic::conventional arithmetic
performing integer::performing integer
integer division::integer division
approximately correct::approximately correct
floating-point division::floating-point division
operator appears::operator appears
evaluation depends::evaluation depends
precedence python::precedence python
precedence rules::precedence rules
mathematical operators::mathematical operators
acronym pemdas::acronym pemdas
highest precedence::highest precedence
expression easier::expression easier
result exponentiation::result exponentiation
expression minute::expression minute
turn yields::turn yields
type string::type string
operator represents::operator represents
represents concatenation::represents concatenation
banana bakedgood::banana bakedgood
nut bread::nut bread
bread print::bread print
print fruit::print fruit
word nut::word nut
concatenated strings::concatenated strings
performs repetition::performs repetition
makes sense::makes sense
string concatenation::string concatenation
integer addition::integer addition
program variables::program variables
small building::small building
building blocks::building blocks
add numbers::add numbers
actions aren::actions aren
expression involving::expression involving
involving numbers::involving numbers
print number::print number
arbitrary expressions::arbitrary expressions
right-hand side::right-hand side
composition makes::composition makes
express complex::express complex
complex computations::complex computations
concisely warning::concisely warning
left-hand side::left-hand side
add notes::add notes
elapsed percentage::elapsed percentage
comment appears::comment appears
put comments::put comments
future programmers::future programmers
ever-surprising behavior::ever-surprising behavior
division operation::division operation
division operator1::division operator1
deliberate percentage::deliberate percentage
division operator::division operator
glossary value::glossary value
expression type::expression type
value determines::value determines
floating-point numbers::floating-point numbers
type float::type float
representing numbers::representing numbers
fractional parts::fractional parts
value statement::value statement
print statements::print statements
statements assignment::statements assignment
future versions::future versions
statements state::statements state
graphical representation::graphical representation
reserved word::reserved word
names operator::names operator
special symbol::special symbol
simple computation::simple computation
concatenation operand::concatenation operand
operator operates::operator operates
operates expression::operates expression
single result::single result
result value::result value
value evaluate::value evaluate
single value::single value
value integer::value integer
integer integer::integer integer
division yields::division yields
remainder rules::remainder rules
rules governing::rules governing
expressions involving::expressions involving
involving multiple::involving multiple
multiple operators::multiple operators
evaluated concatenate::evaluated concatenate
operands end-to-end::operands end-to-end
end-to-end composition::end-to-end composition
simple expressions::simple expressions
compound statements::compound statements
computations concisely::computations concisely
concisely comment::concisely comment
function calls::function calls
function call::function call
function takes::function takes
return value::return value
print betty::print betty
unique identifier::unique identifier
unique number::unique number
number related::number related
type conversion::type conversion
conversion python::conversion python
built-in functions::built-in functions
convert values::convert values
int function::int function
invalid literal::invalid literal
floating-point values::floating-point values
fractional part::fractional part
float function::float function
function converts::function converts
converts integers::converts integers
str function::str function
python distinguishes::python distinguishes
integer value::integer value
floatingpoint value::floatingpoint value
type coercion::type coercion
division returning::division returning
previous chapter::previous chapter
obvious expression::obvious expression
integer arithmetic::integer arithmetic
math functions::math functions
convert minute::convert minute
automatic type::automatic type
force python::force python
evaluate expressions::evaluate expressions
logarithm base::logarithm base
complicated expressions::complicated expressions
innermost function::innermost function
math module::math module
familiar mathematical::familiar mathematical
mathematical functions::mathematical functions
related functions::related functions
functions grouped::functions grouped
import math::import math
dot notation::dot notation
first statement::first statement
statement sets::statement sets
sets decibel::sets decibel
takes logarithm::takes logarithm
statement finds::statement finds
variable angle::variable angle
angle sin::angle sin
trigonometric functions::trigonometric functions
first calculate::first calculate
previous result::previous result
square root::square root
python functions::python functions
statement takes::statement takes
cos function::cos function
log base::log base
functions creating::functions creating
general-purpose programming::general-purpose programming
named sequence::named sequence
desired operation::desired operation
function definition::function definition
good thing::good thing
python keyword::python keyword
parameters specifies::parameters specifies
statements inside::statements inside
left margin::left margin
first couple::first couple
def newline::def newline
empty parentheses::empty parentheses
single statement::single statement
newline character::newline character
print command::print command
line newline::line newline
line notice::line notice
extra space::extra space
function named::function named
named threelines::named threelines
def threelines::def threelines
line threelines::line threelines
procedure repeatedly::procedure repeatedly
case threelines::case threelines
threelines calls::threelines calls
calls newline::calls newline
statements functions::statements functions
complex computation::complex computation
single command::single command
english words::english words
arcane code::arcane code
program smaller::program smaller
repetitive code::repetitive code
call threelines::call threelines
blank lines::blank lines
code fragments::code fragments
print def::print def
function definitions::function definitions
threelines function::threelines function
definition generates::definition generates
definitions run::definitions run
working version::working version
execution execution::execution execution
program statements::program statements
bottom function::bottom function
function inside::function inside
definition isn::definition isn
outer function::outer function
flow jumps::flow jumps
sounds simple::sounds simple
keeping track::keeping track
function completes::function completes
program picks::program picks
sordid tale::sordid tale
require arguments::require arguments
sin takes::sin takes
numeric value::numeric value
pow takes::pow takes
exponent inside::exponent inside
user-defined function::user-defined function
def printtwice::def printtwice
print bruce::print bruce
single argument::single argument
parameter named::parameter named
named bruce::named bruce
function printtwice::function printtwice
printtwice works::printtwice works
spam spam::spam spam
first function::first function
user-defined functions::user-defined functions
spamspamspamspam spamspamspamspam::spamspamspamspam spamspamspamspam
printtwice prints::printtwice prints
prints spamspamspamspam::prints spamspamspamspam
print spam::print spam
double quotes::double quotes
bee notice::bee notice
back home::back home
local variable::local variable
variable inside::variable inside
exists inside::exists inside
def cattwice::def cattwice
part2 printtwice::part2 printtwice
pie jesu::pie jesu
jesu domine::jesu domine
dona eis::dona eis
eis requiem::eis requiem
requiem pie::requiem pie
cattwice terminates::cattwice terminates
variable cat::variable cat
print cat::print cat
cat nameerror::cat nameerror
cat parameters::cat parameters
stack diagrams::stack diagrams
stack diagram::stack diagram
state diagrams::state diagrams
diagrams show::diagrams show
variable belongs::variable belongs
cattwice chant1::cattwice chant1
chant1 chant2::chant1 chant2
chant2 pie::chant2 pie
requiem __main__::requiem __main__
__main__ printtwice::__main__ printtwice
printtwice part1::printtwice part1
part1 part2::part1 part2
part2 cat::part2 cat
cat pie::cat pie
requiem dona::requiem dona
requiem bruce::requiem bruce
bruce pie::bruce pie
stack shows::stack shows
execution printtwice::execution printtwice
topmost function::topmost function
parameter refers::parameter refers
error occurs::error occurs
python prints::python prints
file test.py::file test.py
__main__ cattwice::__main__ cattwice
cattwice printtwice::cattwice printtwice
printtwice print::printtwice print
program file::program file
error occurred::error occurred
error notice::error notice
yield results::yield results
larger expression::larger expression
write functions::write functions
simple function::simple function
last question::last question
glossary function::glossary function
arguments enclosed::arguments enclosed
parentheses argument::parentheses argument
value provided::value provided
function return::function return
explicit statement::explicit statement
type type::type type
coercion rules::coercion rules
rules module::rules module
classes dot::classes dot
operation functions::operation functions
result function::result function
executes flow::executes flow
program run::program run
run parameter::run parameter
value passed::value passed
defined inside::defined inside
function stack::function stack
local variables::local variables
function traceback::function traceback
functions chapter::functions chapter
modulus operator::modulus operator
operator works::operator works
integer expressions::integer expressions
first operand::first operand
percent sign::percent sign
print quotient::print quotient
print remainder::print remainder
operator turns::operator turns
right-most digit::right-most digit
boolean expressions::boolean expressions
boolean expression::boolean expression
boolean value::boolean value
false true::false true
special values::special values
comparison operators::comparison operators
python symbols::python symbols
mathematical symbols::mathematical symbols
common error::common error
single equal::single equal
double equal::double equal
assignment operator::assignment operator
comparison operator::comparison operator
logical operators::logical operators
operator negates::operator negates
nonzero number::nonzero number
good style::good style
check conditions::check conditions
conditional statements::conditional statements
statements give::statements give
simplest form::simplest form
indented statement::indented statement
last statement::last statement
header begins::header begins
indented statements::indented statements
unindented statement::unindented statement
statement marks::statement marks
statement block::statement block
block inside::block inside
compound statement::compound statement
place keeper::place keeper
pass statement::pass statement
alternative execution::alternative execution
condition determines::condition determines
program displays::program displays
def printparity::def printparity
printparity displays::printparity displays
integer expression::integer expression
chained conditionals::chained conditionals
equal elif::equal elif
elif statements::elif statements
last branch::last branch
elif choice::elif choice
nested conditionals::nested conditionals
print invalid::print invalid
invalid choice::invalid choice
branch executes::branch executes
statement ends::statement ends
first true::first true
true branch::true branch
first branch::first branch
simple output::simple output
output statement::output statement
output statements::output statements
statements makes::statements makes
structure apparent::structure apparent
single conditional::single conditional
positive single::positive single
single digit::single digit
alternative syntax::alternative syntax
mathematical notation::mathematical notation
compound boolean::compound boolean
nested conditional::nested conditional
return statement::return statement
error condition::error condition
math def::math def
def printlogarithm::def printlogarithm
positive numbers::positive numbers
return result::return result
function printlogarithm::function printlogarithm
first thing::first thing
remaining lines::remaining lines
executed remember::executed remember
interesting things::interesting things
print blastoff::print blastoff
countdown expects::countdown expects
positive integer::positive integer
named countdown::named countdown
countdown begins::countdown begins
total output::total output
functions newline::functions newline
def nlines::def nlines
print nlines::print nlines
additional newlines::additional newlines
total number::total number
function calling::function calling
recursive functions::recursive functions
recursive function::recursive function
python creates::python creates
function frame::function frame
figure shows::figure shows
__main__ countdown::__main__ countdown
countdown countdown::countdown countdown
infinite recursion::infinite recursion
countdown frames::countdown frames
base case::base case
recursive call::recursive call
recursive calls::recursive calls
minimal program::minimal program
def recurse::def recurse
programming environments::programming environments
run forever::run forever
forever python::forever python
python reports::python reports
maximum recursion::maximum recursion
recursion depth::recursion depth
repetitions omitted::repetitions omitted
recurse runtimeerror::recurse runtimeerror
depth exceeded::depth exceeded
recurse frames::recurse frames
keyboard input::keyboard input
bit rude::bit rude
raw input::raw input
program stops::program stops
user presses::user presses
presses return::presses return
enter key::enter key
program resumes::program resumes
input returns::input returns
user typed::user typed
print input::print input
calling raw::calling raw
message telling::message telling
input function::input function
airspeed velocity::airspeed velocity
unladen swallow::unladen swallow
string represents::string represents
input appears::input appears
user types::user types
program crashes::program crashes
european swallow::european swallow
swallow syntaxerror::swallow syntaxerror
conversion functions::conversion functions
glossary modulus::glossary modulus
false comparison::false comparison
logical operator::logical operator
conditional statement::conditional statement
execution depending::execution depending
executed compound::executed compound
header ends::header ends
header block::header block
consecutive statements::consecutive statements
indentation body::indentation body
header nesting::header nesting
program structure::program structure
statement inside::statement inside
statement recursion::statement recursion
executing base::executing base
call infinite::call infinite
error prompt::error prompt
visual cue::visual cue
input data::input data
recursion chapter::recursion chapter
fruitful functions::fruitful functions
return values::return values
produced results::produced results
results calling::results calling
function generates::function generates
radius math.sin::radius math.sin
def area::def area
math.pi radius::math.pi radius
return temp::return temp
fruitful function::fruitful function
statement includes::statement includes
statement means::statement means
expression provided::expression provided
return math.pi::return math.pi
temporary variables::temporary variables
debugging easier::debugging easier
multiple return::multiple return
return statements::return statements
def absolutevalue::def absolutevalue
function terminates::function terminates
subsequent statements::subsequent statements
statements code::statements code
dead code::dead code
program hits::program hits
function ends::function ends
special value::special value
print absolutevalue::print absolutevalue
compare function::compare function
complete functions::complete functions
small functions::small functions
larger functions::larger functions
complex programs::complex programs
incremental development::incremental development
long debugging::long debugging
debugging sessions::debugging sessions
small amount::small amount
pythagorean theorem::pythagorean theorem
first step::first step
distance function::distance function
floating-point value::floating-point value
def distance::def distance
function doesn::function doesn
compute distances::compute distances
sample values::sample values
horizontal distance::horizontal distance
distance equals::distance equals
vertical distance::vertical distance
right answer::right answer
adding lines::adding lines
incremental change::incremental change
last line::last line
logical first::logical first
variables named::variables named
right arguments::right arguments
first computation::first computation
computation correctly::computation correctly
print dsquared::print dsquared
dsquared return::dsquared return
previous step::previous step
step code::step code
final product::final product
sqrt function::sqrt function
bigger chunks::bigger chunks
development process::development process
key aspects::key aspects
small incremental::small incremental
intermediate values::intermediate values
multiple statements::multiple statements
compound expressions::compound expressions
program difficult::program difficult
right triangle::right triangle
arguments record::arguments record
circle assume::circle assume
center point::center point
perimeter point::perimeter point
result wrapping::result wrapping
def area2::def area2
function area2::function area2
area function::area function
function defined::function defined
defined earlier::defined earlier
variables radius::variables radius
return area::return area
function slope::function slope
boolean functions::boolean functions
functions functions::functions functions
boolean values::boolean values
hiding complicated::hiding complicated
complicated tests::complicated tests
tests inside::tests inside
inside functions::inside functions
return true::return true
return false::return false
functions names::functions names
isdivisible returns::isdivisible returns
taking advantage::taking advantage
session shows::session shows
true boolean::true boolean
extra comparison::extra comparison
function isbetween::function isbetween
returns true::returns true
small subset::small subset
complete programming::complete programming
language features::language features
control devices::control devices
nontrivial exercise::nontrivial exercise
alan turing::alan turing
first computer::first computer
early computer::early computer
scientists started::scientists started
turing thesis::turing thesis
recursive definition::recursive definition
circular definition::circular definition
mathematical function::mathematical function
python program::python program
single parameter::single parameter
def factorial::def factorial
interesting part::interesting part
recurse return::recurse return
factorial factorial::factorial factorial
recurse notice::recurse notice
last frame::last frame
variables recurse::variables recurse
read programs::read programs
function works::function works
call math.cos::call math.cos
good programmers::good programmers
recursive programs::recursive programs
functions call::functions call
call works::call works
correct result::correct result
bit strange::bit strange
code easier::code easier
concise form::concise form
explicit version::explicit version
developing code::developing code
feeling inspired::feeling inspired
def fibonacci::def fibonacci
return fibonacci::return fibonacci
small values::small values
head explodes::head explodes
calls work::calls work
right result::right result
checking types::checking types
first recursive::first recursive
factorial function::factorial function
factorial check::factorial check
first option::first option
gamma function::gamma function
built-in function::built-in function
function isinstance::function isinstance
integers return::integers return
positive integers::positive integers
base cases::base cases
first catches::first catches
catches nonintegers::catches nonintegers
negative integers::negative integers
program prints::program prints
recursion terminates::recursion terminates
program demonstrates::program demonstrates
conditionals act::conditionals act
guardians make::guardians make
glossary fruitful::glossary fruitful
value return::value return
call temporary::call temporary
intermediate value::intermediate value
complex calculation::complex calculation
calculation dead::calculation dead
special python::special python
python value::python value
value returned::value returned
argument incremental::argument incremental
development plan::development plan
plan intended::plan intended
avoid debugging::avoid debugging
final version::final version
handles circumstances::handles circumstances
error chapter::error chapter
multiple assignment::multiple assignment
assignment makes::assignment makes
first print::first print
statement suppresses::statement suppresses
assignment operation::assignment operation
longer equal::longer equal
avoid confusion::avoid confusion
variables change::variables change
code difficult::code difficult
statement computers::statement computers
repetitive tasks::repetitive tasks
tasks repeating::tasks repeating
similar tasks::similar tasks
making errors::making errors
perform repetition::perform repetition
first feature::first feature
word blastoff::word blastoff
continue execution::continue execution
body consists::body consists
step loops::step loops
top notice::top notice
loop terminates::loop terminates
infinite loop::infinite loop
endless source::endless source
def sequence::def sequence
condition false::condition false
program outputs::program outputs
starting value::starting value
argument passed::argument passed
resulting sequence::resulting sequence
program terminates::program terminates
prove termination::prove termination
interesting question::interesting question
positive values::positive values
function nlines::function nlines
things loops::things loops
tabular data::tabular data
calculate logarithms::calculate logarithms
mathematics books::mathematics books
books contained::books contained
long tables::long tables
tables listing::tables listing
computers appeared::computers appeared
initial reactions::initial reactions
approximate answer::approximate answer
perform computations::perform computations
underlying tables::underlying tables
intel pentium::intel pentium
log table::log table
left column::left column
right column::right column
tab character::tab character
invisible marker::invisible marker
character shifts::character shifts
tab stops::tab stops
stops tabs::stops tabs
making columns::making columns
text line::text line
previous program::previous program
log function::log function
find logarithms::find logarithms
logarithms base::logarithms base
round numbers::round numbers
arithmetic sequence::arithmetic sequence
geometric sequence::geometric sequence
tab characters::tab characters
first column::first column
column logarithm::column logarithm
logarithm tables::logarithm tables
backslash character::backslash character
escape sequence::escape sequence
sequence escape::sequence escape
escape sequences::escape sequences
invisible characters::invisible characters
tab escape::tab escape
single string::single string
two-dimensional tables::two-dimensional tables
two-dimensional table::two-dimensional table
multiplication table::multiplication table
line initializes::line initializes
loop variable::loop variable
loop executes::loop executes
loop completes::loop completes
statement starts::statement starts
generalization encapsulation::generalization encapsulation
things functions::things functions
generalization means::generalization means
function encapsulates::function encapsulates
previous loop::previous loop
print multiples::print multiples
def printmultiples::def printmultiples
parameter list::parameter list
calling printmultiples::calling printmultiples
inside printmultiples::inside printmultiples
demonstrate encapsulation::demonstrate encapsulation
common development::common development
develop code::develop code
writing lines::writing lines
code working::code working
approach lets::approach lets
printmulttable doesn::printmulttable doesn
variables created::variables created
created inside::created inside
home function::home function
multiple variables::multiple variables
program shows::program shows
printmulttable printmultiples::printmulttable printmultiples
printmulttable calls::printmulttable calls
calls printmultiples::calls printmultiples
current value::current value
loop variables::loop variables
program harder::program harder
six-by-six table::six-by-six table
parameter high::parameter high
function heading::function heading
program generates::program generates
seven-by-seven table::seven-by-seven table
save ink::save ink
printmulttable change::printmulttable change
change printmultiples::change printmultiples
program easier::program easier
iteration dividing::iteration dividing
long program::long program
separate parts::separate parts
functions facilitate::functions facilitate
well-designed functions::well-designed functions
glossary multiple::glossary multiple
program iteration::program iteration
repeated execution::repeated execution
loop loop::loop loop
terminating condition::terminating condition
satisfied infinite::satisfied infinite
satisfied body::satisfied body
loop tab::loop tab
special character::special character
tab stop::tab stop
current line::current line
line cursor::line cursor
printed escape::printed escape
escape character::escape character
printable characters::printable characters
nonprintable character::nonprintable character
character encapsulate::character encapsulate
large complex::large complex
complex program::complex program
constant value::constant value
generalization makes::generalization makes
makes code::makes code
write development::write development
development based::development based
specific things::specific things
generalizing chapter::generalizing chapter
compound data::compound data
data type::data type
string strings::string strings
smaller pieces::smaller pieces
pieces characters::pieces characters
characters types::characters types
data types::data types
types depending::types depending
single thing::single thing
bracket operator::bracket operator
operator selects::operator selects
single character::single character
print letter::print letter
expression fruit::expression fruit
character number::character number
variable letter::variable letter
letter refers::letter refers
display letter::display letter
first letter::first letter
0th letter::0th letter
1th letter::1th letter
index specifies::index specifies
ordered set::ordered set
len function::len function
function returns::function returns
last letter::last letter
error indexerror::error indexerror
string index::string index
6th letter::6th letter
last character::last character
negative indices::negative indices
count backward::count backward
computations involve::computations involve
letter index::letter index
loop traverses::loop traverses
loop condition::loop condition
character accessed::character accessed
index len::index len
letters backward::letters backward
simpler syntax::simpler syntax
print char::print char
variable char::variable char
loop continues::loop continues
abecedarian series::abecedarian series
series abecedarian::series abecedarian
abecedarian refers::abecedarian refers
alphabetical order::alphabetical order
robert mccloskey::robert mccloskey
book make::book make
loop outputs::loop outputs
jklmnopq suffix::jklmnopq suffix
jack kack::jack kack
kack lack::kack lack
lack mack::lack mack
mack nack::mack nack
nack oack::nack oack
oack pack::oack pack
pack qack::pack qack
string slices::string slices
slice selecting::slice selecting
n-eth character::n-eth character
m-eth character::m-eth character
indices pointing::indices pointing
first index::first index
slice starts::slice starts
string comparison::string comparison
operators work::operators work
comparison operations::comparison operations
putting words::putting words
elif word::elif word
lowercase letters::lowercase letters
convert strings::convert strings
standard format::standard format
difficult problem::difficult problem
program realize::program realize
left side::left side
print greeting::print greeting
output jello::output jello
code produces::code produces
error typeerror::error typeerror
object doesn::object doesn
support item::support item
item assignment::item assignment
assignment strings::assignment strings
existing string::existing string
print newgreeting::print newgreeting
original string::original string
find function::find function
def find::def find
return index::return index
index index::index index
character appears::character appears
loop prematurely::loop prematurely
character doesn::character doesn
program exits::program exits
eureka traversal::eureka traversal
cry eureka::cry eureka
program counts::program counts
banana count::banana count
print count::print count
variable count::variable count
string module::string module
loop exits::loop exits
named countletters::named countletters
three-parameter version::three-parameter version
manipulate strings::manipulate strings
import string::import string
module includes::module includes
named find::named find
print index::print index
avoid collisions::avoid collisions
find substrings::find substrings
additional argument::additional argument
additional arguments::additional arguments
search fails::search fails
index range::index range
character classification::character classification
string string.lowercase::string string.lowercase
system considers::system considers
print string.lowercase::print string.lowercase
print string.uppercase::print string.uppercase
print string.digits::print string.digits
classify characters::classify characters
def islower::def islower
lowercase letter::lowercase letter
constant defined::constant defined
print string.whitespace::print string.whitespace
string.whitespace whitespace::string.whitespace whitespace
whitespace characters::whitespace characters
characters move::characters move
white space::white space
visible characters::visible characters
white paper::white paper
constant string.whitespace::constant string.whitespace
including space::including space
book isn::book isn
reference manual::reference manual
python library::python library
library reference::library reference
python website::python website
glossary compound::glossary compound
values traverse::values traverse
similar operation::similar operation
string slice::string slice
values counter::values counter
incremented increment::incremented increment
strings chapter::strings chapter
elements lists::elements lists
ordered sets::ordered sets
type lists::type lists
list values::list values
square brackets::square brackets
list don::list don
mirabile dictu::mirabile dictu
nested lists::nested lists
consecutive integers::consecutive integers
range function::range function
successive values::successive values
step size::step size
special list::special list
empty list::empty list
create lists::create lists
assign list::assign list
pass lists::pass lists
print vocabulary::print vocabulary
accessing elements::accessing elements
expression inside::expression inside
brackets specifies::brackets specifies
index remember::index remember
indices start::indices start
print numbers::print numbers
one-eth element::one-eth element
sequence index::sequence index
list length::list length
list assignment::list assignment
assignment index::assignment index
negative value::negative value
counts backward::counts backward
list index::list index
range numbers::range numbers
last element::last element
index horsemen::index horsemen
print horsemen::print horsemen
loop counts::loop counts
condition fails::condition fails
i-eth element::i-eth element
list traversal::list traversal
function len::function len
len returns::len returns
upper bound::upper bound
program changing::program changing
size list::size list
lists horsemen::lists horsemen
legal index::legal index
nested list::nested list
single element::single element
previous list::previous list
list membership::list membership
boolean operator::boolean operator
tests membership::tests membership
horsemen false::horsemen false
horsemen list::horsemen list
operator returns::operator returns
returns false::returns false
generalized syntax::generalized syntax
list operations::list operations
loop written::loop written
print horseman::print horseman
list expression::list expression
expresses enthusiasm::expresses enthusiasm
operator concatenates::operator concatenates
concatenates lists::concatenates lists
operator repeats::operator repeats
list slices::list slices
slice operations::slice operations
unlike strings::unlike strings
slice operator::slice operator
list deletion::list deletion
print list::print list
remove elements::remove elements
add elements::add elements
empty slice::empty slice
desired location::desired location
delete list::delete list
list elements::list elements
error-prone python::error-prone python
readable del::readable del
del removes::del removes
del list::del list
slices select::slices select
letters banana::letters banana
banana banana::banana banana
lists behave::lists behave
behave differently::behave differently
alias affect::alias affect
avoid aliasing::avoid aliasing
mutable objects::mutable objects
immutable objects::immutable objects
alias strings::alias strings
cloning lists::cloning lists
word copy::word copy
list parameters::list parameters
parameters passing::parameters passing
function head::function head
head takes::head takes
first element::first element
def head::def head
return list::return list
variable numbers::variable numbers
__main__ numbers::__main__ numbers
numbers head::numbers head
list object::list object
function modifies::function modifies
list parameter::list parameter
caller sees::caller sees
deletehead removes::deletehead removes
def deletehead::def deletehead
tail returns::tail returns
def tail::def tail
print rest::print rest
list creating::list creating
creating rest::creating rest
three-eth element::three-eth element
bracket operators::bracket operators
operators evaluate::operators evaluate
threeeth element::threeeth element
matrices nested::matrices nested
represent matrices::represent matrices
entire row::entire row
double-index form::double-index form
index selects::index selects
representing matrices::representing matrices
small variation::small variation
radical alternative::radical alternative
module involve::module involve
involve lists::involve lists
split function::split function
function breaks::function breaks
word boundary::word boundary
optional argument::optional argument
word boundaries::word boundaries
delimiter doesn::delimiter doesn
join function::join function
join takes::join takes
optional delimiter::optional delimiter
glossary list::glossary list
named collection::named collection
list element::list element
selects elements::selects elements
list sequence::list sequence
element identified::element identified
index nested::index nested
list list::list list
sequential accessing::sequential accessing
object clone::object clone
existing object::existing object
object copying::object copying
object creates::object creates
object delimiter::object delimiter
split chapter::split chapter
compound types::compound types
enclose tuples::enclose tuples
python treats::python treats
tuples syntax::tuples syntax
syntax issues::syntax issues
index operator::index operator
tuple assignment::tuple assignment
conventional assignment::conventional assignment
temporary variable::temporary variable
cumbersome python::cumbersome python
right side::right side
respective variable::respective variable
feature makes::feature makes
makes tuple::makes tuple
unpack tuple::unpack tuple
wrong size::wrong size
values functions::values functions
return tuples::return tuples
def swap::def swap
great advantage::great advantage
making swap::making swap
encapsulate swap::encapsulate swap
tempting mistake::tempting mistake
incorrect version::incorrect version
value changing::value changing
inside swap::inside swap
swap makes::swap makes
function runs::function runs
random numbers::random numbers
deterministic determinism::deterministic determinism
unpredictable games::unpredictable games
tuples making::tuples making
nondeterministic turns::nondeterministic turns
generate random::generate random
program python::program python
generates pseudorandom::generates pseudorandom
pseudorandom numbers::pseudorandom numbers
mathematical sense::mathematical sense
random module::random module
floatingpoint number::floatingpoint number
call random::call random
long series::long series
import random::import random
random number::random number
additional exercise::additional exercise
random integer::random integer
end points::end points
random values::random values
values randomlist::values randomlist
randomlist takes::randomlist takes
integer argument::integer argument
complete list::complete list
def randomlist::def randomlist
start small::start small
numbers generated::numbers generated
equal-sized buckets::equal-sized buckets
random value::random value
value falls::value falls
good approach::good approach
computational pattern::computational pattern
sounds familiar::sounds familiar
letter appeared::letter appeared
current problem::current problem
original program::original program
replace fruit::replace fruit
finding letters::finding letters
tuples count::tuples count
last step::last step
high def::high def
def inbucket::def inbucket
return count::return count
existing program::existing program
pattern matching::pattern matching
buckets increases::buckets increases
cumbersome bucket1::cumbersome bucket1
problem first::problem first
bucketwidth print::bucketwidth print
low end::low end
bucket width::bucket width
high end::high end
entire range::entire range
first problem::first problem
bucket list::bucket list
call inbucket::call inbucket
numbuckets bucketwidth::numbuckets bucketwidth
bucketwidth buckets::bucketwidth buckets
print buckets::print buckets
number generator::number generator
longer lists::longer lists
single-pass solution::single-pass solution
program works::program works
calls inbucket::calls inbucket
entire list::entire list
single pass::single pass
previous section::previous section
lower bound::lower bound
previous problem::previous problem
lower integer::lower integer
bucket index::bucket index
glossary immutable::glossary immutable
immutable type::immutable type
modified assignments::modified assignments
immutable types::immutable types
mutable type::mutable type
mutable types::mutable types
types lists::types lists
mutable data::mutable data
sequence type::sequence type
immutable tuples::immutable tuples
dictionary tuple::dictionary tuple
single assignment::single assignment
statement tuple::statement tuple
assignment occurs::assignment occurs
swapping values::swapping values
deterministic computation::deterministic computation
computation histogram::computation histogram
element counts::element counts
familiar computational::familiar computational
similar problem::similar problem
tuples chapter::tuples chapter
error dictionaries::error dictionaries
empty dictionary::empty dictionary
first assignment::first assignment
assignment creates::assignment creates
named eng2sp::named eng2sp
assignments add::assignments add
print eng2sp::print eng2sp
value separated::value separated
key-value pairs::key-value pairs
previous output::previous output
integer indices::integer indices
value dos::value dos
keyvalue pair::keyvalue pair
dictionary operations::dictionary operations
del statement::del statement
statement removes::statement removes
key-value pair::key-value pair
print inventory::print inventory
del inventory::del inventory
dictionary methods::dictionary methods
takes arguments::takes arguments
keys method::keys method
method takes::method takes
function syntax::function syntax
syntax keys::syntax keys
method syntax::method syntax
syntax eng2sp.keys::syntax eng2sp.keys
notation specifies::notation specifies
method call::method call
invoking keys::invoking keys
object eng2sp::object eng2sp
values method::values method
items method::items method
method returns::method returns
type information::type information
key takes::key takes
key appears::key appears
copy method::copy method
copy refers::copy refers
fresh copy::fresh copy
sparse matrices::sparse matrices
good choice::good choice
sparse matrix::sparse matrix
list representation::list representation
column numbers::column numbers
dictionary representation::dictionary representation
nonzero element::nonzero element
method solves::method solves
first argument::first argument
matrix shame::matrix shame
fibonacci function::fibonacci function
roughly forever::roughly forever
call graph::call graph
graph shows::graph shows
set function::set function
function frames::function frames
lines connecting::lines connecting
calls fibonacci::calls fibonacci
times fibonacci::times fibonacci
inefficient solution::inefficient solution
good solution::good solution
computed value::computed value
newvalue return::newvalue return
return newvalue::return newvalue
fibonacci numbers::fibonacci numbers
long integers::long integers
compute fibonacci::compute fibonacci
python integer::python integer
integer python::integer python
long integer::long integer
integers python::integers python
size integer::size integer
long value::long value
long function::long function
numerical type::numerical type
math operations::math operations
operations work::operations work
python detects::python detects
first case::first case
counting letters::counting letters
general version::general version
letter appears::letter appears
text file::text file
shorter codes::shorter codes
common letters::common letters
longer codes::longer codes
frequently dictionaries::frequently dictionaries
dictionaries provide::dictionaries provide
current count::current count
sort methods::sort methods
print letteritems::print letteritems
first method::first method
list methods::list methods
including append::including append
reverse consult::reverse consult
python documentation::python documentation
glossary dictionary::glossary dictionary
type key::type key
dictionary method::dictionary method
object invoke::object invoke
method hint::method hint
temporary storage::temporary storage
precomputed value::precomputed value
redundant computation::redundant computation
numerical result::numerical result
numerical format::numerical format
dictionaries chapter::dictionaries chapter
program ends::program ends
computer shuts::computer shuts
memory disappears::memory disappears
store data::store data
file files::file files
hard drive::hard drive
floppy drive::floppy drive
large number::large number
writing files::writing files
exchange information::exchange information
generate printable::generate printable
printable formats::printable formats
pdf working::pdf working
natural order::natural order
write opening::write opening
file creates::file creates
file object::file object
open function::open function
mode mode::mode mode
put data::put data
write method::write method
file tells::file tells
mode argument::mode argument
read method::read method
method reads::method reads
reads data::reads data
entire contents::entire contents
print text::print text
timeto close::timeto close
strings read::strings read
read returns::read returns
remaining characters::remaining characters
empty string::empty string
text files::text files
function copies::function copies
fifty characters::fifty characters
original file::original file
break statement::break statement
execution moves::execution moves
value true::value true
lines separated::lines separated
newline characters::newline characters
process text::process text
job easy::job easy
text separated::text separated
readline method::readline method
print f.readline::print f.readline
exceptions readlines::exceptions readlines
readlines returns::readlines returns
print f.readlines::print f.readlines
list format::list format
readline returns::readline returns
line-processing program::line-processing program
program filterfile::program filterfile
filterfile makes::filterfile makes
continue statement::continue statement
current iteration::current iteration
continues looping::continues looping
first character::first character
hash mark::hash mark
conditions fail::conditions fail
writing variables::writing variables
strings first::strings first
format operator::format operator
format string::format string
format sequence::format sequence
first expression::first expression
floating-point format::floating-point format
format prints::format prints
decimal places::decimal places
format sequences::format sequences
dollars typeerror::dollars typeerror
illegal argument::illegal argument
argument type::argument type
built-in operation::built-in operation
wrong type::wrong type
minimum number::minimum number
fewer digits::fewer digits
leading spaces::leading spaces
trailing spaces::trailing spaces
result takes::result takes
twelve spaces::twelve spaces
printing dollar::printing dollar
dollar amounts::dollar amounts
decimal points::decimal points
points aligned::points aligned
student names::student names
hourly wages::hourly wages
formatted report::formatted report
def report::def report
small dictionary::small dictionary
twenty-one characters::twenty-one characters
current directory::current directory
named words::named words
directory named::directory named
named dict::named dict
top-level directory::top-level directory
danish university::danish university
put values::put values
original type::original type
value ends::value ends
preserves data::preserves data
data structures::data structures
pickle module::pickle module
import pickle::import pickle
data structure::data structure
dump method::dump method
nonexistent list::nonexistent list
list item::list item
nonexistent file::nonexistent file
file doesn::file doesn
statement executes::statement executes
first block::first block
exceptions occur::exceptions occur
type ioerror::type ioerror
ioerror occurs::ioerror occurs
exists takes::exists takes
file exists::file exists
def exists::def exists
python reference::python reference
program detects::program detects
valid input::valid input
def inputnumber::def inputnumber
raise valueerror::raise valueerror
bad number::bad number
number return::number return
raise statement::raise statement
exception type::exception type
specific information::specific information
error valueerror::error valueerror
exception types::exception types
types python::types python
examples include::examples include
include typeerror::include typeerror
inputnumber handles::inputnumber handles
message includes::message includes
additional information::additional information
valueerror exception::valueerror exception
glossary file::glossary file
named entity::named entity
floppy disk::floppy disk
characters directory::characters directory
folder path::folder path
directory names::directory names
exact location::exact location
file text::file text
characters organized::characters organized
characters break::characters break
loop continue::loop continue
operator takes::operator takes
format values::format values
values format::values format
characters beginning::characters beginning
value pickle::value pickle
data value::data value
runtime handle::runtime handle
statements raise::statements raise
exceptions chapter::exceptions chapter
user-defined compound::user-defined compound
built-in types::built-in types
userdefined type::userdefined type
mathematical point::mathematical point
single object::single object
compound object::compound object
dirty solution::dirty solution
compound type::compound type
approach involves::approach involves
class definition::class definition
class point::class point
pass class::pass class
class definitions::class definitions
import statements::import statements
class defi::class defi-
defi nition::defi- nition
definition creates::definition creates
point class::point class
objects creating::objects creating
point object::point object
variable blank::variable blank
data item::data item
named items::named items
blank refers::blank refers
attribute refers::attribute refers
expression blank.x::expression blank.x
blank.x means::blank.x means
object blank::object blank
blank.x blank.x::blank.x blank.x
blank.y blank.y::blank.y blank.y
line outputs::line outputs
line calculates::line calculates
print blank::print blank
identifier translate::identifier translate
hexadecimal form::hexadecimal form
def printpoint::def printpoint
printpoint takes::printpoint takes
similar ambiguity::similar ambiguity
shallow equality::shallow equality
objects deep::objects deep
deep equality::deep equality
def samepoint::def samepoint
selbe mutter::selbe mutter
opposing corners::opposing corners
conventional choice::conventional choice
upper-left corner::upper-left corner
class rectangle::class rectangle
code creates::code creates
rectangle object::rectangle object
floating-point attributes::floating-point attributes
dot operator::dot operator
operator composes::operator composes
expression box.corner.x::expression box.corner.x
box.corner.x means::box.corner.x means
object box::object box
box refers::box refers
attribute named::attribute named
named corner::named corner
width height::width height
return instances::return instances
findcenter takes::findcenter takes
def findcenter::def findcenter
pass box::pass box
def growrect::def growrect
variables dwidth::variables dwidth
direction invoking::direction invoking
rectangle named::rectangle named
named bob::named bob
parameter box::parameter box
affect bob::affect bob
named moverect::named moverect
parameters named::parameters named
copying aliasing::copying aliasing
unexpected effects::unexpected effects
copy module::copy module
import copy::import copy
simple object::simple object
embedded objects::embedded objects
shallow copying::shallow copying
copy doesn::copy doesn
single point::single point
resulting state::resulting state
height corner::height corner
invoking growrect::invoking growrect
invoking moverect::invoking moverect
method named::method named
named deepcopy::named deepcopy
deep copy::deep copy
separate objects::separate objects
copy newbox::copy newbox
dheight return::dheight return
return newbox::return newbox
rewrite moverect::rewrite moverect
glossary class::glossary class
class instance::class instance
class object::class object
real world::real world
world constructor::world constructor
objects attribute::objects attribute
named data::named data
data items::data items
instance shallow::instance shallow
object deep::object deep
value shallow::value shallow
shallow copy::shallow copy
copy function::copy function
module deep::module deep
objects embedded::objects embedded
deepcopy function::deepcopy function
objects chapter::objects chapter
user-defined type::user-defined type
assign attributes::assign attributes
hours minutes::hours minutes
minutes seconds::minutes seconds
function printtime::function printtime
form hours::form hours
boolean function::boolean function
pure functions::pure functions
rough version::rough version
def addtime::def addtime
t2.hours sum.minutes::t2.hours sum.minutes
t2.minutes sum.seconds::t2.minutes sum.seconds
t2.seconds return::t2.seconds return
return sum::return sum
function creates::function creates
pure function::pure function
objects passed::objects passed
side effects::side effects
user input::user input
make bread::make bread
writing printtime::writing printtime
minutes adds::minutes adds
extra seconds::extra seconds
minutes column::minutes column
extra minutes::extra minutes
hours column::hours column
corrected version::corrected version
alternative approach::alternative approach
shorter code::shorter code
function makes::function makes
caller functions::caller functions
modifiers increment::modifiers increment
rough draft::rough draft
def increment::def increment
line performs::line performs
basic operation::basic operation
remainder deals::remainder deals
special cases::special cases
function correct::function correct
parameter seconds::parameter seconds
efficient solution::efficient solution
rewrite increment::rewrite increment
write function::write function
functional programs::functional programs
prototype development::prototype development
development versus::development versus
write pure::write pure
compelling advantage::compelling advantage
functional programming::functional programming
programming style::programming style
call prototype::call prototype
basic calculation::basic calculation
correcting flaws::correcting flaws
planned development::planned development
three-digit number::three-digit number
minute component::minute component
sixties column::sixties column
hour component::hour component
thirty-six hundreds::thirty-six hundreds
hundreds column::hundreds column
doing addition::doing addition
observation suggests::observation suggests
single number::single number
def converttoseconds::def converttoseconds
t.minutes seconds::t.minutes seconds
t.seconds return::t.seconds return
return seconds::return seconds
def maketime::def maketime
correct assuming::correct assuming
rewrite addtime::rewrite addtime
return maketime::return maketime
times base::times base
base conversion::base conversion
treat times::treat times
add features::add features
imagine subtracting::imagine subtracting
implement subtraction::implement subtraction
problem harder::problem harder
fewer special::fewer special
fewer opportunities::fewer opportunities
general solution::general solution
specific solution::specific solution
single problem::single problem
single-digit numbers::single-digit numbers
specific solutions::specific solutions
first digit::first digit
single-digit number::single-digit number
long division::long division
carry out::carry out
mechanical processes::mechanical processes
simple set::simple set
humans spend::humans spend
school learning::school learning
execute algorithms::execute algorithms
designing algorithms::designing algorithms
central part::central part
call programming::call programming
conscious thought::conscious thought
express algorithmically::express algorithmically
algorithmically understanding::algorithmically understanding
glossary pure::glossary pure
program design::program design
pure prototype::pure prototype
developing programs::developing programs
programs starting::programs starting
high-level insight::high-level insight
development algorithm::development algorithm
unintelligent process::unintelligent process
object-oriented features::object-oriented features
features python::features python
object-oriented programming::object-oriented programming
object definitions::object definitions
object definition::object definition
definition corresponds::definition corresponds
object correspond::object correspond
real-world objects::real-world objects
objects interact::objects interact
class defined::class defined
people record::people record
defined correspond::defined correspond
things people::things people
rectangle classes::rectangle classes
classes correspond::classes correspond
mathematical concepts::mathematical concepts
obvious connection::obvious connection
class methods::class methods
method explicit::method explicit
class named::class named
named printtime::named printtime
pass def::pass def
def printtime::def printtime
print str::print str
definition inside::definition inside
definition notice::definition notice
invoke printtime::invoke printtime
invoked appears::invoked appears
method appears::method appears
first parameter::first parameter
case currenttime::case currenttime
active agent::active agent
active agents::active agents
shifting responsibility::shifting responsibility
objects makes::objects makes
versatile functions::versatile functions
reuse code::reuse code
convert increment::convert increment
save space::save space
defined methods::defined methods
previous method::previous method
method definitions::method definitions
method definition::method definition
invoke increment::invoke increment
method currenttime.increment::method currenttime.increment
convert converttoseconds::convert converttoseconds
optional arguments::optional arguments
variable number::variable number
argument lists::argument lists
original version::original version
improved version::improved version
default value::default value
fourth parameter::fourth parameter
bit tricky::bit tricky
default values::default values
str doesn::str doesn
initialization method::initialization method
special method::special method
underscore characters::underscore characters
def __init__::def __init__
hours self.minutes::hours self.minutes
minutes self.seconds::minutes self.seconds
attribute self.hours::attribute self.hours
parameter hours::parameter hours
hours dot::hours dot
points revisited::points revisited
make assignments::make assignments
object-oriented style::object-oriented style
def __str__::def __str__
optional parameters::optional parameters
string representation::string representation
named str::named str
default behavior::default behavior
python built-in::python built-in
built-in str::built-in str
invokes str::invokes str
defining str::defining str
writing init::writing init
instantiate objects::instantiate objects
operator overloading::operator overloading
languages make::languages make
built-in operators::built-in operators
user-defined types::user-defined types
mathematical types::mathematical types
addition operator::addition operator
named add::named add
def __add__::def __add__
return point::return point
point objects::point objects
python invokes::python invokes
method sub::method sub
subtraction operator::subtraction operator
multiplication operator::multiplication operator
named mul::named mul
left operand::left operand
dot product::dot product
linear algebra::linear algebra
def __mul__::def __mul__
return self.x::return self.x
self.x other.x::self.x other.x
self.y other.y::self.y other.y
primitive type::primitive type
right operand::right operand
performs scalar::performs scalar
scalar multiplication::scalar multiplication
def __rmul__::def __rmul__
original coordinates::original coordinates
argument inside::argument inside
inside mul::inside mul
int object::int object
bit opaque::bit opaque
specific type::specific type
write methods::write methods
arithmetic operations::arithmetic operations
previous sections::previous sections
types support::types support
multadd operation::multadd operation
def multadd::def multadd
numeric values::numeric values
print multadd::print multadd
product yields::product yields
method frontandback::method frontandback
def frontandback::def frontandback
reverse method::reverse method
method doesn::method doesn
applies frontandback::applies frontandback
fundamental rule::fundamental rule
operations inside::operations inside
method include::method include
include copy::include copy
print copy::print copy
copy works::copy works
str method::str method
def reverse::def reverse
pass points::pass points
unintentional kind::unintentional kind
glossary object-oriented::glossary object-oriented
object-oriented language::object-oriented language
userdefined classes::userdefined classes
facilitate object-oriented::facilitate object-oriented
methods method::methods method
class override::class override
default examples::default examples
include replacing::include replacing
default method::default method
methods operator::methods operator
print card1::print card1
card1 jack::card1 jack
diamonds class::diamonds class
class attributes::class attributes
card objects::card objects
card object::card object
print card2::print card2
class attribute::class attribute
swirly whales::swirly whales
modify class::modify class
comparing cards::comparing cards
primitive types::primitive types
conditional operators::conditional operators
compare values::compare values
named cmp::named cmp
first object::first object
floatingpoint numbers::floatingpoint numbers
completely ordered::completely ordered
compare apples::compare apples
playing cards::playing cards
compare cards::compare cards
higher rank::higher rank
higher suit::higher suit
make cards::make cards
write cmp::write cmp
def __cmp__::def __cmp__
check ranks::check ranks
tie return::tie return
modify cmp::modify cmp
represent cards::represent cards
logical step::logical step
deck object::deck object
deck class::deck class
method creates::method creates
attribute cards::attribute cards
standard set::standard set
class deck::class deck
nested loop::nested loop
outer loop::outer loop
loop enumerates::loop enumerates
loop iterates::loop iterates
thirteen times::thirteen times
iteration creates::iteration creates
current suit::current suit
cards list::cards list
append method::append method
method works::method works
objects class::objects class
def printdeck::def printdeck
print card::print card
previous card::previous card
traversing self.cards::traversing self.cards
string multiplication::string multiplication
function passing::function passing
loop ends::loop ends
complete string::complete string
print deck::print deck
deck ace::deck ace
clubs jack::clubs jack
clubs king::clubs king
clubs ace::clubs ace
result appears::result appears
long string::long string
randrange function::randrange function
integer arguments::integer arguments
randrange chooses::randrange chooses
expression chooses::expression chooses
random card::random card
def shuffle::def shuffle
random ncards::random ncards
actual length::actual length
current card::current card
selected card::selected card
sequence assignment::sequence assignment
dealing cards::dealing cards
def removecard::def removecard
cmp method::cmp method
determine equality::determine equality
card class::card class
class checks::class checks
removecard method::removecard method
method checks::method checks
deal cards::deal cards
top card::top card
list method::list method
method pop::method pop
def popcard::def popcard
return self.cards.pop::return self.cards.pop
pop removes::pop removes
last card::last card
effect dealing::effect dealing
function isempty::function isempty
def isempty::def isempty
glossary encode::glossary encode
method class::method class
class accumulator::class accumulator
running sum::running sum
language feature::language feature
inheritance inheritance::inheritance inheritance
modified version::modified version
existing class::existing class
primary advantage::primary advantage
class inherits::class inherits
class extending::class extending
parent class::parent class
child class::child class
subclass inheritance::subclass inheritance
powerful feature::powerful feature
facilitate code::facilitate code
code reuse::code reuse
parent classes::parent classes
inheritance structure::inheritance structure
structure reflects::structure reflects
natural structure::natural structure
make programs::make programs
relevant code::relevant code
card game::card game
write code::write code
card games::card games
require operations::require operations
removing cards::removing cards
deck depending::deck depending
make sense::make sense
situation suggests::situation suggests
class appears::class appears
class hand::class hand
hand class::hand class
existing deck::existing deck
hand constructor::hand constructor
constructor initializes::constructor initializes
optional parameter::optional parameter
value cards::value cards
remove cards::remove cards
deck removing::deck removing
hand inherits::hand inherits
inherits removecard::inherits removecard
write addcard::write addcard
def addcard::def addcard
list append::list append
method adds::method adds
single deck::single deck
deck deal::deck deal
entire deck::entire deck
hand deal::hand deal
deal takes::deal takes
method deals::method deals
def deal::def deal
cards card::cards card
card hand::card hand
last item::last item
round robin::round robin
nhands wraps::nhands wraps
str methods::str methods
methods inherited::methods inherited
print hand::print hand
hand hand::hand hand
hand frank::hand frank
spades ace::spades ace
great hand::great hand
straight flush::straight flush
existing methods::existing methods
hand object::hand object
program appends::program appends
current hand::current hand
deck method::deck method
deck hand::deck hand
hand objects::hand objects
deck objects::deck objects
cardgame class::cardgame class
class takes::class takes
takes care::takes care
basic chores::basic chores
class cardgame::class cardgame
method performs::method performs
significant computation::significant computation
initializing attributes::initializing attributes
specific games::specific games
matching cards::matching cards
clubs matches::clubs matches
hearts matches::hearts matches
fifty-one remaining::fifty-one remaining
remaining cards::remaining cards
players match::players match
play begins::play begins
player picks::player picks
closest neighbor::closest neighbor
chosen card::chosen card
card matches::card matches
computer simulation::computer simulation
computer plays::computer plays
real game::real game
oldmaidhand class::oldmaidhand class
maid requires::maid requires
general abilities::general abilities
additional method::additional method
inheritance class::inheritance class
class oldmaidhand::class oldmaidhand
def removematches::def removematches
traversal python::traversal python
matching card::matching card
match card::match card
card.suit turns::card.suit turns
opposite operations::opposite operations
oldmaidgame class::oldmaidgame class
spades matches::spades matches
clubs hand::clubs hand
diamonds matches::diamonds matches
diamonds notice::diamonds notice
init method::init method
oldmaidgame object::oldmaidgame object
shuffled deck::shuffled deck
class oldmaidgame::class oldmaidgame
def play::def play
player self.hands::player self.hands
dealt self.printhands::dealt self.printhands
initial matches::initial matches
matches matches::matches matches
matches discarded::matches discarded
begins self.printhands::begins self.printhands
matched turn::matched turn
numhands print::numhands print
methods removeallmatches::methods removeallmatches
removeallmatches traverses::removeallmatches traverses
invokes removematches::invokes removematches
def removeallmatches::def removeallmatches
write printhands::write printhands
traverses self.hands::traverses self.hands
hand count::hand count
matches reaches::matches reaches
fifty cards::fifty cards
variable turn::variable turn
reaches numhands::reaches numhands
operator wraps::operator wraps
method playoneturn::method playoneturn
playoneturn takes::playoneturn takes
matches made::matches made
def playoneturn::def playoneturn
pickedcard count::pickedcard count
turn consists::turn consists
first player::first player
method findneighbor::method findneighbor
findneighbor starts::findneighbor starts
def findneighbor::def findneighbor
return neighbor::return neighbor
finding cards::finding cards
printhands method::printhands method
truncated form::truncated form
top fifteen::top fifteen
fifteen cards::fifteen cards
small deck::small deck
play stops::play stops
import cards::import cards
dealt hand::dealt hand
hand allen::hand allen
hearts jack::hearts jack
spades king::spades king
diamonds hand::diamonds hand
hand jeff::hand jeff
spades jack::spades jack
hearts king::hearts king
hand chris::hand chris
diamonds king::diamonds king
matches queen::matches queen
begins hand::begins hand
allen picked::allen picked
matches king::matches king
jeff picked::jeff picked
hearts hand::hearts hand
chris picked::chris picked
picked jack::picked jack
picked queen::picked queen
spades hand::spades hand
matches jack::matches jack
empty hand::empty hand
jeff loses::jeff loses
glossary inheritance::glossary inheritance
defined class::defined class
class parent::class parent
inherits child::inherits child
class created::class created
inheritance chapter::inheritance chapter
linked lists::linked lists
embedded references::embedded references
common data::common data
linked list::linked list
takes advantage::takes advantage
feature linked::feature linked
recursive data::recursive data
cargo object::cargo object
structures lend::structures lend
recursive methods::recursive methods
node class::node class
basic mechanism::basic mechanism
lists class::lists class
class node::class node
return str::return str
print node::print node
node test::node test
first node::first node
node1 cargo::node1 cargo
node2 cargo::node2 cargo
create nodes::create nodes
collections lists::collections lists
assemble multiple::assemble multiple
multiple objects::multiple objects
single entity::single entity
list serves::list serves
function printlist::function printlist
printlist takes::printlist takes
single node::single node
argument starting::argument starting
def printlist::def printlist
node.next print::node.next print
inside printlist::inside printlist
node takes::node takes
lists node1::lists node1
modify printlist::modify printlist
generates output::generates output
recursive algorithm::recursive algorithm
list backwards::list backwards
tail backward::tail backward
list backward::list backward
algorithm works::algorithm works
natural base::natural base
def printbackward::def printbackward
return head::return head
list tail::list tail
list.next printbackward::list.next printbackward
print head::print head
line handles::line handles
lines split::lines split
lines print::lines print
infinite lists::infinite lists
invoked printlist::invoked printlist
backward list::backward list
limitation makes::limitation makes
list-manipulating code::list-manipulating code
clean object-oriented::clean object-oriented
function crash::function crash
earlier node::earlier node
loop forever::loop forever
recurse infinitely::recurse infinitely
behavior makes::behavior makes
infinite list::infinite list
repeating fraction::repeating fraction
printbackward terminate::printbackward terminate
hypothetical statement::hypothetical statement
fundamental ambiguity::fundamental ambiguity
ambiguity theorem::ambiguity theorem
variables play::variables play
variable plays::variable plays
additional variables::additional variables
written printbackward::written printbackward
return printbackward::return printbackward
printbackward treats::printbackward treats
print treats::print treats
theorem describes::theorem describes
modifying lists::modifying lists
interesting operations::interesting operations
removed node::removed node
def removesecond::def removesecond
list operation::list operation
printbackward function::printbackward function
separate function::separate function
check functions::check functions
invokes printbackward::invokes printbackward
linkedlist class::linkedlist class
subtle problems::subtle problems
implementing lists::implementing lists
alternative implementation::alternative implementation
node linkedlist::node linkedlist
linkedlist objects::linkedlist objects
objects serve::objects serve
manipulating lists::manipulating lists
node objects::node objects
class linkedlist::class linkedlist
nice thing::nice thing
natural place::natural place
put wrapper::put wrapper
wrapper functions::wrapper functions
self.next tail.printbackward::self.next tail.printbackward
make things::make things
things confusing::things confusing
renamed printbackwardnicely::renamed printbackwardnicely
methods named::methods named
named printbackward::named printbackward
wrapper invokes::wrapper invokes
node object::node object
def addfirst::def addfirst
self.head self.head::self.head self.head
node self.length::node self.length
check code::check code
length value::length value
linkedlist object::linkedlist object
actual number::actual number
list requirements::list requirements
programming practice::programming practice
detect errors::detect errors
incremented length::incremented length
significant stretch::significant stretch
glossary embedded::glossary embedded
embedded reference::embedded reference
reference stored::reference stored
object linked::object linked
linked nodes::linked nodes
nodes node::nodes node
type cargo::type cargo
data contained::data contained
node link::node link
work correctly::work correctly
list node::list node
nodes singleton::nodes singleton
node wrapper::node wrapper
helper method::helper method
method easier::method easier
invoke helper::invoke helper
perform part::perform part
operation invariant::operation invariant
abstract data::abstract data
class represents::class represents
alternative implementations::alternative implementations
implementations well-known::implementations well-known
well-known adts::well-known adts
stack adt::stack adt
standard libraries::standard libraries
adts provide::adts provide
common high-level::common high-level
client code::client code
provider code::provider code
common adt::common adt
multiple elements::multiple elements
include dictionaries::include dictionaries
stack consists::stack consists
empty stack::empty stack
stack push::stack push
stack pop::stack pop
added isempty::added isempty
lifo data::lifo data
item added::item added
implementing stacks::implementing stacks
python lists::python lists
interface isn::interface isn
built-in operations::built-in operations
semantic requirements::semantic requirements
python list::python list
class stack::class stack
def push::def push
def pop::def pop
return self.items.pop::return self.items.pop
stack object::stack object
method sets::method sets
sets items::sets items
push appends::push appends
homonymous1 list::homonymous1 list
isempty compares::isempty compares
compares items::compares items
methods consist::methods consist
simple invocations::simple invocations
real life::real life
thin coating::thin coating
good quality::good quality
quality wood::quality wood
lower quality::lower quality
wood underneath::wood underneath
underneath computer::underneath computer
small piece::small piece
generic data::generic data
print s.pop::print s.pop
items backward::items backward
natural parallel::natural parallel
recursive version::recursive version
stack algorithm::stack algorithm
runtime stack::runtime stack
evaluate postfix::evaluate postfix
mathematical expressions::mathematical expressions
reason postfix::reason postfix
postfix expression::postfix expression
operand left::operand left
previous algorithm::previous algorithm
evaluating postfix::evaluating postfix
individual chunks::individual chunks
split method::split method
regular expression::regular expression
function string.split::function string.split
string.split splits::string.split splits
space character::space character
function re.split::function re.split
resulting list::resulting list
list includes::list includes
empty strings::empty strings
phantom operands::phantom operands
def evalpostfix::def evalpostfix
elif token::elif token
return stack.pop::return stack.pop
first condition::first condition
condition takes::condition takes
handle operators::handle operators
erroneous input::erroneous input
postfix form::postfix form
print evalpostfix::print evalpostfix
fundamental goals::fundamental goals
client assumes::client assumes
write client::write client
glossary abstract::glossary abstract
ways interface::ways interface
adt implementation::adt implementation
interface client::interface client
adt provider::adt provider
adt veneer::adt veneer
simple transformations::simple transformations
significant work::significant work
type infix::type infix
operands postfix::operands postfix
operands parse::operands parse
grammatical structure::grammatical structure
structure token::structure token
language delimiter::language delimiter
separate tokens::separate tokens
stacks chapter::stacks chapter
chapter presents::chapter presents
priority queue::priority queue
customers waiting::customers waiting
first customer::first customer
polite customer::polite customer
queueing policy::queueing policy
general queueing::general queueing
priority queueing::priority queueing
highest priority::highest priority
general policy::general policy
flight leaves::flight leaves
queueing policies::queueing policies
queue adt::queue adt
fifo policy::fifo policy
empty queue::empty queue
queue insert::queue insert
queues remove::queues remove
first implementation::first implementation
linked queue::linked queue
linked node::linked node
class queue::class queue
def insert::def insert
first self.head::first self.head
last node::last node
def remove::def remove
self.head.cargo self.head::self.head.cargo self.head
self.head.next self.length::self.head.next self.length
return cargo::return cargo
methods isempty::methods isempty
linkedlist methods::linkedlist methods
insert method::insert method
set head::set head
performance characteristics::performance characteristics
formed queue::formed queue
queue object::queue object
method preserves::method preserves
collection increases::collection increases
general case::general case
traversal takes::traversal takes
linear function::linear function
queue class::queue class
head length::head length
improvedqueue implementation::improvedqueue implementation
class improvedqueue::class improvedqueue
attribute last::attribute last
remove methods::remove methods
last self.head::last self.head
special case::special case
queue implementation::queue implementation
list compare::list compare
queue lengths::queue lengths
queue remove::queue remove
priority isempty::priority isempty
semantic difference::semantic difference
bowling scores::bowling scores
class priorityqueue::class priorityqueue
return self.items::return self.items
interesting method::interesting method
return item::return item
maxi holds::maxi holds
biggest item::biggest item
program compares::program compares
i-eth item::i-eth item
statement completes::statement completes
simple numbers::simple numbers
lowest python::lowest python
biggest integer::biggest integer
built-in comparison::built-in comparison
object type::object type
compare items::compare items
golfer class::golfer class
unusual definition::unusual definition
defining init::defining init
class golfer::class golfer
score def::score def
neat columns::neat columns
lowest score::lowest score
cmp returns::cmp returns
equal class::equal class
tiger woods::tiger woods
phil mickelson::phil mickelson
hal sutton::hal sutton
list sorted::list sorted
operation compare::operation compare
list implementation::list implementation
glossary queue::glossary queue
objects waiting::objects waiting
kind queue::kind queue
queue queueing::queue queueing
first member::first member
removed priority::removed priority
priority determined::priority determined
external factors::external factors
queue linked::queue linked
list constant::list constant
structure linear::structure linear
structure chapter::structure chapter
common kind::common kind
binary tree::binary tree
right subtrees::right subtrees
list nodes::list nodes
tree nodes::tree nodes
avoid cluttering::avoid cluttering
node tree::node tree
tree refers::tree refers
tree metaphor::tree metaphor
null references::null references
strangest thing::strangest thing
scientists mix::scientists mix
family tree::family tree
top node::top node
children nodes::children nodes
geometric vocabulary::geometric vocabulary
root comprise::root comprise
defined recursively::defined recursively
empty tree::empty tree
object reference::object reference
tree references::tree references
building trees::building trees
constructor invocation::constructor invocation
invocation builds::invocation builds
class tree::class tree
cargo self.left::cargo self.left
nodes left::nodes left
child nodes::child nodes
parent node::parent node
nesting constructor::nesting constructor
constructor invocations::constructor invocations
traversing trees::traversing trees
first question::first question
def total::def total
return total::return total
recursive step::recursive step
step makes::step makes
child trees::child trees
expression trees::expression trees
computation unambiguously::computation unambiguously
infix expression::infix expression
expression tree::expression tree
tree represents::tree represents
cargo cargo::cargo cargo
tree left::tree left
left right::left right
right left::right left
leaf nodes::leaf nodes
operator nodes::operator nodes
addition expression::addition expression
translate expressions::translate expressions
similar trees::similar trees
inside compilers::inside compilers
translate programs::translate programs
tree traversal::tree traversal
def printtree::def printtree
return print::return print
entire left::entire left
left subtree::left subtree
entire right::entire right
right subtree::right subtree
root node::root node
def printtreepostorder::def printtreepostorder
return printtreepostorder::return printtreepostorder
tree inorder::tree inorder
left tree::left tree
right tree::right tree
def printtreeinorder::def printtreeinorder
return printtreeinorder::return printtreeinorder
important complication::important complication
inorder traversal::inorder traversal
recursive traversals::recursive traversals
traversals provide::traversals provide
modify printtreeinorder::modify printtreeinorder
puts parentheses::puts parentheses
output correct::output correct
def printtreeindented::def printtreeindented
return printtreeindented::return printtreeindented
print level::print level
parameter level::parameter level
pass level::pass level
output sideways::output sideways
simplified version::simplified version
original figure::original figure
write handles::write handles
handles expressions::handles expressions
include numbers::include numbers
input string::input string
token list::token list
end token::end token
reading past::reading past
expression string::expression string
expected token::expected token
first token::first token
def gettoken::def gettoken
del tokenlist::del tokenlist
tokenlist refers::tokenlist refers
mutable object::mutable object
handles operands::handles operands
getnumber removes::getnumber removes
leaf node::leaf node
def getnumber::def getnumber
return tree::return tree
test getnumber::test getnumber
print tokenlist::print tokenlist
simple product::simple product
handles simple::handles simple
simple products::simple products
products def::products def
def getproduct::def getproduct
getnumber succeeds::getnumber succeeds
singleton tree::singleton tree
single operand::single operand
compound products::compound products
resulting tree::resulting tree
small change::small change
long product::long product
line changed::line changed
changed return::changed return
feel familiar::feel familiar
compound product::compound product
parse sums::parse sums
counterintuitive definition::counterintuitive definition
nice property::nice property
parsing algorithm::parsing algorithm
algorithm getsum::algorithm getsum
product def::product def
def getsum::def getsum
handle parentheses::handle parentheses
entire sum::entire sum
sum enclosed::sum enclosed
modify getnumber::modify getnumber
handle subexpressions::handle subexpressions
subexpression gettoken::subexpression gettoken
closing parenthesis::closing parenthesis
parenthesis return::parenthesis return
parser handled::parser handled
give getnumber::give getnumber
handling errors::handling errors
close parenthesis::close parenthesis
missing parenthesis::missing parenthesis
function omitted::function omitted
raise statements::raise statements
statements test::statements test
formed expressions::formed expressions
animal tree::animal tree
small program::small program
knowledge base::knowledge base
program interacts::program interacts
animal names::animal names
sample run::sample run
dialog builds::dialog builds
cat dog::cat dog
question depending::question depending
singleton root::singleton root
user quits::user quits
tree tree::tree tree
guess guess::guess guess
information prompt::information prompt
takes input::takes input
response begins::response begins
string import::string import
lower ans::lower ans
loop walks::loop walks
question replaces::question replaces
original cargo::original cargo
knowledge tree::knowledge tree
file implement::file implement
glossary binary::glossary binary
node refers::node refers
dependent nodes::dependent nodes
nodes root::nodes root
topmost node::topmost node
parent leaf::parent leaf
bottom-most node::bottom-most node
children parent::children parent
node child::node child
nodes referred::nodes referred
node siblings::node siblings
common parent::common parent
parent level::parent level
nodes equidistant::nodes equidistant
root binary::root binary
binary operator::binary operator
operands subexpression::operands subexpression
expression preorder::expression preorder
children prefix::children prefix
prefix notation::prefix notation
mathematical expression::mathematical expression
operator appearing::operator appearing
goal::goal
book::book
teach::teach
computer::computer
scientist::scientist
thinking::thinking
combines::combines
features::features
mathematics::mathematics
engineering::engineering
natural::natural
science::science
mathematicians::mathematicians
scientists::scientists
formal::formal
languages::languages
denote::denote
ideas::ideas
specifically::specifically
computations::computations
engineers::engineers
design::design
things::things
assembling::assembling
components::components
systems::systems
evaluating::evaluating
tradeoffs::tradeoffs
alternatives::alternatives
observe::observe
behavior::behavior
complex::complex
form::form
hypotheses::hypotheses
test::test
predictions::predictions
single::single
important::important
skill::skill
problem::problem
solving::solving
means::means
ability::ability
formulate::formulate
problems::problems
creatively::creatively
solutions::solutions
express::express
solution::solution
accurately::accurately
turns::turns
out::out
process::process
learning::learning
program::program
excellent::excellent
opportunity::opportunity
practice::practice
skills::skills
chapter::chapter
level::level
programming::programming
end::end
clearer::clearer
python::python
language::language
high-level::high-level
heard::heard
perl::perl
java::java
infer::infer
lowlevel::lowlevel
referred::referred
machine::machine
assembly::assembly
loosely::loosely
speaking::speaking
computers::computers
execute::execute
programs::programs
written::written
low-level::low-level
processed::processed
run::run
extra::extra
processing::processing
takes::takes
small::small
disadvantage::disadvantage
advantages::advantages
enormous::enormous
first::first
easier::easier
write::write
shorter::shorter
read::read
correct::correct
portable::portable
meaning::meaning
kinds::kinds
modifications::modifications
kind::kind
rewritten::rewritten
due::due
specialized::specialized
applications::applications
two::two
interpreters::interpreters
compilers::compilers
interpreter::interpreter
reads::reads
executes::executes
processes::processes
alternately::alternately
reading::reading
lines::lines
performing::performing
source::source
output::output
code::code
compiler::compiler
translates::translates
completely::completely
starts::starts
running::running
case::case
translated::translated
object::object
executable::executable
compiled::compiled
repeatedly::repeatedly
translation::translation
executor::executor
considered::considered
interpreted::interpreted
executed::executed
ways::ways
commandline::commandline
mode::mode
script::script
command-line::command-line
type::type
prints::prints
result::result
2.4.1::2.4.1
apr::apr
copyright::copyright
credits::credits
license::license
information::information
print::print
line::line
command::command
messages::messages
prompt::prompt
ready::ready
typed::typed
replied::replied
alternatively::alternatively
file::file
contents::contents
text::text
editor::editor
create::create
named::named
latoya.py::latoya.py
convention::convention
files::files
names::names
.py::.py
development::development
environments::environments
details::details
executing::executing
differ::differ
interesting::interesting
examples::examples
working::working
convenient::convenient
testing::testing
immediately::immediately
store::store
modify::modify
future::future
sequence::sequence
instructions::instructions
specifies::specifies
perform::perform
computation::computation
mathematical::mathematical
system::system
equations::equations
finding::finding
roots::roots
polynomial::polynomial
symbolic::symbolic
searching::searching
replacing::replacing
document::document
strangely::strangely
compiling::compiling
basic::basic
input::input
data::data
keyboard::keyboard
device::device
display::display
screen::screen
send::send
math::math
operations::operations
addition::addition
multiplication::multiplication
conditional::conditional
execution::execution
check::check
conditions::conditions
statements::statements
repetition::repetition
action::action
variation::variation
pretty::pretty
matter::matter
complicated::complicated
made::made
describe::describe
breaking::breaking
large::large
task::task
smaller::smaller
subtasks::subtasks
simple::simple
performed::performed
vague::vague
back::back
topic::topic
talk::talk
algorithms::algorithms
debugging::debugging
done::done
human::human
beings::beings
leads::leads
errors::errors
whimsical::whimsical
reasons::reasons
bugs::bugs
tracking::tracking
correcting::correcting
occur::occur
syntax::syntax
runtime::runtime
semantic::semantic
distinguish::distinguish
order::order
track::track
quickly::quickly
1.3.1::1.3.1
syntactically::syntactically
fails::fails
returns::returns
error::error
message::message
refers::refers
structure::structure
rules::rules
english::english
sentence::sentence
begin::begin
capital::capital
letter::letter
period::period
readers::readers
significant::significant
poetry::poetry
cummings::cummings
spewing::spewing
forgiving::forgiving
quit::quit
weeks::weeks
career::career
spend::spend
lot::lot
gain::gain
experience::experience
make::make
fewer::fewer
find::find
faster::faster
1.3.2::1.3.2
exceptions::exceptions
exceptional::exceptional
bad::bad
happened::happened
rare::rare
chapters::chapters
encounter::encounter
1.3.3::1.3.3
successfully::successfully
sense::sense
generate::generate
right::right
thing::thing
told::told
wrote::wrote
wanted::wanted
semantics::semantics
wrong::wrong
identifying::identifying
tricky::tricky
requires::requires
work::work
backward::backward
figure::figure
doing::doing
1.3.4::1.3.4
experimental::experimental
acquire::acquire
frustrating::frustrating
intellectually::intellectually
rich::rich
challenging::challenging
parts::parts
detective::detective
confronted::confronted
clues::clues
events::events
led::led
results::results
idea::idea
hypothesis::hypothesis
predict::predict
modification::modification
step::step
closer::closer
sherlock::sherlock
holmes::holmes
pointed::pointed
eliminated::eliminated
impossible::impossible
remains::remains
improbable::improbable
truth::truth
conan::conan
doyle::doyle
sign::sign
four::four
people::people
gradually::gradually
start::start
linux::linux
operating::operating
thousands::thousands
started::started
linus::linus
torvalds::torvalds
explore::explore
intel::intel
chip::chip
larry::larry
greenfield::greenfield
earlier::earlier
projects::projects
switch::switch
printing::printing
aaaa::aaaa
bbbb::bbbb
evolved::evolved
users::users
guide::guide
beta::beta
version::version
suggestions::suggestions
practices::practices
speak::speak
spanish::spanish
french::french
designed::designed
impose::impose
naturally::naturally
specific::specific
notation::notation
good::good
denoting::denoting
relationships::relationships
numbers::numbers
symbols::symbols
chemists::chemists
represent::represent
chemical::chemical
molecules::molecules
importantly::importantly
tend::tend
strict::strict
statement::statement
h2o::h2o
2zz::2zz
flavors::flavors
pertaining::pertaining
tokens::tokens
elements::elements
words::words
legal::legal
token::token
similarly::similarly
element::element
abbreviation::abbreviation
pertains::pertains
arranged::arranged
structurally::structurally
illegal::illegal
place::place
equal::equal
molecular::molecular
formulas::formulas
subscripts::subscripts
exercise::exercise
appears::appears
well-structured::well-structured
unrecognizable::unrecognizable
valid::valid
invalid::invalid
subconsciously::subconsciously
parsing::parsing
hear::hear
shoe::shoe
fell::fell
understand::understand
subject::subject
predicate::predicate
parsed::parsed
assuming::assuming
fall::fall
general::general
implication::implication
common::common
differences::differences
ambiguity::ambiguity
full::full
deal::deal
contextual::contextual
unambiguous::unambiguous
context::context
redundancy::redundancy
reduce::reduce
misunderstandings::misunderstandings
employ::employ
lots::lots
verbose::verbose
redundant::redundant
concise::concise
literalness::literalness
idiom::idiom
metaphor::metaphor
falling::falling
grow::grow
hard::hard
adjusting::adjusting
difference::difference
prose::prose
sounds::sounds
poem::poem
creates::creates
effect::effect
emotional::emotional
response::response
deliberate::deliberate
literal::literal
contributes::contributes
amenable::amenable
analysis::analysis
ambiguous::ambiguous
understood::understood
remember::remember
dense::dense
longer::longer
top::top
bottom::bottom
left::left
learn::learn
parse::parse
head::head
interpreting::interpreting
finally::finally
spelling::spelling
punctuation::punctuation
big::big
traditionally::traditionally
world::world
doesn::doesn
paper::paper
displays::displays
value::value
quotation::quotation
marks::marks
mark::mark
beginning::beginning
don::don
judge::judge
quality::quality
simplicity::simplicity
standard::standard
glossary::glossary
formulating::formulating
expressing::expressing
easy::easy
humans::humans
portability::portability
property::property
interpret::interpret
translating::translating
compile::compile
translate::translate
preparation::preparation
stored::stored
set::set
algorithm::algorithm
category::category
bug::bug
removing::removing
makes::makes
prevents::prevents
continuing::continuing
exception::exception
programmer::programmer
intended::intended
purposes::purposes
representing::representing
syntactic::syntactic
analogous::analogous
word::word
examine::examine
analyze::analyze
instruction::instruction
variables::variables
expressions::expressions
values::values
types::types
fundamental::fundamental
number::number
manipulates::manipulates
added::added
belong::belong
integer::integer
string::string
so-called::so-called
letters::letters
identify::identify
strings::strings
enclosed::enclosed
works::works
integers::integers
surprisingly::surprisingly
str::str
int::int
decimal::decimal
point::point
float::float
represented::represented
format::format
floating-point::floating-point
tempted::tempted
commas::commas
groups::groups
digits::digits
1,000,000::1,000,000
expression::expression
expected::expected
interprets::interprets
comma-separated::comma-separated
list::list
consecutively::consecutively
runs::runs
producing::producing
powerful::powerful
manipulate::manipulate
variable::variable
assignment::assignment
doc::doc
assignments::assignments
assigns::assigns
arrow::arrow
pointing::pointing
state::state
diagram::diagram
shows::shows
mind::mind
keywords::keywords
programmers::programmers
generally::generally
choose::choose
meaningful::meaningful
arbitrarily::arbitrarily
long::long
uppercase::uppercase
matters::matters
bruce::bruce
underscore::underscore
character::character
multiple::multiple
price::price
tea::tea
china::china
give::give
76trombones::76trombones
parade::parade
syntaxerror::syntaxerror
class::class
dollar::dollar
define::define
twenty-nine::twenty-nine
def::def
exec::exec
return::return
assert::assert
del::del
import::import
break::break
elif::elif
pass::pass
yield::yield
continue::continue
global::global
lambda::lambda
raise::raise
handy::handy
complains::complains
produce::produce
produces::produces
combination::combination
operators::operators
evaluates::evaluates
confusingly::confusingly
enter::enter
includes::includes
change::change
operands::operands
special::special
operator::operator
clear::clear
hour-1::hour-1
hour::hour
minute::minute
minute::-NONE-
15-7::15-7
parenthesis::parenthesis
grouping::grouping
asterisk::asterisk
symbol::symbol
exponentiation::exponentiation
operand::operand
replaced::replaced
operation::operation
subtraction::subtraction
expect::expect
surprised::surprised
division::division
unexpected::unexpected
conventional::conventional
arithmetic::arithmetic
divided::divided
reason::reason
discrepancy::discrepancy
rounds::rounds
cases::cases
close::close
calculate::calculate
percentage::percentage
fraction::fraction
rounded::rounded
answer::answer
approximately::approximately
alternative::alternative
evaluation::evaluation
depends::depends
precedence::precedence
acronym::acronym
pemdas::pemdas
parentheses::parentheses
highest::highest
force::force
evaluate::evaluate
evaluated::evaluated
3-1::3-1
5-2::5-2
higher::higher
yields::yields
yielding::yielding
turn::turn
message-1::message-1
interestingly::interestingly
represents::represents
concatenation::concatenation
joining::joining
linking::linking
end-to-end::end-to-end
fruit::fruit
banana::banana
bakedgood::bakedgood
nut::nut
bread::bread
space::space
part::part
concatenated::concatenated
performs::performs
fun::fun
funfunfun::funfunfun
hand::hand
interpretation::interpretation
analogy::analogy
equivalent::equivalent
composition::composition
looked::looked
isolation::isolation
talking::talking
combine::combine
building::building
blocks::blocks
compose::compose
add::add
reality::reality
happen::happen
actions::actions
aren::aren
happening::happening
involving::involving
inside::inside
minutes::minutes
midnight::midnight
put::put
arbitrary::arbitrary
right-hand::right-hand
side::side
impressive::impressive
neatly::neatly
concisely::concisely
warning::warning
limits::limits
left-hand::left-hand
comments::comments
bigger::bigger
difficult::difficult
piece::piece
notes::notes
explain::explain
marked::marked
compute::compute
elapsed::elapsed
comment::comment
caution::caution
reminds::reminds
reader::reader
ever-surprising::ever-surprising
sort::sort
operator1::operator1
signals::signals
computed::computed
determines::determines
fractional::fractional
section::section
1for::1for
versions::versions
graphical::graphical
representation::representation
keyword::keyword
reserved::reserved
operates::operates
simplify::simplify
divides::divides
times::times
numerator::numerator
divisible::divisible
denominator::denominator
discards::discards
remainder::remainder
governing::governing
concatenate::concatenate
join::join
compound::compound
meant::meant
functions::functions
function::function
calls::calls
call::call
argument::argument
assign::assign
betty::betty
acts::acts
unique::unique
identifier::identifier
related::related
memory::memory
conversion::conversion
collection::collection
built-in::built-in
convert::convert
converts::converts
valueerror::valueerror
truncates::truncates
odd::odd
distinguishes::distinguishes
floatingpoint::floatingpoint
differently::differently
coercion::coercion
returning::returning
previous::previous
suppose::suppose
obvious::obvious
past::past
advantage::advantage
automatic::automatic
automatically::automatically
converted::converted
making::making
sin::sin
log::log
learned::learned
table::table
logarithm::logarithm
base::base
applied::applied
innermost::innermost
module::module
familiar::familiar
grouped::grouped
separated::separated
dot::dot
decibel::decibel
math.log10::math.log10
angle::angle
height::height
math.sin::math.sin
sets::sets
finds::finds
sine::sine
trigonometric::trigonometric
cos::cos
tan::tan
arguments::arguments
radians::radians
degrees::degrees
divide::divide
multiply::multiply
math.pi::math.pi
constant::constant
geometry::geometry
comparing::comparing
square::square
root::root
math.sqrt::math.sqrt
composed::composed
math.cos::math.cos
adds::adds
sum::sum
passed::passed
math.exp::math.exp
math.log::math.log
raises::raises
power::power
assigned::assigned
adding::adding
creating::creating
solve::solve
general-purpose::general-purpose
desired::desired
definition::definition
defined::defined
definitions::definitions
hidden::hidden
worrying::worrying
parameters::parameters
provide::provide
indented::indented
margin::margin
indentation::indentation
spaces::spaces
couple::couple
newline::newline
empty::empty
outputs::outputs
calling::calling
notice::notice
threelines::threelines
procedure::procedure
fact::fact
worth::worth
trouble::trouble
demonstrates::demonstrates
group::group
hiding::hiding
arcane::arcane
eliminating::eliminating
repetitive::repetitive
short::short
consecutive::consecutive
ninelines::ninelines
blank::blank
twentyseven::twentyseven
pulling::pulling
fragments::fragments
generates::generates
move::move
last::last
flow::flow
ensure::ensure
begins::begins
alter::alter
isn::isn
outer::outer
detour::detour
jumps::jumps
pick::pick
middle::middle
fortunately::fortunately
adept::adept
keeping::keeping
completes::completes
picks::picks
terminates::terminates
moral::moral
sordid::sordid
tale::tale
follow::follow
require::require
control::control
job::job
numeric::numeric
pow::pow
exponent::exponent
user-defined::user-defined
parameter::parameter
printtwice::printtwice
printed::printed
chosen::chosen
suggest::suggest
illustrative::illustrative
spam::spam
apply::apply
spamspamspamspam::spamspamspamspam
usual::usual
hint::hint
double::double
quotes::quotes
quote::quote
enclose::enclose
michael::michael
eric::eric
half::half
bee::bee
home::home
caller::caller
local::local
exists::exists
cattwice::cattwice
part1::part1
part2::part2
cat::cat
concatenates::concatenates
chant1::chant1
pie::pie
jesu::jesu
domine::domine
chant2::chant2
dona::dona
eis::eis
requiem::requiem
destroyed::destroyed
nameerror::nameerror
complain::complain
stack::stack
diagrams::diagrams
draw::draw
show::show
belongs::belongs
frame::frame
box::box
__main__::__main__
main::main
topmost::topmost
occurs::occurs
access::access
traceback::traceback
test.py::test.py
tells::tells
occurred::occurred
caused::caused
similarity::similarity
coincidence::coincidence
noticed::noticed
questions::questions
i.e::i.e
larger::larger
stuck::stuck
question::question
consists::consists
provided::provided
explicit::explicit
computes::computes
classes::classes
conditionals::conditionals
recursion::recursion
modulus::modulus
percent::percent
quotient::quotient
extract::extract
right-most::right-most
digit::digit
boolean::boolean
true::true
false::false
compares::compares
built::built
comparison::comparison
greater::greater
logical::logical
similar::similar
negates::negates
strictly::strictly
nonzero::nonzero
style::style
compare::compare
explicitly::explicitly
simplest::simplest
positive::positive
condition::condition
header::header
block::block
ends::ends
colon::colon
unindented::unindented
body::body
limit::limit
occasionally::occasionally
keeper::keeper
haven::haven
possibilities::possibilities
branches::branches
parity::parity
evenness::evenness
oddness::oddness
wrap::wrap
printparity::printparity
chained::chained
branch::branch
choice::choice
functiona::functiona
functionb::functionb
functionc::functionc
nested::nested
checked::checked
dispatch::dispatch
trichotomy::trichotomy
apparent::apparent
avoid::avoid
rewrite::rewrite
semantically::semantically
terminate::terminate
reach::reach
detect::detect
printlogarithm::printlogarithm
exit::exit
remaining::remaining
mentioned::mentioned
neglected::neglected
mention::mention
magical::magical
countdown::countdown
blastoff::blastoff
n-1::n-1
expects::expects
passing::passing
trip::trip
total::total
newlines::newlines
nlines::nlines
additional::additional
algebra::algebra
recursive::recursive
infinite::infinite
frames::frames
reaches::reaches
forever::forever
minimal::minimal
recurse::recurse
reports::reports
maximum::maximum
depth::depth
reached::reached
repetitions::repetitions
omitted::omitted
runtimeerror::runtimeerror
exceeded::exceeded
bit::bit
rude::rude
accept::accept
user::user
raw::raw
stops::stops
waits::waits
presses::presses
key::key
resumes::resumes
raw_input::raw_input
waiting::waiting
telling::telling
supply::supply
what...is::what...is
arthur::arthur
king::king
britons::britons
airspeed::airspeed
velocity::velocity
unladen::unladen
swallow::swallow
speed::speed
crashes::crashes
african::african
european::european
denoted::denoted
controls::controls
depending::depending
relative::relative
nesting::nesting
recursively::recursively
reaching::reaching
eventually::eventually
visual::visual
cue::cue
fruitful::fruitful
produced::produced
radius::radius
returned::returned
area::area
circle::circle
temp::temp
temporary::temporary
absolutevalue::absolutevalue
subsequent::subsequent
dead::dead
path::path
hits::hits
hitting::hitting
complete::complete
exercises::exercises
difficulty::difficulty
increasingly::increasingly
technique::technique
incremental::incremental
sessions::sessions
amount::amount
distance::distance
points::points
coordinates::coordinates
pythagorean::pythagorean
theorem::theorem
inputs::inputs
outline::outline
distances::distances
sample::sample
chose::chose
horizontal::horizontal
equals::equals
vertical::vertical
hypotenuse::hypotenuse
3-4-5::3-4-5
triangle::triangle
confirmed::confirmed
correctly::correctly
squares::squares
dsquared::dsquared
removed::removed
scaffolding::scaffolding
helpful::helpful
final::final
product::product
stage::stage
imported::imported
sqrt::sqrt
writing::writing
chunks::chunks
save::save
aspects::aspects
hold::hold
intermediate::intermediate
remove::remove
consolidate::consolidate
length::length
lengths::lengths
legs::legs
record::record
center::center
perimeter::perimeter
assume::assume
wrapping::wrapping
area2::area2
composing::composing
slope::slope
intercept::intercept
y-intercept::y-intercept
tests::tests
isdivisible::isdivisible
sound::sound
yes::NNP
taking::taking
directly::directly
avoiding::avoiding
altogether::altogether
session::session
tempting::tempting
unnecessary::unnecessary
isbetween::isbetween
subset::subset
interested::interested
expressed::expressed
commands::commands
devices::devices
mouse::mouse
disks::disks
proving::proving
claim::claim
nontrivial::nontrivial
accomplished::accomplished
alan::alan
turing::turing
argue::argue
mathematician::mathematician
early::early
thesis::thesis
theory::theory
chance::chance
proof::proof
tools::tools
circular::circular
reference::reference
frabjuous::frabjuous
adjective::adjective
dictionary::dictionary
annoyed::annoyed
factorial::factorial
multiplied::multiplied
putting::putting
decide::decide
effort::effort
conclude::conclude
leap::leap
faith::faith
shown::shown
exist::exist
labyrinthine::labyrinthine
practicing::practicing
implementations::implementations
convinced::convinced
examining::examining
multiplying::multiplying
strange::strange
finished::finished
spell::spell
steps::steps
debug::debug
saved::saved
recommend::recommend
developing::developing
tighten::tighten
feeling::feeling
inspired::inspired
fibonacci::fibonacci
n-2::n-2
fairly::fairly
explodes::explodes
checking::checking
miss::miss
choices::choices
generalize::generalize
option::option
gamma::gamma
scope::scope
isinstance::isinstance
verify::verify
catches::catches
nonintegers::nonintegers
negative::negative
fred::fred
checks::checks
prove::prove
pattern::pattern
guardian::guardian
act::act
guardians::guardians
protecting::protecting
correctness::correctness
calculation::calculation
plan::plan
handles::handles
circumstances::circumstances
iteration::iteration
discovered::discovered
existing::existing
stop::stop
referring::referring
suppresses::suppresses
equality::equality
commutative::commutative
stay::stay
confusion::confusion
frequently::frequently
automate::automate
tasks::tasks
repeating::repeating
identical::identical
poorly::poorly
feature::feature
displaying::displaying
reducing::reducing
formally::formally
loop::loop
loops::loops
repeat::repeat
endless::endless
amusement::amusement
observation::observation
directions::directions
shampoo::shampoo
lather::lather
rinse::rinse
finite::finite
starting::starting
resulting::resulting
increases::increases
decreases::decreases
termination::termination
disprove::disprove
tables::tables
generating::generating
tabular::tabular
readily::readily
logarithms::logarithms
sines::sines
cosines::cosines
books::books
contained::contained
listing::listing
slow::slow
boring::boring
tended::tended
appeared::appeared
scene::scene
initial::initial
reactions::reactions
great::great
turned::turned
shortsighted::shortsighted
calculators::calculators
pervasive::pervasive
obsolete::obsolete
approximate::approximate
improve::improve
approximation::approximation
underlying::underlying
famously::famously
pentium::pentium
column::column
tab::tab
characters::characters
displayed::displayed
invisible::invisible
marker::marker
cursor::cursor
shifts::shifts
tabs::tabs
columns::columns
powers::powers
respect::respect
formula::formula
log2::log2
loge::loge
changing::changing
round::round
geometric::geometric
position::position
depend::depend
knowing::knowing
65,536::65,536
memorize::memorize
backslash::backslash
escape::escape
sequences::sequences
two-dimensional::two-dimensional
intersection::intersection
row::row
multiples::multiples
encapsulation::encapsulation
generalization::generalization
initializes::initializes
counter::counter
encapsulate::encapsulate
allowing::allowing
encapsulates::encapsulates
generalizes::generalizes
printmultiples::printmultiples
declares::declares
replace::replace
guess::guess
demonstrate::demonstrate
printmulttable::printmulttable
develop::develop
typing::typing
approach::approach
lets::lets
wondering::wondering
created::created
free::free
affect::affect
current::current
perfectly::perfectly
harder::harder
imagine::imagine
size::size
six-by-six::six-by-six
high::high
rows::rows
annoying::annoying
demonstrating::demonstrating
heading::heading
seven-by-seven::seven-by-seven
appropriately::appropriately
capabilities::capabilities
didn::didn
entries::entries
ink::ink
trace::trace
giving::giving
dividing::dividing
separate::separate
facilitate::facilitate
well-designed::well-designed
reuse::reuse
repeated::repeated
terminating::terminating
satisfied::satisfied
printable::printable
designate::designate
nonprintable::nonprintable
isolate::isolate
unnecessarily::unnecessarily
versatile::versatile
reused::reused
demonstrated::demonstrated
based::based
encapsulating::encapsulating
generalizing::generalizing
qualitatively::qualitatively
pieces::pieces
comprise::comprise
treat::treat
bracket::bracket
selects::selects
surprise::surprise
brackets::brackets
offset::offset
0th::0th
zero-eth::zero-eth
1th::1th
one-eth::one-eth
2th::2th
two-eth::two-eth
index::index
member::member
ordered::ordered
len::len
won::won
indexerror::indexerror
range::range
6th::6th
counting::counting
numbered::numbered
subtract::subtract
length-1::length-1
indices::indices
count::count
traversal::traversal
involve::involve
select::select
encode::encode
traverses::traverses
accessed::accessed
traverse::traverse
simpler::simpler
char::char
continues::continues
abecedarian::abecedarian
series::series
alphabetical::alphabetical
robert::robert
mccloskey::mccloskey
ducklings::ducklings
jack::jack
kack::kack
lack::lack
mack::mack
nack::nack
ouack::ouack
pack::pack
quack::quack
prefixes::prefixes
jklmnopq::jklmnopq
suffix::suffix
ack::ack
oack::oack
qack::qack
misspelled::misspelled
fix::fix
slices::slices
segment::segment
slice::slice
selecting::selecting
peter::peter
paul::paul
mary::mary
n-eth::n-eth
m-eth::m-eth
including::including
excluding::excluding
counterintuitive::counterintuitive
omit::omit
ban::ban
ana::ana
bananas::bananas
immutable::immutable
aware::aware
handle::handle
upper::upper-
lowercase::lowercase
zebra::zebra
address::address
realize::realize
zebras::zebras
intention::intention
greeting::greeting
jello::jello
typeerror::typeerror
support::support
item::item
original::original
newgreeting::newgreeting
opposite::opposite
extracting::extracting
found::found
prematurely::prematurely
exits::exits
eureka::eureka
cry::cry
looping::looping
counts::counts
initialized::initialized
incremented::incremented
increment::increment
increase::increase
decrement::decrement
unrelated::unrelated
excrement::excrement
noun::noun
countletters::countletters
accepts::accepts
traversing::traversing
three-parameter::three-parameter
string.find::string.find
benefits::benefits
modules::modules
collisions::collisions
substrings::substrings
bob::bob
search::search
classification::classification
constants::constants
string.lowercase::string.lowercase
considers::considers
string.uppercase::string.uppercase
string.digits::string.digits
classify::classify
islower::islower
discuss::discuss
fastest::fastest
prefer::prefer
string.whitespace::string.whitespace
whitespace::whitespace
white::white
visible::visible
manual::manual
library::library
wealth::wealth
documentation::documentation
website::website
www.python.org::www.python.org
iterate::iterate
mutable::mutable
decrease::decrease
lists::lists
identified::identified
behave::behave
bungee::bungee
mirabile::mirabile
dictu::dictu
1,5::1,5
forms::forms
successive::successive
disappointing::disappointing
couldn::couldn
vocabulary::vocabulary
ameliorate::ameliorate
castigate::castigate
defenestrate::defenestrate
accessing::accessing
3-2::3-2
horsemen::horsemen
war::war
famine::famine
pestilence::pestilence
death::death
i-eth::i-eth
upper::upper
bound::bound
brie::brie
roquefort::roquefort
pol::pol
veq::veq
membership::membership
debauchery::debauchery
generalized::generalized
eliminate::eliminate
horseman::horseman
apple::apple
quince::quince
eat::eat
nineteen::nineteen
expresses::expresses
enthusiasm::enthusiasm
fruits::fruits
repeats::repeats
copy::copy
unlike::unlike
update::update
pear::pear
orange::orange
deletion::deletion
assigning::assigning
squeezing::squeezing
location::location
delete::delete
awkward::awkward
error-prone::error-prone
readable::readable
removes::removes
objects::objects
states::states
obtain::obtain
aliasing::aliasing
aliased::aliased
alias::alias
undesirable::undesirable
safer::safer
sees::sees
economize::economize
cloning::cloning
easiest::easiest
clone::clone
consist::consist
passes::passes
aliases::aliases
shared::shared
drew::drew
modifies::modifies
deletehead::deletehead
tail::tail
rest::rest
three-eth::three-eth
proceed::proceed
elt::elt
threeeth::threeeth
extracts::extracts
matrices::matrices
matrix::matrix
entire::entire
double-index::double-index
possibility::possibility
radical::radical
split::split
breaks::breaks
default::default
boundary::boundary
song::song
rain::rain
spain::spain
string.split::string.split
optional::optional
delimiter::delimiter
boundaries::boundaries
inverse::inverse
pair::pair
string.join::string.join
inserted::inserted
the_rain_in_spain::the_rain_in_spain
relationship::relationship
sequential::sequential
references::references
copying::copying
tuples::tuples
mutability::mutability
noted::noted
modified::modified
tuple::tuple
include::include
treats::treats
issues::issues
swap::swap
cumbersome::cumbersome
solves::solves
respective::respective
unpack::unpack
swaps::swaps
danger::danger
mistake::mistake
incorrect::incorrect
random::random
deterministic::deterministic
determinism::determinism
unpredictable::unpredictable
games::games
nondeterministic::nondeterministic
determine::determine
outcome::outcome
pseudorandom::pseudorandom
random.random::random.random
low::low
randomlist::randomlist
zeros::zeros
replaces::replaces
generated::generated
supposed::supposed
distributed::distributed
uniformly::uniformly
equally::equally
equal-sized::equal-sized
buckets::buckets
falls::falls
bucket::bucket
roughly::roughly
subproblems::subproblems
fit::fit
computational::computational
traversed::traversed
counted::counted
adapting::adapting
num::num
inbucket::inbucket
modifying::modifying
matching::matching
solved::solved
unwieldy::unwieldy
bucket1::bucket1
bucket2::bucket2
bucket3::bucket3
bucket4::bucket4
numbuckets::numbuckets
width::width
numbuckets-1::numbuckets-1
bucketwidth::bucketwidth
confirm::confirm
overlap::overlap
cover::cover
generator::generator
single-pass::single-pass
efficient::efficient
traversals::traversals
lower::lower
histogram::histogram
dictionaries::dictionaries
required::required
parallel::parallel
swapping::swapping
involves::involves
eng2sp::eng2sp
uno::uno
dos::dos
entry::entry
keys::keys
key-value::key-value
pairs::pairs
tres::tres
care::care
indexed::indexed
keyvalue::keyvalue
stock::stock
inventory::inventory
apples::apples
oranges::oranges
pears::pears
buys::buys
expecting::expecting
methods::methods
method::method
eng2sp.keys::eng2sp.keys
invocation::invocation
invoking::invoking
eng2sp.values::eng2sp.values
items::items
eng2sp.items::eng2sp.items
eng2sp.has_key::eng2sp.has_key
deux::deux
has_key::has_key
opposites::opposites
opposites.copy::opposites.copy
fresh::fresh
changed::changed
unchanged::unchanged
privilege::privilege
sparse::sparse
zeroes::zeroes
0,0,0,1,0::0,0,0,1,0
0,0,0,0,0::0,0,0,0,0
0,2,0,0,0::0,2,0,0,0
0,0,0,3,0::0,0,0,3,0
hints::hints
0,3::0,3
1,3::1,3
keyerror::keyerror
matrix.get::matrix.get
improves::improves
shame::shame
played::played
machines::machines
finishes::finishes
instantly::instantly
graph::graph
connecting::connecting
inefficient::inefficient
worse::worse
storing::storing
previously::previously
implementation::implementation
previous.has_key::previous.has_key
newvalue::newvalue
maps::maps
eyeblink::eyeblink
20365011074l::20365011074l
20,365,011,074::20,365,011,074
numerical::numerical
57l::57l
longs::longs
detects::detects
overflow::overflow
10000000000l::10000000000l
occurrences::occurrences
compressing::compressing
frequencies::frequencies
compress::compress
codes::codes
elegant::elegant
lettercounts::lettercounts
mississippi::mississippi
lettercounts.get::lettercounts.get
possibly::possibly
appealing::appealing
letteritems::letteritems
lettercounts.items::lettercounts.items
letteritems.sort::letteritems.sort
encountered::encountered
applies::applies
append::append
extend::extend
reverse::reverse
consult::consult
invoked::invoked
invoke::invoke
storage::storage
precomputed::precomputed
shuts::shuts
disappears::disappears
permanently::permanently
drive::drive
floppy::floppy
cd-rom::cd-rom
organized::organized
directories::directories
folders::folders
directory::directory
exchange::exchange
formats::formats
pdf::pdf
open::open
skip::skip
opening::opening
test.dat,w::test.dat,w
test.dat::test.dat
f.write::f.write
closing::closing
f.close::f.close
test.dat,r::test.dat,r
test.cat,r::test.cat,r
ioerror::ioerror
errno::errno
test.cat::test.cat
f.read::f.read
timeto::timeto
copies::copies
fifty::fifty
copyfile::copyfile
oldfile::oldfile
newfile::newfile
f1.read::f1.read
f2.write::f2.write
f1.close::f1.close
f2.close::f2.close
moves::moves
nline::nline
readline::readline
f.readline::f.readline
readlines::readlines
f.readlines::f.readlines
line-processing::line-processing
filterfile::filterfile
omitting::omitting
f1.readline::f1.readline
proceeds::proceeds
hash::hash
fail::fail
formatted::formatted
stands::stands
cars::cars
confused::confused
embed::embed
july::july
sold::sold
days::days
million::million
34,6.1::34,6.1
dollars::dollars
places::places
match::match
1,2::1,2
12f::12f
minimum::minimum
leading::leading
trailing::trailing
-6d::-6d
12.2f::12.2f
twelve::twelve
amounts::amounts
aligned::aligned
student::student
hourly::hourly
wages::wages
report::report
students::students
wages.keys::wages.keys
students.sort::students.sort
-20s::-20s
joe::joe
joshua::joshua
controlling::controlling
guarantee::guarantee
twenty-one::twenty-one
billion::billion
ran::ran
folder::folder
located::located
aarhus::aarhus
opens::opens
resides::resides
dict::dict
share::share
usr::usr
top-level::top-level
filename::filename
filenames::filenames
danish::danish
university::university
pickling::pickling
1,2,3::1,2,3
lost::lost
preserves::preserves
structures::structures
pickle::pickle
test.pck,w::test.pck,w
dump::dump
pickle.dump::pickle.dump
load::load
dumped::dumped
test.pck,r::test.pck,r
pickle.load::pickle.load
zerodivisionerror::zerodivisionerror
modulo::modulo
nonexistent::nonexistent
idontexist::idontexist
specifics::specifics
crash::crash
ignores::ignores
capability::capability
inputnumber::inputnumber
variety::variety
occasions::occasions
favorite::favorite
notimplementederror::notimplementederror
entity::entity
disk::disk
stream::stream
exact::exact
reconstituted::reconstituted
prevent::prevent
signal::signal
userdefined::userdefined
concept::concept
dimensions::dimensions
treated::treated
collectively::collectively
separating::separating
origin::origin
units::units
quick::quick
dirty::dirty
defi::defi-
nition::nition
members::members
instances::instances
instance::instance
instantiation::instantiation
instantiate::instantiate
guessed::guessed
constructor::constructor
attributes::attributes
blank.x::blank.x
blank.y::blank.y
attribute::attribute
conflict::conflict
purpose::purpose
unambiguously::unambiguously
distancesquared::distancesquared
calculates::calculates
80f8e70::80f8e70
hexadecimal::hexadecimal
informative::informative
shortly::shortly
printpoint::printpoint
p.x::p.x
p.y::p.y
sameness::sameness
thought::thought
chris::chris
car::car
model::model
mother::mother
person.1::person.1
p1.x::p1.x
p1.y::p1.y
p2.x::p2.x
p2.y::p2.y
shallow::shallow
deep::deep
samepoint::samepoint
1not::1not
german::german
gleiche::gleiche
auto::auto
selbe::selbe
mutter::mutter
rectangles::rectangles
rectangle::rectangle
oriented::oriented
vertically::vertically
horizontally::horizontally
corners::corners
opposing::opposing
upper-left::upper-left
corner::corner
box.width::box.width
box.height::box.height
box.corner::box.corner
box.corner.x::box.corner.x
box.corner.y::box.corner.y
composes::composes
findcenter::findcenter
growrect::growrect
dwidth::dwidth
dheight::dheight
direction::direction
bob.width::bob.width
bob.height::bob.height
bob.corner::bob.corner
bob.corner.x::bob.corner.x
bob.corner.y::bob.corner.y
moverect::moverect
coordinate::coordinate
effects::effects
duplicate::duplicate
copy.copy::copy.copy
embedded::embedded
sufficient::sufficient
confusing::confusing
deepcopy::deepcopy
copy.deepcopy::copy.deepcopy
newbox::newbox
newbox.width::newbox.width
newbox.height::newbox.height
template::template
real::real
implemented::implemented
records::records
day::day
hours::hours
seconds::seconds
time.hours::time.hours
time.minutes::time.minutes
time.seconds::time.seconds
printtime::printtime
chronologically::chronologically
pure::pure
sections::sections
addtime::addtime
modifiers::modifiers
rough::rough
sum.hours::sum.hours
t1.hours::t1.hours
t2.hours::t2.hours
sum.minutes::sum.minutes
t1.minutes::t1.minutes
t2.minutes::t2.minutes
sum.seconds::sum.seconds
t1.seconds::t1.seconds
t2.seconds::t2.seconds
currenttime::currenttime
breadtime::breadtime
breadmaker::breadmaker
currenttime.hours::currenttime.hours
currenttime.minutes::currenttime.minutes
currenttime.seconds::currenttime.seconds
breadtime.hours::breadtime.hours
breadtime.minutes::breadtime.minutes
breadtime.seconds::breadtime.seconds
donetime::donetime
sixty::sixty
carry::carry
corrected::corrected
modifier::modifier
draft::draft
deals::deals
evidence::evidence
functional::functional
prototype::prototype
versus::versus
planning::planning
reasonable::reasonable
resort::resort
compelling::compelling
tested::tested
flaws::flaws
effective::effective
lead::lead
unreliable::unreliable
planned::planned
insight::insight
three-digit::three-digit
component::component
sixties::sixties
thirty-six::thirty-six
hundreds::hundreds
effectively::effectively
suggests::suggests
converttoseconds::converttoseconds
t.hours::t.hours
t.minutes::t.minutes
t.seconds::t.seconds
maketime::maketime
convince::convince
converting::converting
dealing::dealing
abstract::abstract
intuition::intuition
investment::investment
reliable::reliable
subtracting::subtracting
duration::duration
implement::implement
borrowing::borrowing
ironically::ironically
opportunities::opportunities
opposed::opposed
carefully::carefully
approaches::approaches
single-digit::single-digit
memorized::memorized
knowledge::knowledge
algorithmic::algorithmic
lazy::lazy
cheated::cheated
tricks::tricks
trick::trick
techniques::techniques
carrying::carrying
characteristics::characteristics
intelligence::intelligence
mechanical::mechanical
opinion::opinion
embarrassing::embarrassing
school::school
literally::literally
designing::designing
central::central
conscious::conscious
hardest::hardest
algorithmically::algorithmically
understanding::understanding
receives::receives
fruitless::fruitless
majority::majority
improving::improving
unintelligent::unintelligent
object-oriented::object-oriented
terms::terms
corresponds::corresponds
operate::operate
correspond::correspond
real-world::real-world
interact::interact
concepts::concepts
conveys::conveys
connection::connection
examination::examination
motivation::motivation
transform::transform
transformation::transformation
purely::purely
simply::simply
comfortable::comfortable
currenttime.printtime::currenttime.printtime
convoluted::convoluted
active::active
agent::agent
hey::hey
agents::agents
perspective::perspective
polite::polite
shifting::shifting
responsibility::responsibility
maintain::maintain
leave::leave
self.seconds::self.seconds
self.minutes::self.minutes
self.hours::self.hours
currenttime.increment::currenttime.increment
slightly::slightly
stays::stays
time2::time2
self.hour::self.hour
time2.hour::time2.hour
self.minute::self.minute
time2.minute::time2.minute
self.second::self.second
time2.second::time2.second
donetime.after::donetime.after
done-time::done-time
current-time::current-time
upgrade::upgrade
improved::improved
overrides::overrides
fourth::fourth
initialization::initialization
init::init
underscores::underscores
__init__::__init__
revisited::revisited
naming::naming
self.x::self.x
self.y::self.y
__str__::__str__
implicitly::implicitly
invokes::invokes
defining::defining
overloading::overloading
override::override
__add__::__add__
other.x::other.x
other.y::other.y
conveniently::conveniently
sub::sub
overloads::overloads
mul::mul
rmul::rmul
assumes::assumes
linear::linear
polymorphism::polymorphism
__mul__::__mul__
primitive::primitive
scalar::scalar
__rmul__::__rmul__
attributeerror::attributeerror
opaque::opaque
difficulties::difficulties
appendix::appendix
multadd::multadd
multiplies::multiplies
polymorphic::polymorphic
frontandback::frontandback
forward::forward
front::front
back.reverse::back.reverse
reversing::reversing
mylist::mylist
surprising::surprising
rule::rule
unintentional::unintentional
discover::discover
inheritance::inheritance
providing::providing
extending::extending
card1::card1
card::card
diamonds::diamonds
suitlist::suitlist
card2::card2
card2.suitlist::card2.suitlist
affects::affects
swirly::swirly
whales::whales
card1.suitlist::card1.suitlist
cards::cards
cmp::cmp
unordered::unordered
playing::playing
partially::partially
clubs::clubs
rank::rank
suit::suit
comparable::comparable
honest::honest
sake::sake
choosing::choosing
deck::deck
sorted::sorted
decided::decided
decks::decks
__cmp__::__cmp__
suits::suits
self.suit::self.suit
other.suit::other.suit
ranks::ranks
self.rank::self.rank
other.rank::other.rank
tie::tie
ordering::ordering
aces::aces
deuces::deuces
ranked::ranked
kings::kings
fifty-two::fifty-two
self.cards::self.cards
self.cards.append::self.cards.append
populate::populate
enumerates::enumerates
iterates::iterates
thirteen::thirteen
appends::appends
printdeck::printdeck
ellipsis::ellipsis
flexible::flexible
pizzazz::pizzazz
arranges::arranges
cascade::cascade
indent::indent
accumulator::accumulator
initially::initially
shuffling::shuffling
ace::ace
queen::queen
shuffled::shuffled
shuffle::shuffle
randrange::randrange
chooses::chooses
guaranteed::guaranteed
random.randrange::random.randrange
randomly::randomly
swapped::swapped
precluded::precluded
ncards::ncards
actual::actual
selected::selected
removecard::removecard
self.cards.remove::self.cards.remove
pop::pop
popcard::popcard
self.cards.pop::self.cards.pop
isempty::isempty
constructing::constructing
mapping::mapping
accessible::accessible
accumulate::accumulate
concatenating::concatenating
primary::primary
inherits::inherits
parent::parent
child::child
subclass::subclass
customize::customize
reflects::reflects
relevant::relevant
scattered::scattered
elegantly::elegantly
lend::lend
harm::harm
plays::plays
game::game
maid::maid
goals::goals
hands::hands
poker::poker
straight::straight
flush::flush
bridge::bridge
score::score
bid::bid
situation::situation
identifies::identifies
player::player
holds::holds
self.name::self.name
addcard::addcard
self,card::self,card
requirements::requirements
nhands::nhands
self.isempty::self.isempty
self.popcard::self.popcard
hand.addcard::hand.addcard
dealt::dealt
ncards-1::ncards-1
robin::robin
wraps::wraps
inherited::inherited
deck.shuffle::deck.shuffle
frank::frank
deck.deal::deck.deal
spades::spades
hearts::hearts
makings::makings
inherit::inherit
deck.__str__::deck.__str__
cardgame::cardgame
chores::chores
self.deck::self.deck
self.deck.shuffle::self.deck.shuffle
initializing::initializing
simulation::simulation
rid::rid
color::color
matches::matches
black::black
red::red
fifty-one::fifty-one
players::players
discard::discard
play::play
closest::closest
neighbor::neighbor
leaving::leaving
loser::loser
nuances::nuances
prominently::prominently
failing::failing
oldmaidhand::oldmaidhand
abilities::abilities
removematches::removematches
originalcards::originalcards
card.suit::card.suit
card.rank::card.rank
self.name,card,match::self.name,card,match
club::club
spade::spade
diamond::diamond
heart::heart
satisfy::satisfy
game.deck.deal::game.deck.deal
oldmaidgame::oldmaidgame
hand.removematches::hand.removematches
attention::attention
self.deck.removecard::self.deck.removecard
0,12::0,12
self.hands::self.hands
self.hands.append::self.hands.append
self.deck.deal::self.deck.deal
self.printhands::self.printhands
self.removeallmatches::self.removeallmatches
discarded::discarded
matched::matched
numhands::numhands
self.playoneturn::self.playoneturn
removeallmatches::removeallmatches
printhands::printhands
twenty-five::twenty-five
playoneturn::playoneturn
.isempty::.isempty
self.findneighbor::self.findneighbor
pickedcard::pickedcard
.popcard::.popcard
.addcard::.addcard
.name::.name
picked::picked
.removematches::.removematches
.shuffle::.shuffle
findneighbor::findneighbor
1,numhands::1,numhands
detected::detected
truncated::truncated
fifteen::fifteen
tens::tens
cards.oldmaidgame::cards.oldmaidgame
game.play::game.play
allen,jeff,chris::allen,jeff,chris
allen::allen
jeff::jeff
loses::loses
inheriting::inheriting
linked::linked
nodes::nodes
node::node
unit::unit
cargo::cargo
mechanism::mechanism
self.cargo::self.cargo
self.next::self.next
link::link
node1::node1
node2::node2
node3::node3
node1.next::node1.next
node2.next::node2.next
collections::collections
assemble::assemble
serves::serves
printlist::printlist
node.next::node.next
succession::succession
backwards::backwards
printbackward::printbackward
list.next::list.next
limitation::limitation
list-manipulating::list-manipulating
clean::clean
infinitely::infinitely
problematic::problematic
hypothetical::hypothetical
precondition::precondition
imposes::imposes
constraint::constraint
describes::describes
raised::raised
eyebrow::eyebrow
roles::roles
role::role
intend::intend
disambiguate::disambiguate
inherent::inherent
reorder::reorder
wrappers::wrappers
helpers::helpers
removesecond::removesecond
first.next::first.next
second.next::second.next
singleton::singleton
violation::violation
printbackwardnicely::printbackwardnicely
behalf::behalf
wrapper::wrapper
helper::helper
linkedlist::linkedlist
subtle::subtle
implementing::implementing
reversal::reversal
propose::propose
serve::serve
manipulating::manipulating
self.length::self.length
self.head::self.head
nice::nice
self.head.printbackward::self.head.printbackward
invariants::invariants
tail.printbackward::tail.printbackward
renamed::renamed
benefit::benefit
addfirst::addfirst
linkedlists::linkedlists
puts::puts
formed::formed
requirement::requirement
ideally::ideally
integrity::integrity
violated::violated
invariant::invariant
acceptable::acceptable
violating::violating
violates::violates
restore::restore
stretch::stretch
implements::implements
assertion::assertion
middleman::middleman
stacks::stacks
concrete::concrete
discussed::discussed
adt::adt
simplifies::simplifies
well-known::well-known
adts::adts
libraries::libraries
client::client
provider::provider
interface::interface
initialize::initialize
push::push
lifo::lifo
self.items::self.items
self.items.append::self.items.append
pushing::pushing
popping::popping
self.items.pop::self.items.pop
homonymous1::homonymous1
invocations::invocations
veneer::veneer
life::life
thin::thin
coating::coating
wood::wood
furniture-making::furniture-making
hide::hide
underneath::underneath
hides::hides
generic::generic
pushes::pushes
s.push::s.push
s.isempty::s.isempty
s.pop::s.pop
granted::granted
remarkably::remarkably
same-named::same-named
postfix::postfix
infix::infix
term::term
individual::individual
regular::regular
splits::splits
re.split::re.split
a-z::a-z
0-9::0-9
phantom::phantom
parser::parser
evaluator::evaluator
evalpostfix::evalpostfix
expr::expr
tokenlist::tokenlist
stack.pop::stack.pop
stack.push::stack.push
erroneous::erroneous
clients::clients
providers::providers
interests::interests
writes::writes
worry::worry
accord::accord
specification::specification
conversely::conversely
luxury::luxury
exclusively::exclusively
moment::moment
satisfies::satisfies
person::person
transformations::transformations
standardizes::standardizes
grammatical::grammatical
queues::queues
presents::presents
queue::queue
priority::priority
customers::customers
service::service
customer::customer
served::served
airports::airports
flights::flights
supermarkets::supermarkets
queueing::queueing
policy::policy
fifo::fifo
first-in-first-out::first-in-first-out
arrival::arrival
flight::flight
leaves::leaves
groceries::groceries
policies::policies
fair::fair
fairness::fairness
eye::eye
beholder::beholder
insert::insert
last.next::last.next
self.head.cargo::self.head.cargo
self.head.next::self.head.next
removefirst::removefirst
performance::performance
tack::tack
properly::properly
concerned::concerned
detail::detail
suggesting::suggesting
skips::skips
proportional::proportional
compared::compared
maintains::maintains
improvedqueue::improvedqueue
self.last::self.last
pay::pay
achieved::achieved
necessarily::necessarily
priorities::priorities
bowling::bowling
scores::scores
lowest::lowest
golf::golf
priorityqueue::priorityqueue
veneers::veneers
maxi::maxi
1,len::1,len
biggest::biggest
champion::champion
q.insert::q.insert
q.isempty::q.isempty
q.remove::q.remove
golfer::golfer
unusual::unusual
golfers::golfers
self.score::self.score
-16s::-16s
neat::neat
other.score::other.score
tiger::tiger
woods::woods
phil::phil
mickelson::mickelson
hal::hal
sutton::sutton
pq.insert::pq.insert
pq.isempty::pq.isempty
pq.remove::pq.remove
removal::removal
arrive::arrive
determined::determined
external::external
factors::factors
defines::defines
trees::trees
tree::tree
binary::binary
null::null
subtrees::subtrees
cluttering::cluttering
picture::picture
nones::nones
tips::tips
strangest::strangest
mix::mix
family::family
children::children
siblings::siblings
children::NNS
metaphors::metaphors
builds::builds
self.left::self.left
self.right::self.right
build::build
allocate::allocate
tree.left::tree.left
tree.right::tree.right
tree.cargo::tree.cargo
notations::notations
leaf::leaf
prefix::prefix
optimize::optimize
printtree::printtree
subtree::subtree
preorder::preorder
suspect::suspect
printtreepostorder::printtreepostorder
postorder::postorder
inorder::inorder
printtreeinorder::printtreeinorder
complication::complication
preserve::preserve
improvements::improvements
printtreeindented::printtreeindented
sideways::sideways
simplified::simplified
tokenized::tokenized
preventing::preventing
gettoken::gettoken
getnumber::getnumber
getproduct::getproduct
products::products
succeeds::succeeds
implies::implies
feel::feel
sums::sums
basis::basis
getsum::getsum
subexpressions::subexpressions
subexpression::subexpression
handled::handled
descriptive::descriptive
handling::handling
well-formed::well-formed
missing::missing
improperly::improperly
animal::animal
interacts::interacts
bird::bird
animals::animals
dog::dog
fly::fly
bark::bark
dialog::dialog
asks::asks
quits::quits
walk::walk
tree.getleft::tree.getleft
tree.getcargo::tree.getcargo
tree.getright::tree.getright
animal,guess::animal,guess
tree.setcargo::tree.setcargo
tree.setleft::tree.setleft
tree.setright::tree.setright
ques::ques
ans::ans
walks::walks
guided::guided
responses::responses
shortcoming::shortcoming
forgets::forgets
taught::taught
dependent::dependent
bottom-most::bottom-most
equidistant::equidistant
visiting::visiting
appearing::appearing
