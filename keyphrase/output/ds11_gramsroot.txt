talking about avl::talking about avl
binary search trees::binary search trees
search trees data::search trees data
trees data structure::trees data structure
binary search tree::binary search tree
operations of insertion::operations of insertion
insertion deletion search::insertion deletion search
bad as order::bad as order
tree which doesn::tree which doesn
bad a height::bad a height
data structure call::data structure call
structure call avl::structure call avl
call avl trees::call avl trees
avl tree avl::avl tree avl
tree avl tress::tree avl tress
height balanced trees::height balanced trees
ignore this white::ignore this white
inside the nodes::inside the nodes
root is left::root is left
call the height::call the height
define this turn::define this turn
sub tree rooted::sub tree rooted
set of descendents::set of descendents
define the height::define the height
single turn node::single turn node
tree has height::tree has height
two so level::two so level
height this sub::height this sub
node i put::node i put
put down height::put down height
trees called avl::trees called avl
height balanced means::height balanced means
height this node::height this node
difference the left::difference the left
left sub tree::left sub tree
right sub tree::right sub tree
tree the left::tree the left
tree the heights::tree the heights
children it doesn::children it doesn
make any incidence::make any incidence
incidence to call::incidence to call
call to talk::call to talk
node the right::node the right
sis the left::sis the left
tree is missing::tree is missing
missing we call::missing we call
made this change::made this change
today right absence::today right absence
shift the definition::shift the definition
put some keys::put some keys
node height balanced::node height balanced
leaf node write::leaf node write
height balanced properties::height balanced properties
balanced properties violated::balanced properties violated
kind of trees::kind of trees
trees as avl::trees as avl
good so lets::good so lets
lets trying figure::lets trying figure
avl trees lets::avl trees lets
out how bad::out how bad
bad the height::bad the height
prove in lets::prove in lets
minutes the height::minutes the height
prove this claim::prove this claim
make a small::make a small
slightly different argument::slightly different argument
tree of height::tree of height
number of nodes::number of nodes
nodes so define::nodes so define
define the quantities::define the quantities
trees of height::trees of height
lets us figure::lets us figure
implies this proportion::implies this proportion
tree of heritage::tree of heritage
recall a binary::recall a binary
nodes of height::nodes of height
complete binary tree::complete binary tree
single ten node::single ten node
height two rooted::height two rooted
rooted one node::rooted one node
rooted two children::rooted two children
counting minimum right::counting minimum right
end two equals::end two equals
two the minimum::two the minimum
two so suppose::two so suppose
suppose avl tree::suppose avl tree
height h minus::height h minus
children its children::children its children
minus one right::minus one right
trees has height::trees has height
tree have height::tree have height
two why minimum::two why minimum
minus two height::minus two height
lets of height::lets of height
minus one sub::minus one sub
minus two sub::minus two sub
two sub tree::two sub tree
close form expression::close form expression
solve this recurrence::solve this recurrence
solving this recurrence::solving this recurrence
minus two right::minus two right
grows the number::grows the number
atleast as largest::atleast as largest
largest two times::largest two times
two strictly large::two strictly large
thing to solve::thing to solve
implies this entire::implies this entire
four which implies::four which implies
suppose i pick::suppose i pick
pick i equals::pick i equals
minus one times::minus one times
two times log::two times log
tree whose height::tree whose height
satisfy this relation::satisfy this relation
satisfy the relation::satisfy the relation
minimum possible number::minimum possible number
nodes and height::nodes and height
nodes has height::nodes has height
login two login::login two login
argued after taking::argued after taking
implies h equals::implies h equals
big o log::big o log
number of number::number of number
nodes the height::nodes the height
height only log::height only log
tree very dense::tree very dense
great so lets::great so lets
recurrence is solved::recurrence is solved
fairly crude analysis::fairly crude analysis
right we replace::right we replace
root two right::root two right
atleast as larger::atleast as larger
case h equals::case h equals
equals one pay::equals one pay
true this statement::true this statement
statement is true::statement is true
made a mistake::made a mistake
back this base::back this base
redefine the height::redefine the height
suppose the claim::suppose the claim
claim is true::claim is true
strictly larger right::strictly larger right
quantity is larger::quantity is larger
two is lager::two is lager
right okay good::right okay good
cancel out terms::cancel out terms
minus c minus::minus c minus
multiply both side::multiply both side
satisfy this right::satisfy this right
solve this quadratic::solve this quadratic
right one minus::right one minus
wont as large::wont as large
roughly one point::roughly one point
good okay good::good okay good
fibonacci number minus::fibonacci number minus
minus one good::minus one good
thing to pick::thing to pick
right so induction::right so induction
make a difference::make a difference
make that correction::make that correction
make any difference::make any difference
greater than equal::greater than equal
quadratic in equality::quadratic in equality
power k minus::power k minus
make that small::make that small
height now log::height now log
base one point::base one point
tree with smallest::tree with smallest
smallest possible number::smallest possible number
equals h minus::equals h minus
definition of log::definition of log
prove this kind::prove this kind
satisfy n equals::satisfy n equals
equals two right::equals two right
agreed okay great::agreed okay great
ways of solving::ways of solving
make a guess::make a guess
right so earlier::right so earlier
two one point::two one point
bit more detail::bit more detail
leaf that leaf::leaf that leaf
root which means::root which means
suppose this leaf::suppose this leaf
two k minus::two k minus
requires the proof::requires the proof
proof and lets::proof and lets
important the number::important the number
root right suppose::root right suppose
class for avl::class for avl
avl tree lets::avl tree lets
work with level::work with level
starting one doesn::starting one doesn
make a big::make a big
big difference lets::big difference lets
start with level::start with level
draw this picture::draw this picture
color it red::color it red
sub tree hanging::sub tree hanging
level zero level::level zero level
level k minus::level k minus
child this child::child this child
child has height::child has height
node this sub::node this sub
root have height::root have height
property of avl::property of avl
arbitrary binary tree::arbitrary binary tree
understand that right::understand that right
leaf at level::leaf at level
band whose width::band whose width
largest possible height::largest possible height
height the tree::height the tree
make another claim::make another claim
nodes at level::nodes at level
first k minus::first k minus
minus two levels::minus two levels
contradict so lets::contradict so lets
node at level::node at level
node u level::node u level
shown know node::shown know node
argument would applied::argument would applied
children no right::children no right
child so sub::child so sub
height balance property::height balance property
property is violated::property is violated
children at level::children at level
right everyone understands::right everyone understands
provided this guide::provided this guide
problem height balance::problem height balance
children okay great::children okay great
full full means::full full means
means the tree::means the tree
minus one node::minus one node
argued we recall::argued we recall
recall that height::recall that height
minus one nodes::minus one nodes
implies the number::implies the number
height right lets::height right lets
right lets substitute::right lets substitute
minus one lets::minus one lets
thing square root::thing square root
proved the sharper::proved the sharper
bound the point::bound the point
logarithmic height property::logarithmic height property
solving the recurrence::solving the recurrence
method we solving::method we solving
relation the shop::relation the shop
shop is long::shop is long
tree is concerned::tree is concerned
suppose i give::suppose i give
root its atleast::root its atleast
half the height::half the height
require a proof::require a proof
first h minus::first h minus
levels the avl::levels the avl
binary tree lets::binary tree lets
levels its complete::levels its complete
complete very dense::complete very dense
turn the tree::turn the tree
initially its dense::initially its dense
kind of things::kind of things
part the fact::part the fact
two levels means::two levels means
lot of nodes::lot of nodes
tree is atleast::tree is atleast
two h nodes::two h nodes
mind about avl::mind about avl
nice the height::nice the height
search in certainty::search in certainty
certainty in log::certainty in log
search is easy::search is easy
problem with search::problem with search
tree right forget::tree right forget
forget the height::forget the height
order it height::order it height
height is log::height is log
insert right suppose::insert right suppose
wrong so recall::wrong so recall
call this height::call this height
balanced that treat::balanced that treat
insert a node::insert a node
change the height::change the height
consequence the height::consequence the height
height balanced property::height balanced property
insert so insert::insert so insert
step of insertion::step of insertion
first you find::first you find
find the position::find the position
find that element::find that element
put the node::put the node
node there put::node there put
updating the heights::updating the heights
nodes you encountered::nodes you encountered
nodes whose heights::nodes whose heights
nodes whose height::nodes whose height
doing an insertion::doing an insertion
place where height::place where height
height change appears::height change appears
appears where height::appears where height
inserted and move::inserted and move
parent parent parent::parent parent parent
hit the route::hit the route
follow we find::follow we find
find the first::find the first
height imbalance property::height imbalance property
suppose that node::suppose that node
skip this part::skip this part
part and wise::part and wise
wise up node::wise up node
show your picture::show your picture
idea so suppose::idea so suppose
forget this empty::forget this empty
avl tree height::avl tree height
tree height balance::tree height balance
balance is satisfied::balance is satisfied
forget this type::forget this type
type of node::type of node
lets say fifty::lets say fifty
right here left::right here left
balance property violated::balance property violated
height balance properties::height balance properties
properties we call::properties we call
call this nodes::call this nodes
nodes its child::nodes its child
tree to make::tree to make
height balanced tree::height balanced tree
leave the tree::leave the tree
kind of rotation::kind of rotation
kind of move::kind of move
class right understand::class right understand
operation is done::operation is done
change the keys::change the keys
draw the picture::draw the picture
out what rotation::out what rotation
property is retained::property is retained
insertion and deletion::insertion and deletion
class we looked::class we looked
looked at avl::looked at avl
trees are defined::trees are defined
proved a bound::proved a bound
bound of log::bound of log
right we spend::right we spend
spend a lot::spend a lot
solve that recurrence::solve that recurrence
two ways solving::two ways solving
solving that recurrence::solving that recurrence
proved a similar::proved a similar
avl trees::avl trees
last class::last class
binary search::binary search
search trees::search trees
trees data::trees data
data structure::data structure
search tree::search tree
insertion deletion::insertion deletion
deletion search::deletion search
tree height::tree height
order end::order end
created tree::created tree
structure call::structure call
call avl::call avl
avl tree::avl tree
tree avl::tree avl
avl tress::avl tress
height balanced::height balanced
balanced trees::balanced trees
white spots::white spots
keys inside::keys inside
turn end::turn end
sub tree::sub tree
tree rooted::tree rooted
previous classes::previous classes
single turn::single turn
turn node::turn node
level numbers::level numbers
entire tree::entire tree
balanced means::balanced means
left sub::left sub
right sub::right sub
internal node::internal node
children differ::children differ
leaf node::leaf node
change today::change today
right absence::right absence
single node::single node
binary tree::binary tree
huge height::huge height
node height::node height
node write::node write
balanced properties::balanced properties
properties violated::properties violated
figure outs::figure outs
trees lets::trees lets
order log::order log
smallest number::smallest number
minimum number::minimum number
good tree::good tree
complete binary::complete binary
large number::large number
single ten::single ten
ten node::ten node
minimum right::minimum right
end end::end end
root node::root node
sub trees::sub trees
smaller height::smaller height
smaller number::smaller number
recurrence relationship::recurrence relationship
recurrence relation::recurrence relation
solve today::solve today
base condition::base condition
close form::close form
form expression::form expression
tree grows::tree grows
simple thing::simple thing
entire thing::entire thing
maximum number::maximum number
times log::times log
taking algorithms::taking algorithms
function don::function don
confused lets::confused lets
crude analysis::crude analysis
sharper bound::sharper bound
noise hindi::noise hindi
tight analysis::tight analysis
true right::true right
base case::base case
induction hypothesis::induction hypothesis
larger right::larger right
out terms::out terms
square minus::square minus
quadratic equation::quadratic equation
minus root::minus root
golden ratio::golden ratio
fibonacci relation::fibonacci relation
fibonacci number::fibonacci number
number minus::number minus
wrong thing::wrong thing
small correction::small correction
log base::log base
taking log::taking log
equals log::equals log
simple right::simple right
derived value::derived value
right value::right value
level number::level number
leaves suppose::leaves suppose
tree lets::tree lets
level starting::level starting
big difference::big difference
difference lets::difference lets
tree hanging::tree hanging
root level::root level
large height::large height
largest value::largest value
largest height::largest height
maximum height::maximum height
picture height::picture height
simple argument::simple argument
closest leaf::closest leaf
arbitrary binary::arbitrary binary
closet leaf::closet leaf
lets prove::lets prove
height imbalance::height imbalance
height balance::height balance
balance property::balance property
tree extends::tree extends
problem height::problem height
means levels::means levels
full full::full full
full means::full means
lets substitute::lets substitute
thing square::thing square
square root::square root
older bound::older bound
exponential number::exponential number
exponential right::exponential right
logarithmic height::logarithmic height
height property::height property
lets summarize::lets summarize
change things::change things
atleast half::atleast half
starts thinking::starts thinking
full height::full height
first edge::first edge
levels means::levels means
structural fact::structural fact
logarithmic depth::logarithmic depth
height order::height order
balanced property::balanced property
first step::first step
parent pointers::parent pointers
assume march::assume march
first place::first place
height change::height change
change appears::change appears
parent parent::parent parent
first node::first node
imbalance property::imbalance property
empty node::empty node
original tree::original tree
node lets::node lets
property violated::property violated
balance properties::balance properties
grand child::grand child
balanced tree::balanced tree
rotation operation::rotation operation
todays class::todays class
recurrence relations::recurrence relations
ways solving::ways solving
structural property::structural property
similar bound::similar bound
end today::end today
avl::avl
trees::trees
class::class
talking::talking
last::last
binary::binary
search::search
data::data
structure::structure
problem::problem
tree::tree
recall::recall
operations::operations
insertion::insertion
deletion::deletion
proportional::proportional
height::height
bad::bad
order::order
end::end
minus::minus
created::created
doesn::doesn
today::today
call::call
tress::tress
balanced::balanced
ignore::ignore
white::white
spots::spots
showing::showing
shown::shown
keys::keys
inside::inside
nodes::nodes
right::right
left::left
root::root
written::written
node::node
define::define
turn::turn
sub::sub
rooted::rooted
instance::instance
set::set
descendents::descendents
previous::previous
classes::classes
two::two
level::level
modify::modify
single::single
calling::calling
numbers::numbers
beginning::beginning
entire::entire
four::four
purpose::purpose
put::put
leaves::leaves
parents::parents
means::means
children::children
difference::difference
heights::heights
case::case
differences::differences
definition::definition
true::true
properties::properties
internal::internal
differ::differ
leaf::leaf
make::make
incidence::incidence
talk::talk
sis::sis
missing::missing
understand::understand
made::made
change::change
absence::absence
note::note
shift::shift
noise::noise
switch::switch
thing::thing
huge::huge
equal::equal
write::write
violated::violated
kind::kind
good::good
lets::lets
figure::figure
outs::outs
out::out
gain::gain
gained::gained
log::log
prove::prove
minutes::minutes
claim::claim
directly::directly
small::small
slightly::slightly
argument::argument
smallest::smallest
number::number
quantities::quantities
minimum::minimum
quantity::quantity
implies::implies
proportion::proportion
don::don
heritage::heritage
find::find
trouble::trouble
showed::showed
applied::applied
complete::complete
large::large
ten::ten
counting::counting
equals::equals
suppose::suppose
side::side
pick::pick
smaller::smaller
recurrence::recurrence
relationship::relationship
relation::relation
satisfied::satisfied
solve::solve
base::base
condition::condition
close::close
form::form
expression::expression
solving::solving
run::run
approximately::approximately
first::first
fact::fact
larger::larger
grows::grows
reduce::reduce
atleast::atleast
largest::largest
earlier::earlier
times::times
strictly::strictly
drop::drop
place::place
simple::simple
solved::solved
eventually::eventually
steps::steps
great::great
assume::assume
integer::integer
begin::begin
value::value
replacing::replacing
argued::argued
maximum::maximum
algorithms::algorithms
satisfy::satisfy
login::login
follow::follow
confused::confused
taking::taking
function::function
replace::replace
student::student
staff::staff
clarify::clarify
greater::greater
big::big
clear::clear
confusion::confusion
question::question
point::point
dense::dense
factor::factor
exercise::exercise
show::show
fairly::fairly
crude::crude
analysis::analysis
sharper::sharper
bound::bound
hindi::hindi
induction::induction
tight::tight
constant::constant
half::half
bias::bias
argue::argue
proving::proving
statement::statement
knowing::knowing
telling::telling
pay::pay
back::back
minute::minute
mistake::mistake
redefine::redefine
hypothesis::hypothesis
lager::lager
cancel::cancel
terms::terms
appropriately::appropriately
square::square
multiply::multiply
quadratic::quadratic
equation::equation
roots::roots
negative::negative
wont::wont
roughly::roughly
golden::golden
ratio::ratio
fibonacci::fibonacci
add::add
sides::sides
worked::worked
guess::guess
wrong::wrong
precisely::precisely
dividing::dividing
correction::correction
require::require
continue::continue
equality::equality
power::power
works::works
agreed::agreed
ways::ways
simpler::simpler
technique::technique
derived::derived
essentially::essentially
verified::verified
bit::bit
detail::detail
closest::closest
requires::requires
proof::proof
important::important
leafs::leafs
work::work
starting::starting
start::start
draw::draw
picture::picture
color::color
red::red
hanging::hanging
child::child
blue::blue
general::general
basically::basically
arbitrary::arbitrary
taller::taller
property::property
part::part
band::band
width::width
closet::closet
levels::levels
contradiction::contradiction
contradict::contradict
guy::guy
imbalance::imbalance
balance::balance
understands::understands
extends::extends
provided::provided
guide::guide
descendants::descendants
completely::completely
full::full
agree::agree
substitute::substitute
proved::proved
coming::coming
older::older
exponential::exponential
give::give
logarithmic::logarithmic
method::method
shop::shop
long::long
summarize::summarize
concerned::concerned
things::things
pretty::pretty
rewording::rewording
starts::starts
thinking::thinking
stars::stars
bottom::bottom
initially::initially
edge::edge
lot::lot
straight::straight
structural::structural
mind::mind
intuition::intuition
wise::wise
depth::depth
looked::looked
nice::nice
lgorithmic::lgorithmic
certainty::certainty
easy::easy
forget::forget
sense::sense
insert::insert
treat::treat
consequence::consequence
step::step
position::position
element::element
marching::marching
route::route
parent::parent
pointers::pointers
march::march
updating::updating
encountered::encountered
changed::changed
giving::giving
flavor::flavor
done::done
doing::doing
appears::appears
inserted::inserted
move::move
hit::hit
path::path
grandchild::grandchild
skip::skip
idea::idea
empty::empty
originally::originally
original::original
type::type
fifty::fifty
grand::grand
window::window
leave::leave
rotate::rotate
rotation::rotation
operation::operation
mysterious::mysterious
automated::automated
program::program
rotations::rotations
retained::retained
todays::todays
defined::defined
crucially::crucially
spend::spend
figuring::figuring
relations::relations
similar::similar
