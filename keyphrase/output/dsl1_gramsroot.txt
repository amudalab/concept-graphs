structures and algorithms::structures and algorithms
terminologies regarding data::terminologies regarding data
definitions an algorithm::definitions an algorithm
programming language data::programming language data
language data structure::language data structure
organize the data::organize the data
lot of data::lot of data
process develop data::process develop data
develop data structures::develop data structures
organizing the data::organizing the data
problem an algorithmic::problem an algorithmic
specification a sorted::specification a sorted
non decreasing sequence::non decreasing sequence
sequence of natural::sequence of natural
numbers of non-zero::numbers of non-zero
completely specified input::completely specified input
examples of input::examples of input
meets the specification::meets the specification
instance a sorted::instance a sorted
finite length forms::finite length forms
forms an instance::forms an instance
number of instances::number of instances
sequence of sorted::sequence of sorted
numbers as input::numbers as input
input an algorithm::input an algorithm
describing the actions::describing the actions
infinitely many input::infinitely many input
instances and algorithms::instances and algorithms
algorithms for solving::algorithms for solving
solving certain problem::solving certain problem
brings the notion::brings the notion
notion of good::notion of good
good algorithm good::good algorithm good
algorithm good algorithm::algorithm good algorithm
takes less memory::takes less memory
measures of efficiency::measures of efficiency
analyzing the running::analyzing the running
analyzing the space::analyzing the space
efficiency of algorithms::efficiency of algorithms
function of input::function of input
behavior of increase::behavior of increase
size of input::size of input
measure the running::measure the running
implement the algorithm::implement the algorithm
write a program::write a program
language you run::language you run
run the program::run the program
program with varying::program with varying
varying data sets::varying data sets
larger data sets::larger data sets
kinds of varying::kinds of varying
takes and clock::takes and clock
utility like system::utility like system
current time millis::current time millis
good your algorithms::good your algorithms
determine how good::determine how good
good your algorithm::good your algorithm
algorithm is implementing::algorithm is implementing
spend considerable amount::spend considerable amount
set of inputs::set of inputs
run your experiment::run your experiment
set of instances::set of instances
algorithm is taking::algorithm is taking
comparison platform means::comparison platform means
hardware and software::hardware and software
machines would make::machines would make
make a difference::make a difference
point would make::point would make
develop the general::develop the general
develop a high::develop a high
high level description::high level description
describing an algorithm::describing an algorithm
description to figure::description to figure
out the running::out the running
system a methodology::system a methodology
evaluate the efficiency::evaluate the efficiency
doing this algorithm::doing this algorithm
takes an array::takes an array
stores an integer::stores an integer
find the maximum::find the maximum
array algorithm array::array algorithm array
algorithm array max::algorithm array max
syntax is wrong::syntax is wrong
mixture of natural::mixture of natural
high-level programming concepts::high-level programming concepts
program is doing::program is doing
doing is clear::doing is clear
variable called current::variable called current
array current max::array current max
current maximum element::current maximum element
update the current::update the current
return current max::return current max
max if current::max if current
conveys the idea::conveys the idea
concepts thus pseudo-code::concepts thus pseudo-code
structured than usual::structured than usual
language how pseudo-code::language how pseudo-code
numeric and boolean::numeric and boolean
relationship in java::relationship in java
parameter it takes::parameter it takes
kinds of programming::kinds of programming
terminates and return::terminates and return
call a method::call a method
object used calls::object used calls
specifies the type::specifies the type
low level operation::low level operation
call or return::call or return
operations or logical::operations or logical
operation * data::operation * data
arithmetic an logical::arithmetic an logical
inspect the pseudo::inspect the pseudo
code and count::code and count
count the number::count the number
number of primitive::number of primitive
sorting the input::sorting the input
sequence of numbers::sequence of numbers
numbers and output::numbers and output
non decreasing order::non decreasing order
input any set::input any set
set of numbers::set of numbers
make an output::make an output
algorithm should sort::algorithm should sort
sort the numbers::sort the numbers
produce the sequence::produce the sequence
running time depends::running time depends
number of elements::number of elements
sorted these numbers::sorted these numbers
things the first::things the first
first sorting technique::first sorting technique
game of cards::game of cards
strategy you follow::strategy you follow
set of cards::set of cards
hand you start::hand you start
card and insert::card and insert
jack and queen::jack and queen
cards and inserted::cards and inserted
pseudo-code for insertion::pseudo-code for insertion
give an array::give an array
array of integers::array of integers
integers as input::integers as input
input and output::input and output
sorted the output::sorted the output
variables or indices::variables or indices
place to insert::place to insert
loop it starts::loop it starts
move it right::move it right
place i run::place i run
find an element::find an element
insert this loop::insert this loop
loop will continue::loop will continue
loop will terminate::loop will terminate
insert the element::insert the element
shifting the element::shifting the element
element one step::element one step
step 9th location::step 9th location
location becomes empty::location becomes empty
put the key::put the key
find the right::find the right
element and insert::element and insert
analyze this algorithm::analyze this algorithm
arrow please make::arrow please make
make a correction::make a correction
,c2 ,c3 ,c4::,c2 ,c3 ,c4
,c3 ,c4 ,c5::,c3 ,c4 ,c5
,c4 ,c5 ,c6::,c4 ,c5 ,c6
,c6 just represent::,c6 just represent
represent the amount::represent the amount
counting the number::counting the number
number of times::number of times
operations is executed::operations is executed
operation is done::operation is done
done n times::done n times
times i start::times i start
start by assigning::start by assigning
roughly n times::roughly n times
times just leave::times just leave
leave the comment::leave the comment
counts the number::counts the number
shift an element::shift an element
count that quantity::count that quantity
checking this condition::checking this condition
reach this condition::reach this condition
times the total::times the total
key this statement::key this statement
quantity which depends::quantity which depends
sorting the instance::sorting the instance
compare the element::compare the element
times n minus::times n minus
talk about asymptotic::talk about asymptotic
case the total::case the total
times some constant::times some constant
minus some constant::minus some constant
linear time algorithm::linear time algorithm
worst and average::worst and average
interested in sorting::interested in sorting
sorting n numbers::sorting n numbers
case the worst::case the worst
case is defined::case is defined
1size of size::1size of size
give the values::give the values
compute worst case::compute worst case
create a plot::create a plot
out the worst::out the worst
monotonically increasing plots::monotonically increasing plots
algorithm will increase::algorithm will increase
size becomes larger::size becomes larger
easiest to work::easiest to work
work with worst::work with worst
long your algorithm::long your algorithm
algorithms worst case::algorithms worst case
worst case occurs::worst case occurs
algorithm is close::algorithm is close
worst case average::worst case average
case average case::case average case
difficult to compute::difficult to compute
instance is drawn::instance is drawn
quantity to work::quantity to work
measure of interest::measure of interest
working with asymptotic::working with asymptotic
kind of thing::kind of thing
analyze the running::analyze the running
rid of superficial::rid of superficial
,because this constant::,because this constant
interested to distinguish::interested to distinguish
input size doubles::input size doubles
doubles the running::doubles the running
increases four fold::increases four fold
interested in capturing::interested in capturing
analysis clearly explains::analysis clearly explains
increases with increase::increases with increase
increase in input::increase in input
represents the input::represents the input
input size increases::input size increases
drawn two functions::drawn two functions
functions the function::functions the function
function in red::function in red
function the function::function the function
function in green::function in green
examples would clarify::examples would clarify
examples the function::examples the function
scale the scale::scale the scale
similarly on x-axis::similarly on x-axis
x-axis the red::x-axis the red
red colored line::red colored line
point of crossing::point of crossing
straight line displaced::straight line displaced
displaced by suitable::displaced by suitable
amount the green::amount the green
blue in color::blue in color
out a constant::out a constant
pick a larger::pick a larger
out these things::out these things
simple rule suppose::simple rule suppose
drop all constants::drop all constants
lower order terms::lower order terms
order terms forget::order terms forget
forget the constant::forget the constant
drop the constant::drop the constant
constant and lower::constant and lower
drop all lower::drop all lower
fastest growing term::fastest growing term
drop my constant::drop my constant
limit this quantity::limit this quantity
times this quantity::times this quantity
error the function::error the function
provide as strong::provide as strong
statement is true::statement is true
express the number::express the number
executed during run::executed during run
algorithm which takes::algorithm which takes
takes the number::takes the number
increase four fold::increase four fold
similarly our algorithm::similarly our algorithm
hierarchy of functions::hierarchy of functions
order of log::order of log
word of caution::word of caution
algorithm whose running::algorithm whose running
1,000,000 n algorithm::1,000,000 n algorithm
limit is achieved::limit is achieved
achieved very late::achieved very late
large for small::large for small
examples of asymptotic::examples of asymptotic
output an array::output an array
compute each element::compute each element
taking the value::taking the value
running the index::running the index
dividing the value::dividing the value
compute the running::compute the running
n-1 this entire::n-1 this entire
thing is done::thing is done
times the steps::times the steps
steps are executed::steps are executed
kind of repeating::kind of repeating
divide this sum::divide this sum
doing two primitive::doing two primitive
two primitive operations::two primitive operations
operations that makes::operations that makes
makes an order::makes an order
order n times::order n times
loop is executed::loop is executed
executed n times::executed n times
linear and quadratic::linear and quadratic
quadratic and logarithmic::quadratic and logarithmic
constant k algorithm::constant k algorithm
notation and big-theta::notation and big-theta
notation the big-omega::notation the big-omega
bound the function::bound the function
two more related::two more related
related asymptotic notations::related asymptotic notations
analogs of big-oh::analogs of big-oh
big-oh and big-omega::big-oh and big-omega
analogy of real::analogy of real
talk of equality::talk of equality
equal little-oh corresponds::equal little-oh corresponds
part the formal::part the formal
definition for little-oh::definition for little-oh
defines the difference::defines the difference
largest problem size::largest problem size
hour the largest::hour the largest
increases an hour::increases an hour
problem you solve::problem you solve
log n algorithm::log n algorithm
solve for problem::solve for problem
millions of years::millions of years
years to solve::years to solve
data structures::data structures
basic terminologies::basic terminologies
simple definitions::simple definitions
computational procedure::computational procedure
programming language::programming language
language data::language data
data structure::data structure
program hope::program hope
process develop::process develop
develop data::develop data
algorithmic problem::algorithmic problem
non decreasing::non decreasing
decreasing sequence::decreasing sequence
natural numbers::natural numbers
finite length::finite length
output specification::output specification
non-decreasing sequence::non-decreasing sequence
length forms::length forms
nondecreasing numbers::nondecreasing numbers
input instance::input instance
input instances::input instances
good algorithm::good algorithm
efficient algorithm::efficient algorithm
efficient efficient::efficient efficient
input size::input size
small input::small input
program running::program running
experimental study::experimental study
varying data::varying data
data sets::data sets
larger data::larger data
varying composition::varying composition
program takes::program takes
system utility::system utility
huge overhead::huge overhead
considerable amount::considerable amount
limited set::limited set
small set::small set
comparison platform::comparison platform
platform means::platform means
software environment::software environment
software environments::software environments
first lecture::first lecture
general methodology::general methodology
high level::high level
level description::level description
pseudo code::pseudo code
earlier courses::earlier courses
algorithm doing::algorithm doing
algorithm takes::algorithm takes
maximum element::maximum element
array algorithm::array algorithm
algorithm array::algorithm array
array max::array max
natural language::natural language
high-level programming::high-level programming
programming concepts::programming concepts
if-then-else statement::if-then-else statement
current max::current max
first element::first element
remaining element::remaining element
current maximum::current maximum
current element::current element
loop terminates::loop terminates
simple algorithm::simple algorithm
usual prose::usual prose
standard numeric::standard numeric
boolean expressions::boolean expressions
assignment operator::assignment operator
equality operator::equality operator
equality relationship::equality relationship
declare methods::declare methods
takes algorithm::takes algorithm
programming construct::programming construct
index array::index array
procedure terminates::procedure terminates
return value::return value
value returned::value returned
function returns::function returns
object method::object method
object specifies::object specifies
analyze algorithms::analyze algorithms
primitive operations::primitive operations
primitive operation::primitive operation
low level::low level
level operation::level operation
data movement::data movement
control statement::control statement
subroutine call::subroutine call
arithmetic operations::arithmetic operations
logical operations::logical operations
e.g addition::e.g addition
decreasing order::decreasing order
nondecreasing order::nondecreasing order
non-decreasing order::non-decreasing order
output algorithm::output algorithm
increasing order::increasing order
sorted order::sorted order
first sorting::first sorting
sorting technique::sorting technique
playing game::playing game
empty hand::empty hand
first card::first card
place suppose::place suppose
right place::right place
insertion sort::insertion sort
original numbers::original numbers
key key::key key
sorted sequence::sorted sequence
decrease index::decrease index
value j-1::value j-1
first place::first place
8th location::8th location
empty location::empty location
small mistake::small mistake
last line::last line
left arrow::left arrow
operation takes::operation takes
computer system::computer system
,c2 ,c3::,c2 ,c3
,c3 ,c4::,c3 ,c4
,c4 ,c5::,c4 ,c5
,c5 ,c6::,c5 ,c6
entire program::entire program
small errors::small errors
operation key::operation key
comment statement::comment statement
total number::total number
problem problem::problem problem
last element::last element
3rd element::3rd element
4th element::4th element
the1st element::the1st element
constant times::constant times
asymptotic analysis::asymptotic analysis
constant minus::constant minus
worst case::worst case
average case::average case
infinite bars::infinite bars
inputs size::inputs size
increasing plots::increasing plots
input increases::input increases
upper bound::upper bound
algorithms worst::algorithms worst
case occurs::case occurs
case average::case average
harder quantity::harder quantity
superficial details::superficial details
quadratic behavior::quadratic behavior
size doubles::size doubles
algorithm increases::algorithm increases
crucial point::crucial point
big-oh o-notation::big-oh o-notation
nonnegative functions::nonnegative functions
size increases::size increases
nondecreasing functions::nondecreasing functions
exist constants::exist constants
non-linear function::non-linear function
exponential scale::exponential scale
scale increases::scale increases
red colored::red colored
colored line::colored line
blue line::blue line
dotted line::dotted line
straight line::straight line
line displaced::line displaced
suitable amount::suitable amount
green line::green line
simple rule::simple rule
rule suppose::rule suppose
lower order::lower order
order terms::order terms
terms forget::terms forget
complicated function::complicated function
growing term::growing term
common error::common error
strong amount::strong amount
subsequent slides::subsequent slides
first algorithm::first algorithm
linear running::linear running
small instances::small instances
numbers sitting::numbers sitting
entire thing::entire thing
total running::total running
dominant thing::dominant thing
step mentioned::step mentioned
simple problem::simple problem
last step::last step
repeating computations::repeating computations
single variable::single variable
asymptotic running::asymptotic running
linear algorithm::linear algorithm
big-oh notation::big-oh notation
bigomega notation::bigomega notation
big-theta notation::big-theta notation
big-omega notation::big-omega notation
lower bound::lower bound
related asymptotic::related asymptotic
asymptotic notations::asymptotic notations
little-oh notation::little-oh notation
non-tight analogs::non-tight analogs
real numbers::real numbers
equal little-oh::equal little-oh
little-oh corresponds::little-oh corresponds
littleomega corresponds::littleomega corresponds
formal definition::formal definition
running times::running times
largest problem::largest problem
problem size::problem size
differences happening::differences happening
huge increase::huge increase
large increase::large increase
data::data
structures::structures
algorithms::algorithms
learn::learn
basic::basic
terminologies::terminologies
notations::notations
rest::rest
begin::begin
simple::simple
definitions::definitions
algorithm::algorithm
outline::outline
steps::steps
program::program
computational::computational
procedure::procedure
hand::hand
implementation::implementation
programming::programming
language::language
structure::structure
organize::organize
effectively::effectively
hope::hope
familiar::familiar
array::array
list::list
lot::lot
problem::problem
solve::solve
process::process
develop::develop
organizing::organizing
algorithmic::algorithmic
essentially::essentially
specifications::specifications
input::input
output::output
specification::specification
sorted::sorted
non::non
decreasing::decreasing
sequence::sequence
natural::natural
numbers::numbers
non-zero::non-zero
finite::finite
length::length
1,20,908,909,100000,1000000000::1,20,908,909,100000,1000000000
completely::completely
two::two
examples::examples
meets::meets
instance::instance
non-decreasing::non-decreasing
forms::forms
instances::instances
number::number
nondecreasing::nondecreasing
describing::describing
actions::actions
infinitely::infinitely
solving::solving
brings::brings
notion::notion
good::good
efficient::efficient
small::small
running::running
takes::takes
memory::memory
measures::measures
efficiency::efficiency
working::working
things::things
spending::spending
analyzing::analyzing
spend::spend
space::space
interested::interested
function::function
size::size
imagine::imagine
amount::amount
times::times
larger::larger
increase::increase
behavior::behavior
interest::interest
measure::measure
experimental::experimental
study::study
implement::implement
means::means
write::write
run::run
varying::varying
sets::sets
smaller::smaller
kinds::kinds
composition::composition
clock::clock
sit::sit
stopwatch::stopwatch
system::system
utility::utility
current::current
millis::millis
figure::figure
out::out
call::call
limitations::limitations
detail::detail
first::first
determine::determine
implementing::implementing
huge::huge
overhead::overhead
considerable::considerable
experiments::experiments
done::done
limited::limited
set::set
inputs::inputs
experiment::experiment
taking::taking
considered::considered
decide::decide
platforms::platforms
comparison::comparison
platform::platform
hardware::hardware
software::software
environment::environment
machines::machines
make::make
difference::difference
fact::fact
users::users
point::point
messy::messy
environments::environments
part::part
lecture::lecture
general::general
methodology::methodology
analyze::analyze
high::high
level::level
description::description
account::account
evaluate::evaluate
independent::independent
pseudo-code::pseudo-code
purpose::purpose
pseudo::pseudo
code::code
earlier::earlier
courses::courses
doing::doing
stores::stores
integer::integer
find::find
maximum::maximum
element::element
max::max
mentioned::mentioned
syntax::syntax
wrong::wrong
mixture::mixture
high-level::high-level
concepts::concepts
loop::loop
if-then-else::if-then-else
statement::statement
bother::bother
semicolon::semicolon
colon::colon
required::required
compiler::compiler
understanding::understanding
clear::clear
beginning::beginning
track::track
variable::variable
initialized::initialized
remaining::remaining
compare::compare
update::update
terminates::terminates
return::return
understand::understand
computer::computer
conveys::conveys
idea::idea
structured::structured
usual::usual
prose::prose
formal::formal
standard::standard
numeric::numeric
boolean::boolean
expressions::expressions
assignment::assignment
operator::operator
java::java
equality::equality
relationship::relationship
declare::declare
methods::methods
parameter::parameter
param::param
param2::param2
construct::construct
repeat::repeat
index::index
value::value
returned::returned
returns::returns
method::method
argument::argument
object::object
calls::calls
args::args
specifies::specifies
type::type
identify::identify
primitive::primitive
operations::operations
operation::operation
low::low
movement::movement
control::control
branch::branch
subroutine::subroutine
arithmetic::arithmetic
logical::logical
assign::assign
e.g::e.g
addition::addition
inspect::inspect
count::count
executed::executed
sorting::sorting
permutation::permutation
order::order
requirements::requirements
sort::sort
produce::produce
increasing::increasing
depends::depends
elements::elements
long::long
depend::depend
technique::technique
playing::playing
game::game
cards::cards
strategy::strategy
follow::follow
picking::picking
dealt::dealt
start::start
empty::empty
pick::pick
card::card
insert::insert
place::place
suppose::suppose
jack::jack
queen::queen
put::put
right::right
inserting::inserting
insertion::insertion
picked::picked
inserted::inserted
give::give
integers::integers
original::original
variables::variables
indices::indices
j-1::j-1
location::location
vary::vary
2-n::2-n
key::key
i.e::i.e
1_j-1::1_j-1
decrease::decrease
starts::starts
move::move
7th::7th
greater::greater
continue::continue
terminate::terminate
reach::reach
moved::moved
shifting::shifting
step::step
note::note
shift::shift
9th::9th
8th::8th
eventually::eventually
implemented::implemented
slightly::slightly
left::left
mistake::mistake
last::last
line::line
arrow::arrow
correction::correction
comparing::comparing
depending::depending
,c2::,c2
,c3::,c3
,c4::,c4
,c5::,c5
,c6::,c6
represent::represent
units::units
counting::counting
entire::entire
assigning::assigning
4,5,6,7::4,5,6,7
increment::increment
check::check
counted::counted
errors::errors
important::important
roughly::roughly
operation.how::operation.how
n-1::n-1
for3::for3
leave::leave
comment::comment
counts::counts
previous::previous
quantity::quantity
checking::checking
condition::condition
iteration::iteration
total::total
sum::sum
exit::exit
knew::knew
constants::constants
computed::computed
makes::makes
1st::1st
2nd::2nd
3rd::3rd
4th::4th
the1st::the1st
end::end
case::case
equal::equal
summation::summation
kind::kind
constant::constant
minus::minus
talk::talk
asymptotic::asymptotic
analysis::analysis
meant::meant
linear::linear
average::average
expect::expect
worst::worst
half::half
behaves::behaves
defined::defined
smallest::smallest
infinite::infinite
bars::bars
1size::1size
values::values
compute::compute
sizes::sizes
create::create
plot::plot
monotonically::monotonically
plots::plots
increases::increases
lesser::lesser
easiest::easiest
work::work
upper::upper
bound::bound
tells::tells
occurs::occurs
fairly::fairly
close::close
bad::bad
differences::differences
difficult::difficult
drawn::drawn
distribution::distribution
expected::expected
typically::typically
harder::harder
thing::thing
goal::goal
rid::rid
superficial::superficial
details::details
squared::squared
,because::,because
dependent::dependent
factors::factors
distinguish::distinguish
quadratic::quadratic
doubles::doubles
four::four
fold::fold
capturing::capturing
limit::limit
crucial::crucial
explains::explains
big-oh::big-oh
o-notation::o-notation
functions::functions
represents::represents
nonnegative::nonnegative
exist::exist
red::red
green::green
continues::continues
clarify::clarify
wondering::wondering
non-linear::non-linear
scale::scale
exponential::exponential
y-axis::y-axis
similarly::similarly
x-axis::x-axis
colored::colored
blue::blue
dotted::dotted
crossing::crossing
straight::straight
displaced::displaced
suitable::suitable
intercept::intercept
color::color
choose::choose
violated::violated
rule::rule
log::log
drop::drop
lower::lower
terms::terms
forget::forget
7n-3::7n-3
complicated::complicated
fastest::fastest
growing::growing
term::term
happen::happen
common::common
error::error
provide::provide
strong::strong
true::true
subsequent::subsequent
slides::slides
express::express
double::double
hierarchy::hierarchy
word::word
caution::caution
1,000,000::1,000,000
1,000,000n::1,000,000n
achieved::achieved
late::late
large::large
careful::careful
sitting::sitting
basically::basically
0-10::0-10
summing::summing
accumulator::accumulator
dividing::dividing
11,12,13,14::11,12,13,14
initially::initially
0,1,2,3::0,1,2,3
dominant::dominant
solution::solution
accumulating::accumulating
i-1::i-1
computing::computing
repeating::repeating
computations::computations
single::single
prefixes::prefixes
divide::divide
finish::finish
reuse::reuse
freely::freely
logarithmic::logarithmic
polynomial::polynomial
introduced::introduced
notation::notation
bigomega::bigomega
big-theta::big-theta
big-omega::big-omega
omega::omega
picture::picture
illustrates::illustrates
sandwiched::sandwiched
lies::lies
grows::grows
thinking::thinking
related::related
little-oh::little-oh
little-omega::little-omega
non-tight::non-tight
analogs::analogs
analogy::analogy
real::real
corresponds::corresponds
strictly::strictly
littleomega::littleomega
infact::infact
definition::definition
big::big-
defines::defines
400n::400n
20n::20n
listed::listed
largest::largest
minute::minute
hour::hour
happening::happening
3600seconds::3600seconds
millions::millions
years::years
it.this::it.this
