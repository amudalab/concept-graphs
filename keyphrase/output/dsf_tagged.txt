data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 2/CD/2 stacks/NNS/stacks let/VBP/let us/PRP/us see/VBP/see about/IN/about stacks/NNP/stacks. we/PRP/we will/MD/will mainly/RB/mainly see/VB/see about/IN/about stacks/NNS/stacks /,/, besides/VBZ/besides we/PRP/we will/MD/will talk/VB/talk about/IN/about abstract/NN/abstract data/NNS/data types/NNS/types /,/, interfaces/NNS/interfaces /,/, exceptions/NNS/exceptions /,/, how/WRB/how stacks/NNS/stacks are/VBP/are implemented/VBN/implemented in/IN/in java/NN/java and/CC/and application/NN/application to/TO/to the/DT/the analysis/NN/analysis of/IN/of time/NN/time series/NNP/series. we/PRP/we will/MD/will also/RB/also talk/VB/talk about/IN/about growable/JJ/growable stacks/NNS/stacks /,/, which/WDT/which do/VBP/do a/DT/a little/RB/little bit/NN/bit of/IN/of amortized/JJ/amortized analysis/NN/analysis and/CC/and then/RB/then we/PRP/we will/MD/will talk/VB/talk about/IN/about stacks/NNS/stacks in/IN/in java/NN/java virtual/JJ/virtual machine/NNP/machine. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 16/CD/16 /CD/) what/WP/what is/VBZ/is an/DT/an abstract/NN/abstract data/NNS/data type/NN/type ?/./? it/PRP/it is/VBZ/is basically/RB/basically a/DT/a specification/NN/specification of/IN/of the/DT/the instances/NNS/instances and/CC/and the/DT/the set/NN/set of/IN/of axioms/NNS/axioms that/WDT/that define/NN/define the/DT/the semantics/NNS/semantics of/IN/of the/DT/the operations/NNS/operations on/IN/on those/DT/those instances/NNP/instances. what/WP/what does/VBZ/does it/PRP/it all/DT/all mean/JJ/mean ?/./? you/PRP/you know/VBP/know the/DT/the data/NNS/data types/VBZ/types like/IN/like integer/JJR/integer /,/, real/JJ/real numbers/NNS/numbers and/CC/and so/RB/so on/NNP/on. you/PRP/you can/MD/can understand/VB/understand the/DT/the notion/NN/notion of/IN/of addition/NN/addition and/CC/and that/IN/that is/VBZ/is the/DT/the same/JJ/same way/NN/way as/IN/as you/PRP/you add/VBP/add 2/CD/2 integers/NNS/integers in/IN/in mathematics/NNP/mathematics. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 51/CD/51 /CD/) similarly/RB/similarly we/PRP/we will/MD/will define/VB/define data/NNS/data types/NNS/types and/CC/and certain/JJ/certain operations/NNS/operations on/IN/on those/DT/those data/NNS/data types/NNP/types. those/DT/those operations/NNS/operations would/MD/would be/VB/be defined/VBN/defined through/IN/through an/DT/an interface/NN/interface which/WDT/which basically/RB/basically gives/VBZ/gives us/PRP/us the/DT/the signature/NN/signature of/IN/of the/DT/the operation/NN/operation that/IN/that is/VBZ/is the/DT/the parameters/NNS/parameters that/WDT/that operation/NN/operation requires/VBZ/requires and/CC/and so/RB/so on/NNP/on. we/PRP/we will/MD/will also/RB/also specify/VB/specify the/DT/the results/NNS/results of/IN/of those/DT/those operations/NNS/operations through/IN/through a/DT/a set/NN/set of/IN/of axioms/NNP/axioms. just/RB/just as/IN/as in/IN/in the/DT/the case/NN/case of/IN/of integers/NNS/integers /,/, you/PRP/you know/VBP/know the/DT/the sum/NN/sum of/IN/of 2/CD/2 integers/NNS/integers as/IN/as defined/VBN/defined in/IN/in mathematics/NNP/mathematics. for/IN/for example/NN/example if/IN/if you/PRP/you add/VBP/add a/DT/a variable/JJ/variable of/IN/of type/NN/type a/DT/a and/CC/and another/DT/another variable/JJ/variable of/IN/of type/NN/type b/NNP/b. if/IN/if you/PRP/you sum/VBP/sum them/PRP/them up/RP/up /,/, then/RB/then the/DT/the answer/NN/answer will/MD/will be/VB/be of/IN/of type/NN/type variable/JJ/variable as/IN/as you/PRP/you would/MD/would know/VB/know it/PRP/it from/IN/from your/PRP$/your mathematics/NNS/mathematics class/NNP/class. we/PRP/we will/MD/will be/VB/be clear/JJ/clear if/IN/if we/PRP/we see/VBP/see an/DT/an example/NNP/example. the/DT/the operations/NNS/operations that/IN/that you/PRP/you have/VBP/have been/VBN/been talking/VBG/talking about/IN/about are/JJ/are essentially/RB/essentially of/IN/of three/CD/three kinds/NNP/kinds. one/CD/one would/MD/would be/VB/be just/RB/just a/DT/a constructor/NN/constructor operation/NN/operation which/WDT/which is/VBZ/is as/RB/as same/JJ/same as/IN/as the/DT/the constructor/NN/constructor method/NN/method in/IN/in java/NNP/java. using/NN/using this/DT/this method/NN/method you/PRP/you can/MD/can create/VB/create an/DT/an instance/NN/instance of/IN/of that/DT/that particular/JJ/particular data/NNS/data type/NNP/type. when/WRB/when you/PRP/you are/VBP/are talking/VBG/talking about/IN/about sophisticated/JJ/sophisticated data/NNS/data types/NNS/types /,/, this/DT/this method/NN/method has/VBZ/has to/TO/to do/VB/do a/DT/a lot/NN/lot of/IN/of work/NN/work access/NN/access functions/NNS/functions are/VBP/are the/DT/the functions/NNS/functions which/WDT/which let/VB/let us/PRP/us to/TO/to access/NN/access elements/NNS/elements of/IN/of the/DT/the data/NNS/data type/NN/type and/CC/and manipulation/NN/manipulation procedure/NN/procedure would/MD/would let/VB/let us/PRP/us to/TO/to manipulate/VB/manipulate or/CC/or modify/VB/modify the/DT/the data/NNS/data type/NNP/type. why/WRB/why are/VBP/are we/PRP/we talking/VBG/talking about/IN/about data/NNS/data types/NNS/types ?/./? data/NNS/data types/NNS/types help/VBP/help us/PRP/us to/TO/to identify/VB/identify the/DT/the requirements/NNS/requirements for/IN/for the/DT/the building/VBG/building blocks/NNS/blocks of/IN/of our/PRP$/our algorithmic/JJ/algorithmic procedure/NNP/procedure. it/PRP/it provides/VBZ/provides a/DT/a language/NN/language which/WDT/which will/MD/will help/VB/help us/PRP/us to/TO/to talk/VB/talk at/IN/at a/DT/a higher/JJR/higher level/NN/level of/IN/of abstraction/NNP/abstraction. as/IN/as just/RB/just as/IN/as we/PRP/we are/VBP/are talking/VBG/talking in/IN/in terms/NNS/terms of/IN/of adding/VBG/adding up/RP/up of/IN/of integers/NNS/integers or/CC/or in/IN/in terms/NNS/terms of/IN/of stacks/NNS/stacks or/CC/or queues/NNS/queues or/CC/or any/DT/any of/IN/of the/DT/the advanced/JJ/advanced data/NNS/data type/NNP/type. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 17/CD/17 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 57/CD/57 /CD/) they/PRP/they encapsulate/VBP/encapsulate the/DT/the data/NNS/data structure/VBP/structure like/IN/like how/WRB/how the/DT/the data/NNS/data is/VBZ/is organized/VBN/organized and/CC/and the/DT/the algorithms/NNS/algorithms that/WDT/that work/NN/work on/IN/on that/DT/that data/NN/data structures/NNP/structures. also/RB/also they/PRP/they help/VBP/help us/PRP/us to/TO/to separate/VB/separate the/DT/the issues/NNS/issues of/IN/of correctness/NN/correctness and/CC/and efficiency/NNP/efficiency. we/PRP/we will/MD/will see/VB/see more/RBR/more of/IN/of this/DT/this as/IN/as we/PRP/we see/VBP/see the/DT/the example/NN/example of/IN/of data/NNS/data types/NNP/types. let/VB/let me/PRP/me start/VB/start by/IN/by giving/NN/giving a/DT/a simple/JJ/simple example/NN/example of/IN/of the/DT/the data/NNS/data type/NN/type and/CC/and that/IN/that is/VBZ/is a/DT/a dynamic/JJ/dynamic set/NNP/set. a/DT/a set/NN/set is/VBZ/is defined/VBN/defined as/RB/as a/DT/a collection/NN/collection of/IN/of objects/NNP/objects. suppose/NN/suppose we/PRP/we also/RB/also had/VBD/had operations/NNS/operations /,/, which/WDT/which would/MD/would let/VB/let us/PRP/us modify/VB/modify that/IN/that collection/NN/collection of/IN/of objects/NNS/objects /,/, which/WDT/which means/VBZ/means add/VBP/add or/CC/or remove/VB/remove an/DT/an object/NN/object of/IN/of that/DT/that collection/NNP/collection. such/JJ/such a/DT/a set/NN/set we/PRP/we would/MD/would call/VB/call it/PRP/it as/IN/as a/DT/a dynamic/JJ/dynamic set/NNP/set. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 4/CD/4 /:/: 47/CD/47 /CD/) we/PRP/we call/VBP/call it/PRP/it as/IN/as dynamic/JJ/dynamic /,/, because/IN/because we/PRP/we are/VBP/are changing/VBG/changing the/DT/the set/NN/set which/WDT/which is/VBZ/is the/DT/the collection/NN/collection of/IN/of objects/NNP/objects. we/PRP/we will/MD/will create/VB/create data/NNS/data types/NNS/types for/IN/for such/JJ/such dynamic/JJ/dynamic sets/NNP/sets. what/WP/what are/VBP/are the/DT/the kinds/NNS/kinds of/IN/of methods/NNS/methods that/WDT/that you/PRP/you have/VBP/have in/IN/in a/DT/a dynamic/JJ/dynamic set/NN/set ?/./? you/PRP/you would/MD/would have/VB/have a/DT/a method/NN/method to/TO/to create/VB/create a/DT/a dynamic/JJ/dynamic set/NN/set /,/, which/WDT/which would/MD/would be/VB/be a/DT/a method/NN/method new/NNP/new. there/EX/there would/MD/would be/VB/be a/DT/a method/NN/method insert/NN/insert /,/, to/TO/to insert/VB/insert an/DT/an element/NN/element in/IN/in to/TO/to a/DT/a dynamic/JJ/dynamic set/NNP/set. s/NNS/s is/VBZ/is the/DT/the dynamic/JJ/dynamic set/NN/set and/CC/and this/DT/this method/NN/method has/VBZ/has two/CD/two parameters/NNS/parameters let/VB/let us/PRP/us say/VB/say /,/, the/DT/the set/NN/set s/VBZ/s and/CC/and the/DT/the element/NNP/element. the/DT/the result/NN/result is/VBZ/is an/DT/an instance/NN/instance of/IN/of the/DT/the set/NN/set itself/PRP/itself which/WDT/which gives/VBZ/gives a/DT/a new/JJ/new set/NN/set /,/, another/DT/another set/NN/set and/CC/and also/RB/also includes/VBZ/includes the/DT/the element/NN/element v/NN/v in/IN/in it/NNP/it. similarly/RB/similarly the/DT/the delete/JJ/delete method/NN/method removes/NNS/removes the/DT/the element/NN/element v/NN/v from/IN/from the/DT/the set/NN/set s/NNP/s. these/DT/these are/VBP/are the/DT/the two/CD/two methods/NNS/methods for/IN/for updating/VBG/updating the/DT/the set/NNP/set. new/JJ/new method/NN/method is/VBZ/is for/IN/for creating/VBG/creating or/CC/or constructing/VBG/constructing the/DT/the set/NN/set and/CC/and isin/NN/isin is/VBZ/is one/CD/one of/IN/of the/DT/the access/NN/access methods/NNP/methods. all/DT/all of/IN/of it/PRP/it is/VBZ/is telling/VBG/telling us/PRP/us whether/IN/whether the/DT/the element/NN/element is/VBZ/is in/IN/in the/DT/the set/NN/set or/CC/or not/NNP/not. the/DT/the return/NN/return value/NN/value is/VBZ/is of/IN/of type/NN/type boolean/NNP/boolean. if/IN/if v/NN/v is/VBZ/is in/IN/in the/DT/the set/NN/set then/RB/then it/PRP/it is/VBZ/is true/JJ/true otherwise/NN/otherwise false/NNP/false. axioms/NNS/axioms are/VBP/are the/DT/the one/CD/one which/WDT/which define/NN/define how/WRB/how the/DT/the operations/NNS/operations should/MD/should behave/NNP/behave. we/PRP/we can/MD/can write/VB/write axioms/NNS/axioms in/IN/in the/DT/the following/JJ/following form/NNP/form. when/WRB/when i/PRP/i create/VBP/create a/DT/a new/JJ/new set/NN/set and/CC/and if/IN/if the/DT/the set/NN/set is/VBZ/is empty/JJ/empty then/RB/then the/DT/the answer/NN/answer should/MD/should be/VB/be always/RB/always false/VB/false /,/, no/DT/no matter/NN/matter what/WP/what v/NN/v is/NNP/is. if/IN/if i/PRP/i have/VBP/have a/DT/a dynamic/JJ/dynamic set/NN/set s/NNS/s and/CC/and i/PRP/i insert/VBP/insert an/DT/an element/NN/element v/NN/v in/IN/in it/NNP/it. then/RB/then the/DT/the resulting/VBG/resulting set/NN/set which/WDT/which has/VBZ/has v/NN/v in/IN/in it/PRP/it should/MD/should be/VB/be true/NNP/true. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 5/CD/5 /:/: 37/CD/37 /CD/) if/IN/if i/PRP/i have/VBP/have a/DT/a set/NN/set s/VBZ/s and/CC/and when/WRB/when i/PRP/i insert/VBP/insert u/PRP/u in/IN/in it/PRP/it /,/, then/RB/then the/DT/the resulting/VBG/resulting set/NN/set has/VBZ/has u/NN/u in/IN/in it/NNP/it. then/RB/then if/IN/if i/PRP/i where/WRB/where to/TO/to ask/VB/ask whether/IN/whether v/NN/v is/VBZ/is in/IN/in the/DT/the resulting/VBG/resulting set/NN/set /,/, i/PRP/i will/MD/will know/VB/know that/IN/that only/RB/only if/IN/if v/NN/v was/VBD/was in/IN/in the/DT/the previous/JJ/previous set/NN/set s/NNP/s. thus/RB/thus the/DT/the answer/NN/answer to/TO/to this/DT/this operation/NN/operation isin/NN/isin /:/( delete/JJ/delete /NN/( s/NNS/s /,/, u/VBP/u /:/) /,/, v/NN/v /:/) /,/, should/MD/should be/VB/be the/DT/the same/JJ/same as/IN/as the/DT/the answer/NN/answer to/TO/to this/DT/this operation/NN/operation isin/NN/isin /:/( s/NNS/s /,/, v/NN/v /:/) /,/, provided/VBN/provided v/NN/v is/VBZ/is different/JJ/different from/IN/from u/NNP/u. isin/NN/isin /:/( delete/JJ/delete /NN/( s/NNS/s /,/, u/VBP/u /:/) /,/, v/NN/v /:/) =/:/= isin/NN/isin /:/( s/NNS/s /,/, v/NN/v /:/) /,/, if/IN/if v/NN/v u/NN/u suppose/NN/suppose i/PRP/i have/VBP/have a/DT/a set/NN/set s/VBZ/s and/CC/and i/PRP/i delete/VBP/delete v/NN/v from/IN/from it/NNP/it. if/IN/if i/PRP/i ask/VBP/ask whether/IN/whether v/NN/v is/VBZ/is in/IN/in the/DT/the resulting/VBG/resulting set/NN/set /,/, then/RB/then the/DT/the answer/NN/answer should/MD/should be/VB/be false/NNP/false. these/DT/these are/VBP/are some/DT/some basic/JJ/basic axioms/NNS/axioms that/WDT/that define/NN/define the/DT/the nature/NN/nature of/IN/of these/DT/these operations/NNS/operations and/CC/and also/RB/also the/DT/the functionality/NN/functionality of/IN/of these/DT/these operations/NNP/operations. still/RB/still we/PRP/we did/VBD/did not/RB/not specify/VB/specify how/WRB/how to/TO/to do/VB/do these/DT/these operations/NNS/operations or/CC/or we/PRP/we did/VBD/did not/RB/not talk/VB/talk about/IN/about an/DT/an algorithm/NN/algorithm or/CC/or any/DT/any procedure/NNP/procedure. at/IN/at the/DT/the least/JJS/least we/PRP/we have/VBP/have talked/VBN/talked about/IN/about the/DT/the code/NN/code for/IN/for implementing/NN/implementing the/DT/the dynamic/JJ/dynamic set/NNP/set. when/WRB/when you/PRP/you are/VBP/are talking/VBG/talking about/IN/about abstract/NN/abstract data/NNS/data types/NNS/types /,/, we/PRP/we are/VBP/are interested/JJ/interested in/IN/in more/JJR/more of/IN/of the/DT/the specification/NNP/specification. that/IN/that is/VBZ/is what/WP/what the/DT/the instances/NNS/instances would/MD/would be/VB/be like/IN/like and/CC/and what/WP/what are/VBP/are the/DT/the operations/NNS/operations permitted/VBD/permitted on/IN/on those/DT/those instances/NNS/instances /,/, and/CC/and the/DT/the axioms/NNS/axioms that/WDT/that govern/NN/govern those/DT/those operations/NNP/operations. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 6/CD/6 /:/: 46/CD/46 /CD/) some/DT/some simple/JJ/simple abstract/NN/abstract data/NNS/data type/NN/type that/IN/that you/PRP/you may/MD/may be/VB/be familiar/JJ/familiar with/IN/with is/VBZ/is queue/JJ/queue /,/, but/CC/but we/PRP/we will/MD/will be/VB/be doing/VBG/doing it/PRP/it later/NNP/later. let/VB/let us/PRP/us see/VB/see about/IN/about stacks/NNP/stacks. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8/CD/8 /:/: 52/CD/52 /CD/) what/WP/what is/VBZ/is the/DT/the stack/NN/stack ?/./? it/PRP/it is/VBZ/is the/DT/the collection/NN/collection of/IN/of elements/NNS/elements but/CC/but this/DT/this collection/NN/collection follows/VBZ/follows the/DT/the last-in-first-out/NN/last-in-first-out principle/NNP/principle. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? it/PRP/it means/VBZ/means that/IN/that the/DT/the element/NN/element which/WDT/which is/VBZ/is inserted/VBN/inserted last/JJ/last would/MD/would be/VB/be removed/VBN/removed first/NNP/first. if/IN/if i/PRP/i insert/VBP/insert an/DT/an element/NN/element and/CC/and then/RB/then i/PRP/i remove/VBP/remove an/DT/an element/NN/element from/IN/from this/DT/this collection/NNP/collection. then/RB/then the/DT/the element/NN/element that/IN/that would/MD/would be/VB/be removed/VBN/removed was/VBD/was the/DT/the one/CD/one which/WDT/which was/VBD/was inserted/VBN/inserted at/IN/at the/DT/the last/NNP/last. the/DT/the operation/NN/operation of/IN/of inserting/VBG/inserting an/DT/an element/NN/element is/VBZ/is called/VBN/called pushing/VBG/pushing onto/IN/onto the/DT/the stack/NN/stack and/CC/and the/DT/the operation/NN/operation of/IN/of removing/VBG/removing an/DT/an element/NN/element is/VBZ/is called/VBN/called popping/VBG/popping off/RP/off the/DT/the stack/NNP/stack. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 9/CD/9 /:/: 10/CD/10 /CD/) some/DT/some of/IN/of you/PRP/you might/MD/might have/VB/have seen/VBN/seen this/DT/this kind/NN/kind of/IN/of toys/NNP/toys. it/PRP/it has/VBZ/has a/DT/a collection/NN/collection of/IN/of elements/NNS/elements for/IN/for instance/NN/instance may/MD/may be/VB/be stack/RB/stack of/IN/of trays/NNS/trays in/IN/in your/PRP$/your mess/NNP/mess. what/WP/what you/PRP/you do/VBP/do is/VBZ/is when/WRB/when you/PRP/you put/VBD/put a/DT/a tray/NN/tray /,/, you/PRP/you put/VBD/put it/PRP/it on/IN/on the/DT/the top/JJ/top and/CC/and when/WRB/when you/PRP/you remove/VBP/remove it/PRP/it you/PRP/you would/MD/would always/RB/always remove/VB/remove the/DT/the one/CD/one which/WDT/which is/VBZ/is at/IN/at the/DT/the top/NNP/top. when/WRB/when you/PRP/you remove/VBP/remove or/CC/or pop/VB/pop of/IN/of an/DT/an element/NN/element /,/, it/PRP/it is/VBZ/is always/RB/always the/DT/the one/CD/one which/WDT/which you/PRP/you inserted/VBD/inserted at/IN/at the/DT/the last/NNP/last. we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define the/DT/the abstract/NN/abstract data/NNS/data type/NN/type that/IN/that is/VBZ/is supported/VBN/supported by/IN/by four/CD/four methods/NNS/methods which/WDT/which are/VBP/are the/DT/the key/JJ/key methods/NNP/methods. the/DT/the ?/./? new/JJ/new ?/./? is/VBZ/is a/DT/a method/NN/method to/TO/to create/VB/create a/DT/a stack/NNP/stack. in/IN/in the/DT/the push/NN/push method/NN/method when/WRB/when i/PRP/i specify/VBP/specify an/DT/an element/NN/element o/NN/o it/PRP/it adds/VBZ/adds this/DT/this element/NN/element to/TO/to the/DT/the abstract/NN/abstract data/NNS/data type/NNP/type. it/PRP/it inserts/VBZ/inserts an/DT/an object/NN/object o/NN/o on/IN/on to/TO/to the/DT/the top/JJ/top of/IN/of the/DT/the stack/NNP/stack. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 9/CD/9 /:/: 52/CD/52 /CD/) pop/NN/pop takes/VBZ/takes stack/NN/stack as/IN/as the/DT/the parameter/NN/parameter and/CC/and it/PRP/it does/VBZ/does not/RB/not take/VB/take any/DT/any parameter/NN/parameter other/JJ/other than/IN/than abstract/NN/abstract data/NNS/data type/NNP/type. when/WRB/when i/PRP/i say/VBP/say pop/JJ/pop the/DT/the stack/NN/stack /,/, it/PRP/it just/RB/just removes/VBZ/removes the/DT/the top/JJ/top element/NN/element from/IN/from the/DT/the stack/NNP/stack. if/IN/if the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty /,/, they/PRP/they should/MD/should flag/VB/flag an/DT/an error/NN/error stating/VBG/stating that/IN/that the/DT/the stack/NN/stack is/VBZ/is empty/NNP/empty. the/DT/the top/JJ/top operation/NN/operation returns/NNS/returns the/DT/the top/JJ/top element/NN/element /,/, it/PRP/it does/VBZ/does not/RB/not remove/VB/remove it/PRP/it and/CC/and that/IN/that is/VBZ/is how/WRB/how it/PRP/it differs/VBZ/differs from/IN/from the/DT/the pop/NNP/pop. pop/NN/pop operation/NN/operation removes/NNS/removes that/WDT/that element/NN/element but/CC/but the/DT/the top/JJ/top tell/NN/tell us/PRP/us only/RB/only about/IN/about the/DT/the top/JJ/top element/NNP/element. again/RB/again if/IN/if the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty then/RB/then top/JJ/top does/NNS/does not/RB/not make/VB/make any/DT/any sense/NN/sense /,/, it/PRP/it should/MD/should flag/VB/flag an/DT/an error/NNP/error. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 22/CD/22 /CD/) we/PRP/we can/MD/can also/RB/also have/VB/have some/DT/some support/NN/support methods/NNS/methods which/WDT/which will/MD/will help/VB/help us/PRP/us do/VB/do these/DT/these operations/NNP/operations. size/NN/size is/VBZ/is one/CD/one such/JJ/such method/NNP/method. size/NN/size tells/VBZ/tells us/PRP/us about/IN/about how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are there/RB/there in/IN/in the/DT/the stack/NN/stack and/CC/and isempty/NN/isempty tell/NN/tell us/PRP/us whether/IN/whether the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty or/CC/or not/NNP/not. the/DT/the 6/CD/6 methods/NNS/methods that/WDT/that we/PRP/we saw/VBD/saw are/VBP/are push/JJ/push /,/, pop/NN/pop /,/, new/JJ/new /,/, top/JJ/top /,/, size/NN/size and/CC/and isempty/NNP/isempty. these/DT/these are/VBP/are all/DT/all the/DT/the methods/NNS/methods and/CC/and hope/NN/hope you/PRP/you all/DT/all understood/NN/understood about/IN/about what/WP/what these/DT/these methods/NNS/methods are/VBP/are doing/NNP/doing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 34/CD/34 /CD/) axiom/NN/axiom governs/NNS/governs the/DT/the behavior/NN/behavior of/IN/of these/DT/these methods/NNP/methods. if/IN/if s/NNS/s is/VBZ/is the/DT/the stack/NN/stack /,/, when/WRB/when i/PRP/i push/VBP/push an/DT/an element/NN/element on/IN/on to/TO/to s/NNS/s and/CC/and then/RB/then when/WRB/when i/PRP/i pop/VBP/pop it/PRP/it /,/, i/PRP/i should/MD/should get/VB/get back/RB/back s/NNP/s. while/IN/while doing/VBG/doing a/DT/a top/JJ/top operation/NN/operation /,/, when/WRB/when i/PRP/i push/VBP/push an/DT/an element/NN/element on/IN/on to/TO/to a/DT/a stack/NN/stack and/CC/and then/RB/then when/WRB/when i/PRP/i do/VBP/do a/DT/a top/JJ/top operation/NN/operation i/PRP/i should/MD/should get/VB/get v/NN/v /,/, because/IN/because v/NN/v would/MD/would be/VB/be the/DT/the top/JJ/top element/NN/element of/IN/of the/DT/the stack/NNP/stack. so/RB/so far/RB/far we/PRP/we have/VBP/have defined/VBN/defined about/IN/about the/DT/the stack/NN/stack abstract/NN/abstract data/NNS/data type/NN/type /,/, the/DT/the methods/NNS/methods and/CC/and 2/CD/2 axioms/NNP/axioms. axioms/NNS/axioms may/MD/may not/RB/not be/VB/be complete/JJ/complete but/CC/but this/DT/this is/VBZ/is what/WP/what the/DT/the axioms/NNS/axioms would/MD/would look/VB/look like/NNP/like. how/WRB/how do/VBP/do we/PRP/we translate/VB/translate abstract/NN/abstract data/NNS/data type/NN/type into/IN/into code/NN/code ?/./? we/PRP/we need/VBP/need 2/CD/2 constructs/NNS/constructs for/IN/for that/DT/that and/CC/and they/PRP/they are/VBP/are the/DT/the interfaces/NNS/interfaces and/CC/and exceptions/NNP/exceptions. what/WP/what is/VBZ/is an/DT/an interface/NN/interface ?/./? an/DT/an interface/NN/interface is/VBZ/is a/DT/a way/NN/way to/TO/to declare/VB/declare about/IN/about what/WP/what a/DT/a class/NN/class has/VBZ/has to/TO/to do/VB/do and/CC/and what/WP/what are/VBP/are the/DT/the various/JJ/various methods/NNS/methods associated/VBN/associated with/IN/with the/DT/the class/NNP/class. it/PRP/it does/VBZ/does not/RB/not tell/VB/tell us/PRP/us about/IN/about how/WRB/how those/DT/those methods/NNS/methods are/VBP/are done/NNP/done. that/IN/that would/MD/would be/VB/be a/DT/a part/NN/part of/IN/of the/DT/the implementation/NN/implementation of/IN/of that/DT/that interface/NN/interface or/CC/or a/DT/a class/NNP/class. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 46/CD/46 /CD/) for/IN/for an/DT/an interface/NN/interface we/PRP/we just/RB/just right/RB/right down/IN/down the/DT/the various/JJ/various names/NNS/names of/IN/of the/DT/the methods/NNS/methods and/CC/and the/DT/the parameters/NNS/parameters it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/NNP/take. in/IN/in fact/NN/fact we/PRP/we do/VBP/do not/RB/not even/RB/even specify/VB/specify the/DT/the names/NNS/names of/IN/of parameter/NN/parameter /,/, we/PRP/we just/RB/just have/VBP/have to/TO/to specify/VB/specify the/DT/the types/NNS/types of/IN/of the/DT/the parameter/NNP/parameter. when/WRB/when we/PRP/we write/VBP/write a/DT/a class/NN/class for/IN/for an/DT/an interface/NN/interface /,/, we/PRP/we will/MD/will actually/RB/actually provide/VB/provide the/DT/the code/NN/code for/IN/for those/DT/those various/JJ/various methods/NNP/methods. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 16/CD/16 /CD/) i/PRP/i might/MD/might specify/VB/specify an/DT/an interface/NN/interface for/IN/for a/DT/a stack/NN/stack and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to ask/VB/ask you/PRP/you to/TO/to write/VB/write the/DT/the classes/NNS/classes for/IN/for that/DT/that interface/NNP/interface. different/JJ/different people/NNS/people will/MD/will write/VB/write different/JJ/different classes/NNS/classes to/TO/to implement/VB/implement the/DT/the interface/NN/interface in/IN/in a/DT/a completely/RB/completely different/JJ/different ways/NNP/ways. i/PRP/i can/MD/can still/RB/still use/VB/use your/PRP$/your classes/NNS/classes or/CC/or any/DT/any implementation/NN/implementation of/IN/of the/DT/the interface/NN/interface /,/, in/IN/in a/DT/a program/NN/program that/WDT/that i/PRP/i have/VBP/have written/VBN/written /,/, provided/VBN/provided that/IN/that must/MD/must meet/VB/meet the/DT/the interface/NN/interface specification/NN/specification which/WDT/which i/PRP/i have/VBP/have given/VBN/given to/TO/to you/NNP/you. all/DT/all i/PRP/i need/VBP/need to/TO/to know/VB/know is/VBZ/is that/IN/that the/DT/the implementation/NN/implementation meets/NNS/meets the/DT/the specification/NN/specification so/RB/so that/IN/that i/PRP/i can/MD/can use/VB/use that/IN/that in/IN/in the/DT/the coding/NN/coding of/IN/of my/PRP$/my own/JJ/own program/NNP/program. it/PRP/it helps/VBZ/helps us/PRP/us to/TO/to separate/VB/separate the/DT/the implementation/NN/implementation from/IN/from the/DT/the specification/NN/specification and/CC/and that/IN/that is/VBZ/is why/WRB/why it/PRP/it is/VBZ/is a/DT/a very/RB/very useful/JJ/useful programming/NN/programming technique/NNP/technique. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 15/CD/15 /CD/) let/NN/let us/PRP/us see/VBP/see about/IN/about how/WRB/how a/DT/a stack/NN/stack implementation/NN/implementation looks/NNS/looks like/IN/like in/IN/in java/NNP/java. java/NN/java has/VBZ/has a/DT/a built-in/JJ/built-in stack/NN/stack data/NNS/data structure/NN/structure but/CC/but nevertheless/NN/nevertheless we/PRP/we will/MD/will define/VB/define a/DT/a stack/NN/stack interface/NNP/interface. we/PRP/we just/RB/just define/VBP/define the/DT/the various/JJ/various methods/NNS/methods that/WDT/that are/VBP/are going/VBG/going to/TO/to be/VB/be a/DT/a part/NN/part of/IN/of this/DT/this interface/NNP/interface. there/RB/there is/VBZ/is one/CD/one method/NN/method called/VBN/called size/NN/size /,/, in/IN/in which/WDT/which i/PRP/i need/VBP/need to/TO/to specify/VB/specify the/DT/the types/NNS/types of/IN/of the/DT/the parameters/NNS/parameters and/CC/and the/DT/the return/NN/return type/NN/type of/IN/of the/DT/the method/NNP/method. i/PRP/i have/VBP/have not/RB/not specified/VBN/specified how/WRB/how these/DT/these methods/NNS/methods are/VBP/are implemented/NNP/implemented. this/DT/this is/VBZ/is just/RB/just an/DT/an interface/NNP/interface. in/IN/in an/DT/an interface/NN/interface we/PRP/we need/VBP/need to/TO/to know/VB/know the/DT/the types/NNS/types of/IN/of the/DT/the parameter/NNP/parameter. when/WRB/when i/PRP/i am/VBP/am pushing/VBG/pushing /,/, it/PRP/it takes/VBZ/takes a/DT/a parameter/NN/parameter of/IN/of type/NN/type object/NNP/object. object/NN/object is/VBZ/is the/DT/the generic/JJ/generic type/NN/type in/IN/in java/NN/java and/CC/and all/DT/all objects/NNS/objects are/VBP/are derived/VBN/derived from/IN/from this/DT/this type/NNP/type. the/DT/the method/NN/method isempty/NN/isempty returns/NNS/returns boolean/NNP/boolean. it/PRP/it just/RB/just tells/VBZ/tells us/PRP/us whether/IN/whether the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty or/CC/or not/NNP/not. the/DT/the top/JJ/top gives/NNS/gives you/PRP/you the/DT/the top/JJ/top element/NN/element in/IN/in the/DT/the stack/NN/stack and/CC/and it/PRP/it returns/VBZ/returns an/DT/an object/NNP/object. it/PRP/it throws/VBZ/throws stackemptyexception/NN/stackemptyexception /,/, if/IN/if this/DT/this stack/NN/stack is/VBZ/is empty/JJ/empty then/RB/then top/JJ/top /NN/( /:/) method/NN/method should/MD/should somehow/VB/somehow signal/JJ/signal that/IN/that the/DT/the stack/NN/stack is/VBZ/is empty/NNP/empty. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do that/DT/that using/VBG/using the/DT/the notion/NN/notion of/IN/of exceptions/NNP/exceptions. void/JJ/void means/NNS/means it/PRP/it does/VBZ/does not/RB/not return/VB/return any/DT/any object/NN/object or/CC/or any/DT/any value/NNP/value. it/PRP/it does/VBZ/does not/RB/not return/VB/return a/DT/a stack/NN/stack but/CC/but it/PRP/it is/VBZ/is a/DT/a method/NN/method which/WDT/which is/VBZ/is executed/VBN/executed on/IN/on this/DT/this stack/NN/stack and/CC/and it/PRP/it modifies/VBZ/modifies the/DT/the stack/NNP/stack. thus/RB/thus stack/VB/stack can/MD/can not/RB/not be/VB/be considered/VBN/considered as/IN/as a/DT/a parameter/NNP/parameter. what/WP/what is/VBZ/is an/DT/an exception/NN/exception ?/./? exceptions/NNS/exceptions are/VBP/are the/DT/the mechanisms/NNS/mechanisms to/TO/to handle/VB/handle errors/NNP/errors. when/WRB/when we/PRP/we have/VBP/have an/DT/an error/NN/error or/CC/or when/WRB/when we/PRP/we reach/VBP/reach some/DT/some exceptional/JJ/exceptional condition/NN/condition or/CC/or an/DT/an exceptional/JJ/exceptional case/NN/case in/IN/in the/DT/the execution/NN/execution of/IN/of program/NN/program /,/, we/PRP/we throw/VBP/throw an/DT/an exception/NNP/exception. the/DT/the term/NN/term used/VBD/used in/IN/in java/NN/java is/VBZ/is throw/NNP/throw. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 07/CD/07 /CD/) as/IN/as soon/RB/soon as/IN/as an/DT/an exception/NN/exception is/VBZ/is thrown/VBN/thrown /,/, the/DT/the flow/NN/flow of/IN/of control/NN/control moves/NNS/moves from/IN/from the/DT/the current/JJ/current method/NN/method to/TO/to the/DT/the point/NN/point where/WRB/where the/DT/the method/NN/method was/VBD/was called/NNP/called. the/DT/the idea/NN/idea essentially/RB/essentially is/VBZ/is that/IN/that /,/, when/WRB/when an/DT/an exception/NN/exception occurs/VBZ/occurs you/PRP/you delegate/VBP/delegate the/DT/the responsibility/NN/responsibility of/IN/of handling/NN/handling that/IN/that exceptional/JJ/exceptional case/NN/case /,/, to/TO/to the/DT/the procedure/NN/procedure which/WDT/which called/VBN/called that/IN/that particular/JJ/particular method/NNP/method. you/PRP/you will/MD/will be/VB/be clear/JJ/clear /,/, if/IN/if you/PRP/you see/VBP/see an/DT/an example/NNP/example. i/PRP/i have/VBP/have two/CD/two methods/NNS/methods /,/, one/CD/one is/VBZ/is an/DT/an eat/NN/eat pizza/NN/pizza method/NN/method which/WDT/which throws/VBZ/throws a/DT/a stomachache/NN/stomachache exception/NN/exception /,/, also/RB/also there/EX/there is/VBZ/is some/DT/some dotted/VBN/dotted code/NNP/code. if/IN/if you/PRP/you eat/VBP/eat too/RB/too much/RB/much of/IN/of pizza/NN/pizza /,/, then/RB/then there/EX/there is/VBZ/is a/DT/a problem/NN/problem and/CC/and you/PRP/you throw/VBP/throw stomachacheexception/NNP/stomachacheexception. the/DT/the procedure/NN/procedure public/NN/public void/VBD/void eatpizza/NN/eatpizza /:/( /:/) throws/VBZ/throws was/VBD/was called/VBN/called in/IN/in the/DT/the method/NN/method eatpizza/NN/eatpizza /:/( /:/) /,/, which/WDT/which is/VBZ/is inside/VBP/inside the/DT/the stimulate/NN/stimulate meeting/NN/meeting procedure/NNP/procedure. when/WRB/when this/DT/this stomachacheexception/NN/stomachacheexception is/VBZ/is thrown/VBN/thrown /,/, the/DT/the flow/NN/flow of/IN/of control/NN/control will/MD/will come/VB/come to/TO/to ta.eatpizza/NNP/ta.eatpizza /NNP/( /NNP/) /./. thus/RB/thus when/WRB/when this/DT/this stomachacheexception/NN/stomachacheexception is/VBZ/is thrown/VBN/thrown /,/, we/PRP/we will/MD/will exist/VB/exist this/DT/this method/NN/method eatpizza/NN/eatpizza /:/( /:/) and/CC/and go/VB/go to/TO/to ta.eatpizza/NNP/ta.eatpizza /NNP/( /NNP/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time 19.07/CD/19.07 /CD/) in/IN/in the/DT/the coding/NN/coding after/IN/after /CD/{ ?/./? /CD/} there/EX/there are/VBP/are bunches/NNS/bunches of/IN/of other/JJ/other statements/NNS/statements that/IN/that would/MD/would not/RB/not be/VB/be executed/NNP/executed. the/DT/the flow/NN/flow of/IN/of control/NN/control would/MD/would interrupt/VB/interrupt the/DT/the dotted/VBN/dotted point/NN/point and/CC/and would/MD/would reach/VB/reach ta.eatpizza/NNP/ta.eatpizza /NNP/( /NNP/) /./. there/EX/there is/VBZ/is also/RB/also a/DT/a notion/NN/notion of/IN/of try/NN/try and/CC/and catch/NN/catch blocks/NNP/blocks. when/WRB/when the/DT/the exception/NN/exception is/VBZ/is thrown/VBN/thrown what/WP/what happens/NNS/happens to/TO/to the/DT/the variable/JJ/variable that/IN/that we/PRP/we have/VBP/have modified/VBN/modified ?/./? it/PRP/it depends/VBZ/depends upon/IN/upon the/DT/the procedure/NN/procedure call/NN/call /,/, think/VBP/think as/IN/as if/IN/if we/PRP/we are/VBP/are returning/VBG/returning from/IN/from this/DT/this procedure/NN/procedure stomachacheexception/NN/stomachacheexception or/CC/or a/DT/a method/NNP/method. if/IN/if those/DT/those are/VBP/are local/JJ/local variables/NNS/variables then/RB/then you/PRP/you do/VBP/do not/RB/not want/VB/want to/TO/to see/VB/see them/NNP/them. if/IN/if they/PRP/they are/VBP/are global/JJ/global variables/NNS/variables and/CC/and if/IN/if it/PRP/it is/VBZ/is modified/VBN/modified in/IN/in the/DT/the if-loop/JJ/if-loop /,/, then/RB/then those/DT/those modifications/NNS/modifications are/VBP/are carried/VBN/carried over/IN/over to/TO/to the/DT/the ta.eatpizza/NNP/ta.eatpizza /NNP/( /NNP/) method/NNP/method. there/RB/there is/VBZ/is something/NN/something called/VBN/called as/IN/as a/DT/a try/NN/try and/CC/and a/DT/a catch/NN/catch block/NNP/block. if/IN/if you/PRP/you think/VBP/think that/IN/that there/EX/there could/MD/could be/VB/be possible/JJ/possible exception/NN/exception in/IN/in this/DT/this /NN/( ta.eatpizza/NN/ta.eatpizza /:/( /:/) /:/) method/NN/method /,/, then/RB/then you/PRP/you enclose/VBP/enclose the/DT/the method/NN/method within/IN/within a/DT/a try/NN/try block/NNP/block. start/NN/start it/PRP/it with/IN/with a/DT/a try/NN/try /,/, open/JJ/open a/DT/a bracket/NN/bracket /,/, and/CC/and then/RB/then include/VBP/include the/DT/the method/NN/method which/WDT/which you/PRP/you are/VBP/are calling/VBG/calling and/CC/and close/JJ/close it/PRP/it with/IN/with a/DT/a bracket/NNP/bracket. if/IN/if there/EX/there was/VBD/was no/DT/no exception/NN/exception raised/VBD/raised in/IN/in ta.eatpizza/NNP/ta.eatpizza /NNP/( /NNP/) method/NN/method or/CC/or this/DT/this particular/JJ/particular exception/NN/exception stomachacheexception/NN/stomachacheexception did/VBD/did not/RB/not get/VB/get raised/VBN/raised in/IN/in this/DT/this method/NN/method /,/, then/RB/then we/PRP/we will/MD/will just/RB/just skip/VB/skip the/DT/the catch/NN/catch block/NN/block /,/, then/RB/then go/VB/go on/IN/on to/TO/to the/DT/the statement/NN/statement /,/, after/IN/after the/DT/the catch/NN/catch block/NNP/block. if/IN/if an/DT/an exception/NN/exception was/VBD/was raised/VBN/raised in/IN/in this/DT/this /NN/( ta.eatpizza/NN/ta.eatpizza /:/( /:/) /:/) method/NN/method /,/, because/IN/because this/DT/this method/NN/method might/MD/might raise/VB/raise many/JJ/many exceptions/NNP/exceptions. if/IN/if this/DT/this /NN/( stomachacheexception/NN/stomachacheexception /:/) exception/NN/exception was/VBD/was raised/VBN/raised in/IN/in the/DT/the method/NN/method /,/, then/RB/then we/PRP/we would/MD/would come/VB/come in/IN/in to/TO/to the/DT/the catch/NN/catch block/NN/block and/CC/and execute/NN/execute the/DT/the statements/NNP/statements. if/IN/if the/DT/the method/NN/method raises/VBZ/raises an/DT/an exception/NN/exception /,/, then/RB/then if/IN/if that/DT/that exception/NN/exception is/VBZ/is caught/VBN/caught through/IN/through a/DT/a catch/NN/catch block/NN/block /,/, then/RB/then we/PRP/we would/MD/would execute/VB/execute the/DT/the statements/NNS/statements which/WDT/which are/VBP/are written/VBN/written inside/NN/inside the/DT/the catch/NN/catch block/NNP/block. any/DT/any kind/NN/kind of/IN/of statements/NNS/statements can/MD/can be/VB/be written/VBN/written inside/NN/inside the/DT/the catch/NN/catch block/NN/block /,/, not/RB/not necessarily/RB/necessarily system.out.exception/JJ/system.out.exception /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 50/CD/50 /CD/) what/WP/what would/MD/would happen/VB/happen /,/, if/IN/if i/PRP/i did/VBD/did not/RB/not write/VB/write the/DT/the catch/NN/catch block/NN/block ?/./? this/DT/this procedure/NN/procedure simulate/NN/simulate meeting/NN/meeting /,/, would/MD/would throw/VB/throw the/DT/the exception/NN/exception to/TO/to the/DT/the point/NN/point from/IN/from where/WRB/where its/PRP$/its parent/NN/parent procedure/NN/procedure was/VBD/was called/NNP/called. when/WRB/when stomachacheexception/NN/stomachacheexception throws/VBZ/throws an/DT/an exception/NN/exception /,/, the/DT/the ta.eatpizza/NNP/ta.eatpizza /NNP/( /NNP/) method/NN/method would/MD/would also/RB/also throw/VB/throw an/DT/an exception/NN/exception /,/, then/RB/then the/DT/the control/NN/control will/MD/will go/VB/go to/TO/to procedure/VB/procedure from/IN/from where/WRB/where simulate/JJ/simulate meeting/NN/meeting is/VBZ/is called/NNP/called. it/PRP/it is/VBZ/is fine/NN/fine if/IN/if it/PRP/it catches/VBZ/catches the/DT/the exception/NN/exception at/IN/at that/DT/that point/NN/point /,/, if/IN/if not/RB/not it/PRP/it will/MD/will throw/VB/throw an/DT/an exception/NN/exception to/TO/to the/DT/the high/JJ/high level/NN/level procedure/NN/procedure and/CC/and finally/RB/finally your/PRP$/your procedure/NN/procedure will/MD/will stop/VB/stop with/IN/with your/PRP$/your exception/NN/exception appearing/VBG/appearing at/IN/at your/PRP$/your console/NNP/console. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 25/CD/25 /CD/) in/IN/in this/DT/this manner/NN/manner it/PRP/it is/VBZ/is getting/VBG/getting propagated/VBN/propagated all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to /,/, where/WRB/where your/PRP$/your procedure/NN/procedure stops/NNS/stops and/CC/and the/DT/the exception/NN/exception is/VBZ/is shown/VBN/shown to/TO/to the/DT/the user/NNP/user. system.out.println/NNP/system.out.println is/VBZ/is just/RB/just the/DT/the method/NN/method to/TO/to print/VB/print the/DT/the statement/NNP/statement. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 41/CD/41 /CD/) an/DT/an exception/NN/exception is/VBZ/is really/RB/really a/DT/a java/NN/java class/NN/class in/IN/in which/WDT/which i/PRP/i am/VBP/am creating/VBG/creating an/DT/an object/NN/object or/CC/or an/DT/an instance/NN/instance for/IN/for this/DT/this class/NNP/class. then/RB/then i/PRP/i am/VBP/am initializing/VBG/initializing that/IN/that instance/NN/instance with/IN/with any/DT/any parameter/NN/parameter and/CC/and i/PRP/i can/MD/can specify/VB/specify some/DT/some set/NN/set of/IN/of parameters/NNS/parameters in/IN/in the/DT/the statement/NN/statement given/VBN/given below/NNP/below. stomachacheexception/NN/stomachacheexception /:/( ?/./? ouch/JJ/ouch ?/./? /:/) ;/:/; stomachacheexception/NN/stomachacheexception itself/PRP/itself is/VBZ/is a/DT/a class/NN/class and/CC/and for/IN/for this/DT/this class/NN/class /,/, i/PRP/i am/VBP/am creating/VBG/creating an/DT/an object/NN/object by/IN/by making/VBG/making a/DT/a call/NN/call to/TO/to the/DT/the statement/NNP/statement. stomachacheexception/NN/stomachacheexception /:/( ?/./? ouch/JJ/ouch ?/./? /:/) ;/:/; when/WRB/when the/DT/the catch/NN/catch statement/NN/statement is/VBZ/is caught/VBN/caught /,/, e/NN/e in/IN/in that/DT/that statement/NN/statement would/MD/would get/VB/get assigned/VBN/assigned to/TO/to the/DT/the object/NN/object that/IN/that is/VBZ/is created/VBN/created by/IN/by stomachacheexception/NN/stomachacheexception /:/( ?/./? ouch/JJ/ouch ?/./? /:/) statement/NNP/statement. the/DT/the try/NN/try and/CC/and catch/NN/catch block/NN/block would/MD/would come/VB/come together/NNP/together. if/IN/if the/DT/the method/NN/method were/VBD/were not/RB/not enclosed/VBN/enclosed between/IN/between try/NN/try and/CC/and catch/NN/catch /,/, then/RB/then the/DT/the exception/NN/exception would/MD/would just/RB/just get/VB/get propagate/JJ/propagate upwards/NNS/upwards in/IN/in the/DT/the procedural/JJ/procedural hierarchy/NNP/hierarchy. stomachacheexception/NN/stomachacheexception would/MD/would throw/VB/throw an/DT/an exception/NN/exception and/CC/and the/DT/the calling/NN/calling procedure/NN/procedure of/IN/of simulate/NN/simulate meeting/NN/meeting would/MD/would throw/VB/throw an/DT/an exception/NN/exception /,/, till/NN/till it/PRP/it is/VBZ/is caught/VBN/caught at/IN/at some/DT/some point/NNP/point. if/IN/if not/RB/not it/PRP/it reaches/VBZ/reaches the/DT/the console/NNP/console. what/WP/what does/VBZ/does the/DT/the name/NN/name of/IN/of the/DT/the class/NN/class followed/VBD/followed by/IN/by brackets/NNS/brackets and/CC/and some/DT/some parameters/NNS/parameters written/VBN/written would/MD/would signify/VB/signify in/IN/in java/NN/java ?/./? for/IN/for example/NN/example /:/: stomachacheexception/NN/stomachacheexception /:/( ?/./? ouch/JJ/ouch ?/./? /:/) ;/:/; in/IN/in java/NN/java it/PRP/it signifies/VBZ/signifies /,/, that/IN/that you/PRP/you are/VBP/are creating/VBG/creating an/DT/an object/NN/object for/IN/for this/DT/this class/NN/class and/CC/and you/PRP/you are/VBP/are invoking/VBG/invoking the/DT/the constructor/NN/constructor method/NN/method with/IN/with ?/./? ouch/JJ/ouch ?/./? as/IN/as the/DT/the parameters/NNP/parameters. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 07/CD/07 /CD/) the/DT/the try/NN/try and/CC/and catch/NN/catch block/NN/block are/VBP/are a/DT/a method/NN/method for/IN/for listening/NN/listening exceptions/NNS/exceptions and/CC/and catching/VBG/catching them/NNP/them. as/IN/as i/PRP/i mentioned/VBD/mentioned before/IN/before /,/, a/DT/a catch/NN/catch block/NN/block can/MD/can contain/VB/contain anything/NNP/anything. it/PRP/it does/VBZ/does not/RB/not mean/VB/mean that/IN/that it/PRP/it should/MD/should have/VB/have only/RB/only system.out.println/JJ/system.out.println /,/, it/PRP/it can/MD/can also/RB/also throw/VB/throw an/DT/an exception/NN/exception in/IN/in turn/NNP/turn. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 16/CD/16 /CD/) it/PRP/it also/RB/also helps/VBZ/helps us/PRP/us to/TO/to exit/VB/exit from/IN/from the/DT/the program/NN/program when/WRB/when an/DT/an exception/NN/exception occurs/NNP/occurs. if/IN/if you/PRP/you throw/VBP/throw an/DT/an exception/NN/exception in/IN/in any/DT/any method/NN/method /,/, then/RB/then you/PRP/you need/VBP/need to/TO/to add/VB/add a/DT/a throws/NN/throws class/NN/class next/IN/next to/TO/to the/DT/the method/NN/method name/NNP/name. when/WRB/when we/PRP/we wrote/VBP/wrote the/DT/the method/NN/method eatpizza/NN/eatpizza /:/( /:/) we/PRP/we had/VBD/had /,/, throws/VBZ/throws stomachacheexception/NNP/stomachacheexception. a/DT/a method/NN/method can/MD/can throw/VB/throw more/RBR/more than/IN/than one/CD/one exception/NNP/exception. in/IN/in java/NN/java everything/NN/everything is/VBZ/is really/RB/really an/DT/an object/NNP/object. stomachacheexception/NN/stomachacheexception is/VBZ/is the/DT/the name/NN/name of/IN/of the/DT/the class/NNP/class. public/NN/public class/NN/class stomachacheexception/NN/stomachacheexception extends/NNS/extends and/CC/and the/DT/the statement/NN/statement given/VBN/given below/IN/below is/VBZ/is the/DT/the constructor/NN/constructor method/NN/method for/IN/for the/DT/the class/NNP/class. thus/RB/thus the/DT/the name/NN/name of/IN/of the/DT/the constructor/NN/constructor method/NN/method is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the class/NN/class name/NNP/name. public/JJ/public stomachacheexception/NN/stomachacheexception /:/( string/VBG/string err/NN/err /:/) the/DT/the constructor/NN/constructor method/NN/method takes/VBZ/takes a/DT/a single/JJ/single parameter/NN/parameter /,/, which/WDT/which is/VBZ/is a/DT/a string/NNP/string. super/NN/super means/VBZ/means that/DT/that it/PRP/it is/VBZ/is calling/VBG/calling the/DT/the super/NN/super class/NN/class with/IN/with the/DT/the same/JJ/same parameter/NNP/parameter. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 00/CD/00 /CD/) again/RB/again as/IN/as i/PRP/i mentioned/VBD/mentioned before/IN/before /,/, if/IN/if you/PRP/you never/RB/never catch/VBP/catch an/DT/an exception/NN/exception it/PRP/it will/MD/will propagate/VB/propagate upwards/NNS/upwards /,/, along/IN/along with/IN/with the/DT/the chain/NN/chain of/IN/of method/NN/method calls/NNS/calls /,/, till/IN/till it/PRP/it reaches/VBZ/reaches the/DT/the console/NNP/console. since/IN/since the/DT/the stomach/NN/stomach ache/NN/ache exception/NN/exception is/VBZ/is extending/VBG/extending a/DT/a run/NN/run time/NN/time exception/NN/exception /,/, it/PRP/it will/MD/will call/VB/call the/DT/the constructor/NN/constructor method/NN/method for/IN/for the/DT/the run/NN/run time/NN/time exception/NNP/exception. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 17/CD/17 /CD/) if/IN/if a/DT/a particular/JJ/particular method/NN/method throws/VBZ/throws more/JJR/more than/IN/than one/CD/one exception/NN/exception /,/, then/RB/then you/PRP/you will/MD/will have/VB/have to/TO/to specify/VB/specify all/DT/all those/DT/those exceptions/NNS/exceptions which/WDT/which it/PRP/it throws/VBZ/throws /,/, next/JJ/next to/TO/to the/DT/the method/NN/method name/NNP/name. even/RB/even in/IN/in the/DT/the try/NN/try block/NN/block you/PRP/you can/MD/can have/VB/have many/JJ/many catch/NN/catch statements/NNP/statements. first/RB/first we/PRP/we can/MD/can catch/VB/catch one/CD/one particular/JJ/particular exception/NN/exception followed/VBN/followed by/IN/by some/DT/some other/JJ/other exception/NN/exception and/CC/and so/RB/so on/NNP/on. look/NN/look at/IN/at your/PRP$/your java/NN/java book/NN/book for/IN/for more/JJR/more details/NNP/details. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 10/CD/10 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the stacks/NNP/stacks. we/PRP/we had/VBD/had created/VBN/created the/DT/the interface/NN/interface for/IN/for our/PRP$/our stack/NNP/stack. we/PRP/we are/VBP/are going/VBG/going to/TO/to implement/VB/implement the/DT/the methods/NNS/methods and/CC/and there/EX/there are/VBP/are many/JJ/many ways/NNS/ways of/IN/of implementing/VBG/implementing a/DT/a stack/NNP/stack. first/JJ/first we/PRP/we are/VBP/are going/VBG/going to/TO/to implement/VB/implement using/VBG/using an/DT/an array/NNP/array. let/NN/let us/PRP/us say/VBP/say the/DT/the maximum/NN/maximum size/NN/size of/IN/of our/PRP$/our stack/NN/stack is/VBZ/is n/VBN/n and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have an/DT/an array/NN/array of/IN/of n/NN/n elements/NNS/elements of/IN/of the/DT/the stack/NNP/stack. i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have a/DT/a variable/JJ/variable t/NN/t /,/, which/WDT/which will/MD/will tell/VB/tell about/IN/about the/DT/the location/NN/location of/IN/of the/DT/the top/JJ/top element/NN/element of/IN/of the/DT/the stack/NNP/stack. the/DT/the variable/JJ/variable t/NN/t gives/VBZ/gives the/DT/the index/NN/index of/IN/of the/DT/the top/JJ/top element/NN/element in/IN/in the/DT/the array/NN/array s/NNP/s. the/DT/the first/JJ/first element/NN/element will/MD/will be/VB/be at/IN/at location/NN/location 0/-NONE-/0 and/CC/and then/RB/then when/WRB/when i/PRP/i push/VBP/push another/DT/another element/NN/element it/PRP/it will/MD/will move/VB/move to/TO/to the/DT/the next/JJ/next location/NN/location and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 43/CD/43 /CD/) i/PRP/i have/VBP/have actually/RB/actually listed/VBN/listed out/RP/out an/DT/an entire/JJ/entire implementation/NN/implementation for/IN/for our/PRP$/our stack/NN/stack interface/NNP/interface. my/PRP$/my implementation/NN/implementation is/VBZ/is called/VBN/called array/NN/array stack/NN/stack because/IN/because i/PRP/i am/VBP/am using/VBG/using an/DT/an array/NN/array to/TO/to implement/VB/implement the/DT/the stack/NNP/stack. the/DT/the statement/NN/statement mentioned/VBD/mentioned below/IN/below says/NNS/says that/IN/that i/PRP/i am/VBP/am implementing/VBG/implementing the/DT/the stack/NN/stack interface/NNP/interface. public/JJ/public class/NN/class arraystack/NN/arraystack implements/NNS/implements stack/VBP/stack implement/NN/implement stack/NN/stack means/VBZ/means /,/, it/PRP/it is/VBZ/is implementing/VBG/implementing the/DT/the stack/NN/stack interface/NN/interface that/WDT/that we/PRP/we provided/NNP/provided. i/PRP/i have/VBP/have set/VBN/set with/IN/with a/DT/a default/NN/default capacity/NN/capacity for/IN/for the/DT/the stack/NN/stack which/WDT/which is/VBZ/is 1024/CD/1024 /,/, otherwise/RB/otherwise the/DT/the capacity/NN/capacity of/IN/of the/DT/the stack/NN/stack would/MD/would be/VB/be in/IN/in the/DT/the variable/JJ/variable n/NNP/n. final/JJ/final is/VBZ/is just/RB/just specifying/VBG/specifying that/IN/that the/DT/the value/NN/value of/IN/of capacity/NN/capacity is/VBZ/is always/RB/always a/DT/a constant/JJ/constant and/CC/and it/PRP/it can/MD/can never/RB/never be/VB/be changed/NNP/changed. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 48/CD/48 /CD/) s/NNS/s is/VBZ/is an/DT/an array/NN/array which/WDT/which is/VBZ/is going/VBG/going to/TO/to hold/VB/hold the/DT/the elements/NNS/elements of/IN/of the/DT/the stack/NNP/stack. thus/RB/thus s/VBZ/s is/VBZ/is an/DT/an array/NN/array of/IN/of object/NN/object and/CC/and t/NN/t is/VBZ/is the/DT/the index/NN/index of/IN/of the/DT/the top/JJ/top element/NNP/element. initially/RB/initially t/VBD/t =/CD/= -1/-NONE-/-1 /,/, because/IN/because there/EX/there is/VBZ/is nothing/NN/nothing inside/NN/inside the/DT/the t/NNP/t. t/NN/t =/:/= 0/-NONE-/0 means/VBZ/means the/DT/the top/JJ/top element/NN/element is/VBZ/is in/IN/in the/DT/the location/NN/location 0/-NONE-/0 and/CC/and when/WRB/when the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty t/NN/t =/:/= -1/NNP/-1. public/JJ/public arraystack/NN/arraystack /:/( /:/) public/JJ/public arraystack/NN/arraystack /:/( int/NN/int cap/NN/cap /:/) the/DT/the above/NN/above two/CD/two statements/NNS/statements are/VBP/are the/DT/the constructor/NN/constructor methods/NNP/methods. if/IN/if you/PRP/you do/VBP/do not/RB/not specify/VB/specify anything/NN/anything or/CC/or if/IN/if you/PRP/you just/RB/just call/VBP/call the/DT/the array/NN/array stack/NN/stack without/IN/without any/DT/any parameters/NNS/parameters /,/, then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to create/VB/create a/DT/a stack/NN/stack whose/WP$/whose capacity/NN/capacity is/VBZ/is 1024/CD/1024. if/IN/if you/PRP/you call/VBP/call array/VBP/array stack/NN/stack with/IN/with some/DT/some number/NN/number let/VBD/let us/PRP/us say/VBP/say 37/CD/37 /,/, then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to create/VB/create a/DT/a stack/NN/stack of/IN/of size/NN/size 37/CD/37. what/WP/what should/MD/should size/VB/size do/VB/do ?/./? size/VB/size should/MD/should just/RB/just return/VB/return how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are there/RB/there in/IN/in my/PRP$/my stack/NNP/stack. if/IN/if t/NN/t is/VBZ/is the/DT/the index/NN/index of/IN/of the/DT/the top/JJ/top element/NN/element /,/, then/RB/then t/VB/t +/:/+ 1/CD/1 elements/NNS/elements are/VBP/are there/RB/there because/IN/because we/PRP/we just/RB/just started/VBD/started from/IN/from zero/NNP/zero. the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty if/IN/if t/NN/t =/:/= -1/-NONE-/-1 that/IN/that is/VBZ/is t/VBN/t </-NONE-/< 0/CD/0. if/IN/if t/NN/t </:/< 0/-NONE-/0 then/RB/then isempty/JJ/isempty /NN/( /:/) method/NN/method would/MD/would return/VB/return true/JJ/true /,/, otherwise/RB/otherwise it/PRP/it returns/VBZ/returns false/NNP/false. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 42/CD/42 /CD/) if/IN/if i/PRP/i want/VBP/want to/TO/to push/VB/push an/DT/an object/NN/object ob/NN/ob in/IN/in to/TO/to the/DT/the stack/NN/stack and/CC/and if/IN/if the/DT/the size/NN/size of/IN/of the/DT/the stack/NN/stack already/RB/already equals/VBZ/equals n/NN/n /,/, then/RB/then i/PRP/i should/MD/should throw/VB/throw a/DT/a stack/NN/stack full/JJ/full exception/NNP/exception. else/NN/else i/PRP/i should/MD/should first/RB/first increment/VB/increment t/NN/t and/CC/and then/RB/then put/VBD/put the/DT/the object/NN/object at/IN/at the/DT/the new/JJ/new incremented/JJ/incremented location/NNP/location. s/NNS/s /:/[ +/:/+ +/:/+ t/NN/t /:/] is/VBZ/is the/DT/the first/JJ/first increment/NN/increment /,/, and/CC/and then/RB/then put/VBD/put the/DT/the object/NN/object at/IN/at that/DT/that location/NNP/location. i/PRP/i have/VBP/have to/TO/to give/VB/give you/PRP/you the/DT/the top/JJ/top element/NN/element of/IN/of the/DT/the stack/NN/stack for/IN/for that/DT/that /,/, i/PRP/i should/MD/should check/VB/check whether/IN/whether the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty or/CC/or not/NNP/not. if/IN/if the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty then/RB/then i/PRP/i throw/VBP/throw a/DT/a stack/NN/stack empty/NN/empty exception/NNP/exception. if/IN/if the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty then/RB/then the/DT/the flow/NN/flow of/IN/of control/NN/control would/MD/would exit/VB/exit from/IN/from throw/NN/throw new/JJ/new stack/NN/stack empty/NN/empty exception/NN/exception /:/( ?/./? stack/NN/stack is/VBZ/is empty/JJ/empty ?/./? /:/) /./. and/CC/and when/WRB/when the/DT/the stack/NN/stack is/VBZ/is not/RB/not empty/JJ/empty it/PRP/it just/RB/just returns/VBZ/returns the/DT/the top/JJ/top element/NN/element of/IN/of the/DT/the stack/NN/stack s/VBZ/s /:/[ t/NN/t /:/] /./. if/IN/if i/PRP/i want/VBP/want to/TO/to pop/VB/pop the/DT/the stack/NN/stack /,/, then/RB/then once/RB/once again/RB/again i/PRP/i check/VBP/check if/IN/if the/DT/the stack/NN/stack is/VBZ/is empty/NNP/empty. if/IN/if the/DT/the stack/NN/stack is/VBZ/is not/RB/not empty/JJ/empty then/RB/then i/PRP/i save/VBP/save the/DT/the top/JJ/top element/NN/element in/IN/in location/NN/location elem/NNP/elem. then/RB/then i/PRP/i decrement/VBP/decrement t/JJ/t /,/, because/IN/because i/PRP/i am/VBP/am removing/VBG/removing the/DT/the top/JJ/top element/NN/element and/CC/and to/TO/to the/DT/the location/NN/location which/WDT/which i/PRP/i set/VBD/set earlier/JJR/earlier was/VBD/was set/VBN/set to/TO/to null/VB/null that/IN/that is/VBZ/is i/PRP/i dereference/VBP/dereference it/NNP/it. because/IN/because earlier/JJR/earlier at/IN/at the/DT/the top/JJ/top location/NN/location t/NN/t /,/, it/PRP/it was/VBD/was initially/RB/initially 37/CD/37 and/CC/and i/PRP/i had/VBD/had an/DT/an object/NN/object in/IN/in that/DT/that location/NNP/location. i/PRP/i need/VBP/need to/TO/to remove/VB/remove that/IN/that object/NN/object and/CC/and decrement/NN/decrement t/NN/t to36/NNP/to36. then/RB/then i/PRP/i return/VBP/return the/DT/the top/JJ/top element/NNP/element. pop/NN/pop also/RB/also returns/VBZ/returns the/DT/the top/JJ/top element/NNP/element. s/NNS/s /:/[ t/JJ/t-- /NN/] =/:/= null/NN/null ;/:/; return/NN/return elem/NN/elem /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 02/CD/02 /CD/) stack/NN/stack empty/NN/empty exception/NN/exception is/VBZ/is a/DT/a class/NN/class and/CC/and i/PRP/i use/VBP/use new/JJ/new to/TO/to create/VB/create an/DT/an object/NN/object or/CC/or an/DT/an instance/NN/instance for/IN/for this/DT/this class/NNP/class. why/WRB/why should/MD/should we/PRP/we necessarily/RB/necessarily dereference/VBP/dereference the/DT/the objects/NNS/objects ?/./? it/PRP/it is/VBZ/is best/JJS/best to/TO/to deference/VB/deference /,/, because/IN/because you/PRP/you can/MD/can remove/VB/remove those/DT/those objects/NNS/objects or/CC/or you/PRP/you can/MD/can get/VB/get rid/JJ/rid of/IN/of those/DT/those objects/NNS/objects otherwise/VBP/otherwise they/PRP/they will/MD/will lie/VB/lie in/IN/in your/PRP$/your memory/NNP/memory. thus/RB/thus t/VB/t is/VBZ/is just/RB/just an/DT/an integer/NN/integer and/CC/and it/PRP/it is/VBZ/is a/DT/a private/JJ/private member/NN/member of/IN/of this/DT/this class/NN/class /,/, private/JJ/private because/IN/because no/DT/no one/NN/one else/NN/else knows/VBZ/knows about/IN/about t/NN/t and/CC/and s/NNS/s is/VBZ/is an/DT/an array/NN/array of/IN/of objects/NNS/objects and/CC/and s/NNS/s can/MD/can therefore/VB/therefore access/NN/access the/DT/the element/NN/element of/IN/of this/DT/this array/NNP/array. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 54/CD/54 /CD/) the/DT/the array/NN/array implementation/NN/implementation is/VBZ/is very/RB/very simple/JJ/simple as/IN/as all/DT/all the/DT/the operations/NNS/operations were/VBD/were taking/VBG/taking constant/JJ/constant time/NNP/time. none/NN/none of/IN/of the/DT/the operations/NNS/operations required/VBN/required time/NN/time propositional/JJ/propositional to/TO/to the/DT/the virtual/JJ/virtual dependent/NN/dependent upon/IN/upon the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the array/NN/array in/IN/in this/DT/this stack/NN/stack at/IN/at that/DT/that point/NNP/point. each/DT/each of/IN/of those/DT/those methods/NNS/methods take/VBP/take o/NN/o /:/( 1/CD/1 /CD/) time/NNP/time. the/DT/the problem/NN/problem is/VBZ/is that/IN/that we/PRP/we are/VBP/are working/VBG/working with/IN/with an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the size/NN/size of/IN/of the/DT/the stack/NNP/stack. this/DT/this upper/NN/upper bound/NN/bound may/MD/may have/VB/have the/DT/the default/NN/default value1024/NNP/value1024 /,/, which/WDT/which we/PRP/we took/VBD/took in/IN/in our/PRP$/our example/NN/example or/CC/or it/PRP/it may/MD/may be/VB/be specified/VBN/specified at/IN/at the/DT/the time/NN/time of/IN/of creation/NN/creation of/IN/of stack/NNP/stack. the/DT/the problem/NN/problem is/VBZ/is because/IN/because you/PRP/you do/VBP/do not/RB/not know/VB/know the/DT/the size/NN/size of/IN/of the/DT/the stack/NNP/stack. we/PRP/we might/MD/might allocate/VB/allocate a/DT/a very/RB/very large/JJ/large size/NN/size for/IN/for the/DT/the stack/NN/stack /,/, but/CC/but it/PRP/it might/MD/might be/VB/be a/DT/a waste/NN/waste of/IN/of memory/NN/memory or/CC/or we/PRP/we might/MD/might allocate/VB/allocate a/DT/a very/RB/very small/JJ/small stack/NN/stack in/IN/in which/WDT/which we/PRP/we could/MD/could not/RB/not be/VB/be able/JJ/able to/TO/to run/VB/run our/PRP$/our procedure/NN/procedure to/TO/to complete/VB/complete /,/, because/IN/because we/PRP/we would/MD/would soon/RB/soon have/VB/have a/DT/a stack/NN/stack full/JJ/full exception/NNP/exception. stack/NN/stack empty/NN/empty exception/NN/exception is/VBZ/is the/DT/the requirement/NN/requirement of/IN/of the/DT/the interface/NN/interface /,/, because/IN/because the/DT/the top/JJ/top and/CC/and the/DT/the pop/NN/pop methods/NNS/methods are/VBP/are not/RB/not defined/VBN/defined /,/, if/IN/if the/DT/the stack/NN/stack is/VBZ/is empty/NNP/empty. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 48/CD/48 /CD/) it/PRP/it is/VBZ/is the/DT/the requirement/NN/requirement of/IN/of the/DT/the interface/NN/interface but/CC/but a/DT/a stack/NN/stack full/JJ/full exception/NN/exception is/VBZ/is an/DT/an artifact/NN/artifact of/IN/of this/DT/this implementation/NNP/implementation. if/IN/if i/PRP/i had/VBD/had some/DT/some other/JJ/other way/NN/way of/IN/of implementation/NN/implementation /,/, then/RB/then i/PRP/i would/MD/would never/RB/never have/VB/have to/TO/to raise/VB/raise a/DT/a stack/NN/stack full/JJ/full exception/NNP/exception. let/NN/let us/PRP/us look/VBP/look at/IN/at an/DT/an example/NNP/example. we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to implement/VB/implement the/DT/the stack/NN/stack and/CC/and never/RB/never to/TO/to have/VB/have a/DT/a stack/NN/stack full/JJ/full exception/NN/exception /,/, so/RB/so that/IN/that we/PRP/we can/MD/can always/RB/always grow/VB/grow the/DT/the stack/NN/stack when/WRB/when needed/NNP/needed. let/NN/let us/PRP/us look/VBP/look at/IN/at an/DT/an application/NN/application of/IN/of stacks/NNP/stacks. we/PRP/we have/VBP/have the/DT/the daily/JJ/daily stock/NN/stock prices/NNS/prices of/IN/of a/DT/a particular/JJ/particular stock/NNP/stock. if/IN/if i/PRP/i give/VBP/give you/PRP/you the/DT/the price/NN/price on/IN/on day/NN/day 0/-NONE-/0 /,/, the/DT/the price/NN/price on/IN/on day/NN/day 1/CD/1 and/CC/and so/RB/so on/IN/on /,/, then/RB/then the/DT/the span/NN/span of/IN/of a/DT/a stock/NN/stock price/NN/price on/IN/on a/DT/a certain/JJ/certain day/NN/day i/PRP/i is/VBZ/is defined/VBN/defined as/RB/as the/DT/the maximum/NN/maximum number/NN/number of/IN/of consecutive/JJ/consecutive days/NNS/days that/WDT/that the/DT/the price/NN/price of/IN/of the/DT/the stock/NN/stock has/VBZ/has been/VBN/been less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to its/PRP$/its price/NN/price on/IN/on day/NN/day i/NNP/i. the/DT/the following/VBG/following example/NN/example would/MD/would make/VB/make it/PRP/it clear/NNP/clear. is/VBZ/is the/DT/the span/NN/span of/IN/of the/DT/the stock/NN/stock price/NN/price on/IN/on day/NN/day five/CD/five and/CC/and it/PRP/it is/VBZ/is equal/JJ/equal to/TO/to the/DT/the maximum/NN/maximum number/NN/number of/IN/of days/NNS/days that/WDT/that the/DT/the price/NN/price of/IN/of this/DT/this stock/NN/stock has/VBZ/has been/VBN/been less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to day/NN/day price/NNP/price. for/IN/for four/CD/four days/NNS/days the/DT/the price/NN/price of/IN/of this/DT/this stock/NN/stock was/VBD/was less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to day/NN/day price/NN/price and/CC/and so/RB/so the/DT/the span/NN/span of/IN/of the/DT/the stock/NN/stock price/NN/price on/IN/on day/NN/day five/CD/five equals/NNS/equals 4/CD/4 /,/, inclusive/JJ/inclusive of/IN/of the/DT/the current/JJ/current day/NNP/day. following/VBG/following picture/NN/picture would/MD/would make/VB/make it/PRP/it clear/VB/clear hence/NN/hence we/PRP/we are/VBP/are counting/VBG/counting 1,2,3,4/CD/1,2,3,4 and/CC/and for/IN/for day/NN/day six/CD/six /,/, it/PRP/it is/VBZ/is 1/CD/1 /,/, 2/CD/2 /,/, 3,4,5,6/CD/3,4,5,6 that/WDT/that is/VBZ/is 6/CD/6 days/NNP/days. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 25/CD/25 /CD/) how/WRB/how can/MD/can you/PRP/you compute/VB/compute the/DT/the span/NN/span in/IN/in an/DT/an array/NN/array s/VBZ/s /,/, if/IN/if i/PRP/i give/VBP/give you/PRP/you the/DT/the stock/NN/stock prices/NNS/prices in/IN/in an/DT/an array/NN/array p/NNP/p. p/NN/p is/VBZ/is an/DT/an array/NN/array of/IN/of numbers/NNP/numbers. to/TO/to compute/VB/compute s/NNS/s /:/[ i/PRP/i /VBP/] /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the price/NN/price of/IN/of the/DT/the stock/NN/stock on/IN/on day/NN/day i/PRP/i /,/, i-1/-NONE-/i-1 /,/, i-2/-NONE-/i-2 and/CC/and so/RB/so on/NNP/on. the/DT/the index/NN/index k/NN/k will/MD/will start/VB/start from/IN/from zero/CD/zero and/CC/and it/PRP/it will/MD/will keep/VB/keep going/VBG/going down/IN/down till/NN/till the/DT/the price/NN/price of/IN/of the/DT/the stock/NN/stock on/IN/on day/NN/day i/NN/i- k/NN/k is/VBZ/is less/JJR/less than/IN/than the/DT/the price/NN/price of/IN/of the/DT/the stock/NN/stock on/IN/on day/NN/day i/NNP/i. the/DT/the moment/NN/moment you/PRP/you find/VBP/find a/DT/a case/NN/case such/JJ/such that/IN/that the/DT/the price/NN/price of/IN/of stock/NN/stock on/IN/on day/NN/day i/NN/i- k/NN/k is/VBZ/is actually/RB/actually more/RBR/more than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day i/PRP/i /,/, you/PRP/you stop/VBP/stop the/DT/the loop/NN/loop which/WDT/which is/VBZ/is given/VBN/given below/IN/below /,/, otherwise/RB/otherwise you/PRP/you keep/VB/keep incrementing/VBG/incrementing k/NNP/k. if/IN/if p/NN/p /:/[ i-k/JJ/i-k /NN/] p/NN/p /:/[ i/PRP/i /VBP/] then/RB/then k/VB/k ?/./? k/NN/k +/:/+ 1/CD/1 if/IN/if this/DT/this quantity/NN/quantity p/NN/p /:/[ i-k/JJ/i-k /NN/] p/NN/p /:/[ i/PRP/i /VBP/] is/VBZ/is less/RBR/less /,/, then/RB/then you/PRP/you increment/VBD/increment k/NN/k else/RB/else you/PRP/you say/VBP/say done/VBN/done is/VBZ/is true/NNP/true. done/NN/done will/MD/will help/VB/help us/PRP/us to/TO/to exist/VB/exist the/DT/the repeat-until/JJ/repeat-until loop/NNP/loop. it/PRP/it will/MD/will exit/VB/exit the/DT/the repeat-until/JJ/repeat-until loop/NN/loop if/IN/if done/NN/done is/VBZ/is true/JJ/true or/CC/or if/IN/if k/NN/k equals/NNS/equals i/PRP/i /,/, which/WDT/which means/VBZ/means that/DT/that you/PRP/you have/VBP/have reached/VBN/reached day/NN/day 0/CD/0. then/RB/then the/DT/the span/NN/span will/MD/will be/VB/be determined/VBN/determined by/IN/by the/DT/the value/NN/value of/IN/of k/NN/k /,/, because/IN/because k/NN/k tell/NN/tell us/PRP/us the/DT/the span/NN/span of/IN/of stock/NN/stock price/NN/price on/IN/on day/NN/day i/NNP/i. thus/RB/thus s/VBZ/s /:/[ i/PRP/i /VBP/] gets/NNS/gets the/DT/the value/NN/value k/NN/k /,/, /:/( s/NNS/s /VBP/[ i/PRP/i /VBP/] ?/./? k/NN/k /:/) /./. this/DT/this is/VBZ/is one/CD/one way/NN/way of/IN/of computing/NN/computing this/DT/this span/NNP/span. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 07/CD/07 /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? it/PRP/it takes/VBZ/takes time/NN/time as/IN/as we/PRP/we can/MD/can see/VB/see on/IN/on the/DT/the slide/NNP/slide. why/WRB/why should/MD/should it/PRP/it take/VB/take time/NN/time ?/./? because/IN/because we/PRP/we are/VBP/are repeatedly/RB/repeatedly comparing/VBG/comparing it/PRP/it how/WRB/how many/JJ/many times/NNS/times the/DT/the repeat-until/JJ/repeat-until loop/NN/loop can/MD/can be/VB/be executed/VBN/executed in/IN/in the/DT/the worst/JJS/worst case/NN/case ?/./? it/PRP/it is/VBZ/is i/PRP/i times/VBZ/times /,/, where/WRB/where i/PRP/i varying/VBG/varying itself/PRP/itself from/IN/from 0/-NONE-/0 through/IN/through n-1/NNP/n-1. the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times one/CD/one of/IN/of this/DT/this statement/NN/statement get/NN/get executed/VBN/executed might/MD/might be/VB/be or/CC/or /./. thus/RB/thus the/DT/the running/VBG/running time/NN/time of/IN/of this/DT/this algorithm/NN/algorithm is/VBZ/is o/RB/o /:/( /:/) in/IN/in the/DT/the worst/JJS/worst case/NNP/case. question/NN/question is/VBZ/is can/MD/can we/PRP/we do/VBP/do something/NN/something better/RBR/better ?/./? yes/NNS/yes /,/, as/IN/as we/PRP/we are/VBP/are talking/VBG/talking of/IN/of stacks/NNS/stacks /,/, we/PRP/we can/MD/can use/VB/use a/DT/a stack/NN/stack to/TO/to do/VB/do something/NN/something better/NNP/better. to/TO/to compute/VB/compute the/DT/the span/NN/span /,/, we/PRP/we need/VBP/need to/TO/to know/VB/know the/DT/the closest/JJS/closest day/NN/day preceding/VBG/preceding i/PRP/i /,/, on/IN/on which/WDT/which the/DT/the stock/NN/stock price/NN/price is/VBZ/is greater/JJR/greater than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day i/NNP/i. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 26/CD/26 /CD/) in/IN/in the/DT/the example/NN/example /,/, for/IN/for day/NN/day 5/CD/5 i/PRP/i need/VBP/need to/TO/to know/VB/know the/DT/the closest/JJS/closest day/NN/day preceding/VBG/preceding day/NN/day 5/CD/5 /,/, on/IN/on which/WDT/which the/DT/the stock/NN/stock price/NN/price is/VBZ/is greater/JJR/greater than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day 5/CD/5. on/IN/on day/NN/day 1/CD/1 /,/, it/PRP/it was/VBD/was greater/NNP/greater. for/IN/for day/NN/day 5/CD/5 /,/, the/DT/the span/NN/span would/MD/would be/VB/be 1,2,3,4/CD/1,2,3,4. i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call the/DT/the quantity/NN/quantity h/NN/h /:/( i/PRP/i /VBP/) /./. h/NN/h /:/( i/PRP/i /VBP/) is/VBZ/is the/DT/the closest/JJS/closest day/NN/day preceding/VBG/preceding i/PRP/i /,/, on/IN/on which/WDT/which the/DT/the price/NN/price is/VBZ/is greater/JJR/greater than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day i/NNP/i. thus/RB/thus h/JJ/h /NN/( 3/CD/3 /CD/) =/CD/= 2/CD/2 /,/, h/JJ/h /NN/( 2/CD/2 /CD/) =/CD/= 1/CD/1 /,/, h/JJ/h /NN/( 1/CD/1 /CD/) =/CD/= 0/-NONE-/0 /,/, h/NN/h /:/( 0/-NONE-/0 /:/) =/:/= -1/-NONE-/-1 and/CC/and h/NN/h /:/( 4/CD/4 /CD/) =/CD/= 3/CD/3 /,/, h/JJ/h /NN/( 5/CD/5 /CD/) =/CD/= 1/CD/1 /,/, h/JJ/h /NN/( 6/CD/6 /CD/) =/CD/= 0/CD/0. once/RB/once you/PRP/you computed/VBD/computed h/JJ/h /,/, how/WRB/how can/MD/can you/PRP/you determine/VB/determine the/DT/the span/NN/span ?/./? the/DT/the span/NN/span for/IN/for the/DT/the price/NN/price on/IN/on day/NN/day 5/CD/5 is/VBZ/is 5-1/CD/5-1 that/IN/that is/VBZ/is 4/CD/4. if/IN/if we/PRP/we can/MD/can compute/VB/compute these/DT/these h/NN/h quantities/NNS/quantities /,/, we/PRP/we can/MD/can easily/RB/easily compute/VB/compute the/DT/the span/NNP/span. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 31/CD/31 /CD/) how/WRB/how do/VBP/do we/PRP/we compute/VB/compute the/DT/the h/NN/h quantities/NNS/quantities ?/./? suppose/NN/suppose those/DT/those 6/CD/6 quantities/NNS/quantities which/WDT/which is/VBZ/is in/IN/in the/DT/the slide/NN/slide /,/, were/VBD/were the/DT/the prices/NNS/prices that/WDT/that i/PRP/i have/VBP/have given/VBN/given from/IN/from day/NN/day 1/CD/1 through/IN/through 6/CD/6. can/MD/can h/VB/h /:/( 7/CD/7 /CD/) be/VB/be 1/CD/1 ?/./? i/PRP/i have/VBP/have not/RB/not told/VBN/told the/DT/the price/NN/price on/IN/on day/NN/day 7/CD/7 but/CC/but through/IN/through the/DT/the definition/NN/definition of/IN/of h/NN/h /:/( 7/CD/7 /CD/) /,/, it/PRP/it is/VBZ/is the/DT/the closest/JJS/closest day/NN/day preceding/VBG/preceding 7/CD/7 /,/, on/IN/on which/WDT/which the/DT/the stock/NN/stock ?/./? s/NNS/s price/NN/price is/VBZ/is larger/JJR/larger than/IN/than price/NN/price on/IN/on day/NN/day 7/CD/7. but/CC/but that/IN/that day/NN/day can/MD/can not/RB/not be/VB/be 1/CD/1 at/IN/at all/DT/all /,/, because/IN/because the/DT/the price/NN/price on/IN/on day/NN/day 2/CD/2 is/VBZ/is larger/JJR/larger than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day 1/CD/1. similarly/RB/similarly that/IN/that day/NN/day can/MD/can not/RB/not be/VB/be 3/CD/3 or/CC/or 4/CD/4. what/WP/what are/VBP/are the/DT/the possible/JJ/possible values/NNS/values that/WDT/that h/NN/h /:/( 7/CD/7 /CD/) can/MD/can take/VB/take ?/./? 2/CD/2 /,/, 5/CD/5 and/CC/and 6/CD/6 are/VBP/are the/DT/the only/JJ/only possible/JJ/possible values/NNS/values that/WDT/that h/NN/h /:/( 7/CD/7 /CD/) can/MD/can take/NNP/take. we/PRP/we will/MD/will store/VB/store the/DT/the indices/NNS/indices 2/CD/2 /,/, 5/CD/5 /,/, 6/CD/6 in/IN/in a/DT/a stack/NNP/stack. 2/CD/2 will/MD/will be/VB/be at/IN/at the/DT/the bottom/NN/bottom of/IN/of the/DT/the stack/NN/stack /,/, 5/CD/5 will/MD/will be/VB/be above/IN/above that/DT/that and/CC/and 6/CD/6 on/IN/on the/DT/the top/NNP/top. to/TO/to determine/VB/determine h/NN/h /:/( 7/CD/7 /CD/) /,/, first/JJ/first we/PRP/we need/VBP/need to/TO/to compare/VB/compare the/DT/the price/NN/price on/IN/on day/NN/day 7/CD/7 with/IN/with price/NN/price on/IN/on day/NN/day 6/CD/6. suppose/NN/suppose the/DT/the price/NN/price on/IN/on day/NN/day 7/CD/7 is/VBZ/is less/JJR/less than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day 6/CD/6 then/RB/then what/WP/what is/VBZ/is the/DT/the h/NN/h /:/( 7/CD/7 /CD/) /./. it/PRP/it is/VBZ/is 6/CD/6 /,/, but/CC/but if/IN/if the/DT/the price/NN/price on/IN/on day/NN/day 7/CD/7 was/VBD/was greater/JJR/greater than/IN/than price/NN/price on/IN/on day/NN/day 6/CD/6 /,/, then/RB/then i/PRP/i will/MD/will compare/VB/compare with/IN/with price/NN/price on/IN/on day/NN/day 5/CD/5. if/IN/if it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day 5/CD/5 /,/, then/RB/then i/PRP/i will/MD/will compare/VB/compare it/PRP/it with/IN/with 2/CD/2. if/IN/if it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than 2/CD/2 /,/, then/RB/then it/PRP/it is/VBZ/is minus/VBZ/minus one/CD/one that/WDT/that is/VBZ/is h/VBP/h /-NONE-/( 7/CD/7 /CD/) =/CD/= -1/NNP/-1. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 41/CD/41 /CD/) suppose/NN/suppose the/DT/the new/JJ/new bar/NN/bar i/PRP/i have/VBP/have drawn/VBN/drawn is/VBZ/is the/DT/the price/NN/price on/IN/on day/NN/day 7/CD/7 and/CC/and it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day 6/CD/6 then/RB/then h/JJ/h /NN/( 7/CD/7 /CD/) is/VBZ/is 5/CD/5. the/DT/the first/JJ/first price/NN/price greater/NN/greater than/IN/than the/DT/the price/NN/price on/IN/on day/NN/day 7/CD/7 in/IN/in the/DT/the comparison/NN/comparison gives/VBZ/gives me/PRP/me h/VBP/h /:/( 7/CD/7 /CD/) /./. but/CC/but once/RB/once i/PRP/i know/VBP/know h/JJ/h /NN/( 7/CD/7 /CD/) /,/, i/PRP/i should/MD/should update/VB/update my/PRP$/my stack/NNP/stack. now/RB/now what/WP/what should/MD/should my/PRP$/my stack/NN/stack contain/NN/contain ?/./? earlier/JJR/earlier it/PRP/it contains/VBZ/contains the/DT/the indices/NNS/indices 2/CD/2 /,/, 5/CD/5 /,/, 6/CD/6 and/CC/and now/RB/now it/PRP/it contains/VBZ/contains 2/CD/2 /,/, 5/CD/5 and/CC/and 7/CD/7. it/PRP/it is/VBZ/is clear/JJ/clear because/IN/because h/JJ/h /NN/( 8/CD/8 /CD/) can/MD/can never/RB/never be/VB/be 6/CD/6 /,/, i/PRP/i should/MD/should get/VB/get rid/JJ/rid of/IN/of 6/CD/6 by/IN/by replacing/NN/replacing it/PRP/it with/IN/with 7/CD/7. you/PRP/you can/MD/can see/VB/see that/IN/that the/DT/the stack/NN/stack would/MD/would be/VB/be the/DT/the right/NN/right way/NN/way to/TO/to do/VB/do these/DT/these things/NNP/things. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 40/CD/40 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the procedure/NNP/procedure. let/NN/let d/VBD/d be/VB/be the/DT/the stack/NN/stack and/CC/and initially/RB/initially it/PRP/it is/VBZ/is empty/NNP/empty. when/WRB/when i/PRP/i get/VBP/get a/DT/a certain/JJ/certain price/NN/price /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to compare/VB/compare that/IN/that price/NN/price with/IN/with the/DT/the price/NN/price on/IN/on the/DT/the top/JJ/top of/IN/of the/DT/the stack/NNP/stack. if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than the/DT/the price/NN/price on/IN/on the/DT/the top/JJ/top of/IN/of the/DT/the stack/NN/stack that/IN/that is/VBZ/is on/IN/on the/DT/the top/JJ/top of/IN/of the/DT/the stack/NN/stack we/PRP/we had/VBD/had 2/CD/2 /,/, 5/CD/5 /,/, 6/CD/6 and/CC/and if/IN/if the/DT/the 7th/JJ/7th bar/NN/bar is/VBZ/is less/JJR/less than/IN/than the/DT/the 6/CD/6 then/RB/then it/PRP/it is/VBZ/is just/RB/just what/WP/what is/VBZ/is there/RB/there on/IN/on the/DT/the top/NNP/top. then/RB/then we/PRP/we are/VBP/are done/VBN/done /,/, the/DT/the index/NN/index on/IN/on the/DT/the top/JJ/top of/IN/of the/DT/the stack/NN/stack will/MD/will give/VB/give the/DT/the h/NN/h value/NNP/value. if/IN/if it/PRP/it is/VBZ/is more/RBR/more than/IN/than the/DT/the price/NN/price on/IN/on the/DT/the top/JJ/top of/IN/of the/DT/the stack/NN/stack /,/, then/RB/then i/PRP/i will/MD/will pop/VB/pop of/IN/of or/CC/or remove/VB/remove the/DT/the top/JJ/top of/IN/of the/DT/the stack/NN/stack /,/, because/IN/because i/PRP/i need/VBP/need to/TO/to compare/VB/compare with/IN/with the/DT/the next/JJ/next one/NNP/one. i/PRP/i pop/VBP/pop of/IN/of because/IN/because i/PRP/i will/MD/will not/RB/not need/VB/need that/IN/that quantity/NN/quantity any/DT/any more/NNP/more. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 36/CD/36 /CD/) as/IN/as you/PRP/you recall/VBP/recall from/IN/from the/DT/the previous/JJ/previous slide/NN/slide /,/, since/IN/since 7th/JJ/7th bar/NN/bar was/VBD/was more/JJR/more than/IN/than 6th/CD/6th bar/NN/bar /,/, i/PRP/i can/MD/can actually/RB/actually get/VB/get rid/JJ/rid of/IN/of 6th/JJ/6th bar/NN/bar because/IN/because in/IN/in the/DT/the stack/NN/stack /,/, i/PRP/i do/VBP/do not/RB/not need/VB/need that/IN/that next/JJ/next time/NNP/time. we/PRP/we are/VBP/are going/VBG/going to/TO/to go/VB/go around/IN/around the/DT/the loop/NN/loop till/IN/till either/DT/either done/NN/done becomes/VBZ/becomes true/NNP/true. when/WRB/when it/PRP/it becomes/VBZ/becomes true/JJ/true it/PRP/it says/VBZ/says that/IN/that i/PRP/i have/VBP/have found/VBN/found a/DT/a price/NN/price which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than the/DT/the current/JJ/current day/NN/day price/NNP/price. but/CC/but if/IN/if done/NN/done never/RB/never becomes/VBZ/becomes true/JJ/true and/CC/and the/DT/the stack/NN/stack becomes/VBZ/becomes empty/JJ/empty then/RB/then h/JJ/h =/NN/= -1/-NONE-/-1 /,/, exactly/RB/exactly that/IN/that is/VBZ/is being/VBG/being set/NN/set here/RB/here in/IN/in the/DT/the below/NN/below statement/NNP/statement. if/IN/if d.isempty/JJ/d.isempty /NN/( /:/) then/RB/then h/JJ/h ?/./? -1/-NONE-/-1 else/RB/else h/JJ/h ?/./? d.top/JJ/d.top /NN/( /:/) when/WRB/when i/PRP/i exit/VBP/exit this/DT/this /NN/( p/NN/p /:/[ i/PRP/i /VBP/] p/NN/p /:/[ d.top/JJ/d.top /NN/( /:/) /:/] /:/) loop/NN/loop /,/, the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty then/RB/then h/JJ/h =/NN/= -1/-NONE-/-1 else/RB/else h/JJ/h is/VBZ/is the/DT/the top/JJ/top value/NN/value of/IN/of the/DT/the stack/NNP/stack. once/RB/once i/PRP/i know/VBP/know h/JJ/h /,/, i/PRP/i can/MD/can compute/VB/compute s/NNS/s /:/[ i/PRP/i /VBP/] and/CC/and keep/VB/keep it/NNP/it. i/PRP/i will/MD/will push/VB/push i/PRP/i back/RB/back in/IN/in because/IN/because in/IN/in my/PRP$/my previous/JJ/previous slide/NN/slide when/WRB/when i/PRP/i got/VBD/got this/DT/this 7/CD/7 /,/, i/PRP/i now/RB/now push/VBP/push 7/CD/7 in/IN/in for/IN/for my/PRP$/my next/JJ/next computation/NNP/computation. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? may/MD/may be/VB/be n/VBN/n times/-NONE-/times. while/IN/while loop/NN/loop might/MD/might execute/VB/execute a/DT/a lot/NN/lot of/IN/of times/NNS/times and/CC/and why/WRB/why this/DT/this should/MD/should take/VB/take only/RB/only n/VB/n time/NNP/time. is/VBZ/is the/DT/the worst/JJS/worst case/NN/case or/CC/or n/NN/n ?/./? it/PRP/it may/MD/may be/VB/be /./. /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 52/CD/52 /CD/) how/WRB/how many/JJ/many elements/NNS/elements do/VBP/do we/PRP/we pushed/VBD/pushed on/IN/on the/DT/the stack/NN/stack ?/./? each/DT/each element/NN/element is/VBZ/is pushed/VBN/pushed once/RB/once and/CC/and we/PRP/we have/VBP/have pushed/VBN/pushed at/IN/at most/JJS/most n/JJ/n elements/NNS/elements on/IN/on to/TO/to the/DT/the stack/NN/stack /,/, if/IN/if there/EX/there are/VBP/are n/NN/n elements/NNS/elements to/TO/to begin/VB/begin with/NNP/with. every/DT/every time/NN/time when/WRB/when the/DT/the while/NN/while loop/NN/loop is/VBZ/is executed/VBN/executed /,/, we/PRP/we pop/VBP/pop of/IN/of one/CD/one element/NN/element from/IN/from the/DT/the stack/NNP/stack. how/WRB/how many/JJ/many times/NNS/times the/DT/the while/NN/while loop/NN/loop gets/VBZ/gets executed/VBN/executed ?/./? it/PRP/it is/VBZ/is n/VBN/n times/-NONE-/times. every/DT/every time/NN/time when/WRB/when the/DT/the loop/NN/loop executes/VBZ/executes /,/, we/PRP/we are/VBP/are removing/VBG/removing an/DT/an element/NN/element from/IN/from the/DT/the stack/NNP/stack. if/IN/if the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements ever/RB/ever we/PRP/we pushed/VBD/pushed on/IN/on the/DT/the stack/NN/stack was/VBD/was n/VBN/n /,/, then/RB/then how/WRB/how can/MD/can we/PRP/we pop/VB/pop of/IN/of more/JJR/more than/IN/than n/NN/n elements/NNS/elements from/IN/from the/DT/the stack/NNP/stack. it/PRP/it means/VBZ/means that/IN/that the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times the/DT/the loop/NN/loop executed/VBD/executed is/VBZ/is not/RB/not more/RBR/more than/IN/than n/NNP/n. how/WRB/how many/JJ/many times/NNS/times do/VBP/do the/DT/the statements/NNS/statements inside/VBP/inside the/DT/the for-loop/JJ/for-loop execute/NN/execute ?/./? all/DT/all most/RBS/most n/JJ/n times/NNS/times /,/, because/IN/because these/DT/these are/VBP/are all/DT/all a/DT/a part/NN/part of/IN/of the/DT/the for-loop/NNP/for-loop. if/IN/if statements/NNS/statements execute/VBP/execute exactly/RB/exactly n/JJ/n times/NNP/times. what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time it/PRP/it will/MD/will take/VB/take ?/./? it/PRP/it is/VBZ/is order/NN/order n/NN/n and/CC/and not/RB/not /./. i/PRP/i am/VBP/am saying/VBG/saying the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times the/DT/the loop/NN/loop executes/VBZ/executes when/WRB/when all/DT/all iteration/NN/iteration put/VBD/put together/RP/together is/VBZ/is no/DT/no more/RBR/more than/IN/than n/NNP/n. because/IN/because every/DT/every time/NN/time the/DT/the loop/NN/loop executes/VBZ/executes and/CC/and when/WRB/when we/PRP/we go/VBP/go through/IN/through the/DT/the loop/NN/loop /,/, we/PRP/we remove/VBP/remove one/CD/one element/NN/element stack/NN/stack from/IN/from the/DT/the stack/NNP/stack. we/PRP/we never/RB/never pushed/VBD/pushed more/JJR/more than/IN/than n/NN/n elements/NNS/elements or/CC/or the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements we/PRP/we pushed/VBD/pushed on/IN/on the/DT/the stack/NN/stack is/VBZ/is at/IN/at most/JJS/most n/NNP/n. one/CD/one problem/NN/problem with/IN/with our/PRP$/our stack/NN/stack implementation/NN/implementation is/VBZ/is that/IN/that we/PRP/we had/VBD/had to/TO/to give/VB/give maximum/NN/maximum size/NN/size for/IN/for the/DT/the stack/NNP/stack. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at an/DT/an implementation/NN/implementation in/IN/in which/WDT/which the/DT/the stack/NN/stack can/MD/can grow/VB/grow /,/, if/IN/if it/PRP/it ever/RB/ever gets/VBZ/gets filled/NNP/filled. when/WRB/when we/PRP/we are/VBP/are pushing/VBG/pushing an/DT/an element/NN/element /,/, if/IN/if the/DT/the size/NN/size of/IN/of the/DT/the stack/NN/stack is/VBZ/is n/VBN/n then/RB/then i/PRP/i create/VBP/create a/DT/a new/JJ/new array/NN/array of/IN/of length/NN/length f/NN/f /:/( n/NN/n /:/) and/CC/and i/PRP/i copy/VBP/copy all/DT/all the/DT/the elements/NNS/elements of/IN/of my/PRP$/my original/JJ/original stack/NN/stack s/NNS/s in/IN/in to/TO/to a/DT/a and/CC/and then/RB/then i/PRP/i rename/VBP/rename it/PRP/it as/IN/as s/NNP/s. it/PRP/it becomes/VBZ/becomes my/PRP$/my new/JJ/new stack/NN/stack with/IN/with f/NN/f /:/( n/NN/n /:/) locations/NNS/locations in/IN/in it/PRP/it whose/WP$/whose capacity/NN/capacity is/VBZ/is f/NN/f /:/( n/NN/n /:/) /./. thus/RB/thus f/NN/f /:/( n/NN/n /:/) will/MD/will be/VB/be larger/JJR/larger than/IN/than n/NN/n for/IN/for us/PRP/us and/CC/and so/RB/so we/PRP/we had/VBD/had to/TO/to increase/VB/increase the/DT/the size/NN/size of/IN/of the/DT/the stack/NNP/stack. i/PRP/i increment/VBP/increment the/DT/the top/JJ/top counter/NN/counter and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to push/VB/push the/DT/the new/JJ/new object/NN/object into/IN/into my/PRP$/my top/JJ/top location/NNP/location. how/WRB/how should/MD/should we/PRP/we should/MD/should f/VB/f /:/( n/NN/n /:/) ?/./? there/EX/there are/VBP/are two/CD/two strategies/NNS/strategies in/IN/in which/WDT/which one/CD/one could/MD/could adopt/NNP/adopt. one/CD/one could/MD/could either/RB/either have/VB/have a/DT/a tight/JJ/tight strategy/NN/strategy or/CC/or a/DT/a growth/NN/growth strategy/NNP/strategy. in/IN/in a/DT/a tight/JJ/tight strategy/NN/strategy /,/, we/PRP/we always/RB/always increment/VBP/increment the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array by/IN/by some/DT/some constant/JJ/constant c/NNP/c. we/PRP/we just/RB/just increment/VBP/increment that/IN/that is/VBZ/is additive/JJ/additive increment/NNP/increment. in/IN/in the/DT/the growth/NN/growth strategy/NN/strategy /,/, we/PRP/we double/JJ/double the/DT/the size/NN/size of/IN/of the/DT/the stack/NNP/stack. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 02/CD/02 /CD/) we/PRP/we want/VBP/want to/TO/to compare/VB/compare and/CC/and see/VB/see which/WDT/which of/IN/of these/DT/these is/VBZ/is a/DT/a better/JJR/better strategy/NNP/strategy. we/PRP/we are/VBP/are going/VBG/going to/TO/to think/VB/think push/JJ/push as/IN/as of/IN/of two/CD/two kinds/NNP/kinds. one/CD/one is/VBZ/is regular/JJ/regular push/NNP/push. in/IN/in a/DT/a regular/JJ/regular push/NN/push /,/, there/EX/there was/VBD/was just/RB/just space/NN/space in/IN/in the/DT/the stack/NN/stack and/CC/and you/PRP/you just/RB/just push/VBP/push the/DT/the element/NN/element and/CC/and it/PRP/it takes/VBZ/takes one/CD/one unit/NN/unit of/IN/of time/NNP/time. a/DT/a special/JJ/special push/NN/push is/VBZ/is one/CD/one in/IN/in which/WDT/which the/DT/the stack/NN/stack is/VBZ/is already/RB/already full/JJ/full and/CC/and you/PRP/you have/VBP/have to/TO/to create/VB/create a/DT/a larger/JJR/larger stack/NN/stack and/CC/and copy/VB/copy the/DT/the elements/NNS/elements form/NN/form the/DT/the earlier/JJR/earlier stack/NN/stack to/TO/to this/DT/this larger/JJR/larger stack/NN/stack and/CC/and then/RB/then push/VB/push the/DT/the element/NNP/element. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 40/CD/40 /CD/) you/PRP/you created/VBD/created a/DT/a stack/NN/stack of/IN/of size/NN/size f/NN/f /:/( n/NN/n /:/) that/IN/that costs/NNS/costs f/VBP/f /:/( n/NN/n /:/) units/NNS/units and/CC/and you/PRP/you copied/VBD/copied the/DT/the n/NN/n elements/NNS/elements that/WDT/that cost/NN/cost n/VBP/n units/NNP/units. and/CC/and then/RB/then you/PRP/you pushed/VBD/pushed one/CD/one more/JJR/more element/NN/element that/IN/that cost/NN/cost one/CD/one more/JJR/more unit/NNP/unit. the/DT/the total/JJ/total cost/NN/cost of/IN/of this/DT/this special/JJ/special push/NN/push operation/NN/operation would/MD/would be/VB/be f/NN/f /:/( n/NN/n /:/) +/:/+ n/NN/n +/:/+ 1/CD/1. let/NN/let us/PRP/us see/VBP/see how/WRB/how the/DT/the tight/JJ/tight strategy/NN/strategy behaves/NNS/behaves when/WRB/when we/PRP/we increment/VBP/increment the/DT/the size/NN/size of/IN/of the/DT/the stack/NN/stack by/IN/by c/NN/c units/NNP/units. for/IN/for example/NN/example c/NN/c is/VBZ/is taken/VBN/taken as/RB/as 4/CD/4. initially/RB/initially i/PRP/i started/VBD/started with/IN/with the/DT/the array/NN/array of/IN/of size/NN/size 0/CD/0. when/WRB/when the/DT/the first/JJ/first element/NN/element came/VBD/came to/TO/to push/VB/push that/IN/that was/VBD/was a/DT/a /,/, then/RB/then i/PRP/i created/VBD/created a/DT/a stack/NN/stack of/IN/of size/NN/size 4/CD/4 and/CC/and i/PRP/i push/VBP/push this/DT/this first/JJ/first element/NN/element in/IN/in and/CC/and the/DT/the total/JJ/total cost/NN/cost was/VBD/was 4/CD/4 +/CD/+ 1/CD/1. when/WRB/when the/DT/the second/JJ/second element/NN/element came/VBD/came /,/, i/PRP/i do/VBP/do not/RB/not need/VB/need to/TO/to enlarge/VB/enlarge my/PRP$/my stack/NN/stack /,/, because/IN/because i/PRP/i have/VBP/have space/NNP/space. it/PRP/it just/RB/just cost/VB/cost one/CD/one unit/NN/unit which/WDT/which is/VBZ/is a/DT/a regular/JJ/regular push/NNP/push. the/DT/the 3rd/JJ/3rd and/CC/and 4th/JJ/4th operation/NN/operation is/VBZ/is also/RB/also a/DT/a regular/JJ/regular push/NN/push which/WDT/which costs/NNS/costs 1/CD/1 unit/NN/unit each/NNP/each. the/DT/the next/JJ/next one/CD/one is/VBZ/is a/DT/a special/JJ/special push/NN/push /,/, i/PRP/i am/VBP/am not/RB/not trying/VBG/trying to/TO/to push/VB/push e/NN/e because/IN/because the/DT/the stack/NN/stack is/VBZ/is already/RB/already full/NNP/full. i/PRP/i need/VBP/need to/TO/to create/VB/create an/DT/an array/NN/array of/IN/of size/NN/size 8/CD/8 and/CC/and i/PRP/i need/VBP/need to/TO/to copy/VB/copy the/DT/the 4/CD/4 elements/NNS/elements /,/, then/RB/then i/PRP/i need/VBP/need to/TO/to push/VB/push 1/CD/1. the/DT/the total/JJ/total cost/NN/cost becomes/VBZ/becomes 8/CD/8 +/CD/+ 4/CD/4 +/CD/+ 1/CD/1 and/CC/and these/DT/these are/VBP/are all/DT/all the/DT/the 3/CD/3 regular/JJ/regular pushes/NNP/pushes. then/RB/then once/RB/once again/RB/again when/WRB/when i/PRP/i fill/VBP/fill it/PRP/it /,/, i/PRP/i will/MD/will create/VB/create an/DT/an array/NN/array of/IN/of size/NN/size 12/CD/12 /,/, because/IN/because c/NN/c is/VBZ/is 4/CD/4. i/PRP/i am/VBP/am incrementing/VBG/incrementing the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array by/IN/by 4/CD/4 units/NNS/units every/DT/every time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 07/CD/07 /CD/) i/PRP/i create/VBP/create an/DT/an array/NN/array of/IN/of size/NN/size 12/CD/12 and/CC/and i/PRP/i copy/VBP/copy the/DT/the eight/CD/eight elements/NNS/elements then/RB/then i/PRP/i push/VBP/push one/CD/one more/JJR/more element/NN/element /,/, so/RB/so i/PRP/i get/VBP/get 12/CD/12 +/CD/+ 8/CD/8 +/CD/+ 1/CD/1 and/CC/and so/RB/so on/IN/on and/CC/and finally/RB/finally i/PRP/i have/VBP/have 16/CD/16 +/:/+ 12/CD/12 +/CD/+ 1/CD/1. when/WRB/when the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array was/VBD/was 4/CD/4 /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call it/PRP/it as/IN/as phase/NN/phase 1/CD/1 and/CC/and when/WRB/when the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array is/VBZ/is 8/CD/8 /,/, i/PRP/i will/MD/will call/VB/call it/PRP/it as/IN/as phase/NN/phase 2/CD/2 and/CC/and so/RB/so on/NNP/on. let/VB/let us/PRP/us see/VB/see the/DT/the total/JJ/total cost/NN/cost of/IN/of the/DT/the procedure/NNP/procedure. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 58/CD/58 /:/: 18/CD/18 /CD/) the/DT/the pound/NN/pound symbol/NN/symbol in/IN/in the/DT/the above/NN/above slide/NN/slide is/VBZ/is a/DT/a multiplication/NN/multiplication operator/NNP/operator. in/IN/in phase/NN/phase i/PRP/i /,/, the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array is/VBZ/is c/NN/c */-NONE-/* i/NNP/i. in/IN/in phase/NN/phase 1/CD/1 it/PRP/it is/VBZ/is c/JJ/c /,/, in/IN/in phase/NN/phase 2/CD/2 it/PRP/it is/VBZ/is 2/CD/2 c/NN/c /,/, in/IN/in phase/NN/phase 3/CD/3 it/PRP/it is/VBZ/is 3c/CD/3c and/CC/and so/RB/so on/NNP/on. the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array is/VBZ/is c/NN/c */-NONE-/* i/NNP/i. what/WP/what is/VBZ/is the/DT/the total/JJ/total cost/NN/cost of/IN/of phase/NN/phase i/PRP/i ?/./? t/NN/t at/IN/at the/DT/the beginning/NN/beginning of/IN/of phase/NN/phase i/PRP/i /,/, i/PRP/i first/RB/first create/VB/create an/DT/an array/NN/array of/IN/of size/NN/size c/NN/c */-NONE-/* i/PRP/i then/RB/then i/PRP/i copy/VBP/copy the/DT/the elements/NNS/elements of/IN/of the/DT/the previous/JJ/previous array/NNP/array. let/NN/let us/PRP/us look/VBP/look at/IN/at an/DT/an example/NNP/example. i/PRP/i first/RB/first create/VB/create an/DT/an array/NN/array of/IN/of size/NN/size 8/CD/8 then/RB/then i/PRP/i copy/VBP/copy the/DT/the previous/JJ/previous 4/CD/4 elements/NNP/elements. so/RB/so i/PRP/i copy/VBP/copy c/JJ/c */-NONE-/* i-1/-NONE-/i-1 elements/NNS/elements and/CC/and it/PRP/it is/VBZ/is the/DT/the cost/NN/cost of/IN/of copying/VBG/copying the/DT/the elements/NNS/elements in/IN/in to/TO/to the/DT/the new/JJ/new array/NNP/array. then/RB/then i/PRP/i will/MD/will do/VB/do c/NN/c more/RBR/more pushes/NNS/pushes in/IN/in this/DT/this phase/NN/phase before/IN/before the/DT/the array/NN/array gets/VBZ/gets filled/NNP/filled. c/NN/c is/VBZ/is the/DT/the total/JJ/total cost/NN/cost of/IN/of the/DT/the 4/CD/4 regular/JJ/regular pushes/NNS/pushes that/WDT/that i/PRP/i have/VBP/have been/VBN/been doing/NNP/doing. the/DT/the total/JJ/total cost/NN/cost is/VBZ/is c/NN/c */-NONE-/* i/PRP/i +/VBP/+ c/JJ/c */-NONE-/* i-1/-NONE-/i-1 +/:/+ c/NN/c which/WDT/which is/VBZ/is 2/CD/2 times/NNS/times ci/NNP/ci. thus/RB/thus the/DT/the cost/NN/cost of/IN/of phase/NN/phase i/PRP/i is/VBZ/is 2ci/CD/2ci. in/IN/in each/DT/each phase/NN/phase i/PRP/i am/VBP/am doing/VBG/doing c/NN/c pushes/NNS/pushes /,/, then/RB/then if/IN/if i/PRP/i have/VBP/have to/TO/to do/VB/do a/DT/a total/NN/total of/IN/of n/NN/n pushes/NNS/pushes then/RB/then i/PRP/i need/VBP/need phases/NNP/phases. total/NN/total cost/NN/cost of/IN/of phases/NNS/phases would/MD/would be/VB/be 2c/CD/2c /CD/( 1/CD/1 +/CD/+ 2/CD/2 +/CD/+ 3/CD/3 +/CD/+ ?/./? +/CD/+ /CD/) because/IN/because the/DT/the cost/NN/cost of/IN/of phase/NN/phase is/VBZ/is 2ci/CD/2ci and/CC/and this/DT/this sum/NN/sum is/VBZ/is roughly/RB/roughly times/VBZ/times 2c/CD/2c and/CC/and that/IN/that is/VBZ/is not/RB/not t/VBN/t /,/, it/PRP/it is/VBZ/is approximately/RB/approximately o/RB/o /:/( /:/) /./. so/RB/so far/RB/far we/PRP/we have/VBP/have seen/VBN/seen the/DT/the tight/JJ/tight strategy/NNP/strategy. we/PRP/we could/MD/could also/RB/also take/VB/take creation/NN/creation as/IN/as order/NN/order 1/CD/1 /,/, in/IN/in that/DT/that case/NN/case the/DT/the analysis/NN/analysis would/MD/would change/VB/change slightly/NNP/slightly. for/IN/for the/DT/the purposes/NNS/purposes of/IN/of analysis/NN/analysis i/PRP/i am/VBP/am just/RB/just taking/VBG/taking it/PRP/it as/IN/as /,/, if/IN/if you/PRP/you are/VBP/are creating/VBG/creating an/DT/an array/NN/array of/IN/of size/NN/size something/NN/something /,/, you/PRP/you take/VBP/take that/IN/that much/RB/much as/IN/as the/DT/the cost/NNP/cost. let/NN/let us/PRP/us see/VBP/see the/DT/the growth/NN/growth strategy/NNP/strategy. in/IN/in the/DT/the growth/NN/growth strategy/NN/strategy /,/, i/PRP/i start/VBP/start with/IN/with an/DT/an array/NN/array of/IN/of size/NN/size 0/-NONE-/0 /,/, when/WRB/when i/PRP/i get/VBP/get the/DT/the first/JJ/first element/NN/element i/PRP/i create/VBP/create an/DT/an array/NN/array of/IN/of size/NN/size 1/CD/1. when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to push/VB/push an/DT/an element/NN/element i/PRP/i would/MD/would double/VB/double this/DT/this array/NN/array /,/, so/RB/so i/PRP/i create/VBP/create an/DT/an array/NN/array size/NN/size 2/CD/2 and/CC/and i/PRP/i push/VBP/push this/DT/this element/NNP/element. when/WRB/when i/PRP/i try/VBP/try to/TO/to push/VB/push the/DT/the element/NN/element /,/, i/PRP/i double/VBP/double this/DT/this array/NN/array and/CC/and create/VB/create an/DT/an array/NN/array of/IN/of size/NN/size 4/CD/4 and/CC/and push/JJ/push the/DT/the element/NNP/element. i/PRP/i have/VBP/have space/NN/space for/IN/for one/CD/one more/JJR/more element/NN/element and/CC/and this/DT/this is/VBZ/is the/DT/the regular/JJ/regular push/NN/push while/IN/while pushing/VBG/pushing d/NNP/d. when/WRB/when i/PRP/i try/VBP/try to/TO/to push/VB/push the/DT/the 5th/JJ/5th element/NN/element /,/, i/PRP/i will/MD/will double/VB/double the/DT/the size/NN/size of/IN/of array/NN/array again/RB/again /,/, so/RB/so i/PRP/i create/VBP/create an/DT/an array/NN/array of/IN/of size/NN/size 8/CD/8 and/CC/and copy/NN/copy these/DT/these elements/NNS/elements and/CC/and then/RB/then push/VB/push the/DT/the 5th/JJ/5th element/NN/element and/CC/and so/RB/so on/NNP/on. once/RB/once again/RB/again we/PRP/we can/MD/can analyze/VB/analyze the/DT/the cost/NNP/cost. 1/CD/1 is/VBZ/is the/DT/the cost/NN/cost of/IN/of creating/VBG/creating the/DT/the array/NN/array and/CC/and you/PRP/you do/VBP/do not/RB/not have/VB/have to/TO/to copy/VB/copy anything/NN/anything and/CC/and 1/CD/1 is/VBZ/is the/DT/the cost/NN/cost for/IN/for pushing/VBG/pushing them/NNP/them. here/RB/here we/PRP/we created/VBD/created an/DT/an array/NN/array of/IN/of cost/NN/cost 2/CD/2 /,/, we/PRP/we copied/VBD/copied 1/CD/1 element/NN/element and/CC/and 1/CD/1 was/VBD/was the/DT/the cost/NN/cost of/IN/of pushing/NNP/pushing. we/PRP/we created/VBD/created an/DT/an array/NN/array of/IN/of size/NN/size 4/CD/4 /,/, 2/CD/2 was/VBD/was the/DT/the cost/NN/cost of/IN/of copying/VBG/copying /,/, 1/CD/1 was/VBD/was the/DT/the cost/NN/cost of/IN/of pushing/VBG/pushing the/DT/the element/NN/element c/NN/c and/CC/and here/RB/here was/VBD/was the/DT/the regular/JJ/regular push/NN/push so/IN/so it/PRP/it was/VBD/was 1/CD/1 and/CC/and so/RB/so on/NNP/on. we/PRP/we define/VBP/define a/DT/a phase/NN/phase as/IN/as when/WRB/when the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array was/VBD/was 1/CD/1 /,/, we/PRP/we call/VBP/call it/PRP/it as/IN/as phase/NN/phase 0/CD/0. when/WRB/when it/PRP/it is/VBZ/is 2/CD/2 we/PRP/we call/VBP/call it/PRP/it as/IN/as phase/NN/phase 1/CD/1. when/WRB/when it/PRP/it was/VBD/was 4/CD/4 /,/, we/PRP/we call/VBP/call it/PRP/it phase/VB/phase 2/CD/2 and/CC/and when/WRB/when it/PRP/it was/VBD/was 8/CD/8 /,/, we/PRP/we call/VBP/call it/PRP/it as/IN/as phase/NN/phase 3/CD/3 and/CC/and so/RB/so on/NNP/on. in/IN/in phase/NN/phase i/PRP/i /,/, the/DT/the array/NN/array has/VBZ/has size/NN/size /./. phase/NN/phase 3/CD/3 it/PRP/it has/VBZ/has size/NN/size 8/CD/8 and/CC/and phase/NN/phase 4/CD/4 it/PRP/it has/VBZ/has size/NN/size 16/CD/16 and/CC/and so/RB/so on/NNP/on. in/IN/in the/DT/the phase/NN/phase i/PRP/i /,/, since/IN/since the/DT/the size/NN/size is/VBZ/is i/PRP/i spent/VBP/spent units/NNS/units of/IN/of time/NN/time in/IN/in creating/NN/creating the/DT/the array/NNP/array. then/RB/then i/PRP/i have/VBP/have to/TO/to copy/VB/copy elements/NNS/elements of/IN/of the/DT/the previous/JJ/previous array/NN/array that/WDT/that is/VBZ/is elements/NNP/elements. how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are left/VBN/left after/IN/after copying/NN/copying elements/NNS/elements ?/./? elements/NNS/elements are/VBP/are still/RB/still left/VBN/left and/CC/and they/PRP/they have/VBP/have to/TO/to be/VB/be pushed/VBN/pushed in/IN/in /,/, in/IN/in this/DT/this phase/NNP/phase. is/VBZ/is the/DT/the cost/NN/cost of/IN/of pushing/VBG/pushing in/IN/in those/DT/those elements/NNP/elements. the/DT/the total/JJ/total cost/NN/cost of/IN/of phase/NN/phase i/PRP/i is/VBZ/is +/:/+ +/:/+ which/WDT/which is/VBZ/is /./. if/IN/if we/PRP/we do/VBP/do n/RB/n push/VB/push /,/, we/PRP/we would/MD/would have/VB/have log/NN/log n/NN/n phases/NNS/phases /,/, because/IN/because the/DT/the way/NN/way the/DT/the array/NN/array is/VBZ/is growing/NNP/growing. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 00/CD/00 /:/: 55/CD/55 /CD/) the/DT/the total/JJ/total cost/NN/cost of/IN/of n/NN/n pushes/NNS/pushes is/VBZ/is going/VBG/going to/TO/to be/VB/be 2/CD/2 +/CD/+ 4/CD/4 +/CD/+ 8/CD/8 +/CD/+ ?/./? +/CD/+ /,/, which/WDT/which is/VBZ/is 4n/CD/4n. the/DT/the total/JJ/total cost/NN/cost of/IN/of n/NN/n pushes/NNS/pushes is/VBZ/is 4n/CD/4n growth/NN/growth strategy/NN/strategy and/CC/and in/IN/in the/DT/the tight/JJ/tight strategy/NN/strategy it/PRP/it is/VBZ/is /./. hence/NN/hence this/DT/this is/VBZ/is clearly/RB/clearly a/DT/a better/JJR/better strategy/NNP/strategy. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 3/CD/3 queues/NNS/queues and/CC/and linked/VBD/linked lists/NNS/lists in/IN/in the/DT/the last/JJ/last lecture/NN/lecture we/PRP/we looked/VBD/looked at/IN/at stacks/NNS/stacks as/IN/as a/DT/a data/NN/data type/NNP/type. we/PRP/we saw/VBD/saw how/WRB/how to/TO/to implement/VB/implement stacks/NNS/stacks using/VBG/using an/DT/an array/NNP/array. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at queues/NNS/queues and/CC/and linked/VBD/linked list/NN/list and/CC/and in/IN/in the/DT/the later/JJ/later part/NN/part of/IN/of the/DT/the class/NN/class /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do sequences/NNP/sequences. in/IN/in particular/JJ/particular the/DT/the first/JJ/first part/NN/part of/IN/of the/DT/the class/NN/class i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do queues/NNS/queues /,/, linked/VBD/linked list/NN/list and/CC/and double/JJ/double ended/VBD/ended queues/NNP/queues. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 22/CD/22 /CD/) what/WP/what is/VBZ/is the/DT/the queue/NN/queue and/CC/and how/WRB/how does/VBZ/does it/PRP/it differ/VBP/differ from/IN/from the/DT/the stack/NN/stack ?/./? the/DT/the stack/NN/stack followed/VBD/followed the/DT/the last-in/JJ/last-in first-out/NN/first-out principle/NN/principle /,/, the/DT/the element/NN/element that/IN/that was/VBD/was inserted/VBN/inserted last/JJ/last in/IN/in to/TO/to stack/VB/stack was/VBD/was the/DT/the one/CD/one that/WDT/that was/VBD/was removed/VBN/removed first/NNP/first. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 34/CD/34 /CD/) queue/NN/queue on/IN/on the/DT/the other/JJ/other hand/NN/hand follows/VBZ/follows the/DT/the first-in-first-out/NN/first-in-first-out principle/NNP/principle. whoever/NN/whoever joins/VBZ/joins the/DT/the queue/NN/queue earlier/JJR/earlier is/VBZ/is the/DT/the first/JJ/first to/TO/to be/VB/be removed/VBN/removed from/IN/from the/DT/the queues/NNS/queues that/WDT/that is/VBZ/is first/RB/first to/TO/to be/VB/be processed/NNP/processed. you/PRP/you are/VBP/are all/DT/all familiar/JJ/familiar with/IN/with the/DT/the queues/NNP/queues. in/IN/in a/DT/a queue/NN/queue for/IN/for instance/NN/instance there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of a/DT/a first/JJ/first element/NN/element and/CC/and the/DT/the notion/NN/notion of/IN/of the/DT/the rear/JJ/rear element/NNP/element. when/WRB/when an/DT/an element/NN/element is/VBZ/is inserted/VBN/inserted in/IN/in to/TO/to the/DT/the queue/NN/queue /,/, it/PRP/it comes/VBZ/comes at/IN/at the/DT/the rear/NNP/rear. if/IN/if i/PRP/i remove/VBP/remove an/DT/an element/NN/element from/IN/from queue/NN/queue it/PRP/it is/VBZ/is the/DT/the element/NN/element which/WDT/which is/VBZ/is sitting/VBG/sitting at/IN/at the/DT/the front/NN/front end/NN/end would/MD/would be/VB/be removed/NNP/removed. we/PRP/we always/RB/always insert/VBP/insert an/DT/an element/NN/element at/IN/at the/DT/the end/NN/end and/CC/and when/WRB/when we/PRP/we remove/VBP/remove an/DT/an element/NN/element it/PRP/it is/VBZ/is always/RB/always the/DT/the element/NN/element at/IN/at the/DT/the front/NN/front is/VBZ/is removed/NNP/removed. the/DT/the queue/NN/queue is/VBZ/is also/RB/also an/DT/an abstract/NN/abstract data/NNS/data type/NN/type and/CC/and we/PRP/we can/MD/can define/VB/define a/DT/a few/JJ/few methods/NNS/methods on/IN/on the/DT/the queue/NNP/queue. the/DT/the methods/NNS/methods given/VBN/given in/IN/in the/DT/the slide/NN/slide are/VBP/are the/DT/the standard/JJ/standard operations/NNP/operations. the/DT/the method/NN/method new/JJ/new would/MD/would create/VB/create a/DT/a queue/NN/queue and/CC/and enqueue/NN/enqueue is/VBZ/is the/DT/the method/NN/method to/TO/to add/VB/add an/DT/an element/NN/element to/TO/to the/DT/the queue/NN/queue and/CC/and dequeue/NN/dequeue is/VBZ/is to/TO/to remove/VB/remove an/DT/an element/NN/element from/IN/from the/DT/the queue/NNP/queue. when/WRB/when you/PRP/you dequeue/VBP/dequeue a/DT/a queue/NN/queue or/CC/or when/WRB/when you/PRP/you remove/VBP/remove an/DT/an element/NN/element from/IN/from the/DT/the queue/NN/queue /,/, you/PRP/you get/VBP/get another/DT/another queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 48/CD/48 /CD/) the/DT/the front/NN/front is/VBZ/is the/DT/the method/NN/method which/WDT/which gives/VBZ/gives the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the queue/NNP/queue. how/WRB/how it/PRP/it does/VBZ/does differ/VB/differ from/IN/from dequeue/JJ/dequeue ?/./? it/PRP/it does/VBZ/does not/RB/not remove/VB/remove the/DT/the front/NN/front element/NN/element /,/, it/PRP/it only/RB/only tell/VBP/tell us/PRP/us which/WDT/which is/VBZ/is the/DT/the front/NN/front element/NN/element of/IN/of the/DT/the queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 46/CD/46 /CD/) we/PRP/we also/RB/also have/VBP/have some/DT/some other/JJ/other support/NN/support methods/NNS/methods /,/, to/TO/to implement/VB/implement the/DT/the queue/NNP/queue. one/CD/one could/MD/could be/VB/be size/NN/size and/CC/and the/DT/the other/JJ/other is/VBZ/is isempty/NNP/isempty. size/NN/size would/MD/would tell/VB/tell us/PRP/us how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are there/RB/there in/IN/in the/DT/the queue/NN/queue and/CC/and isempty/NN/isempty would/MD/would tell/VB/tell us/PRP/us whether/IN/whether the/DT/the queue/NN/queue is/VBZ/is empty/JJ/empty or/CC/or not/NNP/not. it/PRP/it would/MD/would return/VB/return true/JJ/true if/IN/if the/DT/the queue/NN/queue is/VBZ/is empty/JJ/empty else/NN/else it/PRP/it would/MD/would return/VB/return false/NNP/false. just/RB/just as/IN/as we/PRP/we defined/VBD/defined axioms/NNS/axioms for/IN/for the/DT/the stacks/NNS/stacks /,/, you/PRP/you can/MD/can define/VB/define similar/JJ/similar axioms/NNS/axioms for/IN/for queues/NNP/queues. if/IN/if i/PRP/i create/VBP/create a/DT/a new/JJ/new queue/NN/queue and/CC/and i/PRP/i insert/VBP/insert an/DT/an element/NN/element or/CC/or enqueue/VB/enqueue an/DT/an element/NN/element v/NN/v and/CC/and then/RB/then when/WRB/when i/PRP/i say/VBP/say what/WP/what is/VBZ/is the/DT/the element/NN/element at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. it/PRP/it should/MD/should be/VB/be v/NN/v and/CC/and suppose/VB/suppose i/PRP/i create/VB/create a/DT/a new/JJ/new queue/NN/queue and/CC/and enqueue/NN/enqueue an/DT/an element/NN/element and/CC/and then/RB/then i/PRP/i dequeue/VBP/dequeue an/DT/an element/NN/element /,/, then/RB/then i/PRP/i should/MD/should get/VB/get the/DT/the empty/NN/empty queue/NN/queue which/WDT/which is/VBZ/is the/DT/the same/JJ/same as/IN/as whatever/NN/whatever obtained/VBD/obtained if/IN/if i/PRP/i just/RB/just called/VBN/called new/NNP/new. similarly/RB/similarly if/IN/if i/PRP/i had/VBD/had a/DT/a queue/NN/queue and/CC/and i/PRP/i enqueued/VBD/enqueued an/DT/an element/NN/element w/NN/w /,/, which/WDT/which means/VBZ/means i/PRP/i added/VBD/added an/DT/an element/NN/element to/TO/to the/DT/the queue/NNP/queue. then/RB/then i/PRP/i added/VBD/added another/DT/another element/NN/element v/NN/v to/TO/to the/DT/the queue/NN/queue /,/, thus/RB/thus w/VB/w is/VBZ/is ahead/RB/ahead of/IN/of v/NN/v in/IN/in the/DT/the queue/NNP/queue. if/IN/if i/PRP/i call/VBP/call front/JJ/front /,/, first/JJ/first i/PRP/i will/MD/will get/VB/get all/DT/all the/DT/the elements/NNS/elements of/IN/of the/DT/the queue/NN/queue /,/, followed/VBN/followed by/IN/by w/NN/w and/CC/and then/RB/then followed/VBD/followed by/IN/by v/NNP/v. the/DT/the element/NN/element in/IN/in the/DT/the front/NN/front of/IN/of /NNP/( q/NN/q /,/, w/NN/w /:/) is/VBZ/is the/DT/the element/NN/element at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. why/WRB/why i/PRP/i have/VBP/have written/VBN/written front/NN/front of/IN/of /NNP/( q/NN/q /,/, w/NN/w /:/) and/CC/and not/RB/not front/JJ/front of/IN/of queue/NN/queue ?/./? if/IN/if i/PRP/i have/VBP/have just/RB/just written/VBN/written front/NN/front of/IN/of queue/NN/queue /,/, then/RB/then it/PRP/it would/MD/would not/RB/not have/VB/have been/VBN/been defined/NNP/defined. if/IN/if a/DT/a queue/NN/queue is/VBZ/is empty/JJ/empty then/RB/then there/RB/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of front/NN/front of/IN/of the/DT/the queue/NN/queue that/IN/that is/VBZ/is why/WRB/why i/PRP/i have/VBP/have written/VBN/written front/NN/front /:/( enqueue/NN/enqueue /:/( q/NN/q /,/, w/NN/w /:/) /:/) /./. same/JJ/same thing/NN/thing as/IN/as before/IN/before in/IN/in which/WDT/which i/PRP/i had/VBD/had a/DT/a queue/NN/queue q/NN/q /,/, if/IN/if i/PRP/i insert/VBP/insert w/JJ/w in/IN/in to/TO/to the/DT/the queue/NN/queue then/RB/then i/PRP/i insert/VBP/insert a/DT/a v/NN/v and/CC/and then/RB/then i/PRP/i removed/VBD/removed an/DT/an element/NNP/element. the/DT/the element/NN/element which/WDT/which was/VBD/was at/IN/at the/DT/the front/NN/front of/IN/of queue/NN/queue would/MD/would be/VB/be removed/VBN/removed /,/, if/IN/if the/DT/the queue/NN/queue was/VBD/was empty/JJ/empty then/RB/then it/PRP/it would/MD/would have/VB/have been/VBN/been w/NNP/w. the/DT/the following/VBG/following operation/NN/operation is/VBZ/is the/DT/the same/JJ/same as/IN/as in/IN/in which/WDT/which i/PRP/i had/VBD/had a/DT/a q/NN/q /,/, i/PRP/i added/VBD/added w/NN/w to/TO/to the/DT/the queue/NN/queue then/RB/then i/PRP/i removed/VBD/removed an/DT/an element/NN/element from/IN/from the/DT/the queue/NN/queue /,/, then/RB/then i/PRP/i added/VBD/added v/NN/v again/NNP/again. the/DT/the queue/NN/queue that/IN/that i/PRP/i have/VBP/have obtained/VBN/obtained as/IN/as the/DT/the result/NN/result of/IN/of the/DT/the below/NN/below mentioned/VBD/mentioned 2/CD/2 procedures/NNS/procedures should/MD/should be/VB/be the/DT/the same/NNP/same. dequeue/NN/dequeue /:/( enqueue/NN/enqueue /:/( enqueue/NN/enqueue /:/( q,w/JJ/q,w /NN/) ,v/NN/,v /:/) /:/) =/:/= enqueue/NN/enqueue /:/( dequeue/NN/dequeue /:/( enqueue/NN/enqueue /:/( q,w/JJ/q,w /NN/) /:/) ,v/NN/,v /:/) let/NN/let us/PRP/us check/VBP/check out/RP/out whether/IN/whether the/DT/the result/NN/result is/VBZ/is true/NNP/true. let/NN/let us/PRP/us assume/VBP/assume that/IN/that the/DT/the queue/NN/queue was/VBD/was initially/RB/initially empty/NNP/empty. what/WP/what does/VBZ/does this/DT/this statement/NN/statement dequeue/NN/dequeue /:/( enqueue/NN/enqueue /:/( enqueue/NN/enqueue /:/( q/NN/q /,/, w/NN/w /:/) /,/, v/NN/v /:/) /:/) gives/NNS/gives ?/./? first/JJ/first i/PRP/i added/VBD/added w/NN/w then/RB/then added/VBD/added v/NN/v and/CC/and then/RB/then i/PRP/i removed/VBD/removed an/DT/an element/NNP/element. if/IN/if i/PRP/i removed/VBD/removed an/DT/an element/NN/element from/IN/from the/DT/the queue/NN/queue i/PRP/i would/MD/would get/VB/get w/VB/w /,/, that/IN/that is/VBZ/is w/NN/w is/VBZ/is removed/NNP/removed. then/RB/then i/PRP/i get/VBP/get v/RB/v as/IN/as the/DT/the remaining/VBG/remaining queue/NNP/queue. let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this enqueue/NN/enqueue /:/( dequeue/NN/dequeue /:/( enqueue/NN/enqueue /:/( q/NN/q /,/, w/NN/w /:/) /:/) /,/, v/NN/v /:/) /./. queue/NN/queue is/VBZ/is empty/JJ/empty /,/, i/PRP/i added/VBD/added w/NN/w to/TO/to the/DT/the queue/NN/queue then/RB/then i/PRP/i removed/VBD/removed an/DT/an element/NN/element and/CC/and once/RB/once again/RB/again i/PRP/i have/VBP/have left/VBN/left with/IN/with an/DT/an empty/JJ/empty queue/NNP/queue. then/RB/then i/PRP/i enqueue/VBP/enqueue v/NN/v /,/, thus/RB/thus the/DT/the queue/NN/queue has/VBZ/has v/NN/v in/IN/in it/NNP/it. if/IN/if queue/NN/queue is/VBZ/is empty/JJ/empty then/RB/then in/IN/in both/DT/both the/DT/the cases/NNS/cases the/DT/the queue/NN/queue will/MD/will have/VB/have only/RB/only v/VB/v in/IN/in it/PRP/it at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the procedure/NNP/procedure. if/IN/if queue/NN/queue is/VBZ/is not/RB/not empty/JJ/empty then/RB/then i/PRP/i enqueued/VBD/enqueued w/NN/w /,/, then/RB/then i/PRP/i enqueued/VBD/enqueued v/NN/v again/NNP/again. hence/NN/hence i/PRP/i have/VBP/have a/DT/a queue/NN/queue in/IN/in which/WDT/which first/JJ/first i/PRP/i have/VBP/have all/PDT/all the/DT/the elements/NNS/elements of/IN/of q/NN/q /,/, followed/VBN/followed by/IN/by w/NN/w /,/, followed/VBN/followed by/IN/by v/NNP/v. when/WRB/when i/PRP/i dequeued/VBD/dequeued /,/, i/PRP/i will/MD/will be/VB/be left/VBN/left with/IN/with the/DT/the original/JJ/original q/NN/q without/IN/without the/DT/the front/NN/front element/NN/element /,/, followed/VBN/followed by/IN/by w/NN/w and/CC/and then/RB/then followed/VBD/followed by/IN/by v/NNP/v. let/NN/let us/PRP/us see/VBP/see if/IN/if we/PRP/we get/VBP/get the/DT/the same/JJ/same thing/NN/thing in/IN/in enqueue/NN/enqueue /:/( dequeue/NN/dequeue /:/( enqueue/NN/enqueue /:/( q/NN/q /,/, w/NN/w /:/) /:/) /,/, v/NN/v /:/) /./. i/PRP/i started/VBD/started with/IN/with q/NN/q and/CC/and i/PRP/i added/VBD/added w/NN/w to/TO/to it/NNP/it. now/RB/now i/PRP/i have/VBP/have queue/JJ/queue which/WDT/which has/VBZ/has q/RB/q and/CC/and w/NNP/w. then/RB/then i/PRP/i dequeued/VBD/dequeued which/WDT/which means/NNS/means i/PRP/i removed/VBD/removed the/DT/the front/NN/front element/NN/element of/IN/of queue/NNP/queue. the/DT/the queue/NN/queue contains/VBZ/contains all/DT/all the/DT/the elements/NNS/elements except/IN/except the/DT/the front/NN/front element/NN/element /,/, then/RB/then i/PRP/i have/VBP/have w/JJ/w in/IN/in that/DT/that queue/NN/queue and/CC/and i/PRP/i added/VBD/added v/NN/v at/IN/at the/DT/the end/NNP/end. thus/RB/thus i/PRP/i get/VBP/get the/DT/the same/JJ/same result/NNP/result. how/WRB/how do/VBP/do we/PRP/we implement/VB/implement a/DT/a queue/NN/queue ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use an/DT/an array/NN/array in/IN/in a/DT/a circular/JJ/circular fashion/NN/fashion to/TO/to implement/VB/implement the/DT/the queue/NNP/queue. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? suppose/NN/suppose someone/NN/someone tells/NNS/tells that/WDT/that the/DT/the queue/NN/queue is/VBZ/is never/RB/never going/VBG/going to/TO/to be/VB/be larger/JJR/larger than/IN/than n/NN/n elements/NNP/elements. i/PRP/i am/VBP/am going/VBG/going to/TO/to allocate/VB/allocate an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have 2/CD/2 variables/NNS/variables f/NN/f and/CC/and r/NN/r /,/, f/NN/f for/IN/for front/NN/front and/CC/and r/NN/r for/IN/for rear/NNP/rear. f/NN/f is/VBZ/is the/DT/the index/NN/index of/IN/of the/DT/the front/NN/front element/NN/element that/WDT/that is/VBZ/is f/NN/f will/MD/will be/VB/be referring/VBG/referring to/TO/to the/DT/the front/NN/front element/NN/element of/IN/of the/DT/the queue/NNP/queue. r/NN/r is/VBZ/is an/DT/an index/NN/index which/WDT/which is/VBZ/is the/DT/the element/NN/element following/VBG/following the/DT/the rear/NN/rear element/NNP/element. the/DT/the blue/JJ/blue part/NN/part is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is occupied/VBN/occupied by/IN/by the/DT/the queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 11/CD/11 /CD/) how/WRB/how did/VBD/did the/DT/the queue/NN/queue reach/NN/reach the/DT/the blue/JJ/blue colored/VBN/colored part/NN/part ?/./? i/PRP/i would/MD/would have/VB/have started/VBN/started with/IN/with the/DT/the front/NN/front that/IN/that is/VBZ/is the/DT/the first/JJ/first element/NN/element i/PRP/i inserted/VBD/inserted must/MD/must have/VB/have come/VBN/come to/TO/to the/DT/the 0th/JJ/0th location/NNP/location. then/RB/then the/DT/the next/JJ/next element/NN/element i/PRP/i inserted/VBD/inserted must/MD/must have/VB/have come/VBN/come to/TO/to the/DT/the 1st/CD/1st location/NN/location and/CC/and the/DT/the 3rd/JJ/3rd element/NN/element must/MD/must have/VB/have come/VBN/come to/TO/to the/DT/the 2nd/CD/2nd location/NN/location and/CC/and so/RB/so on/NNP/on. then/RB/then i/PRP/i also/RB/also delete/JJ/delete the/DT/the elements/NNP/elements. when/WRB/when i/PRP/i delete/VBP/delete /,/, an/DT/an element/NN/element goes/VBZ/goes away/NNP/away. in/IN/in effect/NN/effect the/DT/the elements/NNS/elements in/IN/in the/DT/the queue/NN/queue drift/NN/drift right/RB/right and/CC/and hence/NN/hence the/DT/the front/NN/front and/CC/and the/DT/the rear/NN/rear element/NN/element has/VBZ/has moved/VBN/moved to/TO/to right/NNP/right. this/DT/this implies/VBZ/implies that/IN/that we/PRP/we have/VBP/have deleted/VBN/deleted f-1/-NONE-/f-1 elements/NNP/elements. it/PRP/it is/VBZ/is not/RB/not completely/RB/completely accurate/NNP/accurate. i/PRP/i had/VBD/had said/VBN/said something/NN/something like/IN/like in/IN/in a/DT/a circular/JJ/circular fashion/NNP/fashion. what/WP/what does/VBZ/does the/DT/the circular/JJ/circular fashion/NN/fashion mean/NN/mean and/CC/and why/WRB/why am/NN/am i/PRP/i saying/VBG/saying such/JJ/such a/DT/a thing/NN/thing ?/./? let/NN/let us/PRP/us say/VBP/say that/IN/that we/PRP/we kept/VBD/kept inserting/VBG/inserting the/DT/the elements/NNS/elements in/IN/in queue/NNP/queue. i/PRP/i insert/VBP/insert another/DT/another element/NN/element then/RB/then i/PRP/i insert/VBP/insert another/DT/another element/NN/element and/CC/and at/IN/at one/CD/one stage/NN/stage i/PRP/i can/MD/can not/RB/not insert/VB/insert anymore/RB/anymore elements/NNS/elements because/IN/because i/PRP/i have/VBP/have already/RB/already reached/VBN/reached the/DT/the end/NN/end of/IN/of this/DT/this array/NNP/array. but/CC/but i/PRP/i have/VBP/have a/DT/a space/NN/space available/JJ/available in/IN/in the/DT/the front/NN/front then/RB/then i/PRP/i will/MD/will wrap/VB/wrap around/IN/around and/CC/and start/NN/start inserting/VBG/inserting the/DT/the elements/NNP/elements. your/PRP$/your queue/NN/queue in/IN/in some/DT/some point/NN/point will/MD/will look/VB/look like/IN/like the/DT/the one/CD/one which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide below/NNP/below. the/DT/the front/NN/front was/VBD/was at/IN/at the/DT/the left/NN/left of/IN/of the/DT/the rear/JJ/rear but/CC/but now/RB/now front/VBP/front is/VBZ/is at/IN/at the/DT/the right/NN/right of/IN/of the/DT/the rear/JJ/rear because/IN/because we/PRP/we have/VBP/have queue/JJ/queue which/WDT/which is/VBZ/is now/RB/now starting/VBG/starting from/IN/from the/DT/the right/NN/right side/NN/side and/CC/and going/VBG/going to/TO/to the/DT/the left/NN/left side/NNP/side. when/WRB/when i/PRP/i insert/VBP/insert an/DT/an element/NN/element it/PRP/it will/MD/will still/RB/still come/VB/come to/TO/to the/DT/the location/NN/location and/CC/and then/RB/then to/TO/to the/DT/the next/JJ/next location/NN/location and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 15/CD/15 /CD/) when/WRB/when we/PRP/we started/VBD/started the/DT/the front/NN/front was/VBD/was referring/VBG/referring to/TO/to 0th/CD/0th location/NN/location that/WDT/that is/VBZ/is f/NN/f should/MD/should have/VB/have been/VBN/been at/IN/at minus/NN/minus one/CD/one /,/, because/IN/because the/DT/the front/NN/front refers/NNS/refers to/TO/to the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the queue/NNP/queue. if/IN/if there/EX/there is/VBZ/is nothing/NN/nothing in/IN/in the/DT/the queue/NN/queue then/RB/then f/NN/f should/MD/should be/VB/be minus/RB/minus one/CD/one and/CC/and rear/JJ/rear refers/NNS/refers to/TO/to 0/-NONE-/0 /,/, because/IN/because rear/JJ/rear refers/NNS/refers to/TO/to an/DT/an empty/NN/empty location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 59/CD/59 /CD/) what/WP/what does/VBZ/does if/IN/if at/IN/at some/DT/some point/NN/point i/PRP/i reach/VBP/reach a/DT/a situation/NN/situation when/WRB/when f/NN/f =/:/= r/NN/r ?/./? is/VBZ/is that/IN/that empty/JJ/empty or/CC/or full/JJ/full ?/./? /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 41/CD/41 /CD/) what/WP/what will/MD/will happen/VB/happen when/WRB/when it/PRP/it becomes/VBZ/becomes empty/JJ/empty ?/./? suppose/NN/suppose if/IN/if i/PRP/i kept/VBD/kept removing/VBG/removing the/DT/the elements/NNS/elements starting/VBG/starting from/IN/from the/DT/the location/NN/location /,/, i/PRP/i did/VBD/did not/RB/not add/VB/add any/DT/any other/JJ/other element/NN/element and/CC/and then/RB/then i/PRP/i removed/VBD/removed all/DT/all the/DT/the elements/NNS/elements before/IN/before location/NNP/location. where/WRB/where f/NN/f would/MD/would be/VB/be located/VBN/located ?/./? f/NN/f would/MD/would be/VB/be increment/JJ/increment to/TO/to r/VB/r /,/, so/RB/so f/NN/f becomes/VBZ/becomes r/NNP/r. when/WRB/when f/NN/f is/VBZ/is r/NN/r /,/, queue/NN/queue is/VBZ/is empty/NNP/empty. suppose/NN/suppose i/PRP/i kept/VBD/kept adding/VBG/adding the/DT/the elements/NNS/elements to/TO/to the/DT/the queue/NNP/queue. when/WRB/when i/PRP/i add/VBP/add /,/, r/NN/r will/MD/will move/VB/move one/CD/one step/NN/step /,/, another/DT/another step/NN/step and/CC/and so/RB/so on/NNP/on. when/WRB/when i/PRP/i add/VBP/add an/DT/an element/NN/element close/NN/close to/TO/to location/NN/location /,/, then/RB/then r/VB/r would/MD/would be/VB/be referring/VBG/referring to/TO/to f/NNP/f. again/RB/again f/NN/f equals/NNS/equals r/NNP/r. we/PRP/we will/MD/will add/VB/add the/DT/the element/NNP/element. there/RB/there is/VBZ/is an/DT/an ambiguity/NN/ambiguity and/CC/and we/PRP/we have/VBP/have to/TO/to resolve/VB/resolve it/PRP/it in/IN/in some/DT/some manner/NNP/manner. f/NN/f =/:/= r/NN/r means/VBZ/means /,/, both/DT/both empty/NN/empty and/CC/and full/NNP/full. since/IN/since we/PRP/we will/MD/will have/VB/have a/DT/a problem/NN/problem /,/, if/IN/if you/PRP/you do/VBP/do not/RB/not know/VB/know whether/IN/whether the/DT/the queue/NN/queue is/VBZ/is empty/JJ/empty or/CC/or full/NNP/full. we/PRP/we will/MD/will try/VB/try and/CC/and ensure/NN/ensure that/IN/that we/PRP/we never/RB/never had/VBD/had n/VBN/n elements/NNS/elements to/TO/to the/DT/the queue/NNP/queue. when/WRB/when the/DT/the queue/NN/queue has/VBZ/has only/RB/only n-1/-NONE-/n-1 one/CD/one elements/NNS/elements /,/, we/PRP/we will/MD/will declare/VB/declare it/PRP/it before/NNP/before. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the code/NN/code for/IN/for enqueue/NNP/enqueue. this/DT/this is/VBZ/is just/RB/just pseudo/RB/pseudo code/NNP/code. if/IN/if the/DT/the size/NN/size of/IN/of the/DT/the queue/NN/queue or/CC/or the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the queue/NN/queue is/VBZ/is n-1/-NONE-/n-1 /,/, then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to stop/VB/stop and/CC/and say/VB/say that/IN/that the/DT/the queue/NN/queue is/VBZ/is full/JJ/full and/CC/and we/PRP/we will/MD/will return/VB/return the/DT/the queue/NN/queue full/JJ/full exception/NNP/exception. otherwise/NN/otherwise if/IN/if it/PRP/it is/VBZ/is not/RB/not the/DT/the case/NN/case then/RB/then add/VBD/add the/DT/the rear/JJ/rear location/NN/location /,/, put/VBD/put the/DT/the element/NN/element that/IN/that you/PRP/you are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert and/CC/and increment/NN/increment r/NNP/r. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 30/CD/30 /CD/) the/DT/the modn/NN/modn is/VBZ/is required/VBN/required /,/, because/IN/because we/PRP/we need/VBP/need to/TO/to do/VB/do the/DT/the wrap/NN/wrap around/IN/around since/IN/since it/PRP/it is/VBZ/is circular/NNP/circular. indices/NNS/indices goes/VBZ/goes from/IN/from 0/-NONE-/0 through/IN/through n-1/-NONE-/n-1 only/RB/only /,/, r/NN/r is/VBZ/is already/RB/already n-1/-NONE-/n-1 and/CC/and i/PRP/i increment/VBP/increment r/JJ/r at/IN/at this/DT/this r/NN/r ?/./? /:/( r/NN/r +/:/+ 1/CD/1 /CD/) modn/NN/modn point/NNP/point. then/RB/then i/PRP/i do/VBP/do not/RB/not want/VB/want it/PRP/it to/TO/to become/VB/become n/JJ/n /,/, but/CC/but i/PRP/i want/VBP/want it/PRP/it to/TO/to become/VB/become 0/-NONE-/0 and/CC/and hence/NN/hence modn/NN/modn is/VBZ/is 0/-NONE-/0 and/CC/and i/PRP/i will/MD/will have/VB/have it/PRP/it in/IN/in r/NNP/r. in/IN/in the/DT/the pseudo-code/JJ/pseudo-code /,/, size/NN/size is/VBZ/is the/DT/the method/NN/method and/CC/and it/PRP/it should/MD/should have/VB/have been/VBN/been enclosed/VBN/enclosed in/IN/in brackets/NNP/brackets. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 13/CD/13 /CD/) what/WP/what does/VBZ/does the/DT/the method/NN/method size/NN/size do/VBP/do ?/./? it/PRP/it returns/VBZ/returns /:/( n-f/JJ/n-f +/NN/+ r/NN/r /:/) value/NNP/value. why/WRB/why it/PRP/it should/MD/should not/RB/not return/VB/return r-f/NNP/r-f. ?/./? r-f/JJ/r-f is/VBZ/is negative/JJ/negative in/IN/in the/DT/the setting/NN/setting which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 04/CD/04 /CD/) /,/, but/CC/but in/IN/in the/DT/the setting/NN/setting which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: /:/: 10/CD/10 /:/: 59/CD/59 /CD/) /,/, r-f/JJ/r-f tells/NNS/tells me/PRP/me exactly/RB/exactly the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the queue/NNP/queue. r-f/NNP/r-f is/VBZ/is the/DT/the correct/NN/correct thing/NN/thing except/IN/except it/PRP/it might/MD/might be/VB/be negative/NNP/negative. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 04/CD/04 /CD/) how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are there/RB/there in/IN/in the/DT/the queue/NN/queue which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the above/NN/above slide/NN/slide ?/./? it/PRP/it should/MD/should be/VB/be n/-NONE-/n- r/NN/r +/:/+ f/NN/f or/CC/or n-f/JJ/n-f +/NN/+ r/NN/r /,/, which/WDT/which is/VBZ/is anyone/NN/anyone of/IN/of these/NNP/these. the/DT/the quantity/NN/quantity /:/( n-f/JJ/n-f +/NN/+ r/NN/r /:/) would/MD/would be/VB/be the/DT/the number/NN/number of/IN/of elements/NNS/elements that/WDT/that you/PRP/you would/MD/would get/VB/get and/CC/and this/DT/this quantity/NN/quantity is/VBZ/is always/RB/always positive/JJ/positive /,/, because/IN/because r-f/JJ/r-f can/MD/can at/IN/at worst/JJS/worst be/VB/be minus/RB/minus n/NNP/n. thus/RB/thus n/VB/n +/:/+ r-f/JJ/r-f would/MD/would always/RB/always be/VB/be a/DT/a positive/JJ/positive quantity/NNP/quantity. you/PRP/you can/MD/can return/VB/return this/DT/this /NN/( n-f/NN/n-f +/:/+ r/NN/r /:/) as/IN/as the/DT/the size/NN/size /,/, as/IN/as this/DT/this will/MD/will tell/VB/tell you/PRP/you the/DT/the right/NN/right number/NN/number of/IN/of elements/NNP/elements. check/NN/check this/DT/this out/NN/out if/IN/if you/PRP/you are/VBP/are confused/NNP/confused. isempty/NN/isempty /:/( /:/) is/VBZ/is a/DT/a method/NN/method and/CC/and we/PRP/we said/VBD/said queue/NN/queue is/VBZ/is empty/JJ/empty if/IN/if f/NN/f =/:/= r/NNP/r. there/RB/there was/VBD/was an/DT/an ambiguity/NN/ambiguity and/CC/and we/PRP/we never/RB/never had/VBD/had more/JJR/more than/IN/than n-1/-NONE-/n-1 elements/NNS/elements into/IN/into the/DT/the queue/NNP/queue. if/IN/if f/NN/f =/:/= r/NN/r /,/, that/IN/that means/NNS/means the/DT/the queue/NN/queue is/VBZ/is empty/JJ/empty and/CC/and it/PRP/it is/VBZ/is not/RB/not full/NNP/full. thus/RB/thus f/NN/f =/:/= r/NN/r returns/NNS/returns empty/JJ/empty also/RB/also it/PRP/it returns/VBZ/returns true/JJ/true for/IN/for this/DT/this /NN/( algorithm/NN/algorithm isempty/NN/isempty /:/( /:/) /:/) method/NNP/method. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 35/CD/35 /CD/) for/IN/for front/NN/front if/IN/if the/DT/the queue/NN/queue is/VBZ/is empty/JJ/empty then/RB/then it/PRP/it raises/VBZ/raises an/DT/an exception/NN/exception /,/, otherwise/RB/otherwise just/RB/just return/VBP/return a/DT/a front/NN/front element/NNP/element. we/PRP/we are/VBP/are not/RB/not removing/VBG/removing the/DT/the front/NN/front element/NN/element as/IN/as we/PRP/we are/VBP/are doing/VBG/doing it/PRP/it in/IN/in the/DT/the dequeue/NN/dequeue method/NNP/method. in/IN/in the/DT/the case/NN/case of/IN/of dequeue/NN/dequeue method/NN/method /,/, we/PRP/we will/MD/will increment/VB/increment the/DT/the front/NN/front index/NN/index and/CC/and remove/VB/remove the/DT/the front/NN/front element/NN/element by/IN/by setting/NN/setting q/NN/q /:/( f/NN/f /:/) ?/./? null/NNP/null. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 39/CD/39 /CD/) you/PRP/you can/MD/can also/RB/also implement/VB/implement the/DT/the queue/NN/queue using/VBG/using a/DT/a linked/JJ/linked list/NNP/list. we/PRP/we saw/VBD/saw an/DT/an array/NN/array to/TO/to implement/VB/implement our/PRP$/our queue/NNP/queue. the/DT/the disadvantage/NN/disadvantage of/IN/of using/VBG/using an/DT/an array/NN/array is/VBZ/is fixed/VBN/fixed size/-NONE-/size. if/IN/if you/PRP/you know/VBP/know the/DT/the maximum/NN/maximum size/NN/size that/WDT/that the/DT/the queue/NN/queue can/MD/can take/VB/take then/RB/then it/PRP/it is/VBZ/is ok/NN/ok /,/, but/CC/but if/IN/if you/PRP/you have/VBP/have no/DT/no idea/NN/idea about/IN/about the/DT/the maximum/NN/maximum size/NN/size /,/, then/RB/then you/PRP/you could/MD/could either/VB/either use/NN/use the/DT/the method/NN/method which/WDT/which we/PRP/we did/VBD/did in/IN/in the/DT/the last/JJ/last class/NN/class were/VBD/were in/IN/in when/WRB/when the/DT/the size/NN/size increases/NNS/increases beyond/IN/beyond what/WP/what we/PRP/we have/VBP/have allotted/VBN/allotted /,/, then/RB/then we/PRP/we double/JJ/double the/DT/the size/NN/size of/IN/of the/DT/the queue/NNP/queue. you/PRP/you could/MD/could either/VB/either do/VB/do that/DT/that or/CC/or you/PRP/you could/MD/could use/VB/use an/DT/an implementation/NN/implementation which/WDT/which uses/NNS/uses a/DT/a linked/VBN/linked list/NNP/list. what/WP/what is/VBZ/is essentially/RB/essentially a/DT/a linked/VBN/linked list/NN/list ?/./? it/PRP/it has/VBZ/has nodes/VBZ/nodes and/CC/and it/PRP/it has/VBZ/has pointers/NNS/pointers which/WDT/which are/VBP/are basically/RB/basically referring/VBG/referring to/TO/to the/DT/the next/JJ/next nodes/NNS/nodes in/IN/in the/DT/the list/NNP/list. the/DT/the first/JJ/first node/NN/node is/VBZ/is referred/VBN/referred to/TO/to as/RB/as head/VB/head of/IN/of the/DT/the list/NN/list and/CC/and the/DT/the last/JJ/last node/NN/node is/VBZ/is referred/VBN/referred to/TO/to as/RB/as the/DT/the tail/NN/tail of/IN/of list/NNP/list. each/DT/each of/IN/of the/DT/the nodes/NNS/nodes has/VBZ/has some/DT/some element/NN/element or/CC/or some/DT/some data/NNS/data in/IN/in it/NNP/it. if/IN/if i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use a/DT/a linked/VBN/linked list/NN/list to/TO/to implement/VB/implement the/DT/the queue/NN/queue /,/, then/RB/then the/DT/the question/NN/question is/VBZ/is which/WDT/which should/MD/should be/VB/be the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue /,/, whether/IN/whether the/DT/the head/NN/head node/NN/node should/MD/should be/VB/be the/DT/the front/NN/front of/IN/of queue/NN/queue or/CC/or the/DT/the tail/NN/tail node/NN/node should/MD/should be/VB/be the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. the/DT/the head/NN/head of/IN/of the/DT/the list/NN/list should/MD/should be/VB/be the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue /,/, the/DT/the tail/NN/tail of/IN/of the/DT/the list/NN/list can/MD/can not/RB/not be/VB/be the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 09/CD/09 /CD/) why/WRB/why the/DT/the tail/NN/tail of/IN/of the/DT/the list/NN/list can/MD/can not/RB/not be/VB/be the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue ?/./? why/WRB/why can/MD/can not/RB/not i/VB/i have/VBP/have my/PRP$/my queue/NN/queue in/IN/in which/WDT/which the/DT/the 1st/CD/1st element/NN/element is/VBZ/is this/DT/this /,/, the/DT/the 2nd/JJ/2nd second/JJ/second element/NN/element is/VBZ/is this/DT/this and/CC/and the/DT/the third/JJ/third element/NN/element is/VBZ/is this/DT/this ?/./? the/DT/the problem/NN/problem is/VBZ/is with/IN/with removing/VBG/removing /,/, note/NN/note that/IN/that i/PRP/i can/MD/can not/RB/not remove/VB/remove the/DT/the torcezo/NN/torcezo element/NNP/element. the/DT/the linked/VBN/linked list/NN/list does/VBZ/does not/RB/not permit/VB/permit me/PRP/me to/TO/to do/VB/do this/NNP/this. can/MD/can i/VB/i remove/VB/remove the/DT/the torcezo/NN/torcezo element/NN/element from/IN/from linked/VBN/linked list/NN/list ?/./? not/RB/not directly/RB/directly /,/, because/IN/because to/TO/to remove/VB/remove that/IN/that element/NN/element i/PRP/i have/VBP/have to/TO/to change/VB/change the/DT/the 2nd/CD/2nd pointer/NNP/pointer. but/CC/but there/EX/there is/VBZ/is no/DT/no way/NN/way of/IN/of accessing/VBG/accessing that/IN/that pointer/JJR/pointer and/CC/and hence/NN/hence i/PRP/i can/MD/can not/RB/not remove/VB/remove that/IN/that element/NNP/element. i/PRP/i can/MD/can remove/VB/remove the/DT/the rome/NN/rome element/NN/element /,/, there/EX/there is/VBZ/is no/DT/no problem/NN/problem in/IN/in it/PRP/it /,/, but/CC/but i/PRP/i can/MD/can not/RB/not remove/VB/remove the/DT/the torcezo/NN/torcezo element/NNP/element. in/IN/in a/DT/a queue/NN/queue the/DT/the removal/NN/removal is/VBZ/is being/VBG/being done/NN/done at/IN/at the/DT/the front/NN/front that/IN/that is/VBZ/is we/PRP/we remove/VBP/remove the/DT/the element/NN/element at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. since/IN/since i/PRP/i can/MD/can not/RB/not remove/VB/remove the/DT/the element/NN/element which/WDT/which is/VBZ/is sitting/VBG/sitting at/IN/at the/DT/the last/JJ/last place/NN/place and/CC/and i/PRP/i can/MD/can not/RB/not call/VB/call this/DT/this as/IN/as the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. i/PRP/i would/MD/would like/VB/like to/TO/to have/VB/have rome/VBN/rome as/IN/as the/DT/the front/NN/front of/IN/of my/PRP$/my queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 38/CD/38 /CD/) let/NN/let us/PRP/us see/VBP/see how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to implement/VB/implement our/PRP$/our methods/NNP/methods. suppose/NN/suppose i/PRP/i have/VBP/have to/TO/to dequeue/VB/dequeue which/WDT/which means/NNS/means that/WDT/that the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is at/IN/at your/PRP$/your left/NNP/left. head/NN/head part/NN/part is/VBZ/is the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue and/CC/and the/DT/the tail/NN/tail part/NN/part is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the rear/JJ/rear of/IN/of the/DT/the queue/NNP/queue. if/IN/if i/PRP/i have/VBP/have to/TO/to remove/VB/remove the/DT/the element/NN/element at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue that/IN/that is/VBZ/is to/TO/to dequeue/VB/dequeue /,/, i/PRP/i should/MD/should point/VB/point the/DT/the head/NN/head to/TO/to the/DT/the 2nd/CD/2nd node/NNP/node. thus/RB/thus the/DT/the front/NN/front element/NN/element will/MD/will get/VB/get removed/VBN/removed and/CC/and i/PRP/i just/RB/just increment/JJ/increment or/CC/or just/RB/just making/VBG/making the/DT/the head/NN/head point/NN/point to/TO/to 2nd/CD/2nd node/NNP/node. in/IN/in this/DT/this manner/NN/manner i/PRP/i can/MD/can delete/VB/delete the/DT/the head/NN/head element/NN/element very/RB/very easily/RB/easily and/CC/and also/RB/also i/PRP/i can/MD/can insert/VB/insert a/DT/a new/JJ/new element/NN/element to/TO/to the/DT/the head/NN/head easily/NNP/easily. i/PRP/i just/RB/just create/VB/create a/DT/a new/JJ/new node/NN/node /,/, connect/NN/connect the/DT/the new/JJ/new node/NN/node and/CC/and make/VB/make the/DT/the head/NN/head point/NN/point to/TO/to the/DT/the new/JJ/new node/NNP/node. thus/RB/thus inserting/VBG/inserting at/IN/at the/DT/the head/NN/head is/VBZ/is very/RB/very easy/NNP/easy. the/DT/the head/NN/head is/VBZ/is the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue /,/, i/PRP/i can/MD/can just/RB/just move/VB/move the/DT/the head/NN/head to/TO/to one/CD/one step/VB/step right/RB/right and/CC/and in/IN/in that/DT/that manner/NN/manner /,/, remove/VBP/remove the/DT/the front/NN/front element/NN/element of/IN/of the/DT/the queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 44/CD/44 /CD/) if/IN/if i/PRP/i have/VBP/have to/TO/to add/VB/add an/DT/an element/NN/element /,/, enqueue/NN/enqueue has/VBZ/has to/TO/to be/VB/be done/VBN/done at/IN/at the/DT/the rear/JJ/rear of/IN/of the/DT/the queue/NNP/queue. in/IN/in the/DT/the above/NN/above slide/NN/slide /,/, first/JJ/first diagram/NN/diagram is/VBZ/is my/PRP$/my queue/NN/queue and/CC/and the/DT/the last/JJ/last element/NN/element is/VBZ/is the/DT/the rear/JJ/rear of/IN/of the/DT/the queue/NNP/queue. i/PRP/i need/VBP/need to/TO/to add/VB/add a/DT/a new/JJ/new element/NN/element at/IN/at the/DT/the rear/JJ/rear end/NN/end of/IN/of the/DT/the queue/NNP/queue. the/DT/the pointer/NN/pointer should/MD/should now/RB/now get/VB/get modified/VBN/modified to/TO/to point/NN/point to/TO/to the/DT/the newly/RB/newly added/VBD/added element/NN/element and/CC/and the/DT/the tail/NN/tail should/MD/should be/VB/be update/JJ/update to/TO/to the/DT/the next/JJ/next node/NN/node because/IN/because that/DT/that will/MD/will become/VB/become tail/NN/tail and/CC/and the/DT/the pointer/NN/pointer after/IN/after the/DT/the rear/JJ/rear element/NN/element should/MD/should be/VB/be null/NNP/null. i/PRP/i can/MD/can always/RB/always add/VB/add an/DT/an element/NN/element at/IN/at the/DT/the tail/NN/tail but/CC/but it/PRP/it is/VBZ/is difficult/JJ/difficult to/TO/to remove/VB/remove an/DT/an element/NN/element in/IN/in constant/NN/constant time/NN/time /,/, because/IN/because to/TO/to remove/VB/remove the/DT/the tail/NN/tail node/NN/node /,/, i/PRP/i need/VBP/need to/TO/to access/NN/access the/DT/the previous/JJ/previous node/NNP/node. the/DT/the only/JJ/only way/NN/way you/PRP/you can/MD/can to/TO/to do/VB/do in/IN/in this/DT/this kind/NN/kind of/IN/of list/NN/list is/VBZ/is to/TO/to start/VB/start from/IN/from the/DT/the beginning/NN/beginning and/CC/and move/VB/move all/DT/all the/DT/the way/NN/way to/TO/to the/DT/the right/NN/right till/IN/till you/PRP/you get/VBP/get to/TO/to the/DT/the tail/NN/tail node/NNP/node. then/RB/then you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to access/NN/access the/DT/the previous/JJ/previous node/NNP/node. what/WP/what is/VBZ/is problem/NN/problem in/IN/in removing/NN/removing in/IN/in the/DT/the tail/NN/tail node/NN/node ?/./? the/DT/the problem/NN/problem is/VBZ/is that/IN/that after/IN/after i/PRP/i remove/VBP/remove the/DT/the tail/NN/tail node/NN/node /,/, what/WP/what is/VBZ/is the/DT/the new/JJ/new tail/NN/tail of/IN/of the/DT/the list/NNP/list. it/PRP/it is/VBZ/is the/DT/the last/JJ/last before/IN/before node/NN/node /,/, i/PRP/i have/VBP/have to/TO/to make/VB/make the/DT/the tail/NN/tail point/NN/point to/TO/to that/DT/that last/JJ/last before/IN/before node/NNP/node. how/WRB/how do/VBP/do i/PRP/i get/VB/get to/TO/to that/DT/that last/JJ/last before/IN/before node/NN/node ?/./? i/PRP/i need/VBP/need to/TO/to go/VB/go through/RP/through the/DT/the entire/JJ/entire list/NN/list /,/, to/TO/to get/VB/get to/TO/to this/DT/this node/NNP/node. i/PRP/i am/VBP/am not/RB/not saying/VBG/saying that/IN/that it/PRP/it is/VBZ/is not/RB/not possible/JJ/possible /,/, but/CC/but it/PRP/it is/VBZ/is a/DT/a very/RB/very expensive/JJ/expensive operation/NNP/operation. it/PRP/it is/VBZ/is not/RB/not worth/JJ/worth while/IN/while to/TO/to remove/VB/remove at/IN/at the/DT/the tail/NN/tail and/CC/and so/RB/so we/PRP/we will/MD/will remove/VB/remove at/IN/at the/DT/the head/NN/head and/CC/and add/VBD/add at/IN/at the/DT/the tail/NN/tail /,/, which/WDT/which means/VBZ/means the/DT/the front/NN/front of/IN/of our/PRP$/our queue/NN/queue will/MD/will be/VB/be at/IN/at the/DT/the head/NN/head and/CC/and the/DT/the rear/NN/rear of/IN/of the/DT/the queue/NN/queue would/MD/would be/VB/be the/DT/the tail/NNP/tail. so/RB/so far/RB/far we/PRP/we have/VBP/have seen/VBN/seen the/DT/the queue/NN/queue data/NNS/data type/NNP/type. now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to introduce/VB/introduce another/DT/another data/NN/data type/NN/type called/VBN/called double-ended/JJ/double-ended queue/NNP/queue. what/WP/what is/VBZ/is the/DT/the double-ended/JJ/double-ended queue/NN/queue ?/./? it/PRP/it is/VBZ/is a/DT/a queue/NN/queue in/IN/in which/WDT/which we/PRP/we support/VBP/support /,/, insert/NN/insert and/CC/and delete/JJ/delete operations/NNS/operations at/IN/at both/DT/both the/DT/the ends/NNP/ends. we/PRP/we have/VBP/have insert/VBN/insert first/JJ/first which/WDT/which is/VBZ/is to/TO/to insert/VB/insert at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue /,/, insert/NN/insert last/JJ/last is/VBZ/is to/TO/to insert/VB/insert at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the queue/NN/queue /,/, remove/VBP/remove first/JJ/first is/VBZ/is to/TO/to remove/VB/remove at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue and/CC/and remove/VB/remove last/JJ/last is/VBZ/is to/TO/to remove/VB/remove an/DT/an element/NN/element at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the queue/NNP/queue. also/RB/also we/PRP/we have/VBP/have the/DT/the first/JJ/first and/CC/and the/DT/the last/JJ/last operations/NNP/operations. such/JJ/such a/DT/a thing/NN/thing is/VBZ/is called/VBN/called double-ended/JJ/double-ended queue/NN/queue /,/, at/IN/at both/DT/both the/DT/the ends/NNS/ends we/PRP/we can/MD/can do/VB/do both/DT/both the/DT/the operations/NNS/operations of/IN/of insert/NN/insert and/CC/and delete/NNP/delete. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 36/CD/36 /CD/) a/DT/a singly/RB/singly linked/VBN/linked list/NN/list is/VBZ/is not/RB/not a/DT/a good/JJ/good idea/NN/idea to/TO/to implement/VB/implement such/JJ/such a/DT/a double-ended/JJ/double-ended queue/NNP/queue. why/WRB/why because/IN/because as/IN/as i/PRP/i have/VBP/have said/VBN/said repeatedly/RB/repeatedly /,/, we/PRP/we can/MD/can not/RB/not remove/VB/remove the/DT/the element/NN/element at/IN/at the/DT/the tail/NN/tail or/CC/or it/PRP/it is/VBZ/is very/RB/very expensive/NNP/expensive. what/WP/what is/VBZ/is the/DT/the good/JJ/good solution/NN/solution to/TO/to this/DT/this problem/NN/problem ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use doubly/RB/doubly linked/VBN/linked list/NN/list to/TO/to implement/VB/implement double-ended/JJ/double-ended queues/NNP/queues. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 28/CD/28 /CD/) what/WP/what is/VBZ/is the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list ?/./? a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list has/VBZ/has nodes/NNS/nodes with/IN/with two/CD/two pointers/NNS/pointers /,/, one/CD/one is/VBZ/is next/JJ/next pointer/NN/pointer and/CC/and the/DT/the other/JJ/other is/VBZ/is the/DT/the previous/JJ/previous pointer/NNP/pointer. we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to have/VB/have two/CD/two sentinel/JJ/sentinel nodes/NNP/nodes. each/DT/each node/NN/node has/VBZ/has two/CD/two pointers/NNS/pointers /,/, one/CD/one pointing/VBG/pointing to/TO/to the/DT/the next/JJ/next and/CC/and one/CD/one pointing/VBG/pointing to/TO/to the/DT/the previous/NNP/previous. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 55/CD/55 /CD/) using/VBG/using such/JJ/such a/DT/a list/NN/list we/PRP/we can/MD/can implement/VB/implement all/PDT/all the/DT/the operations/NNS/operations of/IN/of double-ended/JJ/double-ended queue/NN/queue in/IN/in constant/NN/constant time/NNP/time. the/DT/the problem/NN/problem earlier/JJR/earlier was/VBD/was how/WRB/how to/TO/to delete/VB/delete the/DT/the node/NN/node which/WDT/which is/VBZ/is at/IN/at the/DT/the end/NNP/end. the/DT/the head/NN/head and/CC/and the/DT/the trailer/NN/trailer nodes/VBZ/nodes are/VBP/are the/DT/the 2/CD/2 sentinel/NN/sentinel nodes/NNP/nodes. i/PRP/i have/VBP/have a/DT/a pointer/NN/pointer to/TO/to 2/CD/2 sentinel/NN/sentinel nodes/VBZ/nodes and/CC/and to/TO/to get/VB/get to/TO/to the/DT/the last/JJ/last element/NN/element /,/, i/PRP/i just/RB/just follow/VBP/follow the/DT/the pointer/NN/pointer once/RB/once and/CC/and get/VB/get to/TO/to that/DT/that element/NNP/element. to/TO/to delete/VB/delete that/IN/that node/NN/node /,/, move/NN/move to/TO/to the/DT/the previous/JJ/previous port/NN/port and/CC/and set/VBD/set its/PRP$/its next/JJ/next pointer/NN/pointer to/TO/to trailer/VB/trailer and/CC/and send/VB/send the/DT/the previous/JJ/previous pointer/NN/pointer of/IN/of trailer/NN/trailer to/TO/to that/DT/that node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 15/CD/15 /CD/) we/PRP/we need/VBP/need header/NN/header and/CC/and trailer/NN/trailer nodes/NNS/nodes in/IN/in a/DT/a doubly/RB/doubly linked/VBN/linked list/NNP/list. these/DT/these nodes/NNS/nodes are/VBP/are called/VBN/called sentinel/NN/sentinel nodes/NNS/nodes or/CC/or dummy/NN/dummy nodes/NNS/nodes because/IN/because they/PRP/they do/VBP/do not/RB/not contain/VB/contain any/DT/any data/NNS/data inside/VBP/inside them/PRP/them and/CC/and they/PRP/they are/VBP/are just/RB/just there/RB/there to/TO/to mark/VB/mark the/DT/the start/NN/start and/CC/and the/DT/the end/NNP/end. this/DT/this is/VBZ/is useful/NNP/useful. how/WRB/how do/VBP/do you/PRP/you delete/VB/delete at/IN/at the/DT/the end/NN/end ?/./? i/PRP/i have/VBP/have to/TO/to delete/VB/delete san/JJ/san francisco/NN/francisco out/IN/out of/IN/of this/DT/this list/NNP/list. all/DT/all i/PRP/i have/VBP/have to/TO/to do/VB/do is/VBZ/is make/VB/make the/DT/the sentinel/NN/sentinel node/NN/node point/NN/point to/TO/to the/DT/the previous/JJ/previous node/NN/node and/CC/and make/VB/make that/IN/that previous/JJ/previous node/NN/node to/TO/to point/NN/point to/TO/to the/DT/the sentinel/NN/sentinel node/NNP/node. then/RB/then the/DT/the last/JJ/last node/NN/node is/VBZ/is deleted/VBN/deleted and/CC/and in/IN/in the/DT/the slide/NN/slide /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 52/CD/52 /CD/) the/DT/the last/JJ/last one/CD/one becomes/VBZ/becomes my/PRP$/my new/JJ/new list/NNP/list. that/WDT/that was/VBD/was the/DT/the only/JJ/only thing/NN/thing i/PRP/i could/MD/could not/RB/not do/VB/do in/IN/in a/DT/a singly/RB/singly linked/VBN/linked list/NN/list and/CC/and i/PRP/i have/VBP/have shown/VBN/shown it/PRP/it here/NNP/here. hence/NN/hence all/DT/all the/DT/the other/JJ/other operations/NNS/operations can/MD/can be/VB/be done/VBN/done in/IN/in constant/JJ/constant time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 52/CD/52 /CD/) thus/RB/thus using/VBG/using a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list /,/, we/PRP/we can/MD/can implement/VB/implement all/PDT/all the/DT/the operations/NNS/operations of/IN/of double-ended/JJ/double-ended queue/NN/queue in/IN/in constant/NN/constant time/NNP/time. we/PRP/we can/MD/can insert/VB/insert at/IN/at the/DT/the front/NN/front /,/, insert/NN/insert at/IN/at the/DT/the end/NN/end /,/, delete/JJ/delete at/IN/at the/DT/the front/NN/front or/CC/or delete/JJ/delete at/IN/at the/DT/the end/NN/end all/DT/all in/IN/in constant/JJ/constant time/NNP/time. what/WP/what is/VBZ/is meant/VBN/meant by/IN/by constant/NN/constant time/NN/time ?/./? it/PRP/it is/VBZ/is the/DT/the time/NN/time which/WDT/which is/VBZ/is independent/JJ/independent of/IN/of number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the list/NN/list and/CC/and your/PRP$/your running/NN/running time/NN/time will/MD/will not/RB/not be/VB/be depended/VBN/depended upon/IN/upon the/DT/the time/NNP/time. double-ended/JJ/double-ended queue/NN/queue is/VBZ/is a/DT/a fairly/RB/fairly generic/JJ/generic data/NNS/data type/NN/type /,/, it/PRP/it can/MD/can used/VB/used to/TO/to implement/VB/implement other/JJ/other data/NNS/data types/NNS/types also/NNP/also. suppose/NN/suppose you/PRP/you had/VBD/had an/DT/an implementation/NN/implementation of/IN/of double-ended/JJ/double-ended queue/NN/queue and/CC/and you/PRP/you can/MD/can use/VB/use that/IN/that to/TO/to make/VB/make a/DT/a stack/NN/stack or/CC/or a/DT/a queue/NNP/queue. let/NN/let us/PRP/us see/VBP/see the/DT/the implementation/NN/implementation of/IN/of a/DT/a double-ended/JJ/double-ended queue/NNP/queue. i/PRP/i can/MD/can use/VB/use the/DT/the methods/NNS/methods of/IN/of this/DT/this implementation/NN/implementation to/TO/to implement/VB/implement a/DT/a stack/NNP/stack. for/IN/for instance/NN/instance in/IN/in the/DT/the method/NN/method top/NN/top /:/( /:/) /,/, the/DT/the top/JJ/top element/NN/element of/IN/of the/DT/the stack/NN/stack would/MD/would correspond/VB/correspond to/TO/to the/DT/the last/JJ/last element/NN/element of/IN/of our/PRP$/our double-ended/JJ/double-ended queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 17/CD/17 /CD/) thus/RB/thus the/DT/the method/NN/method top/NN/top /:/( /:/) would/MD/would return/VB/return the/DT/the last/JJ/last element/NN/element of/IN/of the/DT/the double-ended/JJ/double-ended queue/NNP/queue. the/DT/the method/NN/method push/NN/push /:/( /:/) would/MD/would correspond/VB/correspond to/TO/to inserting/VB/inserting at/IN/at the/DT/the end/NN/end of/IN/of my/PRP$/my double/JJ/double ended/VBD/ended queue/JJ/queue and/CC/and the/DT/the method/NN/method pop/NN/pop /:/( /:/) would/MD/would correspond/VB/correspond to/TO/to deleting/VB/deleting at/IN/at the/DT/the end/NN/end of/IN/of my/PRP$/my double/JJ/double ended/VBD/ended queue/NNP/queue. i/PRP/i could/MD/could also/RB/also make/VB/make the/DT/the last/JJ/last /NN/( /:/) to/TO/to correspond/VB/correspond to/TO/to the/DT/the front/NN/front element/NN/element of/IN/of my/PRP$/my double/JJ/double ended/VBD/ended queue/NNP/queue. in/IN/in that/DT/that case/NN/case the/DT/the last/JJ/last /NN/( /:/) would/MD/would have/VB/have been/VBN/been my/PRP$/my front/NN/front and/CC/and insert/NN/insert last/JJ/last /NN/( 0/-NONE-/0 /./) would/MD/would have/VB/have been/VBN/been insert/VBN/insert front/NN/front /:/( /:/) and/CC/and remove/VB/remove last/JJ/last /NN/( /:/) would/MD/would have/VB/have been/VBN/been my/PRP$/my remove/NN/remove front/NN/front /:/( /:/) /./. you/PRP/you can/MD/can use/VB/use it/PRP/it either/DT/either way/NN/way you/PRP/you like/IN/like it/NNP/it. size/NN/size /:/( /:/) just/RB/just corresponds/VBZ/corresponds to/TO/to the/DT/the size/NN/size of/IN/of my/PRP$/my double/JJ/double ended/VBD/ended queue/JJ/queue and/CC/and isempty/NN/isempty /:/( /:/) corresponds/NNS/corresponds to/TO/to isempty/NN/isempty of/IN/of my/PRP$/my double-ended/JJ/double-ended queue/NNP/queue. because/IN/because these/DT/these are/VBP/are only/RB/only dependent/JJ/dependent upon/IN/upon the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the queue/NNP/queue. similarly/RB/similarly i/PRP/i can/MD/can use/VB/use a/DT/a double-ended/JJ/double-ended queue/NN/queue to/TO/to implement/VB/implement the/DT/the queue/NNP/queue. front/NN/front /:/( /:/) gives/NNS/gives the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the double-ended/JJ/double-ended queue/NN/queue /,/, enqueue/NN/enqueue /:/( /:/) corresponds/NNS/corresponds to/TO/to last/JJ/last that/IN/that is/VBZ/is it/PRP/it inserts/VBZ/inserts at/IN/at the/DT/the rear/NNP/rear. when/WRB/when i/PRP/i say/VBP/say dequeue/JJ/dequeue /,/, it/PRP/it removes/VBZ/removes the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the double-ended/JJ/double-ended queue/NNP/queue. if/IN/if i/PRP/i have/VBP/have a/DT/a dequeue/NN/dequeue implementation/NN/implementation /,/, i/PRP/i can/MD/can use/VB/use the/DT/the methods/NNS/methods to/TO/to implement/VB/implement a/DT/a stack/NN/stack or/CC/or a/DT/a queue/NN/queue or/CC/or one/CD/one of/IN/of these/DT/these data/NNS/data types/NNP/types. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 59/CD/59 /CD/) we/PRP/we have/VBP/have used/VBN/used a/DT/a double-ended/JJ/double-ended queue/NN/queue to/TO/to implement/VB/implement a/DT/a stack/NN/stack or/CC/or queue/VB/queue and/CC/and this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of an/DT/an adapter/NN/adapter pattern/NNP/pattern. thus/RB/thus adapter/JJR/adapter patterns/NNS/patterns implements/NNS/implements a/DT/a class/NN/class using/VBG/using methods/NNS/methods of/IN/of another/DT/another class/NNP/class. in/IN/in general/JJ/general /,/, adapter/NN/adapter classes/NNS/classes specialize/VBP/specialize general/JJ/general classes/NNS/classes and/CC/and we/PRP/we can/MD/can have/VB/have certain/JJ/certain applications/NNP/applications. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 39/CD/39 /CD/) one/CD/one application/NN/application is/VBZ/is that/IN/that we/PRP/we can/MD/can just/RB/just implement/VB/implement by/IN/by changing/NN/changing some/DT/some methods/NNP/methods. for/IN/for example/NN/example we/PRP/we can/MD/can implement/VB/implement a/DT/a stack/NN/stack by/IN/by using/VBG/using a/DT/a double-ended/JJ/double-ended queue/NNP/queue. another/DT/another application/NN/application would/MD/would be/VB/be an/DT/an implementation/NN/implementation of/IN/of a/DT/a stack/NNP/stack. we/PRP/we define/VBP/define an/DT/an interface/NN/interface called/VBN/called stack/NN/stack and/CC/and implemented/VBD/implemented it/PRP/it using/VBG/using an/DT/an array/NNP/array. that/IN/that implementation/NN/implementation is/VBZ/is called/VBN/called an/DT/an array/NN/array stack/NNP/stack. what/WP/what are/VBP/are the/DT/the contents/NNS/contents of/IN/of array/NN/array stack/NN/stack ?/./? they/PRP/they are/VBP/are any/DT/any arbitrary/JJ/arbitrary objects/NNS/objects and/CC/and i/PRP/i can/MD/can adapt/VB/adapt arraystack/NN/arraystack implementation/NN/implementation to/TO/to an/DT/an implementation/NN/implementation called/VBN/called integerarraystack/NN/integerarraystack which/WDT/which only/RB/only uses/VBZ/uses integer/JJR/integer objects/NNS/objects in/IN/in it/NNP/it. all/DT/all i/PRP/i have/VBP/have to/TO/to do/VB/do is/VBZ/is suitably/RB/suitably cast/VBN/cast the/DT/the type/NN/type of/IN/of the/DT/the objects/NNS/objects that/WDT/that i/PRP/i am/VBP/am pushing/VBG/pushing in/IN/in to/TO/to the/DT/the stack/NN/stack or/CC/or removing/VBG/removing out/RP/out of/IN/of the/DT/the stack/NNP/stack. there/RB/there is/VBZ/is another/DT/another data/NN/data structures/NNS/structures called/VBN/called circularly/RB/circularly linked/VBN/linked list/NN/list and/CC/and it/PRP/it is/VBZ/is very/RB/very simple/NNP/simple. in/IN/in that/DT/that the/DT/the last/JJ/last element/NN/element is/VBZ/is pointing/VBG/pointing to/TO/to the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the list/NNP/list. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 38/CD/38 /CD/) there/EX/there are/VBP/are no/DT/no 2/CD/2 pointers/NNS/pointers head/NN/head and/CC/and tail/NN/tail that/IN/that is/VBZ/is there/EX/there is/VBZ/is only/RB/only one/CD/one pointer/NN/pointer which/WDT/which is/VBZ/is pointing/VBG/pointing to/TO/to the/DT/the start/NN/start of/IN/of the/DT/the circular/JJ/circular list/NN/list and/CC/and you/PRP/you can/MD/can use/VB/use the/DT/the data/NNS/data structure/VBP/structure which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the above/NN/above slide/NN/slide to/TO/to implement/VB/implement both/DT/both queue/NN/queue and/CC/and the/DT/the stack/NNP/stack. how/WRB/how will/MD/will you/PRP/you use/VB/use this/DT/this data/NN/data structure/NN/structure to/TO/to implement/VB/implement a/DT/a queue/NN/queue ?/./? in/IN/in a/DT/a queue/NN/queue we/PRP/we will/MD/will make/VB/make the/DT/the first/JJ/first node/NN/node as/IN/as the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue and/CC/and the/DT/the last/JJ/last node/NN/node as/IN/as the/DT/the rear/NN/rear of/IN/of the/DT/the queue/NNP/queue. how/WRB/how will/MD/will i/VB/i add/JJ/add an/DT/an element/NN/element at/IN/at the/DT/the rear/JJ/rear ?/./? to/TO/to add/VB/add an/DT/an element/NN/element before/IN/before the/DT/the first/JJ/first node/NN/node /,/, make/VBP/make the/DT/the pointer/NN/pointer point/NN/point to/TO/to the/DT/the first/JJ/first node/NN/node and/CC/and make/VB/make the/DT/the head/NN/head point/NN/point to/TO/to /,/, it/PRP/it is/VBZ/is not/RB/not straight/RB/straight forward/RB/forward because/IN/because if/IN/if you/PRP/you mean/VBP/mean the/DT/the big/JJ/big pointer/NN/pointer then/RB/then how/WRB/how you/PRP/you will/MD/will make/VB/make this/DT/this to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new node/NN/node you/PRP/you have/VB/have just/RB/just created/NNP/created. we/PRP/we want/VBP/want to/TO/to create/VB/create a/DT/a new/JJ/new node/NN/node at/IN/at the/DT/the end/NNP/end. make/VBP/make the/DT/the element/NN/element which/WDT/which you/PRP/you are/VBP/are inserting/VBG/inserting to/TO/to go/VB/go into/IN/into the/DT/the new/JJ/new node/NN/node and/CC/and create/VB/create a/DT/a new/JJ/new node/NN/node and/CC/and copy/VB/copy the/DT/the element/NN/element rome/NN/rome into/IN/into the/DT/the new/JJ/new node/NNP/node. make/VBP/make the/DT/the head/NN/head point/NN/point to/TO/to that/DT/that new/JJ/new node/NN/node and/CC/and copying/VBG/copying is/VBZ/is not/RB/not costly/RB/costly because/IN/because here/RB/here you/PRP/you are/VBP/are copying/VBG/copying only/RB/only the/DT/the reference/NNP/reference. think/VBP/think about/IN/about the/DT/the circular/JJ/circular list/NN/list and/CC/and it/PRP/it is/VBZ/is a/DT/a very/RB/very straight/JJ/straight forward/NNP/forward. in/IN/in this/DT/this manner/NN/manner you/PRP/you can/MD/can insert/VB/insert an/DT/an element/NN/element in/IN/in the/DT/the queue/NN/queue /,/, if/IN/if you/PRP/you are/VBP/are using/VBG/using this/DT/this circular/NN/circular list/NN/list to/TO/to implement/VB/implement the/DT/the queue/NNP/queue. removing/NN/removing an/DT/an element/NN/element corresponds/VBZ/corresponds to/TO/to removing/VBG/removing the/DT/the first/JJ/first one/NNP/one. how/WRB/how do/VBP/do you/PRP/you remove/VB/remove the/DT/the first/JJ/first one/CD/one ?/./? if/IN/if i/PRP/i have/VBP/have to/TO/to just/RB/just remove/VB/remove the/DT/the first/JJ/first element/NN/element in/IN/in the/DT/the list/NN/list /,/, then/RB/then how/WRB/how do/VBP/do i/PRP/i make/VB/make the/DT/the pointer/NN/pointer from/IN/from the/DT/the last/JJ/last node/NN/node to/TO/to point/NN/point to/TO/to the/DT/the 2nd/CD/2nd node/NNP/node. there/RB/there is/VBZ/is a/DT/a problem/NN/problem in/IN/in doing/NN/doing this/NNP/this. what/WP/what do/VBP/do you/PRP/you do/VB/do again/RB/again ?/./? let/NN/let us/PRP/us remove/VBP/remove the/DT/the 2nd/JJ/2nd node/NN/node and/CC/and copy/VB/copy the/DT/the contents/NNS/contents of/IN/of that/DT/that node/NN/node to/TO/to the/DT/the 1st/CD/1st node/NNP/node. we/PRP/we have/VBP/have to/TO/to remove/VB/remove the/DT/the rome/NNP/rome. how/WRB/how do/VBP/do i/PRP/i remove/VB/remove the/DT/the rome/NN/rome ?/./? i/PRP/i copy/VBP/copy seattle/JJ/seattle to/TO/to rome/NNP/rome. thus/RB/thus rome/VB/rome has/VBZ/has seattle/JJ/seattle in/IN/in it/PRP/it and/CC/and i/PRP/i remove/VBP/remove the/DT/the 2nd/JJ/2nd node/NNP/node. copying/NN/copying just/RB/just means/VBZ/means changing/VBG/changing the/DT/the reference/NNP/reference. hence/NN/hence we/PRP/we discusses/VBZ/discusses about/IN/about queues/NNS/queues and/CC/and double-ended/JJ/double-ended queues/NNP/queues. we/PRP/we are/VBP/are going/VBG/going to/TO/to the/DT/the second/JJ/second part/NN/part where/WRB/where we/PRP/we will/MD/will quickly/RB/quickly look/VB/look at/IN/at some/DT/some sequences/NNP/sequences. we/PRP/we are/VBP/are going/VBG/going to/TO/to talk/VB/talk about/IN/about vectors/NNS/vectors /,/, positions/NNS/positions /,/, list/NN/list and/CC/and general/JJ/general sequences/NNP/sequences. we/PRP/we will/MD/will be/VB/be using/VBG/using the/DT/the data/NNS/data structures/NNS/structures like/IN/like arrays/NNS/arrays and/CC/and linked/VBD/linked lists/NNS/lists to/TO/to implement/VB/implement these/DT/these data/NNS/data types/NNP/types. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 06/CD/06 /CD/) what/WP/what is/VBZ/is the/DT/the vector/NN/vector data/NNS/data type/NN/type ?/./? vector/NN/vector data/NNS/data type/NN/type is/VBZ/is a/DT/a sequence/NN/sequence of/IN/of n/NN/n elements/NNS/elements that/WDT/that supports/NNS/supports the/DT/the following/VBG/following methods/NNS/methods which/WDT/which are/VBP/are given/VBN/given in/IN/in the/DT/the slide/NN/slide below/NNP/below. these/DT/these are/VBP/are indicative/JJ/indicative methods/NNS/methods and/CC/and not/RB/not all/DT/all the/DT/the methods/NNP/methods. essentially/RB/essentially in/IN/in a/DT/a vector/NN/vector it/PRP/it is/VBZ/is a/DT/a sequence/NN/sequence where/WRB/where there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of rank/NN/rank with/IN/with every/DT/every element/NN/element of/IN/of the/DT/the sequence/NNP/sequence. think/VBP/think of/IN/of sequence/NN/sequence of/IN/of elements/NNS/elements right/RB/right 7,11,13,19/CD/7,11,13,19. we/PRP/we know/VBP/know that/IN/that 7/CD/7 was/VBD/was the/DT/the 1st/CD/1st element/NN/element /,/, 1l/CD/1l was/VBD/was the/DT/the 2nd/CD/2nd element/NN/element /,/, 13/CD/13 was/VBD/was the/DT/the 3rd/JJ/3rd element/NN/element and/CC/and 5/CD/5 was/VBD/was the/DT/the 4th/JJ/4th element/NNP/element. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 34/CD/34 /CD/) with/IN/with each/DT/each element/NN/element there/RB/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of rank/NN/rank /,/, and/CC/and then/RB/then i/PRP/i can/MD/can have/VB/have methods/NNS/methods like/IN/like elematrank/NN/elematrank r/NNP/r. rank/NN/rank here/RB/here corresponds/VBZ/corresponds to/TO/to let/VB/let us/PRP/us say/VB/say rank/NN/rank /:/( r/NN/r /:/) integers/NNP/integers. first/JJ/first element/NN/element was/VBD/was the/DT/the element/NN/element at/IN/at rank/NN/rank 1/CD/1 and/CC/and 2nd/CD/2nd element/NN/element was/VBD/was the/DT/the element/NN/element at/IN/at rank/NN/rank 2/CD/2 and/CC/and so/RB/so on/NNP/on. suppose/NN/suppose if/IN/if i/PRP/i ask/VBP/ask to/TO/to give/VB/give the/DT/the element/NN/element at/IN/at rank/NN/rank r/NN/r or/CC/or replace/NN/replace the/DT/the element/NN/element at/IN/at rank/NN/rank r/NN/r by/IN/by the/DT/the element/NN/element e/NN/e /,/, insert/NN/insert an/DT/an element/NN/element e/NN/e at/IN/at rank/NN/rank r/NN/r or/CC/or delete/JJ/delete the/DT/the element/NN/element at/IN/at rank/NN/rank r/NNP/r. i/PRP/i could/MD/could have/VB/have such/JJ/such methods/NNP/methods. when/WRB/when i/PRP/i remove/VBP/remove the/DT/the element/NN/element at/IN/at rank/NN/rank r/NN/r /,/, for/IN/for instance/NN/instance let/NN/let us/PRP/us say/VBP/say the/DT/the rank/NN/rank of/IN/of the/DT/the students/NNS/students in/IN/in a/DT/a particular/JJ/particular class/NNP/class. there/RB/there is/VBZ/is a/DT/a departmental/JJ/departmental rank/NN/rank 1/CD/1 /,/, the/DT/the departmental/JJ/departmental rank/NN/rank 2/CD/2 and/CC/and departmental/JJ/departmental rank/NN/rank 3/CD/3 and/CC/and so/RB/so on/NNP/on. suppose/NN/suppose the/DT/the departmental/JJ/departmental rank/NN/rank 4/CD/4 changes/NNS/changes and/CC/and goes/VBZ/goes to/TO/to some/DT/some other/JJ/other department/NNP/department. the/DT/the department/NN/department rank/NN/rank 4/CD/4 is/VBZ/is the/DT/the rank/NN/rank of/IN/of the/DT/the one/CD/one who/WP/who had/VBD/had the/DT/the rank/NN/rank 5/CD/5 before/NNP/before. the/DT/the same/JJ/same notion/NN/notion follows/VBZ/follows and/CC/and everyone/NN/everyone would/MD/would move/VB/move up/RP/up by/IN/by 1/CD/1 rank/NNP/rank. let/NN/let us/PRP/us see/VBP/see how/WRB/how to/TO/to implement/VB/implement the/DT/the data/NNS/data type/NN/type using/VBG/using arrays/NNP/arrays. i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have an/DT/an array/NN/array /,/, in/IN/in which/WDT/which i/PRP/i will/MD/will have/VB/have the/DT/the element/NN/element with/IN/with rank/NN/rank 1/CD/1 /,/, rank/NN/rank 2/CD/2 and/CC/and rank/NN/rank 3/CD/3 and/CC/and so/RB/so on/NNP/on. if/IN/if i/PRP/i have/VBP/have to/TO/to insert/VB/insert an/DT/an element/NN/element at/IN/at rank/NN/rank r/NN/r /,/, i/PRP/i have/VBP/have to/TO/to put/VB/put an/DT/an element/NN/element in/IN/in the/DT/the location/NN/location /,/, which/WDT/which means/VBZ/means i/PRP/i have/VBP/have to/TO/to shift/VB/shift all/DT/all these/DT/these elements/NNS/elements to/TO/to one/CD/one step/VB/step right/NNP/right. that/IN/that is/VBZ/is what/WP/what i/PRP/i am/VBP/am doing/VBG/doing and/CC/and i/PRP/i put/VBD/put an/DT/an element/NN/element in/IN/in that/DT/that location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 53/CD/53 /CD/) in/IN/in a/DT/a for/IN/for loop/NN/loop /,/, first/JJ/first we/PRP/we are/VBP/are moving/VBG/moving n-1/-NONE-/n-1 one/CD/one step/NN/step to/TO/to the/DT/the right/NN/right by/IN/by this/DT/this statement/NN/statement s/VBZ/s /:/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] ?/./? s/NNS/s /:/[ i/PRP/i /VBP/] /./. first/JJ/first we/PRP/we are/VBP/are doing/VBG/doing this/DT/this for/IN/for n-1/-NONE-/n-1 /,/, then/RB/then n-2/-NONE-/n-2 where/WRB/where n-2/-NONE-/n-2 is/VBZ/is moved/VBN/moved one/CD/one step/NN/step to/TO/to the/DT/the right/NN/right till/IN/till r/NN/r is/VBZ/is moved/VBN/moved to/TO/to the/DT/the one/CD/one step/NN/step right/NNP/right. finally/RB/finally element/JJ/element e/NN/e is/VBZ/is put/VBN/put at/IN/at position/NN/position r/NN/r and/CC/and the/DT/the size/NN/size is/VBZ/is increased/VBN/increased by/IN/by 1/CD/1 where/WRB/where n/JJ/n sores/NNS/sores the/DT/the size/NN/size of/IN/of the/DT/the vector/NNP/vector. s/VBZ/s /:/[ r/NN/r /:/] ?/./? e/NN/e n/NN/n ?/./? n/NN/n +/:/+ 1/CD/1 similarly/RB/similarly when/WRB/when i/PRP/i am/VBP/am removing/VBG/removing an/DT/an element/NN/element at/IN/at rank/NN/rank r/NN/r /,/, i/PRP/i am/VBP/am essentially/RB/essentially shifting/VBG/shifting the/DT/the entire/JJ/entire elements/NNS/elements one/CD/one step/NN/step to/TO/to the/DT/the left/NNP/left. all/DT/all elements/NNS/elements starting/VBG/starting from/IN/from r/NN/r to/TO/to n-2/-NONE-/n-2 and/CC/and then/RB/then s/VBZ/s /:/[ i/PRP/i /VBP/] gets/NNS/gets s/NNS/s /VBP/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] /./. at/IN/at the/DT/the location/NN/location r/NN/r /,/, i/PRP/i will/MD/will get/VB/get the/DT/the element/NN/element which/WDT/which was/VBD/was sitting/VBG/sitting at/IN/at location/NN/location r/NN/r +/:/+ 1/CD/1. how/WRB/how expensive/JJ/expensive are/VBP/are these/DT/these operations/NNS/operations in/IN/in the/DT/the worst/JJS/worst case/NN/case ?/./? order/NN/order n/NN/n in/IN/in the/DT/the worst/JJS/worst case/NN/case because/IN/because we/PRP/we might/MD/might have/VB/have to/TO/to shift/VB/shift up/RP/up to/TO/to n/VB/n elements/NNS/elements to/TO/to the/DT/the right/NN/right or/CC/or to/TO/to the/DT/the left/NNP/left. this/DT/this implementation/NN/implementation is/VBZ/is expensive/JJ/expensive from/IN/from this/DT/this point/NN/point of/IN/of view/NN/view /,/, if/IN/if i/PRP/i have/VBP/have to/TO/to do/VB/do these/DT/these two/CD/two operations/NNS/operations insert/NN/insert at/IN/at a/DT/a certain/JJ/certain rank/NN/rank or/CC/or remove/VB/remove at/IN/at a/DT/a certain/JJ/certain rank/NNP/rank. i/PRP/i have/VBP/have 2/CD/2 in/IN/in the/DT/the worst/JJS/worst case/NN/case spent/NN/spent order/NN/order n/NN/n time/NNP/time. the/DT/the other/JJ/other operations/NNS/operations are/VBP/are faster/NNP/faster. how/WRB/how much/JJ/much time/NN/time does/VBZ/does the/DT/the elematrank/NN/elematrank /:/( r/NN/r /:/) takes/VBZ/takes /,/, because/IN/because i/PRP/i just/RB/just go/VBP/go to/TO/to the/DT/the location/NN/location in/IN/in that/DT/that array/NN/array and/CC/and retrieve/VB/retrieve the/DT/the elements/NNS/elements sitting/VBG/sitting there/NNP/there. replaceatrank/NN/replaceatrank /:/( r/NN/r /,/, e/NN/e /:/) again/RB/again order/JJR/order one/CD/one /,/, because/IN/because i/PRP/i just/RB/just go/VBP/go to/TO/to the/DT/the location/NN/location and/CC/and replace/NN/replace that/IN/that element/NN/element with/IN/with element/NN/element e/NNP/e. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 06/CD/06 /CD/) the/DT/the chart/NN/chart given/VBN/given below/IN/below shows/NNS/shows the/DT/the time/NN/time complexity/NN/complexity of/IN/of various/JJ/various methods/NNP/methods. all/DT/all methods/NNS/methods except/IN/except inserted/VBN/inserted at/IN/at rank/NN/rank and/CC/and remove/VB/remove at/IN/at rank/NN/rank take/VB/take constant/JJ/constant time/NN/time but/CC/but these/DT/these two/CD/two methods/NNS/methods could/MD/could take/VB/take order/NN/order n/NN/n time/NN/time in/IN/in the/DT/the worst/JJS/worst case/NNP/case. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 33/CD/33 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 25/CD/25 /CD/) can/MD/can you/PRP/you think/VB/think of/IN/of some/DT/some other/JJ/other way/NN/way of/IN/of implementing/VBG/implementing this/DT/this list/NN/list ?/./? we/PRP/we can/MD/can implement/VB/implement through/IN/through doubly/RB/doubly linked/VBN/linked list/NNP/list. can/MD/can you/PRP/you use/VB/use a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list to/TO/to implement/VB/implement a/DT/a vector/NN/vector ?/./? i/PRP/i am/VBP/am showing/VBG/showing you/PRP/you here/RB/here the/DT/the operation/NN/operation of/IN/of inserting/VBG/inserting at/IN/at a/DT/a certain/JJ/certain rank/NNP/rank. there/RB/there are/VBP/are 3/CD/3 diagrams/NNS/diagrams in/IN/in the/DT/the above/NN/above slide/NNP/slide. in/IN/in the/DT/the 1st/CD/1st diagram/NN/diagram /,/, the/DT/the 1st/JJ/1st node/NN/node is/VBZ/is the/DT/the header/NN/header and/CC/and the/DT/the next/JJ/next one/CD/one is/VBZ/is the/DT/the element/NN/element at/IN/at rank/NN/rank 1/CD/1. following/VBG/following one/CD/one is/VBZ/is the/DT/the element/NN/element at/IN/at rank/NN/rank 2/CD/2 and/CC/and the/DT/the next/JJ/next one/CD/one is/VBZ/is the/DT/the element/NN/element at/IN/at rank/NN/rank 3/CD/3. suppose/NN/suppose i/PRP/i want/VBP/want to/TO/to insert/VB/insert an/DT/an element/NN/element at/IN/at rank/NN/rank 2/CD/2 /,/, i/PRP/i have/VBP/have to/TO/to make/VB/make a/DT/a new/JJ/new node/NN/node and/CC/and put/VBD/put it/PRP/it between/IN/between 1/CD/1 and/CC/and 3/CD/3. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? create/VB/create the/DT/the node/NN/node and/CC/and to/TO/to insert/VB/insert it/PRP/it /,/, i/PRP/i make/VBP/make a/DT/a pointer/NN/pointer point/NN/point to/TO/to the/DT/the next/JJ/next node/NN/node and/CC/and make/VB/make the/DT/the previous/JJ/previous pointer/NN/pointer point/NN/point to/TO/to the/DT/the previous/JJ/previous node/NNP/node. this/DT/this is/VBZ/is how/WRB/how i/PRP/i insert/VBP/insert newyork/NN/newyork and/CC/and the/DT/the 3rd/JJ/3rd diagram/NN/diagram is/VBZ/is the/DT/the one/CD/one which/WDT/which i/PRP/i get/VBP/get after/IN/after insertion/NNP/insertion. there/RB/there are/VBP/are 2/CD/2 issues/NNP/issues. first/RB/first if/IN/if i/PRP/i know/VBP/know where/WRB/where i/PRP/i have/VBP/have to/TO/to insert/VB/insert /,/, then/RB/then i/PRP/i take/VBP/take constant/JJ/constant time/NN/time but/CC/but to/TO/to find/VB/find out/RP/out where/WRB/where i/PRP/i have/VBP/have to/TO/to insert/VB/insert takes/VBZ/takes order/NN/order n/NN/n times/NNP/times. because/IN/because if/IN/if i/PRP/i have/VBP/have to/TO/to insert/VB/insert at/IN/at rank/NN/rank 17/CD/17 then/RB/then i/PRP/i have/VBP/have to/TO/to step/VB/step through/RP/through that/IN/that linked/VBN/linked list/NN/list till/IN/till 17th/CD/17th position/NN/position and/CC/and then/RB/then i/PRP/i would/MD/would know/VB/know to/TO/to insert/VB/insert at/IN/at that/DT/that location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 03/CD/03 /CD/) once/RB/once i/PRP/i know/VBP/know to/TO/to insert/VB/insert at/IN/at this/DT/this location/NN/location then/RB/then it/PRP/it is/VBZ/is easy/NNP/easy. i/PRP/i will/MD/will insert/VB/insert the/DT/the element/NN/element in/IN/in 3/CD/3 or/CC/or 4/CD/4 pointer/NN/pointer changes/NNP/changes. the/DT/the following/VBG/following would/MD/would be/VB/be a/DT/a java/NN/java code/NN/code for/IN/for inserting/NN/inserting at/IN/at a/DT/a rank/NNP/rank. i/PRP/i am/VBP/am assuming/VBG/assuming the/DT/the existence/NN/existence of/IN/of the/DT/the procedure/NN/procedure nodeatrank/NN/nodeatrank /:/( rank/NN/rank /:/) /./. this/DT/this is/VBZ/is the/DT/the method/NN/method that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be defining/VBG/defining shortly/NNP/shortly. what/WP/what does/VBZ/does this/DT/this method/NN/method do/VBP/do ?/./? given/VBN/given a/DT/a rank/NN/rank /,/, it/PRP/it tells/VBZ/tells me/PRP/me which/WDT/which is/VBZ/is the/DT/the node/NN/node at/IN/at that/DT/that rank/NNP/rank. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 39/CD/39 /CD/) for/IN/for instance/NN/instance /,/, to/TO/to insert/VB/insert the/DT/the node/NN/node at/IN/at rank/NN/rank 2/CD/2 /,/, first/JJ/first i/PRP/i will/MD/will call/VB/call the/DT/the procedure/NN/procedure with/IN/with rank/NN/rank 2/CD/2 it/PRP/it will/MD/will give/VB/give me/PRP/me the/DT/the 2nd/CD/2nd node/NN/node of/IN/of the/DT/the 1st/CD/1st diagram/NN/diagram because/IN/because that/DT/that is/VBZ/is the/DT/the node/NN/node at/IN/at rank/NN/rank 2/CD/2. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 05/CD/05 /CD/) i/PRP/i have/VBP/have to/TO/to get/VB/get to/TO/to the/DT/the previous/JJ/previous node/NN/node of/IN/of that/DT/that node/NNP/node. if/IN/if i/PRP/i get/VBP/get to/TO/to this/DT/this node/NN/node /:/( next/JJ/next /NN/) at/IN/at rank/NN/rank 2/CD/2 /,/, then/RB/then i/PRP/i get/VBP/get to/TO/to the/DT/the previous/JJ/previous node/NN/node /:/( next.getprev/NN/next.getprev /:/( /:/) /:/) and/CC/and this/DT/this is/VBZ/is the/DT/the node/NN/node previous/JJ/previous to/TO/to rank/VB/rank 2/CD/2 which/WDT/which is/VBZ/is at/IN/at rank/NN/rank 1/CD/1. the/DT/the new/JJ/new node/NN/node that/WDT/that i/PRP/i have/VBP/have to/TO/to insert/VB/insert has/VBZ/has to/TO/to be/VB/be between/IN/between next/JJ/next and/CC/and prev/NNP/prev. i/PRP/i create/VBP/create the/DT/the new/JJ/new node/NN/node and/CC/and i/PRP/i set/VBD/set its/PRP$/its previous/JJ/previous field/NN/field to/TO/to refer/VB/refer to/TO/to the/DT/the previous/JJ/previous node/NN/node and/CC/and i/PRP/i set/VBD/set its/PRP$/its next/JJ/next field/NN/field to/TO/to refer/VB/refer to/TO/to the/DT/the next/JJ/next node/NNP/node. dlnode/NN/dlnode next/IN/next =/NN/= nodeatrank/NN/nodeatrank /:/( rank/NN/rank /:/) ;/:/; dlnode/NN/dlnode prev/NN/prev =/:/= next.getprev/NN/next.getprev /:/( /:/) ;/:/; dlnode/NN/dlnode node/NN/node =/:/= new/JJ/new dlnode/NN/dlnode /:/( element/NN/element /,/, prev/NN/prev /,/, next/JJ/next /NN/) ;/:/; /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 25/CD/25 /CD/) dlnode/NN/dlnode prev/NN/prev =/:/= next.getprev/NN/next.getprev /:/( /:/) ;/:/; ?/./? this/DT/this was/VBD/was the/DT/the node/NN/node at/IN/at rank/NN/rank 1/CD/1 and/CC/and dlnode/NN/dlnode next/IN/next =/NN/= nodeatrank/NN/nodeatrank /:/( rank/NN/rank /:/) ;/:/; was/VBD/was the/DT/the node/NN/node earlier/JJR/earlier at/IN/at rank/NN/rank 2/CD/2. in/IN/in this/DT/this manner/NN/manner i/PRP/i create/VBP/create the/DT/the new/JJ/new node/NN/node at/IN/at the/DT/the appropriate/JJ/appropriate place/NN/place and/CC/and then/RB/then i/PRP/i also/RB/also need/VBP/need to/TO/to check/VB/check the/DT/the previous/JJ/previous and/CC/and next/JJ/next field/NN/field of/IN/of the/DT/the prev/NN/prev and/CC/and next/JJ/next node/NNP/node. that/IN/that is/VBZ/is what/WP/what i/PRP/i am/VBP/am doing/VBG/doing here/NNP/here. next.setprev/NNP/next.setprev /NNP/( node/NN/node /:/) ;/:/; prev.setnext/JJ/prev.setnext /NN/( node/NN/node /:/) ;/:/; size/NN/size +/:/+ +/:/+ ;/:/; do/VBP/do not/RB/not get/VB/get intimated/VBN/intimated by/IN/by this/DT/this code/NN/code /,/, it/PRP/it is/VBZ/is just/RB/just doing/VBG/doing what/WP/what is/VBZ/is shown/VBN/shown in/IN/in the/DT/the picture/NNP/picture. i/PRP/i am/VBP/am assuming/VBG/assuming the/DT/the existence/NN/existence of/IN/of this/DT/this procedure/NN/procedure dlnode/NN/dlnode next/IN/next =/NN/= nodeatrank/NN/nodeatrank /:/( rank/NN/rank /:/) in/IN/in which/WDT/which /,/, the/DT/the given/VBN/given rank/NN/rank will/MD/will tell/VB/tell me/PRP/me which/WDT/which is/VBZ/is the/DT/the node/NN/node at/IN/at that/DT/that rank/NN/rank in/IN/in the/DT/the original/JJ/original list/NNP/list. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 07/CD/07 /CD/) i/PRP/i will/MD/will show/VB/show you/PRP/you the/DT/the process/NN/process of/IN/of deletion/NNP/deletion. if/IN/if i/PRP/i have/VBP/have to/TO/to remove/VB/remove the/DT/the element/NN/element at/IN/at rank/NN/rank 3/CD/3 /,/, i/PRP/i will/MD/will first/RB/first find/VB/find out/RP/out the/DT/the node/NN/node which/WDT/which is/VBZ/is at/IN/at this/DT/this rank/NN/rank so/IN/so i/PRP/i get/VBP/get to/TO/to the/DT/the node/NN/node which/WDT/which is/VBZ/is selected/VBN/selected in/IN/in the/DT/the 2nd/JJ/2nd diagram/NN/diagram and/CC/and then/RB/then i/PRP/i have/VBP/have to/TO/to go/VB/go to/TO/to the/DT/the next/JJ/next node/NN/node /,/, go/VBP/go to/TO/to the/DT/the previous/JJ/previous node/NN/node and/CC/and update/VB/update their/PRP$/their next/JJ/next and/CC/and previous/JJ/previous pointers/NNP/pointers. thus/RB/thus the/DT/the pointer/NN/pointer will/MD/will point/VB/point to/TO/to the/DT/the next/JJ/next node/NN/node and/CC/and previous/JJ/previous node/NN/node and/CC/and in/IN/in this/DT/this manner/NN/manner i/PRP/i will/MD/will get/VB/get rid/JJ/rid of/IN/of that/DT/that node/NN/node and/CC/and at/IN/at the/DT/the end/NN/end i/PRP/i will/MD/will get/VB/get the/DT/the 3rd/JJ/3rd diagram/NN/diagram as/IN/as the/DT/the final/JJ/final node/NNP/node. similarly/RB/similarly i/PRP/i can/MD/can write/VB/write down/RP/down the/DT/the java/NN/java code/NN/code for/IN/for doing/VBG/doing this/NNP/this. once/RB/once again/RB/again i/PRP/i am/VBP/am assuming/VBG/assuming the/DT/the procedure/NN/procedure nodeatrank/NN/nodeatrank /,/, which/WDT/which tells/NNS/tells me/PRP/me about/IN/about the/DT/the node/NN/node which/WDT/which is/VBZ/is sitting/VBG/sitting at/IN/at that/DT/that rank/NNP/rank. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 27/CD/27 /CD/) how/WRB/how do/VBP/do i/PRP/i implement/VB/implement this/DT/this procedure/NN/procedure nodeatrank/NN/nodeatrank ?/./? there/EX/there is/VBZ/is nothing/NN/nothing else/RB/else i/PRP/i can/MD/can do/VB/do except/IN/except that/DT/that i/PRP/i march/VBP/march to/TO/to the/DT/the list/NN/list and/CC/and keep/VB/keep incrementing/VBG/incrementing my/PRP$/my counter/NN/counter till/NN/till i/PRP/i reach/VBP/reach that/IN/that rank/NNP/rank. i/PRP/i have/VBP/have done/VBN/done essentially/RB/essentially that/IN/that except/IN/except a/DT/a small/JJ/small improvement/NN/improvement /,/, that/IN/that if/IN/if the/DT/the rank/NN/rank is/VBZ/is less/JJR/less than/IN/than the/DT/the number/NN/number of/IN/of the/DT/the size/NN/size of/IN/of the/DT/the list/NN/list by/IN/by 2/CD/2 /,/, then/RB/then i/PRP/i start/VBP/start from/IN/from the/DT/the header/NN/header and/CC/and if/IN/if it/PRP/it is/VBZ/is more/RBR/more than/IN/than size/NN/size by/IN/by 2/CD/2 i/PRP/i start/VBP/start from/IN/from the/DT/the tail/NNP/tail. just/RB/just to/TO/to small/JJ/small improvement/NN/improvement nothing/NN/nothing more/JJR/more you/PRP/you do/VBP/do such/JJ/such a/DT/a thing/NN/thing /,/, because/IN/because if/IN/if your/PRP$/your list/NN/list has/VBZ/has hundred/VBN/hundred elements/NNS/elements and/CC/and you/PRP/you are/VBP/are looking/VBG/looking for/IN/for the/DT/the element/NN/element at/IN/at rank/NN/rank 98/CD/98 /,/, then/RB/then there/EX/there is/VBZ/is no/DT/no point/NN/point to/TO/to start/VB/start from/IN/from the/DT/the header/NN/header it/PRP/it is/VBZ/is better/RBR/better to/TO/to start/VB/start from/IN/from the/DT/the tail/NNP/tail. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 34/CD/34 /CD/) that/WDT/that is/VBZ/is as/RB/as far/RB/far as/IN/as the/DT/the vector/NN/vector abstract/NN/abstract data/NNS/data type/NN/type is/VBZ/is concerned/VBN/concerned except/IN/except that/DT/that when/WRB/when i/PRP/i say/VBP/say remove/JJ/remove the/DT/the element/NN/element at/IN/at a/DT/a particular/JJ/particular rank/NN/rank or/CC/or insert/NN/insert the/DT/the element/NN/element at/IN/at a/DT/a particular/JJ/particular rank/NNP/rank. as/IN/as you/PRP/you have/VBP/have seen/VBN/seen both/DT/both the/DT/the implementations/NNS/implementations we/PRP/we have/VBP/have a/DT/a problem/NNP/problem. whether/IN/whether we/PRP/we use/VBP/use an/DT/an array/NN/array or/CC/or a/DT/a list/NN/list to/TO/to do/VB/do that/DT/that implementation/NN/implementation /,/, we/PRP/we seem/VBP/seem to/TO/to require/VB/require order/NN/order n/NN/n time/NN/time in/IN/in the/DT/the worst/JJS/worst case/NN/case /,/, just/RB/just to/TO/to be/VB/be able/JJ/able to/TO/to find/VB/find out/RP/out where/WRB/where the/DT/the element/NN/element correspond/NN/correspond to/TO/to that/DT/that rank/NN/rank is/NNP/is. in/IN/in an/DT/an array/NN/array /,/, we/PRP/we know/VBP/know the/DT/the element/NN/element corresponding/VBG/corresponding to/TO/to that/DT/that rank/NN/rank is/VBZ/is and/CC/and we/PRP/we have/VBP/have to/TO/to move/VB/move the/DT/the elements/NNS/elements when/WRB/when we/PRP/we insert/VBP/insert or/CC/or delete/NNP/delete. linked/VBD/linked lists/NNS/lists are/VBP/are better/RBR/better in/IN/in supporting/NN/supporting node/NN/node based/VBN/based operations/NNP/operations. i/PRP/i have/VBP/have a/DT/a linked/VBN/linked list/NN/list and/CC/and i/PRP/i tell/VBP/tell you/PRP/you delete/VBP/delete this/DT/this node/NN/node /,/, if/IN/if it/PRP/it is/VBZ/is a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list you/PRP/you can/MD/can delete/VB/delete that/IN/that node/NN/node in/IN/in constant/NN/constant time/NNP/time. if/IN/if i/PRP/i say/VBP/say this/DT/this is/VBZ/is a/DT/a node/NN/node and/CC/and insert/NN/insert a/DT/a new/JJ/new node/NN/node after/IN/after this/DT/this node/NN/node i/PRP/i could/MD/could insert/VB/insert a/DT/a new/JJ/new node/NN/node after/IN/after that/DT/that node/NN/node in/IN/in constant/NN/constant time/NN/time or/CC/or if/IN/if i/PRP/i say/VBP/say delete/JJ/delete the/DT/the inserted/JJ/inserted node/NN/node before/IN/before this/DT/this node/NN/node /,/, again/RB/again i/PRP/i can/MD/can insert/VB/insert a/DT/a node/NN/node in/IN/in constant/NN/constant time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 11/CD/11 /CD/) we/PRP/we have/VBP/have the/DT/the data/NNS/data structure/VBP/structure which/WDT/which is/VBZ/is very/RB/very efficient/JJ/efficient /,/, which/WDT/which can/MD/can do/VB/do constant/JJ/constant time/NN/time operations/NNS/operations provided/VBN/provided that/IN/that we/PRP/we give/VBP/give access/NN/access to/TO/to the/DT/the node/NNP/node. some/DT/some how/WRB/how i/PRP/i access/VBP/access the/DT/the particular/JJ/particular node/NN/node at/IN/at which/WDT/which we/PRP/we want/VBP/want to/TO/to insert/VB/insert or/CC/or delete/NNP/delete. that/IN/that is/VBZ/is what/WP/what mentioned/VBN/mentioned below/NNP/below. removeatnode/NN/removeatnode /:/( node/NN/node v/NN/v /:/) and/CC/and insertafternode/NN/insertafternode /:/( node/NN/node v/NN/v /,/, object/NN/object e/NN/e /:/) you/PRP/you can/MD/can remove/VB/remove at/IN/at a/DT/a node/NN/node or/CC/or you/PRP/you can/MD/can insert/VB/insert after/IN/after a/DT/a node/NN/node and/CC/and you/PRP/you can/MD/can insert/VB/insert before/IN/before a/DT/a node/NN/node all/DT/all in/IN/in constant/JJ/constant time/NNP/time. however/RB/however when/WRB/when i/PRP/i give/VBP/give you/PRP/you access/NN/access to/TO/to a/DT/a particular/JJ/particular node/NN/node then/RB/then in/IN/in some/DT/some sense/NN/sense /,/, i/PRP/i am/VBP/am also/RB/also telling/VBG/telling you/PRP/you how/WRB/how i/PRP/i have/VBP/have implemented/VBN/implemented my/PRP$/my list/NNP/list. whether/IN/whether it/PRP/it is/VBZ/is a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list or/CC/or a/DT/a singly/RB/singly linked/VBN/linked list/NN/list and/CC/and what/WP/what are/VBP/are the/DT/the pointers/NNS/pointers and/CC/and stuff/NN/stuff like/IN/like that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 56/CD/56 /CD/) suppose/NN/suppose i/PRP/i want/VBP/want to/TO/to hide/VB/hide all/DT/all those/DT/those information/NN/information /,/, so/RB/so that/IN/that you/PRP/you can/MD/can still/RB/still use/VB/use node/NN/node based/VBN/based operation/NN/operation without/IN/without knowing/NN/knowing the/DT/the actual/JJ/actual implementation/NN/implementation of/IN/of how/WRB/how the/DT/the thing/NN/thing was/VBD/was done/NNP/done. so/RB/so one/CD/one can/MD/can have/VB/have different/JJ/different implementations/NNP/implementations. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do this/DT/this using/VBG/using a/DT/a notion/NN/notion of/IN/of positions/NNP/positions. position/NN/position is/VBZ/is an/DT/an abstract/NN/abstract data/NNS/data type/NN/type which/WDT/which intuitively/RB/intuitively captures/VBZ/captures the/DT/the place/NN/place where/WRB/where a/DT/a certain/JJ/certain element/NN/element is/VBZ/is stored/NNP/stored. in/IN/in your/PRP$/your data/NNS/data structure/NN/structure /,/, there/EX/there is/VBZ/is only/RB/only one/CD/one method/NN/method which/WDT/which is/VBZ/is associated/VBN/associated with/IN/with the/DT/the position/NN/position and/CC/and is/VBZ/is the/DT/the method/NN/method element/NNP/element. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 57/CD/57 /CD/) given/VBN/given an/DT/an object/NN/object of/IN/of this/DT/this data/NN/data type/NN/type position/NN/position /,/, i/PRP/i can/MD/can only/RB/only call/VB/call this/DT/this method/NN/method element/NN/element on/IN/on that/DT/that object/NN/object and/CC/and that/IN/that will/MD/will tell/VB/tell me/PRP/me about/IN/about the/DT/the element/NN/element which/WDT/which is/VBZ/is sitting/VBG/sitting at/IN/at that/DT/that particular/JJ/particular position/NNP/position. if/IN/if this/DT/this is/VBZ/is not/RB/not making/VBG/making much/RB/much sense/NN/sense /,/, then/RB/then think/VBP/think of/IN/of position/NN/position as/IN/as reference/NN/reference to/TO/to a/DT/a particular/JJ/particular node/NNP/node. think/NN/think of/IN/of it/PRP/it as/IN/as a/DT/a pointer/NN/pointer /,/, because/IN/because using/VBG/using that/IN/that pointer/JJR/pointer you/PRP/you can/MD/can access/VB/access the/DT/the element/NN/element which/WDT/which is/VBZ/is situated/VBN/situated in/IN/in the/DT/the node/NN/node and/CC/and nothing/NN/nothing else/NNP/else. you/PRP/you can/MD/can not/RB/not use/VB/use that/IN/that pointer/JJR/pointer to/TO/to update/VB/update the/DT/the next/JJ/next or/CC/or the/DT/the previous/JJ/previous fields/NNS/fields /,/, or/CC/or you/PRP/you do/VBP/do not/RB/not even/RB/even know/VB/know how/WRB/how the/DT/the node/NN/node is/VBZ/is implemented/NNP/implemented. you/PRP/you do/VBP/do not/RB/not need/VB/need to/TO/to know/VB/know whether/IN/whether the/DT/the implementer/NN/implementer has/VBZ/has used/VBN/used a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list or/CC/or singly/RB/singly linked/VBN/linked list/NN/list or/CC/or a/DT/a circular/JJ/circular list/NNP/list. it/PRP/it is/VBZ/is an/DT/an abstract/NN/abstract data/NNS/data type/NN/type which/WDT/which hides/VBZ/hides all/DT/all the/DT/the details/NNS/details and/CC/and you/PRP/you can/MD/can only/RB/only use/VB/use the/DT/the method/NN/method element/NN/element /:/( /:/) /,/, on/IN/on the/DT/the abstract/NN/abstract data/NNS/data type/NN/type position/NNP/position. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 41/CD/41 /CD/) with/IN/with the/DT/the notion/NN/notion of/IN/of position/NN/position /,/, there/EX/there will/MD/will be/VB/be a/DT/a relative/JJ/relative order/NN/order of/IN/of positions/NNS/positions jus/VBZ/jus as/RB/as in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a linked/VBN/linked list/NNP/list. there/RB/there is/VBZ/is the/DT/the 1st/CD/1st element/NN/element in/IN/in your/PRP$/your linked/VBN/linked list/NN/list /,/, 2nd/CD/2nd element/NN/element and/CC/and the/DT/the position/NN/position is/VBZ/is referring/VBG/referring to/TO/to the/DT/the 1st/CD/1st element/NN/element or/CC/or the/DT/the 1st/CD/1st node/NN/node or/CC/or the/DT/the 2nd/CD/2nd node/NN/node or/CC/or the/DT/the 3rd/JJ/3rd node/NN/node of/IN/of the/DT/the list/NNP/list. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 35/CD/35 /CD/) similarly/RB/similarly 1st/CD/1st position/NN/position /,/, the/DT/the 2nd/JJ/2nd position/NN/position /,/, the/DT/the 3rd/JJ/3rd position/NN/position and/CC/and so/RB/so on/NNP/on. given/VBN/given a/DT/a position/NN/position that/WDT/that /,/, there/EX/there is/VBZ/is the/DT/the notion/NN/notion of/IN/of the/DT/the position/NN/position before/IN/before which/WDT/which refers/NNS/refers to/TO/to the/DT/the node/NN/node before/IN/before that/IN/that position/NN/position and/CC/and a/DT/a position/NN/position after/IN/after that/DT/that position/NNP/position. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 23/CD/23 /CD/) we/PRP/we can/MD/can now/RB/now define/VB/define a/DT/a list/NN/list abstract/NN/abstract datatype/NN/datatype which/WDT/which uses/NNS/uses the/DT/the positions/NNP/positions. what/WP/what would/MD/would this/DT/this abstract/NN/abstract datatype/NN/datatype have/VBP/have ?/./? it/PRP/it would/MD/would have/VB/have generic/JJ/generic methods/NNS/methods like/IN/like size/NN/size /:/( /:/) and/CC/and isempty/NN/isempty /:/( /:/) and/CC/and it/PRP/it could/MD/could have/VB/have query/NN/query method/NN/method /,/, given/VBN/given a/DT/a particular/JJ/particular position/NN/position i/PRP/i can/MD/can have/VB/have a/DT/a method/NN/method which/WDT/which asks/VBZ/asks is/VBZ/is this/DT/this the/DT/the first/JJ/first position/NN/position of/IN/of my/PRP$/my list/NNP/list. if/IN/if it/PRP/it is/VBZ/is this/DT/this will/MD/will say/VB/say yes/NNS/yes and/CC/and otherwise/VB/otherwise say/NN/say no/DT/no and/CC/and whether/IN/whether it/PRP/it is/VBZ/is the/DT/the last/JJ/last position/NN/position of/IN/of the/DT/the list/NNP/list. i/PRP/i can/MD/can have/VB/have excessive/JJ/excessive methods/NNS/methods like/IN/like first/JJ/first /CD/( /CD/) /,/, last/JJ/last /NN/( /:/) /,/, before/IN/before /NNP/( p/NN/p /:/) and/CC/and after/IN/after /CD/( p/NN/p /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 11/CD/11 /CD/) first/JJ/first will/MD/will give/VB/give me/PRP/me the/DT/the first/JJ/first position/NN/position /,/, last/JJ/last would/MD/would give/VB/give me/PRP/me the/DT/the last/JJ/last position/NN/position /,/, before/IN/before /NNP/( p/NN/p /:/) will/MD/will give/VB/give me/PRP/me the/DT/the position/NN/position before/IN/before this/DT/this position/NN/position p/NN/p and/CC/and after/IN/after will/MD/will give/VB/give me/PRP/me after/IN/after this/DT/this position/NN/position p/NNP/p. i/PRP/i can/MD/can have/VB/have update/JJ/update methods/NNS/methods like/IN/like swapelements/NNS/swapelements /VBP/( p/NN/p /,/, q/NN/q /:/) /./. what/WP/what does/VBZ/does this/DT/this do/VB/do ?/./? given/VBN/given a/DT/a positions/NNS/positions p/VBP/p and/CC/and q/NN/q /,/, it/PRP/it swaps/VBZ/swaps the/DT/the contents/NNS/contents of/IN/of these/DT/these positions/NNP/positions. whatever/NN/whatever may/MD/may be/VB/be the/DT/the elements/NNS/elements sitting/VBG/sitting at/IN/at these/DT/these 2/CD/2 positions/NNS/positions it/PRP/it swaps/VBZ/swaps the/DT/the contents/NNP/contents. i/PRP/i can/MD/can replace/VB/replace the/DT/the element/NN/element at/IN/at position/NN/position p/NN/p with/IN/with e/NN/e /:/( replaceelement/NN/replaceelement /:/( p/NN/p /,/, e/NN/e /:/) /:/) and/CC/and similarly/RB/similarly i/PRP/i can/MD/can insert/VB/insert the/DT/the element/NN/element e/NN/e /:/( insertfirst/JJ/insertfirst /NN/( e/NN/e /:/) /:/) at/IN/at the/DT/the very/RB/very first/JJ/first position/NNP/position. i/PRP/i can/MD/can insert/VB/insert the/DT/the element/NN/element e/NN/e /:/( insertlast/NN/insertlast /:/( e/NN/e /:/) /:/) at/IN/at the/DT/the last/JJ/last position/NN/position and/CC/and so/RB/so on/NNP/on. using/VBG/using a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list you/PRP/you can/MD/can actually/RB/actually implement/VB/implement all/DT/all of/IN/of these/DT/these methods/NNS/methods in/IN/in constant/JJ/constant time/NNP/time. the/DT/the list/NN/list abstract/NN/abstract datatype/NN/datatype is/VBZ/is just/RB/just as/IN/as the/DT/the same/JJ/same as/IN/as your/PRP$/your linked/VBN/linked list/NN/list data/NNS/data structure/NN/structure except/IN/except that/DT/that we/PRP/we are/VBP/are getting/VBG/getting an/DT/an abstract/NN/abstract datatype/NN/datatype implementation/NN/implementation of/IN/of it/NNP/it. we/PRP/we are/VBP/are trying/VBG/trying to/TO/to capture/VB/capture all/DT/all of/IN/of those/DT/those methods/NNS/methods that/IN/that you/PRP/you can/MD/can do/VB/do on/IN/on a/DT/a linked/VBN/linked list/NN/list as/IN/as an/DT/an abstract/NN/abstract datatype/NNP/datatype. this/DT/this datatype/NN/datatype can/MD/can be/VB/be implemented/VBN/implemented using/VBG/using a/DT/a double/JJ/double linked/VBN/linked list/NN/list and/CC/and it/PRP/it can/MD/can be/VB/be implemented/VBN/implemented using/VBG/using a/DT/a singly/RB/singly linked/VBN/linked list/NN/list except/IN/except that/DT/that it/PRP/it is/VBZ/is more/RBR/more efficient/JJ/efficient if/IN/if you/PRP/you implement/VBP/implement it/PRP/it using/VBG/using a/DT/a doubly/RB/doubly linked/VBN/linked list/NNP/list. in/IN/in the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list all/DT/all of/IN/of these/DT/these methods/NNS/methods can/MD/can be/VB/be done/VBN/done at/IN/at a/DT/a constant/JJ/constant time/NNP/time. using/NN/using a/DT/a singly/RB/singly linked/VBN/linked list/NN/list some/DT/some of/IN/of these/DT/these methods/NNS/methods might/MD/might take/VB/take linear/JJ/linear time/NN/time in/IN/in the/DT/the worst/JJS/worst case/NNP/case. finally/RB/finally we/PRP/we have/VBP/have the/DT/the notion/NN/notion of/IN/of a/DT/a sequence/NN/sequence abstract/NN/abstract data/NNS/data type/NNP/type. we/PRP/we talked/VBD/talked of/IN/of the/DT/the vector/NN/vector abstract/NN/abstract data/NNS/data type/NN/type where/WRB/where there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of rank/NN/rank associated/VBN/associated with/IN/with each/DT/each element/NNP/element. then/RB/then there/RB/there is/VBZ/is a/DT/a list/NN/list data/NN/data type/NN/type where/WRB/where there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of positions/NNS/positions and/CC/and the/DT/the sequence/NN/sequence abstract/NN/abstract data/NNS/data type/NN/type has/VBZ/has both/DT/both of/IN/of these/NNP/these. it/PRP/it combines/VBZ/combines the/DT/the vector/NN/vector and/CC/and the/DT/the list/NN/list abstract/NN/abstract data/NNS/data type/NN/type and/CC/and it/PRP/it inherits/VBZ/inherits both/DT/both of/IN/of these/DT/these interfaces/NNS/interfaces and/CC/and that/IN/that is/VBZ/is multiple/JJ/multiple inheritance/NNP/inheritance. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 19/CD/19 /CD/) besides/NNS/besides the/DT/the methods/NNS/methods that/WDT/that are/VBP/are listed/VBN/listed for/IN/for vector/NN/vector and/CC/and list/NN/list abstract/NN/abstract data/NNS/data type/NN/type /,/, it/PRP/it has/VBZ/has two/CD/two additional/JJ/additional methods/NNS/methods which/WDT/which helps/NNS/helps you/PRP/you to/TO/to go/VB/go from/IN/from one/CD/one to/TO/to other/NNP/other. given/RB/given a/DT/a particular/JJ/particular rank/NN/rank r/NN/r /,/, the/DT/the method/NN/method atrank/NN/atrank /:/( r/NN/r /:/) will/MD/will return/VB/return me/PRP/me the/DT/the position/NN/position corresponding/VBG/corresponding to/TO/to this/DT/this rank/NNP/rank. given/NN/given a/DT/a position/NN/position p/NN/p the/DT/the method/NN/method rankof/IN/rankof /CD/( p/NN/p /:/) will/MD/will tell/VB/tell me/PRP/me the/DT/the rank/NN/rank corresponding/VBG/corresponding to/TO/to this/DT/this position/NNP/position. you/PRP/you could/MD/could have/VB/have an/DT/an implementation/NN/implementation of/IN/of the/DT/the kind/NN/kind which/WDT/which was/VBD/was given/VBN/given in/IN/in the/DT/the slide/NN/slide for/IN/for a/DT/a sequence/NNP/sequence. in/IN/in the/DT/the above/NN/above slide/NN/slide /,/, given/VBN/given an/DT/an array/NN/array in/IN/in which/WDT/which each/DT/each element/NN/element of/IN/of the/DT/the array/NN/array refers/NNS/refers to/TO/to the/DT/the position/NN/position and/CC/and the/DT/the point/NN/point 2/CD/2 is/VBZ/is same/JJ/same in/IN/in both/DT/both the/DT/the cases/NNP/cases. with/IN/with the/DT/the given/VBN/given particular/JJ/particular location/NN/location /,/, i/PRP/i can/MD/can identify/VB/identify the/DT/the rank/NN/rank which/WDT/which it/PRP/it corresponds/VBZ/corresponds to/TO/to by/IN/by looking/NN/looking at/IN/at the/DT/the element/NNP/element. how/WRB/how is/VBZ/is the/DT/the method/NN/method rankof/IN/rankof /CD/( p/NN/p /:/) implemented/VBN/implemented ?/./? p/NN/p corresponds/NNS/corresponds to/TO/to a/DT/a position/NN/position /,/, a/DT/a position/NN/position here/RB/here is/VBZ/is the/DT/the thing/NN/thing which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the middle/NN/middle of/IN/of the/DT/the diagram/NNP/diagram. given/NN/given a/DT/a particular/JJ/particular position/NN/position and/CC/and how/WRB/how do/VBP/do i/PRP/i know/VB/know the/DT/the rank/NN/rank corresponding/VBG/corresponding to/TO/to that/DT/that position/NNP/position. i/PRP/i just/RB/just look/VBP/look in/IN/in to/TO/to the/DT/the 3rd/JJ/3rd element/NN/element that/WDT/that gives/VBZ/gives me/PRP/me the/DT/the rank/NN/rank corresponding/VBG/corresponding to/TO/to that/DT/that position/NNP/position. given/RB/given a/DT/a particular/JJ/particular rank/NN/rank how/WRB/how do/VBP/do i/PRP/i determine/VB/determine the/DT/the position/NN/position corresponding/VBG/corresponding to/TO/to that/DT/that rank/NNP/rank. suppose/NN/suppose you/PRP/you gave/VBD/gave me/PRP/me rank/VBP/rank 1/CD/1 /,/, when/WRB/when i/PRP/i follow/VBP/follow 1st/JJ/1st reference/NN/reference /,/, 1/CD/1 is/VBZ/is the/DT/the position/NN/position corresponding/VBG/corresponding to/TO/to this/DT/this rank/NNP/rank. at/IN/at that/DT/that position/NN/position there/EX/there is/VBZ/is an/DT/an element/NN/element stored/VBD/stored which/WDT/which is/VBZ/is newyork/NNP/newyork. at/IN/at the/DT/the position/NN/position besides/VBZ/besides the/DT/the element/NN/element /,/, there/EX/there is/VBZ/is something/NN/something else/RB/else stored/VBD/stored which/WDT/which is/VBZ/is kind/VBP/kind of/IN/of provides/NNS/provides cross/IN/cross reference/NNP/reference. at/IN/at each/DT/each of/IN/of these/DT/these positions/NNS/positions i/PRP/i have/VBP/have an/DT/an element/NN/element stored/VBD/stored and/CC/and a/DT/a rank/NN/rank of/IN/of that/DT/that element/NN/element in/IN/in my/PRP$/my sequence/NNP/sequence. suppose/NN/suppose i/PRP/i had/VBD/had to/TO/to insert/VB/insert an/DT/an element/NN/element at/IN/at rank/NN/rank 2/CD/2 /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to create/VB/create new/JJ/new position/NN/position and/CC/and the/DT/the element/NN/element would/MD/would sit/VB/sit in/IN/in that/DT/that position/NN/position and/CC/and 2/CD/2 would/MD/would refer/VB/refer to/TO/to that/DT/that position/NN/position and/CC/and all/DT/all of/IN/of these/DT/these will/MD/will have/VB/have to/TO/to move/VB/move to/TO/to one/CD/one step/VB/step right/NNP/right. not/RB/not only/RB/only have/VBP/have to/TO/to move/VB/move to/TO/to the/DT/the right/NN/right /,/, we/PRP/we have/VBP/have to/TO/to change/VB/change the/DT/the ranks/NNS/ranks and/CC/and update/VB/update the/DT/the position/NNP/position. again/RB/again inserting/VBG/inserting at/IN/at the/DT/the particular/JJ/particular rank/NN/rank will/MD/will take/VB/take order/NN/order n/NN/n time/NN/time of/IN/of the/DT/the worst/JJS/worst case/NN/case and/CC/and similarly/RB/similarly deleting/VBG/deleting an/DT/an element/NNP/element. if/IN/if i/PRP/i had/VBD/had given/VBN/given particular/JJ/particular position/NN/position and/CC/and if/IN/if i/PRP/i wanted/VBD/wanted to/TO/to delete/VB/delete the/DT/the element/NN/element at/IN/at that/DT/that position/NNP/position. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 07/CD/07 /CD/) how/WRB/how do/VBP/do we/PRP/we delete/VB/delete an/DT/an element/NN/element at/IN/at a/DT/a certain/JJ/certain position/NN/position in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list ?/./? you/PRP/you need/VBP/need to/TO/to think/VB/think about/IN/about this/NNP/this. so/RB/so leave/VBP/leave it/PRP/it as/IN/as an/DT/an exercise/NNP/exercise. this/DT/this is/VBZ/is a/DT/a comparison/NN/comparison of/IN/of sequence/NN/sequence operations/NNS/operations /,/, you/PRP/you can/MD/can implement/VB/implement a/DT/a sequence/NN/sequence using/VBG/using an/DT/an array/NN/array in/IN/in the/DT/the picture/NN/picture i/PRP/i have/VBP/have shown/VBN/shown you/PRP/you previously/RB/previously and/CC/and you/PRP/you can/MD/can also/RB/also implement/VB/implement a/DT/a sequence/NN/sequence using/VBG/using a/DT/a doubly/RB/doubly linked/VBN/linked list/NNP/list. this/DT/this would/MD/would be/VB/be the/DT/the worst/JJS/worst case/NN/case of/IN/of running/VBG/running time/NNP/time. you/PRP/you can/MD/can see/VB/see in/IN/in the/DT/the case/NN/case of/IN/of an/DT/an array/NN/array implementation/NN/implementation /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to insert/VB/insert an/DT/an element/NN/element at/IN/at a/DT/a certain/JJ/certain rank/NN/rank or/CC/or you/PRP/you want/VBP/want to/TO/to remove/VB/remove an/DT/an element/NN/element at/IN/at a/DT/a certain/JJ/certain rank/NNP/rank. it/PRP/it will/MD/will take/VB/take order/NN/order n/NN/n time/NNP/time. if/IN/if you/PRP/you want/VBP/want to/TO/to insert/VB/insert after/IN/after or/CC/or insert/NN/insert before/IN/before a/DT/a certain/JJ/certain position/NN/position /,/, this/DT/this will/MD/will also/RB/also take/VB/take order/NN/order n/NN/n time/NN/time and/CC/and if/IN/if you/PRP/you need/VBP/need to/TO/to remove/VB/remove an/DT/an element/NN/element at/IN/at a/DT/a certain/JJ/certain position/NN/position /,/, this/DT/this will/MD/will also/RB/also take/VB/take order/NN/order n/NN/n time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 57/CD/57 /:/: 51/CD/51 /CD/) not/RB/not so/RB/so in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list because/IN/because then/RB/then you/PRP/you can/MD/can just/RB/just zap/VB/zap out/RP/out the/DT/the element/NN/element from/IN/from there/NNP/there. you/PRP/you can/MD/can just/RB/just update/VB/update the/DT/the pointers/NNS/pointers before/IN/before and/CC/and after/IN/after and/CC/and do/VBP/do these/DT/these in/IN/in constant/JJ/constant time/NNP/time. but/CC/but then/RB/then what/WP/what becomes/VBZ/becomes more/JJR/more expensive/JJ/expensive is/VBZ/is /,/, because/IN/because in/IN/in a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list you/PRP/you can/MD/can not/RB/not figure/VB/figure out/RP/out the/DT/the rank/NN/rank of/IN/of an/DT/an element/NNP/element. i/PRP/i have/VBP/have to/TO/to go/VB/go to/TO/to the/DT/the entire/JJ/entire list/NN/list to/TO/to figure/VB/figure out/RP/out the/DT/the rank/NNP/rank. any/DT/any rank/NN/rank based/VBN/based operation/NN/operation will/MD/will take/VB/take order/NN/order n/NN/n time/NN/time /,/, whether/IN/whether you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the rank/NN/rank of/IN/of n/NN/n element/NN/element or/CC/or you/PRP/you want/VBP/want to/TO/to find/VB/find out/RP/out the/DT/the element/NN/element at/IN/at a/DT/a particular/JJ/particular rank/NN/rank /,/, find/VBP/find out/RP/out the/DT/the position/NN/position corresponding/VBG/corresponding to/TO/to certain/JJ/certain rank/NN/rank /,/, all/DT/all of/IN/of these/DT/these would/MD/would take/VB/take order/NN/order n/NN/n time/NNP/time. we/PRP/we learnt/VBP/learnt about/IN/about queues/NNS/queues /,/, double/JJ/double ended/VBD/ended queues/NNS/queues and/CC/and also/RB/also how/WRB/how to/TO/to use/VB/use linked/VBN/linked list/NN/list and/CC/and doubly/RB/doubly linked/VBN/linked list/NN/list to/TO/to implement/VB/implement the/DT/the these/DT/these data/NNS/data types/NNP/types. then/RB/then we/PRP/we also/RB/also looked/VBD/looked at/IN/at the/DT/the vector/NN/vector abstract/NN/abstract data/NNS/data type/NN/type /,/, the/DT/the list/NN/list abstract/NN/abstract data/NNS/data type/NN/type which/WDT/which is/VBZ/is essentially/RB/essentially a/DT/a concretization/NN/concretization of/IN/of the/DT/the linked/VBN/linked list/NN/list data/NNS/data structure/NN/structure and/CC/and we/PRP/we also/RB/also looked/VBD/looked at/IN/at sequence/NN/sequence data/NNS/data types/NNS/types which/WDT/which is/VBZ/is basically/RB/basically inheriting/VBG/inheriting all/DT/all the/DT/the methods/NNS/methods of/IN/of your/PRP$/your list/NN/list data/NNS/data type/NN/type and/CC/and your/PRP$/your vector/NN/vector data/NNS/data type/NNP/type. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 4/CD/4 dictionaries/NNS/dictionaries we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the dictionary/JJ/dictionary abstract/NN/abstract data/NNS/data type/NNP/type. we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to see/VB/see how/WRB/how binary/JJ/binary search/NN/search is/VBZ/is done/VBN/done /,/, what/WP/what are/VBP/are all/DT/all the/DT/the analysis/NN/analysis for/IN/for binary/JJ/binary search/NN/search and/CC/and then/RB/then we/PRP/we will/MD/will go/VB/go on/IN/on to/TO/to hashing/NN/hashing /,/, hash/NN/hash table/NN/table /,/, how/WRB/how hashing/VBG/hashing is/VBZ/is done/VBN/done /,/, see/VBP/see the/DT/the collision/NN/collision resolution/NN/resolution techniques/NNS/techniques and/CC/and then/RB/then in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we will/MD/will follow/VB/follow up/RP/up with/IN/with more/JJR/more hashing/VBG/hashing techniques/NNP/techniques. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 17/CD/17 /CD/) a/DT/a dictionary/JJ/dictionary is/VBZ/is an/DT/an abstract/NN/abstract data/NNS/data type/NN/type that/IN/that stores/NNS/stores elements/NNS/elements which/WDT/which can/MD/can be/VB/be located/VBN/located very/RB/very quickly/NNP/quickly. one/CD/one example/NN/example that/WDT/that we/PRP/we can/MD/can have/VB/have for/IN/for a/DT/a dictionary/JJ/dictionary is/VBZ/is to/TO/to store/VB/store bank/NN/bank accounts/NNP/accounts. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 37/CD/37 /CD/) what/WP/what is/VBZ/is the/DT/the notion/NN/notion of/IN/of the/DT/the key/JJ/key /,/, when/WRB/when you/PRP/you store/VBP/store bank/NN/bank accounts/NNS/accounts ?/./? the/DT/the notion/NN/notion of/IN/of a/DT/a key/JJ/key is/VBZ/is your/PRP$/your account/NN/account number/NN/number /,/, bank/NN/bank account/NN/account has/VBZ/has lots/NNS/lots of/IN/of information/NN/information associated/VBN/associated with/IN/with it/PRP/it /,/, but/CC/but you/PRP/you are/VBP/are going/VBG/going to/TO/to access/NN/access the/DT/the bank/NN/bank account/NN/account or/CC/or data/NNS/data associated/VBN/associated with/IN/with that/DT/that account/NN/account by/IN/by using/VBG/using the/DT/the account/NN/account numbers/NNP/numbers. thus/RB/thus the/DT/the account/NN/account number/NN/number becomes/VBZ/becomes the/DT/the key/NNP/key. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 53/CD/53 /CD/) as/IN/as i/PRP/i said/VBD/said account/NN/account stores/NNS/stores wealth/NN/wealth of/IN/of information/NN/information /,/, it/PRP/it could/MD/could be/VB/be your/PRP$/your current/JJ/current balance/NN/balance /,/, it/PRP/it could/MD/could be/VB/be the/DT/the name/NN/name and/CC/and address/NN/address of/IN/of the/DT/the account/NN/account holder/NN/holder and/CC/and it/PRP/it could/MD/could be/VB/be the/DT/the list/NN/list of/IN/of transactions/NNS/transactions done/VBN/done in/IN/in the/DT/the last/JJ/last few/JJ/few days/NNS/days and/CC/and so/RB/so on/NNP/on. when/WRB/when you/PRP/you have/VBP/have to/TO/to access/NN/access any/DT/any of/IN/of the/DT/the above/JJ/above information/NN/information you/PRP/you need/VBP/need the/DT/the notion/NN/notion of/IN/of the/DT/the key/NNP/key. a/DT/a dictionary/JJ/dictionary is/VBZ/is something/NN/something that/IN/that stores/NNS/stores the/DT/the elements/NNP/elements. when/WRB/when we/PRP/we talk/VBP/talk of/IN/of an/DT/an element/NN/element we/PRP/we will/MD/will mean/VB/mean all/DT/all of/IN/of the/DT/the above/JJ/above additional/JJ/additional information/NN/information which/WDT/which is/VBZ/is also/RB/also given/VBN/given in/IN/in the/DT/the slide/NN/slide below/NNP/below. when/WRB/when we/PRP/we talk/VBP/talk of/IN/of key/JJ/key /,/, the/DT/the key/JJ/key would/MD/would be/VB/be the/DT/the account/NN/account number/NN/number that/WDT/that helps/VBZ/helps us/PRP/us to/TO/to access/NN/access the/DT/the particular/JJ/particular information/NNP/information. any/DT/any application/NN/application that/IN/that wishes/NNS/wishes to/TO/to do/VB/do any/DT/any kind/NN/kind of/IN/of operation/NN/operation on/IN/on an/DT/an account/NN/account /,/, will/MD/will have/VB/have to/TO/to provide/VB/provide the/DT/the account/NN/account number/NN/number as/IN/as key/NNP/key. the/DT/the process/NN/process can/MD/can not/RB/not be/VB/be continued/VBN/continued without/IN/without a/DT/a key/NNP/key. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 2/CD/2 /:/: 14/CD/14 /CD/) the/DT/the dictionary/JJ/dictionary is/VBZ/is basically/RB/basically an/DT/an abstract/NN/abstract model/NN/model of/IN/of a/DT/a database/NNP/database. it/PRP/it is/VBZ/is going/VBG/going to/TO/to store/VB/store the/DT/the key-element/JJ/key-element pairs/NNP/pairs. the/DT/the key/JJ/key could/MD/could be/VB/be an/DT/an account/NN/account number/NN/number or/CC/or it/PRP/it need/VBP/need not/RB/not be/VB/be an/DT/an account/NN/account number/NN/number in/IN/in all/DT/all the/DT/the case/NNP/case. suppose/NN/suppose if/IN/if i/PRP/i have/VBP/have the/DT/the student/NN/student records/NNS/records then/RB/then what/WP/what would/MD/would be/VB/be the/DT/the most/JJS/most natural/JJ/natural notion/NN/notion of/IN/of a/DT/a key/NNP/key. your/PRP$/your entry/NN/entry number/NN/number which/WDT/which is/VBZ/is not/RB/not an/DT/an integer/NN/integer /,/, you/PRP/you may/MD/may also/RB/also have/VB/have characters/NNS/characters and/CC/and so/RB/so on/NNP/on. anything/NN/anything uniquely/RB/uniquely identifies/VBZ/identifies particular/JJ/particular student/NN/student or/CC/or particular/JJ/particular account/NN/account becomes/VBZ/becomes the/DT/the key/NNP/key. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 03/CD/03 /CD/) one/CD/one of/IN/of the/DT/the main/JJ/main operations/NNS/operations that/WDT/that is/VBZ/is supported/VBN/supported by/IN/by a/DT/a dictionary/JJ/dictionary is/VBZ/is searching/VBG/searching by/IN/by key/NNP/key. what/WP/what are/VBP/are the/DT/the kinds/NNS/kinds of/IN/of method/NN/method that/IN/that we/PRP/we have/VBP/have in/IN/in a/DT/a dictionary/JJ/dictionary abstract/NN/abstract data/NNS/data type/NN/type ?/./? the/DT/the standard/JJ/standard container/NN/container methods/NNS/methods that/WDT/that we/PRP/we have/VBP/have seen/VBN/seen for/IN/for queues/NNS/queues and/CC/and stacks/NNS/stacks and/CC/and so/RB/so on/NNP/on. one/CD/one is/VBZ/is size/NN/size /:/( /:/) which/WDT/which tell/NN/tell us/PRP/us how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are there/RB/there in/IN/in the/DT/the dictionary/JJ/dictionary /,/, isempty/NN/isempty /:/( /:/) tells/NNS/tells whether/IN/whether the/DT/the dictionary/JJ/dictionary is/VBZ/is empty/JJ/empty or/CC/or not/RB/not and/CC/and elements/NNS/elements /:/( /:/) which/WDT/which returns/NNS/returns all/DT/all the/DT/the elements/NNS/elements in/IN/in the/DT/the dictionary/NNP/dictionary. then/RB/then we/PRP/we will/MD/will have/VB/have query/NN/query methods/NNP/methods. given/NN/given a/DT/a particular/JJ/particular key/JJ/key find/NN/find the/DT/the element/NN/element corresponding/VBG/corresponding to/TO/to this/DT/this key/JJ/key /NN/( findelem/NN/findelem /:/( k/NN/k /:/) /:/) /./. in/IN/in settings/NNS/settings you/PRP/you might/MD/might have/VB/have the/DT/the same/JJ/same key/NN/key associated/VBN/associated with/IN/with many/JJ/many different/JJ/different elements/NNS/elements and/CC/and one/CD/one could/MD/could have/VB/have such/JJ/such a/DT/a kind/NN/kind of/IN/of settings/NNP/settings. we/PRP/we will/MD/will see/VB/see example/NN/example of/IN/of this/DT/this kind/NN/kind later/NNP/later. then/RB/then given/VBN/given a/DT/a particular/JJ/particular key/JJ/key /,/, you/PRP/you want/VBP/want to/TO/to return/VB/return all/DT/all elements/NNS/elements who/WP/who have/VBP/have that/IN/that key/NNP/key. you/PRP/you could/MD/could have/VB/have update/JJ/update methods/NNP/methods. given/NN/given i/PRP/i might/MD/might want/VB/want to/TO/to insert/VB/insert an/DT/an element/NN/element e/NN/e which/WDT/which has/VBZ/has a/DT/a key/JJ/key k/NN/k /,/, to/TO/to insert/VB/insert that/IN/that in/IN/in to/TO/to my/PRP$/my dictionary/NN/dictionary /,/, to/TO/to remove/VB/remove an/DT/an element/NN/element with/IN/with a/DT/a certain/JJ/certain key/JJ/key and/CC/and to/TO/to remove/VB/remove all/DT/all elements/NNS/elements which/WDT/which have/VBP/have a/DT/a key/JJ/key k/NNP/k. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 33/CD/33 /CD/) just/RB/just you/PRP/you would/MD/would think/VB/think it/PRP/it as/IN/as a/DT/a standard/JJ/standard thing/NN/thing /,/, but/CC/but now/RB/now you/PRP/you should/MD/should remember/VB/remember the/DT/the notion/NN/notion of/IN/of the/DT/the key/JJ/key and/CC/and that/IN/that is/VBZ/is crucial/JJ/crucial for/IN/for help/NN/help in/IN/in searching/NNP/searching. without/IN/without the/DT/the key/JJ/key it/PRP/it will/MD/will be/VB/be very/RB/very difficult/JJ/difficult for/IN/for us/PRP/us to/TO/to search/VB/search through/IN/through the/DT/the database/NNP/database. we/PRP/we will/MD/will have/VB/have a/DT/a special/JJ/special element/NN/element nil/NN/nil /,/, which/WDT/which will/MD/will be/VB/be returned/VBN/returned by/IN/by an/DT/an unsuccessful/JJ/unsuccessful search/NNP/search. it/PRP/it means/VBZ/means that/IN/that if/IN/if i/PRP/i am/VBP/am searching/VBG/searching for/IN/for a/DT/a particular/JJ/particular key/JJ/key /,/, there/EX/there is/VBZ/is no/DT/no such/JJ/such element/NN/element with/IN/with that/DT/that key/JJ/key in/IN/in my/PRP$/my dictionary/NN/dictionary and/CC/and then/RB/then my/PRP$/my procedure/NN/procedure will/MD/will just/RB/just return/VB/return a/DT/a nill/NNP/nill. this/DT/this is/VBZ/is some/DT/some special/JJ/special element/NNP/element. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 5/CD/5 /:/: 02/CD/02 /CD/) one/CD/one thing/NN/thing that/WDT/that we/PRP/we will/MD/will keep/VB/keep in/IN/in mind/NN/mind is/VBZ/is that/IN/that we/PRP/we only/RB/only require/VBP/require comparison/NN/comparison of/IN/of keys/NNS/keys for/IN/for equality/NNP/equality. given/VBN/given two/CD/two particular/JJ/particular keys/NNS/keys /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to say/VB/say one/CD/one key/JJ/key is/VBZ/is less/RBR/less than/IN/than the/DT/the other/JJ/other and/CC/and one/CD/one key/JJ/key is/VBZ/is more/RBR/more than/IN/than the/DT/the other/NNP/other. this/DT/this is/VBZ/is not/RB/not really/RB/really required/VBN/required /,/, because/IN/because all/DT/all you/PRP/you doing/VBG/doing is/VBZ/is searching/VBG/searching for/IN/for a/DT/a certain/JJ/certain key/NNP/key. all/DT/all that/DT/that is/VBZ/is required/VBN/required is/VBZ/is /,/, given/VBN/given two/CD/two keys/NNS/keys you/PRP/you want/VBP/want to/TO/to say/VB/say whether/IN/whether they/PRP/they are/VBP/are the/DT/the same/JJ/same or/CC/or not/NNP/not. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 5/CD/5 /:/: 31/CD/31 /CD/) for/IN/for instance/NN/instance again/RB/again for/IN/for student/NN/student record/NN/record /,/, i/PRP/i could/MD/could have/VB/have name/NN/name as/IN/as your/PRP$/your key/NN/key in/IN/in that/DT/that case/NN/case you/PRP/you know/VBP/know there/RB/there is/VBZ/is really/RB/really no/DT/no notion/NN/notion of/IN/of taking/VBG/taking two/CD/two names/NNS/names and/CC/and saying/VBG/saying one/CD/one name/NN/name is/VBZ/is smaller/JJR/smaller or/CC/or larger/JJR/larger than/IN/than the/DT/the other/NNP/other. only/RB/only operation/NN/operation we/PRP/we require/VBP/require is/VBZ/is comparing/VBG/comparing keys/NNS/keys for/IN/for equality/NNP/equality. we/PRP/we do/VBP/do not/RB/not need/VB/need any/DT/any order/NN/order on/IN/on our/PRP$/our keys/NNP/keys. dictionary/NN/dictionary is/VBZ/is the/DT/the abstract/NN/abstract data/NNS/data type/NN/type then/RB/then in/IN/in the/DT/the next/JJ/next few/JJ/few lectures/NNS/lectures we/PRP/we will/MD/will see/VB/see how/WRB/how this/DT/this particular/JJ/particular abstract/NN/abstract data/NNS/data type/NN/type can/MD/can be/VB/be implemented/NNP/implemented. we/PRP/we are/VBP/are actually/RB/actually going/VBG/going to/TO/to see/VB/see many/JJ/many different/JJ/different ways/NNS/ways of/IN/of implementing/VBG/implementing this/DT/this abstract/NN/abstract data/NNS/data type/NNP/type. you/PRP/you already/RB/already have/VBP/have seen/VBN/seen some/DT/some ways/NNS/ways of/IN/of implementing/VBG/implementing this/DT/this abstract/NN/abstract data/NNS/data type/NNP/type. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 6/CD/6 /:/: 36/CD/36 /CD/) for/IN/for instance/NN/instance you/PRP/you could/MD/could use/VB/use an/DT/an array/NN/array or/CC/or a/DT/a linked/JJ/linked list/NN/list to/TO/to implement/VB/implement a/DT/a dictionary/NNP/dictionary. suppose/NN/suppose if/IN/if i/PRP/i had/VBD/had student/NN/student records/NNS/records /,/, how/WRB/how would/MD/would you/PRP/you use/VB/use a/DT/a linked/VBN/linked list/NN/list to/TO/to implement/VB/implement this/DT/this dictionary/JJ/dictionary ?/./? every/DT/every node/NN/node would/MD/would have/VB/have the/DT/the key/JJ/key which/WDT/which is/VBZ/is the/DT/the entry/NN/entry number/NN/number and/CC/and all/DT/all the/DT/the data/NNS/data associated/VBN/associated with/IN/with that/DT/that particular/JJ/particular entry/NN/entry number/NNP/number. it/PRP/it is/VBZ/is a/DT/a very/RB/very inefficient/JJ/inefficient but/CC/but it/PRP/it is/VBZ/is the/DT/the way/NN/way of/IN/of doing/VBG/doing things/NNP/things. there/RB/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of a/DT/a predecessor/NN/predecessor or/CC/or successor/NNP/successor. if/IN/if we/PRP/we were/VBD/were using/VBG/using a/DT/a linked/JJ/linked list/NN/list how/WRB/how would/MD/would we/VB/we organize/NN/organize it/PRP/it ?/./? that/IN/that is/VBZ/is up/RP/up to/TO/to you/PRP/you /,/, you/PRP/you could/MD/could connect/VB/connect them/PRP/them completely/RB/completely arbitrary/JJ/arbitrary manner/NNP/manner. the/DT/the nodes/NNS/nodes could/MD/could be/VB/be in/IN/in completely/RB/completely arbitrary/JJ/arbitrary manner/NN/manner or/CC/or you/PRP/you could/MD/could might/MD/might want/VB/want to/TO/to organize/VB/organize them/PRP/them some/DT/some way/NN/way but/CC/but you/PRP/you could/MD/could just/RB/just throw/VB/throw them/PRP/them arbitrary/JJ/arbitrary in/IN/in to/TO/to the/DT/the linked/VBN/linked list/NNP/list. that/IN/that is/VBZ/is the/DT/the implementation/NN/implementation of/IN/of the/DT/the linked/VBN/linked list/NN/list and/CC/and it/PRP/it is/VBZ/is not/RB/not very/RB/very efficient/NNP/efficient. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see the/DT/the hash/NN/hash table/NN/table and/CC/and in/IN/in later/JJ/later class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at binary/JJ/binary tree/NN/tree /,/, red/VBD/red or/CC/or black/JJ/black trees/NNS/trees /,/, avl/NN/avl trees/NNS/trees /,/, b-trees/NNP/b-trees. these/DT/these are/VBP/are all/DT/all the/DT/the mechanisms/NNS/mechanisms of/IN/of data/NNS/data structures/NNS/structures to/TO/to implement/VB/implement this/DT/this dictionary/JJ/dictionary abstract/NN/abstract data/NNS/data type/NN/type which/WDT/which is/VBZ/is a/DT/a very/RB/very important/JJ/important data/NNS/data type/NNP/type. we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be spending/NN/spending quite/RB/quite some/DT/some time/NN/time on/IN/on this/DT/this particular/JJ/particular data/NNS/data type/NN/type in/IN/in these/DT/these lectures/NNP/lectures. in/IN/in java/NN/java you/PRP/you have/VB/have an/DT/an abstract/NN/abstract class/NN/class called/VBN/called java.util.dictionary/JJ/java.util.dictionary which/WDT/which lays/NNS/lays out/IN/out the/DT/the specification/NN/specification also/RB/also an/DT/an interface/NN/interface called/VBN/called java.util.map/NNP/java.util.map. before/IN/before you/PRP/you get/VBP/get more/JJR/more into/IN/into dictionary/JJ/dictionary you/PRP/you have/VBP/have to/TO/to understand/VB/understand about/IN/about the/DT/the abstract/NN/abstract data/NNS/data type/NNP/type. let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the problem/NN/problem of/IN/of searching/NNP/searching. this/DT/this is/VBZ/is the/DT/the small/JJ/small aside/NN/aside but/CC/but we/PRP/we will/MD/will see/VB/see why/WRB/why i/PRP/i am/VBP/am making/VBG/making this/DT/this aside/NN/aside and/CC/and how/WRB/how it/PRP/it will/MD/will end/VB/end up/RP/up to/TO/to the/DT/the subsequent/JJ/subsequent discussions/NNP/discussions. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8/CD/8 /:/: 23/CD/23 /CD/) the/DT/the problem/NN/problem of/IN/of searching/VBG/searching is/VBZ/is if/IN/if you/PRP/you are/VBP/are given/VBN/given a/DT/a sequence/NN/sequence of/IN/of numbers/NNS/numbers lets/NNS/lets say/VBP/say these/DT/these are/VBP/are your/PRP$/your keys/NNS/keys in/IN/in the/DT/the database/NNP/database. i/PRP/i give/VBP/give you/PRP/you a/DT/a single/JJ/single number/NN/number which/WDT/which is/VBZ/is my/PRP$/my query/NNP/query. for/IN/for example/NN/example i/PRP/i could/MD/could have/VB/have 2/CD/2 /,/, 4/CD/4 /,/, 5,10,7/CD/5,10,7 are/VBP/are the/DT/the keys/NNS/keys in/IN/in my/PRP$/my databases/NNS/databases and/CC/and i/PRP/i query/VBP/query 5/CD/5. what/WP/what do/VBP/do you/PRP/you have/VB/have to/TO/to return/VB/return ?/./? you/PRP/you have/VBP/have to/TO/to return/VB/return the/DT/the position/NN/position of/IN/of the/DT/the key/JJ/key 5/CD/5 in/IN/in the/DT/the database/NN/database where/WRB/where is/VBZ/is it/PRP/it sitting/NNP/sitting. index/NN/index of/IN/of the/DT/the found/NN/found number/NN/number or/CC/or nil/NNP/nil. so/RB/so 5/CD/5 is/VBZ/is sitting/VBG/sitting at/IN/at position/NN/position 2/CD/2 and/CC/and you/PRP/you return/VBP/return 2/CD/2 /,/, while/IN/while 9/CD/9 does/VBZ/does not/RB/not appear/VB/appear anywhere/RB/anywhere and/CC/and hence/NN/hence return/NN/return nil/NNP/nil. this/DT/this is/VBZ/is the/DT/the problem/NN/problem and/CC/and we/PRP/we call/VBP/call it/PRP/it as/IN/as searching/NNP/searching. let/NN/let us/PRP/us see/VBP/see how/WRB/how we/PRP/we can/MD/can do/VB/do that/NNP/that. you/PRP/you are/VBP/are going/VBG/going to/TO/to see/VB/see a/DT/a technique/NN/technique called/VBN/called binary/JJ/binary search/NNP/search. i/PRP/i think/VBP/think all/DT/all of/IN/of you/PRP/you have/VBP/have seen/VBN/seen this/DT/this before/NN/before but/CC/but again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to recall/VB/recall the/DT/the technique/NN/technique and/CC/and do/VBP/do an/DT/an analysis/NN/analysis of/IN/of it/NNP/it. the/DT/the key/JJ/key idea/NN/idea behind/IN/behind your/PRP$/your binary/JJ/binary search/NN/search is/VBZ/is divide/JJ/divide and/CC/and conquer/NNP/conquer. this/DT/this is/VBZ/is a/DT/a design/NN/design technique/NN/technique that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see in/IN/in future/JJ/future classes/NNS/classes also/RB/also and/CC/and applied/VBD/applied to/TO/to different/JJ/different problems/NNP/problems. in/IN/in divide/NN/divide and/CC/and search/NN/search we/PRP/we really/RB/really narrow/VBP/narrow down/RB/down the/DT/the range/NN/range of/IN/of elements/NNS/elements in/IN/in which/WDT/which we/PRP/we are/VBP/are searching/VBG/searching for/IN/for the/DT/the query/NN/query that/IN/that is/VBZ/is the/DT/the key/NNP/key. let/NN/let me/PRP/me take/VBP/take you/PRP/you through/IN/through an/DT/an example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 14/CD/14 /CD/) suppose/NN/suppose the/DT/the elements/NNS/elements given/VBN/given in/IN/in the/DT/the slide/NN/slide are/VBP/are sitting/VBG/sitting in/IN/in an/DT/an array/NN/array and/CC/and these/DT/these elements/NNS/elements have/VBP/have to/TO/to be/VB/be in/IN/in a/DT/a sorted/VBN/sorted order/NN/order /,/, increasing/VBG/increasing or/CC/or decreasing/VBG/decreasing for/IN/for binary/JJ/binary search/NN/search to/TO/to work/NNP/work. suppose/NN/suppose i/PRP/i am/VBP/am searching/VBG/searching for/IN/for an/DT/an element/NN/element 22/CD/22. what/WP/what do/VBP/do i/PRP/i do/VBP/do in/IN/in binary/JJ/binary search/NN/search ?/./? i/PRP/i will/MD/will go/VB/go and/CC/and look/VB/look at/IN/at the/DT/the middle/NN/middle element/NN/element /,/, in/IN/in this/DT/this case/NN/case it/PRP/it is/VBZ/is the/DT/the element/NN/element 14/CD/14. i/PRP/i will/MD/will compare/VB/compare 14/CD/14 and/CC/and 22/CD/22. as/IN/as 22/CD/22 is/VBZ/is larger/JJR/larger than/IN/than 14/CD/14 that/WDT/that means/VBZ/means if/IN/if that/IN/that 22/CD/22 lies/NNS/lies in/IN/in this/DT/this databases/NNS/databases it/PRP/it would/MD/would lye/VB/lye to/TO/to the/DT/the right/NN/right of/IN/of 14/CD/14 /,/, because/IN/because these/DT/these set/NN/set of/IN/of elements/NNS/elements are/VBP/are in/IN/in increasing/VBG/increasing order/NNP/order. this/DT/this means/VBZ/means that/IN/that the/DT/the element/NN/element 22/CD/22 has/VBZ/has to/TO/to lie/VB/lie between/IN/between 14/CD/14 and/CC/and 37/CD/37. we/PRP/we use/VBP/use these/DT/these 2/CD/2 variables/NNS/variables low/JJ/low and/CC/and high/JJ/high to/TO/to indicate/VB/indicate the/DT/the part/NN/part of/IN/of the/DT/the array/NN/array in/IN/in which/WDT/which we/PRP/we have/VBP/have to/TO/to search/VB/search for/IN/for our/PRP$/our element/NNP/element. initially/RB/initially we/PRP/we have/VBP/have to/TO/to search/VB/search for/IN/for the/DT/the element/NN/element in/IN/in this/DT/this entire/JJ/entire array/NN/array but/CC/but after/IN/after looking/VBG/looking at/IN/at 14/CD/14 we/PRP/we have/VBP/have figured/VBN/figured out/RP/out that/IN/that we/PRP/we should/MD/should search/VB/search for/IN/for the/DT/the element/NN/element only/RB/only after/IN/after 14/CD/14 in/IN/in the/DT/the 2nd/JJ/2nd part/NN/part of/IN/of the/DT/the array/NNP/array. once/RB/once again/RB/again we/PRP/we have/VBP/have to/TO/to repeat/VB/repeat the/DT/the same/JJ/same thing/NN/thing that/WDT/that is/VBZ/is go/VBP/go to/TO/to the/DT/the middle/NN/middle element/NN/element /,/, compare/NN/compare 22/CD/22 with/IN/with this/DT/this middle/NN/middle element/NNP/element. as/IN/as 22/CD/22 is/VBZ/is less/JJR/less than/IN/than the/DT/the middle/NN/middle element/NN/element which/WDT/which means/VBZ/means the/DT/the 22/CD/22 has/VBZ/has to/TO/to be/VB/be to/TO/to the/DT/the left/NN/left of/IN/of 25/CD/25. this/DT/this means/VBZ/means we/PRP/we are/VBP/are searching/VBG/searching for/IN/for 22/CD/22 between/IN/between 17/CD/17 and/CC/and 22/CD/22 which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the 3rd/JJ/3rd part/NN/part of/IN/of the/DT/the diagram/NN/diagram in/IN/in the/DT/the above/NN/above slide/NNP/slide. once/RB/once again/RB/again we/PRP/we go/VBP/go to/TO/to the/DT/the middle/NN/middle element/NN/element /,/, we/PRP/we compare/VBP/compare the/DT/the middle/NN/middle element/NN/element 19/CD/19 with/IN/with 22/CD/22. 22/CD/22 is/VBZ/is larger/JJR/larger and/CC/and if/IN/if 22/CD/22 is/VBZ/is their/PRP$/their /,/, then/RB/then it/PRP/it has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the particular/JJ/particular location/NN/location and/CC/and it/PRP/it is/VBZ/is their/NNP/their. hence/NN/hence we/PRP/we can/MD/can say/VB/say that/IN/that 22/CD/22 is/VBZ/is at/IN/at the/DT/the location/NN/location which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide and/CC/and return/NN/return this/DT/this information/NNP/information. you/PRP/you all/DT/all have/VBP/have seen/VBN/seen binary/JJ/binary search/NN/search before/IN/before /,/, this/DT/this is/VBZ/is nothing/NN/nothing new/JJ/new perhaps/NNP/perhaps. i/PRP/i am/VBP/am going/VBG/going to/TO/to write/VB/write down/RP/down a/DT/a recursive/JJ/recursive procedure/NN/procedure to/TO/to do/VB/do binary/JJ/binary search/NNP/search. the/DT/the procedure/NN/procedure given/VBN/given below/IN/below in/IN/in the/DT/the slide/NN/slide is/VBZ/is just/RB/just a/DT/a pseudo/NN/pseudo code/NN/code and/CC/and all/DT/all of/IN/of you/PRP/you can/MD/can read/VB/read and/CC/and understand/VB/understand this/DT/this quickly/NNP/quickly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 15/CD/15 /CD/) once/RB/once again/RB/again we/PRP/we had/VBD/had the/DT/the notion/NN/notion of/IN/of low/JJ/low and/CC/and high/NNP/high. low/JJ/low was/VBD/was the/DT/the lower/JJR/lower end/NN/end of/IN/of the/DT/the range/NN/range and/CC/and high/JJ/high was/VBD/was the/DT/the higher/JJR/higher end/NN/end of/IN/of the/DT/the range/NN/range which/WDT/which we/PRP/we have/VBP/have to/TO/to search/NNP/search. in/IN/in the/DT/the procedure/NN/procedure call/NN/call a/DT/a is/VBZ/is the/DT/the array/NN/array and/CC/and k/NN/k is/VBZ/is the/DT/the element/NN/element or/CC/or the/DT/the key/JJ/key which/WDT/which you/PRP/you are/VBP/are searching/VBG/searching for/IN/for /,/, low/JJ/low is/VBZ/is for/IN/for lower/JJR/lower end/NN/end and/CC/and high/JJ/high is/VBZ/is for/IN/for higher/JJR/higher end/NNP/end. if/IN/if low/JJ/low is/VBZ/is more/RBR/more than/IN/than high/JJ/high then/RB/then basically/RB/basically that/IN/that means/NNS/means you/PRP/you are/VBP/are invoking/VBG/invoking something/NN/something wrong/NNP/wrong. you/PRP/you just/RB/just return/VBP/return a/DT/a null/NN/null that/WDT/that is/VBZ/is the/DT/the key/JJ/key is/VBZ/is not/RB/not there/NNP/there. else/RB/else you/PRP/you go/VBP/go to/TO/to the/DT/the middle/NN/middle element/NN/element which/WDT/which is/VBZ/is obtained/VBN/obtained by/IN/by taking/NN/taking the/DT/the average/JJ/average of/IN/of low/JJ/low and/CC/and high/JJ/high and/CC/and check/NN/check if/IN/if the/DT/the middle/NN/middle element/NN/element is/VBZ/is the/DT/the key/JJ/key you/PRP/you are/VBP/are looking/VBG/looking for/NNP/for. if/IN/if it/PRP/it is/VBZ/is the/DT/the key/JJ/key you/PRP/you are/VBP/are looking/VBG/looking for/IN/for then/RB/then just/RB/just return/NN/return the/DT/the position/NN/position where/WRB/where you/PRP/you found/VBD/found the/DT/the key/JJ/key /,/, so/RB/so you/PRP/you will/MD/will return/VB/return mid/NNP/mid. if/IN/if the/DT/the key/JJ/key you/PRP/you are/VBP/are looking/VBG/looking for/IN/for is/VBZ/is less/JJR/less than/IN/than the/DT/the middle/NN/middle element/NN/element then/RB/then you/PRP/you know/VBP/know that/IN/that you/PRP/you have/VBP/have to/TO/to search/VB/search in/IN/in the/DT/the left/NN/left part/NN/part of/IN/of the/DT/the array/NNP/array. the/DT/the left/NN/left part/NN/part of/IN/of the/DT/the array/NN/array has/VBZ/has a/DT/a staring/NN/staring location/NN/location low/JJ/low and/CC/and the/DT/the ending/VBG/ending location/NN/location mid-1/NNP/mid-1. you/PRP/you are/VBP/are going/VBG/going to/TO/to search/NN/search in/IN/in that/DT/that /,/, and/CC/and this/DT/this /NN/( return/NN/return binarysearch/NN/binarysearch /:/( a/DT/a /,/, k/NN/k /,/, low/JJ/low /,/, mid-1/-NONE-/mid-1 /:/) /:/) is/VBZ/is your/PRP$/your recursive/JJ/recursive call/NN/call to/TO/to that/DT/that procedure/NNP/procedure. if/IN/if it/PRP/it is/VBZ/is not/RB/not the/DT/the case/NN/case you/PRP/you come/VBP/come to/TO/to the/DT/the else/NN/else and/CC/and in/IN/in this/DT/this case/NN/case what/WP/what you/PRP/you have/VBP/have to/TO/to do/VB/do is/VBZ/is to/TO/to search/NN/search in/IN/in the/DT/the right/NN/right part/NN/part of/IN/of the/DT/the array/NN/array which/WDT/which means/VBZ/means the/DT/the mid/NN/mid +/:/+ 1/CD/1 to/TO/to high/NNP/high. else/RB/else return/VBP/return binarysearch/NN/binarysearch /:/( a/DT/a /,/, k/NN/k /,/, mid/VBD/mid +/:/+ 1/CD/1 /,/, high/JJ/high /NN/) this/DT/this is/VBZ/is how/WRB/how you/PRP/you can/MD/can do/VB/do binary/JJ/binary search/NN/search for/IN/for small/JJ/small pieces/NNS/pieces of/IN/of code/NN/code and/CC/and this/DT/this is/VBZ/is recursive/NNP/recursive. you/PRP/you can/MD/can also/RB/also write/VB/write an/DT/an iterative/JJ/iterative procedure/NN/procedure for/IN/for this/DT/this /,/, there/EX/there are/VBP/are exactly/RB/exactly equivalent/JJ/equivalent so/IN/so that/IN/that you/PRP/you know/VBP/know how/WRB/how to/TO/to go/VB/go from/IN/from a/DT/a recursive/JJ/recursive procedure/NN/procedure to/TO/to an/DT/an iterative/JJ/iterative procedure/NNP/procedure. i/PRP/i have/VBP/have just/RB/just written/VBN/written down/RP/down an/DT/an iterative/JJ/iterative procedure/NN/procedure also/NNP/also. what/WP/what is/VBZ/is happening/VBG/happening in/IN/in our/PRP$/our iterative/JJ/iterative procedure/NN/procedure ?/./? the/DT/the low/JJ/low to/TO/to begin/VB/begin with/IN/with 1/CD/1 and/CC/and high/JJ/high to/TO/to begin/VB/begin with/IN/with n/NNP/n. in/IN/in the/DT/the slide/NN/slide below/IN/below blue/JJ/blue color/NN/color is/VBZ/is the/DT/the element/NN/element 1/CD/1 through/IN/through n/NN/n /,/, let/VB/let say/VBP/say in/IN/in an/DT/an array/NN/array and/CC/and we/PRP/we are/VBP/are doing/VBG/doing the/DT/the same/JJ/same thing/NN/thing roughly/RB/roughly except/IN/except now/RB/now we/PRP/we are/VBP/are putting/VBG/putting it/PRP/it in/IN/in a/DT/a loop/NN/loop and/CC/and updating/VBG/updating high/JJ/high and/CC/and low/JJ/low every/DT/every time/NNP/time. after/IN/after the/DT/the first/JJ/first step/NN/step low/JJ/low becomes/NNS/becomes mid/VBD/mid +/CD/+ 1/CD/1 /,/, because/IN/because the/DT/the element/NN/element was/VBD/was larger/JJR/larger than/IN/than the/DT/the mid/NN/mid element/NN/element a/DT/a /NN/[ mid/NN/mid /:/] >/:/> k/NN/k /,/, low/JJ/low becomes/NNS/becomes mid/VBD/mid +/CD/+ 1/CD/1. when/WRB/when the/DT/the element/NN/element is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the mid/NN/mid element/NN/element then/RB/then high/JJ/high becomes/NNS/becomes mid-1/-NONE-/mid-1 and/CC/and we/PRP/we just/RB/just go/VBP/go through/IN/through this/DT/this loop/NN/loop till/IN/till we/PRP/we either/VBP/either find/VBP/find the/DT/the key/NNP/key. in/IN/in that/DT/that case/NN/case we/PRP/we just/RB/just return/VBP/return the/DT/the location/NN/location where/WRB/where we/PRP/we found/VBD/found the/DT/the key/JJ/key or/CC/or low/JJ/low becomes/NNS/becomes larger/JJR/larger than/IN/than high/JJ/high in/IN/in which/WDT/which case/NN/case you/PRP/you would/MD/would come/VB/come out/RP/out of/IN/of this/DT/this do-while/JJ/do-while loop/NN/loop and/CC/and return/NN/return nil/NNP/nil. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 54/CD/54 /CD/) i/PRP/i have/VBP/have just/RB/just shown/VBN/shown you/PRP/you how/WRB/how to/TO/to write/VB/write a/DT/a binary/JJ/binary search/NN/search in/IN/in two/CD/two different/JJ/different ways/NNP/ways. you/PRP/you can/MD/can write/VB/write it/PRP/it in/IN/in a/DT/a recursive/JJ/recursive procedure/NN/procedure or/CC/or in/IN/in an/DT/an iterative/JJ/iterative procedure/NN/procedure to/TO/to do/VB/do the/DT/the same/JJ/same thing/NNP/thing. how/WRB/how much/JJ/much time/NN/time does/VBZ/does binary/JJ/binary search/NN/search take/NN/take ?/./? /./. you/PRP/you all/DT/all know/VBP/know that/IN/that but/CC/but why/WRB/why does/VBZ/does it/PRP/it takes/VBZ/takes time/NNP/time. exactly/RB/exactly the/DT/the size/NN/size of/IN/of the/DT/the problem/NN/problem is/VBZ/is halved/VBN/halved at/IN/at every/DT/every step/NNP/step. range/NN/range of/IN/of the/DT/the items/NNS/items that/WDT/that we/PRP/we have/VBP/have to/TO/to search/VB/search in/IN/in is/VBZ/is halved/VBN/halved after/IN/after each/DT/each comparison/NNP/comparison. if/IN/if essentially/RB/essentially the/DT/the range/NN/range of/IN/of the/DT/the elements/NNS/elements in/IN/in which/WDT/which i/PRP/i am/VBP/am searching/VBG/searching for/IN/for my/PRP$/my key/NN/key is/VBZ/is n/VBN/n then/RB/then after/IN/after the/DT/the first/JJ/first comparison/NN/comparison it/PRP/it goes/VBZ/goes down/RP/down to/TO/to /./. after/IN/after the/DT/the second/JJ/second comparison/NN/comparison the/DT/the range/NN/range goes/VBZ/goes down/IN/down to/TO/to and/CC/and so/RB/so on/NNP/on. after/IN/after log/NN/log n/NN/n comparison/NN/comparison the/DT/the range/NN/range would/MD/would go/VB/go down/RB/down to/TO/to 1/CD/1. when/WRB/when the/DT/the range/NN/range goes/VBZ/goes down/IN/down to/TO/to 1/CD/1 /,/, either/DT/either it/PRP/it is/VBZ/is that/IN/that element/NN/element or/CC/or it/PRP/it is/VBZ/is not/RB/not that/IN/that element/NN/element and/CC/and you/PRP/you can/MD/can stop/NNP/stop. you/PRP/you will/MD/will roughly/RB/roughly require/VB/require comparisons/NNP/comparisons. if/IN/if you/PRP/you have/VBP/have an/DT/an array/NN/array implementation/NN/implementation that/WDT/that is/VBZ/is your/PRP$/your elements/NNS/elements sitting/VBG/sitting in/IN/in an/DT/an array/NN/array /,/, then/RB/then you/PRP/you can/MD/can go/VB/go to/TO/to which/WDT/which ever/RB/ever location/NN/location you/PRP/you desire/VBP/desire in/IN/in constant/JJ/constant time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 59/CD/59 /CD/) then/RB/then each/DT/each of/IN/of these/DT/these comparisons/NNS/comparisons can/MD/can be/VB/be done/VBN/done in/IN/in one/CD/one unit/NN/unit of/IN/of time/NN/time that/WDT/that is/VBZ/is in/IN/in constant/JJ/constant time/NN/time and/CC/and you/PRP/you can/MD/can do/VB/do the/DT/the entire/JJ/entire process/NN/process in/IN/in only/RB/only o/RB/o /:/( log/NN/log n/NN/n /:/) time/NNP/time. when/WRB/when you/PRP/you do/VBP/do not/RB/not write/VB/write any/DT/any base/NN/base for/IN/for log/NN/log n/NN/n /,/, we/PRP/we will/MD/will understand/VB/understand that/IN/that it/PRP/it is/VBZ/is base/NN/base 2/CD/2. suppose/NN/suppose the/DT/the numbers/NNS/numbers in/IN/in that/DT/that array/NN/array were/VBD/were not/RB/not in/IN/in sorted/VBN/sorted order/NNP/order. till/NN/till now/RB/now we/PRP/we assumed/VBD/assumed that/IN/that the/DT/the numbers/NNS/numbers were/VBD/were in/IN/in increasing/VBG/increasing order/NNP/order. you/PRP/you can/MD/can do/VB/do binary/JJ/binary search/NN/search even/RB/even if/IN/if the/DT/the numbers/NNS/numbers were/VBD/were in/IN/in decreasing/NN/decreasing order/NN/order but/CC/but if/IN/if they/PRP/they were/VBD/were in/IN/in sorted/VBN/sorted order/NN/order you/PRP/you can/MD/can do/VB/do binary/JJ/binary search/NNP/search. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 52/CD/52 /CD/) if/IN/if they/PRP/they were/VBD/were not/RB/not in/IN/in sorted/VBN/sorted order/NN/order and/CC/and still/RB/still you/PRP/you are/VBP/are searching/VBG/searching for/IN/for a/DT/a key/JJ/key k/NNP/k. there/RB/there is/VBZ/is nothing/NN/nothing else/RB/else you/PRP/you can/MD/can do/VB/do /,/, but/CC/but to/TO/to go/VB/go through/RP/through the/DT/the entire/JJ/entire array/NN/array one/CD/one element/NN/element after/IN/after the/DT/the other/JJ/other and/CC/and compare/JJ/compare your/PRP$/your key/JJ/key against/IN/against that/NNP/that. that/IN/that is/VBZ/is the/DT/the only/JJ/only thing/NN/thing you/PRP/you can/MD/can really/RB/really do/NNP/do. the/DT/the worst/JJS/worst case/NN/case time/NN/time /,/, then/RB/then becomes/VBZ/becomes order/NN/order n/NNP/n. if/IN/if you/PRP/you are/VBP/are lucky/JJ/lucky you/PRP/you might/MD/might get/VB/get the/DT/the element/NN/element at/IN/at the/DT/the beginning/NN/beginning of/IN/of your/PRP$/your search/NNP/search. on/IN/on an/DT/an average/JJ/average you/PRP/you will/MD/will get/VB/get it/PRP/it /,/, it/PRP/it may/MD/may be/VB/be 1st/CD/1st time/NN/time you/PRP/you got/VBD/got it/PRP/it at/IN/at the/DT/the very/RB/very first/JJ/first position/NN/position /,/, some/DT/some other/JJ/other element/NN/element you/PRP/you searched/VBD/searched and/CC/and got/VBD/got at/IN/at the/DT/the 3rd/JJ/3rd position/NNP/position. hence/NN/hence in/IN/in an/DT/an average/JJ/average you/PRP/you are/VBP/are going/VBG/going to/TO/to spend/VB/spend some/DT/some order/NN/order n/NN/n time/NNP/time. this/DT/this is/VBZ/is really/RB/really the/DT/the best/JJS/best you/PRP/you can/MD/can do/VB/do /,/, if/IN/if the/DT/the array/NN/array is/VBZ/is sorted/NNP/sorted. you/PRP/you can/MD/can see/VB/see there/RB/there is/VBZ/is a/DT/a huge/JJ/huge difference/NN/difference coming/VBG/coming up/RP/up already/NNP/already. by/IN/by sorting/NN/sorting /,/, if/IN/if you/PRP/you were/VBD/were to/TO/to sort/VB/sort the/DT/the element/NN/element to/TO/to begin/VB/begin with/IN/with /,/, then/RB/then you/PRP/you can/MD/can search/VB/search much/JJ/much more/RBR/more quickly/NNP/quickly. given/VBN/given in/IN/in the/DT/the slide/NN/slide is/VBZ/is a/DT/a small/JJ/small pseudo/NN/pseudo code/NN/code which/WDT/which is/VBZ/is just/RB/just saying/VBG/saying that/IN/that you/PRP/you run/VBP/run through/IN/through the/DT/the array/NN/array one/CD/one element/NN/element at/IN/at a/DT/a time/NN/time and/CC/and compare/NN/compare your/PRP$/your key/JJ/key against/IN/against the/DT/the element/NN/element in/IN/in the/DT/the array/NNP/array. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 16/CD/16 /CD/) that/WDT/that ends/VBZ/ends my/PRP$/my aside/NN/aside on/IN/on searching/NN/searching and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to go/VB/go back/RB/back to/TO/to my/PRP$/my dictionary/NN/dictionary problem/NNP/problem. i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the setting/NN/setting where/WRB/where you/PRP/you are/VBP/are asked/VBN/asked to/TO/to implement/VB/implement a/DT/a caller/NN/caller id/NN/id facility/NN/facility for/IN/for a/DT/a large/JJ/large phone/NN/phone company/NNP/company. given/NN/given a/DT/a particular/JJ/particular phone/NN/phone number/NN/number when/WRB/when a/DT/a call/NN/call comes/VBZ/comes in/IN/in /,/, based/VBN/based on/IN/on the/DT/the phone/NN/phone number/NN/number you/PRP/you can/MD/can figure/VB/figure out/RP/out the/DT/the name/NN/name of/IN/of the/DT/the person/NN/person who/WP/who is/VBZ/is making/VBG/making the/DT/the call/NNP/call. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 30/CD/30 /CD/) that/WDT/that is/VBZ/is what/WP/what the/DT/the company/NN/company wants/VBZ/wants to/TO/to do/NNP/do. given/RB/given the/DT/the phone/NN/phone number/NN/number you/PRP/you want/VBP/want to/TO/to return/VB/return the/DT/the callers/NNS/callers name/NNP/name. let/VB/let us/PRP/us assume/VB/assume that/IN/that our/PRP$/our phone/NN/phone numbers/NNS/numbers are/VBP/are all/DT/all 8/CD/8 digit/NN/digit numbers/NNS/numbers as/IN/as in/IN/in the/DT/the case/NN/case in/IN/in delhi/NNP/delhi. the/DT/the range/NN/range of/IN/of phone/NN/phone numbers/NNS/numbers would/MD/would be/VB/be that/IN/that is/VBZ/is of/IN/of 100/CD/100 million/CD/million phone/NN/phone numbers/NNP/numbers. the/DT/the number/NN/number of/IN/of different/JJ/different phone/NN/phone numbers/NNS/numbers is/VBZ/is much/JJ/much less/NN/less than/IN/than this/NNP/this. the/DT/the range/NN/range is/VBZ/is 100/CD/100 million/CD/million /,/, but/CC/but may/MD/may be/VB/be delhi/NN/delhi has/VBZ/has only/RB/only about/IN/about a/DT/a million/NN/million phone/NN/phone numbers/NNP/numbers. that/IN/that is/VBZ/is because/IN/because not/RB/not all/DT/all numbers/NNS/numbers are/VBP/are present/NNP/present. there/RB/there are/VBP/are n/VBN/n phone/NN/phone numbers/NNS/numbers and/CC/and n/NN/n is/VBZ/is much/JJ/much smaller/NN/smaller than/IN/than r/NNP/r. r/NN/r is/VBZ/is the/DT/the range/NN/range which/WDT/which is/VBZ/is 100/CD/100 million/CD/million because/IN/because the/DT/the phone/NN/phone numbers/NNS/numbers are/VBP/are 8/CD/8 digit/JJ/digit numbers/NNS/numbers and/CC/and n/NN/n is/VBZ/is the/DT/the actual/JJ/actual different/JJ/different number/NN/number of/IN/of elements/NNS/elements in/IN/in your/PRP$/your database/NNP/database. you/PRP/you want/VBP/want to/TO/to do/VB/do this/DT/this as/IN/as efficiently/RB/efficiently as/IN/as possible/NNP/possible. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 14/CD/14 /CD/) you/PRP/you can/MD/can use/VB/use an/DT/an unordered/VBN/unordered sequence/NN/sequence to/TO/to do/VB/do this/NNP/this. it/PRP/it means/VBZ/means suppose/DT/suppose the/DT/the numbers/NNS/numbers given/VBN/given in/IN/in the/DT/the slide/NN/slide below/IN/below were/VBD/were the/DT/the phone/NN/phone numbers/NNP/numbers. i/PRP/i have/VBP/have not/RB/not put/VBN/put down/RP/down the/DT/the 8/CD/8 digit/NN/digit numbers/NNS/numbers but/CC/but let/VB/let say/VBP/say these/DT/these were/VBD/were the/DT/the phone/NN/phone numbers/NNS/numbers and/CC/and you/PRP/you could/MD/could just/RB/just put/VB/put them/PRP/them in/IN/in a/DT/a list/NN/list in/IN/in any/DT/any arbitrary/JJ/arbitrary order/NNP/order. how/WRB/how much/JJ/much time/NN/time does/VBZ/does searching/VBG/searching take/VB/take ?/./? order/NN/order n/NN/n /,/, because/IN/because you/PRP/you can/MD/can not/RB/not do/VB/do anything/NN/anything else/VB/else but/CC/but to/TO/to traverse/VB/traverse through/IN/through this/DT/this list/NNP/list. in/IN/in the/DT/the worst/JJS/worst case/NN/case you/PRP/you might/MD/might have/VB/have to/TO/to go/VB/go through/RP/through the/DT/the entire/JJ/entire list/NNP/list. hence/NN/hence it/PRP/it will/MD/will take/VB/take order/NN/order n/NN/n time/NN/time to/TO/to search/NN/search for/IN/for a/DT/a particular/JJ/particular phone/NN/phone number/NNP/number. given/NN/given a/DT/a particular/JJ/particular phone/NN/phone number/NN/number /,/, if/IN/if you/PRP/you have/VBP/have to/TO/to return/VB/return the/DT/the name/NN/name of/IN/of the/DT/the person/NN/person /,/, you/PRP/you will/MD/will have/VB/have to/TO/to take/VB/take roughly/RB/roughly order/JJR/order n/NN/n time/NN/time to/TO/to do/VB/do that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 44/CD/44 /CD/) the/DT/the list/NN/list in/IN/in the/DT/the above/NN/above slide/NN/slide is/VBZ/is an/DT/an unordered/VBN/unordered list/NN/list that/IN/that is/VBZ/is there/EX/there is/VBZ/is no/DT/no particular/JJ/particular order/NNP/order. how/WRB/how does/VBZ/does one/CD/one remove/NN/remove an/DT/an element/NN/element ?/./? suppose/NN/suppose a/DT/a particular/JJ/particular person/NN/person decides/VBZ/decides to/TO/to give/VB/give up/IN/up his/PRP$/his connection/NNP/connection. you/PRP/you have/VBP/have to/TO/to remove/VB/remove that/IN/that particular/JJ/particular data/NNS/data record/NN/record from/IN/from this/DT/this list/NNP/list. first/RB/first you/PRP/you will/MD/will search/VB/search for/IN/for the/DT/the record/NN/record then/RB/then you/PRP/you will/MD/will remove/VB/remove it/NNP/it. searching/NN/searching itself/PRP/itself takes/VBZ/takes order/NN/order n/NN/n time/NN/time then/RB/then removing/VBG/removing also/RB/also takes/VBZ/takes at/IN/at least/JJS/least that/IN/that much/RB/much time/NNP/time. once/RB/once you/PRP/you found/VBD/found where/WRB/where the/DT/the element/NN/element is/VBZ/is then/RB/then you/PRP/you can/MD/can do/VB/do some/DT/some small/JJ/small modification/NN/modification to/TO/to do/VB/do the/DT/the entire/JJ/entire thing/NN/thing in/IN/in order/NN/order n/NN/n time/NNP/time. why/WRB/why does/VBZ/does inserting/VBG/inserting take/VB/take only/RB/only constant/JJ/constant time/NN/time ?/./? because/IN/because it/PRP/it is/VBZ/is an/DT/an unordered/VBN/unordered list/NN/list /,/, you/PRP/you do/VBP/do not/RB/not really/RB/really care/VB/care for/IN/for where/WRB/where you/PRP/you are/VBP/are putting/VBG/putting the/DT/the elements/NNP/elements. you/PRP/you might/MD/might put/VB/put at/IN/at the/DT/the very/RB/very first/JJ/first location/NNP/location. thus/RB/thus inserting/VBG/inserting takes/NNS/takes very/RB/very less/JJR/less time/NNP/time. it/PRP/it is/VBZ/is not/RB/not clear/JJ/clear whether/IN/whether this/DT/this particular/JJ/particular implementation/NN/implementation is/VBZ/is good/JJ/good for/IN/for this/DT/this application/NNP/application. but/CC/but there/EX/there are/VBP/are certain/JJ/certain applications/NNS/applications in/IN/in which/WDT/which /,/, this/DT/this way/NN/way of/IN/of doing/VBG/doing things/NNS/things is/VBZ/is faliable/JJ/faliable and/CC/and one/CD/one such/JJ/such application/NN/application is/VBZ/is where/WRB/where you/PRP/you have/VBP/have to/TO/to maintain/VB/maintain log/NN/log files/NNP/files. when/WRB/when you/PRP/you have/VBP/have to/TO/to maintain/VB/maintain some/DT/some kinds/NNS/kinds of/IN/of log/NN/log file/NN/file for/IN/for instance/NN/instance any/DT/any kind/NN/kind of/IN/of transactions/NNS/transactions that/WDT/that are/VBP/are happening/VBG/happening in/IN/in the/DT/the database/NN/database you/PRP/you try/VBP/try to/TO/to maintain/VB/maintain log/NN/log files/NNP/files. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 45/CD/45 /CD/) if/IN/if there/EX/there is/VBZ/is any/DT/any problem/NN/problem you/PRP/you can/MD/can figure/VB/figure out/RP/out /,/, you/PRP/you can/MD/can revert/VB/revert the/DT/the transaction/NN/transaction whatever/NN/whatever was/VBD/was done/VBN/done or/CC/or for/IN/for instance/NN/instance in/IN/in your/PRP$/your system/NN/system administration/NN/administration you/PRP/you would/MD/would keep/VB/keep track/NN/track of/IN/of all/DT/all the/DT/the various/JJ/various activities/NNS/activities that/WDT/that were/VBD/were happening/VBG/happening in/IN/in your/PRP$/your system/NN/system and/CC/and maintain/VB/maintain the/DT/the log/NN/log of/IN/of them/NNP/them. for/IN/for log/NN/log files/NNS/files /,/, it/PRP/it is/VBZ/is very/RB/very rarely/RB/rarely that/IN/that you/PRP/you need/VBP/need to/TO/to do/VB/do search/NN/search or/CC/or removals/NNS/removals but/CC/but you/PRP/you need/VBP/need to/TO/to add/VB/add data/NNS/data frequently/RB/frequently to/TO/to your/PRP$/your file/NNP/file. every/DT/every time/NN/time when/WRB/when some/DT/some transaction/NN/transaction happens/NNS/happens you/PRP/you need/VBP/need to/TO/to add/NNP/add. insertions/NNS/insertions are/VBP/are very/RB/very frequent/JJ/frequent but/CC/but searches/VBZ/searches and/CC/and deletion/NN/deletion are/VBP/are much/RB/much rare/NNP/rare. in/IN/in that/DT/that case/NN/case this/DT/this implementation/NN/implementation is/VBZ/is good/JJ/good because/IN/because insertion/NN/insertion takes/VBZ/takes only/RB/only constant/JJ/constant time/NNP/time. really/RB/really you/PRP/you have/VB/have to/TO/to see/VB/see between/IN/between these/DT/these three/CD/three operations/NNS/operations /:/( search/NN/search /,/, remove/VBP/remove and/CC/and insert/NN/insert /:/) for/IN/for which/WDT/which is/VBZ/is the/DT/the operation/NN/operation being/VBG/being performed/VBN/performed more/JJR/more frequently/RB/frequently /,/, to/TO/to decide/VB/decide what/WP/what type/NN/type of/IN/of data/NNS/data structure/VBP/structure used/VBN/used to/TO/to implement/VB/implement the/DT/the dictionary/JJ/dictionary data/NNS/data type/NNP/type. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 24/CD/24 /CD/) you/PRP/you can/MD/can use/VB/use ordered/VBN/ordered sequence/NN/sequence also/RB/also in/IN/in that/DT/that case/NN/case let/VBD/let us/PRP/us say/VBP/say the/DT/the elements/NNS/elements were/VBD/were put/VBN/put in/IN/in an/DT/an increasing/VBG/increasing order/NN/order of/IN/of the/DT/the key/NNP/key. searching/NN/searching takes/VBZ/takes log/NN/log n/NN/n time/NNP/time. log/NN/log n/NN/n provided/VBD/provided /,/, you/PRP/you had/VBD/had some/DT/some kind/NN/kind of/IN/of direct/JJ/direct access/NN/access mechanism/NN/mechanism into/IN/into the/DT/the thing/NN/thing which/WDT/which is/VBZ/is used/VBN/used in/IN/in array/NN/array or/CC/or some/DT/some other/JJ/other thing/NN/thing which/WDT/which let/VB/let you/PRP/you go/VB/go to/TO/to whichever/VB/whichever element/NN/element you/PRP/you wanted/VBD/wanted to/TO/to go/NNP/go. searching/NN/searching takes/VBZ/takes only/RB/only o/RB/o /:/( log/NN/log n/NN/n /:/) time/NN/time /,/, inserting/VBG/inserting and/CC/and removing/VBG/removing will/MD/will take/VB/take order/NN/order n/NN/n time/NN/time because/IN/because if/IN/if all/PDT/all of/IN/of them/PRP/them were/VBD/were put/VBN/put in/IN/in an/DT/an array/NNP/array. then/RB/then if/IN/if i/PRP/i have/VBP/have to/TO/to maintain/VB/maintain the/DT/the sorted/VBN/sorted order/NN/order and/CC/and to/TO/to insert/VB/insert the/DT/the element/NN/element in/IN/in a/DT/a particular/JJ/particular location/NN/location /,/, i/PRP/i have/VBP/have to/TO/to shift/VB/shift everything/NN/everything to/TO/to the/DT/the right/NN/right of/IN/of the/DT/the element/NNP/element. insertion/NN/insertion will/MD/will take/VB/take order/NN/order n/NN/n time/NN/time in/IN/in the/DT/the worst/JJS/worst case/NN/case and/CC/and similarly/RB/similarly deletion/NN/deletion you/PRP/you may/MD/may have/VB/have to/TO/to move/VB/move it/PRP/it back/NNP/back. we/PRP/we have/VBP/have seen/VBN/seen examples/NNS/examples in/IN/in previous/JJ/previous class/NNP/class. why/WRB/why does/VBZ/does insertion/NN/insertion take/VB/take order/NN/order n/NN/n time/NN/time ?/./? first/JJ/first we/PRP/we have/VBP/have to/TO/to search/VB/search for/IN/for where/WRB/where the/DT/the element/NN/element has/VBZ/has to/TO/to be/VB/be inserted/VBN/inserted and/CC/and once/RB/once we/PRP/we know/VBP/know the/DT/the position/NN/position then/RB/then this/DT/this is/VBZ/is an/DT/an array/NN/array in/IN/in which/WDT/which all/DT/all the/DT/the elements/NNS/elements were/VBD/were put/VBN/put in/IN/in an/DT/an array/NNP/array. we/PRP/we have/VBP/have to/TO/to create/VB/create space/NN/space there/EX/there by/IN/by moving/NN/moving everything/NN/everything to/TO/to one/CD/one step/VB/step right/NNP/right. in/IN/in the/DT/the worst/JJS/worst case/NN/case we/PRP/we might/MD/might have/VB/have to/TO/to move/VB/move order/NN/order n/NN/n elements/NNS/elements to/TO/to the/DT/the right/NNP/right. what/WP/what is/VBZ/is order/NN/order n/NN/n +/:/+ log/NN/log n/NN/n ?/./? it/PRP/it is/VBZ/is order/NN/order n/NN/n /,/, you/PRP/you have/VBP/have to/TO/to recall/VB/recall your/PRP$/your big-oh/JJ/big-oh notation/NN/notation /,/, order/NN/order n/NN/n +/:/+ log/NN/log n/NN/n is/VBZ/is order/NN/order n/NNP/n. this/DT/this would/MD/would make/VB/make sense/NN/sense /,/, when/WRB/when you/PRP/you have/VBP/have to/TO/to do/VB/do a/DT/a lot/NN/lot of/IN/of searching/NN/searching in/IN/in your/PRP$/your dictionary/NN/dictionary but/CC/but not/RB/not many/JJ/many insertions/NNS/insertions and/CC/and deletions/NNS/deletions from/IN/from the/DT/the dictionary/NNP/dictionary. there/RB/there is/VBZ/is one/CD/one other/JJ/other way/NN/way which/WDT/which will/MD/will be/VB/be useful/JJ/useful for/IN/for our/PRP$/our subsequent/NN/subsequent discussion/NN/discussion and/CC/and that/IN/that is/VBZ/is as/IN/as follows/NNP/follows. let/NN/let us/PRP/us say/VBP/say i/PRP/i take/VBP/take an/DT/an array/NN/array of/IN/of size/NN/size which/WDT/which is/VBZ/is a/DT/a huge/JJ/huge array/NNP/array. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 28/CD/28 /CD/) ankur/NN/ankur had/VBD/had a/DT/a phone/NN/phone number/NN/number of/IN/of ?/./? 9635-8904/CD/9635-8904 ?/./? /,/, i/PRP/i go/VBP/go to/TO/to location/NN/location ?/./? 9635-8904/CD/9635-8904 ?/./? in/IN/in the/DT/the array/NN/array and/CC/and put/VBD/put ankur/RP/ankur name/NN/name there/RB/there and/CC/and the/DT/the additional/JJ/additional information/NN/information associated/VBN/associated with/IN/with that/DT/that in/IN/in that/DT/that array/NNP/array. at/IN/at that/DT/that very/RB/very position/NN/position which/WDT/which corresponds/NNS/corresponds to/TO/to ankur/VB/ankur phone/NN/phone number/NNP/number. all/DT/all operations/NNS/operations insert/VBP/insert /,/, search/NN/search and/CC/and delete/JJ/delete will/MD/will take/VB/take only/RB/only constant/JJ/constant time/NNP/time. why/WRB/why because/IN/because i/PRP/i just/RB/just have/VBP/have to/TO/to insert/VB/insert a/DT/a caller/NN/caller id/NN/id capability/NNP/capability. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? given/VBN/given a/DT/a phone/NN/phone number/NN/number /,/, i/PRP/i want/VBP/want to/TO/to know/VB/know who/WP/who is/VBZ/is that/IN/that person/NNP/person. given/VBN/given the/DT/the phone/NN/phone number/NN/number i/PRP/i just/RB/just go/VBP/go straight/RB/straight in/IN/in to/TO/to that/DT/that location/NN/location of/IN/of the/DT/the array/NN/array and/CC/and retrieve/VB/retrieve the/DT/the name/NNP/name. given/NN/given a/DT/a phone/NN/phone number/NN/number i/PRP/i want/VBP/want to/TO/to create/VB/create a/DT/a new/JJ/new phone/NN/phone connection/NN/connection /,/, so/RB/so i/PRP/i take/VBP/take the/DT/the phone/NN/phone number/NN/number and/CC/and go/VB/go to/TO/to the/DT/the particular/JJ/particular location/NN/location /,/, put/VBD/put the/DT/the name/NN/name of/IN/of the/DT/the person/NN/person who/WP/who got/VBD/got the/DT/the connection/NNP/connection. similarly/RB/similarly if/IN/if i/PRP/i want/VBP/want to/TO/to delete/VB/delete a/DT/a particular/JJ/particular phone/NN/phone connection/NN/connection /,/, i/PRP/i just/RB/just go/VBP/go to/TO/to the/DT/the particular/JJ/particular location/NN/location and/CC/and i/PRP/i remove/VBP/remove the/DT/the element/NNP/element. all/DT/all the/DT/the operations/NNS/operations take/VBP/take only/RB/only constant/JJ/constant time/NNP/time. what/WP/what is/VBZ/is the/DT/the bad/JJ/bad thing/NN/thing with/IN/with this/DT/this implementation/NN/implementation ?/./? you/PRP/you are/VBP/are wasting/VBG/wasting a/DT/a lot/NN/lot of/IN/of space/NNP/space. it/PRP/it is/VBZ/is not/RB/not that/IN/that you/PRP/you can/MD/can not/RB/not do/VB/do all/DT/all of/IN/of these/DT/these operations/NNS/operations very/RB/very quickly/NNP/quickly. you/PRP/you can/MD/can but/VB/but here/RB/here space/NN/space is/VBZ/is turning/VBG/turning out/RP/out be/VB/be an/DT/an issue/NNP/issue. we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use what/WP/what is/VBZ/is called/VBN/called hashing/-NONE-/hashing. we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use a/DT/a hash/NN/hash table/NN/table which/WDT/which will/MD/will tell/VB/tell us/PRP/us do/VBP/do the/DT/the things/NNS/things quickly/RB/quickly /,/, i/PRP/i have/VBP/have said/VBN/said o/NN/o /:/( 1/CD/1 /CD/) excepted/VBN/excepted time/NNP/time. it/PRP/it will/MD/will not/RB/not take/VB/take two/CD/two much/JJ/much space/NN/space either/DT/either and/CC/and let/VB/let us/PRP/us see/VB/see the/DT/the idea/NNP/idea. what/WP/what was/VBD/was the/DT/the problem/NN/problem with/IN/with the/DT/the previous/JJ/previous technique/NN/technique ?/./? in/IN/in the/DT/the previous/JJ/previous technique/NN/technique we/PRP/we had/VBD/had 100/CD/100 million/CD/million phone/NN/phone numbers/NNS/numbers /,/, so/RB/so we/PRP/we had/VBD/had to/TO/to create/VB/create an/DT/an array/NN/array of/IN/of size/NN/size 100/CD/100 million/NNP/million. but/CC/but let/VB/let us/PRP/us say/VB/say there/EX/there were/VBD/were only/RB/only 1/CD/1 million/CD/million users/NNS/users /,/, most/JJS/most of/IN/of the/DT/the array/NN/array was/VBD/was getting/VBG/getting wasted/NNP/wasted. there/RB/there was/VBD/was nothing/NN/nothing in/IN/in their/NNP/their. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 18/CD/18 /CD/) suppose/NN/suppose i/PRP/i could/MD/could create/VB/create a/DT/a smaller/JJR/smaller array/NN/array with/IN/with only/RB/only 1/CD/1 million/CD/million locations/NNS/locations in/IN/in it/PRP/it and/CC/and mapped/VBD/mapped those/DT/those 1/CD/1 million/CD/million users/NNS/users to/TO/to locations/NNS/locations in/IN/in that/DT/that array/NNP/array. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. let/VB/let us/PRP/us say/VB/say in/IN/in a/DT/a hypothetical/JJ/hypothetical setting/NN/setting they/PRP/they were/VBD/were only/RB/only small/JJ/small number/NN/number of/IN/of users/NNP/users. i/PRP/i was/VBD/was only/RB/only trying/VBG/trying to/TO/to keep/VB/keep the/DT/the phone/NN/phone numbers/NNS/numbers of/IN/of 5/CD/5 of/IN/of my/PRP$/my friends/NNS/friends but/CC/but still/RB/still i/PRP/i wanted/VBD/wanted to/TO/to do/VB/do something/NN/something fancy/NNP/fancy. i/PRP/i create/VBP/create an/DT/an array/NN/array of/IN/of 5/CD/5 elements/NNS/elements and/CC/and i/PRP/i take/VBP/take ankur/RP/ankur phone/NN/phone number/NN/number and/CC/and i/PRP/i compute/VBP/compute this/DT/this value/NN/value 96358904/CD/96358904 mod/NN/mod 5/CD/5 /,/, which/WDT/which is/VBZ/is the/DT/the size/NN/size of/IN/of my/PRP$/my array/NNP/array. i/PRP/i get/VBP/get a/DT/a number/NN/number between/IN/between 0/-NONE-/0 and/CC/and 4/CD/4. in/IN/in this/DT/this particular/JJ/particular case/NN/case i/PRP/i would/MD/would get/VB/get 4/CD/4. depending/VBG/depending upon/IN/upon what/WP/what i/PRP/i get/VBP/get /,/, i/PRP/i put/VBD/put ankur/RP/ankur at/IN/at location/NN/location 4/CD/4 in/IN/in my/PRP$/my array/NNP/array. i/PRP/i am/VBP/am not/RB/not using/VBG/using too/RB/too much/RB/much space/NN/space and/CC/and may/MD/may get/VB/get away/RB/away with/IN/with constant/JJ/constant time/NN/time for/IN/for insertion/NN/insertion and/CC/and delete/NNP/delete. let/VB/let us/PRP/us see/VB/see whether/IN/whether we/PRP/we can/MD/can or/CC/or we/PRP/we can/MD/can not/RB/not do/VB/do that/NNP/that. let/VB/let me/PRP/me take/VB/take another/DT/another example/NN/example just/RB/just to/TO/to make/VB/make sure/JJ/sure that/IN/that you/PRP/you understand/VBP/understand about/IN/about the/DT/the idea/NNP/idea. let/NN/let us/PRP/us say/VBP/say keys/NNS/keys are/VBP/are not/RB/not phone/NN/phone numbers/NNS/numbers but/CC/but entry/NN/entry numbers/NNS/numbers of/IN/of students/NNS/students in/IN/in this/DT/this class/NNP/class. your/PRP$/your entry/NN/entry numbers/NNS/numbers looks/VBZ/looks something/NN/something like/IN/like this/DT/this ?/./? 2004/CD/2004 or/CC/or 3/CD/3 or/CC/or 2/CD/2 ?/./? /,/, then/RB/then you/PRP/you have/VB/have 2/CD/2 characters/NNS/characters and/CC/and then/RB/then you/PRP/you have/VB/have another/DT/another 5/CD/5 digits/NNS/digits at/IN/at the/DT/the end/NNP/end. there/RB/there are/VBP/are about/IN/about 100/CD/100 students/NNS/students in/IN/in this/DT/this class/NN/class /,/, the/DT/the range/NN/range of/IN/of this/DT/this numbers/NNS/numbers is/VBZ/is huge/NNP/huge. this/DT/this is/VBZ/is infact/NN/infact /,/, i/PRP/i do/VBP/do not/RB/not even/RB/even know/VB/know the/DT/the range/NN/range because/IN/because they/PRP/they can/MD/can take/VB/take different/JJ/different set/NN/set of/IN/of values/NNP/values. but/CC/but i/PRP/i would/MD/would like/VB/like to/TO/to create/VB/create a/DT/a table/JJ/table of/IN/of size/NN/size of/IN/of about/RB/about 100/CD/100 /,/, because/IN/because there/EX/there only/RB/only 100/CD/100 people/NNS/people in/IN/in the/DT/the class/NN/class /,/, why/WRB/why should/MD/should i/VB/i spend/NN/spend more/JJR/more space/NN/space than/IN/than that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 37/CD/37 /CD/) let/NN/let me/PRP/me pick/VBP/pick up/RP/up a/DT/a hash/NN/hash function/NNP/function. this/DT/this function/NN/function which/WDT/which i/PRP/i was/VBD/was using/VBG/using in/IN/in the/DT/the previous/JJ/previous example/NN/example mod/NN/mod 5/CD/5 is/VBZ/is also/RB/also called/VBN/called as/IN/as a/DT/a hash/NN/hash function/NNP/function. i/PRP/i am/VBP/am going/VBG/going to/TO/to pick/VB/pick up/RP/up a/DT/a hash/NN/hash function/NN/function which/WDT/which does/VBZ/does the/DT/the following/NNP/following. it/PRP/it takes/VBZ/takes the/DT/the last/JJ/last 2/CD/2 digits/NNS/digits of/IN/of your/PRP$/your entry/NN/entry number/NNP/number. in/IN/in this/DT/this case/NN/case ?/./? 2004cs10110/CD/2004cs10110 ?/./? would/MD/would get/VB/get mapped/VBN/mapped to/TO/to location/NN/location 10/CD/10. it/PRP/it just/RB/just picks/VBZ/picks up/RP/up the/DT/the last/JJ/last 2/CD/2 digits/NNS/digits of/IN/of the/DT/the entry/NN/entry number/NNP/number. that/IN/that is/VBZ/is what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/NNP/do. i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take each/DT/each one/CD/one of/IN/of your/PRP$/your entry/NN/entry numbers/NNS/numbers /,/, going/VBG/going to/TO/to look/VB/look at/IN/at that/DT/that last/JJ/last 2/CD/2 digits/NNS/digits and/CC/and i/PRP/i just/RB/just have/VBP/have a/DT/a table/JJ/table of/IN/of size/NN/size 100/CD/100. i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to put/VB/put you/PRP/you in/IN/in that/DT/that location/NN/location /,/, depending/VBG/depending upon/IN/upon the/DT/the last/JJ/last 2/CD/2 digits/NNP/digits. what/WP/what if/IN/if i/PRP/i had/VBD/had a/DT/a clash/NN/clash ?/./? suppose/NN/suppose i/PRP/i had/VBD/had another/DT/another person/NN/person with/IN/with this/DT/this entry/NN/entry number/NN/number 2004cs50310/CD/2004cs50310. i/PRP/i do/VBP/do not/RB/not know/VB/know if/IN/if they/PRP/they are/VBP/are in/IN/in this/DT/this class/NN/class /,/, there/EX/there could/MD/could be/VB/be another/DT/another person/NN/person also/NNP/also. the/DT/the problem/NN/problem is/VBZ/is these/DT/these 2/CD/2 are/VBP/are going/VBG/going to/TO/to the/DT/the same/JJ/same location/NN/location number/NN/number 10/CD/10. we/PRP/we will/MD/will come/VB/come to/TO/to this/DT/this problem/NN/problem but/CC/but if/IN/if this/DT/this problem/NN/problem did/VBD/did not/RB/not arise/VB/arise then/RB/then did/VBD/did you/PRP/you see/VB/see that/IN/that we/PRP/we are/VBP/are in/IN/in very/RB/very grade/JJ/grade shape/NNP/shape. then/RB/then you/PRP/you can/MD/can do/VB/do insert/NN/insert /,/, delete/JJ/delete and/CC/and search/NN/search all/DT/all in/IN/in constant/JJ/constant time/NN/time because/IN/because it/PRP/it is/VBZ/is very/RB/very much/JJ/much like/IN/like the/DT/the array/NN/array implementation/NN/implementation that/WDT/that i/PRP/i showed/VBD/showed you/NNP/you. except/IN/except that/DT/that it/PRP/it does/VBZ/does not/RB/not waste/VB/waste all/DT/all the/DT/the space/NNP/space. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 12/CD/12 /CD/) let/NN/let us/PRP/us see/VBP/see how/WRB/how we/PRP/we can/MD/can address/VB/address the/DT/the problem/NN/problem of/IN/of clash/NNP/clash. if/IN/if 2/CD/2 elements/NNS/elements are/VBP/are getting/VBG/getting mapped/VBN/mapped to/TO/to the/DT/the same/JJ/same location/NN/location in/IN/in our/PRP$/our hash/NN/hash table/NN/table /,/, this/DT/this is/VBZ/is called/VBN/called the/DT/the collision/NNP/collision. we/PRP/we have/VBP/have to/TO/to find/VB/find a/DT/a way/NN/way to/TO/to address/NN/address this/DT/this issue/NNP/issue. how/WRB/how do/VBP/do we/PRP/we deal/VBP/deal with/IN/with the/DT/the 2/CD/2 keys/NNS/keys which/WDT/which mapped/VBD/mapped to/TO/to the/DT/the same/JJ/same spot/NN/spot in/IN/in our/PRP$/our hash/NN/hash table/NN/table ?/./? we/PRP/we use/VBP/use the/DT/the concept/NN/concept called/VBD/called chaining/NNP/chaining. there/RB/there are/VBP/are many/JJ/many ways/NNS/ways of/IN/of addressing/VBG/addressing this/DT/this issue/NN/issue and/CC/and today/NN/today in/IN/in our/PRP$/our class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the very/RB/very first/JJ/first /,/, simple/NN/simple technique/NN/technique called/VBN/called chaining/NNP/chaining. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 07/CD/07 /CD/) the/DT/the blue/JJ/blue color/NN/color thing/NN/thing in/IN/in the/DT/the slide/NN/slide below/IN/below is/VBZ/is my/PRP$/my hash/NN/hash table/NNP/table. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to put/VB/put the/DT/the elements/NNS/elements in/IN/in this/DT/this hash/NN/hash table/NN/table but/CC/but i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have a/DT/a linked/VBN/linked list/NN/list starting/VBG/starting at/IN/at each/DT/each of/IN/of the/DT/the locations/NNP/locations. i/PRP/i am/VBP/am going/VBG/going to/TO/to put/VB/put the/DT/the elements/NNS/elements in/IN/in the/DT/the linked/VBN/linked list/NNP/list. suppose/NN/suppose my/PRP$/my hash/NN/hash table/NN/table had/VBD/had only/RB/only 5/CD/5 locations/NNS/locations in/IN/in it/NNP/it. may/MD/may be/VB/be i/PRP/i was/VBD/was just/RB/just using/VBG/using the/DT/the hash/NN/hash function/NN/function which/WDT/which was/VBD/was taking/VBG/taking the/DT/the key/JJ/key and/CC/and computing/NN/computing modulo/NN/modulo 5/CD/5 or/CC/or some/DT/some other/JJ/other thing/NNP/thing. if/IN/if 2/CD/2 or/CC/or more/JJR/more keys/NNS/keys were/VBD/were mapped/VBN/mapped to/TO/to the/DT/the 2nd/CD/2nd location/NN/location /,/, i/PRP/i will/MD/will just/RB/just keep/VB/keep adding/VBG/adding them/PRP/them to/TO/to the/DT/the linked/VBN/linked list/NNP/list. as/IN/as you/PRP/you can/MD/can seen/VB/seen from/IN/from the/DT/the picture/NN/picture given/VBN/given in/IN/in the/DT/the slide/NN/slide below/IN/below /,/, it/PRP/it was/VBD/was the/DT/the case/NN/case 3/CD/3 keys/NNS/keys were/VBD/were getting/VBG/getting mapped/VBN/mapped to/TO/to location/NN/location 2/CD/2 and/CC/and 1/CD/1 key/JJ/key was/VBD/was getting/VBG/getting mapped/VBN/mapped to/TO/to location/NN/location 4/CD/4. there/EX/there were/VBD/were no/DT/no keys/NNS/keys getting/VBG/getting mapped/VBN/mapped to/TO/to locations/NNS/locations 1/CD/1 and/CC/and 3/CD/3. this/DT/this does/VBZ/does address/NN/address the/DT/the problem/NN/problem of/IN/of collision/NN/collision but/CC/but what/WP/what is/VBZ/is the/DT/the other/JJ/other problem/NN/problem does/VBZ/does it/PRP/it create/NNP/create. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 34/CD/34 /CD/) while/IN/while we/PRP/we have/VBP/have resolved/VBN/resolved the/DT/the collision/NN/collision problem/NN/problem and/CC/and we/PRP/we are/VBP/are not/RB/not able/JJ/able to/TO/to do/VB/do things/NNS/things in/IN/in constant/JJ/constant time/NN/time any/DT/any more/NNP/more. in/IN/in the/DT/the worst/JJS/worst case/NN/case all/DT/all the/DT/the keys/NNS/keys get/VBP/get mapped/VBN/mapped to/TO/to 1/CD/1 location/NN/location in/IN/in this/DT/this hash/NN/hash table/NNP/table. if/IN/if all/DT/all of/IN/of them/PRP/them get/VBP/get mapped/VBN/mapped to/TO/to the/DT/the same/JJ/same location/NN/location in/IN/in the/DT/the hash/NN/hash table/NN/table then/RB/then your/PRP$/your data/NNS/data structure/NN/structure reduces/NNS/reduces to/TO/to a/DT/a linked/VBN/linked list/NN/list data/NNS/data structure/NN/structure which/WDT/which we/PRP/we know/VBP/know has/VBZ/has the/DT/the worst/JJS/worst case/NN/case time/NN/time of/IN/of order/NN/order n/NN/n for/IN/for search/NN/search and/CC/and delete/NNP/delete. still/RB/still insert/VB/insert has/VBZ/has constant/VBN/constant time/NNP/time. whether/IN/whether each/DT/each of/IN/of the/DT/the nodes/NNS/nodes in/IN/in the/DT/the linked/VBN/linked list/NN/list will/MD/will contain/VB/contain both/DT/both the/DT/the identity/NN/identity in/IN/in the/DT/the phone/NN/phone number/NN/number /,/, caller/NN/caller id/VBD/id example/NN/example ?/./? each/DT/each node/NN/node will/MD/will have/VB/have both/DT/both the/DT/the phone/NN/phone number/NN/number and/CC/and all/DT/all the/DT/the data/NNS/data associated/VBN/associated with/IN/with that/DT/that person/NN/person who/WP/who sits/NNS/sits there/NNP/there. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 07/CD/07 /CD/) this/DT/this is/VBZ/is quick/JJ/quick recap/NN/recap about/IN/about how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to insert/VB/insert and/CC/and delete/VB/delete of/IN/of an/DT/an element/NNP/element. for/IN/for all/DT/all of/IN/of these/DT/these three/CD/three operations/NNS/operations you/PRP/you have/VBP/have to/TO/to do/VB/do essentially/RB/essentially the/DT/the same/JJ/same thing/NNP/thing. you/PRP/you have/VBP/have to/TO/to use/VB/use your/PRP$/your hash/NN/hash function/NN/function h/NN/h /,/, to/TO/to determine/VB/determine where/WRB/where that/IN/that key/JJ/key is/VBZ/is in/IN/in this/DT/this table/NNP/table. we/PRP/we have/VBP/have seen/VBN/seen 2/CD/2 examples/NNS/examples of/IN/of hash/NN/hash functions/NNP/functions. in/IN/in one/CD/one case/NN/case we/PRP/we said/VBD/said we/PRP/we will/MD/will just/RB/just take/VB/take the/DT/the key/JJ/key modulo/NN/modulo 5/CD/5 /,/, in/IN/in the/DT/the other/JJ/other case/NN/case we/PRP/we said/VBD/said we/PRP/we just/RB/just take/VBP/take the/DT/the last/JJ/last 2/CD/2 digits/NNS/digits of/IN/of the/DT/the key/NNP/key. but/CC/but they/PRP/they could/MD/could be/VB/be many/JJ/many different/JJ/different kinds/NNS/kinds of/IN/of hash/NN/hash function/NN/function and/CC/and in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see what/WP/what are/VBP/are the/DT/the different/JJ/different kinds/NNS/kinds of/IN/of typically/RB/typically used/VBN/used hash/NN/hash functions/NNP/functions. the/DT/the last/JJ/last 2/CD/2 digits/NNS/digits can/MD/can also/RB/also be/VB/be regarded/VBN/regarded as/IN/as modulo/NN/modulo 100/CD/100. the/DT/the reason/NN/reason i/PRP/i did/VBD/did not/RB/not write/VB/write modulo/RB/modulo 100/CD/100 because/IN/because that/DT/that was/VBD/was not/RB/not an/DT/an integer/NN/integer at/IN/at all/NNP/all. it/PRP/it was/VBD/was your/PRP$/your entry/NN/entry number/NN/number and/CC/and it/PRP/it had/VBD/had some/DT/some characters/NNS/characters in/IN/in it/NNP/it. you/PRP/you are/VBP/are going/VBG/going to/TO/to use/VB/use your/PRP$/your hash/NN/hash function/NN/function to/TO/to find/VB/find the/DT/the position/NN/position of/IN/of the/DT/the key/JJ/key in/IN/in the/DT/the table/NNP/table. then/RB/then if/IN/if you/PRP/you are/VBP/are going/VBG/going to/TO/to search/NN/search or/CC/or insert/NN/insert or/CC/or delete/JJ/delete /,/, do/VBP/do that/IN/that in/IN/in the/DT/the linked/VBN/linked list/NN/list associated/VBN/associated with/IN/with that/DT/that position/NNP/position. there/RB/there are/VBP/are options/NNS/options that/IN/that you/PRP/you might/MD/might want/VB/want to/TO/to maintain/VB/maintain the/DT/the list/NN/list which/WDT/which is/VBZ/is in/IN/in 2nd/CD/2nd position/NN/position in/IN/in a/DT/a sorted/VBN/sorted order/NN/order /,/, you/PRP/you might/MD/might want/VB/want to/TO/to keep/VB/keep it/PRP/it in/IN/in unordered/NNP/unordered. if/IN/if you/PRP/you want/VBP/want to/TO/to maintain/VB/maintain in/IN/in a/DT/a sorted/VBN/sorted order/NN/order then/RB/then insertion/NN/insertion is/VBZ/is going/VBG/going to/TO/to take/VB/take more/JJR/more than/IN/than a/DT/a constant/JJ/constant amount/NN/amount of/IN/of time/NNP/time. if/IN/if you/PRP/you want/VBP/want to/TO/to keep/VB/keep it/PRP/it in/IN/in unordered/JJ/unordered then/RB/then insertion/NN/insertion is/VBZ/is going/VBG/going to/TO/to take/VB/take only/RB/only constant/JJ/constant amount/NN/amount of/IN/of time/NN/time because/IN/because you/PRP/you can/MD/can just/RB/just insert/VB/insert at/IN/at the/DT/the very/RB/very beginning/VBG/beginning or/CC/or at/IN/at very/RB/very end/NN/end of/IN/of the/DT/the linked/VBN/linked list/NNP/list. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 46/CD/46 /CD/) if/IN/if you/PRP/you want/VBP/want to/TO/to insert/VB/insert an/DT/an element/NN/element at/IN/at the/DT/the very/RB/very end/NN/end of/IN/of linked/VBN/linked list/NN/list then/RB/then you/PRP/you do/VBP/do not/RB/not need/VB/need to/TO/to traverse/VB/traverse the/DT/the entire/JJ/entire list/NN/list to/TO/to reach/VB/reach the/DT/the end/NNP/end. you/PRP/you can/MD/can always/RB/always have/VB/have another/DT/another pointer/NN/pointer which/WDT/which always/RB/always points/VBZ/points to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the linked/VBN/linked list/NN/list and/CC/and use/VBP/use that/IN/that to/TO/to update/NNP/update. although/IN/although there/EX/there is/VBZ/is no/DT/no reason/NN/reason why/WRB/why you/PRP/you want/VBP/want to/TO/to insert/VB/insert at/IN/at the/DT/the end/NNP/end. suppose/NN/suppose if/IN/if you/PRP/you want/VBP/want to/TO/to insert/VB/insert at/IN/at the/DT/the end/NN/end /,/, you/PRP/you could/MD/could also/RB/also do/VB/do that/DT/that in/IN/in constant/JJ/constant time/NN/time always/NNP/always. by/IN/by maintaining/VBG/maintaining one/CD/one pointer/NN/pointer we/PRP/we will/MD/will have/VB/have two/CD/two pointers/NNS/pointers from/IN/from the/DT/the 2nd/CD/2nd location/NN/location /,/, one/CD/one going/VBG/going to/TO/to the/DT/the front/NN/front of/IN/of this/DT/this linked/VBN/linked list/NN/list and/CC/and one/CD/one were/VBD/were going/VBG/going to/TO/to the/DT/the tail/NN/tail of/IN/of the/DT/the linked/VBN/linked list/NNP/list. use/NN/use that/WDT/that pointer/NN/pointer to/TO/to add/VB/add an/DT/an element/NN/element at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the linked/VBN/linked list/NNP/list. you/PRP/you can/MD/can do/VB/do ordering/VBG/ordering if/IN/if you/PRP/you want/VBP/want to/TO/to keep/VB/keep it/PRP/it ordered/NNP/ordered. we/PRP/we are/VBP/are not/RB/not saying/VBG/saying that/IN/that in/IN/in the/DT/the hash/NN/hash table/NN/table you/PRP/you have/VB/have to/TO/to keep/VB/keep anything/NN/anything ordered/NNP/ordered. if/IN/if you/PRP/you want/VBP/want to/TO/to keep/VB/keep it/PRP/it ordered/VBN/ordered you/PRP/you can/MD/can do/VB/do whichever/RB/whichever if/IN/if there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of order/NN/order on/IN/on your/PRP$/your keys/NNS/keys then/RB/then you/PRP/you can/MD/can use/VB/use that/IN/that notion/NN/notion to/TO/to order/NN/order the/DT/the elements/NNP/elements. an/DT/an element/NN/element with/IN/with key/JJ/key k/NN/k is/VBZ/is stored/VBN/stored in/IN/in the/DT/the slot/NN/slot h/NN/h /:/( k/NN/k /:/) in/IN/in which/WDT/which h/NN/h is/VBZ/is the/DT/the hash/NN/hash function/NN/function and/CC/and h/NN/h /:/( k/NN/k /:/) is/VBZ/is the/DT/the value/NN/value of/IN/of hash/NN/hash function/NNP/function. the/DT/the hash/NN/hash function/NN/function is/VBZ/is mapping/VBG/mapping the/DT/the universe/NN/universe of/IN/of all/DT/all keys/NNS/keys /,/, let/VB/let us/PRP/us say/VB/say u/PRP/u to/TO/to slots/NNS/slots of/IN/of the/DT/the hash/NN/hash table/NNP/table. if/IN/if the/DT/the hash/NN/hash table/NN/table was/VBD/was of/IN/of size/NN/size m/NN/m /,/, so/RB/so it/PRP/it is/VBZ/is a/DT/a function/NN/function which/WDT/which is/VBZ/is mapping/VBG/mapping from/IN/from u/NN/u the/DT/the universe/NN/universe to/TO/to 0/-NONE-/0 through/IN/through m-1/NNP/m-1. we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume for/IN/for the/DT/the rest/NN/rest of/IN/of the/DT/the discussion/NN/discussion that/IN/that the/DT/the time/NN/time to/TO/to compute/VB/compute the/DT/the hash/NN/hash function/NN/function for/IN/for given/VBN/given key/JJ/key k/NN/k is/VBZ/is a/DT/a constant/JJ/constant time/NNP/time. because/IN/because quite/JJ/quite often/RB/often we/PRP/we just/RB/just have/VBP/have to/TO/to do/VB/do simple/JJ/simple arithmetic/JJ/arithmetic operations/NNS/operations to/TO/to compute/VB/compute the/DT/the value/NN/value of/IN/of the/DT/the hash/NN/hash function/NNP/function. we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that the/DT/the time/NN/time taken/VBN/taken to/TO/to compute/VB/compute the/DT/the hash/NN/hash function/NN/function is/VBZ/is independent/JJ/independent of/IN/of the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 36/CD/36 /CD/) as/IN/as far/RB/far as/IN/as the/DT/the choice/NN/choice of/IN/of hash/NN/hash functions/NNS/functions are/VBP/are concerned/VBN/concerned /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see in/IN/in the/DT/the next/JJ/next class/NN/class what/WP/what are/VBP/are good/JJ/good choices/NNS/choices of/IN/of hash/NN/hash function/NNP/function. lot/NN/lot of/IN/of research/NN/research has/VBZ/has done/VBN/done in/IN/in this/DT/this and/CC/and then/RB/then we/PRP/we will/MD/will see/VB/see what/WP/what are/VBP/are the/DT/the kinds/NNS/kinds of/IN/of hash/NN/hash function/NN/function that/WDT/that people/NNS/people typically/RB/typically use/NNP/use. i/PRP/i just/RB/just gave/VBD/gave you/PRP/you 2/CD/2 simple/NNS/simple examples/NNS/examples of/IN/of hash/NN/hash function/NN/function so/RB/so as/IN/as to/TO/to motivate/VB/motivate the/DT/the concept/NNP/concept. what/WP/what is/VBZ/is the/DT/the good/JJ/good hash/NN/hash function/NN/function ?/./? a/DT/a good/JJ/good hash/NN/hash function/NN/function is/VBZ/is one/CD/one which/WDT/which tries/NNS/tries to/TO/to distribute/VB/distribute the/DT/the keys/NNS/keys uniformly/RB/uniformly over/IN/over the/DT/the table/NNP/table. it/PRP/it should/MD/should not/RB/not map/VB/map all/DT/all the/DT/the keys/NNS/keys to/TO/to location/NN/location 1/CD/1 or/CC/or location/NN/location 2/CD/2 or/CC/or any/DT/any such/JJ/such thing/NN/thing /,/, because/IN/because then/RB/then there/RB/there would/MD/would be/VB/be too/RB/too many/JJ/many collisions/NNS/collisions /,/, your/PRP$/your data/NNS/data structure/NN/structure would/MD/would start/VB/start looking/VBG/looking like/IN/like a/DT/a single/JJ/single linked/VBN/linked list/NN/list and/CC/and that/IN/that is/VBZ/is not/RB/not what/WP/what you/PRP/you want/VBP/want to/TO/to have/NNP/have. you/PRP/you want/VBP/want to/TO/to have/VB/have a/DT/a hash/NN/hash function/NN/function which/WDT/which distributes/VBZ/distributes things/NNS/things uniformly/RB/uniformly over/IN/over the/DT/the table/NNP/table. why/WRB/why uniformly/RB/uniformly /,/, so/RB/so that/IN/that each/DT/each of/IN/of the/DT/the list/NN/list is/VBZ/is small/NNP/small. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 53/CD/53 /CD/) an/DT/an ideal/NN/ideal hash/NN/hash function/NN/function would/MD/would do/VB/do something/NN/something like/IN/like the/DT/the following/NNP/following. it/PRP/it would/MD/would take/VB/take an/DT/an element/NN/element and/CC/and let/VB/let us/PRP/us say/VB/say i/PRP/i have/VBP/have a/DT/a table/JJ/table of/IN/of 100/CD/100 locations/NNP/locations. it/PRP/it will/MD/will pick/VB/pick at/IN/at random/NN/random one/CD/one of/IN/of those/DT/those 100/CD/100 locations/NNS/locations then/RB/then throw/VB/throw the/DT/the element/NN/element there/NNP/there. this/DT/this kind/NN/kind of/IN/of it/PRP/it shows/VBZ/shows that/IN/that every/DT/every location/NN/location would/MD/would have/VB/have roughly/RB/roughly the/DT/the same/JJ/same number/NN/number of/IN/of elements/NNP/elements. but/CC/but this/DT/this is/VBZ/is not/RB/not a/DT/a hash/NN/hash function/NN/function what/WP/what i/PRP/i just/RB/just said/VBD/said /,/, you/PRP/you can/MD/can not/RB/not have/VB/have a/DT/a hash/NN/hash function/NN/function which/WDT/which takes/VBZ/takes a/DT/a key/JJ/key and/CC/and puts/NNS/puts it/PRP/it at/IN/at a/DT/a random/NN/random location/NNP/location. why/WRB/why this/DT/this is/VBZ/is not/RB/not a/DT/a hash/NN/hash function/NN/function ?/./? because/IN/because when/WRB/when i/PRP/i am/VBP/am searching/VBG/searching for/IN/for the/DT/the element/NN/element /,/, where/WRB/where am/NN/am i/PRP/i going/VBG/going to/TO/to go/VB/go and/CC/and look/NNP/look. i/PRP/i do/VBP/do not/RB/not know/VB/know what/WP/what random/NN/random location/NN/location it/PRP/it had/VBD/had picked/VBN/picked at/IN/at that/DT/that point/NNP/point. while/IN/while this/DT/this is/VBZ/is an/DT/an ideal/NN/ideal hash/NN/hash function/NN/function /,/, it/PRP/it is/VBZ/is not/RB/not really/RB/really a/DT/a hash/NN/hash function/NNP/function. but/CC/but for/IN/for our/PRP$/our analysis/NN/analysis we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume such/JJ/such a/DT/a hash/NN/hash function/NNP/function. the/DT/the hash/NN/hash function/NN/function is/VBZ/is just/RB/just essentially/RB/essentially does/VBZ/does the/DT/the following/VBG/following that/IN/that it/PRP/it takes/VBZ/takes the/DT/the element/NN/element and/CC/and throws/VBZ/throws it/PRP/it randomly/RB/randomly /,/, uniformly/RB/uniformly with/IN/with same/JJ/same probability/NN/probability in/IN/in one/CD/one of/IN/of those/DT/those locations/NNS/locations of/IN/of the/DT/the table/NNP/table. we/PRP/we will/MD/will call/VB/call this/DT/this as/IN/as simple/NN/simple uniform/NN/uniform hash/NN/hash function/NN/function and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use this/DT/this for/IN/for analysis/NNP/analysis. we/PRP/we will/MD/will use/VB/use another/DT/another term/NN/term called/VBN/called the/DT/the load/NN/load factor/NN/factor of/IN/of the/DT/the table/NN/table which/WDT/which is/VBZ/is just/RB/just a/DT/a number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the table/NN/table divided/VBD/divided by/IN/by the/DT/the number/NN/number of/IN/of slots/NNS/slots /,/, the/DT/the size/NN/size of/IN/of the/DT/the table/NN/table and/CC/and we/PRP/we will/MD/will call/VB/call this/DT/this load/NN/load factor/NN/factor alpha/NNP/alpha. what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen when/WRB/when we/PRP/we are/VBP/are trying/VBG/trying to/TO/to search/NN/search and/CC/and our/PRP$/our search/NN/search is/VBZ/is unsuccessful/JJ/unsuccessful ?/./? it/PRP/it means/VBZ/means that/IN/that i/PRP/i took/VBD/took the/DT/the element/NN/element i/PRP/i computed/VBD/computed the/DT/the value/NN/value of/IN/of the/DT/the hash/NN/hash function/NN/function and/CC/and i/PRP/i went/VBD/went to/TO/to the/DT/the particular/JJ/particular slot/NN/slot in/IN/in the/DT/the hash/NN/hash table/NNP/table. i/PRP/i went/VBD/went through/IN/through the/DT/the entire/JJ/entire linked/VBN/linked list/NN/list and/CC/and did/VBD/did not/RB/not find/VB/find the/DT/the element/NN/element at/IN/at all/NNP/all. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 52/CD/52 /CD/) how/WRB/how much/JJ/much time/NN/time do/VBP/do you/PRP/you spend/VB/spend ?/./? i/PRP/i spend/VBP/spend time/NN/time propositional/JJ/propositional to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the linked/VBN/linked list/NN/list that/IN/that i/PRP/i have/VBP/have to/TO/to go/VB/go through/NNP/through. because/IN/because i/PRP/i said/VBD/said computing/VBG/computing the/DT/the hash/NN/hash function/NN/function takes/VBZ/takes constant/NN/constant time/NN/time /,/, you/PRP/you did/VBD/did not/RB/not take/VB/take any/DT/any time/NN/time to/TO/to go/VB/go to/TO/to the/DT/the right/NN/right linked/VBD/linked list/NN/list but/CC/but once/RB/once you/PRP/you went/VBD/went to/TO/to the/DT/the right/NN/right linked/VBD/linked list/NN/list you/PRP/you still/RB/still have/VBP/have to/TO/to step/VB/step through/RP/through the/DT/the entire/JJ/entire linked/VBN/linked list/NN/list /,/, follow/VBP/follow pointer/NN/pointer by/IN/by pointer/NN/pointer till/IN/till you/PRP/you reach/VBP/reach the/DT/the end/NNP/end. the/DT/the time/NN/time is/VBZ/is propositional/JJ/propositional to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the linked/VBN/linked list/NNP/list. what/WP/what is/VBZ/is the/DT/the average/JJ/average size/NN/size of/IN/of your/PRP$/your linked/VBN/linked list/NN/list ?/./? if/IN/if there/EX/there are/VBP/are n/NN/n elements/NNS/elements that/WDT/that are/VBP/are thrown/RB/thrown in/IN/in my/PRP$/my table/NN/table and/CC/and m/NN/m is/VBZ/is the/DT/the number/NN/number of/IN/of slots/NNS/slots and/CC/and if/IN/if i/PRP/i had/VBD/had this/DT/this simple/NN/simple hash/NN/hash function/NN/function which/WDT/which was/VBD/was essentially/RB/essentially distributing/VBG/distributing the/DT/the things/NNS/things uniformly/RB/uniformly then/RB/then on/IN/on an/DT/an average/JJ/average you/PRP/you would/MD/would except/VB/except that/IN/that each/DT/each linked/VBN/linked list/NN/list is/VBZ/is of/IN/of size/NN/size which/WDT/which was/VBD/was the/DT/the load/NN/load factor/NN/factor of/IN/of the/DT/the table/NNP/table. the/DT/the excepted/VBN/excepted number/NN/number of/IN/of elements/NNS/elements that/WDT/that need/VBP/need to/TO/to be/VB/be examined/VBN/examined is/VBZ/is and/CC/and the/DT/the total/JJ/total search/NN/search time/NN/time where/WRB/where i/PRP/i am/VBP/am using/VBG/using this/DT/this 1/CD/1 /,/, 2/CD/2 denote/NN/denote the/DT/the time/NN/time taken/VBN/taken to/TO/to compute/VB/compute the/DT/the hash/NN/hash function/NN/function is/VBZ/is roughly/RB/roughly 1/CD/1 +/CD/+ /./. this/DT/this tells/VBZ/tells you/PRP/you that/IN/that if/IN/if your/PRP$/your is/VBZ/is let/VBN/let us/PRP/us say/VBP/say only/RB/only a/DT/a half/NN/half than/IN/than the/DT/the excepted/VBN/excepted search/NN/search time/NN/time would/MD/would be/VB/be roughly/RB/roughly a/DT/a constant/NNP/constant. o/NN/o /:/( 1/CD/1 +/CD/+ /CD/) is/VBZ/is excepted/VBN/excepted under/IN/under the/DT/the ideal/NN/ideal hash/NN/hash functions/NNP/functions. you/PRP/you can/MD/can always/RB/always create/VB/create a/DT/a bad/JJ/bad hash/NN/hash function/NN/function for/IN/for which/WDT/which the/DT/the time/NN/time taken/VBN/taken will/MD/will be/VB/be order/NN/order n/NNP/n. o/NN/o /:/( 1/CD/1 +/CD/+ /CD/) represents/NNS/represents the/DT/the time/NN/time that/IN/that is/VBZ/is spent/VBN/spent in/IN/in computing/NN/computing the/DT/the hash/NN/hash function/NNP/function. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 57/CD/57 /CD/) we/PRP/we would/MD/would not/RB/not want/VB/want a/DT/a hash/NN/hash function/NN/function for/IN/for which/WDT/which every/DT/every thing/NN/thing is/VBZ/is getting/VBG/getting mapped/VBN/mapped to/TO/to one/CD/one location/NNP/location. because/IN/because that/DT/that is/VBZ/is a/DT/a linked/VBN/linked list/NN/list /,/, why/WRB/why would/MD/would you/PRP/you want/VB/want to/TO/to do/VB/do something/NN/something like/IN/like that/NNP/that. this/DT/this again/NN/again brings/VBZ/brings back/RB/back to/TO/to the/DT/the same/JJ/same question/NN/question /,/, the/DT/the efficiency/NN/efficiency of/IN/of this/DT/this data/NN/data structure/NN/structure relies/NNS/relies critically/RB/critically on/IN/on the/DT/the hash/NN/hash function/NN/function we/PRP/we choose/NNP/choose. we/PRP/we will/MD/will see/VB/see what/WP/what are/VBP/are the/DT/the good/JJ/good hash/NN/hash functions/NNS/functions in/IN/in the/DT/the next/JJ/next class/NNP/class. designing/NN/designing hash/NN/hash function/NN/function is/VBZ/is much/JJ/much more/RBR/more of/IN/of an/DT/an art/NN/art than/IN/than science/NNP/science. you/PRP/you have/VBP/have to/TO/to really/RB/really look/VB/look at/IN/at the/DT/the data/NNS/data to/TO/to design/VB/design a/DT/a good/JJ/good hash/NN/hash function/NNP/function. i/PRP/i am/VBP/am going/VBG/going to/TO/to show/VB/show you/PRP/you in/IN/in the/DT/the next/JJ/next class/NN/class some/DT/some principle/NN/principle behind/IN/behind the/DT/the hash/NN/hash function/NN/function that/WDT/that is/VBZ/is what/WP/what kind/NN/kind of/IN/of hash/NN/hash functions/NNS/functions one/CD/one should/MD/should use/NNP/use. but/CC/but there/EX/there is/VBZ/is no/DT/no theorem/NN/theorem which/WDT/which says/VBZ/says that/IN/that this/DT/this is/VBZ/is the/DT/the best/JJS/best hash/NN/hash function/NN/function and/CC/and you/PRP/you should/MD/should always/RB/always use/VB/use this/NNP/this. what/WP/what happens/VBZ/happens when/WRB/when we/PRP/we make/VBP/make a/DT/a successful/JJ/successful search/NN/search ?/./? that/IN/that was/VBD/was for/IN/for unsuccessful/JJ/unsuccessful search/NN/search but/CC/but when/WRB/when i/PRP/i make/VBP/make a/DT/a successful/JJ/successful search/NN/search /,/, it/PRP/it means/VBZ/means once/RB/once again/RB/again i/PRP/i took/VBD/took the/DT/the key/JJ/key /,/, computed/VBN/computed the/DT/the value/NN/value of/IN/of the/DT/the hash/NN/hash function/NN/function /,/, went/VBD/went in/IN/in to/TO/to the/DT/the appropriate/NN/appropriate linked/VBD/linked list/NN/list and/CC/and then/RB/then i/PRP/i am/VBP/am walking/VBG/walking through/IN/through the/DT/the linked/VBN/linked list/NNP/list. but/CC/but i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to reach/VB/reach till/NN/till the/DT/the end/NN/end of/IN/of the/DT/the linked/VBN/linked list/NN/list /,/, at/IN/at some/DT/some point/NN/point in/IN/in the/DT/the middle/NN/middle itself/PRP/itself i/PRP/i may/MD/may be/VB/be able/JJ/able to/TO/to find/VB/find my/PRP$/my element/NNP/element. how/WRB/how many/JJ/many elements/NNS/elements do/VBP/do i/PRP/i have/VB/have to/TO/to traverse/VB/traverse in/IN/in this/DT/this process/NN/process ?/./? the/DT/the position/NN/position at/IN/at which/WDT/which it/PRP/it was/VBD/was found/VBN/found but/CC/but how/WRB/how do/VBP/do i/PRP/i know/VB/know that/NNP/that. what/WP/what is/VBZ/is the/DT/the excepted/VBN/excepted time/NN/time i/PRP/i would/MD/would take/VB/take overall/JJ/overall ?/./? excepted/VBN/excepted time/NN/time i/PRP/i mean/VBP/mean /,/, the/DT/the average/JJ/average time/NN/time i/PRP/i would/MD/would take/VB/take to/TO/to search/VB/search all/DT/all those/DT/those n/NN/n elements/NNS/elements that/WDT/that are/VBP/are there/RB/there in/IN/in the/DT/the database/NNP/database. you/PRP/you can/MD/can have/VB/have many/JJ/many different/JJ/different ways/NNS/ways of/IN/of arguing/VBG/arguing it/PRP/it but/CC/but let/VB/let us/PRP/us do/VBP/do it/PRP/it in/IN/in the/DT/the following/JJ/following way/NNP/way. suppose/NN/suppose i/PRP/i was/VBD/was searching/VBG/searching for/IN/for the/DT/the element/NN/element which/WDT/which was/VBD/was inserted/VBN/inserted in/IN/in to/TO/to my/PRP$/my database/NNP/database. the/DT/the element/NN/element or/CC/or the/DT/the key/JJ/key that/IN/that i/PRP/i am/VBP/am looking/VBG/looking for/IN/for was/VBD/was inserted/VBN/inserted in/IN/in to/TO/to the/DT/the hash/NN/hash table/NN/table when/WRB/when there/EX/there were/VBD/were only/RB/only 9/CD/9 elements/NNP/elements. this/DT/this was/VBD/was the/DT/the element/NN/element /,/, if/IN/if it/PRP/it was/VBD/was the/DT/the element/NN/element that/IN/that was/VBD/was inserted/VBN/inserted then/RB/then the/DT/the excepted/VBN/excepted length/NN/length of/IN/of the/DT/the list/NN/list in/IN/in which/WDT/which it/PRP/it was/VBD/was inserted/VBN/inserted was/VBD/was /./. that/IN/that is/VBZ/is what/WP/what we/PRP/we argued/VBD/argued just/RB/just now/NNP/now. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 17/CD/17 /CD/) exactly/RB/exactly m/NN/m is/VBZ/is the/DT/the number/NN/number of/IN/of slots/NNS/slots in/IN/in the/DT/the hash/NN/hash table/NNP/table. in/IN/in the/DT/the case/NN/case of/IN/of successful/JJ/successful search/NN/search excepted/VBD/excepted number/NN/number of/IN/of elements/NNS/elements examined/VBN/examined is/VBZ/is 1/CD/1 more/RBR/more then/RB/then the/DT/the number/NN/number of/IN/of elements/NNS/elements examined/VBN/examined when/WRB/when that/IN/that particular/JJ/particular element/NN/element was/VBD/was inserted/NNP/inserted. when/WRB/when the/DT/the element/NN/element was/VBD/was inserted/VBN/inserted i/PRP/i =/VBP/= 10/CD/10 /,/, i/PRP/i went/VBD/went through/IN/through the/DT/the linked/VBN/linked list/NN/list in/IN/in which/WDT/which the/DT/the element/NN/element was/VBD/was inserted/VBN/inserted and/CC/and appended/VBD/appended at/IN/at the/DT/the very/RB/very end/NNP/end. i/PRP/i had/VBD/had to/TO/to compare/VB/compare that/IN/that element/NN/element with/IN/with all/DT/all the/DT/the various/JJ/various elements/NNP/elements. when/WRB/when i/PRP/i insert/VBP/insert the/DT/the element/NN/element basically/RB/basically it/PRP/it is/VBZ/is same/JJ/same as/IN/as that/DT/that the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons i/PRP/i have/VBP/have done/VBN/done is/VBZ/is /,/, 1/CD/1 more/JJR/more than/IN/than the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons i/PRP/i would/MD/would have/VB/have done/VBN/done in/IN/in an/DT/an unsuccessful/JJ/unsuccessful search/NNP/search. we/PRP/we have/VBP/have to/TO/to go/VB/go through/RP/through the/DT/the entire/JJ/entire linked/VBN/linked list/NN/list when/WRB/when we/PRP/we are/VBP/are inserting/VBG/inserting because/IN/because to/TO/to make/VB/make sure/JJ/sure that/IN/that the/DT/the element/NN/element is/VBZ/is not/RB/not already/RB/already their/PRP$/their then/RB/then we/PRP/we might/MD/might insert/VB/insert at/IN/at the/DT/the end/NNP/end. we/PRP/we could/MD/could also/RB/also insert/VB/insert at/IN/at the/DT/the beginning/NN/beginning but/CC/but it/PRP/it is/VBZ/is the/DT/the same/JJ/same thing/NNP/thing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 15/CD/15 /CD/) one/CD/one could/MD/could have/VB/have an/DT/an analysis/NN/analysis which/WDT/which looks/NNS/looks like/IN/like the/DT/the following/NNP/following. this/DT/this is/VBZ/is not/RB/not critical/JJ/critical you/PRP/you can/MD/can all/DT/all prove/VB/prove it/PRP/it in/IN/in different/JJ/different manners/NNP/manners. i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the element/NN/element 1/CD/1 through/IN/through n/NN/n /,/, there/EX/there were/VBD/were n/NN/n elements/NNS/elements in/IN/in my/PRP$/my database/NNP/database. when/WRB/when the/DT/the element/NN/element was/VBD/was inserted/VBN/inserted /,/, then/RB/then the/DT/the excepted/VBN/excepted length/NN/length of/IN/of the/DT/the linked/VBN/linked list/NN/list at/IN/at the/DT/the end/NN/end of/IN/of which/WDT/which it/PRP/it was/VBD/was inserted/VBN/inserted is/VBZ/is roughly/RB/roughly and/CC/and the/DT/the 1/CD/1 is/VBZ/is for/IN/for our/PRP$/our hash/NN/hash function/NN/function computation/NNP/computation. this/DT/this is/VBZ/is /NNP/( 1/CD/1 +/CD/+ /CD/) roughly/RB/roughly the/DT/the excepted/VBN/excepted time/NN/time required/VBN/required to/TO/to insert/VB/insert at/IN/at the/DT/the element/NNP/element. we/PRP/we are/VBP/are just/RB/just summing/VBG/summing this/DT/this quantity/NN/quantity up/RP/up over/IN/over all/DT/all the/DT/the n/NN/n elements/NNS/elements and/CC/and taking/VBG/taking the/DT/the average/NNP/average. if/IN/if you/PRP/you just/RB/just go/VBP/go through/IN/through this/DT/this math/NN/math /,/, you/PRP/you will/MD/will get/VB/get something/NN/something like/IN/like the/DT/the following/JJ/following and/CC/and many/JJ/many of/IN/of you/PRP/you could/MD/could have/VB/have figured/VBN/figured this/DT/this out/RP/out on/IN/on your/PRP$/your own/NNP/own. 1/CD/1 +/CD/+ the/DT/the average/JJ/average time/NN/time would/MD/would be/VB/be roughly/RB/roughly the/DT/the excepted/VBN/excepted length/NN/length of/IN/of the/DT/the list/NN/list divided/VBD/divided by/IN/by 2/CD/2. whenever/NN/whenever we/PRP/we are/VBP/are doing/VBG/doing average/JJ/average time/NN/time computations/NNS/computations /,/, when/WRB/when i/PRP/i said/VBD/said take/VB/take a/DT/a linked/VBN/linked list/NN/list and/CC/and what/WP/what is/VBZ/is the/DT/the average/JJ/average time/NN/time to/TO/to search/NN/search for/IN/for an/DT/an element/NNP/element. you/PRP/you said/VBD/said i/PRP/i might/MD/might have/VB/have to/TO/to go/VB/go till/RB/till the/DT/the end/NN/end of/IN/of the/DT/the linked/VBN/linked list/NN/list or/CC/or find/VB/find the/DT/the element/NN/element right/RB/right at/IN/at the/DT/the beginning/NN/beginning /,/, on/IN/on an/DT/an average/JJ/average i/NN/i will/MD/will take/VB/take half/NN/half the/DT/the length/NN/length of/IN/of the/DT/the linked/VBN/linked list/NNP/list. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 27/CD/27 /CD/) you/PRP/you are/VBP/are seeing/VBG/seeing a/DT/a similar/JJ/similar kind/NN/kind of/IN/of behavior/JJ/behavior in/IN/in this/DT/this /NN/( 1/CD/1 +/CD/+ /CD/) /,/, in/IN/in which/WDT/which is/VBZ/is the/DT/the very/JJ/very low/JJ/low order/NN/order term/NN/term which/WDT/which you/PRP/you can/MD/can just/RB/just ignore/NNP/ignore. what/WP/what you/PRP/you are/VBP/are seeing/VBG/seeing is/VBZ/is something/VBG/something like/IN/like /,/, we/PRP/we do/VBP/do not/RB/not really/RB/really have/VB/have to/TO/to go/VB/go through/RP/through this/DT/this math/NN/math but/CC/but you/PRP/you can/MD/can also/RB/also follow/VB/follow it/PRP/it /,/, this/DT/this is/VBZ/is more/RBR/more intuitive/NNP/intuitive. one/CD/one could/MD/could just/RB/just say/VB/say that/IN/that the/DT/the average/NN/average time/NN/time for/IN/for successful/JJ/successful search/NN/search would/MD/would be/VB/be more/RBR/more like/IN/like /./. again/RB/again it/PRP/it is/VBZ/is o/RB/o /:/( 1/CD/1 +/CD/+ /CD/) where/WRB/where 2/CD/2 is/VBZ/is not/RB/not important/NNP/important. both/DT/both for/IN/for successful/JJ/successful and/CC/and unsuccessful/JJ/unsuccessful search/NN/search we/PRP/we are/VBP/are taking/VBG/taking a/DT/a similar/JJ/similar kind/NN/kind of/IN/of time/NNP/time. what/WP/what should/MD/should be/VB/be that/IN/that is/VBZ/is what/WP/what should/MD/should be/VB/be a/DT/a good/JJ/good choice/NN/choice of/IN/of ?/./? thus/RB/thus the/DT/the is/VBZ/is the/DT/the load/NN/load factor/NN/factor of/IN/of the/DT/the table/NN/table that/IN/that is/VBZ/is the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the table/NN/table divided/VBD/divided by/IN/by the/DT/the number/NN/number of/IN/of slots/NNS/slots in/IN/in the/DT/the table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 52/CD/52 /CD/) if/IN/if i/PRP/i pick/VBP/pick the/DT/the size/NN/size of/IN/of hash/NN/hash table/NN/table to/TO/to be/VB/be the/DT/the number/NN/number of/IN/of elements/NNS/elements that/WDT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be inserting/VBG/inserting in/IN/in the/DT/the hash/NN/hash table/NN/table /,/, then/RB/then would/MD/would be/VB/be roughly/RB/roughly a/DT/a constant/JJ/constant o/NN/o /:/( 1/CD/1 /CD/) /./. all/DT/all your/PRP$/your searching/NN/searching /,/, insert/NN/insert and/CC/and delete/JJ/delete would/MD/would take/VB/take constant/JJ/constant amount/NN/amount of/IN/of time/NNP/time. in/IN/in the/DT/the excepted/VBN/excepted sense/NN/sense i/PRP/i mean/VBP/mean when/WRB/when you/PRP/you have/VBP/have an/DT/an ideal/NN/ideal hash/NN/hash function/NN/function which/WDT/which you/PRP/you can/MD/can not/RB/not really/RB/really have/NNP/have. what/WP/what if/IN/if we/PRP/we did/VBD/did not/RB/not know/VB/know how/WRB/how many/JJ/many elements/NNS/elements we/PRP/we have/VBP/have to/TO/to insert/VB/insert then/RB/then what/WP/what should/MD/should we/PRP/we do/VBP/do ?/./? with/IN/with what/WP/what size/NN/size our/PRP$/our hash/NN/hash table/NN/table should/MD/should start/VB/start ?/./? we/PRP/we used/VBD/used a/DT/a concept/NN/concept of/IN/of growable/JJ/growable stack/NN/stack /,/, so/RB/so the/DT/the same/JJ/same idea/NN/idea is/VBZ/is used/VBN/used in/IN/in many/JJ/many of/IN/of this/DT/this data/NN/data structures/NNP/structures. you/PRP/you start/VB/start with/IN/with some/DT/some thing/NN/thing small/JJ/small and/CC/and if/IN/if the/DT/the number/NN/number of/IN/of elements/NNS/elements you/PRP/you inserting/VBG/inserting becomes/NNS/becomes so/RB/so large/JJ/large that/IN/that the/DT/the sizes/NNS/sizes of/IN/of linked/VBN/linked list/NN/list become/NN/become very/RB/very large/JJ/large /,/, then/RB/then it/PRP/it perhaps/RB/perhaps time/VB/time to/TO/to move/VB/move the/DT/the entire/JJ/entire set/NN/set of/IN/of element/NN/element in/IN/in to/TO/to a/DT/a larger/JJR/larger hash/NN/hash table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 15/CD/15 /CD/) either/NN/either you/PRP/you have/VB/have to/TO/to compute/VB/compute a/DT/a new/JJ/new hash/NN/hash function/NN/function or/CC/or we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to modify/VB/modify these/DT/these things/NNP/things. how/WRB/how you/PRP/you can/MD/can do/VB/do small/JJ/small modification/NN/modification to/TO/to the/DT/the hash/NN/hash function/NN/function so/RB/so that/IN/that you/PRP/you can/MD/can put/VB/put it/PRP/it in/IN/in the/DT/the larger/JJR/larger hash/NN/hash table/NNP/table. one/CD/one should/MD/should design/VB/design your/PRP$/your hash/NN/hash function/NN/function keeping/VBG/keeping in/IN/in mind/NN/mind that/IN/that you/PRP/you might/MD/might have/VB/have to/TO/to go/VB/go from/IN/from a/DT/a smaller/JJR/smaller table/JJ/table to/TO/to a/DT/a larger/JJR/larger table/JJ/table and/CC/and even/RB/even to/TO/to a/DT/a larger/JJR/larger table/JJ/table and/CC/and so/RB/so on/NNP/on. what/WP/what will/MD/will happen/VB/happen to/TO/to the/DT/the space/NN/space when/WRB/when the/DT/the number/NN/number of/IN/of hash/NN/hash table/NN/table slots/NNS/slots was/VBD/was propositional/JJ/propositional to/TO/to the/DT/the number/NN/number of/IN/of elements/NNS/elements ?/./? it/PRP/it depends/VBZ/depends upon/IN/upon the/DT/the big-oh/NNP/big-oh. let/NN/let us/PRP/us say/VBP/say we/PRP/we pick/VBP/pick the/DT/the number/NN/number of/IN/of hash/NN/hash table/NN/table slots/NNS/slots to/TO/to be/VB/be equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of elements/NNP/elements. there/EX/there is/VBZ/is no/DT/no problem/NN/problem /,/, suppose/NN/suppose n/NN/n was/VBD/was a/DT/a 1000/CD/1000 and/CC/and m/NN/m was/VBD/was also/RB/also a/DT/a 1000/CD/1000 /,/, this/DT/this hash/NN/hash table/NN/table can/MD/can accommodate/VB/accommodate any/DT/any number/NN/number of/IN/of elements/NNP/elements. it/PRP/it not/RB/not just/RB/just that/WDT/that it/PRP/it can/MD/can accommodate/VB/accommodate only/RB/only 1000/CD/1000 elements/NNP/elements. why/WRB/why because/IN/because in/IN/in the/DT/the linked/VBN/linked list/NN/list you/PRP/you can/MD/can attach/VB/attach any/DT/any number/NN/number of/IN/of elements/NNS/elements that/WDT/that come/-NONE-/come. it/PRP/it is/VBZ/is just/RB/just that/IN/that performance/NN/performance of/IN/of the/DT/the hash/NN/hash table/NN/table would/MD/would deteriorate/VB/deteriorate if/IN/if you/PRP/you had/VBD/had 10,000/CD/10,000 elements/NNS/elements coming/VBG/coming because/IN/because then/RB/then each/DT/each linked/VBN/linked list/NN/list would/MD/would be/VB/be of/IN/of size/NN/size 10/CD/10 roughly/RB/roughly /,/, may/MD/may be/VB/be more/RBR/more or/CC/or may/MD/may be/VB/be less/NNP/less. on/IN/on an/DT/an average/JJ/average the/DT/the linked/VBN/linked list/NN/list length/NN/length would/MD/would be/VB/be 10/CD/10 in/IN/in that/DT/that case/NN/case it/PRP/it make/VBP/make sense/NN/sense to/TO/to move/VB/move to/TO/to a/DT/a larger/JJR/larger hash/NN/hash table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 25/CD/25 /CD/) if/IN/if you/PRP/you know/VBP/know that/IN/that the/DT/the number/NN/number of/IN/of elements/NNS/elements is/VBZ/is only/RB/only 1000/CD/1000 and/CC/and you/PRP/you create/VB/create a/DT/a hash/NN/hash table/NN/table of/IN/of size/NN/size 10,000/CD/10,000 then/RB/then there/RB/there is/VBZ/is wastage/NN/wastage of/IN/of space/NNP/space. you/PRP/you should/MD/should always/RB/always start/VB/start with/IN/with a/DT/a small/JJ/small hash/NN/hash table/JJ/table and/CC/and if/IN/if need/NN/need be/VB/be grow/NN/grow it/PRP/it /,/, rather/RB/rather than/IN/than starting/VBG/starting with/IN/with a/DT/a very/RB/very large/JJ/large hash/NN/hash table/NN/table and/CC/and having/VBG/having wastage/NN/wastage of/IN/of space/NNP/space. today/NN/today we/PRP/we saw/VBD/saw binary/JJ/binary search/NN/search which/WDT/which many/JJ/many of/IN/of you/PRP/you have/VBP/have seen/VBN/seen before/IN/before /,/, we/PRP/we also/RB/also saw/VBD/saw a/DT/a little/RB/little bit/NN/bit of/IN/of hashing/VBG/hashing and/CC/and we/PRP/we saw/VBD/saw the/DT/the dictionary/JJ/dictionary abstract/NN/abstract data/NNS/data type/NNP/type. in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to continue/VB/continue with/IN/with hashing/JJ/hashing c/NN/c concepts/NNS/concepts of/IN/of good/JJ/good hash/NN/hash function/NN/function and/CC/and see/VB/see other/JJ/other ways/NNS/ways of/IN/of resolving/VBG/resolving collision/NNP/collision. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 5/CD/5 hashing/VBG/hashing /CD/( contd/NNP/contd. /NNP/) today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to continue/VB/continue our/PRP$/our discussion/NN/discussion on/IN/on hashing/NNP/hashing. in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we saw/VBD/saw about/IN/about the/DT/the hash/NN/hash table/NN/table /,/, the/DT/the concept/NN/concept of/IN/of hashing/VBG/hashing and/CC/and also/RB/also saw/VBD/saw how/WRB/how to/TO/to resolve/VB/resolve collision/NN/collision in/IN/in hashing/NN/hashing using/VBG/using linked/VBN/linked list/NNP/list. that/IN/that method/NN/method of/IN/of collision/NN/collision is/VBZ/is also/RB/also called/VBN/called chaining/NNP/chaining. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at 2/CD/2 other/JJ/other methods/NNS/methods for/IN/for collision/NN/collision resolution/NN/resolution /,/, linear/JJ/linear probing/NN/probing and/CC/and double/JJ/double hashing/NNP/hashing. we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to spend/VB/spend some/DT/some more/RBR/more time/NN/time discussing/VBG/discussing how/WRB/how the/DT/the good/JJ/good hash/NN/hash function/NN/function should/MD/should look/VB/look like/NNP/like. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 34/CD/34 /CD/) what/WP/what is/VBZ/is the/DT/the good/JJ/good hash/NN/hash function/NN/function ?/./? the/DT/the function/NN/function which/WDT/which can/MD/can be/VB/be computed/VBN/computed quickly/RB/quickly and/CC/and as/IN/as said/VBD/said in/IN/in the/DT/the previous/JJ/previous class/NN/class /,/, it/PRP/it should/MD/should distribute/VB/distribute the/DT/the keys/NNS/keys uniformly/RB/uniformly over/IN/over the/DT/the hash/NN/hash table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 53/CD/53 /CD/) all/DT/all the/DT/the keys/NNS/keys should/MD/should not/RB/not get/VB/get mapped/VBN/mapped to/TO/to the/DT/the same/JJ/same location/NN/location because/IN/because then/RB/then the/DT/the performance/NN/performance of/IN/of hashing/VBG/hashing would/MD/would become/VB/become as/RB/as worse/JJR/worse as/IN/as that/DT/that of/IN/of a/DT/a linked/VBN/linked list/NNP/list. good/JJ/good hash/NN/hash functions/NNS/functions are/VBP/are very/RB/very rare/JJ/rare and/CC/and there/EX/there is/VBZ/is a/DT/a famous/JJ/famous paradox/NN/paradox called/VBN/called birthday/NN/birthday paradox/NNP/paradox. there/EX/there would/MD/would be/VB/be about/RB/about 35/CD/35 or/CC/or more/JJR/more students/NNS/students sitting/VBG/sitting in/IN/in the/DT/the class/NNP/class. there/RB/there is/VBZ/is a/DT/a very/RB/very high/JJ/high probability/NN/probability and/CC/and you/PRP/you can/MD/can actually/RB/actually compute/VB/compute that/IN/that probability/NN/probability in/IN/in which/WDT/which 2/CD/2 of/IN/of you/PRP/you would/MD/would have/VB/have the/DT/the same/JJ/same birthday/NNP/birthday. although/IN/although you/PRP/you would/MD/would think/VB/think that/IN/that there/EX/there are/VBP/are 365/CD/365 days/NNS/days in/IN/in the/DT/the year/NN/year and/CC/and if/IN/if each/DT/each one/CD/one of/IN/of you/PRP/you were/VBD/were to/TO/to have/VB/have one/CD/one of/IN/of these/DT/these days/NNS/days as/IN/as a/DT/a birthday/NN/birthday then/RB/then there/RB/there is/VBZ/is very/RB/very small/JJ/small probability/NN/probability that/WDT/that 2/CD/2 would/MD/would have/VB/have the/DT/the same/JJ/same day/NNP/day. but/CC/but that/IN/that is/VBZ/is not/RB/not the/DT/the case/NN/case /,/, even/RB/even with/IN/with just/RB/just 35/CD/35 people/NNS/people you/PRP/you would/MD/would have/VB/have fairly/RB/fairly high/JJ/high probability/NN/probability that/WDT/that 2/CD/2 people/NNS/people would/MD/would have/VB/have same/JJ/same birthdays/NNP/birthdays. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 10/CD/10 /CD/) the/DT/the same/JJ/same kind/NN/kind of/IN/of thing/NN/thing is/VBZ/is happening/VBG/happening here/NNP/here. your/PRP$/your days/NNS/days of/IN/of the/DT/the year/NN/year corresponding/VBG/corresponding to/TO/to your/PRP$/your slots/NNS/slots in/IN/in the/DT/the hash/NN/hash table/NN/table and/CC/and even/RB/even if/IN/if i/PRP/i were/VBD/were to/TO/to take/VB/take a/DT/a key/JJ/key and/CC/and put/VBD/put it/PRP/it randomly/RB/randomly in/IN/in one/CD/one of/IN/of those/DT/those slots/NNS/slots there/RB/there is/VBZ/is very/RB/very high/JJ/high probability/NN/probability that/WDT/that 2/CD/2 keys/NNS/keys would/MD/would end/VB/end up/RP/up in/IN/in the/DT/the same/JJ/same slot/NN/slot that/IN/that is/VBZ/is birthday/NN/birthday paradox/NNP/paradox. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 50/CD/50 /CD/) collisions/NNS/collisions may/MD/may take/VB/take place/NN/place in/IN/in any/DT/any kind/NN/kind of/IN/of hash/NN/hash function/NN/function you/PRP/you use/NNP/use. then/RB/then there/RB/there is/VBZ/is also/RB/also a/DT/a problem/NN/problem of/IN/of how/WRB/how to/TO/to deal/VB/deal with/IN/with non-integer/JJ/non-integer keys/NNP/keys. in/IN/in fact/NN/fact we/PRP/we saw/VBD/saw an/DT/an example/NN/example in/IN/in the/DT/the last/JJ/last class/NN/class where/WRB/where the/DT/the keys/NNS/keys were/VBD/were telephone/NN/telephone numbers/NNS/numbers and/CC/and we/PRP/we had/VBD/had returned/VBN/returned the/DT/the telephone/NN/telephone numbers/NNS/numbers with/IN/with hyphen/NNP/hyphen. how/WRB/how did/VBD/did we/PRP/we treat/VB/treat telephone/NN/telephone number/NN/number as/IN/as an/DT/an integer/NN/integer ?/./? we/PRP/we just/RB/just dropped/VBD/dropped the/DT/the hyphen/NN/hyphen in/IN/in between/IN/between and/CC/and then/RB/then we/PRP/we thought/VBD/thought of/IN/of it/PRP/it as/IN/as an/DT/an integer/NNP/integer. you/PRP/you are/VBP/are going/VBG/going to/TO/to see/VB/see some/DT/some more/RBR/more techniques/NNS/techniques of/IN/of converting/VBG/converting non-integers/NNS/non-integers keys/NNS/keys in/IN/in to/TO/to integer/JJR/integer ones/NNP/ones. the/DT/the other/JJ/other example/NN/example that/IN/that i/PRP/i had/VBD/had taken/VBN/taken in/IN/in the/DT/the last/JJ/last class/NN/class was/VBD/was your/PRP$/your entry/NN/entry number/NN/number where/WRB/where again/RB/again the/DT/the key/JJ/key was/VBD/was a/DT/a non-integer/JJ/non-integer because/IN/because it/PRP/it had/VBD/had c/NN/c s/NNS/s y/VBP/y or/CC/or some/DT/some other/JJ/other thing/NNP/thing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 22/CD/22 /CD/) we/PRP/we have/VBP/have to/TO/to convert/VB/convert in/IN/in to/TO/to integers/NNS/integers and/CC/and what/WP/what we/PRP/we did/VBD/did in/IN/in the/DT/the last/JJ/last class/NN/class was/VBD/was as/IN/as i/PRP/i said/VBD/said /,/, those/DT/those keys/NNS/keys are/VBP/are just/RB/just going/VBG/going to/TO/to take/VB/take the/DT/the last/JJ/last 2/CD/2 digits/NNS/digits as/IN/as the/DT/the hash/NN/hash function/NN/function value/NNP/value. we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see some/DT/some more/RBR/more techniques/NNS/techniques of/IN/of converting/VBG/converting non-integer/JJ/non-integer keys/NNS/keys into/IN/into integer/NN/integer ones/NNP/ones. hash/NN/hash function/NN/function can/MD/can actually/RB/actually be/VB/be thought/VBN/thought of/IN/of as/RB/as being/VBG/being in/IN/in 2/CD/2 parts/NNP/parts. there/RB/there is/VBZ/is a/DT/a hash/NN/hash code/NN/code map/NN/map and/CC/and there/EX/there is/VBZ/is a/DT/a compression/NN/compression map/NN/map and/CC/and these/DT/these 2/CD/2 together/NN/together make/NN/make up/IN/up a/DT/a hash/NN/hash function/NNP/function. a/DT/a hash/NN/hash function/NN/function is/VBZ/is basically/RB/basically a/DT/a mapping/NN/mapping of/IN/of keys/NNS/keys to/TO/to indices/NNS/indices of/IN/of a/DT/a hash/NN/hash table/NNP/table. your/PRP$/your hash/NN/hash code/NN/code map/NN/map /,/, maps/RB/maps the/DT/the key/JJ/key to/TO/to an/DT/an integer/NNP/integer. if/IN/if your/PRP$/your key/JJ/key is/VBZ/is already/RB/already an/DT/an integer/NN/integer then/RB/then there/RB/there is/VBZ/is no/DT/no need/NN/need for/IN/for this/DT/this but/CC/but when/WRB/when your/PRP$/your keys/NNS/keys are/VBP/are not/RB/not integer/JJR/integer keys/NNS/keys then/RB/then you/PRP/you will/MD/will have/VB/have to/TO/to 1stconvert/CD/1stconvert them/PRP/them in/IN/in to/TO/to integer/JJR/integer keys/NNP/keys. key/JJ/key ?/./? integer/NN/integer /,/, this/DT/this integer/NN/integer could/MD/could be/VB/be from/IN/from an/DT/an arbitrary/JJ/arbitrary range/NN/range but/CC/but we/PRP/we need/VBP/need to/TO/to bring/VB/bring it/PRP/it to/TO/to the/DT/the size/NN/size of/IN/of our/PRP$/our hash/NN/hash table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 17/CD/17 /CD/) if/IN/if n/NN/n is/VBZ/is my/PRP$/my hash/NN/hash table/NN/table then/RB/then i/PRP/i need/VBP/need to/TO/to bring/VB/bring this/DT/this integer/NN/integer to/TO/to the/DT/the range/NN/range of/IN/of 0/-NONE-/0 through/IN/through n-1/-NONE-/n-1 /,/, so/IN/so that/IN/that it/PRP/it can/MD/can be/VB/be mapped/VBN/mapped to/TO/to an/DT/an index/NN/index of/IN/of my/PRP$/my table/NNP/table. that/IN/that part/NN/part we/PRP/we will/MD/will call/VB/call as/IN/as compression/NN/compression map/NNP/map. we/PRP/we will/MD/will see/VB/see what/WP/what kinds/NNS/kinds of/IN/of functions/NNS/functions are/VBP/are used/VBN/used for/IN/for hash/NN/hash code/NN/code map/NN/map and/CC/and compression/NN/compression map/NNP/map. another/DT/another important/JJ/important requirement/NN/requirement of/IN/of hash/NN/hash function/NN/function is/VBZ/is that/IN/that if/IN/if 1/CD/1 key/JJ/key gets/NNS/gets mapped/VBD/mapped to/TO/to a/DT/a certain/JJ/certain index/NN/index then/RB/then the/DT/the next/JJ/next time/NN/time when/WRB/when i/PRP/i want/VBP/want to/TO/to map/VB/map a/DT/a key/JJ/key it/PRP/it should/MD/should get/VB/get mapped/VBN/mapped to/TO/to the/DT/the same/JJ/same indexed/VBN/indexed location/NNP/location. it/PRP/it is/VBZ/is not/RB/not like/IN/like /,/, the/DT/the next/JJ/next time/NN/time it/PRP/it should/MD/should get/VB/get mapped/VBN/mapped to/TO/to some/DT/some other/JJ/other indexed/VBN/indexed location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 03/CD/03 /CD/) in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we took/VBD/took an/DT/an example/NN/example of/IN/of key/JJ/key which/WDT/which was/VBD/was 2004sa10110/CD/2004sa10110 and/CC/and we/PRP/we mapped/VBD/mapped to/TO/to location/NN/location 10/CD/10. i/PRP/i can/MD/can not/RB/not have/VB/have a/DT/a hash/NN/hash function/NN/function which/WDT/which sometimes/RB/sometimes maps/VBZ/maps to/TO/to location/NN/location 10/CD/10 and/CC/and sometimes/RB/sometimes maps/RB/maps to/TO/to location/NN/location 13/CD/13. there/EX/there could/MD/could not/RB/not be/VB/be any/DT/any kind/NN/kind of/IN/of randomization/NN/randomization happening/VBG/happening there/NNP/there. why/WRB/why is/VBZ/is that/IN/that because/IN/because when/WRB/when i/PRP/i insert/VBP/insert it/PRP/it /,/, i/PRP/i may/MD/may be/VB/be mapped/VBN/mapped to/TO/to location/NN/location 10/CD/10. when/WRB/when i/PRP/i try/VBP/try to/TO/to retrieve/VB/retrieve or/CC/or search/NN/search for/IN/for it/PRP/it then/RB/then if/IN/if it/PRP/it gets/VBZ/gets mapped/VBN/mapped to/TO/to location/NN/location 13/CD/13 /,/, i/PRP/i would/MD/would not/RB/not know/VB/know the/DT/the location/NN/location of/IN/of the/DT/the key/NNP/key. it/PRP/it should/MD/should map/VB/map equal/JJ/equal keys/NNS/keys to/TO/to the/DT/the same/JJ/same indices/NNS/indices and/CC/and of/IN/of course/NN/course and/CC/and we/PRP/we should/MD/should try/VB/try to/TO/to minimize/VB/minimize the/DT/the probability/NN/probability of/IN/of collisions/NNP/collisions. let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the popular/JJ/popular hash-code/NN/hash-code maps/NNP/maps. the/DT/the hash-code/JJ/hash-code map/NN/map is/VBZ/is the/DT/the part/NN/part which/WDT/which converts/NNS/converts your/PRP$/your key/JJ/key to/TO/to an/DT/an integer/NNP/integer. one/CD/one thing/NN/thing is/VBZ/is that/IN/that we/PRP/we could/MD/could just/RB/just take/VB/take anything/NN/anything as/IN/as the/DT/the bit/NN/bit pattern/NN/pattern and/CC/and interpret/NN/interpret it/PRP/it as/IN/as an/DT/an integer/NNP/integer. if/IN/if you/PRP/you have/VBP/have a/DT/a numeric/JJ/numeric type/NN/type of/IN/of 32/CD/32 bits/NNS/bits or/CC/or less/JJR/less /,/, we/PRP/we can/MD/can reinterpret/VB/reinterpret the/DT/the bits/NNS/bits of/IN/of the/DT/the number/NN/number as/IN/as an/DT/an integer/NNP/integer. your/PRP$/your key/JJ/key which/WDT/which has/VBZ/has more/JJR/more than/IN/than 32/CD/32 bits/NNS/bits in/IN/in it/PRP/it which/WDT/which is/VBZ/is a/DT/a long/JJ/long or/CC/or a/DT/a double/JJ/double real/JJ/real number/NN/number which/WDT/which takes/VBZ/takes more/JJR/more than/IN/than 4/CD/4 bytes/NNS/bytes /,/, then/RB/then you/PRP/you can/MD/can take/VB/take it/PRP/it in/IN/in chunks/NNS/chunks of/IN/of 32/CD/32 bits/NNS/bits and/CC/and add/VB/add them/PRP/them up/NNP/up. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 14/CD/14 /CD/) take/NN/take the/DT/the first/JJ/first 4/CD/4 bytes/NNS/bytes and/CC/and add/VB/add the/DT/the next/JJ/next 4/CD/4 bytes/NNS/bytes to/TO/to it/PRP/it and/CC/and so/RB/so on/IN/on to/TO/to get/VB/get eventually/RB/eventually some/DT/some 32/CD/32 bit/NN/bit and/CC/and that/IN/that could/MD/could be/VB/be an/DT/an integer/NN/integer you/PRP/you are/VBP/are working/VBG/working with/NNP/with. such/JJ/such a/DT/a kind/NN/kind of/IN/of tree/NN/tree could/MD/could also/RB/also be/VB/be used/VBN/used to/TO/to compute/VB/compute the/DT/the hash/NN/hash code/NN/code map/NN/map of/IN/of a/DT/a string/NNP/string. suppose/NN/suppose i/PRP/i was/VBD/was using/VBG/using the/DT/the key/JJ/key as/IN/as your/PRP$/your name/NNP/name. given/NN/given a/DT/a particular/JJ/particular name/NN/name /,/, let/VB/let us/PRP/us say/VB/say ankur/PRP$/ankur i/PRP/i want/VBP/want to/TO/to convert/VB/convert it/PRP/it to/TO/to an/DT/an integer/NNP/integer. one/CD/one possibility/NN/possibility would/MD/would be/VB/be take/VB/take the/DT/the ascii/NN/ascii code/NN/code of/IN/of a/DT/a /,/, n/NN/n /,/, k/NN/k /,/, u/NN/u /,/, r/NN/r add/VBD/add them/PRP/them up/RP/up and/CC/and that/IN/that i/PRP/i will/MD/will interpret/VB/interpret as/IN/as an/DT/an integer/NNP/integer. why/WRB/why is/VBZ/is this/DT/this a/DT/a bad/JJ/bad strategy/NN/strategy ?/./? why/WRB/why would/MD/would the/DT/the number/NN/number of/IN/of collisions/NNS/collisions be/VB/be high/JJ/high ?/./? why/WRB/why would/MD/would the/DT/the sum/NN/sum of/IN/of 2/CD/2 different/JJ/different names/NNS/names be/VB/be the/DT/the same/JJ/same ?/./? only/RB/only if/IN/if the/DT/the order/NN/order is/VBZ/is different/JJ/different and/CC/and that/IN/that happens/NNS/happens for/IN/for many/JJ/many different/JJ/different words/NNP/words. it/PRP/it is/VBZ/is not/RB/not the/DT/the case/NN/case for/IN/for the/DT/the names/NNS/names /,/, but/CC/but many/JJ/many words/NNS/words in/IN/in the/DT/the english/JJ/english dictionary/NN/dictionary would/MD/would be/VB/be obtained/VBN/obtained from/IN/from the/DT/the same/JJ/same letters/NNP/letters. if/IN/if you/PRP/you have/VBP/have 2/CD/2 words/NNS/words such/JJ/such that/IN/that the/DT/the letters/NNS/letters was/VBD/was same/JJ/same as/IN/as g/NN/g o/NN/o d/NN/d and/CC/and d/VBD/d o/NN/o g/NN/g /,/, then/RB/then when/WRB/when you/PRP/you sum/VBP/sum up/RP/up the/DT/the ascii/NN/ascii values/NNS/values they/PRP/they will/MD/will be/VB/be going/VBG/going to/TO/to the/DT/the same/JJ/same location/NN/location only/NNP/only. we/PRP/we have/VBP/have to/TO/to avoid/VB/avoid such/JJ/such a/DT/a kind/NN/kind of/IN/of things/NNP/things. even/RB/even if/IN/if the/DT/the words/NNS/words were/VBD/were not/RB/not the/DT/the same/JJ/same but/CC/but a/DT/a was/VBD/was replaced/VBN/replaced by/IN/by b/NN/b and/CC/and n/NN/n was/VBD/was replaced/VBN/replaced by/IN/by m/NN/m even/RB/even then/RB/then we/PRP/we will/MD/will end/VB/end up/RP/up with/IN/with the/DT/the same/NNP/same. these/DT/these are/VBP/are all/DT/all the/DT/the reasons/NNS/reasons for/IN/for why/WRB/why it/PRP/it is/VBZ/is not/RB/not a/DT/a great/JJ/great strategy/NNP/strategy. especially/RB/especially when/WRB/when you/PRP/you are/VBP/are trying/VBG/trying to/TO/to convert/VB/convert character/NN/character strings/NNS/strings in/IN/in to/TO/to an/DT/an integer/NNP/integer. one/CD/one technique/NN/technique used/VBN/used in/IN/in such/JJ/such settings/NNS/settings is/VBZ/is called/VBN/called as/RB/as polynomial/JJ/polynomial accumulation/NNP/accumulation. you/PRP/you have/VBP/have a/DT/a certain/JJ/certain string/NN/string and/CC/and is/VBZ/is the/DT/the ascii/NN/ascii code/NN/code for/IN/for the/DT/the 1st/CD/1st character/NN/character of/IN/of the/DT/the string/NN/string and/CC/and is/VBZ/is the/DT/the ascii/NN/ascii code/NN/code for/IN/for the/DT/the 2nd/CD/2nd character/NN/character and/CC/and so/RB/so on/NNP/on. you/PRP/you are/VBP/are going/VBG/going to/TO/to think/VB/think of/IN/of it/PRP/it as/IN/as a/DT/a polynomial/JJ/polynomial whose/NN/whose coefficients/NNS/coefficients are/VBP/are /,/, up/RB/up to/TO/to /./. the/DT/the above/NN/above given/VBN/given expression/NN/expression is/VBZ/is your/PRP$/your polynomial/JJ/polynomial and/CC/and you/PRP/you are/VBP/are going/VBG/going to/TO/to evaluate/VB/evaluate this/DT/this polynomial/JJ/polynomial at/IN/at a/DT/a certain/JJ/certain value/NN/value of/IN/of x/NNP/x. the/DT/the evaluated/VBN/evaluated value/NN/value is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the integer/NN/integer corresponding/VBG/corresponding to/TO/to this/DT/this /NN/( /:/) string/NNP/string. that/IN/that integer/JJR/integer might/MD/might be/VB/be from/IN/from a/DT/a large/JJ/large range/NN/range then/RB/then we/PRP/we will/MD/will use/VB/use the/DT/the compression/NN/compression map/NN/map to/TO/to map/VB/map it/PRP/it to/TO/to the/DT/the table/NNP/table. but/CC/but 1stwe/CD/1stwe are/VBP/are looking/VBG/looking at/IN/at the/DT/the hash/NN/hash code/NN/code map/NN/map were/VBD/were in/IN/in we/PRP/we are/VBP/are trying/VBG/trying to/TO/to convert/VB/convert a/DT/a string/NN/string or/CC/or a/DT/a non-integer/JJ/non-integer data/NNS/data in/IN/in to/TO/to an/DT/an integer/NNP/integer. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at the/DT/the setting/NN/setting where/WRB/where the/DT/the string/NN/string we/PRP/we have/VBP/have is/VBZ/is this/DT/this /NN/( /:/) and/CC/and we/PRP/we are/VBP/are trying/VBG/trying to/TO/to convert/VB/convert it/PRP/it to/TO/to an/DT/an integer/NNP/integer. evaluate/NN/evaluate the/DT/the below/NN/below given/VBN/given polynomial/JJ/polynomial at/IN/at some/DT/some integer/NN/integer value/NNP/value. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 24/CD/24 /CD/) the/DT/the value/NN/value of/IN/of x/NN/x has/VBZ/has been/VBN/been the/DT/the experimental/JJ/experimental stuff/NN/stuff /,/, people/NNS/people have/VBP/have looked/VBN/looked at/IN/at and/CC/and found/VBN/found that/IN/that if/IN/if you/PRP/you work/VBP/work with/IN/with /CD/( x/NN/x =/:/= 33/CD/33 /,/, 37/CD/37 /,/, 39/CD/39 or/CC/or 41/CD/41 /CD/) these/DT/these values/NNS/values and/CC/and if/IN/if you/PRP/you take/VBP/take an/DT/an english/JJ/english dictionary/NN/dictionary with/IN/with about/RB/about 50/CD/50 /,/, 000/CD/000 words/NNS/words in/IN/in it/PRP/it and/CC/and use/VB/use this/DT/this technique/NN/technique to/TO/to convert/VB/convert your/PRP$/your words/NNS/words in/IN/in to/TO/to integer/NNP/integer. then/RB/then you/PRP/you will/MD/will not/RB/not get/VB/get too/RB/too many/JJ/many collisions/NNP/collisions. at/IN/at a/DT/a particular/JJ/particular time/NN/time you/PRP/you will/MD/will have/VB/have at/IN/at most/JJS/most 6/CD/6 collisions/NNP/collisions. there/RB/there is/VBZ/is no/DT/no theory/NN/theory behind/IN/behind it/PRP/it /,/, this/DT/this has/VBZ/has been/VBN/been observed/VBN/observed experimentally/NNP/experimentally. this/DT/this is/VBZ/is an/DT/an experimental/JJ/experimental study/NN/study in/IN/in favour/PRP$/favour of/IN/of this/DT/this kind/NN/kind of/IN/of a/DT/a hash/NN/hash code/NN/code map/NNP/map. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 31/CD/31 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at some/DT/some compression/NN/compression map/NNP/map. given/NN/given an/DT/an integer/NN/integer you/PRP/you have/VB/have to/TO/to map/VB/map it/PRP/it to/TO/to the/DT/the small/JJ/small range/NN/range of/IN/of your/PRP$/your table/NNP/table. one/CD/one natural/JJ/natural thing/NN/thing would/MD/would be/VB/be that/IN/that k/NN/k is/VBZ/is your/PRP$/your integer/NN/integer and/CC/and your/PRP$/your table/JJ/table is/VBZ/is of/IN/of size/NN/size let/NN/let us/PRP/us say/VBP/say little/JJ/little m/NNP/m. just/RB/just do/VBP/do k/NN/k mod/NN/mod m/NN/m and/CC/and k/NN/k mod/NN/mod m/NN/m will/MD/will give/VB/give you/PRP/you some/DT/some integer/NN/integer in/IN/in the/DT/the range/NN/range 0/-NONE-/0 through/IN/through m-1/-NONE-/m-1 where/WRB/where k/NN/k is/VBZ/is the/DT/the key/JJ/key and/CC/and m/NN/m is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the table/NNP/table. suppose/NN/suppose you/PRP/you were/VBD/were to/TO/to choose/VB/choose your/PRP$/your m/NN/m and/CC/and let/VB/let us/PRP/us say/VB/say your/PRP$/your table/JJ/table is/VBZ/is of/IN/of size/NN/size 1024/CD/1024 /,/, m/NN/m is/VBZ/is basically/RB/basically /./. when/WRB/when i/PRP/i am/VBP/am taking/VBG/taking some/DT/some integer/NN/integer mod/NN/mod then/RB/then essentially/RB/essentially that/IN/that means/NNS/means i/PRP/i am/VBP/am taking/VBG/taking the/DT/the last/JJ/last 10/CD/10 bits/NNS/bits of/IN/of that/DT/that integer/NNP/integer. write/NN/write the/DT/the integer/NN/integer in/IN/in its/PRP$/its binary/JJ/binary representation/NN/representation and/CC/and then/RB/then when/WRB/when i/PRP/i am/VBP/am taking/VBG/taking mod/NN/mod 2/CD/2 that/WDT/that means/VBZ/means i/PRP/i am/VBP/am taking/VBG/taking the/DT/the last/JJ/last bit/NN/bit of/IN/of the/DT/the integer/NNP/integer. if/IN/if it/PRP/it is/VBZ/is 0/-NONE-/0 then/RB/then i/PRP/i get/VBP/get 0/-NONE-/0 always/RB/always /,/, if/IN/if it/PRP/it is/VBZ/is 1/CD/1 i/PRP/i get/VBP/get 1/CD/1. if/IN/if i/PRP/i am/VBP/am taking/VBG/taking mod/NN/mod 4/CD/4 /,/, i/PRP/i am/VBP/am getting/VBG/getting the/DT/the last/JJ/last 2/CD/2 bits/NNP/bits. so/RB/so if/IN/if i/PRP/i am/VBP/am taking/VBG/taking mod/NN/mod then/RB/then i/PRP/i am/VBP/am getting/VBG/getting the/DT/the last/JJ/last 10/CD/10 bits/NNP/bits. all/DT/all the/DT/the integers/NNS/integers which/WDT/which have/VBP/have the/DT/the same/JJ/same last/JJ/last 10/CD/10 bits/NNS/bits would/MD/would get/VB/get mapped/VBN/mapped to/TO/to the/DT/the same/JJ/same location/NNP/location. this/DT/this is/VBZ/is bad/JJ/bad because/IN/because we/PRP/we are/VBP/are forgetting/VBG/forgetting the/DT/the other/JJ/other bits/NNS/bits of/IN/of the/DT/the integer/NNP/integer. we/PRP/we are/VBP/are just/RB/just taking/VBG/taking some/DT/some small/JJ/small set/NN/set of/IN/of bits/NNS/bits that/WDT/that is/VBZ/is the/DT/the last/JJ/last 10/CD/10 bits/NNS/bits based/VBN/based on/IN/on the/DT/the hash/NN/hash function/NNP/function. hence/NN/hence one/CD/one should/MD/should not/RB/not do/VB/do such/JJ/such a/DT/a thing/NNP/thing. in/IN/in this/DT/this case/NN/case if/IN/if you/PRP/you are/VBP/are using/VBG/using the/DT/the simple/NN/simple compression/NN/compression map/NN/map then/RB/then you/PRP/you should/MD/should not/RB/not pick/VB/pick up/RP/up the/DT/the size/NN/size of/IN/of your/PRP$/your hash/NN/hash table/NN/table to/TO/to be/VB/be some/DT/some power/NN/power of/IN/of 2/CD/2. in/IN/in fact/NN/fact it/PRP/it helps/VBZ/helps /,/, if/IN/if you/PRP/you take/VBP/take the/DT/the size/NN/size of/IN/of the/DT/the hash/NN/hash table/NN/table to/TO/to be/VB/be a/DT/a prime/JJ/prime number/NNP/number. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 24/CD/24 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at an/DT/an example/NNP/example. suppose/NN/suppose i/PRP/i had/VBD/had 2000/CD/2000 strings/NNS/strings and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to put/VB/put it/PRP/it in/IN/in hash/NN/hash table/NNP/table. i/PRP/i will/MD/will try/VB/try to/TO/to pick/VB/pick the/DT/the size/NN/size of/IN/of my/PRP$/my hash/NN/hash table/NN/table let/NN/let us/PRP/us say/VBP/say at/IN/at 701/CD/701 which/WDT/which is/VBZ/is the/DT/the prime/JJ/prime number/NNP/number. this/DT/this will/MD/will ensure/VB/ensure that/IN/that on/IN/on an/DT/an average/JJ/average i/NN/i would/MD/would see/VB/see only/RB/only 3/CD/3 strings/NNS/strings per/IN/per location/NN/location that/IN/that is/VBZ/is 701/CD/701 x/NN/x 3/CD/3 is/VBZ/is roughly/RB/roughly 2000/CD/2000. in/IN/in my/PRP$/my chaining/NN/chaining /,/, i/PRP/i would/MD/would have/VB/have 3/CD/3 as/IN/as the/DT/the length/NN/length of/IN/of the/DT/the linked/VBN/linked list/NNP/list. one/CD/one important/JJ/important thing/NN/thing is/VBZ/is that/IN/that one/CD/one should/MD/should not/RB/not pick/VB/pick up/RP/up the/DT/the size/NN/size of/IN/of the/DT/the hash/NN/hash table/NN/table close/NN/close to/TO/to a/DT/a power/NN/power of/IN/of 2/CD/2 /,/, because/IN/because the/DT/the same/JJ/same kind/NN/kind of/IN/of effect/NN/effect will/MD/will start/VB/start happening/VBG/happening when/WRB/when you/PRP/you have/VBP/have the/DT/the size/NN/size of/IN/of the/DT/the hash/NN/hash table/NN/table to/TO/to be/VB/be exactly/RB/exactly the/DT/the power/NN/power of/IN/of 2/CD/2. if/IN/if you/PRP/you are/VBP/are going/VBG/going to/TO/to use/VB/use that/IN/that kind/NN/kind of/IN/of a/DT/a compression/NN/compression map/NN/map which/WDT/which is/VBZ/is just/RB/just key/JJ/key mod/NN/mod m/NN/m /,/, then/RB/then keep/VB/keep in/IN/in mind/NN/mind that/IN/that m/NN/m should/MD/should not/RB/not be/VB/be a/DT/a power/NN/power of/IN/of 2/CD/2 or/CC/or even/RB/even close/JJ/close to/TO/to a/DT/a power/NN/power of/IN/of 2/CD/2 and/CC/and preferably/RB/preferably it/PRP/it should/MD/should be/VB/be a/DT/a prime/JJ/prime number/NNP/number. things/NNS/things do/VBP/do not/RB/not work/VB/work when/WRB/when you/PRP/you see/VBP/see a/DT/a lot/NN/lot of/IN/of collisions/NNS/collisions happening/NNP/happening. lot/NN/lot of/IN/of it/PRP/it depends/VBZ/depends upon/IN/upon the/DT/the data/NNS/data and/CC/and the/DT/the keys/NNS/keys you/PRP/you are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert in/IN/in to/TO/to your/PRP$/your hash/NN/hash table/NNP/table. these/DT/these are/VBP/are generic/JJ/generic principles/NNS/principles which/WDT/which if/IN/if you/PRP/you follow/VBP/follow will/MD/will improve/VB/improve the/DT/the performance/NNP/performance. there/RB/there have/VBP/have been/VBN/been instances/NNS/instances in/IN/in which/WDT/which we/PRP/we did/VBD/did some/DT/some experiment/NN/experiment where/WRB/where it/PRP/it is/VBZ/is better/RBR/better to/TO/to take/VB/take a/DT/a number/NN/number which/WDT/which is/VBZ/is not/RB/not necessarily/RB/necessarily a/DT/a prime/NNP/prime. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 35/CD/35 /CD/) what/WP/what are/VBP/are the/DT/the other/JJ/other kinds/NNS/kinds of/IN/of compression/NN/compression maps/NNS/maps ?/./? there/RB/there is/VBZ/is other/JJ/other compression/NN/compression map/NN/map you/PRP/you can/MD/can use/VB/use /,/, essentially/RB/essentially first/JJ/first i/PRP/i read/VBP/read out/RP/out the/DT/the 2nd/JJ/2nd part/NN/part of/IN/of the/DT/the above/JJ/above slide/NNP/slide. suppose/NN/suppose your/PRP$/your keys/NNS/keys are/VBP/are in/IN/in the/DT/the range/NN/range of/IN/of 0/-NONE-/0 through/IN/through /,/, recall/JJ/recall now/RB/now assuming/VBG/assuming that/IN/that our/PRP$/our keys/NNS/keys are/VBP/are integers/NNS/integers because/IN/because we/PRP/we first/RB/first used/VBD/used the/DT/the hash/NN/hash code/NN/code map/NN/map to/TO/to convert/VB/convert anything/NN/anything that/WDT/that was/VBD/was non-integral/JJ/non-integral in/IN/in to/TO/to an/DT/an integer/NNP/integer. the/DT/the keys/NNS/keys are/VBP/are in/IN/in the/DT/the range/NN/range 0/-NONE-/0 through/IN/through max/NN/max /,/, so/RB/so first/RB/first covert/VB/covert them/PRP/them from/IN/from this/DT/this range/NN/range /:/( 0/-NONE-/0 ?/./? /:/) in/IN/in to/TO/to a/DT/a range/NN/range through/IN/through times/NNS/times a/NNP/a. essentially/RB/essentially we/PRP/we multiply/RB/multiply each/DT/each key/JJ/key with/IN/with a/DT/a where/WRB/where a/DT/a is/VBZ/is some/DT/some number/NN/number between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1. first/JJ/first we/PRP/we converted/VBD/converted to/TO/to this/DT/this range/NN/range /:/( 0/-NONE-/0 ?/./? a/DT/a /NN/) /./. now/RB/now we/PRP/we take/VBP/take the/DT/the fractional/JJ/fractional part/NN/part of/IN/of the/DT/the each/DT/each key/JJ/key that/IN/that corresponds/NNS/corresponds to/TO/to k/VB/k a/DT/a mod/NN/mod 1/CD/1. as/IN/as a/DT/a consequence/NN/consequence we/PRP/we get/VBP/get a/DT/a number/NN/number between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1 because/IN/because we/PRP/we took/VBD/took the/DT/the fractional/JJ/fractional part/NNP/part. we/PRP/we have/VBP/have to/TO/to map/VB/map it/PRP/it in/IN/in to/TO/to the/DT/the range/NN/range 0/-NONE-/0 through/IN/through m-1/-NONE-/m-1 so/RB/so i/PRP/i can/MD/can just/RB/just multiply/RB/multiply that/IN/that number/NN/number i/PRP/i get/VBP/get between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1 by/IN/by m/NNP/m. this/DT/this number/NN/number /:/( ka/NN/ka mod/NN/mod 1/CD/1 /CD/) was/VBD/was between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1 and/CC/and when/WRB/when i/PRP/i multiply/RB/multiply by/IN/by m/NN/m i/PRP/i get/VBP/get fractional/JJ/fractional number/NNP/number. that/IN/that is/VBZ/is why/WRB/why i/PRP/i took/VBD/took the/DT/the floor/NN/floor function/NN/function which/WDT/which means/VBZ/means round/NN/round down/NNP/down. thus/RB/thus i/PRP/i rounded/VBD/rounded that/IN/that number/NN/number down/IN/down to/TO/to the/DT/the nearest/JJS/nearest integer/NNP/integer. i/PRP/i will/MD/will repeat/VB/repeat it/PRP/it again/NNP/again. you/PRP/you first/RB/first took/VBD/took a/DT/a key/JJ/key and/CC/and multiplied/VBD/multiplied by/IN/by a/DT/a where/WRB/where a/DT/a is/VBZ/is some/DT/some number/NN/number between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1. then/RB/then from/IN/from that/DT/that you/PRP/you took/VBD/took the/DT/the fractional/JJ/fractional part/NN/part of/IN/of that/DT/that number/NN/number which/WDT/which is/VBZ/is again/RB/again something/NN/something between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1 and/CC/and then/RB/then you/PRP/you rounded/VBD/rounded it/PRP/it down/NNP/down. this/DT/this is/VBZ/is another/DT/another popular/JJ/popular compression/NN/compression map/NNP/map. you/PRP/you could/MD/could have/VB/have done/VBN/done something/NN/something different/JJ/different /,/, for/IN/for instance/NN/instance i/PRP/i could/MD/could just/RB/just take/VB/take this/DT/this /NN/( 0/-NONE-/0 ?/./? a/DT/a /NN/) and/CC/and map/NN/map it/PRP/it to/TO/to /VB/( 0/-NONE-/0 ?/./? m-1/-NONE-/m-1 /:/) directly/NNP/directly. although/IN/although it/PRP/it is/VBZ/is not/RB/not clear/JJ/clear about/IN/about how/WRB/how would/MD/would you/PRP/you do/VB/do it/PRP/it perhaps/RB/perhaps divide/VB/divide by/IN/by m/NN/m or/CC/or some/DT/some other/JJ/other thing/NNP/thing. this/DT/this is/VBZ/is one/CD/one of/IN/of the/DT/the popular/JJ/popular ways/NNS/ways of/IN/of doing/VBG/doing things/NNP/things. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 41/CD/41 /CD/) in/IN/in the/DT/the following/JJ/following case/NN/case the/DT/the choice/NN/choice of/IN/of m/NN/m is/VBZ/is not/RB/not critical/NNP/critical. even/RB/even if/IN/if m/NN/m was/VBD/was the/DT/the power/NN/power of/IN/of 2/CD/2 now/RB/now /,/, the/DT/the same/JJ/same kind/NN/kind of/IN/of thing/NN/thing that/WDT/that happened/VBD/happened before/IN/before would/MD/would not/RB/not happen/VB/happen because/IN/because we/PRP/we have/VBP/have done/VBN/done a/DT/a lot/NN/lot of/IN/of jugglery/NNP/jugglery. we/PRP/we have/VBP/have taken/VBN/taken that/IN/that number/NN/number /,/, first/JJ/first we/PRP/we multiplied/VBD/multiplied it/PRP/it by/IN/by a/DT/a which/WDT/which was/VBD/was a/DT/a small/JJ/small fraction/NN/fraction then/RB/then we/PRP/we took/VBD/took the/DT/the smaller/JJR/smaller fraction/NN/fraction part/NN/part and/CC/and then/RB/then plotted/VBD/plotted it/PRP/it to/TO/to the/DT/the range/NN/range 0/-NONE-/0 through/IN/through m/NNP/m. here/RB/here it/PRP/it is/VBZ/is not/RB/not critical/JJ/critical that/IN/that m/NN/m not/RB/not be/VB/be a/DT/a power/NN/power of/IN/of 2/CD/2 /,/, we/PRP/we could/MD/could use/VB/use m/NN/m as/IN/as /./. some/DT/some evidence/NN/evidence if/IN/if we/PRP/we use/VBP/use a/DT/a as/IN/as something/NN/something like/IN/like then/RB/then it/PRP/it turns/VBZ/turns out/RP/out to/TO/to be/VB/be good/NNP/good. if/IN/if we/PRP/we use/VBP/use that/IN/that value/NN/value of/IN/of a/DT/a then/RB/then it/PRP/it is/VBZ/is called/VBN/called fibonacci/NN/fibonacci hashing/NNP/hashing. most/JJS/most of/IN/of this/DT/this is/VBZ/is experimental/JJ/experimental without/IN/without significant/JJ/significant theory/NN/theory behind/IN/behind it/NNP/it. so/RB/so if/IN/if you/PRP/you might/MD/might want/VB/want to/TO/to read/VB/read more/JJR/more about/IN/about hash/JJ/hash function/NN/function there/EX/there is/VBZ/is a/DT/a nice/JJ/nice book/NN/book by/IN/by ronald/NN/ronald knuth/NN/knuth on/IN/on sorting/NN/sorting and/CC/and searching/VBG/searching which/WDT/which covers/NNS/covers hash/VBP/hash functions/NNS/functions in/IN/in detail/NNP/detail. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 51/CD/51 /CD/) there/EX/there is/VBZ/is another/DT/another technique/NN/technique for/IN/for a/DT/a compression/NN/compression map/NN/map called/VBN/called the/DT/the multiply/NN/multiply /,/, add/JJ/add /,/, and/CC/and divide/VB/divide which/WDT/which says/VBZ/says the/DT/the following/VBG/following /,/, take/VB/take your/PRP$/your key/JJ/key multiply/NN/multiply it/PRP/it by/IN/by a/DT/a and/CC/and add/NN/add b/NNP/b. thus/RB/thus a/DT/a and/CC/and b/NN/b are/VBP/are 2/CD/2 fixed/VBN/fixed numbers/NNP/numbers. then/RB/then compute/VB/compute modulo/NN/modulo n/NN/n where/WRB/where n/NN/n is/VBZ/is the/DT/the size/NN/size of/IN/of your/PRP$/your hash/NN/hash table/NN/table /,/, sometimes/RB/sometimes i/PRP/i use/VBP/use m/NN/m and/CC/and sometimes/RB/sometimes n/NNP/n. the/DT/the first/JJ/first technique/NN/technique was/VBD/was just/RB/just k/NN/k mod/NN/mod n/NN/n but/CC/but now/RB/now we/PRP/we are/VBP/are doing/VBG/doing something/NN/something different/NNP/different. we/PRP/we are/VBP/are multiplying/VBG/multiplying by/IN/by a/DT/a and/CC/and adding/VBG/adding b/NNP/b. here/RB/here a/DT/a should/MD/should not/RB/not be/VB/be a/DT/a multiple/NN/multiple of/IN/of n/NNP/n. if/IN/if a/DT/a were/VBD/were a/DT/a multiple/NN/multiple of/IN/of n/NN/n then/RB/then a/DT/a mod/NN/mod n/NN/n will/MD/will be/VB/be 0/-NONE-/0 /,/, so/IN/so ak/NN/ak mod/NN/mod n/NN/n is/VBZ/is also/RB/also 0/CD/0. for/IN/for any/DT/any key/JJ/key you/PRP/you will/MD/will always/RB/always get/VB/get mapped/VBN/mapped to/TO/to the/DT/the same/JJ/same location/NN/location b/NNP/b. in/IN/in fact/NN/fact a/DT/a and/CC/and n/NN/n should/MD/should be/VB/be co-prime/JJ/co-prime if/IN/if possible/JJ/possible to/TO/to avoid/VB/avoid any/DT/any kind/NN/kind of/IN/of patterns/NNS/patterns happening/NNP/happening. such/JJ/such a/DT/a technique/NN/technique is/VBZ/is used/VBN/used in/IN/in your/PRP$/your random/NN/random number/NN/number generator/NN/generator also/NNP/also. you/PRP/you might/MD/might have/VB/have used/VBN/used the/DT/the function/NN/function random/NN/random as/IN/as a/DT/a part/NN/part of/IN/of your/PRP$/your programming/NNP/programming. if/IN/if you/PRP/you specify/VBP/specify the/DT/the range/NN/range it/PRP/it gives/VBZ/gives your/PRP$/your random/NN/random number/NN/number in/IN/in that/DT/that range/NNP/range. how/WRB/how does/VBZ/does it/PRP/it come/VB/come up/RP/up with/IN/with a/DT/a random/NN/random number/NN/number ?/./? many/JJ/many of/IN/of the/DT/the random/NN/random number/NN/number generators/NNS/generators are/VBP/are based/VBN/based on/IN/on the/DT/the technique/NN/technique called/VBD/called linear/JJ/linear congruential/JJ/congruential generators/NNP/generators. they/PRP/they start/VBP/start with/IN/with a/DT/a certain/JJ/certain seed/NNP/seed. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 51/CD/51 /CD/) seed/NN/seed is/VBZ/is a/DT/a starting/NN/starting value/NN/value which/WDT/which could/MD/could be/VB/be user/RBR/user defined/VBN/defined /,/, you/PRP/you could/MD/could provide/VB/provide what/WP/what the/DT/the seed/NN/seed is/VBZ/is or/CC/or it/PRP/it could/MD/could be/VB/be a/DT/a random/NN/random number/NN/number generator/NN/generator which/WDT/which could/MD/could just/RB/just take/VB/take the/DT/the system/NN/system time/NN/time at/IN/at that/DT/that point/NN/point or/CC/or some/DT/some other/JJ/other information/NN/information and/CC/and use/VBP/use that/IN/that as/IN/as a/DT/a seed/NNP/seed. that/WDT/that seed/VBD/seed becomes/VBZ/becomes the/DT/the initial/JJ/initial k/NN/k value/NN/value and/CC/and then/RB/then you/PRP/you compute/VBP/compute this/DT/this quantity/NN/quantity /:/( /:/) and/CC/and the/DT/the value/NN/value you/PRP/you get/VBP/get becomes/VBZ/becomes your/PRP$/your random/NN/random number/NNP/number. the/DT/the above/NN/above function/NN/function will/MD/will give/VB/give random/NN/random number/NN/number in/IN/in the/DT/the range/NN/range 0/-NONE-/0 through/IN/through n-1/NNP/n-1. then/RB/then for/IN/for the/DT/the next/JJ/next random/NN/random number/NN/number /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to use/VB/use k/NN/k which/WDT/which is/VBZ/is the/DT/the last/JJ/last value/NN/value you/PRP/you return/NNP/return. we/PRP/we will/MD/will use/VB/use the/DT/the last/JJ/last random/NN/random number/NN/number generated/VBD/generated as/IN/as a/DT/a value/NN/value of/IN/of k/NN/k and/CC/and once/RB/once again/RB/again compute/JJ/compute /./. you/PRP/you will/MD/will use/VB/use the/DT/the value/NN/value you/PRP/you get/VBP/get for/IN/for the/DT/the next/JJ/next time/NN/time and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is how/WRB/how you/PRP/you generate/VBP/generate random/NN/random number/NNP/number. such/JJ/such numbers/NNS/numbers are/VBP/are actually/RB/actually called/VBN/called pseudo/NN/pseudo random/NN/random number/NN/number because/IN/because they/PRP/they are/VBP/are not/RB/not truly/RB/truly random/NNP/random. once/RB/once you/PRP/you know/VBP/know the/DT/the seed/NN/seed you/PRP/you can/MD/can actually/RB/actually figure/VB/figure out/RP/out all/DT/all the/DT/the numbers/NNS/numbers that/WDT/that you/PRP/you get/NNP/get. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 39/CD/39 /CD/) there/EX/there is/VBZ/is another/DT/another technique/NN/technique called/VBN/called universal/NN/universal hashing/NN/hashing which/WDT/which i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to go/VB/go in/IN/in much/JJ/much detail/NN/detail /,/, i/PRP/i will/MD/will just/RB/just briefly/RB/briefly tell/VBP/tell you/PRP/you the/DT/the idea/NNP/idea. i/PRP/i pick/VBP/pick up/RP/up a/DT/a hash/NN/hash function/NN/function and/CC/and tell/NN/tell you/PRP/you what/WP/what the/DT/the hash/NN/hash function/NN/function is/NNP/is. you/PRP/you can/MD/can always/RB/always come/VB/come up/RP/up with/IN/with set/NN/set of/IN/of keys/NNS/keys such/JJ/such that/IN/that all/DT/all those/DT/those keys/NNS/keys using/VBG/using my/PRP$/my hash/NN/hash function/NN/function will/MD/will get/VB/get mapped/VBN/mapped to/TO/to a/DT/a very/RB/very few/JJ/few locations/NNP/locations. i/PRP/i think/VBP/think of/IN/of you/PRP/you as/IN/as an/DT/an adversary/JJ/adversary who/WP/who is/VBZ/is trying/VBG/trying to/TO/to make/VB/make life/NN/life difficult/NN/difficult for/IN/for me/PRP/me let/VB/let us/PRP/us say/VB/say /,/, by/IN/by picking/NN/picking key/JJ/key which/WDT/which all/DT/all get/NN/get mapped/VBD/mapped to/TO/to a/DT/a very/RB/very few/JJ/few locations/NNS/locations in/IN/in the/DT/the hash/NN/hash table/NN/table so/RB/so that/IN/that i/PRP/i have/VBP/have to/TO/to spend/VB/spend a/DT/a lot/NN/lot of/IN/of time/NN/time doing/VBG/doing insertion/NN/insertion /,/, deletion/NN/deletion and/CC/and searching/NNP/searching. one/CD/one solution/NN/solution i/PRP/i can/MD/can imply/RB/imply is/VBZ/is that/IN/that i/PRP/i do/VBP/do not/RB/not even/RB/even tell/RB/tell you/PRP/you the/DT/the hash/NN/hash function/NN/function which/WDT/which i/PRP/i am/VBP/am going/VBG/going to/TO/to use/NNP/use. that/IN/that means/VBZ/means i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have a/DT/a bunch/NN/bunch of/IN/of hash/NN/hash function/NN/function let/NN/let us/PRP/us say/VBP/say 15/CD/15 different/JJ/different hash/NN/hash functions/NNS/functions and/CC/and before/IN/before the/DT/the process/NN/process starts/VBZ/starts i/PRP/i am/VBP/am going/VBG/going to/TO/to randomly/RB/randomly pick/VB/pick 1/CD/1 hash/NN/hash function/NN/function out/IN/out of/IN/of these/NNP/these. then/RB/then with/IN/with the/DT/the keys/NNS/keys that/WDT/that are/VBP/are given/VBN/given to/TO/to me/PRP/me /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use this/DT/this hash/NN/hash function/NN/function to/TO/to put/VB/put the/DT/the keys/NNS/keys in/IN/in to/TO/to the/DT/the table/NNP/table. i/PRP/i have/VBP/have to/TO/to use/VB/use this/DT/this same/JJ/same hash/NN/hash function/NN/function for/IN/for inserting/NN/inserting all/DT/all my/PRP$/my keys/NNS/keys /,/, for/IN/for doing/NN/doing the/DT/the search/NN/search /,/, deletion/NN/deletion and/CC/and so/RB/so on/NNP/on. for/IN/for one/CD/one run/NN/run of/IN/of the/DT/the hash/NN/hash table/NN/table implementation/NN/implementation i/PRP/i have/VBP/have to/TO/to use/VB/use the/DT/the same/JJ/same hash/NN/hash function/NNP/function. i/PRP/i can/MD/can not/RB/not change/VB/change the/DT/the hash/NN/hash function/NN/function in/IN/in the/DT/the midway/NN/midway but/CC/but the/DT/the next/JJ/next time/NN/time when/WRB/when i/PRP/i invoke/VBP/invoke this/DT/this program/NN/program /,/, i/PRP/i could/MD/could perhaps/RB/perhaps use/VB/use a/DT/a different/JJ/different hash/NN/hash function/NN/function because/IN/because that/DT/that i/PRP/i have/VBP/have picked/VBN/picked up/RP/up randomly/RB/randomly from/IN/from my/PRP$/my set/NN/set of/IN/of hash/NN/hash function/NNP/function. so/RB/so even/RB/even if/IN/if you/PRP/you came/VBD/came up/RP/up with/IN/with the/DT/the bad/JJ/bad set/NN/set of/IN/of keys/NNS/keys for/IN/for one/CD/one of/IN/of my/PRP$/my hash/NN/hash function/NN/function /,/, may/MD/may be/VB/be that/IN/that is/VBZ/is the/DT/the hash/NN/hash function/NN/function i/PRP/i did/VBD/did not/RB/not pick/VB/pick up/RP/up at/IN/at all/DT/all /,/, when/WRB/when i/PRP/i was/VBD/was doing/VBG/doing my/PRP$/my implementation/NNP/implementation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 43/CD/43 /CD/) there/EX/there are/VBP/are some/DT/some results/NNS/results which/WDT/which say/VBP/say that/IN/that you/PRP/you can/MD/can pick/VB/pick up/RP/up a/DT/a collection/NN/collection of/IN/of hash/NN/hash function/NN/function and/CC/and such/JJ/such a/DT/a collection/NN/collection of/IN/of hash/NN/hash functions/NNS/functions is/VBZ/is called/VBN/called universal/NN/universal /,/, such/JJ/such that/IN/that for/IN/for any/DT/any 2/CD/2 keys/NNS/keys the/DT/the probability/NN/probability that/IN/that they/PRP/they get/VBP/get mapped/VBN/mapped to/TO/to the/DT/the same/JJ/same location/NN/location is/VBZ/is no/DT/no more/RBR/more than/IN/than /./. as/IN/as i/PRP/i said/VBD/said /,/, this/DT/this is/VBZ/is just/RB/just a/DT/a brief/JJ/brief idea/NN/idea about/IN/about the/DT/the universal/NN/universal hashing/VBG/hashing and/CC/and i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to see/VB/see in/IN/in detail/NNP/detail. when/WRB/when you/PRP/you do/VBP/do your/PRP$/your next/JJ/next course/NN/course on/IN/on algorithms/NNS/algorithms in/IN/in the/DT/the 3rd/JJ/3rd year/NN/year you/PRP/you will/MD/will see/VB/see more/RBR/more of/IN/of universal/NN/universal hashing/NNP/hashing. so/RB/so that/IN/that is/VBZ/is as/IN/as far/RB/far as/IN/as the/DT/the hash/NN/hash function/NN/function is/VBZ/is concerned/NNP/concerned. when/WRB/when you/PRP/you use/VBP/use hashing/VBG/hashing you/PRP/you will/MD/will get/VB/get collision/NN/collision /,/, there/EX/there is/VBZ/is no/DT/no way/NN/way around/IN/around it/PRP/it and/CC/and one/CD/one technique/NN/technique we/PRP/we saw/VBD/saw in/IN/in the/DT/the last/JJ/last class/NN/class was/VBD/was to/TO/to resolve/VB/resolve collisions/NNS/collisions what/WP/what we/PRP/we call/VBP/call chaining/NNP/chaining. if/IN/if many/JJ/many keys/NNS/keys go/VBP/go to/TO/to the/DT/the same/JJ/same location/NN/location you/PRP/you just/RB/just chain/VBP/chain them/PRP/them up/RP/up and/CC/and put/VBD/put a/DT/a linked/VBN/linked list/NN/list there/NNP/there. you/PRP/you can/MD/can still/RB/still do/VB/do insert/NN/insert /,/, search/NN/search and/CC/and delete/JJ/delete by/IN/by doing/NN/doing that/IN/that operation/NN/operation in/IN/in the/DT/the linked/VBN/linked list/NNP/list. you/PRP/you are/VBP/are going/VBG/going to/TO/to see/VB/see 2/CD/2 other/JJ/other techniques/NNS/techniques today/NN/today which/WDT/which fall/NN/fall under/IN/under the/DT/the general/JJ/general class/NN/class of/IN/of open/JJ/open addressing/NNP/addressing. one/CD/one of/IN/of these/DT/these is/VBZ/is called/VBN/called linear/JJ/linear probing/NN/probing and/CC/and the/DT/the other/JJ/other is/VBZ/is double/JJ/double hashing/NNP/hashing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 31/CD/31 /CD/) open/JJ/open addressing/NN/addressing differs/NNS/differs from/IN/from chaining/VBG/chaining in/IN/in the/DT/the following/JJ/following key/JJ/key fact/NNP/fact. recall/NN/recall in/IN/in chaining/NN/chaining none/NN/none of/IN/of these/DT/these elements/NNS/elements were/VBD/were actually/RB/actually stored/VBN/stored in/IN/in the/DT/the table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 06/CD/06 /CD/) they/PRP/they were/VBD/were all/PDT/all stored/VBN/stored outside/JJ/outside the/DT/the table/NN/table /,/, in/IN/in the/DT/the table/NN/table all/DT/all we/PRP/we had/VBD/had was/VBD/was a/DT/a reference/NN/reference to/TO/to the/DT/the starting/NN/starting element/NN/element of/IN/of the/DT/the linked/VBN/linked list/NNP/list. the/DT/the table/NN/table was/VBD/was only/RB/only storing/VBG/storing the/DT/the pointers/NNS/pointers or/CC/or the/DT/the references/NNS/references to/TO/to the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the linked/VBN/linked list/NNP/list. but/CC/but now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to put/VB/put all/DT/all the/DT/the elements/NNS/elements in/IN/in to/TO/to the/DT/the table/NN/table itself/NNP/itself. as/IN/as i/PRP/i said/VBD/said hashing/VBG/hashing could/MD/could map/VB/map 2/CD/2 elements/NNS/elements to/TO/to the/DT/the same/JJ/same location/NN/location in/IN/in the/DT/the table/NN/table /,/, we/PRP/we can/MD/can not/RB/not put/VB/put both/DT/both of/IN/of the/DT/the elements/NNS/elements to/TO/to the/DT/the same/JJ/same location/NNP/location. still/RB/still we/PRP/we want/VBP/want to/TO/to put/VB/put all/DT/all the/DT/the elements/NNS/elements in/IN/in the/DT/the table/NN/table /,/, we/PRP/we will/MD/will have/VB/have to/TO/to find/VB/find some/DT/some other/JJ/other locations/NNS/locations for/IN/for the/DT/the element/NNP/element. clearly/RB/clearly if/IN/if all/DT/all elements/NNS/elements have/VBP/have to/TO/to reside/VB/reside in/IN/in that/DT/that table/NN/table /,/, then/RB/then the/DT/the number/NN/number of/IN/of elements/NNS/elements that/WDT/that we/PRP/we are/VBP/are trying/VBG/trying to/TO/to put/VB/put n/RP/n has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than the/DT/the size/NN/size of/IN/of the/DT/the table/NN/table which/WDT/which is/VBZ/is m/NNP/m. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 12/CD/12 /CD/) i/PRP/i am/VBP/am going/VBG/going to/TO/to work/VB/work where/WRB/where m/NN/m is/VBZ/is the/DT/the size/NN/size of/IN/of my/PRP$/my table/NN/table and/CC/and n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of elements/NNS/elements that/WDT/that i/PRP/i am/VBP/am trying/VBG/trying to/TO/to put/NNP/put. this/DT/this was/VBD/was not/RB/not a/DT/a requirement/NN/requirement for/IN/for my/PRP$/my chaining/NN/chaining technique/NNP/technique. i/PRP/i could/MD/could have/VB/have the/DT/the number/NN/number of/IN/of elements/NNS/elements as/IN/as larger/JJR/larger than/IN/than the/DT/the size/NN/size of/IN/of the/DT/the table/NN/table /,/, because/IN/because there/EX/there the/DT/the elements/NNS/elements were/VBD/were not/RB/not residing/VBG/residing in/IN/in the/DT/the table/NNP/table. they/PRP/they were/VBD/were residing/VBG/residing in/IN/in the/DT/the nodes/NNS/nodes which/WDT/which were/VBD/were a/DT/a part/NN/part of/IN/of the/DT/the linked/VBN/linked list/NNP/list. each/DT/each entry/NN/entry of/IN/of the/DT/the table/NN/table is/VBZ/is now/RB/now either/DT/either going/VBG/going to/TO/to contain/VB/contain an/DT/an element/NN/element or/CC/or it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be null/NNP/null. it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be null/JJ/null which/WDT/which means/VBZ/means that/DT/that does/VBZ/does not/RB/not have/VB/have any/DT/any element/NN/element in/IN/in it/NNP/it. when/WRB/when we/PRP/we are/VBP/are searching/VBG/searching or/CC/or inserting/VBG/inserting or/CC/or deleting/VBG/deleting /,/, we/PRP/we have/VBP/have to/TO/to probe/VB/probe the/DT/the elements/NNS/elements of/IN/of the/DT/the table/NN/table in/IN/in a/DT/a suitable/JJ/suitable manner/NNP/manner. we/PRP/we are/VBP/are going/VBG/going to/TO/to think/VB/think as/IN/as if/IN/if we/PRP/we are/VBP/are modifying/VBG/modifying the/DT/the hash/NN/hash function/NN/function a/DT/a little/RB/little bit/NNP/bit. the/DT/the u/NN/u is/VBZ/is the/DT/the universe/NN/universe from/IN/from which/WDT/which the/DT/the keys/NNS/keys are/VBP/are picked/NNP/picked. our/PRP$/our hash/NN/hash function/NN/function is/VBZ/is mapping/VBG/mapping the/DT/the keys/NNS/keys /,/, earlier/JJR/earlier this/DT/this part/NN/part /:/{ 0/-NONE-/0 /,/, 1/CD/1 /,/, ?/./? m-1/-NONE-/m-1 /:/} was/VBD/was not/RB/not there/NNP/there. we/PRP/we were/VBD/were mapping/VBG/mapping the/DT/the keys/NNS/keys /:/( u/NN/u /:/) to/TO/to 0/-NONE-/0 through/IN/through m-1/-NONE-/m-1 and/CC/and that/IN/that would/MD/would tell/VB/tell us/PRP/us where/WRB/where this/DT/this key/JJ/key sets/NNS/sets /,/, for/IN/for instance/NN/instance in/IN/in the/DT/the case/NN/case of/IN/of chaining/NNP/chaining. we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have a/DT/a second/JJ/second parameter/NN/parameter and/CC/and when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the key/JJ/key that/IN/that will/MD/will be/VB/be my/PRP$/my first/JJ/first probe/NNP/probe. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 59/CD/59 /CD/) i/PRP/i will/MD/will compute/VB/compute the/DT/the value/NN/value of/IN/of the/DT/the hash/NN/hash function/NN/function for/IN/for that/DT/that key/JJ/key /NN/( k/NN/k /,/, 0/-NONE-/0 /:/) let/VB/let us/PRP/us say/VB/say for/IN/for 0th/CD/0th probe/NN/probe and/CC/and i/PRP/i obtained/VBD/obtained h/JJ/h /NN/( k/NN/k /,/, 0/-NONE-/0 /:/) as/IN/as the/DT/the value/NN/value of/IN/of my/PRP$/my hash/NN/hash function/NNP/function. i/PRP/i look/VBP/look at/IN/at the/DT/the 0th/CD/0th location/NN/location in/IN/in the/DT/the table/NN/table /,/, if/IN/if that/DT/that location/NN/location is/VBZ/is occupied/VBN/occupied then/RB/then i/PRP/i have/VBP/have to/TO/to look/VB/look again/NNP/again. when/WRB/when i/PRP/i look/VBP/look up/RP/up the/DT/the next/JJ/next time/NN/time i/PRP/i will/MD/will have/VB/have a/DT/a value/NN/value of/IN/of 1/CD/1 as/IN/as the/DT/the 2nd/CD/2nd parameter/NNP/parameter. the/DT/the 1st/CD/1st parameter/NN/parameter is/VBZ/is still/RB/still the/DT/the key/JJ/key k/NNP/k. i/PRP/i am/VBP/am going/VBG/going to/TO/to compute/VB/compute the/DT/the value/NN/value of/IN/of the/DT/the hash/NN/hash function/NN/function for/IN/for /CD/( k/NN/k /,/, 1/CD/1 /:/) which/WDT/which gives/VBZ/gives some/DT/some other/JJ/other location/NN/location in/IN/in the/DT/the hash/NN/hash table/NN/table and/CC/and so/RB/so on/NNP/on. i/PRP/i am/VBP/am going/VBG/going to/TO/to different/JJ/different location/NN/location in/IN/in the/DT/the hash/NN/hash table/NN/table till/NN/till i/PRP/i find/VBP/find an/DT/an empty/NN/empty location/NN/location /,/, if/IN/if the/DT/the operation/NN/operation was/VBD/was one/CD/one of/IN/of insertion/NNP/insertion. depending/NN/depending upon/IN/upon the/DT/the hash/NN/hash function/NN/function we/PRP/we will/MD/will have/VB/have many/JJ/many different/JJ/different techniques/NNP/techniques. the/DT/the hash/NN/hash function/NN/function h/NN/h is/VBZ/is really/RB/really determining/VBG/determining sequence/NN/sequence of/IN/of slots/NNS/slots which/WDT/which are/VBP/are examined/VBN/examined for/IN/for a/DT/a certain/JJ/certain key/NNP/key. the/DT/the u/NN/u was/VBD/was the/DT/the range/NN/range of/IN/of the/DT/the keys/NNS/keys /,/, u/VBP/u is/VBZ/is the/DT/the set/NN/set which/WDT/which specifies/NNS/specifies the/DT/the collections/NNS/collections of/IN/of keys/NNS/keys that/WDT/that we/PRP/we have/NNP/have. the/DT/the number/NN/number of/IN/of elements/NNS/elements we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert in/IN/in to/TO/to the/DT/the hash/NN/hash table/NN/table should/MD/should be/VB/be less/RBR/less than/IN/than the/DT/the size/NN/size of/IN/of the/DT/the hash/NN/hash table/NNP/table. if/IN/if i/PRP/i try/VBP/try to/TO/to insert/VB/insert all/DT/all the/DT/the 100/CD/100 students/NNS/students of/IN/of this/DT/this class/NN/class to/TO/to a/DT/a hash/NN/hash table/NN/table that/WDT/that i/PRP/i create/VBP/create then/RB/then clearly/RB/clearly the/DT/the size/NN/size of/IN/of the/DT/the hash/NN/hash table/NN/table has/VBZ/has to/TO/to be/VB/be more/JJR/more than/IN/than 100/CD/100. because/IN/because each/DT/each of/IN/of this/DT/this student/NN/student has/VBZ/has to/TO/to go/VB/go to/TO/to 1/CD/1 location/NN/location of/IN/of the/DT/the hash/NN/hash table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 54/CD/54 /CD/) the/DT/the first/JJ/first technique/NN/technique under/IN/under open/JJ/open addressing/NN/addressing is/VBZ/is called/VBN/called linear/JJ/linear probing/NNP/probing. i/PRP/i have/VBP/have the/DT/the key/JJ/key k/NN/k which/WDT/which i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/NNP/insert. i/PRP/i have/VBP/have a/DT/a hash/NN/hash function/NN/function h/NN/h /,/, i/PRP/i compute/VBP/compute h/JJ/h /NN/( k/NN/k /:/) /./. this/DT/this probe/NN/probe =/:/= h/NN/h /:/( k/NN/k /:/) is/VBZ/is the/DT/the first/JJ/first place/NN/place of/IN/of the/DT/the hash/NN/hash table/NN/table that/WDT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/NNP/at. if/IN/if table/JJ/table /NN/[ probe/NN/probe /:/] is/VBZ/is occupied/VBN/occupied then/RB/then i/PRP/i just/RB/just go/VBP/go to/TO/to the/DT/the next/JJ/next location/NNP/location. so/RB/so probe/VB/probe is/VBZ/is incremented/VBN/incremented by/IN/by one/CD/one and/CC/and then/RB/then once/RB/once again/RB/again i/PRP/i check/VBP/check if/IN/if it/PRP/it is/VBZ/is occupied/NNP/occupied. if/IN/if it/PRP/it is/VBZ/is occupied/VBN/occupied then/RB/then i/PRP/i increment/VBP/increment again/RB/again till/IN/till i/PRP/i find/VBP/find an/DT/an empty/NN/empty location/NN/location and/CC/and at/IN/at that/DT/that point/NN/point i/PRP/i will/MD/will put/VB/put the/DT/the element/NN/element k/NNP/k. this/DT/this is/VBZ/is the/DT/the guiding/NN/guiding principles/NNS/principles that/WDT/that if/IN/if the/DT/the current/JJ/current location/NN/location is/VBZ/is used/VBN/used /,/, just/RB/just go/VBP/go to/TO/to the/DT/the next/JJ/next location/NNP/location. the/DT/the mod/NN/mod m/NN/m is/VBZ/is used/VBN/used to/TO/to do/VB/do rap/NN/rap around/IN/around /,/, if/IN/if you/PRP/you reach/VBP/reach the/DT/the end/NN/end of/IN/of the/DT/the table/NN/table then/RB/then you/PRP/you start/VB/start at/IN/at the/DT/the beginning/NNP/beginning. your/PRP$/your question/NN/question is/VBZ/is what/WP/what happens/NNS/happens when/WRB/when we/PRP/we retrieve/VBP/retrieve the/DT/the keys/NNP/keys. we/PRP/we will/MD/will come/VB/come to/TO/to that/DT/that in/IN/in a/DT/a short/JJ/short while/NNP/while. when/WRB/when you/PRP/you are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert /,/, you/PRP/you compute/VBP/compute the/DT/the value/NN/value of/IN/of hash/NN/hash function/NN/function and/CC/and you/PRP/you go/VBP/go to/TO/to a/DT/a specific/JJ/specific location/NN/location as/IN/as specified/VBN/specified by/IN/by the/DT/the hash/NN/hash function/NN/function for/IN/for that/DT/that key/NNP/key. if/IN/if that/DT/that location/NN/location is/VBZ/is occupied/VBN/occupied that/IN/that is/VBZ/is there/EX/there is/VBZ/is an/DT/an element/NN/element already/RB/already sitting/VBG/sitting there/EX/there /,/, you/PRP/you go/VBP/go to/TO/to the/DT/the next/JJ/next location/NN/location and/CC/and if/IN/if that/DT/that is/VBZ/is also/RB/also occupied/VBN/occupied go/NN/go to/TO/to next/JJ/next location/NN/location till/NN/till you/PRP/you find/VBP/find the/DT/the empty/NN/empty location/NNP/location. one/CD/one advantage/NN/advantage it/PRP/it has/VBZ/has over/IN/over chaining/VBG/chaining is/VBZ/is that/IN/that it/PRP/it uses/VBZ/uses less/JJR/less memory/NNP/memory. in/IN/in chaining/NN/chaining you/PRP/you have/VB/have to/TO/to keep/VB/keep track/NN/track of/IN/of references/NNP/references. each/DT/each of/IN/of your/PRP$/your nodes/NNS/nodes should/MD/should have/VB/have place/NN/place for/IN/for the/DT/the element/NN/element that/IN/that it/PRP/it is/VBZ/is storing/NNP/storing. but/CC/but it/PRP/it should/MD/should also/RB/also have/VB/have the/DT/the reference/NN/reference to/TO/to the/DT/the next/JJ/next node/NN/node so/IN/so that/IN/that space/NN/space is/VBZ/is wasted/NNP/wasted. but/CC/but this/DT/this technique/NN/technique might/MD/might end/VB/end up/RP/up slightly/RB/slightly slower/JJR/slower than/IN/than chaining/NNP/chaining. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 19/CD/19 /CD/) let/NN/let me/PRP/me show/VBP/show you/PRP/you an/DT/an example/NNP/example. my/PRP$/my hash/NN/hash function/NN/function is/VBZ/is k/NN/k mod/NN/mod 13/CD/13 /,/, a/DT/a very/RB/very simple/JJ/simple hash/NN/hash function/NNP/function. my/PRP$/my keys/NNS/keys k/VBP/k are/VBP/are integers/NNS/integers and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert these/DT/these keys/NNS/keys in/IN/in to/TO/to the/DT/the table/NNP/table. 13/CD/13 is/VBZ/is the/DT/the size/NN/size of/IN/of my/PRP$/my table/NN/table and/CC/and the/DT/the location/NN/location is/VBZ/is from/IN/from 0/-NONE-/0 to/TO/to 12/CD/12. the/DT/the 18/CD/18 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 /,/, so/RB/so 18/CD/18 goes/VBZ/goes to/TO/to location/NN/location 5/CD/5 because/IN/because at/IN/at that/DT/that point/NN/point the/DT/the table/NN/table was/VBD/was empty/JJ/empty /,/, so/RB/so it/PRP/it can/MD/can come/VB/come there/NNP/there. 41/CD/41 mod/NN/mod 13/CD/13 is/VBZ/is 2/CD/2 so/RB/so 41/CD/41 goes/VBZ/goes to/TO/to location/NN/location 2/CD/2 /,/, 22/CD/22 mod/NN/mod 13/CD/13 is/VBZ/is 9/CD/9 so/RB/so 22/CD/22 goes/VBZ/goes to/TO/to location/NN/location 9/CD/9. till/NN/till this/DT/this there/EX/there is/VBZ/is no/DT/no problem/NN/problem in/IN/in inserting/NN/inserting /,/, as/IN/as the/DT/the table/NN/table is/VBZ/is empty/NNP/empty. 44/CD/44 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 /,/, we/PRP/we want/VBP/want to/TO/to put/VB/put 44/CD/44 in/IN/in the/DT/the 5th/JJ/5th location/NNP/location. but/CC/but this/DT/this location/NN/location is/VBZ/is already/RB/already occupied/VBN/occupied by/IN/by 18/CD/18 /,/, so/RB/so 44/CD/44 will/MD/will have/VB/have to/TO/to search/VB/search for/IN/for the/DT/the next/JJ/next location/NNP/location. as/IN/as the/DT/the 6th/CD/6th location/NN/location is/VBZ/is empty/JJ/empty we/PRP/we put/VBD/put 44/CD/44 there/NNP/there. 59/CD/59 mod/NN/mod 13/CD/13 is/VBZ/is 7/CD/7 /,/, we/PRP/we place/VBP/place 7/CD/7 there/EX/there as/IN/as that/DT/that location/NN/location is/VBZ/is empty/NNP/empty. 32/CD/32 mod/NN/mod 13/CD/13 is/VBZ/is 6/CD/6 /,/, as/IN/as 44/CD/44 is/VBZ/is sitting/VBG/sitting in/IN/in 6/CD/6 we/PRP/we go/VBP/go to/TO/to the/DT/the next/JJ/next location/NN/location then/RB/then 59/CD/59 is/VBZ/is sitting/VBG/sitting at/IN/at that/DT/that location/NN/location /,/, again/RB/again we/PRP/we go/VBP/go to/TO/to the/DT/the next/JJ/next location/NN/location and/CC/and as/IN/as that/DT/that location/NN/location is/VBZ/is empty/JJ/empty we/PRP/we put/VBD/put 32/CD/32 there/NNP/there. 31/CD/31 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 /,/, so/RB/so we/PRP/we should/MD/should put/VB/put it/PRP/it in/IN/in 5th/CD/5th location/NN/location but/CC/but this/DT/this location/NN/location is/VBZ/is occupied/VBN/occupied with/IN/with 18/CD/18 and/CC/and the/DT/the continuous/JJ/continuous locations/NNS/locations are/VBP/are occupied/VBN/occupied by/IN/by 44/CD/44 /,/, 59/CD/59 /,/, 32/CD/32 /,/, and/CC/and 22/CD/22. so/RB/so we/PRP/we go/VBP/go to/TO/to the/DT/the next/JJ/next location/NN/location which/WDT/which is/VBZ/is empty/JJ/empty and/CC/and we/PRP/we put/VBD/put 31/CD/31 in/IN/in that/DT/that location/NNP/location. 73/CD/73 mod/NN/mod 13/CD/13 is/VBZ/is 8/CD/8 /,/, as/IN/as 8th/JJ/8th location/NN/location is/VBZ/is already/RB/already occupied/VBN/occupied we/PRP/we check/VBP/check for/IN/for the/DT/the next/JJ/next locations/NNS/locations and/CC/and we/PRP/we put/VBD/put 73/CD/73 in/IN/in the/DT/the 11th/JJ/11th location/NNP/location. all/DT/all the/DT/the elements/NNS/elements are/VBP/are sitting/VBG/sitting in/IN/in their/PRP$/their respective/JJ/respective position/NN/position that/WDT/that is/VBZ/is 41/CD/41 at/IN/at location/NN/location 2/CD/2 /,/, 18/CD/18 at/IN/at location/NN/location 5/CD/5 /,/, 44/CD/44 at/IN/at location/NN/location 6/CD/6 and/CC/and so/RB/so on/NNP/on. this/DT/this also/RB/also shows/VBZ/shows you/PRP/you one/CD/one problem/NN/problem with/IN/with this/DT/this technique/NNP/technique. the/DT/the elements/NNS/elements tend/VBP/tend to/TO/to aggregate/VB/aggregate /,/, form/NN/form clusters/NNS/clusters so/RB/so you/PRP/you might/MD/might have/VB/have to/TO/to go/VB/go through/RP/through many/JJ/many locations/NNS/locations while/IN/while searching/VBG/searching for/IN/for an/DT/an element/NNP/element. how/WRB/how would/MD/would one/CD/one search/NN/search ?/./? the/DT/the hash/NN/hash table/NN/table is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide below/IN/below which/WDT/which is/VBZ/is after/IN/after inserting/VBG/inserting those/DT/those elements/NNP/elements. suppose/NN/suppose we/PRP/we are/VBP/are searching/VBG/searching for/IN/for key/JJ/key k/NN/k /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to compute/VB/compute k/NN/k mod/NN/mod 13/CD/13 because/IN/because that/DT/that was/VBD/was our/PRP$/our hash/NN/hash function/NNP/function. then/RB/then this/DT/this /NN/( k/NN/k mod/NN/mod 13/CD/13 /CD/) is/VBZ/is the/DT/the first/JJ/first location/NN/location we/PRP/we go/VBP/go to/TO/to and/CC/and after/IN/after that/DT/that if/IN/if we/PRP/we do/VBP/do not/RB/not find/VB/find the/DT/the element/NN/element we/PRP/we do/VBP/do not/RB/not say/VB/say that/IN/that the/DT/the element/NN/element was/VBD/was not/RB/not in/IN/in the/DT/the table/NN/table /,/, rather/RB/rather we/PRP/we go/VBP/go to/TO/to the/DT/the next/JJ/next location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 27/CD/27 /CD/) if/IN/if at/IN/at the/DT/the next/JJ/next location/NN/location there/EX/there is/VBZ/is some/DT/some element/NN/element present/NN/present then/RB/then we/PRP/we go/VBP/go to/TO/to the/DT/the location/NN/location following/VBG/following it/PRP/it and/CC/and so/RB/so on/IN/on till/NN/till we/PRP/we either/VBP/either find/VBP/find the/DT/the element/NN/element or/CC/or we/PRP/we reach/VBP/reach a/DT/a an/DT/an empty/NN/empty location/NNP/location. if/IN/if we/PRP/we reach/VBP/reach an/DT/an empty/NN/empty location/NN/location that/WDT/that means/VBZ/means the/DT/the element/NN/element is/VBZ/is not/RB/not their/PRP$/their in/IN/in the/DT/the table/NN/table because/IN/because if/IN/if the/DT/the element/NN/element had/VBD/had been/VBN/been their/PRP$/their in/IN/in the/DT/the table/NN/table it/PRP/it would/MD/would have/VB/have been/VBN/been inserted/VBN/inserted at/IN/at one/CD/one of/IN/of the/DT/the locations/NNS/locations that/WDT/that i/PRP/i have/VBP/have checked/NNP/checked. let/NN/let us/PRP/us see/NNP/see. suppose/VBD/suppose i/PRP/i am/VBP/am searching/VBG/searching for/IN/for 31/CD/31 so/RB/so we/PRP/we go/VBP/go to/TO/to 31/CD/31 mod/NN/mod 13/CD/13 which/WDT/which is/VBZ/is 5/CD/5. i/PRP/i come/VBP/come to/TO/to the/DT/the 5th/JJ/5th location/NN/location in/IN/in which/WDT/which 31/CD/31 is/VBZ/is not/RB/not there/RB/there /,/, so/RB/so i/PRP/i go/VBP/go to/TO/to the/DT/the next/JJ/next location/NN/location and/CC/and search/NN/search the/DT/the element/NN/element till/IN/till i/PRP/i find/VBP/find it/NNP/it. i/PRP/i found/VBD/found the/DT/the element/NN/element in/IN/in the/DT/the 10th/JJ/10th location/NNP/location. when/WRB/when i/PRP/i did/VBD/did not/RB/not find/VB/find it/PRP/it /,/, i/PRP/i can/MD/can not/RB/not say/VB/say that/IN/that the/DT/the element/NN/element is/VBZ/is not/RB/not their/PRP$/their in/IN/in the/DT/the table/NNP/table. it/PRP/it could/MD/could be/VB/be their/PRP$/their /,/, infact/NN/infact it/PRP/it is/VBZ/is their/NNP/their. suppose/NN/suppose i/PRP/i am/VBP/am searching/VBG/searching for/IN/for 33/CD/33 mod/NN/mod 13/CD/13 which/WDT/which is/VBZ/is 7/CD/7 /,/, i/PRP/i would/MD/would start/VB/start searching/VBG/searching it/PRP/it from/IN/from the/DT/the 7th/CD/7th location/NNP/location. till/NN/till 11th/JJ/11th location/NN/location the/DT/the element/NN/element is/VBZ/is not/RB/not present/JJ/present and/CC/and the/DT/the 12th/JJ/12th location/NN/location is/VBZ/is empty/NNP/empty. this/DT/this means/VBZ/means 33/CD/33 could/MD/could not/RB/not be/VB/be their/PRP$/their at/IN/at all/DT/all in/IN/in this/DT/this table/NNP/table. because/IN/because if/IN/if 33/CD/33 had/VBD/had been/VBN/been there/RB/there in/IN/in the/DT/the table/NN/table /,/, then/RB/then by/IN/by this/DT/this time/NN/time it/PRP/it would/MD/would have/VB/have been/VBN/been definitely/RB/definitely inserted/VBN/inserted in/IN/in to/TO/to the/DT/the table/NN/table till/IN/till the/DT/the 12th/JJ/12th position/NN/position because/IN/because this/DT/this is/VBZ/is an/DT/an empty/NN/empty location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 32/CD/32 /CD/) that/WDT/that is/VBZ/is an/DT/an unsuccessful/JJ/unsuccessful search/NN/search /,/, in/IN/in an/DT/an unsuccessful/JJ/unsuccessful search/NN/search the/DT/the search/NN/search terminates/VBZ/terminates when/WRB/when you/PRP/you reach/VBP/reach an/DT/an empty/NN/empty location/NN/location but/CC/but a/DT/a successful/JJ/successful search/NN/search will/MD/will terminate/VB/terminate when/WRB/when it/PRP/it finds/VBZ/finds the/DT/the element/NNP/element. how/WRB/how do/VBP/do you/PRP/you delete/VB/delete ?/./? the/DT/the following/VBG/following slide/NN/slide is/VBZ/is my/PRP$/my picture/NN/picture which/WDT/which is/VBZ/is from/IN/from the/DT/the previous/JJ/previous slide/NN/slide and/CC/and i/PRP/i want/VBP/want to/TO/to delete/VB/delete 32/CD/32. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 15/CD/15 /CD/) first/JJ/first i/PRP/i have/VBP/have to/TO/to search/VB/search for/IN/for 32/CD/32 /,/, 32/CD/32 mod/NN/mod 26/CD/26 is/VBZ/is 6/CD/6. i/PRP/i come/VBP/come to/TO/to the/DT/the 6th/JJ/6th location/NN/location /,/, it/PRP/it is/VBZ/is not/RB/not there/NNP/there. then/RB/then i/PRP/i go/VBP/go to/TO/to the/DT/the next/JJ/next location/NN/location /,/, also/RB/also it/PRP/it is/VBZ/is not/RB/not there/NNP/there. then/RB/then i/PRP/i find/VBP/find the/DT/the element/NN/element 32/CD/32 in/IN/in the/DT/the 8th/JJ/8th location/NNP/location. suppose/NN/suppose i/PRP/i removed/VBD/removed it/PRP/it by/IN/by setting/VBG/setting this/DT/this location/NN/location to/TO/to null/NNP/null. i/PRP/i removed/VBD/removed 32/CD/32 from/IN/from that/DT/that location/NNP/location. is/VBZ/is this/DT/this a/DT/a good/JJ/good idea/NN/idea ?/./? no/NN/no. why/WRB/why this/DT/this is/VBZ/is not/RB/not a/DT/a good/JJ/good idea/NN/idea ?/./? suppose/NN/suppose now/RB/now you/PRP/you search/VBP/search for/IN/for 31/CD/31. the/DT/the 31/CD/31 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 /,/, so/RB/so we/PRP/we come/VBP/come to/TO/to the/DT/the 5th/JJ/5th location/NNP/location. but/CC/but we/PRP/we did/VBD/did not/RB/not find/VB/find it/PRP/it there/NNP/there. then/RB/then we/PRP/we go/VBP/go to/TO/to the/DT/the next/JJ/next location/NN/location for/IN/for that/DT/that element/NN/element and/CC/and we/PRP/we did/VBD/did not/RB/not find/VB/find it/PRP/it and/CC/and at/IN/at last/JJ/last we/PRP/we reached/VBD/reached the/DT/the empty/NN/empty location/NNP/location. hence/NN/hence we/PRP/we will/MD/will say/VB/say that/IN/that 31/CD/31 is/VBZ/is not/RB/not their/PRP$/their but/CC/but still/RB/still 31/CD/31 is/VBZ/is their/NNP/their. why/WRB/why is/VBZ/is a/DT/a problem/NN/problem coming/VBG/coming in/IN/in ?/./? because/IN/because when/WRB/when 31/CD/31 was/VBD/was inserted/VBN/inserted that/IN/that was/VBD/was the/DT/the full/JJ/full location/NNP/location. that/IN/that is/VBZ/is why/WRB/why 31/CD/31 was/VBD/was inserted/VBN/inserted later/JJ/later /,/, but/CC/but if/IN/if you/PRP/you delete/VBP/delete the/DT/the element/NN/element in/IN/in the/DT/the 8th/JJ/8th location/NN/location then/RB/then you/PRP/you have/VB/have a/DT/a problem/NNP/problem. some/DT/some how/WRB/how we/PRP/we have/VBP/have to/TO/to do/VB/do something/NN/something different/JJ/different because/IN/because we/PRP/we can/MD/can not/RB/not just/RB/just set/VBN/set this/DT/this location/NN/location to/TO/to null/VB/null or/CC/or we/PRP/we can/MD/can not/RB/not mark/VB/mark this/DT/this location/NN/location empty/NN/empty also/NNP/also. look/NN/look up/IN/up will/MD/will declare/VB/declare that/IN/that 31/CD/31 is/VBZ/is not/RB/not present/JJ/present /,/, which/WDT/which is/VBZ/is wrong/NNP/wrong. how/WRB/how do/VBP/do we/PRP/we delete/VB/delete ?/./? instead/RB/instead of/IN/of setting/VBG/setting this/DT/this 8th/JJ/8th location/NN/location to/TO/to null/VB/null we/PRP/we will/MD/will place/VB/place a/DT/a tombstone/NN/tombstone /,/, actually/RB/actually an/DT/an x/NNP/x. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 49/CD/49 /CD/) tombstone/NN/tombstone is/VBZ/is just/RB/just a/DT/a marker/NN/marker so/IN/so you/PRP/you could/MD/could set/VB/set up/RP/up a/DT/a bit/NN/bit at/IN/at that/DT/that location/NN/location which/WDT/which specifies/NNS/specifies that/WDT/that this/DT/this location/NN/location was/VBD/was occupied/VBN/occupied by/IN/by some/DT/some one/NNP/one. it/PRP/it is/VBZ/is not/RB/not always/RB/always the/DT/the case/NN/case that/IN/that this/DT/this will/MD/will be/VB/be an/DT/an empty/NN/empty location/NN/location /,/, at/IN/at some/DT/some point/NN/point this/DT/this was/VBD/was occupied/VBN/occupied by/IN/by some/DT/some one/NNP/one. how/WRB/how it/PRP/it will/MD/will help/VB/help us/PRP/us ?/./? when/WRB/when we/PRP/we are/VBP/are doing/VBG/doing a/DT/a look/NN/look up/RP/up and/CC/and we/PRP/we encounter/VBP/encounter a/DT/a tombstone/NN/tombstone /,/, we/PRP/we do/VBP/do not/RB/not declare/VB/declare that/IN/that the/DT/the search/NN/search is/VBZ/is ended/VBN/ended and/CC/and the/DT/the element/NN/element is/VBZ/is not/RB/not present/JJ/present but/CC/but we/PRP/we continue/NNP/continue. as/IN/as before/IN/before if/IN/if i/PRP/i was/VBD/was searching/VBG/searching for/IN/for 31/CD/31 /,/, 31/CD/31 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 so/RB/so i/PRP/i would/MD/would come/VB/come to/TO/to location/NN/location 5/CD/5 and/CC/and go/VB/go to/TO/to the/DT/the next/JJ/next location/NN/location and/CC/and at/IN/at the/DT/the 8th/JJ/8th location/NN/location i/PRP/i would/MD/would see/VB/see an/DT/an x/NN/x and/CC/and not/RB/not null/JJ/null which/WDT/which is/VBZ/is a/DT/a tombstone/NNP/tombstone. so/RB/so i/PRP/i continue/VBP/continue till/RB/till i/PRP/i find/VBP/find either/DT/either a/DT/a null/NN/null location/NN/location or/CC/or 31/CD/31. i/PRP/i found/VBD/found 31/CD/31 and/CC/and declare/JJ/declare 31/CD/31 is/VBZ/is their/NNP/their. when/WRB/when a/DT/a look/NN/look up/RP/up encounters/NNS/encounters a/DT/a tombstone/NN/tombstone it/PRP/it ignores/VBZ/ignores and/CC/and continues/NNP/continues. when/WRB/when an/DT/an insert/NN/insert encounters/NNS/encounters a/DT/a tombstone/NN/tombstone what/WP/what does/VBZ/does it/PRP/it do/VBP/do ?/./? it/PRP/it will/MD/will put/VB/put the/DT/the element/NN/element at/IN/at that/DT/that position/NNP/position. we/PRP/we have/VBP/have to/TO/to reclaim/VB/reclaim this/DT/this space/NNP/space. what/WP/what happens/VBZ/happens if/IN/if there/EX/there are/VBP/are too/RB/too many/JJ/many tombstones/NNS/tombstones ?/./? you/PRP/you do/VBP/do not/RB/not have/VB/have elements/NNS/elements in/IN/in the/DT/the table/NN/table /,/, those/DT/those are/VBP/are actually/RB/actually empty/JJ/empty locations/NNS/locations but/CC/but in/IN/in your/PRP$/your search/NN/search you/PRP/you still/RB/still have/VBP/have to/TO/to go/VB/go beyond/IN/beyond them/NNP/them. the/DT/the performance/NN/performance of/IN/of your/PRP$/your search/NN/search degrades/NNP/degrades. if/IN/if you/PRP/you have/VBP/have a/DT/a lot/NN/lot of/IN/of tombstones/NNS/tombstones you/PRP/you should/MD/should just/RB/just rehash/NNP/rehash. just/RB/just remove/VBP/remove all/DT/all the/DT/the elements/NNS/elements and/CC/and put/VBD/put them/PRP/them back/RB/back again/NNP/again. the/DT/the same/JJ/same kind/NN/kind of/IN/of a/DT/a technique/NN/technique you/PRP/you have/VB/have to/TO/to do/VB/do when/WRB/when you/PRP/you grow/VBP/grow the/DT/the table/NNP/table. now/RB/now you/PRP/you are/VBP/are not/RB/not growing/VBG/growing the/DT/the table/JJ/table /,/, you/PRP/you have/VBP/have too/RB/too many/JJ/many markers/NNS/markers in/IN/in the/DT/the table/NN/table so/RB/so just/RB/just do/VBP/do a/DT/a rehash/NN/rehash and/CC/and that/IN/that will/MD/will create/VB/create empty/JJ/empty slots/NNS/slots without/IN/without the/DT/the tombstones/NNS/tombstones and/CC/and your/PRP$/your performance/NN/performance will/MD/will increase/VB/increase again/NNP/again. i/PRP/i will/MD/will come/VB/come to/TO/to the/DT/the other/JJ/other open/JJ/open addressing/NN/addressing techniques/NNP/techniques. we/PRP/we looked/VBD/looked at/IN/at linear/JJ/linear probing/NN/probing /,/, we/PRP/we compute/VBP/compute the/DT/the hash/NN/hash function/NN/function we/PRP/we look/VBP/look at/IN/at that/DT/that location/NN/location and/CC/and next/JJ/next location/NN/location and/CC/and so/RB/so on/NNP/on. in/IN/in double/JJ/double hashing/NN/hashing we/PRP/we have/VBP/have 2/CD/2 hash/NN/hash functions/NNS/functions h1/NNP/h1 and/CC/and h2/NNP/h2. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 31/CD/31 /CD/) the/DT/the value/NN/value of/IN/of h1/NNP/h1 gives/VBZ/gives me/PRP/me the/DT/the first/JJ/first position/NN/position were/VBD/were i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look for/IN/for the/DT/the key/JJ/key k/NNP/k. then/RB/then h2/NNP/h2 /:/( k/NN/k /:/) will/MD/will tell/VB/tell me/PRP/me the/DT/the offset/NN/offset from/IN/from the/DT/the first/JJ/first position/NN/position were/VBD/were i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look again/RB/again for/IN/for the/DT/the key/JJ/key k/NNP/k. let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the piece/NN/piece of/IN/of code/NN/code given/VBN/given in/IN/in the/DT/the above/NN/above slide/NNP/slide. probe/NN/probe is/VBZ/is set/VBN/set to/TO/to h1/NNP/h1 /NNP/( k/NN/k /:/) /,/, so/RB/so that/IN/that is/VBZ/is the/DT/the first/JJ/first position/NN/position i/PRP/i look/VBP/look at/IN/at and/CC/and offset/VB/offset is/VBZ/is set/VBN/set to/TO/to h2/NNP/h2 /NNP/( k/NN/k /:/) /./. first/JJ/first i/PRP/i will/MD/will look/VB/look at/IN/at the/DT/the locations/NNS/locations specified/VBN/specified by/IN/by probe/NN/probe and/CC/and the/DT/the table/NN/table /,/, if/IN/if it/PRP/it is/VBZ/is occupied/VBN/occupied then/RB/then the/DT/the next/JJ/next location/NN/location i/PRP/i will/MD/will look/VB/look at/IN/at is/VBZ/is probe/RB/probe +/:/+ offset/NNP/offset. probe/NN/probe is/VBZ/is set/VBN/set to/TO/to probe/VB/probe +/:/+ offset/VBN/offset which/WDT/which means/VBZ/means this/DT/this is/VBZ/is a/DT/a next/JJ/next location/NN/location i/PRP/i look/VBP/look at/NNP/at. if/IN/if this/DT/this is/VBZ/is also/RB/also occupied/VBN/occupied then/RB/then the/DT/the next/JJ/next location/NN/location i/PRP/i will/MD/will look/VB/look is/VBZ/is probe/VB/probe +/-NONE-/+ offset/VB/offset +/:/+ offset/NN/offset which/WDT/which mean/JJ/mean offset/NN/offset is/VBZ/is determining/VBG/determining key/JJ/key with/IN/with how/WRB/how much/JJ/much distance/NN/distance i/PRP/i am/VBP/am going/VBG/going to/TO/to advance/NNP/advance. every/DT/every time/NN/time i/PRP/i do/VBP/do not/RB/not see/VB/see the/DT/the element/NN/element that/IN/that i/PRP/i am/VBP/am searching/VBG/searching for/NNP/for. for/IN/for linear/JJ/linear probing/NN/probing your/PRP$/your offset/NN/offset is/VBZ/is always/RB/always 1/CD/1. you/PRP/you were/VBD/were always/RB/always going/VBG/going to/TO/to the/DT/the next/JJ/next location/NN/location so/IN/so that/IN/that corresponds/NNS/corresponds to/TO/to an/DT/an offset/NN/offset of/IN/of 1/CD/1. instead/RB/instead of/IN/of going/VBG/going to/TO/to next/JJ/next location/NN/location i/PRP/i jumped/VBD/jumped one/CD/one location/NN/location ahead/RB/ahead that/IN/that is/VBZ/is i/PRP/i jumped/VBD/jumped 2/CD/2 locations/NNS/locations /,/, then/RB/then offset/VBN/offset would/MD/would have/VB/have been/VBN/been 2/CD/2 and/CC/and so/RB/so on/NNP/on. offset/NN/offset in/IN/in this/DT/this case/NN/case which/WDT/which is/VBZ/is in/IN/in the/DT/the orange/NN/orange color/NN/color in/IN/in the/DT/the slide/NN/slide below/IN/below is/VBZ/is determined/VBN/determined by/IN/by the/DT/the hash/NN/hash function/NN/function h2/NNP/h2 /NNP/( k/NN/k /:/) /./. this/DT/this offset/NN/offset could/MD/could be/VB/be different/JJ/different for/IN/for different/JJ/different keys/NNP/keys. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 20/CD/20 /CD/) we/PRP/we will/MD/will look/VB/look at/IN/at an/DT/an example/NN/example of/IN/of how/WRB/how double/JJ/double hashing/NN/hashing works/NNP/works. if/IN/if m/NN/m is/VBZ/is the/DT/the prime/JJ/prime then/RB/then this/DT/this technique/NN/technique will/MD/will ensure/VB/ensure that/IN/that we/PRP/we look/VBP/look at/IN/at all/DT/all the/DT/the locations/NNS/locations of/IN/of the/DT/the table/NNP/table. in/IN/in linear/NN/linear probing/VBG/probing because/IN/because the/DT/the offset/NN/offset was/VBD/was one/CD/one we/PRP/we would/MD/would look/VB/look at/IN/at all/DT/all the/DT/the locations/NNS/locations in/IN/in the/DT/the table/NNP/table. if/IN/if there/EX/there was/VBD/was an/DT/an empty/NN/empty location/NN/location you/PRP/you would/MD/would always/RB/always be/VB/be able/JJ/able to/TO/to insert/VB/insert the/DT/the element/NNP/element. we/PRP/we would/MD/would not/RB/not like/VB/like the/DT/the following/JJ/following to/TO/to happen/NNP/happen. there/RB/there are/VBP/are empty/JJ/empty locations/NNS/locations in/IN/in the/DT/the table/NN/table but/CC/but you/PRP/you start/VBP/start from/IN/from a/DT/a certain/JJ/certain location/NN/location /,/, since/IN/since the/DT/the offset/NN/offset is/VBZ/is 3/CD/3 you/PRP/you go/VBP/go 3/CD/3 units/NNS/units ahead/RB/ahead and/CC/and you/PRP/you keep/VB/keep finding/VBG/finding everything/NN/everything is/VBZ/is full/JJ/full and/CC/and then/RB/then you/PRP/you come/VBP/come back/RB/back to/TO/to the/DT/the starting/NN/starting location/NNP/location. because/IN/because you/PRP/you will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to insert/VB/insert the/DT/the element/NN/element at/IN/at all/NNP/all. may/MD/may be/VB/be all/PDT/all of/IN/of these/DT/these elements/NNS/elements that/WDT/that you/PRP/you looked/VBD/looked at/IN/at were/VBD/were full/JJ/full but/CC/but the/DT/the other/JJ/other locations/NNS/locations in/IN/in the/DT/the table/NN/table where/WRB/where empty/NNP/empty. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 41/CD/41 /CD/) some/DT/some how/WRB/how you/PRP/you do/VBP/do not/RB/not cycle/VB/cycle back/NNP/back. when/WRB/when you/PRP/you will/MD/will cycle/VB/cycle back/RB/back ?/./? when/WRB/when your/PRP$/your offset/NN/offset divides/NNS/divides the/DT/the size/NN/size of/IN/of the/DT/the table/NNP/table. if/IN/if the/DT/the size/NN/size of/IN/of your/PRP$/your table/JJ/table was/VBD/was a/DT/a prime/JJ/prime number/NN/number then/RB/then your/PRP$/your offset/NN/offset would/MD/would never/RB/never divide/VB/divide it/PRP/it and/CC/and this/DT/this kind/NN/kind of/IN/of a/DT/a thing/NN/thing would/MD/would never/RB/never happen/NNP/happen. in/IN/in fact/NN/fact you/PRP/you would/MD/would look/VB/look at/IN/at all/DT/all the/DT/the elements/NNS/elements of/IN/of the/DT/the table/NNP/table. this/DT/this is/VBZ/is the/DT/the small/JJ/small fact/NN/fact you/PRP/you can/MD/can go/VB/go back/RB/back and/CC/and prove/VB/prove that/IN/that if/IN/if m/NN/m is/VBZ/is prime/JJ/prime then/RB/then i/PRP/i have/VBP/have given/VBN/given you/PRP/you the/DT/the rough/JJ/rough arguments/NNS/arguments for/IN/for this/DT/this case/NN/case /,/, but/CC/but you/PRP/you can/MD/can also/RB/also prove/VB/prove it/PRP/it more/JJR/more formally/NNP/formally. this/DT/this has/VBZ/has some/DT/some of/IN/of the/DT/the same/JJ/same advantages/NNS/advantages and/CC/and disadvantages/NNS/disadvantages as/IN/as linear/JJ/linear probing/NNP/probing. one/CD/one of/IN/of it/PRP/it is/VBZ/is it/PRP/it distributes/VBZ/distributes keys/NNS/keys more/JJR/more uniformly/RB/uniformly because/IN/because you/PRP/you do/VBP/do not/RB/not form/VB/form clusters/NNS/clusters any/DT/any more/NNP/more. these/DT/these clusters/NNS/clusters were/VBD/were getting/VBG/getting formed/VBN/formed because/IN/because you/PRP/you were/VBD/were just/RB/just going/VBG/going one/CD/one step/NN/step at/IN/at a/DT/a time/NNP/time. if/IN/if for/IN/for some/DT/some key/JJ/key you/PRP/you are/VBP/are going/VBG/going 7/CD/7 steps/NNS/steps ahead/RB/ahead and/CC/and for/IN/for some/DT/some other/JJ/other key/JJ/key you/PRP/you are/VBP/are going/VBG/going 13/CD/13 steps/NNS/steps ahead/RB/ahead and/CC/and for/IN/for some/DT/some other/JJ/other key/JJ/key you/PRP/you are/VBP/are going/VBG/going 2/CD/2 steps/NNS/steps ahead/RB/ahead /,/, then/RB/then these/DT/these clusters/NNS/clusters are/VBP/are not/RB/not getting/VBG/getting formed/VBN/formed any/DT/any more/NNP/more. that/IN/that makes/VBZ/makes the/DT/the performance/NN/performance better/NNP/better. we/PRP/we will/MD/will look/VB/look at/IN/at an/DT/an example/NNP/example. i/PRP/i have/VBP/have 2/CD/2 hash/NN/hash functions/NNS/functions h1/NNP/h1 and/CC/and h2/NNP/h2. the/DT/the h1/NNP/h1 is/VBZ/is the/DT/the same/JJ/same as/IN/as before/IN/before /,/, k/NN/k mod/NN/mod 13/CD/13. the/DT/the element/NN/element is/VBZ/is also/RB/also as/IN/as same/JJ/same as/IN/as before/IN/before /,/, we/PRP/we have/VBP/have a/DT/a table/JJ/table of/IN/of size/NN/size 13/CD/13. the/DT/the h2/NNP/h2 /NNP/( k/NN/k /:/) is/VBZ/is my/PRP$/my 2nd/CD/2nd hash/NN/hash function/NN/function and/CC/and is/VBZ/is 8/CD/8- /CD/( k/NN/k mod/NN/mod 8/CD/8 /CD/) /./. it/PRP/it will/MD/will always/RB/always be/VB/be a/DT/a number/NN/number between/IN/between 1/CD/1 and/CC/and 8/CD/8. it/PRP/it can/MD/can not/RB/not be/VB/be zero/RB/zero /,/, because/IN/because k/NN/k mod/NN/mod 8/CD/8 lies/NNS/lies between/IN/between 0/-NONE-/0 and/CC/and 7/CD/7 /,/, so/RB/so it/PRP/it is/VBZ/is between/IN/between 1/CD/1 and/CC/and 8/CD/8. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 41/CD/41 /CD/) the/DT/the zero/NN/zero does/VBZ/does not/RB/not make/VB/make any/DT/any sense/NN/sense /,/, if/IN/if it/PRP/it is/VBZ/is zero/RB/zero then/RB/then we/PRP/we are/VBP/are in/IN/in trouble/NNP/trouble. if/IN/if h2/NNP/h2 /NNP/( k/NN/k /:/) is/VBZ/is zero/CD/zero for/IN/for some/DT/some k/NN/k then/RB/then that/IN/that means/NNS/means you/PRP/you are/VBP/are continuously/RB/continuously looking/VBG/looking at/IN/at the/DT/the same/JJ/same place/NN/place and/CC/and if/IN/if that/DT/that place/NN/place were/VBD/were occupied/VBN/occupied then/RB/then you/PRP/you can/MD/can not/RB/not insert/VB/insert the/DT/the element/NN/element at/IN/at all/NNP/all. let/VB/let us/PRP/us insert/VB/insert the/DT/the first/JJ/first element/NN/element 18/CD/18 /,/, 18/CD/18 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 so/RB/so it/PRP/it will/MD/will go/VB/go to/TO/to location/NN/location 5/CD/5. the/DT/the 41/CD/41 mod/NN/mod 13/CD/13 is/VBZ/is 2/CD/2 so/RB/so it/PRP/it goes/VBZ/goes to/TO/to location/NN/location 2/CD/2. the/DT/the 22/CD/22 mod/NN/mod 13/CD/13 is/VBZ/is 9/CD/9 so/RB/so it/PRP/it goes/VBZ/goes to/TO/to location/NN/location 9/CD/9. the/DT/the 44/CD/44 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 so/RB/so it/PRP/it tries/VBZ/tries to/TO/to go/VB/go to/TO/to location/NN/location 5/CD/5 but/CC/but the/DT/the location/NN/location 5/CD/5 is/VBZ/is already/RB/already occupied/NNP/occupied. we/PRP/we have/VBP/have to/TO/to compute/VB/compute h2/NNP/h2 /NNP/( 44/CD/44 /CD/) /./. what/WP/what is/VBZ/is h2/NNP/h2 /:/( 44/CD/44 /CD/) ?/./? 8/CD/8 ?/./? /NN/( 44/CD/44 mod/NN/mod 8/CD/8 /CD/) /,/, 44/CD/44 mod/NN/mod 8/CD/8 is/VBZ/is 4/CD/4. so/RB/so 8-4/CD/8-4 is/VBZ/is 4/CD/4 /,/, i/PRP/i have/VBP/have to/TO/to go/VB/go 4/CD/4 steps/NNS/steps ahead/NNP/ahead. i/PRP/i will/MD/will go/VB/go to/TO/to location/NN/location 9/CD/9 but/CC/but that/IN/that is/VBZ/is also/RB/also occupied/VBN/occupied /,/, so/RB/so i/PRP/i will/MD/will go/VB/go to/TO/to location/NN/location 0/CD/0. that/WDT/that is/VBZ/is empty/JJ/empty so/RB/so 44/CD/44 will/MD/will go/VB/go to/TO/to location/NN/location 0/CD/0. the/DT/the 59/CD/59 mod/NN/mod 13/CD/13 is/VBZ/is 7/CD/7 so/RB/so 59/CD/59 will/MD/will go/VB/go to/TO/to location/NN/location 7/CD/7. the/DT/the 32/CD/32 mod/NN/mod 13/CD/13 is/VBZ/is 6/CD/6 so/RB/so 32/CD/32 will/MD/will go/VB/go to/TO/to location/NN/location 6/CD/6. the/DT/the 31/CD/31 mod/NN/mod 13/CD/13 is/VBZ/is 5/CD/5 so/RB/so we/PRP/we go/VBP/go to/TO/to location/NN/location 5/CD/5 but/CC/but that/IN/that is/VBZ/is occupied/NNP/occupied. i/PRP/i compute/VBP/compute h2/NNP/h2 /NNP/( 31/CD/31 /CD/) /,/, 31/CD/31 mod/NN/mod 8/CD/8 is/VBZ/is 7/CD/7 and/CC/and 8-7/CD/8-7 is/VBZ/is 1/CD/1. so/RB/so 31/CD/31 will/MD/will check/VB/check for/IN/for the/DT/the location/NN/location 6/CD/6 but/CC/but 6/CD/6 is/VBZ/is also/RB/also occupied/NNP/occupied. we/PRP/we have/VBP/have to/TO/to go/VB/go to/TO/to 7/CD/7 /,/, it/PRP/it is/VBZ/is also/RB/also occupied/VBN/occupied so/RB/so go/RB/go to/TO/to 8/CD/8 and/CC/and this/DT/this is/VBZ/is not/RB/not occupied/VBN/occupied /,/, thus/RB/thus 31/CD/31 go/VB/go to/TO/to location/NN/location 8/CD/8. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 39/CD/39 /CD/) the/DT/the 73/CD/73 mod/NN/mod 13/CD/13 is/VBZ/is 8/CD/8 /,/, so/RB/so it/PRP/it will/MD/will try/VB/try to/TO/to go/VB/go to/TO/to 8/CD/8 that/IN/that is/VBZ/is occupied/NNP/occupied. we/PRP/we compute/VBP/compute h2/NNP/h2 /NNP/( 73/CD/73 /CD/) /,/, 73/CD/73 mod/NN/mod 8/CD/8 is/VBZ/is 1/CD/1 /,/, h2/NNP/h2 /NNP/( 73/CD/73 /CD/) is/VBZ/is 7/CD/7 so/RB/so we/PRP/we will/MD/will go/VB/go to/TO/to 8/CD/8 +/CD/+ 7/CD/7 =/CD/= 15/CD/15. the/DT/the 15/CD/15 is/VBZ/is 2/CD/2 mod/NN/mod 13/CD/13 /,/, we/PRP/we go/VBP/go to/TO/to location/NN/location 2/CD/2 that/WDT/that is/VBZ/is occupied/VBN/occupied so/RB/so 2/CD/2 +/CD/+ 7/CD/7 is/VBZ/is 9/CD/9 where/WRB/where that/IN/that is/VBZ/is also/RB/also occupied/NNP/occupied. the/DT/the 9/CD/9 +/CD/+ 7/CD/7 is/VBZ/is 16/CD/16 /,/, 16/CD/16 mod/NN/mod 13/CD/13 is/VBZ/is 3/CD/3 so/RB/so it/PRP/it goes/VBZ/goes to/TO/to this/DT/this location/NN/location which/WDT/which is/VBZ/is unoccupied/NNP/unoccupied. this/DT/this is/VBZ/is how/WRB/how the/DT/the elements/NNS/elements would/MD/would be/VB/be distributed/VBN/distributed in/IN/in the/DT/the table/NNP/table. we/PRP/we will/MD/will do/VB/do some/DT/some analysis/NN/analysis of/IN/of double/JJ/double hashing/NNP/hashing. recall/NN/recall that/WDT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume that/IN/that the/DT/the load/NN/load factor/NN/factor is/VBZ/is less/JJR/less than/IN/than one/NNP/one. what/WP/what is/VBZ/is the/DT/the load/NN/load factor/NN/factor ?/./? the/DT/the number/NN/number of/IN/of elements/NNS/elements divided/VBN/divided by/IN/by the/DT/the size/NN/size of/IN/of the/DT/the hash/NN/hash table/NN/table that/WDT/that is/VBZ/is less/JJR/less than/IN/than one/NNP/one. i/PRP/i need/VBP/need it/PRP/it to/TO/to be/VB/be less/JJR/less than/IN/than one/CD/one otherwise/NN/otherwise more/JJR/more than/IN/than 1/CD/1 does/VBZ/does not/RB/not make/VB/make any/DT/any sense/NNP/sense. we/PRP/we are/VBP/are talking/VBG/talking of/IN/of a/DT/a scheme/NN/scheme where/WRB/where all/DT/all the/DT/the elements/NNS/elements have/VBP/have to/TO/to sit/VB/sit inside/NN/inside the/DT/the hash/NN/hash table/NNP/table. we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to assume/VB/assume /,/, this/DT/this is/VBZ/is similar/JJ/similar to/TO/to the/DT/the assumptions/NNS/assumptions that/WDT/that we/PRP/we made/VBD/made in/IN/in the/DT/the last/JJ/last class/NN/class that/IN/that every/DT/every time/NN/time i/PRP/i probe/VBP/probe /,/, i/PRP/i actually/RB/actually look/VBP/look at/IN/at a/DT/a random/NN/random element/NN/element in/IN/in the/DT/the hash/NN/hash table/NN/table which/WDT/which is/VBZ/is uniformly/RB/uniformly random/NNP/random. the/DT/the first/JJ/first time/NN/time i/PRP/i probe/VBP/probe i/PRP/i will/MD/will take/VB/take a/DT/a random/NN/random location/NN/location in/IN/in the/DT/the hash/NN/hash table/NN/table and/CC/and try/NN/try to/TO/to put/VB/put the/DT/the element/NN/element their/NNP/their. if/IN/if it/PRP/it is/VBZ/is occupied/VBN/occupied then/RB/then once/RB/once again/RB/again i/PRP/i will/MD/will pick/VB/pick a/DT/a random/NN/random location/NN/location in/IN/in the/DT/the hash/NN/hash table/NN/table and/CC/and try/NN/try to/TO/to put/VB/put it/PRP/it their/NNP/their. if/IN/if that/DT/that is/VBZ/is also/RB/also occupied/VBN/occupied once/RB/once again/RB/again i/PRP/i pick/VBP/pick a/DT/a random/NN/random location/NN/location in/IN/in the/DT/the hash/NN/hash table/NN/table and/CC/and try/NN/try to/TO/to put/VB/put the/DT/the element/NN/element their/NNP/their. let/NN/let us/PRP/us see/VBP/see how/WRB/how this/DT/this performs/NNS/performs /,/, because/IN/because we/PRP/we will/MD/will only/RB/only be/VB/be able/JJ/able to/TO/to analyze/VB/analyze such/JJ/such a/DT/a scheme/NNP/scheme. because/IN/because the/DT/the other/JJ/other schemes/NNS/schemes are/VBP/are too/RB/too dependent/JJ/dependent upon/IN/upon the/DT/the hash/NN/hash function/NN/function that/WDT/that we/PRP/we are/VBP/are using/VBG/using and/CC/and we/PRP/we might/MD/might not/RB/not be/VB/be able/JJ/able to/TO/to analyze/VB/analyze them/NNP/them. if/IN/if is/VBZ/is the/DT/the load/NN/load factor/NN/factor then/RB/then that/IN/that means/NNS/means 1/CD/1- fraction/NN/fraction of/IN/of the/DT/the table/NN/table is/VBZ/is empty/NNP/empty. if/IN/if is/VBZ/is half/DT/half that/IN/that means/VBZ/means the/DT/the number/NN/number of/IN/of elements/NNS/elements divided/VBN/divided by/IN/by the/DT/the size/NN/size of/IN/of the/DT/the table/NN/table is/VBZ/is half/NNP/half. which/WDT/which means/VBZ/means only/RB/only half/DT/half the/DT/the table/JJ/table is/VBZ/is occupied/VBN/occupied and/CC/and half/NN/half the/DT/the table/JJ/table is/VBZ/is empty/JJ/empty /,/, 1/CD/1- fraction/NN/fraction of/IN/of the/DT/the table/NN/table is/VBZ/is empty/NNP/empty. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 27/CD/27 /CD/) suppose/NN/suppose my/PRP$/my search/NN/search was/VBD/was an/DT/an unsuccessful/JJ/unsuccessful search.what/JJ/search.what does/VBZ/does an/DT/an unsuccessful/JJ/unsuccessful search/NN/search mean/NN/mean ?/./? that/IN/that means/VBZ/means the/DT/the element/NN/element is/VBZ/is not/RB/not in/IN/in the/DT/the table/NNP/table. when/WRB/when does/VBZ/does an/DT/an unsuccessful/JJ/unsuccessful search/NN/search stop/NN/stop ?/./? when/WRB/when i/PRP/i get/VBP/get an/DT/an empty/NN/empty location/NNP/location. how/WRB/how many/JJ/many probes/NNS/probes will/MD/will be/VB/be required/VBN/required before/IN/before i/PRP/i get/VBP/get to/TO/to an/DT/an empty/NN/empty location/NN/location ?/./? the/DT/the 1/CD/1- fraction/NN/fraction of/IN/of the/DT/the table/NN/table is/VBZ/is empty/JJ/empty let/NN/let say/VBP/say of/IN/of table/JJ/table is/VBZ/is empty/JJ/empty and/CC/and 90/CD/90 %/NN/% of/IN/of the/DT/the table/NN/table is/VBZ/is full/NNP/full. that/IN/that is/VBZ/is 10/CD/10 %/NN/% is/VBZ/is empty/NNP/empty. the/DT/the expected/VBN/expected number/NN/number of/IN/of probes/NNS/probes required/VBN/required before/IN/before i/PRP/i hit/VBP/hit fraction/NN/fraction of/IN/of the/DT/the table/NN/table which/WDT/which is/VBZ/is empty/JJ/empty would/MD/would be/VB/be roughly/RB/roughly 10/CD/10. because/IN/because the/DT/the first/JJ/first time/NN/time with/IN/with probability/NN/probability /,/, i/PRP/i will/MD/will get/VB/get to/TO/to an/DT/an occupied/JJ/occupied location/NN/location and/CC/and so/RB/so on/NNP/on. so/IN/so roughly/RB/roughly after/IN/after 10/CD/10 trails/NNS/trails i/PRP/i will/MD/will hit/VB/hit an/DT/an empty/NN/empty location/NN/location because/IN/because only/RB/only of/IN/of the/DT/the table/NN/table is/VBZ/is empty/NNP/empty. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 39/CD/39 /CD/) if/IN/if 1/CD/1- fraction/NN/fraction of/IN/of table/JJ/table is/VBZ/is empty/JJ/empty then/RB/then roughly/RB/roughly in/IN/in an/DT/an excepted/JJ/excepted sense/NN/sense probes/NNS/probes are/VBP/are required/VBN/required before/IN/before i/PRP/i hit/VBP/hit an/DT/an empty/NN/empty location/NN/location and/CC/and declare/NN/declare it/PRP/it to/TO/to be/VB/be an/DT/an unsuccessful/JJ/unsuccessful search/NNP/search. this/DT/this is/VBZ/is the/DT/the excepted/VBN/excepted numbers/NNS/numbers of/IN/of probes/NNS/probes required/VBN/required for/IN/for an/DT/an unsuccessful/JJ/unsuccessful search/NNP/search. let/NN/let us/PRP/us look/VBP/look at/IN/at a/DT/a successful/JJ/successful search/NNP/search. i/PRP/i am/VBP/am going/VBG/going to/TO/to talk/VB/talk about/IN/about the/DT/the average/NN/average number/NN/number of/IN/of probes/NNS/probes required/VBN/required for/IN/for a/DT/a successful/JJ/successful search/NN/search /,/, not/RB/not for/IN/for one/CD/one particular/JJ/particular search/NN/search but/CC/but if/IN/if i/PRP/i were/VBD/were to/TO/to look/VB/look at/IN/at all/DT/all the/DT/the successful/JJ/successful searches/NNP/searches. what/WP/what are/VBP/are successful/JJ/successful searches/NNS/searches ?/./? successful/JJ/successful search/NN/search are/VBP/are searches/NNS/searches corresponding/VBG/corresponding to/TO/to the/DT/the elements/NNS/elements in/IN/in the/DT/the table/NNP/table. i/PRP/i have/VBP/have some/DT/some number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the table/NN/table /,/, let/VB/let us/PRP/us say/VB/say i/PRP/i search/VBP/search for/IN/for the/DT/the first/JJ/first element/NNP/element. then/RB/then how/WRB/how many/JJ/many probes/NNS/probes are/VBP/are required/VBN/required ?/./? suppose/NN/suppose i/PRP/i search/VBP/search for/IN/for the/DT/the second/JJ/second element/NNP/element. how/WRB/how many/JJ/many probes/NNS/probes are/VBP/are required/VBN/required and/CC/and so/RB/so on/NNP/on. then/RB/then i/PRP/i will/MD/will take/VB/take their/PRP$/their average/NNP/average. let/NN/let us/PRP/us try/VBP/try and/CC/and compute/NN/compute this/DT/this quantity/NNP/quantity. if/IN/if you/PRP/you recall/VBP/recall from/IN/from the/DT/the last/JJ/last class/NN/class the/DT/the average/JJ/average number/NN/number of/IN/of probes/NNS/probes required/VBN/required for/IN/for a/DT/a successful/JJ/successful search/NN/search is/VBZ/is the/DT/the average/JJ/average number/NN/number of/IN/of probes/NNS/probes required/VBN/required to/TO/to insert/VB/insert those/DT/those elements/NNP/elements. because/IN/because when/WRB/when we/PRP/we are/VBP/are inserting/VBG/inserting those/DT/those elements/NNS/elements we/PRP/we are/VBP/are essentially/RB/essentially doing/VBG/doing the/DT/the same/JJ/same thing/NNP/thing. it/PRP/it is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the average/NN/average number/NN/number of/IN/of probes/NNS/probes required/VBN/required to/TO/to insert/VB/insert all/DT/all these/DT/these elements/NNS/elements and/CC/and this/DT/this is/VBZ/is the/DT/the quantity/NN/quantity i/PRP/i am/VBP/am going/VBG/going to/TO/to compute/NNP/compute. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 11/CD/11 /CD/) what/WP/what is/VBZ/is the/DT/the average/JJ/average number/NN/number of/IN/of probes/NNS/probes required/VBN/required to/TO/to insert/VB/insert all/DT/all the/DT/the elements/NNS/elements that/WDT/that i/PRP/i have/VBP/have in/IN/in the/DT/the table/NN/table ?/./? when/WRB/when i/PRP/i am/VBP/am inserting/VBG/inserting an/DT/an element/NN/element i/PRP/i need/VBP/need to/TO/to find/VB/find an/DT/an empty/NN/empty location/NN/location again/NNP/again. suppose/NN/suppose i/PRP/i begin/VBP/begin with/IN/with an/DT/an empty/JJ/empty table/NN/table and/CC/and i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the number/NN/number of/IN/of probes/NNS/probes required/VBN/required to/TO/to insert/VB/insert the/DT/the first/JJ/first elements/NNP/elements. size/NN/size of/IN/of the/DT/the table/NN/table is/VBZ/is m/NN/m /,/, let/VB/let us/PRP/us assume/VB/assume m/NN/m is/VBZ/is 100/CD/100. i/PRP/i am/VBP/am talking/VBG/talking of/IN/of inserting/VBG/inserting the/DT/the first/JJ/first 50/CD/50 elements/NNP/elements. suppose/NN/suppose i/PRP/i have/VBP/have already/RB/already inserted/VBN/inserted 48/CD/48 /,/, 49/CD/49 elements/NNS/elements and/CC/and when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert element/NNP/element. what/WP/what is/VBZ/is the/DT/the excepted/VBN/excepted number/NN/number of/IN/of probes/NNS/probes that/WDT/that are/VBP/are required/VBN/required ?/./? the/DT/the half/NN/half of/IN/of the/DT/the table/NN/table is/VBZ/is empty/JJ/empty /,/, when/WRB/when i/PRP/i try/VBP/try once/RB/once i/PRP/i may/MD/may hit/VB/hit a/DT/a full/JJ/full location/NNP/location. may/MD/may be/VB/be when/WRB/when i/PRP/i try/VBP/try again/RB/again /,/, in/IN/in expectation/NN/expectation i/PRP/i just/RB/just need/VBP/need 2/CD/2 probes/NNS/probes to/TO/to be/VB/be able/JJ/able to/TO/to insert/VB/insert this/DT/this element/NNP/element. for/IN/for the/DT/the other/JJ/other first/JJ/first 49/CD/49 elements/NNS/elements i/PRP/i might/MD/might on/IN/on an/DT/an average/JJ/average even/RB/even required/VBN/required less/JJR/less /,/, but/CC/but all/DT/all i/PRP/i can/MD/can say/VB/say for/IN/for sure/JJ/sure that/IN/that the/DT/the average/NN/average number/NN/number of/IN/of probes/NNS/probes required/VBN/required for/IN/for inserting/NN/inserting these/DT/these elements/NNS/elements is/VBZ/is 2/CD/2. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 51/CD/51 /CD/) how/WRB/how many/JJ/many elements/NNS/elements am/VBP/am i/PRP/i inserting/VBG/inserting ?/./? the/DT/the elements/NNS/elements /,/, on/IN/on an/DT/an average/JJ/average the/DT/the total/JJ/total number/NN/number of/IN/of probes/NNS/probes required/VBN/required is/VBZ/is m/NN/m for/IN/for these/DT/these elements/NNP/elements. when/WRB/when i/PRP/i show/VBP/show you/PRP/you the/DT/the rest/NN/rest /,/, you/PRP/you will/MD/will understand/VB/understand why/WRB/why i/PRP/i am/VBP/am doing/VBG/doing this/DT/this way/NNP/way. suppose/NN/suppose i/PRP/i have/VBP/have already/RB/already inserted/VBN/inserted elements/NNS/elements in/IN/in to/TO/to my/PRP$/my table/NN/table and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the next/JJ/next elements/NNS/elements in/IN/in to/TO/to my/PRP$/my table/NNP/table. when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the next/JJ/next elements/NNS/elements /,/, just/RB/just assume/NN/assume that/IN/that i/PRP/i have/VBP/have already/RB/already inserted/VBN/inserted -1/-NONE-/-1 and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert this/DT/this last/JJ/last element/NNP/element. how/WRB/how much/JJ/much of/IN/of the/DT/the table/NN/table is/VBZ/is already/RB/already full/JJ/full when/WRB/when i/PRP/i try/VBP/try to/TO/to insert/VB/insert this/DT/this last/JJ/last element/NN/element ?/./? the/DT/the of/IN/of table/JJ/table is/VBZ/is already/RB/already full/NNP/full. only/RB/only a/DT/a of/IN/of the/DT/the table/NN/table is/VBZ/is empty/NNP/empty. so/RB/so on/IN/on an/DT/an average/JJ/average i/NN/i am/NN/am going/VBG/going to/TO/to require/VB/require about/IN/about 4/CD/4 probes/NNS/probes before/IN/before i/PRP/i get/VBP/get to/TO/to one/CD/one of/IN/of the/DT/the empty/NN/empty location/NNP/location. i/PRP/i am/VBP/am searching/VBG/searching for/IN/for an/DT/an empty/NN/empty location/NN/location to/TO/to put/VB/put this/DT/this element/NN/element in/NNP/in. i/PRP/i need/VBP/need roughly/RB/roughly 4/CD/4 probes/NNS/probes /,/, infact/NN/infact i/PRP/i am/VBP/am just/RB/just praising/VBG/praising this/DT/this as/IN/as an/DT/an upper/JJ/upper bound/NN/bound and/CC/and i/PRP/i need/VBP/need at/IN/at most/JJS/most 4/CD/4 probes/NNS/probes to/TO/to insert/VB/insert all/DT/all of/IN/of these/DT/these elements/NNP/elements. the/DT/the total/JJ/total number/NN/number of/IN/of probes/NNS/probes required/VBN/required to/TO/to insert/VB/insert these/DT/these elements/NNS/elements is/VBZ/is times/NNS/times 4/CD/4 which/WDT/which is/VBZ/is no/DT/no more/RBR/more than/IN/than m/NNP/m. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 14/CD/14 /CD/) similarly/RB/similarly for/IN/for these/DT/these next/JJ/next elements/NNS/elements /,/, when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the last/JJ/last of/IN/of these/DT/these elements/NNS/elements only/RB/only of/IN/of the/DT/the table/NN/table is/VBZ/is empty/NNP/empty. on/IN/on an/DT/an average/JJ/average i/NN/i require/NN/require about/IN/about 8/CD/8 probes/NNS/probes before/IN/before i/PRP/i can/MD/can get/VB/get to/TO/to one/CD/one of/IN/of those/DT/those empty/JJ/empty locations/NNP/locations. for/IN/for these/DT/these elements/NNS/elements or/CC/or for/IN/for any/DT/any one/CD/one of/IN/of them/PRP/them i/PRP/i would/MD/would not/RB/not have/VB/have required/VBN/required more/RBR/more than/IN/than 8/CD/8 probes/NNP/probes. i/NN/i would/MD/would have/VB/have required/VBN/required between/IN/between 4/CD/4 and/CC/and 8/CD/8 probes/NNS/probes for/IN/for these/DT/these elements/NNP/elements. because/IN/because when/WRB/when i/PRP/i was/VBD/was inserting/VBG/inserting the/DT/the first/JJ/first of/IN/of these/DT/these elements/NNS/elements only/RB/only 3/CD/3 quarters/NNS/quarters of/IN/of the/DT/the table/NN/table was/VBD/was full/NNP/full. one/CD/one quarter/NN/quarter of/IN/of it/PRP/it was/VBD/was empty/JJ/empty /,/, but/CC/but i/PRP/i am/VBP/am just/RB/just upper/JJ/upper bounding/NN/bounding it/NNP/it. i/PRP/i am/VBP/am just/RB/just saying/VBG/saying that/IN/that no/DT/no more/RBR/more than/IN/than 8/CD/8. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 57/CD/57 /:/: 19/CD/19 /CD/) what/WP/what is/VBZ/is the/DT/the total/JJ/total number/NN/number of/IN/of probes/NNS/probes required/VBN/required ?/./? for/IN/for recall/NN/recall from/IN/from previous/JJ/previous slide/NN/slide i/PRP/i said/VBD/said m/NN/m /,/, for/IN/for this/DT/this also/RB/also i/PRP/i said/VBD/said m/NNP/m. what/WP/what is/VBZ/is the/DT/the total/JJ/total required/VBN/required for/IN/for these/DT/these elements/NNS/elements ?/./? it/PRP/it is/VBZ/is m/NN/m times/NNS/times i/PRP/i /VBP/( m/NN/m x/NN/x i/PRP/i /VBP/) /./. how/WRB/how many/JJ/many locations/NNS/locations are/VBP/are empty/JJ/empty in/IN/in the/DT/the table/NN/table ?/./? what/WP/what is/VBZ/is the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the table/NN/table now/RB/now ?/./? after/IN/after i/PRP/i inserted/VBD/inserted elements/NNS/elements what/WP/what fraction/NN/fraction of/IN/of the/DT/the table/NN/table was/VBD/was empty/JJ/empty ?/./? it/PRP/it is/VBZ/is half/NNP/half. after/IN/after i/PRP/i inserted/VBD/inserted +/:/+ how/WRB/how much/JJ/much of/IN/of the/DT/the table/NN/table was/VBD/was empty/JJ/empty ?/./? it/PRP/it is/VBZ/is /,/, so/RB/so it/PRP/it is/VBZ/is really/RB/really this/DT/this last/JJ/last number/NNP/number. after/IN/after i/PRP/i inserted/VBD/inserted how/WRB/how much/RB/much was/VBD/was empty/JJ/empty ?/./? it/PRP/it is/VBZ/is /./. so/RB/so after/IN/after i/PRP/i inserted/VBD/inserted all/DT/all of/IN/of this/DT/this that/WDT/that is/VBZ/is how/WRB/how much/JJ/much is/VBZ/is empty/JJ/empty ?/./? it/PRP/it is/VBZ/is which/WDT/which is/VBZ/is fraction/NN/fraction that/IN/that was/VBD/was empty/NNP/empty. after/IN/after i/PRP/i have/VBP/have inserted/VBN/inserted all/DT/all of/IN/of these/DT/these fractions/NNS/fractions i/PRP/i have/VBP/have only/RB/only fraction/NN/fraction of/IN/of the/DT/the table/NN/table empty/NN/empty and/CC/and the/DT/the total/JJ/total number/NN/number of/IN/of probes/NNS/probes required/VBN/required to/TO/to insert/VB/insert these/DT/these elements/NNS/elements is/VBZ/is m/NN/m times/NNS/times i/NNP/i. we/PRP/we have/VBP/have a/DT/a load/NN/load factor/NN/factor of/IN/of /,/, we/PRP/we already/RB/already inserted/VBN/inserted enough/RB/enough elements/NNS/elements so/IN/so that/IN/that the/DT/the load/NN/load factor/NN/factor is/VBZ/is /./. when/WRB/when the/DT/the load/NN/load factor/NN/factor is/VBZ/is /,/, 1/CD/1- fraction/NN/fraction of/IN/of the/DT/the table/NN/table is/VBZ/is empty/NNP/empty. if/IN/if i/PRP/i have/VBP/have 1/CD/1- fraction/NN/fraction of/IN/of table/JJ/table empty/NN/empty /,/, then/RB/then how/WRB/how many/JJ/many probes/NNS/probes are/VBP/are required/VBN/required ?/./? if/IN/if i/PRP/i have/VBP/have fraction/NN/fraction of/IN/of the/DT/the table/NN/table empty/NN/empty then/RB/then i/PRP/i require/VBP/require m/NN/m x/NN/x i/PRP/i probe/NNP/probe. what/WP/what is/VBZ/is i/PRP/i ?/./? the/DT/the i/PRP/i is/VBZ/is basically/RB/basically minus/VBZ/minus log/NN/log of/IN/of this/DT/this /NN/( /:/) quantity/NNP/quantity. if/IN/if i/PRP/i need/VBP/need to/TO/to have/VB/have 1/CD/1- fraction/NN/fraction empty/NN/empty /,/, so/RB/so i/PRP/i just/RB/just need/VBP/need ?/./? m/NN/m log/NN/log /:/( 1/CD/1- /CD/) /./. these/DT/these are/VBP/are the/DT/the numbers/NNS/numbers of/IN/of probes/NNS/probes required/NNP/required. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 58/CD/58 /:/: 17/CD/17 /CD/) if/IN/if i/PRP/i have/VBP/have fraction/NN/fraction empty/NN/empty /,/, is/VBZ/is the/DT/the number/NN/number smaller/NN/smaller than/IN/than one/NNP/one. so/RB/so to/TO/to get/VB/get to/TO/to this/DT/this point/NN/point i/PRP/i require/VBP/require m/NN/m x/NN/x i/PRP/i probes/NNP/probes. so/RB/so to/TO/to get/VB/get to/TO/to a/DT/a point/NN/point where/WRB/where 1/CD/1- fraction/NN/fraction was/VBD/was empty/JJ/empty /,/, i/PRP/i need/VBP/need ?/./? m/NN/m log/NN/log /:/( 1/CD/1- /CD/) this/DT/this many/JJ/many probes/NNP/probes. the/DT/the above/NN/above what/WP/what we/PRP/we saw/VBD/saw was/VBD/was the/DT/the total/JJ/total number/NN/number of/IN/of probes/NNS/probes required/VBN/required and/CC/and the/DT/the average/JJ/average was/VBD/was just/RB/just divided/VBN/divided by/IN/by n/NN/n that/IN/that is/VBZ/is /:/- /./. we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to capture/VB/capture it/PRP/it to/TO/to a/DT/a table/NNP/table. for/IN/for an/DT/an unsuccessful/JJ/unsuccessful and/CC/and successful/JJ/successful probes/NNS/probes /,/, when/WRB/when we/PRP/we had/VBD/had chaining/VBG/chaining it/PRP/it was/VBD/was 1/CD/1 +/CD/+ /./. for/IN/for probing/NN/probing /,/, for/IN/for an/DT/an unsuccessful/JJ/unsuccessful search/NN/search it/PRP/it was/VBD/was /:/( /CD/) and/CC/and for/IN/for a/DT/a successful/JJ/successful search/NN/search what/WP/what i/PRP/i just/RB/just showed/VBD/showed you/PRP/you is/VBZ/is /:/( /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 00/CD/00 /:/: 14/CD/14 /CD/) the/DT/the last/JJ/last slide/NN/slide which/WDT/which shows/VBZ/shows how/WRB/how this/DT/this performances/NNS/performances of/IN/of changes/NNP/changes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 00/CD/00 /:/: 38/CD/38 /CD/) data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 6/CD/6 trees/NNS/trees last/JJ/last class/NN/class we/PRP/we discussed/VBD/discussed about/IN/about hashing/NNP/hashing. we/PRP/we saw/VBD/saw few/JJ/few collision/NN/collision resolution/NN/resolution techniques/NNS/techniques /,/, chaining/VBG/chaining /,/, double/JJ/double hashing/NN/hashing linear/NN/linear programming/NN/programming and/CC/and you/PRP/you also/RB/also did/VBD/did a/DT/a little/RB/little bit/NN/bit of/IN/of analysis/NN/analysis of/IN/of these/DT/these collision/NN/collision resolution/NN/resolution techniques/NNP/techniques. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to talk/VB/talk about/IN/about trees/NNP/trees. we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to look/VB/look at/IN/at binary/JJ/binary trees/NNS/trees and/CC/and some/DT/some data/NNS/data structures/NNS/structures for/IN/for trees/NNP/trees. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 31/CD/31 /CD/) what/WP/what is/VBZ/is a/DT/a tree/NN/tree ?/./? many/JJ/many of/IN/of you/PRP/you might/MD/might have/VB/have come/VBN/come across/RP/across a/DT/a tree/NN/tree before/IN/before /,/, except/IN/except this/DT/this tree/NN/tree is/VBZ/is going/VBG/going to/TO/to be/VB/be different/JJ/different from/IN/from one/CD/one that/WDT/that you/PRP/you have/VBP/have seen/VBN/seen before/NNP/before. the/DT/the root/NN/root will/MD/will be/VB/be at/IN/at the/DT/the top/NNP/top. in/IN/in most/JJS/most of/IN/of the/DT/the trees/NNS/trees around/IN/around /,/, you/PRP/you do/VBP/do not/RB/not see/VB/see the/DT/the root/NNP/root. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 37/CD/37 /CD/) the/DT/the root/NN/root is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at the/DT/the top/JJ/top of/IN/of the/DT/the tree/NNP/tree. in/IN/in the/DT/the tree/NN/tree given/VBN/given in/IN/in the/DT/the slide/NN/slide above/IN/above a/DT/a is/VBZ/is the/DT/the root/NNP/root. there/RB/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of parent/NN/parent and/CC/and children/NNS/children /,/, the/DT/the node/NN/node b/NN/b is/VBZ/is the/DT/the parent/NN/parent of/IN/of node/NN/node d/NN/d and/CC/and e/NNP/e. by/IN/by the/DT/the same/JJ/same argument/NN/argument a/DT/a is/VBZ/is the/DT/the parent/NN/parent of/IN/of b/NN/b and/CC/and c/NN/c /,/, c/NN/c is/VBZ/is parent/NN/parent of/IN/of f/NN/f /,/, g/NN/g and/CC/and h/NNP/h. a/DT/a is/VBZ/is a/DT/a parent/NN/parent of/IN/of b/NN/b which/WDT/which in/IN/in turn/NN/turn parent/NN/parent of/IN/of d/NN/d and/CC/and e/NN/e /,/, so/RB/so a/DT/a is/VBZ/is ancestor/NN/ancestor of/IN/of d/NN/d and/CC/and e/NNP/e. a/DT/a is/VBZ/is also/RB/also an/DT/an ancestor/NN/ancestor of/IN/of f/NN/f /,/, g/NN/g and/CC/and h/NNP/h. a/DT/a is/VBZ/is also/RB/also an/DT/an ancestor/NN/ancestor of/IN/of i/NNP/i. a/DT/a is/VBZ/is a/DT/a grandparent/NN/grandparent /,/, sometimes/RB/sometimes we/PRP/we use/VBP/use the/DT/the term/NN/term grandparent/NNP/grandparent. a/DT/a is/VBZ/is a/DT/a grandparent/NN/grandparent of/IN/of d/NN/d /,/, e/NN/e /,/, f/NN/f /,/, g/NN/g and/CC/and h/NNP/h. hope/NN/hope you/PRP/you understand/VBP/understand the/DT/the difference/NN/difference between/IN/between ancestor/NN/ancestor and/CC/and grandparent/NNP/grandparent. d/VBD/d and/CC/and e/NN/e are/VBP/are descendents/NNS/descendents of/IN/of a/DT/a /,/, in/IN/in fact/NN/fact b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /,/, g/NN/g /,/, h/NN/h /,/, i/PRP/i are/VBP/are all/RB/all descendents/NNS/descendents of/IN/of a/NNP/a. c/NN/c and/CC/and b/NN/b are/VBP/are siblings/NNS/siblings because/IN/because they/PRP/they have/VBP/have the/DT/the same/JJ/same parent/NNP/parent. b/NN/b is/VBZ/is a/DT/a sibling/NN/sibling of/IN/of c/NN/c and/CC/and c/NN/c is/VBZ/is a/DT/a sibling/NN/sibling of/IN/of b/NNP/b. g/NN/g and/CC/and e/NN/e are/VBP/are not/RB/not siblings/NNS/siblings but/CC/but f/NN/f /,/, g/NN/g and/CC/and h/NN/h are/VBP/are siblings/NNP/siblings. d/NN/d and/CC/and e/NN/e are/VBP/are the/DT/the children/NNS/children of/IN/of node/NN/node b/NNP/b. a/DT/a is/VBZ/is a/DT/a parent/NN/parent of/IN/of b/NN/b /,/, b/NN/b is/VBZ/is a/DT/a parent/NN/parent of/IN/of d/NN/d and/CC/and e/NN/e /,/, d/VBD/d and/CC/and e/NN/e are/VBP/are children/NNS/children of/IN/of b/NN/b /,/, b/NN/b and/CC/and c/NN/c are/VBP/are children/NNS/children of/IN/of a/DT/a and/CC/and all/DT/all of/IN/of these/DT/these are/VBP/are descendents/NNS/descendents of/IN/of a/NNP/a. i/PRP/i have/VBP/have 3three/CD/3three ancestors/NNS/ancestors h/IN/h /,/, c/NN/c and/CC/and a/NNP/a. h/NN/h is/VBZ/is the/DT/the parent/NN/parent /,/, c/NN/c is/VBZ/is the/DT/the grandparent/NN/grandparent and/CC/and a/DT/a is/VBZ/is the/DT/the great/JJ/great grand/NN/grand parent/NN/parent but/CC/but we/PRP/we do/VBP/do not/RB/not use/VB/use that/IN/that term/NN/term we/PRP/we just/RB/just call/VBP/call it/PRP/it as/IN/as an/DT/an ancestor/NNP/ancestor. the/DT/the terms/NNS/terms we/PRP/we defined/VBD/defined till/RB/till now/RB/now were/VBD/were more/JJR/more in/IN/in the/DT/the nature/NN/nature of/IN/of a/DT/a family/NN/family tree/NN/tree and/CC/and then/RB/then we/PRP/we will/MD/will come/VB/come to/TO/to real/JJ/real trees/NNP/trees. d/NN/d /,/, e/NN/e /,/, f/NN/f /,/, g/NN/g /,/, i/PRP/i are/VBP/are called/VBN/called the/DT/the leaves/NNS/leaves of/IN/of the/DT/the tree/NNP/tree. a/DT/a is/VBZ/is the/DT/the root/NN/root /,/, if/IN/if you/PRP/you just/RB/just turn/VBP/turn it/PRP/it upside/RB/upside down/IN/down then/RB/then the/DT/the extremities/NNS/extremities should/MD/should be/VB/be the/DT/the leaves/NNP/leaves. what/WP/what is/VBZ/is the/DT/the leaf/NN/leaf ?/./? the/DT/the generic/JJ/generic term/NN/term for/IN/for a/DT/a /,/, b/NN/b ?/./? i/PRP/i are/VBP/are also/RB/also called/VBN/called nodes/NNS/nodes of/IN/of a/DT/a tree/NNP/tree. a/DT/a leaf/NN/leaf is/VBZ/is a/DT/a node/NN/node which/WDT/which has/VBZ/has no/DT/no children/NNP/children. if/IN/if a/DT/a node/NN/node has/VBZ/has no/DT/no children/NNS/children then/RB/then it/PRP/it is/VBZ/is a/DT/a leaf/NNP/leaf. h/NN/h is/VBZ/is not/RB/not a/DT/a leaf/NN/leaf since/IN/since h/NN/h has/VBZ/has a/DT/a child/NN/child but/CC/but i/PRP/i /,/, f/NN/f /,/, g/NN/g /,/, e/NN/e and/CC/and d/VBD/d are/VBP/are nodes/NNS/nodes which/WDT/which do/VBP/do not/RB/not have/VB/have any/DT/any children/NNS/children and/CC/and so/RB/so they/PRP/they are/VBP/are called/VBN/called the/DT/the leaves/NNP/leaves. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 5/CD/5 /:/: 08/CD/08 /CD/) a/DT/a /,/, b/NN/b /,/, c/NN/c and/CC/and h/NN/h are/VBP/are called/VBN/called internal/JJ/internal nodes/NNS/nodes /,/, a/DT/a node/NN/node which/WDT/which is/VBZ/is not/RB/not a/DT/a leaf/NN/leaf is/VBZ/is called/VBN/called an/DT/an internal/JJ/internal node/NNP/node. we/PRP/we associate/VBP/associate a/DT/a notion/NN/notion of/IN/of level/NN/level with/IN/with each/DT/each node/NN/node /,/, the/DT/the root/NN/root is/VBZ/is at/IN/at level/NN/level 0/CD/0. the/DT/the children/NNS/children of/IN/of the/DT/the root/NN/root are/VBP/are at/IN/at level/NN/level 1/CD/1. the/DT/the children/NNS/children of/IN/of those/DT/those nodes/NNS/nodes which/WDT/which are/VBP/are at/IN/at level/NN/level 1/CD/1 are/VBP/are at/IN/at level/NN/level 2/CD/2. d/NN/d /,/, e/NN/e /,/, f/NN/f /,/, g/NN/g and/CC/and h/NN/h all/DT/all are/VBP/are at/IN/at level/NN/level 2/CD/2. it/PRP/it is/VBZ/is not/RB/not that/IN/that h/NN/h is/VBZ/is at/IN/at level/NN/level 2/CD/2 /,/, all/DT/all of/IN/of these/DT/these nodes/NNS/nodes are/VBP/are at/IN/at level/NN/level 2/CD/2. i/PRP/i is/VBZ/is at/IN/at level/NN/level 3/CD/3. sometimes/RB/sometimes we/PRP/we also/RB/also use/VBP/use the/DT/the term/NN/term depth/NN/depth /,/, in/IN/in which/WDT/which depth/NN/depth and/CC/and level/NN/level are/VBP/are the/DT/the same/JJ/same thing/NNP/thing. the/DT/the level/NN/level 0/-NONE-/0 /,/, level/NN/level 1/CD/1 /,/, level/NN/level 2/CD/2 are/VBP/are also/RB/also called/VBN/called as/IN/as depth/NN/depth 0/-NONE-/0 /,/, depth/NN/depth 1/CD/1 and/CC/and depth/NN/depth 2/CD/2. the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is the/DT/the maximum/NN/maximum level/NN/level of/IN/of any/DT/any node/NN/node in/IN/in the/DT/the tree/NNP/tree. what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum level/NN/level of/IN/of any/DT/any node/NN/node in/IN/in the/DT/the tree/NN/tree ?/./? the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree is/VBZ/is 3/CD/3. the/DT/the degree/NN/degree of/IN/of the/DT/the node/NN/node is/VBZ/is the/DT/the number/NN/number of/IN/of children/NNS/children it/PRP/it has/NNP/has. b/NN/b has/VBZ/has a/DT/a degree/NN/degree 2/CD/2 /,/, c/NN/c has/VBZ/has a/DT/a degree/NN/degree 3/CD/3 and/CC/and h/JJ/h has/VBZ/has a/DT/a degree/NN/degree 1/CD/1. the/DT/the leaves/NNS/leaves have/VBP/have degree/JJ/degree 0/-NONE-/0 because/IN/because they/PRP/they do/VBP/do not/RB/not have/VB/have any/DT/any children/NNP/children. basic/JJ/basic terminologies/NNS/terminologies are/VBP/are quite/RB/quite intuitive/NNP/intuitive. what/WP/what are/VBP/are trees/NNS/trees used/VBN/used for/IN/for ?/./? they/PRP/they can/MD/can represent/VB/represent the/DT/the hierarchy/JJ/hierarchy in/IN/in an/DT/an organization/NNP/organization. for/IN/for instance/NN/instance there/EX/there is/VBZ/is a/DT/a company/NN/company let/NN/let us/PRP/us call/VBP/call electronics/NNS/electronics r/NN/r us/PRP/us which/WDT/which has/VBZ/has some/DT/some divisions/NNP/divisions. rnd/NN/rnd is/VBZ/is 1/CD/1 division/NN/division /,/, purchasing/VBG/purchasing is/VBZ/is another/DT/another and/CC/and manufacturing/VBG/manufacturing is/VBZ/is division/NNP/division. domestic/JJ/domestic and/CC/and international/JJ/international are/VBP/are the/DT/the sub-division/NN/sub-division for/IN/for the/DT/the sales/NNP/sales. you/PRP/you could/MD/could represent/VB/represent the/DT/the organizational/JJ/organizational structure/NN/structure through/IN/through a/DT/a tree/NNP/tree. you/PRP/you could/MD/could also/RB/also use/VB/use a/DT/a tree/NN/tree to/TO/to represent/VB/represent the/DT/the table/NN/table of/IN/of contents/NNS/contents in/IN/in a/DT/a book/NNP/book. let/NN/let us/PRP/us say/VBP/say a/DT/a book/NN/book called/VBN/called student/NN/student guide/NN/guide which/WDT/which has/VBZ/has chapters/NNS/chapters on/IN/on overview/NN/overview /,/, grading/VBG/grading /,/, environment/NN/environment /,/, programming/NN/programming and/CC/and support/NN/support code/NNP/code. the/DT/the chapter/NN/chapter grading/VBG/grading has/VBZ/has some/DT/some sections/NNS/sections called/VBN/called exams/NNS/exams /,/, homework/NN/homework and/CC/and programs/NNP/programs. they/PRP/they could/MD/could also/RB/also have/VB/have some/DT/some sub-sections/NNS/sub-sections and/CC/and that/IN/that would/MD/would build/VB/build up/RP/up the/DT/the tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 6/CD/6 /:/: 56/CD/56 /CD/) your/PRP$/your file/NN/file system/NN/system in/IN/in which/WDT/which if/IN/if you/PRP/you use/VBP/use the/DT/the unix/NN/unix environment/NN/environment or/CC/or the/DT/the windows/NNS/windows environment/NN/environment is/VBZ/is also/RB/also organized/VBN/organized as/IN/as a/DT/a tree/NNP/tree. the/DT/the one/CD/one in/IN/in the/DT/the level/NN/level 0/-NONE-/0 is/VBZ/is the/DT/the root/NN/root directory/NN/directory and/CC/and in/IN/in the/DT/the 1stlevel/JJ/1stlevel are/VBP/are those/DT/those 2/CD/2 sub-directories/NNP/sub-directories. then/RB/then within/IN/within the/DT/the sub-directory/JJ/sub-directory i/PRP/i have/VBP/have some/DT/some other/JJ/other sub-directories/NNS/sub-directories and/CC/and within/IN/within that/DT/that i/PRP/i have/VBP/have homework/NN/homework /,/, assignment/NN/assignment and/CC/and so/RB/so on/NNP/on. your/PRP$/your file/NN/file system/NN/system is/VBZ/is also/RB/also organized/VBN/organized like/IN/like a/DT/a tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 7/CD/7 /:/: 57/CD/57 /CD/) today/NN/today in/IN/in our/PRP$/our class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see about/IN/about definitions/NNS/definitions and/CC/and then/RB/then we/PRP/we start/VBP/start using/VBG/using those/DT/those definitions/NNS/definitions in/IN/in our/PRP$/our later/JJ/later classes/NNP/classes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8/CD/8 /:/: 33/CD/33 /CD/) an/DT/an ordered/VBN/ordered tree/NN/tree is/VBZ/is one/CD/one in/IN/in which/WDT/which the/DT/the children/NNS/children of/IN/of the/DT/the each/DT/each node/NN/node are/VBP/are ordered/NNP/ordered. that/IN/that means/VBZ/means there/EX/there is/VBZ/is a/DT/a notion/NN/notion in/IN/in which/WDT/which we/PRP/we would/MD/would like/VB/like to/TO/to put/VB/put the/DT/the left/NN/left child/NN/child in/IN/in the/DT/the 1stlevel/JJ/1stlevel to/TO/to the/DT/the right/NN/right side/NNP/side. suppose/NN/suppose if/IN/if you/PRP/you want/VBP/want to/TO/to draw/VB/draw a/DT/a family/NN/family tree/NN/tree /,/, you/PRP/you may/MD/may want/VB/want to/TO/to draw/VB/draw the/DT/the eldest/JJS/eldest child/NN/child to/TO/to the/DT/the left/NN/left and/CC/and the/DT/the younger/NN/younger child/NN/child as/IN/as you/PRP/you move/VBP/move from/IN/from left/VBN/left to/TO/to right/NNP/right. there/RB/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of order/NN/order there/EX/there and/CC/and some/DT/some time/NN/time you/PRP/you want/VBP/want to/TO/to reflect/VB/reflect that/IN/that order/NN/order in/IN/in your/PRP$/your tree/NNP/tree. but/CC/but there/EX/there would/MD/would be/VB/be no/RB/no notion/NN/notion of/IN/of order/NN/order in/IN/in the/DT/the following/JJ/following example/NNP/example. the/DT/the node/NN/node which/WDT/which is/VBZ/is in/IN/in the/DT/the level/NN/level 0/-NONE-/0 is/VBZ/is a/DT/a directory/NN/directory and/CC/and in/IN/in the/DT/the 1stlevel/JJ/1stlevel there/EX/there are/VBP/are two/CD/two sub-directories/NNP/sub-directories. whether/IN/whether i/PRP/i place/VBP/place the/DT/the left/NN/left node/NN/node to/TO/to the/DT/the right/NN/right or/CC/or the/DT/the right/NN/right node/NN/node to/TO/to the/DT/the left/NN/left /,/, it/PRP/it does/VBZ/does not/RB/not really/RB/really make/VB/make any/DT/any difference/NN/difference as/IN/as far/RB/far as/IN/as the/DT/the picture/NN/picture is/VBZ/is concerned/NNP/concerned. also/RB/also it/PRP/it does/VBZ/does not/RB/not convey/VB/convey any/DT/any additional/JJ/additional information/NN/information but/CC/but sometimes/RB/sometimes you/PRP/you might/MD/might have/VB/have the/DT/the notion/NN/notion of/IN/of order/NN/order between/IN/between the/DT/the children/NNP/children. such/JJ/such a/DT/a tree/NN/tree is/VBZ/is called/VBN/called an/DT/an ordered/VBN/ordered tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 9/CD/9 /:/: 37/CD/37 /CD/) a/DT/a binary/JJ/binary tree/NN/tree is/VBZ/is an/DT/an ordered/VBN/ordered tree/NN/tree in/IN/in which/WDT/which there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of left/VBN/left child/NN/child and/CC/and a/DT/a right/NN/right child/NNP/child. actually/RB/actually it/PRP/it is/VBZ/is an/DT/an ordered/VBN/ordered tree/NN/tree in/IN/in which/WDT/which every/DT/every node/NN/node has/VBZ/has at/IN/at most/JJS/most 2/CD/2 children/NNP/children. the/DT/the diagram/NN/diagram given/VBN/given in/IN/in the/DT/the slide/NN/slide below/IN/below is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a binary/JJ/binary tree/NNP/tree. the/DT/the root/NN/root node/NN/node has/VBZ/has 2/CD/2 children/NNS/children and/CC/and the/DT/the child/NN/child node/NN/node on/IN/on the/DT/the left/NN/left has/VBZ/has only/RB/only 1/CD/1 child/NN/child and/CC/and the/DT/the following/VBG/following child/NN/child on/IN/on the/DT/the right/NN/right has/VBZ/has only/RB/only 1/CD/1 child/NNP/child. the/DT/the node/NN/node which/WDT/which does/VBZ/does not/RB/not have/VB/have child/VBN/child node/NN/node are/VBP/are said/VBN/said to/TO/to be/VB/be leaves/NNP/leaves. we/PRP/we have/VBP/have 5/CD/5 leaves/NNS/leaves which/WDT/which have/VBP/have no/DT/no children/NNP/children. these/DT/these nodes/NNS/nodes in/IN/in the/DT/the 1stlevel/JJ/1stlevel are/VBP/are ordered/VBN/ordered and/CC/and there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of left/VBN/left and/CC/and right/RB/right nodes/NNP/nodes. if/IN/if i/PRP/i were/VBD/were to/TO/to change/VB/change the/DT/the tree/NN/tree that/IN/that is/VBZ/is if/IN/if i/PRP/i were/VBD/were to/TO/to draw/VB/draw the/DT/the left/NN/left nodes/VBZ/nodes on/IN/on the/DT/the right/NN/right and/CC/and right/RB/right nodes/VBZ/nodes on/IN/on the/DT/the left/NN/left then/RB/then i/PRP/i get/VBP/get a/DT/a different/JJ/different binary/NN/binary tree/NNP/tree. that/IN/that would/MD/would still/RB/still be/VB/be a/DT/a binary/JJ/binary tree/NN/tree but/CC/but it/PRP/it would/MD/would be/VB/be different/JJ/different from/IN/from this/DT/this binary/JJ/binary tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11.06/CD/11.06 /CD/) all/DT/all of/IN/of this/DT/this is/VBZ/is dependent/NN/dependent upon/IN/upon the/DT/the application/NN/application you/PRP/you have/NNP/have. this/DT/this is/VBZ/is just/RB/just a/DT/a way/NN/way of/IN/of representing/VBG/representing information/NNP/information. sometimes/RB/sometimes the/DT/the order/NN/order has/VBZ/has meaning/VBG/meaning to/TO/to it/PRP/it /,/, sometime/RB/sometime it/PRP/it has/VBZ/has no/DT/no meaning/NN/meaning to/TO/to it/NNP/it. when/WRB/when it/PRP/it has/VBZ/has some/DT/some meaning/NN/meaning to/TO/to it/PRP/it then/RB/then you/PRP/you would/MD/would rather/RB/rather use/VB/use an/DT/an ordered/VBN/ordered binary/JJ/binary tree/NN/tree and/CC/and when/WRB/when you/PRP/you change/VBP/change the/DT/the order/NN/order /,/, then/RB/then you/PRP/you are/VBP/are representing/VBG/representing something/NN/something different/NNP/different. we/PRP/we will/MD/will see/VB/see more/RBR/more example/NN/example of/IN/of this/DT/this and/CC/and things/NNS/things would/MD/would become/VB/become clear/NNP/clear. i/PRP/i can/MD/can also/RB/also define/VB/define a/DT/a binary/JJ/binary tree/NN/tree in/IN/in a/DT/a recursive/JJ/recursive form/NN/form as/IN/as follows/NNP/follows. a/DT/a binary/JJ/binary tree/NN/tree is/VBZ/is just/RB/just a/DT/a single/JJ/single node/NN/node or/CC/or a/DT/a leaf/NN/leaf or/CC/or it/PRP/it is/VBZ/is an/DT/an internal/JJ/internal node/NN/node which/WDT/which is/VBZ/is the/DT/the root/NN/root to/TO/to which/WDT/which i/PRP/i have/VBP/have attached/VBN/attached 2/CD/2 binary/JJ/binary trees/NNP/trees. in/IN/in the/DT/the following/JJ/following slide/NN/slide the/DT/the nodes/NNS/nodes which/WDT/which are/VBP/are marked/VBN/marked on/IN/on the/DT/the left/NN/left side/NN/side are/VBP/are called/VBN/called left/VBN/left subtree/JJ/subtree and/CC/and the/DT/the nodes/NNS/nodes marked/VBD/marked on/IN/on the/DT/the right/NN/right are/VBP/are called/VBN/called right/RB/right subtree/NNP/subtree. i/PRP/i can/MD/can construct/VB/construct any/DT/any binary/JJ/binary tree/NN/tree in/IN/in this/DT/this manner/NNP/manner. i/PRP/i take/VBP/take a/DT/a node/NN/node and/CC/and attach/NN/attach a/DT/a left/NN/left subtree/NN/subtree and/CC/and a/DT/a right/NN/right subtree/NNP/subtree. i/PRP/i get/VBP/get a/DT/a left/NN/left subtree/NN/subtree and/CC/and right/RB/right subtree/JJ/subtree through/IN/through recursive/JJ/recursive in/IN/in which/WDT/which it/PRP/it is/VBZ/is obtained/VBN/obtained by/IN/by taking/NN/taking a/DT/a node/NN/node and/CC/and attaching/VBG/attaching it/PRP/it to/TO/to the/DT/the left/NN/left and/CC/and right/RB/right subtrees/NNP/subtrees. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 12/CD/12 /CD/) i/PRP/i have/VBP/have said/VBN/said and/or/-NONE-/and/or which/WDT/which means/VBZ/means this/DT/this left/NN/left subtree/NN/subtree might/MD/might be/VB/be null/RB/null that/IN/that is/VBZ/is i/PRP/i might/MD/might not/RB/not attached/VBN/attached anything/NN/anything or/CC/or i/PRP/i might/MD/might not/RB/not attached/VBN/attached anything/NN/anything to/TO/to the/DT/the right/NN/right or/CC/or i/PRP/i might/MD/might have/VB/have attached/VBN/attached both/DT/both the/DT/the subtrees/NNP/subtrees. remember/NN/remember we/PRP/we have/VBP/have introduced/VBN/introduced other/JJ/other terms/NNS/terms /,/, left/VBN/left subtree/NN/subtree and/CC/and right/RB/right subtree/NNP/subtree. the/DT/the node/NN/node to/TO/to the/DT/the left/NN/left side/NN/side of/IN/of the/DT/the root/NN/root node/NN/node is/VBZ/is called/VBN/called the/DT/the left/NN/left subtree/NN/subtree and/CC/and the/DT/the node/NN/node on/IN/on the/DT/the right/NN/right side/NN/side is/VBZ/is called/VBN/called right/RB/right subtree/NNP/subtree. what/WP/what is/VBZ/is the/DT/the left/VBN/left subtree/NN/subtree of/IN/of the/DT/the node/NN/node which/WDT/which is/VBZ/is in/IN/in the/DT/the 1stlevel/JJ/1stlevel ?/./? in/IN/in the/DT/the 2ndlevel/JJ/2ndlevel /,/, the/DT/the node/NN/node at/IN/at the/DT/the extreme/NN/extreme left/VBD/left is/VBZ/is the/DT/the left/VBN/left subtree/NN/subtree of/IN/of the/DT/the node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 49/CD/49 /CD/) one/CD/one example/NN/example of/IN/of a/DT/a binary/JJ/binary tree/NN/tree is/VBZ/is the/DT/the arithmetic/JJ/arithmetic expressions/NNP/expressions. i/PRP/i have/VBP/have an/DT/an arithmetic/JJ/arithmetic expression/NN/expression which/WDT/which looks/NNS/looks like/IN/like the/DT/the one/CD/one given/VBN/given in/IN/in the/DT/the slide/NN/slide below/NNP/below. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 27/CD/27 /CD/) i/PRP/i can/MD/can represent/VB/represent this/DT/this as/IN/as a/DT/a binary/JJ/binary tree/NNP/tree. let/NN/let us/PRP/us look/VBP/look at/IN/at a/DT/a parenthezisation/NN/parenthezisation of/IN/of this/DT/this expression/NNP/expression. suppose/NN/suppose i/PRP/i have/VBP/have parenthesized/VBN/parenthesized in/IN/in the/DT/the manner/NN/manner like/IN/like /,/, which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the last/JJ/last line/NN/line of/IN/of the/DT/the slide/NNP/slide. we/PRP/we have/VBP/have /:/( 4/CD/4 +/CD/+ 6/CD/6 /CD/) /,/, the/DT/the numbers/NNS/numbers here/RB/here will/MD/will be/VB/be the/DT/the leaves/NNS/leaves of/IN/of my/PRP$/my binary/JJ/binary tree/NN/tree and/CC/and the/DT/the internal/JJ/internal node/NN/node would/MD/would correspond/VB/correspond to/TO/to the/DT/the operations/NNP/operations. in/IN/in fact/NN/fact this/DT/this is/VBZ/is also/RB/also one/CD/one way/NN/way to/TO/to evaluate/VB/evaluate this/DT/this expression/NNP/expression. you/PRP/you would/MD/would take/VB/take 4/CD/4 +/CD/+ 6/CD/6 and/CC/and you/PRP/you would/MD/would sum/VB/sum that/NNP/that. you/PRP/you would/MD/would draw/VB/draw a/DT/a tree/NN/tree which/WDT/which has/VBZ/has 1/CD/1 internal/JJ/internal node/NN/node and/CC/and its/PRP$/its two/CD/two children/NNS/children are/VBP/are 4/CD/4 and/CC/and 6/CD/6. the/DT/the internal/JJ/internal node/NN/node would/MD/would have/VB/have plus/RB/plus operator/NN/operator in/IN/in it/NNP/it. whatever/NN/whatever is/VBZ/is the/DT/the resulting/VBG/resulting value/NN/value we/PRP/we are/VBP/are adding/VBG/adding that/IN/that to/TO/to 1/CD/1. i/PRP/i draw/VBP/draw a/DT/a tree/NN/tree whose/WP$/whose root/NN/root is/VBZ/is a/DT/a plus/NN/plus operator/NN/operator and/CC/and one/CD/one child/NN/child is/VBZ/is 1/CD/1 and/CC/and the/DT/the other/JJ/other child/NN/child is/VBZ/is the/DT/the subtree/NN/subtree that/IN/that is/VBZ/is obtained/VBN/obtained from/IN/from this/DT/this operation/NN/operation and/CC/and i/PRP/i could/MD/could build/VB/build this/DT/this tree/NNP/tree. this/DT/this is/VBZ/is just/RB/just another/DT/another way/NN/way of/IN/of representing/VBG/representing arithmetic/JJ/arithmetic expression/NNP/expression. decision/NN/decision tree/NN/tree is/VBZ/is another/DT/another example/NN/example of/IN/of binary/JJ/binary tree/NNP/tree. the/DT/the example/NN/example given/VBN/given in/IN/in the/DT/the slide/NN/slide below/IN/below is/VBZ/is taken/VBN/taken from/IN/from the/DT/the book/NNP/book. star/NN/star bucks/NNS/bucks /,/, caf/NN/caf ?/./? paragon/NN/paragon and/CC/and most/JJS/most of/IN/of it/PRP/it would/MD/would not/RB/not make/VB/make much/JJ/much sense/NN/sense /,/, may/MD/may be/VB/be we/PRP/we would/MD/would not/RB/not come/VB/come across/RP/across them/NNP/them. what/WP/what is/VBZ/is the/DT/the decision/NN/decision tree/NN/tree ?/./? each/DT/each node/NN/node in/IN/in the/DT/the decision/NN/decision tree/NN/tree corresponds/NNS/corresponds to/TO/to some/DT/some decision/NN/decision that/IN/that you/PRP/you want/VBP/want to/TO/to make/NNP/make. you/PRP/you come/VBP/come to/TO/to root/NN/root node/NN/node and/CC/and ask/NN/ask whether/IN/whether you/PRP/you want/VBP/want a/DT/a fast/NN/fast meal/NNP/meal. the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes then/RB/then you/PRP/you come/VBP/come to/TO/to the/DT/the left/NN/left node/NN/node and/CC/and whether/IN/whether you/PRP/you want/VBP/want coffee/NN/coffee or/CC/or not/NNP/not. the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes then/RB/then you/PRP/you go/VBP/go to/TO/to star/VB/star bucks/NNP/bucks. if/IN/if the/DT/the answer/NN/answer is/VBZ/is no/DT/no you/PRP/you may/MD/may go/VB/go to/TO/to some/DT/some other/JJ/other place/NN/place and/CC/and so/RB/so on/NNP/on. thus/RB/thus decision/NN/decision trees/NNS/trees are/VBP/are another/DT/another example/NN/example of/IN/of binary/JJ/binary trees/NNP/trees. why/WRB/why because/IN/because typically/RB/typically it/PRP/it is/VBZ/is yes/VBZ/yes and/CC/and no/NNP/no. you/PRP/you would/MD/would follow/VB/follow the/DT/the decision/NN/decision tree/NN/tree to/TO/to get/VB/get into/IN/into a/DT/a particular/JJ/particular node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 51/CD/51 /CD/) this/DT/this was/VBD/was just/RB/just more/JJR/more of/IN/of terminology/NN/terminology and/CC/and examples/NNP/examples. let/VB/let us/PRP/us see/VB/see more/JJR/more concrete/JJ/concrete stuff/NNP/stuff. let/NN/let us/PRP/us define/VBP/define a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. we/PRP/we are/VBP/are still/RB/still at/IN/at binary/JJ/binary trees/NNS/trees /,/, as/IN/as you/PRP/you can/MD/can see/VB/see every/DT/every node/NN/node in/IN/in this/DT/this tree/NN/tree has/VBZ/has less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 children/NNS/children or/CC/or at/IN/at most/JJS/most 2/CD/2 children/NNP/children. but/CC/but i/PRP/i will/MD/will call/VB/call such/PDT/such a/DT/a tree/NN/tree as/IN/as a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. we/PRP/we call/VBP/call a/DT/a tree/NN/tree as/IN/as a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree if/IN/if at/IN/at the/DT/the level/NN/level there/RB/there are/VBP/are nodes/NNP/nodes. in/IN/in some/DT/some sense/NN/sense it/PRP/it is/VBZ/is full/JJ/full and/CC/and when/WRB/when every/DT/every node/NN/node has/VBZ/has 2/CD/2 children/NNS/children it/PRP/it does/VBZ/does not/RB/not give/VB/give you/PRP/you a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 06/CD/06 /CD/) i/PRP/i will/MD/will show/VB/show you/PRP/you why/WRB/why it/PRP/it can/MD/can not/RB/not be/VB/be a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the slide/NN/slide below/IN/below and/CC/and check/NN/check whether/IN/whether every/DT/every internal/JJ/internal node/NN/node have/VBP/have 2/CD/2 children/NNS/children in/IN/in this/DT/this tree/NNP/tree. every/DT/every node/NN/node has/VBZ/has a/DT/a 2/CD/2 children/NNS/children then/RB/then that/IN/that tree/NN/tree should/MD/should also/RB/also have/VB/have leaves/NNP/leaves. it/PRP/it can/MD/can not/RB/not be/VB/be the/DT/the case/NN/case in/IN/in which/WDT/which every/DT/every node/NN/node has/VBZ/has 2/CD/2 children/NNS/children /,/, in/IN/in some/DT/some case/NN/case there/RB/there are/VBP/are no/DT/no children/NNP/children. just/RB/just with/IN/with the/DT/the requirement/NN/requirement that/IN/that every/DT/every node/NN/node has/VBZ/has 2/CD/2 children/NNS/children /,/, every/DT/every node/NN/node other/JJ/other than/IN/than the/DT/the leaf/NN/leaf that/IN/that means/NNS/means every/DT/every internal/JJ/internal node/NN/node has/VBZ/has 2/CD/2 children/NNS/children does/VBZ/does not/RB/not implies/VBZ/implies it/PRP/it as/RB/as a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. this/DT/this is/VBZ/is a/DT/a counter/NN/counter example/NN/example to/TO/to that/DT/that in/IN/in which/WDT/which every/DT/every internal/JJ/internal node/NN/node has/VBZ/has 2/CD/2 children/NNP/children. this/DT/this is/VBZ/is not/RB/not a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 00/CD/00 /CD/) the/DT/the following/JJ/following is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. we/PRP/we want/VBP/want to/TO/to say/VB/say that/IN/that at/IN/at level/NN/level i/PRP/i there/EX/there are/VBP/are node/NNP/node. the/DT/the root/NN/root node/NN/node is/VBZ/is at/IN/at level/NN/level 0/-NONE-/0 that/DT/that is/VBZ/is 1/CD/1 node/NN/node /,/, at/IN/at level/NN/level 1/CD/1 there/EX/there are/VBP/are 2/CD/2 nodes/NNS/nodes /,/, at/IN/at level/NN/level 2/CD/2 there/EX/there are/VBP/are 4/CD/4 and/CC/and at/IN/at level/NN/level 3/CD/3 there/EX/there are/VBP/are 8/CD/8. if/IN/if h/JJ/h is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, in/IN/in the/DT/the following/JJ/following example/NN/example what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree ?/./? we/PRP/we call/VBP/call height/RB/height as/IN/as the/DT/the maximum/NN/maximum level/NN/level number/NN/number so/RB/so we/PRP/we should/MD/should not/RB/not count/VB/count this/DT/this as/IN/as 4/CD/4. thus/RB/thus the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is 3/CD/3. if/IN/if h/JJ/h is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree that/IN/that means/NNS/means all/DT/all the/DT/the leaves/NNS/leaves are/VBP/are at/IN/at level/NN/level h/NN/h then/RB/then by/IN/by the/DT/the definition/NN/definition of/IN/of the/DT/the binary/JJ/binary tree/NN/tree we/PRP/we have/VBP/have said/VBN/said that/IN/that the/DT/the level/NN/level i/PRP/i has/VBZ/has nodes/NNS/nodes that/IN/that means/NNS/means there/EX/there are/VBP/are leaves/NNP/leaves. the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h is/VBZ/is just/RB/just /./. what/WP/what is/VBZ/is the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes ?/./? at/IN/at level/NN/level 0/-NONE-/0 we/PRP/we have/VBP/have 1/CD/1 node/NN/node /,/, at/IN/at level/NN/level 1/CD/1 we/PRP/we have/VBP/have 2/CD/2 nodes/NNS/nodes and/CC/and so/RB/so on/NNP/on. thus/RB/thus the/DT/the sum/NN/sum is/VBZ/is given/VBN/given as/RB/as 1/CD/1 +/CD/+ 2/CD/2 +/CD/+ /,/, because/IN/because at/IN/at level/NN/level h/NN/h all/DT/all the/DT/the nodes/NNS/nodes are/VBP/are leaf/IN/leaf nodes/NNP/nodes. thus/RB/thus the/DT/the sum/NN/sum is/VBZ/is /,/, this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes and/CC/and the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is /./. the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes is/VBZ/is the/DT/the number/NN/number of/IN/of leaves-1/NNP/leaves-1. this/DT/this is/VBZ/is for/IN/for a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 34/CD/34 /CD/) what/WP/what is/VBZ/is the/DT/the total/JJ/total number/NN/number of/IN/of nodes/NNS/nodes in/IN/in this/DT/this tree/NN/tree ?/./? it/PRP/it is/VBZ/is which/WDT/which is/VBZ/is the/DT/the number/NN/number of/IN/of leaves/NNS/leaves +/:/+ which/WDT/which is/VBZ/is the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes /,/, hence/NN/hence it/PRP/it becomes/VBZ/becomes /./. let/NN/let us/PRP/us call/VBP/call this/DT/this number/NN/number as/IN/as n/NNP/n. if/IN/if i/PRP/i have/VBP/have a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of n/NN/n nodes/NNS/nodes /,/, what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree ?/./? let/NN/let us/PRP/us go/VBP/go one/CD/one step/NN/step at/IN/at a/DT/a time/NNP/time. what/WP/what is/VBZ/is the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in this/DT/this tree/NN/tree ?/./? if/IN/if the/DT/the number/NN/number of/IN/of nodes/NNS/nodes is/VBZ/is n/VBN/n and/CC/and the/DT/the number/NN/number of/IN/of leaves/NNS/leaves was/VBD/was which/WDT/which equals/NNS/equals /,/, just/RB/just from/IN/from this/DT/this /NN/( =/:/= n/NN/n /:/) expression/NNP/expression. the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes is/VBZ/is /./. if/IN/if i/PRP/i have/VBP/have a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes /,/, half/DT/half of/IN/of the/DT/the nodes/NNS/nodes are/VBP/are leaves/NNS/leaves and/CC/and the/DT/the remaining/VBG/remaining half/DT/half are/VBP/are of/IN/of internal/JJ/internal nodes/NNP/nodes. similarly/RB/similarly i/PRP/i can/MD/can say/VB/say that/IN/that if/IN/if i/PRP/i have/VBP/have a/DT/a tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes /,/, then/RB/then the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is /:/( no/DT/no of/IN/of leaves/NNS/leaves /:/) /./. i/PRP/i can/MD/can evaluate/VB/evaluate h/NN/h from/IN/from /NNP/( =/NNP/= n/NN/n /:/) /,/, h/NN/h will/MD/will be/VB/be log/NN/log /:/( /:/) and/CC/and so/RB/so it/PRP/it is/VBZ/is the/DT/the log/NN/log /:/( no/DT/no of/IN/of leaves/NNS/leaves /:/) /./. else/RB/else we/PRP/we can/MD/can go/VB/go directly/RB/directly from/IN/from /,/, where/WRB/where the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is and/CC/and so/RB/so h/JJ/h is/VBZ/is log/JJ/log /NN/( no/DT/no of/IN/of leaves/NNS/leaves /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 37/CD/37 /CD/) you/PRP/you are/VBP/are just/RB/just doing/VBG/doing some/DT/some simple/JJ/simple counting/NN/counting here/NNP/here. if/IN/if i/PRP/i give/VBP/give you/PRP/you a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h then/RB/then you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to say/VB/say about/IN/about the/DT/the number/NN/number of/IN/of leaves/NNS/leaves and/CC/and the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes it/PRP/it has/NNP/has. when/WRB/when i/PRP/i give/VBP/give you/PRP/you a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes /,/, you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to say/VB/say the/DT/the height/NN/height and/CC/and so/RB/so on/NNP/on. if/IN/if you/PRP/you have/VBP/have a/DT/a tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes then/RB/then the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is log/NN/log /:/( /:/) /./. the/DT/the other/JJ/other thing/NN/thing your/PRP$/your have/VBP/have to/TO/to keep/VB/keep in/IN/in mind/NN/mind is/VBZ/is that/IN/that in/IN/in such/JJ/such a/DT/a tree/NN/tree the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is very/RB/very large/NNP/large. it/PRP/it is/VBZ/is roughly/RB/roughly half/DT/half the/DT/the total/JJ/total number/NN/number of/IN/of nodes/NNP/nodes. it/PRP/it is/VBZ/is very/RB/very leafy/JJ/leafy kind/NN/kind of/IN/of a/DT/a tree/NNP/tree. so/RB/so far/RB/far we/PRP/we have/VBP/have seen/VBN/seen a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree but/CC/but a/DT/a binary/JJ/binary tree/NN/tree is/VBZ/is any/DT/any tree/NN/tree in/IN/in which/WDT/which every/DT/every node/NN/node has/VBZ/has atmost/VBN/atmost 2/CD/2 children/NNP/children. to/TO/to get/VB/get any/DT/any binary/JJ/binary tree/NN/tree /,/, you/PRP/you can/MD/can start/VB/start with/IN/with a/DT/a suitably/RB/suitably large/JJ/large complete/JJ/complete binary/NN/binary tree/NN/tree and/CC/and just/RB/just cut/VBD/cut it/PRP/it off/NNP/off. for/IN/for instance/NN/instance if/IN/if i/PRP/i were/VBD/were to/TO/to cut/VB/cut off/RP/off some/DT/some pieces/NNS/pieces then/RB/then i/PRP/i would/MD/would get/VB/get a/DT/a binary/JJ/binary tree/NN/tree as/IN/as shown/NN/shown in/IN/in the/DT/the slide/NN/slide below/NNP/below. i/PRP/i can/MD/can always/RB/always do/VB/do it/PRP/it /,/, no/DT/no matter/NN/matter about/IN/about the/DT/the tree/NN/tree i/PRP/i need/NNP/need. take/VBP/take the/DT/the binary/JJ/binary tree/NN/tree on/IN/on the/DT/the right/NN/right side/NN/side as/IN/as height/NN/height 3/CD/3 then/RB/then i/PRP/i would/MD/would start/VB/start with/IN/with the/DT/the complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height 3/CD/3 which/WDT/which is/VBZ/is on/IN/on the/DT/the left/NNP/left. just/RB/just cut/VBD/cut off/RP/off some/DT/some pieces/NNS/pieces on/IN/on the/DT/the left/NN/left side/NN/side of/IN/of the/DT/the tree/NN/tree to/TO/to get/VB/get the/DT/the tree/NN/tree which/WDT/which is/VBZ/is on/IN/on the/DT/the right/NN/right side/NNP/side. the/DT/the picture/NN/picture given/VBN/given in/IN/in the/DT/the slide/NN/slide below/IN/below is/VBZ/is the/DT/the proof/NNP/proof. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 07/CD/07 /CD/) let/NN/let us/PRP/us use/VBP/use this/DT/this fact/NN/fact that/IN/that you/PRP/you can/MD/can obtain/VB/obtain any/DT/any binary/JJ/binary tree/NN/tree by/IN/by just/RB/just pruning/VBG/pruning of/IN/of a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. take/NN/take a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree /,/, cut/VBD/cut off/RP/off some/DT/some branches/NNS/branches then/RB/then you/PRP/you will/MD/will get/VB/get a/DT/a binary/JJ/binary tree/NNP/tree. if/IN/if i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree of/IN/of height/NN/height h/NN/h then/RB/then in/IN/in a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree at/IN/at level/NN/level i/PRP/i there/EX/there were/VBD/were atmost/VBN/atmost nodes/-NONE-/nodes. in/IN/in a/DT/a binary/JJ/binary tree/NN/tree at/IN/at level/NN/level i/PRP/i there/EX/there will/MD/will be/VB/be atmost/VBN/atmost nodes/NNS/nodes /,/, there/EX/there can/MD/can not/RB/not be/VB/be more/RBR/more than/IN/than nodes/NNS/nodes because/IN/because the/DT/the binary/JJ/binary tree/NN/tree is/VBZ/is obtained/VBN/obtained from/IN/from a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree by/IN/by pruning/NNP/pruning. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 14/CD/14 /CD/) this/DT/this is/VBZ/is an/DT/an important/JJ/important fact/NN/fact /,/, atmost/RB/atmost nodes/VBZ/nodes at/IN/at level/NN/level i/PRP/i implies/VBZ/implies that/IN/that the/DT/the total/JJ/total number/NN/number of/IN/of nodes/NNS/nodes in/IN/in your/PRP$/your binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h is/VBZ/is atmost/VBN/atmost 1/CD/1 +/CD/+ 2/CD/2 +/CD/+ nodes/NNP/nodes. the/DT/the last/JJ/last level/NN/level is/VBZ/is h/JJ/h /,/, at/IN/at level/NN/level 0/-NONE-/0 there/EX/there will/MD/will be/VB/be 1/CD/1 node/NN/node /,/, at/IN/at level/NN/level 1/CD/1 there/EX/there is/VBZ/is atmost/VBN/atmost 2/CD/2 nodes/NNS/nodes /,/, at/IN/at level/NN/level 2/CD/2 there/EX/there are/VBP/are atmost/RB/atmost 4/CD/4 nodes/NNS/nodes and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of nodes/NNS/nodes that/WDT/that binary/JJ/binary tree/NN/tree can/MD/can have/NNP/have. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 23/CD/23 /CD/) let/NN/let us/PRP/us rewrite/VBP/rewrite this/NNP/this. suppose/NN/suppose i/PRP/i told/VBD/told you/PRP/you that/IN/that a/DT/a tree/NN/tree has/VBZ/has n/VBN/n nodes/NNP/nodes. then/RB/then n/VB/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to this/DT/this /NN/( /:/) quantity/NN/quantity /,/, n/NN/n </:/< =/:/= which/WDT/which means/VBZ/means that/DT/that the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is just/RB/just rearranged/VBN/rearranged and/CC/and it/PRP/it is/VBZ/is h/JJ/h >/NN/> =/:/= /./. if/IN/if i/PRP/i give/VBP/give you/PRP/you a/DT/a binary/JJ/binary tree/NN/tree with/IN/with n/NN/n nodes/NNS/nodes in/IN/in it/PRP/it /,/, its/PRP$/its height/NN/height is/VBZ/is atleast/VBN/atleast and/CC/and there/EX/there is/VBZ/is a/DT/a particular/JJ/particular binary/NN/binary tree/NN/tree which/WDT/which achieves/NNS/achieves this/DT/this equality/NN/equality and/CC/and that/IN/that is/VBZ/is a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. think/NN/think of/IN/of a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree as/IN/as a/DT/a tree/NN/tree which/WDT/which acquires/NNS/acquires the/DT/the smallest/JJS/smallest height/NNP/height. if/IN/if i/PRP/i create/VBP/create a/DT/a binary/JJ/binary tree/NN/tree with/IN/with the/DT/the certain/JJ/certain number/NN/number of/IN/of nodes/NNS/nodes /,/, the/DT/the one/CD/one which/WDT/which has/VBZ/has the/DT/the shortest/JJS/shortest height/NN/height will/MD/will be/VB/be a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. because/IN/because there/EX/there we/PRP/we are/VBP/are packing/VBG/packing all/DT/all the/DT/the nodes/NNS/nodes as/IN/as close/JJ/close to/TO/to the/DT/the root/NN/root as/IN/as possible/JJ/possible by/IN/by filling/NN/filling up/IN/up all/DT/all the/DT/the levels/NNS/levels to/TO/to the/DT/the maximum/NNP/maximum. that/IN/that is/VBZ/is the/DT/the minimum/JJ/minimum height/NN/height of/IN/of the/DT/the binary/JJ/binary tree/NNP/tree. i/PRP/i give/VBP/give you/PRP/you a/DT/a binary/JJ/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes /,/, its/PRP$/its minimum/JJ/minimum possible/JJ/possible height/NN/height is/VBZ/is /./. what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum height/NN/height that/WDT/that a/DT/a binary/JJ/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes can/MD/can have/VB/have ?/./? a/DT/a binary/JJ/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes has/VBZ/has height/VBN/height atmost/NN/atmost n-1/NNP/n-1. this/DT/this is/VBZ/is obtained/VBN/obtained when/WRB/when every/DT/every node/NN/node has/VBZ/has exactly/RB/exactly 1/CD/1 child/NN/child and/CC/and the/DT/the picture/NN/picture is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide below/NNP/below. this/DT/this would/MD/would be/VB/be a/DT/a zigzag/NN/zigzag in/IN/in any/DT/any manner/NN/manner and/CC/and the/DT/the height/NN/height is/VBZ/is 8/CD/8 since/IN/since there/EX/there are/VBP/are 9/CD/9 nodes/NNS/nodes in/IN/in it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 35/CD/35 /CD/) in/IN/in a/DT/a binary/JJ/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes the/DT/the minimum/JJ/minimum height/NN/height is/VBZ/is log/NN/log /:/( n/NN/n /:/) that/IN/that is/VBZ/is log/JJ/log /NN/( /:/) /,/, but/CC/but we/PRP/we say/VBP/say it/PRP/it as/IN/as log/NN/log /:/( n/NN/n /:/) and/CC/and the/DT/the maximum/NN/maximum height/NN/height is/VBZ/is n-1/NNP/n-1. that/IN/that is/VBZ/is the/DT/the mistake/NN/mistake many/JJ/many people/NNS/people make/NNP/make. they/PRP/they always/RB/always assume/VBP/assume that/IN/that binary/JJ/binary tree/NN/tree means/VBZ/means height/NN/height is/VBZ/is log/NN/log /:/( n/NN/n /:/) /./. but/CC/but it/PRP/it is/VBZ/is not/RB/not the/DT/the case/NN/case /,/, it/PRP/it could/MD/could be/VB/be anywhere/RB/anywhere between/IN/between log/NN/log n/NN/n and/CC/and n/NNP/n. how/WRB/how many/JJ/many leaves/NNS/leaves does/VBZ/does the/DT/the binary/JJ/binary tree/NN/tree have/VBP/have ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 44/CD/44 /CD/) what/WP/what is/VBZ/is the/DT/the minimum/JJ/minimum and/CC/and the/DT/the maximum/NN/maximum number/NN/number of/IN/of leaves/NNS/leaves it/PRP/it can/MD/can have/VB/have ?/./? let/VB/let us/PRP/us figure/VB/figure it/PRP/it out/NNP/out. we/PRP/we will/MD/will prove/VB/prove that/IN/that the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in a/DT/a tree/NN/tree is/VBZ/is </:/< =/:/= +/:/+ no/DT/no of/IN/of internal/JJ/internal nodes/NNP/nodes. this/DT/this is/VBZ/is the/DT/the useful/JJ/useful inequality/NN/inequality /,/, in/IN/in any/DT/any binary/JJ/binary tree/NN/tree the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is </:/< +/:/+ the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes or/CC/or atmost/VB/atmost the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in a/DT/a tree/NN/tree can/MD/can be/VB/be 1/CD/1 more/JJR/more than/IN/than the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNP/nodes. how/WRB/how will/MD/will you/PRP/you prove/VB/prove this/DT/this ?/./? we/PRP/we will/MD/will prove/VB/prove it/PRP/it by/IN/by induction/NN/induction on/IN/on the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNP/nodes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 19/CD/19 /CD/) in/IN/in a/DT/a base/NN/base case/NN/case consider/NN/consider a/DT/a tree/NN/tree with/IN/with 1/CD/1 node/NNP/node. if/IN/if a/DT/a tree/NN/tree has/VBZ/has only/RB/only 1/CD/1 node/NN/node how/WRB/how many/JJ/many internal/JJ/internal nodes/NNS/nodes does/VBZ/does it/PRP/it have/VB/have ?/./? it/PRP/it is/VBZ/is 0/-NONE-/0 /,/, because/IN/because that/DT/that 1/CD/1 node/NN/node does/VBZ/does not/RB/not have/VB/have any/DT/any child/NN/child so/IN/so that/IN/that is/VBZ/is the/DT/the leaf/NNP/leaf. base/NN/base case/NN/case is/VBZ/is when/WRB/when the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes is/VBZ/is 0/-NONE-/0 /,/, in/IN/in which/WDT/which case/NN/case the/DT/the right/NN/right hand/NN/hand side/NN/side is/VBZ/is 1/CD/1 that/IN/that is/VBZ/is the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is 1/CD/1 so/RB/so the/DT/the inequality/NN/inequality is/VBZ/is satisfied/NNP/satisfied. we/PRP/we will/MD/will assume/VB/assume that/IN/that the/DT/the statement/NN/statement is/VBZ/is true/JJ/true for/IN/for all/DT/all trees/NNS/trees with/IN/with less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k-1/-NONE-/k-1 internal/JJ/internal nodes/NNP/nodes. this/DT/this should/MD/should be/VB/be read/VBN/read as/IN/as /,/, the/DT/the statement/NN/statement is/VBZ/is true/JJ/true for/IN/for trees/NNS/trees with/IN/with atmost/JJS/atmost k-1/-NONE-/k-1 internal/JJ/internal nodes/NNS/nodes not/RB/not just/RB/just k-1/-NONE-/k-1 but/CC/but anything/NN/anything even/RB/even for/IN/for less/JJR/less this/DT/this statement/NN/statement is/VBZ/is true/NNP/true. we/PRP/we will/MD/will prove/VB/prove it/PRP/it for/IN/for a/DT/a tree/NN/tree with/IN/with k/NN/k internal/JJ/internal nodes/NNP/nodes. suppose/NN/suppose i/PRP/i have/VBP/have a/DT/a tree/NN/tree with/IN/with k/NN/k internal/JJ/internal nodes/NNS/nodes /,/, let/VB/let us/PRP/us say/VB/say on/IN/on the/DT/the left/NN/left subtree/NN/subtree i/PRP/i have/VBP/have internal/JJ/internal node/NNP/node. then/RB/then how/WRB/how many/JJ/many internal/JJ/internal nodes/NNS/nodes do/VBP/do i/PRP/i have/VB/have on/IN/on the/DT/the right/NN/right subtree/NN/subtree ?/./? it/PRP/it is/VBZ/is exactly/RB/exactly k/-NONE-/k- -1/-NONE-/-1 and/CC/and not/RB/not atmost/VB/atmost because/IN/because all/DT/all the/DT/the internal/JJ/internal nodes/NNS/nodes are/VBP/are either/RB/either in/IN/in the/DT/the left/NN/left subtree/NN/subtree or/CC/or in/IN/in the/DT/the right/NN/right subtree/NN/subtree or/CC/or it/PRP/it is/VBZ/is the/DT/the root/NN/root node/NNP/node. the/DT/the minus/NN/minus one/CD/one is/VBZ/is because/IN/because of/IN/of the/DT/the root/NN/root node/NNP/node. this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes in/IN/in the/DT/the right/NN/right subtree/NNP/subtree. let/NN/let us/PRP/us apply/RB/apply the/DT/the induction/NN/induction hypothesis/NNP/hypothesis. is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k-1/-NONE-/k-1 and/CC/and the/DT/the quantity/NN/quantity /:/( k/JJ/k- -1/-NONE-/-1 /:/) is/VBZ/is also/RB/also less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k-1/NNP/k-1. we/PRP/we can/MD/can use/VB/use the/DT/the induction/NN/induction hypothesis/NNP/hypothesis. in/IN/in the/DT/the left/NN/left subtree/NN/subtree which/WDT/which has/VBZ/has internal/JJ/internal nodes/NNS/nodes /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to +/VB/+ 1/CD/1. in/IN/in the/DT/the right/NN/right subtree/NN/subtree the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k/NNP/k- -1/-NONE-/-1 +/:/+ 1/CD/1 which/WDT/which is/VBZ/is k/-NONE-/k- /./. the/DT/the total/JJ/total number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is just/RB/just the/DT/the sum/NN/sum of/IN/of these/DT/these two/CD/two /CD/( /CD/( +/CD/+ 1/CD/1 /CD/) +/CD/+ /CD/( k/JJ/k- /NN/) /:/) /,/, all/DT/all the/DT/the leaves/NNS/leaves are/VBP/are either/RB/either in/IN/in the/DT/the left/NN/left subtree/NN/subtree or/CC/or in/IN/in the/DT/the right/NN/right subtree/NNP/subtree. the/DT/the total/JJ/total number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is just/RB/just the/DT/the sum/NN/sum which/WDT/which is/VBZ/is k/VBP/k +/-NONE-/+ 1/CD/1 that/WDT/that is/VBZ/is we/PRP/we wanted/VBD/wanted to/TO/to prove/NNP/prove. since/IN/since we/PRP/we started/VBD/started a/DT/a tree/NN/tree with/IN/with a/DT/a k/NN/k internal/JJ/internal node/NN/node /,/, you/PRP/you have/VBP/have to/TO/to show/VB/show that/IN/that the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is less/JJR/less than/IN/than 1/CD/1 +/CD/+ k/NNP/k. this/DT/this is/VBZ/is a/DT/a simple/JJ/simple proof/NN/proof which/WDT/which shows/VBZ/shows the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is atmost/VBN/atmost 1/CD/1 +/CD/+ the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNP/nodes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 44/CD/44 /CD/) there/EX/there was/VBD/was a/DT/a tree/NN/tree in/IN/in which/WDT/which we/PRP/we saw/VBD/saw the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes +/:/+ 1/CD/1. it/PRP/it was/VBD/was in/IN/in a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. what/WP/what was/VBD/was the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree ?/./? the/DT/the number/NN/number of/IN/of leaves/NNS/leaves was/VBD/was /,/, if/IN/if h/NN/h was/VBD/was the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree and/CC/and the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes was/VBD/was 1/CD/1 +/CD/+ 2/CD/2 +/CD/+ nodes/NNP/nodes. there/RB/there was/VBD/was exactly/RB/exactly a/DT/a difference/NN/difference of/IN/of 1/CD/1 between/IN/between the/DT/the number/NN/number of/IN/of leaves/NNS/leaves and/CC/and the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNP/nodes. the/DT/the complete/JJ/complete binary/NN/binary tree/NN/tree once/RB/once again/RB/again achieves/VBZ/achieves the/DT/the equality/NNP/equality. for/IN/for any/DT/any other/JJ/other tree/NN/tree the/DT/the number/NN/number of/IN/of leaves/NNS/leaves will/MD/will only/RB/only be/VB/be less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to this/DT/this sum/NNP/sum. how/WRB/how small/JJ/small it/PRP/it can/MD/can be/VB/be ?/./? /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 53/CD/53 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at that/NNP/that. for/IN/for a/DT/a binary/JJ/binary tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves +/:/+ the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes is/VBZ/is n/NNP/n. because/IN/because every/DT/every node/NN/node is/VBZ/is either/DT/either a/DT/a leaf/NN/leaf or/CC/or an/DT/an internal/JJ/internal node/NNP/node. also/RB/also we/PRP/we just/RB/just saw/VBD/saw that/IN/that the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes +/:/+ 1/CD/1. i/PRP/i will/MD/will just/RB/just rearrange/VB/rearrange /,/, this/DT/this implies/VBZ/implies that/IN/that the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is /./. i/PRP/i have/VBP/have just/RB/just rearranged/VBN/rearranged /,/, as/IN/as the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of leaves/NNS/leaves -1/NNP/-1. i/PRP/i replace/VBP/replace that/IN/that and/CC/and get/VB/get the/DT/the number/NN/number of/IN/of leaves/NNS/leaves as/IN/as for/IN/for any/DT/any binary/JJ/binary tree/NNP/tree. the/DT/the another/DT/another thing/NN/thing to/TO/to keep/VB/keep in/IN/in mind/NN/mind is/VBZ/is for/IN/for any/DT/any binary/JJ/binary tree/NN/tree the/DT/the number/NN/number of/IN/of leaves/NNS/leaves will/MD/will never/RB/never be/VB/be more/RBR/more than/IN/than half/PDT/half the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NNP/tree. again/RB/again this/DT/this equality/NN/equality /:/( /:/) was/VBD/was achieved/VBN/achieved for/IN/for our/PRP$/our complete/JJ/complete binary/NN/binary tree/NN/tree /,/, which/WDT/which is/VBZ/is the/DT/the most/RBS/most leafy/JJ/leafy tree/NNP/tree. all/DT/all others/NNS/others trees/NNS/trees are/VBP/are dry/JJ/dry and/CC/and the/DT/the minimum/JJ/minimum number/NN/number of/IN/of leaves/NNS/leaves that/WDT/that tree/NN/tree might/MD/might have/VB/have is/VBZ/is just/RB/just 1/CD/1. the/DT/the example/NN/example for/IN/for that/DT/that is/VBZ/is the/DT/the same/JJ/same example/NN/example that/IN/that i/PRP/i have/VBP/have showed/VBN/showed you/PRP/you before/NNP/before. the/DT/the tree/NN/tree on/IN/on 9/CD/9 nodes/NNS/nodes has/VBZ/has only/RB/only 1leaf/CD/1leaf in/IN/in it/NNP/it. let/NN/let us/PRP/us look/VBP/look at/IN/at an/DT/an abstract/NN/abstract data/NNS/data type/NN/type for/IN/for trees/NNP/trees. you/PRP/you would/MD/would have/VB/have the/DT/the generic/JJ/generic methods/NNS/methods which/WDT/which you/PRP/you seen/VBP/seen for/IN/for all/PDT/all the/DT/the abstract/NN/abstract data/NNS/data types/NNS/types till/VBP/till now/NNP/now. the/DT/the following/VBG/following are/VBP/are the/DT/the generic/JJ/generic container/NN/container methods/NNS/methods /,/, size/VBP/size /:/( /:/) which/WDT/which tell/NN/tell us/PRP/us about/IN/about how/WRB/how many/JJ/many nodes/NNS/nodes are/VBP/are there/RB/there in/IN/in the/DT/the tree/NN/tree /,/, isempty/NN/isempty /:/( /:/) tells/NNS/tells whether/IN/whether the/DT/the tree/NN/tree is/VBZ/is empty/JJ/empty or/CC/or not/RB/not and/CC/and the/DT/the method/NN/method elements/NNS/elements /:/( /:/) which/WDT/which list/NN/list out/IN/out all/DT/all the/DT/the elements/NNS/elements of/IN/of the/DT/the tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 22/CD/22 /CD/) you/PRP/you can/MD/can have/VB/have position/NN/position based/VBN/based container/NN/container methods/NNS/methods /,/, it/PRP/it is/VBZ/is as/IN/as the/DT/the kind/NN/kind we/PRP/we saw/VBD/saw for/IN/for the/DT/the list/NN/list or/CC/or sequence/NN/sequence data/NNS/data types/NNP/types. the/DT/the swapelements/NNS/swapelements /:/( p/NN/p /,/, q/NN/q /:/) in/IN/in which/WDT/which i/PRP/i have/VBP/have specified/VBN/specified 2/CD/2 positions/NNS/positions p/NN/p and/CC/and q/NNP/q. think/NN/think of/IN/of the/DT/the positions/NNS/positions as/IN/as references/NNS/references in/IN/in to/TO/to the/DT/the tree/NN/tree except/IN/except that/DT/that using/VBG/using the/DT/the position/NN/position data/NNS/data type/NN/type i/PRP/i am/VBP/am not/RB/not able/JJ/able to/TO/to access/NN/access anything/NN/anything else/RB/else but/CC/but the/DT/the elements/NNS/elements sitting/VBG/sitting at/IN/at that/DT/that position/NNP/position. the/DT/the method/NN/method positions/NNS/positions /:/( /:/) will/MD/will specify/VB/specify all/DT/all the/DT/the positions/NNS/positions in/IN/in the/DT/the tree/NNP/tree. it/PRP/it will/MD/will give/VB/give you/PRP/you all/DT/all the/DT/the positions/NNS/positions in/IN/in the/DT/the tree/NN/tree as/IN/as a/DT/a sequence/NNP/sequence. the/DT/the positions/NNS/positions method/VBD/method has/VBZ/has no/DT/no parameters/NNS/parameters /,/, when/WRB/when you/PRP/you invoke/VBP/invoke it/PRP/it on/IN/on a/DT/a certain/JJ/certain tree/NN/tree it/PRP/it will/MD/will just/RB/just give/VB/give you/PRP/you a/DT/a sequence/NN/sequence of/IN/of all/DT/all the/DT/the positions/NNS/positions in/IN/in the/DT/the tree/NN/tree /,/, references/NNS/references to/TO/to all/DT/all the/DT/the nodes/NNS/nodes in/IN/in the/DT/the tree/NNP/tree. once/RB/once you/PRP/you access/NN/access a/DT/a particular/JJ/particular position/NN/position then/RB/then using/VBG/using the/DT/the element/NN/element method/NN/method on/IN/on that/DT/that positions/NNS/positions you/PRP/you can/MD/can access/VB/access the/DT/the element/NN/element in/IN/in that/DT/that node/NNP/node. the/DT/the swapelements/NNS/swapelements /:/( p/NN/p /,/, q/NN/q /:/) given/VBN/given 2/CD/2 positions/NNS/positions p/NN/p and/CC/and q/NN/q /,/, you/PRP/you are/VBP/are swapping/VBG/swapping the/DT/the elements/NNS/elements at/IN/at these/DT/these 2/CD/2 positions/NNP/positions. replaceelement/NN/replaceelement /:/( p/NN/p /,/, e/NN/e /:/) which/WDT/which means/VBZ/means that/DT/that given/VBN/given a/DT/a position/NN/position p/NN/p you/PRP/you are/VBP/are replacing/VBG/replacing the/DT/the element/NN/element at/IN/at that/DT/that position/NN/position with/IN/with e/NNP/e. in/IN/in query/NN/query methods/NNS/methods given/VBN/given a/DT/a particular/JJ/particular position/NN/position isroot/NN/isroot /:/( p/NN/p /:/) is/VBZ/is this/DT/this the/DT/the root/NN/root of/IN/of the/DT/the tree/NNP/tree. given/NN/given a/DT/a particular/JJ/particular position/NN/position isinternal/JJ/isinternal /NN/( p/NN/p /:/) is/VBZ/is this/DT/this is/VBZ/is an/DT/an internal/JJ/internal node/NN/node /,/, given/VBN/given a/DT/a particular/JJ/particular position/NN/position isexternal/JJ/isexternal /NN/( p/NN/p /:/) is/VBZ/is this/DT/this external/JJ/external or/CC/or leaf/NNP/leaf. sometimes/RB/sometimes we/PRP/we use/VBP/use external/JJ/external or/CC/or sometimes/RB/sometimes we/PRP/we use/VBP/use leaf/NN/leaf /,/, does/VBZ/does this/DT/this position/NN/position correspond/NN/correspond to/TO/to leaf/NNP/leaf. in/IN/in accessor/NN/accessor method/NN/method when/WRB/when i/PRP/i call/VBP/call root/NN/root it/PRP/it will/MD/will return/VB/return a/DT/a position/NN/position of/IN/of the/DT/the root/NN/root /,/, an/DT/an object/NN/object of/IN/of type/NN/type position/NNP/position. isroot/NN/isroot /:/( p/NN/p /:/) is/VBZ/is determined/VBN/determined as/IN/as given/VBN/given a/DT/a position/NN/position is/VBZ/is it/PRP/it a/DT/a root/NN/root and/CC/and root/NN/root /:/( /:/) returns/NNS/returns the/DT/the position/NN/position of/IN/of the/DT/the root/NNP/root. hope/NN/hope you/PRP/you understand/VBP/understand the/DT/the difference/NN/difference between/IN/between the/DT/the both/NNP/both. the/DT/the position/NN/position of/IN/of the/DT/the root/NN/root means/VBZ/means it/PRP/it is/VBZ/is not/RB/not a/DT/a reference/NN/reference to/TO/to that/DT/that particular/JJ/particular node/NN/node but/CC/but it/PRP/it is/VBZ/is a/DT/a reference/NN/reference of/IN/of type/NN/type position/NN/position so/RB/so that/IN/that you/PRP/you can/MD/can not/RB/not access/VB/access anything/NN/anything except/IN/except the/DT/the element/NNP/element. this/DT/this was/VBD/was the/DT/the same/JJ/same as/IN/as the/DT/the type/NN/type casting/VBG/casting which/WDT/which we/PRP/we did/VBD/did earlier/NNP/earlier. the/DT/the method/NN/method parent/NN/parent /:/( p/NN/p /:/) /,/, given/VBN/given a/DT/a particular/JJ/particular position/NN/position returns/NNS/returns the/DT/the parent/NN/parent node/NNP/node. the/DT/the children/NNS/children /:/( p/NN/p /:/) /,/, given/VBN/given a/DT/a particular/JJ/particular position/NN/position returns/NNS/returns the/DT/the children/NNS/children of/IN/of this/DT/this node/NNP/node. if/IN/if it/PRP/it were/VBD/were children/NNS/children /,/, there/EX/there could/MD/could be/VB/be of/IN/of many/JJ/many children/NNS/children for/IN/for a/DT/a certain/JJ/certain node/NNP/node. how/WRB/how it/PRP/it will/MD/will return/VB/return the/DT/the various/JJ/various children/NNS/children ?/./? it/PRP/it will/MD/will return/VB/return as/IN/as a/DT/a sequence/NN/sequence /,/, it/PRP/it will/MD/will return/VB/return a/DT/a sequence/NN/sequence of/IN/of object/NN/object type/NN/type sequence/NN/sequence which/WDT/which will/MD/will contain/VB/contain the/DT/the position/NN/position of/IN/of all/DT/all the/DT/the children/NNP/children. position/NN/position has/VBZ/has an/DT/an element/NN/element method/NN/method which/WDT/which will/MD/will let/VB/let you/PRP/you to/TO/to access/NN/access the/DT/the data/NNP/data. the/DT/the update/NN/update methods/NNS/methods are/VBP/are typically/RB/typically application/NN/application specific/JJ/specific and/CC/and this/DT/this would/MD/would be/VB/be the/DT/the generic/JJ/generic method/NN/method for/IN/for a/DT/a tree/NNP/tree. binary/NN/binary tree/NN/tree should/MD/should really/RB/really be/VB/be treated/VBN/treated as/IN/as a/DT/a sub-class/JJ/sub-class /,/, as/IN/as a/DT/a derived/VBN/derived class/NN/class from/IN/from a/DT/a tree/NNP/tree. all/DT/all we/PRP/we need/VBP/need to/TO/to do/VB/do is/VBZ/is to/TO/to continue/VB/continue to/TO/to have/VB/have the/DT/the same/JJ/same method/NN/method as/IN/as we/PRP/we described/VBD/described for/IN/for the/DT/the tree/NN/tree but/CC/but we/PRP/we will/MD/will have/VB/have some/DT/some additional/JJ/additional methods/NNP/methods. there/RB/there would/MD/would be/VB/be a/DT/a notion/NN/notion of/IN/of a/DT/a left/NN/left child/NN/child given/VBN/given a/DT/a position/NN/position give/VBP/give me/PRP/me the/DT/the left/NN/left child/NN/child /,/, give/JJ/give me/PRP/me the/DT/the right/NN/right child/NN/child or/CC/or give/VB/give me/PRP/me a/DT/a sibling/NNP/sibling. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 37/CD/37 /CD/) we/PRP/we will/MD/will come/VB/come to/TO/to the/DT/the update/NN/update methods/NNS/methods when/WRB/when we/PRP/we see/VBP/see the/DT/the example/NN/example of/IN/of it/NNP/it. what/WP/what is/VBZ/is the/DT/the node/NN/node structure/NN/structure in/IN/in a/DT/a binary/JJ/binary tree/NN/tree ?/./? what/WP/what are/VBP/are the/DT/the kinds/NNS/kinds of/IN/of data/NNS/data that/WDT/that you/PRP/you would/MD/would be/VB/be keeping/VBG/keeping in/IN/in an/DT/an object/NN/object corresponding/VBG/corresponding to/TO/to a/DT/a node/NN/node of/IN/of the/DT/the binary/JJ/binary tree/NN/tree ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 14/CD/14 /CD/) you/PRP/you would/MD/would have/VB/have the/DT/the data/NNS/data /,/, you/PRP/you would/MD/would have/VB/have a/DT/a reference/NN/reference to/TO/to the/DT/the left/NN/left child/NN/child and/CC/and a/DT/a reference/NN/reference to/TO/to the/DT/the right/NN/right child/NN/child and/CC/and you/PRP/you would/MD/would have/VB/have reference/NN/reference to/TO/to the/DT/the parent/NN/parent typically/NNP/typically. you/PRP/you would/MD/would also/RB/also have/VB/have a/DT/a reference/NN/reference to/TO/to key/JJ/key or/CC/or data/NNS/data associated/VBN/associated with/IN/with this/DT/this node/NN/node /,/, any/DT/any element/NN/element that/IN/that is/VBZ/is sitting/VBG/sitting in/IN/in this/DT/this node/NN/node you/PRP/you would/MD/would have/VB/have reference/NN/reference to/TO/to it/PRP/it and/CC/and these/DT/these were/VBD/were all/DT/all sitting/VBG/sitting together/NNP/together. the/DT/the reference/NN/reference to/TO/to the/DT/the node/NN/node which/WDT/which is/VBZ/is at/IN/at the/DT/the center/NN/center will/MD/will not/RB/not be/VB/be stored/VBN/stored in/IN/in the/DT/the node/NN/node and/CC/and that/IN/that does/VBZ/does not/RB/not make/VB/make any/DT/any sense/NNP/sense. for/IN/for instance/NN/instance if/IN/if i/PRP/i access/VBP/access to/TO/to this/DT/this node/NN/node /,/, suppose/NN/suppose this/DT/this was/VBD/was the/DT/the root/NN/root node/NN/node and/CC/and i/PRP/i use/VBP/use the/DT/the root/NN/root method/NN/method to/TO/to get/VB/get a/DT/a position/NN/position to/TO/to this/DT/this node/NN/node then/RB/then using/VBG/using that/IN/that position/NN/position i/PRP/i can/MD/can now/RB/now access/NN/access the/DT/the left/NN/left child/NN/child by/IN/by invoking/NN/invoking the/DT/the left/NN/left child/NN/child method/NN/method and/CC/and in/IN/in this/DT/this manner/NN/manner i/PRP/i can/MD/can get/VB/get the/DT/the position/NN/position of/IN/of any/DT/any node/NNP/node. once/RB/once i/PRP/i have/VBP/have the/DT/the position/NN/position of/IN/of a/DT/a node/NN/node i/PRP/i can/MD/can then/RB/then invoke/VB/invoke element/NN/element method/NN/method and/CC/and any/DT/any method/NN/method to/TO/to get/VB/get the/DT/the data/NNS/data associated/VBN/associated with/IN/with that/NNP/that. a/DT/a node/NN/node in/IN/in this/DT/this case/NN/case would/MD/would definitely/RB/definitely implement/VB/implement the/DT/the position/NN/position interface/NNP/interface. in/IN/in the/DT/the slide/NN/slide given/VBN/given below/IN/below /,/, this/DT/this is/VBZ/is what/WP/what the/DT/the binary/JJ/binary tree/NN/tree would/MD/would look/VB/look like/IN/like if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the links/NNS/links and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 12/CD/12 /CD/) the/DT/the parent/NN/parent link/NN/link would/MD/would be/VB/be null/JJ/null for/IN/for a/DT/a root/NN/root node/NN/node because/IN/because it/PRP/it has/VBZ/has no/DT/no parent/NNP/parent. then/RB/then it/PRP/it would/MD/would have/VB/have left/VBN/left child/NN/child in/IN/in which/WDT/which the/DT/the left/NN/left child/NN/child would/MD/would be/VB/be referring/VBG/referring to/TO/to the/DT/the node/NN/node on/IN/on the/DT/the left/NN/left and/CC/and the/DT/the right/NN/right child/NN/child would/MD/would be/VB/be referring/VBG/referring to/TO/to the/DT/the node/NN/node which/WDT/which is/VBZ/is on/IN/on the/DT/the right/NN/right and/CC/and so/RB/so on/NNP/on. in/IN/in the/DT/the above/NN/above diagram/NN/diagram the/DT/the extreme/NN/extreme right/RB/right node/VBP/node does/VBZ/does not/RB/not have/VB/have any/DT/any right/NN/right child/NN/child /,/, its/PRP$/its right/NN/right child/NN/child member/NN/member would/MD/would be/VB/be referring/VBG/referring to/TO/to null/NNP/null. that/IN/that was/VBD/was for/IN/for a/DT/a binary/JJ/binary tree/NNP/tree. how/WRB/how do/VBP/do we/PRP/we take/VB/take care/NN/care of/IN/of arbitrary/JJ/arbitrary trees/NNS/trees ?/./? let/NN/let us/PRP/us say/VBP/say unbounded/VBN/unbounded trees/NNP/trees. the/DT/the root/NN/root node/NN/node has/VBZ/has 3/CD/3 children/NNS/children and/CC/and its/PRP$/its child/NN/child which/WDT/which is/VBZ/is on/IN/on the/DT/the left/NN/left also/RB/also has/VBZ/has 3/CD/3 children/NNP/children. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 39/CD/39 /CD/) are/VBP/are we/PRP/we going/VBG/going to/TO/to have/VB/have 3/CD/3 different/JJ/different data/NNS/data members/NNS/members to/TO/to refer/VB/refer to/TO/to 3/CD/3 children/NNS/children ?/./? that/IN/that is/VBZ/is not/RB/not clear/JJ/clear about/IN/about how/WRB/how to/TO/to do/VB/do it/PRP/it /,/, because/IN/because then/RB/then if/IN/if it/PRP/it has/VBZ/has 4/CD/4 children/NNS/children then/RB/then how/WRB/how you/PRP/you would/MD/would create/VB/create space/NN/space for/IN/for another/DT/another member/NNP/member. the/DT/the way/NN/way to/TO/to do/VB/do it/PRP/it is/VBZ/is that/IN/that you/PRP/you have/VBP/have a/DT/a reference/NN/reference to/TO/to 1of/CD/1of the/DT/the child/NN/child only/RB/only and/CC/and then/RB/then all/DT/all the/DT/the children/NNS/children are/VBP/are in/IN/in a/DT/a linked/VBN/linked list/NNP/list. each/DT/each child/NN/child will/MD/will have/VB/have a/DT/a reference/NN/reference to/TO/to the/DT/the parent/NN/parent /,/, so/RB/so all/DT/all of/IN/of these/DT/these children/NNS/children would/MD/would be/VB/be pointing/VBG/pointing to/TO/to the/DT/the parent/NN/parent node/NNP/node. but/CC/but the/DT/the parent/NN/parent node/NN/node would/MD/would be/VB/be pointing/VBG/pointing to/TO/to only/RB/only 1of/CD/1of them/NNP/them. which/WDT/which would/MD/would be/VB/be the/DT/the head/NN/head of/IN/of the/DT/the linked/VBN/linked list/NN/list in/IN/in the/DT/the 2nd/JJ/2nd level/NN/level ?/./? from/IN/from the/DT/the node/NN/node which/WDT/which is/VBZ/is at/IN/at the/DT/the 1st/CD/1st level/NN/level /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to refer/VB/refer to/TO/to the/DT/the children/NNS/children /,/, i/PRP/i can/MD/can just/RB/just come/VB/come here/RB/here essentially/RB/essentially return/VBP/return all/DT/all the/DT/the elements/NNS/elements of/IN/of this/DT/this linked/VBN/linked list/NNP/list. how/WRB/how do/VBP/do i/PRP/i know/VB/know that/IN/that i/PRP/i have/VBP/have reached/VBN/reached the/DT/the last/JJ/last element/NN/element of/IN/of the/DT/the linked/VBN/linked list/NN/list when/WRB/when the/DT/the next/JJ/next is/VBZ/is empty/JJ/empty ?/./? the/DT/the 1stfield/JJ/1stfield of/IN/of the/DT/the node/NN/node is/VBZ/is empty/JJ/empty because/IN/because it/PRP/it does/VBZ/does not/RB/not have/VB/have children/NNP/children. every/DT/every node/NN/node still/RB/still has/VBZ/has only/RB/only 3/CD/3 data/NNS/data members/NNS/members /,/, parent/NN/parent or/CC/or 3/CD/3 references/NNS/references 1/CD/1 for/IN/for the/DT/the parent/NN/parent /,/, 1/CD/1 for/IN/for left/VBN/left most/JJS/most child/JJ/child and/CC/and 1/CD/1 for/IN/for the/DT/the right/NN/right sibling/NNP/sibling. the/DT/the left/NN/left node/NN/node on/IN/on the/DT/the level/NN/level 1/CD/1 would/MD/would refer/VB/refer to/TO/to left/VB/left most/JJS/most child/NN/child and/CC/and not/RB/not to/TO/to all/DT/all the/DT/the children/NNS/children because/IN/because that/DT/that we/PRP/we do/VBP/do not/RB/not know/VB/know how/WRB/how many/JJ/many are/VBP/are there/NNP/there. it/PRP/it will/MD/will have/VB/have 1/CD/1 more/JJR/more to/TO/to refer/VB/refer to/TO/to the/DT/the right/NN/right sibling/VBG/sibling because/IN/because for/IN/for the/DT/the left/NN/left node/NN/node at/IN/at the/DT/the level/NN/level 2/CD/2 should/MD/should refer/VB/refer to/TO/to the/DT/the right/NN/right sibling/NNP/sibling. you/PRP/you can/MD/can do/VB/do with/IN/with only/RB/only 3/CD/3 references/NNP/references. the/DT/the node/NN/node in/IN/in the/DT/the level/NN/level 2/CD/2 has/VBZ/has only/RB/only 1/CD/1 child/NN/child and/CC/and it/PRP/it is/VBZ/is just/RB/just pointing/VBG/pointing to/TO/to that/DT/that 1/CD/1 child/NN/child /,/, there/EX/there is/VBZ/is no/DT/no sense/NN/sense of/IN/of left/NN/left and/CC/and right/RB/right here/NNP/here. this/DT/this is/VBZ/is not/RB/not a/DT/a binary/JJ/binary tree/NN/tree /,/, left/VBN/left and/CC/and right/RB/right makes/VBZ/makes sense/NN/sense only/RB/only in/IN/in a/DT/a binary/JJ/binary tree/NNP/tree. actually/RB/actually i/PRP/i should/MD/should not/RB/not have/VB/have written/VBN/written left/VBN/left child/NN/child /,/, i/PRP/i should/MD/should have/VB/have written/VBN/written 1st/CD/1st child/NNP/child. that/IN/that is/VBZ/is any/DT/any 1/CD/1 child/NN/child then/RB/then it/PRP/it just/RB/just point/VBP/point to/TO/to that/DT/that 1/CD/1 child/NN/child and/CC/and that/IN/that let/NN/let you/PRP/you to/TO/to access/NN/access its/PRP$/its siblings/NNS/siblings through/IN/through a/DT/a linked/VBN/linked list/NNP/list. from/IN/from the/DT/the 1st/CD/1st child/NN/child you/PRP/you will/MD/will go/VB/go to/TO/to the/DT/the next/JJ/next child/NN/child and/CC/and to/TO/to the/DT/the next/JJ/next child/NN/child and/CC/and so/RB/so on/NNP/on. you/PRP/you can/MD/can step/VB/step through/IN/through all/DT/all the/DT/the various/JJ/various children/NNS/children throughout/IN/throughout linked/VBN/linked list/NNP/list. with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end our/PRP$/our discussion/NN/discussion on/IN/on binary/JJ/binary trees/NNS/trees today/NNP/today. in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at reversals/NNS/reversals of/IN/of trees/NNP/trees. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 7/CD/7 tree/NN/tree walks/NNS/walks //:// traversals/NNS/traversals in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we looked/VBD/looked at/IN/at definitions/NNS/definitions of/IN/of trees/NNS/trees /,/, a/DT/a binary/JJ/binary tree/NN/tree and/CC/and a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree and/CC/and the/DT/the height/NN/height of/IN/of these/DT/these things/NNP/things. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to continue/VB/continue with/IN/with our/PRP$/our discussion/NN/discussion on/IN/on trees/NNS/trees in/IN/in particular/JJ/particular we/PRP/we are/VBP/are going/VBG/going to/TO/to talk/VB/talk about/IN/about tree/CD/tree walk/NN/walk or/CC/or tree/NN/tree traversals/NNP/traversals. a/DT/a tree/NN/tree walk/NN/walk is/VBZ/is a/DT/a way/NN/way of/IN/of visiting/VBG/visiting the/DT/the nodes/NNS/nodes of/IN/of a/DT/a tree/NN/tree in/IN/in a/DT/a specified/VBN/specified order/NNP/order. there/RB/there are/VBP/are 2/CD/2 different/JJ/different tree/NN/tree walks/NNS/walks that/WDT/that we/PRP/we will/MD/will consider/VB/consider /,/, one/CD/one is/VBZ/is called/VBN/called the/DT/the preorder/NN/preorder walk/NN/walk and/CC/and the/DT/the other/JJ/other is/VBZ/is called/VBN/called postorder/NN/postorder walk/NNP/walk. in/IN/in a/DT/a preorder/NN/preorder walk/NN/walk you/PRP/you first/RB/first visit/VB/visit or/CC/or process/NN/process each/DT/each node/NN/node and/CC/and then/RB/then you/PRP/you go/VBP/go and/CC/and process/NN/process its/PRP$/its children/NNP/children. i/PRP/i will/MD/will show/VB/show you/PRP/you an/DT/an example/NN/example to/TO/to follow/VB/follow this/DT/this and/CC/and then/RB/then you/PRP/you will/MD/will be/VB/be clear/NNP/clear. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 23/CD/23 /CD/) in/IN/in a/DT/a post/NN/post order/NN/order you/PRP/you will/MD/will first/RB/first process/VB/process all/DT/all the/DT/the children/NNS/children or/CC/or visit/NN/visit all/DT/all the/DT/the children/NNS/children and/CC/and after/IN/after that/DT/that only/RB/only you/PRP/you would/MD/would process/VB/process the/DT/the node/NNP/node. let/NN/let us/PRP/us see/VBP/see an/DT/an example/NN/example which/WDT/which will/MD/will clarify/VB/clarify this/NNP/this. i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the examples/NNS/examples of/IN/of preorder/NN/preorder tree/NN/tree walks/NNP/walks. suppose/NN/suppose recall/NN/recall that/WDT/that we/PRP/we said/VBD/said /,/, we/PRP/we can/MD/can construct/VB/construct a/DT/a tree/NN/tree out/IN/out of/IN/of a/DT/a book/NN/book or/CC/or a/DT/a paper/NNP/paper. we/PRP/we can/MD/can look/VB/look at/IN/at the/DT/the organization/NN/organization of/IN/of a/DT/a book/NN/book as/IN/as a/DT/a tree/NNP/tree. let/NN/let us/PRP/us say/VBP/say a/DT/a research/NN/research paper/NNP/paper. you/PRP/you have/VBP/have the/DT/the paper/NN/paper and/CC/and it/PRP/it has/VBZ/has a/DT/a certain/JJ/certain sections/NNS/sections /,/, the/DT/the first/JJ/first section/NN/section is/VBZ/is the/DT/the title/NN/title /,/, second/JJ/second section/NN/section is/VBZ/is the/DT/the abstract/NN/abstract which/WDT/which discusses/NNS/discusses about/IN/about what/WP/what is/VBZ/is their/PRP$/their in/IN/in the/DT/the paper/NN/paper and/CC/and then/RB/then you/PRP/you have/VB/have section/NN/section 1/CD/1 /,/, section/NN/section 2/CD/2 /,/, section/NN/section 3/CD/3 and/CC/and then/RB/then at/IN/at the/DT/the end/NN/end of/IN/of it/PRP/it you/PRP/you have/VBP/have references/NNS/references that/IN/that is/VBZ/is what/WP/what are/VBP/are the/DT/the books/NNS/books and/CC/and the/DT/the other/JJ/other papers/NNS/papers that/IN/that this/DT/this particular/JJ/particular publication/NN/publication has/VBZ/has referenced/NNP/referenced. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 37/CD/37 /CD/) the/DT/the section/NN/section 1/CD/1 has/VBZ/has 2/CD/2 sub/NN/sub sections/NNS/sections that/WDT/that is/VBZ/is section/NN/section 1.1/CD/1.1 and/CC/and 1.2/CD/1.2. the/DT/the section/NN/section 2/CD/2 has/VBZ/has 3/CD/3 sub/NN/sub sections/NNS/sections /,/, section/NN/section 3/CD/3 has/VBZ/has 2/CD/2 sub/NN/sub sections/NNS/sections and/CC/and so/RB/so on/NNP/on. when/WRB/when you/PRP/you read/VBP/read the/DT/the paper/NN/paper /,/, this/DT/this is/VBZ/is the/DT/the order/NN/order you/PRP/you would/MD/would go/VB/go in/NNP/in. suppose/NN/suppose you/PRP/you are/VBP/are reading/VBG/reading the/DT/the paper/NN/paper end/NN/end to/TO/to end/VB/end /,/, first/JJ/first you/PRP/you will/MD/will go/VB/go to/TO/to the/DT/the title/NN/title /,/, then/RB/then read/VB/read the/DT/the abstract/NN/abstract then/RB/then you/PRP/you will/MD/will look/VB/look at/IN/at section/NN/section 1/CD/1 and/CC/and then/RB/then its/PRP$/its sub/NN/sub section/NN/section 1.1/CD/1.1 /,/, 1.2/CD/1.2 and/CC/and so/RB/so on/NNP/on. if/IN/if you/PRP/you were/VBD/were to/TO/to think/VB/think of/IN/of a/DT/a book/NN/book and/CC/and how/WRB/how the/DT/the table/JJ/table of/IN/of contents/NNS/contents of/IN/of the/DT/the book/NN/book are/VBP/are listed/NNP/listed. the/DT/the way/NN/way the/DT/the tables/NNS/tables of/IN/of contents/NNS/contents are/VBP/are listed/VBN/listed is/VBZ/is that/IN/that first/RB/first you/PRP/you have/VB/have the/DT/the chapter/NN/chapter and/CC/and then/RB/then the/DT/the sections/NNS/sections within/IN/within the/DT/the chapter/NN/chapter are/VBP/are listed/NNP/listed. then/RB/then the/DT/the next/JJ/next chapter/NN/chapter and/CC/and the/DT/the sub/NN/sub sections/NNS/sections within/IN/within that/DT/that chapter/NN/chapter and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 04/CD/04 /CD/) if/IN/if i/PRP/i were/VBD/were to/TO/to look/VB/look at/IN/at the/DT/the above/JJ/above slide/NN/slide as/IN/as the/DT/the tree/NN/tree and/CC/and these/DT/these as/IN/as the/DT/the nodes/NNS/nodes of/IN/of a/DT/a tree/NNP/tree. the/DT/the first/JJ/first node/NN/node that/WDT/that we/PRP/we are/VBP/are referring/VBG/referring or/CC/or accessing/VBG/accessing is/VBZ/is the/DT/the node/NN/node 1/CD/1. then/RB/then we/PRP/we go/VBP/go to/TO/to the/DT/the node/NN/node 2/CD/2 then/RB/then 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 and/CC/and after/IN/after we/PRP/we are/VBP/are done/VBN/done with/IN/with 6/CD/6 /,/, in/IN/in a/DT/a table/NN/table of/IN/of contents/NNS/contents you/PRP/you will/MD/will have/VB/have 7/CD/7 /,/, 8,9,10,11,12,13/CD/8,9,10,11,12,13 and/CC/and then/RB/then 14/CD/14. this/DT/this is/VBZ/is also/RB/also called/VBN/called the/DT/the preorder/NN/preorder traversal/NN/traversal of/IN/of a/DT/a tree/NNP/tree. the/DT/the pseudo-code/JJ/pseudo-code for/IN/for preorder/NN/preorder traversal/NN/traversal would/MD/would look/VB/look something/NN/something like/IN/like the/DT/the one/CD/one which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the above/NN/above slide/NNP/slide. if/IN/if i/PRP/i have/VBP/have to/TO/to do/VB/do a/DT/a preorder/NN/preorder traversal/NN/traversal of/IN/of a/DT/a node/NN/node v/NN/v in/IN/in a/DT/a tree/NN/tree /,/, so/RB/so to/TO/to begin/VB/begin with/IN/with i/PRP/i would/MD/would call/VB/call preorder/NN/preorder traversal/NN/traversal at/IN/at the/DT/the root/NN/root of/IN/of the/DT/the tree/NNP/tree. then/RB/then i/PRP/i would/MD/would say/VB/say first/JJ/first visit/NN/visit the/DT/the node/NN/node /,/, visit/NN/visit here/RB/here is/VBZ/is a/DT/a generic/JJ/generic term/NN/term and/CC/and we/PRP/we will/MD/will use/VB/use it/PRP/it very/RB/very often/NNP/often. all/DT/all it/PRP/it means/VBZ/means is/VBZ/is that/IN/that i/PRP/i am/VBP/am doing/VBG/doing some/DT/some computations/NNS/computations in/IN/in that/DT/that node/NNP/node. in/IN/in this/DT/this particular/JJ/particular case/NN/case if/IN/if i/PRP/i were/VBD/were listing/VBG/listing out/IN/out the/DT/the book/NN/book as/IN/as table/JJ/table of/IN/of contents/NNS/contents then/RB/then visit/VB/visit would/MD/would correspond/VB/correspond to/TO/to print/VB/print the/DT/the title/NN/title or/CC/or print/VBP/print the/DT/the heading/NN/heading of/IN/of that/DT/that particular/JJ/particular node/NNP/node. for/IN/for instance/NN/instance each/DT/each node/NN/node corresponds/NNS/corresponds to/TO/to a/DT/a section/NN/section or/CC/or some/DT/some thing/NN/thing then/RB/then this/DT/this /NN/( ?/./? visit/NN/visit ?/./? node/NN/node v/NN/v /:/) would/MD/would correspond/VB/correspond to/TO/to print/VB/print out/RP/out the/DT/the name/NN/name of/IN/of the/DT/the section/NNP/section. then/RB/then once/RB/once you/PRP/you done/VBP/done that/IN/that then/RB/then you/PRP/you go/VBP/go to/TO/to each/DT/each of/IN/of the/DT/the children/NNS/children nodes/VBZ/nodes and/CC/and repeat/NN/repeat the/DT/the process/NNP/process. repeat/NN/repeat this/DT/this same/JJ/same process/NN/process there/EX/there on/IN/on each/DT/each of/IN/of the/DT/the child/NN/child nodes/NNP/nodes. because/IN/because this/DT/this tree/NN/tree could/MD/could be/VB/be arbitrarily/RB/arbitrarily d/VBN/d and/CC/and the/DT/the subsection/NN/subsection 1.1/CD/1.1 could/MD/could be/VB/be as/RB/as 3/CD/3 sub/NN/sub sections/NNS/sections 1.1.1/CD/1.1.1 /,/, 1.1.2/CD/1.1.2 and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 52/CD/52 /CD/) if/IN/if you/PRP/you were/VBD/were to/TO/to do/VB/do a/DT/a preorder/NN/preorder traversal/NN/traversal then/RB/then you/PRP/you would/MD/would come/VB/come to/TO/to 1/CD/1 /,/, then/RB/then you/PRP/you would/MD/would come/VB/come to/TO/to 1.1/CD/1.1 then/RB/then you/PRP/you would/MD/would go/VB/go to/TO/to 1.1.1/CD/1.1.1 and/CC/and then/RB/then 1.1.2/CD/1.1.2 /,/, 1.1.3/CD/1.1.3 and/CC/and only/RB/only then/RB/then you/PRP/you would/MD/would go/VB/go to/TO/to 1.2/CD/1.2. that/IN/that is/VBZ/is the/DT/the need/NN/need for/IN/for this/DT/this kind/NN/kind of/IN/of a/DT/a recursive/JJ/recursive traversal/NNP/traversal. what/WP/what you/PRP/you doing/VBG/doing here/RB/here ?/./? you/PRP/you first/RB/first visit/VB/visit the/DT/the node/NN/node then/RB/then visit/NN/visit all/DT/all its/PRP$/its children/NNP/children. so/RB/so these/DT/these are/VBP/are the/DT/the 6/CD/6 children/NNS/children of/IN/of that/DT/that node/NNP/node. we/PRP/we are/VBP/are saying/VBG/saying visit/NN/visit the/DT/the first/JJ/first node/NNP/node. what/WP/what does/VBZ/does visit/NN/visit correspond/NN/correspond to/TO/to ?/./? it/PRP/it does/VBZ/does not/RB/not have/VB/have any/DT/any children/NNS/children so/RB/so it/PRP/it just/RB/just means/VBZ/means visit/NN/visit the/DT/the first/JJ/first node/NNP/node. the/DT/the second/JJ/second one/CD/one corresponds/NNS/corresponds to/TO/to visit/VB/visit that/IN/that node/NNP/node. the/DT/the third/JJ/third one/CD/one corresponds/NNS/corresponds to/TO/to visit/VB/visit that/IN/that node/NN/node and/CC/and then/RB/then visit/VB/visit its/PRP$/its children/NNP/children. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are doing/VBG/doing /,/, visit/NN/visit its/PRP$/its children/NNS/children and/CC/and then/RB/then the/DT/the next/JJ/next child/NN/child and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is what/WP/what would/MD/would be/VB/be called/VBN/called a/DT/a preorder/NN/preorder traversal/NNP/traversal. i/PRP/i gave/VBD/gave you/PRP/you the/DT/the example/NN/example this/DT/this is/VBZ/is like/IN/like reading/NN/reading a/DT/a document/NN/document from/IN/from beginning/NN/beginning to/TO/to end/NNP/end. we/PRP/we could/MD/could also/RB/also have/VB/have what/WP/what is/VBZ/is called/VBN/called a/DT/a post/NN/post order/NN/order traversal/NNP/traversal. in/IN/in a/DT/a post/NN/post order/NN/order traversal/NN/traversal recall/NN/recall i/PRP/i said/VBD/said that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to visit/VB/visit the/DT/the node/NN/node at/IN/at the/DT/the end/NNP/end. we/PRP/we will/MD/will first/RB/first visit/VB/visit its/PRP$/its children/NNS/children and/CC/and only/RB/only then/RB/then we/PRP/we would/MD/would visit/VB/visit the/DT/the node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 43/CD/43 /CD/) let/NN/let us/PRP/us say/VBP/say i/PRP/i have/VBP/have a/DT/a directory/NN/directory structure/NN/structure like/IN/like this/NNP/this. this/DT/this is/VBZ/is my/PRP$/my root/NN/root directory/NN/directory courses/NNP/courses. this/DT/this is/VBZ/is an/DT/an example/NN/example from/IN/from the/DT/the book/NNP/book. there/RB/there are/VBP/are 2/CD/2 courses/NNS/courses here/RB/here cs/NNS/cs 016/CD/016 and/CC/and cs/NNS/cs 252/CD/252. and/CC/and then/RB/then in/IN/in that/DT/that there/EX/there are/VBP/are 2/CD/2 sub/NN/sub directories/NNS/directories /,/, there/EX/there is/VBZ/is a/DT/a file/NN/file called/VBN/called grades/NNP/grades. within/IN/within this/DT/this sub/NN/sub directory/NN/directory there/EX/there are/VBP/are 3/CD/3 files/NNS/files /,/, within/IN/within this/DT/this sub/NN/sub directory/NN/directory there/EX/there are/VBP/are 3/CD/3 files/NNS/files and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is the/DT/the directory/NN/directory structure/NNP/structure. suppose/NN/suppose i/PRP/i want/VBP/want to/TO/to compute/VB/compute the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by this/DT/this file/NN/file system/NN/system or/CC/or this/DT/this entire/JJ/entire directory/NNP/directory. what/WP/what would/MD/would i/VB/i do/VBP/do ?/./? i/PRP/i would/MD/would compute/VB/compute the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by the/DT/the subdirectory/NN/subdirectory which/WDT/which is/VBZ/is on/IN/on the/DT/the left/NN/left and/CC/and i/PRP/i would/MD/would compute/VB/compute the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by the/DT/the subdirectory/NN/subdirectory which/WDT/which is/VBZ/is on/IN/on the/DT/the right/NN/right and/CC/and then/RB/then i/PRP/i would/MD/would add/VB/add these/DT/these two/CD/two up/RP/up at/IN/at the/DT/the node/NN/node which/WDT/which is/VBZ/is at/IN/at the/DT/the center/NN/center to/TO/to obtain/VB/obtain the/DT/the total/JJ/total spaces/NNS/spaces required/NNP/required. so/RB/so in/IN/in some/DT/some sense/NN/sense i/PRP/i am/VBP/am actually/RB/actually visiting/VBG/visiting the/DT/the node/NN/node which/WDT/which is/VBZ/is at/IN/at the/DT/the center/NN/center or/CC/or doing/VBG/doing some/DT/some computation/NN/computation on/IN/on this/DT/this node/NN/node after/IN/after having/VBG/having done/NN/done the/DT/the computation/NN/computation at/IN/at the/DT/the 2/CD/2 children/NNS/children nodes/NNP/nodes. after/IN/after having/VBG/having computed/VBN/computed the/DT/the total/JJ/total spaces/NNS/spaces required/VBN/required by/IN/by the/DT/the sub/NN/sub directory/NN/directory on/IN/on the/DT/the left/NN/left and/CC/and after/IN/after having/VBG/having computed/VBN/computed the/DT/the total/JJ/total spaces/NNS/spaces required/VBN/required by/IN/by the/DT/the subdirectory/NN/subdirectory on/IN/on the/DT/the right/NN/right /,/, only/RB/only then/RB/then i/PRP/i am/VBP/am doing/VBG/doing the/DT/the node/NN/node at/IN/at the/DT/the center/NNP/center. when/WRB/when you/PRP/you are/VBP/are doing/VBG/doing a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of a/DT/a node/NN/node v/NN/v /,/, for/IN/for every/DT/every child/NN/child of/IN/of the/DT/the node/NN/node first/RB/first we/PRP/we are/VBP/are going/VBG/going to/TO/to perform/NN/perform a/DT/a post/NN/post order/NN/order on/IN/on that/NNP/that. in/IN/in this/DT/this example/NN/example post/NN/post order/NN/order corresponds/NNS/corresponds to/TO/to finding/NN/finding the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by that/DT/that sub/NN/sub directory/NNP/directory. so/RB/so to/TO/to compute/VB/compute the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by the/DT/the directory/NN/directory which/WDT/which is/VBZ/is at/IN/at the/DT/the center/NN/center /,/, we/PRP/we are/VBP/are first/RB/first going/VBG/going to/TO/to compute/VB/compute the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by the/DT/the sub/NN/sub directory/NN/directory on/IN/on the/DT/the left/NN/left then/RB/then the/DT/the total/NN/total space/NN/space occupied/VBD/occupied by/IN/by the/DT/the directory/NN/directory on/IN/on the/DT/the right/NN/right and/CC/and having/VBG/having computed/VBN/computed that/IN/that /,/, you/PRP/you are/VBP/are then/RB/then going/VBG/going to/TO/to compute/VB/compute the/DT/the total/JJ/total space/NN/space required/VBN/required by/IN/by the/DT/the directory/NN/directory at/IN/at the/DT/the center/NNP/center. in/IN/in some/DT/some sense/NN/sense the/DT/the order/NN/order in/IN/in which/WDT/which computation/NN/computation is/VBZ/is done/VBN/done is/VBZ/is reverse/JJ/reverse from/IN/from the/DT/the pervious/JJ/pervious example/NNP/example. in/IN/in fact/NN/fact this/DT/this is/VBZ/is the/DT/the order/NN/order in/IN/in which/WDT/which the/DT/the disk/NN/disk usage/NN/usage command/NN/command in/IN/in unix/NN/unix /,/, if/IN/if you/PRP/you ever/RB/ever have/VBP/have used/VBN/used this/DT/this particular/JJ/particular command/NN/command in/IN/in unix/NNP/unix. what/WP/what it/PRP/it does/VBZ/does is/VBZ/is /,/, if/IN/if you/PRP/you type/VBP/type in/IN/in this/DT/this command/NN/command in/IN/in a/DT/a directory/NN/directory it/PRP/it tells/VBZ/tells you/PRP/you what/WP/what is/VBZ/is the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by the/DT/the various/JJ/various subdirectory/NN/subdirectory their/NNP/their. the/DT/the way/NN/way you/PRP/you list/VBP/list it/PRP/it out/RP/out is/VBZ/is /,/, if/IN/if you/PRP/you were/VBD/were to/TO/to type/VB/type the/DT/the disk/NN/disk usage/NN/usage command/NN/command in/IN/in this/DT/this sub/NN/sub directory/NN/directory /,/, it/PRP/it was/VBD/was first/JJ/first going/NN/going to/TO/to list/NN/list out/IN/out the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied in/IN/in this/DT/this directory/NN/directory on/IN/on the/DT/the left/NN/left then/RB/then the/DT/the total/NN/total space/NN/space occupied/VBD/occupied in/IN/in this/DT/this directory/NN/directory on/IN/on the/DT/the right/NN/right and/CC/and then/RB/then eventually/RB/eventually at/IN/at the/DT/the end/NN/end it/PRP/it list/VBP/list out/RP/out the/DT/the total/JJ/total space/NN/space required/VBN/required here/NNP/here. because/IN/because it/PRP/it would/MD/would have/VB/have computed/VBN/computed it/PRP/it only/RB/only after/IN/after it/PRP/it had/VBD/had done/VBN/done the/DT/the computation/NN/computation on/IN/on the/DT/the left/NN/left and/CC/and right/NNP/right. how/WRB/how does/VBZ/does this/DT/this do/VB/do the/DT/the computation/NN/computation ?/./? in/IN/in a/DT/a recursive/JJ/recursive manner/NN/manner that/WDT/that is/VBZ/is to/TO/to compute/VB/compute the/DT/the total/JJ/total space/NN/space required/VBN/required by/IN/by this/DT/this directory/NN/directory /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 41/CD/41 /CD/) /,/, first/JJ/first it/PRP/it is/VBZ/is going/VBG/going to/TO/to compute/VB/compute the/DT/the total/JJ/total space/NN/space required/VBN/required here/RB/here then/RB/then the/DT/the total/NN/total space/NN/space required/VBN/required here/RB/here and/CC/and then/RB/then add/VBD/add them/PRP/them up/RP/up to/TO/to get/VB/get the/DT/the total/JJ/total space/NN/space required/VBN/required here/NNP/here. so/RB/so that/IN/that would/MD/would be/VB/be a/DT/a post/NN/post order/NN/order traversal/NNP/traversal. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 05/CD/05 /CD/) which/WDT/which child/NN/child we/PRP/we would/MD/would visit/VB/visit it/PRP/it first/RB/first ?/./? we/PRP/we are/VBP/are looking/VBG/looking at/IN/at ordered/VBN/ordered trees/NNP/trees. there/RB/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of a/DT/a first/JJ/first child/NN/child /,/, second/JJ/second child/NN/child /,/, the/DT/the third/JJ/third child/NN/child and/CC/and fourth/JJ/fourth child/NNP/child. so/RB/so the/DT/the first/JJ/first child/NN/child is/VBZ/is visited/VBN/visited first/RB/first and/CC/and next/JJ/next is/VBZ/is the/DT/the second/JJ/second and/CC/and so/RB/so on/NNP/on. if/IN/if you/PRP/you have/VBP/have drawn/VBN/drawn the/DT/the tree/NN/tree in/IN/in such/JJ/such a/DT/a manner/NN/manner such/JJ/such that/IN/that the/DT/the first/JJ/first child/NN/child is/VBZ/is at/IN/at the/DT/the leftmost/NN/leftmost then/RB/then we/PRP/we would/MD/would say/VB/say that/IN/that the/DT/the leftmost/NN/leftmost child/NN/child is/VBZ/is visited/VBN/visited first/RB/first and/CC/and after/IN/after that/DT/that the/DT/the other/JJ/other one/CD/one on/IN/on the/DT/the right/NN/right and/CC/and so/RB/so on/NNP/on. it/PRP/it depends/VBZ/depends upon/IN/upon how/WRB/how you/PRP/you have/VBP/have drawn/VBN/drawn your/PRP$/your trees/NNP/trees. what/WP/what i/PRP/i had/VBD/had just/RB/just shown/VBN/shown you/PRP/you was/VBD/was traversal/JJ/traversal in/IN/in general/JJ/general trees/NNP/trees. if/IN/if it/PRP/it is/VBZ/is a/DT/a preorder/NN/preorder /,/, first/JJ/first visit/NN/visit the/DT/the node/NN/node then/RB/then visit/NN/visit the/DT/the children/NNS/children nodes/NNP/nodes. in/IN/in postorder/NN/postorder first/RB/first visit/NN/visit the/DT/the children/NNS/children node/VBP/node and/CC/and then/RB/then visit/VB/visit the/DT/the nodes/NNP/nodes. let/NN/let us/PRP/us look/VBP/look at/IN/at how/WRB/how this/DT/this specializes/VBZ/specializes to/TO/to the/DT/the case/NN/case of/IN/of binary/JJ/binary tree/NNP/tree. in/IN/in a/DT/a preorder/NN/preorder traversal/NN/traversal what/WP/what are/VBP/are we/PRP/we saying/VBG/saying ?/./? so/RB/so v/NN/v is/VBZ/is a/DT/a node/NN/node /,/, if/IN/if v/NN/v is/VBZ/is null/JJ/null then/RB/then there/RB/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. if/IN/if v/NN/v is/VBZ/is not/RB/not null/JJ/null then/RB/then in/IN/in a/DT/a preorder/NN/preorder traversal/NN/traversal we/PRP/we are/VBP/are first/RB/first saying/VBG/saying visit/NN/visit v/CC/v. the/DT/the visit/NN/visit is/VBZ/is some/DT/some generic/JJ/generic computation/NN/computation we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what it/PRP/it really/RB/really is/NNP/is. it/PRP/it depends/VBZ/depends upon/IN/upon what/WP/what your/PRP$/your particular/JJ/particular application/NNP/application. first/RB/first say/VBP/say visit/NN/visit /,/, then/RB/then do/VB/do a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal on/IN/on the/DT/the left/NN/left child/NN/child and/CC/and then/RB/then do/VB/do a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal on/IN/on the/DT/the right/NN/right child/NNP/child. note/NN/note that/IN/that this/DT/this is/VBZ/is a/DT/a recursive/JJ/recursive procedure/NNP/procedure. we/PRP/we are/VBP/are calling/VBG/calling preorder/NN/preorder within/IN/within the/DT/the procedure/NN/procedure itself/NNP/itself. how/WRB/how does/VBZ/does this/DT/this /NN/( preorder/NN/preorder /:/( v.leftchild/JJ/v.leftchild /NN/( /:/) /:/) /:/) work/NN/work ?/./? this/DT/this will/MD/will work/VB/work by/IN/by making/VBG/making the/DT/the call/NN/call to/TO/to itself/PRP/itself /,/, when/WRB/when we/PRP/we are/VBP/are doing/VBG/doing a/DT/a preorder/NN/preorder traversal/NN/traversal on/IN/on the/DT/the left/NN/left child/NN/child and/CC/and on/IN/on the/DT/the right/NN/right child/NNP/child. and/CC/and the/DT/the difference/NN/difference between/IN/between pre/NN/pre order/NN/order and/CC/and post/NN/post order/NN/order here/RB/here is/VBZ/is that/IN/that visit/NN/visit now/RB/now comes/VBZ/comes at/IN/at the/DT/the very/RB/very end/NNP/end. first/RB/first you/PRP/you do/VBP/do a/DT/a postorder/NN/postorder traversal/NN/traversal on/IN/on the/DT/the left/NN/left child/NN/child then/RB/then you/PRP/you do/VBP/do a/DT/a postorder/NN/postorder traversal/NN/traversal on/IN/on the/DT/the right/NN/right child/NN/child and/CC/and then/RB/then eventually/RB/eventually you/PRP/you do/VBP/do visit/NN/visit v/CC/v. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 54/CD/54 /CD/) let/NN/let us/PRP/us see/VBP/see if/IN/if you/PRP/you understood/VBD/understood this/NNP/this. let/NN/let us/PRP/us look/VBP/look at/IN/at an/DT/an example/NNP/example. this/DT/this is/VBZ/is my/PRP$/my tree/NNP/tree. it/PRP/it is/VBZ/is a/DT/a binary/JJ/binary tree/NNP/tree. i/PRP/i want/VBP/want you/PRP/you to/TO/to tell/VB/tell me/PRP/me what/WP/what is/VBZ/is the/DT/the pre/NN/pre order/NN/order and/CC/and post/NN/post order/NN/order traversal/NN/traversal of/IN/of this/DT/this tree/NNP/tree. what/WP/what we/PRP/we are/VBP/are doing/VBG/doing when/WRB/when you/PRP/you visit/VBP/visit a/DT/a node/NN/node is/VBZ/is that/IN/that we/PRP/we are/VBP/are just/RB/just printing/VBG/printing out/RP/out the/DT/the contents/NNS/contents of/IN/of the/DT/the node/NNP/node. so/RB/so let/VB/let us/PRP/us first/RB/first look/VBP/look at/IN/at pre/NN/pre order/NNP/order. what/WP/what do/VBP/do you/PRP/you think/VB/think would/MD/would be/VB/be the/DT/the first/JJ/first thing/NN/thing that/WDT/that would/MD/would get/VB/get printed/VBN/printed if/IN/if we/PRP/we are/VBP/are doing/VBG/doing a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of a/DT/a tree/NN/tree ?/./? the/DT/the a/DT/a is/VBZ/is the/DT/the root/NNP/root. so/RB/so we/PRP/we come/VBP/come here/RB/here and/CC/and we/PRP/we print/VBP/print a/NNP/a. then/RB/then we/PRP/we have/VBP/have to/TO/to go/VB/go and/CC/and do/VB/do a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of a/DT/a left/NN/left sub/NN/sub tree/NNP/tree. when/WRB/when we/PRP/we do/VBP/do a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NN/tree we/PRP/we are/VBP/are going/VBG/going to/TO/to come/VB/come to/TO/to the/DT/the root/NN/root of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NN/tree and/CC/and first/JJ/first visit/NN/visit the/DT/the node/NN/node /,/, visit/NN/visit corresponds/NNS/corresponds to/TO/to printing/VBG/printing the/DT/the content/NNP/content. we/PRP/we will/MD/will just/RB/just print/VB/print it/PRP/it out/RP/out as/RB/as b/NNP/b. then/RB/then we/PRP/we will/MD/will go/VB/go to/TO/to the/DT/the left/NN/left sub/NN/sub tree/NN/tree which/WDT/which is/VBZ/is c/NNP/c. we/PRP/we will/MD/will come/VB/come here/RB/here /,/, we/PRP/we will/MD/will look/VB/look at/IN/at the/DT/the root/NN/root node/NN/node /,/, first/JJ/first visit/NN/visit the/DT/the node/NNP/node. visit/NN/visit the/DT/the node/NN/node here/RB/here means/VBZ/means printing/VBG/printing the/DT/the contents/NNS/contents /,/, we/PRP/we will/MD/will print/VB/print c/NNP/c. then/RB/then we/PRP/we try/VBP/try to/TO/to go/VB/go to/TO/to its/PRP$/its left/NN/left sub/NN/sub tree/NN/tree but/CC/but its/PRP$/its left/VBN/left sub/NN/sub tree/NN/tree is/VBZ/is null/NNP/null. there/RB/there is/VBZ/is nothing/NN/nothing there/NNP/there. so/RB/so then/RB/then we/PRP/we go/VBP/go to/TO/to its/PRP$/its right/NN/right sub/NN/sub tree/NN/tree which/WDT/which is/VBZ/is also/RB/also null/JJ/null nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. now/RB/now we/PRP/we are/VBP/are done/VBN/done with/IN/with the/DT/the preorder/NN/preorder traversal/NN/traversal of/IN/of this/DT/this c/NNP/c. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 57/CD/57 /CD/) where/WRB/where do/VBP/do we/PRP/we go/VB/go now/RB/now ?/./? to/TO/to the/DT/the right/NN/right sub/NN/sub tree/NN/tree because/IN/because first/JJ/first we/PRP/we went/VBD/went to/TO/to visit/VB/visit the/DT/the node/NN/node then/RB/then we/PRP/we did/VBD/did a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. now/RB/now we/PRP/we have/VBP/have to/TO/to do/VB/do a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of right/NN/right sub/NN/sub tree/NN/tree which/WDT/which means/VBZ/means first/RB/first visit/NN/visit the/DT/the node/NN/node here/RB/here which/WDT/which is/VBZ/is d/VBN/d then/RB/then we/PRP/we go/VBP/go left/VBN/left which/WDT/which is/VBZ/is f/NNP/f. then/RB/then again/RB/again we/PRP/we try/VBP/try to/TO/to go/VB/go to/TO/to left/VB/left which/WDT/which is/VBZ/is null/MD/null /,/, then/RB/then go/VB/go right/RB/right which/WDT/which is/VBZ/is also/RB/also null/JJ/null /,/, nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. then/RB/then we/PRP/we go/VBP/go to/TO/to g/VB/g and/CC/and now/RB/now we/PRP/we are/VBP/are done/VBN/done with/IN/with the/DT/the pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of this/DT/this sub/NN/sub tree/NNP/tree. we/PRP/we are/VBP/are done/VBN/done with/IN/with a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. we/PRP/we are/VBP/are done/VBN/done with/IN/with a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of the/DT/the right/NN/right sub/NN/sub tree/NN/tree which/WDT/which means/VBZ/means we/PRP/we are/VBP/are done/VBN/done with/IN/with the/DT/the pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of the/DT/the entire/JJ/entire sub/NN/sub tree/NNP/tree. now/RB/now we/PRP/we would/MD/would go/VB/go to/TO/to the/DT/the right/NN/right sub/NN/sub tree/NN/tree /,/, the/DT/the right/NN/right sub/NN/sub tree/NN/tree has/VBZ/has only/RB/only e/VBP/e in/IN/in it/NNP/it. so/RB/so we/PRP/we would/MD/would just/RB/just print/VB/print e/NNP/e. this/DT/this would/MD/would be/VB/be the/DT/the pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of this/DT/this tree/NNP/tree. let/VBD/let us/PRP/us do/VBP/do a/DT/a post/NN/post order/NN/order traversal/NNP/traversal. which/WDT/which do/VBP/do you/PRP/you think/VB/think is/VBZ/is the/DT/the first/JJ/first node/NN/node that/WDT/that would/MD/would get/VB/get printed/VBN/printed ?/./? it/PRP/it is/VBZ/is c/NNP/c. why/WRB/why c/NN/c the/DT/the right/NN/right answer/NN/answer ?/./? let/NN/let us/PRP/us see/NNP/see. we/PRP/we come/VBP/come here/RB/here to/TO/to do/VB/do a/DT/a post/NN/post order/NN/order traversal/NNP/traversal. this/DT/this a/DT/a will/MD/will be/VB/be printed/VBN/printed at/IN/at the/DT/the very/RB/very end/NN/end after/IN/after i/PRP/i have/VBP/have done/VBN/done the/DT/the post/NN/post order/NN/order traversal/NN/traversal on/IN/on the/DT/the left/NN/left side/NN/side and/CC/and post/NN/post order/NN/order traversal/NN/traversal on/IN/on the/DT/the right/NNP/right. so/RB/so i/PRP/i will/MD/will first/RB/first try/VB/try to/TO/to do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of the/DT/the nodes/NNS/nodes on/IN/on the/DT/the left/NN/left side/NNP/side. when/WRB/when i/PRP/i try/VBP/try to/TO/to do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal to/TO/to b/VB/b /,/, i/PRP/i come/VBP/come here/RB/here /,/, first/JJ/first i/PRP/i will/MD/will do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of c/NN/c then/RB/then i/PRP/i will/MD/will do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of d/NN/d /,/, and/CC/and then/RB/then print/VBP/print the/DT/the node/NN/node b/NNP/b. i/PRP/i have/VBP/have to/TO/to come/VB/come to/TO/to do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of this/DT/this node/NN/node c/NNP/c. for/IN/for doing/VBG/doing that/IN/that i/PRP/i will/MD/will first/RB/first do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of its/PRP$/its left/VBN/left child/NN/child which/WDT/which is/VBZ/is null/MD/null /,/, nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. i/PRP/i do/VBP/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of its/PRP$/its right/NN/right child/NN/child /,/, null/JJ/null nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. so/RB/so i/PRP/i am/VBP/am ready/JJ/ready to/TO/to print/VB/print the/DT/the content/NN/content of/IN/of this/DT/this node/NN/node c/NNP/c. the/DT/the first/JJ/first thing/NN/thing that/WDT/that will/MD/will get/VB/get printed/VBN/printed is/VBZ/is c/NNP/c. i/PRP/i am/VBP/am done/NN/done with/IN/with the/DT/the post/NN/post order/NN/order traversal/NN/traversal on/IN/on the/DT/the left/NN/left subtree/NN/subtree and/CC/and now/RB/now i/PRP/i come/VBP/come and/CC/and do/VB/do the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. to/TO/to do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of the/DT/the right/NN/right sub/NN/sub tree/NN/tree i/PRP/i once/RB/once again/RB/again come/VBN/come to/TO/to the/DT/the root/NN/root which/WDT/which is/VBZ/is d/NNP/d. i/PRP/i first/RB/first do/VBP/do the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of this/DT/this left/NN/left sub/NN/sub tree/NN/tree f/NN/f then/RB/then post/VB/post order/NN/order traversal/NN/traversal of/IN/of this/DT/this right/NN/right sub/NN/sub tree/NN/tree g/NN/g and/CC/and then/RB/then print/VBP/print this/DT/this content/NN/content d/NNP/d. so/RB/so post/RB/post order/NN/order traversal/NN/traversal of/IN/of f/NN/f is/VBZ/is a/DT/a single/JJ/single node/NN/node so/IN/so it/PRP/it will/MD/will just/RB/just be/VB/be f/NNP/f. the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of this/DT/this right/NN/right subtree/NN/subtree would/MD/would be/VB/be g/JJ/g and/CC/and then/RB/then i/PRP/i would/MD/would print/VB/print the/DT/the content/NN/content of/IN/of this/DT/this which/WDT/which means/VBZ/means d/NNP/d. what/WP/what we/PRP/we will/MD/will print/VB/print now/RB/now ?/./? so/RB/so we/PRP/we have/VBP/have done/VBN/done the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of f/NN/f and/CC/and we/PRP/we have/VBP/have done/VBN/done the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of c/NN/c so/IN/so we/PRP/we can/MD/can now/RB/now print/VB/print this/DT/this node/NN/node b/NNP/b. so/RB/so we/PRP/we will/MD/will print/VB/print b/NNP/b. we/PRP/we have/VBP/have done/VBN/done with/IN/with the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of the/DT/the nodes/NNS/nodes on/IN/on the/DT/the left/NN/left side/NN/side so/RB/so we/PRP/we go/VBP/go to/TO/to the/DT/the right/NN/right sub/NN/sub tree/NN/tree e/NNP/e. do/VBP/do the/DT/the post/NN/post order/NN/order traversal/NN/traversal here/RB/here which/WDT/which means/VBZ/means just/RB/just print/VBP/print e/JJ/e and/CC/and then/RB/then we/PRP/we have/VBP/have done/VBN/done with/IN/with the/DT/the post/NN/post order/NN/order traversal/NN/traversal here/RB/here /./( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 45/CD/45 /CD/) /,/, we/PRP/we have/VBP/have done/VBN/done with/IN/with the/DT/the post/NN/post order/NN/order traversal/NN/traversal here/RB/here so/RB/so we/PRP/we can/MD/can now/RB/now print/VB/print the/DT/the root/NN/root which/WDT/which is/VBZ/is a/NNP/a. so/RB/so this/DT/this would/MD/would be/VB/be the/DT/the post/NN/post order/NN/order traversal/NNP/traversal. is/VBZ/is this/DT/this clear/JJ/clear to/TO/to everyone/NN/everyone /,/, how/WRB/how the/DT/the procedure/NN/procedure works/NNP/works. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 59/CD/59 /CD/) i/PRP/i am/VBP/am showing/VBG/showing another/DT/another example/NN/example for/IN/for evaluating/NN/evaluating arithmetic/JJ/arithmetic expression/NNP/expression. this/DT/this is/VBZ/is an/DT/an arithmetic/JJ/arithmetic expression/NN/expression /,/, we/PRP/we want/VBP/want to/TO/to evaluate/VB/evaluate this/DT/this expression/NNP/expression. so/RB/so how/WRB/how does/VBZ/does one/CD/one evaluate/NN/evaluate the/DT/the expressions/NNS/expressions ?/./? this/DT/this is/VBZ/is minus/VBZ/minus /,/, so/RB/so in/IN/in essence/NN/essence we/PRP/we have/VBP/have to/TO/to compute/VB/compute the/DT/the value/NN/value of/IN/of this/DT/this quantity/NNP/quantity. what/WP/what is/VBZ/is the/DT/the value/NN/value of/IN/of this/DT/this sub/NN/sub expression/NN/expression ?/./? this/DT/this corresponds/NNS/corresponds to/TO/to a/DT/a sub/NN/sub expression/NN/expression so/RB/so you/PRP/you have/VB/have to/TO/to compute/VB/compute the/DT/the value/NN/value of/IN/of this/DT/this sub/NN/sub expression/NN/expression which/WDT/which is/VBZ/is on/IN/on the/DT/the left/NN/left /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 36/CD/36 /CD/) /./. we/PRP/we have/VBP/have to/TO/to compute/VB/compute what/WP/what the/DT/the value/NN/value of/IN/of this/DT/this sub/NN/sub expression/NN/expression on/IN/on the/DT/the right/NN/right in/IN/in the/DT/the above/NN/above slide/NNP/slide. whatever/NN/whatever values/NNS/values we/PRP/we get/VBP/get we/PRP/we have/VBP/have to/TO/to then/RB/then take/VB/take their/PRP$/their difference/NNP/difference. that/IN/that will/MD/will be/VB/be the/DT/the value/NN/value of/IN/of the/DT/the entire/JJ/entire thing/NNP/thing. so/RB/so as/IN/as you/PRP/you can/MD/can see/VB/see it/PRP/it is/VBZ/is like/IN/like a/DT/a post/NN/post order/NN/order traversal/NNP/traversal. first/RB/first we/PRP/we have/VBP/have to/TO/to compute/VB/compute the/DT/the value/NN/value of/IN/of this/DT/this which/WDT/which is/VBZ/is on/IN/on the/DT/the left/NN/left then/RB/then the/DT/the value/NN/value of/IN/of this/DT/this on/IN/on the/DT/the right/NN/right and/CC/and then/RB/then take/VB/take the/DT/the difference/NN/difference which/WDT/which is/VBZ/is the/DT/the operator/NN/operator sitting/VBG/sitting in/IN/in this/DT/this node/NN/node at/IN/at the/DT/the center/NNP/center. how/WRB/how do/VBP/do i/PRP/i compute/VB/compute the/DT/the value/NN/value on/IN/on the/DT/the left/NN/left side/NN/side of/IN/of the/DT/the tree/NN/tree ?/./? i/PRP/i have/VBP/have to/TO/to compute/VB/compute the/DT/the value/NN/value of/IN/of this/DT/this left/NN/left sub/NN/sub tree/NN/tree /,/, i/PRP/i have/VBP/have to/TO/to compute/VB/compute the/DT/the value/NN/value of/IN/of this/DT/this right/NN/right sub/NN/sub tree/NN/tree and/CC/and then/RB/then do/VB/do the/DT/the division/NN/division because/IN/because that/DT/that is/VBZ/is the/DT/the operator/NN/operator sitting/VBG/sitting here/NNP/here. we/PRP/we can/MD/can right/RB/right a/DT/a procedure/NN/procedure something/NN/something like/IN/like this/NNP/this. suppose/NN/suppose i/PRP/i say/VBP/say evaluate/JJ/evaluate the/DT/the expression/NN/expression corresponding/VBG/corresponding to/TO/to v/VB/v which/WDT/which is/VBZ/is a/DT/a node/NNP/node. let/NN/let say/VBP/say v/NN/v is/VBZ/is a/DT/a root/NN/root node/NN/node here/RB/here and/CC/and i/PRP/i say/VBP/say evaluate/JJ/evaluate this/NNP/this. if/IN/if v/NN/v is/VBZ/is a/DT/a leaf/NN/leaf then/RB/then i/PRP/i just/RB/just return/VBP/return the/DT/the variable/JJ/variable stored/VBN/stored at/IN/at v/NN/v because/IN/because that/DT/that is/VBZ/is the/DT/the value/NNP/value. the/DT/the leaf/NN/leaf corresponds/NNS/corresponds to/TO/to numbers/NNS/numbers in/IN/in this/DT/this expression/NNP/expression. else/NN/else if/IN/if v/NN/v is/VBZ/is not/RB/not a/DT/a leaf/NN/leaf then/RB/then that/IN/that means/NNS/means we/PRP/we are/VBP/are at/IN/at some/DT/some internal/JJ/internal node/NNP/node. so/RB/so to/TO/to evaluate/VB/evaluate the/DT/the expression/NN/expression corresponding/VBG/corresponding to/TO/to this/DT/this node/NN/node v/NN/v /,/, i/PRP/i have/VBP/have to/TO/to first/JJ/first evaluate/NN/evaluate the/DT/the left/NN/left part/NNP/part. let/NN/let say/VBP/say evaluate/JJ/evaluate /NN/( v.leftchild/JJ/v.leftchild /NN/( /:/) /:/) /./. the/DT/the arrow/NN/arrow after/IN/after x/NN/x in/IN/in the/DT/the slide/NN/slide should/MD/should be/VB/be in/IN/in the/DT/the other/JJ/other direction/NN/direction so/IN/so that/IN/that x/NN/x gets/NNS/gets the/DT/the value/NN/value of/IN/of that/NNP/that. the/DT/the y/NN/y gets/VBZ/gets the/DT/the value/NN/value of/IN/of the/DT/the right/NN/right child/NN/child when/WRB/when i/PRP/i evaluate/VBP/evaluate on/IN/on the/DT/the right/NN/right child/NNP/child. and/CC/and if/IN/if o/NN/o is/VBZ/is the/DT/the operator/NN/operator then/RB/then i/PRP/i just/RB/just compute/JJ/compute x/NN/x o/NN/o y/NN/y whatever/NN/whatever that/WDT/that operator/NN/operator o/VBP/o is/VBZ/is and/CC/and return/NN/return that/IN/that value/NNP/value. that/IN/that will/MD/will be/VB/be the/DT/the value/NN/value of/IN/of expression/NN/expression corresponding/VBG/corresponding to/TO/to node/VB/node v/NNP/v. this/DT/this is/VBZ/is pseudo/VBP/pseudo code/NN/code /,/, i/PRP/i hope/VBP/hope you/PRP/you understand/VBP/understand what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to say/VB/say here/NNP/here. this/DT/this is/VBZ/is like/IN/like a/DT/a post/NN/post order/NN/order traversal/NN/traversal with/IN/with a/DT/a small/JJ/small modification/NNP/modification. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be addressing/VBG/addressing that/IN/that problem/NN/problem /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 29/CD/29 /CD/) /./. the/DT/the problem/NN/problem of/IN/of generating/VBG/generating this/DT/this tree/NN/tree /,/, given/VBN/given an/DT/an arithmetic/JJ/arithmetic expression/NN/expression you/PRP/you will/MD/will have/VB/have to/TO/to incorporate/VB/incorporate the/DT/the priority/NN/priority rules/NNS/rules to/TO/to generate/VB/generate such/JJ/such a/DT/a tree/NNP/tree. we/PRP/we will/MD/will not/RB/not be/VB/be worried/VBN/worried about/IN/about that/DT/that for/IN/for now/NNP/now. we/PRP/we are/VBP/are just/RB/just looking/VBG/looking at/IN/at traversals/NNP/traversals. given/VBN/given such/JJ/such a/DT/a tree/NN/tree how/WRB/how can/MD/can you/PRP/you evaluate/VB/evaluate the/DT/the expression/NN/expression corresponding/VBG/corresponding to/TO/to this/DT/this tree/NN/tree ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 53/CD/53 /CD/) for/IN/for a/DT/a binary/JJ/binary tree/NN/tree we/PRP/we have/VBP/have seen/VBN/seen a/DT/a preorder/NN/preorder traversal/NN/traversal and/CC/and a/DT/a post/NN/post order/NN/order traversal/NNP/traversal. there/EX/there is/VBZ/is a/DT/a third/JJ/third kind/NN/kind of/IN/of traversal/NN/traversal which/WDT/which is/VBZ/is called/VBN/called an/DT/an in/IN/in order/NN/order traversal/NNP/traversal. so/RB/so recall/JJ/recall that/IN/that in/IN/in a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal we/PRP/we visited/VBD/visited the/DT/the node/NN/node first/RB/first /,/, then/RB/then we/PRP/we went/VBD/went to/TO/to the/DT/the left/NN/left then/RB/then we/PRP/we went/VBD/went to/TO/to the/DT/the right/NNP/right. in/IN/in a/DT/a post/NN/post order/NN/order traversal/NN/traversal we/PRP/we first/RB/first went/VBD/went to/TO/to the/DT/the left/NN/left then/RB/then to/TO/to the/DT/the right/NN/right then/RB/then we/PRP/we visited/VBD/visited the/DT/the node/NNP/node. so/RB/so the/DT/the third/JJ/third possibility/NN/possibility is/VBZ/is if/IN/if we/PRP/we just/RB/just visit/VBP/visit the/DT/the node/NN/node /,/, between/IN/between the/DT/the visits/NNS/visits to/TO/to the/DT/the left/NN/left and/CC/and the/DT/the right/NNP/right. there/RB/there should/MD/should be/VB/be an/DT/an and/CC/and between/IN/between the/DT/the visit/NN/visit to/TO/to the/DT/the left/NN/left and/CC/and right/RB/right sub/VB/sub tree/NNP/tree. so/RB/so pseudo/VBP/pseudo code/NN/code for/IN/for in/IN/in order/NN/order traversal/NN/traversal would/MD/would be/VB/be such/JJ/such thing/NN/thing like/IN/like the/DT/the following/NNP/following. if/IN/if v/NN/v is/VBZ/is null/JJ/null then/RB/then we/PRP/we just/RB/just get/VB/get out/IN/out /,/, else/RB/else we/PRP/we first/RB/first do/VBP/do an/DT/an in/IN/in order/NN/order on/IN/on the/DT/the left/NN/left child/NN/child then/RB/then we/PRP/we visit/VBP/visit the/DT/the node/NN/node and/CC/and then/RB/then we/PRP/we do/VBP/do an/DT/an in/IN/in order/NN/order traversal/NN/traversal on/IN/on the/DT/the right/NN/right child/NNP/child. these/DT/these are/VBP/are the/DT/the only/JJ/only 3/CD/3 possibilities/NNP/possibilities. these/DT/these are/VBP/are 3/CD/3 binary/JJ/binary trees/NNS/trees /,/, so/RB/so you/PRP/you first/RB/first go/VBP/go left/NNP/left. where/WRB/where do/VBP/do you/PRP/you visit/VB/visit the/DT/the node/NN/node ?/./? either/DT/either you/PRP/you visit/VBP/visit it/PRP/it before/IN/before you/PRP/you visit/VBP/visit both/DT/both the/DT/the left/NN/left and/CC/and the/DT/the right/NN/right or/CC/or you/PRP/you visit/VBP/visit it/PRP/it after/IN/after you/PRP/you visit/VBP/visit both/DT/both the/DT/the left/NN/left and/CC/and the/DT/the right/NN/right or/CC/or you/PRP/you visit/VBP/visit it/PRP/it in/IN/in between/IN/between the/DT/the visits/NNS/visits to/TO/to the/DT/the left/NN/left and/CC/and the/DT/the right/NNP/right. these/DT/these are/VBP/are the/DT/the 3/CD/3 possibilities/NNS/possibilities and/CC/and these/DT/these are/VBP/are the/DT/the 3/CD/3 traversals/NNS/traversals that/WDT/that are/VBP/are known/NNP/known. let/NN/let us/PRP/us just/RB/just look/VBP/look at/IN/at an/DT/an example/NN/example and/CC/and see/VB/see that/IN/that we/PRP/we have/VBP/have understood/VBN/understood inorder/NN/inorder traversal/NNP/traversal. which/WDT/which is/VBZ/is the/DT/the first/JJ/first node/NN/node that/WDT/that will/MD/will get/VB/get printed/VBN/printed ?/./? is/VBZ/is that/IN/that a/DT/a ?/./? first/JJ/first to/TO/to do/VB/do an/DT/an inorder/NN/inorder traversal/NN/traversal we/PRP/we come/VBP/come to/TO/to the/DT/the node/NN/node a/NNP/a. we/PRP/we first/RB/first do/VBP/do an/DT/an inorder/NN/inorder traversal/NN/traversal of/IN/of this/DT/this left/NN/left sub/NN/sub tree/NN/tree then/RB/then we/PRP/we come/VBP/come to/TO/to the/DT/the node/NN/node a/NNP/a. then/RB/then we/PRP/we do/VBP/do an/DT/an inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the right/NN/right sub/NN/sub tree/NN/tree e/NNP/e. so/RB/so to/TO/to do/VB/do an/DT/an inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NN/tree /,/, we/PRP/we will/MD/will come/VB/come to/TO/to b/NNP/b. first/RB/first we/PRP/we will/MD/will do/VB/do an/DT/an inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left then/RB/then we/PRP/we will/MD/will print/VB/print the/DT/the content/NN/content then/RB/then go/VB/go right/NNP/right. so/RB/so to/TO/to do/VB/do an/DT/an inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the node/NN/node c/NN/c which/WDT/which is/VBZ/is a/DT/a single/JJ/single node/NN/node /,/, so/RB/so it/PRP/it corresponds/VBZ/corresponds to/TO/to printing/VBG/printing c/NN/c out/NNP/out. that/IN/that is/VBZ/is the/DT/the first/JJ/first thing/NN/thing we/PRP/we will/MD/will print/NNP/print. then/RB/then we/PRP/we will/MD/will be/VB/be printing/VBG/printing the/DT/the content/NN/content of/IN/of this/DT/this which/WDT/which will/MD/will be/VB/be b/NN/b and/CC/and then/RB/then we/PRP/we will/MD/will have/VB/have to/TO/to do/VB/do an/DT/an inorder/NN/inorder traversal/NN/traversal of/IN/of this/DT/this right/NN/right sub/NN/sub tree/NNP/tree. for/IN/for a/DT/a right/NN/right sub/NN/sub tree/NN/tree inorder/NN/inorder traversal/NN/traversal /,/, once/RB/once again/RB/again we/PRP/we will/MD/will first/RB/first print/VB/print out/RP/out f/NN/f then/RB/then d/VBD/d and/CC/and then/RB/then g/NNP/g. now/RB/now we/PRP/we are/VBP/are done/VBN/done with/IN/with the/DT/the entire/JJ/entire inorder/NN/inorder traversal/NN/traversal of/IN/of left/VBN/left sub/NN/sub tree/NN/tree /,/, so/RB/so we/PRP/we will/MD/will print/VB/print out/RP/out a/DT/a and/CC/and eventually/RB/eventually we/PRP/we will/MD/will print/VB/print out/RP/out e/NNP/e. that/IN/that would/MD/would be/VB/be the/DT/the inorder/NN/inorder traversal/NN/traversal of/IN/of this/DT/this tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 07/CD/07 /CD/) there/EX/there is/VBZ/is an/DT/an another/DT/another way/NN/way of/IN/of traversing/VBG/traversing a/DT/a tree/NNP/tree. that/WDT/that is/VBZ/is called/VBN/called an/DT/an euler/NN/euler tour/NNP/tour. suppose/NN/suppose this/DT/this is/VBZ/is a/DT/a tree/NN/tree corresponding/VBG/corresponding to/TO/to an/DT/an arithmetic/JJ/arithmetic expression/NNP/expression. the/DT/the tour/NN/tour is/VBZ/is basically/RB/basically the/DT/the one/CD/one drawn/NN/drawn in/IN/in blue/JJ/blue here/NNP/here. we/PRP/we start/VBP/start from/IN/from here/RB/here /,/, keep/VB/keep going/VBG/going down/NNP/down. when/WRB/when we/PRP/we hit/VBP/hit a/DT/a leaf/NN/leaf /,/, we/PRP/we go/VBP/go up/RP/up to/TO/to his/PRP$/his parent/NN/parent then/RB/then go/VB/go to/TO/to the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and so/RB/so on/IN/on /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 54/CD/54 /CD/) /./. it/PRP/it is/VBZ/is a/DT/a generic/JJ/generic traversal/NN/traversal of/IN/of a/DT/a binary/JJ/binary tree/NNP/tree. and/CC/and all/DT/all the/DT/the 3/CD/3 traversals/NNS/traversals that/WDT/that we/PRP/we have/VBP/have seen/VBN/seen that/IN/that is/VBZ/is pre/JJ/pre /,/, post/NN/post and/CC/and inorder/NN/inorder traversal/NN/traversal can/MD/can be/VB/be viewed/VBN/viewed at/IN/at as/IN/as a/DT/a special/JJ/special case/NN/case of/IN/of this/DT/this eulers/NNS/eulers tour/VBP/tour traversal/NNP/traversal. each/DT/each node/NN/node is/VBZ/is basically/RB/basically getting/VBG/getting visited/VBN/visited thrice/NNP/thrice. why/WRB/why because/IN/because once/RB/once we/PRP/we are/VBP/are coming/VBG/coming like/IN/like this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 25/CD/25 /CD/) then/RB/then other/JJ/other time/NN/time we/PRP/we are/VBP/are going/VBG/going like/IN/like this/DT/this /,/, touching/VBG/touching this/DT/this node/NNP/node. the/DT/the third/JJ/third time/NN/time we/PRP/we are/VBP/are coming/VBG/coming like/IN/like this/DT/this and/CC/and touching/VBG/touching this/DT/this node/NNP/node. so/RB/so 3/CD/3 times/NNS/times that/WDT/that we/PRP/we touch/VBP/touch any/DT/any node/NN/node except/IN/except the/DT/the leaf/NN/leaf nodes/VBZ/nodes where/WRB/where you/PRP/you can/MD/can count/VB/count this/DT/this as/IN/as only/RB/only once/RB/once or/CC/or thrice/NN/thrice or/CC/or what/WP/what ever/RB/ever you/PRP/you want/NNP/want. but/CC/but every/DT/every internal/JJ/internal node/NN/node will/MD/will be/VB/be touched/VBN/touched thrice/-NONE-/thrice. i/PRP/i should/MD/should actually/RB/actually qualify/VB/qualify /,/, every/DT/every internal/JJ/internal node/NN/node of/IN/of degree/NN/degree which/WDT/which has/VBZ/has 2/CD/2 children/NNS/children /,/, if/IN/if the/DT/the node/NN/node has/VBZ/has only/RB/only one/CD/one child/NN/child then/RB/then you/PRP/you will/MD/will touch/VB/touch it/PRP/it only/RB/only twice/NNP/twice. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 31/CD/31 /CD/) suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the tree/NN/tree corresponding/VBG/corresponding to/TO/to a/DT/a certain/JJ/certain arithmetic/JJ/arithmetic expression/NN/expression which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide below/NNP/below. i/PRP/i want/VBP/want to/TO/to print/VB/print this/DT/this arithmetic/JJ/arithmetic expression/NN/expression out/IN/out with/IN/with parenthesis/NNP/parenthesis. i/PRP/i want/VBP/want to/TO/to draw/VB/draw the/DT/the parenthesis/NN/parenthesis /,/, i/PRP/i want/VBP/want to/TO/to print/VB/print it/PRP/it out/RP/out in/IN/in this/DT/this manner/NN/manner which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the below/NN/below slide/NNP/slide. so/RB/so i/PRP/i can/MD/can do/VB/do an/DT/an euler/NN/euler walk/NN/walk to/TO/to print/VB/print this/DT/this thing/NNP/thing. suppose/NN/suppose i/PRP/i am/VBP/am here/RB/here in/IN/in the/DT/the middle/NN/middle /,/, before/IN/before i/PRP/i start/VBP/start on/IN/on the/DT/the left/NN/left sub/NN/sub tree/NN/tree i/PRP/i will/MD/will print/VB/print a/DT/a left/NN/left bracket/NNP/bracket. when/WRB/when i/PRP/i finish/VBP/finish with/IN/with the/DT/the right/NN/right sub/NN/sub tree/NN/tree i/PRP/i will/MD/will print/VB/print the/DT/the right/NN/right bracket/NNP/bracket. this/DT/this right/NN/right subtree/NN/subtree corresponds/NNS/corresponds to/TO/to taking/VBG/taking this/DT/this path/NN/path up/RP/up /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 54/CD/54 /CD/) /,/, going/VBG/going up/RP/up like/IN/like this/DT/this and/CC/and when/WRB/when i/PRP/i am/VBP/am coming/VBG/coming like/IN/like this/DT/this and/CC/and touching/VBG/touching this/DT/this node/NN/node will/MD/will just/RB/just print/VB/print out/RP/out the/DT/the content/NN/content of/IN/of the/DT/the node/NNP/node. did/VBD/did you/PRP/you understand/VBP/understand what/WP/what i/PRP/i am/VBP/am saying/VBG/saying ?/./? so/RB/so recall/RB/recall that/IN/that every/DT/every node/NN/node was/VBD/was visited/VBN/visited thrice/NNP/thrice. so/RB/so once/RB/once when/WRB/when i/PRP/i am/VBP/am visiting/VBG/visiting it/PRP/it from/IN/from the/DT/the left/NN/left then/RB/then essentially/RB/essentially i/PRP/i am/VBP/am going/VBG/going to/TO/to print/VB/print a/DT/a left/NN/left bracket/NNP/bracket. when/WRB/when i/PRP/i am/VBP/am touching/VBG/touching it/PRP/it from/IN/from the/DT/the right/NN/right essentially/RB/essentially i/PRP/i am/VBP/am going/VBG/going to/TO/to print/VB/print the/DT/the right/NN/right bracket/NN/bracket and/CC/and when/WRB/when i/PRP/i am/VBP/am touching/VBG/touching it/PRP/it from/IN/from below/IN/below i/PRP/i am/VBP/am going/VBG/going to/TO/to print/VB/print the/DT/the content/NN/content of/IN/of this/DT/this node/NNP/node. if/IN/if you/PRP/you do/VBP/do that/DT/that then/RB/then you/PRP/you will/MD/will get/VB/get exactly/RB/exactly the/DT/the one/CD/one which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the bottom/NN/bottom of/IN/of the/DT/the below/NN/below slide/NNP/slide. first/RB/first i/PRP/i will/MD/will touch/VB/touch the/DT/the node/NN/node at/IN/at the/DT/the center/NN/center from/IN/from the/DT/the left/NN/left so/RB/so first/RB/first i/PRP/i will/MD/will print/VB/print left/VBN/left bracket/NN/bracket then/RB/then i/PRP/i will/MD/will touch/VB/touch this/DT/this node/NN/node on/IN/on the/DT/the left/NN/left i/PRP/i will/MD/will print/VB/print another/DT/another left/NN/left bracket/NN/bracket /,/, i/PRP/i touch/VBP/touch this/DT/this node/NN/node on/IN/on the/DT/the left/NN/left i/PRP/i print/VBP/print another/DT/another left/NN/left bracket/NN/bracket and/CC/and i/PRP/i touch/VBP/touch this/DT/this node/NN/node on/IN/on the/DT/the left/NN/left so/RB/so i/PRP/i print/VBP/print another/DT/another left/NN/left bracket/NNP/bracket. so/RB/so i/PRP/i get/VBP/get 4/CD/4 left/VBN/left brackets/NNS/brackets to/TO/to begin/VB/begin with/NNP/with. then/RB/then i/PRP/i come/VBP/come to/TO/to the/DT/the node/NN/node 3/CD/3. for/IN/for the/DT/the leaf/NN/leaf i/PRP/i will/MD/will just/RB/just print/VB/print the/DT/the content/NN/content of/IN/of the/DT/the leaf/NN/leaf and/CC/and do/VBP/do nothing/NN/nothing else/RB/else so/RB/so i/PRP/i just/RB/just print/VBP/print 3/CD/3. then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to touch/JJ/touch this/DT/this node/NN/node from/IN/from below/IN/below /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 50/CD/50 /CD/) /,/, i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to print/VB/print a/DT/a star/NN/star or/CC/or a/DT/a multiplication/NNP/multiplication. then/RB/then i/PRP/i come/VBP/come and/CC/and touch/JJ/touch it/PRP/it from/IN/from the/DT/the left/NN/left so/RB/so i/PRP/i print/VBP/print a/DT/a left/NN/left bracket/NN/bracket then/RB/then i/PRP/i come/VBP/come here/RB/here which/WDT/which is/VBZ/is 1/CD/1 and/CC/and so/RB/so on/NNP/on. so/IN/so you/PRP/you can/MD/can think/VB/think of/IN/of this/DT/this as/IN/as essentially/RB/essentially printing/VBG/printing out/RP/out this/DT/this arithmetic/JJ/arithmetic expression/NN/expression as/IN/as some/DT/some kind/NN/kind of/IN/of euler/NN/euler walk/NN/walk on/IN/on this/DT/this tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 12/CD/12 /CD/) we/PRP/we can/MD/can actually/RB/actually write/VB/write a/DT/a generic/JJ/generic method/NN/method for/IN/for tree/NN/tree traversal/NN/traversal and/CC/and then/RB/then specialize/VB/specialize it/PRP/it for/IN/for whatever/RB/whatever particular/JJ/particular application/NN/application you/PRP/you have/NNP/have. whether/IN/whether you/PRP/you want/VBP/want to/TO/to do/VB/do a/DT/a preorder/NN/preorder /,/, postorder/NN/postorder or/CC/or inorder/NN/inorder traversal/NN/traversal or/CC/or any/DT/any such/JJ/such thing/NNP/thing. so/IN/so this/DT/this is/VBZ/is just/RB/just a/DT/a small/JJ/small example/NNP/example. so/RB/so you/PRP/you want/VBP/want to/TO/to traverse/VB/traverse a/DT/a node/NN/node specified/VBN/specified at/IN/at this/DT/this position/NN/position p/NNP/p. if/IN/if this/DT/this is/VBZ/is an/DT/an external/JJ/external node/NN/node then/RB/then you/PRP/you will/MD/will call/VB/call this/DT/this method/NN/method which/WDT/which is/VBZ/is called/VBN/called external/-NONE-/external. you/PRP/you have/VBP/have not/RB/not done/VBN/done anything/NN/anything here/RB/here /,/, we/PRP/we have/VBP/have just/RB/just specified/VBN/specified certain/JJ/certain methods/NNP/methods. external/JJ/external is/VBZ/is a/DT/a method/NN/method that/WDT/that you/PRP/you will/MD/will invoke/VB/invoke if/IN/if the/DT/the node/NN/node that/IN/that you/PRP/you are/VBP/are trying/VBG/trying to/TO/to traverse/VB/traverse is/VBZ/is an/DT/an external/JJ/external node/NNP/node. an/DT/an external/JJ/external node/NN/node is/VBZ/is the/DT/the same/JJ/same as/IN/as a/DT/a leaf/NN/leaf node/NNP/node. so/RB/so if/IN/if it/PRP/it is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node then/RB/then that/IN/that is/VBZ/is the/DT/the method/NN/method you/PRP/you invoke/NNP/invoke. when/WRB/when you/PRP/you touch/VBP/touch the/DT/the node/NN/node from/IN/from the/DT/the left/NN/left then/RB/then you/PRP/you will/MD/will invoke/VB/invoke this/DT/this method/NN/method called/VBD/called left/NNP/left. here/RB/here you/PRP/you continue/VBP/continue with/IN/with the/DT/the left/NN/left child/NNP/child. when/WRB/when you/PRP/you touch/VBP/touch the/DT/the node/NN/node from/IN/from below/IN/below /,/, you/PRP/you will/MD/will invoke/VB/invoke this/DT/this method/NN/method then/RB/then you/PRP/you continue/VBP/continue with/IN/with right/JJ/right child/NNP/child. then/RB/then when/WRB/when you/PRP/you touch/VBP/touch the/DT/the node/NN/node from/IN/from the/DT/the right/NN/right you/PRP/you will/MD/will invoke/VB/invoke this/DT/this method/NNP/method. now/RB/now you/PRP/you can/MD/can specify/VB/specify what/WP/what these/DT/these methods/NNS/methods are/NNP/are. so/RB/so by/IN/by specifying/NN/specifying these/DT/these methods/NNS/methods you/PRP/you can/MD/can create/VB/create the/DT/the traversal/NN/traversal of/IN/of choice/NN/choice /,/, you/PRP/you can/MD/can specialize/VB/specialize this/DT/this binary/JJ/binary tree/NN/tree traversal/NN/traversal /,/, this/DT/this generic/JJ/generic tree/NN/tree traversal/NNP/traversal. if/IN/if you/PRP/you want/VBP/want to/TO/to go/VB/go into/IN/into java/NN/java details/NNS/details this/DT/this is/VBZ/is an/DT/an abstract/NN/abstract class/NN/class which/WDT/which means/VBZ/means that/DT/that these/DT/these methods/NNS/methods in/IN/in particular/JJ/particular init/NN/init result/NN/result /,/, isexternal/JJ/isexternal of/IN/of course/NN/course is/VBZ/is specified/VBN/specified but/CC/but init/NN/init result/NN/result /,/, external/JJ/external /,/, left/VBN/left /,/, below/IN/below /,/, and/CC/and right/RB/right are/VBP/are left/VBN/left unspecified/NNP/unspecified. in/IN/in a/DT/a class/NN/class you/PRP/you leave/VBP/leave certain/JJ/certain methods/NNS/methods unspecified/VBN/unspecified then/RB/then it/PRP/it becomes/VBZ/becomes an/DT/an abstract/NN/abstract class/NN/class because/IN/because you/PRP/you can/MD/can not/RB/not really/RB/really create/VB/create an/DT/an object/NN/object of/IN/of that/DT/that class/NN/class anymore/NNP/anymore. but/CC/but then/RB/then at/IN/at some/DT/some point/NN/point you/PRP/you can/MD/can specify/VB/specify those/DT/those methods/NNP/methods. and/CC/and in/IN/in that/DT/that manner/NN/manner create/NN/create a/DT/a sub/NN/sub class/NN/class of/IN/of this/DT/this abstract/NN/abstract class/NN/class which/WDT/which specifies/NNS/specifies these/DT/these methods/NNP/methods. and/CC/and in/IN/in that/DT/that manner/NN/manner specializes/VBZ/specializes this/DT/this generic/JJ/generic tree/NN/tree traversal/NN/traversal procedure/NNP/procedure. this/DT/this is/VBZ/is a/DT/a generic/JJ/generic tree/NN/tree traversal/NN/traversal procedure/NNP/procedure. so/RB/so if/IN/if i/PRP/i were/VBD/were to/TO/to specify/VB/specify left/VBN/left /,/, below/IN/below and/CC/and right/NN/right in/IN/in a/DT/a certain/JJ/certain manner/NN/manner then/RB/then i/PRP/i could/MD/could get/VB/get a/DT/a class/NN/class for/IN/for printing/NN/printing out/IN/out arithmetic/JJ/arithmetic expressions/NNP/expressions. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 16/CD/16 /CD/) you/PRP/you want/VBP/want to/TO/to know/VB/know what/WP/what the/DT/the left/NN/left result/NN/result was/NNP/was. when/WRB/when i/PRP/i come/VBP/come back/RB/back from/IN/from the/DT/the left/NN/left child/NN/child /,/, may/MD/may be/VB/be i/PRP/i compute/VBP/compute a/DT/a certain/JJ/certain result/NNP/result. in/IN/in that/DT/that example/NN/example of/IN/of disk/NN/disk usage/NN/usage we/PRP/we wanted/VBD/wanted to/TO/to compute/VB/compute what/WP/what is/VBZ/is the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by that/DT/that directory/NNP/directory. we/PRP/we computed/VBD/computed the/DT/the space/NN/space required/VBN/required by/IN/by the/DT/the left/NN/left child/NN/child /,/, the/DT/the directory/NN/directory in/IN/in the/DT/the left/NN/left child/NNP/child. corresponding/NN/corresponding to/TO/to the/DT/the left/NN/left child/NN/child we/PRP/we computed/VBD/computed the/DT/the space/NN/space required/VBN/required by/IN/by the/DT/the directory/NN/directory corresponding/VBG/corresponding to/TO/to right/JJ/right child/NNP/child. when/WRB/when we/PRP/we computed/VBD/computed that/IN/that /,/, those/DT/those could/MD/could be/VB/be stored/VBN/stored in/IN/in r.left/JJ/r.left result/NN/result and/CC/and r.right/JJ/r.right result/NN/result and/CC/and then/RB/then we/PRP/we would/MD/would compute/VB/compute their/PRP$/their sum/NNP/sum. that/IN/that would/MD/would be/VB/be your/PRP$/your final/JJ/final value/NN/value /,/, which/WDT/which would/MD/would be/VB/be the/DT/the value/NN/value we/PRP/we would/MD/would return/NNP/return. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 48/CD/48 /CD/) let/NN/let see/NN/see how/WRB/how to/TO/to specialize/VB/specialize this/DT/this for/IN/for our/PRP$/our printing/NN/printing arithmetic/JJ/arithmetic expression/NN/expression example/NNP/example. so/RB/so recall/JJ/recall that/IN/that if/IN/if the/DT/the node/NN/node is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node then/RB/then all/DT/all we/PRP/we said/VBD/said was/VBD/was that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to print/VB/print the/DT/the content/NN/content of/IN/of that/DT/that node/NNP/node. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are saying/VBG/saying /,/, just/RB/just print/VBP/print out/RP/out the/DT/the element/NN/element in/IN/in that/DT/that node/NNP/node. p/NN/p is/VBZ/is a/DT/a position/NN/position just/RB/just print/VBP/print out/RP/out the/DT/the element/NN/element in/IN/in that/DT/that node/NN/node /,/, what/WP/what ever/RB/ever the/DT/the element/NN/element may/MD/may be/NNP/be. when/WRB/when we/PRP/we touch/VBP/touch a/DT/a node/NN/node from/IN/from the/DT/the left/NN/left /,/, we/PRP/we said/VBD/said just/RB/just print/JJ/print out/IN/out a/DT/a left/NN/left bracket/NNP/bracket. so/RB/so that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are saying/VBG/saying just/RB/just print/JJ/print out/IN/out the/DT/the left/NNP/left. when/WRB/when we/PRP/we touch/VBP/touch a/DT/a node/NN/node from/IN/from below/IN/below /,/, we/PRP/we just/RB/just said/VBD/said that/IN/that whatever/NN/whatever is/VBZ/is the/DT/the operator/NN/operator present/NN/present their/PRP$/their just/RB/just print/VBP/print that/IN/that out/NNP/out. that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we are/VBP/are doing/NNP/doing. when/WRB/when we/PRP/we touch/VBP/touch it/PRP/it from/IN/from the/DT/the right/NN/right /,/, we/PRP/we just/RB/just print/VBP/print out/RP/out the/DT/the right/NN/right bracket/NNP/bracket. the/DT/the printexpression/NN/printexpression traversal/NN/traversal is/VBZ/is the/DT/the class/NN/class which/WDT/which is/VBZ/is extending/VBG/extending binarytree/NN/binarytree traversal/NNP/traversal. when/WRB/when i/PRP/i invoke/VBP/invoke the/DT/the traversal/NN/traversal method/NN/method it/PRP/it will/MD/will now/RB/now print/VB/print out/RP/out the/DT/the arithmetic/JJ/arithmetic expression/NN/expression with/IN/with the/DT/the tree/NN/tree corresponding/VBG/corresponding to/TO/to arithmetic/JJ/arithmetic expression/NN/expression in/IN/in parenthesized/JJ/parenthesized form/NNP/form. so/RB/so i/PRP/i could/MD/could specialize/VB/specialize the/DT/the same/JJ/same class/NN/class binarytree/NN/binarytree traversal/NN/traversal to/TO/to use/VB/use it/PRP/it to/TO/to compute/VB/compute the/DT/the total/JJ/total space/NN/space occupied/VBD/occupied by/IN/by certain/JJ/certain directories/NNS/directories structure/VBP/structure /,/, by/IN/by specializing/NN/specializing these/DT/these methods/NNS/methods in/IN/in a/DT/a slightly/RB/slightly different/JJ/different manner/NNP/manner. let/NN/let us/PRP/us continue/VBP/continue with/IN/with our/PRP$/our discussion/NN/discussion on/IN/on pre/NN/pre and/CC/and in/IN/in order/NNP/order. suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you the/DT/the preorder/NN/preorder and/CC/and inorder/NN/inorder traversal/NN/traversal of/IN/of a/DT/a binary/JJ/binary tree/NNP/tree. i/PRP/i have/VBP/have mentioned/VBN/mentioned this/DT/this in/IN/in the/DT/the following/JJ/following slide/NNP/slide. can/MD/can you/PRP/you use/VB/use this/DT/this to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the tree/NN/tree is/VBZ/is ?/./? yes/NNS/yes or/CC/or no/NNP/no. suppose/NN/suppose this/DT/this was/VBD/was the/DT/the preorder/NN/preorder traversal/NN/traversal and/CC/and this/DT/this was/VBD/was the/DT/the inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the binary/JJ/binary tree/NNP/tree. i/PRP/i have/VBP/have given/VBN/given you/PRP/you these/DT/these 2/CD/2. can/MD/can you/PRP/you use/VB/use these/DT/these /,/, to/TO/to print/VB/print out/RP/out to/TO/to tell/VB/tell me/PRP/me what/WP/what the/DT/the tree/NN/tree is/VBZ/is ?/./? yes/NNS/yes you/PRP/you can/NNP/can. why/WRB/why we/PRP/we can/MD/can do/VB/do that/DT/that ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 33/CD/33 /CD/) so/RB/so given/VBN/given this/DT/this preorder/NN/preorder traversal/NN/traversal /,/, what/WP/what can/MD/can i/VB/i say/VB/say first/JJ/first ?/./? i/PRP/i have/VBP/have marked/VBN/marked a/DT/a as/IN/as the/DT/the root/NNP/root. what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? the/DT/the b/NN/b is/VBZ/is left/VBN/left child/-NONE-/child. is/VBZ/is this/DT/this true/JJ/true that/IN/that b/NN/b is/VBZ/is the/DT/the left/VBN/left child/NN/child ?/./? no/DT/no /,/, not/RB/not necessarily/NNP/necessarily. the/DT/the root/NN/root might/MD/might not/RB/not have/VB/have a/DT/a left/VBN/left child/NN/child at/IN/at all/NNP/all. that/IN/that can/MD/can happen/VB/happen /,/, so/RB/so we/PRP/we can/MD/can not/RB/not say/VB/say anything/NNP/anything. all/DT/all we/PRP/we can/MD/can say/VB/say is/VBZ/is /,/, a/DT/a is/VBZ/is the/DT/the root/NNP/root. let/NN/let us/PRP/us find/VBP/find a/DT/a in/IN/in the/DT/the inorder/NN/inorder traversal/NNP/traversal. the/DT/the a/DT/a is/VBZ/is the/DT/the root/NN/root /,/, i/PRP/i know/VBP/know that/IN/that let/NN/let me/PRP/me just/RB/just put/VBD/put down/RP/down the/DT/the node/NN/node for/IN/for the/DT/the root/NNP/root. and/CC/and i/PRP/i know/VBP/know that/IN/that i/PRP/i will/MD/will search/VB/search for/IN/for a/DT/a in/IN/in the/DT/the inorder/NN/inorder traversal/NNP/traversal. now/RB/now what/WP/what do/VBP/do i/PRP/i know/VB/know ?/./? i/PRP/i know/VBP/know that/IN/that e/NN/e is/VBZ/is to/TO/to the/DT/the right/NN/right that/IN/that is/VBZ/is e/JJ/e is/VBZ/is the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. i/PRP/i know/VBP/know that/IN/that this/DT/this /NN/( e/NN/e /:/) is/VBZ/is the/DT/the inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and this/DT/this blue/NN/blue colored/VBD/colored is/VBZ/is the/DT/the inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of a/NNP/a. the/DT/the green/JJ/green is/VBZ/is the/DT/the inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and blue/JJ/blue is/VBZ/is the/DT/the inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. i/PRP/i know/VBP/know that/IN/that the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has 5/CD/5 elements/NNS/elements in/IN/in it/NNP/it. this/DT/this is/VBZ/is the/DT/the information/NN/information i/PRP/i know/NNP/know. so/RB/so in/IN/in the/DT/the preorder/NN/preorder traversal/NN/traversal the/DT/the 5/CD/5 elements/NNS/elements following/VBG/following a/DT/a /,/, would/MD/would correspond/VB/correspond to/TO/to the/DT/the preorder/NN/preorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. the/DT/the one/CD/one element/NN/element following/VBG/following that/IN/that would/MD/would be/VB/be the/DT/the preorder/NN/preorder traversal/NN/traversal of/IN/of right/NN/right sub/NN/sub tree/NNP/tree. so/RB/so in/IN/in essence/NN/essence what/WP/what have/VBP/have i/PRP/i managed/VBN/managed to/TO/to do/VB/do ?/./? i/PRP/i have/VBP/have managed/VBN/managed to/TO/to identify/VB/identify what/WP/what the/DT/the left/NN/left and/CC/and right/RB/right sub/VB/sub tree/NN/tree are/VBP/are and/CC/and i/PRP/i know/VBP/know their/PRP$/their preorder/NN/preorder and/CC/and inorder/NN/inorder traversals/NNP/traversals. i/PRP/i know/VBP/know the/DT/the preorder/NN/preorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NN/tree and/CC/and i/PRP/i know/VBP/know the/DT/the inorder/NN/inorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. so/RB/so my/PRP$/my problem/NN/problem /,/, i/PRP/i can/MD/can use/VB/use recursion/NN/recursion now/NNP/now. i/PRP/i know/VBP/know e/JJ/e is/VBZ/is the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and now/RB/now i/PRP/i can/MD/can basically/RB/basically work/VB/work on/IN/on this/DT/this problem/NN/problem /,/, where/WRB/where i/PRP/i am/VBP/am given/VBN/given the/DT/the preorder/NN/preorder and/CC/and in/IN/in order/NN/order traversal/NN/traversal of/IN/of a/DT/a tree/NN/tree and/CC/and i/PRP/i need/VBP/need to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the tree/NN/tree is/NNP/is. and/CC/and whatever/NN/whatever is/VBZ/is the/DT/the tree/NN/tree is/VBZ/is /,/, i/PRP/i will/MD/will come/VB/come and/CC/and plug/NN/plug it/PRP/it as/IN/as the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of a/NNP/a. let/NN/let us/PRP/us continue/VBP/continue with/IN/with the/DT/the example/NN/example and/CC/and let/VB/let see/NN/see what/WP/what we/PRP/we will/MD/will do/VB/do now/NNP/now. so/RB/so b/VB/b is/VBZ/is the/DT/the root/NN/root of/IN/of this/DT/this left/NN/left sub/NN/sub tree/NNP/tree. whatever/NN/whatever argument/NN/argument we/PRP/we used/VBD/used before/NNP/before. so/RB/so b/VB/b is/VBZ/is the/DT/the root/NN/root of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NN/tree /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see where/WRB/where b/NN/b is/VBZ/is in/IN/in the/DT/the inorder/NN/inorder traversal/NNP/traversal. the/DT/the b/NN/b is/VBZ/is here/RB/here and/CC/and b/NN/b is/VBZ/is the/DT/the root/NNP/root. so/RB/so this/DT/this /NN/( c/NN/c /:/) would/MD/would be/VB/be the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of b/NN/b now/NNP/now. and/CC/and f/NN/f /,/, d/NN/d /,/, g/NN/g is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the right/NN/right sub/NN/sub tree/NN/tree of/IN/of b/NNP/b. so/RB/so on/IN/on the/DT/the left/NN/left i/PRP/i have/VBP/have only/RB/only one/CD/one element/NN/element that/WDT/that would/MD/would be/VB/be c/JJ/c here/NNP/here. so/RB/so c/JJ/c would/MD/would be/VB/be the/DT/the left/NN/left sub/NN/sub tree/NN/tree and/CC/and this/DT/this /NN/( d/VBD/d /,/, g/NN/g /,/, f/NN/f /:/) would/MD/would be/VB/be the/DT/the preorder/NN/preorder traversal/NN/traversal of/IN/of the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. i/PRP/i figured/VBD/figured out/RP/out the/DT/the c/NN/c /,/, since/IN/since on/IN/on the/DT/the left/NN/left there/RB/there is/VBZ/is only/RB/only one/CD/one so/RB/so i/PRP/i can/MD/can put/VB/put that/IN/that c/NN/c down/NNP/down. i/PRP/i do/VBP/do not/RB/not know/VB/know what/WP/what the/DT/the right/NN/right subtree/NN/subtree is/NNP/is. i/PRP/i just/RB/just know/VBP/know preorder/NN/preorder traversal/NN/traversal and/CC/and inorder/NN/inorder traversal/NNP/traversal. i/PRP/i know/VBP/know that/IN/that it/PRP/it has/VBZ/has 3/CD/3 nodes/NNS/nodes /,/, the/DT/the right/NN/right sub/NN/sub tree/NN/tree has/VBZ/has 3/CD/3 nodes/NNP/nodes. so/RB/so the/DT/the problem/NN/problem recursively/RB/recursively reduces/VBZ/reduces to/TO/to this/DT/this problem/NN/problem of/IN/of given/VBN/given the/DT/the preorder/NN/preorder and/CC/and inorder/NN/inorder traversal/NN/traversal of/IN/of this/DT/this 3/CD/3 node/NN/node tree/NN/tree /,/, i/PRP/i need/VBP/need to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the trees/NNS/trees is/NNP/is. so/RB/so once/RB/once again/RB/again i/PRP/i know/VBP/know that/IN/that the/DT/the root/NN/root is/VBZ/is going/VBG/going to/TO/to be/VB/be d/NNP/d. i/PRP/i look/VBP/look for/IN/for d/NN/d in/IN/in the/DT/the inorder/NN/inorder traversal/NN/traversal /,/, it/PRP/it is/VBZ/is there/NNP/there. i/PRP/i know/VBP/know on/IN/on the/DT/the left/NN/left i/PRP/i have/VBP/have f/NN/f and/CC/and on/IN/on the/DT/the right/NN/right i/PRP/i have/VBP/have g/NNP/g. i/PRP/i know/VBP/know the/DT/the root/NN/root is/VBZ/is d/VBN/d and/CC/and i/PRP/i know/VBP/know that/IN/that the/DT/the left/NN/left sub/NN/sub tree/NN/tree would/MD/would have/VB/have f/NN/f and/CC/and the/DT/the right/NN/right would/MD/would have/VB/have g/NNP/g. i/PRP/i get/VBP/get something/NN/something like/IN/like the/DT/the one/CD/one which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the below/NN/below slide/NNP/slide. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 36/CD/36 /CD/) you/PRP/you can/MD/can translate/VB/translate this/DT/this in/IN/in to/TO/to a/DT/a piece/NN/piece of/IN/of code/NNP/code. it/PRP/it will/MD/will require/VB/require some/DT/some thought/NN/thought because/IN/because you/PRP/you have/VBP/have to/TO/to write/VB/write it/PRP/it in/IN/in a/DT/a recursive/JJ/recursive manner/NNP/manner. this/DT/this is/VBZ/is your/PRP$/your second/JJ/second assignment/NN/assignment which/WDT/which i/PRP/i have/VBP/have put/VBN/put it/PRP/it upon/IN/upon the/DT/the web/NN/web today/NNP/today. this/DT/this would/MD/would be/VB/be some/DT/some input/NN/input /,/, you/PRP/you will/MD/will take/VB/take from/IN/from the/DT/the user/NN/user /,/, the/DT/the pre/NN/pre order/NN/order and/CC/and the/DT/the inorder/NN/inorder traversal/NNP/traversal. and/CC/and you/PRP/you have/VBP/have to/TO/to compute/VB/compute not/RB/not the/DT/the tree/NN/tree but/CC/but you/PRP/you have/VBP/have to/TO/to compute/VB/compute the/DT/the post/NN/post order/NN/order traversal/NN/traversal which/WDT/which is/VBZ/is simple/JJ/simple if/IN/if you/PRP/you have/VBP/have computed/VBN/computed the/DT/the tree/NNP/tree. because/IN/because you/PRP/you can/MD/can do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal of/IN/of this/DT/this tree/NN/tree now/RB/now and/CC/and give/VB/give the/DT/the result/NNP/result. it/PRP/it might/MD/might be/VB/be possible/JJ/possible that/IN/that given/VBN/given any/DT/any arbitrary/JJ/arbitrary sequences/NNS/sequences /,/, it/PRP/it is/VBZ/is not/RB/not necessary/JJ/necessary there/EX/there is/VBZ/is a/DT/a binary/JJ/binary tree/NN/tree corresponding/VBG/corresponding to/TO/to that/NNP/that. you/PRP/you will/MD/will also/RB/also have/VB/have to/TO/to flag/VB/flag out/RP/out an/DT/an error/NN/error /,/, if/IN/if the/DT/the sequences/NNS/sequences that/WDT/that given/VBN/given to/TO/to you/PRP/you are/VBP/are such/JJ/such that/IN/that they/PRP/they could/MD/could not/RB/not possibly/RB/possibly be/VB/be the/DT/the pre/NN/pre and/CC/and inorder/NN/inorder traversal/NN/traversal of/IN/of any/DT/any binary/JJ/binary tree/NNP/tree. this/DT/this is/VBZ/is pre/NNP/pre- and/CC/and in/NNP/in- order/NNP/order. given/RB/given post/VBD/post and/CC/and in/IN/in also/RB/also you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to compute/VB/compute the/DT/the tree/NNP/tree. suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you the/DT/the postorder/NN/postorder /,/, inorder/NNP/inorder. can/MD/can you/PRP/you use/VB/use that/DT/that to/TO/to compute/VB/compute the/DT/the tree/NN/tree ?/./? recall/NN/recall what/WP/what did/VBD/did we/PRP/we do/VBP/do ?/./? we/PRP/we try/VBP/try to/TO/to first/JJ/first figure/NN/figure out/IN/out where/WRB/where the/DT/the root/NN/root was/NNP/was. in/IN/in the/DT/the preorder/NN/preorder the/DT/the very/JJ/very first/JJ/first element/NN/element is/VBZ/is the/DT/the root/NN/root /,/, in/IN/in a/DT/a postorder/NN/postorder the/DT/the last/JJ/last element/NN/element is/VBZ/is the/DT/the root/NNP/root. so/RB/so first/JJ/first /,/, once/RB/once you/PRP/you know/VBP/know the/DT/the root/NN/root then/RB/then you/PRP/you will/MD/will search/VB/search for/IN/for the/DT/the root/NN/root in/IN/in your/PRP$/your inorder/NN/inorder traversal/NN/traversal and/CC/and wherever/NN/wherever you/PRP/you find/VBP/find that/IN/that root/NN/root /,/, that/IN/that neatly/RB/neatly divides/VBZ/divides the/DT/the thing/NN/thing into/IN/into a/DT/a left/NN/left sub/NN/sub tree/NN/tree and/CC/and right/RB/right sub/VB/sub tree/NNP/tree. once/RB/once you/PRP/you know/VBP/know the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree /,/, you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. if/IN/if there/EX/there were/VBD/were 5/CD/5 nodes/NNS/nodes in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree then/RB/then the/DT/the first/JJ/first 5/CD/5 nodes/NNS/nodes of/IN/of your/PRP$/your post/NN/post order/NN/order traversal/NN/traversal would/MD/would be/VB/be the/DT/the post/NN/post order/NN/order traversal/NN/traversal of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. so/RB/so in/IN/in this/DT/this manner/NN/manner again/RB/again you/PRP/you can/MD/can recursively/RB/recursively work/NNP/work. you/PRP/you can/MD/can recursively/RB/recursively figure/VB/figure out/RP/out what/WP/what the/DT/the left/NN/left and/CC/and right/RB/right sub/VB/sub trees/NNS/trees are/VBP/are and/CC/and then/RB/then plug/NN/plug them/PRP/them up/IN/up to/TO/to the/DT/the tree/NNP/tree. given/NN/given a/DT/a post/NN/post and/CC/and in/IN/in order/NN/order traversal/NN/traversal also/RB/also you/PRP/you can/MD/can do/VB/do. what/WP/what is/VBZ/is the/DT/the third/JJ/third question/NN/question ?/./? given/VBN/given pre/NN/pre and/CC/and post/NN/post can/MD/can you/PRP/you do/VB/do it/PRP/it ?/./? no/NN/no. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 15/CD/15 /CD/) given/VBN/given the/DT/the pre/NN/pre and/CC/and post/NN/post order/NN/order traversal/NN/traversal of/IN/of a/DT/a binary/JJ/binary tree/NN/tree you/PRP/you can/MD/can not/RB/not uniquely/RB/uniquely determine/VB/determine the/DT/the tree/NNP/tree. and/CC/and the/DT/the reason/NN/reason for/IN/for that/DT/that is/VBZ/is there/RB/there can/MD/can be/VB/be 2/CD/2 trees/NNS/trees which/WDT/which have/VBP/have the/DT/the same/JJ/same pre/NN/pre and/CC/and post/NN/post order/NN/order traversal/NNP/traversal. preorder/NN/preorder /:/: a/DT/a b/NN/b c/NN/c postorder/NN/postorder /:/: c/NN/c b/NN/b a/DT/a suppose/NN/suppose i/PRP/i gave/VBD/gave you/PRP/you the/DT/the above/JJ/above preorder/NN/preorder traversal/NN/traversal and/CC/and postorder/NN/postorder traversal/NN/traversal that/WDT/that is/VBZ/is a/DT/a 3/CD/3 node/NN/node tree/NNP/tree. what/WP/what do/VBP/do you/PRP/you think/VB/think is/VBZ/is the/DT/the tree/NN/tree ?/./? the/DT/the tree/NN/tree given/VBN/given in/IN/in the/DT/the below/NN/below slide/NN/slide is/VBZ/is the/DT/the tree/NN/tree with/IN/with preorder/NN/preorder traversal/NN/traversal a/DT/a b/NN/b c/NNP/c. the/DT/the postorder/NN/postorder traversal/NN/traversal will/MD/will be/VB/be c/NN/c b/NN/b a/NNP/a. this/DT/this tree/NN/tree also/RB/also has/VBZ/has the/DT/the same/JJ/same pre/NN/pre and/CC/and post/NN/post order/NN/order traversal/NNP/traversal. the/DT/the a/DT/a b/NN/b c/NN/c is/VBZ/is the/DT/the preorder/NN/preorder traversal/NN/traversal /,/, the/DT/the postorder/NN/postorder traversal/NN/traversal is/VBZ/is c/NN/c b/NN/b a/NNP/a. which/WDT/which of/IN/of this/DT/this tree/NN/tree is/VBZ/is a/DT/a right/NN/right one/CD/one ?/./? both/DT/both of/IN/of them/NNP/them. there/EX/there is/VBZ/is no/DT/no unique/NN/unique tree/NN/tree /,/, we/PRP/we could/MD/could also/RB/also have/VB/have c/NN/c as/IN/as the/DT/the right/NN/right child/NNP/child. so/RB/so these/DT/these are/VBP/are only/RB/only 2/CD/2 but/CC/but they/PRP/they could/MD/could be/VB/be many/JJ/many trees/NNS/trees that/WDT/that you/PRP/you could/MD/could construct/NNP/construct. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 44/CD/44 /CD/) that/WDT/that is/VBZ/is the/DT/the problem/NNP/problem. given/NN/given a/DT/a pre/NN/pre and/CC/and post/NN/post order/NN/order traversal/NN/traversal you/PRP/you can/MD/can not/RB/not uniquely/RB/uniquely determine/VB/determine the/DT/the tree/NNP/tree. because/IN/because there/EX/there could/MD/could be/VB/be many/JJ/many different/JJ/different trees/NNS/trees with/IN/with the/DT/the same/JJ/same pre/NN/pre and/CC/and post/NN/post order/NN/order traversals/NNP/traversals. but/CC/but here/RB/here note/VBP/note that/IN/that some/DT/some nodes/NNS/nodes in/IN/in the/DT/the trees/NNS/trees had/VBD/had only/RB/only one/CD/one child/NNP/child. suppose/NN/suppose i/PRP/i gave/VBD/gave you/PRP/you this/DT/this information/NN/information that/IN/that every/DT/every internal/JJ/internal node/NN/node of/IN/of the/DT/the tree/NN/tree has/VBZ/has 2/CD/2 children/NNS/children /,/, not/RB/not complete/JJ/complete but/CC/but every/DT/every internal/JJ/internal node/NN/node of/IN/of the/DT/the tree/NN/tree has/VBZ/has 2/CD/2 children/NNP/children. what/WP/what is/VBZ/is that/IN/that called/VBN/called ?/./? the/DT/the below/NN/below given/VBN/given slide/NN/slide is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a tree/NN/tree in/IN/in which/WDT/which every/DT/every internal/JJ/internal node/NN/node has/VBZ/has 2/CD/2 children/NNP/children. this/DT/this is/VBZ/is not/RB/not a/DT/a full/JJ/full tree/NN/tree /,/, this/DT/this is/VBZ/is just/RB/just a/DT/a tree/NN/tree with/IN/with every/DT/every internal/JJ/internal node/NN/node having/VBG/having 2/CD/2 children/NNP/children. there/RB/there is/VBZ/is no/DT/no name/NN/name to/TO/to it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 32/CD/32 /CD/) suppose/NN/suppose i/PRP/i gave/VBD/gave you/PRP/you this/DT/this information/NNP/information. did/VBD/did you/PRP/you say/VB/say an/DT/an indian/JJ/indian tree/NN/tree ?/./? if/IN/if each/DT/each internal/JJ/internal node/NN/node of/IN/of the/DT/the binary/JJ/binary tree/NN/tree has/VBZ/has exactly/RB/exactly 2/CD/2 children/NNP/children. then/RB/then actually/RB/actually you/PRP/you can/MD/can use/VB/use the/DT/the pre/NN/pre order/NN/order and/CC/and post/NN/post order/NN/order to/TO/to determine/VB/determine the/DT/the tree/NN/tree uniquely/RB/uniquely again/NNP/again. let/VB/let see/NN/see just/RB/just as/IN/as an/DT/an exercise/NN/exercise /,/, why/WRB/why this/DT/this is/VBZ/is true/JJ/true ?/./? i/PRP/i gave/VBD/gave you/PRP/you the/DT/the pre/NN/pre and/CC/and post/NN/post order/NN/order traversal/NNP/traversal. what/WP/what is/VBZ/is the/DT/the first/JJ/first thing/NN/thing you/PRP/you can/MD/can say/VB/say ?/./? the/DT/the a/DT/a is/VBZ/is the/DT/the root/NNP/root. we/PRP/we can/MD/can quickly/RB/quickly draw/VB/draw the/DT/the root/NNP/root. what/WP/what can/MD/can you/PRP/you now/RB/now ?/./? the/DT/the b/NN/b has/VBZ/has to/TO/to be/VB/be the/DT/the left/NN/left child/NNP/child. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 51/CD/51 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 04/CD/04 /CD/) it/PRP/it has/VBZ/has 2/CD/2 children/NNP/children. so/RB/so we/PRP/we know/VBP/know that/IN/that there/EX/there is/VBZ/is something/NN/something on/IN/on the/DT/the left/NN/left or/CC/or actually/RB/actually i/PRP/i have/VBP/have done/VBN/done the/DT/the example/NN/example on/IN/on the/DT/the right/NNP/right. what/WP/what can/MD/can i/VB/i say/VB/say is/VBZ/is the/DT/the right/NN/right child/NN/child of/IN/of a/DT/a ?/./? the/DT/the a/DT/a has/VBZ/has right/VBN/right child/NN/child because/IN/because every/DT/every node/NN/node has/VBZ/has 2/CD/2 children/NNP/children. what/WP/what is/VBZ/is the/DT/the right/NN/right child/NN/child of/IN/of a/DT/a ?/./? it/PRP/it has/VBZ/has to/TO/to be/VB/be e/NNP/e. since/IN/since my/PRP$/my example/NN/example /,/, i/PRP/i have/VBP/have worked/VBN/worked it/PRP/it out/RP/out with/IN/with that/NNP/that. the/DT/the e/NN/e /,/, i/PRP/i know/VBP/know is/VBZ/is the/DT/the right/NN/right child/NN/child from/IN/from the/DT/the picture/NN/picture given/VBN/given in/IN/in the/DT/the above/NN/above slide/NNP/slide. i/PRP/i see/VBP/see e/JJ/e in/IN/in the/DT/the above/NN/above picture/NNP/picture. and/CC/and after/IN/after e/NN/e nothing/NN/nothing is/VBZ/is there/NNP/there. what/WP/what that/IN/that it/PRP/it say/VBP/say ?/./? that/IN/that says/VBZ/says e/NN/e is/VBZ/is a/DT/a leaf/NN/leaf because/IN/because in/IN/in a/DT/a preorder/NN/preorder traversal/NN/traversal i/PRP/i would/MD/would have/VB/have first/JJ/first visited/VBN/visited e/NN/e and/CC/and then/RB/then gone/NN/gone to/TO/to its/PRP$/its children/NNP/children. but/CC/but there/EX/there is/VBZ/is nothing/NN/nothing following/VBG/following it/PRP/it which/WDT/which means/VBZ/means e/NN/e has/VBZ/has no/DT/no descendants/NNP/descendants. basically/RB/basically it/PRP/it means/VBZ/means that/IN/that the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has b/NN/b c/NN/c d/NN/d f/NN/f g/NNP/g. so/RB/so e/VB/e is/VBZ/is the/DT/the right/NN/right child/NN/child and/CC/and the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has b/NN/b c/NN/c d/NN/d f/NN/f g/NN/g as/IN/as the/DT/the preorder/NN/preorder traversal/NN/traversal and/CC/and c/NN/c f/NN/f g/NN/g d/NN/d b/NN/b as/IN/as its/PRP$/its postorder/NN/postorder traversal/NNP/traversal. the/DT/the same/JJ/same thing/NN/thing /,/, since/IN/since i/PRP/i have/VBP/have managed/VBN/managed to/TO/to divide/VB/divide /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to continue/NNP/continue. so/RB/so i/PRP/i have/VBP/have b/NN/b c/NN/c d/NN/d f/NN/f g/NN/g as/IN/as the/DT/the preorder/NN/preorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left subtree/NN/subtree and/CC/and c/NN/c f/NN/f g/NN/g d/NN/d b/NN/b as/IN/as the/DT/the postorder/NN/postorder traversal/NN/traversal of/IN/of the/DT/the left/NN/left subtree/NNP/subtree. once/RB/once again/RB/again i/PRP/i know/VBP/know that/IN/that the/DT/the root/NN/root is/VBZ/is b/NN/b /,/, i/PRP/i have/VBP/have drawn/VBN/drawn the/DT/the root/NNP/root. what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about the/DT/the right/NN/right child/NN/child of/IN/of b/NN/b ?/./? i/PRP/i know/VBP/know the/DT/the right/NN/right child/NN/child is/VBZ/is d/NNP/d. i/PRP/i see/VBP/see where/WRB/where d/JJ/d is/VBZ/is in/IN/in the/DT/the case/NN/case of/IN/of preorder/NN/preorder traversal/NNP/traversal. so/RB/so d/VBD/d is/VBZ/is the/DT/the right/NN/right child/NN/child /,/, every/DT/every thing/NN/thing that/WDT/that follows/VBZ/follows d/VBP/d has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. everything/NN/everything that/WDT/that follows/VBZ/follows the/DT/the d/NN/d in/IN/in the/DT/the pre/NN/pre order/NN/order traversal/NN/traversal has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. why/WRB/why because/IN/because in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree when/WRB/when i/PRP/i did/VBD/did a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal i/PRP/i have/VBP/have first/JJ/first visited/VBN/visited the/DT/the d/NN/d and/CC/and only/RB/only then/RB/then visited/VBN/visited the/DT/the other/JJ/other elements/NNP/elements. so/IN/so d/NN/d f/NN/f g/NN/g forms/NNS/forms the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and c/NN/c forms/NNS/forms the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has only/RB/only one/CD/one element/NN/element /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do here/RB/here in/IN/in the/DT/the case/NN/case of/IN/of postorder/NN/postorder traversal/NNP/traversal. this/DT/this one/CD/one element/NN/element c/NN/c would/MD/would be/VB/be my/PRP$/my left/NN/left sub/NN/sub tree/NN/tree and/CC/and this/DT/this f/NN/f g/NN/g d/NN/d would/MD/would be/VB/be my/PRP$/my right/NN/right sub/NN/sub tree/NNP/tree. i/PRP/i have/VBP/have figured/VBN/figured out/RP/out the/DT/the left/NN/left sub/NN/sub tree/NN/tree which/WDT/which has/VBZ/has only/RB/only single/JJ/single element/NN/element /,/, i/PRP/i can/MD/can just/RB/just draw/VB/draw it/NNP/it. and/CC/and now/RB/now i/PRP/i know/VBP/know that/IN/that right/NN/right sub/NN/sub tree/NN/tree has/VBZ/has nodes/NNS/nodes d/VBN/d f/NN/f g/NN/g where/WRB/where preorder/NN/preorder traversal/NN/traversal is/VBZ/is d/VBN/d f/NN/f g/NN/g and/CC/and postorder/NN/postorder is/VBZ/is f/NN/f g/NN/g d/NNP/d. i/PRP/i know/VBP/know root/NN/root is/VBZ/is d/VBN/d /,/, actually/RB/actually i/PRP/i have/VBP/have already/RB/already drawn/VBN/drawn that/IN/that out/NNP/out. i/PRP/i know/VBP/know the/DT/the right/NN/right child/NN/child is/VBZ/is g/NNP/g. the/DT/the g/NN/g is/VBZ/is here/RB/here and/CC/and there/EX/there is/VBZ/is nothing/NN/nothing beyond/IN/beyond that/DT/that means/VBZ/means g/NN/g has/VBZ/has no/DT/no children/NNS/children further/NNP/further. i/PRP/i can/MD/can draw/VB/draw that/IN/that out/IN/out and/CC/and then/RB/then i/PRP/i know/VBP/know what/WP/what remains/NNP/remains. the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has only/RB/only one/CD/one node/NN/node /,/, it/PRP/it is/VBZ/is in/IN/in the/DT/the left/NNP/left. you/PRP/you can/MD/can do/VB/do the/DT/the same/JJ/same thing/NN/thing /,/, i/PRP/i am/VBP/am just/RB/just showing/VBG/showing it/PRP/it to/TO/to you/PRP/you at/IN/at high/JJ/high level/NNP/level. in/IN/in fact/NN/fact this/DT/this is/VBZ/is the/DT/the level/NN/level i/PRP/i will/MD/will be/VB/be following/VBG/following for/IN/for all/DT/all the/DT/the algorithms/NNS/algorithms we/PRP/we do/VBP/do in/IN/in this/DT/this class/NNP/class. you/PRP/you will/MD/will have/VB/have to/TO/to translate/VB/translate it/PRP/it in/IN/in to/TO/to code/NNP/code. what/WP/what you/PRP/you have/VBP/have to/TO/to do/VB/do is/VBZ/is recursion/NN/recursion or/CC/or whatever/RB/whatever it/PRP/it is/NNP/is. the/DT/the idea/NN/idea of/IN/of the/DT/the assignment/NN/assignment would/MD/would be/VB/be that/NNP/that. many/JJ/many of/IN/of these/DT/these algorithms/NNS/algorithms you/PRP/you should/MD/should learn/VB/learn or/CC/or you/PRP/you should/MD/should figure/VB/figure out/RP/out how/WRB/how to/TO/to best/JJS/best program/NN/program efficiently/NNP/efficiently. you/PRP/you can/MD/can write/VB/write down/RP/down the/DT/the code/NN/code also/RB/also for/IN/for this/DT/this given/VBN/given the/DT/the pre/NN/pre order/NN/order and/CC/and post/NN/post order/NN/order traversal/NN/traversal of/IN/of a/DT/a binary/JJ/binary tree/NN/tree every/DT/every internal/JJ/internal node/NN/node of/IN/of which/WDT/which has/VBZ/has exactly/RB/exactly 2/CD/2 children/NNS/children /,/, you/PRP/you can/MD/can even/RB/even use/VB/use that/IN/that to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the tree/NN/tree is/NNP/is. why/WRB/why did/VBD/did we/PRP/we work/VBP/work with/IN/with 2/CD/2 traversals/NNS/traversals ?/./? why/WRB/why can/MD/can not/RB/not we/VB/we just/RB/just take/VB/take pre/JJ/pre order/NN/order ?/./? so/RB/so given/VBN/given just/RB/just a/DT/a pre/NN/pre order/NN/order traversal/NN/traversal can/MD/can i/VB/i use/NN/use that/WDT/that to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the tree/NN/tree is/VBZ/is ?/./? this/DT/this has/VBZ/has the/DT/the pre/NN/pre order/NN/order traversal/NNP/traversal. the/DT/the a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, f/NN/f /,/, g/NN/g /,/, e/NN/e was/VBD/was the/DT/the pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of this/DT/this tree/NNP/tree. this/DT/this is/VBZ/is one/CD/one tree/NN/tree with/IN/with this/DT/this as/IN/as a/DT/a pre/NN/pre order/NN/order traversal/NNP/traversal. can/MD/can you/PRP/you think/VB/think of/IN/of another/DT/another tree/NN/tree which/WDT/which has/VBZ/has this/DT/this as/IN/as the/DT/the pre/NN/pre order/NN/order traversal/NN/traversal ?/./? i/PRP/i could/MD/could just/RB/just have/VB/have all/DT/all of/IN/of the/DT/the nodes/NNS/nodes in/IN/in one/CD/one line/NN/line to/TO/to say/VB/say /,/, a/DT/a b/NN/b c/NN/c and/CC/and d/VBD/d below/IN/below it/PRP/it /,/, f/NN/f after/IN/after it/PRP/it g/VBP/g after/IN/after at/IN/at it/PRP/it /,/, e/VBP/e at/IN/at the/DT/the very/RB/very end/NNP/end. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 04/CD/04 /CD/) i/PRP/i could/MD/could get/VB/get huge/JJ/huge number/NN/number of/IN/of different/JJ/different combinations/NNS/combinations all/DT/all of/IN/of which/WDT/which would/MD/would give/VB/give rise/VB/rise to/TO/to the/DT/the same/JJ/same preorder/NN/preorder traversal/NNP/traversal. so/RB/so with/IN/with just/RB/just the/DT/the knowledge/NN/knowledge of/IN/of one/CD/one traversal/NN/traversal you/PRP/you can/MD/can not/RB/not really/RB/really do/VBP/do much/NNP/much. similarly/RB/similarly for/IN/for post/NN/post order/NN/order similarly/RB/similarly for/IN/for in/IN/in order/NN/order /,/, even/RB/even if/IN/if i/PRP/i were/VBD/were to/TO/to give/VB/give you/PRP/you the/DT/the in/IN/in order/NN/order traversal/NN/traversal of/IN/of this/DT/this you/PRP/you can/MD/can construct/VB/construct many/JJ/many different/JJ/different trees/NNS/trees with/IN/with the/DT/the same/JJ/same in/IN/in order/NN/order traversal/NNP/traversal. so/RB/so just/RB/just using/VBG/using one/CD/one /,/, you/PRP/you can/MD/can not/RB/not really/RB/really do/VBP/do anything/NN/anything but/CC/but 2/CD/2 suffices/NNS/suffices for/IN/for most/JJS/most purposes/NNP/purposes. in/IN/in the/DT/the only/JJ/only case/NN/case when/WRB/when 2/CD/2 does/VBZ/does not/RB/not suffices/NNS/suffices when/WRB/when you/PRP/you are/VBP/are given/VBN/given the/DT/the pre/NN/pre order/NN/order and/CC/and the/DT/the post/NN/post order/NN/order traversal/NNP/traversal. if/IN/if some/DT/some internal/JJ/internal nodes/NNS/nodes of/IN/of your/PRP$/your binary/JJ/binary tree/NN/tree could/MD/could have/VB/have only/RB/only one/CD/one child/NNP/child. but/CC/but if/IN/if you/PRP/you were/VBD/were told/VBN/told that/IN/that every/DT/every internal/JJ/internal node/NN/node has/VBZ/has 2/CD/2 children/NNS/children then/RB/then even/RB/even that/IN/that is/VBZ/is sufficient/NNP/sufficient. can/MD/can you/PRP/you count/VB/count the/DT/the number/NN/number of/IN/of binary/JJ/binary trees/NNS/trees given/VBN/given only/RB/only lets/VBZ/lets say/VB/say a/DT/a preorder/NN/preorder traversal/NN/traversal ?/./? what/WP/what do/VBP/do you/PRP/you think/VB/think ?/./? at/IN/at least/JJS/least 2/CD/2 to/TO/to the/DT/the power/NN/power n-1/NNP/n-1. we/PRP/we said/VBD/said a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e and/CC/and f/NN/f is/VBZ/is my/PRP$/my pre/NN/pre order/NN/order traversal/NN/traversal of/IN/of a/DT/a binary/JJ/binary tree/NNP/tree. we/PRP/we said/VBD/said a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e and/CC/and f/NNP/f. this/DT/this is/VBZ/is one/CD/one and/CC/and all/DT/all you/PRP/you are/VBP/are saying/VBG/saying is/VBZ/is i/PRP/i can/MD/can make/VB/make each/DT/each one/CD/one of/IN/of them/PRP/them either/DT/either a/DT/a left/NN/left or/CC/or a/DT/a right/NN/right child/NN/child of/IN/of its/PRP$/its parent/NNP/parent. so/RB/so this/DT/this could/MD/could be/VB/be one/CD/one the/DT/the other/JJ/other option/NN/option could/MD/could be/VB/be at/IN/at the/DT/the side/NN/side a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, and/CC/and f/NN/f and/CC/and so/RB/so on/NNP/on. so/IN/so just/RB/just since/IN/since each/DT/each of/IN/of the/DT/the nodes/NNS/nodes can/MD/can be/VB/be either/RB/either the/DT/the left/NN/left or/CC/or right/RB/right child/JJ/child of/IN/of its/PRP$/its parent/NNP/parent. but/CC/but there/EX/there are/VBP/are many/JJ/many other/JJ/other possibilities/NNP/possibilities. this/DT/this is/VBZ/is absolute/JJ/absolute minimum/NNP/minimum. you/PRP/you can/MD/can have/VB/have many/JJ/many other/JJ/other possibilities/NNP/possibilities. there/EX/there could/MD/could be/VB/be lots/NNS/lots and/CC/and lots/NNS/lots of/IN/of things/NNS/things possible/NNP/possible. of/IN/of course/NN/course it/PRP/it will/MD/will be/VB/be finite/JJ/finite because/IN/because there/EX/there are/VBP/are only/RB/only finitely/RB/finitely many/JJ/many different/JJ/different trees/NNS/trees with/IN/with 6/CD/6 nodes/NNS/nodes on/IN/on them/NNP/them. it/PRP/it will/MD/will be/VB/be of/IN/of some/DT/some finite/JJ/finite number/NN/number /,/, it/PRP/it will/MD/will be/VB/be just/RB/just a/DT/a function/NN/function of/IN/of n/NN/n exactly/NNP/exactly. but/CC/but i/PRP/i do/VBP/do not/RB/not know/VB/know how/WRB/how to/TO/to compute/VB/compute the/DT/the close/NN/close form/NN/form expression/NN/expression for/IN/for such/JJ/such things/NNP/things. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 38/CD/38 /CD/) so/RB/so with/IN/with that/DT/that we/PRP/we will/MD/will stop/VB/stop today/NN/today ?/./? s/NNS/s class/NNP/class. what/WP/what we/PRP/we looked/VBD/looked at/IN/at was/VBD/was tree/JJ/tree traversals/NNP/traversals. how/WRB/how to/TO/to traverse/VB/traverse ?/./? so/RB/so 3/CD/3 different/JJ/different ways/NNS/ways of/IN/of traversing/VBG/traversing trees/NNS/trees /,/, in/IN/in order/NN/order /,/, pre/NN/pre order/NN/order and/CC/and post/NN/post order/NN/order traversal/NN/traversal for/IN/for binary/JJ/binary trees/NNS/trees and/CC/and for/IN/for general/JJ/general trees/NNS/trees there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of an/DT/an in/IN/in order/NN/order traversal/NN/traversal as/IN/as you/PRP/you perhaps/RB/perhaps understand/NNP/understand. why/WRB/why there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of an/DT/an in/IN/in order/NN/order traversal/NN/traversal for/IN/for general/JJ/general trees/NNS/trees ?/./? because/IN/because if/IN/if a/DT/a node/NN/node has/VBZ/has 3/CD/3 children/NNS/children then/RB/then when/WRB/when do/VBP/do you/PRP/you visit/VB/visit the/DT/the node/NN/node itself/PRP/itself ?/./? after/IN/after visiting/VBG/visiting the/DT/the first/JJ/first child/NN/child or/CC/or after/IN/after visiting/VBG/visiting the/DT/the second/JJ/second child/NN/child or/CC/or when/WRB/when ?/./? but/CC/but in/IN/in a/DT/a binary/JJ/binary tree/NN/tree there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of left/VBN/left and/CC/and a/DT/a right/NNP/right. first/JJ/first you/PRP/you visit/NN/visit the/DT/the left/NN/left then/RB/then you/PRP/you visit/NN/visit the/DT/the node/NN/node /,/, then/RB/then you/PRP/you visit/NN/visit the/DT/the right/NNP/right. so/RB/so there/RB/there is/VBZ/is also/RB/also a/DT/a notion/NN/notion of/IN/of an/DT/an in/IN/in order/NN/order traversal/NNP/traversal. and/CC/and we/PRP/we saw/VBD/saw some/DT/some applications/NNS/applications of/IN/of these/NNP/these. and/CC/and how/WRB/how given/VBN/given inorder/NN/inorder /,/, preorder/NN/preorder and/CC/and postorder/NN/postorder traversal/NN/traversal /,/, two/CD/two of/IN/of these/DT/these traversals/NNS/traversals you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what the/DT/the tree/NN/tree was/VBD/was which/WDT/which gave/VBD/gave rise/VBP/rise to/TO/to those/DT/those traversals/NNP/traversals. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 8/CD/8 ordered/VBN/ordered dictionaries/NNS/dictionaries in/IN/in today/NN/today ?/./? s/NNS/s class/NN/class we/PRP/we will/MD/will be/VB/be talking/VBG/talking about/IN/about ordered/VBN/ordered dictionaries/NNP/dictionaries. we/PRP/we will/MD/will also/RB/also be/VB/be looking/VBG/looking at/IN/at binary/JJ/binary search/NN/search tree/NN/tree which/WDT/which is/VBZ/is perhaps/RB/perhaps one/CD/one of/IN/of the/DT/the simplest/JJS/simplest ways/NNS/ways of/IN/of implementing/VBG/implementing an/DT/an ordered/JJ/ordered dictionary/NNP/dictionary. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 01/CD/01 /:/: 16/CD/16 /CD/) so/RB/so what/WP/what is/VBZ/is an/DT/an ordered/VBN/ordered dictionary/JJ/dictionary ?/./? it/PRP/it is/VBZ/is essentially/RB/essentially that/IN/that you/PRP/you have/VBP/have the/DT/the dictionary/JJ/dictionary functionality/NNP/functionality. recall/NN/recall dictionary/NN/dictionary was/VBD/was that/IN/that you/PRP/you have/VBP/have key/JJ/key element/NN/element pairs/NNS/pairs and/CC/and you/PRP/you use/VBP/use the/DT/the to/TO/to insert/VB/insert an/DT/an element/NN/element /,/, to/TO/to search/VB/search for/IN/for an/DT/an element/NN/element or/CC/or to/TO/to delete/VB/delete an/DT/an element/NNP/element. besides/VBZ/besides that/IN/that /,/, in/IN/in an/DT/an ordered/VBN/ordered dictionary/JJ/dictionary /,/, you/PRP/you have/VBP/have the/DT/the notion/NN/notion of/IN/of the/DT/the element/NN/element with/IN/with the/DT/the minimum/JJ/minimum key/JJ/key /,/, the/DT/the element/NN/element with/IN/with the/DT/the maximum/NN/maximum key/NN/key and/CC/and the/DT/the notion/NN/notion of/IN/of predecessor/NN/predecessor and/CC/and a/DT/a successor/NNP/successor. so/RB/so when/WRB/when i/PRP/i say/VBP/say minimum/JJ/minimum key/JJ/key what/WP/what then/RB/then it/PRP/it means/VBZ/means that/IN/that there/EX/there is/VBZ/is some/DT/some kind/NN/kind of/IN/of a/DT/a total/JJ/total order/NN/order on/IN/on the/DT/the keys/NNP/keys. this/DT/this is/VBZ/is different/JJ/different from/IN/from when/WRB/when we/PRP/we have/VBP/have talked/VBN/talked about/IN/about hashing/VBG/hashing and/CC/and dictionary/NNP/dictionary. if/IN/if we/PRP/we recall/VBP/recall we/PRP/we said/VBD/said that/IN/that the/DT/the only/JJ/only operation/NN/operation that/WDT/that will/MD/will ever/RB/ever need/VB/need to/TO/to do/VB/do on/IN/on the/DT/the keys/NNS/keys is/VBZ/is to/TO/to compare/VB/compare two/CD/two keys/NNS/keys for/IN/for equality/NNP/equality. given/VBN/given two/CD/two keys/NNS/keys /,/, we/PRP/we have/VBP/have to/TO/to decide/VB/decide whether/IN/whether they/PRP/they are/VBP/are the/DT/the same/JJ/same or/CC/or not/NNP/not. so/RB/so here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be excepting/VBG/excepting more/JJR/more out/IN/out of/IN/of our/PRP$/our keys/NNP/keys. here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that there/EX/there is/VBZ/is some/DT/some kind/NN/kind of/IN/of a/DT/a ordering/NN/ordering relation/NN/relation on/IN/on the/DT/the keys/NNS/keys so/RB/so that/IN/that given/VBN/given two/CD/two keys/NNS/keys /,/, i/PRP/i can/MD/can either/VB/either decide/VB/decide whether/IN/whether they/PRP/they are/VBP/are equal/JJ/equal and/CC/and if/IN/if they/PRP/they are/VBP/are not/RB/not equal/JJ/equal then/RB/then i/PRP/i can/MD/can say/VB/say one/CD/one is/VBZ/is less/JJR/less than/IN/than the/DT/the other/JJ/other one/CD/one is/VBZ/is larger/JJR/larger than/IN/than the/DT/the other/NNP/other. there/RB/there is/VBZ/is ordering/VBG/ordering relation/NN/relation on/IN/on the/DT/the keys/NNP/keys. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 01/CD/01 /:/: 28/CD/28 /CD/) conversation/NN/conversation between/IN/between a/DT/a student/NN/student and/CC/and professor/NN/professor /:/: what/WP/what are/VBP/are the/DT/the parameters/NNS/parameters ?/./? you/PRP/you ?/./? re/NN/re saying/VBG/saying to/TO/to the/DT/the function/NN/function predecessor/NN/predecessor and/CC/and successor/NNP/successor. i/PRP/i have/VBP/have just/RB/just shown/VBN/shown ?/./? s/NNS/s ?/./? as/IN/as the/DT/the ordered/VBN/ordered dictionary/JJ/dictionary as/IN/as one/CD/one of/IN/of the/DT/the parameters/NNS/parameters it/PRP/it need/VBP/need not/RB/not be/NNP/be. so/RB/so in/IN/in particular/JJ/particular you/PRP/you could/MD/could think/VB/think of/IN/of a/DT/a predecessor/NN/predecessor as/IN/as taking/VBG/taking only/RB/only one/CD/one parameter/NN/parameter which/WDT/which is/VBZ/is a/DT/a particular/JJ/particular key/NNP/key. so/RB/so predecessor/NN/predecessor of/IN/of k/NN/k would/MD/would give/VB/give me/PRP/me the/DT/the key/JJ/key which/WDT/which precedes/VBZ/precedes k/NN/k in/IN/in the/DT/the total/JJ/total order/NN/order in/IN/in the/DT/the dictionary/NNP/dictionary. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 02/CD/02 /:/: 50/CD/50 /CD/) there/EX/there are/VBP/are certain/JJ/certain keys/NNS/keys in/IN/in dictionary/JJ/dictionary s/NNP/s. give/JJ/give me/PRP/me the/DT/the one/CD/one which/WDT/which precedes/NNS/precedes the/DT/the key/JJ/key k/NN/k and/CC/and which/WDT/which lies/NNS/lies in/IN/in this/DT/this dictionary/NNP/dictionary. keys/VBZ/keys are/VBP/are the/DT/the particular/JJ/particular field/NN/field or/CC/or the/DT/the part/NN/part of/IN/of data/NNS/data on/IN/on which/WDT/which the/DT/the things/NNS/things are/VBP/are ordered/NNP/ordered. there/RB/there is/VBZ/is a/DT/a total/NN/total ordered/VBN/ordered on/IN/on the/DT/the keys/NNP/keys. similarly/RB/similarly the/DT/the successor/NN/successor function/NNP/function. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 03/CD/03 /:/: 34/CD/34 /CD/) so/RB/so what/WP/what is/VBZ/is one/CD/one way/NN/way you/PRP/you can/MD/can implement/VB/implement such/PDT/such an/DT/an ordered/VBN/ordered dictionary/JJ/dictionary ?/./? there/EX/there are/VBP/are two/CD/two trivial/JJ/trivial ways/NNS/ways of/IN/of doing/VBG/doing it/PRP/it where/WRB/where in/IN/in both/DT/both cases/NNS/cases /,/, we/PRP/we say/VBP/say using/VBG/using a/DT/a list/NN/list kind/NN/kind of/IN/of data/NNS/data structure/NNP/structure. so/RB/so an/DT/an unordered/VBN/unordered list/NN/list would/MD/would just/RB/just keep/VB/keep all/DT/all the/DT/the elements/NNS/elements in/IN/in here/NNP/here. so/RB/so all/DT/all i/PRP/i have/VBP/have shown/VBN/shown here/RB/here are/VBP/are the/DT/the keys/NNP/keys. since/IN/since it/PRP/it is/VBZ/is unordered/VBN/unordered /,/, inserting/NN/inserting takes/VBZ/takes only/RB/only a/DT/a constant/JJ/constant amount/NN/amount of/IN/of time/NNP/time. searching/NN/searching will/MD/will take/VB/take ordered/VBN/ordered ?/./? n/NN/n ?/./? time/NN/time in/IN/in the/DT/the worst/JJS/worst case/NN/case because/IN/because there/EX/there is/VBZ/is no/DT/no order/NNP/order. i/PRP/i might/MD/might have/VB/have to/TO/to go/VB/go through/RP/through the/DT/the entire/JJ/entire list/NN/list before/IN/before i/PRP/i found/VBD/found out/RP/out where/WRB/where the/DT/the element/NN/element is/VBZ/is and/CC/and how/WRB/how much/JJ/much time/NN/time will/MD/will deletion/VB/deletion take/VB/take ?/./? it/PRP/it takes/VBZ/takes order/NN/order ?/./? n/NN/n ?/./? because/IN/because first/JJ/first we/PRP/we have/VBP/have to/TO/to search/VB/search for/IN/for what/WP/what we/PRP/we are/VBP/are trying/VBG/trying to/TO/to delete/NNP/delete. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 03/CD/03 /:/: 45/CD/45 /CD/) how/WRB/how much/JJ/much time/NN/time would/MD/would the/DT/the successor/NN/successor take/NN/take here/RB/here ?/./? order/NN/order n/NNP/n. not/RB/not order/NN/order one/CD/one because/IN/because suppose/JJ/suppose i/PRP/i say/VBP/say what/WP/what is/VBZ/is the/DT/the successor/NN/successor of/IN/of 12/CD/12 in/IN/in this/DT/this dictionary/JJ/dictionary ?/./? successor/NN/successor of/IN/of 12/CD/12 is/VBZ/is not/RB/not 22/CD/22. it/PRP/it is/VBZ/is 14/CD/14 which/WDT/which is/VBZ/is the/DT/the key/JJ/key following/VBG/following 12/CD/12 in/IN/in the/DT/the order/NN/order relation/NNP/relation. the/DT/the order/NN/order relation/NN/relation i/PRP/i am/VBP/am assuming/VBG/assuming is/VBZ/is just/RB/just the/DT/the order/NN/order on/IN/on the/DT/the integers/NNP/integers. so/RB/so 12/CD/12 is/VBZ/is the/DT/the smallest/JJS/smallest key/JJ/key /,/, 14/CD/14 is/VBZ/is the/DT/the key/JJ/key larger/NN/larger than/IN/than that/NNP/that. 18/CD/18 /,/, 22/CD/22 /,/, 34/CD/34. so/RB/so 34/CD/34 is/VBZ/is the/DT/the largest/JJS/largest key/JJ/key in/IN/in it/NNP/it. given/VBN/given the/DT/the key/JJ/key 12/CD/12 /,/, i/PRP/i have/VBP/have to/TO/to run/VB/run through/IN/through this/DT/this entire/JJ/entire thing/NN/thing to/TO/to find/VB/find out/RP/out the/DT/the one/CD/one which/WDT/which was/VBD/was the/DT/the smallest/JJS/smallest key/JJ/key larger/NN/larger than/IN/than 12/CD/12. both/DT/both successor/NN/successor and/CC/and predecessor/NN/predecessor and/CC/and min/NN/min and/CC/and max/NN/max will/MD/will all/DT/all take/VB/take order/NN/order n/NN/n time/NNP/time. so/RB/so it/PRP/it ?/./? s/NNS/s fairly/RB/fairly an/DT/an efficient/JJ/efficient implementation/NNP/implementation. an/DT/an ordered/VBN/ordered list/NN/list on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, let/VB/let ?/./? s/NNS/s say/VBP/say we/PRP/we ordered/VBN/ordered the/DT/the thing/NN/thing according/VBG/according to/TO/to the/DT/the total/JJ/total order/NN/order on/IN/on the/DT/the keys/NNP/keys. so/RB/so now/RB/now minimum/JJ/minimum takes/NNS/takes only/RB/only constant/JJ/constant time/NNP/time. maximum/NN/maximum also/RB/also we/PRP/we can/MD/can organize/VB/organize so/RB/so that/IN/that it/PRP/it takes/VBZ/takes constant/JJ/constant time/NNP/time. let/NN/let ?/./? s/NNS/s say/VBP/say i/PRP/i have/VBP/have a/DT/a pointer/NN/pointer reference/NN/reference to/TO/to the/DT/the end/NN/end node/NN/node in/IN/in this/DT/this list/NNP/list. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 04/CD/04 /:/: 33/CD/33 /CD/) successor/NN/successor also/RB/also takes/VBZ/takes constant/JJ/constant time/NN/time because/IN/because given/VBN/given a/DT/a particular/JJ/particular node/NN/node /,/, i/PRP/i can/MD/can just/RB/just go/VB/go to/TO/to next/JJ/next one/CD/one that/WDT/that will/MD/will give/VB/give me/PRP/me the/DT/the successor/NNP/successor. let/NN/let ?/./? s/NNS/s say/VBP/say predecessor/NN/predecessor takes/VBZ/takes constant/NN/constant time/NNP/time. it/PRP/it depends/VBZ/depends upon/IN/upon how/WRB/how you/PRP/you give/VBP/give the/DT/the node/NNP/node. when/WRB/when i/PRP/i ask/VBP/ask for/IN/for successor/NN/successor of/IN/of a/DT/a node/NN/node if/IN/if you/PRP/you have/VBP/have to/TO/to search/VB/search for/IN/for the/DT/the node/NN/node then/RB/then of/IN/of course/NN/course it/PRP/it will/MD/will take/VB/take order/NN/order n/NN/n time/NN/time because/IN/because you/PRP/you might/MD/might have/VB/have to/TO/to go/VB/go through/RP/through this/DT/this entire/JJ/entire list/NN/list to/TO/to reach/VB/reach that/IN/that node/NNP/node. but/CC/but if/IN/if i/PRP/i tell/VBP/tell you/PRP/you where/WRB/where the/DT/the node/NN/node is/VBZ/is /,/, let/VB/let ?/./? s/NNS/s say/VBP/say i/PRP/i give/VBP/give you/PRP/you a/DT/a reference/NN/reference to/TO/to this/DT/this particular/JJ/particular node/NN/node in/IN/in this/DT/this list/NN/list /,/, then/RB/then you/PRP/you can/MD/can compute/VB/compute the/DT/the successor/NN/successor and/CC/and predecessor/NN/predecessor in/IN/in constant/NN/constant time/NNP/time. inserting/NN/inserting also/RB/also takes/VBZ/takes order/NN/order ?/./? n/NN/n ?/./? times/NNS/times because/IN/because you/PRP/you have/VBP/have to/TO/to find/VB/find out/RP/out where/WRB/where to/TO/to insert/NNP/insert. you/PRP/you have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the correct/NN/correct position/NN/position for/IN/for insertion/NNP/insertion. searching/VBG/searching takes/VBZ/takes order/NN/order ?/./? n/NN/n ?/./? time/NN/time because/IN/because again/RB/again we/PRP/we may/MD/may have/VB/have to/TO/to run/VB/run through/IN/through the/DT/the entire/JJ/entire thing/NNP/thing. if/IN/if we/PRP/we use/VBP/use an/DT/an array/NN/array /,/, searching/VBG/searching can/MD/can improve/VB/improve and/CC/and you/PRP/you have/VBP/have seen/VBN/seen an/DT/an example/NN/example of/IN/of how/WRB/how to/TO/to do/VB/do this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 05/CD/05 /:/: 43/CD/43 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time 06/CD/06 /:/: 03/CD/03 /CD/) we/PRP/we use/VBP/use binary/JJ/binary search/NN/search to/TO/to do/VB/do that/NNP/that. if/IN/if you/PRP/you put/VBD/put the/DT/the elements/NNS/elements they/PRP/they are/VBP/are ordered/NNP/ordered. i/PRP/i put/VBD/put them/PRP/them in/IN/in an/DT/an array/NNP/array. then/RB/then we/PRP/we can/MD/can do/VB/do a/DT/a binary/JJ/binary search/NN/search to/TO/to find/VB/find the/DT/the element/NN/element in/IN/in log/NN/log time/NNP/time. if/IN/if we/PRP/we do/VBP/do binary/JJ/binary search/NN/search then/RB/then now/RB/now insertion/NN/insertion and/CC/and deletion/NN/deletion still/RB/still take/VB/take order/NN/order n/NN/n time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 06/CD/06 /:/: 33/CD/33 /CD/) while/IN/while we/PRP/we can/MD/can find/VB/find out/RP/out what/WP/what is/VBZ/is the/DT/the place/NN/place to/TO/to insert/VB/insert an/DT/an element/NN/element /,/, you/PRP/you will/MD/will have/VB/have to/TO/to shift/VB/shift all/DT/all the/DT/the elements/NNS/elements to/TO/to the/DT/the right/NNP/right. so/RB/so it/PRP/it takes/VBZ/takes lot/NN/lot of/IN/of time/NN/time to/TO/to do/VB/do the/DT/the insertion/NNP/insertion. similarly/RB/similarly for/IN/for deletion/NN/deletion /,/, we/PRP/we know/VBP/know where/WRB/where the/DT/the element/NN/element is/VBZ/is which/WDT/which we/PRP/we are/VBP/are trying/VBG/trying to/TO/to delete/NNP/delete. then/RB/then we/PRP/we have/VBP/have to/TO/to shift/VB/shift everything/NN/everything to/TO/to the/DT/the left/NNP/left. just/RB/just to/TO/to recap/VB/recap what/WP/what binary/JJ/binary search/NN/search was/VBD/was /,/, so/RB/so you/PRP/you remember/VBP/remember binary/JJ/binary search/NNP/search. to/TO/to search/VB/search for/IN/for 22/CD/22 /,/, you/PRP/you go/VBP/go to/TO/to the/DT/the middle/NN/middle element/NNP/element. 22/CD/22 is/VBZ/is larger/JJR/larger you/PRP/you will/MD/will go/VB/go to/TO/to the/DT/the right/NNP/right. 25/CD/25 which/WDT/which is/VBZ/is smaller/JJR/smaller go/NN/go to/TO/to the/DT/the left/NN/left so/RB/so on/IN/on and/CC/and on/NNP/on. in/IN/in that/DT/that manner/NN/manner /,/, you/PRP/you will/MD/will eventually/RB/eventually end/VB/end up/RP/up with/IN/with the/DT/the array/NN/array location/NN/location which/WDT/which has/VBZ/has 22/CD/22 or/CC/or an/DT/an array/NN/array location/NN/location which/WDT/which does/VBZ/does not/RB/not have/VB/have 22/CD/22. in/IN/in that/DT/that case/NN/case able/JJ/able to/TO/to say/VB/say whether/IN/whether 22/CD/22 is/VBZ/is there/RB/there or/CC/or not/RB/not and/CC/and the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons you/PRP/you would/MD/would take/VB/take in/IN/in this/DT/this process/NN/process is/VBZ/is only/RB/only logarithmic/NNP/logarithmic. /:/( refer/NN/refer slide/NN/slide time/NN/time 07/CD/07 /:/: 15/CD/15 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time 07/CD/07 /:/: 43/CD/43 /CD/) every/DT/every time/NN/time you/PRP/you make/VBP/make a/DT/a comparison/NN/comparison the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array and/CC/and which/WDT/which you/PRP/you are/VBP/are making/VBG/making the/DT/the search/NN/search ?/./? halves/NNS/halves ?/./? and/CC/and number/NN/number of/IN/of times/NNS/times you/PRP/you can/MD/can half/VB/half n/NN/n to/TO/to get/VB/get down/IN/down to/TO/to one/CD/one has/VBZ/has only/RB/only log/JJ/log of/IN/of n/NN/n and/CC/and so/RB/so you/PRP/you will/MD/will take/VB/take order/NN/order log/NN/log n/NN/n time/NN/time to/TO/to do/VB/do the/DT/the searching/NNP/searching. recall/NN/recall insertion/NN/insertion and/CC/and deletion/NN/deletion i/PRP/i said/VBD/said that/IN/that will/MD/will take/VB/take order/NN/order n/NN/n time/NNP/time. these/DT/these are/VBP/are the/DT/the trivial/JJ/trivial ways/NNS/ways you/PRP/you adopt/VBP/adopt to/TO/to implement/VB/implement an/DT/an ordered/VBN/ordered dictionary/NNP/dictionary. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 07/CD/07 /:/: 49/CD/49 /CD/) but/CC/but we/PRP/we are/VBP/are not/RB/not here/RB/here to/TO/to talk/VB/talk about/IN/about trivialities/NNP/trivialities. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at something/NN/something more/JJR/more interesting/JJ/interesting and/CC/and that/IN/that ?/./? s/NNS/s called/VBN/called a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. what/WP/what is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NN/tree ?/./? a/DT/a binary/JJ/binary search/NN/search tree/NN/tree is/VBZ/is a/DT/a binary/JJ/binary tree/NN/tree which/WDT/which has/VBZ/has a/DT/a search/NN/search property/NN/property on/IN/on it/NNP/it. recall/NN/recall what/WP/what is/VBZ/is the/DT/the binary/JJ/binary tree/NNP/tree. binary/JJ/binary tree/NN/tree is/VBZ/is a/DT/a tree/NN/tree in/IN/in which/WDT/which every/DT/every node/NN/node has/VBZ/has at/IN/at most/JJS/most two/CD/two children/NNP/children. a/DT/a node/NN/node can/MD/can have/VB/have one/CD/one child/NN/child /,/, two/CD/two children/NNS/children or/CC/or no/DT/no children/NNP/children. no/DT/no children/NNS/children means/VBZ/means it/PRP/it is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node and/CC/and now/RB/now there/EX/there is/VBZ/is a/DT/a search/NN/search property/NN/property that/WDT/that we/PRP/we are/VBP/are talking/VBG/talking out/NNP/out. so/RB/so each/DT/each node/NN/node is/VBZ/is going/VBG/going to/TO/to contain/VB/contain a/DT/a key/JJ/key and/CC/and an/DT/an element/NNP/element. in/IN/in most/JJS/most discussions/NNS/discussions that/WDT/that follow/VBP/follow /,/, we/PRP/we will/MD/will not/RB/not be/VB/be talking/VBG/talking about/IN/about the/DT/the element/NN/element at/IN/at all/NNP/all. we/PRP/we are/VBP/are just/RB/just interested/JJ/interested in/IN/in the/DT/the keys/NNP/keys. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 08/CD/08 /:/: 32/CD/32 /CD/) what/WP/what is/VBZ/is written/VBN/written on/IN/on the/DT/the nodes/NNS/nodes are/VBP/are the/DT/the keys/NNP/keys. now/RB/now what/WP/what is/VBZ/is a/DT/a binary/JJ/binary search/NN/search property/NN/property ?/./? the/DT/the binary/JJ/binary search/NN/search property/NN/property says/VBZ/says the/DT/the following/NNP/following. all/DT/all the/DT/the keys/NNS/keys which/WDT/which are/VBP/are less/RBR/less than/IN/than five/CD/five will/MD/will be/VB/be in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. all/DT/all keys/NNS/keys which/WDT/which are/VBP/are larger/JJR/larger than/IN/than five/CD/five will/MD/will be/VB/be in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and this/DT/this property/NN/property holds/VBZ/holds at/IN/at every/DT/every node/NNP/node. not/RB/not just/RB/just at/IN/at the/DT/the root/NN/root node/NNP/node. /NNP/[ hindi/NN/hindi /:/] not/RB/not all/DT/all keys/NNS/keys which/WDT/which are/VBP/are larger/JJR/larger than/IN/than 3/CD/3. of/IN/of course/NN/course there/EX/there are/VBP/are keys/NNS/keys larger/JJR/larger than/IN/than 3/CD/3 which/WDT/which are/VBP/are here/RB/here but/CC/but basically/RB/basically if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the left/NN/left sub/NN/sub tree/NN/tree /,/, all/DT/all the/DT/the keys/NNS/keys in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree will/MD/will be/VB/be less/RBR/less than/IN/than this/DT/this node/NNP/node. all/DT/all the/DT/the keys/NNS/keys in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree will/MD/will be/VB/be larger/JJR/larger than/IN/than this/DT/this node/NN/node /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 47/CD/47 /CD/) /./. similarly/RB/similarly for/IN/for this/DT/this tree/NNP/tree. all/DT/all the/DT/the keys/NNS/keys in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree as/IN/as you/PRP/you can/MD/can see/VB/see are/VBP/are larger/JJR/larger than/IN/than this/DT/this key/NN/key value/NNP/value. if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this node/NN/node /,/, all/DT/all keys/NNS/keys in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree are/VBP/are less/RBR/less than/IN/than 7/CD/7. all/DT/all keys/NNS/keys in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree are/VBP/are larger/JJR/larger than/IN/than 7/CD/7. this/DT/this is/VBZ/is called/VBN/called search/NN/search property/NNP/property. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 09/CD/09 /:/: 05/CD/05 /CD/) a/DT/a binary/JJ/binary tree/NN/tree in/IN/in which/WDT/which the/DT/the nodes/VBZ/nodes have/VBP/have keys/NNS/keys which/WDT/which satisfy/NN/satisfy the/DT/the search/NN/search property/NNP/property. so/RB/so the/DT/the search/NN/search property/NN/property satisfied/VBD/satisfied is/VBZ/is called/VBN/called a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. so/RB/so binary/JJ/binary tree/NN/tree plus/CC/plus search/NN/search property/NN/property equals/NNS/equals binary/JJ/binary search/NN/search tree/NNP/tree. i/PRP/i have/VBP/have these/DT/these set/NN/set of/IN/of keys/NNS/keys /:/: 2/CD/2 /,/, 3/CD/3 /,/, 5,5,7,8/CD/5,5,7,8. this/DT/this is/VBZ/is the/DT/the binary/JJ/binary search/NN/search tree/NN/tree with/IN/with these/DT/these keys/NNS/keys in/IN/in it/NNP/it. this/DT/this is/VBZ/is also/RB/also another/DT/another binary/JJ/binary search/NN/search tree/NN/tree with/IN/with the/DT/the same/JJ/same set/NN/set of/IN/of keys/NNP/keys. you/PRP/you can/MD/can have/VB/have many/JJ/many different/JJ/different kinds/NNS/kinds of/IN/of trees/NNS/trees with/IN/with the/DT/the same/JJ/same set/NN/set of/IN/of keys/NNP/keys. both/DT/both of/IN/of them/PRP/them are/VBP/are binary/JJ/binary search/NN/search trees/NNS/trees because/IN/because they/PRP/they both/DT/both are/VBP/are binary/JJ/binary and/CC/and satisfy/NN/satisfy the/DT/the search/NN/search property/NNP/property. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 10/CD/10 /:/: 26/CD/26 /CD/) conversation/NN/conversation between/IN/between professor/NN/professor and/CC/and student/NN/student /:/: it/PRP/it is/VBZ/is implementation/NNP/implementation. keys/NNS/keys stored/VBD/stored at/IN/at the/DT/the node/NN/node in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of v/NN/v are/VBP/are less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k/NNP/k. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 00/CD/00 /CD/) so/RB/so there/RB/there are/VBP/are couple/RB/couple of/IN/of features/NNS/features here/NNP/here. here/RB/here i/PRP/i am/VBP/am assuming/VBG/assuming that/IN/that you/PRP/you might/MD/might have/VB/have two/CD/two keys/NNS/keys which/WDT/which are/VBP/are the/DT/the same/NNP/same. so/RB/so quite/RB/quite often/RB/often this/DT/this doesn/NN/doesn ?/./? t/NN/t happen/NNP/happen. so/RB/so quite/RB/quite often/RB/often you/PRP/you would/MD/would be/VB/be using/VBG/using dictionaries/NNS/dictionaries only/RB/only in/IN/in settings/NNS/settings were/VBD/were the/DT/the keys/NNS/keys are/VBP/are unique/NNP/unique. no/DT/no two/CD/two keys/NNS/keys are/VBP/are the/DT/the same/NNP/same. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 11/CD/11 /:/: 22/CD/22 /CD/) suppose/NN/suppose you/PRP/you had/VBD/had the/DT/the setting/NN/setting where/WRB/where two/CD/two keys/NNS/keys could/MD/could be/VB/be the/DT/the same/JJ/same /,/, suppose/JJ/suppose your/PRP$/your key/JJ/key was/VBD/was the/DT/the name/NN/name of/IN/of a/DT/a student/NN/student /,/, you/PRP/you can/MD/can define/VB/define total/JJ/total order/NN/order of/IN/of names/NNS/names let/VBP/let ?/./? s/NNS/s say/VBP/say lexico/NN/lexico graphic/JJ/graphic order/NN/order or/CC/or alphabetic/JJ/alphabetic order/NN/order and/CC/and then/RB/then two/CD/two names/NNS/names could/MD/could be/VB/be the/DT/the same/NNP/same. so/RB/so you/PRP/you could/MD/could have/VB/have settings/NNS/settings in/IN/in which/WDT/which the/DT/the two/CD/two keys/NNS/keys are/VBP/are the/DT/the same/NNP/same. then/RB/then we/PRP/we have/VBP/have to/TO/to decide/VB/decide whether/IN/whether if/IN/if a/DT/a key/JJ/key is/VBZ/is equal/NNP/equal. whether/IN/whether it/PRP/it should/MD/should go/VB/go to/TO/to the/DT/the left/NN/left sub/NN/sub tree/NN/tree or/CC/or it/PRP/it should/MD/should go/VB/go to/TO/to the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and we/PRP/we can/MD/can decide/VB/decide one/CD/one way/NN/way or/CC/or other/NNP/other. let/NN/let ?/./? s/NNS/s say/VBP/say we/PRP/we go/VBP/go to/TO/to the/DT/the left/NNP/left. we/PRP/we could/MD/could easily/RB/easily have/VB/have said/VBN/said it/PRP/it goes/VBZ/goes to/TO/to the/DT/the right/NNP/right. there/RB/there is/VBZ/is no/DT/no problem/NN/problem with/IN/with that/NNP/that. here/RB/here actually/RB/actually i/PRP/i am/VBP/am permitting/VBG/permitting it/PRP/it to/TO/to go/VB/go both/DT/both ways/NNP/ways. either/CC/either go/VB/go to/TO/to the/DT/the left/NN/left or/CC/or it/PRP/it could/MD/could go/VB/go to/TO/to the/DT/the right/NNP/right. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 11/CD/11 /:/: 54/CD/54 /CD/) so/RB/so for/IN/for the/DT/the rest/NN/rest of/IN/of the/DT/the discussion/NN/discussion let/VBD/let me/PRP/me just/RB/just assume/VBP/assume the/DT/the keys/NNS/keys are/VBP/are unique/NNP/unique. otherwise/RB/otherwise it/PRP/it unnecessarily/RB/unnecessarily complicates/VBZ/complicates matters/NNP/matters. so/RB/so we/PRP/we will/MD/will just/RB/just assume/VB/assume keys/NNS/keys are/VBP/are unique/JJ/unique /,/, do/VBP/do the/DT/the entire/JJ/entire discussion/NN/discussion see/NN/see if/IN/if there/EX/there is/VBZ/is a/DT/a need/NN/need of/IN/of duplicate/NN/duplicate key/NNP/key. this/DT/this is/VBZ/is what/WP/what should/MD/should we/PRP/we do/VBP/do then/NNP/then. if/IN/if there/EX/there are/VBP/are duplicate/JJ/duplicate keys/NNS/keys how/WRB/how do/VBP/do you/PRP/you handle/VB/handle that/DT/that now/RB/now ?/./? suppose/NN/suppose you/PRP/you want/VBP/want to/TO/to search/NN/search in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /,/, given/VBN/given a/DT/a particular/JJ/particular key/NNP/key. so/RB/so after/IN/after all/DT/all it/PRP/it ?/./? s/NNS/s a/DT/a dictionary/NNP/dictionary. we/PRP/we are/VBP/are implementing/VBG/implementing dictionary/NNP/dictionary. so/RB/so given/VBN/given a/DT/a particular/JJ/particular key/JJ/key i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out where/WRB/where the/DT/the element/NN/element is/NNP/is. so/RB/so let/VB/let me/PRP/me first/RB/first show/VBP/show you/PRP/you an/DT/an example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 12/CD/12 /:/: 50/CD/50 /CD/) suppose/NN/suppose this/DT/this is/VBZ/is my/PRP$/my tree/NN/tree and/CC/and i/PRP/i want/VBP/want to/TO/to search/NN/search for/IN/for 11/CD/11. i/PRP/i come/VBP/come to/TO/to the/DT/the root/NNP/root. i/PRP/i compare/VBP/compare 11/CD/11 with/IN/with 5/CD/5. 11/CD/11 is/VBZ/is larger/JJR/larger than/IN/than 5/CD/5. so/RB/so search/NN/search property/NN/property says/VBZ/says that/IN/that 11/CD/11 has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. that/IN/that was/VBD/was the/DT/the search/NN/search property/NNP/property. keys/NNS/keys which/WDT/which are/VBP/are larger/JJR/larger than/IN/than here/RB/here will/MD/will be/VB/be in/IN/in the/DT/the right/NNP/right. keys/VBZ/keys which/WDT/which are/VBP/are smaller/JJR/smaller will/MD/will be/VB/be in/IN/in the/DT/the left/NNP/left. so/RB/so we/PRP/we go/VBP/go to/TO/to the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. /NNP/[ hindi/NN/hindi /:/] 11/CD/11 is/VBZ/is larger/JJR/larger than/IN/than 10/CD/10. so/RB/so once/RB/once again/RB/again if/IN/if it/PRP/it is/VBZ/is there/RB/there at/IN/at all/DT/all in/IN/in the/DT/the tree/NN/tree /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. hence/NN/hence we/PRP/we go/VBP/go the/DT/the right/NN/right sub/NN/sub tree/NN/tree and/CC/and we/PRP/we compare/VBP/compare 11/CD/11 with/IN/with this/DT/this and/CC/and we/PRP/we find/VBP/find 11/CD/11. so/RB/so we/PRP/we are/VBP/are done/NNP/done. we/PRP/we found/VBD/found 11/CD/11. /CD/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 00/CD/00 /CD/) that/WDT/that ?/./? s/VBZ/s what/WP/what was/VBD/was being/VBG/being said/VBN/said here/NNP/here. to/TO/to find/VB/find an/DT/an element/NN/element with/IN/with a/DT/a key/JJ/key k/NN/k in/IN/in a/DT/a tree/NN/tree t/NN/t /,/, you/PRP/you will/MD/will compare/VB/compare key/JJ/key k/NN/k with/IN/with the/DT/the key/JJ/key in/IN/in the/DT/the root/NNP/root. if/IN/if k/NN/k is/VBZ/is less/JJR/less than/IN/than the/DT/the key/JJ/key in/IN/in the/DT/the root/NN/root then/RB/then you/PRP/you will/MD/will search/VB/search for/IN/for the/DT/the key/JJ/key in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. otherwise/NN/otherwise you/PRP/you will/MD/will search/VB/search for/IN/for k/NN/k in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 54/CD/54 /CD/) suppose/NN/suppose we/PRP/we have/VBP/have same/JJ/same example/NN/example but/CC/but now/RB/now searching/VBG/searching for/IN/for 6/CD/6. we/PRP/we come/VBP/come here/RB/here 6/CD/6 is/VBZ/is larger/JJR/larger so/RB/so we/PRP/we go/VBP/go right/NNP/right. then/RB/then we/PRP/we compare/VBP/compare 6/CD/6 with/IN/with 10/CD/10. 6/CD/6 is/VBZ/is smaller/NNP/smaller. so/RB/so we/PRP/we go/VBP/go left/NNP/left. then/RB/then we/PRP/we compare/VBP/compare 6/CD/6 with/IN/with 7/CD/7. 6/CD/6 is/VBZ/is smaller/NNP/smaller. so/RB/so we/PRP/we try/VBP/try to/TO/to go/VB/go left/NNP/left. but/CC/but the/DT/the left/NN/left child/NN/child is/VBZ/is null/NNP/null. so/RB/so it/PRP/it ?/./? s/NNS/s not/RB/not there/NNP/there. because/IN/because if/IN/if it/PRP/it were/VBD/were there/RB/there /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 14/CD/14 /:/: 22/CD/22 /CD/) it/PRP/it has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree of/IN/of this/DT/this guy/NNP/guy. because/IN/because 6/CD/6 is/VBZ/is larger/JJR/larger than/IN/than 5/CD/5. it/PRP/it has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of this/DT/this guy/NN/guy because/IN/because it/PRP/it ?/./? s/NNS/s less/JJR/less than/IN/than 10/CD/10. it/PRP/it has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of 7/CD/7 since/IN/since it/PRP/it is/VBZ/is less/JJR/less than/IN/than 7/CD/7. so/RB/so if/IN/if 6/CD/6 were/VBD/were there/RB/there /,/, it/PRP/it had/VBD/had to/TO/to be/VB/be here/RB/here and/CC/and since/IN/since it/PRP/it is/VBZ/is not/RB/not here/RB/here /,/, it/PRP/it ?/./? s/NNS/s not/RB/not there/NNP/there. /:/( refer/NN/refer slide/NN/slide time/NN/time 14/CD/14 /:/: 56/CD/56 /CD/) so/RB/so we/PRP/we can/MD/can write/VB/write the/DT/the search/NN/search procedure/NN/procedure for/IN/for binary/JJ/binary search/NN/search tree/NN/tree either/DT/either as/IN/as a/DT/a recursive/JJ/recursive procedure/NN/procedure or/CC/or as/IN/as an/DT/an iterative/JJ/iterative procedure/NNP/procedure. so/RB/so the/DT/the recursive/JJ/recursive procedure/NN/procedure is/VBZ/is perhaps/RB/perhaps the/DT/the simplest/JJS/simplest to/TO/to understand/NNP/understand. so/RB/so you/PRP/you are/VBP/are searching/VBG/searching for/IN/for a/DT/a key/JJ/key k/NN/k in/IN/in a/DT/a tree/NN/tree t/NNP/t. so/RB/so you/PRP/you look/VBP/look at/IN/at the/DT/the root/NN/root of/IN/of t/NNP/t. let/NN/let ?/./? s/NNS/s say/VBP/say that/IN/that its/PRP$/its x/NNP/x. if/IN/if x/NN/x equals/NNS/equals nil/VBP/nil which/WDT/which means/NNS/means there/RB/there is/VBZ/is no/DT/no root/NN/root or/CC/or empty/JJ/empty tree/NNP/tree. then/RB/then you/PRP/you are/VBP/are essentially/RB/essentially saying/VBG/saying that/IN/that nothing/NN/nothing is/VBZ/is there/NNP/there. so/RB/so just/RB/just forget/VB/forget this/DT/this for/IN/for now/NNP/now. if/IN/if the/DT/the key/JJ/key in/IN/in this/DT/this root/NN/root node/NN/node x/NN/x is/VBZ/is equal/JJ/equal to/TO/to the/DT/the one/CD/one you/PRP/you are/VBP/are searching/VBG/searching for/IN/for /,/, then/RB/then you/PRP/you just/RB/just return/VBP/return the/DT/the root/NN/root node/NNP/node. if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than the/DT/the key/JJ/key in/IN/in the/DT/the root/NN/root node/NN/node /,/, if/IN/if k/NN/k is/VBZ/is less/JJR/less than/IN/than the/DT/the key/JJ/key in/IN/in the/DT/the root/NN/root node/NN/node /,/, then/RB/then you/PRP/you have/VB/have to/TO/to recursively/RB/recursively search/NN/search in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. so/RB/so you/PRP/you are/VBP/are searching/VBG/searching in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of x/NNP/x. and/CC/and what/WP/what you/PRP/you are/VBP/are searching/VBG/searching for/IN/for ?/./? you/PRP/you are/VBP/are still/RB/still searching/VBG/searching for/IN/for k/NNP/k. /:/( refer/NN/refer slide/NN/slide time/NN/time 16/CD/16 /:/: 20/CD/20 /CD/) so/RB/so what/WP/what is/VBZ/is the/DT/the left/VBN/left of/IN/of x/NN/x doing/VBG/doing ?/./? this/DT/this is/VBZ/is all/DT/all pseudo/NN/pseudo code/NNP/code. let/NN/let me/PRP/me come/VBP/come to/TO/to what/WP/what your/PRP$/your question/NN/question is/NNP/is. x/NN/x is/VBZ/is a/DT/a reference/NN/reference to/TO/to a/DT/a particular/JJ/particular node/NNP/node. so/RB/so x/NN/x to/TO/to begin/VB/begin with/IN/with refers/NNS/refers to/TO/to the/DT/the root/NN/root of/IN/of the/DT/the tree/NN/tree and/CC/and then/RB/then left/VBD/left of/IN/of x/NN/x is/VBZ/is the/DT/the reference/NN/reference to/TO/to the/DT/the root/NN/root of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. so/RB/so it/PRP/it ?/./? s/NNS/s referring/VBG/referring to/TO/to that/DT/that and/CC/and we/PRP/we are/VBP/are searching/VBG/searching for/IN/for k/NN/k in/IN/in there/NNP/there. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we have/VBP/have to/TO/to do/VB/do and/CC/and if/IN/if key/JJ/key is/VBZ/is larger/JJR/larger than/IN/than the/DT/the key/JJ/key in/IN/in the/DT/the root/NN/root /,/, then/RB/then we/PRP/we have/VBP/have to/TO/to search/VB/search for/IN/for k/NN/k in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. this/DT/this is/VBZ/is clear/JJ/clear with/IN/with everyone/NNP/everyone. let/NN/let ?/./? s/NNS/s go/VBP/go to/TO/to the/DT/the iterative/JJ/iterative version/NNP/version. in/IN/in the/DT/the iterative/JJ/iterative version/NN/version /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to make/VB/make recursive/JJ/recursive calls/NNS/calls to/TO/to the/DT/the search/NN/search procedure/NNP/procedure. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is as/IN/as we/PRP/we are/VBP/are doing/VBG/doing in/IN/in the/DT/the search/NN/search /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going keep/VB/keep matching/VBG/matching down/IN/down the/DT/the same/JJ/same tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 18/CD/18 /:/: 14/CD/14 /CD/) so/RB/so we/PRP/we start/VBP/start with/IN/with x/NN/x referring/VBG/referring to/TO/to the/DT/the root/NN/root of/IN/of the/DT/the tree/NNP/tree. well/RB/well if/IN/if x/NN/x is/VBZ/is nil/NN/nil which/WDT/which means/VBZ/means that/DT/that it/PRP/it ?/./? s/NNS/s an/DT/an empty/NN/empty tree/NN/tree and/CC/and k/NN/k is/VBZ/is not/RB/not the/DT/the key/JJ/key in/IN/in the/DT/the root/NNP/root. then/RB/then we/PRP/we will/MD/will do/VB/do something/NNP/something. what/WP/what will/MD/will we/VB/we do/VB/do if/IN/if k/NN/k is/VBZ/is less/JJR/less than/IN/than the/DT/the key/JJ/key ?/./? then/RB/then we/PRP/we have/VBP/have to/TO/to go/VB/go left/NNP/left. so/RB/so x/NN/x now/RB/now becomes/VBZ/becomes the/DT/the left/NN/left child/NNP/child. x/NN/x now/RB/now gets/VBZ/gets the/DT/the value/NN/value of/IN/of the/DT/the left/NN/left child/NN/child of/IN/of this/DT/this current/JJ/current node/NNP/node. so/RB/so we/PRP/we started/VBD/started off/RP/off with/IN/with x/NN/x /,/, referring/VBG/referring to/TO/to this/DT/this guy/NN/guy and/CC/and then/RB/then we/PRP/we said/VBD/said if/IN/if k/NN/k /,/, so/RB/so suppose/RB/suppose there/EX/there is/VBZ/is key/JJ/key k1/NNP/k1 here/RB/here we/PRP/we are/VBP/are searching/VBG/searching for/IN/for the/DT/the key/JJ/key k/NNP/k. if/IN/if k/NN/k is/VBZ/is less/JJR/less than/IN/than k1/NNP/k1 then/RB/then we/PRP/we go/VBP/go left/VBN/left /,/, if/IN/if k/NN/k is/VBZ/is more/RBR/more than/IN/than k1/NNP/k1 we/PRP/we go/VBP/go right/RB/right and/CC/and since/IN/since we/PRP/we go/VBP/go left/VBN/left here/RB/here we/PRP/we are/VBP/are now/RB/now continuing/VBG/continuing the/DT/the search/NN/search here/NNP/here. so/RB/so x/NN/x is/VBZ/is gets/NNS/gets the/DT/the new/JJ/new value/NN/value which/WDT/which is/VBZ/is either/DT/either x/NN/x dot/NN/dot left/VBD/left child/NN/child either/DT/either you/PRP/you want/VBP/want to/TO/to call/VB/call this/DT/this way/NN/way or/CC/or actually/RB/actually in/IN/in the/DT/the code/NN/code just/RB/just showed/VBD/showed you/PRP/you just/RB/just now/RB/now /,/, i/PRP/i have/VBP/have written/VBN/written it/PRP/it as/IN/as x/NN/x gets/NNS/gets left/VBN/left x/NNP/x. pseudo/NN/pseudo code/NN/code i/PRP/i can/MD/can use/VB/use any/DT/any one/CD/one of/IN/of these/DT/these so/RB/so this/DT/this is/VBZ/is what/WP/what it/PRP/it gets/VBZ/gets and/CC/and we/PRP/we continue/VBP/continue this/DT/this search/NNP/search. we/PRP/we are/VBP/are basically/RB/basically may/MD/may be/VB/be the/DT/the next/JJ/next step/NN/step we/PRP/we go/VBP/go right/RB/right and/CC/and so/RB/so on/IN/on and/CC/and on/IN/on till/NN/till we/PRP/we reach/VBP/reach here/RB/here /,/, this/DT/this is/VBZ/is where/WRB/where our/PRP$/our node/NN/node x/NNP/x. so/RB/so x/NN/x will/MD/will keep/VB/keep getting/VBG/getting modified/VBN/modified /,/, first/JJ/first it/PRP/it will/MD/will pointing/VB/pointing to/TO/to this/DT/this node/NN/node then/RB/then its/PRP$/its pointing/NN/pointing to/TO/to this/DT/this node/NN/node /,/, pointing/VBG/pointing to/TO/to this/DT/this node/NN/node and/CC/and eventually/RB/eventually pointing/VBG/pointing to/TO/to this/DT/this node/NNP/node. it/PRP/it ?/./? s/NNS/s keep/VB/keep getting/VBG/getting modified/VBN/modified in/IN/in this/DT/this manner/NNP/manner. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 21/CD/21 /:/: 02/CD/02 /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does search/NN/search take/VB/take ?/./? so/RB/so let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the iterative/JJ/iterative version/NN/version of/IN/of the/DT/the search/NNP/search. what/WP/what we/PRP/we did/VBD/did was/VBD/was that/IN/that with/IN/with each/DT/each time/NN/time we/PRP/we went/VBD/went through/IN/through this/DT/this while/NN/while loop/NN/loop which/WDT/which is/VBZ/is here/RB/here /,/, we/PRP/we came/VBD/came down/RP/down one/CD/one level/NN/level in/IN/in the/DT/the tree/NNP/tree. we/PRP/we went/VBD/went from/IN/from a/DT/a node/NN/node to/TO/to one/CD/one of/IN/of its/PRP$/its child/NN/child nodes/NNS/nodes either/CC/either the/DT/the left/NN/left child/NN/child of/IN/of that/DT/that node/NN/node or/CC/or the/DT/the child/NN/child of/IN/of that/DT/that node/NN/node /,/, /:/[ hindi/NN/hindi /:/] we/PRP/we can/MD/can came/VB/came down/RB/down one/CD/one level/NNP/level. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 21/CD/21 /:/: 15/CD/15 /CD/) we/PRP/we started/VBD/started at/IN/at level/NN/level zero/NN/zero which/WDT/which is/VBZ/is the/DT/the root/NN/root then/RB/then we/PRP/we came/VBD/came after/IN/after one/CD/one run/VBN/run of/IN/of while/IN/while loop/NN/loop /,/, we/PRP/we came/VBD/came to/TO/to one/CD/one level/NN/level after/IN/after that/DT/that we/PRP/we came/VBD/came to/TO/to level/NN/level 2/CD/2 /,/, level/NN/level 3/LS/3 and/CC/and so/RB/so on/NNP/on. how/WRB/how many/JJ/many times/NNS/times we/PRP/we will/MD/will execute/VB/execute this/DT/this while/NN/while loop/NN/loop /,/, the/DT/the maximum/NN/maximum number/NN/number of/IN/of levels/NNS/levels in/IN/in the/DT/the tree/NN/tree and/CC/and what/WP/what is/VBZ/is a/DT/a maximum/NN/maximum number/NN/number of/IN/of levels/NNS/levels in/IN/in a/DT/a tree/NN/tree /,/, it/PRP/it ?/./? s/NNS/s the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. so/RB/so if/IN/if the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is h/JJ/h then/RB/then the/DT/the running/NN/running time/NN/time of/IN/of procedure/NN/procedure is/VBZ/is no/DT/no more/RBR/more than/IN/than h/NNP/h. so/RB/so order/JJR/order h/NN/h is/VBZ/is the/DT/the running/VBG/running time/NN/time of/IN/of procedure/NNP/procedure. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 21/CD/21 /:/: 50/CD/50 /CD/) now/RB/now h/JJ/h recall/NN/recall can/MD/can be/VB/be very/RB/very large/NNP/large. i/PRP/i might/MD/might have/VB/have a/DT/a tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes whose/WP$/whose height/NN/height is/VBZ/is order/NN/order n/NN/n and/CC/and we/PRP/we will/MD/will see/VB/see at/IN/at what/WP/what kind/NN/kind of/IN/of situations/NNS/situations this/DT/this happens/NNS/happens but/CC/but note/VB/note that/IN/that the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree could/MD/could be/VB/be very/RB/very large/NNP/large. the/DT/the search/NN/search time/NN/time is/VBZ/is only/RB/only order/JJR/order h/NN/h the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, order/NN/order the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree but/CC/but the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree in/IN/in particular/JJ/particular can/NN/can be/VB/be has/VBZ/has large/JJ/large as/IN/as the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NNP/tree. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at other/JJ/other procedure/NN/procedure that/IN/that of/IN/of finding/NN/finding the/DT/the minimum/JJ/minimum element/NN/element in/IN/in the/DT/the tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 22/CD/22 /:/: 45/CD/45 /CD/) where/WRB/where do/VBP/do you/PRP/you think/VB/think the/DT/the minimum/JJ/minimum element/NN/element in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree ?/./? why/WRB/why left/VBN/left most/JJS/most tree/JJ/tree ?/./? left/VBN/left most/JJS/most node/JJ/node or/CC/or left/VBN/left most/RBS/most leaf/JJ/leaf ?/./? left/VBN/left most/JJS/most leaf/NNP/leaf. let/NN/let ?/./? s/NNS/s see/VBP/see why/WRB/why that/IN/that ?/./? s/NNS/s wrong/NNP/wrong. suppose/NN/suppose i/PRP/i have/VBP/have a/DT/a tree/NN/tree which/WDT/which looks/NNS/looks like/IN/like the/DT/the following/NNP/following. i/PRP/i need/VBP/need to/TO/to put/VB/put up/RP/up in/IN/in some/DT/some keys/NNS/keys so/RB/so that/IN/that this/DT/this looks/NNS/looks like/IN/like a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. so/RB/so let/VB/let ?/./? s/NNS/s put/VBD/put in/IN/in 7/CD/7 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 12/CD/12 /,/, 13/CD/13 /,/, 11/CD/11 /,/, 10/CD/10. this/DT/this is/VBZ/is the/DT/the binary/JJ/binary search/NN/search tree/NN/tree ?/./? now/RB/now which/WDT/which is/VBZ/is the/DT/the smallest/JJS/smallest node/NN/node here/RB/here ?/./? the/DT/the leftmost/NN/leftmost leaf/NN/leaf /,/, i/PRP/i do/VBP/do not/RB/not know/VB/know the/DT/the left/NN/left most/JJS/most leafs/NNS/leafs but/CC/but this/DT/this must/MD/must be/VB/be the/DT/the left/NN/left most/JJS/most leafs/NNS/leafs but/CC/but this/DT/this is/VBZ/is not/RB/not the/DT/the smallest/JJS/smallest one/NNP/one. smallest/JJS/smallest node/NN/node is/VBZ/is 5/CD/5 /,/, it/PRP/it ?/./? s/NNS/s really/RB/really the/DT/the left/NN/left most/JJS/most node/NN/node expect/NN/expect left/VBD/left most/JJS/most node/JJ/node also/RB/also doesn/JJ/doesn ?/./? t/NN/t too/RB/too much/RB/much sense/NNP/sense. last/JJ/last leaf/NN/leaf /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a leaf/NN/leaf at/IN/at all/NNP/all. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 24/CD/24 /:/: 29/CD/29 /CD/) let/NN/let ?/./? s/NNS/s not/RB/not try/JJ/try to/TO/to say/VB/say which/WDT/which node/NN/node ?/./? last/JJ/last internal/JJ/internal node/NNP/node. this/DT/this is/VBZ/is an/DT/an internal/JJ/internal node/NN/node /,/, you/PRP/you want/VBP/want me/PRP/me to/TO/to take/VB/take more/JJR/more internal/JJ/internal node/NN/node without/IN/without left/NN/left children/NNP/children. no/DT/no /,/, i/PRP/i can/MD/can create/VB/create more/RBR/more internal/JJ/internal node/NN/node without/IN/without left/NN/left children/NNP/children. so/RB/so this/DT/this is/VBZ/is also/RB/also an/DT/an internal/JJ/internal node/NN/node without/IN/without any/DT/any left/NN/left children/NNS/children so/RB/so don/IN/don ?/./? t/NN/t try/NN/try to/TO/to just/RB/just give/VB/give the/DT/the half/NN/half a/DT/a sentence/NN/sentence definition/NN/definition of/IN/of which/WDT/which the/DT/the smallest/JJS/smallest is/VBZ/is /,/, but/CC/but let/VB/let ?/./? s/NNS/s give/VBP/give a/DT/a procedural/JJ/procedural definition/NNP/definition. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 25/CD/25 /:/: 02/CD/02 /CD/) so/RB/so which/WDT/which is/VBZ/is how/WRB/how do/VBP/do you/PRP/you find/VB/find the/DT/the smallest/JJS/smallest ?/./? start/NN/start at/IN/at the/DT/the top/JJ/top /,/, keep/VB/keep going/VBG/going left/VBN/left till/NN/till left/VBN/left becomes/NNS/becomes null/VBP/null that/IN/that is/VBZ/is clear/JJ/clear to/TO/to everyone/NNP/everyone. so/RB/so start/VB/start from/IN/from the/DT/the top/JJ/top /,/, keep/VB/keep going/VBG/going left/VBN/left till/NN/till the/DT/the left/NN/left is/VBZ/is null/JJ/null and/CC/and that/IN/that ?/./? s/NNS/s the/DT/the smallest/JJS/smallest node/NNP/node. how/WRB/how about/IN/about maximum/NN/maximum ?/./? keep/VB/keep going/VBG/going right/RB/right till/IN/till the/DT/the right/NN/right becomes/VBZ/becomes null/NNP/null. what/WP/what ?/./? s/NNS/s the/DT/the proof/NN/proof ?/./? why/WRB/why this/DT/this is/VBZ/is minimum/JJ/minimum ?/./? so/RB/so the/DT/the proof/NN/proof is/VBZ/is very/RB/very simple/JJ/simple /,/, the/DT/the minimum/JJ/minimum has/VBZ/has to/TO/to be/VB/be to/TO/to the/DT/the left/NN/left of/IN/of its/PRP$/its root/NN/root /,/, so/RB/so it/PRP/it has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the sub/NN/sub tree/NNP/tree. then/RB/then you/PRP/you have/VB/have smaller/JJR/smaller /,/, so/RB/so the/DT/the smallest/JJS/smallest has/VBZ/has to/TO/to be/VB/be left/VBN/left and/CC/and there/EX/there is/VBZ/is nothing/NN/nothing to/TO/to the/DT/the left/NN/left so/RB/so this/DT/this has/VBZ/has to/TO/to be/VB/be smallest/JJS/smallest /,/, everything/NN/everything to/TO/to the/DT/the right/NN/right has/VBZ/has to/TO/to be/VB/be larger/JJR/larger than/IN/than this/NNP/this. so/RB/so in/IN/in one/CD/one line/NN/line that/WDT/that ?/./? s/VBZ/s the/DT/the proof/NN/proof for/IN/for this/DT/this fact/NNP/fact. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 26/CD/26 /:/: 06/CD/06 /CD/) so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the entire/JJ/entire code/NN/code essentially/RB/essentially /,/, you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the minimum/JJ/minimum in/IN/in a/DT/a tree/NN/tree x/NNP/x. so/RB/so while/IN/while the/DT/the left/NN/left of/IN/of x/NN/x is/VBZ/is not/RB/not null/JJ/null /,/, just/RB/just do/VBP/do x/NN/x is/VBZ/is left/VBN/left of/IN/of x/NN/x /,/, keep/VB/keep going/VBG/going left/VBN/left of/IN/of x/NNP/x. when/WRB/when you/PRP/you stop/VBP/stop ?/./? when/WRB/when left/VBN/left of/IN/of x/NN/x is/VBZ/is null/JJ/null at/IN/at that/DT/that point/NN/point you/PRP/you will/MD/will just/RB/just return/VB/return x/NN/x or/CC/or return/NN/return the/DT/the key/NN/key x/NN/x or/CC/or return/NN/return the/DT/the element/NN/element or/CC/or whatever/RB/whatever you/PRP/you want/VBP/want return/NNP/return. so/RB/so how/WRB/how much/JJ/much time/NN/time do/VBP/do you/PRP/you take/VB/take again/RB/again in/IN/in this/DT/this ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 26/CD/26 /:/: 10/CD/10 /CD/) so/RB/so why/WRB/why because/IN/because of/IN/of same/JJ/same argument/NN/argument /,/, with/IN/with every/DT/every run/NN/run of/IN/of this/DT/this while/NN/while loop/NN/loop we/PRP/we are/VBP/are going/VBG/going down/RB/down one/CD/one step/NNP/step. so/RB/so we/PRP/we can/MD/can go/VB/go down/RB/down at/IN/at most/JJS/most the/DT/the number/NN/number of/IN/of the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree and/CC/and so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the maximum/NN/maximum time/NN/time taken/NNP/taken. the/DT/the same/JJ/same procedure/NN/procedure can/MD/can be/VB/be used/VBN/used in/IN/in small/JJ/small modification/NN/modification to/TO/to compute/VB/compute the/DT/the maximum/NNP/maximum. we/PRP/we just/RB/just have/VBP/have to/TO/to replace/VB/replace the/DT/the left/NN/left by/IN/by right/NN/right and/CC/and then/RB/then we/PRP/we will/MD/will complete/VB/complete the/DT/the maximum/NNP/maximum. let/NN/let ?/./? s/NNS/s see/VBP/see how/WRB/how to/TO/to compute/VB/compute the/DT/the successor/NN/successor element/NN/element of/IN/of a/DT/a tree/NN/tree ?/./? successor/NN/successor /,/, understand/VBP/understand what/WP/what successor/NN/successor means/VBZ/means ?/./? successor/NN/successor means/VBZ/means given/VBN/given a/DT/a particular/JJ/particular key/JJ/key after/IN/after find/NN/find out/IN/out the/DT/the next/JJ/next one/NNP/one. so/RB/so given/VBN/given x/NN/x /,/, find/VBP/find the/DT/the node/NN/node with/IN/with the/DT/the smallest/JJS/smallest key/JJ/key greater/NN/greater than/IN/than key/JJ/key of/IN/of x/NN/x /:/[ hindi/NN/hindi /:/] /./. let/NN/let ?/./? s/NNS/s see/VBP/see so/RB/so there/RB/there are/VBP/are 2/CD/2 cases/NNS/cases /:/[ hindi/NN/hindi /:/] all/DT/all of/IN/of you/PRP/you saying/VBG/saying key/JJ/key sub/NN/sub tree/NNP/tree. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so there/RB/there are/VBP/are two/CD/two cases/NNS/cases really/RB/really so/RB/so case/VB/case one/CD/one is/VBZ/is in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree of/IN/of x/NN/x is/VBZ/is non-empty/JJ/non-empty /,/, there/EX/there is/VBZ/is something/NN/something in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. so/RB/so the/DT/the picture/NN/picture is/VBZ/is /:/[ hindi/NN/hindi /:/] this/DT/this is/VBZ/is the/DT/the node/NN/node /:/[ hindi/NN/hindi /:/] successor/NN/successor /:/[ hindi/NN/hindi /:/] right/NN/right sub/NN/sub tree/NN/tree is/VBZ/is non-empty/JJ/non-empty /,/, there/EX/there is/VBZ/is a/DT/a right/NN/right sub/NN/sub tree/NNP/tree. it/PRP/it exist/VBP/exist say/VBP/say /:/[ hindi/NN/hindi /:/] so/RB/so then/RB/then we/PRP/we know/VBP/know that/IN/that the/DT/the key/JJ/key which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than this/DT/this /,/, all/DT/all the/DT/the keys/NNS/keys in/IN/in here/RB/here are/VBP/are larger/JJR/larger than/IN/than this/NNP/this. we/PRP/we know/VBP/know that/IN/that but/CC/but why/WRB/why should/MD/should the/DT/the successor/NN/successor be/VB/be lying/VBG/lying here/RB/here ?/./? why/WRB/why can/MD/can ?/./? t/VB/t the/DT/the successor/NN/successor be/VB/be some/DT/some where/WRB/where else/NN/else ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 27/CD/27 /:/: 58/CD/58 /CD/) it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than this/NNP/this. so/RB/so i/PRP/i know/VBP/know that/IN/that the/DT/the keys/NNS/keys here/RB/here are/VBP/are larger/JJR/larger than/IN/than 5/CD/5 but/CC/but there/EX/there are/VBP/are other/JJ/other keys/NNS/keys which/WDT/which are/VBP/are larger/JJR/larger than/IN/than 5/CD/5 /,/, the/DT/the parent/NN/parent is/VBZ/is one/CD/one key/JJ/key which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than 5/CD/5. so/RB/so lots/NNS/lots of/IN/of confusion/NNP/confusion. so/RB/so we/PRP/we need/VBP/need to/TO/to look/VB/look at/IN/at it/PRP/it more/JJR/more carefully/NNP/carefully. so/RB/so what/WP/what i/PRP/i am/VBP/am way/NN/way trying/VBG/trying to/TO/to say/VB/say /,/, let/VB/let me/PRP/me draw/VB/draw this/DT/this picture/NN/picture that/IN/that was/VBD/was there/RB/there on/IN/on the/DT/the fresh/JJ/fresh sheet/NN/sheet of/IN/of paper/NNP/paper. so/RB/so i/PRP/i have/VBP/have 5/CD/5 /,/, i/PRP/i will/MD/will put/VB/put down/RP/down 5/CD/5 here/RB/here in/IN/in the/DT/the center/NN/center and/CC/and we/PRP/we have/VBP/have 10/CD/10 here/RB/here /,/, we/PRP/we have/VBP/have 7/CD/7 here/RB/here and/CC/and we/PRP/we have/VBP/have 8/CD/8 here/RB/here /,/, we/PRP/we have/VBP/have 1/CD/1 /,/, 3/CD/3. now/RB/now i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the successor/NN/successor of/IN/of this/DT/this 5/CD/5 /CD/( refer/NN/refer slide/NN/slide time/NN/time 30/CD/30 /:/: 17/CD/17 /CD/) /./. i/PRP/i am/VBP/am trying/VBG/trying to/TO/to find/VB/find out/RP/out the/DT/the successor/NN/successor of/IN/of this/DT/this node/NNP/node. this/DT/this has/VBZ/has the/DT/the sub/NN/sub tree/NN/tree /,/, now/RB/now all/DT/all of/IN/of you/PRP/you are/VBP/are tempted/VBN/tempted to/TO/to say/VB/say that/IN/that successor/NN/successor of/IN/of this/DT/this guy/NN/guy has/VBZ/has to/TO/to lie/VB/lie in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree /,/, you/PRP/you want/VBP/want to/TO/to say/VB/say that/IN/that the/DT/the successor/NN/successor lies/NNS/lies here/RB/here /,/, why/WRB/why ?/./? this/DT/this is/VBZ/is not/RB/not the/DT/the entire/JJ/entire tree/NN/tree /,/, please/NN/please remember/NNP/remember. it/PRP/it could/MD/could have/VB/have a/DT/a parent/NN/parent /,/, the/DT/the parent/NN/parent is/VBZ/is going/VBG/going to/TO/to be/VB/be larger/JJR/larger than/IN/than this/DT/this 5/CD/5. when/WRB/when it/PRP/it is/VBZ/is larger/JJR/larger than/IN/than 5/CD/5 ?/./? when/WRB/when it/PRP/it is/VBZ/is in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. so/RB/so there/RB/there are/VBP/are two/CD/two possibilities/NNS/possibilities /,/, the/DT/the parent/NN/parent is/VBZ/is larger/JJR/larger than/IN/than 5/CD/5 which/WDT/which means/VBZ/means 5/CD/5 is/VBZ/is in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of the/DT/the parent/NN/parent but/CC/but than/IN/than this/DT/this guy/NN/guy will/MD/will be/VB/be larger/JJR/larger than/IN/than all/DT/all of/IN/of this/DT/this guys/NNS/guys because/IN/because all/DT/all of/IN/of this/DT/this guys/NNS/guys then/RB/then are/VBP/are in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of the/DT/the parent/NNP/parent. the/DT/the a/DT/a successor/NN/successor /:/[ hindi/NN/hindi /:/] this/DT/this parent/NN/parent then/RB/then can/MD/can not/RB/not be/VB/be the/DT/the successor/NNP/successor. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 31/CD/31 /:/: 31/CD/31 /CD/) why/WRB/why ?/./? that/DT/that is/VBZ/is the/DT/the procedure/NN/procedure which/WDT/which you/PRP/you have/VBP/have learnt/VBN/learnt but/CC/but why/WRB/why is/VBZ/is it/PRP/it that/IN/that the/DT/the successor/NN/successor only/RB/only has/VBZ/has to/TO/to be/VB/be in/IN/in this/DT/this right/NN/right sub/NN/sub tree/NN/tree but/CC/but nowhere/RB/nowhere else/RB/else if/IN/if the/DT/the right/NN/right sub/NN/sub tree/NN/tree is/VBZ/is not/RB/not null/NNP/null. conversation/NN/conversation between/IN/between professor/NN/professor and/CC/and student/NN/student /:/: refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 58/CD/58 /CD/) /./. but/CC/but the/DT/the next/JJ/next element/NN/element which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than 5/CD/5 could/MD/could be/VB/be let/VBN/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is my/PRP$/my entire/NN/entire tree/NN/tree /,/, it/PRP/it could/MD/could be/VB/be some/DT/some where/WRB/where here/RB/here /VBP/[ hindi/NN/hindi /:/] why/WRB/why not/RB/not ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 32/CD/32 /:/: 17/CD/17 /CD/) the/DT/the easiest/JJS/easiest way/NN/way to/TO/to think/VB/think of/IN/of this/DT/this is/VBZ/is as/IN/as follows/NNP/follows. suppose/NN/suppose we/PRP/we were/VBD/were searching/VBG/searching for/IN/for some/DT/some elements/NNS/elements slightly/RB/slightly larger/JJR/larger than/IN/than 5/CD/5 /,/, we/PRP/we were/VBD/were searching/VBG/searching for/IN/for the/DT/the successor/NN/successor of/IN/of 5/CD/5. the/DT/the claim/NN/claim is/VBZ/is that/IN/that suppose/DT/suppose we/PRP/we were/VBD/were searching/VBG/searching for/IN/for 5/CD/5 /,/, the/DT/the claim/NN/claim is/VBZ/is that/IN/that we/PRP/we must/MD/must end/VB/end up/RP/up at/IN/at this/DT/this node/NN/node that/IN/that ?/./? s/NNS/s a/DT/a point/NN/point /,/, whatever/RB/whatever decision/NN/decision we/PRP/we are/VBP/are making/VBG/making /,/, we/PRP/we would/MD/would end/VB/end up/RP/up at/IN/at this/DT/this node/NNP/node. now/RB/now if/IN/if the/DT/the key/JJ/key we/PRP/we were/VBD/were searching/VBG/searching for/IN/for is/VBZ/is slightly/RB/slightly larger/JJR/larger than/IN/than 5/CD/5 then/RB/then that/IN/that means/NNS/means we/PRP/we are/VBP/are searching/VBG/searching for/IN/for the/DT/the successor/NN/successor of/IN/of 5/CD/5. then/RB/then that/IN/that means/NNS/means we/PRP/we would/MD/would second/VB/second end/NN/end up/RP/up with/IN/with this/DT/this node/NN/node and/CC/and proceed/VBD/proceed because/IN/because it/PRP/it is/VBZ/is larger/JJR/larger than/IN/than 5/CD/5 so/RB/so which/WDT/which means/VBZ/means that/DT/that any/DT/any successor/NN/successor of/IN/of 5/CD/5 really/RB/really has/VBZ/has to/TO/to lie/VB/lie in/IN/in this/DT/this part/NN/part of/IN/of the/DT/the tree/NNP/tree. so/RB/so in/IN/in this/DT/this part/NN/part of/IN/of the/DT/the tree/NN/tree the/DT/the successor/NN/successor is/VBZ/is essentially/RB/essentially be/VB/be minimum/JJ/minimum node/NN/node because/IN/because all/DT/all the/DT/the keys/NNS/keys here/RB/here are/VBP/are larger/JJR/larger than/IN/than 5/CD/5. so/RB/so the/DT/the minimum/JJ/minimum key/JJ/key here/RB/here is/VBZ/is the/DT/the one/CD/one we/PRP/we are/VBP/are looking/VBG/looking for/IN/for /,/, we/PRP/we have/VBP/have already/RB/already seen/VBN/seen a/DT/a procedure/NN/procedure for/IN/for completing/NN/completing the/DT/the minimum/JJ/minimum which/WDT/which is/VBZ/is that/IN/that keep/NN/keep going/VBG/going left/NNP/left. we/PRP/we will/MD/will go/VB/go left/VBN/left /,/, we/PRP/we will/MD/will go/VB/go left/VBN/left and/CC/and we/PRP/we can/MD/can ?/./? t/VB/t go/NN/go left/VBN/left any/DT/any further/JJ/further so/RB/so this/DT/this becomes/VBZ/becomes the/DT/the successor/NN/successor of/IN/of 5/CD/5. /CD/( refer/NN/refer slide/NN/slide time/NN/time 34/CD/34 /:/: 22/CD/22 /CD/) it/PRP/it remains/VBZ/remains me/PRP/me the/DT/the remote/NN/remote that/IN/that i/PRP/i have/VBP/have at/IN/at home/NNP/home. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we have/VBP/have to/TO/to do/VB/do /,/, if/IN/if the/DT/the right/NN/right sub/NN/sub tree/NN/tree is/VBZ/is non/NN/non empty/NN/empty then/RB/then we/PRP/we go/VBP/go right/RB/right one/CD/one step/NN/step and/CC/and keep/VB/keep going/VBG/going left/NNP/left. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 34/CD/34 /:/: 24/CD/24 /CD/) the/DT/the other/JJ/other case/NN/case is/VBZ/is in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. suppose/NN/suppose i/PRP/i was/VBD/was trying/VBG/trying to/TO/to look/VB/look for/IN/for the/DT/the successor/NN/successor of/IN/of 3/CD/3 /,/, if/IN/if i/PRP/i am/VBP/am trying/VBG/trying to/TO/to look/VB/look for/IN/for the/DT/the successor/NN/successor of/IN/of 3/CD/3 the/DT/the right/NN/right sub/NN/sub tree/NN/tree is/VBZ/is empty/JJ/empty so/RB/so where/WRB/where is/VBZ/is the/DT/the successor/NN/successor of/IN/of 3/CD/3 now/RB/now ?/./? look/NN/look at/IN/at the/DT/the parent/NNP/parent. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 34/CD/34 /:/: 57/CD/57 /CD/) the/DT/the procedure/NN/procedure is/VBZ/is the/DT/the following/VBG/following and/CC/and we/PRP/we will/MD/will see/VB/see why/WRB/why it/PRP/it is/VBZ/is a/DT/a right/NN/right procedure/NNP/procedure. what/WP/what you/PRP/you are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is start/VB/start going/VBG/going from/IN/from this/DT/this node/NN/node to/TO/to its/PRP$/its parent/NN/parent and/CC/and then/RB/then to/TO/to its/PRP$/its grand/NN/grand parent/NN/parent and/CC/and so/RB/so on/IN/on till/NN/till you/PRP/you reach/VBP/reach the/DT/the node/NN/node such/JJ/such that/IN/that this/DT/this key/JJ/key x/NN/x that/WDT/that the/DT/the successor/NN/successor you/PRP/you are/VBP/are looking/VBG/looking for/IN/for is/VBZ/is in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of that/DT/that node/NNP/node. so/RB/so you/PRP/you went/VBD/went up/RP/up to/TO/to here/RB/here but/CC/but note/VB/note that/IN/that this/DT/this is/VBZ/is in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree of/IN/of this/DT/this node/NNP/node. then/RB/then you/PRP/you went/VBD/went to/TO/to its/PRP$/its parent/NN/parent and/CC/and here/RB/here you/PRP/you found/VBD/found that/IN/that 3/CD/3 is/VBZ/is in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of 5/CD/5 so/RB/so we/PRP/we will/MD/will stop/VB/stop here/RB/here and/CC/and this/DT/this will/MD/will comes/VBZ/comes the/DT/the successor/NNP/successor. you/PRP/you understand/VBP/understand the/DT/the procedure/NN/procedure but/CC/but why/WRB/why is/VBZ/is that/IN/that procedure/NN/procedure correct/NN/correct ?/./? so/RB/so recall/RB/recall the/DT/the procedure/NN/procedure is/VBZ/is /,/, i/PRP/i am/VBP/am searching/VBG/searching for/IN/for the/DT/the successor/NN/successor of/IN/of this/DT/this node/NNP/node. the/DT/the right/NN/right sub/NN/sub tree/NN/tree is/VBZ/is null/JJ/null /,/, there/EX/there is/VBZ/is nothing/NN/nothing to/TO/to the/DT/the right/NN/right then/RB/then i/PRP/i go/VBP/go to/TO/to its/PRP$/its parent/NN/parent and/CC/and i/PRP/i go/VBP/go to/TO/to its/PRP$/its parent/NN/parent and/CC/and i/PRP/i keep/VBP/keep going/VBG/going up/RP/up to/TO/to the/DT/the parent/NN/parent till/IN/till i/PRP/i reach/VBP/reach an/DT/an ancestor/NN/ancestor such/JJ/such that/IN/that this/DT/this node/NN/node whose/WP$/whose successor/NN/successor we/PRP/we are/VBP/are trying/VBG/trying to/TO/to find/VB/find is/VBZ/is in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of the/DT/the ancestor/NNP/ancestor. so/RB/so this/DT/this guy/NN/guy then/RB/then going/VBG/going to/TO/to be/VB/be the/DT/the successor/NN/successor of/IN/of x/NN/x /,/, this/DT/this node/NN/node is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the successor/NN/successor of/IN/of this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 00/CD/00 /CD/) /./. why/WRB/why this/DT/this is/VBZ/is true/JJ/true ?/./? so/RB/so this/DT/this node/NN/node has/VBZ/has to/TO/to be/VB/be /,/, is/VBZ/is it/PRP/it larger/JJR/larger than/IN/than this/DT/this ?/./? no/DT/no it/PRP/it is/VBZ/is smaller/JJR/smaller because/IN/because it/PRP/it is/VBZ/is in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree so/RB/so it/PRP/it is/VBZ/is smaller/JJR/smaller /,/, this/DT/this is/VBZ/is also/RB/also smaller/JJR/smaller /,/, this/DT/this is/VBZ/is also/RB/also smaller/JJR/smaller /,/, this/DT/this is/VBZ/is larger/JJR/larger /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 23/CD/23 /CD/) /./. in/IN/in fact/NN/fact this/DT/this this/DT/this guy/NN/guy is/VBZ/is in/IN/in the/DT/the largest/JJS/largest node/NN/node in/IN/in the/DT/the entire/JJ/entire sub/NN/sub tree/NN/tree because/IN/because how/WRB/how did/VBD/did i/PRP/i find/VBP/find the/DT/the largest/JJS/largest node/NN/node i/PRP/i come/VBP/come here/RB/here and/CC/and keep/VB/keep going/VBG/going right/RB/right which/WDT/which is/VBZ/is exactly/RB/exactly what/WP/what i/PRP/i do/VBP/do /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the largest/JJS/largest in/IN/in the/DT/the entire/JJ/entire sub/NN/sub tree/NN/tree and/CC/and the/DT/the node/NN/node following/VBG/following this/DT/this is/VBZ/is then/RB/then this/DT/this guy/NNP/guy. yes/VBZ/yes or/CC/or no/DT/no ?/./? can/MD/can the/DT/the successor/NN/successor could/MD/could have/VB/have been/VBN/been some/DT/some where/WRB/where else/NN/else /,/, could/MD/could it/PRP/it have/VB/have been/VBN/been to/TO/to the/DT/the right/NN/right of/IN/of this/DT/this guy/NN/guy because/IN/because all/DT/all of/IN/of this/DT/this going/VBG/going to/TO/to be/VB/be larger/JJR/larger than/IN/than this/DT/this /,/, can/MD/can it/PRP/it be/VB/be an/DT/an ancestor/NN/ancestor of/IN/of this/DT/this guy/NNP/guy. this/DT/this ancestor/NN/ancestor is/VBZ/is less/JJR/less than/IN/than this/DT/this but/CC/but this/DT/this ancestor/NN/ancestor if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than this/DT/this it/PRP/it is/VBZ/is also/RB/also less/JJR/less than/IN/than entire/JJ/entire thing/NN/thing it/PRP/it ?/./? s/NNS/s not/RB/not a/DT/a successor/NNP/successor. but/CC/but if/IN/if you/PRP/you are/VBP/are looking/VBG/looking at/IN/at this/DT/this ancestor/NN/ancestor then/RB/then this/DT/this ancestor/NN/ancestor would/MD/would be/VB/be less/RBR/less than/IN/than this/DT/this and/CC/and it/PRP/it would/MD/would be/VB/be less/RBR/less than/IN/than entire/JJ/entire thing/NN/thing so/IN/so i/PRP/i was/VBD/was wrong/JJ/wrong /,/, this/DT/this ancestor/NN/ancestor is/VBZ/is less/JJR/less than/IN/than entire/JJ/entire thing/NN/thing is/VBZ/is not/RB/not really/RB/really a/DT/a successor/NN/successor but/CC/but this/DT/this ancestor/NN/ancestor is/VBZ/is greater/JJR/greater than/IN/than this/DT/this entire/JJ/entire thing/NN/thing but/CC/but it/PRP/it is/VBZ/is also/RB/also greater/JJR/greater than/IN/than this/NNP/this. so/RB/so this/DT/this is/VBZ/is only/RB/only the/DT/the successor/NN/successor so/RB/so better/RBR/better for/IN/for confusion/NN/confusion but/CC/but you/PRP/you understand/VBP/understand what/WP/what the/DT/the arguments/NNS/arguments are/VBP/are /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 57/CD/57 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time 39/CD/39 /:/: 01/CD/01 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time 39/CD/39 /:/: 08/CD/08 /CD/) so/RB/so let/JJ/let ?/./? s/NNS/s see/VBP/see what/WP/what code/NN/code i/PRP/i can/MD/can write/VB/write for/IN/for computing/NN/computing the/DT/the successor/NNP/successor. if/IN/if this/DT/this not/RB/not null/VBP/null then/RB/then i/PRP/i just/RB/just return/VBP/return the/DT/the minimum/JJ/minimum in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree otherwise/NN/otherwise i/PRP/i will/MD/will come/VB/come to/TO/to this/DT/this point/NN/point i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the parent/NN/parent /,/, now/RB/now so/RB/so y/RB/y is/VBZ/is the/DT/the parent/NN/parent and/CC/and what/WP/what i/PRP/i am/VBP/am doing/VBG/doing here/RB/here ?/./? if/IN/if y/NN/y is/VBZ/is not/RB/not null/JJ/null and/CC/and x/NN/x equals/NNS/equals right/RB/right of/IN/of y/NN/y /,/, so/RB/so when/WRB/when do/VBP/do i/PRP/i have/VB/have to/TO/to keep/VB/keep marching/VBG/marching till/NN/till x/NN/x becomes/VBZ/becomes the/DT/the left/NNP/left. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 39/CD/39 /:/: 56/CD/56 /CD/) so/RB/so essentially/RB/essentially recall/JJ/recall i/PRP/i am/VBP/am going/VBG/going up/RP/up the/DT/the tree/NN/tree and/CC/and the/DT/the first/JJ/first time/NN/time i/PRP/i essentially/RB/essentially i/PRP/i am/VBP/am at/IN/at the/DT/the node/NN/node such/JJ/such that/IN/that the/DT/the node/NN/node is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of the/DT/the parent/NN/parent then/RB/then i/PRP/i stop/NNP/stop. the/DT/the first/JJ/first time/NN/time /,/, so/RB/so let/VB/let me/PRP/me show/VB/show you/PRP/you the/DT/the previous/JJ/previous slide/NNP/slide. the/DT/the first/JJ/first time/NN/time so/RB/so i/PRP/i keep/VBP/keep going/VBG/going up/RP/up here/RB/here the/DT/the first/JJ/first time/NN/time i/PRP/i come/VBP/come to/TO/to a/DT/a node/NN/node such/JJ/such that/IN/that the/DT/the parent/NN/parent such/JJ/such that/IN/that this/DT/this node/NN/node is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of the/DT/the parent/NN/parent then/RB/then i/PRP/i stop/NNP/stop. /:/( refer/NN/refer slide/NN/slide time/NN/time 40/CD/40 /:/: 22/CD/22 /CD/) so/RB/so for/IN/for instance/NN/instance if/IN/if i/PRP/i were/VBD/were looking/VBG/looking for/IN/for a/DT/a successor/NN/successor of/IN/of 8/CD/8 /,/, i/PRP/i would/MD/would go/VB/go up/RP/up like/IN/like this/DT/this and/CC/and this/DT/this is/VBZ/is the/DT/the first/JJ/first time/NN/time the/DT/the node/NN/node is/VBZ/is a/DT/a left/VBN/left child/NN/child of/IN/of its/PRP$/its parent/NN/parent and/CC/and so/RB/so i/PRP/i stop/VBP/stop it/NNP/it. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we are/VBP/are doing/VBG/doing here/RB/here /,/, so/RB/so initially/RB/initially y/JJ/y is/VBZ/is the/DT/the parent/NN/parent of/IN/of x/NN/x and/CC/and all/DT/all we/PRP/we are/VBP/are doing/VBG/doing is/VBZ/is moving/VBG/moving the/DT/the pointers/NNS/pointers x/VBP/x and/CC/and y/NNP/y. so/RB/so y/JJ/y is/VBZ/is the/DT/the parent/NN/parent of/IN/of x/NN/x and/CC/and then/RB/then we/PRP/we are/VBP/are changing/VBG/changing it/PRP/it so/RB/so that/IN/that x/NN/x takes/VBZ/takes the/DT/the value/NN/value y/NN/y and/CC/and y/NN/y takes/VBZ/takes the/DT/the value/NN/value of/IN/of parent/NN/parent of/IN/of y/NN/y /,/, so/RB/so that/IN/that it/PRP/it moves/VBZ/moves one/CD/one step/NN/step ahead/NNP/ahead. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 40/CD/40 /:/: 46/CD/46 /CD/) so/RB/so in/IN/in some/DT/some sense/NN/sense these/DT/these are/VBP/are a/DT/a pair/JJ/pair of/IN/of pointers/NNS/pointers which/WDT/which are/VBP/are moving/VBG/moving up/RP/up the/DT/the tree/NN/tree with/IN/with y/NN/y always/RB/always ahead/RB/ahead of/IN/of x/NN/x /,/, x/NN/x y/NN/y /,/, the/DT/the x/NN/x moves/VBZ/moves and/CC/and then/RB/then y/JJ/y moves/NNS/moves and/CC/and x/NN/x moves/NNS/moves and/CC/and then/RB/then y/JJ/y moves/NNS/moves and/CC/and so/RB/so on/NNP/on. when/WRB/when do/VBP/do we/PRP/we stop/VB/stop ?/./? when/WRB/when x/NN/x is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is trailing/VBG/trailing /,/, y/NN/y is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is head/NN/head when/WRB/when x/NN/x is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of y/NNP/y. when/WRB/when x/NN/x is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of y/NN/y we/PRP/we will/MD/will stop/NNP/stop. so/RB/so essentially/RB/essentially we/PRP/we are/VBP/are continuing/VBG/continuing in/IN/in the/DT/the loop/NN/loop till/IN/till x/NN/x is/VBZ/is the/DT/the right/NN/right child/NN/child of/IN/of y/NN/y /,/, when/WRB/when x/NN/x becomes/VBZ/becomes the/DT/the left/NN/left child/NN/child of/IN/of y/NN/y we/PRP/we will/MD/will get/VB/get out/IN/out of/IN/of the/DT/the loop/NN/loop or/CC/or y/NN/y becomes/VBZ/becomes null/JJ/null that/IN/that means/NNS/means i/PRP/i have/VBP/have gone/VBN/gone beyond/IN/beyond the/DT/the root/NN/root then/RB/then we/PRP/we stop/VBP/stop and/CC/and we/PRP/we return/NNP/return. we/PRP/we return/VBP/return y/JJ/y which/WDT/which was/VBD/was the/DT/the parent/NN/parent node/NNP/node. in/IN/in case/NN/case y/NN/y hits/NNS/hits null/VBP/null then/RB/then we/PRP/we will/MD/will return/VB/return y/NN/y which/WDT/which means/VBZ/means null/NNP/null. if/IN/if we/PRP/we return/VBP/return null/JJ/null which/WDT/which means/VBZ/means it/PRP/it could/MD/could not/RB/not be/VB/be found/VBN/found /,/, so/RB/so you/PRP/you can/MD/can have/VB/have a/DT/a closer/JJR/closer look/NN/look at/IN/at this/DT/this code/NN/code and/CC/and convince/NN/convince yourself/PRP/yourself that/IN/that it/PRP/it is/VBZ/is correct/NNP/correct. so/RB/so once/RB/once again/RB/again what/WP/what is/VBZ/is the/DT/the running/VBG/running time/NN/time of/IN/of the/DT/the successor/NN/successor code/NN/code ?/./? order/NN/order edge/NN/edge /,/, in/IN/in each/DT/each of/IN/of the/DT/the cases/NNS/cases /,/, in/IN/in one/CD/one case/NN/case what/WP/what we/PRP/we are/VBP/are doing/VBG/doing ?/./? we/PRP/we are/VBP/are going/VBG/going down/RB/down the/DT/the tree/NN/tree but/CC/but we/PRP/we only/RB/only go/VBP/go down/RB/down as/IN/as many/JJ/many levels/NNS/levels as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree at/IN/at most/JJS/most in/IN/in other/JJ/other case/NN/case we/PRP/we are/VBP/are going/VBG/going up/RP/up the/DT/the tree/NNP/tree. so/RB/so the/DT/the maximum/NN/maximum number/NN/number of/IN/of levels/NNS/levels we/PRP/we can/MD/can go/VB/go up/RP/up the/DT/the tree/NN/tree is/VBZ/is at/IN/at most/JJS/most the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 41/CD/41 /:/: 44/CD/44 /CD/) so/RB/so now/RB/now look/VBP/look at/IN/at the/DT/the insertion/NN/insertion procedure/NN/procedure in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. till/NN/till now/RB/now we/PRP/we looked/VBD/looked at/IN/at search/NN/search /,/, how/WRB/how much/JJ/much time/NN/time did/VBD/did search/NN/search take/VB/take ?/./? order/NN/order edge/NN/edge /,/, height/NN/height of/IN/of the/DT/the tree/NNP/tree. we/PRP/we looked/VBD/looked at/IN/at minimum/JJ/minimum /,/, we/PRP/we looked/VBD/looked at/IN/at maximum/NN/maximum both/DT/both of/IN/of them/PRP/them take/VBP/take time/NN/time proportional/JJ/proportional to/TO/to the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, worst/JJ/worst case/NN/case time/NN/time and/CC/and we/PRP/we looked/VBD/looked at/IN/at successor/NN/successor and/CC/and it/PRP/it took/VBD/took time/NN/time proportional/JJ/proportional to/TO/to the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. can/MD/can you/PRP/you also/RB/also compute/VBP/compute predecessor/NN/predecessor ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 42/CD/42 /:/: 50/CD/50 /CD/) similar/JJ/similar idea/NN/idea /,/, essentially/RB/essentially interchange/VB/interchange role/NN/role of/IN/of right/NN/right and/CC/and left/VBN/left /,/, successor/NN/successor may/MD/may /VB/[ hindi/NN/hindi conversation/NN/conversation /:/] and/CC/and we/PRP/we will/MD/will match/VB/match up/RP/up the/DT/the tree/NN/tree and/CC/and all/DT/all of/IN/of that/DT/that is/VBZ/is the/DT/the same/JJ/same thing/NNP/thing. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at insertion/NN/insertion so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the other/JJ/other thing/NN/thing we/PRP/we will/MD/will do/VB/do today/NN/today /,/, we/PRP/we will/MD/will take/VB/take care/NN/care of/IN/of deletion/NN/deletion in/IN/in the/DT/the next/JJ/next class/NNP/class. so/RB/so insertion/NN/insertion i/PRP/i have/VBP/have a/DT/a binary/JJ/binary search/NN/search tree/NN/tree and/CC/and i/PRP/i want/VBP/want to/TO/to insert/VB/insert an/DT/an elements/NNS/elements so/RB/so what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? alpha/NN/alpha search/NN/search for/IN/for the/DT/the elements/NNP/elements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 44/CD/44 /:/: 00/CD/00 /CD/) i/PRP/i first/RB/first find/VBP/find out/RP/out the/DT/the place/NN/place in/IN/in the/DT/the tree/NN/tree where/WRB/where the/DT/the element/NN/element should/MD/should be/NNP/be. we/PRP/we are/VBP/are assuming/VBG/assuming distinct/NN/distinct keys/NNS/keys /,/, we/PRP/we are/VBP/are assuming/VBG/assuming that/IN/that node/NN/node to/TO/to elements/NNS/elements of/IN/of the/DT/the same/JJ/same key/NNP/key. so/IN/so we/PRP/we first/RB/first find/VBP/find out/RP/out where/WRB/where it/PRP/it should/MD/should be/VB/be and/CC/and then/RB/then we/PRP/we put/VBD/put it/PRP/it there/RB/there so/RB/so that/IN/that it/PRP/it is/VBZ/is actually/RB/actually there/NNP/there. so/RB/so let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at an/DT/an example/NN/example /,/, this/DT/this is/VBZ/is my/PRP$/my binary/NN/binary search/NN/search tree/NN/tree and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert 8/CD/8. so/RB/so /:/[ hindi/NN/hindi /:/] you/PRP/you recall/VBP/recall this/DT/this 8/CD/8 is/VBZ/is not/RB/not there/RB/there in/IN/in the/DT/the tree/NN/tree so/RB/so i/PRP/i fist/VBP/fist search/NN/search for/IN/for 8/CD/8 which/WDT/which means/VBZ/means i/PRP/i go/VBP/go down/NNP/down. i/PRP/i come/VBP/come here/RB/here go/VB/go right/RB/right /,/, i/PRP/i go/VBP/go left/VBN/left and/CC/and then/RB/then i/PRP/i want/VBP/want to/TO/to go/VB/go right/RB/right but/CC/but right/RB/right is/VBZ/is null/JJ/null which/WDT/which means/VBZ/means 8/CD/8 is/VBZ/is not/RB/not in/IN/in the/DT/the tree/NN/tree /,/, so/RB/so i/PRP/i put/VBD/put 8/CD/8 here/RB/here which/WDT/which means/VBZ/means that/DT/that 8/CD/8 becomes/VBZ/becomes the/DT/the right/NN/right child/NN/child of/IN/of 7/CD/7. at/IN/at which/WDT/which ever/RB/ever point/VBP/point the/DT/the search/NN/search fails/VBZ/fails because/IN/because we/PRP/we hit/VBP/hit a/DT/a null/NN/null pointer/NN/pointer and/CC/and null/JJ/null reference/NN/reference we/PRP/we put/VBD/put the/DT/the node/NN/node there/RB/there that/WDT/that ?/./? s/VBZ/s all/DT/all insertion/NN/insertion is/NNP/is. how/WRB/how much/JJ/much time/NN/time does/VBZ/does the/DT/the insertion/NN/insertion take/NN/take them/PRP/them ?/./? order/NN/order h/NN/h /,/, which/WDT/which is/VBZ/is same/JJ/same as/IN/as searching/NN/searching essentially/RB/essentially /./[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so now/RB/now that/IN/that brings/NNS/brings me/PRP/me to/TO/to that/DT/that question/NN/question i/PRP/i had/VBD/had asked/VBN/asked at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the class/NN/class which/WDT/which is/VBZ/is in/IN/in what/WP/what order/NN/order should/MD/should i/VB/i been/VBN/been inserting/VBG/inserting the/DT/the keys/NNS/keys in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree so/RB/so that/IN/that its/PRP$/its height/NN/height ?/./? so/RB/so we/PRP/we said/VBD/said the/DT/the maximum/NN/maximum height/NN/height of/IN/of a/DT/a binary/JJ/binary search/NN/search tree/NN/tree is/VBZ/is in/IN/in or/CC/or in/IN/in minus/NN/minus one/CD/one or/CC/or one/CD/one of/IN/of those/DT/those things/NNP/things. this/DT/this is/VBZ/is the/DT/the maximum/NN/maximum height/NN/height of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NNP/tree. suppose/NN/suppose i/PRP/i have/VBP/have n/VBN/n keys/NNS/keys /,/, in/IN/in what/WP/what order/NN/order should/MD/should i/VB/i insert/NN/insert those/DT/those keys/NNS/keys so/RB/so that/IN/that i/PRP/i can/MD/can get/VB/get a/DT/a tree/NN/tree of/IN/of height/NN/height n/NN/n ?/./? 1/CD/1 ?/./? let/NN/let ?/./? s/NNS/s say/VBP/say our/PRP$/our keys/NNS/keys were/VBD/were 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 up/RP/up to/TO/to n/NNP/n. so/RB/so what/WP/what order/NN/order should/MD/should i/VB/i insert/NN/insert them/PRP/them /,/, exactly/RB/exactly this/DT/this order/NN/order or/CC/or the/DT/the descending/NN/descending order/NNP/order. so/RB/so /:/[ hindi/NN/hindi conversation/NN/conversation /:/] we/PRP/we will/MD/will insert/VB/insert 4/CD/4 at/IN/at this/DT/this place/NN/place and/CC/and in/IN/in this/DT/this manner/NN/manner we/PRP/we will/MD/will create/VB/create the/DT/the chain/NN/chain of/IN/of this/DT/this kind/NN/kind and/CC/and we/PRP/we will/MD/will get/VB/get a/DT/a tree/NN/tree of/IN/of height/NN/height n/NN/n ?/./? 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time 46/CD/46 /:/: 03/CD/03 /CD/) similar/JJ/similar would/MD/would happen/VB/happen if/IN/if i/PRP/i had/VBD/had inserted/VBN/inserted in/IN/in the/DT/the descending/NN/descending order/NNP/order. so/RB/so which/WDT/which order/NN/order should/MD/should i/VB/i insert/NN/insert it/PRP/it so/RB/so that/IN/that it/PRP/it can/MD/can get/VB/get small/JJ/small height/NN/height ?/./? the/DT/the first/JJ/first element/NN/element i/PRP/i should/MD/should insert/VB/insert is/VBZ/is n/VBN/n by/IN/by 2/CD/2. which/WDT/which is/VBZ/is the/DT/the next/JJ/next element/NN/element i/PRP/i should/MD/should insert/VB/insert ?/./? n/NN/n by/IN/by 2/CD/2 ?/./? 1/CD/1 ?/./? n/NN/n by/IN/by 4/CD/4 and/CC/and 3/CD/3 n/NN/n by/IN/by 4/CD/4 and/CC/and then/RB/then i/PRP/i would/MD/would get/VB/get something/NN/something like/IN/like this/DT/this and/CC/and now/RB/now n/VBP/n by/IN/by 8/CD/8 and/CC/and is/VBZ/is it/PRP/it clear/RB/clear that/IN/that n/NN/n by/IN/by 8/CD/8 will/MD/will come/VB/come here/RB/here ?/./? why/WRB/why this/DT/this because/IN/because you/PRP/you will/MD/will compare/VB/compare and/CC/and put/VB/put it/PRP/it here/RB/here and/CC/and which/WDT/which is/VBZ/is the/DT/the next/JJ/next one/CD/one ?/./? 3n/CD/3n by/IN/by 8/CD/8 /,/, suppose/NN/suppose i/PRP/i insert/VBP/insert 7/CD/7 n/NN/n by/IN/by 8/CD/8 /,/, if/IN/if i/PRP/i insert/VBP/insert 7/CD/7 n/NN/n by/IN/by 8/CD/8 what/WP/what happens/NNS/happens ?/./? so/RB/so can/MD/can i/VB/i insert/NN/insert 7/CD/7 n/NN/n by/IN/by 8/CD/8 at/IN/at this/DT/this point/NN/point /,/, can/MD/can i/PRP/i insert/VB/insert 7/CD/7 n/NN/n by/IN/by 8/CD/8 ?/./? no/DT/no harm/NN/harm i/PRP/i can/MD/can also/RB/also insert/VB/insert it/PRP/it here/NNP/here. 7/CD/7 n/NN/n by/IN/by 8/CD/8 will/MD/will always/RB/always come/VB/come here/RB/here /,/, now/RB/now i/PRP/i can/MD/can insert/VB/insert my/PRP$/my 3/CD/3 n/NN/n by/IN/by 8/CD/8 and/CC/and now/RB/now i/PRP/i have/VBP/have to/TO/to insert/VB/insert 5n/CD/5n by/IN/by 8/CD/8 which/WDT/which will/MD/will come/VB/come here/NNP/here. essentially/RB/essentially i/PRP/i have/VBP/have to/TO/to go/VB/go level/NN/level by/IN/by level/NN/level or/CC/or i/PRP/i have/VBP/have to/TO/to insert/VB/insert these/DT/these nodes/NNS/nodes first/RB/first and/CC/and only/RB/only then/RB/then i/PRP/i have/VBP/have to/TO/to insert/VB/insert later/JJ/later nodes/NNS/nodes otherwise/NNP/otherwise. so/RB/so in/IN/in this/DT/this manner/NN/manner i/PRP/i will/MD/will end/VB/end up/RP/up with/IN/with what/WP/what kind/NN/kind of/IN/of a/DT/a tree/NN/tree ?/./? height/NN/height balanced/VBD/balanced /,/, a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree i/PRP/i have/VBP/have not/RB/not told/VBN/told you/PRP/you what/WP/what height/RB/height balanced/VBD/balanced trees/NNS/trees are/VBP/are /,/, you/PRP/you don/VBP/don ?/./? t/NN/t know/VB/know what/WP/what the/DT/the height/NN/height balanced/VBD/balanced tree/NN/tree /,/, you/PRP/you don/VBP/don ?/./? t/NN/t even/RB/even know/VB/know the/DT/the full/JJ/full binary/JJ/binary trees/NNS/trees is/VBZ/is /,/, we/PRP/we have/VBP/have learnt/VBN/learnt only/RB/only what/WP/what a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. so/RB/so this/DT/this we/PRP/we will/MD/will get/VB/get is/VBZ/is the/DT/the complete/JJ/complete binary/NN/binary tree/NN/tree /,/, complete/JJ/complete binary/NN/binary tree/NN/tree provided/VBD/provided your/PRP$/your n/NN/n was/VBD/was some/DT/some power/NN/power of/IN/of a/DT/a 2/CD/2 or/CC/or 2/CD/2 to/TO/to the/DT/the k/NN/k ?/./? 1/CD/1 /,/, n/NN/n has/VBZ/has to/TO/to be/VB/be of/IN/of the/DT/the kind/NN/kind 2/CD/2 to/TO/to the/DT/the k/NN/k /:/- 1/CD/1 then/RB/then you/PRP/you will/MD/will get/VB/get a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. so/RB/so in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask the/DT/the following/VBG/following question/NNP/question. if/IN/if i/PRP/i was/VBD/was able/JJ/able to/TO/to take/VB/take a/DT/a random/NN/random permutation/NN/permutation of/IN/of these/DT/these elements/NNS/elements /,/, if/IN/if i/PRP/i put/VBD/put the/DT/the elements/NNS/elements in/IN/in an/DT/an ascending/NN/ascending order/NN/order then/RB/then i/PRP/i get/VBP/get a/DT/a bad/JJ/bad tree/NNP/tree. why/WRB/why i/PRP/i am/VBP/am calling/VBG/calling this/DT/this a/DT/a bad/JJ/bad tree/NN/tree and/CC/and this/DT/this a/DT/a good/JJ/good tree/NN/tree ?/./? because/IN/because of/IN/of the/DT/the height/NN/height /,/, this/DT/this has/VBZ/has the/DT/the huge/JJ/huge height/NN/height /,/, this/DT/this has/VBZ/has a/DT/a small/JJ/small height/NN/height why/WRB/why is/VBZ/is height/VBN/height such/JJ/such so/RB/so relevant/JJ/relevant because/IN/because so/RB/so all/DT/all our/PRP$/our operations/NNS/operations were/VBD/were depended/VBN/depended upon/IN/upon the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. the/DT/the smaller/JJR/smaller the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, the/DT/the faster/NN/faster the/DT/the operation/NN/operation is/VBZ/is so/RB/so you/PRP/you would/MD/would like/VB/like to/TO/to keep/VB/keep the/DT/the tree/NN/tree height/NN/height as/IN/as small/JJ/small as/IN/as possible/NNP/possible. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 50/CD/50 /:/: 01/CD/01 /CD/) so/RB/so we/PRP/we don/VBP/don ?/./? t/NN/t really/RB/really want/VBP/want trees/NNS/trees of/IN/of this/DT/this kind/NN/kind /,/, of/IN/of course/NN/course you/PRP/you know/VBP/know with/IN/with some/DT/some effort/NN/effort you/PRP/you could/MD/could figure/VB/figure out/RP/out in/IN/in what/WP/what order/NN/order should/MD/should i/VB/i insert/NN/insert these/DT/these elements/NNS/elements so/RB/so that/IN/that i/PRP/i get/VBP/get a/DT/a small/JJ/small height/NN/height tree/NN/tree and/CC/and what/WP/what is/VBZ/is the/DT/the bad/JJ/bad order/NNP/order. suppose/NN/suppose i/PRP/i were/VBD/were to/TO/to just/RB/just take/VB/take a/DT/a random/NN/random permutation/NN/permutation of/IN/of one/CD/one through/IN/through n/NN/n /,/, you/PRP/you understand/VBP/understand the/DT/the random/NN/random permutation/NNP/permutation. take/NN/take one/CD/one of/IN/of the/DT/the permutation/NN/permutation there/RB/there /,/, where/WRB/where n/NN/n factorial/JJ/factorial different/JJ/different permutation/NNP/permutation. take/NN/take one/CD/one of/IN/of them/PRP/them at/IN/at random/NN/random and/CC/and insert/NN/insert elements/NNS/elements in/IN/in that/DT/that order/NNP/order. what/WP/what will/MD/will be/VB/be the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree then/RB/then ?/./? depends/NNS/depends on/IN/on what/WP/what you/PRP/you or/CC/or and/CC/and me/PRP/me ?/./? who/WP/who does/VBZ/does the/DT/the insertion/NN/insertion on/IN/on the/DT/the permutation/NN/permutation ?/./? it/PRP/it will/MD/will depend/VB/depend up/RP/up on/IN/on the/DT/the permutation/NN/permutation so/RB/so we/PRP/we have/VBP/have to/TO/to talk/VB/talk of/IN/of random/NN/random variable/NNP/variable. so/RB/so the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree now/RB/now will/MD/will become/VB/become a/DT/a random/NN/random variable/NNP/variable. you/PRP/you understand/VBP/understand what/WP/what a/DT/a random/NN/random variable/JJ/variable means/NNS/means ?/./? variable/JJ/variable which/WDT/which takes/VBZ/takes many/JJ/many different/JJ/different minimum/JJ/minimum values/NNS/values so/IN/so the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree could/MD/could take/VB/take one/CD/one of/IN/of many/JJ/many different/JJ/different values/NNP/values. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 50/CD/50 /:/: 06/CD/06 /CD/) what/WP/what are/VBP/are the/DT/the many/JJ/many different/JJ/different values/NNS/values that/WDT/that the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree can/MD/can take/VB/take ?/./? log/NN/log n/NN/n to/TO/to n/VB/n /,/, log/NN/log n/NN/n to/TO/to n/VB/n /:/- 1/CD/1 or/CC/or log/NN/log n/NN/n +/:/+ 1/CD/1 to/TO/to n/VB/n ?/./? 1/CD/1 /,/, i/PRP/i don/VBP/don ?/./? t/NN/t know/VB/know exactly/RB/exactly which/WDT/which but/CC/but one/CD/one of/IN/of those/NNP/those. log/NN/log n/NN/n to/TO/to n/VB/n so/RB/so it/PRP/it will/MD/will take/VB/take one/CD/one of/IN/of these/DT/these different/JJ/different values/NNS/values and/CC/and it/PRP/it will/MD/will take/VB/take each/DT/each of/IN/of this/DT/this value/NN/value with/IN/with a/DT/a certain/JJ/certain probability/NN/probability because/IN/because after/IN/after all/DT/all i/PRP/i took/VBD/took a/DT/a random/NN/random permutation/NNP/permutation. so/RB/so what/WP/what we/PRP/we have/VBP/have to/TO/to find/VB/find out/RP/out ?/./? so/RB/so taking/VBG/taking each/DT/each of/IN/of these/DT/these values/NNS/values in/IN/in the/DT/the different/JJ/different probabilities/NNS/probabilities so/IN/so you/PRP/you have/VBP/have to/TO/to find/VB/find out/RP/out what/WP/what the/DT/the expected/VBN/expected value/NN/value of/IN/of these/DT/these random/NN/random variables/NNP/variables. we/PRP/we will/MD/will address/VB/address this/DT/this kind/NN/kind of/IN/of a/DT/a question/NN/question in/IN/in the/DT/the next/JJ/next class/NNP/class. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 51/CD/51 /:/: 47/CD/47 /CD/) so/RB/so this/DT/this can/MD/can be/VB/be the/DT/the code/NN/code for/IN/for insertion/NN/insertion /,/, so/RB/so i/PRP/i am/VBP/am given/VBN/given a/DT/a tree/NN/tree t/NN/t /:/[ hindi/NN/hindi /:/] i/PRP/i will/MD/will just/RB/just switch/NNP/switch. this/DT/this can/MD/can be/VB/be the/DT/the code/NN/code for/IN/for the/DT/the insertion/NN/insertion /,/, i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert this/DT/this node/NN/node z/NN/z into/IN/into a/DT/a tree/JJ/tree t/NN/t and/CC/and once/RB/once again/RB/again i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have two/CD/two pointers/NNS/pointers x/NN/x and/CC/and y/NN/y and/CC/and what/WP/what is/VBZ/is the/DT/the need/NN/need for/IN/for this/DT/this 2/CD/2 pointers/NNS/pointers x/NN/x and/CC/and y/NN/y because/IN/because recall/NN/recall when/WRB/when i/PRP/i am/VBP/am inserting/VBG/inserting a/DT/a node/NN/node so/IN/so when/WRB/when i/PRP/i am/VBP/am inserting/VBG/inserting this/DT/this node/NN/node z/NN/z /,/, i/PRP/i am/VBP/am searching/VBG/searching for/IN/for z/NN/z the/DT/the key/JJ/key corresponding/NN/corresponding to/TO/to z/VB/z in/IN/in the/DT/the tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 52/CD/52 /:/: 21/CD/21 /CD/) then/RB/then i/PRP/i hit/VBD/hit this/DT/this null/NN/null and/CC/and so/RB/so we/PRP/we said/VBD/said we/PRP/we will/MD/will put/VB/put z/NN/z at/IN/at that/DT/that place/NN/place but/CC/but to/TO/to put/VB/put z/NN/z at/IN/at that/DT/that place/NN/place what/WP/what we/PRP/we will/MD/will have/VB/have to/TO/to modify/VB/modify ?/./? the/DT/the parent/NN/parent of/IN/of z/NN/z /:/[ hindi/NN/hindi /:/] right/NN/right child/NN/child /:/[ hindi/NN/hindi /:/] modify/NN/modify child/NN/child a/DT/a left/NN/left child/NN/child /:/[ hindi/NN/hindi /:/] modify/NN/modify /:/[ hindi/NN/hindi /:/] essentially/RB/essentially parent/NN/parent pointer/NN/pointer parent/NN/parent /:/[ hindi/NN/hindi /:/] pointer/NN/pointer /:/[ hindi/NN/hindi /:/] /./. we/PRP/we will/MD/will have/VB/have two/CD/two pointers/NNS/pointers x/NN/x and/CC/and y/NN/y such/JJ/such that/IN/that now/RB/now the/DT/the game/NN/game is/VBZ/is that/IN/that y/NN/y will/MD/will be/VB/be preceding/VBG/preceding x/NNP/x. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 53/CD/53 /:/: 28/CD/28 /CD/) so/RB/so these/DT/these two/CD/two pointers/NNS/pointers will/MD/will keep/VB/keep moving/VBG/moving down/IN/down such/JJ/such that/IN/that y/NN/y will/MD/will always/RB/always be/VB/be the/DT/the parent/NN/parent of/IN/of x/NNP/x. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we are/VBP/are doing/VBG/doing initially/RB/initially y/JJ/y is/VBZ/is null/JJ/null /,/, x/NN/x is/VBZ/is the/DT/the root/NN/root then/RB/then y/JJ/y takes/NNS/takes the/DT/the value/NN/value x/NN/x and/CC/and x/NN/x goes/VBZ/goes to/TO/to either/DT/either left/NN/left or/CC/or to/TO/to the/DT/the right/NN/right child/NN/child of/IN/of x/NN/x and/CC/and we/PRP/we keep/VBP/keep doing/VBG/doing this/DT/this till/NN/till we/PRP/we hit/VBD/hit null/JJ/null /,/, till/NN/till x/NN/x becomes/VBZ/becomes null/JJ/null when/WRB/when x/NN/x becomes/VBZ/becomes null/JJ/null y/NN/y is/VBZ/is pointing/VBG/pointing to/TO/to the/DT/the right/NN/right node/NNP/node. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] so/RB/so y/JJ/y is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the parent/NN/parent of/IN/of new/JJ/new node/NN/node we/PRP/we are/VBP/are inserting/VBG/inserting /,/, so/RB/so parent/NN/parent pointer/NN/pointer of/IN/of z/NN/z so/IN/so recall/NN/recall that/IN/that the/DT/the node/NN/node is/VBZ/is also/RB/also have/VBP/have a/DT/a left/VBN/left child/NN/child and/CC/and right/RB/right child/VB/child and/CC/and then/RB/then parent/NNP/parent. so/RB/so parent/NN/parent of/IN/of z/NN/z gets/NNS/gets the/DT/the value/NN/value y/NN/y and/CC/and depending/VBG/depending up/RP/up on/IN/on whether/IN/whether the/DT/the key/JJ/key of/IN/of z/NN/z is/VBZ/is less/JJR/less than/IN/than the/DT/the key/JJ/key of/IN/of y/NN/y or/CC/or more/JJR/more than/IN/than the/DT/the key/JJ/key of/IN/of y/NN/y /,/, if/IN/if key/JJ/key of/IN/of z/NN/z is/VBZ/is less/JJR/less than/IN/than the/DT/the key/JJ/key of/IN/of y/NN/y then/RB/then z/VB/z will/MD/will be/VB/be a/DT/a left/NN/left child/NN/child of/IN/of y/NNP/y. then/RB/then the/DT/the left/NN/left child/NN/child of/IN/of y/NN/y becomes/VBZ/becomes z/NN/z and/CC/and if/IN/if key/JJ/key of/IN/of z/NN/z is/VBZ/is more/RBR/more than/IN/than the/DT/the key/JJ/key of/IN/of y/NN/y then/RB/then the/DT/the right/NN/right child/NN/child of/IN/of y/NN/y becomes/VBZ/becomes z/NNP/z. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 54/CD/54 /:/: 18/CD/18 /CD/) that/WDT/that ?/./? s/VBZ/s all/DT/all you/PRP/you have/VBP/have to/TO/to do/VB/do but/CC/but does/VBZ/does everyone/NN/everyone understand/NN/understand what/WP/what the/DT/the need/NN/need for/IN/for having/VBG/having these/DT/these two/CD/two references/NNP/references. you/PRP/you need/VBP/need to/TO/to keep/VB/keep track/NN/track of/IN/of the/DT/the parent/NN/parent because/IN/because that/DT/that ?/./? s/NNS/s the/DT/the one/CD/one you/PRP/you have/VBP/have to/TO/to modify/VB/modify so/RB/so you/PRP/you will/MD/will go/VB/go modify/NN/modify that/WDT/that and/CC/and you/PRP/you will/MD/will just/RB/just set/VB/set it/PRP/it appropriate/VB/appropriate to/TO/to the/DT/the left/NN/left to/TO/to the/DT/the right/NNP/right. so/RB/so already/RB/already i/PRP/i discussed/VBD/discussed this/DT/this /,/, so/RB/so in/IN/in what/WP/what sequence/NN/sequence the/DT/the insertion/NN/insertion should/MD/should be/VB/be done/VBN/done /,/, we/PRP/we saw/VBD/saw that/IN/that which/WDT/which should/MD/should be/VB/be worst/RB/worst case/VB/case sequence/NNP/sequence. so/RB/so with/IN/with that/DT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to stop/VB/stop our/PRP$/our discussion/NNP/discussion. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 55/CD/55 /:/: 20/CD/20 /CD/) on/IN/on binary/JJ/binary search/NN/search tree/NN/tree we/PRP/we will/MD/will continue/VB/continue this/DT/this in/IN/in the/DT/the next/JJ/next class/NN/class with/IN/with the/DT/the deletion/NN/deletion procedure/NN/procedure for/IN/for binary/JJ/binary search/NN/search trees/NNS/trees and/CC/and will/MD/will also/RB/also look/VB/look at/IN/at this/DT/this questions/NNS/questions that/WDT/that i/PRP/i asked/VBD/asked you/PRP/you today/NN/today but/CC/but if/IN/if to/TO/to insert/VB/insert elements/NNS/elements in/IN/in the/DT/the random/NN/random order/NN/order then/RB/then what/WP/what is/VBZ/is the/DT/the time/NN/time taken/VBN/taken to/TO/to do/VB/do the/DT/the insertion/NN/insertion and/CC/and what/WP/what kind/NN/kind of/IN/of the/DT/the tree/NN/tree do/VBP/do you/PRP/you get/VB/get as/IN/as the/DT/the result/NN/result of/IN/of that/NNP/that. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 9/CD/9 deletion/NN/deletion today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start with/IN/with deletion/NNP/deletion. in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we saw/VBD/saw how/WRB/how to/TO/to do/VB/do insertion/NN/insertion /,/, search/NN/search /,/, computing/VBG/computing successor/NN/successor /,/, computing/VBG/computing predecessor/NN/predecessor /,/, computing/VBG/computing minimum/JJ/minimum and/CC/and maximum/NN/maximum in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. today/NN/today the/DT/the only/JJ/only 1/CD/1 operation/NN/operation that/WDT/that is/VBZ/is left/VBN/left is/VBZ/is the/DT/the deletion/NN/deletion and/CC/and so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to do/VB/do deletion/NN/deletion in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to address/NN/address the/DT/the question/NN/question that/IN/that i/PRP/i had/VBD/had raised/VBN/raised in/IN/in the/DT/the last/JJ/last class/NN/class which/WDT/which was/VBD/was that/IN/that if/IN/if i/PRP/i were/VBD/were to/TO/to insert/VB/insert some/DT/some n/NN/n elements/NNS/elements into/IN/into a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /,/, suppose/NN/suppose i/PRP/i were/VBD/were to/TO/to randomly/RB/randomly permute/VB/permute my/PRP$/my elements/NNS/elements and/CC/and insert/VB/insert them/NNP/them. then/RB/then what/WP/what can/MD/can we/PRP/we say/VB/say about/IN/about the/DT/the time/NN/time that/IN/that the/DT/the insertion/NN/insertion would/MD/would take/NNP/take. today/NN/today we/PRP/we will/MD/will see/VB/see all/DT/all of/IN/of that/DT/that in/IN/in detail/NNP/detail. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 2/CD/2 /:/: 21/CD/21 /CD/) we/PRP/we are/VBP/are given/VBN/given a/DT/a node/NN/node x/NN/x in/IN/in the/DT/the tree/NN/tree and/CC/and you/PRP/you have/VBP/have to/TO/to delete/VB/delete the/DT/the node/NNP/node. we/PRP/we will/MD/will distinguish/VB/distinguish 3/CD/3 cases/NNP/cases. x/NN/x has/VBZ/has no/DT/no children/NNS/children which/WDT/which will/MD/will be/VB/be the/DT/the easiest/JJS/easiest case/NN/case for/IN/for deletion/NN/deletion /,/, x/NN/x is/VBZ/is the/DT/the leaf/NN/leaf in/IN/in that/DT/that case/NNP/case. if/IN/if x/NN/x has/VBZ/has only/RB/only 1/CD/1 child/NN/child even/RB/even then/RB/then the/DT/the case/NN/case will/MD/will be/VB/be very/RB/very easy/JJ/easy and/CC/and we/PRP/we will/MD/will see/VB/see all/DT/all of/IN/of that/DT/that and/CC/and when/WRB/when x/NN/x has/VBZ/has 2/CD/2 children/NNS/children it/PRP/it is/VBZ/is slightly/RB/slightly trickier/JJR/trickier but/CC/but still/RB/still fairly/RB/fairly straight/JJ/straight forward/NNP/forward. when/WRB/when x/NN/x has/VBZ/has no/DT/no children/NNS/children then/RB/then deletion/NN/deletion is/VBZ/is trivial/NNP/trivial. why/WRB/why is/VBZ/is that/IN/that because/IN/because the/DT/the point/NN/point b/NN/b is/VBZ/is the/DT/the node/NN/node x/NN/x /,/, it/PRP/it does/VBZ/does not/RB/not have/VB/have any/DT/any children/NNS/children so/RB/so it/PRP/it is/VBZ/is a/DT/a leaf/NNP/leaf. i/PRP/i need/VBP/need to/TO/to delete/VB/delete the/DT/the node/NN/node x/NNP/x. i/PRP/i should/MD/should just/RB/just cut/VB/cut this/DT/this length/NN/length which/WDT/which means/VBZ/means we/PRP/we will/MD/will have/VB/have to/TO/to change/VB/change either/DT/either the/DT/the left/NN/left child/NN/child or/CC/or the/DT/the right/NN/right child/NN/child of/IN/of this/DT/this parent/NNP/parent. in/IN/in this/DT/this case/NN/case node/NN/node b/NN/b was/VBD/was the/DT/the right/JJ/right child/NN/child of/IN/of the/DT/the parent/NN/parent a/DT/a /,/, so/RB/so we/PRP/we have/VBP/have to/TO/to set/VB/set the/DT/the right/NN/right child/NN/child of/IN/of a/DT/a to/TO/to null/NNP/null. if/IN/if b/NN/b were/VBD/were the/DT/the left/VBN/left child/NN/child then/RB/then we/PRP/we would/MD/would have/VB/have set/VBN/set the/DT/the left/NN/left child/NN/child to/TO/to null/NNP/null. the/DT/the 2nd/CD/2nd diagram/NN/diagram in/IN/in the/DT/the below/NN/below slide/NN/slide is/VBZ/is the/DT/the tree/NN/tree that/IN/that would/MD/would be/VB/be left/VBN/left after/IN/after the/DT/the deletion/NNP/deletion. if/IN/if the/DT/the node/NN/node that/IN/that you/PRP/you are/VBP/are trying/VBG/trying to/TO/to delete/VB/delete is/VBZ/is the/DT/the leaf/NN/leaf node/NN/node then/RB/then the/DT/the problem/NN/problem is/VBZ/is trivial/NNP/trivial. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 09/CD/09 /CD/) what/WP/what happens/NNS/happens if/IN/if the/DT/the node/NN/node that/IN/that you/PRP/you are/VBP/are trying/VBG/trying to/TO/to delete/VB/delete has/VBZ/has only/RB/only one/CD/one child/NN/child ?/./? from/IN/from the/DT/the slide/NN/slide given/VBN/given below/IN/below /,/, you/PRP/you are/VBP/are trying/VBG/trying to/TO/to delete/VB/delete a/DT/a /,/, it/PRP/it has/VBZ/has only/RB/only 1/CD/1 child/NN/child which/WDT/which is/VBZ/is b/NNP/b. a/DT/a does/VBZ/does not/RB/not have/VB/have a/DT/a left/VBN/left child/NNP/child. the/DT/the operation/NN/operation is/VBZ/is like/IN/like that/DT/that you/PRP/you can/MD/can think/VB/think the/DT/the part/NN/part abd/VBD/abd as/IN/as a/DT/a linked/VBN/linked list/NNP/list. it/PRP/it is/VBZ/is just/RB/just like/IN/like a/DT/a linked/VBN/linked list/NN/list and/CC/and you/PRP/you are/VBP/are trying/VBG/trying to/TO/to delete/VB/delete a/DT/a node/NN/node from/IN/from the/DT/the linked/VBN/linked list/NNP/list. you/PRP/you take/VBP/take the/DT/the previous/JJ/previous node/NN/node which/WDT/which will/MD/will be/VB/be d/VBN/d and/CC/and you/PRP/you will/MD/will make/VB/make its/PRP$/its left/VBN/left child/NN/child point/NN/point to/TO/to b/NNP/b. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 4/CD/4 /:/: 54/CD/54 /CD/) effectively/RB/effectively you/PRP/you are/VBP/are removing/VBG/removing the/DT/the 2/CD/2 links/NNS/links which/WDT/which is/VBZ/is coming/VBG/coming from/IN/from a/DT/a and/CC/and you/PRP/you are/VBP/are establishing/VBG/establishing the/DT/the link/NN/link directly/RB/directly from/IN/from d/JJ/d to/TO/to b/NNP/b. are/VBP/are you/PRP/you convinced/VBD/convinced that/IN/that this/DT/this would/MD/would maintain/VB/maintain the/DT/the search/NN/search property/NNP/property. why/WRB/why should/MD/should b/VB/b be/VB/be on/IN/on the/DT/the left/NN/left of/IN/of d/NN/d and/CC/and not/RB/not on/IN/on the/DT/the right/NN/right of/IN/of d/NN/d ?/./? because/IN/because b/NN/b is/VBZ/is less/JJR/less than/IN/than d/NN/d /,/, and/CC/and b/NN/b is/VBZ/is in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of d/NNP/d. we/PRP/we would/MD/would make/VB/make b/NN/b as/IN/as the/DT/the left/NN/left child/NN/child and/CC/and everything/NN/everything that/IN/that is/VBZ/is below/IN/below b/NN/b that/IN/that is/VBZ/is all/DT/all the/DT/the descendants/NNS/descendants of/IN/of b/NN/b are/VBP/are also/RB/also less/RBR/less than/IN/than d/NNP/d. because/IN/because they/PRP/they are/VBP/are all/RB/all in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of d/NNP/d. we/PRP/we will/MD/will just/RB/just continue/VB/continue with/IN/with them/PRP/them as/IN/as there/EX/there is/VBZ/is no/DT/no change/NNP/change. the/DT/the only/JJ/only change/NN/change that/WDT/that happens/VBZ/happens is/VBZ/is that/IN/that the/DT/the 2/CD/2 links/NNS/links from/IN/from a/DT/a go/NN/go away/RB/away and/CC/and you/PRP/you set/VBD/set up/RP/up 1/CD/1 link/NN/link from/IN/from b/NN/b to/TO/to d/NNP/d. so/RB/so very/RB/very little/JJ/little has/VBZ/has to/TO/to be/VB/be done/VBN/done in/IN/in this/DT/this case/NNP/case. in/IN/in the/DT/the above/NN/above slide/NN/slide 2nd/CD/2nd diagram/NN/diagram will/MD/will be/VB/be the/DT/the new/JJ/new setting/NN/setting or/CC/or this/DT/this is/VBZ/is what/WP/what will/MD/will happen/VB/happen after/IN/after the/DT/the deletion/NNP/deletion. you/PRP/you have/VBP/have d/VBN/d /,/, b/NN/b and/CC/and f/NN/f but/CC/but a/DT/a goes/VBZ/goes away/NNP/away. the/DT/the 3rd/JJ/3rd case/NN/case is/VBZ/is when/WRB/when the/DT/the node/NN/node to/TO/to be/VB/be deleted/VBN/deleted has/VBZ/has 2/CD/2 children/NNP/children. x/NN/x is/VBZ/is the/DT/the reference/NN/reference to/TO/to the/DT/the node/NN/node which/WDT/which is/VBZ/is to/TO/to be/VB/be deleted/NNP/deleted. the/DT/the node/NN/node to/TO/to be/VB/be deleted/VBN/deleted is/VBZ/is the/DT/the one/CD/one containing/VBG/containing d/NN/d and/CC/and it/PRP/it has/VBZ/has 2/CD/2 children/NNP/children. since/IN/since it/PRP/it has/VBZ/has 2/CD/2 children/NNS/children let/VBP/let us/PRP/us do/VBP/do the/DT/the following/VBG/following /,/, it/PRP/it has/VBZ/has a/DT/a left/VBN/left sub/NN/sub tree/NN/tree and/CC/and a/DT/a right/NN/right sub/NN/sub tree/NNP/tree. we/PRP/we find/VBP/find the/DT/the predecessor/NN/predecessor of/IN/of d/NNP/d. we/PRP/we have/VBP/have seen/VBN/seen how/WRB/how to/TO/to do/VB/do successor/NN/successor but/CC/but we/PRP/we also/RB/also said/VBD/said that/IN/that you/PRP/you can/MD/can equally/RB/equally find/VB/find the/DT/the predecessor/NNP/predecessor. how/WRB/how do/VBP/do you/PRP/you find/VB/find the/DT/the predecessor/NN/predecessor ?/./? the/DT/the predecessor/NN/predecessor of/IN/of d/NN/d would/MD/would be/VB/be the/DT/the largest/JJS/largest element/NN/element in/IN/in the/DT/the left/NN/left subtree/NNP/subtree. we/PRP/we just/RB/just have/VBP/have to/TO/to come/VB/come left/VBN/left and/CC/and keep/VB/keep going/VBG/going right/RB/right /,/, since/IN/since b/NN/b does/VBZ/does not/RB/not have/VB/have right/RB/right child/VBN/child so/RB/so b/RB/b is/VBZ/is essentially/RB/essentially the/DT/the predecessor/NN/predecessor of/IN/of d/NN/d in/IN/in this/DT/this example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 40/CD/40 /CD/) how/WRB/how many/JJ/many children/NNS/children does/VBZ/does b/NN/b have/VBP/have ?/./? b/NN/b can/MD/can have/VB/have 1/CD/1 /,/, it/PRP/it can/MD/can have/VB/have a/DT/a left/VBN/left child/NN/child nothing/NN/nothing is/VBZ/is preventing/VBG/preventing us/PRP/us from/IN/from b/NN/b having/VBG/having a/DT/a left/NN/left child/NNP/child. i/PRP/i could/MD/could have/VB/have a/DT/a situation/NN/situation in/IN/in which/WDT/which let/NN/let us/PRP/us say/VBP/say t/NN/t /,/, you/PRP/you could/MD/could have/VB/have something/NN/something like/IN/like t/NNP/t. but/CC/but b/NN/b does/VBZ/does not/RB/not have/VB/have a/DT/a right/NN/right child/NN/child /,/, there/EX/there is/VBZ/is nothing/NN/nothing in/IN/in the/DT/the right/NN/right side/NN/side of/IN/of b/NNP/b. if/IN/if b/NN/b had/VBD/had a/DT/a right/NN/right child/NN/child then/RB/then it/PRP/it would/MD/would not/RB/not have/VB/have been/VBN/been the/DT/the predecessor/NN/predecessor of/IN/of d/NN/d /,/, because/IN/because we/PRP/we would/MD/would have/VB/have gone/VBN/gone down/RP/down further/NNP/further. b/NN/b has/VBZ/has only/RB/only 1/CD/1 child/NN/child or/CC/or no/DT/no child/NN/child /,/, the/DT/the node/NN/node t/NN/t need/VBP/need not/RB/not be/VB/be there/NNP/there. that/IN/that is/VBZ/is what/WP/what is/VBZ/is being/VBG/being said/VBN/said here/RB/here b/NN/b or/CC/or y/NN/y is/VBZ/is the/DT/the same/JJ/same thing/NNP/thing. the/DT/the y/NN/y is/VBZ/is the/DT/the reference/NN/reference and/CC/and b/NN/b is/VBZ/is the/DT/the content/NN/content sometimes/RB/sometimes i/PRP/i am/VBP/am calling/VBG/calling it/PRP/it b/NN/b /,/, sometimes/RB/sometimes y/JJ/y but/CC/but this/DT/this has/VBZ/has atmost/VBN/atmost 1/CD/1 child/NNP/child. we/PRP/we are/VBP/are going/VBG/going to/TO/to delete/VB/delete b/NN/b and/CC/and essentially/RB/essentially we/PRP/we are/VBP/are going/VBG/going to/TO/to move/VB/move b/NN/b to/TO/to d/NNP/d. that/IN/that is/VBZ/is we/PRP/we are/VBP/are not/RB/not establishing/VBG/establishing such/JJ/such a/DT/a link/NN/link from/IN/from b/NN/b to/TO/to d/VB/d /,/, but/CC/but we/PRP/we are/VBP/are going/VBG/going to/TO/to replace/VB/replace d/NN/d with/IN/with b/NN/b and/CC/and delete/JJ/delete the/DT/the node/NN/node b/NNP/b. why/WRB/why would/MD/would the/DT/the search/NN/search property/NN/property not/RB/not get/VB/get violated/VBN/violated by/IN/by moving/NN/moving the/DT/the content/NN/content of/IN/of b/NN/b to/TO/to d/VB/d ?/./? since/IN/since b/NN/b was/VBD/was the/DT/the successor/NN/successor of/IN/of d/NN/d /,/, everything/NN/everything in/IN/in this/DT/this left/NN/left subtree/NN/subtree was/VBD/was less/JJR/less than/IN/than d/NN/d and/CC/and b/NN/b is/VBZ/is the/DT/the largest/JJS/largest element/NN/element in/IN/in this/DT/this left/NN/left subtree/NNP/subtree. everything/NN/everything in/IN/in this/DT/this left/NN/left subtree/NN/subtree is/VBZ/is also/RB/also less/JJR/less than/IN/than b/NN/b /,/, if/IN/if i/PRP/i move/VBP/move b/NN/b to/TO/to d/VB/d there/RB/there is/VBZ/is no/DT/no problem/NN/problem as/IN/as far/RB/far as/IN/as the/DT/the search/NN/search property/NN/property is/VBZ/is concerned/NNP/concerned. everything/NN/everything in/IN/in the/DT/the right/NN/right subtree/NN/subtree is/VBZ/is more/RBR/more then/RB/then d/VBD/d and/CC/and so/RB/so it/PRP/it is/VBZ/is also/RB/also more/RBR/more than/IN/than b/NNP/b. by/IN/by moving/VBG/moving b/NN/b to/TO/to d/VB/d again/RB/again the/DT/the search/NN/search property/NN/property is/VBZ/is not/RB/not violated/NNP/violated. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 38/CD/38 /CD/) i/PRP/i can/MD/can move/VB/move b/NN/b to/TO/to d/VB/d and/CC/and can/MD/can i/VB/i delete/JJ/delete b/NN/b easily/NNP/easily. because/IN/because b/NN/b has/VBZ/has either/DT/either no/DT/no child/NN/child or/CC/or 1/CD/1 child/NNP/child. we/PRP/we have/VBP/have already/RB/already seen/VBN/seen how/WRB/how to/TO/to delete/VB/delete a/DT/a node/NN/node which/WDT/which has/VBZ/has no/DT/no child/NN/child or/CC/or only/RB/only 1/CD/1 child/NNP/child. if/IN/if b/NN/b had/VBD/had a/DT/a left/VBN/left subtree/NN/subtree and/CC/and suppose/VB/suppose i/PRP/i decide/VBP/decide to/TO/to move/VB/move b/NN/b to/TO/to d/VB/d and/CC/and there/EX/there is/VBZ/is nothing/NN/nothing left/VBN/left so/RB/so we/PRP/we will/MD/will delete/VB/delete the/DT/the node/NN/node b/NNP/b. when/WRB/when we/PRP/we delete/VBP/delete the/DT/the node/NN/node b/NN/b /,/, what/WP/what happens/NNS/happens we/PRP/we will/MD/will make/VB/make the/DT/the right/NN/right child/NN/child of/IN/of a/DT/a point/NN/point to/TO/to that/DT/that node/NNP/node. the/DT/the node/NN/node b/NN/b gets/NNS/gets deleted/VBD/deleted and/CC/and the/DT/the link/NN/link corresponding/VBG/corresponding to/TO/to that/DT/that goes/VBZ/goes away/RB/away and/CC/and we/PRP/we create/VBP/create 1/CD/1 link/NN/link and/CC/and it/PRP/it goes/VBZ/goes to/TO/to the/DT/the point/NN/point where/WRB/where it/PRP/it is/VBZ/is directed/VBN/directed and/CC/and b/NN/b moves/NNS/moves up/NNP/up. that/IN/that is/VBZ/is the/DT/the operation/NN/operation and/CC/and now/RB/now we/PRP/we have/VBP/have covered/VBN/covered all/DT/all the/DT/the 3/CD/3 cases/NNP/cases. the/DT/the 1st/CD/1st case/NN/case was/VBD/was when/WRB/when there/EX/there were/VBD/were no/DT/no children/NNS/children /,/, 2nd/CD/2nd case/NN/case was/VBD/was 1/CD/1 child/NN/child and/CC/and 3rd/CD/3rd case/NN/case was/VBD/was 2/CD/2 children/NNP/children. we/PRP/we said/VBD/said in/IN/in the/DT/the 3rd/JJ/3rd case/NN/case we/PRP/we will/MD/will have/VB/have to/TO/to move/VB/move the/DT/the content/NN/content of/IN/of b/NN/b to/TO/to d/VB/d and/CC/and then/RB/then delete/JJ/delete the/DT/the node/NN/node b/NNP/b. we/PRP/we worked/VBD/worked with/IN/with the/DT/the predecessor/NN/predecessor but/CC/but we/PRP/we could/MD/could also/RB/also have/VB/have worked/VBN/worked with/IN/with the/DT/the successor/NN/successor /,/, since/IN/since d/NN/d has/VBZ/has 2/CD/2 children/NNS/children we/PRP/we can/MD/can also/RB/also find/VB/find the/DT/the successor/NN/successor of/IN/of this/DT/this node/NN/node by/IN/by going/VBG/going once/RB/once right/RB/right and/CC/and then/RB/then keep/VB/keep going/VBG/going left/NNP/left. the/DT/the same/JJ/same kind/NN/kind of/IN/of a/DT/a thing/NN/thing can/MD/can be/VB/be done/VBN/done even/RB/even there/RB/there /,/, we/PRP/we could/MD/could have/VB/have replaced/VBN/replaced d/NN/d with/IN/with its/PRP$/its successor/NN/successor instead/RB/instead of/IN/of its/PRP$/its predecessor/NNP/predecessor. but/CC/but in/IN/in this/DT/this example/NN/example i/PRP/i have/VBP/have shown/VBN/shown the/DT/the predecessor/NNP/predecessor. what/WP/what do/VBP/do you/PRP/you think/VB/think is/VBZ/is the/DT/the running/VBG/running time/NN/time of/IN/of the/DT/the delete/JJ/delete operation/NN/operation ?/./? suppose/NN/suppose you/PRP/you do/VBP/do not/RB/not even/RB/even have/VB/have to/TO/to search/VB/search for/IN/for the/DT/the node/NNP/node. i/PRP/i tell/VBP/tell you/PRP/you this/DT/this is/VBZ/is the/DT/the node/NN/node and/CC/and i/PRP/i give/VBP/give you/PRP/you the/DT/the reference/NN/reference to/TO/to the/DT/the node/NN/node that/IN/that you/PRP/you want/VBP/want to/TO/to delete/NNP/delete. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it takes/VBZ/takes to/TO/to delete/VB/delete ?/./? in/IN/in the/DT/the 1st/CD/1st case/NN/case when/WRB/when the/DT/the node/NN/node is/VBZ/is a/DT/a leaf/NN/leaf /,/, how/WRB/how much/JJ/much time/NN/time it/PRP/it would/MD/would take/VB/take ?/./? order/NN/order one/CD/one because/IN/because it/PRP/it just/RB/just needs/VBZ/needs to/TO/to go/VB/go the/DT/the parent/NNP/parent. there/RB/there is/VBZ/is a/DT/a pointer/NN/pointer in/IN/in the/DT/the node/NN/node /,/, reference/NN/reference to/TO/to the/DT/the parent/NN/parent node/NN/node i/PRP/i just/RB/just go/VBP/go to/TO/to the/DT/the parent/NN/parent and/CC/and i/PRP/i just/RB/just update/JJ/update the/DT/the link/NN/link that/IN/that is/VBZ/is the/DT/the right/NN/right or/CC/or the/DT/the left/NN/left child/NN/child of/IN/of the/DT/the parent/NNP/parent. i/PRP/i am/VBP/am giving/VBG/giving the/DT/the reference/NN/reference of/IN/of the/DT/the particular/JJ/particular node/NN/node which/WDT/which has/VBZ/has to/TO/to be/VB/be deleted/NNP/deleted. in/IN/in every/DT/every node/NN/node we/PRP/we also/RB/also have/VBP/have a/DT/a parent/NN/parent /,/, left/VBN/left child/NN/child and/CC/and a/DT/a right/NN/right child/NNP/child. we/PRP/we can/MD/can always/RB/always go/VB/go back/RB/back to/TO/to the/DT/the parent/NN/parent and/CC/and update/VB/update the/DT/the content/NN/content to/TO/to show/VB/show the/DT/the deletion/NN/deletion operation/NNP/operation. in/IN/in the/DT/the 2nd/JJ/2nd case/NN/case if/IN/if we/PRP/we are/VBP/are deleting/VBG/deleting the/DT/the node/NN/node a/DT/a /,/, then/RB/then once/RB/once again/RB/again we/PRP/we need/VBP/need go/VBP/go to/TO/to the/DT/the parent/NN/parent and/CC/and modify/NN/modify its/PRP$/its left/NN/left child/NN/child /,/, again/RB/again a/DT/a constant/NN/constant time/NN/time operation/NNP/operation. in/IN/in which/WDT/which case/NN/case do/VBP/do we/PRP/we take/VB/take more/JJR/more time/NN/time ?/./? in/IN/in the/DT/the case/NN/case 3/CD/3 /,/, because/IN/because here/RB/here we/PRP/we have/VBP/have to/TO/to find/VB/find a/DT/a predecessor/NN/predecessor or/CC/or a/DT/a successor/NNP/successor. predecessor/NN/predecessor can/MD/can take/VB/take time/NN/time as/IN/as large/JJ/large as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree because/IN/because we/PRP/we will/MD/will have/VB/have to/TO/to go/VB/go once/RB/once left/VBN/left and/CC/and then/RB/then keep/VB/keep going/VBG/going right/NNP/right. we/PRP/we can/MD/can take/VB/take in/IN/in the/DT/the worst/JJS/worst case/NN/case time/NN/time proportional/JJ/proportional to/TO/to the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. case/NN/case 3/CD/3 takes/VBZ/takes more/JJR/more time/NN/time and/CC/and the/DT/the time/NN/time taken/VBN/taken in/IN/in the/DT/the worst/JJS/worst case/NN/case is/VBZ/is the/DT/the order/NN/order of/IN/of the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 15/CD/15 /CD/) the/DT/the pseudo-code/JJ/pseudo-code for/IN/for deletion/NN/deletion is/VBZ/is given/VBN/given in/IN/in the/DT/the below/NN/below slide/NN/slide /,/, so/RB/so that/IN/that you/PRP/you will/MD/will understand/VB/understand roughly/RB/roughly what/WP/what is/VBZ/is happening/VBG/happening and/CC/and we/PRP/we do/VBP/do not/RB/not have/VB/have to/TO/to look/VB/look in/IN/in detail/NNP/detail. if/IN/if the/DT/the left/NN/left or/CC/or the/DT/the right/NN/right is/VBZ/is nil/NN/nil then/RB/then we/PRP/we know/VBP/know that/IN/that either/DT/either it/PRP/it is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node or/CC/or it/PRP/it is/VBZ/is a/DT/a node/NN/node with/IN/with only/RB/only 1/CD/1 child/NNP/child. then/RB/then in/IN/in that/DT/that case/NN/case /,/, z/NN/z was/VBD/was the/DT/the node/NN/node which/WDT/which i/PRP/i am/VBP/am trying/VBG/trying to/TO/to delete/NNP/delete. so/RB/so y/JJ/y ?/./? z/NN/z and/CC/and we/PRP/we look/VBP/look at/IN/at the/DT/the treesuccessor/NN/treesuccessor /:/( z/NN/z /:/) /./. i/PRP/i am/VBP/am not/RB/not completely/RB/completely sure/JJ/sure that/IN/that what/WP/what i/PRP/i have/VBP/have is/VBZ/is right/VBN/right /,/, so/RB/so let/VB/let us/PRP/us just/RB/just skip/VBP/skip this/NNP/this. you/PRP/you would/MD/would have/VB/have understood/NN/understood the/DT/the delete/JJ/delete operation/NNP/operation. i/PRP/i might/MD/might have/VB/have made/VBN/made some/DT/some mistakes/NNS/mistakes somewhere/VBP/somewhere in/IN/in the/DT/the pseudocode/NNP/pseudocode. predecessor/NN/predecessor or/CC/or successor/NN/successor is/VBZ/is the/DT/the same/JJ/same thing/NN/thing /,/, we/PRP/we can/MD/can also/RB/also work/VB/work with/IN/with the/DT/the successor/NN/successor that/IN/that is/VBZ/is what/WP/what i/PRP/i said/NNP/said. for/IN/for the/DT/the successor/NN/successor we/PRP/we have/VBP/have to/TO/to search/VB/search in/IN/in the/DT/the right/NN/right tree/NNP/tree. i/PRP/i do/VBP/do not/RB/not think/VB/think that/IN/that it/PRP/it is/VBZ/is very/RB/very critical/JJ/critical but/CC/but let/VB/let us/PRP/us skip/VB/skip this/DT/this thing/NN/thing for/IN/for now/NNP/now. you/PRP/you understood/VBD/understood the/DT/the delete/JJ/delete operation/NN/operation and/CC/and the/DT/the pseudo/NN/pseudo code/NN/code you/PRP/you can/MD/can all/DT/all write/VB/write yourself/NNP/yourself. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 51/CD/51 /CD/) suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a binary/JJ/binary search/NN/search tree/NN/tree and/CC/and i/PRP/i do/VBP/do an/DT/an in-order/JJ/in-order traversal/NN/traversal of/IN/of this/DT/this binary/JJ/binary search/NN/search tree/NNP/tree. what/WP/what does/VBZ/does in-order/JJ/in-order do/VB/do ?/./? first/JJ/first the/DT/the left/NN/left then/RB/then the/DT/the 5th/JJ/5th node/NN/node then/RB/then the/DT/the right/NNP/right. first/RB/first we/PRP/we will/MD/will be/VB/be printing/VBG/printing out/RP/out all/DT/all the/DT/the keys/NNS/keys on/IN/on the/DT/the left/NNP/left. suppose/NN/suppose all/DT/all i/PRP/i do/VBP/do when/WRB/when i/PRP/i visit/VBP/visit a/DT/a node/NN/node is/VBZ/is print/JJ/print out/IN/out the/DT/the key/NNP/key. that/IN/that is/VBZ/is what/WP/what my/PRP$/my traversal/NN/traversal procedure/NN/procedure is/VBZ/is /,/, first/RB/first i/PRP/i will/MD/will print/VB/print out/RP/out the/DT/the keys/NNS/keys which/WDT/which are/VBP/are on/IN/on the/DT/the left/NN/left in/IN/in some/DT/some order/NNP/order. then/RB/then i/PRP/i will/MD/will print/VB/print the/DT/the key/JJ/key which/WDT/which is/VBZ/is in/IN/in the/DT/the center/NN/center and/CC/and then/RB/then i/PRP/i will/MD/will print/VB/print out/RP/out the/DT/the keys/NNS/keys on/IN/on the/DT/the right/NNP/right. this/DT/this means/VBZ/means that/IN/that i/PRP/i will/MD/will print/VB/print out/RP/out the/DT/the root/NN/root key/NN/key 5/CD/5 after/IN/after i/PRP/i have/VBP/have print/JJ/print out/IN/out the/DT/the left/NN/left and/CC/and before/IN/before i/PRP/i print/VBP/print out/RP/out the/DT/the right/NNP/right. all/DT/all the/DT/the keys/NNS/keys on/IN/on the/DT/the left/NN/left are/VBP/are less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 5/CD/5 and/CC/and all/DT/all of/IN/of the/DT/the keys/NNS/keys on/IN/on the/DT/the right/NN/right are/VBP/are greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 5/CD/5 /,/, which/WDT/which means/VBZ/means that/DT/that 5/CD/5 really/RB/really comes/VBZ/comes at/IN/at the/DT/the right/NN/right place/NN/place in/IN/in the/DT/the ordering/NN/ordering of/IN/of these/DT/these keys/NNP/keys. because/IN/because everything/NN/everything which/WDT/which is/VBZ/is less/RBR/less than/IN/than 5/CD/5 comes/NNS/comes before/IN/before 5/CD/5 and/CC/and everything/NN/everything that/IN/that is/VBZ/is more/RBR/more than/IN/than 5/CD/5 comes/NNS/comes after/IN/after 5/CD/5. hence/NN/hence 5/CD/5 come/NN/come really/RB/really at/IN/at the/DT/the right/NN/right place/NN/place and/CC/and the/DT/the same/JJ/same argument/NN/argument can/MD/can be/VB/be set/VBN/set for/IN/for every/DT/every key/JJ/key not/RB/not just/RB/just the/DT/the root/NN/root key/NNP/key. when/WRB/when will/MD/will you/PRP/you print/VB/print 3/CD/3 out/IN/out ?/./? after/IN/after i/PRP/i have/VBP/have printed/VBN/printed everything/VBG/everything to/TO/to the/DT/the left/NN/left which/WDT/which means/VBZ/means everything/NN/everything that/IN/that is/VBZ/is smaller/JJR/smaller than/IN/than 3/CD/3 will/MD/will come/VB/come before/IN/before 3/CD/3 and/CC/and then/RB/then i/PRP/i will/MD/will print/VB/print out/RP/out things/NNS/things on/IN/on the/DT/the right/NNP/right. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 54/CD/54 /CD/) in/IN/in in-order/JJ/in-order traversal/NN/traversal /,/, if/IN/if you/PRP/you were/VBD/were to/TO/to just/RB/just to/TO/to look/VB/look at/IN/at this/DT/this and/CC/and see/VB/see in/IN/in what/WP/what order/NN/order you/PRP/you would/MD/would print/VB/print out/NNP/out. first/RB/first you/PRP/you will/MD/will come/VB/come to/TO/to 3/CD/3 and/CC/and then/RB/then go/VB/go left/VBN/left /,/, then/RB/then come/VBN/come to/TO/to 2/CD/2 and/CC/and print/NN/print this/DT/this one/NNP/one. then/RB/then you/PRP/you will/MD/will print/VB/print 3/CD/3 /,/, 5/CD/5 then/RB/then you/PRP/you will/MD/will come/VB/come right/RB/right and/CC/and then/RB/then go/VB/go left/VBN/left and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is the/DT/the order/NN/order in/IN/in which/WDT/which you/PRP/you will/MD/will print/VB/print the/DT/the keys/NNP/keys. the/DT/the property/NN/property of/IN/of the/DT/the in-order/JJ/in-order traversal/NN/traversal of/IN/of a/DT/a binary/JJ/binary search/NN/search tree/NN/tree is/VBZ/is that/IN/that it/PRP/it prints/VBZ/prints out/RP/out the/DT/the keys/NNS/keys in/IN/in increasing/VBG/increasing order/NNP/order. this/DT/this can/MD/can be/VB/be a/DT/a good/JJ/good method/NN/method of/IN/of sorting/VBG/sorting a/DT/a bunch/NN/bunch of/IN/of keys/NNP/keys. i/PRP/i will/MD/will call/VB/call this/DT/this the/DT/the binary/NN/binary search/NN/search tree/NN/tree base/NN/base sorting/VBG/sorting procedure/NNP/procedure. what/WP/what is/VBZ/is the/DT/the method/NN/method ?/./? you/PRP/you have/VBP/have a/DT/a bunch/NN/bunch of/IN/of keys/NNS/keys which/WDT/which you/PRP/you want/VBP/want to/TO/to sort/NNP/sort. you/PRP/you first/RB/first insert/VB/insert all/DT/all the/DT/the keys/NNS/keys into/IN/into a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. that/IN/that is/VBZ/is what/WP/what you/PRP/you are/VBP/are doing/VBG/doing in/IN/in the/DT/the slide/NN/slide given/VBN/given below/NNP/below. you/PRP/you are/VBP/are taking/VBG/taking all/DT/all the/DT/the keys/NNS/keys and/CC/and inserting/VBG/inserting them/PRP/them into/IN/into a/DT/a binary/JJ/binary search/NN/search tree/NN/tree and/CC/and then/RB/then just/RB/just do/VBP/do in-order/JJ/in-order traversal/NN/traversal of/IN/of this/DT/this tree/NNP/tree. you/PRP/you will/MD/will get/VB/get all/DT/all the/DT/the keys/NNS/keys in/IN/in an/DT/an increasing/VBG/increasing order/NN/order that/IN/that is/VBZ/is you/PRP/you have/VBP/have sorted/VBN/sorted a/DT/a set/NN/set of/IN/of keys/NNP/keys. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 31/CD/31 /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this procedure/NN/procedure take/VB/take ?/./? we/PRP/we have/VBP/have to/TO/to insert/VB/insert all/DT/all the/DT/the keys/NNS/keys and/CC/and then/RB/then we/PRP/we have/VBP/have to/TO/to do/VB/do an/DT/an in-order/JJ/in-order tree/NN/tree work/NNP/work. let/NN/let us/PRP/us first/RB/first look/VBP/look at/IN/at how/WRB/how much/JJ/much time/NN/time does/VBZ/does the/DT/the in-order/NN/in-order tree/NN/tree work/NN/work take/NNP/take. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to traverse/VB/traverse the/DT/the nodes/NNS/nodes of/IN/of a/DT/a tree/NN/tree in/IN/in in-order/JJ/in-order ?/./? it/PRP/it is/VBZ/is order/NN/order n/NNP/n. why/WRB/why it/PRP/it is/VBZ/is order/NN/order n/NN/n ?/./? we/PRP/we have/VBP/have to/TO/to print/VB/print all/PDT/all the/DT/the node/NN/node but/CC/but i/PRP/i might/MD/might take/VB/take much/JJ/much more/RBR/more time/NNP/time. i/PRP/i need/VBP/need atleast/JJ/atleast order/NN/order n/NN/n time/NN/time may/MD/may be/VB/be i/PRP/i need/VBP/need more/JJR/more time/NNP/time. we/PRP/we will/MD/will look/VB/look at/IN/at this/DT/this question/NN/question later/NNP/later. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to do/VB/do an/DT/an in-order/JJ/in-order tree/NN/tree work/NN/work ?/./? actually/RB/actually it/PRP/it just/RB/just takes/VBZ/takes linear/JJ/linear time/NN/time that/WDT/that is/VBZ/is it/PRP/it takes/VBZ/takes order/NN/order n/NN/n time/NNP/time. we/PRP/we will/MD/will not/RB/not do/VB/do it/PRP/it in/IN/in todays/NNS/todays class/NN/class /,/, we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to argue/VB/argue that/IN/that it/PRP/it just/RB/just takes/VBZ/takes order/NN/order n/NN/n times/NNP/times. how/WRB/how much/JJ/much does/VBZ/does the/DT/the part/NN/part which/WDT/which is/VBZ/is given/VBN/given below/IN/below takes/NNS/takes /,/, when/WRB/when i/PRP/i am/VBP/am inserting/VBG/inserting all/DT/all the/DT/the elements/NNS/elements into/IN/into a/DT/a tree/JJ/tree ?/./? for/IN/for i/PRP/i ?/./? 1/CD/1 to/TO/to n/VB/n treeinsert/NN/treeinsert /:/( t/NN/t /,/, a/DT/a /NN/[ i/PRP/i /VBP/] /:/) it/PRP/it is/VBZ/is n/VBN/n log/NN/log n/NNP/n. but/CC/but why/WRB/why it/PRP/it is/VBZ/is n/VBN/n log/NN/log n/NN/n ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 14/CD/14 /CD/) this/DT/this is/VBZ/is my/PRP$/my bst/NN/bst sorting/VBG/sorting procedure/NNP/procedure. i/PRP/i want/VBP/want to/TO/to sort/VB/sort the/DT/the keys/NNS/keys given/VBN/given in/IN/in the/DT/the above/NN/above slide/NN/slide /,/, i/PRP/i insert/VBP/insert them/PRP/them into/IN/into a/DT/a binary/JJ/binary search/NN/search tree/NN/tree one/CD/one after/IN/after the/DT/the other/NNP/other. first/RB/first 5/CD/5 then/RB/then 10/CD/10 /,/, 7/CD/7 then/RB/then when/WRB/when i/PRP/i insert/VBP/insert 1/CD/1 it/PRP/it will/MD/will go/VB/go as/RB/as the/DT/the left/NN/left child/NN/child of/IN/of 5/CD/5 then/RB/then when/WRB/when i/PRP/i insert/VBP/insert 3/CD/3 it/PRP/it will/MD/will go/VB/go as/RB/as the/DT/the right/NN/right child/NN/child of/IN/of 1/CD/1. when/WRB/when i/PRP/i insert/VBP/insert the/DT/the other/JJ/other 1/CD/1 it/PRP/it will/MD/will go/VB/go as/RB/as the/DT/the left/NN/left child/NN/child of/IN/of 3/CD/3. it/PRP/it depends/VBZ/depends upon/IN/upon how/WRB/how you/PRP/you are/VBP/are doing/VBG/doing it/PRP/it /,/, it/PRP/it could/MD/could also/RB/also have/VB/have come/VBN/come as/RB/as the/DT/the left/NN/left child/NN/child of/IN/of the/DT/the other/JJ/other 1/CD/1 and/CC/and it/PRP/it is/VBZ/is the/DT/the same/JJ/same thing/NNP/thing. and/CC/and 8/CD/8 would/MD/would come/VB/come as/RB/as the/DT/the right/NN/right child/NN/child of/IN/of 7/CD/7 and/CC/and the/DT/the final/JJ/final diagram/NN/diagram in/IN/in the/DT/the above/NN/above slide/NN/slide is/VBZ/is the/DT/the tree/NN/tree you/PRP/you would/MD/would get/NNP/get. if/IN/if you/PRP/you have/VBP/have to/TO/to do/VB/do any/DT/any in-order/JJ/in-order tree/NN/tree work/NN/work on/IN/on this/DT/this tree/NN/tree you/PRP/you would/MD/would get/VB/get exactly/RB/exactly the/DT/the sorted/VBN/sorted sequence/NNP/sequence. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it takes/VBZ/takes to/TO/to insert/VB/insert all/DT/all the/DT/the n/NN/n elements/NNS/elements ?/./? it/PRP/it depends/VBZ/depends upon/IN/upon the/DT/the sequence/NNP/sequence. if/IN/if i/PRP/i were/VBD/were to/TO/to sort/VB/sort let/NN/let us/PRP/us say/VBP/say given/VBN/given a/DT/a set/NN/set of/IN/of numbers/NNS/numbers 1/CD/1 through/IN/through n/NN/n and/CC/and i/PRP/i just/RB/just want/VBP/want to/TO/to sort/VB/sort them/NNP/them. the/DT/the total/JJ/total time/NN/time taken/VBN/taken to/TO/to insert/VB/insert this/DT/this numbers/NNS/numbers is/VBZ/is equal/JJ/equal to/TO/to the/DT/the sum/NN/sum of/IN/of the/DT/the levels/NNS/levels at/IN/at which/WDT/which the/DT/the nodes/VBZ/nodes will/MD/will come/VB/come up/RP/up because/IN/because when/WRB/when i/PRP/i insert/VBP/insert a/DT/a particular/JJ/particular number/NN/number i/PRP/i come/VBP/come down/RB/down the/DT/the tree/NN/tree and/CC/and i/PRP/i insert/VBP/insert it/PRP/it at/IN/at a/DT/a particular/JJ/particular place/NNP/place. the/DT/the number/NN/number of/IN/of levels/NNS/levels i/PRP/i traverse/VBP/traverse or/CC/or the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons i/PRP/i do/VBP/do before/RB/before i/PRP/i insert/VBP/insert it/PRP/it is/VBZ/is exactly/RB/exactly equal/JJ/equal to/TO/to its/PRP$/its level/NNP/level. either/CC/either level/NN/level or/CC/or level/NN/level +/:/+ 1/CD/1 or/CC/or level/NN/level -1/-NONE-/-1 but/CC/but you/PRP/you can/MD/can think/VB/think of/IN/of it/PRP/it as/IN/as the/DT/the level/NN/level for/IN/for now/NNP/now. if/IN/if i/PRP/i had/VBD/had inserted/VBN/inserted the/DT/the numbers/NNS/numbers in/IN/in sorted/JJ/sorted order/NN/order /,/, first/JJ/first i/PRP/i inserted/VBD/inserted 1/CD/1 then/RB/then i/PRP/i inserted/VBD/inserted 2/CD/2 /,/, 3/CD/3 and/CC/and so/RB/so on/NNP/on. what/WP/what is/VBZ/is the/DT/the kind/NN/kind of/IN/of a/DT/a tree/NN/tree i/PRP/i would/MD/would get/VB/get ?/./? i/PRP/i would/MD/would have/VB/have 1/CD/1 followed/VBN/followed by/IN/by 2/CD/2 followed/VBN/followed by/IN/by 3/CD/3 and/CC/and so/RB/so you/PRP/you remember/VBP/remember that/IN/that kind/NN/kind of/IN/of a/DT/a picture/NNP/picture. i/PRP/i would/MD/would get/VB/get a/DT/a tree/NN/tree some/DT/some thing/NN/thing like/IN/like the/DT/the one/CD/one which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide in/IN/in blue/JJ/blue color/NN/color from/IN/from 1/CD/1 to/TO/to n/NNP/n. what/WP/what is/VBZ/is the/DT/the sum/NN/sum of/IN/of levels/NNS/levels ?/./? it/PRP/it is/VBZ/is from/IN/from 0/-NONE-/0 +/:/+ 1/LS/1 +/:/+ 2/CD/2 +/CD/+ 3/CD/3 ?/./? /CD/( n-1/-NONE-/n-1 /:/) and/CC/and o/NN/o /:/( /:/) is/VBZ/is the/DT/the series/NN/series which/WDT/which sums/NNS/sums to/TO/to /./. that/IN/that is/VBZ/is not/RB/not good/JJ/good /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for insertion/NN/insertion could/MD/could be/VB/be as/RB/as bad/JJ/bad as/IN/as /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 15/CD/15 /CD/) is/VBZ/is this/DT/this clear/JJ/clear to/TO/to everyone/NN/everyone and/CC/and this/DT/this bring/NN/bring backs/VBZ/backs the/DT/the question/NN/question that/IN/that we/PRP/we had/VBD/had asked/VBN/asked in/IN/in the/DT/the last/JJ/last class/NNP/class. i/PRP/i take/VBP/take a/DT/a random/NN/random permutation/NN/permutation of/IN/of the/DT/the elements/NNP/elements. there/RB/there are/VBP/are n/VBN/n factorial/JJ/factorial different/JJ/different permutations/NNS/permutations i/PRP/i take/VBP/take one/CD/one of/IN/of them/PRP/them at/IN/at random/NNP/random. i/PRP/i insert/VBP/insert the/DT/the elements/NNS/elements in/IN/in this/DT/this particular/JJ/particular order/NNP/order. i/PRP/i want/VBP/want to/TO/to compute/VB/compute the/DT/the time/NN/time it/PRP/it takes/VBZ/takes to/TO/to insert/NNP/insert. the/DT/the time/NN/time required/VBN/required for/IN/for insertion/NN/insertion is/VBZ/is a/DT/a random/NN/random variable/NNP/variable. we/PRP/we saw/VBD/saw an/DT/an example/NN/example where/WRB/where the/DT/the time/NN/time required/VBN/required for/IN/for insertion/NN/insertion could/MD/could be/VB/be as/RB/as bad/JJ/bad as/IN/as /./. that/IN/that is/VBZ/is what/WP/what i/PRP/i showed/VBD/showed you/PRP/you in/IN/in the/DT/the previous/JJ/previous slide/NNP/slide. in/IN/in the/DT/the best/JJS/best case/NN/case it/PRP/it could/MD/could be/VB/be quite/RB/quite small/JJ/small and/CC/and we/PRP/we will/MD/will the/DT/the best/JJS/best case/NNP/case. it/PRP/it is/VBZ/is really/RB/really a/DT/a random/NN/random variable/JJ/variable it/PRP/it depends/VBZ/depends upon/IN/upon the/DT/the sequence/NN/sequence and/CC/and the/DT/the permutation/NN/permutation in/IN/in which/WDT/which we/PRP/we are/VBP/are inserting/VBG/inserting the/DT/the elements/NNP/elements. in/IN/in fact/NN/fact we/PRP/we had/VBD/had discussed/VBN/discussed the/DT/the best/JJS/best case/NN/case in/IN/in the/DT/the previous/JJ/previous class/NN/class /,/, we/PRP/we said/VBD/said the/DT/the first/JJ/first element/NN/element inserted/VBN/inserted should/MD/should be/VB/be then/RB/then it/PRP/it should/MD/should be/VB/be and/CC/and then/RB/then and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 52/CD/52 /CD/) all/DT/all the/DT/the way/NN/way we/PRP/we had/VBD/had not/RB/not computed/VBN/computed the/DT/the total/JJ/total time/NN/time for/IN/for insertion/NNP/insertion. the/DT/the total/JJ/total time/NN/time for/IN/for inserting/NN/inserting these/DT/these n/NN/n elements/NNS/elements is/VBZ/is really/RB/really a/DT/a random/NN/random variable/JJ/variable and/CC/and for/IN/for random/NN/random variables/NNS/variables we/PRP/we compute/VBP/compute what/WP/what is/VBZ/is the/DT/the expectation/NN/expectation of/IN/of the/DT/the random/NN/random variable/NNP/variable. recall/NN/recall what/WP/what is/VBZ/is the/DT/the expectation/NN/expectation of/IN/of a/DT/a random/NN/random variable/JJ/variable ?/./? if/IN/if a/DT/a random/NN/random variable/JJ/variable takes/NNS/takes many/JJ/many different/JJ/different values/NNS/values then/RB/then the/DT/the expectation/NN/expectation of/IN/of the/DT/the random/NN/random variable/JJ/variable is/VBZ/is obtained/VBN/obtained by/IN/by taking/NN/taking the/DT/the average/JJ/average if/IN/if the/DT/the probability/NN/probability of/IN/of each/DT/each value/NN/value is/VBZ/is the/DT/the same/NNP/same. otherwise/NN/otherwise you/PRP/you essentially/RB/essentially do/VBP/do many/JJ/many trials/NNS/trials which/WDT/which means/VBZ/means that/DT/that you/PRP/you compute/VBP/compute the/DT/the value/NN/value of/IN/of the/DT/the random/NN/random variable/JJ/variable then/RB/then you/PRP/you do/VBP/do the/DT/the experiments/NNS/experiments once/RB/once again/RB/again and/CC/and so/RB/so on/NNP/on. look/NN/look at/IN/at the/DT/the value/NN/value of/IN/of the/DT/the random/NN/random variable/JJ/variable that/IN/that you/PRP/you get/VBP/get and/CC/and take/VB/take the/DT/the average/JJ/average over/IN/over all/DT/all the/DT/the trials/NNP/trials. that/IN/that is/VBZ/is how/WRB/how you/PRP/you compute/VBP/compute the/DT/the expectation/NN/expectation of/IN/of the/DT/the random/NN/random variable/NNP/variable. in/IN/in our/PRP$/our case/NN/case it/PRP/it is/VBZ/is easier/JJR/easier because/IN/because each/DT/each of/IN/of the/DT/the permutation/NN/permutation is/VBZ/is equally/RB/equally likely/NNP/likely. we/PRP/we are/VBP/are saying/VBG/saying we/PRP/we will/MD/will just/RB/just pick/VB/pick one/CD/one of/IN/of the/DT/the permutations/NNS/permutations uniformly/RB/uniformly at/IN/at random/NNP/random. each/DT/each of/IN/of the/DT/the permutation/NN/permutation is/VBZ/is equally/RB/equally likely/JJ/likely so/IN/so we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how much/RB/much time/NN/time it/PRP/it takes/VBZ/takes to/TO/to insert/VB/insert the/DT/the elements/NNS/elements in/IN/in the/DT/the order/NN/order given/VBN/given by/IN/by a/DT/a certain/JJ/certain permutations/NNP/permutations. how/WRB/how do/VBP/do we/PRP/we compute/VB/compute the/DT/the average/JJ/average ?/./? we/PRP/we will/MD/will take/VB/take a/DT/a permutation/NN/permutation /,/, insert/NN/insert the/DT/the elements/NNS/elements in/IN/in that/DT/that order/NN/order and/CC/and compute/VB/compute the/DT/the time/NN/time it/PRP/it takes/VBZ/takes to/TO/to do/VB/do that/DT/that insertion/NNP/insertion. then/RB/then take/VB/take another/DT/another permutation/NN/permutation compute/NN/compute the/DT/the time/NN/time it/PRP/it takes/VBZ/takes to/TO/to insert/VB/insert the/DT/the elements/NNS/elements in/IN/in that/DT/that order/NN/order /,/, take/VB/take the/DT/the 3rd/JJ/3rd permutation/NN/permutation compute/NN/compute the/DT/the time/NN/time it/PRP/it takes/VBZ/takes to/TO/to insert/VB/insert the/DT/the elements/NNS/elements in/IN/in that/DT/that order/NN/order and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 18/CD/18 /CD/) there/EX/there are/VBP/are n/NN/n !/./! different/JJ/different permutations/NNS/permutations /,/, while/IN/while compute/NN/compute the/DT/the time/NN/time it/PRP/it takes/VBZ/takes to/TO/to insert/VB/insert the/DT/the elements/NNS/elements in/IN/in the/DT/the order/NN/order specified/VBD/specified by/IN/by these/DT/these n/NN/n !/./! different/JJ/different permutations/NNP/permutations. you/PRP/you will/MD/will get/VB/get the/DT/the total/JJ/total time/NN/time this/DT/this huge/JJ/huge quantity/NN/quantity and/CC/and will/MD/will then/RB/then divide/VB/divide by/IN/by n/NN/n !/./! to/TO/to compute/VB/compute the/DT/the average/JJ/average and/CC/and that/IN/that could/MD/could be/VB/be the/DT/the expected/VBN/expected time/NN/time it/PRP/it takes/NNP/takes. just/RB/just to/TO/to summarize/VB/summarize /,/, for/IN/for each/DT/each of/IN/of this/DT/this n/NN/n !/./! permutations/NNS/permutations we/PRP/we will/MD/will compute/VB/compute the/DT/the time/NN/time taken/VBN/taken to/TO/to insert/VB/insert the/DT/the keys/NNS/keys in/IN/in the/DT/the order/NN/order specified/VBD/specified by/IN/by that/DT/that permutation/NN/permutation and/CC/and then/RB/then we/PRP/we will/MD/will compute/VB/compute the/DT/the average/NNP/average. the/DT/the average/JJ/average is/VBZ/is computed/VBN/computed over/IN/over the/DT/the n/NN/n !/./! permutations/NNP/permutations. we/PRP/we will/MD/will denote/VB/denote this/DT/this quantity/NN/quantity by/IN/by t/NN/t /:/( n/NN/n /:/) /,/, whatever/RB/whatever is/VBZ/is this/DT/this value/NN/value will/MD/will be/VB/be t/VBN/t /-NONE-/( n/NN/n /:/) /./. let/NN/let us/PRP/us see/VBP/see how/WRB/how to/TO/to compute/VB/compute t/NN/t /:/( 3/CD/3 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 50/CD/50 /CD/) t/NN/t /:/( 3/CD/3 /CD/) is/VBZ/is the/DT/the tree/NN/tree obtained/VBD/obtained or/CC/or is/VBZ/is the/DT/the expected/VBN/expected height/NN/height of/IN/of a/DT/a tree/NN/tree on/IN/on 3/CD/3 nodes/NNP/nodes. what/WP/what are/VBP/are the/DT/the various/JJ/various possible/JJ/possible trees/NNS/trees on/IN/on 3/CD/3 nodes/NNS/nodes that/WDT/that we/PRP/we get/VBP/get ?/./? what/WP/what are/VBP/are the/DT/the various/JJ/various permutations/NNS/permutations of/IN/of elements/NNS/elements 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 ?/./? we/PRP/we will/MD/will have/VB/have 6/CD/6 different/JJ/different permutations/NNS/permutations as/IN/as given/VBN/given in/IN/in the/DT/the slide/NNP/slide. when/WRB/when we/PRP/we have/VBP/have this/DT/this particular/JJ/particular permutation/NN/permutation what/WP/what is/VBZ/is the/DT/the tree/NN/tree we/PRP/we would/MD/would get/VB/get ?/./? if/IN/if we/PRP/we were/VBD/were to/TO/to insert/VB/insert the/DT/the elements/NNS/elements in/IN/in this/DT/this order/NN/order /:/( 1/CD/1 2/CD/2 3/CD/3 /CD/) and/CC/and you/PRP/you will/MD/will get/VB/get a/DT/a tree/NN/tree whose/WP$/whose root/NN/root is/VBZ/is 1/CD/1 /,/, 2/CD/2 would/MD/would come/VB/come to/TO/to the/DT/the right/NN/right and/CC/and 3/CD/3 would/MD/would come/VB/come after/IN/after that/NNP/that. when/WRB/when the/DT/the elements/NNS/elements are/VBP/are inserted/VBN/inserted in/IN/in this/DT/this particular/JJ/particular order/NN/order /:/( 1/CD/1 3/CD/3 2/CD/2 /CD/) /,/, we/PRP/we would/MD/would get/VB/get a/DT/a tree/NN/tree 1/CD/1 /,/, 3/CD/3 to/TO/to the/DT/the right/NN/right and/CC/and 2/CD/2 to/TO/to the/DT/the left/NN/left of/IN/of 3/CD/3. if/IN/if the/DT/the elements/NNS/elements are/VBP/are inserted/VBN/inserted in/IN/in this/DT/this order/NN/order /:/( 2/CD/2 1/CD/1 3/CD/3 /CD/) /,/, we/PRP/we will/MD/will get/VB/get a/DT/a tree/NN/tree which/WDT/which is/VBZ/is 2/CD/2 /,/, 1/CD/1 to/TO/to the/DT/the left/NN/left and/CC/and 3/CD/3 to/TO/to the/DT/the right/NNP/right. when/WRB/when elements/NNS/elements are/VBP/are inserted/VBN/inserted in/IN/in this/DT/this order/NN/order /:/( 2/CD/2 3/CD/3 1/CD/1 /CD/) /,/, we/PRP/we get/VBP/get a/DT/a tree/NN/tree which/WDT/which is/VBZ/is 2/CD/2 /,/, 3/CD/3 to/TO/to the/DT/the right/NN/right and/CC/and 1to/CD/1to the/DT/the left/NNP/left. when/WRB/when elements/NNS/elements are/VBP/are inserted/VBN/inserted in/IN/in this/DT/this order/NN/order /:/( 3/CD/3 1/CD/1 2/CD/2 /CD/) /,/, we/PRP/we get/VBP/get a/DT/a tree/NN/tree which/WDT/which is/VBZ/is 3/CD/3 /,/, 1/CD/1 to/TO/to the/DT/the left/NN/left and/CC/and 2/CD/2 to/TO/to the/DT/the right/NN/right of/IN/of 1/CD/1 but/CC/but to/TO/to the/DT/the left/NN/left of/IN/of 3/CD/3 and/CC/and in/IN/in this/DT/this order/NN/order /:/( 3/CD/3 2/CD/2 1/CD/1 /CD/) /,/, we/PRP/we get/VBP/get 3/CD/3 /,/, 2/CD/2 to/TO/to the/DT/the left/NN/left and/CC/and 1/CD/1 to/TO/to the/DT/the left/NNP/left. what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time taken/VBN/taken for/IN/for insertion/NN/insertion ?/./? we/PRP/we recall/VBP/recall what/WP/what we/PRP/we said/VBD/said /,/, it/PRP/it is/VBZ/is just/RB/just the/DT/the sum/NN/sum of/IN/of the/DT/the levels/NNS/levels of/IN/of the/DT/the nodes/NNP/nodes. the/DT/the levels/NNS/levels of/IN/of the/DT/the nodes/NNS/nodes are/VBP/are 0/-NONE-/0 /,/, 1/CD/1 /,/, 2/CD/2 and/CC/and so/RB/so the/DT/the sum/NN/sum is/VBZ/is 3/CD/3. in/IN/in the/DT/the next/JJ/next one/CD/one the/DT/the levels/NNS/levels of/IN/of the/DT/the nodes/NNS/nodes are/VBP/are again/RB/again 0/-NONE-/0 /,/, 1/CD/1 /,/, 2/CD/2 so/RB/so the/DT/the sum/NN/sum is/VBZ/is 3/CD/3. for/IN/for the/DT/the next/JJ/next one/CD/one it/PRP/it is/VBZ/is 0/-NONE-/0 and/CC/and 1/CD/1 in/IN/in which/WDT/which both/DT/both 1/CD/1 and/CC/and 2/CD/2 are/VBP/are at/IN/at level/NN/level 1/CD/1 /,/, so/RB/so the/DT/the sum/NN/sum 2/CD/2. for/IN/for the/DT/the next/JJ/next one/CD/one also/RB/also the/DT/the sum/NN/sum is/VBZ/is 2/CD/2. for/IN/for the/DT/the 5th/JJ/5th and/CC/and 6th/JJ/6th one/CD/one the/DT/the sum/NN/sum is/VBZ/is 0/-NONE-/0 /,/, 1/CD/1 /,/, 2/CD/2 that/WDT/that is/VBZ/is 3/CD/3. total/JJ/total of/IN/of 16/CD/16 and/CC/and so/RB/so the/DT/the average/JJ/average is/VBZ/is which/WDT/which is/VBZ/is 2.66/CD/2.66 which/WDT/which is/VBZ/is t/VBN/t /-NONE-/( 3/CD/3 /CD/) /./. hence/NN/hence we/PRP/we computed/VBD/computed t/NN/t /:/( 3/CD/3 /CD/) as/IN/as 2.66/CD/2.66. that/WDT/that is/VBZ/is what/WP/what being/VBG/being said/VBD/said here/RB/here /,/, for/IN/for each/DT/each of/IN/of the/DT/the n/NN/n !/./! permutations/NNS/permutations we/PRP/we are/VBP/are going/VBG/going to/TO/to compute/VB/compute the/DT/the time/NN/time taken/VBN/taken to/TO/to insert/VB/insert the/DT/the keys/NNS/keys which/WDT/which is/VBZ/is what/WP/what we/PRP/we did/VBD/did for/IN/for t/NN/t /:/( 3/CD/3 /CD/) /./. then/RB/then compute/VB/compute the/DT/the average/JJ/average that/IN/that gives/VBZ/gives us/PRP/us the/DT/the value/NN/value of/IN/of t/NN/t /:/( 3/CD/3 /CD/) /./. but/CC/but we/PRP/we can/MD/can not/RB/not do/VB/do the/DT/the computations/NNS/computations in/IN/in this/DT/this manner/NN/manner /,/, we/PRP/we have/VBP/have to/TO/to do/VB/do it/PRP/it cleverly/RB/cleverly because/IN/because we/PRP/we have/VBP/have to/TO/to compute/VB/compute what/WP/what t/NN/t /:/( n/NN/n /:/) is/NNP/is. now/RB/now am/VBP/am going/VBG/going to/TO/to fix/VB/fix a/DT/a particular/JJ/particular element/NN/element i/PRP/i and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at all/DT/all permutations/NNS/permutations in/IN/in which/WDT/which the/DT/the element/NN/element i/PRP/i is/VBZ/is the/DT/the very/JJ/very first/JJ/first element/NN/element in/IN/in the/DT/the permutation/NNP/permutation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 10/CD/10 /CD/) there/RB/there are/VBP/are /:/( n-1/-NONE-/n-1 /:/) !/./! permutations/NNS/permutations in/IN/in which/WDT/which i/PRP/i is/VBZ/is the/DT/the first/JJ/first element/NNP/element. in/IN/in these/DT/these /NN/( n-1/-NONE-/n-1 /./) !/./! permutations/NNS/permutations the/DT/the tree/NN/tree that/IN/that we/PRP/we obtain/VBP/obtain will/MD/will have/VB/have i/PRP/i as/IN/as the/DT/the root/NN/root because/IN/because it/PRP/it is/VBZ/is the/DT/the very/JJ/very first/JJ/first element/NN/element and/CC/and then/RB/then the/DT/the keys/NNS/keys one/CD/one through/IN/through /CD/( i-1/-NONE-/i-1 /:/) will/MD/will be/VB/be in/IN/in the/DT/the left/NN/left subtree/NN/subtree of/IN/of the/DT/the root/NN/root and/CC/and the/DT/the keys/NNS/keys i/PRP/i +/VBP/+ 1/CD/1 through/IN/through n/NN/n would/MD/would be/VB/be in/IN/in the/DT/the right/NN/right subtree/NN/subtree of/IN/of the/DT/the root/NNP/root. let/NN/let us/PRP/us look/VBP/look at/IN/at one/CD/one of/IN/of this/DT/this /NN/( n-1/-NONE-/n-1 /./) !/./! permutations/NNS/permutations and/CC/and restrict/VB/restrict our/PRP$/our attention/NN/attention to/TO/to the/DT/the keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) /./. they/PRP/they will/MD/will be/VB/be coming/VBG/coming at/IN/at many/JJ/many different/JJ/different places/NNS/places and/CC/and at/IN/at some/DT/some places/NNS/places in/IN/in this/DT/this permutation/NNP/permutation. let/VBD/let me/PRP/me look/VBP/look at/IN/at another/DT/another one/CD/one of/IN/of these/DT/these /CD/( n/NN/n- /:/) !/./! permutations/NNP/permutations. these/DT/these keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) would/MD/would be/VB/be coming/VBG/coming at/IN/at some/DT/some other/JJ/other place/NNP/place. if/IN/if i/PRP/i look/VBP/look at/IN/at all/DT/all of/IN/of these/DT/these /CD/( n-1/-NONE-/n-1 /:/) !/./! permutations/NNS/permutations they/PRP/they will/MD/will induce/VB/induce permutations/NNS/permutations of/IN/of keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) elements/NNS/elements also/NNP/also. every/DT/every permutation/NN/permutation of/IN/of 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) would/MD/would be/VB/be there/NNP/there. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 35/CD/35 /CD/) in/IN/in particular/JJ/particular each/DT/each permutation/NN/permutation of/IN/of 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) would/MD/would occur/VB/occur how/WRB/how many/JJ/many times/NNP/times. there/RB/there are/VBP/are /:/( n-1/-NONE-/n-1 /:/) !/./! permutations/NNS/permutations in/IN/in all/DT/all and/CC/and there/EX/there are/VBP/are /:/( i-1/-NONE-/i-1 /:/) !/./! permutations/NNS/permutations of/IN/of the/DT/the elements/NNS/elements 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) and/CC/and there/EX/there is/VBZ/is no/DT/no reason/NN/reason why/WRB/why one/CD/one of/IN/of these/DT/these permutation/NN/permutation will/MD/will occur/VB/occur more/RBR/more often/RB/often than/IN/than the/DT/the other/JJ/other permutation/NNP/permutation. each/DT/each of/IN/of them/PRP/them is/VBZ/is occurring/VBG/occurring equally/RB/equally likely/NNP/likely. how/WRB/how many/JJ/many times/NNS/times is/VBZ/is each/DT/each one/CD/one of/IN/of them/PRP/them occurring/VBG/occurring ?/./? it/PRP/it is/VBZ/is times/NNP/times. you/PRP/you can/MD/can also/RB/also think/VB/think of/IN/of it/PRP/it in/IN/in a/DT/a slightly/RB/slightly different/JJ/different manner/NNP/manner. you/PRP/you have/VBP/have these/DT/these /NNP/( i-1/-NONE-/i-1 /:/) elements/NNS/elements somewhere/VBP/somewhere and/CC/and the/DT/the other/JJ/other /NN/( n-i/NNP/n-i /NNP/) elements/NNS/elements are/VBP/are getting/VBG/getting inserted/VBN/inserted at/IN/at different/JJ/different places/NNP/places. how/WRB/how many/JJ/many different/JJ/different permutations/NNS/permutations are/VBP/are there/RB/there of/IN/of those/DT/those /CD/( n-i/NNP/n-i /NNP/) elements/NNS/elements that/WDT/that are/VBP/are getting/VBG/getting inserted/VBN/inserted ?/./? you/PRP/you can/MD/can compute/VB/compute that/IN/that and/CC/and it/PRP/it will/MD/will be/VB/be exactly/RB/exactly this/DT/this quantity/NNP/quantity. this/DT/this is/VBZ/is a/DT/a simpler/NN/simpler argument/NN/argument /,/, there/EX/there are/VBP/are /:/( n-1/-NONE-/n-1 /:/) !/./! permutations/NNS/permutations in/IN/in all/DT/all and/CC/and there/EX/there are/VBP/are /:/( i-1/-NONE-/i-1 /:/) !/./! permutations/NNS/permutations of/IN/of these/DT/these elements/NNS/elements 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) and/CC/and there/EX/there is/VBZ/is no/DT/no reason/NN/reason why/WRB/why one/CD/one of/IN/of these/DT/these permutation/NN/permutation should/MD/should be/VB/be more/RBR/more likely/JJ/likely than/IN/than the/DT/the other/JJ/other one/NNP/one. they/PRP/they will/MD/will all/VB/all occur/VB/occur the/DT/the same/JJ/same number/NN/number of/IN/of times/NNP/times. it/PRP/it is/VBZ/is symmetric/JJ/symmetric of/IN/of law/NN/law /,/, each/DT/each permutation/NN/permutation therefore/NN/therefore of/IN/of these/DT/these elements/NNS/elements is/VBZ/is occurring/VBG/occurring exactly/RB/exactly times/NNP/times. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 12/CD/12 /CD/) suppose/NN/suppose i/PRP/i had/VBD/had only/RB/only /CD/( i-1/-NONE-/i-1 /:/) keys/NNS/keys /,/, 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) /./. then/RB/then the/DT/the average/NN/average time/NN/time taken/VBN/taken to/TO/to insert/VB/insert these/DT/these keys/NNS/keys is/VBZ/is t/VBN/t /-NONE-/( i-1/-NONE-/i-1 /:/) /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we defined/VBD/defined t/NN/t /:/( n/NN/n /:/) /./. this/DT/this average/JJ/average is/VBZ/is the/DT/the average/JJ/average taken/NN/taken over/IN/over all/DT/all the/DT/the permutations/NNS/permutations of/IN/of 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) /./. the/DT/the time/NN/time taken/VBN/taken to/TO/to insert/VB/insert all/DT/all these/DT/these /JJ/( i-1/-NONE-/i-1 /:/) !/./! permutations/NNS/permutations are/VBP/are just/RB/just /:/( i-1/-NONE-/i-1 /:/) !/./! t/NN/t /:/( i-1/-NONE-/i-1 /:/) /./. the/DT/the average/JJ/average time/NN/time is/VBZ/is t/VBN/t /-NONE-/( i-1/-NONE-/i-1 /:/) and/CC/and the/DT/the average/JJ/average is/VBZ/is taken/VBN/taken by/IN/by computing/NN/computing the/DT/the total/NN/total time/NN/time to/TO/to insert/VB/insert all/DT/all the/DT/the /NNP/( i-1/-NONE-/i-1 /:/) !/./! permutations/NNS/permutations divided/VBD/divided by/IN/by /CD/( i-1/-NONE-/i-1 /:/) !/./! the/DT/the total/JJ/total time/NN/time to/TO/to insert/VB/insert all/DT/all the/DT/the /NNP/( i-1/-NONE-/i-1 /:/) !/./! permutations/NNS/permutations are/VBP/are /:/( i-1/-NONE-/i-1 /:/) !/./! t/NN/t /:/( i-1/-NONE-/i-1 /:/) /./. for/IN/for instance/NN/instance in/IN/in the/DT/the example/NN/example that/IN/that we/PRP/we did/VBD/did earlier/RBR/earlier for/IN/for t/NN/t /:/( 3/CD/3 /CD/) /,/, the/DT/the total/JJ/total time/NN/time taken/VBN/taken to/TO/to insert/VB/insert all/DT/all the/DT/the permutations/NNS/permutations was/VBD/was 16/CD/16 which/WDT/which we/PRP/we had/VBD/had computed/VBN/computed /,/, that/IN/that was/VBD/was the/DT/the average/JJ/average times/NNS/times 6/CD/6. when/WRB/when we/PRP/we are/VBP/are inserting/VBG/inserting the/DT/the keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) into/IN/into the/DT/the left/NN/left sub/NN/sub tree/NN/tree /,/, we/PRP/we go/VBP/go back/RB/back to/TO/to the/DT/the previous/JJ/previous setting/NNP/setting. recall/NN/recall we/PRP/we are/VBP/are considering/VBG/considering only/RB/only permutations/NNS/permutations in/IN/in which/WDT/which the/DT/the first/JJ/first element/NN/element is/VBZ/is i/NNP/i. the/DT/the keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) when/WRB/when we/PRP/we are/VBP/are inserting/VBG/inserting they/PRP/they will/MD/will all/VB/all be/VB/be compared/VBN/compared first/JJ/first against/IN/against i/PRP/i and/CC/and then/RB/then we/PRP/we will/MD/will go/VB/go and/CC/and put/VB/put them/PRP/them in/IN/in the/DT/the left/NN/left subtree/NNP/subtree. each/DT/each key/JJ/key has/VBZ/has to/TO/to be/VB/be compared/VBN/compared with/IN/with the/DT/the root/NN/root which/WDT/which is/VBZ/is i/NNP/i. it/PRP/it is/VBZ/is like/IN/like as/RB/as if/IN/if i/PRP/i am/VBP/am creating/VBG/creating a/DT/a left/NN/left subtree/NN/subtree of/IN/of /NNP/( i-1/-NONE-/i-1 /:/) elements/NNS/elements but/CC/but i/PRP/i can/MD/can not/RB/not just/RB/just count/VBP/count that/IN/that as/IN/as the/DT/the average/NN/average call/NNP/call. i/PRP/i am/VBP/am also/RB/also counting/VBG/counting one/CD/one more/JJR/more because/IN/because for/IN/for each/DT/each of/IN/of those/DT/those elements/NNS/elements in/IN/in the/DT/the left/NN/left subtree/NN/subtree their/PRP$/their level/NN/level is/VBZ/is actually/RB/actually one/CD/one more/JJR/more than/IN/than /,/, if/IN/if it/PRP/it were/VBD/were just/RB/just the/DT/the left/NN/left subtree/NNP/subtree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 60/CD/60 /CD/) let/NN/let me/PRP/me clarify/VB/clarify what/WP/what i/PRP/i am/VBP/am saying/NNP/saying. in/IN/in the/DT/the above/NN/above slide/NN/slide the/DT/the small/JJ/small round/NN/round in/IN/in blue/JJ/blue color/NN/color is/VBZ/is the/DT/the i/NN/i and/CC/and the/DT/the keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) are/VBP/are coming/VBG/coming inside/NN/inside the/DT/the triangle/NNP/triangle. if/IN/if that/DT/that triangle/NN/triangle in/IN/in blue/JJ/blue color/NN/color were/VBD/were my/PRP$/my tree/NN/tree then/RB/then i/PRP/i know/VBP/know that/IN/that the/DT/the average/NN/average time/NN/time to/TO/to create/VB/create this/DT/this tree/NN/tree is/VBZ/is t/VBN/t /-NONE-/( i-1/-NONE-/i-1 /:/) but/CC/but i/PRP/i am/VBP/am creating/VBG/creating a/DT/a tree/NN/tree of/IN/of over/IN/over n/NN/n nodes/NNP/nodes. the/DT/the keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) are/VBP/are coming/VBG/coming in/IN/in the/DT/the first/JJ/first triangle/NN/triangle and/CC/and the/DT/the other/JJ/other keys/NNS/keys are/VBP/are coming/VBG/coming in/IN/in the/DT/the next/JJ/next triangle/NNP/triangle. how/WRB/how much/JJ/much time/NN/time i/PRP/i am/VBP/am spending/VBG/spending in/IN/in creating/NN/creating this/DT/this part/NN/part /:/( darker/NN/darker triangle/NN/triangle /:/) ?/./? it/PRP/it is/VBZ/is the/DT/the average/JJ/average for/IN/for 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) plus/RB/plus one/CD/one more/JJR/more for/IN/for each/DT/each one/CD/one of/IN/of these/DT/these /,/, because/IN/because first/JJ/first i/PRP/i compare/VBP/compare with/IN/with i/PRP/i and/CC/and then/RB/then come/VBN/come down/RP/down because/IN/because the/DT/the level/NN/level of/IN/of each/DT/each of/IN/of these/DT/these is/VBZ/is actually/RB/actually one/CD/one more/JJR/more in/IN/in tree/NN/tree i/PRP/i than/IN/than it/PRP/it is/VBZ/is in/IN/in the/DT/the tree/NN/tree /:/( i-1/-NONE-/i-1 /:/) .then/JJ/.then it/PRP/it has/VBZ/has level/NN/level 2/CD/2 in/IN/in the/DT/the /NN/( i-1/-NONE-/i-1 /./) tree/NN/tree and/CC/and level/NN/level 3/CD/3 in/IN/in the/DT/the original/JJ/original tree/NNP/tree. what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time to/TO/to insert/VB/insert all/DT/all the/DT/the /NNP/( i-1/-NONE-/i-1 /:/) !/./! permutations/NNS/permutations ?/./? recall/NN/recall t/NN/t /:/( i-1/-NONE-/i-1 /:/) is/VBZ/is the/DT/the average/JJ/average time/NN/time to/TO/to insert/VB/insert /:/( i-1/-NONE-/i-1 /:/) keys/NNP/keys. in/IN/in the/DT/the tree/NN/tree that/IN/that i/PRP/i am/VBP/am creating/VBG/creating am/NN/am taking/VBG/taking one/CD/one unit/NN/unit extra/NN/extra for/IN/for every/DT/every node/NN/node that/IN/that i/PRP/i am/VBP/am inserting/VBG/inserting /,/, because/IN/because first/JJ/first i/PRP/i am/VBP/am comparing/VBG/comparing it/PRP/it against/IN/against the/DT/the node/NNP/node. /NNP/( i-1/-NONE-/i-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ /:/( i-1/-NONE-/i-1 /:/) /:/) is/VBZ/is the/DT/the time/NN/time i/PRP/i am/VBP/am taking/VBG/taking to/TO/to insert/VB/insert t/NN/t /:/( i-1/-NONE-/i-1 /:/) keys/NNS/keys and/CC/and that/IN/that is/VBZ/is the/DT/the average/JJ/average time/NN/time i/PRP/i am/VBP/am taking/VBG/taking to/TO/to insert/VB/insert the/DT/the /NN/( i-1/-NONE-/i-1 /./) keys/NNS/keys in/IN/in my/PRP$/my tree/NNP/tree. what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time ?/./? i/PRP/i have/VBP/have my/PRP$/my /NN/( i-1/-NONE-/i-1 /./) !/./! different/JJ/different permutations/NNS/permutations so/IN/so the/DT/the total/JJ/total time/NN/time is/VBZ/is this/DT/this product/NN/product /:/( i-1/-NONE-/i-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ /:/( i-1/-NONE-/i-1 /:/) /:/) /./. each/DT/each of/IN/of the/DT/the permutations/NNS/permutations appears/VBZ/appears so/RB/so many/JJ/many times/NNS/times that/WDT/that is/VBZ/is times/NNP/times. what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time i/PRP/i spend/VBP/spend in/IN/in inserting/NN/inserting keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) ?/./? the/DT/the total/JJ/total time/NN/time to/TO/to insert/VB/insert all/DT/all the/DT/the /NNP/( i-1/-NONE-/i-1 /:/) !/./! permutations/NNS/permutations is/VBZ/is /:/( i-1/-NONE-/i-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ /:/( i-1/-NONE-/i-1 /:/) /:/) /./. but/CC/but each/DT/each of/IN/of the/DT/the permutations/NNS/permutations is/VBZ/is appearing/VBG/appearing times/NNP/times. so/RB/so it/PRP/it is/VBZ/is just/RB/just times/VBZ/times /:/( i-1/-NONE-/i-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ /:/( i-1/-NONE-/i-1 /:/) /:/) which/WDT/which is/VBZ/is /:/( n-1/-NONE-/n-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ /:/( i-1/-NONE-/i-1 /:/) /:/) /./. this/DT/this /NN/( n-1/-NONE-/n-1 /./) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ /:/( i-1/-NONE-/i-1 /:/) /:/) is/VBZ/is the/DT/the total/JJ/total time/NN/time i/PRP/i take/VBP/take to/TO/to insert/VB/insert the/DT/the keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) into/IN/into my/PRP$/my tree/NN/tree where/WRB/where this/DT/this sum/NN/sum is/VBZ/is taken/VBN/taken over/RP/over all/DT/all the/DT/the /NNP/( n-1/-NONE-/n-1 /:/) !/./! permutations/NNS/permutations and/CC/and this/DT/this is/VBZ/is not/RB/not actually/RB/actually the/DT/the total/JJ/total time/NN/time but/CC/but this/DT/this is/VBZ/is the/DT/the total/JJ/total time/NN/time for/IN/for permutations/NNS/permutations in/IN/in which/WDT/which the/DT/the first/JJ/first element/NN/element is/VBZ/is i/NNP/i. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 59/CD/59 /CD/) the/DT/the time/NN/time to/TO/to insert/VB/insert keys/NNS/keys 1/CD/1 through/IN/through /CD/( i-1/-NONE-/i-1 /:/) is/VBZ/is /:/( n-1/-NONE-/n-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ /:/( i-1/-NONE-/i-1 /:/) /:/) /./. similarly/RB/similarly the/DT/the time/NN/time to/TO/to insert/VB/insert keys/NNS/keys /:/( i/PRP/i +/VBP/+ 1/CD/1 /CD/) through/IN/through n/NN/n will/MD/will be/VB/be similar/JJ/similar to/TO/to the/DT/the one/CD/one before/NNP/before. wherever/NN/wherever there/RB/there is/VBZ/is /:/( i-1/-NONE-/i-1 /:/) i/PRP/i will/MD/will replace/VB/replace it/PRP/it by/IN/by /NNP/( n-i/NNP/n-i /NNP/) /,/, because/IN/because that/DT/that is/VBZ/is the/DT/the number/NN/number of/IN/of keys/NNS/keys i/PRP/i am/VBP/am inserting/NNP/inserting. that/IN/that would/MD/would give/VB/give me/PRP/me this/DT/this expression/NN/expression /:/( n-1/-NONE-/n-1 /:/) !/./! /:/( t/NN/t /:/( n-i/NNP/n-i /:/) +/:/+ /:/( n-i/JJ/n-i /NN/) /:/) and/CC/and this/DT/this is/VBZ/is to/TO/to insert/VB/insert the/DT/the keys/NNS/keys in/IN/in the/DT/the right/NN/right subtree/NNP/subtree. the/DT/the total/JJ/total time/NN/time to/TO/to insert/VB/insert all/DT/all the/DT/the n/NN/n keys/NNS/keys is/VBZ/is just/RB/just the/DT/the sum/NN/sum of/IN/of the/DT/the above/JJ/above 2/CD/2 quantities/NNP/quantities. /NNP/( n-1/-NONE-/n-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ t/NN/t /:/( n-i/NNP/n-i /:/) +/:/+ n-1/-NONE-/n-1 /:/) is/VBZ/is the/DT/the total/JJ/total time/NN/time over/IN/over all/DT/all the/DT/the permutations/NNS/permutations in/IN/in which/WDT/which the/DT/the first/JJ/first key/JJ/key is/VBZ/is i/NNP/i. what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time to/TO/to insert/VB/insert all/DT/all the/DT/the n/NN/n keys/NNS/keys in/IN/in all/DT/all the/DT/the n/NN/n !/./! different/JJ/different permutations/NNS/permutations ?/./? it/PRP/it is/VBZ/is just/RB/just the/DT/the sum/NN/sum of/IN/of this/DT/this quantity/NN/quantity /:/( n-1/-NONE-/n-1 /:/) !/./! /:/( t/NN/t /:/( i-1/-NONE-/i-1 /:/) +/:/+ t/NN/t /:/( n-i/NNP/n-i /:/) +/:/+ n-1/-NONE-/n-1 /:/) as/IN/as i/PRP/i goes/VBZ/goes from/IN/from 1/CD/1 through/IN/through n/NN/n because/IN/because the/DT/the first/JJ/first key/JJ/key can/MD/can be/VB/be 1/CD/1 or/CC/or 2/CD/2 or/CC/or 3/CD/3. /CD/( n-1/-NONE-/n-1 /:/) !/./! /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 22/CD/22 /CD/) all/DT/all i/PRP/i am/VBP/am doing/VBG/doing is/VBZ/is trying/VBG/trying to/TO/to figure/VB/figure out/RP/out the/DT/the total/JJ/total time/NN/time taken/VBN/taken to/TO/to insert/VB/insert all/DT/all the/DT/the n/NN/n elements/NNS/elements not/RB/not in/IN/in one/CD/one permutations/NNS/permutations but/CC/but over/IN/over all/DT/all n/NN/n !/./! permutations/NNS/permutations put/VBD/put together/NNP/together. i/PRP/i am/VBP/am trying/VBG/trying to/TO/to do/VB/do it/PRP/it in/IN/in a/DT/a way/NN/way so/IN/so that/IN/that am/NN/am able/JJ/able to/TO/to analyze/VB/analyze it/NNP/it. there/RB/there are/VBP/are /:/( i-1/-NONE-/i-1 /:/) !/./! different/JJ/different permutations/NNS/permutations of/IN/of /NNP/( i-1/-NONE-/i-1 /:/) elements/NNP/elements. in/IN/in the/DT/the sequence/NN/sequence of/IN/of 1through/CD/1through n/NN/n those/DT/those /NNP/( i-1/-NONE-/i-1 /:/) elements/NNS/elements are/VBP/are present/JJ/present at/IN/at different/JJ/different places/NNP/places. all/DT/all possible/JJ/possible permutations/NNS/permutations of/IN/of /NNP/( i-1/-NONE-/i-1 /:/) !/./! different/JJ/different permutations/NNS/permutations of/IN/of those/DT/those /CD/( i-1/-NONE-/i-1 /:/) elements/NNS/elements are/VBP/are there/RB/there but/CC/but each/DT/each of/IN/of those/DT/those permutations/NNS/permutations itself/PRP/itself is/VBZ/is occurring/VBG/occurring /NN/( n-1/-NONE-/n-1 /./) !/./! over/IN/over /CD/( i-1/-NONE-/i-1 /:/) !/./! times/NNP/times. we/PRP/we have/VBP/have to/TO/to keep/VB/keep that/IN/that in/IN/in mind/NNP/mind. we/PRP/we are/VBP/are going/VBG/going to/TO/to work/VB/work with/IN/with the/DT/the expression/NN/expression which/WDT/which is/VBZ/is given/VBN/given below/-NONE-/below. /:/( n-1/-NONE-/n-1 /:/) !/./! the/DT/the total/JJ/total time/NN/time to/TO/to insert/VB/insert all/DT/all the/DT/the n/NN/n keys/NNS/keys is/VBZ/is above/IN/above thing/NN/thing /,/, this/DT/this is/VBZ/is exactly/RB/exactly the/DT/the 16/CD/16 which/WDT/which we/PRP/we had/VBD/had computed/VBN/computed for/IN/for t/NN/t /:/( 3/CD/3 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 22/CD/22 /CD/) what/WP/what is/VBZ/is the/DT/the average/JJ/average time/NN/time to/TO/to insert/VB/insert n/NN/n keys/NNS/keys ?/./? it/PRP/it is/VBZ/is basically/RB/basically /,/, this/DT/this is/VBZ/is /NNP/( n-1/-NONE-/n-1 /:/) !/./! the/DT/the total/JJ/total time/NN/time /,/, so/RB/so this/DT/this divided/VBN/divided by/IN/by n/NN/n !/./! would/MD/would be/VB/be the/DT/the average/NNP/average. below/IN/below given/VBN/given is/VBZ/is the/DT/the one/CD/one which/WDT/which i/PRP/i would/MD/would get/NNP/get. just/RB/just to/TO/to make/VB/make sure/JJ/sure this/DT/this divided/VBN/divided by/IN/by n/NN/n !/./! will/MD/will give/VB/give me/PRP/me and/CC/and this/DT/this expression/NN/expression i/PRP/i have/VBP/have written/VBN/written where/WRB/where i/PRP/i go/VBP/go from/IN/from 1/CD/1 through/IN/through n/NNP/n. note/NN/note that/IN/that each/DT/each of/IN/of these/DT/these terms/NNS/terms t/VBP/t /:/( i-1/-NONE-/i-1 /:/) and/CC/and t/NN/t /:/( n-1/-NONE-/n-1 /:/) will/MD/will appear/VB/appear twice/NNP/twice. if/IN/if i/PRP/i look/VBP/look at/IN/at t/NN/t /:/( 3/CD/3 /CD/) /,/, it/PRP/it will/MD/will appear/VB/appear once/RB/once for/IN/for i/PRP/i equals/VBZ/equals 4/CD/4 and/CC/and it/PRP/it will/MD/will appear/VB/appear once/RB/once for/IN/for i/PRP/i equals/VBZ/equals /:/( n-3/-NONE-/n-3 /:/) /./. each/DT/each of/IN/of the/DT/the term/NN/term will/MD/will appear/VB/appear twice/NN/twice /,/, so/RB/so that/IN/that this/DT/this part/NN/part of/IN/of the/DT/the sum/NN/sum /:/) is/VBZ/is 2/CD/2 times/NNS/times t/NN/t /:/( i/PRP/i /VBP/) where/WRB/where i/PRP/i going/VBG/going from/IN/from 0/-NONE-/0 through/IN/through n-1/NNP/n-1. this/DT/this part/NN/part of/IN/of /NNP/( n-1/-NONE-/n-1 /:/) have/VBP/have moved/VBN/moved out/RP/out /,/, so/RB/so it/PRP/it is/VBZ/is n-1/-NONE-/n-1 where/WRB/where i/PRP/i go/VBP/go from/IN/from 0/-NONE-/0 to/TO/to n/VB/n divided/VBN/divided by/IN/by n/NN/n /,/, so/RB/so it/PRP/it becomes/VBZ/becomes just/RB/just n-1/NNP/n-1. this/DT/this n-1/-NONE-/n-1 is/VBZ/is not/RB/not multiplied/VBN/multiplied by/IN/by and/CC/and this/DT/this only/RB/only multiplies/VBZ/multiplies the/DT/the following/VBG/following part/NNP/part. why/WRB/why do/VBP/do i/PRP/i go/VB/go from/IN/from 0/-NONE-/0 through/IN/through n-1/-NONE-/n-1 ?/./? because/IN/because you/PRP/you will/MD/will never/RB/never generate/VB/generate t/NN/t /:/( n/NN/n /:/) neither/DT/neither from/IN/from t/NN/t /:/( i-1/-NONE-/i-1 /:/) nor/CC/nor from/IN/from t/NN/t /:/( n-i/NNP/n-i /:/) /./. you/PRP/you will/MD/will generate/VB/generate t/NN/t /:/( 0/-NONE-/0 /:/) /,/, when/WRB/when i/PRP/i equals/VBZ/equals 1/CD/1 you/PRP/you will/MD/will have/VB/have t/NN/t /:/( 0/-NONE-/0 /:/) and/CC/and when/WRB/when i/PRP/i equals/VBZ/equals n/JJ/n you/PRP/you will/MD/will again/VB/again have/VB/have t/NN/t /:/( 0/-NONE-/0 /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 16/CD/16 /CD/) what/WP/what is/VBZ/is t/VBN/t /-NONE-/( 0/-NONE-/0 /:/) ?/./? t/NN/t /:/( 0/-NONE-/0 /:/) is/VBZ/is zero/CD/zero /,/, in/IN/in fact/NN/fact t/NN/t /:/( 1/CD/1 /CD/) is/VBZ/is also/RB/also zero/NNP/zero. t/NN/t /:/( 2/CD/2 /CD/) is/VBZ/is not/RB/not zero/RB/zero but/CC/but t/NN/t /:/( 1/CD/1 /CD/) is/VBZ/is zero/CD/zero because/IN/because it/PRP/it is/VBZ/is just/RB/just a/DT/a single/JJ/single element/NNP/element. we/PRP/we say/VBP/say it/PRP/it is/VBZ/is at/IN/at level/NN/level 0/-NONE-/0 so/RB/so we/PRP/we just/RB/just do/VBP/do not/RB/not count/VB/count it/PRP/it any/DT/any time/NN/time for/IN/for inserting/NN/inserting it/NNP/it. such/JJ/such a/DT/a thing/NN/thing is/VBZ/is called/VBN/called recurrence/NN/recurrence relation/NNP/relation. the/DT/the function/NN/function t/NN/t is/VBZ/is a/DT/a function/NN/function of/IN/of n/NN/n /,/, we/PRP/we are/VBP/are expressing/VBG/expressing the/DT/the value/NN/value of/IN/of this/DT/this function/NN/function at/IN/at point/NN/point n/NN/n in/IN/in terms/NNS/terms of/IN/of its/PRP$/its values/NNS/values at/IN/at previous/JJ/previous points/NNP/points. i/PRP/i can/MD/can use/VB/use the/DT/the below/NN/below given/VBN/given relation/NN/relation to/TO/to compute/VB/compute t/NN/t /:/( 0/-NONE-/0 /:/) /,/, t/NN/t /:/( 1/CD/1 /CD/) /,/, t/NN/t /:/( 2/CD/2 /CD/) and/CC/and so/RB/so on/NNP/on. t/NN/t /:/( 0/-NONE-/0 /:/) is/VBZ/is zero/NNP/zero. what/WP/what is/VBZ/is t/VBN/t /-NONE-/( 1/CD/1 /CD/) ?/./? when/WRB/when we/PRP/we substitute/VBP/substitute n/NN/n =/:/= 1/CD/1 in/IN/in the/DT/the above/NN/above equation/NN/equation /,/, we/PRP/we get/VBP/get t/VBN/t /-NONE-/( 1/CD/1 /CD/) as/IN/as zero/CD/zero which/WDT/which we/PRP/we argued/VBD/argued it/PRP/it before/NNP/before. so/RB/so t/VB/t /:/( 0/-NONE-/0 /:/) and/CC/and t/NN/t /:/( 1/CD/1 /CD/) both/DT/both are/VBP/are zero/NNP/zero. i/PRP/i can/MD/can use/VB/use that/IN/that to/TO/to compute/VB/compute t/NN/t /:/( 2/CD/2 /CD/) /./. what/WP/what will/MD/will i/VB/i get/VB/get the/DT/the value/NN/value of/IN/of t/NN/t /:/( 2/CD/2 /CD/) ?/./? if/IN/if i/PRP/i were/VBD/were to/TO/to just/RB/just use/VB/use this/DT/this expression/NN/expression i/PRP/i would/MD/would get/VB/get 1/CD/1 which/WDT/which is/VBZ/is explained/VBN/explained in/IN/in the/DT/the slide/NN/slide given/VBN/given below/NNP/below. thus/RB/thus t/VB/t /:/( 2/CD/2 /CD/) turns/NNS/turns out/IN/out to/TO/to be/VB/be 1/CD/1. if/IN/if you/PRP/you are/VBP/are not/RB/not convinced/VBN/convinced so/RB/so far/RB/far lets/NNS/lets also/RB/also compute/VBP/compute t/VBN/t /-NONE-/( 3/CD/3 /CD/) /./. t/NN/t /:/( 3/CD/3 /CD/) will/MD/will be/VB/be times/NNS/times t/VB/t /NN/( 0/-NONE-/0 /./) which/WDT/which is/VBZ/is zero/CD/zero so/RB/so let/JJ/let me/PRP/me ignore/VBP/ignore that/NNP/that. t/NN/t /:/( 1/CD/1 /CD/) which/WDT/which is/VBZ/is also/RB/also zero/RB/zero so/RB/so let/VB/let me/PRP/me ignore/JJR/ignore that/IN/that and/CC/and t/NN/t /:/( 2/CD/2 /CD/) which/WDT/which is/VBZ/is non-zero/-NONE-/non-zero so/RB/so let/VB/let me/PRP/me leave/VB/leave that/IN/that around/IN/around plus/CC/plus n/NN/n equals/NNS/equals 3-1/CD/3-1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 43/CD/43 /CD/) t/NN/t /:/( 2/CD/2 /CD/) was/VBD/was 1/CD/1 so/RB/so this/DT/this becomes/VBZ/becomes +/:/+ 2/CD/2 which/WDT/which is/VBZ/is 2.66/CD/2.66 that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we computed/NNP/computed. you/PRP/you can/MD/can use/VB/use this/DT/this recurrence/NN/recurrence to/TO/to compute/VB/compute any/DT/any t/NN/t /:/( i/PRP/i /VBP/) /./. we/PRP/we have/VBP/have done/VBN/done something/NN/something fairly/RB/fairly sophisticated/NNP/sophisticated. we/PRP/we have/VBP/have obtained/VBN/obtained some/DT/some kind/NN/kind of/IN/of a/DT/a relation/NN/relation which/WDT/which tells/NNS/tells us/PRP/us any/DT/any t/NN/t /:/( n/NN/n /:/) provided/VBN/provided we/PRP/we know/VBP/know the/DT/the previous/JJ/previous values/NNP/values. but/CC/but we/PRP/we will/MD/will do/VB/do a/DT/a little/RB/little bit/NN/bit more/JJR/more /,/, we/PRP/we will/MD/will try/VB/try to/TO/to figure/VB/figure out/RP/out how/WRB/how to/TO/to solve/VB/solve this/DT/this recurrence/NN/recurrence relation/NN/relation also/NNP/also. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do now/NNP/now. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 20/CD/20 /CD/) the/DT/the t/NN/t /:/( n/NN/n /:/) is/VBZ/is times/NNS/times the/DT/the sum/NN/sum of/IN/of the/DT/the previous/JJ/previous t/NN/t plus/CC/plus n-1/NNP/n-1. i/PRP/i can/MD/can write/VB/write t/NN/t /:/( n-1/-NONE-/n-1 /:/) is/VBZ/is times/NNS/times the/DT/the sum/NN/sum of/IN/of the/DT/the previous/JJ/previous t/NN/t +/:/+ /:/( n-2/-NONE-/n-2 /:/) /./. i/PRP/i just/RB/just replace/VB/replace the/DT/the n/NN/n by/IN/by n-1/-NONE-/n-1 and/CC/and so/RB/so i/PRP/i can/MD/can just/RB/just rearrange/VB/rearrange this/DT/this quantity/NN/quantity or/CC/or times/NNS/times this/DT/this sum/NN/sum equals/VBZ/equals /,/, i/PRP/i have/VBP/have moved/VBN/moved this/DT/this n-2/-NONE-/n-2 on/IN/on the/DT/the other/JJ/other side/NN/side so/IN/so i/PRP/i get/VBP/get t/RB/t /:/( n-1/-NONE-/n-1 /:/) ?/./? n/NN/n +/:/+ 2/CD/2 and/CC/and i/PRP/i have/VBP/have scaled/VBN/scaled it/PRP/it by/IN/by because/IN/because i/PRP/i am/VBP/am trying/VBG/trying to/TO/to compute/VB/compute instead/RB/instead of/IN/of /./. =/:/= /:/( t/NN/t /:/( n-1/-NONE-/n-1 /:/) -n/JJ/-n +/NN/+ 2/CD/2 /CD/) if/IN/if the/DT/the above/NN/above equation/NN/equation were/VBD/were times/NNS/times /,/, this/DT/this would/MD/would just/RB/just have/VB/have been/VBN/been this/DT/this part/NN/part /:/( t/NN/t /:/( n-1/-NONE-/n-1 /:/) -n/JJ/-n +/NN/+ 2/CD/2 /CD/) /CD/) /,/, if/IN/if you/PRP/you cancel/VBP/cancel out/RP/out the/DT/the n/NN/n the/DT/the is/VBZ/is exactly/RB/exactly this/DT/this part/NN/part /:/( t/NN/t /:/( n-1/-NONE-/n-1 /:/) -n/JJ/-n +/NN/+ 2/CD/2 /CD/) /CD/) /./. i/PRP/i just/RB/just want/VBP/want to/TO/to compute/VB/compute this/DT/this quantity/NN/quantity /,/, because/IN/because now/RB/now am/VBP/am going/VBG/going to/TO/to substitute/VB/substitute this/DT/this in/IN/in the/DT/the previous/JJ/previous expression/NN/expression that/WDT/that is/VBZ/is /./. i/PRP/i have/VBP/have computed/VBN/computed 0/-NONE-/0 through/IN/through n-2/-NONE-/n-2 as/IN/as this/DT/this quantity/NN/quantity /,/, so/RB/so am/VBP/am going/VBG/going to/TO/to substitute/VB/substitute that/NNP/that. thus/RB/thus t/VB/t /:/( n/NN/n /:/) then/RB/then becomes/VBZ/becomes this/DT/this sum/NN/sum +/:/+ t/NN/t /:/( n-1/-NONE-/n-1 /:/) +/:/+ n-1/NNP/n-1. then/RB/then i/PRP/i just/RB/just did/VBD/did some/DT/some rearrangement/NN/rearrangement /,/, that/IN/that is/VBZ/is and/CC/and that/IN/that makes/NNS/makes it/PRP/it /./. the/DT/the cancels/NNS/cancels out/IN/out and/CC/and so/RB/so i/PRP/i am/VBP/am just/RB/just left/VBN/left with/IN/with 2/CD/2 times/NNS/times /./. so/RB/so we/PRP/we will/MD/will work/VB/work with/IN/with the/DT/the below/JJ/below equation/NNP/equation. all/DT/all i/PRP/i have/VBP/have done/VBN/done is/VBZ/is some/DT/some rearrangement/NN/rearrangement to/TO/to simplify/VB/simplify things/NNP/things. i/PRP/i have/VBP/have written/VBN/written t/NN/t /:/( n/NN/n /:/) in/IN/in terms/NNS/terms of/IN/of t/NN/t /:/( n-1/-NONE-/n-1 /:/) /./. t/NN/t /:/( n/NN/n /:/) was/VBD/was in/IN/in terms/NNS/terms of/IN/of all/DT/all the/DT/the previous/JJ/previous t/NNP/t. this/DT/this is/VBZ/is the/DT/the simplification/NN/simplification i/PRP/i have/VBP/have achieved/VBN/achieved with/IN/with this/DT/this point/NNP/point. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 15/CD/15 /CD/) let/NN/let us/PRP/us see/NNP/see. it/PRP/it is/VBZ/is a/DT/a bit/NN/bit of/IN/of a/DT/a dense/NN/dense slide/NN/slide but/CC/but we/PRP/we will/MD/will run/VB/run through/IN/through this/DT/this very/RB/very quickly/NNP/quickly. this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have /./. i/PRP/i will/MD/will just/RB/just replace/VB/replace that/IN/that is/VBZ/is is/VBZ/is less/JJR/less than/IN/than 2/CD/2 because/IN/because n-1/-NONE-/n-1 is/VBZ/is less/JJR/less than/IN/than n/NNP/n. that/IN/that is/VBZ/is why/WRB/why the/DT/the less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to /,/, actually/RB/actually it/PRP/it should/MD/should be/VB/be strictly/RB/strictly less/JJR/less because/IN/because is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than 1.i/CD/1.i just/RB/just simplify/JJ/simplify this/DT/this a/DT/a bit/NN/bit and/CC/and now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do the/DT/the following/NNP/following. i/PRP/i am/VBP/am going/VBG/going to/TO/to replace/VB/replace t/NN/t /:/( n-1/-NONE-/n-1 /:/) by/IN/by using/NN/using this/DT/this recurrence/NN/recurrence relation/NN/relation that/WDT/that is/VBZ/is by/IN/by using/VBG/using this/DT/this expression/NN/expression /./. the/DT/the which/WDT/which is/VBZ/is times/VBZ/times t/VBN/t /-NONE-/( n-2/-NONE-/n-2 /:/) +/:/+ 2/CD/2 /,/, where/WRB/where the/DT/the other/JJ/other +/NN/+ 2/CD/2 is/VBZ/is coming/VBG/coming from/IN/from the/DT/the before/NN/before expression/NNP/expression. all/DT/all i/PRP/i have/VBP/have done/VBN/done is/VBZ/is replacing/VBG/replacing t/NN/t /:/( n-1/-NONE-/n-1 /:/) with/IN/with /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 25/CD/25 /CD/) let/NN/let me/PRP/me just/RB/just simplify/VB/simplify it/NNP/it. the/DT/the n/NN/n and/CC/and n/NN/n cancels/NNS/cancels in/IN/in that/DT/that expression/NN/expression so/RB/so i/PRP/i get/VBP/get and/CC/and 2/CD/2 is/VBZ/is the/DT/the same/JJ/same then/RB/then /./. this/DT/this is/VBZ/is just/RB/just the/DT/the simplification/NN/simplification and/CC/and it/PRP/it is/VBZ/is exactly/RB/exactly equal/NNP/equal. once/RB/once again/RB/again i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do the/DT/the same/NNP/same. i/PRP/i am/VBP/am replacing/VBG/replacing t/NN/t /:/( n-2/-NONE-/n-2 /:/) with/IN/with the/DT/the value/NN/value of/IN/of that/NNP/that. what/WP/what is/VBZ/is t/VBN/t /-NONE-/( n-2/-NONE-/n-2 /:/) ?/./? it/PRP/it would/MD/would be/VB/be t/VBN/t /-NONE-/( n-2/-NONE-/n-2 /:/) /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to replace/VB/replace it/PRP/it for/IN/for t/NN/t /:/( n-2/-NONE-/n-2 /:/) /./. when/WRB/when i/PRP/i do/VBP/do that/IN/that /-NONE-/( n-1/-NONE-/n-1 /:/) gets/NNS/gets cancelled/VBD/cancelled and/CC/and i/PRP/i get/VBP/get t/RB/t /:/( n-3/-NONE-/n-3 /:/) /./. this/DT/this multiplies/NNS/multiplies with/IN/with this/DT/this 2/CD/2 and/CC/and gives/VBZ/gives /./. this/DT/this part/NN/part is/VBZ/is the/DT/the same/JJ/same as/IN/as /./. when/WRB/when i/PRP/i replace/VBP/replace it/PRP/it i/PRP/i get/VBP/get this/DT/this and/CC/and this/DT/this quantity/NN/quantity gets/VBZ/gets decreasing/VBG/decreasing with/IN/with every/DT/every step/NN/step and/CC/and the/DT/the sum/NN/sum inside/NN/inside keeps/NNS/keeps increasing/VBG/increasing with/IN/with every/DT/every step/NNP/step. next/JJ/next time/NN/time i/PRP/i will/MD/will add/VB/add /,/, the/DT/the next/JJ/next time/NN/time i/PRP/i will/MD/will add/VB/add and/CC/and so/RB/so on/NNP/on. eventually/RB/eventually it/PRP/it goes/VBZ/goes down/RP/down and/CC/and when/WRB/when t/NN/t /:/( n-4/-NONE-/n-4 /:/) goes/VBZ/goes down/RP/down to/TO/to /VB/( n-n/JJ/n-n /NN/) /,/, i/PRP/i get/VBP/get a/DT/a zero/NNP/zero. and/CC/and in/IN/in the/DT/the denominator/NN/denominator i/PRP/i would/MD/would get/VB/get /:/( n-n-1/-NONE-/n-n-1 /:/) so/IN/so it/PRP/it is/VBZ/is 1/CD/1 and/CC/and i/PRP/i just/RB/just get/VB/get /:/( n/NN/n +/:/+ 1/CD/1 /CD/) /./. inside/NN/inside i/PRP/i will/MD/will get/VB/get all/DT/all the/DT/the terms/NNS/terms going/VBG/going up/RP/up to/TO/to +/VB/+ 2/CD/2. since/IN/since t/NN/t /:/( 0/-NONE-/0 /:/) is/VBZ/is 0/-NONE-/0 that/DT/that part/NN/part goes/VBZ/goes away/RB/away and/CC/and i/PRP/i get/VBP/get exactly/RB/exactly the/DT/the equation/NN/equation which/WDT/which is/VBZ/is given/VBN/given below/-NONE-/below. so/RB/so i/PRP/i get/VBP/get t/RB/t /:/( n/NN/n /:/) is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the above/NN/above sum/NNP/sum. this/DT/this is/VBZ/is the/DT/the sum/NN/sum of/IN/of a/DT/a harmonic/JJ/harmonic series/NN/series and/CC/and it/PRP/it is/VBZ/is going/VBG/going up/RP/up all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to /./. /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 47/CD/47 /CD/) we/PRP/we are/VBP/are summing/VBG/summing a/DT/a harmonic/JJ/harmonic series/NN/series /,/, we/PRP/we have/VBP/have to/TO/to sum/VB/sum /./. one/CD/one trick/NN/trick that/WDT/that we/PRP/we employ/VBP/employ very/RB/very often/RB/often /,/, you/PRP/you take/VBP/take this/DT/this graph/NN/graph and/CC/and this/DT/this is/VBZ/is a/DT/a graph/NN/graph of/IN/of a/DT/a function/NN/function /./. these/DT/these are/VBP/are the/DT/the points/NNS/points 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 and/CC/and let/VB/let me/PRP/me draw/VB/draw line/NN/line at/IN/at 2/CD/2. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this rectangle/NN/rectangle ?/./? it/PRP/it is/VBZ/is /,/, the/DT/the width/NN/width of/IN/of this/DT/this rectangle/NN/rectangle is/VBZ/is 1/CD/1 and/CC/and its/PRP$/its area/NN/area is/VBZ/is /./. i/PRP/i have/VBP/have drawn/VBN/drawn a/DT/a line/NN/line at/IN/at 3/CD/3 /,/, so/RB/so its/PRP$/its area/NN/area is/VBZ/is /./. i/PRP/i am/VBP/am getting/VBG/getting the/DT/the terms/NNS/terms so/RB/so next/JJ/next one/CD/one is/VBZ/is /,/, and/CC/and the/DT/the last/JJ/last one/CD/one at/IN/at n/NN/n /,/, i/PRP/i will/MD/will draw/VB/draw it/PRP/it in/IN/in this/DT/this manner/NNP/manner. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 27/CD/27 /CD/) this/DT/this sum/NN/sum is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the area/NN/area under/IN/under the/DT/the curve/NN/curve f/NN/f /:/( x/NN/x /:/) =/:/= and/CC/and it/PRP/it is/VBZ/is atmost/VBN/atmost the/DT/the area/NN/area under/IN/under the/DT/the curve/NN/curve in/IN/in between/IN/between the/DT/the limits/NNS/limits 1/CD/1 through/IN/through n/NNP/n. recall/NN/recall t/NN/t /:/( n/NN/n /:/) /,/, it/PRP/it is/VBZ/is that/IN/that is/VBZ/is harmonic/JJ/harmonic sum/NN/sum +/:/+ 2/CD/2. i/PRP/i am/VBP/am going/VBG/going to/TO/to just/RB/just put/VB/put that/IN/that 2/CD/2 /CD/( n/NN/n +/:/+ 1/CD/1 /CD/) and/CC/and that/IN/that harmonic/JJ/harmonic sum/NN/sum was/VBD/was the/DT/the integral/JJ/integral of/IN/of from/IN/from the/DT/the limits/NNS/limits 1/CD/1 through/IN/through n/NN/n +/:/+ 2/CD/2. this/DT/this integral/JJ/integral part/NN/part is/VBZ/is just/RB/just log/JJ/log /NN/( x/NN/x /:/) /./. it/PRP/it will/MD/will be/VB/be just/RB/just log/VB/log of/IN/of n/NN/n and/CC/and 2/CD/2 /CD/( n/NN/n +/:/+ 1/CD/1 /CD/) ln/NN/ln n/NN/n +/:/+ 2/CD/2 is/VBZ/is exactly/RB/exactly the/DT/the sum/NN/sum which/WDT/which is/VBZ/is o/RB/o /:/( n/NN/n log/NN/log n/NN/n /:/) /./. t/NN/t /:/( n/NN/n /:/) o/NN/o /:/( n/NN/n log/NN/log n/NN/n /:/) it/PRP/it is/VBZ/is the/DT/the expected/VBN/expected time/NN/time for/IN/for inserting/NN/inserting the/DT/the n/NN/n keys/NNP/keys. we/PRP/we have/VBP/have done/VBN/done a/DT/a very/RB/very sophisticated/JJ/sophisticated computation/NNP/computation. we/PRP/we looked/VBD/looked at/IN/at all/DT/all the/DT/the n/NN/n !/./! different/JJ/different permutations/NNS/permutations possible/JJ/possible and/CC/and also/RB/also we/PRP/we computed/VBD/computed the/DT/the total/JJ/total time/NN/time taken/VBN/taken to/TO/to insert/VB/insert all/DT/all the/DT/the n/NN/n !/./! different/JJ/different permutations/NNS/permutations and/CC/and we/PRP/we took/VBD/took the/DT/the average/NNP/average. we/PRP/we got/VBD/got n/NN/n log/NN/log n/NNP/n. recall/NN/recall we/PRP/we saw/VBD/saw the/DT/the worst/JJS/worst case/NN/case was/VBD/was and/CC/and there/EX/there is/VBZ/is a/DT/a particular/JJ/particular permutation/NN/permutation which/WDT/which puts/NNS/puts the/DT/the elements/NNS/elements in/IN/in increasing/VBG/increasing order/NN/order for/IN/for that/DT/that the/DT/the total/JJ/total time/NN/time for/IN/for insertion/NN/insertion is/VBZ/is /./. but/CC/but the/DT/the average/JJ/average time/NN/time is/VBZ/is n/VBN/n log/NN/log n/NNP/n. the/DT/the best/JJS/best time/NN/time is/VBZ/is also/RB/also n/RB/n log/JJ/log n/NN/n and/CC/and the/DT/the best/JJS/best time/NN/time would/MD/would happen/VB/happen when/WRB/when the/DT/the tree/NN/tree was/VBD/was very/RB/very shallow/NNP/shallow. if/IN/if you/PRP/you have/VBP/have a/DT/a tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes and/CC/and it/PRP/it has/VBZ/has a/DT/a height/NN/height atleast/NN/atleast log/NN/log n/NN/n /,/, log/NN/log n-1/-NONE-/n-1 or/CC/or roughly/RB/roughly /./. if/IN/if you/PRP/you take/VBP/take a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height log/NN/log n/NN/n the/DT/the last/JJ/last level/NN/level has/VBZ/has keys/NNS/keys that/IN/that is/VBZ/is in/IN/in the/DT/the leaf/NN/leaf there/RB/there are/VBP/are leaves/NNP/leaves. how/WRB/how much/JJ/much time/NN/time you/PRP/you will/MD/will take/VB/take to/TO/to insert/VB/insert each/DT/each one/CD/one of/IN/of those/DT/those leaves/NNS/leaves ?/./? log/NN/log n/NN/n /,/, because/IN/because you/PRP/you will/MD/will have/VB/have to/TO/to come/VB/come down/RP/down the/DT/the entire/JJ/entire tree/NNP/tree. so/RB/so to/TO/to insert/VB/insert each/DT/each one/CD/one of/IN/of those/DT/those keys/NNS/keys you/PRP/you are/VBP/are taking/VBG/taking time/NNP/time. just/RB/just to/TO/to insert/VB/insert the/DT/the leaves/NNS/leaves you/PRP/you take/VBP/take /:/( /:/) time/NN/time which/WDT/which is/VBZ/is /:/( n/NN/n /:/) time/NN/time a/DT/a function/NN/function which/WDT/which is/VBZ/is growing/VBG/growing faster/JJR/faster than/IN/than n/NN/n /./. it/PRP/it is/VBZ/is some/DT/some constant/JJ/constant time/NN/time but/CC/but it/PRP/it is/VBZ/is n/VBN/n /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 55/CD/55 /CD/) in/IN/in the/DT/the best/JJS/best case/NN/case you/PRP/you are/VBP/are taking/VBG/taking n/NN/n log/NN/log n/NN/n time/NN/time /,/, in/IN/in the/DT/the worst/JJS/worst case/NN/case you/PRP/you are/VBP/are taking/VBG/taking time/NN/time but/CC/but the/DT/the average/JJ/average case/NN/case is/VBZ/is also/RB/also n/RB/n log/JJ/log n/NNP/n. that/IN/that is/VBZ/is a/DT/a very/RB/very interesting/JJ/interesting part/NNP/part. if/IN/if i/PRP/i would/MD/would ask/VB/ask you/PRP/you the/DT/the average/JJ/average case/NN/case /,/, you/PRP/you would/MD/would just/RB/just take/VB/take the/DT/the average/JJ/average of/IN/of the/DT/the above/JJ/above 2/CD/2 cases/NNS/cases and/CC/and report/NN/report it/NNP/it. why/WRB/why it/PRP/it is/VBZ/is turning/VBG/turning out/RP/out to/TO/to be/VB/be o/RB/o /-NONE-/( n/VBP/n logn/NN/logn /:/) ?/./? what/WP/what does/VBZ/does it/PRP/it convey/RB/convey ?/./? most/RBS/most of/IN/of the/DT/the trees/NNS/trees are/VBP/are fairly/RB/fairly shallow/JJ/shallow and/CC/and do/VB/do not/RB/not have/VB/have too/RB/too much/RB/much depth/NNP/depth. most/RBS/most of/IN/of the/DT/the trees/NNS/trees have/VBP/have depth/NN/depth of/IN/of only/RB/only about/IN/about log/NN/log n/NN/n or/CC/or some/DT/some constant/JJ/constant times/NNS/times n/VBP/n log/NN/log n/NNP/n. so/RB/so that/IN/that the/DT/the average/NN/average is/VBZ/is still/RB/still only/RB/only n/VBP/n log/NN/log n/NNP/n. you/PRP/you have/VBP/have a/DT/a bunch/NN/bunch of/IN/of numbers/NNS/numbers /,/, the/DT/the numbers/NNS/numbers here/RB/here are/VBP/are the/DT/the total/JJ/total time/NN/time for/IN/for insertion/NN/insertion under/IN/under the/DT/the various/JJ/various permutations/NNP/permutations. the/DT/the smallest/JJS/smallest of/IN/of those/DT/those numbers/NNS/numbers is/VBZ/is n/VBN/n log/NN/log n/NN/n /,/, the/DT/the largest/JJS/largest of/IN/of those/DT/those numbers/NNS/numbers is/VBZ/is but/CC/but the/DT/the average/JJ/average is/VBZ/is also/RB/also n/RB/n logn/JJ/logn or/CC/or some/DT/some constant/JJ/constant times/NNS/times n/VBP/n log/NN/log n/NNP/n. that/IN/that means/VBZ/means most/RBS/most of/IN/of the/DT/the numbers/NNS/numbers are/VBP/are closer/JJR/closer to/TO/to the/DT/the minimum/JJ/minimum than/IN/than to/TO/to the/DT/the maximum/NNP/maximum. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 20/CD/20 /CD/) that/WDT/that is/VBZ/is all/DT/all i/PRP/i was/VBD/was going/VBG/going to/TO/to discuss/VB/discuss in/IN/in the/DT/the class/NN/class today/NNP/today. what/WP/what we/PRP/we discussed/VBD/discussed today/NN/today was/VBD/was the/DT/the deletion/NN/deletion procedure/NN/procedure and/CC/and then/RB/then we/PRP/we also/RB/also discussed/VBD/discussed this/DT/this particular/JJ/particular analysis/NN/analysis which/WDT/which says/VBZ/says that/IN/that if/IN/if you/PRP/you were/VBD/were to/TO/to take/VB/take a/DT/a random/NN/random permutation/NN/permutation of/IN/of n/NN/n elements/NNS/elements and/CC/and insert/VB/insert them/PRP/them /,/, then/RB/then the/DT/the average/NN/average time/NN/time or/CC/or the/DT/the expected/VBN/expected time/NN/time for/IN/for insertion/NN/insertion is/VBZ/is n/VBN/n log/NN/log n/NNP/n. in/IN/in the/DT/the worst/JJS/worst case/NN/case there/RB/there could/MD/could be/VB/be a/DT/a permutation/NN/permutation for/IN/for which/WDT/which the/DT/the time/NN/time taken/VBN/taken is/VBZ/is /./. we/PRP/we have/VBP/have seen/VBN/seen examples/NNS/examples of/IN/of those/DT/those /,/, if/IN/if the/DT/the elements/NNS/elements are/VBP/are in/IN/in increasing/VBG/increasing order/NN/order or/CC/or in/IN/in decreasing/NN/decreasing order/NN/order then/RB/then we/PRP/we take/VBP/take time/NNP/time. the/DT/the best/JJS/best possible/JJ/possible permutations/NNS/permutations are/VBP/are also/RB/also going/VBG/going to/TO/to take/VB/take at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n times/NNS/times or/CC/or some/DT/some constant/JJ/constant times/NNS/times n/VBP/n log/NN/log n/NNP/n. but/CC/but the/DT/the average/JJ/average case/NN/case is/VBZ/is also/RB/also n/RB/n log/JJ/log n/NNP/n. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 10/CD/10 quick/NN/quick sort/NN/sort today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to talk/VB/talk about/IN/about quick/JJ/quick sort/NNP/sort. this/DT/this is/VBZ/is the/DT/the second/JJ/second sorting/NN/sorting algorithm/NN/algorithm we/PRP/we are/VBP/are discussing/VBG/discussing in/IN/in this/DT/this series/NN/series of/IN/of lectures/NNP/lectures. the/DT/the first/JJ/first one/CD/one was/VBD/was insertion/NN/insertion sort/NN/sort for/IN/for which/WDT/which we/PRP/we had/VBD/had argued/VBN/argued a/DT/a worst/JJ/worst case/NN/case running/VBG/running time/NN/time of/IN/of o/NN/o /:/( n/NN/n square/NN/square /:/) /./. today/NN/today the/DT/the quick/NN/quick sort/NN/sort algorithm/NN/algorithm which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at is/VBZ/is also/RB/also going/VBG/going to/TO/to have/VB/have a/DT/a worst/JJS/worst case/NN/case running/VBG/running time/NN/time of/IN/of o/NN/o /:/( n/NN/n square/NN/square /:/) but/CC/but we/PRP/we will/MD/will argue/VB/argue that/IN/that on/IN/on an/DT/an average/JJ/average it/PRP/it takes/VBZ/takes only/RB/only about/IN/about n/NN/n log/NN/log n/NN/n time/NNP/time. it/PRP/it is/VBZ/is a/DT/a quick/JJ/quick algorithm/NN/algorithm /,/, in/IN/in practice/NN/practice it/PRP/it is/VBZ/is very/RB/very fast/RB/fast with/IN/with very/RB/very small/JJ/small constants/NNP/constants. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 35/CD/35 /CD/) another/DT/another property/NN/property of/IN/of this/DT/this algorithm/NN/algorithm is/VBZ/is that/IN/that it/PRP/it is/VBZ/is in/IN/in ?/./? place/NN/place ?/./? sorting/VBG/sorting algorithm/NNP/algorithm. what/WP/what is/VBZ/is an/DT/an in/IN/in ?/./? place/NN/place ?/./? sorting/VBG/sorting algorithm/NN/algorithm ?/./? an/DT/an algorithm/NN/algorithm is/VBZ/is called/VBN/called in/IN/in ?/./? place/NN/place ?/./? if/IN/if you/PRP/you do/VBP/do not/RB/not require/VB/require any/DT/any additional/JJ/additional memory/NN/memory to/TO/to do/VB/do the/DT/the sorting/NNP/sorting. we/PRP/we will/MD/will assume/VB/assume that/IN/that n/NN/n numbers/NNS/numbers are/VBP/are given/VBN/given in/IN/in an/DT/an array/NN/array /,/, may/MD/may be/VB/be we/PRP/we need/VBP/need memory/NN/memory for/IN/for 1/CD/1 or/CC/or more/JJR/more variables/NNS/variables but/CC/but we/PRP/we will/MD/will not/RB/not need/VB/need any/DT/any additional/JJ/additional memory/NN/memory to/TO/to do/VB/do the/DT/the sorting/NNP/sorting. that/IN/that is/VBZ/is called/VBN/called the/DT/the in/IN/in place/NN/place sorting/VBG/sorting and/CC/and that/IN/that is/VBZ/is typically/RB/typically good/JJ/good thing/NN/thing to/TO/to have/NNP/have. because/IN/because its/PRP$/its space/NN/space is/VBZ/is at/IN/at a/DT/a premium/NN/premium /,/, especially/RB/especially when/WRB/when you/PRP/you are/VBP/are trying/VBG/trying to/TO/to sort/VB/sort a/DT/a large/JJ/large collection/NN/collection of/IN/of numbers/NNP/numbers. this/DT/this algorithm/NN/algorithm falls/VBZ/falls into/IN/into a/DT/a paradigm/NN/paradigm which/WDT/which is/VBZ/is called/VBN/called divide/NN/divide and/CC/and conquer/NNP/conquer. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to say/VB/say too/RB/too much/RB/much about/IN/about this/DT/this because/IN/because we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see a/DT/a lot/NN/lot of/IN/of divide/NN/divide and/CC/and conquer/NN/conquer algorithms/NNS/algorithms in/IN/in this/DT/this course/NNP/course. at/IN/at a/DT/a very/RB/very high/JJ/high level/NN/level /,/, the/DT/the idea/NN/idea behind/IN/behind divide/NN/divide and/CC/and conquer/NN/conquer is/VBZ/is the/DT/the following/VBG/following that/IN/that you/PRP/you are/VBP/are given/VBN/given a/DT/a certain/JJ/certain problem/NN/problem that/IN/that you/PRP/you want/VBP/want to/TO/to solve/NNP/solve. you/PRP/you divide/VBP/divide the/DT/the problem/NN/problem up/RP/up into/IN/into 2/CD/2 or/CC/or more/JJR/more pieces/NNP/pieces. you/PRP/you solve/VBP/solve the/DT/the problem/NN/problem for/IN/for those/DT/those smaller/JJR/smaller pieces/NNP/pieces. the/DT/the divide/NN/divide step/NN/step in/IN/in the/DT/the case/NN/case of/IN/of quick/NN/quick sort/NN/sort would/MD/would be/VB/be partition/NN/partition our/PRP$/our array/NNP/array. we/PRP/we will/MD/will take/VB/take the/DT/the array/NN/array which/WDT/which stores/NNS/stores the/DT/the n/NN/n numbers/NNS/numbers and/CC/and partitioned/VBD/partitioned it/PRP/it ;/:/; break/VB/break it/PRP/it up/RP/up into/IN/into two/CD/two parts/NNP/parts. one/CD/one is/VBZ/is we/PRP/we will/MD/will call/VB/call it/PRP/it as/IN/as the/DT/the lower/JJR/lower part/NN/part and/CC/and the/DT/the other/JJ/other we/PRP/we will/MD/will call/VB/call the/DT/the higher/JJR/higher part/NNP/part. the/DT/the property/NN/property of/IN/of the/DT/the lower/JJR/lower and/CC/and the/DT/the higher/JJR/higher part/NN/part would/MD/would be/VB/be that/IN/that every/DT/every element/NN/element in/IN/in the/DT/the lower/JJR/lower part/NN/part /,/, every/DT/every number/NN/number in/IN/in the/DT/the lower/JJR/lower part/NN/part would/MD/would be/VB/be less/RBR/less than/IN/than every/DT/every number/NN/number in/IN/in the/DT/the higher/JJR/higher part/NNP/part. how/WRB/how does/VBZ/does this/DT/this help/NN/help us/PRP/us if/IN/if we/PRP/we do/VBP/do such/JJ/such a/DT/a partition/NN/partition ?/./? if/IN/if i/PRP/i sort/VBP/sort the/DT/the lower/JJR/lower part/NN/part now/RB/now and/CC/and i/PRP/i sort/VBP/sort the/DT/the higher/JJR/higher part/NN/part and/CC/and i/PRP/i put/VBD/put all/DT/all elements/NNS/elements of/IN/of the/DT/the lower/JJR/lower part/NN/part first/RB/first and/CC/and follow/RB/follow it/PRP/it up/RP/up with/IN/with all/DT/all elements/NNS/elements of/IN/of the/DT/the higher/JJR/higher part/NN/part then/RB/then the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is sorted/NNP/sorted. i/PRP/i have/VBP/have sorted/VBN/sorted the/DT/the lower/JJR/lower part/NN/part and/CC/and i/PRP/i have/VBP/have sorted/VBN/sorted the/DT/the higher/JJR/higher part/NN/part /,/, every/DT/every elements/NNS/elements here/RB/here is/VBZ/is less/JJR/less than/IN/than the/DT/the element/NN/element in/IN/in the/DT/the higher/JJR/higher part/NNP/part. so/RB/so the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is sorted/NNP/sorted. that/IN/that is/VBZ/is the/DT/the combining/NN/combining part/NN/part and/CC/and in/IN/in this/DT/this case/NN/case it/PRP/it is/VBZ/is trivial/JJ/trivial because/IN/because nothing/NN/nothing needs/VBZ/needs to/TO/to be/VB/be done/NNP/done. but/CC/but quite/RB/quite often/RB/often in/IN/in divide/NN/divide and/CC/and conquer/NN/conquer algorithm/NN/algorithm you/PRP/you have/VB/have to/TO/to do/VB/do something/NN/something to/TO/to do/VB/do the/DT/the combine/NN/combine and/CC/and we/PRP/we will/MD/will see/VB/see examples/NNS/examples of/IN/of these/DT/these later/NNP/later. so/RB/so we/PRP/we will/MD/will go/VB/go one/CD/one step/NN/step at/IN/at a/DT/a time/NNP/time. we/PRP/we will/MD/will first/RB/first understand/VB/understand how/WRB/how this/DT/this partition/NN/partition is/VBZ/is done/NNP/done. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 4/CD/4 /:/: 10/CD/10 /CD/) so/RB/so we/PRP/we will/MD/will give/VB/give an/DT/an algorithm/NN/algorithm to/TO/to do/VB/do the/DT/the partitioning/NN/partitioning which/WDT/which will/MD/will be/VB/be a/DT/a linear/JJ/linear time/NN/time procedure/NNP/procedure. so/RB/so the/DT/the partitioning/NN/partitioning is/VBZ/is done/VBN/done around/IN/around a/DT/a pivot/NN/pivot element/NNP/element. i/PRP/i will/MD/will take/VB/take one/CD/one of/IN/of these/DT/these elements/NNS/elements as/IN/as a/DT/a pivot/NN/pivot and/CC/and everything/NN/everything which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the pivot/NN/pivot will/MD/will be/VB/be my/PRP$/my lower/JJR/lower half/NN/half that/IN/that is/VBZ/is lower/JJR/lower part/NN/part of/IN/of the/DT/the array/NNP/array. and/CC/and everything/NN/everything which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than the/DT/the pivot/NN/pivot will/MD/will be/VB/be the/DT/the larger/JJR/larger part/NNP/part. this/DT/this is/VBZ/is the/DT/the procedure/NN/procedure to/TO/to do/VB/do the/DT/the partitioning/NNP/partitioning. it/PRP/it takes/VBZ/takes the/DT/the parameters/NNS/parameters /,/, the/DT/the array/NN/array a/DT/a and/CC/and p/NN/p /,/, r/NN/r are/VBP/are the/DT/the limits/NNS/limits of/IN/of the/DT/the array/NNP/array. the/DT/the p/NN/p here/RB/here refers/NNS/refers to/TO/to this/DT/this location/NN/location and/CC/and r/NN/r refers/NNS/refers to/TO/to this/DT/this location/NN/location and/CC/and this/DT/this could/MD/could be/VB/be part/NN/part of/IN/of a/DT/a larger/JJR/larger array/NN/array /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 10/CD/10 /CD/) /./. this/DT/this just/RB/just says/VBZ/says that/IN/that partition/NN/partition the/DT/the sub/NN/sub array/NN/array from/IN/from p/NN/p to/TO/to r/NNP/r. we/PRP/we will/MD/will see/VB/see what/WP/what it/PRP/it will/MD/will do/VB/do at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the procedure/NNP/procedure. i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take a/DT/a /NN/[ r/NN/r /:/] which/WDT/which would/MD/would be/VB/be the/DT/the element/NN/element 10/CD/10. i/PRP/i will/MD/will put/VB/put it/PRP/it into/IN/into x/NN/x which/WDT/which means/VBZ/means x/NN/x is/VBZ/is going/VBG/going to/TO/to be/VB/be my/PRP$/my pivot/NN/pivot element/NNP/element. so/RB/so x/NN/x would/MD/would contain/VB/contain 10/CD/10. what/WP/what is/VBZ/is this/DT/this doing/NN/doing ?/./? the/DT/the i/PRP/i is/VBZ/is getting/VBG/getting the/DT/the value/NN/value p-1/-NONE-/p-1 so/RB/so i/PRP/i is/VBZ/is assigned/VBN/assigned to/TO/to something/NN/something before/IN/before p/NNP/p. so/RB/so this/DT/this location/NN/location is/VBZ/is r/NN/r and/CC/and this/DT/this location/NN/location is/VBZ/is p/NNP/p. and/CC/and i/PRP/i is/VBZ/is getting/VBG/getting p-1/-NONE-/p-1 and/CC/and j/VB/j is/VBZ/is getting/VBG/getting r/NN/r +/:/+ 1/CD/1 and/CC/and so/RB/so which/WDT/which means/VBZ/means i/PRP/i and/CC/and j/VB/j are/VBP/are just/RB/just before/IN/before and/CC/and after/IN/after that/DT/that is/VBZ/is the/DT/the start/NN/start and/CC/and the/DT/the end/NN/end of/IN/of the/DT/the sub/NN/sub array/NN/array that/WDT/that we/PRP/we are/VBP/are interested/JJ/interested in/NNP/in. and/CC/and now/RB/now we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to go/VB/go through/RP/through this/DT/this lop/NNP/lop. the/DT/the while/NN/while true/NN/true which/WDT/which means/VBZ/means we/PRP/we just/RB/just continue/VBP/continue going/VBG/going through/IN/through this/DT/this loop/NN/loop /,/, till/NN/till you/PRP/you break/VBP/break out/RP/out to/TO/to the/DT/the loop/NNP/loop. what/WP/what is/VBZ/is this/DT/this doing/NN/doing ?/./? this/DT/this is/VBZ/is saying/VBG/saying repeat/NN/repeat j/NN/j is/VBZ/is j-1/-NONE-/j-1 until/IN/until a/DT/a /NN/[ j/NN/j /:/] is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k/NNP/k. so/RB/so we/PRP/we are/VBP/are looking/VBG/looking at/IN/at this/DT/this index/NN/index and/CC/and we/PRP/we are/VBP/are saying/VBG/saying keep/NN/keep decrementing/VBG/decrementing it/PRP/it till/MD/till i/VB/i reach/NN/reach a/DT/a location/NN/location which/WDT/which is/VBZ/is less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 10/CD/10. what/WP/what was/VBD/was x/NN/x ?/./? the/DT/the pivot/NN/pivot 10/CD/10. so/RB/so keep/VB/keep decrementing/VBG/decrementing it/PRP/it /,/, so/RB/so i/PRP/i decrement/VBP/decrement j/NN/j till/IN/till i/PRP/i reach/VBP/reach a/DT/a location/NN/location which/WDT/which has/VBZ/has content/VBN/content less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 10/CD/10. so/RB/so already/RB/already i/PRP/i reached/VBD/reached such/JJ/such a/DT/a location/NN/location so/IN/so i/PRP/i stopped/VBD/stopped decrementing/NNP/decrementing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 40/CD/40 /CD/) now/RB/now i/PRP/i go/VBP/go to/TO/to the/DT/the next/JJ/next loop/NN/loop where/WRB/where am/NN/am incrementing/VBG/incrementing i/PRP/i till/MD/till i/VB/i reach/NN/reach a/DT/a locations/NNS/locations which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 10/CD/10 /,/, so/RB/so already/RB/already i/PRP/i reached/VBD/reached a/DT/a location/NN/location which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 10/CD/10. what/WP/what am/NN/am i/PRP/i going/VBG/going to/TO/to do/VB/do ?/./? recall/VB/recall that/IN/that i/PRP/i want/VBP/want everything/VBG/everything in/IN/in the/DT/the left/NN/left part/NN/part to/TO/to be/VB/be less/JJR/less than/IN/than 10/CD/10 and/CC/and everything/NN/everything in/IN/in the/DT/the right/NN/right part/NN/part to/TO/to be/VB/be more/JJR/more than/IN/than 10/CD/10. so/RB/so these/DT/these are/VBP/are in/IN/in some/DT/some sense/NN/sense culprits/NNS/culprits because/IN/because this/DT/this is/VBZ/is more/RBR/more than/IN/than 10/CD/10 and/CC/and it/PRP/it is/VBZ/is in/IN/in the/DT/the left/NN/left part/NN/part and/CC/and this/DT/this is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 10/CD/10 and/CC/and it/PRP/it is/VBZ/is in/IN/in the/DT/the right/NN/right part/NNP/part. so/RB/so we/PRP/we will/MD/will like/VB/like to/TO/to swap/VB/swap them/PRP/them and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we will/MD/will do/VB/do here/NNP/here. exchange/NN/exchange a/DT/a /NN/[ i/PRP/i /VBP/] /,/, a/DT/a /NN/[ j/NN/j /:/] means/NNS/means just/RB/just swap/NN/swap these/DT/these contents/NNP/contents. so/RB/so i/PRP/i swapped/VBD/swapped these/DT/these contents/NNP/contents. so/RB/so i/PRP/i will/MD/will denote/VB/denote blue/JJ/blue as/IN/as everything/NN/everything which/WDT/which is/VBZ/is in/IN/in the/DT/the left/NN/left part/NN/part and/CC/and orange/NN/orange would/MD/would be/VB/be everything/VBG/everything which/WDT/which is/VBZ/is in/IN/in the/DT/the right/NN/right part/NNP/part. so/RB/so everything/VBG/everything in/IN/in the/DT/the left/NN/left part/NN/part would/MD/would be/VB/be less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 10/CD/10 which/WDT/which was/VBD/was my/PRP$/my pivot/NN/pivot element/NN/element and/CC/and everything/NN/everything in/IN/in the/DT/the right/NN/right part/NN/part which/WDT/which is/VBZ/is the/DT/the orange/NN/orange part/NN/part will/MD/will be/VB/be greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 10/CD/10. recall/NN/recall /,/, i/PRP/i is/VBZ/is here/RB/here at/IN/at this/DT/this point/NN/point and/CC/and j/NN/j is/VBZ/is here/RB/here and/CC/and once/RB/once again/RB/again i/PRP/i am/VBP/am going/VBG/going to/TO/to keep/VB/keep decrementing/NN/decrementing j/NN/j till/NN/till i/PRP/i find/VBP/find an/DT/an element/NN/element which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than 10/CD/10. so/RB/so i/PRP/i found/VBD/found one/CD/one already/RB/already and/CC/and i/PRP/i keep/VBP/keep incrementing/VBG/incrementing i/PRP/i till/MD/till i/VB/i find/VBP/find an/DT/an element/NN/element which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than 10/CD/10. so/RB/so that/IN/that actually/RB/actually i/PRP/i will/MD/will find/VB/find here/RB/here and/CC/and once/RB/once again/RB/again i/PRP/i will/MD/will swap/VB/swap these/DT/these things/NNP/things. i/PRP/i swapped/VBD/swapped them/PRP/them and/CC/and i/PRP/i continue/VBP/continue with/IN/with j/NN/j /,/, so/RB/so j/RB/j will/MD/will keep/VB/keep moving/VBG/moving till/NN/till i/PRP/i find/VBP/find something/NN/something which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than 10/CD/10. so/RB/so actually/RB/actually i/PRP/i found/VBD/found immediately/RB/immediately one/CD/one which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than 10/CD/10 at/IN/at this/DT/this location/NN/location and/CC/and it/PRP/it will/MD/will keep/VB/keep moving/VBG/moving till/NN/till i/PRP/i find/VBP/find an/DT/an element/NN/element which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than 10/CD/10. so/RB/so this/DT/this is/VBZ/is not/RB/not larger/JJR/larger so/RB/so actually/RB/actually i/PRP/i will/MD/will end/VB/end up/RP/up till/NN/till this/DT/this location/NN/location 19/CD/19 and/CC/and i/PRP/i will/MD/will once/RB/once again/RB/again swap/VB/swap 8/CD/8 and/CC/and 19/CD/19. i/PRP/i swap/VBP/swap 8/CD/8 and/CC/and 19/CD/19 and/CC/and i/PRP/i get/VBP/get this/NNP/this. this/DT/this is/VBZ/is already/RB/already smaller/JJR/smaller so/IN/so this/DT/this is/VBZ/is also/RB/also marked/VBN/marked blue/JJ/blue /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 38/CD/38- 08/CD/08 /:/: 30/CD/30 /CD/) /./. now/RB/now j/VB/j would/MD/would continue/VB/continue decrementing/VBG/decrementing till/NN/till i/PRP/i find/VBP/find something/NN/something which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than 10/CD/10. the/DT/the j/NN/j is/VBZ/is searching/VBG/searching for/IN/for something/NN/something which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than 10/CD/10. so/RB/so it/PRP/it will/MD/will come/VB/come to/TO/to this/DT/this position/NN/position /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first element/NN/element which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than 10/CD/10 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 45/CD/45 /CD/) /./. so/RB/so it/PRP/it comes/VBZ/comes here/RB/here and/CC/and i/PRP/i will/MD/will continue/VB/continue incrementing/VBG/incrementing till/NN/till i/PRP/i find/VBP/find something/NN/something which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than 10/CD/10. so/RB/so it/PRP/it comes/VBZ/comes here/RB/here and/CC/and now/RB/now i/PRP/i and/CC/and j/VB/j have/VBP/have crossed/VBN/crossed each/DT/each other/JJ/other /,/, which/WDT/which means/VBZ/means our/PRP$/our job/NN/job is/VBZ/is done/NNP/done. so/RB/so if/IN/if i/PRP/i is/VBZ/is less/JJR/less than/IN/than j/NN/j then/RB/then you/PRP/you do/VBP/do an/DT/an exchange/NN/exchange /,/, if/IN/if i/PRP/i is/VBZ/is more/RBR/more than/IN/than j/NN/j which/WDT/which means/VBZ/means they/PRP/they crossed/VBD/crossed each/DT/each other/JJ/other then/RB/then you/PRP/you exit/VBP/exit which/WDT/which means/NNS/means return/VBP/return the/DT/the procedure/NNP/procedure. what/WP/what we/PRP/we are/VBP/are returning/VBG/returning ?/./? we/PRP/we are/VBP/are returning/VBG/returning the/DT/the value/NN/value of/IN/of j/NN/j which/WDT/which tells/NNS/tells us/PRP/us about/IN/about the/DT/the boundary/JJ/boundary of/IN/of the/DT/the two/CD/two halves/NNP/halves. so/RB/so this/DT/this is/VBZ/is my/PRP$/my left/NN/left half/NN/half that/WDT/that is/VBZ/is my/PRP$/my left/NN/left half/NN/half is/VBZ/is from/IN/from p/NN/p to/TO/to j/VB/j and/CC/and my/PRP$/my right/NN/right half/NN/half is/VBZ/is from/IN/from j/NN/j +/:/+ 1/CD/1 to/TO/to r/VB/r because/IN/because am/NN/am only/RB/only returning/VBG/returning j/NN/j and/CC/and not/RB/not i/NNP/i. so/RB/so j/NN/j +/:/+ 1/CD/1 to/TO/to r/VB/r is/VBZ/is my/PRP$/my right/NN/right half/NNP/half. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this procedure/NN/procedure takes/VBZ/takes ?/./? it/PRP/it is/VBZ/is order/NN/order n/NNP/n. is/VBZ/is this/DT/this clear/JJ/clear that/IN/that its/PRP$/its taking/VBG/taking order/NN/order n/NN/n time/NN/time and/CC/and no/DT/no more/RBR/more because/IN/because /CD/[ hindi/NN/hindi conversation/NN/conversation /:/] at/IN/at every/DT/every step/NN/step we/PRP/we are/VBP/are decrementing/VBG/decrementing j/NNP/j. how/WRB/how many/JJ/many times/NNS/times can/MD/can j/VB/j be/VB/be decremented/VBN/decremented ?/./? it/PRP/it is/VBZ/is at/IN/at most/JJS/most 10/CD/10 times/NNS/times the/DT/the size/NN/size of/IN/of the/DT/the array/NNP/array. and/CC/and how/WRB/how many/JJ/many times/NNS/times can/MD/can i/VB/i be/VB/be incremented/VBN/incremented ?/./? at/IN/at most/JJS/most the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array /,/, so/RB/so this/DT/this loop/NN/loop is/VBZ/is done/VBN/done at/IN/at most/JJS/most n/JJ/n times/NNS/times /,/, this/DT/this loop/NN/loop is/VBZ/is done/VBN/done utmost/NN/utmost n/NN/n times/NNS/times and/CC/and every/DT/every time/NN/time we/PRP/we increment/VBP/increment or/CC/or decrement/NN/decrement we/PRP/we might/MD/might have/VB/have to/TO/to do/VB/do one/CD/one exchange/NN/exchange in/IN/in the/DT/the worst/JJS/worst case/NN/case so/RB/so this/DT/this is/VBZ/is also/RB/also never/RB/never be/VB/be done/VBN/done more/RBR/more than/IN/than n/NN/n times/NNS/times /VBP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 16/CD/16 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 30/CD/30 /CD/) it/PRP/it is/VBZ/is a/DT/a simple/JJ/simple way/NNP/way. why/WRB/why do/VBP/do we/PRP/we do/VBP/do it/PRP/it in/IN/in this/DT/this manner/NN/manner /,/, you/PRP/you could/MD/could also/RB/also have/VB/have done/VBN/done it/PRP/it in/IN/in a/DT/a slightly/RB/slightly different/JJ/different manner/NNP/manner. after/IN/after all/DT/all we/PRP/we are/VBP/are taking/VBG/taking the/DT/the pivot/NN/pivot and/CC/and saying/VBG/saying /,/, compare/NN/compare every/DT/every element/NN/element with/IN/with the/DT/the pivot/NN/pivot and/CC/and put/VBD/put everything/NN/everything which/WDT/which is/VBZ/is smaller/JJR/smaller in/IN/in the/DT/the first/JJ/first few/JJ/few locations/NNS/locations and/CC/and everything/VBG/everything which/WDT/which is/VBZ/is larger/JJR/larger in/IN/in the/DT/the next/JJ/next few/JJ/few locations/NNP/locations. if/IN/if you/PRP/you try/VBP/try to/TO/to do/VB/do it/PRP/it /,/, some/DT/some other/JJ/other way/NN/way you/PRP/you will/MD/will require/VB/require more/RBR/more memory/NNP/memory. one/CD/one way/NN/way you/PRP/you could/MD/could do/VB/do is/VBZ/is take/VB/take one/CD/one element/NN/element at/IN/at a/DT/a time/NN/time and/CC/and put/VBD/put it/PRP/it in/IN/in some/DT/some other/JJ/other array/NN/array and/CC/and then/RB/then copy/VB/copy that/IN/that array/NN/array back/RB/back into/IN/into this/DT/this place/NNP/place. that/IN/that would/MD/would be/VB/be one/CD/one way/NN/way of/IN/of doing/VBG/doing it/NNP/it. but/CC/but that/IN/that will/MD/will take/VB/take more/RBR/more memory/JJ/memory /,/, so/RB/so we/PRP/we wanted/VBD/wanted to/TO/to do/VB/do it/PRP/it in/IN/in in-place/NN/in-place as/IN/as to/TO/to keep/VB/keep all/PDT/all the/DT/the elements/NNS/elements in/IN/in this/DT/this array/NN/array and/CC/and not/RB/not to/TO/to take/VB/take up/RP/up any/DT/any additional/JJ/additional memory/NN/memory space/NNP/space. we/PRP/we can/MD/can do/VB/do this/DT/this partitioning/NN/partitioning in/IN/in in-place/NN/in-place that/IN/that is/VBZ/is no/DT/no additional/JJ/additional memory/NN/memory and/CC/and in/IN/in linear/NN/linear time/NN/time which/WDT/which is/VBZ/is the/DT/the best/JJS/best pursue/NNP/pursue. i/PRP/i am/VBP/am saying/VBG/saying let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this repeat/NN/repeat until/IN/until loop/NN/loop over/IN/over all/DT/all the/DT/the while/NN/while loops/NNP/loops. let/NN/let me/PRP/me just/RB/just look/VBP/look at/IN/at this/DT/this one/CD/one statement/NN/statement /,/, the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times this/DT/this is/VBZ/is executed/VBN/executed not/RB/not in/IN/in one/CD/one iteration/NN/iteration of/IN/of the/DT/the while/NN/while loop/NN/loop but/CC/but all/DT/all while/IN/while loops/NNS/loops put/VBD/put together/NNP/together. how/WRB/how many/JJ/many times/NNS/times is/VBZ/is this/DT/this statement/NN/statement executed/VBD/executed ?/./? at/IN/at most/JJS/most n/JJ/n times/NNS/times because/IN/because i/PRP/i can/MD/can decrement/VB/decrement it/PRP/it only/RB/only at/IN/at most/JJS/most n/JJ/n times/NNP/times. that/IN/that is/VBZ/is not/RB/not possible/JJ/possible /,/, because/IN/because for/IN/for one/CD/one particular/JJ/particular run/NN/run of/IN/of the/DT/the while/NN/while loop/NN/loop i/PRP/i might/MD/might decrement/VB/decrement it/PRP/it say/VB/say for/IN/for 3/CD/3 times/NNP/times. then/RB/then for/IN/for the/DT/the next/JJ/next one/CD/one i/PRP/i might/MD/might decrement/VB/decrement it/PRP/it for/IN/for another/DT/another 5/CD/5 times/NNS/times and/CC/and so/RB/so on/NNP/on. but/CC/but the/DT/the sum/NN/sum over/IN/over all/DT/all will/MD/will not/RB/not be/VB/be more/RBR/more than/IN/than n/NN/n because/IN/because /CD/[ student/NN/student conversation/NN/conversation /:/] at/IN/at most/JJS/most n/JJ/n /,/, that/IN/that is/VBZ/is all/DT/all i/PRP/i am/VBP/am interested/JJ/interested in/NNP/in. the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times this/DT/this step/NN/step is/VBZ/is executed/VBN/executed and/CC/and this/DT/this step/NN/step is/VBZ/is executed/VBN/executed and/CC/and this/DT/this is/VBZ/is executed/VBN/executed is/VBZ/is order/NN/order n/NNP/n. this/DT/this is/VBZ/is my/PRP$/my complete/JJ/complete quick/NN/quick sort/NN/sort algorithm/NN/algorithm /,/, i/PRP/i did/VBD/did my/PRP$/my partitioning/NN/partitioning so/IN/so i/PRP/i have/VBP/have to/TO/to do/VB/do quick/JJ/quick sort/NN/sort on/IN/on lets/NNS/lets say/VBP/say this/DT/this array/NN/array /,/, array/NN/array a/DT/a between/IN/between limits/NNS/limits p/VBP/p and/CC/and r/NNP/r. when/WRB/when i/PRP/i do/VBP/do an/DT/an initial/JJ/initial call/NN/call for/IN/for quick/NN/quick sort/NN/sort i/PRP/i will/MD/will do/VB/do 1/CD/1 to/TO/to length/NN/length of/IN/of a/DT/a /,/, whatever/NN/whatever is/VBZ/is the/DT/the length/NN/length of/IN/of a/NNP/a. so/RB/so in/IN/in general/JJ/general this/DT/this would/MD/would be/VB/be the/DT/the thing/NN/thing /,/, so/RB/so p/VB/p to/TO/to r/NNP/r. i/PRP/i need/VBP/need to/TO/to do/VB/do it/PRP/it only/RB/only if/IN/if p/NN/p is/VBZ/is less/JJR/less than/IN/than r/NN/r /,/, if/IN/if p/NN/p =/:/= r/NN/r then/RB/then there/RB/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/VBN/done or/CC/or if/IN/if p/NN/p is/VBZ/is more/RBR/more than/IN/than r/NN/r then/RB/then again/RB/again it/PRP/it does/VBZ/does not/RB/not make/VB/make any/DT/any sense/NNP/sense. so/RB/so if/IN/if p/NN/p is/VBZ/is less/JJR/less than/IN/than r/NN/r then/RB/then i/PRP/i do/VBP/do something/NNP/something. what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? i/PRP/i first/RB/first find/VBP/find the/DT/the partition/NN/partition of/IN/of this/DT/this part/NN/part p/NN/p to/TO/to r/VB/r then/RB/then i/PRP/i invoke/VBP/invoke the/DT/the previous/JJ/previous procedure/NNP/procedure. a/DT/a /,/, p/NN/p /,/, r/NN/r what/WP/what does/VBZ/does it/PRP/it do/VBP/do ?/./? it/PRP/it rearranges/VBZ/rearranges the/DT/the part/NN/part of/IN/of the/DT/the array/NN/array between/IN/between p/NN/p and/CC/and r/NN/r such/JJ/such that/IN/that everything/NN/everything which/WDT/which is/VBZ/is less/RBR/less than/IN/than the/DT/the pivot/NN/pivot is/VBZ/is in/IN/in the/DT/the initial/JJ/initial part/NN/part of/IN/of the/DT/the sub/NN/sub array/NN/array and/CC/and everything/NN/everything which/WDT/which is/VBZ/is more/RBR/more than/IN/than the/DT/the pivot/NN/pivot is/VBZ/is in/IN/in the/DT/the later/JJ/later part/NN/part of/IN/of the/DT/the sub/NN/sub array/NNP/array. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 23/CD/23 /CD/) and/CC/and what/WP/what does/VBZ/does it/PRP/it return/VB/return ?/./? it/PRP/it returns/VBZ/returns the/DT/the demarcating/NN/demarcating lines/NNS/lines /,/, so/RB/so the/DT/the lower/JJR/lower half/NN/half is/VBZ/is going/VBG/going from/IN/from p/NN/p to/TO/to q/VB/q and/CC/and the/DT/the larger/JJR/larger half/NN/half is/VBZ/is going/VBG/going from/IN/from q/NN/q +/:/+ 1/CD/1 to/TO/to r/NNP/r. so/RB/so i/PRP/i need/VBP/need to/TO/to sort/VB/sort the/DT/the lower/JJR/lower half/NN/half and/CC/and the/DT/the upper/JJ/upper half/NN/half separately/NNP/separately. so/RB/so i/PRP/i recursively/RB/recursively invoke/VB/invoke quick/JJ/quick sort/NN/sort on/IN/on the/DT/the lower/JJR/lower half/NN/half which/WDT/which is/VBZ/is going/VBG/going from/IN/from p/NN/p to/TO/to q/VB/q and/CC/and on/IN/on the/DT/the larger/JJR/larger half/NN/half which/WDT/which is/VBZ/is going/VBG/going from/IN/from q/NN/q +/:/+ 1/CD/1 to/TO/to r/NNP/r. the/DT/the while/NN/while true/NN/true means/VBZ/means just/RB/just keep/VB/keep doing/VBG/doing the/DT/the while/NN/while loop/NN/loop forever/NNP/forever. where/WRB/where does/VBZ/does this/DT/this while/NN/while loop/NN/loop stop/NN/stop ?/./? it/PRP/it will/MD/will stop/VB/stop when/WRB/when you/PRP/you return/VBP/return out/RP/out of/IN/of this/DT/this /,/, it/PRP/it ?/./? s/NNS/s like/IN/like an/DT/an exit/NN/exit out/IN/out of/IN/of this/DT/this while/NN/while loop/NN/loop /,/, like/IN/like a/DT/a break/NN/break statement/NNP/statement. so/RB/so when/WRB/when this/DT/this condition/NN/condition is/VBZ/is met/VBN/met that/IN/that i/PRP/i is/VBZ/is more/RBR/more than/IN/than j/NN/j then/RB/then you/PRP/you will/MD/will return/VB/return j/NN/j and/CC/and go/VB/go out/RP/out of/IN/of this/DT/this entire/JJ/entire partition/NN/partition procedure/NN/procedure itself/NNP/itself. so/RB/so which/WDT/which means/VBZ/means that/DT/that you/PRP/you also/RB/also go/VBP/go out/RP/out of/IN/of the/DT/the while/NN/while loop/NNP/loop. so/RB/so when/WRB/when you/PRP/you call/VBP/call quick/JJ/quick sort/NN/sort recursively/RB/recursively /,/, note/VBP/note that/IN/that i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to copy/VB/copy the/DT/the array/NN/array a/DT/a /,/, it/PRP/it is/VBZ/is the/DT/the same/JJ/same array/NN/array that/IN/that is/VBZ/is used/NNP/used. we/PRP/we might/MD/might have/VB/have to/TO/to create/VB/create more/JJR/more copies/NNS/copies of/IN/of the/DT/the variables/NNS/variables /,/, actually/RB/actually we/PRP/we would/MD/would only/RB/only be/VB/be creating/VBG/creating additional/JJ/additional copies/NNS/copies of/IN/of these/DT/these parameters/NNS/parameters that/WDT/that we/PRP/we are/VBP/are passing/NNP/passing. but/CC/but that/IN/that is/VBZ/is the/DT/the space/NN/space created/VBD/created on/IN/on this/DT/this stack/NNP/stack. we/PRP/we are/VBP/are ignoring/VBG/ignoring this/DT/this but/CC/but we/PRP/we are/VBP/are not/RB/not taking/VBG/taking any/DT/any additional/JJ/additional memory/NN/memory for/IN/for the/DT/the elements/NNS/elements that/WDT/that we/PRP/we have/NNP/have. they/PRP/they are/VBP/are all/RB/all sitting/VBG/sitting in/IN/in a/DT/a single/JJ/single array/NNP/array. what/WP/what element/NN/element should/MD/should be/VB/be partitioned/VBN/partitioned around/RP/around ?/./? what/WP/what should/MD/should be/VB/be our/PRP$/our pivot/NN/pivot element/NN/element ?/./? did/VBD/did every/DT/every one/CD/one understand/NN/understand the/DT/the quick/NN/quick sort/NN/sort ?/./? you/PRP/you took/VBD/took a/DT/a pivot/NN/pivot element/NN/element and/CC/and you/PRP/you partitioned/VBD/partitioned the/DT/the array/NN/array around/IN/around the/DT/the pivot/NN/pivot element/NN/element and/CC/and you/PRP/you said/VBD/said let/VB/let me/PRP/me sort/VB/sort this/DT/this left/NN/left half/NN/half and/CC/and let/VB/let me/PRP/me sort/VB/sort this/DT/this right/NN/right half/NN/half and/CC/and then/RB/then i/PRP/i am/VBP/am done/NNP/done. then/RB/then how/WRB/how do/VBP/do you/PRP/you solve/VB/solve the/DT/the left/NN/left and/CC/and right/RB/right half/DT/half ?/./? repeatedly/RB/repeatedly by/IN/by the/DT/the same/JJ/same procedure/NNP/procedure. since/IN/since we/PRP/we have/VBP/have a/DT/a notion/NN/notion of/IN/of a/DT/a left/NN/left half/NN/half and/CC/and a/DT/a right/NN/right half/NN/half therefore/RB/therefore we/PRP/we need/VBP/need to/TO/to write/VB/write a/DT/a quick/NN/quick sort/NN/sort procedure/NN/procedure in/IN/in this/DT/this manner/NN/manner /,/, because/IN/because this/DT/this will/MD/will specify/VB/specify the/DT/the limits/NNS/limits of/IN/of the/DT/the sub/NN/sub array/NN/array that/WDT/that you/PRP/you are/VBP/are sorting/VBG/sorting p/NN/p /,/, r/NNP/r. let/VB/let us/PRP/us try/NN/try and/CC/and analyze/NN/analyze how/WRB/how much/JJ/much time/NN/time does/VBZ/does quick/JJ/quick sort/NN/sort takes/VBZ/takes ?/./? we/PRP/we have/VBP/have only/RB/only seen/VBN/seen that/IN/that the/DT/the partition/NN/partition procedure/NN/procedure takes/VBZ/takes order/NN/order n/NN/n times/NNS/times that/WDT/that is/VBZ/is linear/JJ/linear time/NN/time but/CC/but we/PRP/we do/VBP/do not/RB/not know/VB/know how/WRB/how much/RB/much time/NN/time quick/NN/quick sort/NN/sort takes/NNP/takes. so/RB/so the/DT/the time/NN/time taken/VBN/taken by/IN/by quick/JJ/quick sort/NN/sort will/MD/will depend/VB/depend upon/IN/upon how/WRB/how the/DT/the split/NN/split is/VBZ/is happening/NNP/happening. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/DT/that now/RB/now ?/./? i/PRP/i should/MD/should not/RB/not say/VB/say left/VBN/left half/NN/half but/CC/but it/PRP/it is/VBZ/is left/VBN/left part/NNP/part. so/RB/so how/WRB/how many/JJ/many elements/NNS/elements end/VBP/end up/RP/up in/IN/in the/DT/the left/NN/left part/NN/part and/CC/and how/WRB/how many/JJ/many elements/NNS/elements end/VBP/end up/RP/up in/IN/in the/DT/the right/NN/right part/NN/part ?/./? that/IN/that is/VBZ/is what/WP/what we/PRP/we should/MD/should find/VB/find out/RP/out and/CC/and that/IN/that will/MD/will determine/VB/determine how/WRB/how much/RB/much time/NN/time quick/NN/quick sort/NN/sort is/VBZ/is taking/NNP/taking. let/NN/let ?/./? s/NNS/s see/VBP/see why/NNP/why. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 00/CD/00 /CD/) so/RB/so if/IN/if at/IN/at every/DT/every point/NN/point /,/, suppose/NN/suppose the/DT/the following/VBG/following was/VBD/was happening/NNP/happening. at/IN/at every/DT/every point/NN/point we/PRP/we were/VBD/were actually/RB/actually dividing/VBG/dividing the/DT/the array/NN/array up/RP/up in/IN/in to/TO/to two/CD/two equal/JJ/equal halves/NNS/halves which/WDT/which means/VBZ/means that/DT/that i/PRP/i started/VBD/started of/IN/of with/IN/with n/NN/n elements/NNS/elements /,/, this/DT/this here/RB/here /:/[ hindi/NN/hindi conversation/NN/conversation /:/] somehow/NN/somehow or/CC/or i/PRP/i was/VBD/was lucky/JJ/lucky or/CC/or whatever/RB/whatever it/PRP/it is/VBZ/is /,/, my/PRP$/my pivot/NN/pivot was/VBD/was such/JJ/such that/IN/that it/PRP/it was/VBD/was the/DT/the median/JJ/median lets/NNS/lets say/NNP/say. which/WDT/which means/VBZ/means that/DT/that half/NN/half the/DT/the elements/NNS/elements were/VBD/were less/JJR/less and/CC/and half/NN/half were/VBD/were more/NNP/more. so/RB/so half/NN/half the/DT/the elements/NNS/elements ended/VBD/ended up/RP/up in/IN/in the/DT/the left/NN/left half/NN/half and/CC/and half/DT/half elements/NNS/elements ended/VBD/ended up/RP/up in/IN/in the/DT/the right/NN/right part/NNP/part. then/RB/then when/WRB/when i/PRP/i did/VBD/did a/DT/a quick/NN/quick sort/NN/sort on/IN/on this/DT/this again/NN/again i/PRP/i was/VBD/was lucky/JJ/lucky /,/, again/RB/again i/PRP/i picked/VBD/picked a/DT/a pivot/NN/pivot such/JJ/such that/IN/that it/PRP/it divided/VBD/divided up/RP/up the/DT/the thing/NN/thing in/IN/in to/TO/to two/CD/two parts/NNP/parts. and/CC/and when/WRB/when i/PRP/i did/VBD/did my/PRP$/my quick/NN/quick sort/NN/sort on/IN/on this/DT/this again/NN/again i/PRP/i was/VBD/was lucky/JJ/lucky it/PRP/it just/RB/just divided/VBD/divided up/RP/up in/IN/in to/TO/to two/CD/two equal/JJ/equal parts/NNS/parts and/CC/and so/RB/so on/NNP/on. suppose/NN/suppose i/PRP/i was/VBD/was lucky/JJ/lucky at/IN/at every/DT/every step/NN/step /,/, then/RB/then how/WRB/how much/RB/much time/NN/time am/NN/am i/PRP/i taking/VBG/taking ?/./? let/NN/let ?/./? s/NNS/s see/NNP/see. how/WRB/how much/JJ/much time/NN/time did/VBD/did i/PRP/i take/VBP/take to/TO/to divide/VB/divide this/DT/this array/NN/array up/RP/up into/IN/into two/CD/two parts/NNS/parts that/WDT/that is/VBZ/is n/2/-NONE-/n/2 and/CC/and n/2/-NONE-/n/2 ?/./? it/PRP/it is/VBZ/is n/VBN/n times/NNS/times /,/, the/DT/the size/NN/size of/IN/of this/DT/this array/NNP/array. we/PRP/we saw/VBD/saw the/DT/the partition/NN/partition procedure/NN/procedure took/VBD/took order/NN/order n/NN/n time/NNP/time. how/WRB/how much/JJ/much time/NN/time did/VBD/did i/PRP/i take/VBP/take to/TO/to divide/VB/divide this/DT/this array/NN/array of/IN/of size/NN/size n/2/-NONE-/n/2 into/IN/into two/CD/two parts/NNS/parts that/WDT/that is/VBZ/is n/4/-NONE-/n/4 and/CC/and n/4/-NONE-/n/4 ?/./? the/DT/the n/2/NNP/n/2 here/RB/here and/CC/and n/2/-NONE-/n/2 here/RB/here so/RB/so that/IN/that it/PRP/it becomes/VBZ/becomes n/NNP/n. then/RB/then to/TO/to divide/VB/divide this/DT/this up/NN/up into/IN/into two/CD/two parts/NNS/parts that/WDT/that is/VBZ/is n/8/-NONE-/n/8 and/CC/and n/8/-NONE-/n/8 /,/, i/PRP/i again/RB/again took/VBD/took n/4/-NONE-/n/4 here/RB/here n/4/-NONE-/n/4 here/RB/here n/4/-NONE-/n/4 and/CC/and n/4/-NONE-/n/4 and/CC/and so/RB/so that/IN/that is/VBZ/is also/RB/also n/NNP/n. so/RB/so in/IN/in each/DT/each level/NN/level of/IN/of this/DT/this tree/NN/tree that/IN/that i/PRP/i have/VBP/have drawn/VBN/drawn am/NN/am taking/VBG/taking order/NN/order n/NN/n time/NN/time to/TO/to do/VB/do the/DT/the partition/NNP/partition. and/CC/and how/WRB/how many/JJ/many levels/NNS/levels are/VBP/are there/RB/there in/IN/in this/DT/this tree/NN/tree of/IN/of mine/JJ/mine ?/./? it/PRP/it is/VBZ/is log/JJ/log n/NN/n because/IN/because eventually/RB/eventually you/PRP/you will/MD/will end/VB/end up/RP/up with/IN/with one/CD/one and/CC/and there/EX/there would/MD/would be/VB/be log/JJ/log n/NN/n such/JJ/such levels/NNP/levels. so/IN/so the/DT/the total/JJ/total time/NN/time taken/VBN/taken is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. why/WRB/why have/VBP/have i/PRP/i written/VBN/written theta/NN/theta of/IN/of n/NN/n and/CC/and not/RB/not o/VB/o of/IN/of n/NN/n ?/./? can/MD/can you/PRP/you also/RB/also say/VBP/say that/IN/that the/DT/the partition/NN/partition will/MD/will take/VB/take at/IN/at least/JJS/least omega/NN/omega n/NN/n time/NN/time or/CC/or at/IN/at least/JJS/least will/MD/will take/VB/take n/NN/n time/NN/time ?/./? yes/NNS/yes /,/, because/IN/because when/WRB/when did/VBD/did we/PRP/we say/VBP/say that/IN/that we/PRP/we would/MD/would stop/VB/stop ?/./? when/WRB/when our/PRP$/our i/PRP/i and/CC/and j/VB/j would/MD/would inter/VB/inter change/NN/change /,/, so/RB/so i/PRP/i has/VBZ/has to/TO/to go/VB/go at/IN/at least/JJS/least till/NN/till some/DT/some part/NN/part and/CC/and j/NN/j has/VBZ/has to/TO/to go/VB/go /,/, so/RB/so the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times i/PRP/i will/MD/will increase/VB/increase i/PRP/i or/CC/or decrease/VB/decrease j/NN/j is/VBZ/is at/IN/at least/JJS/least 10/CD/10. total/NN/total number/NN/number of/IN/of times/NNS/times i/PRP/i will/MD/will increase/VB/increase i/PRP/i /,/, i/PRP/i am/VBP/am not/RB/not saying/VBG/saying that/IN/that number/NN/number of/IN/of times/NNS/times i/PRP/i will/MD/will increase/VB/increase i/PRP/i is/VBZ/is at/IN/at least/JJS/least half/NN/half /,/, it/PRP/it is/VBZ/is not/RB/not n/2/NNP/n/2. may/MD/may be/VB/be i/PRP/i increased/VBD/increased i/PRP/i only/RB/only n/4/-NONE-/n/4 times/VBZ/times but/CC/but then/RB/then it/PRP/it means/VBZ/means i/PRP/i decreased/VBD/decreased j/NN/j at/IN/at least/JJS/least 3n/4/CD/3n/4 times/NNP/times. so/RB/so the/DT/the sum/NN/sum is/VBZ/is at/IN/at least/JJS/least 10/CD/10. i/PRP/i need/VBP/need at/IN/at least/JJS/least n/NN/n times/NNS/times which/WDT/which mean/JJ/mean i/PRP/i need/VBP/need utmost/RB/utmost m/NN/m times/NNS/times and/CC/and i/PRP/i need/VBP/need at/IN/at least/JJS/least n/NN/n times/NNS/times /,/, so/RB/so the/DT/the exact/JJ/exact time/NN/time is/VBZ/is really/RB/really some/DT/some constant/JJ/constant time/NN/time /,/, theta/NN/theta of/IN/of n/NNP/n. so/RB/so i/PRP/i can/MD/can actually/RB/actually say/VB/say equality/NNP/equality. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 31/CD/31 /CD/) what/WP/what happens/NNS/happens in/IN/in general/JJ/general /,/, if/IN/if you/PRP/you are/VBP/are not/RB/not lucky/JJ/lucky ?/./? what/WP/what is/VBZ/is the/DT/the worst/JJS/worst case/NN/case ?/./? n/NN/n squared/VBD/squared /,/, when/WRB/when we/PRP/we partition/VBP/partition /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. once/RB/once side/VB/side gets/NNS/gets one/CD/one element/NN/element and/CC/and the/DT/the other/JJ/other side/NN/side gets/NNS/gets n-1/-NONE-/n-1 elements/NNP/elements. we/PRP/we could/MD/could have/VB/have such/JJ/such a/DT/a situation/NN/situation /,/, t/NN/t /:/( 1/CD/1 /CD/) +/CD/+ t/NN/t /:/( n-1/-NONE-/n-1 /:/) /./. again/RB/again i/PRP/i am/VBP/am writing/VBG/writing the/DT/the recurrence/NN/recurrence relation/NNP/relation. time/NN/time to/TO/to quick/VB/quick sort/NN/sort n/NN/n elements/NNS/elements equals/NNS/equals the/DT/the time/NN/time to/TO/to partition/NNP/partition. that/IN/that was/VBD/was the/DT/the very/JJ/very first/JJ/first step/NN/step of/IN/of our/PRP$/our quick/JJ/quick sort/NN/sort procedure/NN/procedure plus/CC/plus the/DT/the second/JJ/second step/NN/step of/IN/of our/PRP$/our quick/JJ/quick sort/NN/sort procedure/NN/procedure was/VBD/was quick/JJ/quick sort/NN/sort the/DT/the left/NN/left part/NN/part lets/NNS/lets say/VBP/say the/DT/the left/NN/left part/NN/part has/VBZ/has one/CD/one element/NN/element in/IN/in it/PRP/it /,/, so/RB/so t/RB/t /:/( 1/CD/1 /CD/) plus/CC/plus the/DT/the time/NN/time to/TO/to quick/VB/quick sort/NN/sort the/DT/the right/NN/right part/NN/part which/WDT/which has/VBZ/has lets/NNS/lets say/VBP/say n-1/-NONE-/n-1 elements/NNS/elements /,/, it/PRP/it is/VBZ/is t/VBN/t /-NONE-/( n-1/-NONE-/n-1 /:/) /./. so/RB/so this/DT/this is/VBZ/is our/PRP$/our recurrence/NN/recurrence and/CC/and let/VB/let us/PRP/us solve/VB/solve this/DT/this recurrence/NN/recurrence in/IN/in exactly/RB/exactly the/DT/the same/JJ/same manner/NN/manner that/IN/that we/PRP/we did/VBD/did earlier/NNP/earlier. so/RB/so i/PRP/i am/VBP/am assuming/VBG/assuming t/NN/t /:/( 1/CD/1 /CD/) as/IN/as zero/NNP/zero. so/RB/so this/DT/this is/VBZ/is just/RB/just t/VBN/t /-NONE-/( n-1/-NONE-/n-1 /:/) +/:/+ theta/NN/theta of/IN/of n/NNP/n. if/IN/if you/PRP/you have/VBP/have one/CD/one element/NN/element there/RB/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/VBN/done /,/, it/PRP/it is/VBZ/is sorted/NNP/sorted. so/RB/so this/DT/this is/VBZ/is just/RB/just t/VBN/t /-NONE-/( n-1/-NONE-/n-1 /:/) plus/RB/plus theta/NN/theta of/IN/of n/NNP/n. what/WP/what is/VBZ/is t/VBN/t /-NONE-/( n-1/-NONE-/n-1 /:/) ?/./? it/PRP/it is/VBZ/is t/VBN/t /-NONE-/( n-2/-NONE-/n-2 /:/) plus/RB/plus theta/NN/theta of/IN/of /NNP/( n-1/-NONE-/n-1 /:/) /./. so/RB/so t/VB/t /:/( n-2/-NONE-/n-2 /:/) plus/RB/plus theta/NN/theta of/IN/of n/NN/n /:/( n-1/-NONE-/n-1 /:/) and/CC/and t/NN/t /:/( n-2/-NONE-/n-2 /:/) is/VBZ/is t/VBN/t /-NONE-/( n-3/-NONE-/n-3 /:/) plus/RB/plus theta/NN/theta of/IN/of /NNP/( n-2/-NONE-/n-2 /:/) and/CC/and so/RB/so on/NNP/on. so/IN/so it/PRP/it has/VBZ/has essentially/RB/essentially become/VBN/become theta/NN/theta of/IN/of k/NN/k where/WRB/where k/NN/k going/VBG/going from/IN/from one/CD/one through/IN/through n/NNP/n. what/WP/what all/DT/all i/PRP/i am/VBP/am saying/VBG/saying is/VBZ/is /,/, this/DT/this is/VBZ/is then/RB/then equal/JJ/equal to/TO/to t/VB/t /:/( n-2/-NONE-/n-2 /:/) plus/RB/plus theta/NN/theta of/IN/of /NNP/( n-1/-NONE-/n-1 /:/) plus/RB/plus theta/NN/theta of/IN/of n/NN/n /,/, which/WDT/which is/VBZ/is t/VBN/t /-NONE-/( n-3/-NONE-/n-3 /:/) plus/RB/plus theta/NN/theta of/IN/of /NNP/( n-2/-NONE-/n-2 /:/) plus/RB/plus this/DT/this term/NN/term which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to t/VB/t /:/( n-4/-NONE-/n-4 /:/) plus/RB/plus theta/NN/theta of/IN/of /NNP/( n-3/-NONE-/n-3 /:/) plus/RB/plus this/DT/this entire/JJ/entire thing/NN/thing and/CC/and so/RB/so on/IN/on /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 54/CD/54 /CD/) /./. so/RB/so this/DT/this is/VBZ/is what/WP/what you/PRP/you get/VBP/get which/WDT/which is/VBZ/is basically/RB/basically theta/NN/theta of/IN/of n/NN/n squared/NNP/squared. it/PRP/it is/VBZ/is n/VBN/n squared/VBN/squared /,/, k/NN/k going/VBG/going from/IN/from one/CD/one through/IN/through n/NN/n /,/, sum/NN/sum of/IN/of k/NN/k is/VBZ/is just/RB/just n/VBN/n squared/NNP/squared. that/IN/that is/VBZ/is why/WRB/why you/PRP/you get/VBP/get theta/DT/theta of/IN/of n/NN/n squared/NNP/squared. if/IN/if this/DT/this theta/NN/theta is/VBZ/is bothering/VBG/bothering you/PRP/you /,/, just/RB/just replace/NN/replace it/PRP/it by/IN/by c/NN/c /,/, some/DT/some constant/JJ/constant times/NNS/times n/NNP/n. so/RB/so this/DT/this would/MD/would be/VB/be the/DT/the worst/JJS/worst case/NNP/case. so/RB/so the/DT/the best/JJS/best case/NN/case is/VBZ/is when/WRB/when you/PRP/you do/VBP/do a/DT/a half/NN/half split/NN/split and/CC/and the/DT/the worst/JJS/worst case/NN/case is/VBZ/is when/WRB/when you/PRP/you know/VBP/know it/PRP/it is/VBZ/is a/DT/a skewed/VBN/skewed split/NNP/split. so/RB/so this/DT/this is/VBZ/is what/WP/what the/DT/the worst/JJS/worst case/NN/case look/NN/look like/IN/like pictorially/RB/pictorially /,/, n/NN/n divided/VBD/divided into/IN/into 1/CD/1 and/CC/and n-1/-NONE-/n-1 /,/, n-1/-NONE-/n-1 divided/VBD/divided into/IN/into 1/CD/1 and/CC/and n-2/-NONE-/n-2 /,/, n-2/-NONE-/n-2 divided/VBD/divided into/IN/into 1/CD/1 and/CC/and n-3/-NONE-/n-3 and/CC/and so/RB/so on/NNP/on. and/CC/and what/WP/what will/MD/will be/VB/be the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree now/RB/now ?/./? it/PRP/it is/VBZ/is n/NNP/n. in/IN/in each/DT/each step/NN/step you/PRP/you are/VBP/are taking/VBG/taking time/NN/time n/NN/n and/CC/and again/RB/again you/PRP/you are/VBP/are taking/VBG/taking time/NN/time n/NN/n /,/, n-1/-NONE-/n-1 /,/, n-2/-NONE-/n-2 and/CC/and so/RB/so on/NNP/on. all/DT/all the/DT/the way/NN/way down/IN/down to/TO/to 1/CD/1 so/RB/so that/IN/that makes/NNS/makes it/PRP/it n/VBP/n squared/NNP/squared. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 46/CD/46 /CD/) when/WRB/when does/VBZ/does the/DT/the worst/JJS/worst case/NN/case appear/NN/appear ?/./? suppose/NN/suppose we/PRP/we were/VBD/were doing/VBG/doing a/DT/a following/VBG/following scheme/NN/scheme /,/, we/PRP/we were/VBD/were saying/VBG/saying let/NN/let me/PRP/me take/VBP/take the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NN/pivot always/NNP/always. that/IN/that is/VBZ/is what/WP/what we/PRP/we did/VBD/did to/TO/to begin/VB/begin with/IN/with /,/, let/VB/let me/PRP/me take/VB/take the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. so/RB/so if/IN/if my/PRP$/my input/NN/input is/VBZ/is sorted/VBN/sorted already/RB/already lets/NNS/lets say/VBP/say in/IN/in increasing/VBG/increasing order/NNP/order. then/RB/then i/PRP/i took/VBD/took the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. how/WRB/how many/JJ/many elements/NNS/elements will/MD/will be/VB/be in/IN/in my/PRP$/my lower/JJR/lower part/NN/part ?/./? the/DT/the n-1/NN/n-1 elements/NNS/elements in/IN/in my/PRP$/my lower/JJR/lower part/NN/part and/CC/and only/RB/only one/CD/one element/NN/element in/IN/in my/PRP$/my upper/NN/upper part/NN/part because/IN/because there/EX/there is/VBZ/is no/DT/no element/NN/element larger/JJR/larger than/IN/than the/DT/the last/JJ/last element/NNP/element. and/CC/and then/RB/then once/RB/once again/RB/again to/TO/to sort/VB/sort the/DT/the lower/JJR/lower part/NN/part i/PRP/i took/VBD/took the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. so/RB/so once/RB/once again/RB/again it/PRP/it will/MD/will get/VB/get divided/VBN/divided in/IN/in this/DT/this manner/NNP/manner. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 16/CD/16 /CD/) so/RB/so the/DT/the worst/JJS/worst case/NN/case would/MD/would happen/VB/happen when/WRB/when the/DT/the input/NN/input is/VBZ/is already/RB/already sorted/VBN/sorted in/IN/in ascending/NN/ascending order/NN/order or/CC/or in/IN/in descending/NN/descending order/NNP/order. even/RB/even in/IN/in descending/VBG/descending order/NN/order you/PRP/you will/MD/will take/VB/take n/NN/n squared/VBN/squared time/NNP/time. because/IN/because when/WRB/when it/PRP/it is/VBZ/is in/IN/in descending/VBG/descending order/NN/order you/PRP/you took/VBD/took the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NN/pivot /,/, it/PRP/it is/VBZ/is the/DT/the smallest/JJS/smallest element/NN/element /:/[ hindi/NN/hindi conversation/NN/conversation /:/] there/EX/there will/MD/will be/VB/be one/CD/one element/NN/element /,/, right/RB/right half/DT/half will/MD/will have/VB/have all/PDT/all the/DT/the n-1/NN/n-1 elements/NNS/elements in/IN/in it/NNP/it. and/CC/and you/PRP/you keep/VB/keep doing/VBG/doing this/DT/this and/CC/and this/DT/this is/VBZ/is what/WP/what will/MD/will happen/NNP/happen. similar/JJ/similar kind/NN/kind of/IN/of a/DT/a thing/NN/thing happened/VBD/happened in/IN/in insertion/NN/insertion sort/NNP/sort. in/IN/in insertion/NN/insertion sort/NN/sort we/PRP/we said/VBD/said the/DT/the worst/JJS/worst case/NN/case would/MD/would happen/VB/happen when/WRB/when it/PRP/it is/VBZ/is in/IN/in descending/VBG/descending order/NNP/order. because/IN/because if/IN/if you/PRP/you recall/VBP/recall in/IN/in insertion/NN/insertion sort/NN/sort we/PRP/we were/VBD/were taking/VBG/taking an/DT/an element/NN/element and/CC/and figuring/VBG/figuring out/RP/out the/DT/the best/JJS/best place/NN/place to/TO/to put/VB/put that/IN/that element/NNP/element. and/CC/and we/PRP/we would/MD/would go/VB/go from/IN/from the/DT/the end/NN/end to/TO/to find/VB/find the/DT/the best/JJS/best place/NNP/place. so/RB/so if/IN/if it/PRP/it is/VBZ/is sorted/VBN/sorted in/IN/in decreasing/NN/decreasing order/NN/order then/RB/then the/DT/the best/JJS/best place/NN/place is/VBZ/is always/RB/always the/DT/the front/NN/front of/IN/of the/DT/the array/NNP/array. so/RB/so you/PRP/you will/MD/will have/VB/have to/TO/to go/VB/go all/PDT/all the/DT/the way/NN/way to/TO/to the/DT/the front/NN/front of/IN/of the/DT/the array/NN/array at/IN/at every/DT/every step/NNP/step. it/PRP/it is/VBZ/is again/RB/again 1/CD/1 +/CD/+ 2/CD/2 +/CD/+ 3/CD/3 +/CD/+ 4/CD/4 and/CC/and so/RB/so on/IN/on all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to n/NNP/n. so/RB/so you/PRP/you will/MD/will get/VB/get again/RB/again the/DT/the same/JJ/same n/NN/n squared/NNP/squared. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 35/CD/35 /CD/) but/CC/but in/IN/in insertion/NN/insertion sort/NN/sort if/IN/if the/DT/the array/NN/array was/VBD/was sorted/VBN/sorted in/IN/in increasing/VBG/increasing order/NN/order then/RB/then how/WRB/how much/RB/much time/NN/time do/VBP/do you/PRP/you take/VB/take ?/./? then/RB/then it/PRP/it is/VBZ/is the/DT/the best/JJS/best case/NN/case because/IN/because you/PRP/you do/VBP/do not/RB/not have/VB/have to/TO/to move/VB/move back/RB/back anymore/NNP/anymore. every/DT/every element/NN/element is/VBZ/is in/IN/in the/DT/the right/NN/right place/NN/place /,/, so/RB/so it/PRP/it just/RB/just takes/VBZ/takes constant/JJ/constant amount/NN/amount of/IN/of time/NNP/time. that/IN/that is/VBZ/is the/DT/the comparison/NN/comparison with/IN/with insertion/NN/insertion sort/NNP/sort. but/CC/but here/RB/here both/DT/both /,/, whether/IN/whether it/PRP/it ?/./? s/NNS/s sorted/VBD/sorted increasing/VBG/increasing or/CC/or sorted/VBN/sorted decreasing/VBG/decreasing you/PRP/you might/MD/might end/VB/end up/RP/up with/IN/with something/NN/something like/IN/like n/NN/n squared/VBD/squared time/NNP/time. so/RB/so worst/JJ/worst case/NN/case seems/VBZ/seems to/TO/to occur/VB/occur more/JJR/more often/NNP/often. let/NN/let us/PRP/us continue/VBP/continue with/IN/with this/DT/this analysis/NNP/analysis. we/PRP/we saw/VBD/saw /:/[ hindi/NN/hindi conversation/NN/conversation /:/] if/IN/if the/DT/the split/NN/split was/VBD/was half/PDT/half and/CC/and half/DT/half at/IN/at every/DT/every step/NN/step /,/, then/RB/then we/PRP/we are/VBP/are lucky/JJ/lucky and/CC/and we/PRP/we get/VBP/get n/VBN/n log/NN/log n/NN/n time/NNP/time. suppose/NN/suppose it/PRP/it was/VBD/was not/RB/not half/NN/half and/CC/and half/DT/half but/CC/but it/PRP/it was/VBD/was one/CD/one tenth/NN/tenth /,/, nine/CD/nine tenth/NN/tenth that/WDT/that is/VBZ/is 10/CD/10 percent/NN/percent of/IN/of the/DT/the elements/NNS/elements end/VBP/end up/RP/up on/IN/on one/CD/one side/NN/side and/CC/and 90/CD/90 %/NN/% of/IN/of the/DT/the elements/NNS/elements change/VBP/change out/NNP/out. suppose/NN/suppose this/DT/this was/VBD/was happening/VBG/happening at/IN/at every/DT/every stage/NNP/stage. you/PRP/you will/MD/will not/RB/not call/VB/call this/DT/this lucky/JJ/lucky because/IN/because it/PRP/it ?/./? s/NNS/s not/RB/not half/NN/half and/CC/and half/DT/half but/CC/but it/PRP/it ?/./? s/NNS/s still/RB/still good/JJ/good which/WDT/which we/PRP/we will/MD/will argue/VB/argue now/NNP/now. at/IN/at the/DT/the first/JJ/first stage/NN/stage this/DT/this is/VBZ/is what/WP/what happens/NNS/happens /,/, n/10/-NONE-/n/10 elements/NNS/elements on/IN/on one/CD/one side/NN/side and/CC/and 9n/10/CD/9n/10 elements/NNS/elements on/IN/on the/DT/the other/JJ/other side/NNP/side. how/WRB/how much/JJ/much time/NN/time did/VBD/did i/PRP/i take/VBP/take to/TO/to do/VB/do this/DT/this partition/NN/partition ?/./? n/NN/n time/NN/time /,/, then/RB/then this/DT/this n/10/NN/n/10 got/VBD/got divided/VBN/divided into/IN/into one/CD/one tenth/JJ/tenth on/IN/on one/CD/one side/NN/side and/CC/and nine/CD/nine tenth/NN/tenth on/IN/on the/DT/the other/JJ/other side/NNP/side. one/CD/one tenth/NN/tenth means/VBZ/means n/100/-NONE-/n/100 on/IN/on one/CD/one side/NN/side and/CC/and nine/CD/nine tenth/NN/tenth of/IN/of this/DT/this is/VBZ/is 9n/100/CD/9n/100 on/IN/on the/DT/the other/JJ/other side/NNP/side. and/CC/and this/DT/this /NN/( 9/10/CD/9/10 /CD/) n/NN/n also/RB/also gets/VBZ/gets divided/VBN/divided into/IN/into 9n/10/CD/9n/10 on/IN/on one/CD/one side/NN/side and/CC/and nine/CD/nine tenths/NNS/tenths of/IN/of this/DT/this guy/NN/guy which/WDT/which is/VBZ/is 81/100n/CD/81/100n on/IN/on this/DT/this side/NNP/side. how/WRB/how much/JJ/much time/NN/time did/VBD/did it/PRP/it take/VB/take to/TO/to partition/NN/partition this/DT/this into/IN/into this/DT/this and/CC/and this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 45/CD/45 /CD/) n/10/-NONE-/n/10 number/NN/number of/IN/of elements/NNS/elements and/CC/and so/RB/so for/IN/for this/DT/this the/DT/the total/NN/total time/NN/time is/VBZ/is still/RB/still n/NNP/n. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 56/CD/56 /CD/) so/RB/so similarly/RB/similarly the/DT/the total/JJ/total time/NN/time for/IN/for every/DT/every level/NN/level will/MD/will continue/VB/continue to/TO/to be/VB/be n/NNP/n. but/CC/but now/RB/now how/WRB/how many/JJ/many levels/NNS/levels do/VBP/do i/PRP/i have/VB/have ?/./? let/VB/let ?/./? s/NNS/s figure/VBP/figure out/RP/out that/NNP/that. let/NN/let ?/./? s/NNS/s just/RB/just look/VBP/look at/IN/at the/DT/the largest/JJS/largest number/NN/number we/PRP/we have/VBP/have /,/, as/IN/as we/PRP/we go/VBP/go down/RB/down one/CD/one level/NN/level at/IN/at a/DT/a time/NNP/time. we/PRP/we want/VBP/want all/DT/all the/DT/the numbers/NNS/numbers go/VBP/go down/RB/down to/TO/to one/CD/one /,/, so/RB/so the/DT/the largest/JJS/largest number/NN/number is/VBZ/is the/DT/the one/CD/one which/WDT/which we/PRP/we have/VBP/have to/TO/to say/VB/say it/PRP/it goes/VBZ/goes down/RP/down to/TO/to a/DT/a one/NNP/one. so/RB/so at/IN/at this/DT/this route/NN/route we/PRP/we have/VBP/have n/VBN/n /,/, the/DT/the largest/JJS/largest number/NN/number at/IN/at this/DT/this step/NN/step will/MD/will be/VB/be 9n/10/CD/9n/10 because/IN/because the/DT/the other/JJ/other number/NN/number is/VBZ/is smaller/NNP/smaller. what/WP/what will/MD/will be/VB/be the/DT/the largest/JJS/largest number/NN/number at/IN/at this/DT/this step/NN/step ?/./? it/PRP/it will/MD/will be/VB/be in/IN/in the/DT/the nine/CD/nine tenths/NNS/tenths of/IN/of this/DT/this guy/NN/guy which/WDT/which will/MD/will be/VB/be the/DT/the largest/JJS/largest one/CD/one /,/, so/RB/so that/IN/that will/MD/will be/VB/be 81/100n/CD/81/100n. the/DT/the largest/JJS/largest at/IN/at the/DT/the next/JJ/next step/NN/step would/MD/would be/VB/be the/DT/the nine/CD/nine tenths/NNS/tenths of/IN/of this/DT/this guy/NN/guy /:/[ hindi/NN/hindi conversation/NN/conversation /:/] that/IN/that will/MD/will be/VB/be the/DT/the largest/JJS/largest guy/NN/guy at/IN/at this/DT/this step/NN/step which/WDT/which will/MD/will be/VB/be this/DT/this and/CC/and so/RB/so on/NNP/on. so/IN/so the/DT/the largest/JJS/largest number/NN/number at/IN/at every/DT/every level/NN/level is/VBZ/is decreasing/VBG/decreasing by/IN/by a/DT/a factor/NN/factor of/IN/of 9/10/CD/9/10. how/WRB/how many/JJ/many times/NNS/times can/MD/can i/VB/i decrease/NN/decrease before/IN/before it/PRP/it gets/VBZ/gets down/RB/down to/TO/to one/CD/one ?/./? at/IN/at most/JJS/most log/JJ/log of/IN/of n/NN/n to/TO/to the/DT/the base/NN/base 10/9/CD/10/9 because/IN/because it/PRP/it is/VBZ/is decrementing/VBG/decrementing by/IN/by a/DT/a factor/NN/factor of/IN/of 9/CD/9 /,/, 10/CD/10 ?/./? s/NNS/s at/IN/at every/DT/every step/NNP/step. when/WRB/when it/PRP/it was/VBD/was decrementing/VBG/decrementing by/IN/by half/NN/half at/IN/at every/DT/every step/NN/step /,/, we/PRP/we were/VBD/were saying/VBG/saying log/NN/log n/NN/n base/NN/base two/NNP/two. so/RB/so if/IN/if we/PRP/we just/RB/just work/VBP/work out/RP/out the/DT/the math/NN/math it/PRP/it will/MD/will be/VB/be log/NN/log n/NN/n to/TO/to the/DT/the base/NN/base 10/9/CD/10/9 which/WDT/which is/VBZ/is order/NN/order log/NN/log n/NNP/n. it/PRP/it is/VBZ/is just/RB/just some/DT/some constant/JJ/constant /,/, it/PRP/it is/VBZ/is different/JJ/different constant/NN/constant times/NNS/times log/VBP/log n/NNP/n. so/RB/so once/RB/once again/RB/again the/DT/the height/NN/height is/VBZ/is order/NN/order log/NN/log n/NN/n /,/, so/RB/so the/DT/the total/JJ/total time/NN/time taken/VBN/taken is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. because/IN/because at/IN/at each/DT/each level/NN/level we/PRP/we are/VBP/are taking/VBG/taking a/DT/a total/NN/total time/NN/time of/IN/of n/NN/n and/CC/and number/NN/number of/IN/of levels/NNS/levels is/VBZ/is log/JJ/log n/NNP/n. but/CC/but even/RB/even better/JJR/better /,/, this/DT/this is/VBZ/is we/PRP/we are/VBP/are only/RB/only providing/VBG/providing an/DT/an upper/JJ/upper bound/NNP/bound. even/RB/even if/IN/if this/DT/this split/NN/split was/VBD/was in/IN/in this/DT/this strange/NN/strange manner/NN/manner one/CD/one tenth/NN/tenth and/CC/and nine/CD/nine tenth/NN/tenth or/CC/or any/DT/any constant/JJ/constant fractions/NNS/fractions /,/, there/EX/there is/VBZ/is nothing/NN/nothing sacrosanct/NN/sacrosanct about/IN/about one/CD/one tenth/NN/tenth and/CC/and nine/CD/nine tenth/NNP/tenth. i/PRP/i could/MD/could have/VB/have said/VBN/said 36/37/CD/36/37 /,/, even/RB/even that/IN/that is/VBZ/is ok/NN/ok /,/, it/PRP/it is/VBZ/is not/RB/not a/DT/a problem/NNP/problem. even/RB/even then/RB/then we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to argue/VB/argue log/NN/log n/NNP/n. there/EX/there is/VBZ/is nothing/NN/nothing spectacular/JJ/spectacular or/CC/or special/JJ/special about/IN/about 1/10/CD/1/10. the/DT/the important/JJ/important thing/NN/thing is/VBZ/is we/PRP/we are/VBP/are saying/VBG/saying a/DT/a constant/NN/constant fraction/NN/fraction of/IN/of numbers/NNS/numbers go/VBP/go on/IN/on one/CD/one side/NNP/side. we/PRP/we can/MD/can not/RB/not afford/VB/afford to/TO/to say/VB/say only/RB/only one/CD/one number/NN/number go/RB/go on/IN/on one/CD/one side/NN/side that/WDT/that becomes/VBZ/becomes bad/JJ/bad for/IN/for this/NNP/this. when/WRB/when only/RB/only one/CD/one number/NN/number go/RB/go on/IN/on one/CD/one side/NN/side or/CC/or only/RB/only two/CD/two numbers/NNS/numbers go/VBP/go on/IN/on one/CD/one side/NN/side then/RB/then we/PRP/we will/MD/will end/VB/end up/RP/up taking/VBG/taking n/NN/n squared/VBD/squared time/NNP/time. but/CC/but if/IN/if we/PRP/we say/VBP/say a/DT/a constant/JJ/constant fraction/NN/fraction one/CD/one tenth/NN/tenth or/CC/or one/CD/one hundredth/NN/hundredth or/CC/or one/CD/one thousandth/NN/thousandth or/CC/or one/CD/one millionth/JJ/millionth the/DT/the height/NN/height would/MD/would still/RB/still be/VB/be log/JJ/log n/NNP/n. we/PRP/we will/MD/will do/VB/do a/DT/a formal/JJ/formal analysis/NN/analysis starting/VBG/starting from/IN/from the/DT/the next/JJ/next slide/NN/slide /,/, but/CC/but just/RB/just to/TO/to give/VB/give you/PRP/you a/DT/a little/RB/little more/RBR/more motivation/NN/motivation on/IN/on this/NNP/this. suppose/NN/suppose we/PRP/we alternate/VBP/alternate the/DT/the lucky/JJ/lucky and/CC/and unlucky/JJ/unlucky cases/NNS/cases /,/, even/RB/even then/RB/then you/PRP/you can/MD/can prove/VB/prove a/DT/a log/NN/log n/NN/n depth/NNP/depth. so/RB/so what/WP/what was/VBD/was our/PRP$/our unlucky/JJ/unlucky case/NN/case ?/./? 1/CD/1 and/CC/and n-1/-NONE-/n-1 /,/, then/RB/then what/WP/what was/VBD/was the/DT/the lucky/JJ/lucky case/NN/case ?/./? n-1/-NONE-/n-1 divided/VBD/divided into/IN/into two/CD/two /,/, n-1/2/-NONE-/n-1/2 and/CC/and n-1/2/NNP/n-1/2. how/WRB/how many/JJ/many operations/NNS/operations did/VBD/did i/PRP/i take/VBP/take here/RB/here to/TO/to split/VB/split n/NN/n and/CC/and how/WRB/how many/JJ/many operations/NNS/operations did/VBD/did i/PRP/i take/VBP/take here/RB/here to/TO/to split/VB/split n-1/-NONE-/n-1 ?/./? so/RB/so in/IN/in total/JJ/total i/NN/i took/VBD/took 2n-1/CD/2n-1 operation/NN/operation here/RB/here and/CC/and after/IN/after 2n-1/CD/2n-1 operations/NNS/operations or/CC/or comparisons/NNS/comparisons i/PRP/i managed/VBD/managed to/TO/to split/VB/split it/PRP/it into/IN/into n-1/2/-NONE-/n-1/2 and/CC/and n-1/2/-NONE-/n-1/2 and/CC/and 1/CD/1 with/IN/with 2n-1/CD/2n-1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 51/CD/51 /CD/) so/RB/so now/RB/now i/PRP/i can/MD/can again/RB/again bring/VB/bring the/DT/the same/JJ/same tree/NNP/tree. i/PRP/i will/MD/will get/VB/get a/DT/a recurrence/NN/recurrence like/IN/like this/NNP/this. i/PRP/i can/MD/can think/VB/think of/IN/of it/PRP/it as/IN/as this/DT/this with/IN/with theta/NN/theta n/NN/n or/CC/or in/IN/in particular/JJ/particular 2n/CD/2n comparisons/NNS/comparisons i/PRP/i managed/VBD/managed to/TO/to split/VB/split it/PRP/it into/IN/into n-1/2/-NONE-/n-1/2 on/IN/on one/CD/one side/NN/side and/CC/and lets/NNS/lets say/VBP/say n-1/2/-NONE-/n-1/2 +/:/+ 1/CD/1 on/IN/on the/DT/the other/JJ/other side/NNP/side. actually/RB/actually i/PRP/i managed/VBD/managed a/DT/a three/CD/three way/NN/way split/NN/split because/IN/because the/DT/the 1/CD/1 is/VBZ/is coming/VBG/coming here/NNP/here. so/RB/so once/RB/once again/RB/again we/PRP/we will/MD/will have/VB/have a/DT/a depth/NN/depth of/IN/of only/RB/only log/JJ/log n/NN/n and/CC/and i/PRP/i took/VBD/took 2n/CD/2n in/IN/in each/DT/each step/NN/step /,/, so/RB/so its/PRP$/its 2n/JJ/2n times/NNS/times log/VBP/log n/NNP/n. we/PRP/we will/MD/will not/RB/not worry/VB/worry too/RB/too much/RB/much about/IN/about this/DT/this lets/NNS/lets try/VBP/try and/CC/and do/VB/do this/DT/this formally/NNP/formally. so/RB/so it/PRP/it seems/VBZ/seems that/IN/that for/IN/for many/JJ/many scenarios/NNS/scenarios we/PRP/we will/MD/will get/VB/get a/DT/a log/NN/log n/NNP/n. we/PRP/we want/VBP/want to/TO/to argue/VB/argue that/IN/that this/DT/this really/RB/really is/VBZ/is the/DT/the case/NN/case ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 14/CD/14 /CD/) so/RB/so what/WP/what is/VBZ/is the/DT/the best/JJS/best thing/NN/thing to/TO/to do/VB/do ?/./? we/PRP/we said/VBD/said we/PRP/we will/MD/will be/VB/be lucky/JJ/lucky when/WRB/when we/PRP/we always/RB/always partition/NN/partition half/NN/half and/CC/and half/NNP/half. the/DT/the best/JJS/best thing/NN/thing to/TO/to do/VB/do would/MD/would be/VB/be to/TO/to find/VB/find a/DT/a median/JJ/median element/NNP/element. pick/NN/pick the/DT/the median/JJ/median element/NN/element as/IN/as the/DT/the pivot/NN/pivot and/CC/and that/IN/that will/MD/will break/VB/break up/RP/up my/PRP$/my array/NN/array into/IN/into two/CD/two equal/JJ/equal parts/NNS/parts and/CC/and that/IN/that would/MD/would be/VB/be great/NNP/great. how/WRB/how do/VBP/do i/PRP/i find/VBP/find a/DT/a median/JJ/median element/NN/element ?/./? sort/NN/sort the/DT/the numbers/NNS/numbers and/CC/and then/RB/then find/VB/find the/DT/the median/JJ/median element/NNP/element. that/IN/that would/MD/would be/VB/be one/CD/one strategy/NN/strategy except/IN/except that/DT/that sorting/NN/sorting is/VBZ/is what/WP/what we/PRP/we are/VBP/are trying/VBG/trying to/TO/to do/VB/do in/IN/in that/DT/that first/JJ/first place/NNP/place. so/RB/so finding/VBG/finding median/JJ/median element/NN/element is/VBZ/is not/RB/not straight/RB/straight forward/RB/forward /,/, you/PRP/you will/MD/will see/VB/see a/DT/a procedure/NN/procedure for/IN/for doing/VBG/doing it/PRP/it in/IN/in your/PRP$/your next/JJ/next algorithms/NNS/algorithms course/NNP/course. /NNP/[ student/NN/student conversation/NN/conversation /:/: not/RB/not clear-some/JJ/clear-some what/WP/what close/JJ/close to/TO/to the/DT/the median/JJ/median by/IN/by dividing/NN/dividing the/DT/the array/NN/array into/IN/into some/DT/some odd/JJ/odd number/NN/number of/IN/of small/JJ/small array/NN/array then/RB/then sorting/VBG/sorting these/DT/these /,/, as/IN/as in/IN/in like/IN/like write/NN/write it/PRP/it into/IN/into small/JJ/small arrays/NNS/arrays of/IN/of size/NN/size five/CD/five and/CC/and sort/NN/sort them/PRP/them and/CC/and then/RB/then take/VB/take the/DT/the median/JJ/median of/IN/of these/NNP/these. now/RB/now i/PRP/i repeat/VBP/repeat this/DT/this till/NN/till i/PRP/i get/VBP/get one/CD/one number/NN/number /,/, that/IN/that it/PRP/it is/VBZ/is close/JJ/close to/TO/to the/DT/the median/JJ/median and/CC/and we/PRP/we will/MD/will take/VB/take log/NN/log n/NN/n steps/NNP/steps. /NNP/] you/PRP/you can/MD/can actually/RB/actually compute/VB/compute a/DT/a median/JJ/median element/NN/element in/IN/in linear/NN/linear time/NN/time but/CC/but it/PRP/it is/VBZ/is fairly/RB/fairly an/DT/an involved/VBN/involved procedure/NN/procedure which/WDT/which you/PRP/you will/MD/will learn/VB/learn later/NNP/later. for/IN/for now/RB/now what/WP/what you/PRP/you will/MD/will do/VB/do is/VBZ/is /,/, since/IN/since you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the median/JJ/median element/NN/element and/CC/and you/PRP/you can/MD/can not/RB/not find/VB/find the/DT/the median/JJ/median element/NNP/element. so/RB/so you/PRP/you will/MD/will just/RB/just pick/VB/pick a/DT/a random/NN/random element/NN/element and/CC/and declare/NN/declare that/NNP/that. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to pick/VB/pick a/DT/a random/NN/random element/NN/element as/IN/as our/PRP$/our pivot/NNP/pivot. we/PRP/we said/VBD/said we/PRP/we do/VBP/do not/RB/not want/VB/want to/TO/to pick/VB/pick a/DT/a specific/JJ/specific element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. why/WRB/why ?/./? because/IN/because if/IN/if i/PRP/i always/RB/always want/VBP/want to/TO/to pick/VB/pick the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NN/pivot then/RB/then if/IN/if my/PRP$/my sequence/NN/sequence is/VBZ/is in/IN/in decreasing/NN/decreasing order/NN/order or/CC/or increasing/VBG/increasing order/NN/order then/RB/then i/PRP/i will/MD/will struck/VB/struck with/IN/with an/DT/an n/NN/n square/NN/square running/VBG/running time/NNP/time. so/RB/so i/PRP/i will/MD/will just/RB/just pick/VB/pick a/DT/a random/NN/random element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. so/RB/so this/DT/this is/VBZ/is what/WP/what we/PRP/we call/VBP/call a/DT/a randomized/JJ/randomized algorithm/NNP/algorithm. what/WP/what is/VBZ/is a/DT/a randomized/VBN/randomized algorithm/NN/algorithm ?/./? an/DT/an algorithm/NN/algorithm which/WDT/which is/VBZ/is basically/RB/basically making/VBG/making some/DT/some kind/NN/kind of/IN/of random/NN/random choices/NNS/choices and/CC/and we/PRP/we will/MD/will analyze/VB/analyze what/WP/what this/DT/this algorithm/NN/algorithm does/NNP/does. we/PRP/we will/MD/will analyze/VB/analyze the/DT/the running/NN/running time/NN/time of/IN/of this/DT/this algorithm/NNP/algorithm. so/RB/so this/DT/this is/VBZ/is what/WP/what a/DT/a randomized/JJ/randomized quick/NN/quick sort/NN/sort is/NNP/is. we/PRP/we will/MD/will assume/VB/assume all/DT/all elements/NNS/elements are/VBP/are distinct/NNP/distinct. we/PRP/we partition/NN/partition around/IN/around a/DT/a random/NN/random element/NNP/element. a/DT/a pivot/NN/pivot is/VBZ/is a/DT/a random/NN/random element/NN/element and/CC/and we/PRP/we just/RB/just pick/VBP/pick any/DT/any element/NN/element at/IN/at random/NN/random with/IN/with the/DT/the same/JJ/same probability/NNP/probability. so/IN/so what/WP/what kind/NN/kind of/IN/of splits/NNS/splits we/PRP/we can/MD/can get/VB/get ?/./? we/PRP/we can/MD/can get/VB/get all/PDT/all kinds/NNS/kinds of/IN/of different/JJ/different splits/NNS/splits /,/, if/IN/if i/PRP/i have/VBP/have n/VBN/n elements/NNS/elements i/PRP/i can/MD/can get/VB/get a/DT/a split/NN/split of/IN/of 1n/CD/1n n-1/-NONE-/n-1 ;/:/; i/PRP/i can/MD/can get/VB/get a/DT/a split/NN/split of/IN/of 2n/CD/2n n-2/-NONE-/n-2 and/CC/and so/RB/so on/NNP/on. what/WP/what will/MD/will be/VB/be the/DT/the probability/NN/probability of/IN/of these/DT/these splits/NNS/splits ?/./? they/PRP/they all/DT/all will/MD/will be/VB/be equal/NNP/equal. they/PRP/they will/MD/will all/VB/all be/VB/be with/IN/with probability/NN/probability one/CD/one over/IN/over n/NNP/n. did/VBD/did you/PRP/you understand/VBP/understand why/WRB/why they/PRP/they would/MD/would all/VB/all be/VB/be equal/JJ/equal ?/./? because/IN/because it/PRP/it is/VBZ/is a/DT/a random/NN/random element/NN/element /,/, each/DT/each element/NN/element can/MD/can be/VB/be picked/VBN/picked with/IN/with equal/JJ/equal probability/NNP/probability. so/RB/so if/IN/if i/PRP/i pick/VBP/pick the/DT/the f/NN/f five/CD/five n/NN/n elements/NNS/elements and/CC/and i/PRP/i pick/VBP/pick the/DT/the tenth/NN/tenth smallest/JJS/smallest element/NN/element then/RB/then i/PRP/i will/MD/will get/VB/get a/DT/a 9/CD/9 versus/NN/versus n-10/-NONE-/n-10 split/NN/split or/CC/or a/DT/a 10/CD/10 versus/NN/versus n-10/-NONE-/n-10 split/NNP/split. but/CC/but what/WP/what is/VBZ/is the/DT/the probability/NN/probability of/IN/of picking/VBG/picking the/DT/the tenth/NN/tenth smallest/JJS/smallest element/NN/element ?/./? it/PRP/it is/VBZ/is 1/n/CD/1/n /,/, because/IN/because i/PRP/i could/MD/could have/VB/have picked/VBN/picked any/DT/any element/NNP/element. so/RB/so i/PRP/i do/VBP/do not/RB/not know/VB/know what/WP/what i/PRP/i am/VBP/am picking/NNP/picking. the/DT/the tenth/NN/tenth smallest/JJS/smallest element/NN/element is/VBZ/is as/IN/as likely/JJ/likely as/IN/as the/DT/the 11th/JJ/11th smallest/NN/smallest element/NN/element which/WDT/which is/VBZ/is as/RB/as likely/JJ/likely as/IN/as the/DT/the 12th/CD/12th smallest/JJS/smallest element/NNP/element. the/DT/the probability/NN/probability of/IN/of each/DT/each one/CD/one of/IN/of them/PRP/them is/VBZ/is the/DT/the same/NNP/same. we/PRP/we will/MD/will see/VB/see more/RBR/more examples/NNS/examples of/IN/of randomization/NN/randomization in/IN/in this/DT/this course/NN/course and/CC/and it/PRP/it is/VBZ/is a/DT/a useful/JJ/useful tool/NN/tool for/IN/for designing/NN/designing algorithms/NNP/algorithms. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 44/CD/44 /CD/) so/RB/so this/DT/this is/VBZ/is what/WP/what our/PRP$/our randomized/VBN/randomized quick/NN/quick sort/NN/sort is/VBZ/is going/VBG/going to/TO/to look/VB/look like/NNP/like. so/RB/so we/PRP/we are/VBP/are only/RB/only going/VBG/going to/TO/to modify/VB/modify the/DT/the partitioned/VBN/partitioned procedure/NN/procedure and/CC/and call/NN/call it/PRP/it randomized/VBD/randomized partition/NN/partition instead/NNP/instead. once/RB/once again/RB/again we/PRP/we are/VBP/are trying/VBG/trying to/TO/to partition/NN/partition the/DT/the array/NN/array a/DT/a between/IN/between p/NN/p and/CC/and r/NN/r /,/, the/DT/the sub/NN/sub array/NN/array between/IN/between locations/NNS/locations p/VBP/p and/CC/and r/NNP/r. what/WP/what is/VBZ/is random/VBP/random p/NN/p /,/, r/NN/r ?/./? random/NN/random p/NN/p /,/, r/NN/r generates/NNS/generates a/DT/a random/NN/random number/NN/number between/IN/between p/NN/p and/CC/and r/NNP/r. lets/NNS/lets say/VBP/say that/IN/that number/NN/number is/VBZ/is i/PRP/i /,/, between/IN/between p/NN/p and/CC/and r/NN/r means/VBZ/means including/VBG/including p/NN/p and/CC/and r/NNP/r. lets/NNS/lets say/VBP/say that/IN/that number/NN/number is/VBZ/is i/PRP/i and/CC/and we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to exchange/VB/exchange i/PRP/i and/CC/and the/DT/the last/JJ/last element/NNP/element. why/WRB/why am/NN/am i/PRP/i doing/VBG/doing this/DT/this ?/./? because/IN/because this/DT/this partition/NN/partition procedure/NN/procedure /,/, if/IN/if you/PRP/you recall/VBP/recall was/VBD/was taking/VBG/taking the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. now/RB/now i/PRP/i want/VBP/want to/TO/to put/VB/put my/PRP$/my pivot/NN/pivot at/IN/at the/DT/the last/JJ/last location/NN/location /,/, so/RB/so i/PRP/i just/RB/just exchange/VBP/exchange the/DT/the pivot/NN/pivot element/NN/element with/IN/with the/DT/the last/JJ/last location/NN/location and/CC/and then/RB/then i/PRP/i call/VBP/call my/PRP$/my partition/NN/partition procedure/NN/procedure /,/, the/DT/the same/JJ/same partition/NN/partition procedure/NN/procedure as/IN/as before/NNP/before. so/RB/so this/DT/this becomes/VBZ/becomes my/PRP$/my randomized/VBN/randomized partition/NN/partition procedure/NNP/procedure. and/CC/and what/WP/what does/VBZ/does randomized/VBN/randomized quick/NN/quick sort/NN/sort do/VBP/do now/RB/now ?/./? instead/RB/instead of/IN/of calling/VBG/calling partition/NN/partition it/PRP/it calls/VBZ/calls randomized/VBN/randomized partition/NN/partition /,/, the/DT/the rest/NN/rest is/VBZ/is the/DT/the same/NNP/same. did/VBD/did you/PRP/you understand/VBP/understand what/WP/what it/PRP/it is/VBZ/is ?/./? since/IN/since our/PRP$/our choice/NN/choice of/IN/of pivot/NN/pivot is/VBZ/is crucial/JJ/crucial and/CC/and we/PRP/we do/VBP/do not/RB/not know/VB/know really/RB/really how/WRB/how to/TO/to choose/VB/choose the/DT/the pivot/NNP/pivot. we/PRP/we just/RB/just pick/VBP/pick a/DT/a random/NN/random element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. no/DT/no /,/, it/PRP/it would/MD/would not/RB/not be/VB/be a/DT/a random/NN/random choice/NNP/choice. so/RB/so what/WP/what is/VBZ/is the/DT/the difference/NN/difference between/IN/between random/NN/random choices/NNS/choices here/RB/here ?/./? so/RB/so he/PRP/he has/VBZ/has a/DT/a very/RB/very good/JJ/good question/NN/question /,/, he/PRP/he says/VBZ/says if/IN/if i/PRP/i partition/VBP/partition it/PRP/it around/IN/around the/DT/the last/JJ/last element/NN/element /,/, why/WRB/why is/VBZ/is that/IN/that not/RB/not a/DT/a random/NN/random choice/NN/choice ?/./? that/IN/that is/VBZ/is not/RB/not a/DT/a random/NN/random choice/NN/choice because/IN/because if/IN/if i/PRP/i give/VBP/give you/PRP/you a/DT/a specific/JJ/specific input/NN/input which/WDT/which is/VBZ/is lets/NNS/lets say/VBP/say increasing/VBG/increasing order/NN/order then/RB/then on/IN/on that/DT/that input/NN/input you/PRP/you are/VBP/are going/VBG/going to/TO/to take/VB/take n/NN/n square/NN/square time/NNP/time. if/IN/if you/PRP/you partition/VBP/partition around/RP/around the/DT/the last/JJ/last element/NNP/element. now/RB/now in/IN/in randomized/JJ/randomized quick/NN/quick sort/NN/sort we/PRP/we are/VBP/are not/RB/not partitioning/VBG/partitioning around/IN/around the/DT/the last/JJ/last element/NNP/element. we/PRP/we are/VBP/are picking/VBG/picking a/DT/a random/NN/random element/NN/element to/TO/to partition/NNP/partition. when/WRB/when i/PRP/i pick/VBP/pick a/DT/a random/NN/random element/NN/element to/TO/to partition/NN/partition then/RB/then given/VBN/given the/DT/the same/JJ/same sorted/VBN/sorted sequence/NN/sequence as/IN/as input/NN/input /,/, you/PRP/you are/VBP/are not/RB/not going/VBG/going to/TO/to take/VB/take n/NN/n squared/VBN/squared time/NNP/time. in/IN/in fact/NN/fact how/WRB/how much/JJ/much time/NN/time are/VBP/are you/PRP/you going/VBG/going to/TO/to take/VB/take ?/./? we/PRP/we do/VBP/do not/RB/not know/VB/know how/WRB/how much/RB/much time/NN/time we/PRP/we are/VBP/are going/VBG/going to/TO/to take/NNP/take. that/IN/that is/VBZ/is the/DT/the interesting/JJ/interesting thing/NNP/thing. why/WRB/why we/PRP/we do/VBP/do not/RB/not know/VB/know how/WRB/how much/RB/much time/NN/time we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take ?/./? we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what the/DT/the pivots/NNS/pivots are/VBP/are going/VBG/going to/TO/to be/VB/be /,/, they/PRP/they are/VBP/are randomly/RB/randomly selected/NNP/selected. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 00/CD/00 /CD/) so/RB/so it/PRP/it might/MD/might happen/VB/happen that/IN/that today/NN/today you/PRP/you run/VBP/run the/DT/the algorithm/NN/algorithm and/CC/and it/PRP/it take/VB/take some/DT/some time/NN/time and/CC/and tomorrow/NN/tomorrow you/PRP/you run/VBP/run the/DT/the same/JJ/same algorithm/NN/algorithm and/CC/and it/PRP/it takes/VBZ/takes a/DT/a different/JJ/different time/NNP/time. because/IN/because it/PRP/it depends/VBZ/depends upon/IN/upon what/WP/what random/NN/random numbers/NNS/numbers are/VBP/are selected/VBN/selected and/CC/and those/DT/those random/NN/random numbers/NNS/numbers selected/VBN/selected decide/NN/decide the/DT/the pivot/NN/pivot and/CC/and the/DT/the pivot/NN/pivot as/IN/as you/PRP/you see/VBP/see is/VBZ/is crucial/JJ/crucial in/IN/in deciding/NN/deciding how/WRB/how much/JJ/much time/NN/time we/PRP/we are/VBP/are taking/NNP/taking. because/IN/because if/IN/if that/DT/that pivot/NN/pivot was/VBD/was a/DT/a nice/JJ/nice one/CD/one which/WDT/which was/VBD/was splitting/VBG/splitting the/DT/the things/NNS/things evenly/RB/evenly and/CC/and if/IN/if it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take less/JJR/less time/NN/time and/CC/and if/IN/if the/DT/the pivots/NNS/pivots were/VBD/were turning/VBG/turning out/RP/out to/TO/to be/VB/be bad/JJ/bad ones/NNS/ones fairly/RB/fairly skewed/VBD/skewed /,/, then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take more/JJR/more time/NNP/time. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see all/PDT/all of/IN/of that/NNP/that. so/RB/so now/RB/now if/IN/if you/PRP/you do/VBP/do not/RB/not know/VB/know how/WRB/how much/RB/much time/NN/time the/DT/the algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to take/VB/take and/CC/and it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take some/DT/some time/NN/time today/NN/today and/CC/and some/DT/some time/NN/time tomorrow/NN/tomorrow /,/, then/RB/then what/WP/what do/VBP/do we/PRP/we analyze/VB/analyze ?/./? what/WP/what is/VBZ/is that/IN/that we/PRP/we can/MD/can say/VB/say ?/./? the/DT/the average/JJ/average time/NN/time or/CC/or expected/VBN/expected /,/, which/WDT/which is/VBZ/is also/RB/also called/VBN/called the/DT/the expected/VBN/expected time/NNP/time. what/WP/what is/VBZ/is the/DT/the average/JJ/average we/PRP/we are/VBP/are doing/VBG/doing over/IN/over ?/./? so/RB/so are/VBP/are we/PRP/we averaging/VBG/averaging over/IN/over all/DT/all possible/JJ/possible inputs/NNS/inputs ?/./? sequence/NN/sequence of/IN/of random/NN/random numbers/NNS/numbers is/VBZ/is generated/VBN/generated in/IN/in some/DT/some sense/NNP/sense. so/RB/so the/DT/the way/NN/way to/TO/to think/VB/think of/IN/of it/PRP/it is/VBZ/is /,/, fix/NN/fix an/DT/an input/NNP/input. you/PRP/you are/VBP/are not/RB/not going/VBG/going to/TO/to change/VB/change the/DT/the input/NN/input ;/:/; we/PRP/we will/MD/will run/VB/run the/DT/the algorithm/NN/algorithm today/NN/today and/CC/and tomorrow/NN/tomorrow and/CC/and day/NN/day after/IN/after and/CC/and so/RB/so on/IN/on till/NN/till the/DT/the end/NN/end of/IN/of this/DT/this course/NNP/course. and/CC/and then/RB/then you/PRP/you are/VBP/are going/VBG/going to/TO/to compute/VB/compute the/DT/the time/NN/time and/CC/and take/VB/take the/DT/the average/JJ/average and/CC/and that/IN/that will/MD/will be/VB/be the/DT/the expected/VBN/expected time/NN/time for/IN/for sorting/NN/sorting that/WDT/that specific/JJ/specific input/NN/input sequence/NNP/sequence. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 35/CD/35 /CD/) let/NN/let t/NN/t /:/( n/NN/n /:/) denote/NN/denote the/DT/the expected/VBN/expected number/NN/number of/IN/of comparisons/NNS/comparisons required/VBN/required by/IN/by quick/JJ/quick sort/NNP/sort. t/NN/t /:/( n/NN/n /:/) is/VBZ/is a/DT/a function/NN/function of/IN/of n/NN/n /,/, the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons required/VBN/required to/TO/to sort/VB/sort n/NN/n numbers/NNS/numbers will/MD/will depend/VB/depend upon/IN/upon how/WRB/how many/JJ/many numbers/NNS/numbers you/PRP/you have/VBP/have depend/VBN/depend upon/IN/upon it/NNP/it. let/NN/let us/PRP/us recall/MD/recall what/WP/what quick/VB/quick sort/NN/sort does/NNP/does. quick/NN/quick sort/NN/sort first/RB/first partitions/NNS/partitions /,/, if/IN/if it/PRP/it has/VBZ/has to/TO/to partition/NN/partition n/NN/n numbers/NNS/numbers no/DT/no matter/NN/matter what/WP/what the/DT/the pivot/NN/pivot is/NNP/is. it/PRP/it is/VBZ/is always/RB/always going/VBG/going to/TO/to require/VB/require the/DT/the same/JJ/same number/NN/number of/IN/of comparisons/NNP/comparisons. it/PRP/it is/VBZ/is always/RB/always going/VBG/going to/TO/to require/VB/require no/DT/no more/RBR/more than/IN/than n-1/-NONE-/n-1 comparisons/NNP/comparisons. you/PRP/you can/MD/can think/VB/think of/IN/of the/DT/the partition/NN/partition process/NN/process as/IN/as every/DT/every number/NN/number is/VBZ/is compared/VBN/compared against/IN/against the/DT/the pivot/NN/pivot and/CC/and then/RB/then all/DT/all those/DT/those that/WDT/that are/VBP/are less/RBR/less than/IN/than the/DT/the pivot/NN/pivot are/VBP/are put/VBN/put on/IN/on one/CD/one side/NN/side and/CC/and all/DT/all those/DT/those that/WDT/that are/VBP/are more/RBR/more than/IN/than pivot/NN/pivot are/VBP/are put/VBN/put on/IN/on the/DT/the other/JJ/other side/NNP/side. so/IN/so we/PRP/we always/RB/always require/VBP/require n-1/-NONE-/n-1 comparisons/NNP/comparisons. every/DT/every number/NN/number has/VBZ/has to/TO/to be/VB/be compared/VBN/compared against/IN/against the/DT/the pivot/NN/pivot otherwise/NN/otherwise we/PRP/we will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to decide/VB/decide whether/IN/whether it/PRP/it goes/VBZ/goes on/IN/on the/DT/the left/NN/left side/NN/side or/CC/or on/IN/on the/DT/the right/NN/right side/NNP/side. so/RB/so this/DT/this is/VBZ/is the/DT/the part/NN/part of/IN/of the/DT/the partition/NNP/partition. depending/NN/depending upon/IN/upon what/WP/what the/DT/the pivot/NN/pivot was/VBD/was /,/, if/IN/if the/DT/the pivot/NN/pivot was/VBD/was the/DT/the ith/NN/ith smallest/JJS/smallest element/NN/element then/RB/then on/IN/on one/CD/one side/NN/side how/WRB/how many/JJ/many elements/NNS/elements am/VBP/am i/PRP/i going/VBG/going to/TO/to get/VB/get ?/./? let/VB/let ?/./? s/NNS/s say/VBP/say i-1/-NONE-/i-1 on/IN/on one/CD/one side/NN/side and/CC/and n-i/NNP/n-i on/IN/on the/DT/the other/JJ/other side/NN/side and/CC/and the/DT/the ith/NN/ith element/NN/element lets/NNS/lets say/VBP/say i/PRP/i leave/VBP/leave it/PRP/it at/IN/at the/DT/the right/NN/right place/NNP/place. i/PRP/i have/VBP/have to/TO/to quick/VB/quick sort/NN/sort those/DT/those i-1/-NONE-/i-1 elements/VBZ/elements /,/, i/PRP/i have/VBP/have to/TO/to quick/VB/quick sort/NN/sort those/DT/those n-i/NNP/n-i elements/NNP/elements. how/WRB/how much/JJ/much expected/VBN/expected time/NN/time am/NN/am i/PRP/i taking/VBG/taking to/TO/to quick/VB/quick sort/NN/sort those/DT/those i-1/-NONE-/i-1 elements/VBZ/elements ?/./? t/NN/t /:/( i-1/-NONE-/i-1 /:/) is/VBZ/is the/DT/the expected/VBN/expected time/NN/time i/PRP/i take/VBP/take to/TO/to quick/VB/quick sort/NN/sort these/DT/these and/CC/and this/DT/this is/VBZ/is the/DT/the expected/VBN/expected time/NN/time i/PRP/i take/VBP/take to/TO/to quick/VB/quick sort/NN/sort the/DT/the n-i/NNP/n-i elements/NNS/elements /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 53/CD/53 /CD/) so/RB/so i/PRP/i will/MD/will take/VB/take this/DT/this much/JJ/much amount/NN/amount of/IN/of time/NN/time in/IN/in all/NNP/all. but/CC/but what/WP/what is/VBZ/is i/PRP/i here/RB/here ?/./? the/DT/the i/PRP/i was/VBD/was the/DT/the fact/NN/fact that/IN/that the/DT/the pivot/NN/pivot was/VBD/was the/DT/the ith/NN/ith smallest/JJS/smallest element/NN/element that/WDT/that happens/VBZ/happens with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over n/NNP/n. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take this/DT/this much/JJ/much time/NN/time with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over n/NNP/n. i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take time/NN/time t/NN/t /:/( 7-1/CD/7-1 /CD/) +/CD/+ t/NN/t /:/( n-7/-NONE-/n-7 /:/) +/:/+ n-1/-NONE-/n-1 with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over n/NNP/n. i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take time/NN/time t/NN/t /:/( 13-1/CD/13-1 /CD/) +/CD/+ t/NN/t /:/( n-13/-NONE-/n-13 /:/) +/:/+ n-1/-NONE-/n-1 again/RB/again with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over n/NN/n and/CC/and so/RB/so on/NNP/on. so/IN/so the/DT/the expected/VBN/expected time/NN/time taken/VBN/taken is/VBZ/is basically/RB/basically this/DT/this sum/NN/sum /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 45/CD/45 /CD/) this/DT/this quantity/NN/quantity summed/VBD/summed over/IN/over all/DT/all choices/NNS/choices of/IN/of /,/, so/RB/so i/PRP/i have/VBP/have replaced/VBN/replaced i/PRP/i by/IN/by the/DT/the j/NN/j here/NNP/here. so/RB/so this/DT/this i/PRP/i is/VBZ/is the/DT/the same/JJ/same as/IN/as this/DT/this j/NN/j here/RB/here and/CC/and each/DT/each one/CD/one of/IN/of them/PRP/them is/VBZ/is being/VBG/being picked/VBN/picked with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over n/NNP/n. this/DT/this is/VBZ/is how/WRB/how you/PRP/you compute/VBP/compute expectation/NNP/expectation. expectations/NNS/expectations /,/, so/RB/so for/IN/for instance/NN/instance just/RB/just to/TO/to give/VB/give you/PRP/you an/DT/an examples/NNS/examples those/DT/those who/WP/who are/VBP/are forgetting/VBG/forgetting your/PRP$/your expectations/NNS/expectations /,/, i/PRP/i roll/VBP/roll a/DT/a dice/NNP/dice. what/WP/what is/VBZ/is the/DT/the expected/VBN/expected value/NN/value i/PRP/i see/VBP/see ?/./? how/WRB/how does/VBZ/does one/CD/one compute/NN/compute this/DT/this ?/./? each/DT/each of/IN/of the/DT/the outcomes/NNS/outcomes is/VBZ/is equally/RB/equally likely/JJ/likely /,/, each/DT/each occurs/NNS/occurs with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over six/NNP/six. i/PRP/i see/VBP/see one/CD/one over/IN/over one/CD/one with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over six/CD/six /,/, two/CD/two with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over six/CD/six /,/, three/CD/three with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over six/CD/six and/CC/and all/DT/all of/IN/of that/NNP/that. so/RB/so the/DT/the expectation/NN/expectation is/VBZ/is one/CD/one over/IN/over six/CD/six times/NNS/times one/CD/one plus/NN/plus one/CD/one over/IN/over six/CD/six times/NNS/times two/CD/two plus/NNS/plus one/CD/one over/IN/over six/CD/six times/NNS/times three/CD/three and/CC/and so/RB/so on/NNP/on. whatever/NN/whatever value/NN/value we/PRP/we get/VBP/get that/IN/that is/VBZ/is the/DT/the expected/VBN/expected value/NN/value you/PRP/you would/MD/would see/NNP/see. what/WP/what should/MD/should i/VB/i repeat/NN/repeat ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 12/CD/12 /CD/) throw/NN/throw a/DT/a dice/NN/dice so/IN/so what/WP/what are/VBP/are the/DT/the possible/JJ/possible values/NNS/values we/PRP/we get/VBP/get ?/./? it/PRP/it is/VBZ/is 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, and/CC/and 6/CD/6. it/PRP/it is/VBZ/is an/DT/an unloaded/JJ/unloaded dice/NN/dice /,/, so/RB/so each/DT/each appears/NNS/appears with/IN/with the/DT/the same/JJ/same probability/NNP/probability. what/WP/what is/VBZ/is the/DT/the expected/VBN/expected value/NN/value ?/./? what/WP/what is/VBZ/is the/DT/the random/NN/random variable/JJ/variable ?/./? random/NN/random variable/JJ/variable is/VBZ/is the/DT/the number/NN/number that/IN/that comes/VBZ/comes /,/, so/RB/so the/DT/the random/NN/random variable/JJ/variable is/VBZ/is the/DT/the number/NN/number on/IN/on the/DT/the dice/NNP/dice. this/DT/this random/NN/random variable/NN/variable lets/NNS/lets call/VBP/call it/PRP/it x/VBP/x /,/, this/DT/this random/NN/random variables/VBZ/variables takes/VBZ/takes six/CD/six different/JJ/different values/NNP/values. each/DT/each value/NN/value takes/VBZ/takes the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over six/NNP/six. probability/NN/probability x/NN/x =/:/= i/PRP/i =/VBP/= 1/6/CD/1/6 /,/, i/PRP/i between/IN/between 1/CD/1 and/CC/and 6/CD/6. what/WP/what is/VBZ/is the/DT/the expectation/NN/expectation ?/./? think/NN/think of/IN/of the/DT/the expectation/NN/expectation as/IN/as just/RB/just the/DT/the following/NNP/following. you/PRP/you keep/VB/keep throwing/VBG/throwing this/DT/this dice/NN/dice and/CC/and keep/VB/keep recording/VBG/recording the/DT/the outcome/NNP/outcome. keep/VB/keep doing/VBG/doing this/DT/this forever/NN/forever and/CC/and then/RB/then just/RB/just take/VB/take the/DT/the average/NNP/average. suppose/NN/suppose you/PRP/you threw/VBD/threw this/DT/this dice/NN/dice one/CD/one billion/CD/billion times/NNP/times. how/WRB/how many/JJ/many times/NNS/times are/VBP/are you/PRP/you going/VBG/going to/TO/to see/VB/see a/DT/a one/CD/one ?/./? one/CD/one billion/CD/billion by/IN/by six/CD/six times/NNP/times. this/DT/this is/VBZ/is what/WP/what the/DT/the probability/NN/probability means/VBZ/means /,/, the/DT/the probability/NN/probability that/IN/that it/PRP/it is/VBZ/is 1/6/CD/1/6. if/IN/if you/PRP/you do/VBP/do the/DT/the experiment/NN/experiment sufficiently/RB/sufficiently many/JJ/many times/NNS/times then/RB/then this/DT/this fraction/NN/fraction of/IN/of the/DT/the times/NNS/times you/PRP/you are/VBP/are going/VBG/going to/TO/to see/VB/see this/DT/this particular/JJ/particular outcome/NNP/outcome. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] times/NNS/times your/PRP$/your outcome/NN/outcome was/VBD/was one/NNP/one. if/IN/if i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the sum/NN/sum of/IN/of the/DT/the outcomes/NNS/outcomes this/DT/this will/MD/will be/VB/be one/CD/one sum/NNP/sum. how/WRB/how many/JJ/many times/NNS/times do/VBP/do you/PRP/you see/VB/see a/DT/a two/CD/two ?/./? how/WRB/how many/JJ/many times/NNS/times do/VBP/do you/PRP/you see/VB/see a/DT/a three/CD/three and/CC/and so/RB/so on/IN/on ?/./? so/RB/so let/VB/let me/PRP/me just/RB/just complete/JJ/complete this/DT/this which/WDT/which is/VBZ/is exactly/RB/exactly the/DT/the same/JJ/same as/IN/as saying/VBG/saying one/CD/one by/IN/by six/CD/six into/IN/into one/CD/one /,/, this/DT/this quantity/NN/quantity here/NNP/here. what/WP/what is/VBZ/is this/DT/this quantity/NN/quantity ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 32/CD/32 /CD/) this/DT/this is/VBZ/is just/RB/just the/DT/the probability/NN/probability of/IN/of the/DT/the event/NN/event that/IN/that x/NN/x i/PRP/i equals/VBZ/equals one/NNP/one. so/RB/so this/DT/this is/VBZ/is 1/6/CD/1/6 or/CC/or i/PRP/i could/MD/could even/RB/even have/VB/have written/VBN/written it/PRP/it as/IN/as probability/NN/probability /,/, the/DT/the random/NN/random variable/JJ/variable takes/NNS/takes the/DT/the value/NN/value one/CD/one times/NNS/times this/DT/this one/NN/one which/WDT/which is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the random/NN/random variable/JJ/variable plus/NN/plus the/DT/the probability/NN/probability 10/CD/10 power/NN/power 9/6/CD/9/6 is/VBZ/is the/DT/the probability/NN/probability that/IN/that it/PRP/it takes/VBZ/takes the/DT/the random/NN/random variable/NNP/variable. the/DT/the 10/CD/10 power/NN/power 9/6/CD/9/6 by/IN/by 10/CD/10 power/NN/power 9/CD/9 is/VBZ/is just/RB/just the/DT/the probability/NN/probability that/IN/that it/PRP/it takes/VBZ/takes the/DT/the value/NN/value two/NNP/two. so/RB/so probability/NN/probability x/NN/x =/:/= 2/CD/2 into/IN/into 2/CD/2 and/CC/and so/RB/so on/NNP/on. and/CC/and probability/NN/probability x/NN/x =/:/= 6/CD/6 into/IN/into 6/CD/6. so/RB/so that/IN/that is/VBZ/is what/WP/what expectation/NN/expectation is/NNP/is. one/CD/one way/NN/way of/IN/of thinking/VBG/thinking of/IN/of expectation/NN/expectation is/VBZ/is /,/, if/IN/if a/DT/a certain/JJ/certain random/NN/random variable/JJ/variable is/VBZ/is taking/VBG/taking a/DT/a set/NN/set of/IN/of discrete/JJ/discrete values/NNS/values then/RB/then you/PRP/you just/RB/just compute/VBP/compute the/DT/the value/NN/value of/IN/of the/DT/the probability/NN/probability with/IN/with which/WDT/which it/PRP/it takes/VBZ/takes the/DT/the value/NN/value /,/, times/NNS/times the/DT/the value/NN/value summed/VBD/summed over/IN/over all/DT/all the/DT/the possible/JJ/possible choices/NNS/choices is/VBZ/is the/DT/the expectation/NN/expectation of/IN/of the/DT/the random/NN/random variable/NNP/variable. so/RB/so let/VB/let ?/./? s/NNS/s revert/VBP/revert to/TO/to our/PRP$/our slides/NNP/slides. this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be taking/VBG/taking this/DT/this value/NN/value with/IN/with the/DT/the probability/NN/probability of/IN/of one/CD/one over/IN/over n/NNP/n. and/CC/and so/RB/so we/PRP/we have/VBP/have done/VBN/done just/RB/just the/DT/the probability/NN/probability times/VBZ/times the/DT/the value/NN/value summed/VBD/summed over/IN/over all/DT/all the/DT/the possible/JJ/possible choices/NNS/choices which/WDT/which is/VBZ/is j/NN/j varying/VBG/varying from/IN/from one/CD/one through/IN/through n/NNP/n. and/CC/and again/RB/again as/IN/as j/NN/j varies/NNS/varies from/IN/from one/CD/one through/IN/through n/NN/n /,/, this/DT/this quantity/NN/quantity varies/VBZ/varies from/IN/from t/NN/t /:/( 0/-NONE-/0 /:/) to/TO/to t/VB/t /:/( n-1/-NONE-/n-1 /:/) and/CC/and this/DT/this quantity/NN/quantity also/RB/also varies/VBZ/varies from/IN/from t/NN/t /:/( n-1/-NONE-/n-1 /:/) to/TO/to t/VB/t /:/( 0/-NONE-/0 /:/) which/WDT/which means/VBZ/means every/DT/every term/NN/term t/NN/t /:/( 0/-NONE-/0 /:/) through/IN/through t/NN/t /:/( n-1/-NONE-/n-1 /:/) appears/NNS/appears twice/NNP/twice. so/RB/so i/PRP/i can/MD/can write/VB/write this/DT/this part/NN/part of/IN/of the/DT/the sum/NN/sum as/IN/as this/DT/this and/CC/and this/DT/this n-1/NN/n-1 /,/, we/PRP/we are/VBP/are summing/VBG/summing it/PRP/it n/RB/n times/VBZ/times and/CC/and then/RB/then dividing/VBG/dividing it/PRP/it by/IN/by n/NN/n and/CC/and so/RB/so it/PRP/it ?/./? s/NNS/s just/RB/just plus/RB/plus n-1/-NONE-/n-1 separately/NNP/separately. and/CC/and this/DT/this is/VBZ/is a/DT/a recurrence/NN/recurrence which/WDT/which we/PRP/we saw/VBD/saw in/IN/in the/DT/the last/JJ/last class/NNP/class. it/PRP/it was/VBD/was the/DT/the recurrence/NN/recurrence for/IN/for the/DT/the expected/VBN/expected number/NN/number of/IN/of comparisons/NNS/comparisons required/VBN/required to/TO/to insert/VB/insert a/DT/a randomly/RB/randomly chosen/VBN/chosen permutation/NN/permutation of/IN/of n/NN/n elements/NNS/elements in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 45/CD/45 /CD/) and/CC/and what/WP/what did/VBD/did we/PRP/we prove/VBP/prove in/IN/in the/DT/the last/JJ/last class/NN/class /,/, we/PRP/we solved/VBD/solved this/DT/this recurrence/NN/recurrence and/CC/and we/PRP/we showed/VBD/showed the/DT/the solution/NN/solution is/VBZ/is n/VBN/n log/NN/log n/NNP/n. hence/NN/hence the/DT/the expected/VBN/expected number/NN/number of/IN/of comparisons/NNS/comparisons required/VBN/required by/IN/by randomized/VBN/randomized quick/JJ/quick sort/NN/sort is/VBZ/is n/VBN/n log/NN/log n/NN/n /,/, the/DT/the same/JJ/same recurrence/NNP/recurrence. we/PRP/we solved/VBD/solved it/PRP/it before/IN/before and/CC/and we/PRP/we are/VBP/are just/RB/just using/VBG/using that/IN/that fact/NNP/fact. this/DT/this is/VBZ/is the/DT/the analysis/NN/analysis which/WDT/which we/PRP/we did/VBD/did and/CC/and this/DT/this is/VBZ/is the/DT/the expected/VBN/expected number/NN/number of/IN/of comparisons/NNS/comparisons required/VBN/required by/IN/by quick/JJ/quick sort/NNP/sort. so/RB/so let/VB/let ?/./? s/NNS/s quickly/RB/quickly summarize/VBP/summarize the/DT/the time/NN/time taken/VBN/taken by/IN/by quick/JJ/quick sort/NNP/sort. worst/NN/worst case/NN/case time/NN/time we/PRP/we said/VBD/said was/VBD/was n/VBN/n squared/VBN/squared /,/, the/DT/the best/JJS/best case/NN/case time/NN/time was/VBD/was n/VBN/n log/NN/log n/NNP/n. we/PRP/we did/VBD/did not/RB/not prove/VB/prove it/PRP/it formally/RB/formally ?/./? why/WRB/why it/PRP/it should/MD/should be/VB/be n/VBN/n log/NN/log n/NN/n and/CC/and why/WRB/why it/PRP/it can/MD/can not/RB/not be/VB/be less/JJR/less /,/, but/CC/but intuitively/RB/intuitively you/PRP/you can/MD/can understand/VB/understand that/IN/that the/DT/the best/JJS/best thing/NN/thing happens/NNS/happens when/WRB/when the/DT/the two/CD/two are/VBP/are roughly/RB/roughly equal/JJ/equal and/CC/and then/RB/then we/PRP/we argued/VBD/argued that/IN/that it/PRP/it will/MD/will take/VB/take n/NN/n log/NN/log n/NNP/n. and/CC/and the/DT/the expected/VBN/expected is/VBZ/is once/RB/once again/RB/again n/JJ/n log/NN/log n/NN/n and/CC/and this/DT/this behavior/NN/behavior is/VBZ/is similar/JJ/similar to/TO/to what/WP/what we/PRP/we also/RB/also in/IN/in the/DT/the last/JJ/last class/NNP/class. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 41/CD/41 /CD/) when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert n/NN/n elements/NNS/elements into/IN/into a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /,/, what/WP/what is/VBZ/is the/DT/the worst/JJS/worst case/NN/case time/NN/time ?/./? it/PRP/it is/VBZ/is n/VBN/n squared/VBN/squared /,/, it/PRP/it happens/VBZ/happens when/WRB/when my/PRP$/my sequence/NN/sequence is/VBZ/is sorted/NNP/sorted. what/WP/what is/VBZ/is the/DT/the best/JJS/best case/NN/case time/NN/time ?/./? it/PRP/it is/VBZ/is n/VBN/n log/NN/log n/NN/n again/RB/again and/CC/and if/IN/if the/DT/the first/JJ/first element/NN/element i/PRP/i was/VBD/was inserting/VBG/inserting was/VBD/was roughly/RB/roughly the/DT/the median/JJ/median and/CC/and the/DT/the second/JJ/second element/NN/element i/PRP/i was/VBD/was inserting/VBG/inserting was/VBD/was n/4/-NONE-/n/4 and/CC/and so/RB/so on/NNP/on. and/CC/and the/DT/the expected/VBN/expected time/NN/time was/VBD/was n/VBN/n log/NN/log n/NNP/n. the/DT/the crucial/JJ/crucial difference/NN/difference between/IN/between what/WP/what we/PRP/we are/VBP/are doing/VBG/doing today/NN/today and/CC/and what/WP/what we/PRP/we did/VBD/did in/IN/in the/DT/the last/JJ/last class/NNP/class. this/DT/this is/VBZ/is something/NN/something that/IN/that i/PRP/i have/VBP/have already/RB/already said/VBN/said but/CC/but let/VB/let ?/./? s/NNS/s just/RB/just recap/NNP/recap. what/WP/what we/PRP/we have/VBP/have done/VBN/done today/NN/today is/VBZ/is that/IN/that the/DT/the running/VBG/running time/NN/time of/IN/of quick/JJ/quick sort/NN/sort depends/NNS/depends upon/IN/upon the/DT/the numbers/NNS/numbers that/WDT/that are/VBP/are getting/VBG/getting generated/NNP/generated. if/IN/if the/DT/the same/JJ/same random/NN/random numbers/NNS/numbers were/VBD/were generated/VBN/generated then/RB/then the/DT/the running/NN/running time/NN/time would/MD/would be/VB/be the/DT/the same/JJ/same for/IN/for a/DT/a given/VBN/given input/NNP/input. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 19/CD/19 /CD/) so/RB/so the/DT/the same/JJ/same thing/NN/thing i/PRP/i said/VBD/said /,/, i/PRP/i fix/VBP/fix an/DT/an input/NN/input the/DT/the running/NN/running time/NN/time could/MD/could be/VB/be some/DT/some value/NN/value today/NN/today /,/, it/PRP/it could/MD/could be/VB/be some/DT/some value/NN/value tomorrow/NN/tomorrow because/IN/because the/DT/the random/NN/random numbers/NNS/numbers generated/VBD/generated could/MD/could be/VB/be different/NNP/different. what/WP/what we/PRP/we have/VBP/have done/VBN/done is/VBZ/is we/PRP/we have/VBP/have taken/VBN/taken expectations/NNS/expectations over/IN/over these/DT/these different/JJ/different random/NN/random numbers/NNS/numbers that/WDT/that have/VBP/have been/VBN/been generated/VBN/generated /,/, by/IN/by saying/VBG/saying that/IN/that today/NN/today we/PRP/we will/MD/will compute/VB/compute what/WP/what the/DT/the value/NN/value is/VBZ/is /,/, tomorrow/NN/tomorrow we/PRP/we will/MD/will compute/VB/compute what/WP/what the/DT/the value/NN/value is/VBZ/is so/RB/so on/IN/on and/CC/and take/VB/take the/DT/the average/NNP/average. we/PRP/we are/VBP/are doing/VBG/doing this/DT/this for/IN/for one/CD/one fixed/VBN/fixed input/NN/input and/CC/and we/PRP/we said/VBD/said if/IN/if i/PRP/i fix/VBP/fix an/DT/an input/NN/input and/CC/and i/PRP/i compute/VBP/compute this/DT/this value/NN/value it/PRP/it turns/VBZ/turns out/RP/out to/TO/to be/VB/be n/VBN/n log/NN/log n/NNP/n. that/IN/that is/VBZ/is what/WP/what we/PRP/we did/NNP/did. and/CC/and no/DT/no way/NN/way we/PRP/we used/VBD/used the/DT/the fact/NN/fact that/IN/that /,/, what/WP/what the/DT/the input/NN/input was/VBD/was really/NNP/really. come/NN/come to/TO/to think/VB/think of/IN/of it/PRP/it /,/, no/DT/no matter/NN/matter what/WP/what the/DT/the input/NN/input is/VBZ/is /,/, your/PRP$/your expected/VBN/expected time/NN/time is/VBZ/is turning/VBG/turning out/RP/out to/TO/to be/VB/be n/VBN/n log/NN/log n/NNP/n. so/RB/so some/DT/some how/WRB/how this/DT/this is/VBZ/is actually/RB/actually what/WP/what some/DT/some of/IN/of the/DT/the slides/NNS/slides were/VBD/were also/RB/also saying/VBG/saying before/NNP/before. when/WRB/when we/PRP/we said/VBD/said we/PRP/we would/MD/would take/VB/take a/DT/a specific/JJ/specific element/NN/element as/IN/as the/DT/the pivot/NN/pivot lets/NNS/lets say/VBP/say the/DT/the last/JJ/last element/NN/element as/IN/as the/DT/the pivot/NNP/pivot. we/PRP/we saw/VBD/saw that/IN/that the/DT/the running/VBG/running time/NN/time would/MD/would depend/VB/depend upon/IN/upon what/WP/what input/NN/input was/VBD/was given/VBN/given to/TO/to us/NNP/us. if/IN/if the/DT/the input/NN/input was/VBD/was sorted/VBN/sorted we/PRP/we would/MD/would take/VB/take n/NN/n squared/VBN/squared time/NN/time /,/, but/CC/but if/IN/if the/DT/the input/NN/input was/VBD/was such/JJ/such that/IN/that the/DT/the last/JJ/last element/NN/element was/VBD/was the/DT/the median/JJ/median element/NN/element then/RB/then once/RB/once again/RB/again we/PRP/we would/MD/would get/VB/get this/DT/this half/NN/half and/CC/and half/DT/half split/NN/split and/CC/and so/RB/so on/NNP/on. so/IN/so if/IN/if i/PRP/i had/VBD/had taken/VBN/taken a/DT/a specific/JJ/specific element/NN/element as/IN/as the/DT/the pivot/NN/pivot always/RB/always then/RB/then my/PRP$/my running/NN/running time/NN/time would/MD/would depend/VB/depend upon/IN/upon what/WP/what the/DT/the input/NN/input sequence/NN/sequence was/VBD/was or/CC/or what/WP/what the/DT/the input/NN/input order/NN/order was/NNP/was. but/CC/but i/PRP/i got/VBD/got around/IN/around that/DT/that somehow/NNP/somehow. i/PRP/i said/VBD/said let/VB/let me/PRP/me randomly/RB/randomly pick/VB/pick my/PRP$/my pivot/NN/pivot element/NN/element and/CC/and now/RB/now what/WP/what has/VBZ/has happened/VBN/happened ?/./? the/DT/the running/NN/running time/NN/time does/VBZ/does not/RB/not really/RB/really depend/VB/depend upon/IN/upon my/PRP$/my input/NN/input is/VBZ/is /,/, it/PRP/it depends/VBZ/depends upon/IN/upon what/WP/what the/DT/the random/NN/random number/NN/number choice/NN/choice is/VBZ/is /,/, which/WDT/which in/IN/in expectation/NN/expectation will/MD/will give/VB/give me/PRP/me a/DT/a running/VBG/running time/NN/time of/IN/of only/RB/only n/JJ/n log/NN/log n/NNP/n. /NNP/[ student/NN/student conversation/NN/conversation /:/: so/RB/so how/WRB/how does/VBZ/does that/IN/that make/VB/make things/NNS/things if/IN/if better/JJR/better we/PRP/we do/VBP/do not/RB/not make/VB/make any/DT/any fix/NN/fix element/NNP/element. ?/./? ?/./? ?/./? ?/./? /:/] the/DT/the algorithm/NN/algorithm time/NN/time is/VBZ/is independent/JJ/independent upon/IN/upon the/DT/the input/NNP/input. how/WRB/how does/VBZ/does /,/, no/NNP/no. so/RB/so what/WP/what we/PRP/we are/VBP/are trying/VBG/trying to/TO/to say/VB/say here/RB/here is/VBZ/is that/IN/that when/WRB/when we/PRP/we say/VBP/say it/PRP/it is/VBZ/is independent/JJ/independent upon/IN/upon the/DT/the input/NN/input /,/, we/PRP/we are/VBP/are saying/VBG/saying that/IN/that no/DT/no matter/NN/matter what/WP/what input/NN/input the/DT/the adversary/JJ/adversary gives/NNS/gives us/NNP/us. you/PRP/you are/VBP/are trying/VBG/trying to/TO/to may/MD/may be/VB/be beat/VBN/beat my/PRP$/my algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 27/CD/27 /CD/) you/PRP/you want/VBP/want my/PRP$/my algorithm/NN/algorithm to/TO/to take/VB/take as/IN/as much/JJ/much time/NN/time as/IN/as possible/NNP/possible. so/RB/so the/DT/the point/NN/point here/RB/here is/VBZ/is that/IN/that you/PRP/you can/MD/can not/RB/not come/VB/come up/RP/up with/IN/with any/DT/any such/JJ/such sequence/NNP/sequence. no/DT/no matter/NN/matter what/WP/what sequence/NN/sequence you/PRP/you come/VBP/come up/RP/up /,/, what/WP/what sequence/NN/sequence of/IN/of numbers/NNS/numbers you/PRP/you come/VBP/come up/RP/up /,/, my/PRP$/my algorithm/NN/algorithm will/MD/will take/VB/take a/DT/a time/NN/time which/WDT/which in/IN/in expectation/NN/expectation is/VBZ/is n/VBN/n log/NN/log n/NN/n /,/, which/WDT/which quit/NN/quit often/RB/often will/MD/will turn/VB/turn out/RP/out to/TO/to be/VB/be n/VBN/n log/NN/log n/NNP/n. /NNP/[ student/NN/student conversation/NN/conversation /:/: i/PRP/i want/VBP/want to/TO/to work/VB/work somewhere/NNP/somewhere. so/RB/so there/RB/there nobody/NN/nobody is/VBZ/is going/VBG/going to/TO/to ?/./? we/PRP/we have/VBP/have to/TO/to make/VB/make an/DT/an algorithm/NN/algorithm particular/JJ/particular kind/NN/kind of/IN/of input/NN/input may/MD/may be/VB/be if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this quantity/NN/quantity that/IN/that you/PRP/you want/VBP/want to/TO/to make/VB/make it/PRP/it independent/JJ/independent of/IN/of the/DT/the input/NN/input /,/, then/RB/then this/DT/this kind/NN/kind we/PRP/we are/VBP/are making/VBG/making a/DT/a random/NN/random for/IN/for that/DT/that kind/NN/kind of/IN/of input/NN/input /:/] if/IN/if we/PRP/we knew/VBP/knew what/WP/what kinds/NNS/kinds of/IN/of inputs/NNS/inputs we/PRP/we were/VBD/were getting/VBG/getting then/RB/then perhaps/RB/perhaps it/PRP/it makes/VBZ/makes sense/NN/sense to/TO/to design/NN/design the/DT/the algorithm/NN/algorithm for/IN/for those/DT/those kinds/NNS/kinds of/IN/of inputs/NNP/inputs. but/CC/but this/DT/this is/VBZ/is not/RB/not what/WP/what we/PRP/we are/VBP/are doing/VBG/doing here/RB/here because/IN/because we/PRP/we are/VBP/are not/RB/not designing/VBG/designing the/DT/the algorithm/NN/algorithm for/IN/for a/DT/a specific/JJ/specific input/NN/input sequence/NN/sequence or/CC/or specific/JJ/specific kinds/NNS/kinds of/IN/of inputs/NNP/inputs. we/PRP/we are/VBP/are saying/VBG/saying we/PRP/we want/VBP/want to/TO/to be/VB/be able/JJ/able to/TO/to consider/VB/consider all/DT/all possible/JJ/possible inputs/NNS/inputs and/CC/and in/IN/in doing/NN/doing that/IN/that we/PRP/we want/VBP/want an/DT/an algorithm/NN/algorithm which/WDT/which really/RB/really does/VBZ/does not/RB/not depend/VB/depend upon/IN/upon what/WP/what the/DT/the input/NN/input is/VBZ/is /,/, its/PRP$/its behavior/NN/behavior is/VBZ/is independent/JJ/independent of/IN/of that/NNP/that. what/WP/what did/VBD/did we/PRP/we do/VBP/do in/IN/in the/DT/the last/JJ/last class/NN/class for/IN/for binary/JJ/binary search/NN/search tree/NN/tree ?/./? and/CC/and i/PRP/i want/VBP/want to/TO/to make/VB/make this/DT/this difference/NN/difference very/RB/very clear/NNP/clear. for/IN/for the/DT/the binary/JJ/binary search/NN/search tree/NN/tree we/PRP/we were/VBD/were doing/VBG/doing an/DT/an average/JJ/average over/IN/over what/WP/what ?/./? we/PRP/we said/VBD/said take/VBP/take a/DT/a particular/JJ/particular input/NN/input sequence/NN/sequence and/CC/and it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take a/DT/a specific/JJ/specific amount/NN/amount of/IN/of time/NN/time /,/, whether/IN/whether you/PRP/you run/VBP/run it/PRP/it today/NN/today or/CC/or you/PRP/you run/VBP/run it/PRP/it tomorrow/NN/tomorrow its/PRP$/its going/NN/going to/TO/to take/VB/take the/DT/the same/JJ/same amount/NN/amount of/IN/of time/NNP/time. that/IN/that was/VBD/was not/RB/not a/DT/a randomized/JJ/randomized algorithm/NN/algorithm it/PRP/it was/VBD/was a/DT/a very/RB/very specific/JJ/specific algorithm/NN/algorithm were/VBD/were no/DT/no random/NN/random choices/NNS/choices being/VBG/being made/NNP/made. if/IN/if you/PRP/you take/VBP/take the/DT/the same/JJ/same amount/NN/amount of/IN/of time/NN/time no/DT/no matter/NN/matter when/WRB/when you/PRP/you run/VBP/run it/PRP/it /,/, but/CC/but if/IN/if i/PRP/i take/VBP/take a/DT/a different/JJ/different input/NN/input sequence/NN/sequence it/PRP/it would/MD/would take/VB/take a/DT/a different/JJ/different amount/NN/amount of/IN/of time/NN/time and/CC/and if/IN/if i/PRP/i take/VBP/take a/DT/a third/JJ/third input/NN/input sequence/NN/sequence it/PRP/it would/MD/would take/VB/take a/DT/a third/JJ/third different/JJ/different amount/NN/amount of/IN/of time/NN/time and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 57/CD/57 /:/: 08/CD/08 /CD/) and/CC/and there/EX/there what/WP/what we/PRP/we were/VBD/were doing/VBG/doing was/VBD/was /,/, lets/NNS/lets take/VBP/take the/DT/the average/JJ/average over/IN/over all/DT/all input/NN/input sequences/NNS/sequences that/WDT/that is/VBZ/is over/IN/over all/DT/all possible/JJ/possible n/NN/n factorial/JJ/factorial different/JJ/different permutations/NNP/permutations. we/PRP/we took/VBD/took the/DT/the average/JJ/average over/IN/over all/DT/all of/IN/of them/PRP/them and/CC/and then/RB/then we/PRP/we got/VBD/got n/NN/n log/NN/log n/NNP/n. did/VBD/did you/PRP/you understand/VBP/understand the/DT/the difference/NN/difference ?/./? the/DT/the recurrence/NN/recurrence is/VBZ/is the/DT/the same/JJ/same but/CC/but there/EX/there is/VBZ/is a/DT/a vast/JJ/vast difference/NN/difference between/IN/between these/DT/these two/CD/two things/NNS/things that/WDT/that we/PRP/we have/VBP/have done/NNP/done. one/CD/one was/VBD/was what/WP/what you/PRP/you call/VBP/call an/DT/an average/JJ/average case/NN/case analysis/NN/analysis ;/:/; we/PRP/we looked/VBD/looked at/IN/at all/DT/all possible/JJ/possible inputs/NNS/inputs that/WDT/that can/MD/can be/VB/be there/RB/there of/IN/of numbers/NNS/numbers one/CD/one through/IN/through n/NN/n /,/, there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial different/JJ/different permutations/NNP/permutations. so/RB/so there/RB/there are/VBP/are n/VBN/n factorial/JJ/factorial different/JJ/different inputs/NNS/inputs possible/JJ/possible /,/, we/PRP/we looked/VBD/looked at/IN/at all/DT/all of/IN/of them/PRP/them ;/:/; we/PRP/we computed/VBD/computed the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm for/IN/for each/DT/each one/CD/one of/IN/of those/DT/those inputs/NNS/inputs and/CC/and took/VBD/took the/DT/the average/NNP/average. today/NN/today on/IN/on the/DT/the other/JJ/other hand/NN/hand ours/NNS/ours was/VBD/was a/DT/a randomized/VBN/randomized algorithm/NN/algorithm /,/, our/PRP$/our algorithm/NN/algorithm was/VBD/was taking/VBG/taking different/JJ/different times/NNS/times depending/VBG/depending upon/IN/upon what/WP/what the/DT/the random/NN/random numbers/NNS/numbers were/NNP/were. and/CC/and today/NN/today we/PRP/we were/VBD/were taking/VBG/taking the/DT/the average/JJ/average over/IN/over the/DT/the random/NN/random numbers/NNS/numbers that/WDT/that were/VBD/were getting/VBG/getting generated/VBN/generated and/CC/and not/RB/not over/IN/over the/DT/the inputs/NNS/inputs /,/, the/DT/the input/NN/input was/VBD/was fixed/NNP/fixed. with/IN/with that/DT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to end/VB/end today/NN/today ?/./? s/NNS/s lecture/NNP/lecture. we/PRP/we saw/VBD/saw quick/JJ/quick sort/NN/sort and/CC/and we/PRP/we did/VBD/did the/DT/the expected/VBN/expected time/NN/time analysis/NN/analysis for/IN/for randomized/JJ/randomized quick/NN/quick sort/NNP/sort. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 11/CD/11 avl/NN/avl trees/NNS/trees in/IN/in this/DT/this class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to talk/VB/talk about/IN/about avl/NN/avl trees/NNP/trees. in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we have/VBP/have seen/VBN/seen binary/JJ/binary search/NN/search tree/NN/tree data/NNS/data structure/NNP/structure. one/CD/one problem/NN/problem with/IN/with the/DT/the binary/JJ/binary search/NN/search tree/NN/tree if/IN/if you/PRP/you recall/VBP/recall is/VBZ/is that/IN/that the/DT/the operations/NNS/operations of/IN/of insertion/NN/insertion /,/, deletion/NN/deletion and/CC/and search/NN/search take/VB/take time/NN/time proportional/JJ/proportional to/TO/to the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. height/NN/height of/IN/of the/DT/the tree/NN/tree can/MD/can be/VB/be very/RB/very bad/NNP/bad. we/PRP/we saw/VBD/saw an/DT/an example/NN/example were/VBD/were the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree could/MD/could be/VB/be as/RB/as bad/JJ/bad as/IN/as order/NN/order n/NN/n or/CC/or n-1/NNP/n-1. we/PRP/we want/VBP/want to/TO/to some/DT/some how/WRB/how create/JJ/create a/DT/a tree/NN/tree which/WDT/which does/VBZ/does not/RB/not have/VB/have too/RB/too bad/JJ/bad a/DT/a height/NNP/height. that/WDT/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do today/NNP/today. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at this/DT/this data/NNS/data structure/VBP/structure called/VBN/called avl/NN/avl trees/NNP/trees. what/WP/what is/VBZ/is an/DT/an avl/NN/avl tree/NN/tree ?/./? avl/NN/avl trees/NNS/trees are/VBP/are also/RB/also called/VBN/called height/NN/height balanced/VBN/balanced trees/NNP/trees. ignore/IN/ignore the/DT/the white/JJ/white spots/NNS/spots that/WDT/that are/VBP/are showed/VBN/showed on/IN/on the/DT/the slide/NN/slide below/IN/below and/CC/and they/PRP/they should/MD/should not/RB/not have/VB/have shown/VBN/shown here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 58/CD/58 /CD/) this/DT/this is/VBZ/is the/DT/the binary/JJ/binary search/NN/search tree/NN/tree and/CC/and inside/VB/inside the/DT/the nodes/NNS/nodes are/VBP/are the/DT/the keys/NNP/keys. everything/NN/everything which/WDT/which is/VBZ/is less/RBR/less than/IN/than the/DT/the root/NN/root is/VBZ/is to/TO/to the/DT/the left/NN/left of/IN/of the/DT/the root/NN/root and/CC/and everything/NN/everything which/WDT/which is/VBZ/is more/RBR/more than/IN/than the/DT/the root/NN/root is/VBZ/is to/TO/to the/DT/the right/NN/right of/IN/of it/NNP/it. the/DT/the thing/NN/thing that/WDT/that is/VBZ/is written/VBN/written next/JJ/next to/TO/to each/DT/each node/NN/node is/VBZ/is the/DT/the height/NN/height of/IN/of a/DT/a node/NNP/node. what/WP/what we/PRP/we will/MD/will call/VB/call the/DT/the height/NN/height of/IN/of a/DT/a node/NN/node ?/./? we/PRP/we have/VBP/have not/RB/not defined/VBN/defined this/DT/this term/NN/term yet/NNP/yet. we/PRP/we will/MD/will just/RB/just say/VB/say the/DT/the height/NN/height of/IN/of a/DT/a node/NN/node is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at that/DT/that node/NNP/node. for/IN/for instance/NN/instance if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this node/NN/node /:/( 78/CD/78 /CD/) /,/, all/DT/all the/DT/the things/NNS/things which/WDT/which is/VBZ/is below/IN/below it/PRP/it is/VBZ/is the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at this/DT/this node/NNP/node. what/WP/what is/VBZ/is the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at a/DT/a node/NN/node ?/./? it/PRP/it is/VBZ/is just/RB/just the/DT/the set/NN/set of/IN/of descendents/NNP/descendents. i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the tree/NN/tree which/WDT/which is/VBZ/is on/IN/on the/DT/the right/NN/right and/CC/and in/IN/in previous/JJ/previous classes/NNS/classes we/PRP/we have/VBP/have defined/VBN/defined the/DT/the height/NN/height of/IN/of such/JJ/such a/DT/a tree/NN/tree as/IN/as 2/CD/2 and/CC/and not/RB/not 3/CD/3. because/IN/because we/PRP/we had/VBD/had said/VBN/said that/IN/that 78/CD/78 is/VBZ/is at/IN/at level/NN/level zero/NN/zero and/CC/and 50/CD/50 is/VBZ/is at/IN/at level/NN/level 1/CD/1 and/CC/and 48/CD/48 is/VBZ/is at/IN/at level/NN/level 2/CD/2 and/CC/and so/RB/so we/PRP/we called/VBD/called the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree as/IN/as 2/CD/2. we/PRP/we will/MD/will just/RB/just modify/VB/modify /,/, we/PRP/we will/MD/will say/VB/say that/IN/that if/IN/if it/PRP/it is/VBZ/is the/DT/the singleton/NN/singleton node/NN/node just/RB/just one/CD/one node/NN/node then/RB/then it/PRP/it is/VBZ/is of/IN/of height/NN/height one/CD/one instead/NN/instead of/IN/of height/NN/height zero/NN/zero as/IN/as we/PRP/we have/VBP/have been/VBN/been calling/VBG/calling it/NNP/it. so/RB/so level/NN/level numbers/NNS/numbers are/VBP/are beginning/VBG/beginning with/IN/with 1/CD/1. this/DT/this sub/NN/sub tree/NN/tree 50/CD/50 has/VBZ/has height/VBN/height 2/CD/2 and/CC/and this/DT/this sub/NN/sub tree/NN/tree 78/CD/78 has/VBZ/has height/VBN/height 3/CD/3 and/CC/and this/DT/this entire/JJ/entire tree/NN/tree has/VBZ/has height/VBN/height 4/CD/4. we/PRP/we are/VBP/are going/VBG/going to/TO/to call/VB/call this/DT/this as/IN/as height/NN/height of/IN/of the/DT/the tree/NN/tree for/IN/for the/DT/the purpose/NN/purpose of/IN/of the/DT/the avl/NN/avl tree/NNP/tree. with/IN/with every/DT/every node/NN/node i/PRP/i have/VBP/have put/VBN/put down/RP/down the/DT/the height/NN/height of/IN/of that/DT/that node/NNP/node. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the node/NN/node ?/./? it/PRP/it is/VBZ/is just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at that/DT/that node/NNP/node. all/DT/all the/DT/the leaves/NNS/leaves will/MD/will have/VB/have height/VBN/height 1/CD/1 /,/, the/DT/the parents/NNS/parents of/IN/of the/DT/the leaves/NNS/leaves will/MD/will have/VB/have height/VBN/height 2/CD/2 and/CC/and so/RB/so on/NNP/on. such/JJ/such a/DT/a tree/NN/tree is/VBZ/is called/VBN/called avl/NN/avl tree/NN/tree if/IN/if it/PRP/it is/VBZ/is height/VBN/height balanced/-NONE-/balanced. what/WP/what is/VBZ/is height/VBN/height balanced/VBN/balanced ?/./? if/IN/if i/PRP/i look/VBP/look at/IN/at any/DT/any node/NN/node and/CC/and its/PRP$/its children/NNS/children then/RB/then the/DT/the difference/NN/difference in/IN/in their/PRP$/their height/NN/height is/VBZ/is at/IN/at most/JJS/most one/NNP/one. there/RB/there might/MD/might be/VB/be no/RB/no difference/NN/difference in/IN/in their/PRP$/their heights/NNS/heights /,/, as/IN/as in/IN/in the/DT/the case/NN/case with/IN/with the/DT/the 50th/JJ/50th node/NNP/node. its/PRP$/its 2/CD/2 children/NNS/children have/VBP/have the/DT/the same/JJ/same height/NNP/height. the/DT/the node/NN/node 78/CD/78 has/VBZ/has the/DT/the difference/NN/difference /,/, the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has more/JJR/more height/JJ/height than/IN/than the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height 2/CD/2 and/CC/and the/DT/the right/NN/right sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height 1/CD/1. the/DT/the node/NN/node 44/CD/44 also/RB/also has/VBZ/has a/DT/a difference/NN/difference of/IN/of one/NNP/one. the/DT/the right/NN/right sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height 3/CD/3 and/CC/and the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height 2/CD/2. but/CC/but the/DT/the difference/NN/difference is/VBZ/is no/DT/no more/RBR/more than/IN/than a/DT/a one/NNP/one. this/DT/this is/VBZ/is the/DT/the avl/NN/avl tree/NNP/tree. this/DT/this is/VBZ/is what/WP/what our/PRP$/our definition/NN/definition of/IN/of an/DT/an avl/NN/avl tree/NN/tree would/MD/would be/NNP/be. it/PRP/it is/VBZ/is true/JJ/true for/IN/for every/DT/every node/NN/node of/IN/of the/DT/the tree/NNP/tree. the/DT/the binary/JJ/binary search/NN/search tree/NN/tree has/VBZ/has 2/CD/2 properties/NNP/properties. it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a binary/JJ/binary search/NN/search tree/NN/tree and/CC/and for/IN/for every/DT/every internal/JJ/internal node/NN/node of/IN/of the/DT/the tree/NN/tree /,/, the/DT/the heights/NNS/heights of/IN/of the/DT/the children/NNS/children differ/VBP/differ by/IN/by at/IN/at most/JJS/most one/NNP/one. why/WRB/why have/VBP/have i/PRP/i said/VBD/said internal/JJ/internal ?/./? for/IN/for a/DT/a leaf/NN/leaf node/NN/node it/PRP/it has/VBZ/has no/DT/no children/NNP/children. it/PRP/it does/VBZ/does not/RB/not make/VB/make any/DT/any difference/NN/difference to/TO/to talk/VB/talk about/IN/about the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. so/RB/so for/IN/for this/DT/this node/NN/node 17/CD/17 the/DT/the right/NN/right sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height one/NNP/one. the/DT/the left/NN/left sub/NN/sub tree/NN/tree is/VBZ/is missing/VBG/missing so/RB/so we/PRP/we call/VBP/call it/PRP/it height/MD/height zero/VB/zero. now/RB/now you/PRP/you understand/VBP/understand why/WRB/why i/PRP/i had/VBD/had made/VBN/made this/DT/this change/NNP/change. if/IN/if the/DT/the tree/NN/tree is/VBZ/is absent/NN/absent then/RB/then i/PRP/i will/MD/will denote/VB/denote the/DT/the height/NN/height as/IN/as zero/NNP/zero. and/CC/and the/DT/the single/JJ/single node/NN/node will/MD/will become/VB/become height/JJ/height one/NNP/one. that/IN/that is/VBZ/is why/WRB/why i/PRP/i have/VBP/have to/TO/to shift/VB/shift the/DT/the definition/NN/definition a/DT/a little/RB/little bit/NNP/bit. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 6/CD/6 /:/: 04/CD/04 /CD/) let/NN/let us/PRP/us see/VBP/see what/WP/what is/VBZ/is not/RB/not an/DT/an avl/NN/avl tree/NN/tree ?/./? so/RB/so recall/RB/recall that/IN/that one/CD/one of/IN/of our/PRP$/our binary/JJ/binary tree/NN/tree which/WDT/which was/VBD/was very/RB/very bad/JJ/bad /,/, which/WDT/which had/VBD/had a/DT/a huge/JJ/huge height/NN/height was/VBD/was a/DT/a tree/NN/tree like/IN/like this/NNP/this. this/DT/this is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NN/tree and/CC/and i/PRP/i put/VBD/put some/DT/some keys/NNS/keys so/RB/so that/IN/that it/PRP/it looks/VBZ/looks like/IN/like a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. this/DT/this has/VBZ/has height/VBN/height equal/JJ/equal to/TO/to n-1/-NONE-/n-1 /,/, if/IN/if there/EX/there were/VBD/were n/NN/n nodes/NNP/nodes. is/VBZ/is this/DT/this an/DT/an avl/NN/avl tree/NN/tree ?/./? no/NN/no. is/VBZ/is the/DT/the last/JJ/last node/NN/node height/NN/height balanced/VBD/balanced ?/./? yes/NNS/yes /,/, since/IN/since it/PRP/it is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node it/PRP/it is/VBZ/is height/VBN/height balanced/-NONE-/balanced. is/VBZ/is the/DT/the next/JJ/next node/NN/node height/NN/height balanced/VBD/balanced ?/./? yes/NNS/yes /,/, it/PRP/it is/VBZ/is also/RB/also height/RB/height balanced/NNP/balanced. is/VBZ/is the/DT/the node/NN/node following/VBG/following the/DT/the 2nd/JJ/2nd node/NN/node height/NN/height balanced/VBD/balanced ?/./? no/DT/no because/NN/because the/DT/the right/NN/right sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height 2/CD/2 and/CC/and the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height zero/NNP/zero. thus/RB/thus the/DT/the height/NN/height balanced/VBD/balanced property/NN/property is/VBZ/is violated/VBN/violated here/-NONE-/here. it/PRP/it is/VBZ/is also/RB/also violated/VBN/violated in/IN/in the/DT/the following/JJ/following nodes/NNP/nodes. thus/RB/thus we/PRP/we will/MD/will never/RB/never have/VB/have such/JJ/such kind/NN/kind of/IN/of trees/NNS/trees as/IN/as avl/NN/avl trees/NNP/trees. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 22/CD/22 /CD/) since/IN/since we/PRP/we said/VBD/said that/IN/that we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to have/VB/have such/JJ/such a/DT/a kind/NN/kind of/IN/of trees/NNS/trees as/IN/as avl/NN/avl trees/NNS/trees /,/, let/VB/let us/PRP/us try/NN/try and/CC/and figure/NN/figure out/RP/out how/WRB/how bad/JJ/bad the/DT/the height/NN/height of/IN/of an/DT/an avl/NN/avl trees/VBZ/trees can/MD/can be/NNP/be. let/VB/let say/VBP/say i/PRP/i have/VBP/have an/DT/an avl/NN/avl tree/NN/tree of/IN/of n/NN/n nodes/NNS/nodes /,/, if/IN/if its/PRP$/its height/NN/height can/MD/can still/RB/still be/VB/be as/IN/as bad/JJ/bad as/IN/as n-1/-NONE-/n-1 i/PRP/i have/VBP/have not/RB/not gained/VBN/gained anything/NNP/anything. i/PRP/i would/MD/would like/VB/like to/TO/to say/VB/say that/IN/that its/PRP$/its height/NN/height is/VBZ/is no/DT/no more/RBR/more than/IN/than log/NN/log n/NN/n or/CC/or something/NNP/something. we/PRP/we will/MD/will figure/VB/figure that/IN/that out/IN/out and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove in/IN/in the/DT/the next/JJ/next few/JJ/few minutes/NNP/minutes. the/DT/the height/NN/height of/IN/of an/DT/an avl/NN/avl tree/NN/tree t/NN/t which/WDT/which has/VBZ/has n/VBN/n nodes/NNS/nodes in/IN/in it/PRP/it is/VBZ/is only/RB/only order/JJR/order log/NN/log n/NNP/n. let/NN/let see/VB/see why/WRB/why this/DT/this is/VBZ/is true/NNP/true. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to prove/VB/prove this/DT/this claim/NN/claim directly/RB/directly /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to make/VB/make a/DT/a slightly/RB/slightly different/JJ/different argument/NNP/argument. let/NN/let us/PRP/us take/VBP/take an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NNP/h. amongst/NN/amongst all/DT/all possible/JJ/possible avl/NN/avl trees/NNS/trees of/IN/of height/NN/height h/NN/h /,/, let/VB/let me/PRP/me see/VB/see the/DT/the one/CD/one which/WDT/which has/VBZ/has the/DT/the smallest/JJS/smallest number/NN/number of/IN/of nodes/NNP/nodes. i/PRP/i defined/VBD/defined this/DT/this quantity/NN/quantity n/NN/n /:/( h/NN/h /:/) as/IN/as the/DT/the minimum/JJ/minimum number/NN/number of/IN/of nodes/NNS/nodes in/IN/in an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NNP/h. let/NN/let us/PRP/us figure/VBP/figure out/RP/out the/DT/the quantity/NN/quantity and/CC/and then/RB/then we/PRP/we will/MD/will see/VB/see how/WRB/how this/DT/this implies/VBZ/implies the/DT/the proposition/NNP/proposition. given/NN/given an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find out/RP/out what/WP/what is/VBZ/is the/DT/the smallest/JJS/smallest number/NN/number of/IN/of nodes/NNS/nodes it/PRP/it has/NNP/has. can/MD/can it/PRP/it have/VB/have only/RB/only h/JJ/h nodes/NNS/nodes ?/./? then/RB/then we/PRP/we will/MD/will be/VB/be in/IN/in trouble/NNP/trouble. we/PRP/we want/VBP/want to/TO/to say/VB/say it/PRP/it has/VBZ/has many/JJ/many nodes/NNS/nodes /,/, if/IN/if you/PRP/you recall/VBP/recall a/DT/a binary/JJ/binary search/NN/search tree/NN/tree of/IN/of height/NN/height h/NN/h can/MD/can have/VB/have only/RB/only h/JJ/h +/NN/+ 1/CD/1 nodes/NNS/nodes like/IN/like the/DT/the example/NN/example that/IN/that i/PRP/i showed/VBD/showed you/NNP/you. but/CC/but a/DT/a good/JJ/good tree/NN/tree which/WDT/which is/VBZ/is like/IN/like a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h will/MD/will have/VB/have nodes/NNP/nodes. what/WP/what we/PRP/we would/MD/would really/RB/really like/VB/like is/VBZ/is that/IN/that our/PRP$/our avl/NN/avl tree/NN/tree which/WDT/which was/VBD/was of/IN/of height/NN/height h/NN/h has/VBZ/has large/JJ/large number/NN/number of/IN/of nodes/NNS/nodes /,/, not/RB/not just/RB/just h/JJ/h but/CC/but more/RBR/more like/IN/like or/CC/or something/NN/something like/IN/like that/NNP/that. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/NNP/prove. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 31/CD/31 /CD/) let/NN/let us/PRP/us understand/VBP/understand the/DT/the quantity/NNP/quantity. it/PRP/it is/VBZ/is the/DT/the minimum/JJ/minimum number/NN/number of/IN/of nodes/NNS/nodes in/IN/in an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NNP/h. what/WP/what is/VBZ/is an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height 1/CD/1 ?/./? it/PRP/it is/VBZ/is just/RB/just a/DT/a singleton/NN/singleton node/NN/node and/CC/and nothing/NN/nothing else/NNP/else. it/PRP/it has/VBZ/has only/RB/only 1/CD/1 node/NN/node in/IN/in it/NNP/it. if/IN/if i/PRP/i have/VBP/have an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height 2/CD/2 then/RB/then it/PRP/it has/VBZ/has root/VBN/root and/CC/and 1/CD/1 node/NNP/node. but/CC/but it/PRP/it can/MD/can also/RB/also be/VB/be root/VBN/root and/CC/and 2/CD/2 children/NNP/children. why/WRB/why have/VBP/have i/PRP/i written/VBN/written n/NN/n /:/( 2/CD/2 /CD/) =/CD/= 2/CD/2 and/CC/and not/RB/not 3/CD/3 because/IN/because i/PRP/i am/VBP/am counting/VBG/counting the/DT/the minimum/NNP/minimum. that/IN/that is/VBZ/is why/WRB/why n/NN/n /:/( 2/CD/2 /CD/) =/CD/= 2/CD/2 /,/, the/DT/the minimum/JJ/minimum number/NN/number of/IN/of nodes/NNS/nodes will/MD/will be/VB/be just/RB/just 2/CD/2 in/IN/in an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height 2/CD/2. suppose/NN/suppose if/IN/if i/PRP/i have/VBP/have an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height 3/CD/3 or/CC/or more/JJR/more /,/, it/PRP/it will/MD/will contain/VB/contain 1/CD/1 root/NN/root node/NNP/node. suppose/NN/suppose if/IN/if i/PRP/i have/VBP/have an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, it/PRP/it will/MD/will contain/VB/contain 1/CD/1 root/NN/root node/NN/node and/CC/and an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h-1/-NONE-/h-1 on/IN/on one/CD/one side/NN/side and/CC/and an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h-2/-NONE-/h-2 on/IN/on the/DT/the other/JJ/other side/NNP/side. why/WRB/why h-1/-NONE-/h-1 and/CC/and h-2/-NONE-/h-2 ?/./? it/PRP/it has/VBZ/has height/VBN/height h/NN/h so/IN/so its/PRP$/its children/NNS/children can/MD/can have/VB/have height/VBN/height only/RB/only h-1/-NONE-/h-1 and/CC/and not/RB/not more/RBR/more than/IN/than h-1/NNP/h-1. they/PRP/they can/MD/can have/VB/have a/DT/a difference/NN/difference of/IN/of at/IN/at most/JJS/most one/NNP/one. if/IN/if one/CD/one of/IN/of them/PRP/them is/VBZ/is h-1/-NONE-/h-1 the/DT/the other/JJ/other one/CD/one can/MD/can only/RB/only be/VB/be h-2/-NONE-/h-2 or/CC/or h-1/NNP/h-1. one/CD/one of/IN/of the/DT/the sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height h-1/-NONE-/h-1 and/CC/and the/DT/the other/JJ/other sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height h-1/-NONE-/h-1 or/CC/or h-2/NNP/h-2. but/CC/but what/WP/what will/MD/will we/VB/we pick/NN/pick ?/./? we/PRP/we would/MD/would like/VB/like that/IN/that the/DT/the other/JJ/other sub/NN/sub tree/NN/tree should/MD/should have/VB/have height/VBN/height h-2/NNP/h-2. why/WRB/why ?/./? because/IN/because of/IN/of minimum/JJ/minimum number/NN/number of/IN/of nodes/NNP/nodes. a/DT/a tree/NN/tree which/WDT/which has/VBZ/has smaller/JJR/smaller height/NN/height will/MD/will also/RB/also have/VB/have smaller/JJR/smaller number/NN/number of/IN/of nodes/NNS/nodes /,/, so/RB/so we/PRP/we would/MD/would like/VB/like that/IN/that the/DT/the height/NN/height of/IN/of the/DT/the other/JJ/other sub/NN/sub tree/NN/tree to/TO/to be/VB/be h-2/NNP/h-2. if/IN/if n/NN/n /:/( h/NN/h /:/) was/VBD/was the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, then/RB/then what/WP/what is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes n/VBP/n /:/( h/NN/h /:/) equal/JJ/equal to/TO/to ?/./? it/PRP/it is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in a/DT/a tree/NN/tree of/IN/of height/NN/height h-1/-NONE-/h-1 the/DT/the smallest/JJS/smallest possible/JJ/possible /,/, because/IN/because the/DT/the left/NN/left sub/NN/sub tree/NN/tree which/WDT/which is/VBZ/is of/IN/of height/NN/height h-1/-NONE-/h-1 can/MD/can have/VB/have as/RB/as small/JJ/small as/IN/as little/JJ/little number/NN/number of/IN/of nodes/NNS/nodes as/IN/as possible/JJ/possible and/CC/and in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree which/WDT/which is/VBZ/is of/IN/of height/NN/height h-2/-NONE-/h-2 also/RB/also has/VBZ/has little/RB/little number/JJR/number of/IN/of nodes/NNS/nodes as/IN/as possible/NNP/possible. the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NN/tree is/VBZ/is n/VBN/n /-NONE-/( h-1/-NONE-/h-1 /:/) /,/, the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree is/VBZ/is n/VBN/n /-NONE-/( h-2/-NONE-/h-2 /:/) /./. there/EX/there is/VBZ/is one/CD/one root/NN/root node/NN/node and/CC/and the/DT/the recurrence/NN/recurrence relationship/NN/relationship would/MD/would look/VB/look like/IN/like this/DT/this /NN/( n/NN/n /:/( h/NN/h /:/) =/:/= 1/CD/1 +/CD/+ n/NN/n /:/( h-1/-NONE-/h-1 /:/) +/:/+ n/NN/n /:/( h-2/-NONE-/h-2 /:/) /:/) /./. once/RB/once again/RB/again we/PRP/we are/VBP/are seeing/VBG/seeing the/DT/the recurrence/NN/recurrence relation/NNP/relation. this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have to/TO/to solve/VB/solve today/NNP/today. what/WP/what are/VBP/are the/DT/the base/NN/base conditions/NNS/conditions ?/./? we/PRP/we know/VBP/know n/NN/n /:/( 1/CD/1 /CD/) is/VBZ/is 1/CD/1 and/CC/and n/NN/n /:/( 2/CD/2 /CD/) is/VBZ/is 2/CD/2. with/IN/with that/DT/that you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what n/NN/n /:/( 3/CD/3 /CD/) would/MD/would be/VB/be ?/./? n/NN/n /:/( 3/CD/3 /CD/) would/MD/would be/VB/be 1/CD/1 +/CD/+ 1/CD/1 +/CD/+ 2/CD/2 which/WDT/which is/VBZ/is 4/CD/4 and/CC/and so/RB/so on/NNP/on. but/CC/but we/PRP/we would/MD/would like/VB/like a/DT/a close/JJ/close form/NN/form expression/NN/expression to/TO/to do/VB/do this/NNP/this. so/RB/so we/PRP/we will/MD/will solve/VB/solve this/DT/this recurrence/NNP/recurrence. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be solving/VBG/solving this/DT/this recurrence/NN/recurrence exactly/NNP/exactly. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do it/PRP/it approximately/NNP/approximately. first/RB/first we/PRP/we use/VBP/use the/DT/the fact/NN/fact that/IN/that n/NN/n /:/( h-1/-NONE-/h-1 /:/) is/VBZ/is only/RB/only going/VBG/going to/TO/to be/VB/be larger/JJR/larger than/IN/than n/NN/n /:/( h-2/-NONE-/h-2 /:/) /./. because/IN/because as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree grows/VBZ/grows the/DT/the number/NN/number of/IN/of nodes/NNS/nodes can/MD/can not/RB/not reduce/VB/reduce /,/, it/PRP/it will/MD/will only/RB/only be/VB/be more/NNP/more. so/RB/so n/JJ/n /NN/( h-1/-NONE-/h-1 /./) is/VBZ/is at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as n/NN/n /:/( h-2/-NONE-/h-2 /:/) /./. then/RB/then this/DT/this implies/NNS/implies what/WP/what we/PRP/we had/VBD/had written/VBN/written earlier/JJR/earlier that/IN/that is/VBZ/is n/VBN/n /-NONE-/( h/NN/h /:/) =/:/= n/NN/n /:/( h-1/-NONE-/h-1 /:/) +/:/+ n/NN/n /:/( h-2/-NONE-/h-2 /:/) +/:/+ 1/CD/1. this/DT/this quantity/NN/quantity is/VBZ/is at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as 2n/CD/2n /CD/( h-2/-NONE-/h-2 /:/) /./. strictly/RB/strictly larger/JJR/larger because/IN/because i/PRP/i also/RB/also dropped/VBD/dropped the/DT/the one/NNP/one. i/PRP/i have/VBP/have replaced/VBN/replaced this/DT/this n/NN/n /:/( h-1/-NONE-/h-1 /:/) by/IN/by n/NN/n /:/( h-2/-NONE-/h-2 /:/) and/CC/and this/DT/this /NN/( 2n/CD/2n /CD/( h-2/-NONE-/h-2 /:/) /:/) is/VBZ/is what/WP/what i/PRP/i get/NNP/get. n/NN/n /:/( h/NN/h /:/) =/:/= n/NN/n /:/( h-1/-NONE-/h-1 /:/) +/:/+ n/NN/n /:/( h-2/-NONE-/h-2 /:/) +/:/+ 1/CD/1 >/CD/> 2n/CD/2n /CD/( h-2/-NONE-/h-2 /:/) this/DT/this becomes/VBZ/becomes the/DT/the simple/JJ/simple thing/NN/thing to/TO/to solve/VB/solve /,/, n/NN/n /:/( h/NN/h /:/) is/VBZ/is more/RBR/more than/IN/than 2n/CD/2n /CD/( h-2/-NONE-/h-2 /:/) /./. this/DT/this is/VBZ/is what/WP/what i/PRP/i will/MD/will solve/VB/solve. so/RB/so n/VB/n /:/( h/NN/h /:/) is/VBZ/is more/RBR/more than/IN/than 2n/CD/2n /CD/( h-2/-NONE-/h-2 /:/) and/CC/and now/RB/now n/VBP/n /:/( h-2/-NONE-/h-2 /:/) is/VBZ/is more/RBR/more than/IN/than two/CD/two times/NNS/times 2n/CD/2n /CD/( h-4/-NONE-/h-4 /:/) /./. this/DT/this implies/VBZ/implies the/DT/the entire/JJ/entire thing/NN/thing n/NN/n /:/( h/NN/h /:/) is/VBZ/is more/RBR/more than/IN/than 4n/CD/4n /CD/( h-4/-NONE-/h-4 /:/) /./. which/WDT/which implies/NNS/implies that/WDT/that the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is more/RBR/more than/IN/than 8n/CD/8n /CD/( h-6/-NONE-/h-6 /:/) /./. you/PRP/you understand/VBP/understand how/WRB/how this/DT/this comes/VBZ/comes n/NN/n /:/( h-4/-NONE-/h-4 /:/) is/VBZ/is more/RBR/more than/IN/than 2n/CD/2n /CD/( h-6/-NONE-/h-6 /:/) and/CC/and so/RB/so on/IN/on /,/, which/WDT/which will/MD/will eventually/RB/eventually take/VB/take us/PRP/us to/TO/to something/NN/something like/IN/like after/IN/after i/PRP/i steps/VBZ/steps n/JJ/n /NN/( h-2i/NN/h-2i /:/) /./. suppose/NN/suppose i/PRP/i pick/VBP/pick /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume that/IN/that this/DT/this quantity/NN/quantity is/VBZ/is an/DT/an integer/NNP/integer. let/NN/let us/PRP/us assume/VBP/assume that/IN/that h/NN/h was/VBD/was even/RB/even to/TO/to begin/VB/begin with/IN/with /,/, so/RB/so this/DT/this is/VBZ/is an/DT/an integer/NN/integer and/CC/and for/IN/for this/DT/this value/NN/value i/PRP/i will/MD/will get/VB/get n/NN/n /:/( h/NN/h /:/) >/:/> in/IN/in which/WDT/which i/PRP/i replaced/VBD/replaced /./. recall/NN/recall n/NN/n /:/( 2/CD/2 /CD/) was/VBD/was 2/CD/2 /,/, so/RB/so it/PRP/it becomes/VBZ/becomes /./. what/WP/what does/VBZ/does this/DT/this say/NN/say ?/./? we/PRP/we just/RB/just argued/VBD/argued that/IN/that if/IN/if your/PRP$/your avl/NN/avl tree/NN/tree has/VBZ/has height/VBN/height h/NN/h then/RB/then it/PRP/it has/VBZ/has at/IN/at least/JJS/least nodes/NNP/nodes. that/IN/that is/VBZ/is at/IN/at least/JJS/least so/RB/so many/JJ/many nodes/NNP/nodes. what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of nodes/NNS/nodes it/PRP/it can/MD/can have/VB/have ?/./? something/NN/something like/IN/like /,/, one/CD/one of/IN/of those/DT/those because/IN/because it/PRP/it can/MD/can be/VB/be a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 34/CD/34 /CD/) suppose/NN/suppose i/PRP/i were/VBD/were to/TO/to take/VB/take logarithms/NNS/logarithms /,/, what/WP/what would/MD/would i/VB/i get/VB/get ?/./? i/PRP/i would/MD/would get/VB/get h/JJ/h </NN/< 2log/CD/2log n/NNP/n. so/RB/so n/JJ/n /NN/( h/NN/h /:/) is/VBZ/is actually/RB/actually less/JJR/less than/IN/than n/NN/n because/IN/because i/PRP/i have/VBP/have an/DT/an avl/NN/avl tree/NN/tree whose/WP$/whose height/NN/height is/VBZ/is h/JJ/h and/CC/and it/PRP/it has/VBZ/has n/VBN/n nodes/NNP/nodes. suppose/NN/suppose i/PRP/i had/VBD/had an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NN/h and/CC/and n/NN/n nodes/NNS/nodes then/RB/then it/PRP/it will/MD/will also/RB/also satisfy/VB/satisfy this/DT/this relation/NN/relation /:/( h/NN/h </:/< 2log/CD/2log n/NN/n /:/( h/NN/h /:/) /:/) /./. it/PRP/it will/MD/will satisfy/VB/satisfy the/DT/the relation/NN/relation because/IN/because n/NN/n is/VBZ/is only/RB/only going/VBG/going to/TO/to be/VB/be larger/JJR/larger than/IN/than n/NN/n /:/( h/NN/h /:/) /./. what/WP/what was/VBD/was n/VBN/n /-NONE-/( h/NN/h /:/) ?/./? n/NN/n /:/( h/NN/h /:/) was/VBD/was the/DT/the minimum/JJ/minimum possible/JJ/possible number/NN/number of/IN/of nodes/NNP/nodes. any/DT/any avl/NN/avl tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes has/VBZ/has height/VBN/height at/IN/at most/JJS/most 2log/CD/2log n/NN/n from/IN/from this/DT/this argument/NNP/argument. the/DT/the h/NN/h </:/< 2log/CD/2log n/NN/n /:/( h/NN/h /:/) is/VBZ/is what/WP/what we/PRP/we argued/VBD/argued after/IN/after taking/VBG/taking algorithms/NNP/algorithms. let/NN/let me/PRP/me take/VBP/take a/DT/a tree/NN/tree of/IN/of height/NN/height h/NN/h and/CC/and n/NN/n nodes/NNP/nodes. so/RB/so n/JJ/n is/VBZ/is going/VBG/going to/TO/to be/VB/be larger/JJR/larger than/IN/than n/NN/n /:/( h/NN/h /:/) because/IN/because n/NN/n /:/( h/NN/h /:/) is/VBZ/is the/DT/the minimum/JJ/minimum number/NN/number of/IN/of nodes/NNS/nodes that/WDT/that are/VBP/are possible/JJ/possible in/IN/in a/DT/a tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, n/NN/n /:/( h/NN/h /:/) is/VBZ/is that/IN/that quantity/NNP/quantity. this/DT/this n/NN/n is/VBZ/is just/RB/just a/DT/a function/NN/function /,/, do/VBP/do not/RB/not confuse/VB/confuse this/DT/this n/NN/n with/IN/with the/DT/the number/NN/number of/IN/of nodes/NNP/nodes. you/PRP/you can/MD/can replace/VB/replace this/DT/this n/NN/n with/IN/with something/NN/something else/NNP/else. n/NN/n /:/( h/NN/h /:/) is/VBZ/is the/DT/the minimum/JJ/minimum number/NN/number of/IN/of nodes/NNS/nodes in/IN/in a/DT/a tree/NN/tree of/IN/of height/NN/height h/NNP/h. what/WP/what we/PRP/we argued/VBD/argued was/VBD/was that/IN/that h/NN/h </:/< 2log/CD/2log n/NN/n /:/( h/NN/h /:/) /./. take/NN/take an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NN/h and/CC/and m/NN/m nodes/NNP/nodes. its/PRP$/its height/NN/height is/VBZ/is h/JJ/h and/CC/and it/PRP/it has/VBZ/has m/NN/m nodes/NNS/nodes in/IN/in it/NNP/it. what/WP/what does/VBZ/does this/DT/this implies/NNS/implies ?/./? the/DT/the m/NN/m >/:/> n/NN/n /:/( h/NN/h /:/) /,/, this/DT/this follows/VBZ/follows from/IN/from our/PRP$/our definition/NN/definition of/IN/of n/NN/n /:/( h/NN/h /:/) /./. we/PRP/we know/VBP/know that/IN/that h/NN/h </:/< 2log/CD/2log n/NN/n /:/( h/NN/h /:/) which/WDT/which is/VBZ/is then/RB/then </:/< 2log/CD/2log m/NNP/m. this/DT/this implies/VBZ/implies h/NN/h =/:/= o/NN/o /:/( log/NN/log m/NN/m /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 47/CD/47 /CD/) the/DT/the h/NN/h is/VBZ/is the/DT/the height/NN/height and/CC/and m/NN/m is/VBZ/is the/DT/the number/NN/number of/IN/of number/NN/number of/IN/of nodes/NNP/nodes. the/DT/the height/NN/height of/IN/of an/DT/an avl/NN/avl tree/NN/tree on/IN/on m/NN/m nodes/NNS/nodes is/VBZ/is less/JJR/less than/IN/than two/CD/two times/NNS/times log/VBP/log of/IN/of the/DT/the number/NN/number of/IN/of nodes/NNP/nodes. that/IN/that is/VBZ/is what/WP/what being/VBG/being said/VBD/said here/NNP/here. we/PRP/we have/VBP/have shown/VBN/shown that/IN/that such/JJ/such a/DT/a tree/NN/tree will/MD/will have/VB/have height/VBN/height no/DT/no more/RBR/more than/IN/than 2log/CD/2log n/NNP/n. the/DT/the best/JJS/best possible/JJ/possible tree/NN/tree could/MD/could have/VB/have height/VBN/height only/RB/only log/JJ/log n/NN/n if/IN/if it/PRP/it were/VBD/were like/IN/like a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree /,/, very/RB/very dense/JJ/dense and/CC/and every/DT/every thing/NNP/thing. but/CC/but this/DT/this has/VBZ/has more/JJR/more height/JJ/height but/CC/but not/RB/not too/RB/too much/RB/much /,/, just/RB/just a/DT/a factor/NN/factor of/IN/of two/CD/two more/NNP/more. much/RB/much better/JJR/better than/IN/than having/VBG/having a/DT/a height/NN/height of/IN/of an/DT/an n/NNP/n. let/NN/let us/PRP/us try/VBP/try and/CC/and solve/VB/solve this/DT/this recurrence/NN/recurrence slightly/RB/slightly better/NNP/better. this/DT/this is/VBZ/is more/RBR/more of/IN/of an/DT/an exercise/NN/exercise also/RB/also to/TO/to show/VB/show you/PRP/you how/WRB/how recurrences/NNS/recurrences are/VBP/are solved/NNP/solved. we/PRP/we did/VBD/did fairly/RB/fairly crude/JJ/crude analysis/NN/analysis /,/, we/PRP/we replaced/VBD/replaced n/NN/n /:/( h-1/-NONE-/h-1 /:/) with/IN/with n/NN/n /:/( h-2/-NONE-/h-2 /:/) and/CC/and then/RB/then we/PRP/we did/VBD/did the/DT/the steps/NNS/steps and/CC/and got/VBD/got the/DT/the result/NNP/result. let/NN/let us/PRP/us try/VBP/try and/CC/and get/VB/get something/NN/something better/NNP/better. it/PRP/it is/VBZ/is just/RB/just an/DT/an exercise/NNP/exercise. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 19/CD/19 /CD/) we/PRP/we will/MD/will show/VB/show how/WRB/how to/TO/to get/VB/get a/DT/a sharper/JJR/sharper bound/NN/bound on/IN/on the/DT/the height/NN/height of/IN/of an/DT/an avl/NN/avl tree/NNP/tree. the/DT/the bound/NN/bound we/PRP/we obtained/VBD/obtained is/VBZ/is 2log/CD/2log n/NNP/n. let/NN/let see/VB/see if/IN/if we/PRP/we can/MD/can get/VB/get something/NN/something better/JJR/better than/IN/than that/NNP/that. we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use induction/NN/induction and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do a/DT/a tighter/NN/tighter analysis/NN/analysis of/IN/of the/DT/the same/JJ/same thing/NNP/thing. we/PRP/we are/VBP/are going/VBG/going to/TO/to show/VB/show that/IN/that the/DT/the minimum/JJ/minimum number/NN/number of/IN/of nodes/NNS/nodes in/IN/in an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NN/h which/WDT/which was/VBD/was n/VBN/n /-NONE-/( h/NN/h /:/) is/VBZ/is at/IN/at least/JJS/least c/NN/c times/NNS/times h/VBP/h that/IN/that is/VBZ/is where/WRB/where c/NN/c will/MD/will be/VB/be some/DT/some constant/JJ/constant more/RBR/more than/IN/than one/NNP/one. what/WP/what did/VBD/did we/PRP/we show/VBP/show in/IN/in the/DT/the previous/JJ/previous slide/NN/slide ?/./? the/DT/the n/NN/n /:/( h/NN/h /:/) was/VBD/was at/IN/at least/JJS/least /./. what/WP/what was/VBD/was the/DT/the c/NN/c ?/./? it/PRP/it was/VBD/was /,/, there/EX/there we/PRP/we showed/VBD/showed a/DT/a c/NN/c of/IN/of /./. let/NN/let see/VB/see if/IN/if i/PRP/i can/MD/can get/VB/get a/DT/a higher/JJR/higher c/NN/c that/IN/that is/VBZ/is a/DT/a larger/JJR/larger c/NN/c more/JJR/more than/IN/than /./. what/WP/what would/MD/would be/VB/be the/DT/the way/NN/way of/IN/of doing/VBG/doing such/JJ/such a/DT/a thing/NN/thing ?/./? we/PRP/we will/MD/will assume/VB/assume that/IN/that n/NN/n /:/( h/NN/h /:/) is/VBZ/is at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as /./. we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove this/DT/this by/IN/by induction/NNP/induction. we/PRP/we will/MD/will figure/VB/figure out/RP/out what/WP/what c/NN/c is/VBZ/is later/NNP/later. we/PRP/we are/VBP/are proving/VBG/proving a/DT/a certain/JJ/certain statement/NN/statement without/IN/without actually/RB/actually knowing/VBG/knowing exactly/RB/exactly what/WP/what the/DT/the statement/NN/statement is/VBZ/is because/IN/because i/PRP/i am/VBP/am not/RB/not telling/VBG/telling what/WP/what c/NN/c is/NNP/is. but/CC/but you/PRP/you will/MD/will see/VB/see what/WP/what the/DT/the c/NN/c has/VBZ/has to/TO/to be/VB/be for/IN/for the/DT/the statement/NN/statement to/TO/to be/VB/be true/NNP/true. what/WP/what is/VBZ/is the/DT/the base/NN/base case/NN/case ?/./? h/NN/h =/:/= 1/CD/1 /,/, say/VB/say n/NN/n /:/( h/NN/h /:/) is/VBZ/is 1/CD/1. this/DT/this statement/NN/statement n/NN/n /:/( h/NN/h /:/) >/:/> =/:/= is/VBZ/is true/JJ/true at/IN/at h/NN/h =/:/= 1/CD/1. we/PRP/we have/VBP/have said/VBN/said the/DT/the number/NN/number of/IN/of nodes/NNS/nodes is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at least/JJS/least as/IN/as large/JJ/large as/NNP/as. i/PRP/i assume/VBP/assume that/IN/that i/PRP/i made/VBD/made a/DT/a mistake/NN/mistake /,/, let/VB/let us/PRP/us come/VB/come back/RB/back this/DT/this base/NN/base case/NN/case again/NNP/again. we/PRP/we will/MD/will have/VB/have to/TO/to perhaps/RB/perhaps redefine/VB/redefine the/DT/the height/NN/height of/IN/of a/DT/a tree/NNP/tree. i/PRP/i think/VBP/think we/PRP/we should/MD/should have/VB/have or/CC/or some/DT/some thing/NNP/thing. suppose/NN/suppose the/DT/the claim/NN/claim is/VBZ/is true/JJ/true for/IN/for all/DT/all h/NN/h </:/< k/NN/k and/CC/and lets/NNS/lets try/VBP/try and/CC/and prove/VB/prove it/PRP/it for/IN/for h/NN/h =/:/= k/NNP/k. we/PRP/we have/VBP/have to/TO/to prove/VB/prove that/IN/that n/NN/n /:/( k/NN/k /:/) >/:/> =/:/= /./. we/PRP/we will/MD/will come/VB/come back/RB/back to/TO/to this/DT/this base/NN/base case/NN/case in/IN/in a/DT/a minute/NNP/minute. so/RB/so recall/JJ/recall this/DT/this n/NN/n /:/( k/NN/k /:/) =/:/= n/NN/n /:/( k-1/-NONE-/k-1 /:/) +/:/+ n/NN/n /:/( k-2/-NONE-/k-2 /:/) +/:/+ 1/CD/1 was/VBD/was our/PRP$/our recurrence/NN/recurrence relation/NNP/relation. our/PRP$/our induction/NN/induction hypothesis/NN/hypothesis says/VBZ/says that/IN/that n/NN/n /:/( k-1/-NONE-/k-1 /:/) is/VBZ/is at/IN/at least/JJS/least /,/, n/NN/n /:/( k-2/-NONE-/k-2 /:/) is/VBZ/is at/IN/at least/JJS/least and/CC/and i/PRP/i have/VBP/have ignored/VBN/ignored this/DT/this plus/NN/plus one/NNP/one. actually/RB/actually i/PRP/i can/MD/can say/VB/say that/IN/that this/DT/this is/VBZ/is strictly/RB/strictly larger/NNP/larger. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 16/CD/16 /CD/) i/PRP/i can/MD/can show/VB/show that/IN/that n/NN/n /:/( k/NN/k /:/) is/VBZ/is larger/JJR/larger than/IN/than if/IN/if i/PRP/i can/MD/can show/VB/show this/DT/this quantity/NN/quantity /:/( /:/) is/VBZ/is larger/JJR/larger than/IN/than /./. this/DT/this is/VBZ/is what/WP/what i/PRP/i have/VBP/have to/TO/to show/VB/show is/VBZ/is lager/JJR/lager than/IN/than /./. what/WP/what should/MD/should be/VB/be the/DT/the value/NN/value of/IN/of c/NN/c so/IN/so that/IN/that this/DT/this /NN/( >/:/> =/:/= /:/) is/VBZ/is true/NNP/true. i/PRP/i just/RB/just cancel/VBP/cancel out/RP/out the/DT/the terms/NNS/terms appropriately/RB/appropriately and/CC/and i/PRP/i get/VBP/get /./. if/IN/if c/NN/c satisfy/NN/satisfy this/DT/this /NN/( /:/) then/RB/then this/DT/this /NN/( >/:/> =/:/= /:/) will/MD/will also/RB/also be/VB/be true/NNP/true. why/WRB/why because/IN/because i/PRP/i just/RB/just multiply/RB/multiply both/DT/both the/DT/the side/NN/side by/IN/by and/CC/and i/PRP/i would/MD/would get/VB/get exactly/RB/exactly that/NNP/that. if/IN/if this/DT/this /NN/( >/:/> =/:/= /:/) is/VBZ/is true/JJ/true then/RB/then n/JJ/n /NN/( k/NN/k /:/) which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than this/DT/this /NN/( /:/) would/MD/would also/RB/also be/VB/be larger/JJR/larger than/IN/than /./. i/PRP/i just/RB/just have/VBP/have to/TO/to pick/VB/pick c/NN/c which/WDT/which will/MD/will satisfy/VB/satisfy this/DT/this /NN/( /:/) /./. you/PRP/you all/DT/all know/VBP/know how/WRB/how to/TO/to figure/VB/figure out/RP/out c/NN/c which/WDT/which will/MD/will satisfy/VB/satisfy this/NNP/this. we/PRP/we will/MD/will just/RB/just solve/VB/solve this/DT/this quadratic/JJ/quadratic equation/NN/equation and/CC/and this/DT/this has/VBZ/has roots/NNS/roots /./. this/DT/this is/VBZ/is negative/JJ/negative /,/, so/RB/so anything/NN/anything in/IN/in between/IN/between would/MD/would keep/VB/keep this/DT/this less/JJR/less than/IN/than zero/NNP/zero. but/CC/but i/PRP/i want/VBP/want as/IN/as large/JJ/large as/IN/as c/NN/c as/IN/as possible/JJ/possible /,/, so/RB/so i/PRP/i will/MD/will take/VB/take which/WDT/which is/VBZ/is roughly/RB/roughly 1.63/CD/1.63. this/DT/this quantity/NN/quantity is/VBZ/is also/RB/also known/VBN/known as/IN/as the/DT/the golden/NN/golden ratio/NNP/ratio. perhaps/RB/perhaps we/PRP/we will/MD/will see/VB/see this/DT/this more/RBR/more often/NNP/often. this/DT/this n/NN/n /:/( k/NN/k /:/) =/:/= n/NN/n /:/( k-1/-NONE-/k-1 /:/) +/:/+ n/NN/n /:/( k-2/-NONE-/k-2 /:/) +/:/+ 1/CD/1 is/VBZ/is not/RB/not a/DT/a fibonacci/NN/fibonacci relation/NNP/relation. if/IN/if you/PRP/you add/VBP/add one/CD/one to/TO/to both/DT/both sides/NNS/sides /,/, so/RB/so n/RB/n /:/( k/NN/k /:/) would/MD/would be/VB/be with/IN/with the/DT/the fibonacci/NN/fibonacci number/NN/number minus/NN/minus one/NNP/one. you/PRP/you can/MD/can also/RB/also do/VB/do that/NNP/that. we/PRP/we get/VBP/get a/DT/a bound/NN/bound of/IN/of roughly/RB/roughly 1.63/CD/1.63 that/WDT/that is/VBZ/is c/VBP/c as/RB/as 1.63/CD/1.63. what/WP/what is/VBZ/is the/DT/the mistake/NN/mistake we/PRP/we have/VBP/have made/VBN/made ?/./? one/CD/one thing/NN/thing is/VBZ/is base/NN/base case/NN/case have/VBP/have not/RB/not worked/VBN/worked out/NNP/out. i/PRP/i guess/VBZ/guess this/DT/this was/VBD/was the/DT/the wrong/JJ/wrong thing/NN/thing to/TO/to pick/NNP/pick. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 28/CD/28 /CD/) it/PRP/it should/MD/should not/RB/not be/VB/be but/CC/but may/MD/may be/VB/be /./. so/RB/so induction/NN/induction hypothesis/NN/hypothesis should/MD/should be/VB/be /./. let/VB/let us/PRP/us take/VB/take /,/, it/PRP/it will/MD/will not/RB/not make/VB/make a/DT/a difference/NNP/difference. we/PRP/we take/VBP/take the/DT/the so/RB/so precisely/RB/precisely i/PRP/i am/VBP/am dividing/VBG/dividing out/RP/out by/IN/by c/NN/c then/RB/then the/DT/the base/NN/base would/MD/would have/VB/have also/RB/also be/VB/be satisfied/NNP/satisfied. if/IN/if h/NN/h =/:/= 1/CD/1 /,/, you/PRP/you would/MD/would have/VB/have more/JJR/more than/IN/than one/CD/one which/WDT/which is/VBZ/is the/DT/the case/NNP/case. and/CC/and sorry/JJ/sorry about/IN/about the/DT/the base/NN/base case/NN/case /,/, for/IN/for the/DT/the other/JJ/other two/CD/two also/RB/also it/PRP/it will/MD/will be/VB/be okay/NNP/okay. because/IN/because for/IN/for h/NN/h =/:/= 2/CD/2 /,/, n/NN/n /:/( 2/CD/2 /CD/) is/VBZ/is 2/CD/2 and/CC/and this/DT/this would/MD/would become/VB/become which/WDT/which is/VBZ/is c/NNP/c. the/DT/the c/NN/c is/VBZ/is less/JJR/less than/IN/than 2/CD/2 because/IN/because we/PRP/we just/RB/just argued/VBD/argued it/PRP/it is/VBZ/is 1.63/CD/1.63. so/RB/so please/VB/please make/NN/make that/WDT/that correction/NN/correction /,/, we/PRP/we really/RB/really require/VBP/require that/IN/that the/DT/the induction/NN/induction hypothesis/NN/hypothesis is/VBZ/is h-1/NNP/h-1. it/PRP/it will/MD/will not/RB/not make/VB/make any/DT/any difference/NN/difference on/IN/on this/DT/this /NN/( n/NN/n /:/( k/NN/k /:/) >/:/> =/:/= /:/) how/WRB/how ever/NNP/ever. if/IN/if this/DT/this /NN/( n/NN/n /:/( h/NN/h /:/) >/:/> =/:/= /:/) become/NN/become h-1/-NONE-/h-1 then/RB/then this/DT/this /NN/( n/NN/n /:/( k/NN/k /:/) >/:/> =/:/= /:/) will/MD/will become/VB/become k-1/NNP/k-1. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 05/CD/05 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 05/CD/05 /CD/) this/DT/this /NN/( /:/) would/MD/would continue/VB/continue as/IN/as it/PRP/it is/NNP/is. this/DT/this will/MD/will become/VB/become /./. we/PRP/we have/VBP/have to/TO/to prove/VB/prove this/DT/this /NN/( /:/) is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to /,/, every/DT/every where/WRB/where there/EX/there will/MD/will be/VB/be a/DT/a minus/NN/minus one/NNP/one. so/RB/so that/IN/that you/PRP/you will/MD/will still/RB/still get/VB/get the/DT/the same/JJ/same /NN/( /:/) quadratic/JJ/quadratic in/IN/in equality/NNP/equality. the/DT/the value/NN/value of/IN/of the/DT/the c/NN/c would/MD/would still/RB/still turn/VB/turn out/RP/out to/TO/to be/VB/be the/DT/the same/NNP/same. that/IN/that is/VBZ/is for/IN/for n/NN/n /:/( h/NN/h /:/) please/NN/please make/VBP/make that/IN/that small/JJ/small correction/NNP/correction. thus/RB/thus the/DT/the avl/NN/avl tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes has/VBZ/has height/VBN/height atmost/NN/atmost /./. we/PRP/we just/RB/just do/VBP/do the/DT/the same/JJ/same argument/NN/argument as/IN/as before/NNP/before. i/PRP/i take/VBP/take a/DT/a tree/NN/tree of/IN/of height/NN/height h/NN/h and/CC/and n/NN/n nodes/NNP/nodes. we/PRP/we have/VBP/have just/RB/just seen/VBN/seen that/IN/that /,/, this/DT/this is/VBZ/is the/DT/the tree/NN/tree with/IN/with smallest/JJS/smallest possible/JJ/possible number/NN/number of/IN/of nodes/NNP/nodes. so/RB/so n/JJ/n is/VBZ/is going/VBG/going to/TO/to be/VB/be only/RB/only larger/JJR/larger than/IN/than this/DT/this that/IN/that is/VBZ/is /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 44/CD/44 /CD/) let/NN/let us/PRP/us take/VBP/take log/NN/log on/IN/on both/DT/both sides/NNS/sides /,/, we/PRP/we get/VBP/get =/:/= h-1/NNP/h-1. i/PRP/i am/VBP/am just/RB/just using/VBG/using the/DT/the definition/NN/definition of/IN/of log/NNP/log. i/PRP/i am/VBP/am taking/VBG/taking /,/, so/RB/so i/PRP/i will/MD/will get/VB/get h-1/NNP/h-1. this/DT/this implies/VBZ/implies h/NN/h =/:/= +/:/+ 1/CD/1. we/PRP/we are/VBP/are able/JJ/able to/TO/to prove/VB/prove this/DT/this kind/NN/kind of/IN/of a/DT/a sharper/JJR/sharper bound/NNP/bound. this/DT/this equation/NN/equation also/RB/also works/VBZ/works for/IN/for n/NN/n =/:/= 2/CD/2 /,/, so/RB/so that/IN/that was/VBD/was our/PRP$/our base/NN/base case/NNP/case. let/NN/let us/PRP/us continue/NNP/continue. i/PRP/i have/VBP/have shown/VBN/shown you/PRP/you the/DT/the 2/CD/2 ways/NNS/ways of/IN/of solving/VBG/solving this/DT/this same/JJ/same recurrence/NNP/recurrence. one/CD/one was/VBD/was the/DT/the much/JJ/much simpler/NN/simpler way/NN/way /,/, actually/RB/actually both/DT/both are/VBP/are very/RB/very simple/NNP/simple. the/DT/the 2nd/CD/2nd technique/NN/technique is/VBZ/is also/RB/also used/VBN/used quite/RB/quite often/NNP/often. you/PRP/you make/VBP/make a/DT/a guess/NN/guess on/IN/on what/WP/what you/PRP/you think/VBP/think the/DT/the right/NN/right value/NN/value should/MD/should be/NNP/be. then/RB/then essentially/RB/essentially you/PRP/you verify/VBP/verify that/NNP/that. we/PRP/we said/VBD/said that/IN/that suppose/NN/suppose the/DT/the right/NN/right value/NN/value is/VBZ/is some/DT/some and/CC/and then/RB/then you/PRP/you figure/VBP/figure out/RP/out what/WP/what your/PRP$/your c/NN/c should/MD/should be/NNP/be. you/PRP/you can/MD/can get/VB/get something/NN/something better/JJR/better /,/, earlier/JJR/earlier we/PRP/we had/VBD/had that/IN/that is/VBZ/is 1.414/CD/1.414 and/CC/and we/PRP/we could/MD/could update/VB/update to/TO/to 1.63/CD/1.63 by/IN/by using/NN/using this/DT/this kind/NN/kind of/IN/of a/DT/a technique/NNP/technique. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 20/CD/20 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the structure/NN/structure of/IN/of an/DT/an avl/NN/avl tree/NN/tree in/IN/in detail/NNP/detail. once/RB/once again/RB/again i/PRP/i have/VBP/have an/DT/an avl/NN/avl tree/NN/tree on/IN/on n/NN/n nodes/NNP/nodes. let/NN/let me/PRP/me take/VBP/take the/DT/the leaf/NN/leaf of/IN/of this/DT/this tree/NN/tree which/WDT/which is/VBZ/is closest/JJS/closest to/TO/to the/DT/the root/NN/root /,/, which/WDT/which means/VBZ/means whose/WP$/whose level/NN/level number/NN/number is/VBZ/is the/DT/the smallest/JJS/smallest among/IN/among all/DT/all the/DT/the leaves/NNP/leaves. suppose/NN/suppose this/DT/this leaf/NN/leaf is/VBZ/is at/IN/at level/NN/level k/NNP/k. we/PRP/we can/MD/can show/VB/show that/IN/that the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is at/IN/at most/JJS/most 2k-1/CD/2k-1. this/DT/this requires/VBZ/requires the/DT/the proof/NN/proof and/CC/and let/VB/let us/PRP/us do/VBP/do that/NNP/that. i/PRP/i have/VBP/have an/DT/an avl/NN/avl tree/NN/tree which/WDT/which has/VBZ/has n/VBN/n nodes/NNS/nodes in/IN/in it/PRP/it /,/, although/IN/although the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be particularly/RB/particularly important/NNP/important. this/DT/this is/VBZ/is some/DT/some tree/NN/tree /,/, i/PRP/i took/VBD/took that/IN/that leaf/NN/leaf of/IN/of the/DT/the tree/NN/tree which/WDT/which is/VBZ/is closest/JJS/closest to/TO/to the/DT/the root/NNP/root. suppose/NN/suppose the/DT/the red/NN/red dot/NN/dot is/VBZ/is the/DT/the leaf/NN/leaf which/WDT/which is/VBZ/is closest/JJS/closest to/TO/to the/DT/the root/NNP/root. we/PRP/we said/VBD/said that/IN/that it/PRP/it is/VBZ/is at/IN/at level/NN/level k/NNP/k. so/RB/so the/DT/the other/JJ/other leaves/NNS/leaves could/MD/could be/VB/be at/IN/at this/DT/this level/NN/level or/CC/or could/MD/could be/VB/be below/NNP/below. in/IN/in this/DT/this class/NN/class for/IN/for avl/NN/avl tree/NN/tree we/PRP/we work/VBP/work with/IN/with level/NN/level starting/VBG/starting with/IN/with one/NNP/one. it/PRP/it does/VBZ/does not/RB/not make/VB/make a/DT/a big/JJ/big difference/NN/difference /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we start/VB/start with/IN/with level/NN/level one/NNP/one. we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove that/IN/that the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree is/VBZ/is at/IN/at most/JJS/most 2k-1/CD/2k-1. so/RB/so the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree is/VBZ/is that/IN/that is/VBZ/is what/WP/what we/PRP/we will/MD/will prove/NNP/prove. let/VB/let see/NN/see why/NNP/why. i/PRP/i will/MD/will draw/VB/draw this/DT/this picture/NN/picture again/NNP/again. this/DT/this is/VBZ/is the/DT/the leaf/NN/leaf which/WDT/which i/PRP/i have/VBP/have colored/VBN/colored red/VBN/red is/VBZ/is at/IN/at level/NN/level k/NN/k and/CC/and it/PRP/it is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is the/DT/the closest/JJS/closest to/TO/to the/DT/the root/NNP/root. from/IN/from the/DT/the node/NN/node which/WDT/which is/VBZ/is next/JJ/next to/TO/to k/VB/k /,/, there/EX/there will/MD/will be/VB/be some/DT/some sub/NN/sub tree/NN/tree hanging/VBG/hanging out/NNP/out. from/IN/from the/DT/the next/JJ/next node/NN/node also/RB/also there/EX/there will/MD/will be/VB/be some/DT/some sub/NN/sub tree/NN/tree hanging/VBG/hanging out/RP/out and/CC/and so/RB/so on/NNP/on. the/DT/the first/JJ/first node/NN/node is/VBZ/is my/PRP$/my root/NN/root at/IN/at level/NN/level 1/CD/1. let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this node/NN/node which/WDT/which is/VBZ/is at/IN/at level/NN/level k-1/NNP/k-1. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this node/NN/node at/IN/at level/NN/level k-1/-NONE-/k-1 ?/./? it/PRP/it has/VBZ/has one/CD/one child/NN/child and/CC/and this/DT/this child/NN/child has/VBZ/has height/VBN/height one/NNP/one. the/DT/the heights/NNS/heights are/VBP/are in/IN/in blue/NNP/blue. this/DT/this means/VBZ/means this/DT/this sub/NN/sub tree/NN/tree at/IN/at level/NN/level k-1/-NONE-/k-1 can/MD/can have/VB/have height/VBN/height at/IN/at most/JJS/most 2/CD/2. we/PRP/we want/VBP/want to/TO/to get/VB/get as/IN/as larger/JJR/larger height/NN/height as/IN/as possible/JJ/possible for/IN/for this/DT/this tree/NNP/tree. whenever/NN/whenever we/PRP/we say/VBP/say at/IN/at most/JJS/most 2/CD/2 will/MD/will just/RB/just take/VB/take the/DT/the largest/JJS/largest value/NNP/value. this/DT/this can/MD/can have/VB/have height/VBN/height 2/CD/2 /,/, if/IN/if this/DT/this has/VBZ/has height/VBN/height 2/CD/2 then/RB/then what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this node/NN/node ?/./? this/DT/this sub/NN/sub tree/NN/tree will/MD/will have/VB/have height/VBN/height 3/CD/3. if/IN/if this/DT/this sub/NN/sub tree/NN/tree has/VBZ/has height/VBN/height 3/CD/3 /,/, what/WP/what is/VBZ/is the/DT/the largest/JJS/largest height/NN/height that/WDT/that the/DT/the next/JJ/next sub/NN/sub tree/NN/tree can/MD/can have/VB/have ?/./? it/PRP/it can/MD/can have/VB/have 4/CD/4. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this node/NN/node ?/./? it/PRP/it is/VBZ/is 5/CD/5. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 45/CD/45 /CD/) what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum height/NN/height this/DT/this sub/NN/sub tree/NN/tree can/MD/can have/VB/have ?/./? it/PRP/it is/VBZ/is 6/CD/6 and/CC/and this/DT/this node/NN/node would/MD/would be/VB/be 7/CD/7 /,/, 9/CD/9 and/CC/and so/RB/so on/NNP/on. what/WP/what will/MD/will be/VB/be the/DT/the height/NN/height of/IN/of the/DT/the root/NN/root ?/./? in/IN/in general/JJ/general given/VBN/given that/IN/that this/DT/this was/VBD/was k/NN/k /,/, just/RB/just figure/NN/figure it/PRP/it out/RP/out /,/, it/PRP/it should/MD/should be/VB/be 2k-1/CD/2k-1. if/IN/if it/PRP/it was/VBD/was just/RB/just till/RB/till the/DT/the node/NN/node 3/CD/3 then/RB/then it/PRP/it is/VBZ/is basically/RB/basically k/NN/k =/:/= 2/CD/2 height/NN/height =/:/= 3/CD/3. if/IN/if k/NN/k =/:/= 2/CD/2 then/RB/then the/DT/the height/NN/height =/:/= 3/CD/3 /,/, if/IN/if k/NN/k =/:/= 3/CD/3 then/RB/then the/DT/the height/NN/height was/VBD/was 5/CD/5. if/IN/if k/NN/k was/VBD/was 4/CD/4 then/RB/then height/JJ/height was/VBD/was 7/CD/7 and/CC/and so/RB/so on/NNP/on. for/IN/for arbitrary/JJ/arbitrary k/NN/k this/DT/this is/VBZ/is 2k-1/CD/2k-1. it/PRP/it is/VBZ/is a/DT/a very/RB/very simple/JJ/simple argument/NN/argument which/WDT/which means/VBZ/means that/DT/that this/DT/this entire/JJ/entire tree/NN/tree can/MD/can be/VB/be no/RB/no taller/JJR/taller than/IN/than 2k-1/CD/2k-1 /,/, if/IN/if the/DT/the closest/JJS/closest leaf/NN/leaf was/VBD/was at/IN/at level/NN/level k/NNP/k. this/DT/this is/VBZ/is the/DT/the property/NN/property of/IN/of avl/NN/avl tree/NN/tree and/CC/and not/RB/not a/DT/a property/NN/property of/IN/of any/DT/any arbitrary/JJ/arbitrary binary/NN/binary tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 03/CD/03 /CD/) in/IN/in an/DT/an arbitrary/JJ/arbitrary binary/NN/binary tree/NN/tree you/PRP/you might/MD/might have/VB/have leaves/NNS/leaves at/IN/at any/DT/any level/NNP/level. but/CC/but the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree could/MD/could be/VB/be as/RB/as bad/JJ/bad as/IN/as you/PRP/you wanted/NNP/wanted. here/RB/here is/VBZ/is a/DT/a leaf/NN/leaf at/IN/at level/NN/level 1/CD/1 /,/, /:/( hindi/NN/hindi /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 30/CD/30 /CD/) but/CC/but for/IN/for an/DT/an avl/NN/avl tree/NN/tree if/IN/if there/EX/there is/VBZ/is a/DT/a leaf/NN/leaf at/IN/at level/NN/level k/NN/k then/RB/then the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree can/MD/can not/RB/not be/VB/be more/RBR/more than/IN/than 2k/CD/2k. so/RB/so in/IN/in any/DT/any avl/NN/avl tree/NN/tree basically/RB/basically all/DT/all our/PRP$/our leaves/NNS/leaves will/MD/will be/VB/be in/IN/in the/DT/the shaded/JJ/shaded part/NN/part of/IN/of the/DT/the above/JJ/above slide/NNP/slide. this/DT/this band/NN/band whose/WP$/whose width/NN/width is/VBZ/is as/IN/as large/JJ/large as/IN/as this/DT/this roughly/RB/roughly and/CC/and both/DT/both of/IN/of them/PRP/them was/VBD/was k/NN/k so/RB/so i/PRP/i am/VBP/am ignoring/VBG/ignoring that/NNP/that. i/PRP/i will/MD/will just/RB/just come/VB/come back/RB/back to/TO/to this/DT/this in/IN/in a/DT/a minute/NNP/minute. we/PRP/we just/RB/just argued/VBD/argued that/IN/that if/IN/if the/DT/the closest/JJS/closest leaf/NN/leaf is/VBZ/is at/IN/at the/DT/the level/NN/level k/NN/k then/RB/then the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is no/DT/no more/RBR/more than/IN/than 2k-1/CD/2k-1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 35/CD/35 /CD/) that/WDT/that is/VBZ/is the/DT/the largest/JJS/largest possible/JJ/possible height/NN/height the/DT/the tree/NN/tree can/MD/can have/NNP/have. let/VB/let us/PRP/us make/VB/make another/DT/another claim/NNP/claim. if/IN/if the/DT/the closest/JJS/closest leaf/NN/leaf is/VBZ/is at/IN/at level/NN/level k/NN/k then/RB/then all/DT/all nodes/NNS/nodes at/IN/at level/NN/level 1/CD/1 through/IN/through k-2/-NONE-/k-2 have/VBP/have 2/CD/2 children/NNP/children. every/DT/every node/NN/node on/IN/on these/DT/these 1st/CD/1st k-2/-NONE-/k-2 levels/NNS/levels should/MD/should have/VB/have 2/CD/2 children/NNP/children. why/WRB/why have/VBP/have i/PRP/i said/VBD/said k-2/-NONE-/k-2 and/CC/and not/RB/not k-1/-NONE-/k-1 ?/./? let/VB/let us/PRP/us prove/VBP/prove this/DT/this by/IN/by contradiction/NNP/contradiction. what/WP/what do/VBP/do we/PRP/we want/VBP/want to/TO/to do/VB/do contradict/NN/contradict ?/./? let/NN/let us/PRP/us take/VBP/take some/DT/some node/NN/node at/IN/at level/NN/level k-2/-NONE-/k-2 which/WDT/which has/VBZ/has only/RB/only 1/CD/1 child/NNP/child. the/DT/the picture/NN/picture is/VBZ/is given/VBN/given in/IN/in the/DT/the below/NN/below slide/NNP/slide. i/PRP/i have/VBP/have a/DT/a node/NN/node u/NN/u at/IN/at level/NN/level k-2/-NONE-/k-2 /,/, it/PRP/it has/VBZ/has only/RB/only 1/CD/1 child/NN/child which/WDT/which is/VBZ/is at/IN/at level/NN/level k-1/NNP/k-1. i/PRP/i have/VBP/have shown/VBN/shown a/DT/a node/NN/node at/IN/at level/NN/level k-2/-NONE-/k-2 but/CC/but the/DT/the same/JJ/same argument/NN/argument would/MD/would apply/VB/apply to/TO/to any/DT/any node/NN/node at/IN/at 1/CD/1 through/IN/through k-2/NNP/k-2. so/RB/so v/NN/v is/VBZ/is at/IN/at level/NN/level k-1/-NONE-/k-1 /,/, it/PRP/it can/MD/can not/RB/not be/VB/be a/DT/a leaf/NN/leaf because/IN/because our/PRP$/our closest/NN/closest leaf/NN/leaf was/VBD/was at/IN/at level/NN/level k/NNP/k. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 13/CD/13 /CD/) so/RB/so it/PRP/it has/VBZ/has to/TO/to have/VB/have another/DT/another child/NNP/child. i/PRP/i have/VBP/have shown/VBN/shown only/RB/only 1/CD/1 but/CC/but it/PRP/it can/MD/can also/RB/also have/VB/have 2/CD/2 children/NNP/children. but/CC/but this/DT/this u/NN/u has/VBZ/has only/RB/only 1/CD/1 child/NNP/child. so/RB/so sub/VB/sub tree/JJ/tree rooted/VBN/rooted at/IN/at v/NN/v has/VBZ/has height/VBN/height at/IN/at least/JJS/least 2/CD/2 because/IN/because this/DT/this should/MD/should have/VB/have 1/CD/1 child/NN/child /,/, it/PRP/it can/MD/can not/RB/not be/VB/be a/DT/a leaf/NNP/leaf. it/PRP/it has/VBZ/has height/VBN/height at/IN/at least/JJS/least 2/CD/2 while/IN/while the/DT/the right/NN/right sub/NN/sub tree/NN/tree here/RB/here has/VBZ/has height/VBN/height zero/NN/zero because/IN/because there/EX/there is/VBZ/is nothing/NN/nothing there/NNP/there. so/RB/so we/PRP/we have/VBP/have a/DT/a height/NN/height imbalance/NN/imbalance at/IN/at this/DT/this node/NN/node u/NNP/u. the/DT/the height/NN/height balance/NN/balance property/NN/property is/VBZ/is violated/VBN/violated at/IN/at u/NNP/u. every/DT/every node/NN/node on/IN/on these/DT/these levels/NNS/levels 1/CD/1 through/IN/through k-2/-NONE-/k-2 should/MD/should have/VB/have 2/CD/2 children/NNP/children. at/IN/at level/NN/level k-1/-NONE-/k-1 how/WRB/how ever/RB/ever there/RB/there can/MD/can be/VB/be nodes/NNS/nodes with/IN/with only/RB/only 1/CD/1 child/NNP/child. this/DT/this is/VBZ/is level/NN/level k/NN/k /,/, of/IN/of course/NN/course the/DT/the tree/NN/tree extends/NNP/extends. the/DT/the dot/NN/dot on/IN/on the/DT/the left/NN/left side/NN/side is/VBZ/is the/DT/the level/NN/level at/IN/at which/WDT/which the/DT/the closest/JJS/closest leaf/NN/leaf is/VBZ/is situated/NNP/situated. at/IN/at level/NN/level k-1/-NONE-/k-1 /,/, i/PRP/i can/MD/can have/VB/have a/DT/a node/NN/node with/IN/with only/RB/only 1/CD/1 child/NN/child and/CC/and that/IN/that child/NN/child is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is in/IN/in the/DT/the middle/NNP/middle. and/CC/and provided/VBD/provided it/PRP/it would/MD/would not/RB/not have/VB/have any/DT/any more/RBR/more descendants/NNP/descendants. it/PRP/it need/VBP/need not/RB/not have/VB/have descendants/NNS/descendants because/IN/because it/PRP/it can/MD/can be/VB/be a/DT/a leaf/NNP/leaf. this/DT/this is/VBZ/is completely/RB/completely okay/RB/okay but/CC/but if/IN/if it/PRP/it had/VBD/had more/JJR/more descendants/NNS/descendants then/RB/then we/PRP/we would/MD/would again/RB/again have/VB/have a/DT/a problem/NN/problem in/IN/in height/NN/height balance/NN/balance property/NNP/property. this/DT/this is/VBZ/is okay/NN/okay which/WDT/which means/VBZ/means that/DT/that the/DT/the node/NN/node in/IN/in the/DT/the level/NN/level in/IN/in k-1/-NONE-/k-1 can/MD/can have/VB/have only/RB/only 1/CD/1 child/NNP/child. but/CC/but everything/VBG/everything which/WDT/which is/VBZ/is in/IN/in the/DT/the 1st/CD/1st place/NN/place should/MD/should have/VB/have at/IN/at least/JJS/least 2/CD/2 children/NNP/children. we/PRP/we said/VBD/said every/DT/every node/NN/node at/IN/at level/NN/level k-2/-NONE-/k-2 should/MD/should have/VB/have 2/CD/2 children/NNS/children which/WDT/which means/VBZ/means levels/NNS/levels 1/CD/1 through/IN/through k-1/-NONE-/k-1 are/VBP/are full/NNP/full. it/PRP/it means/VBZ/means they/PRP/they have/VBP/have as/IN/as many/JJ/many nodes/NNS/nodes as/IN/as possible/JJ/possible on/IN/on that/DT/that level/NN/level in/IN/in a/DT/a binary/JJ/binary tree/NNP/tree. this/DT/this is/VBZ/is after/IN/after all/DT/all a/DT/a binary/JJ/binary tree/NNP/tree. so/RB/so they/PRP/they are/VBP/are full/NNP/full. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 58/CD/58 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 24/CD/24 /CD/) what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? that/IN/that means/VBZ/means the/DT/the tree/NN/tree has/VBZ/has at/IN/at least/JJS/least nodes/NNP/nodes. we/PRP/we also/RB/also argued/VBD/argued recall/DT/recall that/IN/that the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is at/IN/at most/JJS/most 2k-1/CD/2k-1. if/IN/if the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is 2k-1/CD/2k-1 then/RB/then it/PRP/it has/VBZ/has at/IN/at most/JJS/most nodes/NNP/nodes. this/DT/this implies/VBZ/implies the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree which/WDT/which was/VBD/was n/VBN/n is/VBZ/is between/IN/between and/CC/and /./. since/IN/since we/PRP/we have/VBP/have been/VBN/been using/VBG/using h/NN/h for/IN/for the/DT/the height/NN/height /,/, let/VB/let us/PRP/us substitute/VB/substitute h/JJ/h for/IN/for 2k-1/CD/2k-1. let/NN/let us/PRP/us see/VBP/see how/WRB/how this/DT/this equation/NN/equation would/MD/would look/VB/look like/NNP/like. this/DT/this /NN/( /:/) becomes/VBZ/becomes and/CC/and this/DT/this /NN/( /:/) becomes/VBZ/becomes /./. this/DT/this is/VBZ/is the/DT/the same/JJ/same thing/NN/thing i/PRP/i am/VBP/am showing/VBG/showing you/PRP/you again/NNP/again. what/WP/what is/VBZ/is this/DT/this saying/VBG/saying ?/./? if/IN/if you/PRP/you have/VBP/have an/DT/an avl/NN/avl tree/NN/tree of/IN/of height/NN/height h/NN/h then/RB/then it/PRP/it has/VBZ/has at/IN/at least/JJS/least which/WDT/which we/PRP/we had/VBD/had shown/VBN/shown earlier/NNP/earlier. now/RB/now we/PRP/we are/VBP/are showing/VBG/showing just/RB/just roughly/RB/roughly the/DT/the same/JJ/same thing/NN/thing nodes/NNS/nodes /,/, all/DT/all though/IN/though we/PRP/we have/VBP/have proved/VBN/proved the/DT/the sharper/NN/sharper bound/NNP/bound. i/PRP/i am/VBP/am coming/VBG/coming back/RB/back to/TO/to the/DT/the older/NN/older bound/NNP/bound. the/DT/the point/NN/point is/VBZ/is it/PRP/it has/VBZ/has an/DT/an exponential/JJ/exponential number/NN/number of/IN/of nodes/NNS/nodes /,/, it/PRP/it has/VBZ/has number/NN/number of/IN/of nodes/NNS/nodes which/WDT/which is/VBZ/is some/DT/some constant/JJ/constant an/DT/an exponential/NNP/exponential. because/IN/because that/DT/that gives/VBZ/gives the/DT/the logarithmic/JJ/logarithmic height/NN/height property/NNP/property. this/DT/this is/VBZ/is actually/RB/actually a/DT/a third/JJ/third way/NN/way of/IN/of proving/VBG/proving that/IN/that the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is only/RB/only log/JJ/log n/NNP/n. you/PRP/you can/MD/can also/RB/also use/VB/use this/DT/this as/IN/as a/DT/a proof/NNP/proof. this/DT/this did/VBD/did not/RB/not require/VB/require solving/VBG/solving a/DT/a recurrence/NN/recurrence relation/NNP/relation. the/DT/the other/JJ/other 2/CD/2 methods/NNS/methods we/PRP/we saw/VBD/saw while/IN/while solving/NN/solving the/DT/the recurrence/NN/recurrence relation/NNP/relation. but/CC/but the/DT/the sharpest/JJS/sharpest bound/NN/bound we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/RB/far is/VBZ/is that/IN/that is/VBZ/is /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 31/CD/31 /CD/) let/NN/let us/PRP/us summarize/VBP/summarize what/WP/what we/PRP/we have/VBP/have seen/VBN/seen as/IN/as the/DT/the structure/NN/structure of/IN/of an/DT/an avl/NN/avl tree/NN/tree is/VBZ/is concerned/NNP/concerned. if/IN/if the/DT/the height/NN/height of/IN/of an/DT/an avl/NN/avl tree/NN/tree is/VBZ/is h/JJ/h then/RB/then the/DT/the closest/NN/closest leaf/NN/leaf can/MD/can be/VB/be at/IN/at level/NN/level /./. i/PRP/i have/VBP/have just/RB/just changed/VBN/changed things/NNS/things around/IN/around /,/, when/WRB/when i/PRP/i said/VBD/said when/WRB/when the/DT/the closest/JJS/closest was/VBD/was at/IN/at k/NN/k then/RB/then the/DT/the height/NN/height was/VBD/was 2k-1/CD/2k-1. if/IN/if the/DT/the height/NN/height is/VBZ/is h/JJ/h /,/, suppose/JJ/suppose i/PRP/i give/VBP/give you/PRP/you an/DT/an avl/NN/avl tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes of/IN/of height/NN/height h/NN/h then/RB/then the/DT/the leaf/NN/leaf which/WDT/which is/VBZ/is closest/JJS/closest to/TO/to the/DT/the root/NN/root is/VBZ/is actually/RB/actually pretty/RB/pretty far/RB/far from/IN/from the/DT/the root/NNP/root. it/PRP/it is/VBZ/is atleast/JJ/atleast half/NN/half the/DT/the height/NN/height away/RB/away /,/, it/PRP/it is/VBZ/is at/IN/at least/JJS/least away/NNP/away. it/PRP/it does/VBZ/does not/RB/not require/VB/require a/DT/a proof/NN/proof /,/, i/PRP/i am/VBP/am just/RB/just rewording/VBG/rewording what/WP/what i/PRP/i have/VBP/have said/VBN/said earlier/NNP/earlier. we/PRP/we also/RB/also saw/VBD/saw that/IN/that on/IN/on the/DT/the first/JJ/first levels/NNS/levels the/DT/the avl/NN/avl tree/NN/tree is/VBZ/is a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. this/DT/this is/VBZ/is what/WP/what an/DT/an avl/NN/avl tree/NN/tree looks/NNS/looks like/IN/like essentially/NNP/essentially. for/IN/for the/DT/the first/JJ/first half/DT/half levels/NNS/levels it/PRP/it is/VBZ/is complete/JJ/complete /,/, very/RB/very dense/JJ/dense and/CC/and then/RB/then it/PRP/it starts/VBZ/starts thinning/VBG/thinning out/NNP/out. so/RB/so it/PRP/it turn/VB/turn the/DT/the tree/NN/tree around/IN/around with/IN/with the/DT/the root/NN/root at/IN/at the/DT/the bottom/NN/bottom so/RB/so initially/RB/initially it/PRP/it is/VBZ/is dense/NN/dense and/CC/and then/RB/then it/PRP/it thins/VBZ/thins to/TO/to the/DT/the full/JJ/full height/NNP/height. but/CC/but the/DT/the fact/NN/fact that/IN/that it/PRP/it is/VBZ/is very/RB/very dense/JJ/dense for/IN/for the/DT/the first/JJ/first edge/NN/edge by/IN/by 2/CD/2 levels/NNS/levels means/VBZ/means it/PRP/it has/VBZ/has a/DT/a lot/NN/lot of/IN/of nodes/NNP/nodes. it/PRP/it is/VBZ/is a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree so/RB/so it/PRP/it has/VBZ/has nodes/VBZ/nodes straight/JJ/straight away/NNP/away. that/IN/that means/VBZ/means that/DT/that the/DT/the height/NN/height can/MD/can not/RB/not be/VB/be too/RB/too large/JJ/large /,/, if/IN/if i/PRP/i had/VBD/had n/VBN/n nodes/NNS/nodes the/DT/the height/NN/height can/MD/can not/RB/not be/VB/be more/RBR/more than/IN/than 2log/CD/2log n/NNP/n. once/RB/once again/RB/again i/PRP/i have/VBP/have said/VBN/said that/IN/that if/IN/if number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the avl/NN/avl tree/NN/tree is/VBZ/is at/IN/at least/JJS/least just/RB/just this/DT/this fact/NN/fact /,/, since/IN/since it/PRP/it is/VBZ/is a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree on/IN/on levels/NNS/levels it/PRP/it has/VBZ/has at/IN/at least/JJS/least and/CC/and at/IN/at most/JJS/most nodes/NNS/nodes because/IN/because that/DT/that is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. this/DT/this is/VBZ/is the/DT/the useful/JJ/useful structural/JJ/structural fact/NN/fact to/TO/to keep/VB/keep in/IN/in mind/NN/mind about/IN/about avl/NN/avl trees/NNP/trees. although/IN/although we/PRP/we will/MD/will not/RB/not use/VB/use it/PRP/it for/IN/for any/DT/any of/IN/of our/PRP$/our algorithms/NNP/algorithms. but/CC/but it/PRP/it just/RB/just gives/VBZ/gives you/PRP/you some/DT/some intuition/NN/intuition of/IN/of what/WP/what the/DT/the tree/NN/tree is/VBZ/is and/CC/and why/WRB/why is/VBZ/is that/IN/that this/DT/this tree/NN/tree has/VBZ/has only/RB/only a/DT/a logarithmic/JJ/logarithmic depth/NNP/depth. we/PRP/we have/VBP/have looked/VBN/looked at/IN/at this/DT/this height/NN/height balance/NN/balance property/NN/property /,/, we/PRP/we said/VBD/said if/IN/if this/DT/this height/NN/height balance/NN/balance property/NN/property is/VBZ/is there/EX/there then/RB/then it/PRP/it is/VBZ/is nice/JJ/nice the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is only/RB/only algorithmic/NNP/algorithmic. we/PRP/we want/VBP/want to/TO/to say/VB/say that/IN/that all/DT/all our/PRP$/our operations/NNS/operations are/VBP/are only/RB/only logarithmic/JJ/logarithmic because/IN/because we/PRP/we still/RB/still want/VBP/want to/TO/to say/VB/say that/IN/that you/PRP/you can/MD/can do/VB/do a/DT/a search/NN/search /,/, insert/NN/insert and/CC/and delete/JJ/delete in/IN/in log/NN/log n/NN/n times/NNP/times. search/NN/search is/VBZ/is easy/JJ/easy there/EX/there is/VBZ/is no/DT/no problem/NN/problem with/IN/with search/NN/search because/IN/because after/IN/after all/DT/all it/PRP/it is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. forget/NN/forget the/DT/the height/NN/height balance/NN/balance property/NN/property /,/, it/PRP/it is/VBZ/is just/RB/just a/DT/a binary/JJ/binary search/NN/search tree/NN/tree so/RB/so you/PRP/you just/RB/just do/VBP/do search/NN/search as/IN/as you/PRP/you do/VBP/do in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. how/WRB/how much/JJ/much time/NN/time will/MD/will you/PRP/you take/VB/take ?/./? proportional/JJ/proportional to/TO/to the/DT/the height/NN/height /,/, order/NN/order h/NNP/h. height/NN/height is/VBZ/is log/NN/log n/NN/n so/RB/so you/PRP/you will/MD/will take/VB/take only/RB/only log/JJ/log n/NN/n time/NNP/time. that/IN/that is/VBZ/is the/DT/the best/JJS/best you/PRP/you can/MD/can do/VB/do in/IN/in some/DT/some sense/NNP/sense. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 16/CD/16 /CD/) suppose/NN/suppose you/PRP/you were/VBD/were to/TO/to try/VB/try an/DT/an insert/NNP/insert. when/WRB/when you/PRP/you are/VBP/are going/VBG/going to/TO/to do/VB/do an/DT/an insert/NN/insert what/WP/what can/MD/can go/VB/go wrong/NNP/wrong. recall/NN/recall for/IN/for the/DT/the tree/NN/tree to/TO/to be/VB/be height/VBN/height balanced/VBN/balanced /,/, if/IN/if the/DT/the difference/NN/difference in/IN/in the/DT/the heights/NNS/heights of/IN/of its/PRP$/its children/NNS/children is/VBZ/is at/IN/at most/JJS/most a/DT/a one/NNP/one. when/WRB/when i/PRP/i insert/VBP/insert a/DT/a node/NN/node it/PRP/it can/MD/can change/VB/change the/DT/the height/NN/height of/IN/of some/DT/some nodes/NNS/nodes and/CC/and as/IN/as a/DT/a consequence/NN/consequence the/DT/the height/NN/height balanced/VBD/balanced property/NN/property might/MD/might get/VB/get violated/NNP/violated. the/DT/the first/JJ/first step/NN/step of/IN/of insertion/NN/insertion would/MD/would be/VB/be the/DT/the same/JJ/same as/IN/as we/PRP/we did/VBD/did in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. how/WRB/how did/VBD/did we/PRP/we insert/VB/insert in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree ?/./? first/JJ/first you/PRP/you find/VBP/find the/DT/the position/NNP/position. how/WRB/how do/VBP/do you/PRP/you find/VB/find the/DT/the position/NN/position ?/./? you/PRP/you will/MD/will just/RB/just search/VB/search for/IN/for that/DT/that element/NN/element that/IN/that you/PRP/you are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert /,/, that/IN/that will/MD/will tell/VB/tell you/PRP/you where/WRB/where the/DT/the position/NN/position is/VBZ/is and/CC/and just/RB/just put/VBD/put the/DT/the node/NN/node there/NNP/there. and/CC/and then/RB/then you/PRP/you start/VB/start marching/VBG/marching up/RP/up back/RB/back to/TO/to the/DT/the route/NN/route by/IN/by following/VBG/following the/DT/the parent/NN/parent pointers/NNP/pointers. as/IN/as you/PRP/you march/VBP/march up/RP/up you/PRP/you keep/VB/keep updating/VBG/updating the/DT/the heights/NNS/heights of/IN/of the/DT/the various/JJ/various nodes/NNS/nodes you/PRP/you encountered/VBD/encountered because/IN/because these/DT/these are/VBP/are the/DT/the only/JJ/only nodes/NNS/nodes whose/WP$/whose heights/NNS/heights could/MD/could have/VB/have changed/VBN/changed and/CC/and no/DT/no one/NN/one else/NNP/else. we/PRP/we will/MD/will look/VB/look at/IN/at this/DT/this again/NN/again in/IN/in more/JJR/more detail/NN/detail perhaps/RB/perhaps in/IN/in the/DT/the next/JJ/next class/NNP/class. i/PRP/i am/VBP/am just/RB/just giving/VBG/giving you/PRP/you the/DT/the flavor/NN/flavor of/IN/of what/WP/what needs/VBZ/needs to/TO/to be/VB/be done/VBN/done when/WRB/when we/PRP/we are/VBP/are doing/VBG/doing an/DT/an insertion/NNP/insertion. these/DT/these are/VBP/are the/DT/the nodes/NNS/nodes whose/WP$/whose heights/NNS/heights are/VBP/are going/VBG/going to/TO/to change/NNP/change. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to the/DT/the first/JJ/first place/NN/place where/WRB/where the/DT/the height/NN/height change/NN/change appears/VBZ/appears /,/, where/WRB/where the/DT/the height/NN/height imbalance/NN/imbalance happens/NNP/happens. we/PRP/we are/VBP/are going/VBG/going to/TO/to only/RB/only start/VB/start from/IN/from the/DT/the node/NN/node where/WRB/where we/PRP/we inserted/VBD/inserted and/CC/and move/VB/move up/RP/up the/DT/the tree/NN/tree towards/NNS/towards the/DT/the root/NNP/root. basically/RB/basically we/PRP/we keep/VBP/keep going/VBG/going parent/NN/parent /,/, parent/NN/parent till/NN/till we/PRP/we hit/VBD/hit the/DT/the root/NNP/root. on/IN/on this/DT/this path/NN/path that/IN/that we/PRP/we follow/VBP/follow /,/, we/PRP/we find/VBP/find the/DT/the first/JJ/first node/NN/node which/WDT/which has/VBZ/has the/DT/the height/NN/height imbalance/NN/imbalance property/NNP/property. suppose/NN/suppose that/WDT/that node/NN/node is/VBZ/is called/VBN/called z/NN/z and/CC/and its/PRP$/its grandchild/NN/grandchild is/VBZ/is called/VBN/called x/-NONE-/x. let/VB/let me/PRP/me skip/VB/skip this/DT/this part/NN/part and/CC/and y/NN/y is/VBZ/is the/DT/the node/NN/node in/IN/in the/DT/the middle/NNP/middle. so/RB/so i/PRP/i think/VBP/think it/PRP/it is/VBZ/is best/JJS/best if/IN/if i/PRP/i show/VBP/show you/PRP/you the/DT/the picture/NN/picture and/CC/and that/IN/that will/MD/will give/VB/give you/PRP/you an/DT/an idea/NNP/idea. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 13/CD/13 /CD/) suppose/NN/suppose the/DT/the 1st/CD/1st one/CD/one was/VBD/was my/PRP$/my tree/NN/tree /,/, forget/NN/forget this/DT/this empty/NN/empty node/NN/node which/WDT/which is/VBZ/is the/DT/the last/JJ/last node/NN/node for/IN/for now/NNP/now. this/DT/this was/VBD/was my/PRP$/my tree/NN/tree originally/NNP/originally. if/IN/if this/DT/this was/VBD/was my/PRP$/my original/JJ/original tree/NN/tree /,/, then/RB/then is/VBZ/is that/IN/that an/DT/an avl/NN/avl tree/NN/tree ?/./? height/NN/height balance/NN/balance is/VBZ/is satisfied/VBN/satisfied in/IN/in the/DT/the node/NN/node 50/CD/50 because/IN/because 48/CD/48 is/VBZ/is one/CD/one and/CC/and this/DT/this 62/CD/62 is/VBZ/is one/NNP/one. the/DT/the last/JJ/last node/NN/node is/VBZ/is not/RB/not there/RB/there /,/, forget/NN/forget this/DT/this type/NN/type of/IN/of node/NNP/node. this/DT/this 78/CD/78 is/VBZ/is also/RB/also height/RB/height balanced/VBN/balanced because/IN/because this/DT/this 50/CD/50 is/VBZ/is 2/CD/2 and/CC/and this/DT/this 88/CD/88 is/VBZ/is 1/CD/1. this/DT/this is/VBZ/is also/RB/also height/RB/height balanced/VBN/balanced because/IN/because this/DT/this is/VBZ/is 1/CD/1 and/CC/and this/DT/this is/VBZ/is 0/CD/0. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 46/CD/46 /CD/) this/DT/this is/VBZ/is height/VBN/height balanced/VBN/balanced because/IN/because this/DT/this is/VBZ/is 2/CD/2 and/CC/and this/DT/this is/VBZ/is 3/CD/3 initially/NNP/initially. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 47/CD/47- 49/CD/49 /:/: 52/CD/52 /CD/) but/CC/but now/RB/now suppose/VBP/suppose i/PRP/i went/VBD/went and/CC/and inserted/VBN/inserted a/DT/a node/NN/node 54/CD/54 which/WDT/which came/VBD/came in/IN/in here/NNP/here. the/DT/the 54/CD/54 would/MD/would come/VB/come here/RB/here /,/, i/PRP/i go/VBP/go right/RB/right /,/, left/VBN/left and/CC/and then/RB/then right/RB/right here/RB/here and/CC/and left/VBN/left here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 56/CD/56- 50/CD/50 /:/: 03/CD/03 /CD/) now/RB/now the/DT/the height/NN/height balance/NN/balance property/NN/property is/VBZ/is violated/NNP/violated. what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do ?/./? i/PRP/i am/VBP/am just/RB/just going/VBG/going up/RP/up the/DT/the tree/NN/tree towards/NNS/towards the/DT/the root/NNP/root. is/VBZ/is the/DT/the height/NN/height balance/NN/balance property/NN/property violated/VBD/violated here/RB/here ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 16/CD/16 /CD/) no/DT/no it/PRP/it is/VBZ/is not/NNP/not. this/DT/this is/VBZ/is one/CD/one this/DT/this is/VBZ/is zero/NNP/zero. is/VBZ/is it/PRP/it violated/VBD/violated here/RB/here ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 21/CD/21 /CD/) no/DT/no /,/, 1/CD/1 /,/, 2/CD/2. this/DT/this is/VBZ/is height/VBN/height 2/CD/2 /,/, this/DT/this is/VBZ/is height/VBN/height 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 27/CD/27- 50/CD/50 /:/: 30/CD/30 /CD/) it/PRP/it is/VBZ/is not/RB/not violated/VBN/violated here/NNP/here. is/VBZ/is it/PRP/it violated/VBD/violated here/RB/here ?/./? yes/NNS/yes because/IN/because this/DT/this is/VBZ/is now/RB/now 3/CD/3 and/CC/and this/DT/this is/VBZ/is 1/CD/1 /,/, so/RB/so these/DT/these numbers/NNS/numbers are/VBP/are the/DT/the new/JJ/new heights/NNP/heights. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 31/CD/31- 50/CD/50 /:/: 37/CD/37 /CD/) this/DT/this is/VBZ/is 3/CD/3. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 40/CD/40 /CD/) so/RB/so this/DT/this 78/CD/78 is/VBZ/is the/DT/the first/JJ/first node/NN/node at/IN/at which/WDT/which the/DT/the height/NN/height balance/NN/balance property/NN/property is/VBZ/is violated/NNP/violated. we/PRP/we call/VBP/call this/DT/this node/NN/node 78/CD/78 as/IN/as z/NN/z /,/, its/PRP$/its child/NN/child will/MD/will be/VB/be y/RB/y and/CC/and its/PRP$/its grand/NN/grand child/NN/child will/MD/will be/VB/be x/NNP/x. we/PRP/we wonder/VBP/wonder which/WDT/which child/NN/child of/IN/of this/DT/this node/NN/node will/MD/will be/VB/be y/NNP/y. the/DT/the child/NN/child on/IN/on the/DT/the path/NN/path that/IN/that we/PRP/we have/VBP/have taken/NNP/taken. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 20/CD/20 /CD/) and/CC/and now/RB/now we/PRP/we need/VBP/need to/TO/to do/VB/do something/NN/something to/TO/to this/DT/this tree/NN/tree to/TO/to make/VB/make it/PRP/it height/MD/height balanced/VB/balanced again/NNP/again. this/DT/this is/VBZ/is not/RB/not height/VBN/height balanced/VBN/balanced tree/NNP/tree. all/DT/all the/DT/the things/NNS/things we/PRP/we said/VBD/said about/IN/about log/NN/log n/NN/n will/MD/will go/VB/go out/RP/out of/IN/of the/DT/the window/NN/window if/IN/if you/PRP/you leave/VBP/leave the/DT/the tree/NN/tree like/IN/like this/NNP/this. what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do a/DT/a kind/NN/kind of/IN/of rotation/NN/rotation operation/NN/operation and/CC/and this/DT/this 2nd/CD/2nd picture/NN/picture in/IN/in the/DT/the above/NN/above slide/NN/slide will/MD/will become/VB/become my/PRP$/my new/JJ/new tree/NNP/tree. in/IN/in some/DT/some sense/NN/sense what/WP/what i/PRP/i have/VBP/have done/VBN/done is/VBZ/is /,/, i/PRP/i have/VBP/have moved/VBN/moved 62/CD/62 up/RP/up and/CC/and moved/VBD/moved this/DT/this 78/CD/78 down/IN/down and/CC/and this/DT/this 50/CD/50 was/VBD/was here/NNP/here. it/PRP/it looks/VBZ/looks a/DT/a bit/NN/bit mysterious/NNP/mysterious. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do in/IN/in the/DT/the next/JJ/next class/NNP/class. understand/NN/understand how/WRB/how this/DT/this rotation/NN/rotation operation/NN/operation is/VBZ/is done/NNP/done. so/RB/so as/IN/as you/PRP/you can/MD/can see/VB/see now/RB/now the/DT/the height/NN/height balance/NN/balance property/NN/property is/VBZ/is not/RB/not violated/VBN/violated at/IN/at any/DT/any node/NNP/node. it/PRP/it is/VBZ/is not/RB/not clearly/RB/clearly in/IN/in the/DT/the node/NN/node 50/CD/50 /,/, its/PRP$/its not/RB/not here/RB/here in/IN/in 62/CD/62 and/CC/and also/RB/also in/IN/in 78/CD/78. both/DT/both of/IN/of them/PRP/them /:/( 50/CD/50 and/CC/and 78/CD/78 /CD/) have/VBP/have height/VBN/height 2/CD/2. the/DT/the 62/CD/62 is/VBZ/is at/IN/at height/NN/height 3/CD/3 and/CC/and this/DT/this 17/CD/17 is/VBZ/is at/IN/at height/NN/height 2/CD/2 /,/, so/RB/so it/PRP/it is/VBZ/is not/RB/not violated/NNP/violated. this/DT/this is/VBZ/is still/RB/still a/DT/a binary/JJ/binary search/NN/search tree/NN/tree with/IN/with the/DT/the same/JJ/same keys/NNS/keys as/IN/as before/IN/before /,/, we/PRP/we will/MD/will not/RB/not change/VB/change the/DT/the keys/NNP/keys. there/RB/there are/VBP/are other/JJ/other ways/NNS/ways also/RB/also but/CC/but you/PRP/you want/VBP/want an/DT/an automated/VBN/automated way/NN/way of/IN/of doing/VBG/doing it/PRP/it /,/, you/PRP/you do/VBP/do not/RB/not have/VB/have to/TO/to draw/VB/draw the/DT/the picture/NN/picture and/CC/and then/RB/then figure/VB/figure out/RP/out what/WP/what rotation/NN/rotation have/VBP/have to/TO/to be/VB/be done/NNP/done. you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to do/VB/do this/DT/this program/NNP/program. this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do in/IN/in the/DT/the next/JJ/next class/NNP/class. look/NN/look at/IN/at insertion/NN/insertion and/CC/and look/VB/look at/IN/at how/WRB/how to/TO/to do/VB/do these/DT/these rotations/NNS/rotations so/RB/so that/IN/that the/DT/the height/NN/height balance/NN/balance property/NN/property is/VBZ/is retained/VBN/retained even/RB/even after/IN/after insertion/NNP/insertion. so/RB/so we/PRP/we will/MD/will look/VB/look at/IN/at both/DT/both insertion/NN/insertion and/CC/and deletion/NN/deletion in/IN/in the/DT/the next/JJ/next class/NNP/class. so/RB/so in/IN/in todays/NNS/todays class/NN/class we/PRP/we looked/VBD/looked at/IN/at avl/NN/avl trees/NNP/trees. we/PRP/we saw/VBD/saw how/WRB/how avl/NN/avl trees/NNS/trees are/VBP/are defined/VBN/defined and/CC/and actually/RB/actually we/PRP/we proved/VBD/proved a/DT/a bound/NN/bound of/IN/of as/RB/as the/DT/the height/NN/height of/IN/of an/DT/an avl/NN/avl tree/NNP/tree. we/PRP/we spent/VBD/spent a/DT/a lot/NN/lot of/IN/of time/NN/time figuring/VBG/figuring out/RP/out how/WRB/how to/TO/to solve/VB/solve that/IN/that recurrence/NN/recurrence relation/NNP/relation. we/PRP/we saw/VBD/saw 2/CD/2 ways/NNS/ways solving/VBG/solving that/IN/that recurrence/NN/recurrence relation/NNP/relation. we/PRP/we also/RB/also looked/VBD/looked at/IN/at some/DT/some structural/JJ/structural property/NN/property of/IN/of the/DT/the tree/NN/tree which/WDT/which also/RB/also proved/VBD/proved a/DT/a similar/JJ/similar bound/NN/bound and/CC/and the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end today/NN/today ?/./? s/NNS/s class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 12/CD/12 avl/NN/avl trees/NNS/trees /:/( contd/NNP/contd. /:/) today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to continue/VB/continue our/PRP$/our discussion/NN/discussion on/IN/on avl/NN/avl trees/NNP/trees. in/IN/in particular/JJ/particular we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the insertion/NN/insertion and/CC/and deletion/NN/deletion procedure/NN/procedure in/IN/in an/DT/an avl/NN/avl trees/NNP/trees. so/RB/so we/PRP/we will/MD/will begin/VB/begin with/IN/with insertion/NNP/insertion. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 24/CD/24 /CD/) we/PRP/we had/VBD/had started/VBN/started this/DT/this discussion/NN/discussion on/IN/on insertion/NN/insertion in/IN/in the/DT/the last/JJ/last class/NN/class also/NNP/also. suppose/NN/suppose i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert a/DT/a node/NN/node v/NN/v into/IN/into an/DT/an avl/NN/avl tree/NNP/tree. actually/RB/actually what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to do/VB/do is/VBZ/is insert/VB/insert a/DT/a key/NNP/key. what/WP/what is/VBZ/is the/DT/the process/NN/process of/IN/of insertion/NN/insertion in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree ?/./? first/JJ/first you/PRP/you find/VBP/find where/WRB/where the/DT/the key/JJ/key is/VBZ/is /,/, you/PRP/you go/VBP/go to/TO/to that/DT/that place/NN/place put/VBD/put the/DT/the key/JJ/key there/NNP/there. let/NN/let say/VBP/say the/DT/the node/NN/node in/IN/in which/WDT/which i/PRP/i put/VBD/put the/DT/the key/JJ/key is/VBZ/is v/NNP/v. this/DT/this is/VBZ/is something/NN/something we/PRP/we had/VBD/had started/VBN/started the/DT/the discussion/NN/discussion /,/, if/IN/if as/IN/as a/DT/a consequence/NN/consequence of/IN/of this/DT/this insertion/NN/insertion it/PRP/it does/VBZ/does not/RB/not remain/VB/remain an/DT/an avl/NN/avl tree/NN/tree that/WDT/that is/VBZ/is because/IN/because the/DT/the height/NN/height balance/NN/balance property/NN/property is/VBZ/is violated/NNP/violated. what/WP/what are/VBP/are the/DT/the nodes/NNS/nodes whose/WP$/whose heights/NNS/heights could/MD/could change/VB/change as/IN/as a/DT/a result/NN/result of/IN/of this/DT/this insertion/NN/insertion ?/./? which/WDT/which of/IN/of the/DT/the nodes/NNS/nodes whose/WP$/whose heights/NNS/heights could/MD/could change/VB/change ?/./? recall/NN/recall we/PRP/we defined/VBD/defined the/DT/the height/NN/height of/IN/of the/DT/the node/NN/node as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at that/DT/that node/NNP/node. so/RB/so this/DT/this is/VBZ/is large/JJ/large tree/NN/tree and/CC/and some/DT/some where/WRB/where below/IN/below i/PRP/i insert/VBP/insert a/DT/a particular/JJ/particular node/NNP/node. which/WDT/which are/VBP/are the/DT/the nodes/NNS/nodes whose/WP$/whose heights/NNS/heights could/MD/could change/VB/change ?/./? it/PRP/it could/MD/could only/RB/only be/VB/be the/DT/the ancestors/NNS/ancestors of/IN/of this/DT/this particular/JJ/particular node/NNP/node. not/RB/not because/IN/because it/PRP/it is/VBZ/is written/VBN/written here/RB/here but/CC/but you/PRP/you should/MD/should also/RB/also understand/VB/understand why/WRB/why it/PRP/it is/VBZ/is only/RB/only ancestors/NNP/ancestors. because/IN/because it/PRP/it is/VBZ/is only/RB/only in/IN/in the/DT/the ancestors/NNS/ancestors of/IN/of that/DT/that node/NN/node whose/WP$/whose subtree/NN/subtree has/VBZ/has changed/VBN/changed as/IN/as result/NN/result of/IN/of this/DT/this insertion/NN/insertion process/NNP/process. for/IN/for any/DT/any other/JJ/other node/NN/node its/PRP$/its sub/NN/sub tree/NN/tree has/VBZ/has not/RB/not changed/VBN/changed it/PRP/it remains/VBZ/remains the/DT/the same/JJ/same as/IN/as before/NNP/before. so/RB/so the/DT/the ancestors/NNS/ancestors of/IN/of this/DT/this node/NN/node /,/, their/PRP$/their heights/NNS/heights might/MD/might change/NNP/change. and/CC/and change/NN/change means/VBZ/means it/PRP/it will/MD/will only/RB/only increase/NNP/increase. because/IN/because we/PRP/we have/VBP/have added/VBN/added a/DT/a particular/JJ/particular node/NNP/node. so/RB/so it/PRP/it is/VBZ/is the/DT/the ancestor/NN/ancestor of/IN/of these/DT/these nodes/NNS/nodes whose/WP$/whose height/NN/height might/MD/might increase/VB/increase as/RB/as a/DT/a consequence/NN/consequence of/IN/of this/DT/this insertion/NNP/insertion. so/RB/so if/IN/if the/DT/the insertion/NN/insertion causes/NNS/causes the/DT/the tree/NN/tree to/TO/to become/VB/become imbalance/NN/imbalance or/CC/or unbalanced/VBN/unbalanced /,/, then/RB/then some/DT/some ancestor/NN/ancestor of/IN/of this/DT/this node/NN/node v/NN/v is/VBZ/is the/DT/the culprit/NN/culprit and/CC/and it/PRP/it is/VBZ/is the/DT/the place/NN/place where/WRB/where one/CD/one or/CC/or more/JJR/more ancestors/NNS/ancestors would/MD/would have/VB/have a/DT/a height/NN/height balance/NN/balance problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 47/CD/47 /CD/) height/NN/height problem/NN/problem means/VBZ/means it/PRP/it will/MD/will become/VB/become height/JJ/height imbalanced/NNP/imbalanced. height/NN/height imbalance/NN/imbalance means/VBZ/means one/CD/one left/NN/left sub/NN/sub tree/NN/tree and/CC/and right/RB/right sub/VB/sub tree/NN/tree /,/, the/DT/the difference/NN/difference in/IN/in heights/NNS/heights is/VBZ/is more/RBR/more than/IN/than a/DT/a one/NNP/one. what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to essentially/RB/essentially travel/NN/travel up/RP/up the/DT/the tree/NN/tree from/IN/from this/DT/this node/NN/node v/CC/v. travel/NN/travel up/RP/up the/DT/the tree/NN/tree which/WDT/which means/VBZ/means just/RB/just keep/VB/keep following/VBG/following the/DT/the parent/NN/parent pointer/NN/pointer till/NN/till we/PRP/we identify/VBP/identify the/DT/the node/NN/node z/NN/z which/WDT/which is/VBZ/is unbalanced/NNP/unbalanced. so/RB/so i/PRP/i have/VBP/have said/VBN/said /,/, till/IN/till we/PRP/we find/VBP/find the/DT/the first/JJ/first node/NN/node x/NN/x whose/WP$/whose grandparent/NN/grandparent is/VBZ/is unbalanced/VBN/unbalanced /,/, but/CC/but you/PRP/you can/MD/can also/RB/also think/VB/think of/IN/of it/PRP/it as/IN/as /,/, i/PRP/i find/VBP/find the/DT/the node/NN/node z/NN/z which/WDT/which is/VBZ/is unbalanced/VBN/unbalanced and/CC/and x/NN/x is/VBZ/is its/PRP$/its grandchild/NNP/grandchild. which/WDT/which grandchild/NN/grandchild ?/./? the/DT/the grandchild/NN/grandchild that/IN/that we/PRP/we traversed/VBD/traversed or/CC/or went/NN/went through/IN/through the/DT/the grandchild/NN/grandchild on/IN/on the/DT/the path/NNP/path. because/IN/because the/DT/the node/NN/node can/MD/can have/VB/have many/JJ/many grandchildren/NNP/grandchildren. i/PRP/i will/MD/will show/VB/show you/PRP/you an/DT/an example/NN/example and/CC/and this/DT/this will/MD/will be/VB/be clear/NNP/clear. we/PRP/we will/MD/will call/VB/call y/NN/y as/IN/as the/DT/the parent/NN/parent of/IN/of x/NNP/x. so/RB/so y/JJ/y is/VBZ/is the/DT/the parent/NN/parent of/IN/of x/NN/x and/CC/and then/RB/then the/DT/the child/NN/child of/IN/of z/NNP/z. suppose/NN/suppose this/DT/this was/VBD/was the/DT/the situation/NN/situation we/PRP/we had/NNP/had. this/DT/this was/VBD/was an/DT/an avl/NN/avl tree/NN/tree which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the below/NN/below slide/NN/slide and/CC/and i/PRP/i insert/VBP/insert let/JJ/let say/NN/say 54/CD/54 into/IN/into this/DT/this tree/NNP/tree. so/RB/so 54/CD/54 would/MD/would come/VB/come here/NNP/here. why/WRB/why /,/, because/IN/because it/PRP/it is/VBZ/is larger/JJR/larger than/IN/than 44/CD/44 /,/, smaller/JJR/smaller than/IN/than 78/CD/78 /,/, larger/JJR/larger than/IN/than 50/CD/50 /,/, smaller/JJR/smaller than/IN/than 62/CD/62 and/CC/and so/RB/so it/PRP/it would/MD/would come/VB/come here/RB/here /./( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 54/CD/54 /CD/) /./. now/RB/now if/IN/if there/EX/there is/VBZ/is a/DT/a problem/NN/problem /,/, actually/RB/actually this/DT/this tree/NN/tree is/VBZ/is not/RB/not a/DT/a height/NN/height balanced/VBN/balanced any/DT/any more/NNP/more. this/DT/this is/VBZ/is not/RB/not an/DT/an avl/NN/avl tree/NN/tree any/DT/any more/NNP/more. if/IN/if there/EX/there is/VBZ/is a/DT/a problem/NN/problem we/PRP/we said/VBD/said that/IN/that the/DT/the problem/NN/problem would/MD/would be/VB/be on/IN/on one/CD/one of/IN/of these/DT/these nodes/NNP/nodes. note/NN/note that/IN/that these/DT/these are/VBP/are the/DT/the only/JJ/only nodes/NNS/nodes whose/WP$/whose heights/NNS/heights are/VBP/are changed/NNP/changed. earlier/RBR/earlier the/DT/the node/NN/node 62/CD/62 had/VBD/had a/DT/a height/NN/height of/IN/of zero/NN/zero /,/, now/RB/now it/PRP/it is/VBZ/is one/NNP/one. the/DT/the node/NN/node 50/CD/50 had/VBD/had a/DT/a height/NN/height of/IN/of one/CD/one /,/, now/RB/now it/PRP/it is/VBZ/is 2/CD/2. the/DT/the node/NN/node 78/CD/78 had/VBD/had a/DT/a height/NN/height of/IN/of 2/CD/2 /,/, now/RB/now it/PRP/it is/VBZ/is 3/CD/3. the/DT/the node/NN/node 44/CD/44 had/VBD/had a/DT/a height/NN/height of/IN/of 3/CD/3 /,/, now/RB/now it/PRP/it is/VBZ/is 4/CD/4. which/WDT/which is/VBZ/is the/DT/the first/JJ/first node/NN/node on/IN/on this/DT/this path/NN/path which/WDT/which is/VBZ/is now/RB/now imbalanced/VBN/imbalanced ?/./? is/VBZ/is the/DT/the node/NN/node 50/CD/50 imbalanced/VBN/imbalanced ?/./? no/DT/no /,/, the/DT/the difference/NN/difference of/IN/of height/NN/height is/VBZ/is 1.is/CD/1.is the/DT/the node/NN/node 78/CD/78 imbalanced/VBN/imbalanced ?/./? yes/NNS/yes /,/, the/DT/the difference/NN/difference of/IN/of height/NN/height is/VBZ/is 2/CD/2 /,/, the/DT/the node/NN/node 88/CD/88 is/VBZ/is 1/CD/1 and/CC/and the/DT/the node/NN/node 50/CD/50 is/VBZ/is of/IN/of height/NN/height 3/CD/3. the/DT/the height/NN/height of/IN/of no/DT/no other/JJ/other node/NN/node has/VBZ/has changed/NNP/changed. the/DT/the height/NN/height of/IN/of the/DT/the node/NN/node 17/CD/17 is/VBZ/is not/RB/not changed/NNP/changed. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 56/CD/56 /CD/) did/VBD/did you/PRP/you understand/VBP/understand why/WRB/why the/DT/the heights/NNS/heights of/IN/of these/DT/these nodes/NNS/nodes on/IN/on this/DT/this path/NN/path would/MD/would change/VB/change ?/./? the/DT/the node/NN/node 78/CD/78 will/MD/will be/VB/be z/NN/z and/CC/and x/NN/x would/MD/would be/VB/be its/PRP$/its grandchild/NN/grandchild on/IN/on the/DT/the path/NN/path and/CC/and the/DT/the parent/NN/parent would/MD/would be/VB/be y/NNP/y. lets/NNS/lets call/VBP/call that/IN/that x/NN/x is/VBZ/is a/DT/a node/NN/node /,/, y/NN/y is/VBZ/is a/DT/a node/NN/node and/CC/and z/NN/z is/VBZ/is a/DT/a node/NNP/node. so/RB/so x/NN/x is/VBZ/is the/DT/the node/NN/node here/RB/here in/IN/in 62/CD/62. so/RB/so we/PRP/we travel/VBP/travel up/RP/up from/IN/from 54/CD/54 /,/, we/PRP/we find/VBP/find the/DT/the first/JJ/first place/NN/place where/WRB/where the/DT/the imbalance/NN/imbalance happens/VBZ/happens let/NN/let us/PRP/us call/VBP/call that/IN/that z/NNP/z. and/CC/and x/NN/x is/VBZ/is the/DT/the grandchild/NN/grandchild of/IN/of z/NN/z /,/, grandchild/NN/grandchild means/VBZ/means child/NN/child ?/./? s/NNS/s child/NNP/child. so/RB/so child/VBD/child is/VBZ/is y/JJ/y and/CC/and its/PRP$/its child/NN/child is/VBZ/is x/NNP/x. now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to rebalance/NN/rebalance this/DT/this tree/NN/tree /,/, so/RB/so to/TO/to rebalance/VB/rebalance this/DT/this tree/NN/tree in/IN/in particular/JJ/particular we/PRP/we are/VBP/are going/VBG/going to/TO/to rebalance/NN/rebalance this/DT/this sub/NN/sub tree/NNP/tree. the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at z/NN/z and/CC/and we/PRP/we will/MD/will do/VB/do that/DT/that by/IN/by performing/VBG/performing a/DT/a rotation/NNP/rotation. this/DT/this is/VBZ/is what/WP/what will/MD/will happen/VB/happen after/IN/after the/DT/the rebalance/NN/rebalance /,/, this/DT/this is/VBZ/is what/WP/what the/DT/the tree/NN/tree would/MD/would look/VB/look like/NNP/like. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do ?/./? just/RB/just understand/VBP/understand how/WRB/how we/PRP/we came/VBD/came up/RP/up with/IN/with this/DT/this picture/NNP/picture. as/IN/as you/PRP/you can/MD/can see/VB/see i/PRP/i have/VBP/have only/RB/only changed/VBN/changed this/DT/this sub/NN/sub tree/NN/tree /,/, the/DT/the one/CD/one containing/VBG/containing these/DT/these 6/CD/6 nodes/NNS/nodes 48/CD/48 /,/, 50/CD/50 /,/, 54/CD/54 /,/, 62/CD/62 /,/, 78/CD/78 /,/, 88/CD/88. they/PRP/they are/VBP/are here/RB/here the/DT/the 6/CD/6 nodes/NNS/nodes but/CC/but organized/VBD/organized in/IN/in a/DT/a manner/NN/manner so/IN/so that/IN/that this/DT/this node/NN/node 62/CD/62 is/VBZ/is not/RB/not height/VBN/height imbalanced/VBN/imbalanced any/DT/any more/NNP/more. and/CC/and neither/DT/neither this/DT/this node/NN/node 44/CD/44 is/VBZ/is height/VBN/height imbalanced/-NONE-/imbalanced. we/PRP/we are/VBP/are going/VBG/going to/TO/to understand/VB/understand this/DT/this process/NN/process today/NNP/today. let/NN/let us/PRP/us first/RB/first understand/VBP/understand what/WP/what is/VBZ/is a/DT/a rotation/NNP/rotation. in/IN/in the/DT/the previous/JJ/previous slide/NN/slide i/PRP/i used/VBD/used this/DT/this term/NN/term rotation/NNP/rotation. what/WP/what does/VBZ/does rotation/NN/rotation mean/VB/mean ?/./? so/RB/so rotation/NN/rotation is/VBZ/is the/DT/the way/NN/way of/IN/of locally/RB/locally reorganizing/VBG/reorganizing a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. the/DT/the picture/NN/picture shown/NN/shown in/IN/in the/DT/the below/NN/below slide/NN/slide is/VBZ/is a/DT/a part/NN/part of/IN/of my/PRP$/my binary/JJ/binary search/NN/search tree/NNP/tree. this/DT/this could/MD/could be/VB/be a/DT/a huge/JJ/huge tree/NN/tree but/CC/but i/PRP/i just/RB/just consider/VBP/consider a/DT/a part/NN/part of/IN/of it/NNP/it. so/RB/so u/VB/u is/VBZ/is one/CD/one node/NN/node /,/, v/NN/v is/VBZ/is its/PRP$/its child/NN/child and/CC/and these/DT/these are/VBP/are some/DT/some sub/NN/sub trees/NNP/trees. the/DT/the is/VBZ/is the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at the/DT/the right/NN/right child/NN/child of/IN/of u/NN/u and/CC/and this/DT/this is/VBZ/is the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at the/DT/the right/NN/right child/NN/child of/IN/of v/NNP/v. the/DT/the is/VBZ/is the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at the/DT/the left/NN/left child/NN/child of/IN/of u/NNP/u. this/DT/this could/MD/could be/VB/be a/DT/a null/JJ/null tree/NN/tree /,/, no/DT/no node/NN/node or/CC/or could/MD/could be/VB/be a/DT/a huge/JJ/huge tree/NN/tree /,/, i/PRP/i do/VBP/do not/RB/not care/NNP/care. what/WP/what do/VBP/do i/PRP/i know/VB/know ?/./? because/IN/because it/PRP/it is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NN/tree and/CC/and i/PRP/i know/VBP/know all/DT/all the/DT/the keys/NNS/keys in/IN/in are/VBP/are less/JJR/less than/IN/than the/DT/the key/JJ/key in/IN/in v/NNP/v. all/DT/all the/DT/the keys/NNS/keys in/IN/in are/VBP/are more/RBR/more than/IN/than the/DT/the key/JJ/key in/IN/in v/NNP/v. keys/NNS/keys in/IN/in are/VBP/are less/JJR/less than/IN/than the/DT/the key/JJ/key in/IN/in u/NN/u and/CC/and keys/NNS/keys in/IN/in are/VBP/are more/RBR/more than/IN/than the/DT/the key/JJ/key in/IN/in u/NNP/u. this/DT/this follows/VBZ/follows from/IN/from the/DT/the property/NN/property of/IN/of binary/JJ/binary search/NN/search tree/NNP/tree. what/WP/what is/VBZ/is the/DT/the rotation/NN/rotation step/NN/step going/VBG/going to/TO/to be/VB/be ?/./? first/JJ/first what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is let/VB/let us/PRP/us just/RB/just forget/VBP/forget these/DT/these links/NNS/links and/CC/and let/VB/let just/RB/just look/VB/look at/IN/at this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 02/CD/02 /CD/) /./. and/CC/and now/RB/now this/DT/this is/VBZ/is what/WP/what a/DT/a rotation/NN/rotation does/NNP/does. what/WP/what has/VBZ/has happened/VBN/happened ?/./? v/NN/v has/VBZ/has become/VBN/become the/DT/the parent/NN/parent of/IN/of u/NNP/u. that/IN/that is/VBZ/is what/WP/what a/DT/a rotation/NN/rotation is/VBZ/is and/CC/and will/MD/will put/VB/put the/DT/the links/NNS/links back/NNP/back. what/WP/what happened/VBD/happened was/VBD/was v/NN/v became/VBD/became a/DT/a parent/NN/parent of/IN/of u/NNP/u. the/DT/the binary/JJ/binary search/NN/search tree/NN/tree property/NN/property still/RB/still holds/VBZ/holds by/IN/by the/DT/the way/NNP/way. keys/VBZ/keys of/IN/of are/VBP/are less/JJR/less than/IN/than v/NN/v /,/, keys/NNS/keys of/IN/of are/VBP/are more/RBR/more than/IN/than v/NN/v so/IN/so they/PRP/they come/VBP/come here/RB/here and/CC/and they/PRP/they are/VBP/are less/RBR/less than/IN/than u/NN/u so/IN/so they/PRP/they come/VBP/come to/TO/to the/DT/the left/NN/left of/IN/of u/NNP/u. it/PRP/it is/VBZ/is still/RB/still a/DT/a binary/JJ/binary search/NN/search tree/NN/tree but/CC/but we/PRP/we have/VBP/have done/VBN/done some/DT/some local/JJ/local reorganization/NN/reorganization and/CC/and this/DT/this will/MD/will be/VB/be very/RB/very useful/JJ/useful and/CC/and we/PRP/we will/MD/will see/VB/see why/NNP/why. so/RB/so remains/VBZ/remains to/TO/to the/DT/the left/NN/left of/IN/of v/NNP/v. was/VBD/was to/TO/to the/DT/the right/NN/right of/IN/of u/NN/u /,/, if/IN/if you/PRP/you remember/NNP/remember. was/VBD/was to/TO/to the/DT/the right/NN/right of/IN/of u/NN/u /,/, was/VBD/was to/TO/to the/DT/the left/NN/left of/IN/of v/NN/v /,/, was/VBD/was to/TO/to the/DT/the right/NN/right of/IN/of v/NNP/v. so/RB/so remains/VBZ/remains to/TO/to the/DT/the right/NN/right of/IN/of u/NN/u /,/, remains/VBZ/remains to/TO/to the/DT/the left/NN/left of/IN/of v/NN/v but/CC/but moves/VBZ/moves from/IN/from being/VBG/being to/TO/to the/DT/the right/NN/right of/IN/of v/NN/v to/TO/to the/DT/the left/NN/left of/IN/of u/NNP/u. it/PRP/it is/VBZ/is now/RB/now the/DT/the left/NN/left child/NN/child of/IN/of u/NNP/u. everyone/NN/everyone follows/VBZ/follows what/WP/what a/DT/a rotation/NN/rotation is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 32/CD/32 /CD/) now/RB/now let/VB/let us/PRP/us see/VB/see how/WRB/how we/PRP/we will/MD/will use/VB/use these/DT/these rotations/NNS/rotations to/TO/to do/VB/do our/PRP$/our insertion/NNP/insertion. suppose/NN/suppose the/DT/the insertion/NN/insertion happens/NNP/happens. this/DT/this is/VBZ/is the/DT/the tree/NN/tree which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the below/NN/below slide/NN/slide and/CC/and i/PRP/i have/VBP/have not/RB/not drawn/VBN/drawn the/DT/the links/NNP/links. but/CC/but it/PRP/it should/MD/should be/VB/be clear/JJ/clear what/WP/what the/DT/the links/NNS/links are/NNP/are. who/WP/who can/MD/can tell/VB/tell me/PRP/me what/WP/what the/DT/the links/NNS/links are/VBP/are ?/./? the/DT/the y/NN/y is/VBZ/is the/DT/the child/NN/child of/IN/of z/NN/z /,/, x/NN/x is/VBZ/is the/DT/the child/NN/child of/IN/of y/NNP/y. these/DT/these two/CD/two /,/, are/VBP/are the/DT/the children/NNS/children of/IN/of x/NN/x /,/, is/VBZ/is the/DT/the right/NN/right child/NN/child of/IN/of y/NN/y and/CC/and is/VBZ/is the/DT/the right/NN/right sub/NN/sub tree/NN/tree of/IN/of z/NNP/z. so/RB/so in/IN/in the/DT/the next/JJ/next few/JJ/few slides/NNS/slides you/PRP/you will/MD/will see/VB/see pictures/NNS/pictures with/IN/with out/IN/out these/DT/these links/NNP/links. but/CC/but that/IN/that is/VBZ/is just/RB/just to/TO/to avoid/VB/avoid the/DT/the clutter/NNP/clutter. it/PRP/it should/MD/should be/VB/be completely/RB/completely clear/JJ/clear about/IN/about the/DT/the relationships/NNP/relationships. suppose/NN/suppose i/PRP/i did/VBD/did an/DT/an insertion/NN/insertion in/IN/in /./. and/CC/and these/DT/these are/VBP/are the/DT/the x/NN/x y/NN/y z/NN/z that/WDT/that we/PRP/we encountered/VBD/encountered in/IN/in the/DT/the procedure/NNP/procedure. may/MD/may be/VB/be insertion/NN/insertion happens/NNS/happens some/DT/some where/WRB/where in/IN/in some/DT/some leaf/NN/leaf /,/, we/PRP/we went/VBD/went up/RP/up along/IN/along the/DT/the path/NN/path towards/NNS/towards the/DT/the root/NNP/root. the/DT/the root/NN/root may/MD/may be/VB/be some/DT/some where/WRB/where here/RB/here /VBP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 48/CD/48 /CD/) /./. and/CC/and z/NN/z was/VBD/was the/DT/the first/JJ/first place/NN/place at/IN/at which/WDT/which we/PRP/we had/VBD/had an/DT/an imbalance/NNP/imbalance. and/CC/and y/NN/y was/VBD/was the/DT/the child/NN/child of/IN/of z/NN/z and/CC/and x/NN/x was/VBD/was the/DT/the child/NN/child of/IN/of y/NN/y on/IN/on this/DT/this path/NN/path that/IN/that we/PRP/we took/NNP/took. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 29/CD/29 /CD/) i/PRP/i have/VBP/have taken/VBN/taken one/CD/one picture/NN/picture but/CC/but it/PRP/it could/MD/could also/RB/also be/VB/be different/NNP/different. the/DT/the y/NN/y could/MD/could have/VB/have been/VBN/been the/DT/the right/NN/right child/NN/child of/IN/of z/NN/z and/CC/and x/NN/x could/MD/could have/VB/have been/VBN/been the/DT/the left/VBN/left or/CC/or the/DT/the right/NN/right child/NN/child of/IN/of y/NNP/y. how/WRB/how many/JJ/many different/JJ/different cases/NNS/cases are/VBP/are possible/JJ/possible there/EX/there ?/./? it/PRP/it is/VBZ/is 4/CD/4. the/DT/the y/NN/y could/MD/could be/VB/be the/DT/the left/NN/left of/IN/of the/DT/the right/NN/right child/NN/child of/IN/of z/NN/z and/CC/and x/NN/x could/MD/could be/VB/be the/DT/the left/NN/left of/IN/of the/DT/the right/NN/right child/NN/child of/IN/of y/NNP/y. two/CD/two times/NNS/times two/CD/two /,/, 4/CD/4 different/JJ/different cases/NNP/cases. am/NN/am looking/VBG/looking at/IN/at one/CD/one particular/JJ/particular case/NN/case now/NNP/now. that/IN/that y/NN/y is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of z/NN/z and/CC/and x/NN/x is/VBZ/is also/RB/also a/DT/a left/VBN/left child/NN/child of/IN/of y/NN/y and/CC/and the/DT/the insertion/NN/insertion happened/VBD/happened in/IN/in /./. i/PRP/i am/VBP/am using/VBG/using this/DT/this ht/NN/ht /:/( /:/) to/TO/to denote/VB/denote the/DT/the height/NN/height of/IN/of the/DT/the particular/JJ/particular thing/NNP/thing. the/DT/the height/NN/height of/IN/of let/NN/let us/PRP/us say/VBP/say originally/RB/originally it/PRP/it was/VBD/was h/JJ/h and/CC/and now/RB/now because/IN/because of/IN/of the/DT/the insertion/NN/insertion it/PRP/it became/VBD/became h/NN/h +/:/+ 1/CD/1. it/PRP/it can/MD/can not/RB/not increase/VB/increase by/IN/by more/JJR/more than/IN/than a/DT/a one/CD/one because/IN/because after/IN/after all/DT/all i/PRP/i am/VBP/am just/RB/just adding/VBG/adding one/CD/one node/NNP/node. so/RB/so the/DT/the increase/NN/increase in/IN/in height/NN/height can/MD/can be/VB/be at/IN/at most/JJS/most a/DT/a one/CD/one and/CC/and let/VB/let say/NN/say there/EX/there was/VBD/was an/DT/an increase/NN/increase in/IN/in height/NNP/height. so/RB/so there/RB/there is/VBZ/is an/DT/an increase/NN/increase in/IN/in height/NN/height of/IN/of this/DT/this node/NN/node x/NN/x also/NNP/also. there/EX/there is/VBZ/is an/DT/an increase/NN/increase in/IN/in height/NN/height of/IN/of node/NN/node y/NN/y and/CC/and there/EX/there is/VBZ/is also/RB/also an/DT/an increase/NN/increase in/IN/in height/NN/height of/IN/of node/NN/node z/NNP/z. that/IN/that is/VBZ/is why/WRB/why z/NN/z became/VBD/became an/DT/an imbalanced/NNP/imbalanced. if/IN/if there/EX/there was/VBD/was no/DT/no increase/NN/increase in/IN/in height/NN/height of/IN/of y/NN/y then/RB/then z/VB/z would/MD/would not/RB/not become/VB/become imbalanced/NNP/imbalanced. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) everything/NN/everything is/VBZ/is the/DT/the same/JJ/same as/IN/as before/IN/before that/IN/that means/NNS/means height/VBD/height of/IN/of y/NN/y is/VBZ/is also/RB/also increased/NNP/increased. and/CC/and height/VBD/height of/IN/of y/NN/y has/VBZ/has increased/VBN/increased because/IN/because height/JJ/height of/IN/of x/NN/x has/VBZ/has increased/NNP/increased. height/NN/height of/IN/of x/NN/x has/VBZ/has increased/VBN/increased because/IN/because height/JJ/height of/IN/of has/VBZ/has increased/VBN/increased and/CC/and height/NN/height of/IN/of let/NN/let say/VBP/say increased/VBN/increased from/IN/from h/JJ/h to/TO/to h/VB/h +/:/+ 1/CD/1. what/WP/what can/MD/can we/PRP/we say/VB/say about/IN/about the/DT/the height/NN/height of/IN/of now/RB/now ?/./? what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of ?/./? so/RB/so x/NN/x is/VBZ/is balanced/VBN/balanced even/RB/even after/IN/after the/DT/the insertion/NN/insertion /,/, because/IN/because z/NN/z was/VBD/was the/DT/the first/JJ/first node/NN/node which/WDT/which was/VBD/was imbalanced/NNP/imbalanced. so/RB/so x/NN/x was/VBD/was balanced/VBN/balanced after/IN/after insertion/NNP/insertion. if/IN/if x/NN/x was/VBD/was balanced/VBN/balanced after/IN/after insertion/NN/insertion /:/( hindi/NN/hindi conversation/NN/conversation /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 20-14/CD/20-14 /:/: 52/CD/52 /CD/) /./. so/RB/so height/VBD/height of/IN/of is/VBZ/is one/CD/one of/IN/of these/DT/these 3/CD/3. which/WDT/which one/CD/one ?/./? can/MD/can it/PRP/it be/VB/be h/JJ/h +/NN/+ 2/CD/2 ?/./? if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 then/RB/then originally/RB/originally x/NN/x is/VBZ/is imbalanced/VBN/imbalanced /,/, because/IN/because originally/RB/originally height/VBN/height of/IN/of was/VBD/was h/NNP/h. if/IN/if this/DT/this /NN/( /:/) is/VBZ/is h/JJ/h and/CC/and this/DT/this /NN/( /:/) is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 and/CC/and then/RB/then this/DT/this /NN/( x/NN/x /:/) was/VBD/was imbalanced/VBN/imbalanced even/RB/even to/TO/to begin/VB/begin with/IN/with /,/, but/CC/but that/IN/that is/VBZ/is not/RB/not the/DT/the case/NNP/case. originally/RB/originally it/PRP/it was/VBD/was an/DT/an avl/NN/avl tree/NN/tree so/RB/so the/DT/the height/NN/height of/IN/of can/MD/can not/RB/not be/VB/be h/JJ/h +/NN/+ 2/CD/2. can/MD/can it/PRP/it be/VB/be h/JJ/h +/NN/+ 1/CD/1 ?/./? if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 then/RB/then height/JJ/height of/IN/of x/NN/x does/VBZ/does not/RB/not increase/NNP/increase. because/IN/because this/DT/this /NN/( /:/) is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. then/RB/then that/IN/that means/NNS/means what/WP/what was/VBD/was the/DT/the height/NN/height x/NN/x to/TO/to begin/VB/begin with/IN/with ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 2/CD/2. if/IN/if the/DT/the height/NN/height of/IN/of this/DT/this increased/VBN/increased from/IN/from h/JJ/h to/TO/to h/VB/h +/:/+ 1/CD/1 /,/, even/RB/even then/RB/then its/PRP$/its height/NN/height remains/VBZ/remains h/NN/h +/:/+ 2/CD/2. the/DT/the fact/NN/fact that/IN/that the/DT/the height/NN/height of/IN/of x/NN/x has/VBZ/has increased/VBN/increased implies/NNS/implies that/IN/that this/DT/this /NN/( /:/) can/MD/can not/RB/not be/VB/be h/JJ/h +/NN/+ 1/CD/1. if/IN/if this/DT/this /NN/( /:/) was/VBD/was h/JJ/h +/NN/+ 1/CD/1 then/RB/then the/DT/the height/NN/height of/IN/of x/NN/x did/VBD/did not/RB/not increase/NNP/increase. it/PRP/it remained/VBD/remained what/WP/what it/PRP/it was/VBD/was before/IN/before that/IN/that is/VBZ/is h/JJ/h +/NN/+ 2/CD/2. this/DT/this implies/NNS/implies height/VBD/height of/IN/of can/MD/can not/RB/not be/VB/be h/JJ/h +/NN/+ 1/CD/1. it/PRP/it has/VBZ/has to/TO/to be/VB/be h/NNP/h. so/RB/so height/VBD/height of/IN/of is/VBZ/is h/NNP/h. if/IN/if height/NN/height of/IN/of is/VBZ/is h/JJ/h and/CC/and height/NN/height of/IN/of this/DT/this /NN/( /:/) has/VBZ/has increased/VBN/increased from/IN/from h/JJ/h to/TO/to h/VB/h +/:/+ 1/CD/1 /,/, then/RB/then what/WP/what about/IN/about height/JJ/height of/IN/of x/NN/x ?/./? what/WP/what was/VBD/was the/DT/the original/JJ/original height/NN/height of/IN/of x/NN/x ?/./? the/DT/the original/JJ/original height/NN/height was/VBD/was h/JJ/h +/NN/+ 1/CD/1 and/CC/and now/RB/now it/PRP/it has/VBZ/has become/VBN/become h/NN/h +/:/+ 2/CD/2. the/DT/the height/NN/height of/IN/of x/NN/x has/VBZ/has increased/VBN/increased from/IN/from h/JJ/h +/NN/+ 1/CD/1 to/TO/to h/VB/h +/:/+ 2/CD/2. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 05/CD/05 /CD/) let/NN/let us/PRP/us continue/VBP/continue this/DT/this argument/NNP/argument. so/RB/so this/DT/this is/VBZ/is the/DT/the picture/NN/picture so/RB/so far/RB/far which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the above/NN/above slide/NNP/slide. we/PRP/we have/VBP/have argued/VBN/argued that/IN/that the/DT/the height/NN/height of/IN/of has/VBZ/has increased/VBN/increased from/IN/from h/JJ/h to/TO/to h/VB/h +/:/+ 1/CD/1. then/RB/then height/JJ/height of/IN/of is/VBZ/is h/JJ/h then/RB/then the/DT/the height/NN/height of/IN/of x/NN/x is/VBZ/is increased/VBN/increased from/IN/from h/JJ/h +/NN/+ 1/CD/1 to/TO/to h/VB/h +/:/+ 2/CD/2. what/WP/what about/IN/about the/DT/the height/NN/height of/IN/of ?/./? since/IN/since y/NN/y remains/VBZ/remains balanced/VBN/balanced /,/, the/DT/the new/JJ/new height/NN/height of/IN/of x/NN/x is/VBZ/is h/JJ/h +/NN/+ 2/CD/2. and/CC/and this/DT/this y/NN/y is/VBZ/is height/VBN/height balanced/-NONE-/balanced. the/DT/the height/NN/height of/IN/of is/VBZ/is h/JJ/h +/NN/+ 3/CD/3 or/CC/or h/JJ/h +/NN/+ 2/CD/2 or/CC/or h/JJ/h +/NN/+ 1/CD/1. one/CD/one of/IN/of these/DT/these 3/CD/3 /,/, because/IN/because the/DT/the difference/NN/difference in/IN/in heights/NNS/heights can/MD/can only/RB/only be/VB/be one/NNP/one. so/RB/so its/PRP$/its one/CD/one of/IN/of these/DT/these /./. if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 3/CD/3 /,/, we/PRP/we are/VBP/are repeating/VBG/repeating the/DT/the argument/NN/argument roughly/NNP/roughly. if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 3/CD/3 then/RB/then that/IN/that means/NNS/means y/VBP/y was/VBD/was originally/RB/originally imbalanced/VBN/imbalanced because/IN/because original/JJ/original height/NN/height of/IN/of x/NN/x was/VBD/was h/JJ/h +/NN/+ 1/CD/1. so/RB/so y/JJ/y is/VBZ/is originally/RB/originally imbalanced/NNP/imbalanced. height/NN/height of/IN/of can/MD/can not/RB/not be/VB/be h/JJ/h +/NN/+ 3/CD/3. if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 then/RB/then that/IN/that means/NNS/means that/WDT/that the/DT/the height/NN/height of/IN/of y/NN/y has/VBZ/has not/RB/not increased/NNP/increased. because/IN/because if/IN/if this/DT/this /NN/( /:/) was/VBD/was h/JJ/h +/NN/+ 2/CD/2 then/RB/then the/DT/the height/NN/height of/IN/of y/NN/y that/IN/that means/NNS/means originally/RB/originally was/VBD/was h/JJ/h +/NN/+ 3/CD/3 /CD/( hindi/NN/hindi conversation/NN/conversation /:/) /./. so/RB/so height/VBD/height of/IN/of can/MD/can not/RB/not be/VB/be h/JJ/h +/NN/+ 2/CD/2. height/NN/height of/IN/of has/VBZ/has to/TO/to be/VB/be h/JJ/h +/NN/+ 1/CD/1. so/RB/so height/JJ/height of/IN/of is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. if/IN/if the/DT/the height/NN/height of/IN/of is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 /,/, what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of y/NN/y ?/./? originally/RB/originally it/PRP/it was/VBD/was h/JJ/h +/NN/+ 2/CD/2 because/IN/because both/DT/both of/IN/of these/DT/these guys/NNS/guys were/VBD/were h/JJ/h +/NN/+ 1/CD/1 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 21/CD/21 /CD/) /./. so/RB/so this/DT/this /NN/( y/NN/y /:/) was/VBD/was h/JJ/h +/NN/+ 2/CD/2 originally/NNP/originally. and/CC/and now/RB/now it/PRP/it has/VBZ/has become/VBN/become h/NN/h +/:/+ 3/CD/3 so/RB/so it/PRP/it increased/VBD/increased from/IN/from h/NN/h +/:/+ 2/CD/2 to/TO/to h/VB/h +/:/+ 3/CD/3. what/WP/what about/IN/about height/JJ/height of/IN/of ?/./? note/NN/note that/IN/that z/NN/z is/VBZ/is imbalanced/NNP/imbalanced. the/DT/the new/JJ/new height/NN/height of/IN/of y/NN/y is/VBZ/is h/JJ/h +/NN/+ 3/CD/3. so/RB/so what/WP/what should/MD/should the/DT/the height/NN/height of/IN/of be/VB/be ?/./? or/CC/or it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 5/CD/5 /,/, initially/RB/initially it/PRP/it was/VBD/was balanced/NNP/balanced. since/IN/since z/NN/z was/VBD/was balanced/VBN/balanced /,/, height/RB/height of/IN/of is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 or/CC/or h/JJ/h +/NN/+ 2/CD/2 or/CC/or h/JJ/h +/NN/+ 3/CD/3. since/IN/since this/DT/this was/VBD/was originally/RB/originally h/JJ/h +/NN/+ 2/CD/2 /,/, this/DT/this /NN/( /:/) could/MD/could only/RB/only be/VB/be h/JJ/h +/NN/+ 1/CD/1 /,/, h/JJ/h +/NN/+ 2/CD/2 or/CC/or h/JJ/h +/NN/+ 3/CD/3 and/CC/and since/IN/since it/PRP/it is/VBZ/is now/RB/now unbalanced/VBN/unbalanced it/PRP/it can/MD/can not/RB/not be/VB/be h/JJ/h +/NN/+ 2/CD/2 or/CC/or h/JJ/h +/NN/+ 3/CD/3 /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be h/JJ/h +/NN/+ 1/CD/1. the/DT/the height/NN/height of/IN/of is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of z/NN/z initially/RB/initially ?/./? this/DT/this was/VBD/was originally/RB/originally h/JJ/h +/NN/+ 2/CD/2 /,/, this/DT/this /NN/( /:/) was/VBD/was h/JJ/h +/NN/+ 1/CD/1 /,/, so/RB/so this/DT/this /NN/( y/NN/y /:/) was/VBD/was h/JJ/h +/NN/+ 3/CD/3 originally/RB/originally /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 02/CD/02 /CD/) /./. and/CC/and now/RB/now of/IN/of course/NN/course its/PRP$/its heights/NNS/heights become/VBP/become h/JJ/h +/NN/+ 4/CD/4 /,/, but/CC/but now/RB/now we/PRP/we will/MD/will do/VB/do some/DT/some rotation/NN/rotation and/CC/and stuff/NN/stuff like/IN/like that/NNP/that. so/RB/so that/IN/that will/MD/will reduce/VB/reduce its/PRP$/its size/NN/size /,/, so/RB/so its/PRP$/its original/JJ/original height/NN/height was/VBD/was h/JJ/h +/NN/+ 3/CD/3. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 05/CD/05 /CD/) so/RB/so we/PRP/we will/MD/will keep/VB/keep this/DT/this picture/NNP/picture. this/DT/this is/VBZ/is the/DT/the final/JJ/final thing/NN/thing we/PRP/we argued/NNP/argued. these/DT/these are/VBP/are the/DT/the heights/NNS/heights of/IN/of the/DT/the various/JJ/various things/NNP/things. so/RB/so when/WRB/when i/PRP/i said/VBD/said from/IN/from here/RB/here to/TO/to here/RB/here that/IN/that is/VBZ/is from/IN/from h/JJ/h +/NN/+ 1/CD/1 to/TO/to h/VB/h +/:/+ 2/CD/2 /,/, the/DT/the first/JJ/first thing/NN/thing is/VBZ/is /,/, what/WP/what it/PRP/it was/VBD/was originally/RB/originally and/CC/and what/WP/what it/PRP/it is/VBZ/is now/NNP/now. we/PRP/we just/RB/just need/VBP/need to/TO/to look/VB/look at/IN/at the/DT/the new/JJ/new values/NNP/values. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do a/DT/a rotation/NN/rotation around/IN/around this/DT/this pair/NN/pair /:/( y/NN/y /,/, z/NN/z /:/) /./. what/WP/what does/VBZ/does rotation/NN/rotation do/VB/do ?/./? rotation/NN/rotation is/VBZ/is going/VBG/going to/TO/to rotate/VB/rotate this/DT/this /,/, so/RB/so that/IN/that y/NN/y is/VBZ/is now/RB/now going/VBG/going to/TO/to become/VB/become the/DT/the parent/NN/parent of/IN/of z/NNP/z. what/WP/what do/VBP/do we/PRP/we want/VBP/want to/TO/to do/VB/do ?/./? we/PRP/we want/VBP/want to/TO/to move/VB/move this/DT/this y/NN/y up/RP/up so/RB/so that/IN/that it/PRP/it will/MD/will come/VB/come here/RB/here and/CC/and y/NN/y will/MD/will become/VB/become the/DT/the parent/NN/parent of/IN/of z/NNP/z. this/DT/this is/VBZ/is what/WP/what the/DT/the rotation/NN/rotation is/NNP/is. let/NN/let me/PRP/me just/RB/just draw/VBP/draw it/PRP/it here/NNP/here. so/RB/so y/JJ/y will/MD/will now/RB/now become/VB/become the/DT/the parent/NN/parent of/IN/of z/NN/z which/WDT/which is/VBZ/is shown/VBN/shown in/IN/in the/DT/the below/NN/below slide/NNP/slide. where/WRB/where will/MD/will i/VB/i put/VBN/put these/DT/these two/CD/two ?/./? the/DT/the x/NN/x is/VBZ/is one/CD/one sub/NN/sub tree/NN/tree /,/, this/DT/this remains/VBZ/remains as/IN/as it/PRP/it is/NNP/is. this/DT/this will/MD/will not/RB/not be/VB/be changed/NNP/changed. so/RB/so will/MD/will remain/VB/remain at/IN/at the/DT/the right/NN/right and/CC/and will/MD/will come/VB/come to/TO/to the/DT/the left/NN/left and/CC/and this/DT/this big/JJ/big piece/NN/piece under/IN/under x/NN/x will/MD/will remain/VB/remain as/IN/as it/PRP/it is/NNP/is. that/IN/that is/VBZ/is what/WP/what the/DT/the rotation/NN/rotation was/NNP/was. this/DT/this is/VBZ/is what/WP/what will/MD/will happen/NNP/happen. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 07/CD/07 /CD/) the/DT/the y/NN/y has/VBZ/has become/VBN/become the/DT/the parent/NN/parent of/IN/of z/NN/z /,/, these/DT/these two/CD/two and/CC/and are/VBP/are the/DT/the children/NNS/children of/IN/of z/NNP/z. and/CC/and this/DT/this entire/JJ/entire thing/NN/thing under/IN/under x/NN/x was/VBD/was to/TO/to the/DT/the left/NNP/left. again/RB/again i/PRP/i have/VBP/have not/RB/not shown/VBN/shown the/DT/the links/NNS/links but/CC/but you/PRP/you should/MD/should be/VB/be clear/JJ/clear what/WP/what the/DT/the links/NNS/links are/NNP/are. i/PRP/i have/VBP/have written/VBN/written down/RP/down the/DT/the heights/NNP/heights. the/DT/the height/NN/height of/IN/of was/VBD/was h/JJ/h +/NN/+ 1/CD/1 /,/, was/VBD/was h/JJ/h /,/, was/VBD/was h/JJ/h +/NN/+ 1/CD/1 and/CC/and was/VBD/was h/JJ/h +/NN/+ 1/CD/1. after/IN/after a/DT/a rotation/NN/rotation we/PRP/we already/RB/already saw/VBD/saw that/IN/that the/DT/the binary/JJ/binary search/NN/search tree/NN/tree properties/NNS/properties are/VBP/are maintained/NNP/maintained. so/RB/so this/DT/this is/VBZ/is still/RB/still a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /,/, but/CC/but now/RB/now we/PRP/we want/VBP/want to/TO/to argue/VB/argue that/IN/that the/DT/the height/NN/height balance/NN/balance property/NN/property is/VBZ/is also/RB/also restored/NNP/restored. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 31/CD/31 /CD/) where/WRB/where was/VBD/was the/DT/the imbalance/NN/imbalance happening/VBG/happening ?/./? at/IN/at z/NN/z /,/, as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this has/VBZ/has height/VBN/height h/NN/h +/:/+ 3/CD/3 /,/, has/VBZ/has height/VBN/height h/NN/h +/:/+ 1/CD/1 so/RB/so this/DT/this is/VBZ/is height/VBN/height imbalanced/VBN/imbalanced /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 20/CD/20 /CD/) /./. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of node/NN/node x/NN/x ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 because/IN/because this/DT/this /NN/( /:/) is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 and/CC/and this/DT/this /NN/( /:/) is/VBZ/is h/NNP/h. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of node/NN/node z/NN/z ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 2/CD/2. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of node/NN/node y/NN/y ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 3/CD/3. is/VBZ/is everything/VBG/everything balanced/VBN/balanced now/RB/now ?/./? this/DT/this x/NN/x is/VBZ/is balanced/VBN/balanced because/IN/because there/EX/there is/VBZ/is only/RB/only a/DT/a difference/NN/difference in/IN/in height/NN/height of/IN/of one/NNP/one. this/DT/this z/NN/z is/VBZ/is balanced/VBN/balanced because/IN/because there/EX/there is/VBZ/is no/DT/no difference/NNP/difference. this/DT/this y/NN/y is/VBZ/is balanced/VBN/balanced because/IN/because there/EX/there is/VBZ/is no/DT/no difference/NNP/difference. we/PRP/we have/VBP/have done/VBN/done a/DT/a rotation/NNP/rotation. this/DT/this is/VBZ/is called/VBN/called a/DT/a single/JJ/single rotation/NNP/rotation. you/PRP/you will/MD/will soon/RB/soon see/VB/see why/WRB/why it/PRP/it is/VBZ/is called/VBN/called a/DT/a single/JJ/single rotation/NNP/rotation. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this operation/NN/operation take/VB/take for/IN/for just/RB/just one/CD/one rotation/NN/rotation ?/./? we/PRP/we just/RB/just have/VBP/have to/TO/to do/VB/do a/DT/a constant/JJ/constant number/NN/number of/IN/of operations/NNP/operations. may/MD/may be/VB/be z/NN/z will/MD/will have/VB/have to/TO/to become/VB/become a/DT/a child/NN/child of/IN/of y/NNP/y. so/RB/so there/RB/there will/MD/will be/VB/be 3/CD/3 or/CC/or 4/CD/4 different/JJ/different reference/NN/reference changes/NNS/changes that/WDT/that you/PRP/you have/VBP/have to/TO/to do/NNP/do. may/MD/may be/VB/be 5/CD/5 /,/, may/MD/may be/VB/be 6/CD/6 or/CC/or some/DT/some constant/JJ/constant number/NN/number /,/, independent/JJ/independent of/IN/of the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NNP/tree. now/RB/now one/CD/one interesting/JJ/interesting thing/NN/thing is/VBZ/is happened/NNP/happened. the/DT/the original/JJ/original height/NN/height of/IN/of z/NN/z was/VBD/was h/JJ/h +/NN/+ 3/CD/3. that/WDT/that is/VBZ/is why/WRB/why we/PRP/we had/VBD/had written/VBN/written this/DT/this h/NN/h +/:/+ 3/CD/3 here/NNP/here. after/IN/after this/DT/this rotation/NN/rotation the/DT/the height/NN/height of/IN/of this/DT/this sub/NN/sub tree/NN/tree is/VBZ/is also/RB/also h/JJ/h +/NN/+ 3/CD/3. whatever/NN/whatever was/VBD/was the/DT/the original/JJ/original height/NN/height of/IN/of this/DT/this /NN/( z/NN/z /:/) is/VBZ/is the/DT/the new/JJ/new height/NN/height of/IN/of this/DT/this sub/NN/sub tree/NN/tree /:/( y/NN/y /:/) also/NNP/also. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 01/CD/01 /CD/) so/RB/so the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree remains/VBZ/remains the/DT/the same/JJ/same after/IN/after the/DT/the rotation/NNP/rotation. the/DT/the h/NN/h +/:/+ 3/CD/3 was/VBD/was the/DT/the height/NN/height before/IN/before insertion/NN/insertion /,/, after/IN/after we/PRP/we inserted/VBD/inserted and/CC/and did/VBD/did the/DT/the rotation/NN/rotation the/DT/the new/JJ/new height/NN/height also/RB/also becomes/VBZ/becomes h/NN/h +/:/+ 3/CD/3. why/WRB/why is/VBZ/is this/DT/this important/JJ/important ?/./? because/IN/because now/RB/now i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to go/VB/go up/RP/up further/NNP/further. because/IN/because now/RB/now any/DT/any ancestor/NN/ancestor of/IN/of this/DT/this /,/, its/PRP$/its height/NN/height would/MD/would not/RB/not change/VB/change any/DT/any more/RBR/more because/IN/because whatever/NN/whatever was/VBD/was the/DT/the original/JJ/original height/NN/height of/IN/of this/DT/this h/NN/h +/:/+ 3/CD/3 of/IN/of this/DT/this node/NN/node is/VBZ/is the/DT/the new/JJ/new height/NN/height of/IN/of this/DT/this sub/NN/sub tree/NN/tree also/NNP/also. so/RB/so any/DT/any of/IN/of the/DT/the ancestors/NNS/ancestors of/IN/of z/NN/z /,/, their/PRP$/their heights/NNS/heights would/MD/would become/VB/become the/DT/the same/JJ/same as/IN/as before/NNP/before. and/CC/and so/RB/so there/RB/there will/MD/will be/VB/be no/RB/no imbalance/NN/imbalance on/IN/on them/NNP/them. after/IN/after i/PRP/i did/VBD/did my/PRP$/my insertion/NN/insertion /,/, i/PRP/i started/VBD/started moving/VBG/moving up/RP/up i/PRP/i find/VBP/find the/DT/the first/JJ/first place/NN/place where/WRB/where there/EX/there was/VBD/was an/DT/an imbalance/NNP/imbalance. i/PRP/i did/VBD/did the/DT/the rotation/NN/rotation and/CC/and i/PRP/i am/VBP/am done/NN/done /,/, i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to go/VB/go up/RP/up any/DT/any further/NNP/further. we/PRP/we have/VBP/have actually/RB/actually considered/VBN/considered only/RB/only one/CD/one case/NNP/case. one/CD/one out/RP/out of/IN/of 4/CD/4 different/JJ/different cases/NNP/cases. why/WRB/why one/CD/one case/NN/case ?/./? because/IN/because we/PRP/we said/VBD/said y/NN/y is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of z/NN/z and/CC/and x/NN/x is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of y/NNP/y. now/RB/now there/RB/there is/VBZ/is one/CD/one symmetric/JJ/symmetric case/NN/case /,/, which/WDT/which is/VBZ/is the/DT/the symmetric/JJ/symmetric ?/./? both/DT/both are/VBP/are right/RB/right /,/, right/NNP/right. that/IN/that i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to handle/VB/handle because/IN/because i/PRP/i trust/VBP/trust all/DT/all of/IN/of you/PRP/you can/MD/can believe/VB/believe me/PRP/me that/IN/that it/PRP/it is/VBZ/is the/DT/the symmetric/JJ/symmetric case/NN/case completely/NNP/completely. the/DT/the other/JJ/other case/NN/case is/VBZ/is this/DT/this one/NNP/one. where/WRB/where x/NN/x is/VBZ/is let/VBN/let say/NN/say the/DT/the right/NN/right child/NN/child of/IN/of y/NN/y which/WDT/which is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of z/NNP/z. this/DT/this has/VBZ/has the/DT/the symmetric/JJ/symmetric case/NN/case that/WDT/that is/VBZ/is /,/, y/NN/y is/VBZ/is the/DT/the right/NN/right child/NN/child of/IN/of z/NN/z and/CC/and x/NN/x is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of y/NNP/y. again/RB/again that/IN/that is/VBZ/is completely/RB/completely symmetric/JJ/symmetric and/CC/and will/MD/will not/RB/not handle/VB/handle that/NNP/that. so/RB/so let/VB/let us/PRP/us repeat/VB/repeat the/DT/the argument/NN/argument that/IN/that we/PRP/we had/NNP/had. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 18/CD/18 /CD/) so/RB/so once/RB/once again/RB/again i/PRP/i am/VBP/am assuming/VBG/assuming that/IN/that the/DT/the insertion/NN/insertion happens/VBZ/happens in/IN/in /./. it/PRP/it could/MD/could happen/VB/happen in/IN/in any/DT/any one/CD/one of/IN/of these/DT/these that/WDT/that is/VBZ/is and/CC/and but/CC/but again/RB/again it/PRP/it is/VBZ/is symmetric/NNP/symmetric. let/NN/let us/PRP/us assume/VBP/assume it/PRP/it happens/VBZ/happens in/IN/in /./. so/RB/so this/DT/this height/NN/height went/VBD/went from/IN/from h/NN/h to/TO/to h/VB/h +/:/+ 1/CD/1. what/WP/what about/IN/about the/DT/the height/NN/height of/IN/of ?/./? since/IN/since x/NN/x is/VBZ/is balanced/VBN/balanced /,/, the/DT/the height/NN/height of/IN/of is/VBZ/is either/DT/either h/NN/h +/:/+ 2/CD/2 or/CC/or h/JJ/h +/NN/+ 1/CD/1 or/CC/or h/NNP/h. if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 then/RB/then that/IN/that means/NNS/means x/VBP/x was/VBD/was originally/RB/originally imbalanced/NNP/imbalanced. if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 then/RB/then that/IN/that means/NNS/means the/DT/the height/NN/height of/IN/of x/NN/x is/VBZ/is not/RB/not changed/NNP/changed. so/RB/so it/PRP/it has/VBZ/has to/TO/to be/VB/be h/NNP/h. i/PRP/i am/VBP/am repeating/VBG/repeating the/DT/the argument/NN/argument /,/, it/PRP/it is/VBZ/is the/DT/the same/JJ/same as/IN/as before/NNP/before. if/IN/if is/VBZ/is h/JJ/h and/CC/and the/DT/the new/JJ/new height/NN/height is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. what/WP/what is/VBZ/is the/DT/the new/JJ/new height/NN/height of/IN/of x/NN/x ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 2/CD/2. what/WP/what was/VBD/was the/DT/the original/JJ/original height/NN/height ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. so/RB/so its/PRP$/its height/NN/height moved/VBD/moved from/IN/from h/NN/h +/:/+ 1/CD/1 to/TO/to h/VB/h +/:/+ 2/CD/2. now/RB/now let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the height/NN/height of/IN/of /./. since/IN/since y/NN/y is/VBZ/is still/RB/still balanced/VBN/balanced then/RB/then that/IN/that means/NNS/means the/DT/the height/NN/height of/IN/of is/VBZ/is either/DT/either h/NN/h +/:/+ 3/CD/3 or/CC/or h/JJ/h +/NN/+ 2/CD/2 or/CC/or h/JJ/h +/NN/+ 1/CD/1. if/IN/if it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 3/CD/3 then/RB/then that/IN/that means/NNS/means y/VBP/y was/VBD/was originally/RB/originally not/RB/not balanced/NNP/balanced. if/IN/if it/PRP/it was/VBD/was h/JJ/h +/NN/+ 2/CD/2 then/RB/then the/DT/the height/NN/height of/IN/of y/NN/y has/VBZ/has not/RB/not increased/NNP/increased. it/PRP/it has/VBZ/has to/TO/to be/VB/be h/JJ/h +/NN/+ 1/CD/1 /,/, which/WDT/which means/VBZ/means the/DT/the height/NN/height of/IN/of y/NN/y has/VBZ/has increased/VBN/increased from/IN/from h/JJ/h +/NN/+ 2/CD/2 to/TO/to h/VB/h +/:/+ 3/CD/3 which/WDT/which means/VBZ/means that/DT/that now/RB/now since/IN/since z/NN/z is/VBZ/is imbalanced/VBN/imbalanced /,/, the/DT/the height/NN/height of/IN/of has/VBZ/has to/TO/to be/VB/be h/JJ/h +/NN/+ 1/CD/1. which/WDT/which implies/NNS/implies that/WDT/that the/DT/the original/JJ/original height/NN/height of/IN/of z/NN/z was/VBD/was h/JJ/h +/NN/+ 3/CD/3. exactly/RB/exactly the/DT/the same/JJ/same as/IN/as before/IN/before /,/, we/PRP/we do/VBP/do not/RB/not make/VB/make any/DT/any difference/NNP/difference. but/CC/but now/RB/now the/DT/the rotations/NNS/rotations will/MD/will have/VB/have to/TO/to be/VB/be a/DT/a bit/NN/bit different/NNP/different. in/IN/in x/NN/x /,/, y/NN/y and/CC/and z/NN/z /,/, which/WDT/which of/IN/of these/DT/these 3/CD/3 keys/NNS/keys is/VBZ/is the/DT/the middle/NN/middle key/NN/key ?/./? x/NN/x /,/, y/NN/y or/CC/or z/NN/z which/WDT/which of/IN/of these/DT/these is/VBZ/is middle/NNP/middle. it/PRP/it is/VBZ/is x/NNP/x. z/NN/z is/VBZ/is the/DT/the largest/JJS/largest /,/, y/NN/y is/VBZ/is the/DT/the smallest/NNP/smallest. if/IN/if you/PRP/you recall/VBP/recall in/IN/in the/DT/the previous/JJ/previous rotation/NN/rotation /,/, we/PRP/we had/VBD/had x/NN/x /,/, y/NN/y and/CC/and z/NN/z again/NNP/again. in/IN/in the/DT/the previous/JJ/previous rotation/NN/rotation which/WDT/which was/VBD/was the/DT/the middle/NN/middle key/NN/key ?/./? y/NN/y /,/, because/IN/because they/PRP/they were/VBD/were all/PDT/all in/IN/in a/DT/a line/NNP/line. z/NN/z was/VBD/was the/DT/the top/JJ/top /,/, y/NN/y was/VBD/was its/PRP$/its left/VBN/left child/NN/child so/IN/so it/PRP/it means/VBZ/means y/NN/y is/VBZ/is less/JJR/less than/IN/than z/NNP/z. and/CC/and x/NN/x was/VBD/was its/PRP$/its left/VBN/left child/NN/child so/IN/so x/NN/x is/VBZ/is less/JJR/less than/IN/than y/NN/y is/VBZ/is less/JJR/less than/IN/than z/NNP/z. so/RB/so after/IN/after the/DT/the rotation/NN/rotation we/PRP/we ended/VBD/ended up/RP/up making/VBG/making y/NN/y as/IN/as the/DT/the root/NNP/root. the/DT/the middle/NN/middle key/NN/key we/PRP/we ended/VBD/ended up/RP/up making/VBG/making the/DT/the root/NNP/root. here/RB/here also/RB/also we/PRP/we wanted/VBD/wanted to/TO/to do/VB/do something/NN/something similar/JJ/similar but/CC/but except/IN/except that/DT/that the/DT/the middle/NN/middle key/NN/key is/VBZ/is now/RB/now x/NNP/x. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do a/DT/a 2/CD/2 step/NN/step rotation/NNP/rotation. that/IN/that is/VBZ/is why/WRB/why it/PRP/it is/VBZ/is called/VBN/called a/DT/a double/JJ/double rotation/NNP/rotation. first/RB/first i/PRP/i will/MD/will rotate/VB/rotate x/NN/x y/NNP/y. let/NN/let see/VB/see what/WP/what will/MD/will happen/VB/happen after/IN/after i/PRP/i rotate/VBP/rotate x/NN/x y/NNP/y. this/DT/this is/VBZ/is what/WP/what it/PRP/it will/MD/will look/VB/look like/NNP/like. x/NN/x has/VBZ/has moved/VBN/moved up/RP/up y/JJ/y has/NNS/has moved/VBN/moved down/RP/down /,/, remains/VBZ/remains the/DT/the left/NN/left child/NN/child of/IN/of y/NN/y /,/, remains/VBZ/remains the/DT/the right/NN/right sub/NN/sub tree/NN/tree of/IN/of x/NN/x and/CC/and switches/NNS/switches loyalties/NNS/loyalties from/IN/from x/NN/x to/TO/to y/NNP/y. so/RB/so earlier/JJR/earlier it/PRP/it was/VBD/was the/DT/the left/VBN/left sub/NN/sub tree/NN/tree of/IN/of x/NN/x /,/, now/RB/now it/PRP/it is/VBZ/is the/DT/the right/NN/right of/IN/of sub/NN/sub tree/NN/tree of/IN/of y/NN/y and/CC/and remains/VBZ/remains as/IN/as it/PRP/it is/NNP/is. and/CC/and i/PRP/i have/VBP/have just/RB/just copied/VBN/copied the/DT/the same/JJ/same height/NN/height so/IN/so has/VBZ/has height/VBN/height h/NN/h +/:/+ 1/CD/1 /,/, has/VBZ/has height/VBN/height h/NN/h +/:/+ 1/CD/1 /,/, has/VBZ/has height/VBN/height h/NN/h and/CC/and has/VBZ/has height/VBN/height h/NN/h +/:/+ 1/CD/1. no/DT/no difference/NNP/difference. is/VBZ/is this/DT/this balanced/VBN/balanced ?/./? is/VBZ/is this/DT/this height/NN/height balanced/VBD/balanced ?/./? height/NN/height of/IN/of y/NN/y is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 because/IN/because both/DT/both of/IN/of these/DT/these and/CC/and have/VBP/have height/VBN/height h/NN/h +/:/+ 1/CD/1. height/NN/height of/IN/of x/NN/x will/MD/will be/VB/be h/JJ/h +/NN/+ 3/CD/3 /,/, actually/RB/actually now/RB/now there/EX/there is/VBZ/is an/DT/an imbalance/NN/imbalance at/IN/at x/NN/x itself/NNP/itself. because/IN/because y/NN/y has/VBZ/has h/JJ/h +/NN/+ 2/CD/2 and/CC/and has/VBZ/has h/NNP/h. there/RB/there is/VBZ/is an/DT/an imbalanced/VBN/imbalanced in/IN/in x/NN/x and/CC/and height/NN/height of/IN/of z/NN/z would/MD/would be/VB/be h/JJ/h +/NN/+ 4/CD/4 because/IN/because height/JJ/height of/IN/of x/NN/x is/VBZ/is h/JJ/h +/NN/+ 3/CD/3 that/WDT/that is/VBZ/is one/CD/one more/RBR/more than/IN/than that/NNP/that. so/RB/so this/DT/this rotation/NN/rotation has/VBZ/has not/RB/not done/VBN/done the/DT/the job/NN/job for/IN/for us/PRP/us yet/NNP/yet. we/PRP/we need/VBP/need to/TO/to do/VB/do one/CD/one more/JJR/more rotation/NNP/rotation. what/WP/what are/VBP/are the/DT/the other/JJ/other rotation/NN/rotation i/PRP/i need/VBP/need to/TO/to do/VB/do ?/./? rotation/NN/rotation /:/( x/NN/x /,/, z/NN/z /:/) /./. what/WP/what will/MD/will happen/VB/happen now/RB/now ?/./? x/NN/x will/MD/will go/VB/go up/RP/up and/CC/and z/NN/z will/MD/will come/VB/come down/NNP/down. x/NN/x will/MD/will become/VB/become the/DT/the parent/NN/parent of/IN/of z/NNP/z. was/VBD/was the/DT/the right/JJ/right sub/NN/sub tree/NN/tree of/IN/of z/NN/z /,/, so/RB/so it/PRP/it will/MD/will remain/VB/remain the/DT/the right/NN/right subtree/NNP/subtree. y/NN/y had/VBD/had and/CC/and as/IN/as its/PRP$/its left/VBN/left /,/, so/RB/so they/PRP/they will/MD/will remain/VB/remain as/IN/as they/PRP/they are/NNP/are. and/CC/and which/WDT/which was/VBD/was the/DT/the right/JJ/right sub/NN/sub tree/NN/tree of/IN/of x/NN/x now/RB/now becomes/VBZ/becomes the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of z/NN/z /,/, the/DT/the same/JJ/same thing/NNP/thing. now/RB/now let/VB/let us/PRP/us compute/VB/compute heights/NNP/heights. height/NN/height of/IN/of y/NN/y /,/, h/NN/h +/:/+ 2/CD/2. height/NN/height of/IN/of z/NN/z /,/, h/NN/h +/:/+ 2/CD/2. height/NN/height of/IN/of x/NN/x /,/, h/NN/h +/:/+ 3/CD/3. height/NN/height balance/NN/balance happens/NNS/happens /,/, this/DT/this is/VBZ/is balanced/VBN/balanced in/IN/in y/NN/y /,/, its/PRP$/its balanced/VBN/balanced in/IN/in x/NN/x and/CC/and its/PRP$/its balanced/JJ/balanced in/IN/in z/NNP/z. further/RB/further the/DT/the height/NN/height of/IN/of this/DT/this sub/NN/sub tree/NN/tree is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the original/JJ/original sub/NN/sub tree/NN/tree /,/, h/NN/h +/:/+ 3/CD/3. so/RB/so the/DT/the final/JJ/final tree/NN/tree has/VBZ/has the/DT/the same/JJ/same height/NN/height as/IN/as the/DT/the original/JJ/original tree/NNP/tree. hence/NN/hence we/PRP/we need/VBP/need not/RB/not go/VB/go further/RB/further up/IN/up the/DT/the tree/NNP/tree. did/VBD/did you/PRP/you understand/VBP/understand the/DT/the need/NN/need for/IN/for the/DT/the double/JJ/double rotation/NN/rotation ?/./? we/PRP/we ended/VBD/ended up/RP/up doing/VBG/doing the/DT/the same/JJ/same thing/NN/thing /,/, as/IN/as i/PRP/i said/VBD/said the/DT/the middle/NN/middle key/NN/key ended/VBD/ended up/RP/up being/VBG/being at/IN/at the/DT/the top/NNP/top. because/IN/because we/PRP/we want/VBP/want to/TO/to be/VB/be able/JJ/able to/TO/to split/VB/split the/DT/the thing/NN/thing uniformly/NNP/uniformly. why/WRB/why was/VBD/was the/DT/the height/NN/height imbalance/NN/imbalance happening/VBG/happening ?/./? because/IN/because x/NN/x was/VBD/was the/DT/the middle/NN/middle key/NN/key /,/, it/PRP/it was/VBD/was coming/VBG/coming way/NN/way down/NNP/down. when/WRB/when i/PRP/i kind/VBP/kind of/IN/of split/NN/split uniformly/RB/uniformly the/DT/the heights/NNS/heights reduced/VBD/reduced and/CC/and there/EX/there is/VBZ/is a/DT/a height/NN/height balanced/NNP/balanced. it/PRP/it is/VBZ/is roughly/RB/roughly what/WP/what is/VBZ/is happening/VBG/happening here/NNP/here. how/WRB/how much/JJ/much time/NN/time does/VBZ/does the/DT/the double/JJ/double rotation/NN/rotation take/NN/take ?/./? constant/NN/constant time/NNP/time. so/RB/so just/RB/just as/IN/as a/DT/a quick/NN/quick recap/NN/recap /,/, we/PRP/we have/VBP/have 4/CD/4 different/JJ/different ways/NNS/ways to/TO/to rotate/VB/rotate nodes/NNS/nodes in/IN/in an/DT/an avl/NN/avl tree/NNP/tree. the/DT/the single/JJ/single rotation/NN/rotation was/VBD/was something/NN/something like/IN/like this/DT/this given/VBN/given in/IN/in the/DT/the below/NN/below slide/NNP/slide. there/EX/there were/VBD/were all/DT/all in/IN/in a/DT/a line/NN/line x/NN/x y/NN/y and/CC/and z/NN/z or/CC/or they/PRP/they were/VBD/were like/IN/like this/DT/this x/NN/x y/NN/y and/CC/and z/NN/z /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 33/CD/33 /CD/) /./. and/CC/and after/IN/after rotation/NN/rotation this/DT/this is/VBZ/is the/DT/the picture/NN/picture you/PRP/you get/VBP/get and/CC/and here/RB/here after/IN/after rotation/NN/rotation this/DT/this is/VBZ/is the/DT/the picture/NN/picture you/PRP/you get/NNP/get. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 30/CD/30 /CD/) this/DT/this is/VBZ/is just/RB/just a/DT/a recap/NN/recap /,/, you/PRP/you understand/VBP/understand why/WRB/why we/PRP/we are/VBP/are doing/VBG/doing this/DT/this thing/NN/thing and/CC/and why/WRB/why this/DT/this picture/NN/picture is/VBZ/is a/DT/a height/NN/height balanced/VBN/balanced picture/NN/picture and/CC/and we/PRP/we also/RB/also saw/VBD/saw double/JJ/double rotations/NNP/rotations. so/RB/so either/RB/either like/IN/like this/DT/this /,/, in/IN/in which/WDT/which case/NN/case after/IN/after rotation/NN/rotation you/PRP/you got/VBD/got something/NN/something like/IN/like this/DT/this or/CC/or it/PRP/it could/MD/could be/VB/be like/IN/like this/DT/this left/NN/left and/CC/and right/RB/right and/CC/and in/IN/in which/WDT/which case/NN/case again/RB/again after/IN/after rotation/NN/rotation you/PRP/you got/VBD/got something/NN/something like/IN/like that/NNP/that. this/DT/this is/VBZ/is just/RB/just to/TO/to show/VB/show you/PRP/you the/DT/the picture/NN/picture /,/, you/PRP/you do/VBP/do not/RB/not have/VB/have to/TO/to understand/VB/understand much/JJ/much here/NNP/here. you/PRP/you are/VBP/are hopefully/RB/hopefully understood/VBN/understood why/WRB/why the/DT/the single/JJ/single and/CC/and double/JJ/double rotations/NNS/rotations are/VBP/are done/VBN/done in/IN/in the/DT/the way/NN/way they/PRP/they are/VBP/are done/NNP/done. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 56/CD/56 /CD/) let/NN/let us/PRP/us come/VBP/come to/TO/to deletion/NN/deletion because/IN/because exactly/RB/exactly the/DT/the same/JJ/same principles/NNS/principles are/VBP/are going/VBG/going to/TO/to be/VB/be used/VBN/used for/IN/for deletion/NN/deletion also/NNP/also. it/PRP/it is/VBZ/is a/DT/a binary/JJ/binary tree/NNP/tree. the/DT/the difference/NN/difference between/IN/between the/DT/the height/NN/height /,/, does/VBZ/does it/PRP/it become/VB/become zero/CD/zero ?/./? we/PRP/we saw/VBD/saw that/NNP/that. did/VBD/did we/PRP/we see/VBP/see that/IN/that ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 50/CD/50 /CD/) let/NN/let us/PRP/us see/VBP/see here/NNP/here. here/RB/here the/DT/the difference/NN/difference is/VBZ/is zero/CD/zero but/CC/but in/IN/in this/DT/this node/NN/node z/NN/z the/DT/the difference/NN/difference is/VBZ/is a/DT/a one/CD/one /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 50/CD/50 /CD/) /./. some/DT/some nodes/NNS/nodes there/RB/there would/MD/would be/VB/be a/DT/a difference/NN/difference of/IN/of a/DT/a one/CD/one /,/, some/DT/some other/JJ/other nodes/NNS/nodes there/EX/there would/MD/would be/VB/be a/DT/a difference/NN/difference of/IN/of zero/NNP/zero. let/NN/let us/PRP/us look/VBP/look at/IN/at deletion/NNP/deletion. in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree when/WRB/when i/PRP/i delete/VBP/delete a/DT/a node/NN/node /,/, we/PRP/we will/MD/will have/VB/have 3/CD/3 cases/NNS/cases if/IN/if you/PRP/you remember/NNP/remember. when/WRB/when i/PRP/i am/VBP/am deleting/VBG/deleting the/DT/the node/NN/node which/WDT/which is/VBZ/is a/DT/a leaf/NN/leaf or/CC/or i/PRP/i am/VBP/am deleting/VBG/deleting a/DT/a node/NN/node which/WDT/which is/VBZ/is only/RB/only one/CD/one child/NN/child or/CC/or i/PRP/i am/VBP/am deleting/VBG/deleting a/DT/a node/NN/node which/WDT/which has/VBZ/has 2/CD/2 children/NNP/children. when/WRB/when i/PRP/i delete/VBP/delete a/DT/a node/NN/node which/WDT/which has/VBZ/has 2/CD/2 children/NNS/children /,/, what/WP/what did/VBD/did i/PRP/i do/VBP/do ?/./? i/PRP/i went/VBD/went to/TO/to the/DT/the successor/NN/successor of/IN/of that/DT/that node/NNP/node. i/PRP/i copied/VBD/copied the/DT/the content/NN/content of/IN/of their/PRP$/their successor/NN/successor in/IN/in to/TO/to that/DT/that node/NN/node and/CC/and i/PRP/i deleted/VBD/deleted the/DT/the successor/NNP/successor. the/DT/the actual/JJ/actual node/NN/node i/PRP/i deleted/VBD/deleted was/VBD/was the/DT/the successor/NN/successor node/NN/node and/CC/and the/DT/the successor/NN/successor node/NN/node has/VBZ/has only/RB/only one/CD/one child/NN/child or/CC/or no/DT/no children/NNP/children. why/WRB/why does/VBZ/does the/DT/the successor/NN/successor has/VBZ/has only/RB/only one/CD/one child/NN/child ?/./? because/IN/because it/PRP/it does/VBZ/does not/RB/not have/VB/have the/DT/the left/VBN/left child/NN/child /,/, because/IN/because if/IN/if it/PRP/it had/VBD/had the/DT/the left/VBN/left child/NN/child then/RB/then it/PRP/it would/MD/would not/RB/not be/VB/be the/DT/the successor/NNP/successor. it/PRP/it has/VBZ/has only/RB/only one/CD/one child/NN/child or/CC/or it/PRP/it has/VBZ/has no/DT/no children/NNP/children. so/RB/so the/DT/the actual/JJ/actual node/NN/node that/WDT/that you/PRP/you end/VBP/end up/RP/up deleting/VBG/deleting is/VBZ/is either/DT/either a/DT/a leaf/NN/leaf node/NN/node or/CC/or a/DT/a node/NN/node with/IN/with only/RB/only one/CD/one child/NNP/child. this/DT/this is/VBZ/is the/DT/the actual/JJ/actual node/NN/node that/WDT/that you/PRP/you ended/VBD/ended up/RP/up deleting/NNP/deleting. what/WP/what is/VBZ/is a/DT/a node/NN/node which/WDT/which has/VBZ/has only/RB/only one/CD/one child/NN/child ?/./? in/IN/in an/DT/an avl/NN/avl tree/NN/tree if/IN/if i/PRP/i tell/VBP/tell you/PRP/you /,/, here/RB/here is/VBZ/is a/DT/a node/NN/node which/WDT/which has/VBZ/has only/RB/only one/CD/one child/NNP/child. what/WP/what can/MD/can you/PRP/you say/VB/say about/IN/about that/DT/that node/NN/node ?/./? this/DT/this is/VBZ/is a/DT/a node/NN/node with/IN/with only/RB/only one/CD/one child/NNP/child. can/MD/can it/PRP/it have/VB/have another/DT/another child/NN/child ?/./? can/MD/can this/DT/this node/NN/node have/VBP/have the/DT/the child/NN/child ?/./? no/DT/no /,/, if/IN/if it/PRP/it had/VBD/had a/DT/a child/NN/child like/IN/like this/DT/this /,/, then/RB/then what/WP/what would/MD/would be/VB/be the/DT/the problem/NNP/problem. there/RB/there would/MD/would be/VB/be a/DT/a height/NN/height imbalanced/NNP/imbalanced. so/RB/so it/PRP/it can/MD/can not/RB/not have/VB/have this/DT/this child/NN/child or/CC/or it/PRP/it can/MD/can not/RB/not have/VB/have the/DT/the other/JJ/other child/NN/child /,/, which/WDT/which means/VBZ/means this/DT/this node/NN/node is/VBZ/is a/DT/a leaf/NN/leaf exactly/NNP/exactly. if/IN/if in/IN/in an/DT/an avl/NN/avl tree/NN/tree /,/, a/DT/a node/NN/node has/VBZ/has only/RB/only one/CD/one child/NN/child /,/, then/RB/then that/IN/that child/NN/child is/VBZ/is a/DT/a leaf/NNP/leaf. what/WP/what are/VBP/are we/PRP/we saying/VBG/saying ?/./? when/WRB/when i/PRP/i am/VBP/am deleting/VBG/deleting in/IN/in an/DT/an avl/NN/avl tree/NN/tree i/PRP/i am/VBP/am either/DT/either deleting/VBG/deleting a/DT/a leaf/NN/leaf or/CC/or i/PRP/i am/VBP/am deleting/VBG/deleting the/DT/the parent/NN/parent of/IN/of a/DT/a leaf/NNP/leaf. if/IN/if i/PRP/i am/VBP/am deleting/VBG/deleting a/DT/a node/NN/node with/IN/with only/RB/only one/CD/one child/NN/child /,/, then/RB/then it/PRP/it is/VBZ/is a/DT/a parent/NN/parent of/IN/of a/DT/a leaf/NNP/leaf. which/WDT/which means/VBZ/means that/DT/that i/PRP/i am/VBP/am essentially/RB/essentially deleting/VBG/deleting a/DT/a leaf/NNP/leaf. if/IN/if i/PRP/i am/VBP/am deleting/VBG/deleting the/DT/the parent/NN/parent of/IN/of a/DT/a leaf/NN/leaf them/PRP/them essentially/RB/essentially what/WP/what am/NN/am i/PRP/i doing/VBG/doing ?/./? i/PRP/i can/MD/can just/RB/just think/VB/think of/IN/of it/PRP/it as/IN/as if/IN/if i/PRP/i was/VBD/was deleting/VBG/deleting the/DT/the leaf/NN/leaf and/CC/and copying/VBG/copying the/DT/the content/NN/content of/IN/of the/DT/the leaf/NN/leaf in/IN/in to/TO/to the/DT/the parent/NNP/parent. so/RB/so i/PRP/i can/MD/can always/RB/always think/VB/think of/IN/of it/PRP/it as/IN/as if/IN/if i/PRP/i am/VBP/am deleting/VBG/deleting a/DT/a leaf/NNP/leaf. so/RB/so either/RB/either deleting/VBG/deleting a/DT/a leaf/NN/leaf or/CC/or parent/NN/parent /,/, let/VB/let us/PRP/us just/RB/just keep/VB/keep that/IN/that in/IN/in mind/NNP/mind. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 46/CD/46 /CD/) let/NN/let us/PRP/us say/VBP/say w/NN/w is/VBZ/is the/DT/the node/NN/node that/IN/that we/PRP/we are/VBP/are deleting/NNP/deleting. we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define our/PRP$/our x/NN/x y/NN/y and/CC/and z/NN/z slightly/RB/slightly in/IN/in a/DT/a different/JJ/different way/NNP/way. so/RB/so z/NN/z is/VBZ/is once/RB/once again/RB/again the/DT/the first/JJ/first unbalanced/VBN/unbalanced node/NN/node that/IN/that we/PRP/we encountered/VBD/encountered as/IN/as we/PRP/we go/VBP/go up/RP/up from/IN/from w/NN/w towards/NNS/towards the/DT/the root/NNP/root. when/WRB/when i/PRP/i deleted/VBD/deleted w/NN/w /,/, once/RB/once again/RB/again what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen ?/./? the/DT/the ancestors/NNS/ancestors of/IN/of w/NN/w /,/, their/PRP$/their height/NN/height could/MD/could reduce/NNP/reduce. so/RB/so one/CD/one of/IN/of these/DT/these ancestors/NNS/ancestors will/MD/will be/VB/be unbalanced/VBN/unbalanced /,/, if/IN/if any/DT/any are/VBP/are unbalanced/VBN/unbalanced then/RB/then one/CD/one of/IN/of this/DT/this will/MD/will be/VB/be unbalanced/NNP/unbalanced. let/VB/let us/PRP/us say/VB/say z/NN/z is/VBZ/is the/DT/the first/JJ/first unbalanced/VBN/unbalanced node/NN/node encountered/VBN/encountered while/IN/while we/PRP/we are/VBP/are traveling/VBG/traveling up/RP/up the/DT/the tree/NN/tree from/IN/from w/NNP/w. now/RB/now y/JJ/y is/VBZ/is not/RB/not the/DT/the child/NN/child of/IN/of z/NN/z on/IN/on the/DT/the path/NN/path but/CC/but we/PRP/we are/VBP/are defining/VBG/defining y/NN/y as/IN/as child/NN/child of/IN/of z/NN/z with/IN/with larger/JJR/larger height/NN/height and/CC/and x/NN/x is/VBZ/is the/DT/the child/NN/child of/IN/of y/NN/y with/IN/with larger/JJR/larger height/NNP/height. z/NN/z has/VBZ/has 2/CD/2 children/NNS/children /,/, one/CD/one of/IN/of them/PRP/them has/VBZ/has a/DT/a larger/JJR/larger height/NN/height than/IN/than the/DT/the other/JJ/other one/NNP/one. so/IN/so we/PRP/we take/VBP/take that/IN/that one/NNP/one. once/RB/once again/RB/again we/PRP/we will/MD/will perform/VB/perform rotations/NNS/rotations to/TO/to restore/VB/restore the/DT/the height/NN/height balance/NN/balance of/IN/of the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at z/NNP/z. in/IN/in the/DT/the case/NN/case of/IN/of insertion/NN/insertion what/WP/what was/VBD/was happening/VBG/happening is/VBZ/is that/IN/that once/RB/once you/PRP/you did/VBD/did this/DT/this rotation/NN/rotation /,/, we/PRP/we did/VBD/did not/RB/not have/VB/have to/TO/to worry/VB/worry any/DT/any more/RBR/more on/IN/on the/DT/the ancestor/NN/ancestor nodes/NNP/nodes. everything/NN/everything was/VBD/was taken/VBN/taken care/NN/care of/IN/of /,/, we/PRP/we could/MD/could stop/VB/stop after/IN/after doing/VBG/doing the/DT/the rotation/NNP/rotation. in/IN/in delete/JJ/delete what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see is/VBZ/is that/IN/that we/PRP/we might/MD/might have/VB/have to/TO/to continue/VB/continue up/RP/up and/CC/and we/PRP/we will/MD/will see/VB/see what/WP/what the/DT/the reason/NN/reason for/IN/for that/NNP/that. so/RB/so you/PRP/you might/MD/might have/VB/have to/TO/to continue/VB/continue up/RP/up the/DT/the tree/NN/tree /,/, go/VBP/go to/TO/to the/DT/the ancestor/NN/ancestor of/IN/of z/NN/z and/CC/and once/RB/once again/RB/again find/VBP/find the/DT/the first/JJ/first node/NN/node which/WDT/which is/VBZ/is unbalanced/VBN/unbalanced and/CC/and repeat/NN/repeat the/DT/the rotation/NN/rotation there/RB/there and/CC/and after/IN/after that/DT/that go/NN/go even/RB/even further/RBR/further up/NNP/up. find/NN/find the/DT/the first/JJ/first node/NN/node which/WDT/which is/VBZ/is unbalanced/VBN/unbalanced /,/, repeat/NN/repeat the/DT/the rotation/NN/rotation there/RB/there and/CC/and so/RB/so on/IN/on till/NN/till you/PRP/you reach/VBP/reach the/DT/the root/NNP/root. let/NN/let us/PRP/us understand/VBP/understand what/WP/what is/VBZ/is happening/VBG/happening ?/./? the/DT/the x/NN/x is/VBZ/is the/DT/the child/NN/child of/IN/of y/NN/y with/IN/with larger/JJR/larger height/NNP/height. if/IN/if both/DT/both of/IN/of them/PRP/them have/VBP/have the/DT/the same/JJ/same height/NN/height /,/, then/RB/then we/PRP/we will/MD/will say/VB/say which/WDT/which of/IN/of them/PRP/them should/MD/should be/VB/be x/NNP/x. we/PRP/we will/MD/will say/VB/say that/IN/that in/IN/in a/DT/a minute/NNP/minute. it/PRP/it could/MD/could happen/VB/happen so/RB/so this/DT/this is/VBZ/is a/DT/a valid/JJ/valid question/NNP/question. both/DT/both the/DT/the children/NNS/children of/IN/of y/NN/y might/MD/might have/VB/have the/DT/the same/JJ/same height/NNP/height. then/RB/then which/WDT/which is/VBZ/is x/NN/x ?/./? we/PRP/we will/MD/will see/VB/see which/WDT/which is/VBZ/is x/NNP/x. the/DT/the two/CD/two children/NNS/children of/IN/of z/NN/z can/MD/can not/RB/not have/VB/have the/DT/the same/JJ/same height/NN/height because/IN/because that/DT/that is/VBZ/is the/DT/the imbalanced/VBN/imbalanced node/NNP/node. ignore/IN/ignore these/DT/these h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 for/IN/for a/DT/a minute/NNP/minute. they/PRP/they should/MD/should have/VB/have come/VBN/come at/IN/at the/DT/the end/NNP/end. this/DT/this is/VBZ/is the/DT/the picture/NN/picture which/WDT/which is/VBZ/is given/VBN/given below/IN/below /,/, i/PRP/i have/VBP/have z/NN/z which/WDT/which is/VBZ/is the/DT/the first/JJ/first unbalanced/VBN/unbalanced node/NNP/node. y/NN/y is/VBZ/is the/DT/the child/NN/child of/IN/of z/NN/z which/WDT/which has/VBZ/has larger/JJR/larger height/NN/height and/CC/and x/NN/x is/VBZ/is the/DT/the child/NN/child of/IN/of y/NN/y which/WDT/which has/VBZ/has larger/JJR/larger height/NNP/height. i/PRP/i did/VBD/did a/DT/a deletion/NN/deletion in/IN/in /,/, i/PRP/i started/VBD/started going/VBG/going up/RP/up the/DT/the tree/NN/tree i/PRP/i found/VBD/found a/DT/a z/NNP/z. can/MD/can y/VB/y be/VB/be this/DT/this node/NN/node here/RB/here /./( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 18/CD/18 /CD/) ?/./? /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 49/CD/49 /CD/) if/IN/if y/JJ/y was/VBD/was here/RB/here then/RB/then its/PRP$/its height/NN/height would/MD/would have/VB/have actually/RB/actually decreased/NNP/decreased. what/WP/what is/VBZ/is a/DT/a problem/NN/problem ?/./? let/NN/let see/NNP/see. why/WRB/why did/VBD/did i/PRP/i draw/VBP/draw y/JJ/y to/TO/to be/VB/be this/DT/this ?/./? so/RB/so w/RB/w is/VBZ/is some/DT/some where/WRB/where here/RB/here /,/, the/DT/the node/NN/node i/PRP/i deleted/VBD/deleted is/VBZ/is some/DT/some where/WRB/where here/NNP/here. i/PRP/i started/VBD/started walking/VBG/walking up/RP/up and/CC/and i/PRP/i came/VBD/came to/TO/to z/NNP/z. and/CC/and this/DT/this was/VBD/was a/DT/a first/JJ/first node/NN/node i/PRP/i identified/VBD/identified which/WDT/which had/VBD/had an/DT/an imbalance/NNP/imbalance. and/CC/and then/RB/then what/WP/what did/VBD/did i/PRP/i say/VBP/say ?/./? this/DT/this node/NN/node z/NN/z has/VBZ/has 2/CD/2 children/NNS/children /,/, this/DT/this is/VBZ/is one/CD/one child/NN/child of/IN/of z/NN/z and/CC/and the/DT/the other/JJ/other child/NN/child of/IN/of z/NN/z is/VBZ/is y/NNP/y. let/NN/let us/PRP/us take/VBP/take the/DT/the child/NN/child of/IN/of z/NN/z which/WDT/which has/VBZ/has larger/JJR/larger height/NNP/height. why/WRB/why could/MD/could it/PRP/it not/RB/not have/VB/have been/VBN/been this/DT/this node/NN/node which/WDT/which has/VBZ/has larger/JJR/larger height/NN/height ?/./? this/DT/this is/VBZ/is very/RB/very simple/JJ/simple actually/NNP/actually. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 32/CD/32 /CD/) there/EX/there is/VBZ/is an/DT/an imbalance/NN/imbalance that/IN/that happened/VBN/happened here/NNP/here. earlier/JJR/earlier there/EX/there was/VBD/was no/DT/no imbalance/NNP/imbalance. imbalance/NN/imbalance happen/VB/happen because/IN/because the/DT/the height/NN/height of/IN/of this/DT/this guy/NN/guy decreased/VBD/decreased /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 55/CD/55 /CD/) /./. if/IN/if there/EX/there are/VBP/are 2/CD/2 things/NNS/things which/WDT/which was/VBD/was balanced/VBN/balanced and/CC/and one/CD/one of/IN/of them/PRP/them decreased/VBD/decreased then/RB/then what/WP/what can/MD/can we/PRP/we say/VB/say about/IN/about the/DT/the relationship/NN/relationship between/IN/between these/DT/these two/CD/two things/NNS/things initially/RB/initially ?/./? could/MD/could this/DT/this have/VB/have been/VBN/been smaller/JJR/smaller than/IN/than this/DT/this ?/./? no/DT/no /,/, if/IN/if this/DT/this was/VBD/was smaller/JJR/smaller than/IN/than this/DT/this then/RB/then actually/RB/actually it/PRP/it will/MD/will become/VB/become more/RBR/more balanced/VBN/balanced /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 20/CD/20 /CD/) /./. so/RB/so this/DT/this y/NN/y must/MD/must have/VB/have been/VBN/been larger/JJR/larger than/IN/than this/DT/this for/IN/for imbalance/NN/imbalance to/TO/to have/VB/have happened/NNP/happened. so/RB/so this/DT/this is/VBZ/is y/NN/y therefore/NNP/therefore. the/DT/the height/NN/height of/IN/of has/VBZ/has reduced/VBN/reduced from/IN/from h/NN/h to/TO/to h-1/NNP/h-1. what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about the/DT/the height/NN/height of/IN/of y/NN/y ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. it/PRP/it means/VBZ/means that/IN/that y/NN/y must/MD/must be/VB/be h/JJ/h +/NN/+ 1/CD/1 or/CC/or h/JJ/h +/NN/+ 2/CD/2. it/PRP/it can/MD/can not/RB/not be/VB/be h/JJ/h +/NN/+ 2/CD/2 because/IN/because then/RB/then originally/RB/originally also/RB/also it/PRP/it was/VBD/was unbalanced/NNP/unbalanced. it/PRP/it can/MD/can not/RB/not be/VB/be h-3/-NONE-/h-3 /,/, because/IN/because then/RB/then initially/RB/initially it/PRP/it was/VBD/was unbalanced/NNP/unbalanced. it/PRP/it has/VBZ/has to/TO/to be/VB/be h/JJ/h +/NN/+ 1/CD/1. so/RB/so height/JJ/height of/IN/of y/NN/y is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. of/IN/of those/DT/those 2/CD/2 /,/, x/NN/x is/VBZ/is the/DT/the one/CD/one which/WDT/which has/VBZ/has the/DT/the larger/JJR/larger height/NNP/height. the/DT/the height/NN/height of/IN/of x/NN/x is/VBZ/is h/NNP/h. what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about of/IN/of height/NN/height of/IN/of ?/./? it/PRP/it can/MD/can be/VB/be h/NNP/h. since/IN/since this/DT/this y/NN/y is/VBZ/is balanced/VBN/balanced this/DT/this can/MD/can be/VB/be h/JJ/h or/CC/or h-1/-NONE-/h-1 because/IN/because y/NN/y is/VBZ/is balanced/NNP/balanced. so/RB/so this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have argued/VBN/argued so/RB/so far/NNP/far. this/DT/this goes/VBZ/goes from/IN/from h/NN/h to/TO/to h-1/-NONE-/h-1 /,/, z/NN/z is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 /,/, y/NN/y is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 /,/, x/NN/x is/VBZ/is h/JJ/h /,/, is/VBZ/is h/JJ/h or/CC/or h-1/NNP/h-1. so/RB/so the/DT/the height/NN/height of/IN/of x/NN/x is/VBZ/is h/JJ/h and/CC/and this/DT/this is/VBZ/is also/RB/also balanced/NNP/balanced. so/RB/so the/DT/the heights/NNS/heights of/IN/of these/DT/these two/CD/two /CD/( /,/, /:/) are/VBP/are h-1/-NONE-/h-1 or/CC/or h-2/NNP/h-2. one/CD/one has/VBZ/has to/TO/to have/VB/have a/DT/a height/NN/height of/IN/of h-1/-NONE-/h-1 /,/, both/DT/both can/MD/can not/RB/not have/VB/have a/DT/a height/NN/height of/IN/of h-2/NNP/h-2. that/IN/that is/VBZ/is the/DT/the only/JJ/only thing/NN/thing we/PRP/we can/MD/can say/NNP/say. both/DT/both can/MD/can have/VB/have a/DT/a height/NN/height of/IN/of h-1/NNP/h-1. you/PRP/you can/MD/can not/RB/not say/VB/say that/IN/that only/RB/only one/CD/one can/MD/can have/VB/have a/DT/a height/NN/height of/IN/of h-1/NNP/h-1. that/IN/that is/VBZ/is a/DT/a wrong/JJ/wrong statement/NN/statement /,/, at/IN/at least/JJS/least one/CD/one has/VBZ/has a/DT/a height/NN/height of/IN/of h-1/NNP/h-1. let/NN/let us/PRP/us do/VBP/do a/DT/a rotation/NN/rotation now/RB/now to/TO/to see/VB/see what/WP/what needs/NNS/needs to/TO/to be/VB/be done/NNP/done. so/RB/so these/DT/these are/VBP/are the/DT/the various/JJ/various heights/NNS/heights that/WDT/that have/VBP/have seen/VBN/seen which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the slide/NN/slide below/NNP/below. this/DT/this is/VBZ/is what/WP/what we/PRP/we argued/VBD/argued in/IN/in the/DT/the last/JJ/last 2/CD/2 slides/NNP/slides. what/WP/what kind/NN/kind of/IN/of a/DT/a rotation/NN/rotation should/MD/should i/VB/i do/VBP/do ?/./? i/PRP/i will/MD/will do/VB/do a/DT/a rotation/NN/rotation /:/( y/NN/y /,/, z/NN/z /:/) once/RB/once again/NNP/again. similar/JJ/similar to/TO/to what/WP/what i/PRP/i did/VBD/did in/IN/in my/PRP$/my insertion/NNP/insertion. so/RB/so as/IN/as a/DT/a consequence/NN/consequence you/PRP/you will/MD/will have/VB/have this/DT/this kind/NN/kind of/IN/of a/DT/a picture/NN/picture now/RB/now /./( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 12/CD/12 /CD/) /./. y/NN/y went/VBD/went up/IN/up /,/, z/NN/z went/VBD/went down/IN/down /,/, and/CC/and became/VBD/became the/DT/the 2/CD/2 children/NNS/children of/IN/of z/NN/z /,/, and/CC/and are/VBP/are the/DT/the children/NNS/children of/IN/of x/NNP/x. i/PRP/i have/VBP/have written/VBN/written down/RP/down the/DT/the heights/NNS/heights h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 /,/, h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 /,/, h/NN/h or/CC/or h-1/-NONE-/h-1 and/CC/and h-1/NNP/h-1. because/IN/because went/NN/went from/IN/from h/NN/h to/TO/to h-1/-NONE-/h-1 /,/, so/IN/so this/DT/this is/VBZ/is h-1/NNP/h-1. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of x/NN/x ?/./? this/DT/this is/VBZ/is h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 /,/, this/DT/this is/VBZ/is h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 but/CC/but one/CD/one of/IN/of them/PRP/them is/VBZ/is at/IN/at least/JJS/least h-1/-NONE-/h-1 /,/, so/IN/so x/NN/x is/VBZ/is h/NNP/h. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 59/CD/59 /CD/) what/WP/what is/VBZ/is height/VBN/height of/IN/of z/NN/z ?/./? h/NN/h or/CC/or h/NN/h +/:/+ 1/CD/1. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of y/NN/y ?/./? h/NN/h +/:/+ 1/CD/1 or/CC/or h/JJ/h +/NN/+ 2/CD/2. what/WP/what was/VBD/was the/DT/the original/JJ/original height/NN/height of/IN/of this/DT/this tree/NN/tree ?/./? h/NN/h +/:/+ 2/CD/2. so/RB/so if/IN/if this/DT/this is/VBZ/is h/NN/h +/:/+ 2/CD/2 then/RB/then we/PRP/we are/VBP/are okay/RB/okay /,/, we/PRP/we do/VBP/do not/RB/not have/VB/have to/TO/to continue/NNP/continue. but/CC/but if/IN/if this/DT/this is/VBZ/is h/NN/h +/:/+ 1/CD/1 then/RB/then we/PRP/we may/MD/may have/VB/have to/TO/to continue/VB/continue because/IN/because this/DT/this now/RB/now becomes/VBZ/becomes the/DT/the bigger/JJR/bigger tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 21/CD/21 /CD/) /CD/( hindi/NN/hindi conversation/NN/conversation /:/) /./. we/PRP/we will/MD/will have/VB/have to/TO/to continue/VB/continue the/DT/the argument/NN/argument as/IN/as we/PRP/we go/VBP/go up/NNP/up. the/DT/the way/NN/way we/PRP/we said/VBD/said /-NONE-/( hindi/NN/hindi conversation/NN/conversation /:/) height/NN/height has/VBZ/has reduced/VBN/reduced from/IN/from h/NN/h to/TO/to h/VB/h -1/-NONE-/-1 /,/, now/RB/now we/PRP/we might/MD/might have/VB/have to/TO/to say/VB/say that/IN/that this/DT/this bigger/JJR/bigger thing/NN/thing height/NN/height has/VBZ/has reduced/VBN/reduced from/IN/from h/NN/h +/:/+ 2/CD/2 to/TO/to h/VB/h +/:/+ 1/CD/1 and/CC/and we/PRP/we will/MD/will have/VB/have to/TO/to repeat/VB/repeat the/DT/the argument/NN/argument at/IN/at the/DT/the next/JJ/next higher/NN/higher level/NN/level and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 26/CD/26 /CD/) after/IN/after rotation/NN/rotation the/DT/the height/NN/height of/IN/of sub/NN/sub tree/NN/tree might/MD/might be/VB/be one/CD/one less/JJR/less than/IN/than the/DT/the original/JJ/original height/NNP/height. in/IN/in that/DT/that case/NN/case we/PRP/we have/VBP/have to/TO/to continue/VB/continue up/RP/up the/DT/the tree/NNP/tree. it/PRP/it is/VBZ/is might/MD/might be/VB/be /,/, you/PRP/you understand/VBP/understand ?/./? because/IN/because it/PRP/it could/MD/could not/RB/not have/VB/have reduced/VBN/reduced /,/, in/IN/in which/WDT/which case/NN/case we/PRP/we can/MD/can just/RB/just stop/NNP/stop. so/RB/so this/DT/this is/VBZ/is single/JJ/single rotation/NN/rotation /,/, in/IN/in the/DT/the case/NN/case when/WRB/when this/DT/this was/VBD/was the/DT/the picture/NN/picture which/WDT/which is/VBZ/is given/VBN/given above/-NONE-/above. y/RB/y was/VBD/was the/DT/the left/VBN/left child/NN/child of/IN/of z/NN/z and/CC/and x/NN/x was/VBD/was the/DT/the left/VBN/left child/NN/child of/IN/of y/NNP/y. but/CC/but we/PRP/we could/MD/could have/VB/have this/DT/this kind/NN/kind of/IN/of a/DT/a picture/NN/picture which/WDT/which is/VBZ/is given/VBN/given above/IN/above /,/, that/IN/that x/NN/x is/VBZ/is the/DT/the right/NN/right child/NN/child of/IN/of y/NNP/y. so/RB/so the/DT/the first/JJ/first part/NN/part of/IN/of the/DT/the argument/NN/argument is/VBZ/is the/DT/the same/NNP/same. this/DT/this has/VBZ/has gone/VBN/gone from/IN/from h/NN/h to/TO/to h-1/-NONE-/h-1 /,/, so/IN/so we/PRP/we argued/VBD/argued that/IN/that the/DT/the height/NN/height of/IN/of y/NN/y is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. so/RB/so height/JJ/height of/IN/of y/NN/y is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 and/CC/and height/NN/height of/IN/of x/NN/x is/VBZ/is h/JJ/h because/IN/because x/NN/x is/VBZ/is the/DT/the one/CD/one which/WDT/which has/VBZ/has larger/JJR/larger height/NN/height and/CC/and height/NN/height of/IN/of z/NN/z is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 because/IN/because height/JJ/height of/IN/of y/NN/y is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. this/DT/this is/VBZ/is of/IN/of height/NN/height h/NN/h or/CC/or h-1/NNP/h-1. how/WRB/how about/IN/about the/DT/the height/NN/height of/IN/of ?/./? so/RB/so y/RB/y is/VBZ/is balanced/VBN/balanced so/RB/so height/RB/height of/IN/of is/VBZ/is either/DT/either h/NN/h or/CC/or h-1/NNP/h-1. now/RB/now if/IN/if height/NN/height of/IN/of was/VBD/was h/JJ/h then/RB/then what/WP/what i/PRP/i would/MD/would do/VB/do is/VBZ/is /,/, i/PRP/i would/MD/would pick/VB/pick the/DT/the root/NN/root of/IN/of as/RB/as x/NNP/x. so/IN/so in/IN/in that/DT/that case/NN/case i/PRP/i will/MD/will be/VB/be able/JJ/able to/TO/to do/VB/do that/DT/that single/JJ/single rotation/NN/rotation of/IN/of mine/JJ/mine /,/, the/DT/the previous/JJ/previous case/NNP/case. if/IN/if the/DT/the height/NN/height of/IN/of is/VBZ/is h/JJ/h and/CC/and the/DT/the height/NN/height of/IN/of x/NN/x is/VBZ/is also/RB/also h/JJ/h /,/, the/DT/the same/JJ/same question/NN/question which/WDT/which he/PRP/he had/VBD/had asked/VBN/asked earlier/NNP/earlier. which/WDT/which do/VBP/do we/PRP/we pick/VB/pick ?/./? which/WDT/which one/CD/one will/MD/will i/VB/i pick/NN/pick ?/./? i/PRP/i will/MD/will pick/VB/pick the/DT/the one/CD/one which/WDT/which will/MD/will give/VB/give me/PRP/me the/DT/the single/JJ/single rotation/NN/rotation case/NNP/case. i/PRP/i can/MD/can not/RB/not say/VB/say that/IN/that i/PRP/i will/MD/will pick/VB/pick the/DT/the left/NN/left child/NN/child or/CC/or the/DT/the right/NN/right child/NNP/child. i/PRP/i will/MD/will pick/VB/pick the/DT/the left/NN/left child/NN/child /,/, if/IN/if y/NN/y is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of z/NNP/z. if/IN/if y/NN/y were/VBD/were a/DT/a right/NN/right child/NN/child of/IN/of z/NN/z then/RB/then i/PRP/i will/MD/will pick/VB/pick the/DT/the right/NN/right child/NNP/child. since/IN/since such/JJ/such was/VBD/was not/RB/not the/DT/the case/NN/case /,/, if/IN/if it/PRP/it was/VBD/was h/JJ/h then/RB/then i/PRP/i would/MD/would have/VB/have picked/VBN/picked x/NN/x as/IN/as the/DT/the root/NN/root of/IN/of /./. so/RB/so height/VBD/height of/IN/of is/VBZ/is h-1/NNP/h-1. since/IN/since the/DT/the height/NN/height of/IN/of x/NN/x was/VBD/was h/JJ/h and/CC/and these/DT/these /,/, are/VBP/are the/DT/the same/JJ/same as/IN/as before/IN/before h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 for/IN/for both/DT/both of/IN/of them/PRP/them /,/, with/IN/with one/CD/one of/IN/of them/PRP/them at/IN/at least/JJS/least being/VBG/being h-1/NNP/h-1. this/DT/this is/VBZ/is our/PRP$/our new/JJ/new picture/NN/picture /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 35/CD/35 /CD/) /./. let/NN/let me/PRP/me just/RB/just copy/VBP/copy it/PRP/it here/NNP/here. these/DT/these are/VBP/are the/DT/the heights/NNS/heights of/IN/of the/DT/the various/JJ/various nodes/NNS/nodes and/CC/and trees/NNP/trees. let/VB/let us/PRP/us do/VBP/do the/DT/the double/JJ/double rotation/NN/rotation step/NNP/step. so/RB/so first/JJ/first i/PRP/i am/VBP/am going/VBG/going to/TO/to rotate/VB/rotate as/IN/as before/IN/before /CD/( x/NN/x /,/, y/NN/y /:/) /,/, the/DT/the same/JJ/same process/NN/process as/IN/as an/DT/an insertion/NN/insertion essentially/NNP/essentially. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 03/CD/03 /CD/) so/RB/so with/IN/with the/DT/the rotation/NN/rotation of/IN/of /NNP/( x/NN/x /,/, y/NN/y /:/) y/NN/y will/MD/will come/VB/come down/RB/down and/CC/and x/NN/x will/MD/will move/VB/move up/RP/up i/PRP/i would/MD/would get/VB/get such/JJ/such a/DT/a picture/NN/picture which/WDT/which is/VBZ/is given/VBN/given in/IN/in the/DT/the right/NN/right side/NN/side of/IN/of the/DT/the above/JJ/above slide/NNP/slide. is/VBZ/is the/DT/the right/NN/right child/NN/child of/IN/of x/NN/x /,/, and/CC/and are/VBP/are the/DT/the two/CD/two children/NNS/children of/IN/of y/NN/y that/IN/that is/VBZ/is the/DT/the left/VBN/left and/CC/and right/RB/right sub/VB/sub trees/NNS/trees of/IN/of y/NNP/y. the/DT/the is/VBZ/is h-1/-NONE-/h-1 /,/, is/VBZ/is h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 /,/, is/VBZ/is h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 and/CC/and is/VBZ/is h-1/NNP/h-1. what/WP/what are/VBP/are the/DT/the heights/NNS/heights of/IN/of these/DT/these nodes/NNS/nodes ?/./? height/NN/height of/IN/of y/NN/y is/VBZ/is h/NNP/h. what/WP/what about/IN/about the/DT/the height/NN/height of/IN/of x/NN/x ?/./? h/NN/h +/:/+ 1/CD/1 and/CC/and there/EX/there could/MD/could be/VB/be an/DT/an imbalance/NN/imbalance at/IN/at x/NN/x if/IN/if this/DT/this where/WRB/where h-2/-NONE-/h-2 and/CC/and height/NN/height of/IN/of z/NN/z is/VBZ/is h/JJ/h +/NN/+ 2/CD/2 because/IN/because x/NN/x is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. and/CC/and there/EX/there is/VBZ/is an/DT/an imbalance/NN/imbalance at/IN/at this/DT/this node/NN/node z/NN/z /,/, so/RB/so there/RB/there could/MD/could be/VB/be here/RB/here at/IN/at x/NN/x and/CC/and there/EX/there is/VBZ/is here/RB/here at/IN/at z/NNP/z. there/RB/there is/VBZ/is none/NN/none here/RB/here at/IN/at y/NNP/y. but/CC/but we/PRP/we are/VBP/are not/RB/not done/VBN/done so/RB/so we/PRP/we will/MD/will now/RB/now do/VB/do a/DT/a rotation/NN/rotation around/IN/around /CD/( x/NN/x /,/, z/NN/z /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 55/CD/55 /CD/) what/WP/what would/MD/would happen/VB/happen ?/./? x/NN/x moves/VBZ/moves up/RP/up /,/, z/NN/z moves/NNS/moves down/IN/down /,/, and/CC/and becomes/VBZ/becomes the/DT/the two/CD/two children/NNS/children of/IN/of the/DT/the z/NNP/z. has/VBZ/has height/VBN/height of/IN/of h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 /,/, has/VBZ/has height/VBN/height of/IN/of h-1/-NONE-/h-1 and/CC/and has/VBZ/has the/DT/the height/NN/height of/IN/of h-1/-NONE-/h-1 or/CC/or h-2/-NONE-/h-2 and/CC/and has/VBZ/has a/DT/a height/NN/height of/IN/of h-1/NNP/h-1. what/WP/what about/IN/about the/DT/the height/NN/height of/IN/of y/NN/y ?/./? it/PRP/it is/VBZ/is h/NNP/h. is/VBZ/is it/PRP/it balanced/VBD/balanced ?/./? yes/NNS/yes /,/, is/VBZ/is h-1/-NONE-/h-1 and/CC/and is/VBZ/is h-1/-NONE-/h-1 or/CC/or h-2/NNP/h-2. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of z/NN/z ?/./? it/PRP/it is/VBZ/is h/NNP/h. is/VBZ/is it/PRP/it balanced/VBD/balanced ?/./? yes/NNS/yes /,/, h-1/-NONE-/h-1 and/CC/and h-1/-NONE-/h-1 or/CC/or h-2/NNP/h-2. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of x/NN/x ?/./? it/PRP/it is/VBZ/is h/JJ/h +/NN/+ 1/CD/1 /,/, it/PRP/it is/VBZ/is also/RB/also balanced/NNP/balanced. but/CC/but this/DT/this height/NN/height is/VBZ/is now/RB/now strictly/RB/strictly one/CD/one less/JJR/less than/IN/than this/DT/this /NN/( z/NN/z /:/) /./. /:/( hindi/NN/hindi conversation/NN/conversation /:/) there/EX/there is/VBZ/is no/DT/no might/MD/might this/DT/this time/NNP/time. why/WRB/why did/VBD/did i/PRP/i make/VBP/make that/IN/that argument/NN/argument /:/( hindi/NN/hindi conversation/NN/conversation /:/) height/NN/height h-1/-NONE-/h-1 /./( hindi/NN/hindi conversation/NN/conversation /:/) h/NN/h we/PRP/we could/MD/could have/VB/have done/VBN/done single/JJ/single rotation/NN/rotation /:/( hindi/NN/hindi conversation/NN/conversation /:/) and/CC/and all/DT/all that/DT/that thing/NN/thing /:/( hindi/NN/hindi conversation/NN/conversation /:/) you/PRP/you understand/VBP/understand y/JJ/y i/PRP/i had/VBD/had to/TO/to make/VB/make this/DT/this kind/NN/kind of/IN/of an/DT/an argument/NN/argument ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 00/CD/00 /CD/) /./. so/RB/so hopefully/RB/hopefully you/PRP/you all/DT/all understand/VBP/understand this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 12/CD/12 /CD/) what/WP/what has/VBZ/has happened/VBN/happened is/VBZ/is /,/, final/JJ/final tree/NN/tree has/VBZ/has height/VBN/height less/JJR/less than/IN/than original/JJ/original tree/NN/tree /,/, we/PRP/we need/VBP/need to/TO/to continue/VB/continue up/RP/up the/DT/the tree/NNP/tree. you/PRP/you understand/VBP/understand the/DT/the need/NN/need for/IN/for continuing/VBG/continuing up/RP/up the/DT/the tree/NNP/tree. because/IN/because height/NN/height has/VBZ/has reduced/VBN/reduced by/IN/by one/CD/one /,/, as/IN/as the/DT/the consequence/NN/consequence they/PRP/they could/MD/could still/RB/still be/VB/be imbalanced/VBN/imbalanced at/IN/at the/DT/the ancestors/NNP/ancestors. ancestors/NNS/ancestors of/IN/of this/DT/this node/NN/node /,/, that/IN/that is/VBZ/is what/WP/what ever/RB/ever is/VBZ/is this/DT/this node/NNP/node. this/DT/this will/MD/will require/VB/require a/DT/a proof/NN/proof even/RB/even if/IN/if it/PRP/it is/VBZ/is correct/JJ/correct /,/, so/RB/so think/VBP/think about/IN/about it/NNP/it. it/PRP/it is/VBZ/is a/DT/a good/JJ/good question/NNP/question. he/PRP/he is/VBZ/is asking/VBG/asking me/PRP/me whether/IN/whether we/PRP/we can/MD/can just/RB/just be/VB/be satisfied/VBN/satisfied by/IN/by checking/NN/checking the/DT/the parent/NN/parent of/IN/of this/DT/this node/NNP/node. so/RB/so think/VBP/think about/IN/about this/DT/this and/CC/and we/PRP/we will/MD/will answer/VB/answer it/PRP/it /,/, may/MD/may be/VB/be in/IN/in the/DT/the next/JJ/next class/NN/class or/CC/or may/MD/may be/VB/be after/IN/after the/DT/the class/NNP/class. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 38/CD/38 /CD/) let/NN/let us/PRP/us quickly/RB/quickly look/VBP/look at/IN/at the/DT/the running/VBG/running time/NN/time of/IN/of insert/NN/insert and/CC/and delete/NNP/delete. so/RB/so for/IN/for insertion/NN/insertion we/PRP/we spent/VBD/spent log/NN/log n/NN/n time/NN/time in/IN/in finding/NN/finding way/NN/way to/TO/to insert/NNP/insert. why/WRB/why log/NN/log n/NN/n ?/./? height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, we/PRP/we actually/RB/actually spent/VBD/spent time/NN/time proportional/JJ/proportional to/TO/to the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree which/WDT/which is/VBZ/is the/DT/the height/NN/height we/PRP/we argued/VBD/argued in/IN/in the/DT/the last/JJ/last class/NN/class that/IN/that is/VBZ/is log/JJ/log n/NNP/n. so/RB/so we/PRP/we spent/VBD/spent log/NN/log n/NN/n time/NN/time coming/VBG/coming down/IN/down then/RB/then we/PRP/we spent/VBD/spent log/NN/log n/NN/n time/NN/time may/MD/may be/VB/be moving/VBG/moving up/NNP/up. at/IN/at most/JJS/most log/JJ/log n/NN/n because/IN/because that/DT/that is/VBZ/is the/DT/the height/NN/height and/CC/and then/RB/then we/PRP/we spent/VBD/spent constant/JJ/constant time/NN/time in/IN/in doing/NN/doing a/DT/a rotation/NN/rotation and/CC/and one/CD/one rotation/NN/rotation and/CC/and we/PRP/we are/VBP/are done/NNP/done. the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is only/RB/only log/JJ/log n/NNP/n. deletion/NN/deletion /,/, recall/NN/recall that/IN/that in/IN/in insertion/NN/insertion you/PRP/you will/MD/will first/RB/first find/VB/find the/DT/the node/NN/node in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NN/tree whether/IN/whether the/DT/the insertion/NN/insertion has/VBZ/has to/TO/to be/VB/be done/NNP/done. you/PRP/you will/MD/will insert/VB/insert the/DT/the node/NN/node then/RB/then you/PRP/you will/MD/will start/VB/start moving/VBG/moving up/RP/up the/DT/the tree/NN/tree to/TO/to find/VB/find the/DT/the place/NN/place where/WRB/where the/DT/the imbalance/NN/imbalance occurs/NNP/occurs. the/DT/the first/JJ/first place/NN/place and/CC/and then/RB/then in/IN/in that/DT/that place/NN/place we/PRP/we said/VBD/said we/PRP/we will/MD/will just/RB/just do/VB/do a/DT/a rotation/NN/rotation and/CC/and with/IN/with one/CD/one rotation/NN/rotation you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to satisfy/VB/satisfy the/DT/the height/NN/height balance/NN/balance property/NN/property once/RB/once again/NNP/again. insertion/NN/insertion basically/RB/basically requires/VBZ/requires order/NN/order log/NN/log n/NN/n time/NN/time to/TO/to insert/VB/insert the/DT/the node/NN/node and/CC/and you/PRP/you might/MD/might have/VB/have to/TO/to spend/VB/spend order/NN/order log/NN/log n/NN/n time/NN/time to/TO/to move/VB/move up/RP/up and/CC/and a/DT/a constant/NN/constant time/NN/time to/TO/to do/VB/do the/DT/the rotation/NNP/rotation. so/RB/so in/IN/in all/DT/all it/PRP/it just/RB/just takes/VBZ/takes a/DT/a log/NN/log n/NN/n order/NN/order time/NNP/time. deletion/NN/deletion on/IN/on the/DT/the other/JJ/other hand/NN/hand also/RB/also requires/VBZ/requires only/RB/only order/JJR/order log/NN/log n/NN/n time/NN/time but/CC/but we/PRP/we need/VBP/need to/TO/to do/VB/do a/DT/a little/RB/little bit/NN/bit more/JJR/more work/NNP/work. the/DT/the reason/NN/reason for/IN/for that/DT/that is/VBZ/is to/TO/to delete/VB/delete a/DT/a node/NN/node /,/, recall/NN/recall that/IN/that you/PRP/you have/VBP/have to/TO/to identify/VB/identify which/WDT/which of/IN/of those/DT/those 3/CD/3 cases/NNS/cases the/DT/the node/NN/node is/VBZ/is does/VBZ/does in/NNP/in. whether/IN/whether the/DT/the node/NN/node you/PRP/you are/VBP/are deleting/VBG/deleting is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node or/CC/or if/IN/if it/PRP/it has/VBZ/has only/RB/only one/CD/one child/NN/child or/CC/or if/IN/if it/PRP/it has/VBZ/has 2/CD/2 children/NNS/children then/RB/then we/PRP/we need/VBP/need to/TO/to find/VB/find the/DT/the successor/NN/successor of/IN/of the/DT/the node/NNP/node. we/PRP/we need/VBP/need to/TO/to go/VB/go right/RB/right and/CC/and keep/VB/keep going/VBG/going left/VBN/left /,/, find/VBP/find the/DT/the successor/NN/successor /,/, swap/NN/swap contents/NNS/contents and/CC/and then/RB/then delete/JJ/delete the/DT/the successor/NN/successor node/NNP/node. once/RB/once you/PRP/you have/VB/have deleted/VBN/deleted /,/, now/RB/now you/PRP/you have/VBP/have to/TO/to move/VB/move up/RP/up the/DT/the tree/NN/tree to/TO/to find/VB/find the/DT/the first/JJ/first place/NN/place where/WRB/where the/DT/the imbalance/NN/imbalance occurs/NNP/occurs. having/NN/having found/VBD/found that/IN/that you/PRP/you do/VBP/do a/DT/a rotation/NN/rotation /,/, that/IN/that rotation/NN/rotation may/MD/may or/CC/or may/MD/may not/RB/not solve/VB/solve your/PRP$/your problem/NNP/problem. if/IN/if it/PRP/it does/VBZ/does not/RB/not solve/VB/solve the/DT/the problem/NN/problem of/IN/of height/NN/height balanced/VBN/balanced /,/, it/PRP/it does/VBZ/does not/RB/not restore/VB/restore height/JJ/height balance/NN/balance then/RB/then you/PRP/you might/MD/might have/VB/have to/TO/to continue/VB/continue up/RP/up from/IN/from that/DT/that from/IN/from that/DT/that node/NNP/node. and/CC/and may/MD/may be/VB/be once/RB/once again/RB/again perform/NN/perform a/DT/a rotation/NN/rotation /,/, if/IN/if that/DT/that is/VBZ/is also/RB/also the/DT/the problem/NN/problem then/RB/then you/PRP/you stop/VB/stop otherwise/RB/otherwise you/PRP/you will/MD/will have/VB/have to/TO/to continue/VB/continue up/NNP/up. so/RB/so in/IN/in all/DT/all the/DT/the number/NN/number of/IN/of rotations/NNS/rotations you/PRP/you might/MD/might require/VB/require is/VBZ/is as/IN/as large/JJ/large as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. because/IN/because with/IN/with every/DT/every rotation/NN/rotation you/PRP/you are/VBP/are moving/VBG/moving one/CD/one level/NN/level up/NNP/up. you/PRP/you might/MD/might require/VB/require as/RB/as many/JJ/many as/IN/as order/NN/order log/NN/log n/NN/n rotations/NNS/rotations /,/, but/CC/but each/DT/each of/IN/of those/DT/those rotations/NNS/rotations only/RB/only taking/VBG/taking a/DT/a constant/NN/constant time/NNP/time. the/DT/the total/JJ/total time/NN/time required/VBN/required for/IN/for all/PDT/all these/DT/these rotations/NNS/rotations put/VBD/put together/RP/together is/VBZ/is only/RB/only order/JJR/order log/NN/log n/NNP/n. and/CC/and we/PRP/we took/VBD/took order/NN/order log/NN/log n/NN/n time/NN/time to/TO/to delete/VB/delete the/DT/the node/NNP/node. all/DT/all the/DT/the rotations/NNS/rotations also/RB/also took/VBD/took order/NN/order log/NN/log n/NN/n time/NNP/time. the/DT/the total/JJ/total time/NN/time required/VBN/required for/IN/for the/DT/the entire/JJ/entire delete/NN/delete operation/NN/operation is/VBZ/is still/RB/still order/NN/order log/NN/log n/NNP/n. so/RB/so with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end today/NN/today ?/./? s/NNS/s class/NNP/class. we/PRP/we saw/VBD/saw how/WRB/how to/TO/to do/VB/do an/DT/an insertion/NN/insertion and/CC/and deletion/NN/deletion in/IN/in avl/NN/avl trees/NNP/trees. we/PRP/we argued/VBD/argued eventually/RB/eventually that/IN/that the/DT/the total/JJ/total time/NN/time taken/VBN/taken for/IN/for both/DT/both insertion/NN/insertion and/CC/and deletion/NN/deletion is/VBZ/is only/RB/only order/JJR/order log/NN/log n/NNP/n. in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we had/VBD/had seen/VBN/seen that/IN/that the/DT/the time/NN/time taken/VBN/taken for/IN/for search/NN/search is/VBZ/is also/RB/also only/RB/only order/JJR/order log/NN/log n/NN/n in/IN/in the/DT/the case/NN/case of/IN/of an/DT/an avl/NN/avl tree/NNP/tree. so/RB/so all/DT/all the/DT/the 3/CD/3 operations/NNS/operations of/IN/of insert/NN/insert /,/, search/NN/search and/CC/and delete/JJ/delete can/MD/can be/VB/be done/VBN/done in/IN/in log/NN/log n/NN/n time/NN/time in/IN/in an/DT/an avl/NN/avl tree/NNP/tree. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 13/CD/13 /CD/( 2/CD/2 /,/, 4/CD/4 /:/) trees/NNS/trees in/IN/in today/NN/today ?/./? s/NNS/s class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about 2-4/CD/2-4 trees/NNP/trees. this/DT/this is/VBZ/is another/DT/another way/NN/way of/IN/of representing/VBG/representing a/DT/a dictionary/NNP/dictionary. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see the/DT/the operation/NN/operation of/IN/of insert/NN/insert /,/, search/NN/search and/CC/and delete/JJ/delete on/IN/on this/DT/this data/NN/data structure/NN/structure and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have the/DT/the same/JJ/same kind/NN/kind of/IN/of performance/NN/performance guarantees/NNS/guarantees as/IN/as the/DT/the case/NN/case in/IN/in avl/NN/avl trees/NNP/trees. but/CC/but in/IN/in later/JJ/later classes/NNS/classes we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how this/DT/this data/NN/data structure/NN/structure is/VBZ/is useful/NNP/useful. so/RB/so today/NN/today i/PRP/i will/MD/will just/RB/just begin/VB/begin with/IN/with this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 10/CD/10 /CD/) what/WP/what are/VBP/are 2-4/CD/2-4 trees/NNS/trees ?/./? they/PRP/they are/VBP/are search/RB/search trees/NNS/trees /,/, they/PRP/they are/VBP/are a/DT/a kind/NN/kind of/IN/of search/NN/search trees/NNS/trees but/CC/but they/PRP/they are/VBP/are not/RB/not binary/JJ/binary search/NN/search trees/NNP/trees. so/RB/so recall/JJ/recall in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree what/WP/what was/VBD/was happening/VBG/happening ?/./? the/DT/the tree/NN/tree was/VBD/was a/DT/a binary/JJ/binary tree/NN/tree with/IN/with each/DT/each node/NN/node at/IN/at most/JJS/most 2/CD/2 children/NNP/children. so/RB/so this/DT/this not/RB/not going/VBG/going to/TO/to be/VB/be a/DT/a binary/JJ/binary tree/NNP/tree. that/IN/that is/VBZ/is a/DT/a first/RB/first point/NNP/point. nodes/VBZ/nodes can/MD/can have/VB/have more/JJR/more than/IN/than 2/CD/2 children/NNS/children now/NNP/now. so/RB/so these/DT/these 2-4/CD/2-4 trees/NNS/trees are/VBP/are also/RB/also called/VBN/called 2-3-4/CD/2-3-4 trees/NNP/trees. i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what this/DT/this really/RB/really means/NNP/means. so/RB/so 2-3-4/CD/2-3-4 actually/RB/actually refers/NNS/refers to/TO/to the/DT/the number/NN/number of/IN/of children/NNS/children and/CC/and node/VB/node can/MD/can have/NNP/have. so/RB/so a/DT/a node/NN/node can/MD/can have/VB/have either/DT/either 2/CD/2 /,/, 3/CD/3 or/CC/or 4/CD/4 children/NNP/children. such/JJ/such trees/NNS/trees in/IN/in which/WDT/which a/DT/a node/NN/node can/MD/can have/VB/have many/JJ/many children/NNS/children but/CC/but satisfy/NN/satisfy a/DT/a certain/JJ/certain kind/NN/kind of/IN/of search/NN/search properties/NNS/properties are/VBP/are called/VBN/called multi-way/JJ/multi-way search/NN/search trees/NNP/trees. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 43/CD/43 /CD/) so/RB/so each/DT/each internal/JJ/internal node/NN/node of/IN/of a/DT/a multi-way/JJ/multi-way search/NN/search tree/NN/tree has/VBZ/has at/IN/at least/JJS/least two/CD/two children/NNP/children. it/PRP/it will/MD/will have/VB/have at/IN/at least/JJS/least two/CD/two which/WDT/which means/NNS/means it/PRP/it could/MD/could have/VB/have more/JJR/more than/IN/than two/CD/two children/NNP/children. any/DT/any number/NN/number of/IN/of children/NNS/children more/RBR/more than/IN/than two/NNP/two. each/DT/each node/NN/node of/IN/of a/DT/a tree/NN/tree also/RB/also stores/VBZ/stores a/DT/a collection/NN/collection of/IN/of items/NNS/items of/IN/of the/DT/the form/NN/form /:/( key/JJ/key /,/, element/NN/element /:/) /./. in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NN/tree /,/, each/DT/each node/NN/node was/VBD/was storing/VBG/storing one/CD/one key/JJ/key and/CC/and the/DT/the element/NN/element there/RB/there was/VBD/was let/VBN/let ?/./? s/NNS/s say/VBP/say a/DT/a reference/NN/reference to/TO/to the/DT/the element/NN/element or/CC/or the/DT/the element/NN/element itself/PRP/itself could/MD/could be/VB/be stored/VBN/stored there/-NONE-/there. if/IN/if the/DT/the key/JJ/key was/VBD/was a/DT/a student/NN/student entry/NN/entry number/NN/number /,/, then/RB/then the/DT/the student/NN/student record/NN/record associated/VBN/associated with/IN/with the/DT/the key/JJ/key could/MD/could also/RB/also be/VB/be stored/VBN/stored in/IN/in the/DT/the node/NN/node itself/NNP/itself. so/RB/so in/IN/in the/DT/the similar/JJ/similar way/NN/way /,/, we/PRP/we have/VBP/have that/IN/that in/IN/in the/DT/the multi-way/NN/multi-way search/NN/search tree/NN/tree you/PRP/you will/MD/will have/VB/have each/DT/each node/NN/node containing/VBG/containing a/DT/a pairs/NNS/pairs of/IN/of this/DT/this kind/NN/kind that/IN/that is/VBZ/is /:/( key/JJ/key /,/, element/NN/element /:/) /./. and/CC/and how/WRB/how many/JJ/many pairs/NNS/pairs there/EX/there could/MD/could be/VB/be ?/./? it/PRP/it is/VBZ/is more/RBR/more than/IN/than one/NNP/one. in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NN/tree there/EX/there is/VBZ/is only/RB/only one/CD/one such/JJ/such pair/NN/pair in/IN/in each/DT/each node/NN/node and/CC/and in/IN/in a/DT/a multi-way/JJ/multi-way search/NN/search tree/NN/tree there/EX/there could/MD/could be/VB/be more/RBR/more than/IN/than one/NNP/one. in/IN/in particular/JJ/particular there/EX/there could/MD/could be/VB/be d-1/-NONE-/d-1 such/JJ/such pairs/NNS/pairs or/CC/or items/NNS/items /,/, where/WRB/where d/JJ/d is/VBZ/is the/DT/the number/NN/number of/IN/of children/NNS/children that/WDT/that particular/JJ/particular node/NN/node has/NNP/has. so/RB/so we/PRP/we are/VBP/are just/RB/just generalizing/VBG/generalizing the/DT/the binary/JJ/binary search/NN/search trees/NNP/trees. in/IN/in the/DT/the binary/JJ/binary search/NN/search trees/NNS/trees each/DT/each node/NN/node has/VBZ/has two/CD/two children/NNP/children. each/DT/each node/NN/node could/MD/could have/VB/have two/CD/two children/NNS/children and/CC/and then/RB/then there/RB/there is/VBZ/is only/RB/only one/CD/one key/JJ/key that/IN/that is/VBZ/is kept/VBN/kept in/IN/in the/DT/the node/NNP/node. because/IN/because that/DT/that key/JJ/key helps/NNS/helps us/PRP/us to/TO/to determine/VB/determine whether/IN/whether we/PRP/we should/MD/should go/VB/go left/VBN/left or/CC/or right/NNP/right. similarly/RB/similarly here/RB/here we/PRP/we have/VBP/have d/VBN/d children/NNS/children /,/, if/IN/if d/NN/d is/VBZ/is the/DT/the number/NN/number of/IN/of children/NNS/children then/RB/then you/PRP/you really/RB/really need/VBP/need to/TO/to know/VB/know in/IN/in the/DT/the search/NN/search process/NN/process whether/IN/whether you/PRP/you should/MD/should go/VB/go to/TO/to the/DT/the first/JJ/first child/NN/child /,/, second/JJ/second child/NN/child /,/, third/JJ/third child/NN/child /,/, fourth/JJ/fourth child/NN/child and/CC/and so/RB/so on/NNP/on. so/IN/so you/PRP/you will/MD/will have/VB/have d-1/-NONE-/d-1 different/JJ/different keys/NNS/keys sitting/VBG/sitting in/IN/in the/DT/the node/NN/node to/TO/to help/VB/help you/PRP/you determine/VB/determine that/NNP/that. i/PRP/i will/MD/will soon/RB/soon show/VB/show you/PRP/you an/DT/an example/NN/example and/CC/and that/IN/that will/MD/will be/VB/be clear/NNP/clear. so/RB/so this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of multi-way/NN/multi-way search/NN/search tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 50/CD/50 /CD/) /./. as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this node/NN/node has/VBZ/has two/CD/two children/NNP/children. this/DT/this has/VBZ/has 3/CD/3 children/NNS/children /,/, this/DT/this node/NN/node has/VBZ/has 2/CD/2 children/NNS/children and/CC/and this/DT/this actually/RB/actually has/VBZ/has 6/CD/6 children/NNP/children. how/WRB/how many/JJ/many keys/NNS/keys are/VBP/are there/RB/there in/IN/in a/DT/a node/NN/node ?/./? the/DT/the number/NN/number of/IN/of keys/NNS/keys in/IN/in a/DT/a node/NN/node is/VBZ/is one/CD/one less/JJR/less than/IN/than the/DT/the number/NN/number of/IN/of children/NNS/children that/WDT/that node/NN/node has/NNP/has. and/CC/and why/WRB/why is/VBZ/is that/IN/that ?/./? so/RB/so for/IN/for instance/NN/instance this/DT/this node/NN/node /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 20/CD/20 /CD/) has/VBZ/has three/CD/three children/NNS/children and/CC/and you/PRP/you need/VBP/need two/CD/two keys/NNS/keys in/IN/in the/DT/the node/NNP/node. the/DT/the keys/NNS/keys in/IN/in the/DT/the node/NN/node determine/NN/determine what/WP/what set/VBN/set of/IN/of keys/NNS/keys the/DT/the various/JJ/various sub/NN/sub trees/NNS/trees are/VBP/are going/VBG/going to/TO/to have/NNP/have. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 43/CD/43 /CD/) so/RB/so what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to say/VB/say here/RB/here is/VBZ/is /,/, this/DT/this is/VBZ/is key/JJ/key 22/CD/22. so/RB/so this/DT/this is/VBZ/is also/RB/also in/IN/in the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. so/RB/so everything/VBG/everything in/IN/in this/DT/this left/NN/left sub/NN/sub tree/NN/tree here/RB/here is/VBZ/is less/JJR/less than/IN/than 22/CD/22 and/CC/and everything/NN/everything here/RB/here is/VBZ/is more/RBR/more than/IN/than 22/CD/22. everything/NN/everything here/RB/here is/VBZ/is more/RBR/more than/IN/than 22/CD/22 and/CC/and everything/NN/everything here/RB/here is/VBZ/is less/JJR/less than/IN/than 22/CD/22 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 00/CD/00 /CD/) /./. if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this key/JJ/key everything/NN/everything to/TO/to the/DT/the left/NN/left of/IN/of this/DT/this is/VBZ/is less/JJR/less than/IN/than 5/CD/5 /,/, so/RB/so in/IN/in the/DT/the right/NN/right sub/NN/sub tree/NN/tree we/PRP/we now/RB/now have/VBP/have 3/CD/3 children/NNP/children. so/RB/so in/IN/in this/DT/this first/JJ/first sub/NN/sub tree/NN/tree everything/NN/everything would/MD/would be/VB/be less/RBR/less than/IN/than 5/CD/5. in/IN/in the/DT/the last/JJ/last sub/NN/sub tree/NN/tree everything/NN/everything will/MD/will be/VB/be more/RBR/more than/IN/than 10/CD/10 and/CC/and those/DT/those in/IN/in between/IN/between 5/CD/5 and/CC/and 10/CD/10 would/MD/would lie/VB/lie in/IN/in this/DT/this middle/NN/middle sub/NN/sub tree/NNP/tree. so/RB/so that/IN/that is/VBZ/is a/DT/a concept/NNP/concept. now/RB/now you/PRP/you understand/VBP/understand why/WRB/why you/PRP/you need/VBP/need d-1/-NONE-/d-1 keys/NNS/keys if/IN/if you/PRP/you have/VBP/have d/VBN/d children/NNP/children. so/RB/so everything/VBG/everything less/JJR/less than/IN/than the/DT/the first/JJ/first key/JJ/key would/MD/would be/VB/be in/IN/in the/DT/the first/JJ/first sub/NN/sub tree/NNP/tree. for/IN/for that/DT/that you/PRP/you have/VBP/have to/TO/to follow/VB/follow the/DT/the first/JJ/first child/NNP/child. everything/NN/everything between/IN/between the/DT/the first/JJ/first key/JJ/key and/CC/and the/DT/the second/JJ/second key/JJ/key you/PRP/you will/MD/will have/VB/have to/TO/to follow/VB/follow in/IN/in the/DT/the second/JJ/second child/NN/child and/CC/and so/RB/so on/NNP/on. with/IN/with that/DT/that let/NN/let me/PRP/me go/VBP/go back/RB/back to/TO/to the/DT/the previous/JJ/previous slide/NN/slide /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 43/CD/43 /CD/) /./. so/RB/so the/DT/the children/NNS/children of/IN/of each/DT/each internal/JJ/internal node/NN/node are/VBP/are between/IN/between the/DT/the items/NNP/items. this/DT/this is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by between/IN/between in/IN/in code/NNP/code. so/RB/so you/PRP/you have/VB/have a/DT/a certain/JJ/certain node/NN/node it/PRP/it has/VBZ/has various/JJ/various keys/NNS/keys or/CC/or items/NNP/items. if/IN/if you/PRP/you look/VBP/look at/IN/at two/CD/two consecutive/JJ/consecutive keys/NNS/keys then/RB/then all/DT/all the/DT/the elements/NNS/elements or/CC/or all/DT/all the/DT/the items/NNS/items which/WDT/which have/VBP/have key/JJ/key value/NN/value between/IN/between the/DT/the consecutive/JJ/consecutive pairs/NNS/pairs would/MD/would be/VB/be in/IN/in one/CD/one sub/NN/sub tree/NNP/tree. for/IN/for that/DT/that you/PRP/you will/MD/will have/VB/have to/TO/to follow/VB/follow one/CD/one child/NNP/child. so/RB/so let/VB/let ?/./? s/NNS/s get/VBP/get back/RB/back to/TO/to this/NNP/this. this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a multi-way/JJ/multi-way search/NN/search tree/NNP/tree. and/CC/and how/WRB/how do/VBP/do you/PRP/you search/VB/search in/IN/in such/JJ/such a/DT/a tree/NNP/tree. searching/NN/searching is/VBZ/is similar/JJ/similar to/TO/to the/DT/the binary/JJ/binary search/NN/search procedure/NN/procedure as/IN/as you/PRP/you did/VBD/did in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NNP/tree. so/RB/so suppose/RB/suppose we/PRP/we are/VBP/are searching/VBG/searching for/IN/for 8/CD/8. you/PRP/you come/VBP/come down/RP/down here/RB/here /,/, compare/VBP/compare 8/CD/8 with/IN/with 22/CD/22 so/RB/so 8/CD/8 is/VBZ/is less/NNP/less. so/RB/so you/PRP/you go/VBP/go here/RB/here /,/, now/RB/now you/PRP/you will/MD/will have/VB/have to/TO/to find/VB/find /,/, so/RB/so 8/CD/8 is/VBZ/is not/RB/not less/JJR/less than/IN/than 5/CD/5 and/CC/and 8/CD/8 is/VBZ/is not/RB/not more/RBR/more than/IN/than 10/CD/10. but/CC/but 8/CD/8 lies/NNS/lies between/IN/between 5/CD/5 and/CC/and 10/CD/10. so/RB/so you/PRP/you will/MD/will follow/VB/follow this/DT/this and/CC/and then/RB/then you/PRP/you will/MD/will find/VB/find that/IN/that 8/CD/8 is/VBZ/is sitting/VBG/sitting here/NNP/here. so/RB/so it/PRP/it ?/./? s/NNS/s a/DT/a successful/JJ/successful search/NNP/search. so/RB/so when/WRB/when you/PRP/you are/VBP/are searching/VBG/searching for/IN/for a/DT/a key/JJ/key s/NNS/s you/PRP/you will/MD/will compare/VB/compare it/PRP/it with/IN/with k1/NNP/k1. k1/NNP/k1 is/VBZ/is lets/NNS/lets say/VBP/say the/DT/the very/JJ/very first/JJ/first key/JJ/key in/IN/in that/DT/that node/NN/node and/CC/and k/NN/k lets/NNS/lets say/VBP/say kd-1/-NONE-/kd-1 is/VBZ/is the/DT/the last/JJ/last key/NN/key in/IN/in that/DT/that node/NNP/node. so/RB/so you/PRP/you compare/VBP/compare it/PRP/it with/IN/with the/DT/the very/JJ/very first/JJ/first key/JJ/key if/IN/if it/PRP/it is/VBZ/is less/JJR/less then/RB/then /,/, that/IN/that means/NNS/means you/PRP/you have/VBP/have go/VBP/go to/TO/to the/DT/the left/NN/left most/JJS/most sub/NN/sub tree/NNP/tree. if/IN/if it/PRP/it is/VBZ/is more/RBR/more then/RB/then kd-1/-NONE-/kd-1 then/RB/then you/PRP/you have/VB/have to/TO/to go/VB/go to/TO/to the/DT/the right/NN/right most/JJS/most sub/NN/sub tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 25/CD/25 /CD/) so/IN/so when/WRB/when you/PRP/you are/VBP/are searching/VBG/searching for/IN/for the/DT/the node/NN/node /,/, for/IN/for instance/NN/instance when/WRB/when we/PRP/we are/VBP/are searching/VBG/searching here/RB/here for/IN/for 8/CD/8 /,/, we/PRP/we came/VBD/came down/RP/down /,/, we/PRP/we went/VBD/went left/VBN/left because/IN/because 8/CD/8 is/VBZ/is less/JJR/less than/IN/than 22/CD/22. then/RB/then 8/CD/8 lies/NNS/lies between/IN/between 5/CD/5 and/CC/and 10/CD/10. so/RB/so we/PRP/we came/VBD/came down/RP/down here/RB/here and/CC/and then/RB/then we/PRP/we found/VBD/found 8/CD/8 here/NNP/here. so/RB/so when/WRB/when we/PRP/we are/VBP/are searching/VBG/searching for/IN/for 22/CD/22 /,/, we/PRP/we came/VBD/came down/RP/down the/DT/the sequence/NN/sequence of/IN/of steps/NNS/steps and/CC/and we/PRP/we found/VBD/found that/IN/that 12/CD/12 was/VBD/was not/RB/not there/RB/there in/IN/in the/DT/the tree/NNP/tree. so/RB/so in/IN/in particular/JJ/particular when/WRB/when you/PRP/you are/VBP/are at/IN/at a/DT/a node/NN/node /,/, you/PRP/you have/VBP/have to/TO/to determine/VB/determine that/IN/that the/DT/the key/JJ/key that/IN/that you/PRP/you are/VBP/are searching/VBG/searching for/IN/for lies/NNS/lies between/IN/between which/WDT/which 2/CD/2 keys/NNS/keys and/CC/and once/RB/once you/PRP/you determine/VBP/determine that/IN/that you/PRP/you will/MD/will follow/VB/follow the/DT/the appropriate/NN/appropriate child/NNP/child. at/IN/at the/DT/the two/CD/two extremities/NNS/extremities you/PRP/you will/MD/will check/VB/check whether/IN/whether it/PRP/it is/VBZ/is less/JJR/less than/IN/than the/DT/the first/JJ/first key/JJ/key or/CC/or it/PRP/it is/VBZ/is larger/JJR/larger than/IN/than the/DT/the last/JJ/last key/NNP/key. in/IN/in which/WDT/which case/NN/case you/PRP/you would/MD/would follow/VB/follow either/DT/either the/DT/the left/NN/left most/JJS/most child/NN/child or/CC/or right/RB/right most/RBS/most child/NNP/child. so/RB/so it/PRP/it is/VBZ/is as/IN/as simple/JJ/simple as/IN/as that/NNP/that. so/RB/so what/WP/what would/MD/would an/DT/an in/IN/in order/NN/order traversal/NN/traversal in/IN/in the/DT/the tree/NN/tree would/MD/would look/VB/look like/IN/like ?/./? that/IN/that was/VBD/was the/DT/the question/NN/question we/PRP/we were/VBD/were at/NNP/at. so/RB/so first/JJ/first what/WP/what is/VBZ/is the/DT/the in/IN/in order/NN/order traversal/NN/traversal in/IN/in a/DT/a tree/NN/tree ?/./? we/PRP/we recall/VBP/recall in/IN/in order/NN/order traversal/NN/traversal says/VBZ/says left/VBN/left /,/, then/RB/then you/PRP/you print/VBP/print the/DT/the data/NNS/data of/IN/of the/DT/the node/NN/node and/CC/and then/RB/then you/PRP/you go/VBP/go right/NNP/right. but/CC/but now/RB/now there/EX/there is/VBZ/is no/DT/no left/NN/left and/CC/and right/RB/right /,/, because/IN/because a/DT/a node/NN/node can/MD/can have/VB/have many/JJ/many children/NNP/children. so/RB/so what/WP/what does/VBZ/does an/DT/an in/IN/in order/NN/order traversal/NN/traversal here/RB/here mean/JJ/mean ?/./? so/RB/so first/RB/first go/VB/go the/DT/the left/NN/left most/JJS/most then/RB/then print/VBP/print the/DT/the key/JJ/key /,/, then/RB/then go/VB/go to/TO/to the/DT/the next/JJ/next child/NN/child then/RB/then print/VBP/print the/DT/the key/JJ/key /,/, then/RB/then go/VB/go to/TO/to the/DT/the third/JJ/third child/NN/child then/RB/then print/VBP/print the/DT/the key/JJ/key /,/, then/RB/then go/VB/go to/TO/to the/DT/the next/JJ/next child/NN/child and/CC/and so/RB/so on/NNP/on. that/IN/that would/MD/would correspond/VB/correspond to/TO/to an/DT/an in/IN/in order/NN/order traversal/NNP/traversal. so/RB/so for/IN/for instance/NN/instance here/RB/here if/IN/if were/VBD/were to/TO/to do/VB/do an/DT/an in/IN/in order/NN/order traversal/NN/traversal /,/, what/WP/what would/MD/would i/VB/i do/VBP/do ?/./? i/PRP/i would/MD/would come/VB/come down/RB/down here/RB/here /,/, first/JJ/first go/NN/go left/NNP/left. so/RB/so first/JJ/first i/PRP/i will/MD/will do/VB/do an/DT/an in/IN/in order/NN/order traversal/NN/traversal on/IN/on this/DT/this part/NN/part of/IN/of the/DT/the tree/NNP/tree. which/WDT/which means/VBZ/means that/DT/that i/PRP/i first/RB/first come/VBP/come in/IN/in here/RB/here /,/, i/PRP/i first/RB/first go/VBP/go left/VBN/left i/PRP/i will/MD/will do/VB/do an/DT/an in/IN/in order/NN/order traversal/NN/traversal here/RB/here /,/, which/WDT/which means/VBZ/means i/PRP/i come/VBP/come in/IN/in here/RB/here i/PRP/i first/RB/first go/VBP/go left/VBN/left but/CC/but there/EX/there is/VBZ/is nothing/NN/nothing here/NNP/here. so/RB/so then/RB/then i/PRP/i print/VBP/print the/DT/the key/JJ/key /,/, that/IN/that is/VBZ/is 3/CD/3. then/RB/then i/PRP/i go/VBP/go to/TO/to the/DT/the middle/NN/middle child/NN/child /,/, nothing/NN/nothing there/EX/there so/RB/so then/RB/then i/PRP/i print/VBP/print the/DT/the next/JJ/next key/NN/key 4/CD/4. then/RB/then i/PRP/i go/VBP/go to/TO/to the/DT/the right/NN/right child/NN/child /,/, nothing/NN/nothing there/NNP/there. so/RB/so that/IN/that finishes/NNS/finishes the/DT/the in/IN/in order/NN/order traversal/NN/traversal on/IN/on this/DT/this node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 45/CD/45 /CD/) having/VBG/having finished/VBN/finished the/DT/the in/IN/in order/NN/order traversal/NN/traversal on/IN/on this/DT/this node/NN/node /,/, i/PRP/i go/VBP/go back/RB/back to/TO/to the/DT/the parent/NNP/parent. and/CC/and then/RB/then i/PRP/i will/MD/will print/VB/print this/DT/this key/JJ/key /,/, because/IN/because first/JJ/first i/PRP/i went/VBD/went left/VBN/left then/RB/then i/PRP/i print/VBP/print the/DT/the key/JJ/key which/WDT/which means/VBZ/means i/PRP/i print/VBP/print 5/CD/5. then/RB/then having/VBG/having printed/VBN/printed this/DT/this key/JJ/key i/PRP/i will/MD/will now/RB/now do/VB/do an/DT/an in/IN/in order/NN/order traversal/NN/traversal of/IN/of this/DT/this sub/NN/sub tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 15/CD/15 /CD/) /./. so/RB/so when/WRB/when i/PRP/i am/VBP/am doing/VBG/doing in/IN/in order/NN/order traversal/NN/traversal of/IN/of this/DT/this i/NN/i will/MD/will get/VB/get 6/CD/6 and/CC/and 8/CD/8 /,/, having/NN/having finished/VBD/finished that/IN/that i/PRP/i go/VBP/go back/RB/back and/CC/and print/VBP/print this/DT/this key/JJ/key now/RB/now which/WDT/which gives/VBZ/gives me/PRP/me 10/CD/10. and/CC/and then/RB/then i/PRP/i will/MD/will do/VB/do an/DT/an in/IN/in order/NN/order traversal/NN/traversal of/IN/of this/DT/this right/NN/right sub/NN/sub tree/NNP/tree. and/CC/and that/IN/that would/MD/would give/VB/give me/PRP/me 11/CD/11 first/JJ/first /,/, 13/CD/13 /,/, 14/CD/14 and/CC/and then/RB/then all/DT/all of/IN/of these/NNP/these. so/RB/so 17/CD/17 /,/, 18/CD/18 /,/, 19/CD/19 /,/, 20/CD/20 /,/, 21/CD/21 now/RB/now i/PRP/i finish/VBP/finish the/DT/the in/IN/in order/NN/order traversal/NN/traversal of/IN/of this/DT/this entire/JJ/entire thing/NNP/thing. so/RB/so i/PRP/i print/VBP/print the/DT/the key/JJ/key 22/CD/22 and/CC/and then/RB/then i/PRP/i go/VBP/go right/NNP/right. so/RB/so as/IN/as we/PRP/we can/MD/can see/VB/see /,/, you/PRP/you will/MD/will get/VB/get the/DT/the keys/NNS/keys in/IN/in sorted/JJ/sorted order/NNP/order. that/IN/that is/VBZ/is also/RB/also easy/JJ/easy to/TO/to prove/NNP/prove. why/WRB/why ?/./? because/IN/because in/IN/in an/DT/an in/IN/in order/NN/order traversal/NN/traversal i/PRP/i will/MD/will first/RB/first print/VB/print out/RP/out all/DT/all these/DT/these keys/NNS/keys and/CC/and only/RB/only then/RB/then will/MD/will i/VB/i print/NN/print out/RP/out this/DT/this key/NNP/key. so/RB/so which/WDT/which means/VBZ/means that/DT/that in/IN/in the/DT/the order/NN/order of/IN/of printing/VBG/printing all/DT/all the/DT/the keys/NNS/keys which/WDT/which are/VBP/are less/RBR/less than/IN/than this/DT/this key/NN/key will/MD/will appear/VB/appear before/IN/before and/CC/and all/DT/all the/DT/the keys/NNS/keys which/WDT/which have/VBP/have more/JJR/more than/IN/than this/DT/this key/NN/key will/MD/will appear/VB/appear after/IN/after and/CC/and this/DT/this is/VBZ/is true/JJ/true for/IN/for every/DT/every key/NNP/key. so/RB/so which/WDT/which means/VBZ/means what/WP/what you/PRP/you get/VBP/get is/VBZ/is a/DT/a sorted/VBN/sorted order/NNP/order. yes/NNS/yes /,/, 8/CD/8 could/MD/could have/VB/have more/JJR/more than/IN/than other/JJ/other children/NNS/children also/NNP/also. for/IN/for instance/NN/instance /,/, i/PRP/i could/MD/could have/VB/have something/NN/something here/RB/here let/VB/let ?/./? s/NNS/s say/VBP/say 5.5/CD/5.5. the/DT/the 5.5/CD/5.5 would/MD/would be/VB/be a/DT/a valid/JJ/valid node/NN/node here/RB/here ?/./? instead/RB/instead of/IN/of this/DT/this i/NN/i could/MD/could have/VB/have just/RB/just one/CD/one node/NN/node with/IN/with 5.5/CD/5.5 here/NNP/here. that/IN/that we/PRP/we could/MD/could have/VB/have organized/VBN/organized in/IN/in a/DT/a different/JJ/different manner/NNP/manner. but/CC/but 5.5/CD/5.5 is/VBZ/is a/DT/a valid/JJ/valid node/NN/node /,/, there/EX/there could/MD/could be/VB/be more/RBR/more nodes/NNS/nodes here/NNP/here. so/RB/so now/RB/now let/VB/let us/PRP/us understand/VBP/understand what/WP/what 2-4/CD/2-4 trees/NNS/trees are/NNP/are. so/RB/so 2-4/CD/2-4 tree/NN/tree is/VBZ/is something/NN/something like/IN/like this/NNP/this. what/WP/what are/VBP/are the/DT/the properties/NNS/properties ?/./? each/DT/each node/NN/node has/VBZ/has at/IN/at most/JJS/most 4/CD/4 children/NNP/children. so/RB/so first/JJ/first it/PRP/it is/VBZ/is a/DT/a multi/NN/multi way/NN/way search/NN/search tree/NNP/tree. multi/NN/multi way/NN/way search/NN/search tree/NN/tree which/WDT/which means/VBZ/means every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least 2/CD/2 children/NNP/children. now/RB/now we/PRP/we are/VBP/are saying/VBG/saying each/DT/each node/NN/node has/VBZ/has either/DT/either 2/CD/2 /,/, 3/CD/3 or/CC/or 4/CD/4 children/NNP/children. that/IN/that is/VBZ/is why/WRB/why it/PRP/it is/VBZ/is called/VBN/called a/DT/a 2-4/CD/2-4 tree/NN/tree or/CC/or 2-3-4/CD/2-3-4 tree/NNP/tree. each/DT/each node/NN/node has/VBZ/has at/IN/at most/JJS/most 2/CD/2 /,/, 3/CD/3 or/CC/or 4/CD/4 children/NNP/children. the/DT/the second/JJ/second important/JJ/important property/NN/property is/VBZ/is that/IN/that all/DT/all the/DT/the leaf/NN/leaf nodes/VBZ/nodes are/VBP/are at/IN/at the/DT/the same/JJ/same level/NNP/level. so/IN/so the/DT/the leaf/NN/leaf node/NN/node here/RB/here are/VBP/are this/DT/this /,/, just/RB/just forget/VB/forget this/DT/this square/NN/square boxes/VBZ/boxes for/IN/for now/NNP/now. so/RB/so these/DT/these are/VBP/are the/DT/the leaf/NN/leaf nodes/VBZ/nodes and/CC/and they/PRP/they are/VBP/are at/IN/at the/DT/the same/JJ/same level/NNP/level. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 28/CD/28 /CD/) they/PRP/they are/VBP/are all/RB/all at/IN/at level/NN/level /,/, suppose/NN/suppose we/PRP/we are/VBP/are numbering/VBG/numbering level/NN/level 0/-NONE-/0 /,/, 1/CD/1 /,/, 2/CD/2 again/RB/again /,/, so/RB/so they/PRP/they are/VBP/are at/IN/at level/NN/level 2/CD/2. these/DT/these are/VBP/are the/DT/the only/JJ/only 2/CD/2 properties/NNS/properties of/IN/of a/DT/a 2-4/CD/2-4 tree/NNP/tree. of/IN/of course/NN/course it/PRP/it is/VBZ/is multi-way/JJ/multi-way search/NN/search tree/NN/tree /,/, so/RB/so a/DT/a 2-4/CD/2-4 tree/NN/tree is/VBZ/is a/DT/a multi/NN/multi way/NN/way search/NN/search tree/NN/tree with/IN/with these/DT/these 2/CD/2 additional/JJ/additional properties/NNP/properties. search/NN/search tree/NN/tree will/MD/will have/VB/have a/DT/a property/NN/property that/WDT/that /,/, everything/NN/everything which/WDT/which is/VBZ/is less/RBR/less than/IN/than this/DT/this key/NN/key is/VBZ/is going/VBG/going to/TO/to be/VB/be in/IN/in the/DT/the left/NN/left and/CC/and everything/NN/everything that/IN/that is/VBZ/is more/RBR/more is/VBZ/is going/VBG/going to/TO/to be/VB/be in/IN/in the/DT/the right/NNP/right. this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree /,/, as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this node/NN/node has/VBZ/has 3/CD/3 children/NNS/children and/CC/and this/DT/this has/VBZ/has 2/CD/2. there/EX/there is/VBZ/is no/DT/no node/NN/node with/IN/with 4/CD/4 children/NNS/children but/CC/but you/PRP/you could/MD/could also/RB/also have/VB/have a/DT/a node/NN/node with/IN/with 4/CD/4 children/NNS/children in/IN/in it/NNP/it. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree ?/./? why/WRB/why should/MD/should the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree be/VB/be at/IN/at least/JJS/least log4n/NNP/log4n and/CC/and at/IN/at most/JJS/most log2n/NNP/log2n ?/./? what/WP/what is/VBZ/is the/DT/the worst/JJS/worst case/NN/case ?/./? when/WRB/when would/MD/would the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree be/VB/be maximum/NN/maximum ?/./? it/PRP/it is/VBZ/is when/WRB/when everyone/NN/everyone has/VBZ/has 2/CD/2 children/NNP/children. in/IN/in that/DT/that case/NN/case everyone/NN/everyone has/VBZ/has 2/CD/2 children/NNS/children and/CC/and all/DT/all the/DT/the leafs/NNS/leafs are/VBP/are at/IN/at the/DT/the last/JJ/last level/NNP/level. then/RB/then it/PRP/it is/VBZ/is exactly/RB/exactly a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. and/CC/and in/IN/in complete/JJ/complete binary/NN/binary tree/NN/tree we/PRP/we argued/VBD/argued that/IN/that the/DT/the height/NN/height is/VBZ/is log2n/NNP/log2n /,/, there/EX/there was/VBD/was plus/RB/plus one/CD/one /,/, minus/CC/minus one/CD/one some/DT/some where/WRB/where forget/NN/forget where/WRB/where it/PRP/it was/VBD/was /,/, but/CC/but it/PRP/it is/VBZ/is some/DT/some thing/NN/thing like/IN/like that/NNP/that. that/IN/that is/VBZ/is a/DT/a setting/NN/setting when/WRB/when the/DT/the tree/NN/tree height/NN/height is/VBZ/is maximum/NNP/maximum. the/DT/the tree/NN/tree height/NN/height is/VBZ/is minimum/JJ/minimum when/WRB/when every/DT/every node/NN/node has/VBZ/has 4/CD/4 children/NNS/children in/IN/in it/NNP/it. because/IN/because then/RB/then the/DT/the nodes/NNS/nodes are/VBP/are closer/JJR/closer to/TO/to the/DT/the root/NN/root /,/, you/PRP/you will/MD/will have/VB/have 4/CD/4 and/CC/and then/RB/then 16/CD/16 at/IN/at the/DT/the next/JJ/next level/NN/level and/CC/and then/RB/then 16/CD/16 times/NNS/times 4/CD/4 that/WDT/that is/VBZ/is 64/CD/64 at/IN/at the/DT/the next/JJ/next level/NN/level and/CC/and so/RB/so on/NNP/on. once/RB/once again/RB/again if/IN/if we/PRP/we do/VBP/do the/DT/the same/JJ/same analysis/NN/analysis you/PRP/you will/MD/will find/VB/find that/IN/that the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree is/VBZ/is log4n/NNP/log4n. so/RB/so height/VBD/height of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes always/RB/always lies/VBZ/lies between/IN/between these/DT/these two/CD/two quantities/NNP/quantities. it/PRP/it is/VBZ/is either/DT/either log2n/NNP/log2n /,/, it/PRP/it lies/VBZ/lies between/IN/between log2n/NNP/log2n and/CC/and log4n/NNP/log4n. log4n/NNP/log4n is/VBZ/is essentially/RB/essentially half/DT/half of/IN/of log2n/NNP/log2n. basically/RB/basically the/DT/the height/NN/height of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree lies/NNS/lies between/IN/between half/NN/half of/IN/of log/NN/log n/NN/n and/CC/and log/NN/log n/NNP/n. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to search/VB/search in/IN/in a/DT/a 2-4/CD/2-4 tree/NN/tree then/RB/then ?/./? why/WRB/why log/NN/log n/NN/n ?/./? how/WRB/how do/VBP/do we/PRP/we search/VB/search in/IN/in a/DT/a 2-4/CD/2-4 tree/NN/tree ?/./? it/PRP/it is/VBZ/is a/DT/a multi/NN/multi way/NN/way search/NN/search tree/NNP/tree. so/RB/so if/IN/if i/PRP/i am/VBP/am searching/VBG/searching for/IN/for a/DT/a particular/JJ/particular key/JJ/key lets/NNS/lets say/VBP/say suppose/JJ/suppose what/WP/what do/VBP/do i/PRP/i want/VBP/want to/TO/to search/NN/search ?/./? i/PRP/i want/VBP/want to/TO/to search/NN/search for/IN/for 11/CD/11 lets/NNS/lets say/NNP/say. i/PRP/i came/VBD/came here/RB/here with/IN/with 11/CD/11 /,/, where/WRB/where would/MD/would i/VB/i go/VB/go ?/./? compare/NN/compare 11/CD/11 with/IN/with 12/CD/12 /,/, i/PRP/i come/VBP/come here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 10/CD/10 /CD/) /./. i/PRP/i am/VBP/am comparing/VBG/comparing 11/CD/11 with/IN/with 10/CD/10 /,/, so/RB/so i/PRP/i go/VBP/go right/RB/right and/CC/and then/RB/then i/PRP/i find/VBP/find 11/CD/11 here/NNP/here. so/RB/so i/PRP/i found/VBD/found 11/CD/11. so/RB/so how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take for/IN/for me/PRP/me to/TO/to search/VB/search in/IN/in a/DT/a 2-4/CD/2-4 tree/NN/tree ?/./? height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, is/VBZ/is it/PRP/it something/NN/something more/JJR/more that/IN/that i/PRP/i need/VBP/need to/TO/to do/VB/do ?/./? it/PRP/it is/VBZ/is correct/JJ/correct /,/, it/PRP/it is/VBZ/is order/NN/order height/NN/height of/IN/of the/DT/the tree/NNP/tree. i/PRP/i have/VBP/have to/TO/to compare/VB/compare with/IN/with in/IN/in each/DT/each node/NNP/node. because/IN/because when/WRB/when i/PRP/i am/VBP/am searching/VBG/searching for/IN/for 11/CD/11 /,/, i/PRP/i have/VBP/have to/TO/to essentially/RB/essentially compare/VB/compare against/IN/against /,/, how/WRB/how many/JJ/many keys/NNS/keys there/EX/there could/MD/could be/VB/be in/IN/in a/DT/a node/NN/node ?/./? a/DT/a node/NN/node we/PRP/we said/VBD/said has/VBZ/has how/WRB/how many/JJ/many children/NNS/children ?/./? 4/CD/4. if/IN/if it/PRP/it has/VBZ/has 4/CD/4 children/NNS/children how/WRB/how many/JJ/many keys/NNS/keys would/MD/would it/PRP/it have/VB/have ?/./? 3/CD/3. the/DT/the maximum/NN/maximum number/NN/number of/IN/of keys/NNS/keys therefore/VBP/therefore is/VBZ/is 3/CD/3. if/IN/if it/PRP/it has/VBZ/has 2/CD/2 children/NNS/children how/WRB/how many/JJ/many keys/NNS/keys do/VBP/do i/PRP/i require/VB/require ?/./? 1/CD/1. so/RB/so a/DT/a node/NN/node has/VBZ/has either/DT/either 1/CD/1 /,/, 2/CD/2 or/CC/or 3/CD/3 keys/NNP/keys. so/RB/so when/WRB/when i/PRP/i search/VBP/search for/IN/for the/DT/the key/JJ/key and/CC/and i/PRP/i come/VBP/come with/IN/with key/JJ/key /,/, then/RB/then i/PRP/i have/VBP/have to/TO/to compare/VB/compare it/PRP/it with/IN/with this/DT/this key/JJ/key /,/, this/DT/this key/JJ/key and/CC/and this/DT/this key/JJ/key /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 16/CD/16 /CD/) /./. so/RB/so i/PRP/i might/MD/might require/VB/require 3/CD/3 comparisons/NNS/comparisons in/IN/in all/DT/all to/TO/to determine/VB/determine which/WDT/which particular/JJ/particular branch/NN/branch to/TO/to take/VB/take out/NNP/out. so/RB/so i/PRP/i might/MD/might require/VB/require 3/CD/3 comparisons/NNP/comparisons. so/RB/so the/DT/the time/NN/time is/VBZ/is 3/CD/3 comparisons/NNS/comparisons with/IN/with in/IN/in a/DT/a node/NN/node /,/, times/VBZ/times log/NN/log n/NN/n because/IN/because that/DT/that is/VBZ/is log/NN/log n/NN/n is/VBZ/is a/DT/a number/NN/number of/IN/of node/NN/node i/PRP/i would/MD/would be/VB/be visiting/NNP/visiting. order/NN/order log/NN/log n/NNP/n. so/RB/so order/JJR/order log/NN/log n/NN/n is/VBZ/is correct/JJ/correct but/CC/but you/PRP/you have/VBP/have to/TO/to be/VB/be careful/JJ/careful about/IN/about this/NNP/this. within/IN/within each/DT/each node/NN/node you/PRP/you require/VBP/require more/JJR/more than/IN/than one/CD/one comparison/NNP/comparison. in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree you/PRP/you required/VBD/required only/RB/only one/CD/one comparison/NN/comparison but/CC/but now/RB/now you/PRP/you could/MD/could require/VB/require up/RP/up to/TO/to 3/CD/3 comparisons/NNP/comparisons. why/WRB/why 3/CD/3 log/NN/log n/NN/n ?/./? he/PRP/he is/VBZ/is asking/VBG/asking me/PRP/me why/WRB/why did/VBD/did i/PRP/i say/VBP/say 3/CD/3 log/NN/log n/NNP/n. when/WRB/when i/PRP/i am/VBP/am searching/VBG/searching /,/, i/PRP/i start/VBP/start from/IN/from here/RB/here /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 06/CD/06 /CD/) start/NN/start at/IN/at the/DT/the root/NN/root and/CC/and then/RB/then whatever/RB/whatever key/JJ/key i/PRP/i have/VBP/have i/PRP/i compare/VBP/compare it/PRP/it with/IN/with the/DT/the keys/NNS/keys in/IN/in a/DT/a node/NNP/node. here/RB/here this/DT/this node/NN/node has/VBZ/has only/RB/only one/CD/one key/JJ/key but/CC/but it/PRP/it could/MD/could have/VB/have 3/CD/3 keys/NNS/keys in/IN/in it/NNP/it. then/RB/then i/PRP/i have/VBP/have to/TO/to compare/VB/compare against/IN/against each/DT/each of/IN/of those/DT/those 3/CD/3 keys/NNS/keys to/TO/to determine/VB/determine which/WDT/which particular/JJ/particular branch/NN/branch to/TO/to take/VB/take out/RP/out of/IN/of that/DT/that node/NNP/node. if/IN/if it/PRP/it has/VBZ/has 3/CD/3 keys/NNS/keys then/RB/then there/RB/there are/VBP/are 4/CD/4 different/JJ/different branches/NNS/branches /,/, which/WDT/which should/MD/should i/PRP/i take/VB/take ?/./? to/TO/to determine/VB/determine that/IN/that i/PRP/i need/VBP/need to/TO/to make/VB/make 3/CD/3 comparisons/NNP/comparisons. let/NN/let us/PRP/us look/VBP/look at/IN/at insertion/NN/insertion in/IN/in a/DT/a 2-4/CD/2-4 tree/NNP/tree. i/PRP/i have/VBP/have this/DT/this largest/JJS/largest example/NN/example that/WDT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be using/VBG/using to/TO/to show/VB/show you/PRP/you the/DT/the process/NNP/process. is/VBZ/is this/DT/this a/DT/a 2-4/CD/2-4 tree/NN/tree ?/./? this/DT/this has/VBZ/has 4/CD/4 children/NNS/children /,/, this/DT/this has/VBZ/has 4/CD/4 /,/, this/DT/this has/VBZ/has 2/CD/2 children/NNS/children /,/, this/DT/this has/VBZ/has 2/CD/2 children/NNS/children and/CC/and this/DT/this last/JJ/last one/CD/one also/RB/also has/VBZ/has 2/CD/2 children/NNS/children /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 56/CD/56 /CD/) /./. i/PRP/i have/VBP/have shown/VBN/shown the/DT/the node/NN/node with/IN/with 3/CD/3 locations/NNS/locations in/IN/in it/NNP/it. so/RB/so each/DT/each node/NN/node will/MD/will have/VB/have space/NN/space for/IN/for 3/CD/3 keys/NNS/keys and/CC/and 4/CD/4 pointers/NNP/pointers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 43/CD/43 /CD/) so/RB/so it/PRP/it has/VBZ/has only/RB/only one/CD/one key/JJ/key but/CC/but i/PRP/i have/VBP/have shown/VBN/shown each/DT/each node/NN/node having/VBG/having space/NN/space for/IN/for 3/CD/3. so/RB/so the/DT/the first/JJ/first element/NN/element i/PRP/i am/VBP/am going/VBG/going to/TO/to insert/VB/insert is/VBZ/is 21/CD/21. how/WRB/how do/VBP/do we/PRP/we insert/VB/insert ?/./? we/PRP/we insert/VBP/insert just/RB/just as/IN/as in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NNP/tree. first/RB/first we/PRP/we will/MD/will search/VB/search and/CC/and wherever/NN/wherever our/PRP$/our search/NN/search terminates/NNS/terminates /,/, if/IN/if we/PRP/we found/VBD/found that/IN/that element/NN/element then/RB/then it/PRP/it would/MD/would say/VB/say that/IN/that it/PRP/it already/RB/already exist/NNP/exist. you/PRP/you will/MD/will not/RB/not insert/VB/insert then/RB/then but/CC/but wherever/RB/wherever the/DT/the search/NN/search terminates/VBZ/terminates we/PRP/we would/MD/would insert/VB/insert the/DT/the element/NN/element there/NNP/there. i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert 21/CD/21. so/RB/so 21/CD/21 /,/, i/PRP/i come/VBP/come and/CC/and compare/NNP/compare. here/RB/here 21/CD/21 lies/NNS/lies between/IN/between 13/CD/13 and/CC/and 22/CD/22 which/WDT/which means/VBZ/means i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take this/DT/this branch/NN/branch out/NNP/out. so/RB/so take/VB/take this/DT/this branch/NN/branch out/IN/out /,/, i/PRP/i compare/VBP/compare it/PRP/it against/IN/against 18/CD/18. it/PRP/it is/VBZ/is larger/JJR/larger than/IN/than 18/CD/18 so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take this/DT/this branch/NN/branch out/IN/out /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 00/CD/00 /CD/) /./. so/RB/so take/VB/take this/DT/this and/CC/and it/PRP/it goes/VBZ/goes and/CC/and sits/NNS/sits in/IN/in that/DT/that particular/JJ/particular node/NNP/node. why/WRB/why does/VBZ/does it/PRP/it go/VB/go and/CC/and sit/VB/sit in/IN/in this/DT/this node/NN/node ?/./? why/WRB/why did/VBD/did not/RB/not i/PRP/i compare/VBP/compare with/IN/with 20/CD/20 and/CC/and say/VB/say that/IN/that let/JJ/let me/NN/me go/NN/go down/IN/down further/NNP/further. this/DT/this is/VBZ/is a/DT/a leaf/NN/leaf node/NNP/node. i/PRP/i could/MD/could also/RB/also have/VB/have said/VBN/said it/PRP/it /,/, i/PRP/i compare/VBP/compare it/PRP/it with/IN/with 20/CD/20 then/RB/then i/PRP/i try/VBP/try to/TO/to go/VB/go right/RB/right but/CC/but right/RB/right node/VBP/node is/VBZ/is empty/NNP/empty. the/DT/the right/NN/right pointer/NN/pointer is/VBZ/is a/DT/a null/JJ/null pointer/NN/pointer because/IN/because it/PRP/it is/VBZ/is not/RB/not going/VBG/going down/RB/down any/DT/any further/NNP/further. so/RB/so i/PRP/i know/VBP/know that/IN/that this/DT/this is/VBZ/is the/DT/the place/NN/place where/WRB/where i/PRP/i have/VBP/have to/TO/to insert/VB/insert and/CC/and this/DT/this is/VBZ/is empty/JJ/empty and/CC/and there/EX/there is/VBZ/is space/NN/space here/RB/here so/RB/so i/PRP/i just/RB/just put/VBD/put it/PRP/it in/NNP/in. we/PRP/we would/MD/would not/RB/not put/VB/put it/PRP/it next/JJ/next to/TO/to 18/CD/18. we/PRP/we would/MD/would continue/VB/continue till/NN/till we/PRP/we can/MD/can not/RB/not go/VB/go any/DT/any further/NNP/further. this/DT/this is/VBZ/is what/WP/what happens/NNS/happens in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NNP/tree. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) you/PRP/you keep/VB/keep comparing/VBG/comparing till/NN/till you/PRP/you hit/VBD/hit a/DT/a null/NN/null pointer/NN/pointer and/CC/and then/RB/then you/PRP/you put/VBD/put it/PRP/it there/NNP/there. so/RB/so till/IN/till we/PRP/we hit/VBP/hit a/DT/a null/NN/null pointer/NNP/pointer. we/PRP/we compared/VBD/compared 21/CD/21 with/IN/with 20/CD/20 /,/, let/VB/let ?/./? s/NNS/s say/VBP/say we/PRP/we were/VBD/were trying/VBG/trying to/TO/to go/VB/go right/RB/right but/CC/but this/DT/this is/VBZ/is a/DT/a null/JJ/null pointer/NN/pointer and/CC/and so/RB/so we/PRP/we put/VBD/put the/DT/the node/NN/node here/NNP/here. now/RB/now you/PRP/you are/VBP/are wondering/VBG/wondering how/WRB/how i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use this/DT/this space/NNP/space. we/PRP/we will/MD/will see/VB/see how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use this/DT/this space/NNP/space. if/IN/if this/DT/this was/VBD/was already/RB/already filled/VBN/filled /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 22/CD/22 /CD/) /CD/( hindi/NN/hindi conversation/NN/conversation /:/) you/PRP/you will/MD/will have/VB/have to/TO/to wait/VB/wait till/NN/till the/DT/the next/JJ/next slide/NNP/slide. so/RB/so if/IN/if there/EX/there is/VBZ/is empty/JJ/empty space/NN/space no/DT/no problem/NN/problem you/PRP/you can/MD/can do/VB/do the/DT/the insertion/NNP/insertion. let/NN/let ?/./? s/NNS/s say/VBP/say now/RB/now we/PRP/we try/VBP/try to/TO/to insert/VB/insert 23/CD/23. so/RB/so 23/CD/23 lies/NNS/lies between/IN/between 22/CD/22 and/CC/and 32/CD/32. we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take this/DT/this link/NN/link out/NNP/out. we/PRP/we took/VBD/took this/DT/this link/NN/link out/IN/out /,/, 23/CD/23 is/VBZ/is less/JJR/less than/IN/than 25/CD/25 so/RB/so we/PRP/we come/VBP/come down/RB/down here/NNP/here. in/IN/in a/DT/a node/NN/node we/PRP/we will/MD/will try/VB/try to/TO/to keep/VB/keep the/DT/the keys/NNS/keys in/IN/in a/DT/a sorted/VBN/sorted order/NN/order because/IN/because only/RB/only then/NNP/then. so/RB/so 23/CD/23 should/MD/should come/VB/come at/IN/at this/DT/this place/NNP/place. what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? move/VB/move 24/CD/24 to/TO/to the/DT/the right/NN/right and/CC/and 23/CD/23 will/MD/will come/VB/come at/IN/at its/PRP$/its place/NNP/place. insertion/NN/insertion actually/RB/actually happens/VBZ/happens at/IN/at the/DT/the very/RB/very last/JJ/last node/NN/node that/IN/that is/VBZ/is at/IN/at the/DT/the leaf/NN/leaf nodes/NNP/nodes. the/DT/the other/JJ/other way/NN/way i/PRP/i could/MD/could think/VB/think of/IN/of it/PRP/it is/VBZ/is 24/CD/24 was/VBD/was here/RB/here /,/, i/PRP/i compare/VBP/compare 23/CD/23 with/IN/with it/PRP/it /,/, i/PRP/i tried/VBD/tried to/TO/to go/VB/go left/VBN/left that/IN/that is/VBZ/is null/JJ/null pointer/NNP/pointer. so/RB/so that/IN/that means/NNS/means i/PRP/i have/VBP/have to/TO/to insert/VB/insert at/IN/at that/DT/that node/NN/node itself/NNP/itself. we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert 40/CD/40. there/EX/there should/MD/should be/VB/be no/RB/no problem/NN/problem with/IN/with 40/CD/40. the/DT/the 40/CD/40 is/VBZ/is more/RBR/more than/IN/than 32/CD/32 so/RB/so i/PRP/i go/VBP/go right/RB/right /,/, i/PRP/i come/VBP/come here/RB/here 40/CD/40 is/VBZ/is more/RBR/more than/IN/than 35/CD/35 so/RB/so again/RB/again go/VB/go right/RB/right and/CC/and there/EX/there is/VBZ/is space/NN/space here/NNP/here. so/RB/so i/PRP/i compare/VBP/compare 40/CD/40 with/IN/with 39/CD/39 it/PRP/it is/VBZ/is a/DT/a null/JJ/null pointer/NN/pointer which/WDT/which means/VBZ/means i/PRP/i have/VBP/have to/TO/to put/VB/put it/PRP/it right/RB/right here/NNP/here. there/RB/there is/VBZ/is space/NN/space so/RB/so i/PRP/i put/VBD/put it/PRP/it there/NNP/there. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 48/CD/48 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 58/CD/58 /CD/) if/IN/if i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert a/DT/a key/JJ/key and/CC/and there/EX/there is/VBZ/is no/DT/no space/NN/space available/JJ/available in/IN/in the/DT/the node/NN/node in/IN/in which/WDT/which the/DT/the key/JJ/key should/MD/should go/NNP/go. then/RB/then what/WP/what do/VBP/do i/PRP/i do/VBP/do and/CC/and that/IN/that is/VBZ/is an/DT/an example/NNP/example. when/WRB/when i/PRP/i am/VBP/am inserting/VBG/inserting 29/CD/29 that/WDT/that is/VBZ/is the/DT/the kind/NN/kind of/IN/of thing/NN/thing would/MD/would happen/NNP/happen. so/RB/so 29/CD/29 between/IN/between 22/CD/22 and/CC/and 32/CD/32 so/RB/so i/PRP/i follow/VBP/follow this/NNP/this. 29/CD/29 more/JJR/more than/IN/than 25/CD/25 so/RB/so it/PRP/it wants/VBZ/wants to/TO/to come/VB/come and/CC/and sit/VB/sit here/RB/here between/IN/between 28/CD/28 and/CC/and 30/CD/30 except/IN/except there/EX/there is/VBZ/is no/DT/no space/NN/space here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 20/CD/20 /CD/) so/RB/so this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. we/PRP/we are/VBP/are going/VBG/going to/TO/to split/VB/split the/DT/the node/NNP/node. which/WDT/which node/NN/node are/VBP/are we/PRP/we going/VBG/going to/TO/to split/VB/split ?/./? the/DT/the one/CD/one containing/VBG/containing 26/CD/26 /,/, 28/CD/28 /,/, 29/CD/29 and/CC/and 30/CD/30. we/PRP/we are/VBP/are going/VBG/going to/TO/to split/VB/split it/PRP/it in/IN/in to/TO/to 2/CD/2. let/VB/let ?/./? s/NNS/s say/VBP/say these/DT/these are/VBP/are 4/CD/4 keys/NNS/keys /,/, the/DT/the two/CD/two smaller/JJR/smaller one/CD/one will/MD/will go/VB/go to/TO/to the/DT/the left/NN/left and/CC/and two/CD/two larger/JJR/larger one/CD/one will/MD/will go/VB/go to/TO/to the/DT/the right/NN/right and/CC/and we/PRP/we will/MD/will remove/VB/remove this/DT/this node/NNP/node. we/PRP/we need/VBP/need to/TO/to link/VB/link up/RP/up this/DT/this node/NN/node /,/, this/DT/this should/MD/should be/VB/be the/DT/the children/NNS/children of/IN/of this/DT/this guy/NN/guy here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 53/CD/53 /CD/) because/IN/because these/DT/these are/VBP/are all/DT/all originally/RB/originally children/VBN/children of/IN/of this/DT/this node/NNP/node. so/RB/so this/DT/this should/MD/should also/RB/also be/VB/be a/DT/a child/NN/child of/IN/of this/DT/this node/NN/node but/CC/but now/RB/now its/PRP$/its going/VBG/going to/TO/to have/VB/have 3/CD/3 children/NNP/children. but/CC/but how/WRB/how many/JJ/many keys/NNS/keys are/VBP/are there/RB/there ?/./? one/CD/one /,/, so/RB/so we/PRP/we need/VBP/need one/CD/one more/JJR/more key/NNP/key. if/IN/if it/PRP/it has/VBZ/has 3/CD/3 children/NNS/children /,/, it/PRP/it should/MD/should have/VB/have 2/CD/2 keys/NNP/keys. so/RB/so which/WDT/which key/JJ/key i/PRP/i should/MD/should put/VB/put here/RB/here ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to promote/VB/promote /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. so/RB/so it/PRP/it is/VBZ/is best/JJS/best to/TO/to just/RB/just promote/VB/promote up/RP/up 28/CD/28. that/WDT/that is/VBZ/is what/WP/what i/PRP/i will/MD/will promote/VB/promote 28/CD/28 here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 54/CD/54 /CD/) i/PRP/i could/MD/could also/RB/also have/VB/have promoted/VBN/promoted up/RP/up 29/CD/29. you/PRP/you understand/VBP/understand why/WRB/why 28/CD/28 and/CC/and why/WRB/why not/RB/not 26/CD/26. if/IN/if i/PRP/i had/VBD/had promoted/VBN/promoted up/RP/up 26/CD/26 what/WP/what would/MD/would be/VB/be the/DT/the problem/NN/problem ?/./? then/RB/then the/DT/the search/NN/search property/NN/property would/MD/would not/RB/not be/VB/be valid/NNP/valid. so/RB/so i/PRP/i have/VBP/have to/TO/to promote/VB/promote either/DT/either the/DT/the largest/JJS/largest key/JJ/key from/IN/from this/DT/this node/NN/node /,/, up/RB/up here/RB/here or/CC/or smallest/JJS/smallest from/IN/from here/NNP/here. this/DT/this will/MD/will become/VB/become the/DT/the new/JJ/new structure/NNP/structure. we/PRP/we have/VBP/have promoted/VBN/promoted one/CD/one key/JJ/key to/TO/to the/DT/the parent/NN/parent and/CC/and inserted/VBD/inserted that/IN/that key/NNP/key. we/PRP/we could/MD/could insert/VB/insert the/DT/the key/JJ/key in/IN/in to/TO/to the/DT/the parent/NN/parent because/IN/because there/EX/there was/VBD/was a/DT/a space/NN/space in/IN/in the/DT/the parent/NNP/parent. but/CC/but it/PRP/it might/MD/might happen/VB/happen that/IN/that when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the key/JJ/key in/IN/in to/TO/to the/DT/the parent/NN/parent /,/, the/DT/the parent/NN/parent does/VBZ/does not/RB/not have/VB/have any/DT/any space/NNP/space. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) 7/CD/7 less/JJR/less than/IN/than 13/CD/13 so/RB/so we/PRP/we have/VBP/have go/VBP/go to/TO/to left/NNP/left. the/DT/the 7/CD/7 between/IN/between 3/CD/3 and/CC/and 8/CD/8 so/RB/so we/PRP/we should/MD/should follow/VB/follow the/DT/the second/JJ/second pointer/NNP/pointer. it/PRP/it should/MD/should come/VB/come here/RB/here and/CC/and we/PRP/we want/VBP/want to/TO/to put/VB/put it/PRP/it here/RB/here except/IN/except that/DT/that there/EX/there is/VBZ/is no/DT/no space/NN/space /,/, so/RB/so we/PRP/we will/MD/will split/VB/split this/DT/this node/NNP/node. two/CD/two nodes/NNS/nodes created/NNP/created. 4/CD/4 /,/, 5/CD/5 go/NN/go to/TO/to the/DT/the left/NN/left node/NN/node 6/CD/6 /,/, 7/CD/7 to/TO/to the/DT/the right/NN/right node/NNP/node. we/PRP/we get/VBP/get rid/VBN/rid off/RP/off this/NNP/this. these/DT/these are/VBP/are the/DT/the 5/CD/5 children/NNS/children of/IN/of this/DT/this node/NN/node /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 20/CD/20 /CD/) so/RB/so if/IN/if the/DT/the parent/NN/parent node/NN/node does/VBZ/does not/RB/not have/VB/have sufficient/JJ/sufficient space/NN/space then/RB/then it/PRP/it is/VBZ/is split/NNP/split. so/RB/so we/PRP/we split/VBP/split the/DT/the parent/NN/parent node/NN/node in/IN/in to/TO/to two/NNP/two. 3/CD/3 and/CC/and 5/CD/5 will/MD/will go/VB/go to/TO/to the/DT/the smaller/JJR/smaller one/CD/one /,/, 8/CD/8 and/CC/and 10/CD/10 will/MD/will go/VB/go to/TO/to the/DT/the larger/JJR/larger one/CD/one that/WDT/that is/VBZ/is to/TO/to the/DT/the other/JJ/other node/NNP/node. i/PRP/i have/VBP/have 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 children/NNS/children and/CC/and they/PRP/they have/VBP/have to/TO/to be/VB/be made/VBN/made children/NNS/children of/IN/of these/DT/these guys/NNP/guys. and/CC/and one/CD/one of/IN/of the/DT/the smaller/JJR/smaller /NN/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that has/VBZ/has to/TO/to be/VB/be promoted/VBN/promoted up/RP/up because/IN/because when/WRB/when a/DT/a split/NN/split happens/VBZ/happens then/RB/then we/PRP/we take/VBP/take the/DT/the largest/JJS/largest key/JJ/key of/IN/of the/DT/the smaller/JJR/smaller node/NN/node and/CC/and promote/VB/promote it/PRP/it up/NNP/up. the/DT/the first/JJ/first two/CD/two children/NNS/children would/MD/would be/VB/be made/VBN/made the/DT/the children/NNS/children of/IN/of this/DT/this node/NNP/node. the/DT/the right/NN/right three/CD/three would/MD/would be/VB/be made/VBN/made the/DT/the children/NNS/children of/IN/of this/DT/this node/NNP/node. why/WRB/why two/CD/two of/IN/of this/DT/this and/CC/and three/CD/three of/IN/of this/DT/this ?/./? because/IN/because 5/CD/5 is/VBZ/is going/VBG/going to/TO/to be/VB/be promoted/VBN/promoted up/NNP/up. so/RB/so that/IN/that means/NNS/means there/EX/there is/VBZ/is only/RB/only one/CD/one key/JJ/key left/NN/left here/RB/here which/WDT/which means/VBZ/means that/DT/that this/DT/this can/MD/can have/VB/have only/RB/only 2/CD/2 children/NNP/children. the/DT/the first/JJ/first two/CD/two children/NNS/children will/MD/will go/VB/go here/RB/here /,/, 5/CD/5 is/VBZ/is going/VBG/going to/TO/to be/VB/be promoted/VBN/promoted up/RP/up so/RB/so this/DT/this will/MD/will have/VB/have two/CD/two keys/NNS/keys which/WDT/which means/VBZ/means 3/CD/3 children/NNP/children. so/RB/so these/DT/these 3/CD/3 would/MD/would be/VB/be its/PRP$/its children/NNS/children and/CC/and we/PRP/we promote/VBP/promote 5/CD/5 up/NNP/up. so/RB/so we/PRP/we split/VBP/split this/DT/this node/NN/node /:/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that we/PRP/we split/VBP/split first/RB/first then/RB/then we/PRP/we went/VBD/went and/CC/and split/NN/split the/DT/the parent/NN/parent and/CC/and now/RB/now we/PRP/we will/MD/will see/VB/see the/DT/the split/NN/split happening/VBG/happening here/RB/here also/NNP/also. because/IN/because this/DT/this does/VBZ/does not/RB/not have/VB/have any/DT/any space/NNP/space. so/RB/so we/PRP/we will/MD/will split/VB/split it/PRP/it in/IN/in to/TO/to 2/CD/2. the/DT/the 5/CD/5 and/CC/and 13/CD/13 would/MD/would go/VB/go in/IN/in to/TO/to one/CD/one node/NNP/node. 22/CD/22 and/CC/and 32/CD/32 will/MD/will go/VB/go to/TO/to the/DT/the other/JJ/other node/NNP/node. this/DT/this will/MD/will disappear/VB/disappear /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 41/CD/41 /CD/) and/CC/and now/RB/now 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 these/DT/these are/VBP/are five/CD/five children/NNP/children. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 35/CD/35 /CD/) so/RB/so 13/CD/13 will/MD/will get/VB/get promoted/VBN/promoted up/RP/up now/NNP/now. so/RB/so the/DT/the first/JJ/first two/CD/two will/MD/will become/VB/become children/NNS/children of/IN/of this/DT/this and/CC/and the/DT/the next/JJ/next three/CD/three would/MD/would become/VB/become children/NNS/children of/IN/of this/DT/this and/CC/and 13/CD/13 get/NN/get promoted/NNP/promoted. but/CC/but where/WRB/where does/VBZ/does it/PRP/it get/VB/get promoted/VBN/promoted ?/./? there/RB/there is/VBZ/is nothing/NN/nothing above/NNP/above. so/RB/so we/PRP/we will/MD/will create/VB/create a/DT/a new/JJ/new root/NN/root /,/, eventually/RB/eventually we/PRP/we may/MD/may have/VB/have to/TO/to create/VB/create a/DT/a new/JJ/new root/NNP/root. that/WDT/that is/VBZ/is what/WP/what going/VBG/going to/TO/to happen/VB/happen now/NNP/now. we/PRP/we create/VBP/create a/DT/a new/JJ/new root/NN/root /,/, 13/CD/13 goes/VBZ/goes up/RP/up there/EX/there and/CC/and these/DT/these two/CD/two become/NN/become the/DT/the children/NNS/children of/IN/of this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 40/CD/40 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 05/CD/05 /CD/) so/RB/so if/IN/if we/PRP/we create/VBP/create the/DT/the new/JJ/new root/NN/root the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree increases/NNS/increases by/IN/by one/NNP/one. you/PRP/you understand/VBP/understand the/DT/the procedure/NN/procedure so/RB/so you/PRP/you first/RB/first come/VBP/come down/RB/down the/DT/the tree/NN/tree till/IN/till you/PRP/you hit/VBD/hit a/DT/a leaf/NNP/leaf. you/PRP/you will/MD/will try/VB/try to/TO/to put/VB/put the/DT/the key/JJ/key there/EX/there /,/, if/IN/if there/EX/there is/VBZ/is space/NN/space nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. it/PRP/it is/VBZ/is very/RB/very simple/NNP/simple. if/IN/if there/EX/there is/VBZ/is no/DT/no space/NN/space then/RB/then you/PRP/you split/VBP/split that/IN/that node/NN/node and/CC/and then/RB/then we/PRP/we decided/VBD/decided that/IN/that the/DT/the two/CD/two lower/JJR/lower keys/NNS/keys will/MD/will go/VB/go to/TO/to one/CD/one node/NN/node and/CC/and two/CD/two higher/JJR/higher keys/NNS/keys will/MD/will go/VB/go to/TO/to the/DT/the other/JJ/other node/NNP/node. the/DT/the largest/JJS/largest key/JJ/key in/IN/in the/DT/the lower/JJR/lower part/NN/part would/MD/would be/VB/be promoted/VBN/promoted up/NNP/up. so/RB/so when/WRB/when we/PRP/we split/VBP/split there/RB/there are/VBP/are four/CD/four keys/NNS/keys in/IN/in a/DT/a node/NNP/node. there/RB/there were/VBD/were four/CD/four keys/NNS/keys /:/( hindi/NN/hindi conversation/NN/conversation /:/) to/TO/to which/WDT/which means/VBZ/means the/DT/the second/JJ/second key/JJ/key of/IN/of those/DT/those four/CD/four is/VBZ/is the/DT/the one/CD/one which/WDT/which will/MD/will get/VB/get promoted/VBN/promoted up/NNP/up. promoted/VBD/promoted up/RP/up means/NNS/means we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert the/DT/the key/JJ/key in/IN/in to/TO/to the/DT/the parent/NN/parent node/NNP/node. if/IN/if we/PRP/we are/VBP/are successful/JJ/successful if/IN/if there/EX/there is/VBZ/is a/DT/a space/NN/space no/DT/no problem/NN/problem /,/, otherwise/RB/otherwise repeat/JJ/repeat the/DT/the split/NN/split process/NN/process of/IN/of the/DT/the parent/NN/parent node/NNP/node. so/RB/so split/JJ/split it/PRP/it and/CC/and this/DT/this split/NN/split might/MD/might cascade/VB/cascade all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the root/NNP/root. if/IN/if it/PRP/it cascades/VBZ/cascades up/RP/up to/TO/to the/DT/the root/NN/root and/CC/and the/DT/the root/NN/root also/RB/also gets/VBZ/gets split/VBN/split then/RB/then we/PRP/we have/VBP/have to/TO/to create/VB/create the/DT/the new/JJ/new root/NNP/root. that/WDT/that is/VBZ/is it/NNP/it. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 33/CD/33 /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does insertion/NN/insertion take/VB/take ?/./? so/RB/so search/NN/search was/VBD/was very/RB/very clear/NNP/clear. for/IN/for search/NN/search we/PRP/we said/VBD/said it/PRP/it will/MD/will take/VB/take order/NN/order log/NN/log n/NN/n time/NNP/time. how/WRB/how many/JJ/many splits/NNS/splits can/MD/can be/VB/be there/RB/there in/IN/in the/DT/the process/NN/process of/IN/of insertion/NN/insertion ?/./? its/PRP$/its at/IN/at each/DT/each level/NN/level we/PRP/we might/MD/might be/VB/be doing/VBG/doing the/DT/the split/NNP/split. how/WRB/how much/JJ/much time/NN/time does/VBZ/does one/CD/one split/NN/split take/NN/take ?/./? how/WRB/how much/RB/much time/NN/time does/VBZ/does it/PRP/it take/VB/take for/IN/for me/PRP/me to/TO/to split/VB/split a/DT/a node/NN/node ?/./? i/PRP/i will/MD/will create/VB/create some/DT/some two/CD/two nodes/NNS/nodes /:/( hindi/NN/hindi conversation/NN/conversation /:/) constant/JJ/constant time/NN/time independent/NN/independent of/IN/of the/DT/the number/NN/number of/IN/of node/NNP/node. so/RB/so each/DT/each node/NN/node split/NN/split takes/VBZ/takes constant/NN/constant time/NNP/time. so/RB/so the/DT/the total/JJ/total time/NN/time is/VBZ/is order/NN/order log/NN/log n/NN/n /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 45/CD/45 /CD/) so/RB/so now/RB/now let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at deletion/NNP/deletion. so/RB/so suppose/RB/suppose i/PRP/i wanted/VBD/wanted to/TO/to delete/VB/delete 21/CD/21. first/JJ/first as/IN/as in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NN/tree /,/, first/JJ/first you/PRP/you have/VBP/have to/TO/to search/VB/search for/IN/for 21/CD/21. find/NN/find out/IN/out where/WRB/where the/DT/the key/JJ/key is/NNP/is. in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /,/, recall/NN/recall deletion/NN/deletion require/NN/require 3/CD/3 different/JJ/different cases/NNP/cases. if/IN/if the/DT/the key/JJ/key was/VBD/was at/IN/at the/DT/the leaf/NN/leaf then/RB/then we/PRP/we just/RB/just knock/VBP/knock out/RP/out the/DT/the leaf/NN/leaf /,/, nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. if/IN/if it/PRP/it was/VBD/was at/IN/at the/DT/the internal/JJ/internal node/NN/node then/RB/then you/PRP/you had/VBD/had to/TO/to distinguish/VB/distinguish between/IN/between one/CD/one child/NN/child and/CC/and two/CD/two child/NNP/child. the/DT/the one/CD/one child/NN/child case/NN/case is/VBZ/is not/RB/not really/RB/really happening/VBG/happening here/NNP/here. so/RB/so it/PRP/it is/VBZ/is only/RB/only two/CD/two child/NN/child case/NN/case that/WDT/that we/PRP/we have/VBP/have to/TO/to be/VB/be worried/VBN/worried about/NNP/about. if/IN/if it/PRP/it is/VBZ/is such/JJ/such an/DT/an internal/JJ/internal node/NN/node with/IN/with two/CD/two children/NNS/children then/RB/then what/WP/what did/VBD/did we/PRP/we do/VBP/do ?/./? we/PRP/we found/VBD/found the/DT/the successor/NN/successor or/CC/or predecessor/NN/predecessor of/IN/of that/DT/that key/JJ/key lets/NNS/lets say/VBP/say we/PRP/we found/VBD/found the/DT/the predecessor/NN/predecessor and/CC/and we/PRP/we move/VBP/move the/DT/the predecessor/NN/predecessor to/TO/to that/DT/that and/CC/and delete/JJ/delete the/DT/the predecessor/NNP/predecessor. that/IN/that is/VBZ/is what/WP/what we/PRP/we would/MD/would mean/NNP/mean. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do something/NN/something similar/JJ/similar here/NNP/here. let/NN/let us/PRP/us see/NNP/see. suppose/VBD/suppose i/PRP/i wanted/VBD/wanted to/TO/to delete/VB/delete 21/CD/21. so/RB/so 21/CD/21 there/EX/there is/VBZ/is no/DT/no problem/NN/problem because/IN/because 21/CD/21 is/VBZ/is in/IN/in a/DT/a node/NNP/node. we/PRP/we will/MD/will search/VB/search for/IN/for 21/CD/21. we/PRP/we come/VBP/come down/RB/down here/RB/here /,/, go/VBP/go right/RB/right /,/, go/RB/go left/VBN/left /,/, go/RB/go right/RB/right and/CC/and i/PRP/i find/VBP/find 21/CD/21 here/NNP/here. why/WRB/why is/VBZ/is there/RB/there no/DT/no problem/NN/problem in/IN/in deleting/NN/deleting 21/CD/21 ?/./? it/PRP/it is/VBZ/is in/IN/in a/DT/a leaf/NN/leaf node/NN/node /,/, i/PRP/i can/MD/can just/RB/just remove/VB/remove it/PRP/it and/CC/and i/PRP/i can/MD/can remove/VB/remove it/PRP/it without/IN/without violating/VBG/violating the/DT/the property/NN/property of/IN/of the/DT/the 2-4/CD/2-4 tree/NNP/tree. in/IN/in a/DT/a 2-4/CD/2-4 tree/NN/tree we/PRP/we require/VBP/require each/DT/each node/NN/node has/VBZ/has at/IN/at least/JJS/least one/CD/one key/JJ/key and/CC/and at/IN/at most/JJS/most three/CD/three keys/NNP/keys. so/RB/so after/IN/after deleting/VBG/deleting /,/, this/DT/this will/MD/will still/RB/still continue/VB/continue to/TO/to have/VB/have one/CD/one key/JJ/key /,/, so/RB/so no/DT/no problem/NNP/problem. that/IN/that is/VBZ/is what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/NNP/happen. i/PRP/i have/VBP/have not/RB/not shown/VBN/shown the/DT/the process/NN/process but/CC/but this/DT/this 21/CD/21 will/MD/will get/VB/get deleted/VBN/deleted /,/, we/PRP/we just/RB/just knock/VBP/knock it/PRP/it out/RP/out from/IN/from here/RB/here /,/, nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. if/IN/if the/DT/the key/JJ/key to/TO/to be/VB/be deleted/VBN/deleted is/VBZ/is an/DT/an internal/JJ/internal node/NN/node /,/, is/VBZ/is at/IN/at an/DT/an internal/JJ/internal node/NNP/node. for/IN/for instance/NN/instance i/PRP/i was/VBD/was trying/VBG/trying to/TO/to delete/VB/delete 25/CD/25. i/PRP/i search/VBP/search for/IN/for 25/CD/25 /,/, i/PRP/i find/VBP/find 25/CD/25 right/NN/right here/NNP/here. what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to swap/VB/swap it/PRP/it with/IN/with its/PRP$/its predecessor/NNP/predecessor. what/WP/what is/VBZ/is the/DT/the predecessor/NN/predecessor of/IN/of 25/CD/25 ?/./? how/WRB/how do/VBP/do i/PRP/i find/VBP/find the/DT/the predecessor/NN/predecessor of/IN/of 25/CD/25 in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree ?/./? i/PRP/i will/MD/will go/VB/go left/VBN/left and/CC/and then/RB/then keep/VB/keep going/VBG/going right/RB/right /:/( hindi/NN/hindi conversation/NN/conversation /:/) then/RB/then i/PRP/i find/VBP/find the/DT/the largest/JJS/largest key/JJ/key in/IN/in this/DT/this node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 35/CD/35 /CD/) i/PRP/i find/VBP/find the/DT/the largest/JJS/largest key/JJ/key its/PRP$/its 24/CD/24 /,/, so/RB/so predecessor/NN/predecessor of/IN/of 25/CD/25 has/VBZ/has to/TO/to be/VB/be 24/CD/24. i/PRP/i am/VBP/am going/VBG/going to/TO/to swap/VB/swap this/DT/this two/NNP/two. then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to remove/VB/remove the/DT/the 25/CD/25 from/IN/from here/NNP/here. this/DT/this is/VBZ/is a/DT/a same/JJ/same thing/NN/thing /,/, i/PRP/i can/MD/can remove/VB/remove the/DT/the 25/CD/25 from/IN/from here/NNP/here. why/WRB/why /,/, because/IN/because its/PRP$/its a/DT/a leaf/NN/leaf already/NNP/already. there/EX/there are/VBP/are two/CD/two keys/NNS/keys in/IN/in the/DT/the leaf/NN/leaf /,/, so/RB/so if/IN/if i/PRP/i remove/VBP/remove one/CD/one there/EX/there is/VBZ/is no/DT/no problem/NNP/problem. note/NN/note that/IN/that the/DT/the predecessor/NN/predecessor will/MD/will always/RB/always be/VB/be in/IN/in the/DT/the leaf/NN/leaf in/IN/in this/DT/this case/NNP/case. not/RB/not in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. let/NN/let us/PRP/us check/VBP/check this/DT/this point/NN/point out/NNP/out. in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NN/tree /,/, the/DT/the predecessor/NN/predecessor of/IN/of a/DT/a node/NN/node need/NN/need not/RB/not be/VB/be a/DT/a leaf/NN/leaf node/NNP/node. suppose/NN/suppose this/DT/this was/VBD/was my/PRP$/my binary/NN/binary search/NN/search tree/NN/tree /,/, this/DT/this was/VBD/was a/DT/a node/NN/node 10/CD/10. i/PRP/i am/VBP/am finding/VBG/finding the/DT/the predecessor/NN/predecessor so/RB/so i/PRP/i go/VBP/go left/VBN/left and/CC/and then/RB/then i/PRP/i go/VBP/go right/NNP/right. this/DT/this could/MD/could have/VB/have been/VBN/been my/PRP$/my binary/JJ/binary search/NN/search tree/NNP/tree. what/WP/what would/MD/would be/VB/be the/DT/the predecessor/NN/predecessor of/IN/of 10/CD/10 ?/./? it/PRP/it would/MD/would be/VB/be this/DT/this guy/NN/guy /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 15/CD/15 /CD/) /./. this/DT/this is/VBZ/is not/RB/not a/DT/a leaf/NN/leaf node/NN/node but/CC/but here/RB/here the/DT/the predecessor/NN/predecessor will/MD/will always/RB/always be/VB/be a/DT/a leaf/NN/leaf node/NNP/node. why/WRB/why ?/./? how/WRB/how do/VBP/do i/PRP/i find/VBP/find the/DT/the predecessor/NN/predecessor ?/./? i/PRP/i go/VBP/go left/VBN/left and/CC/and then/RB/then keep/VB/keep going/VBG/going right/RB/right /,/, keep/VB/keep taking/VBG/taking the/DT/the right/NN/right most/JJS/most child/NNP/child. so/RB/so when/WRB/when will/MD/will i/VB/i stop/VB/stop ?/./? when/WRB/when there/EX/there is/VBZ/is no/DT/no right/NN/right child/NNP/child. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean when/WRB/when there/EX/there is/VBZ/is no/DT/no right/NN/right child/NN/child ?/./? when/WRB/when my/PRP$/my right/NN/right child/NN/child is/VBZ/is null/JJ/null then/RB/then that/IN/that means/NNS/means all/DT/all the/DT/the children/NNS/children are/VBP/are null/NNP/null. because/IN/because i/PRP/i can/MD/can not/RB/not have/VB/have a/DT/a situation/NN/situation in/IN/in which/WDT/which there/EX/there is/VBZ/is a/DT/a node/NN/node which/WDT/which has/VBZ/has a/DT/a key/JJ/key /,/, it/PRP/it has/VBZ/has no/DT/no right/NN/right child/NN/child but/CC/but it/PRP/it has/VBZ/has left/VBN/left child/NNP/child. this/DT/this is/VBZ/is not/RB/not permitted/VBN/permitted at/IN/at all/NNP/all. if/IN/if there/EX/there is/VBZ/is a/DT/a key/JJ/key then/RB/then we/PRP/we will/MD/will have/VB/have two/CD/two children/NNS/children /,/, if/IN/if there/EX/there were/VBD/were two/CD/two keys/NNS/keys then/RB/then we/PRP/we will/MD/will have/VB/have three/CD/three children/NNS/children and/CC/and so/RB/so on/NNP/on. so/IN/so my/PRP$/my predecessor/NN/predecessor would/MD/would always/RB/always been/VBN/been a/DT/a leaf/NN/leaf /,/, so/RB/so i/PRP/i would/MD/would just/RB/just remove/VB/remove that/IN/that leaf/NN/leaf node/NN/node and/CC/and i/PRP/i would/MD/would be/VB/be done/NNP/done. so/RB/so that/IN/that is/VBZ/is what/WP/what i/PRP/i do/VBP/do. recall/JJ/recall i/PRP/i was/VBD/was deleting/VBG/deleting 25/CD/25 /,/, so/IN/so i/PRP/i swapped/VBD/swapped 24/CD/24 and/CC/and 25/CD/25 and/CC/and now/RB/now i/PRP/i have/VBP/have to/TO/to just/RB/just get/VB/get rid/JJ/rid off/IN/off 25/CD/25. so/RB/so i/PRP/i will/MD/will get/VB/get rid/JJ/rid off/IN/off 25/CD/25 by/IN/by that/NNP/that. so/RB/so 25/CD/25 disappeared/VBN/disappeared from/IN/from here/NNP/here. it/PRP/it is/VBZ/is a/DT/a very/RB/very simple/JJ/simple case/NNP/case. as/IN/as you/PRP/you can/MD/can imagine/VB/imagine /,/, problem/NN/problem were/VBD/were arising/VBG/arising when/WRB/when i/PRP/i am/VBP/am in/IN/in a/DT/a leaf/NN/leaf /,/, i/PRP/i am/VBP/am trying/VBG/trying to/TO/to delete/VB/delete a/DT/a key/JJ/key from/IN/from a/DT/a leaf/NN/leaf which/WDT/which has/VBZ/has only/RB/only that/IN/that one/CD/one key/JJ/key in/IN/in it/NNP/it. then/RB/then that/IN/that leaf/NN/leaf becomes/VBZ/becomes empty/JJ/empty so/RB/so what/WP/what do/VBP/do i/PRP/i do/VBP/do now/RB/now ?/./? so/RB/so let/VB/let us/PRP/us look/VB/look at/IN/at that/NNP/that. if/IN/if after/IN/after deleting/VBG/deleting a/DT/a key/JJ/key /,/, a/DT/a node/NN/node becomes/VBZ/becomes empty/JJ/empty then/RB/then we/PRP/we borrow/VBP/borrow a/DT/a key/JJ/key from/IN/from its/PRP$/its sibling/NNP/sibling. let/NN/let us/PRP/us see/VBP/see what/WP/what that/IN/that means/NNP/means. suppose/NN/suppose i/PRP/i am/VBP/am trying/VBG/trying to/TO/to delete/VB/delete 20/CD/20. so/RB/so i/PRP/i search/VBP/search for/IN/for 20/CD/20 /,/, i/PRP/i come/VBP/come down/RB/down in/IN/in this/DT/this manner/NNP/manner. i/PRP/i reach/VBP/reach here/RB/here /,/, now/RB/now if/IN/if i/PRP/i delete/VBP/delete 20/CD/20. so/RB/so 20/CD/20 is/VBZ/is removed/VBN/removed /,/, problem/NN/problem is/VBZ/is this/DT/this is/VBZ/is an/DT/an empty/NN/empty node/NN/node not/RB/not permitted/NNP/permitted. what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? borrow/NN/borrow from/IN/from sibling/NNP/sibling. what/WP/what does/VBZ/does borrow/NN/borrow from/IN/from sibling/VBG/sibling mean/JJ/mean ?/./? this/DT/this guy/NN/guy has/VBZ/has only/RB/only one/CD/one sibling/NNP/sibling. so/RB/so can/MD/can i/VB/i borrow/NN/borrow 15/CD/15 from/IN/from here/RB/here to/TO/to here/RB/here ?/./? no/DT/no /,/, it/PRP/it is/VBZ/is disaster/JJR/disaster because/IN/because search/NN/search property/NN/property is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be valid/NNP/valid. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do something/NN/something like/IN/like a/DT/a rotation/NN/rotation like/IN/like we/PRP/we did/VBD/did in/IN/in an/DT/an avl/NN/avl tree/NNP/tree. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? 15/CD/15 goes/VBZ/goes up/RP/up and/CC/and 18/CD/18 comes/NNS/comes down/NNP/down. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 23/CD/23 /CD/) then/RB/then the/DT/the next/JJ/next thing/NN/thing you/PRP/you are/VBP/are wondering/VBG/wondering is/VBZ/is /,/, if/IN/if i/PRP/i can/MD/can not/RB/not borrow/VB/borrow from/IN/from my/PRP$/my sibling/NNP/sibling. when/WRB/when can/MD/can i/VB/i not/RB/not borrow/VB/borrow from/IN/from my/PRP$/my sibling/NN/sibling ?/./? when/WRB/when the/DT/the sibling/NN/sibling has/VBZ/has only/RB/only one/CD/one key/JJ/key in/IN/in it/NNP/it. for/IN/for instance/NN/instance now/RB/now if/IN/if i/PRP/i were/VBD/were trying/VBG/trying to/TO/to delete/VB/delete 18/CD/18 then/RB/then that/IN/that would/MD/would be/VB/be a/DT/a problem/NNP/problem. let/NN/let see/NNP/see. if/IN/if sibling/VBG/sibling has/VBZ/has only/RB/only one/CD/one key/JJ/key then/RB/then we/PRP/we merge/VBP/merge with/IN/with the/DT/the sibling/VBG/sibling that/IN/that is/VBZ/is we/PRP/we combine/VBP/combine with/IN/with the/DT/the sibling/NNP/sibling. suppose/NN/suppose i/PRP/i was/VBD/was trying/VBG/trying to/TO/to delete/VB/delete 23/CD/23. so/RB/so 23/CD/23 is/VBZ/is here/RB/here if/IN/if i/PRP/i delete/VBP/delete it/PRP/it this/DT/this is/VBZ/is an/DT/an empty/NN/empty node/NNP/node. so/RB/so i/PRP/i try/VBP/try to/TO/to borrow/VB/borrow from/IN/from a/DT/a sibling/NNP/sibling. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 44/CD/44 /CD/) there/EX/there is/VBZ/is a/DT/a small/JJ/small catch/NN/catch here/RB/here /./( hindi/NN/hindi conversation/NN/conversation /:/) one/CD/one and/CC/and two/CD/two /,/, but/CC/but i/PRP/i can/MD/can not/RB/not borrow/VB/borrow from/IN/from this/DT/this one/NNP/one. you/PRP/you see/VBP/see why/WRB/why it/PRP/it is/NNP/is. because/IN/because if/IN/if i/PRP/i have/VBP/have to/TO/to promote/VB/promote something/NN/something then/RB/then 28/CD/28 is/VBZ/is going/VBG/going to/TO/to come/VB/come down/RP/down but/CC/but this/DT/this going/NN/going to/TO/to jumble/JJ/jumble this/NNP/this. so/RB/so when/WRB/when i/PRP/i say/VBP/say borrow/NN/borrow from/IN/from a/DT/a sibling/NN/sibling i/PRP/i really/RB/really mean/JJ/mean and/CC/and adjacent/NN/adjacent sibling/NNP/sibling. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 35/CD/35 /CD/) i/PRP/i can/MD/can borrow/VB/borrow from/IN/from here/RB/here /,/, so/RB/so when/WRB/when i/PRP/i am/VBP/am here/RB/here i/PRP/i can/MD/can borrow/VB/borrow from/IN/from here/RB/here /,/, if/IN/if i/PRP/i am/VBP/am here/RB/here i/PRP/i can/MD/can borrow/VB/borrow from/IN/from here/NNP/here. if/IN/if i/PRP/i am/VBP/am here/RB/here i/PRP/i can/MD/can borrow/VB/borrow from/IN/from here/RB/here or/CC/or from/IN/from here/NNP/here. but/CC/but here/RB/here i/PRP/i can/MD/can only/RB/only borrow/VB/borrow from/IN/from this/DT/this guy/NNP/guy. did/VBD/did everyone/NN/everyone understand/NN/understand why/WRB/why this/DT/this is/VBZ/is required/VBN/required ?/./? i/PRP/i try/VBP/try to/TO/to borrow/VB/borrow from/IN/from here/RB/here but/CC/but if/IN/if i/PRP/i borrow/VBP/borrow from/IN/from here/RB/here that/IN/that is/VBZ/is 26/CD/26 goes/VBZ/goes up/RP/up and/CC/and 24/CD/24 come/NN/come down/IN/down this/DT/this is/VBZ/is going/VBG/going to/TO/to become/VB/become empty/NNP/empty. so/RB/so that/IN/that is/VBZ/is not/RB/not going/VBG/going to/TO/to solve/VB/solve our/PRP$/our problem/NNP/problem. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is merge/NNP/merge. these/DT/these two/CD/two are/VBP/are going/VBG/going to/TO/to merge/VB/merge /,/, combine/NN/combine but/CC/but if/IN/if these/DT/these two/CD/two combine/NN/combine then/RB/then the/DT/the number/NN/number of/IN/of children/NNS/children here/RB/here of/IN/of this/DT/this guy/NN/guy will/MD/will become/VB/become two/CD/two which/WDT/which means/NNS/means /VBP/( hindi/NN/hindi conversation/NN/conversation /:/) /./. so/RB/so the/DT/the key/JJ/key in/IN/in the/DT/the parent/NN/parent node/NN/node which/WDT/which separates/VBZ/separates these/DT/these two/CD/two siblings/NNS/siblings is/VBZ/is this/DT/this key/NN/key /,/, which/WDT/which is/VBZ/is separating/VBG/separating these/DT/these two/CD/two siblings/NNS/siblings is/VBZ/is going/VBG/going to/TO/to move/VB/move down/RP/down in/IN/in to/TO/to the/DT/the merge/NN/merge node/NNP/node. let/NN/let us/PRP/us see/VBP/see /,/, i/PRP/i create/VBP/create a/DT/a new/JJ/new node/NN/node which/WDT/which is/VBZ/is the/DT/the merge/NN/merge of/IN/of these/DT/these two/CD/two nodes/NNP/nodes. this/DT/this 24/CD/24 moves/NNS/moves down/IN/down and/CC/and this/DT/this 26/CD/26 also/NNP/also. these/DT/these are/VBP/are the/DT/the only/JJ/only keys/NNS/keys in/IN/in the/DT/the new/JJ/new node/NNP/node. because/IN/because there/EX/there was/VBD/was one/CD/one here/RB/here /,/, there/EX/there was/VBD/was none/NN/none here/RB/here and/CC/and there/EX/there was/VBD/was none/NN/none here/NNP/here. two/CD/two keys/NNS/keys in/IN/in all/DT/all so/RB/so they/PRP/they come/VBP/come and/CC/and sit/NN/sit here/NNP/here. these/DT/these two/CD/two will/MD/will now/RB/now disappear/VB/disappear and/CC/and this/DT/this becomes/VBZ/becomes the/DT/the child/NN/child of/IN/of this/DT/this node/NN/node /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. now/RB/now what/WP/what can/MD/can happen/VB/happen ?/./? essentially/RB/essentially what/WP/what we/PRP/we have/VBP/have done/VBN/done is/VBZ/is we/PRP/we said/VBD/said we/PRP/we are/VBP/are going/VBG/going to/TO/to one/CD/one of/IN/of the/DT/the keys/NNS/keys from/IN/from the/DT/the parent/NN/parent node/NN/node is/VBZ/is going/VBG/going to/TO/to come/VB/come down/NNP/down. but/CC/but what/WP/what if/IN/if there/EX/there was/VBD/was only/RB/only one/CD/one key/JJ/key in/IN/in the/DT/the parent/NN/parent node/NNP/node. the/DT/the same/JJ/same as/IN/as before/IN/before /CD/( hindi/NN/hindi conversation/NN/conversation /:/) and/CC/and so/RB/so on/NNP/on. so/IN/so moving/VBG/moving the/DT/the key/JJ/key down/IN/down from/IN/from the/DT/the parent/NN/parent node/NN/node corresponds/NNS/corresponds to/TO/to deleting/VBG/deleting the/DT/the key/JJ/key from/IN/from the/DT/the parent/NN/parent node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 02/CD/02 /CD/) this/DT/this procedure/NN/procedure will/MD/will be/VB/be the/DT/the same/JJ/same as/IN/as that/DT/that we/PRP/we have/VBP/have done/VBN/done so/RB/so far/RB/far in/IN/in this/DT/this leaf/NN/leaf node/NNP/node. but/CC/but it/PRP/it can/MD/can lead/VB/lead to/TO/to the/DT/the cascading/NNP/cascading. cascading/NN/cascading as/IN/as in/IN/in /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) we/PRP/we will/MD/will see/VB/see that/IN/that happening/VBG/happening in/IN/in this/DT/this example/NN/example /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. this/DT/this is/VBZ/is the/DT/the only/JJ/only child/NN/child left/VBN/left of/IN/of its/PRP$/its parent/NN/parent /:/( hindi/NN/hindi conversation/NN/conversation /:/) sibling/VBG/sibling is/VBZ/is also/RB/also only/RB/only one/CD/one key/NNP/key. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to merge/VB/merge with/IN/with the/DT/the sibling/NNP/sibling. we/PRP/we are/VBP/are going/VBG/going to/TO/to create/VB/create a/DT/a new/JJ/new node/NN/node which/WDT/which is/VBZ/is going/VBG/going to/TO/to get/VB/get the/DT/the sibling/NN/sibling key/NN/key and/CC/and the/DT/the key/JJ/key from/IN/from the/DT/the parent/NN/parent which/WDT/which is/VBZ/is 22/CD/22. this/DT/this is/VBZ/is the/DT/the situation/NN/situation now/RB/now and/CC/and we/PRP/we will/MD/will delete/VB/delete this/DT/this and/CC/and this/DT/this /NN/( hindi/NN/hindi conversation/NN/conversation /:/) /./. because/IN/because of/IN/of these/DT/these deletions/NNS/deletions /,/, height/VBD/height can/MD/can reduce/VB/reduce by/IN/by one/NNP/one. after/IN/after all/DT/all we/PRP/we said/VBD/said height/VBN/height /-NONE-/( hindi/NN/hindi conversation/NN/conversation /:/) log4/NNP/log4 n/NN/n is/VBZ/is less/JJR/less than/IN/than what/WP/what it/PRP/it was/VBD/was /,/, then/RB/then that/IN/that means/NNS/means height/VBD/height has/VBZ/has to/TO/to shrink/VB/shrink and/CC/and that/IN/that would/MD/would happen/NNP/happen. there/RB/there are/VBP/are just/RB/just very/RB/very few/JJ/few concepts/NNS/concepts that/WDT/that we/PRP/we really/RB/really handled/VBD/handled and/CC/and insertion/NN/insertion /:/( hindi/NN/hindi conversation/NN/conversation /:/) or/CC/or deletion/NN/deletion /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. /:/( hindi/NN/hindi conversation/NN/conversation /:/) no/DT/no point/NN/point is/VBZ/is doing/VBG/doing that/NNP/that. so/RB/so first/JJ/first you/PRP/you try/VBP/try to/TO/to borrow/VB/borrow if/IN/if not/RB/not successful/JJ/successful then/RB/then you/PRP/you merge/NNP/merge. so/RB/so let/VB/let us/PRP/us conclude/VBP/conclude today/NN/today ?/./? s/NNS/s discussion/NNP/discussion. height/NN/height of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree we/PRP/we have/VBP/have seen/VBN/seen is/VBZ/is log/JJ/log n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 15/CD/15 /CD/) this/DT/this would/MD/would actually/RB/actually be/VB/be a/DT/a theta/NN/theta of/IN/of log/NN/log n/NN/n because/IN/because it/PRP/it is/VBZ/is at/IN/at least/JJS/least log4n/NNP/log4n and/CC/and at/IN/at most/JJS/most log2n/NNP/log2n. so/RB/so as/IN/as far/RB/far as/IN/as deletion/NN/deletion was/VBD/was concerned/VBN/concerned we/PRP/we have/VBP/have not/RB/not looked/VBN/looked at/IN/at running/NN/running time/NN/time for/IN/for deletion/NN/deletion yet/NNP/yet. but/CC/but you/PRP/you can/MD/can see/VB/see that/IN/that is/VBZ/is also/RB/also log/JJ/log n/NNP/n. why/WRB/why ?/./? it/PRP/it was/VBD/was first/JJ/first we/PRP/we come/VBP/come down/RB/down the/DT/the tree/NN/tree to/TO/to search/NN/search for/IN/for the/DT/the key/JJ/key that/IN/that is/VBZ/is log/JJ/log n/NN/n and/CC/and then/RB/then we/PRP/we keep/VBP/keep moving/VBG/moving back/RB/back up/NNP/up. at/IN/at every/DT/every step/NN/step we/PRP/we might/MD/might go/VB/go all/RB/all the/DT/the way/NN/way back/RB/back up/IN/up to/TO/to the/DT/the root/NNP/root. so/RB/so another/DT/another log/NN/log n/NN/n step/NNP/step. each/DT/each step/NN/step where/WRB/where either/DT/either borrowing/VBG/borrowing one/CD/one from/IN/from the/DT/the sibling/NN/sibling or/CC/or we/PRP/we are/VBP/are merging/VBG/merging with/IN/with the/DT/the sibling/NNP/sibling. but/CC/but all/DT/all of/IN/of them/PRP/them are/VBP/are constant/JJ/constant time/NN/time operations/NNP/operations. borrowing/NN/borrowing would/MD/would correspond/VB/correspond to/TO/to /VB/( hindi/NN/hindi conversation/NN/conversation /:/) constant/JJ/constant time/NN/time /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. so/RB/so what/WP/what you/PRP/you have/VBP/have seen/VBN/seen is/VBZ/is that/IN/that search/NN/search /,/, insertion/NN/insertion and/CC/and deletion/NN/deletion all/DT/all take/NN/take order/NN/order log/NN/log n/NN/n time/NN/time in/IN/in a/DT/a 2-4/CD/2-4 tree/NNP/tree. so/RB/so why/WRB/why did/VBD/did we/PRP/we come/VBP/come up/RP/up with/IN/with this/DT/this very/RB/very complicated/VBD/complicated data/NNS/data structure/NN/structure ?/./? why/WRB/why are/VBP/are we/PRP/we doing/VBG/doing all/DT/all of/IN/of this/DT/this ?/./? there/EX/there is/VBZ/is another/DT/another reason/NN/reason /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see another/DT/another data/NN/data structure/NN/structure called/VBN/called red/VBN/red black/RP/black trees/NNP/trees. and/CC/and that/IN/that is/VBZ/is also/RB/also very/RB/very fast/RB/fast data/NNS/data structure/VBP/structure for/IN/for implementing/VBG/implementing dictionaries/NNP/dictionaries. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see is/VBZ/is that/IN/that what/WP/what we/PRP/we learnt/VBP/learnt about/IN/about 2-4/CD/2-4 trees/NNS/trees today/NN/today is/VBZ/is going/VBG/going to/TO/to be/VB/be very/RB/very helpful/JJ/helpful in/IN/in understanding/NN/understanding how/WRB/how the/DT/the red/VBN/red black/NN/black trees/NNS/trees functions/NNP/functions. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at this/DT/this in/IN/in next/JJ/next class/NNP/class. so/RB/so with/IN/with we/PRP/we will/MD/will end/VB/end today/NN/today ?/./? s/NNS/s discussion/NN/discussion on/IN/on 2-4/CD/2-4 trees/NNP/trees. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 14/CD/14 red/VBD/red black/JJ/black trees/NNS/trees in/IN/in today/NN/today ?/./? s/NNS/s class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to talking/VBG/talking about/IN/about red/JJ/red black/NN/black trees/NNP/trees. we/PRP/we are/VBP/are going/VBG/going to/TO/to spend/VB/spend some/DT/some time/NN/time discussing/VBG/discussing about/IN/about red/JJ/red black/NN/black trees/NNS/trees /,/, what/WP/what is/VBZ/is the/DT/the relation/NN/relation to/TO/to 2-4/CD/2-4 trees/NNS/trees and/CC/and what/WP/what will/MD/will discuss/VB/discuss next/JJ/next and/CC/and then/RB/then we/PRP/we will/MD/will see/VB/see the/DT/the process/NN/process of/IN/of deletion/NN/deletion in/IN/in red/JJ/red black/NN/black trees/NNP/trees. it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be slightly/RB/slightly more/JJR/more involved/VBN/involved process/NN/process so/IN/so we/PRP/we will/MD/will be/VB/be spending/NN/spending fair/NN/fair bit/NN/bit of/IN/of class/NN/class on/IN/on deletion/NN/deletion /,/, in/IN/in the/DT/the next/JJ/next we/PRP/we are/VBP/are going/VBG/going to/TO/to handle/VB/handle insertion/NN/insertion in/IN/in red/JJ/red black/NN/black trees/NNP/trees. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 17/CD/17 /CD/) so/RB/so what/WP/what is/VBZ/is a/DT/a red/VBN/red black/NN/black tree/NN/tree ?/./? so/RB/so red/VBN/red black/JJ/black tree/NN/tree first/RB/first it/PRP/it ?/./? s/NNS/s a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. so/RB/so we/PRP/we take/VBP/take the/DT/the node/NN/node of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NN/tree and/CC/and we/PRP/we color/VBP/color them/PRP/them red/VBD/red and/CC/and black/JJ/black and/CC/and then/RB/then it/PRP/it becomes/VBZ/becomes the/DT/the red/NN/red black/NN/black tree/NN/tree subject/NN/subject to/TO/to certain/JJ/certain properties/NNP/properties. so/RB/so first/JJ/first the/DT/the root/NN/root has/VBZ/has to/TO/to be/VB/be colored/VBN/colored black/-NONE-/black. that/IN/that is/VBZ/is important/NNP/important. a/DT/a red/JJ/red node/NN/node can/MD/can have/VB/have only/RB/only black/JJ/black children/NNS/children that/WDT/that is/VBZ/is another/DT/another property/NN/property that/IN/that a/DT/a red/NN/red black/NN/black tree/NN/tree has/VBZ/has to/TO/to have/NNP/have. if/IN/if there/EX/there is/VBZ/is in/IN/in a/DT/a red/NN/red node/NN/node then/RB/then its/PRP$/its children/NNS/children have/VBP/have to/TO/to be/VB/be black/NNP/black. now/RB/now one/CD/one thing/NN/thing we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is in/IN/in our/PRP$/our binary/JJ/binary search/NN/search tree/NN/tree if/IN/if a/DT/a node/NN/node does/VBZ/does not/RB/not have/VB/have left/VBN/left or/CC/or a/DT/a right/NN/right child/NN/child /,/, so/RB/so we/PRP/we will/MD/will create/VB/create the/DT/the left/NN/left or/CC/or a/DT/a right/NN/right child/NN/child by/IN/by creating/NN/creating what/WP/what we/PRP/we will/MD/will call/VB/call an/DT/an external/JJ/external node/NNP/node. and/CC/and i/PRP/i will/MD/will show/VB/show you/PRP/you what/WP/what i/PRP/i mean/VBP/mean by/IN/by that/NNP/that. we/PRP/we will/MD/will create/VB/create an/DT/an additional/JJ/additional left/NN/left or/CC/or right/RB/right child/JJ/child /,/, if/IN/if it/PRP/it ?/./? s/NNS/s a/DT/a leaf/NN/leaf node/NN/node of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NN/tree then/RB/then it/PRP/it does/VBZ/does not/RB/not have/VB/have either/DT/either a/DT/a left/NN/left child/NN/child or/CC/or a/DT/a right/NN/right child/NNP/child. so/RB/so in/IN/in which/WDT/which case/NN/case we/PRP/we will/MD/will put/VB/put in/IN/in a/DT/a two/CD/two external/JJ/external nodes/NNS/nodes below/IN/below that/DT/that leaf/NN/leaf node/NN/node and/CC/and make/VB/make it/PRP/it the/DT/the left/NN/left and/CC/and the/DT/the right/NN/right child/NNP/child. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 40/CD/40 /CD/) so/RB/so external/JJ/external nodes/NNS/nodes we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to color/VB/color them/NNP/them. so/RB/so it/PRP/it ?/./? s/NNS/s only/RB/only the/DT/the non-external/JJ/non-external node/NN/node /,/, original/JJ/original nodes/NNS/nodes of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NN/tree that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to color/VB/color red/VBN/red or/CC/or black/NNP/black. we/PRP/we define/VBP/define the/DT/the black/JJ/black depth/NN/depth of/IN/of an/DT/an external/JJ/external node/NN/node as/IN/as the/DT/the number/NN/number of/IN/of black/JJ/black /,/, its/PRP$/its number/NN/number of/IN/of black/JJ/black ancestor/NN/ancestor ?/./? s/NNP/s. so/RB/so what/WP/what that/IN/that means/VBZ/means is/VBZ/is we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take an/DT/an external/JJ/external node/NN/node and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to walk/VB/walk up/RP/up the/DT/the external/JJ/external node/NN/node towards/NNS/towards the/DT/the root/NN/root and/CC/and the/DT/the number/NN/number of/IN/of black/JJ/black nodes/NNS/nodes we/PRP/we encounter/VBP/encounter is/VBZ/is the/DT/the black/JJ/black depth/NN/depth of/IN/of this/DT/this external/JJ/external node/NNP/node. and/CC/and the/DT/the one/CD/one key/JJ/key property/NN/property of/IN/of the/DT/the red/NN/red black/NN/black tree/NN/tree is/VBZ/is going/VBG/going to/TO/to be/VB/be that/IN/that every/DT/every external/JJ/external node/NN/node has/VBZ/has the/DT/the same/JJ/same black/NN/black depth/NN/depth and/CC/and that/IN/that we/PRP/we will/MD/will also/RB/also refer/VB/refer to/TO/to as/RB/as the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this tree/NNP/tree. so/RB/so lots/VBZ/lots of/IN/of definition/NN/definition but/CC/but we/PRP/we will/MD/will see/VB/see what/WP/what this/DT/this means/VBZ/means /,/, a/DT/a couple/NN/couple of/IN/of examples/NNP/examples. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 42/CD/42 /CD/) so/RB/so this/DT/this is/VBZ/is two/CD/two examples/NNS/examples of/IN/of red/VBN/red black/JJ/black trees/NNP/trees. so/RB/so let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the one/CD/one here/NNP/here. so/RB/so what/WP/what do/VBP/do we/PRP/we have/VB/have ?/./? this/DT/this is/VBZ/is the/DT/the binary/JJ/binary search/NN/search tree/NN/tree on/IN/on 5/CD/5 nodes/NNS/nodes i/PRP/i have/VBP/have colored/VBN/colored the/DT/the nodes/NNS/nodes black/VBP/black and/CC/and red/NNP/red. the/DT/the root/NN/root is/VBZ/is black/JJ/black /,/, a/DT/a red/VBN/red node/NN/node has/VBZ/has only/RB/only black/JJ/black children/NNS/children /,/, black/VBP/black node/NN/node can/MD/can have/VB/have black/JJ/black or/CC/or red/VBN/red children/NNP/children. but/CC/but a/DT/a red/VBN/red node/NN/node can/MD/can have/VB/have only/RB/only black/JJ/black children/NNP/children. as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this node/NN/node does/VBZ/does not/RB/not have/VB/have any/DT/any left/VBN/left or/CC/or right/RB/right child/NNP/child. this/DT/this does/VBZ/does not/RB/not have/VB/have any/DT/any left/VBN/left right/NN/right child/NN/child ;/:/; this/DT/this does/VBZ/does not/RB/not have/VB/have any/DT/any left/VBN/left or/CC/or right/RB/right child/NNP/child. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to add/VB/add them/PRP/them /:/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 20/CD/20 /CD/) /./. these/DT/these i/PRP/i will/MD/will call/VB/call external/JJ/external nodes/NNS/nodes /,/, they/PRP/they are/VBP/are not/RB/not colored/NNP/colored. so/RB/so all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes in/IN/in this/DT/this class/NN/class today/NN/today will/MD/will be/VB/be shown/VBN/shown with/IN/with the/DT/the square/JJ/square boxes/NNP/boxes. now/RB/now what/WP/what is/VBZ/is the/DT/the black/JJ/black depth/NN/depth of/IN/of this/DT/this external/JJ/external node/NN/node ?/./? 1/CD/1 /,/, 2/CD/2. it/PRP/it is/VBZ/is the/DT/the 2/CD/2 ancestors/NNS/ancestors which/WDT/which are/VBP/are black/RB/black /,/, similarly/RB/similarly the/DT/the black/JJ/black depth/NN/depth of/IN/of this/DT/this are/VBP/are external/JJ/external node/NN/node is/VBZ/is 2/CD/2 /,/, of/IN/of this/DT/this is/VBZ/is 2/CD/2 /,/, of/IN/of this/DT/this is/VBZ/is 2/CD/2 /,/, of/IN/of this/DT/this is/VBZ/is 2/CD/2 and/CC/and of/IN/of this/DT/this is/VBZ/is also/RB/also 2/CD/2. so/RB/so this/DT/this is/VBZ/is a/DT/a red/VBN/red black/NN/black tree/NNP/tree. so/RB/so we/PRP/we will/MD/will add/VB/add this/DT/this external/JJ/external node/NN/node also/RB/also to/TO/to node/VB/node which/WDT/which has/VBZ/has only/RB/only one/CD/one child/NNP/child. so/RB/so let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this example/NN/example and/CC/and that/IN/that will/MD/will be/VB/be clearer/NNP/clearer. so/RB/so once/RB/once again/RB/again the/DT/the root/NN/root is/VBZ/is black/JJ/black /,/, a/DT/a red/VBN/red node/NN/node has/VBZ/has only/RB/only black/JJ/black children/NNP/children. that/IN/that is/VBZ/is the/DT/the key/JJ/key /,/, the/DT/the red/NN/red node/NN/node can/MD/can have/VB/have only/RB/only black/JJ/black children/NNP/children. black/NN/black node/NN/node can/MD/can have/VB/have red/VBN/red children/NNS/children or/CC/or black/VBP/black children/NNP/children. now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to add/VB/add the/DT/the external/JJ/external node/NN/node so/IN/so as/IN/as you/PRP/you can/MD/can this/DT/this node/NN/node has/VBZ/has only/RB/only one/CD/one child/NNP/child. so/RB/so we/PRP/we will/MD/will need/VB/need to/TO/to add/VB/add an/DT/an external/JJ/external node/NN/node here/RB/here also/NNP/also. similarly/RB/similarly it/PRP/it will/MD/will need/VB/need to/TO/to add/VB/add 2/CD/2 external/JJ/external nodes/NNS/nodes here/RB/here /,/, one/CD/one external/JJ/external node/NN/node here/RB/here and/CC/and of/IN/of course/NN/course these/DT/these will/MD/will take/VB/take 2/CD/2 external/JJ/external nodes/NNS/nodes and/CC/and so/RB/so on/NNP/on. so/IN/so these/DT/these are/VBP/are the/DT/the external/JJ/external nodes/NNS/nodes we/PRP/we will/MD/will end/VB/end of/IN/of handing/NNP/handing. /NNP/[ refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 43/CD/43 /CD/] /CD/( student/NN/student conversation/NN/conversation /:/) /./. a/DT/a black/JJ/black can/NN/can have/VBP/have black/JJ/black children/NNS/children but/CC/but red/VBD/red can/MD/can not/RB/not have/VB/have red/VBN/red children/NNS/children /,/, it/PRP/it ?/./? s/NNS/s not/RB/not symmetric/NNP/symmetric. /:/[ student/NN/student conversation/NN/conversation /:/: you/PRP/you going/VBG/going to/TO/to take/VB/take first/JJ/first case/NN/case /,/, staff/NN/staff /:/: ya/NN/ya /,/, student/NN/student /:/: it/PRP/it has/VBZ/has black/JJ/black and/CC/and both/DT/both the/DT/the children/NNS/children left/VBN/left and/CC/and right/RB/right to/TO/to be/VB/be red/VBN/red right/RB/right child/VBN/child is/VBZ/is if/IN/if we/PRP/we place/VBP/place the/DT/the external/JJ/external node/NN/node and/CC/and we/PRP/we count/VBP/count the/DT/the black/JJ/black height/NN/height so/IN/so it/PRP/it will/MD/will be/VB/be one/CD/one staff/NN/staff /:/: red/VBD/red so/RB/so then/RB/then it/PRP/it will/MD/will not/RB/not be/VB/be a/DT/a red/VBN/red black/NN/black tree/NN/tree that/WDT/that ?/./? s/VBZ/s what/WP/what you/PRP/you say/NNP/say. /:/] so/RB/so if/IN/if i/PRP/i had/VBD/had colored/VBN/colored this/DT/this red/VBN/red then/RB/then this/DT/this would/MD/would not/RB/not be/VB/be a/DT/a red/VBN/red black/NN/black tree/NNP/tree. the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this guy/NN/guy is/VBZ/is 2/CD/2. what/WP/what is/VBZ/is the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this guy/NN/guy /,/, of/IN/of this/DT/this tree/NN/tree ?/./? 2/CD/2 /,/, i/PRP/i will/MD/will take/VB/take any/DT/any external/JJ/external node/NN/node and/CC/and look/VB/look at/IN/at how/WRB/how many/JJ/many ancestors/NNS/ancestors are/VBP/are black/JJ/black and/CC/and we/PRP/we will/MD/will see/VB/see that/IN/that its/PRP$/its 2/CD/2 ancestors/NNS/ancestors which/WDT/which are/VBP/are black/NNP/black. and/CC/and this/DT/this is/VBZ/is true/JJ/true for/IN/for every/DT/every external/JJ/external node/NN/node ;/:/; if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this it/PRP/it also/RB/also has/VBZ/has two/CD/two black/JJ/black ancestors/NNS/ancestors /,/, this/DT/this also/RB/also two/CD/two black/JJ/black ancestor/NN/ancestor and/CC/and so/RB/so on/NNP/on. so/IN/so this/DT/this also/RB/also has/VBZ/has a/DT/a black/JJ/black height/NN/height of/IN/of tree/NNP/tree. so/RB/so what/WP/what are/VBP/are the/DT/the key/JJ/key things/NNS/things we/PRP/we have/VBP/have to/TO/to ensure/VB/ensure ?/./? first/JJ/first that/IN/that no/DT/no red/NN/red node/NN/node has/VBZ/has a/DT/a red/VBN/red child/NN/child /,/, second/JJ/second root/NN/root is/VBZ/is black/JJ/black /,/, third/JJ/third black/NN/black height/NN/height of/IN/of the/DT/the every/NN/every external/JJ/external node/NN/node is/VBZ/is the/DT/the same/NNP/same. black/NN/black height/VBD/height or/CC/or depth/NN/depth i/PRP/i sometimes/RB/sometimes use/VB/use the/DT/the term/NN/term depth/NN/depth to/TO/to say/VB/say how/WRB/how far/JJ/far it/PRP/it is/VBZ/is from/IN/from the/DT/the top/NNP/top. so/RB/so black/JJ/black depth/NN/depth of/IN/of the/DT/the every/NN/every external/JJ/external node/NN/node is/VBZ/is the/DT/the same/JJ/same /,/, the/DT/the black/JJ/black depth/NN/depth that/WDT/that ?/./? s/VBZ/s what/WP/what we/PRP/we will/MD/will call/VB/call the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, depth/NN/depth of/IN/of the/DT/the node/NN/node and/CC/and height/NN/height of/IN/of the/DT/the tree/NNP/tree. and/CC/and these/DT/these are/VBP/are the/DT/the two/CD/two examples/NNS/examples of/IN/of trees/NNS/trees which/WDT/which are/VBP/are not/RB/not red/VBN/red black/JJ/black /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 24/CD/24 /CD/) /./. why/WRB/why this/DT/this is/VBZ/is not/RB/not red/VBN/red black/JJ/black ?/./? this/DT/this red/NN/red child/NN/child /,/, this/DT/this red/NN/red node/NN/node has/VBZ/has a/DT/a red/VBN/red child/NNP/child. so/RB/so this/DT/this is/VBZ/is not/RB/not /,/, so/RB/so even/RB/even i/PRP/i have/VBP/have put/VBN/put in/IN/in the/DT/the external/JJ/external node/NN/node like/IN/like this/DT/this /,/, this/DT/this will/MD/will not/RB/not be/VB/be a/DT/a red/VBN/red black/NN/black tree/NNP/tree. why/WRB/why is/VBZ/is this/DT/this not/RB/not a/DT/a red/VBN/red black/NN/black tree/NN/tree ?/./? so/RB/so the/DT/the problem/NN/problem here/RB/here is/VBZ/is what/WP/what we/PRP/we call/VBP/call a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. we/PRP/we will/MD/will use/VB/use the/DT/the term/NN/term quiet/NN/quiet often/RB/often /,/, double/JJ/double red/VBN/red as/IN/as in/IN/in two/CD/two reds/NNS/reds occurring/VBG/occurring consecutively/RB/consecutively one/CD/one after/IN/after the/DT/the other/NNP/other. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 55/CD/55 /CD/) here/RB/here i/PRP/i add/VBP/add the/DT/the external/JJ/external nodes/NNS/nodes /,/, the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this node/NN/node is/VBZ/is /,/, the/DT/the black/JJ/black depth/NN/depth of/IN/of this/DT/this node/NN/node is/VBZ/is 2/CD/2 /,/, of/IN/of this/DT/this node/NN/node 2/CD/2 /,/, of/IN/of all/DT/all of/IN/of these/DT/these is/VBZ/is 2/CD/2. this/DT/this is/VBZ/is also/RB/also 2/CD/2 /,/, this/DT/this is/VBZ/is one/CD/one /,/, this/DT/this is/VBZ/is culprit/NN/culprit /,/, for/IN/for this/DT/this reason/NN/reason this/DT/this is/VBZ/is not/RB/not a/DT/a red/VBN/red black/NN/black tree/NNP/tree. so/RB/so black/JJ/black height/NN/height is/VBZ/is not/RB/not uniform/NN/uniform /,/, black/JJ/black depth/NN/depth is/VBZ/is not/RB/not uniform/NNP/uniform. so/RB/so let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the red/NN/red black/NN/black tree/NN/tree is/VBZ/is going/VBG/going to/TO/to be/VB/be ?/./? so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say h/NN/h is/VBZ/is the/DT/the black/JJ/black height/NN/height of/IN/of a/DT/a red/VBN/red black/NN/black tree/NN/tree on/IN/on n/NN/n nodes/NNP/nodes. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 23/CD/23 /CD/) if/IN/if i/PRP/i take/VBP/take any/DT/any external/JJ/external node/NN/node and/CC/and i/PRP/i will/MD/will look/VB/look at/IN/at /,/, count/NN/count its/PRP$/its number/NN/number of/IN/of ancestor/NN/ancestor that/IN/that it/PRP/it has/VBZ/has exactly/RB/exactly h/JJ/h black/NN/black ancestor/NNP/ancestor. when/WRB/when will/MD/will the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in this/DT/this tree/NN/tree /,/, suppose/NN/suppose i/PRP/i just/RB/just tell/VBP/tell you/PRP/you that/IN/that this/DT/this is/VBZ/is the/DT/the tree/NN/tree of/IN/of black/JJ/black height/NN/height h/NN/h /,/, when/WRB/when will/MD/will the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree be/VB/be small/JJ/small ?/./? when/WRB/when the/DT/the smallest/JJS/smallest ?/./? when/WRB/when everything/NN/everything is/VBZ/is black/JJ/black /,/, you/PRP/you don/VBP/don ?/./? t/NN/t want/NN/want any/DT/any red/NNP/red. you/PRP/you want/VBP/want as/IN/as few/JJ/few nodes/NNS/nodes as/IN/as possible/NNP/possible. so/RB/so why/WRB/why include/VBP/include your/PRP$/your red/VBN/red nodes/NNS/nodes and/CC/and increase/VB/increase the/DT/the number/NN/number of/IN/of nodes/NNP/nodes. so/RB/so let/VB/let ?/./? s/NNS/s have/VBP/have everything/VBG/everything black/JJ/black /,/, if/IN/if you/PRP/you have/VBP/have everything/VBG/everything black/JJ/black then/RB/then this/DT/this becomes/VBZ/becomes a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h or/CC/or my/PRP$/my red/VBN/red black/NN/black tree/NN/tree why/WRB/why because/IN/because all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes have/VBP/have to/TO/to be/VB/be at/IN/at the/DT/the same/JJ/same level/NN/level now/NNP/now. if/IN/if they/PRP/they have/VBP/have to/TO/to be/VB/be at/IN/at the/DT/the same/JJ/same level/NN/level all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes then/RB/then it/PRP/it will/MD/will become/VB/become a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NNP/h. if/IN/if i/PRP/i have/VBP/have a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h then/RB/then the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree is/VBZ/is 2/CD/2 to/TO/to the/DT/the h-1/NNP/h-1. so/RB/so the/DT/the smallest/JJS/smallest number/NN/number of/IN/of nodes/NNS/nodes possible/JJ/possible in/IN/in a/DT/a red/NN/red black/NN/black tree/NN/tree of/IN/of black/JJ/black height/NN/height h/NN/h is/VBZ/is 2/CD/2 to/TO/to the/DT/the h-1/NNP/h-1. when/WRB/when is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes the/DT/the largest/JJS/largest ?/./? when/WRB/when every/DT/every black/JJ/black node/NN/node has/VBZ/has 2/CD/2 red/VBN/red children/NNS/children /,/, but/CC/but red/VBD/red node/NN/node can/MD/can not/RB/not have/VB/have any/DT/any red/VBN/red children/NNP/children. so/RB/so then/RB/then it/PRP/it will/MD/will have/VB/have to/TO/to have/VB/have black/JJ/black children/NNS/children which/WDT/which will/MD/will have/VB/have to/TO/to have/VB/have red/VBN/red children/NNS/children and/CC/and so/RB/so on/NNP/on. we/PRP/we will/MD/will have/VB/have these/DT/these alternate/JJ/alternate layers/NNS/layers of/IN/of black/JJ/black and/CC/and red/NNP/red. so/RB/so we/PRP/we start/VBP/start with/IN/with the/DT/the black/JJ/black then/RB/then we/PRP/we have/VBP/have red/VBN/red layer/NN/layer then/RB/then we/PRP/we have/VBP/have black/JJ/black layer/NN/layer then/RB/then red/VBD/red layer/NN/layer and/CC/and so/RB/so on/NNP/on. if/IN/if the/DT/the number/NN/number of/IN/of black/JJ/black layer/NN/layer is/VBZ/is h/JJ/h then/RB/then the/DT/the number/NN/number of/IN/of red/VBN/red layer/NN/layer is/VBZ/is also/RB/also h/-NONE-/h. so/RB/so the/DT/the total/JJ/total height/NN/height of/IN/of the/DT/the tree/NN/tree becomes/VBZ/becomes 2h/CD/2h and/CC/and so/RB/so number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree becomes/VBZ/becomes 2/CD/2 to/TO/to the/DT/the 2/CD/2 h-1/-NONE-/h-1 which/WDT/which is/VBZ/is about/IN/about 4/CD/4 to/TO/to the/DT/the h-1/NNP/h-1. so/RB/so this/DT/this implies/NNS/implies that/IN/that h/NN/h lies/NNS/lies between/IN/between log/NN/log of/IN/of n/NN/n to/TO/to the/DT/the base/NN/base 4/CD/4 and/CC/and log/NN/log of/IN/of n/NN/n to/TO/to the/DT/the base/NN/base 2/CD/2 /,/, just/RB/just +/:/+ 1and/CD/1and -1you/PRP/-1you can/MD/can figure/VB/figure out/NNP/out. so/RB/so if/IN/if i/PRP/i give/VBP/give you/PRP/you a/DT/a red/JJ/red black/NN/black tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes /,/, so/RB/so i/PRP/i just/RB/just turn/VB/turn thing/NN/thing around/IN/around then/RB/then if/IN/if i/PRP/i give/VBP/give you/PRP/you red/VBD/red black/JJ/black tree/NN/tree on/IN/on n/NN/n nodes/NNS/nodes then/RB/then its/PRP$/its height/NN/height is/VBZ/is at/IN/at least/JJS/least log/NN/log n/NN/n to/TO/to the/DT/the base/NN/base 4/CD/4 and/CC/and at/IN/at most/JJS/most log/JJ/log n/NN/n to/TO/to the/DT/the base/NN/base 2/CD/2. we/PRP/we have/VBP/have seen/VBN/seen exactly/RB/exactly of/IN/of the/DT/the same/JJ/same property/NN/property for/IN/for 2-4/CD/2-4 trees/NNP/trees. we/PRP/we said/VBD/said its/PRP$/its minimum/JJ/minimum height/NN/height is/VBZ/is log/NN/log n/NN/n to/TO/to the/DT/the base/NN/base 4/CD/4 and/CC/and maximum/NN/maximum height/NN/height is/VBZ/is log/NN/log n/NN/n to/TO/to the/DT/the base/NN/base 2/CD/2. the/DT/the same/JJ/same kind/NN/kind of/IN/of the/DT/the thing/NN/thing is/VBZ/is happening/VBG/happening here/NNP/here. so/RB/so now/RB/now you/PRP/you can/MD/can immediately/RB/immediately see/VB/see that/IN/that if/IN/if i/PRP/i give/VBP/give you/PRP/you red/VBD/red black/JJ/black tree/NN/tree then/RB/then to/TO/to search/VB/search in/IN/in the/DT/the tree/NN/tree /,/, will/MD/will take/VB/take how/WRB/how much/RB/much time/NN/time now/RB/now ?/./? log/NN/log n/NN/n /,/, why/WRB/why because/IN/because first/JJ/first remember/NN/remember it/PRP/it is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. so/RB/so it/PRP/it has/VBZ/has the/DT/the search/NN/search property/NN/property /,/, so/RB/so i/PRP/i can/MD/can do/VB/do the/DT/the search/NN/search in/IN/in this/DT/this regular/JJ/regular way/NN/way that/IN/that is/VBZ/is start/NN/start from/IN/from the/DT/the root/NN/root /,/, compare/NN/compare key/NN/key with/IN/with the/DT/the root/NN/root /,/, go/VBP/go left/VBN/left or/CC/or right/RB/right and/CC/and so/RB/so on/NNP/on. so/IN/so i/PRP/i can/MD/can do/VB/do my/PRP$/my search/NN/search and/CC/and the/DT/the time/NN/time taken/VBN/taken for/IN/for that/DT/that search/NN/search is/VBZ/is just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree and/CC/and the/DT/the height/NN/height is/VBZ/is no/DT/no more/RBR/more than/IN/than log/NN/log n/NN/n base/NN/base 2/CD/2. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the time/NN/time i/PRP/i take/NNP/take. now/RB/now let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the correspondence/NN/correspondence between/IN/between red/VBN/red black/JJ/black trees/NNS/trees and/CC/and 2-4/CD/2-4 trees/NNP/trees. so/RB/so in/IN/in particular/JJ/particular i/NN/i am/NN/am going/VBG/going to/TO/to say/VB/say that/IN/that given/VBN/given any/DT/any red/VBN/red black/NN/black tree/NN/tree /,/, i/PRP/i can/MD/can convert/VB/convert it/PRP/it into/IN/into a/DT/a 2-4/CD/2-4 tree/NNP/tree. so/RB/so what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take a/DT/a black/JJ/black node/NN/node /,/, that/IN/that black/JJ/black node/NN/node /,/, how/WRB/how many/JJ/many red/JJ/red children/NNS/children will/MD/will it/PRP/it have/VB/have ?/./? it/PRP/it ?/./? s/NNS/s a/DT/a binary/JJ/binary tree/NNP/tree. so/RB/so it/PRP/it might/MD/might have/VB/have both/DT/both its/PRP$/its children/NNS/children could/MD/could be/VB/be black/JJ/black /,/, one/CD/one child/NN/child could/MD/could be/VB/be red/VBN/red /,/, the/DT/the other/JJ/other could/MD/could be/VB/be black/JJ/black or/CC/or both/DT/both could/MD/could be/VB/be red/VBN/red /,/, both/DT/both could/MD/could be/VB/be black/JJ/black /,/, both/DT/both could/MD/could be/VB/be red/NNP/red. one/CD/one could/MD/could be/VB/be red/VBN/red /,/, one/CD/one could/MD/could be/VB/be black/JJ/black or/CC/or you/PRP/you could/MD/could have/VB/have external/JJ/external node/NN/node also/RB/also /,/, one/CD/one could/MD/could be/VB/be external/JJ/external node/NN/node but/CC/but in/IN/in any/DT/any case/NN/case the/DT/the number/NN/number of/IN/of red/VBN/red nodes/NNS/nodes can/MD/can not/RB/not exceed/VB/exceed 2/CD/2. it/PRP/it will/MD/will be/VB/be 0/-NONE-/0 /,/, 1/CD/1 or/CC/or 2/CD/2. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take this/DT/this black/JJ/black node/NN/node and/CC/and its/PRP$/its red/VBN/red children/NNS/children and/CC/and combine/NN/combine them/PRP/them in/IN/in to/TO/to one/CD/one node/NNP/node. how/WRB/how many/JJ/many keys/NNS/keys there/EX/there will/MD/will become/VB/become in/IN/in this/DT/this one/NN/one node/NN/node ?/./? at/IN/at most/JJS/most 3/CD/3 /,/, when/WRB/when this/DT/this node/NN/node had/VBD/had 2/CD/2 red/VBN/red children/NNP/children. let/NN/let ?/./? s/NNS/s see/NNP/see. so/RB/so what/WP/what i/PRP/i am/VBP/am saying/VBG/saying ?/./? i/PRP/i am/VBP/am saying/VBG/saying /,/, we/PRP/we have/VBP/have a/DT/a black/JJ/black node/NN/node and/CC/and we/PRP/we look/VBP/look at/IN/at its/PRP$/its red/VBN/red children/NNP/children. suppose/NN/suppose it/PRP/it had/VBD/had 2/CD/2 red/VBN/red children/NNS/children so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to combine/VB/combine it/PRP/it in/IN/in to/TO/to one/CD/one node/NN/node /,/, all/DT/all these/DT/these 3/CD/3 i/PRP/i am/VBP/am going/VBG/going to/TO/to combine/VB/combine in/IN/in to/TO/to one/CD/one node/NNP/node. so/RB/so this/DT/this one/CD/one node/NN/node will/MD/will have/VB/have 3/CD/3 children/NNP/children. suppose/NN/suppose it/PRP/it had/VBD/had only/RB/only one/CD/one red/VBN/red child/NN/child and/CC/and then/RB/then it/PRP/it would/MD/would be/VB/be 2/CD/2 keys/NNS/keys in/IN/in here/RB/here and/CC/and if/IN/if it/PRP/it had/VBD/had no/DT/no red/VBN/red child/NN/child then/RB/then there/RB/there will/MD/will be/VB/be only/RB/only one/CD/one key/JJ/key here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 00/CD/00 /CD/) so/RB/so each/DT/each node/NN/node so/IN/so formed/VBN/formed has/VBZ/has at/IN/at least/JJS/least one/CD/one and/CC/and at/IN/at most/JJS/most 3/CD/3 keys/NNP/keys. furthermore/NN/furthermore black/NN/black height/NN/height of/IN/of all/DT/all the/DT/the external/JJ/external node/NN/node is/VBZ/is the/DT/the same/JJ/same /,/, so/IN/so in/IN/in the/DT/the resulting/VBG/resulting 2-4/CD/2-4 tree/NN/tree all/DT/all leaves/NNS/leaves will/MD/will be/VB/be the/DT/the same/JJ/same /,/, will/MD/will be/VB/be at/IN/at the/DT/the same/JJ/same level/NN/level and/CC/and this/DT/this might/MD/might has/VBZ/has not/RB/not too/RB/too make/VB/make sense/NNP/sense. what/WP/what are/VBP/are we/PRP/we saying/VBG/saying ?/./? black/NN/black height/NN/height of/IN/of all/DT/all external/JJ/external nodes/NNS/nodes is/VBZ/is the/DT/the same/NNP/same. so/RB/so if/IN/if i/PRP/i start/VBP/start from/IN/from the/DT/the external/JJ/external node/NN/node and/CC/and go/VB/go up/RP/up the/DT/the tree/NN/tree /,/, the/DT/the number/NN/number of/IN/of black/JJ/black nodes/NNS/nodes i/PRP/i encounter/VBP/encounter would/MD/would be/VB/be the/DT/the same/NNP/same. no/DT/no matter/NN/matter which/WDT/which leaf/NN/leaf i/PRP/i started/VBD/started from/IN/from ?/./? so/RB/so each/DT/each of/IN/of those/DT/those black/JJ/black nodes/NNS/nodes is/VBZ/is now/RB/now part/NN/part of/IN/of a/DT/a unique/JJ/unique 2-4/CD/2-4 node/NNP/node. because/IN/because i/PRP/i took/VBD/took a/DT/a black/JJ/black node/NN/node and/CC/and i/PRP/i took/VBD/took its/PRP$/its red/VBN/red children/NNS/children and/CC/and i/PRP/i combine/VBP/combine in/IN/in to/TO/to one/NNP/one. so/RB/so each/DT/each of/IN/of a/DT/a black/JJ/black node/NN/node is/VBZ/is a/DT/a part/NN/part of/IN/of a/DT/a unique/JJ/unique node/NN/node of/IN/of a/DT/a 2-4/CD/2-4 tree/NNP/tree. so/RB/so as/IN/as consequence/NN/consequence when/WRB/when i/PRP/i start/VBP/start from/IN/from a/DT/a leaf/NN/leaf and/CC/and i/PRP/i go/VBP/go up/RP/up to/TO/to the/DT/the root/NN/root i/PRP/i encounter/VBP/encounter the/DT/the same/JJ/same number/NN/number of/IN/of nodes/NNS/nodes in/IN/in a/DT/a 2-4/CD/2-4 tree/NN/tree which/WDT/which means/VBZ/means that/DT/that all/DT/all the/DT/the leafs/NNS/leafs are/VBP/are in/IN/in the/DT/the same/JJ/same level/NN/level of/IN/of the/DT/the 2-4/CD/2-4 tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 23/CD/23 /CD/) we/PRP/we will/MD/will show/VB/show an/DT/an example/NN/example with/IN/with which/WDT/which this/DT/this will/MD/will become/VB/become clear/NNP/clear. so/RB/so this/DT/this is/VBZ/is my/PRP$/my /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 36/CD/36 /CD/) red/VBN/red black/JJ/black tree/NN/tree i/PRP/i am/VBP/am going/VBG/going to/TO/to convert/VB/convert it/PRP/it in/IN/in to/TO/to a/DT/a 2-4/CD/2-4 tree/NNP/tree. so/RB/so i/PRP/i start/VBP/start with/IN/with the/DT/the root/NN/root node/NN/node /,/, i/PRP/i will/MD/will look/VB/look at/IN/at its/PRP$/its red/VBN/red children/NNS/children it/PRP/it has/VBZ/has two/CD/two red/VBN/red children/NNP/children. all/DT/all of/IN/of these/DT/these will/MD/will combine/VB/combine in/IN/in to/TO/to single/JJ/single node/NN/node of/IN/of my/PRP$/my 2-4/CD/2-4 trees/NNP/trees. now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at another/DT/another black/NN/black node/NN/node which/WDT/which is/VBZ/is this/DT/this /,/, look/VBP/look at/IN/at its/PRP$/its red/VBN/red children/NNS/children it/PRP/it has/VBZ/has again/RB/again 2/CD/2 red/VBN/red children/NNS/children so/RB/so all/DT/all of/IN/of this/DT/this combine/NN/combine in/IN/in to/TO/to one/NNP/one. and/CC/and they/PRP/they combine/VBP/combine in/IN/in to/TO/to one/CD/one like/IN/like this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 16/CD/16 /CD/) /./. so/RB/so as/IN/as you/PRP/you can/MD/can see/VB/see when/WRB/when these/DT/these combine/NN/combine in/IN/in to/TO/to one/CD/one /,/, these/DT/these 4/CD/4 links/NNS/links that/WDT/that i/PRP/i am/VBP/am going/VBG/going out/RP/out of/IN/of this/DT/this combination/NN/combination will/MD/will be/VB/be the/DT/the 4/CD/4 links/NNS/links going/VBG/going out/RP/out of/IN/of this/DT/this node/NNP/node. when/WRB/when i/PRP/i took/VBD/took this/DT/this entire/JJ/entire thing/NN/thing let/NN/let me/PRP/me go/VBP/go up/RP/up /,/, there/EX/there are/VBP/are four/CD/four /,/, 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 children/NNS/children of/IN/of this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 47/CD/47 /CD/) combined/VBN/combined structure/NNP/structure. they/PRP/they would/MD/would be/VB/be the/DT/the 4/CD/4 children/NNS/children of/IN/of this/DT/this node/NNP/node. so/RB/so this/DT/this is/VBZ/is the/DT/the first/JJ/first one/CD/one /,/, then/RB/then i/PRP/i look/VBP/look at/IN/at this/NNP/this. how/WRB/how many/JJ/many red/JJ/red children/NNS/children does/VBZ/does it/PRP/it have/VB/have ?/./? only/RB/only one/CD/one /,/, so/RB/so they/PRP/they would/MD/would combine/VB/combine in/IN/in to/TO/to one/CD/one /,/, so/RB/so i/PRP/i get/VBP/get another/DT/another node/NN/node which/WDT/which is/VBZ/is 5/CD/5 /,/, 7/CD/7. this/DT/this becomes/VBZ/becomes a/DT/a second/JJ/second child/NN/child /,/, as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this is/VBZ/is more/RBR/more than/IN/than 4/CD/4 so/RB/so this/DT/this will/MD/will be/VB/be more/RBR/more than/IN/than 4/CD/4 here/NNP/here. and/CC/and what/WP/what will/MD/will be/VB/be my/PRP$/my third/JJ/third child/NN/child ?/./? it/PRP/it would/MD/would be/VB/be just/RB/just this/DT/this black/JJ/black node/NN/node /,/, it/PRP/it has/VBZ/has no/DT/no red/VBN/red children/NNP/children. so/RB/so i/PRP/i create/VBP/create a/DT/a node/NN/node with/IN/with only/RB/only 11/CD/11 in/IN/in it/PRP/it and/CC/and the/DT/the fourth/JJ/fourth one/CD/one 19/CD/19 and/CC/and 17/CD/17 /,/, so/RB/so i/PRP/i create/VBP/create another/DT/another node/NN/node with/IN/with just/RB/just 17/CD/17 and/CC/and 19/CD/19 in/IN/in it/NNP/it. so/RB/so this/DT/this is/VBZ/is the/DT/the 2-4/CD/2-4 tree/NN/tree i/PRP/i get/NNP/get. now/RB/now you/PRP/you can/MD/can see/VB/see the/DT/the black/JJ/black height/NN/height was/VBD/was 2/CD/2 /,/, it/PRP/it was/VBD/was the/DT/the same/JJ/same for/IN/for every/DT/every external/JJ/external that/IN/that was/VBD/was the/DT/the black/JJ/black tree/NN/tree and/CC/and i/PRP/i get/VBP/get 2-4/CD/2-4 tree/NN/tree of/IN/of height/NN/height 2/CD/2. so/RB/so i/PRP/i am/VBP/am giving/VBG/giving a/DT/a proof/NN/proof by/IN/by example/NN/example but/CC/but this/DT/this should/MD/should be/VB/be clear/JJ/clear why/WRB/why i/PRP/i will/MD/will get/VB/get the/DT/the 2-4/CD/2-4 tree/NN/tree ?/./? so/RB/so the/DT/the property/NN/property of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree /,/, one/CD/one critical/JJ/critical property/NN/property of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree is/VBZ/is that/IN/that all/DT/all leaves/NNS/leaves are/VBP/are at/IN/at the/DT/the same/JJ/same level/NNP/level. just/RB/just saying/VBG/saying that/IN/that every/DT/every node/NN/node has/VBZ/has 2/CD/2 /,/, 3/CD/3 or/CC/or 4/CD/4 children/NNS/children doesn/IN/doesn ?/./? t/NN/t make/VB/make it/PRP/it a/DT/a 2-4/CD/2-4 tree/NNP/tree. all/DT/all leaves/NNS/leaves have/VBP/have to/TO/to be/VB/be at/IN/at the/DT/the same/JJ/same level/NN/level and/CC/and that/IN/that is/VBZ/is in/IN/in ensured/VBN/ensured because/IN/because of/IN/of the/DT/the fact/NN/fact that/IN/that the/DT/the black/JJ/black depth/NN/depth of/IN/of every/DT/every external/JJ/external node/NN/node is/VBZ/is the/DT/the same/NNP/same. so/RB/so this/DT/this is/VBZ/is how/WRB/how we/PRP/we can/MD/can obtain/VB/obtain a/DT/a 2-4/CD/2-4 tree/NN/tree from/IN/from a/DT/a red/NN/red black/NN/black tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 29/CD/29 /CD/) we/PRP/we can/MD/can also/RB/also go/VB/go the/DT/the other/JJ/other way/NN/way round/NN/round /,/, that/IN/that is/VBZ/is given/VBN/given a/DT/a 2-4/CD/2-4 tree/NN/tree you/PRP/you can/MD/can make/VB/make a/DT/a red/JJ/red black/NN/black tree/NNP/tree. so/RB/so what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take a/DT/a node/NN/node of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree /,/, replace/NN/replace it/PRP/it with/IN/with 1/CD/1 black/JJ/black node/NN/node and/CC/and then/RB/then appropriate/JJ/appropriate number/NN/number of/IN/of red/VBN/red nodes/NNP/nodes. what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by appropriate/JJ/appropriate number/NN/number ?/./? if/IN/if they/PRP/they were/VBD/were 2/CD/2 keys/NNS/keys in/IN/in this/DT/this 2-4/CD/2-4 tree/NN/tree node/NN/node then/RB/then i/PRP/i will/MD/will have/VB/have 1/CD/1 red/VBN/red node/NNP/node. if/IN/if there/EX/there were/VBD/were 3/CD/3 keys/NNS/keys then/RB/then i/PRP/i will/MD/will have/VB/have 2/CD/2 red/VBN/red nodes/NNP/nodes. if/IN/if there/EX/there was/VBD/was only/RB/only one/CD/one key/JJ/key then/RB/then i/PRP/i will/MD/will have/VB/have no/DT/no red/VBN/red nodes/NNS/nodes and/CC/and these/DT/these red/JJ/red nodes/NNS/nodes will/MD/will be/VB/be the/DT/the children/NNS/children of/IN/of the/DT/the black/JJ/black node/NNP/node. so/RB/so first/JJ/first i/PRP/i put/VBD/put down/RP/down the/DT/the black/JJ/black node/NN/node then/RB/then i/PRP/i put/VBD/put the/DT/the appropriate/NN/appropriate number/NN/number of/IN/of red/VBN/red nodes/NNP/nodes. now/RB/now this/DT/this ensures/NNS/ensures that/IN/that i/PRP/i will/MD/will not/RB/not have/VB/have the/DT/the double/JJ/double red/NN/red problem/NNP/problem. why/WRB/why ?/./? i/PRP/i will/MD/will not/RB/not create/VB/create one/CD/one red/VBN/red node/NN/node as/IN/as a/DT/a child/NN/child of/IN/of another/DT/another red/NN/red node/NN/node /,/, because/IN/because what/WP/what am/NN/am i/PRP/i doing/NNP/doing. i/PRP/i am/VBP/am first/JJ/first taking/VBG/taking a/DT/a node/NN/node of/IN/of my/PRP$/my 2-4/CD/2-4 tree/NN/tree /,/, first/JJ/first putting/NN/putting down/IN/down a/DT/a black/JJ/black node/NN/node and/CC/and then/RB/then putting/VBG/putting 0/-NONE-/0 /,/, 1/CD/1 or/CC/or 2/CD/2 red/VBN/red children/NNS/children and/CC/and then/RB/then when/WRB/when i/PRP/i take/VBP/take the/DT/the next/JJ/next node/NN/node of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree which/WDT/which is/VBZ/is the/DT/the child/NN/child of/IN/of the/DT/the previous/JJ/previous one/NNP/one. then/RB/then once/RB/once again/RB/again i/PRP/i will/MD/will first/RB/first put/VB/put down/RP/down the/DT/the black/JJ/black node/NNP/node. so/RB/so i/PRP/i will/MD/will not/RB/not have/VB/have 2/CD/2 reds/NNS/reds consecutively/RB/consecutively happening/VBG/happening that/IN/that we/PRP/we will/MD/will see/VB/see in/IN/in the/DT/the example/NN/example shortly/NNP/shortly. furthermore/NN/furthermore what/WP/what ?/./? s/NNS/s going/VBG/going to/TO/to happen/VB/happen is/VBZ/is that/IN/that for/IN/for every/DT/every node/NN/node of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree i/PRP/i am/VBP/am putting/VBG/putting in/IN/in one/CD/one black/JJ/black node/NNP/node. so/RB/so since/IN/since all/DT/all the/DT/the leaves/NNS/leaves of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree are/VBP/are in/IN/in the/DT/the same/JJ/same level/NNP/level. the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the resulting/VBG/resulting red/VBN/red black/JJ/black tree/NN/tree would/MD/would be/VB/be uniform/NN/uniform ;/:/; the/DT/the black/JJ/black depths/NNS/depths of/IN/of all/DT/all the/DT/the leaves/NNS/leaves would/MD/would be/VB/be the/DT/the same/NNP/same. so/RB/so let/VB/let ?/./? s/NNS/s take/VBP/take an/DT/an example/NNP/example. ignore/NN/ignore this/DT/this for/IN/for now/RB/now /,/, this/DT/this should/MD/should have/VB/have come/VBN/come later/NNP/later. this/DT/this is/VBZ/is my/PRP$/my 2-4/CD/2-4 tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 21/CD/21 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 52/CD/52 /CD/) as/IN/as you/PRP/you can/MD/can see/VB/see each/DT/each node/NN/node has/VBZ/has 1/CD/1 /,/, 2/CD/2 or/CC/or 3/CD/3 keys/NNS/keys which/WDT/which mean/JJ/mean 2/CD/2 /,/, 3/CD/3 or/CC/or 4/CD/4 children/NNS/children and/CC/and the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is 3/CD/3. let/NN/let ?/./? s/NNS/s see/NNP/see. so/RB/so there/RB/there is/VBZ/is only/RB/only one/CD/one key/JJ/key here/RB/here /,/, i/PRP/i will/MD/will just/RB/just create/VB/create a/DT/a black/JJ/black node/NN/node and/CC/and nothing/NN/nothing else/RB/else no/DT/no red/JJ/red nodes/NNP/nodes. let/NN/let me/PRP/me take/VBP/take this/DT/this one/CD/one /,/, so/RB/so i/PRP/i will/MD/will create/VB/create 1/CD/1 black/JJ/black node/NN/node and/CC/and it/PRP/it will/MD/will have/VB/have 2/CD/2 children/NNS/children /,/, 2/CD/2 red/VBD/red children/NNP/children. what/WP/what should/MD/should be/VB/be the/DT/the key/JJ/key in/IN/in the/DT/the black/JJ/black node/NN/node be/VB/be ?/./? 8/CD/8 /,/, 3/CD/3 and/CC/and 10/CD/10 means/NNS/means 2/CD/2 children/NNP/children. then/RB/then i/PRP/i take/VBP/take this/DT/this one/CD/one /,/, 18/CD/18 just/RB/just one/CD/one black/JJ/black node/NN/node with/IN/with 18/CD/18 /,/, no/DT/no red/NN/red children/NNP/children. let/NN/let me/PRP/me take/VBP/take 1/CD/1 /,/, 2/CD/2 so/RB/so this/DT/this would/MD/would have/VB/have 1/CD/1 black/JJ/black node/NN/node and/CC/and 1/CD/1 red/VBD/red node/NNP/node. i/PRP/i have/VBP/have an/DT/an option/NN/option ;/:/; i/PRP/i might/MD/might put/VB/put 1/CD/1 as/IN/as the/DT/the black/JJ/black and/CC/and 2/CD/2 as/IN/as the/DT/the red/NN/red or/CC/or the/DT/the other/JJ/other way/NN/way round/NNP/round. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to put/VB/put 2/CD/2 as/IN/as the/DT/the black/JJ/black and/CC/and 1/CD/1 as/IN/as the/DT/the red/NNP/red. for/IN/for 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 ;/:/; 5/CD/5 will/MD/will be/VB/be the/DT/the black/JJ/black and/CC/and 4/CD/4 /,/, 6/CD/6 will/MD/will be/VB/be the/DT/the red/VBN/red /,/, black/JJ/black 9/CD/9 nothing/NN/nothing else/NNP/else. here/RB/here 12/CD/12 black/NN/black let/NN/let ?/./? s/NNS/s say/VBP/say and/CC/and 11/CD/11 red/VBD/red /,/, 14/CD/14 /,/, 15/CD/15 black/NN/black /,/, 14/CD/14 red/VBD/red and/CC/and 20/CD/20. so/RB/so now/RB/now are/VBP/are you/PRP/you convinced/VBD/convinced that/IN/that you/PRP/you will/MD/will not/RB/not have/VB/have double/JJ/double red/VBN/red problem/NN/problem ?/./? just/RB/just by/IN/by the/DT/the way/NN/way we/PRP/we are/VBP/are doing/VBG/doing things/NNP/things. when/WRB/when i/PRP/i take/VBP/take a/DT/a node/NN/node and/CC/and i/PRP/i create/VBP/create some/DT/some thing/NN/thing in/IN/in the/DT/the red/NN/red black/NN/black tree/NN/tree i/PRP/i first/RB/first put/VBD/put down/RP/down the/DT/the black/JJ/black node/NN/node and/CC/and only/RB/only then/RB/then i/PRP/i put/VBD/put down/RP/down the/DT/the red/VBN/red node/NNP/node. so/RB/so at/IN/at the/DT/the next/JJ/next level/NN/level i/PRP/i will/MD/will first/RB/first put/VB/put down/RP/down the/DT/the black/JJ/black node/NNP/node. so/RB/so it/PRP/it will/MD/will never/RB/never have/VB/have two/CD/two consecutive/JJ/consecutive reds/NNP/reds. furthermore/NN/furthermore the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this red/NN/red black/NN/black trees/NNS/trees so/RB/so if/IN/if i/PRP/i have/VBP/have to/TO/to draw/VB/draw the/DT/the external/JJ/external nodes/NNS/nodes and/CC/and count/NN/count their/PRP$/their ancestors/NNS/ancestors so/RB/so if/IN/if suppose/JJ/suppose there/EX/there is/VBZ/is an/DT/an external/JJ/external node/NN/node here/RB/here /,/, it/PRP/it has/VBZ/has three/CD/three black/JJ/black ancestors/NNS/ancestors which/WDT/which is/VBZ/is as/RB/as same/JJ/same as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the red/NN/red black/NN/black tree/NN/tree because/IN/because of/IN/of that/DT/that all/DT/all of/IN/of them/PRP/them would/MD/would have/VB/have same/JJ/same black/NN/black depth/NNP/depth. if/IN/if i/PRP/i were/VBD/were to/TO/to look/VB/look at/IN/at this/DT/this external/JJ/external node/NN/node which/WDT/which is/VBZ/is here/RB/here then/RB/then it/PRP/it has/VBZ/has black/JJ/black depths/NNS/depths of/IN/of 3/CD/3. everyone/NN/everyone would/MD/would have/VB/have the/DT/the same/JJ/same because/IN/because if/IN/if it/PRP/it is/VBZ/is going/VBG/going from/IN/from here/RB/here to/TO/to here/RB/here then/RB/then it/PRP/it corresponds/VBZ/corresponds to/TO/to going/VBG/going from/IN/from here/RB/here to/TO/to here/RB/here because/IN/because each/DT/each of/IN/of those/DT/those black/JJ/black nodes/NNS/nodes is/VBZ/is one/CD/one level/NN/level here/NNP/here. so/RB/so the/DT/the black/JJ/black height/NN/height is/VBZ/is same/JJ/same as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the 2-4/CD/2-4 tree/NNP/tree. so/RB/so you/PRP/you understand/VBP/understand what/WP/what red/VBN/red black/VBP/black trees/NNS/trees are/VBP/are and/CC/and you/PRP/you understand/VBP/understand how/WRB/how they/PRP/they are/VBP/are related/VBN/related to/TO/to 2-4/CD/2-4 tree/NNP/tree. basically/RB/basically there/RB/there is/VBZ/is 1/CD/1 to/TO/to 1/CD/1 correspondence/NNP/correspondence. given/CD/given any/DT/any 2-4/CD/2-4 tree/NN/tree i/PRP/i can/MD/can create/VB/create a/DT/a red/VBN/red black/NN/black tree/NN/tree /,/, given/VBN/given any/DT/any red/VBN/red black/NN/black i/PRP/i can/MD/can create/VB/create a/DT/a 2-4/CD/2-4 tree/NNP/tree. so/RB/so in/IN/in fact/NN/fact the/DT/the operation/NN/operation of/IN/of insertion/NN/insertion and/CC/and deletion/NN/deletion in/IN/in a/DT/a red/NN/red black/NN/black tree/NN/tree are/VBP/are exactly/RB/exactly the/DT/the same/JJ/same as/IN/as you/PRP/you do/VBP/do in/IN/in a/DT/a 2-4/CD/2-4 tree/NNP/tree. so/RB/so we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to mimic/JJ/mimic those/DT/those operations/NNS/operations in/IN/in this/DT/this setting/NN/setting and/CC/and that/IN/that was/VBD/was one/CD/one of/IN/of the/DT/the major/JJ/major reasons/NNS/reasons for/IN/for doing/VBG/doing the/DT/the 2-4/CD/2-4 tree/NNP/tree. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to mimic/JJ/mimic the/DT/the operation/NN/operation but/CC/but of/IN/of course/NN/course it/PRP/it will/MD/will require/VB/require to/TO/to do/VB/do it/PRP/it carefully/NNP/carefully. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the operation/NN/operation of/IN/of deletion/NN/deletion because/IN/because this/DT/this is/VBZ/is slightly/RB/slightly more/RBR/more tricky/JJ/tricky operation/NNP/operation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 22/CD/22 /CD/) so/RB/so how/WRB/how do/VBP/do we/PRP/we delete/VB/delete in/IN/in a/DT/a binary/JJ/binary search/NN/search tree/NN/tree ?/./? the/DT/the first/JJ/first step/NN/step of/IN/of the/DT/the deletion/NN/deletion is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the binary/JJ/binary search/NN/search tree/NN/tree which/WDT/which is/VBZ/is let/VBN/let we/PRP/we first/RB/first search/VBP/search for/IN/for the/DT/the node/NN/node /,/, you/PRP/you are/VBP/are in/IN/in to/TO/to five/CD/five other/JJ/other node/NNP/node. if/IN/if the/DT/the node/NN/node is/VBZ/is a/DT/a leaf/NN/leaf then/RB/then you/PRP/you just/RB/just deleted/NNP/deleted. if/IN/if the/DT/the node/NN/node is/VBZ/is an/DT/an internal/JJ/internal node/NN/node then/RB/then you/PRP/you find/VBP/find it/PRP/it successor/NN/successor or/CC/or predecessor/NN/predecessor /,/, you/PRP/you swap/VBP/swap and/CC/and then/RB/then you/PRP/you delete/VBP/delete the/DT/the successor/NN/successor or/CC/or predecessor/NNP/predecessor. so/RB/so now/RB/now the/DT/the successor/NN/successor or/CC/or predecessors/NNS/predecessors suppose/VBP/suppose we/PRP/we are/VBP/are talking/VBG/talking about/IN/about successor/NN/successor so/IN/so successor/NN/successor is/VBZ/is a/DT/a node/NN/node which/WDT/which does/VBZ/does not/RB/not have/VB/have a/DT/a right/NN/right child/NNP/child. if/IN/if it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a right/NN/right child/NN/child then/RB/then that/IN/that means/NNS/means we/PRP/we would/MD/would have/VB/have its/PRP$/its right/JJ/right child/NN/child which/WDT/which is/VBZ/is an/DT/an external/JJ/external node/NN/node /,/, we/PRP/we put/VBD/put an/DT/an external/JJ/external node/NN/node there/NNP/there. so/RB/so that/IN/that means/NNS/means the/DT/the node/NN/node that/IN/that i/PRP/i am/VBP/am deleting/VBG/deleting is/VBZ/is always/RB/always the/DT/the parent/NN/parent of/IN/of some/DT/some external/JJ/external node/NNP/node. if/IN/if it/PRP/it ?/./? s/NNS/s a/DT/a leaf/NN/leaf even/RB/even then/RB/then its/PRP$/its parent/NN/parent of/IN/of an/DT/an external/JJ/external node/NNP/node. otherwise/NN/otherwise it/PRP/it doesn/VBP/doesn ?/./? t/NN/t have/VBP/have a/DT/a right/NN/right child/NN/child if/IN/if you/PRP/you were/VBD/were talking/VBG/talking of/IN/of a/DT/a successor/NNP/successor. if/IN/if it/PRP/it doesn/VBP/doesn ?/./? t/NN/t have/VBP/have a/DT/a right/NN/right child/NN/child we/PRP/we put/VBD/put in/RP/in an/DT/an external/JJ/external node/NNP/node. so/RB/so it/PRP/it ?/./? s/NNS/s always/RB/always parent/NN/parent of/IN/of an/DT/an external/JJ/external node/NNP/node. so/RB/so these/DT/these are/VBP/are the/DT/the three/CD/three settings/NNS/settings we/PRP/we could/MD/could have/VB/have of/IN/of the/DT/the node/NN/node that/IN/that we/PRP/we are/VBP/are deleting/VBG/deleting /,/, these/DT/these two/CD/two corresponding/VBG/corresponding it/PRP/it to/TO/to being/VBG/being a/DT/a leaf/NNP/leaf. so/RB/so either/RB/either if/IN/if the/DT/the node/NN/node is/VBZ/is a/DT/a leaf/NN/leaf either/NN/either it/PRP/it is/VBZ/is a/DT/a red/VBN/red leaf/NN/leaf or/CC/or black/JJ/black leaf/NN/leaf and/CC/and the/DT/the third/JJ/third setting/NN/setting is/VBZ/is when/WRB/when the/DT/the node/NN/node that/IN/that we/PRP/we are/VBP/are deleting/VBG/deleting does/NNS/does not/RB/not have/VB/have a/DT/a right/NN/right child/NNP/child. so/RB/so it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a right/NN/right child/NN/child which/WDT/which means/VBZ/means right/RB/right child/VBN/child is/VBZ/is an/DT/an external/JJ/external node/NN/node /,/, if/IN/if it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a right/NN/right child/NN/child but/CC/but has/VBZ/has a/DT/a left/VBN/left child/NN/child then/RB/then this/DT/this left/NN/left child/NN/child has/VBZ/has to/TO/to be/VB/be red/NNP/red. why/WRB/why ?/./? if/IN/if it/PRP/it were/VBD/were to/TO/to be/VB/be black/JJ/black then/RB/then black/JJ/black could/MD/could not/RB/not be/VB/be remain/RB/remain consistence/NNP/consistence. yes/NNS/yes why/WRB/why ?/./? because/IN/because if/IN/if i/PRP/i look/VBP/look at/IN/at these/DT/these external/JJ/external node/NN/node verses/NNS/verses this/DT/this external/JJ/external node/NN/node /,/, /:/[ hindi/NN/hindi /:/] you/PRP/you follow/VBP/follow what/WP/what i/PRP/i am/VBP/am saying/NNP/saying. if/IN/if this/DT/this were/VBD/were black/RP/black then/RB/then if/IN/if this/DT/this node/NN/node has/VBZ/has 10/CD/10 black/JJ/black ancestors/NNS/ancestors then/RB/then this/DT/this one/CD/one would/MD/would have/VB/have 11/CD/11 black/JJ/black ancestors/NNP/ancestors. why/WRB/why ?/./? because/IN/because all/DT/all its/PRP$/its black/JJ/black ancestors/NNS/ancestors are/VBP/are also/RB/also ancestor/NN/ancestor of/IN/of this/DT/this guy/NN/guy and/CC/and this/DT/this has/VBZ/has one/CD/one more/JJR/more ancestor/NN/ancestor /,/, this/DT/this has/VBZ/has to/TO/to be/VB/be red/VBN/red therefore/-NONE-/therefore. if/IN/if this/DT/this is/VBZ/is red/VBN/red then/RB/then it/PRP/it can/MD/can not/RB/not have/VB/have any/DT/any red/VBN/red children/NNS/children but/CC/but it/PRP/it can/MD/can not/RB/not have/VB/have any/DT/any black/JJ/black children/NNS/children either/CC/either because/IN/because if/IN/if it/PRP/it had/VBD/had black/JJ/black children/NNS/children then/RB/then once/RB/once again/RB/again we/PRP/we could/MD/could have/VB/have a/DT/a same/JJ/same problem/NN/problem of/IN/of black/JJ/black height/NN/height not/RB/not being/VBG/being the/DT/the same/NNP/same. so/RB/so this/DT/this is/VBZ/is the/DT/the entire/JJ/entire structure/NN/structure that/WDT/that we/PRP/we would/MD/would have/NNP/have. if/IN/if this/DT/this is/VBZ/is the/DT/the node/NN/node that/IN/that i/PRP/i am/VBP/am trying/VBG/trying to/TO/to delete/VB/delete and/CC/and it/PRP/it did/VBD/did not/RB/not have/VB/have a/DT/a right/NN/right child/NN/child and/CC/and it/PRP/it was/VBD/was not/RB/not a/DT/a leaf/NN/leaf either/NN/either then/RB/then that/IN/that means/NNS/means it/PRP/it ?/./? s/NNS/s right/RB/right child/VB/child is/VBZ/is an/DT/an external/JJ/external node/NN/node /,/, we/PRP/we said/VBD/said that/IN/that already/RB/already its/PRP$/its left/VBN/left child/NN/child will/MD/will be/VB/be a/DT/a red/VBN/red node/NN/node which/WDT/which would/MD/would be/VB/be a/DT/a leaf/NNP/leaf. so/RB/so then/RB/then in/IN/in this/DT/this case/NN/case the/DT/the node/NN/node that/IN/that we/PRP/we are/VBP/are deleting/VBG/deleting is/VBZ/is really/RB/really parent/NN/parent of/IN/of a/DT/a leaf/NN/leaf node/NNP/node. in/IN/in this/DT/this case/NN/case the/DT/the node/NN/node we/PRP/we are/VBP/are deleting/VBG/deleting /,/, in/IN/in each/DT/each case/NN/case we/PRP/we are/VBP/are deleting/VBG/deleting the/DT/the node/NN/node here/NNP/here. in/IN/in these/DT/these two/CD/two cases/NNS/cases the/DT/the node/NN/node we/PRP/we are/VBP/are deleting/VBG/deleting or/CC/or leaf/NN/leaf node/NN/node themselves/NNS/themselves and/CC/and this/DT/this case/NN/case it/PRP/it ?/./? s/NNS/s a/DT/a parent/NN/parent of/IN/of a/DT/a leaf/NN/leaf node/NNP/node. if/IN/if 19/CD/19 is/VBZ/is a/DT/a red/VBN/red node/NNP/node. can/MD/can 19/CD/19 be/VB/be a/DT/a red/VBN/red node/NN/node and/CC/and 17/CD/17 be/VB/be a/DT/a black/JJ/black node/NN/node /,/, black/JJ/black height/NN/height would/MD/would not/RB/not be/VB/be the/DT/the same/NNP/same. he/PRP/he is/VBZ/is saying/VBG/saying suppose/NN/suppose this/DT/this is/VBZ/is red/VBN/red and/CC/and this/DT/this is/VBZ/is black/RP/black /,/, this/DT/this is/VBZ/is red/VBN/red and/CC/and this/DT/this is/VBZ/is red/VBN/red /,/, it/PRP/it can/MD/can not/RB/not be/NNP/be. it/PRP/it ?/./? s/NNS/s a/DT/a red/JJ/red double/JJ/double red/JJ/red problem/NNP/problem. this/DT/this is/VBZ/is red/VBN/red and/CC/and this/DT/this is/VBZ/is black/NNP/black. /:/[ hindi/NN/hindi /:/] /./. so/RB/so now/RB/now this/DT/this is/VBZ/is an/DT/an easy/JJ/easy case/NN/case to/TO/to handle/NNP/handle. if/IN/if i/PRP/i am/VBP/am trying/VBG/trying to/TO/to delete/VB/delete this/DT/this node/NN/node what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? it/PRP/it ?/./? s/NNS/s a/DT/a leaf/NN/leaf ;/:/; just/RB/just delete/VBP/delete it/PRP/it /,/, nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. it/PRP/it can/MD/can not/RB/not create/VB/create a/DT/a double/JJ/double red/VBN/red problem/NN/problem /,/, if/IN/if i/PRP/i delete/VBP/delete this/NNP/this. that/IN/that ?/./? s/NNS/s what/WP/what i/PRP/i have/VBP/have done/VBN/done /,/, just/RB/just delete/JJ/delete and/CC/and just/RB/just replace/NN/replace this/DT/this entire/NN/entire thing/NN/thing with/IN/with this/DT/this external/JJ/external node/NNP/node. it/PRP/it can/MD/can not/RB/not create/VB/create a/DT/a double/JJ/double red/VBN/red problem/NN/problem and/CC/and it/PRP/it can/MD/can not/RB/not also/RB/also change/VB/change the/DT/the black/JJ/black height/NN/height of/IN/of any/DT/any node/NN/node because/IN/because it/PRP/it ?/./? s/NNS/s a/DT/a red/JJ/red node/NN/node after/IN/after all/NNP/all. similarly/RB/similarly this/DT/this case/NN/case is/VBZ/is also/RB/also easy/NNP/easy. what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? i/PRP/i am/VBP/am trying/VBG/trying to/TO/to delete/VB/delete this/DT/this 19/CD/19. so/RB/so what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? 17/CD/17 can/MD/can move/VB/move there/RB/there and/CC/and this/DT/this entire/JJ/entire thing/NN/thing can/MD/can be/VB/be removed/NNP/removed. so/RB/so i/PRP/i have/VBP/have not/RB/not created/VBN/created a/DT/a double/JJ/double red/VBN/red problem/NN/problem /:/[ hindi/NN/hindi /:/] as/IN/as it/PRP/it was/VBD/was before/IN/before and/CC/and this/DT/this earlier/JJR/earlier had/VBD/had 10/CD/10 black/JJ/black ancestors/NNS/ancestors /,/, it/PRP/it still/RB/still has/VBZ/has 10/CD/10 black/JJ/black ancestors/NNS/ancestors and/CC/and this/DT/this node/NN/node also/RB/also has/VBZ/has same/JJ/same number/NN/number of/IN/of black/JJ/black ancestor/NNP/ancestor. so/RB/so the/DT/the only/JJ/only tricky/NN/tricky case/NN/case is/VBZ/is this/DT/this one/NNP/one. by/IN/by the/DT/the way/NN/way what/WP/what do/VBP/do these/DT/these two/CD/two cases/NNS/cases corresponds/NNS/corresponds to/TO/to in/IN/in the/DT/the case/NN/case of/IN/of 2-4/CD/2-4 tree/CD/tree ?/./? this/DT/this and/CC/and this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 30/CD/30 /CD/) /./. what/WP/what are/VBP/are we/PRP/we deleting/VBG/deleting ?/./? the/DT/the key/JJ/key that/IN/that we/PRP/we are/VBP/are removing/VBG/removing is/VBZ/is from/IN/from a/DT/a leaf/NN/leaf always/RB/always in/IN/in a/DT/a 2-4/CD/2-4 tree/NN/tree and/CC/and this/DT/this corresponds/NNS/corresponds to/TO/to the/DT/the case/NN/case when/WRB/when the/DT/the key/JJ/key that/IN/that we/PRP/we are/VBP/are removing/VBG/removing is/VBZ/is part/NN/part of/IN/of node/NN/node which/WDT/which has/VBZ/has at/IN/at least/JJS/least two/CD/two keys/NNP/keys. the/DT/the key/JJ/key that/IN/that we/PRP/we are/VBP/are removing/VBG/removing is/VBZ/is in/IN/in a/DT/a node/NN/node which/WDT/which has/VBZ/has atleast/VBN/atleast two/CD/two keys/NNS/keys and/CC/and that/IN/that was/VBD/was the/DT/the very/JJ/very simple/NN/simple case/NN/case there/NNP/there. if/IN/if this/DT/this was/VBD/was my/PRP$/my 2-4/CD/2-4 tree/NN/tree node/NN/node and/CC/and this/DT/this had/VBD/had keys/NNS/keys let/VB/let ?/./? s/NNS/s say/VBP/say 3/CD/3 and/CC/and 5/CD/5 and/CC/and i/PRP/i was/VBD/was trying/VBG/trying to/TO/to remove/VB/remove 5/CD/5 or/CC/or 3/CD/3 its/PRP$/its very/JJ/very simple/NN/simple operation/NN/operation nothing/NN/nothing needs/VBZ/needs to/TO/to be/VB/be done/VBN/done and/CC/and this/DT/this case/NN/case as/IN/as well/RB/well as/IN/as this/DT/this case/NN/case both/DT/both of/IN/of them/PRP/them correspond/VBP/correspond to/TO/to this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 54/CD/54 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 25/CD/25 /CD/) why/WRB/why does/VBZ/does this/DT/this corresponds/NNS/corresponds to/TO/to this/DT/this ?/./? this/DT/this is/VBZ/is the/DT/the node/NN/node /,/, even/RB/even here/RB/here this/DT/this has/VBZ/has to/TO/to have/VB/have a/DT/a black/JJ/black parent/NN/parent and/CC/and so/RB/so this/DT/this is/VBZ/is the/DT/the node/NN/node then/RB/then corresponding/VBG/corresponding node/NN/node in/IN/in the/DT/the 2-4/CD/2-4 tree/NN/tree and/CC/and this/DT/this is/VBZ/is a/DT/a corresponding/NN/corresponding node/NN/node /,/, it/PRP/it might/MD/might be/VB/be even/RB/even larger/JJR/larger actually/NNP/actually. it/PRP/it might/MD/might have/VB/have 3/CD/3 keys/NNS/keys ,this/-NONE-/,this might/MD/might also/RB/also be/VB/be red/NNP/red. /NNP/[ hindi/NN/hindi /:/] /./. this/DT/this however/NN/however is/VBZ/is a/DT/a tricky/JJ/tricky case/NN/case /,/, this/DT/this corresponds/NNS/corresponds to/TO/to a/DT/a single/JJ/single key/JJ/key in/IN/in a/DT/a 2-4/CD/2-4 tree/NN/tree node/NNP/node. so/RB/so in/IN/in the/DT/the 2-4/CD/2-4 tree/NN/tree node/NN/node /,/, if/IN/if i/PRP/i remove/VBP/remove this/DT/this key/JJ/key then/RB/then the/DT/the node/NN/node becomes/VBZ/becomes empty/NNP/empty. that/IN/that ?/./? s/NNS/s a/DT/a problem/NN/problem and/CC/and here/RB/here this/DT/this would/MD/would correspond/VB/correspond to/TO/to change/VB/change in/IN/in the/DT/the black/JJ/black height/NNP/height. hence/NN/hence we/PRP/we can/MD/can assume/VB/assume that/IN/that the/DT/the door/NN/door deleted/VBD/deleted is/VBZ/is a/DT/a black/JJ/black leaf/NN/leaf that/WDT/that is/VBZ/is this/DT/this is/VBZ/is the/DT/the only/JJ/only case/NN/case which/WDT/which is/VBZ/is really/RB/really interesting/JJ/interesting for/IN/for us/PRP/us and/CC/and we/PRP/we removing/VBG/removing this/DT/this reduces/NNS/reduces the/DT/the black/JJ/black depth/NN/depth of/IN/of an/DT/an external/JJ/external node/NN/node by/IN/by one/CD/one and/CC/and so/RB/so in/IN/in general/JJ/general we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume the/DT/the following/NNP/following. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the following/JJ/following step/NNP/step. there/RB/there is/VBZ/is some/DT/some sub/NN/sub tree/NN/tree whose/WP$/whose black/JJ/black height/NN/height is/VBZ/is reduced/VBN/reduced by/IN/by one/CD/one and/CC/and we/PRP/we want/VBP/want to/TO/to re/VB/re organize/NN/organize the/DT/the tree/NN/tree to/TO/to take/VB/take care/NN/care of/IN/of that/NNP/that. why/WRB/why i/PRP/i am/VBP/am saying/VBG/saying sub/NN/sub tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 25/CD/25 /CD/) where/WRB/where this/DT/this is/VBZ/is a/DT/a sub/NN/sub tree/NNP/tree. what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen is/VBZ/is that/IN/that as/IN/as we/PRP/we do/VBP/do reorganizing/VBG/reorganizing this/DT/this tree/NN/tree could/MD/could become/VB/become larger/JJR/larger and/CC/and larger/NNP/larger. this/DT/this is/VBZ/is a/DT/a black/JJ/black height/NN/height /:/[ hindi/NN/hindi /:/] and/CC/and we/PRP/we will/MD/will see/VB/see that/NNP/that. so/RB/so it/PRP/it ?/./? s/NNS/s going/VBG/going to/TO/to have/VB/have a/DT/a bunch/NN/bunch of/IN/of cases/NNS/cases as/IN/as procedure/NNP/procedure. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 44/CD/44 /CD/) so/RB/so let/JJ/let me/PRP/me assume/VBP/assume that/IN/that this/DT/this is/VBZ/is a/DT/a tree/NN/tree /:/[ hindi/NN/hindi /:/] black/JJ/black height/NN/height because/IN/because of/IN/of the/DT/the deletion/NN/deletion once/RB/once /./[ hindi/NN/hindi /:/] /./. so/RB/so what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the parent/NNP/parent. so/RB/so this/DT/this is/VBZ/is the/DT/the tree/NN/tree /:/[ hindi/NN/hindi /:/] root/NN/root has/VBZ/has sub/NN/sub tree/NNP/tree. i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at its/PRP$/its parent/NNP/parent. the/DT/the parent/NN/parent is/VBZ/is let/VBN/let ?/./? s/NNS/s say/VBP/say /:/[ hindi/NN/hindi /:/] /./. so/RB/so first/RB/first i/PRP/i will/MD/will check/VB/check whether/IN/whether a/DT/a is/VBZ/is a/DT/a black/JJ/black or/CC/or a/DT/a is/VBZ/is red/VBN/red depending/VBG/depending upon/IN/upon this/DT/this i/NN/i will/MD/will have/VB/have two/CD/two different/JJ/different cases/NNS/cases happening/NNP/happening. if/IN/if a/DT/a is/VBZ/is red/VBN/red so/RB/so this/DT/this is/VBZ/is a/DT/a picture/NNP/picture. what/WP/what about/IN/about the/DT/the other/JJ/other child/NN/child of/IN/of a/DT/a ?/./? it/PRP/it has/VBZ/has to/TO/to be/VB/be black/JJ/black lets/NNS/lets says/VBZ/says its/PRP$/its b/NNP/b. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the two/CD/two children/NNS/children of/IN/of b/NNP/b. let/NN/let ?/./? s/NNS/s call/VBP/call them/PRP/them c/NNP/c. you/PRP/you do/VBP/do not/RB/not know/VB/know whether/IN/whether they/PRP/they are/VBP/are black/JJ/black or/CC/or red/NNP/red. a/DT/a is/VBZ/is just/RB/just name/NN/name for/IN/for this/DT/this node/NN/node nothing/NN/nothing else/NNP/else. this/DT/this is/VBZ/is the/DT/the tree/NN/tree whose/WP$/whose black/JJ/black height/NN/height is/VBZ/is reduced/VBN/reduced by/IN/by one/CD/one /,/, the/DT/the sub/NN/sub tree/NNP/tree. i/PRP/i am/VBP/am just/RB/just looking/VBG/looking at/IN/at the/DT/the root/NN/root of/IN/of the/DT/the sub/NN/sub tree/NN/tree and/CC/and its/PRP$/its parent/NN/parent /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 44/CD/44 /CD/) /./. so/RB/so a/DT/a is/VBZ/is the/DT/the parent/NNP/parent. let/NN/let me/PRP/me just/RB/just clarify/VB/clarify this/DT/this point/NNP/point. so/RB/so what/WP/what you/PRP/you are/VBP/are saying/VBG/saying is/VBZ/is we/PRP/we are/VBP/are interested/JJ/interested in/IN/in when/WRB/when we/PRP/we are/VBP/are deleting/VBG/deleting this/DT/this black/NN/black node/NN/node which/WDT/which has/VBZ/has two/CD/two external/JJ/external nodes/NNS/nodes and/CC/and this/DT/this has/VBZ/has some/DT/some parents/NNS/parents somewhere/NNP/somewhere. when/WRB/when i/PRP/i delete/VBP/delete this/DT/this entire/JJ/entire thing/NN/thing i/PRP/i replace/VBP/replace it/PRP/it will/MD/will one/VB/one external/JJ/external node/NN/node here/NNP/here. so/RB/so essentially/RB/essentially this/DT/this sub/NN/sub tree/NN/tree /,/, this/DT/this node/NN/node and/CC/and its/PRP$/its two/CD/two external/JJ/external node/NN/node children/NNS/children /:/[ hindi/NN/hindi /:/] /./. it/PRP/it is/VBZ/is getting/VBG/getting replaced/VBN/replaced by/IN/by this/DT/this /,/, black/VBP/black height/VBN/height zero/NN/zero /:/[ hindi/NN/hindi /:/] /./. the/DT/the problem/NN/problem why/WRB/why we/PRP/we have/VBP/have to/TO/to formulate/VB/formulate this/DT/this way/NN/way is/VBZ/is that/IN/that this/DT/this is/VBZ/is going/VBG/going to/TO/to in/IN/in some/DT/some cases/NNS/cases what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen is/VBZ/is this/DT/this tree/NN/tree is/VBZ/is going/VBG/going to/TO/to expand/NNP/expand. so/RB/so just/RB/just take/VB/take this/DT/this for/IN/for now/RB/now and/CC/and we/PRP/we will/MD/will see/VB/see /:/[ hindi/NN/hindi /:/] if/IN/if you/PRP/you are/VBP/are confused/VBN/confused then/RB/then just/RB/just think/VBP/think of/IN/of this/DT/this has/VBZ/has the/DT/the single/JJ/single node/NN/node with/IN/with two/CD/two children/NNS/children like/IN/like this/DT/this picture/NNP/picture. you/PRP/you can/MD/can think/VB/think of/IN/of this/DT/this blue/JJ/blue triangle/NN/triangle as/IN/as that/DT/that /,/, its/PRP$/its black/JJ/black height/NN/height is/VBZ/is reduced/VBN/reduced by/IN/by one/NNP/one. so/RB/so this/DT/this is/VBZ/is one/CD/one possibility/NNP/possibility. if/IN/if this/DT/this is/VBZ/is red/VBN/red and/CC/and this/DT/this child/NN/child is/VBZ/is black/JJ/black and/CC/and we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what its/PRP$/its two/CD/two children/NNS/children colored/VBN/colored are/NNP/are. the/DT/the other/JJ/other is/VBZ/is that/IN/that if/IN/if this/DT/this is/VBZ/is black/RP/black /,/, a/DT/a is/VBZ/is black/JJ/black then/RB/then b/NN/b could/MD/could be/VB/be red/VBN/red or/CC/or black/NNP/black. so/RB/so depending/VBG/depending upon/IN/upon what/WP/what the/DT/the color/NN/color of/IN/of b/NN/b is/VBZ/is we/PRP/we will/MD/will have/VB/have different/JJ/different cases/NNS/cases here/RB/here /,/, depending/VBG/depending upon/IN/upon what/WP/what the/DT/the color/NN/color of/IN/of c/NN/c is/VBZ/is we/PRP/we will/MD/will have/VB/have different/JJ/different cases/NNP/cases. so/RB/so these/DT/these are/VBP/are two/CD/two cases/NNS/cases either/CC/either both/DT/both of/IN/of these/DT/these are/VBP/are black/NNP/black. that/IN/that could/MD/could be/VB/be one/CD/one case/NNP/case. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 30/CD/30 /CD/) so/RB/so i/PRP/i have/VBP/have not/RB/not shown/VBN/shown them/PRP/them black/VBP/black /,/, i/PRP/i am/VBP/am just/RB/just showing/VBG/showing you/PRP/you what/WP/what the/DT/the various/JJ/various cases/NNS/cases are/VBP/are then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to handle/VB/handle these/DT/these cases/NNS/cases separately/RB/separately one/CD/one after/IN/after the/DT/the other/NNP/other. so/RB/so one/CD/one case/NN/case when/WRB/when both/DT/both of/IN/of these/DT/these are/VBP/are black/JJ/black /,/, the/DT/the other/JJ/other case/NN/case is/VBZ/is when/WRB/when one/CD/one of/IN/of these/DT/these is/VBZ/is red/NNP/red. this/DT/this is/VBZ/is let/VB/let ?/./? s/NNS/s say/VBP/say red/VBN/red and/CC/and these/DT/these is/VBZ/is one/CD/one case/NN/case for/IN/for us/NNP/us. this/DT/this is/VBZ/is just/RB/just a/DT/a part/NN/part of/IN/of the/DT/the tree/NNP/tree. there/RB/there would/MD/would be/VB/be a/DT/a left/NN/left sub/NN/sub tree/NN/tree here/RB/here /,/, there/EX/there would/MD/would be/VB/be some/DT/some sub/NN/sub tree/NN/tree is/VBZ/is hanging/VBG/hanging here/RB/here and/CC/and so/RB/so on/IN/on and/CC/and of/IN/of course/NN/course this/DT/this will/MD/will have/VB/have something/NN/something /,/, this/DT/this will/MD/will have/VB/have a/DT/a parent/NN/parent and/CC/and more/JJR/more happening/VBG/happening here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 28/CD/28 /CD/) /./. this/DT/this is/VBZ/is the/DT/the case/NN/case when/WRB/when both/DT/both are/VBP/are black/JJ/black so/RB/so i/PRP/i have/VBP/have not/RB/not shown/VBN/shown them/PRP/them here/RB/here but/CC/but this/DT/this will/MD/will be/VB/be another/DT/another case/NNP/case. let/NN/let ?/./? s/NNS/s come/VBP/come here/NNP/here. now/RB/now depending/VBG/depending upon/IN/upon what/WP/what b/NN/b is/VBZ/is we/PRP/we will/MD/will have/VB/have two/CD/two case/NN/case red/VBD/red or/CC/or black/NNP/black. so/RB/so b/VB/b is/VBZ/is red/VBN/red then/RB/then this/DT/this is/VBZ/is the/DT/the red/VBN/red node/NN/node then/RB/then it/PRP/it will/MD/will have/VB/have a/DT/a right/NN/right child/NN/child which/WDT/which is/VBZ/is black/VBP/black /,/, it/PRP/it ?/./? s/NNS/s right/RB/right child/VB/child can/MD/can not/RB/not be/VB/be a/DT/a red/VBN/red and/CC/and this/DT/this will/MD/will be/VB/be black/JJ/black and/CC/and now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at two/CD/two children/NNS/children and/CC/and depending/VBG/depending upon/IN/upon what/WP/what the/DT/the two/CD/two children/NNS/children are/VBP/are i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have two/CD/two more/JJR/more cases/NNP/cases. the/DT/the other/JJ/other option/NN/option is/VBZ/is when/WRB/when b/NN/b is/VBZ/is black/JJ/black in/IN/in which/WDT/which case/NN/case we/PRP/we will/MD/will have/VB/have two/CD/two children/NNS/children and/CC/and depending/VBG/depending upon/IN/upon what/WP/what these/DT/these two/CD/two children/NNS/children are/VBP/are once/RB/once again/RB/again we/PRP/we will/MD/will have/VB/have two/CD/two cases/NNP/cases. so/RB/so here/RB/here there/EX/there is/VBZ/is one/CD/one case/NN/case when/WRB/when one/CD/one of/IN/of this/DT/this two/CD/two is/VBZ/is red/NNP/red. so/RB/so that/IN/that is/VBZ/is the/DT/the case/NN/case like/IN/like this/DT/this and/CC/and the/DT/the other/JJ/other is/VBZ/is when/WRB/when both/DT/both of/IN/of them/PRP/them are/VBP/are black/RB/black which/WDT/which means/VBZ/means i/PRP/i will/MD/will just/RB/just look/VB/look at/IN/at the/DT/the scan/NN/scan structure/NNP/structure. similarly/RB/similarly here/RB/here /,/, there/EX/there would/MD/would be/VB/be one/CD/one case/NN/case when/WRB/when both/DT/both of/IN/of them/PRP/them are/VBP/are black/NNP/black. when/WRB/when one/CD/one of/IN/of them/PRP/them is/VBZ/is red/VBN/red then/RB/then i/PRP/i will/MD/will have/VB/have this/DT/this and/CC/and when/WRB/when both/DT/both are/VBP/are black/JJ/black i/PRP/i will/MD/will have/VB/have this/NNP/this. so/RB/so in/IN/in this/DT/this manner/NN/manner /,/, this/DT/this is/VBZ/is just/RB/just a/DT/a kind/NN/kind of/IN/of a/DT/a starting/NN/starting picture/NN/picture to/TO/to show/VB/show you/PRP/you that/IN/that there/EX/there will/MD/will be/VB/be six/CD/six cases/NNS/cases that/WDT/that we/PRP/we will/MD/will be/VB/be looking/VBG/looking at/IN/at and/CC/and we/PRP/we will/MD/will see/VB/see what/WP/what the/DT/the tree/NN/tree organization/NN/organization /,/, re/NN/re organization/NN/organization has/VBZ/has to/TO/to be/VB/be done/NNP/done. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to refer/VB/refer this/DT/this as/IN/as case/NN/case 1.1/CD/1.1 /,/, 1.2/CD/1.2 this/DT/this will/MD/will be/VB/be 2.1.1/CD/2.1.1. so/RB/so this/DT/this is/VBZ/is the/DT/the first/JJ/first case/NN/case we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/NNP/at. so/RB/so this/DT/this is/VBZ/is what/WP/what the/DT/the picture/NN/picture would/MD/would be/NNP/be. so/RB/so a/DT/a b/NN/b c/NN/c and/CC/and basically/RB/basically a/DT/a b/NN/b c/NN/c and/CC/and this/DT/this is/VBZ/is the/DT/the tree/NN/tree sub/NN/sub tree/NN/tree whose/WP$/whose height/NN/height is/VBZ/is gone/VBN/gone from/IN/from h/NN/h to/TO/to h/VB/h /:/- 1/CD/1 let/NN/let see/NN/see the/DT/the black/JJ/black height/NN/height is/VBZ/is gone/VBN/gone from/IN/from h/NN/h to/TO/to h/VB/h ?/./? 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 53/CD/53 /CD/) now/RB/now what/WP/what will/MD/will be/VB/be the/DT/the black/JJ/black height/NN/height ?/./? so/RB/so all/DT/all these/DT/these heights/NNS/heights are/VBP/are now/RB/now black/JJ/black heights/NNP/heights. what/WP/what is/VBZ/is the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this sub/NN/sub tree/NN/tree ?/./? i/PRP/i have/VBP/have written/VBN/written h/NN/h ?/./? 1/CD/1. why/WRB/why is/VBZ/is it/PRP/it h/RB/h ?/./? 1/CD/1 ?/./? earlier/JJR/earlier this/DT/this had/VBD/had a/DT/a black/JJ/black height/NN/height of/IN/of h/NN/h /,/, what/WP/what should/MD/should be/VB/be the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this ?/./? h/NN/h /:/- 1/CD/1 because/IN/because there/EX/there is/VBZ/is one/CD/one black/JJ/black node/NN/node here/RB/here already/NNP/already. so/RB/so this/DT/this will/MD/will have/VB/have the/DT/the black/JJ/black height/NN/height of/IN/of h/NN/h ?/./? 1/CD/1. similarly/RB/similarly this/DT/this will/MD/will have/VB/have black/JJ/black height/NN/height of/IN/of h/NN/h -1/-NONE-/-1 /,/, this/DT/this will/MD/will have/VB/have the/DT/the black/JJ/black height/NN/height of/IN/of h/NN/h -1/-NONE-/-1 and/CC/and if/IN/if a/DT/a node/NN/node is/VBZ/is red/VBN/red then/RB/then both/DT/both its/PRP$/its children/NNS/children have/VBP/have to/TO/to be/VB/be black/NNP/black. red/VBD/red node/NN/node can/MD/can not/RB/not have/VB/have a/DT/a red/VBN/red child/NN/child ;/:/; it/PRP/it ?/./? s/NNS/s a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. the/DT/the other/JJ/other possibilities/NNS/possibilities c/IN/c is/VBZ/is the/DT/the left/VBN/left child/NN/child of/IN/of b/NN/b so/IN/so it/PRP/it ?/./? s/NNS/s a/DT/a symmetric/JJ/symmetric thing/NNP/thing. now/RB/now how/WRB/how are/VBP/are we/PRP/we going/VBG/going to/TO/to reorganize/VB/reorganize this/DT/this tree/NN/tree ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to reorganize/VB/reorganize this/DT/this tree/NN/tree in/IN/in this/DT/this manner/NNP/manner. so/RB/so it/PRP/it ?/./? s/NNS/s basically/RB/basically a/DT/a rotation/NN/rotation /,/, b/NN/b goes/VBZ/goes to/TO/to the/DT/the top/JJ/top /,/, c/NN/c goes/VBZ/goes here/RB/here /,/, a/DT/a comes/VBZ/comes there/EX/there and/CC/and these/DT/these have/VBP/have not/RB/not labeled/VBN/labeled these/DT/these things/NNS/things but/CC/but you/PRP/you can/MD/can understand/VB/understand 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 ;/:/; 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 in/IN/in this/DT/this order/NN/order will/MD/will set/VB/set there/NNP/there. we/PRP/we will/MD/will see/VB/see in/IN/in this/DT/this kind/NN/kind of/IN/of reorganization/NN/reorganization when/WRB/when you/PRP/you are/VBP/are taking/VBG/taking of/IN/of avl/NN/avl trees/NNP/trees. now/RB/now what/WP/what does/VBZ/does this/DT/this correspond/NN/correspond in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree ?/./? let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at it/NNP/it. so/RB/so what/WP/what this/DT/this corresponds/VBZ/corresponds to/TO/to ?/./? this/DT/this picture/NN/picture is/VBZ/is basically/RB/basically that/IN/that this/DT/this node/NN/node was/VBD/was empty/JJ/empty that/IN/that ?/./? s/NNS/s why/WRB/why the/DT/the height/NN/height went/VBD/went down/NNP/down. in/IN/in the/DT/the parent/NN/parent node/NN/node i/PRP/i have/VBP/have an/DT/an a/DT/a and/CC/and it/PRP/it is/VBZ/is red/VBN/red which/WDT/which means/VBZ/means the/DT/the parent/NN/parent node/NN/node in/IN/in the/DT/the 2-4/CD/2-4 tree/NN/tree has/VBZ/has at/IN/at least/JJS/least two/CD/two keys/NNP/keys. /NNP/[ hindi/NN/hindi /:/] this/DT/this will/MD/will be/VB/be always/RB/always black/JJ/black /NN/[ hindi/NN/hindi /:/] why/WRB/why is/VBZ/is this/DT/this rotation/NN/rotation ?/./? student/NN/student /:/: c/NN/c is/VBZ/is greater/JJR/greater than/IN/than b/NNP/b. you/PRP/you are/VBP/are right/RB/right perhaps/RB/perhaps /,/, so/RB/so you/PRP/you are/VBP/are saying/VBG/saying a/DT/a is/VBZ/is here/RB/here /:/[ hindi/NN/hindi /:/] /,/, so/RB/so it/PRP/it will/MD/will become/VB/become a/DT/a c/NN/c and/CC/and b/NNP/b. so/RB/so ignore/JJR/ignore this/DT/this one/CD/one /,/, it/PRP/it ?/./? s/NNS/s for/IN/for this/DT/this one/CD/one /,/, this/DT/this picture/NN/picture /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 10/CD/10 /CD/) /./. now/RB/now let/VB/let ?/./? s/NNS/s see/VBP/see what/WP/what this/DT/this corresponds/VBZ/corresponds to/TO/to in/IN/in the/DT/the case/NN/case of/IN/of 2-4/CD/2-4 tree/CD/tree because/IN/because that/DT/that ?/./? s/NNS/s where/WRB/where all/DT/all of/IN/of this/DT/this motivation/NN/motivation is/VBZ/is coming/VBG/coming from/NNP/from. so/RB/so this/DT/this is/VBZ/is a/DT/a red/VBN/red node/NN/node which/WDT/which means/VBZ/means its/PRP$/its parent/NN/parent is/VBZ/is a/DT/a black/NNP/black. so/RB/so when/WRB/when i/PRP/i had/VBD/had created/VBN/created the/DT/the 2-4/CD/2-4 tree/NN/tree node/NN/node i/PRP/i would/MD/would have/VB/have at/IN/at least/JJS/least two/CD/two keys/NNS/keys in/IN/in the/DT/the 2-4/CD/2-4 need/VBP/need tree/NN/tree node/NN/node corresponding/VBG/corresponding to/TO/to this/DT/this guy/NN/guy /,/, at/IN/at least/JJS/least two/CD/two /,/, may/MD/may be/VB/be three/CD/three but/CC/but at/IN/at least/JJS/least two/NNP/two. so/RB/so that/IN/that is/VBZ/is this/DT/this one/CD/one /,/, so/RB/so it/PRP/it could/MD/could be/VB/be either/RB/either two/CD/two or/CC/or three/CD/three i/PRP/i put/VBD/put the/DT/the a/DT/a here/NNP/here. now/RB/now in/IN/in the/DT/the 2-4/CD/2-4 tree/NN/tree node/NN/node corresponding/VBG/corresponding to/TO/to this/DT/this guy/NN/guy /,/, actually/RB/actually i/PRP/i took/VBD/took this/DT/this one/CD/one /,/, so/RB/so i/PRP/i would/MD/would have/VB/have b/NN/b and/CC/and i/PRP/i would/MD/would have/VB/have c/NN/c /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 47/CD/47 /CD/) /./. so/RB/so i/PRP/i would/MD/would have/VB/have b/NN/b and/CC/and c/NN/c may/MD/may be/VB/be there/RB/there is/VBZ/is another/DT/another key/NN/key if/IN/if this/DT/this guy/NN/guy was/VBD/was red/NNP/red. so/RB/so this/DT/this is/VBZ/is what/WP/what the/DT/the picture/NN/picture is/VBZ/is and/CC/and then/RB/then what/WP/what do/VBP/do we/PRP/we do/VBP/do in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree ?/./? i/PRP/i have/VBP/have a/DT/a problem/NN/problem because/IN/because i/PRP/i don/VBP/don ?/./? t/NN/t have/VBP/have any/DT/any key/JJ/key in/IN/in this/DT/this node/NN/node /,/, what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? i/PRP/i borrow/VBP/borrow from/IN/from my/PRP$/my sibling/NNP/sibling. my/PRP$/my sibling/NN/sibling can/MD/can lend/VB/lend me/PRP/me because/IN/because it/PRP/it has/VBZ/has at/IN/at least/JJS/least two/CD/two keys/NNP/keys. so/RB/so it/PRP/it is/VBZ/is going/VBG/going to/TO/to lend/VB/lend me/PRP/me one/NNP/one. so/RB/so one/CD/one of/IN/of the/DT/the key/JJ/key is/VBZ/is going/VBG/going to/TO/to go/VB/go up/RP/up from/IN/from here/RB/here to/TO/to here/RB/here and/CC/and one/CD/one is/VBZ/is going/VBG/going to/TO/to come/VB/come down/RP/down from/IN/from here/RB/here to/TO/to here/NNP/here. so/RB/so that/IN/that ?/./? s/NNS/s exactly/RB/exactly what/WP/what is/VBZ/is happening/NNP/happening. so/RB/so /:/[ hindi/NN/hindi /:/] one/CD/one goes/VBZ/goes up/RP/up /,/, let/VB/let ?/./? s/NNS/s say/VBP/say the/DT/the b/NN/b goes/VBZ/goes up/RP/up /,/, c/NN/c remains/VBZ/remains here/NNP/here. when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at b/NN/b c/NN/c /,/, so/RB/so this/DT/this corresponds/NNS/corresponds to/TO/to this/NNP/this. so/RB/so let/VB/let me/PRP/me correct/VB/correct this/DT/this in/IN/in a/DT/a second/JJ/second /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 00/CD/00 /CD/) /./. so/RB/so what/WP/what we/PRP/we are/VBP/are saying/VBG/saying ?/./? suppose/NN/suppose we/PRP/we were/VBD/were to/TO/to keep/VB/keep this/DT/this one/CD/one in/IN/in picture/NNP/picture. so/RB/so lets/VBZ/lets remove/JJ/remove this/DT/this one/CD/one now/RB/now and/CC/and then/RB/then this/DT/this should/MD/should be/VB/be c/JJ/c and/CC/and this/DT/this should/MD/should be/VB/be b/NNP/b. now/RB/now it/PRP/it ?/./? s/NNS/s okay/NNP/okay. so/RB/so let/VB/let ?/./? s/NNS/s keep/VB/keep this/DT/this in/IN/in mind/NNP/mind. now/RB/now what/WP/what ?/./? s/NNS/s going/VBG/going to/TO/to happen/VB/happen /,/, we/PRP/we have/VBP/have c/NN/c and/CC/and we/PRP/we have/VBP/have b/NN/b here/RB/here so/RB/so which/WDT/which is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is going/VBG/going to/TO/to go/VB/go up/RP/up ?/./? c/NN/c and/CC/and a/DT/a is/VBZ/is going/VBG/going to/TO/to come/VB/come down/NNP/down. so/RB/so in/IN/in the/DT/the new/JJ/new node/NN/node that/WDT/that i/PRP/i get/VBP/get here/RB/here /,/, i/PRP/i would/MD/would have/VB/have only/RB/only one/CD/one key/JJ/key a/NNP/a. in/IN/in node/NN/node that/IN/that i/PRP/i have/VBP/have here/RB/here c/JJ/c is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be there/RB/there and/CC/and in/IN/in this/DT/this node/NN/node a/DT/a will/MD/will get/VB/get replaced/VBN/replaced by/IN/by the/DT/the c/NNP/c. in/IN/in this/DT/this node/NN/node a/DT/a is/VBZ/is the/DT/the only/JJ/only key/JJ/key which/WDT/which means/VBZ/means a/DT/a is/VBZ/is black/NNP/black. in/IN/in this/DT/this node/NN/node b/NN/b is/VBZ/is one/CD/one of/IN/of the/DT/the key/JJ/key and/CC/and if/IN/if there/EX/there were/VBD/were one/CD/one other/JJ/other key/JJ/key here/RB/here either/DT/either b/NN/b is/VBZ/is only/RB/only key/JJ/key in/IN/in this/DT/this node/NN/node or/CC/or if/IN/if there/EX/there was/VBD/was one/CD/one other/JJ/other key/JJ/key here/RB/here then/RB/then it/PRP/it is/VBZ/is already/RB/already sitting/VBG/sitting here/RB/here /,/, we/PRP/we don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to worry/VB/worry about/IN/about that/NNP/that. so/RB/so b/VB/b becomes/NNS/becomes the/DT/the black/JJ/black node/NN/node and/CC/and this/DT/this c/NN/c why/WRB/why should/MD/should c/VB/c be/VB/be a/DT/a red/VBN/red node/NN/node because/IN/because there/EX/there are/VBP/are more/JJR/more keys/NNS/keys here/NNP/here. so/RB/so c/JJ/c can/MD/can continue/VB/continue to/TO/to be/VB/be a/DT/a red/VBN/red node/NNP/node. so/RB/so this/DT/this is/VBZ/is just/RB/just for/IN/for motivation/NN/motivation but/CC/but if/IN/if you/PRP/you have/VBP/have look/VBP/look at/IN/at this/NNP/this. this/DT/this is/VBZ/is good/JJ/good enough/NNP/enough. we/PRP/we have/VBP/have taken/VBN/taken care/NN/care of/IN/of the/DT/the height/NN/height problem/NN/problem /,/, this/DT/this is/VBZ/is my/PRP$/my new/JJ/new re/NN/re coloring/VBG/coloring /,/, this/DT/this was/VBD/was red/VBN/red /,/, this/DT/this is/VBZ/is also/RB/also red/VBN/red so/RB/so they/PRP/they can/MD/can not/RB/not be/VB/be a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. why/WRB/why ?/./? because/IN/because there/EX/there is/VBZ/is a/DT/a double/JJ/double red/VBN/red problem/NN/problem if/IN/if the/DT/the parent/NN/parent is/VBZ/is red/VBN/red but/CC/but the/DT/the parent/NN/parent is/VBZ/is not/RB/not red/NNP/red. if/IN/if the/DT/the parent/NN/parent is/VBZ/is red/VBN/red then/RB/then there/RB/there is/VBZ/is a/DT/a double/JJ/double red/VBN/red but/CC/but if/IN/if the/DT/the parent/NN/parent is/VBZ/is red/VBN/red then/RB/then the/DT/the parent/NN/parent of/IN/of this/DT/this was/VBD/was also/RB/also red/VBN/red which/WDT/which means/VBZ/means there/RB/there was/VBD/was already/RB/already a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. so/RB/so there/RB/there is/VBZ/is no/DT/no double/JJ/double red/VBN/red problem/NNP/problem. let/NN/let check/NN/check the/DT/the height/NN/height business/NNP/business. so/RB/so black/JJ/black height/NN/height is/VBZ/is h/JJ/h -1/-NONE-/-1 and/CC/and now/RB/now what/WP/what is/VBZ/is the/DT/the new/JJ/new black/NN/black height/NN/height of/IN/of this/DT/this sub/NN/sub tree/NN/tree ?/./? so/RB/so for/IN/for all/DT/all these/DT/these external/JJ/external node/NN/node it/PRP/it will/MD/will be/VB/be h/JJ/h /,/, for/IN/for all/PDT/all of/IN/of these/DT/these also/RB/also it/PRP/it will/MD/will be/VB/be h/JJ/h /,/, for/IN/for all/PDT/all these/DT/these will/MD/will be/VB/be h/JJ/h /,/, for/IN/for this/DT/this it/PRP/it will/MD/will be/VB/be h/JJ/h /,/, the/DT/the black/JJ/black height/NN/height is/VBZ/is h/JJ/h /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 15/CD/15 /CD/) /./. what/WP/what was/VBD/was the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this guy/NN/guy ?/./? h/NN/h /:/- 1/CD/1 +/CD/+ 1/CD/1 /,/, h/JJ/h /:/- 1/CD/1 +/CD/+ 1/CD/1 /,/, h/JJ/h ?/./? 1/CD/1 +/CD/+ 1/CD/1 and/CC/and this/DT/this was/VBD/was h/NN/h to/TO/to begin/VB/begin with/IN/with /CD/[ hindi/NN/hindi /:/] /./. so/RB/so the/DT/the problem/NN/problem is/VBZ/is taken/VBN/taken care/NN/care of/NNP/of. you/PRP/you have/VBP/have not/RB/not introduced/VBN/introduced double/JJ/double red/VBN/red and/CC/and the/DT/the black/JJ/black height/NN/height has/VBZ/has been/VBN/been restored/NNP/restored. what/WP/what case/NN/case was/VBD/was that/IN/that ?/./? so/RB/so that/IN/that was/VBD/was very/RB/very first/JJ/first case/NNP/case. let/NN/let me/PRP/me just/RB/just show/VBP/show you/PRP/you so/RB/so it/PRP/it was/VBD/was this/DT/this one/CD/one /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 58/CD/58 /CD/) /,/, so/RB/so we/PRP/we have/VBP/have to/TO/to go/VB/go through/RP/through this/DT/this one/CD/one /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 02/CD/02 /CD/) /./. so/RB/so we/PRP/we quickly/RB/quickly now/RB/now start/VB/start going/VBG/going through/IN/through them/PRP/them /:/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 53/CD/53 /CD/) /./. this/DT/this is/VBZ/is when/WRB/when parent/NN/parent is/VBZ/is a/DT/a red/VBN/red node/NN/node /,/, so/RB/so this/DT/this is/VBZ/is what/WP/what is/VBZ/is written/NNP/written. so/RB/so parent/NN/parent by/IN/by parent/NN/parent i/PRP/i mean/VBP/mean this/DT/this is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree whose/WP$/whose height/NN/height is/VBZ/is decreased/VBN/decreased /,/, i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the parent/NN/parent of/IN/of this/DT/this root/NN/root it/PRP/it ?/./? s/NNS/s a/DT/a red/JJ/red node/NNP/node. it/PRP/it has/VBZ/has a/DT/a child/NN/child which/WDT/which is/VBZ/is black/VBP/black then/RB/then black/JJ/black child/NN/child has/VBZ/has the/DT/the red/VBN/red child/NNP/child. this/DT/this is/VBZ/is what/WP/what we/PRP/we do/NNP/do. so/RB/so the/DT/the other/JJ/other thing/NN/thing is/VBZ/is when/WRB/when it/PRP/it does/VBZ/does not/RB/not have/VB/have any/DT/any red/VBN/red child/NN/child /,/, b/NN/b does/VBZ/does not/RB/not have/VB/have any/DT/any red/VBN/red child/NN/child that/IN/that would/MD/would be/VB/be in/IN/in a/DT/a second/JJ/second case/NNP/case. so/RB/so let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 55/CD/55 /CD/) so/RB/so b/NN/b has/VBZ/has no/DT/no red/VBN/red child/NNP/child. in/IN/in this/DT/this case/NN/case the/DT/the picture/NN/picture is/VBZ/is a/DT/a b/NN/b and/CC/and both/DT/both of/IN/of this/DT/this sub/NN/sub tree/NN/tree have/VBP/have as/RB/as the/DT/the root/NN/root black/NN/black children/NNP/children. now/RB/now this/DT/this went/NN/went from/IN/from the/DT/the h/NN/h to/TO/to h/VB/h /:/- 1/CD/1. so/RB/so this/DT/this has/VBZ/has to/TO/to have/VB/have a/DT/a black/JJ/black height/NN/height of/IN/of h/NN/h /:/- 1/CD/1 and/CC/and this/DT/this is/VBZ/is also/RB/also have/VBP/have a/DT/a black/JJ/black height/NN/height of/IN/of h/NN/h -1/NNP/-1. why/WRB/why because/IN/because originally/RB/originally black/JJ/black height/NN/height of/IN/of entire/JJ/entire tree/NN/tree was/VBD/was h/NNP/h. so/RB/so this/DT/this must/MD/must be/VB/be h/JJ/h /:/- 1/CD/1 /,/, this/DT/this must/MD/must be/VB/be h/JJ/h /:/- 1/CD/1. now/RB/now what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do ?/./? just/RB/just the/DT/the re/NN/re coloring/VBG/coloring will/MD/will solve/VB/solve the/DT/the problem/NN/problem because/IN/because i/PRP/i make/VBP/make this/DT/this red/VBN/red and/CC/and make/VB/make this/DT/this black/NNP/black. what/WP/what is/VBZ/is the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the resulting/VBG/resulting tree/NN/tree now/RB/now ?/./? h/NN/h /,/, which/WDT/which is/VBZ/is what/WP/what the/DT/the original/JJ/original height/NN/height was/NNP/was. why/WRB/why this/DT/this was/VBD/was not/RB/not introduced/VBN/introduced the/DT/the double/JJ/double red/NN/red ?/./? i/PRP/i made/VBD/made this/DT/this red/VBN/red /,/, no/DT/no this/DT/this could/MD/could be/VB/be a/DT/a red/NNP/red. that/WDT/that ?/./? s/VBZ/s why/WRB/why we/PRP/we have/VBP/have taken/VBN/taken care/NN/care of/IN/of the/DT/the other/JJ/other case/NN/case first/NNP/first. if/IN/if any/DT/any one/CD/one of/IN/of these/DT/these where/WRB/where red/VBN/red /-NONE-/[ hindi/NN/hindi /:/] and/CC/and what/WP/what does/VBZ/does this/DT/this corresponds/NNS/corresponds to/TO/to for/IN/for our/PRP$/our 2-4/CD/2-4 tree/NN/tree picture/NN/picture ?/./? this/DT/this is/VBZ/is the/DT/the node/NN/node /:/[ hindi/NN/hindi /:/] /,/, this/DT/this is/VBZ/is the/DT/the only/JJ/only key/JJ/key in/IN/in this/DT/this node/NN/node sitting/VBG/sitting all/DT/all alone/NN/alone and/CC/and then/RB/then what/WP/what do/VBP/do we/PRP/we do/VBP/do ?/./? if/IN/if this/DT/this goes/VBZ/goes up/RP/up then/RB/then this/DT/this guy/NN/guy becomes/VBZ/becomes empty/NNP/empty. so/RB/so what/WP/what do/VBP/do we/PRP/we do/VBP/do then/RB/then ?/./? merge/NN/merge /,/, these/DT/these two/CD/two combine/NN/combine in/IN/in to/TO/to one/CD/one single/JJ/single node/NN/node and/CC/and one/CD/one key/JJ/key comes/NNS/comes down/IN/down from/IN/from the/DT/the above/NNP/above. so/RB/so what/WP/what will/MD/will the/DT/the key/JJ/key ?/./? s/NNS/s in/IN/in the/DT/the new/JJ/new node/NN/node be/VB/be ?/./? b/NN/b from/IN/from here/RB/here /,/, a/DT/a from/IN/from here/RB/here which/WDT/which comes/VBZ/comes down/RB/down from/IN/from the/DT/the above/NNP/above. so/RB/so this/DT/this new/JJ/new node/NN/node is/VBZ/is going/VBG/going to/TO/to have/VB/have b/NN/b a/DT/a in/IN/in it/PRP/it which/WDT/which is/VBZ/is what/WP/what is/VBZ/is being/VBG/being done/NN/done here/RB/here /,/, this/DT/this new/JJ/new node/NN/node has/VBZ/has b/NN/b a/DT/a in/IN/in it/NNP/it. this/DT/this will/MD/will be/VB/be one/CD/one node/NN/node /,/, i/PRP/i take/VBP/take a/DT/a black/JJ/black and/CC/and look/NN/look at/IN/at all/DT/all its/PRP$/its red/VBN/red children/NNP/children. this/DT/this will/MD/will be/VB/be one/CD/one node/NN/node with/IN/with be/VB/be a/DT/a in/IN/in it/NNP/it. so/RB/so this/DT/this is/VBZ/is one/CD/one to/TO/to one/CD/one corresponding/VBG/corresponding between/IN/between what/WP/what we/PRP/we did/VBD/did in/IN/in the/DT/the case/NN/case of/IN/of 2-4/CD/2-4 tree/CD/tree and/CC/and what/WP/what we/PRP/we are/VBP/are doing/VBG/doing here/RB/here and/CC/and that/IN/that helps/NNS/helps to/TO/to clear/VB/clear things/NNP/things. so/IN/so we/PRP/we are/VBP/are looked/VBN/looked at/IN/at both/DT/both the/DT/the cases/NNS/cases when/WRB/when this/DT/this guy/NN/guy /,/, when/WRB/when the/DT/the parent/NN/parent was/VBD/was the/DT/the red/VBN/red if/IN/if then/RB/then the/DT/the parent/NN/parent was/VBD/was the/DT/the red/VBN/red then/RB/then we/PRP/we know/VBP/know this/DT/this is/VBZ/is a/DT/a black/NNP/black. if/IN/if this/DT/this had/VBD/had any/DT/any red/VBN/red children/NNS/children we/PRP/we have/VBP/have taken/VBN/taken care/NN/care of/IN/of it/PRP/it in/IN/in previous/JJ/previous case/NN/case /,/, if/IN/if this/DT/this has/VBZ/has no/DT/no red/VBN/red children/NNS/children then/RB/then we/PRP/we taken/VBP/taken care/NN/care of/IN/of it/PRP/it now/NNP/now. so/RB/so now/RB/now we/PRP/we go/VBP/go to/TO/to the/DT/the red/NN/red next/IN/next set/NN/set of/IN/of cases/NNS/cases when/WRB/when this/DT/this parent/NN/parent is/VBZ/is a/DT/a black/NNP/black. so/RB/so parent/NN/parent is/VBZ/is a/DT/a black/JJ/black node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 54/CD/54 /CD/) if/IN/if parent/NN/parent is/VBZ/is a/DT/a black/JJ/black node/NN/node then/RB/then this/DT/this could/MD/could be/VB/be a/DT/a red/VBN/red or/CC/or could/MD/could be/VB/be a/DT/a black/JJ/black ?/./? so/RB/so first/RB/first considering/VBG/considering the/DT/the case/NN/case that/IN/that it/PRP/it has/VBZ/has the/DT/the red/VBN/red child/NN/child b/NNP/b. if/IN/if this/DT/this is/VBZ/is red/VBN/red then/RB/then this/DT/this has/VBZ/has to/TO/to be/VB/be black/JJ/black and/CC/and if/IN/if this/DT/this is/VBZ/is black/RP/black then/RB/then this/DT/this may/MD/may be/VB/be red/VBN/red may/MD/may not/RB/not be/VB/be red/NNP/red. now/RB/now again/RB/again some/DT/some two/CD/two condition/NN/condition i/PRP/i am/VBP/am making/VBG/making or/CC/or some/DT/some two/CD/two assumption/NN/assumption making/VBG/making of/IN/of ;/:/; this/DT/this is/VBZ/is red/VBN/red first/RB/first and/CC/and this/DT/this is/VBZ/is red/NNP/red. in/IN/in the/DT/the next/JJ/next case/NN/case i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider this/DT/this was/VBD/was not/RB/not red/VBN/red /,/, this/DT/this was/VBD/was black/JJ/black and/CC/and this/DT/this was/VBD/was black/NNP/black. this/DT/this node/NN/node had/VBD/had no/DT/no red/VBN/red children/NNS/children and/CC/and you/PRP/you see/VBP/see why/WRB/why this/DT/this is/VBZ/is required/VBN/required /,/, you/PRP/you already/RB/already seen/VBN/seen one/CD/one reason/NN/reason why/WRB/why to/TO/to consider/VB/consider whether/IN/whether node/NN/node has/VBZ/has red/VBN/red child/NN/child or/CC/or not/NNP/not. so/RB/so this/DT/this is/VBZ/is a/DT/a picture/NNP/picture. this/DT/this height/NN/height went/VBD/went down/IN/down from/IN/from h/NN/h to/TO/to h/VB/h -1/NNP/-1. so/RB/so what/WP/what is/VBZ/is the/DT/the black/JJ/black height/NN/height of/IN/of this/DT/this tree/NN/tree ?/./? this/DT/this entire/NN/entire black/NN/black height/NN/height that/WDT/that means/VBZ/means was/VBD/was originally/RB/originally h/JJ/h +/NN/+ 1/CD/1. /CD/[ hindi/NN/hindi /:/] first/JJ/first let/NN/let ?/./? s/NNS/s make/VBP/make sure/JJ/sure that/IN/that this/DT/this is/VBZ/is correct/JJ/correct and/CC/and then/RB/then we/PRP/we will/MD/will see/VB/see why/WRB/why we/PRP/we came/VBD/came up/RP/up with/IN/with this/DT/this and/CC/and why/WRB/why we/PRP/we came/VBD/came with/IN/with this/DT/this is/VBZ/is justified/VBN/justified by/IN/by our/PRP$/our 2-4/CD/2-4 tree/NNP/tree. so/RB/so let/VB/let ?/./? s/NNS/s just/RB/just check/VBP/check it/PRP/it is/VBZ/is correct/NNP/correct. so/RB/so first/JJ/first you/PRP/you can/MD/can see/VB/see here/RB/here that/IN/that b/NN/b is/VBZ/is less/JJR/less than/IN/than a/DT/a /,/, b/NN/b is/VBZ/is on/IN/on the/DT/the left/NN/left c/NNP/c. c/NN/c is/VBZ/is more/RBR/more than/IN/than b/NN/b less/JJR/less than/IN/than a/DT/a so/RB/so c/JJ/c lies/NNS/lies between/IN/between b/NN/b and/CC/and a/DT/a and/CC/and d/NN/d is/VBZ/is more/RBR/more than/IN/than b/NN/b but/CC/but less/JJR/less than/IN/than c/NN/c /,/, so/RB/so d/JJ/d is/VBZ/is more/RBR/more then/RB/then b/VB/b and/CC/and less/JJR/less than/IN/than c/NNP/c. so/RB/so search/NN/search property/NN/property is/VBZ/is okay/NN/okay and/CC/and 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 ;/:/; 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, i/PRP/i just/RB/just organize/VBP/organize as/IN/as before/NNP/before. they/PRP/they just/RB/just go/VBP/go in/IN/in a/DT/a same/JJ/same manner/NNP/manner. now/RB/now this/DT/this one/CD/one is/VBZ/is a/DT/a this/DT/this one/CD/one /,/, it/PRP/it has/VBZ/has now/RB/now black/JJ/black height/NN/height of/IN/of h/NN/h -1/NNP/-1. this/DT/this guy/NN/guy is/VBZ/is this/DT/this /,/, its/PRP$/its black/JJ/black height/NN/height of/IN/of h/NN/h /:/- 1/CD/1 and/CC/and this/DT/this one/CD/one is/VBZ/is a/DT/a very/RB/very first/JJ/first one/CD/one /,/, its/PRP$/its black/JJ/black height/NN/height of/IN/of h/NNP/h. so/RB/so now/RB/now if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the black/JJ/black depth/NN/depth of/IN/of the/DT/the external/JJ/external node/NN/node so/IN/so these/DT/these guys/NNS/guys will/MD/will have/VB/have black/JJ/black depth/NN/depth of/IN/of h/NN/h +/:/+ 1/CD/1. this/DT/this will/MD/will have/VB/have h/NN/h minus/NN/minus one/CD/one plus/NN/plus one/CD/one plus/NN/plus one/CD/one /,/, h/NN/h +/:/+ 1/CD/1 h/NN/h -1/-NONE-/-1 +/./+ 1/CD/1 +/CD/+ 1/CD/1 h/NN/h -1/-NONE-/-1 +/./+ 1/CD/1 +/CD/+ 1/CD/1 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 15/CD/15 /CD/) /./. so/RB/so the/DT/the black/JJ/black depth/NN/depth of/IN/of all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes are/VBP/are the/DT/the same/JJ/same so/RB/so that/IN/that thing/NN/thing is/VBZ/is taken/VBN/taken care/NN/care of/IN/of and/CC/and far/RB/far as/IN/as a/DT/a double/JJ/double red/VBN/red problem/NN/problem is/VBZ/is concerned/VBN/concerned the/DT/the only/JJ/only thing/NN/thing could/MD/could be/VB/be that/IN/that this/DT/this is/VBZ/is red/VBN/red /-NONE-/[ hindi/NN/hindi /:/] /./. it/PRP/it was/VBD/was only/RB/only a/DT/a red/VBN/red black/NN/black tree/NN/tree and/CC/and it/PRP/it had/VBD/had only/RB/only made/VBN/made changes/NNS/changes in/IN/in this/DT/this sub/NN/sub tree/NNP/tree. so/RB/so this/DT/this is/VBZ/is a/DT/a valid/JJ/valid thing/NN/thing and/CC/and in/IN/in takes/NNS/takes care/VBP/care of/IN/of the/DT/the problem/NNP/problem. now/RB/now where/WRB/where is/VBZ/is this/DT/this coming/VBG/coming from/IN/from ?/./? what/WP/what is/VBZ/is the/DT/the motivation/NN/motivation ?/./? again/RB/again this/DT/this was/VBD/was an/DT/an empty/NN/empty node/NN/node /,/, this/DT/this corresponds/NNS/corresponds to/TO/to an/DT/an empty/NN/empty node/NN/node /,/, this/DT/this is/VBZ/is a/DT/a parent/NN/parent node/NN/node /,/, this/DT/this has/VBZ/has a/DT/a and/CC/and this/DT/this has/VBZ/has red/VBN/red child/NN/child so/IN/so it/PRP/it means/VBZ/means that/IN/that two/CD/two keys/NNS/keys a/DT/a and/CC/and b/NN/b and/CC/and this/DT/this has/VBZ/has one/CD/one child/NN/child here/RB/here which/WDT/which has/VBZ/has two/CD/two keys/NNS/keys c/NN/c and/CC/and d/NNP/d. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what happening/VBG/happening here/NNP/here. this/DT/this corresponds/NNS/corresponds to/TO/to this/DT/this node/NN/node and/CC/and a/DT/a b/NN/b corresponds/NNS/corresponds to/TO/to parent/NN/parent node/NN/node and/CC/and what/WP/what happens/NNS/happens now/RB/now ?/./? i/PRP/i can/MD/can /,/, because/IN/because my/PRP$/my sibling/NN/sibling has/VBZ/has enough/RB/enough keys/VBZ/keys it/PRP/it will/MD/will lend/VB/lend me/PRP/me one/NNP/one. so/RB/so one/CD/one of/IN/of the/DT/the key/JJ/key will/MD/will go/VB/go up/RP/up and/CC/and a/DT/a would/MD/would come/VB/come down/NNP/down. which/WDT/which is/VBZ/is the/DT/the key/JJ/key which/WDT/which would/MD/would go/VB/go up/RP/up /,/, the/DT/the largest/JJS/largest one/NNP/one. c/NN/c would/MD/would go/VB/go up/RP/up and/CC/and a/DT/a would/MD/would come/VB/come down/RB/down /,/, this/DT/this is/VBZ/is the/DT/the picture/NN/picture would/MD/would have/VB/have b/NN/b c/NN/c d/NN/d a/DT/a and/CC/and what/WP/what is/VBZ/is this/DT/this corresponds/NNS/corresponds to/TO/to ?/./? this/DT/this corresponds/NNS/corresponds to/TO/to exactly/RB/exactly this/DT/this b/NN/b c/NN/c here/RB/here corresponding/VBG/corresponding to/TO/to this/DT/this node/NN/node /,/, a/DT/a this/DT/this one/CD/one and/CC/and d/NN/d this/DT/this one/NNP/one. so/RB/so everything/VBG/everything is/VBZ/is coming/VBG/coming from/IN/from the/DT/the 2-4/CD/2-4 tree/NNP/tree. what/WP/what would/MD/would you/PRP/you have/VB/have done/VBN/done in/IN/in this/DT/this case/NN/case ?/./? this/DT/this is/VBZ/is direct/JJ/direct one/CD/one to/TO/to one/CD/one correspondence/NN/correspondence /,/, you/PRP/you just/RB/just use/VBP/use this/DT/this thing/NN/thing to/TO/to decide/VB/decide what/WP/what to/TO/to do/VB/do here/NNP/here. so/RB/so what/WP/what is/VBZ/is the/DT/the case/NN/case we/PRP/we considered/VBD/considered here/RB/here that/IN/that this/DT/this is/VBZ/is black/NNP/black. we/PRP/we also/RB/also considered/VBD/considered the/DT/the case/NN/case when/WRB/when this/DT/this parent/NN/parent was/VBD/was the/DT/the red/VBN/red and/CC/and then/RB/then we/PRP/we made/VBD/made the/DT/the assumption/NN/assumption that/IN/that it/PRP/it has/VBZ/has the/DT/the red/VBN/red child/NN/child then/RB/then this/DT/this has/VBZ/has to/TO/to have/VB/have the/DT/the black/JJ/black child/NN/child and/CC/and we/PRP/we made/VBD/made the/DT/the assumption/NN/assumption that/IN/that this/DT/this is/VBZ/is red/NNP/red. so/RB/so now/RB/now we/PRP/we will/MD/will get/VB/get rid/JJ/rid of/IN/of the/DT/the last/JJ/last assumption/NN/assumption that/IN/that this/DT/this is/VBZ/is red/VBN/red that/IN/that means/NNS/means this/DT/this guy/NN/guy has/VBZ/has no/DT/no red/VBN/red child/NN/child /,/, c/NN/c has/VBZ/has no/DT/no red/VBN/red child/NN/child which/WDT/which means/VBZ/means both/DT/both of/IN/of these/DT/these are/VBP/are black/JJ/black /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 20/CD/20 /CD/) /./. so/RB/so we/PRP/we come/VBP/come to/TO/to that/DT/that key/NNP/key. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 03/CD/03 /CD/) c/NN/c has/VBZ/has no/DT/no red/VBN/red child/NN/child and/CC/and so/RB/so this/DT/this is/VBZ/is the/DT/the picture/NNP/picture. so/RB/so this/DT/this are/VBP/are two/CD/two sub/NN/sub tree/NN/tree both/DT/both of/IN/of whose/WP$/whose two/CD/two root/NN/root are/VBP/are black/JJ/black and/CC/and so/RB/so this/DT/this has/VBZ/has to/TO/to have/VB/have black/JJ/black height/NN/height of/IN/of a/DT/a h/NN/h -1/-NONE-/-1 because/IN/because the/DT/the entire/JJ/entire black/NN/black height/NN/height was/VBD/was h/JJ/h +/NN/+ 1/CD/1 to/TO/to begin/VB/begin with/IN/with same/JJ/same as/IN/as before/IN/before /CD/[ hindi/NN/hindi /:/] and/CC/and we/PRP/we will/MD/will see/VB/see the/DT/the motivation/NN/motivation once/RB/once again/RB/again coming/VBG/coming from/IN/from the/DT/the 2-4/CD/2-4 tree/NNP/tree. though/IN/though once/RB/once again/RB/again c/JJ/c is/VBZ/is between/IN/between b/NN/b and/CC/and a/DT/a so/RB/so b/NN/b here/RB/here /,/, a/DT/a is/VBZ/is larger/JJR/larger than/IN/than b/NN/b /,/, c/NN/c is/VBZ/is more/RBR/more then/RB/then b/VB/b but/CC/but less/JJR/less then/RB/then a/DT/a so/RB/so binary/JJ/binary search/NN/search tree/NN/tree property/NN/property is/VBZ/is okay/NN/okay and/CC/and the/DT/the same/JJ/same t1/NNP/t1 t2/NNP/t2 t3/NNP/t3 t4/NNP/t4 /NNP/[ hindi/NN/hindi /:/] t1/NNP/t1 t2/NNP/t2 t3/NNP/t3 t4/NNP/t4 /NNP/[ hindi/NN/hindi /:/] black/JJ/black height/NN/height check/NN/check /:/[ hindi/NN/hindi /:/] black/JJ/black depth/NN/depth /:/[ hindi/NN/hindi /:/] /./. double/JJ/double red/VBN/red problem/NN/problem /:/[ hindi/NN/hindi /:/] /,/, these/DT/these are/VBP/are both/DT/both black/JJ/black /NN/[ hindi/NN/hindi /:/] /./. where/WRB/where is/VBZ/is this/DT/this coming/VBG/coming from/IN/from once/RB/once again/RB/again ?/./? this/DT/this is/VBZ/is the/DT/the node/NN/node which/WDT/which is/VBZ/is getting/VBG/getting empty/NNP/empty. the/DT/the parent/NN/parent has/VBZ/has a/DT/a and/CC/and b/NN/b in/IN/in it/PRP/it and/CC/and then/RB/then this/DT/this has/VBZ/has one/CD/one child/NN/child which/WDT/which has/VBZ/has only/RB/only c/JJ/c in/IN/in it/PRP/it because/IN/because both/DT/both of/IN/of its/PRP$/its children/NNS/children ?/./? s/NNS/s are/VBP/are black/NNP/black. so/RB/so now/RB/now once/RB/once again/RB/again we/PRP/we can/MD/can not/RB/not borrow/VB/borrow /,/, we/PRP/we have/VBP/have to/TO/to merge/VB/merge and/CC/and merge/VB/merge may/MD/may c/VB/c /:/[ hindi/NN/hindi /:/] which/WDT/which corresponds/NNS/corresponds to/TO/to this/DT/this /NN/[ hindi/NN/hindi /:/] /./. so/RB/so c/JJ/c has/VBZ/has no/DT/no red/VBN/red child/NNP/child. now/RB/now what/WP/what is/VBZ/is the/DT/the case/NN/case left/VBN/left ?/./? we/PRP/we started/VBD/started assumption/NN/assumption that/IN/that the/DT/the b/NN/b is/VBZ/is red/NNP/red. so/RB/so now/RB/now we/PRP/we need/VBP/need to/TO/to work/VB/work with/IN/with assumption/NN/assumption that/IN/that b/NN/b is/VBZ/is black/JJ/black that/IN/that was/VBD/was assumption/NN/assumption b/NN/b is/VBZ/is red/NNP/red. so/RB/so we/PRP/we come/VBP/come to/TO/to b/VB/b is/VBZ/is black/JJ/black /NN/[ hindi/NN/hindi /:/] /./. this/DT/this is/VBZ/is the/DT/the node/NN/node we/PRP/we are/VBP/are talking/VBG/talking of/IN/of /,/, this/DT/this is/VBZ/is black/NNP/black. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 58/CD/58 /:/: 07/CD/07 /CD/) so/RB/so now/RB/now again/RB/again the/DT/the next/JJ/next case/NN/case that/WDT/that it/PRP/it has/VBZ/has a/DT/a red/VBN/red child/NN/child and/CC/and one/CD/one possibility/NN/possibility and/CC/and the/DT/the other/JJ/other is/VBZ/is it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a red/VBN/red child/NNP/child. so/RB/so if/IN/if it/PRP/it have/VBP/have a/DT/a red/VBN/red child/NN/child lets/NNS/lets say/VBP/say this/DT/this is/VBZ/is a/DT/a red/VBN/red /NN/[ hindi/NN/hindi /:/] d/NN/d is/VBZ/is between/IN/between c/NN/c and/CC/and a/NNP/a. so/RB/so d/VBD/d is/VBZ/is between/IN/between c/NN/c and/CC/and a/DT/a /,/, where/WRB/where is/VBZ/is it/PRP/it coming/VBG/coming from/IN/from ?/./? this/DT/this is/VBZ/is empty/JJ/empty /,/, a/DT/a does/VBZ/does not/RB/not have/VB/have any/DT/any red/VBN/red child/NN/child which/WDT/which means/VBZ/means its/PRP$/its only/RB/only key/JJ/key in/IN/in its/PRP$/its node/NN/node and/CC/and this/DT/this has/VBZ/has a/DT/a red/VBN/red child/NN/child so/IN/so that/IN/that means/NNS/means there/EX/there are/VBP/are two/CD/two here/NNP/here. so/RB/so once/RB/once again/RB/again it/PRP/it is/VBZ/is going/VBG/going to/TO/to borrow/VB/borrow one/CD/one from/IN/from here/NNP/here. so/RB/so d/VBD/d is/VBZ/is going/VBG/going to/TO/to go/VB/go up/RP/up /,/, a/DT/a is/VBZ/is going/VBG/going to/TO/to come/VB/come down/RP/down and/CC/and we/PRP/we will/MD/will have/VB/have this/DT/this picture/NN/picture /,/, so/RB/so d/JJ/d is/VBZ/is the/DT/the only/JJ/only key/JJ/key in/IN/in its/PRP$/its parent/NN/parent /,/, this/DT/this may/MD/may or/CC/or may/MD/may not/RB/not be/VB/be the/DT/the only/JJ/only key/JJ/key in/IN/in its/PRP$/its node/NN/node because/IN/because this/DT/this could/MD/could also/RB/also be/VB/be a/DT/a red/VBN/red but/CC/but we/PRP/we are/VBP/are not/RB/not bother/RBR/bother about/IN/about this/DT/this /NN/[ hindi/NN/hindi /:/] but/CC/but this/DT/this only/JJ/only be/VB/be the/DT/the one/CD/one key/JJ/key in/IN/in its/PRP$/its node/NN/node because/IN/because this/DT/this node/NN/node was/VBD/was earlier/RBR/earlier empty/JJ/empty /NN/[ hindi/NN/hindi /:/] c/NN/c does/VBZ/does not/RB/not have/VB/have the/DT/the red/VBN/red child/NN/child at/IN/at all/NNP/all. a/DT/a c/NN/c c/NN/c no/DT/no red/NN/red child/NN/child /:/[ hindi/NN/hindi /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 00/CD/00 /:/: 00/CD/00 /CD/) so/RB/so now/RB/now what/WP/what do/VBP/do we/PRP/we have/VB/have to/TO/to do/VB/do ?/./? /:/[ hindi/NN/hindi /:/] h/NN/h -1/-NONE-/-1 +/./+ 1h/CD/1h /CD/[ hindi/NN/hindi /:/] /./. i/PRP/i worked/VBD/worked with/IN/with the/DT/the assumption/NN/assumption that/IN/that this/DT/this is/VBZ/is the/DT/the sub/NN/sub tree/NN/tree /:/[ hindi/NN/hindi /:/] black/JJ/black /NN/[ hindi/NN/hindi /:/] /./. what/WP/what case/NN/case does/VBZ/does this/DT/this correspond/NN/correspond to/TO/to ?/./? this/DT/this has/VBZ/has only/RB/only one/CD/one single/JJ/single key/JJ/key /,/, this/DT/this neighbor/NN/neighbor also/RB/also has/VBZ/has only/RB/only one/CD/one single/JJ/single key/NNP/key. so/RB/so you/PRP/you kind/VBP/kind of/IN/of combine/NN/combine both/DT/both of/IN/of them/PRP/them /,/, they/PRP/they come/VBP/come here/RB/here and/CC/and the/DT/the parents/NNS/parents becomes/VBZ/becomes empty/NNP/empty. so/RB/so the/DT/the parents/NNS/parents becomes/VBZ/becomes empty/JJ/empty so/RB/so you/PRP/you have/VB/have to/TO/to then/RB/then repeat/VB/repeat the/DT/the process/NN/process for/IN/for 2-4/CD/2-4 tree/NN/tree deletion/NN/deletion in/IN/in the/DT/the parent/NN/parent which/WDT/which means/VBZ/means it/PRP/it either/RB/either has/VBZ/has to/TO/to borrow/VB/borrow from/IN/from one/CD/one of/IN/of its/PRP$/its siblings/NNS/siblings or/CC/or it/PRP/it has/VBZ/has to/TO/to merge/VB/merge with/IN/with one/CD/one of/IN/of its/PRP$/its sibling/NN/sibling and/CC/and all/DT/all of/IN/of that/NNP/that. so/RB/so there/RB/there was/VBD/was the/DT/the same/JJ/same kind/NN/kind of/IN/of thing/NN/thing happening/VBG/happening in/IN/in the/DT/the case/NN/case of/IN/of 2-4/CD/2-4 trees/NNS/trees there/NNP/there. that/IN/that the/DT/the process/NN/process continued/VBD/continued up/RP/up /,/, the/DT/the deletion/NN/deletion process/NNP/process. the/DT/the parent/NN/parent became/VBD/became empty/NN/empty now/RB/now so/RB/so you/PRP/you have/VB/have to/TO/to do/VB/do something/NN/something there/RB/there and/CC/and may/MD/may be/VB/be then/RB/then again/RB/again the/DT/the parent/NN/parent became/VBD/became empty/NN/empty so/IN/so you/PRP/you have/VBP/have to/TO/to do/VB/do something/NN/something there/RB/there and/CC/and so/RB/so on/IN/on and/CC/and all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the root/NN/root in/IN/in which/WDT/which case/NN/case you/PRP/you reduce/VB/reduce the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the thing/NNP/thing. the/DT/the same/JJ/same thing/NN/thing could/MD/could be/VB/be happening/VBG/happening here/RB/here except/IN/except that/DT/that here/RB/here all/DT/all we/PRP/we are/VBP/are doing/VBG/doing is/VBZ/is re/JJ/re coloring/NN/coloring a/DT/a node/NNP/node. /NNP/[ hindi/NN/hindi /:/] /./. essentially/RB/essentially one/CD/one bit/NN/bit of/IN/of information/NN/information /:/[ hindi/NN/hindi /:/] /./. in/IN/in one/CD/one of/IN/of the/DT/the six/CD/six cases/NNS/cases we/PRP/we have/VBP/have to/TO/to go/VB/go up/RP/up but/CC/but when/WRB/when we/PRP/we have/VBP/have to/TO/to go/VB/go up/RP/up we/PRP/we don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to do/VB/do too/RB/too much/RB/much work/NNP/work. we/PRP/we just/RB/just have/VBP/have to/TO/to do/VB/do one/CD/one recolor/NNP/recolor. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the summary/NNP/summary. so/RB/so in/IN/in all/DT/all cases/NNS/cases except/IN/except the/DT/the last/JJ/last case/NN/case 2.2.2/CD/2.2.2. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 01/CD/01 /:/: 45/CD/45 /CD/) so/RB/so deletion/NN/deletion can/MD/can be/VB/be completed/VBN/completed by/IN/by either/DT/either some/DT/some reorganizing/VBG/reorganizing /,/, by/IN/by some/DT/some rotation/NN/rotation or/CC/or by/IN/by some/DT/some re/NN/re coloring/VBG/coloring /NN/[ hindi/NN/hindi /:/] /./. in/IN/in this/DT/this particular/JJ/particular case/NN/case the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree reduces/NNS/reduces and/CC/and so/RB/so we/PRP/we need/VBP/need to/TO/to proceed/VB/proceed up/RP/up the/DT/the tree/NN/tree but/CC/but in/IN/in this/DT/this case/NN/case we/PRP/we are/VBP/are only/RB/only re/JJ/re coloring/NN/coloring the/DT/the node/NN/node /:/[ hindi/NN/hindi /:/] /./. so/RB/so what/WP/what is/VBZ/is happening/VBG/happening is/VBZ/is why/WRB/why is/VBZ/is this/DT/this is/VBZ/is a/DT/a fast/JJ/fast procedure/NN/procedure because/IN/because you/PRP/you have/VBP/have to/TO/to do/VB/do essentially/RB/essentially one/CD/one rotation/NN/rotation only/RB/only /./[ hindi/NN/hindi /:/] /./. it/PRP/it ?/./? s/NNS/s a/DT/a very/RB/very short/JJ/short /,/, so/RB/so which/WDT/which is/VBZ/is what/WP/what makes/VBZ/makes the/DT/the process/NN/process really/RB/really fast/JJ/fast except/IN/except for/IN/for the/DT/the last/JJ/last case/NN/case in/IN/in all/DT/all case/NN/case the/DT/the height/NN/height preserving/VBG/preserving /NN/[ student/NN/student /:/] /:/[ hindi/NN/hindi /:/] /./. you/PRP/you have/VBP/have to/TO/to check/VB/check that/IN/that /CD/[ hindi/NN/hindi /:/] /,/, you/PRP/you have/VBP/have to/TO/to check/VB/check this/DT/this last/JJ/last thing/NN/thing if/IN/if you/PRP/you have/VBP/have to/TO/to convince/VB/convince but/CC/but this/DT/this is/VBZ/is the/DT/the entire/JJ/entire process/NN/process of/IN/of deletion/NNP/deletion. next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the process/NN/process of/IN/of insertion/NN/insertion /,/, it/PRP/it ?/./? s/NNS/s much/RB/much simpler/JJR/simpler than/IN/than this/NNP/this. so/RB/so this/DT/this was/VBD/was the/DT/the harder/NN/harder one/CD/one but/CC/but keep/VB/keep in/IN/in mind/NN/mind you/PRP/you don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to remember/VB/remember it/PRP/it /,/, if/IN/if you/PRP/you remember/VBP/remember the/DT/the 2-4/CD/2-4 tree/NN/tree which/WDT/which was/VBD/was much/RB/much simpler/JJR/simpler to/TO/to understand/VB/understand conceptually/NNP/conceptually. if/IN/if you/PRP/you remember/VBP/remember that/IN/that you/PRP/you will/MD/will also/RB/also be/VB/be able/JJ/able to/TO/to remember/VB/remember this/DT/this process/NNP/process. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 15/CD/15 insertion/NN/insertion in/IN/in red/JJ/red black/NN/black trees/NNS/trees in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we saw/VBD/saw a/DT/a red/VBN/red black/NN/black tree/NN/tree /,/, the/DT/the correspondence/NN/correspondence of/IN/of red/VBN/red black/JJ/black trees/NNS/trees and/CC/and 2-4/CD/2-4 trees/NNS/trees then/RB/then we/PRP/we saw/VBD/saw the/DT/the deletion/NN/deletion process/NN/process in/IN/in red/JJ/red black/NN/black trees/NNP/trees. this/DT/this was/VBD/was the/DT/the extensive/JJ/extensive process/NN/process with/IN/with 6/CD/6 cases/NNS/cases and/CC/and so/RB/so on/NNP/on. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to insert/VB/insert the/DT/the key/JJ/key in/IN/in the/DT/the red/NN/red black/NN/black tree/NN/tree also/RB/also going/VBG/going to/TO/to introduce/VB/introduce the/DT/the notion/NN/notion of/IN/of an/DT/an a-b/JJ/a-b tree/NNP/tree. first/RB/first we/PRP/we will/MD/will define/VB/define the/DT/the a-b/NNP/a-b tree/NN/tree and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see the/DT/the process/NN/process of/IN/of insertion/NN/insertion and/CC/and deletion/NN/deletion in/IN/in a-b/NNP/a-b tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 40/CD/40 /CD/) we/PRP/we get/VBP/get to/TO/to insertion/NNP/insertion. suppose/NN/suppose we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert a/DT/a key/JJ/key k/NN/k in/IN/in to/TO/to red/VBN/red black/RP/black tree/NNP/tree. after/IN/after all/DT/all a/DT/a red/VBN/red black/NN/black tree/NN/tree is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NNP/tree. since/IN/since it/PRP/it is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /,/, first/JJ/first the/DT/the insertion/NN/insertion process/NN/process would/MD/would be/VB/be like/IN/like the/DT/the binary/JJ/binary search/NN/search tree/NN/tree which/WDT/which means/VBZ/means that/DT/that we/PRP/we would/MD/would try/VB/try to/TO/to find/VB/find whether/IN/whether the/DT/the key/JJ/key already/RB/already exist/VBP/exist in/IN/in the/DT/the tree/NNP/tree. if/IN/if it/PRP/it exists/VBZ/exists then/RB/then we/PRP/we would/MD/would not/RB/not insert/VB/insert it/NNP/it. if/IN/if it/PRP/it does/VBZ/does not/RB/not then/RB/then we/PRP/we should/MD/should be/VB/be able/JJ/able to/TO/to identify/VB/identify the/DT/the place/NN/place for/IN/for the/DT/the key/JJ/key to/TO/to be/VB/be inserted/NNP/inserted. we/PRP/we create/VBP/create a/DT/a node/NN/node with/IN/with that/DT/that key/JJ/key /,/, we/PRP/we put/VBD/put it/PRP/it at/IN/at that/IN/that location/NN/location and/CC/and we/PRP/we have/VBP/have to/TO/to color/VB/color this/DT/this node/NNP/node. because/IN/because a/DT/a red/VBN/red black/NN/black tree/NN/tree differs/NNS/differs from/IN/from a/DT/a binary/JJ/binary search/NN/search tree/NN/tree in/IN/in the/DT/the fact/NN/fact that/IN/that each/DT/each node/NN/node is/VBZ/is colored/VBN/colored and/CC/and this/DT/this coloring/NN/coloring obeys/VBZ/obeys certain/JJ/certain properties/NNP/properties. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 50/CD/50 /CD/) now/RB/now we/PRP/we color/VBP/color this/DT/this node/NN/node and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to begin/VB/begin by/IN/by coloring/NN/coloring this/DT/this node/NN/node red/NNP/red. let/NN/let us/PRP/us say/VBP/say that/IN/that in/IN/in the/DT/the slide/NN/slide given/VBN/given below/IN/below the/DT/the red/NN/red colored/VBD/colored node/NN/node in/IN/in the/DT/the left/NN/left side/NN/side is/VBZ/is the/DT/the node/NN/node that/IN/that i/PRP/i inserted/VBD/inserted and/CC/and it/PRP/it has/VBZ/has a/DT/a key/JJ/key k/NN/k in/IN/in it/NNP/it. which/WDT/which means/VBZ/means in/IN/in my/PRP$/my binary/NN/binary search/NN/search tree/NN/tree i/PRP/i must/MD/must have/VB/have come/VBN/come up/RP/up to/TO/to the/DT/the black/JJ/black colored/VBN/colored node/NN/node and/CC/and gone/NN/gone right/RB/right /,/, because/IN/because k/NN/k was/VBD/was larger/JJR/larger then/RB/then this/DT/this key/NN/key and/CC/and found/VBD/found that/IN/that this/DT/this was/VBD/was an/DT/an external/JJ/external node/NNP/node. earlier/RBR/earlier in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NN/tree this/DT/this was/VBD/was an/DT/an external/JJ/external node/NNP/node. i/PRP/i decided/VBD/decided to/TO/to put/VB/put my/PRP$/my node/NN/node to/TO/to the/DT/the right/NN/right side/NN/side of/IN/of my/PRP$/my black/NN/black colored/VBD/colored node/NN/node and/CC/and i/PRP/i color/VBP/color it/PRP/it red/NNP/red. i/PRP/i will/MD/will create/VB/create 2/CD/2 external/JJ/external nodes/NNS/nodes which/WDT/which will/MD/will be/VB/be the/DT/the children/NNS/children of/IN/of this/DT/this node/NNP/node. if/IN/if the/DT/the parent/NN/parent of/IN/of this/DT/this node/NN/node is/VBZ/is black/JJ/black then/RB/then we/PRP/we have/VBP/have no/DT/no problem/NN/problem because/IN/because this/DT/this node/NN/node is/VBZ/is colored/VBN/colored red/VBN/red /,/, the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the tree/NN/tree has/VBZ/has not/RB/not changed/NNP/changed. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 31/CD/31 /CD/) the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the external/JJ/external nodes/NNS/nodes of/IN/of the/DT/the children/NNS/children is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the external/JJ/external node/NN/node which/WDT/which was/VBD/was sitting/VBG/sitting earlier/JJR/earlier at/IN/at the/DT/the location/NN/location of/IN/of the/DT/the key/JJ/key and/CC/and which/WDT/which was/VBD/was the/DT/the same/JJ/same as/IN/as the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the other/JJ/other external/JJ/external node/NN/node in/IN/in this/DT/this tree/NNP/tree. which/WDT/which means/VBZ/means that/DT/that the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the 2/CD/2 external/JJ/external nodes/NNS/nodes of/IN/of the/DT/the children/NNS/children is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the all/DT/all the/DT/the other/JJ/other external/JJ/external nodes/NNP/nodes. that/IN/that property/NN/property of/IN/of the/DT/the red/NN/red black/NN/black tree/NN/tree continues/VBZ/continues to/TO/to hold/VB/hold /,/, that/IN/that is/VBZ/is primarily/RB/primarily because/IN/because we/PRP/we have/VBP/have introduced/VBN/introduced a/DT/a red/VBN/red node/NN/node and/CC/and not/RB/not a/DT/a black/JJ/black node/NNP/node. the/DT/the property/NN/property that/IN/that the/DT/the black/JJ/black height/NN/height of/IN/of all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes should/MD/should be/VB/be the/DT/the same/JJ/same and/CC/and it/PRP/it continues/VBZ/continues to/TO/to hold/NNP/hold. the/DT/the problem/NN/problem could/MD/could how/VB/how ever/RB/ever be/VB/be the/DT/the double/JJ/double red/NN/red colored/VBD/colored node/NN/node and/CC/and that/IN/that happens/NNS/happens if/IN/if the/DT/the parent/NN/parent of/IN/of the/DT/the red/NN/red colored/VBD/colored node/NN/node in/IN/in the/DT/the left/NN/left side/NN/side is/VBZ/is red/VBN/red as/RB/as it/PRP/it is/VBZ/is shown/VBN/shown in/IN/in the/DT/the right/NN/right side/NN/side of/IN/of the/DT/the above/JJ/above slide/NNP/slide. the/DT/the red/NN/red colored/VBD/colored node/NN/node with/IN/with key/JJ/key k/NN/k inside/NN/inside it/PRP/it at/IN/at the/DT/the right/NN/right side/NN/side of/IN/of the/DT/the slide/NN/slide is/VBZ/is the/DT/the node/NN/node i/PRP/i created/NNP/created. if/IN/if its/PRP$/its parent/NN/parent is/VBZ/is red/VBN/red then/RB/then we/PRP/we have/VBP/have the/DT/the double/JJ/double red/NN/red problem/NN/problem and/CC/and we/PRP/we have/VBP/have to/TO/to handle/VB/handle this/DT/this problem/NNP/problem. remember/NN/remember that/WDT/that in/IN/in the/DT/the case/NN/case of/IN/of deletion/NN/deletion the/DT/the problem/NN/problem was/VBD/was arising/VBG/arising because/IN/because the/DT/the black/JJ/black height/NN/height was/VBD/was changing/VBG/changing and/CC/and all/DT/all along/IN/along we/PRP/we were/VBD/were trying/VBG/trying to/TO/to take/VB/take care/NN/care of/IN/of that/DT/that problem/NNP/problem. we/PRP/we never/RB/never encountered/VBD/encountered a/DT/a double/JJ/double red/VBN/red problem/NN/problem in/IN/in the/DT/the case/NN/case of/IN/of deletion/NNP/deletion. in/IN/in the/DT/the case/NN/case of/IN/of insertion/NN/insertion how/WRB/how ever/RB/ever we/PRP/we will/MD/will never/RB/never have/VB/have the/DT/the problem/NN/problem of/IN/of black/JJ/black heights/NNS/heights not/RB/not being/VBG/being uniform/NNP/uniform. the/DT/the black/JJ/black heights/NNS/heights of/IN/of all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes will/MD/will be/VB/be the/DT/the same/NNP/same. no/DT/no problem/NN/problem on/IN/on that/DT/that front/NN/front but/CC/but the/DT/the problem/NN/problem will/MD/will be/VB/be one/CD/one of/IN/of a/DT/a double/JJ/double red/NNP/red. we/PRP/we have/VBP/have a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. let/NN/let us/PRP/us see/VBP/see how/WRB/how to/TO/to take/VB/take care/NN/care of/IN/of this/DT/this problem/NNP/problem. just/RB/just concentrate/JJ/concentrate on/IN/on the/DT/the left/NN/left picture/NN/picture in/IN/in the/DT/the slide/NN/slide below/NNP/below. the/DT/the k/NN/k is/VBZ/is the/DT/the node/NN/node that/IN/that i/PRP/i am/VBP/am inserting/VBG/inserting and/CC/and in/IN/in the/DT/the previous/JJ/previous picture/NN/picture i/PRP/i had/VBD/had shown/VBN/shown the/DT/the 2/CD/2 children/NNS/children who/WP/who are/VBP/are external/JJ/external nodes/NNS/nodes and/CC/and now/RB/now i/PRP/i am/VBP/am just/RB/just replace/NN/replace that/IN/that by/IN/by sub/NN/sub trees/NNP/trees. you/PRP/you will/MD/will see/VB/see the/DT/the reason/NN/reason for/IN/for this/DT/this in/IN/in a/DT/a short/JJ/short while/NNP/while. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 54/CD/54 /CD/) we/PRP/we would/MD/would have/VB/have a/DT/a double/JJ/double red/VBN/red problem/NN/problem if/IN/if the/DT/the parent/NN/parent of/IN/of the/DT/the node/NN/node that/IN/that we/PRP/we inserted/VBD/inserted is/VBZ/is red/NNP/red. this/DT/this parent/NN/parent which/WDT/which is/VBZ/is node/VBP/node a/DT/a is/VBZ/is colored/VBN/colored red/-NONE-/red. clearly/RB/clearly the/DT/the parent/NN/parent of/IN/of the/DT/the node/NN/node a/DT/a must/MD/must be/VB/be a/DT/a black/NNP/black. if/IN/if the/DT/the parent/NN/parent of/IN/of this/DT/this node/NN/node was/VBD/was red/VBN/red then/RB/then there/RB/there was/VBD/was already/RB/already a/DT/a double/JJ/double red/VBN/red problem/NN/problem in/IN/in my/PRP$/my tree/NNP/tree. so/RB/so the/DT/the node/NN/node b/NN/b must/MD/must be/VB/be a/DT/a black/JJ/black and/CC/and the/DT/the first/JJ/first case/NN/case that/WDT/that i/PRP/i am/VBP/am considering/VBG/considering is/VBZ/is when/WRB/when its/PRP$/its other/JJ/other child/NN/child is/VBZ/is black/JJ/black which/WDT/which means/VBZ/means that/DT/that the/DT/the sibling/NNP/sibling. the/DT/the k/NN/k is/VBZ/is the/DT/the node/NN/node that/IN/that i/PRP/i am/VBP/am inserting/VBG/inserting /,/, the/DT/the sibling/NN/sibling of/IN/of its/PRP$/its parent/NN/parent node/NN/node a/DT/a is/VBZ/is black/NNP/black. that/IN/that is/VBZ/is the/DT/the case/NN/case i/PRP/i am/VBP/am considering/NNP/considering. we/PRP/we just/RB/just do/VBP/do a/DT/a simple/JJ/simple rotation/NNP/rotation. note/NN/note that/IN/that a/DT/a is/VBZ/is larger/JJR/larger then/RB/then b/VB/b and/CC/and a/DT/a is/VBZ/is smaller/JJR/smaller then/RB/then k/VB/k so/RB/so i/PRP/i can/MD/can put/VB/put a/DT/a in/IN/in the/DT/the middle/NN/middle /,/, b/NN/b on/IN/on the/DT/the left/NN/left and/CC/and k/NN/k on/IN/on the/DT/the right/NNP/right. i/PRP/i get/VBP/get a/DT/a kind/NN/kind of/IN/of a/DT/a tree/NN/tree which/WDT/which is/VBZ/is on/IN/on the/DT/the right/NN/right side/NN/side in/IN/in the/DT/the slide/NN/slide above/NNP/above. the/DT/the a/DT/a will/MD/will be/VB/be colored/VBN/colored black/RP/black /,/, b/NN/b and/CC/and k/NN/k would/MD/would be/VB/be colored/VBN/colored red/-NONE-/red. what/WP/what is/VBZ/is the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the tree/NN/tree on/IN/on the/DT/the left/NN/left ?/./? the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the tree/NN/tree on/IN/on the/DT/the left/NN/left is/VBZ/is same/JJ/same as/IN/as the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the tree/NN/tree on/IN/on the/DT/the right/NNP/right. if/IN/if you/PRP/you take/VBP/take any/DT/any external/JJ/external node/NN/node then/RB/then its/PRP$/its black/NN/black height/NN/height was/VBD/was the/DT/the black/JJ/black height/NN/height of/IN/of the/DT/the external/JJ/external node/NN/node plus/CC/plus one/NNP/one. and/CC/and for/IN/for the/DT/the external/JJ/external nodes/NNS/nodes on/IN/on the/DT/the right/NN/right /,/, its/PRP$/its height/NN/height is/VBZ/is still/RB/still the/DT/the same/JJ/same as/IN/as the/DT/the black/JJ/black height/NN/height of/IN/of those/DT/those external/JJ/external nodes/NNS/nodes plus/CC/plus one/NNP/one. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 48/CD/48 /CD/) would/MD/would the/DT/the black/JJ/black height/NN/height of/IN/of all/DT/all of/IN/of the/DT/the nodes/NNS/nodes be/VB/be the/DT/the same/JJ/same ?/./? the/DT/the black/JJ/black height/NN/height of/IN/of all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes is/VBZ/is indicated/VBN/indicated in/IN/in the/DT/the slide/NN/slide above/NNP/above. you/PRP/you can/MD/can see/VB/see that/IN/that the/DT/the black/JJ/black depth/NN/depth of/IN/of all/DT/all the/DT/the external/JJ/external nodes/NNP/nodes. anything/NN/anything below/IN/below the/DT/the node/NN/node k/NN/k will/MD/will be/VB/be /:/( h/NN/h +/:/+ 1/CD/1 /CD/) +/CD/+ 1/CD/1 /CD/( on/IN/on the/DT/the node/NN/node a/DT/a /NN/) which/WDT/which will/MD/will be/VB/be h/JJ/h +/NN/+ 2/CD/2 and/CC/and below/IN/below the/DT/the node/NN/node c/NN/c will/MD/will be/VB/be h/JJ/h +/NN/+ 1/CD/1 /CD/( on/IN/on the/DT/the node/NN/node c/NN/c /:/) +/:/+ 1/CD/1 /CD/( on/IN/on the/DT/the node/NN/node b/NN/b /:/) which/WDT/which is/VBZ/is h/VBP/h +/-NONE-/+ 2/CD/2. so/IN/so the/DT/the black/JJ/black height/NN/height problem/NN/problem not/RB/not there/RB/there at/IN/at all/DT/all /,/, it/PRP/it is/VBZ/is uniform/NNP/uniform. only/RB/only thing/VBG/thing we/PRP/we have/VBP/have to/TO/to worry/VB/worry about/IN/about this/DT/this transformation/NN/transformation is/VBZ/is whether/IN/whether we/PRP/we have/VBP/have introduced/VBN/introduced a/DT/a new/JJ/new double/JJ/double red/JJ/red problem/NN/problem /,/, and/CC/and we/PRP/we have/VBP/have not/NNP/not. we/PRP/we would/MD/would have/VB/have introduced/VBN/introduced a/DT/a new/JJ/new double/JJ/double red/JJ/red problem/NN/problem if/IN/if the/DT/the root/NN/root of/IN/of any/DT/any one/CD/one of/IN/of these/DT/these 3/CD/3 sub/NN/sub tree/NN/tree under/IN/under node/NN/node a/DT/a and/CC/and k/NN/k was/VBD/was red/NNP/red. but/CC/but if/IN/if the/DT/the root/NN/root any/DT/any one/CD/one of/IN/of these/DT/these 3/CD/3 sub/NN/sub tree/NN/tree was/VBD/was red/VBN/red then/RB/then that/IN/that means/NNS/means we/PRP/we had/VBD/had 2/CD/2 double/JJ/double red/JJ/red problems/NNS/problems and/CC/and not/RB/not 1/CD/1 double/JJ/double red/JJ/red problem/NNP/problem. if/IN/if the/DT/the external/JJ/external node/NN/node under/IN/under the/DT/the node/NN/node a/DT/a was/VBD/was red/VBN/red and/CC/and also/RB/also the/DT/the node/NN/node a/DT/a was/VBD/was red/VBN/red /,/, then/RB/then it/PRP/it is/VBZ/is a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. if/IN/if the/DT/the external/JJ/external node/NN/node under/IN/under k/NN/k was/VBD/was red/VBN/red and/CC/and also/RB/also the/DT/the node/NN/node k/NN/k was/VBD/was red/VBN/red /,/, then/RB/then it/PRP/it is/VBZ/is a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. we/PRP/we have/VBP/have more/JJR/more then/RB/then one/CD/one double/JJ/double red/JJ/red problem/NNP/problem. but/CC/but we/PRP/we have/VBP/have introduced/VBN/introduced only/RB/only one/CD/one double/JJ/double red/JJ/red problem/NN/problem by/IN/by inserting/NN/inserting that/IN/that node/NN/node /,/, so/RB/so this/DT/this can/MD/can not/RB/not happen/NNP/happen. in/IN/in this/DT/this case/NN/case we/PRP/we are/VBP/are inserting/VBG/inserting k/NN/k and/CC/and for/IN/for now/RB/now we/PRP/we assume/VBP/assume that/IN/that the/DT/the nodes/NNS/nodes under/IN/under the/DT/the node/NN/node k/NN/k are/VBP/are external/JJ/external nodes/NNP/nodes. in/IN/in the/DT/the next/JJ/next slide/NN/slide i/PRP/i will/MD/will come/VB/come to/TO/to why/WRB/why i/PRP/i have/VBP/have drawn/VBN/drawn this/DT/this 2/CD/2 sub/NN/sub trees/NNP/trees. if/IN/if i/PRP/i were/VBD/were to/TO/to think/VB/think of/IN/of this/DT/this as/IN/as a/DT/a 2-4/CD/2-4 tree/NN/tree then/RB/then that/IN/that means/NNS/means that/WDT/that i/PRP/i have/VBP/have a/DT/a node/NN/node which/WDT/which has/VBZ/has these/DT/these 3/CD/3 keys/NNS/keys /:/( a/DT/a /,/, b/NN/b and/CC/and k/NN/k /:/) in/IN/in it/NNP/it. earlier/RBR/earlier it/PRP/it had/VBD/had keys/NNS/keys b/VBP/b and/CC/and a/DT/a in/IN/in it/PRP/it /,/, c/NN/c was/VBD/was another/DT/another node/NN/node and/CC/and k/NN/k can/MD/can be/VB/be accommodated/VBN/accommodated with/IN/with b/NN/b and/CC/and a/DT/a without/IN/without any/DT/any problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 56/CD/56 /CD/) this/DT/this is/VBZ/is what/WP/what we/PRP/we said/VBD/said but/CC/but we/PRP/we are/VBP/are getting/VBG/getting a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. why/WRB/why is/VBZ/is that/IN/that ?/./? it/PRP/it is/VBZ/is because/IN/because this/DT/this /NN/( b/NN/b /,/, a/DT/a /,/, k/NN/k /:/) is/VBZ/is not/RB/not formed/VBN/formed in/IN/in a/DT/a right/NN/right manner/NNP/manner. if/IN/if i/PRP/i had/VBD/had 3/CD/3 keys/NNS/keys in/IN/in a/DT/a 2-4/CD/2-4 node/NN/node then/RB/then the/DT/the middle/NN/middle key/NN/key is/VBZ/is the/DT/the one/CD/one which/WDT/which is/VBZ/is to/TO/to be/VB/be set/VBN/set black/RP/black /,/, while/IN/while it/PRP/it is/VBZ/is not/RB/not getting/VBG/getting done/NN/done in/IN/in the/DT/the left/NN/left side/NN/side tree/NN/tree on/IN/on the/DT/the above/NN/above slide/NNP/slide. just/RB/just that/IN/that simple/JJ/simple rotation/NN/rotation takes/VBZ/takes care/NN/care of/IN/of this/NNP/this. so/RB/so it/PRP/it is/VBZ/is not/RB/not that/IN/that we/PRP/we are/VBP/are changing/VBG/changing the/DT/the 2-4/CD/2-4 trees/NNS/trees in/IN/in the/DT/the any/DT/any manner/NNP/manner. this/DT/this /NN/( a/DT/a /,/, b/NN/b /,/, k/NN/k in/IN/in the/DT/the left/NN/left side/NN/side /:/) is/VBZ/is the/DT/the node/NN/node corresponding/VBG/corresponding to/TO/to the/DT/the 2-4/CD/2-4 tree/NN/tree and/CC/and these/DT/these 3/CD/3 goes/VBZ/goes together/RB/together in/IN/in to/TO/to one/CD/one 2-4/CD/2-4 tree/NNP/tree. these/DT/these 3/CD/3 nodes/NNS/nodes /:/( b/NN/b /,/, a/DT/a /,/, k/NN/k in/IN/in the/DT/the right/NN/right side/NN/side /:/) still/RB/still go/VBP/go together/RB/together in/IN/in the/DT/the node/NN/node of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree as/IN/as before/NNP/before. it/PRP/it is/VBZ/is just/RB/just that/IN/that we/PRP/we are/VBP/are reorganizing/VBG/reorganizing it/PRP/it /,/, so/RB/so that/IN/that it/PRP/it is/VBZ/is now/RB/now in/IN/in the/DT/the form/NN/form of/IN/of our/PRP$/our red/VBN/red black/NN/black tree/NNP/tree. so/RB/so that/IN/that was/VBD/was one/CD/one case/NN/case when/WRB/when the/DT/the parent/NN/parent of/IN/of the/DT/the inserted/VBN/inserted node/NN/node /,/, has/VBZ/has the/DT/the sibling/NN/sibling which/WDT/which is/VBZ/is black/NNP/black. so/RB/so the/DT/the other/JJ/other cases/NNS/cases when/WRB/when c/NN/c is/VBZ/is red/VBN/red and/CC/and we/PRP/we will/MD/will look/VB/look at/IN/at that/DT/that now/NNP/now. so/RB/so this/DT/this is/VBZ/is the/DT/the second/JJ/second case/NN/case /,/, the/DT/the parent/NN/parent of/IN/of the/DT/the inserted/VBN/inserted node/NN/node /:/( a/DT/a /NN/) is/VBZ/is red/VBN/red and/CC/and the/DT/the other/JJ/other child/NN/child of/IN/of b/NN/b is/VBZ/is also/RB/also red/NNP/red. we/PRP/we have/VBP/have this/DT/this double/JJ/double red/NN/red problem/NN/problem and/CC/and we/PRP/we need/VBP/need to/TO/to take/VB/take care/NN/care of/IN/of this/NNP/this. what/WP/what should/MD/should i/VB/i do/VBP/do now/RB/now ?/./? can/MD/can i/VB/i do/VBP/do which/WDT/which i/PRP/i did/VBD/did on/IN/on the/DT/the previous/JJ/previous slide/NN/slide ?/./? why/WRB/why not/RB/not ?/./? because/IN/because then/RB/then i/PRP/i would/MD/would get/VB/get a/DT/a double/JJ/double red/VBN/red problem/NN/problem on/IN/on the/DT/the other/JJ/other side/NNP/side. if/IN/if i/PRP/i look/VBP/look at/IN/at what/WP/what is/VBZ/is happening/VBG/happening in/IN/in the/DT/the 2-4/CD/2-4 tree/NN/tree that/WDT/that means/VBZ/means in/IN/in the/DT/the 2-4/CD/2-4 tree/NN/tree this/DT/this /NN/( c/NN/c /,/, b/NN/b /,/, a/DT/a /NN/) is/VBZ/is the/DT/the corresponding/NN/corresponding node/NN/node of/IN/of the/DT/the 2-4/CD/2-4 tree/NNP/tree. recall/NN/recall how/WRB/how i/PRP/i get/VBP/get the/DT/the node/NN/node of/IN/of 2-4/CD/2-4 trees/NNS/trees /,/, i/PRP/i take/VBP/take a/DT/a black/JJ/black and/CC/and look/NN/look at/IN/at all/DT/all of/IN/of its/PRP$/its red/VBN/red children/NNP/children. so/RB/so the/DT/the nodes/NNS/nodes which/WDT/which are/VBP/are marked/VBN/marked in/IN/in the/DT/the below/NN/below slide/NN/slide is/VBZ/is the/DT/the corresponding/NN/corresponding node/NNP/node. it/PRP/it already/RB/already has/VBZ/has c/VBN/c /,/, b/NN/b and/CC/and a/DT/a in/IN/in it/PRP/it and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to bring/VB/bring in/IN/in k/NN/k in/IN/in to/TO/to this/DT/this where/WRB/where clearly/RB/clearly there/RB/there is/VBZ/is no/DT/no space/NNP/space. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 48/CD/48 /CD/) so/RB/so we/PRP/we split/VBP/split it/PRP/it into/IN/into 2/CD/2. that/WDT/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see in/IN/in the/DT/the following/JJ/following slide/NNP/slide. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 26/CD/26 /CD/) this/DT/this is/VBZ/is what/WP/what the/DT/the transformation/NN/transformation we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. no/DT/no transformation/NN/transformation but/CC/but we/PRP/we just/RB/just recolor/VBP/recolor the/DT/the nodes/NNS/nodes and/CC/and this/DT/this corresponds/NNS/corresponds to/TO/to split/VB/split and/CC/and let/VB/let us/PRP/us see/VB/see why/WRB/why it/PRP/it happens/NNP/happens. the/DT/the left/NN/left side/NN/side tree/NN/tree in/IN/in the/DT/the above/NN/above slide/NN/slide is/VBZ/is the/DT/the transformation/NN/transformation that/IN/that i/PRP/i have/VBP/have done/NNP/done. i/PRP/i have/VBP/have colored/VBN/colored the/DT/the node/NN/node a/DT/a and/CC/and c/NN/c to/TO/to black/NNP/black. in/IN/in the/DT/the above/NN/above picture/NN/picture /:/( c/NN/c /,/, b/NN/b /,/, a/DT/a /NN/) was/VBD/was sitting/VBG/sitting in/IN/in one/CD/one node/NN/node and/CC/and k/NN/k is/VBZ/is trying/VBG/trying to/TO/to come/VB/come in/NNP/in. how/WRB/how do/VBP/do we/PRP/we split/VB/split ?/./? we/PRP/we split/VBP/split with/IN/with c/NN/c on/IN/on one/CD/one side/NN/side ;/:/; a/DT/a /,/, k/NN/k on/IN/on the/DT/the other/JJ/other side/NN/side and/CC/and then/RB/then b/VB/b goes/VBZ/goes up/NNP/up. since/IN/since c/NN/c on/IN/on one/CD/one side/NN/side that/WDT/that corresponds/VBZ/corresponds to/TO/to a/DT/a single/JJ/single black/NN/black node/NN/node /,/, a/DT/a and/CC/and k/NN/k on/IN/on the/DT/the other/JJ/other side/NN/side corresponds/NNS/corresponds to/TO/to a/DT/a and/CC/and k/NN/k on/IN/on the/DT/the right/NN/right side/NN/side of/IN/of the/DT/the tree/NN/tree and/CC/and b/NN/b goes/VBZ/goes up/RP/up /,/, so/RB/so this/DT/this is/VBZ/is now/RB/now trying/VBG/trying to/TO/to go/VB/go up/RP/up to/TO/to the/DT/the parent/NNP/parent. does/VBZ/does this/DT/this take/NN/take care/NN/care of/IN/of all/DT/all problems/NNS/problems ?/./? there/RB/there are/VBP/are 2/CD/2 issues/NNP/issues. first/RB/first have/VBP/have we/PRP/we created/VBN/created a/DT/a black/JJ/black height/NN/height problem/NN/problem ?/./? no/DT/no /,/, so/RB/so let/VB/let us/PRP/us say/VB/say what/WP/what should/MD/should be/VB/be the/DT/the initial/JJ/initial black/NN/black height/NN/height of/IN/of all/DT/all these/DT/these sub/NN/sub trees/NNS/trees ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 37/CD/37 /CD/) if/IN/if the/DT/the node/NN/node below/IN/below k/NN/k is/VBZ/is h/JJ/h /,/, then/RB/then all/DT/all the/DT/the black/JJ/black height/NN/height of/IN/of these/DT/these entire/JJ/entire sub/NN/sub trees/NNS/trees which/WDT/which is/VBZ/is on/IN/on the/DT/the left/NN/left side/NN/side would/MD/would be/VB/be h/JJ/h +/NN/+ 1/CD/1. this/DT/this means/VBZ/means the/DT/the external/JJ/external nodes/NNS/nodes on/IN/on the/DT/the right/NN/right side/NN/side are/VBP/are all/DT/all h/NN/h and/CC/and now/RB/now the/DT/the black/JJ/black height/NN/height of/IN/of these/DT/these entire/JJ/entire sub/NN/sub trees/NNS/trees is/VBZ/is h/JJ/h +/NN/+ 1/CD/1. so/RB/so no/DT/no problem/NN/problem /,/, it/PRP/it was/VBD/was as/IN/as before/NNP/before. but/CC/but i/PRP/i have/VBP/have a/DT/a red/VBN/red node/NN/node b/NN/b and/CC/and its/PRP$/its parent/NN/parent could/MD/could have/VB/have been/VBN/been a/DT/a red/NNP/red. thus/RB/thus i/PRP/i have/VBP/have a/DT/a double/JJ/double red/VBN/red problem/NN/problem and/CC/and this/DT/this is/VBZ/is the/DT/the same/JJ/same thing/NNP/thing. we/PRP/we have/VBP/have managed/VBN/managed to/TO/to move/VB/move the/DT/the double/JJ/double red/NN/red problem/NN/problem one/CD/one level/NN/level up/NNP/up. and/CC/and now/RB/now you/PRP/you see/VBP/see why/WRB/why i/PRP/i had/VBD/had these/DT/these sub/NN/sub trees/NNS/trees hanging/VBG/hanging out/RP/out of/IN/of here/NNP/here. when/WRB/when this/DT/this moves/VBZ/moves one/CD/one level/NN/level up/IN/up /,/, the/DT/the rounded/VBN/rounded part/NN/part in/IN/in the/DT/the above/NN/above slide/NN/slide will/MD/will be/VB/be one/CD/one sub/NN/sub tree/NN/tree hanging/VBG/hanging from/IN/from the/DT/the node/NN/node b/NN/b and/CC/and the/DT/the one/CD/one which/WDT/which is/VBZ/is marked/VBN/marked on/IN/on the/DT/the right/NN/right side/NN/side would/MD/would be/VB/be the/DT/the other/JJ/other sub/NN/sub tree/NN/tree hanging/VBG/hanging from/IN/from here/NNP/here. this/DT/this is/VBZ/is the/DT/the continuation/NN/continuation /,/, the/DT/the parent/NN/parent of/IN/of b/NN/b could/MD/could also/RB/also be/VB/be red/VBN/red and/CC/and that/IN/that case/NN/case the/DT/the double/JJ/double red/NN/red problem/NN/problem moves/VBZ/moves up/RP/up one/CD/one level/NNP/level. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 53/CD/53 /CD/) we/PRP/we will/MD/will repeat/VB/repeat this/DT/this process/NN/process at/IN/at the/DT/the next/JJ/next level/NN/level /,/, we/PRP/we will/MD/will consider/VB/consider the/DT/the 2/CD/2 cases/NNP/cases. if/IN/if we/PRP/we can/MD/can by/IN/by rotation/NN/rotation take/VB/take care/NN/care of/IN/of it/PRP/it we/PRP/we would/MD/would have/VB/have done/VBN/done it/PRP/it /,/, if/IN/if not/RB/not then/RB/then the/DT/the double/JJ/double red/NN/red problem/NN/problem will/MD/will move/VB/move even/RB/even one/CD/one level/NN/level up/IN/up and/CC/and so/RB/so on/NNP/on. eventually/RB/eventually we/PRP/we will/MD/will end/VB/end up/RP/up coloring/VBG/coloring the/DT/the root/NN/root which/WDT/which was/VBD/was originally/RB/originally black/JJ/black as/IN/as it/PRP/it was/VBD/was in/IN/in a/DT/a red/NN/red black/NN/black tree/NNP/tree. we/PRP/we will/MD/will end/VB/end up/RP/up coloring/VBG/coloring it/PRP/it red/VBD/red but/CC/but if/IN/if the/DT/the root/NN/root is/VBZ/is colored/VBN/colored red/VBN/red everything/NN/everything else/RB/else is/VBZ/is okay/NNP/okay. that/IN/that is/VBZ/is the/DT/the root/NN/root is/VBZ/is colored/VBN/colored red/-NONE-/red. how/WRB/how do/VBP/do i/PRP/i take/VB/take care/JJ/care of/IN/of it/PRP/it ?/./? just/RB/just color/NN/color it/PRP/it black/VBP/black again/RB/again and/CC/and that/IN/that will/MD/will increase/VB/increase the/DT/the black/NN/black depth/NN/depth of/IN/of all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes by/IN/by one/CD/one but/CC/but it/PRP/it remains/VBZ/remains the/DT/the same/NNP/same. we/PRP/we are/VBP/are not/RB/not saying/VBG/saying that/IN/that the/DT/the black/JJ/black depth/NN/depth of/IN/of the/DT/the all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes should/MD/should remain/VB/remain the/DT/the same/JJ/same /,/, we/PRP/we just/RB/just say/VBP/say it/PRP/it should/MD/should remain/VB/remain uniform/NNP/uniform. the/DT/the black/JJ/black depth/NN/depth of/IN/of the/DT/the one/CD/one external/JJ/external node/NN/node and/CC/and the/DT/the other/JJ/other external/JJ/external should/MD/should be/VB/be the/DT/the same/NNP/same. if/IN/if i/PRP/i color/VBP/color the/DT/the root/NN/root black/NN/black /,/, it/PRP/it will/MD/will just/RB/just affect/VB/affect all/DT/all the/DT/the external/JJ/external nodes/NNS/nodes by/IN/by one/NNP/one. so/RB/so there/RB/there will/MD/will be/VB/be no/RB/no problem/NNP/problem. this/DT/this essentially/RB/essentially corresponds/VBZ/corresponds to/TO/to moving/VBG/moving all/DT/all the/DT/the way/NN/way up/RP/up and/CC/and splitting/VBG/splitting the/DT/the root/NNP/root. when/WRB/when we/PRP/we split/VBP/split the/DT/the root/NN/root in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree /,/, even/RB/even then/RB/then the/DT/the height/NN/height of/IN/of 2-4/CD/2-4 tree/CD/tree went/NN/went up/IN/up by/IN/by one/CD/one and/CC/and so/RB/so we/PRP/we are/VBP/are seeing/VBG/seeing that/IN/that the/DT/the height/NN/height of/IN/of the/DT/the red/NN/red black/NN/black tree/NN/tree is/VBZ/is correspondingly/RB/correspondingly increasing/VBG/increasing by/IN/by one/CD/one when/WRB/when we/PRP/we do/VBP/do such/JJ/such thing/NNP/thing. so/IN/so again/RB/again what/WP/what we/PRP/we have/VBP/have seen/VBN/seen in/IN/in this/DT/this insertion/NN/insertion process/NN/process is/VBZ/is that/IN/that either/DT/either we/PRP/we have/VBP/have to/TO/to do/VB/do one/CD/one rotation/NN/rotation to/TO/to take/VB/take care/NN/care of/IN/of the/DT/the problem/NN/problem and/CC/and if/IN/if we/PRP/we could/MD/could not/RB/not take/VB/take care/NN/care of/IN/of the/DT/the problem/NN/problem by/IN/by one/CD/one rotation/NN/rotation then/RB/then we/PRP/we have/VBP/have to/TO/to move/VB/move the/DT/the problem/NN/problem up/RP/up to/TO/to the/DT/the next/JJ/next level/NNP/level. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 31/CD/31 /CD/) but/CC/but when/WRB/when we/PRP/we move/VBP/move the/DT/the problem/NN/problem up/RP/up to/TO/to the/DT/the next/JJ/next level/NN/level we/PRP/we just/RB/just did/VBD/did a/DT/a recoloring/NN/recoloring of/IN/of the/DT/the nodes/NNP/nodes. lets/VBZ/lets see/VB/see /,/, when/WRB/when we/PRP/we move/VBP/move the/DT/the problem/NN/problem up/RP/up to/TO/to the/DT/the next/JJ/next level/NN/level in/IN/in this/DT/this case/NN/case all/DT/all i/PRP/i did/VBD/did was/VBD/was /,/, change/NN/change the/DT/the reds/NNS/reds to/TO/to black/VB/black and/CC/and change/NN/change the/DT/the black/JJ/black to/TO/to red/NNP/red. and/CC/and now/RB/now it/PRP/it is/VBZ/is moved/VBN/moved up/RP/up to/TO/to the/DT/the next/JJ/next high/NN/high level/NN/level and/CC/and may/MD/may be/VB/be if/IN/if it/PRP/it has/VBZ/has to/TO/to moved/VBN/moved up/RP/up to/TO/to further/RBR/further higher/JJR/higher level/NN/level it/PRP/it will/MD/will just/RB/just corresponds/VBZ/corresponds to/TO/to recoloring/VBG/recoloring of/IN/of nodes/NNP/nodes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 59/CD/59 /CD/) suppose/NN/suppose in/IN/in the/DT/the above/NN/above slide/NN/slide /,/, the/DT/the parent/NN/parent of/IN/of the/DT/the red/NN/red colored/VBD/colored node/NN/node b/NN/b was/VBD/was red/VBN/red /,/, then/RB/then the/DT/the other/JJ/other child/NN/child of/IN/of this/DT/this has/VBZ/has to/TO/to be/VB/be black/JJ/black /,/, it/PRP/it can/MD/can not/RB/not be/VB/be red/VBN/red clearly/-NONE-/clearly. other/JJ/other wise/NN/wise there/EX/there was/VBD/was already/RB/already a/DT/a double/JJ/double red/VBN/red problem/NNP/problem. but/CC/but it/PRP/it is/VBZ/is not/RB/not that/IN/that the/DT/the one/CD/one we/PRP/we are/VBP/are worried/VBN/worried about/NNP/about. its/PRP$/its basically/RB/basically the/DT/the node/NN/node on/IN/on the/DT/the extreme/NN/extreme right/RB/right which/WDT/which we/PRP/we are/VBP/are worried/VBN/worried about/IN/about /,/, whether/IN/whether it/PRP/it is/VBZ/is red/VBN/red or/CC/or black/NNP/black. if/IN/if we/PRP/we look/VBP/look at/IN/at the/DT/the previous/JJ/previous case/NN/case /,/, we/PRP/we looked/VBD/looked at/IN/at the/DT/the parent/NN/parent nodes/VBZ/nodes sibling/VBG/sibling whether/IN/whether it/PRP/it is/VBZ/is red/VBN/red or/CC/or black/NNP/black. so/RB/so it/PRP/it is/VBZ/is the/DT/the extreme/NN/extreme right/RB/right node/VBP/node whose/WP$/whose color/NN/color we/PRP/we are/VBP/are worried/VBN/worried about/IN/about and/CC/and still/RB/still this/DT/this node/NN/node can/MD/can be/VB/be red/VBN/red or/CC/or black/NNP/black. so/RB/so in/IN/in insertion/NN/insertion we/PRP/we just/RB/just have/VBP/have to/TO/to do/VB/do one/CD/one rotation/NNP/rotation. if/IN/if we/PRP/we move/VBP/move up/RP/up the/DT/the tree/NN/tree /,/, we/PRP/we just/RB/just have/VBP/have to/TO/to do/VB/do recoloring/NNP/recoloring. the/DT/the same/JJ/same was/VBD/was happening/VBG/happening in/IN/in the/DT/the case/NN/case of/IN/of deletion/NN/deletion also/RB/also and/CC/and i/PRP/i had/VBD/had mentioned/VBN/mentioned this/DT/this very/RB/very clearly/RB/clearly that/IN/that if/IN/if we/PRP/we move/VBP/move up/RP/up /,/, we/PRP/we just/RB/just had/VBD/had to/TO/to do/VB/do some/DT/some recoloring/NNP/recoloring. the/DT/the moment/NN/moment you/PRP/you do/VBP/do one/CD/one rotation/NN/rotation the/DT/the process/NN/process ends/VBZ/ends /,/, other/JJ/other wise/NN/wise it/PRP/it just/RB/just does/VBZ/does recoloring/NNP/recoloring. this/DT/this is/VBZ/is what/WP/what it/PRP/it makes/VBZ/makes the/DT/the process/NN/process very/RB/very fast/JJ/fast because/IN/because recoloring/VBG/recoloring is/VBZ/is just/RB/just one/CD/one bit/NN/bit of/IN/of information/NN/information really/RB/really in/IN/in each/DT/each node/NNP/node. the/DT/the 1/CD/1 or/CC/or 0/-NONE-/0 will/MD/will just/RB/just tell/VB/tell you/PRP/you whether/IN/whether it/PRP/it is/VBZ/is red/VBN/red or/CC/or black/NNP/black. you/PRP/you just/RB/just need/VBP/need to/TO/to quickly/RB/quickly change/VB/change those/DT/those bits/NNS/bits if/IN/if you/PRP/you are/VBP/are moving/VBG/moving up/RP/up the/DT/the tree/NNP/tree. rotation/NN/rotation is/VBZ/is slightly/RB/slightly more/RBR/more expensive/JJ/expensive because/IN/because it/PRP/it requires/VBZ/requires some/DT/some pointer/NN/pointer changes/NNS/changes /,/, 6/CD/6 or/CC/or 7/CD/7 pointers/NNS/pointers have/VBP/have to/TO/to be/VB/be changed/NNP/changed. and/CC/and this/DT/this is/VBZ/is why/WRB/why the/DT/the insertion/NN/insertion and/CC/and deletion/NN/deletion in/IN/in red/JJ/red black/NN/black tree/NN/tree is/VBZ/is faster/JJR/faster than/IN/than in/IN/in the/DT/the case/NN/case of/IN/of avl/NN/avl trees/NNP/trees. in/IN/in avl/NN/avl trees/NNS/trees recall/VBP/recall that/IN/that we/PRP/we have/VBP/have to/TO/to do/VB/do more/JJR/more then/RB/then one/CD/one rotation/NNP/rotation. we/PRP/we did/VBD/did a/DT/a rotation/NN/rotation then/RB/then we/PRP/we moved/VBD/moved up/RP/up /,/, perhaps/RB/perhaps you/PRP/you have/VB/have to/TO/to do/VB/do another/DT/another rotation/NN/rotation and/CC/and so/RB/so on/NNP/on. although/IN/although for/IN/for both/DT/both of/IN/of the/DT/the data/NNS/data structures/NNS/structures /,/, the/DT/the worst/JJS/worst case/NN/case time/NN/time for/IN/for insertion/NN/insertion and/CC/and deletion/NN/deletion is/VBZ/is log/NN/log n/NNP/n. because/IN/because even/RB/even there/RB/there you/PRP/you were/VBD/were doing/VBG/doing only/RB/only log/JJ/log n/NN/n rotations/NNS/rotations /,/, but/CC/but the/DT/the constant/JJ/constant behind/NN/behind that/WDT/that log/NN/log n/VBP/n are/VBP/are much/RB/much larger/JJR/larger in/IN/in the/DT/the case/NN/case of/IN/of avl/NN/avl tree/NN/tree than/IN/than in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the red/NN/red black/NN/black tree/NNP/tree. so/RB/so even/RB/even with/IN/with in/IN/in the/DT/the log/NN/log n/NN/n /,/, this/DT/this would/MD/would be/VB/be a/DT/a faster/JJR/faster process/NN/process for/IN/for both/DT/both insertion/NN/insertion and/CC/and deletion/NN/deletion than/IN/than in/IN/in the/DT/the case/NN/case of/IN/of an/DT/an avl/NN/avl tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 31/CD/31 /CD/) that/WDT/that is/VBZ/is all/DT/all we/PRP/we wanted/VBD/wanted to/TO/to discuss/VB/discuss about/IN/about the/DT/the red/NN/red black/NN/black trees/NNP/trees. we/PRP/we looked/VBD/looked at/IN/at search/NN/search /,/, insert/NN/insert and/CC/and delete/NNP/delete. all/DT/all of/IN/of them/PRP/them take/VBP/take log/NN/log n/NN/n time/NN/time /,/, you/PRP/you can/MD/can also/RB/also think/VB/think of/IN/of other/JJ/other operation/NN/operation like/IN/like if/IN/if i/PRP/i say/VBP/say find/JJ/find the/DT/the minimum/JJ/minimum element/NN/element in/IN/in a/DT/a red/NN/red black/NN/black tree/NNP/tree. how/WRB/how much/JJ/much time/NN/time do/VBP/do you/PRP/you think/VB/think its/PRP$/its going/VBG/going to/TO/to take/VB/take ?/./? minimum/JJ/minimum means/NNS/means just/RB/just keep/VB/keep going/VBG/going left/NNP/left. so/RB/so time/NN/time is/VBZ/is height/VBN/height /,/, height/RB/height is/VBZ/is log/JJ/log n/NN/n then/RB/then its/PRP$/its just/RB/just log/JJ/log n/NNP/n. you/PRP/you can/MD/can do/VB/do all/PDT/all such/JJ/such kind/NN/kind of/IN/of operations/NNS/operations in/IN/in log/NN/log n/NN/n time/NNP/time. most/JJS/most of/IN/of those/DT/those operations/NNS/operations are/VBP/are not/RB/not changing/VBG/changing the/DT/the tree/NNP/tree. it/PRP/it is/VBZ/is much/RB/much easier/JJR/easier /,/, the/DT/the 2/CD/2 operations/NNS/operations where/WRB/where we/PRP/we changed/VBD/changed the/DT/the tree/NN/tree are/VBP/are insert/VBN/insert and/CC/and delete/JJ/delete but/CC/but we/PRP/we seen/VBP/seen that/IN/that you/PRP/you can/MD/can still/RB/still take/VB/take care/NN/care of/IN/of them/PRP/them in/IN/in log/NN/log n/NN/n time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 49/CD/49 /CD/) we/PRP/we will/MD/will come/VB/come to/TO/to this/DT/this notion/NN/notion of/IN/of a-b/NNP/a-b trees/NNS/trees and/CC/and this/DT/this is/VBZ/is a/DT/a generalized/VBN/generalized idea/NN/idea of/IN/of 2-4/CD/2-4 trees/NNP/trees. what/WP/what is/VBZ/is an/DT/an a-b/JJ/a-b tree/NN/tree ?/./? i/PRP/i have/VBP/have drawn/VBN/drawn an/DT/an a-b/JJ/a-b tree/NN/tree and/CC/and actually/RB/actually this/DT/this is/VBZ/is the/DT/the same/JJ/same picture/NN/picture that/IN/that i/PRP/i used/VBD/used for/IN/for the/DT/the 2-4/CD/2-4 trees/NNS/trees if/IN/if you/PRP/you remember/NNP/remember. an/DT/an a-b/JJ/a-b tree/NN/tree is/VBZ/is a/DT/a multi-way/JJ/multi-way search/NN/search tree/NNP/tree. each/DT/each node/NN/node has/VBZ/has at/IN/at least/JJS/least a/DT/a and/CC/and at/IN/at most/JJS/most b/NN/b children/NNP/children. when/WRB/when a/DT/a is/VBZ/is 2/CD/2 and/CC/and b/NN/b is/VBZ/is 4/CD/4 then/RB/then you/PRP/you get/VBP/get 2-4/CD/2-4 tree/NNP/tree. if/IN/if it/PRP/it has/VBZ/has at/IN/at least/JJS/least a/DT/a children/NN/children and/CC/and at/IN/at most/JJS/most b/NN/b children/NNS/children then/RB/then how/WRB/how many/JJ/many keys/NNS/keys are/VBP/are there/RB/there inside/JJ/inside ?/./? a-1/-NONE-/a-1 to/TO/to b-1/NNP/b-1. what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by b-a/NNP/b-a +/NNP/+ 1/CD/1 ?/./? if/IN/if it/PRP/it has/VBZ/has a/DT/a children/NN/children then/RB/then it/PRP/it has/VBZ/has a-1/-NONE-/a-1 keys/NNS/keys /,/, if/IN/if it/PRP/it has/VBZ/has b/NN/b children/NNS/children then/RB/then it/PRP/it has/VBZ/has b-1/-NONE-/b-1 keys/NNP/keys. so/IN/so the/DT/the number/NN/number of/IN/of keys/NNS/keys is/VBZ/is between/IN/between a-1/-NONE-/a-1 and/CC/and b-1/NNP/b-1. the/DT/the one/CD/one node/NN/node which/WDT/which does/VBZ/does not/RB/not satisfy/VB/satisfy this/DT/this property/NN/property is/VBZ/is the/DT/the root/NN/root node/NNP/node. the/DT/the root/NN/root node/NN/node can/MD/can have/VB/have only/RB/only 2/CD/2 children/NNP/children. if/IN/if a/DT/a is/VBZ/is 3/CD/3 or/CC/or 7/CD/7 or/CC/or some/DT/some other/JJ/other thing/NN/thing then/RB/then its/PRP$/its not/RB/not that/IN/that the/DT/the root/NN/root also/RB/also should/MD/should have/VB/have at/IN/at least/JJS/least 3/CD/3 or/CC/or 7/CD/7 children/NNP/children. root/NN/root is/VBZ/is out/RP/out of/IN/of this/DT/this definition/NN/definition /,/, so/RB/so root/RB/root can/MD/can have/VB/have only/RB/only 2/CD/2 children/NNP/children. root/NN/root has/VBZ/has at/IN/at least/JJS/least 2/CD/2 and/CC/and at/IN/at most/JJS/most b/NN/b children/NNP/children. for/IN/for the/DT/the root/NN/root the/DT/the requirement/NN/requirement is/VBZ/is from/IN/from 2/CD/2 to/TO/to b/VB/b and/CC/and we/PRP/we will/MD/will see/VB/see what/WP/what is/VBZ/is the/DT/the need/NN/need for/IN/for this/DT/this requirement/NNP/requirement. again/RB/again all/DT/all leaf/NN/leaf nodes/NNS/nodes are/VBP/are at/IN/at the/DT/the same/JJ/same level/NNP/level. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of an/DT/an a-b/JJ/a-b tree/NN/tree ?/./? we/PRP/we have/VBP/have seen/VBN/seen this/DT/this before/NN/before /,/, is/VBZ/is the/DT/the minimum/JJ/minimum height/NN/height and/CC/and is/VBZ/is the/DT/the maximum/NN/maximum height/NNP/height. you/PRP/you can/MD/can context/VB/context this/DT/this to/TO/to the/DT/the little/JJ/little bit/NN/bit because/IN/because the/DT/the root/NN/root has/VBZ/has the/DT/the only/JJ/only 2/CD/2 children/NNP/children. when/WRB/when the/DT/the root/NN/root has/VBZ/has 2/CD/2 children/NNS/children every/DT/every one/CD/one else/NN/else has/VBZ/has a/DT/a children/NN/children /,/, so/RB/so there/RB/there would/MD/would be/VB/be a/DT/a plus/NN/plus one/CD/one in/IN/in that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 15/CD/15 /CD/) /./. but/CC/but this/DT/this /NN/( /,/, /:/) would/MD/would be/VB/be the/DT/the roughly/RB/roughly the/DT/the bounds/NNP/bounds. as/IN/as you/PRP/you can/MD/can see/VB/see in/IN/in the/DT/the above/NN/above slide/NN/slide /,/, every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least 2/CD/2 and/CC/and at/IN/at most/JJS/most 3/CD/3 children/NNS/children /,/, so/RB/so this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of 2-3/CD/2-3 tree/NNP/tree. we/PRP/we can/MD/can talk/VB/talk of/IN/of 2-3/CD/2-3 tree/NN/tree /,/, 2-4/CD/2-4 tree/NN/tree /,/, 2-5/CD/2-5 trees/NNS/trees and/CC/and so/RB/so on/IN/on /,/, for/IN/for any/DT/any choice/NN/choice of/IN/of a/DT/a and/CC/and b/NNP/b. i/PRP/i will/MD/will correct/VB/correct the/DT/the statement/NN/statement as/IN/as this/DT/this discussion/NN/discussion proceeds/NNP/proceeds. it/PRP/it is/VBZ/is not/RB/not any/DT/any choice/NN/choice of/IN/of a/DT/a and/CC/and b/NN/b /,/, we/PRP/we will/MD/will see/VB/see what/WP/what are/VBP/are our/PRP$/our requirements/NNS/requirements on/IN/on the/DT/the relation/NN/relation between/IN/between a/DT/a and/CC/and b/NNP/b. this/DT/this will/MD/will not/RB/not work/VB/work on/IN/on any/DT/any choice/NN/choice of/IN/of a/DT/a and/CC/and b/NN/b /,/, but/CC/but for/IN/for now/RB/now we/PRP/we will/MD/will just/RB/just assume/VB/assume it/PRP/it as/IN/as any/DT/any choice/NN/choice of/IN/of a/DT/a and/CC/and b/NNP/b. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 04/CD/04 /CD/) in/IN/in insertion/NN/insertion so/IN/so as/IN/as you/PRP/you can/MD/can imagine/VB/imagine this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be essentially/RB/essentially a/DT/a repetition/NN/repetition of/IN/of what/WP/what we/PRP/we did/VBD/did for/IN/for 2-4/CD/2-4 trees/NNS/trees and/CC/and it/PRP/it is/VBZ/is with/IN/with small/JJ/small modifications/NNP/modifications. i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the key/JJ/key 21/CD/21. as/IN/as it/PRP/it is/VBZ/is a/DT/a multi/NN/multi way/NN/way search/NN/search tree/NN/tree /,/, i/PRP/i will/MD/will find/VB/find a/DT/a position/NN/position where/WRB/where this/DT/this has/VBZ/has to/TO/to go/NNP/go. the/DT/the 21/CD/21 does/VBZ/does not/RB/not go/VB/go between/IN/between 13/CD/13 and/CC/and 22/CD/22 so/RB/so come/VBN/come down/NNP/down. it/PRP/it is/VBZ/is more/RBR/more then/RB/then 18/CD/18 so/RB/so go/RB/go right/RB/right and/CC/and it/PRP/it can/MD/can fit/VB/fit in/IN/in to/TO/to that/DT/that position/NN/position next/IN/next to/TO/to 20/CD/20. no/DT/no problem/NN/problem if/IN/if the/DT/the node/NN/node has/VBZ/has an/DT/an empty/NN/empty space/NNP/space. similarly/RB/similarly for/IN/for 23/CD/23 /,/, as/IN/as it/PRP/it is/VBZ/is less/JJR/less than/IN/than 25/CD/25 it/PRP/it comes/VBZ/comes to/TO/to this/DT/this space/NN/space and/CC/and in/IN/in a/DT/a node/NN/node we/PRP/we are/VBP/are just/RB/just keeping/VBG/keeping in/IN/in order/NNP/order. so/RB/so 24/CD/24 will/MD/will make/VB/make way/NN/way and/CC/and 23/CD/23 will/MD/will come/VB/come at/IN/at the/DT/the place/NNP/place. if/IN/if there/EX/there is/VBZ/is no/DT/no space/NN/space in/IN/in the/DT/the node/NN/node that/IN/that we/PRP/we are/VBP/are trying/VBG/trying to/TO/to put/VB/put the/DT/the key/JJ/key in/IN/in /,/, then/RB/then the/DT/the node/NN/node gets/VBZ/gets split/NNP/split. let/NN/let us/PRP/us see/VBP/see 29/CD/29 /,/, 29/CD/29 compared/VBN/compared with/IN/with 22/CD/22 and/CC/and it/PRP/it is/VBZ/is more/RBR/more than/IN/than 22/CD/22 so/RB/so it/PRP/it goes/VBZ/goes right/RB/right /,/, more/JJR/more than/IN/than 25/CD/25 and/CC/and again/RB/again goes/VBZ/goes right/NNP/right. i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the 2-3/CD/2-3 tree/NN/tree in/IN/in this/DT/this picture/NNP/picture. we/PRP/we are/VBP/are talking/VBG/talking of/IN/of a-b/JJ/a-b but/CC/but i/PRP/i did/VBD/did not/RB/not want/VB/want to/TO/to make/VB/make a/DT/a and/CC/and b/NN/b very/RB/very large/JJ/large because/IN/because it/PRP/it would/MD/would not/RB/not fit/VB/fit on/IN/on the/DT/the slide/NNP/slide. so/RB/so i/PRP/i am/VBP/am just/RB/just looking/VBG/looking at/IN/at a/DT/a =/CD/= 2/CD/2 and/CC/and b/NN/b =/:/= 3/CD/3. and/CC/and the/DT/the concepts/NNS/concepts are/VBP/are the/DT/the same/NNP/same. for/IN/for an/DT/an a-b/JJ/a-b tree/NN/tree all/DT/all the/DT/the leaves/NNS/leaves have/VBP/have to/TO/to be/VB/be at/IN/at the/DT/the same/JJ/same height/NN/height as/IN/as in/IN/in the/DT/the case/NN/case of/IN/of 2-4/CD/2-4 tree/NNP/tree. this/DT/this is/VBZ/is essentially/RB/essentially 2-3/CD/2-3 tree/NNP/tree. basically/RB/basically 2-3/CD/2-3 tree/NN/tree means/VBZ/means each/DT/each node/NN/node has/VBZ/has between/VBN/between 2/CD/2 and/CC/and 3/CD/3 children/NNS/children which/WDT/which means/VBZ/means that/DT/that each/DT/each node/NN/node can/MD/can have/VB/have 1/CD/1 key/JJ/key or/CC/or 2/CD/2 keys/NNS/keys only/RB/only which/WDT/which is/VBZ/is why/WRB/why each/DT/each of/IN/of those/DT/those has/VBZ/has been/VBN/been made/VBN/made with/IN/with space/NN/space for/IN/for 2/CD/2 keys/NNP/keys. each/DT/each could/MD/could have/VB/have 1key/JJ/1key or/CC/or 2/CD/2 keys/NNP/keys. this/DT/this can/MD/can have/VB/have only/RB/only 2/CD/2 keys/NNS/keys but/CC/but now/RB/now i/PRP/i am/VBP/am coming/VBG/coming with/IN/with another/DT/another one/CD/one that/WDT/that is/VBZ/is the/DT/the third/JJ/third one/NNP/one. if/IN/if there/EX/there is/VBZ/is insufficient/NN/insufficient space/NN/space then/RB/then split/JJ/split the/DT/the node/NNP/node. i/PRP/i am/VBP/am going/VBG/going to/TO/to split/VB/split this/DT/this node/NN/node and/CC/and the/DT/the median/JJ/median key/JJ/key is/VBZ/is promoted/VBN/promoted to/TO/to the/DT/the parent/NNP/parent. thus/RB/thus 28/CD/28 is/VBZ/is the/DT/the median/JJ/median of/IN/of these/DT/these 3/CD/3 /,/, so/RB/so 28/CD/28 will/MD/will get/VB/get promoted/VBN/promoted to/TO/to the/DT/the parent/NNP/parent. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 54/CD/54 /CD/) so/RB/so i/PRP/i split/VBP/split 26/CD/26 goes/NNS/goes down/IN/down 29/CD/29 goes/VBZ/goes down/IN/down and/CC/and 28/CD/28 goes/NNS/goes up/NNP/up. and/CC/and the/DT/the lines/NNS/lines disappear/VBP/disappear and/CC/and these/DT/these become/NN/become the/DT/the children/NNS/children of/IN/of this/NNP/this. the/DT/the split/NN/split can/MD/can cascade/VB/cascade and/CC/and we/PRP/we will/MD/will see/VB/see the/DT/the example/NN/example of/IN/of that/NNP/that. when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert 7/CD/7 i/PRP/i will/MD/will compare/VB/compare 7/CD/7 with/IN/with the/DT/the first/JJ/first key/NNP/key. the/DT/the 7/CD/7 is/VBZ/is less/JJR/less than/IN/than 13/CD/13 so/RB/so i/PRP/i will/MD/will go/VB/go left/VBN/left /,/, 7/CD/7 lies/NNS/lies between/IN/between 3/CD/3 and/CC/and 8/CD/8. so/RB/so i/PRP/i take/VBP/take the/DT/the middle/NN/middle path/NN/path /,/, come/VBP/come down/RB/down and/CC/and 7/CD/7 tries/NNS/tries to/TO/to come/VB/come to/TO/to this/DT/this node/NN/node except/IN/except this/DT/this node/NN/node does/VBZ/does not/RB/not have/VB/have enough/RB/enough space/NNP/space. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 54/CD/54 /CD/) this/DT/this node/NN/node gets/VBZ/gets split/NN/split in/IN/in to/TO/to 2/CD/2. the/DT/the 4/CD/4 will/MD/will go/VB/go down/RB/down /,/, 7/CD/7 will/MD/will go/VB/go to/TO/to the/DT/the adjacent/NN/adjacent node/NN/node and/CC/and median/JJ/median is/VBZ/is 5/CD/5 so/RB/so it/PRP/it will/MD/will go/VB/go up/NNP/up. as/IN/as nothing/NN/nothing is/VBZ/is left/VBN/left here/RB/here because/IN/because we/PRP/we just/RB/just remove/VBP/remove this/DT/this node/NN/node and/CC/and we/PRP/we will/MD/will remove/VB/remove it/PRP/it shortly/NNP/shortly. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 51/CD/51 /CD/) this/DT/this 5/CD/5 is/VBZ/is trying/VBG/trying to/TO/to go/VB/go in/IN/in to/TO/to this/DT/this /NN/( 3/CD/3 /,/, 8/CD/8 /:/) node/NN/node /,/, except/IN/except there/EX/there is/VBZ/is no/DT/no space/NN/space here/RB/here either/DT/either and/CC/and once/RB/once again/RB/again this/DT/this gets/NNS/gets split/VBP/split in/IN/in to/TO/to 2/CD/2. the/DT/the 3/CD/3 goes/VBZ/goes to/TO/to the/DT/the upper/JJ/upper node/NN/node and/CC/and 8/CD/8 to/TO/to the/DT/the adjacent/NN/adjacent node/NN/node and/CC/and the/DT/the median/JJ/median 5/CD/5 get/NN/get promoted/VBN/promoted to/TO/to the/DT/the parent/NNP/parent. it/PRP/it is/VBZ/is same/JJ/same as/IN/as in/IN/in the/DT/the red/NN/red black/NN/black tree/NN/tree /,/, we/PRP/we have/VBP/have not/RB/not done/VBN/done anything/NN/anything which/WDT/which is/VBZ/is different/JJ/different from/IN/from the/DT/the red/NN/red black/NN/black tree/NNP/tree. but/CC/but what/WP/what i/PRP/i am/VBP/am pointing/VBG/pointing out/RP/out through/IN/through this/DT/this is/VBZ/is that/IN/that we/PRP/we need/VBP/need not/RB/not have/VB/have a/DT/a 2-4/CD/2-4 tree/NN/tree /,/, we/PRP/we could/MD/could also/RB/also have/VB/have 2-3/CD/2-3 tree/NNP/tree. in/IN/in the/DT/the red/NN/red black/NN/black tree/NN/tree every/DT/every node/NN/node had/VBD/had space/NN/space for/IN/for 3/CD/3 keys/NNS/keys /,/, even/RB/even if/IN/if every/DT/every node/NN/node had/VBD/had space/NN/space for/IN/for 2/CD/2 keys/NNS/keys we/PRP/we can/MD/can still/RB/still make/VB/make it/PRP/it work/NNP/work. that/IN/that is/VBZ/is what/WP/what happens/NNS/happens /,/, 3/CD/3 and/CC/and 8/CD/8 get/NN/get splitted/VBN/splitted and/CC/and 5/CD/5 goes/NNS/goes to/TO/to the/DT/the top/NNP/top. once/RB/once again/RB/again 5/CD/5 is/VBZ/is trying/VBG/trying to/TO/to enter/VB/enter here/RB/here /,/, but/CC/but there/EX/there is/VBZ/is no/DT/no space/NN/space for/IN/for 5/CD/5. first/JJ/first let/NN/let us/PRP/us just/RB/just reorganize/VBP/reorganize this/NNP/this. these/DT/these 4/CD/4 children/NNS/children have/VBP/have to/TO/to be/VB/be children/VBN/children of/IN/of these/DT/these 2/CD/2 nodes/NNS/nodes /:/( 3/CD/3 and/CC/and 8/CD/8 /CD/) /./. the/DT/the 2/CD/2 left/VBN/left will/MD/will go/VB/go to/TO/to the/DT/the left/NN/left of/IN/of 3/CD/3 and/CC/and 2/CD/2 right/NN/right would/MD/would go/VB/go to/TO/to its/PRP$/its right/NNP/right. let/NN/let us/PRP/us take/VBP/take care/NN/care of/IN/of this/DT/this node/NN/node /:/( 5/CD/5 /CD/) /./. the/DT/the 5/CD/5 try/NN/try to/TO/to go/VB/go between/IN/between 13/CD/13 and/CC/and 22/CD/22 /,/, but/CC/but not/RB/not able/JJ/able to/TO/to go/NNP/go. so/RB/so this/DT/this gets/NNS/gets split/VBP/split in/IN/in to/TO/to 2/CD/2 and/CC/and 1/CD/1 key/JJ/key gets/NNS/gets promoted/VBN/promoted to/TO/to the/DT/the parent/NN/parent except/IN/except there/EX/there is/VBZ/is no/DT/no parent/NN/parent this/DT/this is/VBZ/is the/DT/the root/NN/root so/RB/so we/PRP/we create/VBP/create a/DT/a new/JJ/new root/NN/root and/CC/and we/PRP/we would/MD/would go/VB/go like/IN/like that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 00/CD/00 /CD/) these/DT/these are/VBP/are the/DT/the 4/CD/4 children/NNS/children /:/( 3/CD/3 /,/, 8/CD/8 /,/, 18/CD/18 /,/, 25/CD/25 28/CD/28 /CD/) they/PRP/they would/MD/would have/VB/have to/TO/to become/VB/become children/NNS/children of/IN/of this/DT/this two/CD/two nodes/NNS/nodes /:/( 5/CD/5 and/CC/and 22/CD/22 /CD/) /./. so/RB/so 2/CD/2 left/VBN/left most/JJS/most go/RB/go to/TO/to this/DT/this /NN/( 5/CD/5 /CD/) and/CC/and 2/CD/2 right/NN/right most/JJS/most will/MD/will go/VB/go to/TO/to this/DT/this /NN/( 22/CD/22 /CD/) and/CC/and the/DT/the new/JJ/new root/NN/root /:/( 13/CD/13 /CD/) will/MD/will have/VB/have to/TO/to this/DT/this 2/CD/2 children/NNS/children /:/( 5/CD/5 and/CC/and 22/CD/22 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 47/CD/47 /CD/) exactly/RB/exactly the/DT/the same/JJ/same thing/NN/thing would/MD/would happen/VB/happen for/IN/for any/DT/any a-b/JJ/a-b tree/NNP/tree. i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert /,/, if/IN/if there/EX/there is/VBZ/is space/NN/space put/VBN/put it/PRP/it there/RB/there /,/, if/IN/if there/EX/there is/VBZ/is no/DT/no space/NN/space split/NN/split and/CC/and move/VB/move the/DT/the median/JJ/median up/NNP/up. the/DT/the median/JJ/median might/NN/might not/RB/not be/VB/be unique/JJ/unique like/IN/like in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree /,/, there/EX/there were/VBD/were 4/CD/4 keys/NNS/keys there/NNP/there. the/DT/the median/JJ/median could/MD/could be/VB/be the/DT/the second/JJ/second element/NN/element or/CC/or third/JJ/third element/NNP/element. we/PRP/we can/MD/can not/RB/not insert/VB/insert in/IN/in to/TO/to an/DT/an empty/NN/empty node/NNP/node. what/WP/what is/VBZ/is this/DT/this statement/NN/statement ?/./? there/EX/there would/MD/would be/VB/be no/RB/no empty/JJ/empty node/NNP/node. at/IN/at least/JJS/least a/DT/a children/NN/children /,/, at/IN/at most/JJS/most b/NN/b children/NNS/children mean/VBP/mean every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least a-1keys/NNS/a-1keys and/CC/and at/IN/at most/JJS/most b-1keys/NNP/b-1keys. so/RB/so this/DT/this is/VBZ/is the/DT/the property/NNP/property. we/PRP/we can/MD/can also/RB/also rephrase/VB/rephrase it/PRP/it in/IN/in this/DT/this way/NNP/way. every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least a-1keys/NNS/a-1keys and/CC/and at/IN/at most/JJS/most b-1keys/NNP/b-1keys. if/IN/if your/PRP$/your tree/NN/tree had/VBD/had less/JJR/less than/IN/than a-1keys/NNS/a-1keys in/IN/in it/PRP/it /,/, then/RB/then all/DT/all of/IN/of them/PRP/them would/MD/would basically/RB/basically sit/VB/sit in/IN/in the/DT/the root/NNP/root. this/DT/this property/NN/property is/VBZ/is not/RB/not true/JJ/true for/IN/for the/DT/the root/NN/root /,/, root/NN/root can/MD/can have/VB/have as/RB/as small/JJ/small as/IN/as 1/CD/1 key/JJ/key only/NNP/only. because/IN/because it/PRP/it can/MD/can have/VB/have as/RB/as small/JJ/small as/IN/as 2/CD/2 children/NNP/children. so/RB/so root/NN/root can/MD/can have/VB/have only/RB/only 1key/CD/1key. we/PRP/we are/VBP/are saying/VBG/saying every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least a/DT/a children/NN/children and/CC/and at/IN/at most/JJS/most b/NN/b children/NNS/children which/WDT/which mean/JJ/mean that/IN/that every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least a-1keys/NNS/a-1keys and/CC/and at/IN/at most/JJS/most b-1keys/NNP/b-1keys. this/DT/this property/NN/property of/IN/of at/IN/at least/JJS/least a/DT/a children/NN/children and/CC/and at/IN/at most/JJS/most b/NN/b children/NNS/children does/VBZ/does not/RB/not apply/RB/apply to/TO/to the/DT/the root/NN/root node/NNP/node. the/DT/the root/NN/root node/NN/node has/VBZ/has at/IN/at least/JJS/least 2/CD/2 and/CC/and at/IN/at most/JJS/most b/NNP/b. the/DT/the root/NN/root node/NN/node has/VBZ/has at/IN/at least/JJS/least 1key/CD/1key and/CC/and at/IN/at most/JJS/most b-1keys/NNP/b-1keys. why/WRB/why we/PRP/we said/VBD/said that/IN/that this/DT/this property/NN/property does/VBZ/does not/RB/not apply/RB/apply to/TO/to the/DT/the root/NN/root /,/, because/IN/because when/WRB/when we/PRP/we went/VBD/went in/IN/in this/DT/this manner/NN/manner and/CC/and inserted/VBD/inserted and/CC/and we/PRP/we ended/VBD/ended up/RP/up splitting/VBG/splitting the/DT/the root/NN/root node/NN/node in/IN/in to/TO/to 2/CD/2 and/CC/and we/PRP/we created/VBD/created the/DT/the new/JJ/new root/NN/root node/NN/node then/RB/then this/DT/this new/JJ/new root/NN/root has/VBZ/has only/RB/only 2/CD/2 children/NNP/children. we/PRP/we have/VBP/have to/TO/to permit/VB/permit the/DT/the root/NN/root to/TO/to have/VB/have only/RB/only 2/CD/2 children/NNP/children. this/DT/this is/VBZ/is why/WRB/why this/DT/this requirement/NN/requirement /,/, the/DT/the root/NN/root can/MD/can have/VB/have as/RB/as small/JJ/small as/IN/as 2/CD/2 children/NNP/children. if/IN/if we/PRP/we insist/VBP/insist the/DT/the root/NN/root have/VBP/have to/TO/to have/VB/have at/IN/at least/JJS/least a/DT/a children/NN/children then/RB/then we/PRP/we might/MD/might not/RB/not be/VB/be able/JJ/able to/TO/to do/VB/do this/DT/this at/IN/at all/NNP/all. we/PRP/we are/VBP/are going/VBG/going back/RB/back from/IN/from 2-3/CD/2-3 trees/NNS/trees to/TO/to a-b/NNP/a-b trees/NNP/trees. so/RB/so in/IN/in a-b/JJ/a-b trees/NNS/trees we/PRP/we said/VBD/said /,/, we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert in/IN/in a/DT/a node/NN/node if/IN/if it/PRP/it has/VBZ/has space/NN/space /,/, we/PRP/we put/VBD/put it/PRP/it there/NNP/there. how/WRB/how much/JJ/much space/NN/space does/VBZ/does an/DT/an a-b/JJ/a-b tree/NN/tree node/NN/node have/VBP/have ?/./? space/NN/space for/IN/for b-1keys/NNS/b-1keys /,/, if/IN/if it/PRP/it has/VBZ/has space/NN/space we/PRP/we will/MD/will put/VB/put it/NNP/it. if/IN/if it/PRP/it does/VBZ/does not/RB/not have/VB/have space/NN/space /,/, what/WP/what is/VBZ/is that/IN/that mean/JJ/mean ?/./? they/PRP/they were/VBD/were already/RB/already b-1keys/-NONE-/b-1keys there/EX/there and/CC/and i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert one/CD/one more/JJR/more key/JJ/key /,/, key/NNP/key. then/RB/then we/PRP/we will/MD/will split/VB/split in/IN/in to/TO/to 2/CD/2 /,/, one/CD/one of/IN/of the/DT/the keys/NNS/keys will/MD/will go/VB/go up/RP/up and/CC/and from/IN/from the/DT/the remaining/VBG/remaining b-1keys/NNS/b-1keys /,/, half/DT/half will/MD/will go/VB/go on/IN/on one/CD/one side/NN/side and/CC/and half/DT/half will/MD/will go/VB/go on/IN/on other/JJ/other side/NNP/side. that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what is/VBZ/is being/VBG/being said/VBN/said here/NNP/here. a/DT/a node/NN/node is/VBZ/is split/VBN/split when/WRB/when it/PRP/it has/VBZ/has exactly/RB/exactly b/NN/b keys/NNP/keys. why/WRB/why exactly/RB/exactly b/VBP/b ?/./? because/IN/because earlier/JJR/earlier it/PRP/it had/VBD/had b-1/-NONE-/b-1 /,/, i/PRP/i was/VBD/was trying/VBG/trying to/TO/to put/VB/put in/RP/in one/CD/one more/RBR/more there/RB/there /,/, then/RB/then it/PRP/it means/VBZ/means it/PRP/it has/VBZ/has exactly/RB/exactly b/NNP/b. one/CD/one of/IN/of these/DT/these is/VBZ/is promoted/VBN/promoted to/TO/to the/DT/the parent/NN/parent and/CC/and the/DT/the remaining/VBG/remaining are/VBP/are split/JJ/split in/IN/in to/TO/to 2/CD/2. what/WP/what is/VBZ/is the/DT/the remaining/VBG/remaining ?/./? b-1/-NONE-/b-1 /,/, the/DT/the b-1is/NNP/b-1is getting/NN/getting split/NN/split in/IN/in to/TO/to 2/CD/2. one/CD/one part/NN/part gets/NNS/gets and/CC/and the/DT/the other/JJ/other part/NN/part gets/NNS/gets /./. the/DT/the /,/, if/IN/if it/PRP/it is/VBZ/is an/DT/an integer/NN/integer then/RB/then both/DT/both of/IN/of these/DT/these are/VBP/are the/DT/the same/NNP/same. if/IN/if it/PRP/it is/VBZ/is not/RB/not an/DT/an integer/NN/integer /,/, like/IN/like in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NNP/tree. the/DT/the b/NN/b is/VBZ/is 4/CD/4 in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NNP/tree. you/PRP/you had/VBD/had which/WDT/which is/VBZ/is 1.5/CD/1.5 /,/, which/WDT/which means/VBZ/means one/CD/one side/NN/side was/VBD/was getting/VBG/getting 2/CD/2 keys/NNS/keys and/CC/and the/DT/the other/JJ/other side/NN/side was/VBD/was getting/VBG/getting 1/CD/1 key/NNP/key. thus/RB/thus 1.5/CD/1.5 rounded/VBN/rounded up/RP/up is/VBZ/is 2/CD/2 and/CC/and 1.5/CD/1.5 rounded/VBD/rounded down/IN/down is/VBZ/is 1/CD/1. one/CD/one was/VBD/was getting/VBG/getting 2/CD/2 and/CC/and the/DT/the other/JJ/other 1/CD/1. so/IN/so one/CD/one node/NN/node gets/NNS/gets this/DT/this many/JJ/many keys/NNS/keys and/CC/and the/DT/the other/JJ/other gets/NNS/gets this/DT/this many/JJ/many keys/NNP/keys. but/CC/but after/IN/after the/DT/the split/NN/split /,/, these/DT/these 2/CD/2 nodes/NNS/nodes are/VBP/are valid/JJ/valid nodes/NNS/nodes of/IN/of the/DT/the key/NNP/key. so/RB/so one/CD/one node/NN/node is/VBZ/is getting/VBG/getting so/RB/so many/JJ/many keys/NNS/keys which/WDT/which means/VBZ/means that/DT/that a-1this/NN/a-1this quantity/NN/quantity should/MD/should be/VB/be less/RBR/less then/RB/then or/CC/or equal/JJ/equal to/TO/to /./. /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 16/CD/16 /CD/) i/PRP/i have/VBP/have corrected/VBN/corrected in/IN/in the/DT/the above/NN/above slide/NN/slide which/WDT/which is/VBZ/is given/VBN/given below/-NONE-/below. a-1/-NONE-/a-1 </:/< =/:/= why/WRB/why this/DT/this is/VBZ/is coming/VBG/coming /,/, because/IN/because i/PRP/i am/VBP/am creating/VBG/creating a/DT/a node/NN/node with/IN/with keys/NNS/keys which/WDT/which means/VBZ/means i/PRP/i have/VBP/have a/DT/a requirement/NN/requirement that/WDT/that every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least a-1keys/NNS/a-1keys in/IN/in it/NNP/it. this/DT/this quantity/NN/quantity should/MD/should be/VB/be greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to a-1/NNP/a-1. otherwise/NN/otherwise if/IN/if this/DT/this was/VBD/was less/JJR/less than/IN/than a-1/-NONE-/a-1 /,/, then/RB/then there/EX/there would/MD/would be/VB/be a/DT/a problem/NN/problem because/IN/because this/DT/this node/NN/node that/IN/that i/PRP/i am/VBP/am creating/VBG/creating is/VBZ/is not/RB/not a/DT/a valid/JJ/valid node/NNP/node. let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the deletion/NNP/deletion. deletion/NN/deletion again/RB/again is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the case/NN/case of/IN/of a/DT/a 2-4tree/CD/2-4tree. the/DT/the simple/JJ/simple case/NN/case is/VBZ/is when/WRB/when i/PRP/i am/VBP/am deleting/VBG/deleting a/DT/a certain/JJ/certain node/NN/node and/CC/and there/EX/there are/VBP/are more/JJR/more than/IN/than one/CD/one node/NN/node in/IN/in that/NNP/that. for/IN/for instance/NN/instance if/IN/if i/PRP/i were/VBD/were deleting/VBG/deleting 12/CD/12 and/CC/and there/EX/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/VBN/done /,/, just/RB/just delete/JJ/delete 12/CD/12 and/CC/and still/RB/still there/RB/there is/VBZ/is one/CD/one key/JJ/key left/NNP/left. suppose/NN/suppose if/IN/if i/PRP/i was/VBD/was deleting/VBG/deleting 20/CD/20 /,/, then/RB/then the/DT/the problem/NN/problem would/MD/would be/VB/be that/IN/that when/WRB/when i/PRP/i am/VBP/am removing/VBG/removing 20/CD/20 /,/, this/DT/this node/NN/node becomes/VBZ/becomes empty/JJ/empty and/CC/and node/NN/node has/VBZ/has to/TO/to have/VB/have at/IN/at least/JJS/least 1key/CD/1key and/CC/and at/IN/at most/JJS/most 2/CD/2 keys/NNP/keys. so/RB/so it/PRP/it has/VBZ/has to/TO/to have/VB/have at/IN/at least/JJS/least one/NNP/one. if/IN/if the/DT/the node/NN/node becomes/VBZ/becomes empty/JJ/empty then/RB/then i/PRP/i first/RB/first try/JJ/try to/TO/to borrow/VB/borrow a/DT/a key/JJ/key from/IN/from its/PRP$/its sibling/NNP/sibling. the/DT/the sibling/NN/sibling of/IN/of 20/CD/20 is/VBZ/is 14/CD/14 and/CC/and 15/CD/15. i/PRP/i will/MD/will try/VB/try to/TO/to borrow/VB/borrow one/CD/one from/IN/from that/DT/that and/CC/and recall/VBP/recall the/DT/the way/NN/way we/PRP/we borrowed/VBD/borrowed was/VBD/was one/CD/one key/JJ/key went/NN/went up/IN/up and/CC/and the/DT/the other/JJ/other one/CD/one came/VBD/came down/NNP/down. that/IN/that is/VBZ/is exactly/RB/exactly 20/CD/20 disappears/NNS/disappears and/CC/and 15/CD/15 goes/NNS/goes up/IN/up and/CC/and 18/CD/18 comes/NNS/comes down/NNP/down. this/DT/this is/VBZ/is valid/VBN/valid 2-3/CD/2-3 tree/NNP/tree. what/WP/what happens/VBZ/happens if/IN/if the/DT/the sibling/NN/sibling has/VBZ/has only/RB/only one/CD/one key/JJ/key ?/./? for/IN/for instance/NN/instance if/IN/if i/PRP/i was/VBD/was trying/VBG/trying to/TO/to delete/VB/delete 23/CD/23 /,/, 23/CD/23 goes/VBZ/goes away/NNP/away. i/PRP/i try/VBP/try to/TO/to borrow/VB/borrow one/CD/one key/JJ/key from/IN/from its/PRP$/its sibling/NN/sibling /,/, 26/CD/26 is/VBZ/is the/DT/the only/JJ/only sibling/NN/sibling i/PRP/i can/MD/can borrow/VB/borrow from/NNP/from. i/PRP/i can/MD/can not/RB/not borrow/VB/borrow from/IN/from the/DT/the next/JJ/next one/CD/one and/CC/and you/PRP/you remember/VBP/remember the/DT/the reason/NN/reason for/IN/for this/NNP/this. i/PRP/i am/VBP/am trying/VBG/trying to/TO/to borrow/VB/borrow it/PRP/it from/IN/from 26/CD/26 but/CC/but this/DT/this has/VBZ/has only/RB/only 1key/CD/1key. if/IN/if i/PRP/i borrow/VBP/borrow from/IN/from 26/CD/26 /,/, this/DT/this becomes/VBZ/becomes empty/NNP/empty. in/IN/in this/DT/this case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NN/tree we/PRP/we merge/NNP/merge. first/RB/first try/JJ/try to/TO/to borrow/VB/borrow if/IN/if not/RB/not possible/JJ/possible then/RB/then merge/NNP/merge. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 33/CD/33 /CD/) we/PRP/we will/MD/will merge/VB/merge this/DT/this and/CC/and we/PRP/we will/MD/will create/VB/create a/DT/a new/JJ/new node/NNP/node. and/CC/and this/DT/this will/MD/will get/VB/get the/DT/the key/JJ/key 26/CD/26 and/CC/and one/CD/one key/JJ/key will/MD/will come/VB/come down/RB/down from/IN/from the/DT/the parent/NNP/parent. the/DT/the 24/CD/24 will/MD/will come/VB/come down/RB/down and/CC/and 26/CD/26 will/MD/will come/VB/come from/IN/from here/RB/here and/CC/and this/DT/this will/MD/will become/VB/become the/DT/the merge/NN/merge node/NNP/node. thus/RB/thus only/RB/only one/CD/one key/JJ/key left/NN/left there/EX/there /,/, so/RB/so it/PRP/it goes/VBZ/goes to/TO/to the/DT/the left/NN/left and/CC/and these/DT/these become/NN/become the/DT/the 2/CD/2 children/NNS/children of/IN/of this/DT/this node/NNP/node. we/PRP/we also/RB/also saw/VBD/saw that/IN/that this/DT/this process/NN/process could/MD/could go/VB/go up/RP/up and/CC/and up/NNP/up. because/IN/because what/WP/what we/PRP/we had/VBD/had effectively/RB/effectively done/VBN/done is/VBZ/is that/IN/that we/PRP/we have/VBP/have removed/VBN/removed one/CD/one key/JJ/key from/IN/from this/DT/this 28th/JJ/28th node/NNP/node. but/CC/but if/IN/if this/DT/this node/NN/node had/VBD/had only/RB/only one/CD/one key/JJ/key then/RB/then it/PRP/it would/MD/would have/VB/have become/VBN/become empty/NNP/empty. if/IN/if this/DT/this 28/CD/28 was/VBD/was not/RB/not there/RB/there then/RB/then this/DT/this would/MD/would have/VB/have become/VBN/become empty/NNP/empty. then/RB/then we/PRP/we would/MD/would have/VB/have tried/VBN/tried to/TO/to borrow/VB/borrow one/CD/one from/IN/from 18/CD/18 /,/, but/CC/but we/PRP/we can/MD/can not/RB/not borrow/VB/borrow because/IN/because there/EX/there is/VBZ/is only/RB/only one/CD/one key/NNP/key. this/DT/this 18/CD/18 would/MD/would have/VB/have merged/VBN/merged which/WDT/which means/VBZ/means this/DT/this 22/CD/22 would/MD/would have/VB/have come/VBN/come down/RP/down and/CC/and we/PRP/we would/MD/would have/VB/have created/VBN/created one/CD/one node/NN/node with/IN/with 18/CD/18 and/CC/and 22/CD/22. which/WDT/which means/VBZ/means i/PRP/i would/MD/would have/VB/have deleted/VBN/deleted something/NN/something from/IN/from 22/CD/22 but/CC/but if/IN/if i/PRP/i am/VBP/am deleting/VBG/deleting something/NN/something from/IN/from here/RB/here this/DT/this becomes/VBZ/becomes empty/NNP/empty. so/RB/so again/RB/again it/PRP/it will/MD/will merge/VB/merge and/CC/and in/IN/in this/DT/this manner/NN/manner eventually/RB/eventually the/DT/the root/NN/root has/VBZ/has to/TO/to be/VB/be removed/VBN/removed and/CC/and the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree reduces/NNS/reduces by/IN/by one/NNP/one. we/PRP/we have/VBP/have seen/VBN/seen this/DT/this example/NN/example from/IN/from the/DT/the case/NN/case of/IN/of the/DT/the 2-4/CD/2-4 tree/NN/tree /,/, exactly/RB/exactly the/DT/the same/JJ/same thing/NN/thing is/VBZ/is happening/NNP/happening. let/NN/let us/PRP/us continue/NNP/continue. in/IN/in an/DT/an a-b/JJ/a-b tree/NN/tree we/PRP/we will/MD/will merge/VB/merge a/DT/a node/NN/node with/IN/with its/PRP$/its sibling/NNP/sibling. now/RB/now we/PRP/we are/VBP/are coming/VBG/coming back/RB/back to/TO/to the/DT/the a-b/NN/a-b tree/NNP/tree. when/WRB/when do/VBP/do i/PRP/i merge/VB/merge a/DT/a node/NN/node with/IN/with its/PRP$/its sibling/NN/sibling ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 36/CD/36 /CD/) the/DT/the minimum/JJ/minimum number/NN/number of/IN/of keys/NNS/keys in/IN/in a/DT/a node/NN/node is/VBZ/is a-1/-NONE-/a-1 /,/, which/WDT/which means/VBZ/means it/PRP/it had/VBD/had a-2/-NONE-/a-2 keys/NNP/keys. i/PRP/i am/VBP/am trying/VBG/trying to/TO/to borrow/VB/borrow one/CD/one from/IN/from its/PRP$/its sibling/NN/sibling but/CC/but i/PRP/i am/VBP/am merging/VBG/merging with/IN/with the/DT/the sibling/VBG/sibling which/WDT/which means/NNS/means that/WDT/that even/RB/even the/DT/the sibling/NN/sibling does/VBZ/does not/RB/not have/VB/have anything/NN/anything to/TO/to lend/VB/lend me/NNP/me. which/WDT/which means/VBZ/means how/WRB/how much/JJ/much does/VBZ/does the/DT/the sibling/NN/sibling have/VBP/have ?/./? the/DT/the minimum/JJ/minimum number/NN/number a-1/NNP/a-1. if/IN/if i/PRP/i am/VBP/am merging/VBG/merging the/DT/the node/NN/node with/IN/with the/DT/the sibling/VBG/sibling then/RB/then that/IN/that means/NNS/means the/DT/the sibling/NN/sibling has/VBZ/has a-1keys/NNS/a-1keys and/CC/and the/DT/the node/NN/node itself/PRP/itself has/VBZ/has a-2keys/NNP/a-2keys. after/IN/after merging/VBG/merging the/DT/the new/JJ/new node/NN/node that/WDT/that gets/VBZ/gets created/VBN/created /,/, how/WRB/how many/JJ/many key/JJ/key will/MD/will it/PRP/it have/VB/have ?/./? the/DT/the sum/NN/sum of/IN/of these/DT/these two/CD/two /CD/( a-2/-NONE-/a-2 and/CC/and a-1/-NONE-/a-1 /:/) plus/RB/plus one/NNP/one. why/WRB/why plus/VBZ/plus one/CD/one ?/./? it/PRP/it will/MD/will have/VB/have 2a-1keys/CD/2a-1keys. now/RB/now 2/CD/2 /CD/( a/DT/a =/NN/= 1/CD/1 /CD/) better/RBR/better be/VB/be less/RBR/less than/IN/than b-1/NNP/b-1. this/DT/this is/VBZ/is the/DT/the same/JJ/same as/IN/as saying/VBG/saying that/IN/that a-1/-NONE-/a-1 is/VBZ/is better/RBR/better be/VB/be less/RBR/less than/IN/than /./. why/WRB/why have/VBP/have i/PRP/i set/VBP/set flow/JJ/flow ?/./? the/DT/the a-1has/JJ/a-1has to/TO/to be/VB/be an/DT/an integer/NNP/integer. as/IN/as and/CC/and since/IN/since a-1/-NONE-/a-1 is/VBZ/is an/DT/an integer/NN/integer it/PRP/it has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the floor/NN/floor of/IN/of /,/, floor/NN/floor means/VBZ/means rounded/VBN/rounded down/NNP/down. this/DT/this symbol/NN/symbol means/VBZ/means /,/, if/IN/if this/DT/this is/VBZ/is not/RB/not an/DT/an integer/NN/integer round/NN/round it/PRP/it down/IN/down to/TO/to the/DT/the nearest/JJS/nearest integer/NNP/integer. this/DT/this /NN/( /:/) is/VBZ/is the/DT/the property/NN/property that/IN/that your/PRP$/your a/DT/a and/CC/and b/NN/b should/MD/should satisfied/NNP/satisfied. let/VB/let us/PRP/us just/RB/just quickly/RB/quickly see/VB/see what/WP/what this/DT/this just/RB/just means/NNP/means. given/VBN/given the/DT/the particular/JJ/particular value/NN/value of/IN/of a/DT/a /,/, what/WDT/what are/VBP/are the/DT/the different/JJ/different values/NNS/values b/VBP/b can/MD/can take/VB/take ?/./? you/PRP/you just/RB/just have/VBP/have to/TO/to look/VB/look at/IN/at this/DT/this /NN/( 2/CD/2 /CD/( a-1/-NONE-/a-1 /:/) </:/< =/:/= b-1/-NONE-/b-1 /:/) again/NNP/again. so/RB/so b/VB/b can/MD/can take/VB/take a/DT/a value/NN/value 2a-1/CD/2a-1 or/CC/or more/NNP/more. the/DT/the b/NN/b should/MD/should be/VB/be greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 2a-1/CD/2a-1. when/WRB/when a/DT/a was/VBD/was 2/CD/2 /,/, what/WP/what are/VBP/are the/DT/the values/NNS/values b/VBP/b can/MD/can take/VB/take ?/./? 3/CD/3 /,/, 4/CD/4 and/CC/and so/RB/so on/NNP/on. that/IN/that is/VBZ/is the/DT/the thing/NN/thing that/WDT/that we/PRP/we need/VBP/need to/TO/to keep/VB/keep in/IN/in mind/NNP/mind. if/IN/if we/PRP/we have/VBP/have a/DT/a as/IN/as 5/CD/5 /,/, then/RB/then b/VB/b have/VBP/have to/TO/to be/VB/be at/IN/at least/JJS/least 9/CD/9. so/RB/so you/PRP/you can/MD/can not/RB/not have/VB/have a/DT/a /NN/( 5/CD/5 /,/, 7/CD/7 /:/) tree/NN/tree /,/, this/DT/this will/MD/will not/RB/not work/VB/work where/WRB/where /:/( 5/CD/5 /,/, 9/CD/9 /:/) tree/NN/tree is/VBZ/is okay/NNP/okay. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 36/CD/36 /CD/) we/PRP/we will/MD/will see/VB/see a/DT/a quick/NN/quick summary/NNP/summary. for/IN/for insertion/NN/insertion and/CC/and deletion/NN/deletion /,/, we/PRP/we saw/VBD/saw insertion/NN/insertion and/CC/and deletion/NN/deletion in/IN/in a-b/NNP/a-b trees/NNP/trees. the/DT/the height/NN/height of/IN/of an/DT/an a-b/JJ/a-b tree/NN/tree we/PRP/we saw/VBD/saw is/VBZ/is log/VBN/log n/NN/n and/CC/and so/RB/so insertion/NN/insertion and/CC/and deletion/NN/deletion both/DT/both take/NN/take order/NN/order log/NN/log n/NN/n time/NNP/time. the/DT/the reason/NN/reason for/IN/for that/DT/that is/VBZ/is the/DT/the same/JJ/same as/IN/as in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a 2-4/CD/2-4 tree/NNP/tree. the/DT/the reason/NN/reason why/WRB/why the/DT/the insertion/NN/insertion and/CC/and deletion/NN/deletion was/VBD/was taking/VBG/taking log/NN/log n/NN/n time/NN/time in/IN/in 2-4/CD/2-4 tree/NN/tree was/VBD/was the/DT/the height/NN/height was/VBD/was log/JJ/log n/NN/n and/CC/and we/PRP/we might/MD/might have/VB/have done/VBN/done some/DT/some number/NN/number of/IN/of operations/NNP/operations. but/CC/but we/PRP/we were/VBD/were doing/VBG/doing the/DT/the operation/NN/operation proportional/JJ/proportional to/TO/to the/DT/the height/NNP/height. we/PRP/we might/MD/might move/VB/move up/RP/up all/DT/all the/DT/the way/NN/way /,/, so/RB/so first/RB/first we/PRP/we move/VBP/move down/RP/down in/IN/in the/DT/the case/NN/case of/IN/of insertion/NN/insertion and/CC/and deletion/NN/deletion so/IN/so that/IN/that height/NN/height is/VBZ/is order/NN/order log/NN/log n/NNP/n. then/RB/then sometimes/RB/sometimes you/PRP/you are/VBP/are borrowing/VBG/borrowing in/IN/in the/DT/the case/NN/case of/IN/of insertion/NN/insertion /,/, sometimes/RB/sometimes splitting/VBG/splitting /,/, but/CC/but the/DT/the number/NN/number of/IN/of times/NNS/times you/PRP/you have/VBP/have to/TO/to split/VB/split is/VBZ/is at/IN/at most/JJS/most the/DT/the height/NNP/height. in/IN/in the/DT/the case/NN/case of/IN/of deletion/NN/deletion we/PRP/we would/MD/would either/VB/either borrow/NN/borrow the/DT/the key/JJ/key or/CC/or we/PRP/we would/MD/would merge/VB/merge or/CC/or again/RB/again the/DT/the number/NN/number of/IN/of times/NNS/times we/PRP/we would/MD/would have/VB/have to/TO/to do/VB/do this/DT/this is/VBZ/is proportional/JJ/proportional to/TO/to the/DT/the height/NN/height because/IN/because every/DT/every time/NN/time we/PRP/we did/VBD/did one/CD/one of/IN/of these/DT/these operation/NN/operation /,/, we/PRP/we moved/VBD/moved one/CD/one level/NN/level up/IN/up or/CC/or we/PRP/we just/RB/just stop/VBP/stop the/DT/the entire/JJ/entire process/NNP/process. so/RB/so both/DT/both of/IN/of these/DT/these operation/NN/operation take/NN/take order/NN/order log/NN/log n/NN/n time/NNP/time. the/DT/the other/JJ/other thing/NN/thing we/PRP/we saw/VBD/saw was/VBD/was /,/, what/WP/what should/MD/should be/VB/be the/DT/the relation/NN/relation between/IN/between a/DT/a and/CC/and b/NN/b for/IN/for this/DT/this to/TO/to work/NNP/work. that/IN/that is/VBZ/is as/IN/as far/RB/far as/IN/as this/DT/this a-b/NN/a-b tree/NN/tree was/VBD/was concern/NNP/concern. the/DT/the other/JJ/other thing/NN/thing we/PRP/we did/VBD/did today/NN/today was/VBD/was red/VBN/red black/JJ/black tree/NN/tree and/CC/and for/IN/for that/DT/that we/PRP/we saw/VBD/saw the/DT/the process/NN/process of/IN/of insertion/NNP/insertion. we/PRP/we saw/VBD/saw that/IN/that it/PRP/it takes/VBZ/takes only/RB/only some/DT/some number/NN/number of/IN/of re/NN/re coloring/VBG/coloring and/CC/and one/CD/one rotation/NN/rotation to/TO/to complete/VB/complete an/DT/an insertion/NNP/insertion. that/IN/that is/VBZ/is the/DT/the key/JJ/key thing/NN/thing about/IN/about the/DT/the red/NN/red black/NN/black tree/NN/tree /,/, they/PRP/they only/RB/only require/VBP/require one/CD/one rotation/NNP/rotation. some/DT/some number/NN/number of/IN/of re/NN/re coloring/VBG/coloring or/CC/or might/MD/might have/VB/have to/TO/to re/VB/re color/NN/color many/JJ/many nodes/NNS/nodes but/CC/but only/RB/only one/CD/one rotation/NN/rotation is/VBZ/is required/VBN/required and/CC/and this/DT/this is/VBZ/is what/WP/what gives/VBZ/gives the/DT/the power/NNP/power. this/DT/this is/VBZ/is what/WP/what makes/VBZ/makes them/PRP/them very/RB/very fast/RB/fast in/IN/in practice/NN/practice and/CC/and they/PRP/they are/VBP/are faster/RBR/faster then/RB/then avl/VB/avl trees/NNS/trees for/IN/for this/DT/this reason/NNP/reason. so/RB/so the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see the/DT/the particular/JJ/particular kind/NN/kind of/IN/of the/DT/the a-b/JJ/a-b tree/NN/tree which/WDT/which is/VBZ/is called/VBN/called b-tree/JJ/b-tree and/CC/and what/WP/what role/NN/role does/VBZ/does it/PRP/it plays/VBZ/plays specially/RB/specially in/IN/in searching/NN/searching very/RB/very large/JJ/large databases/NNP/databases. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do in/IN/in the/DT/the next/JJ/next class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 16/CD/16 disk/NN/disk based/VBN/based data/NNS/data structures/NNS/structures so/RB/so today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about disk/NN/disk based/VBN/based data/NNS/data structures/NNP/structures. in/IN/in last/JJ/last class/NN/class we/PRP/we looked/VBD/looked at/IN/at ab/NN/ab trees/NNP/trees. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 17/CD/17 /CD/) so/RB/so these/DT/these were/VBD/were the/DT/the extension/NN/extension of/IN/of the/DT/the 2-4/CD/2-4 trees/NNS/trees that/WDT/that we/PRP/we had/VBD/had seen/NNP/seen. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at disk/NN/disk based/VBN/based data/NNS/data structure/NN/structure and/CC/and in/IN/in particular/JJ/particular we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at b/NN/b trees/NNS/trees and/CC/and we/PRP/we will/MD/will see/VB/see that/IN/that they/PRP/they are/VBP/are very/RB/very similar/JJ/similar /,/, they/PRP/they are/VBP/are in/IN/in fact/NN/fact ab/NN/ab trees/NNS/trees for/IN/for specific/JJ/specific value/NN/value of/IN/of b/NNP/b. so/RB/so now/RB/now we/PRP/we are/VBP/are looking/VBG/looking at/IN/at is/VBZ/is when/WRB/when we/PRP/we have/VBP/have a/DT/a large/JJ/large amount/NN/amount of/IN/of data/NNS/data over/IN/over which/WDT/which to/TO/to search/NNP/search. till/NN/till now/RB/now all/DT/all our/PRP$/our search/NN/search trees/NNS/trees were/VBD/were limited/VBN/limited to/TO/to main/VB/main memory/NN/memory /,/, in/IN/in the/DT/the sense/NN/sense you/PRP/you build/VBP/build a/DT/a binary/JJ/binary search/NN/search tree/NN/tree or/CC/or build/VB/build a/DT/a 2-4/CD/2-4 tree/NN/tree or/CC/or a/DT/a red/JJ/red black/NN/black tree/NN/tree so/RB/so we/PRP/we had/VBD/had this/DT/this nodes/NNS/nodes which/WDT/which where/WRB/where objects/VBZ/objects in/IN/in memory/NN/memory and/CC/and you/PRP/you know/VBP/know the/DT/the references/NNS/references corresponds/VBZ/corresponds to/TO/to pointer/JJR/pointer addresses/NNS/addresses or/CC/or memory/NN/memory addresses/NNP/addresses. now/RB/now we/PRP/we are/VBP/are looking/VBG/looking at/IN/at the/DT/the setting/NN/setting where/WRB/where we/PRP/we have/VBP/have the/DT/the huge/JJ/huge amount/NN/amount data/NNP/data. let/NN/let ?/./? s/NNS/s say/VBP/say some/DT/some kind/NN/kind of/IN/of transaction/NN/transaction data/NNS/data which/WDT/which could/MD/could be/VB/be bank/NN/bank share/NN/share markets/NNS/markets /,/, you/PRP/you know/VBP/know setting/VBG/setting we/PRP/we are/VBP/are large/JJ/large amount/NN/amount of/IN/of data/NNS/data get/VBP/get generate/JJ/generate and/CC/and such/JJ/such huge/JJ/huge amount/NN/amount of/IN/of data/NNS/data is/VBZ/is not/RB/not stored/VBN/stored in/IN/in the/DT/the main/JJ/main memory/NN/memory of/IN/of computer/NNP/computer. this/DT/this is/VBZ/is typically/RB/typically stored/VBN/stored on/IN/on disk/NN/disk and/CC/and now/RB/now you/PRP/you want/VBP/want to/TO/to be/VB/be able/JJ/able to/TO/to search/NN/search through/IN/through this/DT/this data/NN/data or/CC/or insert/NN/insert something/NN/something in/IN/in to/TO/to this/DT/this data/NN/data or/CC/or modify/VB/modify this/DT/this data/NNP/data. how/WRB/how do/VBP/do you/PRP/you do/VB/do that/DT/that ?/./? so/RB/so you/PRP/you just/RB/just imagine/VBP/imagine the/DT/the setting/VBG/setting where/WRB/where you/PRP/you have/VBP/have let/VBN/let ?/./? s/NNS/s say/VBP/say particular/JJ/particular bank/NN/bank which/WDT/which has/VBZ/has records/NNS/records of/IN/of each/DT/each of/IN/of its/PRP$/its customers/NNP/customers. so/RB/so they/PRP/they could/MD/could be/VB/be a/DT/a million/NN/million customers/NNS/customers each/DT/each of/IN/of those/DT/those records/NNS/records would/MD/would be/VB/be huge/NNP/huge. the/DT/the data/NNS/data should/MD/should set/VB/set in/IN/in the/DT/the each/DT/each account/NN/account should/MD/should be/VB/be huge/JJ/huge because/IN/because it/PRP/it would/MD/would have/VB/have all/PDT/all the/DT/the transaction/NN/transaction data/NNS/data associated/VBN/associated with/IN/with what/WP/what has/VBZ/has been/VBN/been history/NN/history of/IN/of transaction/NN/transaction and/CC/and so/RB/so on/NNP/on. you/PRP/you can/MD/can ?/./? t/VB/t expect/NN/expect all/DT/all of/IN/of that/DT/that data/NN/data to/TO/to decide/VB/decide in/IN/in the/DT/the main/JJ/main memory/NN/memory of/IN/of the/DT/the computer/NN/computer so/RB/so it/PRP/it would/MD/would be/VB/be kept/VBN/kept on/IN/on disk/NN/disk and/CC/and now/RB/now suppose/VBP/suppose type/NN/type in/IN/in particular/JJ/particular account/NN/account number/NN/number you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to retrieve/VB/retrieve that/IN/that particular/JJ/particular account/NN/account and/CC/and the/DT/the data/NNS/data associated/VBN/associated with/IN/with that/DT/that account/NNP/account. so/RB/so question/NN/question is/VBZ/is how/WRB/how are/VBP/are going/VBG/going to/TO/to do/VB/do this/DT/this ?/./? so/RB/so we/PRP/we want/VBP/want to/TO/to make/VB/make a/DT/a search/NN/search tree/NN/tree which/WDT/which is/VBZ/is some/DT/some sense/NN/sense secondary/NN/secondary storage/NN/storage in/IN/in avl/NN/avl tree/NN/tree which/WDT/which will/MD/will help/VB/help you/PRP/you even/RB/even when/WRB/when the/DT/the data/NNS/data most/JJS/most of/IN/of the/DT/the data/NNS/data is/VBZ/is stored/VBN/stored on/IN/on disk/NN/disk will/MD/will still/RB/still be/VB/be able/JJ/able to/TO/to search/NN/search through/IN/through it/NNP/it. now/RB/now the/DT/the problem/NN/problem here/RB/here is/VBZ/is that/IN/that the/DT/the data/NNS/data is/VBZ/is stored/VBN/stored on/IN/on disk/NN/disk that/IN/that ?/./? s/NNS/s fine/NN/fine but/CC/but even/RB/even the/DT/the index/NN/index that/WDT/that we/PRP/we are/VBP/are building/NNP/building. so/RB/so what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by index/NN/index ?/./? the/DT/the search/NN/search tree/NN/tree /,/, search/NN/search that/IN/that we/PRP/we have/VBP/have so/RB/so huge/JJ/huge that/IN/that we/PRP/we can/MD/can not/RB/not expect/VB/expect the/DT/the entire/JJ/entire search/NN/search tree/NN/tree to/TO/to fit/VB/fit in/IN/in to/TO/to the/DT/the main/JJ/main memory/NNP/memory. we/PRP/we will/MD/will come/VB/come to/TO/to this/DT/this in/IN/in to/TO/to the/DT/the short/JJ/short while/NNP/while. so/RB/so what/WP/what ?/./? s/NNS/s the/DT/the problem/NN/problem in/IN/in you/PRP/you have/VBP/have think/VBP/think on/IN/on the/DT/the disk/NN/disk verses/NNS/verses when/WRB/when thinks/NNS/thinks are/VBP/are the/DT/the main/JJ/main memory/NN/memory of/IN/of the/DT/the computer/NNP/computer. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 04/CD/04 /:/: 01/CD/01 /CD/) one/CD/one big/JJ/big problem/NN/problem is/VBZ/is that/IN/that disk/NN/disk access/NN/access is/VBZ/is very/RB/very slow/NNP/slow. how/WRB/how is/VBZ/is disk/JJ/disk accessed/VBN/accessed ?/./? you/PRP/you have/VBP/have let/VBN/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is the/DT/the disk/NN/disk /,/, so/RB/so you/PRP/you typically/RB/typically have/VBP/have bunch/NN/bunch of/IN/of disk/NN/disk in/IN/in stack/NN/stack one/CD/one and/CC/and top/JJ/top of/IN/of each/DT/each other/NNP/other. each/DT/each one/CD/one of/IN/of them/PRP/them has/VBZ/has its/PRP$/its own/JJ/own read/NN/read write/NN/write head/NN/head /,/, head/NN/head which/WDT/which will/MD/will traverse/VB/traverse which/WDT/which can/MD/can move/VB/move along/IN/along this/DT/this disk/NN/disk and/CC/and get/VB/get to/TO/to a/DT/a particular/JJ/particular track/NNP/track. so/RB/so these/DT/these are/VBP/are the/DT/the track/NN/track on/IN/on the/DT/the disk/NN/disk the/DT/the disk/NN/disk rotates/VBZ/rotates in/IN/in one/CD/one particular/JJ/particular direction/NN/direction and/CC/and these/DT/these read/NN/read write/NN/write head/NN/head can/MD/can decide/VB/decide that/IN/that it/PRP/it wants/VBZ/wants to/TO/to go/VB/go on/IN/on this/DT/this track/NN/track or/CC/or this/DT/this track/NN/track or/CC/or this/DT/this track/NN/track and/CC/and so/RB/so on/NNP/on. when/WRB/when you/PRP/you have/VBP/have to/TO/to read/VB/read a/DT/a particular/JJ/particular location/NN/location so/IN/so a/DT/a track/NN/track is/VBZ/is further/RBR/further divided/VBN/divided in/IN/in to/TO/to sectors/NNP/sectors. so/RB/so when/WRB/when you/PRP/you have/VBP/have to/TO/to read/VB/read a/DT/a particular/JJ/particular sector/NN/sector /,/, the/DT/the disk/NN/disk rotates/VBZ/rotates and/CC/and this/DT/this read/NN/read write/NN/write head/NN/head gets/VBZ/gets to/TO/to the/DT/the appropriate/NN/appropriate tag/NN/tag and/CC/and then/RB/then starts/VBZ/starts reading/NN/reading the/DT/the data/NNS/data from/IN/from there/NNP/there. so/RB/so significant/JJ/significant fraction/NN/fraction of/IN/of the/DT/the time/NN/time is/VBZ/is spent/VBN/spent in/IN/in this/DT/this read/NN/read write/NN/write head/NN/head moving/VBG/moving determining/NN/determining which/WDT/which track/NN/track it/PRP/it has/VBZ/has go/RB/go to/TO/to and/CC/and moving/VBG/moving and/CC/and the/DT/the rotation/NNP/rotation. so/RB/so one/CD/one of/IN/of this/DT/this is/VBZ/is called/VBN/called seek/NN/seek latency/NN/latency /,/, so/RB/so this/DT/this that/IN/that time/NN/time that/WDT/that is/VBZ/is required/VBN/required for/IN/for the/DT/the head/NN/head to/TO/to get/VB/get to/TO/to the/DT/the appropriate/NN/appropriate tag/NN/tag its/PRP$/its called/VBN/called seek/NN/seek latency/NN/latency and/CC/and the/DT/the other/JJ/other one/CD/one is/VBZ/is called/VBN/called rotation/NN/rotation latency/NNP/latency. the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the disk/NN/disk to/TO/to rotate/VB/rotate so/RB/so that/IN/that the/DT/the head/NN/head is/VBZ/is positioned/VBN/positioned at/IN/at the/DT/the right/NN/right place/NN/place /,/, the/DT/the right/NN/right sector/NN/sector and/CC/and once/RB/once you/PRP/you have/VB/have write/JJ/write at/IN/at the/DT/the right/NN/right place/NN/place then/RB/then the/DT/the entire/JJ/entire sector/NN/sector is/VBZ/is typically/RB/typically read/NNP/read. so/RB/so one/CD/one sector/NN/sector or/CC/or let/VB/let ?/./? s/NNS/s say/VBP/say one/CD/one let/NN/let ?/./? s/NNS/s call/VBP/call it/PRP/it as/IN/as page/NN/page so/IN/so the/DT/the data/NNS/data then/RB/then is/VBZ/is read/VBN/read in/IN/in units/NNS/units in/IN/in larger/JJR/larger units/NNP/units. you/PRP/you don/VBP/don ?/./? t/NN/t read/NN/read one/CD/one byte/NN/byte of/IN/of data/NNS/data from/IN/from the/DT/the disk/NNP/disk. why/WRB/why don/NN/don ?/./? t/NN/t you/PRP/you read/VBP/read one/CD/one byte/NN/byte of/IN/of data/NNS/data from/IN/from the/DT/the disk/NN/disk ?/./? because/IN/because you/PRP/you already/RB/already spend/VBP/spend so/RB/so much/RB/much in/IN/in getting/VBG/getting to/TO/to that/DT/that one/CD/one byte/NN/byte then/RB/then might/MD/might it/PRP/it is/VBZ/is well/RB/well read/RB/read whole/JJ/whole lot/NN/lot of/IN/of bytes/NNP/bytes. so/RB/so you/PRP/you typically/RB/typically read/VB/read or/CC/or write/VB/write in/IN/in units/NNS/units called/VBN/called pages/NNS/pages which/WDT/which are/VBP/are you/PRP/you know/VBP/know it/PRP/it could/MD/could depend/VB/depend upon/IN/upon the/DT/the particular/JJ/particular computer/NN/computer system/NN/system but/CC/but it/PRP/it could/MD/could be/VB/be in/IN/in this/DT/this range/NN/range 2/CD/2 to/TO/to 16/CD/16 kilo/NN/kilo bytes/NNP/bytes. so/RB/so you/PRP/you read/VBP/read this/DT/this much/JJ/much amount/NN/amount so/IN/so this/DT/this could/MD/could be/VB/be one/CD/one page/NN/page setting/NN/setting here/RB/here and/CC/and you/PRP/you read/VB/read this/DT/this much/JJ/much amount/NN/amount of/IN/of data/NNS/data and/CC/and it/PRP/it will/MD/will be/VB/be moved/VBN/moved in/IN/in to/TO/to the/DT/the main/JJ/main memory/NNP/memory. this/DT/this is/VBZ/is reading/VBG/reading /,/, when/WRB/when you/PRP/you writing/VBG/writing similarly/RB/similarly you/PRP/you would/MD/would write/VB/write back/RB/back and/CC/and entire/JJ/entire page/NNP/page. what/WP/what are/VBP/are the/DT/the problems/NNS/problems associated/VBN/associated with/IN/with this/DT/this ?/./? we/PRP/we have/VBP/have to/TO/to organize/VB/organize our/PRP$/our search/NN/search tree/NN/tree in/IN/in such/JJ/such a/DT/a manner/NN/manner that/WDT/that first/JJ/first it/PRP/it can/MD/can sit/VB/sit suitably/RB/suitably on/IN/on this/DT/this disk/NN/disk as/IN/as i/PRP/i said/VBD/said or/CC/or search/NN/search structure/NN/structure itself/PRP/itself is/VBZ/is going/VBG/going to/TO/to be/VB/be so/RB/so large/JJ/large that/IN/that it/PRP/it can/MD/can not/RB/not fit/VB/fit in/IN/in to/TO/to the/DT/the main/JJ/main memory/NN/memory and/CC/and that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do in/IN/in next/JJ/next slides/NNP/slides. so/RB/so when/WRB/when you/PRP/you have/VBP/have the/DT/the disk/NN/disk based/VBN/based algorithm/NN/algorithm like/IN/like this/DT/this /,/, the/DT/the running/NN/running time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be measured/VBN/measured in/IN/in terms/NNS/terms of/IN/of the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the cpu/NN/cpu and/CC/and the/DT/the number/NN/number of/IN/of disk/NN/disk access/NNP/access. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 07/CD/07 /:/: 11/CD/11 /CD/) now/RB/now this/DT/this time/NN/time /,/, the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the cpu/NN/cpu is/VBZ/is insignificant/JJ/insignificant compared/VBN/compared to/TO/to the/DT/the number/NN/number of/IN/of disk/NN/disk access/NN/access in/IN/in the/DT/the time/NN/time spend/NN/spend in/IN/in each/DT/each disk/NN/disk access/NNP/access. so/RB/so what/WP/what you/PRP/you would/MD/would do/VB/do in/IN/in most/JJS/most of/IN/of these/DT/these algorithm/NN/algorithm is/VBZ/is to/TO/to organize/VB/organize the/DT/the data/NNS/data in/IN/in such/JJ/such a/DT/a manner/NN/manner that/WDT/that there/EX/there is/VBZ/is a/DT/a number/NN/number of/IN/of times/NNS/times you/PRP/you have/VBP/have to/TO/to access/NN/access the/DT/the disk/NN/disk is/VBZ/is very/RB/very small/JJ/small and/CC/and what/WP/what i/PRP/i have/VBP/have said/VBN/said is/VBZ/is you/PRP/you know/VBP/know till/RB/till now/RB/now we/PRP/we had/VBD/had seen/VBN/seen the/DT/the algorithm/NN/algorithm which/WDT/which are/VBP/are called/VBN/called main/JJ/main memory/NN/memory algorithm/NN/algorithm where/WRB/where the/DT/the entire/JJ/entire data/NNS/data sets/NNS/sets in/IN/in the/DT/the main/JJ/main memory/NNP/memory. so/RB/so they/PRP/they can/MD/can not/RB/not be/VB/be easily/RB/easily ported/VBN/ported to/TO/to this/DT/this module/NN/module when/WRB/when part/NN/part of/IN/of the/DT/the data/NNS/data sit/NN/sit on/IN/on the/DT/the disk/NN/disk /,/, it/PRP/it can/MD/can not/RB/not be/VB/be ported/VBN/ported in/IN/in the/DT/the straight/JJ/straight forward/NN/forward way/NNP/way. what/WP/what are/VBP/are the/DT/the problems/NNS/problems that/WDT/that are/VBP/are going/VBG/going to/TO/to happen/VB/happen now/RB/now that/IN/that we/PRP/we have/VBP/have data/NNS/data setting/VBG/setting on/IN/on the/DT/the disk/NN/disk ?/./? so/RB/so one/CD/one is/VBZ/is as/RB/as for/IN/for as/IN/as this/DT/this pointer/NN/pointer business/NN/business is/VBZ/is concern/NNP/concern. pointer/NN/pointer is/VBZ/is to/TO/to same/JJ/same as/IN/as references/NNS/references to/TO/to objects/NNP/objects. so/RB/so till/IN/till now/RB/now we/PRP/we had/VBD/had reference/NN/reference to/TO/to an/DT/an object/NN/object /,/, we/PRP/we knew/VBD/knew that/IN/that correspondence/NN/correspondence to/TO/to the/DT/the address/NN/address in/IN/in the/DT/the main/JJ/main memory/NNP/memory. so/RB/so you/PRP/you would/MD/would go/VB/go and/CC/and access/NN/access that/IN/that location/NN/location in/IN/in the/DT/the main/JJ/main memory/NNP/memory. now/RB/now if/IN/if part/NN/part of/IN/of your/PRP$/your data/NNS/data structure/NN/structure is/VBZ/is sitting/VBG/sitting on/IN/on the/DT/the disk/NN/disk /,/, so/RB/so just/RB/just imagine/JJ/imagine that/IN/that your/PRP$/your red/VBN/red black/NN/black tree/NN/tree or/CC/or whatever/RB/whatever it/PRP/it was/VBD/was /,/, part/NN/part of/IN/of it/PRP/it was/VBD/was in/IN/in the/DT/the main/JJ/main memory/NN/memory and/CC/and part/NN/part it/PRP/it was/VBD/was sitting/VBG/sitting on/IN/on the/DT/the disk/NNP/disk. one/CD/one of/IN/of those/DT/those pointer/NN/pointer /,/, one/CD/one of/IN/of those/DT/those references/NNS/references is/VBZ/is referring/VBG/referring to/TO/to a/DT/a location/NN/location on/IN/on the/DT/the disk/NN/disk now/NNP/now. so/RB/so if/IN/if it/PRP/it is/VBZ/is referring/VBG/referring to/TO/to something/NN/something in/IN/in the/DT/the main/JJ/main memory/NN/memory then/RB/then you/PRP/you can/MD/can go/VB/go and/CC/and get/VB/get it/PRP/it at/IN/at that/IN/that particular/JJ/particular memory/NN/memory location/NN/location but/CC/but if/IN/if it/PRP/it is/VBZ/is referring/VBG/referring to/TO/to something/NN/something on/IN/on the/DT/the disk/NN/disk then/RB/then you/PRP/you will/MD/will have/VB/have to/TO/to do/VB/do something/NN/something lets/NNS/lets use/VBP/use the/DT/the operation/NN/operation disk/NN/disk read/NN/read to/TO/to read/VB/read the/DT/the particular/JJ/particular data/NNS/data from/IN/from the/DT/the disk/NN/disk and/CC/and disk/NN/disk write/NN/write to/TO/to write/VB/write bind/JJ/bind of/IN/of the/DT/the disk/NNP/disk. we/PRP/we have/VBP/have to/TO/to use/VB/use such/JJ/such kind/NN/kind of/IN/of operation/NN/operation to/TO/to be/VB/be able/JJ/able to/TO/to access/NN/access the/DT/the data/NNS/data /,/, i/PRP/i will/MD/will come/VB/come to/TO/to what/WP/what key/JJ/key means/NNS/means in/IN/in a/DT/a short/JJ/short while/NNP/while. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 09/CD/09 /:/: 15/CD/15 /CD/) so/IN/so one/CD/one big/JJ/big problem/NN/problem is/VBZ/is that/IN/that you/PRP/you know/VBP/know the/DT/the pointer/NN/pointer now/RB/now have/VBP/have to/TO/to be/VB/be translated/VBN/translated suitably/-NONE-/suitably. if/IN/if the/DT/the pointer/NN/pointer is/VBZ/is just/RB/just pointing/VBG/pointing to/TO/to a/DT/a memory/NN/memory location/NN/location then/RB/then it/PRP/it is/VBZ/is easy/JJ/easy /,/, you/PRP/you just/RB/just get/VB/get to/TO/to the/DT/the memory/NN/memory location/NN/location and/CC/and do/VBP/do your/PRP$/your job/NN/job but/CC/but if/IN/if its/PRP$/its not/RB/not pointing/VBG/pointing to/TO/to a/DT/a memory/NN/memory location/NN/location /,/, if/IN/if it/PRP/it is/VBZ/is referring/VBG/referring to/TO/to something/NN/something that/IN/that sits/NNS/sits in/IN/in to/TO/to the/DT/the disk/NN/disk then/RB/then we/PRP/we have/VBP/have to/TO/to first/JJ/first fetch/NN/fetch that/WDT/that block/NN/block of/IN/of data/NNS/data /,/, that/IN/that page/NN/page of/IN/of data/NNS/data from/IN/from the/DT/the disk/NN/disk in/IN/in to/TO/to the/DT/the main/JJ/main memory/NN/memory and/CC/and then/RB/then you/PRP/you can/MD/can access/VB/access that/IN/that particular/JJ/particular object/NNP/object. so/RB/so typical/JJ/typical pattern/NN/pattern would/MD/would look/VB/look like/IN/like something/NNP/something. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 10/CD/10 /:/: 01/CD/01 /CD/) so/RB/so x/JJ/x is/VBZ/is the/DT/the pointer/NN/pointer to/TO/to some/DT/some object/NN/object so/RB/so you/PRP/you would/MD/would read/VB/read this/DT/this object/NN/object from/IN/from the/DT/the disk/NN/disk you/PRP/you will/MD/will do/VB/do some/DT/some operation/NN/operation on/IN/on this/DT/this object/NN/object and/CC/and then/RB/then you/PRP/you will/MD/will eventually/RB/eventually write/VB/write it/PRP/it back/RB/back and/CC/and you/PRP/you might/MD/might omit/VB/omit this/DT/this step/NN/step if/IN/if you/PRP/you did/VBD/did not/RB/not modify/VB/modify the/DT/the object/NN/object at/IN/at all/NNP/all. so/RB/so we/PRP/we are/VBP/are going/VBG/going work/NN/work with/IN/with two/CD/two operation/NN/operation today/NN/today /,/, disk/NN/disk read/NN/read and/CC/and disk/NN/disk write/NN/write /,/, reading/NN/reading a/DT/a block/NN/block from/IN/from disk/NN/disk and/CC/and writing/VBG/writing block/NN/block back/RB/back to/TO/to disk/NNP/disk. so/RB/so now/RB/now let/VB/let ?/./? s/NNS/s come/VBP/come to/TO/to what/WP/what a/DT/a /,/, b/NN/b tree/NN/tree is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 10/CD/10 /:/: 32/CD/32 /CD/) b/NN/b tree/NN/tree is/VBZ/is a/DT/a same/JJ/same as/IN/as your/PRP$/your ab/NN/ab tree/NNP/tree. here/RB/here i/PRP/i have/VBP/have drawn/VBN/drawn an/DT/an example/NN/example where/WRB/where in/IN/in this/DT/this ab/NN/ab tree/NN/tree each/DT/each node/NN/node has/VBZ/has 1000/CD/1000 keys/NNS/keys so/IN/so you/PRP/you value/VBP/value of/IN/of a/DT/a here/RB/here is/VBZ/is at/IN/at least/JJS/least thousand/NN/thousand lets/NNS/lets say/VBP/say is/VBZ/is a/DT/a 1000/CD/1000. so/RB/so recall/JJ/recall in/IN/in an/DT/an ab/NN/ab tree/NN/tree /,/, each/DT/each node/NN/node has/VBZ/has at/IN/at least/JJS/least a/DT/a children/NN/children and/CC/and at/IN/at most/JJS/most b/NN/b children/NNP/children. so/RB/so here/RB/here i/PRP/i have/VBP/have taken/VBN/taken my/PRP$/my value/NN/value of/IN/of a/DT/a as/IN/as 1001/CD/1001 so/RB/so each/DT/each node/NN/node has/VBZ/has at/IN/at least/JJS/least 1001/CD/1001 children/NNP/children. so/RB/so here/RB/here i/PRP/i have/VBP/have just/RB/just tried/VBN/tried to/TO/to illustrate/VB/illustrate why/WRB/why is/VBZ/is this/DT/this data/NN/data structure/NN/structure now/RB/now useful/JJ/useful for/IN/for disk/NN/disk based/VBN/based access/NNP/access. so/RB/so you/PRP/you have/VB/have this/DT/this first/JJ/first node/NN/node which/WDT/which has/VBZ/has 1001/CD/1001 children/NNS/children right/RB/right and/CC/and since/IN/since it/PRP/it has/VBZ/has 1001/CD/1001 children/NNS/children how/WRB/how many/JJ/many keys/NNS/keys would/MD/would it/PRP/it have/VB/have inside/JJ/inside it/PRP/it ?/./? 1000/CD/1000 keys/NNS/keys and/CC/and just/RB/just i/PRP/i have/VBP/have organize/VBP/organize it/PRP/it very/RB/very uniformly/RB/uniformly so/RB/so that/IN/that then/RB/then this/DT/this each/NN/each of/IN/of this/DT/this each/DT/each node/NN/node has/VBZ/has also/RB/also 1000/CD/1000 children/NNS/children and/CC/and then/RB/then further/RB/further more/RBR/more these/DT/these leaves/NNS/leaves so/RB/so its/PRP$/its just/RB/just two/CD/two level/NN/level trees/NNS/trees these/DT/these leaves/NNS/leaves also/RB/also have/VBP/have 1000/CD/1000 keys/NNS/keys in/IN/in them/NNP/them. so/RB/so how/WRB/how many/JJ/many keys/NNS/keys are/VBP/are there/RB/there in/IN/in all/DT/all in/IN/in this/DT/this ?/./? so/RB/so that/IN/that ?/./? s/NNS/s a/DT/a 1000/CD/1000 plus/CC/plus million/CD/million plus/NNS/plus a/DT/a billion/NNP/billion. so/RB/so there/RB/there will/MD/will be/VB/be so/RB/so many/JJ/many keys/NNS/keys in/IN/in this/DT/this entire/JJ/entire two/CD/two levels/NNS/levels structure/NNP/structure. so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say i/PRP/i had/VBD/had a/DT/a data/NN/data base/NN/base with/IN/with so/RB/so many/JJ/many records/NNS/records /,/, so/RB/so many/JJ/many different/JJ/different accounts/NNS/accounts so/IN/so i/PRP/i could/MD/could put/VB/put those/DT/those of/IN/of this/DT/this each/DT/each of/IN/of this/DT/this accounts/NNS/accounts /,/, records/NNS/records you/PRP/you know/VBP/know lets/NNS/lets say/VBP/say the/DT/the key/JJ/key just/RB/just the/DT/the account/NN/account number/NN/number so/RB/so i/PRP/i could/MD/could put/VB/put all/DT/all of/IN/of those/DT/those keys/NNS/keys in/IN/in to/TO/to this/DT/this kind/NN/kind of/IN/of a/DT/a structure/NNP/structure. now/RB/now each/DT/each node/NN/node had/VBD/had contain/VBN/contain 1000/CD/1000 keys/NNP/keys. now/RB/now this/DT/this entire/JJ/entire structure/NN/structure can/MD/can not/RB/not fit/VB/fit in/IN/in to/TO/to main/VB/main memory/NN/memory /,/, you/PRP/you can/MD/can see/VB/see this/DT/this is/VBZ/is already/RB/already 10/CD/10 to/TO/to the/DT/the 9/CD/9 keys/NNS/keys write/IN/write which/WDT/which each/DT/each of/IN/of this/DT/this keys/NNS/keys there/RB/there is/VBZ/is associated/VBN/associated with/IN/with the/DT/the pointer/NNP/pointer. each/DT/each of/IN/of the/DT/the key/JJ/key itself/PRP/itself could/MD/could be/VB/be let/VBN/let ?/./? s/NNS/s say/VBP/say 4/CD/4 bytes/NNS/bytes of/IN/of memory/NN/memory /,/, so/RB/so 4/CD/4 bytes/NNS/bytes of/IN/of memory/NN/memory let/NN/let ?/./? s/NNS/s say/VBP/say 4/CD/4 bytes/NNS/bytes of/IN/of pointers/NNS/pointers is/VBZ/is about/IN/about 8/CD/8 bytes/NNS/bytes per/IN/per key/JJ/key so/RB/so that/IN/that ?/./? s/NNS/s 8/CD/8 bytes/NNS/bytes times/NNS/times a/DT/a billion/NN/billion that/WDT/that ?/./? s/VBZ/s 8/CD/8 giga/NN/giga bytes/NNP/bytes. so/RB/so you/PRP/you need/VBP/need that/IN/that kind/NN/kind of/IN/of space/NN/space just/RB/just to/TO/to keep/VB/keep this/DT/this data/NN/data structure/NN/structure in/IN/in to/TO/to a/DT/a main/JJ/main memory/NN/memory and/CC/and here/RB/here we/PRP/we have/VBP/have not/RB/not said/VBN/said anything/NN/anything about/IN/about the/DT/the data/NNS/data associated/VBN/associated with/IN/with this/DT/this records/NNP/records. each/DT/each of/IN/of those/DT/those data/NNS/data themselves/PRP/themselves could/MD/could be/VB/be 100/CD/100 mega/NN/mega bytes/NNS/bytes because/IN/because my/PRP$/my account/NN/account has/VBZ/has listed/VBN/listed with/IN/with all/DT/all transaction/NN/transaction that/WDT/that have/VBP/have been/VBN/been done/VBN/done on/IN/on the/DT/the that/WDT/that account/NN/account lets/NNS/lets say/VBP/say the/DT/the last/JJ/last three/CD/three years/NNS/years or/CC/or four/CD/four years/NNS/years or/CC/or some/DT/some such/JJ/such thing/NN/thing that/WDT/that ?/./? s/VBZ/s huge/JJ/huge amount/NN/amount of/IN/of data/NNS/data that/WDT/that ?/./? s/VBZ/s lets/NNS/lets says/VBZ/says stored/VBN/stored on/IN/on the/DT/the disk/NN/disk we/PRP/we are/VBP/are not/RB/not even/RB/even bringing/VBG/bringing that/IN/that in/IN/in to/TO/to the/DT/the main/JJ/main memory/NNP/memory. but/CC/but what/WP/what i/PRP/i am/VBP/am pointing/VBG/pointing out/RP/out first/RB/first is/VBZ/is even/RB/even if/IN/if the/DT/the actual/JJ/actual data/NNS/data was/VBD/was stored/VBN/stored on/IN/on the/DT/the disk/NN/disk just/RB/just to/TO/to be/VB/be able/JJ/able to/TO/to access/NN/access the/DT/the data/NNS/data /,/, just/RB/just using/VBG/using keys/NNS/keys and/CC/and pointers/NNS/pointers is/VBZ/is so/RB/so huge/JJ/huge that/IN/that you/PRP/you can/MD/can not/RB/not have/VB/have all/PDT/all of/IN/of it/PRP/it in/IN/in to/TO/to the/DT/the main/JJ/main memory/NNP/memory. now/RB/now why/WRB/why is/VBZ/is this/DT/this kind/NN/kind of/IN/of structure/NN/structure useful/JJ/useful ?/./? we/PRP/we are/VBP/are talking/VBG/talking about/IN/about this/DT/this base/NN/base /,/, so/RB/so what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have now/RB/now is/VBZ/is that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have this/DT/this structure/NN/structure this/DT/this called/VBN/called b/NN/b tree/NNP/tree. this/DT/this structure/NN/structure itself/PRP/itself would/MD/would be/VB/be kept/VBN/kept on/IN/on the/DT/the disk/NN/disk /,/, so/RB/so each/DT/each of/IN/of these/DT/these nodes/NNS/nodes would/MD/would now/RB/now be/VB/be one/CD/one page/NN/page on/IN/on that/DT/that disk/NN/disk and/CC/and it/PRP/it is/VBZ/is just/RB/just this/DT/this very/RB/very top/JJ/top node/NN/node /,/, the/DT/the root/NN/root node/NN/node which/WDT/which will/MD/will be/VB/be kept/VBN/kept in/IN/in the/DT/the main/JJ/main memory/NNP/memory. yes/VBZ/yes /,/, now/RB/now what/WP/what happens/NNS/happens if/IN/if you/PRP/you have/VBP/have to/TO/to search/VB/search /,/, what/WDT/what would/MD/would you/PRP/you do/VB/do ?/./? you/PRP/you will/MD/will determine/VB/determine which/WDT/which of/IN/of this/DT/this 1000/CD/1000 keys/NNS/keys between/IN/between which/WDT/which two/CD/two keys/NNS/keys your/PRP$/your particular/JJ/particular key/NN/key lies/NNS/lies in/NNP/in. suppose/NN/suppose it/PRP/it lies/VBZ/lies so/RB/so and/CC/and then/RB/then go/VB/go to/TO/to the/DT/the appropriate/NN/appropriate child/NN/child node/NNP/node. suppose/NN/suppose this/DT/this is/VBZ/is a/DT/a child/NN/child we/PRP/we have/VBP/have to/TO/to go/VB/go to/TO/to /,/, now/RB/now what/WP/what will/MD/will you/PRP/you do/VB/do ?/./? you/PRP/you will/MD/will access/VB/access this/DT/this node/NN/node from/IN/from the/DT/the disk/NN/disk and/CC/and bring/VBG/bring it/PRP/it in/IN/in to/TO/to memory/NNP/memory. from/IN/from here/RB/here you/PRP/you will/MD/will determine/VB/determine key/JJ/key which/WDT/which should/MD/should be/VB/be your/PRP$/your next/JJ/next node/NN/node suppose/NN/suppose it/PRP/it is/VBZ/is this/DT/this node/NN/node so/IN/so you/PRP/you will/MD/will access/VB/access this/DT/this node/NN/node from/IN/from disk/NN/disk and/CC/and bring/VBG/bring it/PRP/it in/IN/in to/TO/to main/VB/main memory/NN/memory and/CC/and from/IN/from here/RB/here you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to find/VB/find your/PRP$/your account/NN/account number/NN/number and/CC/and then/RB/then you/PRP/you will/MD/will have/VB/have to/TO/to follow/VB/follow the/DT/the account/NN/account data/NNS/data /,/, let/VB/let ?/./? s/NNS/s see/NNP/see. so/RB/so how/WRB/how many/JJ/many disk/NN/disk access/NN/access would/MD/would you/PRP/you need/VBP/need ?/./? one/CD/one to/TO/to get/VB/get this/DT/this /,/, one/CD/one to/TO/to get/VB/get this/DT/this and/CC/and one/CD/one to/TO/to may/MD/may be/VB/be get/VBN/get the/DT/the actual/JJ/actual data/NNS/data associated/VBN/associated the/DT/the information/NN/information associated/VBN/associated with/IN/with that/DT/that particular/JJ/particular record/NN/record that/WDT/that you/PRP/you are/VBP/are trying/VBG/trying to/TO/to access/NNP/access. so/RB/so how/WRB/how much/JJ/much disk/NN/disk access/NN/access /,/, how/WRB/how many/JJ/many disk/NN/disk access/NN/access do/VBP/do you/PRP/you need/VBP/need ?/./? height/NN/height of/IN/of the/DT/the tree/NNP/tree. so/RB/so to/TO/to reduce/VB/reduce the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree what/WP/what do/VBP/do you/PRP/you want/VB/want ?/./? so/RB/so you/PRP/you want/VBP/want as/IN/as little/JJ/little height/NN/height as/IN/as possible/JJ/possible for/IN/for the/DT/the tree/NN/tree /,/, yes/VBZ/yes so/RB/so how/WRB/how can/MD/can you/PRP/you reduce/VB/reduce the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree ?/./? increase/NN/increase the/DT/the value/NN/value of/IN/of a/DT/a /,/, increase/NN/increase your/PRP$/your whatever/NN/whatever the/DT/the number/NN/number of/IN/of children/NNS/children each/DT/each of/IN/of this/DT/this nodes/VBZ/nodes have/VBP/have /:/( refer/NN/refer slide/NN/slide time/NN/time 15/CD/15 /:/: 50/CD/50 /CD/) but/CC/but what/WP/what is/VBZ/is limiting/VBG/limiting you/PRP/you from/IN/from number/NN/number of/IN/of children/NNS/children each/DT/each of/IN/of this/DT/this nodes/VBZ/nodes and/CC/and page/NN/page size/NN/size ?/./? instead/RB/instead of/IN/of 1000/CD/1000 why/WRB/why didn/NN/didn ?/./? t/NN/t i/PRP/i put/VBD/put in/RP/in 10000/CD/10000 key/JJ/key here/RB/here or/CC/or 100000/CD/100000 keys/NNS/keys in/IN/in here/RB/here ?/./? that/IN/that would/MD/would have/VB/have been/VBN/been even/RB/even better/RBR/better /,/, that/IN/that would/MD/would reduce/VB/reduce the/DT/the height/NN/height even/RB/even further/NNP/further. if/IN/if i/PRP/i had/VBD/had /,/, that/IN/that would/MD/would reduce/VB/reduce the/DT/the height/NN/height even/RB/even further/RBR/further but/CC/but i/PRP/i can/MD/can even/RB/even put/VB/put too/RB/too many/JJ/many because/IN/because each/DT/each of/IN/of those/DT/those keys/NNS/keys is/VBZ/is taking/VBG/taking certain/JJ/certain amount/NN/amount of/IN/of space/NN/space and/CC/and i/PRP/i can/MD/can only/RB/only put/VB/put as/IN/as many/JJ/many keys/NNS/keys as/IN/as can/MD/can fit/VB/fit in/IN/in to/TO/to one/CD/one page/NN/page and/CC/and what/WP/what is/VBZ/is the/DT/the page/NN/page ?/./? page/NN/page is/VBZ/is a/DT/a unit/NN/unit of/IN/of transfer/NN/transfer between/IN/between the/DT/the disk/NN/disk and/CC/and the/DT/the main/JJ/main memory/NNP/memory. so/RB/so that/IN/that is/VBZ/is define/NN/define for/IN/for the/DT/the particular/JJ/particular computer/NN/computer system/NNP/system. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so depending/VBG/depending upon/IN/upon if/IN/if each/DT/each of/IN/of your/PRP$/your keys/NNS/keys comma/VBP/comma pointer/NN/pointer per/IN/per taking/VBG/taking let/NN/let ?/./? s/NNS/s say/VBP/say 8/CD/8 bytes/NNS/bytes /,/, your/PRP$/your page/NN/page size/NN/size is/VBZ/is 16/CD/16 kilo/NN/kilo bytes/NNS/bytes each/DT/each of/IN/of key/JJ/key comma/NN/comma pointer/NN/pointer pair/NN/pair is/VBZ/is taking/VBG/taking 8/CD/8 bytes/NNS/bytes that/WDT/that you/PRP/you can/MD/can put/VB/put at/IN/at most/JJS/most 2000/CD/2000 keys/NNS/keys in/IN/in to/TO/to one/CD/one page/NN/page and/CC/and so/RB/so that/IN/that determine/NN/determine /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so this/DT/this is/VBZ/is just/RB/just read/VBN/read writing/VBG/writing what/WP/what the/DT/the node/NN/node ?/./? so/RB/so x/NN/x is/VBZ/is now/RB/now referring/VBG/referring to/TO/to an/DT/an particular/JJ/particular node/NN/node so/IN/so what/WP/what does/VBZ/does the/DT/the node/NN/node x/NN/x have/VBP/have ?/./? n/NN/n /:/[ x/NN/x /:/] is/VBZ/is the/DT/the number/NN/number of/IN/of keys/NNS/keys in/IN/in that/DT/that node/NN/node and/CC/and then/RB/then once/RB/once again/RB/again the/DT/the first/JJ/first key/JJ/key is/VBZ/is going/VBG/going to/TO/to be/VB/be less/JJR/less then/RB/then the/DT/the second/JJ/second key/JJ/key is/VBZ/is going/VBG/going to/TO/to be/VB/be less/JJR/less than/IN/than the/DT/the /,/, so/RB/so key/JJ/key one/CD/one of/IN/of the/DT/the node/NN/node is/VBZ/is less/JJR/less than/IN/than the/DT/the key/JJ/key two/CD/two of/IN/of the/DT/the node/NN/node and/CC/and so/RB/so and/CC/and on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 17/CD/17 /:/: 08/CD/08 /CD/) so/RB/so there/RB/there are/VBP/are n/VBN/n of/IN/of x/NN/x keys/NNS/keys and/CC/and they/PRP/they will/MD/will have/VB/have lets/NNS/lets say/VBP/say methods/NNS/methods or/CC/or particular/JJ/particular bit/NN/bit in/IN/in a/DT/a node/NN/node which/WDT/which specify/NN/specify whether/IN/whether the/DT/the node/NN/node is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node or/CC/or not/NNP/not. whether/IN/whether it/PRP/it is/VBZ/is has/VBZ/has any/DT/any further/JJ/further children/NNS/children /,/, so/RB/so leaf/IN/leaf if/IN/if this/DT/this is/VBZ/is true/JJ/true then/RB/then that/IN/that means/NNS/means leaf/VBP/leaf node/NN/node other/JJ/other wise/NN/wise not/RB/not and/CC/and if/IN/if its/PRP$/its not/RB/not a/DT/a leaf/NN/leaf node/NN/node it/PRP/it ?/./? s/NNS/s a/DT/a internal/JJ/internal node/NN/node then/RB/then we/PRP/we will/MD/will have/VB/have /,/, if/IN/if there/EX/there are/VBP/are n/NN/n of/IN/of x/NN/x keys/NNS/keys then/RB/then will/MD/will have/VB/have n/VBN/n of/IN/of x/NN/x +/:/+ 1/CD/1 children/NNS/children of/IN/of that/DT/that node/NN/node and/CC/and this/DT/this we/PRP/we all/DT/all know/VBP/know we/PRP/we have/VBP/have seen/VBN/seen this/DT/this before/NN/before if/IN/if k/NN/k sub/NN/sub i/PRP/i is/VBZ/is in/IN/in z/NN/z key/NN/key in/IN/in the/DT/the sub/NN/sub tree/NN/tree c/NN/c sub/NN/sub i/PRP/i in/IN/in the/DT/the case/NN/case of/IN/of i/PRP/i is/VBZ/is less/JJR/less than/IN/than the/DT/the ith/NN/ith key/NN/key in/IN/in the/DT/the node/NN/node and/CC/and so/RB/so on/NNP/on. so/IN/so it/PRP/it ?/./? s/NNS/s the/DT/the same/NNP/same. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 18/CD/18 /:/: 05/CD/05 /CD/) so/RB/so b/NN/b tree/NN/tree is/VBZ/is the/DT/the essentially/RB/essentially same/JJ/same structure/NN/structure as/IN/as you/PRP/you ab/VBP/ab tree/NNP/tree. now/RB/now only/RB/only difference/VBP/difference is/VBZ/is so/RB/so for/IN/for as/IN/as ab/NN/ab tree/NN/tree we/PRP/we say/VBP/say we/PRP/we provided/VBN/provided a/DT/a lower/JJR/lower bound/NN/bound on/IN/on the/DT/the value/NN/value of/IN/of b/NN/b /,/, we/PRP/we said/VBD/said b/NN/b is/VBZ/is should/MD/should be/VB/be at/IN/at least/JJS/least 2a-1/CD/2a-1. what/WP/what are/VBP/are we/PRP/we saying/VBG/saying today/NN/today we/PRP/we want/VBP/want that/IN/that b/NN/b should/MD/should be/VB/be ?/./? so/RB/so if/IN/if a/DT/a node/NN/node has/VBZ/has degree/JJ/degree t/NN/t so/IN/so t/NN/t is/VBZ/is the/DT/the same/JJ/same as/IN/as that/DT/that we/PRP/we had/VBD/had talked/VBN/talked off/RP/off all/DT/all nodes/NNS/nodes except/IN/except the/DT/the root/NN/root had/VBD/had between/VBN/between t/NN/t and/CC/and 2/CD/2 t/NNP/t. so/RB/so this/DT/this so/IN/so we/PRP/we want/VBP/want that/IN/that b/NN/b /,/, so/RB/so today/NN/today we/PRP/we want/VBP/want basically/RB/basically this/DT/this is/VBZ/is out/RP/out bound/RB/bound for/IN/for b/NN/b so/RB/so we/PRP/we were/VBD/were working/VBG/working with/IN/with b/NN/b equals/NNS/equals two/CD/two times/NNS/times a/DT/a exactly/NNP/exactly. so/RB/so b/VB/b tree/JJ/tree is/VBZ/is essentially/RB/essentially special/JJ/special kind/NN/kind of/IN/of ab/NN/ab tree/NN/tree with/IN/with ab/NN/ab with/IN/with bb/NN/bb exactly/RB/exactly two/CD/two times/NNS/times a/NNP/a. so/RB/so each/DT/each node/NN/node has/VBZ/has between/VBN/between t/NN/t and/CC/and 2/CD/2 t/NN/t children/NNS/children and/CC/and so/RB/so it/PRP/it has/VBZ/has at/IN/at least/JJS/least /,/, it/PRP/it may/MD/may be/VB/be between/IN/between t/NN/t -1/-NONE-/-1 and/CC/and 2/CD/2 t/NN/t minus/NN/minus one/CD/one keys/NNP/keys. so/RB/so the/DT/the other/JJ/other way/NN/way in/IN/in which/WDT/which b/NN/b tree/VBP/tree differs/NNS/differs from/IN/from a/DT/a /,/, ab/NN/ab tree/NN/tree is/VBZ/is while/IN/while ab/NN/ab tree/NN/tree is/VBZ/is meant/JJ/meant to/TO/to be/VB/be a/DT/a data/NN/data structure/NN/structure meant/VBD/meant for/IN/for an/DT/an internal/JJ/internal memory/NN/memory /,/, b/NN/b tree/NN/tree is/VBZ/is a/DT/a data/NN/data structure/NN/structure meant/VBD/meant for/IN/for secondary/JJ/secondary storage/NNP/storage. so/RB/so you/PRP/you really/RB/really have/VBP/have to/TO/to choose/VB/choose large/JJ/large value/NN/value of/IN/of b/NN/b so/IN/so that/IN/that height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is smallest/JJS/smallest possible/JJ/possible and/CC/and the/DT/the entire/JJ/entire node/NN/node /,/, all/DT/all the/DT/the key/JJ/key is/VBZ/is in/IN/in the/DT/the node/NN/node can/MD/can fit/VB/fit in/IN/in to/TO/to one/CD/one page/NN/page and/CC/and the/DT/the same/JJ/same as/IN/as before/IN/before the/DT/the root/NN/root node/NN/node has/VBZ/has between/VBN/between 0/-NONE-/0 and/CC/and 2/CD/2 t/NN/t children/NNP/children. actually/RB/actually i/PRP/i have/VBP/have said/VBN/said zero/NN/zero but/CC/but you/PRP/you know/VBP/know /,/, it/PRP/it need/VBP/need not/RB/not be/VB/be zero/RB/zero it/PRP/it could/MD/could be/VB/be 2/CD/2 between/IN/between 2/CD/2 and/CC/and 2t/CD/2t children/NNS/children /,/, let/VB/let ?/./? s/NNS/s make/VBP/make it/PRP/it 2/CD/2 and/CC/and 2/CD/2 t/NNP/t. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 20/CD/20 /:/: 08/CD/08 /CD/) so/RB/so the/DT/the root/NN/root node/NN/node in/IN/in this/DT/this example/NN/example has/VBZ/has exactly/RB/exactly two/CD/two children/NNS/children and/CC/and then/RB/then this/DT/this is/VBZ/is t/NN/t -1/-NONE-/-1 keys/VBZ/keys and/CC/and let/VB/let ?/./? s/NNS/s say/VBP/say t/NN/t children/NNP/children. so/RB/so this/DT/this is/VBZ/is the/DT/the setting/NN/setting in/IN/in which/WDT/which the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is as/IN/as large/JJ/large as/IN/as possible/JJ/possible because/IN/because each/DT/each of/IN/of the/DT/the node/NN/node has/VBZ/has only/RB/only t/VBN/t children/NNP/children. so/RB/so if/IN/if this/DT/this is/VBZ/is all/DT/all just/RB/just making/VBG/making sure/NN/sure that/IN/that you/PRP/you remember/VBP/remember things/NNS/things from/IN/from the/DT/the previous/JJ/previous classes/NNP/classes. there/RB/there are/VBP/are one/CD/one node/NN/node here/RB/here /,/, two/CD/two nodes/NNS/nodes here/RB/here /,/, 2/CD/2 t/NN/t nodes/VBZ/nodes here/RB/here and/CC/and so/RB/so on/NNP/on. so/IN/so this/DT/this is/VBZ/is goes/VBZ/goes up/RP/up to/TO/to height/NN/height h/NN/h /,/, you/PRP/you can/MD/can compute/VB/compute you/PRP/you know/VB/know this/DT/this would/MD/would be/VB/be the/DT/the total/JJ/total number/NN/number of/IN/of nodes/NNS/nodes that/WDT/that would/MD/would had/VB/had and/CC/and since/IN/since n/NN/n is/VBZ/is equal/JJ/equal to/TO/to this/DT/this that/IN/that will/MD/will give/VB/give you/PRP/you the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree as/IN/as this/DT/this quantity/NNP/quantity. so/RB/so i/PRP/i will/MD/will just/RB/just show/VB/show you/PRP/you some/DT/some pseudo/VBP/pseudo code/NN/code also/RB/also for/IN/for searching/VBG/searching so/RB/so that/IN/that you/PRP/you know/VBP/know that/IN/that these/DT/these things/NNS/things are/VBP/are completely/RB/completely clear/JJ/clear in/IN/in your/PRP$/your head/NNP/head. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 20/CD/20 /:/: 53/CD/53 /CD/) suppose/NN/suppose i/PRP/i am/VBP/am searching/VBG/searching for/IN/for key/JJ/key k/NN/k in/IN/in a/DT/a node/NN/node x/NNP/x. so/RB/so this/DT/this will/MD/will be/VB/be a/DT/a recursive/JJ/recursive search/NN/search procedure/NNP/procedure. what/WP/what am/NN/am i/PRP/i going/VBG/going to/TO/to do/VB/do ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to first/JJ/first find/NN/find out/IN/out the/DT/the key/NNP/key. what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? i/PRP/i first/RB/first have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the key/JJ/key /,/, the/DT/the first/JJ/first key/JJ/key which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than k/NN/k /,/, the/DT/the keys/NNS/keys are/VBP/are arranging/VBG/arranging let/NN/let ?/./? s/NNS/s say/VBP/say increasing/VBG/increasing order/NN/order in/IN/in a/DT/a node/NNP/node. so/RB/so you/PRP/you have/VB/have to/TO/to find/VB/find a/DT/a first/JJ/first key/JJ/key which/WDT/which is/VBZ/is larger/JJR/larger the/DT/the k/NN/k so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what i/PRP/i do/VBP/do here/RB/here /,/, i/PRP/i keep/VBP/keep moving/VBG/moving till/NN/till i/PRP/i find/VBP/find a/DT/a key/JJ/key which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than k/NN/k then/RB/then i/PRP/i come/VBP/come out/NNP/out. so/RB/so if/IN/if i/PRP/i found/VBD/found a/DT/a key/JJ/key which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than k/NN/k let/NN/let ?/./? s/NNS/s say/VBP/say that/IN/that will/MD/will give/VB/give me/PRP/me the/DT/the ith/NN/ith key/NNP/key. so/RB/so if/IN/if i/PRP/i found/VBD/found exactly/RB/exactly the/DT/the key/JJ/key i/PRP/i was/VBD/was searching/VBG/searching for/IN/for then/RB/then i/PRP/i return/VBP/return if/IN/if the/DT/the node/NN/node that/IN/that i/PRP/i am/VBP/am in/IN/in was/VBD/was leaf/NN/leaf node/NN/node that/WDT/that i/PRP/i can/MD/can ?/./? t/VB/t procedure/NN/procedure any/DT/any further/JJ/further then/RB/then i/PRP/i return/VBP/return else/RB/else either/DT/either then/RB/then the/DT/the key/JJ/key is/VBZ/is not/RB/not there/RB/there else/RB/else i/PRP/i fetch/VBP/fetch the/DT/the next/JJ/next node/NNP/node. i/PRP/i fetch/VBP/fetch the/DT/the next/JJ/next node/NN/node and/CC/and i/PRP/i continue/VBP/continue my/PRP$/my search/NN/search in/IN/in the/DT/the next/JJ/next node/NNP/node. what/WP/what you/PRP/you have/VBP/have to/TO/to do/VB/do here/RB/here ?/./? you/PRP/you were/VBD/were searching/VBG/searching /,/, this/DT/this is/VBZ/is let/VB/let ?/./? s/NNS/s say/VBP/say ci/NN/ci /:/( x/NN/x /:/) /,/, we/PRP/we have/VBP/have to/TO/to know/VB/know excess/JJ/excess the/DT/the particular/JJ/particular node/NNP/node. so/RB/so ci/VBP/ci /:/( x/NN/x /:/) is/VBZ/is just/RB/just the/DT/the reference/NN/reference to/TO/to the/DT/the child/NN/child node/NN/node /,/, the/DT/the appropriate/NN/appropriate child/NN/child node/NN/node /,/, you/PRP/you just/RB/just have/VBP/have to/TO/to access/NN/access that/NNP/that. i/PRP/i am/VBP/am going/VBG/going to/TO/to skip/VB/skip this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 22/CD/22 /:/: 54/CD/54 /CD/) so/RB/so splitting/VBG/splitting nodes/NNS/nodes the/DT/the same/JJ/same idea/NN/idea is/VBZ/is before/NNP/before. when/WRB/when you/PRP/you split/VBP/split nodes/NNS/nodes ?/./? when/WRB/when they/PRP/they are/VBP/are full/JJ/full so/RB/so how/WRB/how many/JJ/many keys/NNS/keys can/MD/can sit/VB/sit in/IN/in a/DT/a node/NN/node ?/./? we/PRP/we said/VBD/said 2t/CD/2t /,/, 2t-1/CD/2t-1. it/PRP/it can/MD/can have/VB/have 2t/CD/2t children/NNS/children so/IN/so it/PRP/it can/MD/can have/VB/have 2t/CD/2t -1/-NONE-/-1 keys/NNP/keys. so/IN/so if/IN/if it/PRP/it has/VBZ/has 2/CD/2 t/NN/t /:/- 1/CD/1 keys/NNS/keys and/CC/and new/JJ/new key/JJ/key if/IN/if we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert a/DT/a new/JJ/new key/JJ/key then/RB/then we/PRP/we split/VBP/split the/DT/the node/NN/node and/CC/and what/WP/what was/VBD/was the/DT/the process/NN/process of/IN/of splitting/VBG/splitting /,/, if/IN/if this/DT/this is/VBZ/is the/DT/the node/NN/node that/IN/that i/PRP/i am/VBP/am splitting/VBG/splitting let/NN/let say/VB/say t/NN/t q/NN/q value/NN/value is/VBZ/is 4/CD/4. so/RB/so this/DT/this already/RB/already has/VBZ/has seven/VBN/seven keys/NNS/keys if/IN/if i/PRP/i am/VBP/am trying/VBG/trying to/TO/to put/VB/put one/CD/one more/JJR/more here/RB/here then/RB/then i/PRP/i need/VBP/need to/TO/to split/VB/split it/PRP/it so/RB/so s/VBZ/s goes/VBZ/goes up/RP/up and/CC/and this/DT/this gets/NNS/gets split/VBP/split in/IN/in to/TO/to these/NNP/these. so/RB/so i/PRP/i have/VBP/have put/VBN/put down/RP/down the/DT/the code/NN/code here/RB/here /,/, you/PRP/you can/MD/can have/VB/have a/DT/a look/NN/look at/IN/at this/DT/this slides/NNS/slides separately/RB/separately to/TO/to understand/VB/understand this/DT/this code/NNP/code. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to spend/VB/spend too/RB/too much/RB/much time/VB/time during/IN/during it/PRP/it here/NNP/here. /:/( refer/NN/refer slide/NN/slide time/NN/time 23/CD/23 /:/: 38/CD/38 /CD/) it/PRP/it ?/./? s/NNS/s very/RB/very straight/JJ/straight forward/NN/forward what/WP/what you/PRP/you have/VBP/have to/TO/to do/VB/do /,/, this/DT/this is/VBZ/is a/DT/a procedure/NN/procedure for/IN/for splitting/NN/splitting a/DT/a node/NN/node y/NN/y whose/WP$/whose parent/NN/parent is/VBZ/is x/NN/x and/CC/and this/DT/this is/VBZ/is lets/NNS/lets say/VBP/say the/DT/the ith/NN/ith child/NN/child of/IN/of this/DT/this parent/NNP/parent. so/RB/so i/PRP/i refers/NNS/refers to/TO/to that/DT/that and/CC/and what/WP/what you/PRP/you do/VBP/do /,/, you/PRP/you create/VBP/create a/DT/a new/JJ/new node/NN/node z/NN/z and/CC/and then/RB/then first/JJ/first you/PRP/you copy/VBP/copy the/DT/the appropriate/NN/appropriate number/NN/number of/IN/of keys/NNS/keys t/VBP/t /:/- 1/CD/1 keys/NNS/keys from/IN/from y/NN/y to/TO/to z/VB/z that/IN/that ?/./? s/NNS/s what/WP/what being/VBG/being done/NN/done here/RB/here and/CC/and then/RB/then you/PRP/you also/RB/also /,/, if/IN/if this/DT/this is/VBZ/is not/RB/not a/DT/a leaf/NN/leaf node/NN/node then/RB/then you/PRP/you will/MD/will copy/VB/copy the/DT/the children/NNS/children also/RB/also from/IN/from y/JJ/y to/TO/to z/VB/z that/IN/that ?/./? s/NNS/s being/VBG/being done/NN/done here/RB/here and/CC/and then/RB/then coping/VBG/coping that/NNP/that. here/RB/here you/PRP/you are/VBP/are moving/VBG/moving so/RB/so this/DT/this has/VBZ/has to/TO/to be/VB/be promoted/VBN/promoted up/RP/up here/RB/here which/WDT/which means/VBZ/means that/DT/that these/DT/these keys/NNS/keys in/IN/in here/RB/here have/VBP/have to/TO/to be/VB/be moved/VBN/moved one/CD/one step/NN/step right/RB/right in/IN/in the/DT/the array/NN/array that/IN/that ?/./? s/NNS/s what/WP/what is/VBZ/is being/VBG/being done/NN/done here/RB/here and/CC/and then/RB/then this/DT/this key/NN/key that/IN/that is/VBZ/is to/TO/to be/VB/be moved/VBN/moved up/RP/up copied/VBN/copied in/IN/in to/TO/to the/DT/the appropriate/NN/appropriate place/NN/place there/EX/there and/CC/and then/RB/then we/PRP/we have/VBP/have these/DT/these three/CD/three describe/NN/describe operation/NN/operation because/IN/because we/PRP/we have/VBP/have modified/VBN/modified this/DT/this node/NN/node and/CC/and this/DT/this node/NN/node and/CC/and the/DT/the new/JJ/new node/NN/node we/PRP/we created/NNP/created. so/RB/so they/PRP/they all/DT/all have/VBP/have to/TO/to be/VB/be return/NN/return back/RB/back to/TO/to disk/VB/disk /,/, so/RB/so that/IN/that is/VBZ/is being/VBG/being done/NN/done here/NNP/here. so/RB/so the/DT/the same/JJ/same thing/NN/thing is/VBZ/is before/IN/before the/DT/the only/JJ/only catch/NN/catch today/NN/today is/VBZ/is that/IN/that we/PRP/we are/VBP/are doing/VBG/doing this/DT/this disk/NN/disk operation/NN/operation also/RB/also /,/, you/PRP/you can/MD/can look/VB/look at/IN/at this/DT/this slides/NNS/slides and/CC/and understand/VBP/understand the/DT/the code/NNP/code. so/RB/so how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take for/IN/for ?/./? so/RB/so now/RB/now today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be measuring/VBG/measuring running/VBG/running time/NN/time in/IN/in terms/NNS/terms of/IN/of the/DT/the number/NN/number of/IN/of disk/NN/disk access/NN/access that/WDT/that we/PRP/we have/VBP/have to/TO/to do/NNP/do. so/RB/so in/IN/in doing/VBG/doing the/DT/the split/NN/split the/DT/the number/NN/number of/IN/of disk/NN/disk access/NN/access we/PRP/we have/VBP/have to/TO/to do/VB/do was/VBD/was three/CD/three because/IN/because we/PRP/we did/VBD/did three/CD/three input/NN/input outputs/NNS/outputs at/IN/at the/DT/the end/NNP/end. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 25/CD/25 /:/: 37/CD/37 /CD/) the/DT/the cpu/NN/cpu time/NN/time which/WDT/which will/MD/will now/RB/now be/VB/be proportional/JJ/proportional to/TO/to the/DT/the number/NN/number of/IN/of keys/NNS/keys in/IN/in that/DT/that node/NN/node because/IN/because we/PRP/we have/VBP/have to/TO/to moves/NNS/moves certain/JJ/certain keys/NNS/keys and/CC/and so/RB/so on/IN/on is/VBZ/is going/VBG/going to/TO/to be/VB/be fairly/RB/fairly small/JJ/small compared/VBN/compared to/TO/to this/NNP/this. so/RB/so we/PRP/we will/MD/will actually/RB/actually be/VB/be counting/VBG/counting time/NN/time in/IN/in terms/NNS/terms of/IN/of the/DT/the number/NN/number of/IN/of disk/NN/disk access/NNP/access. so/RB/so today/NN/today one/CD/one variant/NN/variant of/IN/of binary/JJ/binary of/IN/of b/NN/b trees/NNS/trees also/RB/also works/VBZ/works with/IN/with /,/, so/RB/so if/IN/if you/PRP/you recall/VBP/recall inserting/VBG/inserting when/WRB/when you/PRP/you did/VBD/did inserting/VBG/inserting in/IN/in two/CD/two four/CD/four trees/NNS/trees or/CC/or in/IN/in ab/NN/ab trees/NNS/trees /,/, we/PRP/we went/VBD/went down/IN/down the/DT/the tree/NN/tree /,/, found/VBD/found out/IN/out the/DT/the place/NN/place where/WRB/where we/PRP/we have/VBP/have to/TO/to insert/VB/insert the/DT/the element/NN/element then/RB/then try/NN/try to/TO/to put/VB/put the/DT/the element/NN/element there/RB/there and/CC/and if/IN/if that/DT/that resulted/VBN/resulted in/IN/in the/DT/the node/NN/node getting/VBG/getting split/NN/split /,/, we/PRP/we split/VBP/split that/IN/that node/NN/node and/CC/and that/IN/that may/MD/may have/VB/have to/TO/to insert/VB/insert the/DT/the key/JJ/key in/IN/in the/DT/the parent/NN/parent node/NN/node and/CC/and that/IN/that could/MD/could lead/VB/lead to/TO/to another/DT/another split/NN/split and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. there/RB/there is/VBZ/is another/DT/another way/NN/way of/IN/of doing/VBG/doing this/DT/this thing/NN/thing which/WDT/which is/VBZ/is that/IN/that we/PRP/we start/VBP/start from/IN/from the/DT/the top/NNP/top. so/RB/so that/IN/that is/VBZ/is called/VBN/called the/DT/the two/CD/two parse/NN/parse operation/NN/operation where/WRB/where in/IN/in first/JJ/first you/PRP/you come/VBP/come down/RP/down and/CC/and then/RB/then you/PRP/you go/VBP/go up/RP/up the/DT/the tree/NNP/tree. one/CD/one possibility/NN/possibility is/VBZ/is to/TO/to do/VB/do the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is only/RB/only one/CD/one pass/NN/pass /,/, what/WP/what is/VBZ/is that/IN/that mean/JJ/mean ?/./? that/IN/that is/VBZ/is as/IN/as you/PRP/you are/VBP/are starting/VBG/starting from/IN/from the/DT/the top/JJ/top you/PRP/you check/VBP/check to/TO/to see/VB/see if/IN/if the/DT/the node/NN/node that/IN/that you/PRP/you are/VBP/are looking/VBG/looking at/IN/at already/RB/already has/VBZ/has its/PRP$/its full/JJ/full quota/NN/quota of/IN/of keys/NNP/keys. what/WP/what is/VBZ/is the/DT/the full/JJ/full quota/NN/quota ?/./? 2/CD/2 t/NN/t -1/-NONE-/-1 /,/, if/IN/if it/PRP/it ?/./? s/NNS/s already/RB/already has/VBZ/has 2/CD/2 t/NN/t /:/- 1/CD/1 keys/NNS/keys then/RB/then you/PRP/you are/VBP/are going/VBG/going to/TO/to split/VB/split that/IN/that node/NN/node right/RB/right there/EX/there and/CC/and then/RB/then and/CC/and only/RB/only then/RB/then proceed/VBN/proceed down/RP/down the/DT/the tree/NN/tree /,/, does/VBZ/does everyone/NN/everyone follow/NNP/follow. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start from/IN/from the/DT/the root/NN/root and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to recursively/RB/recursively travel/NN/travel all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the leaf/NN/leaf but/CC/but before/IN/before we/PRP/we descend/VBP/descend to/TO/to a/DT/a lower/JJR/lower level/NN/level we/PRP/we make/VBP/make sure/JJ/sure that/IN/that the/DT/the node/NN/node contains/VBZ/contains strictly/RB/strictly less/JJR/less than/IN/than 2/CD/2 t/NN/t /:/- 1/CD/1 keys/NNP/keys. if/IN/if it/PRP/it has/VBZ/has 2/CD/2 t/NN/t /:/- 1/CD/1 keys/NNS/keys then/RB/then we/PRP/we split/VBP/split the/DT/the node/NN/node right/RB/right there/NNP/there. let/VB/let ?/./? s/NNS/s understand/VBP/understand this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 27/CD/27 /:/: 33/CD/33 /CD/) so/RB/so i/PRP/i will/MD/will come/VB/come back/RB/back to/TO/to the/DT/the slide/NN/slide later/JJ/later /,/, let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this was/VBD/was my/PRP$/my root/NN/root node/NNP/node. i/PRP/i am/VBP/am not/RB/not yet/RB/yet inserted/VBN/inserted the/DT/the key/JJ/key /,/, this/DT/this was/VBD/was the/DT/the very/JJ/very first/JJ/first root/NN/root node/NN/node that/WDT/that i/PRP/i already/RB/already counted/VBD/counted this/DT/this is/VBZ/is already/RB/already fill/RB/fill up/RP/up i/PRP/i am/VBP/am working/VBG/working with/IN/with t/NN/t =/:/= 4/CD/4. so/RB/so this/DT/this has/VBZ/has 2t-1/CD/2t-1 /,/, 7/CD/7 keys/NNS/keys in/IN/in it/NNP/it. this/DT/this is/VBZ/is already/RB/already full/JJ/full /,/, so/RB/so before/IN/before descending/VBG/descending down/IN/down i/PRP/i see/VBP/see this/DT/this is/VBZ/is already/RB/already full/JJ/full /,/, i/PRP/i write/VBP/write at/IN/at this/DT/this step/NN/step split/NN/split this/DT/this node/NN/node in/IN/in to/TO/to a/DT/a d/NN/d f/NN/f l/NN/l n/NN/n p/NN/p and/CC/and h/NN/h moves/NNS/moves up/IN/up and/CC/and now/RB/now i/PRP/i will/MD/will continue/VB/continue down/IN/down the/DT/the tree/NN/tree whatever/NN/whatever key/NN/key i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert i/PRP/i will/MD/will now/RB/now continue/NNP/continue. so/RB/so let/VB/let me/PRP/me see/VB/see /,/, lets/NNS/lets show/VBP/show you/PRP/you an/DT/an example/NN/example i/PRP/i will/MD/will skip/VB/skip this/DT/this slide/NN/slide and/CC/and come/VB/come back/RB/back to/TO/to this/DT/this later/NNP/later. so/RB/so let/VB/let ?/./? s/NNS/s take/VBP/take an/DT/an example/NN/example and/CC/and then/RB/then i/PRP/i will/MD/will look/VB/look at/IN/at the/DT/the code/NN/code again/NNP/again. so/RB/so suppose/RB/suppose this/DT/this is/VBZ/is the/DT/the tree/NN/tree /,/, i/PRP/i am/VBP/am trying/VBG/trying to/TO/to t/VB/t is/VBZ/is the/DT/the value/NN/value of/IN/of three/CD/three i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert b/NN/b so/IN/so first/JJ/first i/NN/i come/NN/come here/RB/here this/DT/this node/NN/node is/VBZ/is not/RB/not full/JJ/full /,/, t/NN/t is/VBZ/is three/CD/three so/RB/so it/PRP/it node/VBP/node is/VBZ/is full/JJ/full when/WRB/when it/PRP/it has/VBZ/has five/CD/five keys/NNS/keys in/IN/in it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 28/CD/28 /:/: 33/CD/33 /CD/) this/DT/this is/VBZ/is not/RB/not yet/RB/yet full/JJ/full /,/, so/RB/so i/PRP/i can/MD/can come/VB/come down/RB/down and/CC/and b/VB/b is/VBZ/is inserted/VBN/inserted at/IN/at this/DT/this place/NNP/place. suppose/NN/suppose i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert q/NN/q so/IN/so once/RB/once again/RB/again i/PRP/i come/VBP/come to/TO/to this/DT/this node/NNP/node. this/DT/this is/VBZ/is not/RB/not yet/RB/yet full/JJ/full /,/, so/RB/so i/PRP/i go/VBP/go down/RB/down so/RB/so actually/RB/actually this/DT/this should/MD/should b/VB/b here/RB/here i/PRP/i come/VBP/come here/RB/here this/DT/this is/VBZ/is not/RB/not yet/RB/yet full/JJ/full i/PRP/i come/VBP/come down/RB/down here/RB/here and/CC/and then/RB/then i/PRP/i put/VBD/put q/RP/q here/RB/here but/CC/but this/DT/this is/VBZ/is full/JJ/full already/RB/already so/RB/so which/WDT/which means/VBZ/means it/PRP/it will/MD/will call/VB/call this/DT/this is/VBZ/is split/NNP/split. so/RB/so q/NN/q r/NN/r s/NNS/s would/MD/would go/VB/go on/IN/on one/CD/one side/NN/side u/NN/u v/NN/v on/IN/on the/DT/the other/JJ/other and/CC/and t/NN/t gets/NNS/gets promoted/VBD/promoted here/NNP/here. note/NN/note the/DT/the very/JJ/very interesting/JJ/interesting thing/NN/thing why/WRB/why did/VBD/did this/DT/this node/NN/node not/RB/not get/VB/get split/VBN/split ?/./? what/WP/what we/PRP/we had/VBD/had seen/VBN/seen in/IN/in the/DT/the two/CD/two four/CD/four trees/NNS/trees or/CC/or ab/VB/ab trees/NNS/trees what/WP/what was/VBD/was happening/VBG/happening was/VBD/was that/IN/that when/WRB/when i/PRP/i inserted/VBD/inserted an/DT/an element/NN/element in/IN/in to/TO/to the/DT/the parent/NN/parent /,/, the/DT/the parent/NN/parent could/MD/could also/RB/also gets/VBZ/gets split/VBN/split and/CC/and that/IN/that ?/./? s/NNS/s not/RB/not going/VBG/going to/TO/to happen/VB/happen here/RB/here anymore/NNP/anymore. why/WRB/why ?/./? because/IN/because i/PRP/i came/VBD/came down/RP/down from/IN/from the/DT/the parent/NN/parent only/RB/only when/WRB/when the/DT/the parent/NN/parent had/VBD/had room/NN/room in/IN/in it/PRP/it /,/, if/IN/if the/DT/the parent/NN/parent had/VBD/had room/NN/room then/RB/then when/WRB/when i/PRP/i came/VBD/came down/RP/down and/CC/and i/PRP/i split/VBP/split this/DT/this node/NN/node and/CC/and i/PRP/i put/VBD/put the/DT/the one/CD/one key/JJ/key in/IN/in to/TO/to the/DT/the parent/NN/parent /,/, the/DT/the parent/NN/parent is/VBZ/is now/RB/now not/RB/not going/VBG/going to/TO/to get/VB/get split/NNP/split. let/VB/let ?/./? s/NNS/s with/IN/with this/DT/this happening/NN/happening again/RB/again /,/, so/RB/so now/RB/now when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the next/JJ/next key/NN/key lets/NNS/lets say/VBP/say l/NN/l so/IN/so now/RB/now when/WRB/when i/PRP/i come/VBP/come to/TO/to the/DT/the root/NN/root node/NN/node /,/, i/PRP/i will/MD/will straight/RB/straight away/RB/away split/JJ/split this/DT/this because/IN/because this/DT/this already/RB/already full/JJ/full /,/, doesn/NN/doesn ?/./? t/NN/t matter/NN/matter where/WRB/where l/NN/l is/VBZ/is going/VBG/going l/NN/l is/VBZ/is you/PRP/you know/VBP/know l/JJ/l m/NN/m n/NN/n o/NN/o m/NN/m l/NN/l m/NN/m n/NN/n /,/, it/PRP/it will/MD/will come/VB/come here/RB/here this/DT/this node/NN/node is/VBZ/is not/RB/not full/JJ/full so/RB/so but/CC/but i/PRP/i am/VBP/am then/RB/then i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert l/NN/l i/PRP/i will/MD/will right/RB/right away/RB/away split/JJ/split in/IN/in to/TO/to g/VB/g m/NN/m t/NN/t x/NN/x p/NN/p and/CC/and then/RB/then come/VBN/come and/CC/and insert/NN/insert l/NNP/l. so/RB/so now/RB/now let/VB/let ?/./? s/NNS/s say/VBP/say when/WRB/when i/PRP/i try/VBP/try to/TO/to insert/VB/insert f/NN/f /,/, i/PRP/i come/VBP/come here/RB/here this/DT/this is/VBZ/is not/RB/not full/JJ/full so/RB/so i/PRP/i can/MD/can continue/VB/continue this/DT/this is/VBZ/is not/RB/not full/JJ/full so/RB/so i/PRP/i can/MD/can continue/VB/continue then/RB/then i/PRP/i come/VBP/come here/RB/here insert/NN/insert it/PRP/it here/RB/here /,/, split/NN/split it/PRP/it and/CC/and one/CD/one guy/NN/guy gets/NNS/gets promoted/VBD/promoted here/NNP/here. so/RB/so the/DT/the fact/NN/fact that/IN/that this/DT/this is/VBZ/is not/RB/not full/JJ/full lets/NNS/lets me/PRP/me accommodate/VBP/accommodate this/DT/this addition/NN/addition key/NN/key here/RB/here without/IN/without crossing/VBG/crossing ripple/NN/ripple effect/NN/effect in/IN/in the/DT/the splitting/NN/splitting process/NNP/process. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 31/CD/31 /:/: 11/CD/11 /CD/) so/RB/so in/IN/in some/DT/some this/DT/this is/VBZ/is like/IN/like a/DT/a one/CD/one pass/NN/pass /,/, you/PRP/you know/VBP/know in/IN/in just/RB/just one/CD/one way/NN/way down/IN/down we/PRP/we have/VBP/have kind/VBN/kind of/IN/of access/NN/access all/DT/all the/DT/the nodes/NNP/nodes. in/IN/in just/RB/just single/JJ/single pass/NN/pass we/PRP/we have/VBP/have access/NN/access to/TO/to all/DT/all the/DT/the nodes/NNS/nodes of/IN/of the/DT/the tree/NN/tree and/CC/and whatever/NN/whatever splitting/VBG/splitting then/RB/then it/PRP/it will/MD/will be/VB/be done/NNP/done. so/RB/so how/WRB/how many/JJ/many disk/NN/disk i/PRP/i was/VBD/was required/VBN/required ?/./? basically/RB/basically it/PRP/it just/RB/just move/VB/move down/IN/down the/DT/the tree/NN/tree once/RB/once /,/, we/PRP/we have/VBP/have to/TO/to access/NN/access every/DT/every node/NN/node and/CC/and then/RB/then every/DT/every time/NN/time you/PRP/you split/VBP/split the/DT/the node/NN/node /,/, you/PRP/you have/VBP/have to/TO/to right/RB/right down/IN/down that/DT/that down/IN/down back/RB/back to/TO/to the/DT/the disk/NNP/disk. its/PRP$/its parent/NN/parent node/NN/node back/RB/back to/TO/to the/DT/the disk/NN/disk and/CC/and one/CD/one new/JJ/new node/NN/node that/WDT/that you/PRP/you create/VBP/create back/RP/back to/TO/to the/DT/the disk/NNP/disk. so/RB/so for/IN/for every/DT/every time/NN/time you/PRP/you split/VBP/split you/PRP/you might/MD/might have/VB/have to/TO/to write/VB/write down/RP/down three/CD/three nodes/NNS/nodes back/RB/back to/TO/to the/DT/the disk/NNP/disk. so/RB/so you/PRP/you will/MD/will have/VB/have to/TO/to read/VB/read as/IN/as many/JJ/many nodes/NNS/nodes as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree and/CC/and how/WRB/how many/JJ/many nodes/NNS/nodes will/MD/will you/PRP/you have/VB/have to/TO/to write/VB/write back/RB/back ?/./? you/PRP/you will/MD/will have/VB/have to/TO/to write/VB/write back/RB/back at/IN/at most/JJS/most three/CD/three times/NNS/times the/DT/the number/NN/number of/IN/of splits/NNS/splits that/WDT/that many/JJ/many nodes/NNS/nodes you/PRP/you will/MD/will have/VB/have to/TO/to write/VB/write back/RB/back to/TO/to the/DT/the disk/NNP/disk. /NNP/( student/NN/student conversation-refer/JJ/conversation-refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 28/CD/28 /CD/) /./. so/RB/so towards/NNS/towards the/DT/the end/NN/end i/PRP/i will/MD/will discuss/VB/discuss what/WP/what are/VBP/are potential/JJ/potential disadvantages/NNS/disadvantages of/IN/of doing/VBG/doing in/IN/in this/DT/this way/NNP/way. if/IN/if you/PRP/you keep/VBP/keep splitting/VBG/splitting because/IN/because you/PRP/you will/MD/will have/VB/have to/TO/to now/RB/now see/VB/see what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do when/WRB/when i/PRP/i have/VBP/have to/TO/to delete/VB/delete a/DT/a key/NNP/key. there/RB/there i/PRP/i will/MD/will try/VB/try and/CC/and let/VB/let ?/./? s/NNS/s see/VBP/see what/WP/what i/PRP/i try/VBP/try and/CC/and do/VB/do that/DT/that and/CC/and then/RB/then it/PRP/it will/MD/will be/VB/be clear/NNP/clear. so/RB/so when/WRB/when i/PRP/i am/VBP/am doing/VBG/doing deletion/NN/deletion /,/, some/DT/some going/VBG/going to/TO/to actually/RB/actually skip/VB/skip the/DT/the code/NN/code i/PRP/i showed/VBD/showed you/PRP/you /,/, so/RB/so you/PRP/you can/MD/can look/VB/look at/IN/at those/DT/those slides/NNS/slides and/CC/and understand/VBP/understand them/PRP/them on/IN/on your/PRP$/your own/NNP/own. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 32/CD/32 /:/: 50/CD/50 /CD/) as/IN/as far/RB/far as/IN/as deleting/VBG/deleting key/JJ/key is/VBZ/is concern/NNP/concern. once/RB/once again/RB/again we/PRP/we recall/VBP/recall the/DT/the earlier/JJR/earlier procedure/NN/procedure /,/, we/PRP/we went/VBD/went down/IN/down the/DT/the tree/NN/tree we/PRP/we deleted/VBD/deleted the/DT/the key/JJ/key /,/, when/WRB/when we/PRP/we deleted/VBD/deleted the/DT/the key/JJ/key that/IN/that node/NN/node could/MD/could have/VB/have less/JJR/less number/NN/number of/IN/of keys/NNS/keys than/IN/than it/PRP/it was/VBD/was supposed/VBN/supposed to/TO/to have/VB/have in/IN/in which/WDT/which case/NN/case we/PRP/we first/RB/first try/VBP/try to/TO/to borrow/VB/borrow /,/, if/IN/if not/RB/not successful/JJ/successful merge/NNP/merge. if/IN/if we/PRP/we merge/VBP/merge we/PRP/we have/VBP/have to/TO/to remove/VB/remove one/CD/one key/JJ/key from/IN/from the/DT/the parent/NN/parent that/IN/that could/MD/could cause/VB/cause the/DT/the ripple/NN/ripple effect/NN/effect /,/, the/DT/the cascading/NN/cascading effect/NNP/effect. so/RB/so that/IN/that we/PRP/we ended/VBD/ended up/RP/up doing/VBG/doing all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the top/NNP/top. now/RB/now we/PRP/we are/VBP/are again/RB/again trying/VBG/trying to/TO/to do/VB/do the/DT/the single/JJ/single pass/NN/pass delete/NN/delete procedure/NN/procedure which/WDT/which means/VBZ/means that/DT/that we/PRP/we just/RB/just going/VBG/going to/TO/to down/VB/down from/IN/from the/DT/the top/JJ/top and/CC/and do/VB/do the/DT/the deletes/NNP/deletes. so/RB/so now/RB/now what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is if/IN/if we/PRP/we encounter/VBP/encounter a/DT/a node/NN/node which/WDT/which has/VBZ/has already/RB/already the/DT/the minimum/JJ/minimum number/NN/number of/IN/of keys/NNP/keys. what/WP/what is/VBZ/is the/DT/the minimum/JJ/minimum of/IN/of keys/NNS/keys in/IN/in a/DT/a node/NN/node ?/./? t/NN/t -1/-NONE-/-1 /,/, if/IN/if it/PRP/it just/RB/just t/VBP/t -1/-NONE-/-1 keys/NNS/keys then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make a/DT/a effort/NN/effort to/TO/to let/VB/let it/PRP/it have/VB/have more/JJR/more than/IN/than t/NN/t -1/-NONE-/-1 keys/VBZ/keys strictly/RB/strictly more/JJR/more /,/, at/IN/at least/JJS/least t/NNP/t. so/RB/so what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to try/NN/try the/DT/the same/JJ/same thing/NN/thing as/IN/as before/IN/before ?/./? first/JJ/first we/PRP/we try/VBP/try to/TO/to borrow/VB/borrow from/IN/from a/DT/a sibling/NN/sibling /,/, if/IN/if we/PRP/we are/VBP/are successful/JJ/successful with/IN/with that/DT/that great/NNP/great. if/IN/if not/RB/not then/RB/then that/WDT/that means/VBZ/means the/DT/the sibling/NN/sibling also/RB/also has/VBZ/has t/VBN/t /:/- 1/CD/1 then/RB/then we/PRP/we merge/VBP/merge and/CC/and when/WRB/when we/PRP/we merge/VBP/merge we/PRP/we bring/VBG/bring one/CD/one from/IN/from above/IN/above and/CC/and why/WRB/why can/MD/can we/PRP/we now/RB/now successfully/RB/successfully bring/VBG/bring one/CD/one from/IN/from above/IN/above because/IN/because the/DT/the upper/JJ/upper has/VBZ/has strictly/RB/strictly more/JJR/more than/IN/than t/NN/t ?/./? 1/CD/1. so/RB/so you/PRP/you can/MD/can do/VB/do the/DT/the entire/JJ/entire thing/NN/thing in/IN/in a/DT/a single/JJ/single pass/NN/pass in/IN/in exactly/RB/exactly this/DT/this manner/NNP/manner. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we being/VBG/being said/VBD/said here/RB/here before/IN/before descending/VBG/descending to/TO/to lower/JJR/lower level/NN/level in/IN/in the/DT/the tree/NN/tree make/VBP/make sure/JJ/sure that/IN/that the/DT/the node/NN/node contains/VBZ/contains at/IN/at least/JJS/least t/NN/t keys/NNP/keys. in/IN/in the/DT/the case/NN/case of/IN/of insertion/NN/insertion we/PRP/we require/VBP/require it/PRP/it contains/VBZ/contains strictly/RB/strictly less/JJR/less than/IN/than 2/CD/2 t/NN/t /:/- 1/CD/1 keys/NNS/keys now/RB/now we/PRP/we say/VBP/say it/PRP/it contain/VBP/contain strictly/RB/strictly more/RBR/more than/IN/than t/NN/t keys/NNP/keys. suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the situation/NNP/situation. so/RB/so we/PRP/we are/VBP/are once/RB/once again/RB/again working/VBG/working with/IN/with the/DT/the t/NN/t equals/NNS/equals three/CD/three /,/, t/NN/t equals/NNS/equals three/CD/three means/NNS/means each/DT/each node/NN/node has/VBZ/has to/TO/to have/VB/have at/IN/at least/JJS/least two/CD/two keys/NNP/keys. so/RB/so this/DT/this node/NN/node it/PRP/it ?/./? s/NNS/s okay/VBP/okay /,/, there/EX/there is/VBZ/is no/DT/no problem/NN/problem with/IN/with this/DT/this node/NN/node why/WRB/why because/IN/because it/PRP/it has/VBZ/has three/CD/three keys/NNS/keys so/RB/so i/PRP/i can/MD/can continue/VB/continue down/NNP/down. i/PRP/i can/MD/can continue/VB/continue down/IN/down i/PRP/i come/VBP/come to/TO/to this/DT/this node/NN/node and/CC/and f/NN/f is/VBZ/is deleted/VBN/deleted from/IN/from here/RB/here and/CC/and there/EX/there is/VBZ/is no/DT/no problem/NNP/problem. but/CC/but if/IN/if i/PRP/i was/VBD/was trying/VBG/trying to/TO/to delete/VB/delete something/NN/something from/IN/from here/RB/here then/RB/then when/WRB/when i/PRP/i encounter/VBP/encounter this/DT/this node/NN/node which/WDT/which has/VBZ/has only/RB/only two/CD/two key/JJ/key the/DT/the minimum/JJ/minimum number/NN/number then/RB/then i/PRP/i will/MD/will try/VB/try to/TO/to do/VB/do something/NN/something write/VB/write then/RB/then and/CC/and there/EX/there before/IN/before proceeding/NN/proceeding down/NNP/down. so/RB/so you/PRP/you know/VBP/know i/PRP/i have/VBP/have actually/RB/actually put/VBN/put down/RP/down all/DT/all the/DT/the cases/NNS/cases here/RB/here where/WRB/where you/PRP/you know/VBP/know the/DT/the key/JJ/key that/IN/that we/PRP/we are/VBP/are trying/VBG/trying to/TO/to delete/VB/delete not/RB/not in/IN/in the/DT/the leaf/NN/leaf then/RB/then you/PRP/you have/VB/have to/TO/to do/VB/do all/PDT/all of/IN/of the/DT/the snaps/NNS/snaps so/RB/so you/PRP/you seen/VBP/seen all/DT/all of/IN/of these/DT/these before/IN/before so/RB/so lets/NNS/lets skip/VBP/skip see/VB/see some/DT/some of/IN/of this/DT/this and/CC/and this/DT/this was/VBD/was the/DT/the case/NN/case when/WRB/when we/PRP/we have/VBP/have to/TO/to merge/NNP/merge. so/RB/so sorry/JJ/sorry just/RB/just once/RB/once again/RB/again let/VB/let me/PRP/me make/VB/make sure/JJ/sure what/WP/what right/NNP/right. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 36/CD/36 /:/: 12/CD/12 /CD/) so/RB/so if/IN/if this/DT/this is/VBZ/is the/DT/the setting/NN/setting if/IN/if the/DT/the particular/JJ/particular node/NN/node has/VBZ/has only/RB/only 2/CD/2 /:/- 1/CD/1 keys/NNS/keys then/RB/then we/PRP/we have/VBP/have take/VBP/take action/NN/action to/TO/to ensure/VB/ensure that/IN/that it/PRP/it has/VBZ/has at/IN/at least/JJS/least t/NN/t keys/NNS/keys before/IN/before we/PRP/we continue/VBP/continue down/RP/down and/CC/and first/RB/first thing/VBG/thing is/VBZ/is that/IN/that we/PRP/we can/MD/can borrow/VB/borrow from/IN/from the/DT/the sibling/NN/sibling and/CC/and if/IN/if not/RB/not then/RB/then we/PRP/we merge/VBP/merge so/RB/so this/DT/this is/VBZ/is the/DT/the picture/NNP/picture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 36/CD/36 /:/: 43/CD/43 /CD/) let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this one/CD/one /,/, we/PRP/we trying/VBG/trying to/TO/to delete/VB/delete b/NNP/b. we/PRP/we come/VBP/come here/RB/here there/RB/there is/VBZ/is no/DT/no problem/NN/problem here/RB/here and/CC/and when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to delete/VB/delete here/RB/here i/PRP/i have/VBP/have borrowed/VBN/borrowed one/CD/one from/IN/from the/DT/the sibling/NN/sibling /,/, you/PRP/you may/MD/may have/VB/have seen/VBN/seen many/JJ/many example/NN/example of/IN/of this/DT/this by/IN/by now/NNP/now. so/RB/so how/WRB/how do/VBP/do you/PRP/you borrow/VB/borrow /,/, one/CD/one goes/VBZ/goes up/RP/up and/CC/and one/CD/one comes/NNS/comes down/IN/down so/RB/so this/DT/this is/VBZ/is the/DT/the situation/NN/situation happening/VBG/happening here/RB/here and/CC/and if/IN/if we/PRP/we can/MD/can not/RB/not borrow/VB/borrow then/RB/then you/PRP/you merge/VBP/merge same/JJ/same as/IN/as before/IN/before you/PRP/you are/VBP/are deleting/VBG/deleting d/NNP/d. so/RB/so you/PRP/you come/VBP/come here/RB/here c/JJ/c l/NN/l when/WRB/when you/PRP/you are/VBP/are deleting/VBG/deleting d/NN/d this/DT/this is/VBZ/is already/RB/already has/VBZ/has problem/NN/problem because/IN/because it/PRP/it has/VBZ/has minimum/JJ/minimum number/NN/number of/IN/of nodes/NNS/nodes so/IN/so you/PRP/you going/VBG/going trying/VBG/trying borrow/NN/borrow one/CD/one from/IN/from the/DT/the sibling/NN/sibling but/CC/but you/PRP/you are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be successful/JJ/successful in/IN/in borrowing/NN/borrowing one/CD/one because/IN/because that/DT/that also/RB/also has/VBZ/has minimum/JJ/minimum so/RB/so you/PRP/you merge/VBP/merge and/CC/and you/PRP/you get/VBP/get c/JJ/c l/NN/l p/NN/p t/NN/t x/NN/x bringing/VBG/bringing one/CD/one down/IN/down and/CC/and then/RB/then you/PRP/you go/VBP/go head/RB/head and/CC/and you/PRP/you delete/VBP/delete d/JJ/d from/IN/from here/NNP/here. so/RB/so this/DT/this is/VBZ/is the/DT/the situation/NN/situation that/IN/that ?/./? s/NNS/s going/VBG/going to/TO/to happen/NNP/happen. then/RB/then this/DT/this also/RB/also illustrates/VBZ/illustrates why/WRB/why this/DT/this is/VBZ/is the/DT/the bads/NNS/bads key/VBP/key /,/, who/WP/who can/MD/can tell/VB/tell me/PRP/me why/WRB/why so/RB/so this/DT/this is/VBZ/is answering/VBG/answering the/DT/the question/NN/question that/IN/that he/PRP/he had/VBD/had raised/VBN/raised ?/./? why/WRB/why did/VBD/did we/PRP/we do/VBP/do the/DT/the same/JJ/same thing/NN/thing for/IN/for the/DT/the red/NN/red black/NN/black tree/NN/tree is/VBZ/is and/CC/and the/DT/the ab/NN/ab trees/NNS/trees ?/./? student/NN/student /:/: so/RB/so we/PRP/we could/MD/could have/VB/have delete/JJ/delete either/NN/either we/PRP/we will/MD/will have/VB/have ?/./? staff/NN/staff /:/: okay/NN/okay but/CC/but /:/[ student/NN/student conversation/NN/conversation /:/] /./. okay/NN/okay i/PRP/i am/VBP/am looking/VBG/looking for/IN/for one/CD/one other/JJ/other answer/NN/answer which/WDT/which is/VBZ/is perhaps/RB/perhaps who/WP/who can/MD/can /VB/[ student/NN/student conversation/NN/conversation /:/] good/JJ/good /,/, split/JJ/split again/NN/again see/NN/see what/WP/what ?/./? s/NNS/s going/VBG/going to/TO/to happen/VB/happen i/PRP/i just/RB/just deleted/VBD/deleted and/CC/and this/DT/this is/VBZ/is the/DT/the picture/NN/picture i/PRP/i got/VBD/got /,/, suppose/NN/suppose i/PRP/i insert/VBP/insert now/RB/now what/WP/what ?/./? s/NNS/s going/VBG/going to/TO/to happen/VB/happen i/PRP/i am/VBP/am going/VBG/going to/TO/to go/VB/go back/RB/back this/DT/this one/CD/one /,/, suppose/NN/suppose i/PRP/i delete/VBP/delete i/PRP/i am/VBP/am going/VBG/going to/TO/to come/VB/come back/RB/back to/TO/to this/NNP/this. suppose/NN/suppose i/PRP/i insert/VBP/insert /,/, this/DT/this kind/NN/kind of/IN/of going/VBG/going to/TO/to go/VB/go back/RB/back and/CC/and forth/JJ/forth between/IN/between this/DT/this and/CC/and i/PRP/i am/VBP/am spending/VBG/spending lot/NN/lot of/IN/of works/NNS/works in/IN/in doing/VBG/doing this/DT/this because/IN/because splitting/NN/splitting the/DT/the node/NN/node lots/NNS/lots of/IN/of pointer/NN/pointer moments/NNS/moments and/CC/and all/DT/all of/IN/of that/NNP/that. so/RB/so this/DT/this key/JJ/key does/VBZ/does not/RB/not work/VB/work in/IN/in very/RB/very well/RB/well then/RB/then this/DT/this we/PRP/we have/VBP/have this/DT/this kind/NN/kind of/IN/of things/NNS/things happening/NNP/happening. so/RB/so insert/VB/insert and/CC/and deletes/NNS/deletes are/VBP/are very/RB/very highly/RB/highly interspersed/VBN/interspersed /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a block/NN/block of/IN/of insert/NN/insert and/CC/and block/NN/block of/IN/of delete/JJ/delete happening/NN/happening then/RB/then it/PRP/it ?/./? s/NNS/s okay/NNP/okay. then/RB/then you/PRP/you can/MD/can still/RB/still work/VB/work with/IN/with the/DT/the scheme/NN/scheme fine/NNP/fine. because/IN/because if/IN/if you/PRP/you had/VBD/had just/RB/just deletes/VBZ/deletes happening/VBG/happening /NN/[ hindi/NN/hindi conversation/NN/conversation /:/] so/RB/so they/PRP/they would/MD/would be/VB/be no/RB/no problem/NNP/problem. this/DT/this has/VBZ/has large/JJ/large number/NN/number of/IN/of keys/NNS/keys now/RB/now so/RB/so it/PRP/it can/MD/can handle/VB/handle whole/JJ/whole lots/NNS/lots of/IN/of delete/JJ/delete without/IN/without significant/JJ/significant trouble/NNP/trouble. so/RB/so if/IN/if you/PRP/you had/VBD/had large/JJ/large sequence/NN/sequence of/IN/of delete/JJ/delete then/RB/then this/DT/this is/VBZ/is a/DT/a fine/NN/fine strategy/NN/strategy or/CC/or if/IN/if you/PRP/you had/VBD/had long/RB/long sequence/NN/sequence of/IN/of insert/NN/insert but/CC/but if/IN/if you/PRP/you had/VBD/had these/DT/these things/NNS/things alternating/VBG/alternating vary/JJ/vary often/RB/often then/RB/then would/MD/would be/VB/be in/IN/in some/DT/some trouble/NNP/trouble. so/RB/so once/RB/once again/RB/again what/WP/what are/VBP/are the/DT/the disk/NN/disk /,/, i/PRP/i was/VBD/was going/VBG/going to/TO/to look/VB/look like/IN/like ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 39/CD/39 /:/: 52/CD/52 /CD/) so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to read/VB/read as/IN/as many/JJ/many nodes/NNS/nodes as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree and/CC/and each/DT/each point/NN/point when/WRB/when i/PRP/i am/VBP/am borrowing/VBG/borrowing one/CD/one from/IN/from the/DT/the sibling/NN/sibling or/CC/or merging/VBG/merging one/CD/one from/IN/from the/DT/the sibling/NN/sibling and/CC/and basically/RB/basically modify/VB/modify only/RB/only my/PRP$/my sibling/NN/sibling node/NNP/node. so/RB/so if/IN/if i/PRP/i am/VBP/am doing/VBG/doing any/DT/any of/IN/of those/DT/those operation/NN/operation i/PRP/i might/MD/might have/VB/have to/TO/to right/JJ/right back/NN/back my/PRP$/my sibling/NN/sibling /,/, my/PRP$/my one/CD/one node/NN/node and/CC/and the/DT/the parent/NN/parent node/NN/node /,/, by/IN/by the/DT/the parent/NN/parent node/NN/node because/IN/because even/RB/even when/WRB/when i/PRP/i borrow/VBP/borrow from/IN/from the/DT/the sibling/NN/sibling one/CD/one key/JJ/key goes/NNS/goes up/IN/up and/CC/and one/CD/one key/JJ/key comes/NNS/comes down/IN/down from/IN/from the/DT/the parent/NNP/parent. so/RB/so its/PRP$/its parent/NN/parent nodes/NNS/nodes also/RB/also gets/VBZ/gets modified/VBN/modified or/CC/or even/RB/even then/RB/then merging/VBG/merging again/RB/again the/DT/the parent/NN/parent gets/VBZ/gets modified/VBN/modified /,/, so/RB/so every/DT/every time/NN/time i/PRP/i do/VBP/do some/DT/some borrow/NN/borrow or/CC/or merge/VB/merge with/IN/with the/DT/the sibling/VBG/sibling i/PRP/i will/MD/will have/VB/have to/TO/to right/JJ/right back/NN/back three/CD/three node/NN/node and/CC/and so/RB/so that/IN/that gives/NNS/gives the/DT/the number/NN/number of/IN/of disk/NN/disk right/RB/right that/IN/that we/PRP/we have/VBP/have to/TO/to do/VB/do a/DT/a thing/NNP/thing. so/RB/so again/RB/again this/DT/this two/CD/two pass/NNS/pass operation/NN/operation we/PRP/we have/VBP/have actually/RB/actually seen/VBN/seen before/NNP/before. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 40/CD/40 /:/: 35/CD/35 /CD/) so/RB/so this/DT/this was/VBD/was single/JJ/single pass/NN/pass we/PRP/we have/VBP/have doing/VBG/doing things/NNS/things /,/, the/DT/the two/CD/two pass/NNS/pass we/PRP/we have/VBP/have already/RB/already seen/NNP/seen. so/RB/so you/PRP/you first/RB/first go/VBP/go down/RB/down and/CC/and then/RB/then you/PRP/you go/VBP/go up/RP/up as/IN/as much/JJ/much as/IN/as necessary/JJ/necessary so/IN/so to/TO/to say/NNP/say. but/CC/but in/IN/in the/DT/the case/NN/case of/IN/of disk/NN/disk access/NN/access you/PRP/you have/VB/have to/TO/to think/VB/think carefully/RB/carefully or/CC/or you/PRP/you have/VBP/have to/TO/to organize/VB/organize the/DT/the things/NNS/things more/JJR/more carefully/RB/carefully because/IN/because if/IN/if you/PRP/you first/RB/first make/VBP/make one/CD/one pass/NN/pass down/IN/down and/CC/and then/RB/then you/PRP/you make/VBP/make a/DT/a pass/NN/pass all/DT/all the/DT/the way/NN/way back/RB/back up/IN/up then/RB/then you/PRP/you spending/NN/spending twice/NN/twice as/RB/as much/JJ/much time/NN/time as/IN/as you/PRP/you should/MD/should have/VB/have by/IN/by just/RB/just having/VBG/having made/VBN/made a/DT/a single/JJ/single pass/NNP/pass. so/RB/so one/CD/one thing/NN/thing you/PRP/you can/MD/can do/VB/do is/VBZ/is that/IN/that when/WRB/when you/PRP/you making/VBG/making first/JJ/first pass/NN/pass down/IN/down you/PRP/you keeps/VBZ/keeps all/DT/all those/DT/those blocks/NNS/blocks read/VBP/read in/IN/in memory/NNP/memory. how/WRB/how many/JJ/many blocks/NNS/blocks is/VBZ/is that/IN/that ?/./? how/WRB/how many/JJ/many pages/NNS/pages is/VBZ/is that/IN/that just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree which/WDT/which is/VBZ/is not/RB/not too/RB/too much/NNP/much. you/PRP/you keep/VB/keep them/PRP/them in/IN/in memory/NNP/memory. why/WRB/why do/VBP/do we/PRP/we keep/VB/keep them/PRP/them in/IN/in memory/NN/memory /,/, because/IN/because you/PRP/you might/MD/might require/VB/require them/PRP/them on/IN/on the/DT/the way/NN/way back/RB/back in/IN/in second/JJ/second pass/NNP/pass. so/RB/so those/DT/those are/VBP/are in/IN/in optimization/NN/optimization that/IN/that you/PRP/you can/MD/can do/VB/do to/TO/to try/VB/try and/CC/and reduce/VB/reduce the/DT/the type/NN/type because/IN/because as/IN/as i/PRP/i said/VBD/said most/JJS/most of/IN/of the/DT/the time/NN/time here/RB/here spend/VBP/spend in/IN/in the/DT/the disk/NN/disk access/NN/access /,/, you/PRP/you have/VBP/have to/TO/to reduce/VB/reduce the/DT/the number/NN/number of/IN/of disk/NN/disk access/NN/access as/IN/as much/JJ/much as/IN/as possible/NNP/possible. so/RB/so with/IN/with that/DT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to end/VB/end this/DT/this class/NN/class today/NN/today so/RB/so this/DT/this was/VBD/was mainly/RB/mainly meant/JJ/meant as/IN/as a/DT/a recap/NN/recap of/IN/of a/DT/a data/NN/data structure/NN/structure that/WDT/that we/PRP/we saw/VBD/saw today/NN/today was/VBD/was just/RB/just small/JJ/small extension/NN/extension of/IN/of the/DT/the ab/NN/ab tree/NN/tree but/CC/but it/PRP/it is/VBZ/is specifically/RB/specifically for/IN/for disk/NN/disk based/VBN/based accesses/NNS/accesses and/CC/and this/DT/this useful/JJ/useful in/IN/in that/DT/that setting/NNP/setting. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 17/CD/17 case/NN/case study/NN/study /:/: searching/VBG/searching for/IN/for patterns/NNS/patterns so/RB/so today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about pattern/NN/pattern searching/VBG/searching or/CC/or pattern/NN/pattern matching/NNP/matching. the/DT/the setting/NN/setting is/VBZ/is that/IN/that we/PRP/we are/VBP/are given/VBN/given a/DT/a piece/NN/piece of/IN/of text/NNP/text. let/NN/let ?/./? s/NNS/s say/VBP/say ?/./? t/NN/t ?/./? is/VBZ/is our/PRP$/our text/NN/text which/WDT/which is/VBZ/is of/IN/of length/NN/length ?/./? n/NN/n ?/./? /./. so/RB/so it/PRP/it is/VBZ/is ?/./? n/NN/n ?/./? characters/NNS/characters over/IN/over some/DT/some alphabets/NNP/alphabets. so/RB/so for/IN/for today/NN/today let/NN/let ?/./? s/NNS/s assume/VBP/assume that/IN/that it/PRP/it ?/./? s/NNS/s the/DT/the english/JJ/english alphabet/NNP/alphabet. we/PRP/we have/VBP/have to/TO/to search/VB/search for/IN/for a/DT/a pattern/NN/pattern ?/./? p/NN/p ?/./? in/IN/in this/DT/this text/NNP/text. you/PRP/you have/VBP/have all/DT/all come/VBN/come across/RP/across this/DT/this problem/NNP/problem. you/PRP/you are/VBP/are using/VBG/using a/DT/a certain/JJ/certain editor/NNP/editor. you/PRP/you want/VBP/want to/TO/to find/VB/find out/RP/out all/DT/all occurrences/NNS/occurrences of/IN/of a/DT/a certain/JJ/certain work/NNP/work. most/JJS/most editors/NNS/editors will/MD/will provide/VB/provide you/PRP/you the/DT/the facility/NNP/facility. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 01/CD/01 /:/: 17/CD/17 /CD/) the/DT/the browser/NN/browser provides/VBZ/provides you/PRP/you the/DT/the facility/NNP/facility. many/JJ/many things/NNS/things provide/VBP/provide this/DT/this kind/NN/kind of/IN/of facility/NN/facility that/IN/that you/PRP/you can/MD/can search/VB/search for/IN/for a/DT/a particular/JJ/particular pattern/NNP/pattern. not/RB/not one/CD/one occurrence/NN/occurrence but/CC/but all/DT/all occurrences/NNS/occurrences of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so question/NN/question is/VBZ/is /:/: how/WRB/how are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do it/PRP/it ?/./? this/DT/this is/VBZ/is also/RB/also the/DT/the exact/JJ/exact matching/NN/matching problem/NNP/problem. there/EX/there are/VBP/are versions/NNS/versions where/WRB/where you/PRP/you can/MD/can not/RB/not do/VB/do an/DT/an exact/JJ/exact matching/NNP/matching. as/IN/as in/IN/in you/PRP/you can/MD/can search/VB/search for/IN/for the/DT/the pattern/NN/pattern in/IN/in an/DT/an approximate/NN/approximate manner/NNP/manner. that/IN/that means/VBZ/means occurrences/NNS/occurrences of/IN/of the/DT/the pattern/NN/pattern in/IN/in that/DT/that text/NN/text where/WRB/where it/PRP/it matches/VBZ/matches most/JJS/most of/IN/of the/DT/the texts/NNP/texts. if/IN/if there/EX/there is/VBZ/is difference/NN/difference in/IN/in one/CD/one character/NN/character /,/, it/PRP/it is/VBZ/is okay/NNP/okay. difference/NN/difference in/IN/in two/CD/two characters/NNS/characters /,/, it/PRP/it is/VBZ/is okay/NNP/okay. but/CC/but at/IN/at most/JJS/most other/JJ/other places/NNS/places it/PRP/it matches/NNP/matches. so/RB/so how/WRB/how would/MD/would one/CD/one solve/VB/solve this/DT/this problem/NN/problem ?/./? what/WP/what are/VBP/are the/DT/the applications/NNS/applications ?/./? this/DT/this comes/VBZ/comes up/RP/up in/IN/in text/NN/text editing/NNP/editing. as/IN/as you/PRP/you can/MD/can imagine/VB/imagine /,/, it/PRP/it comes/VBZ/comes in/IN/in information/NN/information retrieval/NNP/retrieval. one/CD/one big/JJ/big application/NN/application is/VBZ/is bio/NN/bio informatics/NNS/informatics where/WRB/where your/PRP$/your text/NN/text would/MD/would be/VB/be a/DT/a large/JJ/large database/NN/database with/IN/with sequence/NN/sequence of/IN/of nucleotides/NNS/nucleotides in/IN/in it/PRP/it and/CC/and you/PRP/you are/VBP/are searching/VBG/searching for/IN/for a/DT/a particular/JJ/particular gene/NN/gene or/CC/or a/DT/a particular/JJ/particular sequence/NN/sequence of/IN/of nucleotides/NNS/nucleotides and/CC/and you/PRP/you want/VBP/want to/TO/to find/VB/find out/RP/out where/WRB/where all/DT/all they/PRP/they occur/NNP/occur. so/RB/so this/DT/this is/VBZ/is an/DT/an example/NN/example where/WRB/where the/DT/the alphabet/NN/alphabet that/IN/that you/PRP/you have/VBP/have is/VBZ/is small/NNP/small. if/IN/if it/PRP/it ?/./? s/NNS/s a/DT/a dna/NN/dna then/RB/then the/DT/the alphabet/NN/alphabet has/VBZ/has 4/CD/4 bases/NNS/bases in/IN/in it/NNP/it. but/CC/but if/IN/if it/PRP/it is/VBZ/is a/DT/a protein/NN/protein sequence/NN/sequence /,/, then/RB/then it/PRP/it has/VBZ/has 20/CD/20 bases/NNS/bases or/CC/or it/PRP/it is/VBZ/is an/DT/an alphabet/NN/alphabet of/IN/of size/NN/size 20/CD/20. so/RB/so what/WP/what is/VBZ/is the/DT/the na/NN/na ?/./? ve/NN/ve method/NN/method of/IN/of doing/VBG/doing this/DT/this ?/./? suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the text/NN/text and/CC/and i/PRP/i have/VBP/have a/DT/a certain/JJ/certain pattern/NN/pattern let/NN/let ?/./? s/NNS/s say/VBP/say the/DT/the pattern/NN/pattern is/VBZ/is ag/NN/ag ag/NNP/ag. this/DT/this is/VBZ/is the/DT/the text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 29/CD/29 /CD/) so/RB/so what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by the/DT/the naive/JJ/naive method/NN/method ?/./? i/PRP/i will/MD/will put/VB/put the/DT/the pattern/NN/pattern at/IN/at the/DT/the first/JJ/first place/NN/place and/CC/and i/PRP/i will/MD/will start/VB/start matching/JJ/matching the/DT/the pattern/NN/pattern against/IN/against the/DT/the text/NNP/text. in/IN/in the/DT/the third/JJ/third place/NN/place /,/, i/PRP/i find/VBP/find the/DT/the mismatch/NNP/mismatch. so/RB/so what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? i/PRP/i start/VBP/start again/RB/again from/IN/from the/DT/the second/JJ/second element/NNP/element. is/VBZ/is it/PRP/it clear/RB/clear to/TO/to everyone/VB/everyone why/WRB/why i/PRP/i should/MD/should start/VB/start from/IN/from the/DT/the second/JJ/second position/NN/position and/CC/and not/RB/not from/IN/from the/DT/the fifth/JJ/fifth position/NN/position ?/./? what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is move/VB/move the/DT/the pattern/NN/pattern by/IN/by one/CD/one step/NNP/step. we/PRP/we will/MD/will see/VB/see examples/NNS/examples of/IN/of why/WRB/why this/DT/this one/CD/one step/NN/step was/VBD/was critical/JJ/critical and/CC/and not/RB/not more/NNP/more. clearly/RB/clearly by/IN/by moving/NN/moving it/PRP/it by/IN/by one/CD/one step/NN/step /,/, we/PRP/we are/VBP/are not/RB/not losing/VBG/losing anything/NNP/anything. we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to find/VB/find all/PDT/all the/DT/the occurrences/NNS/occurrences of/IN/of the/DT/the particular/JJ/particular pattern/NNP/pattern. so/RB/so we/PRP/we do/VBP/do this/DT/this again/NNP/again. there/RB/there is/VBZ/is mismatch/JJ/mismatch right/NN/right at/IN/at the/DT/the very/RB/very first/JJ/first step/NNP/step. so/RB/so we/PRP/we will/MD/will move/VB/move forward/RB/forward by/IN/by one/CD/one step/NN/step and/CC/and now/RB/now here/RB/here you/PRP/you see/VBP/see this/DT/this is/VBZ/is the/DT/the mismatch/NN/mismatch of/IN/of the/DT/the fourth/JJ/fourth position/NNP/position. so/RB/so how/WRB/how much/JJ/much should/MD/should i/PRP/i move/VB/move it/PRP/it ?/./? we/PRP/we will/MD/will keep/VB/keep moving/VBG/moving by/IN/by one/NNP/one. even/RB/even here/RB/here there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch at/IN/at this/DT/this place/NN/place and/CC/and so/RB/so you/PRP/you will/MD/will say/VB/say that/IN/that this/DT/this is/VBZ/is one/CD/one occurrence/NNP/occurrence. so/RB/so this/DT/this is/VBZ/is the/DT/the question/NNP/question. why/WRB/why are/VBP/are we/PRP/we moving/VBG/moving by/IN/by 1/CD/1 and/CC/and not/RB/not by/IN/by 4/CD/4 ?/./? if/IN/if we/PRP/we were/VBD/were moving/VBG/moving by/IN/by 4/CD/4 /,/, we/PRP/we could/MD/could have/VB/have skipped/VBN/skipped this/DT/this thing/NNP/thing. so/RB/so suppose/RB/suppose i/PRP/i moved/VBD/moved at/IN/at 4/CD/4 at/IN/at this/DT/this position/NN/position /,/, then/RB/then where/WRB/where would/MD/would i/VB/i end/NN/end up/RP/up in/IN/in ?/./? it/PRP/it is/VBZ/is a/DT/a g/NN/g a/DT/a g/NN/g here/RB/here and/CC/and then/RB/then if/IN/if i/PRP/i moved/VBD/moved at/IN/at 4/CD/4 again/RB/again /,/, then/RB/then i/PRP/i would/MD/would end/VB/end up/RP/up a/DT/a g/NN/g a/DT/a g/NN/g and/CC/and so/RB/so i/PRP/i would/MD/would have/VB/have missed/VBN/missed the/DT/the occurrence/NN/occurrence of/IN/of the/DT/the pattern/NN/pattern because/IN/because the/DT/the pattern/NN/pattern is/VBZ/is not/RB/not occurring/VBG/occurring at/IN/at multiples/NNS/multiples of/IN/of 4/CD/4 or/CC/or such/JJ/such things/NNP/things. it/PRP/it could/MD/could occur/VB/occur anywhere/RB/anywhere in/IN/in the/DT/the text/NNP/text. so/RB/so moving/VBG/moving by/IN/by 4/CD/4 is/VBZ/is a/DT/a wrong/JJ/wrong thing/NN/thing to/TO/to do/NNP/do. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 40/CD/40 /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? n/NN/n m/NNP/m. so/RB/so for/IN/for every/DT/every position/NN/position that/IN/that i/PRP/i put/VBD/put the/DT/the pattern/NN/pattern /,/, i/PRP/i might/MD/might have/VB/have to/TO/to match/VB/match up/RP/up to/TO/to n/VB/n places/NNP/places. it/PRP/it might/MD/might be/VB/be that/IN/that only/RB/only at/IN/at the/DT/the very/RB/very last/JJ/last place/NN/place /,/, we/PRP/we find/VBP/find out/RP/out the/DT/the mismatch/NN/mismatch in/IN/in which/WDT/which case/NN/case i/PRP/i am/VBP/am matching/VBG/matching it/PRP/it at/IN/at all/DT/all the/DT/the places/NNS/places of/IN/of the/DT/the pattern/NNP/pattern. how/WRB/how long/JJ/long was/VBD/was the/DT/the pattern/NN/pattern ?/./? so/RB/so for/IN/for each/DT/each location/NN/location of/IN/of the/DT/the pattern/NN/pattern we/PRP/we might/MD/might have/VB/have to/TO/to do/VB/do ?/./? m/NN/m ?/./? matches/NNS/matches and/CC/and how/WRB/how many/JJ/many different/JJ/different positions/NNS/positions of/IN/of the/DT/the patterns/NNS/patterns are/VBP/are there/RB/there ?/./? n/NN/n different/NN/different positions/NNP/positions. so/RB/so i/PRP/i might/MD/might be/VB/be spending/NN/spending as/IN/as much/JJ/much as/IN/as m/NN/m n/NN/n time/NNP/time. the/DT/the time/NN/time complexity/NN/complexity then/RB/then is/VBZ/is order/NN/order m/NN/m n/NNP/n. space/NN/space complexity/NN/complexity is/VBZ/is also/RB/also going/VBG/going to/TO/to be/VB/be an/DT/an issue/NNP/issue. how/WRB/how much/JJ/much space/NN/space we/PRP/we require/VBP/require ?/./? is/VBZ/is this/DT/this clear/JJ/clear that/IN/that we/PRP/we require/VBP/require only/RB/only m/NNP/m. we/PRP/we just/RB/just need/VBP/need to/TO/to store/VB/store the/DT/the text/NNP/text. we/PRP/we need/VBP/need to/TO/to store/VB/store the/DT/the pattern/NNP/pattern. we/PRP/we don/VBP/don ?/./? t/NN/t need/NN/need to/TO/to any/DT/any other/JJ/other additional/JJ/additional space/NNP/space. we/PRP/we don/VBP/don ?/./? t/NN/t need/NN/need another/DT/another array/NN/array to/TO/to move/VB/move the/DT/the pattern/NN/pattern in/IN/in it/NNP/it. this/DT/this moving/NN/moving the/DT/the pattern/NN/pattern is/VBZ/is only/RB/only to/TO/to show/VB/show it/PRP/it to/TO/to you/PRP/you here/RB/here that/IN/that you/PRP/you can/MD/can always/RB/always increment/VB/increment your/PRP$/your index/NN/index appropriately/NNP/appropriately. so/RB/so this/DT/this unfortunately/RB/unfortunately is/VBZ/is not/RB/not too/RB/too good/NNP/good. why/WRB/why is/VBZ/is it/PRP/it not/RB/not good/JJ/good ?/./? it/PRP/it ?/./? s/NNS/s too/RB/too high/NNP/high. so/RB/so if/IN/if you/PRP/you have/VBP/have a/DT/a huge/JJ/huge document/NN/document /,/, m/NN/m is/VBZ/is very/RB/very large/JJ/large and/CC/and your/PRP$/your pattern/NN/pattern is/VBZ/is also/RB/also reasonably/RB/reasonably sized/NNP/sized. let/VB/let ?/./? s/NNS/s say/VBP/say 20/CD/20 or/CC/or 30/CD/30 characters/NNS/characters /,/, then/RB/then you/PRP/you are/VBP/are going/VBG/going to/TO/to spend/VB/spend a/DT/a lot/NN/lot of/IN/of time/NNP/time. so/RB/so this/DT/this is/VBZ/is not/RB/not the/DT/the way/NN/way it/PRP/it is/VBZ/is done/NNP/done. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at another/DT/another solution/NN/solution today/NNP/today. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at a/DT/a third/JJ/third solution/NN/solution in/IN/in the/DT/the next/JJ/next class/NNP/class. so/RB/so this/DT/this will/MD/will be/VB/be the/DT/the sequence/NN/sequence of/IN/of improvements/NNP/improvements. we/PRP/we will/MD/will improve/VB/improve the/DT/the time/NN/time complexity/NN/complexity today/NN/today from/IN/from m/NN/m n/NN/n to/TO/to something/NN/something else/NNP/else. i/PRP/i will/MD/will see/VB/see what/WP/what that/IN/that is/NNP/is. so/RB/so how/WRB/how can/MD/can we/PRP/we do/VBP/do better/RBR/better ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 48/CD/48 /CD/) so/RB/so when/WRB/when a/DT/a mismatch/NN/mismatch is/VBZ/is detected/VBN/detected at/IN/at a/DT/a certain/JJ/certain position/NN/position /,/, let/VB/let ?/./? s/NNS/s say/VBP/say at/IN/at position/NN/position ?/./? k/NN/k ?/./? in/IN/in the/DT/the pattern/NN/pattern string/VBG/string /,/, what/WP/what do/VBP/do we/PRP/we know/VB/know ?/./? we/PRP/we know/VBP/know that/IN/that we/PRP/we have/VBP/have matched/VBN/matched k-1/-NONE-/k-1 characters/NNS/characters before/IN/before that/IN/that and/CC/and i/PRP/i will/MD/will try/VB/try and/CC/and take/VB/take advantage/NN/advantage of/IN/of this/DT/this fact/NN/fact that/IN/that we/PRP/we have/VBP/have already/RB/already matched/VBN/matched k-1/-NONE-/k-1 characters/NNP/characters. let/VB/let ?/./? s/NNS/s see/VBP/see what/WP/what i/PRP/i mean/VBP/mean by/IN/by this/NNP/this. so/RB/so here/RB/here the/DT/the mismatch/NN/mismatch is/VBZ/is detected/VBN/detected at/IN/at position/NN/position 3/CD/3 of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so what/WP/what do/VBP/do i/PRP/i know/VB/know ?/./? i/PRP/i know/VBP/know that/IN/that the/DT/the first/JJ/first two/CD/two characters/NNS/characters of/IN/of the/DT/the pattern/NN/pattern are/VBP/are the/DT/the same/JJ/same as/IN/as the/DT/the last/JJ/last two/CD/two characters/NNS/characters of/IN/of the/DT/the text/NNP/text. so/RB/so i/PRP/i can/MD/can use/VB/use this/DT/this information/NN/information to/TO/to try/VB/try and/CC/and move/VB/move the/DT/the pattern/NN/pattern not/RB/not by/IN/by one/CD/one step/NN/step but/CC/but by/IN/by more/RBR/more steps/NNP/steps. why/WRB/why ?/./? let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the second/NNP/second. so/RB/so this/DT/this is/VBZ/is c/NNP/c. there/RB/there is/VBZ/is a/DT/a mismatch/NN/mismatch here/NNP/here. so/RB/so what/WP/what do/VBP/do i/PRP/i know/VB/know ?/./? even/RB/even if/IN/if i/PRP/i did/VBD/did not/RB/not know/VB/know what/WP/what was/VBD/was here/RB/here /,/, i/PRP/i know/VBP/know since/IN/since this/DT/this is/VBZ/is the/DT/the mismatch/NN/mismatch i/PRP/i know/VBP/know that/IN/that here/RB/here /,/, at/IN/at this/DT/this position/NN/position in/IN/in text/NN/text it/PRP/it is/VBZ/is a/DT/a ?/./? g/NN/g ?/./? and/CC/and this/DT/this position/NN/position text/NN/text it/PRP/it is/VBZ/is an/DT/an ?/./? a/DT/a ?/./? /./. now/RB/now if/IN/if i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by one/CD/one unit/NN/unit what/WP/what happens/NNS/happens ?/./? i/PRP/i know/VBP/know that/IN/that in/IN/in this/DT/this position/NN/position in/IN/in the/DT/the text/NN/text it/PRP/it is/VBZ/is a/DT/a ?/./? g/NN/g ?/./? /./. you/PRP/you understand/VBP/understand why/WRB/why i/PRP/i know/VBP/know that/IN/that ?/./? i/PRP/i don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to look/VB/look at/IN/at the/DT/the text/NNP/text. now/RB/now that/WDT/that although/IN/although the/DT/the text/NN/text is/VBZ/is here/RB/here in/IN/in front/NN/front of/IN/of you/PRP/you /,/, you/PRP/you can/MD/can erase/VB/erase these/DT/these two/CD/two things/NNS/things and/CC/and yet/RB/yet you/PRP/you know/VBP/know that/IN/that this/DT/this is/VBZ/is ?/./? g/NN/g ?/./? and/CC/and this/DT/this is/VBZ/is ?/./? a/DT/a ?/./? and/CC/and since/IN/since this/DT/this is/VBZ/is a/DT/a ?/./? g/NN/g ?/./? /,/, there/EX/there is/VBZ/is no/DT/no pointer/NN/pointer in/IN/in shifting/NN/shifting in/IN/in one/CD/one step/NN/step because/IN/because then/RB/then this/DT/this would/MD/would never/RB/never match/VB/match with/IN/with this/NNP/this. we/PRP/we will/MD/will have/VB/have to/TO/to shift/VB/shift by/IN/by one/CD/one step/NN/step if/IN/if this/DT/this were/VBD/were also/RB/also ?/./? a/NNP/a. if/IN/if this/DT/this were/VBD/were in/IN/in ?/./? a/DT/a ?/./? /,/, then/RB/then we/PRP/we would/MD/would have/VB/have shifted/VBN/shifted it/PRP/it at/IN/at by/IN/by one/CD/one step/NNP/step. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the idea/NN/idea and/CC/and we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to implement/VB/implement this/DT/this idea/NNP/idea. now/RB/now again/RB/again what/WP/what do/VBP/do we/PRP/we see/VB/see ?/./? we/PRP/we see/VBP/see that/IN/that the/DT/the mismatch/NN/mismatch at/IN/at the/DT/the very/RB/very first/JJ/first step/NNP/step. the/DT/the mismatch/NN/mismatch is/VBZ/is at/IN/at the/DT/the fourth/JJ/fourth position/NN/position of/IN/of the/DT/the pattern/NNP/pattern. now/RB/now should/MD/should i/PRP/i shift/VB/shift it/PRP/it by/IN/by one/CD/one position/NN/position ?/./? should/MD/should i/VB/i shift/NN/shift it/PRP/it by/IN/by two/CD/two positions/NNS/positions or/CC/or three/CD/three positions/NNS/positions ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 41/CD/41 /CD/) now/RB/now what/WP/what do/VBP/do i/PRP/i know/VB/know ?/./? so/RB/so what/WP/what i/PRP/i claim/VBP/claim is/VBZ/is you/PRP/you don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to look/VB/look at/IN/at the/DT/the pattern/NN/pattern here/NNP/here. you/PRP/you know/VBP/know that/IN/that the/DT/the last/JJ/last three/CD/three characters/NNS/characters of/IN/of the/DT/the pattern/NN/pattern are/VBP/are the/DT/the same/JJ/same as/IN/as these/DT/these three/CD/three characters/NNS/characters here/RB/here because/IN/because after/IN/after all/DT/all you/PRP/you know/VBP/know the/DT/the mismatch/NN/mismatch was/VBD/was happening/VBG/happening at/IN/at this/DT/this position/NNP/position. so/RB/so this/DT/this has/VBZ/has to/TO/to be/VB/be an/DT/an ?/./? a/DT/a ?/./? /./. this/DT/this has/VBZ/has to/TO/to be/VB/be a/DT/a ?/./? g/NN/g ?/./? and/CC/and this/DT/this has/VBZ/has to/TO/to be/VB/be an/DT/an ?/./? a/DT/a ?/./? /./. now/RB/now if/IN/if i/PRP/i were/VBD/were to/TO/to shift/VB/shift it/PRP/it by/IN/by one/CD/one position/NN/position /,/, then/RB/then that/IN/that means/NNS/means that/WDT/that i/PRP/i have/VBP/have to/TO/to move/VB/move by/IN/by one/CD/one position/NNP/position. so/RB/so there/RB/there would/MD/would be/VB/be a/DT/a mismatch/NNP/mismatch. if/IN/if i/PRP/i were/VBD/were to/TO/to shift/VB/shift it/PRP/it by/IN/by two/CD/two positions/NNS/positions /,/, then/RB/then i/PRP/i know/VBP/know this/DT/this is/VBZ/is an/DT/an ?/./? a/DT/a ?/./? this/DT/this is/VBZ/is an/DT/an ?/./? a/DT/a ?/./? and/CC/and what/WP/what else/RB/else do/VBP/do i/PRP/i know/VB/know ?/./? i/PRP/i know/VBP/know this/DT/this will/MD/will become/VB/become a/DT/a g/NNP/g. but/CC/but the/DT/the g/NN/g was/VBD/was already/RB/already mismatching/VBG/mismatching with/IN/with this/NNP/this. actually/RB/actually i/PRP/i don/VBP/don ?/./? t/NN/t really/RB/really know/VB/know that/NNP/that. the/DT/the shift/NN/shift will/MD/will depend/VB/depend upon/IN/upon the/DT/the pattern/NN/pattern of/IN/of course/NN/course and/CC/and we/PRP/we have/VBP/have to/TO/to determine/VB/determine what/WDT/what the/DT/the shift/NN/shift will/MD/will be/NNP/be. so/RB/so here/RB/here it/PRP/it ?/./? s/NNS/s completely/RB/completely clear/JJ/clear that/IN/that we/PRP/we would/MD/would not/RB/not want/VB/want to/TO/to shift/VB/shift it/PRP/it by/IN/by one/CD/one unit/NNP/unit. but/CC/but whether/IN/whether we/PRP/we wanted/VBD/wanted to/TO/to shift/VB/shift it/PRP/it by/IN/by two/CD/two units/NNS/units or/CC/or not/RB/not /,/, we/PRP/we don/VBP/don ?/./? t/NN/t know/NNP/know. i/PRP/i am/VBP/am shifting/VBG/shifting it/PRP/it by/IN/by two/CD/two units/NNP/units. we/PRP/we will/MD/will see/VB/see that/IN/that exact/JJ/exact procedure/NN/procedure very/RB/very shortly/NNP/shortly. that/IN/that ?/./? s/NNS/s what/WP/what the/DT/the purpose/NN/purpose of/IN/of this/DT/this lecture/NN/lecture is/NNP/is. once/RB/once again/RB/again we/PRP/we see/VBP/see that/IN/that there/EX/there is/VBZ/is a/DT/a match/NN/match here/RB/here and/CC/and then/RB/then there/RB/there is/VBZ/is a/DT/a mismatch/NN/mismatch here/NNP/here. so/RB/so mismatch/JJ/mismatch is/VBZ/is at/IN/at the/DT/the second/JJ/second position/NNP/position. should/MD/should i/VB/i shift/NN/shift it/PRP/it by/IN/by one/CD/one position/NN/position ?/./? i/PRP/i will/MD/will shift/VB/shift it/PRP/it by/IN/by one/CD/one position/NN/position again/NNP/again. now/RB/now i/PRP/i see/VBP/see a/DT/a complete/JJ/complete match/NNP/match. there/RB/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/VBN/done here/RB/here but/CC/but i/PRP/i have/VBP/have to/TO/to continue/NNP/continue. i/PRP/i can/MD/can ?/./? t/VB/t stop/NNP/stop. how/WRB/how much/JJ/much should/MD/should i/PRP/i shift/VB/shift it/PRP/it forward/RB/forward by/IN/by ?/./? 2/CD/2 or/CC/or 4/CD/4 ?/./? what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by split/NN/split pattern/NN/pattern ?/./? what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by mix/NN/mix pattern/NN/pattern ?/./? if/IN/if there/EX/there was/VBD/was another/DT/another ag/NN/ag here/RB/here /,/, this/DT/this are/VBP/are two/CD/two occurrences/NNS/occurrences there/NNP/there. this/DT/this would/MD/would be/VB/be one/CD/one occurrence/NN/occurrence and/CC/and this/DT/this would/MD/would be/VB/be another/DT/another occurrence/NNP/occurrence. if/IN/if this/DT/this were/VBD/were a/DT/a and/CC/and g/NN/g /,/, it/PRP/it ?/./? s/NNS/s all/DT/all occurrence/NN/occurrence of/IN/of this/DT/this pattern/NNP/pattern. i/PRP/i am/VBP/am not/RB/not saying/VBG/saying all/DT/all disjoint/NN/disjoint occurrence/NN/occurrence of/IN/of the/DT/the pattern/NNP/pattern. i/PRP/i should/MD/should be/VB/be shifting/VBG/shifting by/IN/by two/CD/two units/NNP/units. so/RB/so this/DT/this is/VBZ/is what/WP/what is/VBZ/is known/VBN/known as/IN/as the/DT/the knuth-morris-pratt/JJ/knuth-morris-pratt algorithm/NNP/algorithm. it/PRP/it ?/./? s/NNS/s very/RB/very famous/JJ/famous algorithm/NN/algorithm so/IN/so key/JJ/key idea/NN/idea is/VBZ/is when/WRB/when mismatch/NN/mismatch occurs/VBZ/occurs we/PRP/we need/VBP/need not/RB/not restart/VB/restart the/DT/the computation/NN/computation all/DT/all the/DT/the way/NN/way from/IN/from the/DT/the back/NNP/back. we/PRP/we can/MD/can use/VB/use some/DT/some information/NN/information about/IN/about the/DT/the pattern/NNP/pattern. some/DT/some information/NN/information obtained/VBD/obtained from/IN/from the/DT/the pattern/NN/pattern to/TO/to determine/VB/determine how/WRB/how many/JJ/many steps/NNS/steps we/PRP/we should/MD/should shift/VB/shift forward/NNP/forward. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is we/PRP/we are/VBP/are going/VBG/going to/TO/to construct/VB/construct an/DT/an array/NN/array ?/./? h/NN/h ?/./? /./. that/IN/that ?/./? s/NNS/s going/VBG/going to/TO/to determine/VB/determine how/WRB/how many/JJ/many characters/NNS/characters to/TO/to shift/VB/shift the/DT/the pattern/NN/pattern to/TO/to the/DT/the right/NN/right in/IN/in case/NN/case there/EX/there is/VBZ/is a/DT/a mismatch/NNP/mismatch. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to store/VB/store this/DT/this information/NN/information of/IN/of how/WRB/how many/JJ/many characters/NNS/characters we/PRP/we have/VBP/have to/TO/to shift/VB/shift right/RB/right in/IN/in an/DT/an array/NN/array which/WDT/which we/PRP/we will/MD/will call/VB/call ?/./? h/NN/h ?/./? and/CC/and we/PRP/we will/MD/will see/VB/see what/WP/what the/DT/the array/NN/array ?/./? h/NN/h ?/./? would/MD/would be/NNP/be. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 50/CD/50 /CD/) what/WP/what is/VBZ/is the/DT/the key/JJ/key idea/NN/idea now/RB/now ?/./? so/RB/so i/PRP/i guess/VBP/guess i/PRP/i need/VBP/need to/TO/to explain/VB/explain it/PRP/it more/JJR/more clearly/NNP/clearly. so/RB/so recall/JJ/recall we/PRP/we have/VBP/have our/PRP$/our text/NNP/text. we/PRP/we have/VBP/have a/DT/a pattern/NNP/pattern. we/PRP/we have/VBP/have seen/VBN/seen mismatch/NN/mismatch at/IN/at a/DT/a certain/JJ/certain position/NNP/position. that/IN/that means/VBZ/means this/DT/this is/VBZ/is not/RB/not the/DT/the same/JJ/same as/IN/as this/NNP/this. suppose/NN/suppose if/IN/if we/PRP/we have/VBP/have successfully/RB/successfully matched/VBN/matched the/DT/the prefix/NN/prefix p1/NNP/p1 through/IN/through p/NN/p /:/( i/PRP/i /VBP/) -1/-NONE-/-1 of/IN/of the/DT/the pattern/NN/pattern with/IN/with the/DT/the substring/VBG/substring t/NN/t /:/( j/JJ/j- i/PRP/i +/VBP/+ 1/CD/1 ?/./? ?/./? j/NN/j -1/-NONE-/-1 /./) /,/, so/RB/so let/VB/let ?/./? s/NNS/s label/VBP/label these/DT/these things/NNP/things. so/RB/so this/DT/this would/MD/would be/VB/be location/NN/location j/NNP/j. t/NN/t ?/./? his/PRP$/his would/MD/would be/VB/be i/NNP/i. so/RB/so i/PRP/i successfully/RB/successfully match/VBP/match p1/NNP/p1 through/IN/through i-1/NNP/i-1. so/RB/so this/DT/this would/MD/would be/VB/be location/NN/location i-1/NNP/i-1. i/PRP/i successfully/RB/successfully match/VBP/match p1/NNP/p1 through/IN/through p/NN/p /:/( i/PRP/i /VBP/) /:/- 1/CD/1 of/IN/of the/DT/the pattern/NNP/pattern. with/IN/with what/WP/what part/NN/part of/IN/of the/DT/the text/NN/text ?/./? it/PRP/it ?/./? s/NNS/s j-1/NNP/j-1. this/DT/this would/MD/would be/VB/be j-1/-NONE-/j-1 and/CC/and basically/RB/basically we/PRP/we are/VBP/are counting/VBG/counting i-1/-NONE-/i-1 locations/NNS/locations here/NNP/here. so/RB/so that/IN/that would/MD/would be/VB/be location/NN/location j-i/-NONE-/j-i +/./+ 1/CD/1 to/TO/to j-1/NNP/j-1. so/RB/so this/DT/this is/VBZ/is the/DT/the part/NN/part of/IN/of the/DT/the text/NN/text which/WDT/which is/VBZ/is the/DT/the same/JJ/same as/IN/as this/DT/this pattern/NNP/pattern. that/IN/that i/PRP/i know/VBP/know because/IN/because this/DT/this is/VBZ/is the/DT/the first/JJ/first place/NN/place where/WRB/where the/DT/the mismatch/NN/mismatch happens/VBZ/happens and/CC/and pi/NN/pi pattern/NN/pattern this/DT/this is/VBZ/is not/RB/not equal/JJ/equal to/TO/to tj/VB/tj /,/, then/RB/then we/PRP/we did/VBD/did not/RB/not reprocess/NN/reprocess any/DT/any of/IN/of the/DT/the suffix/NNP/suffix. so/RB/so what/WP/what we/PRP/we are/VBP/are saying/VBG/saying now/RB/now is/VBZ/is that/IN/that we/PRP/we need/VBP/need to/TO/to determine/VB/determine how/WRB/how much/RB/much we/PRP/we need/VBP/need to/TO/to shift/NNP/shift. so/RB/so we/PRP/we should/MD/should shift/VB/shift in/IN/in such/JJ/such a/DT/a manner/NN/manner so/IN/so that/IN/that this/DT/this part/NN/part matches/VBZ/matches with/IN/with this/NNP/this. so/RB/so now/RB/now this/DT/this is/VBZ/is the/DT/the shifted/VBN/shifted pattern/NNP/pattern. i/PRP/i need/VBP/need to/TO/to shift/VB/shift in/IN/in such/JJ/such a/DT/a manner/NN/manner so/IN/so that/IN/that these/DT/these two/CD/two parts/NNS/parts are/VBP/are the/DT/the same/NNP/same. this/DT/this part/NN/part matches/VBZ/matches up/RP/up completely/NNP/completely. why/WRB/why would/MD/would this/DT/this part/NN/part match/NN/match completely/RB/completely ?/./? this/DT/this is/VBZ/is because/IN/because then/RB/then this/DT/this would/MD/would also/RB/also match/VB/match up/RP/up with/IN/with this/DT/this here/RB/here because/IN/because i/PRP/i know/VBP/know this/DT/this is/VBZ/is the/DT/the same/JJ/same as/IN/as this/NNP/this. i/PRP/i will/MD/will repeat/VB/repeat it/PRP/it with/IN/with the/DT/the next/JJ/next slide/NNP/slide. so/RB/so with/IN/with each/DT/each position/NN/position of/IN/of the/DT/the pattern/NN/pattern /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to define/NNP/define. so/RB/so recall/JJ/recall we/PRP/we said/VBD/said that/IN/that there/EX/there is/VBZ/is an/DT/an array/NN/array ?/./? h/NN/h ?/./? which/WDT/which determines/NNS/determines how/WRB/how much/JJ/much we/PRP/we are/VBP/are going/VBG/going to/TO/to shift/VB/shift the/DT/the pattern/NN/pattern right/NNP/right. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 16/CD/16 /:/: 53/CD/53 /CD/) what/WP/what is/VBZ/is the/DT/the information/NN/information ?/./? hi/NN/hi ?/./? ?/./? hi/NN/hi is/VBZ/is the/DT/the extent/NN/extent to/TO/to which/WDT/which i/PRP/i will/MD/will shift/VB/shift the/DT/the pattern/NN/pattern /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch at/IN/at position/NN/position i/PRP/i +/VBP/+ 1/CD/1 /,/, that/IN/that ?/./? s/NNS/s going/VBG/going to/TO/to be/VB/be the/DT/the semantic/NNP/semantic. so/RB/so we/PRP/we will/MD/will understand/VB/understand this/NNP/this. how/WRB/how much/JJ/much i/PRP/i am/VBP/am going/VBG/going to/TO/to shift/VB/shift the/DT/the pattern/NN/pattern right/RB/right we/PRP/we will/MD/will of/IN/of course/NN/course try/NN/try to/TO/to make/VB/make the/DT/the smallest/JJS/smallest possible/JJ/possible shift/NNP/shift. we/PRP/we will/MD/will come/VB/come to/TO/to all/DT/all of/IN/of that/NNP/that. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make a/DT/a certain/JJ/certain amount/NN/amount of/IN/of shift/NNP/shift. we/PRP/we will/MD/will see/VB/see what/WP/what the/DT/the right/NN/right shift/NN/shift is/NNP/is. smallest/NN/smallest or/CC/or largest/JJS/largest because/IN/because it/PRP/it ?/./? s/NNS/s both/DT/both smallest/JJS/smallest and/CC/and largest/NNP/largest. smallest/NN/smallest so/IN/so that/IN/that you/PRP/you don/VBP/don ?/./? t/NN/t miss/NN/miss out/IN/out any/DT/any pattern/NNP/pattern. largest/JJS/largest so/RB/so that/IN/that you/PRP/you don/VBP/don ?/./? t/NN/t waste/NN/waste any/DT/any comparisons/NNP/comparisons. so/RB/so it/PRP/it ?/./? s/NNS/s both/DT/both smallest/JJS/smallest and/CC/and largest/NNP/largest. so/RB/so you/PRP/you can/MD/can pick/NNP/pick. suppose/VB/suppose this/DT/this is/VBZ/is what/WP/what is/VBZ/is happening/VBG/happening /,/, this/DT/this is/VBZ/is my/PRP$/my pattern/NN/pattern /,/, i/PRP/i am/VBP/am now/RB/now not/RB/not showing/VBG/showing you/PRP/you the/DT/the text/NN/text at/IN/at all/NNP/all. but/CC/but i/PRP/i tell/VBP/tell you/PRP/you just/RB/just the/DT/the following/VBG/following information/NN/information that/IN/that the/DT/the mismatch/NN/mismatch happened/VBD/happened at/IN/at position/NN/position 11/CD/11. so/RB/so you/PRP/you don/VBP/don ?/./? t/NN/t know/VB/know what/WP/what the/DT/the text/NN/text is/VBZ/is but/CC/but the/DT/the mismatch/NN/mismatch happened/VBD/happened at/IN/at position/NN/position 11/CD/11. how/WRB/how much/JJ/much should/MD/should you/PRP/you shift/VB/shift the/DT/the pattern/NN/pattern by/IN/by ?/./? let/NN/let ?/./? s/NNS/s draw/VBP/draw a/DT/a picture/NN/picture and/CC/and let/VB/let ?/./? s/NNS/s see/VBP/see how/WRB/how much/RB/much should/MD/should you/PRP/you shift/VB/shift the/DT/the pattern/NN/pattern by/NNP/by. let/NN/let ?/./? s/NNS/s say/VBP/say i/PRP/i shifted/VBD/shifted the/DT/the pattern/NN/pattern by/IN/by one/CD/one unit/NNP/unit. then/RB/then what/WP/what will/MD/will happen/VB/happen ?/./? i/PRP/i will/MD/will have/VB/have a/DT/a b/NN/b a/DT/a a/NNP/a. this/DT/this is/VBZ/is useless/NNP/useless. i/PRP/i am/VBP/am now/RB/now comparing/VBG/comparing the/DT/the pattern/NN/pattern against/IN/against the/DT/the pattern/NN/pattern itself/NNP/itself. why/WRB/why because/IN/because you/PRP/you know/VBP/know that/IN/that text/NN/text is/VBZ/is the/DT/the same/JJ/same here/NNP/here. that/IN/that was/VBD/was i/PRP/i said/VBD/said i/PRP/i don/VBP/don ?/./? t/NN/t know/VB/know what/WP/what the/DT/the text/NN/text is/VBZ/is but/CC/but i/PRP/i know/VBP/know now/RB/now what/WP/what the/DT/the text/NN/text is/NNP/is. it/PRP/it has/VBZ/has to/TO/to be/VB/be this/NNP/this. this/DT/this is/VBZ/is one/CD/one key/JJ/key observation/NNP/observation. so/RB/so now/RB/now if/IN/if i/PRP/i shifted/VBD/shifted the/DT/the pattern/NN/pattern by/IN/by one/CD/one unit/NN/unit /,/, then/RB/then clearly/RB/clearly it/PRP/it could/MD/could not/RB/not match/VB/match against/IN/against the/DT/the text/NNP/text. so/RB/so one/CD/one is/VBZ/is useless/NNP/useless. let/NN/let ?/./? s/NNS/s shift/NN/shift it/PRP/it by/IN/by two/CD/two units/NNP/units. if/IN/if i/PRP/i shift/VBP/shift it/PRP/it by/IN/by 2/CD/2 /,/, i/PRP/i get/VBP/get a/DT/a b/NNP/b. it/PRP/it ?/./? s/NNS/s of/IN/of no/DT/no use/NN/use again/NNP/again. let/NN/let me/PRP/me draw/VBD/draw the/DT/the shift/NN/shift by/IN/by one/NNP/one. also/RB/also a/DT/a b/NN/b a/DT/a a/NNP/a. useless/NN/useless again/NNP/again. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 54/CD/54 /CD/) shift/NN/shift by/IN/by two/CD/two ?/./? useless/NN/useless because/IN/because this/DT/this is/VBZ/is not/RB/not matching/VBG/matching this/NNP/this. shift/NN/shift by/IN/by 3/CD/3. a/DT/a b/NN/b a/DT/a a/NNP/a. useless/NNP/useless. shift/NN/shift by/IN/by 4/CD/4 ?/./? a/NNP/a. useless/NNP/useless. shift/NN/shift by/IN/by 5/CD/5 ?/./? so/RB/so i/PRP/i can/MD/can keep/VB/keep playing/NN/playing this/DT/this game/NNP/game. a/DT/a b/NN/b a/DT/a a/DT/a a/NNP/a. we/PRP/we have/VBP/have shift/VBN/shift by/IN/by 5/CD/5. /CD/( hindi/NN/hindi /:/) so/RB/so we/PRP/we are/VBP/are trying/VBG/trying to/TO/to shift/VB/shift by/IN/by 6/CD/6. but/CC/but that/IN/that is/VBZ/is also/RB/also useless/NNP/useless. 7/CD/7 and/CC/and 8/CD/8 are/VBP/are also/RB/also useless/NNP/useless. actually/RB/actually i/PRP/i want/VBP/want to/TO/to make/VB/make i/PRP/i +/VBP/+ 1/CD/1 =/CD/= l2/NNP/l2. so/RB/so 12/CD/12 is/VBZ/is the/DT/the first/JJ/first place/NN/place at/IN/at which/WDT/which the/DT/the mismatch/NN/mismatch occurs/NNP/occurs. 5th/CD/5th is/VBZ/is okay/NNP/okay. it/PRP/it was/VBD/was a/DT/a b/NN/b a/DT/a a/DT/a b/NN/b a/DT/a /NN/( hindi/NN/hindi /:/) which/WDT/which is/VBZ/is not/RB/not the/DT/the same/JJ/same as/IN/as this/NNP/this. so/RB/so this/DT/this is/VBZ/is acceptable/JJ/acceptable because/IN/because /CD/( hindi/NN/hindi /:/) /./. so/RB/so we/PRP/we will/MD/will say/VB/say that/IN/that 5/CD/5 is/VBZ/is the/DT/the reasonable/JJ/reasonable value/NN/value to/TO/to shift/VB/shift by/NNP/by. so/RB/so we/PRP/we will/MD/will come/VB/come to/TO/to what/WP/what h11/NNP/h11 or/CC/or the/DT/the 11th/JJ/11th location/NN/location of/IN/of this/DT/this array/NN/array would/MD/would be/NNP/be. so/RB/so i/PRP/i have/VBP/have defined/VBN/defined hi/NN/hi to/TO/to be/VB/be the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest proper/NN/proper suffix/NN/suffix of/IN/of p/NN/p /:/( 1/CD/1 /CD/) through/IN/through p/NN/p /:/( i/PRP/i /VBP/) that/IN/that matches/NNS/matches the/DT/the prefix/NN/prefix of/IN/of p/NNP/p. let/NN/let ?/./? s/NNS/s understand/VBP/understand what/WP/what this/DT/this is/NNP/is. what/WP/what is/VBZ/is the/DT/the suffix/NN/suffix of/IN/of p/NN/p /:/( 1/CD/1 /CD/) through/IN/through p/NN/p /:/( i/PRP/i /VBP/) ?/./? now/RB/now recall/VBP/recall we/PRP/we said/VBD/said this/DT/this would/MD/would always/RB/always be/VB/be an/DT/an ?/./? a/DT/a ?/./? and/CC/and there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch here/RB/here /./( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 22/CD/22 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time 27/CD/27 /:/: 45/CD/45 /CD/) so/RB/so p/JJ/p /NN/( 1/CD/1 /CD/) through/IN/through p/NN/p /:/( i/PRP/i /VBP/) is/VBZ/is this/DT/this part/NN/part of/IN/of the/DT/the pattern/NN/pattern /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 29/CD/29 /CD/) /./. what/WP/what is/VBZ/is the/DT/the suffix/NN/suffix of/IN/of the/DT/the p/NN/p /:/( 1/CD/1 /CD/) through/IN/through p/NN/p /:/( i/PRP/i /VBP/) ?/./? prefix/NN/prefix is/VBZ/is contiguous/JJ/contiguous parts/NNS/parts before/NNP/before. so/RB/so ?/./? a/DT/a ?/./? is/VBZ/is a/DT/a prefix/NNP/prefix. ?/./? ab/NN/ab b/NN/b ?/./? is/VBZ/is a/DT/a prefix/NNP/prefix. ?/./? ab/NN/ab a/DT/a ?/./? is/VBZ/is a/DT/a prefix/NNP/prefix. ?/./? ab/NN/ab a/DT/a ?/./? is/VBZ/is a/DT/a prefix/NN/prefix and/CC/and so/RB/so on/NNP/on. what/WP/what is/VBZ/is a/DT/a suffix/NN/suffix ?/./? ?/./? a/DT/a ?/./? is/VBZ/is a/DT/a suffix/NNP/suffix. ?/./? ab/NN/ab b/NN/b ?/./? is/VBZ/is a/DT/a suffix/NNP/suffix. ?/./? ab/NN/ab a/DT/a ?/./? is/VBZ/is a/DT/a suffix/NNP/suffix. ?/./? a/DT/a b/NN/b a/DT/a a/DT/a b/NN/b a/DT/a ?/./? is/VBZ/is a/DT/a suffix/NNP/suffix. so/RB/so i/PRP/i am/VBP/am finding/VBG/finding the/DT/the longest/JJS/longest proper/NN/proper suffix/NNP/suffix. proper/NN/proper suffix/NN/suffix means/VBZ/means suffix/NN/suffix which/WDT/which does/VBZ/does not/RB/not include/VB/include the/DT/the entire/JJ/entire text/NNP/text. like/IN/like proper/NN/proper subset/NN/subset means/VBZ/means strictly/RB/strictly smaller/NNP/smaller. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what proper/NN/proper suffix/NN/suffix of/IN/of p/NN/p /:/( 1/CD/1 /CD/) through/IN/through p/NN/p /:/( i/PRP/i /VBP/) means/NNS/means that/WDT/that matches/VBZ/matches the/DT/the prefix/NN/prefix of/IN/of p/NNP/p. so/RB/so i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out length/NN/length of/IN/of the/DT/the longest/JJS/longest suffix/NN/suffix of/IN/of p/NN/p /:/( 1/CD/1 /CD/) through/IN/through p/NN/p /:/( i/PRP/i /VBP/) that/IN/that matches/NNS/matches the/DT/the prefix/NN/prefix of/IN/of p/NN/p which/WDT/which is/VBZ/is exactly/RB/exactly this/NNP/this. this/DT/this is/VBZ/is the/DT/the one/CD/one we/PRP/we showed/VBD/showed here/NNP/here. why/WRB/why should/MD/should the/DT/the suffix/NN/suffix match/NN/match the/DT/the prefix/NN/prefix of/IN/of p/NN/p ?/./? because/IN/because when/WRB/when we/PRP/we shifted/VBD/shifted /,/, it/PRP/it is/VBZ/is the/DT/the prefix/NN/prefix of/IN/of p/NN/p which/WDT/which comes/VBZ/comes towards/NNS/towards the/DT/the suffix/NNP/suffix. i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the longest/JJS/longest match/NN/match because/IN/because that/DT/that determines/NNS/determines how/WRB/how many/JJ/many we/PRP/we have/VBP/have to/TO/to shift/VB/shift without/IN/without missing/NN/missing out/IN/out on/IN/on a/DT/a possible/JJ/possible match/NN/match somewhere/NNP/somewhere. so/RB/so i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the longest/JJS/longest possible/JJ/possible match/NN/match and/CC/and then/RB/then there/RB/there is/VBZ/is the/DT/the additional/JJ/additional congestion/NN/congestion here/RB/here that/IN/that the/DT/the i/NN/i +/:/+ 1th/JJ/1th character/NN/character /,/, so/RB/so ?/./? i/PRP/i ?/./? is/VBZ/is the/DT/the length/NNP/length. i/PRP/i am/VBP/am finding/VBG/finding out/RP/out hi/NN/hi /:/- the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest suffix/NN/suffix which/WDT/which matches/NNS/matches the/DT/the prefix/NN/prefix of/IN/of p/NN/p and/CC/and then/RB/then i/PRP/i want/VBP/want that/IN/that /-NONE-/( i/PRP/i +/VBP/+ 1/CD/1 /CD/) th/NN/th character/NN/character of/IN/of this/DT/this should/MD/should not/RB/not be/VB/be the/DT/the same/JJ/same as/IN/as the/DT/the /NNP/( hi/NN/hi +/:/+ 1/CD/1 /CD/) th/NN/th character/NN/character of/IN/of the/DT/the pattern/NN/pattern because/IN/because hi/NN/hi this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 31/CD/31 /CD/) /./. so/RB/so hi/VB/hi then/RB/then is/VBZ/is 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6. so/RB/so i/PRP/i don/VBP/don ?/./? t/NN/t want/NN/want that/WDT/that the/DT/the 7th/CD/7th the/DT/the same/JJ/same as/IN/as p12/NNP/p12 and/CC/and why/WRB/why did/VBD/did we/PRP/we require/VBP/require this/DT/this ?/./? because/IN/because we/PRP/we know/VBP/know that/IN/that there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch happening/VBG/happening here/NNP/here. so/RB/so we/PRP/we want/VBP/want that/IN/that better/JJR/better be/VB/be different/NNP/different. so/RB/so this/DT/this is/VBZ/is the/DT/the definition/NN/definition for/IN/for our/PRP$/our hi/NNP/hi. so/RB/so it/PRP/it ?/./? s/NNS/s a/DT/a bit/NN/bit of/IN/of a/DT/a tricky/JJ/tricky definition/NN/definition but/CC/but you/PRP/you understand/VBP/understand what/WP/what the/DT/the argument/NN/argument is/NNP/is. so/RB/so it/PRP/it ?/./? s/NNS/s not/RB/not really/RB/really how/WRB/how much/RB/much you/PRP/you are/VBP/are shifting/VBG/shifting by/NNP/by. if/IN/if the/DT/the pattern/NN/pattern has/VBZ/has matched/VBN/matched the/DT/the first/JJ/first 11/CD/11 positions/NNS/positions /,/, then/RB/then h11/NNP/h11 says/VBZ/says that/IN/that ?/./? okay/NN/okay /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch in/IN/in the/DT/the next/JJ/next position/NN/position /,/, then/RB/then what/WP/what is/VBZ/is the/DT/the shift/NN/shift ?/./? ?/./? so/RB/so after/IN/after the/DT/the shift/NN/shift how/WRB/how many/JJ/many characters/NNS/characters still/RB/still continue/VBP/continue to/TO/to match/VB/match ?/./? 6/CD/6 characters/NNS/characters and/CC/and what/WP/what is/VBZ/is the/DT/the extent/NN/extent of/IN/of the/DT/the shift/NN/shift ?/./? 11/CD/11 ?/./? 6/CD/6 =/CD/= 5/CD/5. the/DT/the logic/NN/logic is/VBZ/is very/RB/very simple/NNP/simple. you/PRP/you are/VBP/are trying/VBG/trying to/TO/to determine/VB/determine what/WDT/what is/VBZ/is the/DT/the extent/NN/extent to/TO/to which/WDT/which you/PRP/you can/MD/can shift/VB/shift the/DT/the pattern/NNP/pattern. you/PRP/you are/VBP/are trying/VBG/trying to/TO/to determine/VB/determine what/WDT/what is/VBZ/is the/DT/the smallest/JJS/smallest extent/NN/extent by/IN/by which/WDT/which you/PRP/you can/MD/can shift/VB/shift the/DT/the pattern/NNP/pattern. you/PRP/you will/MD/will say/VB/say smallest/JJS/smallest is/VBZ/is one/CD/one but/CC/but smallest/JJS/smallest is/VBZ/is not/RB/not one/CD/one because/IN/because one/CD/one is/VBZ/is quite/RB/quite meaningless/NNP/meaningless. you/PRP/you know/VBP/know that/IN/that clearly/RB/clearly there/EX/there will/MD/will be/VB/be mismatch/NN/mismatch happening/VBG/happening by/IN/by shifting/NN/shifting the/DT/the pattern/NN/pattern by/IN/by one/NNP/one. so/RB/so what/WP/what is/VBZ/is the/DT/the smallest/JJS/smallest extent/NN/extent by/IN/by which/WDT/which you/PRP/you can/MD/can shift/VB/shift the/DT/the pattern/NN/pattern without/IN/without you/PRP/you doing/VBG/doing a/DT/a necessary/JJ/necessary work/NN/work ?/./? you/PRP/you know/VBP/know that/IN/that there/EX/there are/VBP/are certain/JJ/certain mismatches/NNS/mismatches happening/NNP/happening. so/RB/so you/PRP/you want/VBP/want to/TO/to figure/VB/figure out/RP/out the/DT/the right/NN/right extent/NN/extent to/TO/to shift/VB/shift but/CC/but you/PRP/you don/VBP/don ?/./? t/NN/t want/NN/want to/TO/to shift/VB/shift by/IN/by huge/JJ/huge amount/NN/amount either/NNP/either. why/WRB/why did/VBD/did i/PRP/i make/VBP/make shift/NN/shift by/IN/by 11/CD/11 units/NNS/units all/DT/all together/RB/together because/IN/because then/RB/then i/PRP/i would/MD/would have/VB/have missed/VBN/missed out/RP/out on/IN/on certain/JJ/certain possible/JJ/possible matches/NNP/matches. let/NN/let ?/./? s/NNS/s continue/NNP/continue. so/RB/so this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time 30/CD/30 /:/: 14/CD/14 /CD/) part/NN/part of/IN/of the/DT/the pattern/NN/pattern what/WP/what we/PRP/we already/RB/already discussed/VBD/discussed in/IN/in the/DT/the same/JJ/same as/IN/as this/DT/this one/CD/one and/CC/and 7th/CD/7th position/NN/position is/VBZ/is not/RB/not the/DT/the same/JJ/same as/IN/as the/DT/the 12th/CD/12th position/NN/position which/WDT/which means/VBZ/means that/DT/that with/IN/with the/DT/the value/NN/value of/IN/of hi/NN/hi /:/- h/NN/h 11/CD/11 as/IN/as 6/CD/6 /,/, then/RB/then this/DT/this condition/NN/condition is/VBZ/is true/NNP/true. this/DT/this would/MD/would be/VB/be 7/CD/7. the/DT/the 7th/JJ/7th position/NN/position is/VBZ/is not/RB/not same/JJ/same as/IN/as the/DT/the 12th/CD/12th position/NNP/position. i/PRP/i is/VBZ/is 11/CD/11 and/CC/and hi/NN/hi is/VBZ/is 6/CD/6. if/IN/if there/EX/there is/VBZ/is no/DT/no proper/NN/proper suffix/NN/suffix of/IN/of p/NN/p /:/( 1/CD/1 /CD/) through/IN/through i/PRP/i with/IN/with this/DT/this above/IN/above property/NN/property then/RB/then what/WP/what should/MD/should the/DT/the value/NN/value of/IN/of h/NN/h /:/( i/PRP/i /VBP/) be/VB/be ?/./? what/WP/what is/VBZ/is h/JJ/h /NN/( i/PRP/i /VBP/) capturing/VBG/capturing ?/./? /:/( hindi/NN/hindi /:/) /./. so/RB/so let/VB/let ?/./? s/NNS/s take/VBP/take some/DT/some examples/NNS/examples and/CC/and then/RB/then this/DT/this will/MD/will be/VB/be clear/NNP/clear. so/RB/so this/DT/this is/VBZ/is my/PRP$/my text/NN/text /:/( refer/NN/refer slide/NN/slide time/NN/time 31/CD/31 /:/: 35/CD/35 /CD/) and/CC/and this/DT/this is/VBZ/is my/PRP$/my pattern/NNP/pattern. where/WRB/where is/VBZ/is the/DT/the mismatch/NN/mismatch happening/VBG/happening ?/./? in/IN/in ?/./? c/NN/c ?/./? or/CC/or ?/./? a/DT/a ?/./? /./. /:/( refer/NN/refer slide/NN/slide time/NN/time 31/CD/31 /:/: 35/CD/35 /CD/) this/DT/this is/VBZ/is position/NN/position 12/CD/12 of/IN/of the/DT/the text/NNP/text. so/RB/so till/IN/till 11/CD/11 positions/NNS/positions /,/, matches/NNS/matches happen/NNP/happen. so/RB/so the/DT/the value/NN/value of/IN/of i/PRP/i is/VBZ/is 11/CD/11 again/NNP/again. h/NN/h 11/CD/11 is/VBZ/is 6/CD/6. by/IN/by how/WRB/how many/JJ/many are/VBP/are we/PRP/we shifting/VBG/shifting ?/./? 5/CD/5. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what is/VBZ/is happening/NNP/happening. /:/( hindi/NN/hindi /:/) /./. so/RB/so last/JJ/last six/CD/six characters/NNS/characters and/CC/and first/JJ/first six/CD/six characters/NNS/characters are/VBP/are the/DT/the same/NNP/same. you/PRP/you can/MD/can actually/RB/actually move/VB/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to here/RB/here and/CC/and further/RB/further this/DT/this is/VBZ/is different/JJ/different from/IN/from this/NNP/this. so/RB/so there/RB/there is/VBZ/is a/DT/a potential/JJ/potential this/DT/this guy/NN/guy matches/VBZ/matches with/IN/with this/NNP/this. it/PRP/it does/VBZ/does not/RB/not that/IN/that there/EX/there is/VBZ/is a/DT/a different/JJ/different thing/NNP/thing. there/RB/there is/VBZ/is a/DT/a potential/JJ/potential that/IN/that this/DT/this guy/NN/guy matches/VBZ/matches with/IN/with this/NNP/this. so/RB/so we/PRP/we will/MD/will shift/VB/shift it/PRP/it by/IN/by so/RB/so much/RB/much amount/NNP/amount. so/RB/so this/DT/this is/VBZ/is the/DT/the shifted/VBN/shifted pattern/NNP/pattern. h11/NNP/h11 is/VBZ/is 6/CD/6. so/RB/so you/PRP/you were/VBD/were shifting/VBG/shifting p/NN/p to/TO/to the/DT/the right/NN/right so/IN/so that/IN/that p/NN/p /:/( 1/CD/1 /CD/) through/IN/through hi/NN/hi /:/- 1/CD/1 through/IN/through 6/CD/6 aligns/NNS/aligns with/IN/with this/DT/this as/IN/as the/DT/the suffix/NN/suffix of/IN/of text/NNP/text. so/RB/so k/VB/k is/VBZ/is the/DT/the position/NN/position of/IN/of mismatch/NNP/mismatch. k/NN/k -1/-NONE-/-1 is/VBZ/is before/IN/before this/DT/this and/CC/and k/NN/k /:/- hi/NN/hi is/VBZ/is this/DT/this part/NNP/part. so/RB/so it/PRP/it aligns/VBZ/aligns with/IN/with this/DT/this perfectly/NNP/perfectly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 32/CD/32 /:/: 14/CD/14 /CD/) these/DT/these parts/NNS/parts should/MD/should match/NNP/match. why/WRB/why ?/./? because/IN/because this/DT/this is/VBZ/is the/DT/the same/JJ/same as/IN/as this/DT/this which/WDT/which is/VBZ/is the/DT/the same/JJ/same as/IN/as this/NNP/this. so/RB/so they/PRP/they match/NNP/match. so/RB/so in/IN/in other/JJ/other words/NNS/words we/PRP/we are/VBP/are shifting/VBG/shifting /:/( p/NN/p i/PRP/i ?/./? hi/NN/hi /:/) places/NNS/places to/TO/to the/DT/the right/NNP/right. suppose/NN/suppose the/DT/the pattern/NN/pattern was/VBD/was only/RB/only up/RP/up to/TO/to here/RB/here /,/, a/DT/a b/NN/b will/MD/will not/RB/not be/VB/be the/DT/the part/NN/part of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so that/IN/that means/NNS/means that/WDT/that till/IN/till the/DT/the 11th/JJ/11th position/NN/position everything/NN/everything is/VBZ/is fine/NNP/fine. how/WRB/how much/JJ/much should/MD/should i/PRP/i shift/VB/shift forward/RB/forward by/IN/by ?/./? again/RB/again the/DT/the same/JJ/same i/PRP/i /:/- hi/NN/hi because/IN/because by/IN/by doing/VBG/doing that/IN/that /,/, we/PRP/we would/MD/would not/RB/not be/VB/be missing/VBG/missing out/RP/out on/IN/on any/DT/any other/JJ/other patterns/NNS/patterns then/NNP/then. so/RB/so everyone/NN/everyone understands/NNS/understands why/WRB/why we/PRP/we are/VBP/are looking/VBG/looking at/IN/at longest/JJS/longest such/JJ/such matching/NN/matching part/NN/part ?/./? so/RB/so that/IN/that minimum/JJ/minimum shift/NN/shift occurs/NNS/occurs or/CC/or maximum/NN/maximum shift/NN/shift occurs/NNS/occurs ?/./? so/RB/so that/IN/that minimum/JJ/minimum shift/NN/shift occurs/NNP/occurs. that/IN/that way/NN/way the/DT/the minimum/JJ/minimum amount/NN/amount of/IN/of shift/NN/shift is/VBZ/is happening/NNP/happening. but/CC/but why/WRB/why did/VBD/did we/PRP/we want/VBP/want a/DT/a minimum/JJ/minimum amount/NN/amount ?/./? we/PRP/we want/VBP/want the/DT/the largest/JJS/largest possible/JJ/possible shift/NNP/shift. so/RB/so the/DT/the right/NN/right answer/NN/answer should/MD/should not/RB/not be/VB/be so/RB/so that/IN/that minimum/JJ/minimum shift/NN/shift occurs/NNP/occurs. it/PRP/it is/VBZ/is so/RB/so that/IN/that we/PRP/we don/VBP/don ?/./? t/NN/t miss/NN/miss out/IN/out any/DT/any patterns/NNP/patterns. that/IN/that ?/./? s/NNS/s why/WRB/why we/PRP/we are/VBP/are looking/VBG/looking at/IN/at the/DT/the longest/JJS/longest prefix/NNP/prefix. if/IN/if i/PRP/i were/VBD/were to/TO/to take/VB/take shorter/NN/shorter prefix/NN/prefix /,/, i/PRP/i might/MD/might end/VB/end up/RP/up missing/VBG/missing out/RP/out on/IN/on some/DT/some guys/NNP/guys. why/WRB/why does/VBZ/does this/DT/this work/NN/work ?/./? why/WRB/why is/VBZ/is it/PRP/it that/IN/that we/PRP/we are/VBP/are not/RB/not missing/VBG/missing out/RP/out on/IN/on any/DT/any pattern/NN/pattern by/IN/by doing/NN/doing this/DT/this ?/./? we/PRP/we have/VBP/have to/TO/to argue/VB/argue correctness/NN/correctness of/IN/of the/DT/the algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 35/CD/35 /:/: 19/CD/19 /CD/) so/RB/so this/DT/this is/VBZ/is my/PRP$/my piece/NN/piece of/IN/of text/NNP/text. the/DT/the mismatch/NN/mismatch was/VBD/was at/IN/at position/NN/position k/NN/k of/IN/of that/DT/that text/NN/text and/CC/and position/NN/position i/PRP/i +/VBP/+ 1/CD/1 of/IN/of the/DT/the pattern/NNP/pattern. this/DT/this is/VBZ/is position/NN/position i/PRP/i +/VBP/+ 1/CD/1 of/IN/of the/DT/the pattern/NN/pattern this/DT/this is/VBZ/is the/DT/the position/NN/position k/NN/k of/IN/of the/DT/the text/NN/text /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 43/CD/43 /CD/) /./. in/IN/in this/DT/this case/NN/case k/NN/k and/CC/and i/PRP/i +/VBP/+ 1/CD/1 are/VBP/are turning/VBG/turning out/RP/out to/TO/to be/VB/be the/DT/the same/JJ/same but/CC/but there/EX/there could/MD/could be/VB/be in/IN/in some/DT/some part/NN/part of/IN/of the/DT/the text/NN/text even/RB/even before/IN/before this/DT/this case/NN/case even/RB/even before/IN/before this/DT/this i/NN/i +/:/+ 1/CD/1 and/CC/and k/NN/k would/MD/would not/RB/not be/VB/be the/DT/the same/NNP/same. this/DT/this is/VBZ/is before/IN/before the/DT/the shift/NN/shift and/CC/and these/DT/these 6/CD/6 character/NN/character are/VBP/are same/JJ/same as/IN/as this/DT/this character/NN/character which/WDT/which is/VBZ/is why/WRB/why we/PRP/we could/MD/could move/VB/move it/PRP/it this/DT/this way/NNP/way. so/RB/so this/DT/this is/VBZ/is the/DT/the situation/NN/situation after/IN/after the/DT/the shift/NNP/shift. so/RB/so if/IN/if this/DT/this part/NN/part is/VBZ/is beta/NN/beta /,/, this/DT/this substring/NN/substring is/VBZ/is also/RB/also the/DT/the same/JJ/same as/IN/as beta/NNP/beta. suppose/NN/suppose this/DT/this was/VBD/was not/RB/not the/DT/the case/NNP/case. that/IN/that is/VBZ/is /,/, the/DT/the kmp/NN/kmp algorithm/NN/algorithm missed/VBD/missed out/RP/out on/IN/on certain/JJ/certain patterns/NNS/patterns /,/, they/PRP/they were/VBD/were certain/JJ/certain patterns/NNS/patterns in/IN/in the/DT/the text/NN/text which/WDT/which we/PRP/we could/MD/could not/RB/not find/VB/find the/DT/the procedure/NN/procedure at/IN/at all/DT/all /,/, we/PRP/we will/MD/will argue/VB/argue that/IN/that certain/JJ/certain things/NNS/things can/MD/can not/RB/not happen/NNP/happen. suppose/NN/suppose there/RB/there is/VBZ/is this/DT/this missed/VBN/missed occurrence/NN/occurrence of/IN/of the/DT/the pattern/NN/pattern /,/, /:/( hindi/NN/hindi /:/) /,/, these/DT/these are/VBP/are the/DT/the same/JJ/same as/IN/as this/NNP/this. but/CC/but we/PRP/we missed/VBD/missed out/RP/out on/IN/on this/DT/this one/NNP/one. this/DT/this guy/NN/guy mismatched/VBD/mismatched only/RB/only at/IN/at this/NNP/this. this/DT/this better/JJR/better be/VB/be the/DT/the same/JJ/same as/IN/as this/NNP/this. so/RB/so this/DT/this is/VBZ/is also/RB/also alpha/NNP/alpha. so/RB/so these/DT/these alpha/NN/alpha characters/NNS/characters /,/, this/DT/this prefix/NN/prefix of/IN/of the/DT/the string/NN/string of/IN/of length/NN/length alpha/NN/alpha matches/NNS/matches the/DT/the suffix/NN/suffix of/IN/of p/NN/p 1/CD/1 through/IN/through pi/NN/pi of/IN/of length/NN/length alpha/NN/alpha and/CC/and alpha/NN/alpha is/VBZ/is more/RBR/more than/IN/than beta/NNP/beta. so/RB/so this/DT/this violates/NNS/violates our/PRP$/our definition/NNP/definition. alpha/NN/alpha is/VBZ/is more/RBR/more than/IN/than beta/NN/beta which/WDT/which is/VBZ/is hi/NNP/hi. these/DT/these are/VBP/are longer/NNP/longer. these/DT/these matches/NNS/matches this/NNP/this. these/DT/these is/VBZ/is a/DT/a longer/NN/longer prefix/NNP/prefix. yes/VBZ/yes agreed/NNP/agreed. but/CC/but this/DT/this character/NN/character is/VBZ/is also/RB/also the/DT/the same/JJ/same as/IN/as this/NNP/this. /NNP/( hindi/NN/hindi /:/) /./. so/RB/so p/VB/p l/NN/l =/:/= tk/NN/tk because/IN/because they/PRP/they matched/VBD/matched but/CC/but tk/NN/tk is/VBZ/is not/RB/not equal/JJ/equal to/TO/to pi/VB/pi plus/RB/plus one/CD/one because/IN/because there/EX/there was/VBD/was a/DT/a mismatch/NNP/mismatch. so/RB/so pl/JJ/pl is/VBZ/is not/RB/not equal/JJ/equal to/TO/to pi/VB/pi +/:/+ 1/CD/1. so/RB/so it/PRP/it could/MD/could not/RB/not be/VB/be that/IN/that this/DT/this and/CC/and this/DT/this are/VBP/are the/DT/the same/JJ/same for/IN/for which/WDT/which reason/NN/reason we/PRP/we did/VBD/did not/RB/not take/VB/take this/DT/this longer/NN/longer suffix/NN/suffix or/CC/or prefix/NNP/prefix. so/RB/so it/PRP/it is/VBZ/is also/RB/also the/DT/the case/NN/case this/DT/this and/CC/and this/DT/this are/VBP/are the/DT/the different/NNP/different. there/RB/there was/VBD/was one/CD/one requirement/NN/requirement that/WDT/that we/PRP/we are/VBP/are looking/VBG/looking for/IN/for the/DT/the longest/JJS/longest prefix/NN/prefix which/WDT/which matches/NNS/matches the/DT/the suffix/NN/suffix of/IN/of p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i and/CC/and p/VB/p i/PRP/i +/VBP/+ 1/CD/1 is/VBZ/is not/RB/not equal/JJ/equal to/TO/to p/VB/p of/IN/of hi/NN/hi +/:/+ 1/CD/1. both/DT/both conditions/NNS/conditions need/VBP/need to/TO/to be/VB/be satisfied/NNP/satisfied. /NNP/( hindi/NN/hindi /:/) /./. here/RB/here hi/VB/hi value/NN/value was/VBD/was not/RB/not correct/JJ/correct and/CC/and this/DT/this establishes/NNS/establishes the/DT/the correctness/NN/correctness of/IN/of the/DT/the algorithm/NNP/algorithm. so/RB/so if/IN/if you/PRP/you have/VBP/have the/DT/the correct/NN/correct value/NN/value of/IN/of hi/NN/hi /,/, these/DT/these things/NNS/things would/MD/would work/VB/work fine/NNP/fine. so/RB/so let/VB/let ?/./? s/NNS/s take/VBP/take an/DT/an example/NNP/example. this/DT/this would/MD/would now/RB/now be/VB/be clear/JJ/clear after/IN/after this/NNP/this. i/PRP/i have/VBP/have a/DT/a certain/JJ/certain /NN/( refer/NN/refer slide/NN/slide time/NN/time 40/CD/40 /:/: 16/CD/16 /CD/) pattern/NN/pattern which/WDT/which is/VBZ/is 13/CD/13 character/NN/character long/NNP/long. this/DT/this is/VBZ/is the/DT/the input/NN/input string/NNP/string. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 25/CD/25 /CD/) we/PRP/we will/MD/will expand/VB/expand it/PRP/it out/NNP/out. this/DT/this is/VBZ/is the/DT/the array/NN/array h/NNP/h. suppose/NN/suppose i/PRP/i have/VBP/have calculated/VBN/calculated it/PRP/it in/IN/in some/DT/some manner/NN/manner /,/, array/NN/array h/NN/h can/MD/can be/VB/be calculated/VBN/calculated for/IN/for every/DT/every i/PRP/i with/IN/with some/DT/some amount/NN/amount of/IN/of effort/NNP/effort. you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what h/NN/h of/IN/of i/PRP/i should/MD/should be/NNP/be. we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to do/VB/do that/DT/that also/NNP/also. suppose/NN/suppose i/PRP/i have/VBP/have figured/VBN/figured this/DT/this out/RP/out /,/, for/IN/for instance/NN/instance this/DT/this is/VBZ/is the/DT/the same/JJ/same pattern/NN/pattern /,/, at/IN/at 11/CD/11 you/PRP/you have/VBP/have 6/CD/6. let/NN/let ?/./? s/NNS/s see/VBP/see how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use this/DT/this information/NNP/information. let/VBD/let ?/./? s/NNS/s do/VBP/do a/DT/a complete/JJ/complete example/NNP/example. so/RB/so this/DT/this is/VBZ/is my/PRP$/my pattern/NNP/pattern. this/DT/this is/VBZ/is the/DT/the text/NNP/text. the/DT/the first/JJ/first mismatch/NN/mismatch occurs/NNS/occurs at/IN/at position/NN/position 12/CD/12 which/WDT/which means/VBZ/means till/MD/till position/NN/position 11/CD/11 there/EX/there was/VBD/was a/DT/a match/NNP/match. so/RB/so i/PRP/i go/VBP/go to/TO/to position/NN/position 11/CD/11 in/IN/in the/DT/the array/NNP/array. i/PRP/i see/VBP/see the/DT/the 6/CD/6 written/VBN/written there/NNP/there. there/RB/there was/VBD/was a/DT/a 6/CD/6 written/VBN/written in/IN/in position/NN/position 11/CD/11. so/RB/so what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? i/PRP/i have/VBP/have to/TO/to shift/VB/shift by/IN/by 11/CD/11 /:/- 6/CD/6 =/CD/= 5/CD/5 units/NNP/units. this/DT/this 6/CD/6 is/VBZ/is telling/VBG/telling me/PRP/me how/WRB/how much/RB/much of/IN/of the/DT/the pattern/NN/pattern is/VBZ/is going/VBG/going to/TO/to remain/VB/remain matched/VBN/matched after/IN/after the/DT/the shift/NNP/shift. so/RB/so 6/CD/6 characters/NNS/characters of/IN/of the/DT/the pattern/NN/pattern will/MD/will remain/VB/remain matched/NNP/matched. /NNP/( hindi/NN/hindi /:/) /./. h11/NNP/h11 is/VBZ/is 6/CD/6. so/RB/so i/PRP/i /:/- hi/NN/hi is/VBZ/is 11/CD/11- 6/CD/6 which/WDT/which is/VBZ/is 5/CD/5. so/RB/so i/PRP/i have/VBP/have to/TO/to shift/VB/shift by/IN/by 5/CD/5 units/NNP/units. as/IN/as you/PRP/you can/MD/can see/VB/see /,/, the/DT/the pattern/NN/pattern has/VBZ/has been/VBN/been shifted/VBN/shifted by/IN/by 5/CD/5 units/NNP/units. the/DT/the pattern/NN/pattern is/VBZ/is the/DT/the one/CD/one on/IN/on top/JJ/top and/CC/and the/DT/the text/NN/text is/VBZ/is below/NNP/below. now/RB/now again/RB/again i/PRP/i will/MD/will continue/VB/continue to/TO/to look/VB/look at/IN/at this/DT/this position/NNP/position. note/NN/note that/IN/that i/PRP/i don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to try/VB/try and/CC/and match/VB/match the/DT/the first/JJ/first 6/CD/6 positions/NNS/positions because/IN/because they/PRP/they are/VBP/are now/RB/now already/RB/already matched/VBN/matched by/IN/by the/DT/the definition/NN/definition of/IN/of the/DT/the function/NN/function h/NNP/h. they/PRP/they are/VBP/are matched/NNP/matched. but/CC/but this/DT/this 12th/JJ/12th position/NN/position /:/( hindi/NN/hindi /:/) /./. but/CC/but what/WP/what position/NN/position in/IN/in the/DT/the pattern/NN/pattern is/VBZ/is it/PRP/it ?/./? this/DT/this is/VBZ/is position/NN/position 7/CD/7 in/IN/in the/DT/the pattern/NNP/pattern. the/DT/the value/NN/value of/IN/of i/PRP/i is/VBZ/is 6/CD/6. now/RB/now i/PRP/i go/VBP/go to/TO/to 6/CD/6 and/CC/and i/PRP/i see/NNP/see. so/RB/so h6/NNP/h6 is/VBZ/is 3/CD/3. so/RB/so now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to shift/VB/shift by/IN/by i/PRP/i /:/- h6/NNP/h6. 6/CD/6 /:/- h6/NNP/h6 =/:/= 3/CD/3 units/NNP/units. i/PRP/i shift/VBP/shift by/IN/by additional/JJ/additional 3/CD/3 units/NNS/units and/CC/and this/DT/this is/VBZ/is the/DT/the situation/NN/situation i/PRP/i have/VBP/have now/RB/now /./( hindi/NN/hindi /:/) which/WDT/which we/PRP/we have/VBP/have to/TO/to shift/VB/shift by/IN/by 2/CD/2 units/NNP/units. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 43/CD/43 /:/: 15/CD/15 /CD/) so/IN/so we/PRP/we shift/VBP/shift 2/CD/2 units/NNS/units to/TO/to the/DT/the right/NN/right and/CC/and so/RB/so we/PRP/we will/MD/will get/VB/get a/DT/a b/NN/b after/IN/after the/DT/the shift/NN/shift we/PRP/we will/MD/will get/VB/get a/DT/a b/NN/b and/CC/and something/NN/something but/CC/but b/NN/b and/CC/and c/NN/c still/RB/still mismatch/VBP/mismatch which/WDT/which means/NNS/means we/PRP/we will/MD/will now/RB/now shift/VB/shift by/IN/by 1/CD/1 unit/NNP/unit. a/DT/a and/CC/and c/NN/c mismatch/NNP/mismatch. so/RB/so we/PRP/we will/MD/will shift/VB/shift by/IN/by another/DT/another 1/CD/1 unit/NN/unit /:/( hindi/NN/hindi /:/) /./. when/WRB/when you/PRP/you shifted/VBD/shifted beyond/IN/beyond the/DT/the c/NN/c /,/, then/RB/then there/EX/there was/VBD/was the/DT/the match/NN/match from/IN/from when/WRB/when you/PRP/you found/VBD/found the/DT/the match/NNP/match. so/RB/so if/IN/if you/PRP/you had/VBD/had the/DT/the h/NN/h function/NN/function /,/, you/PRP/you can/MD/can use/VB/use that/IN/that to/TO/to determine/VB/determine how/WRB/how much/RB/much you/PRP/you should/MD/should shift/VB/shift by/IN/by at/IN/at every/DT/every step/NN/step so/RB/so that/IN/that the/DT/the match/NN/match can/MD/can be/VB/be found/VBN/found and/CC/and this/DT/this shift/NN/shift function/NN/function is/VBZ/is designed/VBN/designed in/IN/in such/JJ/such a/DT/a manner/NN/manner that/WDT/that you/PRP/you will/MD/will never/RB/never miss/VB/miss out/IN/out on/IN/on any/DT/any potential/JJ/potential match/NNP/match. every/DT/every one/CD/one followed/VBN/followed this/DT/this 210/CD/210 business/NN/business ?/./? we/PRP/we come/VBP/come to/TO/to calculation/NN/calculation of/IN/of h/NNP/h. how/WRB/how much/JJ/much time/NN/time does/VBZ/does our/PRP$/our algorithm/NN/algorithm take/VB/take ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 45/CD/45 /:/: 23/CD/23 /CD/) suppose/NN/suppose h/NN/h is/VBZ/is given/NNP/given. we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to do/VB/do the/DT/the h/NNP/h. /NNP/( hindi/NN/hindi /:/) /./. we/PRP/we will/MD/will count/VB/count the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. /NNP/( hindi/NN/hindi /:/) this/DT/this was/VBD/was the/DT/the first/JJ/first step/NN/step at/IN/at which/WDT/which we/PRP/we had/VBD/had the/DT/the mismatch/NNP/mismatch. /NNP/( hindi/NN/hindi /:/) because/IN/because it/PRP/it did/VBD/did not/RB/not result/VB/result in/IN/in the/DT/the match/NNP/match. /NNP/( hindi/NN/hindi /:/) every/DT/every time/NN/time we/PRP/we were/VBD/were comparing/VBG/comparing with/IN/with c/NNP/c. so/RB/so how/WRB/how many/JJ/many times/NNS/times would/MD/would we/VB/we be/VB/be comparing/VBG/comparing with/IN/with a/DT/a certain/JJ/certain character/NN/character ?/./? many/JJ/many times/NNS/times up/IN/up to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the pattern/NNP/pattern. but/CC/but that/IN/that doesn/NN/doesn ?/./? t/NN/t sound/NN/sound very/RB/very good/JJ/good because/IN/because that/DT/that would/MD/would mean/VB/mean that/IN/that the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is huge/NNP/huge. for/IN/for each/DT/each character/NN/character /,/, the/DT/the maximum/NN/maximum number/NN/number of/IN/of comparisons/NNS/comparisons could/MD/could be/VB/be large/NNP/large. but/CC/but let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons put/VBN/put together/NNP/together. so/RB/so let/VB/let ?/./? s/NNS/s call/VBP/call this/DT/this unsuccessful/JJ/unsuccessful comparisons/NNP/comparisons. what/WP/what is/VBZ/is an/DT/an unsuccessful/JJ/unsuccessful comparison/NN/comparison ?/./? comparisons/NNS/comparisons that/WDT/that result/NN/result in/IN/in a/DT/a mismatch/NNP/mismatch. now/RB/now how/WRB/how many/JJ/many unsuccessful/JJ/unsuccessful comparisons/NNS/comparisons are/VBP/are there/RB/there /,/, over/IN/over all/DT/all put/NN/put together/RP/together ?/./? /:/( hindi/NN/hindi /:/) every/DT/every time/NN/time i/PRP/i do/VBP/do an/DT/an unsuccessful/JJ/unsuccessful comparison/NN/comparison /,/, i/PRP/i shift/VBP/shift the/DT/the pattern/NNP/pattern. /NNP/( hindi/NN/hindi /:/) at/IN/at most/JJS/most /,/, the/DT/the number/NN/number of/IN/of the/DT/the size/NN/size of/IN/of the/DT/the text/NN/text types/NNP/types. so/RB/so the/DT/the number/NN/number of/IN/of unsuccessful/JJ/unsuccessful comparisons/NNS/comparisons is/VBZ/is at/IN/at most/JJS/most the/DT/the size/NN/size of/IN/of the/DT/the text/NN/text which/WDT/which is/VBZ/is ?/./? n/NN/n ?/./? /./. so/RB/so unsuccessful/JJ/unsuccessful comparison/NN/comparison are/VBP/are not/RB/not too/RB/too many/NNP/many. how/WRB/how many/JJ/many successful/JJ/successful comparisons/NNS/comparisons are/VBP/are there/RB/there ?/./? /:/( hindi/NN/hindi /:/) these/DT/these were/VBD/were all/DT/all the/DT/the successful/JJ/successful comparisons/NNP/comparisons. after/IN/after i/PRP/i shift/VBP/shift /,/, these/DT/these characters/NNS/characters are/VBP/are a/DT/a part/NN/part of/IN/of successful/JJ/successful comparisons/NNP/comparisons. we/PRP/we will/MD/will never/RB/never compare/VB/compare against/IN/against these/DT/these characters/NNS/characters again/NNP/again. /NNP/( hindi/NN/hindi /:/) we/PRP/we will/MD/will never/RB/never compare/VB/compare this/DT/this part/NN/part of/IN/of the/DT/the pattern/NN/pattern ;/:/; the/DT/the part/NN/part before/IN/before this/DT/this red/NN/red line/NN/line with/IN/with the/DT/the text/NNP/text. so/RB/so each/DT/each character/NN/character of/IN/of the/DT/the text/NN/text which/WDT/which is/VBZ/is ever/RB/ever part/NN/part of/IN/of the/DT/the successful/JJ/successful comparison/NN/comparison is/VBZ/is compared/VBN/compared only/RB/only once/NNP/once. there/EX/there ?/./? s/NNS/s no/DT/no back/NN/back track/NN/track happening/NNP/happening. the/DT/the number/NN/number of/IN/of successful/JJ/successful comparison/NN/comparison is/VBZ/is at/IN/at most/JJS/most the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is the/DT/the number/NN/number of/IN/of shifts/NNS/shifts plus/CC/plus the/DT/the number/NN/number of/IN/of unsuccessful/JJ/unsuccessful comparisons/NNP/comparisons. so/RB/so we/PRP/we broke/VBP/broke up/RP/up our/PRP$/our comparisons/NNS/comparisons into/IN/into two/CD/two sets/NNS/sets /:/: successful/JJ/successful and/CC/and unsuccessful/NNP/unsuccessful. once/RB/once a/DT/a character/NN/character is/VBZ/is part/NN/part of/IN/of the/DT/the successful/JJ/successful comparison/NN/comparison it/PRP/it ?/./? s/NNS/s never/RB/never compare/VBP/compare again/NNP/again. if/IN/if a/DT/a character/NN/character is/VBZ/is part/NN/part of/IN/of the/DT/the unsuccessful/JJ/unsuccessful comparison/NN/comparison /,/, it/PRP/it might/MD/might be/VB/be compared/VBN/compared again/-NONE-/again. but/CC/but it/PRP/it results/VBZ/results in/IN/in a/DT/a shift/NNP/shift. so/RB/so every/DT/every unsuccessful/JJ/unsuccessful comparison/NN/comparison results/NNS/results in/IN/in a/DT/a shift/NNP/shift. so/RB/so total/JJ/total number/NN/number of/IN/of shifts/NNS/shifts since/IN/since it/PRP/it can/MD/can be/VB/be no/RB/no more/JJR/more than/IN/than the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. no/DT/no two/CD/two successful/JJ/successful comparisons/NNS/comparisons can/MD/can be/VB/be more/RBR/more than/IN/than the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. so/RB/so total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons therefore/VBP/therefore it/PRP/it at/IN/at most/JJS/most two/CD/two times/NNS/times the/DT/the size/NN/size the/DT/the text/NNP/text. so/RB/so total/JJ/total number/NN/number of/IN/of comparison/NN/comparison that/IN/that are/VBP/are required/VBN/required is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 50/CD/50 /:/: 48/CD/48 /CD/) but/CC/but what/WP/what about/IN/about computing/VBG/computing the/DT/the array/NN/array h/NN/h ?/./? how/WRB/how do/VBP/do we/PRP/we compute/VB/compute the/DT/the various/JJ/various hi/NN/hi ?/./? s/NNS/s and/CC/and how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to call/VB/call that/IN/that preprocessing/VBG/preprocessing time/NNP/time. so/RB/so recall/JJ/recall that/IN/that the/DT/the size/NN/size of/IN/of the/DT/the pattern/NN/pattern was/VBD/was n/NNP/n. what/WP/what one/CD/one can/MD/can argue/VB/argue is/VBZ/is that/IN/that the/DT/the time/NN/time required/VBN/required to/TO/to compute/VB/compute the/DT/the array/NN/array h/NN/h is/VBZ/is only/RB/only order/JJR/order m/NN/m /:/- the/DT/the size/NN/size of/IN/of the/DT/the pattern/NN/pattern and/CC/and the/DT/the time/NN/time required/VBN/required to/TO/to do/VB/do the/DT/the searching/NN/searching is/VBZ/is order/NN/order n/NN/n /:/- the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. so/RB/so the/DT/the total/JJ/total time/NN/time therefore/NN/therefore is/VBZ/is order/NN/order /:/( m/NN/m +/:/+ n/NN/n /:/) /./. i/PRP/i have/VBP/have not/RB/not told/VBN/told you/PRP/you this/DT/this as/IN/as yet/RB/yet /:/: ?/./? y/NN/y ?/./? is/VBZ/is computing/VBG/computing the/DT/the array/NN/array h/NNP/h. ?/./? y/NN/y ?/./? can/MD/can we/VB/we done/VBN/done in/IN/in order/NN/order m/NN/m time/NNP/time. let/NN/let ?/./? s/NNS/s see/VBP/see why/NNP/why. so/RB/so we/PRP/we have/VBP/have to/TO/to compute/VB/compute array/NN/array h/NNP/h. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 55/CD/55 /:/: 09/CD/09 /CD/) what/WP/what was/VBD/was our/PRP$/our definition/NN/definition of/IN/of an/DT/an array/NN/array h/NN/h ?/./? suppose/NN/suppose i/PRP/i have/VBP/have to/TO/to compute/VB/compute h/NN/h /:/( i/PRP/i /VBP/) /,/, i/PRP/i look/VBP/look at/IN/at my/PRP$/my pattern/NNP/pattern. i/PRP/i was/VBD/was certain/JJ/certain pattern/NNP/pattern. this/DT/this is/VBZ/is the/DT/the ith/NN/ith position/NNP/position. what/WP/what is/VBZ/is h/JJ/h of/IN/of i/PRP/i /,/, who/WP/who can/MD/can remain/VB/remain me/PRP/me what/WP/what h/RB/h of/IN/of i/PRP/i is/VBZ/is ?/./? the/DT/the longest/JJS/longest proper/NN/proper prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of 1/CD/1 through/IN/through i/PRP/i and/CC/and that/IN/that next/JJ/next character/NN/character should/MD/should be/VB/be different/JJ/different /NN/[ hindi/NN/hindi /:/] /./. so/RB/so hi/VB/hi is/VBZ/is the/DT/the value/NN/value /,/, it/PRP/it ?/./? s/NNS/s the/DT/the longest/JJS/longest suffix/NN/suffix /,/, longest/NN/longest prefix/NN/prefix or/CC/or longest/JJS/longest suffix/CD/suffix whatever/NN/whatever longest/NN/longest prefix/NN/prefix of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so what/WP/what are/VBP/are the/DT/the potential/NN/potential value/NN/value of/IN/of hi/NN/hi /,/, what/WP/what are/VBP/are the/DT/the different/JJ/different value/NN/value hi/NN/hi can/MD/can take/VB/take ?/./? zero/NN/zero to/TO/to m/VB/m /,/, zero/NN/zero to/TO/to i/PRP/i -1/-NONE-/-1 because/IN/because we/PRP/we also/RB/also said/VBD/said proper/NNP/proper. what/WP/what is/VBZ/is the/DT/the proper/NN/proper subset/NN/subset ?/./? when/WRB/when is/VBZ/is the/DT/the subset/NN/subset proper/NN/proper /,/, when/WRB/when it/PRP/it ?/./? s/NNS/s not/RB/not equal/JJ/equal to/TO/to the/DT/the set/NNP/set. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what the/DT/the proper/NN/proper suffixes/NNS/suffixes /,/, when/WRB/when it/PRP/it ?/./? s/NNS/s not/RB/not in/IN/in the/DT/the entire/JJ/entire string/NNP/string. so/RB/so essentially/RB/essentially it/PRP/it can/MD/can take/VB/take i/PRP/i different/JJ/different values/NNS/values /,/, give/VBP/give or/CC/or take/VB/take a/DT/a one/CD/one and/CC/and then/RB/then i/PRP/i can/MD/can try/VB/try out/RP/out all/DT/all those/DT/those various/JJ/various values/NNP/values. what/WP/what is/VBZ/is that/IN/that mean/JJ/mean ?/./? suppose/NN/suppose i/PRP/i am/VBP/am trying/VBG/trying out/RP/out the/DT/the value/NN/value h/NN/h /:/( i/PRP/i /VBP/) =/:/= 3/CD/3. what/WP/what should/MD/should i/VB/i do/VBP/do to/TO/to try/VB/try this/DT/this out/RP/out ?/./? i/PRP/i should/MD/should look/VB/look out/RP/out the/DT/the last/JJ/last three/CD/three character/NN/character here/RB/here and/CC/and the/DT/the first/JJ/first three/CD/three character/NN/character and/CC/and see/VB/see if/IN/if the/DT/the other/JJ/other same/NNP/same. if/IN/if this/DT/this is/VBZ/is the/DT/the same/JJ/same as/IN/as this/DT/this /,/, if/IN/if this/DT/this as/IN/as the/DT/the same/JJ/same as/IN/as this/DT/this and/CC/and if/IN/if this/DT/this as/IN/as the/DT/the same/JJ/same as/IN/as this/DT/this then/RB/then h/VBP/h /:/( i/PRP/i /VBP/) can/MD/can be/VB/be 3/CD/3 /,/, hi/NN/hi is/VBZ/is more/RBR/more than/IN/than or/CC/or equal/JJ/equal to/TO/to 3/CD/3 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 43/CD/43 /CD/) /./. so/RB/so i/PRP/i will/MD/will try/VB/try out/RP/out 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to i-1/-NONE-/i-1 and/CC/and whichever/RB/whichever are/VBP/are the/DT/the possible/JJ/possible value/NN/value i/PRP/i just/RB/just take/VBP/take the/DT/the largest/JJS/largest among/IN/among them/NNP/them. so/RB/so how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? so/RB/so how/WRB/how much/JJ/much time/NN/time do/VBP/do i/PRP/i take/VB/take to/TO/to compute/VB/compute hi/NN/hi /,/, i/PRP/i will/MD/will try/VB/try out/RP/out all/DT/all the/DT/the i/PRP/i different/JJ/different values/NNP/values. i/PRP/i will/MD/will do/VB/do all/PDT/all the/DT/the so/RB/so many/JJ/many comparison/NN/comparison /,/, so/RB/so in/IN/in particular/JJ/particular if/IN/if i/PRP/i choose/VBP/choose a/DT/a value/NN/value of/IN/of h/NN/h /:/( i/PRP/i /VBP/) equals/NNS/equals j/VBP/j then/RB/then how/WRB/how time/NN/time do/VBP/do i/PRP/i need/VBP/need to/TO/to do/VB/do check/NN/check whether/IN/whether j/NN/j is/VBZ/is the/DT/the candidate/NN/candidate value/NN/value ?/./? j/NN/j time/NNP/time. i/PRP/i will/MD/will take/VB/take j/NN/j /,/, j/NN/j going/VBG/going from/IN/from 1/CD/1 through/IN/through i-1/-NONE-/i-1 /,/, zero/NN/zero through/IN/through i-1/-NONE-/i-1 /,/, so/IN/so this/DT/this is/VBZ/is i/PRP/i square/VBP/square roughly/NNP/roughly. so/RB/so for/IN/for h/NN/h /:/( i/PRP/i /VBP/) i/PRP/i will/MD/will take/VB/take i/PRP/i square/VBP/square time/NN/time /,/, so/RB/so for/IN/for entire/JJ/entire array/NN/array h/NN/h /,/, i/PRP/i will/MD/will take/VB/take summation/NN/summation i/PRP/i square/VBP/square i/PRP/i going/VBG/going from/IN/from 1/CD/1 through/IN/through m/NN/m which/WDT/which is/VBZ/is m/NN/m cube/NN/cube time/NN/time /,/, huge/JJ/huge amount/NN/amount of/IN/of time/NNP/time. this/DT/this should/MD/should be/VB/be o/RB/o of/IN/of m/NN/m cube/NN/cube ;/:/; divide/NN/divide by/IN/by what/WP/what ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 11/CD/11 /CD/) we/PRP/we just/RB/just taking/VBG/taking computing/NN/computing the/DT/the total/NN/total time/NN/time /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 26/CD/26 /CD/) huge/JJ/huge amount/NN/amount of/IN/of time/NN/time right/NNP/right. so/RB/so we/PRP/we want/VBP/want to/TO/to do/VB/do something/NN/something better/NNP/better. we/PRP/we can/MD/can use/VB/use the/DT/the previous/JJ/previous value/NN/value of/IN/of h/NN/h /:/( i/PRP/i /VBP/) which/WDT/which have/VBP/have been/VBN/been calculated/VBN/calculated how/WRB/how can/MD/can we/PRP/we use/VB/use that/IN/that ?/./? so/RB/so that/IN/that ?/./? s/NNS/s a/DT/a nice/JJ/nice idea/NN/idea in/IN/in fact/NN/fact that/IN/that ?/./? s/NNS/s the/DT/the right/NN/right idea/NNP/idea. so/RB/so to/TO/to compute/VB/compute h/NN/h /:/( i/PRP/i /VBP/) so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume the/DT/the following/VBG/following that/IN/that when/WRB/when you/PRP/you are/VBP/are trying/VBG/trying to/TO/to compute/VB/compute h/NN/h /:/( i/PRP/i /VBP/) you/PRP/you already/RB/already have/VBP/have the/DT/the previous/JJ/previous values/NNS/values h/VBP/h 1/CD/1 through/IN/through h/JJ/h /NN/( i/PRP/i /VBP/) -1/NNP/-1. these/DT/these are/VBP/are already/RB/already there/NNP/there. /:/( refer/NN/refer slide/NN/slide time/NN/time 1/CD/1 /:/: 00/CD/00 /:/: 00/CD/00 /CD/) note/NN/note that/IN/that in/IN/in doing/VBG/doing this/DT/this computation/NN/computation of/IN/of array/NN/array h/NN/h we/PRP/we don/VBP/don ?/./? t/NN/t require/NN/require the/DT/the text/NN/text at/IN/at all/NNP/all. it/PRP/it ?/./? s/NNS/s being/VBG/being done/NN/done just/RB/just on/IN/on the/DT/the pattern/NNP/pattern. you/PRP/you can/MD/can take/VB/take your/PRP$/your pattern/NN/pattern /,/, compute/NN/compute your/PRP$/your h/NN/h and/CC/and then/RB/then you/PRP/you can/MD/can match/VB/match it/PRP/it again/RB/again which/WDT/which ever/RB/ever text/VBD/text you/PRP/you want/NNP/want. so/RB/so the/DT/the text/NN/text can/MD/can be/VB/be whatever/RB/whatever you/PRP/you want/VBP/want /,/, once/RB/once you/PRP/you computed/VBD/computed this/DT/this then/RB/then you/PRP/you can/MD/can just/RB/just go/VB/go head/NN/head and/CC/and work/VB/work with/IN/with the/DT/the text/NNP/text. suppose/NN/suppose i/PRP/i am/VBP/am trying/VBG/trying to/TO/to compute/VB/compute h/NN/h /:/( i/PRP/i /VBP/) again/RB/again and/CC/and i/PRP/i know/VBP/know all/DT/all the/DT/the values/NNS/values of/IN/of h/NN/h 1/CD/1 through/IN/through h/JJ/h /NN/( i/PRP/i /VBP/) -1/NNP/-1. how/WRB/how can/MD/can i/VB/i use/NN/use these/DT/these to/TO/to compute/VB/compute h/NN/h /:/( i/PRP/i /VBP/) ?/./? who/WP/who can/MD/can tell/VB/tell me/PRP/me ?/./? span/NN/span of/IN/of the/DT/the stock/NN/stock using/VBG/using the/DT/the stack/NNP/stack. now/RB/now what/WP/what can/MD/can we/PRP/we do/VBP/do ?/./? i/PRP/i don/VBP/don ?/./? t/NN/t think/NN/think that/IN/that is/VBZ/is the/DT/the same/JJ/same idea/NN/idea but/CC/but can/MD/can someone/NN/someone tell/VB/tell me/PRP/me what/WP/what should/MD/should i/VB/i do/VBP/do here/RB/here ?/./? so/RB/so for/IN/for h/NN/h /:/( i/PRP/i /VBP/) -1/-NONE-/-1 we/PRP/we know/VBP/know so/RB/so if/IN/if h/JJ/h /NN/( i/PRP/i /VBP/) -1/-NONE-/-1 was/VBD/was let/VB/let ?/./? s/NNS/s say/VBP/say 5/CD/5 /,/, so/RB/so we/PRP/we know/VBP/know that/IN/that the/DT/the first/JJ/first five/CD/five match/NN/match with/IN/with these/DT/these 5/CD/5. so/RB/so these/DT/these 5/CD/5 match/NN/match with/IN/with these/NNP/these. so/RB/so these/DT/these are/VBP/are the/DT/the first/JJ/first 5/CD/5 of/IN/of the/DT/the pattern/NN/pattern /,/, these/DT/these is/VBZ/is the/DT/the pattern/NN/pattern p/NN/p these/DT/these also/RB/also the/DT/the pattern/NN/pattern p/NNP/p. so/RB/so the/DT/the first/JJ/first 5/CD/5 of/IN/of the/DT/the pattern/NN/pattern match/NN/match with/IN/with i-1/-NONE-/i-1 /,/, i-2/-NONE-/i-2 /,/, i-3/-NONE-/i-3 basically/RB/basically i-5/-NONE-/i-5 to/TO/to i-1/-NONE-/i-1 of/IN/of the/DT/the text/NN/text of/IN/of this/DT/this pattern/NN/pattern itself/NNP/itself. now/RB/now how/WRB/how do/VBP/do i/PRP/i know/VB/know what/WP/what h/NN/h /:/( i/PRP/i /VBP/) is/VBZ/is ?/./? these/DT/these doesn/NN/doesn ?/./? t/NN/t solve/NN/solve the/DT/the h/NN/h /:/( i/PRP/i /VBP/) problem/NNP/problem. now/RB/now if/IN/if this/DT/this 6/CD/6 character/NN/character of/IN/of the/DT/the pattern/NN/pattern matches/VBZ/matches this/DT/this then/RB/then can/MD/can i/VB/i say/VB/say that/IN/that h/JJ/h /NN/( i/PRP/i /VBP/) is/VBZ/is equal/JJ/equal to/TO/to 6/CD/6. can/MD/can i/PRP/i say/VB/say that/IN/that ?/./? why/WRB/why not/RB/not ?/./? so/RB/so i/PRP/i claim/VBP/claim the/DT/the following/VBG/following /,/, if/IN/if p/NN/p /:/( i/PRP/i /VBP/) =/:/= p/NN/p /:/( 6/CD/6 /CD/) /,/, the/DT/the 6/CD/6 character/NN/character of/IN/of the/DT/the pattern/NNP/pattern. /NNP/[ student/NN/student /:/: it/PRP/it is/VBZ/is atleast/JJ/atleast h/NN/h /:/( i-1/-NONE-/i-1 /:/) so/IN/so we/PRP/we will/MD/will try/VB/try of/IN/of z/NN/z assuming/VBG/assuming that/IN/that it/PRP/it is/VBZ/is at/IN/at least/JJS/least five/CD/five /,/, so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we have/VBP/have to/TO/to do/VB/do we/PRP/we have/VB/have to/TO/to do/VB/do something/NN/something like/IN/like /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 59/CD/59 /:/: 56/CD/56 /CD/) /./. there/RB/there was/VBD/was zeros/NNS/zeros also/RB/also so/RB/so it/PRP/it need/VBP/need not/RB/not be/VB/be an/DT/an increase/NN/increase /,/, no/DT/no but/CC/but it/PRP/it need/VBP/need not/RB/not be/VB/be equal/JJ/equal to/TO/to h/VB/h /:/( i-1/-NONE-/i-1 /:/) /./. it/PRP/it could/MD/could be/VB/be zero/CD/zero also/NNP/also. we/PRP/we are/VBP/are saying/VBG/saying but/CC/but it/PRP/it could/MD/could potentially/RB/potentially if/IN/if this/DT/this and/CC/and this/DT/this match/NN/match now/RB/now /,/, i/PRP/i am/VBP/am sorry/JJ/sorry i/PRP/i am/VBP/am confusing/VBG/confusing my/PRP$/my array/NN/array h/NN/h with/IN/with my/PRP$/my /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 00/CD/00 /:/: 23/CD/23 /CD/) /./. student/NN/student /:/: h/NN/h /:/( i/PRP/i +/VBP/+ 1/CD/1 /CD/) is/VBZ/is not/RB/not equal/JJ/equal to/TO/to h/VB/h /:/( i/PRP/i +/VBP/+ 1/CD/1 /CD/) /./. staff/NN/staff /:/: so/RB/so they/PRP/they would/MD/would not/RB/not match/VB/match so/RB/so it/PRP/it has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than 5/CD/5 /,/, so/RB/so they/PRP/they would/MD/would be/VB/be not/RB/not match/NNP/match. student/NN/student /:/: so/RB/so it/PRP/it has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than five/CD/five greater/JJR/greater than/IN/than six/CD/six or/NNP/or. staff/NN/staff /:/: okay/NN/okay so/IN/so that/IN/that ?/./? s/NNS/s a/DT/a good/JJ/good question/NN/question we/PRP/we will/MD/will take/VB/take this/DT/this off/NN/off in/IN/in the/DT/the next/JJ/next class/NNP/class. so/RB/so today/NN/today we/PRP/we looked/VBD/looked at/IN/at pattern/NN/pattern matching/VBG/matching in/IN/in a/DT/a text/NNP/text. so/RB/so we/PRP/we looked/VBD/looked at/IN/at very/RB/very simple/JJ/simple algorithm/NN/algorithm for/IN/for doing/VBG/doing that/IN/that which/WDT/which had/VBD/had an/DT/an order/NN/order mn/NN/mn time/NN/time then/RB/then we/PRP/we looked/VBD/looked at/IN/at the/DT/the knuth-morris-pratt/JJ/knuth-morris-pratt algorithm/NN/algorithm which/WDT/which we/PRP/we argued/VBD/argued has/VBZ/has the/DT/the running/VBG/running time/NN/time of/IN/of order/NN/order m/NN/m +/:/+ n/NNP/n. so/RB/so that/IN/that was/VBD/was the/DT/the improvement/NN/improvement /,/, we/PRP/we went/VBD/went from/IN/from a/DT/a mn/NN/mn to/TO/to m/VB/m +/:/+ n/NN/n this/DT/this is/VBZ/is the/DT/the modulo/NN/modulo fact/NN/fact that/IN/that you/PRP/you can/MD/can compute/VB/compute the/DT/the array/NN/array h/NN/h in/IN/in order/NN/order m/NN/m time/NNP/time. so/RB/so we/PRP/we shown/VBP/shown you/PRP/you how/WRB/how to/TO/to compute/VB/compute the/DT/the array/NN/array h/NN/h and/CC/and order/NN/order m/NN/m cube/NN/cube time/NN/time and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to do/VB/do that/DT/that in/IN/in order/NN/order m/NN/m time/NN/time in/IN/in the/DT/the next/JJ/next class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 18/CD/18 tries/NNS/tries today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about another/DT/another data/NN/data structure/NN/structure called/VBN/called ?/./? tries/NNS/tries ?/./? and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see it/PRP/it ?/./? s/NNS/s used/VBN/used in/IN/in pattern/NN/pattern matching/NNP/matching. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be starting/VBG/starting off/RP/off with/IN/with what/WP/what are/VBP/are called/VBN/called ?/./? standard/JJ/standard tries/NNS/tries ?/./? which/WDT/which is/VBZ/is the/DT/the plain/NN/plain version/NN/version of/IN/of tries/NNS/tries and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to move/VB/move on/IN/on to/TO/to ?/./? compressed/VBN/compressed tries/NNS/tries ?/./? /./. this/DT/this is/VBZ/is a/DT/a space/NN/space sufficient/NN/sufficient way/NN/way of/IN/of keeping/VBG/keeping tries/NNS/tries and/CC/and the/DT/the last/JJ/last topic/NN/topic we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at today/NN/today is/VBZ/is what/WP/what are/VBP/are called/VBN/called ?/./? suffix/NN/suffix trees/NNS/trees ?/./? /./. so/RB/so first/RB/first 2/CD/2 terms/NNS/terms have/VBP/have tries/NNS/tries in/IN/in them/PRP/them and/CC/and the/DT/the 3rd/JJ/3rd has/VBZ/has trees/NNS/trees in/IN/in them/NNP/them. recall/NN/recall in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we were/VBD/were looking/VBG/looking at/IN/at pattern/NN/pattern matching/NNP/matching. given/NN/given a/DT/a piece/NN/piece of/IN/of text/NN/text /,/, we/PRP/we were/VBD/were interested/JJ/interested in/IN/in matching/JJ/matching patterns/NNP/patterns. finding/NN/finding out/IN/out at/IN/at what/WP/what all/PDT/all places/NNS/places certain/JJ/certain pattern/NN/pattern appears/VBZ/appears in/IN/in the/DT/the text/NN/text and/CC/and what/WP/what we/PRP/we had/VBD/had done/VBN/done there/RB/there if/IN/if you/PRP/you recall/VBP/recall was/VBD/was that/IN/that we/PRP/we had/VBD/had preprocessed/VBN/preprocessed the/DT/the pattern/NNP/pattern. that/IN/that is/VBZ/is /,/, we/PRP/we took/VBD/took the/DT/the pattern/NNP/pattern. we/PRP/we computed/VBD/computed this/DT/this failure/NN/failure function/NN/function h/NN/h on/IN/on the/DT/the pattern/NN/pattern and/CC/and then/RB/then we/PRP/we used/VBD/used that/IN/that information/NN/information to/TO/to search/VB/search for/IN/for the/DT/the pattern/NN/pattern in/IN/in the/DT/the text/NN/text and/CC/and the/DT/the time/NN/time we/PRP/we took/VBD/took was/VBD/was proportional/JJ/proportional to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 45/CD/45 /CD/) so/RB/so this/DT/this preprocessing/NN/preprocessing the/DT/the pattern/NN/pattern speeded/VBD/speeded up/RP/up the/DT/the time/NN/time it/PRP/it took/VBD/took to/TO/to match/VB/match the/DT/the pattern/NNP/pattern. if/IN/if we/PRP/we did/VBD/did not/RB/not compute/VB/compute the/DT/the failure/NN/failure function/NN/function h/NN/h /,/, then/RB/then we/PRP/we just/RB/just had/VBD/had this/DT/this brute/NN/brute force/NN/force method/NN/method of/IN/of matching/JJ/matching the/DT/the pattern/NN/pattern which/WDT/which took/VBD/took order/NN/order m/NN/m n/NN/n time/NNP/time. ?/./? m/NN/m ?/./? size/NN/size of/IN/of text/NN/text and/CC/and ?/./? n/NN/n ?/./? size/NN/size of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so after/IN/after processing/NN/processing the/DT/the pattern/NN/pattern in/IN/in time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the pattern/NN/pattern /,/, the/DT/the knuth-morris-pratt/JJ/knuth-morris-pratt algorithm/NN/algorithm searches/NNS/searches an/DT/an arbitrary/JJ/arbitrary text/NN/text in/IN/in time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the text/NNP/text. now/RB/now if/IN/if the/DT/the text/NN/text is/VBZ/is very/RB/very large/JJ/large /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a very/RB/very good/JJ/good situation/NN/situation to/TO/to have/NNP/have. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 02/CD/02 /:/: 54/CD/54 /CD/) so/RB/so i/PRP/i have/VBP/have a/DT/a very/RB/very large/JJ/large piece/NN/piece of/IN/of text/NN/text which/WDT/which doesn/NN/doesn ?/./? t/NN/t change/NN/change and/CC/and i/PRP/i am/VBP/am searching/VBG/searching for/IN/for patterns/NNS/patterns in/IN/in the/DT/the text/NNP/text. every/DT/every time/NN/time i/PRP/i search/VBP/search for/IN/for a/DT/a small/JJ/small pattern/NN/pattern /,/, if/IN/if i/PRP/i am/VBP/am going/VBG/going to/TO/to spend/VB/spend time/NN/time proportional/JJ/proportional to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the text/NN/text /,/, that/IN/that ?/./? s/NNS/s a/DT/a lot/NN/lot of/IN/of time/NNP/time. so/RB/so you/PRP/you have/VB/have let/VBN/let ?/./? s/NNS/s say/VBP/say /,/, collected/VBN/collected works/NNS/works of/IN/of shakespeare/NN/shakespeare in/IN/in which/WDT/which you/PRP/you want/VBP/want to/TO/to search/NN/search for/IN/for ?/./? veronica/NN/veronica ?/./? and/CC/and you/PRP/you are/VBP/are going/VBG/going to/TO/to spend/VB/spend time/NN/time proportional/JJ/proportional to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the text/NN/text which/WDT/which is/VBZ/is very/RB/very huge/NNP/huge. now/RB/now what/WP/what we/PRP/we want/VBP/want to/TO/to do/VB/do today/NN/today is/VBZ/is to/TO/to process/NN/process the/DT/the text/NN/text so/RB/so that/IN/that i/PRP/i can/MD/can search/VB/search for/IN/for the/DT/the pattern/NN/pattern in/IN/in time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the pattern/NNP/pattern. see/VBP/see this/DT/this becomes/VBZ/becomes great/JJ/great because/IN/because now/RB/now patterns/VBZ/patterns are/VBP/are typically/RB/typically very/RB/very small/JJ/small ;/:/; 7/CD/7 characters/NNS/characters /,/, 15/CD/15 characters/NNS/characters /,/, something/NN/something like/IN/like that/DT/that while/IN/while your/PRP$/your text/NN/text could/MD/could be/VB/be a/DT/a million/NN/million characters/NNS/characters large/NNP/large. you/PRP/you don/VBP/don ?/./? t/NN/t want/NN/want to/TO/to spend/VB/spend that/IN/that much/RB/much time/NN/time every/DT/every time/NN/time you/PRP/you are/VBP/are searching/VBG/searching for/IN/for a/DT/a text/NNP/text. but/CC/but here/RB/here today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to require/VB/require that/IN/that we/PRP/we will/MD/will preprocess/VB/preprocess that/IN/that text/NNP/text. we/PRP/we will/MD/will work/VB/work on/IN/on the/DT/the text/NN/text initially/RB/initially and/CC/and we/PRP/we will/MD/will have/VB/have created/VBN/created some/DT/some data/NNS/data structure/VBP/structure on/IN/on that/DT/that so/RB/so that/IN/that when/WRB/when a/DT/a pattern/NN/pattern comes/VBZ/comes /,/, we/PRP/we can/MD/can search/VB/search for/IN/for that/DT/that pattern/NNP/pattern. all/DT/all occurrences/NNS/occurrences of/IN/of that/DT/that pattern/NN/pattern we/PRP/we can/MD/can spot/VB/spot in/IN/in a/DT/a very/RB/very little/JJ/little time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the pattern/NN/pattern /,/, no/DT/no matter/NN/matter what/WP/what pattern/NN/pattern comes/NNP/comes. in/IN/in the/DT/the previous/JJ/previous kmp/NN/kmp algorithm/NN/algorithm /,/, it/PRP/it was/VBD/was the/DT/the other/JJ/other way/NN/way around/NNP/around. you/PRP/you processed/VBD/processed the/DT/the pattern/NNP/pattern. you/PRP/you did/VBD/did a/DT/a preprocessing/NN/preprocessing on/IN/on the/DT/the pattern/NN/pattern so/RB/so that/IN/that no/DT/no matter/NN/matter what/WP/what text/NN/text came/VBD/came /,/, you/PRP/you could/MD/could search/VB/search on/IN/on that/DT/that text/NNP/text. but/CC/but there/EX/there you/PRP/you were/VBD/were taking/VBG/taking time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the text/NN/text which/WDT/which is/VBZ/is quite/RB/quite expensive/NNP/expensive. we/PRP/we will/MD/will come/VB/come to/TO/to the/DT/the notion/NN/notion of/IN/of tries/NNS/tries today/NNP/today. what/WP/what is/VBZ/is a/DT/a trie/NN/trie ?/./? i/PRP/i will/MD/will perhaps/RB/perhaps show/VB/show you/PRP/you a/DT/a picture/NN/picture and/CC/and i/PRP/i will/MD/will explain/VB/explain it/PRP/it through/IN/through this/DT/this picture/NNP/picture. so/RB/so trie/VB/trie is/VBZ/is a/DT/a data/NN/data structure/NN/structure to/TO/to maintain/VB/maintain a/DT/a set/NN/set of/IN/of strings/NNP/strings. let/NN/let ?/./? s/NNS/s say/VBP/say i/PRP/i have/VBP/have a/DT/a set/NN/set ?/./? s/NNS/s ?/./? of/IN/of strings/NNP/strings. s/NNS/s =/:/= /:/( bear/JJ/bear /,/, bell/NN/bell /,/, bid/NN/bid /,/, bull/NN/bull /,/, buy/VB/buy /,/, sell/VB/sell /,/, stock/NN/stock /,/, stop/VB/stop /:/) /./. now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to create/VB/create a/DT/a tree/NN/tree here/NNP/here. now/RB/now this/DT/this is/VBZ/is not/RB/not a/DT/a binary/JJ/binary tree/NNP/tree. in/IN/in fact/NN/fact the/DT/the number/NN/number of/IN/of number/NN/number of/IN/of children/NNS/children that/WDT/that particular/JJ/particular node/NN/node can/MD/can have/NNP/have. it/PRP/it can/MD/can be/VB/be as/RB/as large/JJ/large as/IN/as the/DT/the size/NN/size of/IN/of the/DT/the alphabet/NNP/alphabet. we/PRP/we are/VBP/are working/VBG/working with/IN/with the/DT/the english/NNS/english alphabet/NNP/alphabet. let/VB/let ?/./? s/NNS/s all/DT/all our/PRP$/our strings/NNS/strings are/VBP/are lower/JJR/lower case/NN/case characters/NNP/characters. so/RB/so the/DT/the size/NN/size of/IN/of the/DT/the alphabet/NN/alphabet is/VBZ/is 26/CD/26. each/DT/each node/NN/node can/MD/can have/VB/have up/RP/up to/TO/to 26/CD/26 children/NNP/children. now/RB/now the/DT/the children/NNS/children of/IN/of the/DT/the node/NN/node are/VBP/are ordered/VBN/ordered alphabetically/NNP/alphabetically. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? each/DT/each node/NN/node is/VBZ/is going/VBG/going to/TO/to have/VB/have a/DT/a particular/JJ/particular character/NN/character in/IN/in it/PRP/it and/CC/and if/IN/if i/PRP/i look/VBP/look at/IN/at all/DT/all the/DT/the children/NNS/children of/IN/of this/DT/this particular/JJ/particular node/NN/node /,/, then/RB/then those/DT/those are/VBP/are going/VBG/going to/TO/to be/VB/be ordered/VBN/ordered alphabetically/-NONE-/alphabetically. so/RB/so b/VB/b will/MD/will proceed/VB/proceed c/NN/c if/IN/if c/NN/c were/VBD/were there/RB/there and/CC/and c/NN/c would/MD/would come/VB/come after/IN/after b/NN/b and/CC/and so/RB/so on/NNP/on. i/PRP/i have/VBP/have just/RB/just 2/CD/2 b/NN/b and/CC/and s/NNP/s. so/RB/so b/VB/b comes/NNS/comes to/TO/to the/DT/the left/NN/left of/IN/of s/NNP/s. this/DT/this had/VBD/had 3/CD/3 e/NN/e /,/, i/PRP/i and/CC/and u/NNP/u. so/RB/so they/PRP/they come/VBP/come one/CD/one after/IN/after the/DT/the other/JJ/other in/IN/in this/DT/this order/NNP/order. so/RB/so it/PRP/it ?/./? s/NNS/s an/DT/an ordered/VBN/ordered tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 06/CD/06 /:/: 44/CD/44 /CD/) this/DT/this is/VBZ/is read/VBN/read left/VBN/left to/-NONE-/to. now/RB/now how/WRB/how is/VBZ/is this/DT/this organized/VBN/organized ?/./? suppose/NN/suppose i/PRP/i have/VBP/have to/TO/to start/VB/start from/IN/from here/RB/here and/CC/and i/PRP/i have/VBP/have to/TO/to follow/VB/follow a/DT/a path/NN/path in/IN/in this/DT/this tree/NNP/tree. suppose/NN/suppose i/PRP/i came/VBD/came this/DT/this way/NN/way ?/./? b/NN/b e/NN/e a/DT/a r/NN/r ?/./? /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 05/CD/05 /CD/) /./. bear/JJ/bear is/VBZ/is one/CD/one of/IN/of the/DT/the words/NNS/words here/NNP/here. suppose/NN/suppose i/PRP/i were/VBD/were to/TO/to take/VB/take some/DT/some other/JJ/other path/NN/path ?/./? s/NNS/s e/VBP/e l/NN/l l/NN/l ?/./? /./. sell/NN/sell is/VBZ/is another/DT/another one/NNP/one. ?/./? s/NNS/s t/VBP/t o/NN/o c/NN/c k/NN/k ?/./? ?/./? stock/NNP/stock. this/DT/this is/VBZ/is another/DT/another word/NN/word here/NNP/here. so/RB/so now/RB/now you/PRP/you can/MD/can build/VB/build this/DT/this thing/NNP/thing. if/IN/if i/PRP/i give/VBP/give you/PRP/you set/VBD/set of/IN/of words/NNS/words can/MD/can you/PRP/you build/VB/build this/DT/this trie/NNP/trie. it/PRP/it ?/./? s/NNS/s straight/RB/straight forward/NNP/forward. what/WP/what am/NN/am i/PRP/i doing/VBG/doing ?/./? at/IN/at the/DT/the very/RB/very first/JJ/first level/NN/level i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the first/JJ/first characters/NNS/characters of/IN/of all/DT/all my/PRP$/my words/NNS/words and/CC/and see/VB/see what/WP/what are/VBP/are the/DT/the various/JJ/various occurrences/NNP/occurrences. if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the first/JJ/first character/NN/character i/PRP/i have/VBP/have just/RB/just b/NN/b ?/./? s/NNS/s and/CC/and s/NNS/s ?/./? s/NNP/s. so/RB/so there/RB/there will/MD/will be/VB/be one/CD/one node/NN/node corresponding/NN/corresponding to/TO/to b/VB/b and/CC/and one/CD/one corresponding/VBG/corresponding to/TO/to s/NNS/s and/CC/and within/IN/within this/DT/this b/NNP/b. then/RB/then this/DT/this b/NN/b has/VBZ/has only/RB/only 5/CD/5 words/NNS/words associated/VBN/associated with/IN/with it/NNP/it. what/WP/what are/VBP/are the/DT/the second/JJ/second character/NN/character of/IN/of these/DT/these words/NNP/words. e/NN/e i/PRP/i u/NNP/u. so/RB/so that/IN/that ?/./? s/NNS/s why/WRB/why e/NN/e i/PRP/i u/VBP/u is/VBZ/is the/DT/the children/NNS/children of/IN/of b/NN/b and/CC/and so/RB/so on/NNP/on. the/DT/the square/NN/square here/RB/here just/RB/just reflects/VBZ/reflects it/PRP/it ?/./? s/NNS/s a/DT/a leaf/NN/leaf node/NN/node corresponds/NNS/corresponds to/TO/to a/DT/a word/NNP/word. suppose/NN/suppose i/PRP/i had/VBD/had built/VBN/built such/JJ/such a/DT/a trie/NN/trie /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to search/VB/search for/IN/for a/DT/a word/NN/word here/RB/here ?/./? suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a word/NNP/word. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? suppose/NN/suppose i/PRP/i said/VBD/said ?/./? bed/VBN/bed ?/./? /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to search/VB/search for/IN/for bed/VBN/bed here/RB/here ?/./? first/RB/first i/PRP/i come/VBP/come here/NNP/here. so/RB/so this/DT/this has/VBZ/has two/CD/two children/NNP/children. how/WRB/how is/VBZ/is this/DT/this organized/VBN/organized ?/./? how/WRB/how do/VBP/do you/PRP/you think/VB/think what/WP/what kind/NN/kind of/IN/of data/NNS/data structure/VBP/structure would/MD/would i/VB/i have/VBP/have to/TO/to organize/VB/organize this/DT/this ?/./? it/PRP/it ?/./? s/NNS/s a/DT/a multi/NN/multi way/NN/way search/NN/search tree/NNP/tree. it/PRP/it is/VBZ/is in/IN/in some/DT/some sense/NN/sense but/CC/but each/DT/each node/NN/node can/MD/can have/VB/have up/RP/up to/TO/to 26/CD/26 children/NNS/children as/IN/as a/DT/a set/NNP/set. so/RB/so one/CD/one way/NN/way of/IN/of organizing/VBG/organizing it/PRP/it is/VBZ/is each/DT/each of/IN/of the/DT/the nodes/NNS/nodes has/VBZ/has an/DT/an array/NN/array of/IN/of size/NN/size 26/CD/26 sitting/VBG/sitting inside/NN/inside it/NNP/it. the/DT/the first/JJ/first location/NN/location of/IN/of the/DT/the array/NN/array points/NNS/points to/TO/to the/DT/the node/NN/node corresponding/VBG/corresponding to/TO/to a/NNP/a. second/JJ/second to/TO/to the/DT/the node/NN/node corresponding/VBG/corresponding to/TO/to b/NNP/b. third/JJ/third to/TO/to the/DT/the node/NN/node corresponding/VBG/corresponding to/TO/to c/VB/c and/CC/and so/RB/so on/NNP/on. if/IN/if you/PRP/you organize/VBP/organize it/PRP/it in/IN/in an/DT/an array/NN/array /,/, you/PRP/you waste/VBP/waste space/NNP/space. each/DT/each of/IN/of the/DT/the nodes/NNS/nodes has/VBZ/has 2/CD/2 to/TO/to 3/CD/3 children/NNS/children here/NNP/here. in/IN/in that/DT/that case/NN/case /,/, instead/RB/instead of/IN/of an/DT/an array/NN/array you/PRP/you could/MD/could keep/VB/keep a/DT/a linked/VBN/linked list/NNP/list. ordered/VBD/ordered according/VBG/according in/IN/in the/DT/the alphabetical/JJ/alphabetical order/NN/order in/IN/in which/WDT/which case/NN/case you/PRP/you know/VBP/know you/PRP/you will/MD/will have/VB/have two/CD/two nodes/NNS/nodes here/NNP/here. the/DT/the first/JJ/first nodes/NNS/nodes will/MD/will be/VB/be pointing/VBG/pointing to/TO/to b/VB/b and/CC/and the/DT/the second/JJ/second node/NN/node will/MD/will be/VB/be pointing/VBG/pointing to/TO/to s/NNP/s. you/PRP/you will/MD/will say/VB/say that/IN/that this/DT/this is/VBZ/is b/NN/b and/CC/and this/DT/this is/VBZ/is s/NNP/s. now/RB/now given/VBN/given this/DT/this /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to search/VB/search ?/./? suppose/NN/suppose i/PRP/i had/VBD/had a/DT/a link/NN/link list/NN/list at/IN/at each/DT/each nodes/NNS/nodes /,/, why/WRB/why would/MD/would this/DT/this change/NN/change the/DT/the search/NN/search time/NN/time ?/./? it/PRP/it is/VBZ/is 26/CD/26 times/NNS/times the/DT/the length/NN/length of/IN/of the/DT/the word/NN/word i/PRP/i am/VBP/am searching/VBG/searching for/NNP/for. so/RB/so i/PRP/i have/VBP/have a/DT/a link/NN/link list/NN/list sitting/VBG/sitting here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 38/CD/38 /CD/) and/CC/and in/IN/in each/DT/each of/IN/of the/DT/the nodes/NNS/nodes of/IN/of the/DT/the link/NN/link list/NN/list /,/, there/EX/there is/VBZ/is a/DT/a particular/JJ/particular character/NN/character which/WDT/which says/VBZ/says that/IN/that if/IN/if you/PRP/you are/VBP/are searching/VBG/searching for/IN/for this/DT/this word/NN/word and/CC/and if/IN/if this/DT/this is/VBZ/is its/PRP$/its first/JJ/first character/NN/character /,/, then/RB/then follow/VBP/follow this/DT/this pointer/NNP/pointer. if/IN/if you/PRP/you are/VBP/are looking/VBG/looking for/IN/for a/DT/a word/NN/word beginning/NN/beginning with/IN/with ?/./? s/NNS/s ?/./? /,/, you/PRP/you will/MD/will have/VB/have to/TO/to run/VB/run through/IN/through the/DT/the link/NN/link list/NN/list first/RB/first to/TO/to get/VB/get to/TO/to s/VB/s and/CC/and then/RB/then follow/VB/follow the/DT/the pointer/NNP/pointer. if/IN/if s/NNS/s is/VBZ/is not/RB/not there/RB/there you/PRP/you can/MD/can stop/VB/stop away/RB/away but/CC/but if/IN/if s/NNS/s is/VBZ/is there/RB/there in/IN/in which/WDT/which case/NN/case you/PRP/you will/MD/will have/VB/have to/TO/to follow/VB/follow the/DT/the pointer/NN/pointer and/CC/and repeat/NN/repeat these/DT/these things/NNP/things. so/RB/so how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take in/IN/in the/DT/the worst/JJS/worst case/NN/case ?/./? you/PRP/you might/MD/might have/VB/have to/TO/to traverse/VB/traverse 26/CD/26 nodes/NNS/nodes of/IN/of the/DT/the linked/VBN/linked list/NN/list into/IN/into the/DT/the length/NN/length of/IN/of the/DT/the word/NNP/word. /NNP/( refers/NNS/refers slide/VBP/slide time/NN/time 12/CD/12 /:/: 32/CD/32 /CD/) let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the operation/NN/operation of/IN/of find/NNP/find. how/WRB/how much/JJ/much time/NN/time does/VBZ/does find/VB/find take/NN/take ?/./? i/PRP/i am/VBP/am using/VBG/using let/NN/let ?/./? s/NNS/s say/VBP/say linked/VBN/linked list/NN/list of/IN/of presentation/NN/presentation on/IN/on each/DT/each other/NNP/other. so/RB/so 26/CD/26 is/VBZ/is the/DT/the alphabet/NN/alphabet size/NNP/size. i/PRP/i am/VBP/am using/VBG/using d/NN/d to/TO/to denote/VB/denote it/NNP/it. may/MD/may be/VB/be the/DT/the alphabet/NN/alphabet was/VBD/was not/RB/not 26/CD/26 large/NNP/large. you/PRP/you may/MD/may have/VB/have a/DT/a smaller/JJR/smaller alphabet/NN/alphabet or/CC/or a/DT/a larger/JJR/larger alphabet/NN/alphabet and/CC/and m/NN/m is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the string/NN/string of/IN/of the/DT/the word/NN/word that/IN/that i/PRP/i am/VBP/am searching/VBG/searching for/NNP/for. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the time/NN/time for/IN/for find/NNP/find. can/MD/can you/PRP/you see/VB/see that/IN/that this/DT/this is/VBZ/is also/RB/also the/DT/the time/NN/time for/IN/for insert/NN/insert and/CC/and for/IN/for delete/JJ/delete ?/./? when/WRB/when you/PRP/you know/VBP/know you/PRP/you are/VBP/are searching/VBG/searching /,/, you/PRP/you keep/VB/keep coming/VBG/coming down/IN/down and/CC/and then/RB/then you/PRP/you don/VBP/don ?/./? t/NN/t find/NN/find it/PRP/it any/DT/any more/NNP/more. if/IN/if you/PRP/you don/VBP/don ?/./? t/NN/t find/NN/find it/PRP/it any/DT/any more/RBR/more /,/, what/WP/what you/PRP/you do/VBP/do is/VBZ/is insert/NNP/insert. you/PRP/you will/MD/will create/VB/create that/IN/that letter/NN/letter /,/, put/VBD/put it/PRP/it in/IN/in the/DT/the linked/VBN/linked list/NN/list /,/, make/VBP/make a/DT/a pointer/NN/pointer down/IN/down and/CC/and may/MD/may be/VB/be you/PRP/you will/MD/will have/VB/have to/TO/to create/VB/create new/JJ/new nodes/NNP/nodes. you/PRP/you want/VBP/want me/PRP/me to/TO/to show/VB/show how/WRB/how you/PRP/you do/VBP/do this/DT/this ?/./? suppose/NN/suppose we/PRP/we were/VBD/were trying/VBG/trying to/TO/to insert/VB/insert let/NN/let me/PRP/me quickly/RB/quickly do/VBP/do it/NNP/it. what/WP/what do/VBP/do what/WP/what do/VB/do ?/./? i/PRP/i want/VBP/want to/TO/to insert/VB/insert bed/NNP/bed. what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? i/PRP/i will/MD/will search/VB/search for/IN/for bed/NNP/bed. i/PRP/i will/MD/will come/VB/come down/RB/down here/NNP/here. ?/./? d/NN/d ?/./? found/NNP/found. here/RB/here i/PRP/i would/MD/would have/VB/have a/DT/a node/NNP/node. i/PRP/i would/MD/would have/VB/have seen/VBN/seen a/DT/a ?/./? b/NN/b ?/./? /./. so/RB/so i/PRP/i come/VBP/come down/RB/down here/RB/here then/RB/then i/PRP/i would/MD/would search/VB/search for/IN/for a/DT/a ?/./? e/NN/e ?/./? /./. i/PRP/i come/VBP/come down/RB/down here/NNP/here. here/RB/here i/PRP/i am/VBP/am searching/VBG/searching for/IN/for a/DT/a ?/./? d/NN/d ?/./? in/IN/in the/DT/the linked/VBN/linked list/NN/list here/NNP/here. there/EX/there is/VBZ/is no/DT/no ?/./? d/NN/d ?/./? /./. so/RB/so i/PRP/i create/VBP/create a/DT/a node/NNP/node. now/RB/now it/PRP/it will/MD/will be/VB/be a/DT/a square/JJ/square node/NN/node because/IN/because it/PRP/it ?/./? s/NNS/s the/DT/the end/NN/end of/IN/of the/DT/the word/NN/word and/CC/and this/DT/this would/MD/would have/VB/have ?/./? d/VBN/d ?/./? written/VBN/written in/IN/in it/NNP/it. but/CC/but if/IN/if i/PRP/i had/VBD/had ?/./? b/NN/b e/NN/e d/NN/d s/NNS/s ?/./? /,/, then/RB/then i/PRP/i would/MD/would create/VB/create one/CD/one circular/JJ/circular node/NN/node and/CC/and then/RB/then a/DT/a square/NN/square node/NN/node below/NNP/below. i/PRP/i might/MD/might have/VB/have to/TO/to create/VB/create such/JJ/such a/DT/a longer/NN/longer change/NN/change here/NNP/here. in/IN/in any/DT/any case/NN/case total/NN/total time/NN/time taken/VBN/taken would/MD/would be/VB/be proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the word/NNP/word. we/PRP/we will/MD/will see/VB/see later/JJ/later when/WRB/when one/CD/one of/IN/of the/DT/the words/NNS/words is/VBZ/is the/DT/the prefix/NN/prefix of/IN/of the/DT/the other/NNP/other. that/IN/that ?/./? s/NNS/s what/WP/what you/PRP/you worried/VBD/worried about/NNP/about. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 12/CD/12 /:/: 32/CD/32 /CD/) so/RB/so find/IN/find /,/, insert/NN/insert and/CC/and delete/JJ/delete all/DT/all take/NN/take the/DT/the same/JJ/same time/NN/time order/NN/order dm/NN/dm but/CC/but one/CD/one thing/NN/thing is/VBZ/is bad/JJ/bad with/IN/with this/DT/this data/NNS/data structure/VBP/structure and/CC/and that/IN/that ?/./? s/NNS/s the/DT/the space/NN/space requirement/NN/requirement of/IN/of the/DT/the data/NNS/data structure/NNP/structure. how/WRB/how much/JJ/much space/NN/space does/VBZ/does it/PRP/it take/VB/take ?/./? 26/CD/26 times/NNS/times the/DT/the number/NN/number of/IN/of nodes/NNP/nodes. how/WRB/how many/JJ/many nodes/NNS/nodes are/VBP/are in/IN/in this/DT/this tree/NN/tree that/IN/that we/PRP/we have/VBP/have created/VBN/created ?/./? total/JJ/total number/NN/number of/IN/of characters/NNS/characters in/IN/in the/DT/the entire/JJ/entire text/NN/text which/WDT/which is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. that/IN/that ?/./? s/NNS/s the/DT/the worst/JJS/worst case/NN/case and/CC/and it/PRP/it can/MD/can be/VB/be close/JJ/close to/TO/to the/DT/the worst/JJS/worst case/NNP/case. i/PRP/i have/VBP/have let/VBN/let ?/./? s/NNS/s say/VBP/say 10/CD/10 words/NNP/words. let/NN/let ?/./? s/NNS/s say/VBP/say i/PRP/i have/VBP/have 10/CD/10 words/NNS/words /,/, each/DT/each beginning/NN/beginning with/IN/with a/DT/a different/JJ/different character/NNP/character. the/DT/the first/JJ/first word/NN/word begins/VBZ/begins with/IN/with the/DT/the ?/./? a/DT/a ?/./? second/JJ/second with/IN/with the/DT/the b/NN/b third/JJ/third with/IN/with the/DT/the c/NN/c the/DT/the fourth/JJ/fourth with/IN/with the/DT/the d/NN/d and/CC/and so/RB/so and/CC/and on/IN/on and/CC/and you/PRP/you can/MD/can make/VB/make a/DT/a long/JJ/long chain/NN/chain below/IN/below this/DT/this depending/NN/depending upon/IN/upon what/WP/what the/DT/the size/NN/size of/IN/of the/DT/the word/NN/word is/NNP/is. there/EX/there can/MD/can be/VB/be as/RB/as many/JJ/many as/IN/as many/JJ/many as/IN/as total/NNP/total. not/RB/not total/JJ/total number/NN/number of/IN/of words/NNS/words which/WDT/which is/VBZ/is exactly/RB/exactly total/JJ/total size/NN/size of/IN/of the/DT/the strings/NNS/strings in/IN/in it/NNP/it. by/IN/by size/NN/size i/PRP/i mean/VBP/mean put/VBN/put all/DT/all the/DT/the characters/NNS/characters together/RB/together and/CC/and their/PRP$/their total/JJ/total size/NNP/size. let/NN/let ?/./? s/NNS/s call/VBP/call that/IN/that double/NNP/double. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the space/NN/space required/VBN/required which/WDT/which is/VBZ/is too/RB/too large/NNP/large. so/RB/so we/PRP/we got/VBD/got to/TO/to do/VB/do something/NN/something about/IN/about this/DT/this one/NNP/one. before/IN/before that/DT/that /,/, let/VB/let ?/./? s/NNS/s see/VBP/see applications/NNP/applications. so/RB/so this/DT/this actually/RB/actually does/VBZ/does our/PRP$/our task/NN/task what/WP/what we/PRP/we started/VBD/started off/RP/off with/NNP/with. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 17/CD/17 /:/: 07/CD/07 /CD/) so/RB/so suppose/JJ/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a peace/NN/peace of/IN/of text/NN/text and/CC/and we/PRP/we take/VBP/take all/PDT/all the/DT/the words/NNS/words in/IN/in the/DT/the text/NN/text and/CC/and throw/NN/throw them/PRP/them into/IN/into a/DT/a trie/NNP/trie. i/PRP/i make/VBP/make a/DT/a trie/NN/trie out/IN/out of/IN/of all/PDT/all the/DT/the words/NNS/words in/IN/in the/DT/the text/NNP/text. now/RB/now if/IN/if i/PRP/i have/VBP/have to/TO/to search/VB/search for/IN/for a/DT/a particular/JJ/particular word/NN/word /,/, i/PRP/i can/MD/can search/VB/search for/IN/for the/DT/the word/NN/word in/IN/in time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the word/NNP/word. this/DT/this is/VBZ/is what/WP/what we/PRP/we started/VBD/started off/RP/off today/NNP/today. so/RB/so i/PRP/i can/MD/can do/VB/do word/NN/word matching/NNP/matching. find/NN/find the/DT/the first/JJ/first occurrence/NN/occurrence of/IN/of word/NN/word ?/./? x/NN/x ?/./? in/IN/in the/DT/the text/NNP/text. why/WRB/why have/VBP/have i/PRP/i said/VBD/said first/JJ/first occurrence/NN/occurrence ?/./? it/PRP/it will/MD/will be/VB/be inserted/VBN/inserted only/RB/only once/NNP/once. so/RB/so one/CD/one occurrence/NN/occurrence i/PRP/i can/MD/can detect/VB/detect by/IN/by doing/NN/doing that/NNP/that. we/PRP/we can/MD/can also/RB/also do/VB/do all/DT/all occurrences/NNP/occurrences. we/PRP/we come/VBP/come to/TO/to all/DT/all of/IN/of this/DT/this in/IN/in a/DT/a second/NNP/second. let/NN/let me/PRP/me show/VBP/show you/PRP/you an/DT/an example/NN/example and/CC/and you/PRP/you will/MD/will see/VB/see that/IN/that we/PRP/we can/MD/can actually/RB/actually even/RB/even do/VBP/do all/DT/all occurrences/NNP/occurrences. so/RB/so each/DT/each of/IN/of these/DT/these operations/NNS/operations of/IN/of matching/VBG/matching is/VBZ/is done/VBN/done by/IN/by tracing/NN/tracing the/DT/the path/NN/path corresponding/VBG/corresponding to/TO/to that/DT/that word/NN/word in/IN/in this/DT/this trie/NNP/trie. so/RB/so let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at an/DT/an example/NNP/example. this/DT/this is/VBZ/is a/DT/a piece/NN/piece of/IN/of the/DT/the text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 18/CD/18 /:/: 27/CD/27 /CD/) so/RB/so you/PRP/you have/VB/have a/DT/a bunch/NN/bunch of/IN/of words/NNP/words. ?/./? see/NN/see ?/./? for/IN/for instance/NN/instance appears/VBZ/appears twice/NNP/twice. so/RB/so i/PRP/i am/VBP/am looking/VBG/looking at/IN/at all/DT/all the/DT/the distinct/JJ/distinct words/NNS/words that/WDT/that are/VBP/are there/RB/there in/IN/in this/DT/this piece/NN/piece of/IN/of text/NN/text which/WDT/which is/VBZ/is ?/./? see/NN/see ?/./? /,/, ?/./? bear/NN/bear ?/./? /,/, ?/./? sell/NN/sell stock/NN/stock ?/./? /,/, ?/./? buy/NN/buy stock/NN/stock ?/./? /,/, ?/./? bull/NN/bull ?/./? /,/, ?/./? bid/NN/bid ?/./? and/CC/and ?/./? bell/NN/bell ?/./? /./. so/RB/so these/DT/these are/VBP/are all/DT/all the/DT/the words/NNS/words i/PRP/i threw/VBP/threw them/PRP/them into/IN/into a/DT/a trie/NNP/trie. this/DT/this is/VBZ/is the/DT/the trie/NN/trie i/PRP/i get/VBP/get and/CC/and as/IN/as you/PRP/you can/MD/can see/VB/see /,/, this/DT/this leaf/NN/leaf corresponds/VBZ/corresponds to/TO/to ?/./? b/NN/b e/NN/e a/DT/a r/NN/r ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 15/CD/15 /CD/) and/CC/and bear/JJ/bear occurs/NNS/occurs at/IN/at position/NN/position six/CD/six that/WDT/that text/NN/text that/WDT/that is/VBZ/is so/RB/so with/IN/with this/DT/this leaf/NN/leaf i/PRP/i store/VBP/store 6/CD/6. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the bid/NNP/bid. bid/NN/bid is/VBZ/is occurring/VBG/occurring at/IN/at two/CD/two places/NNP/places. perhaps/RB/perhaps starting/VBG/starting at/IN/at 47/CD/47 and/CC/and starting/VBG/starting at/IN/at 58/CD/58. so/RB/so i/PRP/i will/MD/will store/VB/store both/DT/both 47/CD/47 and/CC/and 58/CD/58 here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 42/CD/42 /CD/) /./. this/DT/this is/VBZ/is what/WP/what we/PRP/we call/VBP/call preprocessing/VBG/preprocessing the/DT/the text/NNP/text. i/PRP/i took/VBD/took my/PRP$/my initial/JJ/initial text/NN/text and/CC/and did/VBD/did something/NN/something /,/, built/VBN/built this/DT/this trie/NN/trie on/IN/on it/PRP/it /,/, stored/VBD/stored this/DT/this information/NN/information in/IN/in each/DT/each of/IN/of these/DT/these leaves/NNS/leaves /,/, so/RB/so that/IN/that now/RB/now if/IN/if you/PRP/you come/VBP/come with/IN/with queries/NNS/queries like/IN/like where/WRB/where does/VBZ/does this/DT/this particular/JJ/particular word/NN/word appear/NN/appear /,/, i/PRP/i can/MD/can quickly/RB/quickly tell/VB/tell you/NNP/you. how/WRB/how much/JJ/much time/NN/time do/VBP/do i/PRP/i need/VBP/need ?/./? it/PRP/it ?/./? s/NNS/s very/RB/very little/NNP/little. it/PRP/it ?/./? s/NNS/s just/RB/just proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the word/NN/word and/CC/and i/PRP/i will/MD/will be/VB/be able/JJ/able to/TO/to tell/VB/tell you/PRP/you all/DT/all the/DT/the places/NNS/places where/WRB/where this/DT/this word/NN/word is/VBZ/is /,/, by/IN/by looking/NN/looking at/IN/at this/DT/this number/NN/number down/RP/down here/NNP/here. this/DT/this doesn/NN/doesn ?/./? t/NN/t really/RB/really solve/VB/solve the/DT/the problem/NN/problem that/IN/that we/PRP/we were/VBD/were talking/VBG/talking of/IN/of in/IN/in the/DT/the last/JJ/last class/NN/class which/WDT/which was/VBD/was that/IN/that i/PRP/i give/VBP/give you/PRP/you piece/VBP/piece of/IN/of text/NN/text and/CC/and i/PRP/i give/VBP/give you/PRP/you pattern/VBP/pattern and/CC/and find/VB/find where/WRB/where all/DT/all the/DT/the pattern/NN/pattern appears/VBZ/appears in/IN/in the/DT/the text/NNP/text. because/IN/because my/PRP$/my text/NN/text need/NN/need not/RB/not be/VB/be a/DT/a collection/NN/collection of/IN/of words/NNP/words. as/IN/as i/PRP/i said/VBD/said you/PRP/you know/VBP/know my/PRP$/my text/NN/text could/MD/could be/VB/be let/VBN/let ?/./? s/NNS/s say/VBP/say /,/, sequence/NN/sequence of/IN/of basis/NN/basis in/IN/in a/DT/a gene/NN/gene database/NNP/database. so/RB/so i/PRP/i have/VBP/have just/RB/just a/DT/a long/JJ/long sequence/NN/sequence of/IN/of ?/./? a/DT/a c/NN/c t/NN/t g/NN/g ?/./? that/IN/that kind/NN/kind of/IN/of thing/NN/thing and/CC/and i/PRP/i am/VBP/am searching/VBG/searching for/IN/for a/DT/a particular/JJ/particular sequence/NN/sequence in/IN/in there/NNP/there. so/RB/so here/RB/here we/PRP/we have/VBP/have a/DT/a separate/JJ/separate notion/NN/notion of/IN/of words/NNS/words and/CC/and if/IN/if we/PRP/we are/VBP/are searching/VBG/searching for/IN/for words/NNS/words /,/, that/IN/that ?/./? s/NNS/s okay/NNP/okay. suppose/NN/suppose i/PRP/i was/VBD/was searching/VBG/searching for/IN/for ?/./? a/DT/a r/NN/r blank/NN/blank s/NNS/s e/VBP/e ?/./? /,/, then/RB/then i/PRP/i can/MD/can not/RB/not search/VB/search for/IN/for patterns/NNS/patterns here/NNP/here. so/RB/so if/IN/if i/PRP/i have/VBP/have a/DT/a pattern/NN/pattern like/IN/like that/NNP/that. so/RB/so if/IN/if i/PRP/i don/VBP/don ?/./? t/NN/t know/VB/know if/IN/if i/PRP/i think/VBP/think of/IN/of these/DT/these blanks/NNS/blanks also/RB/also as/IN/as some/DT/some special/JJ/special character/NN/character of/IN/of my/PRP$/my alphabet/NN/alphabet /,/, then/RB/then i/PRP/i can/MD/can not/RB/not really/RB/really search/NN/search for/IN/for anything/NNP/anything. so/RB/so the/DT/the reason/NN/reason i/PRP/i can/MD/can search/VB/search here/RB/here is/VBZ/is because/IN/because there/EX/there are/VBP/are well/RB/well defined/VBN/defined boundaries/NNP/boundaries. my/PRP$/my pattern/NN/pattern has/VBZ/has to/TO/to begin/VB/begin with/IN/with the/DT/the boundary/JJ/boundary and/CC/and end/NN/end with/IN/with the/DT/the boundary/NNP/boundary. that/IN/that ?/./? s/NNS/s why/WRB/why i/PRP/i can/MD/can search/NNP/search. so/RB/so now/RB/now first/JJ/first we/PRP/we will/MD/will address/VB/address the/DT/the issue/NN/issue of/IN/of the/DT/the large/JJ/large size/NN/size that/WDT/that this/DT/this trie/NN/trie has/NNP/has. let/NN/let ?/./? s/NNS/s try/VBP/try and/CC/and reduce/VB/reduce the/DT/the size/NN/size of/IN/of the/DT/the trie/NN/trie first/NNP/first. we/PRP/we will/MD/will do/VB/do the/DT/the following/NNP/following. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 24/CD/24 /:/: 19/CD/19 /CD/) we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at all/DT/all nodes/NNS/nodes of/IN/of the/DT/the trie/NN/trie which/WDT/which have/VBP/have degree/VBP/degree only/RB/only one/CD/one and/CC/and remove/VB/remove those/DT/those nodes/NNP/nodes. by/IN/by degree/NN/degree one/CD/one i/PRP/i mean/VBP/mean who/WP/who have/VBP/have only/RB/only one/CD/one child/NN/child and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to compress/NN/compress those/DT/those nodes/NNP/nodes. so/RB/so if/IN/if this/DT/this is/VBZ/is my/PRP$/my standard/JJ/standard trie/NN/trie /,/, see/VB/see that/IN/that there/EX/there are/VBP/are whole/JJ/whole lot/NN/lot of/IN/of nodes/NNS/nodes here/RB/here which/WDT/which have/VBP/have only/RB/only one/CD/one child/NNP/child. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 30/CD/30 to/TO/to 23/CD/23 /:/: 40/CD/40 /CD/) this/DT/this node/NN/node for/IN/for instance/NN/instance this/DT/this node/NN/node this/DT/this node/NN/node this/DT/this node/NN/node in/IN/in fact/NN/fact this/DT/this node/NN/node as/IN/as well/RB/well as/IN/as this/DT/this node/NNP/node. this/DT/this node/NN/node also/RB/also has/VBZ/has only/RB/only one/CD/one child/NN/child this/DT/this has/VBZ/has only/RB/only one/CD/one child/NNP/child. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to compress/NN/compress that/NNP/that. by/IN/by compress/NN/compress i/PRP/i mean/VBP/mean i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take the/DT/the child/NN/child and/CC/and collapse/NN/collapse it/PRP/it in/IN/in to/TO/to the/DT/the parent/NN/parent and/CC/and if/IN/if the/DT/the resulting/VBG/resulting node/NN/node also/RB/also has/VBZ/has only/RB/only one/CD/one child/NN/child /,/, i/PRP/i am/VBP/am again/RB/again going/VBG/going to/TO/to take/VB/take the/DT/the child/NN/child and/CC/and collapse/NN/collapse it/PRP/it in/IN/in to/TO/to the/DT/the parent/NN/parent and/CC/and keep/VB/keep doing/VBG/doing this/NNP/this. in/IN/in my/PRP$/my previous/JJ/previous example/NN/example /,/, i/PRP/i had/VBD/had said/VBN/said i/PRP/i have/VBP/have trie/JJ/trie in/IN/in which/WDT/which there/EX/there were/VBD/were a/DT/a bunch/NN/bunch of/IN/of words/NNS/words /,/, each/DT/each of/IN/of which/WDT/which begins/VBZ/begins with/IN/with a/DT/a different/JJ/different character/NNP/character. so/RB/so i/PRP/i had/VBD/had created/VBN/created a/DT/a long/JJ/long chain/NN/chain like/IN/like this/NNP/this. now/RB/now if/IN/if i/PRP/i compress/VBP/compress them/PRP/them in/IN/in to/TO/to a/DT/a single/JJ/single thing/NN/thing /,/, then/RB/then this/DT/this entire/NN/entire thing/NN/thing becomes/VBZ/becomes just/RB/just one/CD/one node/NNP/node. so/RB/so i/PRP/i will/MD/will just/RB/just show/VB/show that/IN/that to/TO/to you/PRP/you in/IN/in a/DT/a second/NNP/second. this/DT/this is/VBZ/is what/WP/what my/PRP$/my compressed/VBN/compressed trie/NN/trie would/MD/would look/VB/look like/IN/like /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 39/CD/39 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time 24/CD/24 /:/: 36/CD/36 /CD/) b/NN/b and/CC/and s/NNS/s are/VBP/are the/DT/the same/NNP/same. ?/./? i/PRP/i d/VBD/d ?/./? collapse/NN/collapse in/IN/in to/TO/to one/NNP/one. now/RB/now a/DT/a node/NN/node doesn/NN/doesn ?/./? t/NN/t have/VBP/have one/CD/one single/JJ/single character/NN/character but/CC/but a/DT/a string/NN/string as/IN/as its/PRP$/its labeled/NNP/labeled. this/DT/this e/NN/e a/DT/a r/NN/r collapses/VBZ/collapses here/NNP/here. l/NN/l collapses/NNS/collapses there/EX/there and/CC/and so/RB/so on/NNP/on. as/IN/as you/PRP/you can/MD/can see/VB/see /,/, the/DT/the compressed/VBN/compressed trie/NN/trie is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the standard/JJ/standard trie/NNP/trie. why/WRB/why would/MD/would this/DT/this take/VB/take less/JJR/less space/NN/space now/RB/now ?/./? what/WP/what is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in this/DT/this thing/NN/thing now/RB/now ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 25/CD/25 /:/: 29/CD/29 /CD/) so/RB/so this/DT/this is/VBZ/is a/DT/a fact/NN/fact which/WDT/which will/MD/will prove/VB/prove for/IN/for yourself/NNP/yourself. it/PRP/it ?/./? s/NNS/s very/RB/very simple/NNP/simple. suppose/NN/suppose i/PRP/i have/VBP/have a/DT/a tree/NN/tree which/WDT/which has/VBZ/has ?/./? l/NN/l ?/./? leafs/NNS/leafs in/IN/in it/PRP/it and/CC/and every/DT/every node/NN/node of/IN/of the/DT/the tree/NN/tree has/VBZ/has at/IN/at least/JJS/least two/CD/two children/NNP/children. every/DT/every internal/JJ/internal node/NN/node of/IN/of the/DT/the tree/NN/tree has/VBZ/has at/IN/at least/JJS/least two/CD/two children/NNP/children. then/RB/then the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes can/MD/can not/RB/not be/VB/be more/RBR/more then/RB/then l/VB/l -1/NNP/-1. a/DT/a tree/NN/tree in/IN/in which/WDT/which every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least two/CD/two children/NNS/children /,/, by/IN/by that/DT/that i/PRP/i mean/VBP/mean except/IN/except leaf/NN/leaf node/NN/node clearly/NNP/clearly. leaf/NN/leaf nodes/VBZ/nodes don/NN/don ?/./? t/NN/t have/VBP/have any/DT/any children/NNP/children. every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least two/CD/two children/NNP/children. it/PRP/it has/VBZ/has at/IN/at most/JJS/most l/JJ/l -1/-NONE-/-1 internal/JJ/internal nodes/NNS/nodes where/WRB/where ?/./? l/NN/l ?/./? is/VBZ/is the/DT/the number/NN/number of/IN/of leaves/NNP/leaves. if/IN/if every/DT/every node/NN/node has/VBZ/has at/IN/at least/JJS/least two/CD/two children/NNS/children /,/, then/RB/then the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes is/VBZ/is not/RB/not too/RB/too much/NNP/much. this/DT/this is/VBZ/is a/DT/a very/RB/very simple/JJ/simple thing/NNP/thing. you/PRP/you can/MD/can prove/VB/prove it/PRP/it by/IN/by induction/NNP/induction. how/WRB/how are/VBP/are we/PRP/we going/VBG/going to/TO/to use/VB/use this/DT/this ?/./? how/WRB/how many/JJ/many leaves/NNS/leaves are/VBP/are there/RB/there in/IN/in my/PRP$/my trie/NN/trie ?/./? it/PRP/it ?/./? s/NNS/s the/DT/the number/NN/number of/IN/of words/NNP/words. this/DT/this says/VBZ/says that/IN/that the/DT/the number/NN/number of/IN/of internal/JJ/internal nodes/NNS/nodes is/VBZ/is going/VBG/going to/TO/to be/VB/be /:/( number/NN/number of/IN/of words/NNS/words ?/./? 1/CD/1 /CD/) at/IN/at most/NNP/most. so/RB/so the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in a/DT/a compressed/VBN/compressed trie/NN/trie is/VBZ/is order/NN/order of/IN/of s/NNS/s where/WRB/where s/NNS/s is/VBZ/is the/DT/the number/NN/number of/IN/of words/NNP/words. s/NNS/s was/VBD/was the/DT/the set/NN/set of/IN/of string/NNP/string. so/RB/so s/VBZ/s is/VBZ/is the/DT/the number/NN/number of/IN/of words/NNP/words. this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in a/DT/a compressed/VBN/compressed trie/NNP/trie. this/DT/this doesn/NN/doesn ?/./? t/NN/t solve/NN/solve our/PRP$/our problem/NN/problem completely/NNP/completely. why/WRB/why because/IN/because each/DT/each node/NN/node now/RB/now has/VBZ/has a/DT/a longer/JJR/longer label/NN/label inside/NN/inside it/NNP/it. we/PRP/we will/MD/will also/RB/also have/VB/have to/TO/to store/VB/store that/IN/that label/NNP/label. we/PRP/we need/VBP/need space/NN/space to/TO/to store/VB/store that/IN/that label/NNP/label. from/IN/from where/WRB/where do/VBP/do we/PRP/we get/VB/get that/IN/that space/NN/space now/RB/now ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to store/VB/store labels/NNS/labels not/RB/not as/IN/as labels/NNS/labels but/CC/but as/IN/as numbers/NNP/numbers. let/NN/let ?/./? s/NNS/s see/VBP/see what/WP/what i/PRP/i mean/VBP/mean by/IN/by that/NNP/that. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this label/NN/label ?/./? i/PRP/i d/VBD/d ?/./? /./. this/DT/this was/VBD/was the/DT/the last/JJ/last two/CD/two characters/NNS/characters of/IN/of the/DT/the word/NN/word ?/./? b/NN/b i/PRP/i d/VBP/d ?/./? /./. /:/( refer/NN/refer slide/NN/slide time/NN/time 27/CD/27 /:/: 27/CD/27 /CD/) so/RB/so ?/./? bid/NN/bid ?/./? is/VBZ/is the/DT/the 6th/JJ/6th word/NN/word in/IN/in my/PRP$/my collection/NNP/collection. i/PRP/i have/VBP/have kept/VBN/kept all/DT/all the/DT/the words/NNS/words in/IN/in some/DT/some array/NN/array in/IN/in some/DT/some arrays/NNS/arrays and/CC/and id/VBD/id is/VBZ/is the/DT/the last/JJ/last two/CD/two characters/NNP/characters. so/RB/so in/IN/in the/DT/the 6th/JJ/6th word/NN/word /,/, ?/./? i/PRP/i d/VBD/d ?/./? begins/NNS/begins at/IN/at position/NN/position one/CD/one and/CC/and ends/NNS/ends at/IN/at position/NN/position 2/CD/2. so/RB/so each/DT/each of/IN/of these/DT/these labels/NNS/labels no/DT/no matter/NN/matter how/WRB/how long/JJ/long they/PRP/they are/VBP/are /,/, can/MD/can be/VB/be stored/VBN/stored as/IN/as three/CD/three numbers/NNP/numbers. this/DT/this is/VBZ/is because/IN/because each/DT/each of/IN/of these/DT/these labels/NNS/labels will/MD/will be/VB/be a/DT/a substring/NN/substring of/IN/of one/CD/one of/IN/of these/DT/these words/NNP/words. do/VBP/do you/PRP/you follow/VB/follow what/WP/what i/PRP/i mean/VBP/mean by/IN/by sub-string/JJ/sub-string of/IN/of one/CD/one of/IN/of the/DT/the words/NNS/words ?/./? not/RB/not necessarily/RB/necessarily a/DT/a suffix/NN/suffix or/CC/or the/DT/the prefix/NN/prefix although/IN/although in/IN/in this/DT/this example/NN/example it/PRP/it looks/VBZ/looks like/IN/like a/DT/a suffix/NN/suffix while/IN/while it/PRP/it is/VBZ/is not/RB/not necessarily/NNP/necessarily. for/IN/for instance/NN/instance ?/./? to/TO/to ?/./? is/VBZ/is not/RB/not a/DT/a suffix/NNP/suffix. i/PRP/i am/VBP/am not/RB/not saying/VBG/saying prefix/NN/prefix or/CC/or the/DT/the suffix/NNP/suffix. i/PRP/i am/VBP/am saying/VBG/saying it/PRP/it ?/./? s/NNS/s a/DT/a sub/NN/sub string/NNP/string. it/PRP/it is/VBZ/is a/DT/a contiguous/JJ/contiguous part/NN/part of/IN/of the/DT/the string/NNP/string. now/RB/now what/WP/what is/VBZ/is the/DT/the space/NN/space used/VBD/used by/IN/by the/DT/the trie/NN/trie ?/./? you/PRP/you will/MD/will have/VB/have to/TO/to store/VB/store these/DT/these words/NNS/words somewhere/NNP/somewhere. this/DT/this is/VBZ/is your/PRP$/your input/NNP/input. this/DT/this is/VBZ/is stored/VBN/stored somewhere/-NONE-/somewhere. so/RB/so we/PRP/we are/VBP/are just/RB/just trying/VBG/trying to/TO/to figure/VB/figure out/RP/out how/WRB/how much/RB/much additional/JJ/additional space/NN/space we/PRP/we are/VBP/are taking/VBG/taking for/IN/for the/DT/the data/NNS/data structure/VBP/structure there/NNP/there. then/RB/then how/WRB/how much/RB/much additional/JJ/additional space/NN/space are/VBP/are we/PRP/we taking/VBG/taking ?/./? now/RB/now this/DT/this space/NN/space i/PRP/i am/VBP/am taking/VBG/taking by/IN/by this/DT/this data/NN/data structure/NN/structure is/VBZ/is number/NN/number of/IN/of nodes/NNP/nodes. number/NN/number of/IN/of nodes/NNS/nodes is/VBZ/is two/CD/two times/NNS/times number/NN/number of/IN/of words/NNS/words at/IN/at most/JJS/most into/IN/into three/CD/three for/IN/for three/CD/three integers/NNS/integers each/DT/each because/IN/because then/RB/then there/RB/there are/VBP/are some/DT/some pointers/NNP/pointers. how/WRB/how does/VBZ/does searching/VBG/searching happen/VB/happen ?/./? let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at that/NNP/that. now/RB/now how/WRB/how does/VBZ/does insertion/NN/insertion and/CC/and deletion/NN/deletion happen/VB/happen in/IN/in a/DT/a compressed/VBN/compressed type/NN/type ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 32/CD/32 /:/: 52/CD/52 /CD/) suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the trie/NN/trie i/PRP/i have/NNP/have. so/RB/so the/DT/the labels/NNS/labels that/WDT/that i/PRP/i have/VBP/have put/VBN/put at/IN/at a/DT/a node/NN/node /,/, we/PRP/we can/MD/can also/RB/also think/VB/think of/IN/of that/DT/that they/PRP/they are/VBP/are the/DT/the labels/NNS/labels on/IN/on the/DT/the parent/NN/parent edge/NN/edge of/IN/of that/DT/that node/NNP/node. it/PRP/it ?/./? s/NNS/s one/CD/one and/CC/and the/DT/the same/JJ/same thing/NN/thing you/PRP/you understand/VBP/understand what/WP/what i/PRP/i mean/VBP/mean ?/./? there/EX/there is/VBZ/is also/RB/also a/DT/a subtle/NN/subtle reason/NN/reason why/WRB/why i/PRP/i am/VBP/am doing/VBG/doing it/PRP/it this/DT/this way/NN/way and/CC/and we/PRP/we will/MD/will see/VB/see why/NNP/why. i/PRP/i am/VBP/am searching/VBG/searching for/IN/for this/DT/this string/NN/string ?/./? b/NN/b b/NN/b a/DT/a a/DT/a b/NN/b b/NN/b ?/./? /./. i/PRP/i start/VBP/start searching/NNP/searching. so/RB/so conceptually/RB/conceptually it/PRP/it is/VBZ/is the/DT/the same/JJ/same as/IN/as saying/VBG/saying i/PRP/i see/VBP/see a/DT/a ?/./? b/NN/b ?/./? here/RB/here and/CC/and come/VB/come down/NNP/down. then/RB/then the/DT/the first/JJ/first here/RB/here is/VBZ/is the/DT/the a/NNP/a. this/DT/this is/VBZ/is a/DT/a b/NNP/b. so/RB/so i/PRP/i should/MD/should go/VB/go this/DT/this way/NN/way and/CC/and i/PRP/i come/VBP/come down/RB/down here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 04/CD/04 to/TO/to 32/CD/32 /:/: 29/CD/29 /CD/) /./. now/RB/now the/DT/the third/JJ/third character/NN/character i/PRP/i have/VBP/have is/VBZ/is an/DT/an ?/./? a/DT/a ?/./? /./. so/RB/so i/PRP/i am/VBP/am looking/VBG/looking for/IN/for an/DT/an ?/./? a/DT/a ?/./? /./. so/RB/so the/DT/the first/JJ/first character/NN/character here/RB/here is/VBZ/is an/DT/an ?/./? a/DT/a ?/./? /./. the/DT/the first/JJ/first character/NN/character here/RB/here is/VBZ/is a/DT/a ?/./? b/NN/b ?/./? /./. so/RB/so i/PRP/i should/MD/should come/VB/come down/RB/down to/TO/to ?/./? b/NN/b ?/./? and/CC/and then/RB/then i/PRP/i start/VBP/start matching/VBG/matching this/DT/this with/IN/with this/DT/this the/DT/the label/NN/label here/NNP/here. we/PRP/we are/VBP/are not/RB/not doing/VBG/doing anything/NN/anything sophisticated/NNP/sophisticated. we/PRP/we should/MD/should now/RB/now get/VB/get familiar/JJ/familiar with/IN/with this/NNP/this. we/PRP/we are/VBP/are searching/VBG/searching for/IN/for this/DT/this pattern/NNP/pattern. we/PRP/we are/VBP/are moving/VBG/moving down/IN/down the/DT/the tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) degree/NN/degree is/VBZ/is the/DT/the number/NN/number of/IN/of children/NNP/children. so/RB/so we/PRP/we are/VBP/are inserting/VBG/inserting b/NN/b b/NN/b a/DT/a a/DT/a bb/NN/bb which/WDT/which means/VBZ/means we/PRP/we first/RB/first search/VBP/search for/IN/for it/NNP/it. we/PRP/we search/VBP/search for/IN/for it/NNP/it. we/PRP/we reach/VBP/reach the/DT/the middle/NN/middle of/IN/of this/DT/this edge/NNP/edge. till/NN/till the/DT/the middle/NN/middle of/IN/of this/DT/this edge/NN/edge /,/, we/PRP/we have/VBP/have matched/VBN/matched b/NN/b b/NN/b a/DT/a a/NNP/a. /NNP/( hindi/NN/hindi /:/) next/JJ/next character/NN/character is/VBZ/is b/NN/b /:/( hindi/NN/hindi /:/) /./. red/VBN/red node/NN/node is/VBZ/is the/DT/the node/NN/node i/PRP/i ?/./? ve/JJ/ve inserted/VBN/inserted /-NONE-/( hindi/NN/hindi /:/) /./. this/DT/this is/VBZ/is how/WRB/how you/PRP/you will/MD/will insert/NNP/insert. now/RB/now how/WRB/how will/MD/will you/PRP/you delete/VB/delete ?/./? we/PRP/we proceed/VBD/proceed /,/, we/PRP/we find/VBP/find the/DT/the node/NN/node and/CC/and we/PRP/we delete/NNP/delete. now/RB/now something/VBG/something else/RB/else has/VBZ/has to/TO/to be/VB/be done/NNP/done. suppose/NN/suppose i/PRP/i have/VBP/have to/TO/to delete/VB/delete b/NN/b b/NN/b a/DT/a a/DT/a b/NN/b b/NNP/b. i/PRP/i will/MD/will come/VB/come here/RB/here and/CC/and i/PRP/i will/MD/will delete/VB/delete this/DT/this guy/NNP/guy. now/RB/now i/PRP/i look/VBP/look at/IN/at the/DT/the parent/NNP/parent. if/IN/if the/DT/the parent/NN/parent has/VBZ/has only/RB/only one/CD/one child/NN/child left/NN/left now/RB/now /,/, collapse/NN/collapse the/DT/the child/NN/child with/IN/with the/DT/the parent/NN/parent and/CC/and you/PRP/you might/MD/might have/VB/have to/TO/to do/VB/do this/DT/this multiple/NN/multiple times/NNP/times. so/RB/so it/PRP/it ?/./? s/NNS/s a/DT/a very/RB/very simple/JJ/simple data/NNS/data structure/NNP/structure. i/PRP/i am/VBP/am leaving/VBG/leaving out/RP/out the/DT/the implementation/NN/implementation details/NNP/details. you/PRP/you will/MD/will have/VB/have to/TO/to figure/VB/figure a/DT/a few/JJ/few things/NNS/things out/NNP/out. tries/NNS/tries are/VBP/are very/RB/very useful/JJ/useful they/PRP/they are/VBP/are used/VBN/used in/IN/in web/NN/web search/NN/search because/IN/because you/PRP/you can/MD/can imagine/VB/imagine why/NNP/why. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 36/CD/36 /:/: 59/CD/59 /CD/) imagine/NN/imagine you/PRP/you are/VBP/are going/VBG/going to/TO/to google/NNP/google. you/PRP/you type/VBP/type a/DT/a word/NN/word and/CC/and it/PRP/it retrieves/VBZ/retrieves to/TO/to you/PRP/you all/DT/all the/DT/the web/NN/web pages/NNS/pages that/WDT/that have/VBP/have that/IN/that word/NNP/word. that/IN/that part/NN/part which/WDT/which helps/NNS/helps you/PRP/you retrieve/VBP/retrieve all/DT/all the/DT/the things/NNS/things is/VBZ/is called/VBN/called the/DT/the index/NN/index of/IN/of the/DT/the search/NN/search engine/NNP/engine. so/RB/so it/PRP/it is/VBZ/is stored/VBN/stored as/RB/as the/DT/the compressed/VBN/compressed trie/NN/trie typically/NNP/typically. i/PRP/i am/VBP/am not/RB/not saying/VBG/saying that/IN/that google/JJ/google doesn/NN/doesn ?/./? t/NN/t this/DT/this way/NNP/way. this/DT/this is/VBZ/is what/WP/what generic/JJ/generic search/NN/search engine/NN/engine do/VBP/do and/CC/and each/DT/each leaf/NN/leaf of/IN/of the/DT/the trie/NN/trie is/VBZ/is associated/VBN/associated with/IN/with the/DT/the word/NNP/word. /NNP/( hindi/NN/hindi /:/) /./. that/IN/that ?/./? s/NNS/s called/VBN/called the/DT/the ?/./? occurrence/NN/occurrence list/NN/list ?/./? /./. the/DT/the trie/NN/trie is/VBZ/is kept/VBN/kept in/IN/in an/DT/an internal/JJ/internal memory/NNP/memory. the/DT/the list/NN/list can/MD/can be/VB/be very/RB/very long/NNP/long. if/IN/if you/PRP/you type/VBP/type a/DT/a word/NN/word like/IN/like ?/./? computer/NN/computer ?/./? /,/, you/PRP/you imagine/VBP/imagine the/DT/the number/NN/number of/IN/of urls/NNS/urls pages/NNS/pages that/WDT/that could/MD/could contain/VB/contain that/IN/that word/NNP/word. so/RB/so this/DT/this occurrence/NN/occurrence list/NN/list will/MD/will be/VB/be huge/NNP/huge. so/RB/so that/IN/that ?/./? s/NNS/s why/WRB/why it/PRP/it ?/./? s/NNS/s not/RB/not kept/VBD/kept in/IN/in the/DT/the main/JJ/main memory/NNP/memory. it/PRP/it ?/./? s/NNS/s kept/VBD/kept on/IN/on disk/NNP/disk. now/RB/now suppose/VBP/suppose you/PRP/you wrote/VBD/wrote ?/./? computer/NN/computer and/CC/and music/JJ/music ?/./? /,/, so/RB/so now/RB/now it/PRP/it will/MD/will search/VB/search for/IN/for computer/NN/computer and/CC/and it/PRP/it will/MD/will search/VB/search for/IN/for music/NNP/music. it/PRP/it will/MD/will get/VB/get two/CD/two occurrence/NN/occurrence lists/NNP/lists. now/RB/now it/PRP/it has/VBZ/has to/TO/to take/VB/take their/PRP$/their intersection/NNP/intersection. so/RB/so boolean/JJ/boolean queries/NNS/queries corresponds/NNS/corresponds to/TO/to set/VB/set operation/NN/operation of/IN/of this/DT/this occurrence/NN/occurrence list/NNP/list. if/IN/if it/PRP/it is/VBZ/is ?/./? and/CC/and ?/./? it/PRP/it is/VBZ/is union/NN/union and/CC/and if/IN/if it/PRP/it is/VBZ/is ?/./? or/CC/or ?/./? /,/, it/PRP/it is/VBZ/is the/DT/the intersection/NNP/intersection. of/IN/of course/NN/course there/EX/there are/VBP/are lots/NNS/lots and/CC/and lots/NNS/lots of/IN/of techniques/NNS/techniques that/WDT/that go/VB/go into/IN/into speed/NN/speed up/IN/up the/DT/the thing/NNP/thing. you/PRP/you eliminate/VBP/eliminate stop/JJ/stop words/NNS/words and/CC/and many/JJ/many other/JJ/other things/NNP/things. we/PRP/we will/MD/will not/RB/not go/VB/go into/IN/into that/NNP/that. they/PRP/they are/VBP/are also/RB/also used/VBN/used in/IN/in internet/NN/internet routers/NNP/routers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 39/CD/39 /:/: 02/CD/02 /CD/) now/RB/now you/PRP/you are/VBP/are all/DT/all perhaps/RB/perhaps familiar/JJ/familiar that/IN/that each/DT/each computer/NN/computer on/IN/on internet/NN/internet has/VBZ/has an/DT/an internet/NN/internet or/CC/or an/DT/an ip/NN/ip address/NN/address which/WDT/which is/VBZ/is a/DT/a 32-bit/JJ/32-bit number/NNP/number. so/RB/so type/NN/type google.com/NNP/google.com. you/PRP/you can/MD/can use/VB/use nslookup/NN/nslookup to/TO/to find/VB/find out/RP/out the/DT/the ip/NN/ip address/NNP/address. so/RB/so a/DT/a particular/JJ/particular organization/NN/organization just/RB/just uses/VBZ/uses the/DT/the subset/NN/subset which/WDT/which are/VBP/are all/DT/all related/VBN/related in/IN/in a/DT/a certain/JJ/certain manner/NNP/manner. for/IN/for instance/NN/instance /,/, all/DT/all iit/NN/iit delhi/NN/delhi address/NN/address will/MD/will look/VB/look something/NN/something like/IN/like 10/CD/10. now/RB/now how/WRB/how is/VBZ/is routing/VBG/routing done/NN/done ?/./? in/IN/in a/DT/a router/NN/router when/WRB/when packet/NN/packet comes/VBZ/comes in/IN/in /,/, it/PRP/it has/VBZ/has an/DT/an ip/NN/ip address/NN/address written/VBN/written to/TO/to it/NNP/it. it/PRP/it doesn/VBD/doesn ?/./? t/NN/t say/VB/say if/IN/if this/DT/this is/VBZ/is the/DT/the ip/NN/ip address/NN/address /,/, send/NN/send it/PRP/it here/NNP/here. router/NN/router is/VBZ/is a/DT/a bunch/NN/bunch of/IN/of links/NNS/links coming/VBG/coming in/IN/in links/NNS/links and/CC/and going/VBG/going out/NNP/out. so/RB/so packets/VBZ/packets comes/VBZ/comes on/IN/on one/CD/one of/IN/of the/DT/the links/NNS/links and/CC/and the/DT/the router/NN/router has/VBZ/has to/TO/to figure/VB/figure out/RP/out which/WDT/which links/NNS/links to/TO/to send/VB/send it/PRP/it out/RP/out to/NNP/to. there/RB/there are/VBP/are 232/CD/232 ip/NN/ip addresses/NNP/addresses. it/PRP/it says/VBZ/says take/VB/take the/DT/the ip/NN/ip address/NN/address of/IN/of the/DT/the packet/NN/packet and/CC/and find/VB/find out/RP/out the/DT/the longest/JJS/longest match/NNP/match. your/PRP$/your table/JJ/table would/MD/would have/VB/have the/DT/the following/NNP/following. anything/NN/anything that/WDT/that begins/VBZ/begins with/IN/with a/DT/a 10/CD/10 /,/, send/NN/send it/PRP/it here/NNP/here. anything/NN/anything that/WDT/that begins/VBZ/begins with/IN/with the/DT/the 10.27/CD/10.27 /,/, send/NN/send it/PRP/it here/RB/here /,/, anything/NN/anything that/IN/that begins/VBZ/begins with/IN/with the/DT/the 10.27.36/CD/10.27.36 /,/, send/NN/send it/PRP/it here/NNP/here. so/RB/so now/RB/now what/WP/what is/VBZ/is the/DT/the router/NN/router going/VBG/going to/TO/to do/VB/do ?/./? it/PRP/it ?/./? s/NNS/s going/VBG/going to/TO/to find/VB/find out/RP/out the/DT/the best/JJS/best possible/JJ/possible match/NN/match of/IN/of these/DT/these three/NNP/three. it/PRP/it will/MD/will try/VB/try to/TO/to find/VB/find out/RP/out the/DT/the longest/JJS/longest match/NNP/match. so/RB/so if/IN/if the/DT/the packet/NN/packet had/VBD/had 10.27.36/CD/10.27.36 /,/, then/RB/then it/PRP/it will/MD/will go/VB/go on/IN/on the/DT/the 36/CD/36 route/NNP/route. but/CC/but if/IN/if it/PRP/it was/VBD/was 10.27.34/CD/10.27.34 /,/, it/PRP/it will/MD/will take/VB/take the/DT/the 10.27/CD/10.27 route/NNP/route. if/IN/if it/PRP/it was/VBD/was 10.28/CD/10.28 /,/, it/PRP/it will/MD/will take/VB/take the/DT/the 10/CD/10 route/NNP/route. this/DT/this is/VBZ/is the/DT/the way/NN/way routing/VBG/routing tables/NNS/tables are/VBP/are organized/NNP/organized. so/RB/so they/PRP/they are/VBP/are also/RB/also tries/NNS/tries i/PRP/i used/VBD/used to/TO/to do/VB/do this/NNP/this. tries/NNS/tries could/MD/could be/VB/be one/CD/one way/NN/way of/IN/of doing/VBG/doing it/NNP/it. so/RB/so we/PRP/we will/MD/will come/VB/come back/RB/back to/TO/to pattern/VB/pattern matching/JJ/matching now/NNP/now. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 40/CD/40 /:/: 01/CD/01 /CD/) we/PRP/we saw/VBD/saw compressed/VBN/compressed tries/NNS/tries are/VBP/are doing/VBG/doing the/DT/the job/NN/job reasonably/RB/reasonably well/RB/well provided/VBN/provided there/EX/there was/VBD/was the/DT/the notion/NN/notion of/IN/of words/NNS/words or/CC/or delimiter/JJR/delimiter and/CC/and our/PRP$/our pattern/NN/pattern started/VBD/started and/CC/and ended/VBD/ended at/IN/at the/DT/the delimiter/NNP/delimiter. but/CC/but suppose/VB/suppose you/PRP/you are/VBP/are as/IN/as i/PRP/i gave/VBD/gave you/PRP/you an/DT/an example/NN/example if/IN/if you/PRP/you are/VBP/are searching/VBG/searching in/IN/in a/DT/a biological/JJ/biological data/NNS/data base/NN/base there/RB/there is/VBZ/is no/DT/no notion/NN/notion for/IN/for the/DT/the delimiter/NN/delimiter there/NNP/there. what/WP/what do/VBP/do you/PRP/you do/VB/do then/RB/then ?/./? so/RB/so this/DT/this is/VBZ/is something/NN/something we/PRP/we said/VBD/said before/NNP/before. instead/RB/instead of/IN/of preprocessing/VBG/preprocessing the/DT/the pattern/NN/pattern /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be preprocessing/VBG/preprocessing the/DT/the text/NNP/text. now/RB/now what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is the/DT/the notion/NN/notion of/IN/of what/WP/what ?/./? s/NNS/s called/VBN/called the/DT/the suffix/NN/suffix tree/NNP/tree. we/PRP/we will/MD/will take/VB/take all/PDT/all suffixes/NNS/suffixes of/IN/of the/DT/the text/NN/text and/CC/and organize/VB/organize them/PRP/them in/IN/in to/TO/to a/DT/a tree/NN/tree and/CC/and you/PRP/you will/MD/will see/VB/see what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to say/VB/say in/IN/in a/DT/a second/NNP/second. let/NN/let ?/./? s/NNS/s see/VBP/see piece/NN/piece of/IN/of text/NN/text x/NN/x a/DT/a b/NN/b x/NN/x a/DT/a c/NN/c /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 09/CD/09 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 09/CD/09 /CD/) how/WRB/how many/JJ/many suffixes/NNS/suffixes does/VBZ/does it/PRP/it have/VB/have ?/./? there/EX/there are/VBP/are 6/CD/6 suffixes/NNP/suffixes. i/PRP/i am/VBP/am not/RB/not saying/VBG/saying proper/NN/proper suffix/NNP/suffix. i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take them/PRP/them as/IN/as my/PRP$/my words/NNP/words. x/NN/x a/DT/a b/NN/b x/NN/x a/DT/a c/NN/c is/VBZ/is a/DT/a one/CD/one word/NNP/word. a/DT/a b/NN/b x/NN/x c/NN/c is/VBZ/is another/NNP/another. b/NN/b x/NN/x c/NN/c is/VBZ/is another/NNP/another. x/NN/x a/DT/a c/NN/c is/VBZ/is the/DT/the 4th/CD/4th. a/DT/a c/NN/c is/VBZ/is the/DT/the 5th/JJ/5th and/CC/and c/NN/c is/VBZ/is the/DT/the 6th/CD/6th. there/EX/there are/VBP/are 6/CD/6 words/NNS/words and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to create/VB/create a/DT/a trie/NN/trie of/IN/of these/DT/these words/NNS/words /,/, in/IN/in particular/JJ/particular a/DT/a compressed/JJ/compressed trie/NN/trie and/CC/and this/DT/this is/VBZ/is what/WP/what the/DT/the structure/NN/structure is/NNP/is. so/RB/so let/VB/let ?/./? s/NNS/s see/VBP/see why/WRB/why it/PRP/it ?/./? s/NNS/s a/DT/a trie/NNP/trie. here/RB/here if/IN/if it/PRP/it were/VBD/were a/DT/a ?/./? b/NN/b ?/./? /,/, i/PRP/i would/MD/would go/VB/go this/DT/this way/NNP/way. if/IN/if it/PRP/it were/VBD/were a/DT/a ?/./? c/NN/c ?/./? /,/, i/PRP/i would/MD/would go/VB/go this/DT/this way/NNP/way. if/IN/if it/PRP/it were/VBD/were an/DT/an ?/./? a/DT/a ?/./? /,/, i/PRP/i would/MD/would go/VB/go this/DT/this way/NNP/way. if/IN/if it/PRP/it were/VBD/were an/DT/an ?/./? x/NN/x ?/./? /,/, i/PRP/i would/MD/would go/VB/go this/DT/this way/NN/way /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 06/CD/06 /CD/) /./. /CD/( hindi/NN/hindi /:/) numbers/NNS/numbers are/VBP/are the/DT/the starting/VBG/starting position/NN/position of/IN/of that/DT/that suffix/NNP/suffix. so/RB/so this/DT/this corresponds/NNS/corresponds to/TO/to x/VB/x a/DT/a b/NN/b x/NN/x a/DT/a c/NNP/c. what/WP/what is/VBZ/is the/DT/the starting/VBG/starting position/NN/position ?/./? it/PRP/it ?/./? s/NNS/s one/NNP/one. this/DT/this corresponds/NNS/corresponds to/TO/to x/VB/x a/DT/a c/NNP/c. its/PRP$/its starting/NN/starting position/NN/position is/VBZ/is 4/CD/4. this/DT/this corresponds/NNS/corresponds to/TO/to a/DT/a b/NN/b x/NN/x a/DT/a c/NNP/c. the/DT/the starting/VBG/starting position/NN/position is/VBZ/is 2/CD/2. the/DT/the starting/NN/starting position/NN/position for/IN/for a/DT/a c/NN/c is/VBZ/is 5/CD/5 and/CC/and so/RB/so on/IN/on and/CC/and so/RB/so 4th/CD/4th. so/IN/so put/NN/put all/DT/all our/PRP$/our suffixes/NNS/suffixes in/IN/in a/DT/a trie/NNP/trie. so/RB/so it/PRP/it ?/./? s/NNS/s essentially/RB/essentially a/DT/a compressed/VBN/compressed trie/NN/trie for/IN/for all/DT/all the/DT/the suffixes/NNS/suffixes of/IN/of the/DT/the text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 44/CD/44 /:/: 09/CD/09 /CD/) so/RB/so it/PRP/it seems/VBZ/seems it/PRP/it would/MD/would be/VB/be huge/JJ/huge but/CC/but why/WRB/why should/MD/should it/PRP/it be/VB/be huge/JJ/huge ?/./? how/WRB/how many/JJ/many suffixes/NNS/suffixes are/VBP/are there/RB/there ?/./? there/EX/there are/VBP/are as/RB/as many/JJ/many as/IN/as length/NN/length of/IN/of text/NNP/text. so/RB/so we/PRP/we will/MD/will have/VB/have that/DT/that many/JJ/many words/NNP/words. recall/NN/recall that/WDT/that the/DT/the size/NN/size of/IN/of the/DT/the trie/NN/trie is/VBZ/is just/RB/just the/DT/the number/NN/number of/IN/of words/NNS/words order/NN/order number/NN/number of/IN/of words/NNP/words. so/RB/so its/PRP$/its order/NN/order length/NN/length of/IN/of the/DT/the text/NNP/text. /NNP/( hindi/NN/hindi /:/) so/RB/so this/DT/this size/NN/size of/IN/of the/DT/the trie/NN/trie is/VBZ/is not/RB/not too/RB/too much/NNP/much. so/RB/so suffix/CD/suffix tree/NN/tree for/IN/for us/PRP/us text/VBD/text x/NN/x of/IN/of size/NN/size n/NN/n from/IN/from an/DT/an alphabet/NN/alphabet of/IN/of size/NN/size d/NN/d stores/NNS/stores all/DT/all the/DT/the n/NN/n suffixes/NNS/suffixes of/IN/of x/NN/x in/IN/in order/NN/order n/NNP/n. d/NN/d is/VBZ/is typically/RB/typically small/NNP/small. so/RB/so it/PRP/it doesn/VBP/doesn ?/./? t/NN/t require/NN/require too/RB/too much/RB/much space/NNP/space. /:/( hindi/NN/hindi /:/) we/PRP/we will/MD/will come/VB/come to/TO/to why/WRB/why we/PRP/we are/VBP/are doing/VBG/doing suffixes/NNP/suffixes. can/MD/can someone/VB/someone think/NN/think of/IN/of why/WRB/why suffixes/NNS/suffixes ?/./? so/RB/so i/PRP/i was/VBD/was searching/VBG/searching for/IN/for a/DT/a b/NNP/b. what/WP/what will/MD/will happen/VB/happen if/IN/if i/PRP/i am/VBP/am searching/VBG/searching for/IN/for a/DT/a b/NN/b ?/./? suppose/NN/suppose i/PRP/i start/VBP/start searching/VBG/searching for/IN/for a/DT/a b/NNP/b. i/PRP/i will/MD/will come/VB/come at/IN/at ?/./? a/DT/a ?/./? here/RB/here and/CC/and then/RB/then i/PRP/i will/MD/will come/VB/come at/IN/at ?/./? b/NN/b ?/./? here/RB/here and/CC/and i/PRP/i will/MD/will stop/VB/stop in/IN/in the/DT/the middle/NN/middle but/CC/but can/MD/can i/PRP/i say/VB/say something/NN/something now/RB/now ?/./? i/PRP/i did/VBD/did not/RB/not find/NNP/find. that/WDT/that ?/./? s/VBZ/s what/WP/what you/PRP/you will/MD/will be/VB/be tempted/VBN/tempted to/TO/to say/NNP/say. if/IN/if the/DT/the pattern/NN/pattern appears/VBZ/appears in/IN/in the/DT/the text/NN/text then/RB/then there/RB/there is/VBZ/is some/DT/some suffix/NN/suffix whose/WP$/whose prefix/NN/prefix is/VBZ/is that/IN/that pattern/NNP/pattern. that/IN/that means/VBZ/means that/DT/that there/EX/there is/VBZ/is some/DT/some word/NN/word in/IN/in the/DT/the collection/NN/collection of/IN/of words/NNS/words that/WDT/that i/PRP/i have/VBP/have thrown/VBN/thrown in/IN/in whose/WP$/whose prefix/NN/prefix is/VBZ/is that/IN/that pattern/NN/pattern which/WDT/which means/VBZ/means that/DT/that when/WRB/when i/PRP/i am/VBP/am searching/VBG/searching for/IN/for the/DT/the pattern/NN/pattern /,/, that/IN/that initial/JJ/initial part/NN/part of/IN/of the/DT/the word/NN/word will/MD/will match/VB/match up/RP/up and/CC/and i/PRP/i will/MD/will be/VB/be able/JJ/able to/TO/to do/VB/do something/NN/something with/IN/with that/NNP/that. many/JJ/many of/IN/of you/PRP/you can/MD/can see/VB/see what/WP/what i/PRP/i will/MD/will be/VB/be able/JJ/able to/TO/to do/NNP/do. i/PRP/i will/MD/will just/RB/just look/VB/look at/IN/at the/DT/the leaves/NNS/leaves of/IN/of that/DT/that sub/NN/sub tree/NN/tree and/CC/and identify/NNP/identify. we/PRP/we will/MD/will come/VB/come to/TO/to all/DT/all of/IN/of that/NNP/that. that/IN/that ?/./? s/NNS/s the/DT/the remaining/VBG/remaining of/IN/of this/DT/this lecture/NNP/lecture. so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say i/PRP/i had/VBD/had this/DT/this word/NN/word ?/./? minimized/VBN/minimized ?/./? /./. /:/( refer/NN/refer slide/NN/slide time/NN/time 46/CD/46 /:/: 49/CD/49 /CD/) i/PRP/i don/VBP/don ?/./? t/NN/t make/VB/make the/DT/the suffix/NN/suffix tree/NN/tree for/IN/for each/DT/each word/NN/word in/IN/in the/DT/the text/NNP/text. i/PRP/i make/VBP/make a/DT/a suffix/NN/suffix tree/NN/tree for/IN/for the/DT/the entire/JJ/entire text/NNP/text. so/RB/so if/IN/if this/DT/this is/VBZ/is my/PRP$/my entire/NN/entire text/NN/text i/PRP/i make/VBP/make a/DT/a suffix/NN/suffix tree/NN/tree for/IN/for it/NNP/it. there/EX/there would/MD/would be/VB/be 8/CD/8 suffixes/NNP/suffixes. this/DT/this would/MD/would be/VB/be the/DT/the corresponding/NN/corresponding suffix/NN/suffix tree/NN/tree i/PRP/i would/MD/would get/NNP/get. once/RB/once again/RB/again i/PRP/i have/VBP/have collapsed/VBN/collapsed my/PRP$/my nodes/NNP/nodes. you/PRP/you can/MD/can all/DT/all make/VB/make this/DT/this suffix/NN/suffix tree/NN/tree and/CC/and now/RB/now we/PRP/we want/VBP/want to/TO/to do/VB/do a/DT/a compact/NN/compact representation/NN/representation once/RB/once again/NNP/again. /:/( refer/NN/refer slide/NN/slide time/NN/time 47/CD/47 /:/: 58/CD/58 /CD/) how/WRB/how much/JJ/much space/NN/space do/VBP/do i/PRP/i require/VB/require ?/./? so/RB/so instead/RB/instead of/IN/of storing/VBG/storing labels/NNS/labels /,/, there/EX/there are/VBP/are big/JJ/big labels/NNS/labels here/NNP/here. we/PRP/we don/VBP/don ?/./? t/NN/t want/NN/want to/TO/to store/VB/store labels/NNP/labels. so/RB/so once/RB/once again/RB/again we/PRP/we can/MD/can store/VB/store by/IN/by numbers/NNP/numbers. once/RB/once again/RB/again each/DT/each one/CD/one of/IN/of them/PRP/them is/VBZ/is a/DT/a sub/NN/sub string/NNP/string. so/RB/so i/PRP/i just/RB/just need/VBP/need to/TO/to know/VB/know what/WP/what the/DT/the start/NN/start and/CC/and the/DT/the end/NN/end position/NN/position of/IN/of the/DT/the sub/NN/sub string/VBG/string is/NNP/is. i/PRP/i don/VBP/don ?/./? t/NN/t even/RB/even need/VBP/need three/CD/three integers/NNS/integers now/NNP/now. i/PRP/i just/RB/just need/VBP/need two/CD/two because/IN/because they/PRP/they are/VBP/are all/RB/all part/NN/part of/IN/of one/CD/one single/JJ/single text/NNP/text. so/RB/so this/DT/this is/VBZ/is for/IN/for instance/NN/instance what/WP/what would/MD/would happen/NNP/happen. m/VB/m i/PRP/i n/VBP/n i/PRP/i m/VBP/m i/PRP/i z/VBP/z e/JJ/e /:/- m/NN/m i/PRP/i n/VBP/n i/PRP/i m/VBP/m i/PRP/i z/VBP/z e/JJ/e starts/NNS/starts at/IN/at position/NN/position 2/CD/2 and/CC/and ends/NNS/ends at/IN/at position/NN/position 7/CD/7. so/RB/so i/PRP/i can/MD/can store/VB/store it/PRP/it very/RB/very efficiently/NNP/efficiently. now/RB/now this/DT/this is/VBZ/is the/DT/the key/JJ/key thing/NN/thing which/WDT/which we/PRP/we are/VBP/are using/VBG/using in/IN/in pattern/NN/pattern matching/NNP/matching. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 48/CD/48 /:/: 22/CD/22 /CD/) so/RB/so if/IN/if i/PRP/i have/VBP/have two/CD/two suffixes/NNS/suffixes ?/./? x/NN/x a/DT/a b/NN/b ?/./? ?/./? x/NN/x a/DT/a c/NN/c ?/./? and/CC/and they/PRP/they have/VBP/have the/DT/the same/JJ/same prefix/NN/prefix ?/./? x/NN/x a/DT/a ?/./? /,/, their/PRP$/their corresponding/NN/corresponding paths/NNS/paths are/VBP/are the/DT/the same/JJ/same at/IN/at the/DT/the beginning/NN/beginning and/CC/and it/PRP/it ?/./? s/NNS/s just/RB/just the/DT/the concatenation/NN/concatenation of/IN/of the/DT/the edge/NN/edge labels/NNS/labels of/IN/of the/DT/the mutual/JJ/mutual parts/NNP/parts. so/RB/so x/NN/x a/DT/a b/NN/b x/NN/x a/DT/a c/NN/c x/NN/x a/DT/a b/NN/b x/NN/x a/DT/a c/NN/c /,/, its/PRP$/its common/JJ/common part/NN/part is/VBZ/is ?/./? x/NN/x a/DT/a ?/./? and/CC/and it/PRP/it comes/VBZ/comes here/RB/here /:/( 48/CD/48 /:/: 53/CD/53 /CD/) /./. this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be crucial/JJ/crucial in/IN/in a/DT/a short/JJ/short while/NN/while because/IN/because now/RB/now if/IN/if i/PRP/i was/VBD/was searching/VBG/searching for/IN/for x/NN/x a/DT/a /,/, i/PRP/i would/MD/would end/VB/end up/RP/up here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 12/CD/12 /CD/) /./. so/RB/so i/PRP/i have/VBP/have to/TO/to actually/RB/actually report/VB/report all/DT/all occurrences/NNS/occurrences and/CC/and this/DT/this will/MD/will help/VB/help me/PRP/me do/VB/do that/NNP/that. so/RB/so what/WP/what do/VBP/do i/PRP/i have/VB/have to/TO/to do/VB/do report/NN/report all/DT/all occurrences/NNS/occurrences basically/RB/basically i/PRP/i have/VBP/have to/TO/to look/VB/look at/IN/at its/PRP$/its children/NNP/children. look/NN/look at/IN/at the/DT/the leaves/NNS/leaves in/IN/in the/DT/the sub/NN/sub tree/NN/tree and/CC/and that/IN/that will/MD/will give/VB/give me/PRP/me the/DT/the position/NNP/position. we/PRP/we will/MD/will come/VB/come to/TO/to all/DT/all of/IN/of that/NNP/that. this/DT/this was/VBD/was the/DT/the problem/NN/problem that/IN/that some/DT/some one/CD/one had/VBD/had pointed/VBN/pointed out/RP/out very/RB/very briefly/RB/briefly in/IN/in the/DT/the beginning/NNP/beginning. if/IN/if one/CD/one word/NN/word in/IN/in my/PRP$/my trie/NN/trie is/VBZ/is contained/VBN/contained in/IN/in another/DT/another word/NN/word /,/, what/WP/what happens/NNS/happens ?/./? suppose/NN/suppose my/PRP$/my text/NN/text is/VBZ/is x/NN/x a/DT/a b/NN/b x/NN/x a/DT/a /,/, now/RB/now what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen ?/./? i/PRP/i have/VBP/have one/CD/one suffix/NN/suffix which/WDT/which is/VBZ/is x/NN/x a/DT/a and/CC/and another/DT/another suffix/NN/suffix which/WDT/which is/VBZ/is x/NN/x a/DT/a b/NN/b x/NN/x a/NNP/a. this/DT/this suffix/NN/suffix x/NN/x a/DT/a is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of the/DT/the other/JJ/other suffix/NNP/suffix. so/IN/so in/IN/in my/PRP$/my trie/NN/trie /,/, what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen ?/./? you/PRP/you know/VBP/know one/CD/one of/IN/of the/DT/the words/NNS/words is/VBZ/is going/VBG/going to/TO/to end/VB/end up/RP/up at/IN/at some/DT/some internal/JJ/internal node/NNP/node. you/PRP/you don/VBP/don ?/./? t/NN/t see/VB/see a/DT/a big/JJ/big problem/NN/problem with/IN/with this/DT/this ?/./? let/NN/let me/PRP/me quickly/RB/quickly show/VBP/show you/PRP/you what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to say/NNP/say. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 50/CD/50 /:/: 54/CD/54 /CD/) let/NN/let ?/./? s/NNS/s call/VBP/call it/PRP/it ?/./? x/NN/x a/DT/a ?/./? and/CC/and ?/./? b/NN/b x/NN/x a/DT/a ?/./? /./. there/EX/there are/VBP/are 2/CD/2 suffixes/NNS/suffixes ?/./? x/NN/x a/DT/a ?/./? and/CC/and ?/./? x/NN/x a/DT/a b/NN/b x/NN/x a/DT/a ?/./? /./. we/PRP/we are/VBP/are ignoring/VBG/ignoring the/DT/the other/JJ/other suffixes/NNP/suffixes. /NNP/( hindi/NN/hindi /:/) what/WP/what is/VBZ/is special/JJ/special about/IN/about dollar/NN/dollar ?/./? there/EX/there is/VBZ/is nothing/NN/nothing special/JJ/special about/IN/about dollar/NNP/dollar. it/PRP/it just/RB/just is/VBZ/is a/DT/a character/NN/character which/WDT/which is/VBZ/is not/RB/not part/NN/part of/IN/of an/DT/an original/JJ/original alphabet/NNP/alphabet. /NNP/( hindi/NN/hindi /:/) so/RB/so now/RB/now how/WRB/how does/VBZ/does one/CD/one build/NN/build a/DT/a suffix/NN/suffix tree/NN/tree ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 53/CD/53 /:/: 10/CD/10 /CD/) we/PRP/we start/VBP/start with/IN/with one/CD/one initial/JJ/initial /:/- one/CD/one suffix/NNP/suffix. let/NN/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is the/DT/the entire/JJ/entire text/NNP/text. so/RB/so that/IN/that basically/RB/basically is/VBZ/is one/CD/one edge/NN/edge and/CC/and then/RB/then we/PRP/we keep/VBP/keep breaking/VBG/breaking this/DT/this edge/NNP/edge. so/RB/so we/PRP/we will/MD/will search/VB/search for/IN/for the/DT/the next/JJ/next suffix/NNP/suffix. /NNP/( hindi/NN/hindi /:/) /./. starting/VBG/starting at/IN/at the/DT/the root/NN/root /,/, find/VBP/find the/DT/the longest/JJS/longest path/NN/path from/IN/from the/DT/the root/NN/root whose/WP$/whose label/NN/label matches/NNS/matches a/DT/a prefix/NN/prefix of/IN/of si/NN/si through/IN/through n/NNP/n. at/IN/at some/DT/some point/NN/point if/IN/if no/DT/no matches/NNS/matches are/VBP/are possible/JJ/possible and/CC/and if/IN/if this/DT/this point/NN/point is/VBZ/is at/IN/at the/DT/the node/NN/node /,/, then/RB/then we/PRP/we denote/VBP/denote this/DT/this by/IN/by a/DT/a ?/./? w/NN/w ?/./? /./. if/IN/if it/PRP/it is/VBZ/is in/IN/in the/DT/the middle/NN/middle of/IN/of an/DT/an edge/NN/edge /,/, we/PRP/we insert/VBP/insert a/DT/a new/JJ/new node/NN/node and/CC/and then/RB/then call/JJ/call this/DT/this node/NN/node ?/./? w/NN/w ?/./? and/CC/and we/PRP/we create/VBP/create an/DT/an edge/NN/edge running/VBG/running from/IN/from the/DT/the root/NN/root to/TO/to the/DT/the suffix/NN/suffix that/IN/that we/PRP/we create/NNP/create. so/RB/so we/PRP/we can/MD/can take/VB/take an/DT/an example/NN/example quickly/NNP/quickly. one/CD/one suffix/NN/suffix is/VBZ/is ?/./? x/NN/x a/DT/a b/NN/b x/NN/x a/DT/a c/NN/c ?/./? /./. /:/( hindi/NN/hindi /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time 55/CD/55 /:/: 16/CD/16 /CD/) so/RB/so this/DT/this will/MD/will take/VB/take time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the text/NNP/text. if/IN/if the/DT/the length/NN/length of/IN/of my/PRP$/my text/NN/text was/VBD/was n/VBN/n then/RB/then it/PRP/it takes/VBZ/takes time/NN/time order/NN/order summation/NN/summation n2/NNP/n2. it/PRP/it is/VBZ/is a/DT/a bit/NN/bit more/RBR/more but/CC/but we/PRP/we will/MD/will see/VB/see what/WP/what we/PRP/we can/MD/can do/VB/do about/RB/about this/DT/this one/NNP/one. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 55/CD/55 /:/: 29/CD/29 /CD/) this/DT/this is/VBZ/is the/DT/the key/JJ/key idea/NN/idea that/IN/that we/PRP/we are/VBP/are exploiting/VBG/exploiting in/IN/in pattern/NN/pattern matching/NNP/matching. so/RB/so given/VBN/given a/DT/a pattern/NN/pattern ?/./? p/NN/p ?/./? and/CC/and has/VBZ/has text/VBN/text t/NN/t /,/, our/PRP$/our aim/NN/aim is/VBZ/is to/TO/to find/VB/find all/PDT/all occurrences/NNS/occurrences of/IN/of pattern/NN/pattern p/NN/p in/IN/in the/DT/the text/NNP/text. so/RB/so the/DT/the idea/NN/idea of/IN/of algorithm/NN/algorithm is/VBZ/is that/IN/that every/DT/every occurrences/NNS/occurrences of/IN/of p/NN/p in/IN/in t/NN/t is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of a/DT/a suffix/NN/suffix of/IN/of t/NNP/t. /NNP/( hindi/NN/hindi /:/) thus/RB/thus an/DT/an occurrence/NN/occurrence of/IN/of p/NN/p can/MD/can be/VB/be obtained/VBN/obtained as/IN/as concatenation/NN/concatenation of/IN/of the/DT/the labels/NNS/labels of/IN/of edges/NNS/edges of/IN/of the/DT/the path/NN/path beginning/NN/beginning at/IN/at the/DT/the root/NNP/root. so/RB/so how/WRB/how do/VBP/do we/PRP/we do/VBP/do pattern/JJ/pattern matching/NN/matching ?/./? we/PRP/we build/VBP/build a/DT/a suffix/NN/suffix tree/NN/tree for/IN/for the/DT/the text/NN/text /,/, match/NN/match the/DT/the characters/NNS/characters of/IN/of the/DT/the pattern/NN/pattern along/IN/along the/DT/the path/NN/path beginning/NN/beginning at/IN/at the/DT/the root/NN/root until/IN/until the/DT/the pattern/NN/pattern is/VBZ/is exhausted/NNP/exhausted. /:/( refer/NN/refer slide/NN/slide time/NN/time 56/CD/56 /:/: 25/CD/25 /CD/) if/IN/if the/DT/the pattern/NN/pattern is/VBZ/is exhausted/VBN/exhausted completely/RB/completely /,/, that/IN/that means/NNS/means that/WDT/that we/PRP/we have/VBP/have found/VBN/found a/DT/a match/NNP/match. if/IN/if no/DT/no more/RBR/more matches/NNS/matches are/VBP/are possible/JJ/possible /,/, then/RB/then that/IN/that means/NNS/means that/WDT/that pattern/NN/pattern does/VBZ/does not/RB/not exist/NNP/exist. so/RB/so 2/CD/2 in/IN/in this/DT/this case/NN/case /,/, p/NN/p does/VBZ/does not/RB/not appear/VB/appear anywhere/RB/anywhere in/IN/in the/DT/the text/NNP/text. in/IN/in case/NN/case 1/CD/1 /,/, p/NN/p is/VBZ/is the/DT/the prefix/NN/prefix of/IN/of a/DT/a suffix/NN/suffix of/IN/of a/DT/a certain/JJ/certain suffix/NN/suffix which/WDT/which is/VBZ/is obtained/VBN/obtained by/IN/by extending/NN/extending the/DT/the path/NN/path and/CC/and till/NN/till we/PRP/we reach/VBP/reach a/DT/a leaf/NNP/leaf. each/DT/each extension/NN/extension gives/VBZ/gives a/DT/a suffix/NNP/suffix. all/DT/all the/DT/the leaves/NNS/leaves we/PRP/we can/MD/can reach/VB/reach from/IN/from there/EX/there will/MD/will tell/VB/tell us/PRP/us the/DT/the occurrences/NNS/occurrences of/IN/of the/DT/the pattern/NNP/pattern. each/DT/each extension/NN/extension provides/VBZ/provides af/NN/af occurrence/NN/occurrence of/IN/of the/DT/the p/NN/p in/IN/in t/NNP/t. what/WP/what are/VBP/are the/DT/the extensions/NNS/extensions ?/./? they/PRP/they are/VBP/are basically/RB/basically all/DT/all the/DT/the leaves/NNS/leaves below/IN/below that/NNP/that. /NNP/( hindi/NN/hindi /:/) let/NN/let ?/./? s/NNS/s quickly/RB/quickly see/VB/see an/DT/an example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 57/CD/57 /:/: 44/CD/44 /CD/) this/DT/this corresponds/NNS/corresponds to/TO/to this/DT/this suffix/NNP/suffix. this/DT/this corresponds/NNS/corresponds to/TO/to this/DT/this suffix/NN/suffix this/DT/this corresponds/NNS/corresponds to/TO/to this/DT/this suffix/NN/suffix /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 58/CD/58 /:/: 08/CD/08 /CD/) /./. the/DT/the number/NN/number that/IN/that you/PRP/you write/VBP/write here/RB/here is/VBZ/is the/DT/the starting/VBG/starting position/NN/position of/IN/of this/DT/this pattern/NN/pattern of/IN/of this/DT/this suffix/NNP/suffix. so/RB/so we/PRP/we write/VBP/write a/DT/a 7/CD/7 here/NNP/here. we/PRP/we saw/VBD/saw only/RB/only an/DT/an order/NN/order n2/NNP/n2 algorithm/NN/algorithm for/IN/for constructing/NN/constructing the/DT/the suffix/NN/suffix tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 58/CD/58 /:/: 41/CD/41 /CD/) it/PRP/it can/MD/can actually/RB/actually be/VB/be done/VBN/done in/IN/in order/NN/order n/NN/n time/NN/time but/CC/but that/IN/that ?/./? s/NNS/s a/DT/a fairly/RB/fairly complicated/VBN/complicated algorithm/NNP/algorithm. we/PRP/we will/MD/will not/RB/not be/VB/be doing/VBG/doing it/PRP/it in/IN/in this/DT/this class/NNP/class. so/RB/so that/IN/that gives/NNS/gives us/PRP/us the/DT/the total/JJ/total complexity/NN/complexity of/IN/of pattern/NN/pattern matching/NNP/matching. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 58/CD/58 /:/: 56/CD/56 /CD/) so/RB/so preprocessing/VBG/preprocessing which/WDT/which means/NNS/means building/VBG/building the/DT/the suffix/NN/suffix tree/NNP/tree. we/PRP/we said/VBD/said it/PRP/it can/MD/can be/VB/be done/VBN/done in/IN/in order/NN/order n/NN/n times/NNS/times proportional/JJ/proportional to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the text/NN/text although/IN/although we/PRP/we saw/VBD/saw only/RB/only an/DT/an n2/NNP/n2 algorithm/NN/algorithm today/NNP/today. and/CC/and for/IN/for searching/NN/searching i/PRP/i ?/./? ve/JJ/ve said/VBD/said size/NN/size of/IN/of the/DT/the pattern/NN/pattern plus/VBZ/plus ?/./? k/NN/k ?/./? /:/- number/NN/number of/IN/of occurrences/NNS/occurrences of/IN/of the/DT/the pattern/NN/pattern in/IN/in this/NNP/this. this/DT/this is/VBZ/is completely/RB/completely essential/NNP/essential. if/IN/if a/DT/a pattern/NN/pattern is/VBZ/is only/RB/only 3/CD/3 characters/NNS/characters long/RB/long but/CC/but occurs/NNS/occurs one/CD/one thousand/NN/thousand times/NNS/times in/IN/in the/DT/the text/NN/text and/CC/and you/PRP/you have/VBP/have to/TO/to say/VB/say all/DT/all the/DT/the times/NNS/times it/PRP/it appear/VBP/appear then/RB/then clearly/RB/clearly you/PRP/you are/VBP/are going/VBG/going to/TO/to take/VB/take time/NN/time proportional/JJ/proportional to/TO/to 1000/CD/1000. so/RB/so this/DT/this is/VBZ/is clearly/RB/clearly a/DT/a requirement/NN/requirement and/CC/and why/WRB/why is/VBZ/is this/DT/this coming/VBG/coming up/RP/up ?/./? this/DT/this is/VBZ/is because/IN/because we/PRP/we have/VBP/have to/TO/to report/VB/report all/PDT/all the/DT/the leaves/NNS/leaves of/IN/of this/DT/this node/NNP/node. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 59/CD/59 /:/: 41/CD/41 /CD/) if/IN/if there/EX/there are/VBP/are k/NN/k leaves/NNS/leaves we/PRP/we have/VBP/have to/TO/to go/VB/go and/CC/and report/NN/report all/DT/all the/DT/the k/NN/k leaves/NNP/leaves. have/VBP/have many/JJ/many internal/JJ/internal nodes/NNS/nodes are/VBP/are there/RB/there in/IN/in this/DT/this sub-tree/JJ/sub-tree ?/./? there/EX/there are/VBP/are /:/( k/NN/k ?/./? 1/CD/1 /CD/) nodes/NNP/nodes. what/WP/what is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the entire/JJ/entire sub-tree/JJ/sub-tree ?/./? it/PRP/it ?/./? s/NNS/s of/IN/of order/NN/order k/NNP/k. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 1/CD/1 /:/: 00/CD/00 /:/: 42/CD/42 /CD/) that/WDT/that gives/VBZ/gives us/PRP/us the/DT/the total/JJ/total complexity/NN/complexity of/IN/of pattern/NN/pattern matching/NNP/matching. let/NN/let me/PRP/me go/VBP/go the/DT/the last/JJ/last side/NNP/side. the/DT/the total/JJ/total space/NN/space we/PRP/we require/VBP/require is/VBZ/is the/DT/the proportional/JJ/proportional to/TO/to the/DT/the size/NN/size of/IN/of pattern/NN/pattern to/TO/to store/VB/store the/DT/the pattern/NNP/pattern. so/RB/so with/IN/with this/DT/this i/PRP/i end/VBP/end today/NN/today ?/./? s/NNS/s lectures/NNP/lectures. so/RB/so we/PRP/we looked/VBD/looked at/IN/at a/DT/a faster/JJR/faster /,/, faster/JJR/faster in/IN/in the/DT/the sense/NN/sense now/RB/now we/PRP/we decide/VBP/decide to/TO/to preprocess/NN/preprocess the/DT/the text/NN/text and/CC/and to/TO/to search/VB/search for/IN/for the/DT/the pattern/NN/pattern we/PRP/we just/RB/just need/VBP/need time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the pattern/NNP/pattern. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 19/CD/19 data/NNS/data compression/NN/compression today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about data/NNS/data compression/NNP/compression. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 01/CD/01 /:/: 17/CD/17 /CD/) we/PRP/we will/MD/will begin/VB/begin with/IN/with what/WP/what the/DT/the idea/NN/idea behind/IN/behind file/NN/file compression/NN/compression is/VBZ/is and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about huffman/NN/huffman tries/NNS/tries which/WDT/which is/VBZ/is the/DT/the way/NN/way of/IN/of doing/VBG/doing data/NNS/data compression/NNP/compression. we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how ?/./? abracadabra/NN/abracadabra ?/./? translate/NN/translate into/IN/into these/DT/these sequence/NN/sequence of/IN/of 0/-NONE-/0 ?/./? s/NNS/s and/CC/and 1/CD/1 ?/./? s/NNP/s. so/RB/so what/WP/what is/VBZ/is file/JJ/file compression/NN/compression ?/./? as/IN/as you/PRP/you know/VBP/know /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a piece/NN/piece of/IN/of text/NN/text /,/, it/PRP/it ?/./? s/NNS/s stored/VBD/stored as/IN/as bits/NNS/bits in/IN/in your/PRP$/your computer/NN/computer and/CC/and what/WP/what is/VBZ/is typically/RB/typically done/VBN/done is/VBZ/is that/IN/that /,/, for/IN/for each/DT/each character/NN/character /,/, you/PRP/you have/VBP/have what/WP/what ?/./? s/NNS/s called/VBN/called an/DT/an ?/./? ascii/NN/ascii code/NN/code ?/./? /./. so/RB/so if/IN/if you/PRP/you were/VBD/were to/TO/to go/VB/go into/IN/into a/DT/a unique/JJ/unique shell/NN/shell and/CC/and type/NN/type </:/< man/NN/man ascii/NN/ascii >/:/> /,/, then/RB/then that/IN/that will/MD/will give/VB/give you/PRP/you the/DT/the ascii/NN/ascii code/NN/code for/IN/for all/DT/all the/DT/the various/JJ/various characters/NNP/characters. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 03/CD/03 /:/: 31/CD/31 /CD/) the/DT/the ascii/NN/ascii code/NN/code is/VBZ/is an/DT/an 8/CD/8 bit/NN/bit code/NN/code which/WDT/which means/VBZ/means that/DT/that every/DT/every character/NN/character is/VBZ/is stored/VBN/stored as/RB/as 8/CD/8 bits/NNP/bits. so/RB/so this/DT/this is/VBZ/is what/WP/what is/VBZ/is called/VBN/called ?/./? fixed-length/JJ/fixed-length encoding/NN/encoding ?/./? /./. why/WRB/why fixed/VBN/fixed length/NN/length because/IN/because for/IN/for each/DT/each character/NN/character /,/, i/PRP/i have/VBP/have the/DT/the same/JJ/same number/NN/number of/IN/of bits/NNS/bits but/CC/but our/PRP$/our idea/NN/idea today/NN/today is/VBZ/is to/TO/to try/NN/try and/CC/and reduce/VB/reduce the/DT/the amount/NN/amount of/IN/of space/NN/space required/VBN/required to/TO/to encode/VB/encode a/DT/a piece/NN/piece of/IN/of text/NNP/text. if/IN/if each/DT/each character/NN/character i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use 8/CD/8 bits/NNS/bits then/RB/then the/DT/the total/NN/total number/NN/number of/IN/of bits/NNS/bits required/VBN/required will/MD/will be/VB/be 8/CD/8 times/NNS/times the/DT/the number/NN/number of/IN/of characters/NNS/characters in/IN/in the/DT/the piece/NN/piece of/IN/of text/NNP/text. but/CC/but suppose/VB/suppose i/PRP/i don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to do/VB/do fixed-length/JJ/fixed-length coding/NNP/coding. you/PRP/you know/VBP/know some/DT/some character/NN/character might/MD/might have/VB/have two/CD/two bits/NNS/bits associated/VBN/associated with/IN/with them/NNP/them. some/DT/some character/NN/character will/MD/will be/VB/be encoded/VBN/encoded using/VBG/using three/CD/three bits/NNS/bits /,/, some/DT/some using/VBG/using four/CD/four and/CC/and so/RB/so on/IN/on /,/, can/MD/can we/PRP/we exploit/VB/exploit this/DT/this and/CC/and the/DT/the fact/NN/fact that/IN/that some/DT/some characters/NNS/characters occur/VBP/occur more/JJR/more frequently/RB/frequently than/IN/than others/NNS/others to/TO/to design/VB/design a/DT/a coding/NN/coding screen/NN/screen which/WDT/which will/MD/will represent/VB/represent the/DT/the same/JJ/same piece/NN/piece of/IN/of text/NN/text using/VBG/using lesser/NN/lesser number/NN/number of/IN/of bits/NNS/bits using/VBG/using lesser/NN/lesser number/NN/number of/IN/of bits/NNP/bits. you/PRP/you understand/VBP/understand the/DT/the need/NN/need for/IN/for doing/VBG/doing this/DT/this kind/NN/kind of/IN/of compression/NN/compression ?/./? clearly/RB/clearly the/DT/the lesser/NN/lesser memory/NN/memory you/PRP/you require/VBP/require /,/, you/PRP/you know/VBP/know if/IN/if you/PRP/you are/VBP/are transmitting/VBG/transmitting the/DT/the file/NN/file /,/, you/PRP/you have/VBP/have to/TO/to send/VB/send less/JJR/less number/NN/number of/IN/of bits/NNP/bits. if/IN/if you/PRP/you are/VBP/are storing/VBG/storing /,/, you/PRP/you will/MD/will have/VB/have to/TO/to store/VB/store less/JJR/less number/NN/number of/IN/of bits/NNS/bits and/CC/and so/RB/so on/NNP/on. so/IN/so it/PRP/it ?/./? s/NNS/s very/RB/very useful/JJ/useful to/TO/to be/VB/be able/JJ/able to/TO/to compress/NN/compress the/DT/the information/NN/information that/IN/that you/PRP/you have/NNP/have. that/IN/that will/MD/will bring/VB/bring us/PRP/us to/TO/to what/WP/what we/PRP/we call/VBP/call variable-length/JJ/variable-length coding/NNP/coding. so/RB/so the/DT/the number/NN/number of/IN/of bits/NNS/bits used/VBN/used to/TO/to represent/VB/represent each/DT/each character/NN/character would/MD/would be/VB/be different/NNP/different. in/IN/in particular/JJ/particular /,/, character/NN/character which/WDT/which occur/NN/occur more/RBR/more frequently/RB/frequently /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to represent/VB/represent them/PRP/them using/VBG/using less/JJR/less number/NN/number of/IN/of bits/NNS/bits and/CC/and use/VB/use that/NNP/that. characters/NNS/characters which/WDT/which appear/JJ/appear very/RB/very infrequently/RB/infrequently /,/, let/VB/let ?/./? s/NNS/s say/VBP/say x/NN/x or/CC/or z/NN/z in/IN/in the/DT/the english/JJ/english alphabet/NN/alphabet /,/, we/PRP/we can/MD/can have/VB/have longer/RBR/longer sequences/NNP/sequences. may/MD/may be/VB/be more/RBR/more than/IN/than 8/CD/8 bits/NNP/bits. let/NN/let ?/./? s/NNS/s see/VBP/see how/WRB/how this/DT/this is/VBZ/is done/NNP/done. so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say my/PRP$/my piece/NN/piece of/IN/of text/NN/text is/VBZ/is just/RB/just 4/CD/4 characters/NNS/characters java/NN/java and/CC/and i/PRP/i decide/VBP/decide to/TO/to encode/VB/encode ?/./? a/DT/a ?/./? /./. how/WRB/how many/JJ/many characters/NNS/characters are/VBP/are there/RB/there ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 07/CD/07 /:/: 00/CD/00 /CD/) suppose/NN/suppose my/PRP$/my alphabets/NNS/alphabets were/VBD/were just/RB/just a/DT/a /,/, j/NN/j and/CC/and v/NNP/v. the/DT/the only/JJ/only things/NNS/things that/WDT/that ever/RB/ever encoded/VBD/encoded were/VBD/were strings/NNS/strings on/IN/on this/DT/this alphabet/NN/alphabet a/DT/a /,/, j/NN/j and/CC/and b/NNP/b. so/RB/so java/IN/java is1/NNP/is1 example/NN/example of/IN/of such/JJ/such a/DT/a string/NN/string and/CC/and suppose/VB/suppose i/PRP/i were/VBD/were doing/VBG/doing fixed/VBN/fixed length/NN/length encoding/NN/encoding /,/, how/WRB/how many/JJ/many bits/NNS/bits should/MD/should i/VB/i associate/NN/associate with/IN/with each/DT/each of/IN/of these/DT/these ?/./? i/PRP/i will/MD/will need/VB/need at/IN/at least/JJS/least two/NNP/two. i/PRP/i can/MD/can ?/./? t/VB/t do/VBP/do with/IN/with just1/NNP/just1 because/IN/because there/EX/there are/VBP/are three/CD/three different/JJ/different characters/NNS/characters and/CC/and there/EX/there are/VBP/are only/RB/only two/CD/two possible/JJ/possible values/NNS/values if/IN/if i/PRP/i choose1/NNP/choose1 bit/NNP/bit. so/RB/so i/PRP/i need/VBP/need at/IN/at least/JJS/least 2/CD/2 bits/NNS/bits and/CC/and if/IN/if i/PRP/i take/VBP/take 2/CD/2 bits/NNS/bits then/RB/then how/WRB/how many/JJ/many bits/NNS/bits do/VBP/do i/PRP/i need/VBP/need to/TO/to represents/NNS/represents java/VB/java ?/./? 2/CD/2 times/NNS/times 4/CD/4 is/VBZ/is 8/CD/8. as/IN/as straight/JJ/straight forward/NN/forward as/IN/as that/NNP/that. but/CC/but suppose/VB/suppose i/PRP/i decide/VBP/decide to/TO/to use/VB/use 0/-NONE-/0 /,/, just/RB/just single/JJ/single bit/NN/bit for/IN/for ?/./? a/DT/a ?/./? and11/NNP/and11 for/IN/for j/NN/j and/CC/and 10/CD/10 for/IN/for v/NN/v and/CC/and i/PRP/i will/MD/will tell/VB/tell you/PRP/you why/WRB/why i/PRP/i am/VBP/am doing/VBG/doing this/NNP/this. then/RB/then java/VB/java can/MD/can be/VB/be encoded/VBN/encoded as110100/-NONE-/as110100. that/IN/that would/MD/would be/VB/be the/DT/the encoding/NN/encoding and/CC/and it/PRP/it will/MD/will take/VB/take only/RB/only 6/CD/6 bits/NNP/bits. it/PRP/it will/MD/will take/VB/take the/DT/the lesser/NN/lesser number/NN/number of/IN/of bits/NNP/bits. then/RB/then you/PRP/you can/MD/can ask/VB/ask me/PRP/me /,/, ?/./? well/RB/well /,/, why/WRB/why did/VBD/did i/PRP/i do/VBP/do j/RB/j as11/NNP/as11 and/CC/and v/NN/v as10/NNP/as10 ?/./? ?/./? so/RB/so the/DT/the problem/NN/problem with/IN/with variable/JJ/variable length/NN/length decoding/VBG/decoding /:/- variable/JJ/variable length/NN/length encoding/VBG/encoding is/VBZ/is that/IN/that of/IN/of decoding/NNP/decoding. how/WRB/how do/VBP/do you/PRP/you decode/VB/decode ?/./? given/VBN/given a/DT/a sequence/NN/sequence of/IN/of bits/NNS/bits you/PRP/you want/VBP/want to/TO/to decode/VB/decode it/PRP/it uniquely/NNP/uniquely. so/RB/so suppose/RB/suppose i/PRP/i gave/VBP/gave you/PRP/you a/DT/a sequence/NN/sequence of/IN/of bits/NNS/bits /,/, then/RB/then you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to retrieve/VB/retrieve java/NN/java from/IN/from this/NNP/this. of/IN/of course/NN/course i/PRP/i ?/./? ve/JJ/ve told/NN/told what/WP/what the/DT/the codes/NNS/codes were/NNP/were. you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to get/VB/get back/RB/back to/TO/to java/NNP/java. suppose/NN/suppose for/IN/for instance/NN/instance /,/, i/PRP/i had/VBD/had used/VBN/used this/DT/this as/IN/as my/PRP$/my encoding/NN/encoding /,/, for/IN/for ?/./? a/DT/a ?/./? i/PRP/i use/VBP/use 0/-NONE-/0 /,/, ?/./? j/NN/j ?/./? is/VBZ/is 0/-NONE-/0 1/CD/1 and/CC/and ?/./? v/NN/v ?/./? is00/NNP/is00. so/RB/so still/RB/still it/PRP/it should/MD/should take/VB/take 6/CD/6 bits/NNS/bits only/RB/only and/CC/and the/DT/the encoding/NN/encoding would/MD/would be/VB/be 01000/CD/01000 and/CC/and 0/CD/0. from/IN/from here/RB/here can/MD/can i/PRP/i get/VB/get back/RB/back to/TO/to java/VB/java given/VBN/given this/DT/this code/NN/code ?/./? well/RB/well 01/CD/01 could/MD/could be/VB/be either/RB/either ?/./? a/DT/a ?/./? or/CC/or it/PRP/it could/MD/could be/VB/be a/DT/a ?/./? j/NN/j ?/./? /./. it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a ?/./? j/NN/j ?/./? because/IN/because we/PRP/we are/VBP/are using/VBG/using this/DT/this ?/./? 1/CD/1 ?/./? /./. so/RB/so what/WP/what would/MD/would you/PRP/you do/VB/do with/IN/with these/DT/these 4/CD/4 0/-NONE-/0 ?/./? s/NNS/s ?/./? it/PRP/it could/MD/could be/VB/be ?/./? java/NN/java ?/./? /,/, it/PRP/it could/MD/could be/VB/be ?/./? j/NN/j v/NN/v v/NN/v ?/./? or/CC/or it/PRP/it could/MD/could be/VB/be ?/./? ja/NN/ja ?/./? /./. it/PRP/it ?/./? s/NNS/s ambiguous/NNP/ambiguous. you/PRP/you see/VBP/see the/DT/the problem/NN/problem ?/./? if/IN/if you/PRP/you have/VBP/have to/TO/to use/VB/use variable/JJ/variable length/NN/length encoding/VBG/encoding /,/, then/RB/then you/PRP/you could/MD/could have/VB/have this/DT/this problem/NN/problem of/IN/of ambiguity/NN/ambiguity while/IN/while decoding/NNP/decoding. so/RB/so you/PRP/you have/VB/have to/TO/to be/VB/be careful/JJ/careful when/WRB/when you/PRP/you are/VBP/are using/VBG/using variable/JJ/variable length/NN/length codes/NNP/codes. this/DT/this problem/NN/problem would/MD/would not/RB/not arise/VB/arise when/WRB/when you/PRP/you have/VBP/have fixed/VBN/fixed length/NN/length codes/NNP/codes. you/PRP/you understand/VBP/understand why/WRB/why because/IN/because you/PRP/you will/MD/will take/VB/take those/DT/those many/JJ/many bits/NNS/bits and/CC/and then/RB/then you/PRP/you now/RB/now determine/VBP/determine what/WP/what exactly/RB/exactly the/DT/the character/NN/character was/NNP/was. so/RB/so to/TO/to prevent/VB/prevent ambiguities/NNS/ambiguities in/IN/in decoding/VBG/decoding /,/, we/PRP/we will/MD/will ensure/VB/ensure that/IN/that our/PRP$/our encoding/NN/encoding satisfies/NNS/satisfies what/WP/what ?/./? s/NNS/s called/VBN/called ?/./? the/DT/the prefix/NN/prefix rule/NN/rule ?/./? which/WDT/which is/VBZ/is very/RB/very simple/NNP/simple. it/PRP/it says/VBZ/says that/IN/that no/DT/no code/NN/code is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of another/DT/another code/NNP/code. by/IN/by code/NN/code /,/, i/PRP/i mean/VBP/mean the/DT/the bits/NNS/bits i/PRP/i use/VBP/use for/IN/for a/DT/a particular/JJ/particular character/NNP/character. when/WRB/when this/DT/this was/VBD/was our/PRP$/our code/NN/code /,/, you/PRP/you can/MD/can see/VB/see 0/-NONE-/0 was/VBD/was not/RB/not a/DT/a prefix/NN/prefix of/IN/of either/DT/either j/NN/j or/CC/or v/CC/v. j/NN/j and/CC/and v/NN/v were/VBD/were also/RB/also not/RB/not prefixes/NNS/prefixes of/IN/of each/DT/each other/NNP/other. the/DT/the encoding/NN/encoding arising/VBG/arising out/RP/out of/IN/of this/DT/this would/MD/would be/VB/be unambiguous/JJ/unambiguous and/CC/and we/PRP/we will/MD/will see/VB/see an/DT/an example/NN/example to/TO/to show/NN/show that/IN/that to/TO/to illustrate/VB/illustrate that/NNP/that. but/CC/but the/DT/the encoding/NN/encoding arising/VBG/arising out/RP/out of/IN/of this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 15/CD/15 /CD/) will/MD/will be/VB/be ambiguous/JJ/ambiguous because/IN/because ?/./? a/DT/a ?/./? is/VBZ/is the/DT/the prefix/NN/prefix of/IN/of these/DT/these /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 21/CD/21 /CD/) and/CC/and i/PRP/i will/MD/will show/VB/show you/PRP/you an/DT/an example/NNP/example. you/PRP/you must/MD/must understand/VB/understand what/WP/what the/DT/the prefix/NN/prefix rule/NN/rule is/NNP/is. so/RB/so if/IN/if your/PRP$/your codes/NNS/codes satisfy/NN/satisfy the/DT/the prefix/NN/prefix rule/NN/rule /,/, then/RB/then decoding/VBG/decoding will/MD/will be/VB/be unambiguous/NNP/unambiguous. but/CC/but if/IN/if it/PRP/it does/VBZ/does not/RB/not /,/, then/RB/then you/PRP/you will/MD/will have/VB/have ambiguity/NN/ambiguity in/IN/in decoding/NNP/decoding. so/RB/so i/PRP/i will/MD/will come/VB/come back/RB/back to/TO/to the/DT/the prefix/NN/prefix rule/NN/rule in/IN/in the/DT/the next/JJ/next slide/NNP/slide. code/NN/code is/VBZ/is the/DT/the collection/NN/collection of/IN/of code/NN/code words/NNP/words. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 08/CD/08 /:/: 48/CD/48 /CD/) what/WP/what i/PRP/i have/VBP/have written/VBN/written out/RP/out here/RB/here is/VBZ/is a/DT/a code/NNP/code. each/DT/each one/CD/one of/IN/of these/DT/these is/VBZ/is called/VBN/called a/DT/a code/NN/code word/NNP/word. for/IN/for each/DT/each character/NN/character the/DT/the sequence/NN/sequence of/IN/of bits/NNS/bits what/WP/what ?/./? s/NNS/s called/VBN/called the/DT/the code/NN/code word/NN/word and/CC/and the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is called/VBN/called a/DT/a code/NNP/code. so/RB/so code/VBP/code which/WDT/which satisfies/NNS/satisfies the/DT/the prefix/NN/prefix rule/NN/rule can/MD/can be/VB/be represented/VBN/represented as/IN/as a/DT/a tree/NNP/tree. in/IN/in particular/JJ/particular as/IN/as a/DT/a trie/NNP/trie. so/RB/so recall/JJ/recall the/DT/the ?/./? trie/NN/trie ?/./? that/IN/that we/PRP/we have/VBP/have discussed/VBN/discussed in/IN/in the/DT/the last/JJ/last class/NN/class /,/, the/DT/the branching/NN/branching was/VBD/was a/DT/a 26/CD/26 way/NN/way branching/NNP/branching. but/CC/but here/RB/here branching/VBG/branching will/MD/will only/RB/only be/VB/be a/DT/a 2/CD/2 way/NN/way branching/NNP/branching. each/DT/each node/NN/node will/MD/will have/VB/have only/RB/only a/DT/a 2/CD/2 children/NNP/children. here/RB/here my/PRP$/my alphabets/NNS/alphabets are/VBP/are a/DT/a b/NN/b c/NN/c d/NN/d r/NNP/r. five/CD/five characters/NNS/characters only/NNP/only. the/DT/the characters/NNS/characters will/MD/will be/VB/be stored/VBN/stored at/IN/at the/DT/the leaves/NNS/leaves or/CC/or the/DT/the external/JJ/external nodes/NNS/nodes and/CC/and every/DT/every for/IN/for every/DT/every node/NN/node the/DT/the left/NN/left edge/NN/edge will/MD/will label/VB/label with/IN/with 0/-NONE-/0 and/CC/and the/DT/the right/NN/right edge/NN/edge will/MD/will be/VB/be labeled/VBN/labeled with/IN/with 1/CD/1. now/RB/now a/DT/a =/NN/= 010/CD/010 because/IN/because you/PRP/you know/VBP/know if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this /,/, from/IN/from root/NN/root two/CD/two a/DT/a /,/, you/PRP/you will/MD/will encounter/VB/encounter 010/CD/010. when/WRB/when you/PRP/you are/VBP/are coming/VBG/coming to/TO/to r/VB/r /,/, the/DT/the code/NN/code for/IN/for r/NN/r will/MD/will be/VB/be 011/CD/011. can/MD/can you/PRP/you see/VB/see that/IN/that if/IN/if i/PRP/i drew/VBP/drew such/JJ/such a/DT/a picture/NN/picture for/IN/for you/PRP/you /,/, then/RB/then the/DT/the code/NN/code word/NN/word for/IN/for any/DT/any character/NN/character will/MD/will not/RB/not be/VB/be a/DT/a prefix/NN/prefix of/IN/of the/DT/the codeword/NN/codeword for/IN/for some/DT/some other/JJ/other character/NNP/character. otherwise/NN/otherwise it/PRP/it could/MD/could have/VB/have ended/VBN/ended midway/NNP/midway. but/CC/but it/PRP/it ?/./? s/NNS/s not/RB/not because/IN/because everything/NN/everything is/VBZ/is a/DT/a leaf/NNP/leaf. each/DT/each character/NN/character corresponds/NNS/corresponds to/TO/to a/DT/a leaf/NNP/leaf. that/WDT/that ?/./? s/VBZ/s the/DT/the very/JJ/very first/JJ/first statement/NN/statement here/NNP/here. so/RB/so the/DT/the code/NN/code word/NN/word for/IN/for one/CD/one character/NN/character would/MD/would not/RB/not be/VB/be a/DT/a prefix/NN/prefix of/IN/of code/NN/code word/NN/word for/IN/for another/DT/another character/NNP/character. we/PRP/we will/MD/will represent/VB/represent our/PRP$/our codes/NNS/codes using/VBG/using such/JJ/such a/DT/a we/PRP/we trace/VBP/trace a/DT/a from/IN/from the/DT/the root/NN/root to/TO/to the/DT/the particular/JJ/particular leaf/NN/leaf to/TO/to determine/VB/determine the/DT/the code/NN/code word/NN/word for/IN/for each/DT/each character/NNP/character. i/PRP/i need/VBP/need not/RB/not have/VB/have shown/VBN/shown this/DT/this picture/NN/picture at/IN/at all/NNP/all. i/PRP/i could/MD/could have/VB/have just/RB/just drawn/VBN/drawn this/DT/this trie/NN/trie and/CC/and from/IN/from this/DT/this you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what is/VBZ/is the/DT/the code/NN/code word/NN/word corresponding/VBG/corresponding to/TO/to this/NNP/this. now/RB/now how/WRB/how do/VBP/do we/PRP/we do/VBP/do the/DT/the decoding/VBG/decoding ?/./? suppose/NN/suppose this/DT/this is/VBZ/is my/PRP$/my trie/NN/trie and/CC/and these/DT/these are/VBP/are the/DT/the code/NN/code words/NNS/words /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 33/CD/33 /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time 11/CD/11 /:/: 28/CD/28 /CD/) now/RB/now i/PRP/i give/VBP/give you/PRP/you a/DT/a sequence/NN/sequence of/IN/of bits/NNS/bits that/WDT/that ?/./? s/VBZ/s this/DT/this is/VBZ/is my/PRP$/my encoded/VBN/encoded text/NN/text and/CC/and i/PRP/i have/VBP/have to/TO/to decode/VB/decode this/DT/this text/NN/text /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 01/CD/01 /CD/) /./. as/IN/as you/PRP/you can/MD/can see/VB/see /,/, the/DT/the code/NN/code satisfies/NNS/satisfies the/DT/the prefix/NN/prefix rule/NNP/rule. so/RB/so how/WRB/how do/VBP/do i/PRP/i do/VBP/do the/DT/the decoding/VBG/decoding ?/./? so/RB/so i/PRP/i start/VBP/start from/IN/from the/DT/the beginning/NNP/beginning. you/PRP/you always/RB/always start/VB/start from/IN/from the/DT/the beginning/NNP/beginning. you/PRP/you start/VB/start from/IN/from the/DT/the beginning/NN/beginning 010/CD/010. so/RB/so you/PRP/you will/MD/will trace/VB/trace out/RP/out 010/CD/010. you/PRP/you will/MD/will get/VB/get a/DT/a leaf/NNP/leaf. you/PRP/you stop/VB/stop and/CC/and these/DT/these 3/CD/3 characters/NNS/characters go/VBP/go away/RB/away and/CC/and i/PRP/i get/VBP/get an/DT/an ?/./? a/DT/a ?/./? /./. so/RB/so i/PRP/i have/VBP/have struck/JJ/struck off/IN/off these/DT/these 3/CD/3 and/CC/and i/PRP/i have/VBP/have written/VBN/written down/RP/down an/DT/an ?/./? a/DT/a ?/./? /./. now/RB/now i/PRP/i will/MD/will take/VB/take 1/CD/1 and/CC/and the/DT/the next/JJ/next 1/CD/1 is/VBZ/is also1/NNP/also1. so/RB/so i/PRP/i get/VBP/get a/DT/a ?/./? b/NN/b ?/./? and/CC/and i/PRP/i will/MD/will strike/VB/strike these/DT/these two/CD/two off/NNP/off. i/PRP/i have/VBP/have taken/VBN/taken care/NN/care of/IN/of these/DT/these two/NNP/two. now/RB/now i/PRP/i get/VBP/get a/DT/a 011/CD/011. its/PRP$/its 01.1/CD/01.1 so/RB/so 0/-NONE-/0 remains/NNP/remains. as/IN/as you/PRP/you can/MD/can imagine/VB/imagine it/PRP/it will/MD/will come/VB/come to/TO/to the/DT/the same/JJ/same ?/./? abracadabra/NN/abracadabra ?/./? /./. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what this/DT/this will/MD/will turn/VB/turn out/RP/out to/TO/to be/VB/be and/CC/and we/PRP/we can/MD/can decode/VB/decode it/PRP/it and/CC/and see/NNP/see. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 01/CD/01 /CD/) suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you this/DT/this trie/NN/trie and/CC/and i/PRP/i give/VBP/give you/PRP/you this/DT/this encoded/VBD/encoded text/NN/text /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to decode/VB/decode ?/./? clearly/RB/clearly i/PRP/i am/VBP/am just/RB/just looking/VBG/looking at/IN/at a/DT/a bit/NN/bit and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to spend/VB/spend 1/CD/1 unit/NN/unit of/IN/of time/NN/time with/IN/with every/DT/every bit/NNP/bit. i/PRP/i just/RB/just look/VBP/look at/IN/at that/DT/that bit/NN/bit and/CC/and go/VB/go down/RP/down one/CD/one level/NN/level in/IN/in that/DT/that trie.so/JJ/trie.so it/PRP/it ?/./? s/NNS/s basically/RB/basically length/JJ/length which/WDT/which you/PRP/you have/VBP/have to/TO/to spend/VB/spend clearly/NNP/clearly. so/RB/so this/DT/this is/VBZ/is another/DT/another trie/NN/trie /:/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 55/CD/55 /CD/) and/CC/and you/PRP/you know/VBP/know this/DT/this is/VBZ/is a/DT/a long/JJ/long piece/NN/piece of/IN/of encoded/VBN/encoded text/NN/text and/CC/and you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what this/DT/this is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 55/CD/55 /CD/) you/PRP/you can/MD/can take/VB/take this/DT/this is/VBZ/is an/DT/an exercise/NNP/exercise. so/RB/so what/WP/what is/VBZ/is our/PRP$/our aim/NN/aim in/IN/in doing/NN/doing this/DT/this ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 15/CD/15 /:/: 52/CD/52 /CD/) recall/NN/recall we/PRP/we wanted/VBD/wanted to/TO/to build/VB/build up/RP/up a/DT/a code/NN/code in/IN/in such/JJ/such a/DT/a manner/NN/manner such/JJ/such that/IN/that the/DT/the total/JJ/total length/NN/length of/IN/of the/DT/the encoding/NN/encoding is/VBZ/is as/IN/as small/JJ/small as/IN/as possible/NNP/possible. suppose/NN/suppose this/DT/this trie/NN/trie was/VBD/was specifying/VBG/specifying my/PRP$/my code/NN/code and/CC/and once/RB/once again/RB/again i/PRP/i was/VBD/was encoding/VBG/encoding abracadabra/NN/abracadabra /,/, this/DT/this has/VBZ/has 29/CD/29 bits/NNP/bits. how/WRB/how will/MD/will you/PRP/you compute/VB/compute such/JJ/such a/DT/a thing/NN/thing ?/./? well/RB/well let/VB/let ?/./? s/NNS/s quickly/RB/quickly do/VBP/do that/IN/that to/TO/to make/VB/make sure/JJ/sure that/IN/that you/PRP/you understand/NNP/understand. what/WP/what is/VBZ/is the/DT/the frequency/NN/frequency of/IN/of each/DT/each character/NN/character ?/./? a/DT/a ?/./? 5,b/CD/5,b /:/- 2/CD/2 /,/, c/NN/c ?/./? 1,d/CD/1,d ?/./? 1/CD/1 and/CC/and r/NN/r ?/./? 2/CD/2. im/NN/im using/VBG/using 3/CD/3 bits/NNS/bits for/IN/for a/DT/a /,/, 2/CD/2 for/IN/for b/NN/b /,/, 2/CD/2 for/IN/for c/NN/c /,/, 2/CD/2 for/IN/for d/NN/d and/CC/and 3/CD/3 for/IN/for r/NNP/r. i/PRP/i am/VBP/am just/RB/just counting/VBG/counting the/DT/the number/NN/number of/IN/of bits/NNP/bits. so/RB/so this/DT/this becomes/VBZ/becomes 15/CD/15 /,/, 4,2/CD/4,2 and/CC/and 6.29/CD/6.29 totally/NNP/totally. now/RB/now suppose/VBP/suppose i/PRP/i had/VBD/had another/DT/another trie/NN/trie say/VBP/say this/DT/this one/CD/one /CD/( refer/NN/refer slide/NN/slide time/NN/time 16/CD/16 /:/: 06/CD/06 /CD/) /,/, you/PRP/you think/VBP/think this/DT/this will/MD/will have/VB/have less/JJR/less or/CC/or more/JJR/more ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 16/CD/16 /:/: 34/CD/34 /CD/) this/DT/this will/MD/will have/VB/have less/NNP/less. ?/./? a/DT/a ?/./? was/VBD/was occurring/VBG/occurring 5/CD/5 times/NNP/times. here/RB/here i/PRP/i ?/./? m/NN/m using/VBG/using 3/CD/3 bits/NNS/bits and/CC/and i/PRP/i am/VBP/am using/VBG/using 2/CD/2 bits/NNS/bits here/NNP/here. i/PRP/i ?/./? m/NN/m saving/VBG/saving 5/CD/5 bits/NNS/bits for/IN/for ?/./? a/DT/a ?/./? /./. of/IN/of course/NN/course /,/, i/PRP/i will/MD/will have/VB/have to/TO/to compensate/VB/compensate elsewhere/NNP/elsewhere. c/NN/c and/CC/and d/VBD/d /,/, there/EX/there are/VBP/are 2/CD/2 here/RB/here and/CC/and 3/CD/3 there/NNP/there. but/CC/but c/NN/c and/CC/and d/VBD/d occur/NN/occur very/RB/very infrequently/NNP/infrequently. so/RB/so it/PRP/it ?/./? s/NNS/s good/NNP/good. this/DT/this will/MD/will have/VB/have less/JJR/less than/IN/than 29/CD/29. we/PRP/we are/VBP/are also/RB/also saving/VBG/saving on/IN/on r/NNP/r. this/DT/this you/PRP/you can/MD/can check/NNP/check. it/PRP/it will/MD/will require/VB/require 24/CD/24 bits/NNP/bits. we/PRP/we have/VBP/have to/TO/to design/VB/design this/DT/this in/IN/in such/JJ/such a/DT/a manner/NN/manner so/IN/so that/IN/that the/DT/the number/NN/number of/IN/of bits/NNS/bits required/VBN/required it/PRP/it as/IN/as little/JJ/little as/IN/as possible/NNP/possible. so/RB/so let/VB/let ?/./? s/NNS/s try/VBP/try and/CC/and understand/NNP/understand. what/WP/what is/VBZ/is it/PRP/it that/IN/that we/PRP/we are/VBP/are given/VBN/given ?/./? we/PRP/we are/VBP/are given/VBN/given the/DT/the frequency/NN/frequency of/IN/of that/DT/that character/NNP/character. suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a piece/NN/piece of/IN/of text/NNP/text. you/PRP/you will/MD/will count/VB/count the/DT/the frequency/NN/frequency of/IN/of characters/NNS/characters and/CC/and we/PRP/we are/VBP/are trying/VBG/trying to/TO/to compute/VB/compute the/DT/the trie/NN/trie so/RB/so that/IN/that the/DT/the length/NN/length of/IN/of the/DT/the encoding/NN/encoding we/PRP/we get/VBP/get is/VBZ/is as/IN/as small/JJ/small as/IN/as possible/NNP/possible. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 17/CD/17 /:/: 36/CD/36 /CD/) recall/NN/recall that/WDT/that each/DT/each character/NN/character is/VBZ/is a/DT/a leaf/NN/leaf in/IN/in our/PRP$/our tree/NNP/tree. number/NN/number of/IN/of bits/NNS/bits used/VBN/used to/TO/to encode/VB/encode the/DT/the character/NN/character is/VBZ/is its/PRP$/its level/NN/level number/NN/number where/WRB/where i/PRP/i ?/./? m/NN/m assuming/VBG/assuming that/IN/that the/DT/the root/NN/root is/VBZ/is number/NN/number 0/CD/0. so/RB/so if/IN/if the/DT/the ith/NN/ith character/NN/character has/VBZ/has frequency/NN/frequency of/IN/of f/NN/f i/PRP/i and/CC/and has/VBZ/has level/NN/level number/NN/number of/IN/of l/NN/l i/PRP/i /,/, then/RB/then what/WP/what is/VBZ/is it/PRP/it that/IN/that we/PRP/we are/VBP/are trying/VBG/trying to/TO/to minimize/VB/minimize ?/./? it/PRP/it is/VBZ/is summation/NN/summation fi/NN/fi li/NNP/li. so/RB/so we/PRP/we have/VBP/have to/TO/to choose/VB/choose a/DT/a tree/NN/tree so/IN/so that/IN/that this/DT/this quantity/NN/quantity is/VBZ/is minimized/NNP/minimized. our/PRP$/our tree/NN/tree will/MD/will determine/VB/determine the/DT/the li/NN/li ?/./? s/NNP/s. fi/NN/fi is/VBZ/is given/VBN/given to/TO/to us/NNP/us. we/PRP/we can/MD/can not/RB/not change/VB/change the/DT/the fi/NN/fi ?/./? s/NNP/s. we/PRP/we can/MD/can pick/VB/pick a/DT/a tree/NN/tree so/IN/so that/IN/that we/PRP/we can/MD/can get/VB/get appropriate/JJ/appropriate li/NN/li ?/./? s/NNP/s. so/RB/so summation/NN/summation fi/NN/fi li/NN/li is/VBZ/is called/VBN/called the/DT/the ?/./? total/JJ/total external/JJ/external weighted/JJ/weighted path/NN/path length/NN/length ?/./? of/IN/of a/DT/a tree/NNP/tree. it/PRP/it should/MD/should be/VB/be very/RB/very easy/JJ/easy to/TO/to see/VB/see why/NNP/why. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 51/CD/51 /CD/) external/JJ/external because/IN/because we/PRP/we are/VBP/are talking/VBG/talking about/IN/about external/JJ/external nodes/NNS/nodes which/WDT/which are/VBP/are our/PRP$/our leaves/NNP/leaves. what/WP/what is/VBZ/is its/PRP$/its path/NN/path length/NN/length ?/./? the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path from/IN/from the/DT/the root/NN/root to/TO/to the/DT/the leaf/NN/leaf which/WDT/which is/VBZ/is basically/RB/basically the/DT/the number/NN/number of/IN/of levels/NNP/levels. ?/./? weighted/VBN/weighted ?/./? because/IN/because we/PRP/we are/VBP/are multiplying/VBG/multiplying it/PRP/it by/IN/by the/DT/the frequency/NN/frequency and/CC/and ?/./? total/JJ/total ?/./? because/IN/because we/PRP/we are/VBP/are summing/VBG/summing it/PRP/it up/NNP/up. so/RB/so we/PRP/we are/VBP/are viewing/VBG/viewing each/DT/each leaf/NN/leaf as/IN/as having/VBG/having a/DT/a weight/NN/weight which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to the/DT/the frequency/NN/frequency of/IN/of the/DT/the corresponding/NN/corresponding character/NNP/character. the/DT/the weights/NNS/weights in/IN/in the/DT/the weighted/VBN/weighted are/VBP/are referring/VBG/referring to/TO/to this/DT/this frequency/NNP/frequency. from/IN/from now/RB/now on/IN/on /,/, i/PRP/i might/MD/might call/VB/call the/DT/the same/JJ/same thing/NN/thing is/VBZ/is weight/VBN/weight or/CC/or frequency/NNP/frequency. this/DT/this means/VBZ/means the/DT/the same/JJ/same thing/NNP/thing. here/RB/here for/IN/for instance/NN/instance given/VBN/given these/DT/these weights/NNS/weights or/CC/or frequencies/NNS/frequencies /,/, f1/NNP/f1 through/IN/through fn/NN/fn /,/, we/PRP/we wish/VBP/wish to/TO/to find/VB/find the/DT/the tree/NN/tree whose/WP$/whose total/JJ/total weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length is/VBZ/is minimum/NNP/minimum. that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we want/VBP/want to/TO/to do/NNP/do. we/PRP/we are/VBP/are given/VBN/given the/DT/the weight/NN/weight on/IN/on the/DT/the leaf/NNP/leaf. we/PRP/we want/VBP/want to/TO/to build/VB/build a/DT/a tree/NN/tree whose/WP$/whose leaves/NNS/leaves will/MD/will be/VB/be these/DT/these and/CC/and who/WP/who ?/./? s/VBZ/s weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length will/MD/will be/VB/be minimum/JJ/minimum and/CC/and will/MD/will denote/VB/denote this/DT/this minimum/JJ/minimum weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length by/IN/by this/DT/this quantity/NNP/quantity. so/RB/so given/VBN/given ?/./? n/NN/n ?/./? leaves/NNS/leaves with/IN/with weights/NNS/weights f1/NNP/f1 /,/, f/NN/f 2/CD/2 /,/, f/NN/f 3/LS/3 /,/, ?/./? fn/NN/fn ;/:/; your/PRP$/your problem/NN/problem is/VBZ/is to/TO/to build/VB/build a/DT/a binary/JJ/binary tree/NN/tree whose/WP$/whose leaves/NNS/leaves will/MD/will be/VB/be these/DT/these ?/./? n/NN/n ?/./? leaves/NNS/leaves and/CC/and which/WDT/which will/MD/will have/VB/have a/DT/a minimum/JJ/minimum total/NN/total weighted/VBD/weighted external/JJ/external path/NN/path length/NNP/length. so/RB/so we/PRP/we have/VBP/have managed/VBN/managed to/TO/to translate/VB/translate our/PRP$/our question/NN/question of/IN/of finding/NN/finding the/DT/the minimum/JJ/minimum length/NN/length in/IN/in encoding/NN/encoding such/JJ/such that/IN/that the/DT/the length/NN/length of/IN/of the/DT/the encoded/VBN/encoded message/NN/message minimum/NN/minimum to/TO/to that/DT/that of/IN/of designing/VBG/designing an/DT/an appropriate/JJ/appropriate tree/NNP/tree. one/CD/one thing/NN/thing i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume is/VBZ/is that/IN/that when/WRB/when i/PRP/i write/VBP/write it/PRP/it in/IN/in this/DT/this way/NN/way /,/, f1/NNP/f1 is/VBZ/is smaller/JJR/smaller than/IN/than f2/NNP/f2 and/CC/and these/DT/these are/VBP/are in/IN/in increasing/VBG/increasing order/NNP/order. now/RB/now let/VB/let me/PRP/me show/VB/show you/PRP/you what/WP/what the/DT/the algorithm/NN/algorithm is/NNP/is. once/RB/once again/RB/again /,/, my/PRP$/my text/NN/text is/VBZ/is the/DT/the same/JJ/same ?/./? abracadabra/NN/abracadabra ?/./? /./. there/EX/there are/VBP/are 5/CD/5 characters/NNS/characters and/CC/and i/PRP/i have/VBP/have put/VBN/put down/RP/down the/DT/the frequency/NN/frequency of/IN/of these/DT/these 5/CD/5 characters/NNP/characters. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 20/CD/20 /:/: 58/CD/58 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time 22/CD/22 /:/: 13/CD/13 /CD/) i/PRP/i have/VBP/have put/VBN/put red/VBN/red boxes/NNS/boxes around/IN/around them/NNP/them. these/DT/these will/MD/will have/VB/have to/TO/to be/VB/be the/DT/the leaves/NNS/leaves of/IN/of my/PRP$/my tree/NNP/tree. now/RB/now what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do at/IN/at the/DT/the very/RB/very step/VB/step is/VBZ/is i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take the/DT/the 2/CD/2 with/IN/with the/DT/the smallest/JJS/smallest value/NN/value which/WDT/which are/VBP/are the/DT/the ones/NNS/ones in/IN/in the/DT/the ends/NNP/ends. these/DT/these are/VBP/are the/DT/the two/CD/two smallest/JJS/smallest ones/NNP/ones. i/PRP/i am/VBP/am going/VBG/going to/TO/to combine/VB/combine them/NNP/them. how/WRB/how am/NN/am doing/VBG/doing that/IN/that ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to create/VB/create another/DT/another node/NNP/node. i/PRP/i am/VBP/am building/VBG/building up/RP/up a/DT/a tree/NN/tree now/NNP/now. these/DT/these are/VBP/are my/PRP$/my leaves/NNP/leaves. i/PRP/i make/VBP/make another/DT/another node/NN/node as/IN/as the/DT/the parent/NN/parent of/IN/of these/DT/these two/CD/two and/CC/and this/DT/this node/NN/node gets/VBZ/gets the/DT/the value/NN/value of/IN/of weight/NN/weight of/IN/of sum/NN/sum of/IN/of these/DT/these two/NNP/two. now/RB/now these/DT/these two/CD/two will/MD/will disappear/VB/disappear from/IN/from the/DT/the picture/NN/picture and/CC/and i/PRP/i will/MD/will just/RB/just be/VB/be left/VBN/left with/IN/with 4/CD/4 nodes/NNS/nodes and/CC/and i/PRP/i will/MD/will repeat/VB/repeat the/DT/the process/NNP/process. so/RB/so what/WP/what is/VBZ/is the/DT/the process/NN/process ?/./? take/NN/take the/DT/the two/CD/two smallest/JJS/smallest and/CC/and combine/NN/combine them/PRP/them together/RB/together into/IN/into one/NNP/one. take/VBP/take the/DT/the two/CD/two smallest/JJS/smallest and/CC/and combine/NN/combine them/PRP/them together/RB/together into/IN/into a/DT/a node/NN/node and/CC/and when/WRB/when you/PRP/you combine/VBP/combine /,/, you/PRP/you basically/RB/basically sum/VBP/sum up/RP/up their/PRP$/their weights/NNP/weights. so/RB/so at/IN/at the/DT/the next/JJ/next /,/, we/PRP/we have/VBP/have an/DT/an option/NN/option .we/NN/.we can/MD/can either/VB/either combine/NN/combine b/NN/b and/CC/and r/NN/r or/CC/or we/PRP/we can/MD/can combine/VB/combine r/NN/r with/IN/with this/DT/this one/CD/one /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 13/CD/13 /CD/) that/WDT/that we/PRP/we have/VBP/have created/NNP/created. let/NN/let ?/./? s/NNS/s see/VBP/see which/WDT/which one/CD/one i/PRP/i take/NNP/take. i/PRP/i decide/VBP/decide b/NN/b and/CC/and r/NN/r to/TO/to be/VB/be combined/VBN/combined into/IN/into one/NNP/one. when/WRB/when you/PRP/you have/VBP/have an/DT/an option/NN/option we/PRP/we can/MD/can pick/VB/pick whichever/RB/whichever you/PRP/you feel/VBP/feel like/NNP/like. so/RB/so they/PRP/they have/VBP/have combined/VBN/combined into/IN/into one/CD/one and/CC/and what/WP/what we/PRP/we are/VBP/are left/VBN/left is/VBZ/is only/RB/only three/CD/three node/NNP/node. now/RB/now many/JJ/many times/NNS/times i/PRP/i will/MD/will have/VB/have to/TO/to do/VB/do this/DT/this process/NN/process ?/./? if/IN/if i/PRP/i started/VBD/started off/RP/off with/IN/with ?/./? n/NN/n ?/./? leaves/NNS/leaves /,/, how/WRB/how many/JJ/many times/NNS/times will/MD/will i/VB/i have/VB/have to/TO/to do/VB/do this/DT/this process/NN/process ?/./? every/DT/every time/NN/time you/PRP/you are/VBP/are reducing/VBG/reducing a/DT/a node/NN/node by/IN/by 1/CD/1. so/RB/so it/PRP/it is/VBZ/is /:/( n/NN/n -1/-NONE-/-1 /./) times/NNS/times not/RB/not n/VB/n by2/NNP/by2. now/RB/now which/WDT/which will/MD/will we/PRP/we combine/VB/combine ?/./? two/CD/two and/CC/and four/CD/four clearly/RB/clearly because/IN/because they/PRP/they are/VBP/are the/DT/the two/CD/two smallest/JJS/smallest ones/NNP/ones. so/RB/so you/PRP/you combine/VBP/combine them/PRP/them into/IN/into one/CD/one and/CC/and we/PRP/we get/VBP/get a/DT/a six/NNP/six. finally/RB/finally we/PRP/we have/VBP/have only/RB/only two/CD/two nodes/NNS/nodes left/VBN/left ?/./? 5/CD/5 &/CC/& 6/CD/6. they/PRP/they will/MD/will get/VB/get combined/NNP/combined. this/DT/this is/VBZ/is the/DT/the picture/NNP/picture. we/PRP/we will/MD/will combine/VB/combine them/PRP/them into/IN/into one/CD/one and/CC/and these/DT/these are/VBP/are 11.now/CD/11.now how/WRB/how do/VBP/do i/PRP/i label/VB/label ?/./? i/PRP/i can/MD/can just/RB/just label/VB/label whichever/RB/whichever way/NN/way i/PRP/i like/VBP/like to/NNP/to. it/PRP/it really/RB/really does/VBZ/does not/RB/not make/VB/make a/DT/a difference/NNP/difference. the/DT/the length/NN/length of/IN/of the/DT/the encoding/NN/encoding was/VBD/was determined/VBN/determined by/IN/by the/DT/the depth/NN/depth of/IN/of these/DT/these things/NNP/things. this/DT/this becomes/VBZ/becomes encoding/VBG/encoding now/RB/now and/CC/and the/DT/the claim/NN/claim is/VBZ/is this/DT/this is/VBZ/is the/DT/the best/NNP/best. this/DT/this will/MD/will give/VB/give you/PRP/you the/DT/the same/JJ/same minimum/NNP/minimum. whatever/NN/whatever was/VBD/was the/DT/the minimum/JJ/minimum for/IN/for abracadabra/NN/abracadabra will/MD/will be/VB/be achieved/VBN/achieved by/IN/by this/NNP/this. as/IN/as you/PRP/you can/MD/can see/VB/see ?/./? a/DT/a ?/./? which/WDT/which was/VBD/was occurring/VBG/occurring five/CD/five times/NNS/times is/VBZ/is getting/VBG/getting only1/NNP/only1 bit/NNP/bit. looks/VBZ/looks like/IN/like it/PRP/it is/VBZ/is the/DT/the right/NN/right thing/NN/thing to/TO/to do/NNP/do. so/RB/so this/DT/this is/VBZ/is our/PRP$/our final/JJ/final trie/NNP/trie. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 24/CD/24 /:/: 07/CD/07 /CD/) this/DT/this is/VBZ/is my/PRP$/my text/NNP/text. this/DT/this is/VBZ/is the/DT/the corresponding/NN/corresponding code/NNP/code. as/IN/as you/PRP/you can/MD/can see/VB/see for/IN/for ?/./? a/DT/a ?/./? you/PRP/you have/VBP/have 0/CD/0. for/IN/for b/NN/b you/PRP/you have/VB/have 100/CD/100 /,/, the/DT/the next/JJ/next three/CD/three characters/NNP/characters. for/IN/for r/NN/r you/PRP/you have/VB/have 101/CD/101 /,/, the/DT/the next/JJ/next 3/CD/3. for/IN/for c/NN/c you/PRP/you have/VB/have 3/CD/3 and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. there/RB/there should/MD/should be/VB/be a/DT/a gap/NN/gap between/IN/between this/DT/this 101/CD/101 and/CC/and 0/-NONE-/0 because/IN/because ?/./? a/DT/a ?/./? corresponds/NNS/corresponds to/TO/to the/DT/the last/JJ/last one/CD/one and/CC/and these/DT/these are/VBP/are only/RB/only 23/CD/23 bits/NNP/bits. these/DT/these is/VBZ/is even/RB/even better/RBR/better than/IN/than the/DT/the previous/JJ/previous code/NN/code which/WDT/which was/VBD/was 24/CD/24 and/CC/and this/DT/this is/VBZ/is the/DT/the best/JJS/best possible/JJ/possible which/WDT/which is/VBZ/is what/WP/what we/PRP/we will/MD/will argue/VB/argue in/IN/in this/DT/this class/NNP/class. can/MD/can you/PRP/you do/VB/do better/RBR/better than/IN/than this/DT/this ?/./? let/NN/let me/PRP/me take/VBP/take the/DT/the same/JJ/same example/NN/example and/CC/and then/RB/then build/VB/build another/DT/another trie/NNP/trie. how/WRB/how can/MD/can i/VB/i build/VB/build another/DT/another trie/NN/trie ?/./? we/PRP/we recall/VBP/recall that/IN/that there/EX/there was/VBD/was an/DT/an option/NN/option at/IN/at each/DT/each point/NNP/point. let/NN/let me/PRP/me take/VBP/take the/DT/the other/JJ/other side/NN/side of/IN/of the/DT/the option/NNP/option. let/NN/let me/PRP/me see/VBP/see what/WP/what trie/NN/trie i/PRP/i get/VBP/get now/NNP/now. here/RB/here there/RB/there are/VBP/are 2/CD/2 minimums/NNP/minimums. here/RB/here there/RB/there are/VBP/are 3/CD/3 2/CD/2 ?/./? s/NNS/s /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 44/CD/44 /CD/) /./. first/JJ/first i/PRP/i combined/VBD/combined these/DT/these two/NNP/two. let/VBD/let me/PRP/me do/VBP/do that/NNP/that. i/PRP/i decide/VBP/decide to/TO/to combine/VB/combine r/NN/r with/IN/with this/DT/this one/CD/one /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 49/CD/49 /CD/) /./. i/PRP/i get/VBP/get a/DT/a four/NNP/four. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 25/CD/25 /:/: 50/CD/50 /CD/) now/RB/now which/WDT/which do/VBP/do i/PRP/i have/VB/have to/TO/to combine/VB/combine ?/./? this/DT/this four/CD/four with/IN/with this/DT/this two/CD/two /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 55/CD/55 /CD/) /./. i/PRP/i combine/VBP/combine the/DT/the four/CD/four and/CC/and the/DT/the two/CD/two and/CC/and then/RB/then i/PRP/i get/VBP/get six/NNP/six. finally/RB/finally i/PRP/i am/VBP/am going/VBG/going to/TO/to combine/VB/combine this/DT/this and/CC/and this/NNP/this. so/RB/so this/DT/this is/VBZ/is the/DT/the final/JJ/final trie/NN/trie i/PRP/i get/NNP/get. it/PRP/it ?/./? s/NNS/s the/DT/the same/JJ/same piece/NN/piece of/IN/of text/NNP/text. once/RB/once again/RB/again ?/./? a/DT/a ?/./? gets/VBZ/gets only/RB/only 1/CD/1 bit/NNP/bit. b/NN/b gets/VBZ/gets 2/CD/2. r/NN/r gets/NNS/gets 3/CD/3. ?/./? a/DT/a ?/./? gets/VBZ/gets 1/CD/1. ?/./? c/NN/c ?/./? gets/NNS/gets 4/CD/4 now/RB/now and/CC/and d/VBD/d also/RB/also gets/VBZ/gets 4/CD/4. you/PRP/you think/VBP/think it/PRP/it will/MD/will be/VB/be different/JJ/different from/IN/from 23/CD/23 ?/./? it/PRP/it should/MD/should not/RB/not be/NNP/be. otherwise/RB/otherwise the/DT/the theorem/NN/theorem i/PRP/i am/VBP/am claiming/VBG/claiming is/VBZ/is false/NNP/false. it/PRP/it should/MD/should be/VB/be the/DT/the same/NNP/same. you/PRP/you can/MD/can count/NNP/count. it/PRP/it will/MD/will be/VB/be 23/CD/23 because/IN/because this/DT/this algorithm/NN/algorithm is/VBZ/is computing/VBG/computing the/DT/the tree/NN/tree with/IN/with the/DT/the minimum/JJ/minimum weighted/VBN/weighted external/JJ/external path/NN/path length/NNP/length. since/IN/since it/PRP/it ?/./? s/NNS/s the/DT/the minimum/JJ/minimum /,/, it/PRP/it can/MD/can not/RB/not be/VB/be smaller/JJR/smaller or/CC/or larger/JJR/larger than/IN/than the/DT/the other/JJ/other one/CD/one because/IN/because they/PRP/they are/VBP/are both/DT/both the/DT/the minimum/NNP/minimum. so/RB/so we/PRP/we now/RB/now need/VBP/need to/TO/to argue/VB/argue correctness/NNP/correctness. why/WRB/why is/VBZ/is this/DT/this computing/NN/computing the/DT/the minimum/JJ/minimum ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time 27/CD/27 /:/: 40/CD/40 /CD/) why/WRB/why does/VBZ/does this/DT/this algorithm/NN/algorithm compute/NN/compute a/DT/a tree/NN/tree with/IN/with the/DT/the minimum/JJ/minimum weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length ?/./? so/RB/so there/RB/there ?/./? s/NNS/s no/DT/no reason/NN/reason to/TO/to believe/VB/believe its/PRP$/its too/RB/too simple/JJ/simple to/TO/to do/VB/do anything/NN/anything useful/NNP/useful. let/NN/let us/PRP/us see/VBP/see what/WP/what the/DT/the argument/NN/argument for/IN/for this/DT/this one/CD/one is/NNP/is. we/PRP/we will/MD/will be/VB/be proving/VBG/proving it/PRP/it by/IN/by using/VBG/using induction/NN/induction on/IN/on the/DT/the number/NN/number of/IN/of leaves/NNS/leaves which/WDT/which is/VBZ/is same/JJ/same as/IN/as the/DT/the number/NN/number of/IN/of characters/NNP/characters. suppose/NN/suppose i/PRP/i gave/VBD/gave you/PRP/you only/RB/only two/CD/two leaves/NNS/leaves /,/, then/RB/then what/WP/what is/VBZ/is the/DT/the algorithm/NN/algorithm going/VBG/going to/TO/to do/VB/do ?/./? it/PRP/it will/MD/will just/RB/just combine/VB/combine them/PRP/them into/IN/into one/CD/one and/CC/and so/RB/so it/PRP/it will/MD/will basically/RB/basically give/VB/give you/PRP/you a/DT/a tree/NN/tree with/IN/with the/DT/the three/CD/three nodes/NNS/nodes /,/, one/CD/one root/NNP/root. this/DT/this will/MD/will be/VB/be 0/-NONE-/0 and/CC/and this/DT/this will/MD/will be/VB/be 1/CD/1 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 54/CD/54 /CD/) and/CC/and this/DT/this will/MD/will be/VB/be something/NN/something and/CC/and this/DT/this will/MD/will be/VB/be something/NN/something and/CC/and clearly/RB/clearly it/PRP/it ?/./? s/NNS/s using/VBG/using 1/CD/1 bit/NN/bit for/IN/for each/DT/each of/IN/of the/DT/the character/NN/character /,/, you/PRP/you can/MD/can not/RB/not do/VB/do better/NNP/better. you/PRP/you can/MD/can not/RB/not take/VB/take 0/-NONE-/0 bits/NNS/bits for/IN/for a/DT/a character/NNP/character. so/RB/so it/PRP/it ?/./? s/NNS/s true/JJ/true when/WRB/when you/PRP/you have/VBP/have only/RB/only two/CD/two leaves/NNP/leaves. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume the/DT/the claim/NN/claim is/VBZ/is true/JJ/true when/WRB/when you/PRP/you have/VBP/have /:/( n/NN/n -1/-NONE-/-1 /./) characters/NNS/characters or/CC/or leaves/NNS/leaves and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to show/VB/show that/IN/that it/PRP/it ?/./? s/NNS/s going/VBG/going to/TO/to be/VB/be true/JJ/true when/WRB/when you/PRP/you have/VBP/have ?/./? n/NN/n ?/./? characters/NNS/characters or/CC/or leaves/NNP/leaves. so/RB/so when/WRB/when we/PRP/we have/VBP/have ?/./? n/NN/n ?/./? characters/NNS/characters /,/, what/WP/what are/VBP/are we/PRP/we doing/VBG/doing at/IN/at the/DT/the very/RB/very first/JJ/first step/NN/step ?/./? we/PRP/we are/VBP/are taking/VBG/taking the/DT/the two/CD/two characters/NNS/characters with/IN/with the/DT/the smallest/JJS/smallest frequencies/NNS/frequencies and/CC/and combining/VBG/combining them/PRP/them into/IN/into one/NNP/one. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 29/CD/29 /:/: 22/CD/22 /CD/) we/PRP/we are/VBP/are taking/VBG/taking the/DT/the two/CD/two characters/NNS/characters frequencies/NNS/frequencies f1/NNP/f1 and/CC/and f/NN/f 2/CD/2 and/CC/and we/PRP/we are/VBP/are replacing/VBG/replacing it/PRP/it with/IN/with one/CD/one node/NN/node of/IN/of weight/NN/weight f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2. it/PRP/it ?/./? s/NNS/s as/IN/as if/IN/if you/PRP/you have/VBP/have one/CD/one character/NN/character now/RB/now of/IN/of frequency/NN/frequency /:/( f1/NNP/f1 +/:/+ f2/NNP/f2 /:/) /./. so/RB/so once/RB/once it/PRP/it does/VBZ/does that/IN/that /,/, beyond/IN/beyond this/DT/this point/NN/point the/DT/the behavior/NN/behavior is/VBZ/is as/IN/as if/IN/if it/PRP/it was/VBD/was given/VBN/given /-NONE-/( n-1/-NONE-/n-1 /:/) characters/NNS/characters with/IN/with frequencies/NNS/frequencies as/IN/as f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2 /,/, f3/NNP/f3 /,/, f/NN/f 4/CD/4 /,/, f5/NNP/f5 upto/NN/upto fn/NNP/fn. beyond/IN/beyond that/DT/that the/DT/the point/NN/point it/PRP/it ?/./? s/NNS/s the/DT/the same/JJ/same behavior/NNP/behavior. so/IN/so beyond/IN/beyond the/DT/the point/NN/point the/DT/the algorithm/NN/algorithm behaves/VBZ/behaves as/IN/as if/IN/if it/PRP/it had/VBD/had only/RB/only /CD/( n-1/-NONE-/n-1 /:/) characters/NNS/characters with/IN/with frequencies/NNS/frequencies f1/NNP/f1 +/NNP/+ f2/NNP/f2 /,/, f3/NNP/f3 all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to fn/NNP/fn. using/NN/using our/PRP$/our induction/NN/induction hypothesis/NN/hypothesis it/PRP/it would/MD/would have/VB/have computed/VBN/computed the/DT/the best/JJS/best possible/JJ/possible tree/NN/tree because/IN/because these/DT/these are/VBP/are only/RB/only /:/( n-1/-NONE-/n-1 /:/) characters/NNS/characters now/RB/now and/CC/and it/PRP/it would/MD/would have/VB/have computed/VBN/computed a/DT/a tree/NN/tree on/IN/on these/DT/these /NNP/( n-1/-NONE-/n-1 /:/) characters/NNS/characters with/IN/with total/JJ/total weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length as/IN/as this/DT/this quantity/NNP/quantity. this/DT/this was/VBD/was the/DT/the minimum/JJ/minimum quantity/NNP/quantity. this/DT/this was/VBD/was the/DT/the notation/NN/notation we/PRP/we used/VBD/used for/IN/for the/DT/the minimum/NNP/minimum. the/DT/the tree/NN/tree computed/VBD/computed by/IN/by this/DT/this algorithm/NN/algorithm has/VBZ/has weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length f1/NNP/f1 +/NNP/+ f2/NNP/f2 +/NNP/+ this/DT/this quantity/NN/quantity /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 02/CD/02 /CD/) /./. this/DT/this is/VBZ/is what/WP/what our/PRP$/our algorithm/NN/algorithm has/VBZ/has computed/NNP/computed. this/DT/this is/VBZ/is the/DT/the weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length computed/VBD/computed by/IN/by this/DT/this huffmen/NNS/huffmen ?/./? s/NNS/s algorithm/NNP/algorithm. now/RB/now we/PRP/we have/VBP/have to/TO/to argue/VB/argue that/IN/that this/DT/this is/VBZ/is the/DT/the minimum/JJ/minimum possible/NNP/possible. it/PRP/it will/MD/will not/RB/not go/VB/go lesser/NN/lesser than/IN/than this/NNP/this. what/WP/what we/PRP/we will/MD/will argue/VB/argue is/VBZ/is that/IN/that the/DT/the best/JJS/best solutions/NNS/solutions for/IN/for f1/NNP/f1 through/IN/through f/NN/f n/NN/n equals/NNS/equals f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2 +/CD/+ exactly/RB/exactly the/DT/the quantity/NN/quantity that/IN/that the/DT/the algorithm/NN/algorithm had/VBD/had computed/NNP/computed. we/PRP/we will/MD/will argue/VB/argue this/DT/this now/NNP/now. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 32/CD/32 /:/: 56/CD/56 /CD/) this/DT/this quantity/NN/quantity that/IN/that algorithm/NN/algorithm has/VBZ/has computed/VBN/computed is/VBZ/is actually/RB/actually the/DT/the best/NNP/best. it/PRP/it is/VBZ/is the/DT/the minimum/JJ/minimum weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length when/WRB/when your/PRP$/your weights/NNS/weights are/VBP/are from/IN/from f1/NNP/f1 through/IN/through fn/NNP/fn. how/WRB/how do/VBP/do we/PRP/we argue/VBP/argue this/DT/this ?/./? this/DT/this will/MD/will follow/VB/follow from/IN/from the/DT/the fact/NN/fact that/IN/that in/IN/in the/DT/the optimum/NN/optimum tree/NN/tree /,/, by/IN/by optimum/NN/optimum tree/NN/tree i/PRP/i mean/VBP/mean that/IN/that tree/JJ/tree whose/WP$/whose weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length is/VBZ/is minimum/NNP/minimum. so/RB/so let/VB/let ?/./? s/NNS/s prove/VBP/prove this/DT/this fact/NNP/fact. suppose/NN/suppose this/DT/this factor/NN/factor is/VBZ/is true/JJ/true /,/, how/WRB/how does/VBZ/does this/DT/this implies/NNS/implies this/DT/this ?/./? why/WRB/why does/VBZ/does this/DT/this imply/NN/imply ?/./? let/NN/let ?/./? s/NNS/s do/VBP/do one/CD/one step/VB/step at/IN/at a/DT/a time/NNP/time. suppose/NN/suppose had/VBD/had proved/VBN/proved this/DT/this factor/NN/factor that/IN/that in/IN/in the/DT/the best/JJS/best possible/JJ/possible tree/NN/tree suppose/NN/suppose we/PRP/we had/VBD/had prove/VBP/prove that/IN/that in/IN/in the/DT/the best/JJS/best possible/JJ/possible tree/NN/tree that/WDT/that two/CD/two lowest/JJS/lowest weights/NNS/weights are/VBP/are siblings/NNP/siblings. we/PRP/we will/MD/will do/VB/do that/DT/that in/IN/in a/DT/a slightly/RB/slightly more/RBR/more formal/JJ/formal way/NNP/way. let/NN/let ?/./? s/NNS/s assume/VBP/assume that/IN/that the/DT/the two/CD/two minimum/JJ/minimum are/VBP/are always/RB/always siblings/NNP/siblings. let/VB/let ?/./? s/NNS/s argue/VBP/argue that/IN/that if/IN/if this/DT/this is/VBZ/is true/JJ/true /,/, then/RB/then it/PRP/it will/MD/will imply/RB/imply this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 18/CD/18 /CD/) /./. we/PRP/we have/VBP/have our/PRP$/our best/JJS/best possible/JJ/possible tree/NN/tree and/CC/and the/DT/the minimum/JJ/minimum are/VBP/are siblings/NNP/siblings. why/WRB/why does/VBZ/does it/PRP/it imply/RB/imply that/IN/that we/PRP/we found/VBD/found the/DT/the best/JJS/best >/:/> that/DT/that ?/./? s/NNS/s because/IN/because it/PRP/it implies/VBZ/implies the/DT/the best/JJS/best over/IN/over f1/NNP/f1 through/IN/through f/NN/f n/NN/n equals/NNS/equals this/NNP/this. this/DT/this is/VBZ/is the/DT/the best/JJS/best tree/NNP/tree. we/PRP/we are/VBP/are going/VBG/going from/IN/from here/RB/here to/TO/to here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 28/CD/28 /CD/) which/WDT/which means/VBZ/means that/DT/that we/PRP/we have/VBP/have assumed/VBN/assumed this/DT/this statement/NN/statement and/CC/and we/PRP/we are/VBP/are proving/VBG/proving that/IN/that the/DT/the best/JJS/best tree/NN/tree over/IN/over f1/NNP/f1 through/IN/through f/NN/f n/NN/n has/VBZ/has weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length equal/JJ/equal to/TO/to f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2 +/CD/+ the/DT/the weighted/JJ/weighted external/JJ/external path/NN/path length/NN/length of/IN/of the/DT/the best/JJS/best tree/NN/tree over/IN/over f1/NNP/f1 +/:/+ f2/NNP/f2 through/IN/through fn/NNP/fn. so/RB/so now/RB/now we/PRP/we are/VBP/are kind/JJ/kind of/IN/of trying/VBG/trying to/TO/to mimic/JJ/mimic what/WP/what we/PRP/we have/VBP/have already/RB/already done/NNP/done. let/VB/let me/PRP/me now/RB/now look/VBP/look at/IN/at this/DT/this tree/NNP/tree. now/RB/now i/PRP/i am/VBP/am just/RB/just looking/VBG/looking at/IN/at the/DT/the remaining/VBG/remaining tree/NNP/tree. this/DT/this is/VBZ/is a/DT/a tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 08/CD/08 /CD/) and/CC/and let/VB/let me/PRP/me give/VB/give this/DT/this node/NN/node weight/NN/weight equal/JJ/equal to/TO/to f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2. now/RB/now this/DT/this is/VBZ/is the/DT/the tree/NN/tree over/IN/over leaves/NNS/leaves f1/NNP/f1 +/NNP/+ f2/NNP/f2 /,/, f/NN/f 3/LS/3 up/IN/up to/TO/to fn/NNP/fn. what/WP/what will/MD/will its/PRP$/its minimum/JJ/minimum weighted/JJ/weighted external/JJ/external path/NN/path length/NN/length become/NN/become ?/./? if/IN/if this/DT/this is/VBZ/is the/DT/the best/JJS/best tree/NN/tree for/IN/for the/DT/the entire/JJ/entire thing/NN/thing /,/, for/IN/for these/DT/these values/NNS/values or/CC/or leaves/NNS/leaves /,/, this/DT/this should/MD/should be/VB/be the/DT/the best/JJS/best tree/NNP/tree. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at the/DT/the best/JJS/best tree/NN/tree for/IN/for f1/NNP/f1 through/IN/through fn/NNP/fn. i/PRP/i am/VBP/am saying/VBG/saying the/DT/the following/NNP/following. let/NN/let ?/./? s/NNS/s cut/VBD/cut off/RP/off the/DT/the two/CD/two leaves/NNS/leaves and/CC/and just/RB/just keep/VB/keep that/NNP/that. let/VB/let ?/./? s/NNS/s give/VBP/give this/DT/this a/DT/a name/NN/name of/IN/of f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2. then/RB/then this/DT/this tree/NN/tree is/VBZ/is the/DT/the best/JJS/best tree/NN/tree for/IN/for these/DT/these choice/NN/choice of/IN/of weights/NNS/weights also/NNP/also. suppose/NN/suppose there/RB/there was/VBD/was something/NN/something smaller/JJR/smaller possible/JJ/possible /,/, then/RB/then this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 21/CD/21 /CD/) blue/JJ/blue would/MD/would not/RB/not have/VB/have been/VBN/been and/CC/and best/JJS/best tree/NN/tree for/IN/for these/DT/these guys/NNP/guys. the/DT/the best/JJS/best would/MD/would be/VB/be a/DT/a green/JJ/green tree/NNP/tree. so/RB/so suppose/RB/suppose the/DT/the black/JJ/black tree/NN/tree was/VBD/was the/DT/the best/JJS/best /,/, better/RBR/better than/IN/than this/DT/this red/NN/red one/NNP/one. /NNP/( hindi/NN/hindi /:/) this/DT/this tree/NN/tree is/VBZ/is the/DT/the best/JJS/best possible/JJ/possible tree/NN/tree when/WRB/when you/PRP/you have/VBP/have leaves/NNS/leaves with/IN/with weights/NNS/weights f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2 /,/, f3/NNP/f3 /,/, f4/NNP/f4 /,/, f5/NNP/f5 /,/, f6/NNP/f6. this/DT/this is/VBZ/is the/DT/the best/JJS/best possible/JJ/possible tree/NNP/tree. so/RB/so this/DT/this red/VBN/red weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length is/VBZ/is this/DT/this quantity/NN/quantity then/RB/then and/CC/and so/RB/so blue/JJ/blue total/JJ/total external/JJ/external path/NN/path length/NN/length is/VBZ/is red/VBN/red external/JJ/external path/NN/path length/NN/length +/:/+ f1/NNP/f1 +/:/+ f/NN/f 2/CD/2. /CD/( refer/NN/refer slide/NN/slide time/NN/time 40/CD/40 /:/: 51/CD/51 /CD/) so/RB/so which/WDT/which means/VBZ/means blue/JJ/blue weighted/VBN/weighted external/JJ/external path/NN/path length/NN/length which/WDT/which is/VBZ/is this/DT/this leaf/NN/leaf is/VBZ/is equal/JJ/equal to/TO/to this/DT/this leaf/NN/leaf which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to the/DT/the best/JJS/best possible/JJ/possible /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 28/CD/28 /CD/) /./. what/WP/what did/VBD/did we/PRP/we get/VBP/get in/IN/in our/PRP$/our previous/JJ/previous algorithm/NN/algorithm ?/./? we/PRP/we got/VBD/got the/DT/the right/NN/right hand/NN/hand side/NN/side exactly/NNP/exactly. so/RB/so the/DT/the algorithm/NN/algorithm is/VBZ/is completing/VBG/completing the/DT/the best/JJS/best possible/NNP/possible. if/IN/if this/DT/this black/NN/black is/VBZ/is better/RBR/better than/IN/than the/DT/the red/NN/red /,/, then/RB/then what/WP/what have/VBP/have i/PRP/i done/VBP/done ?/./? i/PRP/i have/VBP/have only/RB/only increased/VBN/increased the/DT/the black/JJ/black by/IN/by a/DT/a quantity/NN/quantity equal/JJ/equal f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2 while/IN/while this/DT/this blue/NN/blue also/RB/also differs/VBZ/differs from/IN/from the/DT/the red/NN/red by/IN/by this/DT/this quantity/NN/quantity f1/NNP/f1 +/NNP/+ f/NN/f 2/CD/2. if/IN/if this/DT/this black/NN/black is/VBZ/is better/RBR/better than/IN/than this/DT/this red/NN/red /,/, then/RB/then this/DT/this bigger/NN/bigger black/NN/black is/VBZ/is also/RB/also better/RBR/better than/IN/than the/DT/the bigger/JJR/bigger blue/JJ/blue which/WDT/which violates/NNS/violates our/PRP$/our optimal/JJ/optimal case/NNP/case. but/CC/but why/WRB/why is/VBZ/is this/DT/this statement/NN/statement true/NN/true ?/./? why/WRB/why should/MD/should it/PRP/it be/VB/be the/DT/the case/NN/case that/IN/that in/IN/in the/DT/the optimum/NN/optimum tree/NN/tree /,/, the/DT/the leaves/NNS/leaves with/IN/with those/DT/those two/CD/two lowest/JJS/lowest frequencies/NNS/frequencies are/VBP/are siblings/NNS/siblings ?/./? let/NN/let ?/./? s/NNS/s take/VBP/take the/DT/the leaf/NN/leaf with/IN/with the/DT/the lowest/JJS/lowest weight/NNP/weight. it/PRP/it will/MD/will have/VB/have the/DT/the maximum/NN/maximum level/NN/level number/NNP/number. suppose/NN/suppose this/DT/this leaf/NN/leaf with/IN/with the/DT/the lowest/JJS/lowest weight/NN/weight comes/VBZ/comes in/IN/in between/IN/between and/CC/and there/EX/there is/VBZ/is another/DT/another leaf/NN/leaf with/IN/with a/DT/a higher/JJR/higher weight/NN/weight /,/, this/DT/this is/VBZ/is not/RB/not optimum/NNP/optimum. so/RB/so we/PRP/we have/VBP/have to/TO/to swap/VB/swap these/DT/these two/NNP/two. so/RB/so the/DT/the total/JJ/total external/JJ/external weighted/JJ/weighted path/NN/path length/NN/length becomes/VBZ/becomes minimum/NNP/minimum. so/RB/so the/DT/the leaf/NN/leaf with/IN/with the/DT/the smallest/JJS/smallest weight/NN/weight has/VBZ/has to/TO/to be/VB/be at/IN/at the/DT/the last/JJ/last level/NNP/level. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at its/PRP$/its parent/NN/parent and/CC/and let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at its/PRP$/its siblings/NNS/siblings which/WDT/which is/VBZ/is this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 53/CD/53 /CD/) leaf/NNP/leaf. by/IN/by the/DT/the same/JJ/same argument/NN/argument this/DT/this leaf/NN/leaf is/VBZ/is the/DT/the second/JJ/second smallest/NN/smallest weight/NN/weight because/IN/because if/IN/if it/PRP/it for/IN/for anything/NN/anything else/RB/else then/RB/then once/RB/once again/RB/again you/PRP/you can/MD/can swap/VB/swap and/CC/and reduce/NNP/reduce. so/RB/so the/DT/the leaves/NNS/leaves with/IN/with the/DT/the two/CD/two smallest/JJS/smallest weights/NNS/weights are/VBP/are actually/RB/actually at/IN/at the/DT/the very/RB/very last/JJ/last level/NNP/level. in/IN/in all/DT/all our/PRP$/our examples/NNS/examples you/PRP/you must/MD/must have/VB/have seen/VBN/seen that/IN/that happening/NNP/happening. they/PRP/they are/VBP/are all/RB/all at/IN/at the/DT/the last/JJ/last level/NN/level and/CC/and they/PRP/they are/VBP/are siblings/NNP/siblings. you/PRP/you just/RB/just use/VBP/use this/DT/this fact/NN/fact /,/, make/VBP/make them/PRP/them siblings/NNS/siblings and/CC/and then/RB/then the/DT/the problem/NN/problem reduces/NNS/reduces by/IN/by 1/CD/1 because/IN/because now/RB/now you/PRP/you have/VBP/have only/RB/only /:/( n/NN/n -1/-NONE-/-1 /./) nodes/NNP/nodes. how/WRB/how do/VBP/do we/PRP/we take/VB/take care/NN/care of/IN/of /NNP/( n/NN/n -1/-NONE-/-1 /./) nodes/NNS/nodes ?/./? it/PRP/it is/VBZ/is the/DT/the same/JJ/same way/NN/way we/PRP/we took/VBD/took care/NN/care of/IN/of them/NNP/them. once/RB/once again/RB/again you/PRP/you take/VBP/take the/DT/the two/CD/two smallest/JJS/smallest ones/NNS/ones /,/, make/VBP/make them/PRP/them siblings/NNS/siblings and/CC/and continue/NNP/continue. so/RB/so just/RB/just this/DT/this one/CD/one property/NN/property being/VBG/being exploited/VBN/exploited in/IN/in this/DT/this algorithm/NNP/algorithm. we/PRP/we got/VBD/got the/DT/the very/JJ/very simple/NN/simple algorithm/NN/algorithm to/TO/to compute/VB/compute the/DT/the best/JJS/best possible/JJ/possible trap/NNP/trap. so/RB/so with/IN/with that/DT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to stop/VB/stop today/NN/today ?/./? s/NNS/s class/NNP/class. after/IN/after we/PRP/we have/VBP/have done/VBN/done priority/NN/priority queues/NNS/queues /,/, we/PRP/we are/VBP/are we/PRP/we are/VBP/are going/VBG/going to/TO/to analyze/VB/analyze these/DT/these particular/JJ/particular algorithm/NN/algorithm to/TO/to compute/VB/compute its/PRP$/its running/NN/running time/NNP/time. so/RB/so i/PRP/i ?/./? m/NN/m leaving/VBG/leaving the/DT/the bit/NN/bit about/IN/about computing/VBG/computing its/PRP$/its running/VBG/running time/NN/time today/NN/today and/CC/and i/PRP/i will/MD/will take/VB/take it/PRP/it up/RP/up after/IN/after we/PRP/we have/VBP/have developed/VBN/developed the/DT/the notion/NN/notion of/IN/of paradigms/NNP/paradigms. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 20/CD/20 priority/NN/priority queues/NNS/queues today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the priority/NN/priority queue/NN/queue abstract/NN/abstract data/NNS/data type/NNP/type. i/PRP/i am/VBP/am going/VBG/going to/TO/to motivate/VB/motivate it/PRP/it with/IN/with the/DT/the scheduling/VBG/scheduling example/NN/example then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at what/WP/what the/DT/the data/NNS/data type/NN/type is/VBZ/is /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to implement/VB/implement the/DT/the priority/NN/priority queue/NN/queue with/IN/with the/DT/the sequence/NN/sequence then/RB/then the/DT/the key/JJ/key thing/NN/thing today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is to/TO/to introduce/VB/introduce the/DT/the concept/NN/concept of/IN/of binary/JJ/binary heap/NNP/heap. we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to do/VB/do procedures/NNS/procedures for/IN/for insertion/NN/insertion in/IN/in a/DT/a heap/NN/heap and/CC/and procedure/NN/procedure called/VBD/called heapify/NN/heapify which/WDT/which will/MD/will be/VB/be using/VBG/using in/IN/in subsequent/NN/subsequent classes/NNS/classes to/TO/to see/VB/see how/WRB/how to/TO/to find/VB/find to/TO/to delete/VB/delete the/DT/the minimum/JJ/minimum element/NN/element in/IN/in the/DT/the binary/JJ/binary heap/NN/heap and/CC/and for/IN/for other/JJ/other operations/NNS/operations on/IN/on heap/NNP/heap. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 48/CD/48 /CD/) so/RB/so we/PRP/we have/VBP/have a/DT/a multi/NN/multi user/NN/user computer/NN/computer system/NN/system /,/, that/DT/that ?/./? s/NNS/s the/DT/the system/NN/system in/IN/in which/WDT/which there/EX/there was/VBD/was multiple/JJ/multiple users/NNS/users who/WP/who can/MD/can submit/VB/submit jobs/NNS/jobs at/IN/at different/JJ/different points/NNS/points in/IN/in time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 16/CD/16 /CD/) we/PRP/we assume/VBP/assume that/IN/that when/WRB/when a/DT/a job/NN/job arrives/VBZ/arrives /,/, we/PRP/we know/VBP/know in/IN/in advance/NN/advance how/WRB/how much/JJ/much time/NN/time the/DT/the job/NN/job is/VBZ/is going/VBG/going to/TO/to take/VB/take on/IN/on the/DT/the particular/JJ/particular system/NN/system that/WDT/that we/PRP/we have/NNP/have. further/RB/further we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that the/DT/the jobs/NNS/jobs can/MD/can get/VB/get preempted/VBN/preempted that/IN/that is/VBZ/is that/IN/that job/NN/job is/VBZ/is running/VBG/running /,/, it/PRP/it can/MD/can be/VB/be stopped/VBN/stopped some/DT/some other/JJ/other jobs/NNS/jobs can/MD/can be/VB/be schedule/JJ/schedule on/IN/on the/DT/the processors/NNS/processors and/CC/and then/RB/then later/JJ/later this/DT/this job/NN/job which/WDT/which was/VBD/was stopped/VBN/stopped can/MD/can be/VB/be resumed/NNP/resumed. one/CD/one policy/NN/policy which/WDT/which minimizes/VBZ/minimizes the/DT/the average/JJ/average waiting/NN/waiting time/NN/time of/IN/of job/NN/job is/VBZ/is what/WP/what is/VBZ/is called/VBN/called the/DT/the srpt/NNP/srpt. the/DT/the srpt/NN/srpt rule/NN/rule /,/, its/PRP$/its stands/NNS/stands for/IN/for shortest/JJS/shortest remaining/VBG/remaining processing/NN/processing time/NNP/time. what/WP/what this/DT/this policy/NN/policy says/VBZ/says is/VBZ/is that/IN/that the/DT/the processor/NN/processor schedules/NNS/schedules the/DT/the job/NN/job which/WDT/which is/VBZ/is the/DT/the smallest/JJS/smallest at/IN/at any/DT/any point/NN/point in/IN/in time/NN/time which/WDT/which has/VBZ/has smallest/JJS/smallest remaining/VBG/remaining processing/NN/processing time/NN/time at/IN/at any/DT/any point/NN/point in/IN/in time/NNP/time. so/RB/so to/TO/to begin/VB/begin with/IN/with this/DT/this processor/NN/processor has/VBZ/has the/DT/the bunch/NN/bunch of/IN/of job/NN/job /,/, it/PRP/it will/MD/will take/VB/take the/DT/the smallest/JJS/smallest job/NN/job amongst/NN/amongst that/IN/that bunch/NN/bunch and/CC/and schedule/NN/schedule it/NNP/it. may/MD/may be/VB/be the/DT/the job/NN/job finishes/VBZ/finishes then/RB/then it/PRP/it picks/VBZ/picks up/RP/up the/DT/the next/JJ/next smallest/NN/smallest jobs/NNS/jobs in/IN/in this/DT/this collection/NN/collection it/PRP/it has/VBZ/has and/CC/and schedules/NNS/schedules that/WDT/that one/CD/one but/CC/but suppose/NN/suppose you/PRP/you have/VB/have a/DT/a job/NN/job which/WDT/which is/VBZ/is running/VBG/running and/CC/and then/RB/then in/IN/in mid/NN/mid way/NN/way some/DT/some other/JJ/other job/NN/job comes/VBZ/comes in/IN/in which/WDT/which has/VBZ/has the/DT/the processing/NN/processing time/NN/time which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the remaining/VBG/remaining processing/NN/processing time/NN/time of/IN/of this/DT/this job/NN/job /,/, the/DT/the one/CD/one that/WDT/that is/VBZ/is currently/RB/currently running/NNP/running. if/IN/if such/JJ/such is/VBZ/is a/DT/a case/NN/case then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to interrupt/VB/interrupt the/DT/the currently/RB/currently running/VBG/running job/NN/job and/CC/and schedule/NN/schedule this/DT/this new/JJ/new job/NN/job that/WDT/that ?/./? s/VBZ/s given/NNP/given. this/DT/this is/VBZ/is the/DT/the setting/NN/setting in/IN/in which/WDT/which interruption/NN/interruption happens/VBZ/happens in/IN/in which/WDT/which preemption/NN/preemption happens/NNP/happens. this/DT/this is/VBZ/is just/RB/just a/DT/a motivation/NN/motivation we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be looking/VBG/looking at/IN/at this/DT/this srpt/NN/srpt rule/NN/rule any/DT/any more/RBR/more carefully/RB/carefully than/IN/than this/DT/this but/CC/but if/IN/if you/PRP/you were/VBD/were to/TO/to implement/VB/implement this/DT/this kind/NN/kind of/IN/of a/DT/a policy/NN/policy /,/, what/WP/what kind/NN/kind of/IN/of a/DT/a data/NN/data structure/NN/structure would/MD/would you/PRP/you need/VBP/need that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/NNP/at. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 02/CD/02 /CD/) first/JJ/first we/PRP/we some/DT/some how/WRB/how need/VBP/need to/TO/to maintain/VB/maintain the/DT/the remaining/VBG/remaining processing/NN/processing time/NN/time of/IN/of the/DT/the unfinished/JJ/unfinished job/NN/job /,/, jobs/NNS/jobs that/WDT/that have/VBP/have not/RB/not been/VBN/been completely/RB/completely finished/NNP/finished. they/PRP/they are/VBP/are still/RB/still with/IN/with us/PRP/us /,/, they/PRP/they still/RB/still need/VBP/need to/TO/to be/VB/be scheduled/VBN/scheduled for/IN/for some/DT/some period/NN/period of/IN/of time/NNP/time. we/PRP/we need/VBP/need to/TO/to maintain/VB/maintain that/IN/that collection/NNP/collection. amongst/NN/amongst these/DT/these set/NN/set of/IN/of jobs/NNS/jobs /,/, we/PRP/we need/VBP/need to/TO/to find/VB/find out/RP/out the/DT/the one/CD/one which/WDT/which has/VBZ/has the/DT/the shortest/JJS/shortest remaining/VBG/remaining processing/NN/processing time/NN/time because/IN/because we/PRP/we need/VBP/need that/IN/that so/RB/so that/IN/that according/VBG/according we/PRP/we can/MD/can schedule/VB/schedule the/DT/the job/NN/job according/VBG/according to/TO/to the/DT/the rule/NN/rule that/IN/that we/PRP/we are/VBP/are following/NNP/following. when/WRB/when a/DT/a finishes/VBZ/finishes we/PRP/we would/MD/would like/VB/like to/TO/to remove/VB/remove it/PRP/it from/IN/from this/DT/this collection/NN/collection and/CC/and when/WRB/when a/DT/a new/JJ/new job/NN/job arrives/NNS/arrives we/PRP/we would/MD/would like/VB/like to/TO/to add/VB/add it/PRP/it to/TO/to this/DT/this collection/NNP/collection. these/DT/these are/VBP/are the/DT/the kind/NN/kind of/IN/of operations/NNS/operations that/WDT/that we/PRP/we need/VBP/need to/TO/to do/VB/do on/IN/on our/PRP$/our data/NNS/data structures/NNS/structures to/TO/to be/VB/be able/JJ/able to/TO/to implement/NN/implement the/DT/the srpt/NN/srpt policies/NNP/policies. one/CD/one data/NNS/data type/NN/type which/WDT/which will/MD/will let/VB/let us/PRP/us do/VBP/do all/DT/all of/IN/of this/DT/this /,/, what/WP/what ?/./? s/NNS/s called/VBN/called the/DT/the priority/NN/priority queues/NNP/queues. it/PRP/it is/VBZ/is data/NNS/data type/NN/type to/TO/to maintain/VB/maintain a/DT/a set/NN/set of/IN/of elements/NNS/elements each/DT/each of/IN/of which/WDT/which has/VBZ/has an/DT/an associated/VBN/associated priority/NNP/priority. the/DT/the priority/NN/priority queue/NN/queue data/NNS/data type/NN/type supports/NNS/supports the/DT/the following/VBG/following operations/NNP/operations. the/DT/the first/JJ/first operation/NN/operation is/VBZ/is one/CD/one of/IN/of inserting/NN/inserting an/DT/an element/NNP/element. the/DT/the x/NN/x is/VBZ/is an/DT/an element/NN/element /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to insert/VB/insert it/PRP/it to/TO/to our/PRP$/our collection/NN/collection s/NNS/s /,/, so/RB/so that/IN/that new/JJ/new collection/NN/collection is/VBZ/is now/RB/now going/VBG/going to/TO/to be/VB/be s/NNS/s union/NN/union x/NNP/x. of/IN/of course/NN/course this/DT/this element/NN/element has/VBZ/has certain/JJ/certain priority/NNP/priority. when/WRB/when we/PRP/we are/VBP/are inserting/VBG/inserting the/DT/the element/NN/element /,/, we/PRP/we will/MD/will also/RB/also have/VB/have to/TO/to take/VB/take care/NN/care of/IN/of the/DT/the priority/NN/priority of/IN/of that/DT/that element/NNP/element. the/DT/the minimum/JJ/minimum operation/NN/operation returns/NNS/returns the/DT/the element/NN/element of/IN/of s/NNS/s with/IN/with this/DT/this smallest/NN/smallest priority/NNP/priority. priority/NN/priority perhaps/RB/perhaps is/VBZ/is not/RB/not the/DT/the best/JJS/best word/NN/word here/RB/here because/IN/because when/WRB/when you/PRP/you say/VBP/say each/DT/each element/NN/element has/VBZ/has a/DT/a priority/NN/priority /,/, you/PRP/you would/MD/would like/VB/like to/TO/to say/VB/say that/IN/that you/PRP/you would/MD/would like/VB/like to/TO/to get/VB/get the/DT/the element/NN/element of/IN/of the/DT/the largest/JJS/largest priority/NNP/priority. it/PRP/it ?/./? s/NNS/s a/DT/a bit/NN/bit of/IN/of misnomer/NN/misnomer here/RB/here but/CC/but that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we will/MD/will work/VB/work with/IN/with /,/, so/RB/so in/IN/in the/DT/the scheduling/NN/scheduling example/NN/example it/PRP/it made/VBD/made sense/NN/sense to/TO/to remove/VB/remove the/DT/the one/CD/one with/IN/with the/DT/the minimum/JJ/minimum processing/NN/processing time/NN/time remaining/NNP/remaining. we/PRP/we will/MD/will continue/VB/continue with/IN/with the/DT/the minimum/JJ/minimum /,/, the/DT/the priority/NN/priority really/RB/really is/VBZ/is the/DT/the misnomer/NN/misnomer here/RB/here and/CC/and then/RB/then we/PRP/we have/VBP/have the/DT/the delete/JJ/delete min/NN/min operation/NNP/operation. the/DT/the delete/JJ/delete main/NN/main operation/NN/operation returns/NNS/returns the/DT/the element/NN/element with/IN/with the/DT/the minimum/JJ/minimum priority/NN/priority and/CC/and also/RB/also removes/VBZ/removes it/PRP/it from/IN/from the/DT/the collection/NNP/collection. the/DT/the way/NN/way minimum/NN/minimum and/CC/and delete/JJ/delete min/NN/min differs/NNS/differs is/VBZ/is that/IN/that while/IN/while minimum/JJ/minimum only/RB/only returns/VBZ/returns the/DT/the minimum/JJ/minimum element/NN/element it/PRP/it doesn/VBP/doesn ?/./? t/NN/t delete/NN/delete it/PRP/it from/IN/from the/DT/the collection/NN/collection /,/, delete/JJ/delete min/NN/min also/RB/also deletes/VBZ/deletes it/PRP/it from/IN/from collection/NNP/collection. these/DT/these are/VBP/are the/DT/the three/CD/three basic/JJ/basic operations/NNS/operations that/WDT/that the/DT/the priority/NN/priority queue/NN/queue is/VBZ/is supposed/VBN/supposed to/TO/to support/NNP/support. of/IN/of course/NN/course there/EX/there could/MD/could be/VB/be many/JJ/many other/JJ/other operations/NNS/operations /,/, like/IN/like for/IN/for all/PDT/all other/JJ/other container/NN/container classes/NNS/classes that/WDT/that we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/RB/far we/PRP/we have/VBP/have seen/VBN/seen methods/NNS/methods like/IN/like is/VBZ/is empty/JJ/empty /,/, is/VBZ/is size/NN/size and/CC/and so/RB/so on/IN/on or/CC/or size/NN/size /,/, is/VBZ/is empty/JJ/empty and/CC/and so/RB/so on/NNP/on. one/CD/one thing/NN/thing that/WDT/that we/PRP/we require/VBP/require on/IN/on the/DT/the priorities/NNS/priorities is/VBZ/is a/DT/a total/NN/total order/NN/order /,/, let/VB/let me/PRP/me come/VB/come to/TO/to that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 11/CD/11 /CD/) recall/NN/recall the/DT/the priority/NN/priority queue/NN/queue ranks/NNS/ranks its/PRP$/its element/NN/element by/IN/by priority/NNP/priority. every/DT/every element/NN/element has/VBZ/has a/DT/a priority/NN/priority /,/, priority/NN/priority need/VBP/need not/RB/not necessarily/RB/necessarily be/VB/be unique/JJ/unique but/CC/but they/PRP/they are/VBP/are totally/RB/totally ordered/NNP/ordered. that/IN/that is/VBZ/is given/VBN/given two/CD/two priorities/NNS/priorities i/PRP/i can/MD/can compare/VB/compare them/PRP/them /,/, i/PRP/i can/MD/can decide/VB/decide whether/IN/whether one/CD/one is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the other/JJ/other or/CC/or larger/JJR/larger than/IN/than the/DT/the other/JJ/other or/CC/or they/PRP/they are/VBP/are both/DT/both equal/NNP/equal. there/RB/there is/VBZ/is the/DT/the total/JJ/total order/NN/order which/WDT/which will/MD/will lets/NNS/lets say/VB/say denote/NN/denote by/IN/by less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to on/IN/on the/DT/the priorities/NNP/priorities. these/DT/these priorities/NNS/priorities need/VBP/need not/RB/not be/VB/be integer/JJR/integer /,/, they/PRP/they could/MD/could be/VB/be anything/NN/anything at/IN/at all/DT/all but/CC/but there/EX/there is/VBZ/is definitely/RB/definitely some/DT/some kind/NN/kind of/IN/of a/DT/a total/JJ/total order/NN/order on/IN/on these/DT/these priorities/NNP/priorities. in/IN/in particular/JJ/particular this/DT/this relation/NN/relation less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to is/VBZ/is reflexive/JJ/reflexive that/IN/that is/VBZ/is priority/NN/priority k/NN/k is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k/NNP/k. it/PRP/it is/VBZ/is antisymmetric/JJ/antisymmetric which/WDT/which means/VBZ/means that/DT/that if/IN/if k1/NNP/k1 is/VBZ/is less/JJR/less than/IN/than k2/NNP/k2 and/CC/and k2/NNP/k2 is/VBZ/is less/JJR/less than/IN/than k1/NNP/k1 then/RB/then k1/NNP/k1 is/VBZ/is also/RB/also less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k2/NNP/k2. the/DT/the k1/NNP/k1 is/VBZ/is equal/JJ/equal to/TO/to k2/NNP/k2 /,/, this/DT/this is/VBZ/is the/DT/the error/NN/error here/RB/here and/CC/and k1/NNP/k1 k2/NNP/k2 should/MD/should be/VB/be the/DT/the same/JJ/same and/CC/and its/PRP$/its transitive/NNP/transitive. if/IN/if k1/NNP/k1 is/VBZ/is less/JJR/less than/IN/than k2/NNP/k2 and/CC/and k2/NNP/k2 is/VBZ/is less/JJR/less than/IN/than k/NN/k three/CD/three then/RB/then k1/NNP/k1 less/NN/less than/IN/than k3/NNP/k3. these/DT/these are/VBP/are the/DT/the properties/NNS/properties of/IN/of total/JJ/total order/NN/order relation/NN/relation and/CC/and we/PRP/we will/MD/will assume/VB/assume that/IN/that the/DT/the priorities/NNS/priorities that/WDT/that we/PRP/we have/VBP/have satisfies/NNS/satisfies the/DT/the total/JJ/total order/NN/order deletion/NNP/deletion. the/DT/the most/RBS/most general/JJ/general and/CC/and reusable/JJ/reusable form/NN/form of/IN/of priority/NN/priority queue/NN/queue uses/NNS/uses comparator/NN/comparator objects/NNP/objects. what/WP/what do/VBP/do i/PRP/i means/VBZ/means by/IN/by this/DT/this ?/./? recall/NN/recall that/IN/that we/PRP/we said/VBD/said that/IN/that in/IN/in a/DT/a priority/NN/priority queue/NN/queue /,/, each/DT/each element/NN/element has/VBZ/has priority/NN/priority associated/VBN/associated with/IN/with it/PRP/it and/CC/and the/DT/the priorities/NNS/priorities there/RB/there is/VBZ/is a/DT/a total/NN/total order/NN/order on/IN/on the/DT/the priorities/NNP/priorities. if/IN/if i/PRP/i want/VBP/want to/TO/to put/VB/put any/DT/any kind/NN/kind of/IN/of an/DT/an object/NN/object in/IN/in to/TO/to my/PRP$/my priority/NN/priority queue/NN/queue /,/, i/PRP/i should/MD/should have/VB/have a/DT/a mechanism/NN/mechanism of/IN/of comparing/VBG/comparing the/DT/the priorities/NNS/priorities of/IN/of the/DT/the objects/NNS/objects in/IN/in the/DT/the queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 05/CD/05 /CD/) we/PRP/we can/MD/can have/VB/have such/PDT/such a/DT/a comparator/NN/comparator object/NN/object which/WDT/which will/MD/will help/VB/help us/PRP/us to/TO/to do/VB/do this/DT/this comparison/NNP/comparison. so/RB/so that/IN/that comparator/NN/comparator object/NN/object all/DT/all it/PRP/it does/VBZ/does is/VBZ/is it/PRP/it specifies/VBZ/specifies the/DT/the methods/NNS/methods which/WDT/which will/MD/will help/VB/help us/PRP/us compare/VB/compare to/TO/to priorities/NNP/priorities. in/IN/in this/DT/this manner/NN/manner we/PRP/we can/MD/can ensure/VB/ensure that/IN/that our/PRP$/our priority/NN/priority queue/NN/queue that/WDT/that we/PRP/we would/MD/would have/VB/have one/CD/one implementation/NN/implementation of/IN/of priority/NN/priority queue/NN/queue and/CC/and we/PRP/we can/MD/can use/VB/use same/JJ/same implementation/NN/implementation to/TO/to store/VB/store any/DT/any kind/NN/kind of/IN/of object/NN/object because/IN/because we/PRP/we would/MD/would also/RB/also specify/VB/specify this/DT/this comparator/NN/comparator object/NN/object which/WDT/which would/MD/would help/VB/help us/PRP/us compare/VB/compare the/DT/the priorities/NNS/priorities of/IN/of any/DT/any two/CD/two object/JJ/object that/IN/that we/PRP/we decide/VBP/decide to/TO/to put/VB/put in/RP/in the/DT/the collection/NNP/collection. the/DT/the comparator/NN/comparator abstract/NN/abstract data/NNS/data type/NN/type would/MD/would include/VB/include methods/NNS/methods like/IN/like is/VBZ/is less/JJR/less than/IN/than /,/, is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to /,/, is/VBZ/is equal/JJ/equal to/TO/to /,/, is/VBZ/is greater/JJR/greater than/IN/than /,/, is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to and/CC/and whether/IN/whether it/PRP/it is/VBZ/is comparable/JJ/comparable or/CC/or not/NNP/not. let/NN/let ?/./? s/NNS/s first/RB/first look/VBP/look at/IN/at an/DT/an implementation/NN/implementation of/IN/of priority/NN/priority queue/NN/queue using/VBG/using an/DT/an unsorted/JJ/unsorted sequence/NNP/sequence. recall/NN/recall the/DT/the items/NNS/items that/WDT/that we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert in/IN/in to/TO/to our/PRP$/our sequence/NN/sequence or/CC/or pairs/NNS/pairs of/IN/of priority/NN/priority and/CC/and our/PRP$/our element/NNP/element. we/PRP/we can/MD/can implement/VB/implement the/DT/the insert/NN/insert by/IN/by using/VBG/using just/RB/just say/VBP/say insert/NN/insert last/NNP/last. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 03/CD/03 /CD/) the/DT/the insert/NN/insert operation/NN/operation of/IN/of the/DT/the priority/NN/priority queue/NN/queue /,/, to/TO/to do/VB/do this/DT/this we/PRP/we will/MD/will just/RB/just insert/VB/insert the/DT/the element/NN/element that/IN/that is/VBZ/is the/DT/the item/NN/item at/IN/at the/DT/the very/RB/very end/NN/end of/IN/of our/PRP$/our sequence/NNP/sequence. in/IN/in this/DT/this case/NN/case six/CD/six was/VBD/was the/DT/the element/NN/element that/IN/that was/VBD/was to/TO/to be/VB/be inserted/NNP/inserted. let/VB/let ?/./? s/NNS/s say/VBP/say we/PRP/we went/VBD/went and/CC/and put/VBD/put it/PRP/it at/IN/at the/DT/the very/RB/very end/NNP/end. this/DT/this takes/VBZ/takes only/RB/only the/DT/the constant/NN/constant amount/NN/amount of/IN/of time/NN/time but/CC/but if/IN/if i/PRP/i do/VBP/do such/JJ/such a/DT/a thing/NN/thing /,/, if/IN/if we/PRP/we always/RB/always insert/VBP/insert at/IN/at the/DT/the end/NN/end irrespective/NN/irrespective of/IN/of the/DT/the value/NN/value of/IN/of the/DT/the priority/NN/priority then/RB/then our/PRP$/our sequence/NN/sequence is/VBZ/is not/RB/not ordered/VBN/ordered any/DT/any more/NNP/more. since/IN/since it/PRP/it is/VBZ/is not/RB/not ordered/VBN/ordered according/VBG/according to/TO/to the/DT/the priorities/NNS/priorities /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have problems/NNS/problems when/WRB/when we/PRP/we are/VBP/are trying/VBG/trying to/TO/to find/VB/find a/DT/a minimum/JJ/minimum or/CC/or when/WRB/when we/PRP/we are/VBP/are trying/VBG/trying to/TO/to delete/VB/delete the/DT/the minimum/JJ/minimum element/NN/element /,/, the/DT/the element/NN/element with/IN/with the/DT/the minimum/JJ/minimum priority/NN/priority from/IN/from this/DT/this collection/NNP/collection. in/IN/in that/DT/that case/NN/case we/PRP/we will/MD/will have/VB/have to/TO/to look/VB/look at/IN/at all/DT/all the/DT/the elements/NNS/elements of/IN/of these/DT/these sequences/NNP/sequences. for/IN/for instance/NN/instance if/IN/if i/PRP/i have/VBP/have to/TO/to find/VB/find the/DT/the minimum/JJ/minimum then/RB/then i/PRP/i would/MD/would have/VB/have to/TO/to start/VB/start right/RB/right from/IN/from here/RB/here and/CC/and traverse/VB/traverse the/DT/the sequence/NN/sequence till/IN/till i/PRP/i reach/VBP/reach the/DT/the element/NN/element with/IN/with the/DT/the minimum/JJ/minimum priority/NN/priority which/WDT/which is/VBZ/is let/VBN/let ?/./? s/NNS/s say/VBP/say one/CD/one here/NNP/here. that/WDT/that ?/./? s/VBZ/s to/TO/to find/VB/find the/DT/the minimum/NNP/minimum. similarly/RB/similarly for/IN/for delete/JJ/delete min/NN/min because/IN/because i/PRP/i will/MD/will have/VB/have to/TO/to get/VB/get to/TO/to here/RB/here /,/, i/PRP/i will/MD/will have/VB/have to/TO/to remove/VB/remove the/DT/the element/NN/element and/CC/and then/RB/then i/PRP/i would/MD/would have/VB/have to/TO/to find/VB/find out/RP/out the/DT/the new/JJ/new minimum/JJ/minimum element/NNP/element. so/RB/so worst/JJ/worst case/NN/case time/NN/time complexity/NN/complexity of/IN/of minimum/JJ/minimum and/CC/and delete/JJ/delete min/NN/min therefore/NN/therefore becomes/VBZ/becomes ordering/NNP/ordering. that/IN/that ?/./? s/NNS/s not/RB/not very/RB/very good/JJ/good /,/, here/RB/here all/DT/all the/DT/the insertion/NN/insertion takes/VBZ/takes constant/NN/constant time/NN/time we/PRP/we are/VBP/are saying/VBG/saying that/IN/that both/DT/both for/IN/for minimum/JJ/minimum and/CC/and for/IN/for delete/JJ/delete min/NN/min we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take order/NN/order n/NN/n time/NNP/time. how/WRB/how about/IN/about using/VBG/using the/DT/the sorted/JJ/sorted sequence/NN/sequence to/TO/to try/VB/try and/CC/and implement/NN/implement a/DT/a priority/NN/priority queue/NNP/queue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 20/CD/20 /CD/) now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have a/DT/a sequence/NN/sequence in/IN/in which/WDT/which the/DT/the elements/NNS/elements are/VBP/are sorted/VBN/sorted with/IN/with increasing/VBG/increasing priorities/NNS/priorities that/WDT/that is/VBZ/is the/DT/the elements/NNS/elements with/IN/with the/DT/the smallest/JJS/smallest priority/NN/priority is/VBZ/is straight/JJ/straight sitting/NN/sitting right/RB/right at/IN/at the/DT/the front/NN/front of/IN/of our/PRP$/our sequence/NNP/sequence. in/IN/in which/WDT/which case/NN/case minimum/NN/minimum and/CC/and delete/JJ/delete min/NN/min i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to take/VB/take a/DT/a constant/JJ/constant amount/NN/amount of/IN/of time/NNP/time. the/DT/the minimum/JJ/minimum element/NN/element as/IN/as i/PRP/i said/VBD/said is/VBZ/is the/DT/the element/NN/element at/IN/at the/DT/the front/NN/front of/IN/of our/PRP$/our sequence/NNP/sequence. so/RB/so you/PRP/you just/RB/just be/VB/be able/JJ/able to/TO/to retrieve/VB/retrieve the/DT/the minimum/JJ/minimum element/NN/element in/IN/in constant/NN/constant time/NNP/time. similarly/RB/similarly to/TO/to delete/VB/delete it/PRP/it /,/, you/PRP/you just/RB/just have/VBP/have to/TO/to delete/VB/delete the/DT/the minimum/JJ/minimum element/NN/element and/CC/and then/RB/then delete/JJ/delete the/DT/the minimum/JJ/minimum element/NN/element from/IN/from the/DT/the front/NN/front of/IN/of the/DT/the sequence/NNP/sequence. this/DT/this is/VBZ/is what/WP/what your/PRP$/your sequence/NN/sequence would/MD/would look/VB/look like/IN/like now/RB/now /,/, note/VBP/note that/IN/that the/DT/the element/NN/element with/IN/with the/DT/the minimum/JJ/minimum priority/NN/priority is/VBZ/is sitting/VBG/sitting right/JJ/right at/IN/at the/DT/the front/NN/front here/RB/here but/CC/but now/RB/now the/DT/the problem/NN/problem is/VBZ/is if/IN/if you/PRP/you have/VBP/have to/TO/to do/VB/do the/DT/the insert/NN/insert operation/NNP/operation. if/IN/if you/PRP/you have/VBP/have to/TO/to insert/VB/insert lets/NNS/lets say/VBP/say an/DT/an element/NN/element with/IN/with priority/NN/priority 7/CD/7 /,/, i/PRP/i will/MD/will have/VB/have to/TO/to traverse/VB/traverse the/DT/the sequence/NN/sequence till/IN/till i/PRP/i come/VBP/come to/TO/to the/DT/the right/NN/right position/NN/position and/CC/and put/VBD/put the/DT/the element/NN/element there/NNP/there. in/IN/in the/DT/the worst/JJS/worst case/NN/case insert/NN/insert could/MD/could now/RB/now take/VB/take order/NN/order end/NN/end time/NNP/time. in/IN/in this/DT/this example/NN/example i/PRP/i am/VBP/am inserting/VBG/inserting 8/CD/8 which/WDT/which can/MD/can be/VB/be inserted/VBN/inserted either/DT/either before/IN/before this/DT/this 8/CD/8 or/CC/or after/IN/after this/DT/this 8/CD/8. in/IN/in this/DT/this case/NN/case i/PRP/i am/VBP/am taking/VBG/taking time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the sequence/NNP/sequence. priority/NN/priority queues/NNS/queues find/VBP/find many/JJ/many applications/NNP/applications. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 34/CD/34 /CD/) i/PRP/i gave/VBD/gave you/PRP/you an/DT/an example/NN/example of/IN/of scheduling/NNP/scheduling. they/PRP/they are/VBP/are also/RB/also used/VBN/used in/IN/in discreet/NN/discreet event/NN/event simulation/NN/simulation and/CC/and they/PRP/they are/VBP/are used/VBN/used as/IN/as a/DT/a building/NN/building block/NN/block for/IN/for many/JJ/many other/JJ/other algorithms/NNP/algorithms. we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be seeing/VBG/seeing more/JJR/more algorithm/NN/algorithm in/IN/in this/DT/this course/NN/course lets/NNS/lets says/VBZ/says dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm which/WDT/which require/NN/require the/DT/the priority/NN/priority queue/NN/queue data/NNS/data structure/NN/structure to/TO/to be/VB/be able/JJ/able to/TO/to efficiently/RB/efficiently implement/JJ/implement the/DT/the algorithm/NNP/algorithm. today/NN/today what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see is/VBZ/is how/WRB/how to/TO/to use/VB/use a/DT/a data/NN/data structure/NN/structure called/VBN/called a/DT/a heap/NN/heap /,/, to/TO/to implement/VB/implement a/DT/a priority/NN/priority queue/NNP/queue. we/PRP/we saw/VBD/saw the/DT/the two/CD/two methods/NNS/methods to/TO/to implement/VB/implement the/DT/the priority/NN/priority queue/NN/queue and/CC/and unsorted/VBD/unsorted sequence/NN/sequence and/CC/and sorted/VBD/sorted sequence/NN/sequence and/CC/and both/DT/both of/IN/of them/PRP/them had/VBD/had their/PRP$/their problems/NNP/problems. in/IN/in case/NN/case of/IN/of unsorted/VBN/unsorted sequence/NN/sequence the/DT/the delete/JJ/delete min/NN/min operation/NN/operation and/CC/and minimum/JJ/minimum operation/NN/operation would/MD/would take/VB/take order/NN/order n/NN/n time/NN/time and/CC/and in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a sorted/VBN/sorted sequence/NN/sequence /,/, the/DT/the insert/NN/insert operation/NN/operation would/MD/would take/VB/take order/NN/order in/IN/in time/NN/time while/IN/while the/DT/the other/JJ/other operations/NNS/operations are/VBP/are constant/JJ/constant time/NN/time operation/NNP/operation. we/PRP/we would/MD/would like/VB/like to/TO/to have/VB/have a/DT/a data/NN/data structure/NN/structure which/WDT/which would/MD/would do/VB/do all/DT/all these/DT/these three/CD/three operations/NNS/operations insert/NN/insert /,/, delete/JJ/delete min/NN/min and/CC/and minimum/JJ/minimum very/RB/very efficiently/NNP/efficiently. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 39/CD/39 /CD/) what/WP/what is/VBZ/is a/DT/a heap/NN/heap ?/./? when/WRB/when we/PRP/we say/VBP/say heap/NN/heap we/PRP/we typically/RB/typically mean/JJ/mean what/WP/what ?/./? s/NNS/s called/VBN/called a/DT/a binary/JJ/binary heap/NNP/heap. binary/JJ/binary heap/NN/heap is/VBZ/is a/DT/a binary/JJ/binary tree/NN/tree that/WDT/that stores/VBZ/stores the/DT/the priorities/NNS/priorities or/CC/or the/DT/the priority/NN/priority element/NN/element pairs/NNS/pairs at/IN/at the/DT/the nodes/NNP/nodes. in/IN/in the/DT/the rest/NN/rest of/IN/of the/DT/the class/NN/class i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to show/VB/show the/DT/the nodes/NNS/nodes as/IN/as containing/VBG/containing the/DT/the priority/NN/priority of/IN/of the/DT/the element/NN/element and/CC/and the/DT/the element/NN/element is/VBZ/is sitting/VBG/sitting somewhere/RB/somewhere here/RB/here also/NNP/also. they/PRP/they could/MD/could be/VB/be storing/VBG/storing only/RB/only priorities/NNS/priorities of/IN/of the/DT/the priority/NN/priority element/NN/element pairs/NNP/pairs. now/RB/now heap/VB/heap has/VBZ/has to/TO/to two/CD/two properties/NNP/properties. one/CD/one is/VBZ/is the/DT/the structure/NN/structure properties/NNP/properties. in/IN/in this/DT/this binary/JJ/binary tree/NN/tree all/DT/all levels/NNS/levels are/VBP/are full/NNP/full. this/DT/this is/VBZ/is level/NN/level zero/NN/zero /,/, it/PRP/it can/MD/can have/VB/have only/RB/only one/CD/one node/NN/node /,/, it/PRP/it has/VBZ/has one/CD/one node/NNP/node. level/NN/level 1/CD/1 can/MD/can have/VB/have 2/CD/2 nodes/NNS/nodes /,/, it/PRP/it has/VBZ/has 2/CD/2 nodes/NNP/nodes. level/NN/level 2/CD/2 can/MD/can have/VB/have 4/CD/4 nodes/NNS/nodes /,/, it/PRP/it has/VBZ/has 4/CD/4 nodes/NNP/nodes. level/NN/level 3/CD/3 can/MD/can have/VB/have 8/CD/8 nodes/NNS/nodes it/PRP/it has/VBZ/has only/RB/only 5/CD/5 nodes/NNP/nodes. so/RB/so all/DT/all levels/NNS/levels except/IN/except the/DT/the last/JJ/last levels/NNS/levels are/VBP/are full/JJ/full and/CC/and the/DT/the last/JJ/last level/NN/level is/VBZ/is what/WP/what we/PRP/we will/MD/will call/VB/call left/VBN/left fill/NN/fill which/WDT/which means/VBZ/means that/DT/that all/DT/all the/DT/the nodes/NNS/nodes on/IN/on the/DT/the last/JJ/last level/NN/level are/VBP/are as/RB/as left/VBN/left as/IN/as possible/NNP/possible. they/PRP/they could/MD/could be/VB/be 8/CD/8 elements/NNS/elements there/NNP/there. there/RB/there only/RB/only 5/CD/5 but/CC/but these/DT/these 5/CD/5 nodes/NNS/nodes would/MD/would be/VB/be the/DT/the ones/NNS/ones which/WDT/which are/VBP/are the/DT/the first/JJ/first five/CD/five if/IN/if i/PRP/i were/VBD/were to/TO/to move/VB/move left/VBN/left to/TO/to right/NNP/right. that/IN/that ?/./? s/NNS/s the/DT/the structural/JJ/structural property/NN/property of/IN/of a/DT/a binary/NNP/binary. the/DT/the other/JJ/other properties/NNS/properties what/WP/what i/PRP/i call/VBP/call a/DT/a heap/NN/heap property/NNP/property. the/DT/the heap/NN/heap property/NN/property simply/RB/simply says/VBZ/says the/DT/the following/NNP/following. the/DT/the priority/NN/priority of/IN/of the/DT/the node/NN/node is/VBZ/is at/IN/at least/JJS/least as/IN/as largest/JJS/largest that/IN/that of/IN/of its/PRP$/its parent/NNP/parent. for/IN/for any/DT/any node/NN/node its/PRP$/its priority/NN/priority has/VBZ/has to/TO/to be/VB/be larger/JJR/larger than/IN/than the/DT/the priorities/NNS/priorities of/IN/of its/PRP$/its parent/NNP/parent. this/DT/this picture/NN/picture here/RB/here that/IN/that satisfy/NN/satisfy both/DT/both of/IN/of the/DT/the properties/NNS/properties /,/, structure/NN/structure as/IN/as well/RB/well as/IN/as heap/NNP/heap. consider/NN/consider any/DT/any node/NN/node /,/, its/PRP$/its priorities/NNS/priorities is/VBZ/is at/IN/at least/JJS/least as/IN/as larger/JJR/larger then/RB/then the/DT/the priorities/NNS/priorities of/IN/of its/PRP$/its parent/NNP/parent. you/PRP/you can/MD/can take/VB/take any/DT/any node/NNP/node. i/PRP/i can/MD/can restate/VB/restate this/DT/this /,/, i/PRP/i can/MD/can also/RB/also say/VB/say it/PRP/it in/IN/in the/DT/the following/JJ/following manner/NNP/manner. the/DT/the priority/NN/priority of/IN/of any/DT/any node/NN/node is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the priorities/NNS/priorities of/IN/of its/PRP$/its children/NNP/children. sometimes/RB/sometimes we/PRP/we will/MD/will also/RB/also think/VB/think of/IN/of it/PRP/it in/IN/in this/DT/this manner/NN/manner /,/, priority/NN/priority of/IN/of any/DT/any node/NN/node is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the priorities/NNS/priorities of/IN/of its/PRP$/its children/NNP/children. there/EX/there might/MD/might be/VB/be two/CD/two children/NNS/children /,/, there/EX/there might/MD/might be/VB/be only/RB/only one/CD/one child/NN/child as/IN/as is/VBZ/is the/DT/the case/NN/case here/NNP/here. in/IN/in this/DT/this case/NN/case priority/NN/priority of/IN/of this/DT/this node/NN/node has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than the/DT/the priority/NN/priority of/IN/of its/PRP$/its lone/NN/lone child/NNP/child. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at example/NN/example which/WDT/which are/VBP/are not/RB/not heap/NNP/heap. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 01/CD/01 /CD/) this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NN/heap because/IN/because if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this node/NN/node /,/, we/PRP/we require/VBP/require that/IN/that it/PRP/it have/VBP/have a/DT/a priority/NN/priority which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than the/DT/the priority/NN/priority of/IN/of its/PRP$/its parent/NN/parent /,/, at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as the/DT/the priority/NN/priority of/IN/of its/PRP$/its parent/NN/parent but/CC/but its/PRP$/its priority/NN/priority is/VBZ/is 18/CD/18 /,/, its/PRP$/its priority/NN/priority is/VBZ/is 19/CD/19. this/DT/this violates/NNS/violates the/DT/the heap/NN/heap property/NNP/property. this/DT/this does/VBZ/does not/RB/not violate/VB/violate the/DT/the heap/NN/heap property/NN/property but/CC/but as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this node/NN/node is/VBZ/is empty/JJ/empty /,/, so/RB/so this/DT/this last/JJ/last level/NN/level is/VBZ/is not/RB/not left/VBN/left filled/NNP/filled. we/PRP/we would/MD/would like/VB/like that/IN/that if/IN/if there/EX/there were/VBD/were only/RB/only 4/CD/4 nodes/NNS/nodes at/IN/at the/DT/the last/JJ/last level/NN/level then/RB/then they/PRP/they should/MD/should appear/VB/appear as/IN/as the/DT/the first/JJ/first 4/CD/4 nodes/NNS/nodes of/IN/of this/DT/this binary/JJ/binary tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 24/CD/24 /CD/) this/DT/this appears/VBZ/appears as/IN/as the/DT/the first/JJ/first four/CD/four nodes/NNS/nodes of/IN/of the/DT/the last/JJ/last level/NN/level of/IN/of this/DT/this binary/JJ/binary tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 51/CD/51 /CD/) /./. how/WRB/how does/VBZ/does one/CD/one find/NN/find the/DT/the minimum/JJ/minimum element/NN/element in/IN/in a/DT/a heap/NN/heap ?/./? suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a heap/NNP/heap. what/WP/what ?/./? s/NNS/s a/DT/a heap/NN/heap ?/./? recall/NN/recall as/IN/as this/DT/this two/CD/two properties/NNS/properties /,/, one/CD/one is/VBZ/is the/DT/the structural/JJ/structural property/NN/property the/DT/the other/JJ/other is/VBZ/is the/DT/the heap/NN/heap property/NNP/property. suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a heap/NN/heap /,/, how/WRB/how does/VBZ/does one/CD/one found/NN/found the/DT/the minimum/JJ/minimum element/NN/element ?/./? the/DT/the claim/NN/claim is/VBZ/is the/DT/the minimum/JJ/minimum element/NN/element /,/, the/DT/the element/NN/element with/IN/with the/DT/the smallest/JJS/smallest priority/NN/priority always/RB/always sits/VBZ/sits at/IN/at the/DT/the top/JJ/top of/IN/of the/DT/the heap/NNP/heap. the/DT/the top/JJ/top of/IN/of the/DT/the heap/NN/heap i/PRP/i mean/VBP/mean the/DT/the node/NN/node here/RB/here at/IN/at the/DT/the root/NN/root and/CC/and as/IN/as you/PRP/you can/MD/can see/VB/see such/JJ/such as/IN/as the/DT/the case/NN/case in/IN/in the/DT/the picture/NNP/picture. the/DT/the element/NN/element with/IN/with this/DT/this minimum/JJ/minimum priority/NN/priority is/VBZ/is the/DT/the element/NN/element by/IN/by 11/CD/11 and/CC/and its/PRP$/its sitting/NN/sitting in/IN/in top/JJ/top of/IN/of the/DT/the tree/NNP/tree. why/WRB/why is/VBZ/is this/DT/this the/DT/the case/NN/case ?/./? why/WRB/why can/MD/can ?/./? t/VB/t the/DT/the minimum/JJ/minimum not/RB/not be/VB/be some/DT/some where/WRB/where else/NN/else ?/./? if/IN/if it/PRP/it is/VBZ/is not/RB/not at/IN/at the/DT/the root/NN/root of/IN/of the/DT/the heap/NN/heap or/CC/or at/IN/at the/DT/the top/JJ/top of/IN/of the/DT/the heap/NN/heap /,/, it/PRP/it could/MD/could be/VB/be somewhere/RB/somewhere in/IN/in the/DT/the middle/NN/middle /,/, somewhere/RB/somewhere inside/VB/inside the/DT/the heap/NN/heap but/CC/but then/RB/then it/PRP/it has/VBZ/has a/DT/a parent/NN/parent and/CC/and the/DT/the heap/NN/heap property/NN/property says/VBZ/says that/IN/that the/DT/the priority/NN/priority of/IN/of the/DT/the parent/NN/parent is/VBZ/is at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as the/DT/the priority/NN/priority of/IN/of the/DT/the particular/JJ/particular node/NN/node then/RB/then the/DT/the parent/NN/parent would/MD/would have/VB/have a/DT/a larger/JJR/larger priority/NNP/priority. the/DT/the heap/NN/heap property/NN/property says/VBZ/says that/IN/that the/DT/the priority/NN/priority of/IN/of the/DT/the parent/NN/parent is/VBZ/is no/DT/no larger/JJR/larger than/IN/than the/DT/the priority/NN/priority of/IN/of the/DT/the node/NNP/node. now/RB/now if/IN/if such/JJ/such is/VBZ/is the/DT/the case/NN/case then/RB/then the/DT/the parent/NN/parent would/MD/would have/VB/have even/RB/even smaller/JJR/smaller priority/NN/priority and/CC/and so/RB/so the/DT/the element/NN/element that/IN/that i/PRP/i was/VBD/was talking/VBG/talking of/IN/of was/VBD/was not/RB/not the/DT/the one/CD/one with/IN/with the/DT/the smallest/JJS/smallest priority/NNP/priority. just/RB/just recap/VB/recap what/WP/what i/PRP/i said/VBD/said /,/, if/IN/if the/DT/the element/NN/element with/IN/with the/DT/the smallest/JJS/smallest priority/NN/priority was/VBD/was sitting/VBG/sitting else/RB/else where/WRB/where in/IN/in the/DT/the heap/NN/heap then/RB/then it/PRP/it would/MD/would have/VB/have a/DT/a parent/NN/parent with/IN/with smaller/JJR/smaller priority/NN/priority and/CC/and this/DT/this would/MD/would violate/VB/violate the/DT/the heap/NN/heap property/NNP/property. this/DT/this larger/JJR/larger should/MD/should really/RB/really leads/NNS/leads smaller/JJR/smaller /,/, it/PRP/it would/MD/would have/VB/have parent/NN/parent with/IN/with the/DT/the smaller/JJR/smaller priority/NN/priority and/CC/and that/IN/that would/MD/would violate/VB/violate the/DT/the heap/NN/heap property/NNP/property. the/DT/the minimum/JJ/minimum can/MD/can be/VB/be done/VBN/done in/IN/in constant/JJ/constant time/NN/time because/IN/because we/PRP/we just/RB/just need/VBP/need to/TO/to go/VB/go to/TO/to the/DT/the root/NN/root element/NN/element to/TO/to find/VB/find the/DT/the element/NN/element with/IN/with the/DT/the smallest/JJS/smallest priority/NNP/priority. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the heap/NN/heap ?/./? suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a heap/NN/heap on/IN/on n/NN/n nodes/NNS/nodes /,/, what/WP/what is/VBZ/is its/PRP$/its height/NN/height going/VBG/going to/TO/to be/VB/be ?/./? /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 08/CD/08 /CD/) recall/NN/recall our/PRP$/our discussion/NN/discussion on/IN/on binary/JJ/binary tree/NN/tree /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h then/RB/then it/PRP/it has/VBZ/has exactly/RB/exactly two/CD/two to/TO/to the/DT/the h/NN/h plus/VBZ/plus one/CD/one minus/NN/minus one/CD/one nodes/NNP/nodes. if/IN/if we/PRP/we have/VBP/have a/DT/a heap/NN/heap of/IN/of n/NN/n nodes/NNS/nodes with/IN/with height/JJ/height h/NN/h /,/, note/NN/note that/IN/that since/IN/since the/DT/the height/NN/height of/IN/of the/DT/the heap/NN/heap is/VBZ/is h/JJ/h /,/, it/PRP/it has/VBZ/has more/JJR/more nodes/NNS/nodes than/IN/than a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h minus/NN/minus one/NNP/one. a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h -1/-NONE-/-1 has/VBZ/has so/RB/so many/JJ/many nodes/NNS/nodes in/IN/in it/NNP/it. the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the heap/NN/heap is/VBZ/is larger/JJR/larger than/IN/than the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h -1/NNP/-1. a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree of/IN/of height/NN/height h/NN/h has/VBZ/has 2/CD/2 to/TO/to the/DT/the h/NN/h plus/VBZ/plus one/CD/one minus/NN/minus one/CD/one nodes/NNS/nodes and/CC/and the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the heap/NN/heap is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to this/DT/this quantity/NNP/quantity. this/DT/this inequality/NN/inequality holds/VBZ/holds /,/, n/NN/n is/VBZ/is strictly/RB/strictly larger/JJR/larger than/IN/than the/DT/the two/CD/two to/TO/to the/DT/the h/NN/h minus/NN/minus one/CD/one and/CC/and less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to two/CD/two to/TO/to the/DT/the h/NN/h plus/VBZ/plus one/CD/one minus/NN/minus one/NNP/one. i/PRP/i can/MD/can replace/VB/replace this/DT/this as/IN/as n/NN/n equals/NNS/equals the/DT/the floor/NN/floor of/IN/of the/DT/the log/NN/log of/IN/of h/NNP/h. this/DT/this notation/NN/notation here/RB/here really/RB/really means/VBZ/means that/IN/that log/NN/log of/IN/of h/NN/h which/WDT/which need/VBP/need not/RB/not be/VB/be an/DT/an integer/NN/integer /,/, we/PRP/we are/VBP/are just/RB/just rounding/VBG/rounding it/PRP/it down/IN/down to/TO/to the/DT/the nearest/JJS/nearest integer/NNP/integer. hope/NN/hope this/DT/this is/VBZ/is clear/JJ/clear to/TO/to everyone/NNP/everyone. this/DT/this is/VBZ/is the/DT/the mistake/NN/mistake /,/, this/DT/this should/MD/should read/VB/read h/NN/h equals/NNS/equals log/VBP/log of/IN/of n/NNP/n. the/DT/the height/NN/height of/IN/of a/DT/a heap/NN/heap is/VBZ/is the/DT/the log/NN/log of/IN/of the/DT/the number/NN/number of/IN/of nodes/NNP/nodes. just/RB/just interchange/NN/interchange this/DT/this h/NN/h and/CC/and n/NN/n /,/, this/DT/this is/VBZ/is error/NN/error on/IN/on this/DT/this slide/NNP/slide. if/IN/if n/NN/n lies/NNS/lies between/IN/between two/CD/two to/TO/to the/DT/the h/NN/h and/CC/and two/CD/two to/TO/to the/DT/the h/NN/h plus/VBZ/plus one/CD/one minus/NN/minus one/CD/one then/RB/then h/JJ/h is/VBZ/is log/JJ/log of/IN/of n/NNP/n. how/WRB/how does/VBZ/does one/CD/one implement/NN/implement the/DT/the heap/NN/heap ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 04/CD/04 /CD/) recall/NN/recall that/WDT/that till/NN/till now/RB/now we/PRP/we were/VBD/were saying/VBG/saying that/IN/that heap/NN/heap is/VBZ/is this/DT/this kind/NN/kind of/IN/of a/DT/a binary/JJ/binary tree/NNP/tree. we/PRP/we can/MD/can of/IN/of course/NN/course implement/NN/implement the/DT/the heap/NN/heap using/VBG/using the/DT/the binary/JJ/binary tree/NN/tree but/CC/but it/PRP/it ?/./? s/NNS/s much/RB/much simpler/JJR/simpler to/TO/to implement/VB/implement the/DT/the heap/NN/heap using/VBG/using an/DT/an array/NNP/array. let/NN/let ?/./? s/NNS/s see/VBP/see what/WP/what i/PRP/i mean/VBP/mean here/NNP/here. this/DT/this is/VBZ/is level/NN/level zero/NN/zero of/IN/of my/PRP$/my heap/NN/heap /,/, this/DT/this is/VBZ/is level/NN/level one/CD/one /,/, level/NN/level two/CD/two and/CC/and level/NN/level three/CD/three of/IN/of the/DT/the binary/JJ/binary tree/NN/tree corresponding/VBG/corresponding to/TO/to this/DT/this heap/NNP/heap. i/PRP/i am/VBP/am going/VBG/going to/TO/to put/VB/put these/DT/these nodes/NNS/nodes of/IN/of binary/JJ/binary tree/NN/tree in/IN/in to/TO/to an/DT/an array/NN/array with/IN/with the/DT/the root/NN/root node/NN/node sitting/VBG/sitting at/IN/at the/DT/the first/JJ/first location/NN/location in/IN/in the/DT/the array/NNP/array. my/PRP$/my array/NN/array is/VBZ/is going/VBG/going to/TO/to be/VB/be indexed/VBN/indexed starting/VBG/starting from/IN/from location/NN/location one/NNP/one. so/RB/so 11/CD/11 comes/NNS/comes here/RB/here 17/CD/17 and/CC/and 13/CD/13 /,/, the/DT/the next/JJ/next level/NN/level would/MD/would follow/VB/follow and/CC/and we/PRP/we would/MD/would go/VB/go left/VBN/left to/TO/to right/NNP/right. 17/CD/17 would/MD/would be/VB/be the/DT/the next/JJ/next element/NN/element /,/, 13/CD/13 would/MD/would be/VB/be one/CD/one after/IN/after that/DT/that then/RB/then 18/CD/18 /,/, 21/CD/21 /,/, 19/CD/19 /,/, 17/CD/17 /,/, 43/CD/43 /,/, 23/CD/23 /,/, 26/CD/26. this/DT/this is/VBZ/is level/NN/level zero/NN/zero of/IN/of the/DT/the binary/JJ/binary tree/NN/tree /,/, this/DT/this is/VBZ/is level/NN/level one/CD/one of/IN/of the/DT/the binary/JJ/binary tree/NN/tree /,/, this/DT/this is/VBZ/is level/NN/level two/CD/two /,/, this/DT/this is/VBZ/is level/NN/level and/CC/and this/DT/this is/VBZ/is level/NN/level three/CD/three of/IN/of the/DT/the binary/JJ/binary tree/NNP/tree. what/WP/what ?/./? s/NNS/s the/DT/the advantage/NN/advantage of/IN/of putting/VBG/putting the/DT/the nodes/NNS/nodes of/IN/of a/DT/a heap/NN/heap in/IN/in to/TO/to an/DT/an array/NN/array like/IN/like this/DT/this ?/./? suppose/NN/suppose i/PRP/i look/VBP/look at/IN/at a/DT/a node/NN/node at/IN/at location/NN/location five/CD/five lets/NNS/lets say/VBP/say /,/, node/NN/node 21/CD/21 and/CC/and i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out the/DT/the parent/NN/parent of/IN/of this/DT/this node/NN/node in/IN/in the/DT/the heap/NNP/heap. then/RB/then all/DT/all i/PRP/i have/VBP/have to/TO/to do/VB/do is/VBZ/is take/VB/take 5/CD/5 divided/VBN/divided by/IN/by 2/CD/2 take/NN/take the/DT/the floors/NNS/floors of/IN/of 5/CD/5 by/IN/by 2/CD/2 floor/NN/floor is/VBZ/is 2/CD/2. the/DT/the parent/NN/parent of/IN/of 21/CD/21 in/IN/in this/DT/this heap/NN/heap is/VBZ/is going/VBG/going to/TO/to be/VB/be 17/CD/17 which/WDT/which is/VBZ/is the/DT/the case/NN/case here/NNP/here. we/PRP/we can/MD/can do/VB/do it/PRP/it for/IN/for any/DT/any other/JJ/other node/NN/node let/NN/let ?/./? s/NNS/s take/VBP/take node/NN/node 26/CD/26. the/DT/the 26/CD/26 is/VBZ/is at/IN/at location/NN/location 10/CD/10 /,/, 10/CD/10 by/IN/by 2/CD/2 is/VBZ/is 5/CD/5 whose/WP$/whose floor/NN/floor is/VBZ/is also/RB/also 5/CD/5. the/DT/the parent/NN/parent of/IN/of 26/CD/26 that/WDT/that location/NN/location 5/CD/5 and/CC/and is/VBZ/is 21/CD/21. you/PRP/you can/MD/can quickly/RB/quickly determine/VB/determine the/DT/the parent/NN/parent of/IN/of any/DT/any node/NN/node /,/, if/IN/if you/PRP/you know/VBP/know the/DT/the location/NN/location of/IN/of the/DT/the node/NNP/node. parent/NN/parent is/VBZ/is just/RB/just at/IN/at location/NN/location i/PRP/i by/IN/by two/CD/two if/IN/if the/DT/the node/NN/node is/VBZ/is at/IN/at location/NN/location i/NNP/i. conversely/RB/conversely if/IN/if the/DT/the node/NN/node is/VBZ/is at/IN/at location/NN/location i/PRP/i and/CC/and i/PRP/i want/VBP/want to/TO/to figure/VB/figure out/RP/out its/PRP$/its two/CD/two children/NNS/children then/RB/then the/DT/the two/CD/two children/NNS/children /,/, the/DT/the left/NN/left child/NN/child would/MD/would be/VB/be at/IN/at location/NN/location two/CD/two i/PRP/i then/RB/then the/DT/the right/NN/right child/NN/child would/MD/would be/VB/be location/NN/location two/CD/two i/PRP/i +/VBP/+ 1/CD/1. we/PRP/we can/MD/can work/VB/work out/RP/out this/DT/this math/NN/math it/PRP/it will/MD/will be/VB/be very/RB/very easy/JJ/easy /,/, i/PRP/i will/MD/will just/RB/just show/VB/show it/PRP/it with/IN/with an/DT/an example/NN/example here/NNP/here. if/IN/if i/PRP/i look/VBP/look at/IN/at node/NN/node thirteen/NNS/thirteen it/PRP/it ?/./? s/NNS/s at/IN/at location/NN/location three/CD/three /,/, its/PRP$/its two/CD/two children/NNS/children then/RB/then should/MD/should be/VB/be location/NN/location 6/CD/6 and/CC/and 7/CD/7. two/CD/two children/NNS/children are/VBP/are 19/CD/19 and/CC/and 17/CD/17 and/CC/and they/PRP/they are/VBP/are at/IN/at location/NN/location 6/CD/6 and/CC/and 7/CD/7. given/VBN/given the/DT/the location/NN/location of/IN/of any/DT/any particular/JJ/particular node/NN/node /,/, i/PRP/i can/MD/can just/RB/just quickly/RB/quickly figure/JJ/figure out/IN/out what/WP/what is/VBZ/is the/DT/the location/NN/location of/IN/of the/DT/the parent/NN/parent /,/, what/WP/what are/VBP/are the/DT/the locations/NNS/locations of/IN/of the/DT/the two/CD/two children/NNS/children of/IN/of that/DT/that node/NNP/node. those/DT/those are/VBP/are the/DT/the only/JJ/only thing/NN/thing that/WDT/that are/VBP/are really/RB/really need/VBP/need to/TO/to do/VB/do in/IN/in heap/NN/heap and/CC/and the/DT/the heap/NN/heap property/NN/property is/VBZ/is really/RB/really saying/VBG/saying that/IN/that if/IN/if i/PRP/i is/VBZ/is the/DT/the location/NN/location /,/, parent/NN/parent of/IN/of i/PRP/i is/VBZ/is the/DT/the location/NN/location of/IN/of its/PRP$/its parent/NN/parent and/CC/and a/DT/a of/IN/of parent/NN/parent of/IN/of i/PRP/i /,/, a/DT/a is/VBZ/is the/DT/the array/NN/array which/WDT/which is/VBZ/is holding/VBG/holding these/DT/these priorities/NNP/priorities. so/RB/so its/PRP$/its priority/NN/priority of/IN/of the/DT/the parent/NN/parent of/IN/of i/NNP/i. the/DT/the priority/NN/priority of/IN/of the/DT/the parent/NN/parent is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the priority/NN/priority of/IN/of the/DT/the node/NN/node itself/NNP/itself. that/IN/that ?/./? s/NNS/s what/WP/what the/DT/the property/NN/property is/NNP/is. we/PRP/we implicitly/RB/implicitly are/VBP/are maintaining/VBG/maintaining the/DT/the tree/NN/tree links/NNP/links. the/DT/the parent/NN/parent child/NN/child relationships/NNS/relationships are/VBP/are getting/VBG/getting implicitly/RB/implicitly maintained/NNP/maintained. the/DT/the children/NNS/children of/IN/of a/DT/a node/NN/node i/PRP/i are/VBP/are at/IN/at location/NN/location two/CD/two i/PRP/i and/CC/and two/CD/two i/PRP/i plus/VBZ/plus one/CD/one and/CC/and this/DT/this is/VBZ/is very/RB/very useful/JJ/useful in/IN/in binary/JJ/binary /,/, in/IN/in multiplying/NN/multiplying by/IN/by two/CD/two just/RB/just corresponds/VBZ/corresponds to/TO/to a/DT/a left/NN/left shift/NN/shift and/CC/and multiplying/VBG/multiplying by/IN/by two/CD/two and/CC/and adding/VBG/adding one/CD/one is/VBZ/is equally/RB/equally simple/NNP/simple. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 53/CD/53 /CD/) one/CD/one can/MD/can quickly/RB/quickly figure/VB/figure out/RP/out the/DT/the children/NNS/children of/IN/of a/DT/a node/NN/node or/CC/or also/RB/also the/DT/the parent/NN/parent of/IN/of the/DT/the node/NN/node by/IN/by just/RB/just doing/VBG/doing one/CD/one left/NN/left or/CC/or right/RB/right shift/JJ/shift and/CC/and an/DT/an increment/NN/increment operation/NNP/operation. this/DT/this makes/VBZ/makes the/DT/the operation/NN/operation really/RB/really fast/RB/fast /,/, when/WRB/when you/PRP/you trying/VBG/trying to/TO/to access/NN/access the/DT/the parent/NN/parent or/CC/or the/DT/the children/NNS/children of/IN/of a/DT/a particular/JJ/particular node/NNP/node. let/NN/let ?/./? s/NNS/s now/RB/now see/VBP/see how/WRB/how one/CD/one would/MD/would insert/VB/insert an/DT/an element/NN/element in/IN/in to/TO/to the/DT/the heap/NNP/heap. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 54/CD/54 /CD/) till/NN/till now/RB/now the/DT/the only/JJ/only operation/NN/operation we/PRP/we have/VBP/have seen/VBN/seen is/VBZ/is to/TO/to find/VB/find the/DT/the minimum/JJ/minimum element/NN/element in/IN/in the/DT/the heap/NN/heap and/CC/and that/IN/that we/PRP/we said/VBD/said can/MD/can be/VB/be done/VBN/done in/IN/in constant/JJ/constant time/NN/time and/CC/and because/IN/because minimum/JJ/minimum element/NN/element in/IN/in a/DT/a heap/NN/heap always/RB/always sits/VBZ/sits at/IN/at the/DT/the root/NN/root of/IN/of the/DT/the heap/NNP/heap. suppose/NN/suppose i/PRP/i wanted/VBD/wanted to/TO/to insert/VB/insert twelve/JJ/twelve in/IN/in to/TO/to this/DT/this heap/NNP/heap. what/WP/what would/MD/would i/VB/i do/VBP/do ?/./? right/RB/right now/RB/now this/DT/this heap/NN/heap as/IN/as 3/CD/3 /,/, 7/CD/7 and/CC/and 12/CD/12 nodes/NNS/nodes in/IN/in it/NNP/it. if/IN/if i/PRP/i insert/VBP/insert 12/CD/12 this/DT/this heap/NN/heap is/VBZ/is going/VBG/going to/TO/to have/VB/have 13/CD/13 elements/NNS/elements in/IN/in it/NNP/it. if/IN/if it/PRP/it has/VBZ/has 13/CD/13 elements/NNS/elements in/IN/in it/PRP/it then/RB/then structurally/RB/structurally i/PRP/i should/MD/should have/VB/have another/DT/another node/NN/node here/NNP/here. that/IN/that ?/./? s/NNS/s the/DT/the first/JJ/first thing/NN/thing i/PRP/i would/MD/would do/VB/do. i/PRP/i would/MD/would first/RB/first create/VB/create a/DT/a node/NN/node here/RB/here and/CC/and let/VB/let me/PRP/me now/RB/now put/VBD/put 12/CD/12 in/IN/in to/TO/to it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 28/CD/28 /CD/) of/IN/of course/NN/course structurally/RB/structurally this/DT/this does/VBZ/does satisfy/NN/satisfy the/DT/the structural/JJ/structural property/NN/property of/IN/of heap/NN/heap but/CC/but it/PRP/it is/VBZ/is not/RB/not heap/VB/heap because/IN/because it/PRP/it violates/VBZ/violates the/DT/the heap/NN/heap property/NNP/property. this/DT/this node/NN/node should/MD/should have/VB/have lesser/JJR/lesser priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNS/children it/PRP/it does/VBZ/does not/RB/not /,/, it/PRP/it has/VBZ/has higher/JJR/higher priority/NN/priority than/IN/than this/DT/this child/NNP/child. we/PRP/we need/VBP/need to/TO/to take/VB/take care/NN/care of/IN/of that/NNP/that. since/IN/since this/DT/this is/VBZ/is lesser/NN/lesser priority/NN/priority than/IN/than this/DT/this we/PRP/we need/VBP/need to/TO/to swap/VB/swap this/DT/this thing/NNP/thing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 55/CD/55 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 08/CD/08 /CD/) we/PRP/we do/VBP/do that/IN/that in/IN/in this/DT/this manner/NN/manner we/PRP/we swap/VBP/swap this/DT/this two/CD/two element/NNP/element. now/RB/now the/DT/the heap/NN/heap property/NN/property is/VBZ/is satisfied/VBN/satisfied here/RB/here /,/, no/DT/no problem/NNP/problem. this/DT/this has/VBZ/has lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNS/children but/CC/but it/PRP/it ?/./? s/NNS/s violated/VBD/violated here/NNP/here. this/DT/this does/VBZ/does not/RB/not have/VB/have lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNP/children. we/PRP/we should/MD/should then/RB/then swap/VB/swap this/DT/this and/CC/and this/DT/this /,/, we/PRP/we do/VBP/do that/NNP/that. heap/VB/heap property/NN/property also/RB/also now/RB/now satisfied/VBN/satisfied here/NNP/here. since/IN/since we/PRP/we change/VBP/change the/DT/the content/NN/content of/IN/of this/DT/this node/NN/node /,/, could/MD/could it/PRP/it be/VB/be that/IN/that the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated at/IN/at this/DT/this node/NNP/node. let/VBD/let ?/./? s/NNS/s look/VBP/look this/DT/this has/VBZ/has priority/NN/priority eleven/RB/eleven /,/, this/DT/this has/VBZ/has 17/CD/17 /,/, this/DT/this has/VBZ/has 12/CD/12. this/DT/this has/VBZ/has lesser/NN/lesser priority/NN/priority than/IN/than both/DT/both its/PRP$/its children/NNS/children /,/, the/DT/the heap/NN/heap property/NN/property is/VBZ/is satisfied/VBN/satisfied here/RB/here no/DT/no problem/NN/problem at/IN/at all/NNP/all. we/PRP/we are/VBP/are done/VBN/done with/IN/with the/DT/the insertion/NN/insertion of/IN/of 12/CD/12. all/DT/all we/PRP/we did/VBD/did was/VBD/was create/VB/create a/DT/a new/JJ/new node/NN/node /,/, put/VBD/put twelve/JJ/twelve here/RB/here and/CC/and then/RB/then move/VB/move twelve/NN/twelve up/IN/up /,/, so/RB/so as/IN/as to/TO/to maintain/VB/maintain the/DT/the heap/NN/heap property/NNP/property. we/PRP/we saw/VBD/saw that/IN/that 12/CD/12 had/VBD/had a/DT/a lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its parent/NNP/parent. so/RB/so we/PRP/we swap/VBP/swap 12/CD/12 and/CC/and its/PRP$/its parent/NN/parent then/RB/then once/RB/once again/RB/again we/PRP/we saw/VBD/saw that/IN/that 12/CD/12 had/VBD/had reached/VBN/reached here/NNP/here. 12/CD/12 had/VBD/had a/DT/a lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its parent/NN/parent so/IN/so once/RB/once again/RB/again we/PRP/we swapped/VBD/swapped 12/CD/12 and/CC/and its/PRP$/its parent/NNP/parent. 12/CD/12 now/RB/now reached/VBN/reached here/RB/here /,/, but/CC/but now/RB/now 12/CD/12 does/VBZ/does not/RB/not have/VB/have lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its parent/NN/parent /,/, so/RB/so we/PRP/we stop/NNP/stop. let/VBP/let ?/./? s/NNS/s see/VBP/see if/IN/if we/PRP/we were/VBD/were to/TO/to insert/VB/insert another/DT/another element/NNP/element. let/NN/let me/PRP/me insert/VB/insert 8/CD/8 in/IN/in to/TO/to this/DT/this heap/NNP/heap. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 24/CD/24 /CD/) once/RB/once again/RB/again 8/CD/8 would/MD/would come/VB/come at/IN/at this/DT/this location/NN/location /,/, so/RB/so i/PRP/i have/VBP/have put/VBN/put in/IN/in 8/CD/8 here/NNP/here. 8/CD/8 has/VBZ/has a/DT/a lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its parent/NN/parent this/DT/this violates/VBZ/violates the/DT/the heap/NN/heap property/NN/property /,/, so/RB/so we/PRP/we would/MD/would swap/VB/swap 8/CD/8 and/CC/and 17/CD/17. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 34/CD/34 /CD/) once/RB/once again/RB/again 8/CD/8 has/VBZ/has the/DT/the lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its parent/NN/parent /,/, so/RB/so we/PRP/we would/MD/would swap/VB/swap 8/CD/8 and/CC/and 12/CD/12. once/RB/once again/RB/again this/DT/this has/VBZ/has lower/JJR/lower priority/NN/priority than/IN/than its/PRP$/its parent/NN/parent so/IN/so we/PRP/we swap/VBP/swap 8/CD/8 and/CC/and 11/CD/11 and/CC/and now/RB/now we/PRP/we were/VBD/were done/NNP/done. this/DT/this is/VBZ/is now/RB/now a/DT/a heap/NN/heap with/IN/with 8/CD/8 /,/, the/DT/the element/NN/element that/IN/that we/PRP/we inserted/VBD/inserted last/NNP/last. now/RB/now coming/VBG/coming at/IN/at the/DT/the root/NN/root of/IN/of the/DT/the heap/NN/heap and/CC/and in/IN/in fact/NN/fact it/PRP/it should/MD/should come/VB/come there/RB/there because/IN/because this/DT/this is/VBZ/is the/DT/the minimum/JJ/minimum priority/NN/priority element/NN/element in/IN/in the/DT/the entire/JJ/entire thing/NNP/thing. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at insertion/NN/insertion again/RB/again from/IN/from the/DT/the slightly/RB/slightly different/JJ/different point/NN/point of/IN/of view/NNP/view. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 48/CD/48 /CD/) we/PRP/we again/RB/again have/VBP/have the/DT/the same/JJ/same heap/NN/heap as/IN/as before/IN/before /,/, we/PRP/we are/VBP/are trying/VBG/trying to/TO/to insert/VB/insert 12/CD/12. first/JJ/first we/PRP/we enlarge/VBP/enlarge the/DT/the heap/NN/heap which/WDT/which means/VBZ/means that/DT/that we/PRP/we create/VBP/create the/DT/the new/JJ/new node/NN/node where/WRB/where we/PRP/we create/VBP/create the/DT/the new/JJ/new node/NN/node because/IN/because we/PRP/we know/VBP/know that/IN/that the/DT/the new/JJ/new heap/NN/heap now/RB/now has/VBZ/has 13/CD/13 elements/NNS/elements in/IN/in it/PRP/it and/CC/and so/RB/so this/DT/this is/VBZ/is what/WP/what it/PRP/it structure/VBP/structure should/MD/should be/VB/be like/NNP/like. now/RB/now we/PRP/we consider/VBP/consider the/DT/the path/NN/path from/IN/from the/DT/the root/NN/root to/TO/to inserted/VBN/inserted node/NN/node which/WDT/which is/VBZ/is this/DT/this slight/NN/slight colored/VBD/colored path/NNP/path. so/RB/so this/DT/this was/VBD/was the/DT/the inserted/VBN/inserted node/NN/node and/CC/and we/PRP/we just/RB/just march/VBP/march up/RP/up /,/, we/PRP/we just/RB/just follow/VBP/follow /,/, go/RB/go from/IN/from this/DT/this node/NN/node to/TO/to its/PRP$/its parent/NN/parent /,/, to/TO/to its/PRP$/its parent/NN/parent and/CC/and to/TO/to its/PRP$/its parent/NNP/parent. this/DT/this is/VBZ/is path/NN/path from/IN/from the/DT/the root/NN/root to/TO/to the/DT/the inserted/VBN/inserted node/NN/node and/CC/and on/IN/on this/DT/this path/NN/path /,/, we/PRP/we find/VBP/find the/DT/the top/JJ/top most/JJS/most element/JJ/element with/IN/with the/DT/the priority/NN/priority higher/JJR/higher than/IN/than the/DT/the priority/NN/priority of/IN/of the/DT/the inserted/VBN/inserted element/NNP/element. what/WP/what are/VBP/are the/DT/the nodes/NNS/nodes on/IN/on this/DT/this path/NN/path ?/./? these/DT/these are/VBP/are these/DT/these three/CD/three nodes/NNS/nodes /,/, they/PRP/they have/VBP/have priorities/NNS/priorities 19/CD/19 /,/, 13/CD/13 and/CC/and 11/CD/11. the/DT/the top/JJ/top most/JJS/most element/JJ/element on/IN/on this/DT/this path/NN/path with/IN/with higher/JJR/higher priority/NN/priority /,/, the/DT/the element/NN/element we/PRP/we are/VBP/are inserting/VBG/inserting is/VBZ/is priority/NN/priority 12/CD/12. this/DT/this is/VBZ/is the/DT/the top/JJ/top most/JJS/most element/JJ/element but/CC/but it/PRP/it has/VBZ/has priority/NN/priority lesser/NN/lesser than/IN/than 12/CD/12. this/DT/this is/VBZ/is the/DT/the next/JJ/next highest/NN/highest element/NN/element and/CC/and this/DT/this has/VBZ/has priority/NN/priority more/JJR/more than/IN/than 12/CD/12. this/DT/this is/VBZ/is the/DT/the top/JJ/top most/JJS/most element/JJ/element of/IN/of the/DT/the path/NN/path with/IN/with higher/JJR/higher priority/NN/priority than/IN/than that/DT/that of/IN/of the/DT/the inserted/VBN/inserted element/NNP/element. this/DT/this is/VBZ/is the/DT/the element/NN/element /,/, so/RB/so what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do now/NNP/now. we/PRP/we are/VBP/are going/VBG/going to/TO/to insert/VB/insert 12/CD/12 at/IN/at the/DT/the location/NN/location but/CC/but where/WRB/where would/MD/would 13/CD/13 go/VB/go ?/./? 13/CD/13 would/MD/would get/VB/get pushed/VBN/pushed down/RP/down and/CC/and where/WRB/where would/MD/would 19/CD/19 go/VB/go ?/./? 19/CD/19 would/MD/would get/VB/get pushed/VBN/pushed down/RP/down like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 03/CD/03 /CD/) this/DT/this is/VBZ/is exactly/RB/exactly the/DT/the same/JJ/same procedure/NN/procedure as/IN/as before/NNP/before. if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the slide/NN/slide that/IN/that we/PRP/we got/VBD/got earlier/JJR/earlier /,/, the/DT/the elements/NNS/elements where/WRB/where at/IN/at the/DT/the same/JJ/same location/NN/location except/IN/except there/EX/there we/PRP/we started/VBD/started 12/CD/12 here/RB/here and/CC/and we/PRP/we bubbled/VBD/bubbled it/PRP/it up/NNP/up. now/RB/now i/PRP/i say/VBP/say that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to directly/RB/directly figure/VB/figure out/RP/out where/WRB/where 12/CD/12 is/VBZ/is going/VBG/going to/TO/to come/VB/come and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to move/VB/move elements/NNS/elements down/NNP/down. let/VB/let ?/./? s/NNS/s argue/VBP/argue correctness/NNP/correctness. let/NN/let ?/./? s/NNS/s argue/VBP/argue that/IN/that the/DT/the procedure/NN/procedure of/IN/of the/DT/the insertion/NN/insertion is/VBZ/is really/RB/really correct/JJ/correct and/CC/and for/IN/for this/DT/this we/PRP/we look/VBP/look at/IN/at this/DT/this other/JJ/other view/NN/view of/IN/of insertion/NN/insertion that/IN/that we/PRP/we saw/VBD/saw in/IN/in the/DT/the previous/JJ/previous slide/NNP/slide. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 37/CD/37 /CD/) the/DT/the first/JJ/first claim/NN/claim is/VBZ/is that/IN/that the/DT/the only/JJ/only nodes/NNS/nodes whose/WP$/whose contents/NNS/contents changes/NNS/changes on/IN/on the/DT/the ones/NNS/ones on/IN/on this/DT/this path/NNP/path. this/DT/this is/VBZ/is the/DT/the path/NN/path that/IN/that we/PRP/we considered/VBD/considered which/WDT/which is/VBZ/is the/DT/the path/NN/path from/IN/from the/DT/the newly/RB/newly inserted/VBN/inserted node/NN/node to/TO/to the/DT/the root/NN/root and/CC/and we/PRP/we are/VBP/are changing/VBG/changing only/RB/only the/DT/the contents/NNS/contents of/IN/of this/NNP/this. we/PRP/we are/VBP/are in/IN/in fact/NN/fact only/RB/only changing/VBG/changing the/DT/the contents/NNS/contents of/IN/of this/DT/this part/NN/part of/IN/of the/DT/the path/NNP/path. if/IN/if the/DT/the heap/NN/heap property/NN/property is/VBZ/is getting/VBG/getting violated/VBN/violated /,/, the/DT/the heap/NN/heap property/NN/property can/MD/can be/VB/be violated/VBN/violated only/RB/only at/IN/at the/DT/the children/NNS/children of/IN/of these/DT/these nodes/NNP/nodes. it/PRP/it could/MD/could that/IN/that for/IN/for this/DT/this node/NN/node /,/, since/IN/since we/PRP/we are/VBP/are modifying/VBG/modifying this/DT/this content/NN/content it/PRP/it might/MD/might be/VB/be that/IN/that the/DT/the new/JJ/new priority/NN/priority of/IN/of the/DT/the parent/NN/parent is/VBZ/is larger/JJR/larger than/IN/than the/DT/the priority/NN/priority of/IN/of this/DT/this guy/NN/guy or/CC/or new/JJ/new priority/NN/priority of/IN/of the/DT/the parent/NN/parent of/IN/of this/DT/this node/NN/node is/VBZ/is larger/JJR/larger than/IN/than the/DT/the priority/NN/priority of/IN/of this/DT/this node/NN/node that/IN/that would/MD/would be/VB/be violation/NN/violation of/IN/of the/DT/the heap/NN/heap property/NNP/property. so/RB/so it/PRP/it is/VBZ/is only/RB/only for/IN/for these/DT/these two/CD/two pink/NN/pink color/NN/color nodes/VBZ/nodes that/IN/that the/DT/the heap/NN/heap properties/NNS/properties might/MD/might be/VB/be violated/NNP/violated. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 45/CD/45 /CD/) what/WP/what is/VBZ/is happening/VBG/happening ?/./? what/WP/what are/VBP/are the/DT/the new/JJ/new contents/NNS/contents of/IN/of the/DT/the parent/NN/parent of/IN/of 31/CD/31 and/CC/and 17/CD/17 ?/./? 31/CD/31 is/VBZ/is 19/CD/19 /,/, what/WP/what is/VBZ/is the/DT/the new/JJ/new contents/NNS/contents of/IN/of this/DT/this going/VBG/going to/TO/to be/VB/be ?/./? if/IN/if you/PRP/you recall/VBP/recall 19/CD/19 moved/VBN/moved down/RP/down /,/, 13/CD/13 was/VBD/was coming/VBG/coming here/RB/here and/CC/and 12/CD/12 was/VBD/was reaching/VBG/reaching there/NNP/there. the/DT/the new/JJ/new content/NN/content of/IN/of this/DT/this node/NN/node is/VBZ/is 13/CD/13 which/WDT/which is/VBZ/is only/RB/only going/VBG/going to/TO/to be/VB/be less/JJR/less than/IN/than this/NNP/this. the/DT/the new/JJ/new content/NN/content of/IN/of any/DT/any node/NN/node are/VBP/are only/RB/only going/VBG/going to/TO/to be/VB/be either/DT/either the/DT/the newly/RB/newly inserted/VBN/inserted element/NN/element or/CC/or the/DT/the parent/NN/parent of/IN/of that/DT/that node/NNP/node. the/DT/the new/JJ/new content/NN/content of/IN/of this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the content/NN/content of/IN/of its/PRP$/its parent/NN/parent and/CC/and the/DT/the content/NN/content of/IN/of the/DT/the parent/NN/parent is/VBZ/is already/RB/already smaller/JJR/smaller and/CC/and has/VBZ/has the/DT/the lower/JJR/lower priority/NN/priority that/IN/that is/VBZ/is the/DT/the priority/NN/priority of/IN/of this/DT/this guy/NNP/guy. the/DT/the priority/NN/priority of/IN/of each/DT/each node/NN/node is/VBZ/is only/RB/only going/VBG/going to/TO/to be/VB/be reduce/NN/reduce /,/, so/RB/so the/DT/the priority/NN/priority of/IN/of these/DT/these guy/NN/guy is/VBZ/is going/VBG/going to/TO/to reduce/VB/reduce because/IN/because 13/CD/13 is/VBZ/is going/VBG/going to/TO/to move/VB/move here/NNP/here. the/DT/the priority/NN/priority of/IN/of this/DT/this guy/NN/guy is/VBZ/is going/VBG/going to/TO/to reduce/VB/reduce because/IN/because newly/RB/newly inserted/VBN/inserted element/NN/element 12/CD/12 is/VBZ/is going/VBG/going to/TO/to come/VB/come here/RB/here and/CC/and recall/VBP/recall from/IN/from our/PRP$/our choice/NN/choice of/IN/of path/NN/path that/IN/that this/DT/this was/VBD/was picked/VBN/picked as/IN/as a/DT/a node/NN/node with/IN/with higher/JJR/higher priority/NN/priority than/IN/than the/DT/the priority/NN/priority of/IN/of the/DT/the element/NN/element that/IN/that was/VBD/was getting/VBG/getting inserted/NNP/inserted. this/DT/this is/VBZ/is higher/JJR/higher than/IN/than this/NNP/this. the/DT/the priority/NN/priority of/IN/of this/DT/this is/VBZ/is also/RB/also going/VBG/going to/TO/to reduce/VB/reduce as/IN/as the/DT/the consequence/NN/consequence of/IN/of insertion/NN/insertion procedure/NNP/procedure. the/DT/the priority/NN/priority of/IN/of all/DT/all of/IN/of these/DT/these nodes/NNS/nodes only/RB/only going/VBG/going to/TO/to reduce/VB/reduce the/DT/the consequence/NN/consequence of/IN/of insertion/NN/insertion procedure/NN/procedure and/CC/and ones/NNS/ones the/DT/the heap/NN/heap property/NN/property would/MD/would not/RB/not get/VB/get violated/NNP/violated. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 56/CD/56 /CD/) these/DT/these are/VBP/are going/VBG/going to/TO/to be/VB/be the/DT/the new/JJ/new priorities/NNS/priorities of/IN/of these/DT/these nodes/NNP/nodes. we/PRP/we said/VBD/said that/IN/that heap/NN/heap property/NN/property could/MD/could be/VB/be violated/VBN/violated for/IN/for this/DT/this guy/NN/guy or/CC/or for/IN/for this/DT/this guy/NNP/guy. this/DT/this should/MD/should also/RB/also have/VB/have been/VBN/been pink/NN/pink /,/, it/PRP/it could/MD/could be/VB/be violated/VBN/violated for/IN/for this/DT/this or/CC/or this/DT/this but/CC/but earlier/JJR/earlier its/PRP$/its parent/NN/parent had/VBD/had a/DT/a priority/NN/priority 19/CD/19. now/RB/now it/PRP/it has/VBZ/has a/DT/a priority/NN/priority 13/CD/13. earlier/JJR/earlier the/DT/the parent/NN/parent of/IN/of this/DT/this guy/NN/guy had/VBD/had a/DT/a priority/NN/priority of/IN/of 13/CD/13 now/RB/now it/PRP/it has/VBZ/has a/DT/a priority/NN/priority of/IN/of 12/CD/12 /,/, the/DT/the priority/NN/priority is/VBZ/is only/RB/only reducing/NNP/reducing. if/IN/if there/EX/there were/VBD/were only/RB/only reducing/VBG/reducing then/RB/then earlier/JJR/earlier if/IN/if this/DT/this had/VBD/had a/DT/a priority/NN/priority which/WDT/which was/VBD/was smaller/JJR/smaller than/IN/than the/DT/the priority/NN/priority of/IN/of this/DT/this guy/NN/guy /,/, it/PRP/it continues/VBZ/continues to/TO/to have/VB/have priority/NN/priority which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the priority/NN/priority of/IN/of this/DT/this guy/NNP/guy. if/IN/if earlier/JJR/earlier this/DT/this had/VBD/had a/DT/a priority/NN/priority which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than that/DT/that of/IN/of this/DT/this guy/NN/guy /,/, it/PRP/it continues/VBZ/continues to/TO/to have/VB/have a/DT/a priority/NN/priority which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the priority/NN/priority of/IN/of this/DT/this guy/NNP/guy. heap/NN/heap property/NN/property is/VBZ/is not/RB/not violated/VBN/violated at/IN/at all/DT/all and/CC/and so/RB/so what/WP/what we/PRP/we get/VBP/get after/IN/after insertion/NN/insertion is/VBZ/is still/RB/still a/DT/a heap/NNP/heap. i/PRP/i am/VBP/am now/RB/now going/VBG/going to/TO/to look/VB/look at/IN/at another/DT/another procedure/NN/procedure called/VBN/called heapify/NN/heapify which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use as/IN/as i/PRP/i mentioned/VBD/mentioned at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the class/NN/class /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use for/IN/for the/DT/the other/JJ/other methods/NNS/methods that/IN/that we/PRP/we have/VBP/have to/TO/to do/VB/do on/IN/on a/DT/a heap/NNP/heap. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 04/CD/04 /CD/) i/PRP/i am/VBP/am now/RB/now assuming/VBG/assuming that/IN/that my/PRP$/my heap/NN/heap is/VBZ/is kept/VBN/kept in/IN/in an/DT/an array/NN/array a/DT/a and/CC/and i/PRP/i is/VBZ/is an/DT/an index/NN/index in/IN/in to/TO/to this/DT/this array/NN/array so/IN/so heapify/NN/heapify take/NN/take the/DT/the parameter/NN/parameter as/IN/as an/DT/an index/NN/index in/IN/in to/TO/to the/DT/the array/NN/array a/NNP/a. then/RB/then the/DT/the binary/JJ/binary tree/NN/tree is/VBZ/is rooted/VBN/rooted at/IN/at the/DT/the two/CD/two children/NNS/children of/IN/of i/PRP/i /,/, left/VBD/left i/PRP/i and/CC/and right/RB/right i/PRP/i are/VBP/are the/DT/the two/CD/two children/NNS/children of/IN/of i/NNP/i. the/DT/the binary/JJ/binary trees/NNS/trees rooted/VBN/rooted at/IN/at these/DT/these two/CD/two locations/NNS/locations are/VBP/are already/RB/already heaps/RB/heaps but/CC/but it/PRP/it might/MD/might be/VB/be the/DT/the case/NN/case that/IN/that the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated at/IN/at this/DT/this node/NN/node i/PRP/i that/IN/that is/VBZ/is a/DT/a /NN/[ i/PRP/i /VBP/] might/MD/might be/VB/be larger/JJR/larger than/IN/than its/PRP$/its children/NNP/children. a/DT/a /NN/[ i/PRP/i /VBP/] might/MD/might be/VB/be larger/JJR/larger than/IN/than its/PRP$/its children/NNS/children and/CC/and this/DT/this violates/NNS/violates the/DT/the heap/NN/heap property/NNP/property. now/RB/now heapify/VB/heapify is/VBZ/is the/DT/the method/NN/method which/WDT/which tries/NNS/tries to/TO/to maintain/VB/maintain the/DT/the heap/NN/heap property/NN/property /,/, makes/VBZ/makes the/DT/the binary/JJ/binary tree/NN/tree rooted/VBD/rooted at/IN/at i/PRP/i a/DT/a heap/NN/heap by/IN/by suitable/JJ/suitable modification/NN/modification and/CC/and will/MD/will see/VB/see what/WP/what this/DT/this is/VBZ/is in/IN/in a/DT/a second/NNP/second. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this structure/NNP/structure. this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NN/heap because/IN/because this/DT/this node/NN/node right/RB/right here/RB/here at/IN/at the/DT/the very/RB/very top/JJ/top has/VBZ/has priority/NN/priority which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than the/DT/the priorities/NNS/priorities of/IN/of its/PRP$/its two/CD/two children/NNP/children. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 47/CD/47 /CD/) but/CC/but this/DT/this binary/JJ/binary tree/NN/tree /,/, if/IN/if i/PRP/i were/VBD/were to/TO/to just/RB/just restrict/VB/restrict myself/PRP/myself to/TO/to this/DT/this part/NN/part which/WDT/which is/VBZ/is a/DT/a heap/NNP/heap. why/WRB/why it/PRP/it does/VBZ/does satisfy/VB/satisfy the/DT/the heap/NN/heap property/NN/property ?/./? every/DT/every node/NN/node has/VBZ/has a/DT/a priority/NN/priority which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the priority/NN/priority of/IN/of its/PRP$/its two/CD/two children/NNP/children. this/DT/this has/VBZ/has smaller/JJR/smaller priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNS/children /,/, this/DT/this has/VBZ/has smaller/JJR/smaller priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNS/children /,/, this/DT/this has/VBZ/has smaller/JJR/smaller priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNP/children. similarly/RB/similarly this/DT/this here/RB/here is/VBZ/is a/DT/a heap/NN/heap /,/, structurally/RB/structurally as/IN/as well/RB/well as/IN/as it/PRP/it does/VBZ/does satisfy/VB/satisfy the/DT/the heap/NN/heap property/NNP/property. each/DT/each node/NN/node has/VBZ/has priority/NN/priority smaller/JJR/smaller than/IN/than its/PRP$/its two/CD/two children/NNP/children. these/DT/these two/CD/two are/VBP/are already/RB/already heaps/RB/heaps but/CC/but this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is not/RB/not a/DT/a heap/NN/heap because/IN/because the/DT/the heap/NN/heap property/NN/property is/VBZ/is getting/VBG/getting violated/VBN/violated at/IN/at this/DT/this node/NN/node /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 23/CD/23 /CD/) /./. this/DT/this does/VBZ/does not/RB/not have/VB/have priority/NN/priority smaller/JJR/smaller than/IN/than the/DT/the priority/NN/priority of/IN/of its/PRP$/its two/CD/two children/NNS/children and/CC/and some/DT/some how/WRB/how we/PRP/we want/VBP/want to/TO/to make/VB/make this/DT/this entire/JJ/entire thing/NN/thing a/DT/a heap/NNP/heap. we/PRP/we can/MD/can invoke/VB/invoke the/DT/the heapify/NN/heapify procedure/NNP/procedure. heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated at/IN/at node/NN/node with/IN/with index/NN/index one/CD/one which/WDT/which is/VBZ/is this/DT/this node/NN/node but/CC/but the/DT/the sub/NN/sub tree/NN/tree is/VBZ/is rooted/VBN/rooted at/IN/at two/CD/two /,/, two/CD/two is/VBZ/is this/DT/this and/CC/and three/CD/three is/VBZ/is this/NNP/this. so/RB/so sub/VB/sub tree/JJ/tree is/VBZ/is rooted/VBN/rooted at/IN/at two/CD/two which/WDT/which is/VBZ/is this/DT/this and/CC/and this/DT/this are/VBP/are heaps/NNP/heaps. we/PRP/we would/MD/would invoke/VB/invoke the/DT/the heapify/NN/heapify procedure/NN/procedure with/IN/with one/CD/one because/IN/because we/PRP/we want/VBP/want to/TO/to make/VB/make this/DT/this entire/JJ/entire thing/NN/thing a/DT/a heap/NNP/heap. for/IN/for heapify/NN/heapify remember/NN/remember we/PRP/we require/VBP/require that/IN/that whichever/JJR/whichever node/NN/node heapify/NN/heapify is/VBZ/is invoked/VBN/invoked on/IN/on /,/, the/DT/the sub/NN/sub tree/NN/tree is/VBZ/is rooted/VBN/rooted at/IN/at the/DT/the two/CD/two children/NNS/children of/IN/of that/DT/that node/NN/node are/VBP/are already/RB/already heaps/NNP/heaps. that/IN/that ?/./? s/NNS/s a/DT/a very/RB/very crucial/JJ/crucial part/NN/part for/IN/for heapify/NN/heapify only/RB/only then/RB/then we/PRP/we would/MD/would heapify/VB/heapify it/NNP/it. if/IN/if heapify/NN/heapify is/VBZ/is invoked/VBN/invoked at/IN/at one/CD/one /,/, it/PRP/it can/MD/can be/VB/be invoked/VBN/invoked at/IN/at one/CD/one only/RB/only because/IN/because the/DT/the sub/NN/sub trees/NNS/trees rooted/VBD/rooted at/IN/at two/CD/two children/NNS/children of/IN/of node/NN/node one/CD/one /,/, this/DT/this and/CC/and this/DT/this the/DT/the sub/NN/sub tree/NN/tree is/VBZ/is rooted/VBN/rooted here/RB/here are/VBP/are already/RB/already heaps/NNP/heaps. let/VB/let ?/./? s/NNS/s see/VBP/see how/WRB/how heapify/NN/heapify works/NNP/works. heapify/NN/heapify is/VBZ/is going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the two/CD/two children/NNS/children of/IN/of this/DT/this node/NN/node where/WRB/where the/DT/the heap/NN/heap property/NN/property is/VBZ/is correctly/RB/correctly violated/NNP/violated. you/PRP/you have/VBP/have to/TO/to look/VB/look at/IN/at the/DT/the two/CD/two children/NNS/children which/WDT/which are/VBP/are these/DT/these 10/CD/10 and/CC/and 11/CD/11 and/CC/and it/PRP/it would/MD/would take/VB/take this/DT/this smaller/JJR/smaller of/IN/of these/DT/these two/CD/two children/NNS/children and/CC/and swap/NN/swap it/PRP/it with/IN/with 17/CD/17. the/DT/the smaller/JJR/smaller is/VBZ/is 10/CD/10 /,/, it/PRP/it would/MD/would swap/VB/swap 10/CD/10 with/IN/with 17/CD/17. now/RB/now the/DT/the heap/NN/heap property/NN/property heap/NN/heap property/NN/property is/VBZ/is valid/VBN/valid at/IN/at this/DT/this node/NNP/node. this/DT/this has/VBZ/has priority/NN/priority less/JJR/less than/IN/than the/DT/the priority/NN/priority of/IN/of its/PRP$/its two/CD/two children/NNS/children but/CC/but the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated at/IN/at this/DT/this node/NN/node because/IN/because this/DT/this does/VBZ/does not/RB/not have/VB/have priority/NN/priority smaller/JJR/smaller than/IN/than the/DT/the priority/NN/priority of/IN/of these/DT/these two/CD/two children/NNP/children. once/RB/once again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do the/DT/the same/JJ/same thing/NNP/thing. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the two/CD/two children/NNS/children /,/, take/VBP/take the/DT/the smaller/JJR/smaller one/CD/one amongst/NN/amongst them/PRP/them which/WDT/which is/VBZ/is 16/CD/16 and/CC/and swap/NN/swap it/PRP/it with/IN/with this/NNP/this. the/DT/the heap/NN/heap property/NN/property is/VBZ/is now/RB/now valid/JJ/valid at/IN/at this/DT/this node/NN/node but/CC/but is/VBZ/is the/DT/the heap/NN/heap property/NN/property valid/VBD/valid at/IN/at this/DT/this node/NN/node ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 39/CD/39 /CD/) because/IN/because we/PRP/we also/RB/also changed/VBD/changed the/DT/the content/NN/content of/IN/of this/DT/this node/NNP/node. it/PRP/it is/VBZ/is /,/, because/IN/because now/RB/now when/WRB/when i/PRP/i look/VBP/look at/IN/at the/DT/the two/CD/two children/NNS/children of/IN/of this/DT/this /,/, they/PRP/they are/VBP/are 23/CD/23 and/CC/and 43/CD/43 both/DT/both of/IN/of which/WDT/which have/VBP/have priority/NN/priority higher/JJR/higher than/IN/than 17/CD/17 and/CC/and so/RB/so the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated here/-NONE-/here. now/RB/now this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is heap/NN/heap /,/, this/DT/this is/VBZ/is the/DT/the heap/NN/heap because/IN/because the/DT/the heap/NN/heap property/NN/property is/VBZ/is now/RB/now valid/JJ/valid at/IN/at every/DT/every node/NN/node in/IN/in this/DT/this tree/NNP/tree. recall/NN/recall /,/, we/PRP/we have/VBP/have changed/VBN/changed only/RB/only the/DT/the contents/NNS/contents of/IN/of these/DT/these nodes/NNP/nodes. that/IN/that ?/./? s/NNS/s the/DT/the heapify/NN/heapify procedure/NNP/procedure. once/RB/once again/RB/again to/TO/to recap/VB/recap /,/, the/DT/the heapify/NN/heapify procedure/NN/procedure can/MD/can be/VB/be invoked/VBN/invoked at/IN/at the/DT/the node/NN/node i/PRP/i /,/, only/RB/only if/IN/if the/DT/the two/CD/two children/NNS/children of/IN/of this/DT/this node/NN/node or/CC/or the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at the/DT/the two/CD/two children/NNS/children of/IN/of this/DT/this node/NN/node are/VBP/are already/RB/already heaps/NNP/heaps. once/RB/once again/RB/again we/PRP/we will/MD/will present/VB/present the/DT/the second/JJ/second view/NN/view of/IN/of heapify/NN/heapify which/WDT/which will/MD/will help/VB/help us/PRP/us prove/VB/prove the/DT/the correctness/NN/correctness of/IN/of heapify/NN/heapify very/RB/very easily/NNP/easily. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 55/CD/55 /CD/) heapify/NN/heapify essentially/RB/essentially is/VBZ/is tracing/VBG/tracing a/DT/a path/NN/path down/IN/down the/DT/the tree/NNP/tree. in/IN/in our/PRP$/our previous/JJ/previous example/NN/example /,/, this/DT/this path/NN/path was/VBD/was this/DT/this blue/JJ/blue colored/VBN/colored nodes/NNP/nodes. these/DT/these were/VBD/were the/DT/the node/NN/node whose/WP$/whose context/NN/context we/PRP/we modified/NNP/modified. if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the last/JJ/last node/NN/node on/IN/on the/DT/the path/NN/path suppose/NN/suppose i/PRP/i call/VBP/call it/PRP/it node/VBP/node j/NN/j then/RB/then the/DT/the left/NN/left and/CC/and the/DT/the right/NN/right child/NN/child of/IN/of j/NN/j have/VBP/have priority/NN/priority which/WDT/which was/VBD/was larger/JJR/larger than/IN/than the/DT/the priority/NN/priority of/IN/of node/NN/node i/NNP/i. i/PRP/i is/VBZ/is this/DT/this node/NN/node /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 22/CD/22 /CD/) /,/, i/PRP/i is/VBZ/is in/IN/in our/PRP$/our example/NN/example is/VBZ/is one/CD/one so/RB/so 43/CD/43 and/CC/and 23/CD/23 are/VBP/are both/DT/both larger/JJR/larger than/IN/than 17/CD/17. all/DT/all elements/NNS/elements on/IN/on this/DT/this path/NN/path have/VBP/have lower/JJR/lower priority/NN/priority than/IN/than their/PRP$/their siblings/NNP/siblings. what/WP/what are/VBP/are the/DT/the siblings/NNS/siblings ?/./? sibling/VBG/sibling of/IN/of 16/CD/16 is/VBZ/is 21/CD/21 /,/, sibling/VBG/sibling of/IN/of 10/CD/10 is/VBZ/is 11/CD/11 /,/, 17/CD/17 does/VBZ/does not/RB/not really/RB/really have/VB/have a/DT/a sibling/NNP/sibling. 10/CD/10 is/VBZ/is less/JJR/less than/IN/than 11/CD/11 /,/, 16/CD/16 is/VBZ/is less/JJR/less than/IN/than 21/CD/21 and/CC/and why/WRB/why is/VBZ/is this/DT/this true/JJ/true and/CC/and why/WRB/why is/VBZ/is that/IN/that the/DT/the case/NN/case that/IN/that the/DT/the priorities/NNS/priorities for/IN/for all/DT/all nodes/NNS/nodes on/IN/on this/DT/this path/NN/path have/VBP/have priorities/NNS/priorities less/RBR/less than/IN/than the/DT/the priority/NN/priority of/IN/of the/DT/the sibling/NNP/sibling. that/IN/that ?/./? s/NNS/s because/IN/because of/IN/of our/PRP$/our choice/NN/choice of/IN/of the/DT/the path/NNP/path. we/PRP/we came/VBD/came left/VBN/left because/IN/because we/PRP/we compared/VBN/compared 10/CD/10 and/CC/and 11/CD/11 and/CC/and we/PRP/we picked/VBD/picked 10/CD/10 /,/, so/RB/so that/IN/that we/PRP/we could/MD/could then/RB/then swap/VB/swap it/PRP/it with/IN/with here/RB/here and/CC/and then/RB/then when/WRB/when we/PRP/we came/VBD/came here/RB/here /,/, we/PRP/we compared/VBD/compared 16/CD/16 and/CC/and 21/CD/21 and/CC/and we/PRP/we picked/VBD/picked 16/CD/16. just/RB/just from/IN/from the/DT/the way/NN/way we/PRP/we constructed/VBD/constructed our/PRP$/our path/NN/path this/DT/this statement/NN/statement really/RB/really follows/NNP/follows. what/WP/what are/VBP/are they/PRP/they really/RB/really doing/VBG/doing in/IN/in heapify/NN/heapify ?/./? in/IN/in heapify/NN/heapify what/WP/what we/PRP/we are/VBP/are really/RB/really doing/VBG/doing is/VBZ/is that/IN/that we/PRP/we are/VBP/are moving/VBG/moving these/DT/these elements/NNS/elements up/IN/up /,/, let/VB/let me/PRP/me show/VB/show you/PRP/you how/NNP/how. i/PRP/i am/VBP/am just/RB/just showing/VBG/showing it/PRP/it in/IN/in one/CD/one step/NN/step now/RB/now but/CC/but what/WP/what we/PRP/we saw/VBD/saw earlier/RBR/earlier was/VBD/was a/DT/a sequence/NN/sequence of/IN/of step/NNP/step. this/DT/this was/VBD/was the/DT/the net/JJ/net result/NN/result /,/, 10/CD/10 moved/VBD/moved up/RP/up /,/, 16/CD/16 moved/VBD/moved up/RP/up and/CC/and this/DT/this 17/CD/17 really/RB/really came/VBD/came at/IN/at location/NN/location j/NNP/j. it/PRP/it came/VBD/came at/IN/at this/DT/this location/NNP/location. this/DT/this was/VBD/was the/DT/the net/JJ/net result/NN/result of/IN/of our/PRP$/our heapify/NN/heapify step/NNP/step. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 00/CD/00 /CD/) now/RB/now once/RB/once again/RB/again the/DT/the same/JJ/same thing/NN/thing is/VBZ/is happening/NNP/happening. 16/CD/16 was/VBD/was here/RB/here /,/, it/PRP/it was/VBD/was less/JJR/less than/IN/than its/PRP$/its sibling/NN/sibling and/CC/and it/PRP/it moved/VBD/moved up/RP/up here/NNP/here. now/RB/now 16/CD/16 is/VBZ/is less/JJR/less than/IN/than 21/CD/21 /,/, similarly/RB/similarly 10/CD/10. 10/CD/10 was/VBD/was less/JJR/less than/IN/than 11/CD/11 /,/, 10/CD/10 was/VBD/was less/JJR/less than/IN/than its/PRP$/its sibling/NN/sibling /,/, 10/CD/10 moved/VBD/moved up/RP/up here/NNP/here. now/RB/now it/PRP/it has/VBZ/has priority/NN/priority less/JJR/less than/IN/than its/PRP$/its child/NN/child and/CC/and 17/CD/17 which/WDT/which was/VBD/was here/RB/here because/IN/because of/IN/of this/DT/this property/NN/property that/IN/that the/DT/the last/JJ/last node/NN/node on/IN/on the/DT/the path/NN/path in/IN/in which/WDT/which both/DT/both of/IN/of its/PRP$/its children/NNS/children have/VBP/have probability/NN/probability which/WDT/which was/VBD/was larger/JJR/larger than/IN/than the/DT/the a/DT/a /NN/[ i/PRP/i /VBP/] /./. the/DT/the 17/CD/17 is/VBZ/is going/VBG/going to/TO/to have/VB/have lower/JJR/lower priority/NN/priority than/IN/than both/DT/both of/IN/of these/NNP/these. while/IN/while the/DT/the contents/NNS/contents of/IN/of these/DT/these three/CD/three nodes/NNS/nodes have/VBP/have changed/VBN/changed /,/, the/DT/the heap/NN/heap property/NN/property is/VBZ/is satisfied/VBN/satisfied at/IN/at all/DT/all of/IN/of these/DT/these three/CD/three nodes/NNP/nodes. this/DT/this is/VBZ/is going/VBG/going to/TO/to have/VB/have lesser/JJR/lesser priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNS/children because/IN/because of/IN/of this/DT/this property/NN/property that/IN/that we/PRP/we mention/VBP/mention here/NNP/here. this/DT/this is/VBZ/is going/VBG/going to/TO/to have/VB/have lesser/JJR/lesser priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNS/children because/IN/because of/IN/of this/DT/this priority/NN/priority /,/, this/DT/this 16/CD/16 which/WDT/which was/VBD/was here/RB/here which/WDT/which was/VBD/was earlier/RBR/earlier a/DT/a sibling/NN/sibling of/IN/of 21/CD/21 /,/, had/VBD/had a/DT/a lesser/NN/lesser priority/NN/priority than/IN/than 21/CD/21. now/RB/now it/PRP/it has/VBZ/has become/VBN/become a/DT/a parent/NN/parent and/CC/and similarly/RB/similarly for/IN/for 10/CD/10. 10/CD/10 will/MD/will have/VB/have a/DT/a lesser/NN/lesser priority/NN/priority than/IN/than this/DT/this guy/NN/guy because/IN/because this/DT/this was/VBD/was the/DT/the smaller/JJR/smaller priority/NN/priority node/NN/node amongst/NN/amongst the/DT/the two/CD/two siblings/NNS/siblings /,/, 10/CD/10 and/CC/and 11/CD/11. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 36/CD/36 /CD/) this/DT/this essentially/RB/essentially establishes/VBZ/establishes the/DT/the correctness/NN/correctness of/IN/of the/DT/the heapify/NN/heapify procedure/NNP/procedure. what/WP/what you/PRP/you get/VBP/get as/IN/as a/DT/a result/NN/result of/IN/of heapify/NN/heapify is/VBZ/is still/RB/still a/DT/a heap/NNP/heap. heapify/NN/heapify is/VBZ/is a/DT/a really/RB/really a/DT/a mechanism/NN/mechanism to/TO/to rebuild/VB/rebuild a/DT/a heap/NNP/heap. if/IN/if due/JJ/due to/TO/to our/PRP$/our operations/NNS/operations /,/, the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated at/IN/at a/DT/a particular/JJ/particular node/NN/node then/RB/then we/PRP/we can/MD/can heapify/VB/heapify at/IN/at that/DT/that particular/JJ/particular node/NNP/node. assuming/NN/assuming of/IN/of course/NN/course that/IN/that the/DT/the two/CD/two sub/NN/sub trees/NNS/trees /,/, the/DT/the two/CD/two child/NN/child sub/NN/sub trees/NNS/trees which/WDT/which are/VBP/are rooted/VBN/rooted at/IN/at that/DT/that node/NN/node have/VBP/have the/DT/the heap/NN/heap property/NN/property then/RB/then we/PRP/we can/MD/can do/VB/do heapify/VB/heapify on/IN/on that/DT/that node/NN/node and/CC/and get/VB/get a/DT/a larger/JJR/larger heap/NNP/heap. let/NN/let ?/./? s/NNS/s do/VBP/do a/DT/a quick/JJ/quick runtime/NN/runtime analysis/NN/analysis of/IN/of the/DT/the various/JJ/various procedures/NNS/procedures that/WDT/that we/PRP/we have/VBP/have seen/VBN/seen today/NNP/today. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 11/CD/11 /CD/) recall/NN/recall that/WDT/that a/DT/a heap/NN/heap of/IN/of n/NN/n nodes/NNS/nodes has/VBZ/has height/VBN/height order/NN/order log/NN/log n/NNP/n. when/WRB/when we/PRP/we are/VBP/are inserting/VBG/inserting an/DT/an element/NN/element /,/, the/DT/the insertion/NN/insertion procedure/NN/procedure was/VBD/was that/IN/that we/PRP/we would/MD/would create/VB/create a/DT/a new/JJ/new node/NN/node and/CC/and then/RB/then we/PRP/we would/MD/would move/VB/move the/DT/the element/NN/element up/RP/up the/DT/the heap/NNP/heap. in/IN/in the/DT/the worst/JJS/worst case/NN/case /,/, the/DT/the element/NN/element might/MD/might move/VB/move all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the top/NNP/top. if/IN/if its/PRP$/its moves/NNS/moves all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the top/JJ/top then/RB/then we/PRP/we require/VBP/require time/NN/time proportional/JJ/proportional to/TO/to the/DT/the height/NN/height of/IN/of the/DT/the heap/NN/heap but/CC/but an/DT/an n/NN/n node/NN/node heap/NN/heap has/VBZ/has the/DT/the height/NN/height at/IN/at most/JJS/most log/JJ/log n/NNP/n. we/PRP/we require/VBP/require at/IN/at most/JJS/most order/NN/order log/NN/log n/NN/n steps/NNS/steps to/TO/to do/VB/do an/DT/an insertion/NNP/insertion. the/DT/the other/JJ/other procedure/NN/procedure we/PRP/we looked/VBD/looked at/IN/at today/NN/today was/VBD/was the/DT/the heapify/NN/heapify procedure/NNP/procedure. in/IN/in the/DT/the heapify/NN/heapify procedure/NN/procedure on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, the/DT/the element/NN/element moved/VBD/moved down/IN/down the/DT/the heap/NNP/heap. we/PRP/we took/VBD/took the/DT/the element/NN/element so/RB/so if/IN/if we/PRP/we are/VBP/are invoking/VBG/invoking heapify/NN/heapify at/IN/at node/NN/node i/PRP/i /,/, we/PRP/we looked/VBD/looked at/IN/at node/NN/node i/PRP/i we/PRP/we looked/VBD/looked at/IN/at two/CD/two children/NNS/children of/IN/of node/NN/node i/PRP/i /,/, we/PRP/we took/VBD/took the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children and/CC/and swapped/VBD/swapped it/PRP/it with/IN/with node/NN/node i/PRP/i and/CC/and continued/VBD/continued the/DT/the process/NN/process till/NN/till the/DT/the element/NN/element came/VBD/came down/IN/down and/CC/and the/DT/the heap/NN/heap property/NN/property was/VBD/was eventually/RB/eventually satisfied/NNP/satisfied. in/IN/in the/DT/the worst/JJS/worst case/NN/case the/DT/the element/NN/element might/MD/might moved/VB/moved down/RB/down as/IN/as many/JJ/many steps/NNS/steps as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the heap/NNP/heap. the/DT/the height/NN/height of/IN/of the/DT/the heap/NN/heap is/VBZ/is only/RB/only order/JJR/order log/NN/log n/NNP/n. in/IN/in the/DT/the worst/JJS/worst case/NN/case /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for the/DT/the heapify/NN/heapify is/VBZ/is also/RB/also order/NN/order log/NN/log n/NNP/n. the/DT/the two/CD/two operation/NN/operation that/WDT/that we/PRP/we looked/VBD/looked today/NN/today insert/NN/insert and/CC/and heapify/NN/heapify /,/, both/DT/both require/NN/require only/RB/only order/NN/order log/NN/log n/NN/n time/NNP/time. we/PRP/we also/RB/also looked/VBD/looked at/IN/at the/DT/the operation/NN/operation of/IN/of minimum/JJ/minimum which/WDT/which was/VBD/was just/RB/just to/TO/to find/VB/find the/DT/the minimum/JJ/minimum element/NN/element in/IN/in the/DT/the heap/NN/heap without/IN/without removing/NN/removing it/NNP/it. just/RB/just to/TO/to find/VB/find the/DT/the minimum/JJ/minimum element/NN/element /,/, we/PRP/we could/MD/could do/VB/do it/PRP/it in/IN/in constant/JJ/constant time/NN/time because/IN/because all/DT/all we/PRP/we have/VBP/have do/VBP/do was/VBD/was to/TO/to go/VB/go to/TO/to the/DT/the root/NN/root element/NN/element of/IN/of the/DT/the heap/NN/heap and/CC/and return/NN/return the/DT/the value/NN/value of/IN/of that/DT/that /,/, return/NN/return the/DT/the element/NN/element stored/VBD/stored at/IN/at the/DT/the root/NNP/root. minimum/NN/minimum takes/VBZ/takes constant/NN/constant time/NN/time and/CC/and insertion/NN/insertion takes/VBZ/takes order/NN/order log/NN/log n/NN/n time/NNP/time. heapify/NN/heapify also/RB/also takes/VBZ/takes order/NN/order log/NN/log n/NN/n time/NN/time and/CC/and in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use heapify/NN/heapify to/TO/to remove/VB/remove the/DT/the minimum/JJ/minimum element/NN/element from/IN/from the/DT/the heap/NN/heap and/CC/and we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to do/VB/do that/DT/that in/IN/in order/NN/order log/NN/log n/NN/n time/NN/time too/NNP/too. with/IN/with that/DT/that we/PRP/we end/VBP/end to/TO/to today/NN/today ?/./? s/NNS/s discussion/NNP/discussion. in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to use/VB/use heapify/NN/heapify to/TO/to remove/VB/remove the/DT/the minimum/JJ/minimum element/NN/element /,/, the/DT/the delete/JJ/delete min/NN/min operation/NNP/operation. we/PRP/we also/RB/also going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to create/VB/create a/DT/a heap/NN/heap quickly/RB/quickly in/IN/in order/NN/order n/NN/n time/NN/time and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how heaps/NNS/heaps can/MD/can be/VB/be used/VBN/used to/TO/to do/VB/do sorting/VBG/sorting efficiently.thank/JJ/efficiently.thank you/NNP/you. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 21/CD/21 binary/JJ/binary heaps/NNS/heaps we/PRP/we will/MD/will continue/VB/continue our/PRP$/our discussion/NN/discussion of/IN/of binary/JJ/binary heaps/NNS/heaps in/IN/in this/DT/this class/NNP/class. recall/NN/recall that/WDT/that in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we saw/VBD/saw what/WP/what a/DT/a binary/JJ/binary heap/NN/heap was/VBD/was /,/, we/PRP/we also/RB/also looked/VBD/looked at/IN/at the/DT/the operations/NNS/operations of/IN/of insertion/NN/insertion and/CC/and heapify/NN/heapify on/IN/on a/DT/a binary/JJ/binary heap/NNP/heap. to/TO/to recall/VB/recall a/DT/a binary/JJ/binary heap/NN/heap has/VBZ/has two/CD/two properties/NNS/properties two/CD/two critical/JJ/critical properties/NNS/properties /,/, one/CD/one is/VBZ/is the/DT/the structural/JJ/structural property/NN/property where/WRB/where we/PRP/we require/VBP/require that/IN/that the/DT/the structure/NN/structure of/IN/of the/DT/the heap/NN/heap be/VB/be similar/JJ/similar to/TO/to that/DT/that of/IN/of a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. so/RB/so all/DT/all the/DT/the levels/NNS/levels except/IN/except the/DT/the last/JJ/last level/NN/level of/IN/of full/JJ/full and/CC/and even/RB/even the/DT/the last/JJ/last level/NN/level is/VBZ/is what/WP/what we/PRP/we called/VBD/called left/VBN/left full/JJ/full that/IN/that is/VBZ/is all/DT/all the/DT/the nodes/NNS/nodes in/IN/in the/DT/the last/JJ/last level/NN/level are/VBP/are as/RB/as left/VBN/left as/IN/as possible/NNP/possible. the/DT/the other/JJ/other property/NN/property was/VBD/was the/DT/the heap/NN/heap property/NN/property which/WDT/which was/VBD/was that/IN/that for/IN/for any/DT/any node/NN/node /,/, the/DT/the priority/NN/priority of/IN/of that/DT/that node/NN/node should/MD/should be/VB/be less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the priority/NN/priority of/IN/of its/PRP$/its two/CD/two children/NNP/children. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 05/CD/05 /CD/) so/RB/so today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the operations/NNS/operations of/IN/of deleting/VBG/deleting the/DT/the minimum/JJ/minimum element/NN/element from/IN/from a/DT/a binary/JJ/binary heap/NN/heap and/CC/and building/NN/building a/DT/a heap/NNP/heap. it/PRP/it is/VBZ/is very/RB/very easy/JJ/easy to/TO/to build/VB/build a/DT/a heap/NN/heap using/VBG/using repeated/VBN/repeated insertions/NNS/insertions but/CC/but today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do a/DT/a build/NN/build operation/NN/operation /,/, it/PRP/it just/RB/just takes/VBZ/takes linear/JJ/linear time/NNP/time. then/RB/then we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to use/VB/use binary/JJ/binary heaps/NNS/heaps to/TO/to do/VB/do sorting/VBG/sorting and/CC/and that/IN/that procedure/NN/procedure is/VBZ/is called/VBN/called heap/NN/heap sort/NNP/sort. so/RB/so recall/JJ/recall that/IN/that the/DT/the minimum/JJ/minimum element/NN/element is/VBZ/is the/DT/the one/CD/one at/IN/at the/DT/the top/JJ/top of/IN/of the/DT/the heap/NNP/heap. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 35/CD/35 /CD/) so/RB/so one/CD/one way/NN/way of/IN/of doing/VBG/doing a/DT/a delete/JJ/delete min/NN/min is/VBZ/is to/TO/to just/RB/just remove/VB/remove this/DT/this element/NN/element and/CC/and then/RB/then we/PRP/we have/VBP/have an/DT/an empty/JJ/empty space/NN/space at/IN/at the/DT/the root/NNP/root. so/RB/so we/PRP/we have/VBP/have to/TO/to fill/VB/fill up/RP/up this/DT/this empty/NN/empty space/NN/space and/CC/and to/TO/to fill/VB/fill up/RP/up the/DT/the empty/NN/empty space/NN/space it/PRP/it would/MD/would be/VB/be natural/JJ/natural to/TO/to promote/VB/promote one/CD/one of/IN/of the/DT/the two/CD/two children/NNS/children of/IN/of this/DT/this root/NN/root element/NN/element to/TO/to fill/VB/fill this/DT/this empty/NN/empty space/NNP/space. so/RB/so if/IN/if you/PRP/you were/VBD/were to/TO/to do/VB/do that/DT/that then/RB/then this/DT/this empty/NN/empty space/NN/space would/MD/would move/VB/move down/IN/down into/IN/into the/DT/the tree/JJ/tree /,/, move/NN/move down/RB/down the/DT/the tree/NN/tree and/CC/and it/PRP/it might/MD/might end/VB/end up/RP/up at/IN/at any/DT/any particular/JJ/particular location/NN/location in/IN/in the/DT/the last/JJ/last level/NNP/level. so/IN/so that/IN/that the/DT/the resulting/VBG/resulting tree/NN/tree might/MD/might not/RB/not be/VB/be left/VBN/left filled/-NONE-/filled. so/RB/so just/RB/just to/TO/to illustrate/VB/illustrate what/WP/what i/PRP/i am/VBP/am saying/VBG/saying here/RB/here let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this picture/NNP/picture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 14/CD/14 /CD/) we/PRP/we are/VBP/are trying/VBG/trying to/TO/to delete/VB/delete a/DT/a minimum/JJ/minimum element/NN/element from/IN/from the/DT/the heap/NN/heap which/WDT/which is/VBZ/is eight/NNP/eight. so/RB/so suppose/RB/suppose i/PRP/i were/VBD/were to/TO/to do/VB/do that/NNP/that. so/RB/so this/DT/this creates/VBZ/creates an/DT/an empty/NN/empty location/NN/location here/RB/here /,/, now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children element/NN/element and/CC/and push/VB/push it/PRP/it up/RP/up here/RB/here /,/, move/VBP/move it/PRP/it up/IN/up here/NNP/here. so/RB/so 10/CD/10 is/VBZ/is the/DT/the smaller/JJR/smaller one/CD/one i/PRP/i move/VBP/move 10/CD/10 up/IN/up there/EX/there /,/, so/RB/so i/PRP/i have/VBP/have an/DT/an empty/JJ/empty location/NN/location now/RB/now here/NNP/here. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 36/CD/36 /CD/) so/RB/so it/PRP/it is/VBZ/is natural/JJ/natural to/TO/to take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and move/VB/move it/PRP/it up/RP/up there/RB/there and/CC/and this/DT/this moves/NNS/moves the/DT/the empty/NN/empty location/NN/location here/RB/here and/CC/and now/RB/now it/PRP/it is/VBZ/is natural/JJ/natural to/TO/to take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two /,/, 23/CD/23 and/CC/and 43/CD/43 and/CC/and move/NN/move it/PRP/it up/IN/up there/EX/there at/IN/at that/DT/that empty/NN/empty location/NNP/location. so/RB/so that/IN/that now/RB/now we/PRP/we have/VBP/have an/DT/an empty/JJ/empty location/NN/location here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 59/CD/59 /CD/) now/RB/now while/IN/while this/DT/this does/VBZ/does satisfy/NN/satisfy the/DT/the heap/NN/heap property/NNP/property. this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NN/heap because/IN/because it/PRP/it doesn/VBP/doesn ?/./? t/NN/t satisfy/NN/satisfy the/DT/the structural/JJ/structural property/NN/property of/IN/of a/DT/a heap/NNP/heap. the/DT/the elements/NNS/elements at/IN/at the/DT/the level/NN/level are/VBP/are not/RB/not left/VBN/left filled/NNP/filled. there/RB/there is/VBZ/is an/DT/an empty/NN/empty slot/NN/slot here/NNP/here. so/RB/so we/PRP/we can/MD/can really/RB/really do/VB/do delete/JJ/delete min/NN/min in/IN/in this/DT/this manner/NN/manner but/CC/but this/DT/this is/VBZ/is close/JJ/close to/TO/to what/WP/what we/PRP/we will/MD/will be/VB/be doing/VBG/doing in/IN/in our/PRP$/our delete/JJ/delete min/NN/min and/CC/and let/VB/let ?/./? s/NNS/s see/VBP/see what/WP/what is/VBZ/is the/DT/the right/NN/right procedure/NN/procedure for/IN/for doing/VBG/doing a/DT/a delete/JJ/delete min/NNP/min. so/RB/so we/PRP/we need/VBP/need to/TO/to get/VB/get rid/JJ/rid of/IN/of 8/CD/8. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 35/CD/35 /CD/) now/RB/now when/WRB/when we/PRP/we get/VBP/get rid/VBN/rid of/IN/of 8/CD/8 /,/, the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in this/DT/this heap/NN/heap is/VBZ/is going/VBG/going to/TO/to reduce/NNP/reduce. so/RB/so structurally/RB/structurally this/DT/this heap/NN/heap should/MD/should not/RB/not be/VB/be having/VBG/having this/DT/this node/NN/node any/DT/any more/RBR/more here/NNP/here. so/RB/so it/PRP/it makes/VBZ/makes sense/NN/sense to/TO/to move/VB/move this/DT/this last/JJ/last element/NN/element here/RB/here /,/, so/RB/so we/PRP/we knock/VBP/knock off/RP/off eight/CD/eight and/CC/and then/RB/then we/PRP/we move/VBP/move this/DT/this last/JJ/last element/NN/element at/IN/at this/DT/this place/NN/place and/CC/and remove/VB/remove this/DT/this node/NNP/node. now/RB/now structurally/RB/structurally this/DT/this is/VBZ/is a/DT/a heap/NN/heap but/CC/but it/PRP/it doesn/VBP/doesn ?/./? t/NN/t satisfy/NN/satisfy the/DT/the heap/NN/heap property/NN/property now/NNP/now. so/RB/so to/TO/to make/VB/make sure/JJ/sure if/IN/if it/PRP/it satisfy/VBP/satisfy the/DT/the heap/NN/heap property/NN/property we/PRP/we have/VBP/have to/TO/to adjust/VB/adjust the/DT/the contents/NNS/contents of/IN/of the/DT/the various/JJ/various nodes/NNS/nodes but/CC/but now/RB/now note/VBP/note the/DT/the following/VBG/following interesting/JJ/interesting thing/NNP/thing. this/DT/this sub/NN/sub tree/NN/tree is/VBZ/is a/DT/a heap/NN/heap and/CC/and so/RB/so is/VBZ/is this/DT/this sub/NN/sub tree/NN/tree is/VBZ/is a/DT/a heap/NNP/heap. the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated only/RB/only at/IN/at this/DT/this node/NN/node /,/, this/DT/this does/VBZ/does not/RB/not have/VB/have a/DT/a priority/NN/priority less/NN/less than/IN/than the/DT/the priority/NN/priority of/IN/of two/CD/two children/NNP/children. so/RB/so but/CC/but we/PRP/we know/VBP/know for/IN/for procedure/NN/procedure for/IN/for taking/VBG/taking care/NN/care of/IN/of this/DT/this problem/NNP/problem. if/IN/if this/DT/this is/VBZ/is a/DT/a heap/NN/heap and/CC/and this/DT/this is/VBZ/is a/DT/a heap/NN/heap /,/, all/DT/all we/PRP/we have/VBP/have to/TO/to do/VB/do is/VBZ/is to/TO/to run/VB/run a/DT/a heapify/NN/heapify procedure/NN/procedure on/IN/on this/DT/this particular/JJ/particular node/NNP/node. so/RB/so we/PRP/we just/RB/just have/VBP/have to/TO/to do/VB/do heapify/JJ/heapify one/CD/one and/CC/and recall/NN/recall what/WP/what does/VBZ/does heapify/VB/heapify one/CD/one do/NNP/do. heapify/NN/heapify one/CD/one we/PRP/we saw/VBD/saw also/RB/also saw/VBD/saw this/DT/this in/IN/in the/DT/the last/JJ/last class/NNP/class. heapify/NN/heapify one/CD/one would/MD/would take/VB/take the/DT/the minimum/JJ/minimum of/IN/of these/DT/these two/CD/two which/WDT/which is/VBZ/is 10/CD/10 /,/, swap/NN/swap 10/CD/10 and/CC/and 17/CD/17. the/DT/the heap/NN/heap property/NN/property is/VBZ/is valid/VBN/valid at/IN/at this/DT/this node/NN/node but/CC/but it/PRP/it ?/./? s/NNS/s now/RB/now violated/VBN/violated at/IN/at this/DT/this node/NNP/node. so/RB/so once/RB/once again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take the/DT/the smaller/JJR/smaller of/IN/of its/PRP$/its two/CD/two children/NNS/children 16/CD/16 and/CC/and swap/NN/swap it/PRP/it with/IN/with 17/CD/17. now/RB/now the/DT/the heap/NN/heap property/NN/property is/VBZ/is valid/VBN/valid at/IN/at this/DT/this node/NN/node but/CC/but while/IN/while it/PRP/it ?/./? s/NNS/s also/RB/also valid/VBD/valid at/IN/at this/DT/this node/NN/node because/IN/because if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the two/CD/two children/NNS/children /,/, they/PRP/they are/VBP/are both/DT/both larger/JJR/larger than/IN/than 17/CD/17. so/RB/so this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is now/RB/now a/DT/a heap/NN/heap and/CC/and we/PRP/we have/VBP/have deleted/VBN/deleted the/DT/the minimum/JJ/minimum element/NNP/element. so/RB/so this/DT/this is/VBZ/is the/DT/the delete/JJ/delete min/NN/min procedure/NNP/procedure. to/TO/to recap/VB/recap in/IN/in the/DT/the delete/JJ/delete min/NN/min procedure/NN/procedure we/PRP/we are/VBP/are going/VBG/going to/TO/to remove/VB/remove the/DT/the minimum/JJ/minimum element/NN/element /,/, take/VBP/take the/DT/the last/JJ/last element/NN/element of/IN/of the/DT/the heap/NN/heap which/WDT/which means/VBZ/means go/VBP/go to/TO/to the/DT/the last/JJ/last level/NN/level and/CC/and take/VB/take the/DT/the right/NN/right most/JJS/most element/NNP/element. in/IN/in the/DT/the array/NN/array implementation/NN/implementation this/DT/this just/RB/just corresponds/VBZ/corresponds to/TO/to the/DT/the last/JJ/last element/NN/element in/IN/in the/DT/the array/NNP/array. take/NN/take that/WDT/that element/NN/element and/CC/and put/VBD/put it/PRP/it at/IN/at the/DT/the root/NN/root and/CC/and then/RB/then just/RB/just do/VBP/do a/DT/a heapify/NN/heapify of/IN/of the/DT/the root/NN/root /,/, heapify/NN/heapify one/NNP/one. so/RB/so this/DT/this would/MD/would make/VB/make this/DT/this entire/JJ/entire thing/NN/thing a/DT/a heap/NN/heap once/RB/once again/NNP/again. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 00/CD/00 /CD/) so/RB/so this/DT/this was/VBD/was the/DT/the delete/JJ/delete min/NN/min procedure/NNP/procedure. fairly/RB/fairly simple/JJ/simple all/DT/all it/PRP/it required/VBD/required was/VBD/was the/DT/the heapify/NN/heapify procedure/NNP/procedure. we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to see/VB/see another/DT/another application/NN/application of/IN/of heapify/NN/heapify procedure/NN/procedure and/CC/and that/IN/that is/VBZ/is to/TO/to create/VB/create a/DT/a heap/NNP/heap. one/CD/one way/NN/way of/IN/of building/NN/building a/DT/a heap/NN/heap is/VBZ/is to/TO/to just/RB/just repeatedly/RB/repeatedly insert/VB/insert the/DT/the elements/NNS/elements in/IN/in the/DT/the heap/NNP/heap. so/RB/so we/PRP/we could/MD/could insert/VB/insert the/DT/the first/JJ/first element/NN/element /,/, second/JJ/second element/NN/element and/CC/and the/DT/the third/JJ/third element/NN/element and/CC/and so/RB/so on/IN/on and/CC/and on/IN/on and/CC/and how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this procedure/NN/procedure take/VB/take ?/./? so/RB/so recall/RB/recall that/IN/that to/TO/to insert/VB/insert an/DT/an element/NN/element we/PRP/we take/VBP/take log/NN/log of/IN/of the/DT/the number/NN/number of/IN/of elements/NNS/elements that/WDT/that are/VBP/are already/RB/already in/IN/in the/DT/the heap/NNP/heap. so/RB/so to/TO/to insert/VB/insert the/DT/the first/JJ/first element/NN/element we/PRP/we will/MD/will take/VB/take order/NN/order log/NN/log one/CD/one time/NN/time /,/, for/IN/for the/DT/the second/JJ/second element/NN/element we/PRP/we would/MD/would take/VB/take order/NN/order log/NN/log two/CD/two time/NN/time /,/, for/IN/for the/DT/the third/JJ/third we/PRP/we will/MD/will take/VB/take order/NN/order log/NN/log 3/CD/3 time/NN/time and/CC/and so/RB/so on/IN/on and/CC/and on/IN/on all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to n/VB/n /,/, if/IN/if you/PRP/you were/VBD/were to/TO/to insert/VB/insert n/NN/n elements/NNS/elements the/DT/the last/JJ/last element/NN/element would/MD/would take/VB/take order/NN/order log/NN/log n/NN/n time/NN/time to/TO/to insert/NNP/insert. so/RB/so if/IN/if you/PRP/you some/DT/some up/RP/up this/DT/this series/NN/series it/PRP/it ?/./? s/NNS/s exactly/RB/exactly log/JJ/log of/IN/of n/NN/n factorial/JJ/factorial which/WDT/which is/VBZ/is the/DT/the same/JJ/same as/IN/as n/NN/n log/NN/log n/NNP/n. this/DT/this simple/NN/simple minded/VBD/minded method/NN/method of/IN/of creating/VBG/creating a/DT/a heap/NN/heap by/IN/by repeated/VBN/repeated insertion/NN/insertion takes/VBZ/takes order/NN/order n/NN/n log/NN/log n/NN/n time/NNP/time. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at this/DT/this other/JJ/other method/NN/method of/IN/of creating/VBG/creating a/DT/a heap/NN/heap which/WDT/which is/VBZ/is going/VBG/going to/TO/to take/VB/take only/RB/only linear/JJ/linear time/NN/time and/CC/and the/DT/the key/JJ/key to/TO/to this/DT/this is/VBZ/is to/TO/to create/VB/create the/DT/the heap/NN/heap bottom/NN/bottom up/NNP/up. so/RB/so note/VB/note that/IN/that this/DT/this point/NN/point /,/, this/DT/this is/VBZ/is not/RB/not the/DT/the heap/NNP/heap. these/DT/these are/VBP/are the/DT/the elements/NNS/elements that/WDT/that were/VBD/were given/VBN/given to/TO/to me/PRP/me /,/, i/PRP/i just/RB/just put/VBD/put them/PRP/them at/IN/at arbitrary/JJ/arbitrary locations/NNS/locations in/IN/in this/DT/this heap/NNP/heap. so/RB/so in/IN/in the/DT/the array/NN/array so/RB/so it/PRP/it just/RB/just means/VBZ/means that/DT/that since/IN/since we/PRP/we implementing/VBG/implementing heaps/NNS/heaps using/VBG/using array/NN/array /,/, so/RB/so we/PRP/we just/RB/just put/VBD/put all/DT/all the/DT/the elements/NNS/elements that/WDT/that we/PRP/we have/VBP/have to/TO/to make/VB/make into/IN/into a/DT/a heap/NN/heap /,/, we/PRP/we just/RB/just put/VBD/put them/PRP/them into/IN/into the/DT/the array/NNP/array. now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to create/VB/create the/DT/the heap/NN/heap bottom/NN/bottom up/IN/up /,/, so/RB/so note/VB/note that/IN/that these/DT/these are/VBP/are already/RB/already heaps/NNP/heaps. look/NN/look at/IN/at this/DT/this sub/NN/sub tree/NN/tree rooted/VBD/rooted here/RB/here which/WDT/which is/VBZ/is just/RB/just this/DT/this node/NN/node itself/PRP/itself /,/, this/DT/this is/VBZ/is a/DT/a heap/NN/heap because/IN/because it/PRP/it doesn/VBP/doesn ?/./? t/NN/t have/VBP/have a/DT/a child/NN/child /,/, any/DT/any children/NNP/children. so/RB/so it/PRP/it does/VBZ/does satisfy/VB/satisfy the/DT/the heap/NN/heap property/NNP/property. so/RB/so these/DT/these individual/JJ/individual leaves/NNS/leaves are/VBP/are heaps/RB/heaps so/RB/so no/DT/no problem/NN/problem here/NNP/here. now/RB/now what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do when/WRB/when we/PRP/we say/VBP/say we/PRP/we are/VBP/are going/VBG/going to/TO/to create/VB/create the/DT/the heaps/NNS/heaps bottom/VBP/bottom up/RP/up is/VBZ/is we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make a/DT/a heap/NN/heap out/IN/out of/IN/of this/NNP/this. so/RB/so we/PRP/we would/MD/would want/VB/want that/IN/that the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at this/DT/this node/NN/node also/RB/also becomes/VBZ/becomes a/DT/a heap/NNP/heap. what/WP/what is/VBZ/is the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at this/DT/this node/NN/node ?/./? it/PRP/it ?/./? s/NNS/s this/DT/this sub/NN/sub tree/NNP/tree. how/WRB/how will/MD/will we/VB/we make/VB/make this/DT/this into/IN/into a/DT/a heap/NN/heap ?/./? this/DT/this is/VBZ/is already/RB/already a/DT/a heap/NN/heap /,/, we/PRP/we have/VBP/have to/TO/to make/VB/make this/DT/this entire/JJ/entire thing/NN/thing into/IN/into a/DT/a heap/NNP/heap. so/RB/so we/PRP/we will/MD/will just/RB/just run/VB/run a/DT/a heapify/NN/heapify procedure/NN/procedure on/IN/on this/DT/this and/CC/and that/IN/that is/VBZ/is what/WP/what happening/VBG/happening here/NNP/here. this/DT/this element/NN/element would/MD/would be/VB/be at/IN/at location/NN/location n/NN/n by/IN/by 2/CD/2 /,/, floor/NN/floor of/IN/of n/NN/n by/IN/by 2/CD/2. we/PRP/we are/VBP/are going/VBG/going to/TO/to run/VB/run a/DT/a heapify/NN/heapify procedure/NN/procedure on/IN/on this/DT/this file/NNP/file. what/WP/what would/MD/would heapify/VB/heapify do/VB/do ?/./? heapify/VB/heapify would/MD/would just/RB/just compare/VB/compare this/DT/this with/IN/with its/PRP$/its two/CD/two children/NNS/children whichever/RB/whichever is/VBZ/is the/DT/the smaller/JJR/smaller child/NN/child /,/, so/RB/so it/PRP/it has/VBZ/has only/RB/only one/CD/one child/NN/child /,/, so/RB/so it/PRP/it will/MD/will just/RB/just take/VB/take this/DT/this smaller/JJR/smaller child/NN/child and/CC/and swap/NN/swap it/PRP/it here/NNP/here. now/RB/now this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is a/DT/a heap/NNP/heap. now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at this/DT/this element/NN/element /,/, so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make a/DT/a heap/NN/heap out/IN/out of/IN/of all/PDT/all of/IN/of these/DT/these four/CD/four sub/NN/sub trees/NNS/trees now/NNP/now. so/RB/so we/PRP/we are/VBP/are basically/RB/basically go/VB/go to/TO/to this/DT/this element/NN/element /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at this/DT/this element/NN/element and/CC/and make/VB/make it/PRP/it a/DT/a heap/NNP/heap. so/RB/so what/WP/what is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at this/DT/this element/NN/element ?/./? it/PRP/it has/VBZ/has these/DT/these 3/CD/3 nodes/NNS/nodes in/IN/in it/PRP/it 13/CD/13 /,/, 11/CD/11 and/CC/and 19/CD/19. how/WRB/how do/VBP/do i/PRP/i make/VB/make a/DT/a heap/NN/heap ?/./? i/PRP/i run/VBP/run heapify/JJ/heapify on/IN/on this/NNP/this. to/TO/to run/VB/run heapify/NN/heapify the/DT/the first/JJ/first thing/NN/thing that/WDT/that heapify/NN/heapify does/VBZ/does is/VBZ/is it/PRP/it takes/VBZ/takes this/DT/this /,/, looks/VBZ/looks at/IN/at the/DT/the two/CD/two children/NNS/children /,/, takes/VBZ/takes the/DT/the smaller/JJR/smaller of/IN/of t/NN/t children/NNS/children and/CC/and swaps/NNS/swaps it/PRP/it with/IN/with this/NNP/this. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to make/VB/make a/DT/a heap/NN/heap out/IN/out of/IN/of this/NNP/this. the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children is/VBZ/is 11/CD/11 so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to swap/VB/swap 11/CD/11 and/CC/and 13/CD/13. so/RB/so this/DT/this also/RB/also now/RB/now becomes/VBZ/becomes a/DT/a heap/NNP/heap. similarly/RB/similarly i/PRP/i now/RB/now need/VBP/need to/TO/to make/VB/make this/DT/this /,/, the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted here/RB/here a/DT/a heap/NNP/heap. the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children is/VBZ/is 8/CD/8 /,/, i/PRP/i swap/VBP/swap 8/CD/8 and/CC/and 21/CD/21. now/RB/now i/PRP/i need/VBP/need to/TO/to make/VB/make the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at this/DT/this node/NN/node a/DT/a heap/NN/heap /,/, these/DT/these are/VBP/are the/DT/the two/CD/two children/NNS/children i/PRP/i want/VBP/want to/TO/to make/VB/make this/DT/this a/DT/a heap/NN/heap but/CC/but note/VB/note this/DT/this is/VBZ/is already/RB/already a/DT/a heap/NNP/heap. this/DT/this is/VBZ/is a/DT/a heap/NN/heap /,/, this/DT/this is/VBZ/is a/DT/a heap/NN/heap and/CC/and this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is a/DT/a heap/NN/heap because/IN/because the/DT/the heap/NN/heap property/NN/property is/VBZ/is also/RB/also satisfied/VBN/satisfied here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 15/CD/15 /CD/) /./. so/RB/so now/RB/now i/PRP/i have/VBP/have these/DT/these 4/CD/4 heaps/NNS/heaps /,/, these/DT/these are/VBP/are all/DT/all heaps/NNP/heaps. now/RB/now i/PRP/i am/VBP/am in/IN/in a/DT/a position/NN/position to/TO/to run/VB/run a/DT/a heapify/NN/heapify operation/NN/operation here/NNP/here. why/WRB/why run/VBN/run a/DT/a heapify/NN/heapify operation/NN/operation here/RB/here ?/./? this/DT/this is/VBZ/is a/DT/a heap/NN/heap /,/, this/DT/this is/VBZ/is a/DT/a heap/NN/heap so/IN/so i/PRP/i can/MD/can now/RB/now run/VB/run a/DT/a heapify/NN/heapify operation/NN/operation on/IN/on this/DT/this one/CD/one and/CC/and make/VB/make this/DT/this entire/JJ/entire thing/NN/thing a/DT/a heap/NNP/heap. to/TO/to see/VB/see the/DT/the advantage/NN/advantage of/IN/of heapify/NN/heapify /,/, this/DT/this is/VBZ/is already/RB/already a/DT/a heap/NN/heap /,/, this/DT/this is/VBZ/is already/RB/already a/DT/a heap/NN/heap so/IN/so i/PRP/i can/MD/can make/VB/make a/DT/a heap/NN/heap out/IN/out of/IN/of this/NNP/this. so/RB/so to/TO/to make/VB/make a/DT/a heap/NN/heap out/IN/out of/IN/of this/DT/this when/WRB/when i/PRP/i run/VBP/run heapify/JJ/heapify what/WP/what does/VBZ/does it/PRP/it do/VBP/do ?/./? so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to make/VB/make the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at this/DT/this node/NN/node a/DT/a heap/NN/heap now/NNP/now. to/TO/to do/VB/do that/DT/that i/PRP/i have/VBP/have to/TO/to take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and swap/NN/swap it/PRP/it there/EX/there so/RB/so that/IN/that is/VBZ/is 11/CD/11 and/CC/and 26/CD/26 swapped/VBD/swapped and/CC/and now/RB/now recall/VBP/recall we/PRP/we are/VBP/are doing/VBG/doing heapify/NNP/heapify. so/RB/so heapify/JJ/heapify would/MD/would bubble/VB/bubble up/RP/up the/DT/the element/NN/element all/DT/all the/DT/the way/NN/way to/TO/to the/DT/the bottom/NN/bottom if/IN/if need/NN/need be/NNP/be. so/RB/so as/IN/as a/DT/a consequence/NN/consequence of/IN/of this/DT/this swap/NN/swap /,/, the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated at/IN/at this/DT/this one/NNP/one. this/DT/this node/NN/node now/RB/now has/VBZ/has a/DT/a larger/JJR/larger priority/NN/priority than/IN/than its/PRP$/its two/CD/two children/NNP/children. so/RB/so once/RB/once again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and swap/NN/swap it/PRP/it with/IN/with this/DT/this and/CC/and now/RB/now this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is a/DT/a heap/NN/heap sort/NNP/sort. this/DT/this was/VBD/was just/RB/just a/DT/a heapify/NN/heapify operation/NN/operation on/IN/on this/DT/this node/NNP/node. the/DT/the heapify/NN/heapify operation/NN/operation on/IN/on this/DT/this node/NN/node just/RB/just doesn/NN/doesn ?/./? t/NN/t stop/VB/stop with/IN/with one/CD/one swap/NNP/swap. it/PRP/it will/MD/will swap/VB/swap and/CC/and if/IN/if need/NN/need be/VB/be bubble/JJ/bubble the/DT/the element/NN/element down/IN/down and/CC/and that/IN/that ?/./? s/NNS/s what/WP/what happened/VBN/happened here/NNP/here. now/RB/now i/PRP/i need/VBP/need to/TO/to run/VB/run a/DT/a heapify/NN/heapify operation/NN/operation on/IN/on this/DT/this node/NN/node to/TO/to make/VB/make this/DT/this entire/JJ/entire thing/NN/thing a/DT/a heap/NNP/heap. this/DT/this is/VBZ/is already/RB/already a/DT/a heap/NN/heap /,/, this/DT/this is/VBZ/is already/RB/already a/DT/a heap/NN/heap /,/, i/PRP/i need/VBP/need to/TO/to make/VB/make this/DT/this entire/JJ/entire thing/NN/thing a/DT/a heap/NNP/heap. so/RB/so once/RB/once again/RB/again it/PRP/it will/MD/will take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two which/WDT/which is/VBZ/is 8/CD/8 in/IN/in this/DT/this case/NN/case and/CC/and swap/NN/swap it/PRP/it with/IN/with 43/CD/43 and/CC/and now/RB/now this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NN/heap because/IN/because the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated here/-NONE-/here. so/RB/so i/PRP/i need/VBP/need to/TO/to run/VB/run a/DT/a heapify/NN/heapify essentially/RB/essentially on/IN/on this/DT/this one/CD/one or/CC/or actually/RB/actually we/PRP/we are/VBP/are just/RB/just part/NN/part of/IN/of the/DT/the larger/JJR/larger heapify/NN/heapify /,/, so/RB/so we/PRP/we are/VBP/are doing/VBG/doing the/DT/the heapify/NNP/heapify. we/PRP/we took/VBD/took the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children swapped/VBD/swapped /,/, now/RB/now we/PRP/we come/VBP/come to/TO/to this/DT/this node/NNP/node. if/IN/if the/DT/the heap/NN/heap property/NN/property is/VBZ/is validated/VBN/validated here/RB/here which/WDT/which it/PRP/it is/VBZ/is /,/, i/PRP/i will/MD/will take/VB/take the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children /,/, swap/NN/swap with/IN/with it/PRP/it 43/CD/43 /,/, so/RB/so 21/CD/21 and/CC/and 43/CD/43 get/NN/get swapped/NNP/swapped. so/RB/so now/RB/now this/DT/this is/VBZ/is a/DT/a heap/NN/heap /,/, this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is a/DT/a heap/NN/heap and/CC/and all/DT/all that/DT/that remains/VBZ/remains is/VBZ/is to/TO/to make/VB/make this/DT/this entire/JJ/entire thing/NN/thing a/DT/a heap/NNP/heap. the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated here/RB/here so/RB/so i/PRP/i run/VBP/run a/DT/a heapify/NN/heapify operation/NN/operation on/IN/on this/NNP/this. the/DT/the heapify/NN/heapify operation/NN/operation will/MD/will take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two nodes/NNS/nodes and/CC/and swap/NN/swap it/PRP/it with/IN/with 23/CD/23. so/RB/so it/PRP/it ?/./? s/NNS/s going/VBG/going to/TO/to happen/VB/happen now/RB/now /,/, 8/CD/8 and/CC/and 23/CD/23 get/NN/get exchanged/NNP/exchanged. now/RB/now the/DT/the heapify/NN/heapify continues/VBZ/continues it/PRP/it just/RB/just doesn/VBP/doesn ?/./? t/NN/t stop/VB/stop with/IN/with this/DT/this because/IN/because now/RB/now this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NN/heap we/PRP/we have/VBP/have changed/VBN/changed the/DT/the content/NN/content of/IN/of this/DT/this node/NNP/node. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and swap/NN/swap it/PRP/it with/IN/with 23/CD/23 and/CC/and then/RB/then now/RB/now this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NNP/heap. so/RB/so we/PRP/we go/VBP/go and/CC/and take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and swap/NN/swap it/PRP/it with/IN/with 23/CD/23 so/RB/so we/PRP/we get/VBP/get that/NNP/that. since/IN/since this/DT/this does/VBZ/does not/RB/not have/VB/have any/DT/any other/JJ/other children/NNS/children we/PRP/we are/VBP/are done/NNP/done. so/RB/so this/DT/this entire/JJ/entire thing/NN/thing now/RB/now becomes/VBZ/becomes a/DT/a heap/NNP/heap. so/RB/so that/IN/that was/VBD/was the/DT/the build/NN/build heap/NN/heap procedure/NNP/procedure. the/DT/the build/NN/build heap/NN/heap procedure/NN/procedure all/DT/all it/PRP/it is/VBZ/is saying/VBG/saying is/VBZ/is essentially/RB/essentially just/RB/just go/VBP/go down/RB/down /,/, so/RB/so recall/RB/recall this/DT/this was/VBD/was 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, this/DT/this is/VBZ/is how/WRB/how the/DT/the elements/NNS/elements are/VBP/are laid/VBN/laid out/RP/out in/IN/in the/DT/the array/NNP/array. if/IN/if this/DT/this is/VBZ/is element/NN/element n/NN/n then/RB/then recall/JJ/recall that/IN/that its/PRP$/its parent/NN/parent is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at location/NN/location n/NN/n by/IN/by 2/CD/2. so/RB/so this/DT/this element/NN/element on/IN/on which/WDT/which we/PRP/we first/RB/first have/VBP/have to/TO/to run/VB/run the/DT/the heapify/NN/heapify procedure/NN/procedure is/VBZ/is at/IN/at location/NN/location n/NN/n by/IN/by 2/CD/2. so/RB/so we/PRP/we first/RB/first run/VBP/run the/DT/the heapify/NN/heapify on/IN/on this/DT/this then/RB/then we/PRP/we run/VBP/run heapify/JJ/heapify on/IN/on this/DT/this /,/, then/RB/then we/PRP/we run/VBP/run the/DT/the heapify/NN/heapify here/RB/here /,/, then/RB/then we/PRP/we run/VBP/run the/DT/the heapify/NN/heapify here/RB/here and/CC/and after/IN/after we/PRP/we have/VBP/have done/VBN/done all/DT/all of/IN/of these/DT/these we/PRP/we know/VBP/know that/IN/that these/DT/these are/VBP/are already/RB/already heaps/NNP/heaps. so/RB/so we/PRP/we can/MD/can now/RB/now go/VB/go and/CC/and run/VBN/run the/DT/the heapify/NN/heapify here/RB/here and/CC/and then/RB/then the/DT/the heapify/NN/heapify here/RB/here and/CC/and then/RB/then the/DT/the heapify/NN/heapify here/NNP/here. the/DT/the right/NN/right order/NN/order of/IN/of running/VBG/running heapify/NN/heapify is/VBZ/is really/RB/really to/TO/to first/RB/first run/VBN/run the/DT/the heapify/NN/heapify on/IN/on all/DT/all of/IN/of these/DT/these nodes/NNS/nodes then/RB/then on/IN/on all/DT/all of/IN/of these/DT/these nodes/NNS/nodes and/CC/and then/RB/then on/IN/on all/DT/all of/IN/of these/DT/these nodes/NNS/nodes and/CC/and that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what is/VBZ/is being/VBG/being done/NN/done here/RB/here through/IN/through this/DT/this single/JJ/single for/IN/for loop/NNP/loop. we/PRP/we first/RB/first run/VBP/run the/DT/the heapify/NN/heapify on/IN/on all/DT/all of/IN/of these/DT/these then/RB/then on/IN/on all/DT/all of/IN/of these/DT/these then/RB/then all/DT/all of/IN/of these/NNP/these. of/IN/of course/NN/course this/DT/this here/RB/here is/VBZ/is saying/VBG/saying that/IN/that you/PRP/you first/RB/first run/VBP/run the/DT/the heapify/NN/heapify here/RB/here then/RB/then here/RB/here /,/, then/RB/then here/RB/here /,/, then/RB/then here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 10/CD/10 /CD/) this/DT/this is/VBZ/is not/RB/not necessarily/RB/necessarily required/NNP/required. you/PRP/you could/MD/could also/RB/also run/VB/run the/DT/the heapify/NN/heapify in/IN/in this/DT/this order/NN/order but/CC/but remember/NN/remember that/IN/that the/DT/the heapify/NN/heapify has/VBZ/has to/TO/to be/VB/be run/VBN/run first/JJ/first on/IN/on this/DT/this level/NN/level only/RB/only then/RB/then can/MD/can you/PRP/you proceed/VB/proceed to/TO/to run/VB/run the/DT/the heapify/NN/heapify here/NNP/here. why/WRB/why is/VBZ/is that/IN/that ?/./? that/IN/that is/VBZ/is required/VBN/required because/IN/because to/TO/to run/VB/run the/DT/the heapify/NN/heapify on/IN/on this/DT/this node/NN/node these/DT/these two/CD/two should/MD/should already/RB/already be/VB/be heaps/RB/heaps and/CC/and this/DT/this can/MD/can be/VB/be a/DT/a heap/NN/heap only/RB/only after/IN/after you/PRP/you have/VBP/have run/VBN/run a/DT/a heapify/NN/heapify here/NNP/here. so/RB/so this/DT/this is/VBZ/is the/DT/the entire/JJ/entire build/NN/build heap/NN/heap procedure/NNP/procedure. we/PRP/we are/VBP/are using/VBG/using the/DT/the heapify/NN/heapify sub/NN/sub routine/NN/routine crucially/RB/crucially which/WDT/which takes/VBZ/takes as/RB/as parameter/JJR/parameter the/DT/the location/NN/location at/IN/at which/WDT/which you/PRP/you want/VBP/want to/TO/to run/VB/run heapify/NNP/heapify. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 53/CD/53 /CD/) so/RB/so let/JJ/let ?/./? s/NNS/s analyze/VBP/analyze the/DT/the build/NN/build heap/NN/heap procedure/NN/procedure so/RB/so to/TO/to prove/VB/prove correctness/NN/correctness and/CC/and i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to discuss/VB/discuss it/PRP/it in/IN/in detail/NN/detail here/NNP/here. you/PRP/you can/MD/can do/VB/do an/DT/an induction/NN/induction on/IN/on i/PRP/i and/CC/and the/DT/the induction/NN/induction claim/NN/claim would/MD/would be/VB/be that/IN/that all/DT/all trees/NNS/trees rooted/VBN/rooted at/IN/at locations/NNS/locations m/VBP/m which/WDT/which are/VBP/are more/RBR/more than/IN/than i/PRP/i are/VBP/are already/RB/already heaps/NNP/heaps. so/RB/so given/VBN/given this/DT/this induction/NN/induction statement/NN/statement /,/, with/IN/with this/DT/this induction/NN/induction hypothesis/VBZ/hypothesis you/PRP/you can/MD/can do/VB/do the/DT/the induction/NN/induction step/NN/step and/CC/and prove/VB/prove the/DT/the correctness/NN/correctness of/IN/of the/DT/the build/NN/build heap/NN/heap procedure/NNP/procedure. a/DT/a simple/JJ/simple minded/VBN/minded approach/NN/approach to/TO/to do/VB/do the/DT/the running/VBG/running time/NN/time computation/NN/computation would/MD/would just/RB/just be/VB/be as/IN/as follows/NNP/follows. there/EX/there are/VBP/are n/NN/n calls/NNS/calls that/WDT/that we/PRP/we make/VBP/make to/TO/to the/DT/the heapify/NN/heapify procedure/NN/procedure or/CC/or n/NN/n by/IN/by 2/CD/2 calls/NNS/calls that/WDT/that we/PRP/we make/VBP/make to/TO/to the/DT/the heapify/NN/heapify procedure/NNP/procedure. each/DT/each one/CD/one of/IN/of them/PRP/them we/PRP/we saw/VBD/saw in/IN/in the/DT/the last/JJ/last class/NN/class takes/VBZ/takes in/IN/in the/DT/the worst/JJS/worst case/NN/case order/NN/order log/NN/log n/NN/n time/NNP/time. so/RB/so the/DT/the total/JJ/total time/NN/time taken/VBN/taken by/IN/by the/DT/the build/NN/build heap/NN/heap procedure/NN/procedure is/VBZ/is n/VBN/n log/NN/log n/NN/n but/CC/but we/PRP/we said/VBD/said the/DT/the build/NN/build heap/NN/heap takes/VBZ/takes order/NN/order n/NN/n time/NN/time and/CC/and we/PRP/we can/MD/can actually/RB/actually prove/VB/prove a/DT/a better/JJR/better bound/NN/bound of/IN/of order/NN/order n/NNP/n. the/DT/the intuition/NN/intuition for/IN/for this/DT/this is/VBZ/is most/JJS/most often/RB/often we/PRP/we are/VBP/are doing/VBG/doing the/DT/the heapify/NN/heapify procedure/NN/procedure on/IN/on heaps/NNS/heaps which/WDT/which are/VBP/are very/RB/very small/JJ/small and/CC/and let/VB/let us/PRP/us see/VB/see what/WP/what this/DT/this really/RB/really means/NNP/means. so/RB/so let/VB/let ?/./? s/NNS/s define/VBP/define the/DT/the height/NN/height of/IN/of a/DT/a node/NN/node as/IN/as the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path from/IN/from the/DT/the node/NN/node to/TO/to a/DT/a particular/JJ/particular leaf/NNP/leaf. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 22/CD/22 /CD/) so/RB/so the/DT/the height/NN/height of/IN/of this/DT/this node/NN/node is/VBZ/is one/CD/one /,/, the/DT/the height/NN/height of/IN/of this/DT/this node/NN/node is/VBZ/is 2/CD/2 and/CC/and the/DT/the height/NN/height of/IN/of this/DT/this node/NN/node is/VBZ/is 3/CD/3. we/PRP/we will/MD/will call/VB/call the/DT/the leaves/NNS/leaves at/IN/at height/NN/height zero/NN/zero /,/, we/PRP/we will/MD/will say/VB/say that/IN/that the/DT/the height/NN/height of/IN/of the/DT/the leaves/NNS/leaves is/VBZ/is zero/NNP/zero. so/RB/so 1/CD/1 /,/, 2/CD/2 and/CC/and 3/CD/3 and/CC/and the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is just/RB/just the/DT/the maximum/NN/maximum height/NN/height of/IN/of any/DT/any node/NN/node which/WDT/which is/VBZ/is therefore/RBR/therefore 3/CD/3. so/RB/so the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the height/NN/height of/IN/of the/DT/the root/NN/root and/CC/and its/PRP$/its 3/CD/3 in/IN/in that/DT/that example/NNP/example. now/RB/now the/DT/the time/NN/time for/IN/for heapify/NN/heapify /,/, if/IN/if i/PRP/i do/VBP/do a/DT/a heapify/NN/heapify on/IN/on i/PRP/i on/IN/on location/NN/location i/PRP/i /,/, the/DT/the time/NN/time for/IN/for heapify/NN/heapify is/VBZ/is just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at that/DT/that node/NN/node i/PRP/i because/IN/because in/IN/in heapify/NN/heapify as/IN/as you/PRP/you recall/VBP/recall /,/, we/PRP/we might/MD/might have/VB/have to/TO/to move/VB/move the/DT/the element/NN/element all/DT/all the/DT/the way/NN/way down/IN/down but/CC/but if/IN/if the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree is/VBZ/is some/DT/some quantity/NN/quantity h/NN/h then/RB/then we/PRP/we can/MD/can only/RB/only move/VB/move it/PRP/it h/VB/h levels/NNS/levels down/IN/down and/CC/and so/RB/so the/DT/the time/NN/time is/VBZ/is proportional/JJ/proportional to/TO/to just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NNP/tree. this/DT/this we/PRP/we will/MD/will have/VB/have to/TO/to remember/VB/remember that/IN/that the/DT/the time/NN/time for/IN/for heapify/NN/heapify on/IN/on i/PRP/i is/VBZ/is just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at i/NNP/i. we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to assume/VB/assume that/IN/that the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the heap/NN/heap is/VBZ/is of/IN/of the/DT/the form/NN/form 2/CD/2 to/TO/to the/DT/the k/NN/k /:/- 1/CD/1 so/RB/so that/IN/that it/PRP/it is/VBZ/is a/DT/a complete/JJ/complete binary/NN/binary tree/NNP/tree. this/DT/this will/MD/will only/RB/only help/VB/help us/PRP/us simply/RB/simply the/DT/the analysis/NN/analysis /,/, it/PRP/it is/VBZ/is not/RB/not really/RB/really required/VBN/required to/TO/to we/PRP/we can/MD/can also/RB/also do/VB/do without/IN/without this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 48/CD/48 /CD/) if/IN/if the/DT/the number/NN/number of/IN/of nodes/NNS/nodes was/VBD/was of/IN/of the/DT/the kind/NN/kind 2/CD/2 to/TO/to the/DT/the k-1/NN/k-1 then/RB/then we/PRP/we know/VBP/know that/IN/that there/EX/there are/VBP/are roughly/RB/roughly n/JJ/n by/IN/by 2/CD/2 nodes/NNS/nodes of/IN/of height/NN/height one/CD/one and/CC/and for/IN/for each/DT/each of/IN/of these/DT/these nodes/NNS/nodes /,/, we/PRP/we require/VBP/require only/RB/only one/CD/one swap/NNP/swap. these/DT/these are/VBP/are height/VBN/height one/CD/one nodes/NNS/nodes /,/, the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at these/DT/these nodes/NNS/nodes is/VBZ/is height/VBN/height one/-NONE-/one. so/RB/so we/PRP/we require/VBP/require only/RB/only n/JJ/n by/IN/by two/CD/two swaps/NNP/swaps. for/IN/for the/DT/the n/NN/n by/IN/by 4/CD/4 nodes/NNS/nodes at/IN/at height/NN/height 2/CD/2 /,/, the/DT/the number/NN/number of/IN/of nodes/NNS/nodes is/VBZ/is half/DT/half the/DT/the number/NN/number of/IN/of the/DT/the nodes/NNS/nodes at/IN/at height/NN/height 1/CD/1 /,/, height/JJ/height 3/CD/3 the/DT/the number/NN/number of/IN/of nodes/NNS/nodes is/VBZ/is half/DT/half the/DT/the number/NN/number of/IN/of nodes/NNS/nodes at/IN/at height/NN/height 2/CD/2 and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. so/RB/so at/IN/at height/NN/height i/PRP/i there/EX/there are/VBP/are n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i nodes/VBZ/nodes and/CC/and for/IN/for each/DT/each of/IN/of these/DT/these nodes/NNS/nodes you/PRP/you require/VBP/require at/IN/at most/JJS/most i/PRP/i swaps/NNP/swaps. so/RB/so the/DT/the total/JJ/total number/NN/number of/IN/of swaps/NNS/swaps that/WDT/that are/VBP/are required/VBN/required by/IN/by swaps/NNS/swaps i/PRP/i mean/VBP/mean the/DT/the time/NN/time /,/, so/RB/so you/PRP/you can/MD/can count/VB/count the/DT/the time/NN/time required/VBN/required by/IN/by heapify/NN/heapify in/IN/in terms/NNS/terms of/IN/of the/DT/the number/NN/number of/IN/of times/NNS/times you/PRP/you have/VBP/have to/TO/to swap/VB/swap the/DT/the location/NN/location of/IN/of two/CD/two elements/NNP/elements. the/DT/the time/NN/time required/VBN/required by/IN/by the/DT/the heapify/NN/heapify procedure/NN/procedure is/VBZ/is just/RB/just proportional/JJ/proportional to/TO/to this/DT/this to/TO/to the/DT/the number/NN/number of/IN/of swaps/NNP/swaps. so/RB/so we/PRP/we are/VBP/are just/RB/just counting/VBG/counting the/DT/the number/NN/number of/IN/of swaps/NNP/swaps. what/WP/what is/VBZ/is the/DT/the total/JJ/total number/NN/number of/IN/of swaps/NNS/swaps required/VBN/required then/RB/then ?/./? it/PRP/it is/VBZ/is n/VBN/n by/IN/by 2/CD/2 times/NNS/times 1/CD/1 +/CD/+ n/NN/n by/IN/by 4/CD/4 times/NNS/times 2/CD/2 +/CD/+ n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i times/VBZ/times i/NNP/i. so/RB/so this/DT/this is/VBZ/is what/WP/what the/DT/the sum/NN/sum would/MD/would look/VB/look like/IN/like /,/, it/PRP/it is/VBZ/is basically/RB/basically n/VBN/n +/-NONE-/+ 1/CD/1 or/CC/or n/NN/n times/NNS/times summation/NN/summation i/PRP/i over/IN/over 2/CD/2 to/TO/to the/DT/the i/PRP/i /,/, as/IN/as i/PRP/i goes/VBZ/goes from/IN/from 1/CD/1 through/IN/through log/NN/log n/NNP/n. why/WRB/why log/NN/log n/NN/n /,/, because/IN/because that/DT/that ?/./? s/NNS/s the/DT/the height/NN/height of/IN/of the/DT/the heap/NNP/heap. it/PRP/it is/VBZ/is this/DT/this sum/NN/sum that/IN/that we/PRP/we are/VBP/are really/RB/really interested/JJ/interested in/IN/in and/CC/and now/RB/now this/DT/this summation/NN/summation here/RB/here /,/, summation/NN/summation i/PRP/i going/VBG/going from/IN/from 1/CD/1 through/IN/through log/NN/log n/NNP/n. i/PRP/i over/IN/over 2/CD/2 to/TO/to the/DT/the i/PRP/i is/VBZ/is just/RB/just 2/CD/2 and/CC/and i/PRP/i will/MD/will show/VB/show you/PRP/you why/WRB/why in/IN/in a/DT/a second/NNP/second. so/RB/so if/IN/if this/DT/this is/VBZ/is just/RB/just a/DT/a constant/JJ/constant then/RB/then this/DT/this entire/NN/entire thing/NN/thing just/RB/just becomes/VBZ/becomes order/NN/order n/NNP/n. so/RB/so this/DT/this is/VBZ/is what/WP/what we/PRP/we said/VBD/said earlier/RBR/earlier /,/, heapify/NN/heapify all/DT/all though/IN/though we/PRP/we are/VBP/are making/VBG/making n/NN/n calls/NNS/calls to/TO/to the/DT/the heapify/NN/heapify procedure/NN/procedure /,/, most/JJS/most of/IN/of the/DT/the calls/NNS/calls are/VBP/are being/VBG/being done/NN/done on/IN/on heaps/NNS/heaps which/WDT/which are/VBP/are very/RB/very small/NNP/small. n/NN/n by/IN/by 2/CD/2 calls/NNS/calls have/VBP/have been/VBN/been done/VBN/done on/IN/on heaps/NNS/heaps of/IN/of size/NN/size of/IN/of height/NN/height 1/CD/1 /,/, n/NN/n by/IN/by 4/CD/4 calls/NNS/calls have/VBP/have been/VBN/been done/VBN/done on/IN/on heaps/NNS/heaps of/IN/of height/NN/height 2/CD/2 and/CC/and since/IN/since the/DT/the time/NN/time taken/VBN/taken for/IN/for heapify/NN/heapify is/VBZ/is proportional/JJ/proportional to/TO/to the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree on/IN/on which/WDT/which the/DT/the heapify/NN/heapify procedure/NN/procedure is/VBZ/is being/VBG/being called/VBN/called much/RB/much less/JJR/less time/NN/time is/VBZ/is spent/VBN/spent here/RB/here then/RB/then just/RB/just saying/VBG/saying n/NN/n by/IN/by 4/CD/4 log/NN/log n/NN/n which/WDT/which is/VBZ/is a/DT/a crude/JJ/crude upper/NN/upper bound/NNP/bound. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 37/CD/37 /CD/) i/PRP/i have/VBP/have to/TO/to argue/VB/argue that/IN/that the/DT/the summation/NN/summation i/PRP/i over/IN/over to/TO/to 2/CD/2 to/TO/to the/DT/the i/PRP/i is/VBZ/is 2/CD/2 and/CC/and this/DT/this is/VBZ/is a/DT/a simple/JJ/simple argument/NN/argument for/IN/for that/NNP/that. so/RB/so recall/JJ/recall that/IN/that summation/NN/summation x/NN/x to/TO/to the/DT/the i/PRP/i /,/, i/PRP/i going/VBG/going from/IN/from zero/CD/zero through/IN/through infinity/NN/infinity is/VBZ/is 1/CD/1 over/IN/over 1/CD/1 /:/- x/NN/x /,/, if/IN/if x/NN/x is/VBZ/is less/JJR/less than/IN/than one/NNP/one. now/RB/now if/IN/if i/PRP/i just/RB/just differentiate/JJ/differentiate this/DT/this i/PRP/i get/VBP/get i/PRP/i times/VBZ/times x/NN/x to/TO/to the/DT/the i/PRP/i -1/-NONE-/-1 /,/, i/PRP/i going/VBG/going from/IN/from one/CD/one through/IN/through infinity/NNP/infinity. i/PRP/i have/VBP/have dropped/VBN/dropped the/DT/the i/PRP/i equal/JJ/equal zero/NN/zero term/NN/term because/IN/because that/DT/that would/MD/would now/RB/now contribute/VB/contribute to/TO/to zero/NNP/zero. the/DT/the differential/JJ/differential of/IN/of the/DT/the right/NN/right hand/NN/hand side/NN/side is/VBZ/is 1/CD/1 over/IN/over 1/CD/1- x/NN/x square/NNP/square. now/RB/now i/PRP/i multiply/RB/multiply both/DT/both sides/NNS/sides by/IN/by x/NN/x to/TO/to get/VB/get i/PRP/i times/VBZ/times x/NN/x to/TO/to the/DT/the i/PRP/i equals/VBZ/equals x/NN/x over/IN/over 1/CD/1- x/NN/x square/NN/square and/CC/and now/RB/now i/PRP/i plug/VBP/plug in/IN/in x/NN/x equals/NNS/equals half/NNP/half. so/RB/so i/PRP/i get/VBP/get i/PRP/i over/IN/over 2/CD/2 to/TO/to the/DT/the i/PRP/i /,/, i/PRP/i going/VBG/going from/IN/from one/CD/one through/IN/through infinity/NN/infinity equals/NNS/equals 1/CD/1 over/IN/over 2/CD/2 divide/NN/divide 1/CD/1 over/IN/over 4/CD/4 which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to 2/CD/2 and/CC/and if/IN/if you/PRP/you recall/VBP/recall what/WP/what we/PRP/we required/VBD/required was/VBD/was that/IN/that this/DT/this sum/NN/sum go/VBP/go from/IN/from one/CD/one through/IN/through log/NN/log n/NNP/n. so/RB/so that/IN/that then/RB/then is/VBZ/is only/RB/only going/VBG/going to/TO/to be/VB/be less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 or/CC/or strictly/RB/strictly less/JJR/less than/IN/than 2/CD/2. so/RB/so the/DT/the sum/NN/sum from/IN/from 1/CD/1 through/IN/through infinity/NN/infinity is/VBZ/is 2/CD/2. so/RB/so that/IN/that completes/NNS/completes analysis/NNS/analysis to/TO/to show/VB/show that/IN/that one/CD/one can/MD/can build/VB/build a/DT/a heap/NN/heap in/IN/in just/RB/just order/NN/order n/NN/n time/NNP/time. the/DT/the key/JJ/key thing/NN/thing here/RB/here was/VBD/was that/IN/that we/PRP/we build/VBP/build heap/NN/heap procedure/NN/procedure went/VBD/went bottom/NN/bottom up/RP/up /,/, it/PRP/it first/RB/first created/VBD/created smaller/JJR/smaller heaps/NNS/heaps and/CC/and then/RB/then combine/VB/combine them/PRP/them into/IN/into larger/JJR/larger heaps/NNS/heaps by/IN/by just/RB/just using/VBG/using the/DT/the heapify/NN/heapify procedure/NN/procedure repeatedly/NNP/repeatedly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 09/CD/09 /CD/) today/NN/today we/PRP/we have/VBP/have seen/VBN/seen how/WRB/how to/TO/to delete/VB/delete the/DT/the minimum/JJ/minimum element/NN/element from/IN/from a/DT/a heap/NNP/heap. we/PRP/we have/VBP/have also/RB/also seen/VBN/seen how/WRB/how to/TO/to build/VB/build a/DT/a heap/NN/heap in/IN/in linear/NN/linear time/NN/time /,/, in/IN/in order/NN/order n/NN/n time/NNP/time. now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to sort/VB/sort using/VBG/using heaps/NNP/heaps. so/RB/so give/VB/give you/PRP/you a/DT/a bunch/NN/bunch of/IN/of elements/NNS/elements and/CC/and i/PRP/i want/VBP/want to/TO/to put/VB/put those/DT/those elements/NNS/elements in/IN/in increasing/VBG/increasing order/NNP/order. so/RB/so what/WP/what would/MD/would be/VB/be one/CD/one way/NN/way of/IN/of doing/VBG/doing it/PRP/it using/VBG/using a/DT/a heap/NN/heap ?/./? i/PRP/i could/MD/could just/RB/just do/VB/do the/DT/the following/VBG/following /,/, i/PRP/i could/MD/could take/VB/take those/DT/those elements/NNS/elements /,/, build/VBP/build a/DT/a heap/NN/heap using/VBG/using them/NNP/them. then/RB/then i/PRP/i could/MD/could repeatedly/RB/repeatedly remove/VB/remove the/DT/the smaller/JJR/smaller element/NN/element from/IN/from the/DT/the heap/NNP/heap. so/RB/so that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what i/PRP/i have/VBP/have said/VBN/said here/NNP/here. i/PRP/i first/RB/first create/VB/create a/DT/a heap/NN/heap /,/, this/DT/this can/MD/can be/VB/be done/VBN/done in/IN/in order/NN/order n/NN/n time/NN/time as/IN/as we/PRP/we just/RB/just saw/VBD/saw then/RB/then i/PRP/i repeatedly/RB/repeatedly remove/VBP/remove the/DT/the minimum/JJ/minimum element/NN/element from/IN/from the/DT/the heap/NN/heap till/IN/till the/DT/the heap/NN/heap becomes/VBZ/becomes empty/NNP/empty. so/RB/so how/WRB/how many/JJ/many elements/NNS/elements would/MD/would i/VB/i have/VBP/have to/TO/to remove/VB/remove in/IN/in all/DT/all ?/./? there/EX/there are/VBP/are n/NN/n elements/NNS/elements in/IN/in the/DT/the heap/NN/heap /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be removing/VBG/removing n/NN/n elements/NNS/elements in/IN/in all/DT/all and/CC/and each/DT/each of/IN/of the/DT/the delete/JJ/delete min/NN/min procedure/NN/procedure /,/, each/DT/each of/IN/of the/DT/the delete/JJ/delete min/NN/min steps/NNS/steps requires/VBZ/requires order/NN/order log/NN/log n/NN/n time/NNP/time. so/RB/so i/PRP/i do/VBP/do n/RB/n steps/VBZ/steps here/RB/here /,/, so/RB/so the/DT/the total/JJ/total required/VBN/required would/MD/would be/VB/be order/NN/order n/NN/n log/NN/log n/NN/n and/CC/and this/DT/this requires/NNS/requires order/NN/order n/NN/n times/NNS/times /,/, so/RB/so the/DT/the total/JJ/total time/NN/time required/VBN/required is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. now/RB/now suppose/VBP/suppose you/PRP/you have/VBP/have to/TO/to do/VB/do an/DT/an in/IN/in place/NN/place sort/NN/sort by/IN/by in/IN/in place/NN/place sort/NN/sort i/PRP/i mean/VBP/mean that/IN/that you/PRP/you are/VBP/are given/VBN/given an/DT/an array/NN/array of/IN/of n/NN/n elements/NNS/elements and/CC/and you/PRP/you are/VBP/are given/VBN/given no/DT/no other/JJ/other space/NNP/space. this/DT/this is/VBZ/is all/DT/all the/DT/the space/NN/space you/PRP/you have/VB/have and/CC/and you/PRP/you just/RB/just want/VBP/want to/TO/to swap/VB/swap the/DT/the elements/NNS/elements in/IN/in this/DT/this array/NN/array so/IN/so that/IN/that finally/RB/finally you/PRP/you have/VB/have a/DT/a sorted/VBN/sorted sequence/NNP/sequence. recall/NN/recall that/WDT/that our/PRP$/our heaps/NNS/heaps are/VBP/are implemented/VBN/implemented using/VBG/using arrays/NNP/arrays. so/RB/so we/PRP/we first/RB/first create/VBP/create a/DT/a heap/NN/heap /,/, for/IN/for that/DT/that we/PRP/we did/VBD/did not/RB/not require/VB/require any/DT/any additional/JJ/additional space/NNP/space. starting/NN/starting with/IN/with the/DT/the initial/JJ/initial array/NN/array /,/, just/RB/just create/VB/create a/DT/a heap/NN/heap in/IN/in that/DT/that array/NNP/array. now/RB/now the/DT/the contents/NNS/contents of/IN/of the/DT/the array/NN/array are/VBP/are basically/RB/basically 8/CD/8 /,/, 10/CD/10 /,/, 11/CD/11 /,/, 12/CD/12 so/RB/so on/IN/on and/CC/and on/IN/on /,/, in/IN/in this/DT/this order/NN/order sitting/VBG/sitting in/IN/in the/DT/the array/NNP/array. now/RB/now when/WRB/when i/PRP/i delete/VBP/delete the/DT/the minimum/JJ/minimum element/NN/element /,/, where/WRB/where does/VBZ/does it/PRP/it go/VB/go ?/./? where/WRB/where would/MD/would i/VB/i put/VBN/put this/DT/this element/NN/element /,/, because/IN/because i/PRP/i don/VBP/don ?/./? t/NN/t have/VBP/have any/DT/any additional/JJ/additional space/NNP/space. so/RB/so now/RB/now what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is when/WRB/when we/PRP/we delete/VBP/delete this/DT/this element/NN/element we/PRP/we are/VBP/are going/VBG/going to/TO/to put/VB/put it/PRP/it at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the heap/NNP/heap. so/RB/so recall/JJ/recall that/IN/that for/IN/for deleting/VBG/deleting the/DT/the element/NN/element /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to move/VB/move this/DT/this element/NN/element here/RB/here to/TO/to the/DT/the top/JJ/top /,/, so/RB/so which/WDT/which means/VBZ/means that/DT/that this/DT/this location/NN/location in/IN/in the/DT/the array/NN/array is/VBZ/is now/RB/now available/JJ/available to/TO/to me/NNP/me. it/PRP/it is/VBZ/is free/JJ/free so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use this/DT/this location/NN/location to/TO/to move/VB/move 8/CD/8 to/TO/to put/VB/put 8/CD/8 in/NNP/in. essentially/RB/essentially i/PRP/i am/VBP/am swapping/VBG/swapping 8/CD/8 and/CC/and 31/CD/31 and/CC/and now/RB/now this/DT/this location/NN/location is/VBZ/is really/RB/really not/RB/not part/NN/part of/IN/of the/DT/the heap/NNP/heap. the/DT/the heap/NN/heap is/VBZ/is this/DT/this now/RB/now and/CC/and actually/RB/actually this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NN/heap because/IN/because it/PRP/it doesn/VBP/doesn ?/./? t/NN/t satisfy/NN/satisfy the/DT/the heap/NN/heap property/NNP/property. so/RB/so to/TO/to do/VB/do a/DT/a heapify/NN/heapify /,/, to/TO/to make/VB/make this/DT/this into/IN/into a/DT/a heap/NN/heap so/IN/so which/WDT/which means/NNS/means that/WDT/that the/DT/the same/JJ/same as/IN/as before/NNP/before. i/PRP/i take/VBP/take the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children ?/./? s/NNS/s /,/, swap/NN/swap the/DT/the element/NN/element with/IN/with that/DT/that now/RB/now again/RB/again heap/VB/heap property/NN/property validated/VBN/validated here/RB/here /,/, smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and swap/NN/swap and/CC/and now/RB/now this/DT/this is/VBZ/is again/RB/again a/DT/a heap/NNP/heap. so/RB/so all/DT/all i/PRP/i have/VBP/have done/VBN/done is/VBZ/is /,/, so/RB/so this/DT/this was/VBD/was essentially/RB/essentially the/DT/the delete/JJ/delete min/NN/min procedure/NNP/procedure. i/PRP/i have/VBP/have done/VBN/done a/DT/a delete/JJ/delete min/NN/min /,/, i/PRP/i have/VBP/have removed/VBN/removed 8/CD/8 but/CC/but i/PRP/i have/VBP/have kept/VBN/kept the/DT/the 8/CD/8 in/IN/in my/PRP$/my array/NN/array at/IN/at the/DT/the very/RB/very end/NNP/end. so/RB/so this/DT/this is/VBZ/is in/IN/in place/NN/place sorting/NNP/sorting. we/PRP/we are/VBP/are not/RB/not using/VBG/using any/DT/any additional/JJ/additional space/NN/space /,/, we/PRP/we delete/VBP/delete the/DT/the element/NN/element but/CC/but then/RB/then we/PRP/we keep/VBP/keep it/PRP/it in/IN/in the/DT/the array/NN/array in/IN/in an/DT/an empty/NN/empty location/NN/location and/CC/and now/RB/now once/RB/once again/RB/again we/PRP/we do/VBP/do a/DT/a delete/JJ/delete min/NNP/min. so/RB/so we/PRP/we delete/VBP/delete 10/CD/10 and/CC/and 19/CD/19 is/VBZ/is going/VBG/going to/TO/to come/VB/come here/NNP/here. so/RB/so this/DT/this location/NN/location is/VBZ/is going/VBG/going to/TO/to become/VB/become empty/JJ/empty so/RB/so ten/RB/ten and/CC/and nineteen/IN/nineteen essentially/RB/essentially are/VBP/are getting/VBG/getting swapped/NNP/swapped. this/DT/this location/NN/location now/RB/now goes/VBZ/goes away/RB/away from/IN/from the/DT/the heap/NN/heap /,/, so/RB/so this/DT/this is/VBZ/is not/RB/not marked/VBN/marked which/WDT/which essentially/RB/essentially means/VBZ/means that/IN/that this/DT/this is/VBZ/is the/DT/the part/NN/part of/IN/of my/PRP$/my heap/NNP/heap. of/IN/of course/NN/course i/PRP/i once/RB/once again/RB/again need/VBP/need to/TO/to ensure/VB/ensure that/IN/that the/DT/the heap/NN/heap property/NN/property is/VBZ/is satisfied/VBN/satisfied /,/, so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do the/DT/the swaps/NNS/swaps /,/, 11/CD/11 and/CC/and 19/CD/19 get/NN/get swapped/VBD/swapped /,/, 13/CD/13 and/CC/and 19/CD/19 get/NN/get swapped/VBD/swapped and/CC/and 10/CD/10 and/CC/and 19/CD/19 are/VBP/are not/RB/not going/VBG/going to/TO/to get/VB/get swapped/VBN/swapped because/IN/because this/DT/this is/VBZ/is not/RB/not part/NN/part of/IN/of the/DT/the heap/NN/heap any/DT/any more/RBR/more /,/, the/DT/the heap/NN/heap is/VBZ/is just/RB/just this/NNP/this. so/RB/so the/DT/the heap/NN/heap property/NN/property is/VBZ/is satisfied/VBN/satisfied here/RB/here because/IN/because this/DT/this is/VBZ/is only/RB/only one/CD/one child/NN/child and/CC/and it/PRP/it has/VBZ/has priority/NN/priority less/JJR/less than/IN/than the/DT/the priority/NN/priority of/IN/of its/PRP$/its child/NN/child /,/, its/PRP$/its lone/NN/lone child/NNP/child. so/RB/so this/DT/this is/VBZ/is now/RB/now a/DT/a heap/NNP/heap. so/RB/so once/RB/once again/RB/again i/PRP/i do/VBP/do the/DT/the delete/JJ/delete min/NN/min /,/, so/RB/so 11/CD/11 is/VBZ/is going/VBG/going to/TO/to be/VB/be deleted/VBN/deleted /,/, 26/CD/26 is/VBZ/is going/VBG/going to/TO/to come/VB/come here/RB/here /,/, 11/CD/11 is/VBZ/is going/VBG/going to/TO/to come/VB/come here/RB/here because/IN/because this/DT/this location/NN/location is/VBZ/is now/RB/now going/VBG/going to/TO/to be/VB/be empty/JJ/empty and/CC/and so/RB/so this/DT/this is/VBZ/is what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/NNP/happen. this/DT/this location/NN/location is/VBZ/is going/VBG/going to/TO/to go/VB/go out/RP/out of/IN/of the/DT/the heap/NN/heap now/RB/now because/IN/because the/DT/the heap/NN/heap is/VBZ/is only/RB/only this/DT/this part/NN/part and/CC/and once/RB/once again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do the/DT/the swaps/NNP/swaps. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do a/DT/a heapify/NN/heapify at/IN/at the/DT/the root/NN/root so/RB/so as/IN/as to/TO/to convert/VB/convert this/DT/this into/IN/into a/DT/a heap/NN/heap and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are doing/VBG/doing now/RB/now and/CC/and now/RB/now this/DT/this is/VBZ/is a/DT/a heap/NNP/heap. as/IN/as you/PRP/you can/MD/can see/VB/see the/DT/the last/JJ/last element/NN/element is/VBZ/is the/DT/the minimum/JJ/minimum element/NNP/element. the/DT/the second/JJ/second last/JJ/last element/NN/element is/VBZ/is the/DT/the second/JJ/second minimum/JJ/minimum and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. eventually/RB/eventually this/DT/this is/VBZ/is what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have a/DT/a sorted/VBN/sorted sequence/NN/sequence but/CC/but in/IN/in decreasing/NN/decreasing order/NN/order and/CC/and that/IN/that can/MD/can easily/RB/easily be/VB/be reversed/VBN/reversed in/IN/in linear/JJ/linear time/NN/time to/TO/to get/VB/get a/DT/a sorted/VBN/sorted sequence/NN/sequence in/IN/in increasing/VBG/increasing order/NNP/order. so/RB/so i/PRP/i will/MD/will just/RB/just continue/VB/continue the/DT/the procedure/NN/procedure /,/, we/PRP/we swap/VBP/swap the/DT/the last/JJ/last element/NN/element with/IN/with the/DT/the root/NN/root and/CC/and then/RB/then this/DT/this element/NN/element goes/VBZ/goes away/RB/away from/IN/from the/DT/the heap/NNP/heap. now/RB/now we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to do/VB/do the/DT/the swapping/NN/swapping so/RB/so 13/CD/13 and/CC/and 29/CD/29 get/NN/get swapped/VBD/swapped /,/, here/RB/here the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two /,/, 17/CD/17 and/CC/and 19/CD/19 ;/:/; 17/CD/17 is/VBZ/is going/VBG/going to/TO/to get/VB/get swapped/VBN/swapped with/IN/with 29/CD/29 and/CC/and now/RB/now this/DT/this is/VBZ/is again/RB/again a/DT/a heap/NN/heap furnace/NNP/furnace. now/RB/now the/DT/the minimum/JJ/minimum element/NN/element is/VBZ/is sitting/VBG/sitting here/RB/here /,/, 13/CD/13 is/VBZ/is going/VBG/going to/TO/to swapped/JJ/swapped with/IN/with the/DT/the last/JJ/last element/NN/element /,/, this/DT/this element/NN/element is/VBZ/is going/VBG/going to/TO/to go/VB/go out/RP/out of/IN/of the/DT/the heap/NN/heap now/NNP/now. it/PRP/it fades/VBZ/fades away/RB/away out/IN/out of/IN/of the/DT/the heap/NN/heap and/CC/and now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to ensure/VB/ensure the/DT/the heap/NN/heap property/NN/property by/IN/by doing/NN/doing the/DT/the necessary/JJ/necessary swaps/NNP/swaps. so/RB/so smaller/JJR/smaller is/VBZ/is 16/CD/16 /,/, it/PRP/it got/VBD/got swapped/VBN/swapped /,/, smaller/JJR/smaller is/VBZ/is 21/CD/21 it/PRP/it got/VBD/got swapped/VBN/swapped and/CC/and now/RB/now this/DT/this is/VBZ/is a/DT/a heap/NN/heap because/IN/because these/DT/these two/CD/two are/VBP/are not/RB/not part/NN/part of/IN/of the/DT/the heap/NNP/heap. so/RB/so heap/VB/heap is/VBZ/is only/RB/only this/DT/this thing/NN/thing /,/, this/DT/this is/VBZ/is the/DT/the smart/NNP/smart. so/RB/so once/RB/once again/RB/again you/PRP/you swap/VBP/swap the/DT/the last/JJ/last element/NN/element in/IN/in the/DT/the heap/NN/heap with/IN/with that/DT/that root/NN/root element/NNP/element. so/RB/so 16/CD/16 comes/NNS/comes here/RB/here and/CC/and 26/CD/26 comes/NNS/comes there/RB/there /,/, this/DT/this goes/VBZ/goes away/NNP/away. it/PRP/it is/VBZ/is not/RB/not part/NN/part of/IN/of the/DT/the heap/NN/heap any/DT/any more/RBR/more and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to ensure/VB/ensure the/DT/the heap/NN/heap property/NN/property by/IN/by doing/NN/doing the/DT/the necessary/JJ/necessary swaps/NNP/swaps. so/RB/so 17/CD/17 and/CC/and 26/CD/26 get/NN/get swapped/VBD/swapped and/CC/and now/RB/now the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated here/RB/here because/IN/because this/DT/this has/VBZ/has higher/JJR/higher priority/NN/priority than/IN/than one/CD/one of/IN/of its/PRP$/its children/NNS/children so/IN/so 19/CD/19 and/CC/and 26/CD/26 are/VBP/are going/VBG/going to/TO/to get/VB/get swapped/VBN/swapped and/CC/and now/RB/now this/DT/this is/VBZ/is a/DT/a heap/NNP/heap. this/DT/this again/NN/again is/VBZ/is now/RB/now going/VBG/going to/TO/to swap/VB/swap with/IN/with the/DT/the last/JJ/last element/NN/element /,/, 17/CD/17 and/CC/and 31/CD/31 get/NN/get swapped/VBD/swapped /,/, 17/CD/17 is/VBZ/is going/VBG/going to/TO/to drop/VB/drop off/RP/off from/IN/from the/DT/the heap/NN/heap /,/, 17/CD/17 drops/NNS/drops off/IN/off and/CC/and now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to ensure/VB/ensure that/IN/that this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is a/DT/a heap/NN/heap by/IN/by taking/NN/taking the/DT/the smaller/JJR/smaller of/IN/of its/PRP$/its children/NNS/children /,/, swapping/VBG/swapping heap/NN/heap property/NN/property validated/VBD/validated /,/, take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and swap/NNP/swap. the/DT/the heap/NN/heap property/NN/property is/VBZ/is now/RB/now valid/NNP/valid. this/DT/this is/VBZ/is a/DT/a heap/NN/heap so/IN/so this/DT/this is/VBZ/is a/DT/a minimum/JJ/minimum element/NN/element /,/, swap/NN/swap it/PRP/it with/IN/with the/DT/the last/JJ/last element/NN/element /,/, 19/CD/19 and/CC/and 29/CD/29 get/NN/get swapped/NNP/swapped. this/DT/this element/NN/element goes/VBZ/goes away/RB/away from/IN/from the/DT/the array/NN/array /,/, gets/VBZ/gets dropped/VBN/dropped and/CC/and now/RB/now we/PRP/we have/VBP/have to/TO/to ensure/VB/ensure that/IN/that this/DT/this is/VBZ/is a/DT/a heap/NNP/heap. the/DT/the heap/NN/heap property/NN/property is/VBZ/is violated/VBN/violated here/RB/here /,/, take/VBP/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two /,/, 21/CD/21 and/CC/and 29/CD/29 are/VBP/are swapped/NNP/swapped. the/DT/the heap/NN/heap property/NN/property is/VBZ/is still/RB/still violated/VBN/violated ;/:/; take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two /,/, 23/CD/23 swap/NN/swap it/PRP/it with/IN/with 29/CD/29. this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is now/RB/now a/DT/a heap/NNP/heap. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to remove/VB/remove the/DT/the minimum/JJ/minimum element/NN/element which/WDT/which is/VBZ/is 21/CD/21 we/PRP/we remove/VBP/remove it/PRP/it /,/, 31/CD/31 goes/VBZ/goes in/IN/in this/DT/this place/NN/place and/CC/and since/IN/since this/DT/this location/NN/location is/VBZ/is now/RB/now empty/JJ/empty /,/, 21/CD/21 comes/NNS/comes at/IN/at this/DT/this location/NNP/location. now/RB/now we/PRP/we need/VBP/need to/TO/to ensure/VB/ensure that/IN/that this/DT/this is/VBZ/is a/DT/a heap/NN/heap /,/, 21/CD/21 dropped/VBD/dropped away/RB/away now/RB/now take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two children/NNS/children twenty/NN/twenty three/CD/three /,/, thirty/NN/thirty one/NNP/one. swap/NN/swap 23/CD/23 and/CC/and 21/CD/21 and/CC/and then/RB/then take/VB/take the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two children/NNS/children and/CC/and swap/NN/swap it/PRP/it with/IN/with 31/CD/31. so/RB/so now/RB/now this/DT/this is/VBZ/is a/DT/a heap/NN/heap /,/, so/RB/so the/DT/the minimum/JJ/minimum element/NN/element is/VBZ/is 23/CD/23 we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to remove/VB/remove the/DT/the minimum/JJ/minimum element/NN/element which/WDT/which essentially/RB/essentially means/VBZ/means swap/NN/swap it/PRP/it with/IN/with the/DT/the last/NNP/last. this/DT/this is/VBZ/is not/RB/not part/NN/part of/IN/of the/DT/the heap/NN/heap anymore/NN/anymore and/CC/and once/RB/once again/RB/again ensure/NN/ensure the/DT/the heap/NN/heap property/NN/property by/IN/by swapping/NN/swapping and/CC/and this/DT/this is/VBZ/is now/RB/now a/DT/a heap/NNP/heap. the/DT/the smallest/JJS/smallest element/NN/element is/VBZ/is 26/CD/26 /,/, exchange/NN/exchange 26/CD/26 and/CC/and 31/CD/31 remove/NN/remove it/PRP/it from/IN/from the/DT/the heap/NN/heap and/CC/and now/RB/now ensure/NN/ensure the/DT/the heap/NN/heap by/IN/by doing/NN/doing the/DT/the necessary/JJ/necessary swaps/NNP/swaps. so/RB/so the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two children/NNS/children ?/./? s/NNS/s is/VBZ/is 29/CD/29 /,/, so/RB/so 29/CD/29 and/CC/and 31/CD/31 are/VBP/are going/VBG/going to/TO/to be/VB/be swapped/NNP/swapped. this/DT/this is/VBZ/is a/DT/a heap/NN/heap now/RB/now /,/, smallest/VBP/smallest element/NN/element is/VBZ/is 29/CD/29. so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to remove/VB/remove this/DT/this and/CC/and 43/CD/43 is/VBZ/is going/VBG/going to/TO/to come/VB/come at/IN/at this/DT/this location/NN/location /,/, so/RB/so 43/CD/43 comes/NNS/comes here/RB/here 29comes/CD/29comes here/RB/here /,/, this/DT/this is/VBZ/is not/RB/not part/NN/part of/IN/of the/DT/the heap/NN/heap anymore/NN/anymore so/RB/so i/PRP/i drop/VBP/drop this/DT/this off/NN/off and/CC/and now/RB/now i/PRP/i need/VBP/need to/TO/to ensure/VB/ensure that/IN/that this/DT/this is/VBZ/is a/DT/a heap/NNP/heap. so/RB/so this/DT/this now/RB/now has/VBZ/has only/RB/only one/CD/one child/NN/child /,/, this/DT/this is/VBZ/is the/DT/the remaining/VBG/remaining part/NN/part of/IN/of the/DT/the heap/NN/heap /,/, this/DT/this has/VBZ/has only/RB/only one/CD/one child/NN/child and/CC/and which/WDT/which is/VBZ/is smaller/JJR/smaller /,/, so/RB/so i/PRP/i need/VBP/need to/TO/to swap/VB/swap them/NNP/them. so/RB/so this/DT/this is/VBZ/is a/DT/a heap/NN/heap now/NNP/now. so/RB/so the/DT/the minimum/JJ/minimum element/NN/element is/VBZ/is 31/CD/31 /,/, i/PRP/i remove/VBP/remove this/DT/this minimum/JJ/minimum element/NN/element and/CC/and the/DT/the last/JJ/last element/NN/element is/VBZ/is 43/CD/43 /,/, it/PRP/it will/MD/will come/VB/come at/IN/at this/DT/this place/NNP/place. so/RB/so 43/CD/43 comes/NNS/comes here/RB/here /,/, 31/CD/31 is/VBZ/is removed/VBN/removed and/CC/and it/PRP/it is/VBZ/is put/VBN/put at/IN/at the/DT/the location/NN/location of/IN/of the/DT/the last/JJ/last place/NN/place because/IN/because this/DT/this location/NN/location now/RB/now gets/VBZ/gets empty/NNP/empty. so/RB/so essentially/RB/essentially that/IN/that corresponds/NNS/corresponds to/TO/to 31/CD/31 and/CC/and 43/CD/43 getting/VBG/getting swapped/VBN/swapped again/RB/again and/CC/and this/DT/this element/NN/element going/VBG/going away/RB/away from/IN/from the/DT/the heap/NNP/heap. now/RB/now this/DT/this is/VBZ/is the/DT/the only/JJ/only element/NN/element left/VBN/left in/IN/in the/DT/the heap/NN/heap and/CC/and so/RB/so it/PRP/it is/VBZ/is a/DT/a heap/NNP/heap. i/PRP/i do/VBP/do a/DT/a delete/JJ/delete min/NN/min which/WDT/which means/VBZ/means i/PRP/i remove/VBP/remove this/DT/this element/NN/element and/CC/and it/PRP/it ?/./? s/NNS/s not/RB/not part/NN/part of/IN/of the/DT/the heap/NN/heap anymore/NNP/anymore. so/RB/so this/DT/this is/VBZ/is what/WP/what we/PRP/we get/VBP/get /,/, as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this is/VBZ/is a/DT/a sorted/VBN/sorted sequence/NN/sequence in/IN/in decreasing/NN/decreasing order/NN/order now/RB/now if/IN/if you/PRP/you read/VBP/read it/PRP/it like/IN/like this/DT/this and/CC/and this/DT/this is/VBZ/is how/WRB/how we/PRP/we do/VBP/do heap/RB/heap sort/NNP/sort. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 40/CD/40 /CD/) so/RB/so let/JJ/let ?/./? s/NNS/s quickly/RB/quickly summarize/VBP/summarize the/DT/the running/VBG/running times/NNS/times of/IN/of the/DT/the various/JJ/various heap/NN/heap operations/NNS/operations that/WDT/that we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/NNP/far. the/DT/the last/JJ/last thing/NN/thing we/PRP/we saw/VBD/saw was/VBD/was the/DT/the heap/NN/heap sort/NN/sort which/WDT/which takes/VBZ/takes a/DT/a total/NN/total time/NN/time of/IN/of order/NN/order n/NN/n log/NN/log n/NNP/n. why/WRB/why did/VBD/did it/PRP/it take/VB/take a/DT/a time/NN/time of/IN/of n/NN/n log/NN/log n/NN/n ?/./? this/DT/this was/VBD/was because/IN/because it/PRP/it was/VBD/was a/DT/a two/CD/two step/NN/step process/NN/process /,/, first/JJ/first we/PRP/we created/VBD/created a/DT/a heap/NNP/heap. this/DT/this took/NN/took only/RB/only order/NN/order n/NN/n time/NN/time and/CC/and then/RB/then we/PRP/we did/VBD/did delete/JJ/delete min/NN/min repeatedly/RB/repeatedly till/RB/till the/DT/the heap/NN/heap becomes/VBZ/becomes empty/NNP/empty. so/RB/so the/DT/the first/JJ/first time/NN/time we/PRP/we did/VBD/did the/DT/the delete/NN/delete min/NN/min operation/NN/operation we/PRP/we spent/VBD/spent log/NN/log n/NN/n time/NN/time /,/, the/DT/the second/JJ/second time/NN/time we/PRP/we did/VBD/did a/DT/a delete/NN/delete min/NN/min operation/NN/operation we/PRP/we spent/VBD/spent order/NN/order log/NN/log n/NN/n /:/- 1/CD/1 time/NN/time let/NN/let ?/./? s/NNS/s say/VBP/say because/IN/because the/DT/the size/NN/size of/IN/of the/DT/the heap/NN/heap reduces/NNS/reduces and/CC/and so/RB/so once/RB/once again/RB/again we/PRP/we have/VBP/have a/DT/a series/NN/series of/IN/of this/DT/this kind/NN/kind log/NN/log n/NN/n plus/CC/plus log/NN/log n/NN/n -1/-NONE-/-1 plus/VBZ/plus log/NN/log n-2/-NONE-/n-2 plus/VBZ/plus log/NN/log n/NN/n -3/-NONE-/-3 going/VBG/going all/DT/all the/DT/the way/NN/way down/IN/down to/TO/to a/DT/a one/CD/one but/CC/but the/DT/the sum/NN/sum of/IN/of this/DT/this series/NN/series is/VBZ/is log/JJ/log n/NN/n factorial/JJ/factorial which/WDT/which is/VBZ/is the/DT/the same/JJ/same as/IN/as n/NN/n log/NN/log n/NNP/n. the/DT/the total/JJ/total time/NN/time taken/VBN/taken by/IN/by this/DT/this system/NN/system is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. so/RB/so while/IN/while this/DT/this is/VBZ/is only/RB/only order/JJR/order n/NN/n /,/, the/DT/the total/JJ/total time/NN/time taken/VBN/taken by/IN/by this/DT/this step/NN/step is/VBZ/is order/NN/order n/NN/n log/NN/log n/NN/n and/CC/and that/IN/that implies/NNS/implies that/WDT/that heap/NN/heap sort/NN/sort takes/VBZ/takes a/DT/a total/NN/total time/NN/time of/IN/of order/NN/order n/NN/n log/NN/log n/NNP/n. building/NN/building a/DT/a heap/NN/heap /,/, we/PRP/we saw/VBD/saw a/DT/a bottom/NN/bottom up/RP/up procedure/NN/procedure for/IN/for building/NN/building a/DT/a heap/NNP/heap. so/RB/so there/RB/there are/VBP/are two/CD/two ways/NNS/ways of/IN/of building/NN/building a/DT/a heap/NN/heap /,/, one/CD/one is/VBZ/is repeated/VBN/repeated insertion/NNP/insertion. repeated/VBD/repeated insertion/NN/insertion we/PRP/we insert/VBP/insert one/CD/one element/NN/element at/IN/at a/DT/a time/NN/time and/CC/and we/PRP/we argued/VBD/argued that/IN/that takes/NNS/takes total/VBP/total time/NN/time of/IN/of n/NN/n log/NN/log n/NN/n and/CC/and you/PRP/you can/MD/can actually/RB/actually come/VB/come up/RP/up with/IN/with the/DT/the examples/NNS/examples were/VBD/were it/PRP/it takes/VBZ/takes that/IN/that kind/NN/kind of/IN/of time/NNP/time. so/RB/so repeated/VBN/repeated insertions/NNS/insertions would/MD/would take/VB/take n/NN/n log/NN/log n/NN/n time/NN/time but/CC/but if/IN/if we/PRP/we did/VBD/did this/DT/this bottom/NN/bottom up/RP/up process/NN/process of/IN/of building/NN/building the/DT/the heap/NN/heap where/WRB/where in/IN/in the/DT/the leaf/NN/leaf elements/NNS/elements are/VBP/are already/RB/already heap/VB/heap /,/, the/DT/the sub/NN/sub trees/NNS/trees of/IN/of height/NN/height one/CD/one you/PRP/you made/VBD/made them/PRP/them a/DT/a heap/NN/heap then/RB/then you/PRP/you made/VBD/made the/DT/the sub/NN/sub trees/NNS/trees of/IN/of height/NN/height two/CD/two a/DT/a heap/NN/heap then/RB/then you/PRP/you made/VBD/made the/DT/the sub/NN/sub trees/NNS/trees of/IN/of height/NN/height 3/CD/3 a/DT/a heap/NN/heap and/CC/and so/RB/so on/IN/on and/CC/and you/PRP/you repeatedly/RB/repeatedly use/VBP/use the/DT/the heapify/NN/heapify procedure/NN/procedure to/TO/to be/VB/be able/JJ/able to/TO/to do/VB/do that/NNP/that. so/RB/so if/IN/if you/PRP/you were/VBD/were to/TO/to do/VB/do it/PRP/it this/DT/this way/NN/way this/DT/this bottom/NN/bottom up/RP/up construction/NN/construction of/IN/of a/DT/a heap/NN/heap this/DT/this takes/VBZ/takes order/NN/order n/NN/n time/NNP/time. the/DT/the delete/JJ/delete min/NN/min operation/NN/operation which/WDT/which we/PRP/we also/RB/also sorted/VBD/sorted is/VBZ/is takes/NNS/takes only/RB/only order/JJR/order log/NN/log n/NN/n time/NN/time this/DT/this was/VBD/was because/IN/because the/DT/the delete/JJ/delete min/NN/min operation/NN/operation is/VBZ/is a/DT/a two-step/JJ/two-step thing/NNP/thing. first/RB/first we/PRP/we remove/VBP/remove the/DT/the minimum/JJ/minimum element/NN/element which/WDT/which is/VBZ/is sitting/VBG/sitting at/IN/at the/DT/the root/NN/root /,/, take/VBP/take the/DT/the last/JJ/last element/NN/element in/IN/in the/DT/the heap/NNP/heap. so/RB/so in/IN/in the/DT/the array/NN/array implementation/NN/implementation this/DT/this corresponds/NNS/corresponds to/TO/to the/DT/the very/JJ/very last/JJ/last element/NN/element in/IN/in the/DT/the array/NN/array and/CC/and put/VBD/put it/PRP/it at/IN/at the/DT/the root/NN/root location/NN/location /,/, put/VBD/put it/PRP/it at/IN/at the/DT/the location/NN/location of/IN/of the/DT/the first/JJ/first element/NN/element which/WDT/which we/PRP/we have/VBP/have removed/VBN/removed which/WDT/which was/VBD/was the/DT/the minimum/JJ/minimum element/NNP/element. so/RB/so once/RB/once you/PRP/you did/VBD/did that/IN/that /,/, now/RB/now this/DT/this is/VBZ/is not/RB/not a/DT/a heap/NN/heap because/IN/because the/DT/the heap/NN/heap property/NN/property could/MD/could be/VB/be violated/VBN/violated at/IN/at the/DT/the root/NN/root but/CC/but the/DT/the two/CD/two sub/NN/sub trees/NNS/trees the/DT/the two/CD/two children/NNS/children of/IN/of the/DT/the root/NN/root /,/, the/DT/the left/NN/left child/NN/child and/CC/and the/DT/the right/NN/right child/NN/child and/CC/and the/DT/the two/CD/two sub/NN/sub trees/NNS/trees rooted/VBD/rooted at/IN/at this/DT/this two/CD/two children/NNS/children are/VBP/are heaps/NNP/heaps. so/RB/so we/PRP/we can/MD/can invoke/VB/invoke the/DT/the heapify/NN/heapify procedure/NN/procedure on/IN/on the/DT/the root/NNP/root. heapify/NN/heapify we/PRP/we have/VBP/have already/RB/already discussed/VBN/discussed and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to recap/VB/recap today/NN/today /,/, a/DT/a recap/NN/recap just/RB/just now/RB/now takes/VBZ/takes only/RB/only order/JJR/order log/NN/log n/NN/n time/NNP/time. so/RB/so the/DT/the total/JJ/total time/NN/time taken/VBN/taken for/IN/for delete/JJ/delete min/NN/min then/RB/then is/VBZ/is log/NN/log n/NN/n for/IN/for the/DT/the heapify/NN/heapify and/CC/and constant/JJ/constant time/NN/time to/TO/to do/VB/do this/DT/this swap/NN/swap of/IN/of moving/VBG/moving the/DT/the last/JJ/last element/NN/element to/TO/to the/DT/the very/JJ/very first/JJ/first location/NNP/location. so/RB/so total/JJ/total time/NN/time taken/VBN/taken is/VBZ/is order/NN/order log/NN/log n/NN/n so/RB/so this/DT/this was/VBD/was delete/JJ/delete min/NN/min where/WRB/where you/PRP/you are/VBP/are removing/VBG/removing the/DT/the minimum/JJ/minimum element/NNP/element. if/IN/if you/PRP/you just/RB/just wanted/VBD/wanted to/TO/to find/VB/find what/WP/what the/DT/the element/NN/element was/VBD/was /,/, the/DT/the element/NN/element with/IN/with the/DT/the least/JJS/least priority/NN/priority that/WDT/that we/PRP/we said/VBD/said is/VBZ/is the/DT/the element/NN/element sitting/VBG/sitting at/IN/at the/DT/the root/NN/root node/NNP/node. now/RB/now that/WDT/that we/PRP/we can/MD/can just/RB/just directly/RB/directly access/NN/access and/CC/and so/RB/so finding/VBG/finding the/DT/the minimum/JJ/minimum element/NN/element just/RB/just take/VB/take constant/JJ/constant time/NNP/time. in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we saw/VBD/saw the/DT/the heapify/NN/heapify operation/NN/operation we/PRP/we also/RB/also saw/VBD/saw it/PRP/it repeatedly/RB/repeatedly in/IN/in the/DT/the delete/JJ/delete min/NN/min and/CC/and the/DT/the build/NN/build heap/NN/heap procedure/NN/procedure today/NN/today and/CC/and also/RB/also in/IN/in heap/NN/heap sort/NN/sort actually/NNP/actually. heapify/NN/heapify is/VBZ/is really/RB/really crucial/JJ/crucial operations/NNS/operations and/CC/and we/PRP/we saw/VBD/saw that/IN/that it/PRP/it takes/VBZ/takes only/RB/only log/JJ/log n/NN/n time/NN/time this/DT/this is/VBZ/is because/IN/because heapify/NN/heapify we/PRP/we are/VBP/are bubbling/VBG/bubbling the/DT/the element/NN/element down/IN/down the/DT/the tree/NN/tree and/CC/and the/DT/the worst/JJS/worst case/NN/case we/PRP/we might/MD/might have/VB/have to/TO/to bubble/VB/bubble it/PRP/it all/DT/all the/DT/the way/NN/way down/IN/down but/CC/but since/IN/since the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is no/DT/no more/RBR/more than/IN/than log/NN/log n/NN/n /,/, it/PRP/it will/MD/will take/VB/take no/DT/no more/RBR/more than/IN/than log/NN/log n/NN/n steps/NNS/steps to/TO/to do/VB/do that/NNP/that. in/IN/in the/DT/the insertion/NN/insertion process/NN/process on/IN/on the/DT/the other/JJ/other hand/NN/hand we/PRP/we are/VBP/are moving/VBG/moving the/DT/the element/NN/element up/RP/up the/DT/the tree/NN/tree /,/, so/RB/so first/RB/first we/PRP/we decide/VBP/decide what/WP/what the/DT/the new/JJ/new structure/NN/structure of/IN/of the/DT/the tree/NN/tree is/VBZ/is /,/, so/RB/so we/PRP/we add/VBP/add an/DT/an additional/JJ/additional node/NN/node /,/, we/PRP/we put/VBD/put the/DT/the element/NN/element there/RB/there and/CC/and then/RB/then we/PRP/we keep/VBP/keep moving/VBG/moving it/PRP/it up/RP/up till/RB/till the/DT/the property/NN/property at/IN/at all/DT/all the/DT/the node/NN/node is/VBZ/is not/RB/not satisfied/NNP/satisfied. so/RB/so we/PRP/we keep/VBP/keep moving/VBG/moving it/PRP/it up/RP/up so/RB/so it/PRP/it bubbles/VBZ/bubbles up/RP/up the/DT/the tree/NNP/tree. since/IN/since once/RB/once again/RB/again the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is only/RB/only log/JJ/log n/NNP/n. in/IN/in the/DT/the worst/JJS/worst case/NN/case we/PRP/we might/MD/might be/VB/be bubbling/VBG/bubbling up/RP/up the/DT/the tree/NN/tree at/IN/at most/JJS/most log/JJ/log n/NN/n levels/NNS/levels and/CC/and so/RB/so the/DT/the total/JJ/total time/NN/time taken/VBN/taken by/IN/by the/DT/the insert/NN/insert procedure/NN/procedure is/VBZ/is at/IN/at most/JJS/most order/NN/order log/NN/log n/NNP/n. so/RB/so as/IN/as you/PRP/you can/MD/can see/VB/see /,/, if/IN/if i/PRP/i use/VBP/use a/DT/a heap/NN/heap to/TO/to implement/VB/implement the/DT/the priority/NN/priority queue/NN/queue data/NNS/data structure/NN/structure then/RB/then the/DT/the worst/JJS/worst case/NN/case time/NN/time complexity/NN/complexity of/IN/of any/DT/any of/IN/of the/DT/the operations/NNS/operations /,/, so/RB/so forget/VB/forget heap/NN/heap sort/NN/sort because/IN/because the/DT/the typical/JJ/typical operations/NNS/operations that/WDT/that we/PRP/we are/VBP/are doing/VBG/doing are/VBP/are insert/RB/insert /,/, find/VBP/find min/NN/min and/CC/and delete/JJ/delete min/NNP/min. these/DT/these were/VBD/were the/DT/the three/CD/three operations/NNS/operations we/PRP/we started/VBD/started of/IN/of with/IN/with and/CC/and while/IN/while find/NN/find min/NN/min is/VBZ/is done/VBN/done very/RB/very quickly/RB/quickly /,/, it/PRP/it ?/./? s/NNS/s just/RB/just constant/JJ/constant time/NNP/time. insert/NN/insert and/CC/and delete/JJ/delete min/NN/min also/RB/also don/NN/don ?/./? t/NN/t take/VB/take too/RB/too much/RB/much time/VB/time they/PRP/they take/VBP/take only/RB/only order/JJR/order log/NN/log n/NN/n time/NNP/time. compare/NN/compare this/DT/this with/IN/with the/DT/the implementation/NN/implementation we/PRP/we had/VBD/had done/VBN/done using/VBG/using a/DT/a sorted/JJ/sorted sequence/NN/sequence in/IN/in an/DT/an unsorted/JJ/unsorted sequence/NNP/sequence. in/IN/in the/DT/the case/NN/case of/IN/of an/DT/an unsorted/VBN/unsorted sequence/NN/sequence we/PRP/we said/VBD/said insert/NN/insert would/MD/would take/VB/take constant/JJ/constant time/NN/time but/CC/but find/VBP/find min/RP/min and/CC/and delete/JJ/delete min/NN/min will/MD/will both/VB/both take/VB/take order/NN/order n/NN/n time/NNP/time. in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a sorted/VBN/sorted sequence/NN/sequence we/PRP/we said/VBD/said that/IN/that insert/NN/insert would/MD/would take/VB/take order/NN/order n/NN/n time/NN/time while/IN/while both/DT/both find/NN/find min/NN/min and/CC/and delete/JJ/delete min/NN/min could/MD/could be/VB/be done/VBN/done in/IN/in constant/JJ/constant time/NNP/time. so/RB/so it/PRP/it ?/./? s/NNS/s not/RB/not the/DT/the case/NN/case /,/, in/IN/in some/DT/some settings/NNS/settings you/PRP/you might/MD/might be/VB/be interested/JJ/interested in/IN/in implementing/NN/implementing a/DT/a heap/NN/heap /,/, implementing/VBG/implementing a/DT/a priority/NN/priority queue/NN/queue using/VBG/using a/DT/a sorted/JJ/sorted sequence/NN/sequence and/CC/and which/WDT/which would/MD/would those/VB/those settings/NNS/settings be/NNP/be. if/IN/if you/PRP/you were/VBD/were implementing/VBG/implementing it/PRP/it using/VBG/using a/DT/a sorted/JJ/sorted sequence/NN/sequence then/RB/then as/IN/as i/PRP/i said/VBD/said both/DT/both find/NN/find min/NN/min and/CC/and delete/JJ/delete min/NN/min just/RB/just take/VB/take constant/JJ/constant amount/NN/amount of/IN/of time/NN/time but/CC/but insert/NN/insert takes/VBZ/takes a/DT/a lot/NN/lot of/IN/of time/NNP/time. it/PRP/it takes/VBZ/takes order/NN/order n/NN/n time/NNP/time. if/IN/if you/PRP/you had/VBD/had a/DT/a setting/NN/setting where/WRB/where you/PRP/you were/VBD/were doing/VBG/doing a/DT/a lot/NN/lot of/IN/of find/NN/find min/NN/min operations/NNS/operations /,/, very/RB/very few/JJ/few insert/NN/insert operations/NNS/operations then/RB/then it/PRP/it might/MD/might make/VB/make sense/NN/sense to/TO/to use/VB/use a/DT/a sorted/VBN/sorted sequence/NNP/sequence. so/RB/so depending/VBG/depending upon/IN/upon the/DT/the application/NN/application one/CD/one has/VBZ/has /,/, depending/VBG/depending upon/IN/upon the/DT/the settings/NNS/settings one/CD/one is/VBZ/is in/IN/in /,/, one/CD/one might/MD/might have/VB/have to/TO/to choose/VB/choose between/IN/between i/PRP/i mean/VBP/mean the/DT/the different/JJ/different ways/NNS/ways of/IN/of implementing/VBG/implementing a/DT/a priority/NN/priority queue/NNP/queue. so/RB/so we/PRP/we have/VBP/have looked/VBN/looked at/IN/at three/CD/three ways/NNS/ways heap/VBP/heap /,/, sorted/VBN/sorted sequences/NNS/sequences and/CC/and unsorted/VBD/unsorted sequences/NNS/sequences and/CC/and depending/VBG/depending upon/IN/upon which/WDT/which operation/NN/operation of/IN/of occurring/VBG/occurring more/JJR/more often/RB/often /,/, one/CD/one might/MD/might have/VB/have to/TO/to choose/VB/choose an/DT/an appropriate/JJ/appropriate implementation/NNP/implementation. with/IN/with this/DT/this i/PRP/i am/VBP/am going/VBG/going to/TO/to end/VB/end today/NN/today ?/./? s/NNS/s class/NNP/class. today/NN/today we/PRP/we looked/VBD/looked at/IN/at the/DT/the other/JJ/other operations/NNS/operations on/IN/on heap/NNP/heap. in/IN/in particular/JJ/particular we/PRP/we looked/VBD/looked at/IN/at the/DT/the delete/JJ/delete min/NN/min operation/NN/operation and/CC/and the/DT/the operation/NN/operation for/IN/for building/NN/building a/DT/a heap/NN/heap in/IN/in a/DT/a linear/NN/linear time/NNP/time. we/PRP/we also/RB/also saw/VBD/saw how/WRB/how to/TO/to use/VB/use a/DT/a heap/NN/heap to/TO/to do/VB/do sorting/VBG/sorting in/IN/in order/NN/order n/NN/n log/NN/log n/NN/n time/NN/time only/NNP/only. this/DT/this sorting/NN/sorting that/IN/that we/PRP/we saw/VBD/saw was/VBD/was an/DT/an in/IN/in place/NN/place sorting/VBG/sorting algorithm/NNP/algorithm. thank/NN/thank you/NNP/you. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture #/#/# 22/CD/22 why/WRB/why sorting/VBG/sorting ?/./? today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be looking/VBG/looking at/IN/at sorting/NNP/sorting. sorting/NN/sorting is/VBZ/is actually/RB/actually one/CD/one operation/NN/operation that/WDT/that computers/NNS/computers love/VBP/love to/TO/to spend/VB/spend their/PRP$/their time/NN/time on/NNP/on. you/PRP/you know/VBP/know it/PRP/it is/VBZ/is estimated/VBN/estimated that/IN/that 90/CD/90 %/NN/% of/IN/of the/DT/the time/NN/time spent/NN/spent by/IN/by all/DT/all computers/NNS/computers is/VBZ/is on/IN/on sorting/VBG/sorting numbers/NNP/numbers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01.26/CD/01.26 /CD/) so/RB/so it/PRP/it is/VBZ/is really/RB/really a/DT/a problem/NN/problem which/WDT/which requires/VBZ/requires attention/NN/attention /,/, requires/VBZ/requires consideration/NN/consideration and/CC/and so/RB/so we/PRP/we need/VBP/need to/TO/to develop/VB/develop good/JJ/good algorithms/NNS/algorithms for/IN/for it/NNP/it. so/RB/so in/IN/in the/DT/the last/JJ/last class/NN/class before/IN/before you/PRP/you have/VBP/have looked/VBN/looked at/IN/at heap/NN/heap sort/NNP/sort. so/RB/so today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at another/DT/another sorting/NN/sorting algorithm/NNP/algorithm. so/RB/so where/WRB/where does/VBZ/does sorting/VBG/sorting occur/NN/occur ?/./? most/JJS/most oftenly/RB/oftenly in/IN/in databases/NNP/databases. when/WRB/when you/PRP/you are/VBP/are searching/VBG/searching in/IN/in the/DT/the databases/NNS/databases you/PRP/you want/VBP/want to/TO/to keep/VB/keep data/NNS/data sorted/VBN/sorted in/IN/in a/DT/a certain/JJ/certain manner/NN/manner so/IN/so that/IN/that the/DT/the search/NN/search becomes/VBZ/becomes efficient/NNP/efficient. recall/NN/recall the/DT/the search/NN/search is/VBZ/is more/RBR/more efficient/JJ/efficient when/WRB/when you/PRP/you have/VBP/have the/DT/the data/NNS/data sorted/NNP/sorted. there/RB/there are/VBP/are lot/RB/lot of/IN/of settings/NNS/settings in/IN/in computation/NN/computation geometry/NN/geometry /,/, computer/NN/computer graphics/NNS/graphics where/WRB/where sorting/VBG/sorting is/VBZ/is essential/NNP/essential. so/RB/so i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to more/JJR/more of/IN/of these/DT/these applications/NNP/applications. but/CC/but we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at certain/JJ/certain sorting/NN/sorting algorithms/NNP/algorithms. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02.14/CD/02.14 /CD/) sorting/VBG/sorting algorithms/NNS/algorithms also/RB/also give/VBP/give us/PRP/us an/DT/an idea/NN/idea of/IN/of different/JJ/different algorithm/NN/algorithm design/NN/design techniques/NNP/techniques. so/RB/so actually/RB/actually this/DT/this is/VBZ/is a/DT/a point/NN/point we/PRP/we have/VBP/have not/RB/not spent/VBN/spent any/DT/any time/NN/time on/IN/on yet/NNP/yet. what/WP/what is/VBZ/is an/DT/an algorithm/NN/algorithm ?/./? it/PRP/it is/VBZ/is a/DT/a way/NN/way of/IN/of solving/VBG/solving a/DT/a problem/NN/problem and/CC/and there/EX/there are/VBP/are certain/JJ/certain techniques/NNS/techniques that/WDT/that people/NNS/people adopt/VBP/adopt to/TO/to design/VB/design an/DT/an algorithm/NNP/algorithm. given/NN/given a/DT/a particular/JJ/particular problem/NN/problem /,/, how/WRB/how do/VBP/do you/PRP/you design/VB/design an/DT/an algorithm/NN/algorithm for/IN/for it/PRP/it ?/./? so/RB/so there/RB/there are/VBP/are certain/JJ/certain standard/JJ/standard of/IN/of techniques/NNS/techniques in/IN/in sorting/NNP/sorting. it/PRP/it shows/VBZ/shows you/PRP/you some/DT/some of/IN/of those/DT/those techniques/NNP/techniques. so/RB/so today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at one/CD/one such/JJ/such algorithm/NN/algorithm design/NN/design technique/NN/technique through/IN/through a/DT/a sorting/NN/sorting algorithm/NNP/algorithm. there/EX/there is/VBZ/is also/RB/also what/WP/what a/DT/a lower/JJR/lower bound/NN/bound on/IN/on sorting/NN/sorting is/NNP/is. it/PRP/it means/VBZ/means there/RB/there is/VBZ/is no/DT/no sorting/NN/sorting algorithm/NN/algorithm which/WDT/which requires/VBZ/requires comparisons/NNP/comparisons. no/DT/no sorting/NN/sorting algorithm/NN/algorithm can/MD/can sort/VB/sort n/NN/n numbers/NNS/numbers in/IN/in less/JJR/less than/IN/than n/NN/n log/NN/log n/NN/n comparisons/NNP/comparisons. there/EX/there can/MD/can not/RB/not exist/VB/exist any/DT/any sorting/NN/sorting algorithm/NNP/algorithm. so/RB/so we/PRP/we are/VBP/are also/RB/also not/RB/not going/VBG/going to/TO/to be/VB/be spending/NN/spending time/NN/time on/IN/on this/NNP/this. but/CC/but this/DT/this fact/NN/fact is/VBZ/is useful/JJ/useful to/TO/to prove/VB/prove lower/JJR/lower bounds/NNS/bounds for/IN/for other/JJ/other problems/NNS/problems as/IN/as well/NNP/well. this/DT/this was/VBD/was as/IN/as far/RB/far as/IN/as motivation/NN/motivation for/IN/for why/WRB/why are/VBP/are we/PRP/we spending/VBG/spending so/RB/so much/RB/much time/VB/time on/IN/on sorting/NN/sorting is/VBZ/is concerned/NNP/concerned. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3.32/CD/3.32 /CD/) so/RB/so far/RB/far we/PRP/we have/VBP/have seen/VBN/seen insertion/NN/insertion sort/NN/sort and/CC/and selection/NN/selection sort/NNP/sort. these/DT/these are/VBP/are two/CD/two sorting/VBG/sorting algorithm/NN/algorithm with/IN/with the/DT/the worst/JJS/worst case/NN/case running/VBG/running time/NN/time of/IN/of n2/NNP/n2. there/EX/there are/VBP/are two/CD/two algorithms/NNP/algorithms. i/PRP/i should/MD/should also/RB/also have/VB/have written/VBN/written quick/JJ/quick sort/NNP/sort. actually/RB/actually heap/VB/heap sort/NN/sort has/VBZ/has a/DT/a worst/JJ/worst case/NN/case running/VBG/running time/NN/time of/IN/of n/NN/n log/NN/log n/NN/n and/CC/and one/CD/one algorithm/NN/algorithm that/WDT/that is/VBZ/is missing/VBG/missing from/IN/from the/DT/the list/NN/list is/VBZ/is quick/JJ/quick sort/NN/sort which/WDT/which has/VBZ/has the/DT/the worst/JJS/worst case/NN/case running/VBG/running time/NN/time of/IN/of n2/NNP/n2 but/CC/but an/DT/an average/JJ/average case/NN/case running/VBG/running time/NN/time of/IN/of n/NN/n log/NN/log n/NNP/n. so/RB/so today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see another/DT/another algorithm/NN/algorithm and/CC/and the/DT/the algorithm/NN/algorithm design/NN/design paradigm/NN/paradigm that/WDT/that is/VBZ/is used/VBN/used here/RB/here /,/, what/WDT/what is/VBZ/is called/VBN/called divide/NN/divide and/CC/and conquer/NNP/conquer. so/RB/so some/DT/some of/IN/of you/PRP/you might/MD/might have/VB/have seen/VBN/seen divide/NN/divide and/CC/and conquer/NN/conquer in/IN/in your/PRP$/your earlier/JJR/earlier cs/NNS/cs course/NNP/course. basically/RB/basically what/WP/what the/DT/the idea/NN/idea is/VBZ/is that/IN/that /,/, given/VBN/given a/DT/a certain/JJ/certain problem/NN/problem /,/, to/TO/to solve/VB/solve the/DT/the problem/NN/problem you/PRP/you first/RB/first divide/VBP/divide the/DT/the problem/NN/problem up/RP/up into/IN/into two/CD/two or/CC/or more/JJR/more parts/NNP/parts. then/RB/then you/PRP/you recursively/RB/recursively solve/VBP/solve those/DT/those sub/NN/sub problems/NNP/problems. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what is/VBZ/is called/VBN/called the/DT/the conquer/NN/conquer step/NNP/step. so/RB/so recursively/RB/recursively solve/VB/solve the/DT/the problems/NNS/problems on/IN/on those/DT/those parts/NNP/parts. when/WRB/when i/PRP/i say/VBP/say recursively/RB/recursively solve/VB/solve /,/, how/WRB/how do/VBP/do you/PRP/you solve/VB/solve the/DT/the problems/NNS/problems on/IN/on those/DT/those parts/NNS/parts ?/./? by/IN/by once/RB/once again/RB/again dividing/VBG/dividing them/PRP/them into/IN/into smaller/JJR/smaller parts/NNS/parts and/CC/and solving/VBG/solving the/DT/the problems/NNS/problems on/IN/on those/DT/those smaller/JJR/smaller parts/NNS/parts and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. so/RB/so use/VB/use the/DT/the same/JJ/same algorithm/NN/algorithm to/TO/to solve/VB/solve the/DT/the problem/NN/problem on/IN/on the/DT/the smaller/JJR/smaller pieces/NNS/pieces and/CC/and once/RB/once you/PRP/you have/VB/have the/DT/the solutions/NNS/solutions for/IN/for the/DT/the smaller/JJR/smaller pieces/NNS/pieces /,/, you/PRP/you need/VBP/need to/TO/to some/DT/some how/WRB/how combine/NN/combine the/DT/the result/NN/result to/TO/to get/VB/get the/DT/the solution/NN/solution for/IN/for the/DT/the original/JJ/original problem/NNP/problem. so/RB/so that/IN/that is/VBZ/is what/WP/what is/VBZ/is called/VBN/called combine/NN/combine step/NNP/step. we/PRP/we will/MD/will see/VB/see through/IN/through an/DT/an algorithm/NN/algorithm for/IN/for the/DT/the sorting/VBG/sorting problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05.02/CD/05.02 /CD/) we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at what/WP/what is/VBZ/is called/VBN/called the/DT/the merge/NN/merge sort/NN/sort algorithm/NNP/algorithm. some/DT/some of/IN/of you/PRP/you again/RB/again must/MD/must have/VB/have seen/VBN/seen this/DT/this before/NNP/before. if/IN/if you/PRP/you have/VBP/have seen/VBN/seen it/PRP/it /,/, it/PRP/it is/VBZ/is ok/NN/ok because/IN/because we/PRP/we will/MD/will see/VB/see at/IN/at least/JJS/least a/DT/a different/JJ/different way/NN/way of/IN/of analyzing/VBG/analyzing the/DT/the algorithm/NNP/algorithm. so/RB/so what/WP/what is/VBZ/is sorting/VBG/sorting ?/./? basically/RB/basically you/PRP/you are/VBP/are given/VBN/given n/NN/n numbers/NNS/numbers which/WDT/which you/PRP/you need/VBP/need to/TO/to put/VB/put in/RP/in increasing/VBG/increasing order/NN/order /,/, lets/NNS/lets say/NNP/say. lets/NNS/lets say/VBP/say s/NNS/s is/VBZ/is the/DT/the set/NN/set of/IN/of n/NN/n numbers/NNP/numbers. what/WP/what we/PRP/we do/VBP/do is/VBZ/is we/PRP/we would/MD/would split/VB/split ?/./? n/NN/n ?/./? into/IN/into two/CD/two sets/NNS/sets ;/:/; s/NNS/s 1/CD/1 and/CC/and s/NNS/s 2/CD/2. so/RB/so this/DT/this is/VBZ/is the/DT/the divide/NN/divide step/NNP/step. the/DT/the split/NN/split would/MD/would be/VB/be such/JJ/such that/IN/that s/NNS/s 1/CD/1 and/CC/and s/NNS/s 2/CD/2 would/MD/would contain/VB/contain roughly/RB/roughly half/DT/half of/IN/of the/DT/the elements/NNS/elements of/IN/of s/NNP/s. now/RB/now recall/VBP/recall this/DT/this should/MD/should look/VB/look very/RB/very similar/JJ/similar to/TO/to another/DT/another algorithm/NN/algorithm ;/:/; the/DT/the quick/NN/quick sort/NN/sort algorithm/NNP/algorithm. there/EX/there also/RB/also we/PRP/we did/VBD/did a/DT/a division/NN/division at/IN/at the/DT/the very/RB/very first/JJ/first step/NNP/step. but/CC/but how/WRB/how was/VBD/was the/DT/the division/NN/division done/NN/done there/EX/there ?/./? it/PRP/it was/VBD/was not/RB/not equal/NNP/equal. so/RB/so in/IN/in the/DT/the divide/NN/divide step/NN/step there/EX/there /,/, we/PRP/we were/VBD/were dividing/VBG/dividing the/DT/the problem/NN/problem into/IN/into two/CD/two sub/JJ/sub problems/NNS/problems but/CC/but those/DT/those two/CD/two sub/NN/sub problems/NNS/problems were/VBD/were not/RB/not equal/JJ/equal in/IN/in size/NNP/size. one/CD/one could/MD/could be/VB/be smaller/JJR/smaller than/IN/than the/DT/the other/NNP/other. but/CC/but here/RB/here we/PRP/we would/MD/would make/VB/make sure/JJ/sure that/IN/that we/PRP/we divide/VBP/divide it/PRP/it into/IN/into two/CD/two equal/JJ/equal sub/NN/sub problems/NNP/problems. equal/JJ/equal i/PRP/i mean/VBP/mean /,/, the/DT/the numbers/NNS/numbers of/IN/of elements/NNS/elements in/IN/in the/DT/the two/CD/two sub/NN/sub problems/NNS/problems are/VBP/are equal/NNP/equal. so/RB/so if/IN/if s/NNS/s 1contains/CD/1contains the/DT/the first/JJ/first one/CD/one /,/, lets/NNS/lets say/VBP/say n/2/-NONE-/n/2 elements/NNS/elements /,/, then/RB/then s/VBZ/s 2/CD/2 contains/NNS/contains n/2/-NONE-/n/2 floor/NN/floor elements/NNP/elements. what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by first/JJ/first n/2/-NONE-/n/2 elements/NNS/elements ?/./? not/RB/not the/DT/the first/JJ/first n/2/-NONE-/n/2 in/IN/in a/DT/a sorted/VBN/sorted order/NN/order because/IN/because i/PRP/i don/VBP/don ?/./? t/NN/t know/VB/know what/WP/what the/DT/the sorted/VBN/sorted order/NN/order is/NNP/is. s/VBZ/s is/VBZ/is just/RB/just some/DT/some arbitrary/JJ/arbitrary collection/NNP/collection. i/PRP/i just/RB/just take/VBP/take the/DT/the first/JJ/first n/NN/n /2/-NONE-//2 /,/, call/NN/call that/IN/that s1/NNP/s1 the/DT/the next/JJ/next n/2/NN/n/2 /,/, call/NN/call that/IN/that s/NNS/s 2/CD/2. now/RB/now conquer/JJR/conquer step/NN/step is/VBZ/is that/IN/that i/PRP/i would/MD/would sort/VB/sort these/DT/these two/CD/two sequences/NNP/sequences. i/PRP/i would/MD/would sort/VB/sort s1/NNP/s1. i/PRP/i would/MD/would sort/VB/sort s/NNS/s 2/CD/2. so/RB/so recursively/RB/recursively i/PRP/i am/VBP/am solving/VBG/solving the/DT/the same/JJ/same problem/NN/problem and/CC/and then/RB/then once/RB/once s/VBZ/s 1/CD/1 and/CC/and s2/NNP/s2 are/VBP/are already/RB/already sorted/VBN/sorted /,/, i/PRP/i have/VBP/have to/TO/to combine/NNP/combine. i/PRP/i wanted/VBD/wanted a/DT/a sorted/VBN/sorted sequence/NN/sequence for/IN/for s/NNP/s. i/PRP/i have/VBP/have s/NNS/s 1/CD/1 as/IN/as one/CD/one sorted/VBN/sorted sequence/NN/sequence /,/, s/VBZ/s 2/CD/2 as/IN/as another/DT/another sorted/VBN/sorted sequence/NN/sequence .but/-NONE-/.but what/WP/what is/VBZ/is s/VBZ/s ?/./? it/PRP/it is/VBZ/is not/RB/not just/RB/just s/VBZ/s 1/CD/1 followed/VBN/followed by/IN/by s/NNS/s 2/CD/2. no/DT/no guarantee/NN/guarantee that/IN/that is/VBZ/is sorted/NNP/sorted. so/RB/so i/PRP/i need/VBP/need to/TO/to what/WP/what is/VBZ/is called/VBN/called ?/./? merge/NN/merge ?/./? s/NNS/s 1/CD/1 and/CC/and s/NNS/s 2/CD/2 into/IN/into one/CD/one sorted/JJ/sorted sequence/NNP/sequence. that/IN/that is/VBZ/is called/VBN/called the/DT/the merge/NN/merge step/NN/step or/CC/or the/DT/the combine/NN/combine step/NN/step here/NNP/here. now/RB/now who/WP/who can/MD/can tell/VB/tell me/PRP/me /,/, in/IN/in the/DT/the case/NN/case of/IN/of quick/NN/quick sort/NN/sort /,/, the/DT/the divide/NN/divide step/NN/step was/VBD/was /,/, i/PRP/i take/VBP/take an/DT/an element/NN/element and/CC/and i/PRP/i compare/NNP/compare. that/IN/that ?/./? s/NNS/s the/DT/the pivot/NN/pivot element/NN/element and/CC/and i/PRP/i compare/VBP/compare every/DT/every element/NN/element against/IN/against this/DT/this element/NNP/element. we/PRP/we had/VBD/had this/DT/this procedure/NN/procedure called/VBD/called partition/NN/partition which/WDT/which was/VBD/was helping/VBG/helping us/PRP/us do/VBP/do that/NNP/that. that/IN/that was/VBD/was a/DT/a more/RBR/more involved/VBN/involved procedure/NN/procedure because/IN/because we/PRP/we were/VBD/were trying/VBG/trying to/TO/to do/VB/do it/PRP/it in/IN/in place/NNP/place. so/RB/so we/PRP/we were/VBD/were kind/JJ/kind of/IN/of just/RB/just swapping/VBG/swapping elements/NNS/elements till/IN/till we/PRP/we got/VBD/got two/CD/two sequences/NNP/sequences. one/CD/one containing/VBG/containing all/DT/all elements/NNS/elements less/JJR/less than/IN/than the/DT/the pivot/NN/pivot and/CC/and another/DT/another containing/NN/containing all/DT/all elements/NNS/elements greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the pivot/NNP/pivot. that/IN/that was/VBD/was the/DT/the division/NN/division step/NNP/step. how/WRB/how much/JJ/much time/NN/time did/VBD/did we/PRP/we spend/VBP/spend in/IN/in division/NN/division there/EX/there ?/./? order/NN/order n/NN/n because/IN/because we/PRP/we have/VBP/have to/TO/to compare/VB/compare every/DT/every element/NN/element against/IN/against the/DT/the pivot/NNP/pivot. how/WRB/how much/JJ/much time/NN/time do/VBP/do we/PRP/we spent/VBD/spent in/IN/in the/DT/the division/NN/division step/NN/step here/RB/here ?/./? constant/NN/constant time/NN/time because/IN/because we/PRP/we are/VBP/are just/RB/just saying/VBG/saying if/IN/if it/PRP/it is/VBZ/is an/DT/an array/NN/array we/PRP/we just/RB/just say/VBP/say this/DT/this is/VBZ/is s/VBZ/s 1/CD/1 &/CC/& this/DT/this is/VBZ/is s2/NNP/s2. we/PRP/we are/VBP/are not/RB/not copying/VBG/copying anything/NN/anything from/IN/from anywhere/RB/anywhere to/TO/to anywhere/NNP/anywhere. that/IN/that is/VBZ/is one/CD/one difference/NNP/difference. we/PRP/we will/MD/will come/VB/come back/RB/back to/TO/to the/DT/the conquer/NN/conquer thing/NNP/thing. in/IN/in the/DT/the case/NN/case of/IN/of quick/NN/quick sort/NN/sort /,/, we/PRP/we were/VBD/were doing/VBG/doing the/DT/the same/JJ/same thing/NNP/thing. we/PRP/we partitioned/NNP/partitioned. then/RB/then we/PRP/we said/VBD/said we/PRP/we will/MD/will quick/VB/quick sort/NN/sort one/CD/one part/NN/part /,/, quick/JJ/quick sort/NN/sort the/DT/the other/JJ/other part/NN/part and/CC/and then/RB/then we/PRP/we will/MD/will combine/NNP/combine. did/VBD/did we/PRP/we have/VBP/have to/TO/to do/VB/do combine/NN/combine there/RB/there ?/./? no/DT/no because/NN/because we/PRP/we could/MD/could just/RB/just take/VB/take the/DT/the first/JJ/first sorted/VBN/sorted sequence/NN/sequence /,/, put/VBD/put the/DT/the pivot/NN/pivot element/NN/element and/CC/and then/RB/then take/VB/take the/DT/the second/JJ/second sorted/VBN/sorted sequence/NN/sequence and/CC/and that/IN/that would/MD/would be/VB/be the/DT/the sorted/VBN/sorted sequence/NN/sequence for/IN/for the/DT/the entire/JJ/entire thing/NNP/thing. so/RB/so how/WRB/how much/JJ/much time/NN/time was/VBD/was combining/VBG/combining there/RB/there taking/VBG/taking ?/./? constant/NN/constant time/NNP/time. here/RB/here combining/VBG/combining will/MD/will not/RB/not take/VB/take constant/JJ/constant time/NNP/time. here/RB/here we/PRP/we have/VBP/have two/CD/two sequences/NNS/sequences and/CC/and we/PRP/we have/VBP/have to/TO/to combine/VB/combine them/NNP/them. we/PRP/we will/MD/will see/VB/see that/IN/that it/PRP/it will/MD/will take/VB/take order/NN/order n/NN/n time/NNP/time. this/DT/this is/VBZ/is also/RB/also called/VBN/called the/DT/the merge/NN/merge step/NN/step and/CC/and the/DT/the name/NN/name merge/NN/merge sort/NN/sort is/VBZ/is deriving/VBG/deriving from/IN/from this/DT/this step/NNP/step. so/RB/so every/DT/every one/CD/one understands/NNS/understands what/WP/what the/DT/the algorithm/NN/algorithm is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide 09.24/CD/09.24 /CD/) so/RB/so for/IN/for instance/NN/instance /,/, this/DT/this is/VBZ/is the/DT/the pseudo/NN/pseudo code/NN/code for/IN/for the/DT/the algorithm/NNP/algorithm. i/PRP/i give/VBP/give you/PRP/you an/DT/an array/NN/array a/DT/a /,/, p/NN/p and/CC/and r/NNP/r. identify/NN/identify the/DT/the part/NN/part of/IN/of the/DT/the array/NN/array /,/, the/DT/the lower/JJR/lower and/CC/and the/DT/the upper/JJ/upper bound/NN/bound which/WDT/which needs/VBZ/needs to/TO/to be/VB/be merge/JJ/merge sorted/NNP/sorted. if/IN/if p/NN/p is/VBZ/is less/JJR/less than/IN/than r/NN/r /,/, only/RB/only then/RB/then we/PRP/we need/VBP/need to/TO/to do/VB/do something/NNP/something. p/VB/p is/VBZ/is the/DT/the lower/JJR/lower and/CC/and r/NN/r is/VBZ/is the/DT/the upper/JJ/upper index/NNP/index. so/RB/so q/NN/q is/VBZ/is the/DT/the mid/JJ/mid point/NN/point p/NN/p plus/CC/plus r/NN/r by/IN/by two/NNP/two. so/RB/so this/DT/this is/VBZ/is the/DT/the division/NN/division step/NNP/step. these/DT/these two/CD/two are/VBP/are the/DT/the recursively/RB/recursively solving/VBG/solving the/DT/the conquer/NN/conquer steps/NNP/steps. i/PRP/i am/VBP/am saying/VBG/saying from/IN/from p/NN/p to/TO/to q/VB/q sort/NN/sort the/DT/the first/JJ/first part/NN/part of/IN/of the/DT/the array/NN/array /,/, from/IN/from q/NN/q plus/CC/plus one/CD/one to/TO/to r/VB/r sort/NN/sort the/DT/the second/JJ/second part/NN/part of/IN/of the/DT/the array/NN/array .sort/NN/.sort using/VBG/using same/NN/same merger/NN/merger sort/NN/sort procedure/NN/procedure and/CC/and once/RB/once you/PRP/you have/VB/have this/DT/this part/NN/part and/CC/and this/DT/this part/NN/part sorted/VBD/sorted you/PRP/you have/VBP/have to/TO/to combine/NNP/combine. for/IN/for that/DT/that i/PRP/i have/VBP/have another/DT/another procedure/NN/procedure called/VBN/called merge/NN/merge to/TO/to which/WDT/which is/VBZ/is specifying/VBG/specifying p/NN/p q/NN/q and/CC/and r/NNP/r. so/RB/so this/DT/this procedure/NN/procedure the/DT/the definition/NN/definition is/VBZ/is this/DT/this following/NNP/following. this/DT/this is/VBZ/is what/WP/what it/PRP/it is/VBZ/is doing/VBG/doing but/CC/but what/WP/what is/VBZ/is the/DT/the definition/NN/definition of/IN/of merge/NN/merge ?/./? it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take the/DT/the two/CD/two sequences/NNP/sequences. one/CD/one sequence/NN/sequence is/VBZ/is from/IN/from p/NN/p to/TO/to q/VB/q the/DT/the other/JJ/other is/VBZ/is from/IN/from q/NN/q plus/CC/plus one/CD/one to/TO/to r/VB/r and/CC/and merge/VB/merge them/PRP/them and/CC/and make/VB/make one/CD/one sorted/VBN/sorted sequence/NN/sequence which/WDT/which will/MD/will sit/VB/sit in/IN/in p/NN/p through/IN/through r/NNP/r. that/IN/that is/VBZ/is merge/JJ/merge and/CC/and how/WRB/how does/VBZ/does merge/NN/merge proceed/VBN/proceed ?/./? that/IN/that ?/./? s/NNS/s essentially/RB/essentially what/WP/what the/DT/the merge/NN/merge algorithm/NN/algorithm is/VBZ/is doing/NNP/doing. we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see examples/NNS/examples of/IN/of it/NNP/it. so/RB/so don/IN/don ?/./? t/NN/t worry/NN/worry but/CC/but next/JJ/next is/VBZ/is read/VBN/read through/IN/through this/DT/this and/CC/and you/PRP/you will/MD/will understand/VB/understand a/DT/a little/RB/little bit/NN/bit of/IN/of what/WP/what merge/NN/merge is/VBZ/is going/VBG/going to/TO/to do/NNP/do. it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take the/DT/the smallest/JJS/smallest of/IN/of the/DT/the two/CD/two top/JJ/top most/JJS/most elements/NNS/elements of/IN/of these/DT/these two/CD/two sequences/NNP/sequences. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by the/DT/the smallest/JJS/smallest of/IN/of two/CD/two top/JJ/top most/JJS/most elements/NNS/elements ?/./? what/WP/what is/VBZ/is the/DT/the top/JJ/top most/JJS/most element/JJ/element of/IN/of this/DT/this sequence/NN/sequence ?/./? the/DT/the first/JJ/first element/NNP/element. the/DT/the top/JJ/top most/JJS/most of/IN/of the/DT/the first/JJ/first element/NN/element which/WDT/which is/VBZ/is p/VBP/p or/CC/or the/DT/the element/NN/element at/IN/at the/DT/the location/NN/location p/NN/p /:/: a/DT/a /NN/( p/NN/p /:/) and/CC/and the/DT/the top/JJ/top most/JJS/most element/JJ/element of/IN/of this/DT/this sequence/NN/sequence is/VBZ/is a/DT/a of/IN/of q/NN/q +/:/+ 1/CD/1. i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and put/VBD/put it/PRP/it into/IN/into the/DT/the resulting/VBG/resulting sequence/NN/sequence whichever/NN/whichever is/VBZ/is the/DT/the smaller/JJR/smaller when/WRB/when i/PRP/i have/VBP/have to/TO/to merge/NNP/merge. so/RB/so if/IN/if i/PRP/i have/VBP/have to/TO/to merge/VB/merge these/DT/these two/CD/two sequences/NNS/sequences which/WDT/which will/MD/will be/VB/be the/DT/the smallest/JJS/smallest element/NN/element of/IN/of these/DT/these two/CD/two sequences/NNP/sequences. it/PRP/it will/MD/will be/VB/be the/DT/the smallest/JJS/smallest of/IN/of this/DT/this and/CC/and these/DT/these two/CD/two the/DT/the smallest/JJS/smallest of/IN/of these/DT/these two/CD/two numbers/NNP/numbers. i/PRP/i don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to worry/VB/worry about/IN/about any/DT/any other/JJ/other numbers/NNS/numbers because/IN/because this/DT/this is/VBZ/is already/RB/already sorted/VBN/sorted and/CC/and this/DT/this is/VBZ/is already/RB/already sorted/VBN/sorted in/IN/in increasing/VBG/increasing order/NNP/order. take/NN/take the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two and/CC/and that/IN/that gives/NNS/gives me/PRP/me the/DT/the first/JJ/first element/NN/element of/IN/of my/PRP$/my resulting/NN/resulting sequence/NNP/sequence. in/IN/in this/DT/this manner/NN/manner i/PRP/i can/MD/can continue/VB/continue building/NN/building up/IN/up the/DT/the resulting/VBG/resulting sequence/NN/sequence and/CC/and we/PRP/we will/MD/will see/VB/see how/WRB/how that/IN/that ?/./? s/NNS/s done/NNP/done. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12.07/CD/12.07 /CD/) that/WDT/that ?/./? s/VBZ/s merge/NNP/merge. now/RB/now let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at an/DT/an example/NN/example for/IN/for merge/NN/merge sort/NNP/sort. this/DT/this is/VBZ/is my/PRP$/my sequence/NNP/sequence. as/IN/as you/PRP/you can/MD/can see/VB/see /,/, it/PRP/it ?/./? s/NNS/s not/RB/not sorted/NNP/sorted. it/PRP/it ?/./? s/NNS/s an/DT/an 8/CD/8 element/NN/element sequence/NNP/sequence. so/RB/so the/DT/the first/JJ/first step/NN/step is/VBZ/is a/DT/a divide/NN/divide step/NNP/step. you/PRP/you will/MD/will divide/VB/divide this/DT/this into/IN/into two/CD/two parts/NNP/parts. so/RB/so one/CD/one is/VBZ/is this/DT/this and/CC/and the/DT/the other/JJ/other part/NN/part is/VBZ/is this/NNP/this. this/DT/this is/VBZ/is the/DT/the division/NNP/division. i/PRP/i have/VBP/have shown/VBN/shown it/PRP/it lower/JJR/lower down/IN/down because/IN/because i/PRP/i am/VBP/am kind/JJ/kind of/IN/of doing/VBG/doing a/DT/a recursive/JJ/recursive call/NN/call of/IN/of merge/NN/merge sort/NNP/sort. so/RB/so this/DT/this corresponds/NNS/corresponds to/TO/to one/CD/one level/NN/level of/IN/of recursive/JJ/recursive call/NNP/call. so/RB/so first/JJ/first do/VBP/do a/DT/a merge/NN/merge sort/NN/sort here/NNP/here. this/DT/this is/VBZ/is another/DT/another merge/NN/merge sort/NN/sort call/NNP/call. then/RB/then i/PRP/i will/MD/will do/VB/do another/DT/another merge/NN/merge sort/NN/sort call/NN/call here/RB/here and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is a/DT/a recursive/JJ/recursive call/NN/call on/IN/on this/DT/this part/NN/part of/IN/of the/DT/the sequence/NN/sequence on/IN/on these/DT/these 4/CD/4 elements/NNS/elements /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 55/CD/55 /CD/) and/CC/and how/WRB/how is/VBZ/is this/DT/this done/NN/done ?/./? this/DT/this is/VBZ/is done/VBN/done by/IN/by once/RB/once again/RB/again dividing/VBG/dividing this/DT/this into/IN/into two/CD/two parts/NNS/parts /:/: 58/CD/58 /,/, 24/CD/24 is/VBZ/is one/CD/one part/NN/part and/CC/and the/DT/the other/JJ/other is/VBZ/is the/DT/the other/JJ/other part/NN/part and/CC/and i/PRP/i do/VBP/do a/DT/a recursive/JJ/recursive call/NN/call on/IN/on this/DT/this part/NN/part now/RB/now first/NNP/first. first/RB/first i/PRP/i do/VBP/do the/DT/the division/NN/division and/CC/and then/RB/then i/PRP/i do/VBP/do a/DT/a recursive/JJ/recursive call/NN/call on/IN/on the/DT/the first/JJ/first half/NNP/half. then/RB/then i/PRP/i do/VBP/do a/DT/a recursive/JJ/recursive call/NN/call on/IN/on the/DT/the second/JJ/second half/NNP/half. /NNP/[ hindi/NN/hindi /:/] we/PRP/we just/RB/just seem/VBP/seem to/TO/to be/VB/be doing/VBG/doing divisions/NNS/divisions and/CC/and doing/VBG/doing recursive/JJ/recursive calls/NNS/calls as/IN/as you/PRP/you can/MD/can see/NNP/see. how/WRB/how do/VBP/do i/PRP/i sort/VB/sort this/DT/this part/NN/part ?/./? once/RB/once again/RB/again i/PRP/i divide/VBP/divide it/PRP/it into/IN/into two/CD/two parts/NNS/parts /:/- 85/CD/85 and/CC/and 24/CD/24 and/CC/and i/PRP/i do/VBP/do a/DT/a recursive/JJ/recursive call/NN/call on/IN/on 85/CD/85. just/RB/just a/DT/a single/JJ/single element/NN/element sequence/NN/sequence and/CC/and what/WP/what is/VBZ/is the/DT/the solution/NN/solution for/IN/for this/DT/this when/WRB/when there/EX/there is/VBZ/is only/RB/only single/JJ/single element/NN/element ?/./? that/IN/that itself/PRP/itself is/VBZ/is a/DT/a sorted/VBN/sorted sequence/NNP/sequence. so/RB/so 85/CD/85 goes/VBZ/goes back/RB/back up/NNP/up. so/RB/so to/TO/to say/VB/say we/PRP/we go/VBP/go back/RB/back to/TO/to the/DT/the parent/NN/parent calling/VBG/calling procedure/NNP/procedure. so/RB/so that/IN/that is/VBZ/is 85/CD/85. so/RB/so this/DT/this is/VBZ/is the/DT/the sorted/VBN/sorted first/JJ/first half/NN/half and/CC/and this/DT/this goes/VBZ/goes down/NNP/down. this/DT/this is/VBZ/is also/RB/also sorted/NNP/sorted. so/RB/so this/DT/this is/VBZ/is the/DT/the sorted/VBN/sorted list/NN/list and/CC/and now/RB/now we/PRP/we have/VBP/have to/TO/to do/VB/do the/DT/the merge/NN/merge at/IN/at this/DT/this call/NNP/call. so/RB/so we/PRP/we have/VBP/have to/TO/to merge/VB/merge this/DT/this sorted/VBN/sorted sequence/NN/sequence which/WDT/which is/VBZ/is just/RB/just 85/CD/85. sitting/VBG/sitting in/IN/in this/DT/this blue/NN/blue oval/NN/oval are/VBP/are two/CD/two sort/NN/sort sequences/NNP/sequences. we/PRP/we have/VBP/have to/TO/to merge/VB/merge them/NNP/them. so/RB/so right/RB/right now/RB/now we/PRP/we will/MD/will just/RB/just do/VB/do the/DT/the merge/NNP/merge. so/RB/so the/DT/the result/NN/result as/IN/as you/PRP/you can/MD/can imagine/VB/imagine is/VBZ/is 24/CD/24 /,/, 85/CD/85 and/CC/and this/DT/this is/VBZ/is one/CD/one sorted/VBN/sorted sequence/NNP/sequence. so/RB/so now/RB/now we/PRP/we have/VBP/have finished/VBN/finished the/DT/the merge/NN/merge sort/NN/sort for/IN/for this/DT/this call/NN/call that/IN/that we/PRP/we had/VBD/had done/VBN/done ?/./? 85/CD/85 /,/, 24/CD/24. so/RB/so now/RB/now this/DT/this can/MD/can go/VB/go back/RB/back up/NNP/up. we/PRP/we have/VBP/have finished/VBN/finished that/IN/that merge/NN/merge sort/NNP/sort. now/RB/now we/PRP/we are/VBP/are getting/VBG/getting ready/RB/ready to/TO/to do/VB/do the/DT/the merge/NN/merge sort/NN/sort on/IN/on this/DT/this second/JJ/second half/NNP/half. let/NN/let me/PRP/me show/VBP/show you/PRP/you the/DT/the procedure/NN/procedure once/RB/once again/NNP/again. first/RB/first we/PRP/we divide/NNP/divide. then/RB/then we/PRP/we merge/VBP/merge sort/NN/sort the/DT/the left/NN/left half/NN/half and/CC/and then/RB/then we/PRP/we merge/VBP/merge sort/NN/sort the/DT/the right/NN/right half/NN/half and/CC/and when/WRB/when i/PRP/i merge/VBP/merge sort/NN/sort the/DT/the left/NN/left half/NN/half /,/, what/WP/what happens/NNS/happens ?/./? i/PRP/i once/RB/once again/RB/again divide/VB/divide and/CC/and then/RB/then i/PRP/i merge/VBP/merge sort/NN/sort the/DT/the left/NN/left half/NN/half and/CC/and then/RB/then i/PRP/i merge/VBP/merge sort/NN/sort the/DT/the right/NN/right half/NNP/half. then/RB/then i/PRP/i merge/VBP/merge sort/NN/sort the/DT/the left/NN/left half/NNP/half. what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? i/PRP/i once/RB/once again/RB/again divide/VB/divide and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. so/RB/so in/IN/in some/DT/some in/IN/in some/DT/some sense/NN/sense /,/, first/JJ/first do/VBP/do a/DT/a merge/NN/merge sort/NN/sort on/IN/on this/DT/this and/CC/and nothing/NN/nothing is/VBZ/is to/TO/to be/VB/be done/VBN/done here/RB/here so/RB/so far/RB/far and/CC/and then/RB/then how/WRB/how do/VBP/do i/PRP/i do/VBP/do this/DT/this ?/./? once/RB/once again/RB/again i/PRP/i divide/VBP/divide and/CC/and then/RB/then i/PRP/i do/VBP/do a/DT/a merge/NN/merge sort/NN/sort on/IN/on these/DT/these two/CD/two but/CC/but first/JJ/first i/PRP/i do/VBP/do it/PRP/it here/NNP/here. only/RB/only when/WRB/when i/PRP/i have/VBP/have finished/VBN/finished this/DT/this merge/NN/merge sort/NN/sort /,/, will/MD/will i/VB/i come/VB/come back/RB/back to/TO/to this/DT/this one/CD/one and/CC/and how/WRB/how am/NN/am i/PRP/i doing/VBG/doing the/DT/the merge/NN/merge sort/NN/sort here/RB/here ?/./? once/RB/once again/RB/again i/PRP/i am/VBP/am dividing/NNP/dividing. this/DT/this is/VBZ/is the/DT/the trivial/JJ/trivial case/NNP/case. so/RB/so this/DT/this is/VBZ/is easy/JJ/easy to/TO/to do/NNP/do. this/DT/this is/VBZ/is the/DT/the trivial/JJ/trivial case/NNP/case. i/PRP/i get/VBP/get this/DT/this sorted/VBN/sorted sequence/NNP/sequence. so/RB/so i/PRP/i have/VBP/have finished/VBN/finished the/DT/the merge/NN/merge sort/NN/sort for/IN/for this/DT/this part/NN/part now/NNP/now. so/RB/so this/DT/this goes/VBZ/goes back/NNP/back. now/RB/now i/PRP/i have/VBP/have to/TO/to do/VB/do the/DT/the merge/NN/merge sort/NN/sort for/IN/for this/DT/this part/NNP/part. once/RB/once again/RB/again i/PRP/i am/VBP/am doing/VBG/doing a/DT/a recursive/JJ/recursive call/NN/call on/IN/on this/NNP/this. i/PRP/i do/VBP/do a/DT/a call/NN/call /,/, divide/NN/divide trivial/JJ/trivial merge/NN/merge ;/:/; 45/CD/45 /,/, 63/CD/63 and/CC/and now/RB/now this/DT/this is/VBZ/is my/PRP$/my sorted/VBN/sorted sequence/NNP/sequence. so/RB/so i/PRP/i am/VBP/am now/RB/now ready/RB/ready to/TO/to go/VB/go up/RP/up and/CC/and this/DT/this is/VBZ/is now/RB/now the/DT/the two/CD/two sorted/VBN/sorted sequences/NNS/sequences that/IN/that i/PRP/i get/NNP/get. now/RB/now i/PRP/i can/MD/can merge/VB/merge this/NNP/this. so/RB/so i/PRP/i will/MD/will show/VB/show you/PRP/you the/DT/the merge/NN/merge step/NN/step again/RB/again more/RBR/more clearly/RB/clearly but/CC/but you/PRP/you can/MD/can see/VB/see which/WDT/which should/MD/should be/VB/be the/DT/the first/JJ/first element/NNP/element. it/PRP/it should/MD/should be/VB/be 24/CD/24. so/RB/so this/DT/this is/VBZ/is the/DT/the sorted/VBN/sorted sequence/NN/sequence or/CC/or the/DT/the merge/NN/merge sequence/NNP/sequence. now/RB/now i/PRP/i am/VBP/am done/NN/done with/IN/with this/DT/this part/NNP/part. this/DT/this merge/NN/merge sort/NN/sort call/NN/call has/VBZ/has finished/NNP/finished. the/DT/the merge/NN/merge sort/NN/sort call/NN/call that/WDT/that i/PRP/i have/VBP/have made/VBN/made on/IN/on these/DT/these four/CD/four elements/NNS/elements that/WDT/that has/VBZ/has finished/NNP/finished. so/RB/so it/PRP/it goes/VBZ/goes back/NNP/back. now/RB/now i/PRP/i do/VBP/do a/DT/a merge/NN/merge sort/NN/sort call/NN/call on/IN/on this/NNP/this. so/IN/so i/PRP/i do/VBP/do one/CD/one more/RBR/more merge/JJ/merge sort/NN/sort call/NN/call here/NNP/here. i/PRP/i am/VBP/am not/RB/not showing/VBG/showing you/PRP/you the/DT/the entire/JJ/entire thing/NNP/thing. i/PRP/i am/VBP/am just/RB/just showing/VBG/showing you/PRP/you that/IN/that this/DT/this entire/JJ/entire thing/NN/thing would/MD/would happen/VB/happen in/IN/in exactly/RB/exactly the/DT/the same/JJ/same way/NNP/way. 17/CD/17 /,/, 30/CD/30 /,/, 1/CD/1 /,/, 96/CD/96 /,/, 30/CD/30 would/MD/would sort/VB/sort and/CC/and you/PRP/you get/VBP/get 17/CD/17 /,/, 30/CD/30 /,/, 1/CD/1 /,/, 50/CD/50 /,/, 96/CD/96. this/DT/this goes/VBZ/goes back/RP/back and/CC/and then/RB/then we/PRP/we will/MD/will merge/VB/merge these/DT/these two/CD/two and/CC/and this/DT/this is/VBZ/is the/DT/the resulting/VBG/resulting sequence/NNP/sequence. so/RB/so these/DT/these are/VBP/are two/CD/two sorted/VBN/sorted sequences/NNS/sequences we/PRP/we can/MD/can merge/VB/merge them/NNP/them. i/PRP/i will/MD/will show/VB/show you/PRP/you how/WRB/how to/TO/to merge/VB/merge them/PRP/them very/RB/very quickly/RB/quickly and/CC/and that/IN/that will/MD/will give/VB/give us/PRP/us the/DT/the resulting/VBG/resulting sequence/NNP/sequence. so/RB/so who/WP/who can/MD/can tell/VB/tell me/PRP/me how/WRB/how many/JJ/many merge/NN/merge sort/NN/sort calls/VBZ/calls have/VB/have i/PRP/i made/VBN/made in/IN/in all/DT/all ?/./? how/WRB/how can/MD/can you/PRP/you count/VB/count the/DT/the number/NN/number of/IN/of merge/NN/merge sort/NN/sort calls/VBZ/calls you/PRP/you have/VBP/have made/VBN/made ?/./? in/IN/in this/DT/this example/NN/example how/WRB/how many/JJ/many merge/NN/merge sort/NN/sort calls/VBZ/calls have/VB/have i/PRP/i made/VBN/made ?/./? order/NN/order n/NNP/n. why/WRB/why because/IN/because each/DT/each of/IN/of these/DT/these blocks/NNS/blocks correspond/VBP/correspond to/TO/to one/CD/one merge/NN/merge sort/NN/sort call/NNP/call. /NNP/[ hindi/NN/hindi /:/] so/RB/so the/DT/the number/NN/number of/IN/of merge/NN/merge sort/NN/sort calls/VBZ/calls is/VBZ/is just/RB/just the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in this/DT/this tree/NN/tree and/CC/and how/WRB/how many/JJ/many nodes/NNS/nodes are/VBP/are there/RB/there in/IN/in this/DT/this tree/NN/tree ?/./? well/RB/well you/PRP/you can/MD/can see/VB/see that/IN/that this/DT/this is/VBZ/is the/DT/the tree/NN/tree ?/./? how/WRB/how many/JJ/many leaves/NNS/leaves are/VBP/are there/RB/there in/IN/in this/DT/this tree/NN/tree ?/./? n/NN/n leaves/NNP/leaves. there/EX/there are/VBP/are n/NN/n leaves/NNP/leaves. at/IN/at this/DT/this level/NN/level there/RB/there will/MD/will be/VB/be n/2/-NONE-/n/2 elements/NNP/elements. at/IN/at the/DT/the next/JJ/next level/NN/level there/EX/there will/MD/will be/VB/be n/4/-NONE-/n/4 /,/, n/8/-NONE-/n/8 and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. some/DT/some of/IN/of this/DT/this sequence/NN/sequence n/NN/n by/IN/by two/CD/two n/JJ/n by/IN/by four/CD/four n/NN/n by/IN/by eight/CD/eight n/NN/n by/IN/by sixteen/NN/sixteen so/IN/so on/IN/on is/VBZ/is n/VBN/n minus/NN/minus one/CD/one you/PRP/you can/MD/can check/VB/check that/NNP/that. there/RB/there are/VBP/are many/JJ/many other/JJ/other ways/NNS/ways of/IN/of thinking/VBG/thinking of/IN/of it/NNP/it. you/PRP/you can/MD/can think/VB/think of/IN/of it/PRP/it has/VBZ/has a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree on/IN/on n/NN/n leaves/NNS/leaves and/CC/and you/PRP/you can/MD/can apply/VB/apply those/DT/those formulas/NNS/formulas that/IN/that you/PRP/you learnt/NNP/learnt. /:/[ hindi/NN/hindi /:/] so/RB/so this/DT/this will/MD/will do/VB/do exactly/RB/exactly /VB/( n-1/-NONE-/n-1 /./) recursive/JJ/recursive calls/NNS/calls to/TO/to merge/VB/merge sort/NNP/sort. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18.49/CD/18.49 /CD/) so/RB/so let/JJ/let ?/./? s/NNS/s see/VBP/see the/DT/the part/NN/part that/IN/that we/PRP/we missed/VBD/missed out/RP/out on/IN/on how/WRB/how do/VBP/do we/PRP/we merge/VB/merge two/CD/two sequences/NNP/sequences. i/PRP/i should/MD/should really/RB/really say/VB/say two/CD/two sorted/VBN/sorted sequences/NNP/sequences. so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say these/DT/these are/VBP/are two/CD/two sorted/VBN/sorted sequenences/NNP/sequenences. i/PRP/i have/VBP/have s/NNS/s 1/CD/1 s/NNS/s 2/CD/2. 24/CD/24 /,/, 45/CD/45 /,/, 63/CD/63 /,/, 85/CD/85 /,/, 73/CD/73 /,/, 150/CD/150 /,/, 96/CD/96. these/DT/these are/VBP/are i/PRP/i believe/VBP/believe coming/VBG/coming from/IN/from 24/CD/24 /,/, 45/CD/45 /,/, 64/CD/64 /,/, 85/CD/85. are/VBP/are they/PRP/they the/DT/the same/JJ/same ?/./? no/DT/no they/PRP/they are/VBP/are not/RB/not the/DT/the same/NNP/same. so/RB/so these/DT/these are/VBP/are the/DT/the two/CD/two sorted/VBN/sorted sequences/NNP/sequences. we/PRP/we have/VBP/have to/TO/to merge/VB/merge them/NNP/them. so/RB/so what/WP/what should/MD/should be/VB/be clear/JJ/clear is/VBZ/is that/IN/that the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the resulting/VBG/resulting sorted/VBN/sorted sequence/NN/sequence is/VBZ/is the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/NNP/two. so/RB/so it/PRP/it is/VBZ/is clear/JJ/clear that/IN/that the/DT/the resulting/VBG/resulting sorted/VBN/sorted sequence/NN/sequence which/WDT/which is/VBZ/is s/VBZ/s has/VBZ/has its/PRP$/its first/JJ/first element/NN/element 17/CD/17. then/RB/then i/PRP/i can/MD/can strike/VB/strike away/RB/away 17/CD/17 from/IN/from here/RB/here because/IN/because i/PRP/i have/VBP/have kind/JJ/kind of/IN/of removed/JJ/removed it/PRP/it and/CC/and i/PRP/i have/VBP/have put/VBN/put it/PRP/it here/NNP/here. i/PRP/i have/VBP/have to/TO/to merge/VB/merge these/DT/these two/CD/two sequences/NNS/sequences and/CC/and append/NN/append them/PRP/them to/TO/to this/DT/this sequence/NN/sequence that/IN/that i/PRP/i am/VBP/am constructing/NNP/constructing. so/RB/so how/WRB/how do/VBP/do i/PRP/i merge/VB/merge these/DT/these two/CD/two sequences/NNS/sequences now/RB/now ?/./? once/RB/once again/RB/again the/DT/the same/JJ/same idea/NN/idea which/WDT/which is/VBZ/is the/DT/the smallest/JJS/smallest element/NN/element which/WDT/which is/VBZ/is the/DT/the next/JJ/next element/NN/element will/MD/will be/VB/be the/DT/the smallest/JJS/smallest element/NN/element in/IN/in these/DT/these two/CD/two sequences/NNS/sequences put/VBD/put together/RP/together and/CC/and that/IN/that will/MD/will be/VB/be one/CD/one of/IN/of these/DT/these two/NNP/two. the/DT/the next/JJ/next element/NN/element should/MD/should be/VB/be 24/CD/24 and/CC/and so/RB/so i/PRP/i remove/VBP/remove 24/CD/24 out/IN/out of/IN/of there/EX/there and/CC/and i/PRP/i get/VBP/get two/CD/two smaller/JJR/smaller sequences/NNS/sequences like/IN/like this/NNP/this. once/RB/once again/RB/again i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the smaller/JJR/smaller of/IN/of these/DT/these 6/CD/6 elements/NNS/elements that/WDT/that has/VBZ/has to/TO/to be/VB/be the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/NNP/two. so/RB/so i/PRP/i will/MD/will just/RB/just compare/VB/compare these/DT/these two/CD/two and/CC/and i/PRP/i will/MD/will write/VB/write that/IN/that down/IN/down here/NNP/here. so/RB/so i/PRP/i compared/NNP/compared. i/PRP/i found/VBD/found 31/CD/31 is/VBZ/is smaller/NNP/smaller. i/PRP/i write/VBP/write that/IN/that down/IN/down here/RB/here and/CC/and i/PRP/i remove/VBP/remove 31/CD/31 from/IN/from this/DT/this and/CC/and then/RB/then in/IN/in this/DT/this manner/NN/manner i/PRP/i can/MD/can proceed/NNP/proceed. so/RB/so 31/CD/31 /,/, 45/CD/45 would/MD/would be/VB/be the/DT/the next/JJ/next one/CD/one to/TO/to go/NNP/go. these/DT/these are/VBP/are things/NNS/things left/NNP/left. then/RB/then next/JJ/next one/CD/one would/MD/would be/VB/be 50/CD/50. it/PRP/it would/MD/would be/VB/be left/VBN/left with/IN/with 63/CD/63 /,/, 85/CD/85 /,/, 96/CD/96. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20.40/CD/20.40 /CD/) then/RB/then the/DT/the next/JJ/next one/CD/one would/MD/would be/VB/be 63/CD/63. we/PRP/we would/MD/would be/VB/be left/VBN/left with/IN/with 85/CD/85 &/CC/& 96/CD/96. eventually/RB/eventually it/PRP/it would/MD/would be/VB/be taking/VBG/taking that/IN/that and/CC/and we/PRP/we would/MD/would have/VB/have nothing/NN/nothing left/NNP/left. this/DT/this is/VBZ/is what/WP/what you/PRP/you would/MD/would get/VB/get as/IN/as a/DT/a result/NNP/result. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20.56/CD/20.56 /CD/) so/RB/so how/WRB/how much/JJ/much time/NN/time do/VBP/do we/PRP/we take/VB/take in/IN/in doing/NN/doing ?/./? order/NN/order n/NNP/n. why/WRB/why ?/./? because/IN/because what/WP/what are/VBP/are we/PRP/we doing/VBG/doing ?/./? we/PRP/we have/VBP/have these/DT/these two/CD/two sorted/VBN/sorted sequences/NNP/sequences. we/PRP/we are/VBP/are comparing/VBG/comparing two/CD/two elements/NNS/elements ;/:/; the/DT/the two/CD/two right/JJ/right &/CC/& the/DT/the two/CD/two front/NN/front elements/NNP/elements. we/PRP/we are/VBP/are comparing/VBG/comparing them/PRP/them and/CC/and taking/VBG/taking the/DT/the smaller/JJR/smaller of/IN/of those/DT/those two/CD/two and/CC/and writing/VBG/writing them/PRP/them out/RP/out into/IN/into the/DT/the resulting/VBG/resulting sorted/VBN/sorted sequence/NNP/sequence. with/IN/with every/DT/every comparison/NN/comparison /,/, we/PRP/we are/VBP/are writing/VBG/writing out/RP/out one/CD/one element/NNP/element. how/WRB/how many/JJ/many elements/NNS/elements do/VBP/do we/PRP/we write/VB/write out/RP/out in/IN/in all/DT/all ?/./? as/IN/as many/JJ/many elements/NNS/elements as/IN/as there/EX/there are/NNP/are. so/RB/so if/IN/if there/EX/there are/VBP/are n/NN/n elements/NNS/elements /,/, then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be writing/VBG/writing out/RP/out n/NN/n elements/NNS/elements in/IN/in all/DT/all which/WDT/which means/VBZ/means how/WRB/how many/JJ/many comparisons/NNS/comparisons am/VBP/am i/PRP/i making/VBG/making ?/./? n/NN/n comparisons/NNP/comparisons. this/DT/this was/VBD/was assuming/VBG/assuming whether/IN/whether two/CD/two sequences/NNS/sequences were/VBD/were of/IN/of length/NN/length n/2/-NONE-/n/2 and/CC/and n/2/NNP/n/2. suppose/NN/suppose one/CD/one sequence/NN/sequence was/VBD/was of/IN/of length/NN/length ?/./? l/NN/l ?/./? and/CC/and the/DT/the other/JJ/other sequence/NN/sequence was/VBD/was of/IN/of length/NN/length ?/./? m/NN/m ?/./? /./. one/CD/one sorted/VBN/sorted sequence/NN/sequence of/IN/of length/NN/length ?/./? l/NN/l ?/./? elements/NNS/elements and/CC/and the/DT/the other/JJ/other sorted/VBN/sorted sequence/NN/sequence with/IN/with ?/./? m/NN/m ?/./? elements/NNS/elements in/IN/in it/NNP/it. s/NNS/s 1/CD/1 &/CC/& s/NNS/s 2/CD/2. what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time taken/VBN/taken by/IN/by merge/NN/merge ?/./? /:/( l/NN/l +/:/+ m/NN/m /:/) /./. these/DT/these are/VBP/are the/DT/the four/CD/four choices/NNP/choices. let/NN/let ?/./? s/NNS/s see/VBP/see minimum/JJ/minimum of/IN/of /NNP/( l/NN/l /,/, m/NN/m /:/) max/NN/max of/IN/of /NNP/( l/NN/l /,/, m/NN/m /:/) /:/[ hindi/NN/hindi /:/] /./. /:/( l/NN/l +/:/+ m/NN/m /:/) /:/[ hindi/NN/hindi /:/] none/NN/none of/IN/of above/NNP/above. /NNP/[ hindi/NN/hindi /:/] none/NN/none of/IN/of the/DT/the above/JJ/above /NN/[ noise/NN/noise /:/] /./. which/WDT/which do/VBP/do you/PRP/you think/VB/think is/VBZ/is the/DT/the right/NN/right ?/./? let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at worst/JJS/worst case/NNP/case. how/WRB/how can/MD/can you/PRP/you tell/VB/tell me/PRP/me what/WP/what the/DT/the worst/JJS/worst case/NN/case is/VBZ/is ?/./? let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at worst/JJS/worst case/NNP/case. in/IN/in the/DT/the worst/JJS/worst case/NN/case what/WP/what do/VBP/do we/PRP/we have/VB/have to/TO/to do/VB/do ?/./? we/PRP/we have/VBP/have to/TO/to in/IN/in the/DT/the worst/JJS/worst case/NN/case we/PRP/we will/MD/will have/VB/have to/TO/to compare/NNP/compare. the/DT/the worst/JJS/worst case/NN/case should/MD/should be/VB/be /:/( l/NN/l +/:/+ m/NN/m /:/) /./. we/PRP/we might/MD/might have/VB/have to/TO/to do/VB/do every/DT/every possible/JJ/possible comparison/NNP/comparison. what/WP/what is/VBZ/is the/DT/the best/JJS/best case/NN/case in/IN/in your/PRP$/your opinion/NN/opinion ?/./? best/JJS/best case/NN/case it/PRP/it ?/./? s/NNS/s not/RB/not really/RB/really clear/NNP/clear. what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to say/VB/say by/IN/by best/JJS/best case/NN/case because/IN/because what/WP/what might/MD/might happen/VB/happen is/VBZ/is that/IN/that if/IN/if one/CD/one of/IN/of the/DT/the sequences/NNS/sequences finishes/VBZ/finishes then/RB/then i/PRP/i can/MD/can just/RB/just copy/VB/copy the/DT/the next/JJ/next one/NNP/one. so/RB/so even/RB/even the/DT/the copying/NN/copying requires/VBZ/requires time/NNP/time. so/RB/so if/IN/if you/PRP/you include/VBP/include the/DT/the time/NN/time for/IN/for the/DT/the copy/NN/copy /,/, then/RB/then its/PRP$/its always/RB/always going/VBG/going to/TO/to be/VB/be l/JJ/l +/NN/+ m/NNP/m. you/PRP/you can/MD/can not/RB/not do/VB/do anything/NN/anything more/RBR/more about/IN/about it/NNP/it. but/CC/but if/IN/if you/PRP/you don/VBP/don ?/./? t/NN/t want/NN/want to/TO/to include/VB/include the/DT/the time/NN/time for/IN/for the/DT/the copying/VBG/copying /,/, if/IN/if you/PRP/you are/VBP/are just/RB/just counting/VBG/counting the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that you/PRP/you do/VBP/do. then/RB/then if/IN/if you/PRP/you are/VBP/are just/RB/just counting/VBG/counting the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, then/RB/then you/PRP/you can/MD/can do/VB/do less/RBR/less than/IN/than it/PRP/it will/MD/will be/VB/be. so/RB/so you/PRP/you all/DT/all understand/VBP/understand this/NNP/this. in/IN/in the/DT/the worst/JJS/worst case/NN/case /,/, why/WRB/why do/VBP/do you/PRP/you require/VB/require l/JJ/l +/NN/+ m/NN/m comparisons/NNS/comparisons ?/./? so/RB/so you/PRP/you might/MD/might require/VB/require as/RB/as many/JJ/many as/IN/as l/NN/l +/:/+ m/NN/m comparisons/NNP/comparisons. so/RB/so in/IN/in fact/NN/fact that/IN/that was/VBD/was happening/VBG/happening in/IN/in this/DT/this example/NNP/example. so/RB/so you/PRP/you know/VBP/know if/IN/if you/PRP/you count/VBP/count the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that we/PRP/we did/VBD/did in/IN/in this/DT/this example/NNP/example. for/IN/for every/DT/every element/NN/element that/IN/that we/PRP/we had/VBD/had to/TO/to write/VB/write out/RP/out /,/, we/PRP/we have/VBP/have to/TO/to do/VB/do a/DT/a comparison/NN/comparison except/IN/except for/IN/for the/DT/the last/JJ/last one/NNP/one. so/IN/so you/PRP/you really/RB/really require/VBP/require l/NN/l +/:/+ m/NN/m -1/-NONE-/-1 comparisons/NNP/comparisons. that/IN/that is/VBZ/is the/DT/the worst/JJS/worst case/NNP/case. the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons if/IN/if you/PRP/you are/VBP/are counting/VBG/counting the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. you/PRP/you really/RB/really require/VBP/require that/IN/that many/JJ/many and/CC/and you/PRP/you can/MD/can create/VB/create sequences/NNS/sequences of/IN/of arbitrary/JJ/arbitrary values/NNS/values of/IN/of l/NN/l and/CC/and m/NN/m so/IN/so that/IN/that you/PRP/you require/VBP/require l/JJ/l +/NN/+ m/NN/m /:/- 1/CD/1 comparisons/NNP/comparisons. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26.19/CD/26.19 /CD/) so/RB/so we/PRP/we have/VBP/have understood/VBN/understood merge/NNP/merge. we/PRP/we have/VBP/have understood/VBN/understood the/DT/the merge/NN/merge set/VBD/set we/PRP/we understood/VBD/understood what/WP/what merge/NN/merge sort/NN/sort is/NNP/is. so/RB/so let/VB/let ?/./? s/NNS/s try/VBP/try and/CC/and analyze/NN/analyze it/NNP/it. how/WRB/how much/JJ/much time/NN/time ?/./? how/WRB/how many/JJ/many comparisons/NNS/comparisons does/VBZ/does merge/VB/merge sort/NN/sort take/VB/take in/IN/in all/DT/all ?/./? this/DT/this is/VBZ/is a/DT/a quick/JJ/quick recap/NN/recap of/IN/of what/WP/what we/PRP/we said/VBD/said so/RB/so far/NNP/far. we/PRP/we have/VBP/have this/DT/this sequence/NNP/sequence. we/PRP/we spit/VBP/spit it/PRP/it into/IN/into two/NNP/two. then/RB/then we/PRP/we spit/VBP/spit this/DT/this into/IN/into two/CD/two /,/, this/DT/this into/IN/into two/CD/two and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. when/WRB/when we/PRP/we had/VBD/had these/DT/these single/JJ/single ones/NNS/ones /,/, then/RB/then we/PRP/we merge/VBP/merge this/DT/this and/CC/and we/PRP/we got/VBD/got 15/CD/15. in/IN/in the/DT/the previous/JJ/previous example/NN/example i/PRP/i had/VBD/had shown/VBN/shown you/PRP/you them/PRP/them going/VBG/going up/NNP/up. i/PRP/i have/VBP/have just/RB/just kind/JJ/kind of/IN/of created/JJ/created a/DT/a mirror/NN/mirror image/NNP/image. so/RB/so i/PRP/i have/VBP/have merged/VBN/merged them/PRP/them here/NNP/here. merge/NN/merge these/DT/these 2/CD/2 got/VBD/got 2/CD/2 4merge/CD/4merge this/DT/this to/TO/to get/VB/get 3/CD/3 6/CD/6 merge/NN/merge these/DT/these 6/CD/6 get/NN/get 2/CD/2 6/CD/6. then/RB/then i/PRP/i decided/VBD/decided to/TO/to merge/VB/merge these/DT/these and/CC/and i/PRP/i get1/NNP/get1 /,/, 2/CD/2 /,/, 4/CD/4 /,/, 5/CD/5 here/NNP/here. i/PRP/i merge/VBP/merge these/DT/these two/CD/two get/NN/get 2/CD/2 /,/, 3/CD/3 /,/, 6/CD/6 /,/, 6/CD/6 and/CC/and then/RB/then i/PRP/i merge/VBP/merge this/DT/this to/TO/to get/VB/get 1/CD/1 /,/, 2/CD/2 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 6/CD/6. so/RB/so you/PRP/you could/MD/could also/RB/also think/VB/think of/IN/of pictorially/NNP/pictorially. we/PRP/we could/MD/could also/RB/also think/VB/think of/IN/of this/DT/this as/IN/as what/WP/what is/VBZ/is happening/VBG/happening that/IN/that you/PRP/you did/VBD/did your/PRP$/your divisions/NNS/divisions of/IN/of algorithmically/NNP/algorithmically. it/PRP/it ?/./? s/NNS/s the/DT/the same/JJ/same thing/NN/thing you/PRP/you are/VBP/are doing/NNP/doing. your/PRP$/your recursive/JJ/recursive call/NN/call this/DT/this is/VBZ/is just/RB/just a/DT/a way/NN/way of/IN/of representing/VBG/representing it/NNP/it. why/WRB/why am/NN/am i/PRP/i doing/VBG/doing it/PRP/it this/DT/this way/NN/way because/IN/because it/PRP/it will/MD/will now/RB/now be/VB/be easy/JJ/easy to/TO/to compute/VB/compute what/WP/what the/DT/the running/VBG/running time/NN/time is/NNP/is. can/MD/can you/PRP/you by/IN/by looking/VBG/looking at/IN/at this/DT/this picture/NN/picture say/VBP/say what/WP/what the/DT/the running/VBG/running time/NN/time should/MD/should be/VB/be ?/./? no/DT/no time/NN/time spent/NN/spent in/IN/in all/DT/all of/IN/of this/DT/this part/NNP/part. no/DT/no time/NN/time spent/NN/spent in/IN/in this/DT/this split/NN/split part/NN/part but/CC/but when/WRB/when we/PRP/we are/VBP/are doing/VBG/doing the/DT/the merges/NNS/merges we/PRP/we spend/VBP/spend time/NNP/time. how/WRB/how much/JJ/much time/NN/time do/VBP/do we/PRP/we spend/VBP/spend in/IN/in doing/VBG/doing this/DT/this ?/./? merge/NN/merge two/CD/two units/NNS/units essentially/NNP/essentially. how/WRB/how much/JJ/much in/IN/in this/DT/this two/CD/two ?/./? why/WRB/why am/NN/am i/PRP/i counting/VBG/counting two/CD/two length/NN/length of/IN/of the/DT/the two/CD/two sequences/NNS/sequences ?/./? i/PRP/i am/VBP/am merging/NNP/merging. i/PRP/i am/VBP/am always/RB/always going/VBG/going to/TO/to count/VB/count that/IN/that one/CD/one l/NN/l +/:/+ m/NNP/m. so/RB/so /:/[ hindi/NN/hindi /:/] each/DT/each of/IN/of these/DT/these merges/NNS/merges require/VBP/require two/CD/two unit/NN/unit of/IN/of time/NN/time and/CC/and how/WRB/how many/JJ/many such/JJ/such merges/NNS/merges would/MD/would i/VB/i have/VBP/have to/TO/to do/VB/do at/IN/at this/DT/this level/NN/level n/NN/n by/IN/by two/CD/two such/JJ/such merges/NNS/merges ?/./? if/IN/if these/DT/these were/VBD/were n/VBN/n elements/NNS/elements /,/, then/RB/then i/PRP/i would/MD/would do/VB/do n/RB/n by/IN/by two/CD/two merges/NNS/merges of/IN/of two/CD/two elements/NNP/elements. so/RB/so total/JJ/total time/NN/time would/MD/would be/VB/be n/VBN/n /2/-NONE-//2 into/IN/into 2/CD/2 n/NNP/n. so/RB/so that/IN/that ?/./? s/NNS/s what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/NNP/happen. we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see another/DT/another way/NN/way of/IN/of doing/VBG/doing this/DT/this in/IN/in a/DT/a short/JJ/short while/NNP/while. but/CC/but you/PRP/you should/MD/should understand/VB/understand what/WP/what ?/./? s/NNS/s happening/NNP/happening. so/RB/so each/DT/each of/IN/of these/DT/these merges/NNS/merges is/VBZ/is taking/VBG/taking two/CD/two units/NNS/units and/CC/and there/EX/there are/VBP/are n/NN/n /2/-NONE-//2 such/JJ/such merges/NNS/merges and/CC/and after/IN/after that/DT/that we/PRP/we get/VBP/get sequences/NNS/sequences of/IN/of length/NN/length two/NNP/two. after/IN/after this/DT/this step/NN/step we/PRP/we get/VBP/get basically/RB/basically sequences/NNS/sequences of/IN/of length/NN/length two/NNP/two. as/IN/as you/PRP/you can/MD/can see/VB/see now/RB/now we/PRP/we are/VBP/are merging/VBG/merging these/NNP/these. so/RB/so each/DT/each of/IN/of these/DT/these merges/NNS/merges is/VBZ/is now/RB/now going/VBG/going to/TO/to take/VB/take 4/CD/4 units/NNS/units of/IN/of time/NN/time and/CC/and there/EX/there would/MD/would be/VB/be n/VBN/n /4/-NONE-//4 search/NN/search merges/NNP/merges. this/DT/this should/MD/should correspond/VB/correspond to/TO/to this/DT/this and/CC/and the/DT/the next/JJ/next one/CD/one would/MD/would take/VB/take 8/CD/8 units/NNS/units of/IN/of time/NN/time and/CC/and that/IN/that corresponds/NNS/corresponds to/TO/to n/VB/n /8/-NONE-//8 and/CC/and there/EX/there are/VBP/are n/8/-NONE-/n/8 such/JJ/such merges/NNP/merges. n/NN/n here/RB/here is/VBZ/is 8/CD/8. so/RB/so there/RB/there is/VBZ/is only/RB/only one/CD/one such/JJ/such merge/NN/merge but/CC/but in/IN/in general/JJ/general there/EX/there would/MD/would be/VB/be n/VBN/n /8/-NONE-//8 and/CC/and so/RB/so you/PRP/you would/MD/would get/VB/get such/JJ/such a/DT/a sequence/NNP/sequence. this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have to/TO/to sum/NNP/sum. this/DT/this is/VBZ/is the/DT/the total/JJ/total time/NN/time spent/NN/spent by/IN/by your/PRP$/your algorithm/NNP/algorithm. we/PRP/we will/MD/will see/VB/see this/DT/this in/IN/in a/DT/a slightly/RB/slightly different/JJ/different way/NN/way in/IN/in a/DT/a short/JJ/short while/NNP/while. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29.45/CD/29.45 /CD/) so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to analyze/VB/analyze it/PRP/it once/RB/once again/RB/again using/VBG/using recurrence/NN/recurrence relations/NNP/relations. so/RB/so we/PRP/we had/VBD/had used/VBN/used recurrence/NN/recurrence relation/NN/relation before/IN/before i/PRP/i am/VBP/am going/VBG/going to/TO/to say/VB/say it/PRP/it once/RB/once again/RB/again so/RB/so that/IN/that it/PRP/it is/VBZ/is refreshed/VBN/refreshed in/IN/in you/PRP/you mind/NNP/mind. so/RB/so typically/RB/typically for/IN/for all/DT/all recursive/JJ/recursive of/IN/of algorithms/NNS/algorithms of/IN/of procedure/NN/procedure which/WDT/which are/VBP/are recursive/JJ/recursive in/IN/in nature/NN/nature /,/, you/PRP/you can/MD/can analyze/VB/analyze their/PRP$/their running/NN/running time/NN/time using/VBG/using recurrence/NN/recurrence relations/NNS/relations and/CC/and is/VBZ/is basically/RB/basically an/DT/an equation/NN/equation or/CC/or inequality/NN/inequality that/IN/that describes/NNS/describes a/DT/a certain/JJ/certain function/NN/function in/IN/in terms/NNS/terms of/IN/of its/PRP$/its values/NNS/values at/IN/at pervious/JJ/pervious points/NNS/points at/IN/at smaller/JJR/smaller inputs/NNP/inputs. so/RB/so for/IN/for instance/NN/instance /,/, for/IN/for a/DT/a divide/NN/divide and/CC/and conquer/NN/conquer kind/NN/kind of/IN/of a/DT/a problem/NN/problem /,/, the/DT/the time/NN/time taken/VBN/taken to/TO/to solve/VB/solve t/NN/t if/IN/if t/NN/t of/IN/of n/NN/n is/VBZ/is denotes/NNS/denotes the/DT/the time/NN/time taken/VBN/taken to/TO/to solve/VB/solve a/DT/a problem/NN/problem of/IN/of size/NN/size n/NN/n /,/, then/RB/then it/PRP/it is/VBZ/is equal/JJ/equal to/TO/to the/DT/the time/NN/time taken/NNP/taken. look/NN/look at/IN/at this/DT/this part/NNP/part. suppose/NN/suppose i/PRP/i divide/VBP/divide it/PRP/it into/IN/into some/DT/some number/NN/number of/IN/of pieces/NNS/pieces /,/, how/WRB/how many/JJ/many problems/NNS/problems did/VBD/did we/PRP/we divide/VBP/divide it/PRP/it into/IN/into two/CD/two and/CC/and each/DT/each of/IN/of the/DT/the sub-problems/NNS/sub-problems was/VBD/was half/PDT/half of/IN/of the/DT/the original/JJ/original thing/NNP/thing. so/RB/so the/DT/the sub/NN/sub problem/NN/problem by/IN/by sub/NN/sub problem/NN/problem size/NN/size factor/NN/factor /,/, i/PRP/i mean/VBP/mean by/IN/by what/WP/what factor/NN/factor have/VBP/have i/PRP/i reduced/VBN/reduced the/DT/the size/NN/size of/IN/of the/DT/the problem/NN/problem ?/./? so/RB/so that/IN/that is/VBZ/is the/DT/the time/NN/time required/VBN/required to/TO/to solve/VB/solve each/DT/each of/IN/of the/DT/the sub/NN/sub problems/NNP/problems. this/DT/this part/NN/part for/IN/for each/DT/each sub/NN/sub problem/NN/problem /,/, there/EX/there is/VBZ/is a/DT/a time/NN/time required/VBN/required that/IN/that times/NNS/times the/DT/the number/NN/number of/IN/of sub/NN/sub problems/NNS/problems is/VBZ/is the/DT/the total/JJ/total time/NN/time required/VBN/required to/TO/to solve/VB/solve the/DT/the various/JJ/various sub/NN/sub problems/NNS/problems plus/CC/plus the/DT/the time/NN/time required/VBN/required to/TO/to do/VB/do the/DT/the division/NN/division plus/VBZ/plus the/DT/the time/NN/time required/VBN/required to/TO/to do/VB/do the/DT/the combining/NNP/combining. that/IN/that would/MD/would in/IN/in general/JJ/general denote/NN/denote the/DT/the recurrence/NN/recurrence that/IN/that you/PRP/you would/MD/would get/NNP/get. of/IN/of course/NN/course this/DT/this is/VBZ/is when/WRB/when n/NN/n is/VBZ/is more/RBR/more ;/:/; if/IN/if n/NN/n =/:/= 1/CD/1 /,/, then/RB/then it/PRP/it is/VBZ/is basically/RB/basically a/DT/a trivial/JJ/trivial problem/NN/problem and/CC/and whatever/NN/whatever the/DT/the time/NN/time required/VBN/required to/TO/to solve/VB/solve the/DT/the trivial/JJ/trivial problem/NN/problem would/MD/would be/VB/be the/DT/the value/NNP/value. it/PRP/it would/MD/would be/VB/be kind/JJ/kind of/IN/of the/DT/the base/NN/base case/NN/case for/IN/for this/DT/this recurrence/NNP/recurrence. the/DT/the initial/JJ/initial condition/NN/condition for/IN/for instance/NN/instance for/IN/for the/DT/the merge/NN/merge sort/NN/sort problem/NN/problem /,/, we/PRP/we divided/VBD/divided the/DT/the problem/NN/problem into/IN/into two/CD/two pieces/NNS/pieces and/CC/and each/DT/each of/IN/of the/DT/the pieces/NNS/pieces were/VBD/were of/IN/of size/NN/size n/NN/n by/IN/by two/NNP/two. so/RB/so the/DT/the time/NN/time required/VBN/required to/TO/to solve/VB/solve the/DT/the problem/NN/problem of/IN/of size/NN/size n/NN/n /2/-NONE-//2 to/TO/to sort/VB/sort to/TO/to merge/VB/merge sort/NN/sort n/NN/n /2/-NONE-//2 elements/VBZ/elements will/MD/will be/VB/be t/VBN/t n/NN/n /2/NNP//2. if/IN/if t/NN/t n/NN/n denotes/VBZ/denotes the/DT/the time/NN/time required/VBN/required to/TO/to merge/VB/merge sort/NN/sort n/NN/n elements/NNS/elements /,/, we/PRP/we are/VBP/are using/VBG/using t/NN/t of/IN/of n/NN/n to/TO/to denote/VB/denote the/DT/the time/NN/time required/VBN/required or/CC/or the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons required/VBN/required to/TO/to merge/VB/merge sort/NN/sort n/NN/n elements/NNP/elements. then/RB/then this/DT/this is/VBZ/is the/DT/the kind/NN/kind of/IN/of a/DT/a recurrence/NN/recurrence we/PRP/we get/NNP/get. i/PRP/i have/VBP/have written/VBN/written theta/NN/theta n/NN/n here/RB/here but/CC/but you/PRP/you can/MD/can just/RB/just write/VB/write n/JJ/n here/RB/here because/IN/because that/DT/that ?/./? s/NNS/s the/DT/the upper/JJ/upper bound/NN/bound on/IN/on the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that we/PRP/we would/MD/would do/VB/do. let/VB/let ?/./? s/NNS/s say/VBP/say that/IN/that ?/./? s/NNS/s the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons we/PRP/we are/VBP/are doing/NNP/doing. so/RB/so this/DT/this is/VBZ/is the/DT/the kind/NN/kind of/IN/of a/DT/a recurrence/NN/recurrence relation/NNP/relation. this/DT/this is/VBZ/is clear/JJ/clear to/TO/to every/DT/every one/NNP/one. we/PRP/we have/VBP/have a/DT/a problem/NN/problem of/IN/of size/NN/size one/CD/one if/IN/if n/NN/n =/:/= 1/CD/1. this/DT/this is/VBZ/is just/RB/just a/DT/a constant/JJ/constant because/IN/because we/PRP/we don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to do/VB/do anything/NN/anything here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32.48/CD/32.48 /CD/) there/EX/there are/VBP/are bunches/NNS/bunches of/IN/of ways/NNS/ways of/IN/of solving/VBG/solving recurrences/NNP/recurrences. we/PRP/we have/VBP/have only/RB/only looked/VBN/looked at/IN/at what/WP/what is/VBZ/is called/VBN/called repeated/VBN/repeated substation/NN/substation method/NNP/method. what/WP/what does/VBZ/does that/IN/that say/VB/say ?/./? that/IN/that basically/RB/basically says/VBZ/says we/PRP/we expand/VBP/expand the/DT/the recurrence/NN/recurrence by/IN/by substituting/NN/substituting repeatedly/RB/repeatedly and/CC/and noticing/VBG/noticing any/DT/any patters/NNS/patters that/WDT/that you/PRP/you get/NNP/get. there/RB/there is/VBZ/is another/DT/another method/NN/method which/WDT/which is/VBZ/is called/VBN/called the/DT/the substitution/NN/substitution method/NN/method where/WRB/where you/PRP/you guess/VBP/guess a/DT/a solution/NN/solution to/TO/to the/DT/the recurrence/NN/recurrence and/CC/and then/RB/then you/PRP/you verify/VBP/verify that/IN/that your/PRP$/your recurrence/NN/recurrence really/RB/really satisfies/VBZ/satisfies that/IN/that guess/NNP/guess. in/IN/in the/DT/the course/NN/course of/IN/of this/DT/this course/NN/course /,/, we/PRP/we will/MD/will perhaps/RB/perhaps see/VB/see examples/NNS/examples of/IN/of this/DT/this way/NN/way of/IN/of solving/VBG/solving recurrence/NN/recurrence relations/NNP/relations. there/EX/there is/VBZ/is a/DT/a third/JJ/third method/NN/method called/VBN/called the/DT/the master/NN/master method/NN/method which/WDT/which basically/RB/basically says/VBZ/says that/IN/that you/PRP/you know/VBP/know if/IN/if a/DT/a recurrence/NN/recurrence is/VBZ/is of/IN/of this/DT/this kind/NN/kind /,/, then/RB/then this/DT/this is/VBZ/is the/DT/the solution/NN/solution for/IN/for this/DT/this recurrence/NN/recurrence and/CC/and you/PRP/you just/RB/just plug/VBP/plug in/IN/in the/DT/the values/NNS/values of/IN/of a/DT/a and/CC/and b/NN/b and/CC/and you/PRP/you get/VBP/get your/PRP$/your solution/NNP/solution. i/PRP/i personally/RB/personally don/JJ/don ?/./? t/NN/t like/IN/like you/PRP/you to/TO/to remember/VB/remember those/DT/those formulas/NNP/formulas. it/PRP/it should/MD/should always/RB/always be/VB/be possible/JJ/possible to/TO/to solve/VB/solve those/DT/those recurrences/NNS/recurrences by/IN/by just/RB/just looking/VBG/looking at/IN/at them/NNP/them. but/CC/but these/DT/these are/VBP/are three/CD/three ways/NNP/ways. then/RB/then there/RB/there is/VBZ/is a/DT/a fourth/JJ/fourth method/NN/method which/WDT/which is/VBZ/is a/DT/a recursion/NN/recursion tree/NN/tree that/WDT/that you/PRP/you draw/VBP/draw out/RP/out a/DT/a tree/NN/tree of/IN/of the/DT/the calls/NNS/calls that/WDT/that have/VBP/have been/VBN/been made/VBN/made as/IN/as we/PRP/we drew/VBD/drew and/CC/and you/PRP/you count/VBP/count at/IN/at each/DT/each node/NN/node /,/, how/WRB/how much/JJ/much time/NN/time is/VBZ/is being/VBG/being spent/VBN/spent /./. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at lets/NNS/lets say/VBP/say /,/, the/DT/the repeated/VBN/repeated substation/NN/substation method/NN/method once/RB/once again/NNP/again. suppose/NN/suppose i/PRP/i am/VBP/am trying/VBG/trying to/TO/to merge/VB/merge sort/NN/sort n/NN/n elements/NNS/elements and/CC/and n/NN/n is/VBZ/is some/DT/some power/NN/power of/IN/of two/CD/two /,/, lets/NNS/lets say/VBP/say two/CD/two to/TO/to the/DT/the b/NN/b /,/, this/DT/this will/MD/will help/VB/help us/PRP/us ease/VB/ease the/DT/the analysis/NN/analysis a/DT/a little/RB/little bit/NNP/bit. so/RB/so recall/JJ/recall the/DT/the recurrences/NNS/recurrences t/VBP/t on/IN/on n/NN/n =/:/= 1/CD/1 and/CC/and t/NN/t on/IN/on n/NN/n equals/NNS/equals t/VBP/t of/IN/of n/NN/n =/:/= 1/CD/1 if/IN/if n/NN/n =/:/= 1/CD/1 and/CC/and t/NN/t on/IN/on n/NN/n =/:/= 2/CD/2 times/NNS/times t/NN/t of/IN/of n/NN/n by/IN/by 2/CD/2 +/CD/+ n/NNP/n. if/IN/if n/NN/n is/VBZ/is more/RBR/more than/IN/than one/CD/one /,/, so/RB/so we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to adopt/VB/adopt repeated/VBN/repeated substitution/NNP/substitution. i/PRP/i just/RB/just keep/VB/keep writing/VBG/writing over/IN/over and/CC/and over/IN/over again/RB/again and/CC/and it/PRP/it ?/./? s/NNS/s same/VBD/same what/WP/what i/PRP/i get/NNP/get. so/RB/so i/PRP/i get/VBP/get t/RB/t of/IN/of n/NN/n =/:/= 2/CD/2 times/NNS/times t/NN/t of/IN/of n/NN/n /2/-NONE-//2 +/./+ n/NNP/n. so/RB/so i/PRP/i substituted/VBD/substituted once/RB/once and/CC/and now/RB/now i/PRP/i am/VBP/am replacing/VBG/replacing this/DT/this t/NN/t of/IN/of n/NN/n by/IN/by 2/CD/2. so/RB/so this/DT/this is/VBZ/is the/DT/the substitution/NN/substitution step/NNP/step. i/PRP/i am/VBP/am replacing/VBG/replacing this/DT/this t/NN/t of/IN/of n/NN/n /2/-NONE-//2 with/IN/with 2/CD/2 times/NNS/times t/NN/t of/IN/of n/NN/n /4/-NONE-//4 +/./+ n/NN/n /2/NNP//2. why/WRB/why n/NN/n /2/-NONE-//2 because/IN/because this/DT/this is/VBZ/is t/NN/t n/2/NNP/n/2. so/RB/so this/DT/this part/NN/part ?/./? ?/./? ?/./? is/VBZ/is coming/VBG/coming in/IN/in here/RB/here and/CC/and this/DT/this part/NN/part whatever/NN/whatever is/VBZ/is n/VBN/n written/VBN/written here/RB/here /,/, it/PRP/it comes/VBZ/comes again/RB/again here/RB/here as/IN/as plus/CC/plus n/NN/n and/CC/and now/RB/now i/PRP/i just/RB/just expand/VBP/expand this/DT/this which/WDT/which means/VBZ/means i/PRP/i just/RB/just write/JJ/write it/PRP/it as/IN/as 22/CD/22 t/NN/t n/4/-NONE-/n/4 +/./+ 2n/CD/2n. once/RB/once again/RB/again i/PRP/i substitute/VBP/substitute for/IN/for t/NN/t n/4/NNP/n/4. and/CC/and i/PRP/i expand/VBP/expand 2/CD/2 /,/, get/NN/get this/DT/this and/CC/and now/RB/now i/PRP/i have/VBP/have to/TO/to observe/VB/observe a/DT/a pattern/NN/pattern basically/NNP/basically. what/WP/what is/VBZ/is that/IN/that ?/./? s/NNS/s happening/VBG/happening ?/./? i/PRP/i get/VBP/get 22/CD/22 times/NNS/times t/NN/t 4/CD/4 times/NNS/times t/NN/t n/NN/n /4/-NONE-//4 +/./+ 2/CD/2 n/NN/n /,/, then/RB/then 8/CD/8 times/NNS/times t/NN/t n/NN/n /8/-NONE-//8 +/./+ 3/CD/3 n/NN/n and/CC/and so/RB/so on/NNP/on. so/IN/so in/IN/in general/JJ/general at/IN/at any/DT/any step/NN/step /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get something/NN/something like/IN/like after/IN/after i/PRP/i have/VBP/have done/VBN/done this/DT/this thing/NN/thing /,/, i/PRP/i times/VBZ/times i/PRP/i get/VBP/get 2/CD/2 to/TO/to the/DT/the i/PRP/i times/VBZ/times t/JJ/t of/IN/of n/2/-NONE-/n/2 to/TO/to the/DT/the i/PRP/i +/VBP/+ i/PRP/i times/VBZ/times n/NNP/n. that/IN/that ?/./? s/NNS/s what/WP/what the/DT/the 3/CD/3 /,/, the/DT/the 2/CD/2 and/CC/and 1/CD/1 here/RB/here and/CC/and now/RB/now if/IN/if i/PRP/i choose/VBP/choose i/PRP/i to/TO/to be/VB/be log/JJ/log n/NN/n /,/, what/WP/what do/VBP/do i/PRP/i get/VB/get ?/./? i/PRP/i get/VBP/get 2/CD/2 to/TO/to the/DT/the log/NN/log n/NN/n times/NNS/times t/VBP/t of/IN/of n/NN/n by/IN/by n/NN/n +/:/+ n/NN/n times/NNS/times log/VBP/log n/NNP/n. now/RB/now t/VB/t of/IN/of n/NN/n by/IN/by n/NN/n is/VBZ/is 1/CD/1 /,/, 2/CD/2 to/TO/to the/DT/the log/NN/log n/NN/n is/VBZ/is n/VBN/n t/NN/t of/IN/of 1/CD/1 is/VBZ/is 1/CD/1. so/RB/so this/DT/this becomes/VBZ/becomes n/NN/n in/IN/in all/DT/all and/CC/and this/DT/this becomes/VBZ/becomes n/NN/n log/NN/log n/NNP/n. so/RB/so i/PRP/i get/VBP/get a/DT/a total/NN/total of/IN/of n/NN/n plus/CC/plus n/NN/n log/NN/log n/NN/n which/WDT/which is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the total/JJ/total time/NN/time taken/VBN/taken by/IN/by this/DT/this procedure/NNP/procedure. everyone/NN/everyone understands/VBZ/understands this/NNP/this. so/RB/so the/DT/the very/JJ/very simple/NN/simple recurrence/NN/recurrence you/PRP/you can/MD/can just/RB/just solve/VB/solve this/DT/this using/NN/using repeated/VBD/repeated substitution/NNP/substitution. now/RB/now if/IN/if you/PRP/you are/VBP/are understanding/VBG/understanding this/DT/this /,/, let/VB/let me/PRP/me ask/VB/ask you/PRP/you a/DT/a question/NNP/question. does/VBZ/does this/DT/this give/JJ/give us/PRP/us the/DT/the average/JJ/average case/NN/case time/NN/time ?/./? it/PRP/it is/VBZ/is in/IN/in all/DT/all cases/NNS/cases it/PRP/it will/MD/will be/VB/be the/DT/the same/JJ/same time/NN/time because/IN/because we/PRP/we have/VBP/have written/VBN/written that/IN/that the/DT/the time/NN/time to/TO/to combine/VB/combine the/DT/the time/NN/time to/TO/to combine/VB/combine is/VBZ/is n/NNP/n. this/DT/this is/VBZ/is the/DT/the combining/NN/combining time/NN/time at/IN/at the/DT/the time/NN/time to/TO/to combine/VB/combine is/VBZ/is always/RB/always n/NNP/n. so/IN/so to/TO/to say/VB/say because/IN/because we/PRP/we need/VBP/need to/TO/to look/VB/look at/IN/at our/PRP$/our merge/NN/merge step/NN/step more/RBR/more carefully/RB/carefully /,/, when/WRB/when we/PRP/we look/VBP/look at/IN/at our/PRP$/our merge/NN/merge step/NN/step more/RBR/more carefully/RB/carefully and/CC/and i/PRP/i actually/RB/actually show/VBP/show you/PRP/you the/DT/the code/NN/code /,/, we/PRP/we will/MD/will see/VB/see that/IN/that you/PRP/you really/RB/really need/VBP/need that/IN/that much/RB/much time/NNP/time. you/PRP/you can/MD/can ?/./? t/VB/t do/VBP/do in/IN/in less/JJR/less than/IN/than that/DT/that time/NN/time as/IN/as many/JJ/many elements/NNS/elements as/IN/as you/PRP/you trying/VBG/trying to/TO/to merge/VB/merge total/JJ/total number/NN/number of/IN/of elements/NNP/elements. you/PRP/you are/VBP/are trying/VBG/trying to/TO/to merge/NNP/merge. you/PRP/you really/RB/really need/VBP/need that/IN/that time/NNP/time. so/RB/so what/WP/what you/PRP/you have/VBP/have actually/RB/actually argued/VBN/argued is/VBZ/is that/IN/that of/IN/of n/NNP/n- the/DT/the time/NN/time for/IN/for merge/NN/merge the/DT/the number/NN/number of/IN/of time/NN/time for/IN/for merge/NN/merge is/VBZ/is theta/NN/theta of/IN/of n/NN/n log/NN/log n/NNP/n. it/PRP/it is/VBZ/is not/RB/not omega/NNP/omega. it/PRP/it ?/./? s/NNS/s actually/RB/actually theta/NNP/theta. it/PRP/it is/VBZ/is always/RB/always you/PRP/you take/VBP/take this/DT/this kind/NN/kind of/IN/of time/NNP/time. its/PRP$/its bounded/VBN/bounded by/IN/by some/DT/some constant/JJ/constant time/NN/time n/NN/n log/NN/log n/NN/n upper/NN/upper bounded/VBD/bounded and/CC/and lower/JJR/lower bounded/VBD/bounded also/RB/also by/IN/by some/DT/some times/NNP/times. now/RB/now suppose/VBP/suppose i/PRP/i had/VBD/had instead/RB/instead of/IN/of this/DT/this one/CD/one here/RB/here /,/, i/PRP/i had/VBD/had a/DT/a c/NN/c /,/, what/WP/what do/VBP/do you/PRP/you think/VB/think will/MD/will be/VB/be a/DT/a solution/NN/solution for/IN/for this/DT/this ?/./? why/WRB/why am/NN/am i/PRP/i doing/VBG/doing this/DT/this ?/./? /:/[ hindi/NN/hindi /:/] n/NN/n into/IN/into n/NN/n plus/CC/plus c/NN/c log/NN/log n/NNP/n. so/RB/so this/DT/this is/VBZ/is by/IN/by just/RB/just looking/VBG/looking at/IN/at the/DT/the solution/NN/solution you/PRP/you can/MD/can see/VB/see that/IN/that this/DT/this is/VBZ/is what/WP/what you/PRP/you would/MD/would get/VB/get /:/[ hindi/NN/hindi /:/] provided/VBN/provided c/NN/c was/VBD/was not/RB/not that/IN/that big/NNP/big. the/DT/the one/CD/one way/NN/way of/IN/of also/RB/also thinking/VBG/thinking this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is what/WP/what we/PRP/we said/VBD/said a/DT/a recursion/NN/recursion tree/NNP/tree. let/NN/let ?/./? s/NNS/s draw/VBP/draw out/RP/out a/DT/a recursion/NN/recursion tree/NN/tree for/IN/for this/NNP/this. let/NN/let me/PRP/me write/VBP/write down/RP/down the/DT/the total/JJ/total time/NN/time taken/VBN/taken in/IN/in the/DT/the division/NN/division and/CC/and the/DT/the combining/NN/combining at/IN/at this/DT/this node/NNP/node. /NNP/[ hindi/NN/hindi /:/] so/RB/so i/PRP/i should/MD/should write/VB/write down/IN/down n/NN/n here/NNP/here. i/PRP/i should/MD/should write/VB/write down/IN/down n/2/-NONE-/n/2 and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. /NNP/[ hindi/NN/hindi /:/] now/RB/now what/WP/what ?/./? s/NNS/s the/DT/the total/JJ/total time/NN/time taken/VBN/taken ?/./? it/PRP/it ?/./? s/NNS/s basically/RB/basically the/DT/the num/NN/num sum/NN/sum of/IN/of numbers/NNS/numbers written/VBN/written in/IN/in these/DT/these nodes/NNS/nodes which/WDT/which is/VBZ/is n/VBN/n here/-NONE-/here. this/DT/this level/NN/level /:/[ hindi/NN/hindi /:/] and/CC/and so/RB/so on/NNP/on. /NNP/[ hindi/NN/hindi /:/] i/PRP/i have/VBP/have not/RB/not said/VBN/said that/IN/that these/DT/these c/NN/c ?/./? s/NNS/s are/VBP/are necessary/JJ/necessary constants/NNP/constants. there/RB/there could/MD/could also/RB/also be/VB/be something/NN/something will/MD/will depend/VB/depend upon/IN/upon n/NNP/n. n/NN/n which/WDT/which case/NN/case this/DT/this is/VBZ/is how/NNP/how. this/DT/this is/VBZ/is another/DT/another way/NN/way to/TO/to view/VB/view this/DT/this thing/NNP/thing. you/PRP/you can/MD/can draw/VB/draw out/RP/out this/DT/this tree/NN/tree and/CC/and you/PRP/you can/MD/can write/VB/write the/DT/the total/JJ/total time/NN/time being/VBG/being done/NN/done at/IN/at that/DT/that node/NN/node in/IN/in the/DT/the combine/NN/combine at/IN/at the/DT/the divide/NN/divide step/NNP/step. so/RB/so this/DT/this is/VBZ/is what/WP/what we/PRP/we do/VBP/do in/IN/in the/DT/the repeated/VBN/repeated substation/NN/substation method/NNP/method. substitute/NN/substitute /,/, expand/NN/expand substitute/NN/substitute /,/, expand/NN/expand and/CC/and keep/VB/keep doing/VBG/doing that/NNP/that. observe/NN/observe a/DT/a pattern/NNP/pattern. so/RB/so do/VBP/do it/PRP/it sufficient/VB/sufficient number/NN/number of/IN/of times/NNP/times. you/PRP/you observe/VBP/observe a/DT/a pattern/NN/pattern and/CC/and that/IN/that on/IN/on how/WRB/how you/PRP/you would/MD/would get/VB/get an/DT/an expression/NN/expression after/IN/after the/DT/the ith/NN/ith substitution/NN/substitution and/CC/and find/VB/find out/RP/out a/DT/a value/NN/value of/IN/of i/PRP/i which/WDT/which gives/VBZ/gives you/PRP/you the/DT/the value/NN/value the/DT/the initial/JJ/initial condition/NNP/condition. so/RB/so to/TO/to say/VB/say this/DT/this is/VBZ/is what/WP/what the/DT/the method/NN/method is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42.44/CD/42.44 /CD/) so/RB/so i/PRP/i can/MD/can now/RB/now show/VB/show you/PRP/you a/DT/a kind/NN/kind of/IN/of a/DT/a java/NN/java implementation/NN/implementation of/IN/of merge/NN/merge sort/NNP/sort. so/RB/so these/DT/these things/NNS/things are/VBP/are clear/NNP/clear. it/PRP/it is/VBZ/is a/DT/a very/RB/very simple/JJ/simple algorithm/NNP/algorithm. that/IN/that ?/./? s/NNS/s why/WRB/why i/PRP/i am/VBP/am showing/VBG/showing it/PRP/it to/TO/to you/NNP/you. here/RB/here we/PRP/we are/VBP/are also/RB/also taking/VBG/taking a/DT/a comparator/NN/comparator object/NNP/object. what/WP/what is/VBZ/is a/DT/a comparator/NN/comparator object/NN/object ?/./? we/PRP/we are/VBP/are not/RB/not just/RB/just merge/VB/merge sorting/VBG/sorting integers/NNP/integers. we/PRP/we could/MD/could use/VB/use this/DT/this to/TO/to sort/VB/sort anything/NNP/anything. so/RB/so we/PRP/we are/VBP/are looking/VBG/looking at/IN/at a/DT/a java/NN/java implementation/NN/implementation of/IN/of a/DT/a merge/NN/merge sort/NNP/sort. so/RB/so this/DT/this would/MD/would require/VB/require the/DT/the sort/NN/sort object/NNP/object. so/RB/so you/PRP/you define/VBP/define an/DT/an interface/NN/interface called/VBN/called sort/NN/sort object/NN/object which/WDT/which is/VBZ/is implementing/VBG/implementing a/DT/a method/NN/method called/VBN/called sort/NN/sort and/CC/and this/DT/this method/NN/method requires/VBZ/requires a/DT/a sequence/NN/sequence and/CC/and a/DT/a comparator/NNP/comparator. why/WRB/why comparator/NN/comparator because/IN/because we/PRP/we said/VBD/said we/PRP/we are/VBP/are not/RB/not interested/JJ/interested in/IN/in sorting/NN/sorting integers/NNP/integers. we/PRP/we could/MD/could be/VB/be sorting/VBG/sorting anything/NNP/anything. so/RB/so if/IN/if i/PRP/i give/VBP/give you/PRP/you tow/VBP/tow objects/NNS/objects /,/, this/DT/this comparator/NN/comparator is/VBZ/is going/VBG/going to/TO/to tell/VB/tell me/PRP/me whether/IN/whether one/CD/one is/VBZ/is less/JJR/less than/IN/than the/DT/the other/JJ/other /,/, greater/JJR/greater than/IN/than the/DT/the other/JJ/other and/CC/and so/IN/so on/NNP/on. depending/NN/depending upon/IN/upon what/WP/what you/PRP/you want/VBP/want to/TO/to do/VB/do /,/, the/DT/the sorting/NN/sorting on/IN/on you/PRP/you will/MD/will design/VB/design a/DT/a comparator/NNP/comparator. so/RB/so the/DT/the comparator/NN/comparator typically/RB/typically has/VBZ/has three/CD/three functions/NNP/functions. ?/./? is/VBZ/is less/JJR/less than/IN/than ?/./? /,/, ?/./? is/VBZ/is equal/JJ/equal to/TO/to ?/./? /,/, ?/./? is/VBZ/is greater/JJR/greater than/IN/than ?/./? and/CC/and you/PRP/you could/MD/could also/RB/also have/VB/have ?/./? is/VBZ/is less/JJR/less than/IN/than ?/./? or/CC/or ?/./? equal/JJ/equal to/TO/to also/RB/also ?/./? or/CC/or you/PRP/you could/MD/could just/RB/just these/DT/these two/CD/two do/VBP/do the/DT/the implementation/NN/implementation and/CC/and all/DT/all of/IN/of these/DT/these three/CD/three functions/NNS/functions are/VBP/are essentially/RB/essentially boolean/NNP/boolean. they/PRP/they will/MD/will say/VB/say true/JJ/true or/CC/or false/NNP/false. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44.31/CD/44.31 /CD/) so/RB/so this/DT/this is/VBZ/is basically/RB/basically the/DT/the merge/NN/merge sort/NNP/sort. you/PRP/you have/VBP/have this/DT/this sort/NNP/sort. so/RB/so you/PRP/you have/VB/have the/DT/the sequence/NN/sequence comparator/NNP/comparator. let/NN/let ?/./? s/NNS/s say/VBP/say ?/./? n/NN/n ?/./? is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the sequence/NNP/sequence. if/IN/if n/NN/n is/VBZ/is less/JJR/less than/IN/than two/CD/two which/WDT/which means/NNS/means they/PRP/they are/VBP/are just/RB/just zero/RB/zero or/CC/or one/CD/one elements/NNP/elements. nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. it/PRP/it is/VBZ/is already/RB/already sorted/NNP/sorted. otherwise/RB/otherwise you/PRP/you create/VB/create a/DT/a new/JJ/new sequence/NNP/sequence. s/NNS/s 1/CD/1 is/VBZ/is a/DT/a new/JJ/new sequence/NN/sequence and/CC/and you/PRP/you are/VBP/are going/VBG/going to/TO/to insert/VB/insert the/DT/the first/JJ/first half/DT/half of/IN/of s/NNS/s into/IN/into s/NNS/s 1/CD/1. so/RB/so let/JJ/let ?/./? s/NNS/s say/VBP/say we/PRP/we have/VBP/have an/DT/an operation/NN/operation called/VBN/called insert/NN/insert last/JJ/last which/WDT/which will/MD/will insert/VB/insert an/DT/an element/NN/element into/IN/into the/DT/the sequence/NN/sequence s/VBZ/s 1/CD/1. this/DT/this is/VBZ/is an/DT/an operation/NNP/operation. this/DT/this is/VBZ/is the/DT/the method/NN/method on/IN/on the/DT/the class/NN/class sequence/NN/sequence or/CC/or a/DT/a data/NN/data type/NNP/type. similarly/RB/similarly we/PRP/we create/VBP/create a/DT/a new/JJ/new sequence/NN/sequence called/VBN/called s/NNS/s 2/CD/2 and/CC/and we/PRP/we put/VBD/put the/DT/the second/JJ/second half/DT/half of/IN/of s/NNS/s into/IN/into s/NNS/s 2/CD/2. these/DT/these are/VBP/are how/WRB/how you/PRP/you implemented/VBD/implemented your/PRP$/your methods/NNP/methods. you/PRP/you could/MD/could have/VB/have done/VBN/done it/PRP/it this/DT/this way/NNP/way. you/PRP/you could/MD/could have/VB/have done/VBN/done it/PRP/it in/IN/in some/DT/some other/JJ/other way/NNP/way. but/CC/but let/VB/let ?/./? s/NNS/s say/VBP/say we/PRP/we have/VBP/have such/JJ/such methods/NNP/methods. then/RB/then you/PRP/you can/MD/can break/VB/break it/PRP/it up/RP/up in/IN/in this/DT/this manner/NN/manner and/CC/and now/RB/now you/PRP/you just/RB/just need/VBP/need to/TO/to call/VB/call sort/NNP/sort. sort/NN/sort on/IN/on s/NNS/s 1/CD/1 and/CC/and s/NNS/s 2/CD/2. this/DT/this merge/NN/merge sort/NN/sort on/IN/on s/NNS/s 1/CD/1 and/CC/and s/NNS/s 2/CD/2 and/CC/and then/RB/then eventually/RB/eventually you/PRP/you need/VBP/need to/TO/to do/VB/do this/DT/this merge/NNP/merge. so/RB/so s1/NNP/s1 and/CC/and s/VBZ/s 2/CD/2 were/VBD/were two/CD/two sorted/VBN/sorted sequence/NNP/sequence. c/NN/c is/VBZ/is your/PRP$/your comparator/NN/comparator and/CC/and s/NNS/s is/VBZ/is lets/NNS/lets say/VBP/say the/DT/the resulting/VBG/resulting sequence/NN/sequence you/PRP/you want/NNP/want. so/RB/so you/PRP/you will/MD/will have/VB/have to/TO/to do/VB/do this/DT/this step/VB/step and/CC/and what/WP/what does/VBZ/does this/DT/this merge/NN/merge step/NN/step contain/NN/contain ?/./? this/DT/this is/VBZ/is basically/RB/basically a/DT/a two/CD/two sorted/VBN/sorted sequence/NNP/sequence. you/PRP/you have/VBP/have a/DT/a comparator/NNP/comparator. this/DT/this is/VBZ/is the/DT/the resulting/VBG/resulting sequence/NNP/sequence. what/WP/what you/PRP/you ?/./? re/NN/re saying/VBG/saying is/VBZ/is that/IN/that while/IN/while both/DT/both the/DT/the sequences/NNS/sequences are/VBP/are non-empty/NNP/non-empty. you/PRP/you will/MD/will keep/VB/keep doing/VBG/doing something/NNP/something. what/WP/what is/VBZ/is that/IN/that something/NN/something ?/./? you/PRP/you will/MD/will compare/VB/compare the/DT/the first/JJ/first element/NN/element of/IN/of s/NNS/s 1/CD/1 and/CC/and the/DT/the first/JJ/first element/NN/element of/IN/of s/NNS/s 2/CD/2. if/IN/if the/DT/the first/JJ/first element/NN/element of/IN/of s/NNS/s 1/CD/1 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the first/JJ/first element/NN/element of/IN/of s/NNS/s 2/CD/2 /,/, then/RB/then what/WP/what is/VBZ/is that/IN/that you/PRP/you should/MD/should add/VB/add to/TO/to s/VB/s ?/./? you/PRP/you should/MD/should add/VB/add the/DT/the smaller/JJR/smaller which/WDT/which is/VBZ/is s1/NNP/s1. you/PRP/you should/MD/should add/VB/add the/DT/the first/JJ/first element/NN/element of/IN/of s/NNS/s 1/CD/1 to/TO/to s/NNP/s. so/RB/so you/PRP/you are/VBP/are going/VBG/going to/TO/to remove/VB/remove the/DT/the first/JJ/first element/NN/element of/IN/of s1/NNP/s1 from/IN/from s1/NNP/s1 and/CC/and add/VBD/add it/PRP/it to/TO/to s/NNP/s. that/IN/that ?/./? s/NNS/s the/DT/the only/JJ/only thing/NN/thing you/PRP/you are/VBP/are doing/VBG/doing here/RB/here in/IN/in this/DT/this statement/NNP/statement. get/NN/get the/DT/the first/JJ/first element/NN/element of/IN/of s1/NNP/s1 /,/, remove/VBP/remove it/PRP/it and/CC/and then/RB/then insert/VB/insert it/PRP/it into/IN/into s/NNP/s. and/CC/and you/PRP/you are/VBP/are essentially/RB/essentially repeating/VBG/repeating this/NNP/this. if/IN/if this/DT/this is/VBZ/is not/RB/not true/JJ/true /,/, then/RB/then you/PRP/you will/MD/will insert/VB/insert /,/, remove/VB/remove the/DT/the first/JJ/first element/NN/element of/IN/of s/NNS/s 2/CD/2 /,/, insert/NN/insert into/IN/into this/DT/this and/CC/and you/PRP/you keep/VB/keep repeating/VBG/repeating it/NNP/it. still/RB/still either/DT/either of/IN/of s/NNS/s 1/CD/1 or/CC/or s/NNS/s 2/CD/2 becomes/NNS/becomes empty/JJ/empty when/WRB/when one/CD/one of/IN/of them/PRP/them becomes/VBZ/becomes empty/NNP/empty. then/RB/then depending/VBG/depending upon/IN/upon which/WDT/which one/CD/one it/PRP/it is/VBZ/is /,/, if/IN/if s/NNS/s 1/CD/1 is/VBZ/is empty/JJ/empty then/RB/then that/IN/that means/NNS/means that/WDT/that you/PRP/you have/VBP/have to/TO/to just/RB/just copy/VB/copy s/NNS/s 2/CD/2 to/TO/to s/NNP/s. so/RB/so which/WDT/which means/VBZ/means that/DT/that you/PRP/you will/MD/will once/RB/once again/RB/again keep/VB/keep removing/VBG/removing one/CD/one element/NN/element at/IN/at a/DT/a time/NN/time from/IN/from s/NNS/s 2/CD/2 and/CC/and inserting/VBG/inserting it/PRP/it at/IN/at the/DT/the end/NN/end of/IN/of s/NNP/s. that/IN/that ?/./? s/NNS/s what/WP/what you/PRP/you are/VBP/are doing/NNP/doing. removing/VBG/removing the/DT/the first/JJ/first element/NN/element of/IN/of s2/NNP/s2 and/CC/and inserting/VBG/inserting at/IN/at the/DT/the end/NN/end of/IN/of s/NNP/s. you/PRP/you keep/VB/keep repeating/VBG/repeating this/NNP/this. if/IN/if s1/NNP/s1 is/VBZ/is empty/JJ/empty /,/, if/IN/if s2/NNP/s2 is/VBZ/is empty/JJ/empty /,/, then/RB/then that/IN/that means/NNS/means that/WDT/that s1/NNP/s1 is/VBZ/is left/VBN/left with/IN/with some/DT/some elements/NNP/elements. we/PRP/we will/MD/will keep/VB/keep removing/VBG/removing one/CD/one element/NN/element at/IN/at a/DT/a time/NN/time from/IN/from s/NNS/s 1/CD/1 and/CC/and insert/NN/insert it/PRP/it into/IN/into s/NNP/s. with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end today/NN/today ?/./? s/NNS/s discussion/NN/discussion on/IN/on sorting/NNP/sorting. we/PRP/we learnt/VBP/learnt what/WP/what merge/NN/merge sort/NN/sort is/VBZ/is on/IN/on which/WDT/which we/PRP/we also/RB/also saw/VBD/saw the/DT/the divide/NN/divide and/CC/and conquer/NN/conquer paradigm/NN/paradigm for/IN/for sorting/NN/sorting is/NNP/is. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 23/CD/23 more/JJR/more sorting/VBG/sorting today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to continue/VB/continue our/PRP$/our discussion/NN/discussion on/IN/on sorting/NNP/sorting. we/PRP/we will/MD/will begin/VB/begin with/IN/with radix/CD/radix sort/NNP/sort. then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at bucket/NN/bucket sort/NNP/sort. in/IN/in place/NN/place sorting/VBG/sorting is/VBZ/is something/NN/something that/IN/that we/PRP/we have/VBP/have seen/VBN/seen before/IN/before which/WDT/which are/VBP/are the/DT/the examples/NNS/examples that/WDT/that we/PRP/we know/VBP/know of/IN/of in/IN/in place/NN/place sorting/NNP/sorting. heap/NN/heap sort/NN/sort /,/, quick/JJ/quick sort/NN/sort /,/, insertion/NN/insertion sort/NN/sort /,/, selection/NN/selection sort/NN/sort /,/, bubble/JJ/bubble sort/NNP/sort. bubble/JJ/bubble sort/NN/sort we/PRP/we have/VBP/have not/RB/not done/NNP/done. we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see which/WDT/which is/VBZ/is in/IN/in place/NN/place and/CC/and which/WDT/which is/VBZ/is not/RB/not in/IN/in place/NN/place /,/, not/RB/not all/DT/all of/IN/of these/DT/these are/VBP/are in/IN/in place/NN/place what/WP/what you/PRP/you just/RB/just said/NNP/said. we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to finally/RB/finally look/VB/look at/IN/at how/WRB/how fast/JJ/fast we/PRP/we can/MD/can sort/NNP/sort. can/MD/can we/PRP/we do/VBP/do better/RBR/better than/IN/than what/WP/what we/PRP/we have/VBP/have been/VBN/been discussing/VBG/discussing so/RB/so far/NNP/far. what/WP/what is/VBZ/is a/DT/a radix/NN/radix sort/NN/sort ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1.21/CD/1.21 /CD/) see/NN/see in/IN/in radix/NN/radix sort/NN/sort we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the keys/NNS/keys that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to sort/NNP/sort. so/RB/so recall/JJ/recall that/IN/that in/IN/in all/DT/all other/JJ/other sorting/NN/sorting algorithm/NN/algorithm /,/, we/PRP/we are/VBP/are only/RB/only comparing/VBG/comparing the/DT/the keys/NNP/keys. we/PRP/we are/VBP/are not/RB/not looking/VBG/looking at/IN/at what/WP/what the/DT/the actual/JJ/actual structure/NN/structure of/IN/of the/DT/the keys/NNS/keys is/NNP/is. it/PRP/it doesn/VBD/doesn ?/./? t/NN/t really/RB/really matter/NN/matter if/IN/if the/DT/the keys/NNS/keys or/CC/or people/NNS/people provided/VBN/provided you/PRP/you have/VBP/have a/DT/a way/NN/way of/IN/of comparing/VBG/comparing two/CD/two persons/NNP/persons. if/IN/if you/PRP/you have/VBP/have a/DT/a comparator/NN/comparator function/NN/function which/WDT/which is/VBZ/is given/VBN/given two/CD/two persons/NNS/persons who/WP/who can/MD/can say/VB/say one/CD/one is/VBZ/is less/JJR/less than/IN/than the/DT/the other/JJ/other then/RB/then you/PRP/you can/MD/can also/RB/also sort/VB/sort people/NNP/people. but/CC/but today/NN/today or/CC/or in/IN/in radix/CD/radix sort/NN/sort /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the key/JJ/key itself/PRP/itself that/IN/that we/PRP/we are/VBP/are trying/VBG/trying to/TO/to sort/VB/sort /,/, the/DT/the collection/NN/collection of/IN/of keys/NNP/keys. we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that the/DT/the keys/NNS/keys are/VBP/are represented/VBN/represented in/IN/in some/DT/some base/NN/base m/NN/m number/NN/number system/NN/system and/CC/and m/NN/m is/VBZ/is called/VBN/called the/DT/the radix/NNP/radix. if/IN/if m/NN/m equals/NNS/equals 2/CD/2 then/RB/then the/DT/the keys/NNS/keys are/VBP/are essentially/RB/essentially in/IN/in binary/JJ/binary /,/, base/NN/base two/NNP/two. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02.58/CD/02.58 /CD/) this/DT/this could/MD/could be/VB/be an/DT/an example/NN/example 9/CD/9 is/VBZ/is 1/CD/1 0/-NONE-/0 0/-NONE-/0 1/CD/1 in/IN/in binary/JJ/binary /,/, in/IN/in base/NN/base two/NN/two. we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use this/DT/this representation/NN/representation of/IN/of 9/CD/9 to/TO/to do/VB/do the/DT/the sorting/NN/sorting first/NNP/first. i/PRP/i can/MD/can represent/VB/represent 9/CD/9 in/IN/in base/NN/base form/NN/form or/CC/or some/DT/some other/JJ/other base/NN/base also/RB/also /,/, base/NN/base three/CD/three let/NN/let us/PRP/us say/NNP/say. then/RB/then m/VB/m would/MD/would become/VB/become three/CD/three and/CC/and i/PRP/i can/MD/can still/RB/still use/VB/use that/IN/that to/TO/to do/VB/do the/DT/the sorting/NN/sorting and/CC/and we/PRP/we will/MD/will see/VB/see how/NNP/how. and/CC/and in/IN/in radix/NN/radix sorting/VBG/sorting /,/, the/DT/the sorting/NN/sorting is/VBZ/is done/VBN/done by/IN/by comparing/NN/comparing bits/NNS/bits in/IN/in the/DT/the same/JJ/same position/NNP/position. if/IN/if instead/RB/instead of/IN/of comparing/VBG/comparing numbers/NNS/numbers /,/, instead/RB/instead of/IN/of comparing/VBG/comparing 9/CD/9 with/IN/with 11/CD/11 /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to compare/VB/compare 9/CD/9. we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to compare/VB/compare the/DT/the bits/NNS/bits in/IN/in 9/CD/9 and/CC/and 11/CD/11. which/WDT/which bits/NNS/bits ?/./? let/NN/let us/PRP/us say/VBP/say look/NN/look at/IN/at the/DT/the bit/NN/bit at/IN/at position/NN/position three/CD/three and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to compare/VB/compare them/NNP/them. we/PRP/we will/MD/will see/VB/see all/DT/all of/IN/of that/DT/that in/IN/in a/DT/a second/JJ/second and/CC/and this/DT/this idea/NN/idea can/MD/can be/VB/be extended/VBN/extended when/WRB/when the/DT/the keys/NNS/keys are/VBP/are let/VBN/let us/PRP/us say/VBP/say alphanumeric/JJ/alphanumeric strings/NNS/strings also/NNP/also. not/RB/not just/RB/just binary/JJ/binary numbers/NNS/numbers /,/, not/RB/not just/RB/just numbers/NNS/numbers like/IN/like this/DT/this but/CC/but alphanumeric/JJ/alphanumeric strings/NNS/strings so/IN/so name/NN/name of/IN/of people/NNS/people or/CC/or some/DT/some such/JJ/such thing/NNP/thing. you/PRP/you can/MD/can also/RB/also use/VB/use a/DT/a same/JJ/same idea/NN/idea to/TO/to do/VB/do sorting/VBG/sorting on/IN/on that/DT/that and/CC/and we/PRP/we will/MD/will see/VB/see how/NNP/how. i/PRP/i am/VBP/am going/VBG/going to/TO/to talk/VB/talk of/IN/of two/CD/two variants/NNS/variants on/IN/on radix/NN/radix sort/NNP/sort. one/CD/one is/VBZ/is called/VBN/called the/DT/the radix/NN/radix exchange/NN/exchange sort/NN/sort so/RB/so what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do in/IN/in radix/NN/radix exchange/NN/exchange sort/NN/sort is/VBZ/is we/PRP/we are/VBP/are going/VBG/going to/TO/to examine/VB/examine the/DT/the bit/NNP/bit. i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume now/RB/now that/IN/that the/DT/the keys/NNS/keys we/PRP/we are/VBP/are trying/VBG/trying to/TO/to sort/VB/sort are/VBP/are some/DT/some numbers/NNS/numbers represented/VBD/represented in/IN/in binary/JJ/binary first/JJ/first and/CC/and am/NN/am going/VBG/going to/TO/to examine/VB/examine the/DT/the bits/NNS/bits from/IN/from left/VBN/left to/TO/to right/NNP/right. let/VB/let us/PRP/us assume/VB/assume also/RB/also that/IN/that each/DT/each of/IN/of the/DT/the numbers/NNS/numbers that/WDT/that are/VBP/are given/VBN/given to/TO/to us/PRP/us have/VB/have a/DT/a fixed/VBN/fixed representation/NNP/representation. they/PRP/they are/VBP/are expressed/VBN/expressed in/IN/in the/DT/the same/JJ/same number/NN/number of/IN/of bits/NNP/bits. that/IN/that can/MD/can always/RB/always be/VB/be done/VBN/done if/IN/if the/DT/the largest/JJS/largest number/NN/number in/IN/in your/PRP$/your collection/NN/collection is/VBZ/is let/VBN/let us/PRP/us say/VBP/say some/DT/some n/NN/n then/RB/then you/PRP/you need/VBP/need basically/RB/basically log/JJ/log n/NN/n bits/NNS/bits to/TO/to represent/VB/represent that/IN/that largest/JJS/largest number/NNP/number. so/RB/so with/IN/with log/NN/log n/NN/n bits/NNS/bits /,/, you/PRP/you can/MD/can express/VB/express all/PDT/all the/DT/the other/JJ/other numbers/NNS/numbers in/IN/in log/NN/log n/NN/n bits/NNS/bits and/CC/and that/IN/that would/MD/would be/VB/be the/DT/the number/NN/number of/IN/of bits/NNS/bits that/WDT/that you/PRP/you would/MD/would use/VB/use to/TO/to represent/VB/represent all/DT/all the/DT/the numbers/NNS/numbers in/IN/in the/DT/the collection/NN/collection you/PRP/you have/NNP/have. we/PRP/we are/VBP/are going/VBG/going to/TO/to sort/VB/sort the/DT/the array/NN/array with/IN/with respect/NN/respect to/TO/to the/DT/the leftmost/JJS/leftmost bit/NN/bit first/NNP/first. suppose/NN/suppose the/DT/the numbers/NNS/numbers are/VBP/are sitting/VBG/sitting in/IN/in this/DT/this array/NN/array and/CC/and the/DT/the left/NN/left most/JJS/most bit/NN/bit of/IN/of this/DT/this numbers/NNP/numbers. so/RB/so it/PRP/it really/RB/really doesn/VBP/doesn ?/./? t/NN/t matter/NN/matter what/WP/what these/DT/these other/JJ/other bits/NNS/bits are/NNP/are. i/PRP/i am/VBP/am just/RB/just looking/VBG/looking at/IN/at the/DT/the left/NN/left most/JJS/most bit/NN/bit of/IN/of each/DT/each of/IN/of these/DT/these numbers/NNP/numbers. this/DT/this is/VBZ/is the/DT/the first/JJ/first number/NN/number /,/, this/DT/this row/NN/row the/DT/the second/JJ/second number/NN/number is/VBZ/is in/IN/in this/DT/this row/NNP/row. so/RB/so there/RB/there are/VBP/are 5/CD/5 numbers/NNS/numbers /,/, 5/CD/5 rows/NNP/rows. i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the left/NN/left most/JJS/most bits/NNS/bits and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to sort/VB/sort the/DT/the numbers/NNS/numbers according/VBG/according to/TO/to this/DT/this bit/NN/bit which/WDT/which means/VBZ/means these/DT/these are/VBP/are two/CD/two zeros/NNS/zeros /,/, so/RB/so they/PRP/they come/VBP/come first/NNP/first. so/RB/so this/DT/this number/NN/number goes/VBZ/goes at/IN/at this/DT/this position/NN/position /,/, this/DT/this number/NN/number goes/VBZ/goes at/IN/at this/DT/this position/NN/position and/CC/and the/DT/the ones/NNS/ones come/VBP/come later/NNP/later. this/DT/this goes/VBZ/goes here/RB/here /,/, this/DT/this would/MD/would go/VB/go next/JJ/next and/CC/and this/DT/this would/MD/would be/VB/be the/DT/the last/JJ/last /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 54/CD/54 /CD/) /./. this/DT/this is/VBZ/is what/WP/what i/PRP/i would/MD/would do/VB/do. sort/NN/sort according/VBG/according to/TO/to the/DT/the left/NN/left most/JJS/most bits/NNS/bits and/CC/and since/IN/since the/DT/the bit/NN/bit can/MD/can have/VB/have only/RB/only two/CD/two different/JJ/different values/NNS/values /,/, it/PRP/it is/VBZ/is easy/NNP/easy. the/DT/the zeros/NNS/zeros comes/VBZ/comes before/IN/before the/DT/the ones/NNP/ones. clear/NN/clear to/TO/to everyone/NN/everyone ?/./? now/RB/now we/PRP/we partition/VBP/partition this/DT/this array/NN/array /,/, so/RB/so this/DT/this is/VBZ/is not/RB/not yet/RB/yet sorted/VBN/sorted /,/, this/DT/this set/NN/set of/IN/of numbers/NNS/numbers is/VBZ/is not/RB/not sorted/NNP/sorted. i/PRP/i will/MD/will now/RB/now divide/VB/divide it/PRP/it into/IN/into two/CD/two parts/NNP/parts. this/DT/this is/VBZ/is the/DT/the top/JJ/top sub/NN/sub array/NN/array and/CC/and bottom/NN/bottom sub/NN/sub array/NNP/array. i/PRP/i am/VBP/am going/VBG/going to/TO/to sort/VB/sort this/DT/this top/JJ/top sub/NN/sub array/NN/array independently/RB/independently of/IN/of the/DT/the bottom/NN/bottom sub/NN/sub array/NNP/array. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by sort/NN/sort the/DT/the top/JJ/top sub/NN/sub array/NN/array ?/./? just/RB/just look/VBP/look at/IN/at these/DT/these numbers/NNS/numbers /,/, forget/NN/forget this/DT/this bit/NN/bit because/IN/because this/DT/this bit/NN/bit is/VBZ/is same/JJ/same for/IN/for all/DT/all of/IN/of these/DT/these numbers/NNP/numbers. it/PRP/it will/MD/will not/RB/not make/VB/make any/DT/any difference/NN/difference in/IN/in the/DT/the value/NN/value of/IN/of the/DT/the number/NN/number /,/, i/PRP/i will/MD/will just/RB/just forget/VB/forget this/DT/this bit/NNP/bit. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 54/CD/54 /CD/) similarly/RB/similarly when/WRB/when i/PRP/i am/VBP/am sorting/VBG/sorting this/DT/this /,/, i/PRP/i will/MD/will forget/VB/forget this/DT/this bit/NNP/bit. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean to/TO/to forget/VB/forget this/DT/this bit/NN/bit /,/, when/WRB/when i/PRP/i am/VBP/am sorting/VBG/sorting these/DT/these numbers/NNS/numbers ?/./? i/PRP/i am/VBP/am saying/VBG/saying /,/, i/PRP/i would/MD/would take/VB/take the/DT/the number/NN/number or/CC/or remove/VB/remove and/CC/and subtract/VB/subtract some/DT/some number/NN/number from/IN/from that/NNP/that. what/WP/what is/VBZ/is that/IN/that number/NN/number ?/./? if/IN/if these/DT/these where/WRB/where k/NN/k bits/NNS/bits number/NN/number /,/, i/PRP/i am/VBP/am subtracting/VBG/subtracting 2/CD/2 to/TO/to the/DT/the k/NN/k from/IN/from that/DT/that number/NNP/number. if/IN/if i/PRP/i subtract/VBP/subtract 2/CD/2 to/TO/to the/DT/the k/NN/k from/IN/from each/DT/each of/IN/of the/DT/the numbers/NNS/numbers and/CC/and then/RB/then sort/NN/sort them/PRP/them /,/, then/RB/then it/PRP/it is/VBZ/is same/JJ/same as/IN/as the/DT/the sorting/NN/sorting the/DT/the original/JJ/original collection/NN/collection of/IN/of numbers/NNS/numbers /,/, it/PRP/it doesn/VBP/doesn ?/./? t/NN/t makes/VBZ/makes a/DT/a difference/NNP/difference. i/PRP/i can/MD/can sort/VB/sort this/DT/this bottom/NN/bottom sub/NN/sub array/NN/array independently/RB/independently of/IN/of the/DT/the top/JJ/top sub/NN/sub array/NN/array and/CC/and then/RB/then i/PRP/i just/RB/just put/VBD/put them/PRP/them together/RB/together and/CC/and i/PRP/i would/MD/would get/VB/get a/DT/a sorted/VBN/sorted sequence/NNP/sequence. it/PRP/it is/VBZ/is a/DT/a divide/NN/divide and/CC/and conquer/NN/conquer algorithm/NN/algorithm once/RB/once again/NNP/again. there/EX/there is/VBZ/is a/DT/a divide/NN/divide step/NN/step in/IN/in which/WDT/which zeros/NNS/zeros come/VBP/come before/IN/before the/DT/the ones/NNP/ones. there/RB/there is/VBZ/is a/DT/a conquer/NN/conquer step/NN/step and/CC/and the/DT/the combined/VBN/combined step/NN/step is/VBZ/is triviled/VBN/triviled here/RB/here so/RB/so the/DT/the conquer/NN/conquer step/NN/step /,/, this/DT/this is/VBZ/is the/DT/the recursion/NNP/recursion. we/PRP/we will/MD/will recursively/RB/recursively sort/VB/sort the/DT/the top/JJ/top sub/NN/sub array/NN/array ignoring/VBG/ignoring the/DT/the leftmost/JJS/leftmost bit/NNP/bit. we/PRP/we will/MD/will recursively/RB/recursively sort/VB/sort the/DT/the bottom/NN/bottom sub/NN/sub array/NN/array /,/, ignoring/VBG/ignoring the/DT/the left/NN/left most/JJS/most bit/NN/bit once/RB/once again/NNP/again. how/WRB/how are/VBP/are we/PRP/we going/VBG/going to/TO/to sort/VB/sort these/DT/these ?/./? using/VBG/using the/DT/the same/JJ/same idea/NN/idea /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to partition/NN/partition this/DT/this using/NN/using the/DT/the second/JJ/second left/NN/left most/JJS/most bit/NN/bit /,/, this/DT/this left/NN/left most/JJS/most bit/NN/bit and/CC/and so/RB/so on/NNP/on. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to sort/VB/sort these/DT/these n-bit/JJ/n-bit numbers/NNS/numbers ?/./? i/PRP/i claim/VBP/claim it/PRP/it takes/VBZ/takes order/NN/order b/NN/b n/NN/n time/NN/time /,/, if/IN/if i/PRP/i have/VBP/have n/VBN/n numbers/NNS/numbers and/CC/and b/NN/b bits/NNP/bits. why/WRB/why is/VBZ/is it/PRP/it ?/./? why/WRB/why can/MD/can you/PRP/you do/VB/do it/PRP/it in/IN/in so/RB/so much/RB/much time/VB/time ?/./? pardon/NNP/pardon. no/DT/no of/IN/of bits/NNS/bits is/VBZ/is log/JJ/log n/NNP/n. is/VBZ/is the/DT/the number/NN/number of/IN/of bits/NNS/bits log/VBP/log n/NN/n ?/./? log/NN/log of/IN/of the/DT/the largest/JJS/largest number/NNP/number. the/DT/the largest/JJS/largest number/NN/number need/VBP/need not/RB/not be/VB/be n/NNP/n. it/PRP/it could/MD/could be/VB/be much/JJ/much larger/JJR/larger than/IN/than n/NN/n /,/, it/PRP/it could/MD/could be/VB/be much/JJ/much smaller/JJR/smaller than/IN/than n/NNP/n. /NNP/[ student/NN/student /:/: the/DT/the number/NN/number of/IN/of keys/NNS/keys can/MD/can be/VB/be at/IN/at most/JJS/most the/DT/the largest/JJS/largest /,/, n/NN/n is/VBZ/is only/RB/only the/DT/the number/NN/number /:/] n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of numbers/NNS/numbers and/CC/and not/RB/not the/DT/the largest/JJS/largest number/NNP/number. /NNP/[ student/NN/student /:/: exactly/RB/exactly sir/JJ/sir the/DT/the number/NN/number of/IN/of keys/NNS/keys n/VBP/n is/VBZ/is at/IN/at most/JJS/most the/DT/the largest/JJS/largest number/NNP/number. /NNP/] number/NN/number of/IN/of keys/NNS/keys is/VBZ/is at/IN/at most/JJS/most largest/JJS/largest number/NN/number /,/, this/DT/this statement/NN/statement is/VBZ/is not/RB/not true/NNP/true. you/PRP/you could/MD/could have/VB/have duplicates/NNS/duplicates and/CC/and also/RB/also the/DT/the largest/JJS/largest number/NN/number can/MD/can be/VB/be much/RB/much larger/JJR/larger than/IN/than the/DT/the number/NN/number of/IN/of keys/NNS/keys /:/[ student/NN/student /:/: 1/LS/1 to/TO/to 20,000/CD/20,000 /CD/] okay/NN/okay great/NNP/great. we/PRP/we will/MD/will continue/VB/continue this/DT/this discussion/NN/discussion later/NNP/later. so/RB/so i/PRP/i claim/VBP/claim to/TO/to sort/VB/sort n/NN/n b-bit/NN/b-bit numbers/NNS/numbers you/PRP/you will/MD/will require/VB/require order/NN/order b/NN/b n/NN/n time/NN/time and/CC/and why/WRB/why is/VBZ/is this/DT/this ?/./? let/NN/let us/PRP/us try/VBP/try and/CC/and understand/NN/understand this/NNP/this. can/MD/can i/VB/i write/JJ/write a/DT/a recurrence/NN/recurrence for/IN/for this/DT/this ?/./? can/MD/can someone/VB/someone write/JJ/write a/DT/a recurrence/NN/recurrence for/IN/for this/DT/this ?/./? let/NN/let ?/./? s/NNS/s write/VBP/write a/DT/a recurrence/NNP/recurrence. let/NN/let me/PRP/me stretch/VBP/stretch and/CC/and write/JJ/write a/DT/a recurrence/NN/recurrence so/IN/so t/NN/t /:/( n/NN/n /,/, b/NN/b /:/) /./. why/WRB/why comma/NN/comma b/NN/b ?/./? number/NN/number of/IN/of bits/NNP/bits. so/RB/so t/VB/t /:/( n/NN/n /,/, b/NN/b /:/) is/VBZ/is the/DT/the time/NN/time to/TO/to sort/VB/sort n/NN/n b-bit/NN/b-bit numbers/NNP/numbers. let/NN/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is t/NN/t /:/( n/NN/n /,/, b/NN/b /:/) /./. what/WP/what is/VBZ/is this/DT/this equal/JJ/equal to/TO/to ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to partition/NN/partition this/DT/this n/NN/n numbers/NNS/numbers into/IN/into two/CD/two pieces/NNP/pieces. this/DT/this was/VBD/was the/DT/the top/JJ/top sub/NN/sub array/NN/array /,/, let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this has/VBZ/has i/PRP/i numbers/NNS/numbers in/IN/in it/PRP/it and/CC/and the/DT/the remaining/VBG/remaining would/MD/would be/VB/be n/VBN/n minus/NN/minus i/NNP/i. now/RB/now how/WRB/how much/RB/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to sort/VB/sort these/DT/these i/PRP/i numbers/VBZ/numbers ?/./? because/IN/because we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do it/PRP/it recursively/NNP/recursively. so/RB/so it/PRP/it should/MD/should be/VB/be t/VBN/t /-NONE-/( i/PRP/i /,/, b-1/-NONE-/b-1 /:/) that/IN/that ?/./? s/NNS/s important/JJ/important the/DT/the b/NN/b minus/NN/minus 1/CD/1. why/WRB/why is/VBZ/is it/PRP/it important/JJ/important ?/./? because/IN/because we/PRP/we are/VBP/are going/VBG/going to/TO/to ignore/VB/ignore the/DT/the left/NN/left most/JJS/most bit/NN/bit because/IN/because the/DT/the left/NN/left most/JJS/most bit/NN/bit is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the same/JJ/same for/IN/for all/DT/all of/IN/of these/DT/these numbers/NNP/numbers. the/DT/the time/NN/time required/VBN/required to/TO/to sort/VB/sort the/DT/the other/JJ/other n/NN/n minus/NN/minus i/PRP/i numbers/NNS/numbers is/VBZ/is n/VBN/n minus/NN/minus i/PRP/i /,/, b/VBP/b minus/CC/minus 1/CD/1 plus/NNS/plus something/NN/something more/NNP/more. how/WRB/how much/JJ/much time/NN/time ?/./? because/IN/because i/PRP/i had/VBD/had time/NN/time to/TO/to partition/NN/partition this/DT/this numbers/NNS/numbers /,/, the/DT/the numbers/NNS/numbers in/IN/in which/WDT/which the/DT/the left/NN/left most/JJS/most was/VBD/was 0/-NONE-/0 /,/, come/VBP/come before/RB/before the/DT/the numbers/NNS/numbers in/IN/in which/WDT/which the/DT/the leftmost/JJS/leftmost bit/NN/bit was/VBD/was a/DT/a 1/CD/1. they/PRP/they had/VBD/had to/TO/to be/VB/be rearranged/VBN/rearranged for/IN/for each/DT/each and/CC/and that/IN/that can/MD/can be/VB/be done/VBN/done in/IN/in order/NN/order n/NN/n time/NNP/time. this/DT/this is/VBZ/is the/DT/the kind/NN/kind of/IN/of recurrence/NN/recurrence we/PRP/we would/MD/would get/NNP/get. now/RB/now what/WP/what is/VBZ/is the/DT/the solution/NN/solution for/IN/for this/DT/this recurrence/NN/recurrence ?/./? anyone/NN/anyone ?/./? what/WP/what is/VBZ/is the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence ?/./? b/NN/b n/NNP/n. no/DT/no /,/, it/PRP/it ?/./? s/NNS/s perfectly/RB/perfectly right/RB/right if/IN/if you/PRP/you are/VBP/are saying/VBG/saying b/NN/b n/NNP/n. let/NN/let ?/./? s/NNS/s substitute/VBP/substitute /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the third/JJ/third method/NN/method we/PRP/we had/VBD/had talked/VBN/talked about/NNP/about. solving/NN/solving recurrences/NNS/recurrences by/IN/by guessing/VBG/guessing a/DT/a solution/NN/solution and/CC/and substituting/VBG/substituting that/IN/that solution/NN/solution on/IN/on actually/RB/actually verifying/VBG/verifying weather/NN/weather its/PRP$/its true/JJ/true or/CC/or not/NNP/not. let/NN/let ?/./? s/NNS/s see/VBP/see what/WP/what it/PRP/it should/MD/should be/VB/be ?/./? let/VB/let ?/./? s/NNS/s not/RB/not worry/VB/worry too/RB/too much/RB/much about/IN/about it/NNP/it. let/NN/let ?/./? s/NNS/s see/VBP/see /,/, suppose/NN/suppose t/NN/t /:/( n/NN/n /,/, b/NN/b /:/) was/VBD/was equal/JJ/equal to/TO/to b/VB/b of/IN/of n/NNP/n. may/MD/may be/VB/be i/PRP/i am/VBP/am wrong/NNP/wrong. let/NN/let ?/./? s/NNS/s see/VBP/see whether/IN/whether i/PRP/i am/VBP/am right/NNP/right. what/WP/what is/VBZ/is my/PRP$/my right/NN/right hand/NN/hand side/NN/side then/RB/then ?/./? the/DT/the right/NN/right hand/NN/hand side/NN/side equals/NNS/equals i/PRP/i because/IN/because n/JJ/n is/VBZ/is i/PRP/i times/VBZ/times /:/( b/NN/b minus/NN/minus 1/CD/1 /CD/) plus/CC/plus /CD/( n/NN/n minus/NN/minus i/PRP/i /VBP/) times/NNS/times /:/( b/NN/b minus/NN/minus 1/CD/1 /CD/) plus/CC/plus n/NN/n which/WDT/which is/VBZ/is /,/, this/DT/this part/NN/part is/VBZ/is /NNP/( b/NN/b minus/VBZ/minus 1/CD/1 /CD/) times/NNS/times /:/( i/PRP/i plus/VBZ/plus n/JJ/n minus/NN/minus i/PRP/i /VBP/) plus/RB/plus n/JJ/n /NN/( b/NN/b minus/NN/minus 1/CD/1 /CD/) times/NNS/times n/VBP/n plus/RB/plus n/JJ/n which/WDT/which is/VBZ/is b/VBP/b n/VBN/n which/WDT/which is/VBZ/is also/RB/also our/PRP$/our left/VBN/left hand/NN/hand side/NNP/side. so/RB/so this/DT/this is/VBZ/is correct/NNP/correct. this/DT/this is/VBZ/is a/DT/a solution/NN/solution to/TO/to this/DT/this reference/NNP/reference. no/DT/no harm/NN/harm /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the time/NN/time taken/VBN/taken and/CC/and we/PRP/we will/MD/will say/VB/say other/JJ/other ways/NNS/ways of/IN/of arguing/VBG/arguing the/DT/the same/JJ/same thing/NNP/thing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13.22/CD/13.22 /CD/) no/DT/no /,/, we/PRP/we don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to do/VB/do that/NNP/that. this/DT/this would/MD/would be/VB/be the/DT/the same/JJ/same for/IN/for all/DT/all choices/NNS/choices of/IN/of i/PRP/i /,/, we/PRP/we don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to any/DT/any averaging/NN/averaging here/RB/here /./[ student/NN/student /:/: but/CC/but when/WRB/when we/PRP/we did/VBD/did quick/JJ/quick sorting/NN/sorting /:/] /./. that/IN/that was/VBD/was because/IN/because we/PRP/we were/VBD/were doing/VBG/doing a/DT/a randomized/JJ/randomized quick/NN/quick sort/NNP/sort. we/PRP/we were/VBD/were computing/VBG/computing the/DT/the expected/VBN/expected time/NN/time /:/[ i/PRP/i can/MD/can be/VB/be anything/NN/anything /:/] /,/, i/PRP/i can/MD/can vary/VB/vary but/CC/but the/DT/the whole/JJ/whole point/NN/point is/VBZ/is no/DT/no matter/NN/matter what/WP/what i/PRP/i is/NNP/is. it/PRP/it will/MD/will always/RB/always be/VB/be the/DT/the same/NNP/same. their/PRP$/their depending/NN/depending upon/IN/upon what/WP/what i/PRP/i were/VBD/were /,/, the/DT/the time/NN/time would/MD/would be/VB/be different/JJ/different and/CC/and so/RB/so we/PRP/we were/VBD/were computing/VBG/computing the/DT/the average/NNP/average. if/IN/if we/PRP/we try/VBP/try to/TO/to compute/VB/compute the/DT/the average/JJ/average here/RB/here /,/, you/PRP/you would/MD/would get/VB/get still/RB/still the/DT/the same/NNP/same. the/DT/the point/NN/point is/VBZ/is it/PRP/it is/VBZ/is always/RB/always the/DT/the same/JJ/same no/DT/no matter/NN/matter what/WP/what i/PRP/i is/NNP/is. no/DT/no /,/, even/RB/even then/RB/then you/PRP/you don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to go/NNP/go. if/IN/if you/PRP/you do/VBP/do repeated/VBN/repeated substitution/NN/substitution /,/, once/RB/once again/RB/again you/PRP/you will/MD/will see/VB/see of/IN/of course/NN/course it/PRP/it will/MD/will be/VB/be more/RBR/more complicated/JJ/complicated which/WDT/which is/VBZ/is why/WRB/why i/PRP/i did/VBD/did not/RB/not do/VB/do that/DT/that method/NN/method here/NNP/here. you/PRP/you can/MD/can also/RB/also solve/VB/solve it/PRP/it by/IN/by repeated/VBN/repeated substitution/NN/substitution and/CC/and you/PRP/you will/MD/will get/VB/get the/DT/the same/JJ/same answer/NNP/answer. it/PRP/it is/VBZ/is just/RB/just that/IN/that you/PRP/you will/MD/will have/VB/have to/TO/to keep/VB/keep track/NN/track of/IN/of what/WP/what i/PRP/i ?/./? s/NNS/s you/PRP/you use/VBP/use in/IN/in the/DT/the various/JJ/various points/NNS/points in/IN/in the/DT/the recursion/NN/recursion and/CC/and that/IN/that will/MD/will make/VB/make it/PRP/it a/DT/a bit/NN/bit more/RBR/more cumbersome/NNP/cumbersome. that/IN/that you/PRP/you will/MD/will get/VB/get a/DT/a same/JJ/same solution/NNP/solution. these/DT/these are/VBP/are all/DT/all b/NN/b bit/NN/bit numbers/NNS/numbers that/WDT/that is/VBZ/is what/WP/what we/PRP/we assume/NNP/assume. the/DT/the maximum/NN/maximum number/NN/number of/IN/of bits/NNS/bits is/VBZ/is b/NN/b exactly/RB/exactly /,/, n/NN/n has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to two/CD/two to/TO/to the/DT/the power/NN/power b/NNP/b. no/DT/no /,/, this/DT/this is/VBZ/is not/RB/not true/NNP/true. i/PRP/i never/RB/never said/VBD/said these/DT/these are/VBP/are distinct/JJ/distinct numbers/NNS/numbers /,/, i/PRP/i could/MD/could have/VB/have repetitions/NNP/repetitions. /NNP/[ student/NN/student /:/: can/MD/can ?/./? t/VB/t we/PRP/we just/RB/just say/VBP/say that/IN/that we/PRP/we have/VBP/have /:/] so/RB/so that/IN/that would/MD/would be/VB/be one/CD/one way/NN/way of/IN/of arguing/VBG/arguing it/NNP/it. i/PRP/i just/RB/just wanted/VBD/wanted you/PRP/you to/TO/to show/VB/show /,/, how/WRB/how to/TO/to solve/VB/solve recurrence/NN/recurrence relations/NNS/relations also/NNP/also. there/RB/there could/MD/could be/VB/be many/JJ/many ways/NNS/ways of/IN/of arguing/VBG/arguing the/DT/the same/JJ/same thing/NN/thing /,/, that/IN/that ?/./? s/NNS/s one/CD/one argument/NNP/argument. everyone/NN/everyone understands/VBZ/understands what/WP/what the/DT/the algorithm/NN/algorithm is/NNP/is. yes/VBZ/yes /,/, how/WRB/how do/VBP/do you/PRP/you combine/VB/combine in/IN/in this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer step/NNP/step. we/PRP/we don/VBP/don ?/./? t/NN/t need/NN/need to/TO/to combine/VB/combine once/RB/once we/PRP/we have/VBP/have sorted/VBN/sorted this/DT/this top/JJ/top sub/NN/sub array/NN/array and/CC/and we/PRP/we have/VBP/have sorted/VBN/sorted this/DT/this bottom/NN/bottom sub/NN/sub array/NNP/array. all/DT/all the/DT/the numbers/NNS/numbers are/VBP/are b/RB/b bit/JJ/bit exactly/NNP/exactly. here/RB/here that/IN/that is/VBZ/is why/WRB/why this/DT/this is/VBZ/is all/DT/all uniform/NNP/uniform. that/IN/that is/VBZ/is why/WRB/why i/PRP/i said/VBD/said /,/, you/PRP/you will/MD/will take/VB/take the/DT/the largest/JJS/largest number/NN/number /,/, see/VB/see how/WRB/how many/JJ/many bits/NNS/bits you/PRP/you need/VBP/need to/TO/to represent/VB/represent in/IN/in that/DT/that and/CC/and you/PRP/you will/MD/will use/VB/use that/IN/that many/JJ/many bits/NNS/bits to/TO/to represent/VB/represent every/DT/every number/NNP/number. otherwise/NN/otherwise it/PRP/it does/VBZ/does not/RB/not work/NNP/work. you/PRP/you just/RB/just target/VB/target with/IN/with zero/CD/zero ?/./? s/NNS/s to/TO/to the/DT/the left/NNP/left. if/IN/if 8/CD/8 is/VBZ/is 1/CD/1 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 /,/, 4/CD/4 bits/NNS/bits then/RB/then 2/CD/2 would/MD/would be/VB/be 0/-NONE-/0 0/-NONE-/0 1/CD/1 0/-NONE-/0 /,/, 4/CD/4 bits/NNP/bits. great/JJ/great so/RB/so let/VB/let ?/./? s/NNS/s continue/VBP/continue /:/[ student/NN/student /:/: what/WP/what about/IN/about negative/JJ/negative /NN/] we/PRP/we will/MD/will not/RB/not worry/VB/worry about/IN/about negative/JJ/negative numbers/NNS/numbers right/RB/right now/NNP/now. if/IN/if you/PRP/you had/VBD/had negative/JJ/negative numbers/NNS/numbers and/CC/and positive/JJ/positive numbers/NNS/numbers what/WP/what will/MD/will you/PRP/you do/VB/do ?/./? first/JJ/first split/NN/split the/DT/the numbers/NNS/numbers into/IN/into negatives/NNS/negatives and/CC/and positives/NNS/positives /,/, sort/NN/sort them/PRP/them separately/RB/separately and/CC/and put/VBD/put them/PRP/them together/NNP/together. why/WRB/why make/VB/make life/NN/life more/JJR/more complicated/JJ/complicated in/IN/in that/DT/that ?/./? you/PRP/you can/MD/can always/RB/always sort/VB/sort them/PRP/them separately/NNP/separately. no/DT/no /,/, that/IN/that will/MD/will not/RB/not happen/NNP/happen. we/PRP/we will/MD/will see/VB/see more/RBR/more examples/NNS/examples and/CC/and it/PRP/it will/MD/will be/VB/be clear/NNP/clear. in/IN/in the/DT/the previous/JJ/previous slide/NN/slide i/PRP/i said/VBD/said that/IN/that you/PRP/you will/MD/will have/VB/have your/PRP$/your zero/NN/zero ?/./? s/NNS/s before/IN/before your/PRP$/your one/CD/one ?/./? s/NNP/s. that/IN/that was/VBD/was the/DT/the first/JJ/first step/NN/step we/PRP/we did/VBD/did let/VB/let me/PRP/me go/VB/go back/RB/back /./[ hindi/NN/hindi /:/] we/PRP/we took/VBD/took these/DT/these numbers/NNS/numbers /,/, we/PRP/we changed/VBD/changed this/DT/this so/RB/so that/IN/that you/PRP/you had/VBD/had the/DT/the numbers/NNS/numbers in/IN/in which/WDT/which the/DT/the leftmost/JJS/leftmost bit/NN/bit was/VBD/was a/DT/a 0/-NONE-/0 appearing/VBG/appearing before/IN/before the/DT/the numbers/NNS/numbers in/IN/in which/WDT/which the/DT/the leftmost/JJS/leftmost bit/NN/bit was/VBD/was a/DT/a 1/CD/1. we/PRP/we did/VBD/did this/DT/this kind/NN/kind of/IN/of partition/NNP/partition. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 28/CD/28 /CD/) how/WRB/how do/VBP/do you/PRP/you do/VB/do this/DT/this quickly/RB/quickly ?/./? if/IN/if you/PRP/you recall/VBP/recall in/IN/in my/PRP$/my recurrence/NN/recurrence /,/, i/PRP/i wrote/VBD/wrote order/NN/order n/NN/n for/IN/for this/DT/this and/CC/and you/PRP/you did/VBD/did not/RB/not arrays/RB/arrays occur/VB/occur on/IN/on that/NNP/that. the/DT/the point/NN/point is/VBZ/is we/PRP/we can/MD/can use/VB/use the/DT/the partitioning/NN/partitioning algorithm/NN/algorithm that/WDT/that we/PRP/we employed/VBD/employed in/IN/in quick/NN/quick sort/NN/sort to/TO/to do/VB/do this/NNP/this. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? we/PRP/we will/MD/will scan/VB/scan from/IN/from top/JJ/top to/TO/to down/VB/down /,/, finding/NN/finding the/DT/the first/JJ/first key/JJ/key with/IN/with the/DT/the one/CD/one in/IN/in the/DT/the left/NN/left most/JJS/most bit/NN/bit and/CC/and from/IN/from bottom/NN/bottom to/TO/to up/RB/up finding/VBG/finding the/DT/the first/JJ/first key/JJ/key with/IN/with a/DT/a zero/NN/zero in/IN/in the/DT/the left/NN/left most/JJS/most bit/NN/bit and/CC/and swap/NNP/swap. the/DT/the same/JJ/same kind/NN/kind of/IN/of technique/NN/technique we/PRP/we use/VBP/use for/IN/for quick/NN/quick sort/NN/sort and/CC/and we/PRP/we will/MD/will exchange/VB/exchange these/DT/these keys/NNS/keys and/CC/and we/PRP/we will/MD/will keep/VB/keep doing/VBG/doing that/IN/that until/IN/until you/PRP/you know/VBP/know the/DT/the scan/NN/scan indices/NNS/indices exchanged/NNP/exchanged. so/RB/so that/IN/that we/PRP/we know/VBP/know that/IN/that there/EX/there are/VBP/are zero/RB/zero ?/./? s/NNS/s above/IN/above and/CC/and ones/NNS/ones below/NNP/below. how/WRB/how much/JJ/much time/NN/time did/VBD/did it/PRP/it take/VB/take ?/./? at/IN/at most/JJS/most the/DT/the size/NN/size of/IN/of the/DT/the array/NNP/array. in/IN/in this/DT/this manner/NN/manner we/PRP/we can/MD/can do/VB/do the/DT/the partition/NN/partition and/CC/and then/RB/then we/PRP/we can/MD/can just/RB/just call/VB/call it/PRP/it recursively/NNP/recursively. we/PRP/we will/MD/will get/VB/get a/DT/a time/NN/time of/IN/of order/NN/order n/NN/n b/NNP/b. so/RB/so that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are doing/VBG/doing here/NNP/here. we/PRP/we are/VBP/are scanning/VBG/scanning from/IN/from the/DT/the top/JJ/top to/TO/to bottom/VB/bottom so/RB/so this/DT/this is/VBZ/is the/DT/the first/JJ/first place/NN/place we/PRP/we find/VBP/find a/DT/a 1/CD/1 /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first place/NN/place we/PRP/we find/VBP/find a/DT/a 0/CD/0. we/PRP/we swap/VBP/swap them/PRP/them /,/, 0/-NONE-/0 comes/VBZ/comes here/RB/here /,/, 1/CD/1 comes/NNS/comes here/NNP/here. then/RB/then the/DT/the next/JJ/next index/NN/index would/MD/would be/VB/be this/DT/this one/CD/one and/CC/and the/DT/the next/JJ/next here/RB/here would/MD/would be/VB/be this/DT/this zero/NNP/zero. we/PRP/we will/MD/will also/RB/also scan/VB/scan them/PRP/them and/CC/and we/PRP/we would/MD/would get/VB/get this/DT/this and/CC/and now/RB/now we/PRP/we are/VBP/are done/NNP/done. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18.41/CD/18.41 /CD/) what/WP/what is/VBZ/is happening/VBG/happening ?/./? how/WRB/how is/VBZ/is this/DT/this different/JJ/different or/CC/or related/JJ/related to/TO/to a/DT/a quick/JJ/quick sort/NN/sort ?/./? i/PRP/i will/MD/will come/VB/come to/TO/to that/DT/that in/IN/in a/DT/a minute/NN/minute but/CC/but before/IN/before that/IN/that see/NN/see what/WP/what we/PRP/we are/VBP/are doing/VBG/doing at/IN/at each/DT/each step/NNP/step. suppose/NN/suppose these/DT/these are/VBP/are the/DT/the numbers/NNS/numbers before/IN/before we/PRP/we sort/NN/sort them/NNP/them. what/WP/what does/VBZ/does this/DT/this mean/NN/mean ?/./? these/DT/these are/VBP/are the/DT/the numbers/NNS/numbers /,/, the/DT/the first/JJ/first number/NN/number in/IN/in my/PRP$/my array/NN/array is/VBZ/is this/DT/this let/NN/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is the/DT/the value/NNP/value. the/DT/the y/NN/y coordinate/NN/coordinate is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the number/NN/number /,/, this/DT/this is/VBZ/is the/DT/the number/NN/number /,/, the/DT/the second/JJ/second number/NN/number is/VBZ/is this/DT/this /,/, this/DT/this is/VBZ/is the/DT/the third/JJ/third /,/, this/DT/this is/VBZ/is the/DT/the fourth/JJ/fourth /,/, this/DT/this is/VBZ/is the/DT/the fifth/JJ/fifth /,/, this/DT/this is/VBZ/is the/DT/the sixth/NNP/sixth. what/WP/what i/PRP/i am/VBP/am doing/VBG/doing at/IN/at the/DT/the first/JJ/first step/NN/step is/VBZ/is that/IN/that i/PRP/i am/VBP/am partitioning/VBG/partitioning the/DT/the numbers/NNS/numbers according/VBG/according to/TO/to numbers/NNS/numbers which/WDT/which are/VBP/are more/RBR/more than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 and/CC/and numbers/NNS/numbers which/WDT/which are/VBP/are less/RBR/less than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1. the/DT/the numbers/NNS/numbers which/WDT/which are/VBP/are less/RBR/less than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1. why/WRB/why 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 ?/./? because/IN/because the/DT/the first/JJ/first bit/NN/bit /,/, the/DT/the most/RBS/most significant/JJ/significant bit/NN/bit we/PRP/we are/VBP/are saying/VBG/saying should/MD/should be/VB/be a/DT/a 1/CD/1. they/PRP/they will/MD/will come/VB/come together/RB/together and/CC/and the/DT/the ones/NNS/ones for/IN/for which/WDT/which it/PRP/it is/VBZ/is a/DT/a 0/-NONE-/0 /,/, they/PRP/they will/MD/will come/VB/come together/NNP/together. i/PRP/i am/VBP/am partitioning/VBG/partitioning the/DT/the numbers/NNS/numbers according/VBG/according to/TO/to 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1. those/DT/those numbers/NNS/numbers whose/WP$/whose value/NN/value is/VBZ/is more/RBR/more than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 /,/, i/PRP/i am/VBP/am moving/VBG/moving it/PRP/it to/TO/to the/DT/the right/NN/right part/NN/part of/IN/of my/PRP$/my array/NNP/array. this/DT/this is/VBZ/is what/WP/what is/VBZ/is happening/NNP/happening. these/DT/these are/VBP/are the/DT/the numbers/NNS/numbers with/IN/with values/NNS/values more/JJR/more than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 /,/, so/RB/so they/PRP/they are/VBP/are in/IN/in the/DT/the right/NN/right part/NN/part of/IN/of my/PRP$/my array/NN/array and/CC/and the/DT/the numbers/NNS/numbers which/WDT/which are/VBP/are less/RBR/less than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 /,/, they/PRP/they are/VBP/are in/IN/in the/DT/the left/NN/left part/NN/part of/IN/of my/PRP$/my array/NNP/array. i/PRP/i repeat/VBP/repeat this/DT/this on/IN/on this/DT/this one/NNP/one. once/RB/once again/RB/again i/PRP/i am/VBP/am going/VBG/going to/TO/to divide/VB/divide this/DT/this up/NN/up and/CC/and now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider the/DT/the numbers/NNS/numbers here/RB/here which/WDT/which are/VBP/are larger/JJR/larger than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 plus/CC/plus 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 2/CD/2 essentially/NNP/essentially. within/IN/within this/DT/this part/NN/part of/IN/of course/NN/course more/JJR/more than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 2/CD/2 after/IN/after i/PRP/i ignore/VBP/ignore the/DT/the leftmost/JJS/leftmost bit/NN/bit but/CC/but otherwise/RB/otherwise /,/, so/RB/so we/PRP/we keep/VBP/keep doing/VBG/doing this/DT/this eventually/RB/eventually we/PRP/we will/MD/will get/VB/get something/NN/something like/IN/like this/DT/this which/WDT/which corresponds/VBZ/corresponds to/TO/to a/DT/a sorted/JJ/sorted sequence/NNP/sequence. this/DT/this is/VBZ/is pictorially/RB/pictorially what/WP/what is/VBZ/is happening/NNP/happening. but/CC/but you/PRP/you understand/VBP/understand the/DT/the algorithm/NNP/algorithm. now/RB/now how/WRB/how does/VBZ/does this/DT/this compared/VBN/compared to/TO/to quick/VB/quick sort/NN/sort ?/./? both/DT/both the/DT/the algorithms/NNS/algorithms partition/NN/partition the/DT/the array/NN/array /,/, both/DT/both recursively/RB/recursively sort/NN/sort the/DT/the sub/NN/sub arrays/NNP/arrays. so/RB/so structure/NN/structure is/VBZ/is very/RB/very similar/JJ/similar /,/, the/DT/the difference/NN/difference is/VBZ/is in/IN/in the/DT/the way/NN/way we/PRP/we partition/NNP/partition. in/IN/in the/DT/the case/NN/case of/IN/of radix/NN/radix exchange/NN/exchange sort/NN/sort /,/, we/PRP/we are/VBP/are partitioning/VBG/partitioning with/IN/with respect/NN/respect to/TO/to not/RB/not a/DT/a pivot/NN/pivot element/NN/element but/CC/but with/IN/with respect/NN/respect to/TO/to a/DT/a fixed/VBN/fixed quantity/NNP/quantity. we/PRP/we are/VBP/are saying/VBG/saying anything/NN/anything more/JJR/more than/IN/than 2/CD/2 to/TO/to the/DT/the power/NN/power b/NN/b minus/NN/minus 1/CD/1 goes/VBZ/goes there/RB/there in/IN/in the/DT/the bottom/NN/bottom half/NN/half of/IN/of the/DT/the array/NN/array /,/, anything/NN/anything less/JJR/less than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 goes/VBZ/goes in/IN/in the/DT/the upper/JJ/upper part/NN/part of/IN/of the/DT/the array/NNP/array. it/PRP/it is/VBZ/is the/DT/the method/NN/method of/IN/of partitioning/VBG/partitioning which/WDT/which makes/VBZ/makes the/DT/the difference/NNP/difference. in/IN/in the/DT/the radix/NN/radix exchange/NN/exchange /,/, divide/NN/divide the/DT/the array/NN/array based/VBN/based on/IN/on whether/IN/whether the/DT/the number/NN/number is/VBZ/is larger/JJR/larger than/IN/than 2/CD/2 to/TO/to the/DT/the b/NN/b minus/NN/minus 1/CD/1 or/CC/or less/JJR/less than/NNP/than. while/IN/while in/IN/in quick/NN/quick sort/NN/sort we/PRP/we are/VBP/are partitioning/VBG/partitioning based/VBN/based on/IN/on a/DT/a pivot/NN/pivot element/NNP/element. the/DT/the difference/NN/difference is/VBZ/is also/RB/also in/IN/in the/DT/the time/NN/time complexity/NNP/complexity. for/IN/for radix/NN/radix exchange/NN/exchange we/PRP/we argued/VBD/argued just/RB/just now/RB/now that/IN/that the/DT/the time/NN/time complexity/NN/complexity is/VBZ/is order/NN/order bn/NNP/bn. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21.52/CD/21.52 /CD/) for/IN/for quick/JJ/quick sort/NN/sort we/PRP/we argued/VBD/argued that/IN/that the/DT/the average/NN/average case/NN/case is/VBZ/is n/VBN/n log/NN/log n/NNP/n. sometimes/RB/sometimes this/DT/this might/MD/might be/VB/be a/DT/a better/JJR/better scheme/NN/scheme depending/VBG/depending upon/IN/upon what/WP/what the/DT/the value/NN/value of/IN/of b/NN/b is/VBZ/is for/IN/for you/NNP/you. that/WDT/that was/VBD/was a/DT/a radix/NN/radix exchange/NN/exchange sort/NN/sort where/WRB/where we/PRP/we were/VBD/were exchanging/VBG/exchanging the/DT/the elements/NNS/elements in/IN/in the/DT/the array/NNP/array. i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at another/DT/another one/CD/one version/NN/version of/IN/of radix/NN/radix sort/NN/sort /,/, the/DT/the principle/NN/principle is/VBZ/is the/DT/the same/NNP/same. this/DT/this is/VBZ/is also/RB/also another/DT/another way/NN/way of/IN/of implementing/VBG/implementing radix/NN/radix sort/NNP/sort. quick/NN/quick sort/NN/sort can/MD/can be/VB/be better/JJR/better when/WRB/when b/NN/b is/VBZ/is larger/JJR/larger than/IN/than log/NN/log n/NNP/n. b/NN/b can/MD/can be/VB/be larger/JJR/larger than/IN/than log/NN/log n/NNP/n. you/PRP/you can/MD/can have/VB/have one/CD/one number/NN/number /,/, you/PRP/you can/MD/can have/VB/have numbers/NNS/numbers which/WDT/which are/VBP/are 2/CD/2 /,/, 3/CD/3 /,/, 7/CD/7 /,/, 11/CD/11 and/CC/and one/CD/one number/NN/number which/WDT/which is/VBZ/is one/CD/one million/CD/million and/CC/and three/NNP/three. now/RB/now you/PRP/you need/VBP/need a/DT/a huge/JJ/huge numbers/NNS/numbers of/IN/of bits/NNS/bits because/IN/because there/EX/there is/VBZ/is one/CD/one very/RB/very large/JJ/large number/NN/number so/IN/so that/IN/that b/NN/b would/MD/would be/VB/be much/RB/much larger/JJR/larger than/IN/than log/NN/log n/NNP/n. because/IN/because the/DT/the number/NN/number of/IN/of numbers/NNS/numbers is/VBZ/is very/RB/very small/JJ/small but/CC/but the/DT/the largest/JJS/largest number/NN/number is/VBZ/is very/RB/very large/JJ/large so/IN/so that/IN/that the/DT/the number/NN/number of/IN/of bits/NNS/bits you/PRP/you require/VBP/require to/TO/to do/VB/do your/PRP$/your sorting/NN/sorting is/VBZ/is large/NNP/large. we/PRP/we will/MD/will continue/NNP/continue. this/DT/this is/VBZ/is another/DT/another version/NN/version as/IN/as i/PRP/i said/VBD/said of/IN/of radix/NN/radix sort/NN/sort /,/, straight/RB/straight radix/CD/radix sort/NNP/sort. we/PRP/we are/VBP/are going/VBG/going to/TO/to examine/VB/examine once/RB/once again/RB/again the/DT/the bits/NNS/bits from/IN/from right/JJ/right to/TO/to left/VB/left now/NNP/now. not/RB/not from/IN/from left/VBN/left to/TO/to right/RB/right but/CC/but from/IN/from right/JJ/right to/TO/to left/NNP/left. the/DT/the k/NN/k equal/JJ/equal to/TO/to 0/-NONE-/0 corresponds/NNS/corresponds to/TO/to the/DT/the right/NN/right most/JJS/most bit/NN/bit now/NNP/now. the/DT/the least/JJS/least significant/JJ/significant bit/NN/bit also/RB/also called/VBN/called the/DT/the least/JJS/least significant/JJ/significant bit/NNP/bit. so/RB/so k/VB/k equal/JJ/equal to/TO/to 0/-NONE-/0 is/VBZ/is a/DT/a least/JJ/least significant/JJ/significant bit/NN/bit and/CC/and b/NN/b minus/NN/minus 1/CD/1 is/VBZ/is the/DT/the most/RBS/most significant/JJ/significant bit/NNP/bit. we/PRP/we are/VBP/are going/VBG/going to/TO/to sort/VB/sort the/DT/the array/NN/array based/VBN/based on/IN/on this/DT/this bit/NN/bit /,/, the/DT/the k/NN/k th/NN/th bit/NN/bit in/IN/in a/DT/a stable/NN/stable way/NNP/way. sort/NN/sort the/DT/the array/NN/array in/IN/in table/JJ/table way/NN/way looking/VBG/looking at/IN/at only/RB/only k/VBP/k th/NN/th bit/NNP/bit. let/NN/let ?/./? s/NNS/s see/VBP/see what/WP/what this/DT/this means/VBZ/means ?/./? do/VBP/do you/PRP/you understand/VB/understand what/WP/what ?/./? s/NNS/s table/JJ/table way/NN/way means/VBZ/means ?/./? no/DT/no /,/, great/JJ/great we/PRP/we will/MD/will come/VB/come to/TO/to that/DT/that in/IN/in next/JJ/next slide/NN/slide but/CC/but let/VB/let me/PRP/me show/VB/show you/PRP/you what/WP/what this/DT/this is/NNP/is. this/DT/this is/VBZ/is the/DT/the collection/NN/collection of/IN/of numbers/NNS/numbers you/PRP/you have/VBP/have /,/, what/WP/what the/DT/the algorithm/NN/algorithm is/NNP/is. you/PRP/you are/VBP/are first/RB/first going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the rightmost/NN/rightmost bit/NN/bit and/CC/and you/PRP/you are/VBP/are going/VBG/going to/TO/to sort/VB/sort these/DT/these numbers/NNS/numbers based/VBN/based on/IN/on the/DT/the right/NN/right most/JJS/most bit/NNP/bit. as/IN/as you/PRP/you can/MD/can see/VB/see after/IN/after you/PRP/you sorted/VBD/sorted them/PRP/them /,/, you/PRP/you first/RB/first have/VBP/have the/DT/the numbers/NNS/numbers which/WDT/which have/VBP/have the/DT/the rightmost/JJS/rightmost bit/NN/bit as/RB/as 0/-NONE-/0 then/RB/then you/PRP/you have/VB/have the/DT/the numbers/NNS/numbers which/WDT/which have/VBP/have the/DT/the rightmost/JJS/rightmost bit/NN/bit as/RB/as a/DT/a 1/CD/1. then/RB/then you/PRP/you sort/NN/sort these/DT/these numbers/NNS/numbers based/VBN/based on/IN/on the/DT/the second/JJ/second right/NN/right most/JJS/most bit/NNP/bit. this/DT/this corresponds/NNS/corresponds to/TO/to k/VB/k equals/NNS/equals 1/CD/1 /,/, so/RB/so you/PRP/you are/VBP/are sorting/VBG/sorting them/PRP/them based/VBN/based on/IN/on this/DT/this and/CC/and then/RB/then finally/RB/finally you/PRP/you are/VBP/are sorting/VBG/sorting these/DT/these numbers/NNS/numbers based/VBN/based on/IN/on this/NNP/this. what/WP/what will/MD/will happen/VB/happen ?/./? at/IN/at the/DT/the end/NN/end of/IN/of that/DT/that you/PRP/you will/MD/will have/VB/have a/DT/a sorted/VBN/sorted sequence/NNP/sequence. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24.29/CD/24.29 /CD/) as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this is/VBZ/is originally/RB/originally non-sorted/JJ/non-sorted and/CC/and what/WP/what you/PRP/you have/VBP/have here/RB/here is/VBZ/is a/DT/a sorted/VBN/sorted sequence/NNP/sequence. why/WRB/why is/VBZ/is this/DT/this magic/JJ/magic happening/NN/happening ?/./? you/PRP/you understand/VBP/understand the/DT/the algorithm/NNP/algorithm. take/NN/take the/DT/the rightmost/NN/rightmost bit/NN/bit /,/, sort/NN/sort the/DT/the numbers/NNS/numbers based/VBN/based on/IN/on that/DT/that which/WDT/which means/VBZ/means that/DT/that just/RB/just restrict/VBP/restrict your/PRP$/your attention/NN/attention to/TO/to the/DT/the rightmost/JJS/rightmost bit/NNP/bit. anything/NN/anything that/WDT/that is/VBZ/is a/DT/a 0/-NONE-/0 comes/VBZ/comes before/IN/before everything/NN/everything that/IN/that is/VBZ/is a/DT/a 1/CD/1. now/RB/now you/PRP/you have/VBP/have done/VBN/done some/DT/some rearranging/NN/rearranging of/IN/of the/DT/the numbers/NNP/numbers. now/RB/now look/VBP/look at/IN/at the/DT/the second/JJ/second rightmost/NN/rightmost bit/NNP/bit. they/PRP/they do/VBP/do the/DT/the sorting/VBG/sorting with/IN/with respect/NN/respect to/TO/to the/DT/the second/JJ/second right/NN/right most/JJS/most bit/NNP/bit. everything/NN/everything which/WDT/which is/VBZ/is a/DT/a 0/-NONE-/0 comes/VBZ/comes before/IN/before everything/NN/everything which/WDT/which is/VBZ/is a/DT/a 1/CD/1 and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? b/NN/b n/NN/n once/RB/once again/RB/again /,/, because/IN/because for/IN/for each/DT/each bit/NN/bit you/PRP/you are/VBP/are spending/VBG/spending time/NN/time proportional/JJ/proportional to/TO/to n/VB/n /:/[ student/NN/student /:/: partitioning/VBG/partitioning /:/] partitioning/VBG/partitioning will/MD/will not/RB/not be/VB/be used/NNP/used. we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to do/VB/do it/NNP/it. it/PRP/it is/VBZ/is not/RB/not completely/RB/completely clear/JJ/clear why/WRB/why b/NN/b n/NN/n but/CC/but will/MD/will come/VB/come to/TO/to that/DT/that argument/NN/argument also/RB/also in/IN/in a/DT/a minute/NNP/minute. first/JJ/first we/PRP/we need/VBP/need to/TO/to understand/VB/understand what/WP/what is/VBZ/is sorting/VBG/sorting in/IN/in a/DT/a stable/NN/stable way/NNP/way. what/WP/what does/VBZ/does this/DT/this mean/NN/mean ?/./? a/DT/a table/JJ/table sort/NN/sort is/VBZ/is one/CD/one in/IN/in which/WDT/which two/CD/two numbers/NNS/numbers are/VBP/are the/DT/the same/JJ/same then/RB/then after/IN/after sorting/NN/sorting /,/, so/RB/so if/IN/if two/CD/two keys/NNS/keys are/VBP/are the/DT/the same/JJ/same /,/, equal/JJ/equal keys/NNS/keys then/RB/then after/IN/after sorting/NN/sorting their/PRP$/their relative/JJ/relative order/NN/order remains/VBZ/remains unchanged/NNP/unchanged. suppose/NN/suppose i/PRP/i have/VBP/have two/CD/two numbers/NNS/numbers so/RB/so i/PRP/i have/VBP/have a/DT/a collection/NN/collection of/IN/of numbers/NNP/numbers. i/PRP/i have/VBP/have 1/CD/1 3/CD/3 11/CD/11 3/CD/3 5/CD/5 /,/, these/DT/these are/VBP/are my/PRP$/my numbers/NNP/numbers. i/PRP/i have/VBP/have two/CD/two threes/NNS/threes in/IN/in there/EX/there /,/, equal/JJ/equal keys/NNP/keys. now/RB/now if/IN/if after/IN/after sorting/VBG/sorting /,/, of/IN/of course/NN/course after/IN/after sorting/VBG/sorting this/DT/this array/NN/array would/MD/would become/VB/become 3/CD/3 3/CD/3 5/CD/5 11/CD/11. but/CC/but the/DT/the two/CD/two 3/CD/3 ?/./? s/NNS/s i/PRP/i have/VBP/have now/RB/now /,/, suppose/VBP/suppose with/IN/with those/DT/those threes/NNS/threes i/PRP/i had/VBD/had one/CD/one which/WDT/which was/VBD/was colored/VBN/colored red/VBN/red and/CC/and the/DT/the other/JJ/other was/VBD/was colored/VBN/colored blue/NNP/blue. the/DT/the first/JJ/first was/VBD/was colored/VBN/colored red/VBN/red and/CC/and the/DT/the second/JJ/second was/VBD/was colored/VBN/colored blue/JJ/blue and/CC/and after/IN/after sorting/VBG/sorting /,/, the/DT/the red/NN/red should/MD/should appear/VB/appear before/IN/before the/DT/the blue/NNP/blue. although/IN/although they/PRP/they are/VBP/are still/RB/still threes/NNS/threes /,/, they/PRP/they should/MD/should appear/VB/appear in/IN/in the/DT/the same/JJ/same relative/JJ/relative order/NN/order as/IN/as was/VBD/was the/DT/the case/NN/case before/IN/before we/PRP/we did/VBD/did the/DT/the sorting/NNP/sorting. that/IN/that is/VBZ/is called/VBN/called table/JJ/table sort/NN/sort and/CC/and we/PRP/we will/MD/will see/VB/see why/WRB/why it/PRP/it is/VBZ/is relevant/JJ/relevant here/RB/here and/CC/and why/WRB/why it/PRP/it is/VBZ/is important/JJ/important here/NNP/here. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this now/NNP/now. this/DT/this is/VBZ/is what/WP/what we/PRP/we were/VBD/were sorting/VBG/sorting and/CC/and let/VB/let us/PRP/us say/VB/say we/PRP/we are/VBP/are sorting/VBG/sorting with/IN/with respect/NN/respect to/TO/to the/DT/the right/NN/right most/JJS/most bit/NNP/bit. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27.05/CD/27.05 /CD/) i/PRP/i have/VBP/have 4/CD/4 keys/NNS/keys with/IN/with 0/-NONE-/0 /,/, they/PRP/they will/MD/will all/VB/all come/DT/come before/IN/before the/DT/the 4/CD/4 keys/NNS/keys which/WDT/which are/VBP/are at/IN/at a/DT/a one/CD/one which/WDT/which have/VBP/have the/DT/the rightmost/JJS/rightmost bit/NN/bit at/IN/at a/DT/a one/NNP/one. but/CC/but i/PRP/i would/MD/would like/VB/like that/IN/that this/DT/this appears/VBZ/appears before/IN/before this/DT/this /,/, so/RB/so the/DT/the first/JJ/first number/NN/number should/MD/should better/VB/better be/VB/be 0/-NONE-/0 1/CD/1 0/CD/0. the/DT/the next/JJ/next should/NN/should be/VB/be all/DT/all three/CD/three zero/CD/zero ?/./? s/NNP/s. the/DT/the next/JJ/next should/NN/should be/VB/be 1/CD/1 0/-NONE-/0 0/-NONE-/0 /,/, the/DT/the next/JJ/next should/NN/should be/VB/be 1/CD/1 1/CD/1 0/-NONE-/0 which/WDT/which is/VBZ/is the/DT/the case/NN/case here/NNP/here. i/PRP/i am/VBP/am not/RB/not permitted/VBN/permitted to/TO/to rearrange/VB/rearrange them/NNP/them. when/WRB/when i/PRP/i am/VBP/am saying/VBG/saying i/PRP/i just/RB/just sort/NN/sort with/IN/with respect/NN/respect to/TO/to the/DT/the last/JJ/last bit/NN/bit /,/, you/PRP/you could/MD/could also/RB/also create/VB/create this/DT/this array/NN/array post/NN/post sorted/VBD/sorted in/IN/in which/WDT/which this/DT/this was/VBD/was the/DT/the first/JJ/first number/NN/number but/CC/but that/IN/that would/MD/would be/VB/be wrong/NNP/wrong. that/IN/that would/MD/would not/RB/not be/VB/be a/DT/a stable/NN/stable sorting/VBG/sorting and/CC/and similarly/RB/similarly for/IN/for the/DT/the one/CD/one ?/./? s/NNP/s. the/DT/the first/JJ/first should/MD/should be/VB/be a/DT/a 1/CD/1 0/-NONE-/0 1/CD/1 /,/, the/DT/the next/JJ/next should/NN/should be/VB/be 0/-NONE-/0 0/-NONE-/0 1/CD/1 /,/, the/DT/the next/JJ/next should/NN/should be/VB/be 1/CD/1 1/CD/1 1/CD/1 and/CC/and the/DT/the next/JJ/next should/NN/should be/VB/be 0/-NONE-/0 1/CD/1 1/CD/1 /,/, this/DT/this is/VBZ/is crucial/JJ/crucial for/IN/for the/DT/the correctness/NN/correctness of/IN/of the/DT/the sorting/NN/sorting algorithm/NNP/algorithm. if/IN/if you/PRP/you don/VBP/don ?/./? t/NN/t do/VB/do it/PRP/it this/DT/this way/NN/way /,/, this/DT/this will/MD/will not/RB/not give/VB/give you/PRP/you the/DT/the sorted/JJ/sorted sequence/NN/sequence at/IN/at the/DT/the end/NNP/end. so/RB/so everyone/NN/everyone understands/NNS/understands what/WP/what table/JJ/table sorting/NN/sorting is/NNP/is. now/RB/now let/VB/let ?/./? s/NNS/s understand/VBP/understand the/DT/the correctness/NN/correctness of/IN/of the/DT/the algorithm/NNP/algorithm. we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to show/VB/show that/IN/that any/DT/any two/CD/two keys/NNS/keys are/VBP/are in/IN/in the/DT/the correct/NN/correct relative/JJ/relative order/NN/order at/IN/at the/DT/the end/NN/end that/IN/that means/NNS/means if/IN/if i/PRP/i take/VBP/take two/CD/two keys/NNS/keys /,/, one/CD/one is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the other/NNP/other. then/RB/then in/IN/in the/DT/the end/NN/end /,/, the/DT/the key/JJ/key which/WDT/which is/VBZ/is smaller/JJR/smaller appears/NNS/appears before/IN/before the/DT/the key/JJ/key which/WDT/which is/VBZ/is larger/JJR/larger /,/, very/RB/very simple/JJ/simple proof/NNP/proof. so/RB/so suppose/RB/suppose these/DT/these are/VBP/are the/DT/the two/CD/two keys/NNS/keys that/WDT/that were/VBD/were given/VBN/given to/TO/to me/NNP/me. let/VB/let me/PRP/me look/VB/look at/IN/at the/DT/the leftmost/NN/leftmost position/NN/position at/IN/at which/WDT/which they/PRP/they differ/NNP/differ. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28.43/CD/28.43 /CD/) leftmost/NN/leftmost /,/, so/RB/so this/DT/this they/PRP/they don/VBP/don ?/./? t/NN/t differ/NN/differ at/IN/at this/DT/this place/NNP/place. they/PRP/they don/VBP/don ?/./? t/NN/t differ/NN/differ at/IN/at this/DT/this place/NN/place even/RB/even but/CC/but they/PRP/they differ/VBP/differ at/IN/at this/DT/this place/NNP/place. let/VBD/let me/PRP/me call/VBP/call this/DT/this position/NN/position k/NN/k /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 50/CD/50 /CD/) /./. now/RB/now when/WRB/when i/PRP/i am/VBP/am sorting/VBG/sorting this/DT/this bunch/NN/bunch of/IN/of numbers/NNS/numbers what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen ?/./? when/WRB/when i/PRP/i am/VBP/am sorting/VBG/sorting remember/NN/remember i/PRP/i am/VBP/am sorting/VBG/sorting by/IN/by considering/VBG/considering first/JJ/first the/DT/the right/NN/right most/JJS/most then/RB/then the/DT/the second/JJ/second right/NN/right most/JJS/most then/RB/then the/DT/the third/JJ/third right/NN/right most/JJS/most and/CC/and so/RB/so on/NNP/on. let/VB/let ?/./? s/NNS/s us/PRP/us understand/VBP/understand this/NNP/this. the/DT/the claim/NN/claim is/VBZ/is that/IN/that the/DT/the step/NN/step k/NN/k /,/, the/DT/the two/CD/two keys/NNS/keys are/VBP/are put/VBN/put in/IN/in the/DT/the corrective/JJ/corrective relative/JJ/relative order/NNP/order. at/IN/at the/DT/the first/JJ/first step/NN/step they/PRP/they may/MD/may be/VB/be rearranged/VBN/rearranged i/PRP/i don/VBP/don ?/./? t/NN/t care/NN/care /,/, they/PRP/they are/VBP/are put/VBN/put in/IN/in some/DT/some order/NNP/order. at/IN/at the/DT/the second/JJ/second step/NN/step also/RB/also they/PRP/they are/VBP/are put/VBN/put in/IN/in some/DT/some order/NN/order /,/, i/PRP/i don/VBP/don ?/./? t/NN/t know/NNP/know. but/CC/but at/IN/at the/DT/the k/NN/k th/NN/th step/NN/step /,/, this/DT/this key/JJ/key would/MD/would put/VB/put before/IN/before this/DT/this key/JJ/key because/IN/because this/DT/this is/VBZ/is a/DT/a 0/-NONE-/0 and/CC/and this/DT/this is/VBZ/is a/DT/a 1/CD/1. at/IN/at the/DT/the k/NN/k th/NN/th step/NN/step the/DT/the two/CD/two keys/NNS/keys are/VBP/are put/VBN/put in/IN/in the/DT/the correct/NN/correct relative/JJ/relative order/NN/order but/CC/but all/DT/all is/VBZ/is not/RB/not done/VBN/done now/NNP/now. we/PRP/we want/VBP/want to/TO/to argue/VB/argue that/IN/that at/IN/at the/DT/the latest/JJS/latest step/NN/step /,/, at/IN/at the/DT/the k/NN/k plus/VBZ/plus 1/CD/1 th/NN/th step/NN/step and/CC/and the/DT/the k/NN/k plus/VBZ/plus 2/CD/2 th/NN/th step/NN/step and/CC/and so/RB/so on/IN/on /,/, the/DT/the relative/JJ/relative order/NN/order is/VBZ/is not/RB/not interchanged/VBN/interchanged /-NONE-/[ hindi/NN/hindi /:/] because/IN/because of/IN/of stability/NNP/stability. now/RB/now when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the k/NN/k plus/VBZ/plus one/CD/one th/NN/th step/NN/step /,/, at/IN/at the/DT/the k/NN/k plus/VBZ/plus one/CD/one th/NN/th step/NN/step these/DT/these are/VBP/are the/DT/the same/NNP/same. these/DT/these are/VBP/are the/DT/the same/JJ/same /,/, because/IN/because it/PRP/it is/VBZ/is a/DT/a table/JJ/table sort/NN/sort this/DT/this key/JJ/key which/WDT/which is/VBZ/is appearing/VBG/appearing before/IN/before this/DT/this would/MD/would continue/VB/continue to/TO/to appear/VB/appear before/IN/before this/DT/this and/CC/and similarly/RB/similarly at/IN/at this/DT/this next/JJ/next step/NN/step and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. beyond/IN/beyond the/DT/the k/NN/k th/NN/th step/NN/step /,/, the/DT/the relative/JJ/relative order/NN/order would/MD/would not/RB/not change/VB/change anymore/NNP/anymore. at/IN/at the/DT/the k/NN/k th/NN/th step/NN/step you/PRP/you would/MD/would get/VB/get the/DT/the right/NN/right order/NN/order between/IN/between these/DT/these two/CD/two keys/NNS/keys /,/, the/DT/the smaller/JJR/smaller key/JJ/key will/MD/will appear/VB/appear before/IN/before the/DT/the larger/JJR/larger key/JJ/key and/CC/and add/JJ/add sub/NN/sub sequent/NN/sequent steps/NNS/steps /,/, this/DT/this relative/JJ/relative order/NN/order would/MD/would be/VB/be preserved/NNP/preserved. the/DT/the smaller/JJR/smaller key/JJ/key would/MD/would be/VB/be continued/VBN/continued to/TO/to appear/VB/appear before/IN/before the/DT/the larger/JJR/larger key/JJ/key /NN/[ hindi/NN/hindi /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31.13/CD/31.13 /CD/) let/NN/let ?/./? s/NNS/s take/VBP/take an/DT/an example/NNP/example. this/DT/this is/VBZ/is the/DT/the two/CD/two keys/NNS/keys once/RB/once again/RB/again that/IN/that i/PRP/i am/VBP/am considering/NNP/considering. initially/RB/initially they/PRP/they could/MD/could be/VB/be in/IN/in some/DT/some arbitrary/JJ/arbitrary order/NNP/order. i/PRP/i have/VBP/have in/IN/in fact/NN/fact that/IN/that the/DT/the larger/JJR/larger keys/NNS/keys appearing/VBG/appearing before/IN/before the/DT/the smaller/JJR/smaller key/NNP/key. this/DT/this is/VBZ/is the/DT/the array/NN/array in/IN/in which/WDT/which the/DT/the numbers/NNS/numbers are/VBP/are ?/./? /:/[ hindi/NN/hindi /:/] /./. this/DT/this is/VBZ/is location/NN/location zero/NN/zero of/IN/of the/DT/the array/NN/array and/CC/and so/RB/so on/NNP/on. you/PRP/you would/MD/would like/VB/like that/IN/that the/DT/the keys/NNS/keys be/VB/be in/IN/in increasing/VBG/increasing order/NN/order but/CC/but right/RB/right now/RB/now bigger/JJR/bigger number/NN/number is/VBZ/is appearing/VBG/appearing before/IN/before the/DT/the smaller/JJR/smaller number/NNP/number. when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the k/NN/k th/NN/th step/NN/step /,/, at/IN/at this/DT/this step/NN/step when/WRB/when i/PRP/i am/VBP/am sorting/VBG/sorting with/IN/with respect/NN/respect to/TO/to this/DT/this bit/NN/bit /,/, the/DT/the k/NN/k th/NN/th bit/NN/bit i/PRP/i would/MD/would have/VB/have put/VBN/put 0/-NONE-/0 1/CD/1 0/-NONE-/0 1/CD/1 1/CD/1 before/IN/before 0/-NONE-/0 1/CD/1 1/CD/1 0/-NONE-/0 1/CD/1 clearly/RB/clearly because/IN/because at/IN/at the/DT/the k/NN/k th/NN/th position/NN/position /,/, this/DT/this is/VBZ/is a/DT/a 0/-NONE-/0 and/CC/and this/DT/this is/VBZ/is a/DT/a 1/CD/1. now/RB/now when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the next/JJ/next more/JJR/more significant/JJ/significant bit/NN/bit /,/, i/PRP/i would/MD/would continue/VB/continue this/DT/this relative/JJ/relative order/NN/order because/IN/because at/IN/at the/DT/the next/JJ/next more/JJR/more significant/JJ/significant bit/NN/bit they/PRP/they are/VBP/are the/DT/the same/NNP/same. if/IN/if they/PRP/they are/VBP/are the/DT/the same/JJ/same then/RB/then stable/JJ/stable sorting/NN/sorting ensures/NNS/ensures that/WDT/that i/PRP/i have/VBP/have to/TO/to maintain/VB/maintain the/DT/the relative/JJ/relative order/NN/order that/WDT/that was/VBD/was there/RB/there till/RB/till that/IN/that point/NN/point in/IN/in which/WDT/which this/DT/this was/VBD/was appearing/VBG/appearing before/IN/before this/NNP/this. so/RB/so this/DT/this will/MD/will continue/VB/continue to/TO/to appear/VB/appear before/IN/before this/DT/this step/NN/step and/CC/and in/IN/in subsequent/NN/subsequent steps/NNS/steps also/NNP/also. so/RB/so because/IN/because the/DT/the sort/NN/sort is/VBZ/is stable/JJ/stable /,/, the/DT/the order/NN/order of/IN/of the/DT/the two/CD/two keys/NNS/keys will/MD/will not/RB/not be/VB/be changed/VBN/changed when/WRB/when bits/NNS/bits more/RBR/more than/IN/than k/NN/k are/VBP/are greater/JJR/greater than/IN/than or/CC/or bits/NNS/bits at/IN/at position/NN/position larger/JJR/larger than/IN/than k/NN/k are/VBP/are compared/NNP/compared. you/PRP/you can/MD/can also/RB/also see/VB/see now/RB/now /,/, why/WRB/why i/PRP/i had/VBD/had to/TO/to start/VB/start from/IN/from the/DT/the right/NN/right end/NNP/end. if/IN/if i/PRP/i start/VBP/start from/IN/from the/DT/the left/NN/left end/NN/end then/RB/then this/DT/this technique/NN/technique is/VBZ/is not/RB/not going/VBG/going to/TO/to work/NNP/work. take/VB/take this/DT/this is/VBZ/is an/DT/an exercise/NN/exercise /,/, think/VBP/think of/IN/of an/DT/an example/NN/example if/IN/if i/PRP/i were/VBD/were to/TO/to start/VB/start from/IN/from the/DT/the left/NN/left end/NN/end /,/, this/DT/this would/MD/would not/RB/not give/VB/give me/PRP/me a/DT/a sorted/JJ/sorted sequence/NN/sequence at/IN/at the/DT/the end/NNP/end. there/RB/there is/VBZ/is nothing/NN/nothing sacrosanct/NN/sacrosanct about/IN/about binary/JJ/binary numbers/NNS/numbers /,/, i/PRP/i can/MD/can also/RB/also apply/RB/apply the/DT/the same/JJ/same technique/NN/technique to/TO/to decimal/JJ/decimal numbers/NNP/numbers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33.15/CD/33.15 /CD/) what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? first/JJ/first i/PRP/i sort/NN/sort with/IN/with respect/NN/respect to/TO/to the/DT/the right/NN/right most/JJS/most digit/NN/digit which/WDT/which means/VBZ/means that/DT/that the/DT/the ones/NNS/ones would/MD/would come/VB/come before/IN/before the/DT/the two/CD/two ?/./? s/NNS/s would/MD/would come/VB/come before/IN/before the/DT/the three/CD/three ?/./? s/NNS/s and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. again/RB/again the/DT/the sorting/NN/sorting is/VBZ/is stable/NNP/stable. after/IN/after the/DT/the first/JJ/first step/NN/step as/IN/as you/PRP/you can/MD/can see/VB/see /,/, the/DT/the first/JJ/first number/NN/number would/MD/would be/VB/be /,/, so/RB/so there/RB/there is/VBZ/is a/DT/a 1/CD/1 1/CD/1 /,/, there/EX/there are/VBP/are two/CD/two 2/CD/2 ?/./? s/NNS/s here/RB/here and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. there/RB/there is/VBZ/is a/DT/a unique/JJ/unique one/CD/one 0/-NONE-/0 3/CD/3 1/CD/1 /,/, so/RB/so 3/CD/3 1/CD/1 becomes/NNS/becomes the/DT/the first/JJ/first number/NNP/number. then/RB/then there/RB/there are/VBP/are these/DT/these two/CD/two 2/CD/2 ?/./? s/NNS/s /,/, 0/-NONE-/0 3/CD/3 2/CD/2 and/CC/and 2/CD/2 5/CD/5 2/CD/2 which/WDT/which should/MD/should be/VB/be the/DT/the second/JJ/second number/NNP/number. 0/-NONE-/0 3/CD/3 2/CD/2 because/IN/because it/PRP/it ?/./? s/NNS/s stable/NNP/stable. so/RB/so 0/-NONE-/0 3/CD/3 2/CD/2 is/VBZ/is the/DT/the next/JJ/next /,/, 2/CD/2 5/CD/5 2/CD/2 is/VBZ/is the/DT/the third/JJ/third and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. so/RB/so i/PRP/i sort/VBP/sort with/IN/with respect/NN/respect to/TO/to this/NNP/this. next/JJ/next i/NN/i sort/NN/sort with/IN/with respect/NN/respect to/TO/to this/DT/this /,/, so/RB/so there/RB/there is/VBZ/is a/DT/a 1/CD/1 here/RB/here /,/, 0/-NONE-/0 1/CD/1 5/CD/5 /,/, there/EX/there is/VBZ/is another/DT/another 1/CD/1 so/RB/so i/PRP/i will/MD/will first/RB/first put/VB/put this/DT/this and/CC/and then/RB/then i/PRP/i will/MD/will put/VB/put this/DT/this and/CC/and so/RB/so on/NNP/on. as/IN/as you/PRP/you can/MD/can see/VB/see at/IN/at the/DT/the end/NN/end i/PRP/i get/VBP/get a/DT/a sorted/VBN/sorted sequence/NNP/sequence. now/RB/now we/PRP/we need/VBP/need to/TO/to figure/VB/figure out/RP/out the/DT/the time/NN/time complexity/NN/complexity /,/, how/WRB/how much/JJ/much time/NN/time have/VBP/have you/PRP/you taken/VBN/taken ?/./? so/RB/so how/WRB/how man/NN/man passes/NNS/passes /,/, such/JJ/such passes/NNS/passes are/VBP/are we/PRP/we are/VBP/are making/VBG/making ?/./? we/PRP/we are/VBP/are making/VBG/making as/IN/as many/JJ/many passes/NNS/passes as/IN/as the/DT/the number/NN/number of/IN/of digits/NNS/digits or/CC/or the/DT/the number/NN/number of/IN/of bits/NNS/bits or/CC/or whatever/RB/whatever it/PRP/it is/NNP/is. but/CC/but we/PRP/we need/VBP/need to/TO/to now/RB/now see/VB/see what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do in/IN/in one/CD/one pass/NNP/pass. how/WRB/how are/VBP/are we/PRP/we getting/VBG/getting a/DT/a one/CD/one ?/./? s/NNS/s before/IN/before the/DT/the two/CD/two ?/./? s/NNS/s before/IN/before the/DT/the three/CD/three ?/./? s/NNS/s and/CC/and so/RB/so on/IN/on in/IN/in a/DT/a stable/NN/stable manner/NNP/manner. how/WRB/how much/JJ/much time/NN/time does/VBZ/does that/IN/that take/VB/take ?/./? what/WP/what kind/NN/kind of/IN/of a/DT/a scheme/NN/scheme should/MD/should be/VB/be employed/VBN/employed for/IN/for that/DT/that ?/./? exactly/RB/exactly /,/, for/IN/for exchange/NN/exchange radix/NN/radix sort/NN/sort we/PRP/we basically/RB/basically wanted/VBD/wanted to/TO/to partition/NN/partition the/DT/the array/NN/array into/IN/into two/CD/two parts/NNS/parts only/RB/only but/CC/but here/RB/here because/IN/because these/DT/these are/VBP/are digits/NNS/digits /,/, not/RB/not just/RB/just 0/-NONE-/0 1/CD/1 it/PRP/it is/VBZ/is not/RB/not a/DT/a two/CD/two way/NN/way partition/NN/partition anymore/NNP/anymore. for/IN/for decimal/JJ/decimal numbers/NNS/numbers /,/, we/PRP/we will/MD/will have/VB/have to/TO/to represent/VB/represent it/PRP/it in/IN/in a/DT/a binary/JJ/binary form/NN/form to/TO/to be/VB/be able/JJ/able to/TO/to do/VB/do this/NNP/this. what/WP/what is/VBZ/is like/IN/like an/DT/an insertion/NN/insertion ?/./? i/PRP/i don/VBP/don ?/./? t/NN/t quite/RB/quite follow/JJ/follow what/WP/what you/PRP/you are/VBP/are saying/NNP/saying. we/PRP/we will/MD/will discuss/VB/discuss this/DT/this later/NNP/later. let/VBD/let ?/./? s/NNS/s figure/VBP/figure out/RP/out what/WP/what the/DT/the time/NN/time complexity/NN/complexity is/NNP/is. for/IN/for k/NN/k equal/JJ/equal to/TO/to 0/-NONE-/0 to/TO/to b/VB/b minus/NN/minus 1/CD/1 /,/, we/PRP/we are/VBP/are sorting/VBG/sorting the/DT/the array/NN/array in/IN/in a/DT/a stable/NN/stable way/NN/way looking/VBG/looking only/RB/only at/IN/at k/NN/k th/NN/th bit/NNP/bit. suppose/NN/suppose this/DT/this could/MD/could be/VB/be performed/VBN/performed in/IN/in order/NN/order n/NN/n time/NN/time then/RB/then the/DT/the total/NN/total time/NN/time complexity/NN/complexity would/MD/would be/VB/be order/NN/order bn/NNP/bn. that/IN/that ?/./? s/NNS/s completely/RB/completely clear/JJ/clear provided/VBN/provided we/PRP/we can/MD/can do/VB/do this/DT/this sorting/NN/sorting in/IN/in order/NN/order n/NN/n time/NN/time which/WDT/which sorting/VBG/sorting we/PRP/we are/VBP/are talking/VBG/talking about/NNP/about. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at a/DT/a particular/JJ/particular digit/NN/digit /,/, one/CD/one pass/NNP/pass. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at a/DT/a particular/JJ/particular digit/NN/digit or/CC/or a/DT/a bit/NN/bit and/CC/and we/PRP/we want/VBP/want to/TO/to ensure/VB/ensure that/IN/that all/DT/all the/DT/the numbers/NNS/numbers /,/, if/IN/if i/PRP/i am/VBP/am looking/VBG/looking at/IN/at decimal/JJ/decimal numbers/NNS/numbers all/DT/all the/DT/the numbers/NNS/numbers are/VBP/are sorted/VBN/sorted based/VBN/based on/IN/on that/DT/that digit/NNP/digit. the/DT/the one/CD/one ?/./? s/NNS/s before/IN/before the/DT/the two/CD/two ?/./? s/NNS/s before/IN/before the/DT/the three/CD/three ?/./? s/NNS/s and/CC/and that/IN/that the/DT/the sorting/NN/sorting is/VBZ/is stable/NNP/stable. we/PRP/we want/VBP/want to/TO/to be/VB/be able/JJ/able to/TO/to do/VB/do this/DT/this in/IN/in order/NN/order n/NN/n time/NN/time and/CC/and the/DT/the method/NN/method of/IN/of choice/NN/choice is/VBZ/is what/WP/what is/VBZ/is called/VBN/called the/DT/the bucket/NN/bucket sort/NN/sort algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36.34/CD/36.34 /CD/) that/WDT/that brings/VBZ/brings us/PRP/us to/TO/to the/DT/the second/JJ/second sorting/NN/sorting scheme/NN/scheme that/WDT/that we/PRP/we talked/VBD/talked about/NNP/about. so/RB/so what/WP/what is/VBZ/is bucket/VBN/bucket sort/NN/sort ?/./? lots/NNS/lots of/IN/of buckets/NNP/buckets. we/PRP/we have/VBP/have n/VBN/n numbers/NNS/numbers /,/, each/DT/each number/NN/number is/VBZ/is in/IN/in a/DT/a certain/JJ/certain range/NNP/range. let/NN/let ?/./? s/NNS/s say/VBP/say one/CD/one through/IN/through m/NN/m /,/, so/RB/so bucket/NN/bucket sort/NN/sort is/VBZ/is a/DT/a stable/NN/stable sorting/VBG/sorting algorithm/NN/algorithm and/CC/and it/PRP/it will/MD/will take/VB/take time/NN/time order/NN/order n/NN/n plus/CC/plus m/NNP/m. you/PRP/you understand/VBP/understand what/WP/what we/PRP/we are/VBP/are talking/VBG/talking of/NNP/of. this/DT/this is/VBZ/is very/RB/very useful/JJ/useful when/WRB/when you/PRP/you have/VBP/have a/DT/a large/JJ/large number/NN/number of/IN/of numbers/NNS/numbers with/IN/with lots/NNS/lots of/IN/of duplicates/NNS/duplicates perhaps/RB/perhaps and/CC/and the/DT/the numbers/NNS/numbers are/VBP/are coming/VBG/coming from/IN/from the/DT/the small/JJ/small range/NNP/range. then/RB/then you/PRP/you don/VBP/don ?/./? t/NN/t need/NN/need something/NN/something like/IN/like n/NN/n log/NN/log n/NN/n time/NN/time or/CC/or some/DT/some such/JJ/such thing/NNP/thing. you/PRP/you can/MD/can then/RB/then do/VB/do it/PRP/it in/IN/in time/NN/time order/NN/order n/NN/n plus/CC/plus the/DT/the range/NN/range of/IN/of the/DT/the numbers/NNS/numbers essentially/NNP/essentially. let/VB/let ?/./? s/NNS/s see/VBP/see how/WRB/how this/DT/this works/NNP/works. suppose/NN/suppose this/DT/this is/VBZ/is my/PRP$/my collection/NN/collection of/IN/of numbers/NNS/numbers 2/CD/2 1/CD/1 3/CD/3 1/CD/1 2/CD/2 so/RB/so m/NN/m is/VBZ/is 3/CD/3 because/IN/because you/PRP/you can/MD/can see/VB/see the/DT/the numbers/NNS/numbers are/VBP/are in/IN/in the/DT/the range/NN/range 1/CD/1 2/CD/2 3/CD/3. the/DT/the m/NN/m is/VBZ/is 3/CD/3 /,/, there/EX/there are/VBP/are two/CD/two two/CD/two ?/./? s/NNS/s and/CC/and two/CD/two one/CD/one ?/./? s/NNP/s. so/RB/so first/JJ/first what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is you/PRP/you are/VBP/are going/VBG/going to/TO/to create/VB/create an/DT/an m/NN/m buckets/NNP/buckets. you/PRP/you can/MD/can understand/VB/understand what/WP/what you/PRP/you will/MD/will do/VB/do in/IN/in each/DT/each bucket/NNP/bucket. just/RB/just take/VB/take a/DT/a number/NN/number and/CC/and throw/NN/throw it/PRP/it in/IN/in an/DT/an appropriate/JJ/appropriate bucket/NN/bucket /,/, so/RB/so we/PRP/we have/VBP/have these/DT/these 3/CD/3 buckets/NNP/buckets. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38.04/CD/38.04 /CD/) one/CD/one corresponding/VBG/corresponding to/TO/to each/DT/each possible/JJ/possible value/NN/value in/IN/in this/DT/this range/NN/range and/CC/and each/DT/each m/NN/m element/NN/element of/IN/of array/NN/array is/VBZ/is put/VBN/put in/RP/in one/CD/one of/IN/of the/DT/the m/NN/m buckets/NNP/buckets. so/RB/so these/DT/these are/VBP/are my/PRP$/my buckets/NNS/buckets /,/, take/VBP/take the/DT/the first/JJ/first number/NN/number it/PRP/it goes/VBZ/goes into/IN/into bucket/NN/bucket two/CD/two /,/, i/PRP/i put/VBD/put it/PRP/it here/NNP/here. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38.17/CD/38.17 /CD/) then/RB/then i/PRP/i take/VBP/take the/DT/the next/JJ/next number/NN/number it/PRP/it goes/VBZ/goes into/IN/into bucket/NN/bucket one/CD/one /,/, so/RB/so i/PRP/i put/VBD/put into/IN/into here/NNP/here. the/DT/the third/JJ/third number/NN/number goes/VBZ/goes into/IN/into bucket/NN/bucket three/CD/three /,/, i/PRP/i put/VBD/put it/PRP/it here/NNP/here. the/DT/the fourth/JJ/fourth number/NN/number goes/VBZ/goes into/IN/into bucket/NN/bucket one/CD/one /,/, so/RB/so i/PRP/i append/VBP/append it/PRP/it at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this list/NNP/list. end/NN/end is/VBZ/is important/JJ/important to/TO/to maintain/VB/maintain stability/NN/stability and/CC/and then/RB/then i/PRP/i take/VBP/take this/DT/this two/CD/two and/CC/and append/NN/append it/PRP/it at/IN/at the/DT/the end/NNP/end. now/RB/now i/PRP/i will/MD/will just/RB/just read/VB/read the/DT/the numbers/NNS/numbers /,/, i/PRP/i will/MD/will take/VB/take the/DT/the numbers/NNS/numbers in/IN/in the/DT/the first/JJ/first bucket/NN/bucket /,/, basically/RB/basically append/VBP/append all/DT/all of/IN/of these/DT/these lists/NNP/lists. so/RB/so 1/CD/1 1/CD/1 /,/, 2/CD/2 2/CD/2 /,/, 3/CD/3 and/CC/and so/RB/so on/NNP/on. i/PRP/i will/MD/will put/VB/put the/DT/the elements/NNS/elements from/IN/from the/DT/the buckets/NNS/buckets into/IN/into an/DT/an array/NN/array and/CC/and just/RB/just read/VB/read it/PRP/it off/IN/off in/IN/in this/DT/this manner/NNP/manner. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39.05/CD/39.05 /CD/) this/DT/this gives/VBZ/gives us/PRP/us a/DT/a stable/NN/stable sorting/NNP/sorting. you/PRP/you understand/VBP/understand why/WRB/why it/PRP/it is/VBZ/is stable/JJ/stable ?/./? because/IN/because if/IN/if two/CD/two keys/NNS/keys are/VBP/are the/DT/the same/JJ/same then/RB/then they/PRP/they would/MD/would be/VB/be in/IN/in the/DT/the bucket/NN/bucket but/CC/but we/PRP/we would/MD/would also/RB/also have/VB/have put/VBN/put them/PRP/them in/IN/in the/DT/the right/NN/right order/NNP/order. that/IN/that ?/./? s/NNS/s why/WRB/why we/PRP/we are/VBP/are appending/NNP/appending. if/IN/if we/PRP/we were/VBD/were attaching/VBG/attaching at/IN/at the/DT/the front/NN/front then/RB/then we/PRP/we would/MD/would have/VB/have to/TO/to read/VB/read it/PRP/it the/DT/the other/JJ/other way/NN/way around/IN/around which/WDT/which is/VBZ/is the/DT/the same/JJ/same as/IN/as that/NNP/that. so/RB/so with/IN/with that/DT/that you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to argue/VB/argue that/IN/that our/PRP$/our straight/JJ/straight radix/NN/radix sort/NN/sort takes/VBZ/takes order/NN/order bn/NN/bn time/NN/time now/NNP/now. we/PRP/we said/VBD/said for/IN/for each/DT/each pass/NN/pass we/PRP/we want/VBP/want to/TO/to do/VB/do it/PRP/it in/IN/in order/NN/order n/NN/n time/NN/time and/CC/and you/PRP/you can/MD/can do/VB/do it/PRP/it order/VB/order n/NN/n time/NN/time using/VBG/using such/JJ/such a/DT/a scheme/NN/scheme /,/, using/VBG/using bucket/NN/bucket sort/NNP/sort. so/RB/so you/PRP/you do/VBP/do that/DT/that in/IN/in order/NN/order n/NN/n time/NN/time /,/, there/EX/there are/VBP/are b/NN/b passes/NNS/passes in/IN/in all/DT/all so/RB/so it/PRP/it becomes/VBZ/becomes order/NN/order bn/NNP/bn. yes/VBZ/yes /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to get/VB/get one/CD/one question/NN/question from/IN/from this/DT/this in/IN/in the/DT/the exam/NNP/exam. yeah/NN/yeah /,/, okay/NN/okay in-place/NN/in-place sorting/NNP/sorting. yes/VBZ/yes /,/, you/PRP/you want/VBP/want to/TO/to know/VB/know what/WP/what the/DT/the question/NN/question is/NNP/is. a/DT/a sorting/NN/sorting algorithm/NN/algorithm is/VBZ/is said/VBN/said to/TO/to be/VB/be in-place/JJ/in-place if/IN/if it/PRP/it uses/VBZ/uses no/DT/no auxiliary/JJ/auxiliary data/NNS/data structures/NNP/structures. it/PRP/it could/MD/could use/VB/use a/DT/a constant/NN/constant amount/NN/amount of/IN/of additional/JJ/additional space/NN/space over/IN/over here/RB/here and/CC/and it/PRP/it updates/VBZ/updates the/DT/the input/NN/input sequence/NN/sequence only/RB/only by/IN/by means/NNS/means of/IN/of the/DT/the operations/NNS/operations replaceelement/NN/replaceelement and/CC/and swap/NNP/swap. basically/RB/basically it/PRP/it ?/./? s/NNS/s just/RB/just you/PRP/you have/VBP/have a/DT/a bunch/NN/bunch of/IN/of numbers/NNS/numbers /,/, it/PRP/it replaces/VBZ/replaces one/CD/one of/IN/of them/PRP/them by/IN/by some/DT/some other/JJ/other or/CC/or it/PRP/it just/RB/just swaps/VBZ/swaps two/CD/two numbers/NNP/numbers. that/IN/that ?/./? s/NNS/s when/WRB/when we/PRP/we call/VBP/call the/DT/the algorithm/NN/algorithm to/TO/to be/VB/be in-place/NNP/in-place. so/RB/so let/VB/let ?/./? s/NNS/s see/VBP/see which/WDT/which algorithms/NNS/algorithms we/PRP/we have/VBP/have seen/VBN/seen can/MD/can be/VB/be made/VBN/made to/TO/to work/VB/work in/IN/in in-place/NNP/in-place. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 59/CD/59 /CD/) bubble/JJ/bubble sort/NN/sort actually/RB/actually you/PRP/you have/VB/have not/RB/not seen/VBN/seen right/RB/right or/CC/or you/PRP/you know/VBP/know what/WP/what bubble/JJ/bubble sort/NN/sort is/VBZ/is ?/./? you/PRP/you don/VBP/don ?/./? t/NN/t know/VB/know what/WP/what bubble/JJ/bubble sort/NN/sort is/VBZ/is ?/./? i/PRP/i will/MD/will not/RB/not go/VB/go into/IN/into bubble/JJ/bubble sort/NN/sort then/NNP/then. let/NN/let ?/./? s/NNS/s see/NNP/see. who/WP/who can/MD/can tell/VB/tell me/PRP/me heap/VB/heap sort/NNP/sort. is/VBZ/is heap/NN/heap sort/NN/sort in-place/NN/in-place ?/./? /:/[ student/NN/student /:/: yes/NNS/yes sir/VBP/sir /:/] we/PRP/we can/MD/can have/VB/have one/CD/one array/NN/array and/CC/and basically/RB/basically implement/JJ/implement a/DT/a heap/NN/heap in/IN/in that/DT/that array/NN/array and/CC/and we/PRP/we are/VBP/are just/RB/just changing/VBG/changing the/DT/the elements/NNS/elements in/IN/in that/DT/that array/NNP/array. merge/NN/merge sort/NNP/sort. is/VBZ/is merge/NN/merge sort/NN/sort in-place/NN/in-place ?/./? /:/[ student/NN/student /:/: no/DT/no /NN/] why/WRB/why not/RB/not ?/./? to/TO/to merge/VB/merge two/CD/two list/NN/list /,/, you/PRP/you need/VBP/need additional/JJ/additional space/NNP/space. you/PRP/you can/MD/can not/RB/not merge/VB/merge in/IN/in the/DT/the same/JJ/same list/NN/list /,/, so/RB/so merge/VB/merge sort/NN/sort is/VBZ/is not/RB/not in-place/NNP/in-place. quick/NN/quick sort/NN/sort /:/[ student/NN/student /:/: yes/NNS/yes sir/VBP/sir /:/] quick/JJ/quick sort/NN/sort is/VBZ/is in-place/JJ/in-place because/IN/because we/PRP/we partition/VBP/partition in/IN/in the/DT/the same/JJ/same array/NN/array and/CC/and then/RB/then we/PRP/we just/RB/just did/VBD/did recursively/RB/recursively left/VBN/left and/CC/and right/NNP/right. to/TO/to do/VB/do the/DT/the merge/NN/merge /,/, to/TO/to merge/VB/merge two/CD/two lists/NNS/lists you/PRP/you need/VBP/need additional/JJ/additional space/NN/space because/IN/because what/WP/what were/VBD/were we/PRP/we doing/VBG/doing in/IN/in merge/NN/merge ?/./? we/PRP/we are/VBP/are taking/VBG/taking the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the two/CD/two list/NN/list /,/, comparing/VBG/comparing them/PRP/them and/CC/and putting/VBG/putting it/PRP/it out/RP/out into/IN/into some/DT/some other/JJ/other space/NNP/space. you/PRP/you can/MD/can ?/./? t/VB/t just/RB/just copy/VB/copy it/PRP/it back/RB/back there/RB/there /,/, it/PRP/it would/MD/would not/RB/not work/NNP/work. /:/[ student/NN/student /:/: in/IN/in an/DT/an algorithm/NN/algorithm uses/VBZ/uses what/WP/what are/VBP/are one/CD/one space/NN/space would/MD/would increase/VB/increase /:/] yeah/NN/yeah /,/, order/NN/order one/CD/one space/NN/space is/VBZ/is okay/NNP/okay. it/PRP/it is/VBZ/is in-place/JJ/in-place but/CC/but not/RB/not space/NN/space proportional/JJ/proportional to/TO/to the/DT/the number/NN/number of/IN/of elements/NNS/elements /,/, it/PRP/it should/MD/should be/VB/be independent/JJ/independent of/IN/of the/DT/the number/NN/number of/IN/of elements/NNP/elements. you/PRP/you can/MD/can look/VB/look at/IN/at the/DT/the other/JJ/other algorithms/NNS/algorithms and/CC/and think/VBP/think off/RP/off whether/IN/whether they/PRP/they are/VBP/are going/VBG/going to/TO/to be/VB/be in-place/JJ/in-place or/CC/or not/NNP/not. radix/CD/radix sort/NNP/sort. is/VBZ/is radix/CD/radix sort/NN/sort in-place/NN/in-place ?/./? but/CC/but number/NN/number of/IN/of buckets/NNS/buckets is/VBZ/is independent/JJ/independent of/IN/of the/DT/the number/NN/number of/IN/of numbers/NNP/numbers. /NNP/[ student/NN/student /:/: but/CC/but we/PRP/we are/VBP/are inserting/VBG/inserting /:/] then/RB/then nodes/VBZ/nodes that/IN/that we/PRP/we are/VBP/are creating/NNP/creating. yes/NNS/yes /,/, that/IN/that is/VBZ/is additional/JJ/additional space/NNP/space. so/RB/so can/MD/can you/PRP/you modify/VB/modify the/DT/the scheme/NN/scheme to/TO/to make/VB/make it/PRP/it in-place/JJ/in-place ?/./? /:/[ student/NN/student /:/: to/TO/to keep/VB/keep every/DT/every bucket/NN/bucket just/RB/just count/NN/count the/DT/the number/NN/number of/IN/of those/DT/those elements/NNS/elements that/IN/that are/VBP/are in/IN/in the/DT/the array/NN/array /:/] yeah/NN/yeah /,/, you/PRP/you will/MD/will have/VB/have to/TO/to think/VB/think about/IN/about it/PRP/it /,/, think/VBP/think about/IN/about this/NNP/this. can/MD/can you/PRP/you make/VB/make it/PRP/it in-place/JJ/in-place ?/./? can/MD/can you/PRP/you make/VB/make radix/CD/radix sort/NN/sort in-place/NN/in-place ?/./? it/PRP/it is/VBZ/is a/DT/a good/JJ/good thing/NN/thing to/TO/to think/VB/think about/NNP/about. let/VB/let me/PRP/me get/VB/get to/TO/to the/DT/the last/JJ/last topic/NN/topic that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to cover/VB/cover as/IN/as far/RB/far as/IN/as sorting/VBG/sorting is/VBZ/is concerned/VBN/concerned and/CC/and that/IN/that is/VBZ/is a/DT/a lower/JJR/lower bound/NN/bound for/IN/for comparison/NN/comparison base/NN/base sorting/NNP/sorting. what/WP/what does/VBZ/does comparison/NN/comparison based/VBN/based sorting/VBG/sorting mean/JJ/mean ?/./? it/PRP/it basically/RB/basically means/VBZ/means that/IN/that we/PRP/we are/VBP/are only/RB/only looking/VBG/looking at/IN/at sorting/VBG/sorting algorithms/NNS/algorithms in/IN/in which/WDT/which all/DT/all you/PRP/you have/VBP/have permitted/VBN/permitted to/TO/to do/VB/do is/VBZ/is to/TO/to compare/VB/compare two/CD/two numbers/NNP/numbers. suppose/NN/suppose you/PRP/you have/VB/have a/DT/a bunch/NN/bunch of/IN/of elements/NNS/elements /,/, i/PRP/i am/VBP/am not/RB/not even/RB/even saying/VBG/saying numbers/NNS/numbers now/RB/now and/CC/and you/PRP/you want/VBP/want to/TO/to sort/VB/sort those/DT/those elements/NNP/elements. i/PRP/i give/VBP/give you/PRP/you those/DT/those elements/NNS/elements /,/, i/PRP/i have/VBP/have a/DT/a comparison/NN/comparison function/NN/function which/WDT/which you/PRP/you have/VBP/have to/TO/to use/VB/use to/TO/to do/VB/do the/DT/the sorting/NNP/sorting. so/RB/so like/IN/like your/PRP$/your comparator/NN/comparator /,/, so/RB/so you/PRP/you give/VBP/give me/PRP/me the/DT/the two/CD/two numbers/NNS/numbers /,/, i/PRP/i will/MD/will tell/VB/tell which/WDT/which of/IN/of them/PRP/them is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the other/JJ/other because/IN/because may/MD/may be/VB/be these/DT/these are/VBP/are not/RB/not numbers/NNS/numbers but/CC/but some/DT/some objects/NNS/objects and/CC/and i/PRP/i am/VBP/am the/DT/the only/JJ/only one/CD/one /,/, who/WP/who knows/VBZ/knows how/WRB/how to/TO/to compare/VB/compare these/DT/these objects/NNP/objects. that/IN/that is/VBZ/is a/DT/a comparison/NN/comparison operation/NN/operation /,/, you/PRP/you give/VBP/give me/PRP/me these/DT/these two/CD/two numbers/NNS/numbers /,/, i/PRP/i decide/VBP/decide whether/IN/whether one/CD/one is/VBZ/is less/JJR/less than/IN/than the/DT/the other/JJ/other or/CC/or not/RB/not /,/, whether/IN/whether the/DT/the first/JJ/first is/VBZ/is less/RBR/less than/IN/than the/DT/the second/JJ/second or/CC/or the/DT/the second/JJ/second is/VBZ/is less/RBR/less than/IN/than the/DT/the first/JJ/first and/CC/and i/PRP/i give/VBP/give you/PRP/you the/DT/the answer/NNP/answer. now/RB/now the/DT/the question/NN/question is/VBZ/is how/WRB/how many/JJ/many times/NNS/times will/MD/will you/PRP/you have/VB/have to/TO/to ask/VB/ask me/PRP/me for/IN/for a/DT/a comparison/NN/comparison ?/./? you/PRP/you understand/VBP/understand /,/, you/PRP/you wanted/VBD/wanted to/TO/to sort/VB/sort this/DT/this n/NN/n numbers/NNS/numbers /,/, how/WRB/how many/JJ/many times/NNS/times will/MD/will you/PRP/you have/VB/have to/TO/to ask/VB/ask me/PRP/me ?/./? may/MD/may be/VB/be i/PRP/i charge/VB/charge you/PRP/you 1/CD/1 rupee/NN/rupee every/DT/every time/NN/time you/PRP/you give/VBP/give me/PRP/me certain/JJ/certain comparison/NN/comparison to/TO/to do/NNP/do. the/DT/the comparison/NN/comparison is/VBZ/is let/VBN/let us/PRP/us say/VBP/say an/DT/an expensive/JJ/expensive operation/NNP/operation. every/DT/every time/NN/time you/PRP/you say/VBP/say compare/JJ/compare these/DT/these two/CD/two numbers/NNS/numbers for/IN/for me/PRP/me /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to charge/VB/charge you/PRP/you 1/CD/1 rupee/NNP/rupee. how/WRB/how much/JJ/much money/NN/money are/VBP/are you/PRP/you going/VBG/going to/TO/to spend/VB/spend ?/./? n/NN/n log/NN/log n/NN/n /,/, you/PRP/you have/VBP/have seen/VBN/seen algorithms/NNS/algorithms which/WDT/which would/MD/would take/VB/take no/DT/no more/RBR/more than/IN/than n/NN/n log/NN/log n/NN/n time/NNP/time. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to argue/VB/argue now/RB/now is/VBZ/is that/IN/that there/EX/there can/MD/can be/VB/be no/RB/no algorithm/NN/algorithm which/WDT/which takes/VBZ/takes less/JJR/less than/IN/than n/NN/n log/NN/log n/NN/n time/NN/time /,/, n/NN/n log/NN/log n/NN/n comparisons/NNP/comparisons. no/DT/no one/NN/one can/MD/can come/VB/come up/RP/up with/IN/with an/DT/an algorithm/NN/algorithm so/IN/so that/IN/that algorithm/NN/algorithm will/MD/will always/RB/always take/VB/take less/JJR/less than/IN/than n/NN/n log/NN/log n/NN/n comparisons/NNS/comparisons for/IN/for all/DT/all inputs/NNP/inputs. for/IN/for certain/JJ/certain inputs/NNS/inputs it/PRP/it could/MD/could take/VB/take less/RBR/less than/IN/than n/NN/n log/NN/log n/NN/n comparisons/NNS/comparisons but/CC/but for/IN/for all/DT/all inputs/NNS/inputs /,/, it/PRP/it would/MD/would take/VB/take n/NN/n log/NN/log n/NN/n comparisons/NNP/comparisons. that/IN/that is/VBZ/is not/RB/not possible/JJ/possible at/IN/at all/NNP/all. we/PRP/we are/VBP/are going/VBG/going to/TO/to understand/VB/understand this/DT/this in/IN/in the/DT/the following/JJ/following way/NNP/way. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 50/CD/50 /CD/) let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the particular/JJ/particular algorithm/NNP/algorithm. you/PRP/you have/VBP/have a/DT/a certain/JJ/certain algorithm/NN/algorithm and/CC/and let/VB/let ?/./? s/NNS/s say/VBP/say your/PRP$/your objects/NNS/objects are/VBP/are sitting/VBG/sitting in/IN/in some/DT/some array/NN/array and/CC/and you/PRP/you algorithm/VBP/algorithm works/NNS/works on/IN/on that/DT/that array/NNP/array. the/DT/the first/JJ/first step/NN/step it/PRP/it ?/./? s/NNS/s going/VBG/going to/TO/to ask/VB/ask me/PRP/me to/TO/to compare/VB/compare two/CD/two elements/NNS/elements of/IN/of that/DT/that array/NNP/array. let/VBD/let say/VBP/say that/IN/that two/CD/two elements/NNS/elements are/VBP/are at/IN/at position/NN/position s1/NNP/s1 and/CC/and s2/NNP/s2 /NNP/[ hindi/NN/hindi /:/] /./. so/RB/so my/PRP$/my very/NN/very top/JJ/top node/NN/node here/RB/here is/VBZ/is this/DT/this node/NN/node whether/IN/whether s1/NNP/s1 is/VBZ/is greater/JJR/greater than/IN/than s2/NNP/s2 or/CC/or not/NNP/not. it/PRP/it is/VBZ/is going/VBG/going to/TO/to ask/VB/ask me/PRP/me this/DT/this and/CC/and i/PRP/i am/VBP/am free/JJ/free to/TO/to say/VB/say whether/IN/whether one/CD/one is/VBZ/is less/JJR/less or/CC/or whether/IN/whether one/CD/one is/VBZ/is more/RBR/more based/VBN/based on/IN/on what/WP/what my/PRP$/my comparative/JJ/comparative functions/NNS/functions says/NNP/says. these/DT/these are/VBP/are so/RB/so to/TO/to say/VB/say /,/, the/DT/the questions/NNS/questions that/WDT/that the/DT/the algorithm/NN/algorithm is/VBZ/is asking/VBG/asking me/NNP/me. first/RB/first it/PRP/it asks/VBZ/asks me/PRP/me to/TO/to compare/VB/compare s1/NNP/s1 and/CC/and s2/NNP/s2. if/IN/if i/PRP/i said/VBD/said a/DT/a yes/NNS/yes then/RB/then it/PRP/it would/MD/would have/VB/have asked/VBN/asked me/PRP/me for/IN/for a/DT/a comparison/NN/comparison of/IN/of s1/NNP/s1 and/CC/and s3/NNP/s3. let/VB/let ?/./? s/NNS/s say/VBP/say i/PRP/i have/VBP/have such/JJ/such a/DT/a thing/NNP/thing. if/IN/if i/PRP/i had/VBD/had said/VBN/said no/DT/no /,/, maybe/RB/maybe it/PRP/it ask/VBP/ask me/PRP/me for/IN/for a/DT/a comparison/NN/comparison of/IN/of something/NN/something else/RB/else /,/, this/DT/this need/NN/need not/RB/not be/VB/be s1/NNP/s1 s3/NNP/s3. it/PRP/it could/MD/could be/VB/be something/NN/something else/RB/else /,/, depends/NNS/depends upon/IN/upon what/WP/what the/DT/the algorithm/NN/algorithm is/NNP/is. but/CC/but at/IN/at each/DT/each point/NN/point it/PRP/it is/VBZ/is coming/VBG/coming back/RB/back to/TO/to me/PRP/me with/IN/with certain/JJ/certain comparisons/NNS/comparisons /,/, with/IN/with certain/JJ/certain numbers/NNS/numbers to/TO/to compare/NNP/compare. first/RB/first time/VB/time it/PRP/it says/VBZ/says something/NN/something then/RB/then depending/VBG/depending upon/IN/upon whether/IN/whether i/PRP/i say/VBP/say yes/NNS/yes or/CC/or no/DT/no /,/, then/RB/then the/DT/the next/JJ/next comparison/NN/comparison it/PRP/it ask/VBP/ask me/PRP/me something/NN/something else/NNP/else. now/RB/now depending/VBG/depending upon/IN/upon whether/IN/whether i/PRP/i said/VBD/said yes/NNS/yes or/CC/or no/DT/no /,/, the/DT/the next/JJ/next comparison/NN/comparison it/PRP/it could/MD/could ask/VB/ask me/PRP/me would/MD/would be/VB/be something/NN/something else/RB/else and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. the/DT/the execution/NN/execution of/IN/of the/DT/the algorithm/NN/algorithm is/VBZ/is really/RB/really a/DT/a path/NN/path down/IN/down this/DT/this stream/NNP/stream. yes/NNP/yes. now/RB/now at/IN/at some/DT/some point/NN/point the/DT/the algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to stop/NNP/stop. it/PRP/it doesn/VBD/doesn ?/./? t/NN/t ask/NN/ask for/IN/for anymore/NN/anymore comparison/NN/comparison /,/, it/PRP/it says/VBZ/says well/RB/well i/PRP/i am/VBP/am done/NN/done /,/, this/DT/this is/VBZ/is your/PRP$/your sorted/VBN/sorted sequence/NN/sequence /,/, so/RB/so which/WDT/which means/VBZ/means that/DT/that this/DT/this path/NN/path ends/VBZ/ends in/IN/in this/DT/this external/JJ/external node/NN/node here/RB/here /,/, this/DT/this leaf/NN/leaf node/NN/node here/RB/here which/WDT/which corresponds/NNS/corresponds to/TO/to a/DT/a particular/JJ/particular permutation/NN/permutation of/IN/of those/DT/those numbers/NNP/numbers. this/DT/this sequence/NN/sequence of/IN/of moves/NNS/moves would/MD/would have/VB/have been/VBN/been made/VBN/made /,/, if/IN/if i/PRP/i had/VBD/had certain/JJ/certain ordering/NN/ordering on/IN/on the/DT/the numbers/NNS/numbers for/IN/for a/DT/a certain/JJ/certain permutation/NN/permutation of/IN/of the/DT/the numbers/NNP/numbers. let/NN/let ?/./? s/NNS/s understand/VBP/understand this/NNP/this. /NNP/[ student/NN/student /:/: there/EX/there would/MD/would be/VB/be some/DT/some finite/JJ/finite criteria/NNS/criteria of/IN/of the/DT/the let/NN/let me/PRP/me go/VBP/go for/IN/for a/DT/a s/NN/s noise/NN/noise it/PRP/it is/VBZ/is not/RB/not necessary/JJ/necessary say/NN/say s1/NNP/s1 is/VBZ/is less/JJR/less than/IN/than s2/NNP/s2 we/PRP/we can/MD/can compare/VB/compare any/DT/any /NN/] we/PRP/we can/MD/can compare/VB/compare anything/NN/anything /,/, yeah/NNP/yeah. /NNP/[ student/NN/student /:/: so/RB/so those/DT/those numbers/NNS/numbers which/WDT/which we/PRP/we are/VBP/are comparing/VBG/comparing that/IN/that is/VBZ/is randomized/VBN/randomized over/IN/over the/DT/the entire/JJ/entire set/NN/set /,/, any/DT/any two/CD/two numbers/NNS/numbers we/PRP/we pick/VBP/pick up/RP/up randomly/RB/randomly /:/] no/DT/no /,/, so/RB/so don/RB/don ?/./? t/NN/t look/NN/look at/IN/at it/PRP/it that/IN/that way/NNP/way. we/PRP/we are/VBP/are saying/VBG/saying your/PRP$/your algorithm/NN/algorithm /,/, you/PRP/you have/VBP/have a/DT/a certain/JJ/certain algorithm/NN/algorithm which/WDT/which has/VBZ/has the/DT/the numbers/NNS/numbers written/VBN/written in/IN/in an/DT/an array/NN/array /,/, let/VB/let ?/./? s/NNS/s say/VBP/say one/CD/one through/IN/through n/NNP/n. at/IN/at the/DT/the very/RB/very first/JJ/first step/NN/step it/PRP/it is/VBZ/is going/VBG/going to/TO/to come/VB/come and/CC/and make/VB/make certain/JJ/certain comparison/NNP/comparison. let/NN/let ?/./? s/NNS/s assume/VBP/assume it/PRP/it is/VBZ/is deterministic/JJ/deterministic algorithm/NN/algorithm /,/, no/DT/no randomization/NN/randomization for/IN/for now/NNP/now. so/RB/so same/JJ/same argument/NN/argument applies/NNS/applies for/IN/for randomization/NN/randomization also/RB/also but/CC/but for/IN/for now/RB/now let/VBP/let ?/./? s/NNS/s assume/VBP/assume it/PRP/it ?/./? s/NNS/s deterministic/NNP/deterministic. it/PRP/it will/MD/will say/VB/say compare/NN/compare lets/NNS/lets say/VBP/say /,/, first/JJ/first time/NN/time it/PRP/it comes/VBZ/comes to/TO/to me/PRP/me it/PRP/it will/MD/will say/VB/say look/NN/look at/IN/at the/DT/the number/NN/number in/IN/in location/NN/location 3/CD/3 /,/, look/NN/look at/IN/at the/DT/the number/NN/number in/IN/in 7/CD/7 and/CC/and tell/NN/tell me/PRP/me which/WDT/which is/VBZ/is smaller/NNP/smaller. whether/IN/whether the/DT/the number/NN/number in/IN/in location/NN/location 3/CD/3 is/VBZ/is less/JJR/less than/IN/than the/DT/the number/NN/number in/IN/in location/NN/location 7/CD/7 or/CC/or whether/IN/whether the/DT/the number/NN/number in/IN/in location/NN/location 7/CD/7 is/VBZ/is less/JJR/less than/IN/than the/DT/the number/NN/number in/IN/in location/NN/location 3/CD/3. i/PRP/i put/VBD/put a/DT/a node/NN/node here/RB/here saying/VBG/saying let/NN/let ?/./? s/NNS/s say/VBP/say this/DT/this array/NN/array was/VBD/was s/NNS/s /,/, so/RB/so whether/IN/whether s3/NNP/s3 is/VBZ/is less/JJR/less than/IN/than s7/NNP/s7 is/VBZ/is the/DT/the first/JJ/first comparison/NN/comparison it/PRP/it asked/VBD/asked me/PRP/me for/NNP/for. if/IN/if i/PRP/i had/VBD/had said/VBN/said a/DT/a yes/NNS/yes /,/, i/PRP/i do/VBP/do not/RB/not know/NNP/know. if/IN/if i/PRP/i said/VBD/said a/DT/a yes/NNS/yes /,/, it/PRP/it would/MD/would go/VB/go and/CC/and ask/VB/ask me/PRP/me to/TO/to compare/VB/compare some/DT/some other/JJ/other two/CD/two numbers/NNP/numbers. it/PRP/it ?/./? s/NNS/s your/PRP$/your algorithm/NN/algorithm /,/, i/PRP/i don/VBP/don ?/./? t/NN/t know/VB/know what/WP/what it/PRP/it is/VBZ/is going/VBG/going to/TO/to ask/VB/ask me/NNP/me. but/CC/but whatever/RB/whatever it/PRP/it is/VBZ/is going/VBG/going to/TO/to ask/VB/ask me/PRP/me /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to put/VB/put down/RP/down here/NNP/here. suppose/NN/suppose it/PRP/it came/VBD/came and/CC/and said/VBD/said s2/NNP/s2 verses/NNS/verses s5/NNP/s5 /,/, whether/IN/whether s2/NNP/s2 is/VBZ/is less/JJR/less than/IN/than s5/NNP/s5 and/CC/and if/IN/if had/VBD/had said/VBN/said a/DT/a no/DT/no /,/, may/MD/may be/VB/be it/PRP/it came/VBD/came back/RB/back and/CC/and asked/VBD/asked me/PRP/me something/NN/something else/NNP/else. it/PRP/it came/VBD/came and/CC/and asked/VBD/asked me/PRP/me s6/NNP/s6 is/VBZ/is less/JJR/less than/IN/than s13/NNP/s13 /,/, it/PRP/it may/MD/may be/NNP/be. it/PRP/it is/VBZ/is your/PRP$/your algorithm/NN/algorithm /:/[ hindi/NN/hindi /:/] so/RB/so depending/VBG/depending upon/IN/upon what/WP/what option/NN/option do/VBP/do i/PRP/i have/NNP/have. i/PRP/i have/VBP/have an/DT/an option/NN/option of/IN/of basically/RB/basically saying/VBG/saying my/PRP$/my yes/NNS/yes and/CC/and no/NNP/no. that/IN/that ?/./? s/NNS/s all/DT/all i/PRP/i say/NNP/say. i/PRP/i say/VBP/say a/DT/a yes/NNS/yes then/RB/then i/PRP/i say/VBP/say a/DT/a no/DT/no and/CC/and so/RB/so on/IN/on and/CC/and on/IN/on /,/, depending/VBG/depending upon/IN/upon what/WP/what i/PRP/i rate/VBP/rate as/IN/as the/DT/the relative/JJ/relative order/NN/order of/IN/of these/DT/these elements/NNS/elements in/IN/in these/DT/these array/NNP/array. think/VBP/think of/IN/of these/DT/these objects/NNS/objects are/VBP/are some/DT/some complicated/JJ/complicated objects/NNP/objects. you/PRP/you don/VBP/don ?/./? t/NN/t know/VB/know what/WP/what the/DT/the relative/JJ/relative order/NN/order is/VBZ/is so/RB/so that/IN/that ?/./? s/NNS/s why/WRB/why you/PRP/you are/VBP/are asking/VBG/asking me/PRP/me about/IN/about that/NNP/that. i/PRP/i have/VBP/have some/DT/some way/NN/way of/IN/of figuring/VBG/figuring out/IN/out what/WP/what the/DT/the relative/JJ/relative order/NN/order is/NNP/is. may/MD/may be/VB/be today/NN/today i/PRP/i feel/VBP/feel like/IN/like that/DT/that the/DT/the relative/JJ/relative order/NN/order should/MD/should be/VB/be based/VBN/based on/IN/on gpa/NNP/gpa. then/RB/then tomorrow/NN/tomorrow i/PRP/i feel/VBP/feel like/IN/like relative/JJ/relative order/NN/order should/MD/should be/VB/be based/VBN/based on/IN/on height/NN/height or/CC/or whatever/RB/whatever it/PRP/it is/VBZ/is like/IN/like /,/, i/PRP/i can/MD/can decide/NNP/decide. for/IN/for that/DT/that i/PRP/i would/MD/would make/VB/make a/DT/a certain/JJ/certain choices/NNS/choices of/IN/of yes/NNS/yes and/CC/and no/DT/no /,/, which/WDT/which would/MD/would eventually/RB/eventually end/VB/end up/RP/up in/IN/in leaf/NN/leaf /,/, in/IN/in an/DT/an external/JJ/external node/NN/node of/IN/of this/NNP/this. when/WRB/when you/PRP/you reach/VBP/reach this/DT/this say/NN/say /,/, you/PRP/you well/RB/well i/PRP/i have/VBP/have sorted/VBN/sorted it/NNP/it. you/PRP/you will/MD/will sort/VB/sort because/IN/because this/DT/this is/VBZ/is all/DT/all the/DT/the comparisons/NNS/comparisons you/PRP/you did/NNP/did. the/DT/the question/NN/question is/VBZ/is how/WRB/how many/JJ/many comparisons/NNS/comparisons did/VBD/did you/PRP/you have/VB/have to/TO/to do/VB/do ?/./? the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is basically/RB/basically the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path that/IN/that you/PRP/you took/VBD/took /,/, the/DT/the height/NN/height of/IN/of this/DT/this tree/NNP/tree. yes/NNP/yes. so/RB/so how/WRB/how many/JJ/many comparisons/NNS/comparisons would/MD/would you/PRP/you have/VB/have to/TO/to do/VB/do ?/./? how/WRB/how height/NN/height does/VBZ/does this/DT/this tree/NN/tree have/VBP/have to/TO/to be/VB/be ?/./? /-NONE-/[ student/NN/student /:/: n/NN/n log/NN/log n/NN/n /:/] why/WRB/why n/NN/n log/NN/log n/NN/n ?/./? /:/[ student/NN/student /:/: n/NN/n factorial/JJ/factorial permutations/NNS/permutations of/IN/of the/DT/the array/NN/array so/RB/so they/PRP/they have/VBP/have to/TO/to be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves /:/] yes/NNS/yes /,/, so/RB/so that/IN/that ?/./? s/NNS/s right/NNP/right. there/RB/there have/VBP/have to/TO/to be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves in/IN/in this/DT/this tree/NNP/tree. now/RB/now this/DT/this is/VBZ/is not/RB/not a/DT/a straight/JJ/straight forward/NN/forward thing/NN/thing to/TO/to understand/VB/understand /:/[ hindi/NN/hindi /:/] /./. depending/VBG/depending upon/IN/upon what/WP/what these/DT/these objects/NNS/objects are/VBP/are /,/, i/PRP/i should/MD/should be/VB/be able/JJ/able to/TO/to get/VB/get all/DT/all kinds/NNS/kinds of/IN/of permutations/NNP/permutations. every/DT/every permutation/NN/permutation is/VBZ/is a/DT/a possible/JJ/possible solution/NN/solution at/IN/at the/DT/the end/NN/end /,/, every/DT/every permutation/NN/permutation of/IN/of these/DT/these n/NN/n numbers/NNP/numbers. what/WP/what is/VBZ/is sorting/VBG/sorting ?/./? a/DT/a sorting/NN/sorting you/PRP/you are/VBP/are given/VBN/given the/DT/the elements/NNS/elements like/IN/like this/DT/this and/CC/and eventually/RB/eventually what/WP/what do/VBP/do you/PRP/you generate/VB/generate ?/./? you/PRP/you generate/VBP/generate a/DT/a permutation/NN/permutation of/IN/of these/DT/these elements/NNP/elements. yes/VBZ/yes or/CC/or no/DT/no ?/./? /:/[ hindi/NN/hindi /:/] what/WP/what is/VBZ/is this/DT/this ?/./? this/DT/this is/VBZ/is just/RB/just a/DT/a permutation/NN/permutation of/IN/of this/DT/this set/NN/set of/IN/of elements/NNS/elements /:/[ hindi/NN/hindi /:/] this/DT/this is/VBZ/is just/RB/just a/DT/a permutation/NN/permutation of/IN/of this/NNP/this. now/RB/now all/DT/all possible/JJ/possible permutation/NN/permutation should/MD/should exist/VB/exist as/IN/as leaves/NNP/leaves. that/IN/that depends/NNS/depends upon/IN/upon what/WP/what the/DT/the relative/JJ/relative order/NN/order is/VBZ/is /,/, what/WP/what i/PRP/i have/VBP/have picked/VBN/picked as/IN/as the/DT/the relative/JJ/relative order/NNP/order. so/RB/so given/VBN/given a/DT/a certain/JJ/certain permutation/NN/permutation /,/, if/IN/if that/DT/that is/VBZ/is what/WP/what i/PRP/i picked/VBD/picked as/IN/as the/DT/the relative/JJ/relative order/NN/order then/RB/then your/PRP$/your algorithm/NN/algorithm should/MD/should end/VB/end up/RP/up in/IN/in that/NNP/that. if/IN/if i/PRP/i took/VBD/took some/DT/some other/JJ/other permutation/NN/permutation and/CC/and picked/VBD/picked that/IN/that as/IN/as the/DT/the relative/JJ/relative order/NN/order then/RB/then your/PRP$/your algorithm/NN/algorithm should/MD/should end/VB/end up/RP/up in/IN/in that/DT/that and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. every/DT/every leaf/NN/leaf of/IN/of this/DT/this tree/NN/tree corresponds/VBZ/corresponds to/TO/to a/DT/a permutation/NN/permutation and/CC/and further/RB/further more/RBR/more every/DT/every permutation/NN/permutation should/MD/should be/VB/be representable/JJ/representable as/IN/as a/DT/a leaf/NNP/leaf. so/RB/so which/WDT/which means/VBZ/means that/DT/that this/DT/this tree/NN/tree has/VBZ/has n/VBN/n factorial/JJ/factorial leaves/NNP/leaves. it/PRP/it is/VBZ/is not/RB/not a/DT/a complete/JJ/complete binary/NN/binary tree/NN/tree /,/, may/MD/may be/VB/be it/PRP/it is/NNP/is. i/PRP/i don/VBP/don ?/./? t/NN/t care/NN/care ;/:/; i/PRP/i know/VBP/know it/PRP/it is/VBZ/is binary/JJ/binary tree/NNP/tree. it/PRP/it ?/./? s/NNS/s a/DT/a binary/JJ/binary tree/NN/tree with/IN/with n/NN/n factorial/JJ/factorial leaves/NNP/leaves. so/RB/so what/WP/what is/VBZ/is its/PRP$/its height/NN/height going/VBG/going to/TO/to be/VB/be ?/./? at/IN/at least/JJS/least log/NN/log of/IN/of n/NN/n factorial/NNP/factorial. so/RB/so height/VBD/height therefore/RB/therefore is/VBZ/is at/IN/at least/JJS/least log/NN/log of/IN/of n/NN/n factorial/JJ/factorial /,/, at/IN/at least/JJS/least /CD/[ hindi/NN/hindi /:/] yeah/NN/yeah /:/[ student/NN/student /:/: sir/NN/sir our/PRP$/our order/NN/order to/TO/to comparator/NN/comparator /,/, does/VBZ/does it/PRP/it satisfy/VB/satisfy the/DT/the symmetric/JJ/symmetric or/CC/or the/DT/the transitive/JJ/transitive property/NN/property /:/] yes/NNS/yes /,/, it/PRP/it satisfies/VBZ/satisfies all/DT/all of/IN/of them/NNP/them. even/RB/even then/RB/then it/PRP/it can/NNP/can. i/PRP/i take/VBP/take a/DT/a particular/JJ/particular permutation/NN/permutation of/IN/of these/DT/these elements/NNS/elements and/CC/and i/PRP/i say/VBP/say i/PRP/i am/VBP/am going/VBG/going to/TO/to answer/VB/answer with/IN/with respect/NN/respect to/TO/to this/DT/this permutation/NNP/permutation. all/DT/all queries/NNS/queries that/WDT/that are/VBP/are asked/VBN/asked for/IN/for me/PRP/me /,/, i/PRP/i will/MD/will answer/VB/answer with/IN/with respect/NN/respect to/TO/to this/DT/this particular/JJ/particular permutation/NN/permutation that/WDT/that i/PRP/i have/VBP/have in/IN/in my/PRP$/my head/NNP/head. /NNP/[ student/NN/student /:/: is/VBZ/is it/PRP/it possible/JJ/possible /,/, if/IN/if suppose/NN/suppose i/PRP/i have/VBP/have s1/NNP/s1 there/RB/there are/VBP/are 3/CD/3 s1/NNP/s1 s2/NNP/s2 and/CC/and s3/NNP/s3 /NNP/] yeah/NN/yeah /:/[ student/NN/student /:/: and/CC/and at/IN/at some/DT/some point/NN/point at/IN/at that/DT/that we/PRP/we have/VBP/have some/DT/some decisions/NNS/decisions of/IN/of s1/NNP/s1 s2/NNP/s2 and/CC/and s2/NNP/s2 s3/NNP/s3 /NNP/] yeah/NN/yeah /:/[ student/NN/student /:/: and/CC/and then/RB/then other/JJ/other point/NN/point in/IN/in the/DT/the tree/NN/tree the/DT/the other/JJ/other point/NN/point in/IN/in the/DT/the tree/NN/tree decision/NN/decision based/VBN/based on/IN/on s1/NNP/s1 and/CC/and s3/NNP/s3 /NNP/] yeah/NN/yeah /:/[ student/NN/student /:/: that/IN/that can/MD/can not/RB/not take/VB/take both/DT/both the/DT/the paths/NNS/paths yes/VBZ/yes and/CC/and no/DT/no because/IN/because /CD/] yeah/NN/yeah i/PRP/i understand/VBP/understand that/IN/that /,/, but/CC/but that/IN/that is/VBZ/is not/RB/not the/DT/the point/NNP/point. the/DT/the point/NN/point all/DT/all we/PRP/we are/VBP/are trying/VBG/trying to/TO/to say/VB/say here/RB/here is/VBZ/is that/IN/that /CD/[ student/NN/student /:/: it/PRP/it is/VBZ/is not/RB/not necessary/JJ/necessary every/DT/every node/NN/node /:/] that/IN/that i/PRP/i could/MD/could have/VB/have a/DT/a certain/JJ/certain permutation/NN/permutation in/IN/in my/PRP$/my head/NN/head and/CC/and i/PRP/i could/MD/could use/VB/use that/IN/that to/TO/to answer/VB/answer all/DT/all your/PRP$/your questions/NNS/questions and/CC/and it/PRP/it could/MD/could consistent/NNP/consistent. so/RB/so there/RB/there have/VBP/have to/TO/to be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves and/CC/and if/IN/if in/IN/in a/DT/a binary/JJ/binary tree/NN/tree /,/, there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial leaves/NNP/leaves. then/RB/then basically/RB/basically if/IN/if there/EX/there are/VBP/are some/DT/some n/NN/n leaves/VBZ/leaves in/IN/in a/DT/a binary/JJ/binary tree/NN/tree then/RB/then it/PRP/it has/VBZ/has to/TO/to have/VB/have a/DT/a height/NN/height of/IN/of at/IN/at least/JJS/least log/NN/log n/NNP/n. so/RB/so which/WDT/which means/VBZ/means that/DT/that the/DT/the tree/NN/tree has/VBZ/has to/TO/to have/VB/have a/DT/a height/NN/height of/IN/of at/IN/at least/JJS/least log/NN/log of/IN/of n/NN/n factorial/NNP/factorial. height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is at/IN/at least/JJS/least log/NN/log of/IN/of n/NN/n factorial/NNP/factorial. this/DT/this is/VBZ/is roughly/RB/roughly n/VBN/n log/NN/log n/NN/n which/WDT/which means/VBZ/means that/DT/that there/EX/there is/VBZ/is a/DT/a certain/JJ/certain permutation/NNP/permutation. what/WP/what is/VBZ/is the/DT/the height/NN/height ?/./? the/DT/the height/NN/height is/VBZ/is the/DT/the distance/NN/distance of/IN/of the/DT/the longest/JJS/longest of/IN/of the/DT/the farthest/JJS/farthest leaf/NN/leaf from/IN/from the/DT/the root/NNP/root. if/IN/if this/DT/this is/VBZ/is the/DT/the furthest/JJS/furthest leaf/NN/leaf from/IN/from the/DT/the root/NN/root /,/, then/RB/then if/IN/if this/DT/this were/VBD/were the/DT/the permutation/NN/permutation then/RB/then your/PRP$/your algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to take/VB/take a/DT/a time/NN/time of/IN/of at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n /,/, on/IN/on number/NN/number of/IN/of comparisons/NNS/comparisons at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n it/PRP/it ?/./? s/NNS/s going/VBG/going to/TO/to take/VB/take /NN/[ hindi/NN/hindi /:/] /./. this/DT/this is/VBZ/is the/DT/the argument/NN/argument /,/, we/PRP/we can/MD/can go/VB/go over/IN/over the/DT/the slides/NNS/slides once/RB/once again/RB/again and/CC/and understand/NN/understand it/PRP/it more/JJR/more carefully/NNP/carefully. this/DT/this is/VBZ/is the/DT/the argument/NN/argument for/IN/for why/WRB/why any/DT/any comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithm/NN/algorithm has/VBZ/has to/TO/to have/VB/have at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n time/NNP/time. so/RB/so recall/JJ/recall you/PRP/you are/VBP/are only/RB/only permitted/VBN/permitted to/TO/to compare/VB/compare two/CD/two keys/NNP/keys. radix/CD/radix sort/NN/sort is/VBZ/is not/RB/not an/DT/an example/NN/example of/IN/of a/DT/a comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithm/NN/algorithm because/IN/because you/PRP/you are/VBP/are not/RB/not comparing/VBG/comparing keys/NNP/keys. you/PRP/you are/VBP/are going/VBG/going into/IN/into the/DT/the keys/NNS/keys /,/, looking/VBG/looking at/IN/at the/DT/the bits/NNS/bits or/CC/or the/DT/the digits/NNS/digits and/CC/and so/RB/so that/IN/that ?/./? s/NNS/s why/WRB/why radix/NN/radix sort/NN/sort doesn/NN/doesn ?/./? t/NN/t have/VBP/have the/DT/the complexity/NN/complexity n/NN/n log/NN/log n/NNP/n. it/PRP/it could/MD/could be/VB/be less/RBR/less than/IN/than n/NN/n log/NN/log n/NN/n /,/, if/IN/if b/NN/b the/DT/the number/NN/number of/IN/of bits/NNS/bits or/CC/or digits/NNS/digits is/VBZ/is less/JJR/less than/IN/than log/NN/log n/NNP/n. yeah/NN/yeah /,/, so/RB/so radix/RB/radix sort/NN/sort is/VBZ/is the/DT/the only/JJ/only such/NNP/such. all/DT/all other/JJ/other algorithms/NNS/algorithms have/VBP/have to/TO/to have/VB/have because/IN/because they/PRP/they are/VBP/are all/RB/all comparisons/NNS/comparisons based/VBN/based sorting/VBG/sorting algorithm/NN/algorithm /,/, they/PRP/they have/VBP/have to/TO/to have/VB/have complexity/NN/complexity of/IN/of at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n and/CC/and there/EX/there are/VBP/are many/JJ/many which/WDT/which achieve/VBP/achieve that/IN/that bound/NNP/bound. so/RB/so with/IN/with that/DT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to end/VB/end today/NN/today ?/./? s/NNS/s class/NNP/class. we/PRP/we looked/VBD/looked at/IN/at radix/CD/radix sort/NN/sort /,/, we/PRP/we looked/VBD/looked at/IN/at bucket/NN/bucket sort/NN/sort /,/, we/PRP/we understood/VBD/understood what/WP/what stable/JJ/stable sorting/NN/sorting is/VBZ/is and/CC/and finally/RB/finally we/PRP/we saw/VBD/saw this/DT/this lower/JJR/lower bound/NN/bound on/IN/on comparison/NN/comparison based/VBN/based sorting/NNP/sorting. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 24/CD/24 graphs/NNS/graphs today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start talking/NN/talking about/IN/about graphs/NNP/graphs. we/PRP/we are/VBP/are going/VBG/going to/TO/to spend/VB/spend quite/RB/quite a/DT/a lot/NN/lot of/IN/of time/NN/time understanding/NN/understanding the/DT/the basic/JJ/basic definition/NN/definition in/IN/in terminologies/NNS/terminologies associated/VBN/associated with/IN/with graphs/NNS/graphs /,/, see/VBP/see some/DT/some examples/NNS/examples and/CC/and then/RB/then if/IN/if time/NN/time permits/NNS/permits we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do the/DT/the graph/NN/graph abstract/NN/abstract data/NNS/data type/NN/type or/CC/or i/PRP/i think/VBP/think we/PRP/we will/MD/will able/VB/able to/TO/to do/VB/do the/DT/the graph/NN/graph data/NNS/data type/NN/type today/NNP/today. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 30/CD/30 /CD/) so/RB/so question/NN/question is/VBZ/is what/WP/what is/VBZ/is a/DT/a graph/NN/graph ?/./? so/RB/so pictorially/RB/pictorially this/DT/this is/VBZ/is what/WP/what a/DT/a graph/NN/graph is/VBZ/is and/CC/and what/WP/what are/VBP/are terms/NNS/terms we/PRP/we are/VBP/are going/VBG/going to/TO/to have/NNP/have. so/RB/so graph/VBP/graph is/VBZ/is always/RB/always represented/VBN/represented by/IN/by a/DT/a two/CD/two tuple/JJ/tuple v/NN/v and/CC/and e/NN/e typically/RB/typically /,/, v/NN/v ?/./? s/NNS/s what/WP/what we/PRP/we will/MD/will call/VB/call the/DT/the set/NN/set of/IN/of vertices/NNS/vertices and/CC/and e/VB/e will/MD/will call/VB/call the/DT/the set/NN/set of/IN/of edges/NNP/edges. so/RB/so set/VBN/set of/IN/of vertices/NNS/vertices and/CC/and a/DT/a set/NN/set of/IN/of edges/NNS/edges together/RB/together specify/VB/specify a/DT/a graph/NNP/graph. in/IN/in this/DT/this picture/NN/picture these/DT/these red/JJ/red circles/NNS/circles are/VBP/are the/DT/the vertices/NNP/vertices. i/PRP/i have/VBP/have given/VBN/given each/DT/each of/IN/of these/DT/these vertices/NNS/vertices a/DT/a name/NN/name a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e to/TO/to distinguish/VB/distinguish them/PRP/them and/CC/and the/DT/the blue/JJ/blue lines/NNS/lines are/VBP/are the/DT/the edges/NNS/edges /,/, so/RB/so edge/NN/edge really/RB/really is/VBZ/is a/DT/a pair/NN/pair of/IN/of vertices/NNP/vertices. an/DT/an edge/NN/edge is/VBZ/is a/DT/a pair/NN/pair of/IN/of vertices/NNS/vertices or/CC/or an/DT/an edge/NN/edge is/VBZ/is specified/VBN/specified by/IN/by giving/NN/giving a/DT/a pair/NN/pair of/IN/of vertices/NNS/vertices so/IN/so this/DT/this edge/NN/edge is/VBZ/is said/VBN/said to/TO/to connect/VB/connect what/WP/what is/VBZ/is u/PRP/u and/CC/and v/NN/v or/CC/or will/MD/will not/RB/not use/VB/use the/DT/the term/NN/term connect/NN/connect but/CC/but this/DT/this edge/NN/edge is/VBZ/is an/DT/an edge/NN/edge between/IN/between u/NN/u and/CC/and v/NN/v ;/:/; when/WRB/when i/PRP/i say/VBP/say e/JJ/e =/NN/= u/NN/u v/NN/v is/VBZ/is an/DT/an edge/NN/edge then/RB/then that/IN/that means/NNS/means it/PRP/it ?/./? s/NNS/s an/DT/an edge/NN/edge between/IN/between vertices/NNS/vertices u/VBP/u and/CC/and vertex/NN/vertex v/NN/v /,/, vertices/NNS/vertices u/VBP/u and/CC/and v/NNP/v. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 2/CD/2 /:/: 08/CD/08 /CD/) so/RB/so for/IN/for instance/NN/instance in/IN/in this/DT/this example/NN/example this/DT/this graph/NN/graph could/MD/could be/VB/be specified/VBN/specified either/DT/either by/IN/by giving/NN/giving this/DT/this drawing/NN/drawing or/CC/or giving/VBG/giving these/DT/these this/DT/this detail/NNP/detail. as/IN/as in/IN/in v/NN/v the/DT/the set/NN/set of/IN/of vertices/NNS/vertices is/VBZ/is 5/CD/5 vertices/NNS/vertices a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e and/CC/and what/WP/what are/VBP/are the/DT/the edges/NNS/edges i/PRP/i have/VBP/have ?/./? each/DT/each edge/NN/edge as/IN/as you/PRP/you can/MD/can see/VB/see is/VBZ/is a/DT/a pair/NN/pair of/IN/of vertices/NNS/vertices /,/, an/DT/an unordered/VBN/unordered pair/NN/pair of/IN/of vertices/NNS/vertices here/RB/here /,/, a/DT/a comma/NN/comma b/NN/b is/VBZ/is the/DT/the same/JJ/same as/IN/as b/NN/b comma/NN/comma a/NNP/a. all/DT/all that/DT/that specifies/NNS/specifies is/VBZ/is it/PRP/it is/VBZ/is an/DT/an edge/NN/edge between/IN/between vertices/NNS/vertices a/DT/a and/CC/and b/NNP/b. so/RB/so a/DT/a comma/NN/comma b/NN/b /,/, a/DT/a comma/NN/comma c/NN/c is/VBZ/is this/DT/this edge/NN/edge ;/:/; a/DT/a comma/NN/comma d/NN/d is/VBZ/is this/DT/this edge/NN/edge /,/, b/NN/b comma/NN/comma e/NN/e is/VBZ/is this/DT/this /,/, c/NN/c comma/NN/comma d/NN/d is/VBZ/is that/IN/that /,/, c/NN/c comma/NN/comma e/NN/e is/VBZ/is this/DT/this and/CC/and d/VBD/d comma/NN/comma e/NN/e is/VBZ/is this/NNP/this. so/RB/so there/RB/there are/VBP/are 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 edges/NNS/edges and/CC/and there/EX/there are/VBP/are the/DT/the 7/CD/7 pairs/NNS/pairs mentioned/VBN/mentioned here/NNP/here. so/RB/so set/VBN/set of/IN/of vertices/NNS/vertices and/CC/and a/DT/a set/NN/set of/IN/of edges/NNP/edges. what/WP/what are/VBP/are they/PRP/they used/VBD/used for/IN/for ?/./? they/PRP/they are/VBP/are for/IN/for lots/NNS/lots and/CC/and lot/NN/lot of/IN/of applications/NNS/applications /,/, you/PRP/you can/MD/can model/VB/model circuits/NNS/circuits as/IN/as graphs/NNS/graphs /,/, each/DT/each of/IN/of component/NN/component of/IN/of the/DT/the circuit/NN/circuit could/MD/could be/VB/be a/DT/a vertex/NNP/vertex. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 18/CD/18 /CD/) so/RB/so this/DT/this could/MD/could be/VB/be a/DT/a vertex/NN/vertex /,/, this/DT/this could/MD/could be/VB/be a/DT/a vertex/NN/vertex /,/, this/DT/this could/MD/could be/VB/be a/DT/a vertex/NN/vertex /,/, this/DT/this could/MD/could be/VB/be a/DT/a vertex/NN/vertex /,/, this/DT/this is/VBZ/is a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is your/PRP$/your cs201/NNP/cs201 /,/, you/PRP/you are/VBP/are trying/VBG/trying to/TO/to find/VB/find out/RP/out the/DT/the path/NN/path of/IN/of these/DT/these resistance/NN/resistance to/TO/to get/VB/get cs201/NNP/cs201 /,/, they/PRP/they can/MD/can be/VB/be used/VBN/used to/TO/to model/VB/model networks/NNP/networks. so/RB/so i/PRP/i can/MD/can take/VB/take the/DT/the map/NN/map of/IN/of the/DT/the city/NN/city and/CC/and every/DT/every intersection/NN/intersection could/MD/could be/VB/be modeled/VBN/modeled as/IN/as a/DT/a vertex/NN/vertex and/CC/and the/DT/the roads/NNS/roads which/WDT/which are/VBP/are connecting/VBG/connecting to/TO/to intersections/NNS/intersections could/MD/could be/VB/be modeled/VBN/modeled as/IN/as an/DT/an edge/NN/edge and/CC/and then/RB/then that/IN/that could/MD/could be/VB/be a/DT/a graph/NN/graph and/CC/and then/RB/then start/VB/start asking/VBG/asking various/JJ/various questions/NNS/questions on/IN/on whether/IN/whether how/WRB/how can/MD/can i/VB/i go/VB/go from/IN/from this/DT/this place/NN/place to/TO/to this/DT/this place/NN/place by/IN/by asking/NN/asking the/DT/the corresponding/NN/corresponding question/NN/question on/IN/on a/DT/a graph/NNP/graph. so/RB/so transportation/NN/transportation networks/NNS/networks /,/, lots/NNS/lots of/IN/of this/DT/this communication/NN/communication networks/VBZ/networks all/DT/all of/IN/of them/PRP/them are/VBP/are modeled/VBN/modeled as/IN/as graphs/NNP/graphs. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 53/CD/53 /CD/) one/CD/one more/JJR/more example/NNP/example. so/RB/so this/DT/this is/VBZ/is typically/RB/typically student/NN/student day/NN/day so/RB/so you/PRP/you wake/VBP/wake up/RP/up /,/, you/PRP/you mediate/VBP/mediate first/JJ/first 201/CD/201 then/RB/then you/PRP/you eat/VBP/eat /,/, may/MD/may be/VB/be you/PRP/you work/VB/work then/RB/then more/RBR/more cs201/NNP/cs201 /,/, play/NN/play cs201/NNP/cs201 programming/NN/programming sleep/NN/sleep and/CC/and you/PRP/you dream/VBP/dream of/IN/of cs201/NNP/cs201 cycles/NNP/cycles. /NNP/[ student/NN/student /:/: so/RB/so idealistic/JJ/idealistic /NN/] there/EX/there is/VBZ/is no/DT/no room/NN/room for/IN/for any/DT/any other/JJ/other course/NNP/course. this/DT/this is/VBZ/is the/DT/the day/NN/day before/IN/before mine/NNP/mine. so/RB/so this/DT/this is/VBZ/is slightly/RB/slightly different/JJ/different from/IN/from the/DT/the graph/NN/graph that/IN/that i/PRP/i had/VBD/had shown/VBN/shown in/IN/in the/DT/the previous/JJ/previous example/NNP/example. why/WRB/why /:/[ student/NN/student /:/: directed/VBN/directed /-NONE-/] directed/NNP/directed. so/IN/so this/DT/this is/VBZ/is what/WP/what we/PRP/we call/VBP/call directed/VBN/directed graph/NN/graph because/IN/because we/PRP/we can/MD/can ?/./? t/VB/t do/VBP/do any/DT/any meditation/NN/meditation before/IN/before you/PRP/you wake/VBP/wake up/NNP/up. so/RB/so there/RB/there is/VBZ/is clearly/RB/clearly an/DT/an edge/NN/edge going/VBG/going from/IN/from wake/NN/wake up/IN/up to/TO/to meditation/NNP/meditation. so/RB/so every/DT/every edge/NN/edge has/VBZ/has a/DT/a direction/NN/direction associated/VBN/associated with/IN/with it/PRP/it /,/, we/PRP/we will/MD/will call/VB/call such/PDT/such graphs/NNS/graphs directed/VBN/directed graphs/NNP/graphs. so/RB/so we/PRP/we also/RB/also consider/VBP/consider directed/VBN/directed graphs/NNS/graphs but/CC/but in/IN/in the/DT/the rest/NN/rest of/IN/of the/DT/the lecture/NN/lecture i/PRP/i am/VBP/am going/VBG/going to/TO/to spend/VB/spend most/JJS/most of/IN/of time/NN/time with/IN/with undirected/JJ/undirected graphs/NNP/graphs. whatever/NN/whatever things/NNS/things i/PRP/i define/VBP/define will/MD/will carry/VB/carry over/IN/over in/IN/in a/DT/a straight/JJ/straight forward/NN/forward way/NN/way to/TO/to directed/VBN/directed graphs/NNS/graphs as/IN/as well/RB/well so/RB/so i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what the/DT/the difference/NN/difference is/NNP/is. so/RB/so to/TO/to begin/VB/begin with/IN/with let/NN/let me/PRP/me go/VBP/go back/RB/back to/TO/to the/DT/the previous/JJ/previous slide/NNP/slide. in/IN/in this/DT/this example/NN/example or/CC/or in/IN/in this/DT/this definition/NN/definition where/WRB/where would/MD/would the/DT/the difference/NN/difference be/VB/be when/WRB/when i/PRP/i am/VBP/am talking/VBG/talking of/IN/of a/DT/a directed/VBN/directed graph/NN/graph ?/./? so/RB/so e/VB/e comma/NN/comma u/NN/u v/NN/v is/VBZ/is not/RB/not just/RB/just a/DT/a pair/JJ/pair /,/, it/PRP/it is/VBZ/is an/DT/an ordered/VBN/ordered pair/NN/pair let/NN/let ?/./? s/NNS/s say/NNP/say. so/RB/so the/DT/the ordering/NN/ordering is/VBZ/is important/JJ/important /,/, the/DT/the first/JJ/first vertex/NN/vertex typically/RB/typically specify/VB/specify what/WP/what the/DT/the start/NN/start of/IN/of the/DT/the edges/NNS/edges is/VBZ/is or/CC/or the/DT/the origin/NN/origin of/IN/of the/DT/the edge/NN/edge and/CC/and the/DT/the other/JJ/other would/MD/would specify/VB/specify the/DT/the destination/NN/destination of/IN/of the/DT/the edge/NN/edge where/WRB/where the/DT/the edge/NN/edge is/VBZ/is going/VBG/going from/IN/from /,/, so/RB/so what/WP/what is/VBZ/is the/DT/the start/NN/start and/CC/and what/WP/what is/VBZ/is the/DT/the end/NNP/end. so/RB/so as/IN/as i/PRP/i said/VBD/said today/NN/today is/VBZ/is a/DT/a fairly/RB/fairly simple/JJ/simple lecture/NN/lecture /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at lots/NNS/lots of/IN/of terminologies/NNP/terminologies. so/RB/so now/RB/now you/PRP/you have/VBP/have understood/VBN/understood what/WP/what a/DT/a graph/NN/graph is/NNP/is. so/RB/so there/RB/there are/VBP/are two/CD/two kinds/NNS/kinds of/IN/of graphs/NNS/graphs a/DT/a directed/JJ/directed graph/NN/graph and/CC/and an/DT/an undirected/JJ/undirected graph/NNP/graph. so/RB/so graph/VBP/graph which/WDT/which is/VBZ/is not/RB/not directed/VBN/directed is/VBZ/is called/VBN/called undirected/VBN/undirected graph/NN/graph and/CC/and you/PRP/you understand/VBP/understand what/WP/what a/DT/a vertex/NN/vertex is/VBZ/is /,/, what/WP/what vertices/NNS/vertices are/VBP/are /,/, what/WP/what edges/NNS/edges are/NNP/are. adjacent/NN/adjacent vertices/NNS/vertices /,/, so/RB/so two/CD/two vertices/NNS/vertices so/RB/so this/DT/this is/VBZ/is all/DT/all terminologies/NNS/terminologies associated/VBN/associated with/IN/with an/DT/an undirected/VBN/undirected graph/NN/graph so/IN/so two/CD/two vertices/NNS/vertices which/WDT/which are/VBP/are connected/VBN/connected by/IN/by an/DT/an edge/NN/edge are/VBP/are called/VBN/called adjacent/NNP/adjacent. is/VBZ/is this/DT/this vertex/NN/vertex and/CC/and this/DT/this vertex/NN/vertex /,/, these/DT/these two/CD/two vertices/NNS/vertices are/VBP/are they/PRP/they adjacent/VBP/adjacent ?/./? no/DT/no /,/, they/PRP/they are/VBP/are not/RB/not connected/VBN/connected by/IN/by an/DT/an edge/NN/edge while/IN/while this/DT/this and/CC/and this/DT/this are/VBP/are adjacent/NN/adjacent and/CC/and this/DT/this and/CC/and this/DT/this are/VBP/are not/RB/not adjacent/JJ/adjacent either/NNP/either. so/RB/so what/WP/what is/VBZ/is it/PRP/it which/WDT/which are/VBP/are connected/VBN/connected by/IN/by an/DT/an edge/NN/edge are/VBP/are called/VBN/called vertices/NNS/vertices /,/, the/DT/the degree/NN/degree of/IN/of a/DT/a vertex/NNP/vertex. the/DT/the degree/NN/degree of/IN/of the/DT/the vertex/NN/vertex is/VBZ/is the/DT/the number/NN/number of/IN/of adjacent/NN/adjacent vertices/NNS/vertices it/PRP/it has/NNP/has. so/RB/so what/WP/what is/VBZ/is the/DT/the degree/NN/degree of/IN/of this/DT/this vertex/NN/vertex ?/./? 3/CD/3. so/RB/so in/IN/in fact/NN/fact i/PRP/i have/VBP/have written/VBN/written down/RP/down the/DT/the degrees/NNS/degrees of/IN/of the/DT/the various/JJ/various vertices/NNS/vertices on/IN/on these/DT/these so/RB/so this/DT/this vertex/NN/vertex is/VBZ/is degree/JJ/degree is/VBZ/is 2/CD/2 /,/, this/DT/this vertex/NN/vertex is/VBZ/is degree/JJ/degree 3/CD/3 /,/, this/DT/this is/VBZ/is degree/NN/degree 3/CD/3 /,/, this/DT/this is/VBZ/is degree/NN/degree 3/CD/3 /,/, everyone/NN/everyone understands/NNS/understands the/DT/the degree/NN/degree of/IN/of the/DT/the vertex/NNP/vertex. it/PRP/it is/VBZ/is the/DT/the number/NN/number of/IN/of adjacent/NN/adjacent vertices/NNP/vertices. sometimes/RB/sometimes we/PRP/we say/VBP/say that/IN/that this/DT/this edge/NN/edge is/VBZ/is incident/NN/incident to/TO/to these/DT/these two/CD/two vertices/NNP/vertices. should/MD/should i/VB/i write/JJ/write down/IN/down the/DT/the word/NN/word ?/./? so/RB/so this/DT/this edge/NN/edge /,/, let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this vertex/NN/vertex is/VBZ/is vertex/NN/vertex a/DT/a and/CC/and vertex/NN/vertex b/NN/b and/CC/and this/DT/this edge/NN/edge is/VBZ/is e/NN/e /,/, so/RB/so e/VB/e equals/NNS/equals a/DT/a b/NN/b is/VBZ/is incident/NN/incident to/TO/to vertices/NNS/vertices a/DT/a and/CC/and b/NNP/b. so/RB/so this/DT/this edge/NN/edge is/VBZ/is incident/NN/incident to/TO/to these/DT/these two/CD/two vertices/NNS/vertices similarly/RB/similarly this/DT/this edge/NN/edge is/VBZ/is incident/NN/incident into/IN/into this/DT/this vertex/NN/vertex as/IN/as well/RB/well as/IN/as this/DT/this vertex/NNP/vertex. so/RB/so degree/JJ/degree of/IN/of a/DT/a vertex/NN/vertex can/MD/can also/RB/also be/VB/be defined/VBN/defined as/IN/as the/DT/the number/NN/number of/IN/of edges/NNS/edges which/WDT/which are/VBP/are incident/JJ/incident to/TO/to that/DT/that vertex/NNP/vertex. there/RB/there are/VBP/are three/CD/three edges/NNS/edges which/WDT/which are/VBP/are incident/JJ/incident to/TO/to this/DT/this vertex/NN/vertex /,/, so/RB/so the/DT/the degree/NN/degree of/IN/of this/DT/this vertex/NN/vertex is/VBZ/is 3/CD/3. these/DT/these are/VBP/are equivalent/JJ/equivalent ways/NNS/ways of/IN/of saying/VBG/saying the/DT/the same/JJ/same thing/NNP/thing. so/IN/so question/NN/question is/VBZ/is what/WP/what is/VBZ/is the/DT/the sum/NN/sum of/IN/of the/DT/the degrees/NNS/degrees of/IN/of all/DT/all the/DT/the vertices/NNS/vertices /,/, /:/[ hindi/NN/hindi conversation/NN/conversation /:/] twice/NN/twice the/DT/the number/NN/number of/IN/of edges/NNP/edges. because/IN/because when/WRB/when i/PRP/i am/VBP/am counting/VBG/counting /,/, so/RB/so let/VB/let ?/./? s/NNS/s think/VBP/think of/IN/of it/PRP/it in/IN/in the/DT/the following/JJ/following manner/NNP/manner. so/RB/so the/DT/the answer/NN/answer is/VBZ/is right/RB/right /,/, twice/NN/twice the/DT/the number/NN/number of/IN/of edges/NNS/edges and/CC/and the/DT/the argument/NN/argument is/VBZ/is actually/RB/actually half/DT/half a/DT/a line/NN/line of/IN/of an/DT/an argument/NNP/argument. so/RB/so pictorially/RB/pictorially i/PRP/i would/MD/would say/VB/say the/DT/the following/VBG/following ;/:/; when/WRB/when i/PRP/i am/VBP/am counting/VBG/counting three/CD/three for/IN/for this/DT/this /,/, i/PRP/i am/VBP/am counting/VBG/counting three/CD/three because/IN/because i/PRP/i am/VBP/am counting/VBG/counting this/DT/this one/CD/one edge/NN/edge /,/, this/DT/this edge/NN/edge and/CC/and this/DT/this edge/NNP/edge. so/RB/so let/VB/let me/PRP/me put/VB/put 3/CD/3 stones/NNS/stones /,/, one/CD/one on/IN/on each/DT/each of/IN/of these/DT/these three/CD/three edges/NNS/edges then/RB/then when/WRB/when i/PRP/i am/VBP/am counting/VBG/counting 3/CD/3 here/RB/here i/PRP/i am/VBP/am counting/VBG/counting this/DT/this edge/NN/edge /,/, this/DT/this edge/NN/edge let/VBD/let me/PRP/me put/VBD/put down/RP/down 3/CD/3 stones/NNP/stones. then/RB/then here/RB/here i/PRP/i am/VBP/am putting/VBG/putting down/IN/down 2/CD/2 stones/NNS/stones /,/, here/RB/here i/PRP/i am/VBP/am putting/VBG/putting down/IN/down 3/CD/3 stones/NNS/stones /,/, here/RB/here i/PRP/i am/VBP/am putting/VBG/putting down/IN/down 3/CD/3 stones/NNP/stones. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 50/CD/50 /CD/) so/RB/so i/PRP/i have/VBP/have to/TO/to put/VB/put as/IN/as many/JJ/many stones/NNS/stones or/CC/or pebbles/NNS/pebbles /,/, if/IN/if you/PRP/you want/VBP/want as/IN/as many/JJ/many peppules/NNS/peppules as/IN/as the/DT/the sum/NN/sum of/IN/of the/DT/the degrees/NNS/degrees of/IN/of the/DT/the vertices/NNP/vertices. now/RB/now if/IN/if i/PRP/i look/VBP/look at/IN/at any/DT/any edge/NN/edge /,/, how/WRB/how many/JJ/many pebbles/NNS/pebbles are/VBP/are there/RB/there on/IN/on that/DT/that edge/NN/edge ?/./? exactly/RB/exactly 2/CD/2 /,/, so/RB/so the/DT/the sum/NN/sum of/IN/of the/DT/the degrees/NNS/degrees of/IN/of the/DT/the vertices/NNS/vertices equals/NNS/equals two/CD/two times/NNS/times the/DT/the number/NN/number of/IN/of edges/NNP/edges. so/RB/so that/IN/that ?/./? s/NNS/s degree/VBP/degree and/CC/and you/PRP/you understand/VBP/understand what/WP/what degree/NN/degree is/VBZ/is /,/, you/PRP/you understand/VBP/understand what/WP/what adjacent/NN/adjacent vertices/NNS/vertices are/NNP/are. now/RB/now let/VB/let ?/./? s/NNS/s define/VBP/define the/DT/the notion/NN/notion of/IN/of a/DT/a path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 57/CD/57 /CD/) so/RB/so a/DT/a path/NN/path in/IN/in a/DT/a graph/NN/graph is/VBZ/is a/DT/a sequence/NN/sequence of/IN/of vertices/NNS/vertices let/VBP/let ?/./? s/NNS/s say/VBP/say v1/NNP/v1 /,/, v2/NNP/v2 /,/, vk/NN/vk such/JJ/such that/IN/that consecutive/JJ/consecutive vertices/NNS/vertices have/VBP/have an/DT/an edge/NN/edge between/IN/between them/NNP/them. so/RB/so if/IN/if i/PRP/i take/VBP/take vertex/NN/vertex vi/NN/vi and/CC/and vi/NN/vi +/:/+ 1/CD/1 then/RB/then these/DT/these two/CD/two vertices/NNS/vertices are/VBP/are adjacent/JJ/adjacent there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between this/DT/this vertices/NNP/vertices. so/RB/so there/RB/there are/VBP/are two/CD/two examples/NNS/examples here/NNP/here. so/RB/so this/DT/this is/VBZ/is my/PRP$/my graph/NN/graph /,/, the/DT/the same/JJ/same graph/NN/graph as/IN/as before/IN/before recall/NN/recall that/IN/that there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between c/NN/c and/CC/and e/NN/e also/NNP/also. so/RB/so this/DT/this is/VBZ/is the/DT/the path/NN/path a/DT/a b/NN/b e/NN/e d/NN/d c/NN/c e/NNP/e. why/WRB/why is/VBZ/is this/DT/this a/DT/a path/NN/path ?/./? because/IN/because there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between a/DT/a and/CC/and b/NN/b /,/, there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between b/NN/b and/CC/and e/NN/e /,/, there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between e/NN/e and/CC/and d/VBD/d /,/, between/IN/between d/NN/d and/CC/and c/NN/c and/CC/and c/NN/c and/CC/and e/NN/e /,/, so/RB/so this/DT/this is/VBZ/is a/DT/a path/NNP/path. similarly/RB/similarly this/DT/this is/VBZ/is the/DT/the path/NN/path b/NN/b e/NN/e d/NN/d c/NN/c because/IN/because there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between b/NN/b and/CC/and e/NN/e /,/, between/IN/between d/NN/d and/CC/and e/NN/e /,/, between/IN/between d/NN/d and/CC/and c/NNP/c. it/PRP/it is/VBZ/is easy/JJ/easy to/TO/to construct/VB/construct examples/NNS/examples which/WDT/which are/VBP/are not/RB/not paths/NNP/paths. suppose/NN/suppose i/PRP/i had/VBD/had written/VBN/written down/RP/down a/DT/a b/NN/b c/NN/c /,/, a/DT/a b/NN/b c/NN/c is/VBZ/is not/RB/not a/DT/a path/NN/path in/IN/in this/DT/this graph/NNP/graph. why/WRB/why because/IN/because while/IN/while there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from a/DT/a to/TO/to b/VB/b there/RB/there is/VBZ/is no/DT/no edge/NN/edge from/IN/from b/NN/b to/TO/to c/VB/c /,/, so/RB/so everyone/NN/everyone understands/NNS/understands what/WP/what a/DT/a path/NN/path is/NNP/is. a/DT/a simple/JJ/simple path/NN/path is/VBZ/is a/DT/a path/NN/path in/IN/in which/WDT/which no/DT/no vertex/NN/vertex is/VBZ/is repeated/VBN/repeated so/RB/so this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a simple/JJ/simple path/NN/path b/NN/b e/NN/e c/NNP/c. these/DT/these three/CD/three vertices/NNS/vertices are/VBP/are all/DT/all distinct/JJ/distinct so/RB/so it/PRP/it is/VBZ/is a/DT/a simple/JJ/simple path/NNP/path. a/DT/a cycle/NN/cycle is/VBZ/is a/DT/a simple/JJ/simple path/NN/path in/IN/in which/WDT/which the/DT/the first/JJ/first and/CC/and the/DT/the last/JJ/last vertices/NNS/vertices are/VBP/are the/DT/the same/NNP/same. so/RB/so a/DT/a c/NN/c d/NN/d a/DT/a is/VBZ/is a/DT/a cycle/NN/cycle /,/, d/VBD/d a/DT/a c/NN/c d/NN/d is/VBZ/is the/DT/the same/JJ/same cycle/NN/cycle /,/, c/NN/c d/VBD/d a/DT/a c/NN/c is/VBZ/is also/RB/also a/DT/a same/JJ/same cycle/NNP/cycle. so/IN/so you/PRP/you can/MD/can read/VB/read the/DT/the cycle/NN/cycle anywhere/RB/anywhere /,/, this/DT/this is/VBZ/is a/DT/a cycle/NN/cycle this/DT/this is/VBZ/is a/DT/a simple/JJ/simple path/NNP/path. in/IN/in the/DT/the previous/JJ/previous slide/NN/slide we/PRP/we had/VBD/had an/DT/an example/NN/example of/IN/of a/DT/a path/NN/path which/WDT/which is/VBZ/is not/RB/not simple/NNP/simple. this/DT/this is/VBZ/is not/RB/not a/DT/a simple/JJ/simple path/NNP/path. why/WRB/why /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a simple/JJ/simple path/NN/path because/IN/because vertex/NN/vertex e/NN/e is/VBZ/is repeated/VBN/repeated here/-NONE-/here. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 05/CD/05 /CD/) so/RB/so this/DT/this is/VBZ/is a/DT/a simple/JJ/simple path/NN/path except/IN/except that/DT/that the/DT/the first/JJ/first and/CC/and the/DT/the last/JJ/last vertices/NNS/vertices are/VBP/are the/DT/the same/NNP/same. that/IN/that ?/./? s/NNS/s what/WP/what a/DT/a cycle/NN/cycle is/NNP/is. a/DT/a graph/NN/graph is/VBZ/is said/VBN/said to/TO/to be/VB/be connected/VBN/connected if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices in/IN/in the/DT/the graph/NN/graph /,/, /:/[ hindi/NN/hindi conversation/NN/conversation /:/] that/IN/that the/DT/the graph/NN/graph is/VBZ/is connected/NNP/connected. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 48/CD/48 /CD/) is/VBZ/is this/DT/this graph/NN/graph connected/VBD/connected ?/./? /CD/[ student/NN/student /:/: yes/NNS/yes /,/, the/DT/the path/NN/path /:/] path/NN/path /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so this/DT/this graph/NN/graph is/VBZ/is connected/VBN/connected /,/, this/DT/this is/VBZ/is not/RB/not connected/VBN/connected there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from here/RB/here to/TO/to here/RB/here /,/, so/RB/so this/DT/this is/VBZ/is connected/VBN/connected this/DT/this second/JJ/second one/CD/one is/VBZ/is not/RB/not connected/VBN/connected and/CC/and this/DT/this is/VBZ/is the/DT/the common/JJ/common mistake/NN/mistake connected/VBN/connected /-NONE-/[ hindi/NN/hindi conversation/NN/conversation /:/] there/EX/there should/MD/should be/VB/be a/DT/a path/NN/path between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNP/vertices. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15.37/CD/15.37 /CD/) if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path then/RB/then it/PRP/it is/VBZ/is connected/VBN/connected /,/, if/IN/if there/EX/there is/VBZ/is no/DT/no path/NN/path it/PRP/it ?/./? s/NNS/s not/RB/not connected/NNP/connected. so/RB/so these/DT/these two/CD/two vertices/NNS/vertices so/RB/so again/RB/again this/DT/this is/VBZ/is the/DT/the common/JJ/common mistake/NN/mistake when/WRB/when you/PRP/you are/VBP/are writing/VBG/writing a/DT/a minus/NN/minus especially/RB/especially you/PRP/you are/VBP/are going/VBG/going to/TO/to say/VB/say these/DT/these two/CD/two vertices/NNS/vertices are/VBP/are not/RB/not connected/VBN/connected because/IN/because you/PRP/you don/VBP/don ?/./? t/NN/t see/VB/see an/DT/an edge/NN/edge between/IN/between them/PRP/them that/IN/that ?/./? s/NNS/s wrong/IN/wrong terminology/NNP/terminology. these/DT/these two/CD/two vertices/NNS/vertices do/VBP/do not/RB/not have/VB/have an/DT/an edge/NN/edge between/IN/between them/PRP/them but/CC/but they/PRP/they are/VBP/are connected/VBN/connected because/IN/because there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between these/DT/these two/CD/two vertices/NNP/vertices. so/RB/so we/PRP/we say/VBP/say two/CD/two vertices/NNS/vertices are/VBP/are connected/VBN/connected if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between them/PRP/them and/CC/and a/DT/a graph/NN/graph is/VBZ/is connected/VBN/connected if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNP/vertices. is/VBZ/is this/DT/this clear/JJ/clear to/TO/to everyone/NN/everyone ?/./? let/NN/let ?/./? s/NNS/s understand/VBP/understand the/DT/the notion/NN/notion of/IN/of a/DT/a sub/NN/sub graph/NN/graph /,/, so/RB/so this/DT/this is/VBZ/is a/DT/a graph/NN/graph on/IN/on the/DT/the left/NN/left hand/NN/hand side/NN/side suppose/NN/suppose i/PRP/i take/VBP/take a/DT/a subset/NN/subset of/IN/of the/DT/the vertices/NNS/vertices and/CC/and of/IN/of the/DT/the edges/NNS/edges such/JJ/such that/IN/that the/DT/the resulting/VBG/resulting thing/NN/thing is/VBZ/is also/RB/also a/DT/a graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16.23/CD/16.23 /CD/) so/RB/so i/PRP/i took/VBD/took some/DT/some vertices/NNS/vertices from/IN/from here/RB/here /,/, this/DT/this vertex/NN/vertex you/PRP/you can/MD/can see/VB/see it/PRP/it ?/./? s/NNS/s corresponding/NNP/corresponding. i/PRP/i took/VBD/took 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 /,/, 10/CD/10 /,/, 11/CD/11 vertices/NNS/vertices from/IN/from here/NNP/here. there/RB/there are/VBP/are 13/CD/13 vertices/NNS/vertices in/IN/in here/RB/here i/PRP/i took/VBD/took 11/CD/11 of/IN/of them/PRP/them and/CC/and i/PRP/i took/VBD/took some/DT/some of/IN/of the/DT/the edges/NNS/edges between/IN/between these/DT/these vertices/NNP/vertices. i/PRP/i am/VBP/am not/RB/not taken/VBN/taken all/DT/all the/DT/the edges/NNS/edges /,/, as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this edges/NNS/edges is/VBZ/is not/RB/not here/RB/here /,/, this/DT/this would/MD/would be/VB/be called/VBN/called a/DT/a sub/NN/sub graph/NN/graph of/IN/of this/DT/this graph/NNP/graph. i/PRP/i can/MD/can not/RB/not takes/VBZ/takes this/DT/this edge/NN/edge because/IN/because the/DT/the other/JJ/other point/NN/point of/IN/of this/DT/this edge/NN/edge is/VBZ/is not/RB/not there/RB/there /,/, i/PRP/i have/VBP/have not/RB/not included/VBN/included here/RB/here at/IN/at all/NNP/all. for/IN/for an/DT/an edge/NN/edge /,/, the/DT/the two/CD/two vertices/NNS/vertices between/IN/between which/WDT/which the/DT/the edge/NN/edge is/VBZ/is running/VBG/running are/VBP/are also/RB/also called/VBN/called the/DT/the end/NN/end points/NNS/points of/IN/of that/DT/that edge/NNP/edge. each/DT/each edge/NN/edge has/VBZ/has two/CD/two end/NN/end points/NNS/points and/CC/and those/DT/those are/VBP/are the/DT/the two/CD/two end/NN/end points/NNS/points so/RB/so this/DT/this is/VBZ/is called/VBN/called the/DT/the sub/NN/sub graph/NN/graph of/IN/of this/DT/this graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 39/CD/39 /CD/) now/RB/now let/VB/let ?/./? s/NNS/s understand/VBP/understand what/WP/what a/DT/a connected/VBN/connected component/NN/component is/NNP/is. a/DT/a connected/VBN/connected component/NN/component is/VBZ/is a/DT/a maximal/JJ/maximal connected/VBN/connected graph/NNP/graph. suppose/NN/suppose this/DT/this is/VBZ/is one/CD/one graph/NN/graph /,/, it/PRP/it is/VBZ/is not/RB/not 3/CD/3 graphs/NNS/graphs i/PRP/i have/VBP/have drawn/VBN/drawn just/RB/just one/CD/one graph/NN/graph in/NNP/in. this/DT/this is/VBZ/is not/RB/not a/DT/a connected/VBN/connected graph/NNP/graph. is/VBZ/is this/DT/this connected/VBN/connected ?/./? /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /:/[ student/NN/student /:/: this/DT/this is/VBZ/is not/RB/not connected/VBN/connected /-NONE-/] this/DT/this is/VBZ/is not/RB/not a/DT/a connected/VBN/connected graph/NNP/graph. why/WRB/why /,/, because/IN/because there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from here/RB/here to/TO/to here/RB/here /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. this/DT/this is/VBZ/is not/RB/not connected/VBN/connected because/IN/because there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from here/RB/here to/TO/to here/RB/here /,/, there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from here/RB/here to/TO/to here/RB/here /,/, so/RB/so it/PRP/it is/VBZ/is not/RB/not a/DT/a connected/VBN/connected graph/NNP/graph. if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this sub/NN/sub graph/NN/graph it/PRP/it is/VBZ/is connected/VBN/connected just/RB/just this/DT/this sub/NN/sub graph/NNP/graph. these/DT/these three/CD/three vertices/NNS/vertices and/CC/and these/DT/these three/CD/three edges/NNS/edges it/PRP/it ?/./? s/NNS/s connected/NNP/connected. these/DT/these 4/CD/4 vertices/NNS/vertices and/CC/and these/DT/these 3/CD/3 edges/NNS/edges are/VBP/are also/RB/also connected/VBN/connected /,/, these/DT/these 5/CD/5 vertices/NNS/vertices and/CC/and the/DT/the 7/CD/7 edges/NNS/edges on/IN/on them/PRP/them are/VBP/are also/RB/also connected/NNP/connected. these/DT/these 3/CD/3 are/VBP/are the/DT/the connected/VBN/connected components/NNS/components of/IN/of this/DT/this graph/NNP/graph. now/RB/now what/WP/what ?/./? s/NNS/s the/DT/the definition/NN/definition of/IN/of connect/NN/connect ?/./? it/PRP/it ?/./? s/NNS/s a/DT/a maximal/JJ/maximal connected/VBN/connected sub/NN/sub graph/NNP/graph. what/WP/what does/VBZ/does a/DT/a maximal/JJ/maximal connected/VBN/connected sub/NN/sub graph/NN/graph mean/NN/mean ?/./? this/DT/this needs/VBZ/needs to/TO/to be/VB/be understood/VBN/understood more/RBR/more carefully/NNP/carefully. suppose/NN/suppose i/PRP/i were/VBD/were to/TO/to take/VB/take this/DT/this vertex/NN/vertex and/CC/and this/DT/this vertex/NN/vertex and/CC/and i/PRP/i were/VBD/were to/TO/to take/VB/take this/DT/this edge/NN/edge and/CC/and this/DT/this edge/NNP/edge. this/DT/this is/VBZ/is a/DT/a sub/NN/sub graph/NN/graph /,/, yes/VBZ/yes or/CC/or no/DT/no ?/./? this/DT/this is/VBZ/is a/DT/a sub/NN/sub graph/NN/graph of/IN/of the/DT/the original/JJ/original graph/NN/graph but/CC/but this/DT/this is/VBZ/is not/RB/not a/DT/a connected/VBN/connected component/NN/component /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to call/VB/call this/DT/this a/DT/a connected/VBN/connected component/NNP/component. why/WRB/why ?/./? because/IN/because it/PRP/it is/VBZ/is not/RB/not maximal/JJ/maximal so/RB/so what/WP/what does/VBZ/does maximal/JJ/maximal mean/NN/mean ?/./? so/RB/so when/WRB/when we/PRP/we say/VBP/say maximal/JJ/maximal in/IN/in this/DT/this class/NN/class /,/, we/PRP/we mean/VBP/mean a/DT/a set/NN/set is/VBZ/is called/VBN/called maximal/JJ/maximal if/IN/if we/PRP/we can/MD/can not/RB/not increase/VB/increase the/DT/the size/NN/size of/IN/of the/DT/the set/NN/set while/IN/while retaining/VBG/retaining the/DT/the property/NNP/property. so/RB/so a/DT/a set/NN/set is/VBZ/is said/VBN/said to/TO/to be/VB/be maximal/JJ/maximal with/IN/with respect/NN/respect to/TO/to a/DT/a certain/JJ/certain property/NNP/property. if/IN/if we/PRP/we can/MD/can not/RB/not add/VB/add more/JJR/more elements/NNS/elements to/TO/to the/DT/the set/NN/set and/CC/and retain/VB/retain the/DT/the property/NN/property that/IN/that ?/./? s/NNS/s not/RB/not true/JJ/true here/RB/here i/PRP/i can/MD/can add/VB/add more/RBR/more elements/NNS/elements to/TO/to this/DT/this set/NN/set /,/, i/PRP/i can/MD/can add/VB/add more/RBR/more edges/NNS/edges or/CC/or i/PRP/i can/MD/can add/VB/add more/RBR/more vertices/NNS/vertices and/CC/and both/NNP/both. so/RB/so i/PRP/i can/MD/can add/VB/add this/DT/this edge/NN/edge and/CC/and it/PRP/it is/VBZ/is still/RB/still connected/VBN/connected i/PRP/i can/MD/can this/DT/this vertex/NN/vertex and/CC/and this/DT/this edge/NN/edge and/CC/and it/PRP/it is/VBZ/is still/RB/still connected/VBN/connected /,/, i/PRP/i can/MD/can add/VB/add this/DT/this vertex/NN/vertex and/CC/and this/DT/this edge/NN/edge and/CC/and it/PRP/it is/VBZ/is still/RB/still connected/VBN/connected /,/, i/PRP/i can/MD/can add/VB/add this/DT/this edge/NN/edge now/RB/now it/PRP/it is/VBZ/is still/RB/still connected/VBN/connected /,/, i/PRP/i can/MD/can add/VB/add this/DT/this edge/NN/edge now/RB/now it/PRP/it is/VBZ/is still/RB/still connected/NNP/connected. now/RB/now if/IN/if i/PRP/i add/VBP/add any/DT/any other/JJ/other vertex/NN/vertex or/CC/or any/DT/any other/JJ/other edge/NN/edge /,/, suppose/NN/suppose i/PRP/i decided/VBD/decided to/TO/to add/VB/add this/DT/this vertex/NN/vertex /,/, i/PRP/i add/VBP/add this/DT/this but/CC/but it/PRP/it is/VBZ/is not/RB/not connected/VBN/connected anymore/NNP/anymore. so/RB/so this/DT/this is/VBZ/is a/DT/a maximal/JJ/maximal connected/VBN/connected sub/NN/sub graph/NN/graph and/CC/and so/RB/so we/PRP/we will/MD/will call/VB/call this/DT/this a/DT/a connected/VBN/connected componenent/NN/componenent so/IN/so this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is the/DT/the connected/VBN/connected component/NNP/component. this/DT/this is/VBZ/is also/RB/also a/DT/a connected/VBN/connected component/NN/component and/CC/and this/DT/this is/VBZ/is also/RB/also a/DT/a connected/VBN/connected component/NNP/component. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] i/PRP/i can/MD/can not/RB/not add/VB/add any/DT/any other/JJ/other vertices/NNS/vertices and/CC/and still/RB/still have/VBP/have the/DT/the property/NN/property of/IN/of it/PRP/it being/VBG/being connected/NNP/connected. so/RB/so essentially/RB/essentially intuitively/RB/intuitively how/WRB/how do/VBP/do you/PRP/you think/VB/think of/IN/of connected/VBN/connected component/NN/component ?/./? you/PRP/you just/RB/just see/VBP/see which/WDT/which are/VBP/are the/DT/the pieces/NNS/pieces which/WDT/which are/VBP/are connected/VBN/connected among/IN/among each/DT/each other/JJ/other /,/, each/DT/each of/IN/of them/PRP/them is/VBZ/is a/DT/a connected/VBN/connected component/NN/component as/IN/as simple/JJ/simple as/IN/as that/NNP/that. so/RB/so this/DT/this graph/NN/graph is/VBZ/is 3/CD/3 connected/VBN/connected components/NNP/components. more/RBR/more terminologies/NNS/terminologies ;/:/; what/WP/what is/VBZ/is a/DT/a forest/NN/forest ?/./? forest/NN/forest is/VBZ/is a/DT/a jungle/JJ/jungle /,/, jungle/JJ/jungle is/VBZ/is a/DT/a collection/NN/collection of/IN/of trees/NNS/trees and/CC/and animals/NNS/animals but/CC/but we/PRP/we will/MD/will leave/VB/leave out/RP/out the/DT/the animals/NNP/animals. so/RB/so we/PRP/we are/VBP/are thinking/VBG/thinking of/IN/of forest/JJS/forest as/IN/as a/DT/a collection/NN/collection of/IN/of trees/NNS/trees so/IN/so these/DT/these are/VBP/are trees/NNS/trees in/IN/in the/DT/the forest/NN/forest now/RB/now what/WP/what is/VBZ/is a/DT/a tree/NN/tree here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 38/CD/38 /CD/) a/DT/a tree/NN/tree here/RB/here is/VBZ/is a/DT/a connected/VBN/connected graph/NN/graph which/WDT/which does/VBZ/does not/RB/not have/VB/have any/DT/any cycles/NNS/cycles in/IN/in it/NNP/it. it/PRP/it ?/./? s/NNS/s the/DT/the same/JJ/same as/IN/as the/DT/the tree/NN/tree that/IN/that we/PRP/we till/VBP/till now/RB/now except/IN/except the/DT/the /NN/[ hindi/NN/hindi conversation/NN/conversation /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 00/CD/00 /CD/) /./. so/RB/so this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of the/DT/the tree/NN/tree it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected sub/NN/sub graph/NN/graph as/IN/as we/PRP/we can/MD/can see/VB/see and/CC/and it/PRP/it does/VBZ/does not/RB/not have/VB/have any/DT/any cycle/NN/cycle in/IN/in it/NNP/it. this/DT/this is/VBZ/is also/RB/also a/DT/a tree/NN/tree /,/, this/DT/this is/VBZ/is also/RB/also a/DT/a tree/NN/tree /,/, this/DT/this is/VBZ/is also/RB/also a/DT/a tree/NN/tree when/WRB/when you/PRP/you have/VBP/have collection/NN/collection of/IN/of trees/NNS/trees it/PRP/it is/VBZ/is a/DT/a forest/NNP/forest. so/RB/so forest/JJS/forest is/VBZ/is a/DT/a collection/NN/collection of/IN/of trees/NNS/trees so/IN/so everyone/NN/everyone understands/NNS/understands this/NNP/this. what/WP/what a/DT/a trees/NNS/trees ?/./? tree/NN/tree is/VBZ/is a/DT/a connected/VBN/connected sub/NN/sub graph/NN/graph which/WDT/which does/VBZ/does not/RB/not have/VB/have any/DT/any cycle/NN/cycle in/IN/in it/NNP/it. so/RB/so i/PRP/i am/VBP/am typically/RB/typically going/VBG/going to/TO/to use/VB/use n/NN/n to/TO/to denote/VB/denote the/DT/the number/NN/number of/IN/of vertices/NNS/vertices and/CC/and m/NN/m to/TO/to denote/VB/denote the/DT/the number/NN/number of/IN/of edges/NNS/edges in/IN/in any/DT/any graph/NNP/graph. so/RB/so what/WP/what is/VBZ/is the/DT/the complete/JJ/complete graph/NN/graph ?/./? a/DT/a complete/JJ/complete graph/NN/graph is/VBZ/is one/CD/one in/IN/in which/WDT/which there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices /,/, between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices there/EX/there is/VBZ/is an/DT/an edge/NNP/edge. this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a complete/JJ/complete graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24.41/CD/24.41 /CD/) this/DT/this is/VBZ/is a/DT/a graph/NN/graph on/IN/on 5/CD/5 vertices/NNS/vertices between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices there/EX/there is/VBZ/is an/DT/an edge/NNP/edge. so/RB/so how/WRB/how many/JJ/many edges/NNS/edges does/VBZ/does a/DT/a complete/JJ/complete graph/NN/graph have/VBP/have ?/./? nc2/NNP/nc2 /,/, because/IN/because there/EX/there are/VBP/are n22/NNP/n22 pairs/NNS/pairs of/IN/of vertices/NNS/vertices and/CC/and there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between every/DT/every pair/NN/pair and/CC/and so/RB/so you/PRP/you will/MD/will have/VB/have so/RB/so many/JJ/many edges/NNP/edges. how/WRB/how many/JJ/many edges/NNS/edges does/VBZ/does a/DT/a complete/JJ/complete directed/VBN/directed graph/NN/graph have/VBP/have ?/./? /:/[ student/NN/student /:/: three/CD/three by/IN/by two/CD/two two/CD/two /CD/] two/CD/two times/NNS/times nc2/NNP/nc2 a/DT/a directed/JJ/directed and/CC/and a/DT/a complete/NNP/complete. so/RB/so basically/RB/basically there/EX/there will/MD/will have/VB/have to/TO/to be/VB/be and/CC/and edge/VB/edge in/IN/in both/DT/both directions/NNS/directions right/RB/right so/RB/so it/PRP/it will/MD/will become/VB/become twice/NNP/twice. if/IN/if a/DT/a graph/NN/graph is/VBZ/is not/RB/not complete/JJ/complete then/RB/then the/DT/the number/NN/number of/IN/of edges/NNS/edges going/VBG/going to/TO/to be/VB/be strictly/RB/strictly less/JJR/less than/IN/than n/NN/n chose/NN/chose two/NNP/two. so/RB/so in/IN/in an/DT/an undirected/JJ/undirected graph/NN/graph this/DT/this is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of edges/NNS/edges that/WDT/that a/DT/a graph/NN/graph can/MD/can have/VB/have /,/, n/NN/n chose/VBD/chose two/CD/two /CD/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a graph/NN/graph on/IN/on n/NN/n vertices/NNS/vertices /,/, zero/NN/zero /,/, it/PRP/it might/MD/might not/RB/not have/VB/have any/DT/any edge/NN/edge at/IN/at all/NNP/all. so/RB/so the/DT/the minimum/JJ/minimum number/NN/number of/IN/of edges/NNS/edges in/IN/in a/DT/a graph/NN/graph on/IN/on n/NN/n vertices/NNS/vertices is/VBZ/is zero/CD/zero and/CC/and the/DT/the maximum/NN/maximum number/NN/number of/IN/of edges/NNS/edges is/VBZ/is n/VBN/n chose/NN/chose two/NNP/two. so/RB/so once/RB/once again/RB/again we/PRP/we have/VBP/have n/VBN/n number/NN/number of/IN/of vertices/NNS/vertices /,/, m/NN/m number/NN/number of/IN/of edges/NNP/edges. /NNP/[ student/NN/student /:/: minimum/JJ/minimum elements/NNS/elements connected/VBN/connected in/IN/in graph/NN/graph /:/] /./. that/IN/that ?/./? s/NNS/s the/DT/the slide/NN/slide /,/, suppose/NN/suppose in/IN/in a/DT/a tree/NN/tree so/IN/so what/WP/what is/VBZ/is a/DT/a tree/NN/tree ?/./? recall/NN/recall a/DT/a tree/NN/tree is/VBZ/is the/DT/the connected/VBN/connected graph/NN/graph which/WDT/which does/VBZ/does not/RB/not have/VB/have any/DT/any cycle/NN/cycle in/IN/in it/NNP/it. how/WRB/how many/JJ/many edges/NNS/edges are/VBP/are there/RB/there in/IN/in a/DT/a tree/NN/tree ?/./? i/PRP/i have/VBP/have said/VBN/said number/NN/number of/IN/of edges/NNS/edges in/IN/in the/DT/the tree/NN/tree is/VBZ/is n/VBN/n ?/./? 1/CD/1 /,/, why/WRB/why ?/./? /:/[ student/NN/student /:/: every/DT/every pair/NN/pair of/IN/of /NNP/] /NNP/[ student/NN/student /:/: start/NN/start from/IN/from a/DT/a node/NN/node and/CC/and we/PRP/we end/VBP/end and/CC/and we/PRP/we can/MD/can not/RB/not have/VB/have a/DT/a like/IN/like a/DT/a cycle/NN/cycle so/IN/so starting/VBG/starting /:/] so/RB/so /:/[ student/NN/student /:/: we/PRP/we can/MD/can have/VB/have about/IN/about one/CD/one two/CD/two one/CD/one two/CD/two two/CD/two three/CD/three after/IN/after and/CC/and the/DT/the number/NN/number of/IN/of edges/NNS/edges these/DT/these vertices/NNS/vertices two/CD/two /CD/] each/DT/each vertex/NN/vertex is/VBZ/is degree/JJ/degree two/NN/two. in/IN/in a/DT/a tree/NN/tree every/DT/every vertex/NN/vertex is/VBZ/is degree/JJ/degree two/CD/two /,/, no/NNP/no. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] /:/[ student/NN/student /:/: nodes/NNS/nodes we/PRP/we write/VBP/write a/DT/a so/RB/so that/IN/that will/MD/will be/VB/be n/VBN/n minus/NN/minus one/CD/one you/PRP/you can/MD/can ?/./? t/VB/t have/VBP/have repetition/NN/repetition sir/NN/sir we/PRP/we get/VBP/get we/PRP/we can/MD/can count/VB/count the/DT/the edges/NNS/edges by/IN/by /,/, we/PRP/we will/MD/will take/VB/take the/DT/the direction/NN/direction so/RB/so the/DT/the edge/NN/edge coming/VBG/coming to/TO/to a/DT/a node/NN/node is/VBZ/is one/CD/one /CD/] /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25.54/CD/25.54 /CD/) what/WP/what do/VBP/do you/PRP/you mean/VB/mean coming/VBG/coming to/TO/to a/DT/a node/NN/node ?/./? so/RB/so is/VBZ/is this/DT/this edge/NN/edge coming/VBG/coming into/IN/into this/DT/this node/NN/node or/CC/or this/DT/this edge/NN/edge coming/VBG/coming into/IN/into this/DT/this node/NN/node ?/./? /:/[ student/NN/student /:/: sir/NN/sir we/PRP/we take/VBP/take this/DT/this as/IN/as even/RB/even starting/VBG/starting from/IN/from if/IN/if you/PRP/you start/VBP/start from/IN/from any/DT/any particular/JJ/particular node/NN/node you/PRP/you don/VBP/don ?/./? t/NN/t have/VBP/have whether/IN/whether number/NN/number of/IN/of node/NN/node have/VBP/have to/TO/to have/VB/have a/DT/a /NN/] let/NN/let ?/./? s/NNS/s prove/VBP/prove this/NNP/this. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] it/PRP/it is/VBZ/is a/DT/a true/JJ/true statement/NN/statement /:/[ hindi/NN/hindi /:/] so/RB/so let/VB/let ?/./? s/NNS/s prove/VBP/prove that/IN/that so/RB/so what/WP/what will/MD/will be/VB/be the/DT/the proof/NN/proof ?/./? we/PRP/we have/VBP/have to/TO/to prove/VB/prove that/IN/that a/DT/a tree/NN/tree on/IN/on n/NN/n vertices/NNS/vertices has/VBZ/has n/VBN/n /:/- 1/CD/1 edges/NNS/edges /,/, induction/NN/induction /:/[ hindi/NN/hindi /:/] as/IN/as simple/JJ/simple as/IN/as that/NNP/that. so/RB/so proof/IN/proof by/IN/by induction/NN/induction /,/, so/RB/so what/WP/what should/MD/should be/VB/be the/DT/the base/NN/base case/NN/case ?/./? let/NN/let ?/./? s/NNS/s say/VBP/say n/NN/n equals/NNS/equals two/CD/two so/RB/so suppose/JJ/suppose i/PRP/i have/VBP/have a/DT/a connected/VBN/connected graph/NN/graph on/IN/on two/CD/two vertices/NNS/vertices /:/[ hindi/NN/hindi /:/] statement/NN/statement is/VBZ/is true/NNP/true. so/RB/so number/NN/number of/IN/of edges/NNS/edges equals/NNS/equals n/VBP/n /:/- 1/CD/1 equals/NNS/equals one/NNP/one. so/RB/so induction/NN/induction hypothesis/NN/hypothesis /:/[ hindi/NN/hindi /:/] statement/NN/statement true/NN/true for/IN/for all/DT/all n/NN/n less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k/VB/k let/NN/let ?/./? s/NNS/s say/NNP/say. so/RB/so now/RB/now the/DT/the induction/NN/induction step/NNP/step. so/RB/so given/VBN/given a/DT/a graph/NN/graph on/IN/on k/NN/k +/:/+ 1/CD/1 vertices/NNP/vertices. why/WRB/why should/MD/should this/DT/this have/VB/have k/NN/k edges/NNS/edges ?/./? /:/[ hindi/NN/hindi /:/] one/CD/one leaf/NN/leaf good/NNP/good. so/RB/so he/PRP/he is/VBZ/is saying/VBG/saying something/NN/something useful/NN/useful /,/, he/PRP/he is/VBZ/is saying/VBG/saying there/RB/there is/VBZ/is no/DT/no cycle/NN/cycle in/IN/in the/DT/the graph/NNP/graph. we/PRP/we have/VBP/have to/TO/to use/VB/use somewhere/RB/somewhere the/DT/the fact/NN/fact there/RB/there is/VBZ/is no/DT/no cycle/NN/cycle in/IN/in the/DT/the graph/NN/graph /:/[ hindi/NN/hindi /:/] /./. he/PRP/he says/VBZ/says that/IN/that there/EX/there has/VBZ/has to/TO/to be/VB/be one/CD/one leaf/NN/leaf /:/[ hindi/NN/hindi /:/] /:/[ student/NN/student /:/: degree/NN/degree one/CD/one /CD/] good/NNP/good. so/RB/so let/VB/let ?/./? s/NNS/s define/VBP/define a/DT/a leaf/NN/leaf /,/, now/RB/now as/IN/as a/DT/a vertex/NN/vertex /,/, a/DT/a leaf/NN/leaf is/VBZ/is a/DT/a vertex/NN/vertex of/IN/of degree/NN/degree one/NNP/one. so/RB/so his/PRP$/his claim/NN/claim is/VBZ/is that/IN/that given/VBN/given a/DT/a tree/NN/tree on/IN/on k/NN/k +/:/+ 1/CD/1 vertices/NNP/vertices. we/PRP/we are/VBP/are given/VBN/given a/DT/a tree/NN/tree /,/, we/PRP/we are/VBP/are proving/VBG/proving this/NNP/this. the/DT/the tree/NN/tree or/CC/or every/DT/every tree/NN/tree has/VBZ/has a/DT/a leaf/NN/leaf /:/[ hindi/NN/hindi /:/] so/RB/so maybe/RB/maybe we/PRP/we come/VBP/come back/RB/back to/TO/to one/CD/one of/IN/of the/DT/the vertices/NNS/vertices we/PRP/we have/VBP/have already/RB/already visited/VBN/visited /-NONE-/[ hindi/NN/hindi /:/] so/RB/so it/PRP/it is/VBZ/is not/RB/not a/DT/a tree/NN/tree /:/[ hindi/NN/hindi /:/] because/IN/because that/DT/that was/VBD/was a/DT/a leaf/NN/leaf /:/[ hindi/NN/hindi /:/] /./. /:/[ student/NN/student /:/: there/EX/there should/MD/should be/VB/be part/NN/part of/IN/of the/DT/the path/NN/path relating/VBG/relating these/DT/these vertices/NNS/vertices /:/] exactly/RB/exactly this/DT/this edge/NN/edge can/MD/can not/RB/not be/VB/be part/NN/part of/IN/of any/DT/any simple/JJ/simple path/NN/path between/IN/between any/DT/any two/CD/two vertices/NNS/vertices because/IN/because /CD/[ hindi/NN/hindi /:/] this/DT/this edge/NN/edge can/MD/can not/RB/not be/VB/be part/NN/part of/IN/of any/DT/any simple/JJ/simple path/NN/path and/CC/and so/RB/so even/RB/even after/IN/after i/PRP/i remove/VBP/remove this/DT/this edge/NN/edge and/CC/and this/DT/this vertex/NN/vertex this/DT/this there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNP/vertices. so/RB/so this/DT/this is/VBZ/is still/RB/still connected/VBN/connected /,/, this/DT/this is/VBZ/is connected/VBN/connected and/CC/and by/IN/by removing/NN/removing an/DT/an edge/NN/edge and/CC/and a/DT/a vertex/NN/vertex i/PRP/i can/MD/can not/RB/not create/VB/create a/DT/a cycle/NN/cycle /:/[ hindi/NN/hindi /:/] /./. i/PRP/i can/MD/can apply/VB/apply my/PRP$/my induction/NN/induction hypothesis/NN/hypothesis on/IN/on it/PRP/it so/RB/so /:/[ hindi/NN/hindi /:/] we/PRP/we have/VBP/have removed/VBN/removed only/RB/only one/CD/one vertex/NNP/vertex. so/RB/so this/DT/this is/VBZ/is a/DT/a tree/NN/tree on/IN/on k/NN/k vertices/NNS/vertices and/CC/and has/VBZ/has k/NN/k /:/- 1/CD/1 edges/NNS/edges /,/, this/DT/this is/VBZ/is by/IN/by induction/NN/induction hypothesis/NN/hypothesis /:/[ hindi/NN/hindi /:/] and/CC/and so/RB/so we/PRP/we prove/VBP/prove that/IN/that /-NONE-/[ hindi/VBP/hindi /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35.40/CD/35.40 /CD/) you/PRP/you have/VBP/have to/TO/to use/VB/use the/DT/the fact/NN/fact /,/, both/DT/both the/DT/the facts/NNS/facts are/VBP/are critical/JJ/critical that/IN/that it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected graph/NN/graph and/CC/and it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a cycle/NN/cycle in/IN/in it/NNP/it. otherwise/NN/otherwise you/PRP/you will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to argue/VB/argue that/IN/that it/PRP/it has/VBZ/has k/NN/k /:/- 1/CD/1 edges/NNS/edges /:/[ hindi/NN/hindi /:/] /./. that/IN/that ?/./? s/NNS/s the/DT/the proof/NN/proof for/IN/for this/DT/this /,/, everyone/NN/everyone follows/VBZ/follows this/NNP/this. most/RBS/most text/JJ/text books/NNS/books would/MD/would have/VB/have this/DT/this proof/NN/proof also/RB/also /,/, you/PRP/you can/MD/can also/RB/also go/VB/go back/RB/back and/CC/and and/CC/and look/VB/look at/IN/at one/CD/one of/IN/of the/DT/the text/NNP/text. so/RB/so if/IN/if the/DT/the number/NN/number of/IN/of edges/NNS/edges is/VBZ/is less/JJR/less than/IN/than n/NN/n /:/- 1/CD/1 in/IN/in a/DT/a graph/NN/graph then/RB/then the/DT/the graph/NN/graph can/MD/can not/RB/not be/VB/be connected/VBN/connected at/IN/at all/NNP/all. why/WRB/why ?/./? this/DT/this statement/NN/statement /,/, if/IN/if the/DT/the number/NN/number of/IN/of edges/NNS/edges is/VBZ/is less/JJR/less than/IN/than n/NN/n /:/- 1/CD/1 then/RB/then the/DT/the graph/NN/graph is/VBZ/is not/RB/not connected/VBN/connected proof/IN/proof by/IN/by contradiction/NNP/contradiction. suppose/NN/suppose if/IN/if it/PRP/it is/VBZ/is connected/VBN/connected then/RB/then so/RB/so let/VB/let ?/./? s/NNS/s follow/VBP/follow this/DT/this argument/NNP/argument. so/RB/so suppose/RB/suppose it/PRP/it is/VBZ/is connected/VBN/connected /,/, if/IN/if it/PRP/it is/VBZ/is connected/VBN/connected then/RB/then why/WRB/why is/VBZ/is it/PRP/it not/RB/not a/DT/a tree/NN/tree ?/./? it/PRP/it is/VBZ/is not/RB/not a/DT/a tree/NN/tree because/IN/because it/PRP/it has/VBZ/has a/DT/a cycle/NNP/cycle. so/RB/so let/VB/let ?/./? s/NNS/s take/VBP/take lets/NNS/lets remove/VBP/remove an/DT/an edge/NN/edge from/IN/from the/DT/the cycle/NN/cycle /:/[ hindi/NN/hindi /:/] i/PRP/i should/MD/should have/VB/have switched/VBN/switched but/CC/but okay/NN/okay so/IN/so what/WP/what what/WP/what are/VBP/are we/PRP/we trying/VBG/trying to/TO/to argue/VB/argue ?/./? if/IN/if number/NN/number of/IN/of edges/NNS/edges is/VBZ/is less/JJR/less than/IN/than n/NN/n /:/- 1/CD/1 then/RB/then g/JJ/g is/VBZ/is not/RB/not connected/NNP/connected. so/RB/so this/DT/this is/VBZ/is another/DT/another useful/JJ/useful thing/NN/thing to/TO/to remember/VB/remember that/IN/that suppose/DT/suppose i/PRP/i have/VBP/have a/DT/a cycle/NN/cycle /,/, g/NN/g is/VBZ/is a/DT/a graph/NNP/graph. suppose/NN/suppose i/PRP/i have/VBP/have a/DT/a graph/NN/graph in/IN/in which/WDT/which there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle /:/[ hindi/NN/hindi /:/] if/IN/if you/PRP/you have/VBP/have a/DT/a cycle/NN/cycle and/CC/and if/IN/if you/PRP/you remove/VBP/remove any/DT/any edge/NN/edge from/IN/from the/DT/the cycle/NN/cycle you/PRP/you can/MD/can not/RB/not make/VB/make the/DT/the graph/NN/graph disconnected/VBD/disconnected by/IN/by doing/NN/doing that/NNP/that. so/RB/so what/WP/what is/VBZ/is the/DT/the argument/NN/argument that/IN/that to/TO/to prove/VB/prove this/DT/this claim/NN/claim ?/./? if/IN/if suppose/NN/suppose i/PRP/i have/VBP/have a/DT/a graph/NN/graph on/IN/on less/JJR/less than/IN/than n/NN/n /:/- 1/CD/1 on/IN/on less/JJR/less than/IN/than n/NN/n /:/- 1/CD/1 which/WDT/which is/VBZ/is connected/NNP/connected. why/WRB/why it/PRP/it is/VBZ/is not/RB/not a/DT/a tree/NN/tree ?/./? it/PRP/it is/VBZ/is not/RB/not a/DT/a tree/NN/tree because/IN/because there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle in/IN/in let/NN/let me/PRP/me remove/VBP/remove an/DT/an edge/NN/edge from/IN/from the/DT/the cycle/NN/cycle i/PRP/i only/RB/only reduce/VB/reduce the/DT/the number/NN/number of/IN/of edges/NNS/edges and/CC/and it/PRP/it ?/./? s/NNS/s still/RB/still connected/NNP/connected. if/IN/if there/EX/there is/VBZ/is another/DT/another cycle/NN/cycle let/NN/let me/PRP/me still/RB/still remove/VBP/remove another/DT/another edge/NN/edge so/IN/so i/PRP/i will/MD/will only/RB/only get/VB/get less/JJR/less than/IN/than n/NN/n /:/- 1/CD/1 edges/NNS/edges and/CC/and the/DT/the graph/NN/graph will/MD/will remain/VB/remain connected/VBN/connected eventually/RB/eventually i/PRP/i will/MD/will get/VB/get a/DT/a tree/NN/tree after/IN/after removing/VBG/removing all/DT/all of/IN/of this/NNP/this. so/RB/so i/PRP/i am/VBP/am contradicting/VBG/contradicting the/DT/the earlier/JJR/earlier claim/NN/claim which/WDT/which says/VBZ/says that/IN/that any/DT/any tree/NN/tree has/VBZ/has to/TO/to have/VB/have exactly/RB/exactly n/VBN/n /:/- 1/CD/1 edges/NNS/edges in/IN/in it/NNP/it. it/PRP/it can/MD/can not/RB/not have/VB/have less/JJR/less than/IN/than n/NN/n /:/- 1/CD/1 edges/NNS/edges so/RB/so any/DT/any graph/NN/graph which/WDT/which has/VBZ/has less/JJR/less than/IN/than n/NN/n -1/-NONE-/-1 edges/VBZ/edges can/MD/can not/RB/not be/VB/be connected/VBN/connected /-NONE-/[ hindi/NN/hindi /:/] /./. is/VBZ/is there/RB/there something/NN/something that/WDT/that is/VBZ/is not/RB/not clear/JJ/clear ?/./? so/RB/so couple/RB/couple of/IN/of examples/NNS/examples n/VBP/n =/:/= 5/CD/5 /,/, m/NN/m =/:/= 4/CD/4 this/DT/this is/VBZ/is a/DT/a tree/NN/tree on/IN/on 5/CD/5 vertices/NNP/vertices. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40.46/CD/40.46 /CD/) it/PRP/it has/VBZ/has to/TO/to have/VB/have four/CD/four edges/NNS/edges /,/, this/DT/this is/VBZ/is a/DT/a graph/NN/graph on/IN/on 5/CD/5 vertices/NNS/vertices and/CC/and 3/CD/3 edges/NNS/edges and/CC/and it/PRP/it can/MD/can not/RB/not be/VB/be a/DT/a tree/NN/tree /,/, it/PRP/it can/MD/can not/RB/not be/VB/be a/DT/a connected/VBN/connected graph/NN/graph at/IN/at all/NNP/all. let/VB/let me/PRP/me ask/VB/ask you/PRP/you a/DT/a question/NN/question suppose/NN/suppose i/PRP/i have/VBP/have graph/JJ/graph on/IN/on n/NN/n vertices/NNS/vertices and/CC/and it/PRP/it has/VBZ/has n/VBN/n /:/- k/NN/k edges/NNS/edges n/VBP/n /:/- k/NN/k edges/NNP/edges. how/WRB/how many/JJ/many connected/VBN/connected components/NNS/components do/VBP/do you/PRP/you think/VB/think it/PRP/it has/VBZ/has ?/./? i/PRP/i have/VBP/have a/DT/a graph/NN/graph on/IN/on n/NN/n vertices/NNS/vertices and/CC/and n/NN/n /:/- k/NN/k edges/NNS/edges /,/, how/WRB/how many/JJ/many connected/VBN/connected components/NNS/components it/PRP/it has/VBZ/has ?/./? k/NN/k or/CC/or more/JJR/more /,/, k/NN/k when/WRB/when there/EX/there would/MD/would be/VB/be no/RB/no cycle/NN/cycle and/CC/and if/IN/if there/EX/there were/VBD/were cycles/NNS/cycles then/RB/then it/PRP/it could/MD/could have/VB/have more/JJR/more number/NN/number of/IN/of connected/VBN/connected components/NNS/components /,/, try/NN/try to/TO/to prove/VB/prove this/NNP/this. this/DT/this is/VBZ/is a/DT/a very/RB/very simple/JJ/simple exercise/NNP/exercise. so/RB/so a/DT/a given/VBN/given a/DT/a graph/NN/graph on/IN/on n/NN/n vertices/NNS/vertices and/CC/and n/NN/n /:/- k/NN/k edges/NNS/edges how/WRB/how many/JJ/many connected/VBN/connected components/NNS/components does/VBZ/does it/PRP/it have/VB/have ?/./? so/RB/so more/RBR/more terms/NNS/terms ;/:/; a/DT/a spanning/NN/spanning tree/NN/tree is/VBZ/is a/DT/a sub/NN/sub graph/NN/graph which/WDT/which means/VBZ/means you/PRP/you are/VBP/are given/VBN/given a/DT/a graph/NN/graph so/IN/so it/PRP/it is/VBZ/is a/DT/a sub/NN/sub graph/NN/graph of/IN/of a/DT/a graph/NN/graph and/CC/and this/DT/this sub/NN/sub graph/NN/graph has/VBZ/has to/TO/to be/VB/be a/DT/a tree/NN/tree and/CC/and it/PRP/it should/MD/should include/VB/include all/DT/all the/DT/the vertices/NNS/vertices of/IN/of the/DT/the graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42.13/CD/42.13 /CD/) so/RB/so spanning/VBG/spanning tree/NN/tree /:/[ hindi/NN/hindi /:/] tree/NN/tree which/WDT/which means/VBZ/means the/DT/the sub/NN/sub graph/NN/graph has/VBZ/has to/TO/to be/VB/be a/DT/a tree/NN/tree and/CC/and /CD/[ hindi/NN/hindi /:/] it/PRP/it should/MD/should include/VB/include everything/NN/everything ;/:/; include/NN/include everything/NN/everything here/RB/here means/VBZ/means include/VBP/include all/DT/all the/DT/the vertices/NNP/vertices. so/RB/so as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this sub/NN/sub graph/NN/graph includes/VBZ/includes all/DT/all the/DT/the 4/CD/4 3/CD/3 7/CD/7 and/CC/and 3/CD/3 10/CD/10 13/CD/13 vertices/NNS/vertices that/WDT/that are/VBP/are there/RB/there and/CC/and it/PRP/it is/VBZ/is a/DT/a tree/NNP/tree. there/RB/there is/VBZ/is no/DT/no cycle/NN/cycle here/RB/here so/RB/so this/DT/this is/VBZ/is the/DT/the spanning/NN/spanning tree/NN/tree of/IN/of this/DT/this graph/NN/graph /,/, this/DT/this is/VBZ/is the/DT/the graph/NN/graph and/CC/and this/DT/this is/VBZ/is the/DT/the spanning/NN/spanning tree/NN/tree of/IN/of this/DT/this graph/NNP/graph. g/NN/g has/VBZ/has to/TO/to be/VB/be connected/VBN/connected if/IN/if g/NN/g is/VBZ/is not/RB/not connected/VBN/connected then/RB/then there/RB/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of the/DT/the spanning/NN/spanning tree/NNP/tree. if/IN/if g/NN/g is/VBZ/is not/RB/not connected/VBN/connected then/RB/then no/DT/no sub/NN/sub graph/NN/graph of/IN/of the/DT/the graph/NN/graph of/IN/of g/NN/g can/MD/can not/RB/not be/VB/be a/DT/a spanning/NN/spanning tree/NN/tree /:/[ hindi/NN/hindi /:/] /./. so/RB/so this/DT/this is/VBZ/is a/DT/a useful/JJ/useful thing/NN/thing to/TO/to have/VB/have /,/, quite/RB/quite often/RB/often your/PRP$/your network/NN/network could/MD/could be/VB/be a/DT/a just/RB/just spanning/VBG/spanning tree/NNP/tree. suppose/NN/suppose these/DT/these are/VBP/are points/NNS/points i/PRP/i want/VBP/want to/TO/to connect/VB/connect so/RB/so these/DT/these are/VBP/are cities/NNS/cities /,/, these/DT/these are/VBP/are possible/JJ/possible roads/NNS/roads that/WDT/that i/PRP/i can/MD/can build/VB/build but/CC/but i/PRP/i just/RB/just want/VBP/want to/TO/to put/VB/put the/DT/the minimum/JJ/minimum amount/NN/amount of/IN/of effort/NN/effort /,/, i/PRP/i want/VBP/want to/TO/to build/VB/build has/VBZ/has few/JJ/few roads/NNS/roads as/IN/as possible/JJ/possible so/IN/so that/IN/that all/DT/all these/DT/these cities/NNS/cities are/VBP/are still/RB/still connected/VBN/connected so/RB/so i/PRP/i could/MD/could built/VB/built a/DT/a spanning/NN/spanning tree/NN/tree but/CC/but this/DT/this does/VBZ/does not/RB/not provide/VB/provide you/PRP/you any/DT/any fault/NN/fault tolerance/NN/tolerance what/WP/what does/VBZ/does that/IN/that mean/JJ/mean /NN/[ hindi/NN/hindi /:/] you/PRP/you can/MD/can not/RB/not reach/VB/reach from/IN/from some/DT/some city/NN/city to/TO/to some/DT/some other/JJ/other city/NN/city now/NNP/now. as/IN/as you/PRP/you can/MD/can see/VB/see if/IN/if i/PRP/i cut/VBP/cut of/IN/of this/DT/this link/NN/link then/RB/then these/DT/these 4/CD/4 vertices/NNS/vertices would/MD/would be/VB/be disconnected/VBN/disconnected from/IN/from the/DT/the other/JJ/other 8/CD/8 vertices/NNS/vertices /:/[ hindi/NN/hindi /:/] these/DT/these 6/CD/6 vertices/NNS/vertices would/MD/would be/VB/be disconnected/VBN/disconnected from/IN/from the/DT/the other/JJ/other 7/CD/7. spanning/VBG/spanning tree/NN/tree is/VBZ/is a/DT/a useful/JJ/useful but/CC/but they/PRP/they provide/VBP/provide don/JJ/don ?/./? t/NN/t provide/VB/provide much/JJ/much fault/NN/fault tolerance/NNP/tolerance. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44.43/CD/44.43 /CD/) let/NN/let ?/./? s/NNS/s talk/VBP/talk about/IN/about bridges/NNP/bridges. koenigsberg/NN/koenigsberg /,/, this/DT/this is/VBZ/is a/DT/a city/NN/city in/IN/in germany/NN/germany or/CC/or austria/NNS/austria i/PRP/i don/VBP/don ?/./? t/NN/t remember/NN/remember where/NNP/where. so/RB/so pragal/JJ/pragal river/NN/river okay/NN/okay i/PRP/i don/VBP/don ?/./? t/NN/t remember/NN/remember where/WRB/where this/DT/this is/NNP/is. this/DT/this city/NN/city has/VBZ/has this/DT/this nice/JJ/nice thing/NN/thing /,/, there/EX/there is/VBZ/is a/DT/a river/NN/river flowing/VBG/flowing through/IN/through the/DT/the city/NN/city and/CC/and there/EX/there is/VBZ/is an/DT/an island/NN/island in/IN/in the/DT/the river/NN/river and/CC/and there/EX/there are/VBP/are bridges/NNS/bridges in/IN/in this/DT/this manner/NN/manner so/IN/so a/DT/a is/VBZ/is this/DT/this island/NN/island and/CC/and there/EX/there is/VBZ/is a/DT/a bridge/NN/bridge from/IN/from here/RB/here to/TO/to here/RB/here /,/, here/RB/here so/RB/so there/RB/there are/VBP/are 7/CD/7 bridges/NNS/bridges in/IN/in all/NNP/all. this/DT/this black/NN/black bar/NN/bar are/VBP/are the/DT/the edges/NNS/edges so/RB/so question/NN/question is/VBZ/is can/MD/can you/PRP/you start/VB/start from/IN/from here/RB/here let/VB/let ?/./? s/NNS/s say/VBP/say or/CC/or any/DT/any point/NNP/point. so/RB/so can/MD/can one/CD/one across/NNS/across each/DT/each bridge/NN/bridge exactly/RB/exactly once/RB/once and/CC/and return/NN/return to/TO/to the/DT/the starting/NN/starting point/NNP/point. why/WRB/why no/DT/no /,/, so/RB/so suppose/RB/suppose i/PRP/i start/VBP/start from/IN/from here/RB/here i/PRP/i can/MD/can take/VB/take this/DT/this bridge/NN/bridge go/VBP/go here/RB/here /:/[ student/NN/student /:/: it/PRP/it will/MD/will land/VB/land up/RP/up /CD/] and/CC/and you/PRP/you can/MD/can go/VB/go on/IN/on land/NN/land up/IN/up /CD/[ hindi/NN/hindi /:/] so/RB/so on/IN/on and/CC/and see/NNP/see. let/VB/let ?/./? s/NNS/s see/VBP/see whether/IN/whether we/PRP/we can/MD/can solve/VB/solve this/DT/this problem/NN/problem or/CC/or not/RB/not ?/./? suppose/RB/suppose this/DT/this would/MD/would have/VB/have been/VBN/been useful/JJ/useful if/IN/if you/PRP/you were/VBD/were a/DT/a postmen/VBN/postmen who/WP/who had/VBD/had to/TO/to visit/VB/visit the/DT/the various/JJ/various brides/NNS/brides and/CC/and you/PRP/you did/VBD/did not/RB/not want/VB/want to/TO/to retrace/VB/retrace the/DT/the steps/NNP/steps. so/RB/so this/DT/this is/VBZ/is also/RB/also known/VBN/known as/IN/as koenigsberg/NN/koenigsberg problem/NN/problem and/CC/and euler/NN/euler proved/VBD/proved that/IN/that this/DT/this is/VBZ/is not/RB/not a/DT/a problem/NN/problem and/CC/and we/PRP/we will/MD/will give/VB/give a/DT/a simple/JJ/simple proof/NN/proof for/IN/for that/DT/that one/NNP/one. so/RB/so we/PRP/we can/MD/can model/VB/model this/DT/this thing/NN/thing as/IN/as a/DT/a graph/NN/graph /,/, there/EX/there is/VBZ/is this/DT/this island/NN/island a/DT/a so/RB/so these/DT/these are/VBP/are the/DT/the going/VBG/going to/TO/to be/VB/be the/DT/the vertices/NNS/vertices of/IN/of my/PRP$/my graph/NNP/graph. this/DT/this island/NN/island a/DT/a this/DT/this is/VBZ/is one/CD/one piece/NN/piece of/IN/of land/NN/land and/CC/and there/EX/there is/VBZ/is this/DT/this part/NN/part b/NN/b because/IN/because i/PRP/i can/MD/can go/VB/go from/IN/from anywhere/RB/anywhere to/TO/to here/NNP/here. this/DT/this is/VBZ/is one/CD/one vertex/NN/vertex /,/, there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex d/NN/d and/CC/and there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex c/NN/c which/WDT/which is/VBZ/is this/DT/this part/NNP/part. so/RB/so i/PRP/i will/MD/will have/VB/have a/DT/a graph/NN/graph with/IN/with 4/CD/4 vertices/NNS/vertices in/IN/in it/PRP/it a/DT/a b/NN/b c/NN/c d/NN/d and/CC/and then/RB/then depending/VBG/depending upon/IN/upon so/RB/so since/IN/since there/EX/there is/VBZ/is a/DT/a bridge/NN/bridge from/IN/from b/NN/b to/TO/to a/NNP/a. in/IN/in fact/NN/fact there/EX/there are/VBP/are two/CD/two bridges/NNS/bridges from/IN/from b/NN/b to/TO/to a/DT/a so/RB/so i/PRP/i will/MD/will put/VB/put two/CD/two edges/NNS/edges between/IN/between b/NN/b and/CC/and a/NNP/a. similarly/RB/similarly there/RB/there are/VBP/are two/CD/two bridges/NNS/bridges between/IN/between a/DT/a and/CC/and c/NN/c so/IN/so i/PRP/i will/MD/will put/VB/put two/CD/two edges/NNS/edges between/IN/between a/DT/a and/CC/and c/NNP/c. there/RB/there is/VBZ/is one/CD/one bridge/NN/bridge from/IN/from a/DT/a to/TO/to d/VB/d so/RB/so i/PRP/i will/MD/will put/VB/put one/CD/one edge/NN/edge between/IN/between a/DT/a and/CC/and d/NN/d /,/, there/EX/there is/VBZ/is an/DT/an bridge/NN/bridge between/IN/between d/NN/d and/CC/and b/NN/b so/IN/so i/PRP/i will/MD/will put/VB/put one/CD/one edge/NN/edge between/IN/between b/NN/b and/CC/and d/VBD/d and/CC/and an/DT/an edge/NN/edge between/IN/between c/NN/c and/CC/and b/NN/b so/IN/so i/PRP/i will/MD/will get/NNP/get. this/DT/this is/VBZ/is not/RB/not a/DT/a graph/NNP/graph. why/WRB/why is/VBZ/is this/DT/this not/RB/not a/DT/a graph/NN/graph ?/./? because/IN/because we/PRP/we did/VBD/did not/RB/not define/VB/define a/DT/a notion/NN/notion of/IN/of two/CD/two edges/NNS/edges between/IN/between pair/JJ/pair of/IN/of vertices/NNS/vertices /,/, we/PRP/we just/RB/just talked/VBD/talked about/IN/about pair/JJ/pair of/IN/of vertices/NNP/vertices. the/DT/the edges/NNS/edges don/VBP/don ?/./? t/NN/t form/NN/form a/DT/a set/NN/set /,/, they/PRP/they form/VBP/form a/DT/a multi/NN/multi set/NN/set so/RB/so this/DT/this is/VBZ/is called/VBN/called multi/NN/multi graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48.43/CD/48.43 /CD/) what/WP/what is/VBZ/is a/DT/a multi-graph/JJ/multi-graph ?/./? in/IN/in which/WDT/which they/PRP/they put/VBD/put the/DT/the many/JJ/many edges/NNS/edges between/IN/between a/DT/a pair/NN/pair of/IN/of vertices/NNS/vertices is/VBZ/is called/VBN/called a/DT/a multi/NN/multi graph/NN/graph but/CC/but this/DT/this captures/NNS/captures that/IN/that problem/NN/problem in/IN/in certain/JJ/certain sets/NNP/sets. so/RB/so eulerian/JJ/eulerian tour/NN/tour is/VBZ/is a/DT/a path/NN/path that/WDT/that traverse/NN/traverse every/DT/every edge/NN/edge exactly/RB/exactly once/RB/once and/CC/and returns/NNS/returns to/TO/to the/DT/the first/JJ/first vertex/NN/vertex and/CC/and that/IN/that ?/./? s/NNS/s exactly/RB/exactly what/WP/what we/PRP/we want/VBP/want to/TO/to do/NNP/do. because/IN/because these/DT/these are/VBP/are the/DT/the bridges/NNS/bridges so/RB/so we/PRP/we want/VBP/want to/TO/to traverse/VB/traverse each/DT/each bridge/NN/bridge exactly/RB/exactly once/RB/once and/CC/and return/NN/return to/TO/to the/DT/the starting/NN/starting vertex/NNP/vertex. can/MD/can you/PRP/you do/VB/do that/DT/that on/IN/on this/DT/this graph/NN/graph ?/./? so/RB/so same/JJ/same problem/NN/problem can/MD/can now/RB/now be/VB/be thought/VBN/thought of/IN/of here/RB/here /,/, can/MD/can is/VBZ/is start/VB/start from/IN/from a/DT/a and/CC/and come/NN/come back/RB/back to/TO/to a/DT/a and/CC/and and/CC/and visit/NN/visit each/DT/each or/CC/or traverse/NN/traverse each/DT/each exactly/RB/exactly once/NNP/once. so/RB/so the/DT/the same/JJ/same question/NN/question a/DT/a same/JJ/same /,/, can/MD/can you/PRP/you draw/VB/draw this/DT/this picture/NN/picture without/IN/without lifting/NN/lifting your/PRP$/your pencil/NN/pencil or/CC/or redrawing/VBG/redrawing an/DT/an edge/NN/edge /,/, you/PRP/you know/VBP/know coming/VBG/coming back/RB/back over/IN/over a/DT/a line/NN/line twice/NNP/twice. so/RB/so /:/[ hindi/NN/hindi /:/] euler/NN/euler theorem/NN/theorem says/VBZ/says that/IN/that you/PRP/you can/MD/can do/VB/do this/DT/this if/IN/if and/CC/and only/RB/only if/IN/if every/DT/every vertex/NN/vertex has/VBZ/has even/RB/even degree/JJ/degree /NN/[ hindi/NN/hindi /:/] /./. when/WRB/when you/PRP/you come/VBP/come to/TO/to a/DT/a vertex/NN/vertex /,/, you/PRP/you come/VBP/come by/IN/by one/CD/one edge/NN/edge and/CC/and then/RB/then you/PRP/you have/VB/have to/TO/to go/VB/go by/IN/by another/DT/another edge/NN/edge and/CC/and if/IN/if you/PRP/you come/VBP/come again/RB/again then/RB/then you/PRP/you will/MD/will need/VB/need another/DT/another edge/NN/edge to/TO/to or/CC/or fresh/JJ/fresh edge/NN/edge to/TO/to go/VB/go off/RP/off by/IN/by so/RB/so every/DT/every vertex/NN/vertex has/VBZ/has to/TO/to have/VB/have an/DT/an even/RB/even degree/JJ/degree for/IN/for this/DT/this to/TO/to work/VB/work but/CC/but here/RB/here there/EX/there are/VBP/are all/DT/all vertices/NNS/vertices of/IN/of odd/JJ/odd degrees/NNS/degrees so/IN/so clearly/RB/clearly this/DT/this can/MD/can not/RB/not be/VB/be done/NNP/done. now/RB/now let/VB/let ?/./? s/NNS/s quickly/RB/quickly do/VBP/do the/DT/the uninteresting/VBG/uninteresting part/NN/part /,/, the/DT/the abstract/NN/abstract data/NNS/data type/NNP/type. the/DT/the graph/NN/graph can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a container/NN/container of/IN/of positions/NNP/positions. so/RB/so you/PRP/you have/VB/have the/DT/the regular/JJ/regular methods/NNS/methods for/IN/for any/DT/any positional/JJ/positional container/NN/container like/IN/like queues/NNS/queues and/CC/and stacks/NNP/stacks. we/PRP/we always/RB/always had/VBD/had this/DT/this methods/NNS/methods called/VBD/called size/NN/size and/CC/and is/VBZ/is empty/JJ/empty and/CC/and elements/NNS/elements ;/:/; elements/NNS/elements would/MD/would return/VB/return all/DT/all the/DT/the vertices/NNS/vertices and/CC/and the/DT/the edges/NNS/edges that/WDT/that ?/./? s/VBZ/s in/IN/in and/CC/and you/PRP/you can/MD/can have/VB/have some/DT/some methods/NNS/methods like/IN/like swap/NN/swap which/WDT/which can/MD/can swap/VB/swap two/CD/two positions/NNS/positions replaceelement/NN/replaceelement those/DT/those kind/NN/kind of/IN/of thing/NN/thing /,/, these/DT/these are/VBP/are methods/NNS/methods associated/VBN/associated with/IN/with the/DT/the regular/JJ/regular positional/JJ/positional container/NN/container swap/NN/swap is/VBZ/is the/DT/the generic/JJ/generic method/NN/method for/IN/for any/DT/any positional/JJ/positional container/NNP/container. when/WRB/when you/PRP/you are/VBP/are saying/VBG/saying that/IN/that provide/NN/provide two/CD/two positions/NNS/positions and/CC/and swap/NN/swap the/DT/the contents/NNS/contents at/IN/at those/DT/those two/CD/two positions/NNS/positions that/WDT/that ?/./? s/VBZ/s the/DT/the swap/NN/swap method/NNP/method. so/RB/so here/RB/here i/PRP/i am/VBP/am not/RB/not saying/VBG/saying it/PRP/it specifically/RB/specifically to/TO/to the/DT/the graph/NN/graph abstract/NN/abstract data/NNS/data type/NN/type /,/, you/PRP/you will/MD/will have/VB/have to/TO/to think/VB/think of/IN/of what/WP/what it/PRP/it would/MD/would mean/VB/mean. so/RB/so you/PRP/you could/MD/could decide/VB/decide what/WP/what it/PRP/it means/VBZ/means here/RB/here for/IN/for this/DT/this particular/JJ/particular data/NNS/data type/NN/type but/CC/but i/PRP/i am/VBP/am saying/VBG/saying it/PRP/it is/VBZ/is a/DT/a generic/JJ/generic methods/NNP/methods. these/DT/these are/VBP/are all/DT/all generic/JJ/generic methods/NNS/methods for/IN/for positional/JJ/positional container/NN/container and/CC/and i/PRP/i am/VBP/am just/RB/just saying/VBG/saying in/IN/in that/DT/that context/NNP/context. so/RB/so here/RB/here i/PRP/i have/VBP/have methods/NNS/methods which/WDT/which are/VBP/are specific/JJ/specific to/TO/to graphs/NNS/graphs so/RB/so numvertices/NNS/numvertices would/MD/would be/VB/be a/DT/a method/NN/method which/WDT/which returns/NNS/returns number/VBP/number of/IN/of vertices/NNS/vertices numedges/NNS/numedges number/NN/number of/IN/of edges/NNS/edges vertices/NNS/vertices would/MD/would know/VB/know be/VB/be an/DT/an enumeration/NN/enumeration of/IN/of all/DT/all the/DT/the vertices/NNP/vertices. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51.05/CD/51.05 /CD/) so/RB/so it/PRP/it would/MD/would be/VB/be a/DT/a method/NN/method returns/NNS/returns an/DT/an iterator/NN/iterator which/WDT/which will/MD/will let/VB/let you/PRP/you iterate/VB/iterate through/IN/through the/DT/the various/JJ/various vertices/NNS/vertices of/IN/of the/DT/the graph/NN/graph /,/, edges/NNS/edges could/MD/could be/VB/be a/DT/a method/NN/method which/WDT/which returns/NNS/returns all/DT/all the/DT/the edges/NNP/edges. directededges/VBZ/directededges would/MD/would be/VB/be a/DT/a method/NN/method if/IN/if you/PRP/you had/VBD/had a/DT/a directed/VBN/directed graph/NN/graph /,/, it/PRP/it would/MD/would return/VB/return all/DT/all the/DT/the enumerated/VBN/enumerated all/DT/all the/DT/the directed/VBN/directed edges/NNS/edges in/IN/in the/DT/the graph/NNP/graph. what/WP/what does/VBZ/does enumerator/NN/enumerator do/VB/do and/CC/and an/DT/an iterator/NN/iterator ?/./? it/PRP/it basically/RB/basically returns/VBZ/returns an/DT/an object/NN/object which/WDT/which has/VBZ/has two/CD/two methods/NNS/methods associated/VBN/associated with/IN/with it/PRP/it /,/, one/CD/one method/NN/method is/VBZ/is next/JJ/next and/CC/and the/DT/the other/JJ/other method/NN/method is/VBZ/is whether/IN/whether there/EX/there is/VBZ/is anything/NN/anything left/VBN/left /,/, has/VBZ/has next/JJ/next whether/IN/whether there/EX/there is/VBZ/is a/DT/a next/JJ/next method/NN/method next/IN/next element/NN/element at/IN/at all/DT/all or/CC/or not/NNP/not. so/RB/so as/IN/as you/PRP/you every/DT/every time/NN/time you/PRP/you call/VBP/call next/JJ/next it/PRP/it gives/VBZ/gives you/PRP/you a/DT/a next/JJ/next object/NN/object in/IN/in the/DT/the enumeration/NN/enumeration so/RB/so when/WRB/when you/PRP/you are/VBP/are enumerating/VBG/enumerating edges/NNS/edges i/PRP/i call/VBP/call next/JJ/next once/NN/once it/PRP/it will/MD/will give/VB/give me/PRP/me one/CD/one edge/NN/edge /,/, when/WRB/when i/PRP/i call/VBP/call next/JJ/next again/NN/again it/PRP/it will/MD/will give/VB/give me/PRP/me another/DT/another edge/NNP/edge. what/WP/what order/NN/order this/DT/this edge/NN/edge is/VBZ/is come/VBN/come in/IN/in that/DT/that you/PRP/you typically/RB/typically do/VBP/do not/RB/not know/NNP/know. it/PRP/it depends/VBZ/depends upon/IN/upon how/WRB/how you/PRP/you implemented/VBD/implemented the/DT/the iterator/NNP/iterator. undirectededges/VBZ/undirectededges could/MD/could similarly/RB/similarly enumerate/VB/enumerate all/DT/all the/DT/the undirected/VBN/undirected edges/NNS/edges incident/NN/incident edges/NNS/edges /,/, if/IN/if i/PRP/i specify/VBP/specify a/DT/a vertex/NN/vertex it/PRP/it would/MD/would enumerate/VB/enumerate all/DT/all the/DT/the edges/NNS/edges incident/NN/incident at/IN/at that/DT/that vertex/NNP/vertex. this/DT/this is/VBZ/is for/IN/for an/DT/an undirected/JJ/undirected graph/NN/graph incident/NN/incident edges/NNS/edges ;/:/; for/IN/for a/DT/a directed/JJ/directed graph/NN/graph right/RB/right there/EX/there are/VBP/are two/CD/two kinds/NNS/kinds of/IN/of edges/NNS/edges either/CC/either there/EX/there would/MD/would be/VB/be edges/NNS/edges which/WDT/which start/NN/start from/IN/from this/DT/this vertex/NN/vertex or/CC/or there/EX/there would/MD/would be/VB/be vertex/NN/vertex which/WDT/which end/NN/end at/IN/at this/DT/this vertex/NNP/vertex. so/RB/so it/PRP/it could/MD/could have/VB/have a/DT/a notion/NN/notion of/IN/of any/DT/any incident/NN/incident edges/NNS/edges which/WDT/which are/VBP/are edges/NNS/edges entering/VBG/entering a/DT/a vertexv/NN/vertexv which/WDT/which are/VBP/are ending/VBG/ending at/IN/at vertex/NN/vertex v/NN/v and/CC/and you/PRP/you could/MD/could have/VB/have an/DT/an out/RP/out incident/NN/incident edges/NNS/edges which/WDT/which are/VBP/are edges/NNS/edges which/WDT/which are/VBP/are starting/VBG/starting from/IN/from vertex/NN/vertex v/NN/v going/VBG/going out/RP/out of/IN/of vertex/NN/vertex /,/, opposite/NNP/opposite. so/RB/so i/PRP/i specify/VBP/specify an/DT/an edge/NN/edge e/NN/e /,/, all/DT/all of/IN/of these/DT/these are/VBP/are objects/NNS/objects an/DT/an edge/NN/edge is/VBZ/is also/RB/also an/DT/an object/NN/object and/CC/and i/PRP/i specify/VBP/specify one/CD/one end/NN/end point/NN/point on/IN/on the/DT/the edge/NN/edge so/RB/so this/DT/this method/NN/method gives/VBZ/gives me/PRP/me the/DT/the other/JJ/other end/NN/end point/NN/point of/IN/of that/DT/that edge/NNP/edge. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53.24/CD/53.24 /CD/) degree/CD/degree gives/NNS/gives me/PRP/me the/DT/the degree/NN/degree of/IN/of the/DT/the vertex/NN/vertex /,/, indegree/JJ/indegree so/RB/so degree/JJ/degree would/MD/would be/VB/be for/IN/for an/DT/an undirected/JJ/undirected graph/NN/graph /,/, for/IN/for a/DT/a directed/JJ/directed graph/NN/graph there/EX/there would/MD/would be/VB/be the/DT/the notion/NN/notion of/IN/of in/IN/in degree/NN/degree and/CC/and an/DT/an outdegree/NNP/outdegree. indegree/NN/indegree would/MD/would be/VB/be n/VBN/n number/NN/number of/IN/of edges/NNS/edges coming/VBG/coming into/IN/into the/DT/the vertex/NN/vertex outdegree/NN/outdegree would/MD/would be/VB/be the/DT/the number/NN/number of/IN/of edges/NNS/edges leaving/VBG/leaving the/DT/the vertex/NNP/vertex. similarly/RB/similarly i/PRP/i could/MD/could have/VB/have adjacent/NN/adjacent vertices/NNS/vertices /,/, adjacent/NN/adjacent vertices/NNS/vertices would/MD/would be/VB/be a/DT/a method/NN/method which/WDT/which will/MD/will turns/VBZ/turns an/DT/an iterator/NN/iterator over/IN/over all/DT/all the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to this/DT/this particular/JJ/particular vertex/NNP/vertex. this/DT/this would/MD/would be/VB/be for/IN/for the/DT/the undirected/VBN/undirected graph/NN/graph /,/, for/IN/for a/DT/a directed/JJ/directed graph/NN/graph you/PRP/you could/MD/could similarly/RB/similarly have/VB/have a/DT/a notion/NN/notion of/IN/of inadjacent/NN/inadjacent and/CC/and an/DT/an outadjacentvertices/NNP/outadjacentvertices. then/RB/then you/PRP/you could/MD/could have/VB/have a/DT/a method/NN/method areadjacent/NN/areadjacent whether/IN/whether vertices/NNS/vertices two/CD/two vertices/NNS/vertices v/NN/v and/CC/and w/NN/w are/VBP/are adjacent/JJ/adjacent or/CC/or not/NNP/not. so/RB/so this/DT/this would/MD/would be/VB/be return/NN/return a/DT/a boolean/NN/boolean value/NN/value ;/:/; endvertices/NNS/endvertices given/VBN/given an/DT/an edge/NN/edge it/PRP/it will/MD/will return/VB/return the/DT/the two/CD/two end/NN/end points/NNS/points of/IN/of that/DT/that edge/NNP/edge. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53.31/CD/53.31 /CD/) origin/NN/origin /,/, for/IN/for a/DT/a directed/JJ/directed edge/NN/edge e/NN/e it/PRP/it would/MD/would return/VB/return where/WRB/where the/DT/the edge/NN/edge is/VBZ/is starting/VBG/starting from/IN/from /,/, destination/NN/destination for/IN/for a/DT/a directed/JJ/directed edge/NN/edge e/NN/e it/PRP/it would/MD/would return/VB/return where/WRB/where the/DT/the edge/NN/edge is/VBZ/is ending/NNP/ending. given/VBN/given an/DT/an edge/NN/edge e/NN/e it/PRP/it will/MD/will tell/VB/tell whether/IN/whether it/PRP/it is/VBZ/is directed/VBN/directed or/CC/or not/NNP/not. this/DT/this method/NN/method would/MD/would be/VB/be useful/JJ/useful when/WRB/when you/PRP/you have/VBP/have /,/, what/WP/what are/VBP/are called/VBN/called mixed/VBN/mixed graphs/NNS/graphs /,/, mixed/VBN/mixed graphs/NNS/graphs some/DT/some edges/NNS/edges are/VBP/are directed/VBN/directed and/CC/and some/DT/some are/VBP/are undirected/NNP/undirected. can/MD/can you/PRP/you give/VB/give me/PRP/me a/DT/a setting/VBG/setting where/WRB/where it/PRP/it would/MD/would be/VB/be useful/JJ/useful to/TO/to have/VB/have a/DT/a mixed/VBN/mixed graph/NN/graph /,/, what/WP/what kind/NN/kind of/IN/of a/DT/a problem/NN/problem setting/VBG/setting can/MD/can you/PRP/you imagine/VB/imagine there/EX/there ?/./? it/PRP/it would/MD/would be/VB/be natural/JJ/natural to/TO/to have/VB/have a/DT/a /NN/[ student/NN/student /:/: roads/NNS/roads /VBP/] roads/NNS/roads /,/, traffic/JJ/traffic network/NN/network once/RB/once again/RB/again where/WRB/where you/PRP/you have/VBP/have some/DT/some roads/NNS/roads are/VBP/are one/CD/one ways/NNP/ways. so/RB/so you/PRP/you are/VBP/are bi/PRP/bi directed/VBD/directed edges/NNS/edges /,/, roads/NNS/roads which/WDT/which are/VBP/are two/CD/two way/NN/way could/MD/could be/VB/be undirected/VBN/undirected edges/NNS/edges and/CC/and roads/NNS/roads which/WDT/which are/VBP/are only/RB/only one/CD/one way/NN/way could/MD/could be/VB/be directed/VBN/directed edges/-NONE-/edges. there/RB/there such/JJ/such a/DT/a methods/NNS/methods could/MD/could be/VB/be useful/JJ/useful because/IN/because given/VBN/given an/DT/an edge/NN/edge you/PRP/you can/MD/can then/RB/then determine/VB/determine whether/IN/whether it/PRP/it is/VBZ/is a/DT/a directed/VBN/directed edge/NN/edge or/CC/or an/DT/an undirected/JJ/undirected edge/NNP/edge. i/PRP/i will/MD/will just/RB/just take/VB/take /,/, i/PRP/i guess/VBP/guess this/DT/this is/VBZ/is last/JJ/last slide/NN/slide yes/NNS/yes it/PRP/it is/NNP/is. make/VBP/make undirected/VBN/undirected e/NN/e /,/, so/RB/so you/PRP/you are/VBP/are given/VBN/given edge/NN/edge and/CC/and you/PRP/you set/VBD/set it/PRP/it to/TO/to be/VB/be an/DT/an undirected/VBN/undirected edge/NNP/edge. you/PRP/you can/MD/can have/VB/have a/DT/a method/NN/method which/WDT/which reverses/NNS/reverses the/DT/the direction/NN/direction so/RB/so you/PRP/you can/MD/can have/VB/have tonnes/NNS/tonnes and/CC/and tonnes/NNS/tonnes of/IN/of update/JJ/update method/NN/method also/NNP/also. you/PRP/you can/MD/can have/VB/have methods/NNS/methods to/TO/to create/VB/create the/DT/the graph/NN/graph /,/, change/NN/change remove/NN/remove an/DT/an edge/NN/edge /,/, remove/VBP/remove a/DT/a vertex/NN/vertex do/VBP/do whatever/RB/whatever you/PRP/you want/NNP/want. so/RB/so set/VBN/set direction/NN/direction from/IN/from /,/, so/RB/so you/PRP/you can/MD/can set/VB/set the/DT/the direction/NN/direction of/IN/of an/DT/an edge/NN/edge suitably/RB/suitably we/PRP/we just/RB/just look/VBP/look through/IN/through this/DT/this these/DT/these slides/VBZ/slides that/IN/that i/PRP/i have/VBP/have given/NNP/given. so/RB/so this/DT/this is/VBZ/is just/RB/just a/DT/a subset/NN/subset of/IN/of method/NN/method depending/VBG/depending upon/IN/upon what/WP/what application/NN/application you/PRP/you have/VB/have /,/, you/PRP/you could/MD/could design/VB/design your/PRP$/your own/JJ/own set/NN/set of/IN/of methods/NNP/methods. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55.50/CD/55.50 /CD/) so/RB/so graph/JJ/graph can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as data/NNS/data type/NN/type /,/, is/VBZ/is an/DT/an abstract/NN/abstract datatype/NN/datatype on/IN/on which/WDT/which you/PRP/you can/MD/can have/VB/have a/DT/a bunch/NN/bunch of/IN/of methods/NNS/methods which/WDT/which you/PRP/you can/MD/can use/VB/use to/TO/to update/VB/update and/CC/and modify/VB/modify the/DT/the data/NNS/data type/NNP/type. so/RB/so with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end our/PRP$/our discussion/NN/discussion on/IN/on graphs/NNS/graphs we/PRP/we will/MD/will continue/VB/continue in/IN/in next/JJ/next class/NN/class however/RB/however to/TO/to see/VB/see how/WRB/how to/TO/to actually/RB/actually represent/VB/represent a/DT/a graph/NN/graph what/WP/what kind/NN/kind of/IN/of data/NNS/data structures/NNS/structures can/MD/can you/PRP/you use/VB/use to/TO/to represent/VB/represent graphs/NNP/graphs. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 25/CD/25 data/NNS/data structures/NNS/structures for/IN/for graphs/NNS/graphs today/NN/today ?/./? s/NNS/s class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about data/NNS/data structures/NNS/structures for/IN/for graphs/NNP/graphs. if/IN/if you/PRP/you recall/VBP/recall in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we discussed/VBD/discussed various/JJ/various things/NNS/things about/IN/about graphs/NNP/graphs. various/JJ/various terms/NNS/terms actually/RB/actually /,/, what/WDT/what undirected/VBN/undirected graphs/NNS/graphs are/VBP/are /,/, what/WP/what directed/VBN/directed graphs/NNS/graphs are/VBP/are /,/, what/WP/what is/VBZ/is a/DT/a path/NN/path in/IN/in a/DT/a graph/NN/graph /,/, what/WP/what is/VBZ/is a/DT/a cycle/NN/cycle /,/, what/WP/what are/VBP/are connected/VBN/connected components/NNS/components so/RB/so on/IN/on and/CC/and on/NNP/on. we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start using/VBG/using the/DT/the terminology/NN/terminology now/NNP/now. i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be discussing/VBG/discussing three/CD/three different/JJ/different data/NNS/data structures/NNS/structures for/IN/for representing/VBG/representing graphs/NNP/graphs. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 36/CD/36 /CD/) one/CD/one would/MD/would be/VB/be the/DT/the edge/NN/edge list/NN/list data/NNS/data structure/NN/structure /,/, second/JJ/second adjacency/NN/adjacency list/NN/list data/NNS/data structure/NN/structure and/CC/and third/JJ/third would/MD/would be/VB/be adjacency/NN/adjacency matrix/NN/matrix data/NNS/data structure/NNP/structure. we/PRP/we will/MD/will see/VB/see what/WP/what these/DT/these are/VBP/are and/CC/and how/WRB/how they/PRP/they can/MD/can be/VB/be augmented/VBN/augmented /,/, how/WRB/how they/PRP/they can/MD/can be/VB/be combined/VBN/combined to/TO/to give/VB/give better/JJR/better performances/NNS/performances /,/, faster/JJR/faster running/VBG/running times/NNP/times. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 43/CD/43 /CD/) the/DT/the simplest/JJS/simplest data/NNS/data structure/NN/structure is/VBZ/is what/WP/what we/PRP/we call/VBP/call an/DT/an edge/NN/edge list/NN/list data/NNS/data structure/NNP/structure. suppose/NN/suppose this/DT/this is/VBZ/is my/PRP$/my graph/NN/graph /,/, it/PRP/it is/VBZ/is a/DT/a directed/VBN/directed graph/NNP/graph. this/DT/this is/VBZ/is just/RB/just a/DT/a graph/NN/graph of/IN/of a/DT/a various/JJ/various flights/NNP/flights. these/DT/these are/VBP/are airports/NNS/airports the/DT/the blue/JJ/blue vertices/NNS/vertices and/CC/and the/DT/the red/NN/red arcs/NNS/arcs are/VBP/are flight/VBN/flight numbers/NNS/numbers from/IN/from a/DT/a airport/NN/airport to/TO/to some/DT/some other/JJ/other airport/NN/airport and/CC/and suppose/VB/suppose we/PRP/we want/VBP/want to/TO/to represent/VB/represent this/NNP/this. one/CD/one way/NN/way is/VBZ/is to/TO/to have/VB/have two/CD/two lists/NNS/lists /,/, one/CD/one of/IN/of the/DT/the vertices/NNS/vertices and/CC/and one/CD/one of/IN/of the/DT/the edges/NNP/edges. we/PRP/we call/VBP/call each/DT/each edge/NN/edge is/VBZ/is a/DT/a pair/NN/pair of/IN/of vertices/NNP/vertices. in/IN/in this/DT/this case/NN/case it/PRP/it will/MD/will be/VB/be an/DT/an ordered/VBN/ordered pair/NN/pair of/IN/of vertices/NNS/vertices so/IN/so we/PRP/we could/MD/could have/VB/have two/CD/two such/JJ/such lists/NNP/lists. let/NN/let ?/./? s/NNS/s see/VBP/see what/WP/what that/IN/that corresponds/NNS/corresponds to/NNP/to. that/IN/that is/VBZ/is we/PRP/we called/VBN/called the/DT/the edge/NN/edge list/NN/list data/NNS/data structure/NNP/structure. the/DT/the edge/NN/edge list/NN/list data/NNS/data structure/NN/structure simply/RB/simply stores/VBZ/stores the/DT/the vertices/NNS/vertices and/CC/and the/DT/the edges/NNS/edges in/IN/in two/CD/two unsorted/VBN/unsorted sequences/NNP/sequences. it/PRP/it ?/./? s/NNS/s very/RB/very easy/JJ/easy to/TO/to implement/NN/implement and/CC/and this/DT/this is/VBZ/is what/WP/what it/PRP/it looks/VBZ/looks like/NNP/like. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 59/CD/59 /CD/) these/DT/these are/VBP/are lists/NNS/lists of/IN/of vertices/NNS/vertices that/WDT/that you/PRP/you had/VBD/had and/CC/and these/DT/these were/VBD/were the/DT/the various/JJ/various edges/NNP/edges. each/DT/each edge/NN/edge recall/NN/recall corresponds/NNS/corresponds to/TO/to a/DT/a certain/JJ/certain flight/NN/flight between/IN/between two/CD/two airports/NNP/airports. this/DT/this is/VBZ/is a/DT/a flight/NN/flight let/NN/let ?/./? s/NNS/s say/VBP/say nw/NN/nw 35/CD/35. it/PRP/it goes/VBZ/goes from/IN/from airport/NN/airport boston/NN/boston to/TO/to jfk/VB/jfk and/CC/and so/RB/so this/DT/this particular/JJ/particular node/NN/node has/VBZ/has references/NNS/references pointers/NNS/pointers to/TO/to these/DT/these corresponding/NN/corresponding vertices/NNS/vertices here/NNP/here. for/IN/for each/DT/each edge/NN/edge i/PRP/i will/MD/will keep/VB/keep two/CD/two pointers/NNS/pointers /,/, two/CD/two references/NNS/references to/TO/to the/DT/the vertices/NNS/vertices between/IN/between which/WDT/which that/IN/that edge/NN/edge goes/NNP/goes. this/DT/this is/VBZ/is called/VBN/called the/DT/the edge/NN/edge list/NN/list data/NNS/data structures/NNP/structures. it/PRP/it is/VBZ/is very/RB/very easy/JJ/easy to/TO/to implement/NN/implement so/IN/so there/EX/there are/VBP/are many/JJ/many operations/NNS/operations which/WDT/which can/MD/can be/VB/be done/VBN/done very/RB/very quickly/NNP/quickly. for/IN/for instance/NN/instance suppose/NN/suppose there/EX/there was/VBD/was one/CD/one operation/NN/operation which/WDT/which was/VBD/was given/VBN/given an/DT/an edge/NN/edge /,/, find/VBP/find its/PRP$/its two/CD/two end/NN/end points/NNP/points. so/RB/so that/IN/that can/MD/can be/VB/be done/VBN/done very/RB/very quickly/NNP/quickly. you/PRP/you are/VBP/are given/VBN/given the/DT/the certain/JJ/certain edge/NN/edge and/CC/and you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the two/CD/two end/NN/end points/NNS/points of/IN/of that/DT/that edge/NN/edge that/IN/that can/MD/can be/VB/be done/NNP/done. or/CC/or there/EX/there was/VBD/was an/DT/an operation/NN/operation called/VBN/called opposite/JJ/opposite /,/, given/VBN/given an/DT/an edge/NN/edge and/CC/and a/DT/a vertex/NN/vertex /,/, you/PRP/you wanted/VBD/wanted to/TO/to find/VB/find out/RP/out what/WP/what was/VBD/was the/DT/the other/JJ/other end/NN/end point/NN/point and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. but/CC/but there/EX/there is/VBZ/is one/CD/one operation/NN/operation which/WDT/which is/VBZ/is very/RB/very inefficient/JJ/inefficient and/CC/and that/IN/that is/VBZ/is finding/VBG/finding the/DT/the adjacent/NN/adjacent vertices/NNS/vertices of/IN/of a/DT/a given/VBN/given vertex/NNP/vertex. suppose/NN/suppose i/PRP/i give/VBP/give you/PRP/you a/DT/a certain/JJ/certain vertex/NNP/vertex. i/PRP/i give/VBP/give you/PRP/you vertex/NN/vertex dfw/NN/dfw and/CC/and i/PRP/i say/VBP/say which/WDT/which are/VBP/are the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to this/NNP/this. how/WRB/how will/MD/will i/VB/i do/VBP/do thus/RB/thus ?/./? i/PRP/i will/MD/will have/VB/have to/TO/to go/VB/go through/RP/through the/DT/the list/NN/list of/IN/of edges/NNS/edges and/CC/and i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out all/DT/all such/JJ/such edges/NNP/edges. suppose/NN/suppose i/PRP/i wanted/VBD/wanted to/TO/to find/VB/find out/RP/out vertices/NNS/vertices which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to dfw/VB/dfw /,/, i/PRP/i will/MD/will have/VB/have to/TO/to look/VB/look at/IN/at this/DT/this edge/NNP/edge. this/DT/this edge/NN/edge is/VBZ/is not/RB/not an/DT/an end/NN/end point/NN/point of/IN/of this/DT/this /,/, so/RB/so i/PRP/i go/VBP/go to/TO/to the/DT/the next/JJ/next one/NNP/one. this/DT/this is/VBZ/is not/RB/not an/DT/an end/NN/end point/NN/point of/IN/of this/DT/this /,/, i/PRP/i go/VBP/go to/TO/to the/DT/the next/JJ/next one/NNP/one. this/DT/this is/VBZ/is an/DT/an end/NN/end point/NN/point of/IN/of this/DT/this so/RB/so i/PRP/i will/MD/will look/VB/look at/IN/at what/WP/what the/DT/the other/JJ/other end/NN/end point/NN/point is/VBZ/is /,/, that/IN/that is/VBZ/is lax/NNP/lax. so/RB/so lax/NN/lax becomes/VBZ/becomes adjacent/NN/adjacent to/TO/to dfw/VB/dfw and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. this/DT/this is/VBZ/is what/WP/what i/PRP/i will/MD/will have/VB/have to/TO/to do/VB/do to/TO/to find/VB/find out/RP/out the/DT/the adjacent/NN/adjacent vertices/NNS/vertices of/IN/of a/DT/a given/VBN/given vertex/NNP/vertex. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 54/CD/54 /CD/) if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the various/JJ/various operations/NNS/operations /,/, i/PRP/i can/MD/can see/VB/see what/WP/what times/NNS/times they/PRP/they take/NNP/take. so/RB/so let/VB/let ?/./? s/NNS/s see/NNP/see. size/NN/size /,/, isempty/NN/isempty /,/, replaceelement/NN/replaceelement /,/, swap/NN/swap these/DT/these are/VBP/are all/DT/all container/NN/container operations/NNP/operations. these/DT/these are/VBP/are when/WRB/when i/PRP/i am/VBP/am giving/VBG/giving you/PRP/you the/DT/the position/NN/position /,/, so/RB/so size/VBP/size for/IN/for instance/NN/instance is/VBZ/is constant/JJ/constant time/NN/time /,/, i/PRP/i can/MD/can keep/VB/keep track/NN/track of/IN/of the/DT/the number/NN/number of/IN/of edges/NNS/edges and/CC/and vertices/NNS/vertices in/IN/in the/DT/the tool/NN/tool list/NNP/list. isempty/NN/isempty is/VBZ/is again/RB/again constant/JJ/constant time/NN/time /,/, if/IN/if the/DT/the size/NN/size is/VBZ/is zero/CD/zero than/IN/than its/PRP$/its empty/NNP/empty. replaceelement/NN/replaceelement /,/, if/IN/if i/PRP/i give/VBP/give you/PRP/you a/DT/a particular/JJ/particular position/NN/position corresponding/VBG/corresponding to/TO/to an/DT/an edge/NN/edge and/CC/and i/PRP/i say/VBP/say put/VBN/put some/DT/some other/JJ/other edge/NN/edge at/IN/at that/DT/that location/NN/location /,/, that/IN/that just/RB/just takes/VBZ/takes constant/JJ/constant time/NNP/time. similarly/RB/similarly swap/VB/swap all/DT/all of/IN/of these/DT/these take/NN/take constant/NN/constant time/NNP/time. number/NN/number of/IN/of vertices/NNS/vertices /,/, number/NN/number of/IN/of edges/NNS/edges takes/VBZ/takes constant/JJ/constant time/NNP/time. what/WP/what does/VBZ/does the/DT/the method/NN/method vertices/NNS/vertices do/VBP/do ?/./? it/PRP/it enumerates/VBZ/enumerates /,/, it/PRP/it is/VBZ/is an/DT/an iterator/NN/iterator over/IN/over all/DT/all the/DT/the vertices/NNP/vertices. since/IN/since i/PRP/i would/MD/would have/VB/have to/TO/to run/VB/run through/IN/through all/DT/all the/DT/the vertices/NNS/vertices /,/, that/IN/that would/MD/would take/VB/take time/NN/time proportional/JJ/proportional to/TO/to the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. similarly/RB/similarly these/DT/these are/VBP/are iterator/NN/iterator ?/./? s/NNS/s over/IN/over the/DT/the edges/NNS/edges /,/, so/RB/so they/PRP/they will/MD/will take/VB/take time/NN/time proportional/JJ/proportional to/TO/to the/DT/the number/NN/number of/IN/of edges/NNP/edges. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at some/DT/some more/RBR/more interesting/JJ/interesting thing/NNP/thing. suppose/NN/suppose i/PRP/i say/VBP/say insertvertex/NN/insertvertex /,/, i/PRP/i want/VBP/want to/TO/to insert/VB/insert a/DT/a vertex/NNP/vertex. then/RB/then how/WRB/how much/RB/much time/NN/time should/MD/should that/IN/that take/VB/take ?/./? it/PRP/it should/MD/should take/VB/take constant/JJ/constant or/CC/or order/NN/order n/NNP/n. it/PRP/it should/MD/should take/VB/take constant/JJ/constant time/NN/time because/IN/because these/DT/these are/VBP/are unsorted/VBN/unsorted lists/NNP/lists. similarly/RB/similarly insertedge/NN/insertedge /,/, insertdirectededge/NN/insertdirectededge all/DT/all of/IN/of these/DT/these can/MD/can be/VB/be done/VBN/done in/IN/in constant/JJ/constant time/NNP/time. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at remove/NN/remove vertex/NNP/vertex. this/DT/this last/JJ/last operation/NN/operation you/PRP/you will/MD/will not/RB/not able/VB/able to/TO/to see/VB/see it/PRP/it very/RB/very clearly/RB/clearly perhaps/RB/perhaps because/IN/because it/PRP/it is/VBZ/is getting/VBG/getting overlapped/VBN/overlapped here/RB/here but/CC/but it/PRP/it is/VBZ/is removevertex/NNP/removevertex. so/RB/so suppose/RB/suppose i/PRP/i wanted/VBD/wanted to/TO/to remove/VB/remove a/DT/a vertex/NNP/vertex. how/WRB/how much/JJ/much time/NN/time would/MD/would it/PRP/it take/VB/take ?/./? if/IN/if i/PRP/i remove/VBP/remove a/DT/a vertex/NN/vertex /,/, i/PRP/i also/RB/also remove/VBP/remove the/DT/the edges/NNS/edges which/WDT/which are/VBP/are incident/JJ/incident to/TO/to that/DT/that vertex/NN/vertex clearly/NNP/clearly. because/IN/because otherwise/NN/otherwise where/WRB/where would/MD/would the/DT/the end/NN/end points/NNS/points of/IN/of the/DT/the edges/NNS/edges be/VB/be referring/VBG/referring to/NNP/to. i/PRP/i have/VBP/have to/TO/to essentially/RB/essentially get/VB/get to/TO/to that/DT/that vertex/NN/vertex and/CC/and i/PRP/i also/RB/also have/VBP/have to/TO/to traverse/VB/traverse to/TO/to the/DT/the list/NN/list of/IN/of edges/NNP/edges. the/DT/the list/NN/list of/IN/of edges/NNS/edges is/VBZ/is /,/, number/NN/number of/IN/of edges/NNS/edges is/VBZ/is order/NN/order m/NNP/m. i/PRP/i have/VBP/have to/TO/to traverse/VB/traverse through/IN/through the/DT/the entire/JJ/entire list/NN/list to/TO/to find/VB/find out/RP/out whether/IN/whether which/WDT/which are/VBP/are the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are adjacent/JJ/adjacent /,/, which/WDT/which are/VBP/are the/DT/the edges/NNS/edges which/WDT/which are/VBP/are incident/JJ/incident to/TO/to this/DT/this vertex/NN/vertex and/CC/and also/RB/also remove/VBP/remove those/DT/those edges/NNP/edges. which/WDT/which is/VBZ/is why/WRB/why this/DT/this operation/NN/operation is/VBZ/is going/VBG/going to/TO/to take/VB/take order/NN/order m/NN/m time/NNP/time. /NNP/[ student/NN/student /:/: /:/] here/RB/here when/WRB/when i/PRP/i say/VBP/say removevertex/NN/removevertex /,/, i/PRP/i am/VBP/am assuming/VBG/assuming that/IN/that you/PRP/you are/VBP/are given/VBN/given the/DT/the particular/JJ/particular vertex/NN/vertex you/PRP/you want/VBP/want to/TO/to remove/NNP/remove. let/VB/let ?/./? s/NNS/s say/VBP/say you/PRP/you are/VBP/are given/VBN/given the/DT/the position/NN/position in/IN/in the/DT/the list/NNP/list. /NNP/[ hindi/NN/hindi /:/] /./. in/IN/in this/DT/this manner/NN/manner you/PRP/you can/MD/can look/VB/look at/IN/at this/DT/this slide/NN/slide more/JJR/more carefully/RB/carefully and/CC/and understand/VBP/understand the/DT/the times/NNP/times. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 10/CD/10 /CD/) this/DT/this is/VBZ/is not/RB/not the/DT/the only/JJ/only way/NN/way of/IN/of representing/VBG/representing a/DT/a graph/NNP/graph. there/RB/there could/MD/could be/VB/be other/JJ/other ways/NNP/ways. we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to look/VB/look at/IN/at what/WP/what ?/./? s/NNS/s called/VBN/called the/DT/the adjacency/NN/adjacency list/NN/list data/NNS/data structure/NNP/structure. this/DT/this is/VBZ/is your/PRP$/your graph/NN/graph /,/, here/RB/here i/PRP/i am/VBP/am taking/VBG/taking an/DT/an example/NN/example of/IN/of an/DT/an undirected/VBN/undirected graph/NN/graph but/CC/but all/DT/all these/DT/these data/NNS/data structures/NNS/structures /,/, all/DT/all the/DT/the three/CD/three data/NNS/data structures/NNS/structures that/WDT/that i/PRP/i am/VBP/am going/VBG/going talking/VBG/talking of/IN/of today/NN/today can/MD/can be/VB/be used/VBN/used to/TO/to represent/VB/represent both/DT/both directed/VBN/directed and/CC/and undirected/VBN/undirected graphs/NNP/graphs. if/IN/if so/RB/so in/IN/in this/DT/this undirected/VBN/undirected graph/NN/graph how/WRB/how do/VBP/do i/PRP/i represent/VBP/represent it/PRP/it ?/./? i/PRP/i have/VBP/have an/DT/an array/NN/array of/IN/of vertices/NNS/vertices /,/, an/DT/an array/NN/array corresponding/VBG/corresponding to/TO/to vertices/NNS/vertices let/VB/let ?/./? s/NNS/s say/NNP/say. this/DT/this location/NN/location corresponds/VBZ/corresponds to/TO/to vertex/NN/vertex a/DT/a /,/, this/DT/this corresponds/NNS/corresponds to/TO/to the/DT/the vertex/NN/vertex b/NN/b /,/, this/DT/this location/NN/location corresponds/VBZ/corresponds to/TO/to c/VB/c d/JJ/d and/CC/and e/NN/e that/IN/that ?/./? s/NNS/s how/WRB/how it/PRP/it should/MD/should be/NNP/be. now/RB/now what/WP/what are/VBP/are the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to a/DT/a ?/./? they/PRP/they are/VBP/are b/RB/b c/JJ/c and/CC/and d/JJ/d /,/, so/RB/so i/PRP/i will/MD/will have/VB/have a/DT/a link/NN/link list/NN/list starting/VBG/starting from/IN/from this/DT/this location/NN/location which/WDT/which will/MD/will have/VB/have elements/NNS/elements b/VB/b c/NN/c and/CC/and d/VBD/d in/IN/in it/NNP/it. this/DT/this corresponded/VBD/corresponded to/TO/to location/NN/location vertex/NN/vertex b/NNP/b. so/RB/so which/WDT/which are/VBP/are the/DT/the vertexes/NNS/vertexes adjacent/VBP/adjacent to/TO/to b/VB/b ?/./? a/DT/a and/CC/and e/NN/e so/IN/so this/DT/this links/NNS/links contain/VBP/contain only/RB/only a/DT/a and/CC/and e/NN/e in/IN/in it/NNP/it. this/DT/this was/VBD/was corresponding/VBG/corresponding to/TO/to d/VB/d /,/, vertices/NNS/vertices adjacent/VBP/adjacent to/TO/to d/VB/d are/VBP/are a/DT/a c/NN/c e/NN/e so/RB/so that/IN/that ?/./? s/NNS/s why/WRB/why we/PRP/we have/VBP/have a/DT/a c/NN/c e/NN/e in/IN/in this/NNP/this. these/DT/these lists/NNS/lists are/VBP/are also/RB/also unsorted/VBN/unsorted lists/NNP/lists. so/RB/so adjacency/NN/adjacency list/NN/list of/IN/of a/DT/a vertex/NN/vertex /,/, so/RB/so what/WP/what we/PRP/we are/VBP/are keeping/VBG/keeping track/NN/track of/IN/of is/VBZ/is the/DT/the adjacency/NN/adjacency list/NN/list of/IN/of each/DT/each vertex/NNP/vertex. how/WRB/how much/JJ/much space/NN/space does/VBZ/does this/DT/this data/NN/data structure/NN/structure require/NN/require ?/./? i/PRP/i will/MD/will have/VB/have an/DT/an array/NN/array of/IN/of size/NN/size n/NN/n and/CC/and what/WP/what will/MD/will be/VB/be the/DT/the length/NN/length of/IN/of the/DT/the link/NN/link list/NN/list at/IN/at each/DT/each location/NNP/location. the/DT/the degree/NN/degree of/IN/of that/DT/that vertex/NNP/vertex. the/DT/the total/JJ/total space/NN/space required/VBN/required in/IN/in this/DT/this part/NN/part is/VBZ/is sum/NN/sum of/IN/of the/DT/the degrees/NNS/degrees which/WDT/which we/PRP/we argued/VBD/argued is/VBZ/is two/CD/two times/NNS/times m/NNP/m. the/DT/the total/JJ/total space/NN/space required/VBN/required is/VBZ/is n/VBN/n plus/RB/plus m/NN/m /,/, so/RB/so it/PRP/it should/MD/should be/VB/be of/IN/of the/DT/the order/NN/order of/IN/of theta/NN/theta of/IN/of n/NN/n plus/CC/plus m/NNP/m. /NNP/[ student/NN/student /:/: so/RB/so having/VBG/having implementing/NN/implementing this/DT/this as/IN/as a/DT/a link/NN/link list/NN/list /:/[ hindi/NN/hindi /:/] we/PRP/we could/MD/could keep/VB/keep them/PRP/them in/IN/in an/DT/an array/NN/array /,/, that/IN/that ?/./? s/NNS/s the/DT/the next/JJ/next data/NNS/data structure/NNP/structure. we/PRP/we will/MD/will see/VB/see what/WP/what are/VBP/are the/DT/the pros/NNS/pros and/CC/and cons/NNS/cons for/IN/for that/NNP/that. /:/[ student/NN/student /:/: array/NN/array implementation/NN/implementation of/IN/of the/DT/the linked/VBN/linked list/NN/list /:/] pardon/NN/pardon /:/[ student/NN/student /:/: array/NN/array implementation/NN/implementation of/IN/of the/DT/the linked/VBN/linked list/NN/list /:/] no/DT/no /,/, what/WP/what he/PRP/he is/VBZ/is saying/VBG/saying is/VBZ/is /,/, we/PRP/we will/MD/will come/VB/come to/TO/to what/WP/what he/PRP/he is/VBZ/is saying/VBG/saying in/IN/in the/DT/the next/JJ/next slide/NN/slide /,/, when/WRB/when i/PRP/i show/VBP/show you/PRP/you the/DT/the adjacency/NN/adjacency matrix/NN/matrix implementation/NNP/implementation. what/WP/what ?/./? s/NNS/s the/DT/the advantage/NN/advantage of/IN/of this/DT/this ?/./? how/WRB/how is/VBZ/is this/DT/this better/NN/better than/IN/than the/DT/the previous/JJ/previous data/NNS/data structure/NN/structure ?/./? /:/[ student/NN/student /:/: moving/VBG/moving a/DT/a vertex/NN/vertex /:/] adjacent/NN/adjacent vertices/NNS/vertices /,/, to/TO/to find/VB/find out/RP/out what/WP/what are/VBP/are the/DT/the adjacent/NN/adjacent vertices/NNS/vertices of/IN/of a/DT/a given/VBN/given vertex/NN/vertex that/IN/that can/MD/can be/VB/be done/VBN/done much/RB/much more/RBR/more quickly/RB/quickly here/NNP/here. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take now/RB/now ?/./? /:/[ student/NN/student /:/: order/NN/order /:/] order/NN/order degree/NN/degree /:/[ student/NN/student /:/: order/NN/order degree/NN/degree /:/] if/IN/if i/PRP/i want/VBP/want to/TO/to list/NN/list out/IN/out all/DT/all the/DT/the adjacent/NN/adjacent vertices/NNP/vertices. if/IN/if i/PRP/i give/VBP/give you/PRP/you two/CD/two vertices/NNS/vertices and/CC/and i/PRP/i ask/VBP/ask you/PRP/you are/VBP/are these/DT/these two/CD/two vertices/NNS/vertices adjacent/NN/adjacent ?/./? how/WRB/how much/RB/much time/NN/time would/MD/would you/PRP/you take/VB/take ?/./? /:/[ student/NN/student /:/: order/NN/order degree/NN/degree /:/] order/NN/order degree/NN/degree still/NNP/still. degree/NN/degree of/IN/of one/CD/one of/IN/of the/DT/the vertices/NNS/vertices let/VBP/let ?/./? s/NNS/s say/VBP/say /,/, the/DT/the smaller/JJR/smaller one/NNP/one. /:/[ student/NN/student /:/: the/DT/the smaller/JJR/smaller one/CD/one /CD/] /CD/[ student/NN/student /:/: the/DT/the larger/JJR/larger one/CD/one /CD/] this/DT/this is/VBZ/is an/DT/an array/NNP/array. this/DT/this one/CD/one is/VBZ/is an/DT/an array/NNP/array. this/DT/this is/VBZ/is an/DT/an array/NN/array of/IN/of just/RB/just references/NNS/references of/IN/of pointers/NNS/pointers /,/, nothing/NN/nothing else/NNP/else. there/EX/there is/VBZ/is nothing/NN/nothing else/RB/else stored/VBD/stored in/IN/in this/DT/this array/NNP/array. you/PRP/you can/MD/can store/VB/store more/RBR/more information/NN/information if/IN/if you/PRP/you want/VBP/want /,/, any/DT/any information/NN/information associated/VBN/associated with/IN/with the/DT/the vertex/NN/vertex you/PRP/you can/MD/can store/VB/store at/IN/at this/DT/this storage/NN/storage location/NN/location in/IN/in the/DT/the array/NNP/array. /NNP/[ student/NN/student /:/: /:/] it/PRP/it ?/./? s/NNS/s just/RB/just an/DT/an array/NN/array /,/, you/PRP/you can/NNP/can. /:/[ student/NN/student /:/: /:/] it/PRP/it ?/./? s/NNS/s an/DT/an array/NN/array typically/RB/typically indexed/VBN/indexed by/IN/by ?/./? suppose/NN/suppose so/IN/so you/PRP/you typically/RB/typically number/NN/number your/PRP$/your vertices/NNS/vertices 1/CD/1 2/CD/2 3/CD/3 4/CD/4 and/CC/and so/RB/so on/IN/on and/CC/and then/RB/then that/IN/that would/MD/would correspond/VB/correspond to/TO/to this/DT/this location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 59/CD/59 /CD/) we/PRP/we can/MD/can combine/VB/combine this/DT/this with/IN/with the/DT/the edge/NN/edge list/NN/list data/NNS/data structure/NN/structure and/CC/and we/PRP/we will/MD/will get/VB/get something/NN/something more/JJR/more complicated/JJ/complicated like/IN/like this/NNP/this. what/WP/what is/VBZ/is this/DT/this ?/./? /:/[ hindi/NN/hindi /:/] is/VBZ/is just/RB/just your/PRP$/your edge/NN/edge list/NNP/list. just/RB/just i/PRP/i showed/VBD/showed you/PRP/you and/CC/and now/RB/now with/IN/with each/DT/each of/IN/of these/DT/these vertices/NNS/vertices /,/, i/PRP/i have/VBP/have the/DT/the adjacency/NN/adjacency list/NN/list associated/VBN/associated with/IN/with each/DT/each of/IN/of these/DT/these vertices/NNP/vertices. i/PRP/i have/VBP/have both/DT/both the/DT/the in/IN/in adjacency/NN/adjacency list/NN/list and/CC/and the/DT/the out/RP/out adjacency/NN/adjacency list/NNP/list. from/IN/from each/DT/each of/IN/of these/DT/these elements/NNS/elements /,/, there/EX/there are/VBP/are two/CD/two pointers/NNP/pointers. one/CD/one is/VBZ/is pointing/VBG/pointing to/TO/to a/DT/a list/NN/list of/IN/of incoming/VBG/incoming edges/NNS/edges and/CC/and the/DT/the other/JJ/other is/VBZ/is pointing/VBG/pointing to/TO/to a/DT/a list/NN/list of/IN/of outgoing/VBG/outgoing edges/NNP/edges. we/PRP/we have/VBP/have combined/VBN/combined this/DT/this and/CC/and that/NNP/that. the/DT/the adjacency/NN/adjacency list/NN/list and/CC/and the/DT/the edge/NN/edge list/NN/list data/NNS/data structure/NN/structure /,/, somehow/NN/somehow we/PRP/we have/VBP/have combined/VBN/combined them/NNP/them. let/NN/let ?/./? s/NNS/s see/VBP/see in/IN/in what/WP/what regard/NN/regard is/VBZ/is this/DT/this better/NN/better than/IN/than this/DT/this ?/./? /:/[ student/NN/student /:/: /:/] here/RB/here for/IN/for instance/NN/instance the/DT/the operation/NN/operation /,/, suppose/NN/suppose i/PRP/i said/VBD/said /,/, given/VBN/given a/DT/a particular/JJ/particular edge/NNP/edge. here/RB/here we/PRP/we actually/RB/actually have/VBP/have no/DT/no mechanism/NN/mechanism of/IN/of storing/VBG/storing edges/NNS/edges really/NNP/really. we/PRP/we are/VBP/are not/RB/not really/RB/really storing/VBG/storing edge/NN/edge information/NNP/information. we/PRP/we are/VBP/are storing/VBG/storing information/NN/information only/RB/only with/IN/with regard/NN/regard to/TO/to vertices/NNS/vertices /,/, given/VBN/given a/DT/a vertex/NN/vertex what/WP/what are/VBP/are the/DT/the adjacent/NN/adjacent vertices/NNP/vertices. /NNP/[ student/NN/student /:/: so/RB/so edge/NN/edge information/NN/information regarding/VBG/regarding the/DT/the edges/NNS/edges easily/RB/easily obtained/VBD/obtained what/WP/what information/NN/information regarding/VBG/regarding the/DT/the edges/NNS/edges do/VBP/do we/PRP/we want/VBP/want that/IN/that we/PRP/we what/WP/what /-NONE-/] /./. suppose/NN/suppose i/PRP/i had/VBD/had the/DT/the same/JJ/same picture/NN/picture as/IN/as before/NNP/before. i/PRP/i have/VBP/have this/DT/this graph/NNP/graph. i/PRP/i ask/VBP/ask you/PRP/you flight/MD/flight ua/VB/ua 120/CD/120 which/WDT/which airport/NN/airport from/IN/from /,/, what/WP/what is/VBZ/is the/DT/the starting/VBG/starting airport/NN/airport /,/, what/WP/what is/VBZ/is the/DT/the ending/VBG/ending ?/./? yes/NNS/yes /,/, so/RB/so we/PRP/we have/VBP/have information/NN/information associated/VBN/associated with/IN/with edges/NNS/edges and/CC/and that/IN/that is/VBZ/is somehow/WRB/somehow not/RB/not getting/VBG/getting represented/VBN/represented in/IN/in this/NNP/this. /NNP/[ student/NN/student /:/: we/PRP/we can/MD/can store/VB/store name/NN/name of/IN/of /NNP/] pardon/NN/pardon /:/[ student/NN/student /:/: we/PRP/we can/MD/can store/VB/store /:/] you/PRP/you can/MD/can store/VB/store there/RB/there is/VBZ/is no/DT/no harm/NNP/harm. you/PRP/you can/MD/can store/VB/store /,/, so/RB/so with/IN/with this/DT/this whichever/NN/whichever was/VBD/was that/IN/that airport/NN/airport you/PRP/you could/MD/could do/VB/do that/DT/that /,/, but/CC/but now/RB/now if/IN/if you/PRP/you have/VBP/have to/TO/to retrieve/VB/retrieve that/IN/that information/NNP/information. suppose/NN/suppose you/PRP/you have/VB/have to/TO/to answer/VB/answer that/IN/that question/NN/question /,/, given/VBN/given a/DT/a particular/JJ/particular flight/NN/flight number/NN/number /,/, what/WP/what are/VBP/are the/DT/the starting/VBG/starting and/CC/and the/DT/the ending/VBG/ending airports/NNP/airports. you/PRP/you will/MD/will have/VB/have to/TO/to go/VB/go through/RP/through this/DT/this entire/JJ/entire data/NNS/data structure/NN/structure to/TO/to be/VB/be able/JJ/able to/TO/to figure/VB/figure that/IN/that out/NNP/out. while/IN/while here/RB/here you/PRP/you could/MD/could get/VB/get that/IN/that information/NN/information very/RB/very quickly/NNP/quickly. /:/[ student/NN/student /:/: there/EX/there is/VBZ/is also/RB/also an/DT/an /NN/] /./. that/IN/that ?/./? s/NNS/s not/RB/not connected/VBN/connected to/TO/to the/DT/the top/NNP/top. /NNP/[ student/NN/student /:/: as/IN/as good/JJ/good as/IN/as having/VBG/having a/DT/a double/JJ/double arrow/NN/arrow for/IN/for an/DT/an edge/NN/edge list/NN/list so/RB/so this/DT/this thing/NN/thing is/VBZ/is as/IN/as good/JJ/good as/IN/as having/VBG/having a/DT/a double/JJ/double arrow/NN/arrow for/IN/for the/DT/the edge/NN/edge list/NN/list /:/] double/JJ/double arrow/NN/arrow /,/, what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by double/JJ/double arrow/NN/arrow ?/./? /:/[ student/NN/student /:/: doubly/RB/doubly length/NN/length like/IN/like in/IN/in the/DT/the above/NN/above portion/NN/portion of/IN/of this/DT/this slide/NN/slide an/DT/an arrow/NN/arrow points/NNS/points from/IN/from an/DT/an edge/NN/edge to/TO/to its/PRP$/its vertex/NN/vertex /:/] vertices/NNS/vertices and/CC/and from/IN/from here/RB/here it/PRP/it ?/./? s/NNS/s pointing/VBG/pointing from/IN/from the/DT/the vertex/NN/vertex to/TO/to the/DT/the edges/NNS/edges exactly/NNP/exactly. let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at what/WP/what are/VBP/are the/DT/the time/NN/time requirements/NNS/requirements for/IN/for this/DT/this particular/JJ/particular data/NNS/data structure/NN/structure let/VB/let ?/./? s/NNS/s see/NNP/see. suppose/NN/suppose i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out the/DT/the incident/NN/incident edges/NNP/edges. edges/NNS/edges incident/VBD/incident to/TO/to a/DT/a certain/JJ/certain vertex/NN/vertex so/IN/so i/PRP/i can/MD/can get/VB/get to/TO/to that/DT/that vertex/NN/vertex /,/, so/RB/so given/VBN/given a/DT/a particular/JJ/particular vertex/NN/vertex i/PRP/i can/MD/can find/VB/find both/DT/both the/DT/the in/IN/in edges/NNS/edges and/CC/and the/DT/the out/RP/out edges/NNS/edges in/IN/in time/NN/time proportional/JJ/proportional to/TO/to the/DT/the degree/NN/degree /,/, the/DT/the in/IN/in degree/NN/degree and/CC/and the/DT/the out/RP/out degree/NN/degree respectively/NNP/respectively. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the incident/NN/incident edges/NNP/edges. given/NN/given two/CD/two vertices/NNS/vertices /,/, are/VBP/are those/DT/those two/CD/two vertices/NNS/vertices adjacent/NN/adjacent ?/./? how/WRB/how much/RB/much time/NN/time do/VBP/do i/PRP/i need/VBP/need for/IN/for this/DT/this ?/./? so/RB/so given/VBN/given one/CD/one vertex/NN/vertex i/PRP/i just/RB/just need/VBP/need to/TO/to run/VB/run through/IN/through the/DT/the ?/./? it/PRP/it ?/./? s/NNS/s given/VBN/given a/DT/a particular/JJ/particular vertex/NN/vertex dfw/NN/dfw and/CC/and let/VB/let ?/./? s/NNS/s say/VBP/say mia/NNP/mia. are/VBP/are this/DT/this two/CD/two adjacent/NN/adjacent ?/./? is/VBZ/is there/RB/there a/DT/a flight/NN/flight from/IN/from dfw/NN/dfw to/TO/to mia/VB/mia /,/, what/WDT/what will/MD/will i/VB/i do/VBP/do ?/./? i/PRP/i will/MD/will go/VB/go in/IN/in the/DT/the out/NN/out list/NN/list of/IN/of this/DT/this and/CC/and see/NNP/see. no/DT/no /,/, i/PRP/i will/MD/will have/VB/have to/TO/to do/VB/do more/JJR/more /,/, i/PRP/i will/MD/will come/VB/come to/TO/to this/NNP/this. i/PRP/i will/MD/will come/VB/come to/TO/to the/DT/the out/RP/out list/NN/list and/CC/and then/RB/then i/PRP/i have/VBP/have to/TO/to go/VB/go from/IN/from here/RB/here to/TO/to this/DT/this list/NN/list here/NNP/here. this/DT/this is/VBZ/is just/RB/just numbers/NNS/numbers or/CC/or whatever/RB/whatever /,/, this/DT/this would/MD/would be/VB/be referenced/VBN/referenced to/TO/to this/DT/this information/NNP/information. it/PRP/it depends/VBZ/depends upon/IN/upon how/WRB/how you/PRP/you organize/VBP/organize it/NNP/it. this/DT/this could/MD/could be/VB/be organized/VBN/organized as/IN/as out/IN/out list/NN/list of/IN/of edges/NNS/edges or/CC/or it/PRP/it could/MD/could be/VB/be organized/VBN/organized as/IN/as out/IN/out adjacent/NN/adjacent vertices/NNP/vertices. if/IN/if it/PRP/it were/VBD/were organized/VBN/organized as/IN/as out/IN/out adjacent/NN/adjacent vertices/NNS/vertices it/PRP/it would/MD/would have/VB/have been/VBN/been easy/NNP/easy. but/CC/but if/IN/if like/IN/like here/RB/here /,/, i/PRP/i am/VBP/am organizing/VBG/organizing it/PRP/it as/IN/as edge/NN/edge list/NN/list /,/, so/RB/so you/PRP/you will/MD/will have/VB/have to/TO/to now/RB/now go/VB/go to/TO/to the/DT/the corresponding/NN/corresponding edge/NN/edge and/CC/and see/VB/see what/WP/what the/DT/the other/JJ/other end/NN/end point/NN/point of/IN/of that/DT/that edge/NN/edge is/NNP/is. all/DT/all of/IN/of that/DT/that is/VBZ/is constant/JJ/constant time/NNP/time. there/RB/there are/VBP/are many/JJ/many ways/NNS/ways of/IN/of organizing/VBG/organizing a/DT/a graph/NNP/graph. i/PRP/i am/VBP/am just/RB/just giving/VBG/giving you/PRP/you a/DT/a very/RB/very high/JJ/high level/NN/level idea/NN/idea and/CC/and then/RB/then for/IN/for your/PRP$/your particular/JJ/particular application/NN/application /,/, depending/VBG/depending upon/IN/upon what/WP/what operation/NN/operation you/PRP/you are/VBP/are doing/VBG/doing more/JJR/more often/RB/often /,/, you/PRP/you will/MD/will have/VB/have to/TO/to choose/VB/choose the/DT/the appropriate/NN/appropriate organization/NNP/organization. /NNP/[ student/NN/student /:/: organize/NN/organize the/DT/the data/NNS/data it/PRP/it will/MD/will be/VB/be in/IN/in minimum/JJ/minimum of/IN/of degree/NN/degree of/IN/of u/NN/u and/CC/and common/JJ/common degree/NN/degree of/IN/of worst/JJ/worst case/NN/case will/MD/will be/VB/be maximum/NN/maximum /:/] worst/JJ/worst case/NN/case would/MD/would be/VB/be maximum/NN/maximum but/CC/but suppose/NN/suppose i/PRP/i also/RB/also kept/VBD/kept degree/NN/degree information/NN/information associated/VBN/associated with/IN/with each/DT/each vertices/NNP/vertices. that/IN/that ?/./? s/NNS/s not/RB/not very/RB/very hard/RB/hard to/TO/to do/NNP/do. just/RB/just one/CD/one integer/NN/integer variable/JJ/variable which/WDT/which will/MD/will keep/VB/keep track/NN/track of/IN/of them/PRP/them /,/, then/RB/then i/PRP/i can/MD/can make/VB/make this/NNP/this. it/PRP/it depends/VBZ/depends upon/IN/upon where/WRB/where you/PRP/you want/VBP/want to/TO/to optimize/NNP/optimize. if/IN/if you/PRP/you are/VBP/are doing/VBG/doing this/DT/this kind/NN/kind of/IN/of operation/NN/operation very/RB/very often/RB/often then/RB/then it/PRP/it makes/VBZ/makes sense/NN/sense keep/VB/keep degree/NN/degree and/CC/and try/NN/try and/CC/and reduce/VB/reduce running/VBG/running time/NNP/time. if/IN/if you/PRP/you are/VBP/are not/RB/not doing/VBG/doing this/DT/this operation/NN/operation then/RB/then there/RB/there is/VBZ/is no/DT/no reason/NN/reason why/WRB/why you/PRP/you should/MD/should keep/VB/keep track/NN/track of/IN/of the/DT/the degrees/NNS/degrees of/IN/of the/DT/the vertices/NNP/vertices. third/JJ/third representation/NN/representation is/VBZ/is what/WP/what ?/./? s/NNS/s called/VBN/called the/DT/the adjacency/NN/adjacency matrix/NN/matrix representation/NN/representation and/CC/and this/DT/this is/VBZ/is very/RB/very simple/JJ/simple representation/NNP/representation. here/RB/here you/PRP/you just/RB/just have/VBP/have an/DT/an n/NN/n cross/NN/cross n/NN/n matrix/NN/matrix and/CC/and there/EX/there would/MD/would be/VB/be basically/RB/basically just/RB/just binary/JJ/binary entries/NNS/entries bits/NNS/bits 1/CD/1 0/-NONE-/0 /,/, there/EX/there is/VBZ/is a/DT/a one/CD/one which/WDT/which is/VBZ/is a/DT/a true/JJ/true /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between those/DT/those two/CD/two vertices/NNP/vertices. there/RB/there is/VBZ/is a/DT/a one/CD/one here/RB/here because/IN/because there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between a/DT/a and/CC/and b/NNP/b. what/WP/what can/MD/can you/PRP/you say/VB/say about/IN/about this/DT/this matrix/NN/matrix ?/./? what/WP/what property/NN/property does/VBZ/does it/PRP/it have/VB/have ?/./? /:/[ student/NN/student /:/: symmetric/JJ/symmetric /NN/] it/PRP/it ?/./? s/NNS/s symmetric/NNP/symmetric. if/IN/if it/PRP/it is/VBZ/is an/DT/an undirected/VBN/undirected graph/NN/graph it/PRP/it would/MD/would be/VB/be symmetric/NNP/symmetric. if/IN/if its/PRP$/its directed/VBN/directed graph/NN/graph it/PRP/it need/VBP/need not/RB/not be/VB/be symmetric/NNP/symmetric. if/IN/if in/IN/in a/DT/a directed/VBN/directed graph/NN/graph you/PRP/you can/MD/can have/VB/have it/PRP/it that/IN/that this/DT/this would/MD/would be/VB/be one/CD/one /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from b/NN/b to/TO/to a/DT/a or/CC/or you/PRP/you can/MD/can have/VB/have it/PRP/it the/DT/the other/JJ/other way/NN/way round/NN/round depending/VBG/depending upon/IN/upon what/WP/what /,/, you/PRP/you can/MD/can keep/VB/keep any/DT/any way/NN/way you/PRP/you like/NNP/like. m/NN/m /:/[ i/PRP/i /,/, j/VBP/j /:/] is/VBZ/is true/JJ/true that/IN/that means/NNS/means there/EX/there is/VBZ/is an/DT/an edge/NN/edge i/PRP/i /,/, j/VBP/j in/IN/in the/DT/the graph/NNP/graph. m/NN/m /:/[ i/PRP/i /,/, j/VBP/j /:/] false/NN/false means/VBZ/means there/EX/there is/VBZ/is no/DT/no edge/NN/edge in/IN/in the/DT/the graph/NN/graph and/CC/and the/DT/the space/NN/space requirement/NN/requirement is/VBZ/is n/VBN/n square/-NONE-/square. it/PRP/it ?/./? s/NNS/s again/RB/again a/DT/a very/RB/very simple/JJ/simple implementation/NN/implementation /,/, it/PRP/it ?/./? s/NNS/s also/RB/also quite/RB/quite efficient/JJ/efficient in/IN/in a/DT/a certain/JJ/certain sense/NN/sense or/CC/or let/VB/let ?/./? s/NNS/s see/NNP/see. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 37/CD/37 /CD/) /CD/[ student/NN/student /:/: adding/VBG/adding a/DT/a vertex/NN/vertex means/VBZ/means /:/] adding/VBG/adding a/DT/a vertex/NN/vertex would/MD/would mean/VB/mean creating/VBG/creating a/DT/a new/JJ/new row/NN/row and/CC/and a/DT/a new/JJ/new column/NNP/column. it/PRP/it is/VBZ/is order/NN/order n/NN/n time/NN/time /,/, order/NN/order n/NN/n so/RB/so that/IN/that will/MD/will be/VB/be order/NN/order n/NN/n time/NNP/time. i/PRP/i could/MD/could have/VB/have for/IN/for instance/NN/instance ?/./? again/RB/again there/RB/there is/VBZ/is a/DT/a possibility/NN/possibility of/IN/of /,/, instead/RB/instead of/IN/of having/VBG/having 1/CD/1 ?/./? s/NNS/s and/CC/and 0/-NONE-/0 ?/./? s/NNS/s /,/, you/PRP/you could/MD/could keep/VB/keep track/NN/track of/IN/of the/DT/the edge/NN/edge information/NN/information here/NNP/here. you/PRP/you could/MD/could keep/VB/keep ?/./? the/DT/the adjacency/NN/adjacency matrix/NN/matrix structure/NN/structure augments/NNS/augments the/DT/the edge/NN/edge list/NN/list structure/NN/structure with/IN/with a/DT/a matrix/NN/matrix /,/, so/RB/so you/PRP/you could/MD/could also/RB/also have/VB/have the/DT/the edge/NN/edge list/NN/list together/RB/together with/IN/with the/DT/the adjacency/NN/adjacency matrix/NN/matrix both/DT/both of/IN/of them/PRP/them together/NNP/together. in/IN/in the/DT/the edge/NN/edge list/NN/list recall/NN/recall that/WDT/that for/IN/for each/DT/each edge/NN/edge you/PRP/you would/MD/would have/VB/have information/NN/information about/IN/about what/WP/what are/VBP/are the/DT/the two/CD/two end/NN/end points/NNP/points. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 21/CD/21 /CD/) there/EX/there could/MD/could be/VB/be referring/VBG/referring to/TO/to the/DT/the corresponding/NN/corresponding locations/NNS/locations here/RB/here /,/, instead/RB/instead of/IN/of pointers/NNS/pointers they/PRP/they could/MD/could just/RB/just be/VB/be integers/NNS/integers not/RB/not they/PRP/they are/VBP/are telling/VBG/telling which/WDT/which row/NN/row they/PRP/they corresponds/VBZ/corresponds to/TO/to and/CC/and here/RB/here instead/RB/instead of/IN/of 1/CD/1 ?/./? s/NNS/s and/CC/and 0/-NONE-/0 ?/./? s/NNS/s /,/, for/IN/for the/DT/the ones/NNS/ones you/PRP/you could/MD/could also/RB/also have/VB/have the/DT/the corresponding/VBG/corresponding edge/NNP/edge. augmenting/NN/augmenting an/DT/an array/NN/array /,/, again/RB/again so/RB/so this/DT/this is/VBZ/is an/DT/an operation/NN/operation which/WDT/which is/VBZ/is not/RB/not done/VBN/done very/RB/very often/NNP/often. quite/RB/quite often/RB/often the/DT/the graphs/NNS/graphs that/WDT/that you/PRP/you work/VBP/work with/IN/with are/JJ/are static/JJ/static graphs/NNP/graphs. that/IN/that is/VBZ/is you/PRP/you don/VBP/don ?/./? t/NN/t add/NN/add new/JJ/new vertices/NNS/vertices in/IN/in the/DT/the graph/NN/graph /,/, you/PRP/you don/VBP/don ?/./? t/NN/t add/NN/add /,/, remove/VBP/remove new/JJ/new vertices/NNS/vertices from/IN/from the/DT/the graph/NNP/graph. if/IN/if you/PRP/you want/VBP/want to/TO/to have/VB/have a/DT/a data/NN/data structure/NN/structure which/WDT/which implements/NNS/implements that/WDT/that then/RB/then perhaps/RB/perhaps this/DT/this is/VBZ/is not/RB/not the/DT/the right/NN/right data/NNS/data structure/NNP/structure. /NNP/[ student/NN/student /:/: array/NN/array implementation/NN/implementation /:/] you/PRP/you could/MD/could do/VB/do that/DT/that /,/, of/IN/of course/NN/course all/DT/all of/IN/of those/DT/those thing/NN/thing could/MD/could be/VB/be done/NNP/done. i/PRP/i am/VBP/am not/RB/not saying/VBG/saying it/PRP/it can/MD/can not/RB/not be/VB/be done/VBN/done here/RB/here at/IN/at all/DT/all but/CC/but then/RB/then this/DT/this would/MD/would perhaps/RB/perhaps not/RB/not be/VB/be the/DT/the best/JJS/best data/NNS/data structure/NN/structure to/TO/to use/NNP/use. if/IN/if this/DT/this was/VBD/was a/DT/a frequent/NN/frequent operation/NN/operation you/PRP/you were/VBD/were doing/VBG/doing /,/, adding/VBG/adding vertices/NNP/vertices. /NNP/[ student/NN/student /:/: even/RB/even that/IN/that will/MD/will take/VB/take order/NN/order n/NN/n time/NN/time only/RB/only because/IN/because just/RB/just when/WRB/when 2n/CD/2n minus/NN/minus 1/CD/1 basically/RB/basically n/JJ/n square/NN/square /:/] let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at what/WP/what are/VBP/are the/DT/the times/NNS/times required/VBN/required for/IN/for the/DT/the various/JJ/various operations/NNS/operations here/RB/here ?/./? given/VBN/given two/CD/two vertices/NNS/vertices to/TO/to determine/VB/determine if/IN/if they/PRP/they are/VBP/are adjacent/JJ/adjacent or/CC/or not/RB/not /,/, it/PRP/it is/VBZ/is just/RB/just a/DT/a constant/JJ/constant time/NN/time operation/NNP/operation. but/CC/but now/RB/now given/VBN/given a/DT/a particular/JJ/particular vertex/NN/vertex to/TO/to find/VB/find out/RP/out all/DT/all the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to it/PRP/it /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? /:/[ student/NN/student /:/: /:/] row/NN/row or/CC/or column/NN/column which/WDT/which is/VBZ/is order/NN/order n/NNP/n. it/PRP/it is/VBZ/is not/RB/not order/NN/order degree/NN/degree now/RB/now /,/, it/PRP/it is/VBZ/is order/NN/order n/NN/n this/DT/this is/VBZ/is the/DT/the difference/NNP/difference. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 21/CD/21 /CD/) why/WRB/why because/IN/because now/RB/now you/PRP/you will/MD/will have/VB/have to/TO/to take/VB/take that/IN/that particular/JJ/particular row/NN/row or/CC/or column/NN/column and/CC/and look/VB/look at/IN/at all/DT/all the/DT/the entries/NNS/entries and/CC/and see/VB/see which/WDT/which are/VBP/are ones/NNS/ones and/CC/and which/WDT/which are/VBP/are zeros/NNP/zeros. that/IN/that will/MD/will give/VB/give you/PRP/you order/JJR/order n/NNP/n. so/RB/so incident/JJ/incident edges/NNS/edges /,/, inincidentedges/NNS/inincidentedges /,/, outincidentedges/NNS/outincidentedges all/DT/all of/IN/of them/PRP/them will/MD/will take/VB/take order/NN/order n/NNP/n. insertvertex/NN/insertvertex /,/, remove/VBP/remove a/DT/a vertex/NN/vertex i/PRP/i have/VBP/have put/VBN/put down/RP/down order/NN/order n/NN/n squared/VBD/squared here/RB/here because/IN/because i/PRP/i am/VBP/am assuming/VBG/assuming that/IN/that you/PRP/you have/VBP/have to/TO/to copy/VB/copy them/PRP/them into/IN/into a/DT/a new/JJ/new array/NNP/array. it/PRP/it ?/./? s/NNS/s not/RB/not very/RB/very easy/JJ/easy to/TO/to take/VB/take a/DT/a two/CD/two dimensional/JJ/dimensional array/NN/array and/CC/and extend/NN/extend it/PRP/it by/IN/by one/CD/one row/NN/row and/CC/and one/CD/one column/NNP/column. you/PRP/you understand/VBP/understand why/WRB/why ?/./? because/IN/because the/DT/the problem/NN/problem is/VBZ/is that/IN/that two-dimensional/JJ/two-dimensional arrays/NNS/arrays are/VBP/are stored/VBN/stored as/IN/as one/CD/one dimensional/JJ/dimensional arrays/NNP/arrays. you/PRP/you know/VBP/know after/IN/after all/DT/all in/IN/in a/DT/a particular/JJ/particular row/NN/row major/JJ/major or/CC/or column/NN/column major/JJ/major form/NN/form /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to extend/VB/extend it/PRP/it now/RB/now how/WRB/how does/VBZ/does that/IN/that happen/JJ/happen ?/./? because/IN/because you/PRP/you have/VBP/have to/TO/to then/RB/then move/VB/move all/DT/all the/DT/the information/NNP/information. that/IN/that ?/./? s/NNS/s why/WRB/why extending/VBG/extending a/DT/a two/CD/two dimensional/JJ/dimensional array/NN/array is/VBZ/is not/RB/not an/DT/an easy/JJ/easy task/NNP/task. you/PRP/you essentially/RB/essentially have/VBP/have to/TO/to copy/VB/copy all/DT/all the/DT/the information/NN/information into/IN/into a/DT/a new/JJ/new array/NNP/array. that/WDT/that ?/./? s/VBZ/s all/DT/all i/PRP/i will/MD/will have/VB/have to/TO/to say/VB/say about/IN/about data/NNS/data structures/NNS/structures for/IN/for representing/VBG/representing graphs/NNP/graphs. there/RB/there are/VBP/are three/CD/three different/JJ/different things/NNS/things you/PRP/you have/VBP/have seen/VBN/seen adjacency/NN/adjacency list/NN/list /,/, adjacency/NN/adjacency matrix/NN/matrix and/CC/and the/DT/the simple/JJ/simple edge/NN/edge list/NNP/list. you/PRP/you can/MD/can depending/VBG/depending upon/IN/upon what/WP/what operations/NNS/operations are/VBP/are critical/JJ/critical /,/, which/WDT/which are/VBP/are the/DT/the ones/NNS/ones that/WDT/that you/PRP/you are/VBP/are doing/VBG/doing more/JJR/more often/RB/often combine/JJ/combine them/PRP/them in/IN/in a/DT/a suitable/JJ/suitable manner/NNP/manner. if/IN/if space/NN/space is/VBZ/is not/RB/not such/JJ/such an/DT/an issue/NN/issue then/RB/then you/PRP/you can/MD/can keep/VB/keep the/DT/the adjacency/NN/adjacency matrix/NN/matrix data/NNS/data structure/NN/structure because/IN/because it/PRP/it ?/./? s/NNS/s quite/RB/quite simple/JJ/simple but/CC/but it/PRP/it requires/VBZ/requires a/DT/a lot/NN/lot of/IN/of space/NNP/space. it/PRP/it requires/VBZ/requires n/NN/n squared/VBN/squared space/NNP/space. the/DT/the standard/JJ/standard implementation/NN/implementation which/WDT/which is/VBZ/is preferred/VBN/preferred very/RB/very often/RB/often is/VBZ/is the/DT/the adjacency/NN/adjacency list/NNP/list. if/IN/if you/PRP/you can/MD/can ?/./? t/VB/t think/NN/think of/IN/of anything/NN/anything then/RB/then just/RB/just use/VB/use the/DT/the adjacency/NN/adjacency list/NN/list data/NNS/data structure/NN/structure to/TO/to implement/VB/implement a/DT/a graph/NNP/graph. now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to go/VB/go onto/IN/onto graph/NN/graph searching/VBG/searching algorithms/NNP/algorithms. this/DT/this is/VBZ/is something/NN/something that/IN/that you/PRP/you have/VBP/have done/VBN/done in/IN/in a/DT/a certain/JJ/certain sense/NN/sense which/WDT/which is/VBZ/is why/WRB/why i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be taking/VBG/taking it/PRP/it up/RP/up right/RB/right in/IN/in this/DT/this class/NNP/class. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 27/CD/27 /CD/) what/WP/what is/VBZ/is the/DT/the graph/NN/graph search/NN/search algorithm/NN/algorithm ?/./? it/PRP/it is/VBZ/is basically/RB/basically a/DT/a mechanism/NN/mechanism of/IN/of visiting/VBG/visiting all/DT/all the/DT/the vertices/NNS/vertices of/IN/of the/DT/the graph/NN/graph in/IN/in some/DT/some systematic/JJ/systematic manner/NNP/manner. by/IN/by systematic/JJ/systematic i/NN/i mean/NN/mean /,/, you/PRP/you know/VBP/know in/IN/in some/DT/some organized/JJ/organized manner/NN/manner so/IN/so that/IN/that you/PRP/you don/VBP/don ?/./? t/NN/t miss/NN/miss out/IN/out on/IN/on any/DT/any vertex/NNP/vertex. a/DT/a graph/NN/graph could/MD/could be/VB/be either/RB/either a/DT/a directed/VBN/directed or/CC/or an/DT/an undirected/JJ/undirected graphs/NNS/graphs and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be assuming/VBG/assuming adjacency/NN/adjacency list/NN/list algorithm/NN/algorithm implementation/NN/implementation of/IN/of the/DT/the graph/NN/graph for/IN/for the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we would/MD/would be/VB/be discussing/NNP/discussing. graph/NN/graph searching/VBG/searching algorithms/NNS/algorithms are/VBP/are the/DT/the most/RBS/most common/JJ/common algorithm/NN/algorithm that/WDT/that you/PRP/you typically/RB/typically perform/NN/perform on/IN/on graphs/NNS/graphs and/CC/and it/PRP/it appears/VBZ/appears on/IN/on a/DT/a whole/JJ/whole lot/NN/lot of/IN/of settings/NNP/settings. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 03/CD/03 /CD/) the/DT/the algorithm/NN/algorithm that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be discussing/VBG/discussing now/RB/now is/VBZ/is what/WP/what is/VBZ/is called/VBN/called the/DT/the breadth/NN/breadth first/RB/first search/NN/search algorithm/NN/algorithm or/CC/or bfs/NNS/bfs for/IN/for short/NNP/short. what/WP/what does/VBZ/does bfs/NNS/bfs do/VBP/do ?/./? it/PRP/it will/MD/will visit/VB/visit all/DT/all the/DT/the vertices/NNS/vertices of/IN/of a/DT/a connected/VBN/connected component/NN/component in/IN/in a/DT/a graph/NN/graph and/CC/and it/PRP/it will/MD/will define/VB/define for/IN/for us/PRP/us what/WP/what we/PRP/we will/MD/will call/VB/call a/DT/a breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree which/WDT/which will/MD/will be/VB/be a/DT/a spanning/NN/spanning tree/NN/tree on/IN/on this/DT/this particular/JJ/particular connected/VBN/connected component/NNP/component. we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be discussing/VBG/discussing breadth/NN/breadth first/RB/first search/NN/search on/IN/on undirected/VBN/undirected graph/NN/graph only/RB/only today/NNP/today. breadth/NN/breadth first/RB/first search/NN/search makes/VBZ/makes more/JJR/more sense/NN/sense in/IN/in undirected/JJ/undirected graphs/NNS/graphs and/CC/and the/DT/the idea/NN/idea is/VBZ/is roughly/RB/roughly the/DT/the following/NNP/following. you/PRP/you start/VB/start from/IN/from a/DT/a vertex/NN/vertex and/CC/and this/DT/this starting/NN/starting vertex/NN/vertex let/NN/let ?/./? s/NNS/s call/VBP/call it/PRP/it as/IN/as s/NNS/s /,/, it/PRP/it is/VBZ/is assigned/VBN/assigned a/DT/a initial/JJ/initial distance/NN/distance of/IN/of zero/NNP/zero. we/PRP/we are/VBP/are going/VBG/going to/TO/to proceed/VB/proceed in/IN/in rounds/NNP/rounds. in/IN/in the/DT/the first/JJ/first round/NN/round you/PRP/you are/VBP/are going/VBG/going to/TO/to /,/, so/RB/so think/VBP/think of/IN/of yourself/PRP/yourself as/IN/as in/IN/in a/DT/a maze/NN/maze /,/, in/IN/in some/DT/some kind/NN/kind of/IN/of a/DT/a maze/NNP/maze. you/PRP/you have/VBP/have a/DT/a string/VBG/string with/IN/with you/PRP/you /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to use/VB/use this/DT/this to/TO/to help/VB/help you/PRP/you search/VB/search the/DT/the maze/NNP/maze. you/PRP/you have/VBP/have tide/VBN/tide one/CD/one end/NN/end of/IN/of the/DT/the string/NN/string at/IN/at one/CD/one location/NN/location in/IN/in the/DT/the maze/NNP/maze. now/RB/now you/PRP/you unroll/VBP/unroll the/DT/the string/VBG/string by/IN/by let/NN/let ?/./? s/NNS/s say/VBP/say just/RB/just one/CD/one unit/NN/unit and/CC/and you/PRP/you see/VBP/see where/WRB/where all/DT/all can/MD/can you/PRP/you reach/VB/reach by/IN/by unrolling/NN/unrolling this/DT/this string/NN/string by/IN/by just/RB/just one/CD/one unit/NNP/unit. those/DT/those in/IN/in some/DT/some sense/NN/sense will/MD/will be/VB/be /,/, what/WDT/what we/PRP/we will/MD/will call/VB/call the/DT/the vertices/NNS/vertices at/IN/at a/DT/a distance/NN/distance of/IN/of one/CD/one from/IN/from the/DT/the starting/NN/starting vertex/NNP/vertex. after/IN/after you/PRP/you visited/VBD/visited all/DT/all such/JJ/such vertices/NNS/vertices then/RB/then you/PRP/you will/MD/will unroll/VB/unroll the/DT/the string/NN/string by/IN/by one/CD/one more/JJR/more unit/NN/unit and/CC/and see/VB/see which/WDT/which all/DT/all vertices/NNS/vertices /,/, new/JJ/new vertices/NNS/vertices you/PRP/you can/MD/can visit/VB/visit as/RB/as a/DT/a consequence/NN/consequence of/IN/of that/DT/that and/CC/and so/RB/so on/NNP/on. you/PRP/you will/MD/will understand/VB/understand all/DT/all of/IN/of this/DT/this when/WRB/when we/PRP/we start/VBP/start discussing/VBG/discussing the/DT/the algorithm/NN/algorithm in/IN/in more/JJR/more detail/NNP/detail. we/PRP/we will/MD/will do/VB/do this/DT/this /,/, so/RB/so we/PRP/we will/MD/will unroll/VB/unroll the/DT/the string/NN/string by/IN/by one/CD/one more/JJR/more unit/NN/unit find/NN/find out/IN/out all/DT/all that/DT/that we/PRP/we can/MD/can visit/VB/visit now/NNP/now. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 59/CD/59 /CD/) unroll/NN/unroll the/DT/the string/NN/string by/IN/by one/CD/one more/JJR/more unit/NN/unit /,/, find/VBP/find all/DT/all the/DT/the vertices/NNS/vertices that/WDT/that can/MD/can be/VB/be visited/VBN/visited now/RB/now and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. each/DT/each vertex/NN/vertex we/PRP/we are/VBP/are going/VBG/going to/TO/to give/VB/give it/PRP/it a/DT/a label/NN/label which/WDT/which will/MD/will be/VB/be that/IN/that when/WRB/when it/PRP/it was/VBD/was first/JJ/first visited/VBN/visited what/WP/what was/VBD/was the/DT/the length/NN/length of/IN/of my/PRP$/my string/NN/string then/RB/then ?/./? if/IN/if it/PRP/it was/VBD/was visited/VBN/visited in/IN/in the/DT/the first/JJ/first round/NN/round then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to give/VB/give it/PRP/it a/DT/a label/NN/label of/IN/of one/NNP/one. if/IN/if it/PRP/it was/VBD/was visited/VBN/visited in/IN/in the/DT/the second/JJ/second round/NN/round i/PRP/i am/VBP/am going/VBG/going to/TO/to give/VB/give it/PRP/it a/DT/a label/NN/label of/IN/of two/CD/two and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. what/WP/what this/DT/this label/NN/label will/MD/will signify/VB/signify eventually/RB/eventually would/MD/would be/VB/be the/DT/the distance/NN/distance of/IN/of the/DT/the vertex/NN/vertex from/IN/from the/DT/the root/NN/root /,/, from/IN/from the/DT/the starting/NN/starting vertex/NN/vertex or/CC/or the/DT/the root/NN/root as/IN/as i/PRP/i call/NNP/call. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 34/CD/34 /CD/) all/DT/all of/IN/of these/DT/these will/MD/will be/VB/be clear/JJ/clear with/IN/with some/DT/some example/NNP/example. suppose/NN/suppose this/DT/this was/VBD/was my/PRP$/my graph/NN/graph /,/, very/RB/very simple/JJ/simple graph/NN/graph and/CC/and s/NNS/s was/VBD/was my/PRP$/my starting/NN/starting vertex/NNP/vertex. i/PRP/i give/VBP/give it/PRP/it a/DT/a label/NN/label of/IN/of 0/CD/0. i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have a/DT/a q/NN/q /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the only/JJ/only data/NNS/data structure/NN/structure i/PRP/i need/VBP/need to/TO/to implement/VB/implement in/IN/in this/DT/this algorithm/NN/algorithm a/DT/a q/NNP/q. recall/NN/recall this/DT/this is/VBZ/is very/RB/very similar/JJ/similar to/TO/to your/PRP$/your minor/NN/minor question/NNP/question. you/PRP/you have/VBP/have a/DT/a q/NN/q and/CC/and on/IN/on which/WDT/which you/PRP/you have/VBP/have s/NNP/s. at/IN/at any/DT/any point/NN/point what/WP/what you/PRP/you are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is look/VB/look at/IN/at the/DT/the front/NN/front element/NN/element in/IN/in the/DT/the q/NN/q and/CC/and look/VB/look at/IN/at all/DT/all the/DT/the neighbours/NNS/neighbours of/IN/of that/DT/that front/NN/front element/NNP/element. the/DT/the neighbours/NNS/neighbours of/IN/of this/DT/this front/NN/front element/NN/element are/VBP/are w/RB/w and/CC/and r/NN/r /,/, so/RB/so you/PRP/you are/VBP/are going/VBG/going to/TO/to put/VB/put them/PRP/them into/IN/into the/DT/the q/NN/q now/NNP/now. i/PRP/i am/VBP/am going/VBG/going to/TO/to remove/VB/remove an/DT/an element/NN/element from/IN/from the/DT/the queue/NN/queue /,/, remove/VBP/remove the/DT/the front/NN/front element/NN/element from/IN/from the/DT/the queue/NN/queue /,/, find/VBP/find its/PRP$/its neighbours/NNS/neighbours and/CC/and put/VBD/put them/PRP/them into/IN/into the/DT/the queue/JJ/queue /,/, insert/NN/insert them/PRP/them into/IN/into the/DT/the queue/NNP/queue. when/WRB/when i/PRP/i insert/VBP/insert a/DT/a vertex/NN/vertex into/IN/into the/DT/the queue/JJ/queue i/PRP/i color/VBP/color it/PRP/it gray/VBP/gray /,/, after/IN/after i/PRP/i remove/VBP/remove a/DT/a vertex/NN/vertex from/IN/from the/DT/the queue/NN/queue i/PRP/i color/VBP/color it/PRP/it black/NNP/black. initially/RB/initially this/DT/this is/VBZ/is the/DT/the only/JJ/only vertex/NN/vertex in/IN/in the/DT/the queue/NN/queue so/RB/so it/PRP/it ?/./? s/NNS/s grey/NNP/grey. all/DT/all the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are in/IN/in the/DT/the queue/NN/queue will/MD/will always/RB/always have/VB/have a/DT/a color/NN/color of/IN/of grey/NNP/grey. in/IN/in some/DT/some sense/NN/sense the/DT/the grey/NN/grey vertices/NNS/vertices are/VBP/are vertices/NNS/vertices which/WDT/which have/VBP/have been/VBN/been discovered/VBN/discovered till/NN/till now/RB/now but/CC/but i/PRP/i have/VBP/have not/RB/not gone/VBN/gone beyond/IN/beyond that/DT/that /,/, grey/NN/grey signifies/NNS/signifies that/NNP/that. black/VBP/black means/VBZ/means that/IN/that i/PRP/i have/VBP/have also/RB/also gone/VBN/gone beyond/IN/beyond those/DT/those vertices/NNS/vertices and/CC/and white/JJ/white means/NNS/means undiscovered/VBN/undiscovered /,/, i/PRP/i have/VBP/have not/RB/not reached/VBN/reached those/DT/those vertices/NNS/vertices at/IN/at all/NNP/all. this/DT/this is/VBZ/is the/DT/the order/NN/order in/IN/in which/WDT/which the/DT/the thing/NN/thing is/NNP/is. this/DT/this is/VBZ/is the/DT/the first/JJ/first picture/NN/picture /,/, the/DT/the second/JJ/second /,/, the/DT/the third/JJ/third and/CC/and the/DT/the fourth/NNP/fourth. let/NN/let ?/./? s/NNS/s understand/VBP/understand this/DT/this /,/, i/PRP/i had/VBD/had s/NNS/s in/IN/in the/DT/the q/NN/q /,/, i/PRP/i removed/VBD/removed s/NNS/s /,/, colored/VBD/colored the/DT/the vertex/NN/vertex black/NN/black /,/, took/VBD/took its/PRP$/its two/CD/two neighbors/NNS/neighbors and/CC/and put/VBD/put them/PRP/them into/IN/into the/DT/the queue/NNP/queue. i/PRP/i assigned/VBD/assigned them/PRP/them a/DT/a label/NN/label of/IN/of one/CD/one node/NN/node then/RB/then the/DT/the label/NN/label of/IN/of s/NNS/s /,/, so/RB/so the/DT/the label/NN/label of/IN/of s/NNS/s was/VBD/was 0/-NONE-/0 so/RB/so i/PRP/i gave/VBP/gave them/PRP/them both/DT/both of/IN/of them/PRP/them a/DT/a label/NN/label of/IN/of a/DT/a 1/CD/1. now/RB/now let/VB/let ?/./? s/NNS/s see/VBP/see what/WP/what the/DT/the procedure/NN/procedure here/RB/here would/MD/would be/NNP/be. i/PRP/i remove/VBP/remove the/DT/the front/NN/front element/NN/element of/IN/of the/DT/the queue/NN/queue which/WDT/which is/VBZ/is w/NNP/w. i/PRP/i will/MD/will color/VB/color it/PRP/it black/VB/black /,/, i/PRP/i will/MD/will look/VB/look at/IN/at its/PRP$/its neighbors/NNP/neighbors. how/WRB/how many/JJ/many neighbors/NNS/neighbors does/VBZ/does w/NN/w have/VBP/have ?/./? 3/CD/3 neighbors/NNS/neighbors s/NNS/s /,/, t/NN/t and/CC/and x/NNP/x. amongst/NN/amongst these/DT/these s/NNS/s already/RB/already is/VBZ/is black/JJ/black so/RB/so i/PRP/i don/VBP/don ?/./? t/NN/t touch/NN/touch it/PRP/it at/IN/at all/NNP/all. t/NN/t and/CC/and x/NN/x are/VBP/are white/JJ/white so/RB/so i/PRP/i will/MD/will put/VB/put them/PRP/them into/IN/into the/DT/the queue/JJ/queue and/CC/and color/NN/color them/PRP/them grey/NNP/grey. from/IN/from white/JJ/white i/NN/i color/NN/color grey/NN/grey /,/, grey/NN/grey color/NN/color gets/VBZ/gets colored/VBN/colored to/TO/to black/NNP/black. when/WRB/when an/DT/an element/NN/element gets/VBZ/gets inserted/VBN/inserted in/IN/in the/DT/the queue/NN/queue /,/, its/PRP$/its gets/NNS/gets colored/VBN/colored grey/NNP/grey. when/WRB/when it/PRP/it gets/VBZ/gets knocked/VBN/knocked off/RP/off from/IN/from the/DT/the queue/NN/queue /,/, it/PRP/it gets/VBZ/gets colored/VBN/colored black/NN/black /,/, as/IN/as simple/JJ/simple as/IN/as that/NNP/that. t/NN/t and/CC/and x/NN/x get/NN/get to/TO/to put/VB/put into/IN/into the/DT/the queue/NNP/queue. what/WP/what label/NN/label do/VBP/do they/PRP/they get/VB/get ?/./? they/PRP/they get/VBP/get a/DT/a label/NN/label of/IN/of one/CD/one more/JJR/more than/IN/than the/DT/the label/NN/label of/IN/of w/NNP/w. why/WRB/why one/CD/one more/JJR/more than/IN/than the/DT/the label/NN/label of/IN/of w/NN/w ?/./? it/PRP/it was/VBD/was because/IN/because of/IN/of w/NN/w /,/, the/DT/the t/NN/t and/CC/and x/NN/x came/VBD/came into/IN/into the/DT/the queue/NNP/queue. when/WRB/when i/PRP/i had/VBD/had knocked/VBN/knocked off/RP/off w/NN/w and/CC/and then/RB/then looked/VBD/looked at/IN/at its/PRP$/its adjacent/NN/adjacent vertices/NNS/vertices /,/, i/PRP/i have/VBP/have found/VBN/found t/NN/t and/CC/and x/NN/x so/IN/so they/PRP/they get/VBP/get label/NN/label of/IN/of one/CD/one more/JJR/more than/IN/than that/NNP/that. so/RB/so they/PRP/they get/VBP/get a/DT/a label/NN/label of/IN/of two/NNP/two. this/DT/this is/VBZ/is the/DT/the q/NN/q at/IN/at this/DT/this point/NNP/point. now/RB/now i/PRP/i look/VBP/look at/IN/at vertex/NN/vertex r/NN/r which/WDT/which is/VBZ/is the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? first/JJ/first color/NN/color it/PRP/it black/VBP/black /,/, look/NN/look at/IN/at its/PRP$/its adjacent/NN/adjacent vertices/NNS/vertices which/WDT/which are/VBP/are white/RB/white and/CC/and put/VBD/put them/PRP/them into/IN/into the/DT/the queue/NNP/queue. color/NN/color it/PRP/it black/VBP/black look/VBP/look at/IN/at its/PRP$/its adjacent/NN/adjacent vertices/NNS/vertices which/WDT/which are/VBP/are white/RB/white /,/, this/DT/this is/VBZ/is the/DT/the only/JJ/only vertex/NN/vertex which/WDT/which is/VBZ/is white/JJ/white /,/, put/VBD/put that/IN/that into/IN/into the/DT/the queue/JJ/queue with/IN/with the/DT/the label/NN/label equal/JJ/equal to/TO/to one/CD/one more/JJR/more than/IN/than the/DT/the label/NN/label of/IN/of r/NNP/r. that/IN/that ?/./? s/NNS/s what/WP/what this/DT/this is/VBZ/is and/CC/and this/DT/this get/NN/get a/DT/a grey/NN/grey color/NNP/color. once/RB/once again/RB/again you/PRP/you see/VBP/see all/DT/all the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are grey/RB/grey are/VBP/are sitting/VBG/sitting in/IN/in the/DT/the queue/NNP/queue. at/IN/at any/DT/any point/NN/point this/DT/this is/VBZ/is the/DT/the invariant/JJ/invariant you/PRP/you have/NNP/have. if/IN/if a/DT/a vertex/NN/vertex is/VBZ/is grey/NN/grey /,/, it/PRP/it is/VBZ/is in/IN/in the/DT/the queue/NNP/queue. if/IN/if a/DT/a vertex/NN/vertex has/VBZ/has not/RB/not yet/RB/yet been/VBN/been visited/VBN/visited it/PRP/it is/VBZ/is white/JJ/white /,/, if/IN/if a/DT/a vertex/NN/vertex has/VBZ/has been/VBN/been visited/VBN/visited and/CC/and removed/VBD/removed from/IN/from the/DT/the queue/NN/queue its/PRP$/its black/NNP/black. everyone/NN/everyone understands/VBZ/understands this/NNP/this. next/JJ/next vertex/NN/vertex we/PRP/we are/VBP/are going/VBG/going to/TO/to touch/JJ/touch is/VBZ/is t/NNP/t. we/PRP/we are/VBP/are going/VBG/going to/TO/to remove/VB/remove t/NN/t from/IN/from here/RB/here /,/, going/VBG/going to/TO/to look/VB/look at/IN/at its/PRP$/its adjacent/NN/adjacent vertices/NNP/vertices. how/WRB/how many/JJ/many adjacent/NN/adjacent vertices/NNS/vertices it/PRP/it has/VBZ/has ?/./? 3/CD/3 but/CC/but the/DT/the only/JJ/only vertex/NN/vertex which/WDT/which is/VBZ/is white/JJ/white is/VBZ/is u/NNP/u. it/PRP/it is/VBZ/is only/RB/only u/RB/u which/WDT/which will/MD/will get/VB/get entered/VBN/entered into/IN/into the/DT/the queue/JJ/queue and/CC/and nothing/NN/nothing else/RB/else and/CC/and u/VB/u will/MD/will get/VB/get colored/VBN/colored grey/NNP/grey. what/WP/what will/MD/will be/VB/be its/PRP$/its label/NN/label ?/./? /:/[ student/NN/student /:/: three/CD/three /CD/] 3/CD/3. u/NN/u will/MD/will get/VB/get colored/VBN/colored grey/NN/grey /,/, its/PRP$/its label/NN/label is/VBZ/is 3/CD/3 and/CC/and its/PRP$/its get/NN/get added/VBD/added to/TO/to the/DT/the queue/NNP/queue. now/RB/now i/PRP/i knock/VBP/knock x/NN/x out/IN/out of/IN/of the/DT/the queue/NN/queue /,/, it/PRP/it gets/VBZ/gets colored/VBN/colored black/NNP/black. i/PRP/i look/VBP/look at/IN/at its/PRP$/its neighbours/NNS/neighbours which/WDT/which are/VBP/are white/NNP/white. this/DT/this is/VBZ/is the/DT/the only/JJ/only one/CD/one which/WDT/which is/VBZ/is white/JJ/white /,/, this/DT/this gets/VBZ/gets a/DT/a label/NN/label of/IN/of a/DT/a three/CD/three /,/, it/PRP/it gets/VBZ/gets colored/VBN/colored grey/NN/grey and/CC/and it/PRP/it ?/./? s/NNS/s added/VBD/added to/TO/to the/DT/the queue/NNP/queue. so/RB/so y/JJ/y is/VBZ/is colored/VBN/colored grey/NN/grey /,/, gets/VBZ/gets a/DT/a label/NN/label three/CD/three and/CC/and is/VBZ/is added/VBN/added to/TO/to the/DT/the queue/NNP/queue. this/DT/this is/VBZ/is what/WP/what the/DT/the queue/NN/queue looks/VBZ/looks now/RB/now like/NNP/like. now/RB/now i/PRP/i remove/VBP/remove the/DT/the front/NN/front element/NN/element that/WDT/that ?/./? s/VBZ/s two/CD/two /,/, look/NN/look at/IN/at its/PRP$/its right/NN/right neighbours/NNS/neighbours /,/, it/PRP/it has/VBZ/has no/DT/no white/JJ/white neighbour/NN/neighbour nothing/NN/nothing needs/VBZ/needs to/TO/to be/VB/be done/NNP/done. it/PRP/it gets/VBZ/gets colored/VBN/colored black/NN/black and/CC/and we/PRP/we remove/VBP/remove it/PRP/it from/IN/from the/DT/the queue/NN/queue /,/, so/RB/so the/DT/the queue/NN/queue is/VBZ/is now/RB/now u/VBP/u and/CC/and y/NN/y only/NNP/only. so/RB/so i/PRP/i remove/VBP/remove u/PRP/u from/IN/from the/DT/the queue/NN/queue /,/, i/PRP/i color/VBP/color it/PRP/it black/VBP/black /,/, look/NN/look at/IN/at its/PRP$/its white/JJ/white neighbours/NNS/neighbours /,/, it/PRP/it does/VBZ/does not/RB/not have/VB/have any/DT/any white/JJ/white neighbour/NN/neighbour so/IN/so nothing/NN/nothing to/TO/to be/VB/be done/NNP/done. then/RB/then i/PRP/i look/VBP/look finally/RB/finally at/IN/at y/NN/y /,/, y/NN/y is/VBZ/is at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. i/PRP/i look/VBP/look at/IN/at its/PRP$/its white/JJ/white neighbours/NNS/neighbours /,/, no/DT/no white/NN/white neighbour/NN/neighbour nothing/NN/nothing needs/VBZ/needs to/TO/to be/VB/be done/NNP/done. this/DT/this gets/VBZ/gets removed/VBN/removed from/IN/from the/DT/the queue/NN/queue and/CC/and the/DT/the queue/NN/queue becomes/VBZ/becomes empty/NNP/empty. the/DT/the procedure/NN/procedure stops/NNS/stops when/WRB/when the/DT/the queue/NN/queue become/NN/become empty/NN/empty /,/, these/DT/these are/VBP/are the/DT/the labels/NNS/labels on/IN/on the/DT/the vertices/NNP/vertices. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 29/CD/29 /CD/) now/RB/now what/WP/what do/VBP/do these/DT/these labels/NNS/labels signify/VBP/signify ?/./? one/CD/one signifies/NNS/signifies that/WDT/that it/PRP/it was/VBD/was discussed/VBN/discussed in/IN/in the/DT/the first/JJ/first round/NN/round /,/, two/CD/two that/WDT/that it/PRP/it was/VBD/was discussed/VBN/discussed in/IN/in the/DT/the second/JJ/second and/CC/and three/CD/three that/WDT/that it/PRP/it was/VBD/was discovered/VBN/discovered in/IN/in the/DT/the third/JJ/third round/NNP/round. this/DT/this one/CD/one is/VBZ/is also/RB/also the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNP/s. /NNP/[ hindi/NN/hindi /:/] if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this vertex/NN/vertex u/NN/u /,/, there/EX/there are/VBP/are many/JJ/many paths/NNS/paths from/IN/from s/NNS/s to/TO/to u/NNP/u. i/PRP/i am/VBP/am interested/JJ/interested in/IN/in the/DT/the path/NN/path which/WDT/which has/VBZ/has the/DT/the least/JJS/least number/NN/number of/IN/of edges/NNS/edges on/IN/on it/PRP/it /,/, the/DT/the smallest/JJS/smallest number/NN/number of/IN/of edges/NNS/edges on/IN/on it/PRP/it and/CC/and the/DT/the path/NN/path with/IN/with the/DT/the smallest/JJS/smallest number/NN/number of/IN/of edges/NNS/edges is/VBZ/is this/DT/this path/NN/path with/IN/with three/CD/three edges/NNS/edges on/IN/on it/PRP/it and/CC/and so/RB/so this/DT/this is/VBZ/is label/NN/label three/NNP/three. we/PRP/we will/MD/will see/VB/see why/WRB/why this/DT/this is/VBZ/is getting/VBG/getting done/NN/done in/IN/in this/DT/this manner/NN/manner shortly/NNP/shortly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 41/CD/41 /CD/) so/RB/so one/CD/one more/JJR/more way/NN/way of/IN/of thinking/VBG/thinking of/IN/of this/DT/this so/RB/so that/IN/that you/PRP/you understand/VBP/understand this/DT/this completely/RB/completely /,/, i/PRP/i started/VBD/started from/IN/from this/NNP/this. in/IN/in the/DT/the first/JJ/first round/NN/round i/PRP/i am/VBP/am visiting/VBG/visiting the/DT/the adjacent/NN/adjacent vertices/NNS/vertices of/IN/of this/NNP/this. these/DT/these are/VBP/are the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are getting/VBG/getting a/DT/a label/NN/label of/IN/of one/NNP/one. these/DT/these are/VBP/are also/RB/also called/VBN/called level/NN/level one/CD/one vertices/NNS/vertices /,/, these/DT/these are/VBP/are the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are getting/VBG/getting a/DT/a label/NN/label of/IN/of a/DT/a one/NNP/one. in/IN/in the/DT/the next/JJ/next step/NN/step /,/, all/DT/all though/IN/though i/PRP/i am/VBP/am going/VBG/going one/CD/one vertex/NN/vertex at/IN/at a/DT/a time/NN/time but/CC/but now/RB/now the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are going/VBG/going to/TO/to get/VB/get a/DT/a label/NN/label of/IN/of two/CD/two will/MD/will be/VB/be vertices/NNS/vertices which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to these/NNP/these. which/WDT/which are/VBP/are these/DT/these vertices/NNS/vertices ?/./? these/DT/these are/VBP/are i/PRP/i and/CC/and c/NN/c /,/, so/RB/so these/DT/these are/VBP/are the/DT/the two/CD/two vertices/NNS/vertices which/WDT/which will/MD/will get/VB/get a/DT/a label/NN/label of/IN/of a/DT/a two/CD/two now/NNP/now. the/DT/the vertices/NNS/vertices which/WDT/which get/VB/get a/DT/a label/NN/label of/IN/of a/DT/a three/CD/three are/VBP/are the/DT/the ones/NNS/ones which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are at/IN/at two/CD/two and/CC/and they/PRP/they are/VBP/are basically/RB/basically m/JJ/m /,/, j/NN/j /,/, g/NN/g and/CC/and d/NNP/d. this/DT/this is/VBZ/is getting/VBG/getting a/DT/a label/NN/label of/IN/of a/DT/a three/NNP/three. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 02/CD/02 /CD/) the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are getting/VBG/getting the/DT/the label/NN/label of/IN/of a/DT/a four/CD/four would/MD/would be/VB/be the/DT/the one/CD/one which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are at/IN/at a/DT/a label/NN/label three/CD/three /,/, which/WDT/which are/VBP/are these/DT/these vertices/NNP/vertices. so/RB/so these/DT/these get/NN/get a/DT/a label/NN/label four/CD/four and/CC/and these/DT/these would/MD/would finally/RB/finally get/VB/get a/DT/a label/NN/label of/IN/of a/DT/a five/NNP/five. you/PRP/you can/MD/can think/VB/think of/IN/of a/DT/a breadth/NN/breadth first/RB/first search/NN/search as/IN/as dividing/VBG/dividing your/PRP$/your vertices/NNS/vertices or/CC/or partitioning/VBG/partitioning your/PRP$/your set/NN/set of/IN/of vertices/NNS/vertices into/IN/into levels/NNS/levels or/CC/or sets/NNP/sets. there/EX/there is/VBZ/is one/CD/one vertex/NN/vertex at/IN/at level/NN/level zero/NN/zero /,/, some/DT/some vertices/NNS/vertices at/IN/at level/NN/level one/CD/one /,/, some/DT/some vertices/NNS/vertices at/IN/at level/NN/level two/CD/two /,/, some/DT/some vertices/NNS/vertices at/IN/at level/NN/level three/CD/three and/CC/and so/RB/so on/NNP/on. what/WP/what will/MD/will be/VB/be the/DT/the number/NN/number of/IN/of levels/NNS/levels going/VBG/going to/TO/to be/VB/be ?/./? the/DT/the number/NN/number of/IN/of levels/NNS/levels would/MD/would be/VB/be the/DT/the maximum/NN/maximum distance/NN/distance of/IN/of any/DT/any vertex/NN/vertex from/IN/from s/NNP/s. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 56/CD/56 /CD/) now/RB/now this/DT/this is/VBZ/is what/WP/what the/DT/the algorithm/NN/algorithm is/VBZ/is /,/, so/RB/so let/VB/let ?/./? s/NNS/s run/VBP/run through/IN/through the/DT/the algorithm/NN/algorithm and/CC/and then/RB/then we/PRP/we will/MD/will look/VB/look at/IN/at the/DT/the other/JJ/other aspects/NNS/aspects of/IN/of the/DT/the algorithm/NNP/algorithm. initially/RB/initially every/DT/every vertex/NN/vertex is/VBZ/is given/VBN/given a/DT/a color/NN/color of/IN/of a/DT/a white/NNP/white. so/RB/so du/VB/du is/VBZ/is the/DT/the label/NN/label on/IN/on that/DT/that vertex/NN/vertex /,/, on/IN/on a/DT/a vertex/NN/vertex u/NN/u du/NN/du is/VBZ/is the/DT/the label/NN/label so/RB/so it/PRP/it ?/./? s/NNS/s initially/RB/initially infinite/JJ/infinite which/WDT/which means/VBZ/means i/PRP/i have/VBP/have not/RB/not put/VBN/put any/DT/any labels/NNS/labels on/IN/on it/PRP/it and/CC/and pi/VB/pi u/NN/u /,/, i/PRP/i will/MD/will come/VB/come to/TO/to what/WP/what pi/NN/pi u/VBP/u is/NNP/is. pi/NN/pi u/NN/u signifies/NNS/signifies the/DT/the predecessor/NN/predecessor vertex/NNP/vertex. the/DT/the vertex/NN/vertex because/IN/because of/IN/of which/WDT/which you/PRP/you got/VBD/got its/PRP$/its label/NNP/label. what/WP/what i/PRP/i mean/VBP/mean by/IN/by this/DT/this is/VBZ/is so/RB/so for/IN/for instance/NN/instance let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this vertex/NN/vertex c/NN/c here/NNP/here. this/DT/this got/NN/got a/DT/a label/NN/label of/IN/of 2/CD/2 which/WDT/which was/VBD/was the/DT/the vertex/NN/vertex because/IN/because of/IN/of which/WDT/which it/PRP/it got/VBD/got the/DT/the label/NN/label 2/CD/2 b/NN/b /,/, so/RB/so pi/VBP/pi of/IN/of c/NN/c would/MD/would be/VB/be b/NNP/b. what/WP/what is/VBZ/is the/DT/the pi/NN/pi of/IN/of k/NN/k ?/./? you/PRP/you can/MD/can tell/VB/tell me/PRP/me /,/, this/DT/this vertex/NN/vertex got/VBD/got its/PRP$/its label/NN/label from/IN/from either/DT/either this/DT/this or/CC/or this/NNP/this. i/PRP/i do/VBP/do not/RB/not know/VB/know which/WDT/which /,/, it/PRP/it could/MD/could be/VB/be any/NNP/any. we/PRP/we will/MD/will just/RB/just pick/VB/pick one/CD/one of/IN/of them/PRP/them arbitrarily/NNP/arbitrarily. this/DT/this is/VBZ/is the/DT/the initializing/NN/initializing all/DT/all vertices/NNS/vertices and/CC/and then/RB/then how/WRB/how do/VBP/do we/PRP/we begin/VB/begin ?/./? we/PRP/we color/VBP/color the/DT/the vertex/NN/vertex s/VBZ/s which/WDT/which is/VBZ/is our/PRP$/our starting/NN/starting vertex/NN/vertex grey/NN/grey /,/, we/PRP/we give/VBP/give it/PRP/it a/DT/a label/NN/label of/IN/of a/DT/a 0/CD/0. its/PRP$/its pi/NN/pi of/IN/of u/NN/u is/VBZ/is null/JJ/null because/IN/because it/PRP/it doesn/VBP/doesn ?/./? t/NN/t get/NN/get its/PRP$/its label/NN/label from/IN/from anyone/NN/anyone else/RB/else but/CC/but from/IN/from itself/PRP/itself and/CC/and we/PRP/we add/VBP/add it/PRP/it to/TO/to our/PRP$/our q/NNP/q. we/PRP/we insert/VBP/insert it/PRP/it into/IN/into our/PRP$/our queue/JJ/queue and/CC/and this/DT/this is/VBZ/is the/DT/the entire/JJ/entire process/NNP/process. this/DT/this green/JJ/green should/MD/should have/VB/have extended/VBN/extended all/DT/all the/DT/the way/NN/way here/NNP/here. what/WP/what we/PRP/we are/VBP/are doing/VBG/doing is/VBZ/is while/IN/while the/DT/the q/NN/q is/VBZ/is not/RB/not empty/JJ/empty /,/, we/PRP/we keep/VBP/keep repeating/VBG/repeating something/NNP/something. let/NN/let ?/./? s/NNS/s say/VBP/say we/PRP/we remove/VBP/remove the/DT/the element/NN/element from/IN/from the/DT/the head/NN/head of/IN/of the/DT/the queue/NN/queue /,/, so/RB/so u/RB/u is/VBZ/is the/DT/the element/NN/element from/IN/from the/DT/the head/NNP/head. we/PRP/we are/VBP/are not/RB/not removing/VBG/removing it/PRP/it yet/RB/yet /,/, so/RB/so u/RB/u is/VBZ/is the/DT/the element/NN/element at/IN/at the/DT/the head/NN/head of/IN/of the/DT/the queue/NNP/queue. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at all/DT/all the/DT/the adjacent/NN/adjacent vertices/NNS/vertices of/IN/of u/NNP/u. for/IN/for all/DT/all v/NN/v which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to u/VB/u /,/, if/IN/if the/DT/the color/NN/color of/IN/of v/NN/v is/VBZ/is white/JJ/white only/RB/only then/RB/then we/PRP/we do/VBP/do process/NN/process it/NNP/it. if/IN/if it/PRP/it is/VBZ/is already/RB/already grey/RB/grey or/CC/or black/VB/black /,/, we/PRP/we don/VBP/don ?/./? t/NN/t do/VB/do anything/NN/anything with/IN/with it/NNP/it. if/IN/if the/DT/the color/NN/color of/IN/of v/NN/v is/VBZ/is white/JJ/white then/RB/then what/WP/what do/VBP/do we/PRP/we do/VBP/do ?/./? we/PRP/we add/VBP/add it/PRP/it to/TO/to the/DT/the queue/NN/queue /,/, we/PRP/we color/VBP/color it/PRP/it grey/RB/grey and/CC/and we/PRP/we give/VBP/give it/PRP/it a/DT/a suitable/JJ/suitable label/NNP/label. what/WP/what is/VBZ/is the/DT/the label/NN/label we/PRP/we give/VBP/give it/PRP/it ?/./? d/NN/d of/IN/of u/NN/u plus/CC/plus 1/CD/1. whatever/NN/whatever was/VBD/was the/DT/the label/NN/label of/IN/of u/NN/u /,/, we/PRP/we add/VBP/add one/CD/one to/TO/to that/DT/that and/CC/and we/PRP/we give/VBP/give back/RB/back to/TO/to this/NNP/this. since/IN/since this/DT/this vertex/NN/vertex v/NN/v is/VBZ/is getting/VBG/getting its/PRP$/its label/NN/label from/IN/from u/NN/u /,/, pi/NN/pi of/IN/of v/NN/v becomes/VBZ/becomes u/NNP/u. we/PRP/we add/VBP/add the/DT/the vertex/NN/vertex v/NN/v /,/, such/JJ/such vertex/NN/vertex into/IN/into the/DT/the queue/JJ/queue and/CC/and once/RB/once you/PRP/you have/VB/have done/VBN/done it/PRP/it for/IN/for all/PDT/all the/DT/the vertices/NNS/vertices /,/, we/PRP/we do/VBP/do this/DT/this dequeue/NN/dequeue operation/NN/operation which/WDT/which is/VBZ/is we/PRP/we remove/VBP/remove u/PRP/u from/IN/from the/DT/the queue/NNP/queue. this/DT/this could/MD/could have/VB/have been/VBN/been done/VBN/done here/RB/here also/RB/also /,/, it/PRP/it could/MD/could have/VB/have been/VBN/been done/VBN/done at/IN/at the/DT/the end/NN/end /,/, it/PRP/it could/MD/could also/RB/also have/VB/have been/VBN/been done/VBN/done here/RB/here that/IN/that ?/./? s/NNS/s okay/VBP/okay and/CC/and u/NN/u is/VBZ/is colored/VBN/colored black/JJ/black to/TO/to signify/VB/signify that/IN/that it/PRP/it has/VBZ/has been/VBN/been removed/VBN/removed from/IN/from the/DT/the queue/NNP/queue. we/PRP/we keep/VBP/keep doing/VBG/doing this/DT/this till/NN/till the/DT/the queue/NN/queue has/VBZ/has an/DT/an element/NN/element in/IN/in it/NNP/it. does/VBZ/does everyone/NN/everyone understand/NN/understand what/WP/what i/PRP/i am/VBP/am saying/VBG/saying ?/./? /NN/[ student/NN/student /:/: so/RB/so for/IN/for initializing/VBG/initializing also/RB/also we/PRP/we have/VBP/have to/TO/to do/VB/do some/DT/some operations/NNS/operations like/IN/like breadth/NN/breadth first/RB/first search/NN/search /:/] what/WP/what do/VBP/do you/PRP/you mean/VB/mean for/IN/for initializing/NN/initializing ?/./? /:/[ student/NN/student /:/: making/VBG/making the/DT/the color/NN/color of/IN/of every/DT/every node/NN/node to/TO/to be/VB/be white/JJ/white /NN/] making/VBG/making the/DT/the color/NN/color of/IN/of every/DT/every node/NN/node to/TO/to be/VB/be a/DT/a white/JJ/white /,/, what/WP/what can/MD/can we/PRP/we do/VBP/do ?/./? what/WP/what is/VBZ/is color/NN/color ?/./? color/NN/color is/VBZ/is something/NN/something like/IN/like an/DT/an array/NNP/array. for/IN/for every/DT/every vertex/NN/vertex so/IN/so this/DT/this is/VBZ/is an/DT/an array/NN/array of/IN/of size/NN/size ?/./? /:/[ student/NN/student /:/: values/NNS/values into/IN/into it/PRP/it is/VBZ/is less/JJR/less than/IN/than the/DT/the value/NN/value we/PRP/we would/MD/would assign/VB/assign to/TO/to it/PRP/it /:/] but/CC/but we/PRP/we can/MD/can also/RB/also assign/VB/assign it/PRP/it /,/, you/PRP/you know/VBP/know it/PRP/it is/VBZ/is we/PRP/we are/VBP/are just/RB/just creating/VBG/creating an/DT/an array/NN/array /,/, so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say white/JJ/white is/VBZ/is zero/NNP/zero. so/RB/so just/RB/just assign/JJ/assign /,/, put/VBD/put zero/NN/zero to/TO/to all/DT/all the/DT/the entries/NNS/entries in/IN/in the/DT/the array/NNP/array. we/PRP/we just/RB/just giving/VBG/giving a/DT/a color/NN/color to/TO/to ?/./? each/DT/each of/IN/of these/DT/these color/NN/color d/NN/d and/CC/and pi/NN/pi will/MD/will have/VB/have to/TO/to be/VB/be separate/JJ/separate arrays/NNS/arrays indexed/VBN/indexed by/IN/by the/DT/the vertices/NNS/vertices /,/, we/PRP/we are/VBP/are just/RB/just assigning/VBG/assigning that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 09/CD/09 /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does the/DT/the breadth/NN/breadth first/RB/first search/NN/search procedure/NN/procedure take/VB/take ?/./? what/WP/what are/VBP/are we/PRP/we doing/VBG/doing ?/./? basically/RB/basically all/DT/all the/DT/the time/NN/time is/VBZ/is being/VBG/being spent/VBN/spent in/IN/in this/DT/this loop/NNP/loop. yes/VBZ/yes /,/, because/IN/because this/DT/this is/VBZ/is just/RB/just /,/, how/WRB/how much/JJ/much time/NN/time do/VBP/do i/PRP/i spend/VBP/spend here/RB/here ?/./? one/CD/one for/IN/for each/DT/each order/NN/order n/NN/n for/IN/for each/DT/each vertex/NN/vertex /,/, i/PRP/i am/VBP/am spending/VBG/spending constant/NN/constant amount/NN/amount of/IN/of time/NNP/time. how/WRB/how much/JJ/much time/NN/time do/VBP/do i/PRP/i spent/VBD/spent in/IN/in this/DT/this part/NN/part ?/./? constant/NN/constant time/NN/time and/CC/and here/RB/here /,/, all/DT/all the/DT/the time/NN/time is/VBZ/is getting/VBG/getting spent/NN/spent in/IN/in this/DT/this loop/NNP/loop. how/WRB/how many/JJ/many time/NN/time is/VBZ/is this/DT/this loop/NN/loop executed/VBD/executed ?/./? order/NN/order n/NN/n times/NNP/times. how/WRB/how many/JJ/many times/NNS/times is/VBZ/is this/DT/this part/NN/part of/IN/of the/DT/the loop/NN/loop executed/VBD/executed ?/./? this/DT/this is/VBZ/is two/CD/two loops/NNS/loops /,/, one/CD/one within/IN/within the/DT/the other/NNP/other. for/IN/for each/DT/each vertex/NN/vertex v/NN/v adjacent/NN/adjacent to/TO/to u/VB/u /,/, i/PRP/i am/VBP/am doing/NNP/doing. so/RB/so we/PRP/we are/VBP/are doing/VBG/doing as/IN/as much/JJ/much as/IN/as the/DT/the degree/NN/degree times/NNP/times. if/IN/if i/PRP/i look/VBP/look at/IN/at these/DT/these statements/NNS/statements they/PRP/they are/VBP/are being/VBG/being /,/, what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time i/PRP/i am/VBP/am spending/VBG/spending on/IN/on these/DT/these statements/NNS/statements ?/./? order/NN/order degree/NN/degree for/IN/for each/DT/each vertex/NN/vertex and/CC/and summed/VBD/summed over/RP/over all/DT/all the/DT/the degrees/NNS/degrees of/IN/of the/DT/the vertices/NNS/vertices which/WDT/which is/VBZ/is order/NN/order m/NN/m /,/, twice/NN/twice the/DT/the number/NN/number of/IN/of edges/NNP/edges. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at each/DT/each statement/NN/statement and/CC/and see/VB/see what/WP/what is/VBZ/is the/DT/the total/JJ/total time/NN/time /,/, what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum time/NN/time that/WDT/that could/MD/could be/VB/be spent/VBN/spent on/IN/on each/DT/each statement/NNP/statement. how/WRB/how many/JJ/many times/NNS/times the/DT/the statement/NN/statement is/VBZ/is executed/VBN/executed /,/, how/WRB/how many/JJ/many times/NNS/times the/DT/the statement/NN/statement 10/CD/10 executed/VBN/executed ?/./? /:/[ student/NN/student /:/: order/NN/order n/NN/n /:/] order/NN/order n/NNP/n. how/WRB/how many/JJ/many times/NNS/times is/VBZ/is statement/NN/statement 12/CD/12 executed/VBN/executed ?/./? /:/[ student/NN/student /:/: order/NN/order m/NN/m /:/] order/NN/order m/NN/m because/IN/because 12/CD/12 is/VBZ/is executed/VBN/executed degree/NN/degree many/JJ/many times/NNS/times for/IN/for each/DT/each of/IN/of the/DT/the vertices/NNP/vertices. so/RB/so order/JJR/order m/NN/m /,/, so/RB/so 12/CD/12 is/VBZ/is executed/VBN/executed order/NN/order m/NN/m times/NNS/times in/IN/in the/DT/the worst/JJS/worst case/NNP/case. similarly/RB/similarly if/IN/if 12/CD/12 is/VBZ/is executed/VBN/executed order/NN/order m/NN/m times/NNS/times so/RB/so 13/CD/13 /,/, 14/CD/14 /,/, 15/CD/15 and/CC/and 16/CD/16 could/MD/could also/RB/also be/VB/be executed/VBN/executed no/DT/no more/RBR/more than/IN/than order/NN/order m/NN/m times/NNP/times. actually/RB/actually you/PRP/you can/MD/can say/VB/say something/NN/something about/IN/about 16/CD/16 /,/, how/WRB/how many/JJ/many times/NNS/times is/VBZ/is 16/CD/16 executed/VBN/executed ?/./? /:/[ student/NN/student /:/: order/NN/order /:/] order/NN/order n/NN/n and/CC/and not/RB/not order/NN/order m/NN/m because/IN/because you/PRP/you enqueue/VBP/enqueue a/DT/a vertex/NN/vertex only/RB/only once/NNP/once. once/RB/once you/PRP/you enqueue/VBP/enqueue it/PRP/it /,/, it/PRP/it becomes/VBZ/becomes grey/NN/grey /,/, once/RB/once it/PRP/it get/VB/get removed/VBN/removed from/IN/from the/DT/the queue/NN/queue it/PRP/it becomes/VBZ/becomes black/NNP/black. you/PRP/you don/VBP/don ?/./? t/NN/t ever/RB/ever touch/JJ/touch it/PRP/it again/NNP/again. once/RB/once it/PRP/it becomes/VBZ/becomes black/JJ/black you/PRP/you don/VBP/don ?/./? t/NN/t ever/RB/ever put/VBN/put it/PRP/it back/RB/back into/IN/into the/DT/the queue/NNP/queue. you/PRP/you only/RB/only put/VBD/put a/DT/a white/NN/white vertex/NN/vertex into/IN/into the/DT/the queue/NNP/queue. in/IN/in fact/NN/fact this/DT/this statement/NN/statement 16/CD/16 here/RB/here is/VBZ/is executed/VBN/executed order/NN/order n/NN/n times/NNS/times and/CC/and so/RB/so this/DT/this is/VBZ/is also/RB/also executed/VBN/executed order/NN/order n/NN/n times/NNS/times and/CC/and this/DT/this is/VBZ/is also/RB/also executed/VBN/executed order/NN/order n/NN/n times/NNP/times. it/PRP/it is/VBZ/is only/RB/only this/DT/this if/IN/if statement/NN/statement which/WDT/which is/VBZ/is really/RB/really executed/VBN/executed order/NN/order m/NN/m times/NNP/times. yes/VBZ/yes /,/, you/PRP/you understand/VBP/understand why/WRB/why if/IN/if this/DT/this is/VBZ/is executed/VBN/executed order/NN/order n/NN/n times/NNS/times /,/, this/DT/this is/VBZ/is also/RB/also executed/VBN/executed ?/./? because/IN/because they/PRP/they are/VBP/are one/CD/one after/IN/after the/DT/the other/JJ/other with/IN/with no/DT/no condition/NN/condition in/IN/in between/IN/between them/NNP/them. in/IN/in any/DT/any case/NN/case the/DT/the total/NN/total time/NN/time spent/NN/spent on/IN/on the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is order/NN/order m/NN/m plus/CC/plus n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 18/CD/18 /CD/) let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the couple/NN/couple of/IN/of properties/NNS/properties of/IN/of bfs/NNP/bfs. bfs/NNS/bfs what/WP/what it/PRP/it is/VBZ/is doing/VBG/doing is/VBZ/is it/PRP/it starts/VBZ/starts from/IN/from a/DT/a certain/JJ/certain vertex/NN/vertex /,/, a/DT/a source/NN/source vertex/NN/vertex s/NNS/s and/CC/and it/PRP/it is/VBZ/is visiting/VBG/visiting all/DT/all the/DT/the vertices/NNS/vertices which/WDT/which can/MD/can be/VB/be reached/VBN/reached from/IN/from s/NNP/s. it/PRP/it will/MD/will visit/VB/visit all/DT/all such/JJ/such vertices/NNS/vertices which/WDT/which can/MD/can be/VB/be reached/VBN/reached from/IN/from s/NNP/s. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/DT/that ?/./? all/DT/all such/JJ/such vertices/NNS/vertices to/TO/to which/WDT/which there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from s/NNS/s /,/, all/DT/all those/DT/those vertices/NNS/vertices will/MD/will get/VB/get visited/VBN/visited which/WDT/which means/VBZ/means that/DT/that all/DT/all those/DT/those vertices/NNS/vertices which/WDT/which are/VBP/are in/IN/in the/DT/the connected/VBN/connected component/NN/component of/IN/of s/NNS/s /,/, connected/VBN/connected component/NN/component containing/VBG/containing s/NNS/s will/MD/will get/VB/get visited/NNP/visited. if/IN/if the/DT/the graph/NN/graph was/VBD/was in/IN/in more/JJR/more than/IN/than one/CD/one connected/VBN/connected component/NN/component /,/, if/IN/if the/DT/the graph/NN/graph had/VBD/had more/JJR/more than/IN/than one/CD/one connected/VBN/connected component/NN/component then/RB/then if/IN/if s/NNS/s is/VBZ/is in/IN/in a/DT/a certain/JJ/certain component/NN/component /,/, i/PRP/i will/MD/will only/RB/only visit/VB/visit those/DT/those vertices/NNP/vertices. the/DT/the vertices/NNS/vertices in/IN/in the/DT/the other/JJ/other connected/VBN/connected component/NN/component i/PRP/i will/MD/will never/RB/never be/VB/be able/JJ/able to/TO/to reach/VB/reach them/PRP/them at/IN/at all/NNP/all. the/DT/the first/JJ/first thing/NN/thing to/TO/to keep/VB/keep in/IN/in mind/NN/mind is/VBZ/is that/IN/that it/PRP/it will/MD/will discover/VB/discover all/DT/all the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are reachable/JJ/reachable from/IN/from a/DT/a source/NN/source vertex/NNP/vertex. if/IN/if a/DT/a vertex/NN/vertex v/NN/v is/VBZ/is at/IN/at level/NN/level i/PRP/i then/RB/then there/RB/there is/VBZ/is a/DT/a path/NN/path between/IN/between s/NNS/s and/CC/and v/NN/v with/IN/with i/PRP/i edges/NNS/edges on/IN/on it/NNP/it. i/PRP/i have/VBP/have not/RB/not told/VBN/told you/PRP/you what/WP/what a/DT/a bfs/VBZ/bfs tree/NN/tree is/VBZ/is ?/./? so/RB/so let/VB/let ?/./? s/NNS/s first/RB/first understand/VBP/understand what/WP/what a/DT/a bfs/VBZ/bfs tree/NN/tree is/NNP/is. so/RB/so my/PRP$/my slide/NN/slide order/NN/order is/VBZ/is a/DT/a bit/NN/bit wrong/JJ/wrong here/NNP/here. what/WP/what is/VBZ/is a/DT/a bfs/NN/bfs tree/NN/tree that/WDT/that we/PRP/we have/VBP/have generated/VBN/generated as/IN/as a/DT/a consequence/NN/consequence ?/./? so/RB/so recall/RB/recall that/IN/that for/IN/for each/DT/each vertex/NN/vertex /,/, i/PRP/i have/VBP/have kept/VBN/kept track/NN/track of/IN/of one/CD/one edge/NN/edge which/WDT/which gave/VBD/gave that/IN/that vertex/NN/vertex its/PRP$/its label/NNP/label. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 16/CD/16 /CD/) so/RB/so let/JJ/let me/PRP/me consider/VBP/consider the/DT/the following/VBG/following graph/NN/graph of/IN/of the/DT/the graph/NN/graph g/NNP/g. what/WP/what is/VBZ/is the/DT/the sub/NN/sub graph/NN/graph ?/./? the/DT/the set/NN/set of/IN/of vertices/NNS/vertices or/CC/or all/DT/all the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are reachable/JJ/reachable from/IN/from s/NNS/s /,/, all/DT/all those/DT/those vertices/NNS/vertices which/WDT/which have/VBP/have a/DT/a pi/NN/pi of/IN/of v/NN/v which/WDT/which is/VBZ/is not/RB/not null/JJ/null and/CC/and s/NNS/s was/VBD/was given/VBN/given a/DT/a pi/NN/pi of/IN/of v/NN/v which/WDT/which was/VBD/was null/NNP/null. so/RB/so pi/VBP/pi is/VBZ/is also/RB/also known/VBN/known as/IN/as the/DT/the predecessor/NNP/predecessor. each/DT/each of/IN/of the/DT/the vertices/NNS/vertices which/WDT/which have/VBP/have a/DT/a predecessor/NN/predecessor is/VBZ/is the/DT/the set/NN/set of/IN/of vertices/NNS/vertices vpi/NNP/vpi. every/DT/every vertex/NN/vertex is/VBZ/is given/VBN/given a/DT/a predecessor/NN/predecessor /,/, every/DT/every vertex/NN/vertex which/WDT/which was/VBD/was visited/VBN/visited given/VBN/given a/DT/a predecessor/NNP/predecessor. it/PRP/it is/VBZ/is basically/RB/basically the/DT/the set/NN/set of/IN/of all/DT/all vertices/NNS/vertices which/WDT/which are/VBP/are visited/NNP/visited. what/WP/what are/VBP/are the/DT/the edges/NNS/edges in/IN/in the/DT/the sub/NN/sub graph/NN/graph ?/./? the/DT/the edges/NNS/edges in/IN/in the/DT/the sub/NN/sub graph/NN/graph are/VBP/are the/DT/the edges/NNS/edges from/IN/from the/DT/the predecessor/NN/predecessor vertex/NN/vertex to/TO/to this/DT/this particular/JJ/particular vertex/NN/vertex for/IN/for every/DT/every vertex/NNP/vertex. let/NN/let me/PRP/me illustrate/VBP/illustrate this/NNP/this. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this picture/NN/picture here/NNP/here. this/DT/this picture/NN/picture if/IN/if i/PRP/i ignore/VBP/ignore the/DT/the dotted/VBN/dotted edges/NNS/edges /,/, if/IN/if i/PRP/i just/RB/just keep/VB/keep the/DT/the dark/JJ/dark edges/NNS/edges with/IN/with me/PRP/me /,/, the/DT/the solid/JJ/solid edges/NNS/edges they/PRP/they are/VBP/are my/PRP$/my ?/./? this/DT/this is/VBZ/is the/DT/the sub/NN/sub graph/NN/graph that/WDT/that i/PRP/i am/VBP/am talking/VBG/talking about/NNP/about. note/NN/note that/IN/that each/DT/each of/IN/of these/DT/these vertices/NNS/vertices has/VBZ/has a/DT/a predecessor/NN/predecessor except/IN/except for/IN/for this/DT/this starting/NN/starting vertex/NN/vertex /,/, this/DT/this has/VBZ/has no/DT/no predecessor/NNP/predecessor. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 41/CD/41 /CD/) what/WP/what is/VBZ/is predecessor/NN/predecessor of/IN/of this/DT/this ?/./? it/PRP/it was/VBD/was this/DT/this /,/, the/DT/the predecessor/NN/predecessor of/IN/of this/DT/this was/VBD/was this/DT/this and/CC/and the/DT/the predecessor/NN/predecessor of/IN/of this/DT/this was/VBD/was this/NNP/this. so/RB/so these/DT/these are/VBP/are 3/CD/3 edges/NNS/edges that/WDT/that i/PRP/i am/VBP/am including/VBG/including in/IN/in my/PRP$/my sub/NN/sub graph/NNP/graph. the/DT/the predecessor/NN/predecessor of/IN/of this/DT/this is/VBZ/is this/DT/this /,/, the/DT/the predecessor/NN/predecessor of/IN/of this/DT/this is/VBZ/is this/DT/this one/CD/one /,/, this/DT/this was/VBD/was level/NN/level 2/CD/2. at/IN/at level/NN/level 3/CD/3 when/WRB/when i/PRP/i had/VBD/had vertices/NNS/vertices /,/, this/DT/this has/VBZ/has the/DT/the predecessor/NN/predecessor as/IN/as this/DT/this /,/, this/DT/this had/VBD/had a/DT/a predecessor/NN/predecessor let/NN/let ?/./? s/NNS/s say/VBP/say this/NNP/this. this/DT/this has/VBZ/has its/PRP$/its predecessor/NN/predecessor this/DT/this /,/, n/NN/n has/VBZ/has i/PRP/i as/IN/as its/PRP$/its predecessor/NN/predecessor /,/, m/NN/m has/VBZ/has i/PRP/i as/IN/as its/PRP$/its predecessor/NNP/predecessor. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 00/CD/00 /CD/) is/VBZ/is this/DT/this clear/JJ/clear to/TO/to everyone/NN/everyone ?/./? because/IN/because this/DT/this vertex/NN/vertex was/VBD/was discovered/VBN/discovered because/IN/because of/IN/of i/NNP/i. when/WRB/when i/PRP/i took/VBD/took i/PRP/i out/IN/out from/IN/from my/PRP$/my queue/NN/queue and/CC/and looked/VBD/looked at/IN/at its/PRP$/its adjacent/NN/adjacent vertices/NNS/vertices which/WDT/which were/VBD/were not/RB/not yet/RB/yet visited/VBN/visited which/WDT/which are/VBP/are colored/VBN/colored white/JJ/white then/RB/then i/PRP/i found/VBD/found m/NN/m n/NN/n and/CC/and j/NN/j /,/, so/RB/so m/NN/m n/NN/n and/CC/and j/NN/j have/VBP/have as/RB/as their/PRP$/their predecessor/NN/predecessor vertex/NN/vertex i/PRP/i and/CC/and d/VBD/d and/CC/and g/NN/g have/VBP/have as/RB/as their/PRP$/their predecessor/NN/predecessor vertex/NN/vertex c/NN/c /,/, k/NN/k could/MD/could have/VB/have g/NN/g or/CC/or j/NN/j as/IN/as its/PRP$/its predecessor/NNP/predecessor. let/NN/let ?/./? s/NNS/s say/VBP/say we/PRP/we decided/VBD/decided g/NN/g as/IN/as its/PRP$/its predecessor/NN/predecessor and/CC/and h/NN/h as/IN/as d/NN/d as/IN/as its/PRP$/its predecessor/NN/predecessor and/CC/and l/NN/l has/VBZ/has g/VBN/g as/IN/as its/PRP$/its predecessor/NNP/predecessor. these/DT/these are/VBP/are the/DT/the predecessors/NNS/predecessors and/CC/and then/RB/then finally/RB/finally p/VB/p has/VBZ/has l/NN/l and/CC/and o/NN/o has/VBZ/has k/NN/k as/IN/as its/PRP$/its predecessor/NNP/predecessor. /NNP/[ student/NN/student /:/: g/NN/g and/CC/and j/NN/j are/VBP/are at/IN/at the/DT/the same/JJ/same level/NN/level /:/] g/NN/g and/CC/and j/NN/j are/VBP/are at/IN/at the/DT/the same/JJ/same level/NN/level /,/, yes/NNP/yes. why/WRB/why is/VBZ/is not/RB/not ?/./? /:/[ student/NN/student /:/: not/RB/not necessary/JJ/necessary /NN/] it/PRP/it is/NNP/is. they/PRP/they both/DT/both /,/, why/WRB/why are/VBP/are they/PRP/they at/IN/at the/DT/the same/JJ/same level/NN/level ?/./? because/IN/because they/PRP/they both/DT/both get/NN/get the/DT/the same/JJ/same label/NN/label /,/, same/JJ/same level/NN/level number/NN/number /:/[ student/NN/student /:/: g/NN/g is/VBZ/is not/RB/not necessary/JJ/necessary /NN/] they/PRP/they would/MD/would /,/, it/PRP/it is/VBZ/is necessary/JJ/necessary because/IN/because they/PRP/they are/VBP/are both/DT/both adjacent/NN/adjacent to/TO/to vertices/NNS/vertices which/WDT/which have/VBP/have label/NN/label two/CD/two /,/, g/JJ/g is/VBZ/is adjacent/JJ/adjacent to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is ?/./? /:/[ student/NN/student /:/: is/VBZ/is but/CC/but i/PRP/i am/VBP/am saying/VBG/saying for/IN/for deciding/VBG/deciding for/IN/for an/DT/an element/NN/element k/NN/k which/WDT/which has/VBZ/has two/CD/two predecessors/NNS/predecessors /:/] yeah/NN/yeah /:/[ student/NN/student /:/: you/PRP/you will/MD/will see/VB/see which/WDT/which which/WDT/which predecessor/NN/predecessor has/VBZ/has the/DT/the shortest/JJS/shortest label/NN/label /:/] no/DT/no /,/, both/DT/both will/MD/will have/VB/have the/DT/the same/JJ/same label/NN/label then/NNP/then. /NNP/[ student/NN/student /:/: then/RB/then you/PRP/you will/MD/will not/RB/not assign/VB/assign /:/] both/DT/both will/MD/will have/VB/have the/DT/the same/JJ/same label/NNP/label. if/IN/if there/EX/there was/VBD/was such/JJ/such a/DT/a /,/, you/PRP/you can/MD/can not/RB/not have/VB/have a/DT/a vertex/NN/vertex which/WDT/which has/VBZ/has two/CD/two predecessors/NNS/predecessors at/IN/at different/JJ/different levels/NNP/levels. /NNP/[ student/NN/student /:/: but/CC/but this/DT/this we/PRP/we only/RB/only call/VBP/call ordered/VBN/ordered at/IN/at which/WDT/which order/NN/order can/MD/can be/VB/be different/JJ/different that/IN/that we/PRP/we can/MD/can /VB/] this/DT/this is/VBZ/is the/DT/the predecessor/NN/predecessor information/NN/information and/CC/and these/DT/these solid/JJ/solid lines/NNS/lines now/RB/now form/NN/form a/DT/a spanning/NN/spanning tree/NNP/tree. why/WRB/why do/VBP/do they/PRP/they form/NN/form a/DT/a spanning/NN/spanning tree/NN/tree ?/./? how/WRB/how many/JJ/many solid/JJ/solid lines/NNS/lines are/VBP/are here/RB/here ?/./? how/WRB/how many/JJ/many solid/JJ/solid lines/NNS/lines do/VBP/do i/PRP/i have/VB/have ?/./? /:/[ student/NN/student /:/: n/NN/n /:/- 1/CD/1 /CD/] n/NN/n /:/- 1/CD/1 /,/, yes/NNP/yes. why/WRB/why n/NN/n /:/- 1/CD/1 and/CC/and not/RB/not n/VB/n ?/./? there/EX/there is/VBZ/is no/DT/no edge/NN/edge entering/VBG/entering a/DT/a because/NN/because a/DT/a did/VBD/did not/RB/not have/VB/have any/DT/any predecessor/NNP/predecessor. every/DT/every other/JJ/other vertex/NN/vertex has/VBZ/has a/DT/a predecessor/NN/predecessor /,/, for/IN/for every/DT/every other/JJ/other edge/NN/edge there/EX/there is/VBZ/is one/CD/one solid/JJ/solid line/NN/line /,/, exactly/RB/exactly one/NNP/one. so/RB/so exactly/RB/exactly n/JJ/n minus/NN/minus 1/CD/1 edges/NNP/edges. using/NN/using these/DT/these solid/JJ/solid lines/NNS/lines i/PRP/i can/MD/can go/VB/go from/IN/from a/DT/a to/TO/to any/DT/any other/JJ/other vertex/NNP/vertex. yes/NNS/yes /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a solid/JJ/solid line/NN/line entering/VBG/entering here/RB/here that/IN/that means/NNS/means that/WDT/that i/PRP/i can/MD/can come/VB/come to/TO/to this/DT/this vertex/NN/vertex from/IN/from that/DT/that vertex/NN/vertex and/CC/and there/EX/there is/VBZ/is a/DT/a solid/JJ/solid line/NN/line entering/VBG/entering here/RB/here /,/, so/RB/so i/PRP/i can/MD/can come/VB/come to/TO/to this/DT/this vertex/NN/vertex /,/, from/IN/from there/EX/there is/VBZ/is a/DT/a predecessor/NN/predecessor of/IN/of that/DT/that and/CC/and there/EX/there is/VBZ/is a/DT/a solid/JJ/solid line/NN/line entering/VBG/entering here/RB/here /,/, so/RB/so i/PRP/i can/MD/can come/VB/come to/TO/to this/DT/this vertex/NN/vertex from/IN/from some/DT/some other/JJ/other and/CC/and so/IN/so on/NNP/on. so/IN/so eventually/RB/eventually i/PRP/i hit/VBP/hit the/DT/the root/NNP/root. basically/RB/basically starting/VBG/starting from/IN/from s/NNS/s /,/, i/PRP/i can/MD/can get/VB/get to/TO/to every/DT/every other/JJ/other vertex/NNP/vertex. this/DT/this is/VBZ/is a/DT/a tree/NN/tree /,/, it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected graph/NNP/graph. these/DT/these solid/JJ/solid lines/NNS/lines form/NN/form a/DT/a connected/VBN/connected graph/NN/graph with/IN/with exactly/RB/exactly n/JJ/n minus/NN/minus 1/CD/1 edges/NNP/edges. it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a spanning/NN/spanning tree/NNP/tree. recall/NN/recall that/WDT/that we/PRP/we said/VBD/said that/IN/that if/IN/if a/DT/a connected/VBN/connected graph/NN/graph has/VBZ/has no/DT/no cycles/NNS/cycles in/IN/in it/PRP/it then/RB/then it/PRP/it has/VBZ/has n/VBN/n minus/NN/minus 1/CD/1 edges/NNP/edges. if/IN/if a/DT/a connected/VBN/connected graph/NN/graph has/VBZ/has n/VBN/n minus/NN/minus 1/CD/1 edges/NNS/edges then/RB/then it/PRP/it has/VBZ/has no/DT/no cycles/NNS/cycles in/IN/in it/PRP/it and/CC/and it/PRP/it is/VBZ/is a/DT/a tree/NNP/tree. this/DT/this is/VBZ/is what/WP/what we/PRP/we have/NNP/have. this/DT/this is/VBZ/is called/VBN/called the/DT/the breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree /,/, the/DT/the bfs/NNS/bfs tree/NNP/tree. this/DT/this spanning/NN/spanning tree/NN/tree that/WDT/that we/PRP/we have/VBP/have which/WDT/which is/VBZ/is the/DT/the solid/JJ/solid lines/NNS/lines is/VBZ/is the/DT/the breadth/NN/breadth first/RB/first search/NN/search tree/NNP/tree. i/PRP/i think/VBP/think in/IN/in both/DT/both of/IN/of the/DT/the previous/JJ/previous examples/NNS/examples i/PRP/i had/VBD/had this/NNP/this. this/DT/this is/VBZ/is the/DT/the breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree here/RB/here /,/, the/DT/the blue/JJ/blue lines/NNS/lines they/PRP/they form/VBP/form the/DT/the breadth/NN/breadth first/RB/first search/NN/search tree/NNP/tree. once/RB/once again/RB/again for/IN/for each/DT/each vertex/NN/vertex /,/, i/PRP/i have/VBP/have just/RB/just darkened/VBN/darkened the/DT/the line/NNP/line. i/PRP/i have/VBP/have not/RB/not drawn/VBN/drawn the/DT/the arrows/NNS/arrows here/RB/here but/CC/but i/PRP/i have/VBP/have just/RB/just darkened/VBN/darkened the/DT/the line/NN/line because/IN/because of/IN/of which/WDT/which was/VBD/was corresponded/VBN/corresponded to/TO/to the/DT/the predecessor/NN/predecessor /,/, because/IN/because of/IN/of which/WDT/which this/DT/this vertex/NN/vertex got/VBD/got its/PRP$/its label/NNP/label. this/DT/this vertex/NN/vertex got/VBD/got its/PRP$/its label/NN/label 2/CD/2 because/IN/because of/IN/of this/DT/this vertex/NN/vertex this/DT/this got/NN/got its/PRP$/its label/NN/label 2/CD/2 because/IN/because of/IN/of this/DT/this vertex/NN/vertex and/CC/and so/RB/so i/PRP/i have/VBP/have darkened/VBN/darkened these/DT/these lines/NNS/lines and/CC/and this/DT/this forms/NNS/forms your/PRP$/your spanning/NN/spanning tree/NN/tree so/RB/so this/DT/this is/VBZ/is the/DT/the breadth/NN/breadth first/RB/first search/NN/search tree/NNP/tree. let/NN/let ?/./? s/NNS/s quickly/RB/quickly go/VBP/go on/NNP/on. this/DT/this is/VBZ/is the/DT/the breadth/NN/breadth first/RB/first search/NN/search tree/NNP/tree. i/PRP/i will/MD/will switch/VB/switch over/IN/over to/TO/to this/DT/this screen/NN/screen to/TO/to show/VB/show you/PRP/you something/NNP/something. i/PRP/i did/VBD/did not/NNP/not. so/RB/so what/WP/what has/VBZ/has really/RB/really happened/VBN/happened is/VBZ/is that/IN/that we/PRP/we started/VBD/started from/IN/from this/DT/this vertex/NN/vertex s/VBZ/s /,/, these/DT/these were/VBD/were my/PRP$/my vertices/NNS/vertices at/IN/at level/NN/level 1/CD/1 /,/, these/DT/these were/VBD/were my/PRP$/my vertices/NNS/vertices at/IN/at level/NN/level 2/CD/2 and/CC/and so/RB/so on/NNP/on. let/VB/let ?/./? s/NNS/s say/VBP/say the/DT/the largest/JJS/largest level/NN/level was/VBD/was 7/CD/7. now/RB/now this/DT/this will/MD/will answer/VB/answer some/DT/some of/IN/of your/PRP$/your questions/NNS/questions also/NNP/also. when/WRB/when i/PRP/i was/VBD/was at/IN/at s/NNS/s /,/, all/DT/all these/DT/these vertices/NNS/vertices which/WDT/which are/VBP/are here/RB/here at/IN/at level/NN/level 1/CD/1 are/VBP/are adjacent/JJ/adjacent to/TO/to vertices/NNS/vertices in/IN/in s/NNP/s. that/IN/that ?/./? s/NNS/s why/WRB/why they/PRP/they are/VBP/are at/IN/at level/NN/level 1/CD/1. the/DT/the vertices/NNS/vertices in/IN/in level/NN/level 2/CD/2 are/VBP/are all/DT/all adjacent/NN/adjacent to/TO/to vertices/NNS/vertices of/IN/of level/NN/level 1/CD/1. that/WDT/that ?/./? s/VBZ/s why/WRB/why they/PRP/they got/VBD/got the/DT/the level/NN/level 2/CD/2 /,/, number/NN/number label/NN/label 2/CD/2. they/PRP/they got/VBD/got a/DT/a label/NN/label 2/CD/2 because/IN/because they/PRP/they were/VBD/were adjacent/JJ/adjacent to/TO/to some/DT/some vertex/NN/vertex /,/, may/MD/may be/VB/be more/RBR/more than/IN/than one/CD/one but/CC/but they/PRP/they were/VBD/were adjacent/JJ/adjacent to/TO/to some/DT/some vertex/NN/vertex in/IN/in level/NN/level 1/CD/1. could/MD/could these/VB/these vertices/NNS/vertices have/VBP/have been/VBN/been adjacent/JJ/adjacent to/TO/to s/NNS/s ?/./? they/PRP/they would/MD/would have/VB/have been/VBN/been in/IN/in level/NN/level 1/CD/1 because/IN/because when/WRB/when i/PRP/i looked/VBD/looked at/IN/at all/DT/all the/DT/the adjacent/NN/adjacent vertices/NNS/vertices of/IN/of s/NNS/s /,/, i/PRP/i would/MD/would have/VB/have discovered/VBN/discovered this/DT/this vertex/NN/vertex and/CC/and put/VBD/put it/PRP/it level/NN/level 1/CD/1 instead/NNP/instead. so/RB/so such/JJ/such an/DT/an edge/NN/edge can/MD/can not/RB/not appear/NNP/appear. this/DT/this is/VBZ/is the/DT/the nice/JJ/nice thing/NN/thing about/IN/about structure/NN/structure that/IN/that you/PRP/you get/NNP/get. i/PRP/i am/VBP/am not/RB/not showing/VBG/showing the/DT/the tree/NN/tree edges/NNS/edges here/RB/here /,/, i/PRP/i am/VBP/am just/RB/just showing/VBG/showing all/DT/all the/DT/the edges/NNS/edges of/IN/of the/DT/the graph/NN/graph now/NNP/now. all/DT/all the/DT/the edges/NNS/edges of/IN/of the/DT/the graph/NN/graph just/RB/just go/VBP/go between/IN/between adjacent/NN/adjacent levels/NNP/levels. they/PRP/they can/MD/can not/RB/not skip/VB/skip a/DT/a level/NNP/level. i/PRP/i can/MD/can not/RB/not have/VB/have an/DT/an edge/NN/edge which/WDT/which skips/NNS/skips a/DT/a level/NN/level /,/, it/PRP/it can/MD/can not/RB/not go/VB/go like/IN/like this/NNP/this. this/DT/this can/MD/can not/RB/not happen/NNP/happen. why/WRB/why ?/./? because/IN/because when/WRB/when i/PRP/i was/VBD/was this/DT/this vertex/NN/vertex /,/, would/MD/would then/RB/then have/VB/have been/VBN/been in/IN/in this/DT/this level/NN/level instead/NNP/instead. i/PRP/i made/VBD/made a/DT/a small/JJ/small mistake/NNP/mistake. i/PRP/i said/VBD/said all/DT/all the/DT/the edges/NNS/edges go/VBP/go between/IN/between adjacent/NN/adjacent levels/NNP/levels. they/PRP/they could/MD/could also/RB/also go/VB/go within/IN/within the/DT/the same/JJ/same level/NN/level /,/, yes/NNP/yes. why/WRB/why could/MD/could they/PRP/they ?/./? i/PRP/i could/MD/could easily/RB/easily have/VB/have this/NNP/this. this/DT/this vertex/NN/vertex was/VBD/was adjacent/JJ/adjacent /,/, these/DT/these two/CD/two vertices/NNS/vertices were/VBD/were adjacent/NN/adjacent to/TO/to s/NNS/s but/CC/but they/PRP/they were/VBD/were also/RB/also adjacent/JJ/adjacent to/TO/to each/DT/each other/JJ/other /,/, no/DT/no harm/NN/harm even/RB/even later/NNP/later. this/DT/this is/VBZ/is what/WP/what the/DT/the graph/NN/graph looks/VBZ/looks like/IN/like now/RB/now and/CC/and this/DT/this is/VBZ/is the/DT/the important/JJ/important property/NN/property of/IN/of breadth/NN/breadth first/RB/first search/NN/search that/IN/that you/PRP/you have/VBP/have to/TO/to keep/VB/keep in/IN/in mind/NNP/mind. certain/JJ/certain edges/NNS/edges we/PRP/we would/MD/would call/VB/call them/PRP/them tree/VB/tree edges/NNS/edges /,/, so/RB/so this/DT/this is/VBZ/is my/PRP$/my bfs/NNS/bfs tree/VBP/tree /,/, this/DT/this edge/NNP/edge. so/RB/so my/PRP$/my bfs/NNS/bfs tree/VBP/tree would/MD/would look/VB/look like/IN/like this/DT/this now/NNP/now. let/VBD/let ?/./? s/NNS/s say/VBP/say these/DT/these edges/NNS/edges and/CC/and then/RB/then from/IN/from each/DT/each one/CD/one of/IN/of them/PRP/them /,/, i/PRP/i have/VBP/have let/VBN/let ?/./? s/NNS/s say/VBP/say something/NN/something like/IN/like this/NNP/this. i/PRP/i am/VBP/am basically/RB/basically covering/VBG/covering all/DT/all these/DT/these edges/NNP/edges. for/IN/for each/DT/each of/IN/of these/DT/these vertices/NNS/vertices is/VBZ/is getting/VBG/getting its/PRP$/its level/NN/level number/NN/number because/IN/because of/IN/of certain/JJ/certain vertex/NN/vertex at/IN/at the/DT/the previous/JJ/previous level/NN/level and/CC/and it/PRP/it ?/./? s/NNS/s this/DT/this edge/NN/edge having/VBG/having through/IN/through did/JJ/did in/IN/in my/PRP$/my bfs/NNS/bfs tree/NNP/tree. this/DT/this is/VBZ/is what/WP/what my/PRP$/my bfs/NNS/bfs tree/VBP/tree /:/[ student/NN/student /:/: from/IN/from the/DT/the edges/NNS/edges that/WDT/that through/IN/through from/IN/from elements/NNS/elements of/IN/of the/DT/the each/DT/each other/JJ/other if/IN/if we/PRP/we have/VBP/have two/CD/two elements/NNS/elements of/IN/of the/DT/the same/JJ/same level/NN/level in/IN/in the/DT/the /NN/] /:/[ student/NN/student /:/: we/PRP/we we/PRP/we wont/VBP/wont count/NN/count those/DT/those /NNP/] no/DT/no /,/, if/IN/if i/PRP/i have/VBP/have an/DT/an edge/NN/edge between/IN/between two/CD/two vertices/NNS/vertices of/IN/of the/DT/the same/JJ/same level/NN/level /,/, such/JJ/such an/DT/an edge/NN/edge /,/, this/DT/this edge/NN/edge was/VBD/was not/RB/not part/NN/part of/IN/of bfs/NNS/bfs tree/NNP/tree. why/WRB/why ?/./? what/WP/what are/VBP/are the/DT/the edges/NNS/edges which/WDT/which are/VBP/are in/IN/in the/DT/the bfs/NNS/bfs tree/VBP/tree ?/./? /:/[ student/NN/student /:/: solid/JJ/solid /NN/] the/DT/the predecessor/NNP/predecessor. this/DT/this vertex/NN/vertex did/VBD/did not/RB/not get/VB/get its/PRP$/its level/NN/level number/NN/number because/IN/because of/IN/of this/DT/this vertex/NNP/vertex. it/PRP/it got/VBD/got its/PRP$/its level/NN/level number/NN/number because/IN/because of/IN/of this/DT/this vertex/NNP/vertex. it/PRP/it is/VBZ/is this/DT/this edge/NN/edge which/WDT/which would/MD/would be/VB/be part/NN/part of/IN/of the/DT/the bfs/NNS/bfs tree/VBP/tree and/CC/and not/RB/not this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 24/CD/24 /CD/) let/NN/let me/PRP/me /:/[ student/NN/student /:/: multiple/NN/multiple edges/NNS/edges leading/VBG/leading to/TO/to a/DT/a node/NN/node we/PRP/we take/VBP/take only/RB/only one/CD/one /CD/] we/PRP/we take/VBP/take only/RB/only one/NNP/one. we/PRP/we have/VBP/have that/IN/that /,/, so/RB/so just/RB/just to/TO/to show/VB/show you/PRP/you all/DT/all those/DT/those things/NNS/things i/PRP/i just/RB/just said/VBD/said to/TO/to you/PRP/you /,/, i/PRP/i had/VBD/had organized/VBN/organized it/PRP/it like/IN/like levels/NNS/levels but/CC/but it/PRP/it is/VBZ/is the/DT/the same/JJ/same thing/NN/thing happening/VBG/happening here/NNP/here. these/DT/these are/VBP/are the/DT/the levels/NNS/levels zeroth/VBP/zeroth level/NN/level /,/, level/NN/level 1/CD/1 /,/, level/NN/level 2/CD/2 /,/, level/NN/level 3/LS/3 /,/, level/NN/level 4/CD/4 /,/, level/NN/level 5/CD/5. as/IN/as you/PRP/you can/MD/can see/VB/see all/PDT/all edges/NNS/edges are/VBP/are going/VBG/going either/RB/either between/IN/between adjacent/NN/adjacent levels/NNS/levels or/CC/or within/IN/within the/DT/the same/JJ/same level/NNP/level. this/DT/this vertex/NN/vertex could/MD/could have/VB/have got/VBN/got its/PRP$/its level/NN/level number/NN/number from/IN/from either/DT/either this/DT/this vertex/NN/vertex or/CC/or it/PRP/it ?/./? s/NNS/s this/DT/this vertex/NN/vertex /,/, so/RB/so i/PRP/i picked/VBD/picked one/CD/one arbitrarily/NN/arbitrarily and/CC/and this/DT/this i/NN/i included/VBD/included in/IN/in my/PRP$/my bfs/NNS/bfs tree/NNP/tree. the/DT/the bfs/NNS/bfs tree/VBP/tree is/VBZ/is not/RB/not necessarily/RB/necessarily unique/JJ/unique but/CC/but the/DT/the level/NN/level number/NN/number of/IN/of each/DT/each vertex/NN/vertex will/MD/will be/VB/be unique/NNP/unique. why/WRB/why would/MD/would it/PRP/it be/VB/be unique/JJ/unique ?/./? the/DT/the level/NN/level number/NN/number of/IN/of a/DT/a vertex/NN/vertex would/MD/would be/VB/be the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to that/DT/that vertex/NNP/vertex. why/WRB/why shortest/JJS/shortest path/NN/path ?/./? we/PRP/we have/VBP/have not/RB/not proved/VBN/proved yet/NNP/yet. if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from a/DT/a to/TO/to a/DT/a certain/JJ/certain vertex/NN/vertex of/IN/of length/NN/length 6/CD/6 then/RB/then this/DT/this certain/JJ/certain vertex/NN/vertex lets/NNS/lets say/VBP/say whatever/RB/whatever z/NN/z /,/, will/MD/will get/VB/get a/DT/a label/NN/label of/IN/of at/IN/at most/JJS/most 6/CD/6. if/IN/if the/DT/the shortest/JJS/shortest path/NN/path was/VBD/was of/IN/of length/NN/length 4/CD/4 then/RB/then this/DT/this vertex/NN/vertex can/MD/can not/RB/not get/VB/get a/DT/a label/NN/label of/IN/of more/JJR/more than/IN/than a/DT/a 4/CD/4 because/IN/because on/IN/on that/DT/that path/NNP/path. if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path of/IN/of length/NN/length 4/CD/4 /,/, what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? there/EX/there is/VBZ/is s/NNS/s /,/, there/EX/there is/VBZ/is a/DT/a first/RB/first vertex/NN/vertex /,/, the/DT/the second/JJ/second vertex/NN/vertex /,/, the/DT/the third/JJ/third vertex/NN/vertex and/CC/and then/RB/then this/DT/this vertex/NN/vertex z/NNP/z. then/RB/then the/DT/the first/JJ/first vertex/NN/vertex would/MD/would get/VB/get a/DT/a label/NN/label level/NN/level which/WDT/which means/VBZ/means that/DT/that the/DT/the first/JJ/first vertex/NN/vertex is/VBZ/is adjacent/NN/adjacent from/IN/from s/NNP/s. it/PRP/it will/MD/will get/VB/get a/DT/a level/NN/level number/NN/number of/IN/of 1/CD/1 /,/, the/DT/the next/JJ/next vertex/NN/vertex will/MD/will get/VB/get a/DT/a level/NN/level number/NN/number of/IN/of 2/CD/2 /,/, the/DT/the third/JJ/third vertex/NN/vertex will/MD/will get/VB/get a/DT/a level/NN/level number/NN/number of/IN/of 3/CD/3 and/CC/and this/DT/this vertex/NN/vertex will/MD/will get/VB/get a/DT/a level/NN/level number/NN/number of/IN/of 4/CD/4. that/WDT/that is/VBZ/is why/WRB/why each/DT/each vertex/NN/vertex gets/VBZ/gets a/DT/a level/NN/level number/NN/number equal/JJ/equal to/TO/to the/DT/the length/NN/length of/IN/of its/PRP$/its shortest/NN/shortest path/NN/path from/IN/from s/NNS/s and/CC/and that/IN/that is/VBZ/is unique/NNP/unique. we/PRP/we said/VBD/said in/IN/in choosing/NN/choosing the/DT/the predecessor/NN/predecessor edges/NNS/edges /,/, you/PRP/you could/MD/could choose/VB/choose any/DT/any one/CD/one but/CC/but the/DT/the level/NN/level numbers/NNS/numbers would/MD/would be/VB/be unique/JJ/unique for/IN/for each/DT/each vertex/NN/vertex because/IN/because it/PRP/it corresponds/VBZ/corresponds to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from the/DT/the route/NNP/route. with/IN/with that/DT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to end/VB/end today/NN/today ?/./? s/NNS/s discussion/NN/discussion on/IN/on breadth/NN/breadth first/RB/first search/NNP/search. we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be using/VBG/using breadth/NN/breadth first/RB/first search/NN/search for/IN/for finding/NN/finding the/DT/the connected/VBN/connected components/NNS/components in/IN/in a/DT/a graph/NN/graph and/CC/and we/PRP/we will/MD/will see/VB/see that/IN/that in/IN/in the/DT/the next/JJ/next class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 26/CD/26 two/CD/two application/NN/application of/IN/of breadth/NN/breadth first/RB/first search/NN/search -connected/JJ/-connected components/NNS/components -bipartite/JJ/-bipartite graphs/NNS/graphs today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be looking/VBG/looking at/IN/at two/CD/two applications/NNS/applications of/IN/of breadth/NN/breadth first/RB/first search/NNP/search. in/IN/in particular/JJ/particular i/NN/i am/NN/am going/VBG/going to/TO/to look/VB/look at/IN/at applying/NN/applying breadth/NN/breadth first/RB/first search/NN/search to/TO/to finding/NN/finding out/IN/out the/DT/the connected/VBN/connected components/NNS/components in/IN/in a/DT/a graph/NN/graph and/CC/and a/DT/a second/JJ/second application/NN/application will/MD/will be/VB/be to/TO/to checking/VB/checking if/IN/if a/DT/a graph/NN/graph is/VBZ/is bipartite/NNP/bipartite. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 20/CD/20 /CD/) i/PRP/i define/VBP/define what/WP/what bipartite/RB/bipartite means/VBZ/means and/CC/and then/RB/then we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to apply/VB/apply breadth/NN/breadth first/RB/first search/NNP/search. recall/NN/recall that/WDT/that a/DT/a graph/NN/graph can/MD/can be/VB/be in/IN/in many/JJ/many pieces/NNS/pieces /,/, so/RB/so i/PRP/i could/MD/could have/VB/have a/DT/a graph/NN/graph which/WDT/which looks/NNS/looks like/IN/like that/NNP/that. how/WRB/how many/JJ/many connected/VBN/connected components/NNS/components does/VBZ/does this/DT/this graph/NN/graph have/VBP/have ?/./? /:/[ student/NN/student /:/: five/CD/five /CD/] five/CD/five /CD/[ hindi/NN/hindi /:/] connected/VBN/connected components/NNP/components. what/WP/what we/PRP/we want/VBP/want to/TO/to do/VB/do is/VBZ/is have/VB/have a/DT/a procedure/NN/procedure which/WDT/which will/MD/will label/VB/label these/DT/these vertices/NNP/vertices. it/PRP/it will/MD/will label/VB/label every/DT/every vertex/NN/vertex here/RB/here 1/CD/1 /,/, say/VB/say that/IN/that this/DT/this is/VBZ/is in/IN/in the/DT/the first/JJ/first connected/VBN/connected component/NNP/component. i/PRP/i have/VBP/have just/RB/just arbitrarily/RB/arbitrarily called/VBN/called this/DT/this as/IN/as the/DT/the first/JJ/first connected/VBN/connected component/NNP/component. it/PRP/it will/MD/will label/VB/label every/DT/every vertex/NN/vertex here/RB/here 2/CD/2 /,/, it/PRP/it will/MD/will label/VB/label every/DT/every vertex/NN/vertex here/RB/here 3/CD/3 /,/, it/PRP/it will/MD/will label/VB/label this/DT/this vertex/NN/vertex 4/CD/4 and/CC/and it/PRP/it will/MD/will label/VB/label this/DT/this vertex/NN/vertex 5/CD/5. i/PRP/i want/VBP/want a/DT/a procedure/NN/procedure which/WDT/which returns/NNS/returns this/DT/this labeling/NN/labeling of/IN/of the/DT/the vertices/NNP/vertices. i/PRP/i will/MD/will have/VB/have an/DT/an array/NN/array called/VBN/called label/NN/label let/NN/let ?/./? s/NNS/s say/VBP/say and/CC/and for/IN/for each/DT/each vertex/NN/vertex /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the index/NN/index corresponding/VBG/corresponding to/TO/to vertex/VB/vertex v/NNP/v. at/IN/at this/DT/this location/NN/location i/PRP/i should/MD/should have/VB/have 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 whatever/NN/whatever is/VBZ/is a/DT/a number/NN/number of/IN/of connected/VBN/connected components/NNS/components that/IN/that number/NN/number should/MD/should appear/VB/appear here/NNP/here. so/RB/so that/IN/that by/IN/by looking/VBG/looking at/IN/at this/DT/this array/NN/array /,/, given/VBN/given any/DT/any two/CD/two vertices/NNS/vertices i/PRP/i can/MD/can just/RB/just in/IN/in constant/JJ/constant time/NN/time determine/NN/determine if/IN/if they/PRP/they are/VBP/are in/IN/in the/DT/the same/JJ/same connected/VBN/connected component/NN/component only/NNP/only. if/IN/if they/PRP/they have/VBP/have the/DT/the same/JJ/same label/NN/label then/RB/then that/IN/that means/NNS/means that/WDT/that they/PRP/they are/VBP/are in/IN/in the/DT/the same/JJ/same connected/VBN/connected component/NN/component /,/, if/IN/if they/PRP/they have/VBP/have different/JJ/different labels/NNS/labels they/PRP/they are/VBP/are in/IN/in different/JJ/different connected/VBN/connected components/NNP/components. question/NN/question is/VBZ/is how/WRB/how will/MD/will i/VB/i do/VBP/do such/JJ/such a/DT/a thing/NNP/thing. this/DT/this is/VBZ/is very/RB/very useful/JJ/useful procedure/NNP/procedure. first/RB/first it/PRP/it is/VBZ/is also/RB/also counting/VBG/counting the/DT/the number/NN/number of/IN/of connected/VBN/connected components/NNS/components your/PRP$/your graph/NN/graph has/NNP/has. how/WRB/how will/MD/will i/VB/i do/VBP/do this/DT/this /,/, is/VBZ/is the/DT/the question/NN/question that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to ?/./? /:/[ student/NN/student /:/: do/VBP/do the/DT/the /,/, for/IN/for each/DT/each vertex/NN/vertex and/CC/and if/IN/if the/DT/the vertex/NN/vertex are/VBP/are maintained/VBN/maintained one/CD/one which/WDT/which counts/NNS/counts vertexes/VBZ/vertexes which/WDT/which already/RB/already have/VBP/have been/VBN/been traversed/VBN/traversed /-NONE-/] /./. the/DT/the standard/JJ/standard things/NNS/things in/IN/in any/DT/any case/NN/case in/IN/in the/DT/the first/JJ/first slide/NN/slide they/PRP/they said/VBD/said it/PRP/it is/VBZ/is an/DT/an application/NN/application of/IN/of breadth/NN/breadth first/RB/first search/NNP/search. the/DT/the first/JJ/first thing/NN/thing you/PRP/you are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is to/TO/to do/VB/do some/DT/some breadth/NN/breadth first/RB/first search/NN/search somewhere/RB/somewhere /./[ hindi/NN/hindi /:/] /./. there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of a/DT/a starting/NN/starting vertex/NN/vertex that/WDT/that we/PRP/we take/VBP/take one/CD/one starting/VBG/starting vertex/NN/vertex and/CC/and then/RB/then we/PRP/we start/VBP/start doing/VBG/doing our/PRP$/our breadth/NN/breadth first/RB/first search/NN/search from/IN/from there/NNP/there. suppose/NN/suppose i/PRP/i take/VBP/take this/DT/this as/IN/as my/PRP$/my starting/NN/starting vertex/NN/vertex and/CC/and starting/VBG/starting doing/NN/doing the/DT/the breadth/NN/breadth first/RB/first search/NN/search /,/, so/RB/so what/WP/what ?/./? s/NNS/s going/VBG/going to/TO/to happen/VB/happen ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to give/VB/give each/DT/each vertex/NN/vertex a/DT/a ?/./? so/RB/so there/RB/there also/RB/also i/PRP/i was/VBD/was giving/VBG/giving each/DT/each vertex/NN/vertex a/DT/a label/NN/label /,/, a/DT/a distance/NNP/distance. let/NN/let ?/./? s/NNS/s call/VBP/call that/IN/that a/DT/a distance/NN/distance label/NN/label and/CC/and let/VB/let ?/./? s/NNS/s call/VBP/call this/DT/this component/NN/component number/NNP/number. there/EX/there what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do is/VBZ/is all/DT/all the/DT/the vertices/NNS/vertices that/WDT/that i/PRP/i visit/VBP/visit /,/, if/IN/if i/PRP/i do/VBP/do a/DT/a breadth/NN/breadth first/RB/first search/NN/search starting/VBG/starting from/IN/from this/DT/this vertex/NN/vertex /,/, which/WDT/which all/DT/all vertices/NNS/vertices am/VBP/am i/PRP/i going/VBG/going to/TO/to visit/VB/visit ?/./? only/RB/only the/DT/the vertices/NNS/vertices in/IN/in this/DT/this connected/VBN/connected component/NNP/component. is/VBZ/is it/PRP/it clear/RB/clear to/TO/to everyone/VB/everyone ?/./? in/IN/in the/DT/the very/JJ/very first/JJ/first step/NN/step /,/, in/IN/in the/DT/the first/JJ/first round/NN/round what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do is/VBZ/is i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at all/DT/all these/DT/these three/CD/three adjacent/NN/adjacent vertices/NNS/vertices and/CC/and put/VBD/put them/PRP/them into/IN/into the/DT/the queue/NNP/queue. these/DT/these will/MD/will get/VB/get visited/VBN/visited then/RB/then when/WRB/when i/PRP/i take/VBP/take this/DT/this out/RP/out of/IN/of the/DT/the queue/NN/queue then/RB/then i/PRP/i will/MD/will put/VB/put this/DT/this into/IN/into the/DT/the queue/JJ/queue and/CC/and so/RB/so on/NNP/on. i/PRP/i will/MD/will end/VB/end up/RP/up putting/VBG/putting all/DT/all of/IN/of these/DT/these vertices/NNS/vertices into/IN/into the/DT/the queue/JJ/queue /,/, removing/VBG/removing them/PRP/them and/CC/and so/RB/so all/DT/all of/IN/of these/DT/these vertices/NNS/vertices will/MD/will get/VB/get visited/NNP/visited. but/CC/but i/PRP/i would/MD/would not/RB/not visit/VB/visit any/DT/any of/IN/of these/DT/these vertices/NNP/vertices. i/PRP/i would/MD/would visit/VB/visit only/RB/only these/DT/these vertices/NNP/vertices. as/IN/as i/PRP/i am/VBP/am visiting/VBG/visiting these/DT/these vertices/NNS/vertices /,/, i/PRP/i can/MD/can keep/VB/keep giving/VBG/giving /,/, assigning/VBG/assigning them/PRP/them a/DT/a component/NN/component number/NN/number equal/JJ/equal to/TO/to one/NNP/one. i/PRP/i keep/VBP/keep assigning/VBG/assigning whatever/NN/whatever these/DT/these vertices/NNS/vertices are/VBP/are let/VBN/let ?/./? s/NNS/s say/VBP/say these/DT/these vertices/NNS/vertices are/VBP/are some/DT/some a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e and/CC/and f/NN/f and/CC/and a/DT/a appears/NNS/appears here/RB/here /,/, b/NN/b appears/VBZ/appears here/RB/here and/CC/and c/NN/c appears/VBZ/appears here/RB/here and/CC/and d/VBD/d appears/NNS/appears here/RB/here and/CC/and e/VB/e appears/NNS/appears here/RB/here and/CC/and f/NN/f is/VBZ/is here/NNP/here. i/PRP/i give/VBP/give each/DT/each of/IN/of these/DT/these a/DT/a connected/VBN/connected component/NN/component number/NN/number of/IN/of a/DT/a one/NNP/one. now/RB/now what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? /:/[ student/NN/student /:/: implement/NN/implement the/DT/the /NN/] initially/RB/initially what/WP/what are/VBP/are the/DT/the values/NNS/values that/WDT/that i/PRP/i give/VBP/give to/TO/to each/DT/each of/IN/of these/DT/these connected/VBN/connected component/NN/component number/NN/number ?/./? let/NN/let ?/./? s/NNS/s say/VBP/say initially/RB/initially everything/VBG/everything is/VBZ/is zero/NNP/zero. now/RB/now after/IN/after i/PRP/i finish/VBP/finish this/DT/this one/CD/one bfs/NNS/bfs /,/, some/DT/some vertices/NNS/vertices have/VBP/have a/DT/a connected/VBN/connected component/NN/component number/NN/number of/IN/of one/CD/one and/CC/and some/DT/some others/NNS/others have/VBP/have connected/VBN/connected component/NN/component number/NN/number of/IN/of zero/NNP/zero. which/WDT/which are/VBP/are the/DT/the ones/NNS/ones which/WDT/which have/VBP/have zero/CD/zero ?/./? all/DT/all of/IN/of these/NNP/these. and/CC/and which/WDT/which have/VBP/have a/DT/a one/CD/one ?/./? these/NNP/these. now/RB/now what/WP/what should/MD/should i/VB/i do/VBP/do next/JJ/next ?/./? /NN/[ student/NN/student /:/: pick/NN/pick any/DT/any of/IN/of the/DT/the /NNP/] pick/NN/pick any/DT/any vertex/NN/vertex with/IN/with zero/NN/zero /,/, easier/JJR/easier set/NN/set then/RB/then done/NNP/done. how/WRB/how do/VBP/do i/PRP/i pick/VB/pick any/DT/any vertex/NN/vertex with/IN/with zero/NN/zero ?/./? i/PRP/i just/RB/just start/VB/start from/IN/from here/RB/here and/CC/and find/VBP/find the/DT/the first/JJ/first place/NN/place /,/, first/JJ/first vertex/NN/vertex which/WDT/which is/VBZ/is a/DT/a zero/NNP/zero. then/RB/then what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? then/RB/then i/PRP/i /,/, let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this was/VBD/was the/DT/the first/JJ/first vertex/NN/vertex which/WDT/which was/VBD/was at/IN/at a/DT/a zero/NN/zero /,/, very/RB/very first/NNP/first. this/DT/this is/VBZ/is let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this vertex/NN/vertex here/RB/here /,/, so/RB/so i/PRP/i start/VBP/start a/DT/a bfs/NNS/bfs from/IN/from here/NNP/here. /NNP/[ hindi/NN/hindi /:/] there/EX/there might/MD/might be/VB/be a/DT/a two/CD/two here/RB/here /,/, this/DT/this would/MD/would get/VB/get label/NN/label two/CD/two /,/, there/EX/there might/MD/might be/VB/be a/DT/a two/CD/two here/RB/here /,/, this/DT/this might/MD/might also/RB/also be/VB/be two/CD/two /,/, this/DT/this might/MD/might also/RB/also be/VB/be two/CD/two something/NN/something like/IN/like that/NNP/that. now/RB/now find/VBP/find the/DT/the next/JJ/next zero/NNP/zero. how/WRB/how do/VBP/do i/PRP/i find/VBP/find the/DT/the next/JJ/next zero/NN/zero ?/./? start/NN/start from/IN/from /,/, so/RB/so this/DT/this is/VBZ/is where/WRB/where the/DT/the small/JJ/small thought/NN/thought is/VBZ/is required/NNP/required. i/PRP/i should/MD/should not/RB/not start/VB/start again/RB/again from/IN/from the/DT/the end/NN/end /,/, start/NN/start from/IN/from where/WRB/where i/PRP/i found/VBP/found the/DT/the last/JJ/last root/NN/root vertex/NN/vertex and/CC/and continue/VB/continue from/IN/from there/EX/there /,/, continue/VBP/continue from/IN/from the/DT/the next/JJ/next location/NNP/location. then/RB/then once/RB/once again/RB/again when/WRB/when i/PRP/i find/VBP/find a/DT/a zero/NN/zero /,/, i/PRP/i start/VBP/start a/DT/a breadth/NN/breadth first/RB/first search/NN/search from/IN/from there/NNP/there. once/RB/once again/RB/again that/IN/that will/MD/will end/VB/end up/RP/up labeling/VBG/labeling certain/JJ/certain vertices/NNP/vertices. /NNP/[ hindi/NN/hindi /:/] once/RB/once again/RB/again i/PRP/i find/VBP/find the/DT/the next/JJ/next zero/NN/zero and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. this/DT/this will/MD/will at/IN/at the/DT/the end/NN/end do/VBP/do what/WP/what we/PRP/we wanted/VBD/wanted it/PRP/it do/VBP/do to/NNP/to. question/NN/question is/VBZ/is how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? how/WRB/how much/RB/much time/NN/time did/VBD/did this/DT/this breadth/NN/breadth first/RB/first search/NN/search take/VB/take ?/./? number/NN/number of/IN/of edges/NNS/edges plus/CC/plus the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. of/IN/of course/NN/course number/NN/number of/IN/of edges/NNS/edges is/VBZ/is more/RBR/more than/IN/than the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. why/WRB/why ?/./? it/PRP/it ?/./? s/NNS/s at/IN/at least/JJS/least n/NN/n minus/NN/minus 1/CD/1. if/IN/if a/DT/a graph/NN/graph is/VBZ/is connected/VBN/connected then/RB/then there/RB/there is/VBZ/is a/DT/a spanning/NN/spanning tree/NN/tree in/IN/in the/DT/the graph/NNP/graph. if/IN/if there/EX/there is/VBZ/is a/DT/a spanning/NN/spanning tree/NN/tree /,/, the/DT/the spanning/NN/spanning tree/NN/tree itself/PRP/itself has/VBZ/has n/VBN/n minus/NN/minus 1/CD/1 edges/NNS/edges in/IN/in it/NNP/it. /NNP/[ hindi/NN/hindi /:/] is/VBZ/is the/DT/the total/JJ/total turning/NN/turning time/NN/time equal/JJ/equal to/TO/to order/NN/order number/NN/number of/IN/of edges/NNS/edges ?/./? /:/[ student/NN/student /:/: order/NN/order number/NN/number is/VBZ/is total/JJ/total vertices/NNS/vertices /:/] is/VBZ/is this/DT/this the/DT/the right/NN/right number/NN/number ?/./? /:/[ student/NN/student yes/NNS/yes /:/] yes/NNS/yes /VBP/[ hindi/NN/hindi /:/] number/NN/number of/IN/of edges/NNS/edges can/MD/can be/VB/be much/RB/much smaller/JJR/smaller than/IN/than the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in this/DT/this entire/JJ/entire graph/NNP/graph. the/DT/the graph/NN/graph could/MD/could have/VB/have zero/CD/zero edges/NNS/edges /:/[ student/NN/student /:/: suppose/NN/suppose /:/] so/RB/so we/PRP/we have/VBP/have not/RB/not counted/VBN/counted the/DT/the time/NN/time required/VBN/required for/IN/for traversing/NN/traversing this/DT/this array/NN/array to/TO/to find/VB/find the/DT/the next/JJ/next vertex/NN/vertex from/IN/from which/WDT/which to/TO/to start/VB/start our/PRP$/our breadth/NN/breadth first/RB/first search/NNP/search. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to traverse/VB/traverse this/DT/this array/NN/array ?/./? order/NN/order n/NN/n exactly/RB/exactly /,/, order/NN/order n/NN/n critically/RB/critically because/IN/because we/PRP/we are/VBP/are not/RB/not going/VBG/going back/RB/back from/IN/from the/DT/the starting/NN/starting when/WRB/when searching/NNP/searching. /NNP/[ hindi/NN/hindi /:/] if/IN/if we/PRP/we start/VBP/start always/RB/always from/IN/from the/DT/the beginning/NN/beginning then/RB/then it/PRP/it will/MD/will be/VB/be order/NN/order n/NN/n times/NNS/times the/DT/the number/NN/number of/IN/of components/NNS/components /:/[ student/NN/student /:/: only/RB/only once/RB/once /:/] /:/[ hindi/NN/hindi /:/] we/PRP/we have/VBP/have just/RB/just made/VBN/made one/CD/one scan/JJ/scan of/IN/of this/DT/this array/NN/array that/IN/that ?/./? s/NNS/s critical/NNP/critical. the/DT/the time/NN/time required/VBN/required for/IN/for that/DT/that is/VBZ/is order/NN/order n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 30/CD/30 /CD/) the/DT/the right/NN/right time/NN/time bound/NN/bound should/MD/should be/VB/be order/NN/order m/NN/m plus/CC/plus n/NNP/n. you/PRP/you understand/VBP/understand why/WRB/why am/NN/am saying/VBG/saying m/NN/m plus/CC/plus n/NN/n here/RB/here and/CC/and not/RB/not just/RB/just m/VB/m ?/./? it/PRP/it is/VBZ/is not/RB/not the/DT/the case/NN/case that/IN/that m/NN/m is/VBZ/is more/RBR/more than/IN/than n/NN/n /,/, it/PRP/it is/VBZ/is not/RB/not either/RB/either the/DT/the case/NN/case that/IN/that n/NN/n is/VBZ/is more/RBR/more than/IN/than m/NNP/m. i/PRP/i can/MD/can ?/./? t/VB/t say/NN/say that/IN/that because/IN/because this/DT/this is/VBZ/is not/RB/not a/DT/a connected/VBN/connected graph/NN/graph over/IN/over which/WDT/which i/PRP/i am/VBP/am doing/VBG/doing the/DT/the breadth/NN/breadth first/RB/first search/NNP/search. so/RB/so this/DT/this would/MD/would be/VB/be the/DT/the right/NN/right thing/NN/thing to/TO/to say/VB/say or/CC/or if/IN/if want/JJ/want to/TO/to say/VB/say maximum/NN/maximum of/IN/of m/NN/m /,/, n/NN/n that/IN/that is/VBZ/is also/RB/also okay/NNP/okay. but/CC/but just/RB/just saying/VBG/saying order/NN/order m/NN/m or/CC/or order/NN/order n/NN/n is/VBZ/is not/RB/not correct/NNP/correct. /:/[ student/NN/student /:/: when/WRB/when you/PRP/you know/VBP/know a/DT/a you/PRP/you started/VBD/started breadth/JJ/breadth first/JJ/first search/NN/search then/RB/then how/WRB/how do/VBP/do you/PRP/you label/VB/label a/DT/a without/IN/without label/NN/label b/NN/b /:/] no/DT/no /,/, i/PRP/i started/VBD/started my/PRP$/my breadth/NN/breadth first/RB/first search/NN/search from/IN/from here/NNP/here. when/WRB/when i/PRP/i started/VBD/started my/PRP$/my breadth/NN/breadth first/RB/first search/NN/search from/IN/from here/RB/here let/VB/let ?/./? s/NNS/s say/VBP/say you/PRP/you are/VBP/are saying/VBG/saying i/PRP/i want/VBP/want to/TO/to start/VB/start a/DT/a breadth/NN/breadth first/RB/first search/NN/search from/IN/from here/RB/here suppose/JJ/suppose i/PRP/i started/VBD/started my/PRP$/my breadth/NN/breadth first/RB/first search/NN/search from/IN/from here/NNP/here. then/RB/then i/PRP/i looked/VBD/looked at/IN/at its/PRP$/its adjacent/NN/adjacent vertices/NNP/vertices. these/DT/these b/NN/b /,/, e/NN/e and/CC/and f/NN/f were/VBD/were its/PRP$/its adjacent/NN/adjacent vertices/NNP/vertices. these/DT/these vertices/NNS/vertices i/PRP/i am/VBP/am going/VBG/going to/TO/to put/VB/put them/PRP/them into/IN/into the/DT/the queue/JJ/queue /,/, at/IN/at the/DT/the time/NN/time i/PRP/i put/VBD/put them/PRP/them into/IN/into the/DT/the queue/JJ/queue i/PRP/i am/VBP/am also/RB/also going/VBG/going to/TO/to go/VB/go to/TO/to the/DT/the location/NN/location corresponding/VBG/corresponding to/TO/to the/DT/the these/DT/these vertices/NNS/vertices in/IN/in this/DT/this array/NN/array and/CC/and mark/NN/mark them/PRP/them one/NNP/one. /NNP/[ student/NN/student /:/: sir/NN/sir but/CC/but without/IN/without like/IN/like you/PRP/you are/VBP/are saying/VBG/saying we/PRP/we go/VBP/go through/IN/through the/DT/the array/NN/array work/NN/work /:/] we/PRP/we go/VBP/go through/IN/through the/DT/the array/NN/array only/RB/only once/RB/once for/IN/for selecting/VBG/selecting the/DT/the root/NN/root vertex/NN/vertex but/CC/but for/IN/for each/DT/each one/CD/one of/IN/of these/DT/these vertices/NNS/vertices /,/, when/WRB/when i/PRP/i am/VBP/am visiting/VBG/visiting each/DT/each of/IN/of these/DT/these vertices/NNS/vertices in/IN/in my/PRP$/my breadth/NN/breadth first/RB/first search/NN/search /,/, at/IN/at that/DT/that point/NN/point i/PRP/i am/VBP/am going/VBG/going to/TO/to go/VB/go that/IN/that particular/JJ/particular location/NN/location in/IN/in this/DT/this array/NN/array and/CC/and label/NN/label that/IN/that vertex/NNP/vertex. /NNP/[ student/NN/student /:/: you/PRP/you are/VBP/are not/RB/not counting/VBG/counting the/DT/the time/NN/time /:/] how/WRB/how much/JJ/much is/VBZ/is that/IN/that time/NN/time ?/./? constant/NN/constant for/IN/for each/DT/each of/IN/of these/DT/these vertices/NNP/vertices. so/RB/so again/RB/again number/NN/number of/IN/of vertices/NNS/vertices is/VBZ/is n/VBN/n so/RB/so again/RB/again i/PRP/i would/MD/would take/VB/take order/NN/order n/NN/n time/NN/time for/IN/for that/NNP/that. for/IN/for each/DT/each one/CD/one of/IN/of these/DT/these vertices/NNS/vertices /,/, in/IN/in any/DT/any case/NN/case i/PRP/i am/VBP/am spending/VBG/spending a/DT/a constant/JJ/constant amount/NN/amount of/IN/of time/NN/time because/IN/because i/PRP/i am/VBP/am putting/VBG/putting this/DT/this vertex/NN/vertex into/IN/into the/DT/the queue/JJ/queue /,/, i/PRP/i am/VBP/am removing/VBG/removing them/PRP/them from/IN/from the/DT/the queue/NNP/queue. i/PRP/i am/VBP/am actually/RB/actually going/VBG/going to/TO/to give/VB/give them/PRP/them a/DT/a distance/NN/distance label/NN/label also/RB/also /,/, all/DT/all though/IN/though that/DT/that distance/NN/distance label/NN/label is/VBZ/is not/RB/not really/RB/really required/VBN/required but/CC/but i/PRP/i am/VBP/am going/VBG/going to/TO/to access/NN/access this/DT/this vertex/NNP/vertex. i/PRP/i am/VBP/am going/VBG/going to/TO/to spend/VB/spend a/DT/a constant/JJ/constant amount/NN/amount of/IN/of time/NNP/time. so/RB/so that/IN/that in/IN/in some/DT/some sense/NN/sense /,/, in/IN/in that/DT/that constant/NN/constant amount/NN/amount of/IN/of time/NN/time also/RB/also accessing/VBG/accessing this/DT/this array/NN/array and/CC/and updating/VBG/updating that/IN/that information/NN/information here/NNP/here. /NNP/[ student/NN/student /:/: sir/NN/sir is/VBZ/is the/DT/the location/NN/location where/WRB/where the/DT/the next/JJ/next element/NN/element like/IN/like k/NN/k where/WRB/where you/PRP/you start/VBP/start way/NN/way b/NN/b is/VBZ/is it/PRP/it know/VBP/know directly/RB/directly /:/] when/WRB/when i/PRP/i start/VBP/start from/IN/from a/DT/a /,/, how/WRB/how do/VBP/do i/PRP/i know/VB/know what/WP/what b/NN/b /,/, e/NN/e and/CC/and f/NN/f are/VBP/are ?/./? so/RB/so think/VBP/think of/IN/of b/NN/b /,/, e/NN/e and/CC/and f/NN/f as/IN/as numbers/NNP/numbers. when/WRB/when i/PRP/i look/VBP/look at/IN/at the/DT/the adjacency/NN/adjacency list/NN/list representation/NN/representation of/IN/of a/DT/a /,/, i/PRP/i have/VBP/have the/DT/the adjacency/NN/adjacency list/NN/list of/IN/of a/NNP/a. i/PRP/i know/VBP/know what/WP/what the/DT/the 3/CD/3 vertices/NNS/vertices adjacent/NN/adjacent to/TO/to a/DT/a are/VBP/are /,/, they/PRP/they are/VBP/are let/JJ/let ?/./? s/NNS/s say/VBP/say vertices/NNS/vertices numbered/VBN/numbered b/NN/b is/VBZ/is 2/CD/2 /,/, 5/CD/5 and/CC/and 6/CD/6. these/DT/these are/VBP/are vertices/NNS/vertices number/NN/number 2/CD/2 /,/, 5/CD/5 and/CC/and 6/CD/6. i/PRP/i will/MD/will go/VB/go to/TO/to locations/NNS/locations two/CD/two /,/, five/CD/five and/CC/and six/CD/six in/IN/in this/DT/this array/NN/array and/CC/and make/VB/make them/PRP/them one/NNP/one. you/PRP/you can/MD/can just/RB/just have/VB/have a/DT/a direct/JJ/direct correspondence/NN/correspondence as/IN/as numbers/NNS/numbers /,/, if/IN/if that/DT/that ?/./? s/NNS/s how/WRB/how you/PRP/you like/VBP/like to/TO/to think/VB/think of/IN/of it/NNP/it. clear/JJ/clear to/TO/to everyone/NN/everyone ?/./? we/PRP/we can/MD/can determine/VB/determine connected/VBN/connected components/NNS/components in/IN/in so/RB/so much/RB/much time/VB/time /,/, order/NN/order m/NN/m plus/CC/plus n/NN/n /,/, linear/JJ/linear time/NNP/time. this/DT/this is/VBZ/is also/RB/also called/VBN/called linear/JJ/linear time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 47/CD/47 /CD/) we/PRP/we have/VBP/have used/VBN/used this/DT/this term/NN/term before/NNP/before. i/PRP/i can/MD/can remind/VB/remind you/PRP/you such/JJ/such an/DT/an algorithm/NN/algorithm is/VBZ/is called/VBN/called linear/JJ/linear time/NN/time algorithm/NNP/algorithm. the/DT/the next/JJ/next application/NN/application we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at is/VBZ/is for/IN/for what/WP/what is/VBZ/is called/VBN/called bipartite/JJ/bipartite graphs/NNP/graphs. first/RB/first let/VB/let me/PRP/me define/VB/define for/IN/for you/PRP/you what/WP/what is/VBZ/is a/DT/a bipartite/JJ/bipartite graph/NN/graph is/NNP/is. we/PRP/we are/VBP/are given/VBN/given a/DT/a graph/NN/graph g/NN/g /,/, so/RB/so recall/RB/recall a/DT/a graph/NN/graph is/VBZ/is given/VBN/given by/IN/by a/DT/a set/NN/set of/IN/of vertices/NNS/vertices and/CC/and set/VB/set of/IN/of edges/NNP/edges. we/PRP/we are/VBP/are talking/VBG/talking of/IN/of undirected/JJ/undirected graphs/NNS/graphs here/NNP/here. g/NN/g is/VBZ/is a/DT/a bipartite/JJ/bipartite graph/NN/graph if/IN/if there/EX/there exist/VBP/exist a/DT/a partition/NN/partition of/IN/of v/NN/v into/IN/into u/NN/u /,/, w/NN/w partition/NNP/partition. /NNP/[ hindi/NN/hindi /:/] what/WP/what is/VBZ/is partition/NN/partition mean/NN/mean ?/./? v/NN/v equals/NNS/equals u/VBP/u union/NN/union w/NN/w /,/, u/NN/u intersection/NN/intersection w/NN/w equals/NNS/equals null/NNP/null. i/PRP/i can/MD/can divide/VB/divide the/DT/the set/NN/set of/IN/of vertices/NNS/vertices into/IN/into two/CD/two pieces/NNS/pieces /,/, u/VBP/u and/CC/and w/NN/w such/JJ/such that/IN/that every/DT/every edge/NN/edge has/VBZ/has one/CD/one end/NN/end point/NN/point in/IN/in u/NN/u and/CC/and the/DT/the other/JJ/other in/IN/in w/NNP/w. let/NN/let me/PRP/me draw/VBD/draw an/DT/an example/NNP/example. /NNP/[ hindi/NN/hindi /:/] this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a bipartite/JJ/bipartite graph/NNP/graph. every/DT/every edge/NN/edge has/VBZ/has one/CD/one end/NN/end in/IN/in the/DT/the set/NN/set u/NN/u and/CC/and the/DT/the other/JJ/other end/NN/end in/IN/in the/DT/the set/NN/set w/NN/w /,/, the/DT/the other/JJ/other end/NN/end point/NNP/point. that/IN/that means/VBZ/means there/EX/there is/VBZ/is no/DT/no edge/NN/edge like/IN/like this/DT/this or/CC/or like/IN/like this/NNP/this. these/DT/these edges/NNS/edges are/VBP/are not/RB/not there/NNP/there. there/RB/there are/VBP/are no/DT/no edges/NNS/edges both/DT/both of/IN/of whose/WP$/whose end/NN/end points/NNS/points are/VBP/are in/IN/in u/NN/u or/CC/or both/DT/both of/IN/of whose/WP$/whose end/NN/end points/NNS/points are/VBP/are in/IN/in w/NNP/w. /NNP/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 27/CD/27 /CD/) such/JJ/such graphs/NNS/graphs actually/RB/actually model/VBP/model a/DT/a lot/NN/lot of/IN/of things/NNP/things. one/CD/one standard/JJ/standard setting/NN/setting is/VBZ/is these/DT/these are/VBP/are boys/NNS/boys /,/, these/DT/these are/VBP/are girls/NNS/girls and/CC/and these/DT/these reflect/NN/reflect their/PRP$/their /,/, whether/IN/whether they/PRP/they like/VBP/like each/DT/each other/JJ/other or/CC/or not/NNP/not. no/DT/no /,/, we/PRP/we are/VBP/are not/RB/not saying/VBG/saying they/PRP/they are/VBP/are getting/VBG/getting married/VBN/married this/DT/this way/NNP/way. we/PRP/we just/RB/just trying/VBG/trying to/TO/to find/VB/find out/RP/out if/IN/if they/PRP/they can/MD/can get/VB/get married/VBN/married or/CC/or these/DT/these could/MD/could be/VB/be jobs/NNS/jobs and/CC/and these/DT/these could/MD/could be/VB/be applicants/NNS/applicants to/TO/to jobs/NNS/jobs /,/, yes/NNS/yes and/CC/and a/DT/a certain/JJ/certain applicant/NN/applicant is/VBZ/is suitable/JJ/suitable for/IN/for certain/JJ/certain subset/NN/subset of/IN/of jobs/NNS/jobs and/CC/and you/PRP/you want/VBP/want to/TO/to know/VB/know whether/IN/whether for/IN/for each/DT/each job/NN/job there/RB/there is/VBZ/is an/DT/an applicant/JJ/applicant or/CC/or for/IN/for every/DT/every applicant/NN/applicant there/RB/there is/VBZ/is a/DT/a job/NN/job some/DT/some such/JJ/such thing/NNP/thing. such/JJ/such graphs/NNS/graphs find/VBP/find a/DT/a lot/NN/lot of/IN/of applications/NNS/applications in/IN/in these/DT/these kinds/NNS/kinds of/IN/of settings/NNP/settings. question/NN/question /,/, given/VBN/given a/DT/a graph/NN/graph can/MD/can you/PRP/you determine/VB/determine if/IN/if it/PRP/it is/VBZ/is a/DT/a bipartite/JJ/bipartite ?/./? everyone/NN/everyone understands/NNS/understands what/WP/what the/DT/the question/NN/question is/NNP/is. given/RB/given g/JJ/g is/VBZ/is g/JJ/g bipartite/NN/bipartite /,/, so/RB/so suppose/RB/suppose you/PRP/you said/VBD/said the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. yes/VBZ/yes /,/, g/NN/g is/VBZ/is bipartite/NNP/bipartite. how/WRB/how will/MD/will you/PRP/you convince/VB/convince me/PRP/me it/PRP/it is/VBZ/is bipartite/JJ/bipartite ?/./? /:/[ student/NN/student /:/: no/DT/no edge/NN/edge between/IN/between the/DT/the same/JJ/same lines/NNS/lines levels/NNS/levels with/IN/with /CD/] he/PRP/he has/VBZ/has a/DT/a suggestion/NNP/suggestion. what/WP/what he/PRP/he says/VBZ/says is/VBZ/is do/VBP/do a/DT/a breadth/NN/breadth first/RB/first search/NN/search /,/, after/IN/after all/DT/all that/DT/that ?/./? s/NNS/s the/DT/the topic/JJ/topic of/IN/of this/DT/this class/NNP/class. do/VBP/do a/DT/a breadth/NN/breadth first/RB/first search/NN/search from/IN/from which/WDT/which vertex/NN/vertex ?/./? any/DT/any vertex/NNP/vertex. let/NN/let ?/./? s/NNS/s do/VBP/do a/DT/a breadth/NN/breadth first/RB/first search/NNP/search. i/PRP/i said/VBD/said starting/VBG/starting from/IN/from an/DT/an arbitrary/JJ/arbitrary vertex/NN/vertex /,/, just/RB/just to/TO/to make/VB/make sure/JJ/sure so/IN/so that/IN/that you/PRP/you understand/VBP/understand that/IN/that there/EX/there is/VBZ/is nothing/NN/nothing sacrosanct/NN/sacrosanct about/IN/about the/DT/the starting/NN/starting vertex/NN/vertex /:/[ hindi/NN/hindi /:/] /./. if/IN/if you/PRP/you recall/VBP/recall /,/, breadth/NN/breadth first/RB/first search/NN/search will/MD/will divide/VB/divide the/DT/the graph/NN/graph up/RP/up into/IN/into layers/NNS/layers into/IN/into levels/NNP/levels. these/DT/these will/MD/will be/VB/be the/DT/the vertices/NNS/vertices at/IN/at level/NN/level 1/CD/1 /,/, level/NN/level 2/CD/2 /,/, level/NN/level 3/LS/3 /,/, let/VB/let ?/./? s/NNS/s say/VBP/say level/NN/level 4/CD/4 and/CC/and there/EX/there were/VBD/were 5/CD/5 levels/NNP/levels. there/RB/there was/VBD/was one/CD/one other/JJ/other interesting/JJ/interesting thing/NN/thing that/WDT/that we/PRP/we have/VBP/have talked/VBN/talked about/IN/about as/IN/as regards/NNS/regards breadth/IN/breadth first/JJ/first search/NNP/search. all/DT/all the/DT/the edges/NNS/edges of/IN/of the/DT/the graph/NN/graph /,/, we/PRP/we are/VBP/are not/RB/not talking/VBG/talking of/IN/of the/DT/the breadth/NN/breadth first/RB/first search/NN/search tree/NNP/tree. we/PRP/we are/VBP/are talking/VBG/talking of/IN/of the/DT/the original/JJ/original graph/NNP/graph. in/IN/in the/DT/the original/JJ/original graph/NN/graph there/EX/there will/MD/will be/VB/be edges/NNS/edges which/WDT/which go/VB/go between/IN/between adjacent/NN/adjacent levels/NNS/levels or/CC/or within/IN/within a/DT/a level/NNP/level. there/RB/there will/MD/will be/VB/be edges/NNS/edges of/IN/of this/DT/this kind/NN/kind which/WDT/which go/VB/go between/IN/between the/DT/the adjacent/NN/adjacent levels/NNS/levels and/CC/and there/EX/there might/MD/might be/VB/be some/DT/some edges/NNS/edges which/WDT/which go/VB/go within/IN/within a/DT/a level/NNP/level. there/RB/there would/MD/would be/VB/be no/RB/no edges/NNS/edges which/WDT/which jump/VB/jump levels/NNS/levels /,/, there/EX/there can/MD/can not/RB/not be/VB/be an/DT/an edge/NN/edge which/WDT/which goes/VBZ/goes like/IN/like that/NNP/that. /NNP/[ hindi/NN/hindi /:/] you/PRP/you should/MD/should not/RB/not confuse/VB/confuse it/PRP/it with/IN/with anything/NN/anything else/NNP/else. everyone/NN/everyone follows/VBZ/follows this/NNP/this. these/DT/these brown/NN/brown edges/NNS/edges are/VBP/are not/RB/not there/NNP/there. we/PRP/we have/VBP/have only/RB/only the/DT/the green/JJ/green and/CC/and the/DT/the red/NN/red edges/NNP/edges. when/WRB/when is/VBZ/is this/DT/this graph/NN/graph bipartite/NN/bipartite ?/./? suppose/NN/suppose these/DT/these red/JJ/red edges/NNS/edges were/VBD/were not/RB/not there/NNP/there. is/VBZ/is this/DT/this graph/NN/graph bipartite/NN/bipartite ?/./? suppose/NN/suppose there/RB/there were/VBD/were no/DT/no red/VBN/red edges/NNP/edges. which/WDT/which are/VBP/are the/DT/the red/VBN/red edges/NNS/edges ?/./? these/DT/these are/VBP/are the/DT/the red/VBN/red edges/NNS/edges here/NNP/here. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by no/DT/no red/NN/red edges/NNS/edges ?/./? there/RB/there are/VBP/are no/DT/no edges/NNS/edges /,/, suppose/VBP/suppose all/DT/all edges/NNS/edges go/VBP/go between/IN/between adjacent/NN/adjacent levels/NNP/levels. /NNP/[ hindi/NN/hindi /:/] i.e/NNP/i.e. no/DT/no edge/NN/edge has/VBZ/has both/DT/both end/NN/end points/NNS/points in/IN/in the/DT/the same/JJ/same level/NNP/level. suppose/NN/suppose such/JJ/such was/VBD/was the/DT/the case/NN/case /,/, what/WP/what can/MD/can you/PRP/you say/VB/say ?/./? this/DT/this implies/VBZ/implies the/DT/the graph/NN/graph is/VBZ/is bipartite/NNP/bipartite. does/VBZ/does everyone/NN/everyone see/VB/see why/WRB/why ?/./? /:/[ student/NN/student /:/: componental/JJ/componental graph/NN/graph /:/] /:/[ hindi/NN/hindi /:/] /./. i/PRP/i am/VBP/am assuming/VBG/assuming that/IN/that let/NN/let ?/./? s/NNS/s assume/VBP/assume that/IN/that it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected graph/NN/graph to/TO/to simplify/VB/simplify matters/NNP/matters. given/VBN/given g/NN/g is/VBZ/is g/JJ/g bipartite/NN/bipartite so/IN/so let/NN/let ?/./? s/NNS/s assume/VBP/assume g/NN/g is/VBZ/is connected/NNP/connected. /:/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 50/CD/50 /CD/) /./. we/PRP/we will/MD/will have/VB/have to/TO/to check/VB/check it/PRP/it for/IN/for each/DT/each connected/VBN/connected component/NNP/component. if/IN/if each/DT/each connected/VBN/connected component/NN/component is/VBZ/is bipartite/JJ/bipartite then/RB/then the/DT/the graph/NN/graph is/VBZ/is bipartite/NNP/bipartite. if/IN/if some/DT/some one/CD/one connected/VBN/connected components/NNS/components is/VBZ/is non-bipartite/JJ/non-bipartite then/RB/then the/DT/the graph/NN/graph is/VBZ/is not/RB/not bipartite/NNP/bipartite. i/PRP/i will/MD/will come/VB/come to/TO/to all/DT/all of/IN/of this/DT/this in/IN/in a/DT/a second/NNP/second. for/IN/for now/RB/now let/VBP/let ?/./? s/NNS/s assume/VBP/assume we/PRP/we have/VBP/have given/VBN/given a/DT/a connected/VBN/connected graph/NN/graph and/CC/and we/PRP/we have/VBP/have to/TO/to determine/VB/determine if/IN/if it/PRP/it is/VBZ/is bipartite/JJ/bipartite or/CC/or not/RB/not /:/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 14/CD/14 /CD/) /./. edges/NNS/edges which/WDT/which go/VB/go within/IN/within the/DT/the level/NNP/level. the/DT/the claim/NN/claim is/VBZ/is that/IN/that the/DT/the graph/NN/graph is/VBZ/is bipartite/JJ/bipartite now/NNP/now. why/WRB/why ?/./? because/IN/because now/RB/now you/PRP/you are/VBP/are going/VBG/going to/TO/to take/VB/take alternate/JJ/alternate levels/NNS/levels on/IN/on the/DT/the u/NN/u side/NN/side /:/[ hindi/NN/hindi /:/] /./. this/DT/this is/VBZ/is the/DT/the bipartition/NNP/bipartition. after/IN/after all/DT/all to/TO/to show/VB/show you/PRP/you that/IN/that to/TO/to convince/VB/convince you/PRP/you that/IN/that the/DT/the graph/NN/graph is/VBZ/is bipartite/JJ/bipartite what/WP/what do/VBP/do i/PRP/i have/VB/have to/TO/to do/VB/do ?/./? i/PRP/i have/VBP/have to/TO/to show/VB/show you/PRP/you a/DT/a partition/NN/partition of/IN/of a/DT/a vertices/NNS/vertices such/JJ/such that/IN/that every/DT/every edge/NN/edge is/VBZ/is going/VBG/going between/IN/between one/CD/one side/NN/side /,/, has/VBZ/has its/PRP$/its end/NN/end point/NN/point on/IN/on the/DT/the two/CD/two sides/NNS/sides of/IN/of the/DT/the partition/NNP/partition. now/RB/now if/IN/if i/PRP/i do/VBP/do my/PRP$/my partition/NN/partition in/IN/in this/DT/this manner/NN/manner /:/[ hindi/NN/hindi /:/] then/RB/then every/DT/every edge/NN/edge is/VBZ/is going/VBG/going from/IN/from a/DT/a vertex/NN/vertex on/IN/on the/DT/the u/NN/u side/NN/side to/TO/to a/DT/a vertex/NN/vertex on/IN/on the/DT/the w/NN/w side/NNP/side. yes/VBZ/yes /,/, if/IN/if these/DT/these red/VBN/red edges/NNS/edges were/VBD/were not/RB/not there/NNP/there. but/CC/but if/IN/if these/DT/these red/VBN/red edges/NNS/edges were/VBD/were there/RB/there then/RB/then we/PRP/we can/MD/can ?/./? t/VB/t say/NN/say because/IN/because then/RB/then such/JJ/such an/DT/an edge/NN/edge is/VBZ/is going/VBG/going between/IN/between a/DT/a vertex/NN/vertex on/IN/on the/DT/the w/NN/w side/NN/side and/CC/and another/DT/another vertex/NN/vertex on/IN/on the/DT/the w/NN/w side/NNP/side. if/IN/if this/DT/this were/VBD/were the/DT/the case/NN/case /,/, all/DT/all edges/NNS/edges go/VBP/go between/IN/between adjacent/NN/adjacent levels/NNS/levels that/WDT/that is/VBZ/is no/DT/no edges/NNS/edges has/VBZ/has both/DT/both end/NN/end points/NNS/points within/IN/within the/DT/the same/JJ/same level/NN/level then/RB/then g/JJ/g is/VBZ/is bipartite/NNP/bipartite. but/CC/but we/PRP/we have/VBP/have not/RB/not solved/VBN/solved the/DT/the problem/NN/problem here/NNP/here. suppose/NN/suppose there/RB/there is/VBZ/is an/DT/an edge/NN/edge which/WDT/which has/VBZ/has both/DT/both its/PRP$/its end/NN/end points/NNS/points in/IN/in the/DT/the same/JJ/same level/NNP/level. what/WP/what then/RB/then ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 09/CD/09 /CD/) suppose/NN/suppose such/JJ/such an/DT/an edge/NN/edge exits/VBZ/exits /,/, does/VBZ/does that/IN/that mean/JJ/mean that/IN/that the/DT/the graph/NN/graph is/VBZ/is bipartite/JJ/bipartite ?/./? you/PRP/you will/MD/will not/RB/not solve/VB/solve the/DT/the problem/NNP/problem. /NNP/[ hindi/NN/hindi /:/] if/IN/if in/IN/in the/DT/the bfs/NNS/bfs /,/, we/PRP/we find/VBP/find an/DT/an edge/NN/edge both/DT/both of/IN/of whose/WP$/whose end/NN/end points/NNS/points are/VBP/are in/IN/in the/DT/the same/JJ/same level/NN/level /,/, then/RB/then what/WP/what ?/./? what/WP/what can/MD/can we/PRP/we say/VB/say then/RB/then ?/./? life/NN/life can/MD/can not/RB/not be/VB/be too/RB/too hard/NNP/hard. then/RB/then what/WP/what ?/./? basically/RB/basically we/PRP/we have/VBP/have to/TO/to say/VB/say /,/, the/DT/the graph/NN/graph is/VBZ/is not/RB/not bipartite/NNP/bipartite. then/RB/then g/VB/g is/VBZ/is not/RB/not bipartite/JJ/bipartite but/CC/but why/WRB/why ?/./? /:/[ student/NN/student /:/: you/PRP/you have/VBP/have partition/NN/partition between/IN/between u/NN/u and/CC/and v/NN/v then/RB/then the/DT/the vertex/NN/vertex you/PRP/you started/VBD/started this/DT/this bfs/NNS/bfs must/MD/must be/VB/be in/IN/in some/DT/some partition/NN/partition let/NN/let ?/./? s/NNS/s say/VBP/say u/NN/u then/RB/then this/DT/this would/MD/would definitely/RB/definitely contradict/VB/contradict because/IN/because the/DT/the next/JJ/next level/NN/level must/MD/must be/VB/be in/IN/in v/NN/v /,/, the/DT/the next/JJ/next level/NN/level must/MD/must be/VB/be in/IN/in u/NNP/u. ultimately/RB/ultimately it/PRP/it will/MD/will contradict/VB/contradict that/DT/that /NN/] proof/IN/proof is/VBZ/is correct/NNP/correct. i/PRP/i will/MD/will give/VB/give you/PRP/you a/DT/a different/JJ/different proof/NN/proof though/IN/though because/IN/because it/PRP/it will/MD/will bring/VB/bring out/RP/out another/DT/another aspect/NN/aspect /,/, another/DT/another property/NN/property of/IN/of the/DT/the bipartite/JJ/bipartite graphs/NNP/graphs. suppose/NN/suppose we/PRP/we had/VBD/had such/JJ/such an/DT/an edge/NNP/edge. we/PRP/we had/VBD/had an/DT/an edge/NN/edge /:/[ hindi/NN/hindi /:/] both/DT/both of/IN/of whose/WP$/whose end/NN/end points/NNS/points are/VBP/are in/IN/in the/DT/the same/JJ/same level/NN/level /:/[ hindi/NN/hindi /:/] /./. now/RB/now recall/VBP/recall we/PRP/we had/VBD/had a/DT/a notion/NN/notion of/IN/of a/DT/a breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree /:/[ hindi/NN/hindi /:/] /./. what/WP/what was/VBD/was the/DT/the notion/NN/notion of/IN/of a/DT/a breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree ?/./? we/PRP/we said/VBD/said there/RB/there is/VBZ/is a/DT/a tree/NN/tree and/CC/and basically/RB/basically for/IN/for each/DT/each of/IN/of these/DT/these vertices/NNS/vertices /,/, there/EX/there is/VBZ/is a/DT/a predecessor/NNP/predecessor. for/IN/for each/DT/each vertex/NN/vertex there/RB/there is/VBZ/is a/DT/a predecessor/NN/predecessor except/IN/except for/IN/for the/DT/the starting/VBG/starting vertex/NN/vertex /,/, the/DT/the root/NN/root vertex/NN/vertex /:/[ hindi/NN/hindi /:/] /./. is/VBZ/is this/DT/this /NN/[ hindi/NN/hindi /:/] if/IN/if such/JJ/such is/VBZ/is the/DT/the case/NN/case then/RB/then g/JJ/g has/VBZ/has an/DT/an odd/JJ/odd cycle/NN/cycle /:/[ hindi/NN/hindi /:/] /./. let/NN/let ?/./? s/NNS/s prove/VBP/prove that/IN/that fact/NN/fact now/NNP/now. if/IN/if g/NN/g has/VBZ/has an/DT/an odd/JJ/odd cycle/NN/cycle then/RB/then g/JJ/g can/MD/can not/RB/not be/VB/be bipartite/NNP/bipartite. i/PRP/i have/VBP/have not/RB/not proved/VBN/proved this/DT/this fact/NN/fact /,/, i/PRP/i will/MD/will prove/VB/prove it/NNP/it. but/CC/but if/IN/if i/PRP/i prove/VBP/prove it/PRP/it then/RB/then we/PRP/we are/VBP/are done/NNP/done. /NNP/[ hindi/NN/hindi /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 29/CD/29 /CD/) so/RB/so proof/IN/proof by/IN/by contradiction/NNP/contradiction. suppose/NN/suppose the/DT/the graph/NN/graph is/VBZ/is bipartite/JJ/bipartite what/WP/what will/MD/will happen/VB/happen ?/./? suppose/NN/suppose this/DT/this vertex/NN/vertex either/DT/either it/PRP/it ?/./? s/NNS/s on/IN/on the/DT/the u/NN/u side/NN/side or/CC/or it/PRP/it ?/./? s/NNS/s on/IN/on the/DT/the w/NN/w side/NN/side ?/./? suppose/NN/suppose it/PRP/it ?/./? s/NNS/s on/IN/on the/DT/the u/NN/u side/NN/side then/RB/then this/DT/this vertex/NN/vertex has/VBZ/has to/TO/to be/VB/be on/IN/on the/DT/the w/NN/w side/NNP/side. then/RB/then this/DT/this has/VBZ/has to/TO/to be/VB/be on/IN/on u/NN/u side/NN/side /,/, this/DT/this has/VBZ/has to/TO/to be/VB/be w/RB/w /,/, u/NN/u /,/, w/NN/w /,/, u/NN/u /,/, w/NN/w u/NN/u /,/, w/NN/w /,/, u/NN/u /,/, w/NN/w /,/, u/NN/u /,/, u/NNP/u. /NNP/[ hindi/NN/hindi /:/] i/PRP/i started/VBD/started with/IN/with the/DT/the u/NN/u but/CC/but this/DT/this could/MD/could easily/RB/easily have/VB/have been/VBN/been a/DT/a w/NN/w and/CC/and you/PRP/you would/MD/would have/VB/have to/TO/to adjacent/VB/adjacent vertices/NNS/vertices which/WDT/which are/VBP/are both/DT/both labeled/VBN/labeled w/NNP/w. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 45/CD/45 /CD/) everyone/NN/everyone follows/VBZ/follows this/DT/this proof/NNP/proof. let/VBD/let me/PRP/me show/VBP/show the/DT/the previous/JJ/previous slide/NN/slide once/RB/once again/NNP/again. if/IN/if the/DT/the graph/NN/graph has/VBZ/has an/DT/an odd/JJ/odd cycle/NN/cycle then/RB/then it/PRP/it can/MD/can not/RB/not be/VB/be bipartite/RB/bipartite and/CC/and if/IN/if we/PRP/we found/VBD/found an/DT/an edge/NN/edge /,/, both/DT/both of/IN/of those/DT/those end/NN/end points/NNS/points are/VBP/are in/IN/in the/DT/the same/JJ/same level/NN/level then/RB/then we/PRP/we have/VBP/have shown/VBN/shown it/PRP/it has/VBZ/has an/DT/an odd/JJ/odd cycle/NNP/cycle. this/DT/this is/VBZ/is the/DT/the odd/JJ/odd cycle/NN/cycle in/IN/in the/DT/the graph/NN/graph /:/[ hindi/NN/hindi /:/] /./. this/DT/this is/VBZ/is the/DT/the general/JJ/general proof/NN/proof /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a proof/NN/proof by/IN/by example/NN/example because/IN/because /NN/[ hindi/NN/hindi /:/] everyone/NN/everyone follows/VBZ/follows this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 20/CD/20 /CD/) /./. in/IN/in this/DT/this manner/NN/manner you/PRP/you can/MD/can use/VB/use breadth/NN/breadth first/RB/first search/NN/search to/TO/to check/VB/check if/IN/if the/DT/the graph/NN/graph is/VBZ/is bipartite/JJ/bipartite or/CC/or not/RB/not which/WDT/which is/VBZ/is equivalent/NN/equivalent to/TO/to checking/NN/checking /,/, if/IN/if the/DT/the graph/NN/graph has/VBZ/has an/DT/an odd/JJ/odd cycle/NN/cycle or/CC/or not/NNP/not. if/IN/if the/DT/the graph/NN/graph has/VBZ/has an/DT/an odd/JJ/odd cycle/NN/cycle then/RB/then it/PRP/it can/MD/can not/RB/not be/VB/be bipartite/NNP/bipartite. if/IN/if the/DT/the graph/NN/graph has/VBZ/has no/DT/no odd/JJ/odd cycle/NN/cycle then/RB/then does/VBZ/does it/PRP/it mean/VB/mean /,/, it/PRP/it is/VBZ/is bipartite/JJ/bipartite ?/./? if/IN/if all/DT/all the/DT/the cycles/NNS/cycles in/IN/in the/DT/the graph/NN/graph are/VBP/are even/RB/even in/IN/in length/NN/length then/RB/then does/VBZ/does that/IN/that mean/JJ/mean that/IN/that the/DT/the graph/NN/graph is/VBZ/is bipartite/JJ/bipartite ?/./? /:/[ hindi/NN/hindi /:/] my/PRP$/my next/JJ/next question/NN/question is/VBZ/is if/IN/if all/DT/all cycles/NNS/cycles in/IN/in a/DT/a graph/NN/graph g/NN/g are/VBP/are even/NNP/even. is/VBZ/is g/JJ/g bipartite/NN/bipartite ?/./? yes/NNS/yes or/CC/or no/DT/no ?/./? /:/[ student/NN/student /:/: yes/NNS/yes /VBP/] once/RB/once again/RB/again take/VB/take your/PRP$/your graph/NN/graph /,/, do/VBP/do a/DT/a breadth/NN/breadth first/RB/first search/NN/search on/IN/on the/DT/the graph/NN/graph /:/[ hindi/NN/hindi /:/] which/WDT/which is/VBZ/is between/IN/between the/DT/the same/JJ/same level/NN/level then/RB/then there/EX/there is/VBZ/is an/DT/an odd/JJ/odd cycle/NNP/cycle. /NNP/[ hindi/NN/hindi /:/] by/IN/by taking/NN/taking alternate/NN/alternate levels/NNS/levels on/IN/on one/CD/one side/NN/side /,/, you/PRP/you have/VBP/have shown/VBN/shown it/PRP/it to/TO/to be/VB/be bipartite/NNP/bipartite. yes/NNS/yes ?/./? how/WRB/how much/RB/much time/NN/time did/VBD/did our/PRP$/our procedure/NN/procedure take/VB/take ?/./? the/DT/the procedure/NN/procedure to/TO/to check/VB/check if/IN/if the/DT/the graph/NN/graph is/VBZ/is bipartite/NNP/bipartite. how/WRB/how much/JJ/much time/NN/time did/VBD/did it/PRP/it take/VB/take /:/[ hindi/NN/hindi /:/] and/CC/and then/RB/then what/WP/what did/VBD/did we/PRP/we do/VBP/do ?/./? we/PRP/we did/VBD/did also/RB/also something/NN/something else/NNP/else. we/PRP/we checked/VBD/checked if/IN/if there/EX/there was/VBD/was an/DT/an edge/NN/edge both/DT/both of/IN/of whose/WP$/whose end/NN/end points/NNS/points were/VBD/were in/IN/in the/DT/the same/JJ/same level/NN/level /:/[ hindi/NN/hindi /:/] /./. let/NN/let me/PRP/me write/VBP/write /:/[ hindi/NN/hindi /:/] /./. we/PRP/we will/MD/will look/VB/look at/IN/at all/DT/all the/DT/the adjacent/NN/adjacent vertices/NNS/vertices then/RB/then when/WRB/when i/PRP/i come/VBP/come to/TO/to this/DT/this vertex/NN/vertex /,/, what/WP/what are/VBP/are the/DT/the various/JJ/various things/NNS/things we/PRP/we were/VBD/were doing/VBG/doing ?/./? we/PRP/we looked/VBD/looked at/IN/at all/DT/all of/IN/of these/DT/these and/CC/and we/PRP/we put/VBD/put them/PRP/them into/IN/into the/DT/the queue/JJ/queue and/CC/and we/PRP/we gave/VBD/gave them/PRP/them a/DT/a certain/JJ/certain color/NNP/color. what/WP/what was/VBD/was the/DT/the color/NN/color we/PRP/we gave/VBD/gave them/PRP/them ?/./? grey/NN/grey /,/, so/RB/so each/DT/each of/IN/of these/DT/these vertices/NNS/vertices were/VBD/were colored/VBN/colored grey/-NONE-/grey. then/RB/then i/PRP/i removed/VBD/removed one/CD/one of/IN/of the/DT/the vertices/NNS/vertices from/IN/from the/DT/the queue/NNP/queue. let/NN/let ?/./? s/NNS/s say/VBP/say i/PRP/i removed/VBD/removed this/DT/this vertex/NN/vertex from/IN/from the/DT/the queue/NN/queue and/CC/and i/PRP/i looked/VBD/looked at/IN/at its/PRP$/its neighbor/NN/neighbor ?/./? s/NNP/s. if/IN/if any/DT/any of/IN/of the/DT/the neighbor/NN/neighbor ?/./? s/NNS/s is/VBZ/is grey/NN/grey then/RB/then we/PRP/we can/MD/can stop/VB/stop the/DT/the procedure/NN/procedure /:/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 18/CD/18 /CD/) /./. if/IN/if the/DT/the neighbor/NN/neighbor is/VBZ/is white/JJ/white /,/, grey/NN/grey or/CC/or black/JJ/black /NN/[ hindi/NN/hindi /:/] /./. i/PRP/i will/MD/will repeat/NNP/repeat. all/DT/all you/PRP/you need/VBP/need to/TO/to do/VB/do is/VBZ/is to/TO/to check/VB/check if/IN/if the/DT/the other/JJ/other end/NN/end point/NN/point of/IN/of the/DT/the vertex/NN/vertex is/VBZ/is grey/NN/grey or/CC/or not/NNP/not. just/RB/just grey/NN/grey /,/, if/IN/if it/PRP/it is/VBZ/is grey/PRP/grey stop/VBP/stop /,/, exit/NN/exit /,/, reboot/NNP/reboot. the/DT/the graph/NN/graph is/VBZ/is not/RB/not bipartite/NNP/bipartite. and/CC/and that/IN/that ?/./? s/NNS/s the/DT/the only/JJ/only thing/NN/thing we/PRP/we need/VBP/need to/TO/to check/NNP/check. why/WRB/why is/VBZ/is that/IN/that ?/./? the/DT/the reason/NN/reason for/IN/for that/DT/that is/VBZ/is if/IN/if the/DT/the other/JJ/other point/NN/point is/VBZ/is black/JJ/black then/RB/then that/IN/that does/VBZ/does not/RB/not mean/VB/mean that/IN/that the/DT/the graph/NN/graph is/VBZ/is not/RB/not bipartite/JJ/bipartite because/IN/because you/PRP/you could/MD/could have/VB/have such/JJ/such an/DT/an edge/NNP/edge. when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at /,/, so/RB/so let/VB/let me/PRP/me draw/VB/draw this/DT/this picture/NN/picture again/RB/again because/IN/because this/DT/this is/VBZ/is getting/VBG/getting cluttered/NNP/cluttered. when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at this/DT/this vertex/NN/vertex /,/, then/RB/then it/PRP/it has/VBZ/has its/PRP$/its neighbor/NN/neighbor ?/./? s/NNS/s one/CD/one of/IN/of which/WDT/which is/VBZ/is this/DT/this /,/, which/WDT/which is/VBZ/is already/RB/already colored/VBN/colored black/NNP/black. i/PRP/i can/MD/can not/RB/not use/VB/use black/JJ/black /,/, the/DT/the other/JJ/other end/NN/end point/NN/point being/VBG/being black/JJ/black has/NNS/has a/DT/a test/NN/test for/IN/for non/NN/non bipartiteness/NNP/bipartiteness. because/IN/because this/DT/this could/MD/could be/VB/be the/DT/the entire/JJ/entire graph/NN/graph for/IN/for all/DT/all i/PRP/i care/NNP/care. this/DT/this is/VBZ/is clearly/RB/clearly bipartite/NNP/bipartite. but/CC/but to/TO/to say/VB/say that/IN/that this/DT/this vertex/NN/vertex /,/, when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at this/DT/this vertex/NN/vertex it/PRP/it has/VBZ/has a/DT/a neighbor/NN/neighbor which/WDT/which is/VBZ/is black/VBP/black /,/, use/NN/use that/IN/that to/TO/to say/VB/say it/PRP/it is/VBZ/is non-bipartite/JJ/non-bipartite /,/, would/MD/would be/VB/be wrong/NNP/wrong. now/RB/now what/WP/what we/PRP/we are/VBP/are saying/VBG/saying is/VBZ/is that/IN/that suppose/DT/suppose there/EX/there is/VBZ/is an/DT/an edge/NN/edge like/IN/like this/NNP/this. when/WRB/when there/EX/there is/VBZ/is an/DT/an edge/NN/edge like/IN/like this/DT/this /,/, then/RB/then when/WRB/when i/PRP/i am/VBP/am considering/VBG/considering one/CD/one of/IN/of its/PRP$/its end/NN/end points/NNS/points for/IN/for the/DT/the first/JJ/first time/NN/time /,/, then/RB/then the/DT/the other/JJ/other end/NN/end point/NN/point ;/:/; since/IN/since it/PRP/it has/VBZ/has not/RB/not been/VBN/been considered/VBN/considered yet/RB/yet /,/, would/MD/would be/VB/be colored/VBN/colored grey/-NONE-/grey. yes/NNP/yes. since/IN/since it/PRP/it would/MD/would be/VB/be colored/VBN/colored grey/NN/grey /,/, we/PRP/we would/MD/would be/VB/be able/JJ/able to/TO/to identify/VB/identify that/IN/that edge/NN/edge as/IN/as an/DT/an edge/NN/edge which/WDT/which is/VBZ/is running/VBG/running within/IN/within the/DT/the same/JJ/same level/NNP/level. /NNP/[ hindi/NN/hindi /:/] they/PRP/they will/MD/will also/RB/also get/VB/get into/IN/into queue/NNP/queue. /NNP/[ student/NN/student /:/: /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 55/CD/55 /CD/) /CD/] here/RB/here is/VBZ/is a/DT/a valid/JJ/valid point/NNP/point. i/PRP/i made/VBD/made a/DT/a mistake/NNP/mistake. does/VBZ/does everyone/NN/everyone understand/NN/understand his/PRP$/his question/NN/question ?/./? no/NN/no. let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this picture/NN/picture for/IN/for now/NNP/now. /:/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 39/CD/39 /CD/) what/WP/what is/VBZ/is the/DT/the point/NN/point ?/./? depends/NNS/depends upon/IN/upon me/PRP/me where/WRB/where the/DT/the point/NN/point is/NNP/is. this/DT/this is/VBZ/is the/DT/the thing/NN/thing that/WDT/that has/VBZ/has been/NNP/been. so/RB/so this/DT/this should/MD/should be/VB/be black/JJ/black clearly/NNP/clearly. this/DT/this should/MD/should be/VB/be black/JJ/black because/IN/because it/PRP/it has/VBZ/has been/VBN/been expanded/VBN/expanded out/RP/out and/CC/and then/RB/then since/IN/since it/PRP/it has/VBZ/has been/VBN/been expanded/VBN/expanded out/RP/out all/DT/all of/IN/of these/DT/these guys/NNS/guys are/VBP/are in/IN/in the/DT/the queue/NNP/queue. they/PRP/they are/VBP/are all/RB/all grey/NNP/grey. what/WP/what are/VBP/are the/DT/the color/NN/color of/IN/of these/DT/these guys/NNS/guys ?/./? because/IN/because i/PRP/i have/VBP/have not/RB/not touched/VBN/touched them/PRP/them yet/RB/yet /,/, they/PRP/they are/VBP/are in/IN/in the/DT/the queue/NNP/queue. they/PRP/they are/VBP/are grey/NNP/grey. now/RB/now who/WP/who can/MD/can tell/VB/tell me/PRP/me /,/, what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to do/VB/do ?/./? if/IN/if now/RB/now suppose/VBP/suppose i/PRP/i look/VBP/look at/IN/at this/DT/this vertex/NN/vertex next/IN/next and/CC/and this/DT/this has/VBZ/has an/DT/an edge/NN/edge going/VBG/going here/NNP/here. the/DT/the other/JJ/other end/NN/end point/NN/point of/IN/of this/DT/this edge/NN/edge is/VBZ/is grey/NN/grey /,/, so/RB/so i/PRP/i might/MD/might say/VB/say it/PRP/it is/VBZ/is not/RB/not bipartite/JJ/bipartite so/RB/so that/IN/that is/VBZ/is not/RB/not right/NNP/right. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 24/CD/24 /CD/) simply/RB/simply level/NN/level /:/[ hindi/NN/hindi /:/] /./. we/PRP/we are/VBP/are keeping/VBG/keeping level/NN/level numbers/NNS/numbers so/RB/so that/IN/that quantity/NN/quantity is/VBZ/is important/NNP/important. that/IN/that level/NN/level number/NN/number business/NN/business is/VBZ/is important/NNP/important. we/PRP/we are/VBP/are keeping/VBG/keeping the/DT/the level/NN/level numbers/NNS/numbers of/IN/of the/DT/the vertices/NNP/vertices. if/IN/if the/DT/the level/NN/level number/NN/number is/VBZ/is the/DT/the same/JJ/same /,/, say/VBP/say the/DT/the graph/NN/graph is/VBZ/is non-bipartite/NNP/non-bipartite. if/IN/if the/DT/the number/NN/number level/NN/level is/VBZ/is different/JJ/different /,/, continue/NNP/continue. clear/NN/clear ?/./? one/CD/one thing/NN/thing i/PRP/i wanted/VBD/wanted to/TO/to do/VB/do today/NN/today which/WDT/which i/PRP/i think/VBP/think /,/, i/PRP/i did/VBD/did not/RB/not do/VB/do very/RB/very well/RB/well in/IN/in the/DT/the last/JJ/last class/NN/class was/VBD/was to/TO/to argue/VB/argue that/IN/that the/DT/the level/NN/level number/NN/number of/IN/of the/DT/the vertex/NN/vertex that/IN/that your/PRP$/your breadth/NN/breadth first/RB/first search/NN/search procedure/NN/procedure is/VBZ/is giving/VBG/giving you/PRP/you the/DT/the shortest/JJS/shortest path/NNP/path. some/DT/some of/IN/of you/PRP/you perhaps/RB/perhaps understood/VBD/understood it/NNP/it. but/CC/but i/PRP/i think/VBP/think i/PRP/i did/VBD/did not/RB/not do/VB/do it/PRP/it very/RB/very well/NNP/well. let/VB/let ?/./? s/NNS/s do/VBP/do it/PRP/it once/RB/once since/IN/since we/PRP/we have/VBP/have some/DT/some time/NN/time today/NNP/today. let/NN/let me/PRP/me write/VBP/write down/RP/down the/DT/the formal/JJ/formal statement/NNP/statement. what/WP/what i/PRP/i want/VBP/want to/TO/to argue/VB/argue is/VBZ/is that/IN/that in/IN/in a/DT/a breadth/NN/breadth first/RB/first search/NN/search /,/, starting/VBG/starting from/IN/from vertex/NN/vertex v/NN/v /,/, the/DT/the level/NN/level number/NN/number of/IN/of vertex/NN/vertex u/NN/u is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from v/NN/v to/TO/to u/NNP/u. what/WP/what are/VBP/are we/PRP/we saying/VBG/saying ?/./? we/PRP/we are/VBP/are saying/VBG/saying that/IN/that i/PRP/i started/VBD/started a/DT/a breadth/NN/breadth first/RB/first search/NN/search from/IN/from vertex/NN/vertex v/NN/v /,/, i/PRP/i got/VBD/got a/DT/a bunch/NN/bunch of/IN/of levels/NNP/levels. let/NN/let ?/./? s/NNS/s say/VBP/say vertex/NN/vertex u/NN/u is/VBZ/is sitting/VBG/sitting in/IN/in this/DT/this level/NN/level 4/CD/4 ;/:/; level/NN/level 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4. then/RB/then the/DT/the shortest/NN/shortest path/NN/path ?/./? what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by shortest/JJS/shortest path/NN/path ?/./? let/NN/let ?/./? s/NNS/s define/VBP/define what/WP/what shortest/JJS/shortest path/NN/path means/NNP/means. you/PRP/you all/DT/all understand/VBP/understand what/WP/what a/DT/a path/NN/path is/NNP/is. so/RB/so between/IN/between v/NN/v and/CC/and u/NN/u /,/, there/EX/there could/MD/could be/VB/be many/JJ/many paths/NNS/paths in/IN/in the/DT/the graph/NNP/graph. it/PRP/it could/MD/could be/VB/be very/RB/very complicated/NNP/complicated. each/DT/each of/IN/of these/DT/these paths/NNS/paths has/VBZ/has a/DT/a certain/JJ/certain length/NNP/length. what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path ?/./? it/PRP/it ?/./? s/NNS/s just/RB/just the/DT/the number/NN/number of/IN/of edges/NNS/edges on/IN/on the/DT/the path/NN/path /,/, let/VB/let ?/./? s/NNS/s say/NNP/say. for/IN/for now/RB/now we/PRP/we will/MD/will just/RB/just keep/VB/keep that/IN/that as/IN/as a/DT/a definition/NNP/definition. later/JJ/later we/PRP/we will/MD/will modify/VB/modify this/DT/this definition/NNP/definition. so/RB/so for/IN/for instance/NN/instance if/IN/if i/PRP/i were/VBD/were to/TO/to look/VB/look at/IN/at this/DT/this path/NN/path /,/, this/DT/this has/VBZ/has 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 ;/:/; 6/CD/6 edges/NNS/edges on/IN/on it/PRP/it so/RB/so it/PRP/it has/VBZ/has a/DT/a length/NN/length of/IN/of 6/CD/6. if/IN/if i/PRP/i had/VBD/had gone/VBN/gone like/IN/like this/DT/this /,/, it/PRP/it was/VBD/was even/RB/even longer/JJR/longer /,/, it/PRP/it had/VBD/had length/NN/length 7/CD/7. if/IN/if i/PRP/i had/VBD/had gone/VBN/gone like/IN/like this/DT/this 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 ;/:/; this/DT/this had/VBD/had length/NN/length 5/CD/5. but/CC/but there/EX/there is/VBZ/is also/RB/also a/DT/a path/NN/path of/IN/of length/NN/length 4/CD/4 /,/, this/DT/this is/VBZ/is 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4. it/PRP/it is/VBZ/is not/RB/not an/DT/an important/JJ/important here/RB/here exactly/RB/exactly which/WDT/which it/PRP/it is/VBZ/is but/CC/but you/PRP/you understand/VBP/understand that/IN/that there/EX/there could/MD/could be/VB/be many/JJ/many different/JJ/different paths/NNS/paths in/IN/in a/DT/a graph/NN/graph between/IN/between two/CD/two vertices/NNP/vertices. the/DT/the shortest/JJS/shortest path/NN/path is/VBZ/is just/RB/just the/DT/the path/NN/path which/WDT/which has/VBZ/has the/DT/the least/JJS/least number/NN/number of/IN/of edges/NNS/edges on/IN/on it/NNP/it. it/PRP/it is/VBZ/is relevant/JJ/relevant clearly/RB/clearly because/IN/because if/IN/if these/DT/these are/VBP/are certain/JJ/certain roads/NNS/roads or/CC/or some/DT/some such/JJ/such thing/NN/thing /,/, you/PRP/you would/MD/would like/VB/like to/TO/to travel/VB/travel the/DT/the minimum/JJ/minimum possible/NNP/possible. although/IN/although i/PRP/i have/VBP/have not/RB/not kept/VBN/kept any/DT/any distances/NNS/distances here/RB/here but/CC/but let/VB/let ?/./? s/NNS/s say/VBP/say these/DT/these just/RB/just reflect/VBP/reflect the/DT/the number/NN/number of/IN/of hops/NNS/hops that/WDT/that you/PRP/you are/VBP/are taking/NNP/taking. say/VBP/say suppose/NN/suppose this/DT/this is/VBZ/is some/DT/some computer/NN/computer network/NN/network /,/, you/PRP/you want/VBP/want to/TO/to talk/VB/talk between/IN/between v/NN/v and/CC/and u/NNP/u. let/VB/let ?/./? s/NNS/s say/VBP/say most/JJS/most of/IN/of the/DT/the time/NN/time is/VBZ/is spent/VBN/spent in/IN/in a/DT/a /,/, when/WRB/when you/PRP/you have/VBP/have to/TO/to go/VB/go through/RP/through one/CD/one node/NNP/node. this/DT/this is/VBZ/is the/DT/the link/NN/link between/IN/between this/DT/this computer/NN/computer and/CC/and this/DT/this computer/NN/computer /,/, this/DT/this is/VBZ/is link/NN/link between/IN/between this/DT/this and/CC/and this/DT/this is/VBZ/is the/DT/the link/NN/link between/IN/between this/DT/this and/CC/and this/NNP/this. so/RB/so information/NN/information travels/NNS/travels very/RB/very fast/RB/fast on/IN/on link/NNP/link. but/CC/but at/IN/at a/DT/a node/NN/node /,/, at/IN/at a/DT/a computer/NN/computer it/PRP/it has/VBZ/has to/TO/to be/VB/be processed/VBN/processed and/CC/and forwarded/VBD/forwarded and/CC/and stuff/NN/stuff like/IN/like that/NNP/that. there/EX/there is/VBZ/is a/DT/a lot/NN/lot of/IN/of time/NN/time wastage/NN/wastage here/NNP/here. clearly/RB/clearly you/PRP/you would/MD/would like/VB/like to/TO/to minimize/NNP/minimize. this/DT/this is/VBZ/is called/VBN/called the/DT/the number/NN/number of/IN/of hops/NNS/hops then/NNP/then. this/DT/this path/NN/path has/VBZ/has 6/CD/6 hops/NNS/hops on/IN/on it/NNP/it. so/IN/so you/PRP/you would/MD/would like/VB/like to/TO/to pick/VB/pick a/DT/a path/NN/path which/WDT/which has/VBZ/has the/DT/the smallest/JJS/smallest number/NN/number of/IN/of hops/NNS/hops because/IN/because then/RB/then you/PRP/you are/VBP/are information/NN/information travels/NNS/travels very/RB/very quick/NNP/quick. you/PRP/you would/MD/would like/VB/like to/TO/to find/VB/find the/DT/the shortest/JJS/shortest path/NNP/path. the/DT/the claim/NN/claim is/VBZ/is that/IN/that if/IN/if this/DT/this vertex/NN/vertex u/NN/u is/VBZ/is at/IN/at level/NN/level four/CD/four then/RB/then the/DT/the shortest/NN/shortest path/NN/path from/IN/from v/NN/v to/TO/to u/VB/u is/VBZ/is of/IN/of length/NN/length 4/CD/4. first/JJ/first let/NN/let ?/./? s/NNS/s show/VBP/show that/IN/that there/EX/there is/VBZ/is a/DT/a path/NN/path of/IN/of length/NN/length 4/CD/4. how/WRB/how do/VBP/do i/PRP/i show/VBP/show there/RB/there is/VBZ/is a/DT/a path/NN/path of/IN/of length/NN/length 4/CD/4 ?/./? very/RB/very simple/NNP/simple. i/PRP/i start/VBP/start from/IN/from u/NN/u /,/, i/PRP/i take/VBP/take its/PRP$/its predecessor/NNP/predecessor. its/PRP$/its predecessor/NN/predecessor would/MD/would be/VB/be some/DT/some vertex/NN/vertex there/NNP/there. then/RB/then i/PRP/i take/VBP/take its/PRP$/its predecessor/NNP/predecessor. its/PRP$/its predecessor/NN/predecessor would/MD/would be/VB/be some/DT/some vertex/NN/vertex at/IN/at the/DT/the previous/JJ/previous level/NNP/level. you/PRP/you understand/VBP/understand what/WP/what predecessor/NN/predecessor means/VBZ/means ?/./? let/NN/let me/PRP/me recall/NNP/recall. predecessor/NN/predecessor is/VBZ/is the/DT/the vertex/NN/vertex which/WDT/which gave/VBD/gave due/JJ/due to/TO/to which/WDT/which this/DT/this guy/NN/guy got/VBD/got its/PRP$/its label/NNP/label. clearly/RB/clearly that/IN/that is/VBZ/is the/DT/the vertex/NN/vertex sitting/VBG/sitting here/NNP/here. the/DT/the predecessor/NN/predecessor of/IN/of this/DT/this and/CC/and i/PRP/i would/MD/would get/VB/get to/TO/to the/DT/the predecessor/NN/predecessor of/IN/of this/DT/this and/CC/and clearly/RB/clearly the/DT/the predecessor/NN/predecessor of/IN/of all/DT/all of/IN/of these/DT/these vertices/NNS/vertices at/IN/at the/DT/the first/JJ/first level/NN/level is/VBZ/is the/DT/the root/NN/root vertex/NN/vertex itself/NNP/itself. what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path ?/./? it/PRP/it ?/./? s/NNS/s just/RB/just the/DT/the number/NN/number of/IN/of levels/NNS/levels and/CC/and its/PRP$/its four/NNP/four. there/EX/there is/VBZ/is a/DT/a path/NN/path of/IN/of length/NN/length 4/CD/4. can/MD/can there/RB/there be/VB/be a/DT/a path/NN/path of/IN/of length/NN/length 3/CD/3 ?/./? /CD/[ student/NN/student /:/: /:/] if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path of/IN/of length/NN/length 3/CD/3 /,/, then/RB/then we/PRP/we will/MD/will have/VB/have to/TO/to jump/VB/jump a/DT/a level/NN/level which/WDT/which violates/VBZ/violates the/DT/the fact/NN/fact that/IN/that this/DT/this is/VBZ/is a/DT/a breadth/NN/breadth first/RB/first search/NNP/search. this/DT/this is/VBZ/is a/DT/a partition/NN/partition it/PRP/it gives/VBZ/gives by/IN/by breadth/NN/breadth first/RB/first search/NNP/search. /NNP/[ hindi/NN/hindi /:/] you/PRP/you understand/VBP/understand ?/./? if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path of/IN/of length/NN/length three/CD/three /,/, then/RB/then that/IN/that path/NN/path can/MD/can not/RB/not visit/VB/visit all/DT/all these/NNP/these. it/PRP/it has/VBZ/has to/TO/to come/VB/come here/RB/here /,/, it/PRP/it has/VBZ/has to/TO/to start/VB/start from/IN/from here/NNP/here. but/CC/but then/RB/then it/PRP/it can/MD/can not/RB/not visit/VB/visit all/DT/all these/DT/these 3/CD/3 levels/NNP/levels. it/PRP/it has/VBZ/has to/TO/to jump/VB/jump over/IN/over one/CD/one of/IN/of these/NNP/these. but/CC/but if/IN/if it/PRP/it jumps/VBZ/jumps a/DT/a level/NN/level then/RB/then it/PRP/it ?/./? s/NNS/s a/DT/a path/NN/path /,/, then/RB/then it/PRP/it violates/VBZ/violates our/PRP$/our breadth/NN/breadth first/RB/first search/NN/search property/NNP/property. that/IN/that shows/VBZ/shows that/IN/that this/DT/this process/NN/process gives/VBZ/gives you/PRP/you also/RB/also the/DT/the shortest/JJS/shortest path/NN/path and/CC/and the/DT/the shortest/NN/shortest path/NN/path is/VBZ/is just/RB/just the/DT/the distance/NN/distance /,/, the/DT/the level/NN/level number/NN/number of/IN/of each/DT/each vertices/NNP/vertices. if/IN/if i/PRP/i wanted/VBD/wanted to/TO/to find/VB/find the/DT/the shortest/JJS/shortest path/NN/path from/IN/from a/DT/a certain/JJ/certain vertex/NN/vertex /,/, all/DT/all i/PRP/i have/VBP/have to/TO/to do/VB/do is/VBZ/is do/VB/do a/DT/a breadth/NN/breadth first/RB/first search/NN/search and/CC/and the/DT/the level/NN/level number/NN/number would/MD/would give/VB/give me/PRP/me the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 33/CD/33 /CD/) now/RB/now one/CD/one last/JJ/last thing/NN/thing i/PRP/i want/VBP/want to/TO/to do/VB/do with/IN/with you/PRP/you is/VBZ/is again/RB/again applications/NNS/applications of/IN/of breadth/NN/breadth first/RB/first search/NNP/search. it/PRP/it ?/./? s/NNS/s a/DT/a very/RB/very simple/JJ/simple application/NN/application using/VBG/using this/DT/this fact/NN/fact that/IN/that we/PRP/we just/RB/just understood/NNP/understood. i/PRP/i give/VBP/give you/PRP/you a/DT/a graph/NN/graph and/CC/and i/PRP/i define/VBP/define the/DT/the diameter/NN/diameter of/IN/of a/DT/a graph/NNP/graph. what/WP/what do/VBP/do you/PRP/you think/VB/think the/DT/the diameter/NN/diameter of/IN/of a/DT/a graph/NN/graph should/MD/should be/VB/be ?/./? maximum/NN/maximum distance/NN/distance between/IN/between two/CD/two vertices/NNS/vertices along/IN/along the/DT/the shortest/JJS/shortest path/NN/path between/IN/between those/DT/those two/CD/two vertices/NNP/vertices. maximum/NN/maximum distance/NN/distance between/IN/between 2/CD/2 vertices/NNS/vertices in/IN/in g/NN/g /,/, let/VB/let ?/./? s/NNS/s just/RB/just say/VBP/say that/NNP/that. what/WP/what does/VBZ/does distance/NN/distance between/IN/between 2/CD/2 vertices/NNS/vertices means/VBZ/means ?/./? distance/NN/distance between/IN/between two/CD/two vertices/NNS/vertices equals/NNS/equals length/VBP/length of/IN/of shortest/JJS/shortest path/NNP/path. we/PRP/we are/VBP/are not/RB/not saying/VBG/saying that/IN/that the/DT/the diameter/NN/diameter is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path between/IN/between two/CD/two vertices/NNP/vertices. that/IN/that is/VBZ/is a/DT/a very/RB/very hard/JJ/hard quantity/NN/quantity to/TO/to compute/NNP/compute. that/IN/that ?/./? s/NNS/s impossible/JJ/impossible to/TO/to compute/VB/compute /,/, more/JJR/more or/CC/or less/NNP/less. we/PRP/we are/VBP/are not/RB/not talking/VBG/talking of/IN/of that/NNP/that. diameter/NN/diameter is/VBZ/is very/RB/very specifically/RB/specifically defined/VBN/defined maximum/NN/maximum distance/NN/distance between/IN/between two/CD/two vertices/NNS/vertices and/CC/and the/DT/the distance/NN/distance between/IN/between two/CD/two vertices/NNS/vertices is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. how/WRB/how am/NN/am i/PRP/i going/VBG/going to/TO/to find/VB/find the/DT/the diameter/NN/diameter of/IN/of the/DT/the graph/NN/graph ?/./? /:/[ hindi/NN/hindi /:/] what/WP/what is/VBZ/is the/DT/the answer/NN/answer ?/./? bfs/NNS/bfs /,/, just/RB/just do/VBP/do a/DT/a bfs/NNS/bfs and/CC/and let/VB/let ?/./? s/NNS/s say/VBP/say the/DT/the largest/JJS/largest level/NN/level number/NN/number is/VBZ/is 3/CD/3. the/DT/the diameter/NN/diameter of/IN/of the/DT/the graph/NN/graph is/VBZ/is 3/CD/3 /,/, that/IN/that ?/./? s/NNS/s not/RB/not true/NNP/true. we/PRP/we will/MD/will have/VB/have to/TO/to do/VB/do a/DT/a bfs/NN/bfs on/IN/on every/DT/every node/NN/node and/CC/and then/RB/then find/VB/find the/DT/the maximum/NN/maximum level/NNP/level. you/PRP/you understand/VBP/understand why/WRB/why this/DT/this is/VBZ/is wrong/JJ/wrong ?/./? does/VBZ/does everyone/NN/everyone understand/NN/understand why/WRB/why this/DT/this is/VBZ/is wrong/JJ/wrong ?/./? because/IN/because i/PRP/i could/MD/could have/VB/have a/DT/a graph/NN/graph which/WDT/which looks/NNS/looks exactly/RB/exactly like/IN/like this/NNP/this. suppose/NN/suppose this/DT/this is/VBZ/is my/PRP$/my graph/NN/graph /,/, so/RB/so it/PRP/it ?/./? s/NNS/s exactly/RB/exactly this/NNP/this. if/IN/if i/PRP/i did/VBD/did a/DT/a bfs/NN/bfs from/IN/from here/RB/here /,/, i/PRP/i would/MD/would get/VB/get exactly/RB/exactly level/NN/level 3/CD/3. but/CC/but the/DT/the diameter/NN/diameter of/IN/of this/DT/this graph/NN/graph is/VBZ/is not/RB/not 3/CD/3. the/DT/the diameter/NN/diameter of/IN/of this/DT/this graph/NN/graph is/VBZ/is 6/CD/6. the/DT/the diameter/NN/diameter is/VBZ/is 6/CD/6 because/IN/because it/PRP/it is/VBZ/is the/DT/the maximum/NN/maximum that/IN/that we/PRP/we are/VBP/are interrupting/NNP/interrupting. so/RB/so to/TO/to get/VB/get the/DT/the diameter/NN/diameter /,/, i/PRP/i would/MD/would be/VB/be able/JJ/able to/TO/to get/VB/get to/TO/to the/DT/the diameter/NN/diameter if/IN/if i/PRP/i started/VBD/started my/PRP$/my bfs/NNS/bfs either/CC/either from/IN/from this/DT/this vertex/NN/vertex or/CC/or from/IN/from this/DT/this vertex/NN/vertex or/CC/or from/IN/from this/DT/this vertex/NN/vertex or/CC/or from/IN/from this/NNP/this. you/PRP/you started/VBD/started from/IN/from one/CD/one of/IN/of these/DT/these /,/, then/RB/then the/DT/the maximum/NN/maximum level/NN/level number/NN/number would/MD/would have/VB/have given/VBN/given me/PRP/me the/DT/the right/NN/right information/NNP/information. but/CC/but i/PRP/i did/VBD/did not/RB/not know/VB/know which/WDT/which these/DT/these vertices/NNS/vertices are/VBP/are /,/, so/RB/so i/PRP/i will/MD/will have/VB/have to/TO/to try/VB/try it/PRP/it out/RP/out for/IN/for every/DT/every vertex/NNP/vertex. how/WRB/how much/JJ/much time/NN/time would/MD/would determining/VB/determining the/DT/the diameter/NN/diameter take/NN/take ?/./? mn/NN/mn time/NNP/time. we/PRP/we are/VBP/are assuming/VBG/assuming that/IN/that the/DT/the graph/NN/graph is/VBZ/is connected/NNP/connected. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 22/CD/22 /CD/) so/RB/so it/PRP/it will/MD/will take/VB/take /,/, why/WRB/why because/IN/because each/DT/each of/IN/of these/DT/these breadth/NN/breadth first/RB/first search/NN/search will/MD/will take/VB/take m/NN/m time/NN/time and/CC/and we/PRP/we are/VBP/are doing/VBG/doing n/NNP/n. for/IN/for a/DT/a disconnected/JJ/disconnected graph/NN/graph it/PRP/it is/VBZ/is not/RB/not defined/VBN/defined /,/, let/VB/let ?/./? s/NNS/s say/VBP/say it/PRP/it is/VBZ/is infinity/NNP/infinity. for/IN/for each/DT/each connected/VBN/connected component/NN/component you/PRP/you can/MD/can define/VB/define the/DT/the notion/NNP/notion. but/CC/but if/IN/if i/PRP/i do/VBP/do a/DT/a depth/NN/depth first/RB/first search/NN/search from/IN/from one/CD/one vertex/NN/vertex and/CC/and i/PRP/i look/VBP/look at/IN/at the/DT/the largest/JJS/largest level/NN/level number/NN/number /,/, it/PRP/it doesn/VBP/doesn ?/./? t/NN/t tell/NN/tell me/PRP/me what/WP/what the/DT/the diameter/NN/diameter is/VBZ/is exactly/NNP/exactly. but/CC/but it/PRP/it does/VBZ/does tell/VB/tell me/PRP/me approximately/RB/approximately what/WP/what the/DT/the diameter/NN/diameter is/NNP/is. it/PRP/it can/MD/can be/VB/be at/IN/at most/JJS/most half/NN/half the/DT/the diameter/NN/diameter /,/, the/DT/the maximum/NN/maximum level/NN/level number/NN/number is/VBZ/is at/IN/at least/JJS/least half/NN/half the/DT/the diameter/NNP/diameter. yes/NNP/yes. the/DT/the diameter/NN/diameter can/MD/can not/RB/not be/VB/be more/RBR/more than/IN/than two/CD/two times/NNS/times the/DT/the maximum/NN/maximum level/NN/level number/NN/number for/IN/for any/DT/any bfs/NNP/bfs. you/PRP/you understand/VBP/understand ?/./? diameter/NN/diameter of/IN/of the/DT/the graph/NN/graph is/VBZ/is going/VBG/going to/TO/to be/VB/be less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to two/CD/two times/NNS/times the/DT/the maximum/NN/maximum level/NN/level number/NN/number in/IN/in any/DT/any breadth/NN/breadth first/RB/first search/NNP/search. you/PRP/you understand/VBP/understand why/WRB/why ?/./? /:/[ hindi/NN/hindi /:/] the/DT/the claim/NN/claim is/VBZ/is diameter/NN/diameter can/MD/can not/RB/not be/VB/be more/RBR/more than/IN/than 10/CD/10. no/DT/no 2/CD/2 vertices/NNS/vertices are/VBP/are more/RBR/more than/IN/than 10/CD/10 units/NNS/units of/IN/of apart/NNP/apart. why/WRB/why ?/./? take/VB/take any/DT/any 2/CD/2 vertices/NNP/vertices. /NNP/[ hindi/NN/hindi /:/] since/IN/since this/DT/this is/VBZ/is true/JJ/true for/IN/for every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices /,/, the/DT/the diameter/NN/diameter can/MD/can not/RB/not be/VB/be less/JJR/less than/IN/than 10/CD/10 /,/, can/MD/can not/RB/not be/VB/be more/RBR/more than/IN/than 10/CD/10. diameter/NN/diameter is/VBZ/is less/JJR/less than/IN/than 2/CD/2 times/NNS/times the/DT/the maximum/NN/maximum level/NN/level number/NN/number and/CC/and diameter/NN/diameter is/VBZ/is greater/JJR/greater than/IN/than ?/./? what/WP/what is/VBZ/is the/DT/the diameter/NN/diameter greater/NN/greater than/IN/than ?/./? maximum/NN/maximum level/NNP/level. diameter/NN/diameter we/PRP/we know/VBP/know is/VBZ/is at/IN/at least/JJS/least 5/CD/5. why/WRB/why ?/./? because/IN/because there/EX/there is/VBZ/is this/DT/this vertex/NN/vertex here/RB/here and/CC/and one/CD/one vertex/NN/vertex here/RB/here /./[ hindi/NN/hindi /:/] /./. so/RB/so by/IN/by doing/VBG/doing one/CD/one bfs/NNS/bfs /,/, you/PRP/you can/MD/can get/VB/get an/DT/an approximation/NN/approximation to/TO/to the/DT/the diameter/NNP/diameter. /NNP/[ hindi/NN/hindi /:/] you/PRP/you know/VBP/know the/DT/the diameter/NN/diameter is/VBZ/is at/IN/at least/JJS/least 6/CD/6 and/CC/and at/IN/at most/JJS/most 12/CD/12 /CD/[ hindi/NN/hindi /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 46/CD/46 /CD/) it/PRP/it ?/./? s/NNS/s clear/JJ/clear to/TO/to everyone/NN/everyone ?/./? so/RB/so with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end today/NN/today ?/./? s/NNS/s discussion/NN/discussion on/IN/on breadth/NN/breadth first/RB/first search/NNP/search. in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at depth/NN/depth first/RB/first search/NNP/search. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 27/CD/27 depth/NN/depth first/RB/first search/NN/search /:/( dfs/NNS/dfs /VBP/) today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about depth/NN/depth first/RB/first search/NNP/search. this/DT/this is/VBZ/is another/DT/another way/NN/way of/IN/of searching/VBG/searching a/DT/a graph/NNP/graph. in/IN/in the/DT/the previous/JJ/previous class/NN/class we/PRP/we looked/VBD/looked at/IN/at breadth/NN/breadth first/RB/first search/NNP/search. there/RB/there are/VBP/are certain/JJ/certain applications/NNS/applications where/WRB/where depth/JJ/depth first/JJ/first search/NN/search is/VBZ/is more/RBR/more meaningful/JJ/meaningful than/IN/than breadth/NN/breadth first/RB/first search/NN/search and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at these/DT/these application/NN/application also/NNP/also. one/CD/one application/NN/application is/VBZ/is the/DT/the following/NNP/following. you/PRP/you are/VBP/are a/DT/a mouse/NN/mouse /,/, you/PRP/you all/DT/all know/VBP/know who/WP/who you/PRP/you are/NNP/are. so/RB/so you/PRP/you are/VBP/are a/DT/a mouse/NN/mouse and/CC/and there/EX/there has/VBZ/has to/TO/to be/VB/be whatever/RB/whatever something/NN/something /,/, carrot/NNP/carrot. no/DT/no /,/, i/PRP/i thought/VBD/thought you/PRP/you said/VBD/said carrot/NN/carrot /,/, it/PRP/it was/VBD/was cat/NNP/cat. there/RB/there is/VBZ/is a/DT/a piece/NN/piece of/IN/of cheese/JJ/cheese at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the maze/NN/maze and/CC/and you/PRP/you have/VBP/have to/TO/to find/VB/find your/PRP$/your way/NN/way to/TO/to this/DT/this cheese/NNP/cheese. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02.06/CD/02.06 /CD/) this/DT/this can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a graph/NN/graph in/IN/in the/DT/the following/JJ/following sense/NNP/sense. at/IN/at each/DT/each of/IN/of these/DT/these squares/NNS/squares i/PRP/i put/VBD/put down/RP/down a/DT/a vertex/NNP/vertex. we/PRP/we come/VBP/come to/TO/to that/DT/that in/IN/in a/DT/a minute/NNP/minute. what/WP/what will/MD/will a/DT/a mouse/NN/mouse do/VBP/do ?/./? the/DT/the mouse/NN/mouse is/VBZ/is not/RB/not going/VBG/going to/TO/to do/VB/do a/DT/a breadth/NN/breadth first/RB/first search/NN/search unlikely/RB/unlikely that/IN/that is/VBZ/is going/VBG/going to/TO/to do/NNP/do. it/PRP/it is/VBZ/is not/RB/not even/RB/even going/VBG/going to/TO/to do/VB/do a/DT/a depth/NN/depth first/RB/first search/NN/search but/CC/but what/WP/what it/PRP/it ends/VBZ/ends up/RP/up doing/VBG/doing is/VBZ/is something/NN/something like/IN/like a/DT/a depth/NN/depth first/RB/first search/NNP/search. what/WP/what this/DT/this mouse/NN/mouse is/VBZ/is going/VBG/going to/TO/to do/VB/do as/RB/as all/DT/all other/JJ/other mice/NN/mice would/MD/would is/VBZ/is that/IN/that it/PRP/it is/VBZ/is going/VBG/going to/TO/to go/VB/go off/RP/off in/IN/in one/CD/one direction/NNP/direction. try/NN/try to/TO/to explore/VB/explore that/IN/that path/NN/path /,/, that/IN/that direction/NN/direction fully/RB/fully and/CC/and if/IN/if it/PRP/it ?/./? s/NNS/s not/RB/not able/JJ/able to/TO/to get/VB/get to/TO/to the/DT/the cheese/NN/cheese /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to try/NN/try and/CC/and backtrack/NNP/backtrack. we/PRP/we will/MD/will understand/VB/understand what/WP/what all/PDT/all of/IN/of that/DT/that means/NNP/means. let/VBD/let ?/./? s/NNS/s assume/VBP/assume that/IN/that our/PRP$/our mouse/NN/mouse has/VBZ/has photogenic/JJ/photogenic memory/NNP/memory. when/WRB/when it/PRP/it comes/VBZ/comes back/RB/back to/TO/to the/DT/the certain/JJ/certain place/NN/place /,/, it/PRP/it knows/VBZ/knows that/IN/that it/PRP/it has/VBZ/has been/VBN/been at/IN/at this/DT/this place/NN/place and/CC/and it/PRP/it knows/VBZ/knows what/WP/what path/NN/path it/PRP/it took/VBD/took when/WRB/when it/PRP/it was/VBD/was in/IN/in that/DT/that place/NN/place last/JJ/last time/NNP/time. we/PRP/we of/IN/of course/NN/course have/VBP/have data/NNS/data structures/NNS/structures to/TO/to keep/VB/keep track/NN/track of/IN/of this/DT/this information/NN/information but/CC/but let/VB/let ?/./? s/NNS/s say/VBP/say mouse/NN/mouse can/MD/can also/RB/also keep/VB/keep track/NN/track of/IN/of this/NNP/this. let/NN/let ?/./? s/NNS/s say/VBP/say it/PRP/it started/VBD/started from/IN/from here/RB/here and/CC/and it/PRP/it went/VBD/went down/IN/down one/CD/one step/NN/step and/CC/and it/PRP/it did/VBD/did not/RB/not find/VB/find its/PRP$/its cheese/NNP/cheese. so/RB/so it/PRP/it came/VBD/came down/RP/down another/DT/another step/NN/step not/RB/not yet/RB/yet /,/, so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say it/PRP/it decided/VBD/decided to/TO/to go/VB/go right/NNP/right. why/WRB/why ?/./? i/PRP/i don/VBP/don ?/./? t/NN/t know/VB/know /,/, it/PRP/it just/RB/just decided/VBD/decided to/TO/to go/VB/go right/NNP/right. it/PRP/it is/VBZ/is said/VBN/said to/TO/to go/VB/go right/RB/right and/CC/and then/RB/then it/PRP/it moved/VBD/moved another/DT/another step/NN/step and/CC/and at/IN/at this/DT/this point/NN/point /,/, it/PRP/it can/MD/can only/RB/only go/VB/go down/NNP/down. it/PRP/it went/VBD/went down/IN/down and/CC/and again/RB/again it/PRP/it came/VBD/came down/RP/down here/RB/here and/CC/and lets/NNS/lets say/VBP/say whenever/RB/whenever it/PRP/it has/VBZ/has option/NN/option it/PRP/it can/MD/can always/RB/always goes/VBZ/goes right/NNP/right. it/PRP/it goes/VBZ/goes right/RB/right again/NNP/again. let/VB/let ?/./? s/NNS/s say/VBP/say that/IN/that the/DT/the mouse/NN/mouse tries/NNS/tries to/TO/to take/VB/take this/DT/this direction/NN/direction first/RB/first /,/, east/RB/east and/CC/and then/RB/then it/PRP/it tries/VBZ/tries to/TO/to take/VB/take this/DT/this direction/NN/direction south/NN/south and/CC/and west/NN/west and/CC/and north/NNP/north. now/RB/now there/RB/there is/VBZ/is no/DT/no doubt/NN/doubt about/IN/about left/VBN/left and/CC/and right/NNP/right. it/PRP/it will/MD/will try/VB/try to/TO/to go/VB/go again/RB/again east/JJ/east and/CC/and did/VBD/did not/RB/not find/VB/find the/DT/the cheese/NN/cheese /,/, so/RB/so now/RB/now it/PRP/it can/MD/can not/RB/not go/VB/go east/JJ/east /,/, so/RB/so it/PRP/it goes/VBZ/goes south/NN/south and/CC/and south/NN/south and/CC/and now/RB/now it/PRP/it is/VBZ/is stuck/NNP/stuck. it/PRP/it can/MD/can not/RB/not go/VB/go anywhere/RB/anywhere else/RB/else because/IN/because all/DT/all the/DT/the three/CD/three sides/NNS/sides are/VBP/are blocked/VBN/blocked but/CC/but it/PRP/it can/MD/can move/VB/move /,/, when/WRB/when it/PRP/it gets/VBZ/gets stuck/NN/stuck like/IN/like this/DT/this it/PRP/it backtracks/NNP/backtracks. backtracks/VBZ/backtracks means/VBZ/means goes/VBZ/goes back/RB/back to/TO/to the/DT/the place/NN/place where/WRB/where it/PRP/it came/VBD/came from/NNP/from. it/PRP/it goes/VBZ/goes back/RB/back and/CC/and at/IN/at this/DT/this point/NN/point /,/, it/PRP/it knows/VBZ/knows that/IN/that it/PRP/it has/VBZ/has been/VBN/been here/RB/here before/NNP/before. it/PRP/it went/VBD/went south/RB/south /,/, so/RB/so it/PRP/it now/RB/now tries/VBZ/tries to/TO/to go/VB/go west/JJS/west but/CC/but it/PRP/it can/MD/can not/RB/not go/VB/go west/NNP/west. so/RB/so it/PRP/it has/VBZ/has no/DT/no other/JJ/other possibility/NN/possibility but/CC/but has/VBZ/has to/TO/to go/VB/go back/RB/back to/TO/to where/WRB/where it/PRP/it came/VBD/came from/IN/from and/CC/and it/PRP/it came/VBD/came from/IN/from here/RB/here /,/, so/RB/so it/PRP/it goes/VBZ/goes back/NNP/back. similarly/RB/similarly here/RB/here it/PRP/it goes/VBZ/goes back/RB/back and/CC/and it/PRP/it goes/VBZ/goes back/NNP/back. at/IN/at this/DT/this point/NN/point when/WRB/when it/PRP/it reaches/VBZ/reaches /,/, it/PRP/it sees/VBZ/sees that/IN/that it/PRP/it has/VBZ/has another/DT/another option/NN/option which/WDT/which it/PRP/it has/VBZ/has not/RB/not explored/VBN/explored which/WDT/which is/VBZ/is going/VBG/going south/NNP/south. so/RB/so it/PRP/it goes/VBZ/goes south/NN/south now/RB/now and/CC/and then/RB/then it/PRP/it comes/VBZ/comes here/RB/here /,/, it/PRP/it comes/VBZ/comes here/NNP/here. now/RB/now it/PRP/it will/MD/will have/VB/have no/DT/no other/JJ/other option/NN/option but/CC/but to/TO/to go/VB/go west/JJS/west /,/, west/JJS/west /,/, north/JJ/north /,/, north/JJ/north /,/, north/JJ/north and/CC/and now/RB/now it/PRP/it comes/VBZ/comes to/TO/to this/DT/this point/NNP/point. it/PRP/it comes/VBZ/comes to/TO/to this/DT/this point/NN/point but/CC/but it/PRP/it sees/VBZ/sees that/IN/that this/DT/this is/VBZ/is the/DT/the point/NN/point which/WDT/which it/PRP/it has/VBZ/has been/VBN/been to/TO/to before/NNP/before. it/PRP/it is/VBZ/is already/RB/already been/VBN/been to/TO/to this/DT/this place/NNP/place. it/PRP/it is/VBZ/is not/RB/not going/VBG/going to/TO/to go/VB/go to/TO/to this/DT/this point/NN/point any/DT/any more/NNP/more. if/IN/if it/PRP/it has/VBZ/has been/VBN/been at/IN/at a/DT/a particular/JJ/particular cell/NN/cell before/IN/before at/IN/at a/DT/a particular/JJ/particular location/NN/location before/IN/before /,/, it/PRP/it will/MD/will not/RB/not go/VB/go there/RB/there again/RB/again because/IN/because otherwise/NN/otherwise it/PRP/it will/MD/will just/RB/just keep/VB/keep going/VBG/going in/IN/in a/DT/a loop/NNP/loop. it/PRP/it will/MD/will not/RB/not make/VB/make any/DT/any progress/NNP/progress. since/IN/since it/PRP/it has/VBZ/has been/VBN/been to/TO/to this/DT/this point/NN/point before/IN/before it/PRP/it will/MD/will not/RB/not go/VB/go here/NNP/here. at/IN/at this/DT/this point/NN/point it/PRP/it has/VBZ/has no/DT/no other/JJ/other option/NN/option left/VBD/left /,/, it/PRP/it can/MD/can not/RB/not go/VB/go east/JJ/east /,/, it/PRP/it can/MD/can not/RB/not go/VB/go west/NNP/west. if/IN/if it/PRP/it goes/VBZ/goes north/JJ/north /,/, it/PRP/it goes/VBZ/goes to/TO/to a/DT/a place/NN/place where/WRB/where it/PRP/it has/VBZ/has been/VBN/been before/NNP/before. so/RB/so it/PRP/it backtracks/NNP/backtracks. at/IN/at all/DT/all of/IN/of these/DT/these points/NNS/points it/PRP/it will/MD/will have/VB/have to/TO/to backtrack/VB/backtrack because/IN/because there/EX/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/VBN/done and/CC/and it/PRP/it comes/VBZ/comes back/RB/back at/IN/at this/DT/this point/NNP/point. at/IN/at this/DT/this point/NN/point it/PRP/it had/VBD/had explored/VBN/explored the/DT/the two/CD/two options/NNS/options it/PRP/it had/NNP/had. the/DT/the third/JJ/third option/NN/option is/VBZ/is not/RB/not an/DT/an option/NN/option /,/, it/PRP/it can/MD/can not/RB/not go/VB/go west/RB/west so/RB/so it/PRP/it will/MD/will backtrack/VB/backtrack /,/, backtrack/NN/backtrack /,/, backtrack/NN/backtrack come/NN/come here/NNP/here. now/RB/now here/RB/here if/IN/if it/PRP/it tries/VBZ/tries to/TO/to go/VB/go south/NN/south /,/, it/PRP/it sees/VBZ/sees well/RB/well this/DT/this is/VBZ/is a/DT/a place/NN/place i/PRP/i have/VBP/have been/VBN/been to/TO/to before/NNP/before. why/WRB/why should/MD/should i/VB/i go/VB/go there/RB/there ?/./? it/PRP/it is/VBZ/is after/IN/after all/DT/all just/RB/just trying/VBG/trying to/TO/to find/VB/find where/WRB/where the/DT/the cheese/JJ/cheese is/NNP/is. if/IN/if it/PRP/it has/VBZ/has been/VBN/been to/TO/to a/DT/a place/NN/place before/IN/before there/EX/there is/VBZ/is no/DT/no point/NN/point going/VBG/going there/RB/there again/RB/again because/IN/because it/PRP/it will/MD/will then/RB/then repeat/VB/repeat the/DT/the same/JJ/same sequence/NN/sequence of/IN/of steps/NNP/steps. so/RB/so it/PRP/it doesn/VBP/doesn ?/./? t/NN/t go/VB/go here/NNP/here. that/IN/that ?/./? s/NNS/s one/CD/one important/JJ/important thing/NN/thing that/WDT/that the/DT/the mouse/NN/mouse does/VBZ/does and/CC/and so/RB/so it/PRP/it backtracks/VBZ/backtracks and/CC/and backtrack/NN/backtrack and/CC/and comes/VBZ/comes back/RP/back to/TO/to the/DT/the starting/NN/starting position/NNP/position. what/WP/what have/VBP/have we/PRP/we learnt/VBP/learnt ?/./? it/PRP/it is/VBZ/is not/RB/not so/RB/so easy/JJ/easy to/TO/to find/VB/find cheese/NNP/cheese. now/RB/now it/PRP/it will/MD/will take/VB/take the/DT/the other/JJ/other option/NN/option comes/VBZ/comes here/RB/here /,/, comes/VBZ/comes here/RB/here /,/, comes/VBZ/comes here/RB/here /,/, comes/VBZ/comes here/RB/here /,/, comes/VBZ/comes here/RB/here /,/, comes/VBZ/comes here/NNP/here. he/PRP/he said/VBD/said it/PRP/it will/MD/will first/RB/first try/VB/try to/TO/to go/VB/go south/NN/south /,/, south/NN/south /,/, struck/NN/struck /,/, backtrack/NN/backtrack /,/, backtrack/NNP/backtrack. at/IN/at this/DT/this point/NN/point it/PRP/it has/VBZ/has another/DT/another option/NN/option goes/VBZ/goes there/EX/there /,/, goes/VBZ/goes there/EX/there /,/, goes/VBZ/goes there/EX/there /,/, goes/VBZ/goes there/EX/there and/CC/and now/RB/now it/PRP/it is/VBZ/is a/DT/a homerun/NNP/homerun. time/NN/time to/TO/to clap/VB/clap /,/, no/NNP/no. it/PRP/it has/VBZ/has found/VBN/found the/DT/the cheese/NNP/cheese. this/DT/this is/VBZ/is what/WP/what we/PRP/we will/MD/will call/VB/call depth/NN/depth first/RB/first search/NN/search and/CC/and we/PRP/we will/MD/will formalize/VB/formalize this/DT/this shortly/NNP/shortly. but/CC/but this/DT/this is/VBZ/is fairly/RB/fairly natural/JJ/natural way/NN/way of/IN/of exploring/NNP/exploring. it/PRP/it is/VBZ/is not/RB/not artificial/JJ/artificial /,/, you/PRP/you don/VBP/don ?/./? t/NN/t have/VBP/have to/TO/to be/VB/be a/DT/a mouse/NN/mouse to/TO/to be/VB/be doing/VBG/doing this/NNP/this. you/PRP/you take/VBP/take a/DT/a particular/JJ/particular direction/NN/direction and/CC/and you/PRP/you try/VBP/try to/TO/to follow/VB/follow it/PRP/it till/MD/till wherever/VB/wherever it/PRP/it will/MD/will reach/VB/reach till/NN/till whatever/NN/whatever you/PRP/you can/MD/can /,/, using/VBG/using that/IN/that direction/NNP/direction. so/RB/so direction/NN/direction here/RB/here now/RB/now corresponds/VBZ/corresponds to/TO/to in/IN/in our/PRP$/our graph/NN/graph sittings/NNS/sittings /,/, it/PRP/it will/MD/will correspond/VB/correspond to/TO/to taking/VB/taking one/CD/one edge/NN/edge /,/, going/VBG/going out/RP/out along/IN/along that/DT/that edge/NN/edge to/TO/to the/DT/the next/JJ/next vertex/NN/vertex and/CC/and continuing/VBG/continuing and/CC/and seeing/VBG/seeing where/WRB/where all/DT/all you/PRP/you can/MD/can reach/NNP/reach. then/RB/then if/IN/if you/PRP/you can/MD/can not/RB/not reach/VB/reach any/DT/any other/JJ/other vertex/NN/vertex then/RB/then you/PRP/you start/VB/start backtracking/NNP/backtracking. while/IN/while there/EX/there was/VBD/was a/DT/a notion/NN/notion of/IN/of goal/NN/goal here/RB/here which/WDT/which was/VBD/was the/DT/the cheese/JJ/cheese and/CC/and you/PRP/you would/MD/would stop/VB/stop here/NNP/here. in/IN/in our/PRP$/our depth/NN/depth first/RB/first search/NN/search there/RB/there is/VBZ/is no/DT/no goal/NN/goal really/NNP/really. so/RB/so our/PRP$/our depth/NN/depth first/RB/first search/NN/search would/MD/would just/RB/just be/VB/be a/DT/a mechanism/NN/mechanism of/IN/of exploring/VBG/exploring all/DT/all the/DT/the vertices/NNS/vertices of/IN/of the/DT/the graph/NNP/graph. we/PRP/we will/MD/will keep/VB/keep continuing/VBG/continuing our/PRP$/our depth/NN/depth first/RB/first search/NN/search till/IN/till we/PRP/we do/VBP/do not/RB/not come/VB/come back/RB/back to/TO/to the/DT/the starting/NN/starting vertex/NN/vertex and/CC/and there/EX/there are/VBP/are no/DT/no other/JJ/other options/NNS/options left/VBD/left from/IN/from the/DT/the starting/NN/starting vertex/NN/vertex so/RB/so to/TO/to say/NNP/say. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 7/CD/7 /:/: 58/CD/58 /CD/) our/PRP$/our search/NN/search is/VBZ/is basically/RB/basically a/DT/a method/NN/method of/IN/of visiting/VBG/visiting all/DT/all the/DT/the vertices/NNS/vertices with/IN/with the/DT/the graph/NNP/graph. now/RB/now let/VB/let me/PRP/me do/VBP/do a/DT/a depth/NN/depth first/RB/first search/NN/search on/IN/on a/DT/a graph/NN/graph and/CC/and show/NN/show you/PRP/you what/WP/what you/PRP/you get/NNP/get. i/PRP/i will/MD/will start/VB/start including/VBG/including some/DT/some terminology/NN/terminology now/NNP/now. this/DT/this is/VBZ/is the/DT/the graph/NN/graph /,/, we/PRP/we are/VBP/are working/VBG/working with/IN/with an/DT/an undirected/VBN/undirected graph/NN/graph for/IN/for now/NNP/now. the/DT/the notion/NN/notion of/IN/of a/DT/a depth/NN/depth first/RB/first search/NN/search is/VBZ/is applicable/JJ/applicable also/RB/also for/IN/for directed/VBN/directed graphs/NNP/graphs. so/RB/so small/JJ/small simple/JJ/simple graph/NN/graph and/CC/and six/CD/six vertices/NNS/vertices and/CC/and i/PRP/i am/VBP/am starting/VBG/starting from/IN/from this/DT/this vertex/NNP/vertex. so/RB/so as/IN/as in/IN/in the/DT/the case/NN/case of/IN/of breadth/NN/breadth first/RB/first search/NN/search there/RB/there is/VBZ/is always/RB/always a/DT/a notion/NN/notion of/IN/of a/DT/a starting/NN/starting vertex/NNP/vertex. i/PRP/i am/VBP/am starting/VBG/starting from/IN/from this/DT/this vertex/NNP/vertex. what/WP/what am/NN/am i/PRP/i going/VBG/going to/TO/to do/VB/do ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take one/CD/one edge/NN/edge out/IN/out of/IN/of this/DT/this vertex/NNP/vertex. in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the mouse/NN/mouse we/PRP/we choose/VBP/choose a/DT/a particular/JJ/particular ordering/NNP/ordering. we/PRP/we said/VBD/said first/RB/first we/PRP/we will/MD/will take/VB/take the/DT/the option/NN/option going/VBG/going east/JJ/east then/RB/then south/JJ/south /,/, then/RB/then west/JJS/west /,/, then/RB/then north/NNP/north. here/RB/here we/PRP/we can/MD/can choose/VB/choose whichever/RB/whichever we/PRP/we want/VBP/want and/CC/and typically/RB/typically we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take ?/./? so/RB/so recall/RB/recall we/PRP/we are/VBP/are working/VBG/working with/IN/with the/DT/the adjacency/NN/adjacency list/NN/list implementation/NNP/implementation. for/IN/for every/DT/every node/NN/node /,/, so/RB/so recall/RB/recall an/DT/an adjacency/NN/adjacency list/NN/list implementation/NN/implementation /,/, you/PRP/you have/VBP/have an/DT/an array/NN/array and/CC/and for/IN/for each/DT/each vertex/NN/vertex you/PRP/you have/VB/have a/DT/a linked/VBN/linked list/NN/list and/CC/and this/DT/this linked/VBN/linked list/NN/list is/VBZ/is a/DT/a list/NN/list of/IN/of adjacent/NN/adjacent vertices/NNP/vertices. the/DT/the first/JJ/first edge/NN/edge i/PRP/i will/MD/will consider/VB/consider is/VBZ/is the/DT/the edge/NN/edge going/VBG/going to/TO/to the/DT/the first/JJ/first vertex/NN/vertex and/CC/and when/WRB/when i/PRP/i have/VBP/have worked/VBN/worked with/IN/with this/DT/this edge/NN/edge and/CC/and i/PRP/i am/VBP/am explored/VBN/explored everything/NN/everything /,/, all/DT/all the/DT/the places/NNS/places i/PRP/i can/MD/can reach/VB/reach with/IN/with this/DT/this end/NNP/end. i/PRP/i come/VBP/come back/RB/back to/TO/to this/DT/this vertex/NN/vertex then/RB/then the/DT/the next/JJ/next vertex/NN/vertex i/PRP/i will/MD/will consider/VB/consider is/VBZ/is this/DT/this one/CD/one and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. suppose/NN/suppose here/RB/here this/DT/this was/VBD/was the/DT/the first/JJ/first edge/NN/edge i/PRP/i considered/NNP/considered. i/PRP/i went/VBD/went along/IN/along this/DT/this edge/NN/edge to/TO/to this/DT/this vertex/NNP/vertex. i/PRP/i am/VBP/am now/RB/now going/VBG/going to/TO/to just/RB/just so/RB/so that/IN/that you/PRP/you follow/VBP/follow the/DT/the procedure/NNP/procedure. i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do a/DT/a time/NN/time stamping/NNP/stamping. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? nothing/NN/nothing much/NNP/much. i/PRP/i start/VBP/start at/IN/at time/NN/time zero/NNP/zero. when/WRB/when i/PRP/i reach/VBP/reach a/DT/a new/JJ/new vertex/NN/vertex /,/, i/PRP/i increment/VBP/increment my/PRP$/my time/NNP/time. i/PRP/i will/MD/will say/VB/say i/PRP/i reach/VBP/reach this/DT/this vertex/NN/vertex at/IN/at time/NN/time 1/CD/1 /,/, so/RB/so 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 will/MD/will tell/VB/tell you/PRP/you what/WP/what is/VBZ/is the/DT/the sequence/NN/sequence in/IN/in which/WDT/which i/PRP/i visited/VBD/visited the/DT/the vertices/NNP/vertices. i/PRP/i reach/VBP/reach this/DT/this vertex/NN/vertex at/IN/at time/NN/time one/NNP/one. now/RB/now i/PRP/i start/VBP/start from/IN/from this/DT/this vertex/NN/vertex /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the label/NN/label options/NNS/options i/PRP/i have/NNP/have. i/PRP/i have/VBP/have three/CD/three different/JJ/different options/NNP/options. let/NN/let me/PRP/me say/VBP/say i/PRP/i first/RB/first took/VBD/took this/DT/this option/NN/option and/CC/and come/VB/come to/TO/to this/DT/this vertex/NNP/vertex. i/PRP/i came/VBD/came to/TO/to this/DT/this vertex/NN/vertex at/IN/at time/NN/time two/NNP/two. at/IN/at this/DT/this vertex/NN/vertex do/VBP/do i/PRP/i have/VB/have any/DT/any other/JJ/other option/NN/option ?/./? there/EX/there is/VBZ/is this/DT/this edge/NN/edge going/VBG/going out/RP/out but/CC/but when/WRB/when i/PRP/i go/VBP/go along/IN/along this/DT/this edge/NN/edge /,/, i/PRP/i see/VBP/see i/PRP/i come/VBP/come to/TO/to a/DT/a vertex/NN/vertex which/WDT/which i/PRP/i have/VBP/have already/RB/already been/VBN/been to/TO/to /,/, vertex/NN/vertex zero/NN/zero here/NNP/here. there/EX/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/VBN/done at/IN/at this/DT/this vertex/NNP/vertex. what/WP/what do/VBP/do i/PRP/i do/VBP/do now/RB/now ?/./? i/PRP/i backtrack/VBP/backtrack /,/, i/PRP/i leave/VBP/leave this/DT/this vertex/NNP/vertex. i/PRP/i am/VBP/am done/NN/done with/IN/with this/DT/this vertex/NNP/vertex. when/WRB/when i/PRP/i am/VBP/am done/NN/done with/IN/with the/DT/the vertex/NN/vertex i/PRP/i am/VBP/am again/RB/again going/VBG/going to/TO/to increment/NN/increment my/PRP$/my time/NNP/time. i/PRP/i came/VBD/came to/TO/to this/DT/this vertex/NN/vertex at/IN/at time/NN/time two/CD/two and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to say/VB/say i/PRP/i am/VBP/am done/NN/done with/IN/with this/DT/this vertex/NN/vertex at/IN/at time/NN/time three/NNP/three. i/PRP/i will/MD/will just/RB/just increment/VB/increment our/PRP$/our time/NN/time counter/NNP/counter. this/DT/this is/VBZ/is not/RB/not particularly/RB/particularly useful/JJ/useful this/DT/this time/NN/time counter/NN/counter but/CC/but there/EX/there will/MD/will be/VB/be one/CD/one application/NN/application where/WRB/where we/PRP/we will/MD/will use/VB/use it/NNP/it. this/DT/this is/VBZ/is just/RB/just right/RB/right now/RB/now to/TO/to show/VB/show you/PRP/you how/WRB/how things/NNS/things are/VBP/are progressing/NNP/progressing. i/PRP/i am/VBP/am done/NN/done this/DT/this with/IN/with this/DT/this vertex/NN/vertex and/CC/and then/RB/then where/WRB/where do/VBP/do i/PRP/i go/VB/go back/RB/back ?/./? backtrack/NN/backtrack which/WDT/which means/VBZ/means go/VBP/go back/RB/back to/TO/to the/DT/the vertex/NN/vertex where/WRB/where we/PRP/we came/VBD/came from/NNP/from. so/RB/so i/PRP/i come/VBP/come back/RB/back to/TO/to this/DT/this vertex/NNP/vertex. now/RB/now can/MD/can i/PRP/i backtrack/VB/backtrack out/RP/out of/IN/of this/DT/this vertex/NN/vertex ?/./? no/DT/no /,/, because/IN/because there/EX/there are/VBP/are no/DT/no other/JJ/other adjacent/NN/adjacent vertices/NNS/vertices which/WDT/which i/PRP/i have/VBP/have not/RB/not explored/NNP/explored. let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is the/DT/the next/JJ/next one/CD/one i/PRP/i go/VBP/go to/TO/to or/CC/or let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is the/DT/the next/JJ/next one/CD/one i/PRP/i go/VBP/go to/NNP/to. why/WRB/why not/RB/not ?/./? i/PRP/i take/VBP/take this/DT/this one/CD/one and/CC/and i/PRP/i reach/VBP/reach this/DT/this vertex/NN/vertex at/IN/at time/NN/time 4/CD/4. no/DT/no /,/, our/PRP$/our numbering/NN/numbering is/VBZ/is when/WRB/when we/PRP/we reach/VBP/reach a/DT/a vertex/NN/vertex /,/, we/PRP/we increment/VBP/increment the/DT/the counter/NN/counter and/CC/and we/PRP/we backtrack/VBP/backtrack from/IN/from a/DT/a vertex/NN/vertex then/RB/then we/PRP/we increment/VBP/increment the/DT/the counter/NNP/counter. that/IN/that ?/./? s/NNS/s the/DT/the only/JJ/only way/NN/way we/PRP/we number/NNP/number. i/PRP/i am/VBP/am not/RB/not saying/VBG/saying that/IN/that i/PRP/i leave/VBP/leave from/IN/from here/RB/here at/IN/at time/NN/time three/CD/three /,/, i/PRP/i get/VBP/get to/TO/to here/RB/here at/IN/at time/NN/time four/CD/four then/RB/then i/PRP/i could/MD/could do/VB/do that/DT/that also/RB/also but/CC/but why/WRB/why keep/VB/keep incrementing/VBG/incrementing unnecessarily/NNP/unnecessarily. i/PRP/i am/VBP/am going/VBG/going to/TO/to increment/NN/increment only/RB/only when/WRB/when i/PRP/i reach/VBP/reach a/DT/a new/JJ/new vertex/NN/vertex /,/, so/RB/so i/PRP/i reached/VBD/reached a/DT/a new/JJ/new vertex/NN/vertex i/PRP/i give/VBP/give it/PRP/it a/DT/a time/NN/time stamp/NN/stamp of/IN/of a/DT/a 4/CD/4. now/RB/now at/IN/at this/DT/this vertex/NN/vertex what/WP/what are/VBP/are the/DT/the other/JJ/other options/NNS/options i/PRP/i have/VBP/have ?/./? i/PRP/i can/MD/can go/VB/go along/IN/along this/DT/this edge/NN/edge or/CC/or i/PRP/i can/MD/can go/VB/go along/IN/along this/DT/this edge/NNP/edge. let/VBD/let ?/./? s/NNS/s say/VBP/say i/PRP/i decided/VBD/decided to/TO/to go/VB/go along/IN/along this/DT/this edge/NNP/edge. i/PRP/i decided/VBD/decided to/TO/to go/VB/go along/IN/along this/DT/this edge/NN/edge /,/, i/PRP/i came/VBD/came to/TO/to this/DT/this vertex/NN/vertex at/IN/at time/NN/time 5/CD/5 say/NNP/say. at/IN/at this/DT/this point/NN/point i/PRP/i could/MD/could go/VB/go along/IN/along this/DT/this edge/NN/edge to/TO/to this/DT/this vertex/NN/vertex but/CC/but again/RB/again this/DT/this vertex/NN/vertex is/VBZ/is already/RB/already visited/NNP/visited. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to do/VB/do that/NNP/that. since/IN/since there/EX/there is/VBZ/is no/DT/no other/JJ/other option/NN/option left/VBD/left /,/, i/PRP/i will/MD/will backtrack/VB/backtrack out/RP/out of/IN/of here/NNP/here. i/PRP/i have/VBP/have finished/VBN/finished my/PRP$/my visit/NN/visit at/IN/at this/DT/this vertex/NN/vertex at/IN/at time/NN/time six/NNP/six. always/RB/always backtrack/VBP/backtrack to/TO/to where/WRB/where we/PRP/we came/VBD/came from/NNP/from. we/PRP/we came/VBD/came from/IN/from 4/CD/4 so/RB/so we/PRP/we go/VBP/go back/RB/back to/TO/to that/NNP/that. now/RB/now i/PRP/i come/VBP/come back/RB/back to/TO/to 4/CD/4 but/CC/but there/EX/there is/VBZ/is one/CD/one other/JJ/other option/NN/option at/IN/at four/CD/four which/WDT/which i/PRP/i have/VBP/have not/RB/not explored/VBN/explored which/WDT/which is/VBZ/is going/VBG/going like/IN/like this/NNP/this. i/PRP/i am/VBP/am going/VBG/going to/TO/to follow/VB/follow that/IN/that now/RB/now and/CC/and reach/VBP/reach this/DT/this vertex/NN/vertex at/IN/at time/NN/time 7/CD/7. yes/NNS/yes ?/./? when/WRB/when i/PRP/i reach/VBP/reach this/DT/this vertex/NN/vertex at/IN/at time/NN/time 7/CD/7 /,/, now/RB/now i/PRP/i look/VBP/look at/IN/at the/DT/the other/JJ/other options/NNS/options i/PRP/i have/NNP/have. this/DT/this is/VBZ/is one/CD/one option/NN/option but/CC/but this/DT/this leads/NNS/leads to/TO/to me/PRP/me to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/NNP/visited. this/DT/this is/VBZ/is another/DT/another option/NN/option i/PRP/i have/VBP/have but/CC/but this/DT/this also/RB/also leads/VBZ/leads me/PRP/me to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/NNP/visited. so/RB/so no/DT/no other/JJ/other options/NNS/options /,/, i/PRP/i backtrack/VBP/backtrack out/RP/out of/IN/of seven/NNP/seven. at/IN/at time/NN/time 8/CD/8 i/PRP/i backtrack/VBP/backtrack out/RP/out of/IN/of seven/CD/seven and/CC/and i/PRP/i come/VBP/come back/RB/back to/TO/to this/DT/this vertex/NNP/vertex. at/IN/at this/DT/this vertex/NN/vertex i/PRP/i have/VBP/have explored/VBN/explored all/DT/all options/NNP/options. i/PRP/i went/VBD/went along/IN/along this/DT/this edge/NN/edge /,/, i/PRP/i went/VBD/went along/IN/along this/DT/this edge/NN/edge and/CC/and had/VBD/had come/VBN/come along/IN/along this/DT/this edge/NN/edge /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the only/JJ/only edge/NN/edge left/NNP/left. in/IN/in some/DT/some sense/NN/sense i/PRP/i go/VBP/go back/RB/back along/IN/along this/NNP/this. i/PRP/i have/VBP/have explored/VBN/explored this/DT/this /,/, i/PRP/i have/VBP/have explored/VBN/explored this/DT/this so/RB/so i/PRP/i am/VBP/am ready/JJ/ready to/TO/to backtrack/VB/backtrack out/RP/out of/IN/of this/DT/this vertex/NNP/vertex. i/PRP/i backtrack/VBP/backtrack out/RP/out of/IN/of this/DT/this vertex/NN/vertex at/IN/at time/NN/time nine/NNP/nine. backtrack/NN/backtrack out/IN/out of/IN/of this/DT/this vertex/NN/vertex at/IN/at time/NN/time nine/CD/nine and/CC/and where/WRB/where do/VBP/do i/PRP/i end/VB/end up/RP/up ?/./? at/IN/at this/DT/this vertex/NNP/vertex. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 48/CD/48 /CD/) so/RB/so now/RB/now reached/VBN/reached this/DT/this vertex/NNP/vertex. at/IN/at this/DT/this vertex/NN/vertex i/PRP/i have/VBP/have explored/VBN/explored this/DT/this possibility/NN/possibility /,/, i/PRP/i have/VBP/have explored/VBN/explored this/DT/this possibility/NNP/possibility. i/PRP/i have/VBP/have not/RB/not yet/RB/yet explored/VBN/explored this/DT/this possibility/NN/possibility but/CC/but this/DT/this is/VBZ/is meaningless/NN/meaningless because/IN/because this/DT/this vertex/NN/vertex is/VBZ/is already/RB/already visited/NNP/visited. i/PRP/i have/VBP/have explored/VBN/explored all/DT/all possibilities/NNS/possibilities out/IN/out of/IN/of this/DT/this vertex/NN/vertex /,/, so/RB/so i/PRP/i now/RB/now backtrack/VBP/backtrack out/RP/out of/IN/of this/NNP/this. i/PRP/i backtrack/VBP/backtrack out/RP/out of/IN/of this/DT/this at/IN/at time/NN/time 10/CD/10 and/CC/and i/PRP/i come/VBP/come back/RB/back to/TO/to this/DT/this vertex/NNP/vertex. at/IN/at this/DT/this vertex/NN/vertex i/PRP/i have/VBP/have only/RB/only explored/VBN/explored this/DT/this edge/NN/edge yet/NNP/yet. now/RB/now i/PRP/i go/VBP/go explore/RB/explore this/DT/this edge/NN/edge but/CC/but this/DT/this is/VBZ/is going/VBG/going to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/VBN/visited /,/, so/RB/so i/PRP/i can/MD/can not/RB/not do/VB/do anything/NNP/anything. this/DT/this is/VBZ/is going/VBG/going to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/VBN/visited so/RB/so i/PRP/i can/MD/can not/RB/not do/VB/do anything/NNP/anything. this/DT/this is/VBZ/is going/VBG/going to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/VBN/visited /,/, i/PRP/i can/MD/can not/RB/not do/VB/do anything/NNP/anything. i/PRP/i am/VBP/am done/NN/done with/IN/with this/DT/this vertex/NN/vertex also/NNP/also. at/IN/at time/NN/time 11/CD/11 i/PRP/i finish/VBP/finish at/IN/at this/DT/this vertex/NNP/vertex. each/DT/each vertex/NN/vertex is/VBZ/is been/VBN/been given/VBN/given two/CD/two numbers/NNP/numbers. the/DT/the time/NN/time at/IN/at which/WDT/which we/PRP/we came/VBD/came there/RB/there /,/, the/DT/the time/NN/time at/IN/at which/WDT/which we/PRP/we left/VBD/left /,/, 6/CD/6 vertices/NNS/vertices so/IN/so there/EX/there should/MD/should be/VB/be 12/CD/12 numbers/NNS/numbers in/IN/in all/NNP/all. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16.49/CD/16.49 /CD/) that/WDT/that ?/./? s/VBZ/s what/WP/what we/PRP/we have/VBP/have 0/-NONE-/0 through/IN/through 11/CD/11. this/DT/this procedure/NN/procedure is/VBZ/is called/VBN/called a/DT/a depth/NN/depth first/RB/first search/NNP/search. any/DT/any questions/NNS/questions so/RB/so far/RB/far ?/./? once/RB/once again/RB/again we/PRP/we will/MD/will have/VB/have a/DT/a notion/NN/notion of/IN/of black/JJ/black /,/, grey/NN/grey and/CC/and white/NN/white vertices/NNS/vertices just/RB/just as/IN/as we/PRP/we had/VBD/had in/IN/in the/DT/the case/NN/case of/IN/of breadth/NN/breadth first/RB/first search/NNP/search. what/WP/what should/MD/should our/PRP$/our initial/JJ/initial color/NN/color on/IN/on the/DT/the vertices/NNS/vertices be/VB/be ?/./? white/JJ/white /,/, unvisited/VBN/unvisited same/JJ/same as/IN/as breadth/NN/breadth first/RB/first search/NNP/search. when/WRB/when should/MD/should i/VB/i color/NN/color a/DT/a vertex/NN/vertex grey/NN/grey ?/./? when/WRB/when i/PRP/i reach/VBP/reach that/IN/that node/NN/node then/RB/then i/PRP/i color/VBP/color it/PRP/it grey/NNP/grey. when/WRB/when should/MD/should i/VB/i color/NN/color it/PRP/it black/VBP/black ?/./? when/WRB/when i/PRP/i leave/VBP/leave that/IN/that node/NN/node eventually/RB/eventually then/RB/then i/PRP/i should/MD/should color/VB/color it/PRP/it black/NNP/black. is/VBZ/is it/PRP/it clear/RB/clear to/TO/to everyone/VB/everyone ?/./? same/JJ/same as/IN/as in/IN/in the/DT/the breadth/NN/breadth first/RB/first search/NNP/search. when/WRB/when i/PRP/i had/VBD/had removed/VBN/removed the/DT/the node/NN/node from/IN/from the/DT/the queue/NN/queue /,/, when/WRB/when i/PRP/i inserted/VBD/inserted the/DT/the node/NN/node into/IN/into the/DT/the queue/JJ/queue in/IN/in breadth/NN/breadth first/RB/first search/NN/search i/PRP/i color/VBP/color it/PRP/it grey/NNP/grey. when/WRB/when i/PRP/i removed/VBD/removed it/PRP/it from/IN/from the/DT/the queue/NN/queue i/PRP/i put/VBD/put its/PRP$/its neighbors/NNS/neighbors back/RB/back into/IN/into the/DT/the queue/NNP/queue. if/IN/if any/DT/any of/IN/of the/DT/the neighbors/NNS/neighbors is/VBZ/is white/JJ/white i/NN/i put/VBD/put into/IN/into the/DT/the queue/JJ/queue and/CC/and i/PRP/i color/VBP/color this/DT/this node/NN/node black/NNP/black. so/RB/so corresponding/VBG/corresponding thing/NN/thing here/RB/here would/MD/would be/VB/be when/WRB/when i/PRP/i backtrack/VBP/backtrack from/IN/from a/DT/a node/NNP/node. i/PRP/i have/VBP/have explored/VBN/explored all/DT/all possibilities/NNS/possibilities going/VBG/going out/RP/out of/IN/of that/DT/that node/NN/node then/RB/then i/PRP/i color/VBP/color that/IN/that node/NN/node black/NNP/black. so/RB/so if/IN/if i/PRP/i am/VBP/am at/IN/at a/DT/a node/NN/node /,/, i/PRP/i will/MD/will look/VB/look at/IN/at its/PRP$/its neighbors/NNS/neighbors and/CC/and which/WDT/which neighbor/NN/neighbor will/MD/will i/VB/i go/VB/go to/TO/to ?/./? suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the first/JJ/first neighbor/NN/neighbor i/PRP/i consider/VBP/consider /,/, in/IN/in what/WP/what circumstances/NNS/circumstances /,/, what/WP/what should/MD/should be/VB/be the/DT/the color/NN/color of/IN/of this/DT/this neighbor/NN/neighbor so/IN/so that/IN/that i/PRP/i would/MD/would go/VB/go to/TO/to this/DT/this neighbor/NN/neighbor /,/, white/NNP/white. yet/RB/yet to/TO/to be/VB/be explored/NNP/explored. only/RB/only if/IN/if this/DT/this node/NN/node is/VBZ/is white/JJ/white /,/, will/MD/will i/VB/i go/VB/go to/TO/to this/DT/this node/NNP/node. if/IN/if it/PRP/it is/VBZ/is black/JJ/black or/CC/or grey/NN/grey then/RB/then i/PRP/i will/MD/will not/RB/not go/VB/go to/TO/to this/DT/this node/NN/node at/IN/at all/NNP/all. i/PRP/i am/VBP/am at/IN/at this/DT/this node/NN/node /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i am/VBP/am saying/NNP/saying. if/IN/if this/DT/this node/NN/node is/VBZ/is white/JJ/white only/RB/only then/RB/then do/VBP/do i/PRP/i explore/VB/explore it/PRP/it so/RB/so to/TO/to say/NNP/say. let/VB/let ?/./? s/NNS/s understand/VBP/understand this/DT/this example/NN/example a/DT/a bit/NN/bit more/NNP/more. let/NN/let ?/./? s/NNS/s mark/VBP/mark out/RP/out the/DT/the edges/NNS/edges along/IN/along which/WDT/which we/PRP/we traveled/VBD/traveled in/IN/in the/DT/the course/NN/course of/IN/of our/PRP$/our breadth/NN/breadth first/RB/first search/NN/search with/IN/with red/NNP/red. i/PRP/i travel/VBP/travel along/JJ/along this/DT/this edge/NN/edge because/IN/because i/PRP/i came/VBD/came from/IN/from here/RB/here to/TO/to here/RB/here along/IN/along this/DT/this edge/NN/edge /,/, how/WRB/how did/VBD/did i/PRP/i reach/VBP/reach two/CD/two from/IN/from this/DT/this one/CD/one ?/./? i/PRP/i traveled/VBD/traveled along/IN/along this/DT/this edge/NN/edge /,/, so/RB/so once/RB/once i/PRP/i went/VBD/went along/IN/along this/DT/this edge/NN/edge then/RB/then i/PRP/i backtracked/VBD/backtracked along/IN/along this/DT/this edge/NNP/edge. then/RB/then i/PRP/i went/VBD/went along/IN/along this/DT/this edge/NN/edge then/RB/then i/PRP/i went/VBD/went along/IN/along this/DT/this edge/NN/edge /,/, then/RB/then i/PRP/i backtracked/VBD/backtracked along/IN/along this/DT/this edge/NNP/edge. then/RB/then i/PRP/i went/VBD/went along/IN/along this/DT/this edge/NN/edge /,/, backtracked/VBD/backtracked along/IN/along this/DT/this /,/, backtracked/VBD/backtracked along/IN/along this/DT/this /,/, backtracked/VBD/backtracked along/IN/along this/NNP/this. each/DT/each one/CD/one of/IN/of these/DT/these red/VBN/red edges/NNS/edges /,/, i/PRP/i have/VBP/have went/JJ/went along/IN/along them/PRP/them twice/NNP/twice. once/RB/once i/PRP/i went/VBD/went along/IN/along the/DT/the edge/NN/edge /,/, the/DT/the other/JJ/other time/NN/time i/PRP/i backtrack/VBP/backtrack along/JJ/along the/DT/the edge/NNP/edge. how/WRB/how many/JJ/many such/JJ/such edges/NNS/edges are/VBP/are there/RB/there ?/./? how/WRB/how many/JJ/many red/JJ/red edges/NNS/edges are/VBP/are there/RB/there ?/./? /:/[ student/NN/student /:/: n/NN/n minus/NN/minus 1/CD/1 /CD/] the/DT/the number/NN/number of/IN/of these/DT/these red/VBN/red edges/NNS/edges would/MD/would be/VB/be n/VBN/n minus/NN/minus 1/CD/1. why/WRB/why ?/./? /:/[ student/NN/student /:/: forward/NN/forward tree/NN/tree /:/] why/WRB/why it/PRP/it is/VBZ/is a/DT/a tree/NN/tree ?/./? who/WP/who said/VBD/said it/PRP/it is/VBZ/is a/DT/a tree/NN/tree ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use a/DT/a different/JJ/different argument/NN/argument for/IN/for it/PRP/it ?/./? s/NNS/s a/DT/a tree/NNP/tree. first/JJ/first why/WRB/why should/MD/should this/DT/this have/VB/have n/NN/n minus/NN/minus 1/CD/1 edges/NNS/edges ?/./? for/IN/for every/DT/every vertex/NN/vertex there/RB/there is/VBZ/is one/CD/one edge/NN/edge along/IN/along which/WDT/which i/PRP/i came/VBD/came to/TO/to that/DT/that vertex/NN/vertex and/CC/and the/DT/the same/JJ/same edge/NN/edge along/IN/along which/WDT/which i/PRP/i backtrack/VBP/backtrack from/IN/from that/DT/that vertex/NNP/vertex. so/RB/so for/IN/for every/DT/every vertex/NN/vertex there/RB/there is/VBZ/is a/DT/a unique/JJ/unique edge/NN/edge except/IN/except for/IN/for the/DT/the first/JJ/first vertex/NNP/vertex. since/IN/since for/IN/for every/DT/every vertex/NN/vertex there/RB/there is/VBZ/is a/DT/a unique/JJ/unique edge/NN/edge except/IN/except for/IN/for one/CD/one /,/, there/EX/there should/MD/should be/VB/be n/VBN/n minus/NN/minus 1/CD/1 edges/NNP/edges. so/RB/so number/NN/number of/IN/of red/VBN/red edges/NNS/edges equals/NNS/equals n/VBP/n minus/NN/minus 1/CD/1. if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at the/DT/the red/NN/red edges/NNS/edges /,/, they/PRP/they form/VBP/form a/DT/a connected/VBN/connected sub/NN/sub graph/NNP/graph. why/WRB/why do/VBP/do they/PRP/they form/NN/form a/DT/a connected/VBN/connected sub/NN/sub graph/NN/graph ?/./? because/IN/because by/IN/by walking/VBG/walking along/IN/along the/DT/the red/NN/red edges/NNS/edges /,/, i/PRP/i could/MD/could visit/VB/visit all/DT/all the/DT/the vertices/NNP/vertices. yes/VBZ/yes /,/, all/DT/all i/PRP/i did/VBD/did was/VBD/was walk/NN/walk along/IN/along the/DT/the red/NN/red edges/NNP/edges. that/IN/that ?/./? s/NNS/s all/DT/all i/PRP/i did/NNP/did. so/RB/so by/IN/by just/RB/just by/IN/by using/VBG/using the/DT/the red/NN/red edges/NNS/edges /,/, i/PRP/i could/MD/could visit/VB/visit all/DT/all the/DT/the vertices/NNS/vertices starting/VBG/starting from/IN/from the/DT/the root/NN/root /,/, from/IN/from this/DT/this start/NN/start vertex/NNP/vertex. these/DT/these red/JJ/red edges/NNS/edges form/NN/form a/DT/a connected/VBN/connected sub/NN/sub graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 00/CD/00 /CD/) so/RB/so connected/VBN/connected sub/NN/sub graphs/NNS/graphs with/IN/with n/NN/n minus/NN/minus 1/CD/1 edges/NNS/edges is/VBZ/is a/DT/a tree/NNP/tree. yes/VBZ/yes /,/, we/PRP/we have/VBP/have done/VBN/done this/DT/this before/NNP/before. if/IN/if i/PRP/i have/VBP/have connected/VBN/connected sub/NN/sub graph/NN/graph with/IN/with only/RB/only n/JJ/n minus/NN/minus 1/CD/1 edges/NNS/edges in/IN/in it/PRP/it /,/, it/PRP/it can/MD/can not/RB/not have/VB/have a/DT/a cycle/NN/cycle we/PRP/we have/VBP/have proved/VBN/proved this/NNP/this. so/RB/so it/PRP/it ?/./? s/NNS/s a/DT/a tree/NNP/tree. the/DT/the red/NN/red edges/NNS/edges form/NN/form a/DT/a tree/NN/tree and/CC/and this/DT/this tree/NN/tree is/VBZ/is also/RB/also called/VBN/called the/DT/the dfs/NNS/dfs tree/VBP/tree /,/, the/DT/the depth/NN/depth first/RB/first search/NN/search tree/NNP/tree. is/VBZ/is this/DT/this clear/JJ/clear ?/./? just/RB/just as/IN/as we/PRP/we had/VBD/had a/DT/a breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree /,/, a/DT/a breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree was/VBD/was defined/VBN/defined in/IN/in terms/NNS/terms of/IN/of predecessors/NNP/predecessors. here/RB/here also/RB/also we/PRP/we can/MD/can have/VB/have a/DT/a notion/NN/notion of/IN/of a/DT/a predecessor/NNP/predecessor. what/WP/what is/VBZ/is the/DT/the predecessor/NN/predecessor of/IN/of this/DT/this vertex/NN/vertex ?/./? the/DT/the vertex/NN/vertex which/WDT/which was/VBD/was visited/VBN/visited at/IN/at time/NN/time one/CD/one because/IN/because why/WRB/why should/MD/should that/DT/that be/VB/be the/DT/the predecessor/NN/predecessor ?/./? i/PRP/i came/VBD/came to/TO/to here/RB/here from/IN/from there/EX/there so/RB/so that/IN/that is/VBZ/is an/DT/an actual/JJ/actual notion/NN/notion of/IN/of predecessor/NN/predecessor and/CC/and these/DT/these edges/NNS/edges then/RB/then ?/./? the/DT/the same/JJ/same thing/NN/thing /,/, same/JJ/same idea/NN/idea is/VBZ/is getting/VBG/getting repeated/NNP/repeated. just/RB/just as/IN/as we/PRP/we had/VBD/had a/DT/a breadth/NN/breadth first/RB/first search/NN/search tree/NN/tree there/EX/there /,/, we/PRP/we have/VBP/have a/DT/a depth/NN/depth first/RB/first search/NN/search tree/NN/tree here/NNP/here. but/CC/but the/DT/the breadth/NN/breadth first/RB/first search/NN/search and/CC/and the/DT/the depth/NN/depth first/RB/first search/NN/search tree/NN/tree are/VBP/are completely/RB/completely different/NNP/different. what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do now/RB/now is/VBZ/is to/TO/to redraw/VB/redraw this/DT/this tree/NNP/tree. i/PRP/i am/VBP/am going/VBG/going to/TO/to keep/VB/keep it/PRP/it like/IN/like this/NNP/this. can/MD/can you/PRP/you all/DT/all see/VB/see the/DT/the picture/NN/picture ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to redraw/VB/redraw it/PRP/it so/RB/so that/IN/that it/PRP/it looks/VBZ/looks like/IN/like a/DT/a rooted/JJ/rooted tree/NN/tree now/NNP/now. this/DT/this is/VBZ/is this/DT/this vertex/NN/vertex and/CC/and let/VB/let me/PRP/me draw/VB/draw it/PRP/it in/IN/in brown/NNP/brown. this/DT/this is/VBZ/is that/IN/that and/CC/and the/DT/the next/JJ/next vertex/NN/vertex would/MD/would be/VB/be there/RB/there and/CC/and from/IN/from here/RB/here i/PRP/i have/VBP/have this/DT/this /,/, so/RB/so this/DT/this is/VBZ/is this/DT/this vertex/NN/vertex that/IN/that i/PRP/i have/VBP/have drawn/VBN/drawn /,/, from/IN/from here/RB/here i/PRP/i have/VBP/have an/DT/an edge/NN/edge to/TO/to there/EX/there and/CC/and i/PRP/i have/VBP/have another/DT/another edge/NNP/edge. these/DT/these are/VBP/are all/DT/all the/DT/the 6/CD/6 vertices/NNP/vertices. if/IN/if you/PRP/you want/VBP/want /,/, i/PRP/i will/MD/will put/VB/put down/RP/down the/DT/the numbers/NNS/numbers so/RB/so that/IN/that you/PRP/you can/MD/can also/RB/also see/VB/see the/DT/the correspondences/NNP/correspondences. this/DT/this is/VBZ/is 0/-NONE-/0 slash/NN/slash 11/CD/11 /,/, this/DT/this is/VBZ/is the/DT/the 1/CD/1 slash/NN/slash 10/CD/10 /,/, this/DT/this is/VBZ/is 2/CD/2 slash/NN/slash 3/CD/3 /,/, this/DT/this is/VBZ/is 4/CD/4 slash/NN/slash 9/CD/9 /,/, 5/CD/5 slash/NN/slash 6/CD/6 /,/, 7/CD/7 slash/NN/slash 8/CD/8. let/NN/let me/PRP/me also/RB/also draw/VBP/draw the/DT/the other/JJ/other edges/NNS/edges of/IN/of the/DT/the graph/NNP/graph. right/NN/right now/RB/now i/PRP/i have/VBP/have only/RB/only drawn/VBN/drawn the/DT/the tree/NN/tree edges/NNS/edges /,/, the/DT/the dfs/NNS/dfs tree/VBP/tree edges/NNP/edges. these/DT/these are/VBP/are the/DT/the edges/NNS/edges along/IN/along which/WDT/which we/PRP/we traveled/NNP/traveled. let/VBP/let me/PRP/me also/RB/also draw/VBP/draw the/DT/the other/JJ/other edges/NNP/edges. how/WRB/how many/JJ/many other/JJ/other edges/NNS/edges do/VBP/do we/PRP/we have/VB/have ?/./? we/PRP/we have/VBP/have 4/CD/4 other/JJ/other edges/NNP/edges. there/EX/there is/VBZ/is one/CD/one edge/NN/edge from/IN/from here/RB/here to/TO/to here/RB/here /,/, there/EX/there is/VBZ/is one/CD/one edge/NN/edge from/IN/from 1//CD/1/ 10/CD/10 to/TO/to 7/8/CD/7/8. this/DT/this is/VBZ/is another/DT/another edge/NN/edge /,/, this/DT/this is/VBZ/is this/DT/this edge/NNP/edge. there/RB/there is/VBZ/is one/CD/one edge/NN/edge from/IN/from 7/CD/7 8/CD/8 to/TO/to 0/-NONE-/0 11/CD/11 this/DT/this edge/NN/edge /,/, there/EX/there is/VBZ/is this/DT/this edge/NN/edge 0/-NONE-/0 11/CD/11 to/TO/to 5/CD/5 6/CD/6. let/NN/let me/PRP/me draw/VBD/draw it/PRP/it like/IN/like that/NNP/that. this/DT/this is/VBZ/is an/DT/an undirected/VBN/undirected graph/NN/graph so/IN/so these/DT/these directions/NNS/directions that/WDT/that i/PRP/i have/VBP/have shown/VBN/shown are/VBP/are meaningless/NNP/meaningless. it/PRP/it is/VBZ/is just/RB/just to/TO/to signify/VB/signify that/IN/that this/DT/this is/VBZ/is how/WRB/how we/PRP/we moved/VBD/moved and/CC/and now/RB/now i/PRP/i can/MD/can get/VB/get rid/JJ/rid of/IN/of this/DT/this picture/NNP/picture. this/DT/this is/VBZ/is our/PRP$/our graph/NNP/graph. i/PRP/i have/VBP/have just/RB/just redrawn/VBN/redrawn it/PRP/it so/RB/so that/IN/that now/RB/now it/PRP/it looks/VBZ/looks like/IN/like a/DT/a rooted/JJ/rooted tree/NN/tree and/CC/and the/DT/the predecessor/NN/predecessor of/IN/of the/DT/the node/NN/node now/RB/now is/VBZ/is just/RB/just the/DT/the parent/NN/parent of/IN/of that/DT/that node/NNP/node. if/IN/if i/PRP/i define/VBP/define this/DT/this as/IN/as the/DT/the root/NN/root then/RB/then there/RB/there is/VBZ/is a/DT/a natural/JJ/natural parent/NN/parent child/NN/child relationship/NN/relationship between/IN/between the/DT/the nodes/NNP/nodes. the/DT/the parent/NN/parent of/IN/of this/DT/this node/NN/node is/VBZ/is this/DT/this and/CC/and it/PRP/it is/VBZ/is also/RB/also the/DT/the predecessor/NNP/predecessor. so/RB/so quite/RB/quite often/RB/often we/PRP/we will/MD/will talk/VB/talk in/IN/in terms/NNS/terms of/IN/of parent/NN/parent child/NN/child siblings/NNS/siblings and/CC/and all/DT/all for/IN/for a/DT/a dfs/NN/dfs tree/NNP/tree. when/WRB/when we/PRP/we say/VBP/say that/IN/that basically/RB/basically means/VBZ/means we/PRP/we are/VBP/are thinking/VBG/thinking of/IN/of the/DT/the starting/NN/starting vertex/NN/vertex is/VBZ/is the/DT/the root/NN/root of/IN/of the/DT/the tree/NN/tree and/CC/and we/PRP/we are/VBP/are basically/RB/basically hanging/VBG/hanging the/DT/the tree/NN/tree from/IN/from there/EX/there and/CC/and then/RB/then whatever/RB/whatever is/VBZ/is the/DT/the parent/NN/parent child/NN/child relationship/NN/relationship that/WDT/that gets/VBZ/gets defined/VBN/defined that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we are/VBP/are working/VBG/working with/NNP/with. let/NN/let ?/./? s/NNS/s look/VBP/look at/IN/at more/JJR/more properties/NNS/properties of/IN/of depth/NN/depth first/RB/first search/NNP/search. these/DT/these green/JJ/green edges/NNS/edges /,/, so/RB/so the/DT/the brown/NN/brown edges/NNS/edges are/VBP/are called/VBN/called tree/NN/tree edges/NNS/edges /,/, that/IN/that ?/./? s/NNS/s the/DT/the brown/NN/brown edges/NNP/edges. the/DT/the green/JJ/green edges/NNS/edges are/VBP/are called/VBN/called back/RB/back edges/NNS/edges and/CC/and we/PRP/we will/MD/will see/VB/see why/WRB/why they/PRP/they are/VBP/are called/VBN/called back/RB/back edges/NNS/edges and/CC/and why/WRB/why not/RB/not front/JJ/front edges/NNP/edges. what/WP/what ?/./? s/NNS/s back/RB/back about/IN/about them/PRP/them ?/./? now/RB/now let/VB/let me/PRP/me think/VBP/think of/IN/of depth/NN/depth first/RB/first search/NN/search has/VBZ/has been/VBN/been done/VBN/done on/IN/on this/DT/this graph/NNP/graph. this/DT/this is/VBZ/is the/DT/the entire/JJ/entire graph/NNP/graph. all/DT/all the/DT/the edges/NNS/edges and/CC/and the/DT/the vertices/NNS/vertices are/VBP/are here/NNP/here. i/PRP/i started/VBD/started from/IN/from this/DT/this vertex/NN/vertex /,/, i/PRP/i came/VBD/came down/RP/down to/TO/to this/DT/this /,/, i/PRP/i came/VBD/came down/RP/down to/TO/to this/DT/this and/CC/and then/RB/then i/PRP/i looked/VBD/looked at/IN/at /,/, this/DT/this was/VBD/was one/CD/one option/NN/option available/JJ/available to/TO/to me/NNP/me. but/CC/but this/DT/this edge/NN/edge was/VBD/was going/VBG/going back/RB/back to/TO/to a/DT/a vertex/NN/vertex which/WDT/which i/PRP/i had/VBD/had already/RB/already visited/NNP/visited. yes/NNS/yes /,/, and/CC/and so/RB/so this/DT/this is/VBZ/is called/VBN/called a/DT/a back/RB/back edge/NN/edge /,/, going/VBG/going back/RB/back to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/NNP/visited. /:/[ hindi/NN/hindi /:/] then/RB/then it/PRP/it is/VBZ/is going/VBG/going back/RB/back to/TO/to a/DT/a vertex/NN/vertex which/WDT/which was/VBD/was already/RB/already visited/VBN/visited so/RB/so i/PRP/i don/VBP/don ?/./? t/NN/t go/VB/go there/NNP/there. there/RB/there is/VBZ/is no/DT/no other/JJ/other option/NN/option left/VBD/left here/RB/here so/RB/so i/PRP/i backtrack/NNP/backtrack. this/DT/this is/VBZ/is the/DT/the option/NN/option here/RB/here i/PRP/i come/VBP/come here/RB/here /,/, i/PRP/i come/VBP/come here/RB/here again/RB/again this/DT/this is/VBZ/is an/DT/an edge/NN/edge going/VBG/going back/RB/back to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/NNP/visited. i/PRP/i don/VBP/don ?/./? t/NN/t go/VB/go along/IN/along this/DT/this edge/NNP/edge. i/PRP/i backtrack/VBP/backtrack from/IN/from here/RB/here /,/, i/PRP/i come/VBP/come here/NNP/here. this/DT/this is/VBZ/is an/DT/an edge/NN/edge going/VBG/going back/RB/back to/TO/to a/DT/a vertex/NN/vertex already/RB/already visited/NNP/visited. i/PRP/i don/VBP/don ?/./? t/NN/t go/VB/go along/IN/along this/DT/this /,/, i/PRP/i backtrack/VBP/backtrack /,/, i/PRP/i backtrack/NNP/backtrack. i/PRP/i could/MD/could now/RB/now look/VB/look at/IN/at this/DT/this edge/NN/edge again/RB/again and/CC/and say/VB/say well/RB/well this/DT/this is/VBZ/is going/VBG/going ahead/RB/ahead to/TO/to a/DT/a vertex/NN/vertex already/RB/already visited/NNP/visited. i/PRP/i could/MD/could potentially/RB/potentially have/VB/have also/RB/also called/VBN/called it/PRP/it a/DT/a front/NN/front edge/NN/edge but/CC/but since/IN/since we/PRP/we first/RB/first considered/VBN/considered it/PRP/it as/IN/as a/DT/a back/NN/back edge/NN/edge /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to stick/VB/stick to/TO/to the/DT/the term/NN/term back/RB/back edge/NNP/edge. this/DT/this is/VBZ/is an/DT/an edge/NN/edge we/PRP/we going/VBG/going to/TO/to a/DT/a vertex/NN/vertex already/RB/already visited/VBN/visited /,/, so/RB/so we/PRP/we don/VBP/don ?/./? t/NN/t consider/NN/consider this/DT/this and/CC/and since/IN/since all/DT/all option/NN/option i/PRP/i exhausted/VBD/exhausted here/RB/here /,/, back/RB/back track/VBP/track /,/, i/PRP/i come/VBP/come here/NNP/here. these/DT/these are/VBP/are all/DT/all edges/NNS/edges which/WDT/which we/PRP/we have/VBP/have so/RB/so to/TO/to say/VB/say have/VBP/have been/VBN/been classified/VBN/classified as/IN/as back/RB/back edges/NNP/edges. we/PRP/we don/VBP/don ?/./? t/NN/t or/CC/or they/PRP/they are/VBP/are going/VBG/going to/TO/to vertices/NNS/vertices which/WDT/which are/VBP/are already/RB/already visited/NNP/visited. we/PRP/we don/VBP/don ?/./? t/NN/t do/VB/do anything/NN/anything and/CC/and we/PRP/we are/VBP/are done/NNP/done. who/WP/who can/MD/can formally/RB/formally define/VB/define for/IN/for me/PRP/me what/WP/what a/DT/a back/RB/back edge/NN/edge is/VBZ/is ?/./? what/WP/what is/VBZ/is a/DT/a property/NN/property of/IN/of a/DT/a back/NN/back edge/NN/edge ?/./? now/RB/now i/PRP/i think/VBP/think i/PRP/i am/VBP/am getting/VBG/getting ahead/RB/ahead of/IN/of myself/NNP/myself. now/RB/now i/PRP/i have/VBP/have the/DT/the following/VBG/following question/NN/question /,/, could/MD/could there/VB/there be/VB/be an/DT/an edge/NN/edge from/IN/from this/DT/this vertex/NN/vertex to/TO/to this/DT/this vertex/NNP/vertex. could/MD/could this/DT/this dotted/VBN/dotted red/VBD/red edge/NN/edge be/VB/be ?/./? so/RB/so i/PRP/i have/VBP/have drawn/VBN/drawn a/DT/a dotted/VBN/dotted but/CC/but most/JJS/most likely/JJ/likely it/PRP/it should/MD/should not/RB/not be/VB/be there/RB/there but/CC/but why/WRB/why ?/./? when/WRB/when i/PRP/i came/VBD/came to/TO/to two/CD/two /,/, when/WRB/when i/PRP/i came/VBD/came to/TO/to this/DT/this vertex/NN/vertex at/IN/at time/NN/time two/CD/two then/RB/then i/PRP/i backtracked/VBD/backtracked out/RP/out of/IN/of this/DT/this vertex/NN/vertex only/RB/only because/IN/because there/EX/there was/VBD/was no/DT/no other/JJ/other option/NN/option available/JJ/available to/TO/to me/NNP/me. but/CC/but if/IN/if this/DT/this edge/NN/edge was/VBD/was there/RB/there then/RB/then this/DT/this was/VBD/was an/DT/an option/NN/option available/JJ/available to/TO/to me/PRP/me why/WRB/why because/IN/because this/DT/this vertex/NN/vertex was/VBD/was not/RB/not yet/RB/yet visited/NNP/visited. this/DT/this vertex/NN/vertex was/VBD/was visited/VBN/visited only/RB/only at/IN/at time/NN/time 4/CD/4. at/IN/at time/NN/time 2/CD/2 this/DT/this vertex/NN/vertex was/VBD/was not/RB/not visited/VBN/visited and/CC/and so/RB/so it/PRP/it is/VBZ/is still/RB/still a/DT/a white/JJ/white vertex/NN/vertex and/CC/and so/RB/so i/PRP/i would/MD/would have/VB/have gone/VBN/gone along/IN/along this/DT/this edge/NN/edge and/CC/and if/IN/if i/PRP/i had/VBD/had gone/VBN/gone along/IN/along this/DT/this edge/NN/edge then/RB/then this/DT/this would/MD/would not/RB/not be/VB/be the/DT/the picture/NN/picture at/IN/at all/NNP/all. clearly/RB/clearly this/DT/this edge/NN/edge is/VBZ/is not/RB/not there/RB/there in/IN/in the/DT/the graph/NNP/graph. /NNP/[ student/NN/student /:/: sir/NN/sir we/PRP/we have/VBP/have the/DT/the level/NN/level difference/NN/difference /:/] no/DT/no /,/, we/PRP/we will/MD/will understand/VB/understand what/WP/what these/DT/these edges/NNS/edges are/VBP/are in/IN/in a/DT/a second/NNP/second. there/RB/there is/VBZ/is nothing/NN/nothing to/TO/to do/VB/do with/IN/with level/NN/level here/RB/here unfortunately/NNP/unfortunately. this/DT/this is/VBZ/is again/RB/again two/CD/two we/PRP/we are/VBP/are saying/VBG/saying edges/NNS/edges which/WDT/which jump/VB/jump a/DT/a level/NN/level in/IN/in breadth/NN/breadth first/RB/first search/NN/search /,/, they/PRP/they can/MD/can not/RB/not be/VB/be because/IN/because if/IN/if they/PRP/they were/VBD/were then/RB/then that/IN/that would/MD/would not/RB/not have/VB/have been/VBN/been our/PRP$/our breadth/NN/breadth first/RB/first search/NN/search /,/, that/IN/that would/MD/would have/VB/have not/RB/not been/VBN/been this/DT/this collection/NN/collection of/IN/of levels/NNP/levels. if/IN/if this/DT/this edge/NN/edge was/VBD/was there/RB/there then/RB/then this/DT/this should/MD/should have/VB/have not/RB/not been/VBN/been the/DT/the picture/NN/picture at/IN/at all/DT/all /,/, it/PRP/it would/MD/would have/VB/have been/VBN/been something/NN/something completely/RB/completely different/NNP/different. so/RB/so this/DT/this edge/NN/edge is/VBZ/is not/RB/not there/NNP/there. this/DT/this edge/NN/edge is/VBZ/is not/RB/not there/RB/there /,/, similarly/RB/similarly this/DT/this edge/NN/edge from/IN/from here/RB/here to/TO/to here/RB/here is/VBZ/is not/RB/not there/RB/there or/CC/or from/IN/from here/RB/here to/TO/to here/RB/here is/VBZ/is not/RB/not there/NNP/there. what/WP/what are/VBP/are these/DT/these edges/NNS/edges which/WDT/which are/VBP/are not/RB/not there/RB/there ?/./? what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about edges/NNS/edges which/WDT/which are/VBP/are there/RB/there and/CC/and edges/NNS/edges which/WDT/which are/VBP/are not/RB/not there/RB/there ?/./? sibling/VBG/sibling but/CC/but this/DT/this and/CC/and this/DT/this are/VBP/are not/RB/not sibling/NNP/sibling. /:/[ student/NN/student /:/: there/EX/there is/VBZ/is no/DT/no ancestor/NN/ancestor which/WDT/which /-NONE-/] /./. what/WP/what are/VBP/are the/DT/the edges/NNS/edges which/WDT/which can/MD/can go/VB/go from/IN/from here/RB/here which/WDT/which can/MD/can emanate/VB/emanate from/IN/from here/RB/here ?/./? they/PRP/they are/VBP/are only/RB/only edges/NNS/edges which/WDT/which can/MD/can go/VB/go up/RP/up to/TO/to root/VB/root or/CC/or to/TO/to ancestors/NNS/ancestors ?/./? /:/[ student/NN/student /:/: ancestors/NNS/ancestors /VBP/] so/RB/so let/VB/let ?/./? s/NNS/s understand/VBP/understand this/DT/this /,/, this/DT/this is/VBZ/is an/DT/an imp/NN/imp very/RB/very important/JJ/important point/NNP/point. i/PRP/i have/VBP/have reached/VBN/reached the/DT/the certain/JJ/certain vertex/NN/vertex and/CC/and this/DT/this is/VBZ/is let/VB/let ?/./? s/NNS/s say/VBP/say the/DT/the sequence/NN/sequence of/IN/of vertices/NNS/vertices along/IN/along which/WDT/which i/PRP/i reached/VBD/reached here/NNP/here. i/PRP/i am/VBP/am sitting/VBG/sitting at/IN/at this/DT/this vertex/NN/vertex at/IN/at this/DT/this point/NN/point and/CC/and i/PRP/i am/VBP/am ready/JJ/ready to/TO/to backtrack/VB/backtrack /,/, ready/JJ/ready to/TO/to backtrack/VB/backtrack means/NNS/means there/RB/there is/VBZ/is no/DT/no other/JJ/other option/NN/option available/JJ/available to/TO/to me/NNP/me. what/WP/what are/VBP/are the/DT/the other/JJ/other edges/NNS/edges which/WDT/which could/MD/could have/VB/have started/VBN/started from/IN/from here/RB/here ?/./? these/DT/these are/VBP/are only/RB/only two/CD/two vertices/NNS/vertices which/WDT/which have/VBP/have already/RB/already been/VBN/been visited/NNP/visited. these/DT/these are/VBP/are clearly/RB/clearly vertices/NNS/vertices which/WDT/which have/VBP/have already/RB/already been/VBN/been visited/NNP/visited. there/RB/there could/MD/could be/VB/be edges/NNS/edges from/IN/from here/RB/here to/TO/to here/RB/here but/CC/but why/WRB/why can/MD/can ?/./? t/VB/t there/EX/there be/VB/be an/DT/an edge/NN/edge from/IN/from here/RB/here to/TO/to some/DT/some other/JJ/other vertex/NN/vertex which/WDT/which has/VBZ/has already/RB/already been/VBN/been visited/NNP/visited. /NNP/[ student/NN/student /:/: there/EX/there will/MD/will be/VB/be no/RB/no need/VBN/need instead/RB/instead of/IN/of vertex/NN/vertex /:/] no/DT/no /,/, so/RB/so why/WRB/why did/VBD/did you/PRP/you say/VB/say only/RB/only ancestors/NNS/ancestors ?/./? suppose/NN/suppose this/DT/this was/VBD/was my/PRP$/my vertex/NN/vertex here/RB/here /,/, why/WRB/why are/VBP/are we/PRP/we saying/VBG/saying that/IN/that only/RB/only two/CD/two ancestor/NNP/ancestor. why/WRB/why can/MD/can ?/./? t/VB/t we/PRP/we have/VBP/have an/DT/an edge/NN/edge from/IN/from here/RB/here to/TO/to here/RB/here ?/./? /:/[ student/NN/student /:/: because/IN/because then/RB/then it/PRP/it would/MD/would be/VB/be a/DT/a ancestor/NN/ancestor of/IN/of this/DT/this and/CC/and have/VBP/have been/VBN/been visited/VBN/visited earlier/JJR/earlier it/PRP/it would/MD/would be/VB/be /:/] if/IN/if there/EX/there was/VBD/was an/DT/an edge/NN/edge from/IN/from here/RB/here to/TO/to here/RB/here ?/./? /:/[ student/NN/student /:/: it/PRP/it has/VBZ/has to/TO/to be/VB/be child/VBN/child of/IN/of ancestor/NN/ancestor when/WRB/when do/VBP/do we/PRP/we backtrack/VB/backtrack before/IN/before backtracking/VBG/backtracking we/PRP/we would/MD/would cover/VB/cover that/IN/that vertex/NN/vertex that/WDT/that path/NN/path would/MD/would have/VB/have already/RB/already been/VBN/been covered/VBN/covered /-NONE-/] /./. what/WP/what is/VBZ/is a/DT/a formal/JJ/formal way/NN/way of/IN/of saying/VBG/saying this/DT/this ?/./? why/WRB/why should/MD/should we/PRP/we have/VB/have only/RB/only edges/NNS/edges from/IN/from a/DT/a vertex/NN/vertex ?/./? let/NN/let ?/./? s/NNS/s just/RB/just put/VBD/put down/RP/down what/WP/what we/PRP/we have/VBP/have concluded/VBN/concluded so/RB/so far/NNP/far. from/IN/from a/DT/a vertex/NN/vertex we/PRP/we can/MD/can have/VB/have edges/NNS/edges only/RB/only to/TO/to ancestors/NNS/ancestors and/CC/and such/JJ/such edges/NNS/edges are/VBP/are called/VBN/called back/RB/back edges/NNP/edges. what/WP/what is/VBZ/is a/DT/a back/RB/back edge/NN/edge ?/./? so/RB/so now/RB/now we/PRP/we are/VBP/are ready/RB/ready to/TO/to define/VB/define what/WP/what a/DT/a back/RB/back edge/NN/edge is/NNP/is. anyone/NN/anyone /,/, what/WP/what is/VBZ/is a/DT/a back/RB/back edge/NN/edge ?/./? an/DT/an edge/NN/edge /:/[ student/NN/student /:/: from/IN/from a/DT/a node/NN/node to/TO/to another/DT/another /NN/] from/IN/from a/DT/a node/NN/node to/TO/to an/DT/an ancestor/NNP/ancestor. what/WP/what is/VBZ/is an/DT/an ancestor/NN/ancestor ?/./? an/DT/an ancestor/NN/ancestor with/IN/with respect/NN/respect to/TO/to the/DT/the depth/NN/depth first/RB/first search/NN/search with/IN/with respect/NN/respect to/TO/to the/DT/the dfs/NNS/dfs tree/NNP/tree. the/DT/the notion/NN/notion of/IN/of an/DT/an ancestor/NN/ancestor is/VBZ/is coming/VBG/coming in/IN/in only/RB/only because/IN/because we/PRP/we have/VBP/have defined/VBN/defined dfs/NNS/dfs tree/NNP/tree. an/DT/an edge/NN/edge from/IN/from a/DT/a node/NN/node to/TO/to an/DT/an ancestor/NN/ancestor is/VBZ/is called/VBN/called a/DT/a back/RB/back edge/NN/edge but/CC/but not/RB/not to/TO/to ?/./? /:/[ student/NN/student /:/: but/CC/but not/RB/not to/TO/to parent/VB/parent /:/] an/DT/an edge/NN/edge from/IN/from a/DT/a node/NN/node to/TO/to a/DT/a parent/NN/parent is/VBZ/is a/DT/a tree/NN/tree edge/NNP/edge. so/RB/so we/PRP/we will/MD/will distinguish/VB/distinguish between/IN/between tree/NN/tree and/CC/and back/RB/back edges/NNP/edges. an/DT/an ancestor/NN/ancestor is/VBZ/is not/RB/not a/DT/a parent/NN/parent let/NN/let ?/./? s/NNS/s say/NNP/say. those/DT/those are/VBP/are the/DT/the back/NN/back edges/NNS/edges and/CC/and these/DT/these edges/NNS/edges /,/, the/DT/the once/RB/once in/IN/in the/DT/the red/NN/red dotted/VBD/dotted here/RB/here are/VBP/are not/RB/not back/RB/back edges/VBZ/edges because/IN/because they/PRP/they are/VBP/are not/RB/not going/VBG/going from/IN/from a/DT/a node/NN/node to/TO/to its/PRP$/its ancestor/NNP/ancestor. neither/DT/neither is/VBZ/is this/DT/this node/NN/node an/DT/an ancestor/NN/ancestor of/IN/of this/DT/this nor/NN/nor is/VBZ/is this/DT/this an/DT/an ancestor/NN/ancestor of/IN/of this/NNP/this. so/RB/so such/JJ/such edges/NNS/edges can/MD/can not/RB/not be/VB/be there/RB/there at/IN/at all/DT/all in/IN/in our/PRP$/our graph/NNP/graph. depth/NN/depth first/RB/first search/NN/search basically/RB/basically means/VBZ/means /,/, so/RB/so after/IN/after you/PRP/you do/VBP/do a/DT/a depth/NN/depth first/RB/first search/NN/search you/PRP/you end/VBP/end up/RP/up dividing/VBG/dividing now/RB/now the/DT/the set/NN/set of/IN/of edges/NNS/edges into/IN/into two/CD/two classes/NNS/classes tree/VBP/tree edges/NNS/edges and/CC/and back/RB/back edges/NNS/edges and/CC/and there/EX/there is/VBZ/is no/DT/no other/JJ/other edge/NNP/edge. /NNP/[ student/NN/student /:/: we/PRP/we can/MD/can just/RB/just say/VB/say that/IN/that any/DT/any edge/NN/edge /:/] every/DT/every edge/NN/edge gets/VBZ/gets classified/VBN/classified either/DT/either as/IN/as a/DT/a tree/NN/tree edge/NN/edge or/CC/or as/IN/as a/DT/a back/NN/back edge/NNP/edge. let/NN/let me/PRP/me write/VBP/write this/DT/this down/NNP/down. so/RB/so dfs/VBZ/dfs classifies/NNS/classifies every/DT/every edge/NN/edge as/IN/as a/DT/a tree/NN/tree or/CC/or a/DT/a back/NN/back edge/NNP/edge. this/DT/this is/VBZ/is similar/JJ/similar to/TO/to breadth/NN/breadth first/RB/first search/NN/search means/VBZ/means breadth/NN/breadth first/RB/first search/NN/search classifies/NNS/classifies every/DT/every edge/NN/edge as/IN/as an/DT/an edge/NN/edge going/VBG/going between/IN/between adjacent/NN/adjacent levels/NNS/levels or/CC/or going/VBG/going within/IN/within the/DT/the same/JJ/same level/NN/level /,/, let/VB/let ?/./? s/NNS/s see/NNP/see. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36.49/CD/36.49 /CD/) so/RB/so here/RB/here depth/JJ/depth first/JJ/first search/NN/search also/RB/also does/VBZ/does this/DT/this thing/NN/thing for/IN/for us/NNP/us. clear/JJ/clear to/TO/to everyone/NN/everyone ?/./? we/PRP/we are/VBP/are still/RB/still talking/VBG/talking about/IN/about depth/NN/depth first/RB/first search/NN/search in/IN/in undirected/JJ/undirected graphs/NNP/graphs. when/WRB/when we/PRP/we come/VBP/come to/TO/to directed/VBN/directed graphs/NNS/graphs things/NNS/things will/MD/will change/VB/change a/DT/a bit/NN/bit /,/, keep/VB/keep that/IN/that in/IN/in mind/NNP/mind. how/WRB/how do/VBP/do we/PRP/we implement/VB/implement depth/NN/depth first/RB/first search/NN/search ?/./? looks/NNS/looks like/IN/like a/DT/a fairly/RB/fairly complicated/VBN/complicated thing/NNP/thing. stacks/NNS/stacks or/CC/or recursion/NN/recursion let/NN/let ?/./? s/NNS/s see/NNP/see. what/WP/what are/VBP/are the/DT/the things/NNS/things we/PRP/we needed/VBD/needed ?/./? we/PRP/we said/VBD/said we/PRP/we have/VBP/have to/TO/to keep/VB/keep track/NN/track of/IN/of whether/IN/whether a/DT/a vertex/NN/vertex is/VBZ/is visited/VBN/visited or/CC/or it/PRP/it ?/./? s/NNS/s not/RB/not visited/NNP/visited. whether/IN/whether what/WP/what the/DT/the color/NN/color of/IN/of a/DT/a vertex/NN/vertex is/NNP/is. so/RB/so actually/RB/actually we/PRP/we don/VBP/don ?/./? t/NN/t even/RB/even need/VBP/need to/TO/to distinguish/VB/distinguish between/IN/between grey/NN/grey and/CC/and black/NNP/black. we/PRP/we just/RB/just need/VBP/need to/TO/to distinguish/VB/distinguish between/IN/between white/JJ/white and/CC/and non-white/JJ/non-white /,/, whether/IN/whether a/DT/a vertex/NN/vertex is/VBZ/is visited/VBN/visited or/CC/or it/PRP/it was/VBD/was not/RB/not visited/NNP/visited. that/WDT/that was/VBD/was the/DT/the only/JJ/only thing/NN/thing we/PRP/we really/RB/really needed/NNP/needed. we/PRP/we are/VBP/are going/VBG/going to/TO/to keep/VB/keep an/DT/an array/NN/array called/VBN/called visited/NNP/visited. so/RB/so what/WP/what will/MD/will this/DT/this have/VB/have ?/./? basically/RB/basically it/PRP/it will/MD/will have/VB/have an/DT/an entry/NN/entry for/IN/for every/DT/every vertex/NNP/vertex. for/IN/for a/DT/a vertex/NN/vertex v/NN/v it/PRP/it will/MD/will have/VB/have an/DT/an entry/NN/entry let/NN/let ?/./? s/NNS/s say/VBP/say 0/-NONE-/0 or/CC/or 1/CD/1 /,/, 0/-NONE-/0 if/IN/if it/PRP/it is/VBZ/is not/RB/not visited/VBN/visited and/CC/and 1/CD/1 if/IN/if it/PRP/it is/VBZ/is visited/NNP/visited. this/DT/this is/VBZ/is a/DT/a zero/NN/zero one/CD/one entry/NN/entry /,/, zero/NN/zero means/VBZ/means not/RB/not visited/NNP/visited. initially/RB/initially all/DT/all the/DT/the entries/NNS/entries of/IN/of this/DT/this array/NN/array would/MD/would be/VB/be a/DT/a zero/NNP/zero. /NNP/[ hindi/NN/hindi /:/] suppose/NN/suppose i/PRP/i wanted/VBD/wanted to/TO/to do/VB/do a/DT/a depth/NN/depth first/RB/first search/NN/search starting/VBG/starting from/IN/from a/DT/a vertex/NN/vertex v/NN/v in/IN/in my/PRP$/my graph/NNP/graph. so/RB/so now/RB/now my/PRP$/my graph/NN/graph is/VBZ/is going/VBG/going to/TO/to become/VB/become more/JJR/more abstract/NNP/abstract. this/DT/this is/VBZ/is my/PRP$/my graph/NN/graph /,/, this/DT/this is/VBZ/is a/DT/a vertex/NN/vertex v/NN/v /,/, i/PRP/i want/VBP/want to/TO/to do/VB/do a/DT/a depth/NN/depth first/RB/first search/NN/search from/IN/from this/DT/this vertex/NNP/vertex. so/RB/so what/WP/what am/NN/am i/PRP/i going/VBG/going to/TO/to do/VB/do ?/./? what/WP/what does/VBZ/does depth/NN/depth first/RB/first search/NN/search involve/VB/involve /,/, what/WDT/what is/VBZ/is the/DT/the first/JJ/first thing/NN/thing i/PRP/i should/MD/should do/VB/do ?/./? first/JJ/first i/PRP/i should/MD/should mark/VB/mark this/DT/this vertex/NN/vertex as/IN/as visited/NNP/visited. clearly/RB/clearly let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is the/DT/the very/JJ/very first/JJ/first thing/NN/thing i/PRP/i do/VBP/do /,/, visited/VBN/visited v/NN/v equals/NNS/equals one/NNP/one. now/RB/now i/PRP/i have/VBP/have to/TO/to look/VB/look at/IN/at all/DT/all the/DT/the vertices/NNS/vertices one/CD/one after/IN/after the/DT/the other/JJ/other /,/, adjacent/NN/adjacent vertices/NNP/vertices. so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this had/NN/had 3/CD/3 adjacent/NN/adjacent vertices/NNS/vertices x/VBP/x /,/, y/NN/y /,/, z/NNP/z. let/VB/let ?/./? s/NNS/s put/VBD/put down/RP/down a/DT/a loop/NN/loop for/IN/for all/DT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v /,/, do/VB/do something/NNP/something. for/IN/for all/DT/all vertices/NNS/vertices w/VBP/w /,/, so/RB/so w/RB/w is/VBZ/is just/RB/just a/DT/a running/VBG/running variable/JJ/variable so/RB/so to/TO/to say/VB/say which/WDT/which will/MD/will take/VB/take the/DT/the value/NN/value x/NN/x /,/, y/NN/y or/CC/or z/NN/z depending/VBG/depending upon/IN/upon which/WDT/which this/DT/this is/NNP/is. what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? /:/[ student/NN/student /:/: doffs/NNS/doffs dfs/NNS/dfs dfs/NNS/dfs w/VBP/w /:/] i/PRP/i just/RB/just do/VBP/do visited/VBN/visited dfs/NNS/dfs w/VBP/w right/RB/right away/NNP/away. no/NNP/no. /NNP/[ student/NN/student /:/: /:/] if/IN/if it/PRP/it is/VBZ/is not/RB/not visited/NNP/visited. if/IN/if visited/VBN/visited w/NN/w /:/[ student/NN/student /:/: equal/JJ/equal to/TO/to one/CD/one /CD/] equal/JJ/equal to/TO/to zero/CD/zero /,/, if/IN/if not/RB/not of/IN/of visited/VBN/visited w/NN/w then/RB/then /./[ student/NN/student /:/: dfs/NNS/dfs /VBP/] just/RB/just say/VBP/say dfs/NNS/dfs /:/( w/NN/w /:/) /./. /:/[ hindi/NN/hindi /:/] else/NN/else /:/[ student/NN/student /:/: no/DT/no else/NN/else how/WRB/how can/MD/can you/PRP/you define/VB/define /:/] no/DT/no else/NN/else then/RB/then what/WP/what ?/./? /:/[ student/NN/student /:/: the/DT/the else/NN/else w/NN/w will/MD/will backtrack/VB/backtrack /:/] backtrack/NNP/backtrack. /:/[ student/NN/student /:/: else/NN/else backtrack/NN/backtrack if/IN/if for/IN/for all/PDT/all w/NN/w /:/] for/IN/for all/PDT/all w/NN/w /:/[ hindi/NN/hindi /:/] /:/[ student/NN/student /:/: not/RB/not of/IN/of visited/VBN/visited of/IN/of w/NN/w then/RB/then we/PRP/we backtrack/VBP/backtrack visited/VBN/visited w/NN/w equal/JJ/equal to/TO/to one/CD/one /CD/] visited/VBN/visited w/NN/w equal/JJ/equal to/TO/to one/CD/one /CD/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 15/CD/15 /CD/) /./. if/IN/if it/PRP/it has/VBZ/has now/RB/now then/RB/then /:/[ student/NN/student /:/: sir/NN/sir predecessor/NN/predecessor /:/] backtrack/NN/backtrack /:/[ student/NN/student /:/: /:/[ hindi/NN/hindi /:/] /./. if/IN/if all/DT/all w/NN/w is/VBZ/is not/RB/not visited/VBN/visited then/RB/then we/PRP/we backtrack/VBP/backtrack to/TO/to the/DT/the predecessor/NN/predecessor sir/NN/sir after/IN/after we/PRP/we have/VBP/have done/VBN/done /-NONE-/] /./. basically/RB/basically /:/[ hindi/NN/hindi /:/] but/CC/but this/DT/this takes/VBZ/takes care/NN/care of/IN/of everything/NN/everything for/IN/for us/PRP/us /,/, all/DT/all our/PRP$/our backtracking/NN/backtracking everything/NNP/everything. it/PRP/it is/VBZ/is not/RB/not trivial/JJ/trivial to/TO/to understand/VB/understand this/DT/this part/NNP/part. why/WRB/why it/PRP/it is/VBZ/is taking/VBG/taking care/NN/care of/IN/of all/DT/all the/DT/the things/NNS/things for/IN/for us/PRP/us ?/./? /:/[ hindi/NN/hindi /:/] for/IN/for all/PDT/all /:/[ student/NN/student /:/: adjacent/NN/adjacent vertices/NNS/vertices /:/] /:/[ hindi/NN/hindi /:/] all/DT/all adjacent/NN/adjacent vertices/NNS/vertices /:/[ hindi/NN/hindi /:/] but/CC/but to/TO/to convenience/NN/convenience yourself/PRP/yourself this/DT/this is/VBZ/is doing/VBG/doing all/DT/all of/IN/of that/NNP/that. you/PRP/you know/VBP/know recursion/NN/recursion is/VBZ/is not/RB/not magic/JJ/magic right/NN/right it/PRP/it ?/./? s/NNS/s after/IN/after all/DT/all just/RB/just a/DT/a piece/NN/piece of/IN/of code/NNP/code. /NNP/[ hindi/NN/hindi /:/] it/PRP/it is/VBZ/is particularly/RB/particularly well/RB/well suited/VBN/suited for/IN/for depth/NN/depth first/RB/first search/NNP/search. you/PRP/you can/MD/can write/VB/write three/CD/three line/NN/line program/NN/program /,/, four/CD/four line/NN/line program/NN/program for/IN/for something/NN/something we/PRP/we spent/VBD/spent 30/CD/30 minutes/NNS/minutes telling/VBG/telling what/WP/what the/DT/the procedure/NN/procedure is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43.19/CD/43.19 /CD/) what/WP/what is/VBZ/is that/IN/that is/VBZ/is happening/VBG/happening ?/./? why/WRB/why is/VBZ/is this/DT/this working/NN/working out/IN/out for/IN/for us/PRP/us ?/./? so/RB/so let/VB/let ?/./? s/NNS/s try/VBP/try and/CC/and understand/NN/understand that/IN/that and/CC/and i/PRP/i will/MD/will just/RB/just ?/./? i/PRP/i think/VBP/think i/PRP/i will/MD/will just/RB/just explain/VB/explain it/PRP/it on/IN/on this/DT/this picture/NNP/picture. i/PRP/i started/VBD/started a/DT/a depth/NN/depth first/RB/first search/NN/search from/IN/from v/NNP/v. this/DT/this is/VBZ/is what/WP/what my/PRP$/my depth/NN/depth first/RB/first search/NN/search v/NN/v was/NNP/was. let/NN/let ?/./? s/NNS/s say/VBP/say the/DT/the vertices/NNS/vertices were/VBD/were considered/VBN/considered in/IN/in this/DT/this order/NN/order /,/, exactly/RB/exactly this/DT/this order/NN/order x/NN/x /,/, y/NN/y /,/, z/NNP/z. visited/VBD/visited v/NN/v is/VBZ/is one/CD/one /,/, visited/VBN/visited x/NN/x y/NN/y z/NN/z are/VBP/are all/DT/all zero/NN/zero /,/, as/IN/as are/VBP/are visited/VBN/visited of/IN/of all/DT/all the/DT/the other/JJ/other vertices/NNS/vertices i/PRP/i just/RB/just started/VBD/started my/PRP$/my depth/NN/depth first/RB/first search/NN/search here/NNP/here. then/RB/then i/PRP/i came/VBD/came to/TO/to this/DT/this vertex/NNP/vertex. since/IN/since visited/VBN/visited of/IN/of x/NN/x is/VBZ/is zero/CD/zero /,/, i/PRP/i launched/VBD/launched a/DT/a depth/NN/depth first/RB/first search/NN/search here/NNP/here. that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we would/MD/would have/VB/have done/VBN/done here/NNP/here. i/PRP/i launched/VBD/launched depth/JJ/depth first/JJ/first search/NN/search on/IN/on this/NNP/this. what/WP/what is/VBZ/is this/DT/this depth/NN/depth first/RB/first search/NN/search going/VBG/going to/TO/to do/VB/do ?/./? let/VB/let ?/./? s/NNS/s say/VBP/say our/PRP$/our depth/NN/depth first/RB/first search/NN/search visits/NNS/visits a/DT/a certain/JJ/certain bunch/NN/bunch of/IN/of vertices/NNS/vertices which/WDT/which are/VBP/are not/RB/not already/RB/already visited/VBN/visited and/CC/and marks/NNS/marks them/PRP/them visited/VBD/visited one/NNP/one. as/IN/as a/DT/a consequence/NN/consequence this/DT/this guy/NN/guy is/VBZ/is going/VBG/going to/TO/to visit/VB/visit a/DT/a bunch/NN/bunch of/IN/of vertices/NNS/vertices and/CC/and set/VB/set visited/VBN/visited one/CD/one for/IN/for each/DT/each one/CD/one of/IN/of them/PRP/them /,/, visited/VBD/visited at/IN/at one/NNP/one. and/CC/and then/RB/then it/PRP/it is/VBZ/is going/VBG/going to/TO/to terminate/VB/terminate /,/, every/DT/every program/NN/program has/VBZ/has to/TO/to terminate/NNP/terminate. it/PRP/it also/RB/also terminates/VBZ/terminates but/CC/but what/WP/what is/VBZ/is it/PRP/it that/IN/that terminates/VBZ/terminates ?/./? dfs/NNS/dfs on/IN/on x/NNP/x. when/WRB/when dfs/NNS/dfs on/IN/on x/NN/x terminates/NNS/terminates /,/, this/DT/this recursive/JJ/recursive call/NN/call terminates/NNP/terminates. where/WRB/where do/VBP/do we/PRP/we end/VB/end up/RP/up ?/./? when/WRB/when this/DT/this terminates/VBZ/terminates we/PRP/we end/VBP/end up/RP/up in/IN/in the/DT/the dfs/NNS/dfs of/IN/of v/NN/v because/IN/because this/DT/this is/VBZ/is the/DT/the dfs/NNS/dfs which/WDT/which called/VBN/called dfs/NNS/dfs /:/( x/NN/x /:/) /./. the/DT/the picture/NN/picture is/VBZ/is something/NN/something like/IN/like the/DT/the following/NNP/following. you/PRP/you had/VBD/had dfs/NNS/dfs /:/( v/NN/v /:/) /,/, making/VBG/making a/DT/a call/NN/call to/TO/to dfs/NNS/dfs /:/( x/NN/x /:/) /./. this/DT/this did/VBD/did a/DT/a lot/NN/lot of/IN/of recursive/JJ/recursive calls/NNS/calls but/CC/but at/IN/at some/DT/some point/NN/point it/PRP/it terminated/NNP/terminated. after/IN/after it/PRP/it terminated/VBD/terminated we/PRP/we made/VBD/made a/DT/a call/NN/call to/TO/to dfs/NNS/dfs /:/( y/NN/y /:/) /./. when/WRB/when you/PRP/you made/VBD/made a/DT/a call/NN/call to/TO/to dfs/NNS/dfs /:/( y/NN/y /:/) /,/, why/WRB/why did/VBD/did we/PRP/we make/VBP/make a/DT/a call/NN/call to/TO/to dfs/NNS/dfs /:/( y/NN/y /:/) ?/./? because/IN/because we/PRP/we are/VBP/are looking/VBG/looking at/IN/at all/DT/all the/DT/the adjacent/NN/adjacent vertices/NNS/vertices and/CC/and i/PRP/i am/VBP/am assuming/VBG/assuming for/IN/for now/RB/now that/WDT/that y/NN/y was/VBD/was not/RB/not visited/VBN/visited in/IN/in this/DT/this dfs/NNP/dfs. suppose/NN/suppose it/PRP/it was/VBD/was not/RB/not visited/NNP/visited. so/RB/so it/PRP/it was/VBD/was still/RB/still at/IN/at zero/NNP/zero. i/PRP/i made/VBD/made a/DT/a call/NN/call to/TO/to dfs/NNS/dfs y/NN/y now/NNP/now. as/IN/as a/DT/a consequence/NN/consequence /,/, it/PRP/it visited/VBD/visited another/DT/another bunch/NN/bunch of/IN/of vertices/NNP/vertices. it/PRP/it would/MD/would not/RB/not have/VB/have visited/VBN/visited any/DT/any vertex/NN/vertex which/WDT/which was/VBD/was already/RB/already visited/VBN/visited by/IN/by x/NNP/x. we/PRP/we are/VBP/are ensuring/VBG/ensuring that/IN/that not/RB/not going/VBG/going to/TO/to a/DT/a vertex/NN/vertex whose/WP$/whose visited/VBN/visited is/VBZ/is already/RB/already set/VBN/set to/TO/to a/DT/a one/NNP/one. so/RB/so it/PRP/it visited/VBD/visited another/DT/another bunch/NN/bunch of/IN/of vertices/NNS/vertices and/CC/and then/RB/then it/PRP/it terminated/NNP/terminated. now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to go/VB/go to/TO/to vertex/VB/vertex z/NN/z and/CC/and try/NN/try to/TO/to launch/VB/launch a/DT/a dfs/NN/dfs there/EX/there but/CC/but i/PRP/i see/VBP/see that/IN/that z/NN/z is/VBZ/is already/RB/already visited/NNP/visited. because/IN/because z/NN/z was/VBD/was set/VBN/set to/TO/to visited/VBN/visited /,/, when/WRB/when i/PRP/i did/VBD/did my/PRP$/my dfs/NNS/dfs /:/( y/NN/y /:/) /./. when/WRB/when that/DT/that happens/VBZ/happens /,/, z/NN/z is/VBZ/is already/RB/already visited/VBN/visited so/RB/so i/PRP/i don/VBP/don ?/./? t/NN/t launch/NN/launch a/DT/a dfs/NN/dfs here/NNP/here. i/PRP/i have/VBP/have taken/VBN/taken care/NN/care of/IN/of all/DT/all adjacent/NN/adjacent vertices/NNS/vertices and/CC/and so/RB/so this/DT/this terminates/NNS/terminates now/NNP/now. this/DT/this terminates/VBZ/terminates means/VBZ/means the/DT/the dfs/NNS/dfs on/IN/on v/NN/v terminates/NNS/terminates /,/, this/DT/this whole/JJ/whole process/NN/process terminates/NNP/terminates. the/DT/the claim/NN/claim is/VBZ/is i/PRP/i would/MD/would have/VB/have visited/VBN/visited all/DT/all the/DT/the vertices/NNS/vertices that/WDT/that were/VBD/were to/TO/to be/VB/be visited/NNP/visited. from/IN/from this/DT/this vertex/NN/vertex which/WDT/which are/VBP/are the/DT/the vertices/NNS/vertices i/PRP/i can/MD/can reach/NNP/reach. if/IN/if i/PRP/i reach/VBP/reach a/DT/a certain/JJ/certain vertex/NN/vertex /,/, either/DT/either i/PRP/i can/MD/can reach/VB/reach it/PRP/it through/IN/through x/NN/x or/CC/or through/IN/through y/JJ/y or/CC/or through/IN/through z/NNP/z. because/IN/because after/IN/after all/DT/all these/DT/these are/VBP/are the/DT/the only/JJ/only three/CD/three edges/NNS/edges incident/NN/incident at/IN/at this/DT/this vertex/NNP/vertex. if/IN/if i/PRP/i can/MD/can reach/VB/reach it/PRP/it from/IN/from x/NN/x then/RB/then that/IN/that means/NNS/means it/PRP/it should/MD/should have/VB/have been/VBN/been visited/VBN/visited in/IN/in dfs/NNS/dfs /:/( x/NN/x /:/) /./. if/IN/if i/PRP/i can/MD/can reach/VB/reach it/PRP/it from/IN/from y/NN/y /,/, it/PRP/it should/MD/should have/VB/have been/VBN/been reachable/JJ/reachable from/IN/from dfs/NNS/dfs /:/( y/NN/y /:/) /./. if/IN/if i/PRP/i can/MD/can reach/VB/reach it/PRP/it from/IN/from z/NN/z /,/, it/PRP/it should/MD/should also/RB/also have/VB/have been/VBN/been reachable/JJ/reachable from/IN/from dfs/NNS/dfs /:/( y/NN/y /:/) /./. why/WRB/why ?/./? because/IN/because z/NN/z is/VBZ/is reachable/JJ/reachable from/IN/from y/NNP/y. if/IN/if z/NN/z is/VBZ/is reachable/JJ/reachable from/IN/from y/NN/y then/RB/then after/IN/after i/PRP/i had/VBD/had reached/VBN/reached z/NN/z /,/, i/PRP/i would/MD/would have/VB/have continued/VBN/continued and/CC/and visited/VBN/visited all/DT/all vertices/NNS/vertices which/WDT/which can/MD/can be/VB/be reached/VBN/reached from/IN/from z/NNP/z. so/RB/so anything/NN/anything that/IN/that is/VBZ/is reachable/JJ/reachable from/IN/from v/NN/v therefore/RB/therefore is/VBZ/is visited/VBN/visited and/CC/and so/RB/so our/PRP$/our dfs/NNS/dfs from/IN/from v/NN/v should/MD/should terminate/VB/terminate and/CC/and that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what is/VBZ/is being/VBG/being done/NN/done here/NNP/here. we/PRP/we are/VBP/are not/RB/not done/VBN/done with/IN/with this/DT/this yet/NN/yet as/IN/as you/PRP/you can/MD/can imagine/NNP/imagine. i/PRP/i want/VBP/want to/TO/to add/VB/add my/PRP$/my timestamps/NNP/timestamps. how/WRB/how should/MD/should i/VB/i modify/NN/modify this/DT/this procedure/NN/procedure ?/./? /:/[ student/NN/student /:/: starts/NNS/starts /VBP/] suppose/JJ/suppose with/IN/with each/DT/each vertex/NN/vertex i/PRP/i want/VBP/want not/RB/not juts/NNS/juts visited/VBN/visited but/CC/but i/PRP/i have/VBP/have two/CD/two other/JJ/other arrays/NNS/arrays arrival/NNP/arrival. let/VB/let ?/./? s/NNS/s call/VBP/call it/PRP/it a/DT/a and/CC/and departure/NN/departure let/VB/let ?/./? s/NNS/s call/VBP/call it/PRP/it d/NNP/d. so/RB/so a/DT/a of/IN/of v/NN/v so/IN/so this/DT/this is/VBZ/is also/RB/also an/DT/an array/NN/array and/CC/and this/DT/this is/VBZ/is also/RB/also an/DT/an array/NNP/array. it/PRP/it is/VBZ/is not/RB/not a/DT/a zero/NN/zero one/CD/one array/NN/array sorry/NN/sorry /,/, so/RB/so this/DT/this zero/NN/zero one/CD/one was/VBD/was for/IN/for the/DT/the previous/JJ/previous thing/NNP/thing. if/IN/if i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex u/NN/u /,/, so/RB/so a/DT/a of/IN/of u/NN/u will/MD/will be/VB/be an/DT/an integer/NN/integer which/WDT/which will/MD/will tell/VB/tell me/PRP/me what/WP/what time/NN/time i/PRP/i reached/VBD/reached vertex/NN/vertex u/NNP/u. and/CC/and d/VBD/d of/IN/of u/NN/u would/MD/would be/VB/be another/DT/another integer/NN/integer which/WDT/which will/MD/will tell/VB/tell me/PRP/me at/IN/at what/WP/what time/NN/time i/PRP/i left/VBD/left vertex/NN/vertex u/NNP/u. what/WP/what modification/NN/modification should/MD/should i/VB/i make/VB/make to/TO/to this/DT/this piece/NN/piece of/IN/of code/NN/code ?/./? /:/[ student/NN/student /:/: when/WRB/when d/JJ/d of/IN/of u/NN/u /:/] /:/[ student/NN/student /:/: a/DT/a of/IN/of u/NN/u comes/VBZ/comes when/WRB/when you/PRP/you start/VBP/start dfs/NNS/dfs v/NN/v after/IN/after visited/VBN/visited /-NONE-/] /./. so/RB/so a/DT/a of/IN/of u/NN/u equals/NNS/equals /:/[ student/NN/student /:/: plus/RB/plus plus/VBZ/plus b/NN/b plus/RB/plus whatever/RB/whatever /:/] time/NN/time plus/CC/plus plus/RB/plus /:/[ student/NN/student /:/: and/CC/and after/IN/after dfs/NNS/dfs not/RB/not after/IN/after dfs/NNS/dfs w/VBP/w after/IN/after /NNP/] /NNP/[ hindi/NN/hindi /:/] /:/[ student/NN/student /:/: after/IN/after the/DT/the for/IN/for loop/NN/loop /:/] /:/[ hindi/NN/hindi /:/] /./. it/PRP/it ?/./? s/NNS/s just/RB/just saying/VBG/saying stamp/NN/stamp and/CC/and increment/NN/increment so/IN/so that/IN/that the/DT/the next/JJ/next guy/NN/guy doesn/NN/doesn ?/./? t/NN/t get/NN/get the/DT/the same/JJ/same stamp/NNP/stamp. it/PRP/it could/MD/could be/VB/be plus/RB/plus plus/RB/plus time/VB/time or/CC/or time/VB/time plus/JJ/plus plus/NN/plus /,/, doesn/NN/doesn ?/./? t/NN/t make/VB/make too/RB/too much/RB/much of/IN/of difference/NNP/difference. it/PRP/it will/MD/will just/RB/just change/VB/change the/DT/the starting/NNP/starting. yes/VBZ/yes /,/, no/DT/no ?/./? so/RB/so and/CC/and time/NN/time could/MD/could initially/RB/initially be/VB/be zero/RB/zero /-NONE-/[ hindi/VBP/hindi /:/] /./. you/PRP/you can/MD/can also/RB/also modify/VB/modify this/DT/this procedure/NN/procedure to/TO/to identify/VB/identify which/WDT/which edge/NN/edge is/VBZ/is a/DT/a tree/NN/tree edge/NN/edge and/CC/and which/WDT/which edge/NN/edge is/VBZ/is a/DT/a back/RB/back edge/NNP/edge. can/MD/can you/PRP/you do/VB/do that/DT/that ?/./? /:/[ student/NN/student /:/: if/IN/if visited/VBN/visited w/NN/w /:/] /:/[ student/NN/student /:/: for/IN/for dfs/NNS/dfs w/VBP/w we/PRP/we can/MD/can mark/VB/mark its/PRP$/its edge/NN/edge /:/] /./. suppose/NN/suppose i/PRP/i also/RB/also wanted/VBD/wanted this/DT/this information/NNP/information. every/DT/every edge/NN/edge which/WDT/which is/VBZ/is a/DT/a tree/NN/tree edge/NN/edge /,/, i/PRP/i want/VBP/want to/TO/to mark/VB/mark the/DT/the tree/NN/tree edge/NNP/edge. /NNP/[ student/NN/student /:/: with/IN/with is/VBZ/is equal/JJ/equal to/TO/to one/CD/one then/RB/then /:/] when/WRB/when i/PRP/i am/VBP/am ready/JJ/ready to/TO/to launch/VB/launch dfs/NNS/dfs w/VB/w then/RB/then that/IN/that means/NNS/means ?/./? /./. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean /,/, what/WP/what can/MD/can i/VB/i conclude/VBP/conclude at/IN/at this/DT/this point/NN/point ?/./? /:/[ student/NN/student /:/: noise/NN/noise /:/] which/WDT/which edge/NN/edge ?/./? v/NN/v w/NN/w /:/[ student/NN/student /:/: v/NN/v /:/] /,/, the/DT/the edge/NN/edge v/NN/v w/NN/w is/VBZ/is a/DT/a tree/NN/tree edge/NN/edge that/WDT/that i/PRP/i can/MD/can conclude/NNP/conclude. /:/[ hindi/NN/hindi /:/] i/PRP/i can/MD/can write/VB/write that/IN/that statement/NN/statement /:/[ hindi/NN/hindi /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52.48/CD/52.48 /CD/) v/NN/v w/NN/w is/VBZ/is a/DT/a tree/NN/tree edge/NNP/edge. if/IN/if you/PRP/you have/VBP/have identified/VBN/identified what/WP/what the/DT/the tree/NN/tree edges/NNS/edges are/VBP/are then/RB/then its/PRP$/its equivalent/NN/equivalent to/TO/to identifying/NN/identifying what/WP/what the/DT/the back/NN/back edges/NNS/edges are/VBP/are /,/, anything/NN/anything which/WDT/which is/VBZ/is not/RB/not a/DT/a tree/NN/tree edge/NN/edge is/VBZ/is a/DT/a back/RB/back edge/NNP/edge. i/PRP/i am/VBP/am going/VBG/going to/TO/to stop/VB/stop here/RB/here today/NNP/today. in/IN/in the/DT/the next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see to/TO/to analyze/VB/analyze the/DT/the running/NN/running time/NN/time of/IN/of this/DT/this procedure/NN/procedure and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to spend/VB/spend a/DT/a couple/NN/couple of/IN/of classes/NNS/classes in/IN/in applications/NNS/applications of/IN/of depth/NN/depth first/RB/first search/NNP/search. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 28/CD/28 applications/NNS/applications of/IN/of dfs/NNS/dfs today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about applications/NNS/applications of/IN/of depth/NN/depth first/RB/first search/NNP/search. in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we looked/VBD/looked at/IN/at the/DT/the depth/NN/depth first/RB/first search/NN/search procedure/NNP/procedure. we/PRP/we will/MD/will also/RB/also be/VB/be discussing/VBG/discussing the/DT/the running/VBG/running time/NN/time of/IN/of depth/NN/depth first/RB/first search/NN/search today/NN/today and/CC/and then/RB/then looking/VBG/looking at/IN/at an/DT/an application/NN/application of/IN/of depth/NN/depth first/RB/first search/NN/search to/TO/to check/VB/check if/IN/if a/DT/a given/VBN/given graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/NNP/connected. recall/NN/recall what/WP/what we/PRP/we did/VBD/did in/IN/in the/DT/the last/JJ/last class/NNP/class. we/PRP/we wrote/VBD/wrote a/DT/a small/JJ/small piece/NN/piece of/IN/of code/NN/code depth/NN/depth first/RB/first search/NN/search v/CC/v. can/MD/can someone/VB/someone tell/NN/tell me/PRP/me what/WP/what this/DT/this was/VBD/was ?/./? the/DT/the first/JJ/first thing/NN/thing we/PRP/we do/VBP/do is/VBZ/is we/PRP/we said/VBD/said visited/VBN/visited v/NN/v equals/NNS/equals one/CD/one lets/NNS/lets say/VBP/say and/CC/and then/RB/then i/PRP/i will/MD/will not/RB/not worry/VB/worry about/IN/about the/DT/the counters/NNS/counters for/IN/for now/RB/now because/IN/because that1/NNP/that1 ?/./? s/NNS/s for/IN/for all/DT/all w/NN/w adjacent/NN/adjacent to/TO/to v/NNP/v. he/PRP/he was/VBD/was saying/VBG/saying children/NNS/children of/IN/of v/NN/v /,/, there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of children/NNS/children of/IN/of a/DT/a node/NN/node in/IN/in a/DT/a graph/NNP/graph. for/IN/for all/DT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v /,/, if/IN/if not/RB/not of/IN/of visited/VBN/visited w/NN/w then/RB/then dfs/VBZ/dfs w/NN/w /,/, that/IN/that ?/./? s/NNS/s it/NNP/it. that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we said/VBD/said our/PRP$/our dfs/NNS/dfs procedure/NN/procedure is/NNP/is. it/PRP/it first/RB/first marks/VBZ/marks the/DT/the node/NN/node as/IN/as visited/VBN/visited then/RB/then it/PRP/it will/MD/will start/VB/start the/DT/the dfs/NNS/dfs on/IN/on each/DT/each of/IN/of the/DT/the adjacent/NN/adjacent nodes/VBZ/nodes provided/VBN/provided they/PRP/they have/VBP/have not/RB/not already/RB/already been/VBN/been visited/NNP/visited. that/IN/that ?/./? s/NNS/s what/WP/what dfs/NNS/dfs v/VBP/v corresponds/NNS/corresponds to/NNP/to. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this procedure/NN/procedure take/VB/take ?/./? it/PRP/it is/VBZ/is a/DT/a recursive/JJ/recursive procedure/NN/procedure /,/, so/RB/so you/PRP/you have/VB/have to/TO/to do/VB/do something/NN/something careful/NNP/careful. some/DT/some careful/JJ/careful analysis/NN/analysis of/IN/of the/DT/the running/VBG/running time/NNP/time. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? why/WRB/why ?/./? pardon/NN/pardon /:/[ student/NN/student /:/: every/DT/every /NN/] compared/VBN/compared /,/, what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by compare/NN/compare ?/./? /:/[ student/NN/student /:/: like/IN/like we/PRP/we have/VBP/have to/TO/to check/VB/check the/DT/the end/NN/end is/VBZ/is visited/VBN/visited or/CC/or not/RB/not /:/] /./. for/IN/for every/DT/every edge/NN/edge we/PRP/we will/MD/will have/VB/have to/TO/to look/VB/look at/IN/at the/DT/the edge/NN/edge twice/NNP/twice. the/DT/the answer/NN/answer is/VBZ/is right/RB/right /,/, you/PRP/you are/VBP/are basically/RB/basically doing/VBG/doing a/DT/a total/NN/total time/NN/time of/IN/of order/NN/order m/NNP/m. actually/RB/actually i/PRP/i can/MD/can just/RB/just say/VB/say order/NN/order m/NN/m because/IN/because i/PRP/i am/VBP/am assuming/VBG/assuming that/IN/that the/DT/the graph/NN/graph is/VBZ/is connected/NNP/connected. in/IN/in a/DT/a connected/VBN/connected graph/NN/graph m/NN/m is/VBZ/is at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as n/NN/n minus/NN/minus 1/CD/1 so/RB/so you/PRP/you can/MD/can always/RB/always say/VB/say order/NN/order m/NNP/m. so/RB/so let/VB/let ?/./? s/NNS/s just/RB/just say/VBP/say order/NN/order m/NN/m and/CC/and we/PRP/we have/VBP/have assumed/VBN/assumed graph/NN/graph is/VBZ/is connected/NNP/connected. now/RB/now let/VB/let ?/./? s/NNS/s try/VBP/try and/CC/and see/VB/see what/WP/what ?/./? s/NNS/s happening/VBG/happening here/NNP/here. for/IN/for this/DT/this i/NN/i am/VBP/am going/VBG/going to/TO/to use/VB/use my/PRP$/my adjacency/NN/adjacency list/NN/list representation/NN/representation because/IN/because that/DT/that will/MD/will also/RB/also give/VB/give you/PRP/you a/DT/a better/JJR/better picture/NN/picture of/IN/of what/WP/what this/DT/this is/NNP/is. recall/NN/recall that/WDT/that in/IN/in the/DT/the adjacency/NN/adjacency list/NN/list representation/NN/representation of/IN/of the/DT/the graph/NN/graph /,/, there/EX/there will/MD/will be/VB/be one/CD/one entry/NN/entry corresponding/NN/corresponding to/TO/to node/VB/node v/NNP/v. this/DT/this would/MD/would be/VB/be the/DT/the adjacency/NN/adjacency list/NN/list of/IN/of v/NN/v /,/, the/DT/the nodes/NNS/nodes which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to v/NNP/v. if/IN/if a/DT/a node/NN/node x/NN/x is/VBZ/is adjacent/NN/adjacent to/TO/to v/VB/v then/RB/then v/VB/v is/VBZ/is also/RB/also adjacent/JJ/adjacent to/TO/to x/VB/x because/IN/because it/PRP/it is/VBZ/is an/DT/an undirected/VBN/undirected graph/NNP/graph. so/RB/so x/NN/x /:/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 57/CD/57 /CD/) /./. when/WRB/when i/PRP/i do/VBP/do this/DT/this step/NN/step for/IN/for all/DT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v /,/, what/WDT/what does/VBZ/does this/DT/this say/NN/say ?/./? how/WRB/how will/MD/will i/VB/i actually/RB/actually translate/JJ/translate it/PRP/it into/IN/into code/NN/code ?/./? this/DT/this is/VBZ/is pseudo/VBP/pseudo code/NN/code /,/, you/PRP/you don/VBP/don ?/./? t/NN/t really/RB/really have/VBP/have a/DT/a statement/NN/statement like/IN/like for/IN/for all/PDT/all w/NN/w adjacent/NN/adjacent to/TO/to v/NNP/v. what/WP/what will/MD/will you/PRP/you do/VB/do ?/./? you/PRP/you will/MD/will basically/RB/basically have/VB/have to/TO/to traverse/VB/traverse this/DT/this list/NN/list /,/, for/IN/for that/DT/that you/PRP/you will/MD/will have/VB/have one/CD/one pointer/NN/pointer which/WDT/which points/NNS/points to/TO/to the/DT/the first/JJ/first node/NN/node and/CC/and then/RB/then when/WRB/when you/PRP/you have/VBP/have looked/VBN/looked at/IN/at this/DT/this node/NN/node then/RB/then you/PRP/you will/MD/will update/VB/update the/DT/the pointer/NN/pointer to/TO/to point/NN/point to/TO/to the/DT/the next/JJ/next and/CC/and so/RB/so and/CC/and on/IN/on till/NN/till the/DT/the pointer/NN/pointer becomes/VBZ/becomes null/JJ/null or/CC/or reference/NN/reference becomes/VBZ/becomes null/NNP/null. then/RB/then you/PRP/you would/MD/would have/VB/have reached/VBN/reached the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. that/IN/that ?/./? s/NNS/s how/WRB/how you/PRP/you will/MD/will be/VB/be actually/RB/actually implementing/VBG/implementing it/NNP/it. basically/RB/basically every/DT/every time/NN/time i/PRP/i go/VBP/go through/IN/through this/DT/this loop/NN/loop i/PRP/i advance/VBP/advance that/IN/that reference/NN/reference /,/, i/PRP/i advance/VBP/advance that/IN/that pointer/JJR/pointer by/IN/by one/NNP/one. now/RB/now if/IN/if this/DT/this was/VBD/was the/DT/the very/JJ/very first/JJ/first node/NN/node u/NN/u and/CC/and it/PRP/it was/VBD/was not/RB/not visited/VBN/visited then/RB/then what/WP/what would/MD/would i/VB/i do/VBP/do ?/./? i/PRP/i would/MD/would start/VB/start a/DT/a dfs/NN/dfs on/IN/on u/NNP/u. as/IN/as a/DT/a consequence/NN/consequence i/PRP/i will/MD/will do/VB/do some/DT/some other/JJ/other computation/NN/computation and/CC/and when/WRB/when that/IN/that computation/NN/computation finishes/NNS/finishes /,/, i/PRP/i come/VBP/come back/RB/back to/TO/to this/DT/this dfs/NNS/dfs procedure/NNP/procedure. the/DT/the dfs/NNS/dfs that/WDT/that i/PRP/i was/VBD/was doing/VBG/doing on/IN/on v/NN/v and/CC/and i/PRP/i retrieve/VBP/retrieve that/IN/that pointer/NNP/pointer. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 01/CD/01 /CD/) essentially/RB/essentially i/PRP/i would/MD/would have/VB/have that/DT/that the/DT/the pointer/NN/pointer is/VBZ/is still/RB/still pointing/VBG/pointing here/NNP/here. that/IN/that because/IN/because that/DT/that was/VBD/was a/DT/a local/JJ/local variable/JJ/variable so/RB/so to/TO/to say/NNP/say. you/PRP/you follow/VBP/follow what/WP/what i/PRP/i am/VBP/am saying/VBG/saying ?/./? i/PRP/i would/MD/would not/RB/not start/VB/start so/RB/so /,/, suppose/DT/suppose let/NN/let me/PRP/me say/VBP/say i/PRP/i advance/VBP/advance through/IN/through this/DT/this pointer/NNP/pointer. this/DT/this was/VBD/was the/DT/the longer/NN/longer list/NN/list and/CC/and i/PRP/i reached/VBD/reached this/DT/this pointer/NN/pointer reached/VBD/reached at/IN/at this/DT/this point/NNP/point. let/VBD/let ?/./? s/NNS/s say/VBP/say this/DT/this node/NN/node is/VBZ/is a/DT/a and/CC/and a/DT/a was/VBD/was not/RB/not visited/VBN/visited /,/, so/RB/so i/PRP/i went/VBD/went and/CC/and did/VBD/did dfs/NNS/dfs of/IN/of a/NNP/a. when/WRB/when i/PRP/i came/VBD/came back/RB/back from/IN/from dfs/NNS/dfs of/IN/of a/DT/a then/RB/then what/WDT/what is/VBZ/is the/DT/the next/JJ/next node/NN/node i/PRP/i will/MD/will see/VB/see in/IN/in this/DT/this for/IN/for loop/NNP/loop. i/PRP/i will/MD/will go/VB/go beyond/IN/beyond this/DT/this a/DT/a /,/, i/PRP/i would/MD/would not/RB/not continue/NNP/continue. i/PRP/i will/MD/will not/RB/not start/VB/start all/DT/all the/DT/the way/NN/way from/IN/from beginning/NN/beginning and/CC/and how/WRB/how i/PRP/i am/VBP/am retrieving/VBG/retrieving the/DT/the fact/NN/fact that/IN/that i/PRP/i was/VBD/was here/RB/here last/JJ/last /,/, this/DT/this pointer/NN/pointer was/VBD/was pointing/VBG/pointing to/TO/to this/DT/this information/NNP/information. this/DT/this is/VBZ/is coming/VBG/coming from/IN/from the/DT/the recursion/NNP/recursion. the/DT/the fact/NN/fact that/IN/that in/IN/in a/DT/a recursion/NN/recursion when/WRB/when i/PRP/i make/VBP/make a/DT/a recursive/JJ/recursive call/NN/call i/PRP/i store/VBP/store the/DT/the local/JJ/local variables/NNP/variables. /NNP/[ hindi/NN/hindi /:/] if/IN/if i/PRP/i were/VBD/were not/RB/not to/TO/to write/VB/write for/IN/for all/PDT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v /,/, i/PRP/i would/MD/would have/VB/have written/VBN/written something/NN/something like/IN/like the/DT/the following/NNP/following. i/PRP/i would/MD/would have/VB/have let/VB/let ?/./? s/NNS/s call/VBP/call this/DT/this array/NN/array a/NNP/a. i/PRP/i would/MD/would have/VB/have p/VB/p equals/NNS/equals a/DT/a of/IN/of v/NNP/v. what/WP/what is/VBZ/is p/VBP/p ?/./? p/NN/p is/VBZ/is this/DT/this pointer/NN/pointer of/IN/of v/NN/v /,/, so/RB/so p/VB/p initially/RB/initially is/VBZ/is pointing/VBG/pointing to/TO/to here/RB/here and/CC/and i/PRP/i would/MD/would be/VB/be replacing/VBG/replacing this/DT/this by/IN/by /,/, while/IN/while p/NN/p not/RB/not equal/JJ/equal to/TO/to null/VB/null /,/, good/NNP/good. something/NN/something like/IN/like this/DT/this /,/, this/DT/this might/MD/might not/RB/not be/VB/be completely/RB/completely correct/VB/correct but/CC/but it/PRP/it will/MD/will be/VB/be something/NN/something like/IN/like this/NNP/this. while/IN/while p/NN/p not/RB/not equal/JJ/equal to/TO/to null/VB/null what/WP/what would/MD/would i/VB/i do/VBP/do ?/./? i/PRP/i will/MD/will do/VB/do something/NN/something like/IN/like this/DT/this and/CC/and i/PRP/i will/MD/will do/VB/do p/VB/p equals/NNS/equals p/VB/p dot/NN/dot next/NNP/next. you/PRP/you understand/VBP/understand what/WP/what this/DT/this is/NNP/is. basically/RB/basically each/DT/each one/CD/one of/IN/of them/PRP/them has/VBZ/has a/DT/a next/JJ/next and/CC/and this/DT/this w/NN/w will/MD/will p/VB/p dot/NN/dot data/NNS/data or/CC/or p/VB/p dot/NN/dot node/NN/node or/CC/or some/DT/some such/JJ/such thing/NNP/thing. what/WP/what is/VBZ/is w/VBP/w ?/./? because/IN/because we/PRP/we don/VBP/don ?/./? t/NN/t have/VBP/have notion/NN/notion of/IN/of w/NN/w /,/, so/RB/so it/PRP/it will/MD/will be/VB/be p/VB/p dot/NN/dot data/NNS/data let/VBP/let ?/./? s/NNS/s say/NNP/say. basically/RB/basically i/PRP/i am/VBP/am saying/VBG/saying each/DT/each one/CD/one of/IN/of these/DT/these nodes/NNS/nodes has/VBZ/has two/CD/two members/NNS/members /,/, one/CD/one is/VBZ/is data/NNS/data and/CC/and one/CD/one is/VBZ/is next/JJ/next and/CC/and p/NN/p is/VBZ/is referring/VBG/referring to/TO/to this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8.45/CD/8.45 /CD/) why/WRB/why am/NN/am i/PRP/i going/VBG/going into/IN/into all/DT/all of/IN/of this/DT/this ?/./? if/IN/if i/PRP/i have/VBP/have to/TO/to replace/VB/replace this/DT/this line/NN/line /,/, i/PRP/i would/MD/would have/VB/have to/TO/to do/VB/do something/NN/something like/IN/like this/NNP/this. this/DT/this is/VBZ/is how/WRB/how you/PRP/you will/MD/will actually/RB/actually code/VB/code it/PRP/it up/RP/up and/CC/and this/DT/this while/NN/while loop/NN/loop /,/, this/DT/this braces/NNS/braces ends/VBZ/ends here/NNP/here. the/DT/the while/NN/while loop/NN/loop will/MD/will now/RB/now have/VB/have these/DT/these two/CD/two statements/NNS/statements in/IN/in it/NNP/it. why/WRB/why am/NN/am i/PRP/i doing/VBG/doing this/DT/this ?/./? now/RB/now note/VB/note that/IN/that visited/VBN/visited is/VBZ/is not/RB/not local/JJ/local variable/JJ/variable /,/, visited/VBN/visited is/VBZ/is some/DT/some global/JJ/global array/NNP/array. the/DT/the only/JJ/only local/JJ/local variable/JJ/variable that/IN/that i/PRP/i have/VBP/have here/RB/here now/RB/now is/VBZ/is my/PRP$/my p/NNP/p. when/WRB/when i/PRP/i make/VBP/make this/DT/this recursive/JJ/recursive call/NN/call /,/, this/DT/this p/NN/p is/VBZ/is stored/VBN/stored on/IN/on the/DT/the stack/NNP/stack. so/RB/so that/IN/that when/WRB/when i/PRP/i return/VBP/return from/IN/from this/DT/this recursive/JJ/recursive call/NN/call /,/, when/WRB/when i/PRP/i finished/VBD/finished dfs/NNS/dfs of/IN/of a/DT/a i/NN/i was/VBD/was so/RB/so let/VB/let ?/./? s/NNS/s now/RB/now say/VBP/say p/NN/p was/VBD/was pointing/VBG/pointing to/TO/to here/RB/here /,/, i/PRP/i am/VBP/am doing/VBG/doing dfs/NNS/dfs of/IN/of a/NNP/a. when/WRB/when i/PRP/i return/VBP/return from/IN/from here/RB/here /,/, i/PRP/i will/MD/will retrieve/VB/retrieve this/DT/this p/NN/p back/RB/back and/CC/and i/PRP/i will/MD/will increment/VB/increment p/NN/p or/CC/or advance/NN/advance p/NN/p like/IN/like this/DT/this /,/, p/NN/p would/MD/would now/RB/now point/VB/point to/TO/to the/DT/the next/JJ/next one/NNP/one. i/PRP/i would/MD/would come/VB/come back/RB/back to/TO/to this/DT/this p/NN/p /,/, i/PRP/i would/MD/would not/RB/not come/VB/come back/RB/back to/TO/to this/DT/this p/NN/p right/RB/right at/IN/at the/DT/the beginning/NN/beginning or/CC/or some/DT/some such/JJ/such thing/NNP/thing. why/WRB/why am/NN/am i/PRP/i saying/VBG/saying this/DT/this ?/./? this/DT/this is/VBZ/is crucial/JJ/crucial for/IN/for the/DT/the running/VBG/running time/NN/time of/IN/of the/DT/the procedure/NNP/procedure. you/PRP/you can/MD/can understand/VB/understand why/WRB/why /,/, because/IN/because if/IN/if every/DT/every time/NN/time i/PRP/i was/VBD/was going/VBG/going to/TO/to start/VB/start from/IN/from the/DT/the beginning/NN/beginning then/RB/then i/PRP/i can/MD/can ?/./? t/VB/t say/NN/say order/NN/order m/NNP/m. i/PRP/i am/VBP/am now/RB/now using/VBG/using a/DT/a same/JJ/same fact/NN/fact /,/, i/PRP/i will/MD/will be/VB/be traversing/VBG/traversing this/DT/this list/NN/list only/RB/only once/RB/once for/IN/for each/DT/each node/NNP/node. /NNP/[ hindi/NN/hindi /:/] once/RB/once i/PRP/i start/VBP/start traversing/VBG/traversing the/DT/the adjacency/NN/adjacency list/NN/list of/IN/of a/DT/a node/NN/node /,/, i/PRP/i don/VBP/don ?/./? t/NN/t repeat/NN/repeat any/DT/any entry/NN/entry in/IN/in it/NNP/it. i/PRP/i kind/VBP/kind of/IN/of just/RB/just keep/VB/keep moving/VBG/moving forward/RB/forward in/IN/in that/DT/that adjacency/NN/adjacency list/NNP/list. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? for/IN/for each/DT/each node/NN/node i/PRP/i am/VBP/am effectively/RB/effectively spending/VBG/spending time/NN/time proportional/JJ/proportional to/TO/to the/DT/the degree/NN/degree of/IN/of that/DT/that node/NNP/node. some/DT/some of/IN/of that/DT/that degrees/NNS/degrees of/IN/of that/DT/that node/NN/node is/VBZ/is the/DT/the number/NN/number of/IN/of edges/NNS/edges /,/, two/CD/two times/NNS/times the/DT/the number/NN/number of/IN/of edges/NNS/edges in/IN/in the/DT/the graph/NN/graph and/CC/and so/RB/so the/DT/the total/JJ/total time/NN/time required/VBN/required is/VBZ/is order/NN/order m/NNP/m. yes/VBZ/yes /,/, she/PRP/she said/VBD/said each/DT/each edge/NN/edge is/VBZ/is visited/VBN/visited twice/-NONE-/twice. that/IN/that ?/./? s/NNS/s also/RB/also true/JJ/true /,/, v/NN/v x/NN/x /,/, x/NN/x v/CC/v. the/DT/the edge/NN/edge v/NN/v x/NN/x is/VBZ/is being/VBG/being looked/VBN/looked at/IN/at here/RB/here when/WRB/when i/PRP/i look/VBP/look at/IN/at this/DT/this node/NN/node because/IN/because x/NN/x is/VBZ/is now/RB/now treated/VBN/treated as/IN/as a/DT/a adjacent/NN/adjacent node/NN/node of/IN/of v/NN/v and/CC/and the/DT/the same/JJ/same edge/NN/edge v/NN/v x/NN/x is/VBZ/is looked/VBN/looked at/IN/at here/RB/here /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at this/DT/this node/NN/node x/NNP/x. because/IN/because v/NN/v is/VBZ/is being/VBG/being treated/VBN/treated as/IN/as an/DT/an adjacent/NN/adjacent node/NN/node of/IN/of v/NNP/v. actually/RB/actually every/DT/every edge/NN/edge is/VBZ/is looked/VBN/looked twice/NN/twice /,/, exactly/RB/exactly twice/NNP/twice. this/DT/this gives/VBZ/gives you/PRP/you the/DT/the running/VBG/running time/NNP/time. is/VBZ/is this/DT/this clear/JJ/clear ?/./? we/PRP/we are/VBP/are heavily/RB/heavily using/VBG/using the/DT/the fact/NN/fact that/IN/that this/DT/this is/VBZ/is a/DT/a recursive/JJ/recursive program/NN/program and/CC/and when/WRB/when this/DT/this recursive/JJ/recursive call/NN/call finishes/NNS/finishes /,/, we/PRP/we retrieve/VBP/retrieve this/DT/this particular/JJ/particular local/JJ/local variable/NNP/variable. this/DT/this local/JJ/local variable/JJ/variable gets/NNS/gets back/RB/back the/DT/the same/JJ/same value/NN/value it/PRP/it had/VBD/had before/IN/before this/DT/this recursive/JJ/recursive call/NN/call was/VBD/was made/NNP/made. now/RB/now if/IN/if i/PRP/i told/VBD/told you/PRP/you that/IN/that implement/NN/implement dfs/NNS/dfs without/IN/without using/VBG/using recursion/NN/recursion /,/, you/PRP/you will/MD/will have/VB/have to/TO/to use/VB/use a/DT/a stack/NNP/stack. you/PRP/you will/MD/will essentially/RB/essentially simulate/VB/simulate the/DT/the recursion/NN/recursion by/IN/by using/VBG/using the/DT/the stack/NN/stack but/CC/but now/RB/now it/PRP/it should/MD/should be/VB/be clear/JJ/clear what/WP/what variables/NNS/variables will/MD/will you/PRP/you store/VB/store on/IN/on the/DT/the stack/NNP/stack. what/WP/what information/NN/information would/MD/would you/PRP/you store/VB/store on/IN/on your/PRP$/your stack/NN/stack ?/./? /:/[ student/NN/student /:/: current/JJ/current pointer/NN/pointer /:/] basically/RB/basically p/VB/p /,/, the/DT/the value/NN/value of/IN/of p/NNP/p. in/IN/in the/DT/the case/NN/case of/IN/of recursion/NN/recursion two/CD/two things/NNS/things are/VBP/are stored/VBN/stored actually/RB/actually /,/, not/RB/not just/RB/just p/VB/p someone/NN/someone else/RB/else has/VBZ/has to/TO/to tell/VB/tell me/PRP/me what/WP/what else/RB/else is/VBZ/is stored/NNP/stored. /:/[ student/NN/student /:/: v/NN/v also/RB/also /./] v/NN/v local/JJ/local variable/JJ/variable /NN/[ hindi/NN/hindi /:/] they/PRP/they are/VBP/are stored/VBN/stored and/CC/and the/DT/the parameters/NNS/parameters to/TO/to that/DT/that procedure/NN/procedure are/VBP/are also/RB/also stored/NNP/stored. the/DT/the parameters/NNS/parameters to/TO/to this/DT/this procedure/NN/procedure is/VBZ/is v/NN/v /,/, that/IN/that will/MD/will also/RB/also have/VB/have to/TO/to be/VB/be stored/VBN/stored in/IN/in the/DT/the stack/NNP/stack. of/IN/of course/NN/course the/DT/the stack/NN/stack also/RB/also stores/VBZ/stores return/NN/return address/NN/address and/CC/and stuff/NN/stuff like/IN/like that/NNP/that. but/CC/but those/DT/those things/NNS/things you/PRP/you don/VBP/don ?/./? t/NN/t need/NN/need here/RB/here because/IN/because you/PRP/you know/VBP/know exactly/RB/exactly where/WRB/where it/PRP/it is/VBZ/is returning/VBG/returning to/NNP/to. this/DT/this will/MD/will be/VB/be your/PRP$/your sixth/JJ/sixth assignment/NNP/assignment. you/PRP/you will/MD/will have/VB/have to/TO/to implement/VB/implement it/NNP/it. i/PRP/i will/MD/will give/VB/give out/IN/out the/DT/the details/NNS/details later/JJ/later but/CC/but you/PRP/you will/MD/will have/VB/have to/TO/to implement/VB/implement dfs/NNS/dfs without/IN/without using/VBG/using recursion/NN/recursion so/IN/so that/IN/that you/PRP/you understand/VBP/understand this/DT/this way/NNP/way. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 16/CD/16 /CD/) we/PRP/we looked/VBD/looked at/IN/at dfs/NNS/dfs /,/, we/PRP/we have/VBP/have classified/VBN/classified /,/, the/DT/the edges/NNS/edges has/VBZ/has tree/JJ/tree edges/NNS/edges and/CC/and back/RB/back edges/NNS/edges and/CC/and we/PRP/we have/VBP/have looked/VBN/looked at/IN/at what/WP/what the/DT/the running/VBG/running time/NN/time of/IN/of dfs/NNS/dfs is/NNP/is. one/CD/one other/JJ/other thing/NN/thing that/WDT/that perhaps/RB/perhaps we/PRP/we should/MD/should do/VB/do before/IN/before we/PRP/we proceed/VBP/proceed further/RB/further is/VBZ/is look/NN/look at/IN/at this/DT/this distinction/NN/distinction between/IN/between tree/NN/tree edges/NNS/edges and/CC/and back/RB/back edges/NNS/edges once/RB/once more/NNP/more. so/RB/so tree/JJ/tree edges/NNS/edges and/CC/and back/RB/back edges/NNP/edges. suppose/NN/suppose i/PRP/i have/VBP/have an/DT/an edge/NN/edge u/NN/u v/NN/v which/WDT/which is/VBZ/is a/DT/a tree/NN/tree edge/NN/edge and/CC/and if/IN/if u/NN/u v/NN/v were/VBD/were a/DT/a back/RB/back edge/NN/edge let/VB/let ?/./? s/NNS/s see/VBP/see what/WP/what can/MD/can we/PRP/we say/VB/say about/IN/about the/DT/the relation/NN/relation between/IN/between the/DT/the arrivals/NNS/arrivals time/NN/time and/CC/and the/DT/the departure/NN/departure times/VBZ/times for/IN/for the/DT/the nodes/NNS/nodes u/VBP/u and/CC/and v/NNP/v. let/VB/let ?/./? s/NNS/s see/VBP/see /,/, let/VB/let me/PRP/me ask/VB/ask you/PRP/you these/DT/these questions/NNP/questions. suppose/NN/suppose i/PRP/i tell/VBP/tell you/PRP/you that/IN/that the/DT/the arrival/NN/arrival time/NN/time of/IN/of u/NN/u was/VBD/was less/JJR/less than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of v/NNP/v. that/IN/that is/VBZ/is i/PRP/i reached/VBD/reached node/JJ/node u/NN/u before/IN/before i/PRP/i reached/VBD/reached node/JJ/node v/NN/v /:/[ student/NN/student /:/: back/RB/back edge/NN/edge /:/] pardon/NN/pardon /:/[ student/NN/student /:/: u/NN/u v/NN/v form/NN/form a/DT/a back/NN/back edge/NN/edge /:/] u/NN/u v/NN/v form/NN/form a/DT/a back/NN/back edge/NNP/edge. suppose/NN/suppose i/PRP/i told/VBD/told you/PRP/you /,/, i/PRP/i gave/VBD/gave you/PRP/you this/DT/this information/NNP/information. i/PRP/i reached/VBD/reached u/PRP/u before/IN/before i/PRP/i reached/VBD/reached v/NNP/v. now/RB/now what/WP/what is/VBZ/is the/DT/the relation/NN/relation between/IN/between the/DT/the departure/NN/departure times/VBZ/times of/IN/of u/NN/u and/CC/and v/NN/v ?/./? /:/[ student/NN/student /:/: departure/NN/departure of/IN/of v/NN/v is/VBZ/is less/JJR/less than/IN/than is/VBZ/is less/JJR/less than/IN/than the/DT/the departure/NN/departure of/IN/of /NNP/] departure/NN/departure of/IN/of v/NN/v is/VBZ/is greater/JJR/greater than/IN/than or/CC/or less/JJR/less than/IN/than /CD/[ student/NN/student /:/: less/JJR/less than/IN/than less/JJR/less than/IN/than /CD/] departure/NN/departure of/IN/of u/NN/u is/VBZ/is less/JJR/less than/IN/than or/CC/or departure/NN/departure of/IN/of v/NN/v is/VBZ/is less/JJR/less than/IN/than /CD/[ student/NN/student /:/: departure/NN/departure of/IN/of um/NN/um v/NN/v is/VBZ/is less/JJR/less than/IN/than /CD/] /CD/[ hindi/NN/hindi /:/] you/PRP/you reached/VBD/reached u/PRP/u first/RB/first /,/, u/RB/u v/NN/v is/VBZ/is a/DT/a back/RB/back edge/NNP/edge. you/PRP/you reached/VBD/reached u/PRP/u first/RB/first and/CC/and then/RB/then you/PRP/you reached/VBD/reached v/NNP/v. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? v/NN/v is/VBZ/is a/DT/a descendant/JJ/descendant of/IN/of u/NN/u in/IN/in the/DT/the tree/NNP/tree. u/NN/u v/NN/v is/VBZ/is a/DT/a back/RB/back edge/NN/edge /,/, so/RB/so there/RB/there has/VBZ/has to/TO/to be/VB/be an/DT/an ancestor/NN/ancestor descendant/NN/descendant relationship/NN/relationship between/IN/between the/DT/the nodes/NNS/nodes of/IN/of u/NN/u v/CC/v. one/CD/one has/VBZ/has to/TO/to be/VB/be an/DT/an ancestor/NN/ancestor of/IN/of the/DT/the other/NNP/other. which/WDT/which is/VBZ/is an/DT/an ancestor/NN/ancestor of/IN/of which/WDT/which ?/./? clearly/RB/clearly you/PRP/you will/MD/will reach/VB/reach an/DT/an ancestor/NN/ancestor before/IN/before you/PRP/you reach/VBP/reach the/DT/the descendant/NN/descendant because/IN/because you/PRP/you are/VBP/are coming/VBG/coming down/IN/down from/IN/from the/DT/the top/JJ/top of/IN/of the/DT/the tree/NNP/tree. so/RB/so u/VB/u is/VBZ/is a/DT/a ancestor/NN/ancestor of/IN/of v/NNP/v. in/IN/in fact/NN/fact i/PRP/i have/VBP/have shown/VBN/shown that/IN/that in/IN/in the/DT/the picture/NN/picture essentially/NNP/essentially. so/RB/so u/VB/u is/VBZ/is an/DT/an ancestor/NN/ancestor of/IN/of v/NNP/v. if/IN/if u/NN/u is/VBZ/is an/DT/an ancestor/NN/ancestor of/IN/of v/NN/v in/IN/in this/DT/this tree/NN/tree then/RB/then first/JJ/first i/PRP/i would/MD/would have/VB/have finished/VBN/finished v/NN/v and/CC/and only/RB/only then/RB/then i/PRP/i would/MD/would have/VB/have backtracked/VBN/backtracked all/DT/all the/DT/the way/NN/way and/CC/and come/VB/come back/RB/back to/TO/to u/VB/u and/CC/and finished/VBN/finished u/NNP/u. /NNP/[ student/NN/student /:/: same/JJ/same /NN/] no/DT/no /,/, this/DT/this is/VBZ/is for/IN/for the/DT/the back/NN/back edge/NNP/edge. this/DT/this is/VBZ/is not/RB/not a/DT/a tree/NN/tree path/NN/path /,/, sorry/NNP/sorry. there/EX/there is/VBZ/is some/DT/some tree/NN/tree path/NN/path between/IN/between u/NN/u and/CC/and v/NN/v also/RB/also of/IN/of course/NN/course and/CC/and lets/NNS/lets say/VBP/say this/DT/this is/VBZ/is the/DT/the edge/NN/edge u/NN/u v/CC/v. there/EX/there are/VBP/are other/JJ/other nodes/NNS/nodes on/IN/on this/DT/this tree/NN/tree path/NN/path /,/, so/RB/so you/PRP/you would/MD/would have/VB/have finished/VBN/finished a/DT/a descendant/JJ/descendant before/IN/before you/PRP/you move/VBP/move up/RP/up because/IN/because that/DT/that ?/./? s/NNS/s how/WRB/how you/PRP/you backtrack/NNP/backtrack. you/PRP/you finished/VBD/finished a/DT/a node/NN/node and/CC/and only/RB/only then/RB/then you/PRP/you move/VBP/move back/RP/back up/IN/up and/CC/and then/RB/then you/PRP/you finish/VBP/finish that/IN/that and/CC/and you/PRP/you move/VBP/move back/RP/back and/CC/and back/RB/back and/CC/and so/RB/so on/NNP/on. the/DT/the departure/NN/departure time/NN/time of/IN/of u/NN/u is/VBZ/is more/RBR/more than/IN/than the/DT/the departure/NN/departure time/NN/time of/IN/of v/NNP/v. you/PRP/you would/MD/would have/VB/have left/VBN/left v/NN/v /,/, we/PRP/we would/MD/would have/VB/have finished/VBN/finished v/NN/v before/IN/before we/PRP/we finished/VBD/finished u/NNP/u. what/WP/what if/IN/if u/PRP/u v/VBP/v is/VBZ/is a/DT/a tree/NN/tree edge/NN/edge ?/./? would/MD/would that/VB/that make/VB/make the/DT/the difference/NN/difference ?/./? suppose/NN/suppose once/RB/once again/RB/again that/IN/that arrival/NN/arrival of/IN/of u/NN/u is/VBZ/is before/IN/before arrival/NN/arrival of/IN/of v/NNP/v. if/IN/if arrival/NN/arrival of/IN/of u/NN/u is/VBZ/is before/IN/before arrival/NN/arrival of/IN/of v/NN/v then/RB/then u/VB/u is/VBZ/is a/DT/a parent/NN/parent of/IN/of v/NNP/v. so/RB/so u/VB/u v/NN/v have/VBP/have a/DT/a parent/NN/parent child/NN/child relationship/NN/relationship not/RB/not just/RB/just an/DT/an ancestor/NN/ancestor dissonant/NN/dissonant but/CC/but an/DT/an parent/NN/parent child/NNP/child. u/NN/u is/VBZ/is a/DT/a parent/NN/parent of/IN/of v/NN/v /:/[ student/NN/student /:/: why/WRB/why /:/] because/IN/because it/PRP/it is/VBZ/is a/DT/a tree/NN/tree edge/NNP/edge. u/NN/u v/NN/v is/VBZ/is a/DT/a tree/NN/tree edge/NNP/edge. so/RB/so when/WRB/when i/PRP/i depart/VBP/depart from/IN/from v/NN/v after/IN/after that/DT/that only/RB/only will/MD/will i/VB/i depart/NN/depart from/IN/from u/NNP/u. so/RB/so departure/NN/departure time/NN/time of/IN/of v/NN/v is/VBZ/is less/JJR/less than/IN/than the/DT/the departure/NN/departure time/NN/time of/IN/of u/NNP/u. note/NN/note i/PRP/i can/MD/can not/RB/not say/VB/say that/IN/that the/DT/the departure/NN/departure time/NN/time of/IN/of u/NN/u is/VBZ/is one/CD/one more/RBR/more than/IN/than the/DT/the departure/NN/departure time/NN/time of/IN/of v/NN/v /:/[ student/NN/student /:/: because/IN/because /CD/] because/IN/because it/PRP/it might/MD/might have/VB/have more/JJR/more children/NNP/children. similarly/RB/similarly i/PRP/i can/MD/can not/RB/not say/VB/say that/IN/that the/DT/the arrival/NN/arrival time/NN/time of/IN/of v/NN/v is/VBZ/is one/CD/one more/RBR/more than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of u/NN/u because/IN/because there/EX/there could/MD/could be/VB/be other/JJ/other children/NNS/children also/NNP/also. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 05/CD/05 /CD/) the/DT/the relationship/NN/relationship is/VBZ/is the/DT/the same/JJ/same but/CC/but these/DT/these are/VBP/are the/DT/the same/JJ/same relationship/NN/relationship but/CC/but they/PRP/they coming/VBG/coming from/IN/from different/JJ/different reasons/NNS/reasons /,/, roughly/RB/roughly the/DT/the same/JJ/same reason/NN/reason agreed/VBD/agreed /,/, granted/NNP/granted. now/RB/now let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at an/DT/an application/NN/application of/IN/of depth/NN/depth first/RB/first search/NN/search to/TO/to determine/VB/determine if/IN/if a/DT/a graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/NNP/connected. let/NN/let me/PRP/me write/VBP/write down/RP/down connected/NNP/connected. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the term/NN/term that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be using/NNP/using. graph/NN/graph g/NN/g is/VBZ/is two/CD/two edge/NN/edge connected/VBN/connected if/IN/if and/CC/and only/RB/only if/IN/if g/NN/g minus/NN/minus e/NN/e is/VBZ/is connected/VBN/connected for/IN/for all/PDT/all e/NNP/e. /NNP/[ hindi/NN/hindi /:/] i/PRP/i am/VBP/am saying/VBG/saying take/NN/take any/DT/any edge/NN/edge /,/, capital/NN/capital e/NN/e is/VBZ/is the/DT/the set/NN/set of/IN/of edges/NNP/edges. when/WRB/when i/PRP/i write/VBP/write graph/JJ/graph as/IN/as v/NN/v /,/, e/NN/e ;/:/; v/NN/v is/VBZ/is the/DT/the set/NN/set of/IN/of vertices/NNS/vertices and/CC/and capital/NN/capital e/NN/e is/VBZ/is the/DT/the set/NN/set of/IN/of edges/NNS/edges /,/, little/JJ/little e/NN/e is/VBZ/is an/DT/an edge/NN/edge /,/, g/NN/g minus/NN/minus e/NN/e means/VBZ/means remove/NN/remove the/DT/the edge/NN/edge from/IN/from the/DT/the graph/NNP/graph. if/IN/if it/PRP/it is/VBZ/is still/RB/still connected/VBN/connected and/CC/and this/DT/this is/VBZ/is true/JJ/true for/IN/for every/DT/every edge/NN/edge for/IN/for the/DT/the graph/NN/graph then/RB/then we/PRP/we say/VBP/say that/IN/that the/DT/the graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/NNP/connected. in/IN/in words/NNS/words a/DT/a graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/VBN/connected if/IN/if it/PRP/it remains/VBZ/remains connected/VBN/connected even/RB/even after/IN/after the/DT/the removal/NN/removal of/IN/of any/DT/any edge/NNP/edge. yes/VBZ/yes /,/, only/RB/only one/CD/one edge/NNP/edge. a/DT/a graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/VBN/connected if/IN/if and/CC/and only/RB/only if/IN/if it/PRP/it remains/VBZ/remains connected/VBN/connected after/IN/after the/DT/the removal/NN/removal of/IN/of any/DT/any one-edge/NNP/one-edge. let/NN/let ?/./? s/NNS/s see/NNP/see. is/VBZ/is this/DT/this graph/NN/graph two/CD/two edge/NN/edge connected/VBN/connected ?/./? if/IN/if i/PRP/i remove/VBP/remove this/DT/this edge/NN/edge then/RB/then it/PRP/it becomes/VBZ/becomes disconnected/NNP/disconnected. such/JJ/such an/DT/an edge/NN/edge whose/WP$/whose removal/NN/removal disconnects/NNS/disconnects the/DT/the graph/NN/graph is/VBZ/is also/RB/also called/VBN/called a/DT/a bridge/NNP/bridge. this/DT/this edge/NN/edge we/PRP/we would/MD/would call/VB/call it/PRP/it a/DT/a bridge/NNP/bridge. this/DT/this graph/NN/graph is/VBZ/is not/RB/not two/CD/two edge/NN/edge connected/NNP/connected. is/VBZ/is this/DT/this graph/NN/graph two/CD/two edge/NN/edge connected/VBN/connected ?/./? /:/[ student/NN/student /:/: yes/NNS/yes /VBP/] yes/NNS/yes /,/, so/RB/so graph/VBP/graph which/WDT/which is/VBZ/is two/CD/two edge/NN/edge connected/VBN/connected will/MD/will not/RB/not have/VB/have any/DT/any bridge/NN/bridge edge/NNP/edge. a/DT/a graph/NN/graph which/WDT/which is/VBZ/is not/RB/not two/CD/two edge/NN/edge connected/VBN/connected will/MD/will have/VB/have a/DT/a bridge/NN/bridge edge/NNP/edge. why/WRB/why do/VBP/do you/PRP/you think/VB/think this/DT/this notion/NN/notion of/IN/of two/CD/two edge/NN/edge connectivity/NN/connectivity would/MD/would be/VB/be useful/JJ/useful ?/./? if/IN/if this/DT/this were/VBD/were a/DT/a computer/NN/computer network/NN/network and/CC/and some/DT/some link/NN/link fails/VBZ/fails then/RB/then you/PRP/you are/VBP/are interested/JJ/interested in/IN/in whether/IN/whether the/DT/the network/NN/network is/VBZ/is still/RB/still connected/VBN/connected or/CC/or not/NNP/not. if/IN/if your/PRP$/your network/NN/network was/VBD/was two/CD/two edge/NN/edge connected/VBN/connected to/TO/to begin/VB/begin with/IN/with then/RB/then no/DT/no matter/NN/matter which/WDT/which link/NN/link fails/NNP/fails. your/PRP$/your network/NN/network can/MD/can still/RB/still keep/VB/keep functioning/VBG/functioning because/IN/because it/PRP/it will/MD/will still/RB/still remain/VB/remain connected/NNP/connected. but/CC/but if/IN/if the/DT/the network/NN/network were/VBD/were not/RB/not two/CD/two edge/NN/edge connected/VBN/connected to/TO/to begin/VB/begin with/IN/with then/RB/then the/DT/the failure/NN/failure of/IN/of a/DT/a link/NN/link can/MD/can call/VB/call the/DT/the network/NN/network to/TO/to break/VB/break down/RP/down into/IN/into disconnected/VBN/disconnected components/NNP/components. so/RB/so that/IN/that messages/NNS/messages can/MD/can not/RB/not go/VB/go from/IN/from one/CD/one connected/VBN/connected component/NN/component to/TO/to the/DT/the other/JJ/other anymore/NNP/anymore. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 55/CD/55 /CD/) this/DT/this is/VBZ/is basically/RB/basically measuring/VBG/measuring liability/NN/liability of/IN/of the/DT/the network/NNP/network. now/RB/now the/DT/the question/NN/question is/VBZ/is a/DT/a following/NNP/following. i/PRP/i give/VBP/give you/PRP/you a/DT/a graph/NN/graph and/CC/and i/PRP/i ask/VBP/ask you/PRP/you is/VBZ/is it/PRP/it two/CD/two edge/NN/edge connected/NNP/connected. how/WRB/how will/MD/will you/PRP/you check/VB/check if/IN/if it/PRP/it is/VBZ/is two/CD/two edge/NN/edge connected/VBN/connected ?/./? anyone/NN/anyone ?/./? /:/[ student/NN/student /:/: if/IN/if we/PRP/we can/MD/can suppose/VB/suppose we/PRP/we have/VBP/have from/IN/from one/CD/one end/NN/end point/NN/point to/TO/to the/DT/the other/JJ/other point/NN/point of/IN/of an/DT/an edge/NN/edge sir/NN/sir each/DT/each vertex/NN/vertex /:/] for/IN/for each/DT/each vertex/NN/vertex if/IN/if we/PRP/we can/MD/can find/VB/find a/DT/a cycle/NNP/cycle. how/WRB/how you/PRP/you will/MD/will check/VB/check whether/IN/whether a/DT/a given/VBN/given graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/VBN/connected ?/./? we/PRP/we have/VBP/have to/TO/to do/VB/do it/PRP/it fast/NNP/fast. pardon/NN/pardon /:/[ student/NN/student /:/: we/PRP/we will/MD/will look/VB/look at/IN/at the/DT/the departure/NN/departure time/NN/time /:/] if/IN/if you/PRP/you look/VBP/look at/IN/at departure/NN/departure times/NNP/times. /NNP/[ student/NN/student /:/: sir/NN/sir between/IN/between any/DT/any two/CD/two node/NN/node there/RB/there should/MD/should be/VB/be a/DT/a tree/NN/tree edge/NN/edge also/RB/also and/CC/and back/RB/back edge/NN/edge also/RB/also /./] between/IN/between any/DT/any two/CD/two nodes/NNS/nodes /,/, there/EX/there should/MD/should be/VB/be a/DT/a tree/NN/tree edge/NN/edge and/CC/and a/DT/a back/NN/back edge/NN/edge ?/./? /:/[ hindi/NN/hindi /:/] /:/[ student/NN/student /:/: so/RB/so on/IN/on removal/NN/removal of/IN/of either/DT/either of/IN/of one/CD/one its/PRP$/its still/RB/still remain/VB/remain connected/VBN/connected /-NONE-/] /:/[ hindi/NN/hindi /:/] each/DT/each node/NN/node should/MD/should be/VB/be visited/VBN/visited twice/NN/twice ?/./? /:/[ student/NN/student /:/: between/IN/between any/DT/any two/CD/two node/NN/node /:/] let/NN/let ?/./? s/NNS/s don/VBP/don ?/./? t/NN/t worry/NN/worry too/RB/too much/RB/much about/IN/about dfs/NNS/dfs because/IN/because that/DT/that is/VBZ/is not/RB/not straight/RB/straight forward/RB/forward but/CC/but you/PRP/you will/MD/will see/VB/see how/WRB/how to/TO/to do/VB/do it/NNP/it. let/VB/let ?/./? s/NNS/s see/VBP/see can/MD/can you/PRP/you check/VB/check this/DT/this property/NN/property of/IN/of two/CD/two edge/NN/edge connectivity/NN/connectivity by/IN/by some/DT/some other/JJ/other mechanism/NN/mechanism ?/./? /:/[ student/NN/student /:/: sir/NN/sir by/IN/by bfs/NNS/bfs /:/] bfs/NNS/bfs yes/NNS/yes /,/, what/WP/what will/MD/will you/PRP/you do/VB/do with/IN/with bfs/NNS/bfs ?/./? you/PRP/you have/VBP/have to/TO/to check/VB/check if/IN/if the/DT/the graph/NN/graph remains/VBZ/remains connected/VBN/connected even/RB/even after/IN/after removal/NN/removal of/IN/of an/DT/an edge/NNP/edge. so/RB/so take/VB/take an/DT/an edge/NN/edge /,/, remove/VBP/remove it/PRP/it check/VBP/check if/IN/if it/PRP/it is/VBZ/is connected/VBN/connected then/RB/then take/VB/take another/DT/another edge/NN/edge remove/NN/remove it/PRP/it /,/, check/VBP/check if/IN/if it/PRP/it is/VBZ/is connected/NNP/connected. take/NN/take another/DT/another edge/NN/edge remove/NN/remove it/PRP/it /,/, check/VBP/check if/IN/if it/PRP/it is/VBZ/is connected/NNP/connected. /:/[ hindi/NN/hindi /:/] so/RB/so that/IN/that ?/./? s/NNS/s more/RBR/more expensive/NNP/expensive. we/PRP/we can/MD/can do/VB/do it/PRP/it in/IN/in order/NN/order m/NN/m square/NN/square by/IN/by removing/NN/removing every/DT/every edge/NN/edge and/CC/and checking/VBG/checking if/IN/if resulting/VBG/resulting graph/NN/graph is/VBZ/is connected/NNP/connected. yes/VBZ/yes /,/, but/CC/but that/IN/that ?/./? s/NNS/s expensive/JJ/expensive for/IN/for us/NNP/us. so/RB/so we/PRP/we want/VBP/want to/TO/to do/VB/do something/NN/something in/IN/in order/NN/order m/NN/m time/NN/time /,/, linear/JJ/linear time/NNP/time. /NNP/[ student/NN/student /:/: say/VB/say that/IN/that v/NN/v vertex/NN/vertex has/VBZ/has a/DT/a back/RB/back edge/NN/edge /:/] if/IN/if every/DT/every vertex/NN/vertex has/VBZ/has a/DT/a back/RB/back edge/NN/edge only/RB/only then/RB/then is/VBZ/is the/DT/the graph/NN/graph two/CD/two edge/NN/edge connected/NNP/connected. /NNP/[ hindi/NN/hindi /:/] is/VBZ/is a/DT/a cycle/NN/cycle two/CD/two edge/NN/edge connected/VBN/connected graph/NN/graph ?/./? it/PRP/it is/VBZ/is two/CD/two edge/NN/edge connected/NNP/connected. /NNP/[ hindi/NN/hindi /:/] what/WP/what will/MD/will be/VB/be the/DT/the tree/NN/tree edges/NNS/edges ?/./? /:/[ hindi/NN/hindi /:/] this/DT/this will/MD/will be/VB/be my/PRP$/my dfs/NNS/dfs tree/VBP/tree /,/, the/DT/the one/CD/one in/IN/in red/JJ/red and/CC/and the/DT/the only/JJ/only back/NN/back edge/NN/edge will/MD/will be/VB/be this/DT/this last/JJ/last edge/NNP/edge. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 05/CD/05 /CD/) my/PRP$/my dfs/NNS/dfs tree/VBP/tree /,/, if/IN/if i/PRP/i were/VBD/were to/TO/to draw/VB/draw it/PRP/it differently/RB/differently would/MD/would look/VB/look like/IN/like this/NNP/this. it/PRP/it would/MD/would be/VB/be a/DT/a path/NN/path /,/, my/PRP$/my dfs/NNS/dfs tree/VBP/tree with/IN/with one/CD/one back/NN/back edge/NN/edge only/NNP/only. /NNP/[ hindi/NN/hindi /:/] /:/[ student/NN/student /:/: when/WRB/when you/PRP/you are/VBP/are back/RB/back tracking/VBG/tracking from/IN/from that/DT/that vertex/NN/vertex if/IN/if you/PRP/you get/VBP/get a/DT/a back/NN/back edge/NN/edge that/WDT/that means/VBZ/means there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle connected/VBN/connected that/IN/that particular/JJ/particular path/NN/path of/IN/of traversal/NN/traversal so/IN/so you/PRP/you can/MD/can then/RB/then compute/VB/compute something/NN/something /:/] good/JJ/good /,/, we/PRP/we are/VBP/are getting/VBG/getting somewhere/NNP/somewhere. so/RB/so let/VB/let ?/./? s/NNS/s develop/VB/develop this/DT/this /,/, one/CD/one step/NN/step at/IN/at a/DT/a time/NNP/time. i/PRP/i did/VBD/did a/DT/a depth/NN/depth first/RB/first search/NN/search /,/, so/RB/so clearly/RB/clearly we/PRP/we have/VBP/have to/TO/to do/VB/do a/DT/a depth/NN/depth first/RB/first search/NNP/search. suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the depth/NN/depth first/RB/first search/NN/search tree/NN/tree i/PRP/i obtain/NNP/obtain. i/PRP/i have/VBP/have just/RB/just drawn/VBN/drawn the/DT/the tree/NN/tree edges/NNS/edges /,/, there/EX/there are/VBP/are other/JJ/other back/RB/back edges/NNP/edges. i/PRP/i have/VBP/have not/RB/not drawn/VBN/drawn them/PRP/them yet/NNP/yet. now/RB/now when/WRB/when i/PRP/i am/VBP/am backtracking/VBG/backtracking out/RP/out of/IN/of this/DT/this node/NN/node /,/, backtracking/VBG/backtracking means/NNS/means i/PRP/i am/VBP/am going/VBG/going back/RB/back up/IN/up because/IN/because i/PRP/i have/VBP/have explored/VBN/explored this/DT/this entire/JJ/entire thing/NNP/thing. what/WP/what do/VBP/do i/PRP/i require/VB/require ?/./? i/PRP/i have/VBP/have explored/VBN/explored this/DT/this entire/JJ/entire thing/NN/thing /,/, i/PRP/i have/VBP/have not/RB/not yet/RB/yet gone/VBN/gone here/NNP/here. so/RB/so i/PRP/i have/VBP/have come/VBN/come from/IN/from here/RB/here /,/, i/PRP/i came/VBD/came like/IN/like this/DT/this /,/, i/PRP/i came/VBD/came like/IN/like this/DT/this /,/, i/PRP/i explored/VBD/explored this/DT/this entire/JJ/entire thing/NNP/thing. now/RB/now i/PRP/i am/VBP/am back/RB/back tacking/NNP/tacking. i/PRP/i want/VBP/want to/TO/to ensure/VB/ensure that/IN/that this/DT/this edge/NN/edge along/IN/along which/WDT/which i/PRP/i am/VBP/am backtracking/VBG/backtracking is/VBZ/is not/RB/not a/DT/a bridge/NNP/bridge. i/PRP/i want/VBP/want to/TO/to ensure/VB/ensure that/IN/that it/PRP/it is/VBZ/is not/RB/not a/DT/a bridge/NNP/bridge. /NNP/[ hindi/NN/hindi /:/] what/WP/what will/MD/will ensure/VB/ensure that/IN/that this/DT/this edge/NN/edge /,/, i/PRP/i am/VBP/am only/RB/only interested/JJ/interested in/IN/in this/DT/this one/NN/one edge/NN/edge not/RB/not being/VBG/being a/DT/a bridge/NN/bridge ?/./? what/WP/what we/PRP/we ensure/VBP/ensure that/IN/that this/DT/this one/CD/one edge/NN/edge is/VBZ/is not/RB/not bridge/NN/bridge ?/./? /:/[ student/NN/student /:/: it/PRP/it is/VBZ/is connected/VBN/connected /,/, it/PRP/it is/VBZ/is also/RB/also back/RB/back edge/VB/edge /:/] there/EX/there is/VBZ/is a/DT/a back/RB/back edge/NN/edge from/IN/from where/WRB/where ?/./? /:/[ student/NN/student /:/: from/IN/from this/DT/this vertex/NN/vertex /:/] from/IN/from this/DT/this vertex/NN/vertex ?/./? /:/[ student/NN/student /:/: yes/NNS/yes yes/NNS/yes /VBP/] from/IN/from this/DT/this vertex/NN/vertex /:/[ hindi/NN/hindi /:/] any/DT/any of/IN/of these/DT/these vertices/NNS/vertices say/VBP/say /:/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 25/CD/25 /CD/) /./. if/IN/if you/PRP/you remove/VBP/remove this/DT/this edge/NN/edge /,/, let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at the/DT/the blue/JJ/blue tree/NN/tree /,/, the/DT/the dfs/NNS/dfs tree/NNP/tree. in/IN/in a/DT/a tree/NN/tree when/WRB/when i/PRP/i remove/VBP/remove one/CD/one edge/NN/edge /,/, i/PRP/i will/MD/will get/VB/get two/CD/two pieces/NNS/pieces not/RB/not more/NNP/more. this/DT/this will/MD/will be/VB/be one/CD/one piece/NN/piece and/CC/and the/DT/the other/JJ/other remaining/VBG/remaining piece/NNP/piece. i/PRP/i can/MD/can not/RB/not create/VB/create more/JJR/more than/IN/than two/CD/two pieces/NNS/pieces by/IN/by removing/VBG/removing an/DT/an edge/NNP/edge. i/PRP/i create/VBP/create exactly/RB/exactly two/CD/two in/IN/in a/DT/a tree/NNP/tree. now/RB/now these/DT/these two/CD/two pieces/NNS/pieces are/VBP/are connected/VBN/connected among/IN/among themselves/PRP/themselves by/IN/by the/DT/the tree/NN/tree edges/NNS/edges /,/, by/IN/by the/DT/the blue/JJ/blue edges/NNP/edges. i/PRP/i can/MD/can go/VB/go from/IN/from any/DT/any node/NN/node to/TO/to any/DT/any other/JJ/other node/NNP/node. how/WRB/how will/MD/will i/VB/i go/VB/go from/IN/from a/DT/a node/NN/node in/IN/in this/DT/this piece/NN/piece to/TO/to the/DT/the other/JJ/other piece/NN/piece ?/./? by/IN/by going/VBG/going from/IN/from that/DT/that node/NN/node to/TO/to the/DT/the end/NN/end point/NN/point of/IN/of this/DT/this green/JJ/green edge/NN/edge /,/, taking/VBG/taking this/DT/this green/JJ/green edge/NN/edge /,/, going/VBG/going there/EX/there and/CC/and then/RB/then going/VBG/going from/IN/from here/RB/here to/TO/to whichever/VB/whichever node/NN/node i/PRP/i wanted/VBD/wanted to/TO/to go/VB/go to/NNP/to. so/RB/so which/WDT/which means/VBZ/means every/DT/every pair/NN/pair of/IN/of node/NN/node is/VBZ/is connected/VBN/connected which/WDT/which means/VBZ/means that/DT/that the/DT/the entire/JJ/entire thing/NN/thing is/VBZ/is connected/VBN/connected /,/, even/RB/even after/IN/after i/PRP/i have/VBP/have removed/VBN/removed this/DT/this red/VBN/red edge/NNP/edge. this/DT/this red/NN/red edge/NN/edge is/VBZ/is not/RB/not a/DT/a bridge/NNP/bridge. if/IN/if such/JJ/such an/DT/an edge/NN/edge is/VBZ/is present/JJ/present then/RB/then this/DT/this edge/NN/edge is/VBZ/is not/RB/not a/DT/a bridge/NNP/bridge. /NNP/[ hindi/NN/hindi /:/] but/CC/but it/PRP/it has/VBZ/has to/TO/to go/VB/go to/TO/to this/DT/this node/NN/node or/CC/or beyond/NNP/beyond. /:/[ hindi/NN/hindi /:/] i/PRP/i will/MD/will get/VB/get two/CD/two pieces/NNS/pieces which/WDT/which are/VBP/are disconnected/VBN/disconnected from/IN/from each/DT/each other/JJ/other because/IN/because there/EX/there will/MD/will be/VB/be no/RB/no edge/NN/edge going/VBG/going from/IN/from here/RB/here to/TO/to anyone/NN/anyone here/RB/here because/IN/because we/PRP/we said/VBD/said there/RB/there is/VBZ/is no/DT/no edge/NN/edge of/IN/of this/DT/this kind/NNP/kind. /NNP/[ hindi/NN/hindi /:/] this/DT/this is/VBZ/is the/DT/the condition/NN/condition we/PRP/we have/VBP/have to/TO/to check/NNP/check. everyone/NN/everyone understands/VBZ/understands ?/./? what/WP/what is/VBZ/is the/DT/the condition/NN/condition we/PRP/we have/VBP/have to/TO/to check/VB/check ?/./? when/WRB/when i/PRP/i backtrack/VBP/backtrack from/IN/from a/DT/a node/NN/node /,/, i/PRP/i have/VBP/have to/TO/to check/VB/check that/IN/that there/EX/there is/VBZ/is some/DT/some edge/NN/edge from/IN/from here/RB/here which/WDT/which is/VBZ/is going/VBG/going to/TO/to an/DT/an ancestor/NN/ancestor of/IN/of this/DT/this node/NNP/node. /NNP/[ hindi/NN/hindi /:/] how/WRB/how will/MD/will i/VB/i check/NN/check this/DT/this ?/./? linear/NN/linear time/NN/time /:/[ hindi/NN/hindi /:/] /./. there/EX/there should/MD/should be/VB/be some/DT/some edge/NN/edge from/IN/from its/PRP$/its descendent/NN/descendent to/TO/to one/CD/one of/IN/of its/PRP$/its ancestors/NNS/ancestors /,/, that/IN/that ?/./? s/NNS/s all/NNP/all. let/VB/let me/PRP/me write/VB/write it/PRP/it down/IN/down in/IN/in words/NNP/words. when/WRB/when backtracking/VBG/backtracking from/IN/from a/DT/a node/NN/node v/NN/v /,/, we/PRP/we need/VBP/need to/TO/to ensure/VB/ensure that/IN/that there/EX/there is/VBZ/is a/DT/a back/RB/back edge/NN/edge from/IN/from some/DT/some descendent/NN/descendent of/IN/of v/NN/v to/TO/to some/DT/some ancestor/NN/ancestor of/IN/of v/NNP/v. /NNP/[ hindi/NN/hindi /:/] i/PRP/i have/VBP/have said/VBN/said descendent/NN/descendent without/IN/without saying/VBG/saying proper/NN/proper descendent/NNP/descendent. so/RB/so descendent/JJ/descendent includes/NNS/includes the/DT/the node/NN/node itself/PRP/itself but/CC/but this/DT/this ancestor/NN/ancestor is/VBZ/is a/DT/a proper/NN/proper ancestor/NN/ancestor which/WDT/which means/VBZ/means parent/NN/parent or/CC/or above/NNP/above. /:/[ hindi/NN/hindi /:/] now/RB/now we/PRP/we have/VBP/have to/TO/to somehow/VB/somehow ensure/NN/ensure this/NNP/this. how/WRB/how will/MD/will we/VB/we check/NN/check this/DT/this property/NN/property and/CC/and we/PRP/we have/VBP/have to/TO/to do/VB/do it/PRP/it all/DT/all fast/NNP/fast. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 47/CD/47 /CD/) /CD/[ hindi/NN/hindi /:/] we/PRP/we are/VBP/are only/RB/only permitted/VBN/permitted order/NN/order m/NN/m time/NNP/time. /NNP/[ student/NN/student /:/: do/VBP/do we/PRP/we keep/VB/keep track/NN/track of/IN/of the/DT/the back/NN/back edges/NNS/edges then/RB/then we/PRP/we back/RB/back track/VBP/track on/IN/on particular/JJ/particular node/NN/node we/PRP/we believe/VBP/believe from/IN/from our/PRP$/our record/NN/record that/WDT/that particular/JJ/particular back/NN/back edge/NN/edge that/WDT/that node/NN/node /:/] keep/VB/keep track/NN/track of/IN/of all/DT/all back/NN/back edges/NNP/edges. do/VBP/do we/PRP/we need/VBP/need to/TO/to keep/VB/keep track/NN/track of/IN/of all/DT/all back/NN/back edges/NNS/edges ?/./? /:/[ student/NN/student /:/: which/WDT/which /-NONE-/] /VBP/[ hindi/NN/hindi /:/] i/PRP/i am/VBP/am interested/JJ/interested in/IN/in a/DT/a back/NN/back edge/NN/edge but/CC/but do/VBP/do i/PRP/i need/VBP/need to/TO/to keep/VB/keep track/NN/track of/IN/of all/DT/all the/DT/the back/NN/back edges/NNS/edges starting/VBG/starting from/IN/from ?/./? which/WDT/which is/VBZ/is the/DT/the back/NN/back edge/NN/edge which/WDT/which is/VBZ/is of/IN/of interest/NNP/interest. /NNP/[ hindi/NN/hindi /:/] if/IN/if we/PRP/we keep/VBP/keep track/NN/track of/IN/of every/DT/every back/NN/back edge/NN/edge then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be spending/NN/spending a/DT/a lot/NN/lot of/IN/of time/NNP/time. /NNP/[ student/NN/student /:/: sir/NN/sir we/PRP/we will/MD/will delete/VB/delete the/DT/the /NN/] but/CC/but there/EX/there is/VBZ/is one/CD/one back/RB/back edge/NN/edge which/WDT/which is/VBZ/is of/IN/of interest/NN/interest to/TO/to us/NNP/us. which/WDT/which is/VBZ/is the/DT/the one/CD/one back/NN/back edge/NN/edge which/WDT/which is/VBZ/is of/IN/of interest/NN/interest to/TO/to us/PRP/us ?/./? /:/[ hindi/NN/hindi /:/] clearly/RB/clearly if/IN/if i/PRP/i know/VBP/know /:/[ hindi/NN/hindi /:/] /,/, you/PRP/you understand/VBP/understand what/WP/what i/PRP/i mean/VBP/mean by/IN/by /NNP/[ hindi/NN/hindi /:/] is/VBZ/is going/VBG/going to/TO/to the/DT/the node/NN/node which/WDT/which is/VBZ/is closest/JJS/closest to/TO/to the/DT/the root/NNP/root. how/WRB/how can/MD/can i/VB/i figure/NN/figure out/RP/out which/WDT/which is/VBZ/is the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge ?/./? by/IN/by looking/NN/looking at/IN/at the/DT/the arrival/NN/arrival time/NN/time of/IN/of the/DT/the other/JJ/other end/NN/end point/NN/point /:/[ hindi/NN/hindi /:/] /./. so/RB/so just/RB/just by/IN/by looking/VBG/looking at/IN/at arrival/NN/arrival time/NN/time of/IN/of this/DT/this end/NN/end point/NN/point /,/, i/PRP/i can/MD/can figure/VB/figure out/RP/out what/WP/what the/DT/the /NNP/[ hindi/NN/hindi /:/] /./. now/RB/now question/NN/question is/VBZ/is how/WRB/how am/NN/am i/PRP/i going/VBG/going to/TO/to build/VB/build this/DT/this information/NN/information recursively/NNP/recursively. i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NNP/tree. so/RB/so i/PRP/i am/VBP/am just/RB/just keeping/VBG/keeping track/NN/track of/IN/of the/DT/the deepest/JJS/deepest back/RB/back edge/NNP/edge. now/RB/now i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NNP/tree. how/WRB/how will/MD/will i/VB/i find/VB/find out/RP/out the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NN/tree ?/./? suppose/NN/suppose recursively/RB/recursively i/PRP/i have/VBP/have done/VBN/done this/DT/this information/NNP/information. i/PRP/i have/VBP/have figured/VBN/figured this/DT/this information/NNP/information. from/IN/from the/DT/the sub/NN/sub tree/NN/tree i/PRP/i know/VBP/know the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge because/IN/because after/IN/after all/DT/all we/PRP/we are/VBP/are doing/VBG/doing recursively/NNP/recursively. when/WRB/when i/PRP/i run/VBP/run the/DT/the dfs/NNS/dfs from/IN/from here/RB/here /,/, i/PRP/i actually/RB/actually end/VBP/end up/RP/up running/VBG/running dfs/NNS/dfs ?/./? s/NNS/s from/IN/from let/NN/let ?/./? s/NNS/s say/VBP/say these/DT/these three/NNP/three. suppose/NN/suppose i/PRP/i figured/VBD/figured out/RP/out the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NN/tree /,/, i/PRP/i figured/VBD/figured out/RP/out the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NN/tree and/CC/and i/PRP/i figured/VBD/figured out/RP/out the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NNP/tree. how/WRB/how can/MD/can i/VB/i compute/NN/compute the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NN/tree ?/./? /:/[ student/NN/student /:/: compute/NN/compute that/IN/that compare/NN/compare /:/] compare/NN/compare all/DT/all three/CD/three and/CC/and take/VB/take the/DT/the minimum/NNP/minimum. /NNP/[ student/NN/student /:/: and/CC/and from/IN/from u/NN/u also/RB/also /./] the/DT/the one/CD/one with/IN/with the/DT/the minimum/JJ/minimum arrival/NN/arrival time/NNP/time. /NNP/[ student/NN/student /:/: corresponding/VBG/corresponding with/IN/with the/DT/the minimum/JJ/minimum arrival/NN/arrival time/NN/time /:/] /./. so/RB/so this/DT/this will/MD/will give/VB/give me/PRP/me an/DT/an edge/NN/edge whose/WP$/whose other/JJ/other end/NN/end point/NN/point has/VBZ/has a/DT/a smallest/NN/smallest possible/JJ/possible arrival/NN/arrival time/NNP/time. this/DT/this will/MD/will give/VB/give me/PRP/me an/DT/an edge/NN/edge whose/WP$/whose other/JJ/other point/NN/point has/VBZ/has a/DT/a smallest/NN/smallest possible/JJ/possible arrival/NN/arrival time/NN/time /,/, this/DT/this will/MD/will give/VB/give me/PRP/me an/DT/an edge/NN/edge whose/WP$/whose other/JJ/other end/NN/end point/NN/point has/VBZ/has the/DT/the smallest/JJS/smallest arrival/NN/arrival time/NNP/time. now/RB/now if/IN/if i/PRP/i take/VBP/take the/DT/the minimum/JJ/minimum of/IN/of these/DT/these three/CD/three /,/, it/PRP/it will/MD/will give/VB/give me/PRP/me the/DT/the edge/NN/edge which/WDT/which has/VBZ/has the/DT/the smallest/JJS/smallest possible/JJ/possible arrival/NN/arrival time/NN/time which/WDT/which emanates/VBZ/emanates from/IN/from this/DT/this sub/NN/sub tree/NNP/tree. is/VBZ/is this/DT/this true/JJ/true ?/./? /:/[ hindi/NN/hindi /:/] /./. now/RB/now let/VB/let ?/./? s/NNS/s write/VBP/write our/PRP$/our dfs/NNS/dfs procedure/NNP/procedure. so/RB/so this/DT/this is/VBZ/is our/PRP$/our /,/, lets/NNS/lets give/VBP/give it/PRP/it some/DT/some other/JJ/other name/NN/name to/TO/to distinguish/VB/distinguish it/PRP/it from/IN/from dfs/NNP/dfs. let/NN/let ?/./? s/NNS/s call/VBP/call it/PRP/it two/CD/two ec/NN/ec /,/, two/CD/two edge/NN/edge connectivity/NNP/connectivity. so/RB/so we/PRP/we are/VBP/are writing/VBG/writing a/DT/a two/CD/two edge/NN/edge connectivity/NN/connectivity procedure/NNP/procedure. once/RB/once again/RB/again it/PRP/it will/MD/will take/VB/take as/IN/as input/NN/input a/DT/a particular/JJ/particular node/NNP/node. we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write it/PRP/it as/IN/as the/DT/the dfs/NNS/dfs thing/VBG/thing and/CC/and i/PRP/i will/MD/will tell/VB/tell you/PRP/you how/WRB/how we/PRP/we have/VBP/have to/TO/to call/VB/call the/DT/the dfs/NNS/dfs /,/, this/DT/this two/CD/two edge/NN/edge connectivity/NN/connectivity procedure/NN/procedure eventually/NNP/eventually. recall/NN/recall i/PRP/i need/VBP/need the/DT/the arrival/NN/arrival times/VBZ/times of/IN/of the/DT/the nodes/NNP/nodes. so/RB/so i/PRP/i should/MD/should maintain/VB/maintain my/PRP$/my arrival/NN/arrival counter/NN/counter suitably/NNP/suitably. so/RB/so what/WP/what should/MD/should i/VB/i do/VBP/do from/IN/from my/PRP$/my arrival/NN/arrival counter/NN/counter ?/./? /:/[ student/NN/student /:/: time/NN/time is/VBZ/is equal/JJ/equal to/TO/to zero/CD/zero /CD/] /CD/[ hindi/NN/hindi /:/] for/IN/for all/PDT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v /,/, same/JJ/same thing/NNP/thing. for/IN/for all/DT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v do/NNP/do. what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? /:/[ hindi/NN/hindi /:/] arrival/NN/arrival value/NN/value of/IN/of this/DT/this node/NN/node itself/PRP/itself would/MD/would be/VB/be a/DT/a natural/JJ/natural thing/NN/thing to/TO/to do/NNP/do. let/VB/let ?/./? s/NNS/s set/VBD/set that/IN/that at/IN/at that/NNP/that. now/RB/now deepest/VBP/deepest back/RB/back edge/NN/edge /:/[ hindi/NN/hindi /:/] as/IN/as i/PRP/i do/VBP/do my/PRP$/my dfs/NNS/dfs calls/VBZ/calls /,/, i/PRP/i have/VBP/have to/TO/to kind/VB/kind of/IN/of keep/JJ/keep updating/NN/updating this/DT/this variable/NNP/variable. what/WP/what should/MD/should i/VB/i do/VBP/do for/IN/for all/PDT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v do/NNP/do. if/IN/if not/RB/not visited/VBN/visited w/NN/w then/RB/then then/RB/then what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? /:/[ student/NN/student /:/: then/RB/then if/IN/if then/RB/then arrival/JJ/arrival v/NN/v or/CC/or smaller/JJR/smaller than/IN/than dbe/NN/dbe /:/] arrival/NN/arrival v/NN/v then/RB/then dbe/VB/dbe equal/JJ/equal minimum/JJ/minimum of/IN/of dbe/NN/dbe /,/, 2/CD/2 ec/NN/ec of/IN/of w/NN/w /:/[ hindi/NN/hindi /:/] /./. /:/[ student/NN/student /:/: sir/NN/sir even/RB/even it/PRP/it is/VBZ/is even/RB/even it/PRP/it is/VBZ/is visited/VBN/visited /-NONE-/] if/IN/if the/DT/the node/NN/node is/VBZ/is visited/VBN/visited then/RB/then what/WP/what does/VBZ/does that/IN/that mean/JJ/mean /,/, what/WP/what edge/NN/edge is/VBZ/is it/PRP/it ?/./? /:/[ student/NN/student /:/: back/RB/back edge/NN/edge /:/] it/PRP/it is/VBZ/is a/DT/a back/RB/back edge/NN/edge /:/[ hindi/NN/hindi /:/] /./. so/RB/so else/RB/else what/WP/what should/MD/should i/VB/i write/JJ/write on/IN/on here/RB/here ?/./? /:/[ student/NN/student /:/: if/IN/if you/PRP/you are/VBP/are maintaining/VBG/maintaining that/IN/that d/JJ/d ec/NN/ec w/NN/w and/CC/and some/DT/some particular/JJ/particular array/NN/array then/RB/then you/PRP/you can/MD/can write/VB/write that/IN/that minimum/JJ/minimum of/IN/of i/PRP/i will/MD/will say/VB/say i/PRP/i have/VBP/have to/TO/to write/VB/write the/DT/the same/JJ/same thing/NN/thing again/RB/again minimum/JJ/minimum /NN/] /./. we/PRP/we will/MD/will just/RB/just write/VB/write the/DT/the same/JJ/same thing/NN/thing /,/, dbe/NN/dbe equals/NNS/equals minimum/VBP/minimum of/IN/of dbe/NN/dbe comma/NN/comma /:/[ student/NN/student /:/: 2/CD/2 ec/NN/ec w/NN/w arrival/NN/arrival of/IN/of /NNP/] not/RB/not 2/CD/2 ec/NN/ec /,/, we/PRP/we are/VBP/are not/RB/not running/VBG/running a/DT/a arrival/JJ/arrival of/IN/of w/NNP/w. /NNP/[ hindi/NN/hindi /:/] now/RB/now what/WP/what do/VBP/do i/PRP/i have/VB/have to/TO/to check/VB/check ?/./? /:/[ student/NN/student /:/: if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than or/CC/or /CD/] if/IN/if dbe/NN/dbe is/VBZ/is less/JJR/less than/IN/than arrival/NN/arrival v/CC/v. /:/[ student/NN/student /:/: never/RB/never be/VB/be possible/JJ/possible /NN/] /:/[ hindi/NN/hindi /:/] if/IN/if dbe/NN/dbe is/VBZ/is less/JJR/less than/IN/than arrival/NN/arrival v/NN/v then/RB/then continue/NNP/continue. /:/[ student/NN/student /:/: there/EX/there we/PRP/we can/MD/can then/RB/then we/PRP/we can/MD/can continue/VB/continue /:/] then/RB/then we/PRP/we can/MD/can continue/NNP/continue. if/IN/if dbe/NN/dbe equals/NNS/equals arrival/NN/arrival v/NN/v then/RB/then /./[ hindi/NN/hindi /:/] then/RB/then abort/NNP/abort. basically/RB/basically then/RB/then you/PRP/you stop/VB/stop your/PRP$/your procedure/NN/procedure saying/VBG/saying you/PRP/you found/VBD/found a/DT/a bridge/NNP/bridge. you/PRP/you can/MD/can do/VB/do whatever/RB/whatever you/PRP/you want/VBP/want /,/, i/PRP/i will/MD/will just/RB/just write/VB/write abort/NN/abort here/NNP/here. you/PRP/you should/MD/should not/RB/not write/VB/write abort/NN/abort /,/, you/PRP/you should/MD/should end/VB/end gracefully/NNP/gracefully. but/CC/but you/PRP/you understand/VBP/understand what/WP/what i/PRP/i am/VBP/am saying/NNP/saying. basically/RB/basically why/WRB/why have/VBP/have we/PRP/we said/VBD/said equal/JJ/equal to/TO/to and/CC/and not/RB/not greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/NN/to. greater/NN/greater /:/[ hindi/NN/hindi /:/] /./. /:/[ student/NN/student /:/: sir/NN/sir can/MD/can you/PRP/you explain/VB/explain else/RB/else part/NN/part if/IN/if w/NN/w is/VBZ/is /:/] he/PRP/he wants/VBZ/wants me/PRP/me to/TO/to explain/VB/explain the/DT/the else/NN/else part/NNP/part. why/WRB/why do/VBP/do we/PRP/we need/VBP/need the/DT/the else/NN/else part/NN/part /,/, you/PRP/you are/VBP/are wondering/NNP/wondering. /NNP/[ student/NN/student /:/: we/PRP/we need/VBP/need the/DT/the else/NN/else part/NN/part /:/] you/PRP/you need/VBP/need the/DT/the else/NN/else part/NN/part /,/, great/NNP/great. /NNP/[ student/NN/student /:/: but/CC/but why/WRB/why arr/NN/arr w/NN/w what/WP/what is/VBZ/is the/DT/the significance/NN/significance of/IN/of w/NN/w /:/] what/WP/what arrival/NN/arrival w/VBD/w ?/./? the/DT/the else/NN/else corresponds/NNS/corresponds to/TO/to a/DT/a back/RB/back edge/NN/edge starting/VBG/starting from/IN/from v/NNP/v. it/PRP/it is/VBZ/is going/VBG/going to/TO/to a/DT/a node/NN/node w/NNP/w. w/NN/w is/VBZ/is a/DT/a node/NN/node which/WDT/which is/VBZ/is adjacent/NN/adjacent to/TO/to v/VB/v /,/, so/RB/so it/PRP/it is/VBZ/is going/VBG/going to/TO/to a/DT/a node/NN/node w/NNP/w. how/WRB/how am/NN/am i/PRP/i keeping/VBG/keeping track/NN/track of/IN/of deepest/NN/deepest ?/./? i/PRP/i am/VBP/am keeping/VBG/keeping track/NN/track of/IN/of deepest/NN/deepest by/IN/by arrival/NN/arrival numbers/NNS/numbers of/IN/of the/DT/the nodes/NNP/nodes. so/RB/so that/IN/that ?/./? s/NNS/s why/WRB/why i/PRP/i am/VBP/am comparing/VBG/comparing it/PRP/it the/DT/the arrival/NN/arrival of/IN/of that/DT/that node/NN/node with/IN/with this/NNP/this. /NNP/[ hindi/NN/hindi /:/] so/RB/so i/PRP/i need/VBP/need that/IN/that and/CC/and if/IN/if the/DT/the deepest/JJS/deepest is/VBZ/is less/JJR/less than/IN/than this/DT/this v/NN/v then/RB/then its/PRP$/its okay/NN/okay /,/, i/PRP/i can/MD/can continue/NNP/continue. if/IN/if it/PRP/it is/VBZ/is here/RB/here only/RB/only /,/, deepest/VBP/deepest is/VBZ/is this/DT/this then/RB/then this/DT/this means/VBZ/means that/IN/that this/DT/this edge/NN/edge is/VBZ/is a/DT/a bridge/NNP/bridge. /NNP/[ hindi/NN/hindi /:/] no/DT/no /,/, we/PRP/we can/MD/can not/RB/not say/VB/say anything/NN/anything about/IN/about the/DT/the arrival/NN/arrival time/NN/time of/IN/of this/DT/this verses/NNS/verses the/DT/the arrival/NN/arrival time/NN/time of/IN/of this/NNP/this. i/PRP/i have/VBP/have said/VBN/said this/DT/this before/NNP/before. we/PRP/we can/MD/can not/RB/not say/VB/say that/IN/that this/DT/this is/VBZ/is one/CD/one less/JJR/less than/IN/than that/NNP/that. basically/RB/basically we/PRP/we have/VBP/have to/TO/to modify/VB/modify this/DT/this so/RB/so that/IN/that i/PRP/i am/VBP/am not/RB/not considering/VBG/considering this/DT/this edge/NN/edge /,/, this/DT/this tree/NN/tree edge/NNP/edge. this/DT/this has/VBZ/has to/TO/to be/VB/be modified/VBN/modified so/RB/so that/IN/that the/DT/the tree/NN/tree edge/NN/edge is/VBZ/is not/RB/not considered/VBN/considered /,/, this/DT/this parent/NN/parent edge/NN/edge is/VBZ/is not/RB/not considered/VBN/considered /-NONE-/[ hindi/NN/hindi /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 55/CD/55 /CD/) /./. when/WRB/when we/PRP/we do/VBP/do the/DT/the dfs/NNS/dfs from/IN/from that/DT/that vertex/NN/vertex /,/, we/PRP/we visit/VBP/visit all/DT/all the/DT/the vertices/NNP/vertices. all/DT/all the/DT/the back/NN/back edges/NNS/edges /,/, if/IN/if any/DT/any coming/VBG/coming from/IN/from below/IN/below can/MD/can not/RB/not go/VB/go to/TO/to some/DT/some smaller/JJR/smaller number/NNP/number. clearly/RB/clearly they/PRP/they are/VBP/are only/RB/only going/VBG/going up/RP/up to/TO/to this/DT/this vertex/NN/vertex because/IN/because this/DT/this vertex/NN/vertex has/VBZ/has the/DT/the arrival/NN/arrival number/NN/number zero/NNP/zero. there/EX/there is/VBZ/is now/RB/now vertex/NN/vertex with/IN/with arrival/NN/arrival number/NN/number less/RBR/less than/IN/than zero/NNP/zero. /NNP/[ student/NN/student /:/: dbe/NN/dbe should/MD/should not/RB/not be/VB/be zero/RB/zero /-NONE-/] /:/[ hindi/NN/hindi /:/] basically/RB/basically there/RB/there are/VBP/are many/JJ/many ways/NNS/ways of/IN/of doing/VBG/doing it/NNP/it. you/PRP/you could/MD/could perhaps/RB/perhaps have/VB/have marked/VBN/marked this/DT/this edge/NN/edge as/IN/as a/DT/a tree/NN/tree edge/NNP/edge. you/PRP/you will/MD/will have/VB/have to/TO/to think/VB/think of/IN/of ways/NNS/ways of/IN/of doing/VBG/doing this/NNP/this. i/PRP/i will/MD/will leave/VB/leave that/IN/that as/IN/as an/DT/an exercise/NNP/exercise. these/DT/these are/VBP/are two/CD/two minor/JJ/minor things/NNS/things but/CC/but they/PRP/they are/VBP/are important/NNP/important. your/PRP$/your procedure/NN/procedure would/MD/would not/RB/not run/VB/run at/IN/at all/DT/all /,/, if/IN/if you/PRP/you were/VBD/were to/TO/to ignore/VB/ignore them/NNP/them. what/WP/what is/VBZ/is a/DT/a running/VBG/running time/NN/time ?/./? /:/[ hindi/NN/hindi /:/] so/RB/so essentially/RB/essentially as/IN/as same/JJ/same as/IN/as before/NNP/before. for/IN/for every/DT/every edge/NN/edge we/PRP/we are/VBP/are spending/VBG/spending a/DT/a constant/JJ/constant amount/NN/amount of/IN/of time/NNP/time. the/DT/the total/JJ/total running/NN/running time/NN/time is/VBZ/is still/RB/still order/NN/order m/NNP/m. this/DT/this is/VBZ/is clear/JJ/clear ?/./? so/RB/so actually/RB/actually very/RB/very sophisticated/JJ/sophisticated procedures/NNS/procedures can/MD/can be/VB/be built/VBN/built on/IN/on top/JJ/top of/IN/of dfs/NNP/dfs. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 46/CD/46 /CD/) there/EX/there are/VBP/are many/JJ/many other/JJ/other graph/NN/graph problems/NNS/problems which/WDT/which can/MD/can be/VB/be solved/VBN/solved in/IN/in liner/NN/liner time/NNP/time. they/PRP/they might/MD/might seem/VB/seem very/RB/very complicated/VBN/complicated problem/NN/problem but/CC/but you/PRP/you can/MD/can essentially/RB/essentially solve/VB/solve them/PRP/them in/IN/in linear/JJ/linear time/NN/time using/VBG/using depth/NN/depth first/RB/first search/NNP/search. i/PRP/i will/MD/will mention/VB/mention one/CD/one other/JJ/other problem/NN/problem because/IN/because i/PRP/i have/VBP/have a/DT/a couple/NN/couple of/IN/of minutes/NNP/minutes. we/PRP/we will/MD/will not/RB/not of/IN/of course/NN/course discuss/NN/discuss it/NNP/it. the/DT/the other/JJ/other problem/NN/problem is/VBZ/is /,/, is/VBZ/is g/JJ/g a/DT/a planar/NN/planar graph/NN/graph ?/./? do/VBP/do you/PRP/you know/VB/know what/WP/what a/DT/a planar/NN/planar graph/NN/graph is/VBZ/is ?/./? you/PRP/you are/VBP/are not/RB/not done/VBN/done a/DT/a discrete/JJ/discrete math/NN/math ?/./? s/NNS/s courses/NNP/courses. no/DT/no /,/, you/PRP/you are/VBP/are doing/VBG/doing it/PRP/it next/JJ/next semester/NNP/semester. /NNP/[ hindi/NN/hindi /:/] that/IN/that is/VBZ/is not/RB/not sufficient/NNP/sufficient. what/WP/what is/VBZ/is a/DT/a planar/NN/planar graph/NN/graph ?/./? a/DT/a planar/NN/planar graph/NN/graph is/VBZ/is a/DT/a graph/NN/graph which/WDT/which can/MD/can be/VB/be drawn/VBN/drawn in/IN/in the/DT/the plane/NN/plane such/JJ/such that/IN/that its/PRP$/its edges/NNS/edges do/VBP/do not/RB/not intersect/NNP/intersect. /:/[ hindi/NN/hindi /:/] this/DT/this is/VBZ/is a/DT/a planar/NN/planar graph/NNP/graph. i/PRP/i can/MD/can draw/VB/draw it/PRP/it whichever/RB/whichever way/NN/way i/PRP/i want/VBP/want but/CC/but the/DT/the edges/NNS/edges should/MD/should not/RB/not intersect/NNP/intersect. now/RB/now suppose/VBP/suppose what/WP/what is/VBZ/is this/DT/this graph/NN/graph ?/./? this/DT/this graph/NN/graph is/VBZ/is the/DT/the complete/JJ/complete graph/NN/graph or/CC/or almost/RB/almost the/DT/the complete/JJ/complete graph/NN/graph on/IN/on five/CD/five vertices/NNP/vertices. i/PRP/i told/VBD/told you/PRP/you what/WP/what the/DT/the definition/NN/definition of/IN/of a/DT/a complete/JJ/complete graph/NN/graph is/NNP/is. complete/NN/complete graph/NN/graph or/CC/or a/DT/a cleak/NN/cleak /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54.55/CD/54.55 /CD/) is/VBZ/is this/DT/this the/DT/the complete/NN/complete graph/NN/graph /,/, compete/JJ/compete graph/NN/graph on/IN/on five/CD/five vertices/NNP/vertices. no/DT/no /,/, why/WRB/why not/RB/not ?/./? the/DT/the edge/NN/edge 2/CD/2 5/CD/5 is/VBZ/is missing/VBG/missing /,/, /:/[ hindi/NN/hindi /:/] 2/CD/2 5/CD/5 is/VBZ/is the/DT/the edge/NN/edge which/WDT/which is/VBZ/is missing/NNP/missing. /:/[ hindi/NN/hindi /:/] there/EX/there is/VBZ/is no/DT/no way/NN/way i/PRP/i can/MD/can draw/VB/draw 2/CD/2 5/CD/5 here/RB/here without/IN/without crossing/VBG/crossing and/CC/and that/IN/that has/VBZ/has nothing/NN/nothing to/TO/to do/VB/do with/IN/with the/DT/the way/NN/way i/PRP/i drew/VBD/drew the/DT/the initial/JJ/initial thing/NN/thing /:/[ hindi/NN/hindi /:/] /./. there/EX/there is/VBZ/is no/DT/no way/NN/way i/PRP/i can/MD/can draw/VB/draw 2/CD/2 5/CD/5. actually/RB/actually this/DT/this complete/JJ/complete graph/NN/graph on/IN/on 5/CD/5 vertices/NNS/vertices is/VBZ/is not/RB/not a/DT/a planar/NN/planar graph/NN/graph /:/[ hindi/NN/hindi /:/] /./. if/IN/if i/PRP/i were/VBD/were to/TO/to draw/VB/draw it/PRP/it this/DT/this way/NN/way /,/, it/PRP/it would/MD/would cross/VB/cross with/IN/with this/NNP/this. if/IN/if i/PRP/i were/VBD/were to/TO/to draw/VB/draw it/PRP/it like/IN/like this/DT/this /,/, it/PRP/it would/MD/would still/RB/still crosses/VBZ/crosses with/IN/with this/DT/this edge/NNP/edge. if/IN/if i/PRP/i were/VBD/were to/TO/to draw/VB/draw it/PRP/it like/IN/like this/DT/this /,/, it/PRP/it would/MD/would cross/VB/cross with/IN/with this/DT/this edge/NN/edge and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. there/RB/there is/VBZ/is no/DT/no over/NN/over drawing/VBG/drawing this/NNP/this. so/RB/so that/IN/that ?/./? s/NNS/s the/DT/the question/NN/question /,/, is/VBZ/is a/DT/a given/VBN/given graph/NN/graph a/DT/a planar/NN/planar graph/NNP/graph. this/DT/this problem/NN/problem can/MD/can be/VB/be solved/VBN/solved using/VBG/using depth/NN/depth first/RB/first search/NNP/search. so/RB/so that/IN/that you/PRP/you can/MD/can get/VB/get an/DT/an algorithm/NN/algorithm which/WDT/which runs/VBZ/runs in/IN/in linear/JJ/linear time/NN/time /,/, order/NN/order m/NN/m time/NN/time /,/, very/RB/very sophisticated/JJ/sophisticated algorithm/NN/algorithm to/TO/to check/VB/check if/IN/if the/DT/the graph/NN/graph is/VBZ/is planar/NN/planar or/CC/or not/NNP/not. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 07/CD/07 /CD/) this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a non/NN/non planar/NN/planar graph/NN/graph that/WDT/that i/PRP/i had/VBD/had shown/NNP/shown. you/PRP/you learn/VBP/learn more/JJR/more about/IN/about this/DT/this in/IN/in your/PRP$/your discrete/NN/discrete math/NN/math ?/./? s/NNS/s course/NNP/course. what/WP/what are/VBP/are non-planar/JJ/non-planar graphs/NNS/graphs /,/, what/WP/what can/MD/can you/PRP/you say/VB/say about/IN/about non/NN/non planar/NN/planar graphs/NNS/graphs ?/./? /:/[ hindi/NN/hindi /:/] this/DT/this is/VBZ/is another/DT/another example/NN/example of/IN/of depth/NN/depth first/RB/first search/NN/search but/CC/but we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be taking/VBG/taking up/RP/up this/DT/this in/IN/in this/DT/this course/NNP/course. there/RB/there is/VBZ/is one/CD/one third/JJ/third example/NN/example which/WDT/which i/PRP/i will/MD/will do/VB/do in/IN/in two/CD/two minutes/NNP/minutes. so/RB/so just/RB/just as/IN/as i/PRP/i defined/VBD/defined two/CD/two edge/NN/edge connectivity/NN/connectivity /,/, i/PRP/i can/MD/can define/VB/define two/CD/two vertex/NN/vertex connectivity/NNP/connectivity. just/RB/just replace/NN/replace the/DT/the edge/NN/edge by/IN/by a/DT/a vertex/NNP/vertex. a/DT/a graph/NN/graph is/VBZ/is two/CD/two vertex/NN/vertex connected/VBN/connected /,/, if/IN/if removing/VBG/removing any/DT/any vertex/NN/vertex still/RB/still keeps/VBZ/keeps the/DT/the graph/NN/graph connected/NNP/connected. this/DT/this corresponds/NNS/corresponds to/TO/to computer/NN/computer failures/NNP/failures. now/RB/now instead/RB/instead of/IN/of link/NN/link failures/NNS/failures earlier/RBR/earlier /JJ/[ hindi/NN/hindi /:/] then/RB/then you/PRP/you would/MD/would call/VB/call it/PRP/it a/DT/a two/CD/two vertex/NN/vertex connected/NNP/connected. so/RB/so no/DT/no matter/NN/matter which/WDT/which computer/NN/computer breaks/VBZ/breaks down/NNP/down. if/IN/if the/DT/the network/NN/network is/VBZ/is still/RB/still functioning/VBG/functioning /,/, it/PRP/it is/VBZ/is still/RB/still connected/NNP/connected. then/RB/then you/PRP/you would/MD/would call/VB/call it/PRP/it a/DT/a two/CD/two vertex/NN/vertex connected/VBN/connected graph/NNP/graph. for/IN/for instance/NN/instance this/DT/this would/MD/would be/VB/be an/DT/an example/NN/example of/IN/of a/DT/a graph/NNP/graph. is/VBZ/is this/DT/this two/CD/two vertex/NN/vertex connected/VBN/connected ?/./? no/DT/no /,/, why/WRB/why because/IN/because if/IN/if i/PRP/i remove/VBP/remove this/DT/this vertex/NN/vertex /,/, it/PRP/it becomes/VBZ/becomes disconnected/NNP/disconnected. when/WRB/when i/PRP/i remove/VBP/remove a/DT/a vertex/NN/vertex /,/, i/PRP/i also/RB/also remove/VBP/remove the/DT/the edges/NNS/edges incident/NN/incident to/TO/to that/DT/that vertex/NNP/vertex. clearly/RB/clearly it/PRP/it becomes/VBZ/becomes disconnected/VBN/disconnected but/CC/but this/DT/this is/VBZ/is a/DT/a two/CD/two edge/NN/edge connected/VBN/connected graph/NNP/graph. this/DT/this graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/NNP/connected. once/RB/once again/RB/again the/DT/the same/JJ/same question/NN/question given/VBN/given a/DT/a graph/NN/graph /,/, is/VBZ/is it/PRP/it two/CD/two vertex/NN/vertex connected/VBN/connected that/IN/that can/MD/can be/VB/be checked/VBN/checked by/IN/by depth/NN/depth first/RB/first search/NN/search in/IN/in linear/NN/linear time/NNP/time. such/JJ/such a/DT/a vertex/NN/vertex is/VBZ/is called/VBN/called a/DT/a cut/NN/cut vertex/NN/vertex /,/, bridge/NN/bridge /:/[ hindi/NN/hindi /:/] corresponding/VBG/corresponding notion/NN/notion is/VBZ/is cut/VBN/cut vertex/NN/vertex here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 58/CD/58 /:/: 31/CD/31 /CD/) in/IN/in today/NN/today ?/./? s/NNS/s class/NN/class we/PRP/we have/VBP/have done/VBN/done example/NN/example of/IN/of depth/NN/depth first/RB/first search/NN/search which/WDT/which is/VBZ/is checking/VBG/checking if/IN/if a/DT/a given/VBN/given graph/NN/graph is/VBZ/is two/CD/two edge/NN/edge connected/NNP/connected. there/EX/there are/VBP/are many/JJ/many other/JJ/other application/NN/application that/IN/that depth/NN/depth first/RB/first search/NN/search can/MD/can be/VB/be put/VBN/put to/-NONE-/to. i/PRP/i have/VBP/have shown/VBN/shown you/PRP/you /,/, i/PRP/i mentioned/VBD/mentioned briefly/RB/briefly two/CD/two examples/NNS/examples /,/, checking/VBG/checking if/IN/if a/DT/a given/VBN/given graph/NN/graph is/VBZ/is a/DT/a planar/NN/planar graph/NN/graph and/CC/and checking/VBG/checking if/IN/if a/DT/a given/VBN/given graph/NN/graph is/VBZ/is two/CD/two vertex/NN/vertex connected/NNP/connected. so/RB/so next/JJ/next class/NN/class we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at depth/NN/depth first/RB/first search/NN/search in/IN/in directed/VBN/directed graphs/NNS/graphs and/CC/and see/VB/see how/WRB/how it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be different/JJ/different from/IN/from undirected/JJ/undirected graphs/NNP/graphs. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 29/CD/29 dfs/NNS/dfs in/IN/in directed/VBN/directed graphs/NNS/graphs today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about depth/NN/depth first/RB/first search/NN/search in/IN/in directed/VBN/directed graphs/NNP/graphs. in/IN/in the/DT/the last/JJ/last two/CD/two classes/NNS/classes we/PRP/we have/VBP/have looked/VBN/looked at/IN/at depth/NN/depth first/RB/first search/NN/search in/IN/in undirected/JJ/undirected graphs/NNS/graphs and/CC/and seen/VBN/seen applications/NNS/applications for/IN/for the/DT/the same/NNP/same. how/WRB/how does/VBZ/does depth/JJ/depth first/RB/first search/NN/search in/IN/in directed/VBN/directed graphs/NNS/graphs differ/VBP/differ from/IN/from depth/NN/depth first/RB/first search/NN/search in/IN/in undirected/JJ/undirected graphs/NNS/graphs ?/./? let/NN/let ?/./? s/NNS/s take/VBP/take an/DT/an example/NN/example of/IN/of a/DT/a directed/VBN/directed graph/NNP/graph. let/NN/let me/PRP/me make/VBP/make sure/JJ/sure this/DT/this has/VBZ/has something/NN/something interesting/VBG/interesting happening/NNP/happening. let/NN/let ?/./? s/NNS/s put/VBD/put this/DT/this edge/NN/edge back/RB/back here/NNP/here. suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the directed/VBN/directed graph/NN/graph that/IN/that i/PRP/i started/VBD/started and/CC/and this/DT/this is/VBZ/is my/PRP$/my start/NN/start vertex/NNP/vertex. the/DT/the process/NN/process is/VBZ/is going/VBG/going to/TO/to be/VB/be exactly/RB/exactly the/DT/the same/NNP/same. as/IN/as in/IN/in the/DT/the depth/NN/depth first/RB/first search/NN/search /,/, so/RB/so the/DT/the code/NN/code for/IN/for depth/NN/depth first/RB/first search/NN/search would/MD/would remain/VB/remain the/DT/the same/NNP/same. let/NN/let me/PRP/me write/VBP/write it/PRP/it down/IN/down once/RB/once again/RB/again for/IN/for your/PRP$/your benefit/NNP/benefit. so/RB/so depth/JJ/depth first/JJ/first search/NN/search from/IN/from a/DT/a vertex/NN/vertex v/NN/v /,/, what/WP/what did/VBD/did we/PRP/we do/NNP/do. we/PRP/we set/VBD/set visited/VBN/visited v/NN/v to/TO/to 1/CD/1 and/CC/and then/RB/then for/IN/for all/DT/all w/NN/w adjacent/NN/adjacent to/TO/to v/NNP/v. what/WP/what do/VBP/do you/PRP/you do/VB/do ?/./? if/IN/if not/RB/not visited/VBN/visited w/NN/w then/RB/then dfs/VBZ/dfs /:/( w/NN/w /:/) and/CC/and this/DT/this was/VBD/was the/DT/the quote/NN/quote for/IN/for depth/NN/depth first/RB/first search/NN/search in/IN/in undirected/JJ/undirected graphs/NNP/graphs. now/RB/now this/DT/this is/VBZ/is the/DT/the same/JJ/same quote/NN/quote for/IN/for depth/NN/depth first/RB/first search/NN/search in/IN/in directed/VBN/directed graphs/NNP/graphs. i/PRP/i just/RB/just need/VBP/need to/TO/to redefine/VB/redefine what/WP/what the/DT/the adjacent/NN/adjacent means/VBZ/means now/NNP/now. what/WP/what do/VBP/do you/PRP/you thing/VBG/thing adjacent/NN/adjacent means/NNS/means ?/./? so/RB/so a/DT/a vertex/NN/vertex w/NN/w will/MD/will be/VB/be called/VBN/called adjacent/NN/adjacent to/TO/to vertex/VB/vertex v/NN/v /,/, if/IN/if i/PRP/i can/MD/can go/VB/go from/IN/from v/NN/v to/TO/to w/NNP/w. i/PRP/i am/VBP/am at/IN/at vertex/NN/vertex v/NN/v /,/, i/PRP/i want/VBP/want to/TO/to look/VB/look at/IN/at all/DT/all the/DT/the vertices/NNS/vertices to/TO/to which/WDT/which i/PRP/i can/MD/can reach/VB/reach from/IN/from v/NNP/v. so/RB/so these/DT/these three/CD/three vertices/NNS/vertices would/MD/would be/VB/be adjacent/JJ/adjacent to/TO/to v/NNP/v. so/RB/so sometimes/RB/sometimes the/DT/the term/NN/term out/IN/out adjacent/NN/adjacent is/VBZ/is used/VBN/used because/IN/because you/PRP/you might/MD/might also/RB/also want/VB/want to/TO/to call/VB/call this/DT/this vertex/NN/vertex adjacent/NNP/adjacent. so/RB/so x/NN/x will/MD/will be/VB/be called/VBN/called in/RP/in adjacent/NN/adjacent but/CC/but here/RB/here we/PRP/we talk/VBP/talk of/IN/of adjacent/NN/adjacent we/PRP/we mean/VBP/mean out/RP/out adjacent/JJ/adjacent /,/, vertices/NNS/vertices to/TO/to which/WDT/which you/PRP/you can/MD/can go/VB/go from/IN/from vertex/NN/vertex v/NN/v and/CC/and the/DT/the rest/NN/rest are/VBP/are the/DT/the same/NNP/same. let/NN/let ?/./? s/NNS/s see/VBP/see what/WP/what will/MD/will happen/VB/happen now/NNP/now. let/VB/let ?/./? s/NNS/s say/VBP/say i/PRP/i start/VBP/start from/IN/from this/DT/this vertex/NN/vertex s/VBZ/s and/CC/and i/PRP/i took/VBD/took /,/, this/DT/this has/VBZ/has the/DT/the first/JJ/first edge/NN/edge to/TO/to go/VB/go out/NNP/out. i/PRP/i came/VBD/came to/TO/to this/DT/this vertex/NN/vertex /,/, now/RB/now i/PRP/i took/VBD/took this/DT/this as/IN/as the/DT/the first/JJ/first edge/NN/edge to/TO/to go/VB/go out/NNP/out. so/RB/so i/PRP/i came/VBD/came to/TO/to this/DT/this vertex/NNP/vertex. now/RB/now i/PRP/i will/MD/will consider/VB/consider the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NNP/vertex. how/WRB/how many/JJ/many edges/NNS/edges are/VBP/are going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex ?/./? only/RB/only one/CD/one which/WDT/which is/VBZ/is going/VBG/going to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/NNP/visited. yes/NNP/yes. so/RB/so there/RB/there is/VBZ/is nothing/NN/nothing more/JJR/more to/TO/to be/VB/be done/VBN/done at/IN/at this/DT/this vertex/NN/vertex /,/, i/PRP/i will/MD/will backtrack/VB/backtrack from/IN/from this/DT/this vertex/NN/vertex /,/, go/VBP/go back/RB/back to/TO/to where/WRB/where i/PRP/i came/VBD/came from/NNP/from. i/PRP/i come/VBP/come back/RB/back to/TO/to there/NNP/there. now/RB/now from/IN/from here/RB/here i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the other/JJ/other edges/NNS/edges which/WDT/which are/VBP/are going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex /,/, there/EX/there is/VBZ/is one/CD/one more/RBR/more edge/JJ/edge so/RB/so that/IN/that will/MD/will bring/VB/bring me/PRP/me to/TO/to this/DT/this vertex/NNP/vertex. from/IN/from here/RB/here i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NNP/vertex. there/RB/there is/VBZ/is only/RB/only one/CD/one edge/NN/edge which/WDT/which is/VBZ/is going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex that/IN/that 's/POS/'s going/VBG/going to/TO/to bring/VB/bring me/PRP/me to/TO/to this/DT/this vertex/NNP/vertex. from/IN/from here/RB/here i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NNP/vertex. there/RB/there is/VBZ/is only/RB/only one/CD/one edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex which/WDT/which is/VBZ/is going/VBG/going to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/NNP/visited. so/RB/so i/PRP/i am/VBP/am done/NN/done here/RB/here /,/, i/PRP/i backtrack/VBP/backtrack come/VBN/come back/RB/back here/NNP/here. yes/NNS/yes /,/, backtrack/NNP/backtrack. why/WRB/why do/VBP/do i/PRP/i backtrack/VBP/backtrack from/IN/from here/RB/here ?/./? because/IN/because there/EX/there is/VBZ/is no/DT/no other/JJ/other edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NNP/vertex. so/RB/so i/PRP/i backtrack/VBP/backtrack /,/, i/PRP/i come/VBP/come back/RB/back here/NNP/here. there/EX/there is/VBZ/is no/DT/no other/JJ/other edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex /,/, so/RB/so i/PRP/i backtrack/VBP/backtrack /,/, i/PRP/i come/VBP/come here/NNP/here. from/IN/from here/RB/here now/RB/now what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? i/PRP/i will/MD/will look/VB/look at/IN/at the/DT/the other/JJ/other edge/NN/edge going/VBG/going out/NNP/out. this/DT/this is/VBZ/is going/VBG/going to/TO/to this/DT/this vertex/NN/vertex /,/, so/RB/so i/PRP/i come/VBP/come to/TO/to this/DT/this vertex/NN/vertex along/IN/along this/DT/this edge/NN/edge and/CC/and from/IN/from this/DT/this vertex/NN/vertex /,/, i/PRP/i look/VBP/look at/IN/at the/DT/the other/JJ/other edge/NN/edge going/VBG/going out/RP/out /,/, any/DT/any edges/NNS/edges going/VBG/going out/RP/out /,/, so/RB/so this/DT/this edge/NN/edge is/VBZ/is going/VBG/going out/RP/out but/CC/but it/PRP/it is/VBZ/is going/VBG/going to/TO/to a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is already/RB/already visited/VBN/visited /,/, yes/NNP/yes. so/RB/so i/PRP/i backtrack/VBP/backtrack from/IN/from this/DT/this vertex/NN/vertex and/CC/and i/PRP/i come/VBP/come back/RB/back to/TO/to here/NNP/here. there/RB/there is/VBZ/is no/DT/no other/JJ/other edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex so/IN/so i/PRP/i backtrack/VBP/backtrack from/IN/from s/NNS/s which/WDT/which effectively/RB/effectively means/VBZ/means i/PRP/i have/VBP/have finished/VBN/finished the/DT/the procedure/NNP/procedure. /NNP/[ hindi/NN/hindi /:/] this/DT/this is/VBZ/is what/WP/what dfs/NNS/dfs here/RB/here would/MD/would look/VB/look like/NNP/like. let/VB/let me/PRP/me give/VB/give the/DT/the arrival/NN/arrival and/CC/and departure/NN/departure numbers/NNS/numbers to/TO/to these/DT/these vertices/NNS/vertices so/RB/so that/IN/that it/PRP/it ?/./? s/NNS/s completely/RB/completely clear/JJ/clear what/WP/what we/PRP/we are/VBP/are doing/NNP/doing. so/RB/so this/DT/this zero/NN/zero /,/, can/MD/can some/DT/some quickly/RB/quickly tell/VBP/tell me/PRP/me what/WP/what these/DT/these numbers/NNS/numbers would/MD/would be/VB/be ?/./? 1/CD/1 here/RB/here /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 that/WDT/that is/VBZ/is very/RB/very easy/NNP/easy. we/PRP/we are/VBP/are just/RB/just saying/VBG/saying 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, you/PRP/you are/VBP/are not/RB/not putting/VBG/putting it/PRP/it down/IN/down on/IN/on the/DT/the paper/NN/paper /,/, it/PRP/it is/VBZ/is harder/JJR/harder for/IN/for me/PRP/me ;/:/; 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 here/RB/here /,/, 10/CD/10 also/RB/also here/RB/here /,/, 11/CD/11 here/NNP/here. /NNP/[ hindi/NN/hindi /:/] it/PRP/it ?/./? s/NNS/s clear/JJ/clear ?/./? this/DT/this is/VBZ/is how/WRB/how our/PRP$/our depth/NN/depth first/RB/first search/NN/search happens/NNP/happens. now/RB/now suppose/VBP/suppose let/VBN/let me/PRP/me modify/RB/modify this/DT/this graph/NN/graph a/DT/a bit/NNP/bit. let/NN/let me/PRP/me change/VBP/change the/DT/the direction/NN/direction of/IN/of this/DT/this edge/NNP/edge. let/VBD/let me/PRP/me make/VB/make it/PRP/it this/DT/this way/NNP/way. what/WP/what will/MD/will happen/VB/happen now/RB/now ?/./? /:/[ student/NN/student /:/: vertex/NN/vertex will/MD/will not/RB/not /VB/] this/DT/this vertex/NN/vertex will/MD/will not/RB/not get/VB/get visited/NNP/visited. what/WP/what will/MD/will be/VB/be the/DT/the departure/NN/departure time/NN/time of/IN/of this/DT/this vertex/NN/vertex now/RB/now ?/./? i/PRP/i will/MD/will come/VB/come back/RB/back to/TO/to this/DT/this vertex/NN/vertex /,/, so/RB/so i/PRP/i departed/VBD/departed from/IN/from here/RB/here at/IN/at time/NN/time 8/CD/8 /,/, i/PRP/i came/VBD/came back/RB/back here/NNP/here. come/NN/come to/TO/to here/RB/here and/CC/and now/RB/now there/EX/there is/VBZ/is no/DT/no other/JJ/other edge/NN/edge going/VBG/going out/RP/out so/RB/so i/PRP/i will/MD/will finish/VB/finish at/IN/at time/NN/time 9/CD/9. now/RB/now what/WP/what happens/NNS/happens ?/./? what/WP/what about/IN/about this/DT/this vertex/NN/vertex /,/, when/WRB/when will/MD/will this/DT/this get/VB/get visited/VBN/visited ?/./? /:/[ student/NN/student /:/: this/DT/this will/MD/will be/VB/be only/RB/only be/VB/be visit/VBN/visit start/NN/start from/IN/from /NNP/] now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to ?/./? so/RB/so depth/JJ/depth first/JJ/first search/NN/search when/WRB/when it/PRP/it starts/VBZ/starts from/IN/from a/DT/a vertex/NN/vertex /,/, it/PRP/it might/MD/might not/RB/not visit/VB/visit all/DT/all the/DT/the vertices/NNP/vertices. this/DT/this is/VBZ/is true/JJ/true even/RB/even in/IN/in the/DT/the case/NN/case of/IN/of an/DT/an undirected/VBN/undirected graphs/NNP/graphs. it/PRP/it will/MD/will not/RB/not visit/VB/visit all/DT/all vertices/NNS/vertices if/IN/if the/DT/the graph/NN/graph is/VBZ/is not/RB/not connected/VBN/connected for/IN/for instance/NN/instance as/IN/as was/VBD/was the/DT/the case/NN/case of/IN/of breadth/NN/breadth first/RB/first search/NNP/search. you/PRP/you started/VBD/started the/DT/the breadth/NN/breadth first/RB/first search/NN/search from/IN/from a/DT/a vertex/NN/vertex /,/, it/PRP/it would/MD/would visit/VB/visit only/RB/only the/DT/the vertices/NNS/vertices and/CC/and that/IN/that connected/VBN/connected components/NNP/components. similarly/RB/similarly depth/JJ/depth first/JJ/first search/NN/search in/IN/in an/DT/an undirected/JJ/undirected graph/NN/graph would/MD/would visit/VB/visit only/RB/only the/DT/the vertices/NNS/vertices in/IN/in that/DT/that connected/VBN/connected component/NNP/component. in/IN/in a/DT/a directed/VBN/directed graph/NN/graph /,/, the/DT/the depth/NN/depth first/RB/first search/NN/search would/MD/would visit/VB/visit only/RB/only such/JJ/such vertices/NNS/vertices which/WDT/which can/MD/can be/VB/be reached/VBN/reached from/IN/from this/DT/this vertex/NN/vertex such/JJ/such that/IN/that there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from this/DT/this vertex/NN/vertex to/TO/to that/DT/that vertex/NNP/vertex. /NNP/[ hindi/NN/hindi /:/] there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from this/DT/this vertex/NN/vertex to/TO/to this/DT/this vertex/NNP/vertex. why/WRB/why /,/, because/IN/because this/DT/this vertex/NN/vertex is/VBZ/is no/DT/no edge/NN/edge coming/VBG/coming into/IN/into it/PRP/it now/NNP/now. there/RB/there are/VBP/are only/RB/only two/CD/two edges/NNS/edges going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex and/CC/and no/DT/no other/JJ/other edge/NN/edge coming/VBG/coming in/NNP/in. there/RB/there is/VBZ/is no/DT/no way/NN/way of/IN/of going/VBG/going from/IN/from here/RB/here to/TO/to here/NNP/here. in/IN/in fact/NN/fact there/EX/there is/VBZ/is no/DT/no way/NN/way from/IN/from any/DT/any vertex/NN/vertex to/TO/to this/DT/this vertex/NNP/vertex. this/DT/this vertex/NN/vertex does/VBZ/does not/RB/not get/VB/get visited/VBN/visited when/WRB/when we/PRP/we do/VBP/do our/PRP$/our first/JJ/first depth/NN/depth first/RB/first search/NN/search but/CC/but just/RB/just as/IN/as in/IN/in the/DT/the case/NN/case of/IN/of breadth/NN/breadth first/RB/first search/NN/search what/WP/what we/PRP/we did/VBD/did was/VBD/was /,/, if/IN/if some/DT/some vertices/NNS/vertices were/VBD/were not/RB/not visited/VBN/visited we/PRP/we took/VBD/took a/DT/a vertex/NN/vertex which/WDT/which is/VBZ/is not/RB/not visited/VBN/visited and/CC/and started/VBN/started out/RP/out breadth/NN/breadth first/RB/first search/NN/search from/IN/from that/DT/that vertex/NNP/vertex. similarly/RB/similarly we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do that/DT/that here/NNP/here. if/IN/if some/DT/some vertex/NN/vertex is/VBZ/is not/RB/not visited/VBN/visited after/IN/after we/PRP/we finish/VBP/finish our/PRP$/our depth/NN/depth first/RB/first search/NN/search from/IN/from this/DT/this vertex/NN/vertex then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to pick/VB/pick that/IN/that vertex/NN/vertex which/WDT/which is/VBZ/is not/RB/not visited/VBN/visited and/CC/and continue/VB/continue our/PRP$/our depth/NN/depth first/RB/first search/NN/search from/IN/from there/EX/there so/RB/so which/WDT/which means/VBZ/means that/DT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to now/RB/now pick/VB/pick this/DT/this vertex/NN/vertex /,/, give/JJ/give it/PRP/it an/DT/an arrival/NN/arrival time/NN/time of/IN/of 10/CD/10 now/RB/now /,/, look/VBP/look at/IN/at the/DT/the edges/NNS/edges which/WDT/which are/VBP/are going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NNP/vertex. they/PRP/they are/VBP/are all/RB/all going/VBG/going to/TO/to vertices/NNS/vertices which/WDT/which are/VBP/are already/RB/already visited/NNP/visited. so/RB/so there/RB/there is/VBZ/is nothing/NN/nothing to/TO/to be/VB/be done/VBN/done so/RB/so which/WDT/which means/VBZ/means that/DT/that i/PRP/i also/RB/also finish/JJ/finish this/DT/this depth/NN/depth first/RB/first search/NNP/search. in/IN/in this/DT/this manner/NN/manner every/DT/every vertex/NN/vertex is/VBZ/is going/VBG/going to/TO/to get/VB/get both/DT/both an/DT/an arrival/NN/arrival and/CC/and a/DT/a departure/NN/departure time/NNP/time. i/PRP/i will/MD/will keep/VB/keep this/DT/this picture/NN/picture and/CC/and i/PRP/i will/MD/will again/RB/again redraw/VB/redraw the/DT/the tree/NN/tree /,/, the/DT/the depth/NN/depth first/RB/first search/NN/search tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 31/CD/31 /CD/) we/PRP/we did/VBD/did a/DT/a similar/JJ/similar thing/NN/thing in/IN/in the/DT/the last/JJ/last time/NNP/time. /NNP/[ student/NN/student /:/: sir/NN/sir we/PRP/we are/VBP/are all/RB/all vertices/NNS/vertices /VBP/] we/PRP/we have/VBP/have to/TO/to visit/VB/visit all/DT/all the/DT/the vertices/NNS/vertices /,/, so/RB/so both/DT/both depth/NN/depth first/RB/first breadth/JJ/breadth and/CC/and depth/NN/depth first/RB/first search/NN/search require/NN/require that/IN/that you/PRP/you go/VBP/go visit/NN/visit every/DT/every vertex/NNP/vertex. so/RB/so while/IN/while i/PRP/i did/VBD/did not/RB/not elaborate/JJ/elaborate on/IN/on this/DT/this when/WRB/when we/PRP/we were/VBD/were discussing/VBG/discussing depth/NN/depth first/RB/first search/NN/search in/IN/in undirected/JJ/undirected graphs/NNS/graphs but/CC/but there/EX/there i/PRP/i was/VBD/was assuming/VBG/assuming that/IN/that the/DT/the graph/NN/graph was/VBD/was connected/NNP/connected. if/IN/if the/DT/the graph/NN/graph is/VBZ/is not/RB/not connected/VBN/connected /,/, you/PRP/you did/VBD/did a/DT/a depth/NN/depth first/RB/first search/NN/search from/IN/from a/DT/a vertex/NN/vertex /,/, you/PRP/you visited/VBD/visited a/DT/a bunch/NN/bunch of/IN/of vertices/NNP/vertices. if/IN/if you/PRP/you have/VBP/have not/RB/not visited/VBN/visited all/DT/all vertices/NNS/vertices then/RB/then you/PRP/you will/MD/will take/VB/take another/DT/another vertex/NN/vertex which/WDT/which is/VBZ/is not/RB/not visited/VBN/visited and/CC/and start/VB/start a/DT/a depth/NN/depth first/RB/first search/NN/search from/IN/from here/NNP/here. /NNP/[ student/NN/student /:/: sir/NN/sir to/TO/to see/VB/see that/IN/that whether/IN/whether this/DT/this vertex/NN/vertex is/VBZ/is not/RB/not been/VBN/been visited/VBN/visited /,/, we/PRP/we also/RB/also have/VBP/have to/TO/to go/VB/go to/TO/to once/RB/once again/RB/again to/TO/to all/DT/all the/DT/the vertices/NNS/vertices /:/] /./. we/PRP/we had/VBD/had looked/VBN/looked at/IN/at a/DT/a procedure/NN/procedure for/IN/for doing/VBG/doing this/DT/this in/IN/in the/DT/the clever/NN/clever manner/NN/manner /,/, when/WRB/when we/PRP/we were/VBD/were looking/VBG/looking at/IN/at connected/JJ/connected components/NNP/components. all/DT/all we/PRP/we have/VBP/have to/TO/to do/VB/do is/VBZ/is traverse/VB/traverse the/DT/the visited/VBN/visited array/NN/array to/TO/to find/VB/find the/DT/the first/JJ/first vertex/NN/vertex which/WDT/which is/VBZ/is still/RB/still at/IN/at a/DT/a zero/NN/zero and/CC/and we/PRP/we will/MD/will never/RB/never have/VB/have to/TO/to retrace/VB/retrace /,/, we/PRP/we will/MD/will just/RB/just have/VB/have to/TO/to make/VB/make one/CD/one scan/JJ/scan of/IN/of that/DT/that array/NNP/array. we/PRP/we can/MD/can adopt/VB/adopt the/DT/the same/JJ/same procedure/NN/procedure here/NNP/here. let/NN/let me/PRP/me now/RB/now draw/NNP/draw. these/DT/these are/VBP/are the/DT/the tree/NN/tree edges/NNS/edges that/WDT/that you/PRP/you have/VBP/have drawn/NNP/drawn. now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to draw/VB/draw the/DT/the back/NN/back edges/NNP/edges. now/RB/now we/PRP/we will/MD/will understand/VB/understand what/WP/what kinds/NNS/kinds of/IN/of edges/NNS/edges can/MD/can there/VB/there be/VB/be /,/, just/RB/just one/CD/one second/NNP/second. i/PRP/i have/VBP/have drawn/VBN/drawn all/DT/all the/DT/the edges/NNS/edges as/IN/as you/PRP/you can/MD/can see/VB/see /,/, so/RB/so the/DT/the tree/NN/tree edges/NNS/edges are/VBP/are in/IN/in blue/NNP/blue. /NNP/[ student/NN/student /:/: we/PRP/we ca/MD/ca n't/RB/n't /VB/] you/PRP/you ca/MD/ca n't/RB/n't see/VB/see the/DT/the colors/NNP/colors. wow/NN/wow /,/, i/PRP/i did/VBD/did n't/RB/n't realize/VB/realize that/NNP/that. that/IN/that ?/./? s/NNS/s tragic/JJ/tragic /,/, let/VB/let me/PRP/me try/NN/try to/TO/to make/VB/make them/PRP/them darker/NNP/darker. can/MD/can you/PRP/you see/VB/see the/DT/the color/NN/color now/RB/now ?/./? /:/[ student/NN/student /:/: yes/NNS/yes /VBP/] it/PRP/it looks/VBZ/looks a/DT/a deeper/NN/deeper black/NN/black /:/[ student/NN/student /:/: it/PRP/it is/VBZ/is easy/JJ/easy bold/NN/bold and/CC/and fine/NN/fine /:/] fine/NN/fine /:/[ student/NN/student /:/: find/NN/find in/IN/in dash/NN/dash dash/NN/dash dotted/VBD/dotted /CD/] so/RB/so good/JJ/good that/IN/that you/PRP/you pointed/VBD/pointed out/NNP/out. is/VBZ/is that/IN/that today/NN/today that/WDT/that you/PRP/you ca/MD/ca n't/RB/n't ?/./? /:/[ student/NN/student /:/: no/DT/no noise/NN/noise every/DT/every day/NN/day you/PRP/you pen/VBP/pen moves/NNS/moves on/IN/on that/DT/that we/PRP/we assume/VBP/assume that/IN/that it/PRP/it is/VBZ/is the/DT/the same/JJ/same color/NN/color /:/] is/VBZ/is it/PRP/it better/JJR/better ?/./? /:/[ student/NN/student /:/: slightly/RB/slightly /:/] slightly/RB/slightly /:/[ student/NN/student /:/: but/CC/but because/IN/because if/IN/if you/PRP/you use/VBP/use a/DT/a pen/NN/pen now/RB/now we/PRP/we realizing/VBG/realizing its/PRP$/its blue/JJ/blue /NN/] so/IN/so this/DT/this blue/JJ/blue edge/NN/edge /,/, no/DT/no it/PRP/it ?/./? s/NNS/s not/RB/not blue/NNP/blue. does/VBZ/does it/PRP/it look/VB/look blue/JJ/blue now/RB/now ?/./? /:/[ student/NN/student /:/: its/PRP$/its red/VBN/red light/JJ/light red/VBN/red /-NONE-/] its/PRP$/its red/VBN/red /-NONE-/[ student/NN/student /:/: sir/NN/sir sketch/NN/sketch pen/NNP/pen. sir/NN/sir we/PRP/we have/VBP/have to/TO/to make/VB/make that/IN/that out/IN/out by/IN/by using/NN/using the/DT/the sketch/NN/sketch that/IN/that you/PRP/you are/VBP/are using/VBG/using /:/] /:/[ hindi/NN/hindi /:/] /./. hopefully/RB/hopefully the/DT/the others/NNS/others were/VBD/were watching/VBG/watching this/DT/this program/NN/program /,/, we/PRP/we will/MD/will be/VB/be as/RB/as smart/VB/smart as/IN/as you/PRP/you are/VBP/are ;/:/; /:/( 1/CD/1 /,/, 8/CD/8 /:/) /,/, /:/( 2/CD/2 /,/, 3/CD/3 /:/) /,/, /:/( 4/CD/4 /,/, 7/CD/7 /:/) /,/, /:/( 5/CD/5 /,/, 6/CD/6 /:/) and/CC/and /:/( 10/CD/10 /,/, 11/CD/11 /:/) /./. now/RB/now we/PRP/we do/VBP/do n't/RB/n't have/VB/have the/DT/the nice/JJ/nice picture/NN/picture we/PRP/we had/VBD/had in/IN/in the/DT/the case/NN/case of/IN/of undirected/VBN/undirected graphs/NNS/graphs that/IN/that all/DT/all edges/NNS/edges are/VBP/are in/IN/in two/CD/two categories/NNS/categories either/CC/either tree/VB/tree edges/NNS/edges or/CC/or a/DT/a back/NN/back edges/NNP/edges. as/IN/as you/PRP/you can/MD/can see/VB/see there/RB/there are/VBP/are three/CD/three different/JJ/different color/NN/color already/RB/already and/CC/and i/PRP/i have/VBP/have not/RB/not yet/RB/yet used/VBN/used a/DT/a forth/JJ/forth color/NNP/color. there/RB/there is/VBZ/is also/RB/also a/DT/a possibility/NN/possibility of/IN/of a/DT/a forth/JJ/forth color/NN/color and/CC/and let/VB/let me/PRP/me show/VB/show /,/, you/PRP/you could/MD/could also/RB/also have/VB/have an/DT/an edge/NN/edge which/WDT/which goes/VBZ/goes from/IN/from here/RB/here to/TO/to here/NNP/here. this/DT/this is/VBZ/is green/VBN/green clearly/-NONE-/clearly. this/DT/this edge/NN/edge could/MD/could have/VB/have been/VBN/been there/EX/there /,/, why/WRB/why ?/./? suppose/NN/suppose this/DT/this edge/NN/edge was/VBD/was there/RB/there /,/, i/PRP/i am/VBP/am continuing/VBG/continuing to/TO/to follow/VB/follow this/DT/this path/NNP/path. when/WRB/when i/PRP/i come/VBP/come back/RB/back here/RB/here to/TO/to this/DT/this vertex/NN/vertex /,/, i/PRP/i look/VBP/look at/IN/at the/DT/the other/JJ/other edges/NNS/edges going/VBG/going out/RP/out /,/, this/DT/this is/VBZ/is another/DT/another edge/NN/edge going/VBG/going out/RP/out but/CC/but its/PRP$/its other/JJ/other end/NN/end point/NN/point is/VBZ/is visited/NNP/visited. now/RB/now we/PRP/we have/VBP/have to/TO/to classify/VB/classify these/DT/these edges/NNS/edges /,/, we/PRP/we have/VBP/have to/TO/to give/VB/give them/PRP/them names/NNP/names. our/PRP$/our green/JJ/green edge/NN/edge /,/, this/DT/this edge/NN/edge is/VBZ/is a/DT/a forward/NN/forward edge/NNP/edge. why/WRB/why forward/RB/forward ?/./? because/IN/because it/PRP/it is/VBZ/is going/VBG/going forward/RB/forward in/IN/in the/DT/the tree/NN/tree /,/, down/NNP/down. we/PRP/we will/MD/will call/VB/call that/IN/that forward/NNP/forward. the/DT/the brown/NN/brown edge/NN/edge is/VBZ/is a/DT/a back/RB/back edge/NN/edge /,/, it/PRP/it is/VBZ/is going/VBG/going back/RB/back up/IN/up in/IN/in the/DT/the tree/NNP/tree. we/PRP/we do/VBP/do n't/RB/n't use/VB/use the/DT/the term/NN/term backward/NN/backward edge/NN/edge /,/, we/PRP/we just/RB/just use/VBP/use back/RB/back edge/NNP/edge. it/PRP/it is/VBZ/is nothing/VBG/nothing backward/NN/backward about/IN/about the/DT/the edge/NNP/edge. the/DT/the red/NN/red edge/NN/edge is/VBZ/is called/VBN/called a/DT/a cross/NN/cross edge/NNP/edge. /NNP/[ student/NN/student /:/: which/WDT/which has/VBZ/has which/WDT/which one/CD/one which/WDT/which one/CD/one /CD/] /./. this/DT/this is/VBZ/is a/DT/a red/VBN/red edge/NN/edge and/CC/and this/DT/this is/VBZ/is also/RB/also a/DT/a red/VBN/red edge/NN/edge and/CC/and this/DT/this is/VBZ/is also/RB/also a/DT/a red/VBN/red edge/NN/edge /,/, these/DT/these three/CD/three are/VBP/are red/VBN/red edges/NNP/edges. the/DT/the brown/NN/brown also/RB/also looks/VBZ/looks like/IN/like black/NNP/black. is/VBZ/is it/PRP/it ?/./? the/DT/the brown/NN/brown edge/NN/edge is/VBZ/is that/IN/that edge/NN/edge /,/, it/PRP/it is/VBZ/is a/DT/a back/RB/back edge/NNP/edge. so/RB/so it/PRP/it should/MD/should be/VB/be clear/NNP/clear. tree/NN/tree edge/NN/edge is/VBZ/is completely/RB/completely clear/JJ/clear /,/, an/DT/an edge/NN/edge along/IN/along which/WDT/which we/PRP/we traverse/VBP/traverse is/VBZ/is called/VBN/called a/DT/a tree/NN/tree edge/NNP/edge. now/RB/now something/VBG/something that/IN/that is/VBZ/is going/VBG/going forward/RB/forward in/IN/in the/DT/the tree/NN/tree is/VBZ/is called/VBN/called the/DT/the forward/NN/forward edge/NN/edge /,/, something/NN/something that/IN/that is/VBZ/is going/VBG/going back/RB/back in/IN/in the/DT/the tree/NN/tree is/VBZ/is called/VBN/called a/DT/a back/RB/back edge/NNP/edge. something/NN/something that/WDT/that is/VBZ/is not/RB/not going/VBG/going either/RB/either forward/RB/forward or/CC/or back/RB/back is/VBZ/is called/VBN/called a/DT/a cross/NN/cross edge/NNP/edge. what/WP/what is/VBZ/is a/DT/a property/NN/property of/IN/of a/DT/a cross/NN/cross edge/NN/edge ?/./? /:/[ student/NN/student /:/: not/RB/not going/VBG/going to/TO/to ancestor/NN/ancestor /:/] not/RB/not going/VBG/going to/TO/to ancestors/NNS/ancestors or/CC/or to/TO/to a/DT/a descendant/NNP/descendant. /NNP/[ student/NN/student /:/: descendant/JJ/descendant /NN/] /./. the/DT/the two/CD/two end/NN/end points/NNS/points of/IN/of the/DT/the edge/NN/edge do/VBP/do n't/RB/n't have/VB/have an/DT/an ancestor/NN/ancestor descendant/NN/descendant relationship/NN/relationship /,/, not/RB/not parent/NN/parent child/NN/child /,/, ancestor/NN/ancestor descendant/NN/descendant relationship/NNP/relationship. the/DT/the two/CD/two end/NN/end points/NNS/points of/IN/of this/DT/this edge/NN/edge or/CC/or none/NN/none of/IN/of them/PRP/them is/VBZ/is a/DT/a ancestor/NN/ancestor of/IN/of the/DT/the other/NNP/other. similarly/RB/similarly for/IN/for this/DT/this edge/NN/edge /,/, none/NN/none of/IN/of them/PRP/them is/VBZ/is an/DT/an ancestor/NN/ancestor of/IN/of the/DT/the other/NNP/other. this/DT/this is/VBZ/is one/CD/one tree/NN/tree /,/, this/DT/this is/VBZ/is another/DT/another tree/NN/tree so/IN/so to/TO/to say/VB/say /,/, just/RB/just a/DT/a single/JJ/single ten/NN/ten vertex/NNP/vertex. this/DT/this is/VBZ/is not/RB/not an/DT/an ancestor/NN/ancestor of/IN/of any/DT/any of/IN/of these/DT/these vertices/NNP/vertices. these/DT/these three/CD/three are/VBP/are cross/NNS/cross edges/NNP/edges. could/MD/could i/VB/i have/VBP/have a/DT/a cross/NN/cross edge/NN/edge which/WDT/which goes/VBZ/goes in/IN/in this/DT/this direction/NN/direction ?/./? it/PRP/it would/MD/would have/VB/have become/VBN/become a/DT/a tree/NN/tree edge/NNP/edge. so/RB/so cross/VBZ/cross edge/NN/edge would/MD/would go/VB/go in/IN/in one/CD/one direction/NN/direction only/NNP/only. what/WP/what is/VBZ/is that/IN/that direction/NN/direction ?/./? we/PRP/we will/MD/will translate/VB/translate all/DT/all of/IN/of these/DT/these into/IN/into numbers/NNS/numbers very/RB/very soon/RB/soon but/CC/but essentially/RB/essentially if/IN/if you/PRP/you draw/VBP/draw picture/NN/picture in/IN/in which/WDT/which you/PRP/you are/VBP/are first/RB/first visiting/VBG/visiting the/DT/the left/NN/left side/NN/side of/IN/of your/PRP$/your tree/NN/tree and/CC/and then/RB/then going/VBG/going right/NNP/right. then/RB/then they/PRP/they are/VBP/are going/VBG/going from/IN/from right/RB/right to/TO/to left/NNP/left. the/DT/the cross/NN/cross edge/NN/edge only/RB/only go/VBP/go from/IN/from right/RB/right to/TO/to left/VB/left so/RB/so to/TO/to say/VB/say not/RB/not higher/JJR/higher to/TO/to lower/JJR/lower but/CC/but more/RBR/more like/IN/like right/NN/right to/TO/to left/NNP/left. this/DT/this cross/NN/cross edge/NN/edge is/VBZ/is also/RB/also going/VBG/going from/IN/from right/RB/right to/TO/to left/VB/left /,/, this/DT/this is/VBZ/is also/RB/also going/VBG/going from/IN/from right/RB/right to/TO/to left/NNP/left. we/PRP/we know/VBP/know this/DT/this is/VBZ/is bit/NN/bit subjective/JJ/subjective but/CC/but i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what the/DT/the actual/JJ/actual thing/NN/thing is/NNP/is. what/WP/what ?/./? s/NNS/s the/DT/the property/NN/property of/IN/of a/DT/a forward/NN/forward edge/NN/edge /,/, who/WP/who can/MD/can tell/VB/tell me/PRP/me ?/./? so/RB/so what/WP/what is/VBZ/is it/PRP/it that/IN/that makes/VBZ/makes an/DT/an edge/NN/edge of/IN/of forward/NN/forward edge/NN/edge ?/./? so/RB/so a/DT/a forward/NN/forward edge/NN/edge how/WRB/how can/MD/can i/VB/i relate/JJ/relate its/PRP$/its arrival/NN/arrival and/CC/and departure/NN/departure times/NNP/times. if/IN/if i/PRP/i have/VBP/have an/DT/an edge/NN/edge u/NN/u v/NN/v which/WDT/which is/VBZ/is a/DT/a forward/NN/forward edge/NN/edge /,/, what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about the/DT/the arrival/NN/arrival of/IN/of u/NN/u verses/NNS/verses the/DT/the arrival/NN/arrival of/IN/of v/NNP/v. /NNP/[ student/NN/student /:/: arrival/NN/arrival of/IN/of u/NN/u arrival/NN/arrival of/IN/of v/NN/v /:/] pardon/NN/pardon /,/, arrival/NN/arrival of/IN/of u/NNP/u. /NNP/[ student/NN/student /:/: is/VBZ/is less/JJR/less than/IN/than other/JJ/other /NN/] it/PRP/it ?/./? s/NNS/s an/DT/an forward/NN/forward edge/NN/edge such/JJ/such an/DT/an edge/NNP/edge. this/DT/this is/VBZ/is u/PRP/u /,/, this/DT/this is/VBZ/is v/NNP/v. i/PRP/i would/MD/would have/VB/have first/JJ/first reached/VBN/reached u/NN/u and/CC/and then/RB/then i/PRP/i would/MD/would have/VB/have reached/VBN/reached v/NNP/v. what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about the/DT/the departure/NN/departure of/IN/of u/NN/u verses/NNS/verses the/DT/the departure/NN/departure of/IN/of v/NN/v ?/./? /:/[ student/NN/student /:/: departure/NN/departure of/IN/of v/NN/v /:/] clearly/RB/clearly i/PRP/i will/MD/will leave/VB/leave this/DT/this before/IN/before i/PRP/i leave/VBP/leave that/NNP/that. so/RB/so departure/NN/departure of/IN/of v/NN/v is/VBZ/is less/JJR/less than/IN/than the/DT/the departure/NN/departure of/IN/of u/NNP/u. that/IN/that 's/POS/'s for/IN/for a/DT/a forward/NN/forward edge/NNP/edge. i/PRP/i can/MD/can play/VB/play the/DT/the same/JJ/same game/NNP/game. let/NN/let me/PRP/me now/RB/now say/VBP/say it/PRP/it for/IN/for a/DT/a back/NN/back edge/NNP/edge. once/RB/once again/RB/again i/PRP/i have/VBP/have a/DT/a u/NN/u v/NN/v back/RB/back edge/NNP/edge. so/RB/so arrival/JJ/arrival of/IN/of u/NN/u verses/NNS/verses of/IN/of arrival/NN/arrival of/IN/of v/NN/v which/WDT/which is/VBZ/is smaller/JJR/smaller ?/./? this/DT/this is/VBZ/is a/DT/a back/RB/back edge/NN/edge /,/, this/DT/this is/VBZ/is u/PRP/u /,/, this/DT/this is/VBZ/is v/NNP/v. v/NN/v will/MD/will be/VB/be smaller/JJR/smaller because/IN/because when/WRB/when i/PRP/i am/VBP/am saying/VBG/saying the/DT/the edge/NN/edge is/VBZ/is u/NN/u v/NN/v /,/, in/IN/in a/DT/a directed/VBN/directed edge/NN/edge i/PRP/i always/RB/always specify/VB/specify the/DT/the tail/NN/tail first/NNP/first. this/DT/this is/VBZ/is u/PRP/u /,/, that/IN/that 's/POS/'s v/CC/v. this/DT/this is/VBZ/is v/NN/v then/RB/then i/PRP/i reached/VBD/reached this/DT/this before/IN/before i/PRP/i reached/VBD/reached this/NNP/this. the/DT/the arrival/NN/arrival of/IN/of v/NN/v is/VBZ/is less/JJR/less than/IN/than arrival/NN/arrival of/IN/of u/NNP/u. what/WP/what about/IN/about departure/NN/departure ?/./? departure/NN/departure of/IN/of u/NN/u verses/NNS/verses departure/NN/departure of/IN/of v/NNP/v. departure/NN/departure of/IN/of u/NN/u is/VBZ/is a/DT/a u/NN/u v/NN/v edge/NN/edge /,/, i/PRP/i will/MD/will leave/VB/leave u/NN/u before/IN/before i/PRP/i leave/VBP/leave v/CC/v. now/RB/now let/VBP/let ?/./? s/NNS/s come/VBP/come finally/RB/finally to/TO/to our/PRP$/our cross/NN/cross edges/NNS/edges and/CC/and since/IN/since this/DT/this is/VBZ/is more/RBR/more important/JJ/important and/CC/and you/PRP/you have/VBP/have not/RB/not seen/VBN/seen this/DT/this before/NNP/before. once/RB/once again/RB/again u/VB/u v/NN/v is/VBZ/is a/DT/a cross/NN/cross edge/NNP/edge. if/IN/if this/DT/this is/VBZ/is a/DT/a cross/NN/cross edge/NN/edge /,/, this/DT/this is/VBZ/is u/PRP/u /,/, this/DT/this is/VBZ/is v/NNP/v. what/WP/what about/IN/about arrival/JJ/arrival of/IN/of u/NN/u verses/NNS/verses departure/NN/departure of/IN/of u/NN/u ?/./? /:/[ student/NN/student /:/: arrival/NN/arrival of/IN/of u/NN/u /:/] arrival/NN/arrival of/IN/of u/NN/u verses/NNS/verses arrival/NN/arrival of/IN/of v/NN/v /,/, this/DT/this is/VBZ/is u/PRP/u /,/, this/DT/this is/VBZ/is v/NNP/v. /:/[ student/NN/student /:/: every/DT/every /NN/] arrival/NN/arrival of/IN/of u/NN/u is/VBZ/is greater/NNP/greater. this/DT/this is/VBZ/is u/PRP/u /,/, this/DT/this is/VBZ/is v/NNP/v. i/PRP/i will/MD/will reach/VB/reach here/RB/here /,/, after/IN/after i/PRP/i have/VBP/have reached/VBN/reached here/NNP/here. arrival/NN/arrival of/IN/of u/NN/u is/VBZ/is greater/JJR/greater than/IN/than the/DT/the arrival/NN/arrival of/IN/of v/NNP/v. i/PRP/i will/MD/will first/RB/first arrive/VB/arrive at/IN/at u/NN/u actually/RB/actually then/RB/then i/PRP/i will/MD/will depart/VB/depart form/NN/form u/NNP/u. yes/VBZ/yes /,/, so/RB/so i/PRP/i should/MD/should actually/RB/actually write/VB/write it/PRP/it in/IN/in a/DT/a more/RBR/more sophisticated/JJ/sophisticated way/NN/way as/IN/as departure/NN/departure of/IN/of u/NNP/u. sorry/NN/sorry arrival/NN/arrival of/IN/of u/NN/u is/VBZ/is not/RB/not greater/JJR/greater /,/, i/PRP/i would/MD/would first/RB/first less/NNP/less. i/PRP/i first/RB/first arrive/JJ/arrive at/IN/at u/NN/u then/RB/then i/PRP/i depart/VBP/depart from/IN/from u/NN/u then/RB/then i/PRP/i arrive/VBP/arrive oops/NNP/oops. what/WP/what am/NN/am i/PRP/i saying/VBG/saying /,/, sorry/NNP/sorry. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 25/CD/25 /CD/) i/PRP/i have/VBP/have managed/VBN/managed to/TO/to create/VB/create a/DT/a mess/NN/mess there/NNP/there. let/NN/let me/PRP/me do/VBP/do it/PRP/it again/NNP/again. so/RB/so we/PRP/we are/VBP/are considering/VBG/considering a/DT/a cross/NN/cross edge/NN/edge /,/, can/MD/can you/PRP/you all/DT/all see/VB/see this/DT/this picture/NN/picture ?/./? let/NN/let me/PRP/me consider/VBP/consider a/DT/a cross/NN/cross edge/NN/edge again/NNP/again. i/PRP/i am/VBP/am looking/VBG/looking at/IN/at an/DT/an edge/NN/edge u/NN/u v/NN/v /,/, so/RB/so in/IN/in my/PRP$/my picture/NN/picture this/DT/this is/VBZ/is u/PRP/u /,/, this/DT/this is/VBZ/is v/NNP/v. now/RB/now it/PRP/it should/MD/should be/VB/be clear/NNP/clear. so/RB/so which/WDT/which vertex/NN/vertex will/MD/will i/VB/i reach/DT/reach first/JJ/first ?/./? /NN/[ student/NN/student /:/: v/NN/v /:/] v/NN/v /,/, so/RB/so first/RB/first i/PRP/i reach/VBP/reach v/NN/v then/RB/then i/PRP/i leave/VBP/leave v/CC/v. that/IN/that 's/VBZ/'s important/JJ/important then/RB/then i/PRP/i reach/VBP/reach u/PRP/u /,/, then/RB/then i/PRP/i depart/VBP/depart from/IN/from u/NNP/u. yes/NNP/yes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 49/CD/49 /CD/) the/DT/the arrival/NN/arrival and/CC/and departures/NNS/departures are/VBP/are arranged/VBN/arranged in/IN/in this/DT/this way/NN/way for/IN/for a/DT/a cross/NN/cross edge/NNP/edge. great/NNP/great. so/RB/so in/IN/in a/DT/a depth/NN/depth first/RB/first search/NN/search the/DT/the edges/NNS/edges get/VBP/get classified/VBN/classified into/IN/into four/CD/four categories/NNS/categories and/CC/and based/VBN/based on/IN/on the/DT/the arrival/NN/arrival and/CC/and departures/NNS/departures /,/, you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what those/DT/those categories/NNS/categories are/VBP/are or/CC/or based/VBN/based on/IN/on the/DT/the fact/NN/fact that/IN/that whether/IN/whether they/PRP/they are/VBP/are a/DT/a tree/NN/tree edge/NN/edge or/CC/or not/NNP/not. so/RB/so first/JJ/first you/PRP/you will/MD/will create/VB/create the/DT/the tree/NN/tree edges/NNS/edges /,/, first/JJ/first you/PRP/you will/MD/will identify/VB/identify what/WP/what the/DT/the tree/NN/tree edges/NNS/edges are/NNP/are. using/VBG/using the/DT/the tree/NN/tree edges/NNS/edges you/PRP/you can/MD/can identify/VB/identify the/DT/the parent/NN/parent child/NN/child relationships/NNS/relationships also/RB/also /,/, ancestors/NNS/ancestors descendant/VBP/descendant relationships/NNS/relationships and/CC/and using/VBG/using that/IN/that you/PRP/you can/MD/can figure/VB/figure out/RP/out whether/IN/whether it/PRP/it is/VBZ/is a/DT/a forward/NN/forward edge/NN/edge or/CC/or a/DT/a back/NN/back edge/NN/edge or/CC/or a/DT/a cross/NN/cross edge/NNP/edge. if/IN/if the/DT/the two/CD/two end/NN/end points/NNS/points have/VBP/have an/DT/an ancestor/NN/ancestor descendant/NN/descendant relationship/NN/relationship then/RB/then it/PRP/it ?/./? s/NNS/s either/CC/either a/DT/a forward/NN/forward edge/NN/edge or/CC/or a/DT/a cross/NN/cross edge/NN/edge or/CC/or a/DT/a tree/NN/tree edge/NNP/edge. if/IN/if they/PRP/they don/VBP/don ?/./? t/NN/t have/VBP/have then/RB/then it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a cross/NN/cross edge/NNP/edge. sorry/NN/sorry in/IN/in the/DT/the first/JJ/first case/NN/case it/PRP/it ?/./? s/NNS/s either/CC/either a/DT/a forward/NN/forward or/CC/or a/DT/a back/NN/back or/CC/or a/DT/a tree/NN/tree and/CC/and in/IN/in the/DT/the second/JJ/second case/NN/case it/PRP/it is/VBZ/is a/DT/a cross/NN/cross edge/NNP/edge. when/WRB/when you/PRP/you have/VBP/have to/TO/to distinguish/VB/distinguish whether/IN/whether it/PRP/it is/VBZ/is a/DT/a forward/NN/forward or/CC/or a/DT/a tree/NN/tree or/CC/or a/DT/a cross/NN/cross /,/, then/RB/then again/RB/again you/PRP/you know/VBP/know it/PRP/it ?/./? s/NNS/s based/VBN/based on/IN/on whether/IN/whether the/DT/the tail/NN/tail is/VBZ/is an/DT/an ancestor/NN/ancestor of/IN/of the/DT/the head/NN/head or/CC/or whether/IN/whether the/DT/the tail/NN/tail is/VBZ/is an/DT/an descendant/JJ/descendant of/IN/of the/DT/the head/NNP/head. you/PRP/you can/MD/can use/VB/use that/IN/that to/TO/to figure/VB/figure out/RP/out these/DT/these things/NNP/things. so/RB/so as/IN/as an/DT/an application/NN/application we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at how/WRB/how to/TO/to check/VB/check if/IN/if a/DT/a given/VBN/given graph/NN/graph has/VBZ/has a/DT/a cycle/NN/cycle or/CC/or not/NNP/not. so/RB/so that/IN/that 's/POS/'s the/DT/the application/NN/application we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/NNP/at. i/PRP/i am/VBP/am giving/VBG/giving you/PRP/you a/DT/a graph/NN/graph g/NN/g /,/, so/RB/so given/VBN/given a/DT/a directed/VBN/directed graph/NN/graph g/NN/g check/NN/check if/IN/if g/NN/g has/VBZ/has a/DT/a cycle/NNP/cycle. what/WP/what is/VBZ/is a/DT/a cycle/NN/cycle in/IN/in a/DT/a directed/VBN/directed graph/NN/graph ?/./? it/PRP/it ?/./? s/NNS/s basically/RB/basically a/DT/a path/NN/path which/WDT/which closes/NNS/closes on/IN/on itself/PRP/itself /,/, the/DT/the starting/NN/starting and/CC/and the/DT/the ending/VBG/ending of/IN/of the/DT/the path/NN/path are/VBP/are the/DT/the same/NNP/same. how/WRB/how will/MD/will you/PRP/you check/VB/check if/IN/if a/DT/a given/VBN/given directed/VBN/directed graph/NN/graph has/VBZ/has a/DT/a cycle/NN/cycle ?/./? how/WRB/how will/MD/will you/PRP/you check/VB/check if/IN/if a/DT/a given/VBN/given undirected/VBN/undirected graph/NN/graph has/VBZ/has a/DT/a cycle/NN/cycle ?/./? /:/[ student/NN/student /:/: starting/VBG/starting node/NN/node if/IN/if we/PRP/we have/VBP/have any/DT/any back/NN/back edge/NN/edge if/IN/if we/PRP/we access/VBP/access the/DT/the starting/VBG/starting node/NN/node /:/] /:/[ hindi/NN/hindi /:/] so/RB/so then/RB/then there/EX/there is/VBZ/is a/DT/a cycle/NNP/cycle. if/IN/if there/EX/there is/VBZ/is a/DT/a back/RB/back edge/NN/edge there/EX/there is/VBZ/is a/DT/a cycle/NNP/cycle. if/IN/if there/EX/there is/VBZ/is no/DT/no back/NN/back edge/NN/edge /,/, is/VBZ/is there/EX/there no/DT/no cycle/NN/cycle in/IN/in the/DT/the graph/NN/graph ?/./? /:/[ student/NN/student /:/: yes/NNS/yes /VBP/] because/IN/because then/RB/then the/DT/the remaining/VBG/remaining edges/NNS/edges are/VBP/are just/RB/just tree/JJ/tree edges/NNS/edges /,/, they/PRP/they form/VBP/form a/DT/a tree/NNP/tree. a/DT/a tree/NN/tree does/VBZ/does not/RB/not have/VB/have a/DT/a cycle/NN/cycle in/IN/in it/PRP/it and/CC/and a/DT/a back/NN/back edge/NN/edge /,/, why/WRB/why does/VBZ/does it/PRP/it form/NN/form a/DT/a cycle/NN/cycle ?/./? because/IN/because the/DT/the two/CD/two end/NN/end points/NNS/points of/IN/of the/DT/the back/NN/back edge/NN/edge are/VBP/are connected/VBN/connected in/IN/in the/DT/the tree/NNP/tree. there/RB/there is/VBZ/is a/DT/a path/NN/path between/IN/between those/DT/those two/CD/two end/NN/end points/NNP/points. so/RB/so for/IN/for an/DT/an undirected/JJ/undirected graphs/NNS/graphs /,/, it/PRP/it is/VBZ/is very/RB/very simple/NNP/simple. for/IN/for a/DT/a directed/JJ/directed graph/NN/graph it/PRP/it is/VBZ/is not/RB/not so/RB/so simple/NNP/simple. when/WRB/when does/VBZ/does a/DT/a directed/VBN/directed graph/NN/graph have/VBP/have a/DT/a cycle/NN/cycle ?/./? once/RB/once again/RB/again you/PRP/you want/VBP/want to/TO/to do/VB/do a/DT/a depth/NN/depth first/RB/first search/NNP/search. in/IN/in a/DT/a depth/NN/depth first/RB/first search/NN/search in/IN/in what/WP/what ?/./? s/NNS/s /:/[ student/NN/student /:/: the/DT/the back/NN/back edges/NNS/edges are/VBP/are definitely/RB/definitely /:/] if/IN/if there/EX/there is/VBZ/is a/DT/a back/RB/back edge/NN/edge then/RB/then the/DT/the graph/NN/graph has/VBZ/has a/DT/a cycle/NNP/cycle. if/IN/if we/PRP/we encounter/VBP/encounter a/DT/a back/NN/back edge/NN/edge then/RB/then g/JJ/g has/VBZ/has a/DT/a cycle/NNP/cycle. great/NN/great /,/, why/WRB/why ?/./? well/RB/well /,/, let/VB/let ?/./? s/NNS/s just/RB/just look/VBP/look at/IN/at an/DT/an example/NNP/example. this/DT/this was/VBD/was the/DT/the tree/NN/tree /,/, this/DT/this was/VBD/was the/DT/the back/NN/back edge/NN/edge /,/, what/WP/what is/VBZ/is a/DT/a cycle/NN/cycle ?/./? well/RB/well /,/, the/DT/the cycle/NN/cycle is/VBZ/is exactly/RB/exactly this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 32/CD/32 /CD/) since/IN/since it/PRP/it is/VBZ/is a/DT/a tree/NN/tree /,/, this/DT/this node/NN/node is/VBZ/is an/DT/an ancestor/NNP/ancestor. this/DT/this is/VBZ/is a/DT/a back/RB/back edge/NN/edge so/IN/so this/DT/this is/VBZ/is an/DT/an ancestor/NN/ancestor of/IN/of this/NNP/this. if/IN/if this/DT/this is/VBZ/is an/DT/an ancestor/NN/ancestor of/IN/of this/DT/this /,/, there/EX/there is/VBZ/is a/DT/a path/NN/path in/IN/in the/DT/the tree/NN/tree from/IN/from here/RB/here to/TO/to here/NNP/here. i/PRP/i will/MD/will go/VB/go down/RB/down to/TO/to one/CD/one of/IN/of its/PRP$/its child/NN/child and/CC/and so/RB/so and/CC/and on/IN/on and/CC/and reach/NN/reach here/RB/here and/CC/and this/DT/this together/NN/together with/IN/with this/DT/this forms/NNS/forms the/DT/the cycle/NN/cycle for/IN/for us/NNP/us. if/IN/if there/EX/there is/VBZ/is a/DT/a back/RB/back edge/NN/edge /,/, there/EX/there is/VBZ/is a/DT/a cycle/NNP/cycle. if/IN/if there/EX/there is/VBZ/is a/DT/a cross/NN/cross edge/NN/edge /,/, does/VBZ/does that/IN/that mean/JJ/mean that/IN/that there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle ?/./? so/RB/so question/NN/question is/VBZ/is if/IN/if there/EX/there is/VBZ/is no/DT/no back/NN/back edge/NN/edge /,/, does/VBZ/does that/IN/that mean/JJ/mean g/NN/g is/VBZ/is acyclic/JJ/acyclic ?/./? i/PRP/i am/VBP/am using/VBG/using a/DT/a term/NN/term here/RB/here /,/, what/WDT/what does/VBZ/does acyclic/JJ/acyclic mean/NN/mean ?/./? no/DT/no cycle/NNP/cycle. /NNP/[ student/NN/student /:/: there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle consider/NN/consider a/DT/a graph/NN/graph it/PRP/it is/VBZ/is only/RB/only a/DT/a cycle/NN/cycle when/WRB/when definitely/RB/definitely you/PRP/you will/MD/will not/RB/not have/VB/have a/DT/a back/RB/back edge/NN/edge /:/] he/PRP/he is/VBZ/is saying/VBG/saying consider/NN/consider a/DT/a graph/NN/graph which/WDT/which is/VBZ/is only/RB/only a/DT/a cycle/NNP/cycle. we/PRP/we will/MD/will not/RB/not have/VB/have a/DT/a back/RB/back edge/NNP/edge. it/PRP/it will/MD/will have/VB/have a/DT/a back/RB/back edge/NNP/edge. is/VBZ/is it/PRP/it clear/RB/clear ?/./? so/RB/so he/PRP/he is/VBZ/is saying/VBG/saying consider/NN/consider a/DT/a graph/NN/graph which/WDT/which is/VBZ/is only/RB/only a/DT/a cycle/NN/cycle /:/[ hindi/NN/hindi /:/] /./. when/WRB/when we/PRP/we do/VBP/do a/DT/a depth/NN/depth first/RB/first search/NN/search of/IN/of this/DT/this graph/NN/graph /,/, what/WP/what do/VBP/do we/PRP/we get/VB/get ?/./? no/DT/no matter/NN/matter of/IN/of what/WP/what vertex/NN/vertex i/PRP/i start/VBP/start from/NNP/from. i/PRP/i will/MD/will let/VB/let ?/./? s/NNS/s say/VBP/say go/RB/go down/RB/down here/RB/here then/RB/then i/PRP/i go/VBP/go down/RB/down here/RB/here then/RB/then i/PRP/i go/VBP/go down/RB/down here/RB/here /,/, here/RB/here /,/, here/RB/here and/CC/and at/IN/at this/DT/this point/NN/point this/DT/this is/VBZ/is will/MD/will become/VB/become a/DT/a back/NN/back edge/NN/edge because/IN/because i/PRP/i will/MD/will just/RB/just retrace/VB/retrace my/PRP$/my path/NN/path here/RB/here and/CC/and reach/VBP/reach here/NNP/here. so/RB/so this/DT/this will/MD/will become/VB/become a/DT/a back/NN/back edge/NNP/edge. so/RB/so back/RB/back edge/VB/edge /,/, if/IN/if you/PRP/you find/VBP/find a/DT/a back/NN/back edge/NN/edge there/EX/there is/VBZ/is a/DT/a cycle/NNP/cycle. if/IN/if there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle /,/, it/PRP/it seems/VBZ/seems that/IN/that you/PRP/you will/MD/will get/VB/get a/DT/a back/NN/back edge/NNP/edge. can/MD/can you/PRP/you prove/VB/prove this/DT/this ?/./? if/IN/if there/EX/there is/VBZ/is no/DT/no back/NN/back edge/NN/edge does/VBZ/does that/IN/that mean/JJ/mean that/IN/that there/EX/there is/VBZ/is no/DT/no cycle/NN/cycle in/IN/in the/DT/the graph/NNP/graph. no/NNP/no. /NNP/[ student/NN/student /:/: all/DT/all forward/NN/forward /:/] if/IN/if there/EX/there is/VBZ/is no/DT/no back/NN/back edge/NN/edge /,/, does/VBZ/does that/IN/that mean/JJ/mean g/NN/g is/VBZ/is acyclic/JJ/acyclic ?/./? /:/[ student/NN/student /:/: due/JJ/due to/TO/to a/DT/a cross/NN/cross edge/NN/edge also/RB/also because/IN/because it/PRP/it can/MD/can happen/VB/happen that/IN/that in/IN/in a/DT/a particular/JJ/particular cycle/NN/cycle the/DT/the child/NN/child is/VBZ/is traversed/VBN/traversed by/IN/by some/DT/some other/JJ/other path/NN/path like/IN/like the/DT/the origin/NN/origin of/IN/of cross/NN/cross edges/NNS/edges /:/] /:/[ hindi/NN/hindi /:/] /./. so/RB/so let/VB/let me/PRP/me do/VBP/do a/DT/a very/RB/very interesting/JJ/interesting proof/IN/proof of/IN/of this/DT/this statement/NN/statement or/CC/or what/WP/what is/VBZ/is a/DT/a statement/NN/statement ?/./? this/DT/this is/VBZ/is not/RB/not a/DT/a statement/NN/statement /,/, this/DT/this is/VBZ/is a/DT/a question/NNP/question. so/RB/so statement/NN/statement is/VBZ/is no/DT/no back/NN/back means/VBZ/means no/DT/no cycle/NNP/cycle. no/DT/no back/NN/back edge/NN/edge /,/, no/DT/no cycle/NNP/cycle. /NNP/[ student/NN/student /:/: for/IN/for a/DT/a cycle/NN/cycle does/VBZ/does it/PRP/it mean/VB/mean a/DT/a arrow/NN/arrow is/VBZ/is going/VBG/going in/IN/in one/CD/one direction/NN/direction /:/] of/IN/of course/NN/course /,/, this/DT/this is/VBZ/is a/DT/a directed/VBN/directed graph/NNP/graph. a/DT/a cycle/NN/cycle means/VBZ/means a/DT/a path/NNP/path. i/PRP/i was/VBD/was very/RB/very clearly/RB/clearly specified/VBN/specified in/IN/in a/DT/a directed/VBN/directed graph/NN/graph /,/, a/DT/a path/NN/path means/VBZ/means you/PRP/you can/MD/can go/VB/go from/IN/from one/CD/one vertex/NN/vertex to/TO/to the/DT/the next/NNP/next. think/VBP/think of/IN/of them/PRP/them as/IN/as one/CD/one way/NN/way streets/NNP/streets. a/DT/a cycle/NN/cycle would/MD/would mean/VB/mean only/RB/only if/IN/if you/PRP/you can/MD/can traverse/VB/traverse in/IN/in such/JJ/such a/DT/a manner/NN/manner such/JJ/such that/IN/that you/PRP/you can/MD/can reach/VB/reach the/DT/the starting/NN/starting point/NNP/point. great/NNP/great. so/RB/so no/DT/no back/NN/back edge/NN/edge means/VBZ/means no/DT/no cycle/NN/cycle and/CC/and how/WRB/how am/NN/am i/PRP/i going/VBG/going to/TO/to prove/VB/prove this/DT/this ?/./? let/NN/let me/PRP/me do/VBP/do the/DT/the following/NNP/following. i/PRP/i will/MD/will do/VB/do a/DT/a depth/NN/depth first/RB/first search/NN/search and/CC/and now/RB/now i/PRP/i will/MD/will order/VB/order the/DT/the vertices/NNS/vertices according/VBG/according to/TO/to their/PRP$/their departure/NN/departure times/NNP/times. so/RB/so do/VBP/do dfs/NNS/dfs /,/, order/NN/order vertices/NNS/vertices by/IN/by their/PRP$/their departure/NN/departure times/NNP/times. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? let/NN/let ?/./? s/NNS/s say/VBP/say i/PRP/i will/MD/will first/RB/first put/VB/put down/RP/down the/DT/the vertex/NN/vertex which/WDT/which has/VBZ/has the/DT/the largest/JJS/largest departure/NN/departure times/NNS/times say/VBP/say /:/[ hindi/NN/hindi /:/] /./. this/DT/this has/VBZ/has the/DT/the largest/JJS/largest and/CC/and this/DT/this has/VBZ/has the/DT/the smallest/JJS/smallest and/CC/and the/DT/the departure/NN/departure times/VBZ/times are/VBP/are decreasing/VBG/decreasing like/IN/like this/NNP/this. this/DT/this is/VBZ/is the/DT/the largest/JJS/largest side/NN/side /:/[ hindi/NN/hindi /:/] /./. so/RB/so this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex which/WDT/which has/VBZ/has the/DT/the largest/JJS/largest departure/NN/departure time/NN/time /,/, no/DT/no two/CD/two vertices/NNS/vertices at/IN/at the/DT/the same/JJ/same departure/NN/departure time/NNP/time. yes/VBZ/yes because/IN/because every/DT/every time/NN/time we/PRP/we depart/VBP/depart from/IN/from the/DT/the vertex/NN/vertex /,/, we/PRP/we change/VBP/change the/DT/the time/NNP/time. so/RB/so this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex with/IN/with the/DT/the next/JJ/next smallest/NN/smallest /,/, the/DT/the next/JJ/next smallest/NN/smallest /,/, the/DT/the next/JJ/next smallest/NN/smallest and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31.40/CD/31.40 /CD/) now/RB/now let/VB/let ?/./? s/NNS/s go/VBP/go back/RB/back to/TO/to all/DT/all that/DT/that we/PRP/we have/VBP/have done/VBN/done so/RB/so far/NNP/far. let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at this/DT/this picture/NNP/picture. for/IN/for a/DT/a forward/NN/forward edge/NN/edge /,/, if/IN/if u/NN/u v/NN/v is/VBZ/is a/DT/a forward/NN/forward edge/NN/edge then/RB/then the/DT/the departure/NN/departure time/NN/time of/IN/of u/NN/u is/VBZ/is more/RBR/more than/IN/than the/DT/the departure/NN/departure time/NN/time of/IN/of v/NN/v /,/, /:/[ hindi/NN/hindi /:/] yes/NNP/yes. so/RB/so the/DT/the departure/NN/departure time/NN/time if/IN/if u/NN/u v/NN/v is/VBZ/is a/DT/a forward/NN/forward edge/NN/edge then/RB/then the/DT/the departure/NN/departure time/NN/time of/IN/of the/DT/the u/NN/u /,/, u/NN/u is/VBZ/is the/DT/the tail/NN/tail /,/, v/NN/v is/VBZ/is the/DT/the head/NN/head of/IN/of the/DT/the edge/NNP/edge. the/DT/the edge/NN/edge is/VBZ/is going/VBG/going from/IN/from u/NN/u to/TO/to v/NNP/v. the/DT/the departure/NN/departure time/NN/time of/IN/of u/NN/u will/MD/will be/VB/be more/RBR/more than/IN/than the/DT/the departure/NN/departure time/NN/time of/IN/of v/NNP/v. so/RB/so if/IN/if i/PRP/i have/VBP/have a/DT/a forward/NN/forward edge/NN/edge then/RB/then will/MD/will it/PRP/it go/VB/go from/IN/from left/VBN/left to/TO/to right/RB/right or/CC/or will/MD/will it/PRP/it go/VB/go from/IN/from right/RB/right to/TO/to left/VB/left ?/./? if/IN/if i/PRP/i have/VBP/have a/DT/a forward/NN/forward edge/NN/edge its/PRP$/its tail/NN/tail would/MD/would have/VB/have a/DT/a higher/JJR/higher departure/NN/departure time/NN/time /,/, so/RB/so it/PRP/it could/MD/could go/VB/go from/IN/from left/VBN/left to/TO/to right/NNP/right. a/DT/a forward/NN/forward edge/NN/edge would/MD/would like/VB/like this/NNP/this. let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at a/DT/a cross/NN/cross edge/NN/edge now/NNP/now. a/DT/a cross/NN/cross edge/NN/edge /,/, u/NN/u v/NN/v cross/NN/cross edge/NN/edge the/DT/the departure/NN/departure time/NN/time of/IN/of u/NN/u is/VBZ/is again/RB/again more/RBR/more than/IN/than the/DT/the departure/NN/departure time/NN/time of/IN/of v/NNP/v. so/RB/so the/DT/the edge/NN/edge will/MD/will also/RB/also go/VB/go /,/, a/DT/a cross/NN/cross edge/NN/edge would/MD/would also/RB/also go/VB/go from/IN/from left/VBN/left to/TO/to right/NNP/right. /NNP/[ hindi/NN/hindi /:/] there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle in/IN/in the/DT/the graph/NNP/graph. so/RB/so what/WP/what edge/NN/edge remains/VBZ/remains ?/./? /:/[ student/NN/student /:/: tree/NN/tree edge/NN/edge /:/] tree/NN/tree edge/NNP/edge. what/WP/what is/VBZ/is the/DT/the property/NN/property of/IN/of the/DT/the departure/NN/departure time/NN/time if/IN/if u/NN/u v/NN/v is/VBZ/is a/DT/a tree/NN/tree edge/NN/edge then/RB/then departure/NN/departure of/IN/of u/NN/u v/NN/v /:/[ hindi/NN/hindi /:/] /,/, so/RB/so first/RB/first i/PRP/i will/MD/will leave/VB/leave from/IN/from v/NN/v and/CC/and then/RB/then i/PRP/i will/MD/will leave/VB/leave from/IN/from u/NNP/u. so/RB/so departure/NN/departure of/IN/of u/NN/u would/MD/would be/VB/be more/RBR/more than/IN/than the/DT/the departure/NN/departure of/IN/of v/NNP/v. great/NNP/great. so/RB/so a/DT/a tree/NN/tree edge/NN/edge also/RB/also goes/VBZ/goes like/IN/like this/NNP/this. all/DT/all edges/NNS/edges are/VBP/are going/VBG/going from/IN/from left/NN/left to/TO/to right/NNP/right. how/WRB/how can/MD/can they/PRP/they be/VB/be a/DT/a cycle/NN/cycle ?/./? can/MD/can you/PRP/you create/VB/create a/DT/a cycle/NN/cycle by/IN/by just/RB/just going/VBG/going from/IN/from left/NN/left to/TO/to right/RB/right ?/./? no/NN/no. if/IN/if you/PRP/you have/VBP/have to/TO/to come/VB/come back/RB/back to/TO/to the/DT/the starting/NN/starting vertex/NN/vertex /:/[ hindi/NN/hindi /:/] and/CC/and you/PRP/you have/VBP/have to/TO/to come/VB/come back/RB/back to/TO/to this/DT/this vertex/NN/vertex /,/, /:/[ hindi/NN/hindi /:/] you/PRP/you can/MD/can go/VB/go forward/RB/forward but/CC/but at/IN/at some/DT/some point/NN/point you/PRP/you have/VBP/have to/TO/to come/VB/come back/RB/back but/CC/but there/EX/there is/VBZ/is no/DT/no edge/NN/edge which/WDT/which is/VBZ/is coming/VBG/coming from/IN/from right/JJ/right to/TO/to left/NNP/left. so/RB/so there/RB/there is/VBZ/is no/DT/no cycle/NN/cycle in/IN/in this/DT/this graph/NNP/graph. /NNP/[ hindi/NN/hindi /:/] yeah/NN/yeah /,/, everyone/NN/everyone follows/VBZ/follows this/DT/this proof/NNP/proof. now/RB/now you/PRP/you know/VBP/know why/WRB/why we/PRP/we were/VBD/were worrying/VBG/worrying about/IN/about departure/NN/departure times/NNP/times. so/RB/so you/PRP/you have/VB/have to/TO/to do/VB/do this/DT/this with/IN/with departure/NN/departure times/NNP/times. you/PRP/you can/MD/can ?/./? t/VB/t do/VBP/do this/DT/this with/IN/with arrival/NN/arrival times/NNS/times /,/, unfortunately/NNP/unfortunately. so/RB/so try/NN/try that/IN/that as/IN/as an/DT/an exercise/NNP/exercise. if/IN/if i/PRP/i were/VBD/were to/TO/to order/NN/order them/PRP/them by/IN/by arrival/NN/arrival time/NN/time this/DT/this is/VBZ/is not/RB/not going/VBG/going to/TO/to work/NNP/work. /NNP/[ hindi/NN/hindi /:/] so/RB/so this/DT/this is/VBZ/is actually/RB/actually a/DT/a very/RB/very simple/JJ/simple proof/IN/proof theorem/NNP/theorem. if/IN/if there/EX/there is/VBZ/is no/DT/no back/NN/back edge/NN/edge in/IN/in the/DT/the graph/NN/graph then/RB/then there/RB/there is/VBZ/is no/DT/no cycle/NNP/cycle. if/IN/if there/EX/there is/VBZ/is a/DT/a back/RB/back edge/NN/edge then/RB/then there/RB/there is/VBZ/is a/DT/a cycle/NNP/cycle. so/RB/so all/DT/all you/PRP/you have/VBP/have to/TO/to do/VB/do is/VBZ/is do/VB/do a/DT/a dfs/NN/dfs /,/, if/IN/if at/IN/at any/DT/any point/NN/point you/PRP/you encounter/JJR/encounter a/DT/a back/NN/back edge/NN/edge /,/, you/PRP/you declare/VBP/declare that/IN/that the/DT/the graph/NN/graph has/VBZ/has a/DT/a cycle/NNP/cycle. if/IN/if you/PRP/you are/VBP/are able/JJ/able to/TO/to finish/VB/finish your/PRP$/your depth/NN/depth first/RB/first search/NN/search without/IN/without encountering/NN/encountering a/DT/a single/JJ/single back/NN/back edge/NN/edge then/RB/then you/PRP/you declare/VBP/declare the/DT/the graph/NN/graph is/VBZ/is acyclic/NNP/acyclic. /:/[ hindi/NN/hindi /:/] what/WP/what is/VBZ/is an/DT/an acyclic/JJ/acyclic graph/NN/graph ?/./? a/DT/a acyclic/JJ/acyclic graph/NN/graph is/VBZ/is a/DT/a graph/NN/graph which/WDT/which does/VBZ/does not/RB/not have/VB/have a/DT/a cycle/NNP/cycle. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 45/CD/45 /CD/) this/DT/this ordering/NN/ordering so/IN/so ?/./? what/WP/what we/PRP/we have/VBP/have ?/./? another/DT/another thing/NN/thing we/PRP/we have/VBP/have shown/VBN/shown and/CC/and that/IN/that is/VBZ/is the/DT/the very/JJ/very nice/NN/nice thing/NN/thing is/VBZ/is that/IN/that given/VBN/given an/DT/an acyclic/JJ/acyclic graph/NN/graph /,/, let/VB/let ?/./? s/NNS/s say/VBP/say g/NN/g is/VBZ/is an/DT/an acyclic/JJ/acyclic graph/NNP/graph. we/PRP/we can/MD/can order/VB/order the/DT/the vertices/NNS/vertices of/IN/of g/NN/g so/IN/so that/IN/that every/DT/every edge/NN/edge /,/, so/RB/so that/IN/that every/DT/every edge/NN/edge goes/VBZ/goes from/IN/from left/VBN/left to/TO/to right/RB/right /,/, yes/NNP/yes. that/IN/that ?/./? s/NNS/s what/WP/what we/PRP/we did/VBD/did here/NNP/here. we/PRP/we said/VBD/said we/PRP/we started/VBD/started with/IN/with an/DT/an acyclic/JJ/acyclic graph/NNP/graph. we/PRP/we started/VBD/started with/IN/with a/DT/a graph/NN/graph /,/, we/PRP/we did/VBD/did a/DT/a depth/NN/depth first/RB/first search/NN/search in/IN/in a/DT/a graph/NNP/graph. we/PRP/we did/VBD/did not/RB/not encounter/VB/encounter any/DT/any back/NN/back edge/NNP/edge. so/RB/so we/PRP/we said/VBD/said the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a cycle/NNP/cycle. it/PRP/it is/VBZ/is an/DT/an acyclic/JJ/acyclic graph/NN/graph and/CC/and then/RB/then we/PRP/we said/VBD/said lets/NNS/lets order/NN/order the/DT/the vertices/NNS/vertices of/IN/of the/DT/the graph/NN/graph according/VBG/according to/TO/to decreasing/VBG/decreasing departure/NN/departure times/NNP/times. then/RB/then what/WP/what we/PRP/we see/VBP/see ?/./? if/IN/if we/PRP/we order/VBP/order the/DT/the vertices/NNS/vertices in/IN/in the/DT/the manner/NN/manner then/RB/then every/DT/every edge/NN/edge goes/VBZ/goes from/IN/from left/VBN/left to/TO/to right/NNP/right. this/DT/this ordering/NN/ordering is/VBZ/is also/RB/also called/VBN/called a/DT/a topological/JJ/topological sort/NN/sort /:/[ hindi/NN/hindi /:/] /./. so/RB/so in/IN/in a/DT/a acyclic/JJ/acyclic graph/NN/graph you/PRP/you can/MD/can order/VB/order the/DT/the vertices/NNS/vertices /,/, linearly/RB/linearly order/NN/order the/DT/the vertices/NNS/vertices so/RB/so that/IN/that the/DT/the edges/NNS/edges are/VBP/are going/VBG/going only/RB/only from/IN/from left/VBN/left to/TO/to right/NNP/right. this/DT/this ordering/NN/ordering is/VBZ/is called/VBN/called the/DT/the topological/JJ/topological sort/NNP/sort. so/RB/so how/WRB/how much/JJ/much time/NN/time do/VBP/do you/PRP/you take/VB/take to/TO/to find/VB/find a/DT/a topological/JJ/topological sort/NN/sort ?/./? you/PRP/you just/RB/just have/VBP/have to/TO/to do/VB/do a/DT/a dfs/NN/dfs and/CC/and then/RB/then /,/, then/RB/then sorting/NNP/sorting. /:/[ student/NN/student /:/: this/DT/this is/VBZ/is /NNP/] check/NN/check what/WP/what ?/./? /:/[ student/NN/student /:/: is/VBZ/is there/RB/there exists/VBZ/exists some/DT/some /NN/] /:/[ hindi/NN/hindi /:/] but/CC/but you/PRP/you have/VBP/have to/TO/to produce/VB/produce an/DT/an ordering/NN/ordering of/IN/of the/DT/the vertices/NNS/vertices right/NNP/right. /NNP/[ student/NN/student /:/: hindi/NN/hindi /:/] right/NN/right /,/, so/RB/so we/PRP/we don/VBP/don ?/./? t/NN/t need/NN/need to/TO/to sort/VB/sort because/IN/because we/PRP/we know/VBP/know what/WP/what the/DT/the departure/NN/departure times/VBZ/times are/NNP/are. what/WP/what is/VBZ/is a/DT/a maximum/NN/maximum departure/NN/departure time/NN/time we/PRP/we can/MD/can have/VB/have ?/./? /:/[ student/NN/student /:/: 2/CD/2 n/NN/n /:/] 2/CD/2 n/NN/n /,/, yes/VBZ/yes 2/CD/2 n/NN/n actually/RB/actually 2/CD/2 n/NN/n minus/NN/minus 1/CD/1 because/IN/because each/DT/each vertex/NN/vertex is/VBZ/is getting/VBG/getting two/CD/two numbers/NNS/numbers /,/, right/NNP/right. so/RB/so the/DT/the total/JJ/total set/NN/set of/IN/of numbers/NNS/numbers that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be assigning/VBG/assigning arrival/NN/arrival and/CC/and departure/NN/departure times/NNS/times will/MD/will be/VB/be in/IN/in the/DT/the range/NN/range 0/-NONE-/0 through/IN/through 2/CD/2 n/NN/n minus/NN/minus 1/CD/1. so/RB/so the/DT/the departure/NN/departure times/VBZ/times is/VBZ/is at/IN/at most/JJS/most 2/CD/2 n/NN/n minus/NN/minus 1/CD/1 that/WDT/that is/VBZ/is at/IN/at least/JJS/least to/TO/to 1/CD/1. so/RB/so i/PRP/i can/MD/can just/RB/just have/VB/have an/DT/an array/NN/array with/IN/with 2/CD/2 n/NN/n entries/NNS/entries in/IN/in it/PRP/it and/CC/and as/IN/as i/PRP/i depart/VBP/depart from/IN/from a/DT/a vertex/NN/vertex /,/, as/IN/as i/PRP/i assign/VBP/assign it/PRP/it with/IN/with departure/NN/departure time/NN/time at/IN/at the/DT/the position/NN/position in/IN/in the/DT/the array/NN/array i/PRP/i put/VBD/put down/RP/down the/DT/the vertices/NNP/vertices. i/PRP/i just/RB/just need/VBP/need to/TO/to make/VB/make one/CD/one scan/JJ/scan of/IN/of this/DT/this array/NN/array to/TO/to get/VB/get the/DT/the vertices/NNS/vertices in/IN/in the/DT/the right/NN/right order/NNP/order. /NNP/[ hindi/NN/hindi /:/] so/RB/so you/PRP/you don/VBP/don ?/./? t/NN/t need/NN/need to/TO/to sort/VB/sort the/DT/the n/NN/n departure/NN/departure time/NN/time because/IN/because if/IN/if you/PRP/you had/VBD/had to/TO/to sort/VB/sort /,/, you/PRP/you would/MD/would take/VB/take n/NN/n log/NN/log n/NN/n time/NNP/time. we/PRP/we have/VBP/have not/RB/not seen/VBN/seen a/DT/a sorting/NN/sorting algorithm/NN/algorithm which/WDT/which performs/NNS/performs better/RBR/better than/IN/than n/NN/n log/NN/log n/NNP/n. so/RB/so this/DT/this ordering/NN/ordering is/VBZ/is called/VBN/called the/DT/the topological/JJ/topological sort/NN/sort and/CC/and it/PRP/it can/MD/can be/VB/be computed/VBN/computed in/IN/in order/NN/order n/NN/n time/NN/time /,/, order/NN/order n/NN/n plus/CC/plus m/NN/m time/NNP/time. so/RB/so i/PRP/i have/VBP/have used/VBN/used /,/, so/RB/so i/PRP/i should/MD/should also/RB/also tell/VB/tell you/PRP/you about/IN/about another/DT/another term/NN/term that/IN/that is/VBZ/is used/VBN/used for/IN/for acyclic/JJ/acyclic graph/NNP/graph. so/RB/so we/PRP/we are/VBP/are talking/VBG/talking of/IN/of directed/JJ/directed graphs/NNS/graphs here/NNP/here. a/DT/a directed/JJ/directed acyclic/JJ/acyclic graph/NN/graph /,/, directed/VBD/directed graph/NN/graph which/WDT/which is/VBZ/is acyclic/JJ/acyclic is/VBZ/is also/RB/also called/VBN/called a/DT/a dag/NN/dag /,/, d/VBD/d a/DT/a g/NN/g /:/[ hindi/NN/hindi /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 29/CD/29 /CD/) these/DT/these graphs/NNS/graphs arise/VBP/arise quite/RB/quite a/DT/a bit/NN/bit in/IN/in circuits/NNS/circuits /,/, in/IN/in combinational/JJ/combinational circuits/NNS/circuits where/WRB/where you/PRP/you know/VBP/know your/PRP$/your pulses/NNS/pulses are/VBP/are essentially/RB/essentially traveling/VBG/traveling from/IN/from one/CD/one side/NN/side to/TO/to the/DT/the other/NNP/other. there/RB/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of a/DT/a cycle/NN/cycle /,/, there/EX/there is/VBZ/is no/DT/no loops/NNS/loops and/CC/and so/RB/so these/DT/these graphs/NNS/graphs model/VBP/model that/IN/that and/CC/and we/PRP/we can/MD/can do/VB/do a/DT/a lot/NN/lot of/IN/of things/NNS/things on/IN/on such/JJ/such kind/NN/kind of/IN/of graphs/NNS/graphs which/WDT/which we/PRP/we can/MD/can not/RB/not do/VB/do on/IN/on a/DT/a regular/JJ/regular directed/VBN/directed graph/NNP/graph. the/DT/the graph/NN/graph which/WDT/which has/VBZ/has cycles/NNS/cycles in/IN/in it/PRP/it and/CC/and we/PRP/we will/MD/will see/VB/see some/DT/some of/IN/of that/DT/that in/IN/in this/DT/this course/NNP/course. questions/NNS/questions so/RB/so far/RB/far ?/./? /:/[ hindi/NN/hindi /:/] so/RB/so let/VB/let me/PRP/me introduce/VB/introduce /,/, i/PRP/i will/MD/will like/VB/like to/TO/to take/VB/take one/CD/one more/JJR/more application/NN/application of/IN/of dfs/NNS/dfs in/IN/in directed/VBN/directed graphs/NNS/graphs and/CC/and since/IN/since that/DT/that is/VBZ/is a/DT/a longer/NN/longer application/NN/application /,/, we/PRP/we will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to finish/VB/finish it/PRP/it in/IN/in this/DT/this class/NN/class but/CC/but i/PRP/i will/MD/will develop/VB/develop the/DT/the terminology/NN/terminology for/IN/for it/NNP/it. so/RB/so let/VB/let ?/./? s/NNS/s go/VBP/go back/RB/back to/TO/to our/PRP$/our notion/NN/notion of/IN/of ?/./? so/RB/so for/IN/for undirected/VBN/undirected graphs/NNS/graphs /,/, so/RB/so if/IN/if i/PRP/i gave/VBP/gave you/PRP/you an/DT/an undirected/JJ/undirected graphs/NNS/graphs there/EX/there was/VBD/was a/DT/a notion/NN/notion of/IN/of whether/IN/whether the/DT/the graph/NN/graph is/VBZ/is connected/NNP/connected. yeah/NN/yeah /,/, when/WRB/when is/VBZ/is an/DT/an undirected/VBN/undirected graph/NN/graph connected/VBN/connected ?/./? when/WRB/when it/PRP/it all/DT/all vertices/NNS/vertices /VBP/[ student/NN/student /:/: there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between every/DT/every two/CD/two vertices/NNS/vertices /:/] there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between very/RB/very two/CD/two vertices/NNS/vertices then/RB/then we/PRP/we say/VBP/say that/IN/that the/DT/the graph/NN/graph is/VBZ/is connected/NNP/connected. so/RB/so connected/VBN/connected means/NNS/means there/RB/there is/VBZ/is a/DT/a path/NN/path between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNP/vertices. in/IN/in a/DT/a directed/VBN/directed graph/NN/graph the/DT/the corresponding/NN/corresponding term/NN/term is/VBZ/is what/WP/what is/VBZ/is called/VBN/called strongly/RB/strongly connected/NNP/connected. a/DT/a directed/JJ/directed graph/NN/graph is/VBZ/is called/VBN/called strongly/RB/strongly connected/VBN/connected /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between every/DT/every ordered/VBN/ordered pair/NN/pair of/IN/of vertices/NNP/vertices. why/WRB/why am/NN/am i/PRP/i using/VBG/using this/DT/this term/NN/term ordered/VBD/ordered pair/NN/pair of/IN/of vertices/NNS/vertices ?/./? between/IN/between which/WDT/which /,/, so/RB/so i/PRP/i said/VBD/said pair/JJ/pair of/IN/of vertices/NNS/vertices but/CC/but you/PRP/you know/VBP/know it/PRP/it is/VBZ/is a/DT/a directed/VBN/directed graph/NNP/graph. may/MD/may be/VB/be there/RB/there is/VBZ/is a/DT/a path/NN/path from/IN/from u/NN/u to/TO/to v/VB/v but/CC/but there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from v/NN/v to/TO/to u/NNP/u. let/VB/let ?/./? s/NNS/s take/VBP/take an/DT/an example/NNP/example. is/VBZ/is this/DT/this graph/NN/graph strongly/RB/strongly connected/VBN/connected ?/./? let/NN/let me/PRP/me label/NNP/label. there/RB/there is/VBZ/is a/DT/a path/NN/path between/IN/between a/DT/a and/CC/and b/NN/b but/CC/but there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from b/NN/b to/TO/to a/NNP/a. there/RB/there is/VBZ/is a/DT/a path/NN/path from/IN/from b/NN/b to/TO/to c/VB/c but/CC/but there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from c/NN/c to/TO/to b/NNP/b. there/RB/there is/VBZ/is a/DT/a path/NN/path from/IN/from d/NN/d to/TO/to c/VB/c but/CC/but there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from c/NN/c to/TO/to d/NNP/d. /NNP/[ hindi/NN/hindi /:/] it/PRP/it is/VBZ/is still/RB/still not/RB/not strongly/RB/strongly connected/NNP/connected. there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from a/DT/a to/TO/to b/VB/b /:/[ student/NN/student /:/: but/CC/but not/RB/not from/IN/from /NNP/] but/CC/but from/IN/from b/NN/b to/TO/to a/DT/a there/RB/there is/VBZ/is no/DT/no path/NN/path still/NNP/still. pardon/NN/pardon yeah/NN/yeah /,/, sorry/NNP/sorry. /NNP/[ student/NN/student /:/: what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by the/DT/the /NNP/] no/DT/no /,/, no/DT/no when/WRB/when i/PRP/i say/VBP/say there/RB/there is/VBZ/is a/DT/a path/NN/path from/IN/from a/DT/a to/TO/to b/VB/b it/PRP/it basically/RB/basically means/VBZ/means that/IN/that i/PRP/i can/MD/can go/VB/go from/IN/from a/DT/a to/TO/to b/VB/b like/IN/like this/DT/this or/CC/or like/IN/like this/DT/this right/NN/right but/CC/but i/PRP/i can/MD/can not/RB/not go/VB/go b/RB/b to/TO/to a/DT/a there/RB/there is/VBZ/is no/DT/no path/NN/path from/IN/from b/NN/b to/TO/to a/NNP/a. is/VBZ/is there/RB/there a/DT/a pair/NN/pair pair/NN/pair of/IN/of vertices/NNS/vertices such/JJ/such that/IN/that there/EX/there is/VBZ/is a/DT/a path/NN/path between/IN/between these/DT/these two/CD/two vertices/NNS/vertices in/IN/in both/DT/both directions/NNP/directions. /NNP/[ student/NN/student /:/: no/DT/no /NN/] no/DT/no can/MD/can not/RB/not happen/VB/happen right/RB/right because/IN/because not/RB/not in/IN/in this/DT/this graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 55/CD/55 /CD/) let/NN/let ?/./? s/NNS/s see/VBP/see more/JJR/more examples/NNS/examples which/WDT/which will/MD/will perhaps/RB/perhaps be/VB/be better/NNP/better. so/RB/so a/DT/a b/NN/b c/NN/c d/NN/d /,/, is/VBZ/is this/DT/this strongly/RB/strongly connected/VBN/connected ?/./? no/DT/no /,/, yeah/NN/yeah between/IN/between any/DT/any two/CD/two vertices/NNP/vertices. so/RB/so from/IN/from d/JJ/d to/TO/to b/VB/b there/RB/there is/VBZ/is a/DT/a path/NN/path /,/, from/IN/from b/NN/b to/TO/to d/VB/d also/RB/also there/RB/there is/VBZ/is a/DT/a path/NN/path because/IN/because everything/NN/everything is/VBZ/is on/IN/on a/DT/a cycle/NNP/cycle. /NNP/[ student/NN/student /:/: cycle/NN/cycle /:/] yes/NNS/yes /,/, so/RB/so this/DT/this graph/NN/graph is/VBZ/is strongly/RB/strongly connected/NNP/connected. is/VBZ/is this/DT/this graph/NN/graph strongly/RB/strongly connected/VBN/connected ?/./? /:/[ student/NN/student /:/: yes/NNS/yes sir/VBP/sir /:/] /:/[ hindi/NN/hindi /:/] is/VBZ/is there/RB/there a/DT/a path/NN/path sorry/NN/sorry /,/, is/VBZ/is there/EX/there a/DT/a path/NN/path from/IN/from a/DT/a to/TO/to f/NN/f ?/./? /:/[ student/NN/student /:/: yes/NNS/yes yes/NNS/yes /VBP/] yes/NNS/yes /:/[ student/NN/student /:/: a/DT/a to/TO/to b/VB/b /:/] yes/NNS/yes a/DT/a and/CC/and f/NN/f there/EX/there is/VBZ/is also/RB/also path/NN/path from/IN/from f/NN/f to/TO/to a/DT/a going/NN/going like/IN/like this/NNP/this. so/RB/so this/DT/this graph/NN/graph is/VBZ/is also/RB/also strongly/RB/strongly connected/NNP/connected. no/DT/no that/WDT/that is/VBZ/is not/RB/not sufficient/JJ/sufficient right/NN/right /,/, i/PRP/i can/MD/can ?/./? t/VB/t just/RB/just take/VB/take two/CD/two pairs/NNS/pairs and/CC/and check/NN/check them/PRP/them and/CC/and say/VBP/say it/PRP/it is/VBZ/is strongly/RB/strongly connected/NNP/connected. we/PRP/we have/VBP/have to/TO/to look/VB/look at/IN/at every/DT/every pair/NN/pair right/RB/right but/CC/but you/PRP/you can/MD/can check/NNP/check. /:/[ hindi/NN/hindi /:/] all/DT/all of/IN/of these/DT/these form/NN/form one/CD/one strongly/RB/strongly connected/VBN/connected component/NNP/component. for/IN/for all/DT/all these/DT/these 4/CD/4 vertices/NNS/vertices any/DT/any pair/NN/pair i/PRP/i choose/VBP/choose is/VBZ/is connected/NNP/connected. similarly/RB/similarly for/IN/for these/DT/these four/CD/four vertices/NNS/vertices any/DT/any pair/NN/pair i/PRP/i choose/VBP/choose is/VBZ/is connected/VBN/connected yeah/NN/yeah and/CC/and that/IN/that should/MD/should somehow/VB/somehow tell/NN/tell you/PRP/you how/WRB/how to/TO/to do/VB/do things/NNP/things. /NNP/[ student/NN/student /:/: both/DT/both of/IN/of them/PRP/them must/MD/must be/VB/be part/NN/part of/IN/of cycle/NN/cycle /:/] right/NN/right something/NN/something like/IN/like that/NNP/that. if/IN/if there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of strongly/RB/strongly connected/VBN/connected there/EX/there should/MD/should be/VB/be a/DT/a notion/NN/notion of/IN/of weakly/RB/weakly connected/VBN/connected /,/, not/RB/not daily/JJ/daily weakly/RB/weakly connected/VBN/connected /,/, sorry/NNP/sorry. it/PRP/it ?/./? s/NNS/s weakly/RB/weakly connected/NNP/connected. what/WP/what do/VBP/do you/PRP/you think/VB/think is/VBZ/is a/DT/a weakly/RB/weakly connected/VBN/connected graph/NN/graph ?/./? /:/[ student/NN/student /:/: between/IN/between u/NN/u and/CC/and v/NN/v all/DT/all v/NN/v to/TO/to u/VB/u /:/] yes/NNS/yes /VBP/[ student/NN/student /:/: as/IN/as undirected/VBN/undirected graph/NN/graph /:/] no/DT/no no/DT/no /,/, not/RB/not as/IN/as undirected/VBN/undirected they/PRP/they are/VBP/are connected/NNP/connected. the/DT/the following/VBG/following is/VBZ/is /:/[ student/NN/student /:/: there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from u/NN/u to/TO/to v/VB/v or/CC/or /CD/] there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from /NNP/[ student/NN/student /:/: u/NN/u to/TO/to v/VB/v or/CC/or v/VB/v to/TO/to u/VB/u /:/] or/CC/or v/NN/v to/TO/to u/VB/u and/CC/and or/CC/or v/NN/v to/TO/to u/NNP/u. the/DT/the following/VBG/following graph/NN/graph is/VBZ/is weakly/RB/weakly connected/NNP/connected. /:/[ student/NN/student /:/: yes/NNS/yes /VBP/] yes/NNS/yes /:/[ hindi/NN/hindi /:/] is/VBZ/is there/RB/there a/DT/a path/NN/path from/IN/from b/NN/b to/TO/to d/VB/d ?/./? no/NN/no. is/VBZ/is there/EX/there a/DT/a path/NN/path from/IN/from d/NN/d to/TO/to b/VB/b ?/./? no/NN/no. is/VBZ/is it/PRP/it weakly/RB/weakly connected/VBN/connected ?/./? /:/[ student/NN/student /:/: no/DT/no /NN/] no/DT/no /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a weakly/RB/weakly connected/VBN/connected graph/NNP/graph. so/RB/so why/WRB/why am/NN/am i/PRP/i showing/VBG/showing you/PRP/you this/DT/this example/NN/example /,/, it/PRP/it ?/./? s/NNS/s not/RB/not sufficient/JJ/sufficient to/TO/to say/NNP/say... /NNP/[ hindi/NN/hindi /:/] so/RB/so this/DT/this is/VBZ/is a/DT/a graph/NN/graph such/JJ/such that/IN/that if/IN/if i/PRP/i were/VBD/were to/TO/to ignore/VB/ignore the/DT/the directions/NNS/directions /,/, it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected graph/NN/graph but/CC/but it/PRP/it is/VBZ/is not/RB/not a/DT/a weakly/RB/weakly connected/VBN/connected graph/NNP/graph. so/RB/so what/WP/what is/VBZ/is the/DT/the right/NN/right definition/NN/definition of/IN/of weakly/RB/weakly connected/VBN/connected ?/./? a/DT/a graph/NN/graph is/VBZ/is weakly/RB/weakly connected/VBN/connected if/IN/if for/IN/for every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices u/VBP/u /,/, v/NN/v there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from u/NN/u to/TO/to v/VB/v or/CC/or a/DT/a path/NN/path from/IN/from v/NN/v to/TO/to u/VB/u or/CC/or both/NNP/both. if/IN/if both/DT/both the/DT/the paths/NNS/paths are/VBP/are there/RB/there its/PRP$/its okay/NN/okay and/CC/and this/DT/this should/MD/should be/VB/be true/JJ/true for/IN/for very/RB/very pair/JJ/pair of/IN/of vertices/NNS/vertices right/NNP/right. /NNP/[ hindi/NN/hindi /:/] right/NN/right /,/, good/NNP/good. so/RB/so i/PRP/i have/VBP/have told/VBN/told you/PRP/you what/WP/what is/VBZ/is strongly/RB/strongly connected/VBN/connected graph/NN/graph is/VBZ/is and/CC/and what/WP/what a/DT/a weakly/RB/weakly connected/VBN/connected graph/NN/graph is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 36/CD/36 /CD/) so/RB/so natural/JJ/natural question/NN/question is/VBZ/is given/VBN/given a/DT/a graph/NN/graph /,/, is/VBZ/is it/PRP/it strongly/RB/strongly connected/VBN/connected ?/./? /:/[ hindi/NN/hindi /:/] given/VBN/given a/DT/a graph/NN/graph g/NN/g /,/, is/VBZ/is g/JJ/g strongly/RB/strongly connected/VBN/connected ?/./? so/RB/so what/WP/what are/VBP/are you/PRP/you saying/VBG/saying ?/./? we/PRP/we are/VBP/are doing/VBG/doing a/DT/a dfs/NN/dfs starting/VBG/starting from/IN/from here/NNP/here. so/RB/so we/PRP/we have/VBP/have to/TO/to check/VB/check /,/, so/RB/so strongly/RB/strongly connected/VBN/connected means/NNS/means we/PRP/we have/VBP/have to/TO/to check/VB/check that/IN/that from/IN/from between/IN/between every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices /,/, every/DT/every ordered/VBN/ordered pair/NN/pair of/IN/of vertices/NNS/vertices there/EX/there is/VBZ/is a/DT/a path/NNP/path. so/RB/so from/IN/from u/NN/u to/TO/to v/VB/v there/RB/there should/MD/should be/VB/be a/DT/a path/NN/path and/CC/and from/IN/from v/NN/v to/TO/to u/VB/u there/RB/there should/MD/should be/VB/be a/DT/a path/NNP/path. so/RB/so one/CD/one solution/NN/solution that/WDT/that is/VBZ/is being/VBG/being suggested/VBN/suggested is/VBZ/is that/IN/that you/PRP/you take/VBP/take one/CD/one vertex/NN/vertex /,/, do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from here/NNP/here. it/PRP/it should/MD/should visit/VB/visit all/DT/all vertices/NNS/vertices and/CC/and then/RB/then take/VB/take another/DT/another vertex/NN/vertex and/CC/and do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from there/NNP/there. it/PRP/it should/MD/should also/RB/also visit/VB/visit all/DT/all vertices/NNP/vertices. take/VBP/take a/DT/a third/JJ/third vertex/NN/vertex and/CC/and do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from there/EX/there /,/, it/PRP/it should/MD/should also/RB/also visit/VB/visit all/DT/all vertices/NNP/vertices. so/RB/so do/VBP/do this/DT/this dfs/NNP/dfs. how/WRB/how many/JJ/many times/NNS/times ?/./? n/NN/n times/NNS/times from/IN/from every/DT/every vertex/NNP/vertex. if/IN/if each/DT/each of/IN/of those/DT/those dfs/NNS/dfs ?/./? s/NNS/s visit/NN/visit all/DT/all the/DT/the vertices/NNS/vertices then/RB/then the/DT/the graph/NN/graph is/VBZ/is strongly/RB/strongly connected/NNP/connected. yes/NNS/yes /,/, is/VBZ/is that/IN/that clear/NNP/clear. is/VBZ/is this/DT/this argument/NN/argument clear/NN/clear ?/./? if/IN/if all/DT/all of/IN/of these/DT/these dfs/NNS/dfs visit/NN/visit each/DT/each and/CC/and every/DT/every vertex/NN/vertex then/RB/then the/DT/the graph/NN/graph is/VBZ/is strongly/RB/strongly connected/NNP/connected. perfectly/RB/perfectly okay/NN/okay /,/, except/IN/except how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? order/NN/order m/NN/m n/NN/n time/NNP/time. that/IN/that ?/./? s/NNS/s too/RB/too much/RB/much for/IN/for us/NNP/us. we/PRP/we want/VBP/want do/VBP/do it/PRP/it in/IN/in linear/JJ/linear time/NNP/time. so/RB/so we/PRP/we want/VBP/want to/TO/to do/VB/do it/PRP/it in/IN/in order/NN/order m/NN/m plus/CC/plus n/NN/n time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 45/CD/45 /CD/) so/RB/so question/NN/question is/VBZ/is how/WRB/how did/VBD/did you/PRP/you do/VBP/do that/DT/that ?/./? /:/[ hindi/NN/hindi /:/] so/RB/so try/NN/try to/TO/to think/VB/think about/IN/about this/DT/this and/CC/and think/VBP/think in/IN/in terms/NNS/terms of/IN/of the/DT/the procedure/NN/procedure we/PRP/we used/VBD/used for/IN/for two/CD/two edge/NN/edge connectivity/NNP/connectivity. we/PRP/we will/MD/will borrow/VB/borrow ideas/NNS/ideas from/IN/from there/NNP/there. in/IN/in two/CD/two edge/NN/edge connectivity/NN/connectivity what/WP/what did/VBD/did we/PRP/we require/VBP/require ?/./? we/PRP/we required/VBD/required that/IN/that for/IN/for every/DT/every sub/NN/sub tree/NN/tree there/EX/there should/MD/should be/VB/be an/DT/an edge/NN/edge /,/, back/RB/back edge/NN/edge going/VBG/going out/RP/out of/IN/of the/DT/the sub/NN/sub tree/NN/tree so/RB/so to/TO/to say/VB/say /,/, going/VBG/going to/TO/to a/DT/a ancestor/NN/ancestor of/IN/of the/DT/the root/NNP/root. here/RB/here also/RB/also we/PRP/we require/VBP/require something/NN/something similar/JJ/similar that/IN/that ?/./? s/NNS/s the/DT/the hint/NNP/hint. so/RB/so you/PRP/you will/MD/will have/VB/have to/TO/to see/VB/see what/WP/what that/IN/that is/VBZ/is and/CC/and we/PRP/we will/MD/will discuss/VB/discuss it/PRP/it in/IN/in more/JJR/more detail/NN/detail in/IN/in the/DT/the next/JJ/next class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering iit/NN/iit delhi/NN/delhi lecture/NN/lecture ?/./? 30/CD/30 applications/NNS/applications of/IN/of dfs/NNS/dfs in/IN/in directed/VBN/directed graphs/NNS/graphs today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at more/JJR/more applications/NNS/applications of/IN/of depth/NN/depth first/RB/first search/NN/search in/IN/in directed/VBN/directed graphs/NNP/graphs. recall/NN/recall that/WDT/that in/IN/in the/DT/the last/JJ/last class/NN/class i/PRP/i had/VBD/had mentioned/VBN/mentioned that/IN/that we/PRP/we will/MD/will talk/VB/talk about/IN/about strong/JJ/strong connectivity/NNP/connectivity. we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to figure/VB/figure out/RP/out /,/, if/IN/if a/DT/a given/VBN/given directed/VBN/directed graph/NN/graph is/VBZ/is strongly/RB/strongly connected/VBN/connected or/CC/or not/RB/not and/CC/and i/PRP/i have/VBP/have defined/VBN/defined what/WP/what is/VBZ/is strong/JJ/strong connectivity/NN/connectivity means/NNP/means. it/PRP/it essentially/RB/essentially means/VBZ/means that/IN/that between/IN/between every/DT/every ordered/VBN/ordered pair/NN/pair of/IN/of vertices/NNS/vertices there/EX/there is/VBZ/is a/DT/a path/NN/path in/IN/in the/DT/the graph/NN/graph so/RB/so which/WDT/which means/VBZ/means i/PRP/i take/VBP/take two/CD/two vertices/NNS/vertices lets/NNS/lets say/VBP/say u/NN/u and/CC/and v/NN/v /,/, there/EX/there should/MD/should be/VB/be path/NN/path from/IN/from u/NN/u to/TO/to v/VB/v and/CC/and also/RB/also a/DT/a path/NN/path from/IN/from v/NN/v to/TO/to u/NNP/u. then/RB/then we/PRP/we would/MD/would call/VB/call the/DT/the graph/NN/graph strongly/RB/strongly connected/NNP/connected. so/RB/so in/IN/in the/DT/the last/JJ/last class/NN/class there/EX/there was/VBD/was a/DT/a very/RB/very simple/JJ/simple algorithm/NN/algorithm that/WDT/that was/VBD/was suggested/VBN/suggested which/WDT/which was/VBD/was that/IN/that take/NN/take a/DT/a vertex/NN/vertex /,/, do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from there/NNP/there. take/NN/take another/DT/another vertex/NN/vertex /,/, do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from there/EX/there and/CC/and so/RB/so and/CC/and on/IN/on which/WDT/which means/VBZ/means do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. if/IN/if in/IN/in each/DT/each one/CD/one of/IN/of these/DT/these dfs/NNS/dfs ?/./? s/NNS/s /,/, we/PRP/we include/VBP/include all/DT/all the/DT/the vertices/NNS/vertices of/IN/of the/DT/the graph/NN/graph only/RB/only then/RB/then is/VBZ/is the/DT/the graph/NN/graph strongly/RB/strongly connected/NNP/connected. that/IN/that should/MD/should be/VB/be easy/JJ/easy to/TO/to see/NNP/see. let/VB/let ?/./? s/NNS/s see/VBP/see if/IN/if we/PRP/we can/MD/can reduce/VB/reduce the/DT/the number/NN/number of/IN/of dfs/NNS/dfs calls/VBZ/calls that/IN/that we/PRP/we make/VBP/make /,/, instead/RB/instead of/IN/of making/VBG/making n/NN/n dfs/NNS/dfs ?/./? s/NNS/s /,/, can/MD/can we/PRP/we reduce/VB/reduce the/DT/the number/NN/number of/IN/of dfs/NNS/dfs from/IN/from n/NN/n to/TO/to lets/NNS/lets say/VBP/say some/DT/some small/JJ/small number/NNP/number. let/NN/let ?/./? s/NNS/s say/VBP/say i/PRP/i take/VBP/take one/CD/one vertex/NN/vertex v/NN/v and/CC/and i/PRP/i do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from here/RB/here and/CC/and when/WRB/when i/PRP/i do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from here/RB/here /,/, i/PRP/i visit/VBP/visit all/DT/all the/DT/the vertices/NNS/vertices in/IN/in the/DT/the graph/NNP/graph. this/DT/this is/VBZ/is let/VB/let ?/./? s/NNS/s say/VBP/say the/DT/the dfs/NNS/dfs tree/VBP/tree i/PRP/i obtain/VBP/obtain and/CC/and if/IN/if these/DT/these were/VBD/were the/DT/the only/JJ/only vertices/NNS/vertices in/IN/in the/DT/the graph/NN/graph then/RB/then i/PRP/i have/VBP/have visited/VBN/visited all/DT/all the/DT/the vertices/NNS/vertices in/IN/in the/DT/the graph/NNP/graph. so/RB/so what/WP/what do/VBP/do i/PRP/i know/VB/know ?/./? i/PRP/i know/VBP/know that/IN/that there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from v/NN/v to/TO/to every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. if/IN/if dfs/NNS/dfs v/VBP/v visits/NNS/visits all/DT/all vertices/NNS/vertices in/IN/in graph/NN/graph g/NN/g then/RB/then there/RB/there exists/VBZ/exists a/DT/a path/NN/path from/IN/from v/NN/v to/TO/to every/DT/every vertex/NN/vertex in/IN/in g/NNP/g. suppose/NN/suppose we/PRP/we could/MD/could somehow/VB/somehow figure/NN/figure out/RP/out /,/, we/PRP/we could/MD/could also/RB/also do/VB/do the/DT/the following/NNP/following. we/PRP/we could/MD/could somehow/VB/somehow figure/NN/figure out/RP/out that/IN/that there/EX/there exists/NNS/exists or/CC/or i/PRP/i claim/VBP/claim there/RB/there exists/VBZ/exists a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex in/IN/in g/NN/g to/TO/to v/NNP/v. let/VB/let ?/./? s/NNS/s assume/VBP/assume this/DT/this is/VBZ/is the/DT/the case/NN/case /,/, suppose/NN/suppose this/DT/this is/VBZ/is true/JJ/true that/IN/that is/VBZ/is /:/[ hindi/NN/hindi conversation/NN/conversation /:/] then/RB/then does/VBZ/does that/IN/that imply/RB/imply that/IN/that the/DT/the graph/NN/graph is/VBZ/is strongly/RB/strongly connected/NNP/connected. basically/RB/basically we/PRP/we are/VBP/are saying/VBG/saying 1/CD/1 +/CD/+ 2/CD/2 implies/NNS/implies g/IN/g is/VBZ/is strongly/RB/strongly connected/NNP/connected. so/RB/so if/IN/if we/PRP/we have/VBP/have to/TO/to find/VB/find a/DT/a path/NN/path between/IN/between some/DT/some two/CD/two vertices/NNS/vertices like/IN/like say/NN/say x/NN/x and/CC/and y/NN/y /,/, so/RB/so what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? go/VB/go from/IN/from x/NN/x to/TO/to v/VB/v /,/, by/IN/by the/DT/the statement/NN/statement two/CD/two there/EX/there is/VBZ/is such/JJ/such a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex to/TO/to v/VB/v and/CC/and then/RB/then i/PRP/i go/VBP/go from/IN/from v/NN/v to/TO/to y/VB/y by/IN/by statement/NN/statement one/NNP/one. so/RB/so all/DT/all i/PRP/i need/VBP/need to/TO/to somehow/VB/somehow ensure/NN/ensure is/VBZ/is that/IN/that there/EX/there exist/NN/exist a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NN/graph to/TO/to v/NNP/v. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 25/CD/25 /CD/) how/WRB/how will/MD/will i/VB/i ensure/NN/ensure this/DT/this ?/./? this/DT/this says/VBZ/says that/IN/that there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from v/NN/v to/TO/to every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. if/IN/if i/PRP/i can/MD/can ensure/VB/ensure that/IN/that there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NN/graph to/TO/to v/VB/v /,/, then/RB/then i/PRP/i am/VBP/am done/NNP/done. how/WRB/how will/MD/will i/VB/i ensure/NN/ensure that/WDT/that from/IN/from every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NN/graph there/RB/there is/VBZ/is a/DT/a path/NN/path to/TO/to v/VB/v ?/./? /:/[ student/NN/student /:/: from/IN/from the/DT/the lower/JJR/lower most/JJS/most vertex/NN/vertex /,/, we/PRP/we are/VBP/are ending/VBG/ending first/JJ/first starting/NN/starting from/IN/from the/DT/the path/NN/path deepest/NN/deepest back/RB/back edge/NN/edge have/VBP/have as/RB/as a/DT/a back/NN/back edge/NN/edge /:/] /./. so/RB/so the/DT/the question/NN/question is/VBZ/is how/WRB/how do/VBP/do i/PRP/i ensure/VB/ensure that/IN/that there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex to/TO/to v/VB/v ?/./? /:/[ student/NN/student /:/: sir/NN/sir we/PRP/we can/MD/can back/VB/back edges/NNS/edges /:/] think/VBP/think of/IN/of something/NN/something new/JJ/new /NN/[ student/NN/student /:/: also/RB/also we/PRP/we need/VBP/need the/DT/the cross/NN/cross edges/NNS/edges to/TO/to if/IN/if there/EX/there are/VBP/are some/DT/some cross/NNS/cross edges/NNS/edges so/RB/so we/PRP/we can/MD/can go/VB/go along/IN/along from/IN/from them/PRP/them to/TO/to /VB/] /./. suppose/NN/suppose i/PRP/i were/VBD/were to/TO/to do/VB/do the/DT/the following/NNP/following. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 14/CD/14 /CD/) i/PRP/i took/VBD/took my/PRP$/my graph/NN/graph g/NN/g and/CC/and i/PRP/i reversed/VBD/reversed /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /,/, reverse/NN/reverse edges/NNS/edges to/TO/to get/VB/get a/DT/a graph/NN/graph g/NN/g sup/NN/sup r/NN/r /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /:/[ student/NN/student /:/: do/VBP/do dfs/NNS/dfs from/IN/from that/DT/that vertex/NN/vertex again/RB/again now/RB/now it/PRP/it look/VBP/look at/IN/at a/DT/a path/NN/path /:/] so/RB/so do/VBP/do dfs/NNS/dfs /:/[ student/NN/student /:/: that/IN/that gives/NNS/gives now/RB/now /VBP/] do/VBP/do dfs/NNS/dfs v/VB/v on/IN/on this/DT/this graph/NN/graph g/NN/g of/IN/of sup/NN/sup r/NN/r /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. /:/[ student/NN/student /:/: if/IN/if you/PRP/you get/VBP/get all/DT/all the/DT/the vertices/NNS/vertices /:/] /:/[ hindi/NN/hindi conversation/NN/conversation /:/] if/IN/if all/DT/all vertices/NNS/vertices are/VBP/are visited/VBN/visited then/RB/then this/DT/this implies/NNS/implies /,/, in/IN/in g/NN/g there/EX/there is/VBZ/is a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex to/TO/to v/NNP/v. yes/NNS/yes or/CC/or no/DT/no ?/./? /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /:/[ student/NN/student /:/: yes/NNS/yes sir/VBP/sir /:/] if/IN/if every/DT/every vertex/NN/vertex gets/VBZ/gets visited/VBN/visited in/IN/in this/DT/this dfs/NNS/dfs then/RB/then i/PRP/i can/MD/can say/VB/say that/IN/that the/DT/the graph/NN/graph is/VBZ/is strongly/RB/strongly connected/VBN/connected /-NONE-/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. in/IN/in this/DT/this graph/NN/graph there/RB/there is/VBZ/is no/DT/no path/NN/path from/IN/from v/NN/v to/TO/to this/DT/this vertex/NN/vertex which/WDT/which means/VBZ/means that/DT/that in/IN/in the/DT/the original/JJ/original graph/NN/graph there/EX/there is/VBZ/is no/DT/no path/NN/path from/IN/from this/DT/this vertex/NN/vertex to/TO/to this/DT/this vertex/NN/vertex which/WDT/which means/VBZ/means that/DT/that the/DT/the original/JJ/original graph/NN/graph is/VBZ/is not/RB/not strongly/RB/strongly connected/VBN/connected /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 01/CD/01 /CD/) /CD/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. /:/[ student/NN/student /:/: in/IN/in adjacency/NN/adjacency list/NN/list we/PRP/we can/MD/can fetch/VB/fetch change/NN/change the/DT/the function/NN/function go/NN/go along/IN/along /NNP/] we/PRP/we can/MD/can also/RB/also change/VB/change the/DT/the function/NN/function dfs/VBZ/dfs instead/RB/instead of/IN/of looking/VBG/looking at/IN/at out/IN/out adjacency/NN/adjacency edges/NNS/edges /,/, we/PRP/we can/MD/can look/VB/look at/IN/at inadjacency/NN/inadjacency edges/NNS/edges and/CC/and we/PRP/we don/VBP/don ?/./? t/NN/t even/RB/even have/VB/have to/TO/to reverse/VB/reverse the/DT/the graph/NN/graph then/RB/then /./[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so essentially/RB/essentially by/IN/by using/VBG/using two/CD/two dfs/NNS/dfs ?/./? s/NNS/s /,/, you/PRP/you can/MD/can figure/VB/figure out/RP/out if/IN/if the/DT/the graph/NN/graph is/VBZ/is strongly/RB/strongly connected/VBN/connected or/CC/or not/NNP/not. so/RB/so everyone/NN/everyone understands/NNS/understands the/DT/the procedure/NNP/procedure. let/NN/let me/PRP/me write/VBP/write down/RP/down what/WP/what the/DT/the procedure/NN/procedure is/NNP/is. pick/NN/pick an/DT/an arbitrary/JJ/arbitrary vertex/NN/vertex v/NN/v /,/, do/VBP/do dfs/NNS/dfs v/VB/v /,/, reverse/NN/reverse g/NN/g /,/, do/VBP/do dfs/NNS/dfs v/VB/v on/IN/on g/NN/g reverse/NN/reverse /,/, if/IN/if all/PDT/all vertices/NNS/vertices are/VBP/are visited/VBN/visited in/IN/in both/DT/both dfs/NNS/dfs ?/./? s/NNS/s then/RB/then g/JJ/g is/VBZ/is strongly/RB/strongly connected/VBN/connected else/RB/else g/JJ/g is/VBZ/is not/RB/not strongly/RB/strongly connected/VBN/connected /-NONE-/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 19/CD/19 /CD/) we/PRP/we will/MD/will now/RB/now try/VB/try to/TO/to do/VB/do it/PRP/it with/IN/with one/CD/one dfs/NNP/dfs. it/PRP/it ?/./? s/NNS/s an/DT/an academic/JJ/academic exercise/NN/exercise for/IN/for this/DT/this problem/NN/problem but/CC/but at/IN/at least/JJS/least you/PRP/you will/MD/will learn/VB/learn the/DT/the properties/NNS/properties of/IN/of dfs/NNS/dfs and/CC/and because/IN/because this/DT/this is/VBZ/is perfectly/RB/perfectly fine/NN/fine algorithm/NN/algorithm and/CC/and it/PRP/it just/RB/just requires/VBZ/requires two/CD/two dfs/NNS/dfs ?/./? s/NNS/s to/TO/to do/VB/do it/NNP/it. so/RB/so let/VB/let ?/./? s/NNS/s look/VBP/look at/IN/at another/DT/another way/NN/way of/IN/of checking/NN/checking if/IN/if a/DT/a graph/NN/graph is/VBZ/is strongly/RB/strongly connected/VBN/connected or/CC/or not/NNP/not. now/RB/now we/PRP/we will/MD/will use/VB/use our/PRP$/our whole/JJ/whole gammon/NN/gammon of/IN/of definitions/NNS/definitions and/CC/and terminologies/NNP/terminologies. so/RB/so what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do now/RB/now ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do a/DT/a dfs/NN/dfs /,/, we/PRP/we start/VBP/start from/IN/from a/DT/a vertex/NN/vertex and/CC/and we/PRP/we do/VBP/do a/DT/a dfs/NNP/dfs. so/RB/so let/VB/let ?/./? s/NNS/s say/VBP/say these/DT/these are/VBP/are the/DT/the red/VBN/red edges/NNS/edges which/WDT/which form/NN/form the/DT/the dfs/NNS/dfs tree/NNP/tree. /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] suppose/NN/suppose this/DT/this is/VBZ/is what/WP/what i/PRP/i get/VBP/get my/PRP$/my dfs/NNS/dfs tree/VBP/tree as/NNP/as. now/RB/now i/PRP/i remarked/VBD/remarked in/IN/in the/DT/the last/JJ/last class/NN/class that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use ideas/NNS/ideas similar/JJ/similar to/TO/to what/WP/what we/PRP/we developed/VBD/developed for/IN/for two/CD/two edge/NN/edge connectivity/NNP/connectivity. so/RB/so two/CD/two edge/NN/edge connectivity/NN/connectivity /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /,/, we/PRP/we were/VBD/were saying/VBG/saying that/IN/that when/WRB/when we/PRP/we are/VBP/are back/RB/back tracking/VBG/tracking /,/, lets/NNS/lets say/VBP/say backtracking/VBG/backtracking from/IN/from this/DT/this vertex/NN/vertex i/PRP/i am/VBP/am going/VBG/going back/RB/back to/TO/to the/DT/the parent/NN/parent because/IN/because i/PRP/i have/VBP/have finished/VBN/finished everything/NNP/everything. i/PRP/i ensure/VBP/ensure that/IN/that there/EX/there is/VBZ/is some/DT/some edge/NN/edge which/WDT/which goes/VBZ/goes from/IN/from this/DT/this sub/NN/sub tree/NN/tree to/TO/to it/PRP/it can/MD/can only/RB/only go/VB/go to/TO/to an/DT/an ancestor/NN/ancestor or/CC/or above/IN/above because/IN/because we/PRP/we said/VBD/said there/RB/there are/VBP/are only/RB/only back/RB/back edges/NNS/edges in/IN/in the/DT/the case/NN/case of/IN/of undirected/VBN/undirected dfs/NNP/dfs. so/RB/so if/IN/if an/DT/an edge/NN/edge goes/VBZ/goes out/RP/out of/IN/of here/RB/here /,/, it/PRP/it can/MD/can not/RB/not go/VB/go to/TO/to one/CD/one of/IN/of these/DT/these nodes/NNP/nodes. it/PRP/it can/MD/can go/VB/go only/RB/only to/TO/to an/DT/an ancestor/NNP/ancestor. so/RB/so we/PRP/we said/VBD/said we/PRP/we would/MD/would like/VB/like to/TO/to have/VB/have one/CD/one such/JJ/such edge/NNP/edge. now/RB/now we/PRP/we need/VBP/need similar/JJ/similar such/JJ/such thing/NN/thing in/IN/in the/DT/the case/NN/case of/IN/of strong/JJ/strong connectivity/NNP/connectivity. from/IN/from here/RB/here we/PRP/we would/MD/would like/VB/like that/IN/that there/EX/there is/VBZ/is some/DT/some edge/NN/edge going/VBG/going out/RP/out /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. what/WP/what kind/NN/kind of/IN/of edges/NNS/edges will/MD/will be/VB/be going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree ?/./? only/RB/only back/RB/back edges/NNS/edges but/CC/but if/IN/if this/DT/this were/VBD/were the/DT/the sub/NN/sub tree/NN/tree i/PRP/i was/VBD/was considering/VBG/considering then/RB/then there/RB/there could/MD/could also/RB/also be/VB/be either/DT/either there/EX/there is/VBZ/is back/RB/back edge/NN/edge out/IN/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree or/CC/or there/EX/there is/VBZ/is a/DT/a cross/NN/cross edge/NN/edge out/IN/out of/IN/of this/DT/this sub/NN/sub tree/NNP/tree. so/RB/so i/PRP/i could/MD/could also/RB/also have/VB/have an/DT/an edge/NN/edge going/VBG/going like/IN/like this/NNP/this. it/PRP/it can/MD/can happen/NNP/happen. so/RB/so this/DT/this edge/NN/edge is/VBZ/is also/RB/also an/DT/an edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an edge/NN/edge going/VBG/going out/RP/out of/IN/of the/DT/the sub/NN/sub tree/NN/tree i/PRP/i am/VBP/am happy/NNP/happy. this/DT/this is/VBZ/is the/DT/the only/JJ/only thing/NN/thing we/PRP/we will/MD/will require/NNP/require. clearly/RB/clearly this/DT/this is/VBZ/is necessary/JJ/necessary /,/, if/IN/if from/IN/from this/DT/this sub/NN/sub tree/NN/tree there/EX/there is/VBZ/is no/DT/no edge/NN/edge going/VBG/going out/RP/out then/RB/then this/DT/this graph/NN/graph is/VBZ/is not/RB/not strongly/RB/strongly connected/NNP/connected. why/WRB/why ?/./? because/IN/because then/RB/then you/PRP/you can/MD/can only/RB/only enter/VB/enter the/DT/the sub/NN/sub tree/NN/tree /,/, we/PRP/we can/MD/can only/RB/only come/VB/come to/TO/to these/DT/these set/NN/set of/IN/of vertices/NNS/vertices /,/, we/PRP/we can/MD/can go/VB/go out/RP/out of/IN/of this/DT/this set/NN/set of/IN/of vertices/NNP/vertices. what/WP/what i/PRP/i mean/VBP/mean by/IN/by that/DT/that is/VBZ/is if/IN/if there/EX/there were/VBD/were no/DT/no edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree then/RB/then i/PRP/i can/MD/can not/RB/not go/VB/go from/IN/from this/DT/this vertex/NN/vertex to/TO/to the/DT/the root/NN/root for/IN/for instance/NN/instance to/TO/to vertex/VB/vertex v/NN/v because/IN/because there/EX/there is/VBZ/is no/DT/no edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this 4/CD/4 edges/NNP/edges. this/DT/this is/VBZ/is like/IN/like an/DT/an island/NN/island in/IN/in itself/PRP/itself /,/, you/PRP/you can/MD/can only/RB/only come/VB/come into/IN/into here/RB/here but/CC/but you/PRP/you can/MD/can not/RB/not go/VB/go out/RP/out of/IN/of here/NNP/here. /NNP/[ student/NN/student /:/: but/CC/but if/IN/if an/DT/an edge/NN/edge is/VBZ/is going/VBG/going out/RP/out what/WP/what do/VBP/do you/PRP/you do/VB/do ?/./? /:/] so/RB/so all/DT/all i/PRP/i am/VBP/am saying/VBG/saying is/VBZ/is that/IN/that we/PRP/we require/VBP/require that/IN/that it/PRP/it is/VBZ/is necessary/JJ/necessary that/IN/that an/DT/an edge/NN/edge go/NN/go out/IN/out whether/IN/whether that/DT/that is/VBZ/is sufficient/JJ/sufficient /,/, we/PRP/we have/VBP/have to/TO/to figure/VB/figure out/NNP/out. it/PRP/it is/VBZ/is clearly/RB/clearly necessary/JJ/necessary that/IN/that an/DT/an edge/NN/edge goes/VBZ/goes out/RP/out of/IN/of every/DT/every sub/NN/sub tree/NNP/tree. you/PRP/you understand/VBP/understand the/DT/the difference/NN/difference between/IN/between necessary/JJ/necessary and/CC/and sufficiency/NNP/sufficiency. so/RB/so it/PRP/it is/VBZ/is necessary/JJ/necessary that/IN/that an/DT/an edge/NN/edge go/NN/go out/IN/out of/IN/of every/DT/every sub/NN/sub tree/NNP/tree. you/PRP/you understand/VBP/understand what/WP/what i/PRP/i mean/VBP/mean by/IN/by out/RP/out of/IN/of every/DT/every sub/NN/sub tree/NN/tree /,/, so/RB/so you/PRP/you are/VBP/are looking/VBG/looking at/IN/at the/DT/the sub/NN/sub tree/NNP/tree. what/WP/what is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree here/RB/here ?/./? it/PRP/it is/VBZ/is the/DT/the descendance/NN/descendance of/IN/of any/DT/any one/CD/one vertex/NN/vertex /,/, take/VBP/take any/DT/any one/CD/one vertex/NN/vertex /,/, look/NN/look at/IN/at all/DT/all its/PRP$/its descendant/JJ/descendant that/IN/that ?/./? s/NNS/s a/DT/a sub/NN/sub tree/NN/tree we/PRP/we are/VBP/are interested/JJ/interested in/IN/in and/CC/and there/EX/there has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least one/CD/one edge/NN/edge going/VBG/going out/RP/out of/IN/of that/NNP/that. this/DT/this is/VBZ/is clearly/RB/clearly necessary/JJ/necessary /NN/[ hindi/NN/hindi conversation/NN/conversation /:/] no/DT/no edges/NNS/edges is/VBZ/is going/VBG/going out/RP/out of/IN/of that/DT/that sub/NN/sub tree/NN/tree then/RB/then we/PRP/we can/MD/can stop/VB/stop the/DT/the process/NN/process at/IN/at that/DT/that point/NN/point /,/, stop/VB/stop our/PRP$/our dfs/NNS/dfs and/CC/and say/VB/say that/IN/that this/DT/this graph/NN/graph is/VBZ/is not/RB/not strongly/RB/strongly connected/NNP/connected. now/RB/now we/PRP/we will/MD/will see/VB/see how/WRB/how we/PRP/we can/MD/can check/VB/check this/DT/this thing/NNP/thing. we/PRP/we will/MD/will look/VB/look at/IN/at the/DT/the procedure/NN/procedure /,/, we/PRP/we will/MD/will look/VB/look at/IN/at what/WP/what modification/NN/modification to/TO/to make/VB/make to/TO/to the/DT/the dfs/NNS/dfs so/RB/so that/IN/that we/PRP/we can/MD/can check/VB/check that/IN/that there/EX/there is/VBZ/is an/DT/an edge/NN/edge going/VBG/going out/RP/out of/IN/of every/DT/every sub/NN/sub tree/NNP/tree. the/DT/the check/NN/check would/MD/would be/VB/be very/RB/very similar/JJ/similar to/TO/to what/WP/what we/PRP/we did/VBD/did for/IN/for the/DT/the case/NN/case of/IN/of two/CD/two edge/NN/edge connectivity/NN/connectivity but/CC/but now/RB/now let/VBP/let ?/./? s/NNS/s see/VBP/see that/IN/that this/DT/this condition/NN/condition is/VBZ/is also/RB/also sufficient/NNP/sufficient. if/IN/if from/IN/from every/DT/every sub/NN/sub tree/NN/tree there/EX/there is/VBZ/is an/DT/an edge/NN/edge going/VBG/going out/RP/out then/RB/then the/DT/the graph/NN/graph is/VBZ/is strongly/RB/strongly connected/VBN/connected /-NONE-/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. why/WRB/why ?/./? /:/[ student/NN/student /:/: /:/] why/WRB/why /:/[ student/NN/student /:/: arrival/NN/arrival time/NN/time is/VBZ/is the/DT/the difficulty/NN/difficulty /:/] of/IN/of what/WP/what /-NONE-/[ student/NN/student /:/: all/DT/all the/DT/the sub/NN/sub trees/NNS/trees if/IN/if there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from here/RB/here to/TO/to some/DT/some other/JJ/other sub/NN/sub tree/NN/tree /:/] /./. /:/[ student/NN/student /:/: the/DT/the vertex/NN/vertex that/IN/that is/VBZ/is feature/NN/feature will/MD/will have/VB/have a/DT/a lower/JJR/lower arrival/NN/arrival time/NN/time /:/] will/MD/will have/VB/have a/DT/a lower/JJR/lower arrival/NN/arrival time/NN/time than/IN/than whom/WP/whom /-NONE-/[ student/NN/student /:/: then/RB/then the/DT/the vertex/NN/vertex in/IN/in all/DT/all the/DT/the vertices/NNS/vertices of/IN/of the/DT/the sub/NN/sub tree/NN/tree /:/] close/NN/close /,/, almost/RB/almost there/NNP/there. so/RB/so what/WP/what am/NN/am i/PRP/i going/VBG/going to/TO/to do/VB/do ?/./? /:/[ hindi/NN/hindi conversation/NN/conversation /:/] from/IN/from the/DT/the root/NN/root i/PRP/i can/MD/can reach/VB/reach every/DT/every vertex/NNP/vertex. now/RB/now all/DT/all i/PRP/i have/VBP/have to/TO/to show/VB/show you/PRP/you is/VBZ/is that/IN/that from/IN/from every/DT/every vertex/NN/vertex i/PRP/i can/MD/can reach/VB/reach the/DT/the root/NNP/root. if/IN/if i/PRP/i can/MD/can reach/VB/reach the/DT/the root/NN/root from/IN/from every/DT/every vertex/NN/vertex i/PRP/i am/VBP/am done/NNP/done. yes/NNS/yes /,/, because/IN/because then/RB/then how/WRB/how do/VBP/do i/PRP/i find/VBP/find a/DT/a path/NN/path between/IN/between x/NN/x and/CC/and y/NN/y ?/./? i/PRP/i go/VBP/go from/IN/from x/NN/x to/TO/to the/DT/the root/NN/root and/CC/and from/IN/from the/DT/the root/NN/root i/PRP/i go/VBP/go to/TO/to y/NNP/y. so/RB/so all/DT/all i/PRP/i have/VBP/have to/TO/to show/VB/show you/PRP/you is/VBZ/is a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex to/TO/to the/DT/the root/NNP/root. so/RB/so we/PRP/we want/VBP/want to/TO/to find/VB/find a/DT/a path/NN/path from/IN/from every/DT/every vertex/NN/vertex to/TO/to the/DT/the root/NN/root /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. we/PRP/we take/VBP/take some/DT/some vertex/NN/vertex /,/, let/VB/let ?/./? s/NNS/s say/VBP/say this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex x/NN/x i/PRP/i want/VBP/want to/TO/to go/VB/go from/IN/from x/NN/x to/TO/to the/DT/the root/NN/root v/CC/v. how/WRB/how will/MD/will i/VB/i go/VB/go ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at x/NN/x /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /,/, x/NN/x is/VBZ/is some/DT/some vertex/NN/vertex somewhere/RB/somewhere in/IN/in my/PRP$/my dfs/NNS/dfs /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. will/MD/will it/PRP/it be/VB/be smaller/JJR/smaller than/IN/than x/NN/x or/CC/or larger/JJR/larger than/IN/than x/NN/x ?/./? it/PRP/it is/VBZ/is smaller/JJR/smaller than/IN/than x/NN/x and/CC/and /CD/[ hindi/NN/hindi conversation/NN/conversation /:/] smaller/JJR/smaller because/IN/because this/DT/this is/VBZ/is a/DT/a cross/NN/cross edge/NNP/edge. you/PRP/you would/MD/would have/VB/have first/JJ/first come/NN/come here/RB/here in/IN/in fact/NN/fact /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so let/VB/let ?/./? s/NNS/s give/VBP/give this/DT/this name/NN/name /,/, suppose/NN/suppose this/DT/this node/NN/node is/VBZ/is w/NN/w so/RB/so i/PRP/i can/MD/can reach/VB/reach a/DT/a node/NN/node w/NN/w /,/, so/RB/so what/WP/what have/VBP/have we/PRP/we said/VBD/said ?/./? we/PRP/we have/VBP/have said/VBN/said that/IN/that from/IN/from x/NN/x /,/, can/MD/can i/PRP/i go/VB/go from/IN/from x/NN/x to/TO/to w/VB/w ?/./? yes/NNS/yes /,/, why/WRB/why ?/./? because/IN/because this/DT/this is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree /,/, these/DT/these are/VBP/are all/DT/all descendant/JJ/descendant this/DT/this node/NN/node is/VBZ/is also/RB/also a/DT/a descendant/JJ/descendant of/IN/of x/NN/x which/WDT/which means/VBZ/means that/DT/that i/PRP/i can/MD/can come/VB/come to/TO/to this/DT/this node/NN/node and/CC/and then/RB/then i/PRP/i can/MD/can take/VB/take this/DT/this edge/NN/edge and/CC/and get/VB/get to/TO/to w/NNP/w. so/RB/so what/WP/what ?/./? s/NNS/s the/DT/the big/JJ/big deal/NN/deal about/IN/about to/TO/to getting/NN/getting to/TO/to w/VB/w ?/./? from/IN/from x/NN/x i/PRP/i can/MD/can get/VB/get to/TO/to a/DT/a node/NN/node which/WDT/which has/VBZ/has a/DT/a strictly/RB/strictly smaller/JJR/smaller arrival/NN/arrival time/NN/time than/IN/than x/NNP/x. now/RB/now from/IN/from w/NN/w i/PRP/i can/MD/can repeat/VB/repeat the/DT/the same/JJ/same process/NN/process from/IN/from w/NN/w /,/, i/PRP/i can/MD/can get/VB/get to/TO/to a/DT/a node/NN/node which/WDT/which has/VBZ/has a/DT/a strictly/RB/strictly smaller/JJR/smaller arrival/NN/arrival time/NN/time than/IN/than w/NN/w which/WDT/which means/VBZ/means that/DT/that may/MD/may be/VB/be /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. now/RB/now what/WP/what do/VBP/do you/PRP/you know/VB/know ?/./? you/PRP/you know/VBP/know that/IN/that the/DT/the arrival/NN/arrival time/NN/time of/IN/of x/NN/x is/VBZ/is strictly/RB/strictly larger/JJR/larger than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of w/NN/w which/WDT/which is/VBZ/is strictly/RB/strictly larger/JJR/larger than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of a/DT/a which/WDT/which is/VBZ/is strictly/RB/strictly larger/JJR/larger than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of c/NN/c /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. i/PRP/i can/MD/can get/VB/get to/TO/to a/DT/a node/NN/node with/IN/with the/DT/the smaller/JJR/smaller arrival/NN/arrival time/NN/time /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /:/[ student/NN/student /:/: when/WRB/when you/PRP/you reach/VBP/reach /:/] when/WRB/when i/PRP/i reach/VBP/reach the/DT/the root/NNP/root. so/RB/so that/IN/that will/MD/will give/VB/give me/PRP/me a/DT/a path/NN/path from/IN/from this/DT/this node/NN/node to/TO/to the/DT/the root/NN/root /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. just/RB/just this/DT/this requirement/NN/requirement that/IN/that an/DT/an edge/NN/edge go/NN/go out/IN/out of/IN/of every/DT/every sub/NN/sub tree/NN/tree is/VBZ/is both/DT/both necessary/JJ/necessary and/CC/and sufficient/NNP/sufficient. just/RB/just this/DT/this requirement/NN/requirement and/CC/and this/DT/this is/VBZ/is an/DT/an easy/JJ/easy requirement/NN/requirement to/TO/to check/VB/check and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do that/DT/that next/NNP/next. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 44/CD/44 /CD/) so/RB/so how/WRB/how am/NN/am i/PRP/i going/VBG/going to/TO/to check/VB/check this/DT/this requirement/NN/requirement ?/./? how/WRB/how should/MD/should we/PRP/we modify/VB/modify dfs/NNS/dfs so/IN/so that/IN/that we/PRP/we can/MD/can check/VB/check if/IN/if there/EX/there is/VBZ/is an/DT/an edge/NN/edge going/VBG/going out/RP/out of/IN/of every/DT/every sub/NN/sub tree/NN/tree ?/./? i/PRP/i am/VBP/am using/VBG/using the/DT/the sub/NN/sub word/NN/word sub/NN/sub tree/NN/tree a/DT/a bit/NN/bit loosely/RB/loosely /,/, here/RB/here by/IN/by sub/NN/sub tree/NN/tree i/PRP/i mean/VBP/mean the/DT/the part/NN/part of/IN/of that/DT/that tree/NN/tree which/WDT/which is/VBZ/is composed/VBN/composed of/IN/of the/DT/the descendants/NNS/descendants of/IN/of any/DT/any vertex/NNP/vertex. so/RB/so take/VB/take any/DT/any vertex/NN/vertex /,/, look/NN/look at/IN/at all/DT/all its/PRP$/its descendants/NNS/descendants /,/, that/IN/that part/NN/part of/IN/of the/DT/the tree/NN/tree is/VBZ/is what/WP/what i/PRP/i am/VBP/am calling/VBG/calling a/DT/a sub/NN/sub tree/NNP/tree. the/DT/the generic/JJ/generic definition/NN/definition of/IN/of a/DT/a sub/NN/sub tree/NN/tree is/VBZ/is slightly/RB/slightly different/NNP/different. how/WRB/how will/MD/will you/PRP/you modify/VB/modify dfs/NNS/dfs to/TO/to be/VB/be able/JJ/able to/TO/to this/DT/this ?/./? in/IN/in the/DT/the case/NN/case of/IN/of two/CD/two edge/NN/edge connectivity/NN/connectivity we/PRP/we had/VBD/had modified/VBN/modified dfs/NNS/dfs so/RB/so that/IN/that it/PRP/it returns/VBZ/returns to/TO/to us/PRP/us the/DT/the deepest/JJS/deepest back/RB/back edge/NNP/edge. the/DT/the arrival/NN/arrival time/NN/time of/IN/of the/DT/the node/NN/node to/TO/to which/WDT/which there/EX/there is/VBZ/is a/DT/a back/RB/back edge/NN/edge from/IN/from the/DT/the sub/NN/sub tree/NN/tree and/CC/and the/DT/the smallest/JJS/smallest such/JJ/such arrival/NN/arrival time/NN/time /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. in/IN/in the/DT/the case/NN/case of/IN/of two/CD/two edge/NN/edge connectivity/NN/connectivity what/WP/what we/PRP/we have/VBP/have done/VBN/done was/VBD/was that/IN/that we/PRP/we would/MD/would return/VB/return from/IN/from every/DT/every sub/NN/sub tree/NN/tree /,/, would/MD/would return/VB/return the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge by/IN/by that/DT/that we/PRP/we mean/VBP/mean the/DT/the arrival/NN/arrival time/NN/time of/IN/of this/DT/this node/NNP/node. now/RB/now we/PRP/we will/MD/will do/VB/do the/DT/the same/JJ/same thing/NN/thing here/NNP/here. this/DT/this dfs/VBZ/dfs would/MD/would return/VB/return to/TO/to us/PRP/us /,/, not/RB/not the/DT/the deepest/JJS/deepest back/RB/back edge/NN/edge anymore/IN/anymore /,/, the/DT/the node/NN/node with/IN/with the/DT/the smallest/JJS/smallest arrival/NN/arrival time/NN/time to/TO/to which/WDT/which there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NNP/tree. so/RB/so let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down /,/, dfs/NNS/dfs returns/NNS/returns the/DT/the smallest/JJS/smallest arrival/NN/arrival time/NN/time to/TO/to which/WDT/which there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from this/DT/this sub/NN/sub tree/NN/tree rooted/VBD/rooted at/IN/at let/NN/let ?/./? s/NNS/s say/VBP/say v/NNP/v. so/RB/so dfs/VBZ/dfs v/NN/v returns/NNS/returns this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 29/CD/29 /CD/) /./. what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to say/VB/say now/RB/now is/VBZ/is the/DT/the following/NNP/following. when/WRB/when i/PRP/i do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from v/NN/v /,/, there/EX/there could/MD/could be/VB/be many/JJ/many edges/NNS/edges going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NNP/tree. let/NN/let ?/./? s/NNS/s say/VBP/say there/RB/there are/VBP/are four/CD/four edges/NNS/edges going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree and/CC/and edge/NN/edge which/WDT/which is/VBZ/is going/VBG/going out/RP/out of/IN/of the/DT/the sub/NN/sub tree/NN/tree will/MD/will either/VB/either be/VB/be a/DT/a back/NN/back edge/NN/edge or/CC/or a/DT/a cross/NN/cross edge/NNP/edge. forward/NN/forward edge/NN/edge can/MD/can not/RB/not be/VB/be going/VBG/going out/RP/out of/IN/of the/DT/the sub/NN/sub tree/NN/tree /,/, it/PRP/it can/MD/can only/RB/only be/VB/be coming/VBG/coming in/IN/in to/TO/to the/DT/the sub/NN/sub tree/NN/tree or/CC/or if/IN/if it/PRP/it starts/VBZ/starts from/IN/from here/RB/here in/IN/in the/DT/the sub/NN/sub tree/NN/tree it/PRP/it will/MD/will go/VB/go within/IN/within the/DT/the sub/NN/sub tree/NN/tree only/NNP/only. so/RB/so now/RB/now essentially/RB/essentially i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at these/DT/these four/CD/four arrival/NN/arrival times/NNS/times and/CC/and take/VB/take the/DT/the smallest/JJS/smallest amongst/NN/amongst them/PRP/them and/CC/and that/IN/that is/VBZ/is the/DT/the quantity/NN/quantity the/DT/the dfs/NNS/dfs we/PRP/we will/MD/will return/VB/return to/TO/to v/NNP/v. if/IN/if this/DT/this arrival/NN/arrival time/NN/time was/VBD/was a/DT/a /,/, this/DT/this was/VBD/was b/NN/b /,/, this/DT/this was/VBD/was c/NN/c /,/, this/DT/this was/VBD/was d/VBN/d /,/, dfs/NNS/dfs v/VBP/v returns/NNS/returns min/IN/min of/IN/of a/DT/a b/NN/b c/NN/c d/NNP/d. clearly/RB/clearly b/VB/b is/VBZ/is smaller/JJR/smaller than/IN/than a/DT/a and/CC/and d/NN/d is/VBZ/is also/RB/also smaller/JJR/smaller than/IN/than c/NNP/c. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26.45/CD/26.45 /CD/) this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have to/TO/to return/NNP/return. now/RB/now we/PRP/we have/VBP/have to/TO/to figure/VB/figure out/RP/out how/WRB/how we/PRP/we will/MD/will return/VB/return this/DT/this thing/NNP/thing. note/NN/note that/IN/that dfs/NNS/dfs is/VBZ/is a/DT/a recursive/JJ/recursive procedure/NN/procedure /,/, when/WRB/when i/PRP/i do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from vertex/NN/vertex v/NN/v /,/, i/PRP/i end/VBP/end up/RP/up doing/VBG/doing a/DT/a dfs/NN/dfs from/IN/from its/PRP$/its neighboring/NN/neighboring vertices/NNP/vertices. so/RB/so suppose/RB/suppose its/PRP$/its three/CD/three neighboring/VBG/neighboring vertices/NNS/vertices were/VBD/were x/NN/x /,/, y/NN/y and/CC/and z/NN/z so/IN/so i/PRP/i will/MD/will do/VB/do a/DT/a dfs/NN/dfs from/IN/from here/RB/here i/PRP/i will/MD/will get/VB/get this/DT/this tree/NN/tree /,/, let/VB/let ?/./? s/NNS/s say/VBP/say i/PRP/i do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from here/RB/here i/PRP/i get/VBP/get this/DT/this tree/NN/tree /,/, i/PRP/i do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from there/EX/there i/PRP/i get/VBP/get that/IN/that tree/NN/tree /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 21/CD/21 /CD/) /./. now/RB/now this/DT/this dfs/NNS/dfs x/VBP/x will/MD/will return/VB/return something/NN/something to/TO/to me/NNP/me. so/RB/so it/PRP/it will/MD/will look/VB/look at/IN/at all/DT/all the/DT/the edges/NNS/edges which/WDT/which are/VBP/are going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree and/CC/and look/VB/look at/IN/at the/DT/the node/NN/node with/IN/with the/DT/the smallest/JJS/smallest arrival/NN/arrival time/NN/time to/TO/to which/WDT/which there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from here/NNP/here. similarly/RB/similarly dfs/VBZ/dfs y/NN/y would/MD/would return/VB/return something/NN/something to/TO/to me/PRP/me and/CC/and dfs/NNS/dfs z/VBP/z would/MD/would return/VB/return something/NN/something to/TO/to me/NNP/me. so/RB/so what/WP/what is/VBZ/is the/DT/the value/NN/value of/IN/of dfs/NNS/dfs v/VBP/v going/VBG/going to/TO/to be/VB/be ?/./? dfs/NNS/dfs v/VBP/v would/MD/would have/VB/have a/DT/a value/NN/value /,/, we/PRP/we have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the edge/NN/edge going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NNP/tree. so/RB/so an/DT/an edge/NN/edge which/WDT/which goes/VBZ/goes out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree would/MD/would be/VB/be an/DT/an edge/NN/edge going/VBG/going out/RP/out of/IN/of here/RB/here or/CC/or out/IN/out of/IN/of here/RB/here or/CC/or out/IN/out of/IN/of here/RB/here but/CC/but an/DT/an edge/NN/edge going/VBG/going out/RP/out of/IN/of here/RB/here could/MD/could end/VB/end up/RP/up here/RB/here itself/NNP/itself. so/RB/so it/PRP/it is/VBZ/is not/RB/not really/RB/really going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree /:/[ student/NN/student /:/: we/PRP/we have/VBP/have to/TO/to check/VB/check it/PRP/it with/IN/with arrival/JJ/arrival time/NN/time of/IN/of the/NNP/the.. then/RB/then it/PRP/it will/MD/will not/RB/not /VB/] and/CC/and we/PRP/we will/MD/will also/RB/also look/VB/look at/IN/at v/NN/v of/IN/of course/NNP/course. so/RB/so from/IN/from v/NN/v we/PRP/we will/MD/will look/VB/look at/IN/at the/DT/the back/NN/back edges/NNS/edges out/IN/out of/IN/of v/NN/v and/CC/and cross/NN/cross edges/NNS/edges out/IN/out of/IN/of v/NNP/v. so/RB/so we/PRP/we will/MD/will basically/RB/basically look/VB/look at/IN/at all/DT/all the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of here/RB/here /,/, all/DT/all the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of here/RB/here all/DT/all the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of here/RB/here and/CC/and all/DT/all the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of v/NN/v and/CC/and take/VB/take the/DT/the minimum/JJ/minimum of/IN/of their/PRP$/their arrival/NN/arrival times/NNP/times. when/WRB/when will/MD/will the/DT/the edge/NN/edge be/VB/be going/VBG/going out/RP/out of/IN/of this/DT/this sub/NN/sub tree/NN/tree ?/./? when/WRB/when that/DT/that arrival/NN/arrival time/NN/time is/VBZ/is less/JJR/less than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of v/NN/v /:/[ hindi/NN/hindi conversation/NN/conversation /:/] there/EX/there is/VBZ/is an/DT/an edge/NN/edge going/VBG/going out/RP/out but/CC/but /NNP/[ hindi/NN/hindi conversation/NN/conversation /:/] there/EX/there is/VBZ/is no/DT/no edge/NN/edge going/VBG/going out/RP/out /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so you/PRP/you have/VB/have to/TO/to check/VB/check that/IN/that /CD/[ hindi/NN/hindi conversation/NN/conversation /:/] that/IN/that is/VBZ/is less/JJR/less than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of v/NNP/v. if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than the/DT/the arrival/NN/arrival time/NN/time of/IN/of v/NN/v then/RB/then that/IN/that means/NNS/means that/WDT/that the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of the/DT/the sub/NN/sub tree/NN/tree and/CC/and we/PRP/we are/VBP/are okay/RB/okay if/IN/if it/PRP/it is/VBZ/is not/RB/not less/JJR/less than/IN/than arrival/NN/arrival time/NN/time of/IN/of v/NN/v then/RB/then we/PRP/we can/MD/can stop/VB/stop the/DT/the procedure/NN/procedure and/CC/and say/VB/say that/IN/that the/DT/the graph/NN/graph is/VBZ/is not/RB/not strongly/RB/strongly connected/NNP/connected. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29.36/CD/29.36 /CD/) so/RB/so now/RB/now i/PRP/i just/RB/just have/VBP/have to/TO/to write/VB/write the/DT/the code/NN/code for/IN/for this/NNP/this. so/RB/so what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? let/VB/let ?/./? s/NNS/s call/VBP/call this/DT/this a/DT/a strongly/RB/strongly connected/NNP/connected. so/RB/so what/WP/what is/VBZ/is strongly/RB/strongly connected/VBN/connected going/VBG/going to/TO/to do/VB/do ?/./? so/RB/so first/RB/first it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be setting/VBG/setting up/RP/up the/DT/the arrival/NN/arrival time/NN/time of/IN/of the/DT/the vertex/NN/vertex v/CC/v. now/RB/now what/WP/what should/MD/should i/VB/i do/VBP/do next/JJ/next ?/./? i/PRP/i need/VBP/need to/TO/to keep/VB/keep track/NN/track of/IN/of this/DT/this minimum/JJ/minimum so/RB/so i/PRP/i need/VBP/need a/DT/a variable/JJ/variable for/IN/for that/DT/that so/RB/so let/VB/let me/PRP/me declare/VB/declare some/DT/some variable/NNP/variable. what/WP/what should/MD/should we/PRP/we call/VBP/call it/PRP/it ?/./? min/NN/min /,/, no/DT/no min/NN/min is/VBZ/is for/IN/for the/DT/the function/NN/function so/RB/so what/WP/what shall/MD/shall i/PRP/i call/VBP/call it/PRP/it ?/./? you/PRP/you can/MD/can ?/./? t/VB/t think/NN/think of/IN/of a/DT/a name/NN/name of/IN/of a/DT/a variable/JJ/variable ?/./? xyz/NN/xyz that/IN/that ?/./? s/NNS/s how/WRB/how you/PRP/you name/VBP/name a/DT/a variable/NNP/variable. let/NN/let ?/./? s/NNS/s call/VBP/call it/PRP/it xyz/VBP/xyz /,/, so/RB/so what/WP/what should/MD/should be/VB/be my/PRP$/my initial/JJ/initial value/NN/value of/IN/of xyz/NN/xyz be/VB/be ?/./? arrival/NN/arrival of/IN/of v/NN/v /,/, no/DT/no harm/NN/harm in/IN/in setting/NN/setting it/PRP/it to/TO/to this/DT/this value/NN/value and/CC/and now/RB/now what/WP/what am/VBP/am i/PRP/i doing/VBG/doing /,/, what/WP/what should/MD/should i/VB/i write/JJ/write next/JJ/next ?/./? for/IN/for all/DT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v /,/, out/IN/out adjacent/NN/adjacent is/VBZ/is the/DT/the same/JJ/same as/IN/as adjacent/NN/adjacent we/PRP/we are/VBP/are saying/VBG/saying adjacent/NN/adjacent means/NNS/means out/RP/out adjacent/NN/adjacent here/RB/here ;/:/; adjacent/NN/adjacent to/TO/to v/VB/v do/VBP/do /,/, if/IN/if not/RB/not visited/NNP/visited. somewhere/RB/somewhere i/PRP/i have/VBP/have to/TO/to set/VB/set visited/VBN/visited v/NN/v equals/NNS/equals one/NNP/one. as/IN/as soon/RB/soon as/IN/as i/PRP/i started/VBD/started dfs/NNS/dfs i/PRP/i set/VBP/set the/DT/the visited/VBN/visited variable/JJ/variable to/TO/to one/NNP/one. if/IN/if not/RB/not visited/VBN/visited v/NN/v then/RB/then what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? then/RB/then i/PRP/i do/VBP/do a/DT/a dfs/NNS/dfs from/IN/from there/EX/there or/CC/or i/PRP/i run/VBP/run this/DT/this procedure/NN/procedure from/IN/from that/DT/that vertex/NN/vertex w/NN/w and/CC/and it/PRP/it will/MD/will return/VB/return something/NN/something to/TO/to me/PRP/me and/CC/and i/PRP/i have/VBP/have to/TO/to update/VB/update what/WP/what it/PRP/it returns/NNP/returns. so/RB/so xyz/NN/xyz equals/NNS/equals minimum/VBP/minimum of/IN/of xyz/NN/xyz /,/, sc/NN/sc /:/[ w/NN/w /:/] /,/, else/RB/else if/IN/if visited/VBN/visited w/NN/w is/VBZ/is true/JJ/true ;/:/; if/IN/if the/DT/the vertex/NN/vertex is/VBZ/is w/NN/w is/VBZ/is already/RB/already visited/VBN/visited so/RB/so then/RB/then that/IN/that means/NNS/means that/WDT/that is/VBZ/is either/DT/either a/DT/a cross/NN/cross edge/NN/edge or/CC/or a/DT/a back/NN/back edge/NN/edge starting/VBG/starting from/IN/from v/NN/v else/RB/else xyz/NN/xyz equal/JJ/equal min/NN/min of/IN/of xyz/NN/xyz /,/, arrival/NN/arrival of/IN/of w/NNP/w. what/WP/what are/VBP/are we/PRP/we doing/VBG/doing here/RB/here ?/./? we/PRP/we are/VBP/are looking/VBG/looking at/IN/at the/DT/the cross/NNS/cross edges/NNS/edges and/CC/and the/DT/the back/NN/back edges/NNS/edges starting/VBG/starting from/IN/from the/DT/the vertex/NN/vertex v/NN/v and/CC/and also/RB/also including/VBG/including that/IN/that into/IN/into the/DT/the min/NN/min computation/NNP/computation. now/RB/now what/WP/what are/VBP/are mins/NNS/mins ?/./? this/DT/this is/VBZ/is the/DT/the end/NN/end of/IN/of this/DT/this for/IN/for loop/NNP/loop. if/IN/if xyz/NN/xyz equals/NNS/equals arrival/NN/arrival v/NN/v then/RB/then stop/VB/stop and/CC/and we/PRP/we will/MD/will stop/VB/stop with/IN/with saying/VBG/saying that/IN/that graph/NN/graph is/VBZ/is not/RB/not strongly/RB/strongly connected/VBN/connected else/RB/else we/PRP/we just/RB/just return/NNP/return. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33.46/CD/33.46 /CD/) this/DT/this will/MD/will again/RB/again have/VB/have a/DT/a small/JJ/small problem/NN/problem for/IN/for the/DT/the root/NN/root vertex/NN/vertex because/IN/because for/IN/for the/DT/the root/NN/root vertex/NN/vertex this/DT/this quantity/NN/quantity will/MD/will turn/VB/turn out/RP/out to/TO/to be/VB/be zero/RB/zero /,/, can/MD/can not/RB/not be/VB/be less/JJR/less than/IN/than a/DT/a zero/NNP/zero. so/RB/so that/IN/that has/VBZ/has to/TO/to be/VB/be checked/VBN/checked we/PRP/we can/MD/can ?/./? t/VB/t abort/NN/abort always/RB/always /,/, we/PRP/we have/VBP/have to/TO/to just/RB/just ensure/VB/ensure that/IN/that it/PRP/it is/VBZ/is not/RB/not the/DT/the root/NN/root vertex/NN/vertex /:/[ hindi/NN/hindi conversation/NN/conversation /:/] /./. so/RB/so almost/RB/almost exactly/RB/exactly like/IN/like we/PRP/we did/VBD/did for/IN/for two/CD/two edge/NN/edge connectivity/NNP/connectivity. so/RB/so how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? almost/RB/almost the/DT/the same/JJ/same time/NN/time as/IN/as depth/NN/depth first/RB/first search/NNP/search. we/PRP/we have/VBP/have one/CD/one additional/JJ/additional variable/JJ/variable which/WDT/which we/PRP/we are/VBP/are modifying/VBG/modifying and/CC/and that/IN/that ?/./? s/NNS/s all/DT/all the/DT/the time/NN/time /,/, the/DT/the additional/JJ/additional time/NN/time that/WDT/that we/PRP/we require/NNP/require. so/RB/so as/IN/as far/RB/far as/IN/as applications/NNS/applications of/IN/of dfs/NNS/dfs are/VBP/are concerned/VBN/concerned /,/, you/PRP/you will/MD/will see/VB/see quite/RB/quite a/DT/a few/JJ/few applications/NNP/applications. can/MD/can someone/VB/someone tell/NN/tell me/PRP/me what/WP/what all/PDT/all you/PRP/you have/VBP/have seen/VBN/seen ?/./? application/NN/application of/IN/of dfs/NNS/dfs in/IN/in directed/VBN/directed graphs/NNS/graphs /,/, what/WP/what are/VBP/are the/DT/the applications/NNS/applications we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/RB/far ?/./? two/CD/two edge/NN/edge connected/VBN/connected is/VBZ/is not/RB/not for/IN/for directed/VBN/directed graphs/NNP/graphs. checking/NN/checking if/IN/if a/DT/a graph/NN/graph is/VBZ/is strongly/RB/strongly connected/VBN/connected /,/, checking/NN/checking if/IN/if a/DT/a graph/NN/graph is/VBZ/is acyclic/JJ/acyclic and/CC/and of/IN/of course/NN/course also/RB/also topological/JJ/topological sort/NN/sort all/DT/all though/IN/though it/PRP/it is/VBZ/is the/DT/the same/JJ/same as/IN/as that/NNP/that. there/EX/there are/VBP/are a/DT/a lot/NN/lot of/IN/of other/JJ/other applications/NNS/applications /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to be/VB/be taking/VBG/taking them/PRP/them up/RP/up in/IN/in this/DT/this class/NNP/class. any/DT/any questions/NNS/questions so/RB/so far/RB/far ?/./? so/RB/so as/IN/as a/DT/a recap/NN/recap since/IN/since we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to be/VB/be switching/VBG/switching topics/NNS/topics /,/, let/VB/let me/PRP/me also/RB/also look/VBP/look at/IN/at what/WP/what we/PRP/we have/VBP/have done/VBN/done for/IN/for undirected/VBN/undirected graphs/NNP/graphs. we/PRP/we actually/RB/actually have/VBP/have looked/VBN/looked at/IN/at only/RB/only one/CD/one application/NN/application that/WDT/that was/VBD/was for/IN/for two/CD/two edge/NN/edge connectivity/NNP/connectivity. i/PRP/i did/VBD/did mention/NN/mention that/IN/that you/PRP/you can/MD/can use/VB/use similar/JJ/similar procedures/NNS/procedures /,/, you/PRP/you can/MD/can use/VB/use dfs/NNS/dfs to/TO/to also/RB/also check/VB/check if/IN/if a/DT/a graph/NN/graph is/VBZ/is vertex/NN/vertex connected/VBN/connected and/CC/and if/IN/if it/PRP/it is/VBZ/is plain/RB/plain but/CC/but we/PRP/we did/VBD/did not/RB/not do/VB/do those/DT/those two/CD/two applications/NNS/applications in/IN/in detail/NN/detail in/IN/in this/DT/this class/NNP/class. what/WP/what application/NN/application did/VBD/did we/PRP/we see/VBP/see for/IN/for breadth/NN/breadth first/RB/first search/NN/search ?/./? finding/NN/finding the/DT/the connected/VBN/connected components/NNS/components of/IN/of the/DT/the graph/NN/graph and/CC/and checking/VBG/checking if/IN/if a/DT/a graph/NN/graph is/VBZ/is bipartite/NNP/bipartite. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37.42/CD/37.42 /CD/) also/RB/also the/DT/the shortest/JJS/shortest distance/NN/distance that/WDT/that ?/./? s/VBZ/s just/RB/just breadth/JJ/breadth first/JJ/first search/NN/search /,/, the/DT/the label/NN/label that/IN/that it/PRP/it returns/VBZ/returns are/VBP/are the/DT/the shortest/JJS/shortest distance/NN/distance of/IN/of the/DT/the vertices/NNS/vertices from/IN/from the/DT/the root/NN/root /,/, the/DT/the starting/NN/starting vertex/NN/vertex and/CC/and all/DT/all of/IN/of these/DT/these are/VBP/are linear/JJ/linear time/NN/time procedures/NNP/procedures. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 31/CD/31 today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about minimum/JJ/minimum spanning/NN/spanning trees/NNP/trees. we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define what/WP/what a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NN/tree is/NNP/is. we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to look/VB/look at/IN/at algorithms/NNS/algorithms of/IN/of minimum/JJ/minimum spanning/NN/spanning trees/NNP/trees. so/RB/so you/PRP/you all/DT/all know/VBP/know what/WP/what a/DT/a spanning/NN/spanning tree/NN/tree is/NNP/is. does/VBZ/does everyone/NN/everyone know/VB/know what/WP/what a/DT/a spanning/NN/spanning tree/NN/tree in/IN/in a/DT/a graph/NN/graph is/VBZ/is ?/./? did/VBD/did we/PRP/we define/VBP/define it/PRP/it ?/./? yes/VBZ/yes we/PRP/we did/NNP/did. so/RB/so i/PRP/i gave/VBP/gave you/PRP/you an/DT/an undirected/JJ/undirected graph/NN/graph /,/, so/RB/so what/WP/what is/VBZ/is a/DT/a spanning/NN/spanning tree/NN/tree in/IN/in g/NN/g ?/./? so/RB/so spanning/VBG/spanning tree/NN/tree /,/, the/DT/the term/NN/term is/VBZ/is composed/VBN/composed of/IN/of two/CD/two things/NNP/things. tree/NN/tree and/CC/and panning/VBG/panning /,/, tree/NN/tree means/VBZ/means it/PRP/it should/MD/should be/VB/be a/DT/a tree/NNP/tree. what/WP/what is/VBZ/is a/DT/a tree/NN/tree ?/./? tree/NN/tree is/VBZ/is a/DT/a connected/VBN/connected sub/NN/sub graph/NN/graph without/IN/without any/DT/any cycles/NNP/cycles. connected/VBD/connected sub/NN/sub graph/NN/graph without/IN/without cycles/NNS/cycles that/WDT/that is/VBZ/is a/DT/a tree/NNP/tree. and/CC/and what/WP/what does/VBZ/does spanning/VBG/spanning mean/JJ/mean ?/./? spanning/VBG/spanning means/NNS/means that/WDT/that it/PRP/it should/MD/should include/VB/include all/DT/all vertices/NNP/vertices. this/DT/this basically/RB/basically means/VBZ/means that/IN/that it/PRP/it should/MD/should include/VB/include all/DT/all vertices/NNS/vertices that/WDT/that would/MD/would be/VB/be a/DT/a spanning/NN/spanning tree/NN/tree in/IN/in the/DT/the graph/NNP/graph. so/RB/so for/IN/for an/DT/an example/NN/example if/IN/if i/PRP/i drew/VBP/drew a/DT/a graph/NN/graph something/NN/something like/IN/like that/DT/that /,/, say/VBP/say this/DT/this were/VBD/were my/PRP$/my graph/NNP/graph. then/RB/then i/PRP/i could/MD/could draw/VB/draw a/DT/a spanning/NN/spanning tree/NN/tree in/IN/in this/DT/this graph/NN/graph by/IN/by let/NN/let say/VBP/say /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use a/DT/a very/RB/very /,/, let/VB/let us/PRP/us say/VB/say /,/, i/PRP/i pick/VBP/pick this/DT/this edge/NN/edge in/IN/in the/DT/the tree/NN/tree /,/, pick/NN/pick this/DT/this /,/, pick/NN/pick that/IN/that /,/, pick/VBP/pick that/IN/that then/RB/then i/PRP/i pick/VBP/pick this/DT/this and/CC/and i/PRP/i pick/VBP/pick this/NNP/this. how/WRB/how many/JJ/many edges/NNS/edges do/VBP/do i/PRP/i need/VBP/need to/TO/to pick/VB/pick ?/./? is/VBZ/is this/DT/this a/DT/a spanning/NN/spanning tree/NN/tree ?/./? no/NN/no. this/DT/this vertex/NN/vertex is/VBZ/is not/RB/not included/VBN/included here/NNP/here. i/PRP/i could/MD/could pick/VB/pick one/CD/one of/IN/of the/DT/the edges/NNS/edges incident/NN/incident at/IN/at this/DT/this to/TO/to include/VB/include this/NNP/this. this/DT/this is/VBZ/is a/DT/a spanning/NN/spanning tree/NNP/tree. we/PRP/we know/VBP/know that/IN/that our/PRP$/our spanning/NN/spanning tree/NN/tree /,/, if/IN/if the/DT/the graph/NN/graph has/VBZ/has n/VBN/n vertices/NNS/vertices /,/, so/RB/so spanning/VBG/spanning tree/NN/tree has/VBZ/has how/WRB/how many/JJ/many edges/NNS/edges ?/./? number/NN/number of/IN/of vertices/NNS/vertices minus/CC/minus 1/CD/1 edge/NNP/edge. yes/NNS/yes /:/: great/NNP/great. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 43/CD/43 /CD/) what/WP/what is/VBZ/is a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NN/tree ?/./? minimum/JJ/minimum spanning/NN/spanning tree/NN/tree is/VBZ/is a/DT/a spanning/NN/spanning tree/NN/tree of/IN/of minimum/JJ/minimum weight/NNP/weight. sometimes/RB/sometimes i/PRP/i will/MD/will use/VB/use the/DT/the term/NN/term weight/NN/weight /,/, sometimes/RB/sometimes i/PRP/i will/MD/will use/VB/use the/DT/the terms/NNS/terms length/NN/length /,/, one/CD/one at/IN/at the/DT/the same/JJ/same thing/NNP/thing. /NNP/( hindi/NN/hindi /:/) you/PRP/you are/VBP/are not/RB/not just/RB/just given/VBN/given the/DT/the graph/NN/graph but/CC/but we/PRP/we are/VBP/are also/RB/also given/VBN/given a/DT/a length/NN/length function/NN/function on/IN/on the/DT/the edges/NNS/edges of/IN/of the/DT/the graph/NNP/graph. let/NN/let me/PRP/me assume/VBP/assume the/DT/the lengths/NNS/lengths are/VBP/are non-negative/JJ/non-negative reals/NNP/reals. so/RB/so /,/, every/DT/every edge/NN/edge has/VBZ/has a/DT/a length/NN/length now/NNP/now. so/RB/so /,/, think/VBP/think of/IN/of that/DT/that in/IN/in the/DT/the following/JJ/following way/NNP/way. these/DT/these are/VBP/are certain/JJ/certain cities/NNS/cities and/CC/and i/PRP/i can/MD/can either/VB/either draw/NN/draw or/CC/or i/PRP/i can/MD/can either/VB/either connect/VB/connect these/DT/these 2/CD/2 cities/NNS/cities by/IN/by a/DT/a wire/NN/wire or/CC/or i/PRP/i can/MD/can connect/VB/connect these/DT/these 2/CD/2 cities/NNS/cities by/IN/by a/DT/a wire/NN/wire or/CC/or i/PRP/i can/MD/can connect/VB/connect these/DT/these 2/CD/2 by/IN/by a/DT/a wire/NN/wire /,/, i/PRP/i can/MD/can connect/VB/connect these/DT/these /,/, these/DT/these or/CC/or these/NNP/these. these/DT/these are/VBP/are the/DT/the possible/JJ/possible options/NNS/options i/PRP/i have/VBP/have of/IN/of connecting/VBG/connecting them/PRP/them with/IN/with wires/NNP/wires. some/DT/some options/NNS/options are/VBP/are not/RB/not there/NNP/there. why/WRB/why ?/./? /:/( hindi/NN/hindi /:/) could/MD/could be/VB/be some/DT/some reason/NN/reason /:/( hindi/NN/hindi /:/) /./. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a graph/NNP/graph. now/RB/now /,/, to/TO/to connect/VB/connect 2/CD/2 particular/JJ/particular cities/NNS/cities /,/, i/PRP/i am/VBP/am also/RB/also told/VBD/told /,/, how/WRB/how much/JJ/much length/NN/length of/IN/of the/DT/the wire/NN/wire i/PRP/i need/VBP/need /,/, that/IN/that is/VBZ/is my/PRP$/my length/NN/length function/NNP/function. suppose/NN/suppose i/PRP/i told/VBD/told you/PRP/you that/IN/that you/PRP/you need/VBP/need 3/CD/3 here/RB/here and/CC/and you/PRP/you need/VBP/need 5/CD/5 here/RB/here and/CC/and you/PRP/you need/VBP/need 2/CD/2 here/RB/here /,/, what/WDT/what are/VBP/are the/DT/the units/NNS/units ?/./? it/PRP/it could/MD/could be/VB/be anything/NN/anything /,/, 1000/CD/1000 kilo/NN/kilo meters/NNS/meters /,/, meters/NNS/meters /,/, i/PRP/i do/VBP/do not/RB/not care/NNP/care. this/DT/this could/MD/could be/VB/be 1/CD/1 /,/, this/DT/this could/MD/could be/VB/be 7/CD/7 /,/, this/DT/this could/MD/could be/VB/be 4/CD/4 /,/, 6/CD/6 /,/, 9/CD/9. i/PRP/i just/RB/just put/VBD/put in/IN/in some/DT/some numbers/NNS/numbers in/IN/in between/NNP/between. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to connect/VB/connect these/DT/these cities/NNS/cities which/WDT/which means/VBZ/means we/PRP/we need/VBP/need to/TO/to create/VB/create a/DT/a spanning/NN/spanning tree/NN/tree and/CC/and i/PRP/i am/VBP/am not/RB/not interested/JJ/interested in/IN/in any/DT/any spanning/NN/spanning tree/NNP/tree. i/PRP/i am/VBP/am interested/JJ/interested in/IN/in spanning/NN/spanning tree/NN/tree for/IN/for which/WDT/which the/DT/the length/NN/length of/IN/of wire/NN/wire is/VBZ/is spent/VBN/spent as/RB/as small/JJ/small as/IN/as possible/NNP/possible. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, a/DT/a spanning/NN/spanning tree/NN/tree of/IN/of a/DT/a minimum/JJ/minimum length/NNP/length. what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the spanning/NN/spanning tree/NN/tree now/RB/now ?/./? so/RB/so /,/, sum/NN/sum of/IN/of the/DT/the lengths/NNS/lengths of/IN/of the/DT/the edges/NNS/edges in/IN/in the/DT/the tree/NNP/tree. so/RB/so /,/, let/VB/let us/PRP/us formally/RB/formally define/VBP/define that/IN/that the/DT/the length/NN/length of/IN/of the/DT/the spanning/NN/spanning tree/NN/tree equals/NNS/equals sum/NN/sum of/IN/of the/DT/the lengths/NNS/lengths of/IN/of the/DT/the edges/NNS/edges in/IN/in the/DT/the tree/NNP/tree. so/RB/so /,/, i/PRP/i might/MD/might now/RB/now decide/VB/decide to/TO/to pick/VB/pick some/DT/some edges/NNP/edges. suppose/NN/suppose i/PRP/i pick/VBP/pick /,/, i/PRP/i did/VBD/did not/RB/not give/VB/give this/DT/this length/NN/length /,/, i/PRP/i give/VBP/give this/DT/this the/DT/the length/NN/length 4/CD/4. suppose/NN/suppose /,/, i/PRP/i pick/VBP/pick this/DT/this edge/NN/edge and/CC/and i/PRP/i pick/VBP/pick this/DT/this edge/NN/edge and/CC/and i/PRP/i pick/VBP/pick this/DT/this edge/NN/edge and/CC/and i/PRP/i pick/VBP/pick this/DT/this edge/NN/edge and/CC/and i/PRP/i pick/VBP/pick this/DT/this edge/NNP/edge. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, i/PRP/i can/MD/can not/RB/not pick/VB/pick this/DT/this edge/NN/edge /,/, it/PRP/it is/VBZ/is not/RB/not a/DT/a tree/NN/tree at/IN/at all/DT/all /,/, i/PRP/i can/MD/can not/RB/not pick/NNP/pick. so/RB/so /,/, let/VB/let me/PRP/me pick/VB/pick something/NN/something else/NNP/else. so/RB/so /,/, let/VB/let me/PRP/me pick/VB/pick this/DT/this 6/CD/6. /CD/( hindi/NN/hindi /:/) what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this tree/NN/tree ?/./? 6/CD/6 plus/NN/plus 4/CD/4 plus/CC/plus 4/CD/4 plus/NNS/plus 3/CD/3 plus/NNS/plus 5/CD/5 /,/, 22/CD/22 right/NN/right ?/./? there/EX/there might/MD/might be/VB/be other/JJ/other trees/NNS/trees in/IN/in this/DT/this /,/, other/JJ/other spanning/NN/spanning trees/NNS/trees which/WDT/which are/VBP/are smaller/JJR/smaller than/IN/than 22/CD/22. i/PRP/i am/VBP/am interested/JJ/interested in/IN/in the/DT/the finding/NN/finding the/DT/the one/CD/one which/WDT/which is/VBZ/is the/DT/the smallest/NNP/smallest. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 46/CD/46 /CD/) there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of the/DT/the root/NNP/root. in/IN/in the/DT/the case/NN/case of/IN/of spanning/VBG/spanning tree/NN/tree /,/, when/WRB/when we/PRP/we defined/VBD/defined /,/, spanning/VBG/spanning tree/NN/tree is/VBZ/is trees/NNS/trees in/IN/in graph/NN/graph /,/, there/EX/there was/VBD/was no/DT/no notion/NN/notion of/IN/of the/DT/the root/NN/root over/NNP/over. we/PRP/we call/VBP/call that/IN/that also/RB/also /,/, we/PRP/we use/VBP/use the/DT/the term/NN/term free/JJ/free tree/NN/tree for/IN/for that/NNP/that. there/EX/there is/VBZ/is no/DT/no notion/NNP/notion. since/IN/since /,/, the/DT/the vertex/NN/vertex /,/, since/IN/since all/DT/all the/DT/the vertices/NNS/vertices are/VBP/are going/VBG/going to/TO/to be/VB/be included/VBN/included /-NONE-/( hindi/NN/hindi /:/) 3/CD/3 /,/, 4/CD/4 /,/, 1/CD/1 /,/, 2/CD/2 /,/, 5/CD/5 /,/, 9/CD/9 /,/, 7/CD/7 /,/, 4/CD/4 /,/, 6/CD/6 and/CC/and the/DT/the edges/NNS/edges we/PRP/we included/VBD/included were/VBD/were /,/, this/DT/this edge/NN/edge /,/, /:/( hindi/NN/hindi /:/) one/CD/one way/NN/way you/PRP/you can/MD/can convince/VB/convince yourself/PRP/yourself that/IN/that this/DT/this is/VBZ/is not/RB/not the/DT/the smallest/JJS/smallest possible/JJ/possible tree/NN/tree is/VBZ/is /,/, by/IN/by seeing/NN/seeing that/IN/that for/IN/for instance/NNP/instance. if/IN/if i/PRP/i include/VBP/include this/DT/this edge/NN/edge of/IN/of the/DT/the length/NN/length 1/CD/1 then/RB/then what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen ?/./? will/MD/will it/PRP/it be/VB/be a/DT/a tree/NN/tree or/CC/or ?/./? we/PRP/we will/MD/will be/VB/be have/VB/have a/DT/a cycle/NNP/cycle. so/RB/so /,/, that/IN/that is/VBZ/is one/CD/one property/NN/property of/IN/of a/DT/a spanning/NN/spanning tree/NN/tree always/RB/always /./( hindi/NN/hindi /:/) /./. it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected sub/NN/sub graph/NN/graph which/WDT/which means/VBZ/means /:/( hindi/NN/hindi /:/) /./. so/RB/so /,/, i/PRP/i can/MD/can go/VB/go from/IN/from /,/, let/VB/let say/VBP/say /,/, this/DT/this is/VBZ/is vertex/NN/vertex u/NN/u and/CC/and this/DT/this is/VBZ/is vertex/NN/vertex v/NN/v /,/, i/PRP/i can/MD/can go/VB/go from/IN/from u/NN/u to/TO/to v/VB/v by/IN/by following/VBG/following the/DT/the edges/NNS/edges of/IN/of the/DT/the tree/NN/tree and/CC/and then/RB/then i/PRP/i can/MD/can take/VB/take this/DT/this edge/NN/edge that/IN/that is/VBZ/is added/VBN/added just/RB/just now/RB/now /,/, back/RB/back to/TO/to go/VB/go to/TO/to u/VB/u which/WDT/which means/NNS/means it/PRP/it form/NN/form a/DT/a cycle/NNP/cycle. if/IN/if it/PRP/it is/VBZ/is a/DT/a cycle/NN/cycle /,/, it/PRP/it is/VBZ/is not/RB/not a/DT/a tree/NN/tree any/DT/any more/NNP/more. now/RB/now /,/, in/IN/in this/DT/this cycle/NN/cycle /,/, suppose/NN/suppose the/DT/the edges/NNS/edges have/VBP/have a/DT/a certain/JJ/certain length/NN/length /:/( hindi/NN/hindi /:/) /./. now/RB/now /,/, what/WDT/what can/MD/can i/PRP/i do/VBP/do ?/./? i/PRP/i can/MD/can include/VB/include this/DT/this edge/NN/edge and/CC/and drop/NN/drop the/DT/the edge/NN/edge of/IN/of length/NN/length 4/CD/4. will/MD/will that/IN/that remain/VB/remain ?/./? will/MD/will that/VB/that continue/VB/continue to/TO/to be/VB/be a/DT/a tree/NN/tree ?/./? if/IN/if i/PRP/i were/VBD/were to/TO/to drop/VB/drop this/DT/this edge/NN/edge /,/, will/MD/will it/PRP/it remain/VB/remain a/DT/a tree/NN/tree ?/./? why/WRB/why ?/./? why/WRB/why would/MD/would it/PRP/it remain/VB/remain connected/VBN/connected ?/./? no/DT/no notion/NN/notion of/IN/of a/DT/a descendant/NNP/descendant. there/RB/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of a/DT/a descendant/NNP/descendant. why/WRB/why ?/./? that/DT/that is/VBZ/is the/DT/the question/NNP/question. we/PRP/we have/VBP/have discussed/VBN/discussed this/DT/this before/NNP/before. the/DT/the point/NN/point is/VBZ/is that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a path/NN/path which/WDT/which gets/VBZ/gets it/PRP/it straight/RB/straight then/RB/then that/IN/that path/NN/path must/MD/must be/VB/be using/VBG/using this/DT/this edge/NNP/edge. /NNP/( hindi/NN/hindi /:/) i/PRP/i can/MD/can now/RB/now create/VB/create alternate/JJ/alternate path/NN/path between/IN/between those/DT/those 2/CD/2 vertices/NNP/vertices. by/IN/by instead/RB/instead now/RB/now /,/, going/VBG/going like/IN/like this/DT/this between/IN/between this/DT/this 2/CD/2 edges/NNP/edges. so/RB/so /,/, that/IN/that means/NNS/means they/PRP/they are/VBP/are still/RB/still /,/, is/VBZ/is the/DT/the path/NN/path between/IN/between those/DT/those 2/CD/2 vertices/NNS/vertices /:/( hindi/NN/hindi /:/) /./. all/DT/all paths/NNS/paths are/VBP/are still/RB/still there/RB/there or/CC/or not/RB/not paths/NNS/paths are/VBP/are still/RB/still there/RB/there /,/, all/DT/all face/NN/face of/IN/of vertices/NNS/vertices are/VBP/are still/RB/still connected/NNP/connected. may/MD/may be/VB/be /,/, by/IN/by different/JJ/different path/NN/path but/CC/but they/PRP/they are/VBP/are still/RB/still connected/NNP/connected. so/RB/so /,/, that/IN/that is/VBZ/is an/DT/an operation/NN/operation we/PRP/we can/MD/can do/VB/do always/NNP/always. i/PRP/i can/MD/can try/VB/try and/CC/and add/VB/add an/DT/an edge/NN/edge /,/, try/NN/try to/TO/to add/VB/add an/DT/an edge/NN/edge in/IN/in to/TO/to this/DT/this tree/NN/tree and/CC/and see/VB/see if/IN/if as/IN/as a/DT/a result/NN/result of/IN/of that/DT/that operation/NN/operation /,/, so/RB/so /,/, as/IN/as a/DT/a result/NN/result of/IN/of that/DT/that operation/NN/operation /,/, i/PRP/i will/MD/will clearly/RB/clearly form/VB/form a/DT/a cycle/NNP/cycle. if/IN/if from/IN/from that/DT/that cycle/NN/cycle /,/, i/PRP/i can/MD/can drop/VB/drop and/CC/and edge/VB/edge of/IN/of longer/JJR/longer length/NN/length than/IN/than the/DT/the edge/NN/edge i/PRP/i added/VBD/added /,/, then/RB/then i/PRP/i would/MD/would have/VB/have reduced/VBN/reduced the/DT/the cost/NN/cost of/IN/of this/DT/this tree/NN/tree /,/, the/DT/the cost/NN/cost of/IN/of the/DT/the length/NN/length or/CC/or weight/NN/weight /,/, i/PRP/i will/MD/will use/VB/use these/DT/these terms/NNS/terms /:/( hindi/NN/hindi /:/) so/RB/so /,/, i/PRP/i form/VBP/form of/IN/of this/DT/this cycle/NNP/cycle. i/PRP/i can/MD/can drop/VB/drop any/DT/any edge/NN/edge of/IN/of this/DT/this cycle/NN/cycle and/CC/and it/PRP/it will/MD/will still/RB/still remain/VB/remain a/DT/a tree/NNP/tree. which/WDT/which is/VBZ/is the/DT/the edge/NN/edge i/PRP/i would/MD/would like/VB/like to/TO/to drop/VB/drop ?/./? 4/CD/4 /,/, i/PRP/i will/MD/will drop/VB/drop this/DT/this edge/NN/edge /,/, 4/CD/4 and/CC/and now/RB/now /,/, my/PRP$/my new/JJ/new tree/NN/tree has/VBZ/has length/NN/length what/WP/what ?/./? /:/( hindi/NN/hindi /:/) /,/, 22/CD/22 minus/NN/minus /:/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this new/JJ/new tree/NN/tree length/NN/length 22/CD/22 minus/NN/minus 3/CD/3 /CD/( hindi/NN/hindi /:/) see/NN/see /,/, i/PRP/i can/MD/can repeat/VB/repeat the/DT/the process/NN/process /,/, i/PRP/i can/MD/can see/VB/see /,/, there/EX/there is/VBZ/is something/NN/something else/RB/else that/IN/that can/MD/can be/VB/be done/NNP/done. can/MD/can you/PRP/you say/VB/say something/NN/something else/RB/else that/IN/that can/MD/can be/VB/be done/VBN/done ?/./? 2/CD/2 /,/, so/RB/so suppose/RB/suppose /,/, i/PRP/i include/VBP/include 2/CD/2. so/RB/so /,/, now/RB/now i/PRP/i form/VBP/form the/DT/the cycle/NN/cycle which/WDT/which has/VBZ/has edges/NNS/edges of/IN/of length/NN/length 3/CD/3 and/CC/and 5/CD/5 in/IN/in it/NNP/it. so/RB/so /,/, it/PRP/it make/VBP/make sense/NN/sense to/TO/to drop/VB/drop 5/CD/5 and/CC/and the/DT/the reduction/NN/reduction now/RB/now is/VBZ/is 3/CD/3 units/NNS/units again/NNP/again. now/RB/now /,/, let/VB/let me/PRP/me draw/VB/draw the/DT/the tree/NN/tree /,/, we/PRP/we have/VBP/have the/DT/the /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, the/DT/the tree/NN/tree that/IN/that i/PRP/i have/VBP/have at/IN/at this/DT/this point/NN/point is/VBZ/is /,/, this/DT/this is/VBZ/is the/DT/the tree/NN/tree i/PRP/i have/VBP/have now/NNP/now. this/DT/this is/VBZ/is the/DT/the edge/NN/edge /,/, length/NN/length 1/CD/1 /,/, this/DT/this is/VBZ/is 3/CD/3 /,/, this/DT/this is/VBZ/is 2/CD/2 /,/, this/DT/this is/VBZ/is 4/CD/4 /,/, this/DT/this is/VBZ/is 6/CD/6. would/MD/would it/PRP/it make/VB/make sense/NN/sense to/TO/to include/VB/include some/DT/some other/JJ/other edge/NN/edge and/CC/and try/NN/try and/CC/and repeat/NN/repeat the/DT/the process/NN/process ?/./? no/DT/no /,/, because/IN/because /,/, if/IN/if i/PRP/i include/VBP/include this/DT/this edge/NN/edge which/WDT/which is/VBZ/is of/IN/of length/NN/length 4/CD/4 /,/, then/RB/then this/DT/this edge/NN/edge is/VBZ/is the/DT/the longest/JJS/longest edge/NN/edge on/IN/on the/DT/the cycle/NN/cycle that/IN/that gets/NNS/gets ?/./? /:/( hindi/NN/hindi /:/) and/CC/and the/DT/the edge/NN/edge i/PRP/i am/VBP/am including/VBG/including is/VBZ/is the/DT/the longest/JJS/longest edge/NN/edge on/IN/on the/DT/the cycle/NNP/cycle. it/PRP/it does/VBZ/does not/RB/not make/VB/make sense/NN/sense to/TO/to include/VB/include it/PRP/it /,/, therefore/NNP/therefore. if/IN/if i/PRP/i include/VBP/include this/DT/this edge/NN/edge /,/, it/PRP/it is/VBZ/is of/IN/of length/NN/length 5/CD/5. the/DT/the cycle/NN/cycle found/VBD/found may/MD/may /,/, this/DT/this is/VBZ/is again/RB/again the/DT/the longest/JJS/longest edge/NN/edge of/IN/of the/DT/the cycle/NNP/cycle. does/VBZ/does not/RB/not make/VB/make sense/NN/sense to/TO/to include/VB/include /,/, if/IN/if i/PRP/i include/VBP/include this/DT/this edge/NN/edge 7/CD/7 /,/, this/DT/this is/VBZ/is the/DT/the cycle/NN/cycle that/IN/that get/NN/get formed/VBN/formed and/CC/and 7/CD/7 is/VBZ/is again/RB/again the/DT/the longest/JJS/longest edge/NN/edge of/IN/of the/DT/the cycle/NNP/cycle. if/IN/if i/PRP/i include/VBP/include this/DT/this edge/NN/edge 9/CD/9 then/RB/then there/RB/there is/VBZ/is the/DT/the longer/NN/longer cycle/NN/cycle that/WDT/that gets/VBZ/gets formed/NNP/formed. but/CC/but once/RB/once again/RB/again 9/CD/9 is/VBZ/is the/DT/the longest/JJS/longest edge/NN/edge of/IN/of the/DT/the cycle/NNP/cycle. so/RB/so /,/, it/PRP/it does/VBZ/does not/RB/not make/VB/make sense/NN/sense to/TO/to include/VB/include 9/CD/9. so/RB/so /,/, it/PRP/it does/VBZ/does not/RB/not make/VB/make sense/NN/sense to/TO/to include/VB/include any/DT/any other/JJ/other edge/NNP/edge. and/CC/and so/RB/so /,/, actually/RB/actually /,/, i/PRP/i should/MD/should not/RB/not say/VB/say /:/: and/CC/and so/RB/so /,/, the/DT/the reason/NN/reason is/VBZ/is that/IN/that /,/, is/VBZ/is not/RB/not the/DT/the reason/NN/reason why/WRB/why /,/, i/PRP/i can/MD/can not/RB/not claim/VB/claim from/IN/from this/DT/this that/IN/that this/DT/this is/VBZ/is the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. but/CC/but /,/, it/PRP/it is/VBZ/is the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. we/PRP/we will/MD/will use/VB/use different/JJ/different arguments/NNS/arguments proving/VBG/proving that/NNP/that. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NN/tree in/IN/in this/DT/this graph/NNP/graph. so/RB/so /,/, mst/JJ/mst has/VBZ/has length/NN/length /,/, what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this ?/./? 16/CD/16. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 36/CD/36 /CD/) this/DT/this could/MD/could be/VB/be treated/VBN/treated as/IN/as an/DT/an algorithm/NN/algorithm /,/, so/RB/so computing/VBG/computing the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. how/WRB/how did/VBD/did it/PRP/it work/VB/work ?/./? you/PRP/you start/VB/start with/IN/with some/DT/some tree/NN/tree then/RB/then try/NN/try to/TO/to include/VB/include an/DT/an edge/NN/edge /,/, look/NN/look at/IN/at the/DT/the cycle/NN/cycle that/IN/that gets/NNS/gets formed/VBN/formed /,/, see/VBP/see /,/, if/IN/if you/PRP/you can/MD/can drop/VB/drop an/DT/an edge/NN/edge of/IN/of longer/JJR/longer length/NN/length from/IN/from that/DT/that cycle/NN/cycle or/CC/or if/IN/if there/EX/there is/VBZ/is a/DT/a longer/NN/longer edge/NN/edge on/IN/on that/DT/that cycle/NNP/cycle. if/IN/if there/EX/there is/VBZ/is /,/, then/RB/then you/PRP/you can/MD/can drop/VB/drop that/IN/that edge/NN/edge and/CC/and therefore/RB/therefore reduce/VB/reduce the/DT/the cost/NN/cost of/IN/of the/DT/the tree/NNP/tree. so/RB/so /,/, you/PRP/you keep/VB/keep doing/VBG/doing procedure/NN/procedure till/IN/till you/PRP/you reduce/VBP/reduce the/DT/the cost/NN/cost of/IN/of the/DT/the tree/NN/tree and/CC/and you/PRP/you stop/VB/stop when/WRB/when you/PRP/you can/MD/can not/RB/not reduce/VB/reduce it/PRP/it anymore/NNP/anymore. but/CC/but /,/, we/PRP/we will/MD/will not/RB/not look/VB/look at/IN/at this/DT/this algorithm/NN/algorithm or/CC/or we/PRP/we will/MD/will not/RB/not analyse/VB/analyse this/DT/this algorithm/NN/algorithm because/IN/because it/PRP/it will/MD/will be/VB/be fairly/RB/fairly expensive/JJ/expensive /,/, in/IN/in terms/NNS/terms of/IN/of running/VBG/running time/NNP/time. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the different/JJ/different algorithm/NN/algorithm for/IN/for computing/NN/computing the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree and/CC/and algorithm/NN/algorithm we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at /,/, is/VBZ/is called/VBN/called kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we are/VBP/are looking/VBG/looking at/IN/at kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm in/IN/in minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. it/PRP/it is/VBZ/is actually/RB/actually very/RB/very simply/RB/simply algorithm/NNP/algorithm. let/VB/let me/PRP/me illustrate/VB/illustrate it/PRP/it on/IN/on the/DT/the same/JJ/same graph/NN/graph that/IN/that we/PRP/we had/VBD/had before/NNP/before. i/PRP/i am/VBP/am going/VBG/going to/TO/to draw/VB/draw this/DT/this graph/NN/graph out/NNP/out. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 38/CD/38 /CD/) the/DT/the algorithm/NN/algorithm is/VBZ/is the/DT/the following/VBG/following /,/, it/PRP/it says/VBZ/says /,/, take/VBP/take the/DT/the minimum/JJ/minimum edge/NN/edge in/IN/in the/DT/the graph/NNP/graph. /NNP/( hindi/NN/hindi /:/) this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of what/WP/what is/VBZ/is called/VBN/called the/DT/the greedy/NN/greedy algorithm/NN/algorithm also/NNP/also. you/PRP/you will/MD/will be/VB/be greedy/JJ/greedy /,/, you/PRP/you are/VBP/are all/DT/all greed/NN/greed /,/, but/CC/but /,/, we/PRP/we will/MD/will now/RB/now be/VB/be greedy/JJ/greedy to/TO/to compute/VB/compute the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. so/RB/so /,/, what/WDT/what you/PRP/you think/VBP/think greedy/JJ/greedy means/NNS/means ?/./? try/NN/try to/TO/to get/VB/get the/DT/the larger/NNP/larger. go/VBP/go for/IN/for less/JJR/less ?/./? that/IN/that is/VBZ/is not/RB/not greedy/NNP/greedy. make/VB/make the/DT/the best/JJS/best possible/JJ/possible choice/NN/choice at/IN/at each/DT/each time/NN/time without/IN/without thinking/VBG/thinking about/IN/about the/DT/the future/NNP/future. that/IN/that is/VBZ/is the/DT/the key/JJ/key thing/NNP/thing. make/VBP/make the/DT/the best/JJS/best choice/NN/choice available/JJ/available /,/, i/PRP/i will/MD/will not/RB/not write/VB/write without/IN/without thinking/VBG/thinking of/IN/of the/DT/the future/NNP/future. but/CC/but that/IN/that is/VBZ/is reason/NN/reason why/WRB/why it/PRP/it is/VBZ/is called/VBN/called greedy/-NONE-/greedy. we/PRP/we just/RB/just make/VBP/make the/DT/the best/JJS/best available/JJ/available choice/NN/choice at/IN/at each/DT/each time/NNP/time. here/RB/here /,/, of/IN/of course/NN/course /,/, our/PRP$/our objective/NN/objective is/VBZ/is to/TO/to minimize/VB/minimize the/DT/the length/NN/length of/IN/of a/DT/a tree/NNP/tree. what/WP/what is/VBZ/is the/DT/the best/JJS/best thing/NN/thing to/TO/to do/VB/do at/IN/at the/DT/the first/JJ/first step/NN/step ?/./? take/NN/take the/DT/the edge/NN/edge with/IN/with the/DT/the smallest/JJS/smallest length/NNP/length. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do that/NNP/that. we/PRP/we pick/VBP/pick the/DT/the edge/NN/edge with/IN/with the/DT/the smallest/JJS/smallest length/NN/length /,/, that/IN/that is/VBZ/is 1/CD/1 and/CC/and this/DT/this gets/NNS/gets included/VBD/included into/IN/into a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. so/RB/so /,/, i/PRP/i am/VBP/am now/RB/now building/VBG/building the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, edge/NN/edge by/IN/by edge/NNP/edge. i/PRP/i included/VBD/included the/DT/the edge/NN/edge 1/CD/1 /,/, edge/NN/edge of/IN/of length/NN/length 1/CD/1. which/WDT/which is/VBZ/is the/DT/the next/JJ/next smallest/NN/smallest edge/NN/edge ?/./? which/WDT/which is/VBZ/is the/DT/the next/JJ/next best/JJS/best choice/NN/choice to/TO/to make/VB/make it/PRP/it ?/./? 2/CD/2 ?/./? 2/CD/2 or/CC/or 3/CD/3 ?/./? when/WRB/when you/PRP/you are/VBP/are saying/VBG/saying /,/, we/PRP/we need/VBP/need to/TO/to connect/VB/connect it/PRP/it your/PRP$/your thinking/VBG/thinking of/IN/of the/DT/the future/NNP/future. do/VBP/do not/RB/not do/VB/do that/NNP/that. think/VB/think of/IN/of the/DT/the /,/, be/VB/be greedy/JJ/greedy /,/, as/IN/as greedy/JJ/greedy as/IN/as you/PRP/you can/NNP/can. just/RB/just take/VB/take the/DT/the best/JJS/best choice/NNP/choice. so/RB/so /,/, the/DT/the next/JJ/next best/JJS/best is/VBZ/is /,/, just/RB/just go/VBP/go for/IN/for the/DT/the length/NN/length 2/CD/2 and/CC/and now/RB/now what/WP/what is/VBZ/is greedy/JJ/greedy ?/./? say/NN/say next/IN/next /,/, which/WDT/which is/VBZ/is the/DT/the next/JJ/next i/NN/i should/MD/should take/VB/take ?/./? 3/CD/3 /,/, 4/CD/4 /:/( hindi/NN/hindi /:/) so/RB/so /,/, it/PRP/it will/MD/will form/VB/form a/DT/a cycle/NNP/cycle. since/IN/since it/PRP/it forms/VBZ/forms the/DT/the cycle/NN/cycle /,/, we/PRP/we are/VBP/are not/RB/not getting/VBG/getting what/WP/what we/PRP/we wanted/NNP/wanted. it/PRP/it is/VBZ/is not/RB/not a/DT/a tree/NN/tree any/DT/any more/NNP/more. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, you/PRP/you understand/VBP/understand the/DT/the only/JJ/only modification/NN/modification that/WDT/that i/PRP/i am/VBP/am making/VBG/making ?/./? if/IN/if by/IN/by including/VBG/including an/DT/an edge/NN/edge /,/, i/PRP/i form/VBP/form a/DT/a cycle/NN/cycle /,/, i/PRP/i do/VBP/do not/RB/not include/VB/include that/IN/that edge/NNP/edge. so/RB/so /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to include/VB/include edge/NN/edge 4/CD/4 /,/, sorry/JJ/sorry /,/, this/DT/this /,/, this/DT/this particular/JJ/particular edge/NNP/edge. which/WDT/which is/VBZ/is the/DT/the next/JJ/next edge/NN/edge that/WDT/that i/PRP/i would/MD/would like/VB/like to/TO/to include/VB/include ?/./? 5/CD/5 /,/, i/PRP/i try/VBP/try to/TO/to include/VB/include 5/CD/5 but/CC/but 5/CD/5 also/RB/also forms/VBZ/forms the/DT/the cycle/NNP/cycle. so/RB/so /,/, i/PRP/i do/VBP/do not/RB/not include/VB/include 5/CD/5. which/WDT/which is/VBZ/is the/DT/the next/JJ/next edge/NN/edge i/PRP/i would/MD/would like/VB/like to/TO/to include/VB/include ?/./? 6/CD/6 /,/, this/DT/this edge/NN/edge /,/, 6/CD/6. actually/RB/actually /,/, i/PRP/i can/MD/can stop/VB/stop at/IN/at this/DT/this point/NN/point because/IN/because now/RB/now i/PRP/i have/VBP/have a/DT/a spanning/VBG/spanning tree/NNP/tree. any/DT/any other/JJ/other edge/NN/edge that/IN/that i/PRP/i try/VBP/try to/TO/to include/VB/include will/MD/will always/RB/always form/VB/form a/DT/a cycle/NN/cycle because/IN/because this/DT/this is/VBZ/is a/DT/a spanning/NN/spanning tree/NN/tree and/CC/and so/RB/so i/PRP/i can/MD/can stop/VB/stop this/NNP/this. as/IN/as you/PRP/you can/MD/can see/VB/see /,/, this/DT/this we/PRP/we have/VBP/have already/RB/already argued/VBN/argued in/IN/in /,/, we/PRP/we have/VBP/have not/RB/not argue/JJ/argue /,/, this/DT/this is/VBZ/is the/DT/the best/JJS/best possible/NNP/possible. actually/RB/actually /,/, till/IN/till now/RB/now /,/, we/PRP/we have/VBP/have not/RB/not seen/VBN/seen an/DT/an argument/NN/argument for/IN/for why/WRB/why this/DT/this is/VBZ/is a/DT/a best/JJS/best possible/NNP/possible. but/CC/but /,/, this/DT/this is/VBZ/is the/DT/the same/JJ/same solution/NN/solution /,/, we/PRP/we obtained/VBD/obtained earlier/NNP/earlier. soon/RB/soon /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to argue/VB/argue that/IN/that this/DT/this is/VBZ/is the/DT/the very/JJ/very best/JJS/best possible/NNP/possible. does/VBZ/does every/DT/every one/CD/one understand/NN/understand ?/./? yes/NNS/yes ?/./? can/MD/can we/VB/we write/JJ/write down/IN/down what/WP/what the/DT/the algorithm/NN/algorithm is/VBZ/is ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 42/CD/42 /CD/) let/NN/let us/PRP/us quickly/RB/quickly write/JJ/write down/IN/down what/WP/what the/DT/the algorithm/NN/algorithm is/VBZ/is /,/, because/IN/because it/PRP/it is/VBZ/is very/RB/very easy/JJ/easy to/TO/to write/VB/write down/NNP/down. so/RB/so /,/, kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm /:/( hindi/NN/hindi /:/) /./. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say the/DT/the very/JJ/very first/JJ/first step/NN/step is/VBZ/is sort/NN/sort edges/NNS/edges in/IN/in increasing/VBG/increasing order/NN/order of/IN/of length/NNP/length. let/NN/let us/PRP/us say/VBP/say /,/, this/DT/this is/VBZ/is order/NN/order is/VBZ/is e1/NNP/e1 e2/NNP/e2 e3/NNP/e3 em/NNP/em. what/WP/what is/VBZ/is this/DT/this mean/JJ/mean ?/./? this/DT/this means/VBZ/means e1/NNP/e1 is/VBZ/is the/DT/the edge/NN/edge with/IN/with the/DT/the smallest/JJS/smallest length/NNP/length. so/RB/so /,/, to/TO/to be/VB/be more/JJR/more specific/JJ/specific /,/, l/NN/l of/IN/of ei/NN/ei /,/, length/NN/length of/IN/of edge/NN/edge ei/NN/ei is/VBZ/is less/JJR/less than/IN/than the/DT/the length/NN/length of/IN/of the/DT/the edge/NN/edge ei/NN/ei plus/CC/plus 1/CD/1 /,/, less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/NN/to. now/RB/now /,/, what/WDT/what should/MD/should be/VB/be the/DT/the next/JJ/next step/NN/step ?/./? for/IN/for i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to m/VB/m do/VBP/do /,/, what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? take/VB/take the/DT/the first/JJ/first element/NN/element ?/./? take/NN/take ei/NN/ei to/TO/to that/DT/that spanning/NN/spanning tree/NNP/tree. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to define/VB/define some/DT/some spanning/VBG/spanning tree/NNP/tree. let/NN/let say/VBP/say /,/, my/PRP$/my spanning/NN/spanning tree/NN/tree is/VBZ/is t/VBN/t which/WDT/which is/VBZ/is initially/RB/initially /,/, null/NNP/null. t/NN/t is/VBZ/is the/DT/the set/NN/set of/IN/of edges/NNP/edges. so/RB/so /,/, what/WDT/what should/MD/should i/PRP/i do/VBP/do now/RB/now ?/./? if/IN/if ei/NN/ei union/NN/union t/NN/t has/VBZ/has a/DT/a cycle/NN/cycle /,/, or/CC/or is/VBZ/is a/DT/a tree/NN/tree then/RB/then t/VB/t is/VBZ/is t/VBN/t union/NN/union ei/NNP/ei. /NNP/( hindi/NN/hindi /:/) return/NN/return t/NN/t /,/, i/PRP/i plus/VBZ/plus plus/RB/plus for/IN/for loop/NN/loop /,/, /:/( hindi/NN/hindi /:/) you/PRP/you could/MD/could do/VB/do that/DT/that /,/, may/MD/may be/NNP/be. /NNP/( hindi/NN/hindi /:/) how/WRB/how do/VBP/do we/PRP/we check/VB/check ?/./? we/PRP/we can/MD/can later/VB/later array/NN/array and/CC/and we/PRP/we can/MD/can given/VB/given it/PRP/it a/DT/a on/IN/on every/DT/every edges/NNS/edges in/IN/in type/NN/type greater/NN/greater we/PRP/we can/MD/can increases/NNS/increases when/WRB/when it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than two/CD/two that/WDT/that we/PRP/we can/MD/can wrong/NNP/wrong. /:/( hindi/NN/hindi /:/) how/WRB/how do/VBP/do you/PRP/you check/VB/check /,/, if/IN/if that/DT/that edge/NN/edge that/IN/that you/PRP/you are/VBP/are trying/VBG/trying to/TO/to include/VB/include /,/, form/NN/form the/DT/the cycle/NN/cycle or/CC/or not/RB/not ?/./? /:/( hindi/NN/hindi /:/) what/WP/what is/VBZ/is visited/VBN/visited means/NNS/means ?/./? before/IN/before including/VBG/including a/DT/a vertex/NN/vertex in/IN/in the/DT/the tree/NN/tree ?/./? no/DT/no /,/, we/PRP/we do/VBP/do not/RB/not include/VB/include the/DT/the vertex/NN/vertex in/IN/in the/DT/the tree/NNP/tree. we/PRP/we are/VBP/are only/RB/only including/VBG/including edges/NNS/edges into/IN/into the/DT/the tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 51/CD/51 /CD/) as/IN/as we/PRP/we included/VBD/included edges/NNS/edges in/IN/in the/DT/the tree/NN/tree /,/, what/WP/what is/VBZ/is visited/VBN/visited array/NN/array of/IN/of that/DT/that edges/NNS/edges means/VBZ/means ?/./? /:/( hindi/NN/hindi /:/) what/WP/what does/VBZ/does visited/VBN/visited array/NN/array of/IN/of vertices/NNS/vertices mean/VBP/mean ?/./? /:/( hindi/NN/hindi /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 05/CD/05 /CD/) sir/NN/sir /,/, we/PRP/we can/MD/can do/VB/do that/DT/that we/PRP/we can/MD/can take/VB/take that/IN/that both/DT/both vertices/NNS/vertices the/DT/the n/NN/n point/NN/point of/IN/of that/DT/that edge/NN/edge and/CC/and we/PRP/we can/MD/can go/VB/go for/IN/for dfso/RB/dfso and/CC/and pfso/RB/pfso dfso/RB/dfso /,/, bsfo/RB/bsfo in/IN/in what/WP/what ?/./? we/PRP/we will/MD/will have/VB/have to/TO/to develop/VB/develop this/DT/this later/NNP/later. /NNP/( hindi/NN/hindi /:/) we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to do/VB/do it/PRP/it and/CC/and important/JJ/important thing/NN/thing is/VBZ/is also/RB/also to/TO/to do/VB/do it/PRP/it efficiently/NNP/efficiently. /:/( hindi/NN/hindi /:/) because/IN/because that/DT/that will/MD/will dictate/VB/dictate the/DT/the running/NN/running time/NN/time /,/, because/IN/because expect/JJ/expect for/IN/for this/DT/this step/NN/step /,/, there/EX/there is/VBZ/is nothing/NN/nothing else/RB/else this/DT/this algorithm/NNP/algorithm. /NNP/( hindi/NN/hindi /:/) how/WRB/how much/JJ/much time/NN/time will/MD/will that/VB/that take/VB/take ?/./? m/NN/m log/NN/log m/NN/m /:/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this will/MD/will /,/, if/IN/if this/DT/this step/NN/step takes/VBZ/takes less/JJR/less then/RB/then m/NN/m log/NN/log m/NN/m time/NN/time /,/, over/IN/over all/DT/all iteration/NN/iteration put/VBD/put together/RP/together then/RB/then this/DT/this will/MD/will be/VB/be an/DT/an order/NN/order /,/, m/NN/m log/NN/log m/NN/m algorithm/NNP/algorithm. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, we/PRP/we have/VBP/have to/TO/to somehow/VB/somehow achieve/JJ/achieve that/IN/that /,/, but/CC/but we/PRP/we will/MD/will come/VB/come to/TO/to that/DT/that point/NN/point later/NNP/later. before/IN/before that/DT/that /,/, we/PRP/we have/VBP/have to/TO/to argue/VB/argue /,/, why/WRB/why this/DT/this is/VBZ/is a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NN/tree ?/./? /:/( hindi/NN/hindi /:/) that/IN/that means/NNS/means all/DT/all you/PRP/you are/VBP/are saying/VBG/saying /,/, you/PRP/you know/VBP/know /,/, you/PRP/you can/MD/can not/RB/not greedily/RB/greedily impure/VB/impure the/DT/the tree/NNP/tree. may/MD/may be/VB/be /,/, but/CC/but there/EX/there is/VBZ/is some/DT/some other/JJ/other sequence/NN/sequence of/IN/of /,/, /:/( hindi/NN/hindi /:/) no/DT/no /,/, we/PRP/we are/VBP/are not/RB/not taking/VBG/taking always/RB/always the/DT/the minimum/NNP/minimum. we/PRP/we are/VBP/are not/RB/not taking/VBG/taking always/RB/always the/DT/the minimum/JJ/minimum /,/, because/IN/because /,/, we/PRP/we are/VBP/are at/IN/at sometime/NN/sometime /,/, when/WRB/when the/DT/the minimum/JJ/minimum forms/NNS/forms a/DT/a cycle/NN/cycle /,/, we/PRP/we through/IN/through that/DT/that minimum/JJ/minimum away/NNP/away. /NNP/( conversation/NN/conversation /:/) so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to formalize/VB/formalize this/DT/this equation/NNP/equation. all/DT/all i/PRP/i will/MD/will say/VB/say is/VBZ/is /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a proof/NNP/proof. this/DT/this is/VBZ/is an/DT/an intrusion/NN/intrusion for/IN/for the/DT/the proof/NNP/proof. let/NN/let us/PRP/us see/VBP/see what/WP/what a/DT/a proof/NN/proof looks/VBZ/looks like/NNP/like. /NNP/( hindi/NN/hindi /:/) so/RB/so now/RB/now /,/, what/WDT/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do ?/./? look/VB/look at/IN/at this/DT/this carefully/RB/carefully because/IN/because this/DT/this is/VBZ/is how/WRB/how you/PRP/you will/MD/will have/VB/have to/TO/to write/VB/write your/PRP$/your proofs/NNS/proofs in/IN/in the/DT/the exams/NNP/exams. i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the edges/NNS/edges of/IN/of kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm /,/, the/DT/the edges/NNS/edges picked/VBD/picked by/IN/by kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm picks/NNS/picks up/IN/up certain/JJ/certain set/NN/set of/IN/of edges/NNP/edges. let/NN/let us/PRP/us call/VBP/call those/DT/those edges/NNS/edges /,/, let/VB/let us/PRP/us give/VB/give those/DT/those edges/NNS/edges name/NNP/name. let/VB/let us/PRP/us call/MD/call them/PRP/them g1/NNP/g1 /,/, g1/NNP/g1 is/VBZ/is like/IN/like say/NN/say /,/, the/DT/the first/JJ/first edge/NN/edge in/IN/in kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, clearly/RB/clearly it/PRP/it is/VBZ/is the/DT/the edges/NNS/edges of/IN/of the/DT/the /,/, so/RB/so let/VB/let us/PRP/us g1/NNP/g1 g2/NNP/g2 g3/NNP/g3. how/WRB/how many/JJ/many edges/NNS/edges of/IN/of does/NNS/does kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm take/VB/take ?/./? n/NN/n minus/NN/minus 1,less/CD/1,less than/IN/than or/CC/or equal/JJ/equal to/TO/to /VB/( hindi/NN/hindi /:/) all/DT/all edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/JJ/distinct /NN/( hindi/NN/hindi /:/) the/DT/the same/JJ/same proof/NN/proof can/MD/can be/VB/be extended/VBN/extended to/TO/to a/DT/a non/NN/non distinct/NN/distinct case/NN/case also/NNP/also. that/IN/that will/MD/will be/VB/be a/DT/a question/NN/question in/IN/in the/DT/the majors/NNP/majors. so/RB/so /,/, but/CC/but for/IN/for now/RB/now /,/, you/PRP/you will/MD/will /,/, we/PRP/we will/MD/will just/RB/just assume/VB/assume that/IN/that /:/... the/DT/the other/JJ/other set/NN/set of/IN/of edges/NNS/edges is/VBZ/is the/DT/the set/NN/set of/IN/of edges/NNS/edges that/WDT/that /,/, what/WP/what should/MD/should be/VB/be the/DT/the other/JJ/other ?/./? so/IN/so /,/, this/DT/this is/VBZ/is the/DT/the edges/NNS/edges that/WDT/that kruskal/JJ/kruskal ?/./? s/NNS/s pick/NNP/pick. suppose/NN/suppose /,/, you/PRP/you have/VBP/have figured/VBN/figured out/RP/out /,/, what/WP/what is/VBZ/is the/DT/the best/JJS/best possible/JJ/possible tree/NN/tree is/VBZ/is ?/./? /:/( hindi/NN/hindi /:/) f1/NNP/f1 f2/NNP/f2 f3/NNP/f3 /NNP/( hindi/NN/hindi /:/) and/CC/and again/RB/again this/DT/this ordering/NN/ordering is/VBZ/is such/JJ/such that/IN/that f1/NNP/f1 is/VBZ/is less/JJR/less than/IN/than f2/NNP/f2 which/WDT/which is/VBZ/is less/RBR/less than/IN/than f3/NNP/f3 and/CC/and so/RB/so on/NNP/on. /NNP/( hindi/NN/hindi /:/) this/DT/this is/VBZ/is the/DT/the optimum/NN/optimum tree/NNP/tree. by/IN/by optimum/NN/optimum i/PRP/i mean/VBP/mean /,/, the/DT/the best/JJS/best tree/NN/tree /,/, the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. now/RB/now /,/, these/DT/these 2/CD/2 sets/NNS/sets of/IN/of edges/NNS/edges need/VBP/need not/RB/not be/VB/be the/DT/the same/NNP/same. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 37/CD/37 /CD/) what/WP/what we/PRP/we will/MD/will argue/VB/argue /,/, is/VBZ/is that/IN/that they/PRP/they are/VBP/are indeed/RB/indeed the/DT/the same/NNP/same. if/IN/if they/PRP/they are/VBP/are the/DT/the same/JJ/same then/RB/then what/WP/what we/PRP/we have/VBP/have found/VBN/found from/IN/from kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm is/VBZ/is the/DT/the best/JJS/best tree/NNP/tree. so/RB/so /,/, if/IN/if these/DT/these 2/CD/2 set/NN/set of/IN/of edges/NNS/edges are/VBP/are not/RB/not the/DT/the same/JJ/same /,/, so/IN/so /,/, the/DT/the proof/NN/proof is/VBZ/is by/IN/by contradiction/NNP/contradiction. suppose/NN/suppose /,/, these/DT/these set/NN/set differ/VBP/differ and/CC/and the/DT/the first/JJ/first place/NN/place they/PRP/they differ/VBP/differ is/VBZ/is i/NNP/i. what/WP/what you/PRP/you mean/VBP/mean by/IN/by that/DT/that ?/./? /:/( hindi/NN/hindi /:/) .because/JJ/.because /,/, that/IN/that will/MD/will mean/VB/mean that/IN/that gi/NN/gi and/CC/and fi/NN/fi are/VBP/are also/RB/also the/DT/the same/NNP/same. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first place/NN/place where/WRB/where they/PRP/they differ/VBP/differ /,/, first/JJ/first point/NN/point of/IN/of difference/NNP/difference. /NNP/( hindi/NN/hindi /:/) case/NN/case 1/CD/1 /,/, gi/NN/gi /,/, let/VB/let say/VBP/say less/JJR/less than/IN/than fi/NNP/fi. /NNP/( hindi/NN/hindi /:/) every/DT/every /,/, all/DT/all edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/NNP/distinct. /NNP/( hindi/NN/hindi /:/) g/NN/g i/PRP/i can/MD/can not/RB/not be/VB/be 1/CD/1 of/IN/of these/DT/these because/IN/because it/PRP/it is/VBZ/is of/IN/of length/NN/length /,/, strictly/RB/strictly less/JJR/less than/IN/than /,/, /:/( hindi/NN/hindi /:/) i/PRP/i actually/RB/actually mean/JJ/mean /,/, length/NN/length of/IN/of gi/NN/gi less/RBR/less then/RB/then length/NN/length of/IN/of fi/NN/fi /,/, just/RB/just to/TO/to be/VB/be more/JJR/more particular/NNP/particular. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to write/VB/write it/PRP/it again/RB/again but/CC/but that/IN/that is/VBZ/is what/WP/what i/PRP/i /,/, it/PRP/it really/RB/really means/NNP/means. so/RB/so /,/, gi/NN/gi less/JJR/less than/IN/than fi/NN/fi /,/, then/RB/then that/IN/that means/NNS/means /,/, the/DT/the g/NN/g i/PRP/i can/MD/can not/RB/not be/VB/be 1/CD/1 of/IN/of these/DT/these and/CC/and it/PRP/it can/MD/can not/RB/not be/VB/be 1of/CD/1of these/NNP/these. can/MD/can it/PRP/it one/CD/one of/IN/of these/DT/these ?/./? no/DT/no /,/, because/IN/because these/DT/these are/VBP/are the/DT/the same/JJ/same as/IN/as these/DT/these and/CC/and they/PRP/they are/VBP/are all/RB/all distinct/NNP/distinct. so/RB/so /,/, these/DT/these can/MD/can not/RB/not be/VB/be the/DT/the same/JJ/same /,/, so/IN/so that/IN/that /CD/( hindi/NN/hindi /:/) so/RB/so /,/, g/IN/g i/PRP/i less/JJR/less than/IN/than fi/NN/fi /,/, add/JJ/add gi/NN/gi to/TO/to opt/VB/opt tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) gi/NN/gi is/VBZ/is the/DT/the longest/JJS/longest edge/NN/edge in/IN/in the/DT/the cycle/NN/cycle /,/, can/MD/can gi/VB/gi be/VB/be the/DT/the longest/JJS/longest edge/NN/edge on/IN/on the/DT/the cycle/NN/cycle ?/./? add/NN/add gi/NN/gi to/TO/to optimum/VB/optimum tree/NNP/tree. let/VB/let c/NN/c be/VB/be the/DT/the cycle/NN/cycle formed/NNP/formed. this/DT/this cycle/NN/cycle /,/, i/PRP/i am/VBP/am calling/VBG/calling it/PRP/it c/NNP/c. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 54/CD/54 /CD/) you/PRP/you are/VBP/are saying/VBG/saying /:/( hindi/NN/hindi /:/) all/DT/all of/IN/of these/DT/these edges/NNS/edges had/VBD/had length/NN/length less/JJR/less than/IN/than gi/NN/gi /,/, what/WP/what are/VBP/are these/DT/these edges/NNS/edges ?/./? these/DT/these edges/NNS/edges are/VBP/are some/DT/some edges/NNS/edges are/VBP/are from/IN/from this/DT/this side/NNP/side. /NNP/( hindi/NN/hindi /:/) they/PRP/they are/VBP/are all/RB/all from/IN/from this/DT/this set/NN/set /,/, f1/NNP/f1 to/TO/to fi/VB/fi /,/, n/NN/n minus/NN/minus 1/CD/1. now/RB/now /,/, if/IN/if every/DT/every edge/NN/edge has/VBZ/has length/NN/length less/JJR/less than/IN/than gi/NN/gi /,/, then/RB/then these/DT/these edges/NNS/edges have/VBP/have to/TO/to be/VB/be f1/NNP/f1 through/IN/through fi/NN/fi minus/NN/minus 1/CD/1 /,/, yes/NNP/yes. these/DT/these edges/NNS/edges have/VBP/have to/TO/to be/VB/be from/IN/from the/DT/the set/NN/set f1/NNP/f1 to/TO/to fi/VB/fi minus/NN/minus 1/CD/1. /CD/( hindi/NN/hindi /:/) then/RB/then these/DT/these edges/NNS/edges have/VBP/have to/TO/to be/VB/be from/IN/from the/DT/the set/NN/set /,/, f1/NNP/f1 to/TO/to fi/VB/fi minus/NN/minus 1/CD/1. but/CC/but /,/, f1/NNP/f1 through/IN/through fi/NN/fi minus/NN/minus 1/CD/1 is/VBZ/is identical/JJ/identical to/TO/to g1/NNP/g1 to/TO/to gi/VB/gi minus/NN/minus 1/CD/1. /CD/( hindi/NN/hindi /:/) contradiction/NN/contradiction /,/, should/MD/should i/PRP/i repeat/VB/repeat ?/./? no/DT/no ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 30/CD/30 /CD/) quick/JJ/quick repetition/NN/repetition /,/, gi/NN/gi is/VBZ/is less/JJR/less than/IN/than fi/NN/fi /,/, i/PRP/i add/VBP/add gi/NN/gi to/TO/to the/DT/the optimum/NN/optimum tree/NN/tree /,/, to/TO/to this/DT/this tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) but/CC/but /,/, this/DT/this set/NN/set is/VBZ/is identical/JJ/identical to/TO/to this/DT/this set/NNP/set. great/NN/great /,/, that/IN/that is/VBZ/is why/WRB/why this/DT/this can/MD/can not/RB/not happen/NNP/happen. let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the other/JJ/other cases/NNP/cases. do/VBP/do you/PRP/you want/VB/want me/PRP/me to/TO/to repeat/VB/repeat ?/./? does/VBZ/does everyone/NN/everyone following/VBG/following the/DT/the line/NN/line of/IN/of argument/NN/argument ?/./? there/EX/there are/VBP/are 2/CD/2 or/CC/or 3/CD/3 /,/, 2/CD/2 or/CC/or 3/CD/3 fine/NN/fine point/NN/point there/NNP/there. but/CC/but /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the other/JJ/other case/NNP/case. let/NN/let me/PRP/me 1/CD/1 second/JJ/second /,/, write/JJ/write down/IN/down this/DT/this /,/, because/IN/because it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to have/VB/have this/NNP/this. we/PRP/we are/VBP/are not/RB/not talking/VBG/talking of/IN/of case/NN/case 2/CD/2 and/CC/and this/DT/this case/NN/case is/VBZ/is when/WRB/when fi/NN/fi is/VBZ/is less/JJR/less than/IN/than gi/NNP/gi. recall/NN/recall that/WDT/that these/DT/these are/VBP/are identical/JJ/identical and/CC/and now/RB/now f/NN/f i/PRP/i is/VBZ/is less/JJR/less than/IN/than gi/NN/gi /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do now/NNP/now. /NNP/( hindi/NN/hindi /:/) fi/NN/fi is/VBZ/is distinct/JJ/distinct from/IN/from g1to/NNP/g1to gi/NN/gi minus/VBZ/minus 1/CD/1. /CD/( hindi/NN/hindi /:/) why/WRB/why did/VBD/did kruskal/JJ/kruskal not/RB/not pick/VB/pick fi/NN/fi ?/./? ask/NN/ask him/PRP/him /,/, why/WRB/why ask/NN/ask us/PRP/us ?/./? why/WRB/why did/VBD/did kruskal/JJ/kruskal not/RB/not pick/VB/pick fi/NN/fi ?/./? because/IN/because they/PRP/they form/VBP/form the/DT/the cycle/NN/cycle /,/, that/IN/that was/VBD/was the/DT/the only/JJ/only reason/NN/reason why/WRB/why he/PRP/he did/VBD/did not/RB/not pick/VB/pick fi/NN/fi /:/( noise/NN/noise /:/) /./. if/IN/if it/PRP/it forms/VBZ/forms the/DT/the cycle/NN/cycle /,/, so/RB/so because/IN/because /,/, fi/VBP/fi union/NN/union g1/NNP/g1 through/IN/through gi/NN/gi minus/NN/minus 1/CD/1 contains/NNS/contains a/DT/a cycle/NN/cycle /,/, these/DT/these set/NN/set of/IN/of edges/NNS/edges /:/( hindi/NN/hindi /:/) but/CC/but these/DT/these set/NN/set of/IN/of edges/NNS/edges is/VBZ/is identical/JJ/identical to/TO/to fi/VB/fi union/NN/union f1/NNP/f1 to/TO/to fi/VB/fi minus/NN/minus 1/CD/1 /CD/( hindi/NN/hindi /:/) that/IN/that implies/NNS/implies optimum/VBP/optimum tree/JJ/tree also/RB/also has/VBZ/has a/DT/a cycle/NN/cycle but/CC/but that/IN/that is/VBZ/is not/RB/not possible/NNP/possible. because/IN/because it/PRP/it is/VBZ/is a/DT/a tree/NN/tree /,/, so/RB/so that/IN/that is/VBZ/is the/DT/the contradiction/NNP/contradiction. /NNP/( hindi/NN/hindi /:/) there/EX/there is/VBZ/is no/DT/no place/NN/place where/WRB/where these/DT/these 2/CD/2 sets/NNS/sets differ/NNP/differ. because/IN/because /,/, you/PRP/you said/VBD/said /,/, if/IN/if these/DT/these 2/CD/2 sets/NNS/sets differ/VBP/differ /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the first/JJ/first place/NN/place where/WRB/where they/PRP/they differ/NNP/differ. if/IN/if they/PRP/they differ/VBP/differ /,/, then/RB/then let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the first/JJ/first place/NN/place where/WRB/where they/PRP/they differ/VBP/differ and/CC/and apply/RB/apply this/DT/this /NN/( hindi/NN/hindi /:/) that/IN/that means/NNS/means they/PRP/they do/VBP/do not/RB/not differ/VB/differ at/IN/at all/DT/all /,/, if/IN/if they/PRP/they do/VBP/do not/RB/not differ/VB/differ /,/, these/DT/these to/TO/to case/VB/case are/VBP/are the/DT/the same/NNP/same. so/RB/so /,/, kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm finds/NNS/finds the/DT/the best/JJS/best tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 47/CD/47 /CD/) now/RB/now /,/, note/VBP/note that/IN/that there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of the/DT/the term/NN/term the/DT/the best/JJS/best tree/NNP/tree. should/MD/should i/VB/i use/NN/use the/DT/the term/NN/term the/DT/the best/JJS/best tree/NN/tree or/CC/or a/DT/a best/JJS/best tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, is/VBZ/is the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree unique/NN/unique ?/./? /:/( hindi/NN/hindi /:/) yes/NNS/yes /,/, listen/RB/listen to/TO/to me/PRP/me carefully/RB/carefully /:/( hindi/NN/hindi /:/) edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/NNP/distinct. is/VBZ/is the/DT/the mst/NN/mst unique/NN/unique ?/./? yes/NNS/yes /,/, if/IN/if edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/NNP/distinct. no/DT/no /,/, otherwise/NNP/otherwise. why/WRB/why no/DT/no /,/, otherwise/VBP/otherwise ?/./? /:/( hindi/NN/hindi /:/) very/RB/very simple/NNP/simple. so/RB/so /,/, if/IN/if edge/NN/edge lengths/NNS/lengths are/VBP/are not/RB/not distinct/JJ/distinct /,/, then/RB/then you/PRP/you could/MD/could have/VB/have many/JJ/many different/JJ/different minimum/JJ/minimum spanning/NN/spanning trees/NNP/trees. but/CC/but /,/, if/IN/if the/DT/the edge/NN/edge lengths/NNS/lengths are/VBP/are unique/JJ/unique or/CC/or distinct/JJ/distinct /,/, then/RB/then you/PRP/you have/VB/have a/DT/a unique/JJ/unique minimum/NN/minimum spanning/VBG/spanning tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) that/IN/that follows/VBZ/follows from/IN/from the/DT/the proof/NN/proof that/IN/that we/PRP/we have/VBP/have seen/VBN/seen /,/, they/PRP/they will/MD/will be/VB/be a/DT/a unique/JJ/unique minimum/NN/minimum spanning/VBG/spanning tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) great/JJ/great /,/, /:/( hindi/NN/hindi /:/) we/PRP/we have/VBP/have proved/VBN/proved the/DT/the correctness/NN/correctness of/IN/of kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/NNP/algorithm. /NNP/( hindi/NN/hindi /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 12/CD/12 /CD/) now/RB/now /,/, we/PRP/we have/VBP/have to/TO/to figure/VB/figure out/RP/out /:/( hindi/NN/hindi /:/) when/WRB/when i/PRP/i include/VBP/include an/DT/an edge/NN/edge /,/, how/WRB/how do/VBP/do i/PRP/i ensure/VB/ensure that/IN/that no/DT/no cycle/NN/cycle in/IN/in formed/NNP/formed. basically/RB/basically /,/, that/IN/that is/VBZ/is the/DT/the question/NN/question /,/, how/WRB/how do/VBP/do we/PRP/we check/VB/check if/IN/if a/DT/a cycle/NN/cycle is/VBZ/is formed/VBN/formed when/WRB/when an/DT/an edge/NN/edge e/NN/e /,/, let/VB/let say/VBP/say /,/, an/DT/an edge/NN/edge e/NN/e /,/, u/NN/u comma/NN/comma v/NN/v is/VBZ/is included/VBN/included and/CC/and we/PRP/we have/VBP/have to/TO/to do/VB/do this/DT/this quickly/NNP/quickly. /NNP/( hindi/NN/hindi /:/) when/WRB/when will/MD/will be/VB/be a/DT/a /,/, when/WRB/when will/MD/will a/DT/a cycle/NN/cycle be/VB/be formed/VBN/formed ?/./? i/PRP/i am/VBP/am trying/VBG/trying to/TO/to include/VB/include this/DT/this edge/NN/edge /,/, u/NN/u /,/, v/NNP/v. /NNP/( hindi/NN/hindi /:/) when/WRB/when u/NN/u and/CC/and v/NN/v are/VBP/are already/RB/already connected/VBN/connected /-NONE-/( hindi/NN/hindi /:/) cycle/NN/cycle is/VBZ/is formed/VBN/formed if/IN/if and/CC/and only/RB/only if/IN/if u/PRP/u and/CC/and v/NN/v are/VBP/are already/RB/already connected/NNP/connected. yes/NNS/yes /,/, already/RB/already connected/VBN/connected /,/, /NNP/( hindi/NN/hindi /:/) u/NN/u and/CC/and v/NN/v are/VBP/are in/IN/in the/DT/the same/JJ/same connected/VBN/connected component/NNP/component. connected/VBD/connected component/NN/component or/CC/or component/NN/component ?/./? /:/( hindi/NN/hindi /:/) so/RB/so we/PRP/we are/VBP/are /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to maintain/VB/maintain the/DT/the collection/NN/collection of/IN/of components/NNP/components. so/RB/so note/VB/note that/IN/that /,/, so/RB/so /,/, what/WDT/what is/VBZ/is happening/VBG/happening ?/./? in/IN/in kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm /,/, suppose/DT/suppose /,/, these/DT/these were/VBD/were my/PRP$/my vertices/NNS/vertices /:/( hindi/NN/hindi /:/) does/VBZ/does not/RB/not matter/NNP/matter. this/DT/this is/VBZ/is or/CC/or no/DT/no matter/NN/matter /,/, what/WP/what 3/CD/3 edges/NNS/edges i/PRP/i pick/VBP/pick /,/, it/PRP/it will/MD/will always/RB/always have/VB/have n/VBN/n minus/NN/minus 3/CD/3 connected/VBN/connected component/NNP/component. /NNP/( hindi/NN/hindi /:/) 3/CD/3 edges/NNS/edges which/WDT/which form/NN/form of/IN/of a/DT/a forest/NN/forest /,/, then/RB/then the/DT/the number/NN/number of/IN/of trees/NNS/trees in/IN/in the/DT/the forest/NNP/forest. see/VBP/see /,/, if/IN/if i/PRP/i have/VBP/have a/DT/a forest/JJS/forest containing/VBG/containing some/DT/some k/NN/k edges/NNS/edges /,/, then/RB/then how/WRB/how many/JJ/many trees/NNS/trees are/VBP/are there/RB/there in/IN/in my/PRP$/my forest/NN/forest ?/./? n/NN/n minus/NN/minus k/NN/k /,/, this/DT/this you/PRP/you can/MD/can prove/VB/prove very/RB/very easily/NNP/easily. basically/RB/basically /,/, /:/( hindi/NN/hindi /:/) i/PRP/i combine/VBP/combine /,/, 2/CD/2 connected/VBN/connected components/NNS/components into/IN/into 1/CD/1 connected/VBN/connected component/NNP/component. that/IN/that is/VBZ/is the/DT/the way/NN/way you/PRP/you have/VB/have to/TO/to think/VB/think of/IN/of /,/, i/PRP/i combine/VBP/combine 2/CD/2 connected/VBN/connected components/NNS/components into/IN/into 1/CD/1 connected/VBN/connected component/NN/component /:/( hindi/NN/hindi /:/) so/RB/so /,/, the/DT/the number/NN/number of/IN/of connected/VBN/connected components/NNS/components reduces/NNS/reduces by/IN/by 1/CD/1 every/DT/every time/NN/time you/PRP/you take/VBP/take an/DT/an edge/NNP/edge. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, /:/( hindi/NN/hindi /:/) at/IN/at each/DT/each step/NN/step /:/( hindi/NN/hindi /:/) with/IN/with every/DT/every edge/NN/edge we/PRP/we include/NNP/include. so/RB/so /,/, what/WDT/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is /,/, to/TO/to maintain/VB/maintain the/DT/the connected/VBN/connected component/NN/component we/PRP/we have/VBP/have at/IN/at this/DT/this stage/NN/stage /,/, how/WRB/how many/JJ/many connected/VBN/connected component/NN/component have/VBP/have at/IN/at this/DT/this stage/NN/stage ?/./? 4/CD/4. i/PRP/i am/VBP/am going/VBG/going to/TO/to maintain/VB/maintain them/PRP/them as/IN/as 4/CD/4 sets/NNS/sets of/IN/of vertices/NNP/vertices. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/DT/that ?/./? let/NN/let me/PRP/me give/VBP/give these/DT/these vertices/NNS/vertices names/VBZ/names /,/, a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /,/, g/NN/g /,/, h/NNP/h. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have 4/CD/4 set/VBN/set /,/, abc/NN/abc is/VBZ/is 1/CD/1 set/VBN/set /,/, fgh/JJ/fgh is/VBZ/is another/DT/another /,/, d/NN/d is/VBZ/is the/DT/the third/JJ/third and/CC/and e/NN/e is/VBZ/is the/DT/the fourth/NNP/fourth. these/DT/these are/VBP/are the/DT/the 4/CD/4 sets/NNS/sets that/WDT/that i/PRP/i have/VBP/have at/IN/at this/DT/this point/NNP/point. i/PRP/i am/VBP/am just/RB/just interested/JJ/interested in/IN/in the/DT/the sets/NNS/sets of/IN/of vertices/NNP/vertices. the/DT/the sets/NNS/sets of/IN/of vertices/NNS/vertices in/IN/in 1/CD/1 connected/VBN/connected component/NNP/component. they/PRP/they form/VBP/form 1/CD/1 set/NN/set /,/, as/IN/as you/PRP/you can/MD/can see/VB/see /,/, these/DT/these sets/NNS/sets are/VBP/are all/DT/all disjoint/NN/disjoint and/CC/and there/EX/there union/NN/union is/VBZ/is the/DT/the universe/NN/universe /,/, they/PRP/they form/VBP/form a/DT/a partition/NN/partition of/IN/of the/DT/the vertices/NNS/vertices sets/NNP/sets. now/RB/now /,/, what/WDT/what is/VBZ/is it/PRP/it that/IN/that happens/NNS/happens at/IN/at each/DT/each step/NN/step ?/./? when/WRB/when i/PRP/i try/VBP/try to/TO/to include/VB/include an/DT/an edge/NN/edge /:/( hindi/NN/hindi /:/) what/WP/what do/VBP/do i/PRP/i have/VB/have to/TO/to check/VB/check ?/./? /:/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the data/NNS/data structure/VBP/structure we/PRP/we have/VBP/have to/TO/to maintain/NNP/maintain. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 57/CD/57 /:/: 39/CD/39 /CD/) we/PRP/we are/VBP/are going/VBG/going to/TO/to discuss/VB/discuss it/PRP/it in/IN/in more/JJR/more detail/NN/detail in/IN/in next/JJ/next class/NNP/class. you/PRP/you just/RB/just keep/VB/keep this/DT/this in/IN/in mind/NN/mind and/CC/and we/PRP/we will/MD/will see/VB/see how/WRB/how do/VB/do to/TO/to this/DT/this data/NN/data structure/NN/structure and/CC/and what/WP/what time/NN/time does/VBZ/does it/PRP/it give/VB/give us/PRP/us for/IN/for kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, with/IN/with that/DT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to end/VB/end today/NN/today ?/./? s/NNS/s discussion/NNP/discussion. we/PRP/we are/VBP/are going/VBG/going to/TO/to continue/VB/continue the/DT/the discussion/NN/discussion on/IN/on this/DT/this data/NN/data structure/NN/structure in/IN/in next/JJ/next class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 32/CD/32 first/JJ/first class/NN/class we/PRP/we looked/VBD/looked at/IN/at the/DT/the kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm for/IN/for computing/NN/computing minimum/NN/minimum spanning/VBG/spanning trees/NNP/trees. we/PRP/we were/VBD/were /,/, we/PRP/we saw/VBD/saw what/WP/what the/DT/the algorithm/NN/algorithm was/VBD/was and/CC/and what/WP/what we/PRP/we were/VBD/were doing/VBG/doing was/VBD/was /,/, to/TO/to complete/VB/complete algorithm/NN/algorithm /,/, we/PRP/we have/VBP/have to/TO/to figure/VB/figure out/RP/out /,/, how/WRB/how to/TO/to detect/VB/detect if/IN/if there/EX/there is/VBZ/is a/DT/a cycle/NN/cycle that/WDT/that gets/VBZ/gets formed/VBN/formed when/WRB/when we/PRP/we add/VBP/add an/DT/an edge/NN/edge into/IN/into the/DT/the current/JJ/current set/NN/set of/IN/of edges/NNS/edges that/WDT/that we/PRP/we have/VBP/have already/RB/already went/VBN/went by/NNP/by. so/RB/so /,/, if/IN/if you/PRP/you recall/VBP/recall what/WP/what we/PRP/we have/VBP/have said/VBN/said was/VBD/was that/IN/that we/PRP/we would/MD/would try/VB/try and/CC/and maintain/VB/maintain the/DT/the collection/NN/collection of/IN/of connected/VBN/connected components/NNP/components. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to revise/VB/revise part/NN/part of/IN/of that/DT/that but/CC/but we/PRP/we are/VBP/are going/VBG/going to/TO/to today/NN/today /,/, look/NN/look at/IN/at the/DT/the data/NNS/data structure/VBP/structure /,/, for/IN/for being/VBG/being to/TO/to do/VB/do that/DT/that /,/, that/IN/that is/VBZ/is called/VBN/called the/DT/the union/NN/union fine/NN/fine data/NNS/data structure/NNP/structure. so/RB/so /,/, let/VB/let see/NN/see /,/, where/WRB/where we/PRP/we were/VBD/were as/IN/as far/RB/far as/IN/as kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm was/VBD/was considered/NNP/considered. we/PRP/we said/VBD/said /,/, i/PRP/i have/VBP/have already/RB/already picked/VBN/picked a/DT/a set/NN/set of/IN/of edges/NNP/edges. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 27/CD/27 /CD/) recall/NN/recall that/WDT/that the/DT/the set/NN/set of/IN/of edges/NNS/edges would/MD/would always/RB/always form/VB/form a/DT/a forest/NN/forest /,/, it/PRP/it would/MD/would be/VB/be a/DT/a collection/NN/collection of/IN/of trees/NNP/trees. there/EX/there could/MD/could be/VB/be no/RB/no cycle/NN/cycle that/IN/that is/VBZ/is already/RB/already existing/NNP/existing. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the set/NN/set of/IN/of edges/NNS/edges that/WDT/that have/VBP/have already/RB/already been/VBN/been picked/VBN/picked in/IN/in krukal/JJ/krukal ?/./? s/NNS/s algorithm/NNP/algorithm. now/RB/now /,/, when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to add/VB/add a/DT/a new/JJ/new edge/NN/edge /,/, i/PRP/i have/VBP/have to/TO/to check/VB/check if/IN/if it/PRP/it forms/VBZ/forms a/DT/a cycle/NN/cycle or/CC/or not/NNP/not. suppose/NN/suppose /,/, this/DT/this is/VBZ/is the/DT/the new/JJ/new edge/NN/edge being/VBG/being added/VBN/added /,/, this/DT/this forms/NNS/forms a/DT/a cycle/NN/cycle and/CC/and 1/CD/1 way/NN/way of/IN/of detecting/VBG/detecting whether/IN/whether a/DT/a certain/JJ/certain edge/NN/edge would/MD/would form/VB/form of/IN/of a/DT/a cycle/NN/cycle or/CC/or not/RB/not /,/, is/VBZ/is to/TO/to check/VB/check /,/, if/IN/if its/PRP$/its 2/CD/2 end/NN/end points/NNS/points lie/VBP/lie in/IN/in the/DT/the same/JJ/same tree/NN/tree of/IN/of this/DT/this forest/NNP/forest. the/DT/the tree/NN/tree is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the connected/VBN/connected component/NN/component and/CC/and so/RB/so /,/, it/PRP/it suffices/VBZ/suffices to/TO/to check/VB/check whether/IN/whether the/DT/the 2/CD/2 end/NN/end points/NNS/points of/IN/of an/DT/an edge/NN/edge /,/, line/NN/line the/DT/the same/JJ/same connected/VBN/connected component/NNP/component. this/DT/this is/VBZ/is where/WRB/where we/PRP/we were/VBD/were /,/, at/IN/at the/DT/the last/JJ/last class/NNP/class. so/IN/so /,/, we/PRP/we have/VBP/have to/TO/to somehow/VB/somehow maintain/NN/maintain our/PRP$/our collection/NN/collection of/IN/of connected/VBN/connected components/NNP/components. so/RB/so /,/, as/IN/as the/DT/the algorithm/NN/algorithm proceeds/VBZ/proceeds /:/- we/PRP/we have/VBP/have discussed/VBN/discussed this/DT/this in/IN/in the/DT/the last/JJ/last class/NN/class /:/- in/IN/in number/NN/number of/IN/of connected/VBN/connected component/NN/component reduces/NNS/reduces by/IN/by 1/CD/1 with/IN/with every/DT/every step/NNP/step. initially/RB/initially /,/, we/PRP/we started/VBD/started off/RP/off with/IN/with n/JJ/n connected/VBN/connected components/NNP/components. initially/RB/initially /,/, we/PRP/we had/VBD/had n/VBN/n connected/VBN/connected component/NN/component and/CC/and eventually/RB/eventually /,/, finally/RB/finally /,/, we/PRP/we have/VBP/have only/RB/only /,/, how/WRB/how many/JJ/many connected/VBN/connected component/NN/component will/MD/will we/VB/we have/VBP/have ?/./? 1/CD/1. this/DT/this is/VBZ/is how/WRB/how the/DT/the algorithm/NN/algorithm proceeds/NNP/proceeds. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to abstract/VB/abstract this/DT/this problem/NN/problem out/IN/out and/CC/and capture/NN/capture it/PRP/it as/IN/as a/DT/a problem/NN/problem on/IN/on maintaining/NN/maintaining a/DT/a collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNP/sets. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the setting/NN/setting now/RB/now ?/./? i/PRP/i have/VBP/have a/DT/a universe/NN/universe of/IN/of elements/NNP/elements. let/NN/let say/VBP/say /,/, i/PRP/i have/VBP/have e1/NNP/e1 e2/NNP/e2 en/NNP/en. let/VBD/let us/PRP/us say/VBP/say /,/, these/DT/these are/VBP/are n/VBN/n elements/NNS/elements in/IN/in my/PRP$/my universe/NNP/universe. initially/RB/initially /,/, each/DT/each of/IN/of these/DT/these elements/NNS/elements is/VBZ/is a/DT/a set/NN/set in/IN/in itself/NNP/itself. now/RB/now /,/, the/DT/the following/VBG/following operation/NN/operation /,/, so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets that/WDT/that i/PRP/i have/VBP/have. initially/RB/initially /,/, i/PRP/i have/VBP/have the/DT/the collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets /,/, at/IN/at each/DT/each stage/NN/stage i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have a/DT/a collection/NN/collection of/IN/of disjoints/NNP/disjoints. so/RB/so /,/, what/WDT/what we/PRP/we are/VBP/are trying/VBG/trying to/TO/to do/VB/do is/VBZ/is to/TO/to maintain/VB/maintain a/DT/a collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets under/IN/under the/DT/the operations/NNS/operations of/IN/of /,/, let/VB/let us/PRP/us see/VB/see /,/, what/WDT/what are/VBP/are the/DT/the operations/NNS/operations /,/, we/PRP/we are/VBP/are doing/VBG/doing /,/, going/VBG/going to/TO/to be/VB/be doing/VBG/doing on/IN/on the/DT/the disjoint/NN/disjoint sets/NNP/sets. so/RB/so /,/, what/WDT/what do/VBP/do these/DT/these elements/NNS/elements correspond/VBP/correspond to/TO/to /,/, in/IN/in the/DT/the case/NN/case of/IN/of kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm ?/./? but/CC/but /,/, what/WP/what are/VBP/are they/PRP/they initially/RB/initially ?/./? initially/RB/initially /,/, these/DT/these e1/NNP/e1 e2/NNP/e2 /,/, what/WP/what are/VBP/are e1/NNP/e1 e2/NNP/e2 ?/./? these/DT/these would/MD/would be/VB/be the/DT/the vertices/NNS/vertices /,/, the/DT/the initial/JJ/initial vertices/NNP/vertices. now/RB/now /,/, what/WDT/what are/VBP/are the/DT/the operations/NNS/operations that/IN/that we/PRP/we have/VBP/have to/TO/to do/VB/do on/IN/on this/DT/this collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets ?/./? 1/CD/1 operation/NN/operation is/VBZ/is union/NN/union /,/, the/DT/the operation/NN/operation of/IN/of union/NN/union has/VBZ/has to/TO/to be/VB/be down/RP/down when/WRB/when i/PRP/i have/VBP/have 1/CD/1 connected/VBN/connected component/NN/component /,/, i/PRP/i have/VBP/have another/DT/another connected/VBN/connected component/NN/component and/CC/and the/DT/the edge/NN/edge that/IN/that i/PRP/i add/VBP/add /,/, runs/VBZ/runs between/IN/between these/DT/these 2/CD/2 connected/VBN/connected components/NNP/components. then/RB/then /,/, the/DT/the resulting/VBG/resulting thing/NN/thing would/MD/would be/VB/be /,/, this/DT/this entire/JJ/entire thing/NN/thing could/MD/could be/VB/be /,/, 1/CD/1 connected/VBN/connected component/NN/component and/CC/and it/PRP/it should/MD/should get/VB/get reflected/VBN/reflected here/RB/here /,/, by/IN/by taking/NN/taking the/DT/the union/NN/union of/IN/of the/DT/the corresponding/NN/corresponding sets/NNP/sets. so/RB/so /,/, i/PRP/i have/VBP/have to/TO/to do/VB/do an/DT/an operation/NN/operation of/IN/of union/NN/union that/IN/that is/VBZ/is 1/CD/1 operation/NN/operation under/IN/under which/WDT/which i/PRP/i have/VBP/have to/TO/to maintain/VB/maintain this/DT/this collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNP/sets. so/RB/so /,/, what/WDT/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/DT/that ?/./? suppose/NN/suppose /,/, this/DT/this collection/NN/collection have/VBP/have e1/NNP/e1 e3/NNP/e3 e7/NNP/e7 in/IN/in it/PRP/it and/CC/and this/DT/this /,/, sorry/VBP/sorry /,/, this/DT/this set/NN/set has/VBZ/has e1/NNP/e1 e3/NNP/e3 e7/NNP/e7 in/IN/in it/PRP/it /,/, this/DT/this set/NN/set has/VBZ/has e2/NNP/e2 e5/NNP/e5 and/CC/and e9/NNP/e9 /,/, then/RB/then after/IN/after the/DT/the union/NN/union /,/, i/PRP/i should/MD/should not/RB/not have/VB/have these/DT/these 2/CD/2 sets/NNS/sets in/IN/in my/PRP$/my collection/NNP/collection. but/CC/but these/DT/these 2/CD/2 sets/NNS/sets of/IN/of the/DT/the collection/NN/collection should/MD/should get/VB/get replaced/VBN/replaced by/IN/by 1/CD/1 set/NN/set which/WDT/which is/VBZ/is e1/NNP/e1 e2/NNP/e2 e3/NNP/e3 e5/NNP/e5 e7/NNP/e7 and/CC/and e9/NNP/e9. the/DT/the other/JJ/other operation/NN/operation that/IN/that i/PRP/i have/VBP/have to/TO/to do/VB/do is/VBZ/is /,/, so/RB/so /,/, given/VBN/given an/DT/an edge/NN/edge /,/, i/PRP/i have/VBP/have to/TO/to look/VB/look at/IN/at the/DT/the 2/CD/2 end/NN/end points/NNS/points of/IN/of the/DT/the edge/NN/edge and/CC/and determine/NN/determine if/IN/if they/PRP/they belong/VBP/belong to/TO/to the/DT/the same/JJ/same connected/VBN/connected component/NN/component or/CC/or not/NNP/not. so/RB/so /,/, the/DT/the end/NN/end points/NNS/points of/IN/of the/DT/the edge/NN/edge would/MD/would be/VB/be the/DT/the 2/CD/2 elements/NNS/elements and/CC/and i/PRP/i have/VBP/have to/TO/to check/VB/check given/VBN/given to/TO/to 2/CD/2 elements/NNS/elements /,/, whether/IN/whether the/DT/the line/NN/line same/NN/same set/NN/set or/CC/or not/NNP/not. so/RB/so /,/, we/PRP/we will/MD/will call/VB/call that/IN/that an/DT/an operation/NN/operation of/IN/of find/NNP/find. so/RB/so /,/, what/WDT/what does/VBZ/does find/VBP/find do/VB/do ?/./? let/VB/let say/NN/say /,/, find/VBP/find takes/VBZ/takes as/IN/as parameters/NNS/parameters 2/CD/2 elements/NNS/elements /,/, x/NN/x and/CC/and y/NN/y and/CC/and returns/NNS/returns true/JJ/true /,/, if/IN/if x/NN/x comma/NN/comma y/NN/y are/VBP/are in/IN/in the/DT/the same/JJ/same set/NNP/set. what/WP/what should/MD/should it/PRP/it return/VB/return ?/./? well/RB/well /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a completed/VBN/completed description/NN/description of/IN/of find/NNP/find. if/IN/if x/NN/x and/CC/and y/NN/y are/VBP/are not/RB/not in/IN/in the/DT/the same/JJ/same set/NN/set /,/, what/WP/what should/MD/should find/VB/find return/NN/return ?/./? it/PRP/it should/MD/should return/VB/return the/DT/the 2/CD/2 sets/NNS/sets in/IN/in which/WDT/which those/DT/those 2/CD/2 elements/NNS/elements lie/NNP/lie. why/WRB/why ?/./? why/WRB/why should/MD/should it/PRP/it return/VB/return the/DT/the 2/CD/2 sets/NNS/sets ?/./? because/IN/because /,/, then/RB/then we/PRP/we need/VBP/need to/TO/to do/VB/do the/DT/the union/NN/union on/IN/on those/DT/those 2/CD/2 sets/NNS/sets /,/, exactly/NNP/exactly. so/RB/so /,/, union/NN/union should/MD/should take/VB/take as/IN/as parameters/NNS/parameters /,/, 2/CD/2 sets/NNS/sets /,/, let/VB/let say/VBP/say s1/NNP/s1 and/CC/and s2/NNP/s2 and/CC/and should/MD/should take/VB/take the/DT/the union/NNP/union. this/DT/this is/VBZ/is what/WP/what we/PRP/we require/VBP/require of/IN/of our/PRP$/our data/NNS/data structure/NNP/structure. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 7/CD/7 /:/: 39/CD/39 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is not/RB/not an/DT/an accurate/JJ/accurate description/NN/description of/IN/of find/NN/find /,/, i/PRP/i will/MD/will have/VB/have to/TO/to modify/VB/modify it/NNP/it. but/CC/but you/PRP/you understand/VBP/understand the/DT/the need/NN/need for/IN/for returning/NN/returning the/DT/the sets/NNS/sets in/IN/in which/WDT/which the/DT/the 2/CD/2 elements/NNS/elements lie/NNP/lie. so/RB/so /,/, instead/RB/instead of/IN/of find/NN/find x/NN/x comma/NN/comma y/NN/y /,/, let/VB/let me/PRP/me have/VB/have just/RB/just an/DT/an operation/NN/operation /,/, called/VBN/called find/NN/find x/NN/x /,/, returns/NNS/returns the/DT/the set/NN/set in/IN/in which/WDT/which x/NN/x lies/NNP/lies. there/EX/there is/VBZ/is a/DT/a unique/JJ/unique set/NN/set in/IN/in which/WDT/which x/NN/x lies/VBZ/lies /,/, because/IN/because our/PRP$/our collection/NN/collection of/IN/of sets/NNS/sets is/VBZ/is always/RB/always a/DT/a partition/NN/partition of/IN/of universe/NNP/universe. so/RB/so /,/, there/EX/there will/MD/will be/VB/be a/DT/a unique/JJ/unique set/NN/set and/CC/and you/PRP/you want/VBP/want to/TO/to return/VB/return that/IN/that set/NNP/set. then/RB/then how/WRB/how will/MD/will we/VB/we implement/NN/implement this/DT/this operation/NN/operation ?/./? we/PRP/we will/MD/will do/VB/do find/VB/find x/NN/x /,/, we/PRP/we will/MD/will do/VB/do find/VB/find y/JJ/y /,/, if/IN/if the/DT/the 2/CD/2 sets/NNS/sets are/VBP/are the/DT/the same/JJ/same then/RB/then we/PRP/we will/MD/will conclude/VB/conclude that/IN/that they/PRP/they are/VBP/are forming/VBG/forming a/DT/a cycle/NN/cycle /,/, if/IN/if those/DT/those 2/CD/2 sets/NNS/sets are/VBP/are different/JJ/different /,/, then/RB/then you/PRP/you would/MD/would take/VB/take the/DT/the union/NN/union of/IN/of those/DT/those 2/CD/2 sets/NNP/sets. yes/VBZ/yes /,/, everyone/NN/everyone following/VBG/following ?/./? so/RB/so /,/, if/IN/if i/PRP/i were/VBD/were to/TO/to write/VB/write down/RP/down kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm now/RB/now /,/, it/PRP/it would/MD/would look/VB/look like/IN/like this/NNP/this. so/RB/so /,/, with/IN/with this/DT/this /,/, assuming/VBG/assuming that/IN/that these/DT/these 2/CD/2 operations/NNS/operations exist/VBP/exist /,/, it/PRP/it would/MD/would look/VB/look something/NN/something like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8/CD/8 /:/: 22/CD/22 /CD/) so/RB/so /,/, what/WDT/what were/VBD/were the/DT/the steps/NNS/steps of/IN/of kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm /,/, first/JJ/first step/NN/step ?/./? sort/NN/sort the/DT/the edges/NNP/edges. sort/NN/sort the/DT/the edges/NNS/edges in/IN/in increasing/VBG/increasing order/NN/order of/IN/of length/NNP/length. let/NN/let say/VBP/say /,/, this/DT/this ordering/NN/ordering is/VBZ/is e1/NNP/e1 e2/NNP/e2. please/NN/please do/VBP/do not/RB/not confuse/VB/confuse between/IN/between this/DT/this e/NN/e and/CC/and the/DT/the element/NN/element e/NN/e that/WDT/that i/PRP/i had/VBD/had in/IN/in the/DT/the previous/JJ/previous slide/NNP/slide. this/DT/this e/NN/e corresponds/VBZ/corresponds to/TO/to edges/NNS/edges and/CC/and the/DT/the previous/JJ/previous e/NN/e is/VBZ/is element/NNP/element. so/RB/so /,/, keep/VB/keep these/DT/these separate/NNP/separate. now/RB/now /,/, what/WDT/what should/MD/should i/PRP/i do/VBP/do ?/./? for/IN/for i/PRP/i equal/JJ/equal to/TO/to 1/CD/1 to/TO/to m/VB/m do/NNP/do. i/PRP/i pick/VBP/pick an/DT/an edge/NN/edge /,/, what/WP/what is/VBZ/is the/DT/the edge/NN/edge ?/./? ei/NN/ei /,/, i/PRP/i am/VBP/am considering/VBG/considering an/DT/an edge/NN/edge ei/NNP/ei. so/RB/so /,/, let/VB/let ei/NN/ei equal/JJ/equal to/TO/to u/VB/u comma/NN/comma v/NN/v which/WDT/which means/VBZ/means u/NN/u and/CC/and v/NN/v are/VBP/are 2/CD/2 end/NN/end points/NNS/points of/IN/of the/DT/the edge/NN/edge ei/NNP/ei. what/WP/what is/VBZ/is it/PRP/it that/IN/that i/PRP/i have/VBP/have to/TO/to do/VB/do ?/./? if/IN/if find/NN/find u/NN/u equals/NNS/equals find/VBP/find v/NN/v /,/, then/RB/then it/PRP/it forms/VBZ/forms a/DT/a cycle/NNP/cycle. then/RB/then /,/, we/PRP/we do/VBP/do not/RB/not have/VB/have to/TO/to do/NNP/do. so/RB/so /,/, i/PRP/i should/MD/should really/RB/really do/VB/do /,/, not/RB/not equal/NNP/equal. if/IN/if find/NN/find u/NN/u is/VBZ/is not/RB/not equal/JJ/equal to/TO/to find/VB/find v/NN/v /,/, then/RB/then /,/, t/NN/t is/VBZ/is t/VBN/t union/NN/union ei/NNP/ei.. so/RB/so /,/, i/PRP/i should/MD/should have/VB/have some/DT/some t/NN/t and/CC/and initialised/VBD/initialised to/TO/to null/VB/null and/CC/and what/WP/what else/RB/else should/MD/should i/VB/i do/VBP/do ?/./? union/NN/union /:/: find/NN/find u/NN/u /,/, find/VBP/find v/CC/v. of/IN/of course/NN/course /,/, i/PRP/i need/VBP/need to/TO/to initialize/VB/initialize this/DT/this collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNP/sets. so/RB/so /,/, i/PRP/i would/MD/would have/VB/have /,/, when/WRB/when i/PRP/i create/VBP/create this/DT/this collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets /,/, it/PRP/it will/MD/will get/VB/get initialized/VBN/initialized to/TO/to /,/, what/WDT/what will/MD/will it/PRP/it get/VB/get initialized/VBN/initialized to/TO/to ?/./? singleton/NN/singleton /,/, so/RB/so /,/, each/DT/each element/NN/element in/IN/in the/DT/the collection/NN/collection would/MD/would be/VB/be singleton/RB/singleton vertex/NNP/vertex. so/RB/so /,/, this/DT/this would/MD/would be/VB/be what/WP/what the/DT/the procedure/NN/procedure will/MD/will look/VB/look like/IN/like now/NNP/now. we/PRP/we need/VBP/need to/TO/to understand/VB/understand /,/, what/WDT/what kind/NN/kind of/IN/of data/NNS/data structure/VBP/structure to/TO/to keep/VB/keep for/IN/for /,/, to/TO/to find/VB/find and/CC/and what/WP/what kind/NN/kind of/IN/of a/DT/a data/NN/data structure/NN/structure to/TO/to keep/VB/keep for/IN/for maintaining/NN/maintaining the/DT/the collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets /,/, so/RB/so that/IN/that these/DT/these operations/NNS/operations can/MD/can be/VB/be done/VBN/done very/RB/very quickly/NNP/quickly. how/WRB/how many/JJ/many times/NNS/times do/VBP/do we/PRP/we do/VBP/do the/DT/the union/NN/union operation/NN/operation ?/./? how/WRB/how many/JJ/many times/NNS/times do/VBP/do we/PRP/we do/VBP/do the/DT/the find/NN/find operation/NN/operation ?/./? number/NN/number of/IN/of unions/NNS/unions /,/, because/IN/because /,/, every/DT/every time/NN/time i/PRP/i do/VBP/do an/DT/an union/NN/union /,/, i/PRP/i include/VBP/include an/DT/an edge/NN/edge into/IN/into my/PRP$/my tree/NNP/tree. how/WRB/how many/JJ/many edges/NNS/edges can/MD/can be/VB/be there/RB/there in/IN/in my/PRP$/my tree/NN/tree ?/./? exactly/RB/exactly /:/: n/NN/n minus/NN/minus 1/CD/1. so/RB/so /,/, i/PRP/i will/MD/will have/VB/have exactly/RB/exactly /,/, n/NN/n minus/NN/minus 1/CD/1. how/WRB/how many/JJ/many finds/NNS/finds will/MD/will i/VB/i have/VB/have ?/./? for/IN/for every/DT/every edge/NN/edge i/PRP/i consider/VBP/consider /,/, i/PRP/i have/VBP/have to/TO/to do/VB/do 2/CD/2 finds/NNP/finds. in/IN/in the/DT/the worst/JJS/worst case/NN/case /,/, how/WRB/how many/JJ/many edges/NNS/edges will/MD/will i/VB/i consider/NN/consider ?/./? all/DT/all the/DT/the m/NN/m edges/NNS/edges /,/, no/DT/no more/NNP/more. so/RB/so /,/, number/NN/number of/IN/of finds/NNS/finds is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to m/NNP/m. let/VB/let us/PRP/us make/VB/make it/NNP/it. not/RB/not equal/JJ/equal to/TO/to 2/CD/2 m/NNP/m. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 17/CD/17 /CD/) i/PRP/i have/VBP/have said/VBN/said /,/, for/IN/for i/PRP/i equals/VBZ/equals 1/CD/1 to/TO/to m/NNP/m. but/CC/but /,/, you/PRP/you know/VBP/know /,/, you/PRP/you can/MD/can always/RB/always break/VB/break out/IN/out of/IN/of this/DT/this procedure/NN/procedure /,/, the/DT/the moment/NN/moment you/PRP/you form/NN/form a/DT/a tree/NNP/tree. so/RB/so /,/, if/IN/if you/PRP/you form/VBP/form a/DT/a tree/NN/tree before/IN/before /,/, you/PRP/you can/MD/can break/VB/break out/RP/out of/IN/of this/DT/this procedure/NN/procedure /,/, of/IN/of this/DT/this for/IN/for loop/NNP/loop. so/RB/so /,/, you/PRP/you will/MD/will keep/VB/keep it/PRP/it less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 m/NNP/m. so/RB/so /,/, what/WDT/what will/MD/will be/VB/be the/DT/the total/JJ/total running/NN/running time/NN/time of/IN/of this/DT/this procedure/NN/procedure then/RB/then ?/./? if/IN/if this/DT/this operation/NN/operation ;/:/; let/VB/let say/VBP/say takes/NNS/takes u/VBP/u times/NNS/times and/CC/and this/DT/this takes/VBZ/takes f/NN/f time/NN/time /,/, then/RB/then what/WP/what is/VBZ/is the/DT/the total/JJ/total running/NN/running time/NN/time ?/./? anyone/NN/anyone ?/./? this/DT/this step/NN/step will/MD/will take/VB/take m/NN/m log/NN/log /,/, m/NN/m time/NN/time /,/, plus/CC/plus u/NN/u times/NNS/times n/VBP/n /,/, plus/CC/plus /,/, m/NN/m times/NNS/times f/NNP/f. so/RB/so now/RB/now /,/, we/PRP/we have/VBP/have to/TO/to find/VB/find out/RP/out a/DT/a good/JJ/good data/NN/data structure/NNP/structure. by/IN/by good/JJ/good view/NN/view /,/, mean/JJ/mean /,/, which/WDT/which would/MD/would do/VB/do the/DT/the u/NN/u and/CC/and which/WDT/which will/MD/will have/VB/have the/DT/the small/JJ/small u/NN/u and/CC/and small/JJ/small f/NNP/f. is/VBZ/is everyone/NN/everyone comfortable/JJ/comfortable with/IN/with this/DT/this ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 17/CD/17 /CD/) are/VBP/are there/RB/there any/DT/any questions/NNS/questions to/TO/to this/DT/this point/NN/point ?/./? can/MD/can someone/VB/someone suggest/JJS/suggest a/DT/a data/NN/data structure/NN/structure to/TO/to me/PRP/me ?/./? how/WRB/how will/MD/will we/VB/we maintain/VB/maintain this/DT/this collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets ?/./? linked/VBN/linked list/NN/list /,/, let/VB/let say/VBP/say /,/, liked/VBN/liked list/NNP/list. you/PRP/you are/VBP/are at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the course/NN/course /,/, but/CC/but /,/, you/PRP/you can/MD/can not/RB/not think/VB/think beyond/IN/beyond liked/VBN/liked list/NNP/list. so/RB/so /,/, how/WRB/how will/MD/will we/VB/we have/VBP/have ?/./? we/PRP/we will/MD/will have/VB/have as/RB/as many/JJ/many linked/VBN/linked list/NN/list as/IN/as the/DT/the number/NN/number of/IN/of sets/NNS/sets /,/, is/VBZ/is the/DT/the qutei/NNP/qutei. so/RB/so /,/, 1/CD/1 linked/VBN/linked list/NN/list for/IN/for each/DT/each set/NNP/set. no/DT/no /,/, let/VB/let us/PRP/us complete/JJ/complete this/DT/this first/NNP/first. how/WRB/how much/JJ/much time/NN/time union/NN/union take/VB/take and/CC/and how/WRB/how much/JJ/much time/NN/time did/VBD/did find/VB/find take/NN/take ?/./? union/NN/union can/MD/can be/VB/be done/VBN/done in/IN/in constant/JJ/constant time/NNP/time. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, let/VB/let say/VBP/say /,/, we/PRP/we keep/VBP/keep track/NN/track of/IN/of the/DT/the front/NN/front and/CC/and the/DT/the end/NN/end of/IN/of each/DT/each liked/VBN/liked list/NNP/list. if/IN/if we/PRP/we do/VBP/do that/IN/that /,/, then/RB/then i/PRP/i can/MD/can combine/VB/combine 2/CD/2 linked/VBN/linked lists/NNS/lists in/IN/in constant/JJ/constant time/NNP/time. union/NN/union will/MD/will not/RB/not take/VB/take too/RB/too much/RB/much time/NNP/time. but/CC/but /,/, how/WRB/how much/JJ/much time/NN/time did/VBD/did find/VB/find take/NN/take ?/./? order/NN/order size/NN/size of/IN/of the/DT/the liked/VBN/liked list/NN/list /,/, which/WDT/which in/IN/in the/DT/the worst/JJS/worst case/NN/case could/MD/could be/VB/be end/NNP/end. now/RB/now /,/, is/VBZ/is that/IN/that good/JJ/good ?/./? we/PRP/we were/VBD/were to/TO/to do/VB/do this/DT/this /,/, we/PRP/we will/MD/will take/VB/take m/NN/m /,/, n/NN/n time/NN/time which/WDT/which is/VBZ/is too/RB/too large/NNP/large. we/PRP/we are/VBP/are looking/VBG/looking for/IN/for the/DT/the time/NN/time complexity/NN/complexity or/CC/or something/NN/something like/IN/like /,/, n/NN/n log/NN/log m/NNP/m. if/IN/if we/PRP/we looking/VBG/looking for/IN/for something/NN/something like/IN/like /,/, n/NN/n log/NN/log m/NN/m /,/, this/DT/this quantity/NN/quantity should/MD/should be/VB/be no/RB/no more/JJR/more than/IN/than log/NN/log m/NN/m and/CC/and this/DT/this quantity/NN/quantity should/MD/should also/RB/also be/VB/be no/DT/no more/RBR/more than/IN/than log/NN/log m/NNP/m. we/PRP/we can/MD/can permit/VB/permit it/PRP/it to/TO/to be/VB/be as/RB/as large/JJ/large as/IN/as log/NN/log m/NNP/m. so/RB/so /,/, this/DT/this is/VBZ/is not/RB/not too/RB/too good/JJ/good at/IN/at data/NNS/data structure/NNP/structure. someone/NN/someone had/VBD/had another/DT/another idea/NNP/idea. what/WP/what was/VBD/was your/PRP$/your idea/NN/idea ?/./? a/DT/a tree/NN/tree ?/./? what/WP/what will/MD/will you/PRP/you do/VB/do with/IN/with the/DT/the tree/NN/tree ?/./? how/WRB/how will/MD/will you/PRP/you use/VB/use a/DT/a tree/NN/tree ?/./? heap/NN/heap ?/./? what/WP/what will/MD/will you/PRP/you do/VB/do with/IN/with a/DT/a heap/NN/heap ?/./? how/WRB/how much/RB/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to merge/VB/merge 2/CD/2 heaps/NNS/heaps ?/./? order/NN/order n/NN/n ?/./? height/NN/height of/IN/of the/DT/the heap/NN/heap /,/, why/WRB/why ?/./? why/WRB/why does/VBZ/does it/PRP/it take/VB/take /,/, if/IN/if i/PRP/i have/VBP/have 2/CD/2 heaps/NNS/heaps /,/, why/WRB/why does/VBZ/does it/PRP/it take/VB/take order/NN/order h/NN/h time/NN/time to/TO/to merge/VB/merge them/PRP/them ?/./? order/NN/order smaller/NN/smaller /,/, no/NNP/no. number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the smaller/JJR/smaller heap/NN/heap /,/, but/CC/but that/IN/that could/MD/could be/VB/be as/RB/as large/JJ/large as/IN/as n/NN/n by/IN/by 2/CD/2. what/WP/what else/RB/else ?/./? so/RB/so /,/, we/PRP/we will/MD/will have/VB/have a/DT/a new/JJ/new data/NNS/data structure/VBP/structure ?/./? and/CC/and what/WP/what will/MD/will a/DT/a new/JJ/new data/NNS/data structure/VBP/structure be/VB/be ?/./? the/DT/the sets/NNS/sets /,/, i/PRP/i will/MD/will just/RB/just show/VB/show this/DT/this thing/NN/thing to/TO/to you/PRP/you and/CC/and then/RB/then you/PRP/you will/MD/will understand/VB/understand what/WP/what is/VBZ/is happening/NNP/happening. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 32/CD/32 /CD/) so/RB/so suppose/JJ/suppose /,/, my/PRP$/my universe/NN/universe was/VBD/was a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /,/, 6/CD/6 elements/NNS/elements /,/, simple/NNP/simple. so/RB/so initially/RB/initially /,/, recall/VBP/recall that/IN/that my/PRP$/my /,/, what/WP/what are/VBP/are the/DT/the sets/NNS/sets in/IN/in my/PRP$/my collection/NN/collection ?/./? the/DT/the singletons/NNS/singletons /:/: a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NNP/f. so/RB/so /,/, i/PRP/i have/VBP/have a/DT/a /,/, i/PRP/i have/VBP/have b/NN/b /,/, i/PRP/i have/VBP/have 1/CD/1 node/NN/node for/IN/for each/DT/each of/IN/of these/DT/these 6/CD/6 sets/NNP/sets. now/RB/now /,/, suppose/VBP/suppose you/PRP/you say/VBP/say /,/, union/NN/union /,/, the/DT/the set/NN/set containing/VBG/containing a/DT/a /,/, so/RB/so /,/, you/PRP/you will/MD/will say/VB/say something/NN/something like/IN/like /,/, union/NN/union find/NN/find a/DT/a comma/NN/comma /,/, find/VBP/find b/NNP/b. the/DT/the set/NN/set containing/VBG/containing a/DT/a and/CC/and the/DT/the set/NN/set containing/VBG/containing b/NNP/b. so/RB/so /,/, what/WDT/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do is/VBZ/is to/TO/to make/VB/make 1/CD/1 of/IN/of them/PRP/them /,/, so/RB/so /,/, each/DT/each of/IN/of these/DT/these nodes/NNS/nodes has/VBZ/has only/RB/only 1/CD/1 point/NN/point ?/./? or/CC/or a/DT/a reference/NNP/reference. so/RB/so /,/, it/PRP/it has/VBZ/has a/DT/a data/NN/data field/NN/field and/CC/and 1/CD/1 reference/NN/reference field/NNP/field. so/RB/so /,/, i/PRP/i will/MD/will make/VB/make 1/CD/1 of/IN/of these/DT/these guys/NNS/guys point/VBP/point to/TO/to the/DT/the other/NNP/other. so/RB/so /,/, at/IN/at the/DT/the next/JJ/next step/NN/step i/PRP/i will/MD/will have/VB/have /,/, when/WRB/when after/IN/after i/PRP/i do/VBP/do this/DT/this /,/, this/DT/this is/VBZ/is what/WP/what my/PRP$/my collection/NN/collection looks/NNS/looks like/NNP/like. these/DT/these of/IN/of course/NN/course /,/, remain/NN/remain like/IN/like as/IN/as they/PRP/they are/NNP/are. /:/( hindi/NN/hindi /:/) suppose/NN/suppose /,/, you/PRP/you were/VBD/were to/TO/to say/VB/say the/DT/the same/JJ/same thing/NN/thing /,/, union/NN/union /,/, find/VBP/find a/DT/a comma/NN/comma find/NN/find c/NNP/c. when/WRB/when i/PRP/i say/VBP/say find/JJ/find a/DT/a /,/, i/PRP/i will/MD/will start/VB/start from/IN/from a/DT/a and/CC/and keep/VB/keep going/VBG/going up/RP/up /,/, till/RB/till i/PRP/i head/VBP/head the/DT/the root/NNP/root. so/RB/so /,/, this/DT/this is/VBZ/is now/RB/now the/DT/the root/NNP/root. how/WRB/how do/VBP/do i/PRP/i know/VB/know it/PRP/it is/VBZ/is the/DT/the root/NN/root ?/./? because/IN/because /,/, its/PRP$/its pointer/NN/pointer points/NNS/points to/TO/to itself/PRP/itself or/CC/or it/PRP/it is/VBZ/is null/JJ/null or/CC/or whatever/NNP/whatever. yes/NNS/yes /,/, when/WRB/when we/PRP/we do/VBP/do the/DT/the union/NN/union /,/, you/PRP/you will/MD/will understand/VB/understand this/DT/this /,/, you/PRP/you know/VBP/know as/IN/as /,/, as/IN/as we/PRP/we proceed/NNP/proceed. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what the/DT/the trees/NNS/trees look/VBP/look like/NNP/like. so/RB/so /,/, each/DT/each one/CD/one of/IN/of them/PRP/them is/VBZ/is a/DT/a tree/NNP/tree. right/NN/right now/RB/now /,/, this/DT/this tree/NN/tree has/VBZ/has only/RB/only 1/CD/1 node/NN/node in/IN/in it/NNP/it. but/CC/but /,/, this/DT/this tree/NN/tree has/VBZ/has 2/CD/2 nodes/NNS/nodes in/IN/in it/PRP/it and/CC/and now/RB/now the/DT/the pointers/NNS/pointers are/VBP/are going/VBG/going up/NNP/up. you/PRP/you just/RB/just have/VBP/have parent/NN/parent pointer/NN/pointer ?/./? when/WRB/when i/PRP/i say/VBP/say find/JJ/find a/DT/a /,/, i/PRP/i will/MD/will start/VB/start from/IN/from a/DT/a and/CC/and keep/VB/keep going/VBG/going up/RP/up the/DT/the tree/NN/tree till/IN/till i/PRP/i reach/VBP/reach a/DT/a node/NN/node /,/, let/VB/let say/VBP/say /,/, /NNP/( hindi/NN/hindi /:/) parent/NN/parent point/NN/point is/VBZ/is null/JJ/null or/CC/or it/PRP/it is/VBZ/is pointing/VBG/pointing back/RB/back to/TO/to itself/NNP/itself. i/PRP/i think/VBP/think at/IN/at that/DT/that point/NN/point /,/, i/PRP/i know/VBP/know it/PRP/it is/VBZ/is a/DT/a root/NNP/root. and/CC/and so/RB/so /,/, this/DT/this says/VBZ/says that/IN/that find/NN/find a/DT/a /,/, that/WDT/that the/DT/the element/NN/element a/DT/a /,/, is/VBZ/is in/IN/in the/DT/the set/NN/set whose/WP$/whose root/NN/root or/CC/or in/IN/in which/WDT/which b/NN/b is/NNP/is. when/WRB/when i/PRP/i come/VBP/come to/TO/to b/VB/b /,/, this/DT/this is/VBZ/is the/DT/the element/NN/element /,/, this/DT/this is/VBZ/is the/DT/the set/NN/set in/IN/in which/WDT/which /,/, what/WP/what we/PRP/we are/VBP/are doing/VBG/doing is/VBZ/is that/IN/that for/IN/for each/DT/each set/NN/set /,/, how/WRB/how do/VBP/do we/PRP/we represent/VBP/represent a/DT/a set/NN/set ?/./? so/RB/so /,/, each/DT/each set/NN/set is/VBZ/is represented/VBN/represented by/IN/by 1/CD/1 of/IN/of the/DT/the elements/NNS/elements in/IN/in a/DT/a set/NN/set which/WDT/which is/VBZ/is in/IN/in this/DT/this representation/NN/representation /,/, it/PRP/it will/MD/will be/VB/be the/DT/the root/NN/root of/IN/of the/DT/the set/NNP/set. so/RB/so in/IN/in some/DT/some sense/NN/sense /,/, all/DT/all the/DT/the element/NN/element of/IN/of the/DT/the set/NN/set /,/, elect/NN/elect a/DT/a leader/NN/leader and/CC/and this/DT/this is/VBZ/is the/DT/the leader/NN/leader of/IN/of that/DT/that set/NNP/set. so/RB/so /,/, a/DT/a and/CC/and b/NN/b are/VBP/are the/DT/the only/JJ/only 2/CD/2 elements/NNS/elements of/IN/of the/DT/the set/NN/set and/CC/and the/DT/the leader/NN/leader is/VBZ/is b/NNP/b. so/RB/so /,/, when/WRB/when i/PRP/i say/VBP/say find/JJ/find a/DT/a /,/, it/PRP/it return/VBP/return to/TO/to me/PRP/me /,/, reference/NN/reference to/TO/to this/DT/this node/NN/node which/WDT/which says/VBZ/says that/IN/that this/DT/this is/VBZ/is the/DT/the root/NN/root of/IN/of the/DT/the set/NN/set to/TO/to which/WDT/which /,/, in/IN/in which/WDT/which element/NN/element a/DT/a lies/NNP/lies. when/WRB/when i/PRP/i say/VBP/say find/JJ/find b/NN/b /,/, what/WP/what will/MD/will it/PRP/it return/VB/return ?/./? the/DT/the same/JJ/same thing/NN/thing and/CC/and then/RB/then i/PRP/i can/MD/can compare/VB/compare those/DT/those 2/CD/2 and/CC/and can/MD/can determine/VB/determine that/IN/that they/PRP/they are/VBP/are in/IN/in the/DT/the same/JJ/same set/NN/set or/CC/or not/NNP/not. so/RB/so /,/, what/WDT/what find/NN/find a/DT/a /,/, find/VBP/find b/NN/b returns/NNS/returns are/VBP/are the/DT/the roots/NNS/roots of/IN/of the/DT/the corresponding/NN/corresponding trees/NNP/trees. you/PRP/you will/MD/will understand/VB/understand this/DT/this as/IN/as you/PRP/you proceed/NNP/proceed. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 06/CD/06 /CD/) what/WP/what union/NN/union does/VBZ/does is/VBZ/is /,/, it/PRP/it takes/VBZ/takes the/DT/the root/NN/root of/IN/of these/DT/these 2/CD/2 trees/NNS/trees and/CC/and links/NNS/links them/PRP/them up/RP/up and/CC/and makes/VBZ/makes 1/CD/1 point/NN/point to/TO/to be/VB/be other/NNP/other. for/IN/for instance/NN/instance /,/, here/RB/here /,/, i/PRP/i might/MD/might decide/VB/decide to/TO/to make/VB/make b/NN/b point/NN/point to/TO/to c/NNP/c. in/IN/in which/WDT/which case/NN/case /,/, my/PRP$/my new/JJ/new representations/NNS/representations would/MD/would look/VB/look like/IN/like this/NNP/this. now/RB/now /,/, if/IN/if i/PRP/i were/VBD/were to/TO/to do/VB/do a/DT/a find/NN/find a/DT/a /,/, what/WDT/what will/MD/will be/VB/be returned/VBN/returned when/WRB/when i/PRP/i do/VBP/do the/DT/the find/NN/find a/DT/a ?/./? a/DT/a reference/NN/reference to/TO/to c/VB/c /,/, a/DT/a reference/NN/reference to/TO/to this/DT/this node/NN/node and/CC/and when/WRB/when i/PRP/i do/VBP/do the/DT/the find/NN/find b/NN/b /,/, what/WP/what is/VBZ/is returned/VBN/returned ?/./? a/DT/a reference/NN/reference to/TO/to the/DT/the same/JJ/same node/NNP/node. so/IN/so /,/, i/PRP/i can/MD/can compare/VB/compare these/DT/these two/CD/two /,/, i/PRP/i can/MD/can return/VB/return c/NN/c or/CC/or i/PRP/i can/MD/can return/VB/return a/DT/a reference/NNP/reference. actually/RB/actually /,/, it/PRP/it is/VBZ/is best/JJS/best to/TO/to return/VB/return a/DT/a reference/NN/reference because/IN/because then/RB/then that/IN/that can/MD/can be/VB/be used/VBN/used by/IN/by the/DT/the union/NN/union operation/NNP/operation. what/WP/what do/VBP/do you/PRP/you mean/VB/mean ?/./? c/NN/c was/VBD/was not/RB/not alone/RB/alone ?/./? if/IN/if c/NN/c was/VBD/was not/RB/not alone/RB/alone /,/, i/PRP/i understand/VBP/understand what/WP/what you/PRP/you mean/VBP/mean /,/, if/IN/if c/NN/c was/VBD/was not/RB/not alone/NNP/alone. we/PRP/we will/MD/will come/VB/come to/TO/to when/WRB/when c/NN/c was/VBD/was not/RB/not alone/NNP/alone. so/RB/so /,/, all/DT/all you/PRP/you are/VBP/are doing/VBG/doing is/VBZ/is /,/, taking/VBG/taking the/DT/the roots/NNS/roots and/CC/and merging/VBG/merging them/NNP/them. so/RB/so suppose/RB/suppose /,/, at/IN/at this/DT/this point/NN/point i/PRP/i did/VBD/did another/DT/another operation/NN/operation which/WDT/which was/VBD/was union/NN/union /,/, find/VBP/find d/VBN/d find/NN/find e/NNP/e. so/RB/so /,/, what/WDT/what will/MD/will i/VB/i do/VBP/do ?/./? i/PRP/i will/MD/will link/VB/link up/RP/up the/DT/the roots/NNS/roots for/IN/for d/NN/d and/CC/and e/NNP/e. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 42/CD/42 /CD/) so/RB/so /,/, let/VB/let say/VBP/say /,/, i/PRP/i decide/VBP/decide to/TO/to make/VB/make d/JJ/d point/NN/point to/TO/to e/NNP/e. now/RB/now as/IN/as you/PRP/you can/MD/can see/VB/see /,/, d/NN/d and/CC/and e/NN/e are/VBP/are not/RB/not alone/NNP/alone. if/IN/if i/PRP/i decide/VBP/decide to/TO/to do/VB/do an/DT/an operation/NN/operation like/IN/like /,/, let/VB/let me/PRP/me keep/VB/keep this/DT/this picture/NN/picture there/RB/there and/CC/and if/IN/if i/PRP/i do/VBP/do /,/, let/VB/let say/VBP/say /,/, union/NN/union or/CC/or let/VB/let me/PRP/me write/VB/write it/PRP/it down/IN/down here/NNP/here. union/NN/union /,/, find/VBP/find a/DT/a comma/NN/comma find/NN/find d/NN/d then/RB/then /,/, what/WDT/what does/VBZ/does find/VBP/find a/DT/a return/NN/return ?/./? it/PRP/it returns/VBZ/returns a/DT/a pointer/NN/pointer to/TO/to c/VB/c /,/, d/JJ/d returns/NNS/returns a/DT/a pointer/NN/pointer to/TO/to e/NNP/e. i/PRP/i need/VBP/need to/TO/to link/VB/link up/RP/up these/DT/these 2/CD/2 nodes/NNP/nodes. so/RB/so /,/, i/PRP/i can/MD/can make/VB/make c/NN/c point/NN/point to/TO/to e/VB/e or/CC/or make/VB/make e/JJ/e point/NN/point to/TO/to c/VB/c /,/, whichever/RB/whichever i/PRP/i please/NNP/please. let/VB/let say/VBP/say /,/, i/PRP/i decide/VBP/decide to/TO/to make/VB/make c/NN/c point/NN/point to/TO/to e/NNP/e. this/DT/this is/VBZ/is what/WP/what i/PRP/i would/MD/would get/VB/get there/NNP/there. and/CC/and of/IN/of course/NN/course /,/, f/NN/f would/MD/would be/VB/be sitting/VBG/sitting on/IN/on its/PRP$/its own/NNP/own. is/VBZ/is everyone/NN/everyone understands/NNS/understands /,/, what/WP/what the/DT/the procedure/NN/procedure is/VBZ/is ?/./? you/PRP/you understand/VBP/understand what/WP/what the/DT/the find/NN/find operation/NN/operation is/VBZ/is ?/./? what/WP/what does/VBZ/does find/VBP/find operation/NN/operation do/VBP/do ?/./? it/PRP/it starts/VBZ/starts from/IN/from the/DT/the element/NN/element and/CC/and keeps/VBZ/keeps tracing/VBG/tracing the/DT/the pointers/NNS/pointers up/IN/up /,/, till/NN/till it/PRP/it hits/VBZ/hits the/DT/the roots/NNP/roots. exactly/RB/exactly /,/, so/RB/so /,/, you/PRP/you have/VBP/have a/DT/a list/NN/list of/IN/of vertices/NNP/vertices. when/WRB/when i/PRP/i have/VBP/have an/DT/an edge/NN/edge /,/, i/PRP/i have/VBP/have its/PRP$/its 2/CD/2 end/NN/end points/NNS/points /,/, i/PRP/i have/VBP/have the/DT/the vertices/NNS/vertices and/CC/and from/IN/from that/DT/that vertex/NN/vertex list/NN/list /,/, i/PRP/i must/MD/must have/VB/have the/DT/the reference/NN/reference to/TO/to this/DT/this node/NNP/node. recall/NN/recall /,/, you/PRP/you have/VBP/have a/DT/a data/NN/data structure/NN/structure for/IN/for your/PRP$/your graph/NN/graph in/IN/in which/WDT/which you/PRP/you have/VBP/have an/DT/an array/NNP/array. suppose/NN/suppose /,/, i/PRP/i had/VBD/had an/DT/an adjacency/NN/adjacency list/NN/list of/IN/of presentation/NN/presentation /,/, so/RB/so this/DT/this array/NN/array would/MD/would contain/VB/contain my/PRP$/my list/NN/list of/IN/of vertices/NNP/vertices. i/PRP/i could/MD/could have/VB/have another/DT/another reference/NN/reference from/IN/from here/RB/here to/TO/to this/DT/this node/NN/node here/RB/here /,/, for/IN/for every/DT/every /,/, so/RB/so /,/, this/DT/this was/VBD/was node/NN/node vertex/NN/vertex b/NN/b /,/, try/NN/try to/TO/to have/VB/have another/DT/another reference/NN/reference from/IN/from here/RB/here to/TO/to here/RB/here /,/, so/RB/so that/IN/that i/PRP/i can/MD/can access/VB/access the/DT/the state/NNP/state. this/DT/this is/VBZ/is just/RB/just referring/VBG/referring to/TO/to this/DT/this particular/JJ/particular node/NN/node and/CC/and so/RB/so this/DT/this will/MD/will always/RB/always remain/VB/remain the/DT/the same/NNP/same. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the problem/NN/problem with/IN/with this/DT/this implementation/NN/implementation ?/./? how/WRB/how much/RB/much time/NN/time does/VBZ/does union/NN/union take/VB/take ?/./? so/RB/so /,/, union/NN/union takes/VBZ/takes now/RB/now as/IN/as input/NN/input /,/, references/NNS/references of/IN/of root/NN/root nodes/NNP/nodes. and/CC/and so/RB/so /,/, all/DT/all it/PRP/it as/IN/as to/TO/to do/VB/do is/VBZ/is to/TO/to modify/VB/modify 1/CD/1 pointer/NN/pointer /,/, 1/CD/1 reference/NN/reference to/TO/to point/NN/point to/TO/to the/DT/the other/JJ/other /,/, to/TO/to refer/VB/refer to/TO/to the/DT/the other/NNP/other. so/RB/so /,/, union/NN/union takes/VBZ/takes order/NN/order 1/CD/1 time/NN/time but/CC/but /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does find/VB/find takes/VBZ/takes ?/./? find/NN/find could/MD/could take/VB/take a/DT/a lot/NN/lot of/IN/of time/NN/time because/IN/because it/PRP/it might/MD/might go/VB/go through/IN/through a/DT/a very/RB/very long/JJ/long ways/NNS/ways to/TO/to reach/VB/reach the/DT/the root/NN/root /,/, in/IN/in the/DT/the worst/JJS/worst case/NNP/case. can/MD/can you/PRP/you construct/VB/construct a/DT/a sequence/NN/sequence of/IN/of unions/NNS/unions in/IN/in which/WDT/which this/DT/this would/MD/would happen/VB/happen ?/./? write/NN/write at/IN/at the/DT/the side/NN/side first/RB/first to/TO/to merge/VB/merge a/DT/a b/NN/b /,/, then/RB/then a/DT/a c/NN/c /,/, then/RB/then a/DT/a d/NN/d /,/, then/RB/then a/DT/a e/NN/e /,/, and/CC/and a/DT/a f/NN/f and/CC/and if/IN/if you/PRP/you were/VBD/were to/TO/to doing/VBG/doing the/DT/the union/NN/union in/IN/in this/DT/this order/NN/order then/RB/then /,/, things/NNS/things would/MD/would go/VB/go back/NNP/back. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 38/CD/38 /CD/) we/PRP/we have/VBP/have to/TO/to do/VB/do the/DT/the unions/NNS/unions in/IN/in a/DT/a more/RBR/more clever/JJ/clever manner/NNP/manner. find/NN/find ?/./? no/DT/no /,/, we/PRP/we will/MD/will do/VB/do the/DT/the union/NN/union in/IN/in a/DT/a clever/NN/clever manner/NNP/manner. so/RB/so recall/JJ/recall that/IN/that when/WRB/when we/PRP/we were/VBD/were linking/VBG/linking elements/NNS/elements /,/, we/PRP/we had/VBD/had that/IN/that option/NN/option /,/, either/DT/either link/NN/link make/VBP/make 1/CD/1 point/NN/point to/TO/to the/DT/the other/JJ/other or/CC/or point/NN/point /,/, make/VBP/make the/DT/the other/JJ/other point/NN/point to/TO/to the/DT/the first/NNP/first. so/RB/so now/RB/now /,/, we/PRP/we will/MD/will exploit/VB/exploit that/NNP/that. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use a/DT/a rule/NN/rule called/VBN/called union/NN/union by/IN/by rank/NN/rank in/IN/in which/WDT/which if/IN/if i/PRP/i have/VBP/have 2/CD/2 trees/NNS/trees and/CC/and suppose/VB/suppose /,/, this/DT/this has/VBZ/has n1/NNP/n1 nodes/VBZ/nodes in/IN/in it/PRP/it and/CC/and this/DT/this has/VBZ/has n2/NNP/n2 nodes/VBZ/nodes in/IN/in it/NNP/it. then/RB/then /,/, i/PRP/i will/MD/will make/VB/make the/DT/the lighter/JJR/lighter tree/NN/tree point/NN/point to/TO/to the/DT/the heavier/NN/heavier one/NNP/one. so/RB/so this/DT/this /,/, without/IN/without loss/NN/loss of/IN/of generality/NN/generality /,/, let/VB/let say/VBP/say /,/, n1/NNP/n1 less/JJR/less than/IN/than n2/NNP/n2. then/RB/then /,/, i/PRP/i will/MD/will make/VB/make this/DT/this point/NN/point to/TO/to that/NNP/that. we/PRP/we will/MD/will make/VB/make the/DT/the lighter/JJR/lighter point/NN/point to/TO/to the/DT/the heavier/NNP/heavier. now/RB/now /,/, you/PRP/you will/MD/will not/RB/not have/VB/have a/DT/a this/DT/this kind/NN/kind of/IN/of a/DT/a scenario/NN/scenario in/IN/in which/WDT/which you/PRP/you know/VBP/know /,/, if/IN/if you/PRP/you have/VBP/have this/DT/this /,/, let/VB/let say/VBP/say /,/, 6/CD/6 elements/NNS/elements ;/:/; first/JJ/first you/PRP/you made/VBD/made this/DT/this point/NN/point to/TO/to this/DT/this and/CC/and then/RB/then /,/, when/WRB/when you/PRP/you are/VBP/are trying/VBG/trying to/TO/to combine/VB/combine this/DT/this and/CC/and this/DT/this /,/, you/PRP/you will/MD/will not/RB/not make/VB/make this/DT/this point/NN/point to/TO/to this/DT/this anymore/NNP/anymore. what/WP/what will/MD/will happen/VB/happen now/RB/now ?/./? you/PRP/you will/MD/will make/VB/make this/DT/this guy/NN/guy point/NN/point to/TO/to this/DT/this and/CC/and now/RB/now /,/, this/DT/this tree/NN/tree has/VBZ/has 3/CD/3 nodes/NNS/nodes in/IN/in it/NNP/it. so/RB/so /,/, if/IN/if this/DT/this combines/NNS/combines this/DT/this /,/, you/PRP/you will/MD/will make/VB/make this/DT/this point/NN/point to/TO/to this/DT/this and/CC/and this/DT/this point/NN/point to/TO/to this/DT/this and/CC/and this/DT/this point/NN/point to/TO/to this/NNP/this. so/RB/so that/IN/that now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree that/IN/that i/PRP/i get/VBP/get ?/./? 1/CD/1 only/RB/only /,/, and/CC/and so/RB/so /,/, find/IN/find will/MD/will take/VB/take very/RB/very little/JJ/little time/NNP/time. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, we/PRP/we have/VBP/have to/TO/to see/VB/see that/IN/that if/IN/if we/PRP/we use/VBP/use this/DT/this root/NN/root /,/, what/WP/what can/MD/can be/VB/be the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree in/IN/in the/DT/the worst/JJS/worst case/NNP/case. how/WRB/how high/JJ/high the/DT/the tree/NN/tree become/NN/become ?/./? how/WRB/how high/JJ/high can/MD/can the/DT/the tree/NN/tree become/NN/become if/IN/if we/PRP/we use/VBP/use this/DT/this root/NN/root ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 24/CD/24 /CD/) anyone/NN/anyone ?/./? login/NN/login /,/, why/WRB/why ?/./? you/PRP/you are/VBP/are trying/VBG/trying to/TO/to construct/VB/construct the/DT/the worst/JJS/worst case/NNP/case. but/CC/but that/IN/that need/NN/need not/RB/not be/VB/be the/DT/the way/NN/way we/PRP/we do/VBP/do things/NNP/things. that/IN/that might/MD/might not/RB/not to/TO/to be/VB/be worst/JJ/worst case/NNP/case. how/WRB/how will/MD/will you/PRP/you argue/VB/argue that/IN/that this/DT/this rule/NN/rule of/IN/of union/NN/union by/IN/by rank/NN/rank will/MD/will lead/VB/lead to/TO/to trees/NNS/trees which/WDT/which have/VBP/have height/VBN/height ?/./? so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the claim/NN/claim we/PRP/we want/VBP/want to/TO/to make/VB/make ?/./? no/DT/no /,/, not/RB/not the/DT/the height/NN/height is/VBZ/is minimum/NNP/minimum. a/DT/a tree/NN/tree with/IN/with n1/NNP/n1 or/CC/or n/VB/n /,/, n1/NNP/n1 nodes/VBZ/nodes let/VB/let say/NN/say /,/, has/VBZ/has height/VBN/height less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to log/VB/log of/IN/of n1/NNP/n1. suppose/NN/suppose /,/, i/PRP/i have/VBP/have to/TO/to make/VB/make /,/, prove/VB/prove this/DT/this claim/NN/claim /,/, at/IN/at tree/NN/tree with/IN/with n1/NNP/n1 nodes/NNS/nodes /,/, set/VBN/set any/DT/any point/NN/point if/IN/if i/PRP/i have/VBP/have a/DT/a tree/NN/tree with/IN/with n1/NNP/n1 nodes/NNS/nodes in/IN/in it/PRP/it /,/, it/PRP/it has/VBZ/has height/VBN/height at/IN/at most/JJS/most log/JJ/log of/IN/of n1/NNP/n1 /NNP/( hindi/NN/hindi /:/) by/IN/by induction/NNP/induction. good/NNP/good. so/RB/so /,/, let/VB/let us/PRP/us use/VB/use induction/NNP/induction. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to write/VB/write down/RP/down the/DT/the proof/NN/proof formally/RB/formally /,/, but/CC/but i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what the/DT/the procedure/NN/procedure is/NNP/is. so/RB/so /,/, i/PRP/i am/VBP/am combining/VBG/combining 2/CD/2 trees/NNS/trees /:/: one/CD/one /,/, n1/NNP/n1 nodes/VBZ/nodes /,/, the/DT/the other/JJ/other /,/, n2/NNP/n2 nodes/NNP/nodes. without/IN/without loss/NN/loss of/IN/of generality/NN/generality /,/, let/VB/let us/PRP/us say/VB/say /,/, n1/NNP/n1 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n2/NNP/n2. let/VB/let us/PRP/us assume/VB/assume that/IN/that the/DT/the induction/NN/induction hypothesis/NN/hypothesis is/VBZ/is true/JJ/true till/NN/till this/DT/this stage/NN/stage of/IN/of my/PRP$/my procedure/NNP/procedure. that/IN/that means/VBZ/means /:/( hindi/NN/hindi /:/) height/NN/height is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to log/VB/log of/IN/of n1/NNP/n1 and/CC/and /NNP/( hindi/NN/hindi /:/) is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to log/VB/log of/IN/of n2/NNP/n2 /NNP/( hindi/NN/hindi /:/) everyone/NN/everyone with/IN/with me/PRP/me ?/./? now/RB/now /,/, we/PRP/we have/VBP/have to/TO/to show/VB/show /,/, as/IN/as a/DT/a consequence/NN/consequence of/IN/of this/DT/this i/NN/i will/MD/will get/VB/get a/DT/a new/JJ/new tree/NN/tree with/IN/with how/WRB/how many/JJ/many nodes/NNS/nodes in/IN/in it/PRP/it ?/./? n1/NNP/n1 plus/CC/plus n2/NNP/n2 could/MD/could be/VB/be the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the new/JJ/new tree/NNP/tree. so/RB/so /,/, i/PRP/i have/VBP/have to/TO/to argue/VB/argue that/IN/that its/PRP$/its height/NN/height is/VBZ/is no/DT/no more/RBR/more than/IN/than log/NN/log of/IN/of n1/NNP/n1 plus/CC/plus n2/NNP/n2. let/NN/let see/VB/see whether/IN/whether that/DT/that is/VBZ/is true/NNP/true. so/RB/so /,/, what/WDT/what are/VBP/are the/DT/the 2/CD/2 cases/NNS/cases ?/./? n1/NNP/n1 strictly/RB/strictly less/JJR/less than/IN/than n2/NNP/n2. what/WP/what will/MD/will be/VB/be the/DT/the height/NN/height ?/./? no/DT/no /,/, what/WP/what will/MD/will be/VB/be the/DT/the height/NN/height ?/./? the/DT/the height/NN/height could/MD/could be/VB/be /,/, so/RB/so /,/, height/JJ/height of/IN/of resulting/VBG/resulting tree/NN/tree is/VBZ/is either/DT/either the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree /,/, so/RB/so we/PRP/we have/VBP/have done/VBN/done this/NNP/this. it/PRP/it is/VBZ/is either/DT/either the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree or/CC/or it/PRP/it is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree plus/VBZ/plus 1/CD/1. so/RB/so /,/, height/JJ/height of/IN/of resulting/VBG/resulting tree/NN/tree /:/( hindi/NN/hindi /:/) height/NN/height of/IN/of resulting/VBG/resulting tree/NN/tree is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to max/NN/max of/IN/of h2/NNP/h2 comma/NN/comma h1/NNP/h1 plus/CC/plus 1/CD/1. it/PRP/it can/MD/can take/VB/take a/DT/a value/NN/value of/IN/of h1/NNP/h1 plus/CC/plus 1/CD/1 also/NNP/also. /NNP/( hindi/NN/hindi /:/) the/DT/the height/NN/height of/IN/of resulting/VBG/resulting tree/NN/tree fine/NN/fine /,/, equals/NNS/equals max/VBP/max of/IN/of h2/NNP/h2 fine/NN/fine /:/( hindi/NN/hindi /:/) now/RB/now let/VBP/let see/VB/see /,/, this/DT/this is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the resulting/VBG/resulting tree/NNP/tree. if/IN/if this/DT/this value/NN/value equals/VBZ/equals h2/NNP/h2 /,/, there/EX/there are/VBP/are 2/CD/2 possibilities/NNS/possibilities /:/: either/DT/either this/DT/this value/NN/value equal/JJ/equal to/TO/to h2/NNP/h2 /,/, but/CC/but h2/NNP/h2 less/RBR/less than/IN/than log/NN/log of/IN/of n2/NNP/n2 which/WDT/which is/VBZ/is less/RBR/less than/IN/than log/NN/log of/IN/of n1/NNP/n1 plus/CC/plus n2/NNP/n2. the/DT/the other/JJ/other possibility/NN/possibility /,/, as/IN/as this/DT/this quantity/NN/quantity equals/VBZ/equals h1/NNP/h1 plus/CC/plus 1/CD/1 which/WDT/which is/VBZ/is less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to log/VB/log of/IN/of n1/NNP/n1 plus/CC/plus 1/CD/1 which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to log/VB/log of/IN/of 2/CD/2 times/NNS/times n1/NNP/n1 which/WDT/which is/VBZ/is less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to log/VB/log of/IN/of n1/NNP/n1 plus/CC/plus n2/NNP/n2 /,/, because/IN/because n2/NNP/n2 is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to n1/NNP/n1. actually/RB/actually /,/, we/PRP/we have/VBP/have not/RB/not used/VBN/used the/DT/the fact/NN/fact that/IN/that n1/NNP/n1 is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than n2/NNP/n2. have/VBP/have we/PRP/we used/VBN/used that/IN/that fact/NN/fact ?/./? so/RB/so /,/, it/PRP/it will/MD/will become/VB/become equal/JJ/equal /,/, but/CC/but that/IN/that is/VBZ/is okay/NNP/okay. so/RB/so /,/, i/PRP/i do/VBP/do not/RB/not really/RB/really need/VBP/need this/NNP/this. what/WP/what i/PRP/i was/VBD/was said/VBN/said ?/./? one/CD/one of/IN/of the/DT/the trees/NNS/trees is/VBZ/is /,/, has/VBZ/has lesser/JJR/lesser or/CC/or equal/JJ/equal to/TO/to number/NN/number of/IN/of nodes/NNS/nodes than/IN/than the/DT/the other/JJ/other /,/, if/IN/if they/PRP/they are/VBP/are equal/JJ/equal /,/, actually/RB/actually you/PRP/you can/MD/can connect/VB/connect it/PRP/it in/IN/in any/DT/any way/NNP/way. so/RB/so /,/, i/PRP/i made/VBD/made 1/CD/1 point/NN/point to/TO/to the/DT/the other/NNP/other. this/DT/this /,/, by/IN/by induction/NN/induction hypothesis/NN/hypothesis this/DT/this height/NN/height is/VBZ/is at/IN/at most/JJS/most log/JJ/log of/IN/of n1/NNP/n1 /,/, this/DT/this is/VBZ/is height/VBN/height at/IN/at most/JJS/most log/JJ/log of/IN/of n2/NNP/n2. what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the resulting/VBG/resulting tree/NN/tree ?/./? it/PRP/it is/VBZ/is either/DT/either the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree or/CC/or it/PRP/it is/VBZ/is height/VBN/height of/IN/of this/DT/this tree/NN/tree plus/VBZ/plus the/DT/the 1/CD/1. if/IN/if it/PRP/it is/VBZ/is the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree then/RB/then /,/, it/PRP/it is/VBZ/is log/JJ/log of/IN/of n2/NNP/n2 which/WDT/which is/VBZ/is less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to log/VB/log of/IN/of n1/NNP/n1 plus/CC/plus n2/NNP/n2. if/IN/if it/PRP/it is/VBZ/is this/DT/this tree/NN/tree plus/VBZ/plus 1/CD/1 /,/, height/JJ/height of/IN/of this/DT/this tree/NN/tree plus/VBZ/plus 1/CD/1 /,/, then/RB/then it/PRP/it is/VBZ/is log/JJ/log of/IN/of n1/NNP/n1 plus/CC/plus 1/CD/1 which/WDT/which is/VBZ/is log/NN/log of/IN/of /,/, the/DT/the same/JJ/same as/IN/as log/NN/log of/IN/of 2/CD/2 times/NNS/times n1/NNP/n1 which/WDT/which is/VBZ/is less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to log/VB/log of/IN/of n1/NNP/n1 plus/CC/plus n2/NNP/n2 /,/, because/IN/because n2/NNP/n2 is/VBZ/is larger/JJR/larger than/IN/than n1/NNP/n1. this/DT/this is/VBZ/is the/DT/the base/NN/base case/NN/case 2/CD/2. when/WRB/when n/JJ/n equals/NNS/equals 1/CD/1 /,/, the/DT/the height/NN/height becomes/VBZ/becomes 0/CD/0. let/NN/let us/PRP/us define/VBP/define the/DT/the tree/NN/tree of/IN/of 0/-NONE-/0 with/IN/with the/DT/the only/JJ/only 1/CD/1 node/NN/node /,/, as/IN/as having/VBG/having a/DT/a height/NN/height zero/NNP/zero. /NNP/( hindi/NN/hindi /:/) if/IN/if n/NN/n equals/NNS/equals 2/CD/2 /,/, this/DT/this becomes/VBZ/becomes 1/CD/1 which/WDT/which is/VBZ/is okay/NNP/okay. when/WRB/when we/PRP/we have/VBP/have 2/CD/2 nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree /,/, it/PRP/it has/VBZ/has height/VBN/height 1/CD/1 then/RB/then /,/, by/IN/by definition/NNP/definition. /NNP/( hindi/NN/hindi /:/) so/RB/so now/RB/now /,/, what/WDT/what are/VBP/are we/PRP/we saying/VBG/saying ?/./? if/IN/if this/DT/this is/VBZ/is /,/, if/IN/if the/DT/the tree/NN/tree has/VBZ/has only/RB/only 1/CD/1 node/NN/node in/IN/in it/PRP/it /,/, this/DT/this is/VBZ/is height/VBN/height 0/CD/0. if/IN/if this/DT/this is/VBZ/is the/DT/the case/NN/case /,/, that/IN/that is/VBZ/is height/VBN/height 1/CD/1. so/RB/so /,/, i/PRP/i am/VBP/am counting/VBG/counting the/DT/the number/NN/number of/IN/of edges/NNS/edges on/IN/on the/DT/the longest/JJS/longest path/NN/path from/IN/from the/DT/the /,/, from/IN/from one/CD/one of/IN/of the/DT/the leaves/NNS/leaves to/TO/to the/DT/the root/NN/root /:/: counting/VBG/counting the/DT/the number/NN/number of/IN/of edges/NNS/edges and/CC/and not/RB/not the/DT/the number/NN/number of/IN/of nodes/NNP/nodes. everyone/NN/everyone with/IN/with me/PRP/me /,/, so/RB/so /,/, what/WDT/what does/VBZ/does this/DT/this show/NN/show ?/./? is/VBZ/is this/DT/this the/DT/the complete/NN/complete proof/IN/proof ?/./? what/WP/what am/NN/am i/PRP/i doing/VBG/doing in/IN/in induction/NN/induction on/IN/on ?/./? number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NN/tree /,/, so/RB/so /,/, i/PRP/i am/VBP/am assuming/VBG/assuming that/IN/that the/DT/the statement/NN/statement is/VBZ/is true/JJ/true for/IN/for all/DT/all nodes/NNS/nodes of/IN/of a/DT/a certain/JJ/certain number/NN/number /,/, less/RBR/less than/IN/than a/DT/a certain/JJ/certain number/NN/number /,/, i/PRP/i can/MD/can say/VB/say /,/, it/PRP/it is/VBZ/is true/JJ/true for/IN/for this/DT/this when/WRB/when i/PRP/i link/VBP/link this/DT/this and/CC/and i/PRP/i get/VBP/get a/DT/a tree/NN/tree with/IN/with larger/JJR/larger number/NN/number of/IN/of nodes/NNS/nodes /,/, it/PRP/it will/MD/will continue/VB/continue to/TO/to be/VB/be true/NNP/true. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 14/CD/14 /CD/) great/JJ/great /,/, this/DT/this is/VBZ/is called/VBN/called union/NN/union by/IN/by rank/NNP/rank. rank/NN/rank meaning/VBG/meaning /,/, the/DT/the rank/NN/rank is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NNP/tree. you/PRP/you can/MD/can also/RB/also do/VB/do a/DT/a union/NN/union by/IN/by height/NNP/height. as/IN/as in/IN/in /,/, you/PRP/you can/MD/can keep/VB/keep the/DT/the /,/, make/VBP/make the/DT/the shallow/JJ/shallow tree/NN/tree point/NN/point to/TO/to the/DT/the tree/NN/tree with/IN/with larger/JJR/larger height/NNP/height. that/IN/that could/MD/could also/RB/also work/NNP/work. let/VB/let see/NN/see why/WRB/why ?/./? what/WP/what am/NN/am i/PRP/i doing/VBG/doing now/RB/now ?/./? this/DT/this is/VBZ/is a/DT/a tree/NN/tree of/IN/of height/NN/height h1/NNP/h1 /,/, this/DT/this is/VBZ/is tree/NN/tree of/IN/of height/NN/height h2/NNP/h2. h1/NNP/h1 less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to h2/NNP/h2. i/PRP/i do/VBP/do this/DT/this /,/, i/PRP/i make/VBP/make root/NN/root of/IN/of h1/NNP/h1 point/NN/point to/TO/to the/DT/the root/NN/root of/IN/of h2/NNP/h2. i/PRP/i am/VBP/am just/RB/just showing/VBG/showing you/PRP/you 2/CD/2 alternative/JJ/alternative ways/NNS/ways to/TO/to do/VB/do the/DT/the same/JJ/same thing/NNP/thing. now/RB/now /,/, what/WDT/what should/MD/should my/PRP$/my induction/NN/induction statement/NN/statement will/MD/will be/VB/be ?/./? how/WRB/how will/MD/will i/VB/i proof/IN/proof /,/, what/WP/what is/VBZ/is the/DT/the claim/NN/claim i/PRP/i should/MD/should try/VB/try to/TO/to make/VB/make ?/./? what/WP/what holds/NNS/holds true/VBP/true ?/./? so/RB/so /,/, a/DT/a tree/NN/tree of/IN/of height/NN/height h/NN/h ;/:/; what/WP/what should/MD/should i/VB/i try/NN/try and/CC/and proof/IN/proof ?/./? a/DT/a tree/NN/tree of/IN/of height/NN/height h/NN/h has/VBZ/has at/IN/at least/JJS/least /,/, 2/CD/2 to/TO/to the/DT/the h/NN/h nodes/NNP/nodes. this/DT/this is/VBZ/is converse/NN/converse of/IN/of that/DT/that claim/NNP/claim. there/RB/there we/PRP/we were/VBD/were talking/VBG/talking of/IN/of a/DT/a tree/NN/tree with/IN/with so/RB/so many/JJ/many nodes/NNS/nodes of/IN/of height/NN/height at/IN/at least/JJS/least log/NN/log of/IN/of h/NNP/h. here/RB/here /,/, if/IN/if the/DT/the height/NN/height is/VBZ/is h/JJ/h /,/, then/RB/then it/PRP/it has/VBZ/has at/IN/at least/JJS/least 2/CD/2 to/TO/to the/DT/the h/NNP/h. at/IN/at most/JJS/most /,/, it/PRP/it has/VBZ/has height/VBN/height at/IN/at most/JJS/most log/JJ/log of/IN/of n1/NNP/n1 /,/, here/RB/here we/PRP/we would/MD/would write/VB/write that/IN/that the/DT/the tree/NN/tree of/IN/of height/NN/height h/NN/h has/VBZ/has a/DT/a large/JJ/large number/NN/number of/IN/of nodes/NNS/nodes in/IN/in it/PRP/it /,/, at/IN/at least/JJS/least /,/, 2/CD/2 to/TO/to 3/CD/3 h/NNP/h. so/RB/so /,/, that/IN/that means/NNS/means that/WDT/that you/PRP/you can/MD/can never/RB/never have/VB/have a/DT/a tree/NN/tree of/IN/of height/NN/height more/JJR/more than/IN/than log/NN/log of/IN/of n/NN/n /,/, because/IN/because if/IN/if the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree was/VBD/was more/JJR/more than/IN/than log/NN/log of/IN/of n/NN/n /,/, then/RB/then it/PRP/it will/MD/will have/VB/have more/JJR/more than/IN/than n/NN/n nodes/NNS/nodes in/IN/in it/NNP/it. it/PRP/it is/VBZ/is not/RB/not possible/JJ/possible because/IN/because /,/, there/EX/there is/VBZ/is only/RB/only n/VBN/n node/NN/node in/IN/in the/DT/the graph/NN/graph to/TO/to be/VB/be ?/./? in/IN/in a/DT/a collection/NN/collection to/TO/to be/VB/be ?/./? so/RB/so /,/, that/IN/that will/MD/will place/VB/place a/DT/a log/NN/log in/IN/in bound/NN/bound on/IN/on the/DT/the height/NN/height of/IN/of any/DT/any tree/NNP/tree. how/WRB/how will/MD/will we/VB/we prove/VBP/prove this/DT/this ?/./? once/RB/once again/RB/again by/IN/by induction/NN/induction /,/, suppose/NN/suppose /,/, claim/VBP/claim is/VBZ/is true/JJ/true for/IN/for all/DT/all trees/NNS/trees of/IN/of height/NN/height up/IN/up to/TO/to a/DT/a cretin/NN/cretin number/NN/number and/CC/and then/RB/then when/WRB/when i/PRP/i do/VBP/do this/DT/this linking/NN/linking /,/, the/DT/the resulting/VBG/resulting tree/NN/tree has/VBZ/has height/VBN/height h2/NNP/h2 max/NN/max of/IN/of h2/NNP/h2 comma/NN/comma h1/NNP/h1 plus/CC/plus 1/CD/1 once/RB/once again/NNP/again. h1/NNP/h1 plus/CC/plus 1/CD/1 will/MD/will occur/VB/occur only/RB/only if/IN/if h1/NNP/h1 equals/NNS/equals h2/NNP/h2. now/RB/now /,/, this/DT/this is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the new/JJ/new tree/NNP/tree. let/NN/let say/VBP/say /,/, h/JJ/h is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the new/JJ/new tree/NN/tree /,/, this/DT/this is/VBZ/is this/NNP/this. why/WRB/why is/VBZ/is this/DT/this h/NN/h /,/, why/WRB/why is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes /,/, now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the new/JJ/new tree/NN/tree ?/./? equals/NNS/equals n1/NNP/n1 plus/CC/plus n2/NNP/n2 ;/:/; number/NN/number of/IN/of nodes/NNS/nodes in/IN/in this/DT/this tree/NN/tree plus/VBZ/plus the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in this/DT/this tree/NNP/tree. now/RB/now /,/, we/PRP/we know/VBP/know that/IN/that n1/NNP/n1 is/VBZ/is at/IN/at least/JJS/least 2/CD/2 to/TO/to the/DT/the h1/NNP/h1 /,/, n2/NNP/n2 is/VBZ/is 2/CD/2 to/TO/to the/DT/the h2/NNP/h2. so/RB/so /,/, this/DT/this quantity/NN/quantity is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the 2/CD/2 to/TO/to the/DT/the h2/NNP/h2. that/IN/that is/VBZ/is one/CD/one way/NN/way of/IN/of thinking/VBG/thinking of/IN/of it/PRP/it and/CC/and since/IN/since /,/, h2/NNP/h2 is/VBZ/is more/JJR/more than/IN/than h1/NNP/h1 /,/, this/DT/this is/VBZ/is also/RB/also greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the h1/NNP/h1 plus/CC/plus 2/CD/2 to/TO/to the/DT/the h1/NNP/h1 which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the h1/NNP/h1 plus/CC/plus 1/CD/1. so/RB/so /,/, the/DT/the number/NN/number of/IN/of nodes/NNS/nodes is/VBZ/is grater/JJR/grater than/IN/than or/CC/or equal/JJ/equal to/TO/to max/NN/max of/IN/of 2/CD/2 to/TO/to the/DT/the h2/NNP/h2 comma/NN/comma 2/CD/2 to/TO/to the/DT/the h1/NNP/h1 plus/CC/plus 1/CD/1. i/PRP/i can/MD/can also/RB/also write/VB/write it/PRP/it as/IN/as /,/, max/NN/max of/IN/of this/DT/this is/VBZ/is 2/CD/2 to/TO/to the/DT/the max/NN/max of/IN/of h2/NNP/h2 comma/NN/comma h1/NNP/h1 plus/CC/plus 1/CD/1 which/WDT/which is/VBZ/is 2/CD/2 to/TO/to the/DT/the h/NNP/h. /NNP/( hindi/NN/hindi /:/) proofs/NNS/proofs are/VBP/are very/RB/very similar/JJ/similar /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at it/PRP/it carefully/NNP/carefully. you/PRP/you are/VBP/are just/RB/just turning/VBG/turning them/PRP/them around/IN/around /,/, both/DT/both of/IN/of these/DT/these schemes/NNS/schemes can/MD/can be/VB/be used/VBN/used to/TO/to do/VB/do the/DT/the union/NNP/union. what/WP/what do/VBP/do they/PRP/they both/DT/both ensure/NN/ensure ?/./? why/WRB/why does/VBZ/does this/DT/this ensure/NN/ensure that/IN/that the/DT/the height/NN/height is/VBZ/is more/RBR/more than/IN/than /,/, no/DT/no more/RBR/more than/IN/than log/NN/log n/NN/n ?/./? because/IN/because /,/, if/IN/if a/DT/a tree/NN/tree has/VBZ/has a/DT/a height/NN/height more/RBR/more than/IN/than log/NN/log n/NN/n /:/( hindi/NN/hindi /:/) 2/CD/2 to/TO/to the/DT/the /,/, a/DT/a tree/NN/tree of/IN/of height/NN/height log/NN/log n/NN/n will/MD/will have/VB/have 2/CD/2 to/TO/to the/DT/the log/NN/log n/NN/n which/WDT/which has/VBZ/has n/VBN/n node/NN/node in/IN/in it/PRP/it already/NNP/already. if/IN/if it/PRP/it has/VBZ/has height/VBN/height more/JJR/more than/IN/than login/NN/login n/NN/n /,/, if/IN/if it/PRP/it will/MD/will have/VB/have more/JJR/more than/IN/than n/NN/n nodes/NNS/nodes /,/, which/WDT/which is/VBZ/is not/RB/not possible/NNP/possible. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 47/CD/47 /CD/) so/RB/so /,/, from/IN/from this/DT/this argument/NN/argument /,/, no/DT/no tree/NN/tree will/MD/will have/VB/have height/VBN/height more/RBR/more than/IN/than log/NN/log n/NN/n and/CC/and this/DT/this argument/NN/argument /,/, we/PRP/we have/VBP/have already/RB/already said/VBN/said directly/RB/directly that/IN/that no/DT/no tree/NN/tree has/VBZ/has height/VBN/height more/JJR/more than/IN/than log/NN/log n/NN/n /,/, log/NN/log of/IN/of the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the tree/NNP/tree. since/IN/since the/DT/the maximum/NN/maximum number/NN/number of/IN/of nodes/NNS/nodes in/IN/in any/DT/any tree/NN/tree is/VBZ/is at/IN/at most/JJS/most n/JJ/n /,/, no/DT/no tree/NN/tree has/VBZ/has height/VBN/height node/NN/node the/DT/the log/NN/log n/NNP/n. so/RB/so now/RB/now /,/, given/VBN/given this/DT/this /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does union/NN/union takes/VBZ/takes ?/./? constant/NN/constant time/NN/time ?/./? yes/NNS/yes /,/, so/RB/so something/NN/something has/VBZ/has to/TO/to be/VB/be done/VBN/done more/RBR/more and/CC/and what/WP/what is/VBZ/is it/PRP/it that/IN/that has/VBZ/has to/TO/to be/VB/be done/VBN/done ?/./? in/IN/in the/DT/the root/NN/root node/NN/node /,/, we/PRP/we have/VBP/have to/TO/to keep/VB/keep the/DT/the track/NN/track of/IN/of /,/, either/DT/either the/DT/the height/NN/height or/CC/or the/DT/the number/NN/number of/IN/of nodes/NNS/nodes /,/, whichever/RB/whichever it/PRP/it is/NNP/is. and/CC/and /,/, this/DT/this is/VBZ/is an/DT/an information/NN/information which/WDT/which is/VBZ/is not/RB/not difficult/JJ/difficult to/TO/to maintain/VB/maintain because/IN/because /,/, when/WRB/when i/PRP/i do/VBP/do an/DT/an union/NN/union /,/, this/DT/this value/NN/value is/VBZ/is updated/VBN/updated to/TO/to either/DT/either the/DT/the height/NN/height /,/, if/IN/if you/PRP/you maintain/VBP/maintain the/DT/the height/NN/height it/PRP/it becomes/VBZ/becomes the/DT/the max/NN/max or/CC/or if/IN/if you/PRP/you are/VBP/are maintaining/VBG/maintaining the/DT/the number/NN/number of/IN/of nodes/NNS/nodes /,/, you/PRP/you just/RB/just add/VBP/add this/DT/this quantity/NN/quantity that/NNP/that. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does union/NN/union take/VB/take now/RB/now ?/./? constant/JJ/constant time/NN/time because/IN/because /,/, you/PRP/you just/RB/just have/VBP/have to/TO/to update/VB/update this/DT/this variable/JJ/variable and/CC/and do/VB/do this/DT/this reference/NN/reference update/NNP/update. how/WRB/how much/JJ/much time/NN/time does/VBZ/does find/VB/find take/NN/take now/RB/now ?/./? i/PRP/i start/VBP/start from/IN/from a/DT/a node/NN/node and/CC/and keep/VB/keep moving/VBG/moving up/RP/up the/DT/the tree/NNP/tree. since/IN/since the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is never/RB/never more/RBR/more than/IN/than log/NN/log n/NN/n /,/, find/VBP/find takes/VBZ/takes no/DT/no more/JJR/more than/IN/than log/NN/log n/NN/n time/NNP/time. total/NN/total time/NN/time taken/VBN/taken by/IN/by kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm then/RB/then becomes/VBZ/becomes /,/, time/NN/time for/IN/for sorting/NN/sorting /,/, m/NN/m log/NN/log n/NN/n plus/CC/plus /,/, how/WRB/how many/JJ/many unions/NNS/unions did/VBD/did we/PRP/we say/VBP/say we/PRP/we need/VBP/need ?/./? at/IN/at most/JJS/most n/JJ/n unions/NNS/unions /,/, every/DT/every time/NN/time i/PRP/i include/VBP/include an/DT/an edge/NN/edge /,/, i/PRP/i need/VBP/need 1/CD/1 union/NNP/union. since/IN/since /,/, each/DT/each one/CD/one of/IN/of them/PRP/them is/VBZ/is taking/VBG/taking constant/JJ/constant time/NN/time /,/, this/DT/this is/VBZ/is just/RB/just order/NN/order replay/NNP/replay. how/WRB/how many/JJ/many finds/NNS/finds do/VBP/do i/PRP/i need/VBP/need ?/./? for/IN/for every/DT/every edge/NN/edge /,/, i/PRP/i may/MD/may need/VB/need 2/CD/2 finds/NNP/finds. so/RB/so /,/, m/NN/m times/NNS/times log/VBP/log n/NNP/n. what/WP/what is/VBZ/is this/DT/this ?/./? m/NN/m log/NN/log n/NN/n /:/( hindi/NN/hindi /:/) what/WP/what is/VBZ/is log/JJ/log m/NN/m ?/./? /:/( hindi/NN/hindi /:/) n/NN/n square/NN/square ?/./? /:/( hindi/NN/hindi /:/) value/NN/value is/VBZ/is 2/CD/2 log/NN/log n/NN/n and/CC/and minimum/JJ/minimum value/NN/value /:/( hindi/NN/hindi /:/) in/IN/in the/DT/the connected/VBN/connected graph/NN/graph ?/./? log/NN/log of/IN/of n/NNP/n. so/RB/so /,/, log/NN/log m/NN/m and/CC/and log/NN/log n/NN/n are/VBP/are the/DT/the same/JJ/same things/NNP/things. log/NN/log m/NN/m is/VBZ/is theta/NN/theta log/NN/log n/NNP/n. they/PRP/they are/VBP/are in/IN/in the/DT/the constant/NNP/constant. so/RB/so /,/, whether/IN/whether you/PRP/you write/VBP/write log/JJ/log n/NN/n here/RB/here or/CC/or log/NN/log m/NN/m here/RB/here /,/, it/PRP/it is/VBZ/is immaterial/NNP/immaterial. they/PRP/they are/VBP/are the/DT/the same/JJ/same quantities/NNP/quantities. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 26/CD/26 /CD/) so/RB/so /,/, i/PRP/i will/MD/will /,/, the/DT/the next/JJ/next thing/NN/thing i/PRP/i want/VBP/want to/TO/to do/VB/do is/VBZ/is to/TO/to show/VB/show you/PRP/you 1/CD/1 way/NN/way of/IN/of improving/VBG/improving the/DT/the union/NN/union find/NN/find data/NNS/data structure/NNP/structure. we/PRP/we saw/VBD/saw the/DT/the method/NN/method /,/, one/CD/one way/NN/way so/IN/so /,/, this/DT/this data/NN/data structure/NN/structure we/PRP/we said/VBD/said if/IN/if you/PRP/you do/VBP/do union/NN/union by/IN/by rank/NN/rank then/RB/then the/DT/the time/NN/time required/VBN/required for/IN/for find/NN/find improves/NNP/improves. it/PRP/it becomes/VBZ/becomes order/NN/order log/NN/log n/NNP/n. you/PRP/you can/MD/can further/RB/further improve/VB/improve the/DT/the time/NN/time required/VBN/required for/IN/for find/NN/find by/IN/by using/NN/using the/DT/the technique/NN/technique called/VBD/called path/NN/path compression/NN/compression whose/WP$/whose analysis/NN/analysis /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to do/VB/do in/IN/in this/DT/this class/NNP/class. but/CC/but /,/, you/PRP/you will/MD/will do/VB/do learn/VB/learn in/IN/in your/PRP$/your algorithms/NNS/algorithms course/NNP/course. what/WP/what is/VBZ/is the/DT/the technique/NN/technique ?/./? so/RB/so /,/, it/PRP/it is/VBZ/is just/RB/just the/DT/the following/NNP/following. you/PRP/you have/VBP/have your/PRP$/your tree/NN/tree in/IN/in which/WDT/which you/PRP/you are/VBP/are doing/VBG/doing a/DT/a find/NNP/find. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, you/PRP/you went/VBD/went up/RP/up the/DT/the tree/NN/tree like/IN/like this/DT/this to/TO/to do/VB/do this/DT/this find/NNP/find. now/RB/now the/DT/the question/NN/question is/VBZ/is /,/, why/WRB/why do/VBP/do not/RB/not we/PRP/we do/VBP/do something/NN/something at/IN/at this/DT/this point/NN/point /,/, so/RB/so as/IN/as to/TO/to improve/VB/improve the/DT/the performance/NN/performance of/IN/of future/JJ/future finds/NNS/finds ?/./? you/PRP/you might/MD/might have/VB/have to/TO/to find/VB/find this/DT/this node/NN/node again/RB/again ?/./? yes/NNS/yes /,/, we/PRP/we will/MD/will modify/VB/modify these/DT/these things/NNP/things. we/PRP/we will/MD/will make/VB/make this/DT/this parent/NN/parent pointer/NN/pointer /,/, point/NN/point straight/RB/straight to/TO/to the/DT/the root/NN/root and/CC/and not/RB/not just/RB/just this/DT/this guy/NN/guy /,/, everyone/NN/everyone on/IN/on this/DT/this path/NNP/path. why/WRB/why are/VBP/are we/PRP/we doing/VBG/doing this/DT/this ?/./? anyone/NN/anyone ?/./? because/IN/because now/RB/now /,/, this/DT/this guys/NNS/guys become/VBP/become closer/JJR/closer to/TO/to the/DT/the roots/NNP/roots. what/WP/what is/VBZ/is /,/, i/PRP/i am/VBP/am not/RB/not drawing/VBG/drawing rest/NN/rest of/IN/of the/DT/the tree/NN/tree but/CC/but now/RB/now /,/, you/PRP/you can/MD/can see/VB/see that/IN/that this/DT/this node/NN/node is/VBZ/is this/DT/this /,/, this/DT/this /,/, let/VB/let me/PRP/me put/VB/put a/DT/a dot/NN/dot here/NNP/here. this/DT/this guy/NN/guy /,/, connected/VBN/connected to/TO/to just/RB/just 1/CD/1 link/NN/link to/TO/to the/DT/the root/NNP/root. let/NN/let me/PRP/me put/VBD/put a/DT/a cross/NN/cross here/RB/here and/CC/and this/DT/this last/JJ/last 1/CD/1 /,/, without/IN/without anything/NN/anything is/VBZ/is this/NNP/this. of/IN/of course/NN/course /,/, there/EX/there are/VBP/are sub/NN/sub trees/NNS/trees hanging/VBG/hanging down/IN/down here/NNP/here. they/PRP/they will/MD/will continue/VB/continue to/TO/to hang/VB/hang down/RP/down here/RB/here /,/, because/IN/because there/EX/there could/MD/could be/VB/be other/JJ/other nodes/NNS/nodes pointing/VBG/pointing towards/NNS/towards this/DT/this so/RB/so they/PRP/they will/MD/will continue/VB/continue to/NNP/to. but/CC/but when/WRB/when i/PRP/i later/VBP/later /,/, so/RB/so /,/, what/WDT/what are/VBP/are we/PRP/we doing/VBG/doing as/IN/as a/DT/a consequence/NN/consequence of/IN/of this/DT/this ?/./? we/PRP/we are/VBP/are bringing/VBG/bringing the/DT/the nodes/NNS/nodes closer/JJR/closer to/TO/to the/DT/the root/NN/root /,/, thereby/RB/thereby /,/, reducing/VBG/reducing the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree and/CC/and that/IN/that reduces/NNS/reduces the/DT/the number/NN/number of/IN/of /,/, the/DT/the time/NN/time required/VBN/required to/TO/to a/DT/a find/NNP/find. no/DT/no /,/, the/DT/the root/NN/root is/VBZ/is not/RB/not changed/VBN/changed to/TO/to this/DT/this tree/NNP/tree. the/DT/the root/NN/root of/IN/of this/DT/this tree/NN/tree remains/VBZ/remains as/IN/as before/NNP/before. union/NN/union by/IN/by height/NN/height /,/, you/PRP/you are/VBP/are worried/VBN/worried about/IN/about if/IN/if the/DT/the union/NN/union procedure/NN/procedure requires/VBZ/requires height/NNP/height. the/DT/the root/NN/root of/IN/of this/DT/this tree/NN/tree will/MD/will point/VB/point to/TO/to the/DT/the root/NN/root of/IN/of other/JJ/other tree/NNP/tree. no/DT/no /,/, these/DT/these will/MD/will not/RB/not change/VB/change then/RB/then /,/, these/DT/these will/MD/will not/RB/not change/VB/change then/RB/then /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to change/VB/change these/DT/these now/NNP/now. if/IN/if i/PRP/i take/VBP/take the/DT/the union/NN/union of/IN/of this/DT/this with/IN/with someone/NN/someone else/RB/else that/IN/that is/VBZ/is okay/NNP/okay. i/PRP/i did/VBD/did that/IN/that /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to change/VB/change this/DT/this pointer/NNP/pointer. so/RB/so /,/, if/IN/if you/PRP/you are/VBP/are opting/VBG/opting this/DT/this procedure/NN/procedure /,/, then/RB/then union/NN/union for/IN/for the/DT/the union/NN/union operation/NN/operation /,/, you/PRP/you should/MD/should not/RB/not work/VB/work with/IN/with height/NNP/height. but/CC/but /,/, with/IN/with number/NN/number of/IN/of nodes/NNS/nodes /:/: you/PRP/you understand/VBP/understand why/WRB/why ?/./? because/IN/because we/PRP/we are/VBP/are changing/VBG/changing the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree by/IN/by doing/NN/doing this/NNP/this. we/PRP/we might/MD/might be/VB/be changing/VBG/changing it/PRP/it in/IN/in a/DT/a manner/NN/manner which/WDT/which might/MD/might be/VB/be hard/RB/hard to/TO/to recompute/NNP/recompute. after/IN/after i/PRP/i do/VBP/do this/DT/this compression/NN/compression /,/, may/MD/may be/VB/be this/DT/this was/VBD/was a/DT/a node/NN/node /,/, there/EX/there was/VBD/was leaf/NN/leaf here/RB/here which/WDT/which was/VBD/was the/DT/the farthest/JJS/farthest from/IN/from the/DT/the root/NNP/root. when/WRB/when i/PRP/i change/VBP/change this/DT/this /,/, the/DT/the height/NN/height of/IN/of the/DT/the changes/NNS/changes /,/, but/CC/but how/WRB/how do/VBP/do i/PRP/i now/RB/now compute/VBP/compute the/DT/the new/JJ/new height/NN/height of/IN/of the/DT/the tree/NN/tree in/IN/in constant/NN/constant time/NN/time ?/./? very/RB/very difficult/JJ/difficult /,/, so/RB/so we/PRP/we use/VBP/use the/DT/the union/NN/union by/IN/by number/NN/number of/IN/of nodes/NNP/nodes. that/IN/that is/VBZ/is the/DT/the procedure/NN/procedure we/PRP/we are/VBP/are going/VBG/going to/TO/to use/NNP/use. so/RB/so /,/, the/DT/the metric/JJ/metric will/MD/will be/VB/be which/WDT/which tree/NN/tree has/VBZ/has lesser/NN/lesser number/NN/number of/IN/of nodes/NNP/nodes. the/DT/the tree/NN/tree with/IN/with lesser/NN/lesser number/NN/number of/IN/of nodes/NNS/nodes will/MD/will be/VB/be made/VBN/made to/TO/to point/NN/point to/TO/to the/DT/the tree/NN/tree with/IN/with larger/JJR/larger number/NN/number of/IN/of nodes/NNS/nodes or/CC/or the/DT/the root/NN/root of/IN/of the/DT/the tree/NN/tree with/IN/with less/JJR/less than/IN/than number/NN/number of/IN/of nodes/NNS/nodes will/MD/will be/VB/be made/VBN/made to/TO/to point/NN/point to/TO/to the/DT/the tree/NN/tree /,/, the/DT/the root/NN/root of/IN/of the/DT/the tree/NN/tree with/IN/with larger/JJR/larger number/NN/number of/IN/of nodes/NNP/nodes. everyone/NN/everyone follows/VBZ/follows this/DT/this ?/./? questions/NNS/questions ?/./? what/WP/what we/PRP/we doing/VBG/doing in/IN/in ?/./? what/WP/what are/VBP/are we/PRP/we doing/VBG/doing in/IN/in path/NN/path compression/NN/compression ?/./? what/WP/what we/PRP/we are/VBP/are doing/VBG/doing in/IN/in path/NN/path compression/NN/compression is/VBZ/is that/IN/that /,/, we/PRP/we say/VBP/say /,/, when/WRB/when i/PRP/i am/VBP/am searching/VBG/searching for/IN/for this/DT/this node/NN/node /,/, when/WRB/when i/PRP/i doing/VBG/doing a/DT/a find/NN/find operation/NN/operation on/IN/on this/DT/this node/NN/node /,/, in/IN/in any/DT/any case/NN/case i/PRP/i am/VBP/am going/VBG/going to/TO/to travel/NN/travel all/DT/all the/DT/the way/NN/way up/NNP/up. i/PRP/i am/VBP/am going/VBG/going to/TO/to traverse/VB/traverse this/DT/this link/NN/link and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to traverse/VB/traverse this/DT/this link/NN/link and/CC/and this/DT/this link/NN/link and/CC/and this/DT/this link/NNP/link. why/WRB/why do/VBP/do not/RB/not i/PRP/i do/VBP/do something/NN/something now/RB/now /,/, which/WDT/which will/MD/will make/VB/make future/JJ/future easier/JJR/easier for/IN/for me/PRP/me ?/./? future/JJ/future finds/NNS/finds easier/JJR/easier /,/, lesser/NN/lesser time/NN/time /,/, so/RB/so /,/, what/WDT/what i/PRP/i do/VBP/do is/VBZ/is /,/, that/IN/that once/RB/once i/PRP/i do/VBP/do this/DT/this /,/, i/PRP/i will/MD/will may/VB/may be/VB/be make/NN/make another/DT/another pass/NN/pass of/IN/of this/DT/this and/CC/and now/RB/now change/VBP/change the/DT/the pointers/NNS/pointers to/TO/to directly/RB/directly point/NN/point to/TO/to there/NNP/there. we/PRP/we do/VBP/do not/RB/not know/VB/know the/DT/the root/NN/root /,/, we/PRP/we do/VBP/do not/RB/not know/VB/know when/WRB/when to/TO/to make/VB/make the/DT/the /,/, no/DT/no /,/, but/CC/but when/WRB/when i/PRP/i am/VBP/am doing/VBG/doing the/DT/the find/NN/find /,/, i/PRP/i need/VBP/need to/TO/to know/VB/know where/WRB/where the/DT/the root/NN/root is/VBZ/is that/IN/that is/VBZ/is why/WRB/why i/PRP/i am/VBP/am doing/VBG/doing a/DT/a find/NN/find in/IN/in the/DT/the first/JJ/first place/NNP/place. how/WRB/how do/VBP/do i/PRP/i know/VB/know /,/, the/DT/the root/NN/root point/NN/point there/NNP/there. only/RB/only when/WRB/when i/PRP/i reach/VBP/reach the/DT/the root/NN/root /,/, i/PRP/i could/MD/could know/VB/know where/WRB/where the/DT/the /,/, what/WP/what the/DT/the root/NN/root reference/NN/reference is/NNP/is. so/RB/so /,/, i/PRP/i need/VBP/need to/TO/to make/VB/make a/DT/a second/JJ/second path/NN/path to/TO/to update/NNP/update. every/DT/every time/NN/time we/PRP/we do/VBP/do a/DT/a find/NN/find /,/, we/PRP/we will/MD/will update/VB/update the/DT/the pointer/NNP/pointer. then/RB/then there/RB/there is/VBZ/is no/DT/no need/NNP/need. so/RB/so /,/, for/IN/for here/RB/here instance/NN/instance i/PRP/i did/VBD/did not/RB/not change/VB/change this/NNP/this. this/DT/this is/VBZ/is no/DT/no point/NN/point /,/, what/WP/what does/VBZ/does it/PRP/it mean/VB/mean to/TO/to change/VB/change the/DT/the pointed/VBN/pointed this/NNP/this. this/DT/this we/PRP/we will/MD/will change/VB/change because/IN/because /,/, that/IN/that gives/VBZ/gives us/PRP/us /,/, the/DT/the next/JJ/next time/NN/time the/DT/the picture/NN/picture is/VBZ/is this/DT/this /,/, we/PRP/we will/MD/will look/VB/look at/IN/at this/DT/this picture/NN/picture and/CC/and decide/VB/decide what/WP/what to/TO/to change/VB/change and/CC/and what/WP/what not/RB/not to/NNP/to. so/RB/so /,/, again/RB/again when/WRB/when i/PRP/i go/VBP/go throw/RB/throw here/RB/here /,/, what/WDT/what is/VBZ/is the/DT/the point/NN/point in/IN/in changing/NN/changing it/PRP/it /,/, because/IN/because it/PRP/it is/VBZ/is already/RB/already pointing/VBG/pointing the/DT/the ?/./? this/DT/this becomes/VBZ/becomes the/DT/the picture/NN/picture /,/, i/PRP/i do/VBP/do not/RB/not have/VB/have this/DT/this picture/NN/picture any/DT/any more/RBR/more in/IN/in the/DT/the /,/, the/DT/the next/JJ/next type/NNP/type. how/WRB/how do/VBP/do we/PRP/we directly/RB/directly go/VBP/go to/TO/to the/DT/the nodes/NNS/nodes in/IN/in this/DT/this tree/NN/tree ?/./? we/PRP/we keep/VBP/keep a/DT/a reference/NNP/reference. for/IN/for every/DT/every node/NN/node /,/, when/WRB/when i/PRP/i am/VBP/am keeping/VBG/keeping the/DT/the node/NN/node in/IN/in this/DT/this union/NN/union find/NN/find data/NNS/data structure/NN/structure /,/, the/DT/the node/NN/node corresponds/NNS/corresponds to/TO/to a/DT/a vertex/NN/vertex of/IN/of my/PRP$/my graph/NNP/graph. i/PRP/i do/VBP/do not/RB/not just/RB/just create/VB/create the/DT/the union/NN/union find/NN/find data/NNS/data structure/NN/structure as/IN/as the/DT/the standalone/NN/standalone entity/NNP/entity. i/PRP/i have/VBP/have to/TO/to link/VB/link it/PRP/it up/RP/up with/IN/with my/PRP$/my graph/NN/graph somehow/NNP/somehow. for/IN/for every/DT/every vertex/NN/vertex /,/, i/PRP/i have/VBP/have 1/CD/1 node/NN/node here/RB/here /,/, i/PRP/i keep/VBP/keep a/DT/a kind/NN/kind of/IN/of cross/NN/cross reference/NN/reference from/IN/from the/DT/the vertex/NN/vertex in/IN/in my/PRP$/my linked/VBN/linked list/NN/list data/NNS/data structure/NN/structure or/CC/or the/DT/the adjutancy/NN/adjutancy list/NN/list data/NNS/data structure/NN/structure for/IN/for the/DT/the /,/, in/IN/in which/WDT/which i/PRP/i have/VBP/have the/DT/the vertices/NNS/vertices /,/, i/PRP/i would/MD/would have/VB/have the/DT/the reference/NN/reference to/TO/to the/DT/the corresponding/NN/corresponding node/NN/node in/IN/in the/DT/the union/NN/union find/NN/find data/NNS/data structure/NNP/structure. so/RB/so that/IN/that when/WRB/when i/PRP/i have/VBP/have to/TO/to reach/VB/reach a/DT/a particular/JJ/particular vertex/NN/vertex /,/, i/PRP/i can/MD/can follow/VB/follow that/IN/that reference/NN/reference and/CC/and find/VB/find out/RP/out which/WDT/which connected/VBN/connected component/NN/component that/IN/that vertex/NN/vertex belongs/NNS/belongs to/TO/to /VB/( hindi/NN/hindi /:/) so/RB/so /,/, with/IN/with that/DT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to end/VB/end today/NN/today ?/./? s/NNS/s class/NN/class on/IN/on the/DT/the union/NN/union find/NN/find data/NNS/data structure/NN/structure and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to discuss/VB/discuss another/DT/another algorithm/NN/algorithm for/IN/for computing/NN/computing minimum/NN/minimum spanning/VBG/spanning trees/NNS/trees in/IN/in the/DT/the next/JJ/next class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 33/CD/33 in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we looked/VBD/looked at/IN/at the/DT/the union/NN/union find/NN/find data/NNS/data structure/NNP/structure. that/IN/that was/VBD/was a/DT/a data/NN/data structure/NN/structure to/TO/to maintain/VB/maintain a/DT/a collection/NN/collection of/IN/of disjoint/NN/disjoint sets/NNS/sets /,/, under/IN/under the/DT/the operations/NNS/operations of/IN/of union/NNP/union. that/IN/that was/VBD/was the/DT/the operations/NNS/operations we/PRP/we were/VBD/were doing/VBG/doing in/IN/in the/DT/the sets/NNS/sets /,/, that/IN/that was/VBD/was the/DT/the operation/NN/operation which/WDT/which were/VBD/were modifying/VBG/modifying the/DT/the sets/NNS/sets or/CC/or modifying/VBG/modifying the/DT/the collection/NN/collection and/CC/and the/DT/the find/NN/find operation/NN/operation was/VBD/was just/RB/just to/TO/to identify/VB/identify /,/, given/VBN/given an/DT/an element/NN/element /,/, which/WDT/which set/VBN/set it/PRP/it belongs/VBZ/belongs to/NNP/to. we/PRP/we used/VBD/used this/DT/this /,/, we/PRP/we needed/VBD/needed this/DT/this data/NN/data structure/NN/structure to/TO/to implement/VB/implement the/DT/the kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/NNP/algorithm. kruskal/NN/kruskal ?/./? s/NNS/s algorithm/VBP/algorithm was/VBD/was the/DT/the first/JJ/first algorithm/NN/algorithm we/PRP/we looked/VBD/looked at/IN/at for/IN/for computing/NN/computing a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NN/tree in/IN/in a/DT/a graph/NNP/graph. it/PRP/it was/VBD/was an/DT/an example/NN/example of/IN/of the/DT/the greedy/JJ/greedy algorithm/NNP/algorithm. today/NN/today /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at another/DT/another algorithm/NN/algorithm for/IN/for computing/NN/computing the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree in/IN/in a/DT/a graph/NNP/graph. this/DT/this one/CD/one is/VBZ/is due/JJ/due to/TO/to prim/VB/prim and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to discuss/VB/discuss today/NNP/today. so/RB/so /,/, let/VB/let me/PRP/me define/VB/define the/DT/the notion/NN/notion of/IN/of a/DT/a cut/NN/cut in/IN/in a/DT/a graph/NN/graph first/RB/first /,/, for/IN/for you/NNP/you. so/RB/so /,/, recall/JJ/recall that/IN/that we/PRP/we are/VBP/are talking/VBG/talking of/IN/of undirected/JJ/undirected graph/NNP/graph. a/DT/a spanning/NN/spanning tree/NN/tree /,/, the/DT/the notion/NN/notion of/IN/of a/DT/a spanning/NN/spanning tree/NN/tree is/VBZ/is defined/VBN/defined only/RB/only for/IN/for an/DT/an undirected/JJ/undirected graph/NNP/graph. for/IN/for a/DT/a directed/JJ/directed graph/NN/graph /,/, there/EX/there are/VBP/are different/JJ/different notions/NNP/notions. we/PRP/we do/VBP/do not/RB/not say/VB/say spanning/VBG/spanning tree/NN/tree in/IN/in a/DT/a directed/VBN/directed graph/NNP/graph. it/PRP/it is/VBZ/is only/RB/only an/DT/an undirected/VBN/undirected graph/NN/graph we/PRP/we are/VBP/are talking/VBG/talking about/IN/about here/NNP/here. so/RB/so /,/, give/JJ/give you/PRP/you an/DT/an undirected/JJ/undirected graph/NN/graph /,/, a/DT/a cut/NN/cut /:/: let/VB/let say/VBP/say /,/, this/DT/this is/VBZ/is graph/NN/graph g/NN/g and/CC/and a/DT/a cut/NN/cut in/IN/in graph/NN/graph g/NN/g is/VBZ/is a/DT/a partition/NN/partition of/IN/of the/DT/the vertex/NN/vertex set/VBD/set into/IN/into 2/CD/2 parts/NNP/parts. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? let/VB/let me/PRP/me partition/NN/partition /,/, break/NN/break vertex/NN/vertex into/IN/into 2/CD/2 pieces/NNP/pieces. so/RB/so let/VB/let say/VBP/say /,/, 1/CD/1 piece/NN/piece is/VBZ/is this/DT/this and/CC/and the/DT/the other/JJ/other is/VBZ/is remaining/VBG/remaining because/IN/because /,/, it/PRP/it is/VBZ/is the/DT/the partition/NNP/partition. this/DT/this way/NN/way of/IN/of splitting/VBG/splitting would/MD/would define/VB/define a/DT/a cut/NNP/cut. so/RB/so /,/, if/IN/if for/IN/for an/DT/an instance/NN/instance /,/, i/PRP/i had/VBD/had vertices/NNS/vertices /,/, a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NNP/e. so/RB/so /,/, then/RB/then the/DT/the first/JJ/first cut/NN/cut i/PRP/i am/VBP/am considering/VBG/considering is/VBZ/is a/DT/a /,/, b/NN/b one/CD/one side/NN/side and/CC/and c/NN/c /,/, d/VBD/d /,/, e/NN/e on/IN/on the/DT/the other/JJ/other side/NNP/side. there/EX/there could/MD/could be/VB/be many/JJ/many other/JJ/other cuts/NNS/cuts possible/JJ/possible /,/, i/PRP/i could/MD/could have/VB/have a/DT/a /,/, c/NN/c and/CC/and d/VBD/d on/IN/on one/CD/one side/NN/side and/CC/and b/NN/b and/CC/and e/NN/e on/IN/on the/DT/the other/JJ/other side/NN/side or/CC/or i/PRP/i could/MD/could have/VB/have only/RB/only 1/CD/1 vertex/NN/vertex let/NN/let say/VB/say /,/, c/NN/c an/DT/an one/CD/one side/NN/side and/CC/and the/DT/the other/JJ/other 4/CD/4 on/IN/on the/DT/the /,/, the/DT/the remaining/VBG/remaining 4/CD/4 on/IN/on the/DT/the other/JJ/other side/NNP/side. these/DT/these are/VBP/are all/DT/all examples/NNS/examples of/IN/of cuts/NNS/cuts in/IN/in the/DT/the graph/NNP/graph. how/WRB/how many/JJ/many cuts/NNS/cuts can/MD/can there/VB/there be/VB/be in/IN/in the/DT/the graph/NN/graph ?/./? 2/CD/2 to/TO/to the/DT/the power/NN/power n/NN/n ?/./? 2/CD/2 to/TO/to the/DT/the n/NN/n or/CC/or something/NN/something ?/./? 2/CD/2 to/TO/to the/DT/the power/NN/power n/NN/n minus/NN/minus 1/CD/1. because/IN/because /,/, this/DT/this partition/NN/partition is/VBZ/is the/DT/the same/JJ/same as/IN/as saying/VBG/saying /,/, c/NN/c d/VBD/d e/NN/e and/CC/and a/DT/a b/NNP/b. how/WRB/how did/VBD/did you/PRP/you come/VBP/come out/RP/out with/IN/with the/DT/the number/NN/number 2/CD/2 to/TO/to the/DT/the n/NN/n ?/./? every/DT/every element/NN/element /,/, for/IN/for every/DT/every element/NN/element /,/, there/EX/there are/VBP/are 2/CD/2 choices/NNS/choices /,/, either/DT/either left/NN/left or/CC/or right/NNP/right. so/RB/so /,/, there/EX/there are/VBP/are 2/CD/2 to/TO/to the/DT/the n/NN/n possibilities/NNS/possibilities but/CC/but then/RB/then /,/, but/CC/but then/RB/then /,/, we/PRP/we are/VBP/are repeating/NNP/repeating. each/DT/each possibility/NN/possibility is/VBZ/is repeated/VBN/repeated twice/-NONE-/twice. once/RB/once we/PRP/we will/MD/will say/VB/say /,/, a/DT/a b/NN/b go/NN/go on/IN/on the/DT/the left/NN/left side/NN/side /,/, c/NN/c d/VBD/d e/NN/e go/NN/go on/IN/on the/DT/the right/NN/right side/NN/side and/CC/and the/DT/the other/JJ/other time/NN/time we/PRP/we will/MD/will say/VB/say /,/, c/NN/c d/VBD/d e/NN/e go/NN/go on/IN/on the/DT/the left/NN/left side/NN/side /,/, a/DT/a b/NN/b goes/VBZ/goes the/DT/the right/NN/right side/NNP/side. but/CC/but the/DT/the partition/NN/partition is/VBZ/is the/DT/the same/NNP/same. so/RB/so /,/, that/IN/that is/VBZ/is why/WRB/why number/NN/number of/IN/of different/JJ/different cuts/NNS/cuts /,/, 2/CD/2 to/TO/to the/DT/the n/NN/n minus/NN/minus 1/CD/1 /,/, minus/CC/minus 1/CD/1 also/NNP/also. okay/NN/okay /,/, then/RB/then null/JJ/null ?/./? you/PRP/you are/VBP/are talking/VBG/talking of/IN/of the/DT/the null/NN/null /:/( hindi/NN/hindi /:/) sometimes/RB/sometimes /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is when/WRB/when we/PRP/we say/VBP/say a/DT/a cut/NN/cut /,/, so/RB/so cut/VBD/cut is/VBZ/is really/RB/really a/DT/a partition/NN/partition of/IN/of vertex/NN/vertex a/NNP/a. but/CC/but i/PRP/i sometimes/RB/sometimes would/MD/would also/RB/also say/VB/say /,/, these/DT/these edges/NNS/edges which/WDT/which are/VBP/are going/VBG/going from/IN/from 1/CD/1 side/NN/side to/TO/to the/DT/the other/JJ/other side/NN/side are/VBP/are called/VBN/called the/DT/the edges/NNS/edges in/IN/in the/DT/the cut/NNP/cut. so/RB/so /,/, these/DT/these edges/NNS/edges could/MD/could be/VB/be called/VBN/called the/DT/the edges/NNS/edges in/IN/in the/DT/the cut/NN/cut /,/, edges/NNS/edges in/IN/in the/DT/the cut/NN/cut or/CC/or edges/NNS/edges of/IN/of the/DT/the cut/NN/cut /,/, whatever/NNP/whatever. you/PRP/you understand/VBP/understand which/WDT/which edges/NNS/edges i/PRP/i am/VBP/am talking/VBG/talking about/IN/about ?/./? edges/NNS/edges which/WDT/which have/VBP/have 1/CD/1 end/NN/end point/NN/point in/IN/in 1/CD/1 side/NN/side of/IN/of the/DT/the partition/NN/partition and/CC/and the/DT/the other/JJ/other end/NN/end point/NN/point in/IN/in the/DT/the other/JJ/other side/NN/side of/IN/of the/DT/the partition/NNP/partition. so/RB/so /,/, you/PRP/you understand/VBP/understand what/WP/what a/DT/a cut/NN/cut is/NNP/is. you/PRP/you need/VBP/need this/DT/this notion/NN/notion and/CC/and how/WRB/how to/TO/to we/PRP/we use/VBP/use this/DT/this notion/NN/notion ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 5/CD/5 /:/: 53/CD/53 /CD/) suppose/NN/suppose /,/, i/PRP/i take/VBP/take a/DT/a cut/NN/cut of/IN/of my/PRP$/my graph/NN/graph /,/, some/DT/some cut/NN/cut in/IN/in the/DT/the graph/NN/graph /,/, s/VBZ/s and/CC/and i/PRP/i will/MD/will denote/VB/denote other/JJ/other point/NN/point /,/, other/JJ/other side/NN/side by/IN/by s/NNS/s complement/VBP/complement or/CC/or v/NN/v minus/NN/minus s/NNS/s where/WRB/where v/NN/v is/VBZ/is the/DT/the vertex/NN/vertex set/NNP/set. so/RB/so /,/, i/PRP/i have/VBP/have a/DT/a graph/NN/graph g/NN/g s/NNS/s v/VBP/v /,/, the/DT/the vertex/NN/vertex set/VBD/set and/CC/and e/NN/e is/VBZ/is the/DT/the set/NN/set of/IN/of edges/NNP/edges. so/RB/so /,/, s/NNS/s is/VBZ/is the/DT/the set/NN/set on/IN/on one/CD/one side/NN/side and/CC/and the/DT/the remaining/VBG/remaining is/VBZ/is the/DT/the set/NN/set on/IN/on other/JJ/other side/NNP/side. now/RB/now /,/, let/VB/let me/PRP/me look/VB/look at/IN/at all/DT/all the/DT/the edges/NNS/edges which/WDT/which are/VBP/are in/IN/in the/DT/the cut/NNP/cut. recall/NN/recall /,/, we/PRP/we are/VBP/are trying/VBG/trying to/TO/to compute/VB/compute the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. so/RB/so /,/, i/PRP/i am/VBP/am now/RB/now going/VBG/going to/TO/to be/VB/be taking/VBG/taking of/IN/of a/DT/a particular/JJ/particular property/NN/property of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. so/RB/so let/VB/let me/PRP/me take/VB/take this/DT/this cut/NN/cut and/CC/and let/VB/let me/PRP/me look/VB/look at/IN/at the/DT/the edges/NNS/edges in/IN/in the/DT/the cut/NN/cut and/CC/and let/VB/let us/PRP/us look/VB/look at/IN/at their/PRP$/their lengths/NNS/lengths of/IN/of these/DT/these edges/NNP/edges. so/RB/so /,/, may/MD/may be/VB/be /,/, this/DT/this edge/NN/edge is/VBZ/is length/NN/length 2/CD/2 /,/, this/DT/this edge/NN/edge is/VBZ/is 4/CD/4 /,/, this/DT/this is/VBZ/is length/NN/length 3/CD/3 /,/, this/DT/this is/VBZ/is length/NN/length 7/CD/7. i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be assuming/VBG/assuming that/IN/that all/DT/all the/DT/the edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/NNP/distinct. this/DT/this is/VBZ/is just/RB/just to/TO/to ease/VB/ease all/DT/all my/PRP$/my arguments/NNS/arguments /,/, to/TO/to simplify/VB/simplify my/PRP$/my arguments/NNP/arguments. all/DT/all the/DT/the algorithms/NNS/algorithms /,/, everything/NN/everything works/NNS/works even/RB/even when/WRB/when edge/NN/edge lengths/NNS/lengths are/VBP/are not/RB/not necessarily/RB/necessarily distinct/NNP/distinct. so/RB/so /,/, just/RB/just to/TO/to simplify/VB/simplify my/PRP$/my presentation/NN/presentation here/RB/here that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/NNP/distinct. now/RB/now /,/, the/DT/the claim/NN/claim is/VBZ/is that/IN/that /,/, so/RB/so recall/RB/recall /,/, when/WRB/when the/DT/the edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/JJ/distinct /,/, there/EX/there is/VBZ/is a/DT/a unique/JJ/unique minimum/NN/minimum spanning/VBG/spanning tree/NNP/tree. we/PRP/we have/VBP/have discussed/VBN/discussed this/DT/this before/IN/before /:/: there/EX/there is/VBZ/is 1/CD/1 and/CC/and only/RB/only 1/CD/1 minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. now/RB/now /,/, the/DT/the claim/NN/claim is/VBZ/is that/IN/that this/DT/this edge/NN/edge which/WDT/which has/VBZ/has length/NN/length 2/CD/2 will/MD/will be/VB/be a/DT/a part/NN/part of/IN/of that/DT/that minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. let/NN/let me/PRP/me write/VBP/write down/RP/down the/DT/the claim/NN/claim more/JJR/more formally/RB/formally /,/, for/IN/for any/DT/any cut/NN/cut /,/, any/DT/any cut/NN/cut s/VBZ/s /,/, s/NNS/s complement/VBP/complement ;/:/; the/DT/the minimum/JJ/minimum edge/NN/edge in/IN/in the/DT/the cut/NN/cut belongs/VBZ/belongs to/TO/to the/DT/the mst/NN/mst /:/( hindi/NN/hindi /:/) 2/CD/2 to/TO/to the/DT/the n/NN/n minus/NN/minus 1/CD/1 different/JJ/different cuts/NNP/cuts. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8/CD/8 /:/: 20/CD/20 /CD/) /CD/( hindi/NN/hindi /:/) 1/CD/1 ?/./? for/IN/for instance/NN/instance /:/( hindi/NN/hindi /:/) let/NN/let us/PRP/us make/VBP/make a/DT/a tree/NN/tree such/JJ/such that/IN/that there/EX/there will/MD/will be/VB/be both/DT/both of/IN/of these/DT/these edges/NNS/edges will/MD/will be/VB/be part/NN/part of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree or/CC/or part/NN/part of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) both/DT/both the/DT/the edges/NNS/edges are/VBP/are part/NN/part of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. i/PRP/i could/MD/could have/VB/have my/PRP$/my edge/NN/edge length/NN/length so/RB/so that/IN/that this/DT/this was/VBD/was my/PRP$/my minimum/NN/minimum spanning/VBG/spanning tree/NNP/tree. i/PRP/i could/MD/could choose/VB/choose my/PRP$/my edge/NN/edge length/NN/length so/RB/so that/IN/that this/DT/this is/VBZ/is the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. so/RB/so /,/, it/PRP/it is/VBZ/is not/RB/not necessary/JJ/necessary that/IN/that only/RB/only /,/, for/IN/for any/DT/any cut/NN/cut /,/, there/EX/there is/VBZ/is only/RB/only 1/CD/1 edge/NN/edge which/WDT/which is/VBZ/is the/DT/the part/NN/part of/IN/of minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, there/EX/there could/MD/could be/VB/be more/RBR/more than/IN/than 1/CD/1 edge/NN/edge which/WDT/which could/MD/could be/VB/be a/DT/a part/NN/part of/IN/of minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 9/CD/9 /:/: 26/CD/26 /CD/) but/CC/but /,/, all/DT/all we/PRP/we are/VBP/are claiming/VBG/claiming is/VBZ/is that/IN/that the/DT/the minimum/JJ/minimum edge/NN/edge in/IN/in the/DT/the cut/NN/cut will/MD/will belong/VB/belong to/TO/to the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /:/( hindi/NN/hindi /:/) why/WRB/why ?/./? what/WP/what is/VBZ/is the/DT/the proof/NN/proof ?/./? so/RB/so /,/, proof/IN/proof is/VBZ/is by/IN/by contradiction/NN/contradiction /:/( hindi/NN/hindi /:/) you/PRP/you are/VBP/are saying/VBG/saying that/IN/that this/DT/this is/VBZ/is the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree but/CC/but /,/, that/IN/that tree/NN/tree does/VBZ/does not/RB/not contain/VB/contain this/DT/this edge/NNP/edge. so/RB/so /,/, let/VB/let t/NN/t be/VB/be a/DT/a mst/NNP/mst. mst/NN/mst is/VBZ/is short/JJ/short for/IN/for minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. t/NN/t is/VBZ/is an/DT/an mst/NN/mst which/WDT/which does/VBZ/does not/RB/not contain/VB/contain edge/NN/edge /:/( hindi/NN/hindi /:/) does/VBZ/does not/RB/not contain/VB/contain edge/NN/edge /:/( hindi/NN/hindi /:/) which/WDT/which does/VBZ/does not/RB/not contain/VB/contain edge/NN/edge e/NNP/e. so/RB/so /,/, what/WDT/what now/RB/now ?/./? what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? i/PRP/i will/MD/will add/VB/add e/NN/e to/TO/to the/DT/the tree/NN/tree /,/, add/JJ/add e/NN/e to/TO/to t/NNP/t. what/WP/what will/MD/will happen/VB/happen ?/./? cycle/NN/cycle will/MD/will be/VB/be formed/NNP/formed. why/WRB/why will/MD/will a/DT/a cycle/NN/cycle be/VB/be formed/VBN/formed ?/./? because/IN/because /,/, these/DT/these 2/CD/2 vertices/NNS/vertices are/VBP/are already/RB/already connected/VBN/connected /,/, these/DT/these 2/CD/2 vertices/NNS/vertices are/VBP/are already/RB/already connected/VBN/connected in/IN/in the/DT/the tree/NNP/tree. so/RB/so /,/, there/EX/there is/VBZ/is some/DT/some path/NN/path going/VBG/going from/IN/from this/DT/this vertex/NN/vertex to/TO/to this/DT/this vertex/NNP/vertex. any/DT/any path/NN/path that/IN/that goes/VBZ/goes from/IN/from this/DT/this vertex/NN/vertex to/TO/to this/DT/this vertex/NN/vertex /,/, from/IN/from u/NN/u to/TO/to v/VB/v which/WDT/which connects/NNS/connects u/VBP/u and/CC/and v/NN/v has/VBZ/has to/TO/to use/VB/use 1/CD/1 of/IN/of the/DT/the edges/NNS/edges of/IN/of the/DT/the cut/NNP/cut. think/VBP/think of/IN/of this/DT/this as/IN/as /,/, this/DT/this is/VBZ/is the/DT/the river/NN/river in/IN/in between/IN/between /,/, this/DT/this is/VBZ/is 1/CD/1 end/NN/end /,/, this/DT/this is/VBZ/is the/DT/the other/JJ/other end/NNP/end. if/IN/if you/PRP/you have/VBP/have to/TO/to go/VB/go from/IN/from this/DT/this end/NN/end to/TO/to other/JJ/other end/NN/end /,/, you/PRP/you have/VBP/have to/TO/to use/VB/use 1/CD/1 of/IN/of these/DT/these bridges/NNS/bridges /,/, no/DT/no other/JJ/other alternative/NNP/alternative. so/IN/so /,/, it/PRP/it has/VBZ/has to/TO/to use/VB/use 1/CD/1 of/IN/of these/DT/these edges/NNS/edges which/WDT/which means/VBZ/means that/DT/that the/DT/the cycle/NN/cycle that/IN/that gets/NNS/gets formed/VBN/formed has/VBZ/has to/TO/to use/VB/use 1/CD/1 of/IN/of these/DT/these edges/NNS/edges at/IN/at least/NNP/least. but/CC/but /,/, all/DT/all these/DT/these edges/NNS/edges has/VBZ/has length/NN/length more/JJR/more than/IN/than 2/CD/2. so/RB/so /,/, what/WDT/what will/MD/will i/VB/i do/VBP/do ?/./? same/JJ/same thing/NN/thing /,/, i/PRP/i will/MD/will remove/VB/remove this/DT/this edge/NN/edge from/IN/from the/DT/the cycle/NN/cycle and/CC/and at/IN/at that/DT/that /,/, this/DT/this will/MD/will reduce/VB/reduce the/DT/the length/NN/length of/IN/of the/DT/the tree/NNP/tree. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, we/PRP/we add/VBP/add e/NN/e to/TO/to t/VB/t /,/, let/VB/let me/PRP/me continue/NNP/continue. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 59/CD/59 /CD/) so/RB/so /,/, after/IN/after you/PRP/you add/VBP/add e/JJ/e to/TO/to t/VB/t /,/, so/RB/so let/VB/let me/PRP/me addition/NN/addition of/IN/of e/NN/e to/TO/to t/VB/t forms/NNS/forms a/DT/a cycle/NNP/cycle. say/VBP/say /,/, capital/NN/capital c/NNP/c. c/NN/c contains/VBZ/contains at/IN/at least/JJS/least 1/CD/1 edge/NN/edge of/IN/of the/DT/the cut/NNP/cut. yes/VBZ/yes or/CC/or no/DT/no ?/./? at/IN/at least/JJS/least /,/, 1/CD/1 edge/NN/edge of/IN/of the/DT/the cut/NN/cut /,/, this/DT/this implies/VBZ/implies c/NN/c contains/NNS/contains at/IN/at least/JJS/least 2/CD/2 ?/./? it/PRP/it will/MD/will contain/VB/contain an/DT/an odd/JJ/odd number/NN/number of/IN/of edges/NNP/edges. added/VBD/added c/NN/c /,/, at/IN/at least/JJS/least 1/CD/1 edge/NN/edge /,/, let/VB/let me/PRP/me write/VB/write down/RP/down other/JJ/other than/IN/than e/NN/e /,/, good/NNP/good. /NNP/( hindi/NN/hindi /:/) e/NN/e will/MD/will have/VB/have to/TO/to be/VB/be part/NN/part of/IN/of the/DT/the cycle/NNP/cycle. it/PRP/it is/VBZ/is because/IN/because of/IN/of the/DT/the addition/NN/addition of/IN/of e/NN/e that/IN/that cycle/NN/cycle got/VBD/got formed/NNP/formed. there/RB/there was/VBD/was no/DT/no cycle/NN/cycle earlier/RBR/earlier /,/, e/NN/e has/VBZ/has to/TO/to be/VB/be part/NN/part of/IN/of the/DT/the cycle/NNP/cycle. so/RB/so /,/, c/NN/c contains/VBZ/contains at/IN/at least/JJS/least 1/CD/1 edge/NN/edge of/IN/of the/DT/the cut/NN/cut other/JJ/other than/IN/than edge/NN/edge e/NNP/e. so/RB/so /,/, this/DT/this implies/VBZ/implies c/NN/c contains/NNS/contains on/IN/on edge/NN/edge of/IN/of length/NN/length more/JJR/more than/IN/than the/DT/the length/NN/length of/IN/of e/NNP/e. c/NN/c contains/VBZ/contains an/DT/an edge/NN/edge of/IN/of length/NN/length more/JJR/more than/IN/than the/DT/the length/NN/length of/IN/of e/NNP/e. they/PRP/they can/MD/can be/VB/be greater/JJR/greater than/IN/than ?/./? i/PRP/i just/RB/just have/VBP/have to/TO/to show/VB/show that/IN/that there/EX/there is/VBZ/is some/DT/some edge/NN/edge in/IN/in the/DT/the cycle/NN/cycle which/WDT/which has/VBZ/has length/NN/length more/JJR/more than/IN/than e/NNP/e. no/DT/no /,/, we/PRP/we created/VBD/created the/DT/the cycle/NN/cycle /,/, we/PRP/we brought/VBD/brought in/IN/in e/NN/e /,/, now/RB/now how/WRB/how do/VBP/do we/PRP/we want/VBP/want to/TO/to reduce/VB/reduce the/DT/the cost/NN/cost of/IN/of the/DT/the tree/NN/tree ?/./? by/IN/by removing/NN/removing some/DT/some other/JJ/other edge/NN/edge whose/WP$/whose length/NN/length is/VBZ/is larger/JJR/larger than/IN/than e/NNP/e. by/IN/by removing/NN/removing this/DT/this edge/NN/edge from/IN/from t/NN/t union/NN/union e/NN/e /,/, we/PRP/we get/VBP/get a/DT/a smaller/JJR/smaller tree/NNP/tree. that/IN/that is/VBZ/is a/DT/a contradiction/NN/contradiction /,/, because/IN/because we/PRP/we assumed/VBD/assumed that/IN/that t/NN/t was/VBD/was a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) this/DT/this we/PRP/we have/VBP/have discussed/VBN/discussed before/IN/before that/IN/that /,/, from/IN/from a/DT/a cycle/NN/cycle i/PRP/i can/MD/can remove/VB/remove the/DT/the any/DT/any edge/NN/edge and/CC/and it/PRP/it will/MD/will remain/VB/remain a/DT/a spanning/NN/spanning tree/NNP/tree. we/PRP/we can/MD/can also/RB/also remove/VB/remove that/IN/that /,/, i/PRP/i just/RB/just have/VBP/have to/TO/to show/VB/show you/PRP/you that/IN/that there/EX/there is/VBZ/is some/DT/some edge/NN/edge in/IN/in the/DT/the cycle/NN/cycle which/WDT/which can/MD/can be/VB/be removed/NNP/removed. to/TO/to just/RB/just /,/, i/PRP/i have/VBP/have to/TO/to just/RB/just eye/VB/eye with/IN/with a/DT/a contradiction/NNP/contradiction. i/PRP/i am/VBP/am just/RB/just arriving/VBG/arriving at/IN/at a/DT/a contradiction/NN/contradiction here/RB/here /,/, this/DT/this is/VBZ/is a/DT/a mind/NN/mind game/NNP/game. we/PRP/we are/VBP/are not/RB/not actually/RB/actually removing/VBG/removing any/DT/any thing/NN/thing /,/, i/PRP/i am/VBP/am just/RB/just proving/VBG/proving a/DT/a structural/JJ/structural property/NNP/property. i/PRP/i am/VBP/am saying/VBG/saying /,/, in/IN/in any/DT/any cut/NN/cut the/DT/the minimum/JJ/minimum edge/NN/edge has/VBZ/has to/TO/to be/VB/be a/DT/a part/NN/part of/IN/of minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. i/PRP/i do/VBP/do not/RB/not ever/RB/ever sit/VB/sit down/RB/down and/CC/and remove/VB/remove any/DT/any thing/NNP/thing. there/RB/there is/VBZ/is no/DT/no algorithm/NN/algorithm does/VBZ/does that/NNP/that. this/DT/this is/VBZ/is just/RB/just a/DT/a proof/JJ/proof /,/, proving/VBG/proving this/DT/this statement/NNP/statement. /NNP/( hindi/NN/hindi /:/) how/WRB/how do/VBP/do know/RB/know that/IN/that 1/CD/1 of/IN/of the/DT/the edges/NNS/edges of/IN/of the/DT/the cycle/NN/cycle has/VBZ/has length/NN/length more/JJR/more than/IN/than e/NN/e ?/./? because/IN/because /,/, we/PRP/we can/MD/can only/RB/only argue/VB/argue for/IN/for the/DT/the edges/NNS/edges of/IN/of the/DT/the cut/NN/cut /,/, for/IN/for then/RB/then we/PRP/we know/VBP/know for/IN/for sure/RB/sure that/WDT/that they/PRP/they are/VBP/are all/RB/all more/RBR/more than/IN/than e/NNP/e. that/IN/that is/VBZ/is all/DT/all /,/, nothing/NN/nothing more/NNP/more. now/RB/now /,/, how/WRB/how are/VBP/are we/PRP/we going/VBG/going to/TO/to use/VB/use this/DT/this claim/NN/claim ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 57/CD/57 /CD/) so/RB/so /,/, prim/JJ/prim ?/./? s/NNS/s algorithm/VBP/algorithm exploits/NNS/exploits this/DT/this simple/NN/simple fact/NN/fact /:/: that/IN/that /,/, if/IN/if you/PRP/you take/VBP/take any/DT/any cut/NN/cut /,/, the/DT/the minimum/JJ/minimum edge/NN/edge in/IN/in the/DT/the cut/NN/cut will/MD/will be/VB/be part/NN/part of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, always/NNP/always. prim/NN/prim ?/./? s/NNS/s algorithm/VBP/algorithm is/VBZ/is an/DT/an algorithm/NN/algorithm which/WDT/which essentially/RB/essentially is/VBZ/is built/VBN/built around/IN/around this/DT/this simple/NN/simple fact/NNP/fact. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, let/VB/let us/PRP/us understand/VBP/understand what/WP/what prim/PRP/prim ?/./? s/NNS/s algorithm/VBP/algorithm is/NNP/is. let/NN/let say/VBP/say this/DT/this were/VBD/were my/PRP$/my /,/, this/DT/this were/VBD/were my/PRP$/my /,/, what/WP/what ?/./? graph/VBP/graph and/CC/and let/VB/let us/PRP/us give/VB/give every/DT/every edge/NN/edge length/NNP/length. so/RB/so /,/, i/PRP/i will/MD/will just/RB/just rapidly/RB/rapidly put/VBN/put down/RP/down edge/NN/edge lengths/NNS/lengths /,/, 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 /,/, 10/CD/10 /,/, 11/CD/11 /,/, 12/CD/12 /,/, say/VB/say /,/, i/PRP/i missed/VBD/missed out/RP/out one/CD/one /,/, 13/CD/13. now/RB/now /,/, how/WRB/how does/VBZ/does prim/JJ/prim ?/./? s/NNS/s algorithm/VBP/algorithm work/NN/work ?/./? first/RB/first /,/, we/PRP/we start/VBP/start from/IN/from some/DT/some vertex/NN/vertex and/CC/and we/PRP/we call/VBP/call this/DT/this the/DT/the root/NN/root vertex/NNP/vertex. now/RB/now /,/, the/DT/the first/JJ/first partition/NN/partition that/WDT/that i/PRP/i am/VBP/am considering/VBG/considering /,/, the/DT/the first/JJ/first cut/NN/cut i/PRP/i am/VBP/am considering/VBG/considering is/VBZ/is the/DT/the root/NN/root verses/NNS/verses everyone/NN/everyone else/NNP/else. root/NN/root of/IN/of 1/CD/1 side/NN/side and/CC/and everyone/NN/everyone else/RB/else on/IN/on the/DT/the other/JJ/other side/NNP/side. so/IN/so /,/, which/WDT/which edge/NN/edge has/VBZ/has to/TO/to be/VB/be part/NN/part of/IN/of the/DT/the cut/NN/cut ?/./? the/DT/the edge/NN/edge of/IN/of length/NN/length 1/CD/1 /,/, so/RB/so /,/, i/PRP/i will/MD/will include/VB/include this/DT/this into/IN/into my/PRP$/my cut/NN/cut /,/, into/IN/into my/PRP$/my which/WDT/which edge/NN/edge has/VBZ/has to/TO/to be/VB/be part/NN/part of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, edge/NN/edge of/IN/of length/NN/length of/IN/of length1/NNP/length1 and/CC/and i/PRP/i will/MD/will include/VB/include it/PRP/it into/IN/into my/PRP$/my 3/CD/3. now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the cut/NN/cut i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider ?/./? this/DT/this and/CC/and this/DT/this /,/, so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to 1/CD/1 side/NN/side of/IN/of the/DT/the cut/NN/cut /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be one/CD/one side/NN/side of/IN/of the/DT/the cut/NN/cut and/CC/and the/DT/the other/JJ/other side/NN/side of/IN/of the/DT/the cut/NN/cut is/VBZ/is going/VBG/going to/TO/to be/VB/be all/PDT/all the/DT/the other/JJ/other vertices/NNP/vertices. so/IN/so /,/, which/WDT/which are/VBP/are the/DT/the edges/NNS/edges which/WDT/which are/VBP/are part/NN/part of/IN/of the/DT/the cut/NN/cut ?/./? 9/CD/9 /,/, 8/CD/8 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 11/CD/11 /,/, so/RB/so which/WDT/which is/VBZ/is the/DT/the smallest/JJS/smallest ?/./? 2/CD/2 /,/, so/RB/so we/PRP/we know/VBP/know for/IN/for a/DT/a fact/NN/fact that/WDT/that this/DT/this has/VBZ/has to/TO/to be/VB/be there/RB/there in/IN/in the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, this/DT/this included/VBD/included /CD/( hindi/NN/hindi /:/) what/WP/what is/VBZ/is the/DT/the cut/NN/cut i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider ?/./? these/DT/these 3/CD/3 vertices/NNS/vertices on/IN/on 1/CD/1 side/NN/side and/CC/and all/DT/all the/DT/the other/JJ/other on/IN/on other/JJ/other side/NN/side /,/, so/RB/so side/RB/side let/VB/let me/PRP/me extend/VB/extend it/PRP/it like/IN/like that/DT/that /:/: can/MD/can everyone/VB/everyone see/VB/see this/DT/this ?/./? this/DT/this is/VBZ/is 1/CD/1 side/NN/side of/IN/of the/DT/the cut/NN/cut and/CC/and all/DT/all the/DT/the other/JJ/other vertices/NNS/vertices are/VBP/are on/IN/on the/DT/the other/JJ/other side/NN/side of/IN/of the/DT/the cut/NNP/cut. so/RB/so now/RB/now /,/, which/WDT/which are/VBP/are the/DT/the edges/NNS/edges in/IN/in the/DT/the cut/NN/cut ?/./? 9/CD/9 /,/, 8/CD/8 /,/, 7/CD/7 /,/, 5/CD/5 /,/, 13/CD/13 /,/, 11/CD/11 /:/: 3/CD/3 is/VBZ/is not/RB/not in/IN/in the/DT/the cut/NN/cut /,/, because/IN/because both/DT/both end/NN/end points/NNS/points of/IN/of 3/CD/3 are/VBP/are on/IN/on the/DT/the same/JJ/same side/NNP/side. so/IN/so /,/, the/DT/the smallest/JJS/smallest of/IN/of these/DT/these is/VBZ/is 5/CD/5. so/RB/so /,/, this/DT/this gets/VBZ/gets included/NNP/included. now/RB/now /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to /,/, you/PRP/you can/MD/can now/RB/now understand/VB/understand how/WRB/how i/PRP/i am/VBP/am going/VBG/going to/TO/to extend/VB/extend it/NNP/it. this/DT/this becomes/VBZ/becomes my/PRP$/my /,/, 1/CD/1 side/NN/side of/IN/of the/DT/the cut/NN/cut and/CC/and the/DT/the remaining/VBG/remaining becomes/VBZ/becomes the/DT/the other/JJ/other side/NN/side of/IN/of the/DT/the cut/NN/cut /,/, 4/CD/4 is/VBZ/is in/IN/in edge/NN/edge /,/, 3/CD/3 is/VBZ/is some/DT/some kind/NN/kind of/IN/of a/DT/a gone/NN/gone /,/, so/RB/so 9/CD/9 /,/, 8/CD/8 /,/, 6/CD/6 /,/, 4/CD/4 /:/- no/DT/no /,/, not/RB/not 10/CD/10 ?/./? 13/CD/13 and/CC/and 11/CD/11 /CD/( hindi/NN/hindi /:/) 4/CD/4 /CD/( hindi/NN/hindi /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 20/CD/20 /CD/) which/WDT/which are/VBP/are the/DT/the edges/NNS/edges in/IN/in the/DT/the cut/NN/cut ?/./? 11/CD/11 /,/, 13/CD/13 /,/, 10/CD/10 /,/, 6/CD/6 /,/, 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 ;/:/; so/RB/so /,/, six/CD/six is/VBZ/is the/DT/the smallest/JJS/smallest /,/, 8/CD/8 gets/NNS/gets included/VBD/included and/CC/and now/RB/now /,/, my/PRP$/my set/NN/set becomes/VBZ/becomes this/NNP/this. it/PRP/it is/VBZ/is time/NN/time /,/, we/PRP/we finish/VBP/finish /,/, because/IN/because it/PRP/it is/VBZ/is getting/VBG/getting very/RB/very messy/NNP/messy. so/RB/so /,/, which/WDT/which are/VBP/are the/DT/the edges/NNS/edges in/IN/in the/DT/the cut/NN/cut now/RB/now ?/./? is/VBZ/is 8/CD/8 in/IN/in the/DT/the cut/NN/cut ?/./? no/DT/no /,/, it/PRP/it looks/VBZ/looks like/IN/like it/PRP/it is/VBZ/is in/IN/in the/DT/the cut/NN/cut /,/, but/CC/but it/PRP/it is/VBZ/is not/RB/not because/IN/because /,/, both/DT/both its/PRP$/its end/NN/end points/NNS/points are/VBP/are in/IN/in the/DT/the same/JJ/same side/NNP/side. so/IN/so /,/, it/PRP/it is/VBZ/is 9/CD/9 /,/, 10/CD/10 /,/, 11/CD/11 /,/, 13/CD/13 also/RB/also 12/CD/12 /,/, of/IN/of course/NNP/course. so/RB/so /,/, 9/CD/9 /,/, 10/CD/10 /,/, 11/CD/11 /,/, 12/CD/12 /,/, 13/CD/13. so/RB/so /,/, 9/CD/9 ;/:/; 12/CD/12 is/VBZ/is not/RB/not in/IN/in the/DT/the cut/NN/cut any/DT/any more/NNP/more. so/RB/so /,/, it/PRP/it is/VBZ/is only/RB/only 10/CD/10 /,/, 11/CD/11 /,/, and/CC/and 13/CD/13 are/VBP/are the/DT/the options/NNS/options /,/, 10/CD/10 is/VBZ/is the/DT/the smallest/JJS/smallest and/CC/and we/PRP/we that/IN/that we/PRP/we are/VBP/are done/NNP/done. because/IN/because /,/, all/DT/all the/DT/the vertices/NNS/vertices are/VBP/are now/RB/now included/NNP/included. everyone/NN/everyone understands/VBZ/understands the/DT/the procedure/NN/procedure /,/, it/PRP/it is/VBZ/is very/RB/very simple/NNP/simple. we/PRP/we have/VBP/have done/VBN/done the/DT/the proof/NN/proof effectively/NNP/effectively. not/RB/not effectively/RB/effectively /,/, we/PRP/we have/VBP/have done/VBN/done the/DT/the proof/NNP/proof. because/IN/because /,/, what/WP/what did/VBD/did we/PRP/we say/VBP/say ?/./? we/PRP/we proved/VBD/proved this/DT/this claim/NN/claim that/IN/that the/DT/the minimum/JJ/minimum edge/NN/edge across/IN/across the/DT/the cut/NN/cut has/VBZ/has to/TO/to be/VB/be part/NN/part of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree and/CC/and that/IN/that is/VBZ/is the/DT/the edge/NN/edge we/PRP/we are/VBP/are picking/VBG/picking at/IN/at every/DT/every point/NNP/point. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 33/CD/33 /CD/) you/PRP/you will/MD/will get/VB/get the/DT/the same/JJ/same tree/NN/tree /,/, since/IN/since this/DT/this is/VBZ/is unique/JJ/unique /,/, i/PRP/i assumed/VBD/assumed edge/NN/edge lengths/NNS/lengths are/VBP/are distinct/JJ/distinct /,/, you/PRP/you will/MD/will get/VB/get the/DT/the same/JJ/same tree/NN/tree when/WRB/when if/IN/if you/PRP/you were/VBD/were to/TO/to run/VB/run the/DT/the kruskal/JJ/kruskal ?/./? s/NNS/s algorithm/NNP/algorithm. everyone/NN/everyone follows/VBZ/follows this/DT/this ?/./? so/RB/so /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to write/VB/write down/RP/down the/DT/the pseudo/NN/pseudo code/NN/code for/IN/for this/DT/this /,/, but/CC/but you/PRP/you understand/VBP/understand how/WRB/how the/DT/the algorithm/NN/algorithm works/NNP/works. very/RB/very simple/JJ/simple /,/, so/RB/so the/DT/the key/JJ/key idea/NN/idea is/VBZ/is that/IN/that we/PRP/we have/VBP/have /,/, so/RB/so let/VB/let us/PRP/us try/NN/try and/CC/and see/VB/see how/WRB/how you/PRP/you would/MD/would implement/VB/implement this/DT/this algorithm/NN/algorithm ?/./? so/RB/so /,/, what/WDT/what is/VBZ/is it/PRP/it that/IN/that you/PRP/you have/VBP/have to/TO/to maintain/VB/maintain ?/./? of/IN/of course/NN/course /,/, you/PRP/you have/VBP/have a/DT/a data/NN/data structure/NN/structure for/IN/for the/DT/the graph/NNP/graph. now/RB/now /,/, what/WDT/what it/PRP/it /,/, what/WDT/what is/VBZ/is the/DT/the operation/NN/operation you/PRP/you have/VBP/have to/TO/to do/VB/do at/IN/at each/DT/each step/NN/step ?/./? add/NN/add a/DT/a vertex/NN/vertex to/TO/to a/DT/a set/NN/set ?/./? so/RB/so at/IN/at some/DT/some /,/, at/IN/at any/DT/any point/NN/point you/PRP/you have/VBP/have the/DT/the following/VBG/following ;/:/; this/DT/this is/VBZ/is 1/CD/1 side/NN/side of/IN/of the/DT/the cut/NN/cut /,/, your/PRP$/your root/NN/root is/VBZ/is here/NNP/here. let/NN/let me/PRP/me call/VBP/call this/DT/this set/NN/set as/IN/as s/NNP/s. so/RB/so /,/, the/DT/the set/NN/set is/VBZ/is /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the set/NN/set on/IN/on 1/CD/1 side/NN/side of/IN/of the/DT/the cut/NN/cut /,/, as/IN/as in/IN/in the/DT/the vertices/NNS/vertices we/PRP/we have/VBP/have already/RB/already reached/VBN/reached /,/, so/RB/so to/TO/to say/VB/say /,/, from/IN/from the/DT/the root/NNP/root. so/RB/so /,/, the/DT/the root/NN/root is/VBZ/is always/RB/always the/DT/the part/NN/part of/IN/of the/DT/the set/NN/set s/VBZ/s and/CC/and the/DT/the remaining/VBG/remaining vertices/NNS/vertices /,/, s/NNS/s complement/VBP/complement of/IN/of v/NN/v minus/NN/minus s/NNP/s. i/PRP/i have/VBP/have to/TO/to maintain/VB/maintain this/DT/this collection/NN/collection of/IN/of vertices/NNS/vertices which/WDT/which are/VBP/are on/IN/on 1/CD/1 side/NNP/side. this/DT/this can/MD/can be/VB/be done/VBN/done very/RB/very easily/RB/easily by/IN/by keeping/VBG/keeping 1/CD/1 bit/NN/bit with/IN/with every/DT/every vertex/NNP/vertex. if/IN/if the/DT/the bit/NN/bit is/VBZ/is 1/CD/1 then/RB/then that/IN/that means/NNS/means /,/, let/VB/let say/VBP/say it/PRP/it is/VBZ/is on/IN/on the/DT/the s/NNS/s side/VBP/side /,/, if/IN/if it/PRP/it is/VBZ/is 0/-NONE-/0 /,/, it/PRP/it is/VBZ/is on/IN/on the/DT/the s/NNS/s complement/VBP/complement side/NNP/side. that/IN/that is/VBZ/is very/RB/very simple/NNP/simple. now/RB/now /,/, what/WDT/what is/VBZ/is it/PRP/it that/IN/that i/PRP/i have/VBP/have to/TO/to do/VB/do at/IN/at each/DT/each step/NN/step ?/./? i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out /,/, i/PRP/i have/VBP/have to/TO/to look/VB/look at/IN/at all/DT/all of/IN/of these/DT/these edges/NNS/edges and/CC/and to/TO/to find/VB/find the/DT/the minimum/NNP/minimum. how/WRB/how and/CC/and ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do this/DT/this ?/./? /:/( hindi/NN/hindi /:/) you/PRP/you look/VBP/look at/IN/at all/DT/all of/IN/of this/DT/this vertices/NNS/vertices /,/, you/PRP/you look/VBP/look at/IN/at their/PRP$/their adjacent/NN/adjacent edges/NNS/edges /,/, for/IN/for each/DT/each edge/NN/edge you/PRP/you see/VBP/see whether/IN/whether the/DT/the other/JJ/other end/NN/end point/NN/point is/VBZ/is in/IN/in s/NNS/s or/CC/or not/NNP/not. if/IN/if it/PRP/it is/VBZ/is not/RB/not in/IN/in s/NNS/s then/RB/then you/PRP/you look/VBP/look at/IN/at its/PRP$/its length/NN/length and/CC/and you/PRP/you look/VBP/look at/IN/at all/DT/all these/DT/these edges/NNS/edges and/CC/and find/VBP/find the/DT/the minimum/NNP/minimum. so/RB/so /,/, how/WRB/how much/JJ/much does/VBZ/does the/DT/the time/NN/time take/NN/take ?/./? how/WRB/how much/RB/much time/NN/time does/VBZ/does it/PRP/it take/VB/take ?/./? order/NN/order /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to each/DT/each vertex/NN/vertex /,/, looking/VBG/looking at/IN/at all/DT/all its/PRP$/its adjacent/NN/adjacent edges/NNS/edges ;/:/; looking/VBG/looking at/IN/at all/DT/all its/PRP$/its adjacent/NN/adjacent edges/NNS/edges /,/, going/VBG/going to/TO/to each/DT/each vertex/NN/vertex in/IN/in s/NNS/s /,/, looking/VBG/looking at/IN/at all/DT/all its/PRP$/its adjacent/NN/adjacent edges/NNP/edges. what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum time/NN/time it/PRP/it could/MD/could take/VB/take ?/./? order/NN/order m/NN/m at/IN/at each/DT/each step/NN/step and/CC/and you/PRP/you have/VBP/have n/VBN/n such/JJ/such steps/NNP/steps. so/IN/so /,/, order/NN/order m/NN/m in/IN/in time/NN/time /:/( hindi/NN/hindi /:/) i/PRP/i am/VBP/am not/RB/not even/RB/even writing/VBG/writing it/PRP/it down/IN/down because/IN/because it/PRP/it is/VBZ/is a/DT/a very/RB/very ?/./? /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 56/CD/56 /CD/) so/RB/so let/JJ/let us/PRP/us do/VBP/do /,/, look/VB/look at/IN/at something/NN/something clever/NNP/clever. what/WP/what could/MD/could be/VB/be a/DT/a clever/NN/clever way/NN/way ?/./? maintain/NN/maintain a/DT/a minimum/JJ/minimum ?/./? let/NN/let see/VB/see /,/, this/DT/this is/VBZ/is some/DT/some idea/NN/idea /:/: so/RB/so /,/, you/PRP/you are/VBP/are saying/VBG/saying i/PRP/i have/VBP/have this/DT/this set/NN/set s/VBZ/s /,/, i/PRP/i have/VBP/have s/NNS/s complement/NN/complement and/CC/and there/EX/there is/VBZ/is this/DT/this vertex/NN/vertex v/NN/v /,/, let/VB/let us/PRP/us call/MD/call it/PRP/it v/CC/v. i/PRP/i have/VBP/have a/DT/a single/JJ/single this/DT/this vertex/NN/vertex out/IN/out because/IN/because this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex which/WDT/which is/VBZ/is now/RB/now going/VBG/going to/TO/to go/VB/go from/IN/from right/RB/right to/TO/to left/NNP/left. /NNP/( hndi/NN/hndi /:/) you/PRP/you have/VBP/have figure/NN/figure out/RP/out minimum/JJ/minimum of/IN/of all/DT/all of/IN/of these/DT/these edges/NNS/edges /,/, you/PRP/you know/VBP/know the/DT/the minimum/JJ/minimum of/IN/of these/DT/these edges/NNS/edges in/IN/in the/DT/the cut/NNP/cut. now/RB/now /,/, what/WDT/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen ?/./? v/NN/v /,/, let/VB/let me/PRP/me draw/VB/draw it/PRP/it this/DT/this way/NN/way now/NNP/now. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 53/CD/53 /CD/) some/DT/some edges/NNS/edges are/VBP/are going/VBG/going to/TO/to go/VB/go from/IN/from v/NN/v to/TO/to s/NNS/s /,/, some/DT/some edges/NNS/edges go/VBP/go from/IN/from v/NN/v to/TO/to s/NNS/s complement/NN/complement /,/, there/EX/there are/VBP/are of/IN/of course/NN/course /,/, some/DT/some edges/NNS/edges which/WDT/which go/VB/go from/IN/from s/NNS/s to/TO/to s/NNS/s complement/NNP/complement. now/RB/now /,/, right/RB/right now/RB/now /,/, i/PRP/i know/VBP/know the/DT/the minimum/JJ/minimum of/IN/of these/DT/these edges/NNS/edges because/IN/because v/NN/v is/VBZ/is the/DT/the same/NNP/same. this/DT/this picture/NN/picture is/VBZ/is the/DT/the same/JJ/same as/IN/as knowing/NN/knowing the/DT/the minimum/JJ/minimum of/IN/of the/DT/the edges/NNP/edges. when/WRB/when i/PRP/i move/VBP/move v/NN/v from/IN/from here/RB/here to/TO/to here/RB/here /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out the/DT/the minimum/JJ/minimum of/IN/of these/DT/these edges/NNP/edges. what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? compare/NN/compare the/DT/the ?/./? so/RB/so i/PRP/i just/RB/just /,/, suppose/JJ/suppose i/PRP/i have/VBP/have kept/VBN/kept track/NN/track of/IN/of the/DT/the minimum/JJ/minimum of/IN/of these/DT/these /,/, noting/VBG/noting else/NNP/else. let/NN/let say/VBP/say that/IN/that the/DT/the minimum/JJ/minimum was/VBD/was 1/CD/1 /,/, the/DT/the minimum/JJ/minimum has/VBZ/has to/TO/to be/VB/be an/DT/an edge/NN/edge incident/NN/incident to/TO/to this/DT/this one/CD/one /:/: that/DT/that you/PRP/you understand/VBP/understand ?/./? so/RB/so /,/, that/IN/that is/VBZ/is why/WRB/why we/PRP/we pick/VBP/pick this/DT/this one/NNP/one. this/DT/this is/VBZ/is 1/CD/1 /,/, this/DT/this is/VBZ/is 2/CD/2 /,/, this/DT/this is/VBZ/is 5/CD/5 /,/, this/DT/this is/VBZ/is 6/CD/6 and/CC/and this/DT/this is/VBZ/is 7/CD/7 and/CC/and then/RB/then these/DT/these are/VBP/are 8/CD/8 /,/, 9/CD/9 /,/, 3/CD/3 let/NN/let say/NNP/say. now/RB/now /,/, the/DT/the new/JJ/new minimum/JJ/minimum /,/, earlier/RBR/earlier the/DT/the minimum/JJ/minimum was/VBD/was 1/CD/1 and/CC/and now/RB/now the/DT/the new/JJ/new minimum/JJ/minimum is/VBZ/is 2/CD/2. if/IN/if i/PRP/i just/RB/just know/VBP/know the/DT/the minimum/JJ/minimum /,/, it/PRP/it is/VBZ/is not/RB/not going/VBG/going to/TO/to useful/NNP/useful. so/RB/so /,/, you/PRP/you want/VBP/want me/PRP/me to/TO/to keep/VB/keep the/DT/the track/NN/track of/IN/of the/DT/the second/JJ/second minimum/JJ/minimum also/RB/also ?/./? which/WDT/which does/VBZ/does not/RB/not go/VB/go to/TO/to ?/./? but/CC/but /,/, what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about v/NN/v as/IN/as in/IN/in /,/, v/NN/v something/NN/something that/WDT/that i/PRP/i find/VBP/find out/NNP/out. so/RB/so /,/, we/PRP/we know/VBP/know the/DT/the minimum/JJ/minimum that/IN/that is/VBZ/is coming/VBG/coming to/TO/to this/DT/this vertex/NNP/vertex. so/RB/so suppose/RB/suppose /,/, we/PRP/we keep/VBP/keep the/DT/the track/NN/track of/IN/of the/DT/the minimum/JJ/minimum to/TO/to each/DT/each of/IN/of the/DT/the vertices/NNS/vertices in/IN/in s/NNS/s complement/NNP/complement. insert/NN/insert v/NN/v ?/./? so/RB/so /,/, what/WDT/what he/PRP/he is/VBZ/is saying/VBG/saying is/VBZ/is /,/, but/CC/but how/WRB/how to/TO/to /,/, what/WDT/what data/NNS/data structure/VBP/structure should/MD/should i/PRP/i use/VB/use to/TO/to keep/VB/keep these/DT/these edges/NNS/edges ?/./? a/DT/a heap/NN/heap ?/./? min/NN/min heap/NN/heap ?/./? so/RB/so /,/, that/IN/that could/MD/could be/VB/be 1/CD/1 possibility/NNP/possibility. i/PRP/i have/VBP/have a/DT/a heap/NN/heap /,/, does/VBZ/does everyone/NN/everyone know/VB/know what/WP/what a/DT/a heap/NN/heap is/VBZ/is ?/./? so/RB/so /,/, heap/VB/heap is/VBZ/is the/DT/the data/NNS/data structure/VBP/structure which/WDT/which will/MD/will and/CC/and which/VB/which i/PRP/i can/MD/can put/VB/put some/DT/some elements/NNS/elements /,/, each/DT/each one/CD/one of/IN/of them/PRP/them has/VBZ/has certain/JJ/certain priority/NN/priority or/CC/or certain/JJ/certain key/JJ/key and/CC/and it/PRP/it will/MD/will give/VB/give me/PRP/me /,/, i/PRP/i can/MD/can use/VB/use an/DT/an operation/NN/operation called/VBN/called delete/JJ/delete min/NN/min which/WDT/which will/MD/will remove/VB/remove the/DT/the minimum/JJ/minimum element/NN/element /,/, i/PRP/i can/MD/can find/VB/find out/RP/out what/WP/what the/DT/the minimum/JJ/minimum element/NN/element is/VBZ/is in/IN/in the/DT/the heap/NN/heap in/IN/in constant/NN/constant time/NN/time /,/, i/PRP/i can/MD/can insert/VB/insert element/NN/element into/IN/into the/DT/the heap/NN/heap /,/, i/PRP/i can/MD/can also/RB/also remove/VB/remove element/NN/element from/IN/from the/DT/the heap/NNP/heap. i/PRP/i can/MD/can do/VB/do all/PDT/all of/IN/of these/DT/these operations/NNS/operations and/CC/and except/IN/except for/IN/for find/NN/find min/NN/min /,/, all/DT/all operation/NN/operation take/NN/take in/IN/in log/NN/log n/NN/n time/NNP/time. find/NN/find min/NN/min takes/VBZ/takes constant/NN/constant time/NNP/time. everyone/NN/everyone remembers/NNS/remembers at/IN/at least/JJS/least this/DT/this much/NNP/much. so/RB/so suppose/RB/suppose /,/, i/PRP/i were/VBD/were to/TO/to keep/VB/keep a/DT/a heap/NN/heap here/RB/here /,/, a/DT/a heap/NN/heap which/WDT/which contains/VBZ/contains these/DT/these edges/NNS/edges /,/, 2/CD/2 /,/, 1/CD/1 /,/, 6/CD/6 /,/, 5/CD/5 /,/, 7/CD/7. then/RB/then /,/, using/VBG/using find/NN/find min/NN/min i/PRP/i can/MD/can find/VB/find out/RP/out what/WP/what is/VBZ/is the/DT/the minimum/JJ/minimum edge/NNP/edge. that/IN/that will/MD/will /,/, once/RB/once i/PRP/i know/VBP/know the/DT/the edge/NN/edge /,/, i/PRP/i know/VBP/know the/DT/the other/JJ/other end/NN/end point/NN/point of/IN/of vertex/NN/vertex /,/, i/PRP/i know/VBP/know both/DT/both the/DT/the end/NN/end points/NNS/points of/IN/of the/DT/the edge/NN/edge /,/, i/PRP/i know/VBP/know which/WDT/which vertex/NN/vertex i/PRP/i have/VBP/have to/TO/to bring/VB/bring in/NNP/in. when/WRB/when i/PRP/i have/VBP/have to/TO/to bring/VB/bring in/IN/in this/DT/this vertex/NN/vertex /,/, i/PRP/i look/VBP/look at/IN/at all/DT/all the/DT/the edges/NNS/edges incident/NN/incident at/IN/at this/DT/this vertex/NNP/vertex. the/DT/the edges/NNS/edges which/WDT/which are/VBP/are going/VBG/going in/IN/in s/NNS/s /,/, i/PRP/i have/VBP/have to/TO/to remove/VB/remove them/PRP/them from/IN/from this/DT/this heap/NN/heap and/CC/and the/DT/the edges/NNS/edges which/WDT/which are/VBP/are going/VBG/going from/IN/from this/DT/this vertex/NN/vertex to/TO/to vertices/NNS/vertices not/RB/not in/IN/in s/NNS/s /,/, i/PRP/i have/VBP/have to/TO/to add/VB/add them/PRP/them into/IN/into the/DT/the heap/NNP/heap. but/CC/but /,/, let/VB/let us/PRP/us keep/VB/keep it/PRP/it clean/NNP/clean. like/IN/like /,/, when/WRB/when we/PRP/we say/VBP/say that/IN/that our/PRP$/our heap/NN/heap is/VBZ/is going/VBG/going to/TO/to contain/VB/contain the/DT/the edges/NNS/edges of/IN/of the/DT/the cut/NN/cut /,/, let/VB/let it/PRP/it contain/VB/contain only/RB/only the/DT/the edges/NNS/edges of/IN/of the/DT/the cut/NN/cut /,/, because/IN/because you/PRP/you are/VBP/are going/VBG/going to/TO/to spend/VB/spend the/DT/the same/JJ/same amount/NN/amount of/IN/of time/NN/time in/IN/in any/DT/any case/NNP/case. we/PRP/we do/VBP/do not/RB/not search/VB/search in/IN/in a/DT/a heap/NN/heap /,/, please/NN/please remember/NN/remember /,/, heap/NN/heap is/VBZ/is a/DT/a very/RB/very bad/JJ/bad data/NNS/data structure/NN/structure for/IN/for searching/NNP/searching. so/RB/so /,/, how/WRB/how do/VBP/do you/PRP/you find/VB/find out/RP/out where/WRB/where the/DT/the edge/NN/edge is/VBZ/is in/IN/in the/DT/the heap/NN/heap ?/./? once/RB/once again/RB/again the/DT/the same/JJ/same thing/NN/thing /,/, when/WRB/when you/PRP/you put/VBD/put some/DT/some information/NN/information related/VBD/related to/TO/to the/DT/the edge/NN/edge into/IN/into the/DT/the heap/NN/heap /,/, you/PRP/you do/VBP/do not/RB/not just/RB/just put/VBN/put it/PRP/it and/CC/and forget/VB/forget it/PRP/it /,/, you/PRP/you keep/VB/keep a/DT/a track/NN/track of/IN/of where/WRB/where the/DT/the information/NN/information is/VBZ/is /,/, where/WRB/where the/DT/the particular/JJ/particular node/NN/node is/NNP/is. we/PRP/we do/VBP/do not/RB/not need/VB/need to/TO/to delete/VB/delete /,/, but/CC/but there/EX/there is/VBZ/is no/DT/no harm/NN/harm in/IN/in deleting/NN/deleting also/NNP/also. no/DT/no /,/, you/PRP/you can/MD/can also/RB/also delete/VB/delete from/IN/from a/DT/a heap/NNP/heap. why/WRB/why can/MD/can not/RB/not you/PRP/you delete/VBP/delete from/IN/from a/DT/a heap/NN/heap ?/./? so/RB/so /,/, there/EX/there is/VBZ/is some/DT/some confusion/NN/confusion here/NNP/here. let/NN/let me/PRP/me back/RB/back up/IN/up a/DT/a little/RB/little bit/NNP/bit. we/PRP/we need/VBP/need to/TO/to /,/, i/PRP/i think/VBP/think i/PRP/i need/VBP/need to/TO/to show/VB/show this/DT/this delete/NN/delete operation/NN/operation to/TO/to you/PRP/you again/NNP/again. when/WRB/when we/PRP/we do/VBP/do or/CC/or the/DT/the other/JJ/other class/NN/class we/PRP/we will/MD/will do/VB/do delete/JJ/delete operation/NN/operation once/RB/once again/RB/again but/CC/but take/VB/take it/PRP/it from/IN/from me/PRP/me /,/, you/PRP/you can/MD/can also/RB/also delete/VB/delete from/IN/from the/DT/the heap/NN/heap in/IN/in the/DT/the same/JJ/same log/NN/log n/NN/n time/NNP/time. of/IN/of course/NN/course /,/, to/TO/to delete/VB/delete you/PRP/you need/VBP/need to/TO/to know/VB/know where/WRB/where the/DT/the element/NN/element is/VBZ/is /,/, you/PRP/you are/VBP/are not/RB/not searching/VBG/searching for/IN/for the/DT/the element/NN/element /,/, you/PRP/you know/VBP/know where/WRB/where the/DT/the element/NN/element is/VBZ/is and/CC/and then/RB/then you/PRP/you can/MD/can delete/VB/delete from/IN/from the/DT/the heap/NN/heap in/IN/in log/NN/log n/NN/n time/NNP/time. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. when/WRB/when this/DT/this element/NN/element comes/VBZ/comes in/IN/in /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to insert/VB/insert 3/CD/3 /,/, 9/CD/9 /,/, and/CC/and 8/CD/8 and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to delete/VB/delete 1/CD/1 /,/, 6/CD/6 and/CC/and 5/CD/5 and/CC/and i/PRP/i know/VBP/know exactly/RB/exactly where/WRB/where 1/CD/1 /,/, 6/CD/6 and/CC/and 5/CD/5 are/VBP/are and/CC/and this/DT/this is/VBZ/is how/WRB/how i/PRP/i will/MD/will do/VB/do the/DT/the implementation/NNP/implementation. so/RB/so at/IN/at any/DT/any point/NN/point /,/, what/WP/what does/VBZ/does the/DT/the heap/NN/heap contain/NN/contain ?/./? exactly/RB/exactly the/DT/the edges/NNS/edges of/IN/of the/DT/the cut/NN/cut /:/: exactly/RB/exactly those/DT/those edges/NNS/edges and/CC/and noting/VBG/noting else/NNP/else. it/PRP/it is/VBZ/is best/JJS/best to/TO/to keep/VB/keep it/PRP/it clean/JJ/clean so/RB/so that/IN/that you/PRP/you know/VBP/know what/WP/what is/VBZ/is happening/NNP/happening. now/RB/now /,/, how/WRB/how many/JJ/many operation/NN/operation are/VBP/are required/VBN/required on/IN/on the/DT/the heap/NN/heap ?/./? what/WP/what kind/NN/kind how/WRB/how many/JJ/many ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 29/CD/29 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the heap/NN/heap operations/NNP/operations. let/NN/let me/PRP/me draw/VBD/draw the/DT/the picture/NN/picture again/RB/again for/IN/for you/NNP/you. this/DT/this is/VBZ/is vertex/NN/vertex v/NN/v /,/, it/PRP/it is/VBZ/is coming/VBG/coming in/IN/in on/IN/on this/DT/this side/NNP/side. so/RB/so /,/, these/DT/these edges/NNS/edges have/VBP/have to/TO/to be/VB/be removed/NNP/removed. these/DT/these edges/NNS/edges have/VBP/have to/TO/to be/VB/be added/NNP/added. each/DT/each remove/NN/remove and/CC/and add/VBD/add takes/NNS/takes log/NN/log n/NN/n time/NNP/time. how/WRB/how much/JJ/much time/NN/time am/NN/am i/PRP/i spending/NN/spending ?/./? degree/NN/degree times/NNS/times log/VBP/log n/NN/n for/IN/for ever/RB/ever vertex/NN/vertex that/IN/that i/PRP/i process/NNP/process. so/RB/so /,/, degree/JJ/degree of/IN/of v/NN/v times/NNS/times log/VBP/log n/NN/n and/CC/and then/RB/then this/DT/this has/VBZ/has to/TO/to be/VB/be summed/VBN/summed over/RP/over all/DT/all the/DT/the vertices/NNS/vertices /,/, because/IN/because i/PRP/i will/MD/will processes/NNS/processes each/DT/each vertex/NN/vertex exactly/RB/exactly once/NNP/once. log/NN/log n/NN/n /,/, number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the heap/NN/heap /,/, which/WDT/which could/MD/could be/VB/be m/NNP/m. so/RB/so /,/, i/PRP/i should/MD/should write/VB/write log/NN/log m/NNP/m. number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the heap/NN/heap which/WDT/which is/VBZ/is the/DT/the number/NN/number of/IN/of edges/NNS/edges in/IN/in the/DT/the cut/NN/cut /,/, could/MD/could be/VB/be as/RB/as much/JJ/much as/IN/as the/DT/the number/NN/number of/IN/of edges/NNP/edges. all/DT/all that/DT/that it/PRP/it will/MD/will ever/RB/ever may/MD/may be/VB/be that/IN/that but/CC/but it/PRP/it could/MD/could be/VB/be as/RB/as large/JJ/large as/IN/as then/RB/then in/IN/in the/DT/the worst/JJS/worst case/NNP/case. we/PRP/we are/VBP/are decreasing/VBG/decreasing /,/, but/CC/but you/PRP/you know/VBP/know those/DT/those are/VBP/are so/RB/so small/JJ/small /,/, that/IN/that it/PRP/it will/MD/will not/RB/not going/VBG/going ?/./? even/RB/even if/IN/if you/PRP/you do/VBP/do a/DT/a careful/JJ/careful analysis/NN/analysis /,/, you/PRP/you will/MD/will still/RB/still get/VB/get the/DT/the some/DT/some order/NNP/order. this/DT/this is/VBZ/is what/WP/what the/DT/the total/JJ/total running/NN/running time/NN/time will/MD/will be/NNP/be. these/DT/these are/VBP/are not/RB/not the/DT/the only/JJ/only operations/NNS/operations ;/:/; i/PRP/i also/RB/also what/WP/what have/VBP/have to/TO/to do/VB/do 1/CD/1 find/VB/find min/NNP/min. how/WRB/how many/JJ/many times/NNS/times do/VBP/do i/PRP/i have/VB/have to/TO/to do/VB/do find/JJ/find min/NN/min ?/./? number/NN/number of/IN/of vertices/NNS/vertices time/NN/time ;/:/; n/NN/n times/NNP/times. so/RB/so /,/, /:/( hindi/NN/hindi /:/) n/NN/n into/IN/into order/NN/order 1/CD/1 /,/, constant/JJ/constant time/NN/time /,/, that/IN/that is/VBZ/is a/DT/a small/JJ/small order/NN/order time/NN/time in/IN/in this/DT/this one/NNP/one. what/WP/what else/RB/else we/PRP/we have/VBP/have to/TO/to do/VB/do ?/./? what/WP/what are/VBP/are the/DT/the other/JJ/other operations/NNS/operations you/PRP/you might/MD/might have/VB/have to/TO/to do/VB/do in/IN/in the/DT/the heap/NN/heap ?/./? just/RB/just insert/NN/insert and/CC/and delete/JJ/delete /:/: and/CC/and this/DT/this operation/NN/operation /,/, find/VBP/find mine/NNP/mine. so/RB/so /,/, everyone/NN/everyone understands/NNS/understands what/WP/what the/DT/the procedure/NN/procedure could/MD/could be/VB/be now/RB/now ?/./? you/PRP/you start/VB/start with/IN/with your/PRP$/your initial/JJ/initial vertex/NN/vertex /,/, root/NN/root and/CC/and all/DT/all the/DT/the edges/NNS/edges incident/NN/incident to/TO/to the/DT/the root/NN/root will/MD/will be/VB/be your/PRP$/your initial/JJ/initial heap/NN/heap /,/, will/MD/will be/VB/be the/DT/the elements/NNS/elements of/IN/of initial/JJ/initial heap/NNP/heap. then/RB/then /,/, you/PRP/you will/MD/will do/VB/do a/DT/a find/NN/find min/NN/min that/WDT/that will/MD/will tell/VB/tell you/PRP/you what/WP/what vertex/NN/vertex to/TO/to include/VB/include on/IN/on that/DT/that side/NNP/side. then/RB/then you/PRP/you are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at all/DT/all the/DT/the vertices/NNS/vertices adjacent/VBP/adjacent to/TO/to this/DT/this vertex/NN/vertex /,/, all/DT/all the/DT/the edges/NNS/edges that/WDT/that are/VBP/are adjacent/VBP/adjacent to/TO/to this/DT/this vertex/NN/vertex /,/, beside/NN/beside /,/, if/IN/if you/PRP/you are/VBP/are to/TO/to remove/VB/remove an/DT/an edge/NN/edge or/CC/or to/TO/to add/VB/add an/DT/an edge/NNP/edge. /NNP/( hindi/NN/hindi /:/) let/NN/let say/VBP/say /,/, i/PRP/i have/VBP/have an/DT/an array/NN/array s/NNP/s. s/VBZ/s in/IN/in an/DT/an array/NN/array /,/, s/VBZ/s of/IN/of v/NN/v equals/NNS/equals 1/CD/1 if/IN/if v/NN/v belongs/NNS/belongs to/TO/to s/NNS/s /,/, 0/-NONE-/0 otherwise/NNP/otherwise. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 42/CD/42 /CD/) what/WP/what is/VBZ/is this/DT/this s/NN/s ?/./? this/DT/this s/VBZ/s is/VBZ/is the/DT/the s/NNS/s side/VBP/side of/IN/of the/DT/the cut/NNP/cut. not/RB/not visited/VBN/visited /,/, but/CC/but reached/VBD/reached ;/:/; all/DT/all those/DT/those vertices/NNS/vertices that/IN/that have/VBP/have been/VBN/been reached/NNP/reached. so/RB/so /,/, this/DT/this is/VBZ/is 1/CD/1 data/NNS/data structure/NN/structure we/PRP/we are/VBP/are going/VBG/going to/TO/to have/NNP/have. then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have a/DT/a heap/NN/heap and/CC/and let/VB/let see/NN/see what/WP/what /,/, so/RB/so initially/RB/initially /,/, i/PRP/i pick/VBP/pick a/DT/a vertex/NN/vertex as/IN/as the/DT/the root/NN/root and/CC/and s/NNS/s of/IN/of the/DT/the that/WDT/that vertex/NN/vertex root/VBD/root equals/NNS/equals 1/CD/1 and/CC/and for/IN/for all/DT/all v/NN/v /,/, s/VBZ/s of/IN/of v/NN/v equals/NNS/equals 0/CD/0. initially/RB/initially /,/, everything/NN/everything this/DT/this is/VBZ/is my/PRP$/my initialization/NNP/initialization. only/RB/only the/DT/the root/NN/root is/VBZ/is on/IN/on /,/, so/IN/so /,/, initially/RB/initially everything/NN/everything is/VBZ/is 0/-NONE-/0 and/CC/and s/NNS/s of/IN/of r/NN/r is/VBZ/is set/VBN/set 1/CD/1. this/DT/this is/VBZ/is my/PRP$/my root/NN/root vertex/NNP/vertex. now/RB/now /,/, what/WDT/what should/MD/should i/PRP/i do/VBP/do ?/./? i/PRP/i should/MD/should insert/VB/insert the/DT/the edges/NNS/edges incident/NN/incident at/IN/at the/DT/the root/NN/root into/IN/into the/DT/the heap/NNP/heap. so/RB/so /,/, what/WDT/what should/MD/should i/PRP/i do/VBP/do ?/./? for/IN/for all/DT/all e/NN/e incident/NN/incident to/TO/to r/VB/r /,/, do/VB/do h/JJ/h that/IN/that is/VBZ/is my/PRP$/my heap/NN/heap /,/, dot/NN/dot insert/NN/insert e/NNP/e. some/DT/some such/JJ/such thing/NN/thing /,/, i/PRP/i have/VBP/have to/TO/to insert/VB/insert the/DT/the edge/NN/edge into/IN/into the/DT/the heap/NNP/heap. so/RB/so /,/, everyone/NN/everyone follows/VBZ/follows ?/./? /:/( hindi/NN/hindi /:/) so/RB/so /:/( hindi/NN/hindi /:/) while/IN/while not/RB/not /,/, i/PRP/i would/MD/would say/VB/say not/RB/not h/VB/h dot/RB/dot empty/NNP/empty. /:/( hindi/NN/hindi /:/) do/NNP/do. now/RB/now /,/, what/WDT/what should/MD/should i/PRP/i do/VBP/do ?/./? i/PRP/i should/MD/should find/VB/find the/DT/the minimum/JJ/minimum edge/NNP/edge. h/NN/h dot/VBD/dot find/NN/find min/NN/min equals/NNS/equals let/VBP/let say/VBP/say /,/, this/DT/this is/VBZ/is equal/JJ/equal to/TO/to /,/, what/WDT/what will/MD/will this/DT/this return/NN/return ?/./? this/DT/this will/MD/will return/VB/return in/IN/in edge/NN/edge /,/, /:/( hindi/NN/hindi /:/) and/CC/and now/RB/now what/WP/what should/MD/should do/VB/do i/PRP/i with/IN/with f/NN/f now/RB/now ?/./? /:/( hindi/NN/hindi /:/) i/PRP/i have/VBP/have to/TO/to find/VB/find the/DT/the end/NN/end point/NN/point of/IN/of f/NN/f which/WDT/which is/VBZ/is not/RB/not in/IN/in s/NNP/s. let/NN/let v/NN/v be/VB/be the/DT/the end/NN/end point/NN/point of/IN/of f/NN/f such/JJ/such that/IN/that s/NNS/s of/IN/of v/NN/v equals/NNS/equals 0/CD/0. /CD/( hindi/NN/hindi /:/) for/IN/for all/PDT/all e/NN/e /,/, e/NN/e adjacent/NN/adjacent to/TO/to v/VB/v do/NNP/do. what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? for/IN/for all/DT/all e/NN/e equals/NNS/equals v/VBP/v comma/NN/comma w/NN/w /:/( hindi/NN/hindi /:/) if/IN/if s/NNS/s w/VBP/w equals/NNS/equals 0/-NONE-/0 /:/( hindi/NN/hindi /:/) then/RB/then edge/VB/edge dot/NN/dot insert/NN/insert e/NN/e /,/, not/RB/not w/VB/w ;/:/; /:/( hindi/NN/hindi /:/) else/NN/else h/NN/h dot/NN/dot /:/( hindi/NN/hindi /:/) this/DT/this is/VBZ/is the/DT/the spanning/NN/spanning tree/NN/tree /,/, minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. /NNP/( hindi/NN/hindi /:/) this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is the/DT/the part/NN/part of/IN/of the/DT/the this/DT/this loop/NNP/loop. clear/NN/clear to/TO/to everyone/NN/everyone ?/./? /:/( hindi/NN/hindi /:/) as/IN/as you/PRP/you can/MD/can see/VB/see /,/, all/DT/all the/DT/the effort/NN/effort is/VBZ/is being/VBG/being spent/VBN/spent in/IN/in this/DT/this step/NN/step or/CC/or not/RB/not too/RB/too much/RB/much actually/RB/actually in/IN/in this/DT/this step/NNP/step. how/WRB/how many/JJ/many times/NNS/times is/VBZ/is this/DT/this loop/NN/loop going/VBG/going to/TO/to be/VB/be executed/VBN/executed ?/./? n/NN/n times/NNS/times ?/./? how/WRB/how many/JJ/many times/NNS/times is/VBZ/is this/DT/this loop/NN/loop /,/, the/DT/the while/NN/while loop/NN/loop is/VBZ/is going/VBG/going to/TO/to be/VB/be executed/VBN/executed ?/./? n/NN/n minus/NN/minus 1/CD/1 or/CC/or n/NN/n times/NNS/times ?/./? n/NN/n minus/NN/minus 1/CD/1 times/NNP/times. why/WRB/why /,/, because/IN/because every/DT/every time/NN/time i/PRP/i execute/VBP/execute this/DT/this loop/NN/loop 1/CD/1 vertex/NN/vertex comes/VBZ/comes into/IN/into the/DT/the set/NN/set as/IN/as n/NN/n vertices/NNS/vertices /:/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this is/VBZ/is getting/VBG/getting executed/VBN/executed n/NN/n minus/NN/minus 1/CD/1 time/NNP/time. so/RB/so /,/, this/DT/this statement/NN/statement is/VBZ/is executed/VBN/executed n/NN/n minus/NN/minus 1/CD/1 time/NN/time but/CC/but /,/, this/DT/this is/VBZ/is again/RB/again just/RB/just a/DT/a constant/JJ/constant time/NN/time operation/NNP/operation. so/RB/so /,/, this/DT/this is/VBZ/is not/RB/not too/RB/too much/RB/much time/NNP/time. /:/( hindi/NN/hindi /:/) it/PRP/it is/VBZ/is this/DT/this way/NN/way the/DT/the most/JJS/most of/IN/of the/DT/the work/NN/work is/VBZ/is getting/VBG/getting done/NNP/done. for/IN/for every/DT/every if/IN/if you/PRP/you are/VBP/are looking/VBG/looking at/IN/at all/DT/all the/DT/the vertices/NNS/vertices adjacent/VBP/adjacent to/TO/to the/DT/the vertex/NN/vertex v/NN/v /,/, degree/NN/degree and/CC/and for/IN/for each/DT/each one/CD/one of/IN/of those/DT/those vertices/NNS/vertices or/CC/or edges/NNS/edges /,/, you/PRP/you are/VBP/are spending/VBG/spending /,/, doing/VBG/doing either/DT/either an/DT/an insert/NN/insert or/CC/or a/DT/a delete/NNP/delete. log/NN/log n/NN/n /,/, degree/NN/degree times/NNS/times log/VBP/log n/NN/n /,/, you/PRP/you have/VBP/have seen/VBN/seen that/IN/that before/IN/before /,/, summed/VBN/summed over/IN/over all/DT/all vertices/NNS/vertices will/MD/will be/VB/be m/NN/m log/NN/log n/NNP/n. there/EX/there is/VBZ/is a/DT/a modification/NN/modification to/TO/to this/DT/this scheme/NN/scheme that/IN/that can/MD/can also/RB/also be/VB/be done/NNP/done. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 58/CD/58 /CD/) in/IN/in this/DT/this modification/NN/modification /,/, what/WP/what you/PRP/you do/VBP/do is/VBZ/is you/PRP/you have/VBP/have your/PRP$/your set/NN/set s/NNS/s /,/, you/PRP/you have/VBP/have your/PRP$/your set/NN/set s/NNS/s complement/NNP/complement. each/DT/each vertex/NN/vertex in/IN/in s/NNS/s complement/NN/complement has/VBZ/has a/DT/a number/NN/number on/IN/on it/NNP/it. what/WP/what is/VBZ/is this/DT/this number/NN/number going/VBG/going to/TO/to be/VB/be ?/./? let/VB/let us/PRP/us look/VB/look at/IN/at all/DT/all the/DT/the edges/NNS/edges going/VBG/going from/IN/from this/DT/this vertex/NN/vertex to/TO/to s/NNP/s. suppose/NN/suppose /,/, these/DT/these were/VBD/were the/DT/the 3/CD/3 edges/NNS/edges going/VBG/going from/IN/from vertex/NN/vertex v/NN/v to/TO/to s/NNS/s /,/, suppose/VBP/suppose these/DT/these edge/NN/edge lengths/NNS/lengths are/VBP/are 3/CD/3 /,/, 4/CD/4 /,/, and/CC/and 7/CD/7 then/RB/then this/DT/this vertex/NN/vertex is/VBZ/is going/VBG/going to/TO/to have/VB/have a/DT/a number/NN/number of/IN/of 3/CD/3 return/NN/return ?/./? /:/( hindi/NN/hindi /:/) what/WP/what are/VBP/are we/PRP/we going/VBG/going to/TO/to do/VB/do with/IN/with these/DT/these numbers/NNS/numbers ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to create/VB/create a/DT/a heap/NNP/heap. now/RB/now /,/, my/PRP$/my heap/NN/heap is/VBZ/is a/DT/a heap/NN/heap of/IN/of vertices/NNS/vertices and/CC/and not/RB/not of/IN/of edges/NNP/edges. so/RB/so /,/, this/DT/this heap/NN/heap has/VBZ/has 1/CD/1 element/NN/element for/IN/for each/DT/each vertex/NN/vertex in/IN/in s/NNS/s complement/NNP/complement. /NNP/( hindi/NN/hindi /:/) what/WP/what will/MD/will be/VB/be the/DT/the minimum/JJ/minimum element/NN/element in/IN/in the/DT/the heap/NN/heap ?/./? it/PRP/it will/MD/will be/VB/be the/DT/the vertex/NN/vertex which/WDT/which has/VBZ/has the/DT/the minimum/JJ/minimum edge/NN/edge incident/NN/incident at/IN/at it/PRP/it among/IN/among all/DT/all the/DT/the edges/NNS/edges in/IN/in the/DT/the cut/NNP/cut. so/RB/so /,/, it/PRP/it will/MD/will be/VB/be the/DT/the vertex/NN/vertex which/WDT/which has/VBZ/has to/TO/to go/VB/go across/NNP/across. /NNP/( hindi/NN/hindi /:/) if/IN/if i/PRP/i find/VBP/find the/DT/the vertex/NN/vertex the/DT/the vertex/NN/vertex which/WDT/which is/VBZ/is sitting/VBG/sitting here/RB/here at/IN/at the/DT/the top/JJ/top /,/, the/DT/the vertex/NN/vertex with/IN/with the/DT/the minimum/JJ/minimum value/NN/value /,/, minimum/JJ/minimum label/NN/label /,/, let/VB/let us/PRP/us call/MD/call this/DT/this labels/NNS/labels /:/: the/DT/the vertex/NN/vertex with/IN/with the/DT/the minimum/JJ/minimum label/NN/label let/NN/let say/VB/say /,/, it/PRP/it is/VBZ/is this/DT/this vertex/NN/vertex /:/( hindi/NN/hindi /:/) so/RB/so /,/, that/IN/that means/NNS/means that/WDT/that the/DT/the minimum/JJ/minimum edge/NN/edge going/VBG/going across/IN/across this/DT/this cut/NN/cut is/VBZ/is 1/CD/1. we/PRP/we are/VBP/are not/RB/not keeping/VBG/keeping track/NN/track of/IN/of edges/NNS/edges which/WDT/which are/VBP/are here/RB/here /,/, within/IN/within here/NNP/here. this/DT/this vertex/NN/vertex will/MD/will only/RB/only contain/VB/contain a/DT/a label/NN/label which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to the/DT/the minimum/JJ/minimum of/IN/of the/DT/the edges/NNS/edges which/WDT/which are/VBP/are going/VBG/going across/IN/across the/DT/the cut/NNP/cut. if/IN/if there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex which/WDT/which has/VBZ/has no/DT/no edge/NN/edge going/VBG/going across/IN/across the/DT/the cut/NN/cut /,/, incident/NN/incident at/IN/at it/PRP/it /:/( hindi/NN/hindi /:/) so/RB/so the/DT/the minimum/JJ/minimum will/MD/will tell/VB/tell me/PRP/me which/WDT/which is/VBZ/is the/DT/the minimum/JJ/minimum edge/NN/edge going/VBG/going across/IN/across and/CC/and that/IN/that is/VBZ/is the/DT/the vertex/NN/vertex that/IN/that i/PRP/i have/VBP/have to/TO/to move/VB/move across/RP/across and/CC/and when/WRB/when i/PRP/i have/VBP/have to/TO/to move/VB/move across/RP/across the/DT/the vertex/NN/vertex /,/, what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? how/WRB/how do/VBP/do i/PRP/i update/VB/update information/NN/information ?/./? very/RB/very simple/JJ/simple /,/, this/DT/this is/VBZ/is vertex/NN/vertex v/NN/v /:/( hindi/NN/hindi /:/) all/DT/all those/DT/those in/IN/in s/NNS/s bar/NN/bar which/WDT/which are/VBP/are adjacent/JJ/adjacent to/TO/to this/DT/this vertex/NNP/vertex. /NNP/( hindi/NN/hindi /:/) the/DT/the minimum/JJ/minimum edge/NN/edge that/WDT/that is/VBZ/is coming/VBG/coming to/TO/to this/DT/this vertex/NN/vertex /,/, so/RB/so far/RB/far is/VBZ/is 4/CD/4. but/CC/but now/RB/now /,/, this/DT/this edge/NN/edge is/VBZ/is also/RB/also coming/VBG/coming to/TO/to this/DT/this vertex/NN/vertex /,/, because/IN/because this/DT/this vertex/NN/vertex going/VBG/going on/IN/on that/DT/that side/NN/side /:/( hindi/NN/hindi /:/) so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the only/JJ/only things/NNS/things we/PRP/we have/VBP/have to/TO/to do/VB/do now/NNP/now. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the operation/NN/operation we/PRP/we have/VBP/have to/TO/to do/VB/do on/IN/on the/DT/the heap/NN/heap now/RB/now ?/./? update/NN/update what/WP/what ?/./? update/VBP/update or/CC/or decrease/VB/decrease ?/./? we/PRP/we will/MD/will only/RB/only decrease/VB/decrease the/DT/the label/NN/label /,/, decrease/NN/decrease priority/NNP/priority. decrease/NN/decrease priority/NN/priority is/VBZ/is the/DT/the operation/NN/operation we/PRP/we have/VBP/have to/TO/to do/NNP/do. decrease/NN/decrease priority/NN/priority /:/( hindi/NN/hindi /:/) no/DT/no insert/NN/insert /,/, no/DT/no delete/NNP/delete. find/VBP/find min/NN/min /,/, of/IN/of course/NN/course and/CC/and decrease/VB/decrease priority/NN/priority /:/( hindi/NN/hindi /:/) since/IN/since /,/, i/PRP/i have/VBP/have 4/CD/4 or/CC/or 5/CD/5 minutes/NNS/minutes /,/, let/VB/let me/PRP/me write/VB/write down/RP/down the/DT/the code/NN/code for/IN/for even/RB/even this/DT/this 1/CD/1. /CD/( hindi/NN/hindi /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 23/CD/23 /CD/) so/RB/so /,/, once/RB/once again/RB/again i/PRP/i will/MD/will /,/, as/IN/as in/IN/in the/DT/the previous/JJ/previous case/NN/case i/PRP/i will/MD/will have/VB/have my/PRP$/my array/NN/array s/NNS/s /,/, i/PRP/i will/MD/will do/VB/do the/DT/the same/JJ/same initialization/NN/initialization ;/:/; for/IN/for all/PDT/all vertex/NN/vertex v/NN/v /,/, s/VBZ/s v/NN/v is/VBZ/is initially/RB/initially 0/-NONE-/0 and/CC/and s/NNS/s of/IN/of r/NN/r is/VBZ/is 1/CD/1. now/RB/now remember/JJR/remember /,/, the/DT/the heap/NN/heap is/VBZ/is going/VBG/going to/TO/to contain/VB/contain vertices/NNS/vertices in/IN/in s/NNS/s complement/NNP/complement. h/NN/h is/VBZ/is going/VBG/going to/TO/to contain/VB/contain vertices/NNS/vertices in/IN/in s/NNS/s complement/NNP/complement. what/WP/what should/MD/should i/VB/i put/VBN/put initially/RB/initially in/IN/in my/PRP$/my heap/NN/heap ?/./? everything/NN/everything ?/./? except/IN/except r/NN/r ?/./? so/RB/so for/IN/for all/DT/all v/NN/v /,/, s/VBZ/s v/NN/v is/VBZ/is equal/JJ/equal to/TO/to 0/-NONE-/0 and/CC/and let/VB/let say/NN/say /,/, i/PRP/i do/VBP/do h/JJ/h dot/NN/dot insert/NN/insert v/NN/v comma/NN/comma /:/( hindi/NN/hindi /:/) distance/NN/distance from/IN/from r/NN/r /,/, what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? length/NN/length of/IN/of the/DT/the edge/NN/edge from/IN/from r/NN/r ?/./? infinity/NN/infinity /:/( hindi/NN/hindi /:/) h/NN/h dot/NN/dot insert/NN/insert /:/( hindi/NN/hindi /:/) no/DT/no /,/, no/DT/no /,/, everything/NN/everything is/VBZ/is infinite/JJ/infinite only/RB/only r/JJ/r is/VBZ/is 0/-NONE-/0 /:/( hindi/NN/hindi /:/) while/IN/while h/NN/h is/VBZ/is not/RB/not empty/JJ/empty /,/, we/PRP/we will/MD/will do/VB/do something/NNP/something. what/WP/what will/MD/will we/VB/we do/VB/do ?/./? we/PRP/we will/MD/will take/VB/take the/DT/the minimum/JJ/minimum let/NN/let say/VBP/say /,/, that/IN/that is/VBZ/is the/DT/the vertex/NN/vertex v/CC/v. i/PRP/i will/MD/will take/VB/take the/DT/the vertex/NN/vertex /:/( hindi/NN/hindi /:/) for/IN/for all/PDT/all w/NN/w adjacent/NN/adjacent to/TO/to v/VB/v do/NNP/do. if/IN/if w/NN/w is/VBZ/is adjacent/NN/adjacent to/TO/to v/VB/v what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? if/IN/if s/NNS/s w/VBP/w equals/NNS/equals 0/-NONE-/0 /,/, what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? w/NN/w is/VBZ/is on/IN/on the/DT/the s/NNS/s complement/VBP/complement side/NNP/side. then/RB/then what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? then/RB/then i/PRP/i have/VBP/have to/TO/to update/VB/update its/PRP$/its priority/NNP/priority. then/RB/then if/IN/if what/WP/what should/MD/should be/VB/be the/DT/the new/JJ/new /,/, what/WP/what is/VBZ/is the/DT/the option/NN/option here/RB/here ?/./? if/IN/if /,/, we/PRP/we will/MD/will need/VB/need a/DT/a label/NN/label array/NN/array somewhere/NNP/somewhere. if/IN/if label/NN/label of/IN/of w/NN/w /:/( hindi/NN/hindi /:/) which/WDT/which is/VBZ/is keeping/VBG/keeping track/NN/track of/IN/of all/DT/all the/DT/the labels/NNS/labels /,/, so/RB/so if/IN/if label/NN/label w/NN/w /:/( hindi/NN/hindi /:/) is/VBZ/is greater/JJR/greater than/IN/than length/NN/length of/IN/of v/NN/v comma/NN/comma w/NN/w then/RB/then that/IN/that means/NNS/means that/WDT/that this/DT/this edge/NN/edge now/RB/now /,/, so/RB/so what/WP/what is/VBZ/is it/PRP/it /,/, what/WDT/what are/VBP/are they/PRP/they saying/VBG/saying ?/./? /NN/( hindi/NN/hindi /:/) then/RB/then label/NN/label w/NN/w equals/NNS/equals 6/CD/6 /,/, sorry/JJ/sorry /,/, equals/NNS/equals length/VBP/length v/NN/v w/NN/w and/CC/and h/NN/h dot/NN/dot decease/NN/decease priority/NN/priority w/NN/w comma/NN/comma label/NN/label w/NNP/w. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an alternative/JJ/alternative way/NN/way of/IN/of doing/NNP/doing. so/RB/so /,/, the/DT/the same/JJ/same running/NN/running time/NN/time complexity/NNP/complexity. you/PRP/you will/MD/will check/VB/check that/IN/that yourself/NNP/yourself. why/WRB/why is/VBZ/is that/IN/that ?/./? because/IN/because /,/, once/RB/once again/RB/again we/PRP/we are/VBP/are looking/VBG/looking at/IN/at degree/NN/degree /,/, for/IN/for spending/NN/spending degree/NN/degree time/NN/time at/IN/at each/DT/each vertex/NN/vertex and/CC/and degree/NN/degree times/NNS/times log/VBP/log n/NN/n /,/, because/IN/because decrease/NN/decrease priority/NN/priority also/RB/also takes/VBZ/takes log/NN/log n/NN/n time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 04/CD/04 /CD/) some/DT/some over/IN/over all/DT/all vertices/NNS/vertices will/MD/will come/VB/come m/NN/m log/NN/log n/NN/n and/CC/and that/IN/that is/VBZ/is basically/RB/basically where/WRB/where most/RBS/most of/IN/of the/DT/the work/NN/work is/VBZ/is getting/VBG/getting down/IN/down /CD/( hindi/NN/hindi /:/) so/RB/so with/IN/with that/DT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to end/VB/end today/NN/today ?/./? s/NNS/s lecture/NNP/lecture. so/RB/so /,/, we/PRP/we looked/VBD/looked at/IN/at prim/JJ/prim ?/./? s/NNS/s algorithm/VBP/algorithm for/IN/for computing/NN/computing minimum/NN/minimum spanning/VBG/spanning trees/NNS/trees and/CC/and we/PRP/we saw/VBD/saw 2/CD/2 ways/NNS/ways of/IN/of implementing/VBG/implementing it/NNP/it. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 34/CD/34 today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about the/DT/the single/JJ/single source/NN/source shortest/NN/shortest path/NNP/path. in/IN/in the/DT/the last/JJ/last class/NN/class /,/, we/PRP/we looked/VBD/looked at/IN/at the/DT/the minimum/JJ/minimum spanning/NN/spanning trees/NNS/trees /,/, prim/VBP/prim ?/./? s/NNS/s algorithm/VBP/algorithm for/IN/for computing/NN/computing minimum/NN/minimum spanning/VBG/spanning trees/NNP/trees. this/DT/this is/VBZ/is a/DT/a different/JJ/different problem/NN/problem and/CC/and i/PRP/i will/MD/will soon/RB/soon tell/VB/tell you/PRP/you what/WP/what the/DT/the problem/NN/problem is/VBZ/is ?/./? what/WP/what we/PRP/we will/MD/will /,/, how/WRB/how you/PRP/you will/MD/will find/VB/find is/VBZ/is that/IN/that the/DT/the algorithm/NN/algorithm is/VBZ/is strikingly/RB/strikingly similar/JJ/similar to/TO/to prim/VB/prim ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let see/NN/see what/WP/what is/VBZ/is the/DT/the problem/NN/problem is/VBZ/is and/CC/and what/WP/what the/DT/the algorithm/NN/algorithm in/IN/in this/DT/this problem/NN/problem does/NNP/does. so/RB/so /,/, once/RB/once again/RB/again you/PRP/you are/VBP/are given/VBN/given a/DT/a graph/NN/graph and/CC/and today/NN/today we/PRP/we can/MD/can assume/VB/assume that/IN/that the/DT/the graph/NN/graph is/VBZ/is directed/NNP/directed. so/RB/so /,/, this/DT/this algorithm/NN/algorithm or/CC/or this/DT/this problem/NN/problem is/VBZ/is well/RB/well defined/VBN/defined even/RB/even for/IN/for directed/VBN/directed graph/NNP/graph. i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume that/IN/that the/DT/the graph/NN/graph is/VBZ/is directed/NNP/directed. let/NN/let us/PRP/us take/VBP/take a/DT/a graph/NN/graph /,/, each/DT/each edge/NN/edge has/VBZ/has a/DT/a length/NN/length l/NN/l /,/, is/VBZ/is a/DT/a function/NN/function from/IN/from the/DT/the edges/NNS/edges to/TO/to positive/JJ/positive ?/./? non/NN/non negative/JJ/negative /,/, we/PRP/we can/MD/can have/VB/have the/DT/the edges/NNS/edges of/IN/of length/NN/length 0/-NONE-/0 also/RB/also and/CC/and let/VB/let us/PRP/us give/VB/give ?/./? let/VB/let say/NN/say /,/, this/DT/this edge/NN/edge has/VBZ/has length/NN/length 2/CD/2 /,/, this/DT/this is/VBZ/is length/NN/length 3/CD/3 /,/, this/DT/this is/VBZ/is length/NN/length 3.1/CD/3.1 /,/, this/DT/this is/VBZ/is length/NN/length 7/CD/7 /,/, this/DT/this is/VBZ/is length/NN/length 0.5/CD/0.5 /,/, this/DT/this is/VBZ/is length/NN/length 1.1/CD/1.1 /,/, this/DT/this is/VBZ/is length/NN/length 5/CD/5. these/DT/these this/DT/this could/MD/could be/VB/be a/DT/a network/NN/network of/IN/of let/NN/let say/VBP/say /,/, the/DT/the roads/NNS/roads in/IN/in a/DT/a city/NNP/city. so/RB/so /,/, each/DT/each length/NN/length so/IN/so the/DT/the length/NN/length corresponds/NNS/corresponds to/TO/to the/DT/the distance/NN/distance from/IN/from this/DT/this end/NN/end point/NN/point to/TO/to this/DT/this end/NN/end point/NN/point and/CC/and let/VB/let see/NN/see these/DT/these are/VBP/are 1/CD/1 way/NN/way roads/NNP/roads. i/PRP/i will/MD/will /,/, at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this class/NN/class i/PRP/i will/MD/will tell/VB/tell you/PRP/you other/JJ/other applications/NNS/applications of/IN/of this/DT/this problem/NN/problem /,/, the/DT/the ton/NN/ton and/CC/and tons/NNS/tons of/IN/of that/NNP/that. what/WP/what is/VBZ/is the/DT/the problem/NN/problem ?/./? the/DT/the problem/NN/problem is/VBZ/is to/TO/to find/VB/find the/DT/the shortest/JJS/shortest path/NNP/path. let/NN/let say/VBP/say /,/, i/PRP/i want/VBP/want to/TO/to go/VB/go from/IN/from this/DT/this place/NN/place s/VBZ/s /,/, s/NNS/s is/VBZ/is also/RB/also the/DT/the /,/, also/RB/also called/VBN/called the/DT/the source/NN/source ;/:/; i/PRP/i want/VBP/want to/TO/to go/VB/go from/IN/from s/NNS/s to/TO/to t/VB/t /,/, t/NN/t stands/VBZ/stands for/IN/for termination/NN/termination /,/, no/DT/no destination/NNP/destination. why/WRB/why should/MD/should t/VB/t stand/NN/stand for/IN/for destination/NN/destination ?/./? you/PRP/you will/MD/will figure/VB/figure out/RP/out yourself/NNP/yourself. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 4/CD/4 /:/: 03/CD/03 /CD/) i/PRP/i want/VBP/want to/TO/to go/VB/go from/IN/from s/NNS/s to/TO/to t/VB/t and/CC/and clearly/RB/clearly i/PRP/i would/MD/would be/VB/be interested/JJ/interested in/IN/in taking/NN/taking the/DT/the shortest/NN/shortest path/NNP/path. how/WRB/how many/JJ/many different/JJ/different paths/NNS/paths are/VBP/are there/RB/there in/IN/in this/DT/this graph/NN/graph between/IN/between s/NNS/s and/CC/and t/NN/t ?/./? 4/CD/4 only/RB/only ?/./? so/RB/so /,/, there/EX/there is/VBZ/is 1/CD/1 path/NN/path i/PRP/i go/VBP/go like/IN/like this/DT/this /,/, then/RB/then i/PRP/i go/VBP/go like/IN/like this/DT/this /,/, then/RB/then i/PRP/i come/VBP/come back/RB/back here/RB/here /,/, that/IN/that is/VBZ/is 1/CD/1 path/NNP/path. the/DT/the other/JJ/other path/NN/path is/VBZ/is i/PRP/i go/VBP/go like/IN/like this/DT/this /,/, i/PRP/i come/VBP/come down/RB/down /,/, then/RB/then i/PRP/i go/VBP/go like/IN/like this/DT/this and/CC/and then/RB/then i/PRP/i come/VBP/come down/RB/down /,/, this/DT/this is/VBZ/is a/DT/a second/JJ/second option/NNP/option. the/DT/the third/JJ/third option/NN/option is/VBZ/is that/IN/that i/PRP/i go/VBP/go like/IN/like this/DT/this /,/, come/VBP/come down/RB/down /,/, i/PRP/i go/VBP/go straight/RB/straight /,/, this/DT/this is/VBZ/is third/JJ/third option/NNP/option. fourth/JJ/fourth option/NN/option is/VBZ/is that/IN/that i/PRP/i go/VBP/go 2/CD/2 and/CC/and then/RB/then 7/CD/7 and/CC/and then/RB/then 1/CD/1 other/JJ/other option/NN/option is/VBZ/is this/DT/this /,/, this/DT/this and/CC/and this/NNP/this. is/VBZ/is there/RB/there 1/CD/1 more/JJR/more ?/./? 0.53/CD/0.53 ?/./? 3/CD/3 /,/, i/PRP/i can/MD/can not/RB/not come/VB/come back/RB/back /,/, i/PRP/i can/MD/can not/RB/not come/VB/come back/RB/back on/IN/on this/NNP/this. this/DT/this is/VBZ/is not/RB/not a/DT/a path/NN/path because/IN/because that/DT/that this/DT/this edge/NN/edge is/VBZ/is directed/VBN/directed in/IN/in that/DT/that manner/NNP/manner. it/PRP/it would/MD/would have/VB/have been/VBN/been a/DT/a path/NN/path if/IN/if this/DT/this was/VBD/was an/DT/an undirected/VBN/undirected graph/NN/graph but/CC/but not/RB/not in/IN/in this/DT/this graph/NNP/graph. so/RB/so actually/RB/actually /,/, this/DT/this graph/NN/graph has/VBZ/has only/RB/only 5/CD/5 different/JJ/different paths/NNP/paths. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a simple/JJ/simple problem/NN/problem to/TO/to compute/VB/compute the/DT/the length/NN/length of/IN/of each/DT/each path/NN/path and/CC/and take/VB/take the/DT/the minimum/NNP/minimum. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path ?/./? 8.6/CD/8.6. length/NN/length of/IN/of this/DT/this ?/./? 7.7/CD/7.7. what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this ?/./? 2,3/CD/2,3 8.1/CD/8.1. this/DT/this is/VBZ/is 9/CD/9 /,/, this/DT/this is/VBZ/is 8.6/CD/8.6. if/IN/if these/DT/these were/VBD/were your/PRP$/your gpa/NN/gpa ?/./? s/NNS/s /,/, you/PRP/you would/MD/would have/VB/have preferred/VBN/preferred this/NNP/this. but/CC/but clearly/RB/clearly /,/, we/PRP/we are/VBP/are interested/JJ/interested in/IN/in the/DT/the shortest/NN/shortest path/NNP/path. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to take/VB/take this/DT/this path/NN/path /,/, 7.7/CD/7.7 because/IN/because it/PRP/it is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path /,/, shortest/NN/shortest way/NN/way to/TO/to get/VB/get to/TO/to a/DT/a destination/NNP/destination. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 5/CD/5 /:/: 49/CD/49 /CD/) so/RB/so /,/, can/MD/can we/PRP/we always/RB/always do/VBP/do this/DT/this thing/NN/thing /,/, as/IN/as in/IN/in list/NN/list out/IN/out all/DT/all the/DT/the paths/NNS/paths in/IN/in the/DT/the graph/NN/graph and/CC/and just/RB/just take/VB/take whichever/NN/whichever is/VBZ/is the/DT/the shortest/JJS/shortest /,/, compute/NN/compute the/DT/the length/NN/length of/IN/of each/DT/each part/NN/part and/CC/and then/RB/then compute/VB/compute the/DT/the shortest/JJS/shortest ?/./? not/RB/not feasible/JJ/feasible ?/./? why/WRB/why is/VBZ/is not/RB/not feasible/JJ/feasible ?/./? not/RB/not practical/JJ/practical /,/, why/WRB/why is/VBZ/is not/RB/not practical/JJ/practical ?/./? what/WP/what is/VBZ/is impractical/JJ/impractical about/IN/about it/PRP/it ?/./? high/JJ/high time/NN/time complexity/NN/complexity /,/, why/WRB/why high/JJ/high time/NN/time complexity/NN/complexity ?/./? why/WRB/why should/MD/should there/RB/there be/VB/be /,/, may/MD/may be/VB/be a/DT/a graph/NN/graph on/IN/on n/NN/n vertices/NNS/vertices never/RB/never has/VBZ/has more/JJR/more than/IN/than n/NN/n paths/NNP/paths. then/RB/then it/PRP/it is/VBZ/is simple/JJ/simple matter/NNP/matter. just/RB/just list/NN/list out/RP/out all/DT/all your/PRP$/your n/NN/n paths/NNS/paths and/CC/and just/RB/just compute/JJ/compute the/DT/the length/NN/length of/IN/of ?/./? if/IN/if it/PRP/it has/VBZ/has a/DT/a cycle/NN/cycle ?/./? will/MD/will you/PRP/you ever/RB/ever go/VBP/go along/IN/along a/DT/a cycle/NN/cycle ?/./? you/PRP/you are/VBP/are looking/VBG/looking for/IN/for a/DT/a shortest/NN/shortest path/NNP/path. why/WRB/why would/MD/would you/PRP/you want/VB/want to/TO/to cycle/VB/cycle ?/./? so/RB/so /,/, you/PRP/you can/MD/can ignore/VB/ignore ?/./? not/RB/not when/WRB/when you/PRP/you are/VBP/are listing/VBG/listing out/RP/out your/PRP$/your paths/NNS/paths you/PRP/you will/MD/will try/VB/try ignore/RBR/ignore cycles/NNP/cycles. so/RB/so /,/, it/PRP/it is/VBZ/is not/RB/not feasible/JJ/feasible but/CC/but that/IN/that is/VBZ/is because/IN/because /,/, the/DT/the number/NN/number of/IN/of paths/NNS/paths can/MD/can be/VB/be very/RB/very large/NNP/large. what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by very/RB/very large/JJ/large ?/./? let/NN/let us/PRP/us look/VBP/look at/IN/at an/DT/an example/NNP/example. very/RB/very large/JJ/large means/NNS/means exponentially/RB/exponentially varying/NNP/varying. this/DT/this is/VBZ/is my/PRP$/my graph/NN/graph /,/, edges/NNS/edges are/VBP/are all/DT/all directed/VBN/directed left/VBN/left to/TO/to right/NNP/right. you/PRP/you get/VBP/get the/DT/the idea/NN/idea /,/, this/DT/this is/VBZ/is s/VBZ/s and/CC/and this/DT/this is/VBZ/is t/NNP/t. sorry/NN/sorry /,/, there/EX/there are/VBP/are more/JJR/more such/JJ/such diamonds/NNS/diamonds /,/, this/DT/this is/VBZ/is t/NNP/t. if/IN/if there/EX/there are/VBP/are n/NN/n vertices/NNS/vertices /,/, how/WRB/how many/JJ/many such/JJ/such diamonds/NNS/diamonds are/VBP/are there/RB/there ?/./? how/WRB/how many/JJ/many such/JJ/such diamonds/NNS/diamonds are/VBP/are there/RB/there if/IN/if there/EX/there are/VBP/are n/NN/n vertices/NNS/vertices ?/./? or/CC/or let/VB/let us/PRP/us do/VBP/do it/PRP/it the/DT/the other/JJ/other way/NN/way round/NNP/round. if/IN/if there/EX/there are/VBP/are k/NN/k such/JJ/such diamonds/NNS/diamonds /,/, then/RB/then there/EX/there are/VBP/are /,/, how/WRB/how many/JJ/many vertices/NNS/vertices are/VBP/are there/RB/there ?/./? k/NN/k diamonds/NNS/diamonds would/MD/would count/VB/count as/IN/as 3/CD/3 k/NN/k plus/CC/plus 1/CD/1. just/RB/just do/VBP/do your/PRP$/your count/NN/count correctly/NNP/correctly. with/IN/with each/DT/each diamond/NN/diamond i/PRP/i associate/VBP/associate this/DT/this vertex/NN/vertex /,/, this/DT/this vertex/NN/vertex and/CC/and let/VB/let say/NN/say /,/, the/DT/the left/NN/left end/NNP/end. i/PRP/i can/MD/can not/RB/not associate/VB/associate both/DT/both because/IN/because ?/./? so/RB/so /,/, it/PRP/it will/MD/will be/VB/be something/NN/something like/IN/like /,/, 3/CD/3 k/NN/k plus/CC/plus 1/CD/1 vertex/NNP/vertex. how/WRB/how many/JJ/many path/NN/path are/VBP/are there/RB/there between/IN/between s/NNS/s and/CC/and t/NN/t ?/./? 2/CD/2 to/TO/to the/DT/the k/NN/k /,/, why/WRB/why ?/./? because/IN/because for/IN/for each/DT/each diamond/NN/diamond /,/, i/PRP/i can/MD/can either/VB/either take/VB/take the/DT/the top/JJ/top part/NN/part or/CC/or the/DT/the less/JJR/less bottom/NN/bottom part/NNP/part. so/RB/so /,/, there/EX/there are/VBP/are 2/CD/2 options/NNS/options in/IN/in each/DT/each diamond/NNP/diamond. so/RB/so /,/, i/PRP/i can/MD/can have/VB/have 1/CD/1 path/NN/path which/WDT/which just/RB/just takes/VBZ/takes the/DT/the top/JJ/top part/NN/part always/RB/always /,/, 1/CD/1 path/NN/path that/WDT/that takes/VBZ/takes /:/( hindi/NN/hindi /:/) 2/CD/2 to/TO/to the/DT/the k/NN/k different/NN/different paths/NNS/paths between/IN/between s/NNS/s and/CC/and t/NNP/t. everyone/NN/everyone follows/VBZ/follows ?/./? /:/( hindi/NN/hindi /:/) so/RB/so /,/, k/NN/k is/VBZ/is roughly/RB/roughly n/VBN/n by/IN/by 3/CD/3. so/RB/so /,/, this/DT/this is/VBZ/is 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 3/CD/3 paths/NNS/paths roughly/NNP/roughly. how/WRB/how large/JJ/large is/VBZ/is this/DT/this number/NN/number /:/( hindi/NN/hindi /:/) 2/CD/2 to/TO/to the/DT/the 30/CD/30 is/VBZ/is the/DT/the number/NN/number of/IN/of particles/NNS/particles in/IN/in this/DT/this universe/NNP/universe. /NNP/( hindi/NN/hindi /:/) that/IN/that is/VBZ/is the/DT/the number/NN/number of/IN/of particles/NNS/particles /,/, roughly/NNP/roughly. of/IN/of course/NN/course /,/, no/DT/no one/PRP/one has/VBZ/has counted/VBN/counted it/PRP/it /,/, this/DT/this is/VBZ/is an/DT/an estimate/NN/estimate and/CC/and 30/CD/30 would/MD/would be/VB/be achieved/VBN/achieved for/IN/for a/DT/a graph/NN/graph of/IN/of size/NN/size 90/CD/90 /,/, n/NN/n equals/NNS/equals 90/CD/90 which/WDT/which is/VBZ/is not/RB/not a/DT/a /,/, which/WDT/which is/VBZ/is a/DT/a very/RB/very small/JJ/small number/NN/number /,/, actually/NNP/actually. these/DT/these graphs/NNS/graphs are/VBP/are typically/RB/typically huge/JJ/huge when/WRB/when you/PRP/you are/VBP/are trying/VBG/trying to/TO/to compute/VB/compute shortest/JJS/shortest path/NN/path system/NNP/system. so/RB/so /,/, it/PRP/it does/VBZ/does not/RB/not make/VB/make any/DT/any sense/NN/sense to/TO/to do/VB/do this/DT/this caliber/NN/caliber /,/, to/TO/to follow/VB/follow such/JJ/such an/DT/an approach/NN/approach to/TO/to compute/VB/compute shortest/JJS/shortest path/NNP/path. what/WP/what should/MD/should we/PRP/we do/VBP/do ?/./? how/WRB/how can/MD/can we/PRP/we solve/VB/solve this/DT/this particular/JJ/particular example/NN/example ?/./? can/MD/can you/PRP/you think/VB/think of/IN/of a/DT/a way/NN/way of/IN/of solving/VBG/solving this/DT/this example/NN/example ?/./? of/IN/of course/NN/course /,/, there/EX/there are/VBP/are lengths/NNS/lengths on/IN/on all/DT/all of/IN/of these/DT/these edges/NNS/edges which/WDT/which i/PRP/i have/VBP/have not/RB/not written/VBN/written down/RP/down but/CC/but you/PRP/you can/MD/can imagine/VB/imagine ;/:/; 0.5/CD/0.5 /,/, 1/CD/1 /,/, 1.1/CD/1.1 /,/, 0.2/CD/0.2 /,/, 0.3/CD/0.3 /,/, 0.4/CD/0.4 /,/, 0.8/CD/0.8 /,/, 0.5/CD/0.5 /,/, i/PRP/i have/VBP/have just/RB/just taken/VBN/taken some/DT/some arbitrary/JJ/arbitrary numbers/NNP/numbers. what/WP/what is/VBZ/is it/PRP/it that/IN/that you/PRP/you can/MD/can do/VB/do in/IN/in this/DT/this example/NN/example to/TO/to figure/NN/figure out/IN/out shortest/JJS/shortest path/NN/path between/IN/between s/NNS/s and/CC/and t/NN/t ?/./? compare/NN/compare /,/, so/RB/so what/WP/what you/PRP/you are/VBP/are saying/VBG/saying is/VBZ/is here/RB/here /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to see/VB/see /,/, 1.5/CD/1.5 /,/, if/IN/if i/PRP/i take/VBP/take this/DT/this term/NN/term /,/, thing/NN/thing and/CC/and 1.3/CD/1.3 /,/, if/IN/if i/PRP/i take/VBP/take this/DT/this one/CD/one /,/, so/RB/so i/PRP/i will/MD/will go/VB/go bottom/NN/bottom and/CC/and so/RB/so i/PRP/i would/MD/would have/VB/have reached/VBN/reached this/DT/this point/NN/point now/NNP/now. and/CC/and then/RB/then from/IN/from here/RB/here /,/, i/PRP/i have/VBP/have an/DT/an option/NN/option of/IN/of going/VBG/going 0.7/CD/0.7 up/IN/up or/CC/or 1.3/CD/1.3 down/NNP/down. so/RB/so /,/, i/PRP/i will/MD/will take/VB/take this/DT/this one/CD/one /,/, now/RB/now i/PRP/i would/MD/would have/VB/have reached/VBN/reached this/DT/this point/NNP/point. so/RB/so /,/, what/WDT/what you/PRP/you were/VBD/were essential/JJ/essential saying/VBG/saying is/VBZ/is that/IN/that to/TO/to reach/VB/reach this/DT/this destination/NN/destination /,/, i/PRP/i will/MD/will first/RB/first have/VB/have to/TO/to get/VB/get to/TO/to this/DT/this /,/, then/RB/then i/PRP/i will/MD/will have/VB/have to/TO/to get/VB/get to/TO/to this/DT/this /,/, then/RB/then i/PRP/i will/MD/will have/VB/have get/VB/get to/TO/to this/DT/this and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. so/RB/so /,/, first/JJ/first i/PRP/i will/MD/will have/VB/have to/TO/to go/VB/go from/IN/from here/RB/here to/TO/to here/NNP/here. so/RB/so /,/, i/PRP/i can/MD/can choose/VB/choose the/DT/the /,/, there/EX/there are/VBP/are 2/CD/2 options/NNS/options and/CC/and let/VB/let i/PRP/i can/MD/can choose/VB/choose the/DT/the better/JJR/better option/NN/option of/IN/of going/VBG/going from/IN/from here/RB/here to/TO/to here/NNP/here. and/CC/and then/RB/then /,/, i/PRP/i have/VBP/have to/TO/to go/VB/go from/IN/from here/RB/here to/TO/to here/RB/here /,/, there/EX/there is/VBZ/is no/DT/no other/JJ/other possibility/NN/possibility in/IN/in this/DT/this graph/NNP/graph. so/RB/so /,/, i/PRP/i can/MD/can choose/VB/choose to/TO/to better/JJR/better option/NN/option and/CC/and so/RB/so on/IN/on and/CC/and on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 12/CD/12 /CD/) now/RB/now /,/, this/DT/this works/NNS/works in/IN/in this/DT/this example/NN/example /,/, not/RB/not to/TO/to always/NNP/always. i/PRP/i have/VBP/have to/TO/to get/VB/get to/TO/to this/DT/this vertex/NN/vertex and/CC/and i/PRP/i am/VBP/am staring/VBG/staring from/IN/from here/NNP/here. so/RB/so /,/, but/CC/but i/PRP/i do/VBP/do not/RB/not know/VB/know which/WDT/which is/VBZ/is the/DT/the first/JJ/first vertex/NN/vertex i/PRP/i should/MD/should get/VB/get to/TO/to from/IN/from here/NNP/here. there/RB/there is/VBZ/is no/DT/no such/JJ/such clear/JJ/clear demarcation/NNP/demarcation. as/IN/as in/IN/in saying/VBG/saying that/IN/that if/IN/if i/PRP/i have/VBP/have to/TO/to go/VB/go from/IN/from here/RB/here to/TO/to here/RB/here /,/, i/PRP/i have/VBP/have to/TO/to clearly/RB/clearly go/VB/go from/IN/from this/DT/this vertex/NN/vertex to/TO/to this/DT/this vertex/NNP/vertex. we/PRP/we can/MD/can not/RB/not say/VB/say such/JJ/such a/DT/a thing/NN/thing in/IN/in ?/./? so/RB/so /,/, if/IN/if i/PRP/i have/VBP/have to/TO/to go/VB/go from/IN/from here/RB/here to/TO/to here/RB/here /,/, i/PRP/i can/MD/can not/RB/not say/VB/say /,/, which/WDT/which is/VBZ/is the/DT/the first/JJ/first vertex/NN/vertex have/VBP/have to/TO/to get/VB/get through/NNP/through. may/MD/may be/VB/be /,/, i/PRP/i have/VBP/have to/TO/to go/VB/go through/RP/through this/DT/this vertex/NN/vertex /,/, may/MD/may be/VB/be not/RB/not /:/: can/MD/can not/RB/not say/NNP/say. everyone/NN/everyone with/IN/with me/PRP/me ?/./? so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the part/NN/part of/IN/of the/DT/the problem/NNP/problem. so/RB/so any/DT/any ideas/NNS/ideas /,/, how/WRB/how will/MD/will we/VB/we do/VB/do this/DT/this ?/./? /:/( a/DT/a to/TO/to be/VB/be must/MD/must contain/VB/contain all/DT/all shortest/JJS/shortest path/NN/path but/CC/but never/RB/never part/NN/part of/IN/of the/DT/the part/NN/part if/IN/if x/NN/x is/VBZ/is the/DT/the part/NN/part of/IN/of the/DT/the part/NN/part from/IN/from a/DT/a to/TO/to b/VB/b then/RB/then a/DT/a to/TO/to x/NN/x is/VBZ/is the/DT/the part/NN/part of/IN/of the/DT/the part/NN/part form/NN/form the/DT/the to/TO/to b/VB/b then/RB/then a/DT/a to/TO/to x/NN/x also/RB/also be/VB/be a/DT/a shortest/NN/shortest path/NN/path we/PRP/we can/MD/can you/PRP/you some/DT/some shortest/JJS/shortest heap/NN/heap improving/VBG/improving the/DT/the path/NN/path /:/) that/IN/that is/VBZ/is an/DT/an important/JJ/important property/NN/property of/IN/of a/DT/a shortest/NN/shortest path/NNP/path. so/RB/so /,/, this/DT/this is/VBZ/is 1/CD/1 property/NN/property we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be using/NNP/using. so/RB/so /,/, what/WDT/what he/PRP/he saying/VBG/saying is/VBZ/is /,/, suppose/RB/suppose this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t /,/, this/DT/this is/VBZ/is some/DT/some path/NN/path in/IN/in the/DT/the graph/NNP/graph. there/RB/there are/VBP/are some/DT/some intermediate/JJ/intermediate vertices/NNS/vertices /,/, i/PRP/i have/VBP/have not/RB/not drawn/NNP/drawn. let/VB/let say/VBP/say /,/, x/NN/x is/VBZ/is one/CD/one of/IN/of these/DT/these vertices/NNP/vertices. then/RB/then the/DT/the part/NN/part of/IN/of this/DT/this path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x /,/, that/IN/that means/NNS/means this/DT/this part/NN/part of/IN/of the/DT/the path/NNP/path. what/WP/what i/PRP/i am/VBP/am referring/VBG/referring to/TO/to is/VBZ/is /,/, this/DT/this part/NN/part of/IN/of the/DT/the path/NN/path /,/, is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. this/DT/this is/VBZ/is also/RB/also the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 22/CD/22 /CD/) why/WRB/why ?/./? this/DT/this is/VBZ/is /,/, we/PRP/we are/VBP/are saying/VBG/saying /,/, this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to t/NNP/t. why/WRB/why should/MD/should it/PRP/it be/VB/be also/RB/also the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x ?/./? x/NN/x is/VBZ/is any/DT/any arbitrary/JJ/arbitrary vertex/NNP/vertex. we/PRP/we are/VBP/are trying/VBG/trying to/TO/to arrive/VB/arrive at/IN/at the/DT/the contradiction/NN/contradiction /,/, you/PRP/you are/VBP/are saying/NNP/saying. suppose/NN/suppose /,/, there/EX/there were/VBD/were a/DT/a better/JJR/better path/NN/path between/IN/between s/NNS/s and/CC/and x/NN/x /,/, /:/( hindi/NN/hindi /:/) so/RB/so /,/, then/RB/then the/DT/the claim/NN/claim is/VBZ/is that/IN/that the/DT/the shortest/JJS/shortest path/NN/path between/IN/between s/NNS/s and/CC/and t/NN/t is/VBZ/is this/DT/this blue/JJ/blue path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x followed/VBN/followed by/IN/by this/DT/this green/JJ/green path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t and/CC/and there/EX/there was/VBD/was nothing/NN/nothing particular/JJ/particular about/IN/about x/NNP/x. any/DT/any vertex/NN/vertex any/DT/any vertex/NN/vertex on/IN/on this/DT/this path/NN/path /,/, the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to that/DT/that vertex/NN/vertex is/VBZ/is this/DT/this path/NNP/path. /NNP/( hindi/NN/hindi /:/) by/IN/by the/DT/the way/NN/way /,/, the/DT/the blue/JJ/blue path/NN/path /:/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this is/VBZ/is also/RB/also a/DT/a shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. so/RB/so /,/, that/IN/that is/VBZ/is all/DT/all you/PRP/you are/VBP/are saying/VBG/saying /,/, this/DT/this is/VBZ/is also/RB/also /:/( hindi/NN/hindi /:/) this/DT/this part/NN/part of/IN/of the/DT/the path/NN/path is/VBZ/is also/RB/also a/DT/a shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. /NNP/( hindi/NN/hindi /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 44/CD/44 /CD/) so/RB/so /,/, what/WDT/what does/VBZ/does this/DT/this suggest/NN/suggest ?/./? this/DT/this you/PRP/you know/VBP/know /,/, this/DT/this is/VBZ/is giving/VBG/giving you/PRP/you the/DT/the following/VBG/following idea/NN/idea /:/( hindi/NN/hindi /:/) we/PRP/we will/MD/will end/VB/end up/RP/up having/VBG/having to/TO/to compute/VB/compute the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to many/JJ/many other/JJ/other vertices/NNS/vertices /,/, all/DT/all the/DT/the vertices/NNS/vertices on/IN/on the/DT/the path/NNP/path. so/RB/so /,/, what/WDT/what the/DT/the algorithm/NN/algorithm we/PRP/we are/VBP/are going/VBG/going to/TO/to discuss/VB/discuss today/NN/today is/VBZ/is actually/RB/actually going/VBG/going to/TO/to compute/VB/compute the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. not/RB/not just/RB/just t/VB/t /,/, in/IN/in fact/NN/fact /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is /,/, forget/NN/forget t/NNP/t. first/RB/first step/VB/step of/IN/of the/DT/the algorithm/NN/algorithm /,/, forget/NN/forget t/NN/t and/CC/and just/RB/just compute/JJ/compute the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NN/vertex of/IN/of the/DT/the graph/NNP/graph. once/RB/once you/PRP/you computed/VBD/computed the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NN/vertex the/DT/the graph/NN/graph /,/, you/PRP/you also/RB/also got/VBD/got the/DT/the shortest/JJS/shortest path/NN/path s/NNS/s to/TO/to t/NNP/t. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, we/PRP/we will/MD/will compute/VB/compute the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NN/vertex in/IN/in g/NNP/g. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this problem/NN/problem is/VBZ/is also/RB/also called/VBN/called as/IN/as single/JJ/single source/NN/source shortest/NN/shortest path/NN/path problem/NNP/problem. why/WRB/why ?/./? because/IN/because /,/, we/PRP/we are/VBP/are starting/VBG/starting from/IN/from 1/CD/1 particular/JJ/particular source/NN/source and/CC/and from/IN/from that/DT/that source/NN/source we/PRP/we are/VBP/are computing/VBG/computing the/DT/the shortest/JJS/shortest path/NN/path to/TO/to every/DT/every other/JJ/other vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. sometimes/RB/sometimes this/DT/this would/MD/would be/VB/be abbreviated/VBN/abbreviated as/IN/as triple/JJ/triple s/NNS/s p/NNP/p. /NNP/( sssp/NN/sssp /:/) single/JJ/single source/NN/source shortest/NN/shortest path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 43/CD/43 /CD/) now/RB/now /,/, given/VBN/given that/IN/that we/PRP/we are/VBP/are not/RB/not just/RB/just interested/JJ/interested in/IN/in the/DT/the shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t but/CC/but /,/, the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. let/NN/let see/VB/see /,/, what/WDT/what we/PRP/we can/MD/can say/VB/say about/IN/about this/DT/this example/NNP/example. we/PRP/we are/VBP/are interested/JJ/interested in/IN/in the/DT/the shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. /NNP/( hindi/NN/hindi /:/) and/CC/and without/IN/without using/VBG/using your/PRP$/your head/NN/head too/RB/too much/RB/much /,/, which/WDT/which vertex/NN/vertex /,/, you/PRP/you know/VBP/know which/WDT/which vertex/NN/vertex or/CC/or the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to which/WDT/which vertex/NN/vertex is/VBZ/is immediate/JJ/immediate ?/./? adjacent/NN/adjacent ones/NNS/ones ?/./? minimum/JJ/minimum of/IN/of the/DT/the adjacent/NN/adjacent ones/NNP/ones. we/PRP/we know/VBP/know by/IN/by looking/VBG/looking at/IN/at this/DT/this /,/, we/PRP/we know/VBP/know that/IN/that the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex is/VBZ/is 0.5/CD/0.5. but/CC/but this/DT/this /,/, the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex is/VBZ/is not/RB/not 2/CD/2. so/RB/so /,/, we/PRP/we can/MD/can not/RB/not say/VB/say that/IN/that i/PRP/i know/VBP/know the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every adjacent/NN/adjacent vertex/NNP/vertex. but/CC/but we/PRP/we know/VBP/know /,/, for/IN/for a/DT/a fact/NN/fact that/WDT/that the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s /,/, so/RB/so if/IN/if these/DT/these are/VBP/are adjacent/JJ/adjacent edges/NNS/edges or/CC/or the/DT/the 3/CD/3 adjacent/NN/adjacent vertices/NNS/vertices and/CC/and suppose/VB/suppose these/DT/these lengths/NNS/lengths were/VBD/were l1/NNP/l1 l2/NNP/l2 l3/NNP/l3. let/VBD/let us/PRP/us assume/VBP/assume l1/NNP/l1 less/RBR/less than/IN/than l2/NNP/l2 less/JJR/less than/IN/than l3/NNP/l3 /,/, then/RB/then i/PRP/i know/VBP/know for/IN/for a/DT/a fact/NN/fact that/WDT/that shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to v1/NNP/v1 is/VBZ/is l1/NNP/l1. why/WRB/why ?/./? why/WRB/why do/VBP/do i/PRP/i know/VB/know this/DT/this for/IN/for a/DT/a fact/NN/fact ?/./? any/DT/any other/JJ/other path/NN/path /,/, since/IN/since it/PRP/it has/VBZ/has to/TO/to start/VB/start from/IN/from s/NNS/s /,/, it/PRP/it has/VBZ/has to/TO/to take/VB/take some/DT/some edge/NN/edge out/RP/out of/IN/of s/NNS/s /,/, either/DT/either it/PRP/it takes/VBZ/takes this/DT/this edge/NN/edge or/CC/or this/DT/this edge/NN/edge or/CC/or this/DT/this edge/NNP/edge. if/IN/if it/PRP/it takes/VBZ/takes this/DT/this edge/NN/edge then/RB/then the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path will/MD/will be/VB/be at/IN/at least/JJS/least l2/NNP/l2. why/WRB/why ?/./? because/IN/because edge/NN/edge lengths/NNS/lengths are/VBP/are all/DT/all positive/NNP/positive. why/WRB/why negative/JJ/negative /NN/( hindi/NN/hindi /:/) has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least l2/NNP/l2 because/IN/because this/DT/this part/NN/part of/IN/of the/DT/the length/NN/length /,/, path/NN/path is/VBZ/is only/RB/only non/RB/non negative/NNP/negative. it/PRP/it can/MD/can not/RB/not be/VB/be negative/NNP/negative. similarly/RB/similarly /,/, /:/( hindi/NN/hindi /:/) so/RB/so the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least l3/NNP/l3. so/RB/so /,/, what/WDT/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to v1/NNP/v1 is/VBZ/is l1/NNP/l1 /:/( hindi/NN/hindi /:/) so/RB/so just/RB/just by/IN/by looking/VBG/looking at/IN/at this/DT/this i/PRP/i can/MD/can say/VB/say that/IN/that /,/, so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use d/NN/d to/TO/to denote/VB/denote distance/NNP/distance. so/RB/so /,/, distance/NN/distance of/IN/of vertex/NN/vertex v1/NNP/v1 i/PRP/i know/VBP/know is/VBZ/is l1/NNP/l1. what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about the/DT/the distance/NN/distance of/IN/of vertex/NN/vertex v2/NNP/v2 ?/./? d/NN/d of/IN/of v2/NNP/v2 /,/, what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about that/DT/that ?/./? greater/JJR/greater than/IN/than ?/./? greater/JJR/greater than/IN/than l1/NNP/l1 ?/./? greater/JJR/greater than/IN/than l1/NNP/l1 and/CC/and less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to l2/NNP/l2. let/VB/let us/PRP/us that/IN/that put/VBD/put down/RP/down and/CC/and similarly/RB/similarly distance/NN/distance of/IN/of v3/NNP/v3 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to l3/NNP/l3 /NNP/( hindi/NN/hindi /:/) we/PRP/we do/VBP/do not/RB/not know/VB/know the/DT/the correct/NN/correct distance/NNP/distance. but/CC/but /,/, we/PRP/we have/VBP/have an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the actual/JJ/actual distance/NNP/distance. this/DT/this is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound that/WDT/that this/DT/this actual/JJ/actual distance/NN/distance is/VBZ/is only/RB/only less/JJR/less than/IN/than this/DT/this value/NNP/value. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 44/CD/44 /CD/) so/RB/so /,/, what/WDT/what are/VBP/are you/PRP/you going/VBG/going to/TO/to do/VB/do now/RB/now ?/./? we/PRP/we know/VBP/know that/IN/that actual/JJ/actual distance/NN/distance of/IN/of v1/NNP/v1. now/RB/now /,/, how/WRB/how can/MD/can we/PRP/we extend/VBP/extend it/PRP/it ?/./? how/WRB/how can/MD/can we/PRP/we find/VB/find out/RP/out the/DT/the /,/, we/PRP/we know/VBP/know i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out the/DT/the distance/NN/distance from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NNP/vertex. /NNP/( hindi/NN/hindi /:/) /:/( initially/RB/initially the/DT/the directed/VBN/directed length/NN/length we/PRP/we have/VBP/have each/DT/each vertex/NN/vertex have/VBP/have vertices/NNS/vertices the/DT/the shortest/JJS/shortest path/NN/path have/VBP/have length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path found/VBD/found nay/NN/nay point/NN/point if/IN/if you/PRP/you at/IN/at vertex/NN/vertex found/VBD/found with/IN/with visited/VBN/visited vertex/NN/vertex then/RB/then compare/VB/compare to/TO/to the/DT/the are/VBP/are in/IN/in the/DT/the length/NN/length already/RB/already stored/VBN/stored in/IN/in the/DT/the vertex/NN/vertex to/TO/to the/DT/the some/DT/some of/IN/of the/DT/the path/NN/path /:/) /:/( hindi/NN/hindi /:/) i/PRP/i am/VBP/am just/RB/just taking/VBG/taking an/DT/an example/NN/example and/CC/and soon/RB/soon we/PRP/we will/MD/will concretize/VB/concretize this/DT/this algorithm/NNP/algorithm. so/RB/so /,/, do/VBP/do not/RB/not worry/VB/worry too/RB/too much/RB/much about/IN/about it/NNP/it. let/NN/let say/VBP/say /,/, v1/NNP/v1 v2/NNP/v2 v3/NNP/v3 /NNP/( hindi/NN/hindi /:/) l1/NNP/l1 l2/NNP/l2 l3/NNP/l3 edge/NN/edge lengths/NNS/lengths /:/( hindi/NN/hindi /:/) let/NN/let me/PRP/me now/RB/now replace/VB/replace them/PRP/them by/IN/by numbers/NNS/numbers because/IN/because ?/./? otherwise/RB/otherwise /,/, we/PRP/we will/MD/will keep/VB/keep having/VBG/having lots/NNS/lots of/IN/of ls/NNP/ls. so/RB/so /,/, let/VB/let me/PRP/me put/VB/put down/RP/down numbers/NNS/numbers /,/, 0.7/CD/0.7 and/CC/and say/VB/say this/DT/this is/VBZ/is 1.1/CD/1.1 and/CC/and this/DT/this is/VBZ/is 2.3/CD/2.3. so/RB/so /,/, l1/NNP/l1 is/VBZ/is the/DT/the smallest/JJS/smallest /,/, let/VB/let us/PRP/us put/VB/put down/RP/down more/JJR/more numbers/NNP/numbers. /:/( hindi/NN/hindi /:/) let/NN/let us/PRP/us try/VBP/try and/CC/and understand/NN/understand what/WP/what i/PRP/i have/VBP/have done/VBN/done here/RB/here ?/./? just/RB/just to/TO/to separate/VB/separate this/DT/this out/NNP/out. so/RB/so /,/, we/PRP/we know/VBP/know this/DT/this /,/, let/VB/let me/PRP/me circle/VB/circle it/NNP/it. we/PRP/we know/VBP/know the/DT/the correct/NN/correct distance/NN/distance of/IN/of vertex/NN/vertex v/NN/v and/CC/and the/DT/the correct/NN/correct distance/NN/distance of/IN/of vertex/NN/vertex v1/NNP/v1 is/VBZ/is 0.7/CD/0.7. now/RB/now /,/, looking/VBG/looking at/IN/at the/DT/the picture/NN/picture can/MD/can i/VB/i say/VB/say /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the only/JJ/only /,/, you/PRP/you know/VBP/know there/RB/there might/MD/might be/VB/be other/JJ/other edges/NNS/edges and/CC/and so/RB/so on/IN/on between/IN/between theses/NNS/theses vertices/NNS/vertices /,/, i/PRP/i have/VBP/have not/RB/not shown/VBN/shown those/DT/those edges/NNP/edges. i/PRP/i have/VBP/have just/RB/just looked/VBN/looked at/IN/at the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of v1/NNP/v1 now/RB/now and/CC/and there/EX/there are/VBP/are 5/CD/5 edges/NNS/edges /,/, 4/CD/4 edges/NNS/edges going/VBG/going out/RP/out of/IN/of v1/NNP/v1. now/RB/now /,/, looking/VBG/looking at/IN/at these/DT/these edges/NNS/edges can/MD/can i/VB/i say/VB/say for/IN/for certain/JJ/certain /,/, what/WP/what the/DT/the shortest/JJS/shortest path/NN/path to/TO/to some/DT/some other/JJ/other vertex/NN/vertex ?/./? i/PRP/i am/VBP/am not/RB/not saying/VBG/saying to/TO/to this/DT/this specific/JJ/specific vertex/NNP/vertex. what/WP/what is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path /,/, i/PRP/i just/RB/just want/VBP/want to/TO/to know/VB/know the/DT/the correct/NN/correct shortest/NN/shortest path/NN/path to/TO/to some/DT/some 1/CD/1 vertex/NNP/vertex. no/DT/no /,/, you/PRP/you are/VBP/are going/VBG/going into/IN/into details/NNP/details. let/VB/let us/PRP/us understand/VBP/understand what/WP/what the/DT/the idea/NN/idea is/NNP/is. let/NN/let us/PRP/us look/VBP/look at/IN/at vertex/NN/vertex v2/NNP/v2 or/CC/or let/VB/let us/PRP/us start/VB/start by/IN/by looking/VBG/looking at/IN/at vertex/NN/vertex v3/NNP/v3 /NNP/( hindi/NN/hindi /:/) we/PRP/we had/VBD/had seen/VBN/seen that/IN/that /-NONE-/( hindi/VBP/hindi /:/) we/PRP/we had/VBD/had seen/VBN/seen only/RB/only this/DT/this edge/NN/edge and/CC/and we/PRP/we had/VBD/had said/VBN/said that/IN/that the/DT/the distance/NN/distance of/IN/of v3/NNP/v3 from/IN/from s/NNS/s is/VBZ/is less/JJR/less than/IN/than 2.3/CD/2.3. that/WDT/that is/VBZ/is what/WP/what we/PRP/we had/VBD/had so/RB/so far/RB/far /,/, it/PRP/it less/JJR/less than/IN/than 2.3/CD/2.3. now/RB/now /,/, can/MD/can i/PRP/i say/VB/say something/NN/something better/RBR/better ?/./? because/IN/because /,/, now/RB/now i/PRP/i see/VBP/see this/DT/this edge/NN/edge from/IN/from v1/NNP/v1 to/TO/to v3/NNP/v3 /,/, i/PRP/i know/VBP/know the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to v1/NNP/v1 /,/, what/WP/what is/VBZ/is it/PRP/it ?/./? 0.7/CD/0.7. i/PRP/i see/VBP/see that/IN/that the/DT/the length/NN/length of/IN/of this/DT/this edge/NN/edge is/VBZ/is 0.3/CD/0.3. so/RB/so /,/, 0.7/CD/0.7 plus/CC/plus 0.3/CD/0.3 means/NNS/means 1/CD/1. so/RB/so /,/, i/PRP/i have/VBP/have found/VBN/found another/DT/another path/NN/path from/IN/from s/NNS/s to/TO/to v3/NNP/v3 of/IN/of length/NN/length 1/CD/1. i/PRP/i can/MD/can say/VB/say that/IN/that the/DT/the distance/NN/distance of/IN/of v3/NNP/v3 from/IN/from s/NNS/s is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 1/CD/1. now/RB/now /,/, let/VB/let us/PRP/us look/VB/look at/IN/at vertex/NN/vertex v2/NNP/v2. 1/CD/1 /,/, we/PRP/we will/MD/will come/VB/come to/TO/to why/WRB/why it/PRP/it is/VBZ/is exactly/RB/exactly /,/, 1/CD/1 step/NN/step at/IN/at a/DT/a time/NNP/time. all/DT/all i/PRP/i will/MD/will say/VB/say is/VBZ/is v3/NNP/v3 has/VBZ/has a/DT/a /,/, the/DT/the distance/NN/distance of/IN/of v3/NNP/v3 from/IN/from s/NNS/s is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 1/CD/1. that/IN/that is/VBZ/is all/DT/all i/PRP/i can/MD/can say/VB/say at/IN/at this/DT/this point/NN/point /,/, till/IN/till i/PRP/i bring/VBG/bring in/IN/in some/DT/some additional/JJ/additional argument/NNP/argument. so/RB/so /,/, the/DT/the distance/NN/distance of/IN/of v3/NNP/v3 from/IN/from s/NNS/s is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 1/CD/1. that/IN/that is/VBZ/is all/DT/all i/PRP/i can/MD/can say/NNP/say. what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about the/DT/the distance/NN/distance of/IN/of v2/NNP/v2 from/IN/from s/NNS/s ?/./? well/RB/well /,/, i/PRP/i have/VBP/have found/VBN/found another/DT/another path/NN/path to/TO/to v2/NNP/v2. that/IN/that is/VBZ/is the/DT/the path/NN/path which/WDT/which goes/VBZ/goes from/IN/from s/NNS/s to/TO/to v1/NNP/v1 and/CC/and then/RB/then follows/VBZ/follows the/DT/the edge/NN/edge v1/NNP/v1 /,/, v2/NNP/v2. but/CC/but this/DT/this path/NN/path /,/, any/DT/any such/JJ/such path/NN/path is/VBZ/is going/VBG/going to/TO/to have/VB/have a/DT/a length/NN/length of/IN/of at/IN/at least/JJS/least 1.3/CD/1.3. in/IN/in particular/JJ/particular there/EX/there is/VBZ/is only/RB/only 1/CD/1 path/NN/path at/IN/at this/DT/this point/NN/point but/CC/but this/DT/this has/VBZ/has a/DT/a length/NN/length of/IN/of 1.2/CD/1.2 and/CC/and since/IN/since earlier/JJR/earlier i/PRP/i had/VBD/had a/DT/a length/NN/length of/IN/of 1.1/CD/1.1 /,/, well/RB/well /,/, i/PRP/i have/VBP/have not/RB/not found/VBN/found a/DT/a better/JJR/better path/NN/path to/TO/to v2/NNP/v2. what/WP/what can/MD/can i/VB/i say/VB/say about/IN/about v4/NNP/v4 now/RB/now ?/./? well/RB/well /,/, v4/NNP/v4 /NNP/( hindi/NN/hindi /:/) there/EX/there was/VBD/was no/DT/no path/NN/path from/IN/from s/NNS/s to/TO/to v4/NNP/v4. now/RB/now /,/, i/PRP/i am/VBP/am seeing/VBG/seeing a/DT/a path/NN/path from/IN/from s/NNS/s to/TO/to v4/NNP/v4 whose/WP$/whose length/NN/length is/VBZ/is ;/:/; well/RB/well /,/, this/DT/this is/VBZ/is an/DT/an edge/NN/edge from/IN/from v1/NNP/v1 to/TO/to v4/NNP/v4 /,/, so/RB/so first/RB/first i/PRP/i get/VBP/get to/TO/to v1/NNP/v1. i/PRP/i know/VBP/know the/DT/the shortest/JJS/shortest path/NN/path is/VBZ/is from/IN/from s/NNS/s to/TO/to v1/NNP/v1 that/IN/that is/VBZ/is of/IN/of length/NN/length 0.7/CD/0.7. so/RB/so /,/, this/DT/this is/VBZ/is 1.1/CD/1.1 and/CC/and distance/NN/distance to/TO/to v5/NNP/v5 is/VBZ/is 1.3/CD/1.3 /,/, 0.7/CD/0.7 plus/CC/plus 0.6/CD/0.6. so/RB/so /,/, these/DT/these are/VBP/are my/PRP$/my new/JJ/new upper/NN/upper bounds/NNS/bounds in/IN/in the/DT/the distance/NNP/distance. i/PRP/i call/VBP/call them/PRP/them tentative/JJ/tentative distances/NNP/distances. this/DT/this of/IN/of course/NN/course is/VBZ/is fixed/VBN/fixed /,/, final/NNP/final. this/DT/this will/MD/will not/RB/not change/NNP/change. this/DT/this was/VBD/was the/DT/the shortest/JJS/shortest distance/NN/distance /,/, this/DT/this can/MD/can never/RB/never reduce/VB/reduce but/CC/but the/DT/the other/JJ/other distance/NN/distance is/VBZ/is might/MD/might reduce/VB/reduce as/RB/as the/DT/the algorithm/NN/algorithm proceeds/NNP/proceeds. for/IN/for instance/NN/instance /,/, this/DT/this distance/NN/distance /,/, this/DT/this tentative/JJ/tentative distance/NN/distance which/WDT/which was/VBD/was earlier/RBR/earlier 2.3/CD/2.3 has/VBZ/has now/RB/now reduced/VBN/reduced to/TO/to 1.1/CD/1.1 /,/, 1/CD/1 sorry/NNP/sorry. this/DT/this did/VBD/did not/RB/not reduce/NNP/reduce. this/DT/this earlier/JJR/earlier was/VBD/was not/RB/not reachable/JJ/reachable at/IN/at all/NNP/all. let/VB/let say/VBP/say /,/, it/PRP/it was/VBD/was infinite/JJ/infinite earlier/NNP/earlier. now/RB/now /,/, it/PRP/it has/VBZ/has 1.1/CD/1.1 and/CC/and this/DT/this also/RB/also became/VBD/became /,/, came/VBD/came down/RB/down from/IN/from infinite/JJ/infinite to/TO/to 1.1/CD/1.1. now/RB/now /,/, what/WDT/what i/PRP/i am/VBP/am claiming/VBG/claiming is/VBZ/is that/IN/that let/NN/let me/PRP/me look/VBP/look at/IN/at the/DT/the smallest/JJS/smallest of/IN/of these/DT/these which/WDT/which is/VBZ/is 1/CD/1 and/CC/and this/DT/this is/VBZ/is the/DT/the correct/NN/correct distance/NN/distance of/IN/of v3/NNP/v3 from/IN/from s/NNP/s. /NNP/( hindi/NN/hindi /:/) at/IN/at least/JJS/least 3/CD/3 edges/NNS/edges ?/./? no/DT/no /,/, we/PRP/we can/MD/can not/RB/not say/VB/say such/JJ/such a/DT/a thing/NNP/thing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 48/CD/48 /CD/) conversation/NN/conversation /:/( hindi/NN/hindi /:/) this/DT/this is/VBZ/is what/WP/what /,/, so/RB/so let/VB/let us/PRP/us first/RB/first say/VBP/say what/WP/what the/DT/the algorithm/NN/algorithm is/VBZ/is and/CC/and we/PRP/we will/MD/will have/VB/have to/TO/to prove/VB/prove its/PRP$/its correctness/NN/correctness and/CC/and we/PRP/we will/MD/will have/VB/have to/TO/to look/VB/look at/IN/at its/PRP$/its implementation/NN/implementation and/CC/and we/PRP/we have/VBP/have 3/CD/3 lectures/NNS/lectures do/VBP/do it/NNP/it. so/RB/so do/VBP/do not/RB/not /,/, let/VB/let us/PRP/us not/RB/not rush/VB/rush ourselves/NNP/ourselves. this/DT/this is/VBZ/is not/RB/not a/DT/a straight/JJ/straight forward/NN/forward algorithm/NN/algorithm but/CC/but let/VB/let us/PRP/us understand/VBP/understand what/WP/what the/DT/the algorithm/NN/algorithm is/VBZ/is first/NNP/first. so/RB/so /,/, once/RB/once the/DT/the algorithm/NN/algorithm in/IN/in grained/VBN/grained then/RB/then we/PRP/we will/MD/will see/VB/see what/WP/what the/DT/the /,/, why/WRB/why it/PRP/it is/VBZ/is correct/NNP/correct. so/RB/so /,/, what/WDT/what is/VBZ/is my/PRP$/my algorithm/NN/algorithm now/RB/now ?/./? so/RB/so /,/, my/PRP$/my algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to have/VB/have a/DT/a set/NN/set s/VBZ/s of/IN/of vertices/NNS/vertices /:/( hindi/NN/hindi /:/) what/WP/what does/VBZ/does this/DT/this set/NN/set denote/NN/denote ?/./? this/DT/this set/NN/set is/VBZ/is the/DT/the set/NN/set of/IN/of vertices/NNS/vertices to/TO/to which/WDT/which i/PRP/i have/VBP/have found/VBN/found the/DT/the shortest/JJS/shortest path/NN/path from/IN/from little/JJ/little s/NNP/s. /NNP/( hindi/NN/hindi /:/) so/RB/so this/DT/this /,/, what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen in/IN/in this/DT/this algorithm/NN/algorithm is/VBZ/is with/IN/with every/DT/every step/NN/step of/IN/of algorithm/NN/algorithm /,/, i/PRP/i would/MD/would have/VB/have found/VBN/found the/DT/the shortest/JJS/shortest path/NN/path to/TO/to 1/CD/1 more/JJR/more vertex/NNP/vertex. when/WRB/when i/PRP/i say/VBP/say i/PRP/i found/VBD/found the/DT/the shortest/JJS/shortest path/NN/path ;/:/; i/PRP/i mean/VBP/mean these/DT/these shortest/JJS/shortest path/NN/path /,/, not/RB/not an/DT/an upper/JJ/upper bound/NN/bound or/CC/or any/DT/any such/JJ/such things/NNP/things. i/PRP/i have/VBP/have found/VBN/found the/DT/the correct/NN/correct value/NN/value of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to that/DT/that vertex/NNP/vertex. /NNP/( hindi/NN/hindi /:/) i/PRP/i would/MD/would include/VB/include 1/CD/1 vertex/NN/vertex into/IN/into the/DT/the set/NNP/set. at/IN/at every/DT/every step/NN/step i/PRP/i will/MD/will include/VB/include 1/CD/1 vertex/NN/vertex into/IN/into the/DT/the step/NNP/step. so/RB/so at/IN/at any/DT/any point/NN/point /,/, this/DT/this is/VBZ/is the/DT/the set/NN/set of/IN/of vertices/NNS/vertices which/WDT/which i/PRP/i have/VBP/have found/VBN/found the/DT/the shortest/JJS/shortest path/NN/path to/TO/to and/CC/and this/DT/this is/VBZ/is the/DT/the set/NN/set of/IN/of vertices/NNS/vertices for/IN/for which/WDT/which i/PRP/i have/VBP/have not/RB/not yet/RB/yet found/VBN/found the/DT/the shortest/JJS/shortest path/NNP/path. i/PRP/i just/RB/just have/VBP/have an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the value/NN/value of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. i/PRP/i know/VBP/know that/IN/that the/DT/the shortest/JJS/shortest path/NN/path less/RBR/less than/IN/than this/DT/this number/NNP/number. but/CC/but /,/, i/PRP/i do/VBP/do not/RB/not really/RB/really know/VB/know /,/, what/WDT/what is/VBZ/is the/DT/the correct/NN/correct value/NN/value of/IN/of shortest/NN/shortest path/NN/path ?/./? so/RB/so /,/, each/DT/each of/IN/of these/DT/these vertices/NNS/vertices has/VBZ/has an/DT/an upper/JJ/upper bound/NNP/bound. this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex v/NN/v /,/, let/VB/let d/JJ/d of/IN/of v/NN/v /,/, so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down ;/:/; for/IN/for all/PDT/all v/NN/v in/IN/in s/NNS/s complement/NN/complement /,/, d/VBD/d of/IN/of v/NN/v is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to v/NNP/v. you/PRP/you understand/VBP/understand what/WP/what i/PRP/i mean/VBP/mean by/IN/by upper/JJ/upper bound/NN/bound ?/./? it/PRP/it is/VBZ/is a/DT/a quantity/NN/quantity which/WDT/which is/VBZ/is only/RB/only larger/JJR/larger than/IN/than the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. it/PRP/it can/MD/can never/RB/never be/VB/be smaller/JJR/smaller than/IN/than the/DT/the the/DT/the shortest/JJS/shortest path/NN/path and/CC/and for/IN/for all/DT/all v/NN/v in/IN/in s/NNS/s /,/, d/VBD/d of/IN/of v/NN/v is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. /NNP/( hindi/NN/hindi /:/) i/PRP/i am/VBP/am just/RB/just telling/VBG/telling you/PRP/you /,/, what/WP/what are/VBP/are the/DT/the various/JJ/various invariance/NN/invariance the/DT/the algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to ?/./? /:/( hindi/NN/hindi /:/) these/DT/these quantities/NNS/quantities would/MD/would be/VB/be upper/JJ/upper bound/NN/bound and/CC/and this/DT/this could/MD/could be/VB/be the/DT/the actual/JJ/actual values/NNP/values. now/RB/now /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you how/WRB/how do/VBP/do i/PRP/i figure/VB/figure out/RP/out /,/, how/WRB/how do/VBP/do i/PRP/i move/VB/move 1/CD/1 vertex/NN/vertex from/IN/from here/RB/here to/TO/to there/EX/there ?/./? which/WDT/which is/VBZ/is the/DT/the vertex/NN/vertex i/PRP/i move/VBP/move from/IN/from here/RB/here to/TO/to there/EX/there and/CC/and what/WP/what happens/NNS/happens when/WRB/when i/PRP/i move/VBP/move that/IN/that vertex/NN/vertex ?/./? so/RB/so first/RB/first /,/, which/WDT/which is/VBZ/is the/DT/the vertex/NN/vertex i/PRP/i will/MD/will move/VB/move from/IN/from here/RB/here to/TO/to here/RB/here ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 27/CD/27 /CD/) so/RB/so /,/, i/PRP/i find/VBP/find the/DT/the vertex/NN/vertex in/IN/in s/NNS/s complement/NN/complement for/IN/for which/WDT/which d/NN/d is/VBZ/is minimum/JJ/minimum is/VBZ/is moved/VBN/moved to/TO/to s/NNS/s /:/( hindi/NN/hindi /:/) i/PRP/i have/VBP/have my/PRP$/my s/NNS/s complement/NN/complement /,/, i/PRP/i have/VBP/have my/PRP$/my s/NNS/s /,/, i/PRP/i have/VBP/have these/DT/these tentative/JJ/tentative distance/NN/distance on/IN/on all/DT/all of/IN/of these/DT/these vertices/NNP/vertices. /NNP/( hindi/NN/hindi /:/) i/PRP/i will/MD/will move/VB/move that/IN/that vertex/NN/vertex here/RB/here /./( hindi/NN/hindi /:/) this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex which/WDT/which will/MD/will move/VB/move from/IN/from s/NNS/s complement/NN/complement to/TO/to s/NNS/s /:/( hindi/NN/hindi /:/) so/RB/so understand/VBP/understand /,/, what/WP/what moves/NNS/moves from/IN/from s/NNS/s complements/NNP/complements. now/RB/now /,/, what/WDT/what happens/NNS/happens when/WRB/when this/DT/this move/NN/move ?/./? when/WRB/when this/DT/this move/NN/move is/VBZ/is down/IN/down ?/./? how/WRB/how do/VBP/do these/DT/these numbers/NNS/numbers change/VBP/change ?/./? so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we update/VB/update ?/./? that/IN/that is/VBZ/is what/WP/what we/PRP/we have/VBP/have to/TO/to determine/VB/determine now/NNP/now. /NNP/( hindi/NN/hindi /:/) let/NN/let say/VBP/say /,/, i/PRP/i am/VBP/am looking/VBG/looking at/IN/at this/DT/this edge/NN/edge /,/, /:/( hindi/NN/hindi /:/) from/IN/from what/WP/what we/PRP/we have/VBP/have said/VBN/said /,/, the/DT/the right/NN/right distance/NN/distance from/IN/from little/JJ/little s/NNS/s to/TO/to this/DT/this vertex/NN/vertex w/NN/w will/MD/will now/RB/now become/VB/become 1.1/CD/1.1 /,/, will/MD/will be/VB/be 1.1/CD/1.1. so/RB/so /,/, i/PRP/i know/VBP/know that/IN/that from/IN/from s/NNS/s /,/, i/PRP/i can/MD/can reach/VB/reach w/NN/w using/VBG/using the/DT/the path/NN/path of/IN/of length/NN/length 1.1/CD/1.1 which/WDT/which means/VBZ/means that/DT/that i/PRP/i can/MD/can reach/VB/reach this/DT/this vertex/NN/vertex by/IN/by using/VBG/using the/DT/the path/NN/path of/IN/of length/NN/length 1.1/CD/1.1 ?/./? 3/CD/3 /,/, 4.1/CD/4.1. so/RB/so /,/, i/PRP/i can/MD/can change/VB/change this/DT/this 9/CD/9 to/TO/to 4.1/CD/4.1 now/RB/now and/CC/and this/DT/this is/VBZ/is my/PRP$/my new/JJ/new upper/NN/upper bound/NN/bound or/CC/or the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NNP/vertex. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how i/PRP/i am/VBP/am going/VBG/going to/TO/to update/VB/update these/DT/these labels/NNP/labels. these/DT/these ds/NNS/ds are/VBP/are also/RB/also called/VBN/called distance/NN/distance labels/NNP/labels. /NNP/( hindi/NN/hindi /:/) i/PRP/i have/VBP/have not/RB/not told/VBN/told you/PRP/you /,/, you/PRP/you have/VBP/have a/DT/a slide/NN/slide ?/./? of/IN/of why/WRB/why we/PRP/we are/VBP/are doing/VBG/doing ?/./? what/WP/what we/PRP/we are/VBP/are doing/VBG/doing ?/./? but/CC/but /,/, we/PRP/we have/VBP/have not/RB/not discussed/VBN/discussed why/WRB/why it/PRP/it is/VBZ/is not/RB/not correct/NNP/correct. we/PRP/we will/MD/will do/VB/do the/DT/the correctness/NN/correctness for/IN/for this/NNP/this. so/RB/so /,/, do/VBP/do not/RB/not lose/VB/lose heart/NNP/heart. i/PRP/i first/RB/first want/VBP/want to/TO/to make/VB/make sure/JJ/sure that/IN/that you/PRP/you understand/VBP/understand what/WP/what the/DT/the algorithm/NN/algorithm is/NNP/is. /NNP/( hindi/NN/hindi /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 34/CD/34 /CD/) understanding/NN/understanding will/MD/will be/VB/be complete/JJ/complete after/IN/after we/PRP/we write/VBP/write down/RP/down the/DT/the pseudo/NN/pseudo code/NNP/code. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do that/NNP/that. so/RB/so this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be almost/RB/almost exactly/RB/exactly like/IN/like prim/JJ/prim ?/./? s/NNS/s algorithm/VBP/algorithm with/IN/with a/DT/a very/RB/very small/JJ/small modification/NNP/modification. so/RB/so /,/, you/PRP/you can/MD/can now/RB/now start/VB/start telling/VBG/telling me/PRP/me what/WP/what i/PRP/i should/MD/should do/VB/do ?/./? what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? what/WP/what should/MD/should my/PRP$/my initial/JJ/initial values/NNS/values of/IN/of distance/NN/distance labels/NNS/labels be/VB/be ?/./? infinite/JJ/infinite /,/, distance/NN/distance label/NN/label recall/NN/recall /,/, we/PRP/we said/VBD/said is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to that/DT/that vertex/NNP/vertex. since/IN/since /,/, initially/RB/initially i/PRP/i have/VBP/have no/DT/no clue/NN/clue what/WP/what those/DT/those things/NNS/things are/VBP/are /,/, i/PRP/i put/VBD/put every/DT/every vertex/NN/vertex /,/, i/PRP/i give/VBP/give every/DT/every vertex/NN/vertex distance/NN/distance labels/NNS/labels of/IN/of d/NN/d of/IN/of v/NN/v equals/NNS/equals infinite/VBP/infinite and/CC/and d/NN/d of/IN/of s/NNS/s is/VBZ/is 0/-NONE-/0 /,/, distance/NN/distance of/IN/of s/NNS/s is/VBZ/is 0/-NONE-/0 because/IN/because it/PRP/it is/VBZ/is ?/./? now/RB/now /,/, what/WDT/what should/MD/should i/PRP/i do/VBP/do ?/./? i/PRP/i should/MD/should take/VB/take vertex/NN/vertex with/IN/with the/DT/the /,/, at/IN/at any/DT/any step/NN/step what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? i/PRP/i take/VBP/take the/DT/the vertex/NN/vertex to/TO/to the/DT/the smallest/JJS/smallest distance/NN/distance labels/NNP/labels. so/RB/so /,/, all/DT/all of/IN/of these/DT/these guys/NNS/guys should/MD/should be/VB/be put/VBN/put into/IN/into a/DT/a heap/NNP/heap. so/RB/so /,/, for/IN/for all/PDT/all v/NN/v belonging/VBG/belonging to/TO/to v/VB/v /,/, dv/NN/dv equals/NNS/equals infinity/NN/infinity and/CC/and h/NN/h dot/NN/dot insert/NN/insert v/NN/v comma/NN/comma dv/NNP/dv. i/PRP/i have/VBP/have inserted/VBN/inserted the/DT/the node/NN/node v/NN/v with/IN/with priority/NN/priority /,/, dv/NNP/dv. this/DT/this guy/NN/guy also/RB/also i/PRP/i am/VBP/am going/VBG/going to/TO/to insert/NNP/insert. h/NN/h dot/VBD/dot insert/NN/insert s/NNS/s comma/VBP/comma 0/CD/0. so/RB/so /,/, the/DT/the minimum/JJ/minimum /NN/( hindi/NN/hindi /:/) we/PRP/we have/VBP/have already/RB/already inserted/VBN/inserted /,/, you/PRP/you are/VBP/are saying/VBG/saying there/NNP/there. let/NN/let say/VBP/say decrease/NN/decrease /,/, let/VB/let us/PRP/us call/MD/call it/PRP/it decrease/VB/decrease priority/NNP/priority. /NNP/( hindi/NN/hindi /:/) in/IN/in my/PRP$/my heap/NN/heap the/DT/the minimum/JJ/minimum /,/, the/DT/the top/JJ/top element/NN/element will/MD/will be/VB/be s/NNP/s. i/PRP/i should/MD/should now/RB/now remove/VB/remove this/DT/this element/NNP/element. what/WP/what should/MD/should i/VB/i do/VBP/do ?/./? i/PRP/i should/MD/should remove/VB/remove the/DT/the minimum/NNP/minimum. did/VBD/did i/PRP/i also/RB/also remove/VBP/remove the/DT/the minimum/JJ/minimum in/IN/in the/DT/the case/NN/case of/IN/of prim/JJ/prim ?/./? s/NNS/s algorithm/VBP/algorithm yesterday/NN/yesterday ?/./? or/CC/or we/PRP/we just/RB/just did/VBD/did the/DT/the find/NN/find min/NN/min ?/./? that/IN/that was/VBD/was a/DT/a mistake/NNP/mistake. correct/NN/correct that/WDT/that in/IN/in your/PRP$/your notes/NNP/notes. we/PRP/we do/VBP/do not/RB/not just/RB/just have/VBP/have to/TO/to do/VB/do a/DT/a find/NN/find min/NN/min /,/, we/PRP/we also/RB/also have/VBP/have to/TO/to remove/VB/remove it/PRP/it from/IN/from there/NNP/there. because/IN/because recall/JJ/recall /,/, the/DT/the only/JJ/only vertices/NNS/vertices that/WDT/that we/PRP/we are/VBP/are keeping/VBG/keeping in/IN/in the/DT/the heap/NN/heap all/DT/all the/DT/the vertices/NNS/vertices on/IN/on the/DT/the s/NNS/s complement/VBP/complement side/NNP/side. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this and/CC/and you/PRP/you can/MD/can then/RB/then go/VB/go back/RB/back and/CC/and look/VB/look at/IN/at your/PRP$/your prim/NN/prim ?/./? s/NNS/s notes/NNS/notes again/NNP/again. so/RB/so /,/, what/WDT/what should/MD/should i/PRP/i do/VBP/do first/RB/first ?/./? i/PRP/i should/MD/should remove/VB/remove the/DT/the minimum/JJ/minimum element/NNP/element. so/RB/so /,/, h/JJ/h dot/NN/dot delete/NN/delete min/NN/min and/CC/and let/VB/let say/NN/say /,/, this/DT/this is/VBZ/is vertex/NN/vertex v/CC/v. so/RB/so /,/, i/PRP/i get/VBP/get the/DT/the minimum/JJ/minimum element/NN/element /,/, the/DT/the vertex/NN/vertex with/IN/with the/DT/the minimum/JJ/minimum priority/NN/priority and/CC/and that/IN/that say/NN/say let/VB/let say/NN/say that/IN/that vertex/NN/vertex v/CC/v. what/WP/what should/MD/should i/VB/i do/VBP/do now/RB/now ?/./? this/DT/this i/PRP/i got/VBD/got as/IN/as the/DT/the minimum/JJ/minimum vertex/NN/vertex /,/, i/PRP/i should/MD/should look/VB/look at/IN/at the/DT/the edges/NNS/edges /,/, i/PRP/i should/MD/should look/VB/look at/IN/at the/DT/the edges/NNS/edges going/VBG/going out/RP/out of/IN/of this/DT/this vertex/NN/vertex or/CC/or the/DT/the same/JJ/same as/IN/as saying/VBG/saying /,/, let/VB/let me/PRP/me look/VB/look at/IN/at the/DT/the adjacent/NN/adjacent vertices/NNP/vertices. so/RB/so /,/, for/IN/for all/PDT/all w/NN/w /,/, let/VB/let me/PRP/me just/RB/just say/VBP/say /,/, out/IN/out adjacent/NN/adjacent so/RB/so it/PRP/it is/VBZ/is complete/JJ/complete clear/JJ/clear what/WP/what i/PRP/i am/VBP/am saying/VBG/saying /,/, out/IN/out adjacent/NN/adjacent to/TO/to v/VB/v do/NNP/do. so/RB/so /,/, i/PRP/i am/VBP/am looking/VBG/looking at/IN/at this/DT/this vertex/NN/vertex w/NN/w which/WDT/which is/VBZ/is out/RP/out adjacent/NN/adjacent to/TO/to v/NNP/v. now/RB/now /,/, i/PRP/i have/VBP/have to/TO/to update/VB/update its/PRP$/its label/NNP/label. when/WRB/when should/MD/should i/VB/i update/JJ/update the/DT/the label/NN/label of/IN/of w/NN/w ?/./? w/NN/w already/RB/already has/VBZ/has a/DT/a label/NNP/label. what/WP/what is/VBZ/is that/IN/that label/NN/label ?/./? that/IN/that label/NN/label is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the shortest/JJS/shortest path/NNP/path. basically/RB/basically /,/, that/IN/that label/NN/label is/VBZ/is saying/VBG/saying /NN/( hindi/NN/hindi /:/) now/RB/now we/PRP/we are/VBP/are seeing/VBG/seeing a/DT/a shorter/NN/shorter path/NNP/path. but/CC/but /,/, what/WP/what she/PRP/she is/VBZ/is saying/VBG/saying is/VBZ/is that/IN/that will/MD/will we/VB/we /,/, we/PRP/we should/MD/should update/VB/update w/NN/w only/RB/only if/IN/if it/PRP/it is/VBZ/is in/IN/in s/NNS/s path/NNP/path. /NNP/( hindi/NN/hindi /:/) even/RB/even if/IN/if i/PRP/i were/VBD/were to/TO/to not/RB/not to/TO/to worry/VB/worry about/IN/about that/DT/that /,/, the/DT/the point/NN/point is/VBZ/is i/PRP/i have/VBP/have that/IN/that i/PRP/i have/VBP/have already/RB/already found/VBN/found the/DT/the shortest/JJS/shortest path/NN/path to/TO/to w/NNP/w. if/IN/if w/NN/w were/VBD/were in/IN/in s/NNS/s that/WDT/that means/VBZ/means i/PRP/i have/VBP/have already/RB/already found/VBN/found the/DT/the shortest/JJS/shortest path/NN/path to/TO/to w/NNP/w. then/RB/then there/RB/there is/VBZ/is no/DT/no way/NN/way it/PRP/it is/VBZ/is getting/VBG/getting updated/VBN/updated now/NNP/now. because/IN/because /,/, if/IN/if it/PRP/it is/VBZ/is getting/VBG/getting updated/VBN/updated ;/:/; there/EX/there is/VBZ/is something/NN/something seriously/RB/seriously wrong/JJ/wrong with/IN/with what/WP/what i/PRP/i am/VBP/am saying/NNP/saying. think/NN/think about/IN/about this/NNP/this. we/PRP/we do/VBP/do not/RB/not really/RB/really need/VBP/need to/TO/to maintain/VB/maintain this/DT/this information/NN/information in/IN/in this/DT/this particular/JJ/particular case/NNP/case. so/RB/so /,/, when/WRB/when should/MD/should i/VB/i update/JJ/update w/NN/w or/CC/or distance/NN/distance label/NN/label of/IN/of w/NN/w ?/./? if/IN/if i/PRP/i find/VBP/find a/DT/a better/JJR/better path/NN/path to/TO/to w/VB/w and/CC/and what/WP/what would/MD/would be/VB/be the/DT/the better/JJR/better path/NN/path ?/./? through/IN/through v/NN/v /,/, so/RB/so d/JJ/d of/IN/of w/NN/w equals/NNS/equals minimum/VBP/minimum /,/, d/JJ/d of/IN/of w/NN/w comma/NN/comma /,/, d/VBD/d of/IN/of v/NN/v plus/CC/plus l/NN/l of/IN/of v/NN/v w/NNP/w. this/DT/this is/VBZ/is the/DT/the other/JJ/other path/NN/path i/PRP/i am/VBP/am saying/VBG/saying /:/: to/TO/to w/VB/w and/CC/and if/IN/if this/DT/this is/VBZ/is shorter/NN/shorter then/RB/then let/VB/let us/PRP/us put/VB/put this/DT/this as/IN/as the/DT/the new/JJ/new level/NNP/level. everyone/NN/everyone understands/VBZ/understands /:/( hindi/NN/hindi /:/) because/IN/because s/NNS/s complement/VBP/complement /:/( hindi/NN/hindi /:/) the/DT/the only/JJ/only vertices/NNS/vertices in/IN/in the/DT/the heap/NN/heap are/VBP/are the/DT/the vertices/NNS/vertices in/IN/in s/NNS/s complement/NN/complement /:/( hindi/NN/hindi /:/) h/NN/h dot/NN/dot decrease/NN/decrease priority/NN/priority /,/, w/NN/w comma/NN/comma /,/, this/DT/this is/VBZ/is together/RP/together /-NONE-/( hindi/NN/hindi /:/) this/DT/this statement/NN/statement would/MD/would not/RB/not be/VB/be executed/VBN/executed /-NONE-/( hindi/NN/hindi /:/) you/PRP/you can/MD/can do/VB/do it/PRP/it more/JJR/more carefully/RB/carefully this/DT/this implementation/NN/implementation /,/, only/RB/only if/IN/if d/JJ/d w/NN/w decreases/NNS/decreases /,/, should/MD/should you/PRP/you call/VB/call this/DT/this /,/, but/CC/but waste/NN/waste of/IN/of time/NNP/time. you/PRP/you will/MD/will have/VB/have to/TO/to follow/VB/follow a/DT/a few/JJ/few pointers/NNS/pointers to/TO/to get/VB/get to/TO/to be/VB/be heap/NN/heap /,/, make/VBP/make a/DT/a comparison/NN/comparison all/DT/all of/IN/of ?/./? /:/( hindi/NN/hindi /:/) so/RB/so /,/, we/PRP/we have/VBP/have done/NNP/done. at/IN/at the/DT/the end/NN/end /,/, where/WRB/where are/VBP/are the/DT/the shortest/JJS/shortest path/NN/path ?/./? sorry/NN/sorry /,/, what/WP/what have/VBP/have we/PRP/we found/VBN/found out/RP/out ?/./? we/PRP/we have/VBP/have only/RB/only found/VBN/found out/RP/out the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path and/CC/and they/PRP/they are/VBP/are all/RB/all setting/VBG/setting in/IN/in d/NNP/d. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 54/CD/54 /CD/) we/PRP/we will/MD/will come/VB/come to/TO/to that/DT/that /,/, we/PRP/we will/MD/will come/VB/come to/TO/to that/DT/that /NN/( hindi/NN/hindi /:/) /./. it/PRP/it is/VBZ/is not/RB/not very/RB/very different/JJ/different from/IN/from prim/JJ/prim ?/./? s/NNP/s. /NNP/( hindi/NN/hindi /:/) we/PRP/we do/VBP/do not/RB/not have/VB/have to/TO/to maintain/VB/maintain s/NNS/s and/CC/and basically/RB/basically /:/( hindi/NN/hindi /:/) this/DT/this is/VBZ/is similar/JJ/similar to/TO/to the/DT/the version/NN/version of/IN/of the/DT/the prim/JJ/prim ?/./? s/NNS/s /,/, the/DT/the second/JJ/second version/NN/version of/IN/of prim/JJ/prim ?/./? s/NNS/s that/WDT/that i/PRP/i talked/VBD/talked about/NNP/about. /NNP/( hindi/NN/hindi /:/) you/PRP/you recall/VBP/recall the/DT/the second/JJ/second version/NN/version of/IN/of prim/JJ/prim ?/./? s/NNP/s. what/WP/what was/VBD/was that/IN/that ?/./? we/PRP/we had/VBD/had maintained/VBN/maintained s/NNS/s /,/, s/NNS/s complement/VBP/complement and/CC/and for/IN/for every/DT/every vertex/NN/vertex in/IN/in s/NNS/s complement/NN/complement /,/, i/PRP/i had/VBD/had 1/CD/1 label/NNP/label. what/WP/what was/VBD/was that/IN/that label/NN/label saying/VBG/saying ?/./? look/NN/look at/IN/at all/DT/all the/DT/the edges/NNS/edges going/VBG/going from/IN/from this/DT/this vertex/NN/vertex to/TO/to s/NNS/s /,/, the/DT/the minimum/JJ/minimum of/IN/of these/DT/these edges/NNS/edges would/MD/would be/VB/be the/DT/the label/NN/label here/NNP/here. now/RB/now the/DT/the label/NN/label is/VBZ/is saying/VBG/saying /,/, completely/RB/completely something/NN/something completely/RB/completely different/JJ/different ;/:/; in/IN/in the/DT/the case/NN/case of/IN/of dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/NNP/algorithm. this/DT/this was/VBD/was prim/PRP/prim ?/./? s/NNS/s algorithm/NNP/algorithm. this/DT/this label/NN/label /,/, label/NN/label v/NN/v equals/NNS/equals minimum/VBP/minimum of/IN/of /NNP/( hindi/NN/hindi /:/) l1/NNP/l1 /,/, l2/NNP/l2 /,/, l3/NNP/l3 /,/, minimum/JJ/minimum of/IN/of these/DT/these 3/CD/3 area/NNP/area. now/RB/now again/RB/again /,/, we/PRP/we have/VBP/have a/DT/a similar/JJ/similar thing/NNP/thing. we/PRP/we have/VBP/have /,/, each/DT/each of/IN/of these/DT/these vertices/NNS/vertices has/VBZ/has a/DT/a label/NNP/label. we/PRP/we are/VBP/are calling/VBG/calling that/IN/that label/NN/label d/VBD/d now/NNP/now. but/CC/but d/VBD/d is/VBZ/is not/RB/not the/DT/the minimum/JJ/minimum of/IN/of these/DT/these 3/CD/3. it/PRP/it is/VBZ/is not/RB/not that/IN/that /,/, d/VBD/d is/VBZ/is not/RB/not the/DT/the minimum/JJ/minimum of/IN/of l1/NNP/l1 /,/, l2/NNP/l2 /,/, l3/NNP/l3 /NNP/( hindi/NN/hindi /:/) d/NN/d has/VBZ/has some/DT/some other/JJ/other semantic/JJ/semantic which/WDT/which we/PRP/we will/MD/will see/VB/see later/NNP/later. /NNP/( hindi/NN/hindi /:/) can/MD/can someone/VB/someone hazard/NN/hazard a/DT/a guess/NN/guess here/RB/here ?/./? what/WP/what did/VBD/did you/PRP/you think/VBP/think is/VBZ/is d/VBN/d ?/./? minimum/JJ/minimum of/IN/of /,/, min/IN/min of/IN/of s/NNS/s /,/, the/DT/the value/NN/value of/IN/of d/NN/d v/NN/v is/VBZ/is min/VBN/min of/IN/of d/NN/d w1/NNP/w1 plus/CC/plus l1/NNP/l1 comma/NN/comma d/VBD/d w2/NNP/w2 plus/CC/plus l2/NNP/l2 comma/NN/comma d/VBD/d w3/NNP/w3 plus/CC/plus l3/NNP/l3 /NNP/( hindi/NN/hindi /:/) all/DT/all these/DT/these vertices/NNS/vertices are/VBP/are part/NN/part of/IN/of a/DT/a heap/NNP/heap. priority/NN/priority is/VBZ/is this/DT/this label/NN/label here/RB/here and/CC/and the/DT/the priority/NN/priority is/VBZ/is this/DT/this d/NN/d value/NN/value here/RB/here /./( hindi/NN/hindi /:/) we/PRP/we will/MD/will see/VB/see why/WRB/why this/DT/this is/VBZ/is true/NNP/true. this/DT/this is/VBZ/is we/PRP/we will/MD/will see/VB/see when/WRB/when we/PRP/we are/VBP/are doing/VBG/doing the/DT/the correctness/NN/correctness of/IN/of the/DT/the procedure/NNP/procedure. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 22/CD/22 /CD/) who/WP/who can/MD/can tell/VB/tell me/PRP/me what/WP/what the/DT/the running/VBG/running time/NN/time is/VBZ/is ?/./? v/NN/v square/NN/square log/NN/log v/NN/v ?/./? why/WRB/why v/NN/v square/NN/square ?/./? i/PRP/i understand/VBP/understand /,/, but/CC/but why/WRB/why n/NN/n square/NN/square log/NN/log n/NN/n ?/./? second/JJ/second summation/NN/summation degree/NN/degree log/NN/log n/NN/n /:/( hindi/NN/hindi /:/) we/PRP/we are/VBP/are spending/VBG/spending time/NN/time proportional/JJ/proportional to/TO/to the/DT/the degree/NN/degree of/IN/of this/DT/this vertex/NN/vertex or/CC/or the/DT/the number/NN/number of/IN/of times/NNS/times we/PRP/we are/VBP/are calling/VBG/calling this/DT/this loop/NNP/loop. time/NN/time will/MD/will be/VB/be log/NN/log n/NN/n times/NNS/times that/WDT/that because/IN/because of/IN/of the/DT/the decrease/NN/decrease priority/NN/priority operation/NNP/operation. because/IN/because /,/, each/DT/each decrease/NN/decrease priority/NN/priority operation/NN/operation takes/VBZ/takes time/NN/time at/IN/at most/JJS/most order/NN/order log/NN/log n/NN/n and/CC/and /CD/( hindi/NN/hindi /:/) because/IN/because up/IN/up this/DT/this operation/NN/operation corresponds/VBZ/corresponds to/TO/to removing/VBG/removing the/DT/the vertex/NN/vertex from/IN/from s/NNS/s complement/NN/complement /:/( hindi/NN/hindi /:/) each/DT/each time/NN/time it/PRP/it takes/VBZ/takes log/NN/log n/NN/n time/NN/time /,/, so/RB/so it/PRP/it will/MD/will be/VB/be n/VBN/n minus/NN/minus 1/CD/1 time/NN/time log/NN/log n/NNP/n. this/DT/this is/VBZ/is the/DT/the now/RB/now realize/VBP/realize /,/, this/DT/this is/VBZ/is the/DT/the mistake/NN/mistake i/PRP/i made/VBD/made in/IN/in the/DT/the prim/NN/prim ?/./? s/NNS/s algorithm/NNP/algorithm. /NNP/( hindi/NN/hindi /:/) because/IN/because the/DT/the semantic/JJ/semantic is/VBZ/is the/DT/the same/NNP/same. the/DT/the vertices/NNS/vertices in/IN/in s/NNS/s complement/NN/complement are/VBP/are the/DT/the ones/NNS/ones in/IN/in the/DT/the heap/NN/heap and/CC/and so/RB/so when/WRB/when i/PRP/i am/VBP/am moving/VBG/moving a/DT/a vertex/NN/vertex from/IN/from s/NNS/s complement/NN/complement to/TO/to s/NNS/s /,/, i/PRP/i have/VBP/have to/TO/to remove/VB/remove it/PRP/it from/IN/from the/DT/the heap/NNP/heap. so/RB/so /,/, you/PRP/you have/VBP/have to/TO/to do/VB/do a/DT/a delete/JJ/delete min/NN/min operation/NNP/operation. we/PRP/we just/RB/just said/VBD/said /,/, find/IN/find min/NNP/min. if/IN/if you/PRP/you do/VBP/do not/RB/not do/VB/do /,/, it/PRP/it will/MD/will be/VB/be an/DT/an infinite/JJ/infinite because/IN/because the/DT/the same/JJ/same thing/NN/thing will/MD/will coming/VBG/coming as/IN/as min/NN/min /,/, min/NN/min /,/, min/NN/min /,/, min/NNP/min. /NNP/( hindi/NN/hindi /:/) so/RB/so /,/, this/DT/this total/NN/total running/VBG/running time/NN/time /,/, let/VB/let me/PRP/me put/VB/put it/PRP/it down/NNP/down. no/DT/no /,/, not/RB/not n/VB/n /,/, but/CC/but m/NNP/m. not/RB/not n/VB/n /,/, but/CC/but m/NN/m why/WRB/why because/IN/because /,/, we/PRP/we have/VBP/have the/DT/the total/JJ/total time/NN/time /,/, the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times this/DT/this operation/NN/operation is/VBZ/is being/VBG/being executed/VBN/executed is/VBZ/is order/NN/order to/TO/to m/VB/m /:/( hindi/NN/hindi /:/) with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end today/NN/today ?/./? s/NNS/s discussion/NN/discussion on/IN/on shortest/JJS/shortest path/NN/path /,/, but/CC/but we/PRP/we will/MD/will continue/VB/continue this/DT/this because/IN/because /,/, we/PRP/we have/VBP/have to/TO/to prove/VB/prove the/DT/the correctness/NN/correctness of/IN/of this/DT/this algorithm/NNP/algorithm. we/PRP/we also/RB/also have/VBP/have to/TO/to see/VB/see /,/, how/WRB/how to/TO/to find/VB/find the/DT/the shortest/JJS/shortest path/NN/path because/IN/because /,/, here/RB/here we/PRP/we have/VBP/have only/RB/only computed/VBN/computed length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to the/DT/the root/NNP/root. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 35/CD/35 correctness/NN/correctness of/IN/of dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we looked/VBD/looked at/IN/at dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm for/IN/for computing/NN/computing the/DT/the single/JJ/single source/NN/source shortest/NN/shortest path/NNP/path. the/DT/the algorithm/NN/algorithm i/PRP/i do/VBP/do not/RB/not recall/VB/recall if/IN/if i/PRP/i did/VBD/did tell/RB/tell you/PRP/you the/DT/the name/NN/name of/IN/of the/DT/the algorithm/NNP/algorithm. it/PRP/it is/VBZ/is called/VBN/called dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/NNP/algorithm. what/WP/what remains/VBZ/remains to/TO/to be/VB/be done/VBN/done ?/./? we/PRP/we have/VBP/have seen/VBN/seen what/WP/what the/DT/the algorithm/NN/algorithm is/NNP/is. hopefully/RB/hopefully you/PRP/you all/DT/all understood/NN/understood /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be revising/VBG/revising it/PRP/it any/DT/any case/NN/case today/NNP/today. we/PRP/we had/VBD/had also/RB/also argued/VBN/argued how/WRB/how to/TO/to implement/VB/implement the/DT/the algorithm/NN/algorithm and/CC/and what/WP/what its/PRP$/its running/VBG/running times/NNS/times would/MD/would be/VB/be. the/DT/the implementation/NN/implementation was/VBD/was very/RB/very similar/JJ/similar to/TO/to prim/VB/prim ?/./? s/NNS/s algorithm/VBP/algorithm computing/VBG/computing minimum/JJ/minimum spanning/NN/spanning tree/NN/tree with/IN/with some/DT/some small/JJ/small modifications/NNP/modifications. but/CC/but we/PRP/we have/VBP/have not/RB/not argued/VBN/argued why/WRB/why the/DT/the algorithm/NN/algorithm is/VBZ/is correct/JJ/correct ?/./? why/WRB/why the/DT/the dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm is/VBZ/is correct/JJ/correct ?/./? as/IN/as a/DT/a quick/NN/quick recap/NN/recap of/IN/of what/WP/what is/VBZ/is being/VBG/being done/NN/done in/IN/in dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/NNP/algorithm. we/PRP/we are/VBP/are given/VBN/given a/DT/a source/NN/source vertex/NN/vertex /,/, we/PRP/we are/VBP/are given/VBN/given a/DT/a graph/NNP/graph. you/PRP/you are/VBP/are given/VBN/given a/DT/a length/NN/length function/NN/function on/IN/on the/DT/the edges/NNS/edges and/CC/and the/DT/the edges/NNS/edges are/VBP/are non/RB/non negative/NNP/negative. you/PRP/you can/MD/can have/VB/have zero/CD/zero edge/NN/edge lengths/NNS/lengths but/CC/but you/PRP/you can/MD/can not/RB/not have/VB/have a/DT/a negative/JJ/negative edge/NN/edge length/NNP/length. that/IN/that is/VBZ/is important/JJ/important and/CC/and we/PRP/we will/MD/will see/VB/see why/NNP/why. what/WP/what is/VBZ/is happening/VBG/happening at/IN/at each/DT/each point/NN/point ?/./? with/IN/with each/DT/each vertex/NN/vertex we/PRP/we have/VBP/have a/DT/a distance/NN/distance label/NN/label associated/VBN/associated with/IN/with that/DT/that vertex/NN/vertex d/VBD/d /CD/[ v/NN/v /:/] /./. today/NN/today we/PRP/we have/VBP/have to/TO/to first/JJ/first understand/NN/understand the/DT/the semantics/NNP/semantics. what/WP/what do/VBP/do these/DT/these numbers/NNS/numbers represent/VBP/represent ?/./? initially/RB/initially d/VBD/d /CD/[ v/NN/v /:/] recall/NN/recall is/VBZ/is infinite/JJ/infinite for/IN/for every/DT/every vertex/NNP/vertex. d/NN/d /:/[ v/NN/v /:/] is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the distance/NN/distance of/IN/of v/NN/v from/IN/from s/NNP/s. and/CC/and this/DT/this quantity/NN/quantity with/IN/with every/DT/every step/NN/step only/RB/only decreases/VBZ/decreases and/CC/and it/PRP/it never/RB/never increases/NNP/increases. at/IN/at a/DT/a particular/JJ/particular step/NN/step what/WP/what does/VBZ/does the/DT/the algorithm/NN/algorithm do/VBP/do ?/./? at/IN/at any/DT/any point/NN/point we/PRP/we have/VBP/have two/CD/two sets/NNS/sets /,/, the/DT/the capital/NN/capital s/VBZ/s and/CC/and s/NNS/s complement/NNP/complement. the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are in/IN/in s/NNS/s /,/, for/IN/for them/PRP/them we/PRP/we have/VBP/have computed/VBN/computed there/EX/there actual/JJ/actual shortest/NN/shortest path/NN/path distances/NNS/distances from/IN/from s/NNP/s. we/PRP/we have/VBP/have already/RB/already computed/VBN/computed that/NNP/that. and/CC/and the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are in/IN/in s/NNS/s complement/NN/complement /,/, for/IN/for them/PRP/them we/PRP/we do/VBP/do not/RB/not know/VB/know the/DT/the correct/NN/correct distance/NNP/distance. we/PRP/we only/RB/only have/VBP/have an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the correct/NN/correct distance/NNP/distance. at/IN/at a/DT/a particular/JJ/particular iteration/NN/iteration what/WP/what do/VBP/do we/PRP/we do/VBP/do ?/./? we/PRP/we take/VBP/take the/DT/the vertex/NN/vertex for/IN/for which/WDT/which the/DT/the d/NN/d /:/[ v/NN/v /:/] is/VBZ/is minimum/NNP/minimum. suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex u/NN/u /,/, so/RB/so d/JJ/d /NN/[ u/NN/u /:/] is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to d/VB/d /:/[ v/NN/v /:/] for/IN/for all/PDT/all v/NN/v in/IN/in s/NNS/s complement/NNP/complement. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) signifying/VBG/signifying the/DT/the fact/NN/fact /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to move/VB/move u/NN/u across/NNP/across. you/PRP/you will/MD/will go/VB/go from/IN/from s/NNS/s complement/NN/complement to/TO/to s/NNP/s. we/PRP/we will/MD/will also/RB/also have/VB/have to/TO/to make/VB/make this/DT/this claim/NN/claim to/TO/to argue/VB/argue correctness/NNP/correctness. that/IN/that is/VBZ/is at/IN/at this/DT/this point/NN/point /:/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that is/VBZ/is the/DT/the correct/NN/correct shortest/NN/shortest path/NN/path distance/NN/distance of/IN/of u/NN/u from/IN/from s/NNP/s. when/WRB/when we/PRP/we move/VBP/move across/IN/across how/WRB/how do/VBP/do we/PRP/we update/VB/update the/DT/the other/JJ/other labels/NNS/labels ?/./? if/IN/if there/EX/there are/VBP/are 3/CD/3 edges/NNS/edges going/VBG/going out/RP/out of/IN/of u/NN/u to/TO/to other/JJ/other vertices/NNS/vertices in/IN/in s/NNS/s complement/NN/complement /:/( hindi/NN/hindi conversation/NN/conversation /:/) what/WP/what is/VBZ/is the/DT/the new/JJ/new distance/NN/distance label/NN/label of/IN/of w/NN/w ?/./? min/NN/min d/NN/d /:/[ w/NN/w /:/] /,/, d/VBD/d /:/[ u/NN/u /:/] +/:/+ length/NN/length of/IN/of the/DT/the edge/NN/edge /:/[ u/NN/u /,/, w/NN/w /:/] /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 38/CD/38 /CD/) this/DT/this is/VBZ/is how/WRB/how we/PRP/we update/VBP/update the/DT/the distances/NNS/distances /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this operation/NN/operation shows/VBZ/shows that/IN/that d/JJ/d /NN/[ w/NN/w /:/] value/NN/value will/MD/will only/RB/only decrease/VB/decrease /,/, it/PRP/it can/MD/can not/RB/not increase/NNP/increase. because/IN/because it/PRP/it is/VBZ/is the/DT/the minimum/JJ/minimum of/IN/of two/CD/two quantities/NNS/quantities one/CD/one of/IN/of which/WDT/which is/VBZ/is d/VBN/d /-NONE-/[ w/NN/w /:/] /./. d/NN/d /:/[ w/NN/w /:/] value/NN/value will/MD/will only/RB/only decrease/NNP/decrease. so/RB/so if/IN/if these/DT/these distance/NN/distance label/NN/label were/VBD/were sitting/VBG/sitting in/IN/in a/DT/a heap/NN/heap then/RB/then all/DT/all you/PRP/you have/VBP/have to/TO/to do/VB/do is/VBZ/is to/TO/to do/VB/do a/DT/a decrease/NN/decrease priority/NN/priority operation/NN/operation on/IN/on the/DT/the heap/NNP/heap. when/WRB/when you/PRP/you are/VBP/are removing/VBG/removing the/DT/the minimum/JJ/minimum that/IN/that correspond/NN/correspond to/TO/to the/DT/the delete/JJ/delete min/NN/min operation/NNP/operation. this/DT/this is/VBZ/is just/RB/just a/DT/a recap/NN/recap of/IN/of what/WP/what we/PRP/we have/VBP/have done/VBN/done in/IN/in the/DT/the last/JJ/last class/NNP/class. we/PRP/we have/VBP/have seen/VBN/seen all/DT/all of/IN/of this/DT/this before/NNP/before. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that is/VBZ/is the/DT/the algorithm/NN/algorithm we/PRP/we keep/VBP/keep doing/VBG/doing this/DT/this /,/, till/IN/till every/DT/every things/NNS/things moves/VBZ/moves from/IN/from here/RB/here to/TO/to here/RB/here and/CC/and then/RB/then we/PRP/we are/VBP/are done/NNP/done. what/WP/what is/VBZ/is the/DT/the initial/JJ/initial composition/NN/composition of/IN/of s/NNS/s and/CC/and s/NNS/s complement/NN/complement ?/./? initially/RB/initially the/DT/the only/JJ/only vertex/NN/vertex in/IN/in capital/NN/capital s/NNS/s is/VBZ/is little/JJ/little s/NNS/s and/CC/and every/DT/every thing/NN/thing else/NN/else is/VBZ/is in/IN/in s/NNS/s complement/NNP/complement. let/VB/let us/PRP/us first/RB/first understand/VBP/understand given/VBN/given a/DT/a vertex/NN/vertex u/NN/u /,/, what/WP/what does/VBZ/does d/VBN/d /-NONE-/[ u/RB/u /:/] means/NNP/means. given/RB/given a/DT/a vertex/NN/vertex u/NN/u in/IN/in s/NNS/s complement/NN/complement /,/, this/DT/this is/VBZ/is s/VBZ/s and/CC/and little/RB/little s/VBZ/s is/VBZ/is here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 50/CD/50 /CD/) /./. what/WP/what is/VBZ/is the/DT/the meaning/NN/meaning of/IN/of d/NN/d /:/[ u/NN/u /:/] ?/./? what/WP/what connotation/NN/connotation or/CC/or what/WP/what semantic/JJ/semantic can/MD/can i/PRP/i associate/VB/associate with/IN/with d/JJ/d /NN/[ u/NN/u /:/] ?/./? shortest/JJS/shortest length/NN/length of/IN/of a/DT/a path/NN/path including/VBG/including vertices/NNS/vertices only/RB/only from/IN/from ?/./? yes/NNP/yes. so/RB/so claim/VBP/claim is/VBZ/is d/VBN/d /-NONE-/[ u/RB/u /:/] is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNP/s. let/NN/let us/PRP/us look/VBP/look at/IN/at all/DT/all path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u which/WDT/which use/NN/use only/RB/only vertices/VBZ/vertices of/IN/of s/NNS/s and/CC/and at/IN/at one/CD/one point/NN/point that/WDT/that take/VB/take one/CD/one edge/NN/edge across/IN/across and/CC/and reach/NN/reach u/NNP/u. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) there/EX/there can/MD/can be/VB/be many/JJ/many such/JJ/such paths/NNP/paths. this/DT/this is/VBZ/is one/CD/one path/NN/path may/MD/may be/VB/be there/RB/there is/VBZ/is a/DT/a second/JJ/second path/NN/path which/WDT/which goes/VBZ/goes like/IN/like this/NNP/this. there/EX/there may/MD/may be/VB/be a/DT/a third/JJ/third path/NN/path which/WDT/which goes/VBZ/goes like/IN/like that/DT/that and/CC/and so/RB/so on/NNP/on. there/EX/there could/MD/could be/VB/be again/RB/again a/DT/a whole/JJ/whole lot/NN/lot of/IN/of such/JJ/such paths/NNP/paths. let/NN/let us/PRP/us compute/VBP/compute the/DT/the length/NN/length of/IN/of all/DT/all those/DT/those paths/NNS/paths and/CC/and let/VB/let us/PRP/us take/VB/take smallest/JJS/smallest amongst/NN/amongst those/NNP/those. that/IN/that is/VBZ/is d/VBN/d /-NONE-/[ u/RB/u /:/] /,/, so/RB/so formally/RB/formally i/PRP/i could/MD/could try/VB/try d/JJ/d /NN/[ u/NN/u /:/] =/:/= length/NN/length of/IN/of shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u that/IN/that includes/NNS/includes only/RB/only vertices/NNS/vertices from/IN/from the/DT/the set/NN/set s/NNP/s. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) except/IN/except for/IN/for u/NN/u which/WDT/which is/VBZ/is the/DT/the last/JJ/last vertex/NN/vertex /,/, the/DT/the other/JJ/other intermediate/NN/intermediate vertices/NNS/vertices will/MD/will only/RB/only be/VB/be vertices/NNS/vertices from/IN/from s/NNP/s. that/IN/that is/VBZ/is the/DT/the meaning/NN/meaning of/IN/of d/NN/d /:/[ u/NN/u /:/] /,/, that/IN/that i/PRP/i clime/VBP/clime is/VBZ/is the/DT/the meaning/NN/meaning of/IN/of d/NN/d /:/[ u/NN/u /:/] and/CC/and let/VB/let see/NN/see whether/IN/whether this/DT/this is/VBZ/is really/RB/really true/NNP/true. how/WRB/how will/MD/will we/VB/we prove/VBP/prove that/IN/that this/DT/this is/VBZ/is true/JJ/true ?/./? the/DT/the best/JJS/best way/NN/way to/TO/to do/VB/do this/DT/this is/VBZ/is to/TO/to prove/VB/prove it/PRP/it by/IN/by induction/NNP/induction. make/VBP/make sense/NN/sense to/TO/to try/NN/try and/CC/and prove/VB/prove it/PRP/it by/IN/by induction/NNP/induction. we/PRP/we will/MD/will assume/VB/assume that/IN/that at/IN/at this/DT/this point/NN/point this/DT/this is/VBZ/is true/NNP/true. the/DT/the numbers/NNS/numbers or/CC/or that/IN/that d/JJ/d on/IN/on these/DT/these vertices/NNS/vertices do/VBP/do reflect/JJ/reflect this/DT/this quantity/NNP/quantity. and/CC/and then/RB/then we/PRP/we will/MD/will say/VB/say when/WRB/when i/PRP/i move/VBP/move one/CD/one vertex/NN/vertex across/IN/across then/RB/then the/DT/the new/JJ/new d/NN/d ?/./? s/NNS/s on/IN/on the/DT/the vertices/NNS/vertices continue/VBP/continue to/TO/to reflect/VB/reflect the/DT/the same/JJ/same thing/NNP/thing. and/CC/and then/RB/then we/PRP/we will/MD/will show/VB/show that/IN/that the/DT/the base/NN/base case/NN/case is/VBZ/is also/RB/also true/JJ/true and/CC/and that/IN/that will/MD/will establish/VB/establish this/DT/this claim/NNP/claim. if/IN/if it/PRP/it is/VBZ/is true/JJ/true now/RB/now i/PRP/i move/VBP/move a/DT/a certain/JJ/certain vertex/NN/vertex across/NNP/across. let/NN/let say/VBP/say vertex/NN/vertex w/NN/w which/WDT/which is/VBZ/is here/RB/here /,/, moves/NNS/moves across/NNP/across. as/IN/as a/DT/a consequence/NN/consequence i/PRP/i might/MD/might end/VB/end up/RP/up updating/VBG/updating the/DT/the distance/NN/distance label/NN/label of/IN/of u/NNP/u. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 14/CD/14 /CD/) so/RB/so this/DT/this edge/NN/edge is/VBZ/is not/RB/not there/RB/there /,/, this/DT/this is/VBZ/is just/RB/just signifying/VBG/signifying that/IN/that this/DT/this vertex/NN/vertex moves/VBZ/moves across/NNP/across. let/NN/let say/VBP/say u1/NNP/u1 /,/, u2/NNP/u2 /,/, u3/NNP/u3 are/VBP/are the/DT/the 3/CD/3 neighbors/NNS/neighbors of/IN/of w/NN/w that/IN/that is/VBZ/is out/RP/out neighbors/NNP/neighbors. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to update/VB/update u1/NNP/u1 to/TO/to d/VB/d /:/[ u1/NNP/u1 /:/] =/:/= min/NN/min /:/[ d/NN/d /:/[ u1/NNP/u1 /:/] /,/, d/VBD/d /:/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ w,u1/-NONE-/w,u1 /:/] /:/] /./. this/DT/this is/VBZ/is how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to update/NNP/update. why/WRB/why is/VBZ/is this/DT/this correct/NN/correct ?/./? why/WRB/why is/VBZ/is it/PRP/it that/IN/that after/IN/after this/DT/this the/DT/the new/JJ/new value/NN/value of/IN/of d/NN/d /:/[ u1/NNP/u1 /:/] ?/./? may/MD/may it/PRP/it is/VBZ/is the/DT/the new/JJ/new value/NN/value /,/, may/MD/may be/VB/be it/PRP/it is/VBZ/is the/DT/the old/JJ/old value/NN/value /,/, still/RB/still satisfies/VBZ/satisfies this/DT/this thing/NNP/thing. if/IN/if d/NN/d /:/[ u1/NNP/u1 /:/] remains/VBZ/remains unchanged/JJ/unchanged then/RB/then that/IN/that means/NNS/means the/DT/the earlier/JJR/earlier value/NN/value was/VBD/was the/DT/the smaller/JJR/smaller one/NNP/one. so/RB/so what/WP/what is/VBZ/is that/IN/that happening/VBG/happening ?/./? the/DT/the w/NN/w moved/VBD/moved across/IN/across /,/, let/VB/let me/PRP/me draw/VB/draw the/DT/the picture/NN/picture s/VBZ/s complement/NN/complement minus/NN/minus w/NN/w and/CC/and s/NNS/s +/:/+ w/NN/w /,/, w/NN/w is/VBZ/is here/RB/here /,/, and/CC/and u1/NNP/u1 is/VBZ/is here/NNP/here. not/RB/not another/DT/another path/NN/path /,/, but/CC/but i/PRP/i should/MD/should say/VB/say let/VB/let me/PRP/me look/VB/look at/IN/at all/DT/all the/DT/the paths/NNS/paths from/IN/from s/NNS/s to/TO/to u1/NNP/u1. now/RB/now those/DT/those paths/NNS/paths /,/, what/WP/what could/MD/could they/PRP/they be/VB/be doing/VBG/doing ?/./? so/RB/so i/PRP/i have/VBP/have to/TO/to look/VB/look at/IN/at all/DT/all path/NN/path form/NN/form s/VBZ/s to/TO/to u1/NNP/u1 which/WDT/which only/RB/only includes/VBZ/includes vertices/NNS/vertices from/IN/from this/DT/this side/NNP/side. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) either/DT/either the/DT/the paths/NNS/paths do/VBP/do not/RB/not include/VB/include vertex/NN/vertex w/NN/w at/IN/at all/DT/all and/CC/and they/PRP/they go/VBP/go directly/RB/directly like/IN/like this/DT/this but/CC/but then/RB/then the/DT/the length/NN/length of/IN/of such/JJ/such a/DT/a path/NN/path is/VBZ/is already/RB/already captured/VBN/captured in/IN/in the/DT/the earlier/JJR/earlier value/NN/value of/IN/of d/NN/d /:/[ u1/NNP/u1 /:/] /./. the/DT/the d/NN/d /:/[ u1/NNP/u1 /:/] is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the length/NN/length of/IN/of all/DT/all such/JJ/such paths/NNS/paths or/CC/or such/JJ/such a/DT/a path/NN/path includes/VBZ/includes w/NNP/w. one/CD/one possibility/NN/possibility is/VBZ/is that/IN/that it/PRP/it includes/VBZ/includes w/NN/w /,/, that/IN/that it/PRP/it visits/VBZ/visits w/NN/w and/CC/and then/RB/then goes/VBZ/goes to/TO/to u1/NNP/u1. third/JJ/third possibility/NN/possibility /,/, it/PRP/it goes/VBZ/goes to/TO/to w/VB/w goes/VBZ/goes to/TO/to some/DT/some other/JJ/other vertex/NN/vertex and/CC/and then/RB/then goes/VBZ/goes to/TO/to u1/NNP/u1. let/VB/let us/PRP/us look/VB/look at/IN/at these/DT/these 3/CD/3 things/NNP/things. we/PRP/we are/VBP/are saying/VBG/saying that/IN/that either/DT/either it/PRP/it does/VBZ/does not/RB/not visit/VB/visit w/NN/w at/IN/at all/DT/all which/WDT/which is/VBZ/is the/DT/the first/JJ/first case/NNP/case. then/RB/then what/WP/what remains/VBZ/remains is/VBZ/is /,/, it/PRP/it visits/VBZ/visits w/NNP/w. it/PRP/it touches/VBZ/touches w/NNP/w. what/WP/what touches/VBZ/touches w/NN/w ?/./? we/PRP/we are/VBP/are looking/VBG/looking at/IN/at the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 which/WDT/which includes/VBZ/includes only/RB/only these/DT/these vertices/NNP/vertices. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 51/CD/51 /CD/) so/RB/so the/DT/the other/JJ/other case/NN/case is/VBZ/is that/IN/that it/PRP/it touches/VBZ/touches w/NNP/w. and/CC/and the/DT/the moment/NN/moment it/PRP/it hits/VBZ/hits w/NN/w after/IN/after that/DT/that it/PRP/it goes/VBZ/goes directly/RB/directly into/IN/into u1/NNP/u1. this/DT/this is/VBZ/is the/DT/the second/JJ/second case/NNP/case. third/JJ/third is/VBZ/is it/PRP/it comes/VBZ/comes to/TO/to w/VB/w then/RB/then it/PRP/it goes/VBZ/goes of/IN/of some/DT/some where/WRB/where else/NN/else that/WDT/that it/PRP/it goes/VBZ/goes to/TO/to u1/NNP/u1. you/PRP/you are/VBP/are claiming/VBG/claiming that/IN/that the/DT/the third/JJ/third case/NN/case can/MD/can not/RB/not happen/NNP/happen. what/WP/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by can/MD/can not/RB/not happen/VB/happen ?/./? the/DT/the claim/NN/claim is/VBZ/is that/IN/that this/DT/this path/NN/path has/VBZ/has length/NN/length at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as d/JJ/d /NN/[ u1/NNP/u1 /NNP/] /./. we/PRP/we have/VBP/have to/TO/to look/VB/look at/IN/at these/DT/these three/CD/three cases/NNS/cases one/CD/one after/IN/after the/DT/the other/NNP/other. the/DT/the case/NN/case one/CD/one is/VBZ/is covered/NNP/covered. case/NN/case two/CD/two is/VBZ/is also/RB/also covered/NNP/covered. why/WRB/why because/IN/because this/DT/this path/NN/path comes/VBZ/comes up/IN/up to/TO/to here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 06/CD/06 /CD/) and/CC/and then/RB/then i/PRP/i take/VBP/take this/DT/this edge/NNP/edge. if/IN/if this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 and/CC/and it/PRP/it goes/VBZ/goes via/IN/via w/NN/w like/IN/like this/DT/this then/RB/then this/DT/this part/NN/part has/VBZ/has to/TO/to be/VB/be the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/VB/w /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 26/CD/26 /CD/) /./. that/IN/that is/VBZ/is equal/JJ/equal to/TO/to of/IN/of length/NN/length d/NN/d /:/[ w/NN/w /:/] by/IN/by induction/NN/induction hypothesis/NNP/hypothesis. and/CC/and then/RB/then this/DT/this plus/NN/plus this/DT/this length/NN/length would/MD/would be/VB/be the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1. that/IN/that is/VBZ/is getting/VBG/getting captured/VBN/captured here/NNP/here. we/PRP/we are/VBP/are accounting/VBG/accounting for/IN/for the/DT/the length/NN/length of/IN/of such/JJ/such a/DT/a path/NNP/path. what/WP/what remains/VBZ/remains is/VBZ/is this/DT/this case/NN/case three/NNP/three. why/WRB/why can/MD/can not/RB/not we/VB/we have/VBP/have this/DT/this ?/./? let/NN/let say/VB/say this/DT/this vertex/NN/vertex is/VBZ/is x/NNP/x. you/PRP/you are/VBP/are wrongly/RB/wrongly concentrating/VBG/concentrating on/IN/on w/NN/w /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be x/NNP/x. we/PRP/we have/VBP/have to/TO/to look/VB/look at/IN/at x/NNP/x. the/DT/the x/NN/x was/VBD/was already/RB/already there/NNP/there. we/PRP/we already/RB/already knew/VBD/knew the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x and/CC/and that/IN/that was/VBD/was equal/JJ/equal to/TO/to d/VB/d /:/[ x/NN/x /:/] /,/, the/DT/the label/NN/label on/IN/on x/NNP/x. it/PRP/it does/VBZ/does not/RB/not involve/VB/involve w/NN/w /,/, we/PRP/we already/RB/already have/VBP/have that/IN/that information/NNP/information. if/IN/if this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 then/RB/then s/VBZ/s to/TO/to x/VB/x is/VBZ/is also/RB/also the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1. what/WP/what is/VBZ/is the/DT/the blue/JJ/blue line/NN/line that/WDT/that i/PRP/i have/VBP/have drawn/VBN/drawn ?/./? this/DT/this is/VBZ/is this/DT/this the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. the/DT/the x/NN/x was/VBD/was already/RB/already a/DT/a path/NN/path of/IN/of s/NNS/s which/WDT/which means/VBZ/means we/PRP/we already/RB/already had/VBD/had the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. and/CC/and the/DT/the shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x is/VBZ/is using/VBG/using only/RB/only vertices/NNS/vertices of/IN/of capital/NN/capital s/NNS/s /,/, not/RB/not using/VBG/using w/NN/w at/IN/at all/DT/all and/CC/and that/IN/that path/NN/path sits/NNS/sits here/NNP/here. if/IN/if this/DT/this path/NN/path which/WDT/which goes/VBZ/goes from/IN/from s/NNS/s to/TO/to w/VB/w then/RB/then from/IN/from w/NN/w to/TO/to x/VB/x and/CC/and then/RB/then from/IN/from x/NN/x to/TO/to u1/NNP/u1 is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 using/NN/using vertices/NNS/vertices only/RB/only of/IN/of s/NNS/s +/:/+ w/NNP/w. then/RB/then this/DT/this path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x followed/VBN/followed by/IN/by x/NN/x to/TO/to u1/NNP/u1 is/VBZ/is also/RB/also the/DT/the shortest/JJS/shortest path/NNP/path. if/IN/if it/PRP/it is/VBZ/is also/RB/also the/DT/the shortest/JJS/shortest path/NN/path then/RB/then we/PRP/we have/VBP/have already/RB/already accounted/VBN/accounted for/IN/for it/PRP/it in/IN/in d/NN/d /:/[ u1/NNP/u1 /:/] /./. d/NN/d /:/[ u1/NNP/u1 /:/] is/VBZ/is only/RB/only less/JJR/less than/IN/than this/DT/this quantity/NN/quantity /,/, because/IN/because what/WP/what is/VBZ/is d/VBN/d /-NONE-/[ u1/NNP/u1 /NNP/] ?/./? d/NN/d /:/[ u1/NNP/u1 /:/] till/NN/till now/RB/now is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 using/NN/using vertices/NNS/vertices only/RB/only of/IN/of capital/NN/capital s/NNP/s. so/RB/so this/DT/this path/NN/path that/IN/that is/VBZ/is now/RB/now i/PRP/i have/VBP/have created/VBN/created does/VBZ/does not/RB/not use/VB/use vertex/NN/vertex w/NN/w at/IN/at all/NNP/all. so/RB/so it/PRP/it becomes/VBZ/becomes something/NN/something like/IN/like case/NN/case one/CD/one /,/, except/IN/except that/DT/that you/PRP/you have/VBP/have to/TO/to make/VB/make this/DT/this argument/NNP/argument. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 52/CD/52 /CD/) so/RB/so may/MD/may be/VB/be all/PDT/all of/IN/of this/DT/this is/VBZ/is not/RB/not very/RB/very clear/NNP/clear. so/RB/so let/VB/let us/PRP/us try/NN/try and/CC/and do/VBP/do it/PRP/it more/JJR/more completely/NNP/completely. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at s/NNS/s /,/, u1/NNP/u1. w/NN/w is/VBZ/is the/DT/the vertex/NN/vertex which/WDT/which has/VBZ/has just/RB/just come/VBN/come in/NNP/in. and/CC/and we/PRP/we are/VBP/are looking/VBG/looking at/IN/at third/JJ/third case/NN/case /,/, when/WRB/when shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 goes/VBZ/goes via/IN/via w/NN/w to/TO/to a/DT/a vertex/NN/vertex x/NN/x and/CC/and then/RB/then it/PRP/it jumps/VBZ/jumps across/IN/across to/TO/to u1/NNP/u1. now/RB/now the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path /,/, which/WDT/which is/VBZ/is s/VBZ/s to/TO/to w/VB/w plus/RB/plus w/VB/w to/TO/to x/VB/x plus/RB/plus x/VB/x to/TO/to u1/NNP/u1. the/DT/the claim/NN/claim is/VBZ/is that/IN/that the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path is/VBZ/is at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x /,/, followed/VBN/followed by/IN/by x/NN/x to/TO/to u1/NNP/u1. let/VB/let me/PRP/me write/VB/write it/PRP/it down/IN/down /,/, length/NN/length of/IN/of path/NN/path s/NNS/s to/TO/to w/VB/w to/TO/to x/VB/x to/TO/to u1/NNP/u1 is/VBZ/is no/DT/no less/JJR/less than/IN/than that/DT/that of/IN/of the/DT/the path/NN/path s/VBZ/s to/TO/to x/VB/x to/TO/to u1/NNP/u1. what/WP/what is/VBZ/is the/DT/the path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x /,/, i/PRP/i am/VBP/am taking/VBG/taking ?/./? the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x /,/, that/IN/that does/VBZ/does not/RB/not include/VB/include w/NNP/w. shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x does/VBZ/does not/RB/not include/VB/include w/NNP/w. why/WRB/why /,/, because/IN/because w/NN/w just/RB/just came/VBD/came in/IN/in and/CC/and x/NN/x was/VBD/was already/RB/already there/NNP/there. by/IN/by our/PRP$/our induction/NN/induction hypothesis/NN/hypothesis we/PRP/we had/VBD/had already/RB/already found/VBN/found out/RP/out the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. that/IN/that is/VBZ/is the/DT/the path/NN/path which/WDT/which is/VBZ/is lying/VBG/lying completely/RB/completely in/IN/in s/NNP/s. let/NN/let me/PRP/me write/VBP/write that/IN/that part/NN/part also/NNP/also. the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x does/VBZ/does not/RB/not include/VB/include w/NN/w and/CC/and only/RB/only includes/VBZ/includes vertices/NNS/vertices of/IN/of capital/NN/capital s/NNP/s. this/DT/this is/VBZ/is capital/NN/capital s/NNS/s +/:/+ w/NN/w now/RB/now /,/, this/DT/this is/VBZ/is capital/NN/capital s/NNS/s complement/NN/complement minus/NN/minus w/NNP/w. capital/NN/capital s/NNS/s was/VBD/was the/DT/the part/NN/part before/IN/before we/PRP/we moved/VBD/moved this/DT/this thing/NNP/thing. this/DT/this path/NN/path which/WDT/which is/VBZ/is going/VBG/going like/IN/like this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 28/CD/28 /CD/) /,/, has/VBZ/has length/NN/length at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as the/DT/the length/NN/length of/IN/of this/NNP/this. but/CC/but what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about this/DT/this ?/./? about/IN/about this/DT/this i/NN/i know/VBP/know that/IN/that d/NN/d /:/[ u1/NNP/u1 /:/] is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to this/DT/this u1/NNP/u1 /,/, length/NN/length of/IN/of path/NN/path s/NNS/s to/TO/to x/VB/x to/TO/to u1/NNP/u1. already/RB/already i/PRP/i know/VBP/know that/IN/that /,/, because/IN/because d/JJ/d /NN/[ u1/NNP/u1 /NNP/] was/VBD/was the/DT/the smallest/JJS/smallest possible/JJ/possible path/NN/path which/WDT/which used/VBN/used only/RB/only vertices/NNS/vertices of/IN/of s/NNP/s. this/DT/this is/VBZ/is only/RB/only less/JJR/less than/IN/than that/DT/that and/CC/and since/IN/since this/DT/this is/VBZ/is less/JJR/less than/IN/than this/DT/this /,/, d/VBD/d /:/[ u1/NNP/u1 /:/] is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to this/DT/this longer/NN/longer path/NNP/path. so/RB/so i/PRP/i can/MD/can effectively/RB/effectively ignore/VB/ignore this/DT/this thing/NN/thing /,/, i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to consider/VB/consider it/PRP/it /,/, because/IN/because it/PRP/it is/VBZ/is already/RB/already included/VBN/included in/IN/in my/PRP$/my d/NN/d /:/[ u1/NNP/u1 /:/] /./. d/NN/d /:/[ u1/NNP/u1 /:/] is/VBZ/is already/RB/already a/DT/a smaller/JJR/smaller quantity/NN/quantity than/IN/than that/NNP/that. so/RB/so all/DT/all such/JJ/such paths/NNS/paths are/VBP/are captured/VBN/captured in/IN/in d/NN/d /:/[ u1/NNP/u1 /:/] /./. d/NN/d /:/[ u1/NNP/u1 /:/] is/VBZ/is the/DT/the quantity/NN/quantity only/RB/only smaller/JJR/smaller than/IN/than such/JJ/such paths/NNP/paths. the/DT/the one/CD/one path/NN/path which/WDT/which is/VBZ/is not/RB/not captured/VBN/captured is/VBZ/is such/JJ/such a/DT/a path/NN/path which/WDT/which goes/VBZ/goes to/TO/to w/VB/w and/CC/and then/RB/then takes/VBZ/takes an/DT/an edge/NN/edge out/IN/out that/DT/that is/VBZ/is case/NN/case 2/CD/2. for/IN/for that/DT/that we/PRP/we have/VBP/have included/VBN/included here/NNP/here. and/CC/and this/DT/this smaller/NN/smaller of/IN/of these/DT/these 2/CD/2 /,/, will/MD/will give/VB/give me/PRP/me the/DT/the smallest/JJS/smallest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 which/WDT/which only/RB/only includes/VBZ/includes vertices/NNS/vertices of/IN/of s/NNS/s +/:/+ w/NN/w /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 24/CD/24 /CD/) that/WDT/that is/VBZ/is a/DT/a semantic/JJ/semantic and/CC/and once/RB/once you/PRP/you have/VB/have the/DT/the semantic/JJ/semantic in/IN/in mind/NN/mind then/RB/then it/PRP/it is/VBZ/is easy/JJ/easy to/TO/to prove/VB/prove /,/, most/JJS/most of/IN/of the/DT/the other/JJ/other things/NNP/things. what/WP/what is/VBZ/is the/DT/the meaning/NN/meaning of/IN/of those/DT/those distance/NN/distance label/NN/label ?/./? once/RB/once you/PRP/you have/VB/have that/DT/that in/IN/in mind/NN/mind every/DT/every thing/NN/thing else/NN/else are/VBP/are very/RB/very simple/JJ/simple to/TO/to follow/NNP/follow. are/VBP/are every/DT/every one/CD/one convinced/VBN/convinced that/IN/that d/JJ/d distance/NN/distance label/NN/label reflect/NN/reflect this/DT/this kind/NN/kind of/IN/of length/NNP/length. why/WRB/why are/VBP/are we/PRP/we justified/VBD/justified in/IN/in moving/NN/moving the/DT/the smallest/JJS/smallest label/NN/label vertex/NN/vertex from/IN/from here/RB/here ?/./? that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are doing/VBG/doing at/IN/at each/DT/each step/NNP/step. at/IN/at each/DT/each step/NN/step i/PRP/i am/VBP/am taking/VBG/taking this/DT/this vertex/NN/vertex which/WDT/which has/VBZ/has the/DT/the smallest/JJS/smallest label/NN/label and/CC/and moving/VBG/moving it/PRP/it across/IN/across and/CC/and claming/VBG/claming that/IN/that it/PRP/it has/VBZ/has the/DT/the right/NN/right number/NN/number on/IN/on it/NNP/it. why/WRB/why am/NN/am i/PRP/i justified/VBD/justified in/IN/in doing/NN/doing this/DT/this ?/./? what/WP/what we/PRP/we are/VBP/are claming/VBG/claming is/VBZ/is d/VBN/d /-NONE-/[ w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. what/WP/what is/VBZ/is w/VBP/w ?/./? w/NN/w is/VBZ/is the/DT/the vertex/NN/vertex which/WDT/which has/VBZ/has the/DT/the smallest/JJS/smallest label/NNP/label. the/DT/the w/NN/w is/VBZ/is the/DT/the vertex/NN/vertex with/IN/with the/DT/the smallest/JJS/smallest d/NN/d value/NN/value in/IN/in s/NNS/s complement/NNP/complement. the/DT/the claim/NN/claim is/VBZ/is d/VBN/d /-NONE-/[ w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/NNP/w. why/WRB/why is/VBZ/is this/DT/this claim/NN/claim true/NN/true ?/./? proof/IN/proof by/IN/by contradiction/NN/contradiction /,/, suppose/NN/suppose this/DT/this is/VBZ/is not/RB/not true/NNP/true. if/IN/if this/DT/this is/VBZ/is not/RB/not true/JJ/true what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? that/IN/that there/EX/there is/VBZ/is a/DT/a shorter/NN/shorter path/NN/path form/NN/form s/VBZ/s to/TO/to w/NNP/w. shorter/NN/shorter than/IN/than what/WP/what ?/./? shorter/NN/shorter than/IN/than d/NN/d /:/[ w/NN/w /:/] /./. what/WP/what will/MD/will that/VB/that path/NN/path do/VB/do ?/./? that/IN/that path/NN/path will/MD/will visit/VB/visit some/DT/some vertices/NNS/vertices here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 47/CD/47 /CD/) and/CC/and at/IN/at some/DT/some point/NN/point it/PRP/it has/VBZ/has to/TO/to jump/VB/jump across/NNP/across. and/CC/and then/RB/then it/PRP/it has/VBZ/has to/TO/to come/VB/come to/TO/to w/VB/w /,/, may/MD/may be/VB/be it/PRP/it jumps/VBZ/jumps back/RB/back and/CC/and then/RB/then comes/VBZ/comes again/NNP/again. it/PRP/it can/MD/can do/VB/do a/DT/a whole/JJ/whole lot/NN/lot of/IN/of crazy/NN/crazy things/NNS/things /,/, but/CC/but it/PRP/it has/VBZ/has to/TO/to at/IN/at least/JJS/least jump/VB/jump across/NN/across once/NNP/once. if/IN/if it/PRP/it jumps/VBZ/jumps across/IN/across once/RB/once /,/, let/VB/let say/VBP/say it/PRP/it jumps/VBZ/jumps across/IN/across and/CC/and reaches/NNS/reaches vertex/NN/vertex x/NNP/x. what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this portion/NN/portion of/IN/of the/DT/the path/NN/path ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 16/CD/16 /CD/) greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to d/VB/d /:/[ x/NN/x /:/] /./. that/IN/that is/VBZ/is our/PRP$/our semantic/JJ/semantic that/IN/that we/PRP/we have/VBP/have associated/VBN/associated with/IN/with d/JJ/d /NN/[ x/NN/x /:/] /./. so/RB/so this/DT/this part/NN/part of/IN/of the/DT/the path/NN/path is/VBZ/is at/IN/at least/JJS/least d/NN/d /:/[ x/NN/x /:/] /./. /:/( hindi/NN/hindi conversation/NN/conversation /:/) why/WRB/why because/IN/because we/PRP/we said/VBD/said /,/, the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x which/WDT/which uses/NNS/uses only/RB/only vertices/NNS/vertices of/IN/of s/NNS/s /,/, has/VBZ/has length/NN/length d/NN/d /:/[ x/NN/x /:/] /./. this/DT/this is/VBZ/is the/DT/the path/NN/path which/WDT/which uses/NNS/uses vertices/VBZ/vertices only/RB/only of/IN/of s/NNP/s. so/RB/so it/PRP/it has/VBZ/has length/NN/length at/IN/at least/JJS/least d/NN/d /:/[ x/NN/x /:/] or/CC/or more/NNP/more. that/IN/that is/VBZ/is why/WRB/why i/PRP/i put/VBD/put greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/NN/to. this/DT/this part/NN/part of/IN/of the/DT/the path/NN/path whose/WP$/whose length/NN/length is/VBZ/is at/IN/at least/JJS/least d/NN/d /:/[ x/NN/x /:/] which/WDT/which means/VBZ/means the/DT/the entire/JJ/entire path/NN/path has/VBZ/has length/NN/length at/IN/at least/JJS/least d/NN/d /:/[ x/NN/x /:/] /./. here/RB/here i/PRP/i am/VBP/am using/VBG/using the/DT/the fact/NN/fact that/IN/that edge/NN/edge lengths/NNS/lengths are/VBP/are non/RB/non negative/NNP/negative. so/RB/so this/DT/this entire/JJ/entire path/NN/path that/WDT/that we/PRP/we have/VBP/have drawn/VBN/drawn has/VBZ/has length/NN/length at/IN/at least/JJS/least d/NN/d /:/[ x/NN/x /:/] /./. so/RB/so path/NN/path drawn/VBN/drawn has/VBZ/has length/NN/length greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to d/VB/d /:/[ x/NN/x /:/] /,/, which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than d/NN/d /:/[ w/NN/w /:/] /./. it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to /,/, may/MD/may be/VB/be they/PRP/they were/VBD/were at/IN/at the/DT/the same/JJ/same distance/NNP/distance. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 43/CD/43 /CD/) so/RB/so this/DT/this path/NN/path has/VBZ/has length/NN/length at/IN/at least/JJS/least as/IN/as large/JJ/large as/IN/as d/JJ/d /NN/[ w/NN/w /:/] /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 50/CD/50 /CD/) /./. which/WDT/which means/VBZ/means it/PRP/it is/VBZ/is not/RB/not a/DT/a shorter/NN/shorter path/NNP/path. we/PRP/we started/VBD/started of/IN/of by/IN/by saying/VBG/saying that/IN/that there/EX/there is/VBZ/is a/DT/a shorter/NN/shorter path/NN/path than/IN/than d/NN/d /:/[ w/NN/w /:/] /./. there/EX/there is/VBZ/is a/DT/a path/NN/path whose/WP$/whose length/NN/length is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than d/NN/d /:/[ w/NN/w /:/] /,/, so/RB/so that/IN/that is/VBZ/is not/RB/not the/DT/the case/NNP/case. if/IN/if there/EX/there was/VBD/was such/JJ/such a/DT/a path/NN/path it/PRP/it should/MD/should have/VB/have a/DT/a length/NN/length /,/, greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to d/VB/d /:/[ x/NN/x /:/] it/PRP/it can/MD/can not/RB/not be/VB/be strictly/RB/strictly less/JJR/less than/IN/than do/VB/do u/NNP/u. you/PRP/you said/VBD/said this/DT/this is/VBZ/is the/DT/the best/JJS/best path/NNP/path. all/DT/all i/PRP/i am/VBP/am saying/VBG/saying is/VBZ/is this/DT/this part/NN/part of/IN/of the/DT/the path/NN/path has/VBZ/has to/TO/to have/VB/have length/NN/length at/IN/at least/JJS/least d/NN/d /:/[ x/NN/x /:/] /./. if/IN/if it/PRP/it were/VBD/were the/DT/the shortest/JJS/shortest path/NN/path then/RB/then it/PRP/it would/MD/would have/VB/have exactly/RB/exactly d/VBN/d /-NONE-/[ x/NN/x /:/] /./. but/CC/but may/MD/may be/VB/be /,/, you/PRP/you did/VBD/did some/DT/some thing/NN/thing i/PRP/i do/VBP/do not/RB/not know/VB/know /,/, it/PRP/it is/VBZ/is at/IN/at least/JJS/least d/NN/d /:/[ x/NN/x /:/] /./. /:/( hindi/NN/hindi conversation/NN/conversation /:/) there/EX/there is/VBZ/is no/DT/no path/NN/path which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than length/NN/length d/NN/d /:/[ w/NN/w /:/] /./. there/EX/there is/VBZ/is no/DT/no possible/JJ/possible path/NN/path at/IN/at all/NNP/all. there/RB/there is/VBZ/is no/DT/no path/NN/path from/IN/from s/NNS/s to/TO/to w/VB/w of/IN/of length/NN/length strictly/RB/strictly less/JJR/less than/IN/than d/NN/d /:/[ w/NN/w /:/] /,/, which/WDT/which means/VBZ/means d/VBN/d /-NONE-/[ w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/NNP/w. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 37/CD/37 /CD/) and/CC/and so/RB/so we/PRP/we are/VBP/are justified/VBN/justified in/IN/in moving/NN/moving this/DT/this vertex/NN/vertex across/IN/across because/IN/because we/PRP/we have/VBP/have found/VBN/found the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path form/NN/form s/VBZ/s to/TO/to w/NNP/w. what/WP/what is/VBZ/is that/IN/that path/NN/path ?/./? that/IN/that path/NN/path would/MD/would include/VB/include some/DT/some vertices/NNS/vertices from/IN/from here/RB/here and/CC/and then/RB/then jumps/VBZ/jumps across/NNP/across. we/PRP/we are/VBP/are justified/VBN/justified in/IN/in moving/NN/moving this/DT/this vertex/NNP/vertex. let/VBD/let us/PRP/us recap/VB/recap the/DT/the argument/NNP/argument. this/DT/this clam/NN/clam is/VBZ/is okay/NN/okay /:/( hindi/NN/hindi conversation/NN/conversation /:/) we/PRP/we were/VBD/were proving/VBG/proving this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 07/CD/07 /CD/) length/NN/length of/IN/of shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u that/IN/that includes/NNS/includes only/RB/only vertices/NNS/vertices from/IN/from s/NNS/s equals/NNS/equals d/VBP/d /:/[ u/NN/u /:/] /./. this/DT/this we/PRP/we were/VBD/were proving/VBG/proving using/VBG/using induction/NN/induction and/CC/and when/WRB/when proving/VBG/proving this/DT/this induction/NN/induction statement/NN/statement we/PRP/we required/VBD/required that/IN/that /CD/( hindi/NN/hindi conversation/NN/conversation /:/) we/PRP/we have/VBP/have found/VBN/found a/DT/a shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x already/NNP/already. and/CC/and that/IN/that we/PRP/we have/VBP/have proved/VBN/proved now/RB/now which/WDT/which is/VBZ/is shown/VBN/shown in/IN/in the/DT/the slide/NN/slide that/IN/that is/VBZ/is /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 43/CD/43 /CD/) /CD/( hindi/NN/hindi conversation/NN/conversation /:/) induction/NN/induction is/VBZ/is being/VBG/being applied/VBN/applied on/IN/on the/DT/the number/NN/number of/IN/of elements/NNS/elements of/IN/of s/NNP/s. so/RB/so what/WP/what is/VBZ/is the/DT/the induction/NN/induction statement/NN/statement ?/./? what/WP/what should/MD/should be/VB/be the/DT/the induction/NN/induction statement/NN/statement ?/./? i/PRP/i have/VBP/have told/VBN/told you/PRP/you everything/NN/everything /,/, now/RB/now you/PRP/you need/VBP/need to/TO/to just/RB/just turn/VB/turn it/PRP/it in/IN/in your/PRP$/your head/NN/head and/CC/and figure/NN/figure out/RP/out what/WP/what is/VBZ/is right/RB/right induction/NN/induction statement/NN/statement ?/./? this/DT/this is/VBZ/is s/VBZ/s and/CC/and this/DT/this is/VBZ/is s/VBZ/s complement/NN/complement /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 21/CD/21 /CD/) /./. so/RB/so the/DT/the induction/NN/induction statement/NN/statement should/MD/should be/VB/be for/IN/for all/PDT/all x/NN/x in/IN/in s/NNP/s. what/WP/what should/MD/should i/VB/i write/JJ/write after/IN/after this/DT/this ?/./? d/NN/d /:/[ x/NN/x /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/NNP/x. for/IN/for all/DT/all x/NN/x in/IN/in s/NNS/s complement/NN/complement /,/, d/VBD/d /:/[ x/NN/x /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to x/VB/x which/WDT/which includes/VBZ/includes only/RB/only vertices/VBZ/vertices of/IN/of capital/NN/capital s/NNP/s. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) induction/NN/induction hypothesis/NNP/hypothesis. how/WRB/how will/MD/will this/DT/this work/NN/work ?/./? we/PRP/we will/MD/will do/VB/do the/DT/the base/NN/base case/NN/case later/NNP/later. we/PRP/we say/VBP/say there/RB/there is/VBZ/is a/DT/a vertex/NN/vertex w/NN/w /,/, which/WDT/which we/PRP/we move/VBP/move from/IN/from here/RB/here to/TO/to here/NNP/here. since/IN/since it/PRP/it has/VBZ/has moved/VBN/moved from/IN/from here/RB/here to/TO/to here/RB/here /,/, we/PRP/we have/VBP/have to/TO/to argue/VB/argue for/IN/for vertex/NN/vertex w/NN/w that/WDT/that d/NN/d /:/[ w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/NNP/w. that/IN/that we/PRP/we did/VBD/did here/RB/here /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 26/CD/26 /CD/) /,/, d/JJ/d /NN/[ w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/NNP/w. for/IN/for the/DT/the other/JJ/other vertices/NNS/vertices s/NNS/s complement/VBP/complement we/PRP/we have/VBP/have to/TO/to argue/VB/argue this/DT/this statement/NN/statement that/IN/that /CD/( hindi/NN/hindi conversation/NN/conversation /:/) and/CC/and that/IN/that we/PRP/we have/VBP/have done/VBN/done in/IN/in the/DT/the slide/NN/slide which/WDT/which is/VBZ/is given/VBN/given above/IN/above that/DT/that is/VBZ/is d/VBN/d /-NONE-/[ u/RB/u /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u that/IN/that includes/NNS/includes only/RB/only vertices/NNS/vertices from/IN/from s/NNP/s. basically/RB/basically this/DT/this was/VBD/was vertex/NN/vertex u1/NNP/u1 /,/, we/PRP/we looked/VBD/looked at/IN/at these/DT/these three/CD/three cases/NNS/cases /:/( hindi/NN/hindi conversation/NN/conversation /:/) from/IN/from s/NNS/s to/TO/to u1/NNP/u1 which/WDT/which only/RB/only include/VBP/include these/DT/these vertices/NNS/vertices from/IN/from s/NNP/s. that/IN/that either/DT/either includes/VBZ/includes the/DT/the vertex/NN/vertex w/NN/w /,/, if/IN/if it/PRP/it does/VBZ/does not/RB/not include/VB/include the/DT/the vertex/NN/vertex w/NN/w then/RB/then we/PRP/we know/VBP/know that/IN/that the/DT/the length/NN/length of/IN/of such/JJ/such a/DT/a path/NN/path can/MD/can not/RB/not be/VB/be no/RB/no more/JJR/more than/IN/than d/JJ/d /NN/[ u1/NNP/u1 /NNP/] /./. if/IN/if it/PRP/it includes/VBZ/includes the/DT/the vertex/NN/vertex w/NN/w then/RB/then if/IN/if it/PRP/it were/VBD/were such/JJ/such a/DT/a path/NN/path then/RB/then its/PRP$/its length/NN/length is/VBZ/is no/DT/no more/RBR/more than/IN/than d/NN/d /:/[ u1/NNP/u1 /:/] but/CC/but if/IN/if it/PRP/it were/VBD/were such/JJ/such a/DT/a path/NN/path case/NN/case two/CD/two then/RB/then its/PRP$/its length/NN/length is/VBZ/is exactly/RB/exactly this/DT/this /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 36/CD/36 /CD/) /./. so/RB/so the/DT/the minimum/JJ/minimum of/IN/of these/DT/these 2/CD/2 quantities/NNS/quantities is/VBZ/is the/DT/the length/NN/length of/IN/of shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u1/NNP/u1 which/WDT/which only/RB/only includes/VBZ/includes vertices/NNS/vertices of/IN/of s/NNS/s +/:/+ w/NNP/w. /:/( hindi/NN/hindi conversation/NN/conversation /:/) for/IN/for the/DT/the other/JJ/other vertices/NNS/vertices basically/RB/basically sub/VBP/sub vertices/NNS/vertices /:/( hindi/NN/hindi conversation/NN/conversation /:/) statement/NN/statement continues/NNP/continues. it/PRP/it will/MD/will continue/VB/continue to/TO/to remain/VB/remain true/JJ/true because/IN/because we/PRP/we have/VBP/have not/RB/not changed/VBN/changed the/DT/the distance/NN/distance labels/NNS/labels at/IN/at all/NNP/all. what/WP/what have/VBP/have we/PRP/we changed/VBN/changed as/IN/as the/DT/the result/NN/result of/IN/of this/DT/this ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 02-35/CD/02-35 /:/: 26/CD/26 /CD/) we/PRP/we have/VBP/have moved/VBN/moved one/CD/one vertex/NN/vertex from/IN/from here/RB/here to/TO/to here/RB/here and/CC/and changed/VBD/changed the/DT/the distance/NN/distance label/NN/label of/IN/of these/DT/these vertices/NNP/vertices. since/IN/since we/PRP/we have/VBP/have changed/VBN/changed the/DT/the distance/NN/distance label/NN/label of/IN/of these/DT/these vertices/NNS/vertices /,/, we/PRP/we need/VBP/need to/TO/to argue/VB/argue this/DT/this statement/NN/statement of/IN/of those/DT/those vertices/NNS/vertices and/CC/and since/IN/since we/PRP/we move/VBP/move this/DT/this vertex/NN/vertex from/IN/from here/RB/here to/TO/to here/RB/here we/PRP/we need/VBP/need to/TO/to argue/VB/argue this/DT/this statement/NN/statement for/IN/for these/DT/these vertices/NNS/vertices and/CC/and we/PRP/we have/VBP/have done/VBN/done that/NNP/that. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) which/WDT/which only/RB/only includes/VBZ/includes vertices/NNS/vertices of/IN/of s/NNP/s. no/DT/no /,/, you/PRP/you do/VBP/do not/RB/not want/VB/want to/TO/to say/VB/say /:/( hindi/NN/hindi conversation/NN/conversation /:/) if/IN/if you/PRP/you just/RB/just say/VBP/say that/IN/that for/IN/for all/PDT/all x/NN/x /,/, d/VBD/d /:/[ x/NN/x /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path which/WDT/which includes/VBZ/includes only/RB/only vertices/VBZ/vertices of/IN/of s/NNP/s. when/WRB/when w/NN/w comes/VBZ/comes in/IN/in here/RB/here /,/, you/PRP/you will/MD/will have/VB/have to/TO/to look/VB/look at/IN/at all/DT/all the/DT/the vertices/NNS/vertices their/PRP$/their and/CC/and also/RB/also argue/VBP/argue that/IN/that why/WRB/why w/NN/w coming/VBG/coming in/IN/in /,/, the/DT/the length/NN/length of/IN/of their/PRP$/their shortest/NN/shortest path/NN/path is/VBZ/is not/RB/not reduced/NNP/reduced. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 13/CD/13 /CD/) because/IN/because w/NN/w only/RB/only comes/VBZ/comes in/IN/in now/RB/now /:/( hindi/NN/hindi conversation/NN/conversation /:/) complicated/NNP/complicated. this/DT/this is/VBZ/is what/WP/what exactly/RB/exactly the/DT/the thing/NN/thing is/NNP/is. so/RB/so vertices/VBZ/vertices /:/( hindi/NN/hindi conversation/NN/conversation /:/) number/NN/number /,/, right/RB/right number/NN/number and/CC/and they/PRP/they will/MD/will not/RB/not change/NNP/change. that/WDT/that is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to those/DT/those vertices/NNS/vertices /,/, period/NNP/period. and/CC/and those/DT/those vertices/NNS/vertices s/VBZ/s complement/NN/complement /:/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that is/VBZ/is qualified/VBN/qualified in/IN/in a/DT/a certain/JJ/certain way/NNP/way. that/IN/that is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to that/DT/that vertex/NN/vertex /,/, provided/VBN/provided the/DT/the path/NN/path uses/VBZ/uses only/RB/only the/DT/the vertices/NNS/vertices of/IN/of capital/NN/capital s/NNP/s. that/IN/that is/VBZ/is the/DT/the qualification/NN/qualification to/TO/to the/DT/the path/NN/path /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. this/DT/this is/VBZ/is the/DT/the property/NN/property that/IN/that you/PRP/you have/VBP/have to/TO/to keep/VB/keep in/IN/in mind/NN/mind about/IN/about these/DT/these things/NNP/things. no/DT/no /,/, for/IN/for the/DT/the vertices/NNS/vertices which/WDT/which are/VBP/are already/RB/already here/RB/here /,/, it/PRP/it is/VBZ/is the/DT/the same/NNP/same. we/PRP/we have/VBP/have not/RB/not changed/VBN/changed the/DT/the distance/NN/distance labels/NNS/labels for/IN/for those/DT/those vertices/NNS/vertices at/IN/at all/NNP/all. if/IN/if earlier/JJR/earlier it/PRP/it was/VBD/was true/JJ/true that/IN/that for/IN/for a/DT/a vertex/NN/vertex which/WDT/which was/VBD/was here/RB/here /,/, the/DT/the d/NN/d was/VBD/was the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to that/DT/that vertex/NNP/vertex. then/RB/then it/PRP/it remains/VBZ/remains /,/, it/PRP/it is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path unqualified/NNP/unqualified. this/DT/this is/VBZ/is not/RB/not qualified/VBN/qualified /-NONE-/( hindi/NN/hindi conversation/NN/conversation /:/) it/PRP/it is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to that/DT/that vertex/NNP/vertex. let/VBD/let us/PRP/us do/VBP/do the/DT/the base/NN/base case/NNP/case. what/WP/what is/VBZ/is the/DT/the base/NN/base case/NN/case ?/./? but/CC/but base/NN/base case/NN/case is/VBZ/is very/RB/very simple/NNP/simple. the/DT/the s/NNS/s has/VBZ/has only/RB/only little/JJ/little s/NNS/s in/IN/in it/PRP/it and/CC/and s/VBZ/s complement/NN/complement is/VBZ/is every/DT/every thing/NN/thing but/CC/but little/RB/little s/VBZ/s in/IN/in it/NNP/it. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) basically/RB/basically length/NN/length of/IN/of this/DT/this edge/NN/edge only/NNP/only. we/PRP/we start/VBP/start of/IN/of by/IN/by putting/NN/putting these/DT/these as/IN/as infinite/JJ/infinite but/CC/but then/RB/then the/DT/the moment/NN/moment we/PRP/we move/VBP/move this/DT/this across/NN/across /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 00/CD/00 /CD/) /,/, this/DT/this will/MD/will get/VB/get the/DT/the length/NN/length equal/JJ/equal to/TO/to this/NNP/this. so/RB/so if/IN/if this/DT/this was/VBD/was 7/CD/7 /,/, this/DT/this was/VBD/was 12/CD/12 and/CC/and this/DT/this was/VBD/was 3/CD/3 /,/, then/RB/then these/DT/these would/MD/would get/VB/get distance/NN/distance labels/NNS/labels 3/CD/3 /,/, 12/CD/12 and/CC/and 7/CD/7. is/VBZ/is this/DT/this correct/NN/correct ?/./? is/VBZ/is this/DT/this the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex which/WDT/which uses/NNS/uses vertices/VBZ/vertices of/IN/of capital/NN/capital s/NNS/s only/RB/only ?/./? yes/NNS/yes /,/, there/EX/there is/VBZ/is no/DT/no other/JJ/other vertex/NN/vertex in/IN/in capital/NN/capital s/NNP/s. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 30/CD/30 /CD/) so/RB/so there/RB/there is/VBZ/is only/RB/only this/DT/this one/CD/one edge/NN/edge and/CC/and it/PRP/it is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. it/PRP/it is/VBZ/is similarly/RB/similarly for/IN/for 7/CD/7 and/CC/and 12/CD/12 /,/, so/RB/so it/PRP/it is/VBZ/is correct/NNP/correct. the/DT/the base/NN/base case/NN/case is/VBZ/is correct/JJ/correct and/CC/and at/IN/at each/DT/each step/NN/step we/PRP/we are/VBP/are maintaining/VBG/maintaining these/DT/these 2/CD/2 properties/NNP/properties. this/DT/this is/VBZ/is what/WP/what you/PRP/you have/VBP/have to/TO/to keep/VB/keep in/IN/in mind/NNP/mind. you/PRP/you just/RB/just have/VBP/have to/TO/to say/VB/say this/DT/this is/VBZ/is length/NN/length l1/NNP/l1 /,/, this/DT/this is/VBZ/is length/NN/length l2/NNP/l2 and/CC/and this/DT/this is/VBZ/is length/NN/length l3/NNP/l3 and/CC/and this/DT/this will/MD/will have/VB/have l3/NNP/l3 written/VBN/written on/IN/on it/PRP/it /,/, this/DT/this have/VBP/have l2/NNP/l2 written/VBN/written on/IN/on it/PRP/it and/CC/and this/DT/this will/MD/will have/VB/have length/NN/length l1/NNP/l1 on/IN/on it/NNP/it. and/CC/and this/DT/this need/NN/need not/RB/not be/VB/be 3/CD/3 edges/NNS/edges and/CC/and there/EX/there can/MD/can be/VB/be any/DT/any number/NN/number of/IN/of edges/NNP/edges. this/DT/this is/VBZ/is a/DT/a proof/NN/proof for/IN/for any/DT/any graph/NNP/graph. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that argues/NNS/argues the/DT/the correctness/NN/correctness of/IN/of this/DT/this algorithm/NNP/algorithm. this/DT/this algorithm/NN/algorithm is/VBZ/is due/JJ/due to/TO/to dijkstra/VB/dijkstra where/WRB/where j/NN/j is/VBZ/is pronounced/VBN/pronounced as/RB/as y/JJ/y /,/, so/RB/so it/PRP/it becomes/VBZ/becomes dijkstra/NNP/dijkstra. what/WP/what did/VBD/did we/PRP/we argue/VBP/argue is/VBZ/is the/DT/the running/VBG/running time/NN/time of/IN/of this/DT/this algorithm/NN/algorithm ?/./? this/DT/this algorithm/NN/algorithm would/MD/would not/RB/not work/VB/work if/IN/if the/DT/the graph/NN/graph had/VBD/had edges/NNS/edges of/IN/of negative/JJ/negative length/NNP/length. in/IN/in fact/NN/fact if/IN/if a/DT/a graph/NN/graph has/VBZ/has edges/NNS/edges of/IN/of negative/JJ/negative length/NN/length then/RB/then actually/RB/actually there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of a/DT/a shortest/NN/shortest path/NN/path some/DT/some times/NNP/times. do/VBP/do you/PRP/you understand/VB/understand what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to say/VB/say ?/./? suppose/NN/suppose this/DT/this was/VBD/was my/PRP$/my graph/NN/graph /,/, one/CD/one comes/VBZ/comes repeatedly/NNP/repeatedly. so/RB/so for/IN/for instance/NN/instance the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t has/VBZ/has length/NN/length minus/NN/minus infinity/NNP/infinity. why/WRB/why /,/, because/IN/because i/PRP/i start/VBP/start from/IN/from here/RB/here /,/, go/VBP/go down/RB/down /,/, i/PRP/i come/VBP/come back/RB/back and/CC/and keep/VB/keep going/VBG/going /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 33/CD/33 /CD/) /./. every/DT/every time/NN/time i/PRP/i go/VBP/go around/RP/around this/DT/this cycle/NN/cycle /,/, i/PRP/i get/VBP/get minus/RB/minus one/CD/one and/CC/and i/PRP/i just/RB/just keep/VB/keep doing/VBG/doing this/NNP/this. so/RB/so the/DT/the problem/NN/problem is/VBZ/is because/IN/because you/PRP/you have/VBP/have a/DT/a negative/JJ/negative cycle/NNP/cycle. this/DT/this is/VBZ/is called/VBN/called a/DT/a negative/JJ/negative cycle/NNP/cycle. if/IN/if the/DT/the graph/NN/graph has/VBZ/has a/DT/a negative/JJ/negative cycle/NN/cycle then/RB/then the/DT/the shortest/NN/shortest path/NN/path is/VBZ/is not/RB/not defined/NNP/defined. there/RB/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of a/DT/a shortest/NN/shortest path/NN/path any/DT/any more/RBR/more /,/, because/IN/because the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path could/MD/could be/VB/be minus/RB/minus infinity/NNP/infinity. but/CC/but this/DT/this graph/NN/graph need/VBP/need not/RB/not have/VB/have a/DT/a negative/JJ/negative cycle/NNP/cycle. for/IN/for instance/NN/instance if/IN/if this/DT/this edge/NN/edge had/VBD/had a/DT/a length/NN/length of/IN/of minus/NN/minus one/CD/one /,/, now/RB/now what/WP/what is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t ?/./? it/PRP/it is/VBZ/is length/NN/length one/CD/one /,/, i/PRP/i would/MD/would go/VB/go like/IN/like this/DT/this /,/, come/VBP/come down/RB/down and/CC/and then/RB/then go/VB/go like/IN/like this/NNP/this. what/WP/what will/MD/will be/VB/be the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path ?/./? it/PRP/it is/VBZ/is one/NNP/one. when/WRB/when do/VBP/do you/PRP/you think/VB/think negative/JJ/negative length/NN/length make/NN/make sense/NN/sense ?/./? is/VBZ/is this/DT/this very/RB/very artificial/JJ/artificial /,/, negative/JJ/negative lengths/NNS/lengths /,/, can/MD/can you/PRP/you think/VB/think of/IN/of a/DT/a setting/NN/setting ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 25/CD/25 /CD/) what/WP/what other/JJ/other settings/NNS/settings can/MD/can you/PRP/you think/VB/think where/WRB/where you/PRP/you can/MD/can have/VB/have negative/JJ/negative edge/NN/edge lengths/NNS/lengths ?/./? so/RB/so one/CD/one other/JJ/other setting/NN/setting that/IN/that i/PRP/i saw/VBD/saw somewhere/RB/somewhere was/VBD/was /,/, this/DT/this is/VBZ/is a/DT/a graph/NN/graph which/WDT/which represents/NNS/represents currency/VBP/currency tradings/NNP/tradings. you/PRP/you can/MD/can think/VB/think of/IN/of it/PRP/it in/IN/in a/DT/a different/JJ/different setting/NN/setting also/NNP/also. so/RB/so each/DT/each node/NN/node is/VBZ/is a/DT/a currency/NN/currency /,/, you/PRP/you are/VBP/are a/DT/a global/JJ/global currency/NN/currency trader/NNP/trader. and/CC/and then/RB/then an/DT/an edge/NN/edge reflects/VBZ/reflects that/IN/that if/IN/if i/PRP/i change/VBP/change from/IN/from /,/, if/IN/if this/DT/this is/VBZ/is let/VB/let say/NN/say rupees/NNS/rupees /,/, this/DT/this is/VBZ/is indonesian/JJ/indonesian path/NN/path then/RB/then this/DT/this is/VBZ/is the/DT/the profit/NN/profit i/PRP/i incur/VBP/incur in/IN/in doing/VBG/doing that/NNP/that. and/CC/and negative/JJ/negative would/MD/would then/RB/then correspond/VB/correspond to/TO/to a/DT/a loss/NN/loss because/IN/because of/IN/of what/WP/what ever/RB/ever i/PRP/i exchanged/VBD/exchanged at/IN/at that/DT/that point/NN/point of/IN/of time/NNP/time. and/CC/and then/RB/then finally/RB/finally you/PRP/you want/VBP/want to/TO/to change/VB/change your/PRP$/your rupees/NNS/rupees into/IN/into /,/, let/VB/let say/VBP/say back/RB/back into/IN/into rupees/NNP/rupees. what/WP/what you/PRP/you are/VBP/are seeing/VBG/seeing if/IN/if there/EX/there is/VBZ/is a/DT/a positive/JJ/positive cycle/NN/cycle in/IN/in this/DT/this graph/NNP/graph. then/RB/then you/PRP/you will/MD/will just/RB/just keep/VB/keep going/VBG/going around/IN/around the/DT/the cycle/NN/cycle and/CC/and keep/VB/keep making/VBG/making when/WRB/when see/NN/see /:/( hindi/NN/hindi conversation/NN/conversation /:/) i/PRP/i do/VBP/do not/RB/not understand/VB/understand your/PRP$/your example/NN/example but/CC/but there/EX/there are/VBP/are many/JJ/many such/JJ/such setting/NN/setting where/WRB/where negative/JJ/negative would/MD/would make/VB/make sense/NNP/sense. how/WRB/how can/MD/can i/VB/i solve/VB/solve this/DT/this or/CC/or how/WRB/how can/MD/can i/VB/i find/VB/find out/RP/out the/DT/the shortest/JJS/shortest path/NN/path in/IN/in graph/NN/graph which/WDT/which has/VBZ/has negative/JJ/negative edge/NN/edge lengths/NNS/lengths ?/./? does/VBZ/does dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm work/NN/work here/RB/here ?/./? keep/VB/keep the/DT/the minimum/JJ/minimum as/IN/as zero/NN/zero and/CC/and shift/NN/shift increase/NN/increase everything/NN/everything by/IN/by plus/NN/plus one/CD/one that/WDT/that is/VBZ/is by/IN/by the/DT/the minimum/JJ/minimum /NN/( hindi/NN/hindi conversation/NN/conversation /:/) /./. add/NN/add sufficiently/RB/sufficiently a/DT/a larger/JJR/larger number/NN/number so/RB/so that/IN/that there/EX/there is/VBZ/is no/DT/no negative/JJ/negative length/NNP/length. brilliant/JJ/brilliant idea/NN/idea except/IN/except that/DT/that it/PRP/it does/VBZ/does not/RB/not work/VB/work /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. you/PRP/you add/VBD/add a/DT/a delta/NN/delta x/NN/x so/RB/so that/IN/that everything/NN/everything becomes/VBZ/becomes positive/NNP/positive. why/WRB/why does/VBZ/does this/DT/this not/RB/not work/VB/work ?/./? number/NN/number of/IN/of edges/NNS/edges on/IN/on one/CD/one path/NN/path could/MD/could be/VB/be different/JJ/different from/IN/from number/NN/number of/IN/of edges/NNS/edges on/IN/on another/DT/another path/NNP/path. suppose/NN/suppose i/PRP/i have/VBP/have a/DT/a very/RB/very simple/JJ/simple graph/NN/graph /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. what/WP/what am/NN/am i/PRP/i trying/VBG/trying to/TO/to show/VB/show you/PRP/you ?/./? what/WP/what will/MD/will i/VB/i do/VBP/do ?/./? let/VB/let me/PRP/me finish/VB/finish this/DT/this example/NN/example first/NNP/first. so/RB/so this/DT/this path/NN/path is/VBZ/is the/DT/the shorter/NN/shorter path/NN/path but/CC/but its/PRP$/its length/NN/length increases/NNS/increases because/IN/because there/EX/there are/VBP/are a/DT/a lot/NN/lot of/IN/of edges/NNS/edges on/IN/on it/NNP/it. let/NN/let say/VBP/say all/DT/all edges/NNS/edges had/VBD/had length/NN/length one/CD/one on/IN/on it/PRP/it and/CC/and one/CD/one edge/NN/edge had/VBD/had a/DT/a length/NN/length of/IN/of minus/NN/minus one/NNP/one. so/RB/so what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path ?/./? the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path is/VBZ/is 3/CD/3 +/CD/+ 4/CD/4 =/CD/= 7-1/CD/7-1 =/CD/= 6/CD/6. let/NN/let us/PRP/us make/VBP/make this/DT/this path/NN/path of/IN/of length/NN/length longer/NN/longer than/IN/than 6/CD/6 /,/, so/RB/so let/VB/let make/NN/make it/PRP/it 3/CD/3 /,/, 3/CD/3 /,/, 3/CD/3. this/DT/this becomes/VBZ/becomes 9/CD/9. if/IN/if i/PRP/i increase/VBP/increase everything/VBG/everything or/CC/or let/VB/let me/PRP/me make/VB/make it/PRP/it 3/CD/3 /,/, 2/CD/2 /,/, 2/CD/2 just/RB/just to/TO/to be/VB/be on/IN/on the/DT/the safe/NN/safe side/NNP/side. so/RB/so it/PRP/it is/VBZ/is 7/CD/7 /,/, longer/JJR/longer than/IN/than this/NNP/this. so/RB/so this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path but/CC/but if/IN/if i/PRP/i now/RB/now increase/VB/increase every/DT/every edge/NN/edge by/IN/by one/CD/one /,/, then/RB/then what/WP/what is/VBZ/is the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. so/RB/so /:/( hindi/NN/hindi conversation/NN/conversation /:/) what/WP/what do/VBP/do you/PRP/you mean/VB/mean reconvert/NN/reconvert back/RB/back ?/./? keep/VB/keep track/NN/track of/IN/of number/NN/number of/IN/of edges/NNP/edges. how/WRB/how will/MD/will you/PRP/you keep/VB/keep track/NN/track of/IN/of number/NN/number of/IN/of edges/NNS/edges on/IN/on the/DT/the path/NN/path ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of a/DT/a shortest/NN/shortest path/NN/path if/IN/if there/EX/there is/VBZ/is a/DT/a negative/JJ/negative cycle/NNP/cycle. but/CC/but the/DT/the graph/NN/graph need/VBP/need not/RB/not have/VB/have a/DT/a negative/JJ/negative cycle/NN/cycle /,/, let/VB/let say/VBP/say this/DT/this graph/NN/graph there/RB/there is/VBZ/is no/DT/no negative/JJ/negative cycle/NN/cycle in/IN/in the/DT/the graph/NNP/graph. negative/JJ/negative cycle/NN/cycle /:/( hindi/NN/hindi conversation/NN/conversation /:/) is/VBZ/is well/RB/well defined/NNP/defined. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 55/CD/55 /CD/) so/RB/so first/JJ/first tell/NN/tell me/PRP/me what/WP/what goes/VBZ/goes wrong/JJ/wrong in/IN/in the/DT/the dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm ?/./? where/WRB/where does/VBZ/does it/PRP/it break/VB/break down/IN/down ?/./? did/VBD/did this/DT/this argument/NN/argument break/NN/break down/IN/down ?/./? here/RB/here we/PRP/we argued/VBD/argued the/DT/the d/NN/d /:/[ u/NN/u /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u that/IN/that includes/NNS/includes only/RB/only vertices/NNS/vertices from/IN/from s/NNP/s. does/VBZ/does this/DT/this break/NN/break down/RP/down ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) this/DT/this part/NN/part of/IN/of argument/NN/argument is/VBZ/is fine/NN/fine i/PRP/i think/VBP/think /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 10/CD/10 /CD/) /./. but/CC/but this/DT/this part/NN/part of/IN/of the/DT/the argument/NN/argument /,/, when/WRB/when we/PRP/we said/VBD/said the/DT/the d/NN/d /:/[ w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/VB/w /,/, is/VBZ/is not/RB/not correct/JJ/correct any/DT/any more/NNP/more. because/IN/because i/PRP/i could/MD/could have/VB/have a/DT/a path/NN/path which/WDT/which goes/VBZ/goes like/IN/like this/NNP/this. but/CC/but this/DT/this is/VBZ/is shorter/NN/shorter than/IN/than d/NN/d /:/[ w/NN/w /:/] because/IN/because there/EX/there are/VBP/are plenty/NN/plenty of/IN/of negative/JJ/negative edges/NNS/edges on/IN/on this/DT/this part/NNP/part. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 43/CD/43 /CD/) so/RB/so this/DT/this inequality/NN/inequality is/VBZ/is not/RB/not true/NNP/true. /:/( hindi/NN/hindi conversation/NN/conversation /:/) now/RB/now i/PRP/i can/MD/can not/RB/not say/VB/say anymore/RB/anymore that/IN/that d/NN/d /:/[ w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/VB/w /,/, this/DT/this thing/NN/thing breaks/VBZ/breaks down/NNP/down. so/RB/so dijkstra/JJ/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm does/VBZ/does not/RB/not work/VB/work /,/, you/PRP/you can/MD/can not/RB/not use/VB/use dijkstra/NN/dijkstra ?/./? s/NNS/s algorithm/VBP/algorithm to/TO/to compute/VB/compute shortest/JJS/shortest path/NN/path if/IN/if you/PRP/you have/VBP/have negative/JJ/negative edge/NN/edge length/NNP/length. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) how/WRB/how are/VBP/are you/PRP/you going/VBG/going to/TO/to make/VB/make your/PRP$/your millions/NNS/millions ?/./? how/WRB/how will/MD/will you/PRP/you do/VB/do that/DT/that tell/NN/tell me/PRP/me ?/./? so/RB/so this/DT/this is/VBZ/is a/DT/a valid/JJ/valid question/NN/question here/NNP/here. we/PRP/we will/MD/will basically/RB/basically not/RB/not discuss/VB/discuss it/PRP/it today/NN/today /,/, because/IN/because we/PRP/we do/VBP/do not/RB/not have/VB/have the/DT/the time/NN/time do/VBP/do it/NNP/it. so/RB/so that/IN/that is/VBZ/is one/CD/one thing/NN/thing remains/VBZ/remains to/TO/to be/VB/be done/NNP/done. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) every/DT/every vertex/NN/vertex has/VBZ/has linked/VBN/linked list/NN/list of/IN/of edges/NNP/edges. what/WP/what does/VBZ/does it/PRP/it do/VBP/do with/IN/with the/DT/the linked/VBN/linked list/NN/list of/IN/of edges/NNS/edges ?/./? what/WP/what way/NN/way does/VBZ/does it/PRP/it maintain/VB/maintain a/DT/a pointer/NN/pointer to/TO/to ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to w/VB/w and/CC/and then/RB/then the/DT/the edge/NN/edge w/NN/w u1/NNP/u1. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) and/CC/and so/RB/so on/IN/on /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) /./. we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at it/PRP/it in/IN/in more/JJR/more detail/NN/detail in/IN/in the/DT/the next/JJ/next class/NNP/class. how/WRB/how exactly/RB/exactly you/PRP/you are/VBP/are going/VBG/going to/TO/to do/VB/do it/PRP/it /,/, what/WDT/what is/VBZ/is the/DT/the modification/NN/modification to/TO/to the/DT/the code/NN/code that/IN/that will/MD/will be/VB/be required/VBN/required do/VB/do such/JJ/such a/DT/a thing/NNP/thing. that/WDT/that is/VBZ/is the/DT/the one/CD/one thing/NN/thing i/PRP/i would/MD/would like/VB/like to/TO/to cover/NNP/cover. the/DT/the other/JJ/other thing/NN/thing i/PRP/i would/MD/would like/VB/like to/TO/to cover/VB/cover is/VBZ/is also/RB/also to/TO/to show/VB/show you/PRP/you an/DT/an algorithm/NN/algorithm to/TO/to compute/VB/compute shortest/JJS/shortest paths/NNS/paths /,/, when/WRB/when you/PRP/you have/VBP/have negative/JJ/negative edge/NN/edge lengths/NNP/lengths. but/CC/but it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be very/RB/very different/JJ/different from/IN/from this/DT/this algorithm/NNP/algorithm. these/DT/these are/VBP/are the/DT/the two/CD/two things/NNS/things that/WDT/that remain/NN/remain /,/, we/PRP/we will/MD/will take/VB/take this/DT/this up/NN/up in/IN/in the/DT/the next/JJ/next class/NNP/class. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 36/CD/36 single/JJ/single source/NN/source shortest/NN/shortest paths/NNS/paths we/PRP/we will/MD/will continue/VB/continue our/PRP$/our discussion/NN/discussion on/IN/on single/JJ/single source/NN/source shortest/NN/shortest path/NNP/path. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to actually/RB/actually compute/VB/compute the/DT/the path/NNP/path. in/IN/in the/DT/the last/JJ/last class/NN/class we/PRP/we have/VBP/have seen/VBN/seen how/WRB/how to/TO/to compute/VB/compute the/DT/the distance/NN/distance of/IN/of any/DT/any given/VBN/given vertex/NN/vertex from/IN/from the/DT/the source/NN/source /,/, when/WRB/when all/DT/all edges/NNS/edges had/VBD/had non/VBN/non negative/JJ/negative lengths/NNP/lengths. today/NN/today we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how the/DT/the path/NN/path can/MD/can be/VB/be found/VBN/found and/CC/and in/IN/in second/JJ/second part/NN/part we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see how/WRB/how to/TO/to compute/VB/compute single/JJ/single source/NN/source shortest/NN/shortest path/NN/path when/WRB/when edges/NNS/edges might/MD/might have/VB/have negative/JJ/negative lengths/NNP/lengths. i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start from/IN/from the/DT/the picture/NNP/picture. you/PRP/you have/VBP/have s/NNS/s /,/, and/CC/and there/EX/there was/VBD/was a/DT/a vertex/NN/vertex w/NNP/w. so/RB/so the/DT/the should/MD/should be/VB/be /./. the/DT/the vertex/NN/vertex w/NN/w is/VBZ/is going/VBG/going to/TO/to move/VB/move from/IN/from right/RB/right to/TO/to left/VB/left and/CC/and when/WRB/when this/DT/this vertex/NN/vertex is/VBZ/is moving/VBG/moving it/PRP/it causes/VBZ/causes the/DT/the distance/NN/distance label/NN/label of/IN/of the/DT/the adjacent/NN/adjacent vertices/NNS/vertices to/TO/to be/VB/be updated/NNP/updated. if/IN/if this/DT/this were/VBD/were the/DT/the vertex/NN/vertex u/NN/u /,/, we/PRP/we said/VBD/said that/IN/that d/NN/d /:/[ u/NN/u /:/] is/VBZ/is going/VBG/going to/TO/to be/VB/be min/VBN/min /-NONE-/[ d/VBN/d /-NONE-/[ u/RB/u /:/] /,/, d/VBD/d /:/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ w/NN/w /,/, u/NN/u /:/] /:/] /./. i/PRP/i have/VBP/have repeated/VBN/repeated this/DT/this many/JJ/many times/NNP/times. essentially/RB/essentially what/WP/what this/DT/this means/VBZ/means is/VBZ/is that/IN/that if/IN/if d/JJ/d /NN/[ u/NN/u /:/] is/VBZ/is getting/VBG/getting this/DT/this /NN/( d/VBD/d /CD/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ w/NN/w /,/, u/NN/u /:/] /:/) value/NN/value then/RB/then that/IN/that means/NNS/means the/DT/the best/JJS/best path/NN/path that/WDT/that i/PRP/i am/VBP/am finding/VBG/finding from/IN/from s/NNS/s to/TO/to u/VB/u which/WDT/which includes/VBZ/includes only/RB/only vertices/VBZ/vertices of/IN/of s/NNS/s and/CC/and w/NNP/w. and/CC/and it/PRP/it is/VBZ/is going/VBG/going through/IN/through w/NN/w or/CC/or w/VB/w is/VBZ/is the/DT/the vertex/NN/vertex preceding/VBG/preceding u/NN/u on/IN/on the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to u/NNP/u. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 50/CD/50 /CD/) let/NN/let me/PRP/me write/VBP/write it/PRP/it down/IN/down /,/, if/IN/if d/NN/d /:/[ u/NN/u /:/] =/:/= d/NN/d /:/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ w/NN/w /,/, u/NN/u /:/] then/RB/then the/DT/the best/JJS/best path/NN/path or/CC/or the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u /:/( using/VBG/using vertices/NNS/vertices of/IN/of s/NNS/s +/:/+ w/NN/w /:/) has/VBZ/has w/NN/w preceding/VBG/preceding u/NNP/u. basically/RB/basically we/PRP/we are/VBP/are saying/VBG/saying that/IN/that the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u and/CC/and then/RB/then the/DT/the vertex/NN/vertex preceding/VBG/preceding u/NN/u on/IN/on that/DT/that path/NN/path is/VBZ/is w/NNP/w. this/DT/this is/VBZ/is the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u /,/, if/IN/if this/DT/this is/VBZ/is how/WRB/how the/DT/the updation/NN/updation is/VBZ/is happening/VBG/happening that/IN/that is/VBZ/is if/IN/if d/JJ/d /NN/[ u/NN/u /:/] was/VBD/was getting/VBG/getting this/DT/this /NN/( d/VBD/d /CD/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ w/NN/w /,/, u/NN/u /:/] /:/) value/NNP/value. and/CC/and this/DT/this is/VBZ/is not/RB/not the/DT/the best/JJS/best shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u because/IN/because this/DT/this is/VBZ/is under/IN/under this/DT/this qualification/NN/qualification /,/, using/VBG/using vertices/NNS/vertices only/RB/only of/IN/of s/NNS/s and/CC/and w/NNP/w. because/IN/because w/NN/w is/VBZ/is going/VBG/going to/TO/to left/VB/left hand/NN/hand side/NN/side and/CC/and using/VBG/using only/RB/only these/DT/these vertices/NNS/vertices the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u will/MD/will have/VB/have w/NN/w preceding/VBG/preceding u/NNP/u. this/DT/this is/VBZ/is the/DT/the information/NN/information we/PRP/we will/MD/will maintain/VB/maintain with/IN/with vertex/NN/vertex u/NNP/u. what/WP/what is/VBZ/is the/DT/the vertex/NN/vertex preceding/VBG/preceding it/PRP/it on/IN/on the/DT/the best/JJS/best path/NN/path that/WDT/that i/PRP/i have/VBP/have found/VBN/found so/RB/so far/RB/far ?/./? the/DT/the best/JJS/best path/NN/path means/VBZ/means the/DT/the shortest/JJS/shortest path/NNP/path. with/IN/with each/DT/each vertex/NN/vertex we/PRP/we maintain/VBP/maintain predecessor/NN/predecessor information/NNP/information. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/DT/that ?/./? if/IN/if w/NN/w =/:/= pred/VBN/pred /-NONE-/[ u/RB/u /:/] then/RB/then w/VB/w is/VBZ/is the/DT/the vertex/NN/vertex preceding/VBG/preceding u/NN/u on/IN/on the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to u/NNP/u. how/WRB/how am/NN/am i/PRP/i going/VBG/going to/TO/to use/VB/use this/DT/this information/NN/information to/TO/to compute/VB/compute the/DT/the shortest/JJS/shortest path/NN/path ?/./? suppose/NN/suppose i/PRP/i have/VBP/have this/DT/this predecessor/NN/predecessor information/NN/information for/IN/for each/DT/each vertex/NN/vertex /,/, this/DT/this is/VBZ/is vertex/NN/vertex u/NN/u and/CC/and i/PRP/i know/VBP/know that/IN/that the/DT/the vertex/NN/vertex which/WDT/which precedes/VBZ/precedes u/NN/u and/CC/and the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u is/VBZ/is pred/VBN/pred /-NONE-/[ u/RB/u /:/] and/CC/and i/PRP/i have/VBP/have maintained/VBN/maintained this/DT/this information/NNP/information. let/VBD/let say/VBP/say this/DT/this is/VBZ/is a/DT/a vertex/NN/vertex /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at predecessor/NN/predecessor of/IN/of because/IN/because this/DT/this part/NN/part of/IN/of the/DT/the path/NN/path from/IN/from s/NNS/s to/TO/to has/VBZ/has to/TO/to be/VB/be the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to /./. if/IN/if this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to u/VB/u then/RB/then this/DT/this has/VBZ/has to/TO/to be/VB/be the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to /./. the/DT/the predecessor/NN/predecessor of/IN/of would/MD/would be/VB/be the/DT/the vertex/NN/vertex preceding/VBG/preceding it/PRP/it /,/, on/IN/on the/DT/the shortest/JJS/shortest path/NN/path form/NN/form s/VBZ/s to/TO/to /./. so/RB/so this/DT/this vertex/NN/vertex would/MD/would be/VB/be predecessor/NN/predecessor of/IN/of /./. this/DT/this part/NN/part of/IN/of the/DT/the path/NN/path has/VBZ/has to/TO/to be/VB/be the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to /./. i/PRP/i have/VBP/have the/DT/the predecessor/NN/predecessor information/NN/information for/IN/for that/DT/that tells/VBZ/tells me/PRP/me what/WP/what is/VBZ/is the/DT/the vertex/NN/vertex preceding/VBG/preceding on/IN/on the/DT/the best/JJS/best path/NN/path from/IN/from s/NNS/s to/TO/to /./. this/DT/this i/PRP/i have/VBP/have information/NN/information that/IN/that is/VBZ/is pred/VBN/pred /-NONE-/[ /:/] and/CC/and so/RB/so on/NNP/on. i/PRP/i can/MD/can keep/VB/keep doing/VBG/doing this/DT/this till/NN/till i/PRP/i reach/VBP/reach the/DT/the source/NN/source vertex/NNP/vertex. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 28/CD/28 /CD/) once/RB/once i/PRP/i have/VBP/have this/DT/this information/NN/information i/PRP/i can/MD/can just/RB/just keep/VB/keep tracing/VBG/tracing it/PRP/it back/RB/back till/IN/till i/PRP/i reach/VBP/reach the/DT/the source/NN/source vertex/NN/vertex and/CC/and that/IN/that will/MD/will give/VB/give me/PRP/me the/DT/the path/NNP/path. how/WRB/how to/TO/to we/PRP/we maintain/VB/maintain this/DT/this information/NN/information ?/./? when/WRB/when ever/RB/ever we/PRP/we update/VBP/update the/DT/the distance/NN/distance label/NN/label /,/, we/PRP/we have/VBP/have to/TO/to keep/VB/keep track/NN/track of/IN/of this/NNP/this. we/PRP/we update/VBP/update the/DT/the predecessor/NNP/predecessor. when/WRB/when do/VBP/do we/PRP/we update/VB/update or/CC/or how/WRB/how do/VBP/do we/PRP/we update/VB/update ?/./? when/WRB/when we/PRP/we transfer/VBP/transfer a/DT/a vertex/NN/vertex from/IN/from the/DT/the side/NN/side to/TO/to the/DT/the side/NN/side s/VBZ/s /,/, that/IN/that is/VBZ/is w/NN/w is/VBZ/is the/DT/the vertex/NN/vertex which/WDT/which is/VBZ/is getting/VBG/getting transferred/NNP/transferred. then/RB/then this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex u/NN/u and/CC/and i/PRP/i am/VBP/am updating/VBG/updating its/PRP$/its information/NNP/information. how/WRB/how should/MD/should i/VB/i write/JJ/write it/PRP/it now/RB/now ?/./? if/IN/if d/NN/d /:/[ u/NN/u /:/] is/VBZ/is greater/JJR/greater than/IN/than d/NN/d /:/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ u/NN/u /,/, w/NN/w /:/] then/RB/then d/VBD/d /CD/[ u/NN/u /:/] is/VBZ/is d/VBN/d /-NONE-/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ u/NN/u /,/, w/NN/w /:/] /./. what/WP/what is/VBZ/is this/DT/this saying/VBG/saying ?/./? the/DT/the d/NN/d /:/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ u/NN/u /,/, w/NN/w /:/] is/VBZ/is the/DT/the length/NN/length of/IN/of a/DT/a better/JJR/better path/NNP/path. if/IN/if the/DT/the path/NN/path you/PRP/you found/VBD/found now/RB/now is/VBZ/is better/RBR/better then/RB/then what/WP/what you/PRP/you already/RB/already had/VBD/had then/RB/then you/PRP/you update/VBP/update the/DT/the information/NN/information and/CC/and pred/VBD/pred /CD/[ u/NN/u /:/] =/:/= w/NNP/w. that/IN/that is/VBZ/is the/DT/the only/JJ/only modification/NN/modification we/PRP/we are/VBP/are doing/NNP/doing. then/RB/then basically/RB/basically we/PRP/we are/VBP/are storing/VBG/storing with/IN/with each/DT/each vertex/NN/vertex /,/, 2/CD/2 pieces/NNS/pieces of/IN/of information/NN/information d/NN/d and/CC/and this/DT/this predecessor/NN/predecessor information/NNP/information. and/CC/and now/RB/now using/VBG/using this/DT/this predecessor/NN/predecessor information/NN/information you/PRP/you can/MD/can find/VB/find the/DT/the path/NN/path and/CC/and keep/VB/keep moving/VBG/moving back/RB/back up/NNP/up. how/WRB/how ?/./? suppose/NN/suppose i/PRP/i wanted/VBD/wanted to/TO/to find/VB/find the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to a/DT/a vertex/NN/vertex x/NNP/x. while/IN/while !/./! pred/VBN/pred /-NONE-/[ x/NN/x /:/] equals/NNS/equals null/NNP/null. i/PRP/i will/MD/will set/VB/set the/DT/the predecessor/NN/predecessor of/IN/of my/PRP$/my source/NN/source to/TO/to null/NNP/null. because/IN/because the/DT/the source/NN/source vertex/NN/vertex has/VBZ/has no/DT/no predecessor/NNP/predecessor. initially/RB/initially let/VB/let us/PRP/us say/VB/say x/NN/x =/:/= v/NN/v /,/, v/NN/v is/VBZ/is the/DT/the vertex/NN/vertex for/IN/for which/WDT/which i/PRP/i am/VBP/am finding/NNP/finding. find/NN/find the/DT/the shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to v/VB/v ?/./? initially/RB/initially x/NN/x =/:/= v/NN/v /,/, now/RB/now i/PRP/i will/MD/will go/VB/go through/IN/through this/DT/this loop/NN/loop /,/, while/IN/while pred/VBN/pred /-NONE-/[ x/NN/x /:/] !/./! =/:/= null/NNP/null. print/NN/print it/PRP/it directly/RB/directly that/IN/that is/VBZ/is print/JJ/print /NN/[ x/NN/x /:/] /./. /:/( hindi/NN/hindi conversation/NN/conversation /:/) initially/RB/initially v/NN/v /,/, /:/( hindi/NN/hindi conversation/NN/conversation /:/) /./. so/RB/so in/IN/in this/DT/this manner/NN/manner you/PRP/you can/MD/can also/RB/also print/VB/print out/RP/out the/DT/the path/NN/path /,/, i/PRP/i have/VBP/have printed/VBN/printed out/RP/out the/DT/the vertices/NNS/vertices of/IN/of the/DT/the path/NN/path once/RB/once you/PRP/you have/VB/have the/DT/the vertices/NNS/vertices in/IN/in the/DT/the path/NN/path you/PRP/you can/MD/can also/RB/also figure/VB/figure out/RP/out the/DT/the edges/NNS/edges of/IN/of the/DT/the path/NN/path if/IN/if you/PRP/you want/VBP/want to/TO/to print/VB/print out/RP/out the/DT/the edges/NNP/edges. one/CD/one suggestion/NN/suggestion is/VBZ/is instead/RB/instead of/IN/of having/VBG/having this/DT/this condition/NN/condition i/PRP/i can/MD/can also/RB/also right/RB/right x/JJ/x !/./! =/:/= null/NNP/null. /:/( hindi/NN/hindi conversation/NN/conversation /:/) all/DT/all of/IN/of you/PRP/you can/MD/can figure/VB/figure this/DT/this out/NNP/out. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 36/CD/36 /CD/) what/WP/what we/PRP/we have/VBP/have done/VBN/done using/VBG/using this/DT/this procedure/NN/procedure ?/./? we/PRP/we have/VBP/have computed/VBN/computed the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NN/graph not/RB/not just/RB/just one/CD/one vertex/NN/vertex but/CC/but every/DT/every vertex/NN/vertex in/IN/in the/DT/the graph/NNP/graph. let/NN/let us/PRP/us draw/VBD/draw all/DT/all the/DT/the shortest/JJS/shortest path/NN/path and/CC/and let/VB/let see/NN/see what/WP/what is/VBZ/is the/DT/the sub/NN/sub graph/NN/graph that/WDT/that we/PRP/we get/NNP/get. /:/( hindi/NN/hindi conversation/NN/conversation /:/) let/NN/let say/VBP/say this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to vertex/VB/vertex /./. /:/( hindi/NN/hindi conversation/NN/conversation /:/) except/IN/except for/IN/for root/NN/root vertex/NN/vertex that/WDT/that is/VBZ/is the/DT/the source/NN/source vertex/NNP/vertex. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) n-1/NNP/n-1. do/VBP/do you/PRP/you understand/VB/understand what/WP/what edges/NNS/edges i/PRP/i am/VBP/am taking/VBG/taking about/IN/about ?/./? i/PRP/i can/MD/can also/RB/also call/VB/call them/PRP/them as/IN/as the/DT/the predecessor/NN/predecessor edges/NNP/edges. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) this/DT/this is/VBZ/is the/DT/the predecessor/NN/predecessor vertex/NNP/vertex. if/IN/if i/PRP/i am/VBP/am looking/VBG/looking at/IN/at the/DT/the vertex/NN/vertex u/NN/u and/CC/and v/NN/v is/VBZ/is the/DT/the predecessor/NN/predecessor vertex/NN/vertex /,/, we/PRP/we have/VBP/have kept/VBN/kept track/NN/track of/IN/of the/DT/the predecessor/NN/predecessor vertex/NN/vertex information/NNP/information. bur/NN/bur we/PRP/we could/MD/could also/RB/also have/VB/have thought/VBN/thought of/IN/of this/DT/this /NN/( u/NN/u v/NN/v /:/) path/NN/path as/IN/as the/DT/the predecessor/NN/predecessor edge/NNP/edge. the/DT/the edge/NN/edge connecting/VBG/connecting the/DT/the predecessor/NN/predecessor vertex/NN/vertex to/TO/to this/DT/this vertex/NN/vertex is/VBZ/is the/DT/the predecessor/NN/predecessor edge/NNP/edge. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) how/WRB/how many/JJ/many predecessor/NN/predecessor edges/NNS/edges we/PRP/we have/VBP/have ?/./? the/DT/the n-1/NN/n-1 predecessor/NN/predecessor edges/NNP/edges. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) i/PRP/i can/MD/can reach/VB/reach every/DT/every vertex/NN/vertex because/IN/because if/IN/if i/PRP/i take/VBP/take any/DT/any vertex/NN/vertex i/PRP/i can/MD/can take/VB/take its/PRP$/its predecessor/NN/predecessor edge/NN/edge go/NN/go to/TO/to the/DT/the previous/JJ/previous vertex/NN/vertex /,/, go/VBP/go to/TO/to the/DT/the predecessor/NN/predecessor vertex/NN/vertex and/CC/and i/PRP/i said/VBD/said i/PRP/i will/MD/will eventually/RB/eventually reach/VB/reach s/NNP/s. is/VBZ/is it/PRP/it clear/RB/clear that/IN/that i/PRP/i will/MD/will reach/VB/reach s/NNS/s in/IN/in this/DT/this process/NNP/process. because/IN/because the/DT/the whole/JJ/whole point/NN/point is/VBZ/is that/IN/that this/DT/this guy/NN/guy got/VBD/got its/PRP$/its length/NN/length from/IN/from here/RB/here /,/, which/WDT/which means/VBZ/means we/PRP/we must/MD/must have/VB/have been/VBN/been able/JJ/able to/TO/to reach/VB/reach this/DT/this vertex/NN/vertex in/IN/in the/DT/the first/JJ/first place/NNP/place. and/CC/and this/DT/this guy/NN/guy got/VBD/got its/PRP$/its length/NN/length from/IN/from here/RB/here and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 20-16/CD/20-16 /:/: 30/CD/30 /CD/) we/PRP/we will/MD/will eventually/RB/eventually hit/VB/hit the/DT/the root/NNP/root. so/RB/so what/WP/what can/MD/can we/PRP/we say/VB/say about/IN/about this/DT/this sub/NN/sub graph/NN/graph ?/./? if/IN/if i/PRP/i ignore/VBP/ignore or/CC/or forget/VB/forget the/DT/the directions/NNS/directions of/IN/of the/DT/the edges/NNS/edges then/RB/then it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected sub/NN/sub graph/NN/graph with/IN/with n-1/-NONE-/n-1 edges/NNP/edges. it/PRP/it will/MD/will be/VB/be a/DT/a tree/NN/tree that/WDT/that is/VBZ/is a/DT/a spanning/NN/spanning tree/NNP/tree. but/CC/but if/IN/if i/PRP/i bring/VBG/bring back/RB/back the/DT/the direction/NN/direction /,/, note/NN/note that/IN/that in/IN/in a/DT/a directed/VBN/directed graph/NN/graph there/RB/there is/VBZ/is really/RB/really no/DT/no notion/NN/notion of/IN/of the/DT/the spanning/NN/spanning tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 57/CD/57 /CD/) there/EX/there is/VBZ/is another/DT/another name/NN/name give/VBP/give to/TO/to it/NNP/it. it/PRP/it is/VBZ/is called/VBN/called a/DT/a branching/NN/branching /,/, the/DT/the same/JJ/same thing/NNP/thing. it/PRP/it is/VBZ/is basically/RB/basically a/DT/a sub/NN/sub graph/NN/graph with/IN/with n-1/-NONE-/n-1 edges/NNS/edges such/JJ/such that/IN/that i/PRP/i can/MD/can reach/VB/reach from/IN/from a/DT/a specific/JJ/specific root/NN/root vertex/NN/vertex to/TO/to every/DT/every vertex/NNP/vertex. such/JJ/such a/DT/a thing/NN/thing is/VBZ/is called/VBN/called a/DT/a branching/NNP/branching. it/PRP/it is/VBZ/is not/RB/not very/RB/very important/JJ/important /,/, you/PRP/you do/VBP/do not/RB/not need/VB/need to/TO/to remember/VB/remember this/DT/this step/NN/step /,/, but/CC/but you/PRP/you understand/VBP/understand what/WP/what the/DT/the idea/NN/idea is/NNP/is. with/IN/with these/DT/these edges/NNS/edges i/PRP/i can/MD/can go/VB/go from/IN/from the/DT/the source/NN/source vertex/NN/vertex to/TO/to every/DT/every other/JJ/other vertex/NNP/vertex. in/IN/in the/DT/the context/NN/context of/IN/of shortest/NN/shortest path/NN/path this/DT/this is/VBZ/is called/VBN/called the/DT/the shortest/JJS/shortest path/NN/path tree/NNP/tree. because/IN/because if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at this/DT/this tree/NN/tree /,/, these/DT/these set/NN/set of/IN/of edges/NNS/edges then/RB/then it/PRP/it is/VBZ/is very/RB/very nice/NNP/nice. if/IN/if i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex which/WDT/which is/VBZ/is next/JJ/next to/TO/to /,/, what/WDT/what do/VBP/do i/PRP/i have/VB/have to/TO/to do/VB/do ?/./? i/PRP/i just/RB/just follow/VBP/follow the/DT/the unique/JJ/unique path/NN/path that/WDT/that is/VBZ/is there/RB/there in/IN/in this/DT/this tree/NN/tree from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex /,/, or/CC/or conversely/RB/conversely i/PRP/i go/VBP/go to/TO/to the/DT/the predecessors/NNS/predecessors and/CC/and then/RB/then to/TO/to the/DT/the root/NNP/root. that/IN/that is/VBZ/is the/DT/the path/NN/path /,/, which/WDT/which is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex which/WDT/which is/VBZ/is next/JJ/next to/TO/to /./. similarly/RB/similarly the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex is/VBZ/is this/DT/this path/NN/path and/CC/and so/RB/so on/NNP/on. all/DT/all the/DT/the shortest/JJS/shortest paths/NNS/paths are/VBP/are getting/VBG/getting captured/VBN/captured here/RB/here by/IN/by just/RB/just these/DT/these n-1/-NONE-/n-1 edges/NNP/edges. these/DT/these n-1/-NONE-/n-1 edges/VBZ/edges capture/NN/capture for/IN/for us/PRP/us in/IN/in a/DT/a second/JJ/second manner/NN/manner /,/, all/DT/all the/DT/the shortest/JJS/shortest path/NN/path from/IN/from the/DT/the source/NN/source to/TO/to all/DT/all the/DT/the various/JJ/various vertices/NNP/vertices. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) this/DT/this is/VBZ/is called/VBN/called the/DT/the shortest/JJS/shortest path/NN/path and/CC/and we/PRP/we can/MD/can compute/VB/compute this/DT/this tree/NN/tree in/IN/in the/DT/the same/JJ/same time/NN/time as/IN/as required/VBN/required by/IN/by dijkstras/NNS/dijkstras algorithm/NNP/algorithm. we/PRP/we have/VBP/have not/RB/not spent/VBN/spent any/DT/any additional/JJ/additional time/NNP/time. you/PRP/you also/RB/also know/VBP/know how/WRB/how to/TO/to find/VB/find out/RP/out the/DT/the shortest/JJS/shortest path/NNP/path. what/WP/what remains/VBZ/remains is/VBZ/is what/WP/what we/PRP/we had/VBD/had mentioned/VBN/mentioned in/IN/in the/DT/the last/JJ/last class/NN/class if/IN/if edges/NNS/edges have/VBP/have negative/JJ/negative lengths/NNP/lengths. how/WRB/how can/MD/can you/PRP/you then/RB/then find/VBP/find out/RP/out the/DT/the shortest/JJS/shortest path/NN/path ?/./? once/RB/once again/RB/again we/PRP/we are/VBP/are talking/VBG/talking of/IN/of single/JJ/single source/NN/source shortest/NN/shortest path/NNP/path. when/WRB/when edges/NNS/edges have/VBP/have negative/JJ/negative lengths/NNP/lengths. what/WP/what i/PRP/i mean/VBP/mean by/IN/by this/DT/this is/VBZ/is /,/, not/RB/not all/DT/all edges/NNS/edges have/VBP/have negative/JJ/negative lengths/NNS/lengths /,/, some/DT/some have/VBP/have negative/JJ/negative some/DT/some have/VBP/have positive/NNP/positive. but/CC/but we/PRP/we are/VBP/are permitting/VBG/permitting edges/NNS/edges to/TO/to have/VB/have all/PDT/all kind/NN/kind of/IN/of negatives/NNS/negatives and/CC/and positives/NNP/positives. once/RB/once again/RB/again we/PRP/we have/VBP/have a/DT/a source/NN/source and/CC/and we/PRP/we are/VBP/are trying/VBG/trying to/TO/to find/VB/find out/RP/out the/DT/the shortest/JJS/shortest path/NN/path from/IN/from this/DT/this source/NN/source to/TO/to all/DT/all the/DT/the vertices/NNS/vertices of/IN/of the/DT/the graph/NNP/graph. i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume that/IN/that there/EX/there is/VBZ/is no/DT/no negative/JJ/negative cycle/NN/cycle because/IN/because recall/NN/recall if/IN/if there/EX/there is/VBZ/is a/DT/a negative/JJ/negative cycle/NN/cycle then/RB/then this/DT/this thing/NN/thing is/VBZ/is meaningless/NNP/meaningless. there/RB/there is/VBZ/is no/DT/no negative/JJ/negative cycle/NN/cycle in/IN/in the/DT/the graph/NNP/graph. what/WP/what can/MD/can you/PRP/you say/VB/say about/IN/about the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to v/VB/v ?/./? can/MD/can it/PRP/it be/VB/be a/DT/a non/NN/non simple/NN/simple path/NN/path ?/./? what/WP/what is/VBZ/is a/DT/a simple/JJ/simple path/NN/path ?/./? it/PRP/it does/VBZ/does not/RB/not repeat/VB/repeat any/DT/any vertex/NN/vertex /,/, no/DT/no cycle/NN/cycle on/IN/on the/DT/the path/NNP/path. can/MD/can this/DT/this be/VB/be a/DT/a path/NN/path like/IN/like this/DT/this ?/./? why/WRB/why not/RB/not ?/./? this/DT/this cycle/NN/cycle can/MD/can not/RB/not have/VB/have negative/JJ/negative length/NN/length which/WDT/which means/VBZ/means if/IN/if i/PRP/i were/VBD/were to/TO/to go/VB/go in/IN/in the/DT/the straight/JJ/straight line/NN/line above/IN/above the/DT/the circle/NN/circle /,/, it/PRP/it would/MD/would be/VB/be shorter/NNP/shorter. because/IN/because this/DT/this cycle/NN/cycle has/VBZ/has positive/JJ/positive length/NNP/length. it/PRP/it will/MD/will only/RB/only be/VB/be shorter/RBR/shorter to/TO/to go/VB/go directly/RB/directly like/IN/like this/NNP/this. the/DT/the cycle/NN/cycle could/MD/could have/VB/have the/DT/the also/RB/also zero/CD/zero length/NN/length in/IN/in which/WDT/which case/NN/case it/PRP/it will/MD/will not/RB/not be/VB/be shorter/RB/shorter but/CC/but this/DT/this will/MD/will be/VB/be a/DT/a path/NN/path of/IN/of same/JJ/same length/NNP/length. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 02/CD/02 /CD/) there/EX/there always/RB/always exists/VBZ/exists a/DT/a shortest/NN/shortest path/NN/path which/WDT/which is/VBZ/is the/DT/the simple/JJ/simple path/NNP/path. this/DT/this could/MD/could also/RB/also be/VB/be the/DT/the shortest/JJS/shortest path/NN/path if/IN/if this/DT/this cycle/NN/cycle had/VBD/had zero/CD/zero length/NNP/length. but/CC/but the/DT/the point/NN/point is/VBZ/is there/EX/there will/MD/will always/RB/always be/VB/be a/DT/a simple/JJ/simple path/NN/path also/RB/also we/PRP/we can/MD/can just/RB/just restrict/VB/restrict our/PRP$/our attention/NN/attention in/IN/in finding/NN/finding a/DT/a simple/JJ/simple path/NNP/path. we/PRP/we will/MD/will only/RB/only be/VB/be interested/JJ/interested in/IN/in finding/NN/finding simple/NN/simple path/NNP/path. the/DT/the algorithm/NN/algorithm is/VBZ/is very/RB/very simple/JJ/simple actually/RB/actually /,/, it/PRP/it is/VBZ/is a/DT/a gossiping/NN/gossiping kind/NN/kind of/IN/of algorithm/NNP/algorithm. what/WP/what is/VBZ/is that/IN/that mean/JJ/mean ?/./? think/NN/think of/IN/of each/DT/each of/IN/of this/DT/this vertex/NN/vertex as/IN/as a/DT/a person/NN/person and/CC/and this/DT/this person/NN/person talks/VBZ/talks to/TO/to 3/CD/3 people/NNP/people. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) whatever/NN/whatever information/NN/information this/DT/this guys/NNS/guys gets/VBZ/gets /,/, he/PRP/he promptly/RB/promptly communicates/VBZ/communicates it/PRP/it to/TO/to his/PRP$/his 3/CD/3 mates/NNP/mates. what/WP/what they/PRP/they do/VBP/do is/VBZ/is /,/, they/PRP/they intern/VBP/intern communicate/JJ/communicate this/DT/this information/NN/information to/TO/to their/PRP$/their mates/NNS/mates and/CC/and so/RB/so on/NNP/on. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) what/WP/what is/VBZ/is the/DT/the information/NN/information that/IN/that is/VBZ/is being/VBG/being gossiped/VBN/gossiped about/IN/about ?/./? length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NN/path from/IN/from the/DT/the source/NNP/source. what/WP/what this/DT/this guy/NN/guy is/VBZ/is going/VBG/going to/TO/to tell/VB/tell these/DT/these people/NNS/people is/VBZ/is that/IN/that the/DT/the shortest/JJS/shortest path/NN/path that/WDT/that i/PRP/i have/VBP/have seen/VBN/seen so/RB/so for/IN/for from/IN/from the/DT/the source/NN/source has/VBZ/has length/NN/length 10/CD/10. so/RB/so he/PRP/he will/MD/will communicate/VB/communicate this/DT/this to/TO/to all/DT/all this/DT/this 3/CD/3. and/CC/and what/WP/what will/MD/will this/DT/this guy/NN/guy do/VBP/do ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) now/RB/now i/PRP/i have/VBP/have found/VBN/found a/DT/a path/NN/path of/IN/of length/NN/length 8/CD/8. /CD/( hindi/NN/hindi conversation/NN/conversation /:/) what/WP/what is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path it/PRP/it had/VBD/had found/VBN/found so/RB/so for/IN/for from/IN/from the/DT/the source/NN/source ?/./? may/MD/may be/VB/be that/IN/that information/NN/information was/VBD/was 9/CD/9 /,/, so/RB/so now/RB/now it/PRP/it will/MD/will quickly/RB/quickly change/VB/change its/PRP$/its thing/NN/thing to/TO/to 8/CD/8 because/IN/because it/PRP/it had/VBD/had found/VBN/found a/DT/a path/NN/path of/IN/of length/NN/length 8/CD/8 now/NNP/now. and/CC/and may/MD/may be/VB/be /:/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that will/MD/will call/VB/call one/CD/one round/NN/round /:/( hindi/NN/hindi conversation/NN/conversation /:/) from/IN/from its/PRP$/its in/IN/in neighbor/NN/neighbor /:/( hindi/NN/hindi conversation/NN/conversation /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 39/CD/39 /CD/) i/PRP/i have/VBP/have found/VBN/found a/DT/a path/NN/path of/IN/of length/NN/length 9/CD/9 and/CC/and this/DT/this is/VBZ/is 4th/CD/4th and/CC/and here/RB/here you/PRP/you have/VBP/have a/DT/a path/NN/path of/IN/of length/NN/length 13/CD/13. /CD/( hindi/NN/hindi conversation/NN/conversation /:/) i/PRP/i have/VBP/have found/VBN/found a/DT/a path/NN/path of/IN/of length/NN/length 12/CD/12 and/CC/and this/DT/this is/VBZ/is 1/CD/1 and/CC/and you/PRP/you have/VBP/have the/DT/the path/NN/path of/IN/of length/NN/length 13/CD/13. /CD/( hindi/NN/hindi conversation/NN/conversation /:/) i/PRP/i have/VBP/have found/VBN/found a/DT/a path/NN/path of/IN/of length/NN/length 13/CD/13 this/DT/this is/VBZ/is minus/VBZ/minus one/CD/one so/RB/so you/PRP/you have/VB/have a/DT/a path/NN/path of/IN/of length/NN/length 12/CD/12. what/WP/what is/VBZ/is this/DT/this guy/NN/guy going/VBG/going to/TO/to do/VB/do ?/./? it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take the/DT/the minimum/JJ/minimum of/IN/of these/DT/these 3/CD/3 and/CC/and if/IN/if it/PRP/it had/VBD/had some/DT/some original/JJ/original /,/, earlier/RBR/earlier information/NNP/information. it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take the/DT/the minimum/JJ/minimum all/DT/all of/IN/of them/PRP/them and/CC/and put/VBD/put that/IN/that down/IN/down as/IN/as the/DT/the new/JJ/new path/NN/path length/NNP/length. let/NN/let say/VBP/say original/JJ/original information/NN/information was/VBD/was more/JJR/more than/IN/than 12/CD/12 then/RB/then that/IN/that will/MD/will become/VB/become path/NN/path length/NN/length and/CC/and this/DT/this is/VBZ/is the/DT/the information/NN/information that/IN/that it/PRP/it would/MD/would communicate/VB/communicate in/IN/in the/DT/the next/JJ/next round/NNP/round. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) one/CD/one round/NN/round is/VBZ/is inner/NN/inner round/NN/round /:/( hindi/NN/hindi conversation/NN/conversation /:/) ever/RB/ever one/CD/one talks/NNS/talks to/TO/to their/PRP$/their neighbors/NNS/neighbors and/CC/and sends/NNS/sends the/DT/the information/NNP/information. and/CC/and then/RB/then each/DT/each node/NN/node also/RB/also gathers/VBZ/gathers the/DT/the information/NN/information from/IN/from its/PRP$/its neighbors/NNS/neighbors and/CC/and updates/NNS/updates its/PRP$/its value/NNP/value. that/IN/that is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the round/NN/round after/IN/after it/PRP/it has/VBZ/has updated/VBN/updated its/PRP$/its value/NNP/value. in/IN/in inner/NN/inner round/NN/round /,/, each/DT/each guy/NN/guy talks/VBZ/talks to/TO/to its/PRP$/its neighbors/NNP/neighbors. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) first/JJ/first transfer/NN/transfer then/RB/then updation/NNP/updation. let/NN/let us/PRP/us say/VBP/say the/DT/the round/NN/round starts/VBZ/starts with/IN/with the/DT/the transfer/NN/transfer then/RB/then when/WRB/when you/PRP/you have/VBP/have got/VBN/got information/NN/information from/IN/from all/DT/all your/PRP$/your neighbors/NNS/neighbors /,/, you/PRP/you update/NNP/update. all/DT/all the/DT/the nodes/NNS/nodes do/VBP/do the/DT/the same/JJ/same thing/NN/thing simultaneously/NNP/simultaneously. a/DT/a node/NN/node will/MD/will get/VB/get information/NN/information only/RB/only from/IN/from its/PRP$/its inmates/NNP/inmates. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) you/PRP/you have/VBP/have these/DT/these vertices/NNS/vertices /,/, you/PRP/you have/VBP/have to/TO/to implement/VB/implement this/DT/this thing/NNP/thing. what/WP/what is/VBZ/is the/DT/the information/NN/information we/PRP/we are/VBP/are maintaining/VBG/maintaining with/IN/with each/DT/each node/NN/node /,/, once/RB/once again/RB/again we/PRP/we call/VBP/call it/PRP/it a/DT/a distance/NN/distance label/NNP/label. with/IN/with the/DT/the node/NN/node v/NN/v /,/, i/PRP/i am/VBP/am maintaining/VBG/maintaining this/DT/this distance/NN/distance label/NNP/label. how/WRB/how will/MD/will you/PRP/you implement/VB/implement one/CD/one round/NN/round ?/./? i/PRP/i take/VBP/take a/DT/a vertex/NN/vertex /,/, there/EX/there is/VBZ/is no/DT/no notion/NN/notion of/IN/of actual/JJ/actual transmitting/NN/transmitting any/DT/any more/NNP/more. this/DT/this was/VBD/was just/RB/just to/TO/to show/VB/show you/PRP/you the/DT/the idea/NNP/idea. what/WP/what does/VBZ/does this/DT/this vertex/NN/vertex do/VBP/do ?/./? it/PRP/it look/VBD/look at/IN/at its/PRP$/its in/IN/in adjacent/NN/adjacent vertices/NNP/vertices. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) propositional/JJ/propositional to/TO/to its/PRP$/its degree/NNP/degree. the/DT/the total/JJ/total time/NN/time /:/( hindi/NN/hindi conversation/NN/conversation /:/) number/NN/number of/IN/of edges/NNP/edges. this/DT/this is/VBZ/is how/WRB/how you/PRP/you will/MD/will implement/VB/implement one/CD/one round/NNP/round. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) zero/NN/zero on/IN/on the/DT/the source/NN/source and/CC/and infinity/NN/infinity for/IN/for all/DT/all others/NNS/others /VBP/( hindi/NN/hindi conversation/NN/conversation /:/) if/IN/if in/IN/in a/DT/a round/NN/round nothing/NN/nothing changes/NNS/changes then/RB/then we/PRP/we can/MD/can stop/NNP/stop. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 44/CD/44 /CD/) /CD/( hindi/NN/hindi conversation/NN/conversation /:/) from/IN/from the/DT/the source/NN/source we/PRP/we will/MD/will have/VB/have to/TO/to prove/VB/prove that/IN/that /CD/( hindi/NN/hindi conversation/NN/conversation /:/) let/NN/let see/VBP/see /:/( hindi/NN/hindi conversation/NN/conversation /:/) there/EX/there is/VBZ/is a/DT/a difference/NN/difference between/IN/between length/NN/length and/CC/and number/NN/number of/IN/of edges/NNS/edges on/IN/on the/DT/the shortest/JJS/shortest path/NNP/path. this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path using/VBG/using edges/NNS/edges length/NN/length /:/( hindi/NN/hindi conversation/NN/conversation /:/) n-1/-NONE-/n-1 shortest/JJS/shortest path/NN/path /:/( hindi/NN/hindi conversation/NN/conversation /:/) a/DT/a shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to v/VB/v then/RB/then what/WP/what is/VBZ/is the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex which/WDT/which is/VBZ/is between/IN/between /./. that/IN/that property/NN/property continues/VBZ/continues to/TO/to hold/VB/hold true/NNP/true. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that was/VBD/was independent/JJ/independent of/IN/of whether/IN/whether the/DT/the edge/NN/edge lengths/NNS/lengths were/VBD/were positive/JJ/positive or/CC/or not/NNP/not. shortest/NN/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this vertex/NN/vertex will/MD/will be/VB/be this/DT/this they/PRP/they can/MD/can not/RB/not be/VB/be a/DT/a shorter/NN/shorter path/NN/path because/IN/because if/IN/if there/EX/there were/VBD/were the/DT/the shorter/NN/shorter path/NN/path then/RB/then this/DT/this could/MD/could not/RB/not have/VB/have been/VBN/been the/DT/the shorter/NN/shorter path/NN/path from/IN/from s/NNS/s to/TO/to v/NNP/v. similarly/RB/similarly shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to this/DT/this would/MD/would have/VB/have been/VBN/been and/CC/and so/RB/so on/NNP/on. so/IN/so the/DT/the claim/NN/claim we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make is/VBZ/is /,/, if/IN/if the/DT/the shortest/JJS/shortest path/NN/path from/IN/from s/NNS/s to/TO/to vertex/VB/vertex x/NN/x has/VBZ/has l/NN/l edges/NNS/edges on/IN/on it/PRP/it then/RB/then d/VBD/d /CD/[ x/NN/x /:/] gets/NNS/gets the/DT/the right/NN/right value/NN/value which/WDT/which means/VBZ/means the/DT/the value/NN/value of/IN/of the/DT/the shortest/JJS/shortest path/NN/path after/IN/after l/NN/l rounds/NNP/rounds. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) after/IN/after 5/CD/5 rounds/NNS/rounds this/DT/this vertex/NN/vertex v/NN/v will/MD/will have/VB/have the/DT/the correct/NN/correct length/NN/length of/IN/of the/DT/the shortest/JJS/shortest path/NNP/path. why/WRB/why ?/./? this/DT/this claim/NN/claim is/VBZ/is true/JJ/true we/PRP/we will/MD/will prove/VB/prove the/DT/the claim/NN/claim by/IN/by induction/NN/induction on/IN/on l/NNP/l. l/NN/l equals/NNS/equals one/CD/one /CD/( hindi/NN/hindi conversation/NN/conversation /:/) is/VBZ/is this/DT/this true/JJ/true ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) when/WRB/when we/PRP/we find/VBP/find a/DT/a better/JJR/better path/NN/path because/IN/because if/IN/if there/EX/there is/VBZ/is no/DT/no better/JJR/better path/NN/path /,/, we/PRP/we will/MD/will never/RB/never be/VB/be changing/VBG/changing the/DT/the value/NN/value later/JJ/later /NN/( hindi/NN/hindi conversation/NN/conversation /:/) value/NN/value /:/( hindi/NN/hindi conversation/NN/conversation /:/) after/IN/after five/CD/five steps/NNS/steps then/RB/then it/PRP/it will/MD/will not/RB/not change/VB/change beyond/IN/beyond that/NNP/that. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) you/PRP/you take/VBP/take the/DT/the value/NN/value of/IN/of the/DT/the in/IN/in adjacent/NN/adjacent vertices/NNS/vertices which/WDT/which has/VBZ/has not/RB/not been/VBN/been updated/VBN/updated in/IN/in that/DT/that round/NNP/round. there/RB/there is/VBZ/is a/DT/a vertex/NN/vertex whose/WP$/whose value/NN/value has/VBZ/has been/VBN/been updated/VBN/updated right/RB/right now/RB/now and/CC/and it/PRP/it has/VBZ/has vertex/NN/vertex you/PRP/you reach/VBP/reach the/DT/the vertex/NN/vertex after/IN/after that/DT/that you/PRP/you will/MD/will consider/VB/consider new/JJ/new value/NN/value or/CC/or old/JJ/old value/NN/value for/IN/for confusion/NN/confusion a/DT/a new/JJ/new value/NN/value or/CC/or old/JJ/old value/NNP/value. let/NN/let us/PRP/us forget/VB/forget about/IN/about new/JJ/new values/NNS/values or/CC/or the/DT/the old/JJ/old values/NNP/values. let/NN/let me/PRP/me write/VBP/write down/RP/down the/DT/the code/NN/code /:/( hindi/NN/hindi conversation/NN/conversation /:/) for/IN/for all/PDT/all v/NN/v do/VBP/do /:/( hindi/NN/hindi conversation/NN/conversation /:/) for/IN/for all/PDT/all w/NN/w in/IN/in adjacent/NN/adjacent to/TO/to v/VB/v do/NNP/do. the/DT/the d/NN/d /:/[ v/NN/v /:/] =/:/= min/NN/min /:/[ d/NN/d /:/[ v/NN/v /:/] /,/, d/VBD/d /:/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ v/NN/v /,/, w/NN/w /:/] /:/] /:/( hindi/NN/hindi conversation/NN/conversation /:/) for/IN/for i/PRP/i =/VBP/= 1/CD/1 to/TO/to /CD/( hindi/NN/hindi conversation/NN/conversation /:/) n-1/-NONE-/n-1 do/VBP/do /:/( hindi/NN/hindi conversation/NN/conversation /:/) you/PRP/you will/MD/will try/VB/try to/TO/to reduce/VB/reduce the/DT/the running/NN/running time/NN/time a/DT/a bit/NNP/bit. the/DT/the worst/JJS/worst case/NN/case will/MD/will remain/VB/remain the/DT/the same/NNP/same. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) d/NN/d /:/[ s/NNS/s /VBP/] equals/NNS/equals zero/IN/zero /,/, for/IN/for all/PDT/all v/NN/v in/IN/in v-s/NNP/v-s /,/, d/VBD/d /:/[ v/NN/v /:/] equals/NNS/equals infinity/NNP/infinity. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) for/IN/for i/PRP/i =/VBP/= 1/CD/1 to/TO/to n-1/-NONE-/n-1 do/VB/do is/VBZ/is just/RB/just to/TO/to count/VB/count the/DT/the number/NN/number of/IN/of time/NN/time we/PRP/we have/VBP/have to/TO/to repeat/VB/repeat the/DT/the process/NNP/process. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) in/IN/in adjacent/NN/adjacent vertices/NNS/vertices /:/( hindi/NN/hindi conversation/NN/conversation /:/) why/WRB/why did/VBD/did you/PRP/you put/VBD/put down/RP/down only/RB/only n-1/-NONE-/n-1 and/CC/and no/DT/no more/RBR/more because/IN/because i/PRP/i argued/VBD/argued in/IN/in this/DT/this claim/NN/claim that/IN/that /CD/( hindi/NN/hindi conversation/NN/conversation /:/) what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of edges/NNS/edges that/WDT/that there/EX/there can/MD/can be/VB/be on/IN/on any/DT/any shortest/NN/shortest path/NNP/path. we/PRP/we have/VBP/have argued/VBN/argued that/IN/that on/IN/on any/DT/any shortest/NN/shortest path/NN/path there/EX/there can/MD/can be/VB/be no/RB/no more/JJR/more than/IN/than n-1/-NONE-/n-1 edges/NNS/edges because/IN/because there/EX/there will/MD/will always/RB/always be/VB/be a/DT/a shortest/NN/shortest path/NN/path which/WDT/which is/VBZ/is simple/NNP/simple. does/VBZ/does not/RB/not repeat/VB/repeat /,/, so/RB/so at/IN/at most/JJS/most n-1/-NONE-/n-1 edges/NNS/edges on/IN/on it/PRP/it and/CC/and so/RB/so i/PRP/i need/VBP/need to/TO/to repeat/VB/repeat it/PRP/it only/RB/only n-1/-NONE-/n-1 edges/NNS/edges and/CC/and no/DT/no more/NNP/more. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) should/MD/should we/PRP/we do/VBP/do the/DT/the correctness/NN/correctness for/IN/for this/DT/this ?/./? yes/VBZ/yes let/VB/let us/PRP/us do/VBP/do the/DT/the correctness/NN/correctness /,/, why/WRB/why is/VBZ/is it/PRP/it correct/VBP/correct ?/./? why/WRB/why have/VBP/have we/PRP/we computed/VBN/computed the/DT/the shortest/JJS/shortest path/NN/path ?/./? have/VBP/have you/PRP/you computed/VBN/computed the/DT/the shortest/JJS/shortest path/NN/path ?/./? is/VBZ/is it/PRP/it clear/RB/clear that/IN/that after/IN/after round/NN/round 5/CD/5 this/DT/this vertex/NN/vertex v/NN/v is/VBZ/is going/VBG/going to/TO/to get/VB/get a/DT/a distance/NN/distance label/NN/label of/IN/of /./. it/PRP/it is/VBZ/is going/VBG/going to/TO/to get/VB/get a/DT/a distance/NN/distance label/NN/label of/IN/of this/DT/this or/CC/or smaller/JJR/smaller /NN/( hindi/NN/hindi conversation/NN/conversation /:/) i/PRP/i am/VBP/am assuming/VBG/assuming this/DT/this is/VBZ/is the/DT/the shortest/JJS/shortest path/NNP/path. after/IN/after one/CD/one round/NN/round this/DT/this guy/NN/guy has/VBZ/has to/TO/to get/VB/get a/DT/a label/NN/label of/IN/of that/DT/that is/VBZ/is completely/RB/completely clear/JJ/clear /,/, after/IN/after 2nd/CD/2nd round/NN/round this/DT/this guy/NN/guy is/VBZ/is going/VBG/going to/TO/to get/VB/get a/DT/a label/NN/label of/IN/of or/CC/or less/NNP/less. this/DT/this guy/NN/guy is/VBZ/is going/VBG/going to/TO/to get/VB/get a/DT/a label/NN/label of/IN/of after/IN/after 3/CD/3 rounds/NNS/rounds or/CC/or something/VBG/something even/RB/even lesser/NNP/lesser. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 49/CD/49 /CD/) after/IN/after 4/CD/4 rounds/NNS/rounds this/DT/this is/VBZ/is going/VBG/going to/TO/to get/VB/get a/DT/a label/NN/label of/IN/of or/CC/or some/DT/some things/NNS/things lesser/NNP/lesser. this/DT/this guy/NN/guy is/VBZ/is going/VBG/going to/TO/to get/VB/get a/DT/a label/NN/label of/IN/of after/IN/after 5/CD/5 rounds/NNS/rounds or/CC/or something/VBG/something lesser/NNP/lesser. so/RB/so for/IN/for correctness/NN/correctness we/PRP/we need/VBP/need to/TO/to argue/VB/argue that/IN/that this/DT/this guy/NN/guy is/VBZ/is not/RB/not going/VBG/going to/TO/to anything/NN/anything lesser/NN/lesser than/IN/than /./. if/IN/if you/PRP/you have/VBP/have argued/VBN/argued those/DT/those then/RB/then we/PRP/we have/VBP/have that/IN/that it/PRP/it gets/VBZ/gets exactly/RB/exactly the/DT/the distance/NN/distance label/NN/label /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 00-43/CD/00-43 /:/: 17/CD/17 /CD/) we/PRP/we have/VBP/have to/TO/to argue/VB/argue that/IN/that a/DT/a vertex/NN/vertex can/MD/can not/RB/not get/VB/get a/DT/a distance/NN/distance label/NN/label which/WDT/which is/VBZ/is lesser/RBR/lesser than/IN/than the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path from/IN/from the/DT/the source/NN/source to/TO/to that/DT/that vertex/NNP/vertex. i/PRP/i give/VBP/give a/DT/a vertex/NN/vertex of/IN/of a/DT/a certain/JJ/certain distance/NN/distance label/NN/label /,/, it/PRP/it is/VBZ/is because/IN/because i/PRP/i have/VBP/have found/VBN/found a/DT/a path/NN/path of/IN/of that/DT/that length/NN/length from/IN/from the/DT/the source/NN/source to/TO/to that/DT/that vertex/NN/vertex that/IN/that i/PRP/i have/VBP/have to/TO/to convince/VB/convince you/NNP/you. and/CC/and that/IN/that follow/JJ/follow from/IN/from the/DT/the way/NN/way we/PRP/we are/VBP/are doing/VBG/doing things/NNP/things. that/IN/that will/MD/will be/VB/be a/DT/a proof/NN/proof by/IN/by induction/NNP/induction. what/WP/what should/MD/should we/PRP/we induct/VB/induct on/IN/on ?/./? what/WP/what is/VBZ/is the/DT/the claim/NN/claim we/PRP/we are/VBP/are trying/VBG/trying to/TO/to make/VB/make ?/./? let/VB/let us/PRP/us write/VB/write that/IN/that down/NNP/down. if/IN/if a/DT/a vertex/NN/vertex v/NN/v gets/VBZ/gets a/DT/a certain/JJ/certain distance/NN/distance label/NN/label d/NN/d in/IN/in round/NN/round r/NN/r /,/, then/RB/then we/PRP/we have/VBP/have found/VBN/found a/DT/a path/NN/path of/IN/of length/NN/length d/NN/d from/IN/from s/NNS/s to/TO/to v/NNP/v. this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are trying/VBG/trying to/TO/to argue/NNP/argue. basically/RB/basically what/WP/what i/PRP/i am/VBP/am saying/VBG/saying is/VBZ/is that/IN/that if/IN/if a/DT/a vertex/NN/vertex is/VBZ/is getting/VBG/getting some/DT/some distance/NN/distance label/NN/label it/PRP/it is/VBZ/is not/RB/not that/IN/that /CD/( hindi/NN/hindi conversation/NN/conversation /:/) why/WRB/why is/VBZ/is this/DT/this claim/NN/claim useful/NN/useful ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) l/NN/l /:/( hindi/NN/hindi conversation/NN/conversation /:/) this/DT/this is/VBZ/is not/RB/not a/DT/a shortest/NN/shortest path/NNP/path. contradiction/NN/contradiction why/WRB/why is/VBZ/is it/PRP/it true/JJ/true ?/./? /:/( hindi/NN/hindi conversation/NN/conversation /:/) distance/NN/distance label/NN/label d/NN/d need/VBP/need not/RB/not be/VB/be an/DT/an integer/NN/integer it/PRP/it is/VBZ/is just/RB/just the/DT/the length/NN/length of/IN/of the/DT/the path/NNP/path. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) suppose/NN/suppose this/DT/this statement/NN/statement is/VBZ/is true/JJ/true till/NN/till round/NN/round r-1/NNP/r-1. then/RB/then in/IN/in round/NN/round r/NN/r /,/, if/IN/if this/DT/this vertex/NN/vertex v/NN/v is/VBZ/is getting/VBG/getting as/IN/as a/DT/a certain/JJ/certain distance/NN/distance label/NN/label d/NN/d because/IN/because either/DT/either that/WDT/that was/VBD/was the/DT/the distance/NN/distance label/NN/label on/IN/on it/PRP/it or/CC/or because/IN/because one/CD/one of/IN/of its/PRP$/its neighbors/NNS/neighbors /,/, so/RB/so this/DT/this vertex/NN/vertex getting/VBG/getting a/DT/a distance/NN/distance label/NN/label d/NN/d /:/( hindi/NN/hindi conversation/NN/conversation /:/) it/PRP/it could/MD/could have/VB/have been/VBN/been updated/VBN/updated in/IN/in the/DT/the same/JJ/same round/NN/round and/CC/and you/PRP/you are/VBP/are worried/VBN/worried about/IN/about that/DT/that aspect/NNP/aspect. then/RB/then we/PRP/we will/MD/will have/VB/have do/VB/do a/DT/a double/JJ/double induction/NN/induction kind/NN/kind of/IN/of a/DT/a thing/NNP/thing. let/NN/let us/PRP/us not/RB/not worry/VBP/worry about/IN/about that/DT/that /,/, i/PRP/i will/MD/will modified/VB/modified the/DT/the code/NN/code so/RB/so that/IN/that every/DT/every thing/NN/thing gets/VBZ/gets updated/VBN/updated simultaneously/NNP/simultaneously. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) but/CC/but let/VB/let us/PRP/us just/RB/just assume/VBP/assume this/DT/this vertex/NN/vertex u/NN/u /,/, this/DT/this d/NN/d /:/[ u/NN/u /:/] was/VBD/was the/DT/the label/NN/label in/IN/in round/NN/round r-1/NNP/r-1. so/RB/so now/RB/now we/PRP/we can/MD/can apply/VB/apply induction/NN/induction hypothesis/NN/hypothesis which/WDT/which means/VBZ/means that/DT/that we/PRP/we found/VBD/found a/DT/a path/NN/path of/IN/of length/NN/length d/NN/d /:/[ u/NN/u /:/] from/IN/from s/NNS/s to/TO/to u/NNP/u. that/IN/that was/VBD/was the/DT/the induction/NN/induction hypothesis/NN/hypothesis saying/NNP/saying. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) and/CC/and this/DT/this plus/NN/plus this/DT/this means/VBZ/means that/IN/that i/PRP/i have/VBP/have found/VBN/found a/DT/a path/NN/path from/IN/from s/NNS/s to/TO/to v/VB/v of/IN/of length/NN/length exactly/RB/exactly d/JJ/d /NN/[ u/NN/u /:/] +/:/+ l/NN/l /:/[ u/NN/u /,/, v/NN/v /:/] which/WDT/which is/VBZ/is all/DT/all d/NN/d /:/( hindi/NN/hindi conversation/NN/conversation /:/) that/IN/that is/VBZ/is complete/JJ/complete /NN/( hindi/NN/hindi conversation/NN/conversation /:/) there/EX/there is/VBZ/is a/DT/a valid/JJ/valid doubt/NN/doubt /,/, you/PRP/you guys/VBZ/guys are/VBP/are worried/VBN/worried a/DT/a little/RB/little bit/NN/bit /:/( hindi/NN/hindi conversation/NN/conversation /:/) look/NN/look at/IN/at the/DT/the algorithm/NN/algorithm but/CC/but let/VB/let us/PRP/us modify/VB/modify the/DT/the thing/NN/thing so/RB/so that/IN/that we/PRP/we do/VBP/do not/RB/not do/VB/do that/DT/that at/IN/at all/DT/all /CD/( hindi/NN/hindi conversation/NN/conversation /:/) for/IN/for all/PDT/all v/NN/v do/VBP/do /:/( hindi/NN/hindi conversation/NN/conversation /:/) x/NN/x /:/[ v/NN/v /:/] equals/NNS/equals d/VBP/d /:/[ v/NN/v /:/] /,/, x/NN/x /:/[ v/NN/v /:/] equal/JJ/equal to/TO/to min/VB/min /:/[ x/NN/x /:/[ v/NN/v /:/] /,/, d/VBD/d /:/[ w/NN/w /:/] +/:/+ l/NN/l /:/[ v,w/JJ/v,w /NN/] /:/] /:/( hindi/NN/hindi conversation/NN/conversation /:/) in/IN/in fact/NN/fact that/IN/that will/MD/will be/VB/be faster/JJR/faster than/IN/than this/DT/this one/CD/one because/IN/because you/PRP/you are/VBP/are kind/JJ/kind of/IN/of doing/VBG/doing a/DT/a little/RB/little bit/NN/bit more/JJR/more work/NN/work in/IN/in each/DT/each round/NNP/round. for/IN/for this/DT/this perhaps/RB/perhaps the/DT/the correctness/NN/correctness is/VBZ/is more/RBR/more apparent/JJ/apparent so/RB/so it/PRP/it is/VBZ/is okay/NN/okay if/IN/if you/PRP/you do/VBP/do it/PRP/it this/DT/this way/NNP/way. but/CC/but even/RB/even that/IN/that it/PRP/it is/VBZ/is correct/NNP/correct. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 12/CD/12 /CD/) the/DT/the last/JJ/last thing/NN/thing i/PRP/i want/VBP/want to/TO/to say/VB/say very/RB/very briefly/RB/briefly is/VBZ/is apsp/NN/apsp /,/, this/DT/this is/VBZ/is all/DT/all pair/NN/pair shortest/NN/shortest path/NNP/path. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) all/DT/all pair/NN/pair /,/, every/DT/every pair/NN/pair of/IN/of vertices/NNS/vertices /:/( hindi/NN/hindi conversation/NN/conversation /:/) n/NN/n /:/( mlog/NN/mlog n/NN/n /:/) time/NN/time /:/( hindi/NN/hindi conversation/NN/conversation /:/) n/NN/n /:/( m/NN/m /,/, n/NN/n /:/) /:/( hindi/NN/hindi conversation/NN/conversation /:/) these/DT/these are/VBP/are not/RB/not the/DT/the best/JJS/best possible/JJ/possible /,/, there/EX/there are/VBP/are algorithm/NN/algorithm which/WDT/which can/MD/can do/VB/do better/RBR/better than/IN/than this/NNP/this. you/PRP/you will/MD/will learn/VB/learn about/IN/about these/DT/these algorithms/NNS/algorithms in/IN/in the/DT/the algorithms/NNS/algorithms scores/NNP/scores. but/CC/but let/VB/let me/PRP/me just/RB/just tell/VBP/tell you/PRP/you what/WP/what are/VBP/are the/DT/the better/JJR/better bound/NN/bound nodes/NNP/nodes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 29/CD/29 /CD/) so/RB/so for/IN/for single/JJ/single source/NN/source shortest/NN/shortest paths/NNS/paths with/IN/with positive/JJ/positive edges/NNS/edges length/NN/length /:/( hindi/NN/hindi conversation/NN/conversation /:/) m/NN/m logn/NN/logn /,/, the/DT/the best/JJS/best bound/NN/bound known/VBN/known is/VBZ/is m/NN/m +/:/+ n/NN/n log/NN/log n/NN/n /:/( hindi/NN/hindi conversation/NN/conversation /:/) m/NN/m could/MD/could be/VB/be as/RB/as larger/JJR/larger in/IN/in which/WDT/which case/NN/case this/DT/this will/MD/will be/VB/be +/:/+ nlog/NN/nlog n/NN/n could/MD/could be/VB/be and/CC/and this/DT/this will/MD/will be/VB/be log/NN/log n/NNP/n. so/RB/so factor/NN/factor log/NN/log n/NN/n more/NNP/more. this/DT/this is/VBZ/is single/JJ/single source/NN/source shortest/NN/shortest path/NN/path when/WRB/when edge/NN/edge lengths/NNS/lengths are/VBP/are positive/NNP/positive. when/WRB/when edge/NN/edge lengths/NNS/lengths can/MD/can be/VB/be negative/JJ/negative /,/, when/WRB/when i/PRP/i write/VBP/write negative/JJ/negative it/PRP/it does/VBZ/does not/RB/not mean/VB/mean that/IN/that every/DT/every thing/NN/thing is/VBZ/is negative/NNP/negative. please/NN/please remember/NN/remember this/DT/this /,/, it/PRP/it just/RB/just means/VBZ/means that/DT/that in/IN/in fact/NN/fact every/DT/every thing/NN/thing is/VBZ/is negative/JJ/negative /NN/( hindi/NN/hindi conversation/NN/conversation /:/) best/JJS/best possible/JJ/possible be/VB/be mn/NNP/mn. you/PRP/you can/MD/can not/RB/not /VB/( hindi/NN/hindi conversation/NN/conversation /:/) all/DT/all pair/NN/pair shortest/NN/shortest path/NN/path /:/( hindi/NN/hindi conversation/NN/conversation /:/) mn/NN/mn logn/NNP/logn. best/JJS/best possible/JJ/possible /NN/( hindi/NN/hindi conversation/NN/conversation /:/) n/NN/n /:/( m/NN/m +/:/+ n/NN/n logn/NN/logn /:/) /:/( hindi/NN/hindi conversation/NN/conversation /:/) best/JJS/best possible/JJ/possible is/VBZ/is mn/VBN/mn +/-NONE-/+ log/NN/log n/NN/n /,/, basically/RB/basically same/JJ/same as/IN/as this/DT/this one/NNP/one. best/JJS/best known/VBN/known /,/, no/DT/no these/DT/these are/VBP/are not/RB/not the/DT/the lower/JJR/lower bounds/NNS/bounds these/DT/these are/VBP/are only/RB/only the/DT/the best/JJS/best known/NNP/known. /NNP/( hindi/NN/hindi conversation/NN/conversation /:/) so/RB/so with/IN/with that/DT/that we/PRP/we will/MD/will end/VB/end today/NN/today lecture/NN/lecture on/IN/on shortest/JJS/shortest path/NNP/path. in/IN/in fact/NN/fact that/IN/that also/RB/also brings/VBZ/brings us/PRP/us to/TO/to the/DT/the end/NN/end of/IN/of this/DT/this course/NNP/course. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to take/VB/take up/RP/up any/DT/any other/JJ/other topic/JJ/topic /,/, this/DT/this is/VBZ/is all/DT/all we/PRP/we have/VBP/have to/TO/to discuss/NNP/discuss. data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms dr/NNP/dr. naveen/IN/naveen garg/NN/garg department/NN/department of/IN/of computer/NN/computer science/NN/science and/CC/and engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, delhi/NN/delhi lecture/NN/lecture ?/./? 1/CD/1 introduction/NN/introduction to/TO/to data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms welcome/VB/welcome to/TO/to data/VB/data structures/NNS/structures and/CC/and algorithms/NNP/algorithms. we/PRP/we are/VBP/are going/VBG/going to/TO/to learn/VB/learn about/IN/about some/DT/some basic/JJ/basic terminologies/NNS/terminologies regarding/VBG/regarding data/NNS/data structures/NNS/structures and/CC/and the/DT/the notations/NNS/notations that/WDT/that you/PRP/you would/MD/would be/VB/be following/VBG/following in/IN/in the/DT/the rest/NN/rest of/IN/of this/DT/this course/NNP/course. we/PRP/we will/MD/will begin/VB/begin with/IN/with some/DT/some simple/JJ/simple definitions/NNP/definitions. an/DT/an algorithm/NN/algorithm is/VBZ/is an/DT/an outline/NN/outline of/IN/of the/DT/the steps/NNS/steps that/WDT/that a/DT/a program/NN/program or/CC/or any/DT/any computational/JJ/computational procedure/NN/procedure has/VBZ/has to/TO/to take/NNP/take. a/DT/a program/NN/program on/IN/on the/DT/the other/JJ/other hand/NN/hand is/VBZ/is an/DT/an implementation/NN/implementation of/IN/of an/DT/an algorithm/NN/algorithm and/CC/and it/PRP/it could/MD/could be/VB/be in/IN/in any/DT/any programming/NN/programming language/NNP/language. data/NNS/data structure/VBP/structure is/VBZ/is the/DT/the way/NN/way we/PRP/we need/VBP/need to/TO/to organize/VB/organize the/DT/the data/NNS/data /,/, so/RB/so that/IN/that it/PRP/it can/MD/can be/VB/be used/VBN/used effectively/RB/effectively by/IN/by the/DT/the program/NNP/program. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 27/CD/27 /CD/) hope/NN/hope you/PRP/you are/VBP/are all/DT/all familiar/JJ/familiar with/IN/with certain/JJ/certain data/NNS/data structures/NNS/structures /,/, an/DT/an array/NN/array or/CC/or a/DT/a list/NNP/list. in/IN/in this/DT/this course/NN/course you/PRP/you will/MD/will be/VB/be seeing/VBG/seeing a/DT/a lot/NN/lot of/IN/of data/NNS/data structures/NNS/structures and/CC/and you/PRP/you will/MD/will see/VB/see how/WRB/how to/TO/to use/VB/use them/PRP/them in/IN/in various/JJ/various algorithms/NNP/algorithms. we/PRP/we will/MD/will take/VB/take a/DT/a particular/JJ/particular problem/NN/problem /,/, try/NN/try to/TO/to solve/VB/solve it/PRP/it and/CC/and in/IN/in the/DT/the process/NN/process develop/NN/develop data/NNS/data structures/NNP/structures. the/DT/the best/JJS/best way/NN/way of/IN/of organizing/VBG/organizing the/DT/the data/NNS/data /,/, associated/VBN/associated with/IN/with that/DT/that problem/NNP/problem. what/WP/what is/VBZ/is an/DT/an algorithmic/JJ/algorithmic problem/NN/problem ?/./? an/DT/an algorithmic/JJ/algorithmic problem/NN/problem is/VBZ/is essentially/RB/essentially /,/, that/IN/that you/PRP/you have/VBP/have a/DT/a certain/JJ/certain specifications/NNS/specifications of/IN/of an/DT/an input/NN/input and/CC/and specify/NN/specify what/WP/what the/DT/the output/NN/output should/MD/should be/VB/be like/NNP/like. here/RB/here is/VBZ/is one/CD/one specification/NNP/specification. a/DT/a sorted/JJ/sorted /,/, non/NN/non decreasing/VBG/decreasing sequence/NN/sequence of/IN/of natural/JJ/natural numbers/NNS/numbers of/IN/of non-zero/JJ/non-zero /,/, finite/JJ/finite length/NNP/length. for/IN/for example/NN/example /:/: ?/./? 1,20,908,909,100000,1000000000/CD/1,20,908,909,100000,1000000000 ?/./? 3/CD/3. this/DT/this is/VBZ/is a/DT/a completely/RB/completely specified/VBN/specified input/NNP/input. above/IN/above are/VBP/are the/DT/the two/CD/two examples/NNS/examples of/IN/of input/NN/input /,/, which/WDT/which meets/NNS/meets the/DT/the specification/NN/specification and/CC/and i/PRP/i have/VBP/have not/RB/not given/VBN/given any/DT/any output/NN/output specification/NNP/specification. what/WP/what is/VBZ/is an/DT/an instance/NN/instance ?/./? a/DT/a sorted/VBN/sorted /,/, non-decreasing/JJ/non-decreasing sequence/NN/sequence of/IN/of natural/JJ/natural numbers/NNS/numbers of/IN/of non-zero/JJ/non-zero /,/, finite/JJ/finite length/NN/length forms/NNS/forms an/DT/an instance/NNP/instance. those/DT/those two/CD/two examples/NNS/examples are/VBP/are the/DT/the instances/NNS/instances of/IN/of the/DT/the input/NNP/input. you/PRP/you can/MD/can have/VB/have any/DT/any possible/JJ/possible number/NN/number of/IN/of instances/NNS/instances that/WDT/that may/MD/may take/VB/take sequence/NN/sequence of/IN/of sorted/VBN/sorted /,/, non-decreasing/JJ/non-decreasing numbers/NNS/numbers as/IN/as input/NNP/input. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 2/CD/2 /:/: 29/CD/29 /CD/) an/DT/an algorithm/NN/algorithm is/VBZ/is essentially/RB/essentially /,/, describing/VBG/describing the/DT/the actions/NNS/actions that/WDT/that one/CD/one should/MD/should take/VB/take on/IN/on the/DT/the input/NN/input instance/NN/instance to/TO/to get/VB/get the/DT/the specified/VBN/specified output/NNP/output. also/RB/also there/RB/there can/MD/can be/VB/be infinitely/RB/infinitely many/JJ/many input/NN/input instances/NNS/instances and/CC/and algorithms/NNS/algorithms for/IN/for solving/VBG/solving certain/JJ/certain problem/NNP/problem. each/DT/each one/CD/one of/IN/of you/PRP/you could/MD/could do/VB/do it/PRP/it in/IN/in a/DT/a different/JJ/different way/NNP/way. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 33/CD/33 /CD/) that/WDT/that brings/VBZ/brings the/DT/the notion/NN/notion of/IN/of good/JJ/good algorithm/NNP/algorithm. there/RB/there are/VBP/are so/RB/so many/JJ/many different/JJ/different algorithms/NNS/algorithms for/IN/for solving/VBG/solving a/DT/a certain/JJ/certain problem/NNP/problem. what/WP/what is/VBZ/is a/DT/a good/JJ/good algorithm/NN/algorithm ?/./? good/JJ/good algorithm/NN/algorithm is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NNP/algorithm. what/WP/what is/VBZ/is efficient/JJ/efficient ?/./? efficient/NN/efficient is/VBZ/is something/NN/something /,/, which/WDT/which has/VBZ/has small/JJ/small running/VBG/running time/NN/time and/CC/and takes/VBZ/takes less/JJR/less memory/NNP/memory. these/DT/these will/MD/will be/VB/be the/DT/the two/CD/two measures/NNS/measures of/IN/of efficiency/NN/efficiency we/PRP/we will/MD/will be/VB/be working/VBG/working with/NNP/with. there/RB/there could/MD/could also/RB/also be/VB/be other/JJ/other measures/NNS/measures of/IN/of efficiency/NNP/efficiency. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 3/CD/3 /:/: 53/CD/53 /CD/) but/CC/but these/DT/these are/VBP/are the/DT/the only/JJ/only two/CD/two things/NNS/things we/PRP/we will/MD/will be/VB/be considering/VBG/considering in/IN/in this/DT/this course/NNP/course. we/PRP/we would/MD/would be/VB/be spending/NN/spending more/JJR/more time/NN/time on/IN/on analyzing/NN/analyzing the/DT/the running/NN/running time/NN/time of/IN/of an/DT/an algorithm/NN/algorithm and/CC/and we/PRP/we will/MD/will also/RB/also spend/VB/spend some/DT/some time/NN/time on/IN/on analyzing/NN/analyzing the/DT/the space/NNP/space. we/PRP/we would/MD/would be/VB/be interested/JJ/interested in/IN/in the/DT/the efficiency/NN/efficiency of/IN/of algorithms/NNS/algorithms /,/, as/IN/as a/DT/a function/NN/function of/IN/of input/NN/input size/NNP/size. clearly/RB/clearly you/PRP/you can/MD/can imagine/VB/imagine that/IN/that /,/, if/IN/if i/PRP/i have/VBP/have a/DT/a small/JJ/small input/NN/input and/CC/and my/PRP$/my algorithm/NN/algorithm or/CC/or a/DT/a program/NN/program running/VBG/running on/IN/on that/DT/that input/NN/input will/MD/will take/VB/take less/JJR/less amount/NN/amount of/IN/of time/NNP/time. if/IN/if the/DT/the input/NN/input becomes/VBZ/becomes 10/CD/10 times/NNS/times larger/JJR/larger /,/, then/RB/then the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the program/NN/program may/MD/may also/RB/also increase/NNP/increase. it/PRP/it may/MD/may become/VB/become 10/CD/10 /,/, 20/CD/20 or/CC/or 100/CD/100 times/NNP/times. it/PRP/it is/VBZ/is this/DT/this behavior/NN/behavior of/IN/of increase/NN/increase in/IN/in the/DT/the running/NN/running time/NN/time /,/, with/IN/with the/DT/the increase/NN/increase in/IN/in the/DT/the size/NN/size of/IN/of input/NN/input would/MD/would be/VB/be of/IN/of our/PRP$/our interest/NNP/interest. let/NN/let us/PRP/us see/VBP/see the/DT/the slide/NNP/slide. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 5/CD/5 /:/: 20/CD/20 /CD/) how/WRB/how does/VBZ/does one/CD/one measure/NN/measure the/DT/the running/NN/running time/NN/time of/IN/of an/DT/an algorithm/NN/algorithm ?/./? let/NN/let us/PRP/us look/VBP/look at/IN/at the/DT/the experimental/JJ/experimental study/NNP/study. you/PRP/you have/VBP/have a/DT/a certain/JJ/certain algorithm/NN/algorithm and/CC/and you/PRP/you have/VBP/have to/TO/to implement/VB/implement the/DT/the algorithm/NN/algorithm /,/, which/WDT/which means/VBZ/means you/PRP/you have/VBP/have to/TO/to write/VB/write a/DT/a program/NN/program in/IN/in a/DT/a certain/JJ/certain programming/NN/programming language/NNP/language. you/PRP/you run/VBP/run the/DT/the program/NN/program with/IN/with varying/VBG/varying data/NNS/data sets/NNS/sets in/IN/in which/WDT/which some/DT/some are/VBP/are smaller/JJR/smaller /,/, some/DT/some are/VBP/are of/IN/of larger/JJR/larger data/NNS/data sets/NNS/sets /,/, some/DT/some would/MD/would be/VB/be of/IN/of some/DT/some kinds/NNS/kinds and/CC/and some/DT/some would/MD/would be/VB/be of/IN/of different/JJ/different kinds/NNS/kinds of/IN/of varying/VBG/varying composition/NNP/composition. then/RB/then you/PRP/you clock/VBP/clock the/DT/the time/NN/time the/DT/the program/NN/program takes/VBZ/takes and/CC/and clock/NN/clock does/VBZ/does not/RB/not mean/VB/mean that/IN/that you/PRP/you should/MD/should sit/VB/sit down/RB/down near/IN/near stopwatch/NNP/stopwatch. perhaps/RB/perhaps you/PRP/you can/MD/can use/VB/use the/DT/the system/NN/system utility/NN/utility like/IN/like system/NNP/system. current/JJ/current time/NN/time millis/NNS/millis /:/( /:/) /,/, to/TO/to clock/VB/clock the/DT/the time/NN/time that/IN/that program/NN/program takes/VBZ/takes and/CC/and then/RB/then from/IN/from that/DT/that you/PRP/you try/VBP/try to/TO/to figure/VB/figure out/RP/out /,/, how/WRB/how good/JJ/good your/PRP$/your algorithms/NNS/algorithms is/NNP/is. that/IN/that is/VBZ/is what/WP/what one/CD/one would/MD/would call/VB/call as/IN/as the/DT/the experimental/JJ/experimental study/NN/study of/IN/of the/DT/the algorithm/NNP/algorithm. this/DT/this has/VBZ/has certain/JJ/certain limitations/NNS/limitations /,/, let/VB/let us/PRP/us see/VB/see them/PRP/them in/IN/in detail/NNP/detail. first/JJ/first you/PRP/you have/VBP/have to/TO/to implement/VB/implement the/DT/the algorithm/NN/algorithm in/IN/in which/WDT/which we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to determine/VB/determine how/WRB/how good/JJ/good your/PRP$/your algorithm/NN/algorithm is/NNP/is. implementing/NN/implementing it/PRP/it is/VBZ/is a/DT/a huge/JJ/huge overhead/NN/overhead /,/, where/WRB/where you/PRP/you have/VBP/have to/TO/to spend/VB/spend considerable/JJ/considerable amount/NN/amount of/IN/of time/NNP/time. experiments/NNS/experiments can/MD/can be/VB/be done/VBN/done only/RB/only on/IN/on a/DT/a limited/JJ/limited set/NN/set of/IN/of inputs/NNP/inputs. you/PRP/you can/MD/can run/VB/run your/PRP$/your experiment/NN/experiment on/IN/on a/DT/a small/JJ/small set/NN/set of/IN/of instances/NNS/instances and/CC/and that/IN/that might/MD/might not/RB/not really/RB/really indicate/VBP/indicate the/DT/the time/NN/time that/IN/that your/PRP$/your algorithm/NN/algorithm is/VBZ/is taking/VBG/taking for/IN/for other/JJ/other inputs/NNS/inputs /,/, which/WDT/which you/PRP/you have/VBP/have not/RB/not considered/VBN/considered in/IN/in your/PRP$/your experiment/NNP/experiment. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 6/CD/6 /:/: 23/CD/23 /CD/) if/IN/if you/PRP/you have/VBP/have two/CD/two algorithms/NNS/algorithms and/CC/and you/PRP/you have/VBP/have to/TO/to decide/VB/decide /,/, which/WDT/which one/CD/one is/VBZ/is better/NNP/better. you/PRP/you have/VBP/have to/TO/to use/VB/use exactly/RB/exactly the/DT/the same/JJ/same platforms/NNS/platforms to/TO/to do/VB/do the/DT/the comparison/NNP/comparison. platform/NN/platform means/VBZ/means both/DT/both the/DT/the hardware/NN/hardware and/CC/and software/NN/software environment/NNP/environment. because/IN/because as/IN/as you/PRP/you can/MD/can imagine/VB/imagine /,/, different/JJ/different machines/NNS/machines would/MD/would make/VB/make a/DT/a difference/NN/difference /,/, in/IN/in fact/NN/fact even/RB/even the/DT/the users/NNS/users who/WP/who are/VBP/are working/VBG/working on/IN/on that/DT/that system/NN/system at/IN/at that/DT/that particular/JJ/particular point/NN/point would/MD/would make/VB/make a/DT/a difference/NN/difference on/IN/on the/DT/the running/NN/running time/NN/time of/IN/of an/DT/an algorithm/NNP/algorithm. it/PRP/it becomes/VBZ/becomes very/RB/very messy/JJ/messy /,/, if/IN/if you/PRP/you have/VBP/have to/TO/to do/VB/do it/PRP/it this/DT/this way/NNP/way. hence/NN/hence same/VBD/same hardware/NN/hardware and/CC/and software/NN/software environments/NNS/environments should/MD/should be/VB/be used/NNP/used. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do in/IN/in the/DT/the part/NN/part of/IN/of this/DT/this course/NN/course ?/./? in/IN/in this/DT/this very/RB/very first/JJ/first lecture/NN/lecture /,/, we/PRP/we have/VBP/have to/TO/to develop/VB/develop the/DT/the general/JJ/general methodology/NN/methodology /,/, which/WDT/which will/MD/will help/VB/help us/PRP/us to/TO/to analyze/VB/analyze running/VBG/running time/NN/time of/IN/of algorithms/NNP/algorithms. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do it/PRP/it as/IN/as follows/NNS/follows /:/: first/JJ/first we/PRP/we are/VBP/are going/VBG/going to/TO/to develop/VB/develop a/DT/a high/JJ/high level/NN/level description/NN/description of/IN/of an/DT/an algorithm/NNP/algorithm. the/DT/the way/NN/way of/IN/of describing/VBG/describing an/DT/an algorithm/NN/algorithm and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use this/DT/this description/NN/description to/TO/to figure/VB/figure out/RP/out the/DT/the running/NN/running time/NN/time and/CC/and not/RB/not to/TO/to implement/VB/implement it/PRP/it to/TO/to any/DT/any system/NNP/system. a/DT/a methodology/NN/methodology would/MD/would help/VB/help us/PRP/us to/TO/to take/VB/take into/IN/into account/NN/account of/IN/of all/DT/all possible/JJ/possible input/NN/input instances/NNS/instances and/CC/and also/RB/also it/PRP/it will/MD/will allow/VB/allow us/PRP/us to/TO/to evaluate/VB/evaluate the/DT/the efficiency/NN/efficiency of/IN/of the/DT/the algorithm/NN/algorithm in/IN/in a/DT/a way/NN/way that/WDT/that it/PRP/it is/VBZ/is independent/JJ/independent of/IN/of the/DT/the platform/NN/platform we/PRP/we are/VBP/are using/NNP/using. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 7/CD/7 /:/: 38/CD/38 /CD/) pseudo-code/JJ/pseudo-code is/VBZ/is the/DT/the high/JJ/high level/NN/level description/NN/description of/IN/of an/DT/an algorithm/NN/algorithm and/CC/and this/DT/this is/VBZ/is how/WRB/how we/PRP/we would/MD/would be/VB/be specifying/VBG/specifying all/DT/all our/PRP$/our algorithms/NNS/algorithms for/IN/for the/DT/the purpose/NN/purpose of/IN/of this/DT/this course/NNP/course. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8/CD/8 /:/: 23/CD/23 /CD/) here/RB/here is/VBZ/is an/DT/an example/NN/example of/IN/of pseudo/NN/pseudo code/NN/code and/CC/and you/PRP/you might/MD/might have/VB/have seen/VBN/seen this/DT/this in/IN/in earlier/JJR/earlier courses/NNS/courses also/-NONE-/also. what/WP/what is/VBZ/is this/DT/this algorithm/NN/algorithm doing/VBG/doing ?/./? this/DT/this algorithm/NN/algorithm takes/VBZ/takes an/DT/an array/NN/array a/DT/a /,/, which/WDT/which stores/NNS/stores an/DT/an integer/NN/integer in/IN/in it/PRP/it and/CC/and it/PRP/it is/VBZ/is trying/VBG/trying to/TO/to find/VB/find the/DT/the maximum/NN/maximum element/NN/element in/IN/in this/DT/this array/NNP/array. algorithm/NN/algorithm array/NN/array max/NN/max /:/( a/DT/a /,/, n/NN/n /:/) the/DT/the above/NN/above mentioned/VBD/mentioned example/NN/example is/VBZ/is not/RB/not a/DT/a program/NN/program /,/, because/IN/because the/DT/the syntax/NN/syntax is/VBZ/is wrong/NNP/wrong. but/CC/but it/PRP/it is/VBZ/is a/DT/a pseudo/NN/pseudo code/NN/code which/WDT/which is/VBZ/is a/DT/a mixture/NN/mixture of/IN/of natural/JJ/natural language/NN/language and/CC/and some/DT/some high-level/JJ/high-level programming/NN/programming concepts/NNP/concepts. i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use a/DT/a for/IN/for loop/NN/loop /,/, do/VBP/do loop/NN/loop /,/, if-then-else/JJ/if-then-else statement/NN/statement and/CC/and a/DT/a while/NN/while loop/NNP/loop. but/CC/but i/PRP/i will/MD/will not/RB/not bother/VB/bother about/IN/about whether/IN/whether there/EX/there should/MD/should be/VB/be a/DT/a semicolon/NN/semicolon or/CC/or a/DT/a colon/NN/colon /,/, because/IN/because they/PRP/they are/VBP/are required/VBN/required for/IN/for the/DT/the compiler/NNP/compiler. but/CC/but for/IN/for our/PRP$/our understanding/NN/understanding /,/, what/WP/what the/DT/the program/NN/program is/VBZ/is doing/VBG/doing is/VBZ/is clear/NNP/clear. in/IN/in the/DT/the beginning/NN/beginning it/PRP/it keeps/VBZ/keeps track/NN/track of/IN/of the/DT/the maximum/NN/maximum variable/JJ/variable in/IN/in a/DT/a variable/JJ/variable called/VBN/called current/JJ/current max/NN/max which/WDT/which is/VBZ/is initialized/VBN/initialized to/TO/to the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the array/NNP/array. current/JJ/current max/NN/max ?/./? a/DT/a /NN/[ 0/-NONE-/0 /./] then/RB/then it/PRP/it is/VBZ/is going/VBG/going to/TO/to run/VB/run through/IN/through the/DT/the remaining/VBG/remaining element/NN/element of/IN/of the/DT/the array/NN/array /,/, compare/NN/compare them/PRP/them with/IN/with the/DT/the current/JJ/current maximum/NN/maximum element/NNP/element. if/IN/if the/DT/the current/JJ/current maximum/NN/maximum element/NN/element is/VBZ/is less/JJR/less than/IN/than the/DT/the current/JJ/current element/NN/element /,/, then/RB/then it/PRP/it would/MD/would update/VB/update the/DT/the current/JJ/current max/NNP/max. a/DT/a /NN/[ i/PRP/i /VBP/] becomes/VBZ/becomes the/DT/the new/JJ/new max/NN/max and/CC/and then/RB/then when/WRB/when the/DT/the loop/NN/loop terminates/VBZ/terminates we/PRP/we would/MD/would just/RB/just return/VB/return current/JJ/current max/NNP/max. if/IN/if current/JJ/current max/NN/max </:/< a/DT/a /NN/[ i/PRP/i /VBP/] then/RB/then current/JJ/current max/NN/max ?/./? a/DT/a /NN/[ i/PRP/i /VBP/] return/NN/return current/JJ/current max/NN/max it/PRP/it is/VBZ/is a/DT/a very/RB/very simple/JJ/simple algorithm/NN/algorithm but/CC/but just/RB/just with/IN/with this/DT/this pseudo-code/JJ/pseudo-code /,/, you/PRP/you are/VBP/are able/JJ/able to/TO/to understand/VB/understand what/WP/what it/PRP/it is/VBZ/is doing/NNP/doing. this/DT/this will/MD/will not/RB/not run/VB/run on/IN/on any/DT/any computer/NN/computer since/IN/since it/PRP/it is/VBZ/is the/DT/the pseudo-code/JJ/pseudo-code /,/, but/CC/but it/PRP/it conveys/VBZ/conveys the/DT/the idea/NN/idea or/CC/or the/DT/the concepts/NNP/concepts. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 8/CD/8 /:/: 48/CD/48 /CD/) thus/RB/thus pseudo-code/JJ/pseudo-code is/VBZ/is more/RBR/more structured/VBN/structured than/IN/than usual/JJ/usual prose/NN/prose /,/, but/CC/but it/PRP/it is/VBZ/is less/JJR/less formal/JJ/formal than/IN/than a/DT/a programming/NN/programming language/NNP/language. how/WRB/how pseudo-code/JJ/pseudo-code will/MD/will look/VB/look like/IN/like ?/./? we/PRP/we will/MD/will use/VB/use standard/JJ/standard numeric/JJ/numeric and/CC/and boolean/JJ/boolean expressions/NNS/expressions in/IN/in it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 33/CD/33 /CD/) instead/RB/instead of/IN/of the/DT/the assignment/NN/assignment operator/NN/operator which/WDT/which is/VBZ/is ?/./? =/:/= ?/./? in/IN/in java/NN/java /,/, i/PRP/i will/MD/will use/VB/use ?/./? and/CC/and instead/RB/instead of/IN/of the/DT/the equality/NN/equality operator/NN/operator /,/, an/DT/an equality/NN/equality relationship/NN/relationship in/IN/in java/NN/java which/WDT/which is/VBZ/is ?/./? =/:/= =/:/= ?/./? the/DT/the same/JJ/same in/IN/in c/NN/c /,/, i/PRP/i will/MD/will just/RB/just use/VB/use ?/./? =/:/= ?/./? /./. i/PRP/i will/MD/will declare/VB/declare methods/NNS/methods with/IN/with the/DT/the algorithmic/JJ/algorithmic name/NN/name and/CC/and the/DT/the parameter/NN/parameter it/PRP/it takes/NNP/takes. algorithm/NN/algorithm name/NN/name /:/( param/NN/param 1/CD/1 /,/, param2/NNP/param2 /NNP/) i/PRP/i will/MD/will use/VB/use all/DT/all kinds/NNS/kinds of/IN/of programming/NN/programming construct/NN/construct like/IN/like if/IN/if ?/./? then/RB/then statement/NN/statement /,/, if/IN/if ?/./? then/RB/then ?/./? /:/[ else/RB/else /:/] statement/NN/statement /,/, while/IN/while ?/./? do/VBP/do /,/, repeat/VB/repeat ?/./? until/IN/until /,/, for/IN/for ?/./? do/VBP/do and/CC/and to/TO/to index/NN/index array/NN/array i/PRP/i will/MD/will say/VB/say a/DT/a /NN/[ i/PRP/i /VBP/] /,/, a/DT/a /NN/[ i/PRP/i /,/, j/VBP/j /:/] /./. it/PRP/it should/MD/should be/VB/be clear/JJ/clear in/IN/in what/WP/what it/PRP/it is/VBZ/is doing/NNP/doing. i/PRP/i will/MD/will use/VB/use return/NN/return when/WRB/when the/DT/the procedure/NN/procedure terminates/VBZ/terminates and/CC/and return/NN/return value/NN/value will/MD/will tell/VB/tell about/IN/about the/DT/the value/NN/value returned/VBD/returned by/IN/by the/DT/the particular/JJ/particular procedure/NN/procedure or/CC/or a/DT/a function/NNP/function. returns/VBZ/returns /:/: return/NN/return value/NN/value when/WRB/when i/PRP/i have/VBP/have to/TO/to call/VB/call a/DT/a method/NN/method /,/, i/PRP/i will/MD/will specify/VB/specify that/IN/that with/IN/with the/DT/the name/NN/name of/IN/of the/DT/the method/NN/method and/CC/and the/DT/the argument/NN/argument and/CC/and the/DT/the object/NN/object used/NNP/used. calls/VBZ/calls /:/: object/NN/object method/NN/method /:/( args/NNS/args /VBP/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 22/CD/22 /CD/) object/NN/object specifies/NNS/specifies the/DT/the type/NN/type of/IN/of the/DT/the value/NN/value returned/VBD/returned by/IN/by the/DT/the particular/JJ/particular method/NNP/method. you/PRP/you will/MD/will see/VB/see more/RBR/more of/IN/of this/DT/this /,/, when/WRB/when we/PRP/we come/VBP/come across/RP/across more/JJR/more pseudo-code/NNP/pseudo-code. how/WRB/how do/VBP/do we/PRP/we analyze/VB/analyze algorithms/NNS/algorithms ?/./? first/JJ/first we/PRP/we identify/RB/identify what/WP/what are/VBP/are the/DT/the primitive/JJ/primitive operations/NNS/operations in/IN/in our/PRP$/our pseudo-code/NNP/pseudo-code. what/WP/what is/VBZ/is a/DT/a primitive/JJ/primitive operation/NN/operation ?/./? it/PRP/it is/VBZ/is a/DT/a low/JJ/low level/NN/level operation/NNP/operation. example/NN/example is/VBZ/is a/DT/a data/NN/data movement/NN/movement in/IN/in which/WDT/which i/PRP/i do/VBP/do an/DT/an assignment/NN/assignment from/IN/from one/CD/one to/TO/to another/DT/another /,/, i/PRP/i do/VBP/do a/DT/a control/NN/control statement/NN/statement which/WDT/which is/VBZ/is a/DT/a branch/NN/branch /:/( if/IN/if ?/./? then/RB/then ?/./? else/RB/else /:/) subroutine/NN/subroutine call/NN/call or/CC/or return/NNP/return. i/PRP/i do/VBP/do arithmetic/JJ/arithmetic operations/NNS/operations or/CC/or logical/JJ/logical operations/NNS/operations and/CC/and these/DT/these are/VBP/are called/VBN/called as/IN/as a/DT/a primitive/JJ/primitive operation/NNP/operation. ?/./? data/NNS/data movement/NN/movement /:/( assign/NN/assign /:/) ?/./? control/NN/control /:/( branch/NN/branch /,/, subroutine/NN/subroutine call/NN/call /,/, return/NN/return /:/) ?/./? arithmetic/JJ/arithmetic an/DT/an logical/JJ/logical operations/NNS/operations /:/( e.g/NNP/e.g. addition/NN/addition /,/, comparison/NN/comparison /:/) in/IN/in my/PRP$/my pseudo/NN/pseudo code/NN/code /,/, i/PRP/i just/RB/just inspect/VBP/inspect the/DT/the pseudo/NN/pseudo code/NN/code and/CC/and count/NN/count the/DT/the number/NN/number of/IN/of primitive/JJ/primitive operations/NNS/operations that/WDT/that are/VBP/are executed/VBN/executed by/IN/by an/DT/an algorithm/NNP/algorithm. let/NN/let us/PRP/us see/VBP/see an/DT/an example/NN/example of/IN/of sorting/NNP/sorting. the/DT/the input/NN/input is/VBZ/is some/DT/some sequence/NN/sequence of/IN/of numbers/NNS/numbers and/CC/and output/VBD/output is/VBZ/is a/DT/a permutation/NN/permutation of/IN/of the/DT/the sequence/NN/sequence which/WDT/which is/VBZ/is in/IN/in non/NN/non decreasing/VBG/decreasing order/NNP/order. what/WP/what are/VBP/are the/DT/the requirements/NNS/requirements for/IN/for the/DT/the output/NN/output ?/./? it/PRP/it should/MD/should be/VB/be in/IN/in non-decreasing/JJ/non-decreasing order/NN/order and/CC/and it/PRP/it should/MD/should be/VB/be the/DT/the permutation/NN/permutation of/IN/of the/DT/the input/NNP/input. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 37/CD/37 /CD/) any/DT/any set/NN/set of/IN/of numbers/NNS/numbers which/WDT/which are/VBP/are in/IN/in non-decreasing/JJ/non-decreasing order/NN/order does/VBZ/does not/RB/not make/VB/make an/DT/an output/NNP/output. algorithm/NN/algorithm should/MD/should sort/VB/sort the/DT/the numbers/NNS/numbers that/WDT/that were/VBD/were given/VBN/given to/TO/to it/PRP/it and/CC/and not/RB/not just/RB/just produce/VB/produce the/DT/the sequence/NN/sequence of/IN/of numbers/NNS/numbers as/IN/as an/DT/an increasing/VBG/increasing order/NNP/order. clearly/RB/clearly the/DT/the running/VBG/running time/NN/time depends/NNS/depends upon/IN/upon /,/, number/NN/number of/IN/of elements/NNS/elements /:/( n/NN/n /:/) and/CC/and often/RB/often it/PRP/it depends/VBZ/depends upon/IN/upon how/WRB/how sorted/VBN/sorted these/DT/these numbers/NNS/numbers are/NNP/are. if/IN/if they/PRP/they are/VBP/are already/RB/already in/IN/in sorted/VBN/sorted order/NN/order then/RB/then the/DT/the algorithm/NN/algorithm will/MD/will not/RB/not take/VB/take a/DT/a long/JJ/long time/NNP/time. it/PRP/it also/RB/also depends/VBZ/depends upon/IN/upon the/DT/the particular/JJ/particular algorithm/NN/algorithm we/PRP/we use/NNP/use. the/DT/the running/VBG/running time/NN/time would/MD/would depend/VB/depend upon/IN/upon all/DT/all these/DT/these things/NNP/things. the/DT/the first/JJ/first sorting/NN/sorting technique/NN/technique we/PRP/we use/VBP/use is/VBZ/is the/DT/the one/CD/one that/WDT/that you/PRP/you have/VBP/have used/VBN/used very/RB/very often/NNP/often. let/VB/let us/PRP/us say/VB/say when/WRB/when you/PRP/you are/VBP/are playing/VBG/playing game/NN/game of/IN/of cards/NNP/cards. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 11/CD/11 /CD/) what/WP/what is/VBZ/is the/DT/the strategy/NN/strategy you/PRP/you follow/VBP/follow /,/, when/WRB/when you/PRP/you are/VBP/are picking/VBG/picking up/RP/up a/DT/a set/NN/set of/IN/of cards/NNS/cards that/WDT/that have/VBP/have been/VBN/been dealt/VBN/dealt out/RP/out to/TO/to you/PRP/you ?/./? you/PRP/you like/IN/like to/TO/to keep/VB/keep them/PRP/them in/IN/in a/DT/a sorted/VBN/sorted order/NN/order in/IN/in your/PRP$/your hand/NNP/hand. you/PRP/you start/VB/start with/IN/with the/DT/the empty/NN/empty hand/NN/hand and/CC/and you/PRP/you pick/VBP/pick up/RP/up the/DT/the first/JJ/first card/NN/card /,/, then/RB/then you/PRP/you take/VBP/take the/DT/the next/JJ/next card/NN/card and/CC/and insert/NN/insert it/PRP/it at/IN/at the/DT/the appropriate/JJ/appropriate place/NNP/place. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 45/CD/45 /CD/) suppose/JJ/suppose if/IN/if i/PRP/i have/VBP/have some/DT/some five/CD/five cards/NNS/cards in/IN/in your/PRP$/your hand/NN/hand already/RB/already /,/, let/VB/let us/PRP/us say/VB/say 2/CD/2 /,/, 7/CD/7 /,/, 9/CD/9 /,/, jack/NN/jack and/CC/and queen/NNP/queen. then/RB/then i/PRP/i am/VBP/am getting/VBG/getting 8/CD/8 /,/, so/RB/so i/PRP/i am/VBP/am going/VBG/going to/TO/to put/VB/put it/PRP/it between/IN/between 7/CD/7 and/CC/and 9/CD/9. that/WDT/that is/VBZ/is the/DT/the right/NN/right place/NN/place it/PRP/it has/VBZ/has to/TO/to be/VB/be placed/VBN/placed in/-NONE-/in. i/PRP/i am/VBP/am inserting/VBG/inserting it/PRP/it at/IN/at the/DT/the appropriate/JJ/appropriate place/NN/place and/CC/and that/IN/that is/VBZ/is why/WRB/why this/DT/this technique/NN/technique is/VBZ/is called/VBN/called insertion/NN/insertion sort/NNP/sort. i/PRP/i keep/VBP/keep on/IN/on doing/VBG/doing this/DT/this /,/, till/IN/till i/PRP/i have/VBP/have picked/VBN/picked up/RP/up all/DT/all the/DT/the cards/NNS/cards and/CC/and inserted/VBD/inserted in/IN/in the/DT/the appropriate/NN/appropriate place/NNP/place. let/NN/let us/PRP/us see/VBP/see the/DT/the pseudo-code/JJ/pseudo-code for/IN/for insertion/NN/insertion sort/NNP/sort. i/PRP/i will/MD/will give/VB/give an/DT/an array/NN/array of/IN/of integers/NNS/integers as/IN/as input/NN/input and/CC/and output/NN/output is/VBZ/is a/DT/a permutation/NN/permutation of/IN/of the/DT/the original/JJ/original numbers/NNS/numbers /,/, such/JJ/such that/IN/that it/PRP/it is/VBZ/is sorted/NNP/sorted. the/DT/the output/NN/output is/VBZ/is also/RB/also going/VBG/going to/TO/to be/VB/be in/IN/in the/DT/the same/JJ/same array/NNP/array. a/DT/a /NN/[ 1/CD/1 /CD/] a/DT/a /NN/[ 2/CD/2 /CD/] _/NNP/_ a/DT/a /NN/[ n/NN/n /:/] this/DT/this is/VBZ/is the/DT/the input/NN/input /,/, output/NN/output specification/NNP/specification. i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have 2/CD/2 variables/NNS/variables or/CC/or indices/NNS/indices i/PRP/i and/CC/and j/NNP/j. the/DT/the array/NN/array is/VBZ/is going/VBG/going to/TO/to be/VB/be sorted/VBN/sorted from/IN/from a/DT/a /CD/[ 1/CD/1 /CD/] through/IN/through a/DT/a /NN/[ j-1/-NONE-/j-1 /./] /./. the/DT/the element/NN/element should/MD/should be/VB/be inserted/VBN/inserted at/IN/at the/DT/the location/NN/location /,/, which/WDT/which is/VBZ/is the/DT/the right/NN/right place/NN/place to/TO/to insert/NNP/insert. clearly/RB/clearly j/VB/j has/VBZ/has to/TO/to vary/VB/vary from/IN/from 2-n/CD/2-n. for/IN/for j/NN/j ?/./? 2/CD/2 to/TO/to n/VB/n do/VBP/do /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 43/CD/43 /CD/) i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at element/NN/element and/CC/and i/PRP/i put/VBD/put that/IN/that in/IN/in key/NNP/key. key/NN/key ?/./? a/DT/a /NN/[ j/NN/j /:/] i/PRP/i have/VBP/have to/TO/to insert/VB/insert a/DT/a /NN/[ j/NN/j /:/] or/CC/or the/DT/the key/JJ/key in/IN/in to/TO/to the/DT/the sorted/VBN/sorted sequence/NN/sequence which/WDT/which is/VBZ/is a/DT/a /NN/[ 1/CD/1 /CD/] through/IN/through a/DT/a /NN/[ j-1/-NONE-/j-1 /./] /./. i.e/NNP/i.e. a/DT/a /NN/[ 1_j-1/CD/1_j-1 /CD/] i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use the/DT/the index/NN/index i/PRP/i to/TO/to do/VB/do this/NNP/this. what/WP/what is/VBZ/is index/NN/index i/PRP/i going/VBG/going to/TO/to do/VB/do ?/./? index/NN/index i/PRP/i is/VBZ/is going/VBG/going to/TO/to run/VB/run down/RP/down from/IN/from j-1/-NONE-/j-1 down/IN/down to/TO/to 1/CD/1. we/PRP/we have/VBP/have to/TO/to decrease/VB/decrease index/NN/index i/PRP/i /,/, which/WDT/which we/PRP/we are/VBP/are doing/VBG/doing in/IN/in the/DT/the while/NN/while ?/./? do/VBP/do loop/NNP/loop. it/PRP/it starts/VBZ/starts with/IN/with the/DT/the value/NN/value j-1/NNP/j-1. i/PRP/i have/VBP/have to/TO/to insert/VB/insert 7/CD/7 and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to move/VB/move 9/CD/9 to/TO/to location/NN/location /,/, because/IN/because 9/CD/9 is/VBZ/is greater/JJR/greater than/IN/than 7/CD/7. then/RB/then i/PRP/i compare/VBP/compare 7/CD/7 with/IN/with 8/CD/8 and/CC/and 8/CD/8 is/VBZ/is still/RB/still greater/JJR/greater than/IN/than 7/CD/7 /,/, so/RB/so i/PRP/i will/MD/will move/VB/move it/PRP/it right/NNP/right. then/RB/then i/PRP/i compare/VBP/compare 7/CD/7 with/IN/with 6/CD/6. as/IN/as 6/CD/6 is/VBZ/is smaller/JJR/smaller than/IN/than 7/CD/7 /,/, i/PRP/i would/MD/would put/VB/put 7/CD/7 in/IN/in the/DT/the appropriate/NN/appropriate place/NNP/place. i/PRP/i run/VBP/run through/IN/through this/DT/this loop/NN/loop /,/, till/NN/till i/PRP/i find/VBP/find an/DT/an element/NN/element which/WDT/which is/VBZ/is less/RBR/less than/IN/than a/DT/a key/NNP/key. key/NN/key is/VBZ/is the/DT/the element/NN/element which/WDT/which i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/NNP/insert. this/DT/this loop/NN/loop will/MD/will continue/VB/continue while/IN/while the/DT/the element/NN/element /,/, which/WDT/which i/PRP/i consider/VBP/consider is/VBZ/is more/RBR/more than/IN/than key/JJ/key and/CC/and this/DT/this loop/NN/loop will/MD/will terminate/VB/terminate /,/, when/WRB/when i/PRP/i see/VBP/see an/DT/an element/NN/element which/WDT/which is/VBZ/is less/RBR/less than/IN/than key/JJ/key or/CC/or the/DT/the loop/NN/loop will/MD/will terminate/VB/terminate when/WRB/when i/PRP/i reach/VBP/reach i/PRP/i =/VBP/= 0/CD/0. while/IN/while i/PRP/i >/VBP/> 0/-NONE-/0 and/CC/and a/DT/a /NN/[ i/PRP/i /VBP/] >/:/> key/JJ/key do/VBP/do a/DT/a /NN/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] ?/./? a/DT/a /NN/[ i/PRP/i /VBP/] that/IN/that means/NNS/means i/PRP/i have/VBP/have moved/VBN/moved everything/VBG/everything to/TO/to the/DT/the right/NN/right and/CC/and i/PRP/i should/MD/should insert/VB/insert the/DT/the element/NN/element at/IN/at the/DT/the very/RB/very first/JJ/first place/NN/place and/CC/and i/PRP/i am/VBP/am just/RB/just shifting/VBG/shifting the/DT/the element/NN/element one/CD/one step/NN/step to/TO/to the/DT/the right/NNP/right. do/VBP/do a/DT/a /NN/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] ?/./? a/DT/a /NN/[ i/PRP/i /VBP/] note/JJ/note that/IN/that i/PRP/i have/VBP/have to/TO/to insert/VB/insert 7/CD/7 at/IN/at the/DT/the right/NN/right place/NN/place /,/, so/RB/so i/PRP/i shift/VBP/shift 9/CD/9 right/NN/right to/TO/to 1/CD/1 step/NNP/step. location/NN/location becomes/VBZ/becomes empty/JJ/empty /,/, then/RB/then i/PRP/i shift/VBP/shift 8/CD/8 to/TO/to 1/CD/1 step/VB/step /,/, so/RB/so this/DT/this location/NN/location becomes/VBZ/becomes empty/JJ/empty and/CC/and now/RB/now i/PRP/i put/VBD/put 7/CD/7 there/NNP/there. i/PRP/i +/VBP/+ 1/CD/1 is/VBZ/is the/DT/the index/NN/index /,/, which/WDT/which would/MD/would be/VB/be the/DT/the empty/NN/empty location/NN/location eventually/RB/eventually and/CC/and i/PRP/i put/VBD/put the/DT/the key/JJ/key there/NNP/there. a/DT/a /NN/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] ?/./? key/JJ/key all/DT/all of/IN/of you/PRP/you can/MD/can implement/VB/implement it/NNP/it. may/MD/may be/VB/be you/PRP/you would/MD/would have/VB/have implemented/VBN/implemented it/PRP/it in/IN/in a/DT/a slightly/RB/slightly different/JJ/different way/NN/way /,/, that/IN/that would/MD/would give/VB/give you/PRP/you a/DT/a different/JJ/different program/NN/program /,/, but/CC/but the/DT/the algorithm/NN/algorithm is/VBZ/is essentially/RB/essentially the/DT/the same/NNP/same. you/PRP/you are/VBP/are going/VBG/going to/TO/to find/VB/find the/DT/the right/NN/right place/NN/place for/IN/for the/DT/the element/NN/element and/CC/and insert/NN/insert it/NNP/it. let/NN/let us/PRP/us analyze/VBP/analyze this/DT/this algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 34/CD/34 /CD/) i/PRP/i have/VBP/have put/VBN/put down/RP/down the/DT/the algorithm/NN/algorithm on/IN/on the/DT/the left/NNP/left. there/RB/there is/VBZ/is a/DT/a small/JJ/small mistake/NN/mistake in/IN/in the/DT/the last/JJ/last line/NN/line of/IN/of the/DT/the slide/NN/slide /,/, where/WRB/where there/EX/there should/MD/should be/VB/be a/DT/a left/NN/left arrow/NNP/arrow. please/NN/please make/VB/make a/DT/a correction/NN/correction on/IN/on that/NNP/that. a/DT/a /NN/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] ?/./? a/DT/a key/JJ/key let/NN/let us/PRP/us count/NNP/count. key/JJ/key ?/./? a/DT/a /NN/[ j/NN/j /:/] i/PRP/i ?/./? j-1/-NONE-/j-1 these/DT/these are/VBP/are all/DT/all my/PRP$/my primitive/JJ/primitive operations/NNP/operations. i/PRP/i am/VBP/am comparing/VBG/comparing i/PRP/i with/IN/with 0/-NONE-/0 and/CC/and i/PRP/i am/VBP/am comparing/VBG/comparing a/DT/a /NN/[ i/PRP/i /VBP/] with/IN/with key/JJ/key /,/, also/RB/also i/PRP/i take/VBP/take and/CC/and /,/, so/RB/so there/RB/there are/VBP/are three/CD/three primitive/JJ/primitive operations/NNP/operations. while/IN/while i/PRP/i >/VBP/> 0/-NONE-/0 and/CC/and a/DT/a /NN/[ i/PRP/i /VBP/] >/:/> key/JJ/key each/DT/each of/IN/of the/DT/the operation/NN/operation takes/VBZ/takes a/DT/a certain/JJ/certain amount/NN/amount of/IN/of time/NN/time /,/, depending/VBG/depending upon/IN/upon the/DT/the computer/NN/computer system/NN/system you/PRP/you have/NNP/have. /,/, /,/, /,/, /,/, /,/, just/RB/just represent/VBP/represent the/DT/the amount/NN/amount of/IN/of time/NN/time taken/VBN/taken for/IN/for these/DT/these operations/NNS/operations and/CC/and they/PRP/they can/MD/can be/VB/be in/IN/in any/DT/any units/NNP/units. i/PRP/i am/VBP/am counting/VBG/counting the/DT/the number/NN/number of/IN/of times/NNS/times /,/, each/DT/each of/IN/of these/DT/these operations/NNS/operations is/VBZ/is executed/VBN/executed in/IN/in this/DT/this entire/JJ/entire program/NNP/program. why/WRB/why this/DT/this operation/NN/operation is/VBZ/is done/VBN/done n/NN/n times/NNS/times ?/./? i/PRP/i start/VBP/start by/IN/by assigning/NN/assigning j/NN/j =/:/= 2/CD/2 then/RB/then assign/JJ/assign 3/CD/3 /,/, 4,5,6,7/CD/4,5,6,7 and/CC/and go/VB/go up/RP/up to/TO/to n/NNP/n. then/RB/then when/WRB/when i/PRP/i increment/VBP/increment it/PRP/it once/RB/once and/CC/and check/VB/check that/IN/that there/EX/there is/VBZ/is one/CD/one more/RBR/more /,/, so/RB/so i/PRP/i have/VBP/have counted/VBN/counted it/PRP/it as/IN/as n/NN/n times/NNP/times. there/EX/there might/MD/might be/VB/be small/JJ/small errors/NNS/errors in/IN/in n/NN/n and/CC/and n/NN/n +/:/+ 1/CD/1 /,/, but/CC/but that/IN/that is/VBZ/is not/RB/not very/RB/very important/NNP/important. roughly/RB/roughly n/JJ/n times/NNS/times we/PRP/we need/VBP/need to/TO/to do/VB/do this/DT/this operation/NNP/operation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 34/CD/34 /CD/) how/WRB/how about/IN/about this/DT/this operation/NN/operation ?/./? key/JJ/key ?/./? a/DT/a /NN/[ j/NN/j /:/] i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do exactly/RB/exactly n-1/-NONE-/n-1 times/VBZ/times once/RB/once for/IN/for 2/CD/2 /,/, once/RB/once for3/NNP/for3 /,/, once/RB/once for/IN/for 4/CD/4 up/IN/up to/TO/to n/NNP/n. that/IN/that is/VBZ/is why/WRB/why this/DT/this operation/NN/operation is/VBZ/is being/VBG/being done/NN/done up/IN/up to/TO/to n-1/-NONE-/n-1 times/NNP/times. just/RB/just leave/VBP/leave the/DT/the comment/NN/comment statement/NNP/statement. again/RB/again the/DT/the operation/NN/operation will/MD/will be/VB/be done/VBN/done exactly/RB/exactly n-1/-NONE-/n-1 times/NNP/times. we/PRP/we have/VBP/have to/TO/to look/VB/look at/IN/at how/WRB/how many/JJ/many times/NNS/times i/PRP/i come/VBP/come to/TO/to this/DT/this statement/NNP/statement. while/IN/while i/PRP/i >/VBP/> 0/-NONE-/0 and/CC/and a/DT/a /NN/[ i/PRP/i /VBP/] >/:/> key/JJ/key /:/- counts/NNS/counts the/DT/the number/NN/number of/IN/of times/NNS/times i/PRP/i have/VBP/have to/TO/to shift/VB/shift an/DT/an element/NN/element to/TO/to the/DT/the right/NN/right /,/, when/WRB/when i/PRP/i am/VBP/am inserting/VBG/inserting the/DT/the card/NN/card in/IN/in to/TO/to my/PRP$/my hand/NNP/hand. in/IN/in the/DT/the previous/JJ/previous example/NN/example when/WRB/when i/PRP/i am/VBP/am inserting/VBG/inserting 7/CD/7 /,/, i/PRP/i had/VBD/had to/TO/to shift/VB/shift 2/CD/2 elements/NNS/elements 8/CD/8 and/CC/and 9/CD/9. is/VBZ/is going/VBG/going to/TO/to count/VB/count that/IN/that quantity/NN/quantity and/CC/and that/IN/that is/VBZ/is the/DT/the number/NN/number of/IN/of times/NNS/times i/PRP/i am/VBP/am going/VBG/going to/TO/to reach/VB/reach a/DT/a /NN/[ i/PRP/i /VBP/] part/NN/part of/IN/of my/PRP$/my while/IN/while loop/NNP/loop. while/IN/while i/PRP/i >/VBP/> 0/-NONE-/0 and/CC/and a/DT/a /NN/[ i/PRP/i /VBP/] >/:/> key/JJ/key i/PRP/i will/MD/will be/VB/be checking/VBG/checking this/DT/this condition/NN/condition for/IN/for many/JJ/many times/NNP/times. for/IN/for one/CD/one iteration/NN/iteration or/CC/or for/IN/for the/DT/the iteration/NN/iteration of/IN/of this/DT/this for/IN/for loop/NN/loop /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to reach/VB/reach this/DT/this condition/NN/condition for/IN/for times/NNP/times. the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times i/PRP/i am/VBP/am saying/VBG/saying that/IN/that condition/NN/condition is/VBZ/is the/DT/the sum/NN/sum of/IN/of as/RB/as j/NN/j goes/VBZ/goes from/IN/from 2/CD/2 to/TO/to n/NNP/n. while/IN/while i/PRP/i >/VBP/> 0/-NONE-/0 and/CC/and a/DT/a /NN/[ i/PRP/i /VBP/] >/:/> key/JJ/key do/VBP/do a/DT/a /NN/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] ?/./? a/DT/a /NN/[ i/PRP/i /VBP/] every/DT/every time/NN/time i/PRP/i see/VBP/see /:/( a/DT/a /NN/[ i/PRP/i /VBP/] >/:/> key/JJ/key /NN/) condition/NN/condition i/PRP/i also/RB/also come/VBP/come to/TO/to a/DT/a /NN/[ i/PRP/i /VBP/] /,/, because/IN/because the/DT/the last/JJ/last time/NN/time i/PRP/i see/VBP/see the/DT/the statement/NN/statement i/PRP/i would/MD/would exit/VB/exit out/RP/out of/IN/of this/DT/this condition/NNP/condition. that/IN/that is/VBZ/is why/WRB/why this/DT/this is/VBZ/is -1/-NONE-/-1 where/WRB/where j/NN/j going/VBG/going from/IN/from 2/CD/2 to/TO/to n/NNP/n. a/DT/a /NN/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] ?/./? a/DT/a key/NNP/key. this/DT/this statement/NN/statement here/RB/here is/VBZ/is not/RB/not a/DT/a part/NN/part of/IN/of the/DT/the while/NN/while loop/NN/loop rather/RB/rather it/PRP/it is/VBZ/is a/DT/a part/NN/part of/IN/of the/DT/the for/IN/for loop/NN/loop as/IN/as it/PRP/it is/VBZ/is done/VBN/done exactly/RB/exactly n-1/-NONE-/n-1 times/VBZ/times as/IN/as the/DT/the other/JJ/other statement/NNP/statement. if/IN/if you/PRP/you knew/VBD/knew about/IN/about the/DT/the constants/NNS/constants then/RB/then the/DT/the total/NN/total time/NN/time taken/VBN/taken by/IN/by the/DT/the procedure/NN/procedure can/MD/can be/VB/be computed/NNP/computed. you/PRP/you do/VBP/do not/RB/not know/VB/know what/WP/what is/NNP/is. is/VBZ/is quantity/NN/quantity which/WDT/which depends/NNS/depends upon/IN/upon your/PRP$/your instance/NN/instance and/CC/and not/RB/not problem/NNP/problem. problem/NN/problem is/VBZ/is in/IN/in the/DT/the sorting/NNP/sorting. the/DT/the instance/NN/instance is/VBZ/is a/DT/a set/NN/set or/CC/or a/DT/a sequence/NN/sequence of/IN/of numbers/NNS/numbers that/WDT/that have/VBP/have given/VBN/given to/TO/to you/NNP/you. thus/RB/thus depends/VBZ/depends upon/IN/upon the/DT/the instance/NNP/instance. let/NN/let us/PRP/us see/VBP/see the/DT/the difference/NN/difference that/IN/that makes/NNP/makes. if/IN/if the/DT/the input/NN/input was/VBD/was already/RB/already sorted/VBN/sorted /,/, then/RB/then is/VBZ/is always/RB/always 1/CD/1 /CD/( =/CD/= 1/CD/1 /CD/) /./. i/PRP/i just/RB/just have/VBP/have to/TO/to compare/VB/compare the/DT/the element/NN/element with/IN/with the/DT/the last/JJ/last element/NN/element and/CC/and if/IN/if it/PRP/it is/VBZ/is larger/JJR/larger than/IN/than the/DT/the last/JJ/last element/NN/element /,/, i/PRP/i would/MD/would not/RB/not have/VB/have to/TO/to do/VB/do anything/NNP/anything. is/VBZ/is always/RB/always a/DT/a 1/CD/1 if/IN/if the/DT/the input/NN/input is/VBZ/is already/RB/already in/IN/in increasing/VBG/increasing order/NNP/order. what/WP/what happens/VBZ/happens when/WRB/when the/DT/the input/NN/input is/VBZ/is in/IN/in decreasing/NN/decreasing order/NN/order ?/./? if/IN/if the/DT/the input/NN/input is/VBZ/is in/IN/in decreasing/NN/decreasing order/NN/order /,/, then/RB/then the/DT/the number/NN/number that/IN/that i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert is/VBZ/is going/VBG/going to/TO/to be/VB/be smaller/JJR/smaller than/IN/than all/DT/all the/DT/the numbers/NNS/numbers that/WDT/that i/PRP/i have/VBP/have sorted/VBN/sorted in/IN/in my/PRP$/my array/NNP/array. what/WP/what am/NN/am i/PRP/i going/VBG/going to/TO/to do/VB/do ?/./? i/PRP/i am/VBP/am going/VBG/going to/TO/to compare/VB/compare with/IN/with the/DT/the element/NN/element /,/, element/NN/element /,/, element/NN/element /,/, element/NN/element and/CC/and all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the element/NNP/element. when/WRB/when i/PRP/i am/VBP/am trying/VBG/trying to/TO/to insert/VB/insert the/DT/the element/NN/element /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to end/VB/end up/RP/up in/IN/in comparing/NN/comparing with/IN/with all/DT/all the/DT/the other/JJ/other j/NN/j elements/NNS/elements in/IN/in the/DT/the array/NNP/array. in/IN/in that/DT/that case/NN/case when/WRB/when is/VBZ/is equal/JJ/equal to/TO/to j/VB/j /,/, note/VB/note that/IN/that the/DT/the quantity/NN/quantity becomes/VBZ/becomes its/PRP$/its summation/NN/summation of/IN/of j/NN/j /,/, where/WRB/where j/NN/j goes/VBZ/goes from/IN/from 2/CD/2 to/TO/to n/NNP/n. it/PRP/it is/VBZ/is of/IN/of the/DT/the kind/NN/kind and/CC/and the/DT/the running/NN/running time/NN/time of/IN/of this/DT/this algorithm/NN/algorithm would/MD/would be/VB/be some/DT/some constant/JJ/constant time/NN/time plus/CC/plus some/DT/some other/JJ/other constant/NN/constant times/NNS/times n/VBP/n minus/NN/minus some/DT/some other/JJ/other constant/NNP/constant. thus/RB/thus the/DT/the behavior/NN/behavior of/IN/of this/DT/this running/NN/running time/NN/time is/VBZ/is more/RBR/more like/IN/like /./. we/PRP/we will/MD/will come/VB/come to/TO/to this/DT/this point/NN/point later/JJ/later /,/, when/WRB/when we/PRP/we talk/VBP/talk about/IN/about asymptotic/JJ/asymptotic analysis/NN/analysis but/CC/but this/DT/this is/VBZ/is what/WP/what i/PRP/i meant/VBP/meant by/IN/by /./. on/IN/on the/DT/the other/JJ/other hand/NN/hand in/IN/in the/DT/the best/JJS/best case/NN/case when/WRB/when =/:/= 1/CD/1 /,/, the/DT/the sum/NN/sum is/VBZ/is just/RB/just n/VBN/n or/CC/or n-1/-NONE-/n-1 and/CC/and in/IN/in that/DT/that case/NN/case the/DT/the total/NN/total time/NN/time is/VBZ/is n/VBN/n times/NNS/times some/DT/some constant/NN/constant plus/CC/plus n-1/-NONE-/n-1 times/VBZ/times some/DT/some constant/NN/constant minus/NN/minus some/DT/some constant/JJ/constant which/WDT/which is/VBZ/is roughly/RB/roughly n/VBN/n times/NNS/times some/DT/some constant/NNP/constant. hence/NN/hence this/DT/this is/VBZ/is called/VBN/called as/RB/as linear/JJ/linear time/NN/time algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 36/CD/36 /CD/) on/IN/on an/DT/an average/JJ/average what/WP/what would/MD/would you/PRP/you expect/VB/expect ?/./? in/IN/in the/DT/the best/JJS/best case/NN/case you/PRP/you have/VB/have to/TO/to compare/VB/compare only/RB/only against/IN/against one/CD/one element/NN/element and/CC/and in/IN/in the/DT/the worst/JJS/worst case/NN/case you/PRP/you have/VB/have to/TO/to compare/VB/compare about/IN/about j/NN/j elements/NNP/elements. in/IN/in the/DT/the average/NN/average case/NN/case it/PRP/it would/MD/would compare/VB/compare against/IN/against half/DT/half of/IN/of those/DT/those elements/NNP/elements. thus/RB/thus it/PRP/it will/MD/will compare/VB/compare with/IN/with /,/, even/RB/even when/WRB/when the/DT/the summation/NN/summation of/IN/of where/WRB/where j/NN/j goes/VBZ/goes from/IN/from 2/CD/2 to/TO/to n/VB/n /,/, this/DT/this will/MD/will be/VB/be roughly/RB/roughly by/IN/by and/CC/and it/PRP/it behaves/VBZ/behaves like/IN/like /./. this/DT/this is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by the/DT/the best/JJS/best /,/, worst/RB/worst and/CC/and average/JJ/average case/NNP/case. i/PRP/i take/VBP/take the/DT/the size/NN/size of/IN/of input/NN/input /,/, suppose/NN/suppose if/IN/if i/PRP/i am/VBP/am interested/JJ/interested in/IN/in sorting/NN/sorting n/NN/n numbers/NNS/numbers and/CC/and i/PRP/i look/VBP/look at/IN/at all/DT/all possible/JJ/possible instances/NNS/instances of/IN/of these/DT/these n/NN/n numbers/NNP/numbers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 47/CD/47 /CD/) /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 08/CD/08 /CD/) it/PRP/it may/MD/may be/VB/be infinitely/RB/infinitely many/JJ/many /,/, again/RB/again it/PRP/it is/VBZ/is not/RB/not clear/JJ/clear about/IN/about how/WRB/how to/TO/to do/VB/do that/NNP/that. what/WP/what is/VBZ/is worst/VBN/worst case/NN/case ?/./? the/DT/the worst/JJS/worst case/NN/case is/VBZ/is defined/VBN/defined as/RB/as the/DT/the maximum/NN/maximum possible/JJ/possible time/NN/time that/WDT/that your/PRP$/your algorithm/NN/algorithm would/MD/would take/VB/take for/IN/for any/DT/any instance/NN/instance of/IN/of that/DT/that size/NNP/size. in/IN/in the/DT/the slide/NN/slide 27/CD/27 /:/: 08/CD/08 /,/, all/DT/all the/DT/the instances/NNS/instances are/VBP/are of/IN/of the/DT/the same/JJ/same size/NNP/size. the/DT/the best/JJS/best case/NN/case would/MD/would be/VB/be the/DT/the smallest/JJS/smallest time/NN/time that/WDT/that your/PRP$/your algorithm/NN/algorithm takes/VBZ/takes and/CC/and the/DT/the average/JJ/average would/MD/would be/VB/be the/DT/the average/JJ/average of/IN/of all/DT/all infinite/JJ/infinite bars/NNP/bars. that/IN/that was/VBD/was for/IN/for the/DT/the input/NN/input for/IN/for 1size/CD/1size of/IN/of size/NN/size n/NN/n /,/, that/IN/that would/MD/would give/VB/give the/DT/the values/NNS/values /,/, from/IN/from that/DT/that we/PRP/we can/MD/can compute/VB/compute worst/JJ/worst case/NN/case /,/, best/JJS/best case/NN/case and/CC/and the/DT/the average/JJ/average case/NNP/case. if/IN/if i/PRP/i would/MD/would consider/VB/consider inputs/NNS/inputs of/IN/of all/DT/all sizes/NNS/sizes then/RB/then i/PRP/i can/MD/can create/VB/create a/DT/a plot/NN/plot for/IN/for each/DT/each inputs/NNS/inputs size/VBP/size and/CC/and i/PRP/i could/MD/could figure/VB/figure out/RP/out the/DT/the worst/JJS/worst case/NN/case /,/, best/JJS/best case/NN/case and/CC/and an/DT/an average/JJ/average case/NNP/case. then/RB/then i/PRP/i would/MD/would get/VB/get such/JJ/such a/DT/a monotonically/RB/monotonically increasing/VBG/increasing plots/NNP/plots. it/PRP/it is/VBZ/is clear/JJ/clear that/IN/that as/IN/as the/DT/the size/NN/size of/IN/of the/DT/the input/NN/input increases/NNS/increases /,/, the/DT/the time/NN/time taken/VBN/taken by/IN/by your/PRP$/your algorithm/NN/algorithm will/MD/will increase/NNP/increase. thus/RB/thus when/WRB/when the/DT/the input/NN/input size/NN/size becomes/VBZ/becomes larger/JJR/larger /,/, it/PRP/it will/MD/will not/RB/not take/VB/take lesser/NN/lesser time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 18/CD/18 /CD/) which/WDT/which of/IN/of this/DT/this is/VBZ/is the/DT/the easiest/JJS/easiest to/TO/to work/VB/work with/IN/with ?/./? worst/JJ/worst case/NN/case is/VBZ/is the/DT/the one/CD/one we/PRP/we will/MD/will use/VB/use the/DT/the most/NNP/most. for/IN/for the/DT/the purpose/NN/purpose of/IN/of this/DT/this course/NN/course this/DT/this is/VBZ/is the/DT/the only/JJ/only measure/NN/measure we/PRP/we will/MD/will be/VB/be working/VBG/working with/NNP/with. why/WRB/why is/VBZ/is the/DT/the worst/JJS/worst case/NN/case used/VBD/used often/RB/often ?/./? first/JJ/first it/PRP/it provides/VBZ/provides an/DT/an upper/JJ/upper bound/NN/bound and/CC/and it/PRP/it tells/VBZ/tells you/PRP/you how/WRB/how long/JJ/long your/PRP$/your algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to take/VB/take in/IN/in the/DT/the worst/JJS/worst case/NNP/case. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 50/CD/50 /CD/) for/IN/for some/DT/some algorithms/NNS/algorithms worst/VBP/worst case/NN/case occurs/NNS/occurs fairly/RB/fairly often/NNP/often. for/IN/for many/JJ/many instances/NNS/instances the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm is/VBZ/is close/JJ/close to/TO/to the/DT/the worst/JJS/worst case/NNP/case. average/NN/average case/NN/case essentially/RB/essentially becomes/VBZ/becomes as/IN/as bad/JJ/bad as/IN/as the/DT/the worst/JJS/worst case/NNP/case. in/IN/in the/DT/the previous/JJ/previous example/NN/example that/WDT/that we/PRP/we saw/VBD/saw /,/, the/DT/the average/JJ/average case/NN/case and/CC/and the/DT/the worst/JJS/worst case/NN/case were/VBD/were /./. there/RB/there were/VBD/were differences/NNS/differences in/IN/in the/DT/the constant/NN/constant but/CC/but it/PRP/it was/VBD/was roughly/RB/roughly the/DT/the same/NNP/same. the/DT/the average/JJ/average case/NN/case might/MD/might be/VB/be very/RB/very difficult/JJ/difficult to/TO/to compute/VB/compute /,/, because/IN/because you/PRP/you should/MD/should look/VB/look at/IN/at all/DT/all possible/JJ/possible instances/NNS/instances and/CC/and then/RB/then take/VB/take some/DT/some kind/NN/kind of/IN/of an/DT/an average/NNP/average. or/CC/or you/PRP/you have/VBP/have to/TO/to say/VB/say like/IN/like /,/, when/WRB/when my/PRP$/my input/NN/input instance/NN/instance is/VBZ/is drawn/VBN/drawn from/IN/from a/DT/a certain/JJ/certain distribution/NN/distribution and/CC/and the/DT/the expected/VBN/expected time/NN/time my/PRP$/my algorithm/NN/algorithm will/MD/will take/VB/take is/VBZ/is typically/RB/typically a/DT/a much/RB/much harder/JJR/harder quantity/NN/quantity to/TO/to work/VB/work and/CC/and to/TO/to compute/VB/compute with/NNP/with. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 36/CD/36 /CD/) the/DT/the worst/JJS/worst case/NN/case is/VBZ/is the/DT/the measure/NN/measure of/IN/of interest/NN/interest in/IN/in which/WDT/which we/PRP/we will/MD/will be/VB/be working/VBG/working with/NNP/with. asymptotic/JJ/asymptotic analysis/NN/analysis is/VBZ/is the/DT/the kind/NN/kind of/IN/of thing/NN/thing that/WDT/that we/PRP/we have/VBP/have been/VBN/been doing/VBG/doing so/RB/so far/RB/far as/IN/as n/NN/n and/CC/and and/CC/and the/DT/the goal/NN/goal of/IN/of this/DT/this is/VBZ/is to/TO/to analyze/VB/analyze the/DT/the running/NN/running time/NN/time while/IN/while getting/VBG/getting rid/NN/rid of/IN/of superficial/JJ/superficial details/NNP/details. we/PRP/we would/MD/would like/VB/like to/TO/to say/VB/say that/IN/that an/DT/an algorithm/NN/algorithm /,/, which/WDT/which has/VBZ/has the/DT/the running/VBG/running time/NN/time of/IN/of some/DT/some constant/JJ/constant times/NNS/times squared/VBN/squared is/VBZ/is the/DT/the same/JJ/same as/IN/as an/DT/an algorithm/NN/algorithm which/WDT/which has/VBZ/has a/DT/a running/NN/running time/NN/time of/IN/of some/DT/some other/JJ/other constant/NN/constant times/NNS/times ,because/VBP/,because this/DT/this constant/NN/constant is/VBZ/is typically/RB/typically something/NN/something which/WDT/which would/MD/would be/VB/be dependent/JJ/dependent upon/IN/upon the/DT/the hardware/NN/hardware that/IN/that your/PRP$/your using/NNP/using. =/NNP/= in/IN/in the/DT/the previous/JJ/previous example/NN/example /,/, and/CC/and would/MD/would depend/VB/depend upon/IN/upon the/DT/the computer/NN/computer system/NN/system /,/, the/DT/the hardware/NN/hardware /,/, the/DT/the compiler/NN/compiler and/CC/and many/JJ/many factors/NNP/factors. we/PRP/we are/VBP/are not/RB/not interested/JJ/interested to/TO/to distinguish/VB/distinguish between/IN/between such/JJ/such algorithms/NNP/algorithms. both/DT/both of/IN/of these/DT/these algorithms/NNS/algorithms /,/, one/CD/one which/WDT/which has/VBZ/has the/DT/the running/VBG/running time/NN/time of/IN/of and/CC/and another/DT/another with/IN/with running/VBG/running time/NN/time have/VBP/have a/DT/a quadratic/JJ/quadratic behavior/NNP/behavior. when/WRB/when the/DT/the input/NN/input size/NN/size doubles/NNS/doubles the/DT/the running/VBG/running time/NN/time of/IN/of both/DT/both of/IN/of the/DT/the algorithm/NN/algorithm increases/NNS/increases four/CD/four fold/NNP/fold. that/WDT/that is/VBZ/is the/DT/the thing/NN/thing which/WDT/which is/VBZ/is of/IN/of interest/NN/interest to/TO/to us/NNP/us. we/PRP/we are/VBP/are interested/JJ/interested in/IN/in capturing/NN/capturing how/WRB/how the/DT/the running/VBG/running time/NN/time of/IN/of algorithm/NN/algorithm increases/NNS/increases /,/, with/IN/with the/DT/the size/NN/size of/IN/of the/DT/the input/NN/input in/IN/in the/DT/the limit/NNP/limit. this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial point/NN/point here/RB/here and/CC/and the/DT/the asymptotic/JJ/asymptotic analysis/NN/analysis clearly/RB/clearly explains/VBZ/explains about/IN/about how/WRB/how the/DT/the running/VBG/running time/NN/time of/IN/of this/DT/this algorithm/NN/algorithm increases/VBZ/increases with/IN/with increase/NN/increase in/IN/in input/NN/input size/NN/size within/IN/within the/DT/the limit/NNP/limit. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 20/CD/20 /CD/) let/NN/let us/PRP/us see/VBP/see about/IN/about the/DT/the ?/./? big-oh/JJ/big-oh ?/./? o-notation/NNP/o-notation. if/IN/if i/PRP/i have/VBP/have functions/NNS/functions /,/, g/NN/g /:/( n/NN/n /:/) and/CC/and n/NN/n represents/NNS/represents the/DT/the input/NN/input size/NNP/size. f/NN/f /:/( n/NN/n /:/) measures/NNS/measures the/DT/the time/NN/time taken/VBN/taken by/IN/by that/DT/that algorithm/NNP/algorithm. f/NN/f /:/( n/NN/n /:/) and/CC/and g/NN/g /:/( n/NN/n /:/) are/VBP/are non-negative/JJ/non-negative functions/NNS/functions and/CC/and also/RB/also non-decreasing/JJ/non-decreasing /,/, because/IN/because as/IN/as the/DT/the input/NN/input size/NN/size increases/NNS/increases /,/, the/DT/the running/NN/running time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm would/MD/would also/RB/also increase/NNP/increase. both/DT/both of/IN/of these/DT/these are/VBP/are non-decreasing/JJ/non-decreasing functions/NNS/functions of/IN/of n/NN/n and/CC/and we/PRP/we say/VBP/say that/IN/that f/NN/f /:/( n/NN/n /:/) is/VBZ/is o/RB/o /:/( g/NN/g /:/( n/NN/n /:/) /:/) /,/, if/IN/if there/EX/there exist/VBP/exist constants/NNS/constants c/NN/c and/CC/and /,/, such/JJ/such that/IN/that f/NN/f /:/( n/NN/n /:/) c/NN/c times/NNS/times of/IN/of g/NN/g /:/( n/NN/n /:/) /./. f/NN/f /:/( n/NN/n /:/) =/:/= o/NN/o /:/( g/NN/g /:/( n/NN/n /:/) f/NN/f /:/( n/NN/n /:/) c/NN/c g/NN/g /:/( n/NN/n /:/) for/IN/for n/NN/n what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? i/PRP/i have/VBP/have drawn/VBN/drawn two/CD/two functions/NNP/functions. the/DT/the function/NN/function in/IN/in red/JJ/red is/VBZ/is f/NN/f /:/( n/NN/n /:/) and/CC/and g/NN/g /:/( n/NN/n /:/) is/VBZ/is some/DT/some other/JJ/other function/NNP/function. the/DT/the function/NN/function in/IN/in green/JJ/green is/VBZ/is some/DT/some constant/JJ/constant times/NNS/times of/IN/of g/NN/g /:/( n/NN/n /:/) /./. as/IN/as you/PRP/you can/MD/can see/VB/see beyond/IN/beyond the/DT/the point/NN/point /,/, c/NN/c /:/( g/NN/g /:/( n/NN/n /:/) /:/) is/VBZ/is always/RB/always larger/JJR/larger than/IN/than that/DT/that of/IN/of f/NN/f /:/( n/NN/n /:/) /./. this/DT/this is/VBZ/is the/DT/the way/NN/way it/PRP/it continues/VBZ/continues even/RB/even beyond/NNP/beyond. then/RB/then we/PRP/we would/MD/would say/VB/say that/IN/that f/NN/f /:/( n/NN/n /:/) is/VBZ/is o/RB/o /:/( g/NN/g /:/( n/NN/n /:/) or/CC/or f/NN/f /:/( n/NN/n /:/) is/VBZ/is order/NN/order /:/( g/NN/g /:/( n/NN/n /:/) /:/) /./. f/NN/f /:/( n/NN/n /:/) =/:/= o/NN/o /:/( g/NN/g /:/( n/NN/n /:/) /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 56/CD/56 /CD/) few/JJ/few examples/NNS/examples would/MD/would clarify/VB/clarify this/DT/this and/CC/and we/PRP/we will/MD/will see/VB/see those/DT/those examples/NNP/examples. the/DT/the function/NN/function f/NN/f /:/( n/NN/n /:/) =/:/= 2n/CD/2n +/CD/+ 6/CD/6 and/CC/and g/NN/g /:/( n/NN/n /:/) =/:/= n/NNP/n. if/IN/if you/PRP/you look/VBP/look at/IN/at these/DT/these two/CD/two functions/NNS/functions 2n/CD/2n +/CD/+ 6/CD/6 is/VBZ/is always/RB/always larger/JJR/larger than/IN/than n/NN/n and/CC/and you/PRP/you might/MD/might be/VB/be wondering/VBG/wondering why/WRB/why this/DT/this 2n/JJ/2n +/NN/+ 6/CD/6 is/VBZ/is a/DT/a non-linear/JJ/non-linear function/NNP/function. that/IN/that is/VBZ/is because/IN/because the/DT/the scale/NN/scale here/RB/here is/VBZ/is an/DT/an exponential/JJ/exponential scale/NNP/scale. the/DT/the scale/NN/scale increases/NNS/increases by/IN/by 2/CD/2 on/IN/on y-axis/NNP/y-axis and/CC/and similarly/RB/similarly on/IN/on x-axis/NNP/x-axis. the/DT/the red/NN/red colored/VBD/colored line/NN/line is/VBZ/is n/VBN/n and/CC/and the/DT/the blue/JJ/blue line/NN/line is/VBZ/is 2n/CD/2n and/CC/and the/DT/the above/NN/above next/IN/next line/NN/line is/VBZ/is 4n/CD/4n. as/IN/as you/PRP/you can/MD/can see/VB/see beyond/IN/beyond the/DT/the dotted/VBN/dotted line/NN/line f/NN/f /:/( n/NN/n /:/) is/VBZ/is less/JJR/less than/IN/than 4/CD/4 times/NNS/times of/IN/of n/NNP/n. hence/NN/hence the/DT/the constant/NN/constant c/NN/c is/VBZ/is 4/CD/4 and/CC/and would/MD/would be/VB/be this/DT/this point/NN/point of/IN/of crossing/VBG/crossing beyond/IN/beyond which/WDT/which 4n/CD/4n becomes/VBZ/becomes larger/JJR/larger than/IN/than 2n/CD/2n +/CD/+ 6/CD/6. at/IN/at what/WP/what point/NN/point does/VBZ/does 4n/CD/4n becomes/NNS/becomes larger/JJR/larger than/IN/than 2n/CD/2n +/CD/+ 6/CD/6. it/PRP/it is/VBZ/is three/NNP/three. so/RB/so becomes/VBZ/becomes three/NNP/three. then/RB/then we/PRP/we say/VBP/say that/IN/that f/NN/f /:/( n/NN/n /:/) which/WDT/which is/VBZ/is 2n/CD/2n +/CD/+ 6/CD/6 is/VBZ/is o/RB/o /:/( n/NN/n /:/) /./. 2n/CD/2n +/CD/+ 6/CD/6 =/CD/= o/NN/o /:/( n/NN/n /:/) let/NN/let us/PRP/us look/VBP/look at/IN/at another/DT/another example/NNP/example. the/DT/the function/NN/function in/IN/in red/JJ/red is/VBZ/is g/JJ/g /NN/( n/NN/n /:/) which/WDT/which is/VBZ/is n/VBN/n and/CC/and any/DT/any constant/NN/constant time/NN/time g/NN/g /:/( n/NN/n /:/) which/WDT/which is/VBZ/is as/RB/as same/JJ/same scale/NN/scale as/IN/as in/IN/in the/DT/the previous/JJ/previous slide/NNP/slide. any/DT/any constant/NN/constant time/NN/time g/NN/g /:/( n/NN/n /:/) will/MD/will be/VB/be just/RB/just the/DT/the same/JJ/same straight/NN/straight line/NN/line displaced/VBD/displaced by/IN/by suitable/JJ/suitable amount/NNP/amount. the/DT/the green/JJ/green line/NN/line will/MD/will be/VB/be 4/CD/4 times/NNS/times n/VBP/n and/CC/and it/PRP/it depends/VBZ/depends upon/IN/upon the/DT/the intercept/NN/intercept /,/, but/CC/but you/PRP/you ?/./? re/NN/re would/MD/would be/VB/be like/IN/like the/DT/the line/NN/line which/WDT/which is/VBZ/is blue/JJ/blue in/IN/in color/NNP/color. so/RB/so there/RB/there is/VBZ/is no/DT/no constant/NN/constant c/NN/c such/JJ/such that/IN/that </CD/< c/NN/c /:/( n/NN/n /:/) /./. can/MD/can you/PRP/you find/VB/find out/RP/out a/DT/a constant/JJ/constant c/NN/c so/IN/so that/IN/that </CD/< c/NN/c /:/( n/NN/n /:/) for/IN/for n/NN/n more/JJR/more than/IN/than /./. we/PRP/we can/MD/can not/RB/not find/VB/find it/NNP/it. any/DT/any constant/NN/constant that/IN/that you/PRP/you choose/VBP/choose /,/, i/PRP/i can/MD/can pick/VB/pick a/DT/a larger/JJR/larger n/NN/n such/JJ/such that/IN/that this/DT/this is/VBZ/is violated/VBN/violated and/CC/and so/RB/so it/PRP/it is/VBZ/is not/RB/not the/DT/the case/NN/case that/IN/that is/VBZ/is o/RB/o /:/( n/NN/n /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 55/CD/55 /CD/) how/WRB/how does/VBZ/does one/CD/one figure/NN/figure out/IN/out these/DT/these things/NNS/things ?/./? this/DT/this is/VBZ/is the/DT/the very/JJ/very simple/NN/simple rule/NNP/rule. suppose/NN/suppose this/DT/this is/VBZ/is my/PRP$/my function/NN/function 50/CD/50 n/NN/n log/NN/log n/NN/n /,/, i/PRP/i just/RB/just drop/NN/drop all/DT/all constants/NNS/constants and/CC/and the/DT/the lower/JJR/lower order/NN/order terms/NNP/terms. forget/NN/forget the/DT/the constant/NN/constant 50/CD/50 and/CC/and i/PRP/i get/VBP/get n/RB/n log/JJ/log n/NNP/n. this/DT/this function/NN/function 50/CD/50 n/NN/n log/NN/log n/NN/n is/VBZ/is o/RB/o /:/( n/NN/n log/NN/log n/NN/n /:/) /./. in/IN/in the/DT/the function/NN/function 7n-3/CD/7n-3 /,/, i/PRP/i drop/VBP/drop the/DT/the constant/JJ/constant and/CC/and lower/JJR/lower order/NN/order terms/NNS/terms /,/, i/PRP/i get/VBP/get 7n-3/CD/7n-3 as/IN/as o/NN/o /:/( n/NN/n /:/) /./. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 01/CD/01 /CD/) i/PRP/i have/VBP/have some/DT/some complicated/JJ/complicated function/NN/function like/IN/like 8/CD/8 log/JJ/log n/NN/n +/:/+ 5/CD/5 +/CD/+ n/NN/n in/IN/in which/WDT/which i/PRP/i just/RB/just drop/NN/drop all/DT/all lower/JJR/lower order/NN/order terms/NNP/terms. this/DT/this is/VBZ/is the/DT/the fastest/JJS/fastest growing/VBG/growing term/NN/term because/IN/because this/DT/this has/VBZ/has as/IN/as well/RB/well as/IN/as log/NN/log n/NN/n in/IN/in it/NNP/it. i/PRP/i just/RB/just drop/NN/drop /,/, n/NN/n term/NN/term and/CC/and also/RB/also i/PRP/i drop/VBP/drop my/PRP$/my constant/NN/constant and/CC/and get/VB/get log/NN/log n/NNP/n. this/DT/this function/NN/function is/VBZ/is o/RB/o /:/( log/NN/log n/NN/n /:/) /./. in/IN/in the/DT/the limit/NN/limit this/DT/this quantity/NN/quantity /:/( 8/CD/8 log/NN/log n/NN/n +/:/+ 5/CD/5 +/CD/+ n/NN/n /:/) will/MD/will be/VB/be less/RBR/less than/IN/than some/DT/some constant/JJ/constant times/NNS/times this/DT/this quantity/NN/quantity /:/( o/NN/o /:/( log/NN/log n/NN/n /:/) /:/) /./. you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what should/MD/should be/VB/be the/DT/the value/NN/value of/IN/of c/NN/c and/CC/and /,/, for/IN/for that/DT/that to/TO/to happen/NNP/happen. this/DT/this is/VBZ/is a/DT/a common/JJ/common error/NNP/error. the/DT/the function/NN/function 50/CD/50 n/NN/n log/NN/log n/NN/n is/VBZ/is also/RB/also o/RB/o /:/( /:/) /./. whether/IN/whether it/PRP/it is/VBZ/is yes/VBZ/yes or/CC/or no/NNP/no. it/PRP/it is/VBZ/is yes/VBZ/yes /,/, because/IN/because this/DT/this quantity/NN/quantity /:/( 50/CD/50 n/NN/n log/NN/log n/NN/n /:/) in/IN/in fact/NN/fact is/VBZ/is 50/CD/50 times/NNS/times always/RB/always /,/, for/IN/for all/PDT/all n/NN/n and/CC/and that/IN/that is/VBZ/is just/RB/just a/DT/a constant/JJ/constant so/RB/so this/DT/this is/VBZ/is o/RB/o /:/( /:/) /./. but/CC/but when/WRB/when we/PRP/we use/VBP/use the/DT/the o-notation/NN/o-notation we/PRP/we try/VBP/try and/CC/and provide/VB/provide as/IN/as strong/JJ/strong amount/NN/amount as/IN/as possible/JJ/possible instead/NN/instead of/IN/of saying/VBG/saying this/DT/this statement/NN/statement is/VBZ/is true/JJ/true we/PRP/we will/MD/will rather/RB/rather call/VB/call this/DT/this as/IN/as o/NN/o /:/( n/NN/n log/NN/log n/NN/n /:/) /:/) /./. we/PRP/we will/MD/will see/VB/see more/RBR/more of/IN/of this/DT/this in/IN/in subsequent/NN/subsequent slides/NNP/slides. how/WRB/how are/VBP/are we/PRP/we going/VBG/going to/TO/to use/VB/use the/DT/the o-notation/NN/o-notation ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to express/NN/express the/DT/the number/NN/number of/IN/of primitive/JJ/primitive operations/NNS/operations that/WDT/that are/VBP/are executed/VBN/executed during/IN/during run/VBN/run of/IN/of the/DT/the program/NN/program as/IN/as a/DT/a function/NN/function of/IN/of the/DT/the input/NN/input size/NNP/size. we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use o-notation/NN/o-notation for/IN/for that/NNP/that. if/IN/if i/PRP/i have/VBP/have an/DT/an algorithm/NN/algorithm which/WDT/which takes/VBZ/takes the/DT/the number/NN/number of/IN/of primitive/JJ/primitive operations/NNS/operations as/IN/as o/NN/o /:/( n/NN/n /:/) and/CC/and some/DT/some other/JJ/other algorithm/NN/algorithm for/IN/for which/WDT/which the/DT/the number/NN/number of/IN/of primitive/JJ/primitive operations/NNS/operations is/VBZ/is o/IN/o /CD/( /CD/) /./. then/RB/then clearly/RB/clearly the/DT/the first/JJ/first algorithm/NN/algorithm is/VBZ/is better/RBR/better than/IN/than the/DT/the second/NNP/second. why/WRB/why because/IN/because as/IN/as the/DT/the input/NN/input size/NN/size doubles/NNS/doubles then/RB/then the/DT/the running/NN/running time/NN/time of/IN/of the/DT/the algorithm/NN/algorithm is/VBZ/is also/RB/also going/VBG/going to/TO/to double/JJ/double /,/, while/IN/while the/DT/the running/NN/running time/NN/time of/IN/of o/NN/o /:/( /:/) algorithm/NN/algorithm will/MD/will increase/VB/increase four/CD/four fold/NNP/fold. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 10/CD/10 /CD/) similarly/RB/similarly our/PRP$/our algorithm/NN/algorithm which/WDT/which has/VBZ/has the/DT/the running/VBG/running time/NN/time of/IN/of o/NN/o /:/( log/NN/log n/NN/n /:/) is/VBZ/is better/JJR/better than/IN/than the/DT/the one/CD/one which/WDT/which has/VBZ/has running/VBG/running time/NN/time of/IN/of o/NN/o /:/( n/NN/n /:/) /./. thus/RB/thus we/PRP/we have/VBP/have a/DT/a hierarchy/JJ/hierarchy of/IN/of functions/NNS/functions in/IN/in the/DT/the order/NN/order of/IN/of log/NN/log n/NN/n /,/, n/NN/n /,/, /,/, /,/, /./. there/EX/there is/VBZ/is a/DT/a word/NN/word of/IN/of caution/NN/caution here/NNP/here. you/PRP/you might/MD/might have/VB/have an/DT/an algorithm/NN/algorithm whose/WP$/whose running/VBG/running time/NN/time is/VBZ/is 1,000,000/CD/1,000,000 n/NN/n /,/, because/IN/because you/PRP/you may/MD/may be/VB/be doing/VBG/doing some/DT/some other/JJ/other operations/NNP/operations. i/PRP/i can/MD/can not/RB/not see/VB/see how/WRB/how you/PRP/you would/MD/would create/VB/create such/JJ/such an/DT/an algorithm/NN/algorithm /,/, but/CC/but you/PRP/you might/MD/might have/VB/have an/DT/an algorithm/NN/algorithm of/IN/of this/DT/this running/NN/running time/NNP/time. 1,000,000n/CD/1,000,000n is/VBZ/is o/RB/o /:/( n/NN/n /:/) /,/, because/IN/because this/DT/this is/VBZ/is some/DT/some constant/JJ/constant time/NN/time n/NN/n and/CC/and you/PRP/you might/MD/might have/VB/have some/DT/some other/JJ/other algorithm/NN/algorithm with/IN/with the/DT/the running/VBG/running time/NN/time of/IN/of 2/CD/2 /./. hence/NN/hence from/IN/from what/WP/what i/PRP/i said/VBD/said before/IN/before /,/, you/PRP/you would/MD/would say/VB/say that/IN/that 1,000,000/CD/1,000,000 n/NN/n algorithm/NN/algorithm is/VBZ/is better/RBR/better than/IN/than 2/CD/2 /./. the/DT/the one/CD/one with/IN/with the/DT/the linear/JJ/linear running/NN/running time/NN/time which/WDT/which is/VBZ/is o/RB/o /:/( n/NN/n /:/) running/VBG/running time/NN/time is/VBZ/is better/RBR/better than/IN/than o/NN/o /:/( /:/) /./. it/PRP/it is/VBZ/is true/JJ/true but/CC/but in/IN/in the/DT/the limit/NN/limit and/CC/and the/DT/the limit/NN/limit is/VBZ/is achieved/VBN/achieved very/RB/very late/JJ/late when/WRB/when n/NN/n is/VBZ/is really/RB/really large/NNP/large. for/IN/for small/JJ/small instances/NNS/instances this/DT/this 2/CD/2 might/MD/might actually/RB/actually take/VB/take less/JJR/less amount/NN/amount of/IN/of time/NN/time than/IN/than your/PRP$/your 1,000,000/CD/1,000,000 n/NNP/n. you/PRP/you have/VBP/have to/TO/to be/VB/be careful/JJ/careful about/IN/about the/DT/the constants/NNS/constants also/NNP/also. we/PRP/we will/MD/will do/VB/do some/DT/some examples/NNS/examples of/IN/of asymptotic/JJ/asymptotic analysis/NNP/analysis. i/PRP/i have/VBP/have a/DT/a pseudo/NN/pseudo code/NN/code and/CC/and i/PRP/i have/VBP/have an/DT/an array/NN/array of/IN/of n/NN/n numbers/NNS/numbers sitting/VBG/sitting in/IN/in an/DT/an array/NN/array called/VBN/called x/NN/x and/CC/and i/PRP/i have/VBP/have to/TO/to output/VB/output an/DT/an array/NN/array a/DT/a /,/, in/IN/in which/WDT/which the/DT/the element/NN/element a/DT/a /NN/[ i/PRP/i /VBP/] is/VBZ/is the/DT/the average/JJ/average of/IN/of the/DT/the numbers/NNS/numbers x/VBP/x /:/[ 0/-NONE-/0 /:/] through/IN/through x/NN/x /:/[ i/PRP/i /VBP/] /./. one/CD/one way/NN/way of/IN/of doing/VBG/doing it/PRP/it is/VBZ/is /,/, i/PRP/i basically/RB/basically have/VBP/have a/DT/a for/IN/for loop/NN/loop in/IN/in which/WDT/which i/PRP/i compute/VBP/compute each/DT/each element/NN/element of/IN/of the/DT/the array/NN/array a/NNP/a. to/TO/to compute/VB/compute a/DT/a /NN/[ 10/CD/10 /CD/] /,/, i/PRP/i just/RB/just have/VBP/have to/TO/to sum/VB/sum up/RP/up x/NN/x /:/[ 0/-NONE-/0 /:/] through/IN/through x/NN/x /:/[ 10/CD/10 /CD/] /,/, which/WDT/which i/PRP/i am/VBP/am doing/VBG/doing here/NNP/here. for/IN/for j/NN/j ?/./? 0/-NONE-/0 to/TO/to i/PRP/i do/VBP/do a/DT/a ?/./? a/DT/a +/NN/+ x/NN/x /:/[ j/NN/j /:/] a/DT/a /NN/[ i/PRP/i /VBP/] ?/./? a//-NONE-/a/ /:/( i/PRP/i +/VBP/+ 1/CD/1 /CD/) to/TO/to compute/VB/compute a/DT/a /NN/[ 10/CD/10 /CD/] /,/, i/PRP/i is/VBZ/is taking/VBG/taking the/DT/the value/NN/value 10/CD/10 and/CC/and i/PRP/i am/VBP/am running/VBG/running the/DT/the index/NN/index j/NN/j from/IN/from 0-10/CD/0-10. i/PRP/i am/VBP/am summing/VBG/summing up/RP/up the/DT/the value/NN/value of/IN/of x/NN/x from/IN/from x/NN/x /:/[ 0/-NONE-/0 /:/] /:/- x/NN/x /:/[ 10/CD/10 /CD/] in/IN/in this/DT/this accumulator/NN/accumulator a/DT/a and/CC/and then/RB/then i/PRP/i am/VBP/am eventually/RB/eventually dividing/VBG/dividing the/DT/the value/NN/value of/IN/of this/DT/this accumulator/NN/accumulator with/IN/with 11/CD/11 /,/, because/IN/because it/PRP/it is/VBZ/is from/IN/from x/NN/x /:/[ 0/-NONE-/0 /:/] to/TO/to x/VB/x /:/[ 10/CD/10 /CD/] /./. that/IN/that gives/VBZ/gives me/PRP/me the/DT/the number/NN/number i/PRP/i should/MD/should have/VB/have in/IN/in a/DT/a /NN/[ 10/CD/10 /CD/] /./. i/PRP/i am/VBP/am going/VBG/going to/TO/to repeat/VB/repeat this/DT/this for/IN/for 11,12,13,14/CD/11,12,13,14 and/CC/and for/IN/for all/DT/all the/DT/the elements/NNP/elements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41.34/CD/41.34 /CD/) it/PRP/it is/VBZ/is an/DT/an algorithm/NN/algorithm and/CC/and let/VB/let us/PRP/us compute/VB/compute the/DT/the running/NN/running time/NNP/time. this/DT/this is/VBZ/is one/CD/one step/NNP/step. it/PRP/it is/VBZ/is executed/VBN/executed for/IN/for i/PRP/i number/NN/number of/IN/of times/NNS/times and/CC/and initially/RB/initially i/PRP/i take/VBP/take a/DT/a value/NN/value from/IN/from 0,1,2,3/CD/0,1,2,3 and/CC/and all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to n-1/NNP/n-1. this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is done/VBN/done n/NN/n times/NNP/times. this/DT/this gives/VBZ/gives you/PRP/you the/DT/the total/JJ/total running/NN/running time/NN/time of/IN/of roughly/RB/roughly /./. a/DT/a ?/./? a/DT/a +/NN/+ x/NN/x /:/[ j/NN/j /:/] this/DT/this one/CD/one step/NN/step is/VBZ/is getting/VBG/getting executed/VBN/executed times/NNS/times and/CC/and this/DT/this is/VBZ/is the/DT/the dominant/JJ/dominant thing/NNP/thing. how/WRB/how many/JJ/many times/NNS/times the/DT/the steps/NNS/steps given/VBN/given below/IN/below are/VBP/are executed/VBN/executed ?/./? a/DT/a /NN/[ i/PRP/i /VBP/] ?/./? a//-NONE-/a/ /:/( j/NN/j +/:/+ 1/CD/1 /CD/) a/DT/a ?/./? 0/-NONE-/0 these/DT/these steps/NNS/steps are/VBP/are executed/VBN/executed for/IN/for n/NN/n times/NNP/times. a/DT/a ?/./? a/DT/a +/NN/+ x/NN/x /:/[ j/NN/j /:/] but/CC/but the/DT/the step/NN/step mentioned/VBD/mentioned above/IN/above is/VBZ/is getting/VBG/getting executed/VBN/executed roughly/RB/roughly for/IN/for some/DT/some constant/JJ/constant times/NNP/times. thus/RB/thus the/DT/the running/VBG/running time/NN/time of/IN/of the/DT/the algorithm/NN/algorithm is/VBZ/is o/RB/o /:/( /:/) /./. it/PRP/it is/VBZ/is a/DT/a very/RB/very simple/JJ/simple problem/NN/problem but/CC/but you/PRP/you can/MD/can have/VB/have a/DT/a better/JJR/better solution/NNP/solution. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 19/CD/19 /CD/) what/WP/what is/VBZ/is a/DT/a better/JJR/better solution/NN/solution ?/./? we/PRP/we will/MD/will have/VB/have a/DT/a variable/JJ/variable s/NNS/s in/IN/in which/WDT/which we/PRP/we would/MD/would keep/VB/keep accumulating/VBG/accumulating the/DT/the x/NN/x /:/[ i/PRP/i /VBP/] /./. initially/RB/initially s/VBZ/s =/:/= 0/CD/0. when/WRB/when i/PRP/i compute/VBP/compute a/DT/a /NN/[ i/PRP/i /VBP/] /,/, which/WDT/which i/PRP/i already/RB/already have/VBP/have in/IN/in s/NNS/s /,/, x/NN/x /:/[ 0/-NONE-/0 /:/] through/IN/through x/NN/x /:/[ i-1/-NONE-/i-1 /:/] because/IN/because they/PRP/they used/VBD/used that/IN/that at/IN/at the/DT/the last/JJ/last step/NNP/step. that/IN/that is/VBZ/is the/DT/the problem/NN/problem here/NNP/here. a/DT/a ?/./? a/DT/a +/NN/+ x/NN/x /:/[ j/NN/j /:/] every/DT/every time/NN/time we/PRP/we are/VBP/are computing/VBG/computing x/NNP/x. first/RB/first we/PRP/we are/VBP/are computing/VBG/computing x/NN/x /:/[ 0/-NONE-/0 /:/] +/:/+ x/NN/x /:/[ 1/CD/1 /CD/] /,/, then/RB/then we/PRP/we are/VBP/are computing/VBG/computing x/NN/x /:/[ 0/-NONE-/0 /:/] +/:/+ x/NN/x /:/[ 1/CD/1 /CD/] +/CD/+ x/NN/x /:/[ 2/CD/2 /CD/] and/CC/and goes/VBZ/goes on/NNP/on. it/PRP/it is/VBZ/is a/DT/a kind/NN/kind of/IN/of repeating/NN/repeating computations/NNP/computations. why/WRB/why should/MD/should we/PRP/we do/VBP/do that/IN/that ?/./? we/PRP/we will/MD/will have/VB/have a/DT/a single/JJ/single variable/JJ/variable which/WDT/which will/MD/will keep/VB/keep track/NN/track of/IN/of the/DT/the sum/NN/sum of/IN/of the/DT/the prefixes/NNP/prefixes. s/VBZ/s at/IN/at this/DT/this point/NN/point /:/( s/NNS/s ?/./? s/NNS/s +/:/+ x/NN/x /:/[ i/PRP/i /VBP/] /:/) /,/, when/WRB/when i/PRP/i am/VBP/am in/IN/in the/DT/the run/NN/run of/IN/of this/DT/this loop/NN/loop has/VBZ/has some/DT/some of/IN/of x/NN/x /:/[ 0/-NONE-/0 /:/] through/IN/through x/NN/x /:/[ i-1/-NONE-/i-1 /:/] and/CC/and then/RB/then some/DT/some x/NN/x /:/[ i/PRP/i /VBP/] in/IN/in it/NNP/it. to/TO/to compute/VB/compute element/NN/element /,/, i/PRP/i just/RB/just need/VBP/need to/TO/to divide/VB/divide this/DT/this sum/NN/sum by/IN/by i/PRP/i +/VBP/+ 1/CD/1. s/NNS/s ?/./? s/NNS/s +/:/+ x/NN/x /:/[ i/PRP/i /VBP/] a/DT/a /NN/[ i/PRP/i /VBP/] ?/./? s//-NONE-/s/ /:/( i/PRP/i +/VBP/+ 1/CD/1 /CD/) i/PRP/i keep/VBP/keep this/DT/this accumulator/NN/accumulator /:/( s/NNS/s /VBP/) around/IN/around with/IN/with me/NNP/me. when/WRB/when i/PRP/i finish/VBP/finish the/DT/the iteration/NN/iteration of/IN/of this/DT/this loop/NN/loop /,/, i/PRP/i have/VBP/have an/DT/an s/NNS/s /,/, the/DT/the sum/NN/sum x/NN/x /:/[ 0/-NONE-/0 /:/] through/IN/through x/NN/x /:/[ i/PRP/i /VBP/] /./. i/PRP/i can/MD/can reuse/VB/reuse it/PRP/it for/IN/for the/DT/the next/JJ/next step/NNP/step. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 15/CD/15 /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? in/IN/in each/DT/each run/NN/run of/IN/of this/DT/this loop/NN/loop i/PRP/i am/VBP/am just/RB/just doing/VBG/doing two/CD/two primitive/JJ/primitive operations/NNS/operations that/WDT/that makes/VBZ/makes an/DT/an order/NN/order n/NN/n times/NNS/times /,/, because/IN/because this/DT/this loop/NN/loop is/VBZ/is executed/VBN/executed n/NN/n times/NNP/times. i/PRP/i have/VBP/have been/VBN/been using/VBG/using this/DT/this freely/RB/freely linear/JJ/linear and/CC/and quadratic/JJ/quadratic /,/, but/CC/but the/DT/the slide/NN/slide given/VBN/given below/IN/below just/RB/just tells/VBZ/tells you/PRP/you the/DT/the other/JJ/other terms/NNS/terms i/PRP/i might/MD/might be/VB/be using/NNP/using. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 01/CD/01 /CD/) linear/JJ/linear is/VBZ/is when/WRB/when an/DT/an algorithm/NN/algorithm has/VBZ/has an/DT/an asymptotic/JJ/asymptotic running/NN/running time/NN/time of/IN/of o/NN/o /:/( n/NN/n /:/) /,/, then/RB/then we/PRP/we call/VBP/call it/PRP/it as/IN/as a/DT/a linear/NN/linear algorithm/NNP/algorithm. if/IN/if it/PRP/it has/VBZ/has asymptotic/JJ/asymptotic running/NN/running time/NN/time of/IN/of /,/, we/PRP/we called/VBD/called it/PRP/it as/IN/as a/DT/a quadratic/JJ/quadratic and/CC/and logarithmic/JJ/logarithmic if/IN/if it/PRP/it is/VBZ/is log/JJ/log n/NNP/n. it/PRP/it is/VBZ/is polynomial/JJ/polynomial if/IN/if it/PRP/it is/VBZ/is for/IN/for some/DT/some constant/JJ/constant k/NNP/k. algorithm/NN/algorithm is/VBZ/is called/VBN/called exponential/JJ/exponential if/IN/if it/PRP/it has/VBZ/has running/VBG/running time/NN/time of/IN/of /,/, where/WRB/where a/DT/a is/VBZ/is some/DT/some number/NN/number more/JJR/more than/IN/than 1/CD/1. till/NN/till now/RB/now i/PRP/i have/VBP/have introduced/VBN/introduced only/RB/only the/DT/the big-oh/JJ/big-oh notation/NN/notation /,/, we/PRP/we also/RB/also have/VBP/have the/DT/the big-omega/NNP/big-omega notation/NN/notation and/CC/and big-theta/NNP/big-theta notation/NNP/notation. the/DT/the ?/./? big-omega/NNP/big-omega ?/./? notation/NN/notation provides/VBZ/provides a/DT/a lower/JJR/lower bound/NNP/bound. the/DT/the function/NN/function f/NN/f /:/( n/NN/n /:/) is/VBZ/is omega/NN/omega of/IN/of g/NN/g /:/( n/NN/n /:/) /,/, f/NN/f /:/( n/NN/n /:/) =/:/= /:/( g/NN/g /:/( n/NN/n /:/) /:/) if/IN/if constant/JJ/constant time/NN/time g/NN/g /:/( n/NN/n /:/) is/VBZ/is always/RB/always less/JJR/less than/IN/than f/NN/f /:/( n/NN/n /:/) /,/, earlier/JJR/earlier that/IN/that was/VBD/was more/JJR/more than/IN/than f/NN/f /:/( n/NN/n /:/) but/CC/but now/RB/now it/PRP/it is/VBZ/is less/JJR/less than/IN/than f/NN/f /:/( n/NN/n /:/) in/IN/in the/DT/the limit/NN/limit /,/, beyond/IN/beyond a/DT/a certain/JJ/certain as/IN/as the/DT/the picture/NN/picture given/VBN/given below/IN/below illustrates/NNP/illustrates. c/NN/c g/NN/g /:/( n/NN/n /:/) f/NN/f /:/( n/NN/n /:/) for/IN/for n/NN/n f/NN/f /:/( n/NN/n /:/) is/VBZ/is more/RBR/more than/IN/than c/NN/c /:/( g/NN/g /:/( n/NN/n /:/) /:/) beyond/IN/beyond the/DT/the point/NN/point /./. that/IN/that case/NN/case we/PRP/we will/MD/will say/VB/say that/IN/that f/NN/f /:/( n/NN/n /:/) is/VBZ/is omega/NN/omega of/IN/of g/NN/g /:/( n/NN/n /:/) /./. f/NN/f /:/( n/NN/n /:/) =/:/= /:/( g/NN/g /:/( n/NN/n /:/) /:/) /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 51/CD/51 /CD/) in/IN/in notation/NN/notation f/NN/f /:/( n/NN/n /:/) is/VBZ/is /:/( g/NN/g /:/( n/NN/n /:/) /,/, if/IN/if there/EX/there exist/VBP/exist constant/JJ/constant and/CC/and such/JJ/such that/IN/that f/NN/f /:/( n/NN/n /:/) is/VBZ/is sandwiched/VBN/sandwiched between/IN/between g/NN/g /:/( n/NN/n /:/) and/CC/and g/NN/g /:/( n/NN/n /:/) /./. beyond/IN/beyond a/DT/a certain/JJ/certain point/NN/point /,/, f/NN/f /:/( n/NN/n /:/) lies/NNS/lies between/IN/between 1/CD/1 constant/NN/constant time/NN/time g/NN/g /:/( n/NN/n /:/) and/CC/and another/DT/another constant/NN/constant time/NN/time of/IN/of g/NN/g /:/( n/NN/n /:/) /./. then/RB/then f/NN/f /:/( n/NN/n /:/) is/VBZ/is /:/( g/NN/g /:/( n/NN/n /:/) /:/) where/WRB/where f/NN/f /:/( n/NN/n /:/) grows/VBZ/grows like/IN/like g/NN/g /:/( n/NN/n /:/) in/IN/in the/DT/the limit/NNP/limit. another/DT/another way/NN/way of/IN/of thinking/VBG/thinking of/IN/of it/PRP/it is/VBZ/is /,/, f/NN/f /:/( n/NN/n /:/) is/VBZ/is /:/( g/NN/g /:/( n/NN/n /:/) /:/) /./. if/IN/if f/NN/f /:/( n/NN/n /:/) is/VBZ/is o/RB/o /:/( g/NN/g /:/( n/NN/n /:/) /:/) and/CC/and it/PRP/it also/RB/also /:/( g/NN/g /:/( n/NN/n /:/) /./. there/EX/there are/VBP/are two/CD/two more/RBR/more related/JJ/related asymptotic/JJ/asymptotic notations/NNS/notations /,/, one/CD/one is/VBZ/is called/VBN/called ?/./? little-oh/JJ/little-oh ?/./? notation/NN/notation and/CC/and the/DT/the other/JJ/other is/VBZ/is called/VBN/called ?/./? little-omega/NNP/little-omega ?/./? notation/NNP/notation. they/PRP/they are/VBP/are the/DT/the non-tight/JJ/non-tight analogs/NNS/analogs of/IN/of big-oh/JJ/big-oh and/CC/and big-omega/NNP/big-omega. it/PRP/it is/VBZ/is best/JJS/best to/TO/to understand/VB/understand this/DT/this through/IN/through the/DT/the analogy/NN/analogy of/IN/of real/JJ/real numbers/NNP/numbers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 48/CD/48 /CD/) when/WRB/when f/NN/f /:/( n/NN/n /:/) is/VBZ/is o/RB/o /:/( g/NN/g /:/( n/NN/n /:/) /:/) and/CC/and the/DT/the function/NN/function f/NN/f is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to g/VB/g or/CC/or f/NN/f /:/( n/NN/n /:/) is/VBZ/is less/JJR/less than/IN/than c/NN/c /:/( g/NN/g /:/( n/NN/n /:/) /./. the/DT/the analogy/NN/analogy with/IN/with the/DT/the real/JJ/real numbers/NNS/numbers is/VBZ/is when/WRB/when the/DT/the number/NN/number is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to another/DT/another number/NNP/number. is/VBZ/is for/IN/for and/CC/and is/VBZ/is for/IN/for =/CD/= /./. /CD/( g/NN/g /:/( n/NN/n /:/) is/VBZ/is function/NN/function and/CC/and f/NN/f =/:/= g/NN/g are/VBP/are real/JJ/real numbers/NNP/numbers. if/IN/if these/DT/these are/VBP/are real/JJ/real numbers/NNS/numbers /,/, you/PRP/you can/MD/can talk/VB/talk of/IN/of equality/NN/equality but/CC/but you/PRP/you can/MD/can not/RB/not talk/VB/talk of/IN/of equality/NN/equality for/IN/for a/DT/a function/NN/function unless/IN/unless they/PRP/they are/VBP/are equal/NNP/equal. little-oh/NNP/little-oh corresponds/VBZ/corresponds to/TO/to strictly/RB/strictly less/JJR/less than/IN/than g/NN/g and/CC/and little-omega/NNP/little-omega corresponds/NNS/corresponds to/TO/to strictly/RB/strictly more/NNP/more. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to use/VB/use these/DT/these /,/, infact/NN/infact we/PRP/we will/MD/will use/VB/use big-oh/NNP/big-oh. you/PRP/you should/MD/should be/VB/be very/RB/very clear/JJ/clear with/IN/with that/DT/that part/NNP/part. the/DT/the formal/JJ/formal definition/NN/definition for/IN/for little-oh/JJ/little-oh is/VBZ/is that/IN/that /,/, for/IN/for every/DT/every constant/NN/constant c/NN/c there/EX/there should/MD/should exist/VB/exist some/DT/some such/JJ/such that/IN/that f/NN/f /:/( n/NN/n /:/) is/VBZ/is </:/< c/NN/c /:/( g/NN/g /:/( n/NN/n /:/) for/IN/for n/NN/n >/:/> /./. f/NN/f /:/( n/NN/n /:/) c/NN/c /:/( g/NN/g /:/( n/NN/n /:/) /:/) for/IN/for n/NN/n how/WRB/how it/PRP/it is/VBZ/is different/JJ/different from/IN/from big/JJ/big- oh/NN/oh ?/./? in/IN/in that/DT/that case/NN/case i/PRP/i said/VBD/said /,/, there/EX/there exist/NN/exist c/NN/c and/CC/and such/JJ/such that/IN/that this/DT/this is/VBZ/is true/NNP/true. here/RB/here we/PRP/we will/MD/will say/VB/say for/IN/for every/DT/every c/NN/c there/RB/there should/MD/should exist/VB/exist an/DT/an /./. /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 12/CD/12 /CD/) the/DT/the slide/NN/slide which/WDT/which is/VBZ/is below/IN/below defines/NNS/defines the/DT/the difference/NN/difference between/IN/between the/DT/the functions/NNP/functions. i/PRP/i have/VBP/have an/DT/an algorithm/NN/algorithm whose/WP$/whose running/VBG/running times/NNS/times are/VBP/are like/IN/like 400n/CD/400n /,/, 20n/CD/20n log/NN/log n/NN/n /,/, 2/CD/2 /,/, and/CC/and /./. also/RB/also i/PRP/i have/VBP/have listed/VBN/listed out/RP/out /,/, the/DT/the largest/JJS/largest problem/NN/problem size/NN/size that/IN/that you/PRP/you can/MD/can solve/VB/solve in/IN/in 1/CD/1 second/JJ/second or/CC/or 1/CD/1 minute/NN/minute or/CC/or 1/CD/1 hour/NNP/hour. the/DT/the largest/JJS/largest problem/NN/problem size/NN/size that/IN/that you/PRP/you can/MD/can solve/VB/solve is/VBZ/is roughly/RB/roughly 2500/CD/2500. let/VB/let us/PRP/us say/VB/say if/IN/if you/PRP/you have/VBP/have 20n/CD/20n log/NN/log n/NN/n as/IN/as running/VBG/running time/NN/time then/RB/then the/DT/the problem/NN/problem size/NN/size would/MD/would be/VB/be like/IN/like 4096/CD/4096. why/WRB/why did/VBD/did you/PRP/you see/VB/see that/IN/that 4096/CD/4096 is/VBZ/is larger/JJR/larger than/IN/than 2500/CD/2500 /,/, although/IN/although 20n/CD/20n log/NN/log n/NN/n is/VBZ/is the/DT/the worst/JJS/worst running/VBG/running time/NN/time than/IN/than 400n/CD/400n /,/, because/IN/because of/IN/of the/DT/the constant/NNP/constant. you/PRP/you can/MD/can see/VB/see the/DT/the differences/NNS/differences happening/NNP/happening. if/IN/if it/PRP/it is/VBZ/is 2/CD/2 then/RB/then the/DT/the problem/NN/problem size/NN/size is/VBZ/is 707/CD/707 and/CC/and when/WRB/when it/PRP/it is/VBZ/is the/DT/the problem/NN/problem size/NN/size is/VBZ/is 19/CD/19. see/NN/see the/DT/the behavior/NN/behavior as/IN/as the/DT/the time/NN/time increases/NNP/increases. an/DT/an hour/NN/hour is/VBZ/is 3600seconds/CD/3600seconds and/CC/and there/EX/there is/VBZ/is a/DT/a huge/JJ/huge increase/NN/increase in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the problem/NN/problem you/PRP/you solve/VBP/solve /,/, if/IN/if it/PRP/it is/VBZ/is linear/JJ/linear time/NN/time algorithm/NNP/algorithm. still/RB/still there/RB/there is/VBZ/is a/DT/a large/JJ/large increase/NN/increase /,/, when/WRB/when it/PRP/it is/VBZ/is n/VBN/n log/NN/log n/NN/n algorithm/NN/algorithm and/CC/and not/RB/not so/RB/so large/JJ/large increase/NN/increase when/WRB/when it/PRP/it is/VBZ/is an/DT/an algorithm/NN/algorithm and/CC/and almost/RB/almost no/DT/no increase/NN/increase when/WRB/when it/PRP/it is/VBZ/is algorithm/NNP/algorithm. if/IN/if you/PRP/you have/VBP/have an/DT/an algorithm/NN/algorithm whose/WP$/whose running/VBG/running time/NN/time is/VBZ/is something/NN/something like/IN/like /,/, you/PRP/you can/MD/can not/RB/not solve/VB/solve for/IN/for problem/NN/problem of/IN/of more/JJR/more than/IN/than size/NN/size 100/CD/100. it/PRP/it will/MD/will take/VB/take millions/NNS/millions of/IN/of years/NNS/years to/TO/to solve/VB/solve it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 52/CD/52 /CD/) this/DT/this is/VBZ/is the/DT/the behavior/NN/behavior we/PRP/we are/VBP/are interested/JJ/interested in/IN/in our/PRP$/our course/NNP/course. hence/NN/hence we/PRP/we consider/VBP/consider asymptotic/JJ/asymptotic analysis/NN/analysis for/IN/for this/NNP/this. 