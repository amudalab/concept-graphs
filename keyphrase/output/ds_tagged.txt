dsa/NN/dsa dat/VBD/dat a/DT/a s/NN/s t/NN/t r/NN/r u/NN/u c/NN/c t/NN/t u/NN/u r/NN/r e/NN/e s/NNS/s a/DT/a n/NN/n d/NN/d a/DT/a l/NN/l g/NN/g o/NN/o r/NN/r i/PRP/i t/VBP/t hms/NNS/hms annotated/VBN/annotated reference/NN/reference with/IN/with examples/NNS/examples granville/VBP/granville barne/NN/barne !/./! luca/NN/luca del/NN/del tongo/NN/tongo data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms /:/: annotated/VBN/annotated reference/NN/reference with/IN/with examples/NNS/examples first/RB/first edition/NN/edition copyright/NN/copyright Â/:/Â °/:/° c/NN/c granville/NN/granville barnett/NN/barnett /,/, and/CC/and luca/NN/luca del/NN/del tongo/NN/tongo 2008/CD/2008 /./. this/DT/this book/NN/book is/VBZ/is made/VBN/made exclusively/RB/exclusively available/JJ/available from/IN/from dotnetslackers/NNS/dotnetslackers /:/( http/NN/http /:/: //dotnetslackers.com//JJ///dotnetslackers.com/ /NN/) the/DT/the place/NN/place for/IN/for .net/JJ/.net articles/NNS/articles /,/, and/CC/and news/NN/news from/IN/from some/DT/some of/IN/of the/DT/the leading/VBG/leading minds/NNS/minds in/IN/in the/DT/the software/NN/software industry/NN/industry /./. contents/NNS/contents 1/CD/1 introduction/NN/introduction 1/CD/1 1.1/CD/1.1 what/WP/what this/DT/this book/NN/book is/VBZ/is /,/, and/CC/and what/WP/what it/PRP/it is/VBZ/is n't/RB/n't /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 1/CD/1 1.2/CD/1.2 assumed/VBN/assumed knowledge/NN/knowledge /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 1/CD/1 1.2.1/CD/1.2.1 big/JJ/big oh/NN/oh notation/NN/notation /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 1/CD/1 1.2.2/CD/1.2.2 imperative/JJ/imperative programming/NN/programming language/NN/language /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 3/CD/3 1.2.3/CD/1.2.3 object/NN/object oriented/VBN/oriented concepts/NNS/concepts /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 4/CD/4 1.3/CD/1.3 pseudocode/NN/pseudocode /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 4/CD/4 1.4/CD/1.4 tips/NNS/tips for/IN/for working/VBG/working through/IN/through the/DT/the examples/NNS/examples /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 6/CD/6 1.5/CD/1.5 book/NN/book outline/NN/outline /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 6/CD/6 1.6/CD/1.6 testing/NN/testing /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 7/CD/7 1.7/CD/1.7 where/WRB/where can/MD/can i/VB/i get/VB/get the/DT/the code/NN/code ?/./? /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 7/CD/7 1.8/CD/1.8 final/JJ/final messages/NNS/messages /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 7/CD/7 i/PRP/i data/NNS/data structures/NNS/structures 8/CD/8 2/CD/2 linked/VBN/linked lists/NNS/lists 9/CD/9 2.1/CD/2.1 singly/RB/singly linked/VBN/linked list/NN/list /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 9/CD/9 2.1.1/CD/2.1.1 insertion/NN/insertion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 10/CD/10 2.1.2/CD/2.1.2 searching/VBG/searching /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 10/CD/10 2.1.3/CD/2.1.3 deletion/NN/deletion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 11/CD/11 2.1.4/CD/2.1.4 traversing/VBG/traversing the/DT/the list/NN/list /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 12/CD/12 2.1.5/CD/2.1.5 traversing/VBG/traversing the/DT/the list/NN/list in/IN/in reverse/NN/reverse order/NN/order /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 13/CD/13 2.2/CD/2.2 doubly/RB/doubly linked/VBN/linked list/NN/list /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 13/CD/13 2.2.1/CD/2.2.1 insertion/NN/insertion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 15/CD/15 2.2.2/CD/2.2.2 deletion/NN/deletion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 15/CD/15 2.2.3/CD/2.2.3 reverse/NN/reverse traversal/NN/traversal /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 16/CD/16 2.3/CD/2.3 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 17/CD/17 3/CD/3 binary/JJ/binary search/NN/search tree/NN/tree 19/CD/19 3.1/CD/3.1 insertion/NN/insertion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 20/CD/20 3.2/CD/3.2 searching/VBG/searching /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 21/CD/21 3.3/CD/3.3 deletion/NN/deletion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 22/CD/22 3.4/CD/3.4 finding/NN/finding the/DT/the parent/NN/parent of/IN/of a/DT/a given/VBN/given node/NN/node /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 24/CD/24 3.5/CD/3.5 attaining/VBG/attaining a/DT/a reference/NN/reference to/TO/to a/DT/a node/NN/node /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 24/CD/24 3.6/CD/3.6 finding/NN/finding the/DT/the smallest/JJS/smallest and/CC/and largest/JJS/largest values/NNS/values in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NN/tree 25/CD/25 3.7/CD/3.7 tree/NN/tree traversals/NNS/traversals /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 26/CD/26 3.7.1/CD/3.7.1 preorder/NN/preorder /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 26/CD/26 i/PRP/i 3.7.2/CD/3.7.2 postorder/NN/postorder /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 26/CD/26 3.7.3/CD/3.7.3 inorder/NN/inorder /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 29/CD/29 3.7.4/CD/3.7.4 breadth/NN/breadth first/RB/first /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 30/CD/30 3.8/CD/3.8 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 31/CD/31 4/CD/4 heap/NN/heap 32/CD/32 4.1/CD/4.1 insertion/NN/insertion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 33/CD/33 4.2/CD/4.2 deletion/NN/deletion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 37/CD/37 4.3/CD/4.3 searching/VBG/searching /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 38/CD/38 4.4/CD/4.4 traversal/NN/traversal /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 41/CD/41 4.5/CD/4.5 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 42/CD/42 5/CD/5 sets/NNS/sets 44/CD/44 5.1/CD/5.1 unordered/VBN/unordered /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 46/CD/46 5.1.1/CD/5.1.1 insertion/NN/insertion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 46/CD/46 5.2/CD/5.2 ordered/VBN/ordered /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 47/CD/47 5.3/CD/5.3 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 47/CD/47 6/CD/6 queues/NNS/queues 48/CD/48 6.1/CD/6.1 a/DT/a standard/JJ/standard queue/NN/queue /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 49/CD/49 6.2/CD/6.2 priority/NN/priority queue/NN/queue /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 49/CD/49 6.3/CD/6.3 double/JJ/double ended/JJ/ended queue/NN/queue /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 49/CD/49 6.4/CD/6.4 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 53/CD/53 7/CD/7 avl/NN/avl tree/NN/tree 54/CD/54 7.1/CD/7.1 tree/NN/tree rotations/NNS/rotations /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 56/CD/56 7.2/CD/7.2 tree/NN/tree rebalancing/VBG/rebalancing /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 57/CD/57 7.3/CD/7.3 insertion/NN/insertion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 58/CD/58 7.4/CD/7.4 deletion/NN/deletion /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 59/CD/59 7.5/CD/7.5 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 61/CD/61 ii/NN/ii algorithms/NNS/algorithms 62/CD/62 8/CD/8 sorting/VBG/sorting 63/CD/63 8.1/CD/8.1 bubble/JJ/bubble sort/NN/sort /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 63/CD/63 8.2/CD/8.2 merge/NN/merge sort/NN/sort /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 63/CD/63 8.3/CD/8.3 quick/JJ/quick sort/NN/sort /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 65/CD/65 8.4/CD/8.4 insertion/NN/insertion sort/NN/sort /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 67/CD/67 8.5/CD/8.5 shell/NN/shell sort/NN/sort /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 68/CD/68 8.6/CD/8.6 radix/CD/radix sort/NN/sort /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 68/CD/68 8.7/CD/8.7 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 70/CD/70 9/CD/9 numeric/JJ/numeric 72/CD/72 9.1/CD/9.1 primality/NN/primality test/NN/test /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 72/CD/72 9.2/CD/9.2 base/NN/base conversions/NNS/conversions /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 72/CD/72 9.3/CD/9.3 attaining/VBG/attaining the/DT/the greatest/JJS/greatest common/JJ/common denominator/NN/denominator of/IN/of two/CD/two numbers/NNS/numbers /./. /./. 73/CD/73 9.4/CD/9.4 computing/NN/computing the/DT/the maximum/NN/maximum value/NN/value for/IN/for a/DT/a number/NN/number of/IN/of a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c base/NN/base consisting/VBG/consisting of/IN/of n/NN/n digits/NNS/digits /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 74/CD/74 9.5/CD/9.5 factorial/JJ/factorial of/IN/of a/DT/a number/NN/number /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 74/CD/74 9.6/CD/9.6 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 75/CD/75 ii/NN/ii 10/CD/10 searching/VBG/searching 76/CD/76 10.1/CD/10.1 sequential/JJ/sequential search/NN/search /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 76/CD/76 10.2/CD/10.2 probability/NN/probability search/NN/search /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 76/CD/76 10.3/CD/10.3 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 77/CD/77 11/CD/11 strings/NNS/strings 79/CD/79 11.1/CD/11.1 reversing/VBG/reversing the/DT/the order/NN/order of/IN/of words/NNS/words in/IN/in a/DT/a sentence/NN/sentence /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 79/CD/79 11.2/CD/11.2 detecting/VBG/detecting a/DT/a palindrome/NN/palindrome /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 80/CD/80 11.3/CD/11.3 counting/VBG/counting the/DT/the number/NN/number of/IN/of words/NNS/words in/IN/in a/DT/a string/NN/string /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 81/CD/81 11.4/CD/11.4 determining/VBG/determining the/DT/the number/NN/number of/IN/of repeated/VBN/repeated words/NNS/words within/IN/within a/DT/a string/NN/string /./. /./. /./. /./. 83/CD/83 11.5/CD/11.5 determining/VBG/determining the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst matching/NN/matching character/NN/character between/IN/between two/CD/two strings/NNS/strings /./. /./. 84/CD/84 11.6/CD/11.6 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 85/CD/85 a/DT/a algorithm/NN/algorithm walkthrough/IN/walkthrough 86/CD/86 a.1/-NONE-/a.1 iterative/JJ/iterative algorithms/NNS/algorithms /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 86/CD/86 a.2/-NONE-/a.2 recursive/JJ/recursive algorithms/NNS/algorithms /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 88/CD/88 a.3/-NONE-/a.3 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 90/CD/90 b/NN/b translation/NN/translation walkthrough/IN/walkthrough 91/CD/91 b.1/-NONE-/b.1 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 92/CD/92 c/NN/c recursive/JJ/recursive vs/NNP/vs. iterative/JJ/iterative solutions/NNS/solutions 93/CD/93 c.1/-NONE-/c.1 activation/NN/activation records/NNS/records /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 94/CD/94 c.2/-NONE-/c.2 some/DT/some problems/NNS/problems are/VBP/are recursive/JJ/recursive in/IN/in nature/NN/nature /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 95/CD/95 c.3/-NONE-/c.3 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 95/CD/95 d/NN/d testing/NN/testing 97/CD/97 d.1/-NONE-/d.1 what/WP/what constitutes/NNS/constitutes a/DT/a unit/NN/unit test/NN/test ?/./? /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 97/CD/97 d.2/-NONE-/d.2 when/WRB/when should/MD/should i/VB/i write/JJ/write my/PRP$/my tests/NNS/tests ?/./? /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 98/CD/98 d.3/-NONE-/d.3 how/WRB/how seriously/RB/seriously should/MD/should i/VB/i view/NN/view my/PRP$/my test/NN/test suite/NN/suite ?/./? /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 99/CD/99 d.4/-NONE-/d.4 the/DT/the three/CD/three a/DT/a 's/POS/'s /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 99/CD/99 d.5/-NONE-/d.5 the/DT/the structuring/NN/structuring of/IN/of tests/NNS/tests /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 99/CD/99 d.6/-NONE-/d.6 code/NN/code coverage/NN/coverage /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 100/CD/100 d.7/-NONE-/d.7 summary/JJ/summary /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. /./. 100/CD/100 e/NN/e symbol/NN/symbol de/IN/de Â/CD/Â ¯/CD/¯ nitions/NNS/nitions 101/CD/101 iii/NN/iii preface/NN/preface every/DT/every book/NN/book has/VBZ/has a/DT/a story/NN/story as/IN/as to/TO/to how/WRB/how it/PRP/it came/VBD/came about/IN/about and/CC/and this/DT/this one/CD/one is/VBZ/is no/DT/no di/NN/di Â/:/Â ®/:/® erent/NN/erent /,/, although/IN/although we/PRP/we would/MD/would be/VB/be lying/VBG/lying if/IN/if we/PRP/we said/VBD/said its/PRP$/its development/NN/development had/VBD/had not/RB/not been/VBN/been somewhat/RB/somewhat impromptu/NNP/impromptu. put/VBD/put simply/RB/simply this/DT/this book/NN/book is/VBZ/is the/DT/the result/NN/result of/IN/of a/DT/a series/NN/series of/IN/of emails/NNS/emails sent/VBN/sent back/RB/back and/CC/and forth/JJ/forth between/IN/between the/DT/the two/CD/two authors/NNS/authors during/IN/during the/DT/the development/NN/development of/IN/of a/DT/a library/NN/library for/IN/for the/DT/the .net/JJ/.net framework/NN/framework of/IN/of the/DT/the same/JJ/same name/NN/name /:/( with/IN/with the/DT/the omission/NN/omission of/IN/of the/DT/the subtitle/NN/subtitle of/IN/of course/NN/course !/./! /:/) /./. the/DT/the conversation/NN/conversation started/VBD/started o/NN/o Â/:/Â ®/:/® something/NN/something like/IN/like /,/, \/:/\ why/WRB/why do/VBP/do n't/RB/n't we/PRP/we create/VB/create a/DT/a more/RBR/more aesthetically/RB/aesthetically pleasing/VBG/pleasing way/NN/way to/TO/to present/VB/present our/PRP$/our pseudocode/NN/pseudocode ?/./? "/:/" after/IN/after a/DT/a few/JJ/few weeks/NNS/weeks this/DT/this new/JJ/new presentation/NN/presentation style/NN/style had/VBD/had in/IN/in fact/NN/fact grown/NN/grown into/IN/into pseudocode/NN/pseudocode listings/NNS/listings with/IN/with chunks/NNS/chunks of/IN/of text/NN/text describing/VBG/describing how/WRB/how the/DT/the data/NNS/data structure/VBP/structure or/CC/or algorithm/NN/algorithm in/IN/in question/NN/question works/NNS/works and/CC/and various/JJ/various other/JJ/other things/NNS/things about/IN/about it/NNP/it. at/IN/at this/DT/this point/NN/point we/PRP/we thought/VBD/thought /,/, \/NNP/\ what/WP/what the/DT/the heck/NN/heck /,/, let/VB/let 's/POS/'s make/NN/make this/DT/this thing/NN/thing into/IN/into a/DT/a book/NN/book !/./! "/:/" and/CC/and so/RB/so /,/, in/IN/in the/DT/the summer/NN/summer of/IN/of 2008/CD/2008 we/PRP/we began/VBD/began work/NN/work on/IN/on this/DT/this book/NN/book side/NN/side by/IN/by side/NN/side with/IN/with the/DT/the actual/JJ/actual library/NN/library implementation/NN/implementation /./. when/WRB/when we/PRP/we started/VBD/started writing/VBG/writing this/DT/this book/NN/book the/DT/the only/JJ/only things/NNS/things that/WDT/that we/PRP/we were/VBD/were sure/JJ/sure about/IN/about with/IN/with respect/NN/respect to/TO/to how/WRB/how the/DT/the book/NN/book should/MD/should be/VB/be structured/VBN/structured were/VBD/were /:/: 1/CD/1. always/NNS/always make/VBP/make explanations/NNS/explanations as/IN/as simple/JJ/simple as/IN/as possible/JJ/possible while/IN/while maintaining/NN/maintaining a/DT/a moder/NN/moder- ately/RB/ately Â/./Â ¯/:/¯ ne/NN/ne degree/NN/degree of/IN/of precision/NN/precision to/TO/to keep/VB/keep the/DT/the more/RBR/more eager/JJ/eager minded/VBN/minded reader/NN/reader happy/NN/happy ;/:/; and/CC/and 2/CD/2. inject/NN/inject diagrams/NNS/diagrams to/TO/to demystify/VB/demystify problems/NNS/problems that/WDT/that are/VBP/are even/RB/even moderatly/RB/moderatly challenging/VBG/challenging to/TO/to visualise/VB/visualise /:/( /./. /./. /./. and/CC/and so/RB/so we/PRP/we could/MD/could remember/VB/remember how/WRB/how our/PRP$/our own/JJ/own algorithms/NNS/algorithms worked/VBD/worked when/WRB/when looking/VBG/looking back/RB/back at/IN/at them/PRP/them !/./! /:/) ;/:/; and/CC/and Â/:/Â ¯/:/¯ nally/RB/nally 3/CD/3. present/NN/present concise/NN/concise and/CC/and self-explanatory/JJ/self-explanatory pseudocode/NN/pseudocode listings/NNS/listings that/WDT/that can/MD/can be/VB/be ported/VBN/ported easily/RB/easily to/TO/to most/RBS/most mainstream/NN/mainstream imperative/JJ/imperative programming/NN/programming languages/NNS/languages like/IN/like c/NN/c +/:/+ +/:/+ /,/, c/NN/c #/#/# /,/, and/CC/and java/NN/java /./. a/DT/a key/JJ/key factor/NN/factor of/IN/of this/DT/this book/NN/book and/CC/and its/PRP$/its associated/VBN/associated implementations/NNS/implementations is/VBZ/is that/IN/that all/DT/all algorithms/NNS/algorithms /VBP/( unless/IN/unless otherwise/NN/otherwise stated/VBD/stated /CD/) were/VBD/were designed/VBN/designed by/IN/by us/PRP/us /,/, using/VBG/using the/DT/the theory/NN/theory of/IN/of the/DT/the algorithm/NN/algorithm in/IN/in question/NN/question as/IN/as a/DT/a guideline/NN/guideline /:/( for/IN/for which/WDT/which we/PRP/we are/VBP/are eternally/RB/eternally grateful/JJ/grateful to/TO/to their/PRP$/their original/JJ/original creators/NNS/creators /:/) /./. therefore/RB/therefore they/PRP/they may/MD/may sometimes/RB/sometimes turn/VB/turn out/RP/out to/TO/to be/VB/be worse/JJ/worse than/IN/than the/DT/the \/NN/\ normal/JJ/normal "/NN/" implementations/NNS/implementations |/:/| and/CC/and sometimes/RB/sometimes not/NNP/not. we/PRP/we are/VBP/are two/CD/two fellows/NNS/fellows of/IN/of the/DT/the opinion/NN/opinion that/IN/that choice/NN/choice is/VBZ/is a/DT/a great/JJ/great thing/NNP/thing. read/NN/read our/PRP$/our book/NN/book /,/, read/VBD/read several/JJ/several others/NNS/others on/IN/on the/DT/the same/JJ/same subject/NN/subject and/CC/and use/VBP/use what/WP/what you/PRP/you see/VBP/see Â/:/Â ¯/:/¯ t/NN/t from/IN/from each/DT/each /CD/( if/IN/if anything/NN/anything /:/) when/WRB/when implementing/VBG/implementing your/PRP$/your own/JJ/own version/NN/version of/IN/of the/DT/the algorithms/NNS/algorithms in/IN/in question/NN/question /./. through/IN/through this/DT/this book/NN/book we/PRP/we hope/VBP/hope that/IN/that you/PRP/you will/MD/will see/VB/see the/DT/the absolute/JJ/absolute necessity/NN/necessity of/IN/of under/NNP/under- standing/NN/standing which/WDT/which data/NNS/data structure/VBP/structure or/CC/or algorithm/NN/algorithm to/TO/to use/VB/use for/IN/for a/DT/a certain/JJ/certain scenario/NN/scenario. in/IN/in all/DT/all projects/NNS/projects /,/, especially/RB/especially those/DT/those that/WDT/that are/VBP/are concerned/VBN/concerned with/IN/with performance/NN/performance /:/( here/RB/here we/PRP/we apply/RB/apply an/DT/an even/RB/even greater/JJR/greater emphasis/NN/emphasis on/IN/on real-time/JJ/real-time systems/NNS/systems /:/) the/DT/the selection/NN/selection of/IN/of the/DT/the wrong/JJ/wrong data/NNS/data structure/NN/structure or/CC/or algorithm/NN/algorithm can/MD/can be/VB/be the/DT/the cause/NN/cause of/IN/of a/DT/a great/JJ/great deal/NN/deal of/IN/of performance/NN/performance pain/NN/pain /./. iv/NN/iv v/NN/v therefore/RB/therefore it/PRP/it is/VBZ/is absolutely/RB/absolutely key/JJ/key that/IN/that you/PRP/you think/VBP/think about/IN/about the/DT/the run/NN/run time/NN/time complexity/NN/complexity and/CC/and space/NN/space requirements/NNS/requirements of/IN/of your/PRP$/your selected/VBN/selected approach/NNP/approach. in/IN/in this/DT/this book/NN/book we/PRP/we only/RB/only explain/VBP/explain the/DT/the theoretical/JJ/theoretical implications/NNS/implications to/TO/to consider/VB/consider /,/, but/CC/but this/DT/this is/VBZ/is for/IN/for a/DT/a good/JJ/good reason/NN/reason /:/: compilers/NNS/compilers are/VBP/are very/RB/very di/JJ/di Â/NN/Â ®/:/® erent/NN/erent in/IN/in how/WRB/how they/PRP/they work/NNP/work. one/CD/one c/NN/c +/:/+ +/:/+ compiler/JJR/compiler may/MD/may have/VB/have some/DT/some amazing/VBG/amazing optimisation/NN/optimisation phases/NNS/phases speci/VBP/speci Â/:/Â ¯/:/¯ cally/RB/cally targeted/VBN/targeted at/IN/at recursion/NN/recursion /,/, another/DT/another may/MD/may not/RB/not /,/, for/IN/for ex/JJ/ex- ample/NNP/ample. of/IN/of course/NN/course this/DT/this is/VBZ/is just/RB/just an/DT/an example/NN/example but/CC/but you/PRP/you would/MD/would be/VB/be surprised/VBN/surprised by/IN/by how/WRB/how many/JJ/many subtle/NN/subtle di/NN/di Â/:/Â ®/:/® erences/NNS/erences there/RB/there are/VBP/are between/IN/between compilers/NNP/compilers. these/DT/these di/NN/di Â/:/Â ®/:/® erences/NNS/erences which/WDT/which may/MD/may make/VB/make a/DT/a fast/JJ/fast algorithm/NN/algorithm slow/JJ/slow /,/, and/CC/and vice/NN/vice versa/NNP/versa. we/PRP/we could/MD/could also/RB/also factor/VB/factor in/IN/in the/DT/the same/JJ/same concerns/NNS/concerns about/IN/about languages/NNS/languages that/WDT/that target/NN/target virtual/VBP/virtual machines/NNS/machines /,/, leaving/VBG/leaving all/DT/all the/DT/the actual/JJ/actual various/JJ/various implementation/NN/implementation issues/NNS/issues to/TO/to you/PRP/you given/VBN/given that/IN/that you/PRP/you will/MD/will know/VB/know your/PRP$/your lan/NN/lan- guage/NN/guage 's/POS/'s compiler/NN/compiler much/RB/much better/RBR/better than/IN/than us...well/NNP/us...well in/IN/in most/JJS/most cases/NNP/cases. this/DT/this has/VBZ/has resulted/VBN/resulted in/IN/in a/DT/a more/RBR/more concise/JJ/concise book/NN/book that/WDT/that focuses/VBZ/focuses on/IN/on what/WP/what we/PRP/we think/VBP/think are/VBP/are the/DT/the key/JJ/key issues/NNS/issues /./. one/CD/one Â/CD/Â ¯/CD/¯ nal/JJ/nal note/NN/note /:/: never/RB/never take/VB/take the/DT/the words/NNS/words of/IN/of others/NNS/others as/IN/as gospel/NN/gospel ;/:/; verify/NN/verify all/DT/all that/DT/that can/MD/can be/VB/be feasibly/RB/feasibly veri/VB/veri Â/:/Â ¯/:/¯ ed/VBD/ed and/CC/and make/VB/make up/RP/up your/PRP$/your own/JJ/own mind/NN/mind /./. we/PRP/we hope/VBP/hope you/PRP/you enjoy/VBP/enjoy reading/VBG/reading this/DT/this book/NN/book as/IN/as much/JJ/much as/IN/as we/PRP/we have/VBP/have enjoyed/VBN/enjoyed writing/VBG/writing it/PRP/it /./. granville/NN/granville barnett/NN/barnett luca/NN/luca del/NN/del tongo/NN/tongo acknowledgements/NNS/acknowledgements writing/VBG/writing this/DT/this short/JJ/short book/NN/book has/VBZ/has been/VBN/been a/DT/a fun/NN/fun and/CC/and rewarding/VBG/rewarding experience/NNP/experience. we/PRP/we would/MD/would like/VB/like to/TO/to thank/VB/thank /,/, in/IN/in no/DT/no particular/JJ/particular order/NN/order the/DT/the following/VBG/following people/NNS/people who/WP/who have/VBP/have helped/VBN/helped us/PRP/us during/IN/during the/DT/the writing/NN/writing of/IN/of this/DT/this book/NN/book /./. sonu/NN/sonu kapoor/NN/kapoor generously/RB/generously hosted/VBN/hosted our/PRP$/our book/NN/book which/WDT/which when/WRB/when we/PRP/we released/VBD/released the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst draft/NN/draft received/VBD/received over/IN/over thirteen/VBN/thirteen thousand/NN/thousand downloads/NNS/downloads /,/, without/IN/without his/PRP$/his generosity/NN/generosity this/DT/this book/NN/book would/MD/would not/RB/not have/VB/have been/VBN/been able/JJ/able to/TO/to reach/VB/reach so/RB/so many/JJ/many people/NNP/people. jon/NN/jon skeet/NN/skeet provided/VBD/provided us/PRP/us with/IN/with an/DT/an alarming/VBG/alarming number/NN/number of/IN/of suggestions/NNS/suggestions throughout/IN/throughout for/IN/for which/WDT/which we/PRP/we are/VBP/are eternally/RB/eternally grateful/NNP/grateful. jon/NN/jon also/RB/also edited/VBD/edited this/DT/this book/NN/book as/IN/as well/RB/well /./. we/PRP/we would/MD/would also/RB/also like/VB/like to/TO/to thank/VB/thank those/DT/those who/WP/who provided/VBN/provided the/DT/the odd/JJ/odd suggestion/NN/suggestion via/IN/via email/NN/email to/TO/to us/NNP/us. all/DT/all feedback/NN/feedback was/VBD/was listened/VBN/listened to/TO/to and/CC/and you/PRP/you will/MD/will no/RB/no doubt/VB/doubt see/NN/see some/DT/some content/NN/content in/IN/in Â/NNP/Â °/NNP/° uenced/VBD/uenced by/IN/by your/PRP$/your suggestions/NNS/suggestions /./. a/DT/a special/JJ/special thank/NN/thank you/PRP/you also/RB/also goes/VBZ/goes out/RP/out to/TO/to those/DT/those who/WP/who helped/VBN/helped publicise/VBP/publicise this/DT/this book/NN/book from/IN/from microsoft/NN/microsoft 's/POS/'s channel/NN/channel 9/CD/9 weekly/RB/weekly show/NN/show /:/( thanks/NNS/thanks dan/VBP/dan !/./! /:/) to/TO/to the/DT/the many/JJ/many bloggers/NNS/bloggers who/WP/who helped/VBN/helped spread/VBP/spread the/DT/the word/NNP/word. you/PRP/you gave/VBD/gave us/PRP/us an/DT/an audience/NN/audience and/CC/and for/IN/for that/DT/that we/PRP/we are/VBP/are extremely/RB/extremely grateful/JJ/grateful /./. thank/NN/thank you/PRP/you to/TO/to all/DT/all who/WP/who contributed/VBN/contributed in/IN/in some/DT/some way/NN/way to/TO/to this/DT/this book/NNP/book. the/DT/the program/NNP/program- ming/NN/ming community/NN/community never/RB/never ceases/VBZ/ceases to/TO/to amaze/VB/amaze us/PRP/us in/IN/in how/WRB/how willing/JJ/willing its/PRP$/its constituents/NNS/constituents are/VBP/are to/TO/to give/VB/give time/NN/time to/TO/to projects/NNS/projects such/JJ/such as/IN/as this/DT/this one/NNP/one. thank/NN/thank you/PRP/you /./. vi/NN/vi about/IN/about the/DT/the authors/NNS/authors granville/VBP/granville barnett/NN/barnett granville/NN/granville is/VBZ/is currently/RB/currently a/DT/a ph.d/JJ/ph.d candidate/NN/candidate at/IN/at queensland/NN/queensland university/NN/university of/IN/of technology/NN/technology /:/( qut/NN/qut /:/) working/VBG/working on/IN/on parallelism/NN/parallelism at/IN/at the/DT/the microsoft/NN/microsoft qut/NN/qut eresearch/NN/eresearch centre1/NNP/centre1. he/PRP/he also/RB/also holds/VBZ/holds a/DT/a degree/NN/degree in/IN/in computer/NN/computer science/NN/science /,/, and/CC/and is/VBZ/is a/DT/a microsoft/NN/microsoft mvp/NNP/mvp. his/PRP$/his main/NN/main interests/NNS/interests are/VBP/are in/IN/in programming/NN/programming languages/NNS/languages and/CC/and compilers/NNP/compilers. granville/NN/granville can/MD/can be/VB/be contacted/VBN/contacted via/IN/via one/CD/one of/IN/of two/CD/two places/NNS/places /:/: either/DT/either his/PRP$/his personal/JJ/personal website/NN/website /:/( http/NN/http /:/: //gbarnett.org/JJ///gbarnett.org /NN/) or/CC/or his/PRP$/his blog/NN/blog /:/( http/NN/http /:/: //msmvps.com/blogs/gbarnett/JJ///msmvps.com/blogs/gbarnett /NN/) /./. luca/NN/luca del/NN/del tongo/NN/tongo luca/NN/luca is/VBZ/is currently/RB/currently studying/VBG/studying for/IN/for his/PRP$/his masters/NNS/masters degree/VBP/degree in/IN/in computer/NN/computer science/NN/science at/IN/at flo/NN/flo- rence/NNP/rence. his/PRP$/his main/NN/main interests/NNS/interests vary/JJ/vary from/IN/from web/NN/web development/NN/development to/TO/to research/NN/research Â/:/Â ¯/:/¯ elds/NNS/elds such/JJ/such as/IN/as data/NNS/data mining/VBG/mining and/CC/and computer/NN/computer vision/NNP/vision. luca/NN/luca also/RB/also maintains/VBZ/maintains an/DT/an italian/JJ/italian blog/NN/blog which/WDT/which can/MD/can be/VB/be found/VBN/found at/IN/at http/NN/http /:/: //blogs.ugidotnet.org/wetblog//JJ///blogs.ugidotnet.org/wetblog/ /./. 1http/CD/1http /:/: //www.mquter.qut.edu.au//JJ///www.mquter.qut.edu.au/ vii/NN/vii page/NN/page intentionally/RB/intentionally left/VBN/left blank/NN/blank /./. chapter/NN/chapter 1/CD/1 introduction/NN/introduction 1.1/CD/1.1 what/WP/what this/DT/this book/NN/book is/VBZ/is /,/, and/CC/and what/WP/what it/PRP/it is/VBZ/is n't/RB/n't this/DT/this book/NN/book provides/VBZ/provides implementations/NNS/implementations of/IN/of common/JJ/common and/CC/and uncommon/NN/uncommon algorithms/NNS/algorithms in/IN/in pseudocode/NN/pseudocode which/WDT/which is/VBZ/is language/NN/language independent/NN/independent and/CC/and provides/VBZ/provides for/IN/for easy/JJ/easy porting/NN/porting to/TO/to most/JJS/most imperative/JJ/imperative programming/NN/programming languages/NNP/languages. it/PRP/it is/VBZ/is not/RB/not a/DT/a de/NN/de Â/:/Â ¯/:/¯ nitive/JJ/nitive book/NN/book on/IN/on the/DT/the theory/NN/theory of/IN/of data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms /./. for/IN/for the/DT/the most/JJS/most part/NN/part this/DT/this book/NN/book presents/NNS/presents implementations/NNS/implementations devised/VBD/devised by/IN/by the/DT/the authors/NNS/authors themselves/PRP/themselves based/VBN/based on/IN/on the/DT/the concepts/NNS/concepts by/IN/by which/WDT/which the/DT/the respective/JJ/respective algorithms/NNS/algorithms are/VBP/are based/VBN/based upon/IN/upon so/RB/so it/PRP/it is/VBZ/is more/RBR/more than/IN/than possible/JJ/possible that/IN/that our/PRP$/our implementations/NNS/implementations di/VBP/di Â/:/Â ®/:/® er/NN/er from/IN/from those/DT/those considered/VBN/considered the/DT/the norm/NN/norm /./. you/PRP/you should/MD/should use/VB/use this/DT/this book/NN/book alongside/NN/alongside another/DT/another on/IN/on the/DT/the same/JJ/same subject/NN/subject /,/, but/CC/but one/CD/one that/WDT/that contains/VBZ/contains formal/JJ/formal proofs/NNS/proofs of/IN/of the/DT/the algorithms/NNS/algorithms in/IN/in question/NNP/question. in/IN/in this/DT/this book/NN/book we/PRP/we use/VBP/use the/DT/the abstract/NN/abstract big/JJ/big oh/NN/oh notation/NN/notation to/TO/to depict/VB/depict the/DT/the run/NN/run time/NN/time complexity/NN/complexity of/IN/of algorithms/NNS/algorithms so/IN/so that/IN/that the/DT/the book/NN/book appeals/NNS/appeals to/TO/to a/DT/a larger/JJR/larger audience/NN/audience /./. 1.2/CD/1.2 assumed/VBD/assumed knowledge/NN/knowledge we/PRP/we have/VBP/have written/VBN/written this/DT/this book/NN/book with/IN/with few/JJ/few assumptions/NNS/assumptions of/IN/of the/DT/the reader/NN/reader /,/, but/CC/but some/DT/some have/VBP/have been/VBN/been necessary/JJ/necessary in/IN/in order/NN/order to/TO/to keep/VB/keep the/DT/the book/NN/book as/IN/as concise/NN/concise and/CC/and approachable/JJ/approachable as/IN/as possible/JJ/possible /./. we/PRP/we assume/VBP/assume that/IN/that the/DT/the reader/NN/reader is/VBZ/is familiar/JJ/familiar with/IN/with the/DT/the following/VBG/following /:/: 1/CD/1. big/JJ/big oh/NN/oh notation/NN/notation 2/CD/2. an/DT/an imperative/JJ/imperative programming/NN/programming language/NN/language 3/CD/3. object/NN/object oriented/VBN/oriented concepts/NNS/concepts 1.2.1/CD/1.2.1 big/JJ/big oh/NN/oh notation/NN/notation for/IN/for run/VBN/run time/NN/time complexity/NN/complexity analysis/NN/analysis we/PRP/we use/VBP/use big/JJ/big oh/NN/oh notation/NN/notation extensively/RB/extensively so/RB/so it/PRP/it is/VBZ/is vital/JJ/vital that/IN/that you/PRP/you are/VBP/are familiar/JJ/familiar with/IN/with the/DT/the general/JJ/general concepts/NNS/concepts to/TO/to determine/VB/determine which/WDT/which is/VBZ/is the/DT/the best/JJS/best algorithm/NN/algorithm for/IN/for you/PRP/you in/IN/in certain/JJ/certain scenarios/NNP/scenarios. we/PRP/we have/VBP/have chosen/VBN/chosen to/TO/to use/VB/use big/JJ/big oh/NN/oh notation/NN/notation for/IN/for a/DT/a few/JJ/few reasons/NNS/reasons /,/, the/DT/the most/RBS/most important/JJ/important of/IN/of which/WDT/which is/VBZ/is that/IN/that it/PRP/it provides/VBZ/provides an/DT/an abstract/NN/abstract measurement/NN/measurement by/IN/by which/WDT/which we/PRP/we can/MD/can judge/VB/judge the/DT/the performance/NN/performance of/IN/of algorithms/NNS/algorithms without/IN/without using/VBG/using mathematical/JJ/mathematical proofs/NNS/proofs /./. 1/CD/1 chapter/NN/chapter 1/CD/1. introduction/NN/introduction 2/CD/2 figure/NN/figure 1.1/CD/1.1 /:/: algorithmic/JJ/algorithmic run/NN/run time/NN/time expansion/NN/expansion figure/NN/figure 1.1/CD/1.1 shows/NNS/shows some/DT/some of/IN/of the/DT/the run/NN/run times/VBZ/times to/TO/to demonstrate/VB/demonstrate how/WRB/how important/JJ/important it/PRP/it is/VBZ/is to/TO/to choose/VB/choose an/DT/an e/NN/e Â/:/Â ±/:/± cient/NN/cient algorithm/NNP/algorithm. for/IN/for the/DT/the sanity/NN/sanity of/IN/of our/PRP$/our graph/NN/graph we/PRP/we have/VBP/have omitted/VBN/omitted cubic/JJ/cubic o/NN/o /:/( n3/NNP/n3 /:/) /,/, and/CC/and exponential/JJ/exponential o/NN/o /:/( 2n/CD/2n /CD/) run/VBN/run times/NNP/times. cubic/JJ/cubic and/CC/and exponential/JJ/exponential algorithms/NNS/algorithms should/MD/should only/RB/only ever/RB/ever be/VB/be used/VBN/used for/IN/for very/RB/very small/JJ/small problems/NNS/problems /:/( if/IN/if ever/RB/ever !/./! /:/) ;/:/; avoid/JJ/avoid them/PRP/them if/IN/if feasibly/RB/feasibly possible/JJ/possible /./. the/DT/the following/VBG/following list/NN/list explains/NNS/explains some/DT/some of/IN/of the/DT/the most/RBS/most common/JJ/common big/JJ/big oh/NN/oh notations/NNS/notations /:/: o/NN/o /:/( 1/CD/1 /CD/) constant/JJ/constant /:/: the/DT/the operation/NN/operation does/VBZ/does n't/RB/n't depend/VB/depend on/IN/on the/DT/the size/NN/size of/IN/of its/PRP$/its input/NN/input /,/, e.g/NNP/e.g. adding/NN/adding a/DT/a node/NN/node to/TO/to the/DT/the tail/NN/tail of/IN/of a/DT/a linked/VBN/linked list/NN/list where/WRB/where we/PRP/we always/RB/always maintain/VB/maintain a/DT/a pointer/NN/pointer to/TO/to the/DT/the tail/NN/tail node/NN/node /./. o/NN/o /:/( n/NN/n /:/) linear/JJ/linear /:/: the/DT/the run/NN/run time/NN/time complexity/NN/complexity is/VBZ/is proportionate/JJ/proportionate to/TO/to the/DT/the size/NN/size of/IN/of n/NN/n /./. o/NN/o /:/( log/NN/log n/NN/n /:/) logarithmic/JJ/logarithmic /:/: normally/RB/normally associated/VBN/associated with/IN/with algorithms/NNS/algorithms that/IN/that break/NN/break the/DT/the problem/NN/problem into/IN/into smaller/JJR/smaller chunks/NNS/chunks per/IN/per each/DT/each invocation/NN/invocation /,/, e.g/NNP/e.g. searching/NN/searching a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /./. o/NN/o /:/( n/NN/n log/NN/log n/NN/n /:/) just/RB/just n/VBP/n log/JJ/log n/NN/n /:/: usually/RB/usually associated/VBN/associated with/IN/with an/DT/an algorithm/NN/algorithm that/IN/that breaks/NNS/breaks the/DT/the problem/NN/problem into/IN/into smaller/JJR/smaller chunks/NNS/chunks per/IN/per each/DT/each invocation/NN/invocation /,/, and/CC/and then/RB/then takes/VBZ/takes the/DT/the results/NNS/results of/IN/of these/DT/these smaller/JJR/smaller chunks/NNS/chunks and/CC/and stitches/NNS/stitches them/PRP/them back/RB/back together/RB/together /,/, e.g/NNP/e.g. quick/NN/quick sort/NN/sort /./. o/NN/o /:/( n2/NNP/n2 /:/) quadratic/JJ/quadratic /:/: e.g/NNP/e.g. bubble/JJ/bubble sort/NN/sort /./. o/NN/o /:/( n3/NNP/n3 /:/) cubic/JJ/cubic /:/: very/RB/very rare/JJ/rare /./. o/NN/o /:/( 2n/CD/2n /CD/) exponential/JJ/exponential /:/: incredibly/RB/incredibly rare/JJ/rare /./. if/IN/if you/PRP/you encounter/VBP/encounter either/DT/either of/IN/of the/DT/the latter/NN/latter two/CD/two items/NNS/items /:/( cubic/JJ/cubic and/CC/and exponential/JJ/exponential /NN/) this/DT/this is/VBZ/is really/RB/really a/DT/a signal/NN/signal for/IN/for you/PRP/you to/TO/to review/VB/review the/DT/the design/NN/design of/IN/of your/PRP$/your algorithm/NNP/algorithm. while/IN/while prototyp/NNP/prototyp- ing/NN/ing algorithm/NN/algorithm designs/NNS/designs you/PRP/you may/MD/may just/RB/just have/VB/have the/DT/the intention/NN/intention of/IN/of solving/VBG/solving the/DT/the problem/NN/problem irrespective/NN/irrespective of/IN/of how/WRB/how fast/JJ/fast it/PRP/it works/NNP/works. we/PRP/we would/MD/would strongly/RB/strongly advise/VB/advise that/IN/that you/PRP/you always/RB/always review/VB/review your/PRP$/your algorithm/NN/algorithm design/NN/design and/CC/and optimise/VB/optimise where/WRB/where possible/JJ/possible |/:/| particularly/RB/particularly loops/VBZ/loops chapter/NN/chapter 1/CD/1. introduction/NN/introduction 3/CD/3 and/CC/and recursive/JJ/recursive calls/NNS/calls |/:/| so/RB/so that/IN/that you/PRP/you can/MD/can get/VB/get the/DT/the most/JJS/most e/NN/e Â/:/Â ±/:/± cient/NN/cient run/VBN/run times/NNS/times for/IN/for your/PRP$/your algorithms/NNS/algorithms /./. the/DT/the biggest/JJS/biggest asset/NN/asset that/WDT/that big/JJ/big oh/NN/oh notation/NN/notation gives/VBZ/gives us/PRP/us is/VBZ/is that/IN/that it/PRP/it allows/VBZ/allows us/PRP/us to/TO/to es/NNP/es- sentially/RB/sentially discard/VBD/discard things/NNS/things like/IN/like hardware/NNP/hardware. if/IN/if you/PRP/you have/VBP/have two/CD/two sorting/VBG/sorting algorithms/NNS/algorithms /,/, one/CD/one with/IN/with a/DT/a quadratic/JJ/quadratic run/NN/run time/NN/time /,/, and/CC/and the/DT/the other/JJ/other with/IN/with a/DT/a logarithmic/JJ/logarithmic run/NN/run time/NN/time then/RB/then the/DT/the logarithmic/JJ/logarithmic algorithm/NN/algorithm will/MD/will always/RB/always be/VB/be faster/JJR/faster than/IN/than the/DT/the quadratic/JJ/quadratic one/CD/one when/WRB/when the/DT/the data/NNS/data set/VBD/set becomes/NNS/becomes suitably/RB/suitably large/NNP/large. this/DT/this applies/NNS/applies even/RB/even if/IN/if the/DT/the former/JJ/former is/VBZ/is ran/JJ/ran on/IN/on a/DT/a ma/JJ/ma- chine/NN/chine that/WDT/that is/VBZ/is far/RB/far faster/JJR/faster than/IN/than the/DT/the latter/NNP/latter. why/WRB/why ?/./? because/IN/because big/JJ/big oh/NN/oh notation/NN/notation isolates/VBZ/isolates a/DT/a key/JJ/key factor/NN/factor in/IN/in algorithm/NN/algorithm analysis/NN/analysis /:/: growth/NNP/growth. an/DT/an algorithm/NN/algorithm with/IN/with a/DT/a quadratic/JJ/quadratic run/NN/run time/NN/time grows/VBZ/grows faster/JJR/faster than/IN/than one/CD/one with/IN/with a/DT/a logarithmic/JJ/logarithmic run/NN/run time/NNP/time. it/PRP/it is/VBZ/is generally/RB/generally said/VBD/said at/IN/at some/DT/some point/NN/point as/IN/as n/NN/n !/./! 1/CD/1 the/DT/the logarithmic/JJ/logarithmic algorithm/NN/algorithm will/MD/will become/VB/become faster/JJR/faster than/IN/than the/DT/the quadratic/JJ/quadratic algorithm/NN/algorithm /./. big/JJ/big oh/NN/oh notation/NN/notation also/RB/also acts/VBZ/acts as/IN/as a/DT/a communication/NN/communication tool/NNP/tool. picture/NN/picture the/DT/the scene/NN/scene /:/: you/PRP/you are/VBP/are having/VBG/having a/DT/a meeting/NN/meeting with/IN/with some/DT/some fellow/JJ/fellow developers/NNS/developers within/IN/within your/PRP$/your product/NN/product group/NN/group /./. you/PRP/you are/VBP/are discussing/VBG/discussing prototype/NN/prototype algorithms/NNS/algorithms for/IN/for node/NN/node discovery/NN/discovery in/IN/in massive/JJ/massive networks/NNS/networks /./. several/JJ/several minutes/NNS/minutes elapse/VBP/elapse after/IN/after you/PRP/you and/CC/and two/CD/two others/NNS/others have/VBP/have discussed/VBN/discussed your/PRP$/your respective/JJ/respective algorithms/NNS/algorithms and/CC/and how/WRB/how they/PRP/they work/NNP/work. does/VBZ/does this/DT/this give/JJ/give you/PRP/you a/DT/a good/JJ/good idea/NN/idea of/IN/of how/WRB/how fast/JJ/fast each/DT/each respective/JJ/respective algorithm/NN/algorithm is/VBZ/is ?/./? no/NN/no. the/DT/the result/NN/result of/IN/of such/JJ/such a/DT/a discussion/NN/discussion will/MD/will tell/VB/tell you/PRP/you more/JJR/more about/IN/about the/DT/the high/JJ/high level/NN/level algorithm/NN/algorithm design/NN/design rather/RB/rather than/IN/than its/PRP$/its e/NN/e Â/:/Â ±/:/± ciency/NNP/ciency. replay/NN/replay the/DT/the scene/NN/scene back/RB/back in/IN/in your/PRP$/your head/NN/head /,/, but/CC/but this/DT/this time/NN/time as/IN/as well/RB/well as/IN/as talking/VBG/talking about/IN/about algorithm/NN/algorithm design/NN/design each/DT/each respective/JJ/respective developer/NN/developer states/NNS/states the/DT/the asymptotic/JJ/asymptotic run/NN/run time/NN/time of/IN/of their/PRP$/their algorithm/NNP/algorithm. using/VBG/using the/DT/the latter/NN/latter approach/NN/approach you/PRP/you not/RB/not only/RB/only get/VB/get a/DT/a good/JJ/good general/JJ/general idea/NN/idea about/IN/about the/DT/the algorithm/NN/algorithm design/NN/design /,/, but/CC/but also/RB/also key/JJ/key e/NN/e Â/:/Â ±/:/± ciency/NN/ciency data/NNS/data which/WDT/which allows/VBZ/allows you/PRP/you to/TO/to make/VB/make better/JJR/better choices/NNS/choices when/WRB/when it/PRP/it comes/VBZ/comes to/TO/to selecting/VBG/selecting an/DT/an algorithm/NN/algorithm Â/:/Â ¯/:/¯ t/NN/t for/IN/for purpose/NN/purpose /./. some/DT/some readers/NNS/readers may/MD/may actually/RB/actually work/VB/work in/IN/in a/DT/a product/NN/product group/NN/group where/WRB/where they/PRP/they are/VBP/are given/VBN/given budgets/NNS/budgets per/IN/per feature/NNP/feature. each/DT/each feature/NN/feature holds/NNS/holds with/IN/with it/PRP/it a/DT/a budget/NN/budget that/WDT/that represents/VBZ/represents its/PRP$/its up/JJ/up- permost/NN/permost time/NN/time bound/NNP/bound. if/IN/if you/PRP/you save/VBP/save some/DT/some time/NN/time in/IN/in one/CD/one feature/NN/feature it/PRP/it does/VBZ/does n't/RB/n't necessarily/RB/necessarily give/VB/give you/PRP/you a/DT/a bu/NN/bu Â/:/Â ®/:/® er/NN/er for/IN/for the/DT/the remaining/VBG/remaining features/NNP/features. imagine/NN/imagine you/PRP/you are/VBP/are working/VBG/working on/IN/on an/DT/an application/NN/application /,/, and/CC/and you/PRP/you are/VBP/are in/IN/in the/DT/the team/NN/team that/WDT/that is/VBZ/is developing/VBG/developing the/DT/the routines/NNS/routines that/WDT/that will/MD/will essentially/RB/essentially spin/VB/spin up/RP/up everything/NN/everything that/IN/that is/VBZ/is required/VBN/required when/WRB/when the/DT/the application/NN/application is/VBZ/is started/VBN/started /./. everything/NN/everything is/VBZ/is great/JJ/great until/IN/until your/PRP$/your boss/NN/boss comes/VBZ/comes in/IN/in and/CC/and tells/NNS/tells you/PRP/you that/IN/that the/DT/the start/NN/start up/RP/up time/NN/time should/MD/should not/RB/not exceed/VB/exceed n/NN/n ms/NNP/ms. the/DT/the e/NN/e Â/:/Â ±/:/± ciency/NN/ciency of/IN/of every/DT/every algorithm/NN/algorithm that/IN/that is/VBZ/is invoked/VBN/invoked during/IN/during start/NN/start up/IN/up in/IN/in this/DT/this example/NN/example is/VBZ/is absolutely/RB/absolutely key/JJ/key to/TO/to a/DT/a successful/JJ/successful product/NNP/product. even/RB/even if/IN/if you/PRP/you do/VBP/do n't/RB/n't have/VB/have these/DT/these budgets/NNS/budgets you/PRP/you should/MD/should still/RB/still strive/VB/strive for/IN/for optimal/JJ/optimal solutions/NNS/solutions /./. taking/VBG/taking a/DT/a quantitative/JJ/quantitative approach/NN/approach for/IN/for many/JJ/many software/NN/software development/NN/development properties/NNS/properties will/MD/will make/VB/make you/PRP/you a/DT/a far/RB/far superior/JJ/superior programmer/NN/programmer /:/- measuring/VBG/measuring one/CD/one 's/POS/'s work/NN/work is/VBZ/is critical/JJ/critical to/TO/to success/NN/success /./. 1.2.2/CD/1.2.2 imperative/JJ/imperative programming/NN/programming language/NN/language all/DT/all examples/NNS/examples are/VBP/are given/VBN/given in/IN/in a/DT/a pseudo-imperative/JJ/pseudo-imperative coding/NN/coding format/NN/format and/CC/and so/RB/so the/DT/the reader/NN/reader must/MD/must know/VB/know the/DT/the basics/NNS/basics of/IN/of some/DT/some imperative/JJ/imperative mainstream/NN/mainstream programming/NN/programming language/NN/language to/TO/to port/VB/port the/DT/the examples/NNS/examples e/VBP/e Â/:/Â ®/:/® ectively/RB/ectively /,/, we/PRP/we have/VBP/have written/VBN/written this/DT/this book/NN/book with/IN/with the/DT/the following/VBG/following target/NN/target languages/NNS/languages in/IN/in mind/NN/mind /:/: 1/CD/1. c/NN/c +/:/+ +/:/+ 2/CD/2. c/NN/c #/#/# 3/CD/3. java/NN/java chapter/NN/chapter 1/CD/1. introduction/NN/introduction 4/CD/4 the/DT/the reason/NN/reason that/IN/that we/PRP/we are/VBP/are explicit/JJ/explicit in/IN/in this/DT/this requirement/NN/requirement is/VBZ/is simple/JJ/simple |/NN/| all/DT/all our/PRP$/our imple/JJ/imple- mentations/NNS/mentations are/VBP/are based/VBN/based on/IN/on an/DT/an imperative/JJ/imperative thinking/NN/thinking style/NNP/style. if/IN/if you/PRP/you are/VBP/are a/DT/a functional/JJ/functional programmer/NN/programmer you/PRP/you will/MD/will need/VB/need to/TO/to apply/VB/apply various/JJ/various aspects/NNS/aspects from/IN/from the/DT/the functional/JJ/functional paradigm/NN/paradigm to/TO/to produce/VB/produce e/NN/e Â/:/Â ±/:/± cient/NN/cient solutions/NNS/solutions with/IN/with respect/NN/respect to/TO/to your/PRP$/your functional/JJ/functional language/NN/language whether/IN/whether it/PRP/it be/VB/be haskell/RB/haskell /,/, f/NN/f #/#/# /,/, ocaml/NN/ocaml /,/, etc/NN/etc /./. two/CD/two of/IN/of the/DT/the languages/NNS/languages that/WDT/that we/PRP/we have/VBP/have listed/VBN/listed /-NONE-/( c/NN/c #/#/# and/CC/and java/NN/java /:/) target/NN/target virtual/JJ/virtual machines/NNS/machines which/WDT/which provide/VB/provide various/JJ/various things/NNS/things like/IN/like security/NN/security sand/NN/sand boxing/VBG/boxing /,/, and/CC/and memory/NN/memory management/NN/management via/IN/via garbage/NN/garbage collection/NN/collection algorithms/NNP/algorithms. it/PRP/it is/VBZ/is trivial/JJ/trivial to/TO/to port/VB/port our/PRP$/our imple/JJ/imple- mentations/NNS/mentations to/TO/to these/DT/these languages/NNP/languages. when/WRB/when porting/VBG/porting to/TO/to c/VB/c +/:/+ +/:/+ you/PRP/you must/MD/must remember/VB/remember to/TO/to use/VB/use pointers/NNS/pointers for/IN/for certain/JJ/certain things/NNP/things. for/IN/for example/NN/example /,/, when/WRB/when we/PRP/we describe/VBP/describe a/DT/a linked/VBN/linked list/NN/list node/NN/node as/IN/as having/VBG/having a/DT/a reference/NN/reference to/TO/to the/DT/the next/JJ/next node/NN/node /,/, this/DT/this description/NN/description is/VBZ/is in/IN/in the/DT/the context/NN/context of/IN/of a/DT/a managed/JJ/managed environment/NNP/environment. in/IN/in c/NN/c +/:/+ +/:/+ you/PRP/you should/MD/should interpret/VB/interpret the/DT/the reference/NN/reference as/IN/as a/DT/a pointer/NN/pointer to/TO/to the/DT/the next/JJ/next node/NN/node and/CC/and so/RB/so on/NNP/on. for/IN/for programmers/NNS/programmers who/WP/who have/VBP/have a/DT/a fair/JJ/fair amount/NN/amount of/IN/of experience/NN/experience with/IN/with their/PRP$/their respective/JJ/respective language/NN/language these/DT/these subtleties/NNS/subtleties will/MD/will present/VB/present no/DT/no is/NN/is- sue/NN/sue /,/, which/WDT/which is/VBZ/is why/WRB/why we/PRP/we really/RB/really do/VBP/do emphasise/RB/emphasise that/IN/that the/DT/the reader/NN/reader must/MD/must be/VB/be comfortable/JJ/comfortable with/IN/with at/IN/at least/JJS/least one/CD/one imperative/JJ/imperative language/NN/language in/IN/in order/NN/order to/TO/to successfully/RB/successfully port/VB/port the/DT/the pseudo/NN/pseudo- implementations/NNS/implementations in/IN/in this/DT/this book/NN/book /./. it/PRP/it is/VBZ/is essential/JJ/essential that/IN/that the/DT/the user/NN/user is/VBZ/is familiar/JJ/familiar with/IN/with primitive/JJ/primitive imperative/JJ/imperative language/NN/language constructs/NNS/constructs before/IN/before reading/NN/reading this/DT/this book/NN/book otherwise/NN/otherwise you/PRP/you will/MD/will just/RB/just get/VB/get lost/NNP/lost. some/DT/some algo/NNP/algo- rithms/NNS/rithms presented/VBD/presented in/IN/in this/DT/this book/NN/book can/MD/can be/VB/be confusing/VBG/confusing to/TO/to follow/VB/follow even/RB/even for/IN/for experienced/VBN/experienced programmers/NNS/programmers !/./! 1.2.3/CD/1.2.3 object/NN/object oriented/VBN/oriented concepts/NNS/concepts for/IN/for the/DT/the most/JJS/most part/NN/part this/DT/this book/NN/book does/VBZ/does not/RB/not use/VB/use features/NNS/features that/WDT/that are/VBP/are speci/VBP/speci Â/:/Â ¯/:/¯ c/NN/c to/TO/to any/DT/any one/CD/one language/NNP/language. in/IN/in particular/JJ/particular /,/, we/PRP/we never/RB/never provide/VB/provide data/NNS/data structures/NNS/structures or/CC/or algorithms/NNS/algorithms that/IN/that work/NN/work on/IN/on generic/JJ/generic types/NNS/types |/:/| this/DT/this is/VBZ/is in/IN/in order/NN/order to/TO/to make/VB/make the/DT/the samples/NNS/samples as/IN/as easy/JJ/easy to/TO/to follow/VB/follow as/IN/as possible/NNP/possible. however/RB/however /,/, to/TO/to appreciate/VB/appreciate the/DT/the designs/NNS/designs of/IN/of our/PRP$/our data/NNS/data structures/NNS/structures you/PRP/you will/MD/will need/VB/need to/TO/to be/VB/be familiar/JJ/familiar with/IN/with the/DT/the following/VBG/following object/NN/object oriented/VBN/oriented /-NONE-/( oo/RB/oo /:/) concepts/NNS/concepts /:/: 1/CD/1. inheritance/NN/inheritance 2/CD/2. encapsulation/NN/encapsulation 3/CD/3. polymorphism/NN/polymorphism this/DT/this is/VBZ/is especially/RB/especially important/JJ/important if/IN/if you/PRP/you are/VBP/are planning/VBG/planning on/IN/on looking/VBG/looking at/IN/at the/DT/the c/NN/c #/#/# target/NN/target that/IN/that we/PRP/we have/VBP/have implemented/VBN/implemented /-NONE-/( more/RBR/more on/IN/on that/DT/that in/IN/in x1.7/NNP/x1.7 /NNP/) which/WDT/which makes/VBZ/makes extensive/JJ/extensive use/NN/use of/IN/of the/DT/the oo/NN/oo concepts/VBZ/concepts listed/VBN/listed above/NNP/above. as/IN/as a/DT/a Â/NN/Â ¯/:/¯ nal/JJ/nal note/NN/note it/PRP/it is/VBZ/is also/RB/also desirable/JJ/desirable that/IN/that the/DT/the reader/NN/reader is/VBZ/is familiar/JJ/familiar with/IN/with interfaces/NNS/interfaces as/IN/as the/DT/the c/NN/c #/#/# target/NN/target uses/NNS/uses interfaces/NNS/interfaces throughout/IN/throughout the/DT/the sorting/NN/sorting algorithms/NNS/algorithms /./. 1.3/CD/1.3 pseudocode/NN/pseudocode throughout/IN/throughout this/DT/this book/NN/book we/PRP/we use/VBP/use pseudocode/NN/pseudocode to/TO/to describe/VB/describe our/PRP$/our solutions/NNP/solutions. for/IN/for the/DT/the most/JJS/most part/NN/part interpreting/VBG/interpreting the/DT/the pseudocode/NN/pseudocode is/VBZ/is trivial/JJ/trivial as/IN/as it/PRP/it looks/VBZ/looks very/RB/very much/JJ/much like/IN/like a/DT/a more/RBR/more abstract/JJ/abstract c/NN/c +/:/+ +/:/+ /,/, or/CC/or c/NN/c #/#/# /,/, but/CC/but there/EX/there are/VBP/are a/DT/a few/JJ/few things/NNS/things to/TO/to point/VB/point out/RP/out /:/: 1/CD/1. pre-conditions/NNS/pre-conditions should/MD/should always/RB/always be/VB/be enforced/VBN/enforced 2/CD/2. post-conditions/NNS/post-conditions represent/VBP/represent the/DT/the result/NN/result of/IN/of applying/NN/applying algorithm/NN/algorithm a/DT/a to/TO/to data/NNS/data struc/-NONE-/struc- ture/NN/ture d/NN/d chapter/NN/chapter 1/CD/1. introduction/NN/introduction 5/CD/5 3/CD/3. the/DT/the type/NN/type of/IN/of parameters/NNS/parameters is/VBZ/is inferred/VBN/inferred 4/CD/4. all/DT/all primitive/JJ/primitive language/NN/language constructs/NNS/constructs are/VBP/are explicitly/RB/explicitly begun/VBN/begun and/CC/and ended/VBD/ended if/IN/if an/DT/an algorithm/NN/algorithm has/VBZ/has a/DT/a return/NN/return type/NN/type it/PRP/it will/MD/will often/RB/often be/VB/be presented/VBN/presented in/IN/in the/DT/the post/NN/post- condition/NN/condition /,/, but/CC/but where/WRB/where the/DT/the return/NN/return type/NN/type is/VBZ/is su/NN/su Â/:/Â ±/:/± ciently/RB/ciently obvious/JJ/obvious it/PRP/it may/MD/may be/VB/be omitted/VBN/omitted for/IN/for the/DT/the sake/NN/sake of/IN/of brevity/NN/brevity /./. most/JJS/most algorithms/NNS/algorithms in/IN/in this/DT/this book/NN/book require/NN/require parameters/NNS/parameters /,/, and/CC/and because/IN/because we/PRP/we assign/VBP/assign no/DT/no explicit/NN/explicit type/NN/type to/TO/to those/DT/those parameters/NNS/parameters the/DT/the type/NN/type is/VBZ/is inferred/VBN/inferred from/IN/from the/DT/the contexts/NNS/contexts in/IN/in which/WDT/which it/PRP/it is/VBZ/is used/VBN/used /,/, and/CC/and the/DT/the operations/NNS/operations performed/VBD/performed upon/IN/upon it/NNP/it. additionally/RB/additionally /,/, the/DT/the name/NN/name of/IN/of the/DT/the parameter/NN/parameter usually/RB/usually acts/VBZ/acts as/IN/as the/DT/the biggest/JJS/biggest clue/NN/clue to/TO/to its/PRP$/its type/NNP/type. for/IN/for instance/NN/instance n/NN/n is/VBZ/is a/DT/a pseudo-name/JJ/pseudo-name for/IN/for a/DT/a number/NN/number and/CC/and so/RB/so you/PRP/you can/MD/can assume/VB/assume unless/IN/unless otherwise/NN/otherwise stated/VBD/stated that/IN/that n/NN/n translates/NNS/translates to/TO/to an/DT/an integer/NN/integer that/IN/that has/VBZ/has the/DT/the same/JJ/same number/NN/number of/IN/of bits/NNS/bits as/IN/as a/DT/a word/NN/word on/IN/on a/DT/a 32/CD/32 bit/NN/bit machine/NN/machine /,/, similarly/RB/similarly l/JJ/l is/VBZ/is a/DT/a pseudo-name/JJ/pseudo-name for/IN/for a/DT/a list/NN/list where/WRB/where a/DT/a list/NN/list is/VBZ/is a/DT/a resizeable/JJ/resizeable array/NN/array /:/( e.g/NNP/e.g. a/DT/a vector/NN/vector /:/) /./. the/DT/the last/JJ/last major/JJ/major point/NN/point of/IN/of reference/NN/reference is/VBZ/is that/IN/that we/PRP/we always/RB/always explicitly/RB/explicitly end/NN/end a/DT/a language/NN/language construct/NNP/construct. for/IN/for instance/NN/instance if/IN/if we/PRP/we wish/VBP/wish to/TO/to close/VB/close the/DT/the scope/NN/scope of/IN/of a/DT/a for/IN/for loop/NN/loop we/PRP/we will/MD/will explicitly/RB/explicitly state/VB/state end/NN/end for/IN/for rather/RB/rather than/IN/than leaving/VBG/leaving the/DT/the interpretation/NN/interpretation of/IN/of when/WRB/when scopes/NNS/scopes are/VBP/are closed/VBN/closed to/TO/to the/DT/the reader/NNP/reader. while/IN/while implicit/NN/implicit scope/NN/scope closure/NN/closure works/NNS/works well/RB/well in/IN/in simple/JJ/simple code/NN/code /,/, in/IN/in complex/JJ/complex cases/NNS/cases it/PRP/it can/MD/can lead/VB/lead to/TO/to ambiguity/NN/ambiguity /./. the/DT/the pseudocode/NN/pseudocode style/NN/style that/WDT/that we/PRP/we use/VBP/use within/IN/within this/DT/this book/NN/book is/VBZ/is rather/RB/rather straightforward/JJ/straightforward /./. all/DT/all algorithms/NNS/algorithms start/VBP/start with/IN/with a/DT/a simple/JJ/simple algorithm/NN/algorithm signature/NN/signature /,/, e.g/JJ/e.g /./. 1/CD/1 /CD/) algorithm/NN/algorithm algorithmname/NN/algorithmname /:/( arg1/NNP/arg1 /,/, arg2/NNP/arg2 /,/, /:/... /,/, argn/NN/argn /:/) 2/CD/2 /CD/) /:/.. /./. n/NN/n /:/) end/NN/end algorithmname/NN/algorithmname immediately/RB/immediately after/IN/after the/DT/the algorithm/NN/algorithm signature/NN/signature we/PRP/we list/VBP/list any/DT/any pre/NN/pre or/CC/or post/NN/post condi/NN/condi- tions/NNS/tions /./. 1/CD/1 /CD/) algorithm/NN/algorithm algorithmname/NN/algorithmname /:/( n/NN/n /:/) 2/CD/2 /CD/) pre/NN/pre /:/: n/NN/n is/VBZ/is the/DT/the value/NN/value to/TO/to compute/VB/compute the/DT/the factorial/JJ/factorial of/IN/of 3/CD/3 /CD/) n/NN/n Â/:/Â ¸/:/¸ 0/-NONE-/0 4/CD/4 /:/) post/NN/post /:/: the/DT/the factorial/JJ/factorial of/IN/of n/NN/n has/VBZ/has been/VBN/been computed/VBN/computed 5/CD/5 /CD/) ///CD/// /:/.. /./. n/NN/n /:/) end/NN/end algorithmname/NN/algorithmname the/DT/the example/NN/example above/IN/above describes/NNS/describes an/DT/an algorithm/NN/algorithm by/IN/by the/DT/the name/NN/name of/IN/of algorithmname/NN/algorithmname /,/, which/WDT/which takes/VBZ/takes a/DT/a single/JJ/single numeric/JJ/numeric parameter/NN/parameter n/NNP/n. the/DT/the pre/NN/pre and/CC/and post/NN/post conditions/NNS/conditions follow/VBP/follow the/DT/the algorithm/NN/algorithm signature/NN/signature ;/:/; you/PRP/you should/MD/should always/RB/always enforce/VB/enforce the/DT/the pre-conditions/NNS/pre-conditions of/IN/of an/DT/an algorithm/NN/algorithm when/WRB/when porting/VBG/porting them/PRP/them to/TO/to your/PRP$/your language/NN/language of/IN/of choice/NN/choice /./. normally/RB/normally what/WP/what is/VBZ/is listed/VBN/listed as/RB/as a/DT/a pre-conidition/NN/pre-conidition is/VBZ/is critical/JJ/critical to/TO/to the/DT/the algorithms/NNS/algorithms opera/-NONE-/opera- tion/NNP/tion. this/DT/this may/MD/may cover/VB/cover things/NNS/things like/IN/like the/DT/the actual/JJ/actual parameter/NN/parameter not/RB/not being/VBG/being null/RB/null /,/, or/CC/or that/IN/that the/DT/the collection/NN/collection passed/VBD/passed in/IN/in must/NN/must contain/NN/contain at/IN/at least/JJS/least n/NN/n items/NNP/items. the/DT/the post-condition/NN/post-condition mainly/RB/mainly describes/VBZ/describes the/DT/the e/NN/e Â/:/Â ®/:/® ect/NN/ect of/IN/of the/DT/the algorithms/NNS/algorithms operation/NNP/operation. an/DT/an example/NN/example of/IN/of a/DT/a post-condition/NN/post-condition might/MD/might be/VB/be \/:/\ the/DT/the list/NN/list has/VBZ/has been/VBN/been sorted/VBN/sorted in/IN/in ascending/NN/ascending order/NN/order "/:/" because/IN/because everything/NN/everything we/PRP/we describe/VBP/describe is/VBZ/is language/NN/language independent/NN/independent you/PRP/you will/MD/will need/VB/need to/TO/to make/VB/make your/PRP$/your own/JJ/own mind/NN/mind up/IN/up on/IN/on how/WRB/how to/TO/to best/JJS/best handle/NN/handle pre-conditions/NNP/pre-conditions. for/IN/for example/NN/example /,/, in/IN/in the/DT/the c/NN/c #/#/# target/NN/target we/PRP/we have/VBP/have implemented/VBN/implemented /,/, we/PRP/we consider/VBP/consider non-conformance/JJ/non-conformance to/TO/to pre/NNP/pre- conditions/NNS/conditions to/TO/to be/VB/be exceptional/JJ/exceptional cases/NNP/cases. we/PRP/we provide/VBP/provide a/DT/a message/NN/message in/IN/in the/DT/the exception/NN/exception to/TO/to tell/VB/tell the/DT/the caller/NN/caller why/WRB/why the/DT/the algorithm/NN/algorithm has/VBZ/has failed/VBN/failed to/TO/to execute/VB/execute normally/RB/normally /./. chapter/NN/chapter 1/CD/1. introduction/NN/introduction 6/CD/6 1.4/CD/1.4 tips/NNS/tips for/IN/for working/VBG/working through/IN/through the/DT/the examples/NNS/examples as/IN/as with/IN/with most/JJS/most books/NNS/books you/PRP/you get/VBP/get out/RP/out what/WP/what you/PRP/you put/VBD/put in/RP/in and/CC/and so/RB/so we/PRP/we recommend/VBP/recommend that/IN/that in/IN/in order/NN/order to/TO/to get/VB/get the/DT/the most/JJS/most out/RP/out of/IN/of this/DT/this book/NN/book you/PRP/you work/VB/work through/IN/through each/DT/each algorithm/NN/algorithm with/IN/with a/DT/a pen/JJ/pen and/CC/and paper/NN/paper to/TO/to track/VB/track things/NNS/things like/IN/like variable/JJ/variable names/NNS/names /,/, recursive/JJ/recursive calls/NNS/calls etc/VBP/etc /./. the/DT/the best/JJS/best way/NN/way to/TO/to work/VB/work through/IN/through algorithms/NNS/algorithms is/VBZ/is to/TO/to set/VB/set up/RP/up a/DT/a table/JJ/table /,/, and/CC/and in/IN/in that/DT/that table/NN/table give/VBP/give each/DT/each variable/JJ/variable its/PRP$/its own/JJ/own column/NN/column and/CC/and continuously/RB/continuously update/JJ/update these/DT/these columns/NNS/columns /./. this/DT/this will/MD/will help/VB/help you/PRP/you keep/VB/keep track/NN/track of/IN/of and/CC/and visualise/VB/visualise the/DT/the mutations/NNS/mutations that/WDT/that are/VBP/are occurring/VBG/occurring throughout/IN/throughout the/DT/the algorithm/NNP/algorithm. often/RB/often while/IN/while working/VBG/working through/IN/through algorithms/NNS/algorithms in/IN/in such/JJ/such a/DT/a way/NN/way you/PRP/you can/MD/can intuitively/RB/intuitively map/VB/map relationships/NNS/relationships between/IN/between data/NNS/data structures/NNS/structures rather/RB/rather than/IN/than trying/VBG/trying to/TO/to work/VB/work out/RP/out a/DT/a few/JJ/few values/NNS/values on/IN/on paper/NN/paper and/CC/and the/DT/the rest/NN/rest in/IN/in your/PRP$/your head/NNP/head. we/PRP/we suggest/VBP/suggest you/PRP/you put/VBD/put everything/VBG/everything on/IN/on paper/NN/paper irrespective/JJ/irrespective of/IN/of how/WRB/how trivial/JJ/trivial some/DT/some variables/NNS/variables and/CC/and calculations/NNS/calculations may/MD/may be/VB/be so/RB/so that/IN/that you/PRP/you always/RB/always have/VBP/have a/DT/a point/NN/point of/IN/of reference/NN/reference /./. when/WRB/when dealing/VBG/dealing with/IN/with recursive/JJ/recursive algorithm/NN/algorithm traces/NNS/traces we/PRP/we recommend/VBP/recommend you/PRP/you do/VBP/do the/DT/the same/JJ/same as/IN/as the/DT/the above/NN/above /,/, but/CC/but also/RB/also have/VBP/have a/DT/a table/JJ/table that/IN/that records/NNS/records function/NN/function calls/NNS/calls and/CC/and who/WP/who they/PRP/they return/VBP/return to/NNP/to. this/DT/this approach/NN/approach is/VBZ/is a/DT/a far/RB/far cleaner/JJR/cleaner way/NN/way than/IN/than drawing/VBG/drawing out/IN/out an/DT/an elaborate/JJ/elaborate map/NN/map of/IN/of function/NN/function calls/NNS/calls with/IN/with arrows/NNS/arrows to/TO/to one/CD/one another/DT/another /,/, which/WDT/which gets/NNS/gets large/VBP/large quickly/RB/quickly and/CC/and simply/RB/simply makes/VBZ/makes things/NNS/things more/JJR/more complex/JJ/complex to/TO/to follow/NNP/follow. track/NN/track everything/NN/everything in/IN/in a/DT/a simple/JJ/simple and/CC/and systematic/JJ/systematic way/NN/way to/TO/to make/VB/make your/PRP$/your time/NN/time studying/VBG/studying the/DT/the implementations/NNS/implementations far/RB/far easier/JJR/easier /./. 1.5/CD/1.5 book/NN/book outline/NN/outline we/PRP/we have/VBP/have split/VBN/split this/DT/this book/NN/book into/IN/into two/CD/two parts/NNS/parts /:/: part/NN/part 1/CD/1 /:/: provides/NNS/provides discussion/NN/discussion and/CC/and pseudo-implementations/NNS/pseudo-implementations of/IN/of common/JJ/common and/CC/and uncom/JJ/uncom- mon/NN/mon data/NNS/data structures/NNS/structures ;/:/; and/CC/and part/NN/part 2/CD/2 /:/: provides/NNS/provides algorithms/NNS/algorithms of/IN/of varying/VBG/varying purposes/NNS/purposes from/IN/from sorting/VBG/sorting to/TO/to string/VBG/string operations/NNS/operations /./. the/DT/the reader/NN/reader does/VBZ/does n't/RB/n't have/VB/have to/TO/to read/VB/read the/DT/the book/NN/book sequentially/RB/sequentially from/IN/from beginning/NN/beginning to/TO/to end/VB/end /:/: chapters/NNS/chapters can/MD/can be/VB/be read/VBN/read independently/RB/independently from/IN/from one/CD/one another/NNP/another. we/PRP/we suggest/VBP/suggest that/IN/that in/IN/in part/NN/part 1/CD/1 you/PRP/you read/VBP/read each/DT/each chapter/NN/chapter in/IN/in its/PRP$/its entirety/NN/entirety /,/, but/CC/but in/IN/in part/NN/part 2/CD/2 you/PRP/you can/MD/can get/VB/get away/RB/away with/IN/with just/RB/just reading/VBG/reading the/DT/the section/NN/section of/IN/of a/DT/a chapter/NN/chapter that/WDT/that describes/VBZ/describes the/DT/the algorithm/NN/algorithm you/PRP/you are/VBP/are interested/JJ/interested in/IN/in /./. each/DT/each of/IN/of the/DT/the chapters/NNS/chapters on/IN/on data/NNS/data structures/NNS/structures present/VBP/present initially/RB/initially the/DT/the algorithms/NNS/algorithms con/-NONE-/con- cerned/VBN/cerned with/IN/with /:/: 1/CD/1. insertion/NN/insertion 2/CD/2. deletion/NN/deletion 3/CD/3. searching/VBG/searching the/DT/the previous/JJ/previous list/NN/list represents/NNS/represents what/WP/what we/PRP/we believe/VBP/believe in/IN/in the/DT/the vast/JJ/vast majority/NN/majority of/IN/of cases/NNS/cases to/TO/to be/VB/be the/DT/the most/JJS/most important/JJ/important for/IN/for each/DT/each respective/JJ/respective data/NNS/data structure/NN/structure /./. for/IN/for all/DT/all readers/NNS/readers we/PRP/we recommend/VBP/recommend that/IN/that before/IN/before looking/VBG/looking at/IN/at any/DT/any algorithm/NN/algorithm you/PRP/you quickly/RB/quickly look/VBP/look at/IN/at appendix/NN/appendix e/NN/e which/WDT/which contains/VBZ/contains a/DT/a table/JJ/table listing/NN/listing the/DT/the various/JJ/various symbols/NNS/symbols used/VBN/used within/IN/within our/PRP$/our algorithms/NNS/algorithms and/CC/and their/PRP$/their meaning/NNP/meaning. one/CD/one keyword/NN/keyword that/WDT/that we/PRP/we would/MD/would like/VB/like to/TO/to point/VB/point out/RP/out here/RB/here is/VBZ/is yield/NNP/yield. you/PRP/you can/MD/can think/VB/think of/IN/of yield/NN/yield in/IN/in the/DT/the same/JJ/same light/NN/light as/IN/as return/NN/return /./. the/DT/the return/NN/return keyword/NN/keyword causes/NNS/causes the/DT/the method/NN/method to/TO/to exit/VB/exit and/CC/and returns/NNS/returns control/NN/control to/TO/to the/DT/the caller/NN/caller /,/, whereas/VBZ/whereas yield/NN/yield returns/NNS/returns each/DT/each value/NN/value to/TO/to the/DT/the caller/NNP/caller. with/IN/with yield/NN/yield control/NN/control only/RB/only returns/VBZ/returns to/TO/to the/DT/the caller/NN/caller when/WRB/when all/DT/all values/NNS/values to/TO/to return/VB/return to/TO/to the/DT/the caller/NN/caller have/VBP/have been/VBN/been exhausted/VBN/exhausted /./. chapter/NN/chapter 1/CD/1. introduction/NN/introduction 7/CD/7 1.6/CD/1.6 testing/NN/testing all/DT/all the/DT/the data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms have/VBP/have been/VBN/been tested/VBN/tested using/VBG/using a/DT/a minimised/VBN/minimised test/NN/test driven/RB/driven development/NN/development style/NN/style on/IN/on paper/NN/paper to/TO/to Â/VB/Â °/:/° esh/JJ/esh out/IN/out the/DT/the pseudocode/NN/pseudocode algorithm/NNP/algorithm. we/PRP/we then/RB/then transcribe/VBP/transcribe these/DT/these tests/NNS/tests into/IN/into unit/NN/unit tests/NNS/tests satisfying/VBG/satisfying them/PRP/them one/CD/one by/IN/by one/NNP/one. when/WRB/when all/DT/all the/DT/the test/NN/test cases/NNS/cases have/VBP/have been/VBN/been progressively/RB/progressively satis/VBZ/satis Â/:/Â ¯/:/¯ ed/VBD/ed we/PRP/we consider/VBP/consider that/IN/that algorithm/NN/algorithm suitably/RB/suitably tested/VBN/tested /./. for/IN/for the/DT/the most/JJS/most part/NN/part algorithms/NNS/algorithms have/VBP/have fairly/RB/fairly obvious/JJ/obvious cases/NNS/cases which/WDT/which need/VBP/need to/TO/to be/VB/be satis/NNS/satis Â/-NONE-/Â ¯/:/¯ ed/NNP/ed. some/DT/some however/RB/however have/VBP/have many/JJ/many areas/NNS/areas which/WDT/which can/MD/can prove/VB/prove to/TO/to be/VB/be more/JJR/more complex/JJ/complex to/TO/to satisfy/NNP/satisfy. with/IN/with such/JJ/such algorithms/NNS/algorithms we/PRP/we will/MD/will point/VB/point out/RP/out the/DT/the test/NN/test cases/NNS/cases which/WDT/which are/VBP/are tricky/JJ/tricky and/CC/and the/DT/the corresponding/NN/corresponding portions/NNS/portions of/IN/of pseudocode/NN/pseudocode within/IN/within the/DT/the algorithm/NN/algorithm that/IN/that satisfy/NN/satisfy that/WDT/that respective/JJ/respective case/NN/case /./. as/IN/as you/PRP/you become/VBP/become more/RBR/more familiar/JJ/familiar with/IN/with the/DT/the actual/JJ/actual problem/NN/problem you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to intuitively/RB/intuitively identify/VB/identify areas/NNS/areas which/WDT/which may/MD/may cause/VB/cause problems/NNS/problems for/IN/for your/PRP$/your algorithms/NNS/algorithms imple/-NONE-/imple- mentation/NNP/mentation. this/DT/this in/IN/in some/DT/some cases/NNS/cases will/MD/will yield/VB/yield an/DT/an overwhelming/NN/overwhelming list/NN/list of/IN/of concerns/NNS/concerns which/WDT/which will/MD/will hinder/VB/hinder your/PRP$/your ability/NN/ability to/TO/to design/VB/design an/DT/an algorithm/NN/algorithm greatly/NNP/greatly. when/WRB/when you/PRP/you are/VBP/are bom/-NONE-/bom- barded/VBN/barded with/IN/with such/JJ/such a/DT/a vast/JJ/vast amount/NN/amount of/IN/of concerns/NNS/concerns look/VBP/look at/IN/at the/DT/the overall/JJ/overall problem/NN/problem again/RB/again and/CC/and sub-divide/JJ/sub-divide the/DT/the problem/NN/problem into/IN/into smaller/JJR/smaller problems/NNP/problems. solving/NN/solving the/DT/the smaller/JJR/smaller problems/NNS/problems and/CC/and then/RB/then composing/VBG/composing them/PRP/them is/VBZ/is a/DT/a far/RB/far easier/JJR/easier task/NN/task than/IN/than clouding/NN/clouding your/PRP$/your mind/NN/mind with/IN/with too/RB/too many/JJ/many little/JJ/little details/NNS/details /./. the/DT/the only/JJ/only type/NN/type of/IN/of testing/NN/testing that/IN/that we/PRP/we use/VBP/use in/IN/in the/DT/the implementation/NN/implementation of/IN/of all/DT/all that/DT/that is/VBZ/is provided/VBN/provided in/IN/in this/DT/this book/NN/book are/VBP/are unit/NN/unit tests/NNP/tests. because/IN/because unit/NN/unit tests/NNS/tests contribute/VBP/contribute such/JJ/such a/DT/a core/NN/core piece/NN/piece of/IN/of creating/VBG/creating somewhat/RB/somewhat more/JJR/more stable/JJ/stable software/NN/software we/PRP/we invite/VBP/invite the/DT/the reader/NN/reader to/TO/to view/VB/view appendix/NN/appendix d/NN/d which/WDT/which describes/VBZ/describes testing/NN/testing in/IN/in more/JJR/more depth/NN/depth /./. 1.7/CD/1.7 where/WRB/where can/MD/can i/VB/i get/VB/get the/DT/the code/NN/code ?/./? this/DT/this book/NN/book does/VBZ/does n't/RB/n't provide/VB/provide any/DT/any code/NN/code speci/NN/speci Â/:/Â ¯/:/¯ cally/RB/cally aligned/VBN/aligned with/IN/with it/PRP/it /,/, however/RB/however we/PRP/we do/VBP/do actively/RB/actively maintain/VB/maintain an/DT/an open/JJ/open source/NN/source project1/NNP/project1 that/IN/that houses/NNS/houses a/DT/a c/NN/c #/#/# implementation/NN/implementation of/IN/of all/DT/all the/DT/the pseudocode/NN/pseudocode listed/NNP/listed. the/DT/the project/NN/project is/VBZ/is named/VBN/named data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms /:/( dsa/NN/dsa /:/) and/CC/and can/MD/can be/VB/be found/VBN/found at/IN/at http/NN/http /:/: //codeplex.com/dsa/JJ///codeplex.com/dsa /./. 1.8/CD/1.8 final/JJ/final messages/NNS/messages we/PRP/we have/VBP/have just/RB/just a/DT/a few/JJ/few Â/NN/Â ¯/:/¯ nal/JJ/nal messages/NNS/messages to/TO/to the/DT/the reader/NN/reader that/IN/that we/PRP/we hope/VBP/hope you/PRP/you digest/JJS/digest before/IN/before you/PRP/you embark/VBP/embark on/IN/on reading/NN/reading this/DT/this book/NN/book /:/: 1/CD/1. understand/NN/understand how/WRB/how the/DT/the algorithm/NN/algorithm works/VBZ/works Â/:/Â ¯/:/¯ rst/JJ/rst in/IN/in an/DT/an abstract/NN/abstract sense/NN/sense ;/:/; and/CC/and 2/CD/2. always/RB/always work/VB/work through/IN/through the/DT/the algorithms/NNS/algorithms on/IN/on paper/NN/paper to/TO/to understand/VB/understand how/WRB/how they/PRP/they achieve/VBP/achieve their/PRP$/their outcome/NN/outcome if/IN/if you/PRP/you always/RB/always follow/VBP/follow these/DT/these key/JJ/key points/NNS/points /,/, you/PRP/you will/MD/will get/VB/get the/DT/the most/JJS/most out/RP/out of/IN/of this/DT/this book/NN/book /./. 1all/CD/1all readers/NNS/readers are/VBP/are encouraged/VBN/encouraged to/TO/to provide/VB/provide suggestions/NNS/suggestions /,/, feature/NN/feature requests/NNS/requests /,/, and/CC/and bugs/NNS/bugs so/RB/so we/PRP/we can/MD/can further/RB/further improve/VB/improve our/PRP$/our implementations/NNS/implementations /./. part/NN/part i/PRP/i data/VBP/data structures/NNS/structures 8/CD/8 chapter/NN/chapter 2/CD/2 linked/VBN/linked lists/NNS/lists linked/VBN/linked lists/NNS/lists can/MD/can be/VB/be thought/VBN/thought of/IN/of from/IN/from a/DT/a high/JJ/high level/NN/level perspective/NN/perspective as/IN/as being/VBG/being a/DT/a series/NN/series of/IN/of nodes/NNP/nodes. each/DT/each node/NN/node has/VBZ/has at/IN/at least/JJS/least a/DT/a single/JJ/single pointer/NN/pointer to/TO/to the/DT/the next/JJ/next node/NN/node /,/, and/CC/and in/IN/in the/DT/the last/JJ/last node/NN/node 's/POS/'s case/NN/case a/DT/a null/NN/null pointer/NN/pointer representing/VBG/representing that/IN/that there/EX/there are/VBP/are no/DT/no more/RBR/more nodes/VBZ/nodes in/IN/in the/DT/the linked/VBN/linked list/NN/list /./. in/IN/in dsa/NN/dsa our/PRP$/our implementations/NNS/implementations of/IN/of linked/VBN/linked lists/NNS/lists always/RB/always maintain/VB/maintain head/NN/head and/CC/and tail/NN/tail pointers/NNS/pointers so/RB/so that/IN/that insertion/NN/insertion at/IN/at either/DT/either the/DT/the head/NN/head or/CC/or tail/NN/tail of/IN/of the/DT/the list/NN/list is/VBZ/is a/DT/a constant/JJ/constant time/NN/time operation/NNP/operation. random/NN/random insertion/NN/insertion is/VBZ/is excluded/VBN/excluded from/IN/from this/DT/this and/CC/and will/MD/will be/VB/be a/DT/a linear/JJ/linear operation/NNP/operation. as/IN/as such/JJ/such /,/, linked/VBN/linked lists/NNS/lists in/IN/in dsa/NN/dsa have/VBP/have the/DT/the following/VBG/following characteristics/NNS/characteristics /:/: 1/CD/1. insertion/NN/insertion is/VBZ/is o/RB/o /:/( 1/CD/1 /CD/) 2/CD/2. deletion/NN/deletion is/VBZ/is o/RB/o /:/( n/NN/n /:/) 3/CD/3. searching/VBG/searching is/VBZ/is o/RB/o /:/( n/NN/n /:/) out/IN/out of/IN/of the/DT/the three/CD/three operations/NNS/operations the/DT/the one/CD/one that/WDT/that stands/VBZ/stands out/RP/out is/VBZ/is that/IN/that of/IN/of insertion/NNP/insertion. in/IN/in dsa/NN/dsa we/PRP/we chose/VBP/chose to/TO/to always/RB/always maintain/VB/maintain pointers/NNS/pointers /:/( or/CC/or more/JJR/more aptly/RB/aptly references/NNS/references /:/) to/TO/to the/DT/the node/NN/node /:/( s/NNS/s /VBP/) at/IN/at the/DT/the head/NN/head and/CC/and tail/NN/tail of/IN/of the/DT/the linked/VBN/linked list/NN/list and/CC/and so/RB/so performing/VBG/performing a/DT/a traditional/JJ/traditional insertion/NN/insertion to/TO/to either/DT/either the/DT/the front/NN/front or/CC/or back/RB/back of/IN/of the/DT/the linked/VBN/linked list/NN/list is/VBZ/is an/DT/an o/NN/o /:/( 1/CD/1 /CD/) operation/NNP/operation. an/DT/an exception/NN/exception to/TO/to this/DT/this rule/NN/rule is/VBZ/is performing/VBG/performing an/DT/an insertion/NN/insertion before/IN/before a/DT/a node/NN/node that/WDT/that is/VBZ/is neither/DT/neither the/DT/the head/NN/head nor/CC/nor tail/NN/tail in/IN/in a/DT/a singly/RB/singly linked/VBN/linked list/NNP/list. when/WRB/when the/DT/the node/NN/node we/PRP/we are/VBP/are inserting/VBG/inserting before/IN/before is/VBZ/is somewhere/RB/somewhere in/IN/in the/DT/the middle/NN/middle of/IN/of the/DT/the linked/VBN/linked list/NN/list /:/( known/VBN/known as/IN/as random/NN/random insertion/NN/insertion /:/) the/DT/the complexity/NN/complexity is/VBZ/is o/RB/o /:/( n/NN/n /:/) /./. in/IN/in order/NN/order to/TO/to add/VB/add before/IN/before the/DT/the designated/VBN/designated node/NN/node we/PRP/we need/VBP/need to/TO/to traverse/VB/traverse the/DT/the linked/VBN/linked list/NN/list to/TO/to Â/VB/Â ¯/:/¯ nd/NN/nd that/IN/that node/NN/node 's/POS/'s current/JJ/current predecessor/NNP/predecessor. this/DT/this traversal/NN/traversal yields/VBZ/yields an/DT/an o/NN/o /:/( n/NN/n /:/) run/VBN/run time/NN/time /./. this/DT/this data/NN/data structure/NN/structure is/VBZ/is trivial/JJ/trivial /,/, but/CC/but linked/VBD/linked lists/NNS/lists have/VBP/have a/DT/a few/JJ/few key/JJ/key points/NNS/points which/WDT/which at/IN/at times/NNS/times make/VBP/make them/PRP/them very/RB/very attractive/JJ/attractive /:/: 1/CD/1. the/DT/the list/NN/list is/VBZ/is dynamically/RB/dynamically resized/VBN/resized /,/, thus/RB/thus it/PRP/it incurs/VBZ/incurs no/DT/no copy/NN/copy penalty/NN/penalty like/IN/like an/DT/an array/NN/array or/CC/or vector/NN/vector would/MD/would eventually/RB/eventually incur/VB/incur ;/:/; and/CC/and 2/CD/2. insertion/NN/insertion is/VBZ/is o/RB/o /:/( 1/CD/1 /CD/) /./. 2.1/CD/2.1 singly/RB/singly linked/VBN/linked list/NN/list singly/RB/singly linked/VBN/linked lists/NNS/lists are/VBP/are one/CD/one of/IN/of the/DT/the most/RBS/most primitive/JJ/primitive data/NNS/data structures/NNS/structures you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd in/IN/in this/DT/this book/NNP/book. each/DT/each node/NN/node that/IN/that makes/VBZ/makes up/RP/up a/DT/a singly/RB/singly linked/VBN/linked list/NN/list consists/NNS/consists of/IN/of a/DT/a value/NN/value /,/, and/CC/and a/DT/a reference/NN/reference to/TO/to the/DT/the next/JJ/next node/NN/node /:/( if/IN/if any/DT/any /NN/) in/IN/in the/DT/the list/NN/list /./. 9/CD/9 chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 10/CD/10 figure/NN/figure 2.1/CD/2.1 /:/: singly/RB/singly linked/VBN/linked list/NN/list node/NN/node figure/NN/figure 2.2/CD/2.2 /:/: a/DT/a singly/RB/singly linked/VBN/linked list/NN/list populated/VBN/populated with/IN/with integers/NNS/integers 2.1.1/CD/2.1.1 insertion/NN/insertion in/IN/in general/JJ/general when/WRB/when people/NNS/people talk/VBP/talk about/IN/about insertion/NN/insertion with/IN/with respect/NN/respect to/TO/to linked/VBN/linked lists/NNS/lists of/IN/of any/DT/any form/NN/form they/PRP/they implicitly/RB/implicitly refer/VBP/refer to/TO/to the/DT/the adding/NN/adding of/IN/of a/DT/a node/NN/node to/TO/to the/DT/the tail/NN/tail of/IN/of the/DT/the list/NNP/list. when/WRB/when you/PRP/you use/VBP/use an/DT/an api/NN/api like/IN/like that/DT/that of/IN/of dsa/NN/dsa and/CC/and you/PRP/you see/VBP/see a/DT/a general/JJ/general purpose/NN/purpose method/NN/method that/WDT/that adds/VBZ/adds a/DT/a node/NN/node to/TO/to the/DT/the list/NN/list /,/, you/PRP/you can/MD/can assume/VB/assume that/IN/that you/PRP/you are/VBP/are adding/VBG/adding the/DT/the node/NN/node to/TO/to the/DT/the tail/NN/tail of/IN/of the/DT/the list/NN/list not/RB/not the/DT/the head/NN/head /./. adding/VBG/adding a/DT/a node/NN/node to/TO/to a/DT/a singly/RB/singly linked/VBN/linked list/NN/list has/VBZ/has only/RB/only two/CD/two cases/NNS/cases /:/: 1/CD/1. head/NN/head =/:/= ;/:/; in/IN/in which/WDT/which case/NN/case the/DT/the node/NN/node we/PRP/we are/VBP/are adding/VBG/adding is/VBZ/is now/RB/now both/DT/both the/DT/the head/NN/head and/CC/and tail/NN/tail of/IN/of the/DT/the list/NN/list ;/:/; or/CC/or 2/CD/2. we/PRP/we simply/RB/simply need/VBP/need to/TO/to append/VB/append our/PRP$/our node/NN/node onto/IN/onto the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list updating/VBG/updating the/DT/the tail/NN/tail reference/NN/reference appropriately/RB/appropriately /./. 1/CD/1 /CD/) algorithm/NN/algorithm add/NN/add /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to add/VB/add to/TO/to the/DT/the list/NN/list 3/CD/3 /CD/) post/NN/post /:/: value/NN/value has/VBZ/has been/VBN/been placed/VBN/placed at/IN/at the/DT/the tail/NN/tail of/IN/of the/DT/the list/NN/list 4/CD/4 /CD/) n/NN/n Ã/:/Ã /:/ node/NN/node /:/( value/NN/value /:/) 5/CD/5 /CD/) if/IN/if head/NN/head =/:/= ;/:/; 6/CD/6 /CD/) head/NN/head Ã/:/Ã /:/ n/NN/n 7/CD/7 /CD/) tail/NN/tail Ã/:/Ã /:/ n/NN/n 8/CD/8 /CD/) else/NN/else 9/CD/9 /CD/) tail.next/JJ/tail.next Ã/NN/Ã /:/ n/NN/n 10/CD/10 /CD/) tail/NN/tail Ã/:/Ã /:/ n/NN/n 11/CD/11 /CD/) end/NN/end if/IN/if 12/CD/12 /CD/) end/NN/end add/NN/add as/IN/as an/DT/an example/NN/example of/IN/of the/DT/the previous/JJ/previous algorithm/NN/algorithm consider/NN/consider adding/VBG/adding the/DT/the following/VBG/following se/NN/se- quence/NN/quence of/IN/of integers/NNS/integers to/TO/to the/DT/the list/NN/list /:/: 1/LS/1 /,/, 45/CD/45 /,/, 60/CD/60 /,/, and/CC/and 12/CD/12 /,/, the/DT/the resulting/VBG/resulting list/NN/list is/VBZ/is that/IN/that of/IN/of figure/NN/figure 2.2/CD/2.2 /./. 2.1.2/CD/2.1.2 searching/VBG/searching searching/NN/searching a/DT/a linked/VBN/linked list/NN/list is/VBZ/is straightforward/VBN/straightforward /:/: we/PRP/we simply/RB/simply traverse/VBP/traverse the/DT/the list/NN/list checking/VBG/checking the/DT/the value/NN/value we/PRP/we are/VBP/are looking/VBG/looking for/IN/for with/IN/with the/DT/the value/NN/value of/IN/of each/DT/each node/NN/node in/IN/in the/DT/the linked/VBN/linked list/NNP/list. the/DT/the algorithm/NN/algorithm listed/VBN/listed in/IN/in this/DT/this section/NN/section is/VBZ/is very/RB/very similar/JJ/similar to/TO/to that/DT/that used/JJ/used for/IN/for traversal/NN/traversal in/IN/in x2.1.4/NNP/x2.1.4 /./. chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 11/CD/11 1/CD/1 /CD/) algorithm/NN/algorithm contains/NNS/contains /:/( head/NN/head /,/, value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: head/NN/head is/VBZ/is the/DT/the head/NN/head node/NN/node in/IN/in the/DT/the list/NN/list 3/CD/3 /CD/) value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to search/NN/search for/IN/for 4/CD/4 /CD/) post/NN/post /:/: the/DT/the item/NN/item is/VBZ/is either/DT/either in/IN/in the/DT/the linked/VBN/linked list/NN/list /,/, true/JJ/true ;/:/; otherwise/NN/otherwise false/NN/false 5/CD/5 /CD/) n/NN/n Ã/:/Ã /:/ head/NN/head 6/CD/6 /CD/) while/IN/while n/NN/n 6/CD/6 =/CD/= ;/:/; and/CC/and n.value/JJ/n.value 6/CD/6 =/CD/= value/NN/value 7/CD/7 /CD/) n/NN/n Ã/:/Ã /:/ n.next/JJ/n.next 8/CD/8 /CD/) end/NN/end while/IN/while 9/CD/9 /CD/) if/IN/if n/NN/n =/:/= ;/:/; 10/CD/10 /CD/) return/NN/return false/NN/false 11/CD/11 /CD/) end/NN/end if/IN/if 12/CD/12 /CD/) return/NN/return true/JJ/true 13/CD/13 /CD/) end/NN/end contains/NNS/contains 2.1.3/CD/2.1.3 deletion/NN/deletion deleting/VBG/deleting a/DT/a node/NN/node from/IN/from a/DT/a linked/VBN/linked list/NN/list is/VBZ/is straightforward/VBN/straightforward but/CC/but there/EX/there are/VBP/are a/DT/a few/JJ/few cases/NNS/cases we/PRP/we need/VBP/need to/TO/to account/NN/account for/IN/for /:/: 1/CD/1. the/DT/the list/NN/list is/VBZ/is empty/JJ/empty ;/:/; or/CC/or 2/CD/2. the/DT/the node/NN/node to/TO/to remove/VB/remove is/VBZ/is the/DT/the only/JJ/only node/NN/node in/IN/in the/DT/the linked/VBN/linked list/NN/list ;/:/; or/CC/or 3/CD/3. we/PRP/we are/VBP/are removing/VBG/removing the/DT/the head/NN/head node/NN/node ;/:/; or/CC/or 4/CD/4. we/PRP/we are/VBP/are removing/VBG/removing the/DT/the tail/NN/tail node/NN/node ;/:/; or/CC/or 5/CD/5. the/DT/the node/NN/node to/TO/to remove/VB/remove is/VBZ/is somewhere/RB/somewhere in/IN/in between/IN/between the/DT/the head/NN/head and/CC/and tail/NN/tail ;/:/; or/CC/or 6/CD/6. the/DT/the item/NN/item to/TO/to remove/VB/remove does/VBZ/does n't/RB/n't exist/VB/exist in/IN/in the/DT/the linked/VBN/linked list/NN/list the/DT/the algorithm/NN/algorithm whose/WP$/whose cases/NNS/cases we/PRP/we have/VBP/have described/VBN/described will/MD/will remove/VB/remove a/DT/a node/NN/node from/IN/from any/NNP/any- where/WRB/where within/IN/within a/DT/a list/NN/list irrespective/NN/irrespective of/IN/of whether/IN/whether the/DT/the node/NN/node is/VBZ/is the/DT/the head/NN/head etc/NNP/etc. if/IN/if you/PRP/you know/VBP/know that/IN/that items/NNS/items will/MD/will only/RB/only ever/RB/ever be/VB/be removed/VBN/removed from/IN/from the/DT/the head/NN/head or/CC/or tail/NN/tail of/IN/of the/DT/the list/NN/list then/RB/then you/PRP/you can/MD/can create/VB/create much/JJ/much more/RBR/more concise/JJ/concise algorithms/NNP/algorithms. in/IN/in the/DT/the case/NN/case of/IN/of always/RB/always removing/VBG/removing from/IN/from the/DT/the front/NN/front of/IN/of the/DT/the linked/VBN/linked list/NN/list deletion/NN/deletion becomes/VBZ/becomes an/DT/an o/NN/o /:/( 1/CD/1 /CD/) operation/NN/operation /./. chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 12/CD/12 1/CD/1 /CD/) algorithm/NN/algorithm remove/NN/remove /:/( head/NN/head /,/, value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: head/NN/head is/VBZ/is the/DT/the head/NN/head node/NN/node in/IN/in the/DT/the list/NN/list 3/CD/3 /CD/) value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to remove/VB/remove from/IN/from the/DT/the list/NN/list 4/CD/4 /CD/) post/NN/post /:/: value/NN/value is/VBZ/is removed/VBN/removed from/IN/from the/DT/the list/NN/list /,/, true/JJ/true ;/:/; otherwise/NN/otherwise false/NN/false 5/CD/5 /CD/) if/IN/if head/NN/head =/:/= ;/:/; 6/CD/6 /CD/) ///CD/// case/NN/case 1/CD/1 7/CD/7 /CD/) return/NN/return false/NN/false 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) n/NN/n Ã/:/Ã /:/ head/NN/head 10/CD/10 /CD/) if/IN/if n.value/JJ/n.value =/NN/= value/NN/value 11/CD/11 /CD/) if/IN/if head/NN/head =/:/= tail/NN/tail 12/CD/12 /CD/) ///CD/// case/NN/case 2/CD/2 13/CD/13 /CD/) head/NN/head Ã/:/Ã /:/ ;/:/; 14/CD/14 /CD/) tail/NN/tail Ã/:/Ã /:/ ;/:/; 15/CD/15 /CD/) else/NN/else 16/CD/16 /CD/) ///CD/// case/NN/case 3/CD/3 17/CD/17 /CD/) head/NN/head Ã/:/Ã /:/ head.next/JJ/head.next 18/CD/18 /CD/) end/NN/end if/IN/if 19/CD/19 /CD/) return/NN/return true/JJ/true 20/CD/20 /CD/) end/NN/end if/IN/if 21/CD/21 /CD/) while/IN/while n.next/JJ/n.next 6/CD/6 =/CD/= ;/:/; and/CC/and n.next.value/JJ/n.next.value 6/CD/6 =/CD/= value/NN/value 22/CD/22 /CD/) n/NN/n Ã/:/Ã /:/ n.next/JJ/n.next 23/CD/23 /CD/) end/NN/end while/IN/while 24/CD/24 /CD/) if/IN/if n.next/JJ/n.next 6/CD/6 =/CD/= ;/:/; 25/CD/25 /CD/) if/IN/if n.next/JJ/n.next =/NN/= tail/NN/tail 26/CD/26 /CD/) ///CD/// case/NN/case 4/CD/4 27/CD/27 /CD/) tail/NN/tail Ã/:/Ã /:/ n/NN/n 28/CD/28 /CD/) end/NN/end if/IN/if 29/CD/29 /CD/) ///CD/// this/DT/this is/VBZ/is only/RB/only case/NN/case 5/CD/5 if/IN/if the/DT/the conditional/JJ/conditional on/IN/on line/NN/line 25/CD/25 was/VBD/was false/JJ/false 30/CD/30 /CD/) n.next/JJ/n.next Ã/NN/Ã /:/ n.next.next/JJ/n.next.next 31/CD/31 /CD/) return/NN/return true/JJ/true 32/CD/32 /CD/) end/NN/end if/IN/if 33/CD/33 /CD/) ///CD/// case/NN/case 6/CD/6 34/CD/34 /CD/) return/NN/return false/NN/false 35/CD/35 /CD/) end/NN/end remove/NN/remove 2.1.4/CD/2.1.4 traversing/VBG/traversing the/DT/the list/NN/list traversing/VBG/traversing a/DT/a singly/RB/singly linked/VBN/linked list/NN/list is/VBZ/is the/DT/the same/JJ/same as/IN/as that/DT/that of/IN/of traversing/VBG/traversing a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.2/-NONE-/x2.2 /:/) /./. you/PRP/you start/VB/start at/IN/at the/DT/the head/NN/head of/IN/of the/DT/the list/NN/list and/CC/and continue/VB/continue until/IN/until you/PRP/you come/VBP/come across/RP/across a/DT/a node/NN/node that/WDT/that is/VBZ/is ;/:/; /./. the/DT/the two/CD/two cases/NNS/cases are/VBP/are as/RB/as follows/VBZ/follows /:/: 1/CD/1. node/NN/node =/:/= ;/:/; /,/, we/PRP/we have/VBP/have exhausted/VBN/exhausted all/DT/all nodes/NNS/nodes in/IN/in the/DT/the linked/VBN/linked list/NN/list ;/:/; or/CC/or 2/CD/2. we/PRP/we must/MD/must update/VB/update the/DT/the node/NN/node reference/NN/reference to/TO/to be/VB/be node.next/JJ/node.next /./. the/DT/the algorithm/NN/algorithm described/VBD/described is/VBZ/is a/DT/a very/RB/very simple/JJ/simple one/CD/one that/WDT/that makes/VBZ/makes use/VBP/use of/IN/of a/DT/a simple/JJ/simple while/NN/while loop/NN/loop to/TO/to check/VB/check the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst case/NN/case /./. chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 13/CD/13 1/CD/1 /CD/) algorithm/NN/algorithm traverse/NN/traverse /:/( head/NN/head /:/) 2/CD/2 /CD/) pre/NN/pre /:/: head/NN/head is/VBZ/is the/DT/the head/NN/head node/NN/node in/IN/in the/DT/the list/NN/list 3/CD/3 /CD/) post/NN/post /:/: the/DT/the items/NNS/items in/IN/in the/DT/the list/NN/list have/VBP/have been/VBN/been traversed/VBN/traversed 4/CD/4 /CD/) n/NN/n Ã/:/Ã /:/ head/NN/head 5/CD/5 /CD/) while/IN/while n/NN/n 6/CD/6 =/CD/= 0/-NONE-/0 6/CD/6 /:/) yield/NN/yield n.value/JJ/n.value 7/CD/7 /CD/) n/NN/n Ã/:/Ã /:/ n.next/JJ/n.next 8/CD/8 /CD/) end/NN/end while/IN/while 9/CD/9 /CD/) end/NN/end traverse/NN/traverse 2.1.5/CD/2.1.5 traversing/VBG/traversing the/DT/the list/NN/list in/IN/in reverse/NN/reverse order/NN/order traversing/VBG/traversing a/DT/a singly/RB/singly linked/VBN/linked list/NN/list in/IN/in a/DT/a forward/NN/forward manner/NN/manner /:/( i.e/NNP/i.e. left/VBD/left to/TO/to right/JJ/right /NN/) is/VBZ/is simple/JJ/simple as/IN/as demonstrated/JJ/demonstrated in/IN/in x2.1.4/NNP/x2.1.4. however/RB/however /,/, what/WDT/what if/IN/if we/PRP/we wanted/VBD/wanted to/TO/to traverse/VB/traverse the/DT/the nodes/NNS/nodes in/IN/in the/DT/the linked/VBN/linked list/NN/list in/IN/in reverse/NN/reverse order/NN/order for/IN/for some/DT/some reason/NN/reason ?/./? the/DT/the algorithm/NN/algorithm to/TO/to perform/VB/perform such/JJ/such a/DT/a traversal/NN/traversal is/VBZ/is very/RB/very simple/JJ/simple /,/, and/CC/and just/RB/just like/IN/like demonstrated/VBN/demonstrated in/IN/in x2.1.3/-NONE-/x2.1.3 we/PRP/we will/MD/will need/VB/need to/TO/to acquire/VB/acquire a/DT/a reference/NN/reference to/TO/to the/DT/the predecessor/NN/predecessor of/IN/of a/DT/a node/NN/node /,/, even/RB/even though/IN/though the/DT/the fundamental/JJ/fundamental characteristics/NNS/characteristics of/IN/of the/DT/the nodes/NNS/nodes that/WDT/that make/VBP/make up/RP/up a/DT/a singly/RB/singly linked/VBN/linked list/NN/list make/NN/make this/DT/this an/DT/an expensive/JJ/expensive operation/NNP/operation. for/IN/for each/DT/each node/NN/node /,/, Â/:/Â ¯/:/¯ nding/VBG/nding its/PRP$/its predecessor/NN/predecessor is/VBZ/is an/DT/an o/NN/o /:/( n/NN/n /:/) operation/NN/operation /,/, so/RB/so over/IN/over the/DT/the course/NN/course of/IN/of traversing/VBG/traversing the/DT/the whole/JJ/whole list/NN/list backwards/NNS/backwards the/DT/the cost/NN/cost becomes/VBZ/becomes o/NN/o /:/( n2/NNP/n2 /:/) /./. figure/NN/figure 2.3/CD/2.3 depicts/NNS/depicts the/DT/the following/VBG/following algorithm/NN/algorithm being/VBG/being applied/VBN/applied to/TO/to a/DT/a linked/VBN/linked list/NN/list with/IN/with the/DT/the integers/NNS/integers 5/CD/5 /,/, 10/CD/10 /,/, 1/CD/1 /,/, and/CC/and 40/CD/40 /./. 1/CD/1 /CD/) algorithm/NN/algorithm reversetraversal/NN/reversetraversal /:/( head/NN/head /,/, tail/NN/tail /:/) 2/CD/2 /CD/) pre/NN/pre /:/: head/NN/head and/CC/and tail/NN/tail belong/IN/belong to/TO/to the/DT/the same/JJ/same list/NN/list 3/CD/3 /CD/) post/NN/post /:/: the/DT/the items/NNS/items in/IN/in the/DT/the list/NN/list have/VBP/have been/VBN/been traversed/VBN/traversed in/IN/in reverse/NN/reverse order/NN/order 4/CD/4 /CD/) if/IN/if tail/NN/tail 6/CD/6 =/CD/= ;/:/; 5/CD/5 /CD/) curr/NN/curr Ã/:/Ã /:/ tail/NN/tail 6/CD/6 /CD/) while/IN/while curr/NN/curr 6/CD/6 =/CD/= head/NN/head 7/CD/7 /CD/) prev/NN/prev Ã/:/Ã /:/ head/NN/head 8/CD/8 /CD/) while/IN/while prev.next/JJ/prev.next 6/CD/6 =/CD/= curr/NN/curr 9/CD/9 /CD/) prev/NN/prev Ã/:/Ã /:/ prev.next/JJ/prev.next 10/CD/10 /CD/) end/NN/end while/IN/while 11/CD/11 /CD/) yield/NN/yield curr.value/JJ/curr.value 12/CD/12 /CD/) curr/NN/curr Ã/:/Ã /:/ prev/NN/prev 13/CD/13 /CD/) end/NN/end while/IN/while 14/CD/14 /CD/) yield/NN/yield curr.value/JJ/curr.value 15/CD/15 /CD/) end/NN/end if/IN/if 16/CD/16 /CD/) end/NN/end reversetraversal/NN/reversetraversal this/DT/this algorithm/NN/algorithm is/VBZ/is only/RB/only of/IN/of real/JJ/real interest/NN/interest when/WRB/when we/PRP/we are/VBP/are using/VBG/using singly/RB/singly linked/VBN/linked lists/NNS/lists /,/, as/IN/as you/PRP/you will/MD/will soon/RB/soon see/VB/see that/IN/that doubly/RB/doubly linked/VBN/linked lists/NNS/lists /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.2/-NONE-/x2.2 /:/) make/VB/make reverse/NN/reverse list/NN/list traversal/NN/traversal simple/NN/simple and/CC/and e/NN/e Â/:/Â ±/:/± cient/NN/cient /,/, as/IN/as shown/NN/shown in/IN/in x2.2.3/NNP/x2.2.3 /./. 2.2/CD/2.2 doubly/RB/doubly linked/VBN/linked list/NN/list doubly/RB/doubly linked/VBN/linked lists/NNS/lists are/VBP/are very/RB/very similar/JJ/similar to/TO/to singly/RB/singly linked/VBN/linked lists/NNP/lists. the/DT/the only/JJ/only di/NN/di Â/:/Â ®/:/® erence/NN/erence is/VBZ/is that/IN/that each/DT/each node/NN/node has/VBZ/has a/DT/a reference/NN/reference to/TO/to both/DT/both the/DT/the next/JJ/next and/CC/and previous/JJ/previous nodes/NNS/nodes in/IN/in the/DT/the list/NN/list /./. chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 14/CD/14 figure/NN/figure 2.3/CD/2.3 /:/: reverse/NN/reverse traveral/JJ/traveral of/IN/of a/DT/a singly/RB/singly linked/VBN/linked list/NN/list figure/NN/figure 2.4/CD/2.4 /:/: doubly/RB/doubly linked/VBN/linked list/NN/list node/NN/node chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 15/CD/15 the/DT/the following/JJ/following algorithms/NNS/algorithms for/IN/for the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list are/VBP/are exactly/RB/exactly the/DT/the same/JJ/same as/IN/as those/DT/those listed/VBN/listed previously/RB/previously for/IN/for the/DT/the singly/RB/singly linked/VBN/linked list/NN/list /:/: 1/CD/1. searching/VBG/searching /CD/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.1.2/-NONE-/x2.1.2 /:/) 2/CD/2. traversal/NN/traversal /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.1.4/-NONE-/x2.1.4 /:/) 2.2.1/CD/2.2.1 insertion/NN/insertion the/DT/the only/JJ/only major/JJ/major di/NN/di Â/:/Â ®/:/® erence/NN/erence between/IN/between the/DT/the algorithm/NN/algorithm in/IN/in x2.1.1/-NONE-/x2.1.1 is/VBZ/is that/IN/that we/PRP/we need/VBP/need to/TO/to remember/VB/remember to/TO/to bind/VB/bind the/DT/the previous/JJ/previous pointer/NN/pointer of/IN/of n/NN/n to/TO/to the/DT/the previous/JJ/previous tail/NN/tail node/NN/node if/IN/if n/NN/n was/VBD/was not/RB/not the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst node/NN/node to/TO/to be/VB/be inserted/VBN/inserted into/IN/into the/DT/the list/NN/list /./. 1/CD/1 /CD/) algorithm/NN/algorithm add/NN/add /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to add/VB/add to/TO/to the/DT/the list/NN/list 3/CD/3 /CD/) post/NN/post /:/: value/NN/value has/VBZ/has been/VBN/been placed/VBN/placed at/IN/at the/DT/the tail/NN/tail of/IN/of the/DT/the list/NN/list 4/CD/4 /CD/) n/NN/n Ã/:/Ã /:/ node/NN/node /:/( value/NN/value /:/) 5/CD/5 /CD/) if/IN/if head/NN/head =/:/= ;/:/; 6/CD/6 /CD/) head/NN/head Ã/:/Ã /:/ n/NN/n 7/CD/7 /CD/) tail/NN/tail Ã/:/Ã /:/ n/NN/n 8/CD/8 /CD/) else/NN/else 9/CD/9 /CD/) n.previous/JJ/n.previous Ã/NN/Ã /:/ tail/NN/tail 10/CD/10 /CD/) tail.next/JJ/tail.next Ã/NN/Ã /:/ n/NN/n 11/CD/11 /CD/) tail/NN/tail Ã/:/Ã /:/ n/NN/n 12/CD/12 /CD/) end/NN/end if/IN/if 13/CD/13 /CD/) end/NN/end add/NN/add figure/NN/figure 2.5/CD/2.5 shows/NNS/shows the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list after/IN/after adding/VBG/adding the/DT/the sequence/NN/sequence of/IN/of integers/NNS/integers de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.1.1/-NONE-/x2.1.1 /./. figure/NN/figure 2.5/CD/2.5 /:/: doubly/RB/doubly linked/VBN/linked list/NN/list populated/VBN/populated with/IN/with integers/NNS/integers 2.2.2/CD/2.2.2 deletion/NN/deletion as/IN/as you/PRP/you may/MD/may of/IN/of guessed/VBN/guessed the/DT/the cases/NNS/cases that/WDT/that we/PRP/we use/VBP/use for/IN/for deletion/NN/deletion in/IN/in a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list are/VBP/are exactly/RB/exactly the/DT/the same/JJ/same as/IN/as those/DT/those de/NN/de Â/:/Â ¯/:/¯ ned/VBD/ned in/IN/in x2.1.3/NNP/x2.1.3. like/IN/like insertion/NN/insertion we/PRP/we have/VBP/have the/DT/the added/VBN/added task/NN/task of/IN/of binding/VBG/binding an/DT/an additional/JJ/additional reference/NN/reference /:/( previous/JJ/previous /NN/) to/TO/to the/DT/the correct/NN/correct value/NN/value /./. chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 16/CD/16 1/CD/1 /CD/) algorithm/NN/algorithm remove/NN/remove /:/( head/NN/head /,/, value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: head/NN/head is/VBZ/is the/DT/the head/NN/head node/NN/node in/IN/in the/DT/the list/NN/list 3/CD/3 /CD/) value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to remove/VB/remove from/IN/from the/DT/the list/NN/list 4/CD/4 /CD/) post/NN/post /:/: value/NN/value is/VBZ/is removed/VBN/removed from/IN/from the/DT/the list/NN/list /,/, true/JJ/true ;/:/; otherwise/NN/otherwise false/NN/false 5/CD/5 /CD/) if/IN/if head/NN/head =/:/= ;/:/; 6/CD/6 /CD/) return/NN/return false/NN/false 7/CD/7 /CD/) end/NN/end if/IN/if 8/CD/8 /CD/) if/IN/if value/NN/value =/:/= head.value/JJ/head.value 9/CD/9 /CD/) if/IN/if head/NN/head =/:/= tail/NN/tail 10/CD/10 /CD/) head/NN/head Ã/:/Ã /:/ ;/:/; 11/CD/11 /CD/) tail/NN/tail Ã/:/Ã /:/ ;/:/; 12/CD/12 /CD/) else/NN/else 13/CD/13 /CD/) head/NN/head Ã/:/Ã /:/ head.next/JJ/head.next 14/CD/14 /CD/) head.previous/JJ/head.previous Ã/NN/Ã /:/ ;/:/; 15/CD/15 /CD/) end/NN/end if/IN/if 16/CD/16 /CD/) return/NN/return true/JJ/true 17/CD/17 /CD/) end/NN/end if/IN/if 18/CD/18 /CD/) n/NN/n Ã/:/Ã /:/ head.next/JJ/head.next 19/CD/19 /CD/) while/IN/while n/NN/n 6/CD/6 =/CD/= ;/:/; and/CC/and value/NN/value 6/CD/6 =/CD/= n.value/JJ/n.value 20/CD/20 /CD/) n/NN/n Ã/:/Ã /:/ n.next/JJ/n.next 21/CD/21 /CD/) end/NN/end while/IN/while 22/CD/22 /CD/) if/IN/if n/NN/n =/:/= tail/NN/tail 23/CD/23 /CD/) tail/NN/tail Ã/:/Ã /:/ tail.previous/JJ/tail.previous 24/CD/24 /CD/) tail.next/JJ/tail.next Ã/NN/Ã /:/ ;/:/; 25/CD/25 /CD/) return/NN/return true/JJ/true 26/CD/26 /CD/) else/NN/else if/IN/if n/NN/n 6/CD/6 =/CD/= ;/:/; 27/CD/27 /CD/) n.previous.next/JJ/n.previous.next Ã/NN/Ã /:/ n.next/JJ/n.next 28/CD/28 /CD/) n.next.previous/JJ/n.next.previous Ã/NN/Ã /:/ n.previous/JJ/n.previous 29/CD/29 /CD/) return/NN/return true/JJ/true 30/CD/30 /CD/) end/NN/end if/IN/if 31/CD/31 /CD/) return/NN/return false/NN/false 32/CD/32 /CD/) end/NN/end remove/NN/remove 2.2.3/CD/2.2.3 reverse/NN/reverse traversal/NN/traversal singly/RB/singly linked/VBN/linked lists/NNS/lists have/VBP/have a/DT/a forward/NN/forward only/RB/only design/JJ/design /,/, which/WDT/which is/VBZ/is why/WRB/why the/DT/the reverse/NN/reverse traversal/NN/traversal algorithm/NN/algorithm de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.1.5/NNP/x2.1.5 required/VBD/required some/DT/some creative/JJ/creative invention/NNP/invention. doubly/RB/doubly linked/VBD/linked lists/NNS/lists make/VBP/make reverse/JJ/reverse traversal/NN/traversal as/IN/as simple/JJ/simple as/IN/as forward/NN/forward traversal/NN/traversal /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.1.4/-NONE-/x2.1.4 /:/) except/IN/except that/DT/that we/PRP/we start/VBP/start at/IN/at the/DT/the tail/NN/tail node/NN/node and/CC/and update/VB/update the/DT/the pointers/NNS/pointers in/IN/in the/DT/the opposite/JJ/opposite direction/NN/direction /./. figure/NN/figure 2.6/CD/2.6 shows/NNS/shows the/DT/the reverse/NN/reverse traversal/NN/traversal algorithm/NN/algorithm in/IN/in action/NN/action /./. chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 17/CD/17 figure/NN/figure 2.6/CD/2.6 /:/: doubly/RB/doubly linked/VBN/linked list/NN/list reverse/NN/reverse traversal/NN/traversal 1/CD/1 /CD/) algorithm/NN/algorithm reversetraversal/NN/reversetraversal /:/( tail/NN/tail /:/) 2/CD/2 /CD/) pre/NN/pre /:/: tail/NN/tail is/VBZ/is the/DT/the tail/NN/tail node/NN/node of/IN/of the/DT/the list/NN/list to/TO/to traverse/VB/traverse 3/CD/3 /CD/) post/NN/post /:/: the/DT/the list/NN/list has/VBZ/has been/VBN/been traversed/VBN/traversed in/IN/in reverse/NN/reverse order/NN/order 4/CD/4 /CD/) n/NN/n Ã/:/Ã /:/ tail/NN/tail 5/CD/5 /CD/) while/IN/while n/NN/n 6/CD/6 =/CD/= ;/:/; 6/CD/6 /CD/) yield/NN/yield n.value/JJ/n.value 7/CD/7 /CD/) n/NN/n Ã/:/Ã /:/ n.previous/JJ/n.previous 8/CD/8 /CD/) end/NN/end while/IN/while 9/CD/9 /CD/) end/NN/end reversetraversal/NN/reversetraversal 2.3/CD/2.3 summary/NN/summary linked/VBN/linked lists/NNS/lists are/VBP/are good/JJ/good to/TO/to use/VB/use when/WRB/when you/PRP/you have/VBP/have an/DT/an unknown/NN/unknown number/NN/number of/IN/of items/NNS/items to/TO/to store/NNP/store. using/NN/using a/DT/a data/NN/data structure/NN/structure like/IN/like an/DT/an array/NN/array would/MD/would require/VB/require you/PRP/you to/TO/to specify/VB/specify the/DT/the size/NN/size up/RP/up front/NN/front ;/:/; exceeding/VBG/exceeding that/IN/that size/NN/size involves/NNS/involves invoking/VBG/invoking a/DT/a resizing/NN/resizing algorithm/NN/algorithm which/WDT/which has/VBZ/has a/DT/a linear/JJ/linear run/NN/run time/NNP/time. you/PRP/you should/MD/should also/RB/also use/VB/use linked/VBN/linked lists/NNS/lists when/WRB/when you/PRP/you will/MD/will only/RB/only remove/VB/remove nodes/NNS/nodes at/IN/at either/DT/either the/DT/the head/NN/head or/CC/or tail/NN/tail of/IN/of the/DT/the list/NN/list to/TO/to maintain/VB/maintain a/DT/a constant/JJ/constant run/NN/run time/NN/time /./. this/DT/this requires/VBZ/requires maintaining/VBG/maintaining pointers/NNS/pointers to/TO/to the/DT/the nodes/NNS/nodes at/IN/at the/DT/the head/NN/head and/CC/and tail/NN/tail of/IN/of the/DT/the list/NN/list but/CC/but the/DT/the memory/NN/memory overhead/NN/overhead will/MD/will pay/VB/pay for/IN/for itself/PRP/itself if/IN/if this/DT/this is/VBZ/is an/DT/an operation/NN/operation you/PRP/you will/MD/will be/VB/be performing/VBG/performing many/JJ/many times/NNS/times /./. what/WP/what linked/VBN/linked lists/NNS/lists are/VBP/are not/RB/not very/RB/very good/JJ/good for/IN/for is/VBZ/is random/NN/random insertion/NN/insertion /,/, accessing/VBG/accessing nodes/NNS/nodes by/IN/by index/NN/index /,/, and/CC/and searching/NNP/searching. at/IN/at the/DT/the expense/NN/expense of/IN/of a/DT/a little/RB/little memory/NN/memory /:/( in/IN/in most/JJS/most cases/NNS/cases 4/CD/4 bytes/NNS/bytes would/MD/would su/VB/su Â/:/Â ±/:/± ce/NN/ce /:/) /,/, and/CC/and a/DT/a few/JJ/few more/RBR/more read/writes/NNS/read/writes you/PRP/you could/MD/could maintain/VB/maintain a/DT/a count/NN/count variable/JJ/variable that/IN/that tracks/NNS/tracks how/WRB/how many/JJ/many items/NNS/items are/VBP/are contained/VBN/contained in/IN/in the/DT/the list/NN/list so/RB/so that/IN/that accessing/VBG/accessing such/JJ/such a/DT/a primitive/JJ/primitive property/NN/property is/VBZ/is a/DT/a constant/JJ/constant operation/NN/operation /:/- you/PRP/you just/RB/just need/VBP/need to/TO/to update/VB/update count/NN/count during/IN/during the/DT/the insertion/NN/insertion and/CC/and deletion/NN/deletion algorithms/NNS/algorithms /./. singly/RB/singly linked/VBD/linked lists/NNS/lists should/MD/should be/VB/be used/VBN/used when/WRB/when you/PRP/you are/VBP/are only/RB/only performing/VBG/performing basic/JJ/basic in/NN/in- sertions/NNP/sertions. in/IN/in general/JJ/general doubly/RB/doubly linked/VBN/linked lists/NNS/lists are/VBP/are more/RBR/more accommodating/VBG/accommodating for/IN/for non-trivial/JJ/non-trivial operations/NNS/operations on/IN/on a/DT/a linked/VBN/linked list/NN/list /./. we/PRP/we recommend/VBP/recommend the/DT/the use/NN/use of/IN/of a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list when/WRB/when you/PRP/you require/VBP/require forwards/NNS/forwards and/CC/and backwards/NNS/backwards traversal/NNP/traversal. for/IN/for the/DT/the most/JJS/most cases/NNS/cases this/DT/this requirement/NN/requirement is/VBZ/is present/NNP/present. for/IN/for example/NN/example /,/, consider/NN/consider a/DT/a token/NN/token stream/NN/stream that/WDT/that you/PRP/you want/VBP/want to/TO/to parse/VB/parse in/IN/in a/DT/a recursive/JJ/recursive descent/NN/descent fashion/NNP/fashion. sometimes/RB/sometimes you/PRP/you will/MD/will have/VB/have to/TO/to backtrack/VB/backtrack in/IN/in order/NN/order to/TO/to create/VB/create the/DT/the correct/NN/correct parse/NN/parse tree/NNP/tree. in/IN/in this/DT/this scenario/NN/scenario a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list is/VBZ/is best/JJS/best as/IN/as its/PRP$/its design/NN/design makes/VBZ/makes bi-directional/JJ/bi-directional traversal/NN/traversal much/RB/much simpler/JJR/simpler and/CC/and quicker/NN/quicker than/IN/than that/DT/that of/IN/of a/DT/a singly/RB/singly linked/VBN/linked chapter/NN/chapter 2/CD/2. linked/VBN/linked lists/NNS/lists 18/CD/18 list/NN/list /./. chapter/NN/chapter 3/CD/3 binary/JJ/binary search/NN/search tree/NN/tree binary/NN/binary search/NN/search trees/NNS/trees /:/( bsts/NNS/bsts /VBP/) are/VBP/are very/RB/very simple/JJ/simple to/TO/to understand/NNP/understand. we/PRP/we start/VBP/start with/IN/with a/DT/a root/NN/root node/NN/node with/IN/with value/NN/value x/NN/x /,/, where/WRB/where the/DT/the left/VBN/left subtree/NN/subtree of/IN/of x/NN/x contains/NNS/contains nodes/VBZ/nodes with/IN/with values/NNS/values </:/< x/NN/x and/CC/and the/DT/the right/NN/right subtree/NN/subtree contains/VBZ/contains nodes/NNS/nodes whose/WP$/whose values/NNS/values are/VBP/are Â/:/Â ¸/:/¸ x/NNP/x. each/DT/each node/NN/node follows/VBZ/follows the/DT/the same/JJ/same rules/NNS/rules with/IN/with respect/NN/respect to/TO/to nodes/NNS/nodes in/IN/in their/PRP$/their left/NN/left and/CC/and right/RB/right subtrees/VBZ/subtrees /./. bsts/NNS/bsts are/VBP/are of/IN/of interest/NN/interest because/IN/because they/PRP/they have/VBP/have operations/NNS/operations which/WDT/which are/VBP/are favourably/RB/favourably fast/RB/fast /:/: insertion/NN/insertion /,/, look/NN/look up/RB/up /,/, and/CC/and deletion/NN/deletion can/MD/can all/DT/all be/VB/be done/VBN/done in/IN/in o/NN/o /:/( log/NN/log n/NN/n /:/) time/NNP/time. it/PRP/it is/VBZ/is important/JJ/important to/TO/to note/VB/note that/IN/that the/DT/the o/NN/o /:/( log/NN/log n/NN/n /:/) times/NNS/times for/IN/for these/DT/these operations/NNS/operations can/MD/can only/RB/only be/VB/be attained/VBN/attained if/IN/if the/DT/the bst/NN/bst is/VBZ/is reasonably/RB/reasonably balanced/VBN/balanced ;/:/; for/IN/for a/DT/a tree/NN/tree data/NN/data structure/NN/structure with/IN/with self/NN/self balancing/VBG/balancing properties/NNS/properties see/VBP/see avl/NN/avl tree/NN/tree de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x7/NNP/x7 /NNP/) /./. in/IN/in the/DT/the following/JJ/following examples/NNS/examples you/PRP/you can/MD/can assume/VB/assume /,/, unless/IN/unless used/VBN/used as/IN/as a/DT/a parameter/NN/parameter alias/NN/alias that/WDT/that root/NN/root is/VBZ/is a/DT/a reference/NN/reference to/TO/to the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the tree/NN/tree /./. 23/CD/23 14/CD/14 31/CD/31 7/CD/7 17/CD/17 9/CD/9 figure/NN/figure 3.1/CD/3.1 /:/: simple/JJ/simple unbalanced/VBN/unbalanced binary/JJ/binary search/NN/search tree/NN/tree 19/CD/19 chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 20/CD/20 3.1/CD/3.1 insertion/NN/insertion as/IN/as mentioned/VBN/mentioned previously/RB/previously insertion/NN/insertion is/VBZ/is an/DT/an o/NN/o /:/( log/NN/log n/NN/n /:/) operation/NN/operation provided/VBN/provided that/IN/that the/DT/the tree/NN/tree is/VBZ/is moderately/RB/moderately balanced/VBN/balanced /./. 1/CD/1 /CD/) algorithm/NN/algorithm insert/NN/insert /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value has/VBZ/has passed/VBN/passed custom/NN/custom type/NN/type checks/NNS/checks for/IN/for type/NN/type t/NN/t 3/CD/3 /CD/) post/NN/post /:/: value/NN/value has/VBZ/has been/VBN/been placed/VBN/placed in/IN/in the/DT/the correct/NN/correct location/NN/location in/IN/in the/DT/the tree/NN/tree 4/CD/4 /CD/) if/IN/if root/NN/root =/:/= ;/:/; 5/CD/5 /CD/) root/NN/root Ã/:/Ã /:/ node/NN/node /:/( value/NN/value /:/) 6/CD/6 /CD/) else/NN/else 7/CD/7 /CD/) insertnode/NN/insertnode /:/( root/NN/root /,/, value/NN/value /:/) 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) end/NN/end insert/NN/insert 1/CD/1 /CD/) algorithm/NN/algorithm insertnode/NN/insertnode /:/( current/JJ/current /,/, value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: current/JJ/current is/VBZ/is the/DT/the node/NN/node to/TO/to start/VB/start from/IN/from 3/CD/3 /CD/) post/NN/post /:/: value/NN/value has/VBZ/has been/VBN/been placed/VBN/placed in/IN/in the/DT/the correct/NN/correct location/NN/location in/IN/in the/DT/the tree/NN/tree 4/CD/4 /CD/) if/IN/if value/NN/value </:/< current.value/JJ/current.value 5/CD/5 /CD/) if/IN/if current.left/JJ/current.left =/NN/= ;/:/; 6/CD/6 /CD/) current.left/JJ/current.left Ã/NN/Ã /:/ node/NN/node /:/( value/NN/value /:/) 7/CD/7 /CD/) else/NN/else 8/CD/8 /CD/) insertnode/NN/insertnode /:/( current.left/JJ/current.left /,/, value/NN/value /:/) 9/CD/9 /CD/) end/NN/end if/IN/if 10/CD/10 /CD/) else/RB/else 11/CD/11 /CD/) if/IN/if current.right/JJ/current.right =/NN/= ;/:/; 12/CD/12 /CD/) current.right/JJ/current.right Ã/NN/Ã /:/ node/NN/node /:/( value/NN/value /:/) 13/CD/13 /CD/) else/NN/else 14/CD/14 /CD/) insertnode/NN/insertnode /:/( current.right/JJ/current.right /,/, value/NN/value /:/) 15/CD/15 /CD/) end/NN/end if/IN/if 16/CD/16 /CD/) end/NN/end if/IN/if 17/CD/17 /CD/) end/NN/end insertnode/NN/insertnode the/DT/the insertion/NN/insertion algorithm/NN/algorithm is/VBZ/is split/VBN/split for/IN/for a/DT/a good/JJ/good reason/NNP/reason. the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst algorithm/NN/algorithm /:/( non/JJ/non- recursive/JJ/recursive /NN/) checks/NNS/checks a/DT/a very/RB/very core/JJ/core base/NN/base case/NN/case /:/- whether/IN/whether or/CC/or not/RB/not the/DT/the tree/NN/tree is/VBZ/is empty/NNP/empty. if/IN/if the/DT/the tree/NN/tree is/VBZ/is empty/JJ/empty then/RB/then we/PRP/we simply/RB/simply create/VBP/create our/PRP$/our root/NN/root node/NN/node and/CC/and Â/CD/Â ¯/CD/¯ nish/NNP/nish. in/IN/in all/DT/all other/JJ/other cases/NNS/cases we/PRP/we invoke/VBP/invoke the/DT/the recursive/JJ/recursive insertnode/NN/insertnode algorithm/NN/algorithm which/WDT/which simply/RB/simply guides/VBZ/guides us/PRP/us to/TO/to the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst appropriate/NN/appropriate place/NN/place in/IN/in the/DT/the tree/NN/tree to/TO/to put/VB/put value/NNP/value. note/NN/note that/IN/that at/IN/at each/DT/each stage/NN/stage we/PRP/we perform/VBP/perform a/DT/a binary/JJ/binary chop/NN/chop /:/: we/PRP/we either/VBP/either choose/RB/choose to/TO/to recurse/VB/recurse into/IN/into the/DT/the left/NN/left subtree/NN/subtree or/CC/or the/DT/the right/NN/right by/IN/by comparing/NN/comparing the/DT/the new/JJ/new value/NN/value with/IN/with that/DT/that of/IN/of the/DT/the current/JJ/current node/NNP/node. for/IN/for any/DT/any totally/RB/totally ordered/VBN/ordered type/NN/type /,/, no/DT/no value/NN/value can/MD/can simultaneously/RB/simultaneously satisfy/VB/satisfy the/DT/the conditions/NNS/conditions to/TO/to place/VB/place it/PRP/it in/IN/in both/DT/both subtrees/NNS/subtrees /./. chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 21/CD/21 3.2/CD/3.2 searching/VBG/searching searching/NN/searching a/DT/a bst/NN/bst is/VBZ/is even/RB/even simpler/JJR/simpler than/IN/than insertion/NNP/insertion. the/DT/the pseudocode/NN/pseudocode is/VBZ/is self-explanatory/JJ/self-explanatory but/CC/but we/PRP/we will/MD/will look/VB/look brie/NN/brie Â/:/Â °/:/° y/NN/y at/IN/at the/DT/the premise/NN/premise of/IN/of the/DT/the algorithm/NN/algorithm nonetheless/NN/nonetheless /./. we/PRP/we have/VBP/have talked/VBN/talked previously/RB/previously about/IN/about insertion/NN/insertion /,/, we/PRP/we go/VBP/go either/RB/either left/VBN/left or/CC/or right/RB/right with/IN/with the/DT/the right/NN/right subtree/NN/subtree containing/VBG/containing values/NNS/values that/WDT/that are/VBP/are Â/:/Â ¸/:/¸ x/NN/x where/WRB/where x/NN/x is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the node/NN/node we/PRP/we are/VBP/are inserting/NNP/inserting. when/WRB/when searching/VBG/searching the/DT/the rules/NNS/rules are/VBP/are made/VBN/made a/DT/a little/RB/little more/RBR/more atomic/JJ/atomic and/CC/and at/IN/at any/DT/any one/CD/one time/NN/time we/PRP/we have/VBP/have four/CD/four cases/NNS/cases to/TO/to consider/VB/consider /:/: 1/CD/1. the/DT/the root/NN/root =/:/= ;/:/; in/IN/in which/WDT/which case/NN/case value/NN/value is/VBZ/is not/RB/not in/IN/in the/DT/the bst/NN/bst ;/:/; or/CC/or 2/CD/2. root.value/JJ/root.value =/NN/= value/NN/value in/IN/in which/WDT/which case/NN/case value/NN/value is/VBZ/is in/IN/in the/DT/the bst/NN/bst ;/:/; or/CC/or 3/CD/3. value/NN/value </:/< root.value/JJ/root.value /,/, we/PRP/we must/MD/must inspect/VB/inspect the/DT/the left/NN/left subtree/NN/subtree of/IN/of root/NN/root for/IN/for value/NN/value ;/:/; or/CC/or 4/CD/4. value/NN/value >/:/> root.value/JJ/root.value /,/, we/PRP/we must/MD/must inspect/VB/inspect the/DT/the right/NN/right subtree/NN/subtree of/IN/of root/NN/root for/IN/for value/NN/value /./. 1/CD/1 /CD/) algorithm/NN/algorithm contains/NNS/contains /:/( root/NN/root /,/, value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the tree/NN/tree /,/, value/NN/value is/VBZ/is what/WP/what we/PRP/we would/MD/would like/VB/like to/TO/to locate/VB/locate 3/CD/3 /CD/) post/NN/post /:/: value/NN/value is/VBZ/is either/DT/either located/VBN/located or/CC/or not/RB/not 4/CD/4 /CD/) if/IN/if root/NN/root =/:/= ;/:/; 5/CD/5 /CD/) return/NN/return false/NN/false 6/CD/6 /CD/) end/NN/end if/IN/if 7/CD/7 /CD/) if/IN/if root.value/JJ/root.value =/NN/= value/NN/value 8/CD/8 /CD/) return/NN/return true/JJ/true 9/CD/9 /CD/) else/NN/else if/IN/if value/NN/value </:/< root.value/JJ/root.value 10/CD/10 /CD/) return/NN/return contains/VBZ/contains /:/( root.left/JJ/root.left /,/, value/NN/value /:/) 11/CD/11 /CD/) else/NN/else 12/CD/12 /CD/) return/NN/return contains/VBZ/contains /:/( root.right/JJ/root.right /,/, value/NN/value /:/) 13/CD/13 /CD/) end/NN/end if/IN/if 14/CD/14 /CD/) end/NN/end contains/NNS/contains chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 22/CD/22 3.3/CD/3.3 deletion/NN/deletion removing/VBG/removing a/DT/a node/NN/node from/IN/from a/DT/a bst/NN/bst is/VBZ/is fairly/RB/fairly straightforward/JJ/straightforward /,/, with/IN/with four/CD/four cases/NNS/cases to/TO/to con/NNP/con- sider/NN/sider /:/: 1/CD/1. the/DT/the value/NN/value to/TO/to remove/VB/remove is/VBZ/is a/DT/a leaf/NN/leaf node/NN/node ;/:/; or/CC/or 2/CD/2. the/DT/the value/NN/value to/TO/to remove/VB/remove has/VBZ/has a/DT/a right/NN/right subtree/NN/subtree /,/, but/CC/but no/DT/no left/NN/left subtree/NN/subtree ;/:/; or/CC/or 3/CD/3. the/DT/the value/NN/value to/TO/to remove/VB/remove has/VBZ/has a/DT/a left/VBN/left subtree/NN/subtree /,/, but/CC/but no/DT/no right/NN/right subtree/NN/subtree ;/:/; or/CC/or 4/CD/4. the/DT/the value/NN/value to/TO/to remove/VB/remove has/VBZ/has both/DT/both a/DT/a left/NN/left and/CC/and right/RB/right subtree/JJ/subtree in/IN/in which/WDT/which case/NN/case we/PRP/we promote/VBP/promote the/DT/the largest/JJS/largest value/NN/value in/IN/in the/DT/the left/NN/left subtree/NN/subtree /./. there/EX/there is/VBZ/is also/RB/also an/DT/an implicit/JJ/implicit Â/NN/Â ¯/:/¯ fth/NN/fth case/NN/case whereby/NN/whereby the/DT/the node/NN/node to/TO/to be/VB/be removed/VBN/removed is/VBZ/is the/DT/the only/JJ/only node/NN/node in/IN/in the/DT/the tree/NNP/tree. this/DT/this case/NN/case is/VBZ/is already/RB/already covered/VBN/covered by/IN/by the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst /,/, but/CC/but should/MD/should be/VB/be noted/VBN/noted as/IN/as a/DT/a possibility/NN/possibility nonetheless/NN/nonetheless /./. of/IN/of course/NN/course in/IN/in a/DT/a bst/NN/bst a/DT/a value/NN/value may/MD/may occur/VB/occur more/RBR/more than/IN/than once/NNP/once. in/IN/in such/JJ/such a/DT/a case/NN/case the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst occurrence/NN/occurrence of/IN/of that/DT/that value/NN/value in/IN/in the/DT/the bst/NN/bst will/MD/will be/VB/be removed/VBN/removed /./. 23/CD/23 14/CD/14 31/CD/31 7/CD/7 #/#/# 1/CD/1 /:/: leaf/NN/leaf node/NN/node 9/CD/9 #/#/# 2/CD/2 /:/: right/RB/right subtree/JJ/subtree no/DT/no left/NN/left subtree/NN/subtree #/#/# 3/CD/3 /:/: left/VBN/left subtree/NN/subtree no/DT/no right/NN/right subtree/NN/subtree #/#/# 4/CD/4 /:/: right/JJ/right subtree/NN/subtree and/CC/and left/VBN/left subtree/NN/subtree figure/NN/figure 3.2/CD/3.2 /:/: binary/JJ/binary search/NN/search tree/NN/tree deletion/NN/deletion cases/NNS/cases the/DT/the remove/NN/remove algorithm/NN/algorithm given/VBN/given below/IN/below relies/NNS/relies on/IN/on two/CD/two further/JJ/further helper/NN/helper algorithms/NNS/algorithms named/VBD/named findp/NN/findp arent/NN/arent /,/, and/CC/and findnode/VB/findnode which/WDT/which are/VBP/are described/VBN/described in/IN/in x3.4/-NONE-/x3.4 and/CC/and x3.5/-NONE-/x3.5 re/-LRB-/re- spectively/RB/spectively /./. chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 23/CD/23 1/CD/1 /CD/) algorithm/NN/algorithm remove/NN/remove /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the node/NN/node to/TO/to remove/VB/remove /,/, root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 3/CD/3 /CD/) count/NN/count is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the bst/NN/bst 3/CD/3 /CD/) post/NN/post /:/: node/NN/node with/IN/with value/NN/value is/VBZ/is removed/VBN/removed if/IN/if found/VBN/found in/IN/in which/WDT/which case/NN/case yields/VBZ/yields true/JJ/true /,/, otherwise/RB/otherwise false/VB/false 4/CD/4 /CD/) nodetoremove/NN/nodetoremove Ã/:/Ã /:/ findnode/NN/findnode /:/( value/NN/value /:/) 5/CD/5 /CD/) if/IN/if nodetoremove/JJ/nodetoremove =/NN/= ;/:/; 6/CD/6 /CD/) return/NN/return false/NN/false ///:/// value/NN/value not/RB/not in/IN/in bst/NN/bst 7/CD/7 /CD/) end/NN/end if/IN/if 8/CD/8 /CD/) parent/NN/parent Ã/:/Ã /:/ findparent/NN/findparent /:/( value/NN/value /:/) 9/CD/9 /CD/) if/IN/if count/NN/count =/:/= 1/CD/1 10/CD/10 /CD/) root/NN/root Ã/:/Ã /:/ ;/:/; ///:/// we/PRP/we are/VBP/are removing/VBG/removing the/DT/the only/JJ/only node/NN/node in/IN/in the/DT/the bst/NN/bst 11/CD/11 /CD/) else/NN/else if/IN/if nodetoremove.left/JJ/nodetoremove.left =/NN/= ;/:/; and/CC/and nodetoremove.right/JJ/nodetoremove.right =/NN/= null/NN/null 12/CD/12 /CD/) ///CD/// case/NN/case #/#/# 1/CD/1 13/CD/13 /CD/) if/IN/if nodetoremove.value/JJ/nodetoremove.value </NN/< parent.value/JJ/parent.value 14/CD/14 /CD/) parent.left/JJ/parent.left Ã/NN/Ã /:/ ;/:/; 15/CD/15 /CD/) else/NN/else 16/CD/16 /CD/) parent.right/JJ/parent.right Ã/NN/Ã /:/ ;/:/; 17/CD/17 /CD/) end/NN/end if/IN/if 18/CD/18 /CD/) else/NN/else if/IN/if nodetoremove.left/JJ/nodetoremove.left =/NN/= ;/:/; and/CC/and nodetoremove.right/JJ/nodetoremove.right 6/CD/6 =/CD/= ;/:/; 19/CD/19 /CD/) ///CD/// case/NN/case #/#/# 2/CD/2 20/CD/20 /CD/) if/IN/if nodetoremove.value/JJ/nodetoremove.value </NN/< parent.value/JJ/parent.value 21/CD/21 /CD/) parent.left/JJ/parent.left Ã/NN/Ã /:/ nodetoremove.right/JJ/nodetoremove.right 22/CD/22 /CD/) else/NN/else 23/CD/23 /CD/) parent.right/JJ/parent.right Ã/NN/Ã /:/ nodetoremove.right/JJ/nodetoremove.right 24/CD/24 /CD/) end/NN/end if/IN/if 25/CD/25 /CD/) else/NN/else if/IN/if nodetoremove.left/JJ/nodetoremove.left 6/CD/6 =/CD/= ;/:/; and/CC/and nodetoremove.right/JJ/nodetoremove.right =/NN/= ;/:/; 26/CD/26 /CD/) ///CD/// case/NN/case #/#/# 3/CD/3 27/CD/27 /CD/) if/IN/if nodetoremove.value/JJ/nodetoremove.value </NN/< parent.value/JJ/parent.value 28/CD/28 /CD/) parent.left/JJ/parent.left Ã/NN/Ã /:/ nodetoremove.left/JJ/nodetoremove.left 29/CD/29 /CD/) else/NN/else 30/CD/30 /CD/) parent.right/JJ/parent.right Ã/NN/Ã /:/ nodetoremove.left/JJ/nodetoremove.left 31/CD/31 /CD/) end/NN/end if/IN/if 32/CD/32 /CD/) else/NN/else 33/CD/33 /CD/) ///CD/// case/NN/case #/#/# 4/CD/4 34/CD/34 /CD/) largestv/NN/largestv alue/NN/alue Ã/:/Ã /:/ nodetoremove.left/JJ/nodetoremove.left 35/CD/35 /CD/) while/IN/while largestv/NN/largestv alue.right/NN/alue.right 6/CD/6 =/CD/= ;/:/; 36/CD/36 /CD/) ///CD/// Â/CD/Â ¯/CD/¯ nd/NN/nd the/DT/the largest/JJS/largest value/NN/value in/IN/in the/DT/the left/NN/left subtree/NN/subtree of/IN/of nodetoremove/NN/nodetoremove 37/CD/37 /CD/) largestv/NN/largestv alue/NN/alue Ã/:/Ã /:/ largestv/NN/largestv alue.right/JJ/alue.right 38/CD/38 /CD/) end/NN/end while/IN/while 39/CD/39 /CD/) ///CD/// set/NN/set the/DT/the parents/NNS/parents '/POS/' right/NN/right pointer/NN/pointer of/IN/of largestv/NN/largestv alue/NN/alue to/TO/to ;/:/; 40/CD/40 /CD/) findparent/NN/findparent /:/( largestv/NN/largestv alue.value/JJ/alue.value /NN/) .right/JJ/.right Ã/NN/Ã /:/ ;/:/; 41/CD/41 /CD/) nodetoremove.value/JJ/nodetoremove.value Ã/NN/Ã /:/ largestv/NN/largestv alue.value/JJ/alue.value 42/CD/42 /CD/) end/NN/end if/IN/if 43/CD/43 /CD/) count/NN/count Ã/:/Ã /:/ count/NN/count Â/:/Â ¡/:/¡ 1/CD/1 44/CD/44 /CD/) return/NN/return true/JJ/true 45/CD/45 /CD/) end/NN/end remove/NN/remove chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 24/CD/24 3.4/CD/3.4 finding/NN/finding the/DT/the parent/NN/parent of/IN/of a/DT/a given/VBN/given node/NN/node the/DT/the purpose/NN/purpose of/IN/of this/DT/this algorithm/NN/algorithm is/VBZ/is simple/JJ/simple /:/- to/TO/to return/VB/return a/DT/a reference/NN/reference /:/( or/CC/or pointer/JJR/pointer /:/) to/TO/to the/DT/the parent/NN/parent node/NN/node of/IN/of the/DT/the one/CD/one with/IN/with the/DT/the given/VBN/given value/NNP/value. we/PRP/we have/VBP/have found/VBN/found that/IN/that such/JJ/such an/DT/an algorithm/NN/algorithm is/VBZ/is very/RB/very useful/JJ/useful /,/, especially/RB/especially when/WRB/when performing/VBG/performing extensive/JJ/extensive tree/NN/tree transforma/NN/transforma- tions/NNS/tions /./. 1/CD/1 /CD/) algorithm/NN/algorithm findparent/NN/findparent /:/( value/NN/value /,/, root/NN/root /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the node/NN/node we/PRP/we want/VBP/want to/TO/to Â/VB/Â ¯/:/¯ nd/NN/nd the/DT/the parent/NN/parent of/IN/of 3/CD/3 /CD/) root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst and/CC/and is/VBZ/is !/./! =/:/= ;/:/; 4/CD/4 /CD/) post/NN/post /:/: a/DT/a reference/NN/reference to/TO/to the/DT/the parent/NN/parent node/NN/node of/IN/of value/NN/value if/IN/if found/NN/found ;/:/; otherwise/NN/otherwise ;/:/; 5/CD/5 /CD/) if/IN/if value/NN/value =/:/= root.value/JJ/root.value 6/CD/6 /CD/) return/NN/return ;/:/; 7/CD/7 /CD/) end/NN/end if/IN/if 8/CD/8 /CD/) if/IN/if value/NN/value </:/< root.value/JJ/root.value 9/CD/9 /CD/) if/IN/if root.left/JJ/root.left =/NN/= ;/:/; 10/CD/10 /CD/) return/NN/return ;/:/; 11/CD/11 /CD/) else/NN/else if/IN/if root.left.value/JJ/root.left.value =/NN/= value/NN/value 12/CD/12 /CD/) return/NN/return root/NN/root 13/CD/13 /CD/) else/NN/else 14/CD/14 /CD/) return/NN/return findparent/NN/findparent /:/( value/NN/value /,/, root.left/JJ/root.left /NN/) 15/CD/15 /CD/) end/NN/end if/IN/if 16/CD/16 /CD/) else/NN/else 17/CD/17 /CD/) if/IN/if root.right/JJ/root.right =/NN/= ;/:/; 18/CD/18 /CD/) return/NN/return ;/:/; 19/CD/19 /CD/) else/NN/else if/IN/if root.right.value/JJ/root.right.value =/NN/= value/NN/value 20/CD/20 /CD/) return/NN/return root/NN/root 21/CD/21 /CD/) else/NN/else 22/CD/22 /CD/) return/NN/return findparent/NN/findparent /:/( value/NN/value /,/, root.right/JJ/root.right /NN/) 23/CD/23 /CD/) end/NN/end if/IN/if 24/CD/24 /CD/) end/NN/end if/IN/if 25/CD/25 /CD/) end/NN/end findparent/NN/findparent a/DT/a special/JJ/special case/NN/case in/IN/in the/DT/the above/NN/above algorithm/NN/algorithm is/VBZ/is when/WRB/when the/DT/the speci/NN/speci Â/:/Â ¯/:/¯ ed/VBD/ed value/NN/value does/VBZ/does not/RB/not exist/VB/exist in/IN/in the/DT/the bst/NN/bst /,/, in/IN/in which/WDT/which case/NN/case we/PRP/we return/VBP/return ;/:/; /./. callers/NNS/callers to/TO/to this/DT/this algorithm/NN/algorithm must/MD/must take/VB/take account/NN/account of/IN/of this/DT/this possibility/NN/possibility unless/IN/unless they/PRP/they are/VBP/are already/RB/already certain/JJ/certain that/IN/that a/DT/a node/NN/node with/IN/with the/DT/the speci/NN/speci Â/:/Â ¯/:/¯ ed/VBD/ed value/NN/value exists/NNS/exists /./. 3.5/CD/3.5 attaining/VBG/attaining a/DT/a reference/NN/reference to/TO/to a/DT/a node/NN/node this/DT/this algorithm/NN/algorithm is/VBZ/is very/RB/very similar/JJ/similar to/TO/to x3.4/-NONE-/x3.4 /,/, but/CC/but instead/RB/instead of/IN/of returning/VBG/returning a/DT/a reference/NN/reference to/TO/to the/DT/the parent/NN/parent of/IN/of the/DT/the node/NN/node with/IN/with the/DT/the speci/NN/speci Â/:/Â ¯/:/¯ ed/VBD/ed value/NN/value /,/, it/PRP/it returns/VBZ/returns a/DT/a reference/NN/reference to/TO/to the/DT/the node/NN/node itself/NNP/itself. again/RB/again /,/, ;/:/; is/VBZ/is returned/VBN/returned if/IN/if the/DT/the value/NN/value is/VBZ/is n't/RB/n't found/VBN/found /./. chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 25/CD/25 1/CD/1 /CD/) algorithm/NN/algorithm findnode/NN/findnode /:/( root/NN/root /,/, value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the node/NN/node we/PRP/we want/VBP/want to/TO/to Â/VB/Â ¯/:/¯ nd/NN/nd the/DT/the parent/NN/parent of/IN/of 3/CD/3 /CD/) root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 4/CD/4 /CD/) post/NN/post /:/: a/DT/a reference/NN/reference to/TO/to the/DT/the node/NN/node of/IN/of value/NN/value if/IN/if found/NN/found ;/:/; otherwise/NN/otherwise ;/:/; 5/CD/5 /CD/) if/IN/if root/NN/root =/:/= ;/:/; 6/CD/6 /CD/) return/NN/return ;/:/; 7/CD/7 /CD/) end/NN/end if/IN/if 8/CD/8 /CD/) if/IN/if root.value/JJ/root.value =/NN/= value/NN/value 9/CD/9 /CD/) return/NN/return root/NN/root 10/CD/10 /CD/) else/RB/else if/IN/if value/NN/value </:/< root.value/JJ/root.value 11/CD/11 /CD/) return/NN/return findnode/NN/findnode /:/( root.left/JJ/root.left /,/, value/NN/value /:/) 12/CD/12 /CD/) else/NN/else 13/CD/13 /CD/) return/NN/return findnode/NN/findnode /:/( root.right/JJ/root.right /,/, value/NN/value /:/) 14/CD/14 /CD/) end/NN/end if/IN/if 15/CD/15 /CD/) end/NN/end findnode/NN/findnode astute/NN/astute readers/NNS/readers will/MD/will have/VB/have noticed/VBN/noticed that/IN/that the/DT/the findnode/NN/findnode algorithm/NN/algorithm is/VBZ/is exactly/RB/exactly the/DT/the same/JJ/same as/IN/as the/DT/the contains/NNS/contains algorithm/VBP/algorithm /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x3.2/-NONE-/x3.2 /:/) with/IN/with the/DT/the modi/NN/modi Â/:/Â ¯/:/¯ cation/NN/cation that/IN/that we/PRP/we are/VBP/are returning/VBG/returning a/DT/a reference/NN/reference to/TO/to a/DT/a node/NN/node not/RB/not true/JJ/true or/CC/or false/NNP/false. given/CD/given findnode/NN/findnode /,/, the/DT/the easiest/JJS/easiest way/NN/way of/IN/of implementing/VBG/implementing contains/NNS/contains is/VBZ/is to/TO/to call/VB/call findnode/NN/findnode and/CC/and compare/NN/compare the/DT/the return/NN/return value/NN/value with/IN/with ;/:/; /./. 3.6/CD/3.6 finding/NN/finding the/DT/the smallest/JJS/smallest and/CC/and largest/JJS/largest values/NNS/values in/IN/in the/DT/the binary/JJ/binary search/NN/search tree/NN/tree to/TO/to Â/VB/Â ¯/:/¯ nd/NN/nd the/DT/the smallest/JJS/smallest value/NN/value in/IN/in a/DT/a bst/NN/bst you/PRP/you simply/RB/simply traverse/VBP/traverse the/DT/the nodes/NNS/nodes in/IN/in the/DT/the left/NN/left subtree/NN/subtree of/IN/of the/DT/the bst/NN/bst always/RB/always going/VBG/going left/VBN/left upon/IN/upon each/DT/each encounter/NN/encounter with/IN/with a/DT/a node/NN/node /,/, termi/NNP/termi- nating/NN/nating when/WRB/when you/PRP/you Â/VBP/Â ¯/:/¯ nd/NN/nd a/DT/a node/NN/node with/IN/with no/DT/no left/NN/left subtree/NNP/subtree. the/DT/the opposite/JJ/opposite is/VBZ/is the/DT/the case/NN/case when/WRB/when Â/:/Â ¯/:/¯ nding/VBG/nding the/DT/the largest/JJS/largest value/NN/value in/IN/in the/DT/the bst/NNP/bst. both/DT/both algorithms/NNS/algorithms are/VBP/are incredibly/RB/incredibly simple/JJ/simple /,/, and/CC/and are/VBP/are listed/VBN/listed simply/RB/simply for/IN/for completeness/NN/completeness /./. the/DT/the base/NN/base case/NN/case in/IN/in both/DT/both findmin/NN/findmin /,/, and/CC/and findmax/NN/findmax algorithms/NNS/algorithms is/VBZ/is when/WRB/when the/DT/the left/NN/left /:/( findmin/NN/findmin /:/) /,/, or/CC/or right/RB/right /:/( findmax/NN/findmax /:/) node/NN/node references/NNS/references are/VBP/are ;/:/; in/IN/in which/WDT/which case/NN/case we/PRP/we have/VBP/have reached/VBN/reached the/DT/the last/JJ/last node/NN/node /./. 1/CD/1 /CD/) algorithm/NN/algorithm findmin/NN/findmin /:/( root/NN/root /:/) 2/CD/2 /CD/) pre/NN/pre /:/: root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 3/CD/3 /CD/) root/NN/root 6/CD/6 =/CD/= ;/:/; 4/CD/4 /CD/) post/NN/post /:/: the/DT/the smallest/JJS/smallest value/NN/value in/IN/in the/DT/the bst/NN/bst is/VBZ/is located/VBN/located 5/CD/5 /CD/) if/IN/if root.left/JJ/root.left =/NN/= ;/:/; 6/CD/6 /CD/) return/NN/return root.value/JJ/root.value 7/CD/7 /CD/) end/NN/end if/IN/if 8/CD/8 /CD/) findmin/NN/findmin /:/( root.left/JJ/root.left /NN/) 9/CD/9 /CD/) end/NN/end findmin/NN/findmin chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 26/CD/26 1/CD/1 /CD/) algorithm/NN/algorithm findmax/NN/findmax /:/( root/NN/root /:/) 2/CD/2 /CD/) pre/NN/pre /:/: root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 3/CD/3 /CD/) root/NN/root 6/CD/6 =/CD/= ;/:/; 4/CD/4 /CD/) post/NN/post /:/: the/DT/the largest/JJS/largest value/NN/value in/IN/in the/DT/the bst/NN/bst is/VBZ/is located/VBN/located 5/CD/5 /CD/) if/IN/if root.right/JJ/root.right =/NN/= ;/:/; 6/CD/6 /CD/) return/NN/return root.value/JJ/root.value 7/CD/7 /CD/) end/NN/end if/IN/if 8/CD/8 /CD/) findmax/NN/findmax /:/( root.right/JJ/root.right /NN/) 9/CD/9 /CD/) end/NN/end findmax/NN/findmax 3.7/CD/3.7 tree/NN/tree traversals/NNS/traversals there/EX/there are/VBP/are various/JJ/various strategies/NNS/strategies which/WDT/which can/MD/can be/VB/be employed/VBN/employed to/TO/to traverse/VB/traverse the/DT/the items/NNS/items in/IN/in a/DT/a tree/NN/tree ;/:/; the/DT/the choice/NN/choice of/IN/of strategy/NN/strategy depends/NNS/depends on/IN/on which/WDT/which node/NN/node visitation/NN/visitation order/NN/order you/PRP/you require/VBP/require /./. in/IN/in this/DT/this section/NN/section we/PRP/we will/MD/will touch/VB/touch on/IN/on the/DT/the traversals/NNS/traversals that/WDT/that dsa/NN/dsa provides/VBZ/provides on/IN/on all/DT/all data/NNS/data structures/NNS/structures that/WDT/that derive/JJ/derive from/IN/from binarysearcht/NN/binarysearcht ree/NN/ree /./. 3.7.1/CD/3.7.1 preorder/NN/preorder when/WRB/when using/VBG/using the/DT/the preorder/NN/preorder algorithm/NN/algorithm /,/, you/PRP/you visit/VBD/visit the/DT/the root/NN/root Â/:/Â ¯/:/¯ rst/JJ/rst /,/, then/RB/then traverse/VB/traverse the/DT/the left/NN/left subtree/NN/subtree and/CC/and Â/CD/Â ¯/CD/¯ nally/RB/nally traverse/JJ/traverse the/DT/the right/NN/right subtree/NNP/subtree. an/DT/an example/NN/example of/IN/of preorder/NN/preorder traversal/NN/traversal is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 3.3/CD/3.3 /./. 1/CD/1 /CD/) algorithm/NN/algorithm preorder/NN/preorder /:/( root/NN/root /:/) 2/CD/2 /CD/) pre/NN/pre /:/: root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 3/CD/3 /CD/) post/NN/post /:/: the/DT/the nodes/NNS/nodes in/IN/in the/DT/the bst/NN/bst have/VBP/have been/VBN/been visited/VBN/visited in/IN/in preorder/NN/preorder 4/CD/4 /CD/) if/IN/if root/NN/root 6/CD/6 =/CD/= ;/:/; 5/CD/5 /CD/) yield/NN/yield root.value/JJ/root.value 6/CD/6 /CD/) preorder/NN/preorder /:/( root.left/JJ/root.left /NN/) 7/CD/7 /CD/) preorder/NN/preorder /:/( root.right/JJ/root.right /NN/) 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) end/NN/end preorder/NN/preorder 3.7.2/CD/3.7.2 postorder/NN/postorder this/DT/this algorithm/NN/algorithm is/VBZ/is very/RB/very similar/JJ/similar to/TO/to that/DT/that described/VBN/described in/IN/in x3.7.1/-NONE-/x3.7.1 /,/, however/RB/however the/DT/the value/NN/value of/IN/of the/DT/the node/NN/node is/VBZ/is yielded/VBN/yielded after/IN/after traversing/NN/traversing both/DT/both subtrees/NNP/subtrees. an/DT/an example/NN/example of/IN/of postorder/NN/postorder traversal/NN/traversal is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 3.4/CD/3.4 /./. 1/CD/1 /CD/) algorithm/NN/algorithm postorder/NN/postorder /:/( root/NN/root /:/) 2/CD/2 /CD/) pre/NN/pre /:/: root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 3/CD/3 /CD/) post/NN/post /:/: the/DT/the nodes/NNS/nodes in/IN/in the/DT/the bst/NN/bst have/VBP/have been/VBN/been visited/VBN/visited in/IN/in postorder/NN/postorder 4/CD/4 /CD/) if/IN/if root/NN/root 6/CD/6 =/CD/= ;/:/; 5/CD/5 /CD/) postorder/NN/postorder /:/( root.left/JJ/root.left /NN/) 6/CD/6 /CD/) postorder/NN/postorder /:/( root.right/JJ/root.right /NN/) 7/CD/7 /CD/) yield/NN/yield root.value/JJ/root.value 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) end/NN/end postorder/NN/postorder chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 27/CD/27 23/CD/23 14/CD/14 31/CD/31 7/CD/7 17/CD/17 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 /CD/( a/DT/a /NN/) /:/( b/NN/b /:/) /:/( c/NN/c /:/) /:/( d/NN/d /:/) /:/( e/NN/e /:/) /:/( f/NN/f /:/) 17/CD/17 17/CD/17 17/CD/17 17/CD/17 17/CD/17 figure/NN/figure 3.3/CD/3.3 /:/: preorder/NN/preorder visit/NN/visit binary/NN/binary search/NN/search tree/NN/tree example/NN/example chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 28/CD/28 23/CD/23 14/CD/14 31/CD/31 7/CD/7 17/CD/17 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 /CD/( a/DT/a /NN/) /:/( b/NN/b /:/) /:/( c/NN/c /:/) /:/( d/NN/d /:/) /:/( e/NN/e /:/) /:/( f/NN/f /:/) 17/CD/17 17/CD/17 17/CD/17 17/CD/17 17/CD/17 figure/NN/figure 3.4/CD/3.4 /:/: postorder/NN/postorder visit/NN/visit binary/NN/binary search/NN/search tree/NN/tree example/NN/example chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 29/CD/29 3.7.3/CD/3.7.3 inorder/NN/inorder another/DT/another variation/NN/variation of/IN/of the/DT/the algorithms/NNS/algorithms de/VBP/de Â/:/Â ¯/:/¯ ned/VBD/ned in/IN/in x3.7.1/-NONE-/x3.7.1 and/CC/and x3.7.2/-NONE-/x3.7.2 is/VBZ/is that/IN/that of/IN/of inorder/NN/inorder traversal/NN/traversal where/WRB/where the/DT/the value/NN/value of/IN/of the/DT/the current/JJ/current node/NN/node is/VBZ/is yielded/VBN/yielded in/IN/in between/IN/between traversing/NN/traversing the/DT/the left/NN/left subtree/NN/subtree and/CC/and the/DT/the right/NN/right subtree/NNP/subtree. an/DT/an example/NN/example of/IN/of inorder/NN/inorder traversal/NN/traversal is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 3.5/CD/3.5 /./. 23/CD/23 14/CD/14 31/CD/31 7/CD/7 17/CD/17 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 /CD/( a/DT/a /NN/) /:/( b/NN/b /:/) /:/( c/NN/c /:/) /:/( d/NN/d /:/) /:/( e/NN/e /:/) /:/( f/NN/f /:/) 17/CD/17 17/CD/17 17/CD/17 17/CD/17 17/CD/17 figure/NN/figure 3.5/CD/3.5 /:/: inorder/NN/inorder visit/NN/visit binary/NN/binary search/NN/search tree/NN/tree example/NN/example 1/CD/1 /CD/) algorithm/NN/algorithm inorder/NN/inorder /:/( root/NN/root /:/) 2/CD/2 /CD/) pre/NN/pre /:/: root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 3/CD/3 /CD/) post/NN/post /:/: the/DT/the nodes/NNS/nodes in/IN/in the/DT/the bst/NN/bst have/VBP/have been/VBN/been visited/VBN/visited in/IN/in inorder/NN/inorder 4/CD/4 /CD/) if/IN/if root/NN/root 6/CD/6 =/CD/= ;/:/; 5/CD/5 /CD/) inorder/NN/inorder /:/( root.left/JJ/root.left /NN/) 6/CD/6 /CD/) yield/NN/yield root.value/JJ/root.value 7/CD/7 /CD/) inorder/NN/inorder /:/( root.right/JJ/root.right /NN/) 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) end/NN/end inorder/NN/inorder one/CD/one of/IN/of the/DT/the beauties/NNS/beauties of/IN/of inorder/NN/inorder traversal/NN/traversal is/VBZ/is that/IN/that values/NNS/values are/VBP/are yielded/VBN/yielded in/IN/in their/PRP$/their comparison/NN/comparison order/NNP/order. in/IN/in other/JJ/other words/NNS/words /,/, when/WRB/when traversing/VBG/traversing a/DT/a populated/VBN/populated bst/NN/bst with/IN/with the/DT/the inorder/NN/inorder strategy/NN/strategy /,/, the/DT/the yielded/VBN/yielded sequence/NN/sequence would/MD/would have/VB/have property/NN/property xi/NN/xi Â/:/Â ·/:/· xi/NN/xi +/:/+ 18i/CD/18i /./. chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 30/CD/30 3.7.4/CD/3.7.4 breadth/NN/breadth first/RB/first traversing/VBG/traversing a/DT/a tree/NN/tree in/IN/in breadth/NN/breadth Â/:/Â ¯/:/¯ rst/JJ/rst order/NN/order yields/NNS/yields the/DT/the values/NNS/values of/IN/of all/DT/all nodes/NNS/nodes of/IN/of a/DT/a par/JJ/par- ticular/NN/ticular depth/NN/depth in/IN/in the/DT/the tree/NN/tree before/IN/before any/DT/any deeper/NN/deeper ones/NNP/ones. in/IN/in other/JJ/other words/NNS/words /,/, given/VBN/given a/DT/a depth/NN/depth d/NN/d we/PRP/we would/MD/would visit/VB/visit the/DT/the values/NNS/values of/IN/of all/DT/all nodes/NNS/nodes at/IN/at d/NN/d in/IN/in a/DT/a left/NN/left to/TO/to right/RB/right fashion/NN/fashion /,/, then/RB/then we/PRP/we would/MD/would proceed/VB/proceed to/TO/to d/VB/d +/:/+ 1/CD/1 and/CC/and so/RB/so on/IN/on until/IN/until we/PRP/we hade/VBP/hade no/DT/no more/RBR/more nodes/VBZ/nodes to/TO/to visit/NNP/visit. an/DT/an example/NN/example of/IN/of breadth/NN/breadth Â/:/Â ¯/:/¯ rst/JJ/rst traversal/NN/traversal is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 3.6/CD/3.6 /./. traditionally/RB/traditionally breadth/JJ/breadth Â/NN/Â ¯/:/¯ rst/JJ/rst traversal/NN/traversal is/VBZ/is implemented/VBN/implemented using/VBG/using a/DT/a list/NN/list /:/( vector/NN/vector /,/, re/NNP/re- sizeable/JJ/sizeable array/NN/array /,/, etc/NN/etc /:/) to/TO/to store/VB/store the/DT/the values/NNS/values of/IN/of the/DT/the nodes/NNS/nodes visited/VBD/visited in/IN/in breadth/NN/breadth Â/:/Â ¯/:/¯ rst/JJ/rst order/NN/order and/CC/and then/RB/then a/DT/a queue/NN/queue to/TO/to store/VB/store those/DT/those nodes/NNS/nodes that/IN/that have/VBP/have yet/RB/yet to/TO/to be/VB/be visited/VBN/visited /./. 23/CD/23 14/CD/14 31/CD/31 7/CD/7 17/CD/17 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 23/CD/23 14/CD/14 31/CD/31 7/CD/7 9/CD/9 /CD/( a/DT/a /NN/) /:/( b/NN/b /:/) /:/( c/NN/c /:/) /:/( d/NN/d /:/) /:/( e/NN/e /:/) /:/( f/NN/f /:/) 17/CD/17 17/CD/17 17/CD/17 17/CD/17 17/CD/17 figure/NN/figure 3.6/CD/3.6 /:/: breadth/JJ/breadth first/JJ/first visit/NN/visit binary/NN/binary search/NN/search tree/NN/tree example/NN/example chapter/NN/chapter 3/CD/3. binary/JJ/binary search/NN/search tree/NN/tree 31/CD/31 1/CD/1 /CD/) algorithm/NN/algorithm breadthfirst/NN/breadthfirst /:/( root/NN/root /:/) 2/CD/2 /CD/) pre/NN/pre /:/: root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the bst/NN/bst 3/CD/3 /CD/) post/NN/post /:/: the/DT/the nodes/NNS/nodes in/IN/in the/DT/the bst/NN/bst have/VBP/have been/VBN/been visited/VBN/visited in/IN/in breadth/NN/breadth Â/:/Â ¯/:/¯ rst/JJ/rst order/NN/order 4/CD/4 /CD/) q/NN/q Ã/:/Ã /:/ queue/NN/queue 5/CD/5 /CD/) while/IN/while root/NN/root 6/CD/6 =/CD/= ;/:/; 6/CD/6 /CD/) yield/NN/yield root.value/JJ/root.value 7/CD/7 /CD/) if/IN/if root.left/JJ/root.left 6/CD/6 =/CD/= ;/:/; 8/CD/8 /CD/) q.enqueue/JJ/q.enqueue /NN/( root.left/JJ/root.left /NN/) 9/CD/9 /CD/) end/NN/end if/IN/if 10/CD/10 /CD/) if/IN/if root.right/JJ/root.right 6/CD/6 =/CD/= ;/:/; 11/CD/11 /CD/) q.enqueue/JJ/q.enqueue /NN/( root.right/JJ/root.right /NN/) 12/CD/12 /CD/) end/NN/end if/IN/if 13/CD/13 /CD/) if/IN/if !/./! q.isempty/JJ/q.isempty /NN/( /:/) 14/CD/14 /CD/) root/NN/root Ã/:/Ã /:/ q.dequeue/JJ/q.dequeue /NN/( /:/) 15/CD/15 /CD/) else/NN/else 16/CD/16 /CD/) root/NN/root Ã/:/Ã /:/ ;/:/; 17/CD/17 /CD/) end/NN/end if/IN/if 18/CD/18 /CD/) end/NN/end while/IN/while 19/CD/19 /CD/) end/NN/end breadthfirst/NN/breadthfirst 3.8/CD/3.8 summary/NN/summary a/DT/a binary/JJ/binary search/NN/search tree/NN/tree is/VBZ/is a/DT/a good/JJ/good solution/NN/solution when/WRB/when you/PRP/you need/VBP/need to/TO/to represent/VB/represent types/NNS/types that/WDT/that are/VBP/are ordered/VBN/ordered according/VBG/according to/TO/to some/DT/some custom/NN/custom rules/NNS/rules inherent/VBP/inherent to/TO/to that/DT/that type/NNP/type. with/IN/with logarithmic/JJ/logarithmic insertion/NN/insertion /,/, lookup/NN/lookup /,/, and/CC/and deletion/NN/deletion it/PRP/it is/VBZ/is very/RB/very e/JJ/e Â/NN/Â ®/:/® ecient/NNP/ecient. traversal/NN/traversal remains/VBZ/remains linear/JJ/linear /,/, but/CC/but there/EX/there are/VBP/are many/JJ/many ways/NNS/ways in/IN/in which/WDT/which you/PRP/you can/MD/can visit/VB/visit the/DT/the nodes/NNS/nodes of/IN/of a/DT/a tree/NNP/tree. trees/VBZ/trees are/VBP/are recursive/JJ/recursive data/NNS/data structures/NNS/structures /,/, so/RB/so typically/RB/typically you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd that/IN/that many/JJ/many algorithms/NNS/algorithms that/WDT/that operate/VBP/operate on/IN/on a/DT/a tree/NN/tree are/VBP/are recursive/JJ/recursive /./. the/DT/the run/NN/run times/VBZ/times presented/VBN/presented in/IN/in this/DT/this chapter/NN/chapter are/VBP/are based/VBN/based on/IN/on a/DT/a pretty/NN/pretty big/JJ/big assumption/NN/assumption /:/- that/IN/that the/DT/the binary/JJ/binary search/NN/search tree/NN/tree 's/POS/'s left/NN/left and/CC/and right/RB/right subtrees/VBZ/subtrees are/VBP/are reasonably/RB/reasonably balanced/VBN/balanced /./. we/PRP/we can/MD/can only/RB/only attain/VB/attain logarithmic/JJ/logarithmic run/NN/run times/NNS/times for/IN/for the/DT/the algorithms/NNS/algorithms presented/VBD/presented earlier/JJR/earlier when/WRB/when this/DT/this is/VBZ/is true/NNP/true. a/DT/a binary/JJ/binary search/NN/search tree/NN/tree does/VBZ/does not/RB/not enforce/VB/enforce such/JJ/such a/DT/a property/NN/property /,/, and/CC/and the/DT/the run/NN/run times/VBZ/times for/IN/for these/DT/these operations/NNS/operations on/IN/on a/DT/a pathologically/RB/pathologically unbalanced/VBN/unbalanced tree/NN/tree become/NN/become linear/NN/linear /:/: such/JJ/such a/DT/a tree/NN/tree is/VBZ/is e/NN/e Â/:/Â ®/:/® ectively/RB/ectively just/RB/just a/DT/a linked/VBN/linked list/NNP/list. later/JJ/later in/IN/in x7/NNP/x7 we/PRP/we will/MD/will examine/VB/examine an/DT/an avl/NN/avl tree/NN/tree that/WDT/that enforces/VBZ/enforces self-balancing/JJ/self-balancing properties/NNS/properties to/TO/to help/VB/help attain/NN/attain logarithmic/JJ/logarithmic run/NN/run times/NNS/times /./. chapter/NN/chapter 4/CD/4 heap/NN/heap a/DT/a heap/NN/heap can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a simple/JJ/simple tree/NN/tree data/NNS/data structure/NN/structure /,/, however/RB/however a/DT/a heap/NN/heap usually/RB/usually employs/VBZ/employs one/CD/one of/IN/of two/CD/two strategies/NNS/strategies /:/: 1/CD/1. min/NN/min heap/NN/heap ;/:/; or/CC/or 2/CD/2. max/NN/max heap/NN/heap each/DT/each strategy/NN/strategy determines/NNS/determines the/DT/the properties/NNS/properties of/IN/of the/DT/the tree/NN/tree and/CC/and its/PRP$/its values/NNP/values. if/IN/if you/PRP/you were/VBD/were to/TO/to choose/VB/choose the/DT/the min/NN/min heap/NN/heap strategy/NN/strategy then/RB/then each/DT/each parent/NN/parent node/NN/node would/MD/would have/VB/have a/DT/a value/NN/value that/WDT/that is/VBZ/is Â/:/Â ·/:/· than/IN/than its/PRP$/its children/NNP/children. for/IN/for example/NN/example /,/, the/DT/the node/NN/node at/IN/at the/DT/the root/NN/root of/IN/of the/DT/the tree/NN/tree will/MD/will have/VB/have the/DT/the smallest/JJS/smallest value/NN/value in/IN/in the/DT/the tree/NNP/tree. the/DT/the opposite/JJ/opposite is/VBZ/is true/JJ/true for/IN/for the/DT/the max/NN/max heap/NN/heap strategy/NNP/strategy. in/IN/in this/DT/this book/NN/book you/PRP/you should/MD/should assume/VB/assume that/IN/that a/DT/a heap/NN/heap employs/VBZ/employs the/DT/the min/NN/min heap/NN/heap strategy/NN/strategy unless/IN/unless otherwise/NN/otherwise stated/VBD/stated /./. unlike/IN/unlike other/JJ/other tree/NN/tree data/NNS/data structures/NNS/structures like/IN/like the/DT/the one/CD/one de/NN/de Â/:/Â ¯/:/¯ ned/VBD/ned in/IN/in x3/NNP/x3 a/DT/a heap/NN/heap is/VBZ/is generally/RB/generally implemented/VBN/implemented as/IN/as an/DT/an array/NN/array rather/RB/rather than/IN/than a/DT/a series/NN/series of/IN/of nodes/NNS/nodes which/WDT/which each/DT/each have/VBP/have refer/JJ/refer- ences/NNS/ences to/TO/to other/JJ/other nodes/NNP/nodes. the/DT/the nodes/NNS/nodes are/VBP/are conceptually/RB/conceptually the/DT/the same/JJ/same /,/, however/RB/however /,/, having/VBG/having at/IN/at most/JJS/most two/CD/two children/NNP/children. figure/NN/figure 4.1/CD/4.1 shows/NNS/shows how/WRB/how the/DT/the tree/NN/tree /:/( not/RB/not a/DT/a heap/NN/heap data/NN/data structure/NN/structure /:/) /:/( 12/CD/12 7/CD/7 /CD/( 3/CD/3 2/CD/2 /CD/) 6/CD/6 /CD/( 9/CD/9 /CD/) /CD/) would/MD/would be/VB/be represented/VBN/represented as/IN/as an/DT/an array/NNP/array. the/DT/the array/NN/array in/IN/in figure/NN/figure 4.1/CD/4.1 is/VBZ/is a/DT/a result/NN/result of/IN/of simply/RB/simply adding/VBG/adding values/NNS/values in/IN/in a/DT/a top-to-bottom/JJ/top-to-bottom /,/, left-to-right/JJ/left-to-right fashion/NNP/fashion. figure/NN/figure 4.2/CD/4.2 shows/NNS/shows arrows/VBZ/arrows to/TO/to the/DT/the direct/JJ/direct left/NN/left and/CC/and right/RB/right child/VB/child of/IN/of each/DT/each value/NN/value in/IN/in the/DT/the array/NN/array /./. this/DT/this chapter/NN/chapter is/VBZ/is very/RB/very much/JJ/much centred/VBN/centred around/IN/around the/DT/the notion/NN/notion of/IN/of representing/VBG/representing a/DT/a tree/NN/tree as/IN/as an/DT/an array/NN/array and/CC/and because/IN/because this/DT/this property/NN/property is/VBZ/is key/JJ/key to/TO/to understanding/NN/understanding this/DT/this chapter/NN/chapter figure/NN/figure 4.3/CD/4.3 shows/NNS/shows a/DT/a step/NN/step by/IN/by step/NN/step process/NN/process to/TO/to represent/VB/represent a/DT/a tree/NN/tree data/NN/data structure/NN/structure as/IN/as an/DT/an array/NN/array /./. in/IN/in figure/NN/figure 4.3/CD/4.3 you/PRP/you can/MD/can assume/VB/assume that/IN/that the/DT/the default/NN/default capacity/NN/capacity of/IN/of our/PRP$/our array/NN/array is/VBZ/is eight/CD/eight /./. using/VBG/using just/RB/just an/DT/an array/NN/array is/VBZ/is often/RB/often not/RB/not su/VB/su Â/:/Â ±/:/± cient/NN/cient as/IN/as we/PRP/we have/VBP/have to/TO/to be/VB/be up/RP/up front/JJ/front about/IN/about the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array to/TO/to use/VB/use for/IN/for the/DT/the heap/NNP/heap. often/RB/often the/DT/the run/NN/run time/NN/time behaviour/NN/behaviour of/IN/of a/DT/a program/NN/program can/MD/can be/VB/be unpredictable/JJ/unpredictable when/WRB/when it/PRP/it comes/VBZ/comes to/TO/to the/DT/the size/NN/size of/IN/of its/PRP$/its internal/JJ/internal data/NNS/data structures/NNS/structures /,/, so/RB/so we/PRP/we need/VBP/need to/TO/to choose/VB/choose a/DT/a more/RBR/more dynamic/JJ/dynamic data/NNS/data structure/NN/structure that/IN/that contains/NNS/contains the/DT/the following/VBG/following properties/NNS/properties /:/: 1/CD/1. we/PRP/we can/MD/can specify/VB/specify an/DT/an initial/JJ/initial size/NN/size of/IN/of the/DT/the array/NN/array for/IN/for scenarios/NNS/scenarios where/WRB/where we/PRP/we know/VBP/know the/DT/the upper/JJ/upper storage/NN/storage limit/NN/limit required/VBN/required ;/:/; and/CC/and 2/CD/2. the/DT/the data/NNS/data structure/VBP/structure encapsulates/NNS/encapsulates resizing/VBG/resizing algorithms/NNS/algorithms to/TO/to grow/VB/grow the/DT/the array/NN/array as/IN/as required/VBN/required at/IN/at run/VBN/run time/NN/time 32/CD/32 chapter/NN/chapter 4/CD/4. heap/NN/heap 33/CD/33 figure/NN/figure 4.1/CD/4.1 /:/: array/NN/array representation/NN/representation of/IN/of a/DT/a simple/JJ/simple tree/NN/tree data/NNS/data structure/NN/structure figure/NN/figure 4.2/CD/4.2 /:/: direct/JJ/direct children/NNS/children of/IN/of the/DT/the nodes/NNS/nodes in/IN/in an/DT/an array/NN/array representation/NN/representation of/IN/of a/DT/a tree/NN/tree data/NN/data structure/NN/structure 1/CD/1. vector/NN/vector 2/CD/2. arraylist/NN/arraylist 3/CD/3. list/NN/list figure/NN/figure 4.1/CD/4.1 does/VBZ/does not/RB/not specify/VB/specify how/WRB/how we/PRP/we would/MD/would handle/VB/handle adding/VBG/adding null/NN/null references/NNS/references to/TO/to the/DT/the heap/NNP/heap. this/DT/this varies/NNS/varies from/IN/from case/NN/case to/TO/to case/VB/case ;/:/; sometimes/RB/sometimes null/VBP/null values/NNS/values are/VBP/are prohibited/VBN/prohibited entirely/RB/entirely ;/:/; in/IN/in other/JJ/other cases/NNS/cases we/PRP/we may/MD/may treat/VB/treat them/PRP/them as/IN/as being/VBG/being smaller/JJR/smaller than/IN/than any/DT/any non-null/JJ/non-null value/NN/value /,/, or/CC/or indeed/RB/indeed greater/JJR/greater than/IN/than any/DT/any non-null/JJ/non-null value/NNP/value. you/PRP/you will/MD/will have/VB/have to/TO/to resolve/VB/resolve this/DT/this ambiguity/NN/ambiguity yourself/PRP/yourself having/VBG/having studied/VBN/studied your/PRP$/your requirements/NNP/requirements. for/IN/for the/DT/the sake/NN/sake of/IN/of clarity/NN/clarity we/PRP/we will/MD/will avoid/VB/avoid the/DT/the issue/NN/issue by/IN/by prohibiting/VBG/prohibiting null/JJ/null values/NNS/values /./. because/IN/because we/PRP/we are/VBP/are using/VBG/using an/DT/an array/NN/array we/PRP/we need/VBP/need some/DT/some way/NN/way to/TO/to calculate/VB/calculate the/DT/the index/NN/index of/IN/of a/DT/a parent/NN/parent node/NN/node /,/, and/CC/and the/DT/the children/NNS/children of/IN/of a/DT/a node/NNP/node. the/DT/the required/VBN/required expressions/NNS/expressions for/IN/for this/DT/this are/VBP/are de/IN/de Â/NNP/Â ¯/NNP/¯ ned/VBD/ned as/IN/as follows/NNS/follows for/IN/for a/DT/a node/NN/node at/IN/at index/NN/index /:/: 1/CD/1. /CD/( index/NN/index Â/:/Â ¡/:/¡ 1/CD/1 /CD/) /2/-NONE-//2 /:/( parent/NN/parent index/NN/index /:/) 2/CD/2. 2/CD/2 Â/CD/Â ¤/CD/¤ index/NN/index +/:/+ 1/CD/1 /CD/( left/VBN/left child/NN/child /:/) 3/CD/3. 2/CD/2 Â/CD/Â ¤/CD/¤ index/NN/index +/:/+ 2/CD/2 /CD/( right/NN/right child/NN/child /:/) in/IN/in figure/NN/figure 4.4/CD/4.4 a/DT/a /NN/) represents/VBZ/represents the/DT/the calculation/NN/calculation of/IN/of the/DT/the right/NN/right child/NN/child of/IN/of 12/CD/12 /CD/( 2/CD/2 Â/CD/Â ¤/CD/¤ 0/-NONE-/0 +/:/+ 2/CD/2 /CD/) ;/:/; and/CC/and b/NN/b /:/) calculates/NNS/calculates the/DT/the index/NN/index of/IN/of the/DT/the parent/NN/parent of/IN/of 3/CD/3 /CD/( /CD/( 3/CD/3 Â/CD/Â ¡/CD/¡ 1/CD/1 /CD/) /2/-NONE-//2 /:/) /./. 4.1/CD/4.1 insertion/NN/insertion designing/VBG/designing an/DT/an algorithm/NN/algorithm for/IN/for heap/NN/heap insertion/NN/insertion is/VBZ/is simple/JJ/simple /,/, but/CC/but we/PRP/we must/MD/must ensure/VB/ensure that/IN/that heap/NN/heap order/NN/order is/VBZ/is preserved/VBN/preserved after/IN/after each/DT/each insertion/NNP/insertion. generally/RB/generally this/DT/this is/VBZ/is a/DT/a post-insertion/NN/post-insertion operation/NNP/operation. inserting/NN/inserting a/DT/a value/NN/value into/IN/into the/DT/the next/JJ/next free/JJ/free slot/NN/slot in/IN/in an/DT/an array/NN/array is/VBZ/is simple/JJ/simple /:/: we/PRP/we just/RB/just need/VBP/need to/TO/to keep/VB/keep track/NN/track of/IN/of the/DT/the next/JJ/next free/JJ/free index/NN/index in/IN/in the/DT/the array/NN/array as/IN/as a/DT/a counter/NN/counter /,/, and/CC/and increment/NN/increment it/PRP/it after/IN/after each/DT/each insertion/NNP/insertion. inserting/NN/inserting our/PRP$/our value/NN/value into/IN/into the/DT/the heap/NN/heap is/VBZ/is the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst part/NN/part of/IN/of the/DT/the algorithm/NN/algorithm ;/:/; the/DT/the second/JJ/second is/VBZ/is validating/VBG/validating heap/NN/heap order/NNP/order. in/IN/in the/DT/the case/NN/case of/IN/of min-heap/JJ/min-heap ordering/NN/ordering this/DT/this requires/VBZ/requires us/PRP/us to/TO/to swap/VB/swap the/DT/the values/NNS/values of/IN/of a/DT/a parent/NN/parent and/CC/and its/PRP$/its child/NN/child if/IN/if the/DT/the value/NN/value of/IN/of the/DT/the child/NN/child is/VBZ/is </:/< the/DT/the value/NN/value of/IN/of its/PRP$/its parent/NNP/parent. we/PRP/we must/MD/must do/VB/do this/DT/this for/IN/for each/DT/each subtree/NN/subtree containing/VBG/containing the/DT/the value/NN/value we/PRP/we just/RB/just inserted/VBD/inserted /./. chapter/NN/chapter 4/CD/4. heap/NN/heap 34/CD/34 figure/NN/figure 4.3/CD/4.3 /:/: converting/VBG/converting a/DT/a tree/NN/tree data/NN/data structure/NN/structure to/TO/to its/PRP$/its array/NN/array counterpart/NN/counterpart chapter/NN/chapter 4/CD/4. heap/NN/heap 35/CD/35 figure/NN/figure 4.4/CD/4.4 /:/: calculating/VBG/calculating node/NN/node properties/NNS/properties the/DT/the run/NN/run time/NN/time e/NN/e Â/:/Â ±/:/± ciency/NN/ciency for/IN/for heap/NN/heap insertion/NN/insertion is/VBZ/is o/RB/o /:/( log/NN/log n/NN/n /:/) /./. the/DT/the run/NN/run time/NN/time is/VBZ/is a/DT/a by/IN/by product/NN/product of/IN/of verifying/VBG/verifying heap/NN/heap order/NN/order as/IN/as the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst part/NN/part of/IN/of the/DT/the algorithm/NN/algorithm /:/( the/DT/the actual/JJ/actual insertion/NN/insertion into/IN/into the/DT/the array/NN/array /:/) is/VBZ/is o/RB/o /:/( 1/CD/1 /CD/) /./. figure/NN/figure 4.5/CD/4.5 shows/NNS/shows the/DT/the steps/NNS/steps of/IN/of inserting/VBG/inserting the/DT/the values/NNS/values 3/CD/3 /,/, 9/CD/9 /,/, 12/CD/12 /,/, 7/CD/7 /,/, and/CC/and 1/CD/1 into/IN/into a/DT/a min-heap/JJ/min-heap /./. chapter/NN/chapter 4/CD/4. heap/NN/heap 36/CD/36 figure/NN/figure 4.5/CD/4.5 /:/: inserting/VBG/inserting values/NNS/values into/IN/into a/DT/a min-heap/JJ/min-heap chapter/NN/chapter 4/CD/4. heap/NN/heap 37/CD/37 1/CD/1 /CD/) algorithm/NN/algorithm add/NN/add /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to add/VB/add to/TO/to the/DT/the heap/NN/heap 3/CD/3 /CD/) count/NN/count is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the heap/NN/heap 4/CD/4 /CD/) post/NN/post /:/: the/DT/the value/NN/value has/VBZ/has been/VBN/been added/VBN/added to/TO/to the/DT/the heap/NN/heap 5/CD/5 /CD/) heap/NN/heap /:/[ count/NN/count /:/] Ã/:/Ã /:/ value/NN/value 6/CD/6 /CD/) count/NN/count Ã/:/Ã /:/ count/NN/count +/:/+ 1/CD/1 7/CD/7 /CD/) minheapify/NN/minheapify /:/( /:/) 8/CD/8 /CD/) end/NN/end add/NN/add 1/CD/1 /CD/) algorithm/NN/algorithm minheapify/NN/minheapify /:/( /:/) 2/CD/2 /CD/) pre/NN/pre /:/: count/NN/count is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the heap/NN/heap 3/CD/3 /CD/) heap/NN/heap is/VBZ/is the/DT/the array/NN/array used/VBD/used to/TO/to store/VB/store the/DT/the heap/NN/heap items/NNS/items 4/CD/4 /CD/) post/NN/post /:/: the/DT/the heap/NN/heap has/VBZ/has preserved/VBN/preserved min/NN/min heap/NN/heap ordering/VBG/ordering 5/CD/5 /CD/) i/PRP/i Ã/VBP/Ã /:/ count/NN/count Â/:/Â ¡/:/¡ 1/CD/1 6/CD/6 /CD/) while/IN/while i/PRP/i >/VBP/> 0/-NONE-/0 and/CC/and heap/VB/heap /:/[ i/PRP/i /VBP/] </:/< heap/NN/heap /:/[ /:/( i/PRP/i Â/VBP/Â ¡/:/¡ 1/CD/1 /CD/) /2/-NONE-//2 /:/] 7/CD/7 /CD/) swap/NN/swap /:/( heap/NN/heap /:/[ i/PRP/i /VBP/] /,/, heap/NN/heap /:/[ /:/( i/PRP/i Â/VBP/Â ¡/:/¡ 1/CD/1 /CD/) /2/-NONE-//2 /:/] 8/CD/8 /CD/) i/PRP/i Ã/VBP/Ã /:/ /:/( i/PRP/i Â/VBP/Â ¡/:/¡ 1/CD/1 /CD/) /2/-NONE-//2 9/CD/9 /CD/) end/NN/end while/IN/while 10/CD/10 /CD/) end/NN/end minheapify/NN/minheapify the/DT/the design/NN/design of/IN/of the/DT/the maxheapify/NN/maxheapify algorithm/NN/algorithm is/VBZ/is very/RB/very similar/JJ/similar to/TO/to that/DT/that of/IN/of the/DT/the min/JJ/min- heapify/NN/heapify algorithm/NN/algorithm /,/, the/DT/the only/JJ/only di/NN/di Â/:/Â ®/:/® erence/NN/erence is/VBZ/is that/IN/that the/DT/the </NNP/< operator/NN/operator in/IN/in the/DT/the second/JJ/second condition/NN/condition of/IN/of entering/VBG/entering the/DT/the while/NN/while loop/NN/loop is/VBZ/is changed/VBN/changed to/TO/to >/NNP/> /./. 4.2/CD/4.2 deletion/NN/deletion just/RB/just as/IN/as for/IN/for insertion/NN/insertion /,/, deleting/VBG/deleting an/DT/an item/NN/item involves/VBZ/involves ensuring/VBG/ensuring that/IN/that heap/NN/heap ordering/VBG/ordering is/VBZ/is preserved/NNP/preserved. the/DT/the algorithm/NN/algorithm for/IN/for deletion/NN/deletion has/VBZ/has three/CD/three steps/NNS/steps /:/: 1/CD/1. Â/CD/Â ¯/CD/¯ nd/NN/nd the/DT/the index/NN/index of/IN/of the/DT/the value/NN/value to/TO/to delete/VB/delete 2/CD/2. put/VBN/put the/DT/the last/JJ/last value/NN/value in/IN/in the/DT/the heap/NN/heap at/IN/at the/DT/the index/NN/index location/NN/location of/IN/of the/DT/the item/NN/item to/TO/to delete/VB/delete 3/CD/3. verify/NN/verify heap/NN/heap ordering/VBG/ordering for/IN/for each/DT/each subtree/NN/subtree which/WDT/which used/VBN/used to/TO/to include/VB/include the/DT/the value/NN/value chapter/NN/chapter 4/CD/4. heap/NN/heap 38/CD/38 1/CD/1 /CD/) algorithm/NN/algorithm remove/NN/remove /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to remove/VB/remove from/IN/from the/DT/the heap/NN/heap 3/CD/3 /CD/) left/NN/left /,/, and/CC/and right/RB/right are/VBP/are updated/VBN/updated alias/NNS/alias '/POS/' for/IN/for 2/CD/2 Â/CD/Â ¤/CD/¤ index/NN/index +/:/+ 1/CD/1 /,/, and/CC/and 2/CD/2 Â/CD/Â ¤/CD/¤ index/NN/index +/:/+ 2/CD/2 respectively/RB/respectively 4/CD/4 /CD/) count/NN/count is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the heap/NN/heap 5/CD/5 /CD/) heap/NN/heap is/VBZ/is the/DT/the array/NN/array used/VBD/used to/TO/to store/VB/store the/DT/the heap/NN/heap items/NNS/items 6/CD/6 /CD/) post/NN/post /:/: value/NN/value is/VBZ/is located/VBN/located in/IN/in the/DT/the heap/NN/heap and/CC/and removed/VBD/removed /,/, true/JJ/true ;/:/; otherwise/NN/otherwise false/NN/false 7/CD/7 /CD/) ///CD/// step/NN/step 1/CD/1 8/CD/8 /CD/) index/NN/index Ã/:/Ã /:/ findindex/NN/findindex /:/( heap/NN/heap /,/, value/NN/value /:/) 9/CD/9 /CD/) if/IN/if index/NN/index </:/< 0/-NONE-/0 10/CD/10 /:/) return/NN/return false/NN/false 11/CD/11 /CD/) end/NN/end if/IN/if 12/CD/12 /CD/) count/NN/count Ã/:/Ã /:/ count/NN/count Â/:/Â ¡/:/¡ 1/CD/1 13/CD/13 /CD/) ///CD/// step/NN/step 2/CD/2 14/CD/14 /CD/) heap/NN/heap /:/[ index/NN/index /:/] Ã/:/Ã /:/ heap/NN/heap /:/[ count/NN/count /:/] 15/CD/15 /CD/) ///CD/// step/NN/step 3/CD/3 16/CD/16 /CD/) while/IN/while left/NN/left </:/< count/NN/count and/CC/and heap/VB/heap /:/[ index/NN/index /:/] >/:/> heap/NN/heap /:/[ left/VBN/left /-NONE-/] or/CC/or heap/VB/heap /CD/[ index/NN/index /:/] >/:/> heap/NN/heap /:/[ right/NN/right /:/] 17/CD/17 /CD/) ///CD/// promote/NN/promote smallest/NN/smallest key/NN/key from/IN/from subtree/JJ/subtree 18/CD/18 /CD/) if/IN/if heap/NN/heap /:/[ left/VBN/left /-NONE-/] </:/< heap/NN/heap /:/[ right/NN/right /:/] 19/CD/19 /CD/) swap/NN/swap /:/( heap/NN/heap /,/, left/VBN/left /,/, index/NN/index /:/) 20/CD/20 /CD/) index/NN/index Ã/:/Ã /:/ left/NN/left 21/CD/21 /CD/) else/NN/else 22/CD/22 /CD/) swap/NN/swap /:/( heap/NN/heap /,/, right/RB/right /,/, index/NN/index /:/) 23/CD/23 /CD/) index/NN/index Ã/:/Ã /:/ right/RB/right 24/CD/24 /CD/) end/NN/end if/IN/if 25/CD/25 /CD/) end/NN/end while/IN/while 26/CD/26 /CD/) return/NN/return true/JJ/true 27/CD/27 /CD/) end/NN/end remove/NN/remove figure/NN/figure 4.6/CD/4.6 shows/NNS/shows the/DT/the remove/NN/remove algorithm/NN/algorithm visually/RB/visually /,/, removing/VBG/removing 1/CD/1 from/IN/from a/DT/a heap/NN/heap containing/VBG/containing the/DT/the values/NNS/values 1/CD/1 /,/, 3/CD/3 /,/, 9/CD/9 /,/, 12/CD/12 /,/, and/CC/and 13/CD/13. in/IN/in figure/NN/figure 4.6/CD/4.6 you/PRP/you can/MD/can assume/VB/assume that/IN/that we/PRP/we have/VBP/have speci/NN/speci Â/:/Â ¯/:/¯ ed/VBD/ed that/IN/that the/DT/the backing/NN/backing array/NN/array of/IN/of the/DT/the heap/NN/heap should/MD/should have/VB/have an/DT/an initial/JJ/initial capacity/NN/capacity of/IN/of eight/CD/eight /./. please/NN/please note/NN/note that/IN/that in/IN/in our/PRP$/our deletion/NN/deletion algorithm/NN/algorithm that/WDT/that we/PRP/we do/VBP/do n't/RB/n't default/VB/default the/DT/the removed/VBN/removed value/NN/value in/IN/in the/DT/the heap/NN/heap array/NNP/array. if/IN/if you/PRP/you are/VBP/are using/VBG/using a/DT/a heap/NN/heap for/IN/for reference/NN/reference types/NNS/types /,/, i.e/NNP/i.e. objects/NNS/objects that/WDT/that are/VBP/are allocated/VBN/allocated on/IN/on a/DT/a heap/NN/heap you/PRP/you will/MD/will want/VB/want to/TO/to free/JJ/free that/IN/that memory/NNP/memory. this/DT/this is/VBZ/is important/JJ/important in/IN/in both/DT/both unmanaged/JJ/unmanaged /,/, and/CC/and managed/VBD/managed languages/NNP/languages. in/IN/in the/DT/the latter/NN/latter we/PRP/we will/MD/will want/VB/want to/TO/to null/VB/null that/IN/that empty/JJ/empty hole/NN/hole so/IN/so that/IN/that the/DT/the garbage/NN/garbage collector/NN/collector can/MD/can reclaim/VB/reclaim that/IN/that memory/NNP/memory. if/IN/if we/PRP/we were/VBD/were to/TO/to not/RB/not null/VB/null that/IN/that hole/NN/hole then/RB/then the/DT/the object/NN/object could/MD/could still/RB/still be/VB/be reached/VBN/reached and/CC/and thus/RB/thus wo/MD/wo n't/RB/n't be/VB/be garbage/NN/garbage collected/VBN/collected /./. 4.3/CD/4.3 searching/VBG/searching searching/NN/searching a/DT/a heap/NN/heap is/VBZ/is merely/RB/merely a/DT/a matter/NN/matter of/IN/of traversing/VBG/traversing the/DT/the items/NNS/items in/IN/in the/DT/the heap/NN/heap array/NN/array sequentially/RB/sequentially /,/, so/RB/so this/DT/this operation/NN/operation has/VBZ/has a/DT/a run/NN/run time/NN/time complexity/NN/complexity of/IN/of o/NN/o /:/( n/NN/n /:/) /./. the/DT/the search/NN/search can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as one/CD/one that/WDT/that uses/VBZ/uses a/DT/a breadth/NN/breadth Â/:/Â ¯/:/¯ rst/JJ/rst traversal/NN/traversal as/IN/as de/NN/de Â/:/Â ¯/:/¯ ned/VBD/ned in/IN/in x3.7.4/-NONE-/x3.7.4 to/TO/to visit/VB/visit the/DT/the nodes/NNS/nodes within/IN/within the/DT/the heap/NN/heap to/TO/to check/VB/check for/IN/for the/DT/the presence/NN/presence of/IN/of a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ ed/VBD/ed item/NN/item /./. chapter/NN/chapter 4/CD/4. heap/NN/heap 39/CD/39 figure/NN/figure 4.6/CD/4.6 /:/: deleting/VBG/deleting an/DT/an item/NN/item from/IN/from a/DT/a heap/NN/heap chapter/NN/chapter 4/CD/4. heap/NN/heap 40/CD/40 1/CD/1 /CD/) algorithm/NN/algorithm contains/NNS/contains /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to search/NN/search the/DT/the heap/NN/heap for/IN/for 3/CD/3 /CD/) count/NN/count is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the heap/NN/heap 4/CD/4 /CD/) heap/NN/heap is/VBZ/is the/DT/the array/NN/array used/VBD/used to/TO/to store/VB/store the/DT/the heap/NN/heap items/NNS/items 5/CD/5 /CD/) post/NN/post /:/: value/NN/value is/VBZ/is located/VBN/located in/IN/in the/DT/the heap/NN/heap /,/, in/IN/in which/WDT/which case/NN/case true/VBP/true ;/:/; otherwise/NN/otherwise false/NN/false 6/CD/6 /CD/) i/PRP/i Ã/VBP/Ã /:/ 0/-NONE-/0 7/CD/7 /:/) while/IN/while i/PRP/i </VBP/< count/NN/count and/CC/and heap/VB/heap /:/[ i/PRP/i /VBP/] 6/CD/6 =/CD/= value/NN/value 8/CD/8 /CD/) i/PRP/i Ã/VBP/Ã /:/ i/PRP/i +/VBP/+ 1/CD/1 9/CD/9 /CD/) end/NN/end while/IN/while 10/CD/10 /CD/) if/IN/if i/PRP/i </VBP/< count/NN/count 11/CD/11 /CD/) return/NN/return true/JJ/true 12/CD/12 /CD/) else/NN/else 13/CD/13 /CD/) return/NN/return false/NN/false 14/CD/14 /CD/) end/NN/end if/IN/if 15/CD/15 /CD/) end/NN/end contains/NNS/contains the/DT/the problem/NN/problem with/IN/with the/DT/the previous/JJ/previous algorithm/NN/algorithm is/VBZ/is that/IN/that we/PRP/we do/VBP/do n't/RB/n't take/VB/take advantage/NN/advantage of/IN/of the/DT/the properties/NNS/properties in/IN/in which/WDT/which all/DT/all values/NNS/values of/IN/of a/DT/a heap/NN/heap hold/NN/hold /,/, that/IN/that is/VBZ/is the/DT/the property/NN/property of/IN/of the/DT/the heap/NN/heap strategy/NN/strategy being/VBG/being used/NNP/used. for/IN/for instance/NN/instance if/IN/if we/PRP/we had/VBD/had a/DT/a heap/NN/heap that/WDT/that did/VBD/did n't/RB/n't contain/VB/contain the/DT/the value/NN/value 4/CD/4 we/PRP/we would/MD/would have/VB/have to/TO/to exhaust/VB/exhaust the/DT/the whole/JJ/whole backing/NN/backing heap/NN/heap array/NN/array before/IN/before we/PRP/we could/MD/could determine/VB/determine that/IN/that it/PRP/it was/VBD/was n't/RB/n't present/JJ/present in/IN/in the/DT/the heap/NNP/heap. factoring/NN/factoring in/IN/in what/WP/what we/PRP/we know/VBP/know about/IN/about the/DT/the heap/NN/heap we/PRP/we can/MD/can optimise/VB/optimise the/DT/the search/NN/search algorithm/NN/algorithm by/IN/by including/VBG/including logic/NN/logic which/WDT/which makes/VBZ/makes use/VBP/use of/IN/of the/DT/the properties/NNS/properties presented/VBD/presented by/IN/by a/DT/a certain/JJ/certain heap/NN/heap strategy/NN/strategy /./. optimising/VBG/optimising to/TO/to deterministically/RB/deterministically state/NN/state that/IN/that a/DT/a value/NN/value is/VBZ/is in/IN/in the/DT/the heap/NN/heap is/VBZ/is not/RB/not that/IN/that straightforward/NN/straightforward /,/, however/RB/however the/DT/the problem/NN/problem is/VBZ/is a/DT/a very/RB/very interesting/JJ/interesting one/NNP/one. as/IN/as an/DT/an example/NN/example consider/NN/consider a/DT/a min-heap/NN/min-heap that/WDT/that does/VBZ/does n't/RB/n't contain/VB/contain the/DT/the value/NN/value 5/CD/5. we/PRP/we can/MD/can only/RB/only rule/VB/rule that/IN/that the/DT/the value/NN/value is/VBZ/is not/RB/not in/IN/in the/DT/the heap/NN/heap if/IN/if 5/CD/5 >/CD/> the/DT/the parent/NN/parent of/IN/of the/DT/the current/JJ/current node/NN/node being/VBG/being inspected/VBN/inspected and/CC/and </NNP/< the/DT/the current/JJ/current node/NN/node being/VBG/being inspected/VBN/inspected 8/CD/8 nodes/NNS/nodes at/IN/at the/DT/the current/JJ/current level/NN/level we/PRP/we are/VBP/are traversing/NNP/traversing. if/IN/if this/DT/this is/VBZ/is the/DT/the case/NN/case then/RB/then 5/CD/5 can/MD/can not/RB/not be/VB/be in/IN/in the/DT/the heap/NN/heap and/CC/and so/RB/so we/PRP/we can/MD/can provide/VB/provide an/DT/an answer/NN/answer without/IN/without traversing/NN/traversing the/DT/the rest/NN/rest of/IN/of the/DT/the heap/NNP/heap. if/IN/if this/DT/this property/NN/property is/VBZ/is not/RB/not satis/VBZ/satis Â/:/Â ¯/:/¯ ed/VBD/ed for/IN/for any/DT/any level/NN/level of/IN/of nodes/NNS/nodes that/WDT/that we/PRP/we are/VBP/are inspecting/VBG/inspecting then/RB/then the/DT/the algorithm/NN/algorithm will/MD/will indeed/VB/indeed fall/NN/fall back/RB/back to/TO/to inspecting/VBG/inspecting all/DT/all the/DT/the nodes/NNS/nodes in/IN/in the/DT/the heap/NNP/heap. the/DT/the optimisation/NN/optimisation that/IN/that we/PRP/we present/VBP/present can/MD/can be/VB/be very/RB/very common/JJ/common and/CC/and so/RB/so we/PRP/we feel/VBP/feel that/IN/that the/DT/the extra/JJ/extra logic/NN/logic within/IN/within the/DT/the loop/NN/loop is/VBZ/is justi/NN/justi Â/:/Â ¯/:/¯ ed/VBD/ed to/TO/to prevent/VB/prevent the/DT/the expensive/JJ/expensive worse/NN/worse case/NN/case run/VBN/run time/NN/time /./. the/DT/the following/VBG/following algorithm/NN/algorithm is/VBZ/is speci/NN/speci Â/:/Â ¯/:/¯ cally/RB/cally designed/VBN/designed for/IN/for a/DT/a min-heap/NNP/min-heap. to/TO/to tailor/VB/tailor the/DT/the algorithm/NN/algorithm for/IN/for a/DT/a max-heap/JJ/max-heap the/DT/the two/CD/two comparison/NN/comparison operations/NNS/operations in/IN/in the/DT/the else/NN/else if/IN/if condition/NN/condition within/IN/within the/DT/the inner/NN/inner while/IN/while loop/NN/loop should/MD/should be/VB/be Â/:/Â °/-NONE-/° ipped/VBD/ipped /./. chapter/NN/chapter 4/CD/4. heap/NN/heap 41/CD/41 1/CD/1 /CD/) algorithm/NN/algorithm contains/NNS/contains /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value to/TO/to search/NN/search the/DT/the heap/NN/heap for/IN/for 3/CD/3 /CD/) count/NN/count is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the heap/NN/heap 4/CD/4 /CD/) heap/NN/heap is/VBZ/is the/DT/the array/NN/array used/VBD/used to/TO/to store/VB/store the/DT/the heap/NN/heap items/NNS/items 5/CD/5 /CD/) post/NN/post /:/: value/NN/value is/VBZ/is located/VBN/located in/IN/in the/DT/the heap/NN/heap /,/, in/IN/in which/WDT/which case/NN/case true/VBP/true ;/:/; otherwise/NN/otherwise false/NN/false 6/CD/6 /CD/) start/NN/start Ã/:/Ã /:/ 0/-NONE-/0 7/CD/7 /:/) nodes/NNS/nodes Ã/VBP/Ã /:/ 1/CD/1 8/CD/8 /CD/) while/IN/while start/NN/start </:/< count/NN/count 9/CD/9 /CD/) start/NN/start Ã/:/Ã /:/ nodes/NNS/nodes Â/VBP/Â ¡/:/¡ 1/CD/1 10/CD/10 /CD/) end/NN/end Ã/:/Ã /:/ nodes/NNS/nodes +/VBP/+ start/NN/start 11/CD/11 /CD/) count/NN/count Ã/:/Ã /:/ 0/-NONE-/0 12/CD/12 /:/) while/IN/while start/NN/start </:/< count/NN/count and/CC/and start/VB/start </:/< end/NN/end 13/CD/13 /CD/) if/IN/if value/NN/value =/:/= heap/NN/heap /:/[ start/NN/start /:/] 14/CD/14 /CD/) return/NN/return true/JJ/true 15/CD/15 /CD/) else/NN/else if/IN/if value/NN/value >/:/> parent/NN/parent /:/( heap/NN/heap /:/[ start/NN/start /:/] /:/) and/CC/and value/NN/value </:/< heap/NN/heap /:/[ start/NN/start /:/] 16/CD/16 /CD/) count/NN/count Ã/:/Ã /:/ count/NN/count +/:/+ 1/CD/1 17/CD/17 /CD/) end/NN/end if/IN/if 18/CD/18 /CD/) start/NN/start Ã/:/Ã /:/ start/NN/start +/:/+ 1/CD/1 19/CD/19 /CD/) end/NN/end while/IN/while 20/CD/20 /CD/) if/IN/if count/NN/count =/:/= nodes/NNS/nodes 21/CD/21 /CD/) return/NN/return false/NN/false 22/CD/22 /CD/) end/NN/end if/IN/if 23/CD/23 /CD/) nodes/NNS/nodes Ã/:/Ã /:/ nodes/NNS/nodes Â/VBP/Â ¤/:/¤ 2/CD/2 24/CD/24 /CD/) end/NN/end while/IN/while 25/CD/25 /CD/) return/NN/return false/NN/false 26/CD/26 /CD/) end/NN/end contains/NNS/contains the/DT/the new/JJ/new contains/NNS/contains algorithm/VBP/algorithm determines/NNS/determines if/IN/if the/DT/the value/NN/value is/VBZ/is not/RB/not in/IN/in the/DT/the heap/NN/heap by/IN/by checking/NN/checking whether/IN/whether count/NN/count =/:/= nodes/NNP/nodes. in/IN/in such/JJ/such an/DT/an event/NN/event where/WRB/where this/DT/this is/VBZ/is true/JJ/true then/RB/then we/PRP/we can/MD/can con/VB/con Â/:/Â ¯/:/¯ rm/NN/rm that/IN/that 8/CD/8 nodes/NNS/nodes n/NN/n at/IN/at level/NN/level i/PRP/i /:/: value/NN/value >/:/> parent/NN/parent /:/( n/NN/n /:/) /,/, value/NN/value </:/< n/NN/n thus/RB/thus there/EX/there is/VBZ/is no/DT/no possible/JJ/possible way/NN/way that/IN/that value/NN/value is/VBZ/is in/IN/in the/DT/the heap/NNP/heap. as/IN/as an/DT/an example/NN/example consider/NN/consider figure/NN/figure 4.7/CD/4.7 /./. if/IN/if we/PRP/we are/VBP/are searching/VBG/searching for/IN/for the/DT/the value/NN/value 10/CD/10 within/IN/within the/DT/the min-heap/JJ/min-heap displayed/VBN/displayed it/PRP/it is/VBZ/is obvious/JJ/obvious that/IN/that we/PRP/we do/VBP/do n't/RB/n't need/VB/need to/TO/to search/VB/search the/DT/the whole/JJ/whole heap/NN/heap to/TO/to determine/VB/determine 9/CD/9 is/VBZ/is not/RB/not present/NNP/present. we/PRP/we can/MD/can verify/VB/verify this/DT/this after/IN/after traversing/NN/traversing the/DT/the nodes/NNS/nodes in/IN/in the/DT/the second/JJ/second level/NN/level of/IN/of the/DT/the heap/NN/heap as/IN/as the/DT/the previous/JJ/previous expression/NN/expression de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned holds/NNS/holds true/JJ/true /./. 4.4/CD/4.4 traversal/NN/traversal as/IN/as mentioned/VBN/mentioned in/IN/in x4.3/-NONE-/x4.3 traversal/NN/traversal of/IN/of a/DT/a heap/NN/heap is/VBZ/is usually/RB/usually done/VBN/done like/IN/like that/DT/that of/IN/of any/DT/any other/JJ/other array/NN/array data/NNS/data structure/NN/structure which/WDT/which our/PRP$/our heap/NN/heap implementation/NN/implementation is/VBZ/is based/VBN/based upon/NNP/upon. as/IN/as a/DT/a result/NN/result you/PRP/you traverse/VBP/traverse the/DT/the array/NN/array starting/VBG/starting at/IN/at the/DT/the initial/JJ/initial array/NN/array index/NN/index /:/( 0/-NONE-/0 in/IN/in most/JJS/most languages/NNS/languages /:/) and/CC/and then/RB/then visit/VB/visit each/DT/each value/NN/value within/IN/within the/DT/the array/NN/array until/IN/until you/PRP/you have/VBP/have reached/VBN/reached the/DT/the upper/JJ/upper bound/NN/bound of/IN/of the/DT/the heap/NNP/heap. you/PRP/you will/MD/will note/VB/note that/IN/that in/IN/in the/DT/the search/NN/search algorithm/NN/algorithm that/WDT/that we/PRP/we use/VBP/use count/NN/count as/IN/as this/DT/this upper/NN/upper bound/NN/bound rather/RB/rather than/IN/than the/DT/the actual/JJ/actual physical/JJ/physical bound/NN/bound of/IN/of the/DT/the allocated/VBN/allocated array/NNP/array. count/NN/count is/VBZ/is used/VBN/used to/TO/to partition/NN/partition the/DT/the conceptual/JJ/conceptual heap/NN/heap from/IN/from the/DT/the actual/JJ/actual array/NN/array implementation/NN/implementation of/IN/of the/DT/the heap/NN/heap /:/: we/PRP/we only/RB/only care/VBP/care about/IN/about the/DT/the items/NNS/items in/IN/in the/DT/the heap/NN/heap /,/, not/RB/not the/DT/the whole/JJ/whole array/NN/array |/:/| the/DT/the latter/NN/latter may/MD/may contain/VB/contain various/JJ/various other/JJ/other bits/NNS/bits of/IN/of data/NNS/data as/IN/as a/DT/a result/NN/result of/IN/of heap/NN/heap mutation/NN/mutation /./. chapter/NN/chapter 4/CD/4. heap/NN/heap 42/CD/42 figure/NN/figure 4.7/CD/4.7 /:/: determining/VBG/determining 10/CD/10 is/VBZ/is not/RB/not in/IN/in the/DT/the heap/NN/heap after/IN/after inspecting/VBG/inspecting the/DT/the nodes/NNS/nodes of/IN/of level/NN/level 2/CD/2 figure/NN/figure 4.8/CD/4.8 /:/: living/VBG/living and/CC/and dead/JJ/dead space/NN/space in/IN/in the/DT/the heap/NN/heap backing/NN/backing array/NN/array if/IN/if you/PRP/you have/VBP/have followed/VBN/followed the/DT/the advice/NN/advice we/PRP/we gave/VBD/gave in/IN/in the/DT/the deletion/NN/deletion algorithm/NN/algorithm then/RB/then a/DT/a heap/NN/heap that/WDT/that has/VBZ/has been/VBN/been mutated/VBN/mutated several/JJ/several times/NNS/times will/MD/will contain/VB/contain some/DT/some form/NN/form of/IN/of default/NN/default value/NN/value for/IN/for items/NNS/items no/DT/no longer/NN/longer in/IN/in the/DT/the heap/NNP/heap. potentially/RB/potentially you/PRP/you will/MD/will have/VB/have at/IN/at most/JJS/most lengthof/IN/lengthof /NNP/( heaparray/NN/heaparray /:/) Â/:/Â ¡/:/¡ count/NN/count garbage/NN/garbage values/NNS/values in/IN/in the/DT/the backing/NN/backing heap/NN/heap array/NN/array data/NNS/data structure/NNP/structure. the/DT/the garbage/NN/garbage values/NNS/values of/IN/of course/NN/course vary/NN/vary from/IN/from platform/NN/platform to/TO/to platform/NNP/platform. to/TO/to make/VB/make things/NNS/things simple/VB/simple the/DT/the garbage/NN/garbage value/NN/value of/IN/of a/DT/a reference/NN/reference type/NN/type will/MD/will be/VB/be simple/JJ/simple ;/:/; and/CC/and 0/-NONE-/0 for/IN/for a/DT/a value/NN/value type/NN/type /./. figure/NN/figure 4.8/CD/4.8 shows/NNS/shows a/DT/a heap/NN/heap that/WDT/that you/PRP/you can/MD/can assume/VB/assume has/VBZ/has been/VBN/been mutated/VBN/mutated many/JJ/many times/NNS/times /./. for/IN/for this/DT/this example/NN/example we/PRP/we can/MD/can further/RB/further assume/VB/assume that/IN/that at/IN/at some/DT/some point/NN/point the/DT/the items/NNS/items in/IN/in indexes/NNS/indexes 3/CD/3 Â/CD/Â ¡/CD/¡ 5/CD/5 actually/RB/actually contained/VBN/contained references/NNS/references to/TO/to live/VB/live objects/NNS/objects of/IN/of type/NN/type t/NNP/t. in/IN/in figure/NN/figure 4.8/CD/4.8 subscript/NN/subscript is/VBZ/is used/VBN/used to/TO/to disambiguate/VB/disambiguate separate/JJ/separate objects/NNS/objects of/IN/of t/NN/t /./. from/IN/from what/WP/what you/PRP/you have/VBP/have read/VBN/read thus/RB/thus far/RB/far you/PRP/you will/MD/will most/VB/most likely/JJ/likely have/VB/have picked/VBN/picked up/RP/up that/DT/that traversing/NN/traversing the/DT/the heap/NN/heap in/IN/in any/DT/any other/JJ/other order/NN/order would/MD/would be/VB/be of/IN/of little/JJ/little bene/NN/bene Â/:/Â ¯/:/¯ t/NNP/t. the/DT/the heap/NN/heap property/NN/property only/RB/only holds/VBZ/holds for/IN/for the/DT/the subtree/NN/subtree of/IN/of each/DT/each node/NN/node and/CC/and so/RB/so traversing/VBG/traversing a/DT/a heap/NN/heap in/IN/in any/DT/any other/JJ/other fashion/NN/fashion requires/VBZ/requires some/DT/some creative/JJ/creative intervention/NNP/intervention. heaps/RB/heaps are/VBP/are not/RB/not usually/RB/usually traversed/VBN/traversed in/IN/in any/DT/any other/JJ/other way/NN/way than/IN/than the/DT/the one/CD/one prescribed/VBN/prescribed previously/RB/previously /./. 4.5/CD/4.5 summary/NN/summary heaps/NNS/heaps are/VBP/are most/JJS/most commonly/RB/commonly used/JJ/used to/TO/to implement/NN/implement priority/NN/priority queues/NNS/queues /:/( see/VB/see x6.2/-NONE-/x6.2 for/IN/for a/DT/a sample/NN/sample implementation/NN/implementation /:/) and/CC/and to/TO/to facilitate/VB/facilitate heap/NN/heap sort/NNP/sort. as/IN/as discussed/VBN/discussed in/IN/in both/DT/both the/DT/the insertion/NN/insertion x4.1/-NONE-/x4.1 and/CC/and deletion/NN/deletion x4.2/-NONE-/x4.2 sections/NNS/sections a/DT/a heap/NN/heap maintains/VBZ/maintains heap/NN/heap order/NN/order according/VBG/according to/TO/to the/DT/the selected/VBN/selected ordering/VBG/ordering strategy/NNP/strategy. these/DT/these strategies/NNS/strategies are/VBP/are referred/VBN/referred to/TO/to as/RB/as min-heap/JJ/min-heap /,/, chapter/NN/chapter 4/CD/4. heap/NN/heap 43/CD/43 and/CC/and max/NN/max heap/NNP/heap. the/DT/the former/JJ/former strategy/NN/strategy enforces/NNS/enforces that/WDT/that the/DT/the value/NN/value of/IN/of a/DT/a parent/NN/parent node/NN/node is/VBZ/is less/JJR/less than/IN/than that/DT/that of/IN/of each/DT/each of/IN/of its/PRP$/its children/NNS/children /,/, the/DT/the latter/NN/latter enforces/NNS/enforces that/WDT/that the/DT/the value/NN/value of/IN/of the/DT/the parent/NN/parent is/VBZ/is greater/JJR/greater than/IN/than that/DT/that of/IN/of each/DT/each of/IN/of its/PRP$/its children/NNS/children /./. when/WRB/when you/PRP/you come/VBP/come across/RP/across a/DT/a heap/NN/heap and/CC/and you/PRP/you are/VBP/are not/RB/not told/VBN/told what/WP/what strategy/NN/strategy it/PRP/it enforces/VBZ/enforces you/PRP/you should/MD/should assume/VB/assume that/IN/that it/PRP/it uses/VBZ/uses the/DT/the min-heap/JJ/min-heap strategy/NNP/strategy. if/IN/if the/DT/the heap/NN/heap can/MD/can be/VB/be con/VBN/con Â/-NONE-/Â ¯/:/¯ gured/VBN/gured otherwise/NN/otherwise /,/, e.g/NNP/e.g. to/TO/to use/VB/use max-heap/JJ/max-heap then/RB/then this/DT/this will/MD/will often/RB/often require/VB/require you/PRP/you to/TO/to state/VB/state this/DT/this explicitly/NNP/explicitly. the/DT/the heap/NN/heap abides/VBZ/abides progressively/RB/progressively to/TO/to a/DT/a strategy/NN/strategy during/IN/during the/DT/the invocation/NN/invocation of/IN/of the/DT/the insertion/NN/insertion /,/, and/CC/and deletion/NN/deletion algorithms/NNP/algorithms. the/DT/the cost/NN/cost of/IN/of such/JJ/such a/DT/a policy/NN/policy is/VBZ/is that/IN/that upon/IN/upon each/DT/each insertion/NN/insertion and/CC/and deletion/NN/deletion we/PRP/we invoke/VBP/invoke algorithms/NNS/algorithms that/IN/that have/VBP/have logarithmic/JJ/logarithmic run/VBN/run time/NN/time complexities/NNP/complexities. while/IN/while the/DT/the cost/NN/cost of/IN/of maintaining/VBG/maintaining the/DT/the strategy/NN/strategy might/MD/might not/RB/not seem/VB/seem overly/RB/overly expensive/JJ/expensive it/PRP/it does/VBZ/does still/RB/still come/VBN/come at/IN/at a/DT/a price/NNP/price. we/PRP/we will/MD/will also/RB/also have/VB/have to/TO/to factor/VB/factor in/IN/in the/DT/the cost/NN/cost of/IN/of dynamic/JJ/dynamic array/NN/array expansion/NN/expansion at/IN/at some/DT/some stage/NNP/stage. this/DT/this will/MD/will occur/VB/occur if/IN/if the/DT/the number/NN/number of/IN/of items/NNS/items within/IN/within the/DT/the heap/NN/heap outgrows/VBZ/outgrows the/DT/the space/NN/space allocated/VBD/allocated in/IN/in the/DT/the heap/NN/heap 's/POS/'s backing/NN/backing array/NNP/array. it/PRP/it may/MD/may be/VB/be in/IN/in your/PRP$/your best/JJS/best interest/NN/interest to/TO/to research/NN/research a/DT/a good/JJ/good initial/JJ/initial starting/NN/starting size/NN/size for/IN/for your/PRP$/your heap/NN/heap array/NNP/array. this/DT/this will/MD/will assist/VB/assist in/IN/in minimising/NN/minimising the/DT/the impact/NN/impact of/IN/of dynamic/JJ/dynamic array/NN/array resizing/VBG/resizing /./. chapter/NN/chapter 5/CD/5 sets/NNS/sets a/DT/a set/NN/set contains/VBZ/contains a/DT/a number/NN/number of/IN/of values/NNS/values /,/, in/IN/in no/DT/no particular/JJ/particular order/NNP/order. the/DT/the values/NNS/values within/IN/within the/DT/the set/NN/set are/VBP/are distinct/JJ/distinct from/IN/from one/CD/one another/DT/another /./. generally/RB/generally set/VBN/set implementations/NNS/implementations tend/VBP/tend to/TO/to check/VB/check that/IN/that a/DT/a value/NN/value is/VBZ/is not/RB/not in/IN/in the/DT/the set/NN/set before/IN/before adding/VBG/adding it/PRP/it /,/, avoiding/VBG/avoiding the/DT/the issue/NN/issue of/IN/of repeated/VBN/repeated values/NNS/values from/IN/from ever/RB/ever occurring/VBG/occurring /./. this/DT/this section/NN/section does/VBZ/does not/RB/not cover/VB/cover set/VBN/set theory/NN/theory in/IN/in depth/NN/depth ;/:/; rather/RB/rather it/PRP/it demonstrates/VBZ/demonstrates brie/NN/brie Â/:/Â °/:/° y/NN/y the/DT/the ways/NNS/ways in/IN/in which/WDT/which the/DT/the values/NNS/values of/IN/of sets/NNS/sets can/MD/can be/VB/be de/VBN/de Â/-NONE-/Â ¯/:/¯ ned/VBN/ned /,/, and/CC/and common/JJ/common operations/NNS/operations that/WDT/that may/MD/may be/VB/be performed/VBN/performed upon/IN/upon them/PRP/them /./. the/DT/the notation/NN/notation a/DT/a =/NN/= f4/NNP/f4 ;/:/; 7/CD/7 ;/:/; 9/CD/9 ;/:/; 12/CD/12 ;/:/; 0g/CD/0g de/IN/de Â/CD/Â ¯/CD/¯ nes/NNS/nes a/DT/a set/NN/set a/DT/a whose/NN/whose values/VBZ/values are/VBP/are listed/VBN/listed within/IN/within the/DT/the curly/JJ/curly braces/NNS/braces /./. given/VBN/given the/DT/the set/NN/set a/DT/a de/NN/de Â/:/Â ¯/:/¯ ned/VBD/ned previously/RB/previously we/PRP/we can/MD/can say/VB/say that/IN/that 4/CD/4 is/VBZ/is a/DT/a member/NN/member of/IN/of a/DT/a denoted/VBN/denoted by/IN/by 4/CD/4 2/CD/2 a/DT/a /,/, and/CC/and that/IN/that 99/CD/99 is/VBZ/is not/RB/not a/DT/a member/NN/member of/IN/of a/DT/a denoted/VBN/denoted by/IN/by 99/CD/99 =/CD/= 2/CD/2 a/DT/a /./. often/RB/often de/IN/de Â/CD/Â ¯/CD/¯ ning/VBG/ning a/DT/a set/NN/set by/IN/by manually/RB/manually stating/VBG/stating its/PRP$/its members/NNS/members is/VBZ/is tiresome/VBN/tiresome /,/, and/CC/and more/JJR/more importantly/RB/importantly the/DT/the set/NN/set may/MD/may contain/VB/contain a/DT/a large/JJ/large number/NN/number of/IN/of values/NNP/values. a/DT/a more/JJR/more concise/NN/concise way/NN/way of/IN/of de/NN/de Â/:/Â ¯/:/¯ ning/VBG/ning a/DT/a set/NN/set and/CC/and its/PRP$/its members/NNS/members is/VBZ/is by/IN/by providing/NN/providing a/DT/a series/NN/series of/IN/of properties/NNS/properties that/WDT/that the/DT/the values/NNS/values of/IN/of the/DT/the set/NN/set must/MD/must satisfy/NNP/satisfy. for/IN/for example/NN/example /,/, from/IN/from the/DT/the de/NN/de Â/:/Â ¯/:/¯ nition/NN/nition a/DT/a =/NN/= fxjx/NN/fxjx >/:/> 0/-NONE-/0 ;/:/; x/NN/x %/NN/% 2/CD/2 =/CD/= 0g/CD/0g the/DT/the set/NN/set a/DT/a contains/NNS/contains only/RB/only positive/JJ/positive integers/NNS/integers that/WDT/that are/VBP/are even/NNP/even. x/NN/x is/VBZ/is an/DT/an alias/NN/alias to/TO/to the/DT/the current/JJ/current value/NN/value we/PRP/we are/VBP/are inspecting/VBG/inspecting and/CC/and to/TO/to the/DT/the right/NN/right hand/NN/hand side/NN/side of/IN/of j/NN/j are/VBP/are the/DT/the properties/NNS/properties that/WDT/that x/NN/x must/MD/must satisfy/VB/satisfy to/TO/to be/VB/be in/IN/in the/DT/the set/NN/set a/NNP/a. in/IN/in this/DT/this example/NN/example /,/, x/NN/x must/MD/must be/VB/be >/:/> 0/-NONE-/0 /,/, and/CC/and the/DT/the remainder/NN/remainder of/IN/of the/DT/the arithmetic/JJ/arithmetic expression/NN/expression x/NN/x =/:/= 2/CD/2 must/MD/must be/VB/be 0/CD/0. you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to note/VB/note from/IN/from the/DT/the previous/JJ/previous de/NN/de Â/:/Â ¯/:/¯ nition/NN/nition of/IN/of the/DT/the set/NN/set a/DT/a that/WDT/that the/DT/the set/NN/set can/MD/can contain/VB/contain an/DT/an in/IN/in Â/NN/Â ¯/:/¯ nite/JJ/nite number/NN/number of/IN/of values/NNS/values /,/, and/CC/and that/IN/that the/DT/the values/NNS/values of/IN/of the/DT/the set/NN/set a/DT/a will/MD/will be/VB/be all/PDT/all even/RB/even integers/NNS/integers that/IN/that are/VBP/are a/DT/a member/NN/member of/IN/of the/DT/the natural/JJ/natural numbers/NNS/numbers set/VBD/set n/NN/n /,/, where/WRB/where n/NN/n =/:/= f1/NNP/f1 ;/:/; 2/CD/2 ;/:/; 3/CD/3 ;/:/; /:/: /:/: /:/: g/NN/g /./. finally/RB/finally in/IN/in this/DT/this brief/NN/brief introduction/NN/introduction to/TO/to sets/NNS/sets we/PRP/we will/MD/will cover/VB/cover set/VBN/set intersection/NN/intersection and/CC/and union/NN/union /,/, both/DT/both of/IN/of which/WDT/which are/VBP/are very/RB/very common/JJ/common operations/NNS/operations /:/( amongst/NN/amongst many/JJ/many others/NNS/others /VBP/) per/JJ/per- formed/VBN/formed on/IN/on sets/NNP/sets. the/DT/the union/NN/union set/NN/set can/MD/can be/VB/be de/VBN/de Â/-NONE-/Â ¯/:/¯ ned/VBN/ned as/IN/as follows/NNS/follows a/DT/a /NN/[ b/NN/b =/:/= fx/NN/fx j/NN/j x/NN/x 2/CD/2 a/DT/a or/CC/or x/NN/x 2/CD/2 bg/NN/bg /,/, and/CC/and intersection/NN/intersection a/DT/a \/NN/\ b/NN/b =/:/= fx/NN/fx j/NN/j x/NN/x 2/CD/2 a/DT/a and/CC/and x/NN/x 2/CD/2 bg/NNP/bg. figure/NN/figure 5.1/CD/5.1 demonstrates/NNS/demonstrates set/VBD/set intersection/NN/intersection and/CC/and union/NN/union graphically/RB/graphically /./. given/VBN/given the/DT/the set/NN/set de/IN/de Â/CD/Â ¯/CD/¯ nitions/NNS/nitions a/DT/a =/NN/= f1/NNP/f1 ;/:/; 2/CD/2 ;/:/; 3g/CD/3g /,/, and/CC/and b/NN/b =/:/= f6/NNP/f6 ;/:/; 2/CD/2 ;/:/; 9g/CD/9g the/DT/the union/NN/union of/IN/of the/DT/the two/CD/two sets/NNS/sets is/VBZ/is a/DT/a /NN/[ b/NN/b =/:/= f1/NNP/f1 ;/:/; 2/CD/2 ;/:/; 3/CD/3 ;/:/; 6/CD/6 ;/:/; 9g/CD/9g /,/, and/CC/and the/DT/the intersection/NN/intersection of/IN/of the/DT/the two/CD/two sets/NNS/sets is/VBZ/is a/DT/a \/NN/\ b/NN/b =/:/= f2g/NNP/f2g /./. both/DT/both set/NN/set union/NN/union and/CC/and intersection/NN/intersection are/VBP/are sometimes/RB/sometimes provided/VBN/provided within/IN/within the/DT/the frame/NNP/frame- work/NN/work associated/VBN/associated with/IN/with mainstream/NN/mainstream languages/NNP/languages. this/DT/this is/VBZ/is the/DT/the case/NN/case in/IN/in .net/JJ/.net 3.51/CD/3.51 where/WRB/where such/JJ/such algorithms/NNS/algorithms exist/VBP/exist as/RB/as extension/NN/extension methods/NNS/methods de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in the/DT/the type/NN/type sys/NN/sys- tem.linq.enumerable2/-NONE-/tem.linq.enumerable2 /,/, as/IN/as a/DT/a result/NN/result dsa/NN/dsa does/VBZ/does not/RB/not provide/VB/provide implementations/NNS/implementations of/IN/of 1http/CD/1http /:/: //www.microsoft.com/net//JJ///www.microsoft.com/net/ 2http/CD/2http /:/: //msdn.microsoft.com/en-us/library/system.linq.enumerable_members.aspx/JJ///msdn.microsoft.com/en-us/library/system.linq.enumerable_members.aspx 44/CD/44 chapter/NN/chapter 5/CD/5. sets/NNS/sets 45/CD/45 figure/NN/figure 5.1/CD/5.1 /:/: a/DT/a /NN/) a/DT/a \/NN/\ b/NN/b ;/:/; b/NN/b /:/) a/DT/a /NN/[ b/NN/b these/DT/these algorithms/NNP/algorithms. most/JJS/most of/IN/of the/DT/the algorithms/NNS/algorithms de/VBP/de Â/:/Â ¯/:/¯ ned/VBD/ned in/IN/in system.linq.enumerable/JJ/system.linq.enumerable deal/NN/deal mainly/RB/mainly with/IN/with sequences/NNS/sequences rather/RB/rather than/IN/than sets/NNS/sets exclusively/RB/exclusively /./. set/NN/set union/NN/union can/MD/can be/VB/be implemented/VBN/implemented as/IN/as a/DT/a simple/JJ/simple traversal/NN/traversal of/IN/of both/DT/both sets/NNS/sets adding/VBG/adding each/DT/each item/NN/item of/IN/of the/DT/the two/CD/two sets/NNS/sets to/TO/to a/DT/a new/JJ/new union/NN/union set/NN/set /./. 1/CD/1 /CD/) algorithm/NN/algorithm union/NN/union /:/( set1/NNP/set1 /,/, set2/NNP/set2 /NNP/) 2/CD/2 /CD/) pre/NN/pre /:/: set1/NNP/set1 /,/, and/CC/and set2/NNP/set2 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) union/NN/union is/VBZ/is a/DT/a set/NN/set 3/CD/3 /CD/) post/NN/post /:/: a/DT/a union/NN/union of/IN/of set1/NNP/set1 /,/, and/CC/and set2/NNP/set2 has/VBZ/has been/VBN/been created/VBN/created 4/CD/4 /CD/) foreach/NN/foreach item/NN/item in/IN/in set1/NNP/set1 5/CD/5 /CD/) union.add/JJ/union.add /NN/( item/NN/item /:/) 6/CD/6 /CD/) end/NN/end foreach/NN/foreach 7/CD/7 /CD/) foreach/NN/foreach item/NN/item in/IN/in set2/NNP/set2 8/CD/8 /CD/) union.add/JJ/union.add /NN/( item/NN/item /:/) 9/CD/9 /CD/) end/NN/end foreach/NN/foreach 10/CD/10 /CD/) return/NN/return union/NN/union 11/CD/11 /CD/) end/NN/end union/NN/union the/DT/the run/NN/run time/NN/time of/IN/of our/PRP$/our union/NN/union algorithm/NN/algorithm is/VBZ/is o/RB/o /:/( m/NN/m +/:/+ n/NN/n /:/) where/WRB/where m/NN/m is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst set/NN/set and/CC/and n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the second/JJ/second set/NNP/set. this/DT/this runtime/NN/runtime applies/VBZ/applies only/RB/only to/TO/to sets/NNS/sets that/IN/that exhibit/NN/exhibit o/NN/o /:/( 1/CD/1 /CD/) insertions/NNS/insertions /./. set/NN/set intersection/NN/intersection is/VBZ/is also/RB/also trivial/JJ/trivial to/TO/to implement/NNP/implement. the/DT/the only/JJ/only major/JJ/major thing/NN/thing worth/NN/worth pointing/VBG/pointing out/RP/out about/IN/about our/PRP$/our algorithm/NN/algorithm is/VBZ/is that/IN/that we/PRP/we traverse/VBP/traverse the/DT/the set/NN/set containing/VBG/containing the/DT/the fewest/JJS/fewest items/NNP/items. we/PRP/we can/MD/can do/VB/do this/DT/this because/IN/because if/IN/if we/PRP/we have/VBP/have exhausted/VBN/exhausted all/DT/all the/DT/the items/NNS/items in/IN/in the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two sets/NNS/sets then/RB/then there/RB/there are/VBP/are no/DT/no more/RBR/more items/NNS/items that/WDT/that are/VBP/are members/NNS/members of/IN/of both/DT/both sets/NNS/sets /,/, thus/RB/thus we/PRP/we have/VBP/have no/DT/no more/RBR/more items/NNS/items to/TO/to add/VB/add to/TO/to the/DT/the intersection/NN/intersection set/VBD/set /./. chapter/NN/chapter 5/CD/5. sets/NNS/sets 46/CD/46 1/CD/1 /CD/) algorithm/NN/algorithm intersection/NN/intersection /:/( set1/NNP/set1 /,/, set2/NNP/set2 /NNP/) 2/CD/2 /CD/) pre/NN/pre /:/: set1/NNP/set1 /,/, and/CC/and set2/NNP/set2 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) intersection/NN/intersection /,/, and/CC/and smallerset/VB/smallerset are/VBP/are sets/NNS/sets 3/CD/3 /CD/) post/NN/post /:/: an/DT/an intersection/NN/intersection of/IN/of set1/NNP/set1 /,/, and/CC/and set2/NNP/set2 has/VBZ/has been/VBN/been created/VBN/created 4/CD/4 /CD/) if/IN/if set1.count/JJ/set1.count </NN/< set2.count/NN/set2.count 5/CD/5 /CD/) smallerset/NN/smallerset Ã/:/Ã /:/ set1/NNP/set1 6/CD/6 /CD/) else/NN/else 7/CD/7 /CD/) smallerset/NN/smallerset Ã/:/Ã /:/ set2/NNP/set2 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) foreach/NN/foreach item/NN/item in/IN/in smallerset/NN/smallerset 10/CD/10 /CD/) if/IN/if set1.contains/NNS/set1.contains /VBP/( item/NN/item /:/) and/CC/and set2.contains/NNS/set2.contains /:/( item/NN/item /:/) 11/CD/11 /CD/) intersection.add/JJ/intersection.add /NN/( item/NN/item /:/) 12/CD/12 /CD/) end/NN/end if/IN/if 13/CD/13 /CD/) end/NN/end foreach/NN/foreach 14/CD/14 /CD/) return/NN/return intersection/NN/intersection 15/CD/15 /CD/) end/NN/end intersection/NN/intersection the/DT/the run/NN/run time/NN/time of/IN/of our/PRP$/our intersection/NN/intersection algorithm/NN/algorithm is/VBZ/is o/RB/o /:/( n/NN/n /:/) where/WRB/where n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the smaller/JJR/smaller of/IN/of the/DT/the two/CD/two sets/NNP/sets. just/RB/just like/IN/like our/PRP$/our union/NN/union algorithm/NN/algorithm a/DT/a linear/NN/linear runtime/NN/runtime can/MD/can only/RB/only be/VB/be attained/VBN/attained when/WRB/when operating/NN/operating on/IN/on a/DT/a set/NN/set with/IN/with o/NN/o /:/( 1/CD/1 /CD/) insertion/NN/insertion /./. 5.1/CD/5.1 unordered/VBD/unordered sets/NNS/sets in/IN/in the/DT/the general/JJ/general sense/NN/sense do/VBP/do not/RB/not enforce/VB/enforce the/DT/the explicit/NN/explicit ordering/VBG/ordering of/IN/of their/PRP$/their mem/JJ/mem- bers/NNP/bers. for/IN/for example/NN/example the/DT/the members/NNS/members of/IN/of b/NN/b =/:/= f6/NNP/f6 ;/:/; 2/CD/2 ;/:/; 9g/CD/9g conform/NN/conform to/TO/to no/DT/no ordering/NN/ordering scheme/NN/scheme because/IN/because it/PRP/it is/VBZ/is not/RB/not required/VBN/required /./. most/JJS/most libraries/NNS/libraries provide/VBP/provide implementations/NNS/implementations of/IN/of unordered/VBN/unordered sets/NNS/sets and/CC/and so/RB/so dsa/RB/dsa does/VBZ/does not/RB/not ;/:/; we/PRP/we simply/RB/simply mention/NN/mention it/PRP/it here/RB/here to/TO/to disambiguate/VB/disambiguate between/IN/between an/DT/an unordered/VBN/unordered set/NN/set and/CC/and ordered/VBN/ordered set/NN/set /./. we/PRP/we will/MD/will only/RB/only look/VB/look at/IN/at insertion/NN/insertion for/IN/for an/DT/an unordered/VBN/unordered set/NN/set and/CC/and cover/NN/cover brie/NN/brie Â/:/Â °/:/° y/NN/y why/WRB/why a/DT/a hash/NN/hash table/NN/table is/VBZ/is an/DT/an e/NN/e Â/:/Â ±/:/± cient/NN/cient data/NNS/data structure/NN/structure to/TO/to use/VB/use for/IN/for its/PRP$/its implementation/NN/implementation /./. 5.1.1/CD/5.1.1 insertion/NN/insertion an/DT/an unordered/VBN/unordered set/NN/set can/MD/can be/VB/be e/VB/e Â/-NONE-/Â ±/./± ciently/RB/ciently implemented/VBN/implemented using/VBG/using a/DT/a hash/NN/hash table/NN/table as/IN/as its/PRP$/its backing/NN/backing data/NNS/data structure/NNP/structure. as/IN/as mentioned/VBN/mentioned previously/RB/previously we/PRP/we only/RB/only add/VBP/add an/DT/an item/NN/item to/TO/to a/DT/a set/NN/set if/IN/if that/DT/that item/NN/item is/VBZ/is not/RB/not already/RB/already in/IN/in the/DT/the set/NN/set /,/, so/RB/so the/DT/the backing/NN/backing data/NNS/data structure/NN/structure we/PRP/we use/VBP/use must/MD/must have/VB/have a/DT/a quick/JJ/quick look/NN/look up/IN/up and/CC/and insertion/NN/insertion run/VBN/run time/NN/time complexity/NN/complexity /./. a/DT/a hash/NN/hash map/NN/map generally/RB/generally provides/VBZ/provides the/DT/the following/VBG/following /:/: 1/CD/1. o/NN/o /:/( 1/CD/1 /CD/) for/IN/for insertion/NN/insertion 2/CD/2. approaching/VBG/approaching o/NN/o /:/( 1/CD/1 /CD/) for/IN/for look/NN/look up/IN/up the/DT/the above/NN/above depends/VBZ/depends on/IN/on how/WRB/how good/JJ/good the/DT/the hashing/NN/hashing algorithm/NN/algorithm of/IN/of the/DT/the hash/NN/hash table/NN/table is/VBZ/is /,/, but/CC/but most/JJS/most hash/JJ/hash tables/NNS/tables employ/VBP/employ incredibly/RB/incredibly e/JJ/e Â/NN/Â ±/:/± cient/NN/cient general/JJ/general purpose/NN/purpose hashing/VBG/hashing algorithms/NNS/algorithms and/CC/and so/RB/so the/DT/the run/NN/run time/NN/time complexities/NNS/complexities for/IN/for the/DT/the hash/NN/hash table/NN/table in/IN/in your/PRP$/your library/NN/library of/IN/of choice/NN/choice should/MD/should be/VB/be very/RB/very similar/JJ/similar in/IN/in terms/NNS/terms of/IN/of e/NN/e Â/:/Â ±/:/± ciency/NN/ciency /./. chapter/NN/chapter 5/CD/5. sets/NNS/sets 47/CD/47 5.2/CD/5.2 ordered/VBN/ordered an/DT/an ordered/VBN/ordered set/NN/set is/VBZ/is similar/JJ/similar to/TO/to an/DT/an unordered/JJ/unordered set/NN/set in/IN/in the/DT/the sense/NN/sense that/IN/that its/PRP$/its members/NNS/members are/VBP/are distinct/JJ/distinct /,/, but/CC/but an/DT/an ordered/VBN/ordered set/NN/set enforces/NNS/enforces some/DT/some prede/NN/prede Â/:/Â ¯/:/¯ ned/VBD/ned comparison/NN/comparison on/IN/on each/DT/each of/IN/of its/PRP$/its members/NNS/members to/TO/to produce/VB/produce a/DT/a set/NN/set whose/WP$/whose members/NNS/members are/VBP/are ordered/VBN/ordered appropriately/RB/appropriately /./. in/IN/in dsa/NN/dsa 0.5/CD/0.5 and/CC/and earlier/JJR/earlier we/PRP/we used/VBD/used a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x3/NNP/x3 /NNP/) as/IN/as the/DT/the internal/JJ/internal backing/NN/backing data/NNS/data structure/NN/structure for/IN/for our/PRP$/our ordered/VBN/ordered set/NNP/set. from/IN/from versions/NNS/versions 0.6/CD/0.6 onwards/NNS/onwards we/PRP/we replaced/VBD/replaced the/DT/the binary/JJ/binary search/NN/search tree/NN/tree with/IN/with an/DT/an avl/NN/avl tree/NN/tree primarily/RB/primarily because/IN/because avl/NN/avl is/VBZ/is balanced/VBN/balanced /./. the/DT/the ordered/VBN/ordered set/NN/set has/VBZ/has its/PRP$/its order/NN/order realised/VBD/realised by/IN/by performing/NN/performing an/DT/an inorder/NN/inorder traversal/NN/traversal upon/IN/upon its/PRP$/its backing/NN/backing tree/NN/tree data/NNS/data structure/NN/structure which/WDT/which yields/NNS/yields the/DT/the correct/NN/correct ordered/VBD/ordered sequence/NN/sequence of/IN/of set/NN/set members/NNS/members /./. because/IN/because an/DT/an ordered/VBN/ordered set/NN/set in/IN/in dsa/NN/dsa is/VBZ/is simply/RB/simply a/DT/a wrapper/NN/wrapper for/IN/for an/DT/an avl/NN/avl tree/NN/tree that/WDT/that additionally/RB/additionally ensures/VBZ/ensures that/IN/that the/DT/the tree/NN/tree contains/VBZ/contains unique/JJ/unique items/NNS/items you/PRP/you should/MD/should read/VB/read x7/NNP/x7 to/TO/to learn/VB/learn more/JJR/more about/IN/about the/DT/the run/NN/run time/NN/time complexities/NNS/complexities associated/VBN/associated with/IN/with its/PRP$/its operations/NNS/operations /./. 5.3/CD/5.3 summary/NN/summary sets/NNS/sets provide/VB/provide a/DT/a way/NN/way of/IN/of having/VBG/having a/DT/a collection/NN/collection of/IN/of unique/JJ/unique objects/NNS/objects /,/, either/DT/either ordered/VBN/ordered or/CC/or unordered/VBN/unordered /./. when/WRB/when implementing/VBG/implementing a/DT/a set/NN/set /:/( either/DT/either ordered/VBN/ordered or/CC/or unordered/VBN/unordered /-NONE-/) it/PRP/it is/VBZ/is key/JJ/key to/TO/to select/VB/select the/DT/the correct/JJ/correct backing/NN/backing data/NNS/data structure/NNP/structure. as/IN/as we/PRP/we discussed/VBD/discussed in/IN/in x5.1.1/-NONE-/x5.1.1 because/IN/because we/PRP/we check/VBP/check Â/:/Â ¯/:/¯ rst/JJ/rst if/IN/if the/DT/the item/NN/item is/VBZ/is already/RB/already contained/VBN/contained within/IN/within the/DT/the set/NN/set before/IN/before adding/VBG/adding it/PRP/it we/PRP/we need/VBP/need this/DT/this check/NN/check to/TO/to be/VB/be as/RB/as quick/JJ/quick as/IN/as possible/NNP/possible. for/IN/for unordered/VBN/unordered sets/NNS/sets we/PRP/we can/MD/can rely/RB/rely on/IN/on the/DT/the use/NN/use of/IN/of a/DT/a hash/NN/hash table/NN/table and/CC/and use/VBP/use the/DT/the key/JJ/key of/IN/of an/DT/an item/NN/item to/TO/to determine/VB/determine whether/IN/whether or/CC/or not/RB/not it/PRP/it is/VBZ/is already/RB/already contained/VBN/contained within/IN/within the/DT/the set/NNP/set. using/VBG/using a/DT/a hash/NN/hash table/NN/table this/DT/this check/NN/check results/NNS/results in/IN/in a/DT/a near/NN/near constant/NN/constant run/VBN/run time/NN/time complexity/NNP/complexity. ordered/VBD/ordered sets/NNS/sets cost/NN/cost a/DT/a little/RB/little more/RBR/more for/IN/for this/DT/this check/NN/check /,/, however/RB/however the/DT/the logarithmic/JJ/logarithmic growth/NN/growth that/WDT/that we/PRP/we incur/VBP/incur by/IN/by using/VBG/using a/DT/a binary/JJ/binary search/NN/search tree/NN/tree as/IN/as its/PRP$/its backing/NN/backing data/NNS/data structure/NN/structure is/VBZ/is acceptable/JJ/acceptable /./. another/DT/another key/NN/key property/NN/property of/IN/of sets/NNS/sets implemented/VBN/implemented using/VBG/using the/DT/the approach/NN/approach we/PRP/we describe/VBP/describe is/VBZ/is that/IN/that both/DT/both have/VBP/have favourably/RB/favourably fast/RB/fast look-up/JJ/look-up times/NNP/times. just/RB/just like/IN/like the/DT/the check/NN/check before/IN/before inser/JJ/inser- tion/NN/tion /,/, for/IN/for a/DT/a hash/NN/hash table/NN/table this/DT/this run/NN/run time/NN/time complexity/NN/complexity should/MD/should be/VB/be near/IN/near constant/NNP/constant. ordered/VBD/ordered sets/NNS/sets as/IN/as described/VBN/described in/IN/in 3/CD/3 perform/NN/perform a/DT/a binary/JJ/binary chop/NN/chop at/IN/at each/DT/each stage/NN/stage when/WRB/when searching/VBG/searching for/IN/for the/DT/the existence/NN/existence of/IN/of an/DT/an item/NN/item yielding/NN/yielding a/DT/a logarithmic/JJ/logarithmic run/NN/run time/NN/time /./. we/PRP/we can/MD/can use/VB/use sets/NNS/sets to/TO/to facilitate/VB/facilitate many/JJ/many algorithms/NNS/algorithms that/WDT/that would/MD/would otherwise/VB/otherwise be/VB/be a/DT/a little/RB/little less/RBR/less clear/JJ/clear in/IN/in their/PRP$/their implementation/NNP/implementation. for/IN/for example/NN/example in/IN/in x11.4/NN/x11.4 we/PRP/we use/VBP/use an/DT/an unordered/VBN/unordered set/NN/set to/TO/to assist/VB/assist in/IN/in the/DT/the construction/NN/construction of/IN/of an/DT/an algorithm/NN/algorithm that/IN/that determines/NNS/determines the/DT/the number/NN/number of/IN/of repeated/VBN/repeated words/NNS/words within/IN/within a/DT/a string/NN/string /./. chapter/NN/chapter 6/CD/6 queues/NNS/queues queues/NNS/queues are/VBP/are an/DT/an essential/JJ/essential data/NNS/data structure/NN/structure that/IN/that are/VBP/are found/VBN/found in/IN/in vast/JJ/vast amounts/NNS/amounts of/IN/of soft/JJ/soft- ware/NN/ware from/IN/from user/NN/user mode/NN/mode to/TO/to kernel/VB/kernel mode/NN/mode applications/NNS/applications that/WDT/that are/VBP/are core/RBR/core to/TO/to the/DT/the system/NN/system /./. fundamentally/RB/fundamentally they/PRP/they honour/VBP/honour a/DT/a Â/NN/Â ¯/:/¯ rst/JJ/rst in/IN/in Â/NNP/Â ¯/NNP/¯ rst/NN/rst out/IN/out /CD/( fifo/NN/fifo /:/) strategy/NN/strategy /,/, that/IN/that is/VBZ/is the/DT/the item/NN/item Â/:/Â ¯/:/¯ rst/JJ/rst put/NN/put into/IN/into the/DT/the queue/JJ/queue will/MD/will be/VB/be the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst served/VBN/served /,/, the/DT/the second/JJ/second item/NN/item added/VBD/added to/TO/to the/DT/the queue/NN/queue will/MD/will be/VB/be the/DT/the second/JJ/second to/TO/to be/VB/be served/VBN/served and/CC/and so/RB/so on/IN/on /./. a/DT/a traditional/JJ/traditional queue/NN/queue only/RB/only allows/VBZ/allows you/PRP/you to/TO/to access/NN/access the/DT/the item/NN/item at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue ;/:/; when/WRB/when you/PRP/you add/VBP/add an/DT/an item/NN/item to/TO/to the/DT/the queue/NN/queue that/IN/that item/NN/item is/VBZ/is placed/VBN/placed at/IN/at the/DT/the back/NN/back of/IN/of the/DT/the queue/NN/queue /./. historically/RB/historically queues/VBZ/queues always/RB/always have/VBP/have the/DT/the following/VBG/following three/CD/three core/NN/core methods/NNS/methods /:/: enqueue/JJ/enqueue /:/: places/NNS/places an/DT/an item/NN/item at/IN/at the/DT/the back/NN/back of/IN/of the/DT/the queue/NN/queue ;/:/; dequeue/NN/dequeue /:/: retrieves/NNS/retrieves the/DT/the item/NN/item at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue /,/, and/CC/and removes/NNS/removes it/PRP/it from/IN/from the/DT/the queue/NN/queue ;/:/; peek/NN/peek /:/: 1/LS/1 retrieves/NNS/retrieves the/DT/the item/NN/item at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue without/IN/without removing/NN/removing it/PRP/it from/IN/from the/DT/the queue/NN/queue as/IN/as an/DT/an example/NN/example to/TO/to demonstrate/VB/demonstrate the/DT/the behaviour/NN/behaviour of/IN/of a/DT/a queue/NN/queue we/PRP/we will/MD/will walk/VB/walk through/IN/through a/DT/a scenario/NN/scenario whereby/WRB/whereby we/PRP/we invoke/VBP/invoke each/DT/each of/IN/of the/DT/the previously/RB/previously mentioned/VBD/mentioned methods/NNS/methods observ/-NONE-/observ- ing/VBG/ing the/DT/the mutations/NNS/mutations upon/IN/upon the/DT/the queue/NN/queue data/NNS/data structure/NNP/structure. the/DT/the following/VBG/following list/NN/list describes/NNS/describes the/DT/the operations/NNS/operations performed/VBD/performed upon/IN/upon the/DT/the queue/NN/queue in/IN/in figure/NN/figure 6.1/CD/6.1 /:/: 1/CD/1. enqueue/NN/enqueue /:/( 10/CD/10 /CD/) 2/CD/2. enqueue/NN/enqueue /:/( 12/CD/12 /CD/) 3/CD/3. enqueue/NN/enqueue /:/( 9/CD/9 /CD/) 4/CD/4. enqueue/NN/enqueue /:/( 8/CD/8 /CD/) 5/CD/5. enqueue/NN/enqueue /:/( 3/CD/3 /CD/) 6/CD/6. dequeue/NN/dequeue /:/( /:/) 7/CD/7. peek/NN/peek /:/( /:/) 1this/CD/1this operation/NN/operation is/VBZ/is sometimes/RB/sometimes referred/VBN/referred to/TO/to as/RB/as front/JJ/front 48/CD/48 chapter/NN/chapter 6/CD/6. queues/NNS/queues 49/CD/49 8/CD/8. enqueue/NN/enqueue /:/( 33/CD/33 /CD/) 9/CD/9. peek/NN/peek /:/( /:/) 10/CD/10. dequeue/NN/dequeue /:/( /:/) 6.1/CD/6.1 a/DT/a standard/JJ/standard queue/NN/queue a/DT/a queue/NN/queue is/VBZ/is implicitly/RB/implicitly like/IN/like that/DT/that described/VBN/described prior/RB/prior to/TO/to this/DT/this section/NNP/section. in/IN/in dsa/NN/dsa we/PRP/we do/VBP/do n't/RB/n't provide/VB/provide a/DT/a standard/JJ/standard queue/NN/queue because/IN/because queues/NNS/queues are/VBP/are so/RB/so popular/JJ/popular and/CC/and such/JJ/such a/DT/a core/NN/core data/NN/data structure/NN/structure that/WDT/that you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd pretty/RB/pretty much/RB/much every/DT/every mainstream/NN/mainstream library/NN/library provides/VBZ/provides a/DT/a queue/NN/queue data/NN/data structure/NN/structure that/WDT/that you/PRP/you can/MD/can use/VB/use with/IN/with your/PRP$/your language/NN/language of/IN/of choice/NNP/choice. in/IN/in this/DT/this section/NN/section we/PRP/we will/MD/will discuss/VB/discuss how/WRB/how you/PRP/you can/MD/can /,/, if/IN/if required/VBN/required /,/, implement/NN/implement an/DT/an e/NN/e Â/:/Â ±/:/± cient/NN/cient queue/NN/queue data/NNS/data structure/NN/structure /./. the/DT/the main/JJ/main property/NN/property of/IN/of a/DT/a queue/NN/queue is/VBZ/is that/IN/that we/PRP/we have/VBP/have access/NN/access to/TO/to the/DT/the item/NN/item at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. the/DT/the queue/NN/queue data/NNS/data structure/NN/structure can/MD/can be/VB/be e/VB/e Â/-NONE-/Â ±/./± ciently/RB/ciently implemented/VBN/implemented using/VBG/using a/DT/a singly/RB/singly linked/VBN/linked list/NN/list /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x2.1/-NONE-/x2.1 /:/) /./. a/DT/a singly/RB/singly linked/VBN/linked list/NN/list provides/VBZ/provides o/NN/o /:/( 1/CD/1 /CD/) insertion/NN/insertion and/CC/and deletion/NN/deletion run/VBN/run time/NN/time complexities/NNP/complexities. the/DT/the reason/NN/reason we/PRP/we have/VBP/have an/DT/an o/NN/o /:/( 1/CD/1 /CD/) run/VBN/run time/NN/time complexity/NN/complexity for/IN/for deletion/NN/deletion is/VBZ/is because/IN/because we/PRP/we only/RB/only ever/RB/ever remove/VB/remove items/NNS/items from/IN/from the/DT/the front/NN/front of/IN/of queues/NNS/queues /:/( with/IN/with the/DT/the dequeue/NN/dequeue operation/NN/operation /:/) /./. since/IN/since we/PRP/we always/RB/always have/VBP/have a/DT/a pointer/NN/pointer to/TO/to the/DT/the item/NN/item at/IN/at the/DT/the head/NN/head of/IN/of a/DT/a singly/RB/singly linked/VBN/linked list/NN/list /,/, removal/NN/removal is/VBZ/is simply/RB/simply a/DT/a case/NN/case of/IN/of returning/VBG/returning the/DT/the value/NN/value of/IN/of the/DT/the old/JJ/old head/NN/head node/NN/node /,/, and/CC/and then/RB/then modifying/VBG/modifying the/DT/the head/NN/head pointer/NN/pointer to/TO/to be/VB/be the/DT/the next/JJ/next node/NN/node of/IN/of the/DT/the old/JJ/old head/NN/head node/NNP/node. the/DT/the run/NN/run time/NN/time complexity/NN/complexity for/IN/for searching/VBG/searching a/DT/a queue/NN/queue remains/VBZ/remains the/DT/the same/JJ/same as/IN/as that/DT/that of/IN/of a/DT/a singly/RB/singly linked/VBN/linked list/NN/list /:/: o/NN/o /:/( n/NN/n /:/) /./. 6.2/CD/6.2 priority/NN/priority queue/NN/queue unlike/IN/unlike a/DT/a standard/JJ/standard queue/NN/queue where/WRB/where items/NNS/items are/VBP/are ordered/VBN/ordered in/IN/in terms/NNS/terms of/IN/of who/WP/who arrived/VBN/arrived Â/-NONE-/Â ¯/:/¯ rst/JJ/rst /,/, a/DT/a priority/NN/priority queue/NN/queue determines/NNS/determines the/DT/the order/NN/order of/IN/of its/PRP$/its items/NNS/items by/IN/by using/VBG/using a/DT/a form/NN/form of/IN/of custom/NN/custom comparer/NN/comparer to/TO/to see/VB/see which/WDT/which item/NN/item has/VBZ/has the/DT/the highest/JJS/highest priority/NNP/priority. other/JJ/other than/IN/than the/DT/the items/NNS/items in/IN/in a/DT/a priority/NN/priority queue/NN/queue being/VBG/being ordered/VBN/ordered by/IN/by priority/NN/priority it/PRP/it remains/VBZ/remains the/DT/the same/JJ/same as/IN/as a/DT/a normal/JJ/normal queue/NN/queue /:/: you/PRP/you can/MD/can only/RB/only access/VB/access the/DT/the item/NN/item at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue /./. a/DT/a sensible/JJ/sensible implementation/NN/implementation of/IN/of a/DT/a priority/NN/priority queue/NN/queue is/VBZ/is to/TO/to use/VB/use a/DT/a heap/NN/heap data/NN/data structure/NN/structure /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x4/NNP/x4 /NNP/) /./. using/VBG/using a/DT/a heap/NN/heap we/PRP/we can/MD/can look/VB/look at/IN/at the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst item/NN/item in/IN/in the/DT/the queue/NN/queue by/IN/by simply/RB/simply returning/VBG/returning the/DT/the item/NN/item at/IN/at index/NN/index 0/-NONE-/0 within/IN/within the/DT/the heap/NN/heap array/NNP/array. a/DT/a heap/NN/heap provides/VBZ/provides us/PRP/us with/IN/with the/DT/the ability/NN/ability to/TO/to construct/VB/construct a/DT/a priority/NN/priority queue/NN/queue where/WRB/where the/DT/the items/NNS/items with/IN/with the/DT/the highest/JJS/highest priority/NN/priority are/VBP/are either/RB/either those/DT/those with/IN/with the/DT/the smallest/JJS/smallest value/NN/value /,/, or/CC/or those/DT/those with/IN/with the/DT/the largest/JJS/largest /./. 6.3/CD/6.3 double/JJ/double ended/JJ/ended queue/NN/queue unlike/IN/unlike the/DT/the queues/NNS/queues we/PRP/we have/VBP/have talked/VBN/talked about/IN/about previously/RB/previously in/IN/in this/DT/this chapter/NN/chapter a/DT/a double/JJ/double ended/VBN/ended queue/NN/queue allows/VBZ/allows you/PRP/you to/TO/to access/NN/access the/DT/the items/NNS/items at/IN/at both/DT/both the/DT/the front/NN/front /,/, and/CC/and back/RB/back of/IN/of the/DT/the queue/NNP/queue. a/DT/a double/JJ/double ended/VBN/ended queue/NN/queue is/VBZ/is commonly/RB/commonly known/VBN/known as/IN/as a/DT/a deque/NN/deque which/WDT/which is/VBZ/is the/DT/the name/NN/name we/PRP/we will/MD/will here/RB/here on/IN/on in/IN/in refer/NN/refer to/TO/to it/PRP/it as/IN/as /./. a/DT/a deque/NN/deque applies/NNS/applies no/DT/no prioritization/NN/prioritization strategy/NN/strategy to/TO/to its/PRP$/its items/NNS/items like/IN/like a/DT/a priority/NN/priority queue/NN/queue does/VBZ/does /,/, items/NNS/items are/VBP/are added/VBN/added in/IN/in order/NN/order to/TO/to either/DT/either the/DT/the front/NN/front of/IN/of back/NN/back of/IN/of the/DT/the deque/NNP/deque. the/DT/the former/JJ/former properties/NNS/properties of/IN/of the/DT/the deque/NN/deque are/VBP/are denoted/VBN/denoted by/IN/by the/DT/the programmer/NN/programmer utilising/VBG/utilising the/DT/the data/NNS/data structures/NNS/structures exposed/VBD/exposed interface/NN/interface /./. chapter/NN/chapter 6/CD/6. queues/NNS/queues 50/CD/50 figure/NN/figure 6.1/CD/6.1 /:/: queue/JJ/queue mutations/NNS/mutations chapter/NN/chapter 6/CD/6. queues/NNS/queues 51/CD/51 deque/NN/deque 's/POS/'s provide/NN/provide front/NN/front and/CC/and back/RB/back speci/VB/speci Â/:/Â ¯/:/¯ c/NN/c versions/NNS/versions of/IN/of common/JJ/common queue/NN/queue operations/NNS/operations /,/, e.g/NNP/e.g. you/PRP/you may/MD/may want/VB/want to/TO/to enqueue/VB/enqueue an/DT/an item/NN/item to/TO/to the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue rather/RB/rather than/IN/than the/DT/the back/NN/back in/IN/in which/WDT/which case/NN/case you/PRP/you would/MD/would use/VB/use a/DT/a method/NN/method with/IN/with a/DT/a name/NN/name along/IN/along the/DT/the lines/NNS/lines of/IN/of enqueuefront/NNP/enqueuefront. the/DT/the following/VBG/following list/NN/list identi/NN/identi Â/:/Â ¯/:/¯ es/NNS/es operations/NNS/operations that/WDT/that are/VBP/are commonly/RB/commonly supported/VBN/supported by/IN/by deque/NN/deque 's/POS/'s /:/: Â/:/Â ²/:/² enqueuefront/NN/enqueuefront Â/:/Â ²/:/² enqueueback/NN/enqueueback Â/:/Â ²/:/² dequeuefront/NN/dequeuefront Â/:/Â ²/:/² dequeueback/NN/dequeueback Â/:/Â ²/:/² peekfront/NN/peekfront Â/:/Â ²/:/² peekback/NN/peekback figure/NN/figure 6.2/CD/6.2 shows/NNS/shows a/DT/a deque/NN/deque after/IN/after the/DT/the invocation/NN/invocation of/IN/of the/DT/the following/JJ/following methods/NNS/methods /:/( in/JJ/in- order/NN/order /:/) /:/: 1/CD/1. enqueueback/NN/enqueueback /:/( 12/CD/12 /CD/) 2/CD/2. enqueuefront/NN/enqueuefront /:/( 1/CD/1 /CD/) 3/CD/3. enqueueback/NN/enqueueback /:/( 23/CD/23 /CD/) 4/CD/4. enqueuefront/NN/enqueuefront /:/( 908/CD/908 /CD/) 5/CD/5. dequeuefront/NN/dequeuefront /:/( /:/) 6/CD/6. dequeueback/NN/dequeueback /:/( /:/) the/DT/the operations/NNS/operations have/VBP/have a/DT/a one-to-one/JJ/one-to-one translation/NN/translation in/IN/in terms/NNS/terms of/IN/of behaviour/PRP$/behaviour with/IN/with those/DT/those of/IN/of a/DT/a normal/JJ/normal queue/NN/queue /,/, or/CC/or priority/NN/priority queue/NNP/queue. in/IN/in some/DT/some cases/NNS/cases the/DT/the set/NN/set of/IN/of algorithms/NNS/algorithms that/WDT/that add/NN/add an/DT/an item/NN/item to/TO/to the/DT/the back/NN/back of/IN/of the/DT/the deque/NN/deque may/MD/may be/VB/be named/VBN/named as/IN/as they/PRP/they are/VBP/are with/IN/with normal/JJ/normal queues/NNS/queues /,/, e.g/NNP/e.g. enqueueback/NN/enqueueback may/MD/may simply/RB/simply be/VB/be called/VBN/called enqueue/NN/enqueue an/DT/an so/RB/so on/NNP/on. some/DT/some frameworks/NNS/frameworks also/RB/also specify/VB/specify explicit/NN/explicit behaviour/PRP$/behaviour 's/POS/'s that/DT/that data/NN/data structures/NNS/structures must/MD/must adhere/VB/adhere to/TO/to /./. this/DT/this is/VBZ/is certainly/RB/certainly the/DT/the case/NN/case in/IN/in .net/JJ/.net where/WRB/where most/RBS/most collections/NNS/collections implement/NN/implement an/DT/an interface/NN/interface which/WDT/which requires/VBZ/requires the/DT/the data/NNS/data structure/VBP/structure to/TO/to expose/VB/expose a/DT/a standard/JJ/standard add/NN/add method/NNP/method. in/IN/in such/JJ/such a/DT/a scenario/NN/scenario you/PRP/you can/MD/can safely/RB/safely assume/VB/assume that/IN/that the/DT/the add/NN/add method/NN/method will/MD/will simply/RB/simply enqueue/VB/enqueue an/DT/an item/NN/item to/TO/to the/DT/the back/NN/back of/IN/of the/DT/the deque/NN/deque /./. with/IN/with respect/NN/respect to/TO/to algorithmic/JJ/algorithmic run/NN/run time/NN/time complexities/NNS/complexities a/DT/a deque/NN/deque is/VBZ/is the/DT/the same/JJ/same as/IN/as a/DT/a normal/JJ/normal queue/NNP/queue. that/IN/that is/VBZ/is enqueueing/VBG/enqueueing an/DT/an item/NN/item to/TO/to the/DT/the back/NN/back of/IN/of a/DT/a the/DT/the queue/NN/queue is/VBZ/is o/RB/o /:/( 1/CD/1 /CD/) /,/, additionally/RB/additionally enqueuing/VBG/enqueuing an/DT/an item/NN/item to/TO/to the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue is/VBZ/is also/RB/also an/DT/an o/NN/o /:/( 1/CD/1 /CD/) operation/NN/operation /./. a/DT/a deque/NN/deque is/VBZ/is a/DT/a wrapper/NN/wrapper data/NN/data structure/NN/structure that/WDT/that uses/VBZ/uses either/DT/either an/DT/an array/NN/array /,/, or/CC/or a/DT/a doubly/RB/doubly linked/VBN/linked list/NNP/list. using/NN/using an/DT/an array/NN/array as/IN/as the/DT/the backing/NN/backing data/NNS/data structure/NN/structure would/MD/would require/VB/require the/DT/the pro/NN/pro- grammer/NN/grammer to/TO/to be/VB/be explicit/VBN/explicit about/IN/about the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array up/RP/up front/NN/front /,/, this/DT/this would/MD/would provide/VB/provide an/DT/an obvious/JJ/obvious advantage/NN/advantage if/IN/if the/DT/the programmer/NN/programmer could/MD/could deterministically/RB/deterministically state/VB/state the/DT/the maxi/NN/maxi- mum/NN/mum number/NN/number of/IN/of items/NNS/items the/DT/the deque/NN/deque would/MD/would contain/VB/contain at/IN/at any/DT/any one/CD/one time/NNP/time. unfortunately/RB/unfortunately in/IN/in most/JJS/most cases/NNS/cases this/DT/this does/VBZ/does n't/RB/n't hold/VB/hold /,/, as/IN/as a/DT/a result/NN/result the/DT/the backing/NN/backing array/NN/array will/MD/will inherently/RB/inherently incur/VB/incur the/DT/the expense/NN/expense of/IN/of invoking/NN/invoking a/DT/a resizing/NN/resizing algorithm/NN/algorithm which/WDT/which would/MD/would most/VB/most likely/JJ/likely be/VB/be an/DT/an o/NN/o /:/( n/NN/n /:/) operation/NNP/operation. such/JJ/such an/DT/an approach/NN/approach would/MD/would also/RB/also leave/VB/leave the/DT/the library/NN/library developer/NN/developer chapter/NN/chapter 6/CD/6. queues/NNS/queues 52/CD/52 figure/NN/figure 6.2/CD/6.2 /:/: deque/JJ/deque data/NNS/data structure/NN/structure after/IN/after several/JJ/several mutations/NNS/mutations chapter/NN/chapter 6/CD/6. queues/NNS/queues 53/CD/53 to/TO/to look/VB/look at/IN/at array/NN/array minimization/NN/minimization techniques/NNS/techniques as/IN/as well/RB/well /,/, it/PRP/it could/MD/could be/VB/be that/IN/that after/IN/after several/JJ/several invocations/NNS/invocations of/IN/of the/DT/the resizing/NN/resizing algorithm/NN/algorithm and/CC/and various/JJ/various mutations/NNS/mutations on/IN/on the/DT/the deque/NN/deque later/JJ/later that/IN/that we/PRP/we have/VBP/have an/DT/an array/NN/array taking/VBG/taking up/RP/up a/DT/a considerable/JJ/considerable amount/NN/amount of/IN/of memory/NN/memory yet/RB/yet we/PRP/we are/VBP/are only/RB/only using/VBG/using a/DT/a few/JJ/few small/JJ/small percentage/NN/percentage of/IN/of that/DT/that memory/NNP/memory. an/DT/an algorithm/NN/algorithm described/VBN/described would/MD/would also/RB/also be/VB/be o/VBN/o /-NONE-/( n/NN/n /:/) yet/RB/yet its/PRP$/its invocation/NN/invocation would/MD/would be/VB/be harder/RBR/harder to/TO/to gauge/VB/gauge strategically/RB/strategically /./. to/TO/to bypass/VB/bypass all/DT/all the/DT/the aforementioned/VBN/aforementioned issues/NNS/issues a/DT/a deque/NN/deque typically/RB/typically uses/VBZ/uses a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list as/IN/as its/PRP$/its baking/NN/baking data/NNS/data structure/NNP/structure. while/IN/while a/DT/a node/NN/node that/WDT/that has/VBZ/has two/CD/two pointers/NNS/pointers consumes/NNS/consumes more/RBR/more memory/JJ/memory than/IN/than its/PRP$/its array/NN/array item/NN/item counterpart/NN/counterpart it/PRP/it makes/VBZ/makes redundant/JJ/redundant the/DT/the need/NN/need for/IN/for expensive/JJ/expensive resizing/NN/resizing algorithms/NNS/algorithms as/IN/as the/DT/the data/NNS/data structure/VBP/structure increases/NNS/increases in/IN/in size/NN/size dynamically/NNP/dynamically. with/IN/with a/DT/a language/NN/language that/WDT/that targets/VBZ/targets a/DT/a garbage/NN/garbage collected/VBN/collected virtual/JJ/virtual machine/NN/machine memory/NN/memory reclamation/NN/reclamation is/VBZ/is an/DT/an opaque/NN/opaque process/NN/process as/IN/as the/DT/the nodes/NNS/nodes that/WDT/that are/VBP/are no/RB/no longer/RBR/longer ref/JJ/ref- erenced/VBN/erenced become/NN/become unreachable/JJ/unreachable and/CC/and are/VBP/are thus/RB/thus marked/VBN/marked for/IN/for collection/NN/collection upon/IN/upon the/DT/the next/JJ/next invocation/NN/invocation of/IN/of the/DT/the garbage/NN/garbage collection/NN/collection algorithm/NNP/algorithm. with/IN/with c/NN/c +/:/+ +/:/+ or/CC/or any/DT/any other/JJ/other lan/NN/lan- guage/NN/guage that/WDT/that uses/VBZ/uses explicit/NN/explicit memory/NN/memory allocation/NN/allocation and/CC/and deallocation/NN/deallocation it/PRP/it will/MD/will be/VB/be up/RP/up to/TO/to the/DT/the programmer/NN/programmer to/TO/to decide/VB/decide when/WRB/when the/DT/the memory/NN/memory that/IN/that stores/NNS/stores the/DT/the object/NN/object can/MD/can be/VB/be freed/VBN/freed /./. 6.4/CD/6.4 summary/NN/summary with/IN/with normal/JJ/normal queues/NNS/queues we/PRP/we have/VBP/have seen/VBN/seen that/IN/that those/DT/those who/WP/who arrive/JJ/arrive Â/VBP/Â ¯/:/¯ rst/JJ/rst are/VBP/are dealt/VBN/dealt with/IN/with Â/CD/Â ¯/CD/¯ rst/JJ/rst ;/:/; that/DT/that is/VBZ/is they/PRP/they are/VBP/are dealt/RB/dealt with/IN/with in/IN/in a/DT/a Â/NN/Â ¯/:/¯ rst-in/JJ/rst-in- Â/NN/Â ¯/:/¯ rst-out/IN/rst-out /CD/( fifo/NN/fifo /:/) order/NNP/order. queues/NNS/queues can/MD/can be/VB/be ever/RB/ever so/RB/so useful/JJ/useful ;/:/; for/IN/for example/NN/example the/DT/the windows/NNS/windows cpu/VBP/cpu scheduler/NN/scheduler uses/NNS/uses a/DT/a di/NN/di Â/:/Â ®/:/® erent/NN/erent queue/NN/queue for/IN/for each/DT/each priority/NN/priority of/IN/of process/NN/process to/TO/to determine/VB/determine which/WDT/which should/MD/should be/VB/be the/DT/the next/JJ/next process/NN/process to/TO/to utilise/VB/utilise the/DT/the cpu/NN/cpu for/IN/for a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ ed/VBD/ed time/NN/time quantum/NNP/quantum. normal/JJ/normal queues/NNS/queues have/VBP/have constant/JJ/constant insertion/NN/insertion and/CC/and deletion/NN/deletion run/VBN/run times/NNP/times. searching/NN/searching a/DT/a queue/NN/queue is/VBZ/is fairly/RB/fairly unusual/JJ/unusual |/NN/| typically/RB/typically you/PRP/you are/VBP/are only/RB/only interested/JJ/interested in/IN/in the/DT/the item/NN/item at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NNP/queue. despite/IN/despite that/DT/that /,/, searching/VBG/searching is/VBZ/is usually/RB/usually exposed/VBN/exposed on/IN/on queues/NNS/queues and/CC/and typically/RB/typically the/DT/the run/NN/run time/NN/time is/VBZ/is linear/JJ/linear /./. in/IN/in this/DT/this chapter/NN/chapter we/PRP/we have/VBP/have also/RB/also seen/VBN/seen priority/NN/priority queues/NNS/queues where/WRB/where those/DT/those at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the queue/NN/queue have/VBP/have the/DT/the highest/JJS/highest priority/NN/priority and/CC/and those/DT/those near/IN/near the/DT/the back/NN/back have/VBP/have the/DT/the lowest/JJS/lowest /./. one/CD/one implementation/NN/implementation of/IN/of a/DT/a priority/NN/priority queue/NN/queue is/VBZ/is to/TO/to use/VB/use a/DT/a heap/NN/heap data/NN/data structure/NN/structure as/IN/as its/PRP$/its backing/NN/backing store/NN/store /,/, so/RB/so the/DT/the run/NN/run times/VBZ/times for/IN/for insertion/NN/insertion /,/, deletion/NN/deletion /,/, and/CC/and searching/VBG/searching are/VBP/are the/DT/the same/JJ/same as/IN/as those/DT/those for/IN/for a/DT/a heap/NN/heap /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x4/NNP/x4 /NNP/) /./. queues/NNS/queues are/VBP/are a/DT/a very/RB/very natural/JJ/natural data/NNS/data structure/NN/structure /,/, and/CC/and while/IN/while they/PRP/they are/VBP/are fairly/RB/fairly primitive/JJ/primitive they/PRP/they can/MD/can make/VB/make many/JJ/many problems/NNS/problems a/DT/a lot/NN/lot simpler/NNP/simpler. for/IN/for example/NN/example the/DT/the breadth/NN/breadth Â/:/Â ¯/:/¯ rst/JJ/rst search/NN/search de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x3.7.4/-NONE-/x3.7.4 makes/VBZ/makes extensive/JJ/extensive use/NN/use of/IN/of queues/NNS/queues /./. chapter/NN/chapter 7/CD/7 avl/NN/avl tree/NN/tree in/IN/in the/DT/the early/JJ/early 60/CD/60 's/POS/'s g.m/NNP/g.m. adelson-velsky/NNP/adelson-velsky and/CC/and e.m/NNP/e.m. landis/NN/landis invented/VBD/invented the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst self/NN/self- balancing/VBG/balancing binary/JJ/binary search/NN/search tree/NN/tree data/NNS/data structure/NN/structure /,/, calling/VBG/calling it/PRP/it avl/NN/avl tree/NN/tree /./. an/DT/an avl/NN/avl tree/NN/tree is/VBZ/is a/DT/a binary/JJ/binary search/NN/search tree/NN/tree /:/( bst/NN/bst /,/, de/IN/de Â/NNP/Â ¯/NNP/¯ ned/VBD/ned in/IN/in x3/NNP/x3 /NNP/) with/IN/with a/DT/a self-balancing/JJ/self-balancing condition/NN/condition stating/VBG/stating that/IN/that the/DT/the di/NN/di Â/:/Â ®/:/® erence/NN/erence between/IN/between the/DT/the height/NN/height of/IN/of the/DT/the left/NN/left and/CC/and right/RB/right subtrees/VBZ/subtrees can/MD/can not/RB/not be/VB/be no/RB/no more/JJR/more than/IN/than one/CD/one /,/, see/NN/see figure/NN/figure 7.1/CD/7.1. this/DT/this condition/NN/condition /,/, restored/VBD/restored after/IN/after each/DT/each tree/NN/tree modi/NN/modi Â/:/Â ¯/:/¯ cation/NN/cation /,/, forces/NNS/forces the/DT/the general/JJ/general shape/NN/shape of/IN/of an/DT/an avl/NN/avl tree/NNP/tree. before/IN/before continuing/VBG/continuing /,/, let/VB/let us/PRP/us focus/VB/focus on/IN/on why/WRB/why balance/NN/balance is/VBZ/is so/RB/so important/NNP/important. consider/NN/consider a/DT/a binary/JJ/binary search/NN/search tree/NN/tree obtained/VBD/obtained by/IN/by starting/NN/starting with/IN/with an/DT/an empty/JJ/empty tree/NN/tree and/CC/and inserting/VBG/inserting some/DT/some values/NNS/values in/IN/in the/DT/the following/JJ/following order/NN/order 1,2,3,4,5/CD/1,2,3,4,5 /./. the/DT/the bst/NN/bst in/IN/in figure/NN/figure 7.2/CD/7.2 represents/NNS/represents the/DT/the worst/JJS/worst case/NN/case scenario/NN/scenario in/IN/in which/WDT/which the/DT/the run/NNP/run- ning/NN/ning time/NN/time of/IN/of all/DT/all common/JJ/common operations/NNS/operations such/JJ/such as/IN/as search/NN/search /,/, insertion/NN/insertion and/CC/and deletion/NN/deletion are/VBP/are o/RB/o /:/( n/NN/n /:/) /./. by/IN/by applying/NN/applying a/DT/a balance/NN/balance condition/NN/condition we/PRP/we ensure/VBP/ensure that/IN/that the/DT/the worst/JJS/worst case/NN/case running/VBG/running time/NN/time of/IN/of each/DT/each common/JJ/common operation/NN/operation is/VBZ/is o/RB/o /:/( log/NN/log n/NN/n /:/) /./. the/DT/the height/NN/height of/IN/of an/DT/an avl/NN/avl tree/NN/tree with/IN/with n/NN/n nodes/NNS/nodes is/VBZ/is o/RB/o /:/( log/NN/log n/NN/n /:/) regardless/NN/regardless of/IN/of the/DT/the order/NN/order in/IN/in which/WDT/which values/NNS/values are/VBP/are inserted/VBN/inserted /./. the/DT/the avl/NN/avl balance/NN/balance condition/NN/condition /,/, known/VBN/known also/RB/also as/IN/as the/DT/the node/NN/node balance/NN/balance factor/NN/factor represents/VBZ/represents an/DT/an additional/JJ/additional piece/NN/piece of/IN/of information/NN/information stored/VBD/stored for/IN/for each/DT/each node/NNP/node. this/DT/this is/VBZ/is combined/VBN/combined with/IN/with a/DT/a technique/NN/technique that/WDT/that e/NN/e Â/:/Â ±/:/± ciently/RB/ciently restores/VBZ/restores the/DT/the balance/NN/balance condition/NN/condition for/IN/for the/DT/the tree/NNP/tree. in/IN/in an/DT/an avl/NN/avl tree/NN/tree the/DT/the inventors/NNS/inventors make/VBP/make use/NN/use of/IN/of a/DT/a well-known/JJ/well-known technique/NN/technique called/VBN/called tree/NN/tree rotation/NN/rotation /./. h/NN/h h/NN/h +/:/+ 1/CD/1 figure/NN/figure 7.1/CD/7.1 /:/: the/DT/the left/NN/left and/CC/and right/RB/right subtrees/VBZ/subtrees of/IN/of an/DT/an avl/NN/avl tree/NN/tree di/NN/di Â/:/Â ®/:/® er/NN/er in/IN/in height/NN/height by/IN/by at/IN/at most/JJS/most 1/CD/1 54/CD/54 chapter/NN/chapter 7/CD/7. avl/NN/avl tree/NN/tree 55/CD/55 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 figure/NN/figure 7.2/CD/7.2 /:/: unbalanced/VBN/unbalanced binary/JJ/binary search/NN/search tree/NN/tree 2/CD/2 4/CD/4 5/CD/5 1/CD/1 3/CD/3 4/CD/4 5/CD/5 3/CD/3 2/CD/2 1/CD/1 a/DT/a /NN/) b/NN/b /:/) figure/NN/figure 7.3/CD/7.3 /:/: avl/NN/avl trees/NNS/trees /,/, insertion/NN/insertion order/NN/order /:/: -a/JJ/-a /NN/) 1,2,3,4,5/CD/1,2,3,4,5 -b/NN/-b /:/) 1,5,4,3,2/CD/1,5,4,3,2 chapter/NN/chapter 7/CD/7. avl/NN/avl tree/NN/tree 56/CD/56 7.1/CD/7.1 tree/NN/tree rotations/NNS/rotations a/DT/a tree/NN/tree rotation/NN/rotation is/VBZ/is a/DT/a constant/JJ/constant time/NN/time operation/NN/operation on/IN/on a/DT/a binary/JJ/binary search/NN/search tree/NN/tree that/WDT/that changes/NNS/changes the/DT/the shape/NN/shape of/IN/of a/DT/a tree/NN/tree while/IN/while preserving/VBG/preserving standard/JJ/standard bst/NN/bst properties/NNP/properties. there/EX/there are/VBP/are left/VBN/left and/CC/and right/RB/right rotations/NNS/rotations both/DT/both of/IN/of them/PRP/them decrease/VB/decrease the/DT/the height/NN/height of/IN/of a/DT/a bst/NN/bst by/IN/by moving/NN/moving smaller/JJR/smaller subtrees/NNS/subtrees down/IN/down and/CC/and larger/JJR/larger subtrees/NNS/subtrees up/IN/up /./. 14/CD/14 24/CD/24 11/CD/11 8/CD/8 2/CD/2 8/CD/8 14/CD/14 24/CD/24 2/CD/2 11/CD/11 right/NN/right rotation/NN/rotation left/VBD/left rotation/NN/rotation figure/NN/figure 7.4/CD/7.4 /:/: tree/JJ/tree left/NN/left and/CC/and right/RB/right rotations/NNS/rotations chapter/NN/chapter 7/CD/7. avl/NN/avl tree/NN/tree 57/CD/57 1/CD/1 /CD/) algorithm/NN/algorithm leftrotation/NN/leftrotation /:/( node/NN/node /:/) 2/CD/2 /CD/) pre/NN/pre /:/: node.right/JJ/node.right !/./! =/:/= ;/:/; 3/LS/3 /:/) post/NN/post /:/: node.right/JJ/node.right is/VBZ/is the/DT/the new/JJ/new root/NN/root of/IN/of the/DT/the subtree/JJ/subtree /,/, 4/CD/4 /:/) node/NN/node has/VBZ/has become/VBN/become node.right/JJ/node.right 's/POS/'s left/NN/left child/NN/child and/CC/and /,/, 5/CD/5 /:/) bst/JJ/bst properties/NNS/properties are/VBP/are preserved/VBN/preserved 6/CD/6 /CD/) rightnode/NN/rightnode Ã/:/Ã /:/ node.right/JJ/node.right 7/CD/7 /CD/) node.right/JJ/node.right Ã/NN/Ã /:/ rightnode.left/JJ/rightnode.left 8/CD/8 /CD/) rightnode.left/JJ/rightnode.left Ã/NN/Ã /:/ node/NN/node 9/CD/9 /CD/) end/NN/end leftrotation/NN/leftrotation 1/CD/1 /CD/) algorithm/NN/algorithm rightrotation/NN/rightrotation /:/( node/NN/node /:/) 2/CD/2 /CD/) pre/NN/pre /:/: node.left/JJ/node.left !/./! =/:/= ;/:/; 3/LS/3 /:/) post/NN/post /:/: node.left/JJ/node.left is/VBZ/is the/DT/the new/JJ/new root/NN/root of/IN/of the/DT/the subtree/JJ/subtree /,/, 4/CD/4 /:/) node/NN/node has/VBZ/has become/VBN/become node.left/JJ/node.left 's/POS/'s right/NN/right child/NN/child and/CC/and /,/, 5/CD/5 /:/) bst/JJ/bst properties/NNS/properties are/VBP/are preserved/VBN/preserved 6/CD/6 /CD/) leftnode/NN/leftnode Ã/:/Ã /:/ node.left/JJ/node.left 7/CD/7 /CD/) node.left/JJ/node.left Ã/NN/Ã /:/ leftnode.right/JJ/leftnode.right 8/CD/8 /CD/) leftnode.right/JJ/leftnode.right Ã/NN/Ã /:/ node/NN/node 9/CD/9 /CD/) end/NN/end rightrotation/NN/rightrotation the/DT/the right/NN/right and/CC/and left/VBN/left rotation/NN/rotation algorithms/NNS/algorithms are/VBP/are symmetric/NNP/symmetric. only/RB/only pointers/VBZ/pointers are/VBP/are changed/VBN/changed by/IN/by a/DT/a rotation/NN/rotation resulting/VBG/resulting in/IN/in an/DT/an o/NN/o /:/( 1/CD/1 /CD/) runtime/NN/runtime complexity/NN/complexity ;/:/; the/DT/the other/JJ/other Â/NN/Â ¯/:/¯ elds/NNS/elds present/VBP/present in/IN/in the/DT/the nodes/NNS/nodes are/VBP/are not/RB/not changed/VBN/changed /./. 7.2/CD/7.2 tree/NN/tree rebalancing/VBG/rebalancing the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we present/VBP/present in/IN/in this/DT/this section/NN/section veri/NN/veri Â/:/Â ¯/:/¯ es/NNS/es that/WDT/that the/DT/the left/NN/left and/CC/and right/RB/right subtrees/VBZ/subtrees di/NN/di Â/:/Â ®/:/® er/NN/er at/IN/at most/JJS/most in/IN/in height/NN/height by/IN/by 1/CD/1. if/IN/if this/DT/this property/NN/property is/VBZ/is not/RB/not present/JJ/present then/RB/then we/PRP/we perform/VBP/perform the/DT/the correct/NN/correct rotation/NN/rotation /./. notice/NN/notice that/IN/that we/PRP/we use/VBP/use two/CD/two new/JJ/new algorithms/NNS/algorithms that/WDT/that represent/VBP/represent double/JJ/double rotations/NNS/rotations /./. these/DT/these algorithms/NNS/algorithms are/VBP/are named/VBN/named leftandrightrotation/NN/leftandrightrotation /,/, and/CC/and rightandleftrotation/NN/rightandleftrotation /./. the/DT/the algorithms/NNS/algorithms are/VBP/are self/PRP/self documenting/VBG/documenting in/IN/in their/PRP$/their names/NNS/names /,/, e.g/NNP/e.g. leftandrightrotation/NN/leftandrightrotation Â/:/Â ¯/:/¯ rst/JJ/rst performs/NNS/performs a/DT/a left/NN/left rotation/NN/rotation and/CC/and then/RB/then subsequently/RB/subsequently a/DT/a right/NN/right rotation/NN/rotation /./. chapter/NN/chapter 7/CD/7. avl/NN/avl tree/NN/tree 58/CD/58 1/CD/1 /CD/) algorithm/NN/algorithm checkbalance/NN/checkbalance /:/( current/JJ/current /NN/) 2/CD/2 /CD/) pre/NN/pre /:/: current/JJ/current is/VBZ/is the/DT/the node/NN/node to/TO/to start/VB/start from/IN/from balancing/VBG/balancing 3/CD/3 /CD/) post/NN/post /:/: current/JJ/current height/NN/height has/VBZ/has been/VBN/been updated/VBN/updated while/IN/while tree/NN/tree balance/NN/balance is/VBZ/is if/IN/if needed/VBN/needed 4/CD/4 /CD/) restored/VBN/restored through/IN/through rotations/NNS/rotations 5/CD/5 /CD/) if/IN/if current.left/JJ/current.left =/NN/= ;/:/; and/CC/and current.right/JJ/current.right =/NN/= ;/:/; 6/CD/6 /CD/) current.height/JJ/current.height =/NN/= -1/-NONE-/-1 ;/:/; 7/CD/7 /CD/) else/NN/else 8/CD/8 /CD/) current.height/JJ/current.height =/NN/= max/NN/max /:/( height/NN/height /:/( current.left/JJ/current.left /NN/) ,height/JJ/,height /NN/( current/JJ/current /:/: right/JJ/right /NN/) /:/) +/:/+ 1/CD/1 9/CD/9 /CD/) end/NN/end if/IN/if 10/CD/10 /CD/) if/IN/if height/JJ/height /NN/( current.left/JJ/current.left /NN/) /:/- height/NN/height /:/( current.right/JJ/current.right /NN/) >/:/> 1/CD/1 11/CD/11 /CD/) if/IN/if height/JJ/height /NN/( current.left.left/JJ/current.left.left /NN/) /:/- height/NN/height /:/( current.left.right/JJ/current.left.right /NN/) >/:/> 0/-NONE-/0 12/CD/12 /:/) rightrotation/NN/rightrotation /:/( current/JJ/current /NN/) 13/CD/13 /CD/) else/NN/else 14/CD/14 /CD/) leftandrightrotation/NN/leftandrightrotation /:/( current/JJ/current /NN/) 15/CD/15 /CD/) end/NN/end if/IN/if 16/CD/16 /CD/) else/NN/else if/IN/if height/JJ/height /NN/( current.left/JJ/current.left /NN/) /:/- height/NN/height /:/( current.right/JJ/current.right /NN/) </:/< Â/:/Â ¡/:/¡ 1/CD/1 17/CD/17 /CD/) if/IN/if height/JJ/height /NN/( current.right.left/JJ/current.right.left /NN/) /:/- height/NN/height /:/( current.right.right/JJ/current.right.right /NN/) </:/< 0/-NONE-/0 18/CD/18 /:/) leftrotation/NN/leftrotation /:/( current/JJ/current /NN/) 19/CD/19 /CD/) else/NN/else 20/CD/20 /CD/) rightandleftrotation/NN/rightandleftrotation /:/( current/JJ/current /NN/) 21/CD/21 /CD/) end/NN/end if/IN/if 22/CD/22 /CD/) end/NN/end if/IN/if 23/CD/23 /CD/) end/NN/end checkbalance/NN/checkbalance 7.3/CD/7.3 insertion/NN/insertion avl/NN/avl insertion/NN/insertion operates/VBZ/operates Â/:/Â ¯/:/¯ rst/JJ/rst by/IN/by inserting/NN/inserting the/DT/the given/VBN/given value/NN/value the/DT/the same/JJ/same way/NN/way as/IN/as bst/NN/bst insertion/NN/insertion and/CC/and then/RB/then by/IN/by applying/NN/applying rebalancing/VBG/rebalancing techniques/NNS/techniques if/IN/if necessary/NNP/necessary. the/DT/the latter/NN/latter is/VBZ/is only/RB/only performed/VBN/performed if/IN/if the/DT/the avl/NN/avl property/NN/property no/DT/no longer/NN/longer holds/VBZ/holds /,/, that/IN/that is/VBZ/is the/DT/the left/VBN/left and/CC/and right/RB/right subtrees/VBZ/subtrees height/VBN/height di/NN/di Â/:/Â ®/:/® er/NN/er by/IN/by more/RBR/more than/IN/than 1/CD/1. each/DT/each time/NN/time we/PRP/we insert/VBP/insert a/DT/a node/NN/node into/IN/into an/DT/an avl/NN/avl tree/NN/tree /:/: 1/CD/1. we/PRP/we go/VBP/go down/RB/down the/DT/the tree/NN/tree to/TO/to Â/VB/Â ¯/:/¯ nd/NN/nd the/DT/the correct/NN/correct point/NN/point at/IN/at which/WDT/which to/TO/to insert/VB/insert the/DT/the node/NN/node /,/, in/IN/in the/DT/the same/JJ/same manner/NN/manner as/IN/as for/IN/for bst/NN/bst insertion/NN/insertion ;/:/; then/RB/then 2/CD/2. we/PRP/we travel/NN/travel up/RP/up the/DT/the tree/NN/tree from/IN/from the/DT/the inserted/VBN/inserted node/NN/node and/CC/and check/NN/check that/IN/that the/DT/the node/NN/node balancing/VBG/balancing property/NN/property has/VBZ/has not/RB/not been/VBN/been violated/VBN/violated ;/:/; if/IN/if the/DT/the property/NN/property has/VBZ/has n't/RB/n't been/VBN/been violated/VBN/violated then/RB/then we/PRP/we need/VBP/need not/RB/not rebalance/NN/rebalance the/DT/the tree/NN/tree /,/, the/DT/the opposite/JJ/opposite is/VBZ/is true/JJ/true if/IN/if the/DT/the balancing/NN/balancing property/NN/property has/VBZ/has been/VBN/been violated/VBN/violated /./. chapter/NN/chapter 7/CD/7. avl/NN/avl tree/NN/tree 59/CD/59 1/CD/1 /CD/) algorithm/NN/algorithm insert/NN/insert /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value has/VBZ/has passed/VBN/passed custom/NN/custom type/NN/type checks/NNS/checks for/IN/for type/NN/type t/NN/t 3/CD/3 /CD/) post/NN/post /:/: value/NN/value has/VBZ/has been/VBN/been placed/VBN/placed in/IN/in the/DT/the correct/NN/correct location/NN/location in/IN/in the/DT/the tree/NN/tree 4/CD/4 /CD/) if/IN/if root/NN/root =/:/= ;/:/; 5/CD/5 /CD/) root/NN/root Ã/:/Ã /:/ node/NN/node /:/( value/NN/value /:/) 6/CD/6 /CD/) else/NN/else 7/CD/7 /CD/) insertnode/NN/insertnode /:/( root/NN/root /,/, value/NN/value /:/) 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) end/NN/end insert/NN/insert 1/CD/1 /CD/) algorithm/NN/algorithm insertnode/NN/insertnode /:/( current/JJ/current /,/, value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: current/JJ/current is/VBZ/is the/DT/the node/NN/node to/TO/to start/VB/start from/IN/from 3/CD/3 /CD/) post/NN/post /:/: value/NN/value has/VBZ/has been/VBN/been placed/VBN/placed in/IN/in the/DT/the correct/NN/correct location/NN/location in/IN/in the/DT/the tree/NN/tree while/IN/while 4/CD/4 /CD/) preserving/VBG/preserving tree/NN/tree balance/NN/balance 5/CD/5 /CD/) if/IN/if value/NN/value </:/< current.value/JJ/current.value 6/CD/6 /CD/) if/IN/if current.left/JJ/current.left =/NN/= ;/:/; 7/CD/7 /CD/) current.left/JJ/current.left Ã/NN/Ã /:/ node/NN/node /:/( value/NN/value /:/) 8/CD/8 /CD/) else/NN/else 9/CD/9 /CD/) insertnode/NN/insertnode /:/( current.left/JJ/current.left /,/, value/NN/value /:/) 10/CD/10 /CD/) end/NN/end if/IN/if 11/CD/11 /CD/) else/NN/else 12/CD/12 /CD/) if/IN/if current.right/JJ/current.right =/NN/= ;/:/; 13/CD/13 /CD/) current.right/JJ/current.right Ã/NN/Ã /:/ node/NN/node /:/( value/NN/value /:/) 14/CD/14 /CD/) else/NN/else 15/CD/15 /CD/) insertnode/NN/insertnode /:/( current.right/JJ/current.right /,/, value/NN/value /:/) 16/CD/16 /CD/) end/NN/end if/IN/if 17/CD/17 /CD/) end/NN/end if/IN/if 18/CD/18 /CD/) checkbalance/NN/checkbalance /:/( current/JJ/current /NN/) 19/CD/19 /CD/) end/NN/end insertnode/NN/insertnode 7.4/CD/7.4 deletion/NN/deletion our/PRP$/our balancing/NN/balancing algorithm/NN/algorithm is/VBZ/is like/IN/like the/DT/the one/CD/one presented/VBN/presented for/IN/for our/PRP$/our bst/NN/bst /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x3.3/-NONE-/x3.3 /:/) /./. the/DT/the major/JJ/major di/NN/di Â/:/Â ®/:/® erence/NN/erence is/VBZ/is that/IN/that we/PRP/we have/VBP/have to/TO/to ensure/VB/ensure that/IN/that the/DT/the tree/NN/tree still/RB/still adheres/VBZ/adheres to/TO/to the/DT/the avl/NN/avl balance/NN/balance property/NN/property after/IN/after the/DT/the removal/NN/removal of/IN/of the/DT/the node/NNP/node. if/IN/if the/DT/the tree/NN/tree does/VBZ/does n't/RB/n't need/VB/need to/TO/to be/VB/be rebalanced/VBN/rebalanced and/CC/and the/DT/the value/NN/value we/PRP/we are/VBP/are removing/VBG/removing is/VBZ/is contained/VBN/contained within/IN/within the/DT/the tree/NN/tree then/RB/then no/DT/no further/JJ/further step/NN/step are/VBP/are required/NNP/required. however/RB/however /,/, when/WRB/when the/DT/the value/NN/value is/VBZ/is in/IN/in the/DT/the tree/NN/tree and/CC/and its/PRP$/its removal/NN/removal upsets/NNS/upsets the/DT/the avl/NN/avl balance/NN/balance property/NN/property then/RB/then we/PRP/we must/MD/must perform/VB/perform the/DT/the correct/NN/correct rotation/NN/rotation /:/( s/NNS/s /VBP/) /./. chapter/NN/chapter 7/CD/7. avl/NN/avl tree/NN/tree 60/CD/60 1/CD/1 /CD/) algorithm/NN/algorithm remove/NN/remove /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the node/NN/node to/TO/to remove/VB/remove /,/, root/NN/root is/VBZ/is the/DT/the root/NN/root node/NN/node 3/CD/3 /CD/) of/IN/of the/DT/the avl/NN/avl 4/CD/4 /CD/) post/NN/post /:/: node/NN/node with/IN/with value/NN/value is/VBZ/is removed/VBN/removed and/CC/and tree/NN/tree rebalanced/VBD/rebalanced if/IN/if found/VBN/found in/IN/in which/WDT/which 5/CD/5 /CD/) case/NN/case yields/NNS/yields true/JJ/true /,/, otherwise/RB/otherwise false/VB/false 6/CD/6 /CD/) nodetoremove/NN/nodetoremove Ã/:/Ã /:/ root/NN/root 7/CD/7 /CD/) parent/NN/parent Ã/:/Ã /:/ ;/:/; 8/CD/8 /CD/) stackpath/NN/stackpath Ã/:/Ã /:/ root/NN/root 9/CD/9 /CD/) while/IN/while nodetoremove/JJ/nodetoremove 6/CD/6 =/CD/= ;/:/; and/CC/and nodetoremove/VB/nodetoremove /:/: v/NN/v alue/NN/alue =/:/= v/NN/v alue/NN/alue 10/CD/10 /CD/) parent/NN/parent =/:/= nodetoremove/NN/nodetoremove 11/CD/11 /CD/) if/IN/if value/NN/value </:/< nodetoremove.value/JJ/nodetoremove.value 12/CD/12 /CD/) nodetoremove/NN/nodetoremove Ã/:/Ã /:/ nodetoremove.left/JJ/nodetoremove.left 13/CD/13 /CD/) else/NN/else 14/CD/14 /CD/) nodetoremove/NN/nodetoremove Ã/:/Ã /:/ nodetoremove.right/JJ/nodetoremove.right 15/CD/15 /CD/) end/NN/end if/IN/if 16/CD/16 /CD/) path.push/JJ/path.push /NN/( nodetoremove/NN/nodetoremove /:/) 17/CD/17 /CD/) end/NN/end while/IN/while 18/CD/18 /CD/) if/IN/if nodetoremove/JJ/nodetoremove =/NN/= ;/:/; 19/CD/19 /CD/) return/NN/return false/NN/false ///:/// value/NN/value not/RB/not in/IN/in avl/NN/avl 20/CD/20 /CD/) end/NN/end if/IN/if 21/CD/21 /CD/) parent/NN/parent Ã/:/Ã /:/ findparent/NN/findparent /:/( value/NN/value /:/) 22/CD/22 /CD/) if/IN/if count/NN/count =/:/= 1/CD/1 ///CD/// count/NN/count keeps/NNS/keeps track/VBP/track of/IN/of the/DT/the #/#/# of/IN/of nodes/NNS/nodes in/IN/in the/DT/the avl/NN/avl 23/CD/23 /CD/) root/NN/root Ã/:/Ã /:/ ;/:/; ///:/// we/PRP/we are/VBP/are removing/VBG/removing the/DT/the only/JJ/only node/NN/node in/IN/in the/DT/the avl/NN/avl 24/CD/24 /CD/) else/NN/else if/IN/if nodetoremove.left/JJ/nodetoremove.left =/NN/= ;/:/; and/CC/and nodetoremove.right/JJ/nodetoremove.right =/NN/= null/NN/null 25/CD/25 /CD/) ///CD/// case/NN/case #/#/# 1/CD/1 26/CD/26 /CD/) if/IN/if nodetoremove.value/JJ/nodetoremove.value </NN/< parent.value/JJ/parent.value 27/CD/27 /CD/) parent.left/JJ/parent.left Ã/NN/Ã /:/ ;/:/; 28/CD/28 /CD/) else/NN/else 29/CD/29 /CD/) parent.right/JJ/parent.right Ã/NN/Ã /:/ ;/:/; 30/CD/30 /CD/) end/NN/end if/IN/if 31/CD/31 /CD/) else/NN/else if/IN/if nodetoremove.left/JJ/nodetoremove.left =/NN/= ;/:/; and/CC/and nodetoremove.right/JJ/nodetoremove.right 6/CD/6 =/CD/= ;/:/; 32/CD/32 /CD/) ///CD/// case/NN/case #/#/# 2/CD/2 33/CD/33 /CD/) if/IN/if nodetoremove.value/JJ/nodetoremove.value </NN/< parent.value/JJ/parent.value 34/CD/34 /CD/) parent.left/JJ/parent.left Ã/NN/Ã /:/ nodetoremove.right/JJ/nodetoremove.right 35/CD/35 /CD/) else/NN/else 36/CD/36 /CD/) parent.right/JJ/parent.right Ã/NN/Ã /:/ nodetoremove.right/JJ/nodetoremove.right 37/CD/37 /CD/) end/NN/end if/IN/if 38/CD/38 /CD/) else/NN/else if/IN/if nodetoremove.left/JJ/nodetoremove.left 6/CD/6 =/CD/= ;/:/; and/CC/and nodetoremove.right/JJ/nodetoremove.right =/NN/= ;/:/; 39/CD/39 /CD/) ///CD/// case/NN/case #/#/# 3/CD/3 40/CD/40 /CD/) if/IN/if nodetoremove.value/JJ/nodetoremove.value </NN/< parent.value/JJ/parent.value 41/CD/41 /CD/) parent.left/JJ/parent.left Ã/NN/Ã /:/ nodetoremove.left/JJ/nodetoremove.left 42/CD/42 /CD/) else/NN/else 43/CD/43 /CD/) parent.right/JJ/parent.right Ã/NN/Ã /:/ nodetoremove.left/JJ/nodetoremove.left 44/CD/44 /CD/) end/NN/end if/IN/if 45/CD/45 /CD/) else/NN/else 46/CD/46 /CD/) ///CD/// case/NN/case #/#/# 4/CD/4 47/CD/47 /CD/) largestv/NN/largestv alue/NN/alue Ã/:/Ã /:/ nodetoremove.left/JJ/nodetoremove.left 48/CD/48 /CD/) while/IN/while largestv/NN/largestv alue.right/NN/alue.right 6/CD/6 =/CD/= ;/:/; 49/CD/49 /CD/) ///CD/// Â/CD/Â ¯/CD/¯ nd/NN/nd the/DT/the largest/JJS/largest value/NN/value in/IN/in the/DT/the left/NN/left subtree/NN/subtree of/IN/of nodetoremove/NN/nodetoremove 50/CD/50 /CD/) largestv/NN/largestv alue/NN/alue Ã/:/Ã /:/ largestv/NN/largestv alue.right/JJ/alue.right chapter/NN/chapter 7/CD/7. avl/NN/avl tree/NN/tree 61/CD/61 51/CD/51 /CD/) end/NN/end while/IN/while 52/CD/52 /CD/) ///CD/// set/NN/set the/DT/the parents/NNS/parents '/POS/' right/NN/right pointer/NN/pointer of/IN/of largestv/NN/largestv alue/NN/alue to/TO/to ;/:/; 53/CD/53 /CD/) findparent/NN/findparent /:/( largestv/NN/largestv alue.value/JJ/alue.value /NN/) .right/JJ/.right Ã/NN/Ã /:/ ;/:/; 54/CD/54 /CD/) nodetoremove.value/JJ/nodetoremove.value Ã/NN/Ã /:/ largestv/NN/largestv alue.value/JJ/alue.value 55/CD/55 /CD/) end/NN/end if/IN/if 56/CD/56 /CD/) while/IN/while path/NN/path /:/: count/NN/count >/:/> 0/-NONE-/0 57/CD/57 /:/) checkbalance/NN/checkbalance /:/( path.pop/JJ/path.pop /NN/( /:/) /:/) ///:/// we/PRP/we trackback/VBP/trackback to/TO/to the/DT/the root/NN/root node/NN/node check/NN/check balance/NN/balance 58/CD/58 /CD/) end/NN/end while/IN/while 59/CD/59 /CD/) count/NN/count Ã/:/Ã /:/ count/NN/count Â/:/Â ¡/:/¡ 1/CD/1 60/CD/60 /CD/) return/NN/return true/JJ/true 61/CD/61 /CD/) end/NN/end remove/NN/remove 7.5/CD/7.5 summary/NN/summary the/DT/the avl/NN/avl tree/NN/tree is/VBZ/is a/DT/a sophisticated/JJ/sophisticated self/NN/self balancing/VBG/balancing tree/NNP/tree. it/PRP/it can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as the/DT/the smarter/NN/smarter /,/, younger/NN/younger brother/NN/brother of/IN/of the/DT/the binary/JJ/binary search/NN/search tree/NNP/tree. unlike/IN/unlike its/PRP$/its older/NN/older brother/NN/brother the/DT/the avl/NN/avl tree/NN/tree avoids/NNS/avoids worst/VBP/worst case/NN/case linear/NN/linear complexity/NN/complexity runtimes/VBZ/runtimes for/IN/for its/PRP$/its operations/NNS/operations /./. the/DT/the avl/NN/avl tree/NN/tree guarantees/NNS/guarantees via/IN/via the/DT/the enforcement/NN/enforcement of/IN/of balancing/VBG/balancing algorithms/NNS/algorithms that/WDT/that the/DT/the left/NN/left and/CC/and right/RB/right subtrees/VBZ/subtrees di/NN/di Â/:/Â ®/:/® er/NN/er in/IN/in height/NN/height by/IN/by at/IN/at most/JJS/most 1/CD/1 which/WDT/which yields/NNS/yields at/IN/at most/JJS/most a/DT/a logarithmic/JJ/logarithmic runtime/NN/runtime complexity/NN/complexity /./. part/NN/part ii/NN/ii algorithms/NNS/algorithms 62/CD/62 chapter/NN/chapter 8/CD/8 sorting/VBG/sorting all/DT/all the/DT/the sorting/NN/sorting algorithms/NNS/algorithms in/IN/in this/DT/this chapter/NN/chapter use/NN/use data/NNS/data structures/NNS/structures of/IN/of a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c type/NN/type to/TO/to demonstrate/VB/demonstrate sorting/NN/sorting /,/, e.g/NNP/e.g. a/DT/a 32/CD/32 bit/NN/bit integer/NN/integer is/VBZ/is often/RB/often used/VBN/used as/IN/as its/PRP$/its associated/VBN/associated operations/NNS/operations /:/( e.g/NNP/e.g. </:/< /,/, >/:/> /,/, etc/NN/etc /:/) are/VBP/are clear/JJ/clear in/IN/in their/PRP$/their behaviour/NN/behaviour /./. the/DT/the algorithms/NNS/algorithms discussed/VBD/discussed can/MD/can easily/RB/easily be/VB/be translated/VBN/translated into/IN/into generic/JJ/generic sorting/NN/sorting algo/NN/algo- rithms/NNS/rithms within/IN/within your/PRP$/your respective/JJ/respective language/NN/language of/IN/of choice/NN/choice /./. 8.1/CD/8.1 bubble/JJ/bubble sort/NN/sort one/CD/one of/IN/of the/DT/the most/RBS/most simple/JJ/simple forms/NNS/forms of/IN/of sorting/VBG/sorting is/VBZ/is that/IN/that of/IN/of comparing/VBG/comparing each/DT/each item/NN/item with/IN/with every/DT/every other/JJ/other item/NN/item in/IN/in some/DT/some list/NN/list /,/, however/RB/however as/IN/as the/DT/the description/NN/description may/MD/may imply/RB/imply this/DT/this form/NN/form of/IN/of sorting/VBG/sorting is/VBZ/is not/RB/not particularly/RB/particularly e/VB/e Â/:/Â ®/:/® ecient/NN/ecient o/NN/o /:/( n2/NNP/n2 /:/) /./. in/IN/in it/PRP/it 's/VBZ/'s most/JJS/most simple/JJ/simple form/NN/form bubble/JJ/bubble sort/NN/sort can/MD/can be/VB/be implemented/VBN/implemented as/IN/as two/CD/two loops/NNS/loops /./. 1/CD/1 /CD/) algorithm/NN/algorithm bubblesort/NN/bubblesort /:/( list/NN/list /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: list/NN/list has/VBZ/has been/VBN/been sorted/VBN/sorted into/IN/into values/NNS/values of/IN/of ascending/VBG/ascending order/NN/order 4/CD/4 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ 0/-NONE-/0 to/TO/to list/VB/list /:/: count/NN/count Â/:/Â ¡/:/¡ 1/CD/1 5/CD/5 /CD/) for/IN/for j/NN/j Ã/:/Ã /:/ 0/-NONE-/0 to/TO/to list/VB/list /:/: count/NN/count Â/:/Â ¡/:/¡ 1/CD/1 6/CD/6 /CD/) if/IN/if list/NN/list /:/[ i/PRP/i /VBP/] </:/< list/NN/list /:/[ j/NN/j /:/] 7/CD/7 /CD/) swap/NN/swap /:/( list/NN/list /:/[ i/PRP/i /VBP/] ;/:/; list/NN/list /:/[ j/NN/j /:/] /:/) 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) end/NN/end for/IN/for 10/CD/10 /CD/) end/NN/end for/IN/for 11/CD/11 /CD/) return/NN/return list/NN/list 12/CD/12 /CD/) end/NN/end bubblesort/NN/bubblesort 8.2/CD/8.2 merge/NN/merge sort/NN/sort merge/NN/merge sort/NN/sort is/VBZ/is an/DT/an algorithm/NN/algorithm that/IN/that has/VBZ/has a/DT/a fairly/RB/fairly e/JJ/e Â/NN/Â ±/:/± cient/NN/cient space/NN/space time/NN/time complexity/NN/complexity /:/- o/NN/o /:/( n/NN/n log/NN/log n/NN/n /:/) and/CC/and is/VBZ/is fairly/RB/fairly trivial/JJ/trivial to/TO/to implement/NNP/implement. the/DT/the algorithm/NN/algorithm is/VBZ/is based/VBN/based on/IN/on splitting/NN/splitting a/DT/a list/NN/list /,/, into/IN/into two/CD/two similar/JJ/similar sized/JJ/sized lists/NNS/lists /:/( left/VBN/left /,/, and/CC/and right/RB/right /:/) and/CC/and sorting/VBG/sorting each/DT/each list/NN/list and/CC/and then/RB/then merging/VBG/merging the/DT/the sorted/JJ/sorted lists/NNS/lists back/RB/back together/RB/together /./. note/NN/note /:/: the/DT/the function/NN/function mergeordered/VBD/mergeordered simply/RB/simply takes/VBZ/takes two/CD/two ordered/VBN/ordered lists/NNS/lists and/CC/and makes/VBZ/makes them/PRP/them one/CD/one /./. 63/CD/63 chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 64/CD/64 4/CD/4 75/CD/75 74/CD/74 2/CD/2 54/CD/54 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 75/CD/75 74/CD/74 2/CD/2 54/CD/54 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 74/CD/74 75/CD/75 2/CD/2 54/CD/54 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 74/CD/74 2/CD/2 75/CD/75 54/CD/54 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 74/CD/74 2/CD/2 54/CD/54 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 74/CD/74 2/CD/2 54/CD/54 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 74/CD/74 2/CD/2 54/CD/54 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 2/CD/2 74/CD/74 54/CD/54 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 2/CD/2 54/CD/54 74/CD/74 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 4/CD/4 2/CD/2 54/CD/54 74/CD/74 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 2/CD/2 4/CD/4 54/CD/54 74/CD/74 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 2/CD/2 4/CD/4 54/CD/54 74/CD/74 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 2/CD/2 4/CD/4 54/CD/54 74/CD/74 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 2/CD/2 4/CD/4 54/CD/54 74/CD/74 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 2/CD/2 4/CD/4 54/CD/54 74/CD/74 75/CD/75 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 figure/NN/figure 8.1/CD/8.1 /:/: bubble/JJ/bubble sort/NN/sort iterations/NNS/iterations 1/CD/1 /CD/) algorithm/NN/algorithm mergesort/NN/mergesort /:/( list/NN/list /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: list/NN/list has/VBZ/has been/VBN/been sorted/VBN/sorted into/IN/into values/NNS/values of/IN/of ascending/VBG/ascending order/NN/order 4/CD/4 /CD/) if/IN/if list.count/JJ/list.count =/NN/= 1/CD/1 ///CD/// already/RB/already sorted/VBN/sorted 5/CD/5 /CD/) return/NN/return list/NN/list 6/CD/6 /CD/) end/NN/end if/IN/if 7/CD/7 /CD/) m/NN/m Ã/:/Ã /:/ list.count/JJ/list.count =/NN/= 2/CD/2 8/CD/8 /CD/) left/NN/left Ã/:/Ã /:/ list/NN/list /:/( m/NN/m /:/) 9/CD/9 /CD/) right/NN/right Ã/:/Ã /:/ list/NN/list /:/( list.count/JJ/list.count Â/NN/Â ¡/:/¡ m/NN/m /:/) 10/CD/10 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ 0/-NONE-/0 to/TO/to left.count/JJ/left.count Â/NN/Â ¡/:/¡ 1/CD/1 11/CD/11 /CD/) left/VBN/left /-NONE-/[ i/PRP/i /VBP/] Ã/:/Ã /:/ list/NN/list /:/[ i/PRP/i /VBP/] 12/CD/12 /CD/) end/NN/end for/IN/for 13/CD/13 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ 0/-NONE-/0 to/TO/to right.count/JJ/right.count Â/NN/Â ¡/:/¡ 1/CD/1 14/CD/14 /CD/) right/JJ/right /NN/[ i/PRP/i /VBP/] Ã/:/Ã /:/ list/NN/list /:/[ i/PRP/i /VBP/] 15/CD/15 /CD/) end/NN/end for/IN/for 16/CD/16 /CD/) left/NN/left Ã/:/Ã /:/ mergesort/NN/mergesort /:/( left/VBN/left /-NONE-/) 17/CD/17 /CD/) right/NN/right Ã/:/Ã /:/ mergesort/NN/mergesort /:/( right/NN/right /:/) 18/CD/18 /CD/) return/NN/return mergeordered/VBD/mergeordered /CD/( left/VBN/left /,/, right/RB/right /:/) 19/CD/19 /CD/) end/NN/end mergesort/NN/mergesort chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 65/CD/65 54/CD/54 2/CD/2 74/CD/74 75/CD/75 4/CD/4 75/CD/75 4/CD/4 54/CD/54 2/CD/2 74/CD/74 4/CD/4 75/CD/75 74/CD/74 54/CD/54 2/CD/2 2/CD/2 54/CD/54 divide/NN/divide 54/CD/54 2/CD/2 75/CD/75 4/CD/4 74/CD/74 54/CD/54 2/CD/2 75/CD/75 74/CD/74 54/CD/54 4/CD/4 2/CD/2 impera/NN/impera /:/( merge/NN/merge /:/) figure/NN/figure 8.2/CD/8.2 /:/: merge/NN/merge sort/NN/sort divide/NN/divide et/NN/et impera/NN/impera approach/NN/approach 8.3/CD/8.3 quick/NN/quick sort/NN/sort quick/NN/quick sort/NN/sort is/VBZ/is one/CD/one of/IN/of the/DT/the most/RBS/most popular/JJ/popular sorting/NN/sorting algorithms/NNS/algorithms based/VBN/based on/IN/on divide/NN/divide et/NN/et impera/NN/impera strategy/NN/strategy /,/, resulting/VBG/resulting in/IN/in an/DT/an o/NN/o /:/( n/NN/n log/NN/log n/NN/n /:/) complexity/NNP/complexity. the/DT/the algorithm/NN/algorithm starts/VBZ/starts by/IN/by picking/NN/picking an/DT/an item/NN/item /,/, called/VBN/called pivot/NN/pivot /,/, and/CC/and moving/VBG/moving all/DT/all smaller/JJR/smaller items/NNS/items before/IN/before it/PRP/it /,/, while/IN/while all/DT/all greater/JJR/greater elements/NNS/elements after/IN/after it/NNP/it. this/DT/this is/VBZ/is the/DT/the main/JJ/main quick/NN/quick sort/NN/sort operation/NN/operation /,/, called/VBN/called partition/NN/partition /,/, recursively/RB/recursively repeated/VBN/repeated on/IN/on lesser/NN/lesser and/CC/and greater/JJR/greater sub/NN/sub lists/NNS/lists until/IN/until their/PRP$/their size/NN/size is/VBZ/is one/CD/one or/CC/or zero/CD/zero /:/- in/IN/in which/WDT/which case/NN/case the/DT/the list/NN/list is/VBZ/is implicitly/RB/implicitly sorted/VBN/sorted /./. choosing/NN/choosing an/DT/an appropriate/JJ/appropriate pivot/NN/pivot /,/, as/IN/as for/IN/for example/NN/example the/DT/the median/NN/median element/NN/element is/VBZ/is funda/JJ/funda- mental/JJ/mental for/IN/for avoiding/NN/avoiding the/DT/the drastically/RB/drastically reduced/VBN/reduced performance/NN/performance of/IN/of o/NN/o /:/( n2/NNP/n2 /:/) /./. chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 66/CD/66 4/CD/4 75/CD/75 74/CD/74 2/CD/2 54/CD/54 pivot/NN/pivot 4/CD/4 75/CD/75 74/CD/74 2/CD/2 54/CD/54 pivot/NN/pivot 4/CD/4 54/CD/54 74/CD/74 2/CD/2 75/CD/75 pivot/NN/pivot 4/CD/4 2/CD/2 74/CD/74 54/CD/54 75/CD/75 pivot/NN/pivot 4/CD/4 2/CD/2 54/CD/54 74/CD/74 75/CD/75 pivot/NN/pivot 4/CD/4 2/CD/2 pivot/NN/pivot 2/CD/2 4/CD/4 pivot/NN/pivot 74/CD/74 75/CD/75 pivot/NN/pivot 74/CD/74 75/CD/75 2/CD/2 4/CD/4 54/CD/54 74/CD/74 75/CD/75 pivot/NN/pivot figure/NN/figure 8.3/CD/8.3 /:/: quick/JJ/quick sort/NN/sort example/NN/example /:/( pivot/NN/pivot median/NN/median strategy/NN/strategy /:/) 1/CD/1 /CD/) algorithm/NN/algorithm quicksort/NN/quicksort /:/( list/NN/list /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: list/NN/list has/VBZ/has been/VBN/been sorted/VBN/sorted into/IN/into values/NNS/values of/IN/of ascending/VBG/ascending order/NN/order 4/CD/4 /CD/) if/IN/if list.count/JJ/list.count =/NN/= 1/CD/1 ///CD/// already/RB/already sorted/VBN/sorted 5/CD/5 /CD/) return/NN/return list/NN/list 6/CD/6 /CD/) end/NN/end if/IN/if 7/CD/7 /CD/) pivot/NN/pivot Ã/:/Ã /:/ medianvalue/NN/medianvalue /:/( list/NN/list /:/) 8/CD/8 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ 0/-NONE-/0 to/TO/to list.count/JJ/list.count Â/NN/Â ¡/:/¡ 1/CD/1 9/CD/9 /CD/) if/IN/if list/NN/list /:/[ i/PRP/i /VBP/] =/:/= pivot/NN/pivot 10/CD/10 /CD/) equal.insert/JJ/equal.insert /NN/( list/NN/list /:/[ i/PRP/i /VBP/] /:/) 11/CD/11 /CD/) end/NN/end if/IN/if 12/CD/12 /CD/) if/IN/if list/NN/list /:/[ i/PRP/i /VBP/] </:/< pivot/NN/pivot 13/CD/13 /CD/) less.insert/JJ/less.insert /NN/( list/NN/list /:/[ i/PRP/i /VBP/] /:/) 14/CD/14 /CD/) end/NN/end if/IN/if 15/CD/15 /CD/) if/IN/if list/NN/list /:/[ i/PRP/i /VBP/] >/:/> pivot/NN/pivot 16/CD/16 /CD/) greater.insert/JJ/greater.insert /NN/( list/NN/list /:/[ i/PRP/i /VBP/] /:/) 17/CD/17 /CD/) end/NN/end if/IN/if 18/CD/18 /CD/) end/NN/end for/IN/for 19/CD/19 /CD/) return/NN/return concatenate/NN/concatenate /:/( quicksort/NN/quicksort /:/( less/JJR/less /:/) /,/, equal/JJ/equal /,/, quicksort/NN/quicksort /:/( greater/JJR/greater /NN/) /:/) 20/CD/20 /CD/) end/NN/end quicksort/NN/quicksort chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 67/CD/67 8.4/CD/8.4 insertion/NN/insertion sort/NN/sort insertion/NN/insertion sort/NN/sort is/VBZ/is a/DT/a somewhat/RB/somewhat interesting/JJ/interesting algorithm/NN/algorithm with/IN/with an/DT/an expensive/JJ/expensive runtime/NN/runtime of/IN/of o/NN/o /:/( n2/NNP/n2 /:/) /./. it/PRP/it can/MD/can be/VB/be best/JJS/best thought/NN/thought of/IN/of as/RB/as a/DT/a sorting/NN/sorting scheme/NN/scheme similar/JJ/similar to/TO/to that/DT/that of/IN/of sorting/VBG/sorting a/DT/a hand/NN/hand of/IN/of playing/NN/playing cards/NNS/cards /,/, i.e/NNP/i.e. you/PRP/you take/VBP/take one/CD/one card/NN/card and/CC/and then/RB/then look/VB/look at/IN/at the/DT/the rest/NN/rest with/IN/with the/DT/the intent/NN/intent of/IN/of building/NN/building up/IN/up an/DT/an ordered/VBN/ordered set/NN/set of/IN/of cards/NNS/cards in/IN/in your/PRP$/your hand/NN/hand /./. 4/CD/4 75/CD/75 74/CD/74 2/CD/2 54/CD/54 4/CD/4 75/CD/75 74/CD/74 2/CD/2 54/CD/54 4/CD/4 75/CD/75 74/CD/74 2/CD/2 54/CD/54 74/CD/74 4/CD/4 74/CD/74 75/CD/75 2/CD/2 54/CD/54 2/CD/2 75/CD/75 2/CD/2 4/CD/4 74/CD/74 75/CD/75 54/CD/54 54/CD/54 2/CD/2 4/CD/4 54/CD/54 74/CD/74 75/CD/75 4/CD/4 figure/NN/figure 8.4/CD/8.4 /:/: insertion/NN/insertion sort/NN/sort iterations/NNS/iterations 1/CD/1 /CD/) algorithm/NN/algorithm insertionsort/NN/insertionsort /:/( list/NN/list /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: list/NN/list has/VBZ/has been/VBN/been sorted/VBN/sorted into/IN/into values/NNS/values of/IN/of ascending/VBG/ascending order/NN/order 4/CD/4 /CD/) unsorted/VBN/unsorted Ã/-NONE-/Ã /:/ 1/CD/1 5/CD/5 /CD/) while/IN/while unsorted/JJ/unsorted </NN/< list.count/NN/list.count 6/CD/6 /CD/) hold/NN/hold Ã/:/Ã /NN/ list/NN/list /:/[ unsorted/VBN/unsorted /-NONE-/] 7/CD/7 /CD/) i/PRP/i Ã/VBP/Ã /:/ unsorted/VBN/unsorted Â/-NONE-/Â ¡/:/¡ 1/CD/1 8/CD/8 /CD/) while/IN/while i/PRP/i Â/VBP/Â ¸/:/¸ 0/-NONE-/0 and/CC/and hold/VBD/hold </CD/< list/NN/list /:/[ i/PRP/i /VBP/] 9/CD/9 /CD/) list/NN/list /:/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] Ã/CD/Ã /CD/ list/NN/list /:/[ i/PRP/i /VBP/] 10/CD/10 /CD/) i/PRP/i Ã/VBP/Ã /:/ i/PRP/i Â/VBP/Â ¡/:/¡ 1/CD/1 11/CD/11 /CD/) end/NN/end while/IN/while 12/CD/12 /CD/) list/NN/list /:/[ i/PRP/i +/VBP/+ 1/CD/1 /CD/] Ã/CD/Ã /CD/ hold/NN/hold 13/CD/13 /CD/) unsorted/VBN/unsorted Ã/-NONE-/Ã /:/ unsorted/VBN/unsorted +/-NONE-/+ 1/CD/1 14/CD/14 /CD/) end/NN/end while/IN/while 15/CD/15 /CD/) return/NN/return list/NN/list 16/CD/16 /CD/) end/NN/end insertionsort/NN/insertionsort chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 68/CD/68 8.5/CD/8.5 shell/NN/shell sort/NN/sort put/VBD/put simply/RB/simply shell/NN/shell sort/NN/sort can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a more/RBR/more e/JJ/e Â/NN/Â ±/:/± cient/NN/cient variation/NN/variation of/IN/of insertion/NN/insertion sort/NN/sort as/IN/as described/VBN/described in/IN/in x8.4/-NONE-/x8.4 /,/, it/PRP/it achieves/VBZ/achieves this/DT/this mainly/RB/mainly by/IN/by comparing/NN/comparing items/NNS/items of/IN/of varying/VBG/varying distances/NNS/distances apart/NN/apart resulting/VBG/resulting in/IN/in a/DT/a run/NN/run time/NN/time complexity/NN/complexity of/IN/of o/NN/o /:/( n/NN/n log2/NNP/log2 n/NN/n /:/) /./. shell/NN/shell sort/NN/sort is/VBZ/is fairly/RB/fairly straight/JJ/straight forward/NN/forward but/CC/but may/MD/may seem/VB/seem somewhat/RB/somewhat confusing/VBG/confusing at/IN/at Â/CD/Â ¯/CD/¯ rst/JJ/rst as/IN/as it/PRP/it di/VBP/di Â/:/Â ®/:/® ers/NNS/ers from/IN/from other/JJ/other sorting/NN/sorting algorithms/NNS/algorithms in/IN/in the/DT/the way/NN/way it/PRP/it selects/VBZ/selects items/NNS/items to/TO/to compare/NNP/compare. figure/NN/figure 8.5/CD/8.5 shows/NNS/shows shell/VBP/shell sort/NN/sort being/VBG/being ran/NN/ran on/IN/on an/DT/an array/NN/array of/IN/of integers/NNS/integers /,/, the/DT/the red/NN/red coloured/VBD/coloured square/JJ/square is/VBZ/is the/DT/the current/JJ/current value/NN/value we/PRP/we are/VBP/are holding/VBG/holding /./. 1/CD/1 /CD/) algorithm/NN/algorithm shellsort/NN/shellsort /:/( list/NN/list /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: list/NN/list has/VBZ/has been/VBN/been sorted/VBN/sorted into/IN/into values/NNS/values of/IN/of ascending/VBG/ascending order/NN/order 4/CD/4 /CD/) increment/NN/increment Ã/:/Ã /:/ list.count/JJ/list.count =/NN/= 2/CD/2 5/CD/5 /CD/) while/IN/while increment/NN/increment 6/CD/6 =/CD/= 0/-NONE-/0 6/CD/6 /:/) current/JJ/current Ã/NN/Ã /:/ increment/NN/increment 7/CD/7 /CD/) while/IN/while current/JJ/current </NN/< list.count/NN/list.count 8/CD/8 /CD/) hold/NN/hold Ã/:/Ã /NN/ list/NN/list /:/[ current/JJ/current /NN/] 9/CD/9 /CD/) i/PRP/i Ã/VBP/Ã /:/ current/JJ/current Â/NN/Â ¡/:/¡ increment/NN/increment 10/CD/10 /CD/) while/IN/while i/PRP/i Â/VBP/Â ¸/:/¸ 0/-NONE-/0 and/CC/and hold/VBD/hold </CD/< list/NN/list /:/[ i/PRP/i /VBP/] 11/CD/11 /CD/) list/NN/list /:/[ i/PRP/i +/VBP/+ increment/JJ/increment /NN/] Ã/:/Ã /:/ list/NN/list /:/[ i/PRP/i /VBP/] 12/CD/12 /CD/) i/PRP/i Â/VBP/Â ¡/:/¡ =/:/= increment/NN/increment 13/CD/13 /CD/) end/NN/end while/IN/while 14/CD/14 /CD/) list/NN/list /:/[ i/PRP/i +/VBP/+ increment/JJ/increment /NN/] Ã/:/Ã /:/ hold/NN/hold 15/CD/15 /NN/) current/JJ/current Ã/NN/Ã /:/ current/JJ/current +/NN/+ 1/CD/1 16/CD/16 /CD/) end/NN/end while/IN/while 17/CD/17 /CD/) increment/NN/increment =/:/= =/:/= 2/CD/2 18/CD/18 /CD/) end/NN/end while/IN/while 19/CD/19 /CD/) return/NN/return list/NN/list 20/CD/20 /CD/) end/NN/end shellsort/NN/shellsort 8.6/CD/8.6 radix/CD/radix sort/NN/sort unlike/IN/unlike the/DT/the sorting/NN/sorting algorithms/NNS/algorithms described/VBD/described previously/RB/previously radix/CD/radix sort/NN/sort uses/NNS/uses buckets/NNS/buckets to/TO/to sort/VB/sort items/NNS/items /,/, each/DT/each bucket/NN/bucket holds/NNS/holds items/NNS/items with/IN/with a/DT/a particular/JJ/particular property/NN/property called/VBN/called a/DT/a key/JJ/key /./. normally/RB/normally a/DT/a bucket/NN/bucket is/VBZ/is a/DT/a queue/NN/queue /,/, each/DT/each time/NN/time radix/NN/radix sort/NN/sort is/VBZ/is performed/VBN/performed these/DT/these buckets/NNS/buckets are/VBP/are emptied/VBN/emptied starting/VBG/starting the/DT/the smallest/JJS/smallest key/JJ/key bucket/NN/bucket to/TO/to the/DT/the largest/NNP/largest. when/WRB/when looking/VBG/looking at/IN/at items/NNS/items within/IN/within a/DT/a list/NN/list to/TO/to sort/VB/sort we/PRP/we do/VBP/do so/RB/so by/IN/by isolating/NN/isolating a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c key/NN/key /,/, e.g/NNP/e.g. in/IN/in the/DT/the example/NN/example we/PRP/we are/VBP/are about/IN/about to/TO/to show/VB/show we/PRP/we have/VBP/have a/DT/a maximum/NN/maximum of/IN/of three/CD/three keys/NNS/keys for/IN/for all/DT/all items/NNS/items /,/, that/IN/that is/VBZ/is the/DT/the highest/JJS/highest key/JJ/key we/PRP/we need/VBP/need to/TO/to look/VB/look at/IN/at is/VBZ/is hundreds/NNP/hundreds. because/IN/because we/PRP/we are/VBP/are dealing/VBG/dealing with/IN/with /,/, in/IN/in this/DT/this example/NN/example base/NN/base 10/CD/10 numbers/NNS/numbers we/PRP/we have/VBP/have at/IN/at any/DT/any one/CD/one point/NN/point 10/CD/10 possible/JJ/possible key/JJ/key values/NNS/values 0/-NONE-/0 /:/: /:/: 9/CD/9 each/DT/each of/IN/of which/WDT/which has/VBZ/has their/PRP$/their own/JJ/own bucket/NNP/bucket. before/IN/before we/PRP/we show/VBP/show you/PRP/you this/DT/this Â/NN/Â ¯/:/¯ rst/JJ/rst simple/NN/simple version/NN/version of/IN/of radix/NN/radix sort/NN/sort let/NN/let us/PRP/us clarify/VB/clarify what/WP/what we/PRP/we mean/VBP/mean by/IN/by isolating/NN/isolating keys/NNP/keys. given/NN/given the/DT/the number/NN/number 102/CD/102 if/IN/if we/PRP/we look/VBP/look at/IN/at the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst key/NN/key /,/, the/DT/the ones/NNS/ones then/RB/then we/PRP/we can/MD/can see/VB/see we/PRP/we have/VBP/have two/CD/two of/IN/of them/PRP/them /,/, progressing/VBG/progressing to/TO/to the/DT/the next/JJ/next key/NN/key /:/- tens/NNS/tens we/PRP/we can/MD/can see/VB/see that/IN/that the/DT/the number/NN/number has/VBZ/has zero/CD/zero of/IN/of them/PRP/them /,/, Â/VBP/Â ¯/:/¯ nally/RB/nally we/PRP/we can/MD/can see/VB/see that/IN/that the/DT/the number/NN/number has/VBZ/has a/DT/a single/JJ/single hundred/NNP/hundred. the/DT/the number/NN/number used/VBD/used as/IN/as an/DT/an example/NN/example has/VBZ/has in/IN/in total/JJ/total three/CD/three keys/NNS/keys /:/: chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 69/CD/69 figure/NN/figure 8.5/CD/8.5 /:/: shell/NN/shell sort/NN/sort chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 70/CD/70 1/CD/1. ones/NNS/ones 2/CD/2. tens/NNS/tens 3/CD/3. hundreds/NNS/hundreds for/IN/for further/JJ/further clari/NN/clari Â/:/Â ¯/:/¯ cation/NN/cation what/WP/what if/IN/if we/PRP/we wanted/VBD/wanted to/TO/to determine/VB/determine how/WRB/how many/JJ/many thousands/NNS/thousands the/DT/the number/NN/number 102/CD/102 has/VBZ/has ?/./? clearly/RB/clearly there/RB/there are/VBP/are none/NN/none /,/, but/CC/but often/RB/often looking/VBG/looking at/IN/at a/DT/a number/NN/number as/IN/as Â/CD/Â ¯/CD/¯ nal/JJ/nal like/IN/like we/PRP/we often/RB/often do/VBP/do it/PRP/it is/VBZ/is not/RB/not so/RB/so obvious/JJ/obvious so/IN/so when/WRB/when asked/VBN/asked the/DT/the question/NN/question how/WRB/how many/JJ/many thousands/NNS/thousands does/VBZ/does 102/CD/102 have/VB/have you/PRP/you should/MD/should simply/RB/simply pad/VB/pad the/DT/the number/NN/number with/IN/with a/DT/a zero/NN/zero in/IN/in that/DT/that location/NN/location /,/, e.g/NNP/e.g. 0102/CD/0102 here/RB/here it/PRP/it is/VBZ/is more/RBR/more obvious/JJ/obvious that/IN/that the/DT/the key/JJ/key value/NN/value at/IN/at the/DT/the thousands/NNS/thousands location/NN/location is/VBZ/is zero/CD/zero /./. the/DT/the last/JJ/last thing/NN/thing to/TO/to identify/VB/identify before/IN/before we/PRP/we actually/RB/actually show/VBP/show you/PRP/you a/DT/a simple/JJ/simple implemen/NN/implemen- tation/NN/tation of/IN/of radix/NN/radix sort/NN/sort that/WDT/that works/VBZ/works on/IN/on only/RB/only positive/JJ/positive integers/NNS/integers /,/, and/CC/and requires/VBZ/requires you/PRP/you to/TO/to specify/VB/specify the/DT/the maximum/NN/maximum key/NN/key size/NN/size in/IN/in the/DT/the list/NN/list is/VBZ/is that/IN/that we/PRP/we need/VBP/need a/DT/a way/NN/way to/TO/to isolate/VB/isolate a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c key/NN/key at/IN/at any/DT/any one/CD/one time/NNP/time. the/DT/the solution/NN/solution is/VBZ/is actually/RB/actually very/RB/very simple/JJ/simple /,/, but/CC/but its/PRP$/its not/RB/not often/RB/often you/PRP/you want/VBP/want to/TO/to isolate/VB/isolate a/DT/a key/JJ/key in/IN/in a/DT/a number/NN/number so/IN/so we/PRP/we will/MD/will spell/VB/spell it/PRP/it out/RP/out clearly/RB/clearly here/NNP/here. a/DT/a key/JJ/key can/NN/can be/VB/be accessed/VBN/accessed from/IN/from any/DT/any integer/NN/integer with/IN/with the/DT/the following/VBG/following expression/NN/expression /:/: key/JJ/key Ã/NN/Ã /:/ /:/( number/NN/number =/:/= keytoaccess/NN/keytoaccess /:/) %/NN/% 10/CD/10. as/IN/as a/DT/a simple/JJ/simple example/NN/example lets/NNS/lets say/VBP/say that/IN/that we/PRP/we want/VBP/want to/TO/to access/NN/access the/DT/the tens/NNS/tens key/VBP/key of/IN/of the/DT/the number/NN/number 1290/CD/1290 /,/, the/DT/the tens/NNS/tens column/VBP/column is/VBZ/is key/JJ/key 10/CD/10 and/CC/and so/RB/so after/IN/after substitution/NN/substitution yields/NNS/yields key/JJ/key Ã/NN/Ã /:/ /:/( 1290/CD/1290 =/CD/= 10/CD/10 /CD/) %/NN/% 10/CD/10 =/CD/= 9/CD/9. the/DT/the next/JJ/next key/NN/key to/TO/to look/VB/look at/IN/at for/IN/for a/DT/a number/NN/number can/MD/can be/VB/be attained/VBN/attained by/IN/by multiplying/NN/multiplying the/DT/the last/JJ/last key/NN/key by/IN/by ten/NN/ten working/VBG/working left/NN/left to/TO/to right/RB/right in/IN/in a/DT/a sequential/JJ/sequential manner/NNP/manner. the/DT/the value/NN/value of/IN/of key/JJ/key is/VBZ/is used/VBN/used in/IN/in the/DT/the following/JJ/following algorithm/NN/algorithm to/TO/to work/VB/work out/RP/out the/DT/the index/NN/index of/IN/of an/DT/an array/NN/array of/IN/of queues/NNS/queues to/TO/to enqueue/VB/enqueue the/DT/the item/NN/item into/IN/into /./. 1/CD/1 /CD/) algorithm/NN/algorithm radix/NN/radix /:/( list/NN/list /,/, maxkeysize/NN/maxkeysize /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) maxkeysize/NN/maxkeysize Â/:/Â ¸/:/¸ 0/-NONE-/0 and/CC/and represents/NNS/represents the/DT/the largest/JJS/largest key/JJ/key size/NN/size in/IN/in the/DT/the list/NN/list 4/CD/4 /CD/) post/NN/post /:/: list/NN/list has/VBZ/has been/VBN/been sorted/VBN/sorted 5/CD/5 /CD/) queues/NNS/queues Ã/:/Ã /:/ queue/NN/queue /:/[ 10/CD/10 /CD/] 6/CD/6 /CD/) indexofkey/NN/indexofkey Ã/:/Ã /:/ 1/CD/1 7/CD/7 /CD/) fori/NN/fori Ã/:/Ã /:/ 0/-NONE-/0 to/TO/to maxkeysize/VB/maxkeysize Â/:/Â ¡/:/¡ 1/CD/1 8/CD/8 /CD/) foreach/NN/foreach item/NN/item in/IN/in list/NN/list 9/CD/9 /CD/) queues/NNS/queues /:/[ getqueueindex/NN/getqueueindex /:/( item/NN/item /,/, indexofkey/NN/indexofkey /:/) /:/] .enqueue/JJ/.enqueue /NN/( item/NN/item /:/) 10/CD/10 /CD/) end/NN/end foreach/NN/foreach 11/CD/11 /CD/) list/NN/list Ã/:/Ã /:/ collapsequeues/NNS/collapsequeues /VBP/( queues/NNS/queues /:/) 12/CD/12 /CD/) clearqueues/NNS/clearqueues /:/( queues/NNS/queues /VBP/) 13/CD/13 /CD/) indexofkey/NN/indexofkey Ã/:/Ã /:/ indexofkey/NN/indexofkey Â/:/Â ¤/:/¤ 10/CD/10 14/CD/14 /CD/) end/NN/end for/IN/for 15/CD/15 /CD/) return/NN/return list/NN/list 16/CD/16 /CD/) end/NN/end radix/NN/radix figure/NN/figure 8.6/CD/8.6 shows/NNS/shows the/DT/the members/NNS/members of/IN/of queues/NNS/queues from/IN/from the/DT/the algorithm/NN/algorithm described/VBD/described above/IN/above operating/NN/operating on/IN/on the/DT/the list/NN/list whose/WP$/whose members/NNS/members are/VBP/are 90/CD/90 ;/:/; 12/CD/12 ;/:/; 8/CD/8 ;/:/; 791/CD/791 ;/:/; 123/CD/123 ;/:/; and/CC/and 61/CD/61 /,/, the/DT/the key/JJ/key we/PRP/we are/VBP/are interested/JJ/interested in/IN/in for/IN/for each/DT/each number/NN/number is/VBZ/is highlighted/NNP/highlighted. omitted/VBD/omitted queues/NNS/queues in/IN/in figure/NN/figure 8.6/CD/8.6 mean/NN/mean that/WDT/that they/PRP/they contain/VBP/contain no/DT/no items/NNS/items /./. 8.7/CD/8.7 summary/NN/summary throughout/IN/throughout this/DT/this chapter/NN/chapter we/PRP/we have/VBP/have seen/VBN/seen many/JJ/many di/NN/di Â/:/Â ®/:/® erent/NN/erent algorithms/NNS/algorithms for/IN/for sorting/VBG/sorting lists/NNS/lists /,/, some/DT/some are/VBP/are very/RB/very e/JJ/e Â/NN/Â ±/:/± cient/NN/cient /:/( e.g/NNP/e.g. quick/NN/quick sort/NN/sort de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x8.3/-NONE-/x8.3 /:/) /,/, some/DT/some are/VBP/are not/RB/not /:/( e.g/JJ/e.g /./. chapter/NN/chapter 8/CD/8. sorting/VBG/sorting 71/CD/71 figure/NN/figure 8.6/CD/8.6 /:/: radix/CD/radix sort/NN/sort base/NN/base 10/CD/10 algorithm/NN/algorithm bubble/JJ/bubble sort/NN/sort de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x8.1/-NONE-/x8.1 /:/) /./. selecting/NN/selecting the/DT/the correct/NN/correct sorting/VBG/sorting algorithm/NN/algorithm is/VBZ/is usually/RB/usually denoted/VBN/denoted purely/RB/purely by/IN/by e/NN/e Â/:/Â ±/:/± ciency/NN/ciency /,/, e.g/NNP/e.g. you/PRP/you would/MD/would always/RB/always choose/VB/choose merge/NN/merge sort/NN/sort over/IN/over shell/NN/shell sort/NN/sort and/CC/and so/RB/so on/NNP/on. there/EX/there are/VBP/are also/RB/also other/JJ/other factors/NNS/factors to/TO/to look/VB/look at/IN/at though/IN/though and/CC/and these/DT/these are/VBP/are based/VBN/based on/IN/on the/DT/the actual/JJ/actual imple/NN/imple- mentation/NNP/mentation. some/DT/some algorithms/NNS/algorithms are/VBP/are very/RB/very nicely/RB/nicely expressed/VBN/expressed in/IN/in a/DT/a recursive/JJ/recursive fashion/NN/fashion /,/, however/RB/however these/DT/these algorithms/NNS/algorithms ought/MD/ought to/TO/to be/VB/be pretty/RB/pretty e/VB/e Â/:/Â ±/:/± cient/NN/cient /,/, e.g/NNP/e.g. implementing/NN/implementing a/DT/a linear/NN/linear /,/, quadratic/JJ/quadratic /,/, or/CC/or slower/JJR/slower algorithm/NN/algorithm using/VBG/using recursion/NN/recursion would/MD/would be/VB/be a/DT/a very/RB/very bad/JJ/bad idea/NN/idea /./. if/IN/if you/PRP/you want/VBP/want to/TO/to learn/VB/learn more/JJR/more about/IN/about why/WRB/why you/PRP/you should/MD/should be/VB/be very/RB/very /,/, very/RB/very careful/JJ/careful when/WRB/when implementing/VBG/implementing recursive/JJ/recursive algorithms/NNS/algorithms see/VBP/see appendix/NN/appendix c/NN/c /./. chapter/NN/chapter 9/CD/9 numeric/JJ/numeric unless/NN/unless stated/VBD/stated otherwise/RB/otherwise the/DT/the alias/NNS/alias n/VBP/n denotes/NNS/denotes a/DT/a standard/JJ/standard 32/CD/32 bit/NN/bit integer/NN/integer /./. 9.1/CD/9.1 primality/NN/primality test/NN/test a/DT/a simple/JJ/simple algorithm/NN/algorithm that/WDT/that determines/VBZ/determines whether/IN/whether or/CC/or not/RB/not a/DT/a given/VBN/given integer/NN/integer is/VBZ/is a/DT/a prime/JJ/prime number/NN/number /,/, e.g/NNP/e.g. 2/CD/2 /,/, 5/CD/5 /,/, 7/CD/7 /,/, and/CC/and 13/CD/13 are/VBP/are all/DT/all prime/JJ/prime numbers/NNS/numbers /,/, however/RB/however 6/CD/6 is/VBZ/is not/RB/not as/IN/as it/PRP/it can/MD/can be/VB/be the/DT/the result/NN/result of/IN/of the/DT/the product/NN/product of/IN/of two/CD/two numbers/NNS/numbers that/WDT/that are/VBP/are </:/< 6/CD/6 /./. in/IN/in an/DT/an attempt/NN/attempt to/TO/to slow/VB/slow down/RP/down the/DT/the inner/NN/inner loop/NN/loop the/DT/the p/NN/p n/NN/n is/VBZ/is used/VBN/used as/RB/as the/DT/the upper/JJ/upper bound/NN/bound /./. 1/CD/1 /CD/) algorithm/NN/algorithm isprime/NN/isprime /:/( n/NN/n /:/) 2/CD/2 /CD/) post/NN/post /:/: n/NN/n is/VBZ/is determined/VBN/determined to/TO/to be/VB/be a/DT/a prime/JJ/prime or/CC/or not/RB/not 3/CD/3 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ 2/CD/2 to/TO/to n/VB/n do/VBP/do 4/CD/4 /CD/) for/IN/for j/NN/j Ã/:/Ã /:/ 1/CD/1 to/TO/to sqrt/VB/sqrt /:/( n/NN/n /:/) do/VBP/do 5/CD/5 /CD/) if/IN/if i/PRP/i Â/VBP/Â ¤/:/¤ j/NN/j =/:/= n/NN/n 6/CD/6 /CD/) return/NN/return false/NN/false 7/CD/7 /CD/) end/NN/end if/IN/if 8/CD/8 /CD/) end/NN/end for/IN/for 9/CD/9 /CD/) end/NN/end for/IN/for 10/CD/10 /CD/) end/NN/end isprime/NN/isprime 9.2/CD/9.2 base/NN/base conversions/NNS/conversions dsa/VBP/dsa contains/NNS/contains a/DT/a number/NN/number of/IN/of algorithms/NNS/algorithms that/WDT/that convert/NN/convert a/DT/a base/NN/base 10/CD/10 number/NN/number to/TO/to its/PRP$/its equivalent/NN/equivalent binary/NN/binary /,/, octal/JJ/octal or/CC/or hexadecimal/JJ/hexadecimal form/NNP/form. for/IN/for example/NN/example 7810/CD/7810 has/VBZ/has a/DT/a binary/JJ/binary representation/NN/representation of/IN/of 10011102/CD/10011102 /./. table/JJ/table 9.1/CD/9.1 shows/NNS/shows the/DT/the algorithm/NN/algorithm trace/NN/trace when/WRB/when the/DT/the number/NN/number to/TO/to convert/VB/convert to/TO/to binary/VB/binary is/VBZ/is 74210/CD/74210 /./. 72/CD/72 chapter/NN/chapter 9/CD/9. numeric/JJ/numeric 73/CD/73 1/CD/1 /CD/) algorithm/NN/algorithm tobinary/NN/tobinary /:/( n/NN/n /:/) 2/CD/2 /CD/) pre/NN/pre /:/: n/NN/n Â/:/Â ¸/:/¸ 0/-NONE-/0 3/CD/3 /:/) post/NN/post /:/: n/NN/n has/VBZ/has been/VBN/been converted/VBN/converted into/IN/into its/PRP$/its base/NN/base 2/CD/2 representation/NN/representation 4/CD/4 /CD/) while/IN/while n/NN/n >/:/> 0/-NONE-/0 5/CD/5 /NN/) list/NN/list /:/: add/JJ/add /NN/( n/NN/n %/NN/% 2/CD/2 /CD/) 6/CD/6 /CD/) n/NN/n Ã/:/Ã /:/ n/NN/n =/:/= 2/CD/2 7/CD/7 /CD/) end/NN/end while/IN/while 8/CD/8 /CD/) return/NN/return reverse/NN/reverse /:/( list/NN/list /:/) 9/CD/9 /CD/) end/NN/end tobinary/NN/tobinary n/NN/n list/NN/list 742/CD/742 f/NN/f 0/-NONE-/0 g/NN/g 371/CD/371 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 g/NN/g 185/CD/185 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 g/NN/g 92/CD/92 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 g/NN/g 46/CD/46 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 ;/:/; 1/LS/1 g/NN/g 23/CD/23 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 g/NN/g 11/CD/11 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 1/CD/1 g/NN/g 5/CD/5 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 1/CD/1 ;/:/; 1/CD/1 g/NN/g 2/CD/2 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 1/CD/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 g/NN/g 1/CD/1 f/NN/f 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 ;/:/; 1/LS/1 ;/:/; 1/CD/1 ;/:/; 1/CD/1 ;/:/; 1/CD/1 ;/:/; 0/-NONE-/0 ;/:/; 1/LS/1 g/NN/g table/NN/table 9.1/CD/9.1 /:/: algorithm/NN/algorithm trace/NN/trace of/IN/of tobinary/JJ/tobinary 9.3/CD/9.3 attaining/VBG/attaining the/DT/the greatest/JJS/greatest common/JJ/common denomina/NN/denomina- tor/NN/tor of/IN/of two/CD/two numbers/NNS/numbers a/DT/a fairly/RB/fairly routine/JJ/routine problem/NN/problem in/IN/in mathematics/NN/mathematics is/VBZ/is that/IN/that of/IN/of Â/NNP/Â ¯/NNP/¯ nding/NN/nding the/DT/the greatest/JJS/greatest common/JJ/common denominator/NN/denominator of/IN/of two/CD/two integers/NNS/integers /,/, what/WP/what we/PRP/we are/VBP/are essentially/RB/essentially after/IN/after is/VBZ/is the/DT/the greatest/JJS/greatest number/NN/number which/WDT/which is/VBZ/is a/DT/a multiple/NN/multiple of/IN/of both/DT/both /,/, e.g/NNP/e.g. the/DT/the greatest/JJS/greatest common/JJ/common denominator/NN/denominator of/IN/of 9/CD/9 /,/, and/CC/and 15/CD/15 is/VBZ/is 3/CD/3. one/CD/one of/IN/of the/DT/the most/RBS/most elegant/JJ/elegant solutions/NNS/solutions to/TO/to this/DT/this problem/NN/problem is/VBZ/is based/VBN/based on/IN/on euclid/JJ/euclid 's/POS/'s algorithm/NN/algorithm that/IN/that has/VBZ/has a/DT/a run/NN/run time/NN/time complexity/NN/complexity of/IN/of o/NN/o /:/( n2/NNP/n2 /:/) /./. 1/CD/1 /CD/) algorithm/NN/algorithm greatestcommondenominator/NN/greatestcommondenominator /:/( m/NN/m /,/, n/NN/n /:/) 2/CD/2 /CD/) pre/NN/pre /:/: m/NN/m and/CC/and n/NN/n are/VBP/are integers/NNS/integers 3/CD/3 /CD/) post/NN/post /:/: the/DT/the greatest/JJS/greatest common/JJ/common denominator/NN/denominator of/IN/of the/DT/the two/CD/two integers/NNS/integers is/VBZ/is calculated/VBN/calculated 4/CD/4 /CD/) if/IN/if n/NN/n =/:/= 0/-NONE-/0 5/CD/5 /NN/) return/NN/return m/NN/m 6/CD/6 /CD/) end/NN/end if/IN/if 7/CD/7 /CD/) return/NN/return greatestcommondenominator/NN/greatestcommondenominator /:/( n/NN/n /,/, m/NN/m %/NN/% n/NN/n /:/) 8/CD/8 /CD/) end/NN/end greatestcommondenominator/NN/greatestcommondenominator chapter/NN/chapter 9/CD/9. numeric/JJ/numeric 74/CD/74 9.4/CD/9.4 computing/NN/computing the/DT/the maximum/NN/maximum value/NN/value for/IN/for a/DT/a num/JJ/num- ber/NN/ber of/IN/of a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c base/NN/base consisting/VBG/consisting of/IN/of n/NN/n digits/NNS/digits this/DT/this algorithm/NN/algorithm computes/VBZ/computes the/DT/the maximum/NN/maximum value/NN/value of/IN/of a/DT/a number/NN/number for/IN/for a/DT/a given/VBN/given number/NN/number of/IN/of digits/NNS/digits /,/, e.g/NNP/e.g. using/NN/using the/DT/the base/NN/base 10/CD/10 system/NN/system the/DT/the maximum/NN/maximum number/NN/number we/PRP/we can/MD/can have/VB/have made/VBN/made up/RP/up of/IN/of 4/CD/4 digits/NNS/digits is/VBZ/is the/DT/the number/NN/number 999910/CD/999910. similarly/RB/similarly the/DT/the maximum/NN/maximum number/NN/number that/WDT/that consists/VBZ/consists of/IN/of 4/CD/4 digits/NNS/digits for/IN/for a/DT/a base/NN/base 2/CD/2 number/NN/number is/VBZ/is 11112/CD/11112 which/WDT/which is/VBZ/is 1510/CD/1510 /./. the/DT/the expression/NN/expression by/IN/by which/WDT/which we/PRP/we can/MD/can compute/VB/compute this/DT/this maximum/NN/maximum value/NN/value for/IN/for n/NN/n digits/NNS/digits is/VBZ/is /:/: bn/NN/bn Â/:/Â ¡/:/¡ 1/CD/1. in/IN/in the/DT/the previous/JJ/previous expression/NN/expression b/NN/b is/VBZ/is the/DT/the number/NN/number base/NN/base /,/, and/CC/and n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of digits/NNP/digits. as/IN/as an/DT/an example/NN/example if/IN/if we/PRP/we wanted/VBD/wanted to/TO/to determine/VB/determine the/DT/the maximum/NN/maximum value/NN/value for/IN/for a/DT/a hexadecimal/JJ/hexadecimal number/NN/number /:/( base/NN/base 16/CD/16 /CD/) consisting/VBG/consisting of/IN/of 6/CD/6 digits/NNS/digits the/DT/the expression/NN/expression would/MD/would be/VB/be as/RB/as follows/VBZ/follows /:/: 166/CD/166 Â/CD/Â ¡/CD/¡ 1/CD/1. the/DT/the maximum/NN/maximum value/NN/value of/IN/of the/DT/the previous/JJ/previous example/NN/example would/MD/would be/VB/be represented/VBN/represented as/IN/as ffffff16/NNP/ffffff16 which/WDT/which yields/NNS/yields 1677721510/CD/1677721510 /./. in/IN/in the/DT/the following/JJ/following algorithm/NN/algorithm numberbase/NN/numberbase should/MD/should be/VB/be considered/VBN/considered restricted/VBN/restricted to/TO/to the/DT/the values/NNS/values of/IN/of 2/CD/2 /,/, 8/CD/8 /,/, 9/CD/9 /,/, and/CC/and 16/CD/16. for/IN/for this/DT/this reason/NN/reason in/IN/in our/PRP$/our actual/JJ/actual implementation/NN/implementation numberbase/NN/numberbase has/VBZ/has an/DT/an enumeration/NN/enumeration type/NNP/type. the/DT/the base/NN/base enumeration/NN/enumeration type/NN/type is/VBZ/is de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned as/IN/as /:/: base/NN/base =/:/= fbinary/JJ/fbinary Ã/NN/Ã /:/ 2/CD/2 ;/:/; octal/JJ/octal Ã/NN/Ã /:/ 8/CD/8 ;/:/; decimal/JJ/decimal Ã/NN/Ã /:/ 10/CD/10 ;/:/; hexadecimal/JJ/hexadecimal Ã/NN/Ã /:/ 16g/CD/16g the/DT/the reason/NN/reason we/PRP/we provide/VBP/provide the/DT/the de/NN/de Â/:/Â ¯/:/¯ nition/NN/nition of/IN/of base/NN/base is/VBZ/is to/TO/to give/VB/give you/PRP/you an/DT/an idea/NN/idea how/WRB/how this/DT/this algorithm/NN/algorithm can/MD/can be/VB/be modelled/VBN/modelled in/IN/in a/DT/a more/RBR/more readable/JJ/readable manner/NN/manner rather/RB/rather than/IN/than using/VBG/using various/JJ/various checks/NNS/checks to/TO/to determine/VB/determine the/DT/the correct/NN/correct base/NN/base to/TO/to use/NNP/use. for/IN/for our/PRP$/our implementation/NN/implementation we/PRP/we cast/VBP/cast the/DT/the value/NN/value of/IN/of numberbase/NN/numberbase to/TO/to an/DT/an integer/NN/integer /,/, as/IN/as such/JJ/such we/PRP/we extract/VBP/extract the/DT/the value/NN/value associated/VBN/associated with/IN/with the/DT/the relevant/JJ/relevant option/NN/option in/IN/in the/DT/the base/NN/base enumeration/NNP/enumeration. as/IN/as an/DT/an example/NN/example if/IN/if we/PRP/we were/VBD/were to/TO/to cast/VBN/cast the/DT/the option/NN/option octal/NN/octal to/TO/to an/DT/an integer/NN/integer we/PRP/we would/MD/would get/VB/get the/DT/the value/NN/value 8/CD/8. in/IN/in the/DT/the algorithm/NN/algorithm listed/VBN/listed below/IN/below the/DT/the cast/NN/cast is/VBZ/is implicit/JJ/implicit so/RB/so we/PRP/we just/RB/just use/VBP/use the/DT/the actual/JJ/actual argument/NN/argument numberbase/NN/numberbase /./. 1/CD/1 /CD/) algorithm/NN/algorithm maxvalue/NN/maxvalue /:/( numberbase/NN/numberbase /,/, n/NN/n /:/) 2/CD/2 /CD/) pre/NN/pre /:/: numberbase/NN/numberbase is/VBZ/is the/DT/the number/NN/number system/NN/system to/TO/to use/VB/use /,/, n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of digits/NNS/digits 3/CD/3 /CD/) post/NN/post /:/: the/DT/the maximum/NN/maximum value/NN/value for/IN/for numberbase/NN/numberbase consisting/VBG/consisting of/IN/of n/NN/n digits/NNS/digits is/VBZ/is computed/VBN/computed 4/CD/4 /CD/) return/NN/return power/NN/power /:/( numberbase/NN/numberbase ;/:/; n/NN/n /:/) Â/:/Â ¡/:/¡ 1/CD/1 5/CD/5 /CD/) end/NN/end maxvalue/NN/maxvalue 9.5/CD/9.5 factorial/JJ/factorial of/IN/of a/DT/a number/NN/number attaining/VBG/attaining the/DT/the factorial/JJ/factorial of/IN/of a/DT/a number/NN/number is/VBZ/is a/DT/a primitive/JJ/primitive mathematical/JJ/mathematical operation/NNP/operation. many/JJ/many implementations/NNS/implementations of/IN/of the/DT/the factorial/JJ/factorial algorithm/NN/algorithm are/VBP/are recursive/JJ/recursive as/IN/as the/DT/the problem/NN/problem is/VBZ/is re/JJ/re- cursive/JJ/cursive in/IN/in nature/NN/nature /,/, however/RB/however here/RB/here we/PRP/we present/VBP/present an/DT/an iterative/JJ/iterative solution/NNP/solution. the/DT/the iterative/JJ/iterative solution/NN/solution is/VBZ/is presented/VBN/presented because/IN/because it/PRP/it too/RB/too is/VBZ/is trivial/JJ/trivial to/TO/to implement/NN/implement and/CC/and does/VBZ/does n't/RB/n't su/VB/su Â/:/Â ®/:/® er/NN/er from/IN/from the/DT/the use/NN/use of/IN/of recursion/NN/recursion /:/( for/IN/for more/JJR/more on/IN/on recursion/NN/recursion see/NN/see xc/NN/xc /:/) /./. the/DT/the factorial/JJ/factorial of/IN/of 0/-NONE-/0 and/CC/and 1/CD/1 is/VBZ/is 0/CD/0. the/DT/the aforementioned/JJ/aforementioned acts/NNS/acts as/IN/as a/DT/a base/NN/base case/NN/case that/WDT/that we/PRP/we will/MD/will build/VB/build upon/NNP/upon. the/DT/the factorial/JJ/factorial of/IN/of 2/CD/2 is/VBZ/is 2/CD/2 Â/CD/Â ¤/CD/¤ the/DT/the factorial/JJ/factorial of/IN/of 1/CD/1 /,/, similarly/RB/similarly the/DT/the factorial/JJ/factorial of/IN/of 3/CD/3 is/VBZ/is 3/CD/3 Â/CD/Â ¤/CD/¤ the/DT/the factorial/JJ/factorial of/IN/of 2/CD/2 and/CC/and so/RB/so on/NNP/on. we/PRP/we can/MD/can indicate/VB/indicate that/IN/that we/PRP/we are/VBP/are after/IN/after the/DT/the factorial/JJ/factorial of/IN/of a/DT/a number/NN/number using/VBG/using the/DT/the form/NN/form n/NN/n !/./! where/WRB/where n/NN/n is/VBZ/is the/DT/the number/NN/number we/PRP/we wish/VBP/wish to/TO/to attain/VB/attain the/DT/the factorial/JJ/factorial of/NNP/of. our/PRP$/our algorithm/NN/algorithm does/VBZ/does n't/RB/n't use/VB/use such/JJ/such notation/NN/notation but/CC/but it/PRP/it is/VBZ/is handy/JJ/handy to/TO/to know/VB/know /./. chapter/NN/chapter 9/CD/9. numeric/JJ/numeric 75/CD/75 1/CD/1 /CD/) algorithm/NN/algorithm factorial/JJ/factorial /NN/( n/NN/n /:/) 2/CD/2 /CD/) pre/NN/pre /:/: n/NN/n Â/:/Â ¸/:/¸ 0/-NONE-/0 /,/, n/NN/n is/VBZ/is the/DT/the number/NN/number to/TO/to compute/VB/compute the/DT/the factorial/JJ/factorial of/IN/of 3/CD/3 /CD/) post/NN/post /:/: the/DT/the factorial/JJ/factorial of/IN/of n/NN/n is/VBZ/is computed/VBN/computed 4/CD/4 /CD/) if/IN/if n/NN/n </:/< 2/CD/2 5/CD/5 /CD/) return/NN/return 1/CD/1 6/CD/6 /CD/) end/NN/end if/IN/if 7/CD/7 /CD/) factorial/JJ/factorial Ã/NN/Ã /:/ 1/CD/1 8/CD/8 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ 2/CD/2 to/TO/to n/VB/n 9/CD/9 /CD/) factorial/JJ/factorial Ã/NN/Ã /:/ factorial/JJ/factorial Â/NN/Â ¤/:/¤ i/PRP/i 10/CD/10 /CD/) end/NN/end for/IN/for 11/CD/11 /CD/) return/NN/return factorial/JJ/factorial 12/CD/12 /CD/) end/NN/end factorial/JJ/factorial 9.6/CD/9.6 summary/NN/summary in/IN/in this/DT/this chapter/NN/chapter we/PRP/we have/VBP/have presented/VBN/presented several/JJ/several numeric/JJ/numeric algorithms/NNS/algorithms /,/, most/JJS/most of/IN/of which/WDT/which are/VBP/are simply/RB/simply here/RB/here because/IN/because they/PRP/they were/VBD/were fun/VBN/fun to/TO/to design/NNP/design. perhaps/RB/perhaps the/DT/the message/NN/message that/IN/that the/DT/the reader/NN/reader should/MD/should gain/VB/gain from/IN/from this/DT/this chapter/NN/chapter is/VBZ/is that/IN/that algorithms/NNS/algorithms can/MD/can be/VB/be applied/VBN/applied to/TO/to several/JJ/several domains/NNS/domains to/TO/to make/VB/make work/NN/work in/IN/in that/DT/that respective/JJ/respective domain/NN/domain attainable/NNP/attainable. numeric/JJ/numeric algorithms/NNS/algorithms in/IN/in particular/JJ/particular drive/JJ/drive some/DT/some of/IN/of the/DT/the most/RBS/most advanced/JJ/advanced systems/NNS/systems on/IN/on the/DT/the planet/NN/planet computing/NN/computing such/JJ/such data/NNS/data as/IN/as weather/NN/weather forecasts/NNS/forecasts /./. chapter/NN/chapter 10/CD/10 searching/VBG/searching 10.1/CD/10.1 sequential/JJ/sequential search/NN/search a/DT/a simple/JJ/simple algorithm/NN/algorithm that/WDT/that search/NN/search for/IN/for a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c item/NN/item inside/NN/inside a/DT/a list/NNP/list. it/PRP/it operates/VBZ/operates looping/VBG/looping on/IN/on each/DT/each element/NN/element o/NN/o /:/( n/NN/n /:/) until/IN/until a/DT/a match/NN/match occurs/VBZ/occurs or/CC/or the/DT/the end/NN/end is/VBZ/is reached/VBN/reached /./. 1/CD/1 /CD/) algorithm/NN/algorithm sequentialsearch/NN/sequentialsearch /:/( list/NN/list /,/, item/NN/item /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: return/NN/return index/NN/index of/IN/of item/NN/item if/IN/if found/NN/found /,/, otherwise/RB/otherwise Â/:/Â ¡/:/¡ 1/CD/1 4/CD/4 /CD/) index/NN/index Ã/:/Ã /:/ 0/-NONE-/0 5/CD/5 /NN/) while/IN/while index/NN/index </:/< list.count/JJ/list.count and/CC/and list/NN/list /:/[ index/NN/index /:/] 6/CD/6 =/CD/= item/NN/item 6/CD/6 /CD/) index/NN/index Ã/:/Ã /:/ index/NN/index +/:/+ 1/CD/1 7/CD/7 /CD/) end/NN/end while/IN/while 8/CD/8 /CD/) if/IN/if index/NN/index </:/< list.count/JJ/list.count and/CC/and list/NN/list /:/[ index/NN/index /:/] =/:/= item/NN/item 9/CD/9 /CD/) return/NN/return index/NN/index 10/CD/10 /CD/) end/NN/end if/IN/if 11/CD/11 /CD/) return/NN/return Â/:/Â ¡/:/¡ 1/CD/1 12/CD/12 /CD/) end/NN/end sequentialsearch/NN/sequentialsearch 10.2/CD/10.2 probability/NN/probability search/NN/search probability/NN/probability search/NN/search is/VBZ/is a/DT/a statistical/JJ/statistical sequential/JJ/sequential searching/NN/searching algorithm/NNP/algorithm. in/IN/in addition/NN/addition to/TO/to searching/VBG/searching for/IN/for an/DT/an item/NN/item /,/, it/PRP/it takes/VBZ/takes into/IN/into account/NN/account its/PRP$/its frequency/NN/frequency by/IN/by swapping/NN/swapping it/PRP/it with/IN/with it/PRP/it 's/VBZ/'s predecessor/NN/predecessor in/IN/in the/DT/the list/NNP/list. the/DT/the algorithm/NN/algorithm complexity/NN/complexity still/RB/still remains/VBZ/remains at/IN/at o/NN/o /:/( n/NN/n /:/) but/CC/but in/IN/in a/DT/a non-uniform/NN/non-uniform items/NNS/items search/VBP/search the/DT/the more/RBR/more frequent/JJ/frequent items/NNS/items are/VBP/are in/IN/in the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst positions/NNS/positions /,/, reducing/VBG/reducing list/NN/list scanning/VBG/scanning time/NN/time /./. figure/NN/figure 10.1/CD/10.1 shows/NNS/shows the/DT/the resulting/VBG/resulting state/NN/state of/IN/of a/DT/a list/NN/list after/IN/after searching/VBG/searching for/IN/for two/CD/two items/NNS/items /,/, notice/NN/notice how/WRB/how the/DT/the searched/JJ/searched items/NNS/items have/VBP/have had/VBN/had their/PRP$/their search/NN/search probability/NN/probability increased/VBD/increased after/IN/after each/DT/each search/NN/search operation/NN/operation respectively/RB/respectively /./. 76/CD/76 chapter/NN/chapter 10/CD/10. searching/VBG/searching 77/CD/77 figure/NN/figure 10.1/CD/10.1 /:/: a/DT/a /NN/) search/NN/search /:/( 12/CD/12 /CD/) /,/, b/NN/b /:/) search/NN/search /:/( 101/CD/101 /CD/) 1/CD/1 /CD/) algorithm/NN/algorithm probabilitysearch/NN/probabilitysearch /:/( list/NN/list /,/, item/NN/item /:/) 2/CD/2 /CD/) pre/NN/pre /:/: list/NN/list 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: a/DT/a boolean/JJ/boolean indicating/NN/indicating where/WRB/where the/DT/the item/NN/item is/VBZ/is found/VBN/found or/CC/or not/RB/not ;/:/; in/IN/in the/DT/the former/JJ/former case/NN/case swap/NN/swap founded/VBD/founded item/NN/item with/IN/with its/PRP$/its predecessor/NN/predecessor 4/CD/4 /CD/) index/NN/index Ã/:/Ã /:/ 0/-NONE-/0 5/CD/5 /NN/) while/IN/while index/NN/index </:/< list.count/JJ/list.count and/CC/and list/NN/list /:/[ index/NN/index /:/] 6/CD/6 =/CD/= item/NN/item 6/CD/6 /CD/) index/NN/index Ã/:/Ã /:/ index/NN/index +/:/+ 1/CD/1 7/CD/7 /CD/) end/NN/end while/IN/while 8/CD/8 /CD/) if/IN/if index/NN/index Â/:/Â ¸/:/¸ list.count/JJ/list.count or/CC/or list/NN/list /:/[ index/NN/index /:/] 6/CD/6 =/CD/= item/NN/item 9/CD/9 /CD/) return/NN/return false/NN/false 10/CD/10 /CD/) end/NN/end if/IN/if 11/CD/11 /CD/) if/IN/if index/NN/index >/:/> 0/-NONE-/0 12/CD/12 /:/) swap/NN/swap /:/( list/NN/list /:/[ index/NN/index /:/] ;/:/; list/NN/list /:/[ index/NN/index Â/:/Â ¡/:/¡ 1/CD/1 /CD/] /CD/) 13/CD/13 /CD/) end/NN/end if/IN/if 14/CD/14 /CD/) return/NN/return true/JJ/true 15/CD/15 /CD/) end/NN/end probabilitysearch/NN/probabilitysearch 10.3/CD/10.3 summary/NN/summary in/IN/in this/DT/this chapter/NN/chapter we/PRP/we have/VBP/have presented/VBN/presented a/DT/a few/JJ/few novel/NN/novel searching/VBG/searching algorithms/NNP/algorithms. we/PRP/we have/VBP/have presented/VBN/presented more/RBR/more e/JJ/e Â/NN/Â ±/:/± cient/NN/cient searching/VBG/searching algorithms/NNS/algorithms earlier/JJR/earlier on/IN/on /,/, like/IN/like for/IN/for instance/NN/instance the/DT/the logarithmic/JJ/logarithmic searching/NN/searching algorithm/NN/algorithm that/WDT/that avl/NN/avl and/CC/and bst/NN/bst tree/NN/tree 's/POS/'s use/NN/use /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x3.2/-NONE-/x3.2 /:/) /./. we/PRP/we decided/VBD/decided not/RB/not to/TO/to cover/VB/cover a/DT/a searching/NN/searching algorithm/NN/algorithm known/VBN/known as/IN/as binary/JJ/binary chop/NN/chop /:/( another/DT/another name/NN/name for/IN/for binary/JJ/binary search/NN/search /,/, binary/JJ/binary chop/NN/chop usually/RB/usually refers/NNS/refers to/TO/to its/PRP$/its array/NN/array counterpart/NN/counterpart /:/) as/IN/as chapter/NN/chapter 10/CD/10. searching/VBG/searching 78/CD/78 the/DT/the reader/NN/reader has/VBZ/has already/RB/already seen/VBN/seen such/JJ/such an/DT/an algorithm/NN/algorithm in/IN/in x3/NNP/x3 /./. searching/VBG/searching algorithms/NNS/algorithms and/CC/and their/PRP$/their e/NN/e Â/:/Â ±/:/± ciency/NN/ciency largely/RB/largely depends/VBZ/depends on/IN/on the/DT/the underlying/VBG/underlying data/NNS/data structure/NN/structure being/VBG/being used/VBN/used to/TO/to store/VB/store the/DT/the data/NNP/data. for/IN/for instance/NN/instance it/PRP/it is/VBZ/is quicker/NN/quicker to/TO/to deter/NNP/deter- mine/NN/mine whether/IN/whether an/DT/an item/NN/item is/VBZ/is in/IN/in a/DT/a hash/NN/hash table/NN/table than/IN/than it/PRP/it is/VBZ/is an/DT/an array/NN/array /,/, similarly/RB/similarly it/PRP/it is/VBZ/is quicker/NN/quicker to/TO/to search/NN/search a/DT/a bst/NN/bst than/IN/than it/PRP/it is/VBZ/is a/DT/a linked/VBN/linked list/NNP/list. if/IN/if you/PRP/you are/VBP/are going/VBG/going to/TO/to search/NN/search for/IN/for data/NNS/data fairly/RB/fairly often/RB/often then/RB/then we/PRP/we strongly/RB/strongly advise/VBP/advise that/IN/that you/PRP/you sit/VBP/sit down/RP/down and/CC/and research/NN/research the/DT/the data/NNS/data structures/NNS/structures available/JJ/available to/TO/to you/NNP/you. in/IN/in most/JJS/most cases/NNS/cases using/VBG/using a/DT/a list/NN/list or/CC/or any/DT/any other/JJ/other primarily/NN/primarily linear/IN/linear data/NNS/data structure/NN/structure is/VBZ/is down/IN/down to/TO/to lack/VB/lack of/IN/of knowledge/NNP/knowledge. model/NN/model your/PRP$/your data/NNS/data and/CC/and then/RB/then research/NN/research the/DT/the data/NNS/data structures/NNS/structures that/WDT/that best/JJS/best Â/:/Â ¯/:/¯ t/NN/t your/PRP$/your scenario/NN/scenario /./. chapter/NN/chapter 11/CD/11 strings/NNS/strings strings/NNS/strings have/VBP/have their/PRP$/their own/JJ/own chapter/NN/chapter in/IN/in this/DT/this text/NN/text purely/RB/purely because/IN/because string/VBG/string operations/NNS/operations and/CC/and transformations/NNS/transformations are/VBP/are incredibly/RB/incredibly frequent/JJ/frequent within/IN/within programs/NNP/programs. the/DT/the algorithms/NNS/algorithms presented/VBD/presented are/VBP/are based/VBN/based on/IN/on problems/NNS/problems the/DT/the authors/NNS/authors have/VBP/have come/VBN/come across/IN/across previously/RB/previously /,/, or/CC/or were/VBD/were formulated/VBN/formulated to/TO/to satisfy/VB/satisfy curiosity/NN/curiosity /./. 11.1/CD/11.1 reversing/VBG/reversing the/DT/the order/NN/order of/IN/of words/NNS/words in/IN/in a/DT/a sentence/NN/sentence de/FW/de Â/:/Â ¯/NN/¯ ning/NN/ning algorithms/NNS/algorithms for/IN/for primitive/JJ/primitive string/NN/string operations/NNS/operations is/VBZ/is simple/JJ/simple /,/, e.g/NNP/e.g. extracting/NN/extracting a/DT/a sub-string/JJ/sub-string of/IN/of a/DT/a string/NN/string /,/, however/RB/however some/DT/some algorithms/NNS/algorithms that/WDT/that require/NN/require more/RBR/more inventiveness/JJ/inventiveness can/MD/can be/VB/be a/DT/a little/RB/little more/RBR/more tricky/JJ/tricky /./. the/DT/the algorithm/NN/algorithm presented/VBD/presented here/RB/here does/VBZ/does not/RB/not simply/RB/simply reverse/VB/reverse the/DT/the characters/NNS/characters in/IN/in a/DT/a string/NN/string /,/, rather/RB/rather it/PRP/it reverses/VBZ/reverses the/DT/the order/NN/order of/IN/of words/NNS/words within/IN/within a/DT/a string/NNP/string. this/DT/this algorithm/NN/algorithm works/VBZ/works on/IN/on the/DT/the principal/JJ/principal that/IN/that words/NNS/words are/VBP/are all/DT/all delimited/VBN/delimited by/IN/by white/JJ/white space/NN/space /,/, and/CC/and using/VBG/using a/DT/a few/JJ/few markers/NNS/markers to/TO/to de/VB/de Â/:/Â ¯/:/¯ ne/NN/ne where/WRB/where words/NNS/words start/VBP/start and/CC/and end/NN/end we/PRP/we can/MD/can easily/RB/easily reverse/VB/reverse them/PRP/them /./. 79/CD/79 chapter/NN/chapter 11/CD/11. strings/NNS/strings 80/CD/80 1/CD/1 /CD/) algorithm/NN/algorithm reversewords/NNS/reversewords /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value 6/CD/6 =/CD/= ;/:/; /,/, sb/NN/sb is/VBZ/is a/DT/a string/NN/string bu/NN/bu Â/:/Â ®/:/® er/NN/er 3/CD/3 /CD/) post/NN/post /:/: the/DT/the words/NNS/words in/IN/in value/NN/value have/VBP/have been/VBN/been reversed/VBN/reversed 4/CD/4 /CD/) last/JJ/last Ã/NN/Ã /:/ value.length/JJ/value.length Â/NN/Â ¡/:/¡ 1/CD/1 5/CD/5 /CD/) start/NN/start Ã/:/Ã /:/ last/JJ/last 6/CD/6 /CD/) while/IN/while last/JJ/last Â/NN/Â ¸/:/¸ 0/-NONE-/0 7/CD/7 /:/) ///CD/// skip/NN/skip whitespace/NN/whitespace 8/CD/8 /CD/) while/IN/while start/NN/start Â/:/Â ¸/:/¸ 0/-NONE-/0 and/CC/and value/NN/value /:/[ start/NN/start /:/] =/:/= whitespace/NN/whitespace 9/CD/9 /CD/) start/NN/start Ã/:/Ã /:/ start/NN/start Â/:/Â ¡/:/¡ 1/CD/1 10/CD/10 /CD/) end/NN/end while/IN/while 11/CD/11 /CD/) last/JJ/last Ã/NN/Ã /:/ start/NN/start 12/CD/12 /CD/) ///CD/// march/NN/march down/IN/down to/TO/to the/DT/the index/NN/index before/IN/before the/DT/the beginning/NN/beginning of/IN/of the/DT/the word/NN/word 13/CD/13 /CD/) while/IN/while start/NN/start Â/:/Â ¸/:/¸ 0/-NONE-/0 and/CC/and start/VB/start 6/CD/6 =/CD/= whitespace/NN/whitespace 14/CD/14 /CD/) start/NN/start Ã/:/Ã /:/ start/NN/start Â/:/Â ¡/:/¡ 1/CD/1 15/CD/15 /CD/) end/NN/end while/IN/while 16/CD/16 /CD/) ///CD/// append/NN/append chars/NNS/chars from/IN/from start/NN/start +/:/+ 1/CD/1 to/TO/to length/NN/length +/:/+ 1/CD/1 to/TO/to string/NN/string bu/NN/bu Â/:/Â ®/:/® er/NN/er sb/NN/sb 17/CD/17 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ start/NN/start +/:/+ 1/CD/1 to/TO/to last/JJ/last 18/CD/18 /CD/) sb.append/JJ/sb.append /NN/( value/NN/value /:/[ i/PRP/i /VBP/] /:/) 19/CD/19 /CD/) end/NN/end for/IN/for 20/CD/20 /CD/) ///CD/// if/IN/if this/DT/this is/VBZ/is n't/RB/n't the/DT/the last/JJ/last word/NN/word in/IN/in the/DT/the string/NN/string add/NN/add some/DT/some whitespace/NN/whitespace after/IN/after the/DT/the word/NN/word in/IN/in the/DT/the bu/NN/bu Â/:/Â ®/:/® er/NN/er 21/CD/21 /CD/) if/IN/if start/NN/start >/:/> 0/-NONE-/0 22/CD/22 /:/) sb.append/JJ/sb.append /NN/( `/``/` '/''/' /:/) 23/CD/23 /CD/) end/NN/end if/IN/if 24/CD/24 /CD/) last/JJ/last Ã/NN/Ã /:/ start/NN/start Â/:/Â ¡/:/¡ 1/CD/1 25/CD/25 /CD/) start/NN/start Ã/:/Ã /:/ last/JJ/last 26/CD/26 /CD/) end/NN/end while/IN/while 27/CD/27 /CD/) ///CD/// check/NN/check if/IN/if we/PRP/we have/VBP/have added/VBN/added one/CD/one too/RB/too many/JJ/many whitespace/NN/whitespace to/TO/to sb/VB/sb 28/CD/28 /CD/) if/IN/if sb/NN/sb /:/[ sb.length/JJ/sb.length Â/NN/Â ¡/:/¡ 1/CD/1 /CD/] =/CD/= whitespace/NN/whitespace 29/CD/29 /CD/) ///CD/// cut/NN/cut the/DT/the whitespace/NN/whitespace 30/CD/30 /CD/) sb.length/JJ/sb.length Ã/NN/Ã /:/ sb.length/JJ/sb.length Â/NN/Â ¡/:/¡ 1/CD/1 31/CD/31 /CD/) end/NN/end if/IN/if 32/CD/32 /CD/) return/NN/return sb/NN/sb 33/CD/33 /CD/) end/NN/end reversewords/NNS/reversewords 11.2/CD/11.2 detecting/VBG/detecting a/DT/a palindrome/NN/palindrome although/IN/although not/RB/not a/DT/a frequent/NN/frequent algorithm/NN/algorithm that/WDT/that will/MD/will be/VB/be applied/VBN/applied in/IN/in real-life/JJ/real-life scenarios/NNS/scenarios detecting/VBG/detecting a/DT/a palindrome/NN/palindrome is/VBZ/is a/DT/a fun/NN/fun /,/, and/CC/and as/IN/as it/PRP/it turns/VBZ/turns out/RP/out pretty/RB/pretty trivial/JJ/trivial algorithm/NN/algorithm to/TO/to design/VB/design /./. the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we present/VBP/present has/VBZ/has a/DT/a o/NN/o /:/( n/NN/n /:/) run/VBN/run time/NN/time complexity/NNP/complexity. our/PRP$/our algo/NNP/algo- rithm/NN/rithm uses/VBZ/uses two/CD/two pointers/NNS/pointers at/IN/at opposite/JJ/opposite ends/NNS/ends of/IN/of string/VBG/string we/PRP/we are/VBP/are checking/VBG/checking is/VBZ/is a/DT/a palindrome/NN/palindrome or/CC/or not/NNP/not. these/DT/these pointers/NNS/pointers march/VBP/march in/IN/in towards/NNS/towards each/DT/each other/JJ/other always/NNS/always checking/VBG/checking that/IN/that each/DT/each character/NN/character they/PRP/they point/VBP/point to/TO/to is/VBZ/is the/DT/the same/JJ/same with/IN/with respect/NN/respect to/TO/to value/NNP/value. figure/NN/figure 11.1/CD/11.1 shows/NNS/shows the/DT/the ispalindrome/NN/ispalindrome algorithm/NN/algorithm in/IN/in operation/NN/operation on/IN/on the/DT/the string/NN/string \/:/\ was/VBD/was it/PRP/it eliot/RB/eliot 's/VBZ/'s toilet/VBN/toilet i/PRP/i saw/VBD/saw ?/./? "/CD/" if/IN/if you/PRP/you remove/VBP/remove all/DT/all punctuation/NN/punctuation /,/, and/CC/and white/JJ/white space/NN/space from/IN/from the/DT/the aforementioned/VBN/aforementioned string/VBG/string you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd that/IN/that it/PRP/it is/VBZ/is a/DT/a valid/JJ/valid palindrome/NN/palindrome /./. chapter/NN/chapter 11/CD/11. strings/NNS/strings 81/CD/81 figure/NN/figure 11.1/CD/11.1 /:/: left/VBN/left and/CC/and right/RB/right pointers/NNS/pointers marching/VBG/marching in/IN/in towards/NNS/towards one/CD/one another/DT/another 1/CD/1 /CD/) algorithm/NN/algorithm ispalindrome/NN/ispalindrome /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: value/NN/value is/VBZ/is determined/VBN/determined to/TO/to be/VB/be a/DT/a palindrome/NN/palindrome or/CC/or not/RB/not 4/CD/4 /CD/) word/NN/word Ã/:/Ã /:/ value.strip/JJ/value.strip /NN/( /:/) .touppercase/JJ/.touppercase /NN/( /:/) 5/CD/5 /CD/) left/NN/left Ã/:/Ã /:/ 0/-NONE-/0 6/CD/6 /:/) right/RB/right Ã/:/Ã /:/ word.length/JJ/word.length Â/NN/Â ¡/:/¡ 1/CD/1 7/CD/7 /CD/) while/IN/while word/NN/word /:/[ left/VBN/left /-NONE-/] =/:/= word/NN/word /:/[ right/NN/right /:/] and/CC/and left/VBD/left </CD/< right/JJ/right 8/CD/8 /CD/) left/NN/left Ã/:/Ã /:/ left/NN/left +/:/+ 1/CD/1 9/CD/9 /CD/) right/NN/right Ã/:/Ã /:/ right/RB/right Â/:/Â ¡/:/¡ 1/CD/1 10/CD/10 /CD/) end/NN/end while/IN/while 11/CD/11 /CD/) return/NN/return word/NN/word /:/[ left/VBN/left /-NONE-/] =/:/= word/NN/word /:/[ right/NN/right /:/] 12/CD/12 /CD/) end/NN/end ispalindrome/NN/ispalindrome in/IN/in the/DT/the ispalindrome/NN/ispalindrome algorithm/NN/algorithm we/PRP/we call/VBP/call a/DT/a method/NN/method by/IN/by the/DT/the name/NN/name of/IN/of strip/NNP/strip. this/DT/this algorithm/NN/algorithm discards/NNS/discards punctuation/NN/punctuation in/IN/in the/DT/the string/NN/string /,/, including/VBG/including white/NN/white space/NNP/space. as/IN/as a/DT/a result/NN/result word/NN/word contains/VBZ/contains a/DT/a heavily/RB/heavily compacted/VBN/compacted representation/NN/representation of/IN/of the/DT/the original/JJ/original string/NN/string /,/, each/DT/each character/NN/character of/IN/of which/WDT/which is/VBZ/is in/IN/in its/PRP$/its uppercase/NN/uppercase representation/NN/representation /./. palindromes/NNS/palindromes discard/VBD/discard white/JJ/white space/NN/space /,/, punctuation/NN/punctuation /,/, and/CC/and case/NN/case making/VBG/making these/DT/these changes/NNS/changes allows/VBZ/allows us/PRP/us to/TO/to design/VB/design a/DT/a simple/JJ/simple algorithm/NN/algorithm while/IN/while making/VBG/making our/PRP$/our algorithm/NN/algorithm fairly/RB/fairly robust/JJ/robust with/IN/with respect/NN/respect to/TO/to the/DT/the palindromes/NNS/palindromes it/PRP/it will/MD/will detect/VB/detect /./. 11.3/CD/11.3 counting/VBG/counting the/DT/the number/NN/number of/IN/of words/NNS/words in/IN/in a/DT/a string/NN/string counting/VBG/counting the/DT/the number/NN/number of/IN/of words/NNS/words in/IN/in a/DT/a string/NN/string can/MD/can seem/VB/seem pretty/RB/pretty trivial/JJ/trivial at/IN/at Â/CD/Â ¯/CD/¯ rst/JJ/rst /,/, however/RB/however there/EX/there are/VBP/are a/DT/a few/JJ/few cases/NNS/cases that/WDT/that we/PRP/we need/VBP/need to/TO/to be/VB/be aware/JJ/aware of/IN/of /:/: 1/CD/1. tracking/VBG/tracking when/WRB/when we/PRP/we are/VBP/are in/IN/in a/DT/a string/NN/string 2/CD/2. updating/VBG/updating the/DT/the word/NN/word count/NN/count at/IN/at the/DT/the correct/NN/correct place/NN/place 3/CD/3. skipping/VBG/skipping white/JJ/white space/NN/space that/WDT/that delimits/VBZ/delimits the/DT/the words/NNS/words as/IN/as an/DT/an example/NN/example consider/NN/consider the/DT/the string/NN/string \/:/\ ben/NN/ben ate/NN/ate hay/NN/hay "/:/" clearly/RB/clearly this/DT/this string/NN/string contains/VBZ/contains three/CD/three words/NNS/words /,/, each/DT/each of/IN/of which/WDT/which distinguished/VBN/distinguished via/IN/via white/JJ/white space/NNP/space. all/DT/all of/IN/of the/DT/the previously/RB/previously listed/VBN/listed points/NNS/points can/MD/can be/VB/be managed/VBN/managed by/IN/by using/NN/using three/CD/three variables/NNS/variables /:/: 1/CD/1. index/NN/index 2/CD/2. wordcount/NN/wordcount 3/CD/3. inword/NN/inword chapter/NN/chapter 11/CD/11. strings/NNS/strings 82/CD/82 figure/NN/figure 11.2/CD/11.2 /:/: string/VBG/string with/IN/with three/CD/three words/NNS/words figure/NN/figure 11.3/CD/11.3 /:/: string/VBG/string with/IN/with varying/VBG/varying number/NN/number of/IN/of white/JJ/white space/NN/space delimiting/NN/delimiting the/DT/the words/NNS/words of/IN/of the/DT/the previously/RB/previously listed/VBN/listed index/NN/index keeps/NNS/keeps track/VBP/track of/IN/of the/DT/the current/JJ/current index/NN/index we/PRP/we are/VBP/are at/IN/at in/IN/in the/DT/the string/NN/string /,/, wordcount/NN/wordcount is/VBZ/is an/DT/an integer/NN/integer that/IN/that keeps/NNS/keeps track/VBP/track of/IN/of the/DT/the number/NN/number of/IN/of words/NNS/words we/PRP/we have/VBP/have encountered/VBN/encountered /,/, and/CC/and Â/:/Â ¯/:/¯ nally/RB/nally inword/NN/inword is/VBZ/is a/DT/a boolean/JJ/boolean Â/NN/Â °/:/° ag/NN/ag that/IN/that denotes/NNS/denotes whether/IN/whether or/CC/or not/RB/not at/IN/at the/DT/the present/NN/present time/NN/time we/PRP/we are/VBP/are within/IN/within a/DT/a word/NNP/word. if/IN/if we/PRP/we are/VBP/are not/RB/not currently/RB/currently hitting/VBG/hitting white/JJ/white space/NN/space we/PRP/we are/VBP/are in/IN/in a/DT/a word/NN/word /,/, the/DT/the opposite/JJ/opposite is/VBZ/is true/JJ/true if/IN/if at/IN/at the/DT/the present/NN/present index/NN/index we/PRP/we are/VBP/are hitting/VBG/hitting white/JJ/white space/NN/space /./. what/WP/what denotes/NNS/denotes a/DT/a word/NN/word ?/./? in/IN/in our/PRP$/our algorithm/NN/algorithm each/DT/each word/NN/word is/VBZ/is separated/VBN/separated by/IN/by one/CD/one or/CC/or more/JJR/more occurrences/NNS/occurrences of/IN/of white/JJ/white space/NNP/space. we/PRP/we do/VBP/do n't/RB/n't take/VB/take into/IN/into account/NN/account any/DT/any particular/JJ/particular splitting/NN/splitting symbols/NNS/symbols you/PRP/you may/MD/may use/VB/use /,/, e.g/NNP/e.g. in/IN/in .net/JJ/.net string.split1/NN/string.split1 can/MD/can take/VB/take a/DT/a char/NN/char /:/( or/CC/or array/VBP/array of/IN/of characters/NNS/characters /:/) that/IN/that determines/NNS/determines a/DT/a delimiter/NN/delimiter to/TO/to use/VB/use to/TO/to split/VB/split the/DT/the characters/NNS/characters within/IN/within the/DT/the string/NN/string into/IN/into chunks/NNS/chunks of/IN/of strings/NNS/strings /,/, resulting/VBG/resulting in/IN/in an/DT/an array/NN/array of/IN/of sub-strings/NNS/sub-strings /./. in/IN/in figure/NN/figure 11.2/CD/11.2 we/PRP/we present/JJ/present a/DT/a string/NN/string indexed/VBN/indexed as/IN/as an/DT/an array/NNP/array. typically/RB/typically the/DT/the pattern/NN/pattern is/VBZ/is the/DT/the same/JJ/same for/IN/for most/JJS/most words/NNS/words /,/, delimited/VBD/delimited by/IN/by a/DT/a single/JJ/single occurrence/NN/occurrence of/IN/of white/JJ/white space/NN/space /./. figure/NN/figure 11.3/CD/11.3 shows/NNS/shows the/DT/the same/JJ/same string/NN/string /,/, with/IN/with the/DT/the same/JJ/same number/NN/number of/IN/of words/NNS/words but/CC/but with/IN/with varying/VBG/varying white/JJ/white space/NN/space splitting/NN/splitting them/PRP/them /./. 1http/CD/1http /:/: //msdn.microsoft.com/en-us/library/system.string.split.aspx/JJ///msdn.microsoft.com/en-us/library/system.string.split.aspx chapter/NN/chapter 11/CD/11. strings/NNS/strings 83/CD/83 1/CD/1 /CD/) algorithm/NN/algorithm wordcount/NN/wordcount /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: the/DT/the number/NN/number of/IN/of words/NNS/words contained/VBN/contained within/IN/within value/NN/value is/VBZ/is determined/VBN/determined 4/CD/4 /CD/) inword/NN/inword Ã/:/Ã /:/ true/JJ/true 5/CD/5 /CD/) wordcount/NN/wordcount Ã/:/Ã /:/ 0/-NONE-/0 6/CD/6 /:/) index/NN/index Ã/:/Ã /:/ 0/-NONE-/0 7/CD/7 /:/) ///CD/// skip/NN/skip initial/JJ/initial white/NN/white space/NN/space 8/CD/8 /CD/) while/IN/while value/NN/value /:/[ index/NN/index /:/] =/:/= whitespace/NN/whitespace and/CC/and index/NN/index </:/< value.length/JJ/value.length Â/NN/Â ¡/:/¡ 1/CD/1 9/CD/9 /CD/) index/NN/index Ã/:/Ã /:/ index/NN/index +/:/+ 1/CD/1 10/CD/10 /CD/) end/NN/end while/IN/while 11/CD/11 /CD/) ///CD/// was/VBD/was the/DT/the string/NN/string just/RB/just whitespace/NN/whitespace ?/./? 12/CD/12 /CD/) if/IN/if index/NN/index =/:/= value.length/JJ/value.length and/CC/and value/NN/value /:/[ index/NN/index /:/] =/:/= whitespace/NN/whitespace 13/CD/13 /CD/) return/NN/return 0/-NONE-/0 14/CD/14 /:/) end/NN/end if/IN/if 15/CD/15 /CD/) while/IN/while index/NN/index </:/< value.length/JJ/value.length 16/CD/16 /CD/) if/IN/if value/NN/value /:/[ index/NN/index /:/] =/:/= whitespace/NN/whitespace 17/CD/17 /CD/) ///CD/// skip/NN/skip all/DT/all whitespace/NN/whitespace 18/CD/18 /CD/) while/IN/while value/NN/value /:/[ index/NN/index /:/] =/:/= whitespace/NN/whitespace and/CC/and index/NN/index </:/< value.length/JJ/value.length Â/NN/Â ¡/:/¡ 1/CD/1 19/CD/19 /CD/) index/NN/index Ã/:/Ã /:/ index/NN/index +/:/+ 1/CD/1 20/CD/20 /CD/) end/NN/end while/IN/while 21/CD/21 /CD/) inword/NN/inword Ã/:/Ã /:/ false/NN/false 22/CD/22 /CD/) wordcount/NN/wordcount Ã/:/Ã /:/ wordcount/NN/wordcount +/:/+ 1/CD/1 23/CD/23 /CD/) else/NN/else 24/CD/24 /CD/) inword/NN/inword Ã/:/Ã /:/ true/JJ/true 25/CD/25 /CD/) end/NN/end if/IN/if 26/CD/26 /CD/) index/NN/index Ã/:/Ã /:/ index/NN/index +/:/+ 1/CD/1 27/CD/27 /CD/) end/NN/end while/IN/while 28/CD/28 /CD/) ///CD/// last/JJ/last word/NN/word may/MD/may have/VB/have not/RB/not been/VBN/been followed/VBN/followed by/IN/by whitespace/NN/whitespace 29/CD/29 /CD/) if/IN/if inword/NN/inword 30/CD/30 /CD/) wordcount/NN/wordcount Ã/:/Ã /:/ wordcount/NN/wordcount +/:/+ 1/CD/1 31/CD/31 /CD/) end/NN/end if/IN/if 32/CD/32 /CD/) return/NN/return wordcount/NN/wordcount 33/CD/33 /CD/) end/NN/end wordcount/NN/wordcount 11.4/CD/11.4 determining/VBG/determining the/DT/the number/NN/number of/IN/of repeated/VBN/repeated words/NNS/words within/IN/within a/DT/a string/NN/string with/IN/with the/DT/the help/NN/help of/IN/of an/DT/an unordered/VBN/unordered set/NN/set /,/, and/CC/and an/DT/an algorithm/NN/algorithm that/IN/that can/MD/can split/VB/split the/DT/the words/NNS/words within/IN/within a/DT/a string/NN/string using/VBG/using a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ ed/VBD/ed delimiter/NN/delimiter this/DT/this algorithm/NN/algorithm is/VBZ/is straightforward/VBN/straightforward to/TO/to implement/NNP/implement. if/IN/if we/PRP/we split/VBP/split all/DT/all the/DT/the words/NNS/words using/VBG/using a/DT/a single/JJ/single occurrence/NN/occurrence of/IN/of white/JJ/white space/NN/space as/IN/as our/PRP$/our delimiter/NN/delimiter we/PRP/we get/VBP/get all/DT/all the/DT/the words/NNS/words within/IN/within the/DT/the string/NN/string back/RB/back as/IN/as elements/NNS/elements of/IN/of an/DT/an array/NNP/array. then/RB/then if/IN/if we/PRP/we iterate/VBP/iterate through/IN/through these/DT/these words/NNS/words adding/VBG/adding them/PRP/them to/TO/to a/DT/a set/NN/set which/WDT/which contains/VBZ/contains only/RB/only unique/JJ/unique strings/NNS/strings we/PRP/we can/MD/can attain/VB/attain the/DT/the number/NN/number of/IN/of unique/JJ/unique words/NNS/words from/IN/from the/DT/the string/NNP/string. all/DT/all that/DT/that is/VBZ/is left/VBN/left to/TO/to do/VB/do is/VBZ/is subtract/VB/subtract the/DT/the unique/JJ/unique word/NN/word count/NN/count from/IN/from the/DT/the total/JJ/total number/NN/number of/IN/of stings/NNS/stings contained/VBN/contained in/IN/in the/DT/the array/NN/array returned/VBD/returned from/IN/from the/DT/the split/NN/split operation/NNP/operation. the/DT/the split/NN/split operation/NN/operation that/WDT/that we/PRP/we refer/VBP/refer to/TO/to is/VBZ/is the/DT/the same/JJ/same as/IN/as that/DT/that mentioned/VBN/mentioned in/IN/in x11.3/-NONE-/x11.3 /./. chapter/NN/chapter 11/CD/11. strings/NNS/strings 84/CD/84 figure/NN/figure 11.4/CD/11.4 /:/: a/DT/a /NN/) undesired/VBN/undesired uniques/NNS/uniques set/VBN/set ;/:/; b/NN/b /:/) desired/VBN/desired uniques/NNS/uniques set/VBN/set 1/CD/1 /CD/) algorithm/NN/algorithm repeatedwordcount/NN/repeatedwordcount /:/( value/NN/value /:/) 2/CD/2 /CD/) pre/NN/pre /:/: value/NN/value 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: the/DT/the number/NN/number of/IN/of repeated/VBN/repeated words/NNS/words in/IN/in value/NN/value is/VBZ/is returned/VBN/returned 4/CD/4 /CD/) words/NNS/words Ã/:/Ã /:/ value.split/JJ/value.split /NN/( '/''/' '/''/' /:/) 5/CD/5 /CD/) uniques/NNS/uniques Ã/:/Ã /:/ set/NN/set 6/CD/6 /CD/) foreach/NN/foreach word/NN/word in/IN/in words/NNS/words 7/CD/7 /CD/) uniques.add/JJ/uniques.add /NN/( word.strip/NN/word.strip /:/( /:/) /:/) 8/CD/8 /CD/) end/NN/end foreach/NN/foreach 9/CD/9 /CD/) return/NN/return words.length/JJ/words.length Â/NN/Â ¡/:/¡ uniques.count/JJ/uniques.count 10/CD/10 /CD/) end/NN/end repeatedwordcount/NN/repeatedwordcount you/PRP/you will/MD/will notice/VB/notice in/IN/in the/DT/the repeatedwordcount/NN/repeatedwordcount algorithm/NN/algorithm that/WDT/that we/PRP/we use/VBP/use the/DT/the strip/NN/strip method/NN/method we/PRP/we referred/VBD/referred to/TO/to earlier/JJR/earlier in/IN/in x11.1/NNP/x11.1. this/DT/this simply/NN/simply removes/VBZ/removes any/DT/any punctuation/NN/punctuation from/IN/from a/DT/a word/NNP/word. the/DT/the reason/NN/reason we/PRP/we perform/NN/perform this/DT/this operation/NN/operation on/IN/on each/DT/each word/NN/word is/VBZ/is so/RB/so that/IN/that we/PRP/we can/MD/can build/VB/build a/DT/a more/RBR/more accurate/JJ/accurate unique/NN/unique string/NN/string collection/NN/collection /,/, e.g/NNP/e.g. \/NNP/\ test/NN/test "/:/" /,/, and/CC/and \/:/\ test/NN/test !/./! "/:/" are/VBP/are the/DT/the same/JJ/same word/NN/word minus/NN/minus the/DT/the punctuation/NNP/punctuation. figure/NN/figure 11.4/CD/11.4 shows/NNS/shows the/DT/the undesired/VBN/undesired and/CC/and desired/VBN/desired sets/NNS/sets for/IN/for the/DT/the unique/JJ/unique set/NN/set respectively/RB/respectively /./. 11.5/CD/11.5 determining/VBG/determining the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst matching/NN/matching character/NN/character between/IN/between two/CD/two strings/NNS/strings the/DT/the algorithm/NN/algorithm to/TO/to determine/VB/determine whether/IN/whether any/DT/any character/NN/character of/IN/of a/DT/a string/NN/string matches/VBZ/matches any/DT/any of/IN/of the/DT/the characters/NNS/characters in/IN/in another/DT/another string/NN/string is/VBZ/is pretty/RB/pretty trivial/NNP/trivial. put/VBD/put simply/RB/simply /,/, we/PRP/we can/MD/can parse/VB/parse the/DT/the strings/NNS/strings considered/VBN/considered using/VBG/using a/DT/a double/JJ/double loop/NN/loop and/CC/and check/NN/check /,/, discarding/VBG/discarding punctuation/NN/punctuation /,/, the/DT/the equality/NN/equality between/IN/between any/DT/any characters/NNS/characters thus/RB/thus returning/VBG/returning a/DT/a non-negative/JJ/non-negative index/NN/index that/WDT/that represents/VBZ/represents the/DT/the location/NN/location of/IN/of the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst character/NN/character in/IN/in the/DT/the match/NN/match /:/( figure/NN/figure 11.5/CD/11.5 /CD/) ;/:/; otherwise/NN/otherwise we/PRP/we return/VBP/return -1/-NONE-/-1 if/IN/if no/DT/no match/NN/match occurs/NNP/occurs. this/DT/this approach/NN/approach exhibit/NN/exhibit a/DT/a run/NN/run time/NN/time complexity/NN/complexity of/IN/of o/NN/o /:/( n2/NNP/n2 /:/) /./. chapter/NN/chapter 11/CD/11. strings/NNS/strings 85/CD/85 t/NN/t e/NN/e s/NNS/s t/VBP/t 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 p/NN/p t/NN/t e/NN/e r/NN/r s/NNS/s 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 word/NN/word match/NN/match i/PRP/i t/VBP/t e/JJ/e s/NNS/s t/VBP/t 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 p/NN/p t/NN/t e/NN/e r/NN/r s/NNS/s 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 i/PRP/i index/NN/index t/VBD/t e/NN/e s/NNS/s t/VBP/t 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 p/NN/p t/NN/t e/NN/e r/NN/r s/NNS/s 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 i/PRP/i index/NN/index index/NN/index a/DT/a /NN/) b/NN/b /:/) c/NN/c /:/) figure/NN/figure 11.5/CD/11.5 /:/: a/DT/a /NN/) first/RB/first step/VB/step ;/:/; b/NN/b /:/) second/JJ/second step/NN/step c/NN/c /:/) match/NN/match occurred/VBD/occurred 1/CD/1 /CD/) algorithm/NN/algorithm any/DT/any /NN/( word,match/NN/word,match /:/) 2/CD/2 /CD/) pre/NN/pre /:/: word/NN/word ;/:/; match/NN/match 6/CD/6 =/CD/= ;/:/; 3/CD/3 /CD/) post/NN/post /:/: index/NN/index representing/VBG/representing match/NN/match location/NN/location if/IN/if occured/VBN/occured /,/, Â/NNP/Â ¡/NNP/¡ 1/CD/1 otherwise/NN/otherwise 4/CD/4 /CD/) for/IN/for i/PRP/i Ã/VBP/Ã /:/ 0/-NONE-/0 to/TO/to word/VB/word /:/: length/NN/length Â/:/Â ¡/:/¡ 1/CD/1 5/CD/5 /CD/) while/IN/while word/NN/word /:/[ i/PRP/i /VBP/] =/:/= whitespace/NN/whitespace 6/CD/6 /CD/) i/PRP/i Ã/VBP/Ã /:/ i/PRP/i +/VBP/+ 1/CD/1 7/CD/7 /CD/) end/NN/end while/IN/while 8/CD/8 /CD/) for/IN/for index/NN/index Ã/:/Ã /:/ 0/-NONE-/0 to/TO/to match/VB/match /:/: length/NN/length Â/:/Â ¡/:/¡ 1/CD/1 9/CD/9 /CD/) while/IN/while match/NN/match /:/[ index/NN/index /:/] =/:/= whitespace/NN/whitespace 10/CD/10 /CD/) index/NN/index Ã/:/Ã /:/ index/NN/index +/:/+ 1/CD/1 11/CD/11 /CD/) end/NN/end while/IN/while 12/CD/12 /CD/) if/IN/if match/NN/match /:/[ index/NN/index /:/] =/:/= word/NN/word /:/[ i/PRP/i /VBP/] 13/CD/13 /CD/) return/NN/return index/NN/index 14/CD/14 /CD/) end/NN/end if/IN/if 15/CD/15 /CD/) end/NN/end for/IN/for 16/CD/16 /CD/) end/NN/end for/IN/for 17/CD/17 /CD/) return/NN/return Â/:/Â ¡/:/¡ 1/CD/1 18/CD/18 /CD/) end/NN/end any/DT/any 11.6/CD/11.6 summary/NN/summary we/PRP/we hope/VBP/hope that/IN/that the/DT/the reader/NN/reader has/VBZ/has seen/VBN/seen how/WRB/how fun/JJ/fun algorithms/NNS/algorithms on/IN/on string/VBG/string data/NNS/data types/NNS/types are/NNP/are. strings/NNS/strings are/VBP/are probably/RB/probably the/DT/the most/RBS/most common/JJ/common data/NNS/data type/NN/type /:/( and/CC/and data/NNS/data structure/VBP/structure /:/- remember/NN/remember we/PRP/we are/VBP/are dealing/VBG/dealing with/IN/with an/DT/an array/NN/array /:/) that/IN/that you/PRP/you will/MD/will work/VB/work with/IN/with so/RB/so its/PRP$/its important/JJ/important that/IN/that you/PRP/you learn/VBP/learn to/TO/to be/VB/be creative/JJ/creative with/IN/with them/NNP/them. we/PRP/we for/IN/for one/CD/one Â/CD/Â ¯/CD/¯ nd/NN/nd strings/NNS/strings fascinating/NNP/fascinating. a/DT/a simple/JJ/simple google/NN/google search/NN/search on/IN/on string/NN/string nuances/NNS/nuances between/IN/between languages/NNS/languages and/CC/and encodings/NNS/encodings will/MD/will provide/VB/provide you/PRP/you with/IN/with a/DT/a great/JJ/great number/NN/number of/IN/of problems/NNP/problems. now/RB/now that/WDT/that we/PRP/we have/VBP/have spurred/VBN/spurred you/PRP/you along/IN/along a/DT/a little/RB/little with/IN/with our/PRP$/our introductory/NN/introductory algorithms/NNS/algorithms you/PRP/you can/MD/can devise/VB/devise some/DT/some of/IN/of your/PRP$/your own/JJ/own /./. appendix/NN/appendix a/DT/a algorithm/NN/algorithm walkthrough/IN/walkthrough learning/NN/learning how/WRB/how to/TO/to design/VB/design good/JJ/good algorithms/NNS/algorithms can/MD/can be/VB/be assisted/VBN/assisted greatly/RB/greatly by/IN/by using/VBG/using a/DT/a structured/JJ/structured approach/NN/approach to/TO/to tracing/NN/tracing its/PRP$/its behaviour/NNP/behaviour. in/IN/in most/JJS/most cases/NNS/cases tracing/VBG/tracing an/DT/an algorithm/NN/algorithm only/RB/only requires/VBZ/requires a/DT/a single/JJ/single table/NNP/table. in/IN/in most/JJS/most cases/NNS/cases tracing/VBG/tracing is/VBZ/is not/RB/not enough/RB/enough /,/, you/PRP/you will/MD/will also/RB/also want/VB/want to/TO/to use/VB/use a/DT/a diagram/NN/diagram of/IN/of the/DT/the data/NNS/data structure/VBP/structure your/PRP$/your algorithm/NN/algorithm operates/VBZ/operates on/NNP/on. this/DT/this diagram/NN/diagram will/MD/will be/VB/be used/VBN/used to/TO/to visualise/VB/visualise the/DT/the problem/NN/problem more/JJR/more e/NN/e Â/:/Â ®/:/® ectively/NNP/ectively. seeing/NN/seeing things/NNS/things visually/RB/visually can/MD/can help/VB/help you/PRP/you understand/VB/understand the/DT/the problem/NN/problem quicker/NN/quicker /,/, and/CC/and better/JJR/better /./. the/DT/the trace/NN/trace table/NN/table will/MD/will store/VB/store information/NN/information about/IN/about the/DT/the variables/NNS/variables used/VBN/used in/IN/in your/PRP$/your algo/NN/algo- rithm/NNP/rithm. the/DT/the values/NNS/values within/IN/within this/DT/this table/NN/table are/VBP/are constantly/RB/constantly updated/VBN/updated when/WRB/when the/DT/the algorithm/NN/algorithm mutates/VBZ/mutates them/NNP/them. such/JJ/such an/DT/an approach/NN/approach allows/VBZ/allows you/PRP/you to/TO/to attain/VB/attain a/DT/a history/NN/history of/IN/of the/DT/the various/JJ/various values/NNS/values each/DT/each variable/JJ/variable has/VBZ/has held/NNP/held. you/PRP/you may/MD/may also/RB/also be/VB/be able/JJ/able to/TO/to infer/VB/infer patterns/NNS/patterns from/IN/from the/DT/the values/NNS/values each/DT/each variable/JJ/variable has/VBZ/has contained/VBN/contained so/RB/so that/IN/that you/PRP/you can/MD/can make/VB/make your/PRP$/your algorithm/NN/algorithm more/JJR/more e/NN/e Â/:/Â ±/:/± cient/NN/cient /./. we/PRP/we have/VBP/have found/VBN/found this/DT/this approach/NN/approach both/DT/both simple/NN/simple /,/, and/CC/and powerful/NNP/powerful. by/IN/by combining/NN/combining a/DT/a visual/JJ/visual representation/NN/representation of/IN/of the/DT/the problem/NN/problem as/IN/as well/RB/well as/IN/as having/VBG/having a/DT/a history/NN/history of/IN/of past/JJ/past values/NNS/values generated/VBN/generated by/IN/by the/DT/the algorithm/NN/algorithm it/PRP/it can/MD/can make/VB/make understanding/NN/understanding /,/, and/CC/and solving/VBG/solving problems/NNS/problems much/RB/much easier/JJR/easier /./. in/IN/in this/DT/this chapter/NN/chapter we/PRP/we will/MD/will show/VB/show you/PRP/you how/WRB/how to/TO/to work/VB/work through/IN/through both/DT/both iterative/JJ/iterative /,/, and/CC/and recursive/JJ/recursive algorithms/NNS/algorithms using/VBG/using the/DT/the technique/NN/technique outlined/VBD/outlined /./. a.1/-NONE-/a.1 iterative/JJ/iterative algorithms/NNS/algorithms we/PRP/we will/MD/will trace/VB/trace the/DT/the ispalindrome/NN/ispalindrome algorithm/NN/algorithm /:/( de/IN/de Â/CD/Â ¯/CD/¯ ned/VBN/ned in/IN/in x11.2/-NONE-/x11.2 /:/) as/IN/as our/PRP$/our example/NN/example iterative/NN/iterative walkthrough/NNP/walkthrough. before/IN/before we/PRP/we even/RB/even look/VBP/look at/IN/at the/DT/the variables/NNS/variables the/DT/the algorithm/NN/algorithm uses/VBZ/uses /,/, Â/:/Â ¯/:/¯ rst/JJ/rst we/PRP/we will/MD/will look/VB/look at/IN/at the/DT/the actual/JJ/actual data/NNS/data structure/NN/structure the/DT/the algorithm/NN/algorithm operates/VBZ/operates on/NNP/on. it/PRP/it should/MD/should be/VB/be pretty/RB/pretty obvious/JJ/obvious that/IN/that we/PRP/we are/VBP/are operating/VBG/operating on/IN/on a/DT/a string/NN/string /,/, but/CC/but how/WRB/how is/VBZ/is this/DT/this represented/VBN/represented ?/./? a/DT/a string/NN/string is/VBZ/is essentially/RB/essentially a/DT/a block/NN/block of/IN/of contiguous/JJ/contiguous memory/NN/memory that/WDT/that consists/VBZ/consists of/IN/of some/DT/some char/NN/char data/NNS/data types/NNS/types /,/, one/CD/one after/IN/after the/DT/the other/NNP/other. each/DT/each character/NN/character in/IN/in the/DT/the string/NN/string can/MD/can be/VB/be accessed/VBN/accessed via/IN/via an/DT/an index/NN/index much/RB/much like/IN/like you/PRP/you would/MD/would do/VB/do when/WRB/when accessing/VBG/accessing items/NNS/items within/IN/within an/DT/an array/NNP/array. the/DT/the picture/NN/picture should/MD/should be/VB/be presenting/VBG/presenting itself/PRP/itself /:/- a/DT/a string/NN/string can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as an/DT/an array/NN/array of/IN/of characters/NNS/characters /./. for/IN/for our/PRP$/our example/NN/example we/PRP/we will/MD/will use/VB/use ispalindrome/NN/ispalindrome to/TO/to operate/VB/operate on/IN/on the/DT/the string/NN/string \/:/\ never/RB/never odd/JJ/odd or/CC/or even/RB/even "/:/" now/RB/now we/PRP/we know/VBP/know how/WRB/how the/DT/the string/NN/string data/NNS/data structure/NN/structure is/VBZ/is represented/VBN/represented /,/, and/CC/and the/DT/the value/NN/value of/IN/of the/DT/the string/NN/string we/PRP/we will/MD/will operate/VB/operate on/IN/on let/NN/let 's/POS/'s go/NN/go ahead/RB/ahead and/CC/and draw/VB/draw it/PRP/it as/IN/as shown/JJ/shown in/IN/in figure/NN/figure a.1/-NONE-/a.1 /./. 86/CD/86 appendix/CD/appendix a/NNP/a. algorithm/NN/algorithm walkthrough/IN/walkthrough 87/CD/87 figure/NN/figure a.1/-NONE-/a.1 /:/: visualising/VBG/visualising the/DT/the data/NNS/data structure/VBP/structure we/PRP/we are/VBP/are operating/VBG/operating on/IN/on value/NN/value word/NN/word left/VBD/left right/RB/right table/JJ/table a.1/-NONE-/a.1 /:/: a/DT/a column/NN/column for/IN/for each/DT/each variable/JJ/variable we/PRP/we wish/VBP/wish to/TO/to track/VB/track the/DT/the ispalindrome/NN/ispalindrome algorithm/NN/algorithm uses/NNS/uses the/DT/the following/VBG/following list/NN/list of/IN/of variables/NNS/variables in/IN/in some/DT/some form/NN/form throughout/IN/throughout its/PRP$/its execution/NN/execution /:/: 1/CD/1. value/NN/value 2/CD/2. word/NN/word 3/CD/3. left/VBN/left 4/CD/4. right/RB/right having/VBG/having identi/NN/identi Â/:/Â ¯/:/¯ ed/VBD/ed the/DT/the values/NNS/values of/IN/of the/DT/the variables/NNS/variables we/PRP/we need/VBP/need to/TO/to keep/VB/keep track/NN/track of/IN/of we/PRP/we simply/RB/simply create/VBP/create a/DT/a column/NN/column for/IN/for each/DT/each in/IN/in a/DT/a table/NN/table as/IN/as shown/NN/shown in/IN/in table/JJ/table a.1/NN/a.1 /./. now/RB/now /,/, using/VBG/using the/DT/the ispalindrome/NN/ispalindrome algorithm/NN/algorithm execute/NN/execute each/DT/each statement/NN/statement updating/VBG/updating the/DT/the variable/JJ/variable values/NNS/values in/IN/in the/DT/the table/NN/table appropriately/NNP/appropriately. table/NN/table a.2/-NONE-/a.2 shows/VBZ/shows the/DT/the Â/NN/Â ¯/:/¯ nal/JJ/nal table/JJ/table values/NNS/values for/IN/for each/DT/each variable/JJ/variable used/JJ/used in/IN/in ispalindrome/NN/ispalindrome respectively/RB/respectively /./. while/IN/while this/DT/this approach/NN/approach may/MD/may look/VB/look a/DT/a little/RB/little bloated/VBN/bloated in/IN/in print/NN/print /,/, on/IN/on paper/NN/paper it/PRP/it is/VBZ/is much/RB/much more/RBR/more compact/NNP/compact. where/WRB/where we/PRP/we have/VBP/have the/DT/the strings/NNS/strings in/IN/in the/DT/the table/NN/table you/PRP/you should/MD/should annotate/VB/annotate these/DT/these strings/NNS/strings with/IN/with array/NN/array indexes/NNS/indexes to/TO/to aid/VB/aid the/DT/the algorithm/NN/algorithm walkthrough/IN/walkthrough /./. there/EX/there is/VBZ/is one/CD/one other/JJ/other point/NN/point that/IN/that we/PRP/we should/MD/should clarify/VB/clarify at/IN/at this/DT/this time/NN/time /:/- whether/IN/whether to/TO/to include/VB/include variables/NNS/variables that/WDT/that change/NN/change only/RB/only a/DT/a few/JJ/few times/NNS/times /,/, or/CC/or not/RB/not at/IN/at all/DT/all in/IN/in the/DT/the trace/NN/trace table/NN/table /./. in/IN/in table/JJ/table a.2/NN/a.2 we/PRP/we have/VBP/have included/VBN/included both/DT/both the/DT/the value/NN/value /,/, and/CC/and word/NN/word variables/NNS/variables because/IN/because it/PRP/it was/VBD/was convenient/JJ/convenient to/TO/to do/VB/do so/NNP/so. you/PRP/you may/MD/may Â/VB/Â ¯/:/¯ nd/NN/nd that/IN/that you/PRP/you want/VBP/want to/TO/to promote/VB/promote these/DT/these values/NNS/values to/TO/to a/DT/a larger/JJR/larger diagram/NN/diagram /:/( like/IN/like that/DT/that in/IN/in figure/NN/figure a.1/-NONE-/a.1 /./) and/CC/and only/RB/only use/VBP/use the/DT/the trace/NN/trace table/NN/table for/IN/for variables/NNS/variables whose/WP$/whose values/NNS/values change/VBP/change during/IN/during the/DT/the algorithm/NNP/algorithm. we/PRP/we recommend/VBP/recommend that/IN/that you/PRP/you promote/VBP/promote the/DT/the core/NN/core data/NNS/data structure/NN/structure being/VBG/being operated/VBN/operated on/IN/on to/TO/to a/DT/a larger/JJR/larger diagram/NN/diagram outside/IN/outside of/IN/of the/DT/the table/NN/table so/RB/so that/IN/that you/PRP/you can/MD/can interrogate/VB/interrogate it/PRP/it more/JJR/more easily/RB/easily /./. value/NN/value word/NN/word left/VBD/left right/RB/right \/:/\ never/RB/never odd/JJ/odd or/CC/or even/RB/even "/:/" \/:/\ neveroddoreven/RB/neveroddoreven "/:/" 0/-NONE-/0 13/CD/13 1/CD/1 12/CD/12 2/CD/2 11/CD/11 3/CD/3 10/CD/10 4/CD/4 9/CD/9 5/CD/5 8/CD/8 6/CD/6 7/CD/7 7/CD/7 6/CD/6 table/JJ/table a.2/-NONE-/a.2 /:/: algorithm/NN/algorithm trace/NN/trace for/IN/for ispalindrome/NN/ispalindrome appendix/NN/appendix a/NNP/a. algorithm/NN/algorithm walkthrough/IN/walkthrough 88/CD/88 we/PRP/we can/MD/can not/RB/not stress/VB/stress enough/RB/enough how/WRB/how important/JJ/important such/JJ/such traces/NNS/traces are/VBP/are when/WRB/when designing/VBG/designing your/PRP$/your algorithm/NNP/algorithm. you/PRP/you can/MD/can use/VB/use these/DT/these trace/NN/trace tables/NNS/tables to/TO/to verify/VB/verify algorithm/NN/algorithm correctness/NN/correctness /./. at/IN/at the/DT/the cost/NN/cost of/IN/of a/DT/a simple/JJ/simple table/JJ/table /,/, and/CC/and quick/JJ/quick sketch/NN/sketch of/IN/of the/DT/the data/NNS/data structure/VBP/structure you/PRP/you are/VBP/are operating/VBG/operating on/IN/on you/PRP/you can/MD/can devise/VB/devise correct/JJ/correct algorithms/NNS/algorithms quicker/NNP/quicker. visualising/VBG/visualising the/DT/the problem/NN/problem domain/NN/domain and/CC/and keeping/VBG/keeping track/NN/track of/IN/of changing/NN/changing data/NNS/data makes/VBZ/makes problems/NNS/problems a/DT/a lot/NN/lot easier/NN/easier to/TO/to solve/VB/solve /./. moreover/RB/moreover you/PRP/you always/RB/always have/VBP/have a/DT/a point/NN/point of/IN/of reference/NN/reference which/WDT/which you/PRP/you can/MD/can look/VB/look back/RB/back on/IN/on /./. a.2/-NONE-/a.2 recursive/JJ/recursive algorithms/NNS/algorithms for/IN/for the/DT/the most/JJS/most part/NN/part working/VBG/working through/IN/through recursive/JJ/recursive algorithms/NNS/algorithms is/VBZ/is as/RB/as simple/JJ/simple as/IN/as walking/NN/walking through/IN/through an/DT/an iterative/JJ/iterative algorithm/NNP/algorithm. one/CD/one of/IN/of the/DT/the things/NNS/things that/IN/that we/PRP/we need/VBP/need to/TO/to keep/VB/keep track/NN/track of/IN/of though/IN/though is/VBZ/is which/WDT/which method/NN/method call/MD/call returns/NNS/returns to/TO/to who/NNP/who. most/JJS/most recursive/JJ/recursive algorithms/NNS/algorithms are/VBP/are much/RB/much simple/JJ/simple to/TO/to follow/VB/follow when/WRB/when you/PRP/you draw/VBP/draw out/RP/out the/DT/the recursive/JJ/recursive calls/NNS/calls rather/RB/rather than/IN/than using/VBG/using a/DT/a table/JJ/table based/VBN/based approach/NNP/approach. in/IN/in this/DT/this section/NN/section we/PRP/we will/MD/will use/VB/use a/DT/a recursive/JJ/recursive implementation/NN/implementation of/IN/of an/DT/an algorithm/NN/algorithm that/IN/that computes/NNS/computes a/DT/a number/NN/number from/IN/from the/DT/the fiboncacci/NN/fiboncacci sequence/NN/sequence /./. 1/CD/1 /CD/) algorithm/NN/algorithm fibonacci/NN/fibonacci /:/( n/NN/n /:/) 2/CD/2 /CD/) pre/NN/pre /:/: n/NN/n is/VBZ/is the/DT/the number/NN/number in/IN/in the/DT/the Â/NN/Â ¯/:/¯ bonacci/NN/bonacci sequence/NN/sequence to/TO/to compute/VB/compute 3/CD/3 /CD/) post/NN/post /:/: the/DT/the Â/NN/Â ¯/:/¯ bonacci/NN/bonacci sequence/NN/sequence number/NN/number n/NN/n has/VBZ/has been/VBN/been computed/VBN/computed 4/CD/4 /CD/) if/IN/if n/NN/n </:/< 1/CD/1 5/CD/5 /CD/) return/NN/return 0/-NONE-/0 6/CD/6 /:/) else/RB/else if/IN/if n/JJ/n </NN/< 2/CD/2 7/CD/7 /CD/) return/NN/return 1/CD/1 8/CD/8 /CD/) end/NN/end if/IN/if 9/CD/9 /CD/) return/NN/return fibonacci/NN/fibonacci /:/( n/NN/n Â/:/Â ¡/:/¡ 1/CD/1 /CD/) +/CD/+ fibonacci/NN/fibonacci /:/( n/NN/n Â/:/Â ¡/:/¡ 2/CD/2 /CD/) 10/CD/10 /CD/) end/NN/end fibonacci/NN/fibonacci before/IN/before we/PRP/we jump/VBP/jump into/IN/into showing/VBG/showing you/PRP/you a/DT/a diagrammtic/JJ/diagrammtic representation/NN/representation of/IN/of the/DT/the algo/JJ/algo- rithm/NN/rithm calls/VBZ/calls for/IN/for the/DT/the fibonacci/NN/fibonacci algorithm/NN/algorithm we/PRP/we will/MD/will brie/VB/brie Â/:/Â °/:/° y/NN/y talk/NN/talk about/IN/about the/DT/the cases/NNS/cases of/IN/of the/DT/the algorithm/NNP/algorithm. the/DT/the algorithm/NN/algorithm has/VBZ/has three/CD/three cases/NNS/cases in/IN/in total/JJ/total /:/: 1/CD/1. n/NN/n </:/< 1/CD/1 2/CD/2. n/NN/n </:/< 2/CD/2 3/CD/3. n/NN/n Â/:/Â ¸/:/¸ 2/CD/2 the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst two/CD/two items/NNS/items in/IN/in the/DT/the preceeding/NN/preceeding list/NN/list are/VBP/are the/DT/the base/NN/base cases/NNS/cases of/IN/of the/DT/the algorithm/NN/algorithm /./. until/IN/until we/PRP/we hit/VBP/hit one/CD/one of/IN/of our/PRP$/our base/NN/base cases/NNS/cases in/IN/in our/PRP$/our recursive/JJ/recursive method/NN/method call/NN/call tree/NN/tree we/PRP/we wo/MD/wo n't/RB/n't return/VB/return anything/NNP/anything. the/DT/the third/JJ/third item/NN/item from/IN/from the/DT/the list/NN/list is/VBZ/is our/PRP$/our recursive/JJ/recursive case/NN/case /./. with/IN/with each/DT/each call/NN/call to/TO/to the/DT/the recursive/JJ/recursive case/NN/case we/PRP/we etch/VBP/etch ever/RB/ever closer/JJR/closer to/TO/to one/CD/one of/IN/of our/PRP$/our base/NN/base cases/NNP/cases. figure/NN/figure a.2/-NONE-/a.2 shows/VBZ/shows a/DT/a diagrammtic/JJ/diagrammtic representation/NN/representation of/IN/of the/DT/the recursive/JJ/recursive call/NN/call chain/NN/chain /./. in/IN/in figure/NN/figure a.2/-NONE-/a.2 the/DT/the order/NN/order in/IN/in which/WDT/which the/DT/the methods/NNS/methods are/VBP/are called/VBN/called are/VBP/are labelled/NNP/labelled. figure/NN/figure a.3/-NONE-/a.3 shows/VBZ/shows the/DT/the call/NN/call chain/NN/chain annotated/VBD/annotated with/IN/with the/DT/the return/NN/return values/VBZ/values of/IN/of each/DT/each method/NN/method call/NN/call as/IN/as well/RB/well as/IN/as the/DT/the order/NN/order in/IN/in which/WDT/which methods/NNS/methods return/VBP/return to/TO/to their/PRP$/their callers/NNP/callers. in/IN/in figure/NN/figure a.3/-NONE-/a.3 the/DT/the return/NN/return values/VBZ/values are/VBP/are represented/VBN/represented as/IN/as annotations/NNS/annotations to/TO/to the/DT/the red/NN/red arrows/VBZ/arrows /./. it/PRP/it is/VBZ/is important/JJ/important to/TO/to note/VB/note that/IN/that each/DT/each recursive/JJ/recursive call/NN/call only/RB/only ever/RB/ever returns/NNS/returns to/TO/to its/PRP$/its caller/NN/caller upon/IN/upon hitting/VBG/hitting one/CD/one of/IN/of the/DT/the two/CD/two base/NN/base cases/NNP/cases. when/WRB/when you/PRP/you do/VBP/do eventually/RB/eventually hit/VB/hit a/DT/a base/NN/base case/NN/case that/WDT/that branch/NN/branch of/IN/of recursive/JJ/recursive calls/NNS/calls ceases/NNP/ceases. upon/IN/upon hitting/VBG/hitting a/DT/a base/NN/base case/NN/case you/PRP/you go/VBP/go back/RB/back to/TO/to appendix/VB/appendix a/NNP/a. algorithm/NN/algorithm walkthrough/IN/walkthrough 89/CD/89 figure/NN/figure a.2/-NONE-/a.2 /:/: call/NN/call chain/NN/chain for/IN/for fibonacci/NN/fibonacci algorithm/NN/algorithm figure/NN/figure a.3/-NONE-/a.3 /:/: return/NN/return chain/NN/chain for/IN/for fibonacci/NN/fibonacci algorithm/NN/algorithm appendix/NN/appendix a/NNP/a. algorithm/NN/algorithm walkthrough/IN/walkthrough 90/CD/90 the/DT/the caller/NN/caller and/CC/and continue/VB/continue execution/NN/execution of/IN/of that/DT/that method/NNP/method. execution/NN/execution in/IN/in the/DT/the caller/NN/caller is/VBZ/is contiued/VBN/contiued at/IN/at the/DT/the next/JJ/next statement/NN/statement /,/, or/CC/or expression/NN/expression after/IN/after the/DT/the recursive/JJ/recursive call/NN/call was/VBD/was made/VBN/made /./. in/IN/in the/DT/the fibonacci/NN/fibonacci algorithms/NNS/algorithms '/POS/' recursive/JJ/recursive case/NN/case we/PRP/we make/VBP/make two/CD/two recursive/JJ/recursive calls/NNS/calls /./. when/WRB/when the/DT/the Â/NNP/Â ¯/NNP/¯ rst/NN/rst recursive/JJ/recursive call/NN/call /:/( fibonacci/NN/fibonacci /:/( n/NN/n Â/:/Â ¡/:/¡ 1/CD/1 /CD/) /CD/) returns/NNS/returns to/TO/to the/DT/the caller/NN/caller we/PRP/we then/RB/then execute/VBP/execute the/DT/the the/DT/the second/JJ/second recursive/JJ/recursive call/NN/call /:/( fibonacci/NN/fibonacci /:/( n/NN/n Â/:/Â ¡/:/¡ 2/CD/2 /CD/) /CD/) /./. after/IN/after both/DT/both recursive/JJ/recursive calls/NNS/calls have/VBP/have returned/VBN/returned to/TO/to their/PRP$/their caller/NN/caller /,/, the/DT/the caller/NN/caller can/MD/can then/RB/then subesequently/RB/subesequently return/NN/return to/TO/to its/PRP$/its caller/NN/caller and/CC/and so/RB/so on/IN/on /./. recursive/JJ/recursive algorithms/NNS/algorithms are/VBP/are much/RB/much easier/JJR/easier to/TO/to demonstrate/VB/demonstrate diagrammatically/RB/diagrammatically as/IN/as figure/NN/figure a.2/-NONE-/a.2 demonstrates/NNP/demonstrates. when/WRB/when you/PRP/you come/VBP/come across/RP/across a/DT/a recursive/JJ/recursive algorithm/NN/algorithm draw/NN/draw method/NN/method call/NN/call diagrams/NNS/diagrams to/TO/to understand/VB/understand how/WRB/how the/DT/the algorithm/NN/algorithm works/VBZ/works at/IN/at a/DT/a high/JJ/high level/NN/level /./. a.3/-NONE-/a.3 summary/JJ/summary understanding/NN/understanding algorithms/NNS/algorithms can/MD/can be/VB/be hard/RB/hard at/IN/at times/NNS/times /,/, particularly/RB/particularly from/IN/from an/DT/an implemen/JJ/implemen- tation/NN/tation perspective/NNP/perspective. in/IN/in order/NN/order to/TO/to understand/VB/understand an/DT/an algorithm/NN/algorithm try/NN/try and/CC/and work/VB/work through/IN/through it/PRP/it using/VBG/using trace/NN/trace tables/NNP/tables. in/IN/in cases/NNS/cases where/WRB/where the/DT/the algorithm/NN/algorithm is/VBZ/is also/RB/also recursive/JJ/recursive sketch/NN/sketch the/DT/the recursive/JJ/recursive calls/NNS/calls out/IN/out so/RB/so you/PRP/you can/MD/can visualise/VB/visualise the/DT/the call/return/JJ/call/return chain/NN/chain /./. in/IN/in the/DT/the vast/JJ/vast majority/NN/majority of/IN/of cases/NNS/cases implementing/VBG/implementing an/DT/an algorithm/NN/algorithm is/VBZ/is simple/JJ/simple provided/VBN/provided that/IN/that you/PRP/you know/VBP/know how/WRB/how the/DT/the algorithm/NN/algorithm works/NNP/works. mastering/NN/mastering how/WRB/how an/DT/an algorithm/NN/algorithm works/VBZ/works from/IN/from a/DT/a high/JJ/high level/NN/level is/VBZ/is key/JJ/key for/IN/for devising/NN/devising a/DT/a well/RB/well designed/VBN/designed solution/NN/solution to/TO/to the/DT/the problem/NN/problem in/IN/in hand/NN/hand /./. appendix/NN/appendix b/NN/b translation/NN/translation walkthrough/IN/walkthrough the/DT/the conversion/NN/conversion from/IN/from pseudo/NN/pseudo to/TO/to an/DT/an actual/JJ/actual imperative/JJ/imperative language/NN/language is/VBZ/is usually/RB/usually very/RB/very straight/JJ/straight forward/NN/forward /,/, to/TO/to clarify/VB/clarify an/DT/an example/NN/example is/VBZ/is provided/NNP/provided. in/IN/in this/DT/this example/NN/example we/PRP/we will/MD/will convert/VB/convert the/DT/the algorithm/NN/algorithm in/IN/in x9.1/-NONE-/x9.1 to/TO/to the/DT/the c/NN/c #/#/# language/NN/language /./. 1/CD/1 /CD/) public/JJ/public static/JJ/static bool/NN/bool isprime/NN/isprime /:/( int/NN/int number/NN/number /:/) 2/CD/2 /CD/) f/NN/f 3/CD/3 /CD/) if/IN/if /CD/( number/NN/number </:/< 2/CD/2 /CD/) 4/CD/4 /CD/) f/NN/f 5/CD/5 /CD/) return/NN/return false/NN/false ;/:/; 6/CD/6 /CD/) g/NN/g 7/CD/7 /CD/) int/NN/int innerloopbound/NN/innerloopbound =/:/= /:/( int/NN/int /:/) math.floor/JJ/math.floor /NN/( math.sqrt/NN/math.sqrt /:/( number/NN/number /:/) /:/) ;/:/; 8/CD/8 /CD/) for/IN/for /CD/( int/NN/int i/PRP/i =/VBP/= 1/CD/1 ;/:/; i/PRP/i </VBP/< number/NN/number ;/:/; i/PRP/i +/VBP/+ +/:/+ /:/) 9/CD/9 /CD/) f/NN/f 10/CD/10 /CD/) for/IN/for /CD/( int/NN/int j/NN/j =/:/= 1/CD/1 ;/:/; j/NN/j </:/< =/:/= innerloopbound/NN/innerloopbound ;/:/; j/NN/j +/:/+ +/:/+ /:/) 11/CD/11 /CD/) f/NN/f 12/CD/12 /CD/) if/IN/if /CD/( i/PRP/i Â/VBP/Â ¤/:/¤ j/NN/j =/:/= =/:/= number/NN/number /:/) 13/CD/13 /CD/) f/NN/f 14/CD/14 /CD/) return/NN/return false/NN/false ;/:/; 15/CD/15 /CD/) g/NN/g 16/CD/16 /CD/) g/NN/g 17/CD/17 /CD/) g/NN/g 18/CD/18 /CD/) return/NN/return true/JJ/true ;/:/; 19/CD/19 /CD/) g/NN/g for/IN/for the/DT/the most/JJS/most part/NN/part the/DT/the conversion/NN/conversion is/VBZ/is a/DT/a straight/JJ/straight forward/NN/forward process/NN/process /,/, however/RB/however you/PRP/you may/MD/may have/VB/have to/TO/to inject/VB/inject various/JJ/various calls/NNS/calls to/TO/to other/JJ/other utility/NN/utility algorithms/NNS/algorithms to/TO/to ascertain/VB/ascertain the/DT/the correct/NN/correct result/NN/result /./. a/DT/a consideration/NN/consideration to/TO/to take/VB/take note/NN/note of/IN/of is/VBZ/is that/IN/that many/JJ/many algorithms/NNS/algorithms have/VBP/have fairly/RB/fairly strict/JJ/strict preconditions/NNS/preconditions /,/, of/IN/of which/WDT/which there/EX/there may/MD/may be/VB/be several/JJ/several /:/- in/IN/in these/DT/these scenarios/NNS/scenarios you/PRP/you will/MD/will need/VB/need to/TO/to inject/VB/inject the/DT/the correct/NN/correct code/NN/code to/TO/to handle/VB/handle such/JJ/such situations/NNS/situations to/TO/to preserve/VB/preserve the/DT/the correctness/NN/correctness of/IN/of the/DT/the algorithm/NNP/algorithm. most/JJS/most of/IN/of the/DT/the preconditions/NNS/preconditions can/MD/can be/VB/be suitably/RB/suitably handled/VBN/handled by/IN/by throwing/NN/throwing the/DT/the correct/NN/correct exception/NN/exception /./. 91/CD/91 appendix/CD/appendix b/NNP/b. translation/NN/translation walkthrough/IN/walkthrough 92/CD/92 b.1/-NONE-/b.1 summary/JJ/summary as/IN/as you/PRP/you can/MD/can see/VB/see from/IN/from the/DT/the example/NN/example used/VBD/used in/IN/in this/DT/this chapter/NN/chapter we/PRP/we have/VBP/have tried/VBN/tried to/TO/to make/VB/make the/DT/the translation/NN/translation of/IN/of our/PRP$/our pseudo/NN/pseudo code/NN/code algorithms/NNS/algorithms to/TO/to mainstream/VB/mainstream imperative/JJ/imperative languages/NNS/languages as/IN/as simple/JJ/simple as/IN/as possible/JJ/possible /./. whenever/NN/whenever you/PRP/you encounter/JJR/encounter a/DT/a keyword/NN/keyword within/IN/within our/PRP$/our pseudo/NN/pseudo code/NN/code examples/NNS/examples that/WDT/that you/PRP/you are/VBP/are unfamiliar/JJ/unfamiliar with/IN/with just/RB/just browse/JJ/browse to/TO/to appendix/VB/appendix e/NN/e which/WDT/which descirbes/VBZ/descirbes each/DT/each key/NN/key- word/NN/word /./. appendix/NN/appendix c/NN/c recursive/NN/recursive vs/NNP/vs. iterative/NN/iterative solutions/NNS/solutions one/CD/one of/IN/of the/DT/the most/RBS/most succinct/JJ/succinct properties/NNS/properties of/IN/of modern/JJ/modern programming/NN/programming languages/NNS/languages like/IN/like c/NN/c +/:/+ +/:/+ /,/, c/NN/c #/#/# /,/, and/CC/and java/NN/java /:/( as/IN/as well/RB/well as/IN/as many/JJ/many others/NNS/others /VBP/) is/VBZ/is that/IN/that these/DT/these languages/NNS/languages allow/VBP/allow you/PRP/you to/TO/to de/VB/de Â/:/Â ¯/:/¯ ne/NN/ne methods/NNS/methods that/WDT/that reference/NN/reference themselves/VBZ/themselves /,/, such/JJ/such methods/NNS/methods are/VBP/are said/VBN/said to/TO/to be/VB/be recursive/NNP/recursive. one/CD/one of/IN/of the/DT/the biggest/JJS/biggest advantages/NNS/advantages recursive/VBP/recursive methods/NNS/methods bring/VBG/bring to/TO/to the/DT/the table/NN/table is/VBZ/is that/IN/that they/PRP/they usually/RB/usually result/VBP/result in/IN/in more/JJR/more readable/JJ/readable /,/, and/CC/and compact/NN/compact solutions/NNS/solutions to/TO/to problems/NNS/problems /./. a/DT/a recursive/JJ/recursive method/NN/method then/RB/then is/VBZ/is one/CD/one that/WDT/that is/VBZ/is de/VBP/de Â/-NONE-/Â ¯/:/¯ ned/VBN/ned in/IN/in terms/NNS/terms of/IN/of itself/NNP/itself. generally/RB/generally a/DT/a recursive/JJ/recursive algorithms/NNS/algorithms has/VBZ/has two/CD/two main/JJ/main properties/NNS/properties /:/: 1/CD/1. one/CD/one or/CC/or more/JJR/more base/NN/base cases/NNS/cases ;/:/; and/CC/and 2/CD/2. a/DT/a recursive/JJ/recursive case/NN/case for/IN/for now/RB/now we/PRP/we will/MD/will brie/VB/brie Â/:/Â °/:/° y/NN/y cover/NN/cover these/DT/these two/CD/two aspects/NNS/aspects of/IN/of recursive/JJ/recursive algorithms/NNP/algorithms. with/IN/with each/DT/each recursive/JJ/recursive call/NN/call we/PRP/we should/MD/should be/VB/be making/VBG/making progress/NN/progress to/TO/to our/PRP$/our base/NN/base case/NN/case otherwise/NN/otherwise we/PRP/we are/VBP/are going/VBG/going to/TO/to run/VB/run into/IN/into trouble/NNP/trouble. the/DT/the trouble/NN/trouble we/PRP/we speak/VBP/speak of/IN/of manifests/NNS/manifests itself/PRP/itself typically/RB/typically as/IN/as a/DT/a stack/NN/stack over/IN/over Â/CD/Â °/CD/° ow/NN/ow /,/, we/PRP/we will/MD/will describe/VB/describe why/WRB/why later/JJ/later /./. now/RB/now that/IN/that we/PRP/we have/VBP/have brie/NN/brie Â/:/Â °/:/° y/NN/y described/VBD/described what/WP/what a/DT/a recursive/JJ/recursive algorithm/NN/algorithm is/VBZ/is and/CC/and why/WRB/why you/PRP/you might/MD/might want/VB/want to/TO/to use/VB/use such/JJ/such an/DT/an approach/NN/approach for/IN/for your/PRP$/your algorithms/NNS/algorithms we/PRP/we will/MD/will now/RB/now talk/VB/talk about/IN/about iterative/JJ/iterative solutions/NNP/solutions. an/DT/an iterative/JJ/iterative solution/NN/solution uses/NNS/uses no/DT/no recursion/NN/recursion whatsoever/NN/whatsoever /./. an/DT/an iterative/JJ/iterative solution/NN/solution relies/NNS/relies only/RB/only on/IN/on the/DT/the use/NN/use of/IN/of loops/NNS/loops /:/( e.g/NNP/e.g. for/IN/for /,/, while/IN/while /,/, do-while/JJ/do-while /,/, etc/NN/etc /:/) /./. the/DT/the down/NN/down side/NN/side to/TO/to iterative/VB/iterative algorithms/NNS/algorithms is/VBZ/is that/IN/that they/PRP/they tend/VBP/tend not/RB/not to/TO/to be/VB/be as/RB/as clear/JJ/clear as/IN/as to/TO/to their/PRP$/their recursive/JJ/recursive counterparts/NNS/counterparts with/IN/with respect/NN/respect to/TO/to their/PRP$/their operation/NNP/operation. the/DT/the major/JJ/major advantage/NN/advantage of/IN/of iterative/JJ/iterative solutions/NNS/solutions is/VBZ/is speed/NNP/speed. most/RBS/most production/NN/production software/NN/software you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd uses/NNS/uses little/RB/little or/CC/or no/DT/no recursive/JJ/recursive algorithms/NNS/algorithms whatsoever/NNP/whatsoever. the/DT/the latter/NN/latter property/NN/property can/MD/can sometimes/RB/sometimes be/VB/be a/DT/a companies/NNS/companies prerequisite/VBP/prerequisite to/TO/to checking/VBG/checking in/IN/in code/NN/code /,/, e.g/NNP/e.g. upon/IN/upon checking/VBG/checking in/IN/in a/DT/a static/JJ/static analysis/NN/analysis tool/NN/tool may/MD/may verify/VB/verify that/IN/that the/DT/the code/NN/code the/DT/the developer/NN/developer is/VBZ/is checking/VBG/checking in/IN/in contains/NNS/contains no/DT/no recursive/JJ/recursive algorithms/NNP/algorithms. normally/RB/normally it/PRP/it is/VBZ/is systems/NNS/systems level/NN/level code/NN/code that/WDT/that has/VBZ/has this/DT/this zero/NN/zero tolerance/NN/tolerance policy/NN/policy for/IN/for recursive/JJ/recursive algorithms/NNS/algorithms /./. using/VBG/using recursion/NN/recursion should/MD/should always/RB/always be/VB/be reserved/VBN/reserved for/IN/for fast/RB/fast algorithms/VBZ/algorithms /,/, you/PRP/you should/MD/should avoid/VB/avoid it/PRP/it for/IN/for the/DT/the following/VBG/following algorithm/NN/algorithm run/NN/run time/NN/time de/IN/de Â/CD/Â ¯/CD/¯ ciencies/NNS/ciencies /:/: 1/CD/1. o/NN/o /:/( n2/NNP/n2 /:/) 2/CD/2. o/NN/o /:/( n3/NNP/n3 /:/) 93/CD/93 appendix/CD/appendix c/NNP/c. recursive/JJ/recursive vs/NNP/vs. iterative/JJ/iterative solutions/NNS/solutions 94/CD/94 3/CD/3. o/NN/o /:/( 2n/CD/2n /CD/) if/IN/if you/PRP/you use/VBP/use recursion/NN/recursion for/IN/for algorithms/NNS/algorithms with/IN/with any/DT/any of/IN/of the/DT/the above/JJ/above run/NN/run time/NN/time e/NN/e Â/:/Â ±/:/± ciency/NN/ciency 's/POS/'s you/PRP/you are/VBP/are inviting/VBG/inviting trouble/NNP/trouble. the/DT/the growth/NN/growth rate/NN/rate of/IN/of these/DT/these algorithms/NNS/algorithms is/VBZ/is high/JJ/high and/CC/and in/IN/in most/JJS/most cases/NNS/cases such/JJ/such algorithms/NNS/algorithms will/MD/will lean/VB/lean very/RB/very heavily/RB/heavily on/IN/on techniques/NNS/techniques like/IN/like divide/NN/divide and/CC/and conquer/NNP/conquer. while/IN/while constantly/RB/constantly splitting/VBG/splitting problems/NNS/problems into/IN/into smaller/JJR/smaller problems/NNS/problems is/VBZ/is good/JJ/good practice/NN/practice /,/, in/IN/in these/DT/these cases/NNS/cases you/PRP/you are/VBP/are going/VBG/going to/TO/to be/VB/be spawning/VBG/spawning a/DT/a lot/NN/lot of/IN/of method/NN/method calls/NNP/calls. all/DT/all this/DT/this overhead/JJ/overhead /NN/( method/NN/method calls/VBZ/calls do/VBP/do n't/RB/n't come/VB/come that/IN/that cheap/NN/cheap /:/) will/MD/will soon/RB/soon pile/VB/pile up/RP/up and/CC/and either/DT/either cause/NN/cause your/PRP$/your algorithm/NN/algorithm to/TO/to run/VB/run a/DT/a lot/NN/lot slower/NN/slower than/IN/than expected/VBN/expected /,/, or/CC/or worse/VB/worse /,/, you/PRP/you will/MD/will run/VB/run out/RP/out of/IN/of stack/NN/stack space/NNP/space. when/WRB/when you/PRP/you exceed/VBP/exceed the/DT/the allotted/VBN/allotted stack/NN/stack space/NN/space for/IN/for a/DT/a thread/NN/thread the/DT/the process/NN/process will/MD/will be/VB/be shutdown/VBN/shutdown by/IN/by the/DT/the operating/NN/operating system/NNP/system. this/DT/this is/VBZ/is the/DT/the case/NN/case irrespective/NN/irrespective of/IN/of the/DT/the platform/NN/platform you/PRP/you use/VBP/use /,/, e.g/NNP/e.g. .net/JJ/.net /,/, or/CC/or native/JJ/native c/NN/c +/:/+ +/:/+ etc/NNP/etc. you/PRP/you can/MD/can ask/VB/ask for/IN/for a/DT/a bigger/JJR/bigger stack/NN/stack size/NN/size /,/, but/CC/but you/PRP/you typically/RB/typically only/RB/only want/VBP/want to/TO/to do/VB/do this/DT/this if/IN/if you/PRP/you have/VBP/have a/DT/a very/RB/very good/JJ/good reason/NN/reason to/TO/to do/VB/do so/RB/so /./. c.1/-NONE-/c.1 activation/NN/activation records/NNS/records an/DT/an activation/NN/activation record/NN/record is/VBZ/is created/VBN/created every/DT/every time/NN/time you/PRP/you invoke/VBP/invoke a/DT/a method/NNP/method. put/VBD/put simply/RB/simply an/DT/an activation/NN/activation record/NN/record is/VBZ/is something/NN/something that/IN/that is/VBZ/is put/VBN/put on/IN/on the/DT/the stack/NN/stack to/TO/to support/VB/support method/NN/method invocation/NNP/invocation. activation/NN/activation records/NNS/records take/VBP/take a/DT/a small/JJ/small amount/NN/amount of/IN/of time/NN/time to/TO/to create/VB/create /,/, and/CC/and are/VBP/are pretty/RB/pretty lightweight/RB/lightweight /./. normally/RB/normally an/DT/an activation/NN/activation record/NN/record for/IN/for a/DT/a method/NN/method call/NN/call is/VBZ/is as/IN/as follows/NNS/follows /:/( this/DT/this is/VBZ/is very/RB/very general/JJ/general /NN/) /:/: Â/:/Â ²/:/² the/DT/the actual/JJ/actual parameters/NNS/parameters of/IN/of the/DT/the method/NN/method are/VBP/are pushed/VBN/pushed onto/IN/onto the/DT/the stack/NN/stack Â/:/Â ²/:/² the/DT/the return/NN/return address/NN/address is/VBZ/is pushed/VBN/pushed onto/IN/onto the/DT/the stack/NN/stack Â/:/Â ²/:/² the/DT/the top-of-stack/JJ/top-of-stack index/NN/index is/VBZ/is incremented/VBN/incremented by/IN/by the/DT/the total/JJ/total amount/NN/amount of/IN/of memory/NN/memory required/VBN/required by/IN/by the/DT/the local/JJ/local variables/NNS/variables within/IN/within the/DT/the method/NN/method Â/:/Â ²/:/² a/DT/a jump/NN/jump is/VBZ/is made/VBN/made to/TO/to the/DT/the method/NN/method in/IN/in many/JJ/many recursive/JJ/recursive algorithms/NNS/algorithms operating/VBG/operating on/IN/on large/JJ/large data/NNS/data structures/NNS/structures /,/, or/CC/or algo/JJ/algo- rithms/NNS/rithms that/WDT/that are/VBP/are ine/VBP/ine Â/:/Â ±/:/± cient/NN/cient you/PRP/you will/MD/will run/VB/run out/RP/out of/IN/of stack/NN/stack space/NN/space quickly/NNP/quickly. consider/NN/consider an/DT/an algorithm/NN/algorithm that/IN/that when/WRB/when invoked/VBN/invoked given/VBN/given a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c value/NN/value it/PRP/it creates/VBZ/creates many/JJ/many recursive/JJ/recursive calls/NNP/calls. in/IN/in such/JJ/such a/DT/a case/NN/case a/DT/a big/JJ/big chunk/NN/chunk of/IN/of the/DT/the stack/NN/stack will/MD/will be/VB/be consumed/NNP/consumed. we/PRP/we will/MD/will have/VB/have to/TO/to wait/VB/wait until/IN/until the/DT/the activation/NN/activation records/NNS/records start/VB/start to/TO/to be/VB/be unwound/VBN/unwound after/IN/after the/DT/the nested/VBN/nested methods/NNS/methods in/IN/in the/DT/the call/NN/call chain/NN/chain exit/NN/exit and/CC/and return/NN/return to/TO/to their/PRP$/their respective/JJ/respective caller/NNP/caller. when/WRB/when a/DT/a method/NN/method exits/VBZ/exits it/PRP/it 's/VBZ/'s activation/NN/activation record/NN/record is/VBZ/is unwound/NNP/unwound. unwinding/NN/unwinding an/DT/an activation/NN/activation record/NN/record results/NNS/results in/IN/in several/JJ/several steps/NNS/steps /:/: 1/CD/1. the/DT/the top-of-stack/JJ/top-of-stack index/NN/index is/VBZ/is decremented/VBN/decremented by/IN/by the/DT/the total/JJ/total amount/NN/amount of/IN/of memory/NN/memory consumed/VBN/consumed by/IN/by the/DT/the method/NN/method 2/CD/2. the/DT/the return/NN/return address/NN/address is/VBZ/is popped/VBN/popped o/NN/o Â/:/Â ®/:/® the/DT/the stack/NN/stack 3/CD/3. the/DT/the top-of-stack/JJ/top-of-stack index/NN/index is/VBZ/is decremented/VBN/decremented by/IN/by the/DT/the total/JJ/total amount/NN/amount of/IN/of memory/NN/memory consumed/VBN/consumed by/IN/by the/DT/the actual/JJ/actual parameters/NNS/parameters appendix/VBP/appendix c/NNP/c. recursive/JJ/recursive vs/NNP/vs. iterative/JJ/iterative solutions/NNS/solutions 95/CD/95 while/IN/while activation/NN/activation records/NNS/records are/VBP/are an/DT/an e/NN/e Â/:/Â ±/:/± cient/NN/cient way/NN/way to/TO/to support/VB/support method/NN/method calls/NNS/calls they/PRP/they can/MD/can build/VB/build up/RP/up very/RB/very quickly/NNP/quickly. recursive/JJ/recursive algorithms/NNS/algorithms can/MD/can exhaust/VB/exhaust the/DT/the stack/NN/stack size/NN/size allocated/VBD/allocated to/TO/to the/DT/the thread/NN/thread fairly/RB/fairly fast/JJ/fast given/VBN/given the/DT/the chance/NN/chance /./. just/RB/just about/IN/about now/RB/now we/PRP/we should/MD/should be/VB/be dusting/VBG/dusting the/DT/the cobwebs/NNS/cobwebs o/VBP/o Â/:/Â ®/:/® the/DT/the age/NN/age old/JJ/old example/NN/example of/IN/of an/DT/an iterative/JJ/iterative vs/NNP/vs. recursive/JJ/recursive solution/NN/solution in/IN/in the/DT/the form/NN/form of/IN/of the/DT/the fibonacci/NN/fibonacci algorithm/NNP/algorithm. this/DT/this is/VBZ/is a/DT/a famous/JJ/famous example/NN/example as/IN/as it/PRP/it highlights/VBZ/highlights both/DT/both the/DT/the beauty/NN/beauty and/CC/and pitfalls/NNS/pitfalls of/IN/of a/DT/a recursive/JJ/recursive algorithm/NNP/algorithm. the/DT/the iterative/JJ/iterative solution/NN/solution is/VBZ/is not/RB/not as/IN/as pretty/RB/pretty /,/, nor/CC/nor self/PRP/self documenting/VBG/documenting but/CC/but it/PRP/it does/VBZ/does the/DT/the job/NN/job a/DT/a lot/NN/lot quicker/NNP/quicker. if/IN/if we/PRP/we were/VBD/were to/TO/to give/VB/give the/DT/the fibonacci/NN/fibonacci algorithm/NN/algorithm an/DT/an input/NN/input of/IN/of say/NN/say 60/CD/60 then/RB/then we/PRP/we would/MD/would have/VB/have to/TO/to wait/VB/wait a/DT/a while/NN/while to/TO/to get/VB/get the/DT/the value/NN/value back/RB/back because/IN/because it/PRP/it has/VBZ/has an/DT/an o/NN/o /:/( gn/NN/gn /:/) run/VBN/run time/NNP/time. the/DT/the iterative/JJ/iterative version/NN/version on/IN/on the/DT/the other/JJ/other hand/NN/hand has/VBZ/has a/DT/a o/NN/o /:/( n/NN/n /:/) run/VBN/run time/NNP/time. do/VBP/do n't/RB/n't let/VB/let this/DT/this put/NN/put you/PRP/you o/VBP/o Â/:/Â ®/:/® recursion/NNP/recursion. this/DT/this example/NN/example is/VBZ/is mainly/RB/mainly used/VBN/used to/TO/to shock/VB/shock programmers/NNS/programmers into/IN/into thinking/VBG/thinking about/IN/about the/DT/the rami/NN/rami Â/:/Â ¯/:/¯ cations/NNS/cations of/IN/of recursion/NN/recursion rather/RB/rather than/IN/than warning/VBG/warning them/PRP/them o/RB/o Â/VBP/Â ®/:/® /./. c.2/-NONE-/c.2 some/DT/some problems/NNS/problems are/VBP/are recursive/JJ/recursive in/IN/in nature/NN/nature something/NN/something that/WDT/that you/PRP/you may/MD/may come/VB/come across/RP/across is/VBZ/is that/IN/that some/DT/some data/NNS/data structures/NNS/structures and/CC/and algo/JJ/algo- rithms/NNS/rithms are/VBP/are actually/RB/actually recursive/JJ/recursive in/IN/in nature/NNP/nature. a/DT/a perfect/NN/perfect example/NN/example of/IN/of this/DT/this is/VBZ/is a/DT/a tree/NN/tree data/NN/data structure/NNP/structure. a/DT/a common/JJ/common tree/NN/tree node/NN/node usually/RB/usually contains/VBZ/contains a/DT/a value/NN/value /,/, along/IN/along with/IN/with two/CD/two point/JJ/point- ers/NNS/ers to/TO/to two/CD/two other/JJ/other nodes/NNS/nodes of/IN/of the/DT/the same/JJ/same node/NN/node type/NNP/type. as/IN/as you/PRP/you can/MD/can see/VB/see tree/JJ/tree is/VBZ/is recursive/JJ/recursive in/IN/in its/PRP$/its makeup/NN/makeup wit/NN/wit each/DT/each node/NN/node possibly/RB/possibly pointing/VBG/pointing to/TO/to two/CD/two other/JJ/other nodes/NNS/nodes /./. when/WRB/when using/VBG/using recursive/JJ/recursive algorithms/NNS/algorithms on/IN/on tree/NN/tree 's/POS/'s it/PRP/it makes/VBZ/makes sense/NN/sense as/IN/as you/PRP/you are/VBP/are simply/RB/simply adhering/VBG/adhering to/TO/to the/DT/the inherent/NN/inherent design/NN/design of/IN/of the/DT/the data/NNS/data structure/VBP/structure you/PRP/you are/VBP/are operating/VBG/operating on/NNP/on. of/IN/of course/NN/course it/PRP/it is/VBZ/is not/RB/not all/DT/all good/JJ/good news/NN/news /,/, after/IN/after all/DT/all we/PRP/we are/VBP/are still/RB/still bound/IN/bound by/IN/by the/DT/the limitations/NNS/limitations we/PRP/we have/VBP/have mentioned/VBN/mentioned previously/RB/previously in/IN/in this/DT/this chapter/NN/chapter /./. we/PRP/we can/MD/can also/RB/also look/VB/look at/IN/at sorting/NN/sorting algorithms/NNS/algorithms like/IN/like merge/NN/merge sort/NN/sort /,/, and/CC/and quick/JJ/quick sort/NNP/sort. both/DT/both of/IN/of these/DT/these algorithms/NNS/algorithms are/VBP/are recursive/JJ/recursive in/IN/in their/PRP$/their design/NN/design and/CC/and so/RB/so it/PRP/it makes/VBZ/makes sense/NN/sense to/TO/to model/VB/model them/PRP/them recursively/RB/recursively /./. c.3/-NONE-/c.3 summary/JJ/summary recursion/NN/recursion is/VBZ/is a/DT/a powerful/JJ/powerful tool/NN/tool /,/, and/CC/and one/CD/one that/WDT/that all/DT/all programmers/NNS/programmers should/MD/should know/VB/know of/IN/of /./. often/RB/often software/NN/software projects/NNS/projects will/MD/will take/VB/take a/DT/a trade/NN/trade between/IN/between readability/NN/readability /,/, and/CC/and e/VB/e Â/:/Â ±/:/± ciency/NN/ciency in/IN/in which/WDT/which case/NN/case recursion/NN/recursion is/VBZ/is great/JJ/great provided/VBN/provided you/PRP/you do/VBP/do n't/RB/n't go/VB/go and/CC/and use/VB/use it/PRP/it to/TO/to implement/VB/implement an/DT/an algorithm/NN/algorithm with/IN/with a/DT/a quadratic/JJ/quadratic run/NN/run time/NN/time or/CC/or higher/NNP/higher. of/IN/of course/NN/course this/DT/this is/VBZ/is not/RB/not a/DT/a rule/NN/rule of/IN/of thumb/NN/thumb /,/, this/DT/this is/VBZ/is just/RB/just us/PRP/us throwing/VBG/throwing caution/NN/caution to/TO/to the/DT/the wind/NNP/wind. defensive/JJ/defensive coding/NN/coding will/MD/will always/RB/always prevail/VB/prevail /./. many/JJ/many times/NNS/times recursion/NN/recursion has/VBZ/has a/DT/a natural/JJ/natural home/NN/home in/IN/in recursive/JJ/recursive data/NNS/data structures/NNS/structures and/CC/and algorithms/NNS/algorithms which/WDT/which are/VBP/are recursive/JJ/recursive in/IN/in nature/NNP/nature. using/NN/using recursion/NN/recursion in/IN/in such/JJ/such scenarios/NNS/scenarios is/VBZ/is perfectly/RB/perfectly acceptable/NNP/acceptable. using/VBG/using recursion/NN/recursion for/IN/for something/NN/something like/IN/like linked/VBN/linked list/NN/list traversal/NN/traversal is/VBZ/is a/DT/a little/RB/little overkill/NNP/overkill. its/PRP$/its iterative/JJ/iterative counterpart/NN/counterpart is/VBZ/is probably/RB/probably less/JJR/less lines/NNS/lines of/IN/of code/NN/code than/IN/than its/PRP$/its recursive/JJ/recursive counterpart/NN/counterpart /./. because/IN/because we/PRP/we can/MD/can only/RB/only talk/VB/talk about/IN/about the/DT/the implications/NNS/implications of/IN/of using/VBG/using recursion/NN/recursion from/IN/from an/DT/an abstract/NN/abstract point/NN/point of/IN/of view/NN/view you/PRP/you should/MD/should consult/VB/consult your/PRP$/your compiler/NN/compiler and/CC/and run/VBP/run time/NN/time environ/-NONE-/environ- ment/NN/ment for/IN/for more/JJR/more details/NNP/details. it/PRP/it may/MD/may be/VB/be the/DT/the case/NN/case that/IN/that your/PRP$/your compiler/NN/compiler recognises/NNS/recognises things/NNS/things like/IN/like tail/NN/tail recursion/NN/recursion and/CC/and can/MD/can optimise/VB/optimise them/NNP/them. this/DT/this is/VBZ/is n't/RB/n't unheard/JJ/unheard of/IN/of /,/, in/IN/in fact/NN/fact most/RBS/most commercial/JJ/commercial compilers/NNS/compilers will/MD/will do/VB/do this/NNP/this. the/DT/the amount/NN/amount of/IN/of optimisation/NN/optimisation compilers/NNS/compilers can/MD/can appendix/VB/appendix c/NNP/c. recursive/JJ/recursive vs/NNP/vs. iterative/JJ/iterative solutions/NNS/solutions 96/CD/96 do/VBP/do though/IN/though is/VBZ/is somewhat/RB/somewhat limited/VBN/limited by/IN/by the/DT/the fact/NN/fact that/IN/that you/PRP/you are/VBP/are still/RB/still using/VBG/using recursion/NN/recursion /./. you/PRP/you /,/, as/IN/as the/DT/the developer/NN/developer have/VBP/have to/TO/to accept/VB/accept certain/JJ/certain accountability/NN/accountability 's/POS/'s for/IN/for performance/NN/performance /./. appendix/NN/appendix d/VBD/d testing/NN/testing testing/NN/testing is/VBZ/is an/DT/an essential/JJ/essential part/NN/part of/IN/of software/NN/software development/NNP/development. testing/NN/testing has/VBZ/has often/RB/often been/VBN/been discarded/VBN/discarded by/IN/by many/JJ/many developers/NNS/developers in/IN/in the/DT/the belief/NN/belief that/IN/that the/DT/the burden/NN/burden of/IN/of proof/JJ/proof of/IN/of their/PRP$/their software/NN/software is/VBZ/is on/IN/on those/DT/those within/IN/within the/DT/the company/NN/company who/WP/who hold/VBD/hold test/NN/test centric/NN/centric roles/NNP/roles. this/DT/this could/MD/could n't/RB/n't be/VB/be further/JJ/further from/IN/from the/DT/the truth/NNP/truth. as/IN/as a/DT/a developer/NN/developer you/PRP/you should/MD/should at/IN/at least/JJS/least provide/VB/provide a/DT/a suite/JJ/suite of/IN/of unit/NN/unit tests/NNS/tests that/WDT/that verify/NN/verify certain/NN/certain boundary/NN/boundary conditions/NNS/conditions of/IN/of your/PRP$/your software/NN/software /./. a/DT/a great/JJ/great thing/NN/thing about/IN/about testing/NN/testing is/VBZ/is that/IN/that you/PRP/you build/VBP/build up/RP/up progressively/RB/progressively a/DT/a safety/NN/safety net/NNP/net. if/IN/if you/PRP/you add/VBP/add or/CC/or tweak/VB/tweak algorithms/NNS/algorithms and/CC/and then/RB/then run/VBN/run your/PRP$/your suite/NN/suite of/IN/of tests/NNS/tests you/PRP/you will/MD/will be/VB/be quickly/RB/quickly alerted/VBN/alerted to/TO/to any/DT/any cases/NNS/cases that/WDT/that you/PRP/you have/VBP/have broken/VBN/broken with/IN/with your/PRP$/your recent/JJ/recent changes/NNP/changes. such/JJ/such a/DT/a suite/JJ/suite of/IN/of tests/NNS/tests in/IN/in any/DT/any sizeable/JJ/sizeable project/NN/project is/VBZ/is absolutely/RB/absolutely essential/JJ/essential to/TO/to maintaining/NN/maintaining a/DT/a fairly/RB/fairly high/JJ/high bar/NN/bar when/WRB/when it/PRP/it comes/VBZ/comes to/TO/to quality/NNP/quality. of/IN/of course/NN/course in/IN/in order/NN/order to/TO/to attain/VB/attain such/JJ/such a/DT/a standard/JJ/standard you/PRP/you need/VBP/need to/TO/to think/VB/think carefully/RB/carefully about/IN/about the/DT/the tests/NNS/tests that/WDT/that you/PRP/you construct/VBP/construct /./. unit/NN/unit testing/NN/testing which/WDT/which will/MD/will be/VB/be the/DT/the subject/NN/subject of/IN/of the/DT/the vast/JJ/vast majority/NN/majority of/IN/of this/DT/this chapter/NN/chapter are/VBP/are widely/RB/widely available/JJ/available on/IN/on most/JJS/most platforms/NNP/platforms. most/JJS/most modern/JJ/modern languages/NNS/languages like/IN/like c/NN/c +/:/+ +/:/+ /,/, c/NN/c #/#/# /,/, and/CC/and java/NN/java o/NN/o Â/:/Â ®/:/® er/NN/er an/DT/an impressive/JJ/impressive catalogue/NN/catalogue of/IN/of testing/NN/testing frameworks/NNS/frameworks that/WDT/that you/PRP/you can/MD/can use/VB/use for/IN/for unit/NN/unit testing/NN/testing /./. the/DT/the following/VBG/following list/NN/list identi/NN/identi Â/:/Â ¯/:/¯ es/NNS/es testing/VBG/testing frameworks/NNS/frameworks which/WDT/which are/VBP/are popular/JJ/popular /:/: junit/NN/junit /:/: targeted/VBN/targeted at/IN/at jav/NNP/jav. /,/, http/NN/http /:/: //www.junit.org//JJ///www.junit.org/ nunit/NN/nunit /:/: can/MD/can be/VB/be used/VBN/used with/IN/with languages/NNS/languages that/IN/that target/NN/target microsoft/NN/microsoft 's/POS/'s common/JJ/common language/NN/language runtime/NNP/runtime. http/NN/http /:/: //www.nunit.org/index.php/JJ///www.nunit.org/index.php boost/NN/boost test/NN/test library/NN/library /:/: targeted/VBN/targeted at/IN/at c/NN/c +/:/+ +/:/+ /./. the/DT/the test/NN/test library/NN/library that/WDT/that ships/VBZ/ships with/IN/with the/DT/the incredibly/RB/incredibly popular/JJ/popular boost/NN/boost libraries/NNP/libraries. http/NN/http /:/: //www.boost.org/NNP///www.boost.org. a/DT/a direct/JJ/direct link/NN/link to/TO/to the/DT/the libraries/NNS/libraries doc/-NONE-/doc- umentation/NN/umentation http/NN/http /:/: //www.boost.org/doc/libs/1_36_0/libs/test/doc//JJ///www.boost.org/doc/libs/1_36_0/libs/test/doc/ html/index.html/JJ/html/index.html cppunit/NN/cppunit /:/: targeted/VBN/targeted at/IN/at c/NN/c +/:/+ +/:/+ /./. http/NN/http /:/: //cppunit.sourceforge.net//JJ///cppunit.sourceforge.net/ do/VBP/do n't/RB/n't worry/VB/worry if/IN/if you/PRP/you think/VBP/think that/IN/that the/DT/the list/NN/list is/VBZ/is very/RB/very sparse/JJ/sparse /,/, there/EX/there are/VBP/are far/RB/far more/RBR/more on/IN/on o/NN/o Â/:/Â ®/:/® er/NN/er than/IN/than those/DT/those that/WDT/that we/PRP/we have/VBP/have listed/NNP/listed. the/DT/the ones/NNS/ones listed/VBN/listed are/VBP/are the/DT/the testing/NN/testing frameworks/VBZ/frameworks that/IN/that we/PRP/we believe/VBP/believe are/VBP/are the/DT/the most/RBS/most popular/JJ/popular for/IN/for c/NN/c +/:/+ +/:/+ /,/, c/NN/c #/#/# /,/, and/CC/and java/NN/java /./. d.1/-NONE-/d.1 what/WP/what constitutes/NNS/constitutes a/DT/a unit/NN/unit test/NN/test ?/./? a/DT/a unit/NN/unit test/NN/test should/MD/should focus/VB/focus on/IN/on a/DT/a single/JJ/single atomic/JJ/atomic property/NN/property of/IN/of the/DT/the subject/NN/subject being/VBG/being tested/VBN/tested /./. do/VBP/do not/RB/not try/VB/try and/CC/and test/NN/test many/JJ/many things/NNS/things at/IN/at once/RB/once /,/, this/DT/this will/MD/will result/VB/result in/IN/in a/DT/a suite/JJ/suite of/IN/of somewhat/WDT/somewhat 97/CD/97 appendix/CD/appendix d/NNP/d. testing/NN/testing 98/CD/98 unstructured/VBN/unstructured tests/NNP/tests. as/IN/as an/DT/an example/NN/example if/IN/if you/PRP/you were/VBD/were wanting/VBG/wanting to/TO/to write/VB/write a/DT/a test/NN/test that/WDT/that veri/NN/veri Â/:/Â ¯/:/¯ ed/VBD/ed that/IN/that a/DT/a particular/JJ/particular value/NN/value v/NN/v is/VBZ/is returned/VBN/returned from/IN/from a/DT/a speci/NN/speci Â/:/Â ¯/:/¯ c/NN/c input/NN/input i/PRP/i then/RB/then your/PRP$/your test/NN/test should/MD/should do/VB/do the/DT/the smallest/JJS/smallest amount/NN/amount of/IN/of work/NN/work possible/JJ/possible to/TO/to verify/VB/verify that/IN/that v/NN/v is/VBZ/is correct/JJ/correct given/VBN/given i/NNP/i. a/DT/a unit/NN/unit test/NN/test should/MD/should be/VB/be simple/JJ/simple and/CC/and self/PRP/self describing/VBG/describing /./. as/IN/as well/RB/well as/IN/as a/DT/a unit/NN/unit test/NN/test being/VBG/being relatively/RB/relatively atomic/JJ/atomic you/PRP/you should/MD/should also/RB/also make/VB/make sure/JJ/sure that/IN/that your/PRP$/your unit/NN/unit tests/NNS/tests execute/VBP/execute quickly/NNP/quickly. if/IN/if you/PRP/you can/MD/can imagine/VB/imagine in/IN/in the/DT/the future/NN/future when/WRB/when you/PRP/you may/MD/may have/VB/have a/DT/a test/NN/test suite/NN/suite consisting/VBG/consisting of/IN/of thousands/NNS/thousands of/IN/of tests/NNS/tests you/PRP/you want/VBP/want those/DT/those tests/NNS/tests to/TO/to execute/VB/execute as/IN/as quickly/RB/quickly as/IN/as possible/NNP/possible. failure/NN/failure to/TO/to attain/VB/attain such/JJ/such a/DT/a goal/NN/goal will/MD/will most/VB/most likely/JJ/likely result/NN/result in/IN/in the/DT/the suite/NN/suite of/IN/of tests/NNS/tests not/RB/not being/VBG/being ran/NN/ran that/IN/that often/RB/often by/IN/by the/DT/the developers/NNS/developers on/IN/on your/PRP$/your team/NNP/team. this/DT/this can/MD/can occur/VB/occur for/IN/for a/DT/a number/NN/number of/IN/of reasons/NNS/reasons but/CC/but the/DT/the main/JJ/main one/CD/one would/MD/would be/VB/be that/IN/that it/PRP/it becomes/VBZ/becomes incredibly/RB/incredibly tedious/JJ/tedious waiting/NN/waiting several/JJ/several minutes/NNS/minutes to/TO/to run/VB/run tests/NNS/tests on/IN/on a/DT/a developers/NNS/developers local/JJ/local machine/NN/machine /./. building/NN/building up/IN/up a/DT/a test/NN/test suite/NN/suite can/MD/can help/VB/help greatly/RB/greatly in/IN/in a/DT/a team/NN/team scenario/NN/scenario /,/, particularly/RB/particularly when/WRB/when using/VBG/using a/DT/a continuous/JJ/continuous build/NN/build server/NNP/server. in/IN/in such/JJ/such a/DT/a scenario/NN/scenario you/PRP/you can/MD/can have/VB/have the/DT/the suite/JJ/suite of/IN/of tests/NNS/tests devised/VBN/devised by/IN/by the/DT/the developers/NNS/developers and/CC/and testers/NNS/testers ran/VBD/ran as/IN/as part/NN/part of/IN/of the/DT/the build/NN/build process/NN/process /./. employing/VBG/employing such/JJ/such strategies/NNS/strategies can/MD/can help/VB/help you/PRP/you catch/VB/catch niggling/VBG/niggling little/JJ/little error/NN/error cases/NNS/cases early/RB/early rather/RB/rather than/IN/than via/IN/via your/PRP$/your customer/NN/customer base/NNP/base. there/EX/there is/VBZ/is nothing/NN/nothing more/JJR/more embarrassing/VBG/embarrassing for/IN/for a/DT/a developer/NN/developer than/IN/than to/TO/to have/VB/have a/DT/a very/RB/very trivial/JJ/trivial bug/NN/bug in/IN/in their/PRP$/their code/NN/code reported/VBD/reported to/TO/to them/PRP/them from/IN/from a/DT/a customer/NN/customer /./. d.2/-NONE-/d.2 when/WRB/when should/MD/should i/VB/i write/JJ/write my/PRP$/my tests/NNS/tests ?/./? a/DT/a source/NN/source of/IN/of great/JJ/great debate/NN/debate would/MD/would be/VB/be an/DT/an understatement/NN/understatement to/TO/to personify/VB/personify such/JJ/such a/DT/a ques/NN/ques- tion/NN/tion as/IN/as this/NNP/this. in/IN/in recent/JJ/recent years/NNS/years a/DT/a test/NN/test driven/VBN/driven approach/NN/approach to/TO/to development/NN/development has/VBZ/has become/VBN/become very/RB/very popular/NNP/popular. such/JJ/such an/DT/an approach/NN/approach is/VBZ/is known/VBN/known as/IN/as test/NN/test driven/NNS/driven development/NN/development /,/, or/CC/or more/JJR/more commonly/RB/commonly the/DT/the acronym/NN/acronym tdd/NN/tdd /./. one/CD/one of/IN/of the/DT/the founding/NN/founding principles/NNS/principles of/IN/of tdd/JJ/tdd is/VBZ/is to/TO/to write/VB/write the/DT/the unit/NN/unit test/NN/test Â/:/Â ¯/:/¯ rst/JJ/rst /,/, watch/NN/watch it/PRP/it fail/VBP/fail and/CC/and then/RB/then make/VB/make it/PRP/it pass/NNP/pass. the/DT/the premise/NN/premise being/VBG/being that/IN/that you/PRP/you only/RB/only ever/RB/ever write/JJ/write enough/RB/enough code/JJ/code at/IN/at any/DT/any one/CD/one time/NN/time to/TO/to satisfy/VB/satisfy the/DT/the state/NN/state based/VBN/based assertions/NNS/assertions made/VBN/made in/IN/in a/DT/a unit/NN/unit test/NNP/test. we/PRP/we have/VBP/have found/VBN/found this/DT/this approach/NN/approach to/TO/to provide/VB/provide a/DT/a more/RBR/more structured/VBN/structured intent/NN/intent to/TO/to the/DT/the implementation/NN/implementation of/IN/of algorithms/NNP/algorithms. at/IN/at any/DT/any one/CD/one stage/NN/stage you/PRP/you only/RB/only have/VBP/have a/DT/a single/JJ/single goal/NN/goal /,/, to/TO/to make/VB/make the/DT/the failing/VBG/failing test/NN/test pass/NNP/pass. because/IN/because tdd/JJ/tdd makes/NNS/makes you/PRP/you write/VBP/write the/DT/the tests/NNS/tests up/IN/up front/NN/front you/PRP/you never/RB/never Â/:/Â ¯/:/¯ nd/NN/nd yourself/PRP/yourself in/IN/in a/DT/a situation/NN/situation where/WRB/where you/PRP/you forget/VBP/forget /,/, or/CC/or ca/MD/ca n't/RB/n't be/VB/be bothered/VBN/bothered to/TO/to write/VB/write tests/NNS/tests for/IN/for your/PRP$/your code/NNP/code. this/DT/this is/VBZ/is often/RB/often the/DT/the case/NN/case when/WRB/when you/PRP/you write/VBP/write your/PRP$/your tests/NNS/tests after/IN/after you/PRP/you have/VBP/have coded/VBN/coded up/RP/up your/PRP$/your implementation/NNP/implementation. we/PRP/we /,/, as/IN/as the/DT/the authors/NNS/authors of/IN/of this/DT/this book/NN/book ourselves/VBZ/ourselves use/NN/use tdd/NN/tdd as/IN/as our/PRP$/our preferred/VBN/preferred method/NN/method /./. as/IN/as we/PRP/we have/VBP/have already/RB/already mentioned/VBN/mentioned that/IN/that tdd/JJ/tdd is/VBZ/is our/PRP$/our favoured/VBN/favoured approach/NN/approach to/TO/to testing/NN/testing it/PRP/it would/MD/would be/VB/be somewhat/RB/somewhat of/IN/of an/DT/an injustice/NN/injustice to/TO/to not/RB/not list/VB/list /,/, and/CC/and describe/VB/describe the/DT/the mantra/NN/mantra that/IN/that is/VBZ/is often/RB/often associate/JJ/associate with/IN/with it/PRP/it /:/: red/VBD/red /:/: signi/NN/signi Â/:/Â ¯/:/¯ es/NNS/es that/WDT/that the/DT/the test/NN/test has/VBZ/has failed/VBN/failed /./. green/JJ/green /:/: the/DT/the failing/VBG/failing test/NN/test now/RB/now passes/VBZ/passes /./. refactor/NN/refactor /:/: can/MD/can we/PRP/we restructure/VB/restructure our/PRP$/our program/NN/program so/IN/so it/PRP/it makes/VBZ/makes more/JJR/more sense/NN/sense /,/, and/CC/and easier/JJR/easier to/TO/to maintain/VB/maintain ?/./? the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst point/NN/point of/IN/of the/DT/the above/JJ/above list/NN/list always/RB/always occurs/VBZ/occurs at/IN/at least/JJS/least once/RB/once /:/( more/JJR/more if/IN/if you/PRP/you count/VBP/count the/DT/the build/NN/build error/NN/error /:/) in/IN/in tdd/NN/tdd initially/NNP/initially. your/PRP$/your task/NN/task at/IN/at this/DT/this stage/NN/stage is/VBZ/is solely/RB/solely to/TO/to make/VB/make the/DT/the test/NN/test pass/NN/pass /,/, that/IN/that is/VBZ/is to/TO/to make/VB/make the/DT/the respective/JJ/respective test/NN/test green/NNP/green. the/DT/the last/JJ/last item/NN/item is/VBZ/is based/VBN/based around/IN/around appendix/NN/appendix d/NNP/d. testing/NN/testing 99/CD/99 the/DT/the restructuring/NN/restructuring of/IN/of your/PRP$/your program/NN/program to/TO/to make/VB/make it/PRP/it as/IN/as readable/JJ/readable and/CC/and maintainable/JJ/maintainable as/IN/as possible/NNP/possible. the/DT/the last/JJ/last point/NN/point is/VBZ/is very/RB/very important/JJ/important as/IN/as tdd/JJ/tdd is/VBZ/is a/DT/a progressive/JJ/progressive methodology/NN/methodology to/TO/to building/NN/building a/DT/a solution/NNP/solution. if/IN/if you/PRP/you adhere/VBP/adhere to/TO/to progressive/VB/progressive revisions/NNS/revisions of/IN/of your/PRP$/your algorithm/NN/algorithm restructuring/NN/restructuring when/WRB/when appropriate/JJ/appropriate you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd that/IN/that using/VBG/using tdd/NN/tdd you/PRP/you can/MD/can implement/VB/implement very/RB/very cleanly/RB/cleanly structured/VBN/structured types/NNS/types and/CC/and so/RB/so on/IN/on /./. d.3/-NONE-/d.3 how/WRB/how seriously/RB/seriously should/MD/should i/VB/i view/NN/view my/PRP$/my test/NN/test suite/NN/suite ?/./? your/PRP$/your tests/NNS/tests are/VBP/are a/DT/a major/JJ/major part/NN/part of/IN/of your/PRP$/your project/NN/project ecosystem/NN/ecosystem and/CC/and so/RB/so they/PRP/they should/MD/should be/VB/be treated/VBN/treated with/IN/with the/DT/the same/JJ/same amount/NN/amount of/IN/of respect/NN/respect as/IN/as your/PRP$/your production/NN/production code/NNP/code. this/DT/this ranges/NNS/ranges from/IN/from correct/JJ/correct /,/, and/CC/and clean/JJ/clean code/NN/code formatting/VBG/formatting /,/, to/TO/to the/DT/the testing/NN/testing code/NN/code being/VBG/being stored/VBN/stored within/IN/within a/DT/a source/NN/source control/NN/control repository/NN/repository /./. employing/VBG/employing a/DT/a methodology/NN/methodology like/IN/like tdd/NN/tdd /,/, or/CC/or testing/NN/testing after/IN/after implementing/VBG/implementing you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd that/IN/that you/PRP/you spend/VBP/spend a/DT/a great/JJ/great amount/NN/amount of/IN/of time/NN/time writing/VBG/writing tests/NNS/tests and/CC/and thus/RB/thus they/PRP/they should/MD/should be/VB/be treated/VBN/treated no/DT/no di/NN/di Â/:/Â ®/:/® erently/RB/erently to/TO/to your/PRP$/your production/NN/production code/NNP/code. all/DT/all tests/NNS/tests should/MD/should be/VB/be clearly/RB/clearly named/VBN/named /,/, and/CC/and fully/RB/fully documented/VBN/documented as/IN/as to/TO/to their/PRP$/their intent/NN/intent /./. d.4/-NONE-/d.4 the/DT/the three/CD/three a/DT/a 's/POS/'s now/RB/now that/IN/that you/PRP/you have/VBP/have a/DT/a sense/NN/sense of/IN/of the/DT/the importance/NN/importance of/IN/of your/PRP$/your test/NN/test suite/NN/suite you/PRP/you will/MD/will inevitably/RB/inevitably want/VB/want to/TO/to know/VB/know how/WRB/how to/TO/to actually/RB/actually structure/VB/structure each/DT/each block/NN/block of/IN/of imperatives/NNS/imperatives within/IN/within a/DT/a single/JJ/single unit/NN/unit test/NNP/test. a/DT/a popular/JJ/popular approach/NN/approach /:/- the/DT/the three/CD/three a/DT/a 's/POS/'s is/VBZ/is described/VBN/described in/IN/in the/DT/the following/JJ/following list/NN/list /:/: assemble/JJ/assemble /:/: create/JJ/create the/DT/the objects/NNS/objects you/PRP/you require/VBP/require in/IN/in order/NN/order to/TO/to perform/VB/perform the/DT/the state/NN/state based/VBN/based asser/-NONE-/asser- tions/NNS/tions /./. act/NN/act /:/: invoke/NN/invoke the/DT/the respective/JJ/respective operations/NNS/operations on/IN/on the/DT/the objects/NNS/objects you/PRP/you have/VBP/have assembled/VBN/assembled to/TO/to mutate/VB/mutate the/DT/the state/NN/state to/TO/to that/DT/that desired/VBN/desired for/IN/for your/PRP$/your assertions/NNS/assertions /./. assert/NN/assert /:/: specify/NN/specify what/WP/what you/PRP/you expect/VBP/expect to/TO/to hold/VB/hold after/IN/after the/DT/the previous/JJ/previous two/CD/two steps/NNS/steps /./. the/DT/the following/VBG/following example/NN/example shows/NNS/shows a/DT/a simple/JJ/simple test/NN/test method/NN/method that/WDT/that employs/VBZ/employs the/DT/the three/CD/three a/DT/a 's/POS/'s /:/: public/JJ/public void/JJ/void mytest/NN/mytest /:/( /:/) f/NN/f ///:/// assemble/JJ/assemble type/NN/type t/NN/t =/:/= new/JJ/new type/NN/type /:/( /:/) ;/:/; ///:/// act/NN/act t.methoda/NN/t.methoda /:/( /:/) ;/:/; ///:/// assert/NN/assert assert.istrue/JJ/assert.istrue /NN/( t.boolexpr/NN/t.boolexpr /:/) g/NN/g d.5/-NONE-/d.5 the/DT/the structuring/NN/structuring of/IN/of tests/NNS/tests structuring/VBG/structuring tests/NNS/tests can/MD/can be/VB/be viewed/VBN/viewed upon/IN/upon as/IN/as being/VBG/being the/DT/the same/JJ/same as/IN/as structuring/NN/structuring pro/NN/pro- duction/NN/duction code/NN/code /,/, e.g/NNP/e.g. all/DT/all unit/NN/unit tests/NNS/tests for/IN/for a/DT/a person/NN/person type/NN/type may/MD/may be/VB/be contained/VBN/contained within/IN/within appendix/CD/appendix d/NNP/d. testing/NN/testing 100/CD/100 a/DT/a persontest/NN/persontest type/NNP/type. typically/RB/typically all/DT/all tests/NNS/tests are/VBP/are abstracted/VBN/abstracted from/IN/from production/NN/production code/NN/code /./. that/IN/that is/VBZ/is that/IN/that the/DT/the tests/NNS/tests are/VBP/are disjoint/JJ/disjoint from/IN/from the/DT/the production/NN/production code/NN/code /,/, you/PRP/you may/MD/may have/VB/have two/CD/two dynamic/JJ/dynamic link/NN/link libraries/NNS/libraries /:/( dll/NN/dll /:/) ;/:/; the/DT/the Â/NN/Â ¯/:/¯ rst/JJ/rst containing/NN/containing the/DT/the production/NN/production code/NN/code /,/, the/DT/the second/JJ/second containing/NN/containing your/PRP$/your test/NN/test code/NN/code /./. we/PRP/we can/MD/can also/RB/also use/VB/use things/NNS/things like/IN/like inheritance/NN/inheritance etc/NN/etc when/WRB/when de/NN/de Â/:/Â ¯/:/¯ ning/VBG/ning classes/NNS/classes of/IN/of tests/NNS/tests /./. the/DT/the point/NN/point being/VBG/being that/IN/that the/DT/the test/NN/test code/NN/code is/VBZ/is very/RB/very much/JJ/much like/IN/like your/PRP$/your production/NN/production code/NN/code and/CC/and you/PRP/you should/MD/should apply/VB/apply the/DT/the same/JJ/same amount/NN/amount of/IN/of thought/NN/thought to/TO/to its/PRP$/its structure/NN/structure as/IN/as you/PRP/you would/MD/would do/VB/do the/DT/the production/NN/production code/NN/code /./. d.6/-NONE-/d.6 code/NN/code coverage/NN/coverage something/NN/something that/WDT/that you/PRP/you can/MD/can get/VB/get as/RB/as a/DT/a product/NN/product of/IN/of unit/NN/unit testing/NN/testing are/VBP/are code/NN/code coverage/NN/coverage statistics/NNP/statistics. code/NN/code coverage/NN/coverage is/VBZ/is merely/RB/merely an/DT/an indicator/NN/indicator as/IN/as to/TO/to the/DT/the portions/NNS/portions of/IN/of production/NN/production code/NN/code that/WDT/that your/PRP$/your units/NNS/units tests/NNS/tests cover/NNP/cover. using/VBG/using tdd/NN/tdd it/PRP/it is/VBZ/is likely/JJ/likely that/IN/that your/PRP$/your code/NN/code coverage/NN/coverage will/MD/will be/VB/be very/RB/very high/JJ/high /,/, although/IN/although it/PRP/it will/MD/will vary/VB/vary depending/VBG/depending on/IN/on how/WRB/how easy/JJ/easy it/PRP/it is/VBZ/is to/TO/to use/VB/use tdd/NN/tdd within/IN/within your/PRP$/your project/NN/project /./. d.7/-NONE-/d.7 summary/JJ/summary testing/NN/testing is/VBZ/is key/JJ/key to/TO/to the/DT/the creation/NN/creation of/IN/of a/DT/a moderately/RB/moderately stable/JJ/stable product/NNP/product. moreover/NN/moreover unit/NN/unit testing/NN/testing can/MD/can be/VB/be used/VBN/used to/TO/to create/VB/create a/DT/a safety/NN/safety blanket/NN/blanket when/WRB/when adding/VBG/adding and/CC/and removing/VBG/removing features/NNS/features providing/VBG/providing an/DT/an early/JJ/early warning/NN/warning for/IN/for breaking/NN/breaking changes/NNS/changes within/IN/within your/PRP$/your production/NN/production code/NN/code /./. appendix/NN/appendix e/NN/e symbol/NN/symbol de/IN/de Â/CD/Â ¯/CD/¯ nitions/NNS/nitions throughout/IN/throughout the/DT/the pseudocode/NN/pseudocode listings/NNS/listings you/PRP/you will/MD/will Â/VB/Â ¯/:/¯ nd/NN/nd several/JJ/several symbols/NNS/symbols used/VBN/used /,/, describes/VBZ/describes the/DT/the meaning/NN/meaning of/IN/of each/DT/each of/IN/of those/DT/those symbols/NNS/symbols /./. symbol/NN/symbol description/NN/description Ã/:/Ã /:/ assignment/NN/assignment /./. =/NN/= equality/NN/equality /./. Â/NN/Â ·/:/· less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to /./. </NN/< less/RBR/less than/NNP/than. */-NONE-/* Â/:/Â ¸/:/¸ greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to /./. >/NN/> greater/JJR/greater than/NNP/than. */-NONE-/* 6/CD/6 =/CD/= inequality/NN/inequality /./. ;/:/; null/NN/null /./. and/CC/and logical/JJ/logical and/CC/and /./. or/CC/or logical/JJ/logical or/CC/or /./. whitespace/NN/whitespace single/NN/single occurrence/NN/occurrence of/IN/of whitespace/NN/whitespace /./. yield/NN/yield like/IN/like return/NN/return but/CC/but builds/VBZ/builds a/DT/a sequence/NN/sequence /./. table/JJ/table e.1/-NONE-/e.1 /:/: pseudo/VB/pseudo symbol/NN/symbol de/IN/de Â/CD/Â ¯/CD/¯ nitions/NNS/nitions */-NONE-/* this/DT/this symbol/NN/symbol has/VBZ/has a/DT/a direct/JJ/direct translation/NN/translation with/IN/with the/DT/the vast/JJ/vast majority/NN/majority of/IN/of imperative/JJ/imperative counterparts/NNS/counterparts /./. 101/CD/101 