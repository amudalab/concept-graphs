design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade computer/NN/computer science/NN/science engineering/NN/engineering department/NN/department indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 1/CD/1 overview/NN/overview of/IN/of the/DT/the course/NN/course welcome/NN/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of the/DT/the algorithms/NNP/algorithms. today/NN/today ?/./? s/NNS/s lecture/VBP/lecture is/VBZ/is going/VBG/going to/TO/to be/VB/be an/DT/an overview/NN/overview of/IN/of the/DT/the course/NN/course and/CC/and i/PRP/i want/VBP/want to/TO/to introduce/VB/introduce you/PRP/you to/TO/to the/DT/the main/JJ/main problems/NNS/problems in/IN/in the/DT/the course/NN/course and/CC/and also/RB/also give/VB/give also/RB/also convey/NN/convey a/DT/a spirit/NN/spirit of/IN/of the/DT/the course/NNP/course. let/NN/let us/PRP/us start/VB/start with/IN/with the/DT/the fundamental/JJ/fundamental question/NNP/question. given/NN/given a/DT/a certain/JJ/certain problem/NN/problem how/WRB/how do/VBP/do you/PRP/you solve/VB/solve it/PRP/it on/IN/on a/DT/a computer/NN/computer ?/./? for/IN/for many/JJ/many problems/NNS/problems it/PRP/it is/VBZ/is relatively/RB/relatively easy/JJ/easy to/TO/to design/NN/design algorithms/NNS/algorithms that/WDT/that will/MD/will somehow/VB/somehow solve/VB/solve them/NNP/them. however/RB/however /,/, quite/RB/quite some/DT/some cleverness/NN/cleverness is/VBZ/is needed/VBN/needed and/CC/and designing/NN/designing algorithms/NNS/algorithms that/WDT/that are/VBP/are also/RB/also fast/RB/fast that/IN/that is/VBZ/is algorithms/NNS/algorithms which/WDT/which give/JJ/give answers/NNS/answers very/RB/very quickly/NNP/quickly. this/DT/this will/MD/will be/VB/be the/DT/the major/JJ/major challenge/NN/challenge in/IN/in the/DT/the course/NNP/course. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 34/CD/34 /CD/) our/PRP$/our main/JJ/main course/NN/course goal/NN/goal as/IN/as said/VBD/said is/VBZ/is to/TO/to design/NN/design algorithms/NNS/algorithms which/WDT/which are/VBP/are fast/NNP/fast. design/NN/design of/IN/of fast/NN/fast algorithms/NNP/algorithms. as/IN/as you/PRP/you may/MD/may realize/VB/realize designing/VBG/designing anything/NN/anything be/VB/be it/PRP/it computers/NNS/computers /,/, be/VB/be it/PRP/it cars/VBZ/cars /,/, be/VB/be it/PRP/it clothes/VBZ/clothes is/VBZ/is an/DT/an art/NNP/art. so/RB/so /,/, in/IN/in some/DT/some sense/NN/sense you/PRP/you have/VB/have to/TO/to be/VB/be creative/JJ/creative and/CC/and it/PRP/it can/MD/can not/RB/not be/VB/be taught/VBN/taught /,/, but/CC/but in/IN/in some/DT/some other/JJ/other sense/NN/sense there/EX/there are/VBP/are also/RB/also some/DT/some very/RB/very well/RB/well defined/VBN/defined design/NN/design techniques/NNS/techniques which/WDT/which have/VBP/have evolved/VBN/evolved for/IN/for this/DT/this purpose/NNP/purpose. and/CC/and the/DT/the goal/NN/goal of/IN/of this/DT/this course/NN/course is/VBZ/is to/TO/to study/NN/study these/DT/these techniques/NNS/techniques we/PRP/we will/MD/will also/RB/also have/VB/have lots/NNS/lots of/IN/of exercises/NNS/exercises in/IN/in which/WDT/which you/PRP/you can/MD/can apply/VB/apply these/DT/these ideas/NNP/ideas. and/CC/and our/PRP$/our hope/NN/hope is/VBZ/is at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the course/NN/course you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to solve/VB/solve algorithm/NN/algorithm design/NN/design problems/NNS/problems that/WDT/that may/MD/may that/IN/that you/PRP/you may/MD/may encounter/VB/encounter later/JJ/later on/IN/on in/IN/in your/PRP$/your life/NNP/life. there/RB/there are/VBP/are some/DT/some prerequisites/NNS/prerequisites for/IN/for this/DT/this course/NN/course and/CC/and let/VB/let me/PRP/me just/RB/just state/VBP/state them/NNP/them. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 36/CD/36 /CD/) the/DT/the prerequisites/NNS/prerequisites are/VBP/are that/IN/that you/PRP/you should/MD/should be/VB/be familiar/JJ/familiar with/IN/with some/DT/some programming/NNP/programming. you/PRP/you should/MD/should have/VB/have done/VBN/done some/DT/some amount/NN/amount of/IN/of programming/NN/programming in/IN/in some/DT/some common/JJ/common language/NN/language say/NN/say c/NN/c or/CC/or scheme/NN/scheme or/CC/or basic/NNP/basic. you/PRP/you should/MD/should also/RB/also have/VB/have done/VBN/done a/DT/a course/NN/course on/IN/on data/NNS/data structures/NNS/structures and/CC/and you/PRP/you should/MD/should have/VB/have some/DT/some discrete/JJ/discrete mathematics/NNS/mathematics background/NNP/background. as/IN/as you/PRP/you may/MD/may see/VB/see this/DT/this is/VBZ/is not/RB/not an/DT/an elementary/JJ/elementary course/NN/course and/CC/and this/DT/this background/NN/background is/VBZ/is going/VBG/going to/TO/to be/VB/be necessary/JJ/necessary for/IN/for us/NNP/us. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 27/CD/27 /CD/) our/PRP$/our approach/NN/approach is/VBZ/is this/DT/this course/NN/course is/VBZ/is going/VBG/going to/TO/to be/VB/be analytical/NNP/analytical. in/IN/in the/DT/the sense/NN/sense that/IN/that will/MD/will build/VB/build the/DT/the model/NN/model of/IN/of a/DT/a computer/NN/computer analytical/JJ/analytical will/MD/will build/VB/build a/DT/a model/NN/model of/IN/of a/DT/a computer/NN/computer that/WDT/that is/VBZ/is mathematical/JJ/mathematical build/NN/build a/DT/a mathematical/JJ/mathematical model/NNP/model. and/CC/and on/IN/on this/DT/this mathematical/JJ/mathematical model/NN/model we/PRP/we will/MD/will be/VB/be designing/VBG/designing algorithms/NNP/algorithms. so/RB/so /,/, we/PRP/we design/VBP/design algorithms/NNS/algorithms and/CC/and we/PRP/we study/RB/study their/PRP$/their properties/NNS/properties of/IN/of algorithms/NNS/algorithms on/IN/on this/DT/this model/NNP/model. the/DT/the whole/JJ/whole point/NN/point is/VBZ/is to/TO/to reason/NN/reason about/IN/about algorithms/NNP/algorithms. so/RB/so /,/, this/DT/this is/VBZ/is very/RB/very important/JJ/important if/IN/if we/PRP/we want/VBP/want to/TO/to mathematically/RB/mathematically prove/VB/prove properties/NNS/properties and/CC/and we/PRP/we want/VBP/want to/TO/to prove/VB/prove properties/NNS/properties the/DT/the emphasis/NN/emphasis on/IN/on this/DT/this course/NN/course is/VBZ/is proof/NNP/proof. prove/VBP/prove properties/NNS/properties about/IN/about speed/NN/speed say/VBP/say prove/JJ/prove facts/NNS/facts about/IN/about time/NN/time taken/NNP/taken. all/DT/all this/DT/this so/RB/so there/RB/there is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a number/NN/number of/IN/of things/NNS/things that/WDT/that we/PRP/we have/VBP/have to/TO/to do/VB/do /,/, and/CC/and of/IN/of course/NN/course there/EX/there is/VBZ/is a/DT/a whole/JJ/whole course/NN/course for/IN/for this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 04/CD/04 /CD/) so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to give/VB/give an/DT/an overview/NN/overview of/IN/of the/DT/the course/NNP/course. in/IN/in the/DT/the next/JJ/next few/JJ/few lectures/NNS/lectures we/PRP/we will/MD/will develop/VB/develop the/DT/the basic/JJ/basic framework/NN/framework what/WP/what i/PRP/i mean/VBP/mean by/IN/by this/DT/this is/VBZ/is that/IN/that we/PRP/we will/MD/will define/VB/define the/DT/the mathematical/JJ/mathematical model/NNP/model. we/PRP/we will/MD/will say/VB/say what/WP/what fast/RB/fast means/VBZ/means when/WRB/when i/PRP/i say/VBP/say fast/JJ/fast algorithm/NN/algorithm what/WP/what do/VBP/do i/PRP/i mean/VB/mean ?/./? this/DT/this is/VBZ/is what/WP/what we/PRP/we will/MD/will say/VB/say. then/RB/then we/PRP/we will/MD/will embark/VB/embark on/IN/on a/DT/a fairly/RB/fairly long/JJ/long stretch/NN/stretch which/WDT/which involves/VBZ/involves techniques/NNS/techniques for/IN/for designing/VBG/designing fast/NN/fast algorithms/NNS/algorithms while/IN/while doing/VBG/doing this/DT/this we/PRP/we will/MD/will also/RB/also be/VB/be surveying/VBG/surveying many/JJ/many problems/NNP/problems. so/RB/so /,/, we/PRP/we will/MD/will look/VB/look at/IN/at problems/NNS/problems from/IN/from optimization/NN/optimization graph/NN/graph theory/NN/theory some/DT/some problems/NNS/problems from/IN/from geometry/NN/geometry also/RB/also some/DT/some others/NNP/others. it/PRP/it will/MD/will turn/VB/turn out/RP/out that/IN/that there/EX/there are/VBP/are some/DT/some problems/NNS/problems which/WDT/which do/VBP/do not/RB/not really/RB/really quite/RB/quite respond/JJ/respond to/TO/to our/PRP$/our algorithm/NN/algorithm design/NN/design techniques/NNP/techniques. of/IN/of course/NN/course /,/, we/PRP/we will/MD/will see/VB/see many/JJ/many problems/NNS/problems for/IN/for which/WDT/which we/PRP/we can/MD/can design/VB/design really/RB/really god/NN/god algorithms/NNS/algorithms our/PRP$/our techniques/NNS/techniques work/NN/work beautifully/RB/beautifully /,/, but/CC/but there/EX/there are/VBP/are also/RB/also some/DT/some problems/NNS/problems where/WRB/where our/PRP$/our techniques/NNS/techniques do/VBP/do not/RB/not work/VB/work so/RB/so well/NNP/well. and/CC/and for/IN/for these/DT/these problems/NNS/problems a/DT/a fairly/RB/fairly intricate/JJ/intricate theory/NN/theory has/VBZ/has developed/VBN/developed over/IN/over the/DT/the last/JJ/last over/IN/over the/DT/the last/JJ/last several/JJ/several year/NN/year ?/./? s/NNS/s 10/CD/10 20/CD/20 30/CD/30 years/NNS/years and/CC/and this/DT/this theory/NN/theory is/VBZ/is the/DT/the /,/, so/RB/so called/VBN/called theory/NN/theory of/IN/of n/NN/n p/NN/p completeness/NNP/completeness. so/RB/so /,/, we/PRP/we will/MD/will be/VB/be studying/VBG/studying this/DT/this theory/NN/theory as/IN/as well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 59/CD/59 /CD/) let/NN/let me/PRP/me now/RB/now /,/, come/VBP/come to/TO/to the/DT/the topic/JJ/topic for/IN/for today/NNP/today. the/DT/the main/JJ/main topic/NN/topic for/IN/for today/NNP/today. so/RB/so /,/, today/NN/today i/PRP/i do/VBP/do not/RB/not want/VB/want to/TO/to be/VB/be too/RB/too formal/JJ/formal /,/, but/CC/but i/PRP/i nevertheless/VBP/nevertheless want/JJ/want to/TO/to convey/NN/convey the/DT/the spirit/NN/spirit of/IN/of the/DT/the course/NN/course to/TO/to you/NNP/you. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do ?/./? we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take a/DT/a fairly/RB/fairly simple/JJ/simple problem/NN/problem which/WDT/which everybody/NN/everybody will/MD/will have/VB/have no/DT/no should/MD/should have/VB/have no/DT/no trouble/NN/trouble in/IN/in understanding/NN/understanding and/CC/and let/VB/let me/PRP/me state/VB/state that/IN/that problem/NN/problem right/RB/right away/NNP/away. the/DT/the problem/NN/problem is/VBZ/is given/VBN/given 2/CD/2 numbers/NNS/numbers m/NN/m and/CC/and n/NN/n find/NN/find their/PRP$/their greatest/NN/greatest common/JJ/common divisor/NNP/divisor. so/RB/so /,/, everybody/NN/everybody understands/NNS/understands this/DT/this problem/NNP/problem. you/PRP/you are/VBP/are going/VBG/going to/TO/to see/VB/see 2/CD/2 algorithms/NNS/algorithms for/IN/for this/NNP/this. one/CD/one is/VBZ/is a/DT/a very/RB/very simple/JJ/simple algorithm/NN/algorithm which/WDT/which you/PRP/you probably/RB/probably have/VBP/have learnt/VBN/learnt in/IN/in school/NNP/school. it/PRP/it is/VBZ/is probably/RB/probably the/DT/the algorithm/NN/algorithm that/IN/that you/PRP/you were/VBD/were taught/VBN/taught in/IN/in first/JJ/first standard/JJ/standard or/CC/or fourth/JJ/fourth standard/JJ/standard or/CC/or something/NN/something like/IN/like that/DT/that and/CC/and which/WDT/which probably/RB/probably most/JJS/most of/IN/of us/PRP/us used/VBD/used to/TO/to solve/VB/solve this/DT/this to/TO/to find/VB/find the/DT/the greatest/JJS/greatest common/JJ/common divisor/NN/divisor where/WRB/where we/PRP/we need/VBP/need to/TO/to such/JJ/such as/IN/as when/WRB/when simplifying/VBG/simplifying fractions/NNP/fractions. then/RB/then we/PRP/we will/MD/will study/VB/study another/DT/another algorithm/NN/algorithm and/CC/and this/DT/this is/VBZ/is one/CD/one of/IN/of the/DT/the earliest/JJS/earliest algorithms/NNS/algorithms which/WDT/which was/VBD/was ever/RB/ever invented/NNP/invented. and/CC/and this/DT/this was/VBD/was invented/VBN/invented by/IN/by the/DT/the mathematician/JJ/mathematician euclid/NN/euclid who/WP/who you/PRP/you might/MD/might know/VB/know from/IN/from plane/NN/plane geometry/NNP/geometry. yes/VBZ/yes euclid/JJ/euclid did/NN/did invent/NN/invent this/DT/this algorithm/NN/algorithm even/RB/even though/IN/though there/EX/there were/VBD/were no/DT/no computers/NNS/computers in/IN/in his/PRP$/his time/NNP/time. so/RB/so /,/, we/PRP/we will/MD/will study/VB/study euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm and/CC/and from/IN/from this/DT/this we/PRP/we will/MD/will get/VB/get a/DT/a sense/NN/sense of/IN/of what/WP/what a/DT/a fast/JJ/fast algorithm/NN/algorithm is/VBZ/is you/PRP/you will/MD/will see/VB/see that/IN/that euclid/JJ/euclid ?/./? s/NNS/s algorithm/NNP/algorithm. even/RB/even though/IN/though we/PRP/we have/VBP/have not/RB/not defined/VBN/defined what/WP/what fast/RB/fast is/VBZ/is you/PRP/you will/MD/will intuitively/RB/intuitively understand/VB/understand that/IN/that euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm must/MD/must be/VB/be much/RB/much faster/JJR/faster will/MD/will be/VB/be certainly/RB/certainly much/RB/much faster/JJR/faster than/IN/than the/DT/the simple/JJ/simple school/NN/school level/NN/level algorithm/NN/algorithm that/WDT/that we/PRP/we are/VBP/are talking/VBG/talking about/NNP/about. and/CC/and euclid/VBD/euclid ?/./? s/NNS/s algorithm/VBP/algorithm is/VBZ/is also/RB/also clever/RB/clever and/CC/and that/IN/that makes/NNS/makes it/PRP/it more/JJR/more exciting/VBG/exciting and/CC/and that/IN/that is/VBZ/is also/RB/also again/RB/again the/DT/the spirit/NN/spirit of/IN/of this/DT/this course/NNP/course. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 31/CD/31 /CD/) so/RB/so /,/, let/VB/let me/PRP/me begin/VB/begin with/IN/with the/DT/the simple/JJ/simple school/NN/school level/NN/level algorithm/NN/algorithm for/IN/for factoring/NNP/factoring. so/RB/so /,/, everybody/NN/everybody knows/VBZ/knows this/DT/this /,/, but/CC/but let/VB/let me/PRP/me state/VB/state it/PRP/it anyway/NNP/anyway. so/RB/so /,/, basically/RB/basically there/EX/there are/VBP/are 2/CD/2 or/CC/or 3/CD/3 steps/NNS/steps /./. let/NN/let me/PRP/me write/VBP/write down/RP/down the/DT/the input/NN/input it/PRP/it is/VBZ/is 2/CD/2 integers/NNS/integers m/NN/m and/CC/and n/NNP/n. what/WP/what we/PRP/we need/VBP/need is/VBZ/is the/DT/the greatest/JJS/greatest common/JJ/common divisor/NN/divisor which/WDT/which is/VBZ/is also/RB/also the/DT/the largest/JJS/largest integer/NN/integer that/WDT/that divides/VBZ/divides both/DT/both and/CC/and when/WRB/when i/PRP/i say/VBP/say divides/NNS/divides i/PRP/i mean/VBP/mean without/IN/without leaving/VBG/leaving a/DT/a reminder/NNP/reminder. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what the/DT/the algorithm/NN/algorithm will/MD/will look/VB/look like/NNP/like. so/RB/so /,/, step/VB/step 1/CD/1 we/PRP/we are/VBP/are going/VBG/going to/TO/to factorize/VB/factorize m/NNP/m. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? it/PRP/it means/VBZ/means finding/VBG/finding primes/NNS/primes that/WDT/that we/PRP/we call/VBP/call them/PRP/them m/NN/m 1/CD/1 m/NN/m 2/CD/2 till/NN/till m/NN/m k/NN/k such/JJ/such that/IN/that m/NN/m is/VBZ/is m/NN/m 1/CD/1 times/NNS/times m/VBP/m 2/CD/2 times/NNS/times all/DT/all of/IN/of this/NNP/this. the/DT/the next/JJ/next step/NN/step is/VBZ/is to/TO/to factorize/VB/factorize n/NNP/n. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? again/RB/again find/VB/find break/NN/break n/NN/n into/IN/into its/PRP$/its factors/NNP/factors. so/RB/so /,/, write/IN/write n/NN/n as/IN/as n/NN/n 1/CD/1 time/NN/time n/NN/n 2/CD/2 times/NNS/times till/RB/till some/DT/some n/NN/n j/NNP/j. note/NN/note that/IN/that the/DT/the same/JJ/same factor/NN/factor may/MD/may appear/VB/appear several/JJ/several times/NNS/times and/CC/and of/IN/of course/NN/course /,/, we/PRP/we are/VBP/are here/RB/here to/TO/to write/VB/write it/PRP/it separately/NNP/separately. the/DT/the next/JJ/next step/NN/step is/VBZ/is to/TO/to identify/VB/identify common/JJ/common factors/NNS/factors and/CC/and then/RB/then multiply/RB/multiply and/CC/and return/NN/return the/DT/the result/NNP/result. we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take an/DT/an example/NN/example of/IN/of this/DT/this and/CC/and in/IN/in a/DT/a minute/NN/minute and/CC/and we/PRP/we will/MD/will see/VB/see we/PRP/we will/MD/will see/VB/see what/WP/what exactly/RB/exactly these/DT/these steps/NNS/steps do/NNP/do. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 19/CD/19 /CD/) let/NN/let me/PRP/me now/RB/now /,/, state/NN/state euclid/VBD/euclid ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to write/VB/write this/DT/this as/IN/as a/DT/a procedure/NNP/procedure. so/RB/so /,/, euclid/VBD/euclid is/VBZ/is a/DT/a procedure/NN/procedure which/WDT/which will/MD/will take/VB/take 2/CD/2 arguments/NNS/arguments m/NN/m and/CC/and n/NNP/n. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to invent/VB/invent a/DT/a pseudo/NN/pseudo language/NN/language as/IN/as i/PRP/i go/VBP/go along/IN/along and/CC/and that/IN/that is/VBZ/is again/RB/again going/VBG/going to/TO/to be/VB/be in/IN/in the/DT/the spirit/NN/spirit of/IN/of the/DT/the course/NN/course we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be too/RB/too picky/JJ/picky about/IN/about how/WRB/how we/PRP/we write/VBP/write down/RP/down algorithms/NNS/algorithms ?/./? so/RB/so /,/, long/RB/long as/IN/as what/WP/what i/PRP/i mean/VBP/mean is/VBZ/is clear/JJ/clear to/TO/to you/PRP/you perfect/VB/perfect everything/NN/everything is/VBZ/is fine/NNP/fine. so/RB/so /,/, you/PRP/you could/MD/could express/VB/express your/PRP$/your algorithms/NNS/algorithms in/IN/in the/DT/the most/RBS/most in/IN/in the/DT/the most/RBS/most suitable/JJ/suitable nicest/NN/nicest syntax/NNP/syntax. so/RB/so /,/, that/IN/that it/PRP/it is/VBZ/is easy/JJ/easy for/IN/for you/PRP/you to/TO/to get/VB/get your/PRP$/your meaning/NN/meaning across/NNP/across. we/PRP/we will/MD/will come/VB/come to/TO/to all/DT/all this/DT/this in/IN/in somewhat/DT/somewhat more/RBR/more detail/JJ/detail in/IN/in the/DT/the next/JJ/next lecture/NN/lecture or/CC/or /,/, so/RB/so what/WP/what does/VBZ/does euclid/JJ/euclid do/VB/do ?/./? so/RB/so /,/, the/DT/the first/JJ/first is/VBZ/is a/DT/a check/NNP/check. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check whether/IN/whether m/NN/m divides/NNS/divides n/VBP/n while/IN/while m/NN/m does/VBZ/does not/RB/not divide/VB/divide n/NN/n we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do the/DT/the following/NNP/following. so/RB/so /,/, first/JJ/first we/PRP/we are/VBP/are going/VBG/going to/TO/to calculate/VB/calculate the/DT/the remainder/NNP/remainder. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to calculate/VB/calculate r/NN/r of/IN/of n/NN/n mod/NN/mod m/NNP/m. then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to set/VB/set n/NN/n equals/NNS/equals m/VBP/m and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to set/VB/set m/NN/m to/TO/to be/VB/be r/NNP/r. al/NN/al these/DT/these steps/NNS/steps are/VBP/are going/VBG/going to/TO/to be/VB/be done/VBN/done inside/NN/inside the/DT/the loop/NNP/loop. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the loop/NN/loop over/IN/over here/RB/here we/PRP/we will/MD/will prove/VB/prove soon/RB/soon that/IN/that eventually/RB/eventually this/DT/this loop/NN/loop will/MD/will have/VB/have to/TO/to terminate/NNP/terminate. and/CC/and after/IN/after it/PRP/it terminates/VBZ/terminates all/DT/all that/DT/that euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm does/VBZ/does is/VBZ/is to/TO/to return/VB/return the/DT/the value/NN/value that/IN/that m/NN/m has/VBZ/has at/IN/at that/DT/that point/NN/point and/CC/and that/IN/that is/VBZ/is it/PRP/it that/IN/that is/VBZ/is all/DT/all there/RB/there is/VBZ/is to/TO/to the/DT/the algorithm/NNP/algorithm. it/PRP/it is/VBZ/is not/RB/not clear/JJ/clear when/WRB/when you/PRP/you first/RB/first look/VBP/look at/IN/at this/DT/this algorithm/NN/algorithm that/IN/that in/IN/in fact/NN/fact /,/, this/DT/this algorithm/NN/algorithm works/NNP/works. it/PRP/it seems/VBZ/seems to/TO/to be/VB/be doing/VBG/doing some/DT/some divisions/NNS/divisions and/CC/and taking/VBG/taking some/DT/some remainders/NNS/remainders /,/, but/CC/but it/PRP/it is/VBZ/is not/RB/not actually/RB/actually factorizing/VBG/factorizing any/DT/any of/IN/of the/DT/the numbers/NNS/numbers that/WDT/that you/PRP/you want/VBP/want who/WP/who is/VBZ/is greatest/VBP/greatest common/JJ/common divisors/NNS/divisors you/PRP/you want/NNP/want. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now /,/, take/VBP/take some/DT/some examples/NNS/examples and/CC/and see/VB/see whether/IN/whether or/CC/or not/RB/not this/DT/this algorithm/NN/algorithm works/NNP/works. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 19/CD/19 /CD/) so/RB/so /,/, let/VB/let us/PRP/us first/RB/first take/VB/take let/NN/let us/PRP/us first/RB/first take/VB/take a/DT/a small/JJ/small example/NN/example where/WRB/where we/PRP/we have/VBP/have m/NN/m equals/NNS/equals say/VBP/say 36/CD/36 n/NN/n equals/NNS/equals 48/CD/48. how/WRB/how will/MD/will you/PRP/you do/VB/do it/PRP/it using/VBG/using our/PRP$/our simple/NN/simple algorithm/NNP/algorithm. well/RB/well we/PRP/we factor/NN/factor m/NN/m is/VBZ/is equal/JJ/equal to/TO/to a/DT/a product/NN/product of/IN/of prime/JJ/prime factors/NNP/factors. so/RB/so /,/, the/DT/the idea/NN/idea is/VBZ/is going/VBG/going to/TO/to be/VB/be that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to test/NN/test numbers/NNS/numbers one/CD/one after/IN/after another/NNP/another. so/RB/so /,/, we/PRP/we start/VBP/start with/IN/with say/NN/say 2/CD/2 and/CC/and yes/NNS/yes 2/CD/2 is/VBZ/is a/DT/a factor/NNP/factor. so/RB/so /,/, we/PRP/we have/VBP/have to/TO/to write/VB/write it/PRP/it as/IN/as 2.so/CD/2.so /,/, then/RB/then we/PRP/we divides/VBZ/divides 36/CD/36 by/IN/by 2/CD/2 we/PRP/we get/VBP/get 18/CD/18. so/NNP/so. in/IN/in fact/NN/fact /,/, now/RB/now /,/, you/PRP/you have/VBP/have to/TO/to factorize/VB/factorize 18/CD/18 well/RB/well 2/CD/2 is/VBZ/is again/RB/again a/DT/a factor/NNP/factor. so/RB/so /,/, then/RB/then what/WP/what remains/VBZ/remains is/VBZ/is 9/CD/9. now/RB/now /,/, 2/CD/2 is/VBZ/is not/RB/not a/DT/a factor/NNP/factor. so/RB/so /,/, you/PRP/you go/VBP/go out/RP/out to/TO/to the/DT/the next/JJ/next prime/NN/prime number/NN/number which/WDT/which is/VBZ/is 3/CD/3 which/WDT/which is/VBZ/is a/DT/a factor/NN/factor and/CC/and then/RB/then only/RB/only the/DT/the factor/NN/factor 3/CD/3 remains/NNP/remains. so/RB/so /,/, we/PRP/we have/VBP/have factorized/VBN/factorized m/NN/m what/WP/what about/IN/about n/NN/n ?/./? again/RB/again we/PRP/we do/VBP/do the/DT/the same/JJ/same thing/NN/thing we/PRP/we start/VBP/start with/IN/with 2/CD/2 yes/NNS/yes 2/CD/2 is/VBZ/is a/DT/a factor/NNP/factor. so/RB/so /,/, that/IN/that gives/VBZ/gives us/PRP/us 24/CD/24. again/RB/again 2/CD/2 is/VBZ/is a/DT/a factor/NN/factor that/WDT/that gives/VBZ/gives us/PRP/us 12/CD/12. again/RB/again 2/CD/2 is/VBZ/is a/DT/a factor/NNP/factor. so/RB/so /,/, that/IN/that leaves/NNS/leaves us/PRP/us 6/CD/6 again/RB/again 2/CD/2 is/VBZ/is a/DT/a factor/NN/factor and/CC/and then/RB/then that/IN/that leaves/NNS/leaves us/PRP/us 3/CD/3. so/RB/so /,/, then/RB/then we/PRP/we want/VBP/want to/TO/to identify/VB/identify what/WP/what factors/NNS/factors are/VBP/are common/JJ/common well/RB/well these/DT/these 2/CD/2 are/VBP/are common/JJ/common and/CC/and then/RB/then 1/CD/1 3/CD/3 is/VBZ/is also/RB/also common/NNP/common. so/RB/so /,/, common/JJ/common the/DT/the common/JJ/common factors/NNS/factors are/VBP/are 2/CD/2 2/CD/2 and/CC/and 3/CD/3 and/CC/and /,/, so/RB/so g/JJ/g c/NN/c d/NN/d is/VBZ/is equal/JJ/equal to/TO/to 2/CD/2 into/IN/into 2/CD/2 into/IN/into 3/CD/3 or/CC/or 12/CD/12 nothing/NN/nothing terribly/RB/terribly difficult/JJ/difficult in/IN/in this/NNP/this. this/DT/this is/VBZ/is all/DT/all of/IN/of course/NN/course /,/, school/NN/school level/NN/level stuff/NNP/stuff. so/RB/so /,/, let/VB/let us/PRP/us contrast/VB/contrast this/DT/this with/IN/with what/WP/what euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm does/NNP/does. so/RB/so /,/, let/VB/let me/PRP/me bring/VBG/bring euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm back/NNP/back. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start with/IN/with m/NN/m equals/NNS/equals 36/CD/36 /,/, n/NN/n equals/NNS/equals 48/CD/48. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 11/CD/11 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write it/PRP/it down/IN/down as/IN/as we/PRP/we go/VBP/go along/NNP/along. so/RB/so /,/, doe/NN/doe ?/./? s/NNS/s m/VBP/m we/PRP/we have/VBP/have to/TO/to check/VB/check whether/IN/whether m/NN/m does/VBZ/does not/RB/not divide/VB/divide n/NNP/n. so/RB/so /,/, 36/CD/36 divide/NN/divide n/NN/n no/DT/no /,/, so/RB/so when/WRB/when /,/, so/RB/so therefore/RB/therefore we/PRP/we enter/VBP/enter the/DT/the loop/NNP/loop. so/RB/so /,/, now/RB/now we/PRP/we calculate/VBP/calculate r/NN/r equals/NNS/equals n/VBP/n mod/NN/mod m/NNP/m. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words r/IN/r is/VBZ/is equal/JJ/equal to/TO/to 48/CD/48 mod/NN/mod 36/CD/36 that/WDT/that is/VBZ/is equal/JJ/equal to/TO/to 12/CD/12 then/RB/then we/PRP/we calculate/VBP/calculate n/NN/n is/VBZ/is equal/JJ/equal to/TO/to m/NNP/m. let/VB/let me/PRP/me write/VB/write down/RP/down over/IN/over here/RB/here that/IN/that well/RB/well we/PRP/we know/VBP/know that/IN/that m/NN/m is/VBZ/is equal/JJ/equal to/TO/to 36/CD/36 and/CC/and n/NN/n is/VBZ/is 48/CD/48. so/RB/so /,/, n/IN/n takes/NNS/takes the/DT/the value/NN/value that/IN/that m/NN/m originally/RB/originally had/NNP/had. so/RB/so /,/, n/IN/n is/VBZ/is now/RB/now /,/, going/VBG/going to/TO/to become/VB/become 36/CD/36 and/CC/and m/NN/m takes/VBZ/takes the/DT/the value/NN/value which/WDT/which r/NN/r has/VBZ/has /,/, so/RB/so r/RB/r is/VBZ/is going/VBG/going to/TO/to become/VB/become 12/CD/12. so/RB/so /,/, at/IN/at this/DT/this point/NN/point the/DT/the iteration/NN/iteration has/VBZ/has ended/NNP/ended. so/RB/so /,/, at/IN/at this/DT/this point/NN/point our/PRP$/our iteration/NN/iteration has/VBZ/has ended/VBN/ended and/CC/and we/PRP/we have/VBP/have left/VBN/left with/IN/with m/NN/m equals/NNS/equals 36/CD/36 and/CC/and n/NN/n equals/NNS/equals 36/CD/36 and/CC/and m/NN/m equals/NNS/equals 12/CD/12. but/CC/but now/RB/now /,/, we/PRP/we have/VBP/have to/TO/to go/VB/go and/CC/and check/VB/check out/RP/out the/DT/the loop/NN/loop again/RB/again /,/, because/IN/because well/RB/well that/IN/that is/VBZ/is what/WP/what the/DT/the while/NN/while loop/NN/loop says/NNP/says. so/RB/so /,/, this/DT/this time/NN/time n/NN/n equals/NNS/equals 36/CD/36 and/CC/and m/NN/m equals/NNS/equals 12/CD/12 and/CC/and again/RB/again we/PRP/we had/VBD/had to/TO/to check/VB/check whether/IN/whether m/NN/m does/VBZ/does or/CC/or does/VBZ/does not/RB/not divide/VB/divide 12/CD/12 m/NN/m r/NN/r does/VBZ/does not/RB/not divide/VB/divide n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 43/CD/43 /CD/) so/RB/so /,/, does/VBZ/does 12/CD/12 divides/NNS/divides 36/CD/36. this/DT/this time/NN/time the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes and/CC/and therefore/RB/therefore /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to exit/VB/exit the/DT/the loop/NNP/loop. and/CC/and in/IN/in fact/NN/fact /,/, at/IN/at the/DT/the end/NN/end of/IN/of it/PRP/it we/PRP/we are/VBP/are going/VBG/going to/TO/to return/VB/return the/DT/the current/JJ/current value/NN/value of/IN/of m/NN/m which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to 12/CD/12 /,/, so/RB/so we/PRP/we will/MD/will be/VB/be returning/VBG/returning 12/CD/12. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now /,/, compare/VBP/compare these/DT/these 2/CD/2 algorithms/NNP/algorithms. so/RB/so /,/, here/RB/here you/PRP/you can/MD/can see/VB/see roughly/RB/roughly what/WP/what the/DT/the work/NN/work done/NN/done by/IN/by the/DT/the 2/CD/2 algorithms/NNS/algorithms is/NNP/is. the/DT/the simple/JJ/simple algorithm/NN/algorithm had/VBD/had to/TO/to do/VB/do factorizations/NNS/factorizations then/RB/then it/PRP/it had/VBD/had to/TO/to collect/VB/collect common/JJ/common factors/NNS/factors and/CC/and it/PRP/it had/VBD/had to/TO/to do/VB/do it/PRP/it had/VBD/had to/TO/to multiply/RB/multiply the/DT/the factors/NNS/factors together/RB/together and/CC/and return/NN/return the/DT/the answer/NNP/answer. euclid/VBD/euclid ?/./? s/NNS/s algorithm/VBP/algorithm on/IN/on the/DT/the other/JJ/other hand/NN/hand did/VBD/did 1/CD/1 division/NNP/division. so/RB/so /,/, first/JJ/first time/NN/time it/PRP/it divided/VBD/divided 36/CD/36. it/PRP/it divided/VBD/divided it/PRP/it checked/VBD/checked if/IN/if 36/CD/36 divides/NNS/divides 48/CD/48 which/WDT/which is/VBZ/is the/DT/the value/NN/value of/IN/of n/NN/n that/IN/that we/PRP/we had/NNP/had. and/CC/and when/WRB/when it/PRP/it found/VBD/found that/IN/that answer/NN/answer was/VBD/was false/RB/false the/DT/the division/NN/division was/VBD/was not/RB/not possible/JJ/possible then/RB/then it/PRP/it took/VBD/took the/DT/the remainder/NNP/remainder. then/RB/then it/PRP/it simply/RB/simply exchanged/VBD/exchanged the/DT/the numbers/NNS/numbers basically/RB/basically and/CC/and then/RB/then again/RB/again it/PRP/it did/VBD/did 1/CD/1 more/JJR/more division/NNP/division. so/RB/so /,/, i/PRP/i can/MD/can summarize/VB/summarize the/DT/the work/NN/work over/IN/over here/RB/here by/IN/by saying/VBG/saying that/IN/that this/DT/this did/VBD/did roughly/RB/roughly 2/CD/2 divisions/NNP/divisions. how/WRB/how much/JJ/much work/NN/work does/VBZ/does this/DT/this do/VB/do ?/./? well/RB/well it/PRP/it calculated/VBD/calculated these/DT/these /,/, so/RB/so many/JJ/many factors/NNP/factors. so/RB/so /,/, it/PRP/it calculated/VBD/calculated 4/CD/4 factors/NNS/factors /,/, so/RB/so it/PRP/it had/VBD/had to/TO/to at/IN/at least/JJS/least do/VB/do 3/CD/3 divisions/NNS/divisions to/TO/to get/VB/get each/DT/each factor/NNP/factor. here/RB/here it/PRP/it calculated/VBD/calculated 5/CD/5 factors/NNP/factors. so/RB/so /,/, it/PRP/it had/VBD/had to/TO/to at/IN/at least/JJS/least do/VB/do 4/CD/4 divisions/NNP/divisions. so/RB/so /,/, it/PRP/it at/IN/at least/JJS/least did/VBD/did 9/CD/9 divisions/NNS/divisions probably/RB/probably it/PRP/it did/VBD/did more/NNP/more. you/PRP/you can/MD/can see/VB/see in/IN/in a/DT/a quick/NN/quick example/NN/example immediately/RB/immediately where/WRB/where it/PRP/it will/MD/will have/VB/have to/TO/to do/VB/do many/JJ/many more/RBR/more than/IN/than these/NNP/these. as/IN/as you/PRP/you can/MD/can see/VB/see in/IN/in this/DT/this school/NN/school level/NN/level very/RB/very simple/JJ/simple factoring/VBG/factoring algorithm/NN/algorithm we/PRP/we use/VBP/use 9/CD/9 divisions/NNS/divisions whereas/IN/whereas /,/, in/IN/in this/DT/this somewhat/NN/somewhat sophisticated/VBD/sophisticated algorithm/NN/algorithm we/PRP/we use/VBP/use really/RB/really 2/CD/2 divisions/NNP/divisions. so/RB/so /,/, clearly/RB/clearly you/PRP/you have/VB/have done/VBN/done less/JJR/less work/NNP/work. and/CC/and although/IN/although i/PRP/i have/VBP/have not/RB/not proved/VBN/proved yet/RB/yet that/IN/that euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm in/IN/in fact/NN/fact /,/, works/VBZ/works you/PRP/you can/MD/can see/VB/see that/IN/that it/PRP/it is/VBZ/is returning/VBG/returning the/DT/the correct/NN/correct answer/NNP/answer. so/RB/so /,/, but/CC/but we/PRP/we will/MD/will show/VB/show later/JJ/later on/IN/on that/NNP/that. in/IN/in fact/NN/fact /,/, euclid/VBD/euclid ?/./? s/NNS/s algorithm/VBP/algorithm does/VBZ/does do/VB/do does/VBZ/does work/VB/work correctly/NNP/correctly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 17/CD/17 /CD/) so/RB/so /,/, let/VB/let me/PRP/me take/VB/take one/CD/one more/JJR/more example/NN/example m/NN/m equals/NNS/equals 434/CD/434 /,/, n/NN/n equals/NNS/equals 966/CD/966. so/RB/so /,/, these/DT/these are/VBP/are somewhat/RB/somewhat large/JJ/large numbers/NNS/numbers and/CC/and let/VB/let us/PRP/us see/VB/see what/WP/what will/MD/will happen/VB/happen over/IN/over here/NNP/here. so/RB/so /,/, suppose/DT/suppose you/PRP/you want/VBP/want to/TO/to factorize/VB/factorize these/DT/these numbers/NNS/numbers first/RB/first of/IN/of all/DT/all it/PRP/it will/MD/will take/VB/take some/DT/some work/NN/work /,/, but/CC/but let/VB/let us/PRP/us see/VB/see what/WP/what the/DT/the answer/NN/answer is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so /,/, m/NN/m can/MD/can be/VB/be written/VBN/written as/IN/as 2/CD/2 times/NNS/times 7/CD/7 times/NNS/times 31/CD/31 /,/, n/NN/n can/MD/can be/VB/be factorized/VBN/factorized as/IN/as 2/CD/2 times/NNS/times 7/CD/7 times/NNS/times 139/CD/139 what/WP/what is/VBZ/is the/DT/the answer/NN/answer ?/./? the/DT/the common/JJ/common factors/NNS/factors are/VBP/are 2/CD/2 and/CC/and 7/CD/7 and/CC/and the/DT/the g/NN/g c/NN/c d/NN/d therefore/RB/therefore /,/, is/VBZ/is 14/CD/14 /./. let/NN/let us/PRP/us now/RB/now /,/, come/VBP/come back/RB/back to/TO/to euclid/VB/euclid ?/./? s/NNS/s algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 31/CD/31 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down again/RB/again m/NN/m is/VBZ/is equal/JJ/equal to/TO/to 434/CD/434 and/CC/and n/NN/n is/VBZ/is equal/JJ/equal to/TO/to 966/CD/966. the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to compute/VB/compute the/DT/the reminder/NN/reminder of/IN/of n/NN/n mod/NN/mod m/NNP/m. so/RB/so /,/, then/RB/then r/VB/r is/VBZ/is going/VBG/going to/TO/to be/VB/be according/VBG/according to/TO/to this/DT/this step/NN/step r/NN/r is/VBZ/is going/VBG/going to/TO/to be/VB/be 966/CD/966 mod/NN/mod 434/CD/434. well/RB/well 966/CD/966 is/VBZ/is equal/JJ/equal to/TO/to 2/CD/2 times/NNS/times 434/CD/434 which/WDT/which is/VBZ/is 868/CD/868 plus/RB/plus 98/CD/98 under/IN/under 4/CD/4 i/PRP/i can/MD/can write/VB/write down/RP/down r/NN/r as/IN/as equal/JJ/equal to/TO/to 98/CD/98. after/IN/after this/DT/this we/PRP/we just/RB/just had/VBD/had to/TO/to exchange/VB/exchange values/NNS/values basically/NNP/basically. so/RB/so /,/, now/RB/now /,/, n/VBP/n is/VBZ/is going/VBG/going to/TO/to take/VB/take the/DT/the old/JJ/old value/NN/value of/IN/of m/NNP/m. so/RB/so /,/, n/IN/n is/VBZ/is going/VBG/going to/TO/to be/VB/be 434/CD/434 and/CC/and m/NN/m is/VBZ/is going/VBG/going to/TO/to take/VB/take the/DT/the value/NN/value of/IN/of r/NN/r /,/, so/RB/so which/WDT/which is/VBZ/is 98/CD/98. so/RB/so /,/, at/IN/at the/DT/the end/NN/end of/IN/of one/CD/one iteration/NN/iteration of/IN/of euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm we/PRP/we have/VBP/have new/JJ/new values/NNS/values of/IN/of m/NN/m and/CC/and n/NN/n and/CC/and these/DT/these are/VBP/are the/DT/the new/JJ/new values/NNP/values. so/RB/so /,/, we/PRP/we started/VBD/started off/RP/off with/IN/with the/DT/the values/NNS/values 434/CD/434 and/CC/and 966/CD/966. after/IN/after 1/CD/1 iteration/NN/iteration we/PRP/we have/VBP/have the/DT/the values/NNS/values 434/CD/434 98/CD/98 and/CC/and 434/CD/434 in/IN/in that/DT/that order/NN/order m/NN/m and/CC/and n/NNP/n. so/RB/so /,/, now/RB/now /,/, we/PRP/we just/RB/just have/VBP/have to/TO/to repeat/VB/repeat the/DT/the same/JJ/same thing/NN/thing with/IN/with these/DT/these new/JJ/new values/NNS/values /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the first/JJ/first iteration/NNP/iteration. and/CC/and in/IN/in the/DT/the second/JJ/second iteration/NN/iteration we/PRP/we are/VBP/are again/RB/again going/VBG/going to/TO/to calculate/VB/calculate r/NN/r equals/NNS/equals n/VBP/n mod/NN/mod m/NNP/m. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 26/CD/26 /CD/) so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do that/NNP/that. so/RB/so /,/, if/IN/if you/PRP/you calculate/VBP/calculate r/JJ/r equals/NNS/equals n/VBP/n mod/NN/mod m/NN/m we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get the/DT/the new/JJ/new value/NN/value of/IN/of r/NN/r to/TO/to be/VB/be equal/JJ/equal to/TO/to 434/CD/434 mod/NN/mod 98/CD/98. so/RB/so /,/, you/PRP/you have/VBP/have to/TO/to do/VB/do the/DT/the division/NN/division over/IN/over here/RB/here and/CC/and which/WDT/which is/VBZ/is 434/CD/434 can/MD/can be/VB/be written/VBN/written as/IN/as 98/CD/98 times/NNS/times 4/CD/4 /,/, so/RB/so this/DT/this is/VBZ/is 392/CD/392 /,/, so/RB/so plus/RB/plus we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get 42/CD/42. so/RB/so /,/, r/NN/r is/VBZ/is going/VBG/going to/TO/to be/VB/be equal/JJ/equal to/TO/to 42/CD/42 /,/, but/CC/but of/IN/of course/NN/course /,/, when/WRB/when we/PRP/we began/VBD/began this/DT/this iteration/NN/iteration we/PRP/we had/VBD/had to/TO/to check/VB/check whether/IN/whether m/NN/m does/VBZ/does or/CC/or does/VBZ/does not/RB/not divide/VB/divide n/NN/n or/CC/or whether/IN/whether 98/CD/98 does/VBZ/does or/CC/or does/VBZ/does not/RB/not divide/VB/divide 434/CD/434 /,/, but/CC/but clearly/RB/clearly it/PRP/it is/VBZ/is leaving/VBG/leaving the/DT/the remainder/NN/remainder and/CC/and therefore/RB/therefore /,/, we/PRP/we will/MD/will enter/VB/enter this/DT/this iteration/NNP/iteration. after/IN/after that/DT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to set/VB/set n/NN/n equal/JJ/equal to/TO/to m/VB/m /,/, so/RB/so m/NN/m the/DT/the value/NN/value of/IN/of n/NN/n is/VBZ/is 98/CD/98 and/CC/and m/NN/m will/MD/will be/VB/be equal/JJ/equal to/TO/to r/VB/r which/WDT/which is/VBZ/is 42/CD/42. so/RB/so /,/, at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the second/JJ/second iteration/NN/iteration these/DT/these are/VBP/are the/DT/the values/NNS/values that/WDT/that we/PRP/we have/NNP/have. so/RB/so /,/, n/IN/n is/VBZ/is equal/JJ/equal to/TO/to 98/CD/98 and/CC/and m/NN/m is/VBZ/is equal/JJ/equal to/TO/to 42/CD/42. so/RB/so /,/, we/PRP/we will/MD/will have/VB/have to/TO/to go/VB/go into/IN/into the/DT/the third/JJ/third iteration/NN/iteration for/IN/for the/DT/the beginning/NN/beginning of/IN/of the/DT/the third/JJ/third iteration/NN/iteration /,/, let/VB/let me/PRP/me just/RB/just write/VBP/write down/RP/down the/DT/the values/NNP/values. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 56/CD/56 /CD/) so/RB/so /,/, we/PRP/we have/VBP/have m/NN/m equals/NNS/equals 42/CD/42 n/NN/n equals/NNS/equals 98/CD/98 again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check does/VBZ/does m/NN/m divide/VB/divide n/NNP/n. it/PRP/it does/VBZ/does not/RB/not and/CC/and /,/, so/RB/so we/PRP/we will/MD/will enter/VB/enter the/DT/the loop/NN/loop when/WRB/when we/PRP/we enter/VBP/enter the/DT/the loop/NN/loop we/PRP/we have/VBP/have to/TO/to find/VB/find out/RP/out r/NN/r equals/NNS/equals n/VBP/n mod/NN/mod m/NNP/m. so/RB/so /,/, that/IN/that is/VBZ/is equal/JJ/equal to/TO/to 98/CD/98 mod/NN/mod 42/CD/42. 42/CD/42 times/NNS/times 2/CD/2 is/VBZ/is 84/CD/84 /,/, so/RB/so 98/CD/98 mod/NN/mod 42/CD/42 is/VBZ/is 14/CD/14. then/RB/then there/RB/there is/VBZ/is just/RB/just a/DT/a matter/NN/matter of/IN/of setting/VBG/setting n/NN/n and/CC/and m/NN/m correctly/NNP/correctly. so/RB/so /,/, n/IN/n will/MD/will now/RB/now /,/, equal/JJ/equal the/DT/the old/JJ/old value/NN/value of/IN/of m/NNP/m. so/RB/so /,/, this/DT/this is/VBZ/is 42/CD/42 and/CC/and m/NN/m will/MD/will equal/VB/equal the/DT/the value/NN/value of/IN/of r/NN/r we/PRP/we just/RB/just calculated/NNP/calculated. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be 14/CD/14. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the values/NNS/values at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the third/JJ/third iteration/NNP/iteration. so/RB/so /,/, now/RB/now /,/, again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to come/VB/come back/RB/back and/CC/and execute/VB/execute this/DT/this loop/NN/loop and/CC/and again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check does/VBZ/does m/NN/m divide/VB/divide n/NN/n or/CC/or not/NNP/not. and/CC/and this/DT/this time/NN/time we/PRP/we will/MD/will see/VB/see that/IN/that 14/CD/14 /,/, in/IN/in fact/NN/fact does/VBZ/does divide/VB/divide 42/CD/42 and/CC/and at/IN/at this/DT/this point/NN/point the/DT/the loop/NN/loop will/MD/will be/VB/be exited/NNP/exited. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 20/CD/20 /CD/) and/CC/and at/IN/at the/DT/the end/NN/end we/PRP/we are/VBP/are going/VBG/going to/TO/to return/VB/return the/DT/the result/NN/result as/IN/as m/NNP/m. the/DT/the value/NN/value of/IN/of m/NN/m right/RB/right now/RB/now is/VBZ/is 14/CD/14 and/CC/and therefore/RB/therefore /,/, 14/CD/14 will/MD/will be/VB/be returned/NNP/returned. so/RB/so /,/, what/WDT/what has/VBZ/has happened/VBN/happened ?/./? we/PRP/we took/VBD/took 3/CD/3 iterations/NNP/iterations. so/RB/so /,/, summary/JJ/summary of/IN/of this/DT/this all/DT/all this/DT/this is/VBZ/is we/PRP/we took/VBD/took 3/CD/3 iterations/NNS/iterations what/WP/what happened/VBN/happened in/IN/in each/DT/each iteration/NN/iteration well/RB/well we/PRP/we did/VBD/did 1/CD/1 division/NN/division per/IN/per iteration/NNP/iteration. and/CC/and before/IN/before quitting/VBG/quitting from/IN/from the/DT/the loop/NN/loop we/PRP/we have/VBP/have to/TO/to do/VB/do one/CD/one more/JJR/more iteration/NN/iteration one/CD/one more/JJR/more division/NN/division and/CC/and therefore/RB/therefore /,/, that/IN/that took/VBD/took 4/CD/4 divisions/NNS/divisions essentially/NNP/essentially. so/RB/so /,/, euclid/VBD/euclid ?/./? s/NNS/s algorithm/VBP/algorithm for/IN/for this/DT/this somewhat/NN/somewhat complicated/VBD/complicated problem/NN/problem m/NN/m equals/NNS/equals 434/CD/434 n/NN/n equals/NNS/equals 966/CD/966 where/WRB/where we/PRP/we are/VBP/are asking/VBG/asking to/TO/to find/VB/find the/DT/the greatest/JJS/greatest common/JJ/common divisor/NN/divisor of/IN/of m/NN/m equals/NNS/equals 434/CD/434 and/CC/and n/NN/n equals/NNS/equals 966/CD/966 took/VBD/took 4/CD/4 divisions/NNP/divisions. let/NN/let us/PRP/us now/RB/now /,/, check/NN/check what/WP/what happens/NNS/happens with/IN/with the/DT/the simple/JJ/simple algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 36/CD/36 /CD/) so/RB/so /,/, here/RB/here where/WRB/where the/DT/the factors/NNS/factors that/DT/that we/PRP/we found/NNP/found. so/RB/so /,/, how/WRB/how many/JJ/many divisions/NNS/divisions did/VBD/did it/PRP/it take/VB/take ?/./? at/IN/at first/JJ/first glance/NN/glance you/PRP/you might/MD/might see/VB/see you/PRP/you might/MD/might think/VB/think that/IN/that it/PRP/it is/VBZ/is only/RB/only going/VBG/going to/TO/to take/VB/take 2/CD/2 divisions/NNS/divisions to/TO/to calculate/VB/calculate m/NN/m and/CC/and 2/CD/2 more/RBR/more divisions/NNS/divisions to/TO/to calculate/VB/calculate n/NN/n /,/, so/RB/so which/WDT/which is/VBZ/is 4/CD/4 divisions/NNS/divisions /,/, but/CC/but that/IN/that is/VBZ/is not/RB/not quite/RB/quite correct/NNP/correct. to/TO/to check/VB/check that/IN/that there/EX/there is/VBZ/is no/DT/no factor/NN/factor between/IN/between 2/CD/2 and/CC/and 7/CD/7 we/PRP/we would/MD/would require/VB/require checking/VBG/checking for/IN/for 2/CD/2 3/CD/3 for/IN/for 3/CD/3 five/CD/five as/IN/as well/NNP/well. now/RB/now /,/, after/IN/after dividing/VBG/dividing by/IN/by 7/CD/7 we/PRP/we had/VBD/had to/TO/to check/VB/check whether/IN/whether 139/CD/139 is/VBZ/is a/DT/a prime/NNP/prime. so/RB/so /,/, that/IN/that would/MD/would also/RB/also involve/VB/involve checking/VBG/checking all/DT/all the/DT/the numbers/NNS/numbers until/IN/until 39/CD/39. so/RB/so /,/, that/IN/that would/MD/would require/VB/require substantially/RB/substantially many/JJ/many divisions/NNP/divisions. so/RB/so /,/, here/RB/here again/RB/again we/PRP/we require/VBP/require many/JJ/many divisions/NNS/divisions many/JJ/many more/RBR/more than/IN/than euclid/JJ/euclid ?/./? s/NNS/s algorithm/NNP/algorithm. in/IN/in fact/NN/fact /,/, you/PRP/you will/MD/will see/VB/see that/IN/that if/IN/if we/PRP/we take/VBP/take bigger/JJR/bigger and/CC/and bigger/JJR/bigger numbers/NNS/numbers factoring/VBG/factoring them/PRP/them becomes/VBZ/becomes much/RB/much harder/NNP/harder. you/PRP/you will/MD/will have/VB/have to/TO/to do/VB/do a/DT/a lot/NN/lot more/RBR/more work/NN/work whereas/NNS/whereas /,/, in/IN/in euclid/JJ/euclid ?/./? s/NNS/s case/NN/case we/PRP/we will/MD/will just/RB/just do/VB/do divisions/NNS/divisions and/CC/and we/PRP/we are/VBP/are we/PRP/we will/NNP/will. in/IN/in fact/NN/fact /,/, show/NN/show now/RB/now that/IN/that as/IN/as we/PRP/we do/VBP/do the/DT/the divisions/NNS/divisions then/RB/then numbers/NNS/numbers will/MD/will become/VB/become smaller/JJR/smaller and/CC/and smaller/JJR/smaller and/CC/and the/DT/the algorithm/NN/algorithm will/MD/will terminate/NNP/terminate. so/RB/so /,/, the/DT/the next/JJ/next topic/NN/topic that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get into/IN/into is/VBZ/is i/PRP/i want/VBP/want to/TO/to argue/VB/argue that/IN/that euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm actually/RB/actually works/NNP/works. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 10/CD/10 /CD/) i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to give/VB/give a/DT/a fairly/RB/fairly very/RB/very detail/JJ/detail proof/IN/proof i/PRP/i just/RB/just want/VBP/want to/TO/to indicate/VB/indicate the/DT/the main/JJ/main idea/NNP/idea. the/DT/the main/JJ/main idea/NN/idea is/VBZ/is really/RB/really a/DT/a fact/NN/fact about/IN/about divisibility/NN/divisibility and/CC/and remainder/NN/remainder and/CC/and things/NNS/things like/IN/like that/DT/that /,/, so/RB/so let/VB/let me/PRP/me indicate/VB/indicate that/NNP/that. so/RB/so /,/, this/DT/this idea/NN/idea says/VBZ/says that/IN/that if/IN/if m/NN/m divides/NNS/divides n/VBP/n then/RB/then g/JJ/g c/NN/c d/NN/d of/IN/of m/NN/m and/CC/and n/NN/n must/MD/must ;/:/; obviously/RB/obviously /,/, be/VB/be equal/JJ/equal to/TO/to m/VB/m /,/, because/IN/because clearly/RB/clearly m/VBP/m will/MD/will be/VB/be the/DT/the largest/JJS/largest number/NN/number which/WDT/which divides/VBZ/divides both/DT/both m/NN/m and/CC/and n/NNP/n. if/IN/if not/RB/not then/RB/then we/PRP/we can/MD/can write/VB/write g/NN/g c/NN/c d/NN/d of/IN/of m/NN/m and/CC/and n/NN/n is/VBZ/is the/DT/the same/JJ/same as/IN/as g/NN/g c/NN/c d/NN/d of/IN/of n/NN/n it/PRP/it is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the g/NN/g c/NN/c d/NN/d of/IN/of n/NN/n mod/NN/mod m/NN/m and/CC/and m/NN/m how/WRB/how do/VBP/do you/PRP/you prove/VB/prove this/DT/this ?/./? i/PRP/i will/MD/will leave/VB/leave it/PRP/it as/IN/as an/DT/an exercise/NN/exercise /,/, but/CC/but let/VB/let me/PRP/me just/RB/just mention/NN/mention the/DT/the main/JJ/main idea/NNP/idea. the/DT/the main/JJ/main idea/NN/idea is/VBZ/is suppose/JJ/suppose g/NN/g is/VBZ/is the/DT/the g/NN/g c/NN/c d/NN/d then/RB/then we/PRP/we can/MD/can write/VB/write m/NN/m as/IN/as a/DT/a times/NNS/times g/VBP/g and/CC/and n/NN/n as/IN/as b/NN/b times/NNS/times g/VBP/g where/WRB/where a/DT/a and/CC/and b/NN/b are/VBP/are relatively/RB/relatively prime/JJ/prime having/VBG/having written/VBN/written them/PRP/them in/IN/in this/DT/this manner/NN/manner you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to just/RB/just substitute/VB/substitute into/IN/into what/WP/what we/PRP/we have/VBP/have in/IN/in the/DT/the fact/NN/fact and/CC/and then/RB/then you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to get/VB/get the/DT/the answer/NNP/answer. actually/RB/actually the/DT/the fact/NN/fact itself/PRP/itself is/VBZ/is very/RB/very similar/JJ/similar to/TO/to what/WP/what we/PRP/we had/VBD/had in/IN/in euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm in/IN/in the/DT/the fact/NN/fact that/IN/that we/PRP/we have/VBP/have written/VBN/written down/NNP/down. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just show/VBP/show you/PRP/you the/DT/the iteration/NN/iteration the/DT/the loop/NN/loop part/NN/part of/IN/of euclid/JJ/euclid ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, the/DT/the fact/NN/fact says/VBZ/says that/IN/that if/IN/if you/PRP/you want/VBP/want to/TO/to calculate/VB/calculate the/DT/the g/NN/g c/NN/c d/NN/d of/IN/of m/NN/m and/CC/and n/NN/n then/RB/then you/PRP/you might/MD/might as/RB/as well/RB/well calculate/JJ/calculate d/NN/d g/NN/g c/NN/c d/NN/d of/IN/of n/NN/n mod/NN/mod m/NN/m and/CC/and m/NN/m what/WP/what does/VBZ/does our/PRP$/our loop/NN/loop do/VBP/do ?/./? it/PRP/it wants/VBZ/wants to/TO/to calculate/VB/calculate we/PRP/we want/VBP/want to/TO/to calculate/VB/calculate d/JJ/d g/NN/g c/NN/c d/NN/d of/IN/of m/NN/m and/CC/and n/NNP/n. it/PRP/it first/RB/first checks/VBZ/checks what/WP/what the/DT/the remainder/NN/remainder is/VBZ/is and/CC/and then/RB/then it/PRP/it calculates/VBZ/calculates the/DT/the fact/NN/fact is/VBZ/is essentially/RB/essentially n/VBN/n mod/NN/mod m/NNP/m. so/RB/so /,/, it/PRP/it is/VBZ/is essentially/RB/essentially this/DT/this term/NN/term over/IN/over here/RB/here and/CC/and we/PRP/we need/VBP/need and/CC/and then/RB/then it/PRP/it sets/VBZ/sets m/NN/m to/TO/to be/VB/be equal/JJ/equal to/TO/to r/NNP/r. so/RB/so /,/, the/DT/the first/JJ/first argument/NN/argument is/VBZ/is set/VBN/set to/TO/to r/VB/r and/CC/and the/DT/the second/JJ/second argument/NN/argument is/VBZ/is set/VBN/set to/TO/to the/DT/the old/JJ/old value/NN/value of/IN/of m/NN/m /,/, but/CC/but this/DT/this is/VBZ/is precisely/RB/precisely what/WP/what the/DT/the fact/NN/fact says/NNP/says. the/DT/the fact/NN/fact says/VBZ/says that/IN/that if/IN/if you/PRP/you want/VBP/want to/TO/to calculate/VB/calculate g/NN/g c/NN/c d/NN/d of/IN/of m/NN/m and/CC/and n/NN/n instead/RB/instead calculate/JJ/calculate g/NN/g c/NN/c d/NN/d of/IN/of n/NN/n mod/NN/mod m/NN/m and/CC/and m/NNP/m. in/IN/in fact/NN/fact /,/, once/RB/once we/PRP/we have/VBP/have once/RB/once we/PRP/we are/VBP/are given/VBN/given this/DT/this fact/NN/fact the/DT/the proof/JJ/proof of/IN/of euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm the/DT/the correctness/NN/correctness of/IN/of euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm is/VBZ/is at/IN/at least/JJS/least partially/RB/partially done/NNP/done. because/IN/because what/WP/what we/PRP/we have/VBP/have accomplished/VBN/accomplished is/VBZ/is that/IN/that we/PRP/we are/VBP/are sure/JJ/sure that/IN/that as/IN/as we/PRP/we go/VBP/go through/IN/through iterations/NNS/iterations we/PRP/we will/MD/will never/RB/never be/VB/be we/PRP/we will/MD/will always/RB/always maintain/VB/maintain integer/JJR/integer ?/./? s/NNS/s m/VBP/m and/CC/and n/NN/n and/CC/and who/WP/who ?/./? s/VBZ/s g/NN/g c/NN/c d/NN/d will/MD/will be/VB/be the/DT/the g/NN/g c/NN/c d/NN/d of/IN/of the/DT/the original/JJ/original values/NNS/values of/IN/of m/NN/m and/CC/and n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the invariant/JJ/invariant that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to maintain/NNP/maintain. so/RB/so /,/, m/NN/m the/DT/the specific/JJ/specific value/NN/value of/IN/of m/NN/m and/CC/and n/NN/n might/MD/might change/VB/change /,/, but/CC/but their/PRP$/their g/NN/g c/NN/c d/NN/d is/VBZ/is never/RB/never going/VBG/going to/TO/to change/NNP/change. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NNP/down. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 45/CD/45 /CD/) so/RB/so /,/, as/IN/as the/DT/the loop/NN/loop executes/VBZ/executes m/NN/m and/CC/and n/NN/n might/MD/might change/VB/change /,/, but/CC/but their/PRP$/their g/NN/g c/NN/c d/NN/d does/VBZ/does not/NNP/not. and/CC/and hence/NN/hence what/WP/what we/PRP/we have/VBP/have is/VBZ/is that/IN/that we/PRP/we will/MD/will preserve/VB/preserve the/DT/the g/NN/g c/NN/c d/NN/d and/CC/and eventually/RB/eventually when/WRB/when we/PRP/we exit/VBP/exit the/DT/the loop/NN/loop will/MD/will exit/VB/exit with/IN/with the/DT/the same/JJ/same g/NN/g c/NN/c d/NNP/d. we/PRP/we just/RB/just established/VBD/established that/IN/that as/IN/as the/DT/the loop/NN/loop executes/VBZ/executes m/NN/m and/CC/and n/NN/n might/MD/might change/VB/change /,/, but/CC/but curiously/RB/curiously enough/RB/enough their/PRP$/their g/NN/g c/NN/c d/NN/d continues/VBZ/continues to/TO/to remain/VB/remain the/DT/the same/NNP/same. as/IN/as a/DT/a result/NN/result if/IN/if we/PRP/we ever/RB/ever get/VB/get out/IN/out of/IN/of the/DT/the loop/NN/loop then/RB/then that/IN/that will/MD/will be/VB/be /,/, because/IN/because m/NN/m divides/NNS/divides n/VBP/n /,/, but/CC/but notice/NN/notice that/IN/that even/RB/even at/IN/at this/DT/this point/NN/point the/DT/the g/NN/g c/NN/c d/NN/d will/MD/will still/RB/still be/VB/be the/DT/the same/JJ/same as/IN/as the/DT/the old/JJ/old g/NN/g c/NN/c d/NN/d the/DT/the g/NN/g c/NN/c d/NN/d of/IN/of the/DT/the old/JJ/old m/NN/m and/CC/and n/NNP/n. but/CC/but if/IN/if m/NN/m divides/NNS/divides n/VBP/n then/RB/then the/DT/the g/NN/g c/NN/c d/NN/d will/MD/will simply/RB/simply be/VB/be n/VBN/n and/CC/and that/IN/that is/VBZ/is what/WP/what you/PRP/you will/MD/will return/VB/return and/CC/and therefore/RB/therefore /,/, in/IN/in fact/NN/fact /,/, we/PRP/we have/VBP/have established/VBN/established that/IN/that if/IN/if the/DT/the loop/NN/loop in/IN/in fact/NN/fact /,/, terminates/VBZ/terminates then/RB/then we/PRP/we will/MD/will be/VB/be returning/VBG/returning the/DT/the correct/NN/correct value/NNP/value. now/RB/now /,/, you/PRP/you want/VBP/want to/TO/to argue/VB/argue why/WRB/why the/DT/the loop/NN/loop should/MD/should terminate/VB/terminate ?/./? why/WRB/why we/PRP/we need/VBP/need to/TO/to exit/VB/exit ?/./? why/WRB/why we/PRP/we will/MD/will always/RB/always exit/VB/exit from/IN/from the/DT/the loop/NN/loop ?/./? this/DT/this is/VBZ/is actually/RB/actually fairly/RB/fairly straight/JJ/straight forward/NNP/forward. let/NN/let us/PRP/us examine/VBP/examine euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm again/RB/again and/CC/and see/VB/see what/WP/what happens/NNS/happens in/IN/in each/DT/each iteration/NNP/iteration. so/RB/so /,/, long/RB/long as/IN/as the/DT/the loop/NN/loop is/VBZ/is executing/NNP/executing. so/RB/so /,/, initially/RB/initially the/DT/the values/NNS/values of/IN/of m/NN/m and/CC/and n/NN/n might/MD/might be/VB/be taking/VBG/taking some/DT/some values/NNP/values. what/WP/what are/VBP/are the/DT/the values/NNS/values of/IN/of m/NN/m and/CC/and n/NN/n after/IN/after one/CD/one iteration/NN/iteration ?/./? well/RB/well /,/, the/DT/the first/JJ/first step/NN/step is/VBZ/is calculating/VBG/calculating r/NN/r /,/, but/CC/but notice/NN/notice that/IN/that immediately/RB/immediately afterwards/NNS/afterwards we/PRP/we are/VBP/are setting/VBG/setting n/NN/n to/TO/to have/VB/have the/DT/the value/NN/value m/NNP/m. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 42/CD/42 /CD/) so/RB/so /,/, if/IN/if the/DT/the original/JJ/original values/NNS/values are/VBP/are m/NN/m and/CC/and n/NN/n then/RB/then at/IN/at the/DT/the end/NN/end of/IN/of 1/CD/1 iteration/NN/iteration n/NN/n will/MD/will have/VB/have the/DT/the value/NN/value m/NN/m and/CC/and what/WP/what will/MD/will the/DT/the value/NN/value of/IN/of m/NN/m be/VB/be m/NN/m will/MD/will have/VB/have the/DT/the value/NN/value r/NNP/r. so/RB/so /,/, it/PRP/it will/MD/will be/VB/be n/VBN/n mod/NN/mod m/NNP/m. so/RB/so /,/, what/WDT/what has/VBZ/has happened/VBN/happened is/VBZ/is that/IN/that the/DT/the values/NNS/values m/VBP/m and/CC/and n/NN/n have/VBP/have now/RB/now /,/, changed/VBD/changed to/TO/to n/VB/n mod/NN/mod m/NN/m and/CC/and m/NN/m /,/, but/CC/but n/NN/n mod/NN/mod m/NN/m anything/NN/anything mod/NN/mod m/NN/m is/VBZ/is actually/RB/actually going/VBG/going to/TO/to be/VB/be smaller/JJR/smaller than/IN/than m/NN/m itself/NNP/itself. so/RB/so /,/, notice/NN/notice that/IN/that the/DT/the first/JJ/first argument/NN/argument is/VBZ/is always/RB/always continuously/RB/continuously is/VBZ/is going/VBG/going to/TO/to decrease/VB/decrease in/IN/in every/DT/every iteration/NN/iteration of/IN/of the/DT/the loop/NNP/loop. the/DT/the value/NN/value of/IN/of m/NN/m is/VBZ/is always/RB/always going/VBG/going to/TO/to decrease/NNP/decrease. how/WRB/how long/JJ/long can/MD/can it/PRP/it keep/VB/keep on/IN/on decreasing/NN/decreasing ?/./? well/RB/well /,/, it/PRP/it has/VBZ/has to/TO/to remain/VB/remain positive/NNP/positive. it/PRP/it can/MD/can not/RB/not even/RB/even become/VB/become zero/NN/zero and/CC/and it/PRP/it might/MD/might decrease/VB/decrease. it/PRP/it will/MD/will have/VB/have to/TO/to decrease/VB/decrease at/IN/at least/JJS/least by/IN/by one/CD/one in/IN/in each/DT/each iteration/NNP/iteration. as/IN/as a/DT/a result/NN/result of/IN/of this/DT/this we/PRP/we can/MD/can conclude/VB/conclude that/IN/that the/DT/the loop/NN/loop has/VBZ/has to/TO/to exit/VB/exit at/IN/at some/DT/some point/NN/point and/CC/and we/PRP/we know/VBP/know that/IN/that if/IN/if the/DT/the loop/NN/loop exits/VBZ/exits then/RB/then the/DT/the correct/NN/correct value/NN/value is/VBZ/is returned/NNP/returned. so/RB/so /,/, that/IN/that proves/NNS/proves that/WDT/that euclid/VBD/euclid ?/./? s/NNS/s algorithm/VBP/algorithm is/VBZ/is correct/NNP/correct. our/PRP$/our next/JJ/next step/NN/step is/VBZ/is to/TO/to argue/VB/argue that/IN/that euclid/JJ/euclid ?/./? s/NNS/s algorithm/VBP/algorithm in/IN/in fact/NN/fact /,/, runs/VBZ/runs reasonably/RB/reasonably quick/NNP/quick. so/RB/so /,/, the/DT/the basic/JJ/basic idea/NN/idea we/PRP/we want/VBP/want to/TO/to prove/VB/prove is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something like/IN/like this/NNP/this. well/RB/well before/IN/before that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume we/PRP/we are/VBP/are going/VBG/going to/TO/to we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove something/NN/something about/IN/about cost/NN/cost euclid/VBD/euclid ?/./? s/NNS/s algorithm/VBP/algorithm and/CC/and in/IN/in doing/NN/doing this/DT/this we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that the/DT/the first/JJ/first argument/NN/argument that/WDT/that we/PRP/we sent/VBP/sent to/TO/to euclid/VB/euclid is/VBZ/is always/RB/always smaller/JJR/smaller than/IN/than the/DT/the second/NNP/second. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 21/CD/21 /CD/) so/RB/so /,/, this/DT/this means/VBZ/means that/IN/that we/PRP/we will/MD/will always/RB/always call/VB/call g/JJ/g c/NN/c d/NN/d 36/CD/36 48/CD/48 and/CC/and not/RB/not g/VB/g c/NN/c d/NN/d of/IN/of 48/CD/48 36/CD/36. this/DT/this is/VBZ/is only/RB/only for/IN/for the/DT/the purpose/NN/purpose of/IN/of analysis/NNP/analysis. actually/RB/actually the/DT/the algorithm/NN/algorithm as/IN/as we/PRP/we wrote/VBD/wrote will/MD/will work/VB/work fine/NN/fine if/IN/if make/NN/make this/DT/this call/NN/call as/IN/as well/NNP/well. if/IN/if we/PRP/we make/VBP/make this/DT/this call/NN/call you/PRP/you will/MD/will see/VB/see that/IN/that internally/RB/internally we/PRP/we will/MD/will start/VB/start with/IN/with m/NN/m equals/NNS/equals 48/CD/48 n/NN/n equals/NNS/equals 36/CD/36 /,/, but/CC/but in/IN/in one/CD/one iteration/NN/iteration we/PRP/we will/MD/will be/VB/be exchanging/VBG/exchanging these/DT/these values/NNP/values. the/DT/the first/JJ/first iteration/NN/iteration will/MD/will only/RB/only be/VB/be spent/VBN/spent for/IN/for exchanging/NN/exchanging these/DT/these values/NNP/values. so/RB/so /,/, m/NN/m will/MD/will become/VB/become 36/CD/36 and/CC/and n/NN/n will/MD/will become/VB/become 48/CD/48. so/RB/so /,/, then/RB/then we/PRP/we can/MD/can as/RB/as good/JJ/good as/IN/as assume/NN/assume that/IN/that in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will start/VB/start off/RP/off our/PRP$/our execution/NN/execution in/IN/in this/DT/this manner/NNP/manner. so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume in/IN/in fact/NN/fact /,/, that/IN/that we/PRP/we are/VBP/are not/RB/not analyzing/VBG/analyzing this/DT/this because/IN/because that/DT/that only/RB/only adds/VBZ/adds 1/CD/1 iteration/NNP/iteration. so/RB/so /,/, our/PRP$/our assumption/NN/assumption is/VBZ/is that/IN/that we/PRP/we are/VBP/are analyzing/VBG/analyzing calls/NNS/calls of/IN/of this/DT/this kind/NN/kind where/WRB/where m/NN/m is/VBZ/is less/JJR/less than/IN/than n/NN/n well/RB/well of/IN/of course/NN/course /,/, if/IN/if m/NN/m is/VBZ/is equal/JJ/equal to/TO/to n/VB/n then/RB/then there/RB/there is/VBZ/is no/DT/no question/NNP/question. so/RB/so /,/, the/DT/the loop/NN/loop wills/NNS/wills the/DT/the euclid/JJ/euclid will/MD/will immediately/RB/immediately return/VB/return /./. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now state/VBP/state the/DT/the main/JJ/main result/NN/result that/WDT/that we/PRP/we want/VBP/want to/TO/to prove/NNP/prove. the/DT/the main/JJ/main result/NN/result that/WDT/that we/PRP/we want/VBP/want to/TO/to prove/VB/prove is/VBZ/is something/NN/something like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 44/CD/44 /CD/) so/RB/so /,/, if/IN/if euclid/JJ/euclid is/VBZ/is called/VBN/called with/IN/with values/NNS/values m/VBP/m with/IN/with values/NNS/values p/VBP/p and/CC/and q/NN/q that/IN/that is/VBZ/is euclid/JJ/euclid of/IN/of p/NN/p q/NN/q is/VBZ/is called/VBN/called i/PRP/i want/VBP/want to/TO/to make/VB/make a/DT/a distinction/NN/distinction between/IN/between the/DT/the variables/NNS/variables m/VBP/m n/NN/n and/CC/and their/PRP$/their values/NNP/values. so/RB/so /,/, we/PRP/we will/MD/will think/VB/think of/IN/of p/NN/p q/NN/q as/IN/as values/NNS/values and/CC/and m/NN/m n/NN/n will/MD/will be/VB/be variables/NNP/variables. so/RB/so /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to call/VB/call euclid/JJ/euclid with/IN/with values/NNS/values p/VBP/p and/CC/and q/NN/q then/RB/then if/IN/if p/NN/p is/VBZ/is less/JJR/less than/IN/than q/NN/q then/RB/then in/IN/in each/DT/each iteration/NN/iteration the/DT/the sum/NN/sum of/IN/of the/DT/the values/NNS/values of/IN/of variables/NNS/variables m/VBP/m and/CC/and n/NN/n will/MD/will decrease/VB/decrease at/IN/at least/JJS/least by/IN/by a/DT/a factor/NN/factor 3/CD/3 halves/NNP/halves. so/RB/so /,/, initially/RB/initially if/IN/if the/DT/the sum/NN/sum is/VBZ/is 6/CD/6 then/RB/then in/IN/in one/CD/one iteration/NN/iteration the/DT/the sum/NN/sum must/MD/must go/VB/go below/IN/below 4/CD/4 become/NN/become 4/CD/4 or/CC/or go/VB/go below/IN/below 4/CD/4. if/IN/if it/PRP/it is/VBZ/is 16/CD/16 in/IN/in 1/CD/1 iteration/NN/iteration it/PRP/it must/MD/must go/VB/go below/IN/below 40/CD/40 or/CC/or stay/NN/stay or/CC/or become/VB/become 40/CD/40. what/WP/what is/VBZ/is the/DT/the implication/NN/implication of/IN/of this/DT/this theorem/NN/theorem ?/./? this/DT/this theorem/NN/theorem establishes/VBZ/establishes that/IN/that the/DT/the sum/NN/sum will/MD/will drop/VB/drop very/RB/very fast/NNP/fast. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the number/NN/number of/IN/of iterations/NNS/iterations this/DT/this establishes/NNS/establishes that/IN/that the/DT/the number/NN/number of/IN/of iterations/NNS/iterations is/VBZ/is equal/JJ/equal to/TO/to log/VB/log to/TO/to the/DT/the base/NN/base 3/CD/3 halves/NNS/halves of/IN/of p/NN/p plus/CC/plus q/NNP/q. well/RB/well /,/, it/PRP/it is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to /,/, so/RB/so this/DT/this theorem/NN/theorem will/MD/will put/VB/put a/DT/a good/JJ/good upper/NN/upper bound/NN/bound on/IN/on the/DT/the number/NN/number of/IN/of iterations/NNS/iterations that/WDT/that euclid/VBD/euclid is/VBZ/is going/VBG/going to/TO/to execute/NNP/execute. and/CC/and therefore/RB/therefore /,/, all/DT/all that/DT/that we/PRP/we need/VBP/need to/TO/to do/VB/do is/VBZ/is to/TO/to prove/VB/prove this/DT/this theorem/NN/theorem and/CC/and we/PRP/we have/VBP/have a/DT/a bound/NN/bound on/IN/on how/WRB/how many/JJ/many iterations/NNS/iterations euclid/VBD/euclid takes/NNP/takes. so/RB/so /,/, our/PRP$/our goal/NN/goal now/RB/now /,/, is/VBZ/is to/TO/to estimate/VB/estimate what/WP/what happens/NNS/happens to/TO/to the/DT/the sum/NN/sum of/IN/of the/DT/the values/NNS/values taken/VBN/taken by/IN/by m/NN/m and/CC/and n/NN/n in/IN/in each/DT/each iteration/NNP/iteration. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say that/IN/that we/PRP/we start/VBP/start off/RP/off the/DT/the whole/JJ/whole process/NN/process and/CC/and at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the iteration/NN/iteration m/NN/m and/CC/and n/NN/n take/VB/take values/NNS/values p/VB/p and/CC/and q/NNP/q. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 27/CD/27 /CD/) so/RB/so /,/, at/IN/at the/DT/the beginning/NN/beginning of/IN/of iteration/NN/iteration m/NN/m is/VBZ/is equal/JJ/equal to/TO/to p/VB/p and/CC/and n/VB/n is/VBZ/is equal/JJ/equal to/TO/to q/NNP/q. after/IN/after the/DT/the iteration/NN/iteration and/CC/and i/PRP/i mean/VBP/mean just/RB/just one/CD/one iteration/NN/iteration let/NN/let us/PRP/us say/VBP/say m/NN/m takes/VBZ/takes the/DT/the value/NN/value p/NN/p prime/NN/prime n/NN/n takes/VBZ/takes that/IN/that value/NN/value q/NN/q prime/NNP/prime. so/RB/so /,/, what/WDT/what is/VBZ/is our/PRP$/our goal/NN/goal we/PRP/we want/VBP/want to/TO/to estimate/VB/estimate by/IN/by how/WRB/how much/JJ/much the/DT/the whole/JJ/whole thing/NN/thing drops/NNP/drops. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to estimate/VB/estimate p/NN/p plus/CC/plus q/NN/q upon/IN/upon p/NN/p rime/NN/rime plus/CC/plus q/NN/q prime/NNP/prime. so/RB/so /,/, if/IN/if we/PRP/we prove/VBP/prove that/IN/that this/DT/this ratio/NN/ratio is/VBZ/is at/IN/at most/JJS/most 3/CD/3 halves/NNS/halves then/RB/then we/PRP/we are/VBP/are done/NNP/done. so/RB/so /,/, all/DT/all that/DT/that remains/VBZ/remains now/RB/now /,/, is/VBZ/is to/TO/to express/NN/express p/NN/p prime/NN/prime and/CC/and q/NN/q prime/NN/prime in/IN/in terms/NNS/terms of/IN/of p/NN/p and/CC/and q/NNP/q. so/RB/so /,/, for/IN/for that/DT/that will/MD/will need/VB/need our/PRP$/our euclid/JJ/euclid procedure/NN/procedure again/NNP/again. so/RB/so /,/, what/WDT/what does/VBZ/does the/DT/the euclid/JJ/euclid procedure/NN/procedure do/VBP/do if/IN/if it/PRP/it does/VBZ/does not/RB/not terminate/VB/terminate and/CC/and that/IN/that is/VBZ/is the/DT/the case/NN/case that/IN/that we/PRP/we are/VBP/are looking/VBG/looking at/IN/at currently/RB/currently ?/./? then/RB/then it/PRP/it computes/VBZ/computes r/NN/r equals/NNS/equals n/VBP/n mod/NN/mod m/NN/m and/CC/and then/RB/then set/VBD/set n/NN/n equals/NNS/equals m/NNP/m. so/RB/so /,/, in/IN/in terms/NNS/terms of/IN/of this/DT/this the/DT/the new/JJ/new value/NN/value of/IN/of n/NN/n is/VBZ/is the/DT/the old/JJ/old value/NN/value of/IN/of m/NNP/m. so/RB/so /,/, going/VBG/going back/RB/back to/TO/to this/DT/this the/DT/the new/JJ/new value/NN/value of/IN/of n/NN/n must/MD/must be/VB/be the/DT/the old/JJ/old value/NN/value of/IN/of m/NNP/m. so/RB/so /,/, therefore/IN/therefore we/PRP/we get/VBP/get q/RB/q prime/JJ/prime must/MD/must be/VB/be equal/JJ/equal to/TO/to p/NNP/p. the/DT/the new/JJ/new value/NN/value of/IN/of m/NN/m is/VBZ/is the/DT/the value/NN/value of/IN/of r/NN/r which/WDT/which is/VBZ/is the/DT/the old/JJ/old value/NN/value of/IN/of m/NN/m mod/NN/mod old/JJ/old value/NN/value of/IN/of n/NN/n mod/NN/mod old/JJ/old value/NN/value of/IN/of m/NNP/m. the/DT/the old/JJ/old value/NN/value of/IN/of n/NN/n is/VBZ/is simply/RB/simply q/NN/q mod/NN/mod m/NNP/m. the/DT/the old/JJ/old value/NN/value of/IN/of m/NN/m is/VBZ/is p/NN/p and/CC/and therefore/RB/therefore /,/, this/DT/this whole/JJ/whole thing/NN/thing p/NN/p prime/NN/prime is/VBZ/is q/NN/q mod/NN/mod p/NN/p we/PRP/we need/VBP/need one/CD/one more/JJR/more fact/NN/fact in/IN/in addition/NN/addition to/TO/to all/DT/all this/DT/this which/WDT/which concerns/NNS/concerns p/VBP/p prime/JJ/prime plus/NNS/plus q/VBP/q prime/NNP/prime. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 26/CD/26 /CD/) well/RB/well /,/, what/WDT/what is/VBZ/is p/VBP/p prime/JJ/prime plus/NNS/plus q/VBP/q prime/JJ/prime ?/./? p/NN/p prime/NN/prime is/VBZ/is the/DT/the remainder/NN/remainder when/WRB/when q/NN/q is/VBZ/is divided/VBN/divided by/IN/by p/NN/p and/CC/and q/NN/q prime/NN/prime is/VBZ/is p/NN/p itself/NNP/itself. so/RB/so /,/, this/DT/this is/VBZ/is remainder/NN/remainder plus/RB/plus divisor/NN/divisor and/CC/and we/PRP/we know/VBP/know that/IN/that the/DT/the divisor/NN/divisor is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than the/DT/the dividend/NNP/dividend. divisor/NN/divisor in/IN/in our/PRP$/our case/NN/case is/VBZ/is p/NN/p and/CC/and the/DT/the divided/VBN/divided is/VBZ/is q/NN/q and/CC/and we/PRP/we assume/VBP/assume that/IN/that p/NN/p is/VBZ/is in/IN/in fact/NN/fact /,/, less/RBR/less than/IN/than q/NNP/q. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can conclude/VB/conclude that/IN/that this/DT/this whole/JJ/whole thing/NN/thing has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the dividend/NNP/dividend. in/IN/in other/JJ/other words/NNS/words this/DT/this is/VBZ/is q/NN/q /,/, so/RB/so here/RB/here are/VBP/are the/DT/the 3/CD/3 facts/NNS/facts that/WDT/that we/PRP/we wanted/VBD/wanted p/NN/p prime/NN/prime plus/CC/plus q/NN/q prime/NN/prime is/VBZ/is less/JJR/less than/IN/than q/NNP/q. let/NN/let me/PRP/me align/VBP/align it/PRP/it q/VBP/q prime/JJ/prime is/VBZ/is equal/JJ/equal to/TO/to p/VB/p and/CC/and p/VB/p prime/JJ/prime is/VBZ/is less/RBR/less than/IN/than q/NN/q mod/NN/mod p/NNP/p. if/IN/if p/NN/p prime/NN/prime is/VBZ/is less/JJR/less than/IN/than q/NN/q mod/NN/mod p/NN/p then/RB/then i/PRP/i can/MD/can conclude/VB/conclude that/IN/that p/NN/p prime/NN/prime has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than both/NNP/both. in/IN/in fact/NN/fact /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than p/NNP/p. so/RB/so /,/, now/RB/now /,/, it/PRP/it is/VBZ/is just/RB/just a/DT/a matter/NN/matter of/IN/of algebra/NN/algebra we/PRP/we are/VBP/are going/VBG/going to/TO/to add/VB/add this/DT/this and/CC/and this/DT/this and/CC/and this/DT/this last/JJ/last inequality/NN/inequality /,/, but/CC/but just/RB/just to/TO/to get/VB/get the/DT/the terms/NNS/terms right/RB/right we/PRP/we will/MD/will multiply/RB/multiply this/DT/this last/JJ/last inequality/NN/inequality by/IN/by 2/CD/2 times/NNP/times. so/RB/so /,/, if/IN/if we/PRP/we do/VBP/do that/IN/that let/VB/let me/PRP/me adjust/MD/adjust this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 50/CD/50 /CD/) so/RB/so /,/, if/IN/if we/PRP/we do/VBP/do that/IN/that addition/NN/addition we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get p/NN/p prime/NN/prime plus/CC/plus q/NN/q prime/NN/prime plus/CC/plus p/NN/p prime/NN/prime plus/CC/plus q/NN/q prime/NN/prime this/DT/this comes/VBZ/comes from/IN/from over/IN/over here/NNP/here. the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is less/JJR/less than/IN/than this/DT/this p/NN/p plus/VBZ/plus this/DT/this p/NN/p plus/VBZ/plus this/DT/this q/NN/q /,/, but/CC/but let/VB/let us/PRP/us takes/VBZ/takes this/DT/this 2/CD/2 times/NNS/times therefore/RB/therefore /,/, we/PRP/we will/MD/will get/VB/get 2/CD/2 q/NNP/q. so/RB/so /,/, now/RB/now it/PRP/it is/VBZ/is just/RB/just a/DT/a matter/NN/matter of/IN/of simplifying/VBG/simplifying this/NNP/this. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this equal/JJ/equal to/TO/to this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but 3/CD/3 times/NNS/times p/VBP/p prime/JJ/prime plus/NNS/plus q/VBP/q prime/JJ/prime and/CC/and we/PRP/we have/VBP/have shown/VBN/shown that/IN/that it/PRP/it is/VBZ/is less/JJR/less than/IN/than 2/CD/2 times/NNS/times p/VBP/p plus/RB/plus q/NN/q and/CC/and this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we wanted/NNP/wanted. so/RB/so /,/, we/PRP/we have/VBP/have been/VBN/been we/PRP/we have/VBP/have showed/VBN/showed that/IN/that the/DT/the original/JJ/original value/NN/value of/IN/of the/DT/the sum/NN/sum has/VBZ/has reduced/VBN/reduced by/IN/by a/DT/a factor/NN/factor of/IN/of two-thirds/NNP/two-thirds. so/RB/so /,/, p/NN/p prime/NN/prime plus/CC/plus q/NN/q prime/NN/prime is/VBZ/is less/JJR/less than/IN/than p/NN/p plus/CC/plus q/NN/q upon/IN/upon 3/CD/3 halves/NNS/halves that/WDT/that concludes/VBZ/concludes the/DT/the analysis/NN/analysis of/IN/of the/DT/the algorithm/NNP/algorithm. and/CC/and we/PRP/we have/VBP/have been/VBN/been able/JJ/able to/TO/to show/VB/show that/IN/that in/IN/in fact/NN/fact /,/, the/DT/the algorithm/NN/algorithm will/MD/will execute/VB/execute a/DT/a fairly/RB/fairly small/JJ/small number/NN/number of/IN/of steps/NNP/steps. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 19/CD/19 /CD/) so/RB/so /,/, let/VB/let me/PRP/me now/RB/now conclude/VBP/conclude this/DT/this lecture/NN/lecture and/CC/and highlight/NN/highlight the/DT/the main/JJ/main points/NNP/points. the/DT/the very/JJ/very first/JJ/first point/NN/point that/WDT/that i/PRP/i want/VBP/want to/TO/to make/VB/make is/VBZ/is that/IN/that is/VBZ/is the/DT/the difference/NN/difference between/IN/between the/DT/the 2/CD/2 algorithms/NNP/algorithms. the/DT/the school/NN/school level/NN/level algorithm/NN/algorithm basically/RB/basically uses/VBZ/uses the/DT/the definition/NNP/definition. euclid/VBD/euclid ?/./? s/NNS/s algorithm/VBP/algorithm uses/NNS/uses some/DT/some more/RBR/more interesting/JJ/interesting deeper/NN/deeper properties/NNS/properties deeper/NN/deeper mathematical/JJ/mathematical properties/NNS/properties of/IN/of the/DT/the quantities/NNS/quantities that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to calculate/NNP/calculate. so/RB/so /,/, we/PRP/we study/VBP/study properties/NNS/properties of/IN/of whatever/NN/whatever we/PRP/we computing/VBG/computing and/CC/and this/DT/this helps/NNS/helps in/IN/in designing/VBG/designing fast/NN/fast algorithms/NNP/algorithms. there/EX/there is/VBZ/is also/RB/also one/CD/one more/JJR/more point/NN/point that/IN/that i/PRP/i want/VBP/want to/TO/to make/VB/make which/WDT/which is/VBZ/is that/IN/that the/DT/the basic/JJ/basic way/NN/way in/IN/in which/WDT/which we/PRP/we did/VBD/did this/DT/this analysis/NN/analysis counting/VBG/counting iterations/NNS/iterations will/MD/will be/VB/be useful/JJ/useful in/IN/in the/DT/the rest/NN/rest of/IN/of the/DT/the course/NN/course and/CC/and the/DT/the precise/NN/precise details/NNS/details of/IN/of all/DT/all of/IN/of this/DT/this we/PRP/we will/MD/will cover/VB/cover in/IN/in the/DT/the subsequent/JJ/subsequent lectures/NNP/lectures. so/RB/so /,/, that/IN/that marks/NNS/marks the/DT/the end/NN/end of/IN/of this/DT/this lecture/NNP/lecture. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 2/CD/2 framework/NN/framework for/IN/for algorithms/NNS/algorithms analysis/NN/analysis welcome/NN/welcome to/TO/to the/DT/the second/JJ/second lecture/NN/lecture of/IN/of the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. in/IN/in today/NN/today ?/./? s/NNS/s lecture/VBP/lecture /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to develop/VB/develop a/DT/a framework/NN/framework for/IN/for algorithm/NN/algorithm analysis/NNP/analysis. in/IN/in this/DT/this course/NN/course /,/, we/PRP/we will/MD/will be/VB/be designing/VBG/designing many/JJ/many algorithms/NNS/algorithms for/IN/for solving/VBG/solving many/JJ/many different/JJ/different kinds/NNS/kinds of/IN/of problems/NNP/problems. we/PRP/we will/MD/will want/VB/want to/TO/to compare/VB/compare these/DT/these algorithms/NNS/algorithms and/CC/and even/RB/even just/RB/just plain/NN/plain evaluate/NN/evaluate them/NNP/them. and/CC/and for/IN/for this/DT/this /,/, we/PRP/we will/MD/will need/VB/need some/DT/some sound/NN/sound mathematical/JJ/mathematical bases/NNP/bases. and/CC/and that/IN/that is/VBZ/is /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. we/PRP/we are/VBP/are going/VBG/going to/TO/to design/VB/design a/DT/a formal/JJ/formal framework/NN/framework using/VBG/using which/WDT/which we/PRP/we can/MD/can evaluate/VB/evaluate algorithms/NNP/algorithms. and/CC/and we/PRP/we will/MD/will and/CC/and also/RB/also compare/VBP/compare them/NNP/them. this/DT/this is/VBZ/is going/VBG/going to/TO/to the/DT/the topic/JJ/topic of/IN/of this/DT/this lecture/NN/lecture and/CC/and also/RB/also the/DT/the next/JJ/next few/JJ/few lectures/NNP/lectures. the/DT/the framework/NN/framework that/IN/that we/PRP/we designed/VBD/designed could/MD/could be/VB/be used/VBN/used not/RB/not only/RB/only for/IN/for comparing/VBG/comparing the/DT/the execution/NN/execution time/NN/time of/IN/of algorithms/NNS/algorithms /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we primarily/RB/primarily mean/JJ/mean ;/:/; when/WRB/when we/PRP/we say/VBP/say algorithm/NN/algorithm analysis/NNP/analysis. but/CC/but /,/, it/PRP/it could/MD/could also/RB/also be/VB/be used/VBN/used for/IN/for comparing/NN/comparing other/JJ/other resources/NNS/resources that/IN/that an/DT/an algorithm/NN/algorithm might/MD/might use/NNP/use. for/IN/for example/NN/example /,/, an/DT/an algorithm/NN/algorithm might/MD/might use/VB/use varying/VBG/varying amounts/NNS/amounts of/IN/of memory/NNP/memory. so/RB/so /,/, we/PRP/we could/MD/could use/VB/use essentially/RB/essentially the/DT/the same/JJ/same framework/NN/framework that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to discuss/VB/discuss very/RB/very soon/NNP/soon. and/CC/and use/VB/use that/IN/that framework/NN/framework to/TO/to formally/RB/formally compare/VB/compare the/DT/the memory/NN/memory requirements/NNS/requirements of/IN/of different/JJ/different programs/NNS/programs or/CC/or different/JJ/different algorithms/NNP/algorithms. the/DT/the basic/JJ/basic idea/NN/idea in/IN/in designing/NN/designing in/IN/in the/DT/the framework/NN/framework that/NNP/that. we/PRP/we are/VBP/are going/VBG/going to/TO/to discuss/VB/discuss today/NN/today /,/, is/VBZ/is actually/RB/actually very/RB/very related/VBN/related to/TO/to the/DT/the kind/NN/kind of/IN/of analysis/NN/analysis that/IN/that we/PRP/we did/VBD/did in/IN/in the/DT/the first/JJ/first lecture/NNP/lecture. except/IN/except we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make it/PRP/it a/DT/a little/RB/little bit/NN/bit more/JJR/more formal/NNP/formal. essentially/RB/essentially we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make a/DT/a mathematical/JJ/mathematical model/NN/model of/IN/of a/DT/a computer/NNP/computer. and/CC/and then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take our/PRP$/our algorithm/NN/algorithm and/CC/and mentally/RB/mentally execute/JJ/execute that/IN/that algorithm/NN/algorithm on/IN/on that/DT/that model/NNP/model. and/CC/and then/RB/then through/IN/through this/DT/this execution/NN/execution and/CC/and by/IN/by mentally/RB/mentally executing/VBG/executing /,/, we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to tell/VB/tell how/WRB/how much/RB/much time/NNP/time. the/DT/the algorithm/NN/algorithm takes/VBZ/takes and/CC/and that/IN/that is/VBZ/is essentially/RB/essentially going/VBG/going to/TO/to be/VB/be involved/VBN/involved in/IN/in doing/NN/doing the/DT/the analysis/NNP/analysis. that/IN/that is/VBZ/is what/WP/what the/DT/the analysis/NN/analysis is/VBZ/is going/VBG/going to/TO/to have/NNP/have. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 58/CD/58 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down the/DT/the basic/JJ/basic idea/NNP/idea. we/PRP/we will/MD/will make/VB/make a/DT/a mathematical/JJ/mathematical model/NN/model for/IN/for computer/NNP/computer. and/CC/and we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to execute/VB/execute our/PRP$/our algorithm/NN/algorithm on/IN/on any/DT/any specific/JJ/specific real/JJ/real computer/NNP/computer. but/CC/but /,/, will/MD/will execute/VB/execute it/PRP/it mentally/RB/mentally will/MD/will imagine/VB/imagine it/PRP/it is/VBZ/is execution/NN/execution on/IN/on this/DT/this mathematical/JJ/mathematical model/NNP/model. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down as/IN/as well/RB/well /,/, mentally/RB/mentally execute/JJ/execute algorithm/NN/algorithm on/IN/on computer/NN/computer model/NN/model and/CC/and evaluate/VB/evaluate the/DT/the time/NNP/time. this/DT/this is/VBZ/is the/DT/the basic/JJ/basic scheme/NN/scheme ;/:/; this/DT/this is/VBZ/is the/DT/the basic/JJ/basic idea/NN/idea that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to develop/NNP/develop. in/IN/in order/NN/order to/TO/to develop/VB/develop it/PRP/it /,/, we/PRP/we need/VBP/need to/TO/to answer/VB/answer several/JJ/several questions/NNP/questions. so/IN/so /,/, the/DT/the first/JJ/first question/NN/question naturally/RB/naturally is/VBZ/is what/WP/what is/VBZ/is this/DT/this mathematical/JJ/mathematical model/NN/model going/VBG/going to/TO/to be/VB/be ?/./? which/WDT/which essentially/RB/essentially is/VBZ/is the/DT/the same/JJ/same thing/NN/thing as/IN/as saying/VBG/saying how/WRB/how long/JJ/long should/MD/should be/VB/be assign/VBN/assign /,/, what/WP/what time/NN/time should/MD/should /,/, we/PRP/we assign/VBP/assign for/IN/for each/DT/each of/IN/of the/DT/the operations/NNP/operations. that/IN/that is/VBZ/is comprised/VBN/comprised that/IN/that is/VBZ/is used/VBN/used in/IN/in our/PRP$/our algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to answer/VB/answer questions/NNS/questions like/NNP/like. what/WP/what is/VBZ/is the/DT/the time/NN/time required/VBN/required on/IN/on the/DT/the model/NN/model for/IN/for every/DT/every operation/NN/operation that/IN/that an/DT/an algorithm/NN/algorithm might/MD/might perform/NNP/perform. then/RB/then /,/, we/PRP/we also/RB/also said/VBD/said that/IN/that we/PRP/we need/VBP/need to/TO/to execute/NNP/execute. we/PRP/we need/VBP/need to/TO/to mentally/RB/mentally execute/JJ/execute the/DT/the algorithm/NN/algorithm on/IN/on this/DT/this model/NNP/model. however/RB/however /,/, every/DT/every algorithm/NN/algorithm or/CC/or most/JJS/most interesting/JJ/interesting algorithms/NNS/algorithms will/MD/will require/VB/require data/NNP/data. some/DT/some input/NN/input that/IN/that needs/VBZ/needs to/TO/to be/VB/be given/VBN/given to/TO/to this/DT/this algorithm/NNP/algorithm. so/RB/so /,/, an/DT/an important/JJ/important question/NN/question that/WDT/that we/PRP/we need/VBP/need to/TO/to answer/VB/answer is/VBZ/is /,/, what/WP/what data/NNS/data should/MD/should we/PRP/we be/VB/be giving/VBG/giving /,/, what/WP/what should/MD/should be/VB/be the/DT/the input/NN/input data/NNP/data. this/DT/this is/VBZ/is an/DT/an extremely/RB/extremely important/JJ/important question/NN/question /,/, because/IN/because the/DT/the time/NN/time of/IN/of execution/NN/execution in/IN/in general/JJ/general will/NN/will depend/NN/depend upon/IN/upon the/DT/the input/NNP/input. so/RB/so /,/, when/WRB/when we/PRP/we say/VBP/say we/PRP/we want/VBP/want to/TO/to estimate/VB/estimate the/DT/the time/NN/time taken/VBN/taken by/IN/by an/DT/an algorithm/NNP/algorithm. we/PRP/we have/VBP/have to/TO/to be/VB/be very/RB/very clear/JJ/clear in/IN/in saying/VBG/saying what/WP/what input/NN/input is/VBZ/is being/VBG/being given/VBN/given to/TO/to that/DT/that algorithm/NNP/algorithm. we/PRP/we may/MD/may make/VB/make mathematical/JJ/mathematical models/NNP/models. and/CC/and we/PRP/we may/MD/may develop/VB/develop them/PRP/them and/CC/and we/PRP/we may/MD/may estimate/VB/estimate the/DT/the time/NN/time taken/VBN/taken on/IN/on those/DT/those models/NNP/models. of/IN/of course/NN/course /,/, there/EX/there is/VBZ/is the/DT/the important/JJ/important question/NN/question /,/, which/WDT/which we/PRP/we need/VBP/need to/TO/to answer/VB/answer /,/, which/WDT/which is/VBZ/is how/WRB/how does/VBZ/does all/DT/all this/DT/this relate/NN/relate to/TO/to real/JJ/real computers/NNS/computers ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 17/CD/17 /CD/) so/RB/so /,/, how/WRB/how does/VBZ/does our/PRP$/our model/NN/model relate/NN/relate to/TO/to real/JJ/real computers/NNS/computers ?/./? if/IN/if our/PRP$/our model/NN/model is/VBZ/is terribly/RB/terribly different/JJ/different /,/, then/RB/then our/PRP$/our conclusions/NNS/conclusions for/IN/for the/DT/the model/NN/model might/MD/might not/RB/not be/VB/be too/RB/too useful/JJ/useful for/IN/for real/JJ/real computers/NNP/computers. and/CC/and of/IN/of course/NN/course /,/, we/PRP/we do/VBP/do not/RB/not really/RB/really care/VB/care that/IN/that much/RB/much about/IN/about the/DT/the mathematical/JJ/mathematical model/NNP/model. we/PRP/we want/VBP/want our/PRP$/our conclusions/NNS/conclusions to/TO/to eventually/RB/eventually apply/RB/apply to/TO/to real/JJ/real computers/NNP/computers. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is an/DT/an extremely/RB/extremely important/JJ/important question/NN/question that/WDT/that we/PRP/we need/VBP/need to/TO/to consider/NNP/consider. over/IN/over the/DT/the next/JJ/next few/JJ/few lectures/NNS/lectures /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to answer/VB/answer these/DT/these questions/NNS/questions and/CC/and also/RB/also many/JJ/many of/IN/of the/DT/the other/JJ/other relevant/NN/relevant questions/NNP/questions. and/CC/and you/PRP/you will/MD/will see/VB/see that/IN/that all/DT/all these/DT/these questions/NNS/questions can/MD/can be/VB/be answered/VBN/answered nicely/-NONE-/nicely. and/CC/and in/IN/in that/DT/that /,/, we/PRP/we will/MD/will be/VB/be we/PRP/we will/MD/will finish/VB/finish our/PRP$/our development/NN/development of/IN/of our/PRP$/our framework/NNP/framework. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 32/CD/32 /CD/) here/RB/here is/VBZ/is roughly/RB/roughly what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to talk/VB/talk about/IN/about in/IN/in the/DT/the next/JJ/next few/JJ/few lectures/NNP/lectures. i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start by/IN/by discussing/NN/discussing some/DT/some fairly/RB/fairly basic/JJ/basic terms/NNP/terms. so/RB/so /,/, we/PRP/we will/MD/will try/VB/try to/TO/to formally/RB/formally define/VB/define or/CC/or at/IN/at least/JJS/least semi/NN/semi formally/RB/formally some/DT/some basic/JJ/basic terms/NNP/terms. then/RB/then /,/, we/PRP/we will/MD/will present/VB/present our/PRP$/our mathematical/JJ/mathematical model/NNP/model. after/IN/after that/DT/that i/PRP/i will/MD/will discuss/VB/discuss /,/, the/DT/the general/JJ/general overall/NN/overall analysis/NN/analysis strategy/NN/strategy which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to use/NNP/use. these/DT/these will/MD/will for/IN/for example/NN/example /,/, answer/NN/answer questions/NNS/questions like/IN/like what/WP/what should/MD/should be/VB/be the/DT/the input/NNP/input. we/PRP/we will/MD/will also/RB/also be/VB/be taking/VBG/taking a/DT/a number/NN/number of/IN/of examples/NNS/examples of/IN/of algorithms/NNS/algorithms and/CC/and their/PRP$/their analysis/NNP/analysis. and/CC/and finally/RB/finally /,/, we/PRP/we will/MD/will conclude/VB/conclude with/IN/with a/DT/a discussion/NN/discussion of/IN/of the/DT/the limitations/NNS/limitations of/IN/of the/DT/the model/NNP/model. this/DT/this will/MD/will essentially/RB/essentially be/VB/be an/DT/an answer/NN/answer to/TO/to the/DT/the question/NN/question of/IN/of how/WRB/how well/RB/well do/VBP/do our/PRP$/our conclusions/NNS/conclusions to/TO/to the/DT/the conclusions/NNS/conclusions that/WDT/that we/PRP/we draw/VBP/draw for/IN/for the/DT/the mathematical/JJ/mathematical model/NN/model relate/NN/relate to/TO/to real/JJ/real computers/NNP/computers. and/CC/and of/IN/of course/NN/course /,/, i/PRP/i do/VBP/do not/RB/not strictly/RB/strictly i/PRP/i would/MD/would not/RB/not strictly/RB/strictly discuss/VBZ/discuss these/DT/these points/NNS/points in/IN/in the/DT/the order/NN/order i/PRP/i have/VBP/have written/VBN/written them/NNP/them. i/PRP/i will/MD/will discuss/VB/discuss examples/NNS/examples and/CC/and i/PRP/i will/MD/will discuss/VB/discuss limitations/NNS/limitations and/CC/and may/MD/may be/VB/be alternate/JJ/alternate a/DT/a little/RB/little bit/NNP/bit. but/CC/but /,/, this/DT/this is/VBZ/is basically/RB/basically going/VBG/going to/TO/to be/VB/be the/DT/the gist/NN/gist of/IN/of this/DT/this lecture/NN/lecture and/CC/and the/DT/the next/NNP/next. let/NN/let us/PRP/us /,/, begin/VBP/begin now/RB/now with/IN/with some/DT/some basic/JJ/basic terms/NNS/terms that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to use/NNP/use. in/IN/in day/NN/day to/TO/to day/NN/day life/NN/life /,/, we/PRP/we often/RB/often use/VBP/use the/DT/the same/JJ/same term/NN/term to/TO/to mean/VB/mean different/JJ/different things/NNP/things. in/IN/in scientific/JJ/scientific discussion/NN/discussion /,/, it/PRP/it is/VBZ/is important/JJ/important to/TO/to fix/VB/fix the/DT/the meanings/NNS/meanings for/IN/for every/DT/every term/NNP/term. so/RB/so that/IN/that we/PRP/we do/VBP/do not/RB/not confuse/VB/confuse ourselves/NNS/ourselves later/JJ/later on/IN/on and/CC/and we/PRP/we do/VBP/do not/RB/not end/VB/end up/RP/up with/IN/with fallacies/NNS/fallacies of/IN/of any/DT/any kind/NNP/kind. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 06/CD/06 /CD/) so/RB/so /,/, let/VB/let us/PRP/us start/VB/start by/IN/by discussing/NN/discussing the/DT/the very/JJ/very first/JJ/first very/RB/very common/JJ/common term/NN/term that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use which/WDT/which is/VBZ/is problem/NNP/problem. before/IN/before /,/, i/PRP/i give/VBP/give a/DT/a definition/NN/definition of/IN/of a/DT/a problem/NN/problem i/PRP/i would/MD/would like/VB/like to/TO/to give/VB/give some/DT/some examples/NNP/examples. and/CC/and from/IN/from those/DT/those examples/NNS/examples /,/, i/PRP/i will/MD/will try/VB/try to/TO/to motivate/VB/motivate this/DT/this definition/NNP/definition. when/WRB/when i/PRP/i say/VBP/say problem/NN/problem in/IN/in this/DT/this course/NN/course i/PRP/i will/MD/will mean/VB/mean /,/, what/WDT/what we/PRP/we usually/RB/usually mean/JJ/mean is/VBZ/is /,/, in/IN/in the/DT/the sense/NN/sense of/IN/of the/DT/the problem/NN/problem of/IN/of computing/NN/computing the/DT/the gcd/NN/gcd of/IN/of two/CD/two numbers/NNP/numbers. or/CC/or say/VB/say something/NN/something like/IN/like the/DT/the problem/NN/problem of/IN/of finding/NN/finding the/DT/the shortest/JJS/shortest path/NN/path on/IN/on a/DT/a map/NN/map or/CC/or maybe/RB/maybe say/VBP/say finding/VBG/finding the/DT/the meaning/NN/meaning of/IN/of a/DT/a word/NN/word in/IN/in a/DT/a dictionary/JJ/dictionary or/CC/or may/MD/may be/VB/be even/RB/even something/NN/something like/IN/like given/VBN/given an/DT/an x-ray/JJ/x-ray determine/NN/determine if/IN/if there/EX/there is/VBZ/is any/DT/any disease/NNP/disease. you/PRP/you may/MD/may notice/VB/notice that/IN/that when/WRB/when we/PRP/we are/VBP/are talking/VBG/talking about/IN/about a/DT/a problem/NNP/problem. there/RB/there is/VBZ/is typically/RB/typically certain/JJ/certain input/NN/input which/WDT/which is/VBZ/is which/WDT/which needs/VBZ/needs to/TO/to be/VB/be supplied/VBN/supplied and/CC/and a/DT/a certain/JJ/certain output/NN/output that/WDT/that needs/VBZ/needs to/TO/to be/VB/be generated/NNP/generated. let/VB/let us/PRP/us take/VB/take an/DT/an example/NN/example of/IN/of this/NNP/this. so/RB/so for/IN/for example/NN/example /,/, if/IN/if you/PRP/you are/VBP/are asking/VBG/asking about/IN/about the/DT/the gcd/NN/gcd of/IN/of two/CD/two numbers/NNP/numbers. we/PRP/we could/MD/could say/VB/say that/IN/that the/DT/the input/NN/input consists/VBZ/consists of/IN/of say/NN/say numbers/NNS/numbers like/IN/like say/NN/say may/MD/may be/VB/be 36/CD/36 and/CC/and 48/CD/48 the/DT/the gcd/NN/gcd of/IN/of which/WDT/which will/MD/will obviously/RB/obviously /,/, be/VB/be the/DT/the number/NN/number 12/CD/12. say/VB/say for/IN/for the/DT/the problem/NN/problem of/IN/of finding/NN/finding the/DT/the shortest/JJS/shortest path/NN/path in/IN/in a/DT/a map/NN/map may/MD/may be/VB/be the/DT/the input/NN/input could/MD/could look/VB/look like/IN/like say/NN/say name/NN/name of/IN/of a/DT/a city/NN/city may/MD/may be/VB/be mumbai/NN/mumbai and/CC/and say/VB/say a/DT/a city/NN/city say/NN/say aurangabad/NNP/aurangabad. and/CC/and we/PRP/we would/MD/would have/VB/have to/TO/to supply/VB/supply which/WDT/which map/NN/map we/PRP/we are/VBP/are going/VBG/going to/TO/to use/NNP/use. so/RB/so maybe/RB/maybe /,/, we/PRP/we use/VBP/use the/DT/the western/NN/western india/NN/india automobile/NN/automobile association/NN/association map/NN/map and/CC/and that/IN/that will/MD/will also/RB/also have/VB/have to/TO/to be/VB/be supplied/NNP/supplied. that/IN/that will/MD/will also/RB/also that/IN/that map/NN/map will/MD/will also/RB/also have/VB/have to/TO/to be/VB/be supplied/VBN/supplied as/IN/as a/DT/a part/NN/part of/IN/of the/DT/the problem/NN/problem definition/NNP/definition. for/IN/for finding/NN/finding a/DT/a word/NN/word in/IN/in a/DT/a dictionary/JJ/dictionary may/NN/may be/VB/be we/PRP/we have/VBP/have to/TO/to supply/RB/supply the/DT/the word/NNP/word. say/VBP/say for/IN/for example/NN/example /,/, we/PRP/we take/VBP/take the/DT/the word/NN/word evolution/NNP/evolution. and/CC/and we/PRP/we will/MD/will also/RB/also have/VB/have to/TO/to name/VB/name what/WP/what dictionary/JJ/dictionary we/PRP/we use/VBP/use /,/, say/VB/say may/MD/may be/VB/be the/DT/the oxford/NN/oxford dictionary/NN/dictionary or/CC/or something/NN/something like/IN/like that/NNP/that. for/IN/for the/DT/the last/JJ/last problem/NN/problem /,/, we/PRP/we will/MD/will have/VB/have to/TO/to supply/VB/supply an/DT/an actual/JJ/actual x/NN/x ray/NNP/ray. say/VBP/say some/DT/some actual/JJ/actual picture/NN/picture and/CC/and in/IN/in this/DT/this case/NN/case the/DT/the output/NN/output would/MD/would be/VB/be something/NN/something like/IN/like either/DT/either there/EX/there is/VBZ/is disease/NNP/disease. say/VBP/say we/PRP/we just/RB/just a/DT/a yes/NNS/yes or/CC/or no/NNP/no. for/IN/for the/DT/the shortest/JJS/shortest path/NN/path /,/, the/DT/the output/NN/output would/MD/would be/VB/be say/VB/say the/DT/the actual/JJ/actual map/NN/map /,/, the/DT/the actual/JJ/actual path/NN/path on/IN/on the/DT/the map/NNP/map. for/IN/for the/DT/the evolution/NN/evolution for/IN/for finding/NN/finding the/DT/the meaning/NN/meaning of/IN/of the/DT/the word/NN/word evolution/NN/evolution the/DT/the output/NN/output would/MD/would have/VB/have to/TO/to be/VB/be the/DT/the actual/JJ/actual meaning/NN/meaning that/WDT/that you/PRP/you would/MD/would get/VB/get while/IN/while after/IN/after looking/VBG/looking at/IN/at the/DT/the dictionary/NNP/dictionary. at/IN/at this/DT/this point/NN/point /,/, we/PRP/we have/VBP/have i/PRP/i think/VBP/think we/PRP/we have/VBP/have a/DT/a good/JJ/good sense/NN/sense of/IN/of what/WP/what a/DT/a problem/NN/problem is/VBZ/is and/CC/and we/PRP/we can/MD/can write/VB/write down/RP/down a/DT/a reasonably/RB/reasonably simple/JJ/simple definition/NNP/definition. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 19/CD/19 /CD/) so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do that/NNP/that. so/RB/so /,/, when/WRB/when we/PRP/we say/VBP/say problem/NN/problem in/IN/in this/DT/this course/NNP/course. we/PRP/we will/MD/will mean/VB/mean a/DT/a specification/NN/specification of/IN/of what/WP/what are/VBP/are valid/VBN/valid inputs/NNS/inputs and/CC/and what/WP/what constitute/NN/constitute acceptable/JJ/acceptable outputs/NNS/outputs ?/./? acceptable/JJ/acceptable outputs/NNS/outputs for/IN/for each/DT/each valid/JJ/valid input/NNP/input. so/RB/so /,/, we/PRP/we looked/VBD/looked at/IN/at this/DT/this earlier/NNP/earlier. so/RB/so for/IN/for example/NN/example /,/, for/IN/for the/DT/the gcd/NN/gcd problem/NN/problem 36/CD/36 and/CC/and 48/CD/48 constitute/NN/constitute valid/VBD/valid inputs/NNP/inputs. and/CC/and for/IN/for these/DT/these the/DT/the acceptable/JJ/acceptable input/NN/input is/VBZ/is 12/CD/12. finding/VBG/finding the/DT/the shortest/JJS/shortest path/NN/path names/NNS/names of/IN/of two/CD/two cities/NNS/cities in/IN/in the/DT/the map/NN/map constitutes/VBZ/constitutes a/DT/a valid/JJ/valid input/NN/input and/CC/and acceptable/JJ/acceptable output/NN/output would/MD/would be/VB/be the/DT/the description/NN/description of/IN/of the/DT/the path/NN/path and/CC/and so/RB/so on/NNP/on. of/IN/of course/NN/course input/NN/input which/WDT/which is/VBZ/is valid/VBN/valid for/IN/for one/CD/one problem/NN/problem need/NN/need not/RB/not be/VB/be valid/VBN/valid for/IN/for another/DT/another problem/NN/problem and/CC/and typically/RB/typically is/VBZ/is not/NNP/not. so/RB/so /,/, numbers/NNS/numbers will/MD/will not/RB/not make/VB/make sense/NN/sense as/IN/as input/NN/input for/IN/for say/NN/say the/DT/the dictionary/JJ/dictionary problem/NN/problem or/CC/or and/CC/and words/NNS/words will/MD/will not/RB/not make/VB/make sense/NN/sense as/IN/as inputs/NNS/inputs for/IN/for the/DT/the gcd/NN/gcd problem/NN/problem ;/:/; obviously/NNP/obviously. we/PRP/we often/RB/often use/VBP/use the/DT/the phrase/NN/phrase input/NN/input instance/NN/instance and/CC/and this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but a/DT/a valid/JJ/valid input/NN/input value/NN/value for/IN/for a/DT/a given/VBN/given problem/NNP/problem. so/RB/so /,/, i/PRP/i will/MD/will say/VB/say that/IN/that a/DT/a value/NN/value x/NN/x is/VBZ/is a/DT/a input/NN/input instance/NN/instance for/IN/for problem/NN/problem p/NN/p if/IN/if x/NN/x is/VBZ/is a/DT/a valid/JJ/valid input/NN/input as/IN/as per/NN/per the/DT/the specification/NNP/specification. so/RB/so /,/, 36/CD/36 and/CC/and 48/CD/48 are/VBP/are 36/CD/36 and/CC/and 48/CD/48 together/RP/together constitute/JJ/constitute an/DT/an instance/NN/instance for/IN/for the/DT/the gcd/NN/gcd problem/NNP/problem. mumbai/NN/mumbai aurangabad/VBD/aurangabad and/CC/and map/NN/map constitute/NN/constitute an/DT/an instance/NN/instance for/IN/for the/DT/the gcd/NN/gcd problem/NN/problem for/IN/for the/DT/the shortest/JJS/shortest path/NN/path problem/NN/problem and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 17/CD/17 /CD/) another/DT/another important/JJ/important term/NN/term that/WDT/that we/PRP/we need/VBP/need is/VBZ/is that/IN/that of/IN/of a/DT/a size/NN/size of/IN/of an/DT/an instance/NNP/instance. we/PRP/we will/MD/will often/RB/often not/RB/not necessarily/RB/necessarily use/VB/use the/DT/the term/NN/term input/NN/input instance/NN/instance /,/, but/CC/but we/PRP/we will/MD/will just/RB/just stick/VB/stick with/IN/with instance/NNP/instance. instance/NN/instance will/MD/will always/RB/always mean/VB/mean input/NN/input instance/NN/instance or/CC/or we/PRP/we could/MD/could even/RB/even say/VB/say problem/NN/problem instance/NNP/instance. so/RB/so /,/, when/WRB/when we/PRP/we say/VBP/say the/DT/the size/NN/size of/IN/of an/DT/an input/NN/input instance/NN/instance /,/, we/PRP/we mean/VBP/mean in/IN/in a/DT/a formal/JJ/formal sense/NN/sense we/PRP/we will/MD/will mean/VB/mean a/DT/a following/NNP/following. will/MD/will mean/VB/mean the/DT/the number/NN/number of/IN/of bits/NNS/bits needed/VBN/needed to/TO/to represent/VB/represent the/DT/the input/NN/input /,/, the/DT/the input/NN/input instance/NNP/instance. let/NN/let me/PRP/me just/RB/just clarify/VB/clarify that/NNP/that. so/RB/so /,/, a/DT/a specific/JJ/specific input/NN/input instance/NN/instance will/MD/will have/VB/have a/DT/a certain/JJ/certain specific/NN/specific size/NNP/size. so/RB/so /,/, again/RB/again let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to our/PRP$/our examples/NNP/examples. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 06/CD/06 /CD/) so/RB/so for/IN/for example/NN/example /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at 36/CD/36 48/CD/48 which/WDT/which constitutes/NNS/constitutes the/DT/the input/NN/input instance/NN/instance for/IN/for the/DT/the gcd/NN/gcd problem/NN/problem /,/, then/RB/then we/PRP/we will/MD/will have/VB/have to/TO/to ask/VB/ask the/DT/the question/NN/question /,/, how/WRB/how many/JJ/many bits/NNS/bits are/VBP/are needed/VBN/needed to/TO/to represent/VB/represent 36x/CD/36x and/CC/and 48/CD/48 ?/./? so/RB/so /,/, here/RB/here there/EX/there is/VBZ/is a/DT/a question/NN/question of/IN/of how/WRB/how we/PRP/we represent/VBP/represent numbers/NNS/numbers in/IN/in the/DT/the first/JJ/first place/NNP/place. so/RB/so suppose/RB/suppose /,/, we/PRP/we say/VBP/say numbers/NNS/numbers are/VBP/are going/VBG/going to/TO/to be/VB/be represented/VBN/represented in/IN/in binary/NNP/binary. then/RB/then /,/, 36/CD/36 will/MD/will require/VB/require 6/CD/6 bits/NNP/bits. and/CC/and so/RB/so will/MD/will 48/VB/48. so/RB/so in/IN/in this/DT/this case/NN/case /,/, the/DT/the input/NN/input instance/NN/instance will/MD/will have/VB/have length/NN/length 6/CD/6 plus/NN/plus 6/CD/6 or/CC/or 12/CD/12. as/IN/as far/RB/far as/IN/as /,/, the/DT/the shortest/JJS/shortest path/NN/path in/IN/in the/DT/the map/NN/map is/VBZ/is concerned/VBN/concerned /,/, somehow/RB/somehow or/CC/or the/DT/the other/JJ/other we/PRP/we will/MD/will have/VB/have to/TO/to represent/VB/represent the/DT/the map/NNP/map. there/RB/there are/VBP/are various/JJ/various ways/NNS/ways of/IN/of this/DT/this representation/NN/representation we/PRP/we will/MD/will see/VB/see some/DT/some of/IN/of them/PRP/them later/JJ/later on/IN/on in/IN/in the/DT/the course/NNP/course. in/IN/in general/JJ/general a/DT/a map/NN/map can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a graph/NN/graph which/WDT/which you/PRP/you have/VBP/have probably/RB/probably seen/VBN/seen in/IN/in the/DT/the prerequisites/NNS/prerequisites for/IN/for this/DT/this course/NNP/course. and/CC/and a/DT/a map/NN/map could/MD/could be/VB/be represented/VBN/represented as/IN/as a/DT/a matrix/NNP/matrix. and/CC/and a/DT/a matrix/NN/matrix could/MD/could be/VB/be represented/VBN/represented as/IN/as an/DT/an array/NN/array bits/VBZ/bits if/IN/if you/PRP/you like/VBP/like and/CC/and in/IN/in that/DT/that way/NN/way we/PRP/we can/MD/can represent/VB/represent maps/NNS/maps as/IN/as well/NNP/well. this/DT/this definition/NN/definition that/IN/that /,/, we/PRP/we have/VBP/have given/NNP/given. this/DT/this formal/JJ/formal definition/NN/definition that/WDT/that we/PRP/we have/VBP/have given/VBN/given is/VBZ/is often/RB/often a/DT/a little/RB/little bit/NN/bit inconvenient/NN/inconvenient for/IN/for directives/NNP/directives. so/RB/so often/RB/often /,/, we/PRP/we settle/VBP/settle for/IN/for a/DT/a somewhat/NN/somewhat more/RBR/more informal/JJ/informal definition/NNP/definition. but/CC/but in/IN/in fact/NN/fact /,/, this/DT/this typically/RB/typically is/VBZ/is something/NN/something that/IN/that is/VBZ/is more/RBR/more useful/NNP/useful. and/CC/and informally/RB/informally we/PRP/we might/MD/might say/VB/say the/DT/the size/NN/size of/IN/of an/DT/an instance/NN/instance and/CC/and we/PRP/we might/MD/might mean/VB/mean any/DT/any parameter/NN/parameter which/WDT/which roughly/RB/roughly grows/VBZ/grows with/IN/with the/DT/the official/NN/official definition/NN/definition of/IN/of the/DT/the size/NN/size of/IN/of the/DT/the instance/NNP/instance. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 17/CD/17 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. any/DT/any parameter/NN/parameter which/WDT/which grows/VBZ/grows roughly/RB/roughly the/DT/the growth/NN/growth may/MD/may not/RB/not be/VB/be exactly/RB/exactly predicable/JJ/predicable with/IN/with the/DT/the formal/JJ/formal notion/NN/notion of/IN/of size/NNP/size. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to our/PRP$/our gcd/NN/gcd problem/NNP/problem. there/EX/there we/PRP/we said/VBD/said that/IN/that the/DT/the size/NN/size was/VBD/was the/DT/the size/NN/size for/IN/for 36/CD/36 48/CD/48 was/VBD/was 12/CD/12 bits/NNP/bits. but/CC/but /,/, instead/RB/instead of/IN/of making/VBG/making this/DT/this is/VBZ/is the/DT/the definition/NN/definition of/IN/of size/NNP/size. we/PRP/we could/MD/could say/VB/say that/IN/that the/DT/the size/NN/size is/VBZ/is simply/RB/simply the/DT/the sum/NN/sum of/IN/of the/DT/the numbers/NNP/numbers. so/RB/so /,/, 36/CD/36 plus/CC/plus 48/CD/48 /,/, which/WDT/which is/VBZ/is 84/CD/84. so/RB/so /,/, we/PRP/we could/MD/could think/VB/think of/IN/of 84/CD/84 itself/PRP/itself as/IN/as our/PRP$/our notion/NN/notion of/IN/of size/NN/size of/IN/of the/DT/the input/NN/input instance/NN/instance rather/RB/rather than/IN/than 12/CD/12 bits/NNP/bits. in/IN/in fact/NN/fact /,/, if/IN/if you/PRP/you go/VBP/go back/RB/back to/TO/to the/DT/the first/JJ/first lecture/NN/lecture you/PRP/you will/MD/will see/VB/see that/IN/that this/DT/this was/VBD/was the/DT/the parameter/NN/parameter that/IN/that we/PRP/we used/VBD/used when/WRB/when we/PRP/we analyzed/VBD/analyzed the/DT/the gcd/NN/gcd algorithm/NN/algorithm in/IN/in the/DT/the first/JJ/first lecture/NNP/lecture. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that the/DT/the size/NN/size the/DT/the sum/NN/sum of/IN/of the/DT/the numbers/NNS/numbers u/VBP/u and/CC/and v/NN/v will/MD/will keep/VB/keep on/IN/on decreasing/NNP/decreasing. and/CC/and in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is really/RB/really the/DT/the reason/NN/reason why/WRB/why we/PRP/we are/VBP/are interested/JJ/interested in/IN/in the/DT/the notion/NN/notion of/IN/of size/NNP/size. usually/RB/usually we/PRP/we will/MD/will expect/VB/expect that/IN/that the/DT/the time/NN/time taken/VBN/taken by/IN/by an/DT/an algorithm/NN/algorithm will/MD/will increase/VB/increase with/IN/with the/DT/the size/NN/size of/IN/of the/DT/the instance/NNP/instance. and/CC/and therefore/RB/therefore /,/, if/IN/if you/PRP/you are/VBP/are going/VBG/going to/TO/to evaluate/VB/evaluate an/DT/an algorithm/NN/algorithm it/PRP/it is/VBZ/is only/RB/only natural/JJ/natural and/CC/and it/PRP/it is/VBZ/is only/RB/only fair/JJ/fair in/IN/in some/DT/some sense/NN/sense that/IN/that we/PRP/we also/RB/also mention/NN/mention what/WP/what the/DT/the size/NN/size of/IN/of the/DT/the input/NN/input instance/NN/instance is/NNP/is. so/RB/so /,/, if/IN/if an/DT/an algorithm/NN/algorithm takes/VBZ/takes a/DT/a long/JJ/long time/NN/time on/IN/on a/DT/a large/JJ/large instance/NN/instance on/IN/on an/DT/an instance/NN/instance of/IN/of large/JJ/large size/NNP/size. then/RB/then /,/, that/IN/that is/VBZ/is but/CC/but if/IN/if it/PRP/it takes/VBZ/takes large/JJ/large time/NN/time on/IN/on an/DT/an instance/NN/instance of/IN/of a/DT/a small/JJ/small size/NNP/size. then/RB/then /,/, we/PRP/we should/MD/should potentially/RB/potentially say/VB/say that/IN/that that/DT/that algorithm/NN/algorithm is/VBZ/is not/RB/not a/DT/a good/JJ/good algorithm/NN/algorithm or/CC/or at/IN/at least/JJS/least it/PRP/it is/VBZ/is not/RB/not a/DT/a fast/JJ/fast algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to the/DT/the other/JJ/other problems/NNS/problems and/CC/and maybe/VB/maybe we/PRP/we can/MD/can think/VB/think of/IN/of what/WP/what the/DT/the notion/NN/notion of/IN/of size/NN/size is/VBZ/is going/VBG/going to/TO/to be/VB/be over/IN/over there/NNP/there. so/RB/so /,/, going/VBG/going back/RB/back to/TO/to our/PRP$/our shortest/NN/shortest path/NN/path problem/NN/problem /,/, a/DT/a notion/NN/notion of/IN/of size/NN/size could/MD/could be/VB/be the/DT/the size/NN/size of/IN/of the/DT/the map/NN/map /,/, so/RB/so the/DT/the number/NN/number of/IN/of roads/NNS/roads in/IN/in the/DT/the map/NN/map or/CC/or the/DT/the number/NN/number of/IN/of roads/NNS/roads and/CC/and the/DT/the number/NN/number of/IN/of cities/NNS/cities together/NNP/together. so/RB/so /,/, clearly/RB/clearly finding/VBG/finding a/DT/a shortest/NN/shortest path/NN/path in/IN/in a/DT/a map/NN/map which/WDT/which only/RB/only involves/VBZ/involves one/CD/one road/NN/road is/VBZ/is going/VBG/going to/TO/to be/VB/be really/RB/really easy/NNP/easy. and/CC/and therefore/RB/therefore /,/, we/PRP/we should/MD/should expect/VB/expect we/PRP/we should/MD/should an/DT/an algorithm/NN/algorithm which/WDT/which takes/VBZ/takes us/PRP/us takes/VBZ/takes us/PRP/us short/RB/short time/NN/time on/IN/on such/JJ/such a/DT/a small/JJ/small instance/NN/instance should/MD/should not/RB/not really/RB/really be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a great/JJ/great algorithm/NNP/algorithm. on/IN/on the/DT/the other/JJ/other hand/NN/hand if/IN/if an/DT/an algorithm/NN/algorithm takes/VBZ/takes a/DT/a small/JJ/small amount/NN/amount of/IN/of time/NN/time on/IN/on a/DT/a map/NN/map which/WDT/which consists/NNS/consists of/IN/of 1000/CD/1000 cities/NNS/cities and/CC/and 2000/CD/2000 roads/NNP/roads. then/RB/then /,/, that/IN/that algorithm/NN/algorithm we/PRP/we should/MD/should certainly/RB/certainly say/VB/say is/VBZ/is a/DT/a god/NN/god algorithm/NNP/algorithm. so/RB/so /,/, essentially/RB/essentially that/IN/that is/VBZ/is the/DT/the idea/NN/idea /,/, we/PRP/we want/VBP/want to/TO/to when/WRB/when we/PRP/we evaluate/VBP/evaluate algorithms/NNP/algorithms. we/PRP/we want/VBP/want to/TO/to evaluate/VB/evaluate that/IN/that in/IN/in comparison/NN/comparison evaluate/NN/evaluate the/DT/the time/NN/time taken/VBN/taken in/IN/in comparison/NN/comparison to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the input/NN/input instance/NNP/instance. for/IN/for the/DT/the dictionary/JJ/dictionary problem/NN/problem the/DT/the size/NN/size of/IN/of the/DT/the dictionary/JJ/dictionary the/DT/the number/NN/number of/IN/of words/NNS/words in/IN/in the/DT/the dictionary/JJ/dictionary that/IN/that is/VBZ/is would/MD/would be/VB/be a/DT/a good/JJ/good indication/NN/indication of/IN/of the/DT/the size/NNP/size. and/CC/and for/IN/for the/DT/the x/NN/x ray/NN/ray problem/NN/problem /,/, we/PRP/we will/MD/will somehow/VB/somehow have/VB/have to/TO/to take/VB/take that/IN/that x/NN/x ray/NN/ray and/CC/and convert/NN/convert it/PRP/it into/IN/into bits/NNS/bits of/IN/of some/DT/some kind/NNP/kind. so/RB/so /,/, we/PRP/we could/MD/could say/VB/say for/IN/for example/NN/example /,/, that/IN/that the/DT/the size/NN/size of/IN/of the/DT/the x/NN/x ray/NN/ray say/VB/say the/DT/the number/NN/number of/IN/of the/DT/the if/IN/if the/DT/the x/NN/x ray/NN/ray is/VBZ/is has/VBZ/has a/DT/a resolution/NN/resolution 1000/CD/1000 by/IN/by 1000/CD/1000. then/RB/then /,/, they/PRP/they could/MD/could say/VB/say that/IN/that the/DT/the size/NN/size is/VBZ/is a/DT/a million/NN/million or/CC/or something/NN/something like/IN/like that/NNP/that. we/PRP/we often/RB/often use/VBP/use the/DT/the phrase/NN/phrase problem/NN/problem size/NN/size also/RB/also to/TO/to denote/VB/denote the/DT/the size/NN/size of/IN/of the/DT/the instance/NNP/instance. so/RB/so /,/, if/IN/if you/PRP/you say/VBP/say if/IN/if you/PRP/you hear/VBP/hear the/DT/the phrase/NN/phrase problem/NN/problem size/NN/size it/PRP/it is/VBZ/is really/RB/really talking/VBG/talking about/IN/about the/DT/the instance/NN/instance of/IN/of the/DT/the problem/NN/problem rather/RB/rather than/IN/than the/DT/the problem/NN/problem directly/NNP/directly. but/CC/but /,/, that/IN/that is/VBZ/is a/DT/a term/NN/term which/WDT/which is/VBZ/is very/RB/very commonly/RB/commonly used/VBN/used on/IN/on the/DT/the literature/NNP/literature. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 37/CD/37 /CD/) /./. they/PRP/they next/JJ/next important/JJ/important term/NN/term that/WDT/that we/PRP/we need/VBP/need to/TO/to discuss/VB/discuss is/VBZ/is algorithm/NNP/algorithm. when/WRB/when i/PRP/i say/VBP/say algorithm/NN/algorithm /,/, i/PRP/i mean/VBP/mean an/DT/an abstract/NN/abstract computational/JJ/computational procedure/NN/procedure which/WDT/which takes/VBZ/takes some/DT/some value/NN/value or/CC/or values/NNS/values as/IN/as input/NN/input and/CC/and produces/VBZ/produces a/DT/a value/NN/value or/CC/or values/NNS/values as/IN/as output/NNP/output. i/PRP/i use/VBP/use the/DT/the term/NN/term abstract/NN/abstract in/IN/in order/NN/order to/TO/to denote/VB/denote that/IN/that an/DT/an algorithm/NN/algorithm can/MD/can be/VB/be expressed/VBN/expressed in/IN/in many/JJ/many ways/NNP/ways. so/RB/so /,/, a/DT/a program/NN/program is/VBZ/is an/DT/an expression/NN/expression of/IN/of an/DT/an algorithm/NNP/algorithm. so/RB/so /,/, the/DT/the same/JJ/same algorithm/NN/algorithm might/MD/might give/VB/give rise/VB/rise to/TO/to different/JJ/different programs/NNS/programs say/VBP/say in/IN/in different/JJ/different languages/NNP/languages. a/DT/a program/NN/program has/VBZ/has been/VBN/been concrete/JJ/concrete and/CC/and algorithms/NNS/algorithms has/VBZ/has been/VBN/been abstract/NNP/abstract. of/IN/of course/NN/course even/RB/even for/IN/for eve/JJ/eve for/IN/for discussing/NN/discussing algorithms/NNS/algorithms /,/, we/PRP/we will/MD/will need/VB/need to/TO/to have/VB/have an/DT/an ocean/JJ/ocean of/IN/of a/DT/a language/NNP/language. so/RB/so ;/:/; however/RB/however /,/, this/DT/this notion/NN/notion is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be as/RB/as rigid/JJ/rigid or/CC/or as/IN/as strict/JJ/strict as/IN/as the/DT/the notion/NN/notion that/IN/that we/PRP/we have/VBP/have when/WRB/when we/PRP/we discuss/VBP/discuss programs/NNP/programs. when/WRB/when we/PRP/we discuss/VBP/discuss programs/NNS/programs /,/, we/PRP/we have/VBP/have a/DT/a very/RB/very well/RB/well defined/VBN/defined very/RB/very /,/, very/RB/very strict/JJ/strict language/NN/language which/WDT/which has/VBZ/has very/RB/very /,/, very/RB/very strict/JJ/strict rules/NNS/rules for/IN/for syntax/NNP/syntax. we/PRP/we will/MD/will not/RB/not be/VB/be worrying/VBG/worrying about/IN/about all/DT/all of/IN/of that/DT/that when/WRB/when we/PRP/we discuss/VBP/discuss algorithms/NNP/algorithms. we/PRP/we would/MD/would like/VB/like to/TO/to think/VB/think of/IN/of algorithms/NNS/algorithms as/IN/as the/DT/the idea/NN/idea behind/IN/behind the/DT/the program/NNP/program. and/CC/and so/RB/so long/RB/long as/IN/as we/PRP/we are/VBP/are able/JJ/able to/TO/to convey/NN/convey that/IN/that idea/NN/idea in/IN/in as/IN/as in/IN/in very/RB/very clear/JJ/clear terms/NNS/terms you/PRP/you will/MD/will happy/VB/happy. so/RB/so /,/, the/DT/the basic/JJ/basic our/PRP$/our goal/NN/goal in/IN/in this/DT/this course/NN/course is/VBZ/is going/VBG/going to/TO/to be/VB/be description/NN/description of/IN/of algorithms/NNP/algorithms. so/RB/so that/IN/that human/JJ/human beings/NNS/beings can/MD/can understand/VB/understand /,/, what/WDT/what is/VBZ/is being/VBG/being said/VBN/said and/CC/and we/PRP/we will/MD/will not/RB/not worry/VB/worry so/RB/so much/RB/much about/IN/about the/DT/the precise/NN/precise syntax/NN/syntax that/WDT/that is/VBZ/is used/NNP/used. initially/RB/initially /,/, we/PRP/we will/MD/will describe/VB/describe algorithms/NNS/algorithms at/IN/at a/DT/a fairly/RB/fairly great/JJ/great level/NN/level of/IN/of detail/NNP/detail. as/IN/as the/DT/the course/NN/course progresses/VBZ/progresses /,/, we/PRP/we will/MD/will abbreviate/VB/abbreviate our/PRP$/our descriptions/NNP/descriptions. and/CC/and it/PRP/it will/MD/will become/VB/become clear/JJ/clear to/TO/to somebody/NN/somebody who/WP/who has/VBZ/has gone/VBN/gone through/IN/through the/DT/the course/NN/course exactly/RB/exactly what/WP/what is/VBZ/is being/VBG/being met/NNP/met. the/DT/the reason/NN/reason for/IN/for describing/NN/describing algorithms/NNS/algorithms is/VBZ/is of/IN/of course/NN/course /,/, one/CD/one reason/NN/reason is/VBZ/is to/TO/to convey/NN/convey what/WP/what is/VBZ/is the/DT/the idea/NNP/idea. and/CC/and the/DT/the other/JJ/other reason/NN/reason why/WRB/why we/PRP/we will/MD/will be/VB/be discussing/VBG/discussing algorithms/NNS/algorithms in/IN/in this/DT/this course/NN/course is/VBZ/is of/IN/of course/NN/course to/TO/to evaluate/VB/evaluate their/PRP$/their time/NNP/time. so/RB/so /,/, i/PRP/i tell/VBP/tell you/PRP/you what/WP/what an/DT/an algorithm/NN/algorithm is/NNP/is. it/PRP/it should/MD/should be/VB/be clear/JJ/clear to/TO/to you/PRP/you /,/, what/WP/what exactly/RB/exactly are/VBP/are the/DT/the operations/NNS/operations that/IN/that i/PRP/i have/VBP/have in/IN/in mind/NNP/mind. and/CC/and you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to write/VB/write the/DT/the program/NN/program /,/, but/CC/but not/RB/not only/RB/only that/NNP/that. it/PRP/it should/MD/should also/RB/also be/VB/be clear/JJ/clear to/TO/to you/PRP/you how/WRB/how that/DT/that program/NN/program will/MD/will execute/VB/execute on/IN/on a/DT/a machine/NNP/machine. and/CC/and especially/RB/especially /,/, on/IN/on the/DT/the model/NN/model machine/NN/machine that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to talk/VB/talk about/IN/about and/CC/and that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be another/DT/another important/JJ/important purpose/NN/purpose another/DT/another important/JJ/important point/NN/point that/WDT/that we/PRP/we want/VBP/want to/TO/to keep/VB/keep in/IN/in mind/NN/mind /,/, when/WRB/when we/PRP/we discuss/VBP/discuss algorithms/NNP/algorithms. so/RB/so /,/, we/PRP/we have/VBP/have to/TO/to describe/VB/describe algorithms/NNS/algorithms at/IN/at such/JJ/such a/DT/a level/NN/level of/IN/of detail/NNP/detail. that/IN/that it/PRP/it is/VBZ/is fairly/RB/fairly easy/JJ/easy to/TO/to analyze/VB/analyze how/WRB/how long/JJ/long they/PRP/they will/MD/will take/VB/take on/IN/on our/PRP$/our mathematical/JJ/mathematical model/NNP/model. all/DT/all these/DT/these issues/NNS/issues will/MD/will become/VB/become clear/JJ/clear /,/, when/WRB/when we/PRP/we describe/VBP/describe our/PRP$/our mathematical/JJ/mathematical model/NN/model which/WDT/which we/PRP/we will/MD/will do/VB/do right/RB/right now/NNP/now. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 48/CD/48 /CD/) the/DT/the mathematical/JJ/mathematical model/NN/model of/IN/of a/DT/a computer/NN/computer that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use in/IN/in this/DT/this course/NN/course is/VBZ/is called/VBN/called ram/-NONE-/ram. and/CC/and ram/NN/ram stands/NNS/stands for/IN/for random/NN/random access/NN/access machine/NNP/machine. this/DT/this is/VBZ/is a/DT/a very/RB/very simplified/VBN/simplified computer/NN/computer model/NNP/model. and/CC/and it/PRP/it only/RB/only consists/VBZ/consists of/IN/of basically/RB/basically consists/VBZ/consists of/IN/of two/CD/two parts/NNP/parts. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a processor/NN/processor which/WDT/which will/MD/will be/VB/be executing/VBG/executing programs/NNP/programs. and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is going/VBG/going to/TO/to a/DT/a memory/NNP/memory. the/DT/the memory/NN/memory is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a correction/NN/correction of/IN/of locations/NNP/locations. and/CC/and in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is convenient/JJ/convenient to/TO/to think/VB/think of/IN/of the/DT/the memory/NN/memory as/IN/as an/DT/an array/NN/array with/IN/with numbers/NNS/numbers on/IN/on it/NNP/it. so/IN/so /,/, the/DT/the locations/NNS/locations start/VBP/start with/IN/with a/DT/a certain/JJ/certain say/NN/say 0/-NONE-/0 and/CC/and there/EX/there might/MD/might be/VB/be say/VB/say m/NN/m minus/NN/minus 1/CD/1. the/DT/the last/JJ/last number/NN/number could/MD/could be/VB/be m/NN/m minus/NN/minus 1/CD/1 /,/, if/IN/if there/EX/there are/VBP/are m/NN/m locations/NNS/locations overall/NNP/overall. so/RB/so /,/, each/DT/each location/NN/location has/VBZ/has a/DT/a number/NN/number which/WDT/which is/VBZ/is also/RB/also called/VBN/called its/PRP$/its address/NNP/address. so/RB/so /,/, we/PRP/we can/MD/can refer/VB/refer to/TO/to locations/NNS/locations by/IN/by assigning/VBG/assigning by/IN/by describing/NN/describing the/DT/the number/NNP/number. of/IN/of course/NN/course that/IN/that is/VBZ/is going/VBG/going to/TO/to extremely/RB/extremely inconvenient/JJ/inconvenient in/IN/in general/NNP/general. and/CC/and so/RB/so while/IN/while writing/VBG/writing algorithms/NNS/algorithms /,/, we/PRP/we will/MD/will want/VB/want to/TO/to do/VB/do something/NN/something which/WDT/which is/VBZ/is more/RBR/more pleasant/NNP/pleasant. and/CC/and let/VB/let me/PRP/me start/VB/start describing/VBG/describing /,/, how/WRB/how we/PRP/we i/PRP/i will/MD/will describe/VB/describe /,/, what/WDT/what exactly/RB/exactly /,/, how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to refer/VB/refer to/TO/to the/DT/the locations/NNP/locations. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 58/CD/58 /CD/) and/CC/and in/IN/in fact/NN/fact /,/, as/IN/as we/PRP/we describe/VBP/describe the/DT/the ram/NN/ram model/NN/model i/PRP/i will/MD/will also/RB/also be/VB/be describing/VBG/describing how/WRB/how we/PRP/we program/NN/program the/DT/the ram/NN/ram model/NN/model or/CC/or how/WRB/how we/PRP/we design/VBP/design algorithms/NNS/algorithms for/IN/for the/DT/the ram/NN/ram model/NNP/model. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing to/TO/to notice/NN/notice that/IN/that although/IN/although the/DT/the ram/NN/ram model/NN/model contains/VBZ/contains locations/NNS/locations which/WDT/which are/VBP/are addressed/VBN/addressed by/IN/by numbers/NNS/numbers we/PRP/we will/MD/will in/IN/in fact/NN/fact allow/NN/allow variable/JJ/variable names/NNP/names. so/RB/so when/WRB/when we/PRP/we describe/VBP/describe algorithms/NNS/algorithms /,/, we/PRP/we can/MD/can say/VB/say that/IN/that say/NN/say the/DT/the value/NN/value is/VBZ/is contained/VBN/contained in/IN/in this/DT/this variable/JJ/variable a/NNP/a. a/DT/a certain/JJ/certain value/NN/value is/VBZ/is contained/VBN/contained in/IN/in variable/JJ/variable rather/RB/rather than/IN/than a/DT/a certain/JJ/certain value/NNP/value. we/PRP/we stored/VBD/stored in/IN/in the/DT/the location/NN/location fifty/NN/fifty three/CD/three or/CC/or something/NN/something like/IN/like that/NNP/that. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will allow/VB/allow a/DT/a variety/NN/variety of/IN/of data/NNS/data types/NNP/types. say/VBP/say /,/, we/PRP/we will/MD/will allow/VB/allow plain/NN/plain /,/, simple/JJ/simple plain/NN/plain simple/NN/simple variables/NNP/variables. but/CC/but /,/, will/MD/will also/RB/also allow/VB/allow say/VBP/say arrays/NNS/arrays and/CC/and will/MD/will also/RB/also allow/VB/allow structures/NNP/structures. i/PRP/i would/MD/would like/VB/like to/TO/to think/VB/think of/IN/of these/DT/these two/CD/two as/IN/as sort/NN/sort of/IN/of the/DT/the primitive/JJ/primitive data/NNS/data types/NNP/types. and/CC/and of/IN/of course/NN/course /,/, let/VB/let me/PRP/me write/VB/write down/RP/down simple/JJ/simple variables/NNS/variables along/IN/along with/IN/with them/NNP/them. in/IN/in addition/NN/addition of/IN/of course/NNP/course, /,/, we/PRP/we will/MD/will allow/VB/allow other/JJ/other things/NNS/things like/IN/like trees/NNS/trees lists/NNS/lists and/CC/and so/RB/so on/IN/on as/IN/as well/NNP/well. you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to build/VB/build your/PRP$/your own/JJ/own data/NNS/data structures/NNS/structures as/IN/as well/RB/well /,/, but/CC/but somehow/WRB/somehow or/CC/or the/DT/the other/JJ/other they/PRP/they will/MD/will have/VB/have to/TO/to be/VB/be built/VBN/built out/RP/out of/IN/of these/DT/these data/NNS/data structures/NNP/structures. so/RB/so /,/, this/DT/this is/VBZ/is as/IN/as far/RB/far as/IN/as the/DT/the memory/NN/memory is/VBZ/is concerned/NNP/concerned. there/RB/there will/MD/will be/VB/be a/DT/a memory/NN/memory which/WDT/which will/MD/will store/VB/store the/DT/the program/NN/program as/IN/as well/NNP/well. but/CC/but /,/, we/PRP/we will/MD/will think/VB/think of/IN/of it/PRP/it as/IN/as being/VBG/being quite/RB/quite separate/NNP/separate. so/RB/so /,/, the/DT/the program/NN/program and/CC/and data/NNS/data do/VBP/do not/RB/not mix/NNP/mix. so/RB/so /,/, here/RB/here is/VBZ/is again/RB/again our/PRP$/our picture/NN/picture /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 48/CD/48 /CD/) of/IN/of the/DT/the ram/NN/ram model/NNP/model. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a memory/NN/memory and/CC/and then/RB/then there/RB/there is/VBZ/is a/DT/a processor/NNP/processor. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 10/CD/10 /CD/) /./. now/RB/now /,/, i/PRP/i have/VBP/have to/TO/to tell/VB/tell you/PRP/you what/WP/what the/DT/the processor/NN/processor can/MD/can do/VB/do in/IN/in each/DT/each step/NNP/step. so/RB/so /,/, basically/RB/basically this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a description/NN/description of/IN/of the/DT/the instruction/NN/instruction set/VBD/set of/IN/of the/DT/the processor/NNP/processor. so/RB/so /,/, the/DT/the processor/NN/processor is/VBZ/is going/VBG/going to/TO/to have/VB/have a/DT/a number/NN/number of/IN/of instructions/NNS/instructions and/CC/and will/MD/will assume/VB/assume for/IN/for simplicity/NN/simplicity that/WDT/that all/DT/all instructions/NNS/instructions execute/VBP/execute in/IN/in one/CD/one step/NNP/step. there/RB/there are/VBP/are basically/RB/basically three/CD/three /,/, four/CD/four groups/NNS/groups of/IN/of instructions/NNS/instructions that/WDT/that we/PRP/we will/MD/will have/NNP/have. so/RB/so /,/, one/CD/one group/NN/group is/VBZ/is arithmetic/JJ/arithmetic and/CC/and logical/JJ/logical operations/NNP/operations. so/RB/so in/IN/in this/DT/this /,/, you/PRP/you will/MD/will be/VB/be allowed/VBN/allowed in/IN/in your/PRP$/your program/NN/program to/TO/to say/VB/say take/NN/take two/CD/two locations/NNS/locations from/IN/from memory/NNP/memory. add/NN/add their/PRP$/their contents/NNS/contents and/CC/and deposit/NN/deposit them/PRP/them in/IN/in a/DT/a third/JJ/third location/NNP/location. let/NN/let me/PRP/me /,/, write/VBP/write down/RP/down how/WRB/how you/PRP/you will/MD/will actually/RB/actually express/VB/express this/DT/this /,/, when/WRB/when you/PRP/you write/VBP/write programs/NNP/programs. and/CC/and do/VB/do not/RB/not worry/VB/worry ;/:/; it/PRP/it is/VBZ/is going/VBG/going to/TO/to quite/VB/quite in/IN/in a/DT/a quite/JJ/quite friendly/NNP/friendly. this/DT/this is/VBZ/is going/VBG/going this/DT/this can/MD/can be/VB/be represented/VBN/represented in/IN/in a/DT/a very/RB/very friendly/JJ/friendly pleasant/NN/pleasant manner/NNP/manner. so/RB/so /,/, for/IN/for example/NN/example /,/, you/PRP/you could/MD/could say/VB/say a/DT/a equals/NNS/equals b/NN/b plus/CC/plus c/NN/c as/IN/as a/DT/a part/NN/part of/IN/of your/PRP$/your algorithm/NNP/algorithm. and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be one/CD/one instruction/NNP/instruction. as/IN/as we/PRP/we said/VBD/said an/DT/an instruction/NN/instruction is/VBZ/is going/VBG/going to/TO/to be/VB/be taking/VBG/taking two/CD/two operands/NNS/operands b/VBP/b and/CC/and c/NN/c which/WDT/which are/VBP/are stored/VBN/stored in/IN/in two/CD/two locations/NNS/locations /,/, add/VBP/add them/PRP/them up/RP/up and/CC/and put/VBD/put them/PRP/them back/NNP/back. so/RB/so /,/, this/DT/this will/MD/will happen/VB/happen in/IN/in one/CD/one step/NNP/step. then/RB/then /,/, you/PRP/you will/MD/will be/VB/be allowed/VBN/allowed to/TO/to have/VB/have conditions/NNS/conditions jumps/NNS/jumps and/CC/and conditional/JJ/conditional jumps/NNP/jumps. and/CC/and this/DT/this will/MD/will also/RB/also execute/VB/execute in/IN/in one/CD/one step/NNP/step. so/RB/so /,/, correspondingly/RB/correspondingly as/IN/as a/DT/a part/NN/part of/IN/of your/PRP$/your program/NN/program you/PRP/you will/MD/will be/VB/be allowed/VBN/allowed to/TO/to write/VB/write something/NN/something like/IN/like go/NN/go to/NNP/to. this/DT/this will/MD/will happen/VB/happen in/IN/in one/CD/one step/NN/step or/CC/or you/PRP/you will/MD/will be/VB/be allowed/VBN/allowed to/TO/to write/VB/write say/NN/say something/NN/something like/IN/like if/IN/if a/DT/a greater/JJR/greater than/IN/than b/NN/b then/RB/then go/VB/go to/NNP/to. this/DT/this will/MD/will all/VB/all happen/VB/happen in/IN/in one/CD/one step/NNP/step. defining/NN/defining our/PRP$/our model/NN/model /,/, we/PRP/we want/VBP/want to/TO/to keep/VB/keep this/DT/this definition/NN/definition reasonably/RB/reasonably simple/NNP/simple. you/PRP/you may/MD/may be/VB/be wondering/VBG/wondering at/IN/at a/DT/a stage/NN/stage /,/, real/JJ/real computers/NNS/computers probably/RB/probably do/VBP/do not/RB/not look/VB/look like/IN/like this/NNP/this. and/CC/and you/PRP/you are/VBP/are right/RB/right and/CC/and we/PRP/we will/MD/will take/VB/take that/IN/that question/NN/question a/DT/a little/RB/little bit/NN/bit later/NNP/later. i/PRP/i would/MD/would like/VB/like to/TO/to make/VB/make another/DT/another comment/NN/comment over/IN/over here/NNP/here. although/IN/although /,/, the/DT/the very/JJ/very second/JJ/second group/NN/group of/IN/of instructions/NNS/instructions that/WDT/that i/PRP/i am/VBP/am talking/VBG/talking about/IN/about concerns/NNS/concerns go/VBP/go to/TO/to is/VBZ/is this/DT/this does/VBZ/does not/RB/not suggest/NNP/suggest. this/DT/this should/MD/should not/RB/not suggest/VB/suggest to/TO/to you/PRP/you in/IN/in any/DT/any way/NN/way that/IN/that when/WRB/when we/PRP/we design/VBP/design algorithms/NNS/algorithms /,/, we/PRP/we recommend/VBP/recommend use/VBP/use of/IN/of go/NN/go to/TO/to is/VBZ/is far/RB/far from/IN/from that/NNP/that. algorithms/NNS/algorithms as/IN/as i/PRP/i said/VBD/said are/VBP/are intended/VBN/intended to/TO/to be/VB/be read/VBN/read mostly/RB/mostly by/IN/by human/JJ/human beings/NNP/beings. and/CC/and therefore/RB/therefore /,/, structured/VBN/structured programming/NN/programming presenting/NN/presenting the/DT/the algorithms/NNS/algorithms in/IN/in a/DT/a nice/JJ/nice readable/JJ/readable manner/NN/manner is/VBZ/is extremely/RB/extremely important/NNP/important. however/RB/however /,/, when/WRB/when we/PRP/we talk/VBP/talk about/IN/about machines/NNS/machines go/VBP/go to/TO/to is/VBZ/is are/VBP/are a/DT/a very/RB/very convenient/JJ/convenient mechanism/NNP/mechanism. and/CC/and that/IN/that is/VBZ/is the/DT/the reason/NN/reason /,/, why/WRB/why we/PRP/we have/VBP/have go/VBP/go to/TO/to is/VBZ/is in/IN/in our/PRP$/our instruction/NN/instruction set/NNP/set. we/PRP/we will/MD/will soon/RB/soon come/VB/come to/TO/to instructions/NNS/instructions which/WDT/which are/VBP/are more/RBR/more structured/VBN/structured which/WDT/which /,/, but/CC/but that/IN/that will/MD/will be/VB/be built/VBN/built out/RP/out of/IN/of those/DT/those will/MD/will be/VB/be built/VBN/built out/RP/out of/IN/of our/PRP$/our basic/JJ/basic instruction/NN/instruction set/NNP/set. so/RB/so /,/, they/PRP/they will/MD/will take/VB/take several/JJ/several instructions/NNS/instructions and/CC/and several/JJ/several cycles/NNS/cycles of/IN/of execution/NNP/execution. we/PRP/we will/MD/will come/VB/come to/TO/to that/DT/that very/RB/very soon/NNP/soon. there/EX/there is/VBZ/is a/DT/a third/JJ/third group/NN/group of/IN/of instructions/NNS/instructions which/WDT/which is/VBZ/is important/JJ/important and/CC/and which/WDT/which i/PRP/i will/MD/will call/VB/call as/IN/as pointer/JJR/pointer instructions/NNP/instructions. so/RB/so /,/, these/DT/these are/VBP/are simply/RB/simply operations/NNS/operations of/IN/of the/DT/the form/NN/form say/VBP/say b/NN/b equals/NNS/equals star/NN/star c/NN/c /,/, where/WRB/where i/PRP/i am/VBP/am using/VBG/using c/NN/c style/NN/style pointer/NN/pointer notation/NNP/notation. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to think/VB/think of/IN/of c/NN/c as/IN/as a/DT/a pointer/NN/pointer or/CC/or c/NN/c itself/PRP/itself contains/VBZ/contains the/DT/the address/NNP/address. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to fetch/VB/fetch that/IN/that location/NN/location whose/WP$/whose value/NN/value is/VBZ/is contained/VBN/contained that/IN/that location/NN/location whose/WP$/whose address/NN/address is/VBZ/is contained/VBN/contained in/IN/in c/NN/c and/CC/and b/NN/b will/MD/will get/VB/get that/IN/that value/NNP/value. i/PRP/i can/MD/can also/RB/also have/VB/have a/DT/a store/NN/store based/VBN/based on/IN/on pointers/NNP/pointers. so/IN/so say/NN/say for/IN/for example/NN/example /,/, i/PRP/i could/MD/could write/VB/write star/NN/star c/NN/c is/VBZ/is equal/JJ/equal to/TO/to b/NNP/b. and/CC/and all/DT/all b/NN/b ?/./? s/NNS/s and/CC/and both/DT/both of/IN/of these/DT/these will/MD/will also/RB/also be/VB/be executed/VBN/executed in/IN/in a/DT/a single/JJ/single step/NNP/step. all/DT/all of/IN/of these/DT/these algorithmic/JJ/algorithmic actions/NNS/actions will/MD/will take/VB/take just/RB/just one/CD/one step/NNP/step. pointers/NNS/pointers and/CC/and arrays/NNS/arrays are/VBP/are very/RB/very related/VBN/related and/CC/and the/DT/the c/NN/c language/NN/language in/IN/in particular/JJ/particular mixes/NNS/mixes pointers/NNS/pointers and/CC/and arrays/NNS/arrays a/DT/a lot/NNP/lot. and/CC/and in/IN/in fact/NN/fact /,/, our/PRP$/our machine/NN/machine our/PRP$/our random/NN/random access/NN/access machine/NN/machine is/VBZ/is also/RB/also going/VBG/going to/TO/to treat/VB/treat pointers/NNS/pointers and/CC/and arrays/NNS/arrays in/IN/in a/DT/a very/RB/very similar/JJ/similar consistent/NN/consistent manner/NNP/manner. so/RB/so in/IN/in fact/NN/fact /,/, in/IN/in this/DT/this group/NN/group itself/PRP/itself i/PRP/i will/MD/will put/VB/put down/RP/down array/NN/array operations/NNS/operations and/CC/and here/RB/here i/PRP/i mean/VBP/mean one/CD/one dimensional/JJ/dimensional array/NNP/array. so/RB/so for/IN/for example/NN/example /,/, you/PRP/you are/VBP/are allowed/VBN/allowed to/TO/to say/VB/say a/DT/a of/IN/of i/PRP/i equals/VBZ/equals b/NN/b or/CC/or b/NN/b equals/NNS/equals c/VBP/c of/IN/of i/NNP/i. i/PRP/i do/VBP/do not/RB/not mean/VB/mean this/DT/this c/NN/c to/TO/to be/VB/be the/DT/the same/JJ/same as/IN/as this/DT/this c/NNP/c. just/RB/just c/NN/c is/VBZ/is just/RB/just some/DT/some array/NN/array which/WDT/which you/PRP/you have/VBP/have declared/NNP/declared. going/VBG/going back/RB/back to/TO/to arrays/NNS/arrays /,/, let/VB/let me/PRP/me just/RB/just make/VBP/make one/CD/one comment/NN/comment about/IN/about that/NNP/that. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that arrays/NNS/arrays that/WDT/that our/PRP$/our machine/NN/machine will/MD/will contain/VB/contain arrays/NNS/arrays and/CC/and structures/NNS/structures will/MD/will assume/VB/assume the/DT/the usual/JJ/usual c/NN/c like/IN/like representation/NN/representation of/IN/of arrays/NNP/arrays. so/RB/so /,/, if/IN/if an/DT/an array/NN/array has/VBZ/has size/NN/size 100/CD/100 /,/, then/RB/then we/PRP/we will/MD/will assume/VB/assume that/IN/that the/DT/the array/NN/array is/VBZ/is stored/VBN/stored in/IN/in 100/CD/100 contiguous/JJ/contiguous locations/NNS/locations in/IN/in memory/NNP/memory. similarly/RB/similarly /,/, if/IN/if an/DT/an array/NN/array if/IN/if we/PRP/we have/VBP/have a/DT/a structure/NN/structure which/WDT/which consists/NNS/consists of/IN/of three/CD/three components/NNS/components then/RB/then the/DT/the structure/NN/structure will/MD/will be/VB/be stored/VBN/stored in/IN/in three/CD/three contiguous/JJ/contiguous locations/NNS/locations in/IN/in the/DT/the memory/NNP/memory. so/RB/so coming/VBG/coming back/RB/back /,/, we/PRP/we have/VBP/have a/DT/a processor/NN/processor and/CC/and a/DT/a memory/NN/memory a/DT/a processor/NN/processor whose/WP$/whose basic/JJ/basic instruction/NN/instruction set/NN/set i/PRP/i have/VBP/have just/RB/just described/VBN/described /,/, a/DT/a memory/NN/memory which/WDT/which consists/NNS/consists of/IN/of a/DT/a location/NNP/location. i/PRP/i have/VBP/have not/RB/not told/VBN/told you/PRP/you what/WP/what a/DT/a location/NN/location is/VBZ/is really/NNP/really. a/DT/a location/NN/location simply/RB/simply is/VBZ/is a/DT/a collection/NN/collection of/IN/of bits/NNP/bits. it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a fixed/VBN/fixed number/NN/number of/IN/of bits/NNP/bits. say/VBP/say does/VBZ/does not/RB/not really/RB/really matter/JJR/matter what/WP/what number/NN/number it/PRP/it is/VBZ/is /,/, but/CC/but it/PRP/it has/VBZ/has to/TO/to be/VB/be fixed/VBN/fixed once/-NONE-/once. and/CC/and for/IN/for all/DT/all say/NN/say it/PRP/it could/MD/could be/VB/be a/DT/a number/NN/number like/IN/like 64/CD/64 which/WDT/which is/VBZ/is the/DT/the number/NN/number which/WDT/which is/VBZ/is used/VBN/used in/IN/in most/JJS/most modern/JJ/modern computers/NNP/computers. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of a/DT/a word/NN/word and/CC/and a/DT/a notion/NN/notion of/IN/of a/DT/a word/NN/word really/RB/really goes/VBZ/goes along/IN/along with/IN/with this/DT/this notion/NN/notion of/IN/of a/DT/a location/NNP/location. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 38/CD/38 /CD/) so/RB/so /,/, we/PRP/we looked/VBD/looked at/IN/at the/DT/the basic/JJ/basic instruction/NN/instruction set/NN/set and/CC/and the/DT/the basic/JJ/basic algorithmic/JJ/algorithmic actions/NNS/actions that/WDT/that are/VBP/are possible/JJ/possible /,/, what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do next/JJ/next is/VBZ/is think/NN/think about/IN/about more/JJR/more complex/JJ/complex algorithmic/JJ/algorithmic actions/NNS/actions more/RBR/more complex/JJ/complex algorithmic/JJ/algorithmic statements/NNP/statements. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that for/IN/for example/NN/example /,/, we/PRP/we allow/VBP/allow these/DT/these instructions/NNS/instructions /,/, but/CC/but naturally/RB/naturally these/DT/these should/MD/should suggest/VB/suggest to/TO/to you/PRP/you some/DT/some more/RBR/more complex/JJ/complex instructions/NNS/instructions or/CC/or statements/NNS/statements that/IN/that you/PRP/you would/MD/would like/VB/like to/TO/to have/NNP/have. for/IN/for example/NN/example /,/, we/PRP/we would/MD/would like/VB/like to/TO/to write/VB/write down/RP/down a/DT/a statement/NN/statement which/WDT/which looks/NNS/looks like/IN/like this/NNP/this. so/RB/so /,/, say/VB/say a/DT/a equals/NNS/equals b/NN/b plus/CC/plus c/NN/c times/NNS/times d/VBP/d minus/NN/minus f/NN/f /,/, how/WRB/how long/JJ/long does/VBZ/does this/DT/this take/NNP/take. well/RB/well our/PRP$/our rule/NN/rule is/VBZ/is very/RB/very simple/NNP/simple. we/PRP/we will/MD/will have/VB/have to/TO/to break/VB/break this/DT/this down/NN/down into/IN/into out/IN/out elementary/JJ/elementary instructions/NNP/instructions. so/RB/so here/RB/here /,/, we/PRP/we have/VBP/have three/CD/three operations/NNS/operations and/CC/and therefore/RB/therefore /,/, this/DT/this will/MD/will take/VB/take three/CD/three elementary/JJ/elementary steps/NNP/steps. the/DT/the three/CD/three elementary/JJ/elementary instructions/NNS/instructions and/CC/and therefore/RB/therefore /,/, this/DT/this will/MD/will take/VB/take three/CD/three steps/NNP/steps. so/RB/so /,/, we/PRP/we will/MD/will allow/VB/allow use/NN/use of/IN/of such/JJ/such statements/NNS/statements in/IN/in our/PRP$/our algorithm/NNP/algorithm. but/CC/but /,/, when/WRB/when we/PRP/we count/VBP/count the/DT/the time/NN/time we/PRP/we will/MD/will have/VB/have to/TO/to count/VB/count 3/CD/3. we/PRP/we will/MD/will also/RB/also want/VB/want to/TO/to use/VB/use arrays/NNS/arrays in/IN/in such/JJ/such expressions/NNP/expressions. so/IN/so for/IN/for example/NN/example /,/, we/PRP/we might/MD/might want/VB/want to/TO/to say/VB/say a/DT/a of/IN/of i/PRP/i equals/VBZ/equals b/NN/b of/IN/of i/PRP/i plus/VBZ/plus c/JJ/c of/IN/of i/NNP/i. again/RB/again /,/, we/PRP/we have/VBP/have to/TO/to see/VB/see /,/, how/WRB/how this/DT/this statement/NN/statement is/VBZ/is going/VBG/going to/TO/to be/VB/be represented/VBN/represented in/IN/in our/PRP$/our basic/JJ/basic instruction/NN/instruction set/NNP/set. so/RB/so /,/, here/RB/here is/VBZ/is how/WRB/how this/DT/this could/MD/could be/VB/be represented/NNP/represented. so/RB/so /,/, first/JJ/first we/PRP/we need/VBP/need to/TO/to fetch/VB/fetch the/DT/the value/NN/value of/IN/of b/NN/b /,/, the/DT/the element/NN/element of/IN/of b/NNP/b. so/RB/so /,/, this/DT/this could/MD/could get/VB/get translated/VBN/translated to/TO/to say/VB/say something/NN/something like/IN/like x/NN/x equals/NNS/equals b/VBP/b of/IN/of i/NNP/i. and/CC/and this/DT/this /,/, itself/PRP/itself is/VBZ/is a/DT/a primitive/JJ/primitive statement/NN/statement that/IN/that we/PRP/we allowed/VBD/allowed and/CC/and we/PRP/we said/VBD/said this/DT/this takes/VBZ/takes one/CD/one step/NNP/step. then/RB/then /,/, we/PRP/we can/MD/can similarly/RB/similarly fetch/VB/fetch c/NN/c equals/NNS/equals sorry/VBP/sorry say/VBP/say y/NN/y equals/NNS/equals c/VBP/c of/IN/of y/NNP/y. and/CC/and this/DT/this can/MD/can also/RB/also again/RB/again be/VB/be done/VBN/done in/IN/in a/DT/a single/JJ/single step/NN/step /,/, because/IN/because this/DT/this is/VBZ/is our/PRP$/our basic/JJ/basic instruction/NN/instruction itself/NNP/itself. then/RB/then /,/, we/PRP/we could/MD/could compute/VB/compute z/NN/z equals/NNS/equals x/VBP/x plus/RB/plus y/NNP/y. so/RB/so now/RB/now /,/, we/PRP/we have/VBP/have ahead/RB/ahead of/IN/of the/DT/the two/CD/two values/NNS/values one/CD/one of/IN/of b/NN/b of/IN/of i/PRP/i and/CC/and c/NN/c of/IN/of j/NN/j and/CC/and the/DT/the second/JJ/second of/IN/of c/NN/c of/IN/of j/NNP/j. and/CC/and we/PRP/we have/VBP/have computed/VBN/computed their/PRP$/their sum/NN/sum and/CC/and all/DT/all that/DT/that remains/VBZ/remains is/VBZ/is that/IN/that this/DT/this sum/NN/sum needs/VBZ/needs to/TO/to be/VB/be stored/VBN/stored into/IN/into a/DT/a of/IN/of i/NNP/i. so/RB/so now/RB/now /,/, we/PRP/we can/MD/can write/VB/write a/DT/a of/IN/of i/PRP/i equals/VBZ/equals z/NNP/z. so/RB/so /,/, this/DT/this simple/NN/simple statement/NN/statement well/RB/well simple/JJ/simple which/WDT/which we/PRP/we wrote/VBD/wrote down/RP/down very/RB/very simply/RB/simply in/IN/in that/DT/that sense/NNP/sense. really/RB/really has/VBZ/has to/TO/to be/VB/be translated/VBN/translated into/IN/into four/CD/four machine/NN/machine instructions/NNS/instructions so/RB/so to/TO/to say/NNP/say. and/CC/and therefore/RB/therefore /,/, this/DT/this entire/JJ/entire statement/NN/statement will/MD/will take/VB/take four/CD/four steps/NNS/steps during/IN/during execution/NNP/execution. we/PRP/we could/MD/could also/RB/also have/VB/have multi/NN/multi dimensional/JJ/dimensional arrays/NNP/arrays. so/RB/so for/IN/for example/NN/example /,/, we/PRP/we could/MD/could have/VB/have an/DT/an instruction/NN/instruction which/WDT/which looks/NNS/looks like/IN/like c/NN/c equals/NNS/equals a/DT/a of/IN/of i/PRP/i comma/VBP/comma j/NNP/j. so/RB/so here/RB/here /,/, we/PRP/we will/MD/will have/VB/have to/TO/to decide/VB/decide /,/, how/WRB/how two/CD/two dimensional/JJ/dimensional arrays/NNS/arrays are/VBP/are stored/NNP/stored. but/CC/but /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that two/CD/two dimensional/JJ/dimensional arrays/NNS/arrays are/VBP/are built/VBN/built on/IN/on top/JJ/top of/IN/of one/CD/one dimensional/JJ/dimensional arrays/NNP/arrays. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 19/CD/19 /CD/) /./. so/RB/so for/IN/for example/NN/example /,/, if/IN/if we/PRP/we have/VBP/have a/DT/a two/CD/two dimensional/JJ/dimensional array/NN/array which/WDT/which looks/NNS/looks like/IN/like this/NNP/this. so/RB/so /,/, say/VB/say this/DT/this is/VBZ/is an/DT/an array/NN/array a/DT/a which/WDT/which has/VBZ/has two/CD/two rows/NNS/rows and/CC/and four/CD/four columns/NNP/columns. say/VBP/say here/RB/here at/IN/at two/CD/two rows/NNS/rows and/CC/and four/CD/four columns/NNP/columns. let/NN/let us/PRP/us say/VBP/say it/PRP/it stores/VBZ/stores elements/NNS/elements a/DT/a b/NN/b c/NN/c d/NNP/d. in/IN/in the/DT/the first/JJ/first row/NN/row /,/, e/NN/e f/NN/f g/NN/g h/NN/h in/IN/in the/DT/the second/JJ/second row/NNP/row. let/NN/let us/PRP/us say/VBP/say that/IN/that the/DT/the array/NN/array is/VBZ/is indexed/VBN/indexed c/NN/c style/NNP/style. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is row/NN/row index/NN/index 0/-NONE-/0 /,/, row/NN/row index/NN/index 1/CD/1. this/DT/this is/VBZ/is column/NN/column index/NN/index 0/-NONE-/0 column/NN/column index/NN/index 1/CD/1 /,/, 2/CD/2 and/CC/and 3/CD/3. now/RB/now /,/, on/IN/on our/PRP$/our machine/NN/machine on/IN/on our/PRP$/our ram/NN/ram /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to store/VB/store this/DT/this using/NN/using one/CD/one dimensional/JJ/dimensional array/NNP/array. we/PRP/we are/VBP/are essentially/RB/essentially going/VBG/going to/TO/to simulate/VB/simulate it/PRP/it using/VBG/using the/DT/the one/CD/one dimensional/JJ/dimensional array/NNP/array. but/CC/but of/IN/of course/NN/course /,/, the/DT/the array/NN/array must/MD/must have/VB/have the/DT/the same/JJ/same number/NN/number of/IN/of elements/NNP/elements. and/CC/and so/RB/so that/IN/that is/VBZ/is 8/CD/8 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 7/CD/7 8/CD/8 and/CC/and these/DT/these elements/NNS/elements will/MD/will have/VB/have to/TO/to appear/VB/appear in/IN/in this/DT/this one/NN/one dimensional/JJ/dimensional array/NN/array somehow/NNP/somehow. let/NN/let us/PRP/us say/VBP/say they/PRP/they are/VBP/are stored/VBN/stored row/NN/row wise/NNP/wise. many/JJ/many possibilities/NNS/possibilities are/VBP/are there/RB/there /,/, but/CC/but we/PRP/we are/VBP/are just/RB/just picking/VBG/picking one/NNP/one. so/RB/so /,/, a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e f/NN/f g/NN/g h/NN/h /,/, so/RB/so essentially/RB/essentially every/DT/every time/NN/time you/PRP/you want/VBP/want to/TO/to access/NN/access this/DT/this two/CD/two dimensional/JJ/dimensional array/NN/array /,/, we/PRP/we will/MD/will be/VB/be accessing/VBG/accessing some/DT/some element/NN/element of/IN/of this/DT/this one/CD/one dimensional/JJ/dimensional array/NNP/array. and/CC/and by/IN/by the/DT/the way/NN/way remember/NN/remember that/WDT/that the/DT/the index/NN/index set/VBD/set of/IN/of this/DT/this is/VBZ/is 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 /,/, how/WRB/how do/VBP/do we/PRP/we know/VB/know /,/, which/WDT/which element/NN/element of/IN/of this/DT/this array/NN/array we/PRP/we access/NNP/access. in/IN/in order/NN/order to/TO/to access/NN/access a/DT/a particular/JJ/particular element/NN/element of/IN/of array/NN/array of/IN/of this/DT/this array/NN/array well/RB/well there/RB/there is/VBZ/is a/DT/a very/RB/very simple/JJ/simple correspondence/NNP/correspondence. so/RB/so /,/, a/DT/a of/IN/of i/PRP/i j/VBP/j if/IN/if you/PRP/you want/VBP/want to/TO/to access/NN/access the/DT/the i/NN/i /,/, jth/NN/jth element/NNP/element. so/RB/so /,/, row/NN/row i/PRP/i column/VBP/column j/NN/j /,/, then/RB/then that/IN/that corresponds/NNS/corresponds to/TO/to an/DT/an element/NN/element of/IN/of a/DT/a prime/JJ/prime which/WDT/which element/NN/element well/RB/well it/PRP/it is/VBZ/is simply/RB/simply i/PRP/i times/VBZ/times m/NN/m plus/NN/plus j/NN/j where/WRB/where m/NN/m is/VBZ/is the/DT/the number/NN/number of/IN/of columns/NNS/columns in/IN/in a/DT/a which/WDT/which in/IN/in this/DT/this case/NN/case is/VBZ/is 4/CD/4. so/RB/so /,/, wherever/IN/wherever we/PRP/we see/VBP/see a/DT/a i/PRP/i j/VBP/j we/PRP/we really/RB/really should/MD/should be/VB/be reading/VBG/reading it/PRP/it as/IN/as this/DT/this as/IN/as far/RB/far as/IN/as the/DT/the problem/NN/problem of/IN/of accounting/VBG/accounting how/WRB/how much/JJ/much time/NN/time it/PRP/it takes/NNP/takes. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 54/CD/54 /CD/) so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do that/NNP/that. so/RB/so /,/, c/NN/c of/IN/of a/DT/a i/NN/i j/NN/j well/RB/well we/PRP/we should/MD/should really/RB/really be/VB/be thinking/VBG/thinking of/IN/of as/RB/as c/JJ/c equals/NNS/equals a/DT/a prime/JJ/prime of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 times/NNS/times m/VBP/m plus/RB/plus j/NNP/j. but/CC/but once/RB/once /,/, we/PRP/we think/VBP/think of/IN/of this/DT/this statement/NN/statement in/IN/in this/DT/this manner/NNP/manner. then/RB/then /,/, estimating/VBG/estimating the/DT/the time/NN/time taken/VBN/taken for/IN/for it/PRP/it is/VBZ/is fairly/RB/fairly straight/JJ/straight forward/NN/forward because/IN/because now/RB/now we/PRP/we know/VBP/know that/IN/that we/PRP/we have/VBP/have to/TO/to do/VB/do one/CD/one subtraction/NNP/subtraction. we/PRP/we have/VBP/have to/TO/to subtract/VB/subtract 1/CD/1 from/IN/from i/NNP/i. then/RB/then /,/, we/PRP/we have/VBP/have to/TO/to do/VB/do one/CD/one multiplication/NN/multiplication in/IN/in the/DT/the multiplication/NN/multiplication with/IN/with m/NNP/m. then/RB/then /,/, we/PRP/we have/VBP/have to/TO/to do/VB/do one/CD/one addition/NN/addition and/CC/and then/RB/then we/PRP/we have/VBP/have to/TO/to do/VB/do a/DT/a plain/NN/plain indirect/NN/indirect axis/NNP/axis. so/RB/so /,/, this/DT/this whole/JJ/whole thing/NN/thing will/MD/will take/VB/take 4/CD/4 steps/NNP/steps. let/NN/let us/PRP/us /,/, now/RB/now turn/VB/turn to/TO/to some/DT/some structured/VBN/structured computing/NN/computing statements/NNP/statements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 54/CD/54 /CD/) let/NN/let us/PRP/us take/VBP/take a/DT/a loop/NNP/loop. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we have/VBP/have for/IN/for loop/NNP/loop. for/IN/for i/PRP/i equals/VBZ/equals 1/CD/1 to/TO/to n/VB/n /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we do/VBP/do something/NN/something like/IN/like c/NN/c of/IN/of i/PRP/i equals/VBZ/equals a/DT/a of/IN/of i/PRP/i plus/VBZ/plus b/NN/b of/IN/of i/NNP/i. so/RB/so as/IN/as i/PRP/i said/VBD/said /,/, we/PRP/we have/VBP/have to/TO/to translate/VB/translate these/DT/these instructions/NNS/instructions into/IN/into our/PRP$/our basic/JJ/basic constructions/NNS/constructions and/CC/and here/RB/here is/VBZ/is a/DT/a possible/JJ/possible translation/NNP/translation. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have to/TO/to start/VB/start off/RP/off by/IN/by initializing/NNP/initializing. so/RB/so /,/, we/PRP/we will/MD/will write/VB/write i/PRP/i equal/JJ/equal 1/CD/1. that/WDT/that is/VBZ/is how/WRB/how the/DT/the initialization/NN/initialization step/NN/step will/MD/will be/NNP/be. then/RB/then /,/, we/PRP/we have/VBP/have to/TO/to have/VB/have the/DT/the loop/NN/loop test/NNP/test. so/RB/so /,/, we/PRP/we will/MD/will write/VB/write this/DT/this as/IN/as if/IN/if i/PRP/i greater/JJR/greater than/IN/than 1/CD/1 greater/JJR/greater than/IN/than n/NN/n /,/, then/RB/then go/VB/go to/TO/to end/VB/end of/IN/of loop/NNP/loop. then/RB/then /,/, we/PRP/we will/MD/will write/VB/write something/NN/something like/IN/like fetching/NN/fetching the/DT/the ith/NN/ith element/NN/element of/IN/of a/NNP/a. so/RB/so /,/, we/PRP/we write/VBP/write something/NN/something like/IN/like x/NN/x equals/NNS/equals a/DT/a of/IN/of i/NNP/i. then/RB/then /,/, we/PRP/we will/MD/will write/VB/write y/NN/y equals/NNS/equals b/VBP/b of/IN/of i/PRP/i and/CC/and then/RB/then we/PRP/we will/MD/will write/VB/write say/VB/say z/NN/z equals/NNS/equals x/VBP/x plus/RB/plus y/JJ/y in/IN/in the/DT/the manner/NN/manner that/IN/that we/PRP/we just/RB/just discussed/VBD/discussed and/CC/and now/RB/now we/PRP/we have/VBP/have to/TO/to store/VB/store it/PRP/it back/NNP/back. so/RB/so /,/, we/PRP/we will/MD/will write/VB/write c/NN/c of/IN/of i/PRP/i equals/VBZ/equals z/NNP/z. at/IN/at this/DT/this point/NN/point we/PRP/we have/VBP/have to/TO/to step/VB/step through/RP/through the/DT/the loop/NNP/loop. so/RB/so /,/, we/PRP/we will/MD/will write/VB/write i/PRP/i equal/JJ/equal i/PRP/i plus/RB/plus 1/CD/1. and/CC/and now/RB/now we/PRP/we will/MD/will just/RB/just go/VB/go back/NNP/back. so/RB/so /,/, we/PRP/we will/MD/will go/VB/go to/TO/to let/VB/let me/PRP/me number/NN/number these/DT/these statements/NNS/statements 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 7/CD/7 8/CD/8. and/CC/and so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to go/VB/go back/RB/back to/TO/to 2/CD/2 and/CC/and this/DT/this should/MD/should jump/VB/jump out/RP/out of/IN/of loop/NNP/loop. so/RB/so /,/, this/DT/this has/VBZ/has to/TO/to go/VB/go to/TO/to 9/CD/9. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a translation/NN/translation of/IN/of this/NNP/this. so/RB/so /,/, although/IN/although in/IN/in our/PRP$/our algorithms/NNS/algorithms /,/, we/PRP/we will/MD/will write/VB/write this/DT/this for/IN/for statement/NN/statement and/CC/and just/RB/just for/IN/for completeness/NN/completeness may/MD/may be/VB/be we/PRP/we will/MD/will have/VB/have an/DT/an end/NN/end for/IN/for as/RB/as well/NNP/well. but/CC/but /,/, as/IN/as far/RB/far as/IN/as the/DT/the purpose/NN/purpose of/IN/of accounting/VBG/accounting is/VBZ/is concerned/VBN/concerned /,/, this/DT/this is/VBZ/is the/DT/the time/NN/time /,/, this/DT/this is/VBZ/is the/DT/the code/NN/code that/IN/that we/PRP/we should/MD/should be/VB/be considering/NNP/considering. so/RB/so /,/, when/WRB/when we/PRP/we want/VBP/want to/TO/to analyze/VB/analyze the/DT/the time/NN/time taken/VBN/taken /,/, this/DT/this is/VBZ/is the/DT/the code/NN/code that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be of/IN/of interest/NNP/interest. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 44/CD/44 /CD/) so/RB/so /,/, let/VB/let us/PRP/us try/NN/try and/CC/and analyze/NN/analyze this/DT/this code/NNP/code. so/RB/so /,/, the/DT/the analysis/NN/analysis is/VBZ/is going/VBG/going to/TO/to be/VB/be reasonably/RB/reasonably straight/JJ/straight forward/NNP/forward. we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to go/VB/go over/IN/over each/DT/each statement/NN/statement and/CC/and we/PRP/we have/VBP/have to/TO/to see/VB/see how/WRB/how many/JJ/many times/NNS/times it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be executed/NNP/executed. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try statement/NN/statement number/NN/number /,/, how/WRB/how many/JJ/many times/NNS/times will/MD/will statement/VB/statement number/NN/number one/CD/one we/PRP/we executed/NNP/executed. well/RB/well this/DT/this will/MD/will just/RB/just be/VB/be executed/VBN/executed 1/CD/1 time/NNP/time. this/DT/this part/NN/part a/DT/a of/IN/of i/PRP/i to/TO/to this/DT/this part/NN/part is/VBZ/is what/WP/what might/MD/might be/VB/be thought/VBN/thought of/IN/of as/RB/as the/DT/the body/NN/body of/IN/of the/DT/the loop/NNP/loop. this/DT/this will/MD/will be/VB/be executed/VBN/executed n/NN/n times/NNP/times. this/DT/this loop/NN/loop counting/VBG/counting and/CC/and this/DT/this jump/NN/jump back/RB/back will/MD/will also/RB/also be/VB/be executed/VBN/executed n/NN/n times/NNP/times. and/CC/and this/DT/this loop/NN/loop test/NN/test let/NN/let me/PRP/me write/VBP/write that/IN/that down/IN/down here/NNP/here. this/DT/this will/MD/will be/VB/be executed/VBN/executed once/RB/once for/IN/for each/DT/each iteration/NNP/iteration. but/CC/but /,/, it/PRP/it will/MD/will also/RB/also be/VB/be executed/VBN/executed one/CD/one more/RBR/more time/NNP/time. because/IN/because /,/, that/IN/that is/VBZ/is when/WRB/when the/DT/the machine/NN/machine is/VBZ/is going/VBG/going to/TO/to determine/VB/determine that/IN/that we/PRP/we need/VBP/need to/TO/to exit/NNP/exit. so/RB/so in/IN/in fact/NN/fact /,/, this/DT/this statement/NN/statement will/MD/will be/VB/be executed/VBN/executed n/NN/n plus/RB/plus 1/CD/1 time/NNP/time. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of steps/NNS/steps taken/VBN/taken for/IN/for all/PDT/all of/IN/of this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be b/NN/b times/NNS/times n/VBP/n /,/, where/WRB/where b/NN/b is/VBZ/is the/DT/the number/NN/number of/IN/of instructions/NNS/instructions in/IN/in the/DT/the body/NNP/body. plus/CC/plus these/DT/these 2/CD/2 steps/NNS/steps plus/CC/plus these/DT/these 2/CD/2 n/NN/n steps/NNS/steps plus/CC/plus 2/CD/2 n/NN/n plus/CC/plus these/DT/these n/NN/n plus/CC/plus 1/CD/1 plus/NNS/plus this/DT/this extra/JJ/extra 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be nothing/NN/nothing but/CC/but 2/CD/2 plus/NNS/plus n/IN/n times/NNS/times b/VBP/b plus/RB/plus 3/CD/3. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our final/JJ/final answer/NNP/answer. let/NN/let me/PRP/me write/VBP/write that/IN/that down/IN/down in/IN/in big/JJ/big letters/NNS/letters over/IN/over here/RB/here 2/CD/2 plus/NNS/plus n/IN/n times/NNS/times b/VBP/b plus/RB/plus 3/CD/3. this/DT/this is/VBZ/is going/VBG/going to/TO/to the/DT/the number/NN/number of/IN/of steps/NNS/steps needed/VBN/needed to/TO/to execute/VB/execute this/DT/this loop/NNP/loop. of/IN/of course/NN/course for/IN/for this/DT/this loop/NN/loop b/NN/b has/VBZ/has the/DT/the value/NN/value 4/CD/4 and/CC/and therefore/RB/therefore /,/, that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 48/CD/48 /CD/) we/PRP/we will/MD/will also/RB/also allow/VB/allow functions/NNS/functions calls/NNS/calls in/IN/in our/PRP$/our programs/NNP/programs. and/CC/and when/WRB/when we/PRP/we will/MD/will assume/VB/assume for/IN/for simplicity/NN/simplicity that/WDT/that the/DT/the number/NN/number of/IN/of steps/NNS/steps is/VBZ/is needed/VBN/needed for/IN/for the/DT/the function/NN/function calls/VBZ/calls are/VBP/are going/VBG/going to/TO/to be/VB/be the/DT/the number/NN/number of/IN/of arguments/NNS/arguments passed/NNP/passed. so/RB/so /,/, time/NN/time equal/JJ/equal to/TO/to number/NN/number of/IN/of arguments/NNP/arguments. of/IN/of course/NN/course i/PRP/i should/MD/should say/VB/say something/NN/something about/IN/about the/DT/the syntax/NN/syntax of/IN/of the/DT/the function/NN/function calls/NNP/calls. and/CC/and the/DT/the syntax/NN/syntax is/VBZ/is going/VBG/going to/TO/to be/VB/be pretty/RB/pretty much/RB/much like/IN/like the/DT/the c/NN/c language/NN/language /,/, what/WP/what i/PRP/i mean/VBP/mean by/IN/by this/DT/this /,/, is/VBZ/is that/IN/that arrays/NNS/arrays and/CC/and structures/NNS/structures will/MD/will be/VB/be passed/VBN/passed by/IN/by reference/NN/reference which/WDT/which means/VBZ/means that/DT/that you/PRP/you can/MD/can modify/VB/modify them/PRP/them in/IN/in the/DT/the called/VBN/called procedure/NNP/procedure. and/CC/and the/DT/the modifications/NNS/modifications will/MD/will be/VB/be seen/VBN/seen by/IN/by the/DT/the calling/VBG/calling procedure/NN/procedure /,/, whereas/VBZ/whereas variables/NNS/variables will/MD/will be/VB/be passed/VBN/passed by/IN/by value/NNP/value. so/RB/so /,/, this/DT/this basically/RB/basically concludes/VBZ/concludes the/DT/the description/NN/description of/IN/of our/PRP$/our random/NN/random access/NN/access machine/NNP/machine. there/EX/there are/VBP/are a/DT/a number/NN/number of/IN/of issues/NNS/issues that/WDT/that we/PRP/we need/VBP/need to/TO/to consider/VB/consider and/CC/and i/PRP/i will/MD/will mention/VB/mention some/DT/some of/IN/of them/NNP/them. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 17/CD/17 /CD/) now/RB/now and/CC/and these/DT/these have/VBP/have to/TO/to do/VB/do with/IN/with how/WRB/how the/DT/the how/WRB/how this/DT/this machine/NN/machine relates/VBZ/relates to/TO/to reality/NN/reality are/VBP/are real/JJ/real computers/NNS/computers like/IN/like this/DT/this or/CC/or are/VBP/are they/PRP/they different/NNP/different. then/RB/then /,/, we/PRP/we have/VBP/have to/TO/to ask/VB/ask questions/NNS/questions about/IN/about we/PRP/we will/MD/will want/VB/want to/TO/to take/VB/take algorithms/NNS/algorithms and/CC/and see/VB/see their/PRP$/their complete/JJ/complete analysis/NNP/analysis. and/CC/and finally/RB/finally /,/, we/PRP/we will/MD/will want/VB/want to/TO/to say/VB/say what/WP/what part/NN/part of/IN/of our/PRP$/our analysis/NN/analysis is/VBZ/is really/RB/really interesting/JJ/interesting /,/, when/WRB/when we/PRP/we consider/VBP/consider real/JJ/real computers/NNS/computers /,/, what/WP/what features/NNS/features of/IN/of our/PRP$/our analysis/NN/analysis are/VBP/are really/RB/really relevant/JJ/relevant for/IN/for real/JJ/real computers/NNP/computers. so/RB/so this/DT/this /,/, we/PRP/we will/MD/will do/VB/do in/IN/in the/DT/the next/JJ/next lectures/NNP/lectures. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institution/NN/institution of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 3/CD/3 algorithm/NN/algorithm analysis/NN/analysis framework/NN/framework ?/./? ii/NN/ii welcome/NN/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. this/DT/this is/VBZ/is the/DT/the second/JJ/second lecture/NN/lecture on/IN/on the/DT/the algorithm/NN/algorithm analysis/NN/analysis framework/NN/framework that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be developing/VBG/developing algorithm/NN/algorithm analysis/NN/analysis framework/NN/framework part/NN/part two/NNP/two. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 00/CD/00 /:/: 51/CD/51 /CD/) let/NN/let me/PRP/me quickly/RB/quickly remind/VBP/remind you/PRP/you /,/, what/WP/what we/PRP/we did/VBD/did last/JJ/last time/NNP/time. so/IN/so last/JJ/last time/NN/time /,/, we/PRP/we defined/VBD/defined an/DT/an abstract/NN/abstract computer/NN/computer model/NN/model called/VBN/called ram/NN/ram or/CC/or the/DT/the random/NN/random access/NN/access machine/NNP/machine. this/DT/this was/VBD/was the/DT/the model/NN/model which/WDT/which we/PRP/we said/VBD/said we/PRP/we were/VBD/were going/VBG/going to/TO/to be/VB/be using/VBG/using throughout/IN/throughout this/DT/this course/NNP/course. somewhat/WDT/somewhat implicitly/RB/implicitly /,/, but/CC/but at/IN/at the/DT/the beginning/NN/beginning /,/, we/PRP/we want/VBP/want to/TO/to make/VB/make it/PRP/it fairly/RB/fairly we/PRP/we want/VBP/want to/TO/to discuss/VB/discuss it/PRP/it in/IN/in fair/JJ/fair detail/NN/detail ;/:/; so/RB/so that/IN/that it/PRP/it is/VBZ/is well/RB/well understood/NNP/understood. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that this/DT/this model/NN/model consisted/VBD/consisted of/IN/of a/DT/a processor/NN/processor and/CC/and a/DT/a memory/NNP/memory. and/CC/and we/PRP/we said/VBD/said that/IN/that the/DT/the data/NNS/data would/MD/would be/VB/be stored/VBN/stored in/IN/in memory/NNP/memory. the/DT/the memory/NN/memory would/MD/would include/VB/include would/MD/would be/VB/be able/JJ/able to/TO/to contain/VB/contain things/NNS/things like/IN/like variables/NNS/variables structures/NNS/structures /,/, arrays/NNS/arrays the/DT/the usual/JJ/usual /,/, data/NNS/data structures/NNP/structures. and/CC/and there/EX/there would/MD/would a/DT/a separate/JJ/separate program/NN/program memory/NNP/memory. then/RB/then /,/, we/PRP/we said/VBD/said that/IN/that the/DT/the instruction/NN/instruction set/VBD/set would/MD/would be/VB/be reasonably/RB/reasonably simple/NNP/simple. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just mention/NN/mention which/WDT/which instructions/NNS/instructions are/VBP/are important/NNP/important. so/RB/so /,/, basically/RB/basically the/DT/the instruction/NN/instruction set/VBD/set would/MD/would be/VB/be performing/VBG/performing operations/NNS/operations of/IN/of the/DT/the form/NN/form a/DT/a equals/NNS/equals operator/NN/operator c/NNP/c. so/RB/so /,/, this/DT/this would/MD/would be/VB/be the/DT/the first/JJ/first kind/NN/kind of/IN/of instructions/NNS/instructions /,/, where/WRB/where a/DT/a b/NN/b c/NN/c are/VBP/are simple/JJ/simple variables/NNP/variables. this/DT/this is/VBZ/is one/CD/one kind/NN/kind of/IN/of instruction/NNP/instruction. then/RB/then /,/, we/PRP/we would/MD/would have/VB/have control/NN/control instructions/NNS/instructions or/CC/or jump/VB/jump instructions/NNS/instructions or/CC/or control/NN/control transfer/NN/transfer instructions/NNS/instructions rather/NNP/rather. so/RB/so /,/, jump/VB/jump instructions/NNS/instructions and/CC/and conditional/JJ/conditional jumps/NNP/jumps. and/CC/and then/RB/then /,/, we/PRP/we would/MD/would have/VB/have array/NN/array operations/NNS/operations or/CC/or array/VBP/array or/CC/or pointer/JJR/pointer operations/NNP/operations. so/RB/so /,/, these/DT/these would/MD/would be/VB/be instructions/NNS/instructions of/IN/of the/DT/the form/NN/form say/VBP/say a/DT/a equals/NNS/equals star/NN/star b/NN/b where/WRB/where we/PRP/we are/VBP/are using/VBG/using the/DT/the c/NN/c like/IN/like syntax/NN/syntax or/CC/or it/PRP/it could/MD/could also/RB/also be/VB/be something/NN/something like/IN/like a/DT/a equals/NNS/equals b/NN/b index/NN/index i/NNP/i. so/RB/so /,/, this/DT/this instruction/NN/instruction is/VBZ/is sort/NN/sort of/IN/of a/DT/a standard/JJ/standard array/NN/array axis/NNP/axis. and/CC/and we/PRP/we said/VBD/said last/JJ/last time/NN/time that/IN/that these/DT/these instructions/NNS/instructions would/MD/would be/VB/be single/JJ/single would/MD/would take/VB/take a/DT/a single/JJ/single step/NN/step would/MD/would take/VB/take a/DT/a single/JJ/single cycle/NNP/cycle. so/RB/so /,/, the/DT/the idea/NN/idea was/VBD/was that/IN/that we/PRP/we were/VBD/were going/VBG/going to/TO/to design/VB/design algorithms/NNP/algorithms. and/CC/and then/RB/then /,/, you/PRP/you would/MD/would reason/VB/reason about/IN/about what/WP/what instructions/NNS/instructions those/DT/those algorithms/NNS/algorithms would/MD/would need/VB/need to/TO/to execute/NNP/execute. and/CC/and then/RB/then /,/, we/PRP/we would/MD/would estimate/VB/estimate the/DT/the total/JJ/total time/NN/time taken/NNP/taken. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 50/CD/50 /CD/) the/DT/the goal/NN/goal for/IN/for today/NN/today is/VBZ/is to/TO/to do/VB/do the/DT/the following/NNP/following. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, the/DT/the outline/NN/outline for/IN/for today/NNP/today. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start by/IN/by comparing/NN/comparing our/PRP$/our ram/NN/ram model/NN/model with/IN/with real/JJ/real computers/NNP/computers. actually/RB/actually /,/, it/PRP/it is/VBZ/is not/RB/not just/RB/just real/JJ/real computers/NNS/computers /,/, but/CC/but also/RB/also real/JJ/real compilers/NNS/compilers /,/, because/IN/because compilers/NNS/compilers also/RB/also will/MD/will make/VB/make a/DT/a difference/NNP/difference. in/IN/in this/DT/this comparison/NN/comparison will/MD/will see/VB/see what/WP/what parts/NNS/parts of/IN/of a/DT/a ram/NN/ram model/NN/model are/VBP/are of/IN/of interest/NN/interest and/CC/and which/WDT/which parts/NNS/parts or/CC/or which/WDT/which details/NNS/details is/VBZ/is really/RB/really something/NN/something that/IN/that we/PRP/we need/VBP/need to/TO/to define/VB/define for/IN/for the/DT/the sake/NN/sake of/IN/of completeness/NNP/completeness. but/CC/but /,/, which/WDT/which really/RB/really should/MD/should not/RB/not be/VB/be taken/VBN/taken too/RB/too seriously/NNP/seriously. then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define our/PRP$/our general/JJ/general strategy/NN/strategy for/IN/for algorithm/NN/algorithm analysis/NNP/analysis. and/CC/and then/RB/then we/PRP/we will/MD/will take/VB/take some/DT/some examples/NNP/examples. and/CC/and after/IN/after that/DT/that we/PRP/we will/MD/will have/VB/have summary/JJ/summary as/IN/as usual/NNP/usual. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 25/CD/25 /CD/) /./. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now come/VBP/come back/RB/back to/TO/to our/PRP$/our random/NN/random access/NN/access machine/NN/machine and/CC/and try/NN/try to/TO/to find/VB/find out/RP/out in/IN/in what/WP/what sense/NN/sense this/DT/this differs/NNS/differs from/IN/from real/JJ/real computers/NNP/computers. so/RB/so /,/, first/JJ/first of/IN/of all/DT/all unlike/JJ/unlike our/PRP$/our random/NN/random access/NN/access machine/NNP/machine. in/IN/in which/WDT/which we/PRP/we said/VBD/said that/IN/that there/EX/there was/VBD/was a/DT/a single/JJ/single processor/NN/processor and/CC/and a/DT/a single/JJ/single memory/NN/memory real/JJ/real computer/NN/computer have/VBP/have a/DT/a much/RB/much more/RBR/more complicated/JJ/complicated architecture/NN/architecture much/RB/much more/RBR/more complicated/NNP/complicated. so/RB/so /,/, for/IN/for example/NN/example /,/, there/EX/there are/VBP/are many/JJ/many different/JJ/different kinds/NNS/kinds of/IN/of memory/NNP/memory. so/RB/so /,/, there/EX/there could/MD/could be/VB/be our/PRP$/our standard/JJ/standard memory/NN/memory which/WDT/which we/PRP/we will/MD/will call/VB/call main/JJ/main memory/NNP/memory. then/RB/then /,/, there/EX/there could/MD/could be/VB/be a/DT/a memory/NN/memory called/VBN/called cache/NN/cache memory/NNP/memory. i/PRP/i am/VBP/am sure/JJ/sure you/PRP/you have/VBP/have heard/VBN/heard of/IN/of cache/NN/cache memory/NNP/memory. most/JJS/most computer/NN/computer advertisements/NNS/advertisements do/VBP/do talk/VBP/talk about/IN/about cache/PRP/cache memory/NNP/memory. there/RB/there could/MD/could be/VB/be memory/NN/memory which/WDT/which is/VBZ/is called/VBN/called registers/NNS/registers register/IN/register memory/NNP/memory. then/RB/then /,/, a/DT/a very/RB/very tricky/JJ/tricky complication/NN/complication arises/NNS/arises in/IN/in a/DT/a very/RB/very tricky/JJ/tricky idea/NN/idea is/VBZ/is used/VBN/used in/IN/in designing/NN/designing computers/NNS/computers these/DT/these days/NNS/days and/CC/and that/IN/that idea/NN/idea is/VBZ/is called/VBN/called pipelining/VBG/pipelining /,/, what/WP/what this/DT/this means/VBZ/means is/VBZ/is that/IN/that ?/./? several/JJ/several instructions/NNS/instructions might/MD/might be/VB/be executed/VBN/executed simultaneously/RB/simultaneously at/IN/at in/IN/in ;/:/; they/PRP/they will/MD/will be/VB/be at/IN/at different/JJ/different stages/NNS/stages of/IN/of execution/NNP/execution. not/RB/not only/RB/only there/RB/there is/VBZ/is pipelining/VBG/pipelining /,/, but/CC/but there/EX/there is/VBZ/is also/RB/also something/VBG/something called/VBN/called superscalar/JJ/superscalar execution/NNP/execution. essentially/RB/essentially this/DT/this means/VBZ/means that/IN/that say/NN/say somewhere/RB/somewhere between/IN/between 1/CD/1 and/CC/and 4/CD/4 instructions/NNS/instructions might/MD/might be/VB/be simultaneously/RB/simultaneously executed/NNP/executed. this/DT/this is/VBZ/is a/DT/a fairly/RB/fairly complicated/VBN/complicated idea/NN/idea and/CC/and analyzing/VBG/analyzing this/DT/this idea/NN/idea is/VBZ/is definitely/RB/definitely beyond/IN/beyond the/DT/the scope/NN/scope of/IN/of this/DT/this course/NNP/course. however/RB/however /,/, you/PRP/you will/MD/will see/VB/see that/IN/that to/TO/to a/DT/a certain/JJ/certain extent/NN/extent these/DT/these complications/NNS/complications do/VBP/do not/RB/not matter/NNP/matter. we/PRP/we said/VBD/said we/PRP/we defined/VBD/defined an/DT/an instruction/NN/instruction set/NN/set for/IN/for our/PRP$/our ram/NN/ram machine/NNP/machine. the/DT/the instruction/NN/instruction set/VBD/set for/IN/for real/JJ/real computers/NNS/computers is/VBZ/is somewhat/RB/somewhat different/JJ/different in/IN/in the/DT/the sense/NN/sense that/IN/that there/EX/there are/VBP/are instructions/NNS/instructions which/WDT/which transfer/NN/transfer data/NNS/data between/IN/between different/JJ/different memories/NNS/memories in/IN/in the/DT/the system/NNP/system. so/RB/so /,/, there/EX/there is/VBZ/is memory/NN/memory to/TO/to memory/NN/memory instructions/NNS/instructions memory/NN/memory or/CC/or memory/NN/memory to/TO/to register/VB/register instructions/NNS/instructions /,/, memory/NN/memory to/TO/to register/VB/register copying/NN/copying instructions/NNP/instructions. and/CC/and then/RB/then arithmetic/JJ/arithmetic or/CC/or any/DT/any computation/NN/computation is/VBZ/is only/RB/only done/VBN/done in/IN/in registers/NNP/registers. so/RB/so /,/, as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this architecture/NN/architecture is/VBZ/is much/JJ/much more/RBR/more complicated/NNP/complicated. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 42/CD/42 /CD/) and/CC/and i/PRP/i will/MD/will just/RB/just take/VB/take one/CD/one more/JJR/more example/NN/example just/RB/just to/TO/to illustrate/VB/illustrate what/WP/what i/PRP/i mean/VBP/mean by/IN/by the/DT/the use/NN/use of/IN/of registers/NNP/registers. so/RB/so /,/, this/DT/this will/MD/will drive/VB/drive home/NN/home one/CD/one of/IN/of the/DT/the points/NNP/points. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that on/IN/on a/DT/a ram/NN/ram suppose/NN/suppose you/PRP/you have/VB/have an/DT/an instruction/NN/instruction like/IN/like a/DT/a equals/NNS/equals b/NN/b plus/CC/plus c/NNP/c. so/RB/so /,/, this/DT/this really/RB/really happens/VBZ/happens in/IN/in one/CD/one step/NN/step on/IN/on a/DT/a ram/NNP/ram. our/PRP$/our abstract/NN/abstract on/IN/on our/PRP$/our abstract/NN/abstract computer/NN/computer /,/, this/DT/this happens/NNS/happens in/IN/in a/DT/a single/JJ/single step/NNP/step. on/IN/on the/DT/the real/JJ/real computer/NN/computer this/DT/this actually/RB/actually needs/VBZ/needs several/JJ/several steps/NNP/steps. so/IN/so /,/, a/DT/a might/MD/might be/VB/be a/DT/a will/MD/will be/VB/be a/DT/a variable/JJ/variable in/IN/in memory/NNP/memory. so/RB/so /,/, first/JJ/first you/PRP/you will/MD/will have/VB/have to/TO/to load/VB/load it/PRP/it into/IN/into a/DT/a register/NNP/register. so/RB/so /,/, on/IN/on real/JJ/real computers/NNS/computers this/DT/this is/VBZ/is what/WP/what you/PRP/you will/MD/will do/VB/do. so/RB/so /,/, we/PRP/we will/MD/will load/VB/load b/NN/b into/IN/into say/NN/say register/NN/register 1/CD/1. then/RB/then /,/, you/PRP/you will/MD/will load/VB/load c/NN/c into/IN/into register/NN/register 2/CD/2. and/CC/and then/RB/then /,/, you/PRP/you will/MD/will add/VB/add register/NN/register 2/CD/2 register/NN/register 1/CD/1 into/IN/into register/NN/register 3/CD/3. so/RB/so /,/, the/DT/the value/NN/value contained/VBD/contained in/IN/in register/NN/register 2/CD/2 is/VBZ/is added/VBN/added to/TO/to the/DT/the value/NN/value contained/VBD/contained in/IN/in the/DT/the register/NN/register 1/CD/1 and/CC/and the/DT/the result/NN/result is/VBZ/is placed/VBN/placed in/IN/in register/NN/register 3/CD/3. and/CC/and then/RB/then finally/RB/finally /,/, you/PRP/you will/MD/will store/VB/store register/NN/register 3/CD/3 into/IN/into location/NN/location a/DT/a of/IN/of main/JJ/main memory/NNP/memory. so/RB/so /,/, a/DT/a is/VBZ/is a/DT/a main/JJ/main memory/NN/memory location/NNP/location. just/RB/just stress/NN/stress b/NN/b and/CC/and c/NN/c as/IN/as well/NNP/well. b/NN/b and/CC/and c/NN/c are/VBP/are also/RB/also main/JJ/main memory/NN/memory locations/NNP/locations. but/CC/but since/IN/since /,/, we/PRP/we can/MD/can not/RB/not deal/VB/deal directly/RB/directly with/IN/with data/NNS/data stored/VBN/stored in/IN/in main/JJ/main memory/NNP/memory. we/PRP/we will/MD/will have/VB/have to/TO/to deal/VB/deal with/IN/with we/PRP/we will/MD/will have/VB/have to/TO/to first/JJ/first move/NN/move them/PRP/them into/IN/into registers/NNS/registers and/CC/and then/RB/then deal/JJ/deal with/IN/with them/NNP/them. this/DT/this is/VBZ/is the/DT/the not/RB/not the/DT/the only/JJ/only way/NN/way in/IN/in which/WDT/which real/JJ/real computation/NN/computation is/VBZ/is different/JJ/different from/IN/from our/PRP$/our idealized/JJ/idealized memory/NNP/memory. there/RB/there can/MD/can be/VB/be differences/NNS/differences between/IN/between real/JJ/real computation/NN/computation and/CC/and our/PRP$/our idealized/JJ/idealized computation/NNP/computation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 42/CD/42 /CD/) also/RB/also because/IN/because of/IN/of the/DT/the use/NN/use of/IN/of compilers/NNS/compilers or/CC/or because/IN/because of/IN/of intelligent/NN/intelligent compilers/NNS/compilers /,/, let/VB/let us/PRP/us take/VB/take a/DT/a simple/JJ/simple example/NN/example ;/:/; say/VB/say a/DT/a program/NN/program which/WDT/which consists/NNS/consists of/IN/of just/RB/just two/CD/two lines/NNP/lines. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a program/NN/program say/NN/say which/WDT/which looks/NNS/looks like/IN/like if/IN/if x/NN/x of/IN/of i/PRP/i equals/VBZ/equals 1/CD/1. then/RB/then /,/, do/VBP/do something/NN/something or/CC/or then/RB/then go/VB/go to/TO/to if/IN/if x/NN/x of/IN/of i/PRP/i equals/VBZ/equals 2/CD/2 then/RB/then do/VBP/do something/NNP/something. a/DT/a simple/JJ/simple translator/NN/translator for/IN/for this/DT/this /,/, a/DT/a simple/JJ/simple translator/NN/translator would/MD/would operate/VB/operate for/IN/for this/DT/this would/MD/would have/VB/have to/TO/to extract/VB/extract the/DT/the value/NN/value of/IN/of i/NNP/i. because/IN/because remember/NN/remember /,/, we/PRP/we can/MD/can not/RB/not do/VB/do conditional/JJ/conditional operations/NNS/operations directly/RB/directly on/IN/on array/NN/array elements/NNP/elements. we/PRP/we first/RB/first have/VBP/have to/TO/to get/VB/get them/PRP/them into/IN/into some/DT/some variable/NNP/variable. so/RB/so /,/, this/DT/this first/JJ/first statement/NN/statement would/MD/would be/VB/be translated/VBN/translated into/IN/into some/DT/some fragment/JJ/fragment which/WDT/which will/MD/will cause/VB/cause x/NN/x of/IN/of i/PRP/i to/TO/to be/VB/be loaded/NNP/loaded. say/VB/say temp/NN/temp is/VBZ/is the/DT/the name/NN/name and/CC/and here/RB/here we/PRP/we load/VBP/load x/NN/x of/IN/of i/NNP/i. this/DT/this can/MD/can be/VB/be done/VBN/done in/IN/in one/CD/one step/NN/step on/IN/on a/DT/a ram/NN/ram as/IN/as well/RB/well as/IN/as on/IN/on a/DT/a real/JJ/real computer/NN/computer very/RB/very almost/RB/almost certainly/NNP/certainly. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be one/CD/one of/IN/of the/DT/the instructions/NNS/instructions in/IN/in translation/NN/translation of/IN/of or/CC/or compilation/NN/compilation of/IN/of this/DT/this first/JJ/first statement/NNP/statement. a/DT/a simple/JJ/simple minded/VBN/minded translator/NN/translator would/MD/would also/RB/also do/VB/do a/DT/a similar/JJ/similar translation/NN/translation for/IN/for the/DT/the second/JJ/second statement/NN/statement which/WDT/which would/MD/would also/RB/also require/VB/require 10/CD/10 equals/NNS/equals or/CC/or temp/VB/temp 1/CD/1 equals/NNS/equals x/NN/x of/IN/of i/PRP/i /,/, because/IN/because even/RB/even in/IN/in the/DT/the second/JJ/second statement/NN/statement we/PRP/we are/VBP/are accessing/VBG/accessing x/NN/x of/IN/of i/NNP/i. the/DT/the fact/NN/fact that/IN/that x/NN/x of/IN/of i/PRP/i has/VBZ/has not/RB/not is/VBZ/is not/RB/not changing/VBG/changing in/IN/in between/IN/between these/DT/these two/CD/two statements/NNS/statements may/MD/may or/CC/or may/MD/may not/RB/not be/VB/be noticed/VBN/noticed by/IN/by the/DT/the compilers/NNP/compilers. so/RB/so /,/, as/IN/as result/NN/result a/DT/a high/JJ/high level/NN/level language/NN/language statement/NN/statement such/JJ/such as/IN/as this/DT/this one/CD/one or/CC/or a/DT/a sequence/NN/sequence of/IN/of high/JJ/high level/NN/level language/NN/language statement/NN/statement such/JJ/such as/IN/as this/DT/this one/CD/one could/MD/could be/VB/be translated/VBN/translated into/IN/into a/DT/a different/JJ/different number/NN/number of/IN/of statements/NNS/statements depending/VBG/depending upon/IN/upon the/DT/the compiler/NN/compiler intelligence/NNP/intelligence. and/CC/and a/DT/a simple/JJ/simple compiler/NN/compiler would/MD/would translate/VB/translate the/DT/the first/JJ/first statement/NN/statement and/CC/and a/DT/a first/JJ/first statement/NN/statement translation/NN/translation would/MD/would require/VB/require a/DT/a fetching/NN/fetching of/IN/of x/NN/x of/IN/of i/NNP/i. and/CC/and the/DT/the second/JJ/second statement/NN/statement would/MD/would be/VB/be translated/VBN/translated separately/RB/separately and/CC/and that/IN/that would/MD/would also/RB/also require/VB/require a/DT/a fetch/NN/fetch of/IN/of x/NN/x of/IN/of i/NNP/i. but/CC/but /,/, an/DT/an intelligent/NN/intelligent transfer/NN/transfer an/DT/an intelligent/NN/intelligent compiler/NN/compiler would/MD/would realize/VB/realize that/IN/that this/DT/this fetch/NN/fetch is/VBZ/is really/RB/really not/RB/not needed/NNP/needed. because/IN/because /,/, it/PRP/it is/VBZ/is already/RB/already there/RB/there and/CC/and it/PRP/it can/MD/can already/RB/already use/VB/use the/DT/the value/NN/value which/WDT/which is/VBZ/is present/JJ/present earlier/JJR/earlier because/IN/because that/DT/that value/NN/value is/VBZ/is not/RB/not being/VBG/being modified/VBN/modified in/IN/in between/NNP/between. so/RB/so /,/, in/IN/in general/JJ/general /,/, when/WRB/when we/PRP/we write/VBP/write algorithms/NNS/algorithms an/DT/an intelligent/NN/intelligent compiler/NN/compiler would/MD/would be/VB/be between/IN/between us/PRP/us and/CC/and the/DT/the machine/NN/machine on/IN/on which/WDT/which the/DT/the algorithm/NN/algorithm executes/NNP/executes. and/CC/and therefore/RB/therefore /,/, we/PRP/we really/RB/really should/MD/should be/VB/be thinking/VBG/thinking about/IN/about what/WP/what are/VBP/are the/DT/the capabilities/NNS/capabilities of/IN/of that/DT/that compiler/NNP/compiler. so/RB/so in/IN/in summary/JJ/summary /,/, i/PRP/i would/MD/would like/VB/like to/TO/to say/VB/say that/IN/that we/PRP/we have/VBP/have an/DT/an idealized/VBN/idealized model/NN/model of/IN/of what/WP/what a/DT/a computer/NN/computer is/NNP/is. it/PRP/it differs/VBZ/differs from/IN/from what/WP/what a/DT/a computer/NN/computer what/WP/what a/DT/a real/JJ/real computer/NN/computer actually/RB/actually is/NNP/is. it/PRP/it is/VBZ/is it/PRP/it is/VBZ/is also/RB/also idealized/VBN/idealized /,/, because/IN/because we/PRP/we are/VBP/are not/RB/not really/RB/really talking/VBG/talking too/RB/too much/NNP/much. about/IN/about the/DT/the compiler/NN/compiler which/WDT/which sets/NNS/sets between/IN/between a/DT/a high/JJ/high level/NN/level language/NN/language algorithm/NN/algorithm or/CC/or a/DT/a high/JJ/high level/NN/level language/NN/language program/NN/program and/CC/and what/WP/what actually/RB/actually gets/VBZ/gets executed/VBN/executed on/IN/on the/DT/the machine/NNP/machine. so/RB/so in/IN/in some/DT/some sense/NN/sense now/RB/now you/PRP/you might/MD/might be/VB/be thinking/VBG/thinking that/IN/that it/PRP/it is/VBZ/is actually/RB/actually a/DT/a big/JJ/big surprise/NN/surprise that/WDT/that whatever/NN/whatever we/PRP/we say/VBP/say about/IN/about real/JJ/real computers/NNS/computers whatever/RB/whatever we/PRP/we say/VBP/say about/IN/about our/PRP$/our idealized/JJ/idealized model/NN/model applies/NNS/applies to/TO/to real/JJ/real computers/NNS/computers as/IN/as well/NNP/well. and/CC/and indeed/RB/indeed we/PRP/we have/VBP/have to/TO/to be/VB/be somewhat/RB/somewhat careful/JJ/careful about/IN/about how/WRB/how we/PRP/we make/VBP/make this/DT/this application/NN/application and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see that/IN/that next/NNP/next. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 50/CD/50 /CD/) so/RB/so /,/, now/RB/now let/VB/let me/PRP/me indicate/VB/indicate our/PRP$/our general/JJ/general analysis/NN/analysis strategy/NNP/strategy. our/PRP$/our measure/NN/measure for/IN/for each/DT/each algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a function/NN/function t/NN/t of/IN/of n/NN/n /,/, where/WRB/where t/NN/t of/IN/of n/NN/n is/VBZ/is going/VBG/going to/TO/to denote/VB/denote the/DT/the maximum/NN/maximum time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm on/IN/on the/DT/the ram/NN/ram for/IN/for any/DT/any instance/NN/instance of/IN/of size/NN/size n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a very/RB/very crucial/JJ/crucial definition/NNP/definition. t/NN/t of/IN/of n/NN/n is/VBZ/is going/VBG/going to/TO/to be/VB/be maximum/NN/maximum time/NN/time taken/VBN/taken by/IN/by our/PRP$/our algorithm/NNP/algorithm. here/RB/here /,/, let/VB/let me/PRP/me call/MD/call it/PRP/it algorithm/VB/algorithm a/DT/a and/CC/and let/VB/let me/PRP/me say/VB/say t/NN/t sub/NN/sub a/DT/a of/IN/of n/NNP/n. maximum/NN/maximum time/NN/time taken/VBN/taken by/IN/by our/PRP$/our algorithm/NN/algorithm a/DT/a to/TO/to solve/VB/solve any/DT/any instance/NN/instance of/IN/of size/NN/size n/NNP/n. so/RB/so /,/, as/IN/as we/PRP/we noted/VBD/noted in/IN/in the/DT/the last/JJ/last lecture/NN/lecture /,/, there/EX/there could/MD/could be/VB/be several/JJ/several instances/NNS/instances having/VBG/having the/DT/the same/JJ/same size/NNP/size. so/IN/so /,/, if/IN/if you/PRP/you are/VBP/are sorting/VBG/sorting a/DT/a data/NN/data set/NN/set the/DT/the size/NN/size typically/RB/typically could/MD/could be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a number/NN/number of/IN/of values/NNS/values in/IN/in that/DT/that data/NN/data set/NNP/set. and/CC/and for/IN/for different/JJ/different values/NNS/values even/RB/even if/IN/if the/DT/the number/NN/number of/IN/of values/NNS/values is/VBZ/is the/DT/the same/JJ/same the/DT/the time/NN/time taken/VBN/taken could/MD/could be/VB/be different/NNP/different. so/RB/so /,/, when/WRB/when we/PRP/we talk/VBP/talk about/IN/about t/NN/t of/IN/of n/NN/n or/CC/or t/NN/t of/IN/of n/NN/n for/IN/for this/DT/this algorithm/NN/algorithm a/NNP/a. we/PRP/we are/VBP/are asking/VBG/asking /,/, what/WP/what is/VBZ/is the/DT/the largest/JJS/largest time/NN/time taken/VBN/taken /,/, say/VBP/say for/IN/for sorting/VBG/sorting or/CC/or whatever/JJR/whatever that/IN/that algorithm/NN/algorithm is/VBZ/is doing/VBG/doing for/IN/for all/DT/all the/DT/the input/NN/input instances/NNS/instances of/IN/of size/NN/size n/NN/n and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we define/VBP/define as/IN/as t/NN/t of/IN/of n/NNP/n. so/RB/so /,/, we/PRP/we will/MD/will have/VB/have a/DT/a value/NN/value which/WDT/which will/MD/will be/VB/be defined/VBN/defined for/IN/for t/NN/t of/IN/of 1/CD/1 t/NN/t of/IN/of 2/CD/2 t/NN/t of/IN/of 3/CD/3 t/NN/t of/IN/of 4/CD/4. for/IN/for every/DT/every n/NN/n we/PRP/we will/MD/will have/VB/have a/DT/a value/NNP/value. in/IN/in principle/NN/principle /,/, we/PRP/we can/MD/can determine/VB/determine that/IN/that value/NN/value by/IN/by executing/NN/executing our/PRP$/our algorithm/NN/algorithm on/IN/on all/DT/all possible/JJ/possible instances/NNS/instances of/IN/of size/NN/size n/NNP/n. this/DT/this is/VBZ/is only/RB/only for/IN/for the/DT/the definition/NN/definition /,/, but/CC/but i/PRP/i just/RB/just wanted/VBD/wanted to/TO/to say/VB/say that/IN/that just/RB/just to/TO/to indicate/VB/indicate that/IN/that our/PRP$/our that/IN/that this/DT/this definition/NN/definition is/VBZ/is very/RB/very down/RB/down to/TO/to earth/NNP/earth. and/CC/and this/DT/this expression/NN/expression is/VBZ/is very/RB/very well/RB/well defined/NNP/defined. so/RB/so /,/, t/NN/t of/IN/of a/DT/a t/NN/t sub/NN/sub a/DT/a of/IN/of n/NN/n is/VBZ/is going/VBG/going to/TO/to be/VB/be our/PRP$/our measure/NN/measure of/IN/of goodness/NN/goodness of/IN/of this/DT/this algorithm/NN/algorithm a/NNP/a. notice/NN/notice that/WDT/that /,/, we/PRP/we are/VBP/are not/RB/not saying/VBG/saying we/PRP/we are/VBP/are not/RB/not evaluating/VBG/evaluating a/DT/a single/JJ/single number/NN/number for/IN/for our/PRP$/our algorithm/NNP/algorithm. so/RB/so /,/, you/PRP/you give/VBP/give me/PRP/me an/DT/an algorithm/NN/algorithm and/CC/and you/PRP/you ask/VBP/ask me/PRP/me how/WRB/how good/JJ/good is/VBZ/is this/DT/this algorithm/NNP/algorithm. i/PRP/i am/VBP/am going/VBG/going to/TO/to tell/VB/tell you/PRP/you here/RB/here is/VBZ/is a/DT/a function/NNP/function. this/DT/this is/VBZ/is how/WRB/how good/JJ/good this/DT/this algorithm/NN/algorithm is/NNP/is. you/PRP/you might/MD/might want/VB/want me/PRP/me to/TO/to tell/VB/tell you/PRP/you a/DT/a number/NN/number /,/, but/CC/but sorry/JJ/sorry i/NN/i can/MD/can not/RB/not do/VB/do that/NNP/that. i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to tell/VB/tell you/PRP/you a/DT/a function/NNP/function. and/CC/and now/RB/now for/IN/for every/DT/every algorithm/NN/algorithm that/IN/that you/PRP/you might/MD/might give/VB/give me/PRP/me /,/, i/PRP/i will/MD/will indicate/VB/indicate a/DT/a certain/JJ/certain function/NNP/function. and/CC/and it/PRP/it is/VBZ/is your/PRP$/your job/NN/job to/TO/to find/VB/find out/RP/out which/WDT/which algorithm/NN/algorithm is/VBZ/is actually/RB/actually good/JJ/good by/IN/by looking/VBG/looking at/IN/at those/DT/those functions/NNS/functions carefully/NNP/carefully. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 28/CD/28 /CD/) so/RB/so /,/, i/PRP/i would/MD/would like/VB/like to/TO/to make/VB/make a/DT/a few/JJ/few more/RBR/more remarks/NNS/remarks on/IN/on this/DT/this definition/NNP/definition. the/DT/the first/JJ/first remark/NN/remark is/VBZ/is that/IN/that this/DT/this definition/NN/definition is/VBZ/is a/DT/a conservative/JJ/conservative definition/NNP/definition. so/RB/so /,/, it/PRP/it says/VBZ/says that/IN/that the/DT/the time/NN/time that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to think/VB/think is/VBZ/is significant/JJ/significant for/IN/for a/DT/a certain/JJ/certain input/NN/input size/NN/size is/VBZ/is the/DT/the worst/JJS/worst case/NN/case time/NN/time is/VBZ/is sort/NN/sort of/IN/of the/DT/the maximum/NN/maximum possible/JJ/possible time/NNP/time. i/PRP/i could/MD/could have/VB/have said/VBN/said /,/, well/RB/well let/VB/let me/PRP/me consider/JJR/consider all/DT/all possible/JJ/possible inputs/NNS/inputs of/IN/of size/NN/size n/NN/n and/CC/and let/VB/let me/PRP/me take/VB/take their/PRP$/their average/JJ/average time/NNP/time. this/DT/this would/MD/would be/VB/be a/DT/a reasonable/JJ/reasonable definition/NNP/definition. however/RB/however /,/, this/DT/this averaging/NN/averaging of/IN/of often/RB/often turns/VBZ/turns out/RP/out to/TO/to be/VB/be turns/NNS/turns out/RP/out to/TO/to be/VB/be difficult/JJ/difficult to/TO/to perform/NNP/perform. primarily/RB/primarily the/DT/the reason/NN/reason is/VBZ/is that/IN/that you/PRP/you might/MD/might enumerate/VB/enumerate all/DT/all possible/JJ/possible instances/NNS/instances of/IN/of size/NN/size n/NNP/n. but/CC/but /,/, those/DT/those instances/NNS/instances may/MD/may not/RB/not appear/VB/appear in/IN/in actual/JJ/actual day/NN/day to/TO/to day/NN/day life/NN/life with/IN/with equal/JJ/equal probability/NNP/probability. so/RB/so unless/IN/unless /,/, they/PRP/they appear/VBP/appear with/IN/with exactly/RB/exactly the/DT/the same/JJ/same probability/NN/probability for/IN/for all/DT/all instances/NNS/instances taking/VBG/taking that/IN/that average/JJ/average is/VBZ/is usually/RB/usually not/RB/not so/RB/so significant/NNP/significant. even/RB/even if/IN/if they/PRP/they did/VBD/did appear/JJ/appear with/IN/with equal/JJ/equal probability/NN/probability even/RB/even then/RB/then taking/VBG/taking an/DT/an average/JJ/average introduces/NNS/introduces an/DT/an extra/JJ/extra complexity/NN/complexity to/TO/to this/DT/this which/WDT/which we/PRP/we will/MD/will deal/VB/deal with/IN/with once/RB/once in/IN/in a/DT/a while/NNP/while. but/CC/but by/IN/by and/CC/and large/JJ/large /,/, we/PRP/we will/MD/will stick/VB/stick to/TO/to this/DT/this reasonably/RB/reasonably simple/JJ/simple definition/NN/definition which/WDT/which happens/NNS/happens to/TO/to be/VB/be conservative/NNP/conservative. so/RB/so /,/, this/DT/this is/VBZ/is sort/NN/sort of/IN/of the/DT/the worst/NNP/worst. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a conservative/JJ/conservative definition/NN/definition in/IN/in the/DT/the sense/NN/sense that/IN/that if/IN/if i/PRP/i say/VBP/say that/IN/that t/NN/t of/IN/of n/NN/n is/VBZ/is 5/CD/5. i/PRP/i know/VBP/know that/IN/that no/DT/no instance/NN/instance of/IN/of size/NN/size n/NN/n will/MD/will take/VB/take time/NN/time less/JJR/less than/IN/than 5/CD/5 will/MD/will take/VB/take time/NN/time more/JJR/more than/IN/than 5/CD/5 and/NNP/and. so/RB/so /,/, it/PRP/it provides/VBZ/provides me/PRP/me sort/NN/sort of/IN/of a/DT/a very/RB/very solid/JJ/solid guarantee/NNP/guarantee. and/CC/and since/IN/since /,/, i/PRP/i am/VBP/am talking/VBG/talking about/IN/about the/DT/the worst/JJS/worst possible/JJ/possible time/NN/time that/WDT/that an/DT/an instance/NN/instance of/IN/of size/NN/size n/NN/n can/MD/can take/NNP/take. this/DT/this measure/NN/measure is/VBZ/is also/RB/also called/VBN/called the/DT/the worst/JJS/worst case/NN/case measure/NNP/measure. now/RB/now /,/, i/PRP/i would/MD/would like/VB/like to/TO/to comment/VB/comment on/IN/on how/WRB/how the/DT/the time/NN/time taken/VBN/taken on/IN/on a/DT/a ram/NN/ram relates/VBZ/relates to/TO/to real/JJ/real machines/NNP/machines. so/RB/so /,/, we/PRP/we said/VBD/said earlier/RBR/earlier we/PRP/we pointed/VBD/pointed out/RP/out the/DT/the differences/NNS/differences between/IN/between the/DT/the real/JJ/real computers/NNS/computers and/CC/and rams/NNP/rams. and/CC/and we/PRP/we saw/VBD/saw there/RB/there that/IN/that a/DT/a single/JJ/single instruction/NN/instruction on/IN/on the/DT/the ram/NN/ram might/MD/might correspond/VB/correspond to/TO/to several/JJ/several instructions/NNS/instructions on/IN/on the/DT/the real/JJ/real computers/NNS/computers and/CC/and also/RB/also perhaps/RB/perhaps vice/NN/vice versa/NNP/versa. and/CC/and also/RB/also because/IN/because of/IN/of compiler/JJR/compiler technology/NN/technology we/PRP/we might/MD/might get/VB/get differences/NNP/differences. so/RB/so then/RB/then /,/, the/DT/the question/NN/question arises/VBZ/arises whatever/NN/whatever analysis/NN/analysis we/PRP/we do/VBP/do ?/./? for/IN/for the/DT/the ram/NN/ram is/VBZ/is it/PRP/it really/RB/really of/IN/of consequence/NN/consequence for/IN/for real/JJ/real computers/NNP/computers. so/RB/so /,/, the/DT/the point/NN/point the/DT/the important/JJ/important point/NN/point that/WDT/that we/PRP/we will/MD/will see/VB/see soon/NNP/soon. but/CC/but /,/, which/WDT/which i/PRP/i would/MD/would like/VB/like to/TO/to just/RB/just mention/NN/mention right/RB/right now/RB/now is/VBZ/is that/IN/that the/DT/the precise/NN/precise value/NN/value of/IN/of t/NN/t of/IN/of n/NNP/n. the/DT/the precise/NN/precise the/DT/the precise/NN/precise numbers/NNS/numbers in/IN/in the/DT/the expression/NN/expression that/IN/that we/PRP/we get/VBP/get for/IN/for t/NN/t of/IN/of n/NNP/n. may/MD/may not/RB/not be/VB/be of/IN/of great/JJ/great consequence/NN/consequence of/IN/of real/JJ/real computers/NNS/computers and/CC/and real/JJ/real computations/NNS/computations /,/, what/WP/what is/VBZ/is going/VBG/going to/TO/to be/VB/be of/IN/of consequence/NN/consequence ;/:/; however/RB/however /,/, is/VBZ/is the/DT/the form/NN/form of/IN/of t/NN/t of/IN/of n/NNP/n. or/CC/or let/VB/let me/PRP/me write/VB/write this/DT/this as/IN/as the/DT/the functional/JJ/functional form/NN/form of/IN/of t/NN/t of/IN/of n/NN/n /,/, what/WP/what i/PRP/i mean/VBP/mean by/IN/by the/DT/the functional/JJ/functional form/NN/form is/VBZ/is the/DT/the following/NNP/following. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to ask/VB/ask questions/NNS/questions such/JJ/such as/IN/as is/VBZ/is t/VBN/t of/IN/of n/NN/n linear/NN/linear function/NN/function of/IN/of n/NNP/n. by/IN/by linear/NN/linear i/PRP/i mean/VBP/mean functions/NNS/functions which/WDT/which are/VBP/are of/IN/of the/DT/the form/NN/form a/DT/a n/NN/n plus/CC/plus b/NN/b or/CC/or is/VBZ/is it/PRP/it a/DT/a quadratic/JJ/quadratic function/NN/function of/IN/of n/NNP/n. by/IN/by this/DT/this i/PRP/i mean/VBP/mean functions/NNS/functions which/WDT/which are/VBP/are of/IN/of the/DT/the form/NN/form a/DT/a n/NN/n square/NN/square plus/CC/plus b/NN/b n/NN/n plus/CC/plus c/NN/c and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, say/VBP/say cubic/JJ/cubic and/CC/and other/JJ/other complex/NN/complex functions/NNS/functions as/IN/as well/NNP/well. but/CC/but essentially/RB/essentially /,/, i/PRP/i am/VBP/am not/RB/not talking/VBG/talking about/IN/about the/DT/the precise/NN/precise values/NNS/values of/IN/of a/DT/a and/CC/and b/NNP/b. when/WRB/when /,/, i/PRP/i talk/VBP/talk about/IN/about a/DT/a function/NN/function being/VBG/being linear/NN/linear /,/, but/CC/but i/PRP/i am/VBP/am just/RB/just talking/VBG/talking about/IN/about the/DT/the shape/NN/shape of/IN/of that/DT/that function/NNP/function. so/RB/so /,/, they/PRP/they crucial/VBP/crucial idea/NN/idea is/VBZ/is going/VBG/going to/TO/to be/VB/be that/IN/that the/DT/the shape/NN/shape that/IN/that this/DT/this function/NN/function t/NN/t of/IN/of n/NN/n has/VBZ/has is/VBZ/is going/VBG/going to/TO/to be/VB/be independent/JJ/independent of/IN/of what/WP/what computer/NN/computer it/PRP/it is/VBZ/is on/IN/on which/WDT/which you/PRP/you run/VBP/run your/PRP$/your algorithm/NNP/algorithm. and/CC/and since/IN/since /,/, we/PRP/we are/VBP/are really/RB/really interested/JJ/interested in/IN/in characterizing/NN/characterizing the/DT/the algorithm/NN/algorithm rather/RB/rather than/IN/than the/DT/the computer/NN/computer itself/NNP/itself. it/PRP/it is/VBZ/is important/JJ/important for/IN/for us/PRP/us to/TO/to pick/VB/pick a/DT/a measure/NN/measure which/WDT/which depends/NNS/depends entirely/RB/entirely on/IN/on the/DT/the algorithm/NNP/algorithm. and/CC/and in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is going/VBG/going this/DT/this going/VBG/going to/TO/to be/VB/be the/DT/the shape/NN/shape or/CC/or this/DT/this functional/JJ/functional form/NN/form /,/, whether/IN/whether t/NN/t of/IN/of n/NN/n is/VBZ/is a/DT/a linear/JJ/linear function/NN/function or/CC/or a/DT/a quadratic/JJ/quadratic function/NN/function or/CC/or a/DT/a cubic/JJ/cubic function/NNP/function. and/CC/and we/PRP/we will/MD/will we/VB/we will/MD/will soon/RB/soon see/VB/see examples/NNS/examples of/IN/of this/DT/this in/IN/in a/DT/a minute/NNP/minute. very/RB/very often/RB/often /,/, we/PRP/we will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to exactly/RB/exactly estimate/VB/estimate t/NN/t of/IN/of n/NNP/n. we/PRP/we will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to give/VB/give exact/JJ/exact bounds/NNS/bounds on/IN/on t/NN/t of/IN/of n/NNP/n. here/RB/here /,/, we/PRP/we will/MD/will say/VB/say something/NN/something like/IN/like what/WP/what is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound or/CC/or we/PRP/we will/MD/will say/VB/say something/NN/something like/IN/like what/WP/what is/VBZ/is the/DT/the lower/JJR/lower bound/NNP/bound. if/IN/if the/DT/the upper/JJ/upper bound/NN/bound and/CC/and lower/JJR/lower bound/NN/bound match/NN/match then/RB/then great/JJ/great our/PRP$/our analysis/NN/analysis is/VBZ/is complete/NNP/complete. but/CC/but /,/, this/DT/this does/VBZ/does not/RB/not always/RB/always necessarily/RB/necessarily happen/NNP/happen. so/RB/so in/IN/in that/DT/that case/NN/case well/RB/well /,/, we/PRP/we will/MD/will have/VB/have to/TO/to live/VB/live with/IN/with incomplete/JJ/incomplete our/PRP$/our work/NN/work done/NN/done incomplete/NNP/incomplete. and/CC/and bridging/VBG/bridging the/DT/the difference/NN/difference between/IN/between the/DT/the lower/JJR/lower bound/NN/bound and/CC/and the/DT/the upper/JJ/upper bound/NN/bound will/MD/will be/VB/be subject/JJ/subject of/IN/of research/NNP/research. finally/RB/finally /,/, i/PRP/i will/MD/will also/RB/also comment/VB/comment that/IN/that we/PRP/we will/MD/will mostly/RB/mostly be/VB/be concerned/VBN/concerned or/CC/or it/PRP/it is/VBZ/is customary/JJ/customary to/TO/to be/VB/be concerned/VBN/concerned about/IN/about getting/VBG/getting good/JJ/good estimates/NNS/estimates of/IN/of on/IN/on t/NN/t of/IN/of n/NN/n for/IN/for large/JJ/large n/NNP/n. so/RB/so /,/, we/PRP/we always/RB/always have/VBP/have in/IN/in our/PRP$/our mind/NN/mind that/WDT/that we/PRP/we are/VBP/are solving/VBG/solving large/JJ/large problems/NNP/problems. as/IN/as our/PRP$/our problems/NNS/problems become/VBP/become larger/JJR/larger and/CC/and larger/JJR/larger which/WDT/which algorithm/NN/algorithm does/VBZ/does better/JJR/better that/IN/that is/VBZ/is the/DT/the question/NN/question that/IN/that we/PRP/we should/MD/should be/VB/be asking/NNP/asking. so/RB/so /,/, let/VB/let me/PRP/me answer/JJR/answer that/IN/that question/NN/question very/RB/very quickly/NNP/quickly. if/IN/if an/DT/an algorithm/NN/algorithm has/VBZ/has time/NN/time quadratic/JJ/quadratic /,/, then/RB/then it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take more/JJR/more time/NN/time than/IN/than an/DT/an algorithm/NN/algorithm which/WDT/which has/VBZ/has time/NN/time linear/NNP/linear. certainly/RB/certainly as/IN/as the/DT/the problem/NN/problem size/NN/size n/NN/n goes/VBZ/goes to/TO/to infinity/NNP/infinity. and/CC/and so/RB/so in/IN/in the/DT/the end/NN/end /,/, what/WP/what we/PRP/we will/MD/will end/VB/end up/RP/up saying/VBG/saying is/VBZ/is that/IN/that a/DT/a quadratic/JJ/quadratic time/NN/time algorithm/NN/algorithm is/VBZ/is worse/JJR/worse than/IN/than a/DT/a linear/NN/linear time/NN/time algorithm/NNP/algorithm. does/VBZ/does not/RB/not matter/VB/matter /,/, what/WDT/what the/DT/the precise/NN/precise constants/NNS/constants are/VBP/are whether/IN/whether it/PRP/it is/VBZ/is 3x/CD/3x square/JJ/square plus/NN/plus 9/CD/9 or/CC/or whether/IN/whether it/PRP/it is/VBZ/is 1000x/CD/1000x plus/RB/plus 56/CD/56 /,/, because/IN/because as/IN/as n/NN/n goes/VBZ/goes to/TO/to infinity/NN/infinity as/IN/as n/NN/n goes/VBZ/goes to/TO/to infinity/NN/infinity linear/NN/linear time/NN/time algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to take/VB/take less/JJR/less time/NN/time eventually/RB/eventually as/IN/as n/NN/n goes/VBZ/goes to/TO/to infinity/NN/infinity than/IN/than a/DT/a quadratic/JJ/quadratic time/NN/time algorithm/NNP/algorithm. and/CC/and this/DT/this idea/NN/idea is/VBZ/is justified/VBN/justified /,/, because/IN/because typically/RB/typically we/PRP/we use/VBP/use computers/NNS/computers to/TO/to solve/VB/solve large/JJ/large problems/NNP/problems. if/IN/if a/DT/a problem/NN/problem is/VBZ/is small/JJ/small /,/, then/RB/then either/DT/either we/PRP/we solve/VBP/solve it/PRP/it by/IN/by hand/NN/hand or/CC/or it/PRP/it does/VBZ/does not/RB/not take/VB/take too/RB/too much/RB/much time/VB/time on/IN/on a/DT/a computer/NNP/computer. computers/NNS/computers are/VBP/are very/RB/very fast/JJ/fast these/DT/these days/NNP/days. and/CC/and so/RB/so /,/, analyzing/VBG/analyzing it/PRP/it is/VBZ/is really/RB/really not/RB/not of/IN/of interest/NNP/interest. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our overall/JJ/overall analysis/NN/analysis strategy/NNP/strategy. and/CC/and this/DT/this is/VBZ/is a/DT/a general/JJ/general idea/NN/idea about/IN/about when/WRB/when we/PRP/we say/VBP/say an/DT/an algorithm/NN/algorithm is/VBZ/is good/NNP/good. when/WRB/when we/PRP/we say/VBP/say an/DT/an algorithm/NN/algorithm is/VBZ/is bad/JJ/bad and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 21/CD/21 /CD/) so/RB/so /,/, let/VB/let us/PRP/us now/RB/now take/VBP/take some/DT/some examples/NNS/examples to/TO/to make/VB/make these/DT/these ideas/NNS/ideas more/RBR/more concrete/NNP/concrete. the/DT/the first/JJ/first example/NN/example is/VBZ/is going/VBG/going to/TO/to be/VB/be matrix/CD/matrix multiplication/NNP/multiplication. our/PRP$/our input/NN/input is/VBZ/is going/VBG/going to/TO/to be/VB/be 2n/CD/2n by/IN/by n/NN/n matrices/NNS/matrices say/VBP/say a/DT/a and/CC/and b/NN/b which/WDT/which are/VBP/are n/RB/n by/IN/by n/NN/n matrices/NNP/matrices. output/NN/output is/VBZ/is a/DT/a matrix/NN/matrix c/NN/c which/WDT/which is/VBZ/is also/RB/also a/DT/a n/NN/n by/IN/by n/NN/n matrix/NN/matrix and/CC/and c/NN/c will/MD/will be/VB/be a/DT/a times/NNS/times b/VBP/b /,/, where/WRB/where a/DT/a times/NNS/times b/VBP/b is/VBZ/is the/DT/the usual/JJ/usual matrix/NN/matrix product/NNP/product. so/RB/so /,/, in/IN/in particular/JJ/particular c/NN/c i/PRP/i j/VBP/j is/VBZ/is defined/VBN/defined as/RB/as summation/NN/summation over/IN/over k/NN/k of/IN/of a/DT/a i/NN/i k/NN/k b/NN/b k/NN/k j/NNP/j. everybody/NN/everybody knows/VBZ/knows this/DT/this definition/NNP/definition. i/PRP/i am/VBP/am just/RB/just writing/VBG/writing it/PRP/it down/IN/down just/RB/just for/IN/for completeness/NNP/completeness. there/EX/there are/VBP/are many/JJ/many algorithms/NNS/algorithms for/IN/for matrix/NN/matrix multiplication/NNP/multiplication. but/CC/but i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider relatively/RB/relatively simple/JJ/simple the/DT/the most/RBS/most natural/JJ/natural algorithm/NN/algorithm which/WDT/which just/RB/just uses/VBZ/uses this/DT/this definition/NNP/definition. that/IN/that is/VBZ/is all/DT/all nothing/NN/nothing more/NNP/more. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 30/CD/30 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is that/IN/that simple/JJ/simple algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have three/CD/three loops/NNP/loops. so/RB/so /,/, for/IN/for i/PRP/i equal/JJ/equal 1/CD/1 to/TO/to n/VB/n for/IN/for j/NN/j equals/NNS/equals 1/CD/1 to/TO/to n/NNP/n. and/CC/and then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to set/VB/set c/NN/c i/PRP/i j/VBP/j equals/NNS/equals 0/-NONE-/0 over/IN/over here/NNP/here. so/RB/so /,/, c/NN/c i/PRP/i j/VBP/j is/VBZ/is an/DT/an entry/NN/entry in/IN/in a/DT/a two/CD/two dimensional/JJ/dimensional array/NN/array n/NN/n by/IN/by n/NN/n of/IN/of size/NN/size of/IN/of dimension/NN/dimension n/NN/n by/IN/by n/NNP/n. and/CC/and so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that all/DT/all over/IN/over matrices/NNS/matrices are/VBP/are represented/VBN/represented by/IN/by two/CD/two dimensional/JJ/dimensional arrays/NNS/arrays and/CC/and they/PRP/they are/VBP/are in/IN/in memory/NNP/memory. and/CC/and having/VBG/having set/NN/set each/DT/each c/NN/c i/PRP/i j/VBP/j to/TO/to 0/-NONE-/0 we/PRP/we will/MD/will just/RB/just use/VB/use our/PRP$/our definition/NN/definition of/IN/of c/NN/c i/PRP/i j/VBP/j to/TO/to calculate/VB/calculate the/DT/the value/NN/value of/IN/of it/NNP/it. so/RB/so /,/, for/IN/for k/NN/k going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n c/NN/c i/PRP/i j/VBP/j equals/NNS/equals c/NN/c i/PRP/i j/VBP/j plus/RB/plus a/DT/a i/PRP/i k/VBP/k times/NNS/times b/VBP/b k/NN/k j/NNP/j. and/CC/and then/RB/then we/PRP/we just/RB/just close/JJ/close all/DT/all the/DT/the loops/NNP/loops. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our algorithm/NNP/algorithm. we/PRP/we would/MD/would like/VB/like to/TO/to find/VB/find out/RP/out how/WRB/how long/JJ/long this/DT/this takes/VBZ/takes on/IN/on our/PRP$/our random/NN/random access/NN/access machine/NN/machine ram/NNP/ram. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 13/CD/13 /CD/) let/NN/let me/PRP/me just/RB/just point/VBP/point out/RP/out that/IN/that the/DT/the problem/NN/problem size/NN/size can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as just/RB/just n/VBP/n itself/NNP/itself. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing to/TO/to note/VB/note in/IN/in analyzing/NN/analyzing this/DT/this algorithm/NN/algorithm is/VBZ/is that/IN/that for/IN/for every/DT/every instance/NN/instance of/IN/of the/DT/the same/JJ/same problem/NN/problem size/NN/size the/DT/the time/NN/time taken/VBN/taken is/VBZ/is the/DT/the same/NNP/same. this/DT/this is/VBZ/is not/RB/not typical/JJ/typical of/IN/of algorithms/NNS/algorithms /,/, but/CC/but we/PRP/we have/VBP/have chosen/VBN/chosen this/DT/this algorithm/NN/algorithm just/RB/just to/TO/to illustrate/VB/illustrate the/DT/the analysis/NN/analysis ideas/NNP/ideas. and/CC/and later/JJ/later on/IN/on we/PRP/we will/MD/will see/VB/see algorithms/NNS/algorithms where/WRB/where the/DT/the time/NN/time taken/VBN/taken is/VBZ/is different/JJ/different and/CC/and we/PRP/we will/MD/will analyze/VB/analyze those/DT/those as/IN/as well/NNP/well. then/RB/then /,/, this/DT/this algorithm/NN/algorithm also/RB/also has/VBZ/has a/DT/a very/RB/very simple/JJ/simple structure/NNP/structure. again/RB/again we/PRP/we will/MD/will be/VB/be analyzing/VBG/analyzing more/JJR/more complex/JJ/complex structures/NNS/structures later/JJ/later on/NNP/on. this/DT/this basic/JJ/basic structure/NN/structure in/IN/in this/DT/this algorithm/NN/algorithm is/VBZ/is that/IN/that of/IN/of a/DT/a loop/NNP/loop. and/CC/and we/PRP/we have/VBP/have already/RB/already seen/VBN/seen in/IN/in the/DT/the last/JJ/last lecture/NN/lecture how/WRB/how to/TO/to analyze/VB/analyze loops/NNP/loops. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 05/CD/05 /CD/) so/RB/so /,/, let/VB/let us/PRP/us write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, we/PRP/we said/VBD/said last/JJ/last time/NN/time that/IN/that if/IN/if i/PRP/i have/VBP/have a/DT/a loop/NN/loop in/IN/in which/WDT/which the/DT/the body/NN/body takes/VBZ/takes b/NN/b steps/NNS/steps and/CC/and the/DT/the number/NN/number of/IN/of iterations/NNS/iterations is/VBZ/is n/NNP/n. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a for/IN/for loop/NN/loop in/IN/in which/WDT/which the/DT/the body/NN/body takes/VBZ/takes b/NN/b steps/NNS/steps and/CC/and the/DT/the number/NN/number of/IN/of iterations/NNS/iterations is/VBZ/is n/NNP/n. then/RB/then /,/, we/PRP/we said/VBD/said that/IN/that the/DT/the total/JJ/total time/NN/time taken/VBN/taken is/VBZ/is going/VBG/going to/TO/to be/VB/be 2/CD/2 plus/CC/plus n/NN/n times/NNS/times b/VBP/b plus/RB/plus 3/CD/3 steps/NNP/steps. this/DT/this is/VBZ/is what/WP/what we/PRP/we concluded/VBD/concluded in/IN/in the/DT/the last/JJ/last lecture/NNP/lecture. if/IN/if you/PRP/you do/VBP/do not/RB/not remember/VB/remember these/DT/these numbers/NNS/numbers 2/CD/2 and/CC/and 3/CD/3 do/VBP/do not/RB/not worry/VB/worry about/IN/about it/PRP/it so/RB/so much/NNP/much. we/PRP/we are/VBP/are in/IN/in the/DT/the end/NN/end going/VBG/going to/TO/to see/VB/see that/IN/that these/DT/these two/CD/two numbers/NNS/numbers are/VBP/are not/RB/not important/NNP/important. but/CC/but right/RB/right now/RB/now /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do pretty/RB/pretty exact/VB/exact analysis/NNP/analysis. knowing/NN/knowing how/WRB/how to/TO/to do/VB/do this/DT/this exact/JJ/exact analysis/NN/analysis is/VBZ/is important/JJ/important for/IN/for the/DT/the sake/NN/sake of/IN/of completeness/NN/completeness and/CC/and we/PRP/we will/MD/will do/VB/do it/PRP/it just/RB/just once/NNP/once. it/PRP/it might/MD/might look/VB/look it/PRP/it might/MD/might feel/VB/feel a/DT/a little/JJ/little bit/NN/bit painful/JJ/painful /,/, but/CC/but it/PRP/it is/VBZ/is important/JJ/important to/TO/to do/VB/do it/PRP/it once/NNP/once. so/RB/so that/IN/that /,/, we/PRP/we are/VBP/are sure/JJ/sure that/IN/that we/PRP/we have/VBP/have understood/VBN/understood the/DT/the ram/NN/ram model/NN/model completely/NNP/completely. later/JJ/later on/IN/on we/PRP/we will/MD/will see/VB/see why/WRB/why not/RB/not /,/, worry/VBP/worry about/IN/about some/DT/some details/NNS/details is/VBZ/is important/NNP/important. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the second/JJ/second algorithm/NN/algorithm that/WDT/that we/PRP/we will/MD/will analyze/VB/analyze we/PRP/we will/MD/will analyze/VB/analyze without/IN/without doing/VBG/doing without/IN/without paying/VBG/paying too/RB/too much/JJ/much attention/NN/attention to/TO/to all/DT/all the/DT/the small/JJ/small detail/NNP/detail. but/CC/but /,/, for/IN/for now/RB/now we/PRP/we will/MD/will stick/VB/stick to/TO/to exact/VB/exact analysis/NN/analysis and/CC/and will/MD/will note/VB/note that/IN/that for/IN/for an/DT/an exact/JJ/exact analysis/NNP/analysis. the/DT/the time/NN/time taken/VBN/taken for/IN/for in/IN/in a/DT/a for/IN/for loop/NN/loop is/VBZ/is going/VBG/going to/TO/to be/VB/be 2/CD/2 plus/CC/plus n/NN/n times/NNS/times b/VBP/b plus/RB/plus 3/CD/3 /,/, where/WRB/where b/NN/b is/VBZ/is the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the body/NNP/body. the/DT/the second/JJ/second idea/NN/idea that/IN/that we/PRP/we needed/VBD/needed from/IN/from last/JJ/last lecture/NN/lecture was/VBD/was that/IN/that if/IN/if i/PRP/i am/VBP/am accessing/VBG/accessing a/DT/a two/CD/two dimensional/JJ/dimensional array/NN/array an/DT/an element/NN/element of/IN/of a/DT/a two/CD/two dimensional/JJ/dimensional array/NN/array it/PRP/it takes/VBZ/takes me/PRP/me 4/CD/4 steps/NNP/steps. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 22/CD/22 /CD/) so/RB/so /,/, we/PRP/we will/MD/will use/VB/use these/DT/these ideas/NNS/ideas to/TO/to analyze/VB/analyze our/PRP$/our program/NN/program our/PRP$/our algorithm/NN/algorithm over/IN/over here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this statement/NNP/statement. so/RB/so /,/, this/DT/this statement/NN/statement has/VBZ/has four/CD/four accesses/NNS/accesses to/TO/to two/CD/two dimensional/JJ/dimensional arrays/NNP/arrays. so/RB/so /,/, this/DT/this is/VBZ/is one/CD/one access/NNP/access. this/DT/this is/VBZ/is another/DT/another access/NNP/access. this/DT/this is/VBZ/is another/DT/another access/NN/access and/CC/and this/DT/this is/VBZ/is another/DT/another access/NN/access and/CC/and then/RB/then there/RB/there are/VBP/are two/CD/two arithmetic/JJ/arithmetic operations/NNS/operations that/WDT/that it/PRP/it does/NNP/does. so/RB/so /,/, the/DT/the time/NN/time it/PRP/it takes/VBZ/takes must/MD/must be/VB/be 4/CD/4 times/NNS/times 4/CD/4 for/IN/for the/DT/the array/NN/array accesses/VBZ/accesses plus/RB/plus 2/CD/2. so/RB/so /,/, 10/CD/10 cycles/NNS/cycles totally/NNP/totally. so/RB/so /,/, a/DT/a single/JJ/single a/DT/a single/JJ/single execution/NN/execution of/IN/of this/DT/this statement/NN/statement itself/PRP/itself forget/VBP/forget the/DT/the loops/NNS/loops just/RB/just a/DT/a single/JJ/single execution/NN/execution of/IN/of the/DT/the statement/NN/statement itself/PRP/itself will/MD/will take/VB/take time/NN/time 10/CD/10 steps/NNS/steps no/DT/no matter/NN/matter what/WP/what the/DT/the values/NNS/values of/IN/of c/NN/c i/PRP/i j/VBP/j a/DT/a i/PRP/i k/VBP/k and/CC/and b/NN/b k/NN/k j/NN/j are/NNP/are. but/CC/but once/RB/once /,/, we/PRP/we know/VBP/know the/DT/the time/NN/time required/VBN/required for/IN/for this/DT/this single/JJ/single statement/NNP/statement. we/PRP/we can/MD/can calculate/VB/calculate the/DT/the time/NN/time required/VBN/required for/IN/for this/DT/this outer/NN/outer loop/NN/loop over/IN/over here/RB/here this/DT/this loop/NNP/loop. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 05/CD/05 /CD/) how/WRB/how do/VBP/do we/PRP/we do/VBP/do that/IN/that ?/./? well/RB/well we/PRP/we wrote/VBD/wrote down/RP/down that/IN/that if/IN/if you/PRP/you have/VBP/have a/DT/a for/IN/for loop/NN/loop in/IN/in which/WDT/which the/DT/the body/NN/body takes/VBZ/takes b/NN/b steps/NNP/steps. and/CC/and if/IN/if there/EX/there are/VBP/are n/NN/n iterations/NNS/iterations /,/, then/RB/then the/DT/the time/NN/time taken/VBN/taken is/VBZ/is 2/CD/2 plus/RB/plus n/JJ/n times/NNS/times b/VBP/b plus/RB/plus 3/CD/3. as/IN/as a/DT/a result/NN/result of/IN/of which/WDT/which this/DT/this for/IN/for loop/NN/loop will/MD/will take/VB/take time/NNP/time. so/RB/so /,/, it/PRP/it is/VBZ/is 2/CD/2 plus/RB/plus n/JJ/n is/VBZ/is the/DT/the same/JJ/same over/IN/over here/NNP/here. it/PRP/it is/VBZ/is still/RB/still has/VBZ/has n/VBN/n iterations/NNP/iterations. b/NN/b ;/:/; however/RB/however is/VBZ/is 10/CD/10 plus/RB/plus 3/CD/3. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take time/NN/time 13/CD/13 and/CC/and plus/CC/plus 2/CD/2. 18/CD/18 /,/, so/RB/so this/DT/this will/MD/will take/VB/take time/NN/time this/NNP/this. so/RB/so /,/, in/IN/in the/DT/the reverse/NN/reverse it/PRP/it will/MD/will take/VB/take time/NN/time 21/CD/21 and/CC/and plus/CC/plus 2/CD/2. but/CC/but now/RB/now /,/, this/DT/this is/VBZ/is the/DT/the time/NN/time for/IN/for this/DT/this particular/JJ/particular part/NNP/part. so/RB/so /,/, we/PRP/we just/RB/just have/VBP/have to/TO/to worry/VB/worry about/IN/about this/DT/this additional/JJ/additional time/NN/time over/IN/over here/NNP/here. so/RB/so this/DT/this entire/JJ/entire portion/NN/portion /,/, all/DT/all the/DT/the way/NN/way from/IN/from here/RB/here to/TO/to here/RB/here comprises/VBZ/comprises the/DT/the body/NN/body of/IN/of for/IN/for this/DT/this loop/NN/loop for/IN/for the/DT/the /,/, for/IN/for loop/NN/loop on/IN/on j/NNP/j. this/DT/this takes/VBZ/takes an/DT/an additional/JJ/additional 4/CD/4 steps/NNS/steps for/IN/for this/DT/this access/NN/access and/CC/and 1/CD/1 step/NN/step for/IN/for this/DT/this assignment/NNP/assignment. so/RB/so /,/, this/DT/this will/MD/will take/VB/take time/NN/time 21/CD/21 n/NN/n n/NN/n plus/CC/plus 7/CD/7. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the time/NN/time for/IN/for the/DT/the body/NN/body of/IN/of this/DT/this loop/NNP/loop. the/DT/the total/JJ/total time/NN/time taken/VBN/taken for/IN/for this/DT/this outer/NN/outer loop/NN/loop now/RB/now this/DT/this one/CD/one over/IN/over here/RB/here is/VBZ/is again/RB/again going/VBG/going back/RB/back to/TO/to our/PRP$/our formula/NN/formula for/IN/for body/NN/body the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the for/IN/for a/DT/a loop/NN/loop in/IN/in terms/NNS/terms of/IN/of its/PRP$/its body/NN/body and/CC/and number/NN/number of/IN/of iterations/NNP/iterations. well/RB/well the/DT/the body/NN/body of/IN/of this/DT/this loop/NN/loop requires/VBZ/requires time/NN/time 21/CD/21 n/NN/n plus/CC/plus 7/CD/7. so/RB/so that/IN/that is/VBZ/is all/DT/all that/DT/that we/PRP/we need/VBP/need to/TO/to plug/VB/plug in/IN/in into/IN/into this/DT/this expression/NN/expression over/IN/over here/NNP/here. so/RB/so /,/, if/IN/if we/PRP/we do/VBP/do that/IN/that then/RB/then for/IN/for this/DT/this loop/NN/loop we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get 2/CD/2 plus/CC/plus the/DT/the number/NN/number of/IN/of iterations/NNS/iterations is/VBZ/is still/RB/still n/JJ/n times/NNS/times 21/CD/21 n/NN/n plus/CC/plus 7/CD/7 plus/NNS/plus that/WDT/that additional/JJ/additional 3/CD/3. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the time/NN/time that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to get/NNP/get. for/IN/for this/DT/this outer/NN/outer loop/NN/loop in/IN/in j/NN/j and/CC/and now/RB/now all/DT/all that/DT/that remains/VBZ/remains is/VBZ/is to/TO/to do/VB/do this/DT/this outer/NN/outer loop/NN/loop in/IN/in i/PRP/i itself/NNP/itself. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time for/IN/for the/DT/the outer/NN/outer loop/NN/loop well/RB/well we/PRP/we know/VBP/know the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the body/NN/body of/IN/of that/DT/that outer/NN/outer loop/NN/loop and/CC/and that/IN/that is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so now/RB/now /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be 2/CD/2 plus/CC/plus n/NN/n times/NNS/times whatever/RB/whatever time/NN/time the/DT/the body/NN/body of/IN/of this/DT/this loop/NN/loop takes/NNP/takes. and/CC/and that/IN/that is/VBZ/is nothing/NN/nothing but/CC/but so/RB/so if/IN/if i/PRP/i substitute/VBP/substitute this/DT/this i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get 21/CD/21 n/NN/n squared/VBD/squared plus/RB/plus i/PRP/i will/MD/will get/VB/get a/DT/a 10/CD/10 n/NN/n out/IN/out of/IN/of this/DT/this and/CC/and plus/VBZ/plus i/PRP/i will/MD/will get/VB/get a/DT/a 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the time/NN/time taken/VBN/taken for/IN/for the/DT/the entire/JJ/entire program/NN/program and/NNP/and. in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the time/NN/time taken/VBN/taken for/IN/for our/PRP$/our for/IN/for our/PRP$/our algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something like/IN/like 21/CD/21 n/NN/n cube/NN/cube /,/, total/JJ/total time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be 21/CD/21 n/NN/n cube/NN/cube plus/CC/plus 10/CD/10 n/NN/n square/NN/square plus/CC/plus 2/CD/2 n/NN/n plus/CC/plus 2/CD/2 something/NN/something like/IN/like that/NNP/that. the/DT/the important/JJ/important point/NN/point you/PRP/you will/MD/will see/VB/see are/VBP/are not/NNP/not. in/IN/in fact/NN/fact /,/, these/DT/these very/RB/very numbers/NNS/numbers /,/, but/CC/but the/DT/the fact/NN/fact that/IN/that there/EX/there is/VBZ/is a/DT/a n/NN/n cube/NN/cube term/NN/term in/IN/in all/DT/all this/NNP/this. but/CC/but /,/, anyway/RB/anyway unless/IN/unless i/PRP/i have/VBP/have made/VBN/made a/DT/a mistake/NN/mistake in/IN/in doing/NN/doing this/DT/this arithmetic/JJ/arithmetic the/DT/the expression/NN/expression should/MD/should come/VB/come out/RP/out to/TO/to be/VB/be something/NN/something like/IN/like this/NNP/this. some/DT/some number/NN/number times/NNS/times n/VBP/n cube/NN/cube plus/CC/plus some/DT/some number/NN/number times/NNS/times n/VBP/n square/JJ/square plus/NNS/plus some/DT/some number/NN/number times/NNS/times n/VBP/n plus/RB/plus some/DT/some number/NNP/number. now/RB/now /,/, let/VB/let me/PRP/me ask/VB/ask you/PRP/you what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen if/IN/if i/PRP/i execute/VBP/execute this/DT/this algorithm/NN/algorithm on/IN/on another/DT/another computer/NN/computer which/WDT/which has/VBZ/has a/DT/a different/JJ/different instruction/NN/instruction set/NN/set /,/, what/WP/what well/RB/well change/VBP/change ?/./? well/RB/well the/DT/the time/NN/time required/VBN/required for/IN/for each/DT/each of/IN/of these/DT/these individual/JJ/individual instructions/NNS/instructions could/MD/could change/VB/change /,/, because/IN/because that/DT/that would/MD/would correspond/VB/correspond to/TO/to a/DT/a different/JJ/different number/NN/number of/IN/of basic/JJ/basic instructions/NNS/instructions on/IN/on that/DT/that computer/NNP/computer. there/RB/there might/MD/might be/VB/be some/DT/some intelligent/NN/intelligent compiler/NN/compiler which/WDT/which might/MD/might realize/VB/realize that/IN/that for/IN/for example/NN/example /,/, fetching/NN/fetching once/RB/once you/PRP/you fetch/VBP/fetch this/DT/this then/RB/then storing/VBG/storing it/PRP/it to/TO/to the/DT/the same/JJ/same position/NN/position you/PRP/you do/VBP/do not/RB/not need/VB/need to/TO/to recalculate/VB/recalculate where/WRB/where you/PRP/you are/VBP/are going/VBG/going to/TO/to store/VB/store it/PRP/it something/NN/something like/IN/like that/NNP/that. but/CC/but /,/, the/DT/the important/JJ/important point/NN/point is/VBZ/is that/IN/that no/DT/no compiler/NN/compiler is/VBZ/is going/VBG/going to/TO/to be/VB/be able/JJ/able to/TO/to change/VB/change the/DT/the fact/NN/fact that/IN/that this/DT/this in/IN/in a/DT/a loop/NN/loop must/MD/must execute/VB/execute n/NN/n times/NNP/times. on/IN/on no/DT/no computer/NN/computer and/CC/and with/IN/with no/DT/no compiler/NN/compiler this/DT/this fact/NN/fact is/VBZ/is going/VBG/going to/TO/to change/NNP/change. similarly/RB/similarly /,/, with/IN/with no/DT/no computer/NN/computer and/CC/and with/IN/with no/DT/no compiler/NN/compiler /,/, the/DT/the fact/NN/fact that/IN/that this/DT/this outer/NN/outer the/DT/the second/JJ/second inner/NN/inner most/JJS/most loop/NN/loop is/VBZ/is going/VBG/going to/TO/to execute/VB/execute n/NN/n times/NNS/times is/VBZ/is also/RB/also going/VBG/going to/TO/to change/VB/change or/CC/or that/IN/that the/DT/the first/JJ/first loop/NN/loop is/VBZ/is going/VBG/going to/TO/to execute/VB/execute the/DT/the outer/NN/outer most/JJS/most loop/NN/loop is/VBZ/is going/VBG/going to/TO/to execute/VB/execute n/NN/n times/NNP/times. that/IN/that is/VBZ/is neither/DT/neither going/VBG/going to/TO/to change/NNP/change. so/RB/so /,/, no/DT/no matter/NN/matter where/WRB/where we/PRP/we run/VBP/run this/DT/this program/NN/program on/IN/on what/WP/what compiler/NN/compiler we/PRP/we use/VBP/use the/DT/the time/NN/time taken/VBN/taken is/VBZ/is going/VBG/going to/TO/to involve/VB/involve this/DT/this n/NN/n cube/NN/cube term/NNP/term. so/RB/so /,/, it/PRP/it will/MD/will be/VB/be 21/CD/21 n/NN/n cube/NN/cube or/CC/or it/PRP/it could/MD/could be/VB/be some/DT/some 36/CD/36 n/NN/n cube/NN/cube or/CC/or something/NN/something like/IN/like that/DT/that /,/, but/CC/but there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a n/NN/n cube/NN/cube term/NNP/term. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 23/CD/23 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down sort/NN/sort of/IN/of the/DT/the major/JJ/major conclusion/NNP/conclusion. so/RB/so /,/, the/DT/the main/JJ/main conclusion/NN/conclusion is/VBZ/is that/IN/that the/DT/the time/NN/time is/VBZ/is cubic/JJ/cubic in/IN/in n/NNP/n. so/RB/so /,/, what/WDT/what i/PRP/i mean/VBP/mean what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by cubic/NNP/cubic. let/NN/let me/PRP/me write/VBP/write that/IN/that down/IN/down again/RB/again that/IN/that the/DT/the time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be some/DT/some function/NN/function of/IN/of the/DT/the form/NN/form a/DT/a times/NNS/times n/VBP/n cube/NN/cube plus/CC/plus b/NN/b times/NNS/times n/VBP/n square/JJ/square plus/NNS/plus c/VBP/c times/NNS/times n/VBP/n plus/RB/plus d/NNP/d. we/PRP/we do/VBP/do not/RB/not really/RB/really care/VB/care so/RB/so much/RB/much about/IN/about what/WP/what the/DT/the values/NNS/values of/IN/of a/DT/a b/NN/b c/NN/c d/NN/d are/VBP/are when/WRB/when we/PRP/we say/VBP/say the/DT/the time/NN/time taken/VBN/taken is/VBZ/is cubic/JJ/cubic in/IN/in n/NNP/n. and/CC/and in/IN/in fact/NN/fact /,/, saying/VBG/saying that/IN/that it/PRP/it is/VBZ/is cubic/JJ/cubic in/IN/in n/NN/n provides/VBZ/provides us/PRP/us /,/, precisely/RB/precisely the/DT/the level/NN/level of/IN/of the/DT/the level/NN/level of/IN/of exactness/NN/exactness that/IN/that we/PRP/we are/VBP/are looking/VBG/looking for/NNP/for. because/IN/because /,/, we/PRP/we really/RB/really do/VBP/do not/RB/not know/VB/know /,/, what/WDT/what these/DT/these constants/NNS/constants are/VBP/are going/VBG/going to/TO/to be/VB/be /,/, unless/IN/unless we/PRP/we look/VBP/look at/IN/at the/DT/the precise/JJ/precise architecture/NN/architecture of/IN/of a/DT/a computer/NNP/computer. so/RB/so /,/, if/IN/if we/PRP/we are/VBP/are going/VBG/going to/TO/to analyze/VB/analyze an/DT/an algorithm/NN/algorithm if/IN/if we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to analyze/VB/analyze a/DT/a computer/NN/computer itself/NNP/itself. but/CC/but /,/, if/IN/if we/PRP/we are/VBP/are going/VBG/going to/TO/to restrict/VB/restrict ourselves/NNS/ourselves to/TO/to the/DT/the analysis/NN/analysis of/IN/of the/DT/the algorithm/NN/algorithm itself/PRP/itself then/RB/then all/DT/all that/DT/that we/PRP/we can/MD/can say/VB/say is/VBZ/is that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a n/NN/n cube/NN/cube plus/CC/plus b/NN/b n/NN/n square/NN/square plus/CC/plus c/NN/c n/NN/n plus/CC/plus d/NNP/d. or/CC/or make/VB/make this/DT/this statement/NN/statement which/WDT/which sounds/NNS/sounds almost/RB/almost qualitative/JJ/qualitative which/WDT/which is/VBZ/is that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is cubic/JJ/cubic in/IN/in n/NNP/n. but/CC/but /,/, this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we want/VBP/want to/TO/to be/VB/be saying/VBG/saying in/IN/in this/DT/this course/NNP/course. we/PRP/we want/VBP/want to/TO/to say/VB/say whether/IN/whether the/DT/the time/NN/time taken/VBN/taken is/VBZ/is cubic/JJ/cubic or/CC/or quadratic/JJ/quadratic or/CC/or linear/JJ/linear or/CC/or something/NN/something like/IN/like that/DT/that because/IN/because this/DT/this weak/JJ/weak looking/NN/looking statement/NN/statement is/VBZ/is exactly/RB/exactly the/DT/the kind/NN/kind of/IN/of statement/NN/statement which/WDT/which we/PRP/we can/MD/can justify/VB/justify and/CC/and which/WDT/which we/PRP/we can/MD/can claim/VB/claim about/IN/about all/DT/all possible/JJ/possible computers/NNP/computers. the/DT/the important/JJ/important point/NN/point is/VBZ/is that/IN/that although/IN/although we/PRP/we are/VBP/are making/VBG/making a/DT/a weak/JJ/weak statement/NNP/statement. when/WRB/when we/PRP/we say/VBP/say we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what the/DT/the constant/JJ/constant a/DT/a is/NNP/is. we/PRP/we are/VBP/are making/VBG/making at/IN/at the/DT/the same/JJ/same time/NN/time our/PRP$/our statement/NN/statement is/VBZ/is actually/RB/actually a/DT/a very/RB/very strong/JJ/strong statement/NN/statement /,/, because/IN/because we/PRP/we are/VBP/are saying/VBG/saying this/DT/this about/IN/about all/DT/all computers/NNP/computers. if/IN/if we/PRP/we made/VBD/made on/IN/on down/IN/down this/DT/this a/DT/a to/TO/to be/VB/be 105/CD/105 /,/, then/RB/then that/IN/that statement/NN/statement we/PRP/we would/MD/would have/VB/have to/TO/to make/VB/make about/IN/about a/DT/a specific/JJ/specific computer/NN/computer say/NN/say some/DT/some specific/JJ/specific pentium/NN/pentium whatever/NN/whatever computer/NN/computer or/CC/or some/DT/some other/JJ/other architecture/NN/architecture computer/NN/computer and/CC/and that/IN/that is/VBZ/is not/RB/not what/WP/what we/PRP/we want/VBP/want to/TO/to make/NNP/make. we/PRP/we do/VBP/do not/RB/not want/VB/want to/TO/to talk/VB/talk about/IN/about computers/NNS/computers in/IN/in this/DT/this course/NN/course or/CC/or of/IN/of precise/NN/precise computer/NN/computer architectures/NNS/architectures in/IN/in this/DT/this course/NN/course /,/, but/CC/but we/PRP/we want/VBP/want to/TO/to talk/VB/talk about/IN/about algorithms/NNP/algorithms. and/CC/and therefore/RB/therefore /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to restrict/VB/restrict ourselves/NNS/ourselves to/TO/to making/VBG/making statements/NNS/statements of/IN/of this/DT/this kind/NN/kind that/NNP/that. the/DT/the time/NN/time taken/VBN/taken is/VBZ/is cubical/JJ/cubical and/CC/and or/CC/or quadratic/JJ/quadratic and/CC/and so/RB/so on/NNP/on. and/CC/and our/PRP$/our methodology/NN/methodology is/VBZ/is going/VBG/going to/TO/to be/VB/be similar/JJ/similar to/TO/to what/WP/what we/PRP/we followed/VBD/followed just/RB/just down/NNP/down. we/PRP/we are/VBP/are going/VBG/going to/TO/to execute/VB/execute we/PRP/we are/VBP/are going/VBG/going to/TO/to mentally/RB/mentally think/VB/think about/IN/about how/WRB/how long/JJ/long an/DT/an algorithm/NN/algorithm executes/NNP/executes. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will estimate/VB/estimate the/DT/the time/NN/time is/VBZ/is cubic/JJ/cubic or/CC/or quadratic/JJ/quadratic or/CC/or whatever/NNP/whatever. in/IN/in fact/NN/fact /,/, our/PRP$/our methodology/NN/methodology is/VBZ/is going/VBG/going to/TO/to be/VB/be simpler/JJR/simpler than/IN/than what/WP/what we/PRP/we just/RB/just saw/NNP/saw. because/IN/because now/RB/now we/PRP/we know/VBP/know that/IN/that we/PRP/we are/VBP/are really/RB/really not/RB/not interested/JJ/interested in/IN/in whether/IN/whether it/PRP/it is/VBZ/is 21/CD/21 or/CC/or 2/CD/2 plus/NN/plus n/NN/n or/CC/or whatever/RB/whatever 2/CD/2 plus/NNS/plus n/IN/n square/JJ/square or/CC/or whatever/NNP/whatever. we/PRP/we can/MD/can just/RB/just say/VB/say we/PRP/we will/MD/will just/RB/just ask/VB/ask about/IN/about is/VBZ/is it/PRP/it cubic/JJ/cubic is/VBZ/is it/PRP/it quadratic/NNP/quadratic. so/RB/so and/CC/and will/MD/will take/VB/take it/PRP/it in/IN/in that/DT/that manner/NNP/manner. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 46/CD/46 /CD/) i/PRP/i will/MD/will take/VB/take one/CD/one more/JJR/more example/NN/example /,/, to/TO/to illustrate/VB/illustrate this/DT/this idea/NN/idea of/IN/of analysis/NN/analysis of/IN/of algorithms/NNS/algorithms and/CC/and this/DT/this example/NN/example is/VBZ/is that/IN/that of/IN/of finding/NN/finding the/DT/the median/NNP/median. the/DT/the input/NN/input in/IN/in this/DT/this case/NN/case is/VBZ/is n/VBN/n numbers/NNP/numbers. so/RB/so /,/, let/VB/let us/PRP/us call/MD/call them/PRP/them say/VB/say x/NN/x 1/CD/1 x/NN/x 2/CD/2 all/DT/all the/DT/the way/NN/way till/IN/till x/NN/x n/NN/n and/CC/and our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to find/VB/find out/RP/out the/DT/the median/NNP/median. so/RB/so /,/, the/DT/the median/JJ/median element/NN/element is/VBZ/is the/DT/the element/NN/element which/WDT/which appears/VBZ/appears in/IN/in the/DT/the middle/NN/middle in/IN/in all/DT/all those/DT/those numbers/NNP/numbers. or/CC/or in/IN/in general/JJ/general /,/, it/PRP/it is/VBZ/is defined/VBN/defined as/RB/as that/IN/that element/NN/element which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than utmost/JJS/utmost n/NN/n over/IN/over two/CD/two elements/NNS/elements and/CC/and larger/JJR/larger than/IN/than utmost/JJS/utmost n/NN/n over/IN/over two/CD/two elements/NNP/elements. so/RB/so /,/, let/VB/let us/PRP/us first/RB/first try/VBP/try to/TO/to it/PRP/it is/VBZ/is a/DT/a very/RB/very simple/JJ/simple program/NN/program for/IN/for finding/NN/finding the/DT/the median/NNP/median. this/DT/this is/VBZ/is not/RB/not the/DT/the best/JJS/best possible/JJ/possible program/NN/program /,/, but/CC/but it/PRP/it is/VBZ/is actually/RB/actually it/PRP/it is/VBZ/is a/DT/a very/RB/very simple/JJ/simple program/NNP/program. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 46/CD/46 /CD/) /./. so/RB/so /,/, let/VB/let me/PRP/me indicate/VB/indicate that/NNP/that. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say let/JJ/let me/PRP/me just/RB/just write/VBP/write it/PRP/it separately/RB/separately over/IN/over here/NNP/here. this/DT/this program/NN/program will/MD/will look/VB/look like/IN/like this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us assume/VB/assume that/IN/that the/DT/the input/NN/input that/IN/that is/VBZ/is given/VBN/given to/TO/to us/PRP/us is/VBZ/is stored/VBN/stored in/IN/in this/DT/this array/NN/array x/NNP/x. so/RB/so /,/, the/DT/the idea/NN/idea of/IN/of the/DT/the program/NN/program is/VBZ/is going/VBG/going to/TO/to be/VB/be i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at successive/JJ/successive elements/NNS/elements of/IN/of x/NNP/x. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to check/VB/check whether/IN/whether it/PRP/it satisfies/VBZ/satisfies the/DT/the median/JJ/median definition/NN/definition /,/, what/WP/what ;/:/; that/DT/that means/VBZ/means /,/, is/VBZ/is i/PRP/i am/VBP/am going/VBG/going to/TO/to compare/VB/compare it/PRP/it every/DT/every other/JJ/other element/NNP/element. and/CC/and see/VB/see if/IN/if the/DT/the number/NN/number of/IN/of smaller/JJR/smaller elements/NNS/elements is/VBZ/is utmost/VBN/utmost n/NN/n by/IN/by 2/CD/2 and/CC/and the/DT/the number/NN/number of/IN/of larger/JJR/larger elements/NNS/elements is/VBZ/is also/RB/also utmost/RB/utmost n/VBN/n by/IN/by 2/CD/2. if/IN/if we/PRP/we find/VBP/find that/IN/that both/DT/both of/IN/of these/DT/these conditions/NNS/conditions match/VBP/match then/RB/then we/PRP/we are/VBP/are done/NNP/done. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the code/NN/code which/WDT/which does/VBZ/does this/DT/this because/IN/because we/PRP/we are/VBP/are going/VBG/going to/TO/to say/VB/say n/NN/n equals/NNS/equals length/NN/length of/IN/of x/NNP/x. then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have a/DT/a loop/NN/loop where/WRB/where we/PRP/we consider/VBP/consider each/DT/each element/NN/element in/IN/in turn/NNP/turn. so/RB/so /,/, for/IN/for i/PRP/i equals/VBZ/equals 1/CD/1 to/TO/to n/VB/n /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to say/VB/say the/DT/the number/NN/number of/IN/of smaller/JJR/smaller elements/NNS/elements is/VBZ/is equal/JJ/equal to/TO/to 0/CD/0. we/PRP/we are/VBP/are going/VBG/going to/TO/to initialize/VB/initialize the/DT/the number/NN/number of/IN/of larger/JJR/larger elements/NNS/elements to/TO/to also/RB/also 0/CD/0. then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to check/NNP/check. so/RB/so now/RB/now /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check the/DT/the i/PRP/i th/VBP/th element/JJ/element with/IN/with the/DT/the every/NN/every j/NN/j th/NN/th element/NNP/element. so/RB/so /,/, for/IN/for j/NN/j equal/JJ/equal to/TO/to 1/CD/1 to/TO/to n/VB/n /,/, if/IN/if x/NN/x of/IN/of i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than x/NN/x of/IN/of j/NN/j then/RB/then we/PRP/we will/MD/will increment/VB/increment smaller/NNP/smaller. if/IN/if x/NN/x of/IN/of i/PRP/i is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than x/NN/x of/IN/of j/NNP/j. then/RB/then /,/, we/PRP/we have/VBP/have found/VBN/found an/DT/an element/NN/element which/WDT/which is/VBZ/is larger/NNP/larger. and/CC/and therefore/RB/therefore /,/, will/MD/will increment/VB/increment the/DT/the count/NN/count for/IN/for larger/NNP/larger. that/WDT/that ends/VBZ/ends this/DT/this for/IN/for loop/NN/loop and/CC/and at/IN/at this/DT/this point/NN/point we/PRP/we will/MD/will check/VB/check /,/, whether/IN/whether we/PRP/we have/VBP/have median/JJ/median in/IN/in fact/NNP/fact. so/RB/so /,/, the/DT/the check/NN/check is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something like/IN/like this/NNP/this. if/IN/if smaller/JJR/smaller is/VBZ/is less/JJR/less than/IN/than n/NN/n b/NN/b y/NN/y 2/CD/2 and/CC/and larger/JJR/larger is/VBZ/is also/RB/also lesser/JJR/lesser than/IN/than n/NN/n by/IN/by 2/CD/2 /,/, then/RB/then exit/NNP/exit. because/IN/because /,/, we/PRP/we have/VBP/have found/VBN/found /,/, otherwise/RB/otherwise we/PRP/we repeat/NNP/repeat. we/PRP/we repeat/VBP/repeat with/IN/with the/DT/the rest/NN/rest of/IN/of the/DT/the loop/NNP/loop. so/RB/so /,/, this/DT/this matches/NNS/matches this/DT/this for/IN/for over/IN/over here/NNP/here. that/IN/that is/VBZ/is the/DT/the very/JJ/very simple/NN/simple algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 50/CD/50 /CD/) now/RB/now /,/, the/DT/the question/NN/question is/VBZ/is how/WRB/how do/VBP/do we/PRP/we analyze/VB/analyze it/PRP/it ?/./? so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do that/DT/that analysis/NN/analysis in/IN/in the/DT/the abbreviated/VBN/abbreviated style/NN/style which/WDT/which i/PRP/i indicated/NNP/indicated. so/RB/so /,/, again/RB/again we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the inner/NN/inner most/JJS/most loop/NNP/loop. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the inner/NN/inner most/JJS/most loop/NN/loop /,/, how/WRB/how long/JJ/long does/VBZ/does this/DT/this take/NN/take the/DT/the body/NN/body of/IN/of this/DT/this take/NNP/take. well/RB/well the/DT/the body/NN/body of/IN/of this/DT/this is/VBZ/is going/VBG/going to/TO/to take/VB/take some/DT/some c/NN/c steps/NNP/steps. i/PRP/i will/MD/will leave/VB/leave it/PRP/it to/TO/to you/PRP/you as/IN/as an/DT/an exercise/NN/exercise to/TO/to show/VB/show that/IN/that c/NN/c further/RB/further will/MD/will be/VB/be no/RB/no larger/JJR/larger than/IN/than 7/CD/7. but/CC/but /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to worry/VB/worry about/IN/about whether/IN/whether it/PRP/it is/VBZ/is 7/CD/7 or/CC/or 8/CD/8 or/CC/or some/DT/some or/CC/or whatever/RB/whatever it/PRP/it is/VBZ/is /,/, but/CC/but i/PRP/i will/MD/will just/RB/just say/VB/say it/PRP/it is/VBZ/is some/DT/some c/NNP/c. so/RB/so then/RB/then /,/, what/WDT/what can/MD/can i/PRP/i say/VB/say about/IN/about the/DT/the time/NN/time taken/VBN/taken for/IN/for a/DT/a single/JJ/single execution/NN/execution of/IN/of this/DT/this loop/NNP/loop. well/RB/well it/PRP/it executes/VBZ/executes n/NN/n times/NNS/times and/CC/and so/RB/so i/PRP/i can/MD/can write/VB/write down/RP/down this/DT/this time/NN/time as/IN/as being/VBG/being say/NN/say some/DT/some say/VBP/say linear/JJ/linear in/IN/in n/NN/n /,/, what/WP/what does/VBZ/does linear/JJ/linear in/IN/in n/NN/n mean/NNP/mean. it/PRP/it means/VBZ/means that/IN/that it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be some/DT/some a/DT/a n/NN/n plus/CC/plus b/NN/b sometime/NN/sometime which/WDT/which is/VBZ/is a/DT/a n/NN/n plus/CC/plus b/NNP/b. now/RB/now /,/, we/PRP/we will/MD/will focus/VB/focus our/PRP$/our attention/NN/attention on/IN/on this/DT/this outer/NN/outer loop/NN/loop /,/, how/WRB/how many/JJ/many times/NNS/times is/VBZ/is this/DT/this outer/NN/outer loop/NN/loop going/VBG/going to/TO/to be/VB/be executed/NNP/executed. well/RB/well we/PRP/we said/VBD/said that/IN/that it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be executed/VBN/executed utmost/NN/utmost n/NN/n times/NNS/times /,/, but/CC/but it/PRP/it could/MD/could execute/VB/execute fewer/JJR/fewer than/IN/than n/NN/n times/NNS/times as/RB/as well/NNP/well. but/CC/but /,/, let/VB/let us/PRP/us make/VB/make a/DT/a simple/JJ/simple assumption/NN/assumption a/DT/a simplifying/NN/simplifying assumption/NN/assumption and/CC/and say/VB/say that/IN/that it/PRP/it never/RB/never exits/VBZ/exits early/JJ/early or/CC/or in/IN/in the/DT/the worse/NN/worse case/NN/case or/CC/or let/VB/let us/PRP/us say/VB/say since/IN/since we/PRP/we do/VBP/do not/RB/not know/VB/know whether/IN/whether it/PRP/it exits/VBZ/exits earlier/JJR/earlier or/CC/or not/RB/not we/PRP/we will/MD/will just/RB/just calculate/VB/calculate an/DT/an upper/JJ/upper bound/NNP/bound. so/RB/so /,/, now/RB/now /,/, we/PRP/we are/VBP/are in/IN/in the/DT/the business/NN/business of/IN/of calculating/NN/calculating an/DT/an upper/JJ/upper bound/NNP/bound. since/IN/since /,/, we/PRP/we are/VBP/are not/RB/not being/VBG/being too/RB/too clever/RB/clever in/IN/in analyzing/NN/analyzing when/WRB/when it/PRP/it will/MD/will when/VB/when it/PRP/it will/MD/will exit/VB/exit early/RB/early if/IN/if it/PRP/it will/MD/will exit/VB/exit early/NNP/early. so/RB/so /,/, if/IN/if we/PRP/we make/VBP/make this/DT/this assumption/NN/assumption that/IN/that it/PRP/it does/VBZ/does not/RB/not exit/VB/exit early/JJ/early /,/, then/RB/then the/DT/the time/NN/time taken/VBN/taken for/IN/for this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be linear/JJ/linear in/IN/in the/DT/the time/NN/time taken/VBN/taken for/IN/for the/DT/the body/NN/body of/IN/of this/DT/this loop/NNP/loop. but/CC/but /,/, that/IN/that itself/PRP/itself is/VBZ/is linear/JJ/linear in/IN/in n/NN/n and/CC/and therefore/RB/therefore /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for this/DT/this loop/NN/loop is/VBZ/is going/VBG/going to/TO/to be/VB/be quadratic/JJ/quadratic in/IN/in n/NNP/n. but/CC/but /,/, that/IN/that finishes/NNS/finishes the/DT/the analysis/NN/analysis of/IN/of the/DT/the entire/JJ/entire algorithm/NNP/algorithm. because/IN/because in/IN/in fact/NN/fact /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for the/DT/the entire/JJ/entire algorithm/NN/algorithm will/MD/will have/VB/have just/RB/just this/DT/this extra/JJ/extra step/NN/step and/CC/and therefore/RB/therefore /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is going/VBG/going to/TO/to be/VB/be quadratic/JJ/quadratic in/IN/in n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 07/CD/07 /CD/) so/RB/so /,/, what/WDT/what have/VBP/have we/PRP/we concluded/VBD/concluded ?/./? we/PRP/we have/VBP/have concluded/VBN/concluded that/IN/that the/DT/the time/NN/time is/VBZ/is utmost/VBN/utmost quadratic/JJ/quadratic in/IN/in n/NNP/n. so/RB/so /,/, remember/NN/remember again/RB/again the/DT/the time/NN/time when/WRB/when i/PRP/i say/VBP/say the/DT/the time/NN/time i/PRP/i mean/VBP/mean a/DT/a function/NNP/function. so/RB/so that/IN/that function/NN/function is/VBZ/is smaller/JJR/smaller than/IN/than some/DT/some function/NN/function which/WDT/which is/VBZ/is quadratic/JJ/quadratic in/IN/in n/NNP/n. that/IN/that is/VBZ/is what/WP/what i/PRP/i am/VBP/am saying/VBG/saying over/IN/over here/RB/here /,/, what/WDT/what do/VBP/do we/PRP/we need/VBP/need to/TO/to do/VB/do ?/./? in/IN/in order/NN/order to/TO/to complete/VB/complete this/DT/this analysis/NN/analysis we/PRP/we need/VBP/need to/TO/to ask/VB/ask is/VBZ/is there/RB/there a/DT/a lower/JJR/lower bound/NN/bound we/PRP/we can/MD/can actually/RB/actually put/NNP/put. so/RB/so for/IN/for that/DT/that /,/, we/PRP/we need/VBP/need to/TO/to we/PRP/we need/VBP/need to/TO/to figure/VB/figure out/RP/out what/WP/what happens/NNS/happens to/TO/to this/DT/this exit/NN/exit condition/NNP/condition. is/VBZ/is there/RB/there a/DT/a situation/NN/situation in/IN/in which/WDT/which this/DT/this exit/NN/exit condition/NN/condition is/VBZ/is not/RB/not really/RB/really met/VB/met or/CC/or met/VB/met very/RB/very /,/, very/RB/very few/JJ/few times/NNS/times ?/./? /NN/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 04/CD/04 /CD/) so/RB/so in/IN/in fact/NN/fact /,/, i/PRP/i will/MD/will leave/VB/leave this/DT/this as/IN/as an/DT/an exercise/NN/exercise for/IN/for you/PRP/you and/CC/and that/IN/that exercise/NN/exercise is/VBZ/is if/IN/if x/NN/x 1/CD/1 x/NN/x 2/CD/2 to/TO/to x/VB/x n/NN/n is/VBZ/is the/DT/the input/NNP/input. and/CC/and if/IN/if this/DT/this last/JJ/last number/NN/number happens/NNS/happens to/TO/to be/VB/be the/DT/the median/JJ/median and/CC/and all/DT/all other/JJ/other numbers/NNS/numbers are/VBP/are distinct/NNP/distinct. then/RB/then /,/, this/DT/this exit/NN/exit condition/NN/condition will/MD/will be/VB/be met/VBN/met only/RB/only at/IN/at the/DT/the very/RB/very end/NNP/end. and/CC/and then/RB/then therefore/RB/therefore /,/, we/PRP/we will/MD/will say/VB/say that/IN/that for/IN/for this/DT/this particular/JJ/particular instance/NN/instance the/DT/the time/NN/time taken/VBN/taken is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at least/JJS/least quadratic/JJ/quadratic in/IN/in n/NN/n as/IN/as well/NNP/well. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our conclusion/NNP/conclusion. it/PRP/it is/VBZ/is at/IN/at least/JJS/least quadratic/JJ/quadratic as/IN/as well/RB/well as/IN/as utmost/NN/utmost quadratic/NNP/quadratic. this/DT/this does/VBZ/does not/RB/not mean/VB/mean for/IN/for every/DT/every instance/NN/instance it/PRP/it takes/VBZ/takes time/NN/time at/IN/at least/JJS/least quadratic/NNP/quadratic. this/DT/this just/RB/just means/VBZ/means for/IN/for the/DT/the worst/JJS/worst instance/NN/instance it/PRP/it takes/VBZ/takes time/NN/time at/IN/at least/JJS/least quadratic/NNP/quadratic. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 00/CD/00 /CD/) so/RB/so /,/, let/VB/let me/PRP/me now/RB/now conclude/VBP/conclude this/DT/this lecture/NNP/lecture. so/RB/so /,/, what/WDT/what have/VBP/have seen/VBN/seen in/IN/in this/DT/this lecture/NN/lecture ?/./? in/IN/in these/DT/these two/CD/two lectures/NNS/lectures well/RB/well we/PRP/we have/VBP/have seen/VBN/seen in/IN/in the/DT/the ram/NN/ram model/NNP/model. then/RB/then /,/, we/PRP/we have/VBP/have indicated/VBN/indicated an/DT/an analysis/NN/analysis strategy/NNP/strategy. this/DT/this strategy/NN/strategy is/VBZ/is based/VBN/based on/IN/on the/DT/the notion/NN/notion of/IN/of worst/JJ/worst case/NN/case analysis/NNP/analysis. we/PRP/we said/VBD/said that/IN/that the/DT/the ram/NN/ram model/NN/model is/VBZ/is not/RB/not equal/JJ/equal to/TO/to real/JJ/real computers/NNP/computers. but/CC/but /,/, conclusions/NNS/conclusions about/IN/about the/DT/the form/NN/form of/IN/of t/NN/t of/IN/of n/NN/n are/VBP/are still/RB/still valid/NNP/valid. and/CC/and that/IN/that is/VBZ/is what/WP/what is/VBZ/is going/VBG/going to/TO/to be/VB/be of/IN/of importance/NN/importance ?/./? and/CC/and finally/RB/finally /,/, last/JJ/last point/NNP/point. for/IN/for most/JJS/most of/IN/of the/DT/the most/RBS/most of/IN/of the/DT/the course/NN/course this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be our/PRP$/our framework/NNP/framework. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 02/CD/02 /CD/) we/PRP/we will/MD/will consider/VB/consider worst/JJ/worst case/NN/case /,/, but/CC/but once/RB/once in/IN/in a/DT/a while/NN/while we/PRP/we will/MD/will also/RB/also look/VB/look at/IN/at the/DT/the average/NN/average case/NNP/case. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just leave/VBP/leave it/PRP/it leave/VBP/leave you/PRP/you with/IN/with this/DT/this summary/NN/summary and/CC/and that/IN/that is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the lecture/NNP/lecture. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 4/CD/4 asymptotic/JJ/asymptotic notation/NN/notation welcome/NN/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. our/PRP$/our topic/JJ/topic today/NN/today is/VBZ/is asymptotic/JJ/asymptotic notation/NNP/notation. let/NN/let me/PRP/me begin/VBP/begin by/IN/by setting/NN/setting down/IN/down this/DT/this topic/JJ/topic /,/, in/IN/in the/DT/the context/NN/context of/IN/of our/PRP$/our overall/JJ/overall course/NN/course goals/NNP/goals. we/PRP/we said/VBD/said last/JJ/last time/NN/time that/IN/that one/CD/one of/IN/of the/DT/the main/JJ/main course/NN/course goals/NNS/goals was/VBD/was to/TO/to well/RB/well first/RB/first design/JJ/design algorithms/NNP/algorithms. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 10/CD/10 /CD/) and/CC/and then/RB/then /,/, we/PRP/we want/VBP/want to/TO/to analyze/VB/analyze their/PRP$/their time/NNP/time. analyze/NN/analyze the/DT/the time/NN/time taken/VBN/taken on/IN/on the/DT/the ram/NN/ram model/NN/model /,/, which/WDT/which we/PRP/we defined/NNP/defined. we/PRP/we also/RB/also said/VBD/said that/IN/that the/DT/the results/NNS/results of/IN/of the/DT/the analysis/NN/analysis are/VBP/are not/RB/not directly/RB/directly applicable/NNP/applicable. so/RB/so /,/, there/EX/there is/VBZ/is some/DT/some care/NN/care needed/VBN/needed in/IN/in understanding/NN/understanding /,/, how/WRB/how to/TO/to interpret/VB/interpret the/DT/the time/NN/time taken/VBN/taken on/IN/on the/DT/the ram/NN/ram model/NN/model ?/./? and/CC/and how/WRB/how to/TO/to use/VB/use that/IN/that predict/NN/predict /,/, what/WP/what happens/NNS/happens on/IN/on other/JJ/other computers/NNP/computers. so/IN/so /,/, for/IN/for example/NN/example /,/, so/RB/so in/IN/in all/DT/all this/DT/this we/PRP/we need/VBP/need some/DT/some level/NN/level of/IN/of /,/, we/PRP/we need/VBP/need to/TO/to be/VB/be a/DT/a little/RB/little bit/NN/bit imprecise/NNP/imprecise. we/PRP/we need/VBP/need to/TO/to throw/VB/throw away/RP/away some/DT/some details/NNS/details of/IN/of our/PRP$/our analysis/NN/analysis /,/, in/IN/in order/NN/order to/TO/to predict/VB/predict what/WP/what happens/NNS/happens on/IN/on other/JJ/other computers/NNP/computers. so/IN/so /,/, the/DT/the entire/JJ/entire analysis/NN/analysis or/CC/or what/WP/what i/PRP/i really/RB/really mean/JJ/mean the/DT/the entire/JJ/entire detailed/JJ/detailed analysis/NN/analysis not/RB/not applicable/JJ/applicable to/TO/to other/JJ/other computers/NNP/computers. we/PRP/we said/VBD/said that/IN/that suppose/NN/suppose the/DT/the time/NN/time taken/VBN/taken in/IN/in the/DT/the ram/NN/ram was/VBD/was something/NN/something like/IN/like say/NN/say 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n square/NN/square plus/CC/plus 7/CD/7. then/RB/then /,/, all/DT/all that/DT/that we/PRP/we can/MD/can say/VB/say for/IN/for other/JJ/other computers/NNS/computers is/VBZ/is that/IN/that the/DT/the time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be cubic/JJ/cubic in/IN/in n/NNP/n. however/RB/however /,/, the/DT/the same/JJ/same conclusion/NN/conclusion would/MD/would be/VB/be arrived/VBN/arrived at/IN/at say/NN/say of/IN/of the/DT/the time/NN/time was/VBD/was 2/CD/2 n/NN/n cube/NN/cube plus/CC/plus 3/CD/3 n/NN/n plus/CC/plus 79/CD/79. even/RB/even here/RB/here /,/, our/PRP$/our interpretation/NN/interpretation our/PRP$/our conclusions/NNS/conclusions for/IN/for the/DT/the computers/NNS/computers at/IN/at large/JJ/large would/MD/would be/VB/be that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is only/RB/only cubic/JJ/cubic in/IN/in n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what our/PRP$/our conclusions/NNS/conclusions will/MD/will be/VB/be /,/, for/IN/for any/DT/any computer/NN/computer or/CC/or all/DT/all computers/NNP/computers. so/RB/so /,/, you/PRP/you see/VBP/see that/IN/that we/PRP/we start/VBP/start off/RP/off with/IN/with the/DT/the precise/JJ/precise number/NN/number over/IN/over here/NNP/here. but/CC/but /,/, over/IN/over here/RB/here we/PRP/we are/VBP/are going/VBG/going down/RB/down to/TO/to a/DT/a very/RB/very rough/JJ/rough statement/NNP/statement. and/CC/and in/IN/in some/DT/some sense/NN/sense /,/, we/PRP/we are/VBP/are saying/VBG/saying in/IN/in all/DT/all this/DT/this that/WDT/that this/DT/this function/NN/function /,/, this/DT/this expression/NN/expression which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to think/VB/think of/IN/of is/VBZ/is a/DT/a function/NN/function in/IN/in n/NNP/n. n/NN/n is/VBZ/is the/DT/the problem/NN/problem size/NNP/size. so/RB/so /,/, this/DT/this expression/NN/expression 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n square/NN/square plus/CC/plus 7/CD/7. and/CC/and this/DT/this expression/NN/expression or/CC/or this/DT/this function/NN/function /,/, 2/CD/2 n/NN/n cube/NN/cube plus/CC/plus 3/CD/3 n/NN/n plus/CC/plus 79/CD/79 are/VBP/are really/RB/really in/IN/in the/DT/the same/JJ/same class/NNP/class. so/IN/so /,/, you/PRP/you want/VBP/want to/TO/to define/VB/define the/DT/the notion/NN/notion of/IN/of classes/NNS/classes of/IN/of functions/NNP/functions. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 07/CD/07 /CD/) so/RB/so /,/, the/DT/the idea/NN/idea is/VBZ/is that/IN/that we/PRP/we want/VBP/want to/TO/to put/VB/put functions/NNS/functions in/IN/in the/DT/the same/JJ/same class/NN/class and/CC/and really/RB/really think/VBP/think about/IN/about the/DT/the entire/JJ/entire class/NNP/class. so/RB/so /,/, our/PRP$/our conclusion/NN/conclusion will/MD/will be/VB/be that/IN/that instead/RB/instead of/IN/of saying/VBG/saying that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n square/NN/square plus/CC/plus 7/CD/7. we/PRP/we really/RB/really want/VBP/want to/TO/to say/VB/say something/NN/something like/IN/like cubic/JJ/cubic /,/, but/CC/but we/PRP/we want/VBP/want to/TO/to be/VB/be a/DT/a lot/NN/lot more/RBR/more systematic/JJ/systematic and/CC/and formal/JJ/formal about/IN/about it/NNP/it. so/RB/so /,/, that/IN/that is/VBZ/is really/RB/really the/DT/the goal/NN/goal of/IN/of today/NN/today ?/./? s/NNS/s lecture/NNP/lecture. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to develop/VB/develop the/DT/the notation/NN/notation /,/, which/WDT/which allows/VBZ/allows us/PRP/us to/TO/to talk/VB/talk nicely/RB/nicely about/IN/about classes/NNS/classes of/IN/of functions/NNP/functions. so/RB/so /,/, asymptotic/JJ/asymptotic notation/NN/notation /,/, so/RB/so is/VBZ/is a/DT/a formal/JJ/formal way/NN/way or/CC/or formal/JJ/formal notation/NN/notation to/TO/to speak/VB/speak about/IN/about functions/NNS/functions and/CC/and classify/VB/classify them/NNP/them. asymptotic/JJ/asymptotic analysis/NN/analysis refers/NNS/refers to/TO/to the/DT/the question/NN/question of/IN/of classifying/VBG/classifying functions/NNS/functions or/CC/or classifying/VBG/classifying the/DT/the behavior/NN/behavior of/IN/of anything/NN/anything /,/, but/CC/but in/IN/in this/DT/this not/RB/not too/RB/too precisely/RB/precisely /,/, but/CC/but by/IN/by putting/NN/putting them/PRP/them into/IN/into classes/NNP/classes. so/RB/so /,/, let/VB/let me/PRP/me start/VB/start out/RP/out by/IN/by writing/NN/writing down/IN/down what/WP/what do/VBP/do /,/, we/PRP/we need/VBP/need from/IN/from the/DT/the classes/NNS/classes /,/, that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to define/NNP/define. so/RB/so /,/, we/PRP/we want/VBP/want really/RB/really two/CD/two kinds/NNS/kinds of/IN/of features/NNP/features. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 05/CD/05 /CD/) so/RB/so one/CD/one /,/, we/PRP/we would/MD/would like/VB/like to/TO/to put/VB/put functions/NNS/functions such/JJ/such as/IN/as say/NN/say 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n square/NN/square plus/CC/plus 17/CD/17 and/CC/and 2/CD/2 n/NN/n cube/NN/cube plus/CC/plus 3/CD/3 n/NN/n plus/CC/plus 79/CD/79 /,/, should/MD/should belong/VB/belong to/TO/to the/DT/the same/JJ/same class/NNP/class. because/IN/because /,/, we/PRP/we said/VBD/said that/IN/that in/IN/in some/DT/some sense/NN/sense we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be classifying/VBG/classifying these/DT/these as/IN/as cubic/NNP/cubic. and/CC/and we/PRP/we want/VBP/want them/PRP/them to/TO/to get/VB/get together/NNP/together. another/DT/another way/NN/way of/IN/of saying/VBG/saying this/DT/this is/VBZ/is that/IN/that constant/JJ/constant multipliers/NNS/multipliers should/MD/should be/VB/be ignored/NNP/ignored. so/RB/so /,/, the/DT/the constant/NN/constant multiplier/NN/multiplier over/IN/over here/RB/here is/VBZ/is 10/CD/10. the/DT/the constant/JJ/constant multiplier/NN/multiplier over/IN/over here/RB/here is/VBZ/is 2/CD/2. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to ignore/VB/ignore that/NNP/that. and/CC/and that/IN/that is/VBZ/is our/PRP$/our desire/NNP/desire. because/IN/because /,/, eventually/RB/eventually what/WP/what we/PRP/we can/MD/can really/RB/really say/VB/say is/VBZ/is that/IN/that /,/, the/DT/the time/NN/time taken/VBN/taken on/IN/on the/DT/the ram/NN/ram is/VBZ/is this/NNP/this. and/CC/and the/DT/the time/NN/time taken/VBN/taken on/IN/on any/DT/any computer/NN/computer has/VBZ/has to/TO/to have/VB/have the/DT/the form/NN/form /,/, like/IN/like something/NN/something times/NNS/times n/VBP/n cube/NNP/cube. so/RB/so /,/, we/PRP/we want/VBP/want a/DT/a class/NN/class notation/NN/notation /,/, which/WDT/which allows/VBZ/allows us/PRP/us to/TO/to nicely/RB/nicely ignore/VB/ignore constant/JJ/constant multipliers/NNP/multipliers. our/PRP$/our class/NN/class notation/NN/notation should/MD/should also/RB/also really/RB/really worry/JJ/worry about/IN/about /,/, what/WP/what happens/NNS/happens as/IN/as n/NN/n tends/NNS/tends to/TO/to infinity/NNP/infinity. so/RB/so /,/, we/PRP/we should/MD/should give/VB/give more/RBR/more importance/NN/importance to/TO/to behavior/VB/behavior as/IN/as n/NN/n tends/NNS/tends to/TO/to infinity/NNP/infinity. so/RB/so /,/, it/PRP/it is/VBZ/is also/RB/also seen/VBN/seen in/IN/in this/DT/this example/NN/example itself/PRP/itself as/IN/as n/NN/n tends/NNS/tends to/TO/to infinity/NNP/infinity. really/RB/really the/DT/the 5/CD/5 n/NN/n square/NN/square plus/CC/plus 17/CD/17 and/CC/and this/DT/this 3/CD/3 n/NN/n plus/CC/plus 79/CD/79 /,/, these/DT/these two/CD/two parts/NNS/parts of/IN/of these/DT/these functions/NNS/functions will/MD/will go/VB/go out/NNP/out. and/CC/and therefore/RB/therefore /,/, we/PRP/we will/MD/will really/RB/really be/VB/be worrying/VBG/worrying about/IN/about 10/CD/10 n/NN/n cube/NN/cube versus/VBZ/versus 2/CD/2 n/NN/n cube/NNP/cube. and/CC/and then/RB/then /,/, out/IN/out first/JJ/first property/NN/property or/CC/or first/JJ/first feature/NN/feature which/WDT/which we/PRP/we said/VBD/said /,/, we/PRP/we want/VBP/want in/IN/in our/PRP$/our class/NN/class definition/NN/definition will/MD/will take/VB/take over/NNP/over. and/CC/and it/PRP/it will/MD/will say/VB/say that/IN/that /,/, really/RB/really 10/CD/10 n/NN/n cube/NN/cube and/CC/and 2/CD/2 n/NN/n cube/NN/cube are/VBP/are really/RB/really the/DT/the same/JJ/same thing/NNP/thing. so/IN/so /,/, that/IN/that is/VBZ/is the/DT/the spirit/NNP/spirit. so/RB/so /,/, we/PRP/we want/VBP/want a/DT/a notation/NN/notation a/DT/a class/NN/class notation/NN/notation /,/, which/WDT/which will/MD/will allow/VB/allow us/PRP/us to/TO/to conclude/VB/conclude that/IN/that say/NN/say functions/NNS/functions of/IN/of this/DT/this kind/NN/kind are/VBP/are really/RB/really similar/JJ/similar or/CC/or are/VBP/are in/IN/in the/DT/the same/JJ/same class/NNP/class. so/IN/so /,/, let/VB/let me/PRP/me give/VB/give an/DT/an outline/NN/outline of/IN/of today/NN/today ?/./? s/NNS/s lecture/NNP/lecture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 43/CD/43 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define three/CD/three main/JJ/main kinds/NNS/kinds of/IN/of notation/NN/notation today/NNP/today. so/RB/so /,/, one/CD/one is/VBZ/is the/DT/the theta/NN/theta notation/NNP/notation. one/CD/one is/VBZ/is the/DT/the o/NN/o notation/NNP/notation. this/DT/this is/VBZ/is the/DT/the capital/NN/capital or/CC/or the/DT/the big/JJ/big o/NNP/o. and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is the/DT/the omega/NN/omega notation/NNP/notation. and/CC/and these/DT/these will/MD/will define/VB/define function/NN/function classes/NNP/classes. and/CC/and they/PRP/they will/MD/will do/VB/do exactly/RB/exactly /,/, what/WDT/what we/PRP/we said/VBD/said we/PRP/we want/NNP/want. and/CC/and we/PRP/we will/MD/will have/VB/have lots/NNS/lots of/IN/of examples/NNS/examples throughout/NNP/throughout. but/CC/but /,/, at/IN/at the/DT/the end/NN/end we/PRP/we will/MD/will also/RB/also have/VB/have a/DT/a series/NN/series of/IN/of examples/NNP/examples. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go in/IN/in order/NNP/order. and/CC/and let/VB/let me/PRP/me start/VB/start off/RP/off with/IN/with the/DT/the theta/NN/theta notation/NNP/notation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 38/CD/38 /CD/) so/RB/so /,/, in/IN/in what/WP/what follows/VBZ/follows we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have functions/NNS/functions /,/, say/VBP/say something/NN/something like/IN/like f/NN/f and/CC/and g/NNP/g. and/CC/and these/DT/these functions/NNS/functions are/VBP/are always/RB/always going/VBG/going to/TO/to be/VB/be say/VB/say non-negative/JJ/non-negative functions/NNS/functions /,/, which/WDT/which will/MD/will take/VB/take non/NN/non negative/JJ/negative values/NNS/values functions/NNS/functions of/IN/of non/NN/non negative/JJ/negative arguments/NNP/arguments. this/DT/this is/VBZ/is natural/JJ/natural in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about time/NN/time or/CC/or may/MD/may be/VB/be sometimes/RB/sometimes the/DT/the memory/NN/memory or/CC/or any/DT/any kind/NN/kind of/IN/of resource/NNP/resource. and/CC/and these/DT/these values/NNS/values will/MD/will not/RB/not really/RB/really /,/, there/EX/there would/MD/would not/RB/not be/VB/be any/DT/any occasion/NN/occasion when/WRB/when functions/NNS/functions will/MD/will need/VB/need to/TO/to take/VB/take negative/JJ/negative values/NNP/values. so/RB/so /,/, now/RB/now theta/VBP/theta of/IN/of g/NN/g where/WRB/where remember/NN/remember g/NN/g is/VBZ/is a/DT/a function/NN/function /,/, is/VBZ/is the/DT/the following/VBG/following class/NNP/class. so/RB/so /,/, it/PRP/it is/VBZ/is the/DT/the class/NN/class of/IN/of all/DT/all functions/NNS/functions f/NN/f where/NNP/where. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, f/NN/f is/VBZ/is a/DT/a non/NN/non negative/JJ/negative function/NN/function such/JJ/such that/IN/that /,/, there/EX/there exists/NNS/exists constant/VBP/constant c/NN/c 1/CD/1 c/NN/c 2/CD/2 and/CC/and n/NN/n naught/NNP/naught. such/JJ/such that/IN/that c/NN/c 1/CD/1 times/NNS/times g/VBP/g of/IN/of n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to f/NN/f of/IN/of n/NN/n less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to c/VB/c 2/CD/2 times/NNS/times g/VBP/g of/IN/of n/NNP/n. and/CC/and this/DT/this is/VBZ/is true/JJ/true /,/, not/RB/not necessarily/RB/necessarily for/IN/for all/DT/all values/NNS/values of/IN/of n/NN/n /,/, but/CC/but certainly/RB/certainly for/IN/for n/NN/n greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to n/VB/n naught/NNP/naught. this/DT/this is/VBZ/is bit/NN/bit of/IN/of a/DT/a big/JJ/big definition/NNP/definition. but/CC/but /,/, let/VB/let me/PRP/me just/RB/just indicate/VBP/indicate the/DT/the spirit/NN/spirit of/IN/of it/NNP/it. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to the/DT/the properties/NNS/properties that/WDT/that we/PRP/we wanted/NNP/wanted. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that whenever/NN/whenever whatever/NN/whatever class/NN/class structure/NN/structure we/PRP/we defined/VBD/defined /,/, should/MD/should give/VB/give importance/NN/importance to/TO/to behavior/VB/behavior as/IN/as n/NN/n tends/NNS/tends to/TO/to infinity/NNP/infinity. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the part/NN/part of/IN/of the/DT/the behavior/NNP/behavior. this/DT/this is/VBZ/is the/DT/the part/NN/part of/IN/of that/DT/that requirement/NNP/requirement. we/PRP/we are/VBP/are saying/VBG/saying that/IN/that for/IN/for /,/, only/RB/only that/IN/that we/PRP/we are/VBP/are only/RB/only really/RB/really bothered/VBN/bothered about/IN/about /,/, what/WP/what happens/NNS/happens as/IN/as n/NN/n is/VBZ/is bigger/JJR/bigger than/IN/than some/DT/some n/NN/n naught/NNP/naught. so/RB/so /,/, we/PRP/we are/VBP/are not/RB/not worried/VBN/worried about/IN/about smaller/JJR/smaller values/NNS/values of/IN/of n/NNP/n. then/RB/then we/PRP/we said/VBD/said that/IN/that we/PRP/we should/MD/should really/RB/really not/RB/not be/VB/be worrying/VBG/worrying so/RB/so much/RB/much about/IN/about constant/JJ/constant multipliers/NNP/multipliers. so/RB/so /,/, this/DT/this is/VBZ/is also/RB/also what/WP/what is/VBZ/is going/VBG/going on/IN/on over/IN/over here/NNP/here. so/RB/so /,/, it/PRP/it says/VBZ/says that/IN/that we/PRP/we want/VBP/want f/NN/f of/IN/of n/NN/n to/TO/to be/VB/be sandwiched/VBN/sandwiched between/IN/between c/NN/c 1/CD/1 time/NN/time g/NN/g of/IN/of n/NN/n and/CC/and c/NN/c 2/CD/2 times/NNS/times g/VBP/g of/IN/of n/NNP/n. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw a/DT/a picture/NN/picture here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 35/CD/35 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is where/WRB/where i/PRP/i plot/VBP/plot the/DT/the function/NN/function values/NNS/values and/CC/and this/DT/this is/VBZ/is n/NNP/n. then/RB/then /,/, c/NN/c 1/CD/1 times/NNS/times g/VBP/g of/IN/of n/NN/n will/MD/will look/VB/look something/NN/something like/IN/like this/NNP/this. say/VBP/say in/IN/in general/JJ/general /,/, that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something like/NNP/like. this/DT/this is/VBZ/is c/NN/c 1/CD/1 times/NNS/times g/VBP/g of/IN/of n/NNP/n. this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be c/JJ/c 2/CD/2 times/NNS/times g/VBP/g of/IN/of n/NNP/n. and/CC/and let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is n/VBN/n naught/NNP/naught. then/RB/then /,/, our/PRP$/our claim/NN/claim our/PRP$/our requirement/NN/requirement is/VBZ/is that/IN/that /,/, if/IN/if f/NN/f occupies/NNS/occupies this/DT/this region/NN/region entirely/RB/entirely and/CC/and does/VBZ/does not/RB/not go/VB/go beyond/IN/beyond this/DT/this region/NN/region /,/, go/VB/go outside/JJ/outside this/DT/this region/NNP/region. this/DT/this is/VBZ/is the/DT/the region/NN/region for/IN/for f/NN/f /,/, somewhere/RB/somewhere inside/VB/inside anywhere/RB/anywhere inside/NNP/inside. so/RB/so /,/, then/RB/then it/PRP/it is/VBZ/is sandwiched/VBN/sandwiched between/IN/between c/NN/c 1/CD/1 times/NNS/times g/VBP/g of/IN/of n/NN/n and/CC/and c/NN/c 2/CD/2 times/NNS/times g/VBP/g of/IN/of n/NNP/n. then/RB/then we/PRP/we will/MD/will put/VB/put f/NN/f in/IN/in the/DT/the class/NN/class theta/NN/theta times/NNS/times g/NNP/g. so/RB/so /,/, notice/NN/notice that/IN/that we/PRP/we are/VBP/are not/RB/not caring/VBG/caring what/WP/what happens/NNS/happens /,/, if/IN/if for/IN/for values/NNS/values of/IN/of n/NN/n below/NNP/below. over/IN/over here/RB/here /,/, f/NN/f could/MD/could go/VB/go outside/IN/outside this/NNP/this. that/IN/that is/VBZ/is ok/NNP/ok. we/PRP/we are/VBP/are not/RB/not worried/VBN/worried about/IN/about that/NNP/that. but/CC/but /,/, beyond/IN/beyond n/NN/n naught/NN/naught f/NN/f must/MD/must only/RB/only lie/VB/lie between/IN/between this/DT/this sandwich/NN/sandwich region/NNP/region. so/RB/so /,/, essentially/RB/essentially we/PRP/we are/VBP/are saying/VBG/saying that/IN/that /,/, we/PRP/we do/VBP/do not/RB/not worry/VB/worry about/IN/about what/WP/what that/IN/that constant/JJ/constant factor/NN/factor is/NNP/is. so/RB/so /,/, it/PRP/it is/VBZ/is bracketed/VBN/bracketed below/IN/below by/IN/by some/DT/some multiple/JJ/multiple of/IN/of g/NNP/g. it/PRP/it is/VBZ/is bracketed/VBN/bracketed above/IN/above by/IN/by another/DT/another multiple/NN/multiple of/IN/of g/NNP/g. so/RB/so /,/, essentially/RB/essentially it/PRP/it behaves/VBZ/behaves like/IN/like g/NN/g and/CC/and that/IN/that for/IN/for large/JJ/large n/NNP/n. that/IN/that is/VBZ/is exactly/RB/exactly /,/, that/IN/that is/VBZ/is exactly/RB/exactly in/IN/in the/DT/the consistent/NN/consistent with/IN/with the/DT/the features/NNS/features that/IN/that we/PRP/we wanted/NNP/wanted. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take a/DT/a few/JJ/few examples/NNP/examples. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 12/CD/12 /CD/) let/NN/let us/PRP/us take/VBP/take our/PRP$/our two/CD/two functions/NNS/functions /,/, which/WDT/which we/PRP/we started/NNP/started. so/RB/so /,/, i/PRP/i will/MD/will write/VB/write down/NNP/down. say/VB/say f/NN/f of/IN/of n/NN/n equals/NNS/equals or/CC/or let/VB/let me/PRP/me call/MD/call it/PRP/it f/VB/f 1/CD/1 n/NN/n equals/NNS/equals /,/, say/VBP/say 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n square/NN/square plus/CC/plus 17/CD/17. then/RB/then /,/, this/DT/this function/NN/function belongs/VBZ/belongs to/TO/to theta/VB/theta of/IN/of n/NN/n cube/NNP/cube. let/NN/let me/PRP/me write/VBP/write down/NNP/down. i/PRP/i will/MD/will prove/VB/prove this/DT/this /,/, but/CC/but let/VB/let me/PRP/me write/VB/write down/RP/down the/DT/the other/JJ/other claim/NN/claim as/IN/as well/NNP/well. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write f/NN/f 2/CD/2 of/IN/of n/NN/n another/DT/another function/NN/function /,/, which/WDT/which is/VBZ/is say/VBP/say 2/CD/2 n/NN/n cube/NN/cube plus/CC/plus 3/CD/3 n/NN/n plus/CC/plus 79/CD/79. and/CC/and this/DT/this also/RB/also belongs/VBZ/belongs to/TO/to the/DT/the same/JJ/same class/NN/class n/NN/n cube/NNP/cube. so/RB/so /,/, i/PRP/i just/RB/just want/VBP/want to/TO/to reassure/VB/reassure you/NNP/you. that/IN/that the/DT/the goals/NNS/goals with/IN/with which/WDT/which we/PRP/we started/VBD/started namely/RB/namely /,/, developing/VBG/developing a/DT/a class/NN/class notation/NN/notation which/WDT/which will/MD/will enable/VB/enable us/PRP/us to/TO/to put/VB/put these/DT/these two/CD/two functions/NNS/functions in/IN/in the/DT/the same/JJ/same class/NNP/class. or/CC/or those/DT/those that/WDT/that goal/NN/goal is/VBZ/is actually/RB/actually being/VBG/being met/NNP/met. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now say/VBP/say in/IN/in one/CD/one what/WP/what basis/NN/basis i/PRP/i am/VBP/am concluding/VBG/concluding something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, let/VB/let me/PRP/me go/VB/go back/RB/back to/TO/to the/DT/the old/JJ/old definition/NNP/definition. so/RB/so /,/, in/IN/in order/NN/order to/TO/to classify/VB/classify a/DT/a function/NN/function as/IN/as being/VBG/being a/DT/a member/NN/member of/IN/of this/DT/this classed/VBN/classed functions/NNS/functions /,/, this/DT/this set/NN/set of/IN/of functions/NNP/functions. all/DT/all i/PRP/i need/VBP/need to/TO/to do/VB/do is/VBZ/is /,/, to/TO/to find/VB/find suitable/JJ/suitable constants/NNS/constants c/VBP/c 1/CD/1 c/NN/c 2/CD/2 and/CC/and n/NN/n naught/NNP/naught. so/RB/so /,/, if/IN/if i/PRP/i find/VBP/find these/DT/these suitable/JJ/suitable a/DT/a constant/JJ/constant c/NN/c 1/CD/1 c/NN/c 2/CD/2 n/NN/n naught/NN/naught such/JJ/such that/IN/that /,/, these/DT/these properties/NNS/properties are/VBP/are met/NNP/met. then/RB/then /,/, i/PRP/i am/VBP/am really/RB/really done/NNP/done. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take one/NNP/one. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NN/down as/IN/as proof/JJ/proof of/IN/of one/NNP/one. so/RB/so /,/, clearly/RB/clearly 10/CD/10 n/NN/n cube/NN/cube is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to f/NN/f 1/CD/1 n/NNP/n. because/IN/because /,/, there/EX/there is/VBZ/is a/DT/a that/IN/that additional/JJ/additional 5/CD/5 n/NN/n square/NN/square plus/CC/plus 17/CD/17 term/NNP/term. i/PRP/i can/MD/can write/VB/write down/RP/down f/NN/f 1/CD/1 of/IN/of n/NN/n is/VBZ/is certainly/RB/certainly less/JJR/less than/NNP/than. i/PRP/i will/MD/will just/RB/just raise/VB/raise all/DT/all these/DT/these to/TO/to n/VB/n cubes/NNS/cubes /,/, instead/RB/instead of/IN/of keeping/VBG/keeping them/PRP/them n/JJ/n to/TO/to the/DT/the zero/NN/zero n/NN/n square/NN/square over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is certainly/RB/certainly less/JJR/less than/IN/than 10/CD/10 plus/CC/plus 5/CD/5 plus/NN/plus 17/CD/17 times/NNS/times n/VBP/n cube/NNP/cube. or/CC/or this/DT/this is/VBZ/is equal/JJ/equal to/TO/to 22/CD/22 n/NN/n cube/NN/cube or/CC/or 32/CD/32 n/NN/n cube/NN/cube really/NNP/really. and/CC/and this/DT/this is/VBZ/is true/JJ/true for/IN/for all/DT/all n/NNP/n. so/RB/so /,/, i/PRP/i have/VBP/have established/VBN/established that/IN/that if/IN/if i/PRP/i take/VBP/take c/NN/c 1/CD/1 equals/NNS/equals 10/CD/10 and/CC/and c/NN/c 2/CD/2 equals/NNS/equals 32/CD/32. then/RB/then /,/, c/NN/c 1/CD/1 times/NNS/times n/VBP/n cube/NN/cube is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to f/NN/f 1/CD/1 of/IN/of n/NN/n less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to c/VB/c 2/CD/2 of/IN/of n/NN/n for/IN/for all/DT/all n/NN/n greater/NN/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to say/VB/say even/RB/even 1/CD/1. that/WDT/that does/VBZ/does not/RB/not really/RB/really matter/NNP/matter. so/RB/so /,/, these/DT/these constants/NNS/constants c/VBP/c 1/CD/1 c/NN/c 2/CD/2 and/CC/and n/NN/n /,/, and/CC/and 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to n/VB/n naught/NN/naught having/VBG/having found/NNP/found. and/CC/and we/PRP/we know/VBP/know that/IN/that the/DT/the functions/NNP/functions. and/CC/and these/DT/these constants/NNS/constants satisfy/VBP/satisfy the/DT/the properties/NNS/properties that/WDT/that /,/, we/PRP/we wanted/NNP/wanted. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can legitimately/RB/legitimately claim/VB/claim /,/, that/IN/that f/NN/f 1/CD/1 belongs/NNS/belongs to/TO/to this/DT/this class/NNP/class. so/RB/so /,/, the/DT/the conclusion/NN/conclusion from/IN/from this/DT/this is/VBZ/is that/IN/that f/NN/f 1/CD/1 belongs/NNS/belongs to/TO/to the/DT/the class/NN/class n/NN/n cube/NNP/cube. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the same/JJ/same kind/NN/kind of/IN/of analysis/NN/analysis where/WRB/where example/NN/example is/VBZ/is to/TO/to prove/VB/prove /,/, that/IN/that f/NN/f 2/CD/2 also/RB/also belongs/VBZ/belongs to/TO/to the/DT/the same/JJ/same class/NNP/class. let/NN/let me/PRP/me take/VBP/take one/CD/one more/JJR/more example/NN/example /,/, which/WDT/which actually/RB/actually illustrates/VBZ/illustrates that/IN/that our/PRP$/our notation/NN/notation is/VBZ/is a/DT/a bit/NN/bit more/RBR/more is/VBZ/is going/VBG/going beyond/IN/beyond what/WP/what we/PRP/we really/RB/really started/VBD/started off/NNP/off. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 54/CD/54 /CD/) so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to argue/VB/argue now/NNP/now. so/RB/so /,/, that/IN/that suppose/DT/suppose i/PRP/i take/VBP/take f/NN/f 3/CD/3 of/IN/of n/NN/n is/VBZ/is equal/JJ/equal to/TO/to n/VB/n cube/NN/cube plus/CC/plus /,/, say/VBP/say n/NN/n log/NN/log n/NNP/n. then/RB/then /,/, even/RB/even this/DT/this is/VBZ/is in/IN/in the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n cube/NNP/cube. this/DT/this is/VBZ/is not/RB/not something/NN/something that/WDT/that you/PRP/you would/MD/would classify/VB/classify /,/, as/IN/as being/VBG/being cubic/JJ/cubic /,/, because/IN/because cubic/JJ/cubic has/VBZ/has the/DT/the connotation/NN/connotation of/IN/of cubic/JJ/cubic polynomial/NNP/polynomial. so/RB/so /,/, it/PRP/it has/VBZ/has to/TO/to it/PRP/it has/VBZ/has to/TO/to have/VB/have the/DT/the form/NN/form something/NN/something times/NNS/times n/VBP/n cube/NN/cube plus/CC/plus something/NN/something times/NNS/times n/VBP/n square/JJ/square plus/NNS/plus something/NN/something times/NNS/times n/VBP/n plus/RB/plus a/DT/a constant/NNP/constant. whereas/IN/whereas here/RB/here there/RB/there is/VBZ/is something/NN/something funny/NN/funny that/WDT/that is/VBZ/is there/RB/there is/VBZ/is a/DT/a term/NN/term /,/, which/WDT/which is/VBZ/is not/RB/not a/DT/a polynomial/JJ/polynomial term/NNP/term. however/RB/however /,/, note/VBP/note that/IN/that it/PRP/it still/RB/still is/VBZ/is true/JJ/true that/IN/that 10/CD/10 n/NN/n cube/NN/cube is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to f/NN/f 3/CD/3 of/IN/of n/NN/n /,/, because/IN/because n/NN/n log/NN/log n/NN/n is/VBZ/is certainly/RB/certainly always/RB/always at/IN/at least/JJS/least zero/CD/zero or/CC/or certainly/RB/certainly greater/JJR/greater than/IN/than zero/CD/zero in/IN/in fact/NNP/fact. and/CC/and in/IN/in fact/NN/fact /,/, i/PRP/i can/MD/can since/VB/since i/PRP/i know/VBP/know that/IN/that /,/, n/VBP/n log/NN/log n/NN/n less/RBR/less than/IN/than n/NN/n cube/NNP/cube. i/PRP/i can/MD/can also/RB/also write/VB/write this/DT/this as/IN/as less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 11/CD/11 n/NN/n cube/NNP/cube. so/RB/so /,/, i/PRP/i have/VBP/have found/VBN/found c/NN/c 1/CD/1 equals/NNS/equals 10/CD/10 c/NN/c 2/CD/2 equals/NNS/equals 11/CD/11. and/CC/and say/VB/say n/NN/n naught/NN/naught equals/NNS/equals 1/CD/1 for/IN/for which/WDT/which /,/, my/PRP$/my whole/NN/whole definition/NN/definition holds/NNP/holds. and/CC/and therefore/RB/therefore /,/, i/PRP/i can/MD/can write/VB/write fully/RB/fully claim/VB/claim that/IN/that this/DT/this function/NN/function f/NN/f 3/CD/3 also/RB/also belongs/VBZ/belongs to/TO/to the/DT/the class/NN/class n/NN/n cube/NNP/cube. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a good/JJ/good idea/NNP/idea. it/PRP/it is/VBZ/is good/JJ/good that/IN/that in/IN/in fact/NN/fact /,/, this/DT/this function/NN/function belongs/VBZ/belongs to/TO/to this/DT/this class/NN/class n/NN/n cube/NNP/cube. because/IN/because /,/, as/IN/as n/NN/n increases/NNS/increases as/IN/as n/NN/n tends/NNS/tends to/TO/to infinity/NN/infinity then/RB/then /,/, this/DT/this function/NN/function really/RB/really is/VBZ/is the/DT/the same/JJ/same as/IN/as 10/CD/10 n/NN/n cube/NN/cube essentially/RB/essentially /,/, because/IN/because this/DT/this term/NN/term is/VBZ/is going/VBG/going to/TO/to be/VB/be negligible/JJ/negligible as/IN/as for/IN/for large/JJ/large n/NN/n as/IN/as compared/VBN/compared to/TO/to this/DT/this term/NNP/term. and/CC/and so/RB/so therefore/RB/therefore /,/, since/IN/since it/PRP/it is/VBZ/is essentially/RB/essentially the/DT/the same/JJ/same as/IN/as n/NN/n cube/NNP/cube. it/PRP/it is/VBZ/is a/DT/a good/JJ/good thing/NN/thing that/WDT/that our/PRP$/our classification/NN/classification system/NN/system /,/, is/VBZ/is putting/VBG/putting it/PRP/it in/IN/in the/DT/the same/JJ/same class/NNP/class. let/NN/let me/PRP/me write/VBP/write down/RP/down a/DT/a few/JJ/few more/RBR/more examples/NNP/examples. actually/RB/actually before/IN/before that/IN/that /,/, let/VB/let us/PRP/us come/VB/come back/RB/back to/TO/to this/DT/this definition/NN/definition itself/NNP/itself. so/RB/so /,/, theta/NN/theta of/IN/of g/NN/g is/VBZ/is a/DT/a set/NN/set of/IN/of functions/NNS/functions or/CC/or class/NN/class of/IN/of functions/NNP/functions. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to think/VB/think of/IN/of g/NN/g as/IN/as being/VBG/being sort/NN/sort of/IN/of a/DT/a representative/JJ/representative or/CC/or v/NN/v g/NN/g s/NNS/s being/VBG/being a/DT/a sort/NN/sort of/IN/of a/DT/a prototypical/JJ/prototypical function/NNP/function. so/RB/so /,/, instead/RB/instead of/IN/of talking/VBG/talking about/IN/about a/DT/a very/RB/very detailed/VBN/detailed function/NN/function like/IN/like /,/, say/VBP/say 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus n/NN/n log/NN/log n/NN/n or/CC/or 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n square/NN/square plus/CC/plus 17/CD/17. we/PRP/we will/MD/will say/VB/say /,/, we/PRP/we are/VBP/are roughly/RB/roughly going/VBG/going to/TO/to say/VB/say that/IN/that it/PRP/it is/VBZ/is n/VBN/n cube/-NONE-/cube. if/IN/if we/PRP/we are/VBP/are ignoring/VBG/ignoring constant/JJ/constant factors/NNS/factors and/CC/and as/IN/as n/NN/n goes/VBZ/goes to/TO/to infinity/NNP/infinity. and/CC/and we/PRP/we will/MD/will instead/VB/instead be/VB/be saying/VBG/saying that/IN/that /,/, it/PRP/it is/VBZ/is that/IN/that the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n cube/NNP/cube. so/RB/so /,/, think/VBP/think of/IN/of g/NN/g also/RB/also as/IN/as a/DT/a representative/NN/representative of/IN/of all/DT/all this/DT/this /,/, all/DT/all these/DT/these functions/NNP/functions. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take a/DT/a few/JJ/few more/RBR/more examples/NNP/examples. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 53/CD/53 /CD/) some/DT/some /,/, i/PRP/i will/MD/will write/VB/write down/IN/down may/MD/may be/VB/be that/IN/that 5/CD/5 n/NN/n log/NN/log n/NN/n plus/CC/plus 10/CD/10 n/NN/n /,/, belongs/NNS/belongs to/TO/to the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, the/DT/the important/JJ/important point/NN/point over/IN/over here/RB/here is/VBZ/is that/IN/that /,/, this/DT/this 10/CD/10 n/NN/n is/VBZ/is grows/VBZ/grows slower/NNP/slower. so/RB/so /,/, as/IN/as n/NN/n becomes/VBZ/becomes large/JJ/large this/DT/this term/NN/term is/VBZ/is going/VBG/going to/TO/to dominate/VB/dominate this/DT/this term/NNP/term. and/CC/and therefore/RB/therefore /,/, its/PRP$/its behavior/NN/behavior should/MD/should be/VB/be essentially/RB/essentially the/DT/the same/JJ/same as/IN/as that/DT/that of/IN/of n/NN/n log/NN/log n/NNP/n. and/CC/and therefore/RB/therefore /,/, it/PRP/it is/VBZ/is in/IN/in the/DT/the same/JJ/same class/NNP/class. we/PRP/we should/MD/should really/RB/really prove/VB/prove this/NNP/this. and/CC/and i/PRP/i will/MD/will leave/VB/leave that/IN/that as/IN/as an/DT/an exercise/NNP/exercise. we/PRP/we should/MD/should really/RB/really prove/VB/prove that/IN/that /,/, a/DT/a function/NN/function of/IN/of n/NN/n which/WDT/which is/VBZ/is 5/CD/5 n/NN/n log/NN/log n/NN/n plus/CC/plus 10/CD/10 n/NN/n belongs/NNS/belongs to/TO/to this/DT/this class/NN/class theta/NN/theta of/IN/of n/NN/n log/NN/log n/NNP/n. and/CC/and by/IN/by that/DT/that /,/, i/PRP/i mean/VBP/mean you/PRP/you should/MD/should exhibit/VB/exhibit constant/JJ/constant c/NN/c 1/CD/1 c/NN/c 2/CD/2 and/CC/and n/NN/n naught/NNP/naught. such/JJ/such that/IN/that c/NN/c 1/CD/1 times/NNS/times n/VBP/n log/NN/log n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to this/DT/this /,/, which/WDT/which in/IN/in turn/NN/turn is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to c/VB/c 2/CD/2 times/NNS/times n/VBP/n log/NN/log n/NN/n /,/, for/IN/for all/PDT/all n/NN/n greater/JJR/greater than/IN/than the/DT/the n/NN/n naught/NN/naught that/WDT/that we/PRP/we defined/NNP/defined. that/IN/that is/VBZ/is a/DT/a fairly/RB/fairly easy/JJ/easy task/NN/task /,/, but/CC/but if/IN/if you/PRP/you certainly/RB/certainly do/VBP/do it/NNP/it. so/RB/so /,/, as/IN/as to/TO/to make/VB/make sure/JJ/sure that/IN/that you/PRP/you are/VBP/are fully/RB/fully conversant/JJ/conversant with/IN/with this/DT/this definition/NNP/definition. let/VBD/let us/PRP/us take/VB/take a/DT/a slightly/RB/slightly more/RBR/more complicated/JJ/complicated /,/, but/CC/but complicated/VBD/complicated looking/VBG/looking example/NNP/example. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we have/VBP/have a/DT/a polynomial/JJ/polynomial a/DT/a of/IN/of n/NN/n which/WDT/which goes/VBZ/goes something/NN/something like/NNP/like. say/VBP/say summation/NN/summation i/PRP/i going/VBG/going from/IN/from zero/CD/zero to/TO/to k/VB/k of/IN/of a/DT/a i/NN/i /,/, a/DT/a i/PRP/i n/VBP/n to/TO/to the/DT/the power/NN/power i/NNP/i. and/CC/and let/VB/let us/PRP/us assume/VB/assume that/IN/that /,/, a/DT/a k/NN/k is/VBZ/is greater/JJR/greater than/IN/than 0/CD/0. other/JJ/other terms/NNS/terms could/MD/could be/VB/be smaller/JJR/smaller /,/, but/CC/but a/DT/a k/NN/k is/VBZ/is bigger/JJR/bigger than/IN/than 0/CD/0. then/RB/then /,/, i/PRP/i will/MD/will claim/VB/claim that/IN/that this/DT/this function/NN/function a/DT/a of/IN/of n/NN/n in/IN/in general/JJ/general /,/, any/DT/any polynomial/JJ/polynomial of/IN/of k/NN/k th/NN/th degree/NN/degree is/VBZ/is in/IN/in the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n to/TO/to the/DT/the power/NN/power k/NNP/k. again/RB/again you/PRP/you should/MD/should prove/VB/prove this/NNP/this. but/CC/but /,/, this/DT/this proof/NN/proof is/VBZ/is really/RB/really similar/JJ/similar to/TO/to what/WP/what we/PRP/we have/VBP/have done/VBN/done earlier/NNP/earlier. and/CC/and there/EX/there should/MD/should not/RB/not any/DT/any difficulty/NN/difficulty what/WP/what so/RB/so ever/NNP/ever. again/RB/again the/DT/the message/NN/message is/VBZ/is the/DT/the same/JJ/same that/IN/that /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a function/NNP/function. you/PRP/you look/VBP/look at/IN/at the/DT/the most/RBS/most /,/, the/DT/the largest/JJS/largest determinate/NNP/determinate. and/CC/and that/IN/that is/VBZ/is really/RB/really is/VBZ/is /,/, it/PRP/it is/VBZ/is class/NNP/class. that/IN/that really/RB/really is/VBZ/is its/PRP$/its asymptotic/JJ/asymptotic complexity/NN/complexity class/NNP/class. let/NN/let me/PRP/me now/RB/now write/VBP/write down/RP/down /,/, some/DT/some properties/NNS/properties of/IN/of this/DT/this definition/NNP/definition. so/RB/so /,/, suppose/DT/suppose we/PRP/we have/VBP/have f/NN/f belonging/VBG/belonging to/TO/to theta/VB/theta of/IN/of g/NN/g 1/CD/1. and/CC/and say/VB/say h/NN/h belonging/VBG/belonging to/TO/to theta/VB/theta of/IN/of g/NN/g 2/CD/2. then/RB/then /,/, i/PRP/i claim/VBP/claim that/IN/that f/NN/f plus/CC/plus h/NN/h belongs/NNS/belongs to/TO/to theta/VB/theta of/IN/of g/NN/g 1/CD/1 plus/CC/plus g/NN/g 2/CD/2. this/DT/this also/RB/also you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to verify/VB/verify /,/, fairly/RB/fairly straight/JJ/straight forward/NNP/forward. and/CC/and furthermore/VB/furthermore /,/, if/IN/if say/NN/say g/NN/g 1/CD/1 this/DT/this is/VBZ/is the/DT/the same/JJ/same as/IN/as g/NN/g 2/CD/2. then/RB/then f/NN/f plus/RB/plus h/JJ/h when/WRB/when i/PRP/i write/VBP/write f/NN/f plus/CC/plus h/NN/h /,/, i/PRP/i really/RB/really mean/JJ/mean f/NN/f of/IN/of n/NN/n plus/CC/plus h/NN/h of/IN/of n/NN/n /,/, the/DT/the function/NN/function which/WDT/which returns/NNS/returns for/IN/for every/DT/every n/NN/n /,/, f/NN/f of/IN/of n/NN/n plus/CC/plus h/NN/h of/IN/of n/NNP/n. and/CC/and this/DT/this function/NN/function belongs/VBZ/belongs to/TO/to theta/VB/theta of/IN/of g/NNP/g. this/DT/this is/VBZ/is also/RB/also understandable/JJ/understandable /,/, because/IN/because if/IN/if you/PRP/you believe/VBP/believe the/DT/the previous/JJ/previous result/NNP/result. so/RB/so /,/, g/IN/g 1/CD/1 plus/CC/plus g/NN/g 1/CD/1 equal/JJ/equal to/TO/to g/VB/g 2/CD/2 equal/JJ/equal to/TO/to g/NNP/g. so/RB/so /,/, g/IN/g 1/CD/1 plus/CC/plus g/NN/g 2/CD/2 will/MD/will be/VB/be equal/JJ/equal to/TO/to twice/NN/twice g/NNP/g. and/CC/and the/DT/the class/NN/class two/CD/two n/JJ/n cube/NN/cube theta/NN/theta of/IN/of two/CD/two n/JJ/n cube/NN/cube is/VBZ/is really/RB/really /,/, the/DT/the same/JJ/same as/IN/as the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n cube/NNP/cube. again/RB/again you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to verify/VB/verify this/NNP/this. you/PRP/you should/MD/should verify/VB/verify this/NNP/this. and/CC/and it/PRP/it is/VBZ/is really/RB/really not/RB/not surprising/JJ/surprising /,/, because/IN/because we/PRP/we started/VBD/started off/RP/off by/IN/by saying/VBG/saying that/IN/that we/PRP/we really/RB/really do/VBP/do not/RB/not want/VB/want to/TO/to worry/VB/worry about/IN/about constant/JJ/constant factors/NNP/factors. and/CC/and therefore/RB/therefore /,/, it/PRP/it does/VBZ/does make/VB/make sense/NN/sense or/CC/or it/PRP/it should/MD/should make/VB/make sense/NN/sense /,/, to/TO/to have/VB/have theta/NN/theta of/IN/of n/NN/n cube/NN/cube with/IN/with the/DT/the same/JJ/same as/IN/as theta/NN/theta of/IN/of 2/CD/2 n/NN/n cube/NNP/cube. we/PRP/we however/RB/however /,/, never/RB/never ever/RB/ever write/JJ/write theta/NN/theta of/IN/of 2/CD/2 n/NN/n cube/NNP/cube. and/CC/and that/IN/that is/VBZ/is /,/, because/IN/because it/PRP/it is/VBZ/is much/RB/much simpler/JJR/simpler and/CC/and much/JJ/much nicer/NN/nicer to/TO/to say/VB/say /,/, theta/NN/theta of/IN/of n/NN/n cube/NNP/cube. so/RB/so /,/, when/WRB/when we/PRP/we write/VBP/write theta/NN/theta of/IN/of g/NN/g we/PRP/we do/VBP/do not/RB/not /,/, we/PRP/we drop/VBP/drop off/RP/off the/DT/the constant/JJ/constant multipliers/NNS/multipliers /,/, if/IN/if any/DT/any that/DT/that might/MD/might be/VB/be present/JJ/present in/IN/in g/NNP/g. so/RB/so /,/, we/PRP/we have/VBP/have defined/VBN/defined the/DT/the first/JJ/first class/NN/class of/IN/of functions/NNS/functions that/IN/that we/PRP/we wanted/NNP/wanted. and/CC/and it/PRP/it does/VBZ/does indeed/RB/indeed /,/, it/PRP/it is/VBZ/is indeed/RB/indeed consistent/JJ/consistent with/IN/with our/PRP$/our intuition/NNP/intuition. and/CC/and the/DT/the goals/NNS/goals we/PRP/we set/VBP/set ourselves/NNP/ourselves. however/RB/however /,/, although/IN/although this/DT/this is/VBZ/is a/DT/a class/NN/class of/IN/of functions/NNS/functions /,/, in/IN/in computer/NN/computer science/NN/science and/CC/and mathematics/NN/mathematics there/EX/there is/VBZ/is a/DT/a funny/JJ/funny style/NN/style evolved/VBD/evolved /,/, as/IN/as far/RB/far as/IN/as writing/VBG/writing down/IN/down these/DT/these classes/NNS/classes is/VBZ/is concerned/NNP/concerned. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 38/CD/38 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/NNP/that. let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to write/VB/write down/RP/down a/DT/a note/NN/note /,/, on/IN/on writing/NN/writing style/NNP/style. so/RB/so /,/, suppose/DT/suppose f/NN/f belongs/VBZ/belongs to/TO/to the/DT/the class/NN/class theta/NN/theta of/IN/of g/NNP/g. now/RB/now /,/, very/RB/very often/RB/often or/CC/or most/RBS/most commonly/RB/commonly this/DT/this is/VBZ/is not/RB/not written/VBN/written in/IN/in this/DT/this manner/NNP/manner. but/CC/but /,/, the/DT/the more/RBR/more common/JJ/common writing/NN/writing style/NN/style is/VBZ/is /,/, to/TO/to write/VB/write f/NN/f is/VBZ/is equal/JJ/equal to/TO/to theta/VB/theta of/IN/of g/NNP/g. unfortunately/RB/unfortunately /,/, the/DT/the assignment/NN/assignment operator/NN/operator is/VBZ/is again/RB/again being/VBG/being badly/RB/badly abused/VBN/abused over/IN/over here/NNP/here. this/DT/this seems/VBZ/seems to/TO/to be/VB/be a/DT/a tradition/NN/tradition in/IN/in computer/NN/computer science/NNP/science. we/PRP/we use/VBP/use assignment/NN/assignment to/TO/to mean/VB/mean /,/, we/PRP/we use/VBP/use the/DT/the equal/JJ/equal to/TO/to operator/NN/operator to/TO/to mean/VB/mean assignment/NNP/assignment. we/PRP/we use/VBP/use it/PRP/it to/TO/to mean/NNP/mean. well/RB/well /,/, first/JJ/first of/IN/of all/DT/all it/PRP/it has/VBZ/has the/DT/the value/NN/value equality/NNP/equality. then/RB/then /,/, it/PRP/it has/VBZ/has this/DT/this value/NNP/value. it/PRP/it has/VBZ/has /,/, it/PRP/it is/VBZ/is used/VBN/used to/TO/to indicate/VB/indicate assignment/NNP/assignment. and/CC/and here/RB/here /,/, we/PRP/we are/VBP/are actually/RB/actually using/VBG/using it/PRP/it to/TO/to denote/VB/denote inclusion/NNP/inclusion. however/RB/however /,/, you/PRP/you will/MD/will see/VB/see that/IN/that you/PRP/you will/MD/will not/RB/not really/RB/really be/VB/be bothered/VBN/bothered by/IN/by this/NNP/this. it/PRP/it will/MD/will become/VB/become very/RB/very clear/JJ/clear by/IN/by the/DT/the context/NN/context that/IN/that is/VBZ/is /,/, what/WP/what we/PRP/we mean/NNP/mean. actually/RB/actually the/DT/the situation/NN/situation is/VBZ/is really/RB/really similar/JJ/similar to/TO/to our/PRP$/our use/NN/use of/IN/of english/JJ/english language/NN/language words/NNP/words. so/RB/so /,/, for/IN/for example/NN/example /,/, we/PRP/we might/MD/might write/VB/write rose/VBD/rose is/VBZ/is red/NNP/red. when/WRB/when we/PRP/we write/VBP/write this/DT/this /,/, we/PRP/we really/RB/really mean/JJ/mean that/IN/that rose/JJ/rose belongs/NNS/belongs to/TO/to the/DT/the class/NN/class of/IN/of red/VBN/red things/NNS/things or/CC/or the/DT/the set/NN/set of/IN/of red/VBN/red things/NNP/things. so/RB/so /,/, as/IN/as you/PRP/you can/MD/can see/VB/see even/RB/even in/IN/in the/DT/the english/JJ/english language/NN/language /,/, the/DT/the verb/NN/verb is/VBZ/is used/VBN/used to/TO/to indicate/VB/indicate equality/NNP/equality. that/IN/that is/VBZ/is perhaps/RB/perhaps the/DT/the more/RBR/more common/JJ/common use/NNP/use. but/CC/but /,/, it/PRP/it is/VBZ/is also/RB/also used/VBN/used to/TO/to indicate/VB/indicate some/DT/some kind/NN/kind of/IN/of say/NN/say conclusion/NNP/conclusion. so/RB/so /,/, anyway/RB/anyway instead/RB/instead of/IN/of saying/VBG/saying f/NN/f belongs/NNS/belongs to/TO/to theta/VB/theta of/IN/of g/NN/g /,/, it/PRP/it is/VBZ/is very/RB/very common/JJ/common to/TO/to say/VB/say f/NN/f equals/NNS/equals to/TO/to theta/VB/theta of/IN/of g/NNP/g. we/PRP/we never/RB/never however/RB/however /,/, write/JJ/write theta/NN/theta of/IN/of g/NN/g equal/JJ/equal to/TO/to f/NNP/f. this/DT/this is/VBZ/is never/RB/never written/NNP/written. just/RB/just as/IN/as /,/, it/PRP/it does/VBZ/does not/RB/not make/VB/make sense/NN/sense to/TO/to say/VB/say red/VBN/red /,/, well/RB/well i/PRP/i guess/VBP/guess in/IN/in poetic/JJ/poetic english/NNP/english. it/PRP/it does/VBZ/does make/VB/make sense/NN/sense to/TO/to say/VB/say red/VBN/red is/VBZ/is rose/JJ/rose /,/, but/CC/but we/PRP/we never/RB/never write/VBP/write this/DT/this in/IN/in computer/NN/computer science/NNP/science. i/PRP/i will/MD/will add/VB/add one/CD/one more/JJR/more note/NN/note on/IN/on the/DT/the writing/NN/writing style/NNP/style. so/RB/so /,/, i/PRP/i have/VBP/have been/VBN/been writing/VBG/writing functions/NNS/functions as/IN/as functions/NNS/functions by/IN/by their/PRP$/their names/NNS/names directly/NNP/directly. so/RB/so /,/, i/PRP/i might/MD/might write/VB/write something/NN/something like/IN/like f/NN/f equals/NNS/equals theta/VBP/theta of/IN/of g/NNP/g. but/CC/but /,/, from/IN/from time/NN/time to/TO/to time/VB/time i/PRP/i might/MD/might also/RB/also write/VB/write f/NN/f of/IN/of n/NN/n is/VBZ/is equal/JJ/equal to/TO/to theta/VB/theta g/NN/g of/IN/of n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 34/CD/34 /CD/) if/IN/if n/NN/n is/VBZ/is it/PRP/it is/VBZ/is sort/NN/sort of/IN/of understood/NN/understood /,/, n/NN/n is/VBZ/is clearly/RB/clearly understood/VBN/understood as/IN/as an/DT/an unbound/NN/unbound variable/NNP/variable. the/DT/the argument/NN/argument /,/, the/DT/the possible/JJ/possible argument/NN/argument that/WDT/that f/NN/f can/MD/can take/NNP/take. so/RB/so /,/, these/DT/these two/CD/two really/RB/really will/MD/will be/VB/be think/VB/think of/IN/of these/DT/these as/IN/as being/VBG/being the/DT/the same/NNP/same. this/DT/this i/PRP/i might/MD/might write/VB/write it/PRP/it in/IN/in this/DT/this manner/NNP/manner. just/RB/just to/TO/to emphasize/VB/emphasize the/DT/the fact/NN/fact that/IN/that /,/, f/NN/f is/VBZ/is a/DT/a function/NNP/function. but/CC/but /,/, if/IN/if it/PRP/it is/VBZ/is clear/JJ/clear that/IN/that /,/, f/NN/f is/VBZ/is a/DT/a function/NN/function then/RB/then i/PRP/i am/VBP/am it/PRP/it might/MD/might be/VB/be god/VBN/god to/TO/to write/VB/write it/PRP/it in/IN/in this/DT/this manner/NNP/manner. let/VBD/let me/PRP/me take/VB/take one/CD/one more/JJR/more example/NNP/example. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 07/CD/07 /CD/) let/NN/let me/PRP/me define/VBP/define f/NN/f 5/CD/5 of/IN/of n/NN/n as/IN/as 2/CD/2 plus/CC/plus 1/CD/1 over/IN/over n/NNP/n. so/RB/so /,/, what/WDT/what can/MD/can we/PRP/we what/WP/what class/NN/class can/MD/can we/PRP/we put/VB/put this/DT/this in/NNP/in. so/RB/so /,/, it/PRP/it turns/VBZ/turns out/RP/out that/IN/that there/EX/there is/VBZ/is actually/RB/actually a/DT/a nice/JJ/nice class/NN/class into/IN/into /,/, which/WDT/which we/PRP/we can/MD/can put/VB/put this/NNP/this. and/CC/and this/DT/this class/NN/class is/VBZ/is simply/RB/simply the/DT/the theta/NN/theta of/IN/of 1/CD/1 class/NNP/class. so/RB/so /,/, here/RB/here let/VB/let us/PRP/us say/VB/say g/JJ/g of/IN/of n/NN/n is/VBZ/is always/RB/always equal/JJ/equal to/TO/to 1/CD/1. and/CC/and then/RB/then /,/, we/PRP/we have/VBP/have to/TO/to argue/VB/argue that/NNP/that. in/IN/in fact/NN/fact /,/, f/NN/f 5/CD/5 belongs/NNS/belongs to/TO/to theta/VB/theta of/IN/of g/NN/g /,/, which/WDT/which is/VBZ/is what/WP/what i/PRP/i have/VBP/have written/VBN/written over/IN/over here/NNP/here. let/NN/let us/PRP/us just/RB/just do/VBP/do this/NNP/this. just/RB/just to/TO/to make/VB/make sure/JJ/sure /,/, we/PRP/we understand/VBP/understand this/NNP/this. so/RB/so /,/, clearly/RB/clearly 2/CD/2 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 plus/NNS/plus 1/CD/1 over/IN/over n/NN/n /,/, which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to f/NN/f 5/CD/5 of/IN/of n/NNP/n. and/CC/and in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to say/VB/say 3/CD/3. and/CC/and therefore/RB/therefore /,/, we/PRP/we have/VBP/have c/NN/c 1/CD/1 equals/NNS/equals 2/CD/2 c/NN/c 2/CD/2 equals/NNS/equals 3/CD/3 and/CC/and this/DT/this is/VBZ/is true/JJ/true for/IN/for all/DT/all n/NNP/n. so/RB/so /,/, we/PRP/we can/MD/can have/VB/have n/VBN/n naught/NN/naught equals/NNS/equals 1/CD/1. and/CC/and we/PRP/we have/VBP/have these/DT/these three/CD/three constants/NNS/constants /,/, satisfying/VBG/satisfying our/PRP$/our basic/JJ/basic definition/NN/definition of/IN/of theta/NNP/theta. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can write/VB/write f/NN/f 5/CD/5 as/IN/as belonging/JJ/belonging to/TO/to theta/VB/theta of/IN/of 1/CD/1. so/RB/so /,/, theta/NN/theta of/IN/of 1/CD/1 is/VBZ/is the/DT/the class/NN/class of/IN/of all/DT/all functions/NNS/functions /,/, which/WDT/which are/VBP/are essentially/RB/essentially constant/NNP/constant. they/PRP/they may/MD/may have/VB/have some/DT/some minor/JJ/minor perturbations/NNS/perturbations /,/, but/CC/but they/PRP/they really/RB/really are/VBP/are like/IN/like constants/NNP/constants. so/RB/so /,/, now/RB/now we/PRP/we will/MD/will come/VB/come back/NNP/back. we/PRP/we will/MD/will come/VB/come to/TO/to our/PRP$/our other/JJ/other two/CD/two definitions/NNP/definitions. our/PRP$/our other/JJ/other two/CD/two classes/NNS/classes and/CC/and we/PRP/we will/MD/will define/VB/define those/NNP/those. so/RB/so /,/, the/DT/the first/JJ/first class/NN/class is/VBZ/is o/RB/o of/IN/of g/NNP/g. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 53/CD/53 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a class/NN/class of/IN/of functions/NNS/functions f/IN/f /,/, where/WRB/where such/JJ/such that/IN/that where/WRB/where f/NN/f is/VBZ/is a/DT/a non/NN/non negative/JJ/negative function/NNP/function. and/CC/and there/EX/there exist/NN/exist c/NN/c 2/CD/2 and/CC/and n/NN/n naught/NN/naught /,/, such/JJ/such that/IN/that f/NN/f of/IN/of n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to c/VB/c 2/CD/2 times/NNS/times g/VBP/g of/IN/of n/NN/n /,/, for/IN/for all/PDT/all n/NN/n greater/JJR/greater than/IN/than n/NN/n naught/NNP/naught. omega/NN/omega of/IN/of g/NN/g is/VBZ/is the/DT/the same/JJ/same thing/NN/thing as/IN/as above/NNP/above. so/RB/so /,/, it/PRP/it is/VBZ/is f/NN/f but/NNP/but. so/RB/so /,/, f/NN/f is/VBZ/is non/NN/non negative/NNP/negative. but/CC/but /,/, now/RB/now we/PRP/we are/VBP/are worried/VBN/worried about/IN/about c/NN/c 1/CD/1 and/CC/and n/NN/n naught/NNP/naught. such/JJ/such that/IN/that f/NN/f of/IN/of n/NN/n is/VBZ/is less/JJR/less than/IN/than c/NN/c 1/CD/1 times/NNS/times g/VBP/g of/IN/of n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to f/NN/f of/IN/of n/NNP/n. and/CC/and we/PRP/we do/VBP/do not/RB/not have/VB/have anything/NN/anything on/IN/on the/DT/the upper/JJ/upper for/IN/for all/DT/all n/NN/n greater/NN/greater than/IN/than n/NN/n naught/NNP/naught. and/CC/and let/VB/let me/PRP/me just/RB/just refresh/JJ/refresh you/PRP/you /,/, what/WP/what the/DT/the theta/NN/theta of/IN/of g/NN/g definition/NN/definition was/NNP/was. the/DT/the only/JJ/only difference/NN/difference was/VBD/was that/IN/that /,/, we/PRP/we wanted/VBD/wanted there/RB/there to/TO/to exist/VB/exist c/NN/c 1/CD/1 c/NN/c 2/CD/2 and/CC/and n/NN/n naught/NNP/naught. such/JJ/such that/IN/that /,/, c/NN/c 1/CD/1 times/NNS/times g/VBP/g of/IN/of n/NN/n is/VBZ/is less/JJR/less than/IN/than f/NN/f of/IN/of n/NN/n and/CC/and is/VBZ/is less/RBR/less than/IN/than c/NN/c 2/CD/2 times/NNS/times g/VBP/g of/IN/of n/NNP/n. so/RB/so /,/, you/PRP/you can/MD/can see/VB/see that/IN/that the/DT/the class/NN/class omega/NN/omega relaxes/NNS/relaxes one/CD/one of/IN/of the/DT/the conditions/NNS/conditions /,/, which/WDT/which was/VBD/was present/JJ/present in/IN/in the/DT/the class/NN/class theta/NN/theta and/CC/and so/RB/so it/PRP/it does/VBZ/does o/NNP/o. o/NN/o relaxes/NNS/relaxes the/DT/the lower/JJR/lower bound/NN/bound condition/NNP/condition. and/CC/and omega/NN/omega relaxes/NNS/relaxes the/DT/the upper/JJ/upper bound/NN/bound condition/NNP/condition. so/RB/so /,/, in/IN/in omega/NN/omega the/DT/the lower/JJR/lower bound/NN/bound condition/NN/condition is/VBZ/is present/NNP/present. but/CC/but /,/, we/PRP/we are/VBP/are not/RB/not saying/VBG/saying anything/NN/anything about/IN/about /,/, whether/IN/whether f/NN/f of/IN/of n/NN/n is/VBZ/is bounded/VBN/bounded above/IN/above by/IN/by some/DT/some g/NNP/g. most/JJS/most of/IN/of an/DT/an algorithm/NN/algorithm analysis/NN/analysis /,/, we/PRP/we find/VBP/find it/PRP/it is/VBZ/is easy/JJ/easy it/PRP/it is/VBZ/is reasonably/RB/reasonably easy/JJ/easy to/TO/to say/VB/say that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is at/IN/at most/JJS/most something/NN/something like/IN/like this/DT/this /,/, at/IN/at most/JJS/most this/DT/this function/NNP/function. so/RB/so /,/, for/IN/for example/NN/example in/IN/in last/JJ/last lecture/NNP/lecture. in/IN/in the/DT/the last/JJ/last lecture/NN/lecture /,/, we/PRP/we said/VBD/said something/NN/something like/IN/like if/IN/if we/PRP/we look/VBP/look at/IN/at this/DT/this program/NNP/program. and/CC/and we/PRP/we count/VBP/count the/DT/the number/NN/number of/IN/of iterations/NNP/iterations. then/RB/then /,/, we/PRP/we can/MD/can certainly/RB/certainly argue/VB/argue that/IN/that there/EX/there are/VBP/are at/IN/at most/JJS/most n/JJ/n cube/NN/cube iterations/NNS/iterations or/CC/or something/VBG/something like/IN/like that/NNP/that. and/CC/and therefore/RB/therefore /,/, the/DT/the time/NN/time taken/VBN/taken has/VBZ/has to/TO/to be/VB/be at/IN/at most/JJS/most cubic/JJ/cubic in/IN/in n/NNP/n. there/EX/there we/PRP/we later/JJ/later on/IN/on did/JJ/did argue/NN/argue that/IN/that /,/, the/DT/the time/NN/time has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least cubic/NNP/cubic. but/CC/but /,/, suppose/VBP/suppose we/PRP/we just/RB/just had/VBD/had argued/VBN/argued that/IN/that it/PRP/it was/VBD/was utmost/RB/utmost cubic/NNP/cubic. then/RB/then /,/, we/PRP/we would/MD/would have/VB/have used/VBN/used this/DT/this o/NN/o notation/NNP/notation. so/RB/so /,/, we/PRP/we would/MD/would have/VB/have said/VBN/said that/IN/that the/DT/the time/NN/time taken/VBN/taken belongs/NNS/belongs to/TO/to o/VB/o of/IN/of n/NN/n cube/NNP/cube. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 02/CD/02 /CD/) so/RB/so /,/, if/IN/if we/PRP/we know/VBP/know say/VBP/say the/DT/the time/NN/time taken/VBN/taken as/RB/as a/DT/a function/NN/function of/IN/of n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to say/VB/say 15/CD/15 n/NN/n cube/NN/cube plus/CC/plus 17/CD/17 plus/NNS/plus 7/CD/7 n/NN/n square/NN/square plus/CC/plus 35/CD/35 or/CC/or something/NN/something like/IN/like that/NNP/that. then/RB/then /,/, we/PRP/we can/MD/can conclude/VB/conclude that/IN/that t/NN/t of/IN/of n/NN/n belongs/NNS/belongs to/TO/to o/VB/o of/IN/of n/NN/n cube/NNP/cube. if/IN/if in/IN/in addition/NN/addition /,/, we/PRP/we prove/VBP/prove that/IN/that t/NN/t of/IN/of n/NN/n is/VBZ/is also/RB/also greater/JJR/greater than/IN/than say/NN/say 2/CD/2 n/NN/n cube/NN/cube plus/CC/plus 37/CD/37. then/RB/then /,/, this/DT/this would/MD/would imply/RB/imply let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to our/PRP$/our definition/NNP/definition. so/RB/so /,/, let/VB/let me/PRP/me put/VB/put it/PRP/it on/IN/on top/NNP/top. so/IN/so /,/, let/VB/let us/PRP/us see/NNP/see. so/RB/so /,/, here/RB/here we/PRP/we are/VBP/are establishing/VBG/establishing that/IN/that t/NN/t of/IN/of n/NN/n is/VBZ/is bigger/JJR/bigger than/IN/than 2/CD/2 n/NN/n cube/NN/cube plus/CC/plus 37/CD/37. or/CC/or i/PRP/i can/MD/can write/VB/write this/DT/this as/IN/as /,/, say/VBP/say 2/CD/2 n/NN/n cube/NN/cube is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to t/VB/t of/IN/of n/NNP/n. so/RB/so /,/, which/WDT/which is/VBZ/is exactly/RB/exactly the/DT/the condition/NN/condition that/IN/that /,/, we/PRP/we wanted/VBD/wanted over/RP/over here/NNP/here. and/CC/and therefore/RB/therefore /,/, we/PRP/we could/MD/could argue/VB/argue that/IN/that t/NN/t of/IN/of n/NN/n belongs/NNS/belongs to/TO/to the/DT/the class/NN/class omega/NN/omega of/IN/of n/NN/n cube/NNP/cube. over/IN/over here/RB/here in/IN/in the/DT/the first/JJ/first case/NN/case /,/, in/IN/in the/DT/the first/JJ/first case/NN/case we/PRP/we said/VBD/said that/IN/that t/NN/t of/IN/of we/PRP/we know/VBP/know that/IN/that of/IN/of /,/, n/NN/n is/VBZ/is less/JJR/less than/IN/than 15/CD/15 n/NN/n cube/NN/cube plus/CC/plus 7/CD/7 n/NN/n square/NN/square plus/CC/plus 35/CD/35 and/CC/and which/WDT/which i/PRP/i can/MD/can write/VB/write down/RP/down as/IN/as in/IN/in fact/NN/fact /,/, less/RBR/less than/IN/than 35/CD/35 plus/CC/plus 7/CD/7 plus/NNS/plus 15/CD/15 /,/, so/IN/so 57/CD/57 n/NN/n cube/NNP/cube. and/CC/and that/IN/that is/VBZ/is really/RB/really satisfying/VBG/satisfying this/DT/this condition/NNP/condition. and/CC/and therefore/RB/therefore /,/, i/PRP/i can/MD/can conclude/VB/conclude that/IN/that t/NN/t of/IN/of n/NN/n is/VBZ/is belonging/VBG/belonging to/TO/to this/DT/this class/NNP/class. but/CC/but /,/, what/WP/what happens/NNS/happens as/IN/as a/DT/a result/NN/result of/IN/of both/DT/both of/IN/of these/NNP/these. so/RB/so /,/, i/PRP/i have/VBP/have really/RB/really established/VBN/established that/IN/that /,/, this/DT/this t/NN/t of/IN/of n/NN/n is/VBZ/is bounded/VBN/bounded below/IN/below by/IN/by c/NN/c 1/CD/1 times/NNS/times g/VBP/g of/IN/of n/NNP/n. simply/RB/simply /,/, this/DT/this 2/CD/2 n/NN/n cube/NNP/cube. and/CC/and it/PRP/it is/VBZ/is bounded/VBN/bounded above/IN/above by/IN/by c/NN/c 2/CD/2 times/NNS/times g/VBP/g of/IN/of n/NN/n /,/, which/WDT/which is/VBZ/is simply/RB/simply this/DT/this 57/CD/57 n/NN/n cube/NNP/cube. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 29/CD/29 /CD/) so/RB/so /,/, as/IN/as a/DT/a result/NN/result what/WP/what has/VBZ/has happened/VBN/happened is/VBZ/is that/IN/that /,/, i/PRP/i can/MD/can conclude/VB/conclude from/IN/from both/DT/both of/IN/of these/DT/these things/NNS/things that/IN/that t/NN/t of/IN/of n/NN/n is/VBZ/is belonging/VBG/belonging t/NN/t of/IN/of n/NN/n belongs/NNS/belongs to/TO/to theta/VB/theta of/IN/of n/NN/n cube/NN/cube as/IN/as well/NNP/well. so/RB/so /,/, let/VB/let me/PRP/me make/VB/make this/DT/this point/NN/point again/RB/again /,/, because/IN/because it/PRP/it is/VBZ/is an/DT/an important/JJ/important point/NNP/point. the/DT/the class/NN/class o/NN/o of/IN/of g/NN/g is/VBZ/is the/DT/the class/NN/class of/IN/of functions/NNS/functions /,/, which/WDT/which are/VBP/are bounded/VBN/bounded above/IN/above by/IN/by g/NNP/g. so/RB/so /,/, if/IN/if we/PRP/we know/VBP/know something/NN/something about/IN/about what/WP/what is/VBZ/is bigger/JJR/bigger than/IN/than these/DT/these /,/, than/IN/than the/DT/the function/NN/function that/IN/that we/PRP/we are/VBP/are considering/NNP/considering. if/IN/if we/PRP/we know/VBP/know a/DT/a function/NN/function /,/, which/WDT/which is/VBZ/is bigger/JJR/bigger then/RB/then /,/, we/PRP/we can/MD/can say/VB/say we/PRP/we can/MD/can put/VB/put it/NNP/it. put/NN/put the/DT/the unknown/NN/unknown function/NN/function in/IN/in this/DT/this class/NN/class /,/, in/IN/in this/DT/this o/NN/o of/IN/of g/NN/g class/NNP/class. so/RB/so /,/, if/IN/if you/PRP/you know/VBP/know an/DT/an upper/JJ/upper bound/NN/bound on/IN/on a/DT/a function/NN/function then/RB/then /,/, we/PRP/we should/MD/should be/VB/be looking/VBG/looking at/IN/at expressing/VBG/expressing that/IN/that upper/JJ/upper bound/NN/bound as/IN/as o/NN/o of/IN/of g/NNP/g. if/IN/if we/PRP/we know/VBP/know a/DT/a lower/JJR/lower bound/NN/bound on/IN/on that/DT/that function/NN/function /,/, we/PRP/we should/MD/should be/VB/be looking/VBG/looking at/IN/at expressing/VBG/expressing this/DT/this knowledge/NN/knowledge as/IN/as this/DT/this f/NN/f belongs/VBZ/belongs to/TO/to omega/VB/omega of/IN/of g/NNP/g. and/CC/and if/IN/if we/PRP/we know/VBP/know both/DT/both upper/NN/upper bound/NN/bound and/CC/and lower/JJR/lower bounds/NNS/bounds in/IN/in terms/NNS/terms of/IN/of the/DT/the same/JJ/same function/NN/function g/NN/g then/RB/then /,/, we/PRP/we should/MD/should write/VB/write that/IN/that this/DT/this function/NN/function f/NN/f belongs/NNS/belongs to/TO/to theta/VB/theta of/IN/of g/NNP/g. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 48/CD/48 /CD/) so/RB/so /,/, as/IN/as you/PRP/you must/MD/must have/VB/have already/RB/already guessed/VBN/guessed the/DT/the class/NN/class theta/NN/theta of/IN/of g/NN/g is/VBZ/is simply/RB/simply the/DT/the union/NN/union of/IN/of the/DT/the classes/NNS/classes o/VBP/o of/IN/of g/NN/g /,/, the/DT/the intersection/NN/intersection of/IN/of the/DT/the classes/NNS/classes o/VBP/o of/IN/of g/NN/g and/CC/and omega/NN/omega of/IN/of g/NNP/g. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take some/DT/some examples/NNS/examples of/IN/of o/NNP/o. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 13/CD/13 /CD/) this/DT/this is/VBZ/is something/NN/something like/IN/like 3/CD/3 n/NN/n square/NN/square belongs/NNS/belongs to/TO/to o/VB/o n/NN/n square/NNP/square. 3/CD/3 n/NN/n square/NN/square in/IN/in fact/NN/fact /,/, belongs/NNS/belongs to/TO/to theta/VB/theta of/IN/of n/NN/n square/NNP/square. and/CC/and therefore/RB/therefore /,/, it/PRP/it certainly/RB/certainly belongs/VBZ/belongs to/TO/to o/VB/o of/IN/of n/NN/n square/NN/square /,/, because/IN/because o/NN/o of/IN/of n/NN/n square/NN/square in/IN/in fact/NN/fact /,/, is/VBZ/is bigger/JJR/bigger than/IN/than theta/NN/theta of/IN/of n/NN/n square/NNP/square. here/RB/here is/VBZ/is another/DT/another example/NNP/example. so/RB/so /,/, say/VB/say 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n plus/CC/plus 7/CD/7 belongs/NNS/belongs to/TO/to o/VB/o of/IN/of n/NN/n cube/NNP/cube. similar/JJ/similar logic/NN/logic /,/, but/CC/but something/NN/something like/IN/like 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n plus/CC/plus 7/CD/7 also/RB/also belongs/VBZ/belongs to/TO/to o/VB/o of/IN/of n/NN/n to/TO/to the/DT/the fourth/NNP/fourth. why/WRB/why is/VBZ/is this/DT/this ?/./? because/IN/because /,/, 10/CD/10 n/NN/n cube/NN/cube plus/CC/plus 5/CD/5 n/NN/n plus/CC/plus 7/CD/7 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to i/PRP/i can/MD/can certainly/RB/certainly write/VB/write this/DT/this as/IN/as being/VBG/being less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to say/VB/say 32/CD/32 n/NN/n to/TO/to the/DT/the fourth/NNP/fourth. and/CC/and that/IN/that is/VBZ/is all/DT/all my/PRP$/my definition/NN/definition of/IN/of o/NN/o really/RB/really cares/VBZ/cares about/NNP/about. so/RB/so /,/, this/DT/this also/RB/also belongs/VBZ/belongs to/TO/to this/NNP/this. this/DT/this function/NN/function belongs/VBZ/belongs to/TO/to this/DT/this class/NNP/class. no/DT/no surprise/NN/surprise /,/, you/PRP/you should/MD/should be/VB/be surprised/VBN/surprised by/IN/by this/NNP/this. because/IN/because /,/, we/PRP/we are/VBP/are really/RB/really saying/VBG/saying that/IN/that g/NN/g serves/NNS/serves like/IN/like an/DT/an upper/JJ/upper bound/NN/bound on/IN/on this/DT/this function/NNP/function. and/CC/and if/IN/if i/PRP/i can/MD/can /,/, if/IN/if n/NN/n cube/NN/cube is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound then/RB/then certainly/RB/certainly n/NN/n fourth/JJ/fourth is/VBZ/is an/DT/an upper/JJ/upper bound/NN/bound as/IN/as well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 45/CD/45 /CD/) let/JJ/let me/NN/me summarize/NN/summarize that/WDT/that f/NN/f belongs/VBZ/belongs to/TO/to theta/VB/theta of/IN/of g/NN/g /,/, should/MD/should be/VB/be read/VBN/read as/IN/as f/NN/f is/VBZ/is nearly/RB/nearly the/DT/the same/NNP/same. or/CC/or let/VB/let me/PRP/me write/VB/write it/PRP/it as/IN/as similar/JJ/similar to/TO/to g/NNP/g. f/NN/f belongs/NNS/belongs to/TO/to o/VB/o of/IN/of g/NN/g /,/, should/MD/should be/VB/be read/VBN/read as/IN/as f/NN/f dominated/VBD/dominated by/IN/by g/NNP/g. actually/RB/actually /,/, not/RB/not dominated/NNP/dominated. f/NN/f is/VBZ/is no/DT/no larger/JJR/larger than/IN/than g/NNP/g. sort/NN/sort of/IN/of like/NN/like less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to /,/, but/CC/but it/PRP/it is/VBZ/is not/RB/not exactly/RB/exactly less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/NN/to. because/IN/because /,/, we/PRP/we are/VBP/are ignoring/VBG/ignoring constants/NNS/constants just/RB/just as/IN/as this/DT/this is/VBZ/is sort/NN/sort of/IN/of like/NN/like equal/JJ/equal to/NNP/to. f/NN/f belongs/NNS/belongs to/TO/to omega/VB/omega of/IN/of g/NN/g /,/, like/IN/like y/NN/y should/MD/should be/VB/be thought/VBN/thought of/IN/of as/RB/as f/NN/f greater/NN/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to g/NNP/g. but/CC/but /,/, again/RB/again we/PRP/we are/VBP/are ignoring/VBG/ignoring constants/NNP/constants. and/CC/and also/RB/also lower/JJR/lower order/NN/order terms/NNP/terms. so/RB/so /,/, we/PRP/we now/RB/now have/VBP/have defined/VBN/defined our/PRP$/our three/CD/three main/JJ/main functions/NNS/functions classes/NNS/classes /,/, theta/NN/theta of/IN/of g/NN/g /,/, o/NN/o of/IN/of g/NN/g are/VBP/are also/RB/also called/VBN/called big/JJ/big o/NN/o of/IN/of g/NN/g and/CC/and omega/NN/omega of/IN/of g/NNP/g. i/PRP/i have/VBP/have defined/VBN/defined these/DT/these classes/NNS/classes in/IN/in the/DT/the context/NN/context of/IN/of the/DT/the times/NNS/times taken/VBN/taken by/IN/by algorithms/NNP/algorithms. but/CC/but of/IN/of course/NN/course /,/, these/DT/these are/VBP/are just/RB/just plain/JJ/plain old/JJ/old function/NN/function classes/NNP/classes. and/CC/and the/DT/the functions/NNS/functions could/MD/could denote/VB/denote /,/, not/RB/not necessarily/RB/necessarily the/DT/the time/NN/time taken/VBN/taken /,/, but/CC/but any/DT/any old/JJ/old thing/NNP/thing. so/RB/so /,/, for/IN/for example/NN/example let/NN/let me/PRP/me define/VBP/define a/DT/a general/JJ/general function/NNP/function. which/WDT/which just/RB/just /,/, it/PRP/it is/VBZ/is the/DT/the sum/NN/sum of/IN/of n/NN/n numbers/NNP/numbers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 33/CD/33 /CD/) so/RB/so /,/, let/VB/let me/PRP/me say/VB/say s/NNS/s of/IN/of n/NN/n is/VBZ/is equal/JJ/equal to/TO/to summation/NN/summation i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n of/IN/of i/PRP/i itself/NNP/itself. well/RB/well you/PRP/you do/VBP/do know/RB/know /,/, from/IN/from say/NN/say some/DT/some of/IN/of the/DT/the mathematics/NN/mathematics courses/VBZ/courses that/IN/that you/PRP/you have/VBP/have done/NNP/done. that/IN/that s/NNS/s of/IN/of n/NN/n is/VBZ/is nothing/NN/nothing /,/, but/CC/but n/NN/n into/IN/into n/NN/n plus/CC/plus 1/CD/1 upon/IN/upon 2/CD/2. however/RB/however /,/, getting/VBG/getting into/IN/into a/DT/a result/NN/result like/IN/like this/DT/this /,/, requires/VBZ/requires some/DT/some amount/NN/amount of/IN/of cleverness/NN/cleverness /,/, this/DT/this result/NN/result is/VBZ/is a/DT/a very/RB/very precise/JJ/precise result/NNP/result. if/IN/if you/PRP/you prove/VBP/prove that/IN/that s/NNS/s of/IN/of n/NN/n is/VBZ/is exactly/RB/exactly this/DT/this /,/, it/PRP/it is/VBZ/is a/DT/a very/RB/very precise/JJ/precise result/NNP/result. but/CC/but /,/, sometimes/RB/sometimes you/PRP/you might/MD/might say/VB/say /,/, you/PRP/you might/MD/might not/RB/not have/VB/have enough/RB/enough time/VB/time or/CC/or you/PRP/you might/MD/might not/RB/not have/VB/have enough/RB/enough cleverness/JJ/cleverness to/TO/to get/VB/get on/IN/on exact/JJ/exact result/NN/result like/IN/like this/DT/this /,/, which/WDT/which is/VBZ/is to/TO/to say/VB/say that/IN/that s/NNS/s of/IN/of n/NN/n is/VBZ/is exactly/RB/exactly n/VBN/n into/IN/into n/NN/n plus/CC/plus 1/CD/1 upon/IN/upon 2/CD/2. but/CC/but /,/, suppose/VBP/suppose you/PRP/you might/MD/might be/VB/be happy/JJ/happy with/IN/with a/DT/a weaker/NN/weaker results/NNP/results. so/RB/so /,/, you/PRP/you might/MD/might want/VB/want to/TO/to know/VB/know well/RB/well /,/, does/VBZ/does s/NNS/s of/IN/of n/NN/n grow/NN/grow or/CC/or does/VBZ/does s/NNS/s of/IN/of n/NN/n belong/IN/belong to/TO/to n/VB/n square/JJ/square into/IN/into the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n square/NN/square or/CC/or does/VBZ/does it/PRP/it belong/IN/belong to/TO/to the/DT/the class/NN/class theta/NN/theta of/IN/of n/NNP/n. at/IN/at first/JJ/first glance/NN/glance just/RB/just by/IN/by looking/VBG/looking at/IN/at this/DT/this /,/, it/PRP/it should/MD/should it/PRP/it is/VBZ/is not/RB/not clear/JJ/clear at/IN/at all/DT/all whether/IN/whether s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n square/NNP/square. or/CC/or whether/IN/whether it/PRP/it belongs/VBZ/belongs to/TO/to class/NN/class theta/NN/theta of/IN/of n/NN/n cube/NN/cube or/CC/or anything/NN/anything like/IN/like that/NNP/that. so/RB/so /,/, what/WDT/what i/PRP/i want/VBP/want to/TO/to stress/NN/stress or/CC/or what/WP/what i/PRP/i want/VBP/want to/TO/to give/VB/give an/DT/an example/NN/example of/IN/of right/NN/right now/RB/now is/VBZ/is that/IN/that /,/, even/RB/even without/IN/without getting/VBG/getting to/TO/to this/DT/this exact/JJ/exact expression/NN/expression /,/, you/PRP/you might/MD/might be/VB/be able/JJ/able to/TO/to determine/VB/determine the/DT/the class/NN/class to/TO/to which/WDT/which a/DT/a function/NN/function belongs/NNP/belongs. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove that/IN/that s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to the/DT/the class/NN/class theta/NN/theta of/IN/of n/NN/n square/NN/square /,/, without/IN/without actually/RB/actually calculating/VBG/calculating s/NNS/s of/IN/of n/NN/n precisely/NNP/precisely. and/CC/and this/DT/this is/VBZ/is an/DT/an instructive/JJ/instructive example/NN/example /,/, because/IN/because something/NN/something like/IN/like this/DT/this will/MD/will happen/VB/happen when/WRB/when we/PRP/we analyze/VBP/analyze algorithms/NNP/algorithms. so/RB/so /,/, s/NNS/s of/IN/of n/NN/n is/VBZ/is equal/JJ/equal to/TO/to summation/NN/summation i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n of/IN/of i/NNP/i. but/CC/but /,/, note/VBP/note that/IN/that /,/, this/DT/this i/PRP/i is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be at/IN/at most/JJS/most n/NNP/n. and/CC/and therefore/RB/therefore /,/, i/PRP/i can/MD/can write/VB/write this/DT/this as/IN/as summation/NN/summation i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n of/IN/of n/NN/n itself/NNP/itself. but/CC/but /,/, what/WP/what is/VBZ/is this/DT/this ?/./? this/DT/this is/VBZ/is just/RB/just n/VBN/n plus/CC/plus n/NN/n plus/CC/plus n/NN/n n/NN/n times/NNS/times /,/, because/IN/because every/DT/every term/NN/term in/IN/in this/DT/this sum/NN/sum is/VBZ/is n/NNP/n. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is nothing/NN/nothing /,/, but/CC/but n/NN/n square/NNP/square. so/RB/so /,/, what/WDT/what have/VBP/have you/PRP/you established/VBD/established ?/./? we/PRP/we have/VBP/have established/VBN/established that/IN/that s/NNS/s of/IN/of n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n/VB/n square/NNP/square. but/CC/but /,/, that/IN/that right/NN/right away/RB/away puts/VBZ/puts s/NNS/s in/IN/in the/DT/the class/NN/class o/NN/o of/IN/of n/NN/n square/NNP/square. so/RB/so /,/, this/DT/this implies/VBZ/implies that/IN/that s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to the/DT/the class/NN/class o/NN/o of/IN/of n/NN/n square/NNP/square. can/MD/can we/PRP/we argue/VBP/argue that/IN/that s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to the/DT/the class/NN/class omega/NN/omega of/IN/of n/NN/n square/NN/square ?/./? that/IN/that is/VBZ/is /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do next/NNP/next. so/RB/so /,/, again/RB/again we/PRP/we observe/VBP/observe something/NN/something very/RB/very simple/NNP/simple. so/RB/so /,/, s/NNS/s of/IN/of n/NN/n is/VBZ/is summation/NN/summation i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n of/IN/of i/NNP/i. now/RB/now /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to ignore/VB/ignore the/DT/the first/JJ/first in/IN/in our/PRP$/our two/CD/two terms/NNP/terms. so/RB/so /,/, this/DT/this certainly/RB/certainly is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/NN/to. if/IN/if i/PRP/i ignore/VBP/ignore the/DT/the first/JJ/first in/IN/in our/PRP$/our two/CD/two terms/NNS/terms /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be i/PRP/i going/VBG/going from/IN/from say/NN/say n/NN/n over/IN/over 2/CD/2 plus/CC/plus 1/CD/1 to/TO/to n/VB/n of/IN/of i/PRP/i itself/NNP/itself. but/CC/but /,/, now/RB/now note/VBP/note that/IN/that this/DT/this i/PRP/i is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be at/IN/at least/JJS/least n/NN/n over/IN/over 2/CD/2 /,/, because/IN/because it/PRP/it starts/VBZ/starts at/IN/at n/NN/n over/IN/over 2/CD/2 and/CC/and goes/VBZ/goes all/DT/all the/DT/the way/NN/way till/IN/till n/NNP/n. so/RB/so /,/, therefore/IN/therefore /,/, i/PRP/i can/MD/can write/VB/write this/DT/this as/IN/as summation/NN/summation i/PRP/i going/VBG/going from/IN/from n/NN/n over/IN/over to/TO/to 2/CD/2 plus/NNS/plus 1/CD/1 to/TO/to n/VB/n of/IN/of n/NN/n over/IN/over 2/CD/2 itself/NNP/itself. so/RB/so /,/, term/NN/term by/IN/by term/NN/term this/DT/this series/NN/series this/DT/this sum/NN/sum is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the corresponding/NN/corresponding term/NN/term over/IN/over here/NNP/here. but/CC/but /,/, what/WP/what is/VBZ/is this/DT/this ?/./? this/DT/this is/VBZ/is simply/RB/simply n/VBN/n by/IN/by 2/CD/2 added/VBD/added to/TO/to itself/PRP/itself n/VB/n by/IN/by 2/CD/2 times/NNP/times. so/RB/so /,/, therefore/IN/therefore /,/, i/PRP/i will/MD/will write/VB/write this/DT/this as/IN/as equal/JJ/equal to/TO/to n/VB/n by/IN/by 2/CD/2 times/NNS/times n/VBP/n by/IN/by 2/CD/2 /,/, which/WDT/which is/VBZ/is n/VBN/n square/JJ/square by/IN/by 4/CD/4. so/RB/so /,/, i/PRP/i have/VBP/have argued/VBN/argued that/IN/that s/NNS/s of/IN/of n/NN/n is/VBZ/is bigger/JJR/bigger than/IN/than or/CC/or equal/JJ/equal to/TO/to n/VB/n square/JJ/square by/IN/by 4/CD/4 and/CC/and at/IN/at most/JJS/most n/JJ/n square/NNP/square. so/RB/so /,/, we/PRP/we have/VBP/have bracketed/VBN/bracketed s/NNS/s of/IN/of n/NNP/n. well/RB/well before/IN/before that/IN/that /,/, just/RB/just once/RB/once we/PRP/we argue/VBP/argue that/IN/that s/NNS/s of/IN/of n/NN/n is/VBZ/is bigger/JJR/bigger than/IN/than n/NN/n square/NN/square by/IN/by 4/CD/4. we/PRP/we can/MD/can conclude/VB/conclude that/IN/that /,/, s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to omega/VB/omega of/IN/of n/NN/n square/NNP/square. just/RB/just going/VBG/going back/RB/back to/TO/to our/PRP$/our definition/NN/definition /,/, we/PRP/we have/VBP/have proved/VBN/proved that/NNP/that. let/NN/let us/PRP/us just/RB/just do/VBP/do this/DT/this once/NNP/once. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 59/CD/59 /CD/) so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to argue/VB/argue that/IN/that f/NN/f of/IN/of n/NN/n which/WDT/which is/VBZ/is s/VBZ/s of/IN/of n/NN/n now/RB/now /,/, is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to n/VB/n square/JJ/square by/IN/by 4/CD/4. and/CC/and the/DT/the c/NN/c 1/CD/1 is/VBZ/is now/RB/now 1/CD/1 by/IN/by 4/CD/4 /,/, but/CC/but that/IN/that is/NNP/is. we/PRP/we do/VBP/do not/RB/not /,/, we/PRP/we did/VBD/did not/RB/not necessarily/RB/necessarily say/VB/say we/PRP/we did/VBD/did not/RB/not say/VB/say over/IN/over here/RB/here that/IN/that /,/, c/NN/c 1/CD/1 has/VBZ/has to/TO/to be/VB/be greater/JJR/greater than/IN/than 1/CD/1 or/CC/or anything/NN/anything like/IN/like that/NNP/that. any/DT/any real/JJ/real number/NN/number /,/, any/DT/any positive/JJ/positive real/JJ/real number/NN/number is/VBZ/is fine/NNP/fine. there/RB/there exist/VBP/exist /,/, i/PRP/i should/MD/should write/VB/write this/DT/this as/IN/as there/EX/there exists/NNS/exists c/NN/c 1/CD/1 on/IN/on n/NN/n naught/NN/naught positive/JJ/positive all/DT/all through/NNP/through. all/DT/all the/DT/the c/NN/c 1/CD/1 naught/NN/naught that/WDT/that /,/, i/PRP/i have/VBP/have written/VBN/written should/MD/should be/VB/be positive/NNP/positive. that/IN/that is/VBZ/is what/WP/what /,/, that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we have/VBP/have proved/VBN/proved over/IN/over here/RB/here s/VBZ/s of/IN/of n/NNP/n. so/RB/so /,/, we/PRP/we have/VBP/have argued/VBN/argued that/IN/that s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to n/VB/n square/JJ/square as/IN/as well/RB/well and/CC/and from/IN/from this/DT/this and/CC/and this/DT/this /,/, what/WP/what can/MD/can i/VB/i conclude/VBP/conclude ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 48/CD/48 /CD/) well/RB/well from/IN/from those/DT/those two/CD/two things/NNS/things /,/, i/PRP/i can/MD/can conclude/VB/conclude that/IN/that s/NNS/s of/IN/of n/NN/n must/MD/must be/VB/be theta/NN/theta of/IN/of n/NN/n square/NN/square as/IN/as well/NNP/well. so/RB/so /,/, notice/NN/notice that/IN/that in/IN/in doing/VBG/doing any/DT/any of/IN/of this/DT/this i/NN/i did/VBD/did not/RB/not actually/RB/actually exactly/RB/exactly evaluate/JJ/evaluate s/NNS/s of/IN/of n/NNP/n. in/IN/in this/DT/this case/NN/case evaluating/VBG/evaluating s/NNS/s of/IN/of n/NN/n exactly/RB/exactly is/VBZ/is possible/JJ/possible /,/, but/CC/but very/RB/very often/RB/often it/PRP/it is/VBZ/is not/NNP/not. as/IN/as i/PRP/i said/VBD/said /,/, it/PRP/it may/MD/may require/VB/require exceptional/JJ/exceptional cleverness/NN/cleverness once/RB/once in/IN/in a/DT/a while/NN/while to/TO/to exactly/RB/exactly evaluate/VB/evaluate a/DT/a function/NNP/function. but/CC/but /,/, giving/VBG/giving bounds/NNS/bounds on/IN/on it/PRP/it is/VBZ/is easy/NNP/easy. and/CC/and the/DT/the bounds/NNS/bounds on/IN/on it/PRP/it /,/, can/MD/can be/VB/be nicely/RB/nicely stated/VBN/stated in/IN/in terms/NNS/terms of/IN/of the/DT/the class/NN/class notation/NN/notation that/WDT/that we/PRP/we have/VBP/have right/RB/right now/NNP/now. so/RB/so /,/, if/IN/if you/PRP/you know/VBP/know an/DT/an upper/JJ/upper bound/NN/bound we/PRP/we can/MD/can state/VB/state it/PRP/it as/IN/as s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to o/VB/o of/IN/of something/NNP/something. if/IN/if you/PRP/you know/VBP/know a/DT/a lower/JJR/lower bound/NN/bound /,/, we/PRP/we can/MD/can state/VB/state it/PRP/it as/IN/as s/NNS/s of/IN/of n/NN/n belongs/NNS/belongs to/TO/to omega/VB/omega of/IN/of something/NNP/something. and/CC/and if/IN/if we/PRP/we know/VBP/know both/DT/both /,/, we/PRP/we can/MD/can state/VB/state s/NNS/s of/IN/of n/NN/n as/IN/as theta/NN/theta of/IN/of something/NNP/something. in/IN/in this/DT/this manner/NN/manner /,/, i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to prove/NNP/prove. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NN/down as/IN/as home/NN/home work/NNP/work. prove/VBP/prove that/IN/that /,/, say/VBP/say t/NN/t of/IN/of n/NN/n if/IN/if t/NN/t of/IN/of n/NN/n is/VBZ/is equal/JJ/equal to/TO/to summation/NN/summation i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n of/IN/of say/NN/say i/PRP/i square/NNP/square. then/RB/then /,/, prove/VBP/prove that/IN/that t/NN/t of/IN/of n/NN/n belongs/NNS/belongs to/TO/to theta/VB/theta of/IN/of n/NN/n cube/NNP/cube. the/DT/the proof/NN/proof is/VBZ/is really/RB/really more/RBR/more or/CC/or less/JJR/less identical/JJ/identical /,/, but/CC/but you/PRP/you should/NNP/should. but/CC/but /,/, again/RB/again you/PRP/you should/MD/should persuade/VB/persuade yourself/PRP/yourself of/IN/of this/NNP/this. let/NN/let me/PRP/me take/VBP/take one/CD/one more/JJR/more example/NNP/example. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 34/CD/34 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the fibonacci/NN/fibonacci series/NN/series which/WDT/which is/VBZ/is defined/VBN/defined by/IN/by f/NN/f of/IN/of n/NN/n equals/NNS/equals f/NN/f of/IN/of n/NN/n minus/NN/minus 1/CD/1 plus/CC/plus f/NN/f of/IN/of n/NN/n minus/NN/minus 2/CD/2. and/CC/and f/NN/f of/IN/of 1/CD/1 equals/NNS/equals f/NN/f of/IN/of 0/-NONE-/0 equals/NNS/equals 1/CD/1. let/NN/let me/PRP/me claim/VBP/claim that/IN/that /,/, f/NN/f of/IN/of n/NN/n is/VBZ/is always/RB/always greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the power/NN/power n/NN/n by/IN/by 2/CD/2. this/DT/this is/VBZ/is also/RB/also home/NN/home work/NNP/work. what/WP/what can/MD/can you/PRP/you conclude/VB/conclude from/IN/from this/DT/this ?/./? you/PRP/you can/MD/can conclude/VB/conclude from/IN/from this/DT/this that/IN/that /,/, f/NN/f of/IN/of n/NN/n is/VBZ/is an/DT/an omega/NN/omega of/IN/of 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2. let/NN/let me/PRP/me make/VBP/make /,/, one/CD/one more/JJR/more claim/NNP/claim. well/RB/well /,/, let/VB/let me/PRP/me not/RB/not make/VB/make that/IN/that claim/NNP/claim. let/VB/let me/PRP/me instead/RB/instead tell/VBP/tell you/PRP/you the/DT/the real/JJ/real result/NN/result /,/, actual/JJ/actual result/NNP/result. it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to show/VB/show that/IN/that f/NN/f of/IN/of n/NN/n is/VBZ/is theta/NN/theta of/IN/of 1/CD/1 plus/CC/plus root/NN/root 5/CD/5 upon/IN/upon 2/CD/2 whole/JJ/whole to/TO/to the/DT/the power/NN/power n/NNP/n. so/RB/so /,/, it/PRP/it is/VBZ/is not/RB/not exactly/RB/exactly this/DT/this number/NN/number /,/, but/CC/but it/PRP/it is/VBZ/is within/IN/within a/DT/a constant/JJ/constant multiplier/NN/multiplier of/IN/of this/NNP/this. the/DT/the nth/NN/nth fibonacci/NN/fibonacci number/NN/number is/VBZ/is within/IN/within a/DT/a constant/JJ/constant multiplier/NN/multiplier of/IN/of this/NNP/this. proving/NN/proving this/DT/this exact/NN/exact bound/NN/bound /,/, takes/VBZ/takes a/DT/a lot/NN/lot more/RBR/more work/NNP/work. but/CC/but /,/, by/IN/by something/NN/something really/RB/really simple/JJ/simple we/PRP/we have/VBP/have at/IN/at least/JJS/least argued/VBN/argued that/IN/that f/NN/f of/IN/of n/NN/n is/VBZ/is actually/RB/actually going/VBG/going to/TO/to grow/VB/grow at/IN/at least/JJS/least as/IN/as 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2. or/CC/or in/IN/in fact/NN/fact /,/, i/PRP/i can/MD/can write/VB/write this/DT/this as/IN/as omega/NN/omega of/IN/of root/NN/root 2/CD/2 to/TO/to the/DT/the n/NNP/n. so/RB/so /,/, something/NN/something like/IN/like this/DT/this is/VBZ/is commonly/RB/commonly called/VBN/called exponential/JJ/exponential growth/NNP/growth. some/DT/some by/IN/by a/DT/a very/RB/very easy/JJ/easy logic/NN/logic /,/, by/IN/by very/RB/very easy/JJ/easy reasoning/NN/reasoning we/PRP/we can/MD/can argue/VB/argue that/IN/that the/DT/the fibonacci/NN/fibonacci number/NN/number grow/NN/grow exponentially/NNP/exponentially. by/IN/by more/JJR/more complicated/JJ/complicated reasoning/NN/reasoning and/CC/and by/IN/by reasoning/NN/reasoning /,/, which/WDT/which involves/NNS/involves essentially/RB/essentially involves/VBZ/involves finding/VBG/finding out/RP/out a/DT/a precise/NN/precise formula/NN/formula for/IN/for the/DT/the nth/NN/nth term/NNP/term. we/PRP/we can/MD/can get/VB/get a/DT/a much/RB/much tighter/RBR/tighter results/NNP/results. but/CC/but /,/, the/DT/the importance/NN/importance right/RB/right now/RB/now is/VBZ/is that/IN/that our/PRP$/our theta/NN/theta notation/NN/notation and/CC/and our/PRP$/our omega/NN/omega notation/NN/notation allow/NN/allow us/PRP/us to/TO/to express/VB/express our/PRP$/our knowledge/NN/knowledge or/CC/or lack/VBP/lack of/IN/of it/PRP/it /,/, in/IN/in a/DT/a very/RB/very compact/JJ/compact manner/NNP/manner. so/RB/so /,/, let/VB/let me/PRP/me summarize/VB/summarize now/NNP/now. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 59/CD/59 /CD/) so/RB/so /,/, one/CD/one we/PRP/we have/VBP/have defined/VBN/defined theta/NN/theta /,/, o/NN/o and/CC/and omega/NN/omega notation/NNP/notation. these/DT/these capture/NN/capture the/DT/the idea/NN/idea that/IN/that /,/, ignore/VBP/ignore constant/JJ/constant multipliers/NNP/multipliers. consider/NN/consider n/NN/n goes/VBZ/goes to/TO/to infinity/NN/infinity /,/, which/WDT/which is/VBZ/is equivalent/NN/equivalent to/TO/to saying/VBG/saying that/IN/that ignore/JJR/ignore consider/NN/consider leading/VBG/leading terms/NNP/terms. so/RB/so /,/, our/PRP$/our time/NN/time estimates/NNS/estimates of/IN/of algorithms/NNS/algorithms will/MD/will be/VB/be expressed/VBN/expressed using/VBG/using these/DT/these notations/NNP/notations. the/DT/the second/JJ/second thing/NN/thing that/WDT/that i/PRP/i want/VBP/want to/TO/to mention/NN/mention is/VBZ/is that/IN/that /,/, in/IN/in fact/NN/fact this/DT/this notation/NN/notation is/VBZ/is just/RB/just a/DT/a general/JJ/general notation/NN/notation on/IN/on functions/NNP/functions. and/CC/and it/PRP/it can/MD/can be/VB/be used/VBN/used for/IN/for other/JJ/other things/NNS/things as/IN/as well/RB/well and/CC/and sometimes/NNP/sometimes. and/CC/and it/PRP/it really/RB/really allows/VBZ/allows us/PRP/us to/TO/to express/VB/express /,/, what/WDT/what we/PRP/we know/VBP/know and/CC/and what/WP/what we/PRP/we do/VBP/do not/RB/not know/VB/know in/IN/in a/DT/a very/RB/very compact/JJ/compact manner/NNP/manner. so/RB/so /,/, even/RB/even if/IN/if we/PRP/we do/VBP/do not/RB/not know/VB/know even/RB/even if/IN/if we/PRP/we know/VBP/know a/DT/a little/RB/little bit/NN/bit about/IN/about it/PRP/it then/RB/then /,/, we/PRP/we can/MD/can put/VB/put it/PRP/it in/IN/in a/DT/a certain/JJ/certain class/NN/class and/CC/and that/IN/that /,/, this/DT/this partial/JJ/partial information/NN/information that/WDT/that we/PRP/we have/VBP/have can/MD/can be/VB/be nicely/RB/nicely expressed/NNP/expressed. so/RB/so /,/, this/DT/this is/VBZ/is useful/JJ/useful for/IN/for thinking/NN/thinking about/IN/about functions/NNS/functions in/IN/in general/NNP/general. thank/NN/thank you/NNP/you. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 5/CD/5 algorithm/NN/algorithm design/NN/design techniques/NNS/techniques /:/: basics/NNS/basics we/PRP/we begin/VBP/begin with/IN/with discussion/NN/discussion of/IN/of some/DT/some basic/JJ/basic design/NN/design techniques/NNS/techniques for/IN/for algorithms/NNP/algorithms. we/PRP/we will/MD/will start/VB/start with/IN/with fairly/RB/fairly simple/JJ/simple problems/NNS/problems that/WDT/that many/JJ/many of/IN/of which/WDT/which you/PRP/you may/MD/may have/VB/have seen/NNP/seen. but/CC/but /,/, we/PRP/we will/MD/will hopefully/RB/hopefully see/VB/see solutions/NNS/solutions to/TO/to non/VB/non trivial/JJ/trivial problems/NNS/problems /,/, which/WDT/which you/PRP/you may/MD/may not/RB/not have/VB/have seen/NNP/seen. the/DT/the first/JJ/first example/NN/example /,/, i/PRP/i would/MD/would like/VB/like to/TO/to start/VB/start with/IN/with is/VBZ/is finding/VBG/finding the/DT/the minimum/JJ/minimum element/NN/element in/IN/in an/DT/an array/NNP/array. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 21/CD/21 /CD/) so/RB/so /,/, the/DT/the input/NN/input problem/NN/problem is/VBZ/is find/VBN/find min/NNP/min. the/DT/the input/NN/input is/VBZ/is an/DT/an array/NN/array a/NNP/a. and/CC/and the/DT/the output/NN/output is/VBZ/is a/DT/a minimum/JJ/minimum element/NN/element in/IN/in a/NNP/a. a/DT/a element/NN/element with/IN/with whose/WP$/whose value/NN/value is/VBZ/is the/DT/the minimum/NNP/minimum. this/DT/this is/VBZ/is a/DT/a problem/NN/problem /,/, which/WDT/which most/RBS/most of/IN/of you/PRP/you would/MD/would have/VB/have see/VB/see earlier/JJR/earlier /,/, in/IN/in your/NNP/your. perhaps/RB/perhaps the/DT/the first/JJ/first programming/NN/programming course/NN/course may/MD/may be/VB/be later/JJ/later even/RB/even in/IN/in your/PRP$/your course/NN/course on/IN/on data/NNS/data structures/NNP/structures. let/VB/let us/PRP/us anyway/RB/anyway go/VBP/go over/IN/over the/DT/the solution/NNP/solution. so/RB/so /,/, the/DT/the standard/JJ/standard solution/NN/solution is/VBZ/is /,/, you/PRP/you have/VBP/have you/PRP/you take/VBP/take a/DT/a temporary/JJ/temporary variable/NNP/variable. there/RB/there is/VBZ/is a/DT/a temporary/JJ/temporary variable/JJ/variable /,/, which/WDT/which contains/VBZ/contains the/DT/the current/JJ/current minimum/NNP/minimum. so/RB/so /,/, this/DT/this contains/VBZ/contains the/DT/the current/JJ/current minimum/JJ/minimum and/CC/and it/PRP/it is/VBZ/is updated/VBN/updated at/IN/at each/DT/each step/NNP/step. so/RB/so /,/, you/PRP/you start/VBP/start with/IN/with the/DT/the first/JJ/first element/NN/element in/IN/in the/DT/the array/NNP/array. and/CC/and then/RB/then /,/, you/PRP/you scan/MD/scan the/DT/the array/NN/array element/NN/element by/IN/by element/NNP/element. the/DT/the first/JJ/first element/NN/element then/RB/then the/DT/the second/JJ/second element/NN/element third/JJ/third element/NN/element and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to the/DT/the last/JJ/last element/NN/element in/IN/in the/DT/the array/NNP/array. each/DT/each time/NN/time /,/, you/PRP/you compare/VBP/compare the/DT/the array/NN/array element/NN/element with/IN/with temp/NN/temp and/CC/and update/VB/update temp/NN/temp if/IN/if necessary/NNP/necessary. this/DT/this simple/NN/simple technique/NN/technique actually/RB/actually is/VBZ/is used/VBN/used is/VBZ/is very/RB/very powerful/NNP/powerful. and/CC/and used/VBD/used often/RB/often /,/, which/WDT/which is/VBZ/is if/IN/if your/PRP$/your input/NN/input is/VBZ/is in/IN/in the/DT/the form/NN/form of/IN/of an/DT/an array/NN/array or/CC/or a/DT/a list/NN/list /,/, then/RB/then if/IN/if you/PRP/you can/MD/can solve/VB/solve the/DT/the problem/NN/problem for/IN/for the/DT/the first/JJ/first n/NN/n minus/NN/minus 1/CD/1 elements/NNS/elements of/IN/of the/DT/the array/NNP/array. can/MD/can you/PRP/you solve/VB/solve it/PRP/it for/IN/for the/DT/the n/NN/n th/NN/th element/NN/element ?/./? this/DT/this is/VBZ/is the/DT/the step/NN/step /,/, which/WDT/which is/VBZ/is put/VBN/put in/RP/in a/DT/a loop/NNP/loop. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just write/VBP/write this/DT/this down/NNP/down. so/RB/so /,/, the/DT/the important/JJ/important step/NN/step is/VBZ/is this/NNP/this. if/IN/if a/DT/a i/NN/i is/VBZ/is less/JJR/less than/IN/than temp/NN/temp /,/, then/RB/then temp/VB/temp is/VBZ/is set/VBN/set to/TO/to a/DT/a i/NNP/i. this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial step/NNP/step. and/CC/and this/DT/this is/VBZ/is usually/RB/usually put/VBN/put in/IN/in a/DT/a loop/NN/loop i/PRP/i varies/VBZ/varies from/IN/from 1/CD/1 to/TO/to n/VB/n /,/, where/WRB/where let/VB/let us/PRP/us say/VB/say n/NN/n is/VBZ/is a/DT/a size/NN/size of/IN/of the/DT/the array/NNP/array. and/CC/and at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this temp/NN/temp will/MD/will have/VB/have /,/, the/DT/the minimum/JJ/minimum element/NN/element in/IN/in the/DT/the array/NNP/array. so/RB/so /,/, i/PRP/i will/MD/will be/VB/be when/WRB/when i/PRP/i discuss/VBP/discuss algorithms/NNS/algorithms /,/, often/RB/often i/PRP/i may/MD/may not/RB/not write/VB/write the/DT/the full/JJ/full code/NNP/code. in/IN/in fact/NN/fact /,/, i/PRP/i will/MD/will not/RB/not write/VB/write the/DT/the full/JJ/full code/NNP/code. the/DT/the idea/NN/idea is/VBZ/is to/TO/to give/VB/give you/PRP/you the/DT/the main/JJ/main ideas/NNS/ideas /,/, behind/IN/behind the/DT/the design/NN/design of/IN/of this/DT/this algorithm/NNP/algorithm. i/PRP/i may/MD/may not/RB/not take/VB/take care/NN/care of/IN/of some/DT/some of/IN/of the/DT/the stray/NN/stray cases/NNP/cases. i/PRP/i may/MD/may not/RB/not initialize/VB/initialize variables/NNS/variables properly/RB/properly etcetera/NN/etcetera /,/, etcetera/NNP/etcetera. so/RB/so /,/, all/DT/all these/DT/these programming/NN/programming details/NNS/details i/PRP/i will/MD/will not/RB/not get/VB/get into/NNP/into. the/DT/the main/JJ/main idea/NN/idea is/VBZ/is to/TO/to /,/, get/VB/get the/DT/the main/JJ/main the/DT/the techniques/NNS/techniques /,/, and/CC/and the/DT/the ideas/NNS/ideas behind/IN/behind the/DT/the algorithm/NN/algorithm which/WDT/which solves/NNS/solves the/DT/the problem/NNP/problem. and/CC/and you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to sort/NN/sort of/IN/of take/NN/take these/DT/these ideas/NNS/ideas together/NNP/together. and/CC/and write/VB/write the/DT/the program/NN/program /,/, which/WDT/which actually/RB/actually works/NNP/works. yes/NNP/yes. so/RB/so /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this /,/, this/DT/this is/VBZ/is the/DT/the level/NN/level at/IN/at which/WDT/which we/PRP/we will/MD/will describe/VB/describe algorithms/NNS/algorithms may/MD/may be/VB/be even/RB/even less/NNP/less. i/PRP/i could/MD/could just/RB/just say/VB/say /,/, scan/JJ/scan the/DT/the array/NN/array element/NN/element by/IN/by element/NNP/element. and/CC/and update/VB/update the/DT/the current/JJ/current minimum/JJ/minimum as/IN/as required/NNP/required. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 15/CD/15 /CD/) there/EX/there are/VBP/are /,/, so/RB/so there/RB/there is/VBZ/is two/CD/two things/NNS/things couple/NNS/couple of/IN/of things/NNS/things that/WDT/that i/PRP/i would/MD/would like/VB/like to/TO/to point/VB/point out/NNP/out. so/IN/so /,/, this/DT/this thing/NN/thing this/DT/this design/NN/design technique/NN/technique is/VBZ/is often/RB/often called/VBN/called well/RB/well induction/NNP/induction. both/DT/both recursion/NN/recursion and/CC/and iteration/NN/iteration actually/RB/actually go/VB/go with/IN/with this/NNP/this. i/PRP/i will/MD/will explain/VB/explain this/DT/this a/DT/a bit/NN/bit more/NNP/more. the/DT/the second/JJ/second technique/NN/technique /,/, the/DT/the second/JJ/second sort/NN/sort of/IN/of thing/NN/thing we/PRP/we will/MD/will keep/VB/keep in/IN/in mind/NN/mind is/VBZ/is ordering/NNP/ordering. and/CC/and the/DT/the third/JJ/third thing/NN/thing is/VBZ/is to/TO/to store/VB/store value/NN/value /,/, already/RB/already computed/NNP/computed. i/PRP/i must/MD/must add/VB/add store/RBR/store necessary/JJ/necessary this/DT/this value/NNP/value. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go each/DT/each of/IN/of these/DT/these one/CD/one by/IN/by one/NNP/one. so/RB/so /,/, induction/NN/induction what/WP/what you/PRP/you mean/VBP/mean by/IN/by induction/NN/induction is/VBZ/is this/NNP/this. you/PRP/you want/VBP/want to/TO/to solve/VB/solve a/DT/a problem/NNP/problem. your/PRP$/your input/NN/input has/VBZ/has some/DT/some size/NNP/size. the/DT/the array/NN/array has/VBZ/has say/VB/say size/NN/size n/NNP/n. now/RB/now /,/, the/DT/the one/CD/one way/NN/way to/TO/to solve/VB/solve it/PRP/it is/VBZ/is /,/, supposing/VBG/supposing you/PRP/you can/MD/can solve/VB/solve this/DT/this problem/NN/problem for/IN/for smaller/JJR/smaller values/NNS/values of/IN/of input/NNP/input. if/IN/if this/DT/this problem/NN/problem can/MD/can be/VB/be solved/VBN/solved for/IN/for smaller/JJR/smaller values/NNS/values of/IN/of input/NN/input /,/, now/RB/now can/MD/can i/PRP/i extend/VBP/extend these/DT/these solutions/NNS/solutions to/TO/to a/DT/a solution/NN/solution for/IN/for the/DT/the bigger/JJR/bigger input/NNP/input. if/IN/if you/PRP/you can/MD/can solve/VB/solve the/DT/the problem/NN/problem for/IN/for the/DT/the smaller/JJR/smaller values/NNS/values of/IN/of input/NN/input /,/, can/MD/can you/PRP/you extend/VB/extend the/DT/the solution/NN/solution to/TO/to a/DT/a bigger/JJR/bigger value/NN/value of/IN/of the/DT/the input/NNP/input. for/IN/for instance/NN/instance /,/, if/IN/if i/PRP/i can/MD/can solve/VB/solve a/DT/a problem/NN/problem for/IN/for all/DT/all arrays/NNS/arrays of/IN/of size/NN/size n/NN/n minus/NN/minus 1/CD/1 /,/, can/MD/can i/PRP/i solve/VB/solve this/DT/this problem/NN/problem for/IN/for an/DT/an array/NN/array of/IN/of size/NN/size n/NN/n ?/./? now/RB/now /,/, this/DT/this step/NN/step which/WDT/which takes/VBZ/takes you/PRP/you from/IN/from n/JJ/n minus/NN/minus 1/CD/1 to/TO/to n/VB/n is/VBZ/is often/RB/often put/VBN/put is/VBZ/is the/DT/the crucial/JJ/crucial step/NNP/step. and/CC/and once/RB/once you/PRP/you come/VBP/come up/RP/up with/IN/with this/DT/this step/NN/step /,/, we/PRP/we just/RB/just put/VBD/put this/DT/this step/NN/step in/IN/in a/DT/a loop/NN/loop or/CC/or you/PRP/you use/VBP/use recursion/NNP/recursion. you/PRP/you first/RB/first recurse/VBP/recurse on/IN/on an/DT/an array/NN/array of/IN/of size/NN/size n/NN/n minus/NN/minus 1/CD/1 /,/, and/CC/and then/RB/then extend/VB/extend it/PRP/it to/TO/to an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. or/CC/or you/PRP/you scan/MD/scan the/DT/the array/NN/array one/CD/one by/IN/by one/CD/one /,/, element/NN/element by/IN/by element/NNP/element. and/CC/and you/PRP/you update/VBP/update the/DT/the solution/NN/solution as/IN/as you/PRP/you go/VBP/go along/NNP/along. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by induction/NNP/induction. and/CC/and it/PRP/it is/VBZ/is at/IN/at the/DT/the base/NN/base of/IN/of every/DT/every algorithm/NN/algorithm design/NN/design technique/NNP/technique. you/PRP/you can/MD/can call/VB/call it/PRP/it the/DT/the mother/NN/mother of/IN/of all/DT/all algorithm/NN/algorithm design/NN/design techniques/NNP/techniques. you/PRP/you will/MD/will learn/VB/learn some/DT/some more/RBR/more fancier/JJ/fancier things/NNS/things later/JJ/later /,/, but/CC/but this/DT/this is/VBZ/is the/DT/the very/JJ/very crux/NN/crux of/IN/of design/NN/design of/IN/of every/DT/every algorithms/NNP/algorithms. second/JJ/second point/NN/point that/WDT/that /,/, i/PRP/i would/MD/would like/VB/like to/TO/to make/VB/make is/VBZ/is ordering/VBG/ordering the/DT/the input/NNP/input. looking/VBG/looking at/IN/at the/DT/the input/NN/input in/IN/in the/DT/the right/NN/right order/NN/order often/RB/often helps/NNP/helps. in/IN/in this/DT/this case/NN/case /,/, it/PRP/it is/VBZ/is simple/NNP/simple. you/PRP/you know/VBP/know /,/, you/PRP/you look/VBP/look at/IN/at the/DT/the array/NN/array elements/NNS/elements in/IN/in the/DT/the increasing/VBG/increasing order/NN/order of/IN/of the/DT/the array/NN/array index/NNP/index. in/IN/in fact/NN/fact /,/, you/PRP/you could/MD/could look/VB/look at/IN/at the/DT/the array/NN/array in/IN/in any/DT/any order/NNP/order. it/PRP/it really/RB/really does/VBZ/does not/RB/not matter/NNP/matter. but/CC/but /,/, there/EX/there are/VBP/are cases/NNS/cases /,/, we/PRP/we will/MD/will see/VB/see cases/NNS/cases where/WRB/where ordering/VBG/ordering plays/NNS/plays a/DT/a very/RB/very crucial/JJ/crucial role/NN/role in/IN/in solving/NN/solving the/DT/the problem/NNP/problem. the/DT/the third/JJ/third thing/NN/thing /,/, which/WDT/which is/VBZ/is also/RB/also fairly/RB/fairly simple/JJ/simple here/RB/here is/VBZ/is to/TO/to store/VB/store some/DT/some of/IN/of the/DT/the values/NNS/values that/WDT/that you/PRP/you already/RB/already computed/NNP/computed. that/IN/that is/VBZ/is the/DT/the third/JJ/third point/NN/point /,/, we/PRP/we want/VBP/want to/TO/to make/NNP/make. now/RB/now /,/, even/RB/even in/IN/in this/DT/this case/NN/case it/PRP/it is/VBZ/is simple/NNP/simple. you/PRP/you just/RB/just store/VBP/store the/DT/the previous/JJ/previous minimum/JJ/minimum /,/, the/DT/the variable/JJ/variable temp/NN/temp the/DT/the temporary/JJ/temporary variable/JJ/variable which/WDT/which we/PRP/we had/NNP/had. so/RB/so /,/, these/DT/these are/VBP/are values/NNS/values that/IN/that you/PRP/you would/MD/would like/VB/like to/TO/to use/VB/use in/IN/in future/NNP/future. almost/RB/almost every/DT/every algorithm/NN/algorithm design/NN/design technique/NN/technique that/WDT/that /,/, we/PRP/we will/MD/will study/VB/study are/VBP/are a/DT/a combination/NN/combination of/IN/of these/DT/these three/NNP/three. some/DT/some of/IN/of them/PRP/them will/MD/will use/VB/use just/RB/just induction/NN/induction and/CC/and storing/VBG/storing whole/JJ/whole values/NNP/values. some/DT/some of/IN/of them/PRP/them will/MD/will use/VB/use all/DT/all three/NNP/three. some/DT/some of/IN/of them/PRP/them will/MD/will just/RB/just order/VB/order the/DT/the input/NN/input and/CC/and use/VBP/use induction/NNP/induction. so/RB/so /,/, these/DT/these three/CD/three are/VBP/are things/NNS/things that/IN/that you/PRP/you must/MD/must keep/VB/keep at/IN/at the/DT/the back/NN/back of/IN/of your/PRP$/your mind/NN/mind /,/, when/WRB/when you/PRP/you design/VBP/design any/DT/any algorithm/NNP/algorithm. let/NN/let us/PRP/us analyze/VBP/analyze this/DT/this algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 23/CD/23 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the here/RB/here is/VBZ/is an/DT/an analysis/NNP/analysis. every/DT/every algorithm/NN/algorithm that/IN/that we/PRP/we design/VBP/design /,/, we/PRP/we will/MD/will analyze/NNP/analyze. analysis/NN/analysis is/VBZ/is as/IN/as important/JJ/important a/DT/a part/NN/part of/IN/of this/DT/this subject/NN/subject as/IN/as design/NNP/design. and/CC/and we/PRP/we would/MD/would like/VB/like algorithms/NNS/algorithms to/TO/to be/VB/be as/RB/as fast/JJ/fast as/IN/as possible/JJ/possible /,/, in/IN/in the/DT/the worst/JJS/worst case/NNP/case. so/RB/so /,/, all/DT/all our/PRP$/our analysis/NN/analysis pertain/NN/pertain to/TO/to worst/VB/worst case/NNP/case. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to design/VB/design algorithms/NNS/algorithms /,/, which/WDT/which are/VBP/are as/RB/as fast/JJ/fast as/IN/as possible/NNP/possible. so/RB/so /,/, in/IN/in this/DT/this case/NN/case we/PRP/we look/VBP/look at/IN/at every/DT/every array/NN/array element/NN/element one/NNP/one. and/CC/and we/PRP/we make/VBP/make one/CD/one comparison/NN/comparison for/IN/for array/NN/array element/NNP/element. this/DT/this leads/NNS/leads to/TO/to /,/, we/PRP/we make/VBP/make n/RP/n minus/NN/minus one/CD/one comparison/NNP/comparison. we/PRP/we do/VBP/do not/RB/not really/RB/really compare/VB/compare anything/NN/anything with/IN/with the/DT/the first/JJ/first element/NNP/element. but/CC/but /,/, with/IN/with each/DT/each of/IN/of these/DT/these subsequent/JJ/subsequent we/PRP/we make/VBP/make one/CD/one comparison/NNP/comparison. n/NN/n is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, we/PRP/we make/VBP/make n/RP/n minus/NN/minus 1/CD/1 comparison/NNP/comparison. along/IN/along with/IN/with comparison/NN/comparison /,/, we/PRP/we need/VBP/need to/TO/to we/PRP/we also/RB/also store/VBP/store this/DT/this new/JJ/new value/NN/value in/IN/in temp/NNP/temp. but/CC/but /,/, the/DT/the number/NN/number of/IN/of times/NNS/times we/PRP/we do/VBP/do this/DT/this exactly/RB/exactly equals/VBZ/equals the/DT/the number/NN/number of/IN/of mean/NNP/mean. it/PRP/it is/VBZ/is let/VB/let us/PRP/us say/VB/say one/CD/one more/JJR/more than/IN/than the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, we/PRP/we make/NNP/make. so/RB/so /,/, if/IN/if you/PRP/you are/VBP/are not/RB/not really/RB/really worried/VBN/worried about/IN/about constants/NNS/constants /,/, then/RB/then you/PRP/you can/MD/can just/RB/just focus/VB/focus on/IN/on the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. as/IN/as long/RB/long as/IN/as i/PRP/i bound/VBP/bound the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, the/DT/the other/JJ/other small/JJ/small operations/NNS/operations that/WDT/that i/PRP/i do/VBP/do /,/, like/IN/like incrementing/NN/incrementing the/DT/the index/NN/index variable/JJ/variable of/IN/of the/DT/the array/NN/array or/CC/or storing/VBG/storing the/DT/the value/NN/value in/IN/in temp/NNP/temp. they/PRP/they all/DT/all are/VBP/are of/IN/of the/DT/the same/JJ/same order/NN/order as/IN/as the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. so/RB/so /,/, the/DT/the time/NN/time taken/VBN/taken here/RB/here we/PRP/we would/MD/would say/VB/say is/VBZ/is order/NN/order n/NNP/n. the/DT/the time/NN/time taken/VBN/taken is/VBZ/is order/NN/order n/NN/n /,/, but/CC/but our/PRP$/our focus/NN/focus is/VBZ/is just/RB/just on/IN/on the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. i/PRP/i think/VBP/think the/DT/the question/NN/question that/IN/that one/CD/one can/MD/can ask/VB/ask and/CC/and one/CD/one should/MD/should ask/VB/ask is/VBZ/is this/DT/this the/DT/the best/JJS/best ?/./? can/MD/can i/VB/i find/VB/find the/DT/the minimum/JJ/minimum element/NN/element in/IN/in an/DT/an array/NN/array in/IN/in using/VBG/using less/JJR/less than/IN/than n/NN/n minus/NN/minus one/CD/one comparison/NN/comparison ?/./? well/RB/well /,/, we/PRP/we just/RB/just think/VBP/think about/IN/about it/NNP/it. or/CC/or even/RB/even /,/, if/IN/if you/PRP/you do/VBP/do not/RB/not think/VB/think about/IN/about it/NNP/it. i/PRP/i guess/VBZ/guess /,/, most/RBS/most of/IN/of you/PRP/you will/MD/will jump/VB/jump up/RP/up and/CC/and say/VB/say /,/, of/IN/of course/NN/course you/PRP/you need/VBP/need n/NN/n minus/NN/minus 1/CD/1 comparison/NNP/comparison. that/IN/that is/VBZ/is the/DT/the sort/NN/sort of/IN/of first/JJ/first reaction/NN/reaction that/WDT/that /,/, most/RBS/most people/NNS/people will/MD/will have/NNP/have. without/IN/without making/VBG/making n/NN/n minus/NN/minus 1/CD/1 comparison/NN/comparison /,/, how/WRB/how can/MD/can you/PRP/you find/VB/find the/DT/the minimum/JJ/minimum ?/./? why/WRB/why is/VBZ/is this/DT/this so/RB/so ?/./? can/MD/can you/PRP/you logically/RB/logically argue/VBP/argue that/IN/that /,/, you/PRP/you actually/RB/actually need/VBP/need n/NN/n minus/NN/minus 1/CD/1 and/CC/and you/PRP/you know/VBP/know you/PRP/you can/MD/can not/RB/not do/VB/do with/IN/with less/JJR/less than/IN/than n/NN/n minus/NN/minus 1/CD/1. this/DT/this argument/NN/argument is/VBZ/is easy/JJ/easy /,/, but/CC/but not/RB/not absolutely/RB/absolutely trivial/NNP/trivial. let/VB/let us/PRP/us see/NNP/see. so/RB/so /,/, why/WRB/why should/MD/should we/PRP/we make/VB/make n/JJ/n minus/NN/minus 1/CD/1. can/MD/can we/PRP/we do/VBP/do it/PRP/it with/IN/with less/JJR/less ?/./? well/RB/well /,/, every/DT/every element/NN/element you/PRP/you have/VB/have to/TO/to look/VB/look at/IN/at least/NNP/least. every/DT/every element/NN/element in/IN/in the/DT/the array/NN/array must/MD/must be/VB/be compared/VBN/compared to/TO/to something/NN/something or/CC/or the/DT/the other/NNP/other. if/IN/if it/PRP/it is/VBZ/is not/RB/not compared/VBN/compared then/RB/then /,/, you/PRP/you may/MD/may actually/RB/actually make/VB/make it/PRP/it the/DT/the minimum/NNP/minimum. it/PRP/it could/MD/could be/VB/be the/DT/the minimum/NNP/minimum. if/IN/if you/PRP/you had/VBD/had output/VBN/output something/NN/something else/RB/else as/IN/as a/DT/a minimum/JJ/minimum then/RB/then /,/, this/DT/this could/MD/could have/VB/have been/VBN/been made/VBN/made the/DT/the minimum/NNP/minimum. or/CC/or you/PRP/you can/MD/can easily/RB/easily make/VB/make some/DT/some other/JJ/other element/NN/element of/IN/of the/DT/the array/NN/array the/DT/the minimum/NNP/minimum. so/RB/so /,/, without/IN/without comparing/NN/comparing if/IN/if you/PRP/you do/VBP/do not/RB/not compare/VB/compare an/DT/an element/NN/element then/RB/then /,/, you/PRP/you can/MD/can not/RB/not tell/VB/tell the/DT/the minimum/JJ/minimum element/NN/element in/IN/in an/DT/an array/NNP/array. now/RB/now /,/, this/DT/this gives/VBZ/gives you/PRP/you this/DT/this does/VBZ/does not/RB/not give/VB/give you/PRP/you n/VB/n minus/NN/minus 1/CD/1. it/PRP/it gives/VBZ/gives you/PRP/you n/VBP/n by/IN/by 2/CD/2 /,/, assuming/VBG/assuming n/NN/n is/VBZ/is even/NNP/even. so/RB/so /,/, at/IN/at least/JJS/least n/NN/n by/IN/by 2/CD/2 comparisons/NNS/comparisons are/VBP/are needed/NNP/needed. the/DT/the reason/NN/reason every/DT/every element/NN/element must/MD/must be/VB/be compared/VBN/compared /,/, must/MD/must be/VB/be in/IN/in some/DT/some comparison/NNP/comparison. what/WP/what i/PRP/i mean/VBP/mean is/VBZ/is /,/, every/DT/every element/NN/element must/MD/must be/VB/be compared/VBN/compared with/IN/with some/DT/some other/JJ/other element/NNP/element. this/DT/this can/MD/can be/VB/be done/VBN/done with/IN/with n/NN/n by/IN/by 2/CD/2 /,/, by/IN/by the/DT/the way/NNP/way. so/RB/so /,/, the/DT/the first/JJ/first element/NN/element is/VBZ/is compared/VBN/compared with/IN/with the/DT/the second/JJ/second element/NNP/element. the/DT/the third/JJ/third element/NN/element is/VBZ/is compared/VBN/compared with/IN/with the/DT/the fourth/JJ/fourth element/NN/element and/CC/and so/RB/so on/NNP/on. the/DT/the fifth/JJ/fifth element/NN/element is/VBZ/is compared/VBN/compared with/IN/with the/DT/the sixth/JJ/sixth element/NN/element and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, with/IN/with n/NN/n 2/CD/2 two/CD/two comparisons/NNS/comparisons /,/, if/IN/if n/NN/n is/VBZ/is even/RB/even or/CC/or n/VB/n by/IN/by 2/CD/2 plus/CC/plus 1/CD/1 /,/, if/IN/if n/NN/n is/VBZ/is odd/NNP/odd. well/RB/well /,/, ceiling/NN/ceiling of/IN/of n/NN/n by/IN/by 2/CD/2 comparisons/NNS/comparisons are/VBP/are all/DT/all that/DT/that is/VBZ/is necessary/NNP/necessary. to/TO/to sort/VB/sort of/IN/of satisfy/NN/satisfy this/DT/this condition/NN/condition that/IN/that /,/, every/DT/every element/NN/element must/MD/must be/VB/be in/IN/in some/DT/some comparison/NNP/comparison. now/RB/now /,/, clearly/RB/clearly n/JJ/n by/IN/by 2/CD/2 is/VBZ/is not/RB/not the/DT/the right/NN/right answer/NNP/answer. n/NN/n minus/VBZ/minus 1/CD/1 is/VBZ/is the/DT/the right/NN/right answer/NNP/answer. and/CC/and why/WRB/why is/VBZ/is it/PRP/it that/IN/that 1/CD/1 is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1 ?/./? so/RB/so /,/, here/RB/here is/VBZ/is an/DT/an argument/NNP/argument. see/NN/see initially/RB/initially /,/, when/WRB/when you/PRP/you have/VBP/have not/RB/not made/VBN/made any/DT/any comparison/NN/comparison there/RB/there are/VBP/are n/VBN/n candidates/NNS/candidates for/IN/for the/DT/the minimum/NNP/minimum. each/DT/each element/NN/element in/IN/in the/DT/the array/NN/array can/MD/can actually/RB/actually be/VB/be a/DT/a minimum/NNP/minimum. you/PRP/you do/VBP/do not/RB/not know/VB/know /,/, which/WDT/which of/IN/of these/DT/these n/NN/n elements/NNS/elements are/VBP/are minimum/NNP/minimum. now/RB/now /,/, when/WRB/when you/PRP/you make/VBP/make a/DT/a comparison/NN/comparison /,/, you/PRP/you can/MD/can get/VB/get rid/JJ/rid of/IN/of only/RB/only one/CD/one of/IN/of these/DT/these candidates/NNP/candidates. when/WRB/when you/PRP/you compare/VBP/compare /,/, let/VB/let us/PRP/us say/VB/say at/IN/at some/DT/some stage/NN/stage you/PRP/you have/VB/have candidates/NNS/candidates x/VB/x 1/CD/1 x/NN/x 2/CD/2 up/IN/up to/TO/to x/VB/x k/NN/k /,/, some/DT/some k/NN/k elements/NNS/elements are/VBP/are candidates/NNS/candidates for/IN/for the/DT/the minimum/NNP/minimum. each/DT/each of/IN/of them/PRP/them based/VBN/based on/IN/on the/DT/the comparisons/NNS/comparisons that/WDT/that you/PRP/you have/VBP/have made/VBN/made /,/, previously/RB/previously each/DT/each of/IN/of them/PRP/them is/VBZ/is equally/RB/equally likely/JJ/likely /,/, i/PRP/i mean/VBP/mean each/DT/each of/IN/of them/PRP/them can/MD/can be/VB/be a/DT/a minimum/NNP/minimum. now/RB/now /,/, if/IN/if you/PRP/you compare/VBP/compare two/CD/two of/IN/of these/DT/these candidates/NNS/candidates you/PRP/you can/MD/can get/VB/get rid/JJ/rid of/IN/of one/NNP/one. whichever/NN/whichever one/CD/one is/VBZ/is smaller/JJR/smaller /,/, that/IN/that still/RB/still remains/VBZ/remains a/DT/a candidate/NNP/candidate. whichever/NN/whichever one/CD/one was/VBD/was larger/JJR/larger /,/, that/IN/that no/DT/no longer/NN/longer remains/VBZ/remains the/DT/the candidate/NNP/candidate. but/CC/but /,/, you/PRP/you can/MD/can only/RB/only get/VB/get rid/VBN/rid of/IN/of one/CD/one candidate/NNP/candidate. so/RB/so /,/, with/IN/with each/DT/each comparison/NN/comparison i/PRP/i can/MD/can only/RB/only get/VB/get rid/VBN/rid of/IN/of one/CD/one candidate/NNP/candidate. i/PRP/i have/VBP/have n/VBN/n candidates/NNS/candidates to/TO/to start/VB/start with/NNP/with. so/RB/so /,/, i/PRP/i need/VBP/need n/JJ/n minus/NN/minus 1/CD/1 comparison/NNP/comparison. this/DT/this is/VBZ/is actually/RB/actually a/DT/a complete/JJ/complete proof/NN/proof /,/, though/IN/though a/DT/a bit/NN/bit hang/NN/hang wavy/NNP/wavy. you/PRP/you can/MD/can make/VB/make it/PRP/it more/JJR/more rigorous/JJ/rigorous also/NN/also. here/RB/here is/VBZ/is one/CD/one more/RBR/more way/NN/way of/IN/of looking/VBG/looking at/IN/at it/NNP/it. supposing/NN/supposing /,/, you/PRP/you draw/VBP/draw the/DT/the following/VBG/following graph/NNP/graph. so/RB/so /,/, initially/RB/initially we/PRP/we have/VBP/have i/PRP/i have/VBP/have all/PDT/all these/DT/these nodes/NNP/nodes. let/VBD/let us/PRP/us say/VBP/say the/DT/the elements/NNS/elements x/VBP/x 1/CD/1 x/NN/x 2/CD/2 up/IN/up to/TO/to x/VB/x n/NNP/n. these/DT/these are/VBP/are elements/NNS/elements and/CC/and the/DT/the array/NN/array and/CC/and also/RB/also vertices/VBZ/vertices in/IN/in our/PRP$/our graph/NNP/graph. let/NN/let me/PRP/me just/RB/just put/VBD/put a/DT/a circle/NN/circle around/IN/around these/DT/these two/CD/two /,/, indicate/JJ/indicate that/IN/that these/DT/these are/VBP/are also/RB/also vertices/NNP/vertices. now/RB/now /,/, when/WRB/when you/PRP/you compare/VBP/compare x/NN/x i/PRP/i and/CC/and x/VB/x j/NNP/j. here/RB/here is/VBZ/is x/NN/x i/PRP/i and/CC/and here/RB/here is/VBZ/is x/NN/x j/NN/j /,/, i/PRP/i draw/VBP/draw an/DT/an edge/NN/edge between/IN/between these/DT/these two/NNP/two. now/RB/now /,/, when/WRB/when you/PRP/you compare/VBP/compare let/VB/let us/PRP/us say/VB/say x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2 and/CC/and x/NN/x n/NN/n /,/, i/PRP/i draw/VBP/draw this/DT/this edge/NNP/edge. now/RB/now /,/, x/NN/x j/NN/j and/CC/and x/NN/x n/NN/n are/VBP/are compared/VBN/compared i/PRP/i draw/VBP/draw this/DT/this edge/NN/edge and/CC/and so/RB/so on/NNP/on. as/IN/as you/PRP/you make/VBP/make comparisons/NNS/comparisons /,/, i/PRP/i keep/VBP/keep drawing/VBG/drawing these/DT/these edges/NNP/edges. so/RB/so /,/, once/RB/once your/PRP$/your program/NN/program ends/NNS/ends terminates/VBZ/terminates /,/, you/PRP/you have/VBP/have done/VBN/done all/DT/all these/DT/these comparisons/NNP/comparisons. now/RB/now /,/, i/PRP/i look/VBP/look at/IN/at this/DT/this graph/NNP/graph. and/CC/and i/PRP/i look/VBP/look at/IN/at each/DT/each connected/VBN/connected component/NN/component in/IN/in this/DT/this graph/NNP/graph. if/IN/if there/EX/there are/VBP/are more/JJR/more than/IN/than one/CD/one connected/VBN/connected components/NNS/components in/IN/in this/DT/this graph/NN/graph /,/, then/RB/then i/PRP/i will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to tell/VB/tell the/DT/the minimum/NNP/minimum. now/RB/now /,/, in/IN/in each/DT/each connected/VBN/connected component/NN/component i/PRP/i know/VBP/know which/WDT/which is/VBZ/is the/DT/the minimum/JJ/minimum ?/./? there/EX/there will/MD/will be/VB/be one/CD/one which/WDT/which is/VBZ/is a/DT/a minimum/JJ/minimum /,/, but/CC/but i/PRP/i can/MD/can surely/RB/surely give/VB/give values/NNS/values to/TO/to these/NNP/these. so/RB/so /,/, that/IN/that i/PRP/i can/MD/can pick/VB/pick the/DT/the global/JJ/global minimum/JJ/minimum from/IN/from /,/, any/DT/any one/CD/one of/IN/of these/DT/these connected/VBN/connected components/NNP/components. here/RB/here /,/, this/DT/this is/VBZ/is arguments/NNS/arguments that/IN/that after/IN/after the/DT/the comparisons/NNS/comparisons are/VBP/are over/IN/over /,/, once/RB/once you/PRP/you finished/VBD/finished all/DT/all comparisons/NNS/comparisons i/PRP/i better/JJR/better have/VBP/have one/CD/one connected/VBN/connected component/NNP/component. this/DT/this means/VBZ/means from/IN/from a/DT/a discrete/JJ/discrete structure/NN/structure ?/./? s/NNS/s class/NN/class /,/, you/PRP/you know/VBP/know that/IN/that you/PRP/you need/VBP/need n/NN/n minus/NN/minus 1/CD/1 edges/NNP/edges. so/RB/so /,/, this/DT/this is/VBZ/is just/RB/just the/DT/the same/JJ/same argument/NNP/argument. both/DT/both of/IN/of them/PRP/them have/VBP/have the/DT/the same/JJ/same idea/NN/idea behind/IN/behind both/NNP/both. for/IN/for instance/NN/instance /,/, here/RB/here you/PRP/you start/VBP/start with/IN/with n/NN/n connected/VBN/connected components/NNP/components. and/CC/and each/DT/each time/NN/time you/PRP/you add/VBP/add an/DT/an edge/NN/edge /,/, you/PRP/you can/MD/can decrease/VB/decrease the/DT/the number/NN/number of/IN/of connected/VBN/connected components/NNS/components by/IN/by 1/CD/1 at/IN/at most/JJS/most 1/CD/1. so/RB/so /,/, it/PRP/it is/VBZ/is the/DT/the same/JJ/same argument/NNP/argument. so/IN/so /,/, you/PRP/you need/VBP/need n/NN/n minus/NN/minus 1/CD/1. and/CC/and this/DT/this sort/NN/sort of/IN/of simple/NN/simple scan/NN/scan of/IN/of the/DT/the array/NN/array does/VBZ/does it/PRP/it with/IN/with n/NN/n minus/NN/minus 1/CD/1 comparison/NNP/comparison. let/NN/let us/PRP/us look/VBP/look at/IN/at a/DT/a slight/NN/slight variation/NN/variation of/IN/of this/DT/this problem/NNP/problem. now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find not/RB/not just/RB/just the/DT/the minimum/JJ/minimum in/IN/in the/DT/the array/NN/array /,/, but/CC/but also/RB/also the/DT/the maximum/NNP/maximum. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 29/CD/29 /CD/) so/RB/so /,/, this/DT/this problem/NN/problem is/VBZ/is called/VBN/called max/NN/max min/NNP/min. so/RB/so /,/, the/DT/the input/NN/input is/VBZ/is in/IN/in array/NN/array a/NNP/a. and/CC/and the/DT/the output/NN/output is/VBZ/is the/DT/the maximum/NN/maximum and/CC/and the/DT/the minimum/JJ/minimum elements/NNS/elements in/IN/in a/NNP/a. so/RB/so /,/, i/PRP/i want/VBP/want both/DT/both the/DT/the maximum/NN/maximum and/CC/and the/DT/the minimum/JJ/minimum element/NNP/element. now/RB/now /,/, if/IN/if i/PRP/i just/RB/just wanted/VBD/wanted to/TO/to find/VB/find the/DT/the maximum/NN/maximum /,/, the/DT/the procedure/NN/procedure is/VBZ/is clearly/RB/clearly the/DT/the same/JJ/same as/IN/as the/DT/the one/CD/one for/IN/for the/DT/the minimum/JJ/minimum element/NNP/element. what/WP/what if/IN/if i/PRP/i want/VBP/want to/TO/to find/VB/find both/DT/both the/DT/the maximum/NN/maximum and/CC/and the/DT/the minimum/JJ/minimum ?/./? well/RB/well i/PRP/i could/MD/could first/RB/first find/VB/find the/DT/the minimum/JJ/minimum and/CC/and then/RB/then /,/, i/PRP/i can/MD/can find/VB/find the/DT/the maximum/NNP/maximum. how/WRB/how many/JJ/many comparisons/NNS/comparisons does/VBZ/does this/DT/this take/NN/take ?/./? well/RB/well n/JJ/n minus/NN/minus 1/CD/1 for/IN/for the/DT/the maximum/NNP/maximum. n/NN/n minus/VBZ/minus 1/CD/1 for/IN/for the/DT/the minimum/NNP/minimum. and/CC/and that/IN/that makes/NNS/makes it/PRP/it 2/CD/2 n/NN/n minus/NN/minus 2/CD/2. so/RB/so /,/, the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that a/DT/a na/NN/na ?/./? ve/NN/ve algorithm/NNP/algorithm. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that /,/, the/DT/the na/NN/na ?/./? ve/NN/ve algorithm/NN/algorithm makes/NNP/makes. we/PRP/we can/MD/can ask/VB/ask the/DT/the same/JJ/same question/NNP/question. is/VBZ/is this/DT/this the/DT/the best/JJS/best ?/./? you/PRP/you can/MD/can try/VB/try the/DT/the previous/JJ/previous argument/NN/argument that/WDT/that /,/, we/PRP/we had/VBD/had of/IN/of connected/VBN/connected components/NNP/components. and/CC/and so/RB/so /,/, you/PRP/you can/MD/can show/VB/show that/IN/that you/PRP/you need/VBP/need m/NN/m minus/NN/minus 1/CD/1. that/WDT/that is/VBZ/is fine/NN/fine /,/, but/CC/but when/WRB/when you/PRP/you see/VBP/see more/JJR/more than/IN/than /,/, that/IN/that is/VBZ/is very/RB/very difficult/JJ/difficult to/TO/to prove/NNP/prove. it/PRP/it is/VBZ/is not/RB/not absolutely/RB/absolutely impossible/JJ/impossible /,/, but/CC/but it/PRP/it is/VBZ/is difficult/NNP/difficult. and/CC/and if/IN/if you/PRP/you try/VBP/try to/TO/to certainly/RB/certainly increase/VB/increase it/PRP/it to/TO/to 2/CD/2 n/NN/n minus/NN/minus 2/CD/2 /,/, it/PRP/it is/VBZ/is impossible/NNP/impossible. you/PRP/you will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to prove/VB/prove it/NNP/it. let/VB/let us/PRP/us look/VB/look at/IN/at some/DT/some small/JJ/small values/NNP/values. supposing/NN/supposing i/PRP/i have/VBP/have four/CD/four elements/NNS/elements /,/, i/PRP/i have/VBP/have let/VBN/let us/PRP/us say/VBP/say x/NN/x 1/CD/1 x/NN/x 2/CD/2 x/NN/x 3/CD/3 and/CC/and x/NN/x 4/CD/4. the/DT/the na/NN/na ?/./? ve/NN/ve algorithm/NN/algorithm took/VBD/took x/NN/x 1/CD/1 compared/VBN/compared with/IN/with all/DT/all of/IN/of them/NNP/them. found/VBD/found the/DT/the minimum/JJ/minimum and/CC/and then/RB/then we/PRP/we were/VBD/were done/NNP/done. then/RB/then /,/, we/PRP/we took/VBD/took again/RB/again took/VBD/took x/NN/x 1/CD/1 we/PRP/we compared/VBN/compared it/PRP/it with/IN/with all/DT/all of/IN/of them/NNP/them. and/CC/and while/IN/while maintaining/VBG/maintaining the/DT/the maximum/NN/maximum /,/, the/DT/the temporary/JJ/temporary maximum/NNP/maximum. now/RB/now /,/, many/JJ/many of/IN/of these/DT/these comparisons/NNS/comparisons are/VBP/are repeated/NNP/repeated. so/RB/so /,/, you/PRP/you see/VBP/see that/IN/that many/JJ/many of/IN/of some/DT/some of/IN/of these/DT/these comparisons/NNS/comparisons that/WDT/that you/PRP/you make/VBP/make /,/, when/WRB/when you/PRP/you on/IN/on roll/NN/roll the/DT/the whole/JJ/whole thing/NN/thing out/IN/out /,/, are/VBP/are repeated/NNP/repeated. so/RB/so /,/, our/PRP$/our aim/NN/aim is/VBZ/is to/TO/to sort/NN/sort of/IN/of get/NN/get rid/VBD/rid of/IN/of these/DT/these unnecessary/JJ/unnecessary comparisons/NNP/comparisons. now/RB/now /,/, in/IN/in four/CD/four elements/NNS/elements here/RB/here is/VBZ/is what/WP/what you/PRP/you can/MD/can do/VB/do. i/PRP/i first/RB/first compare/VBP/compare x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2. so/RB/so /,/, supposing/VBG/supposing x/NN/x 1/CD/1 is/VBZ/is less/JJR/less than/IN/than x/NN/x 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first comparison/NNP/comparison. x/NN/x 1/CD/1 is/VBZ/is less/JJR/less than/IN/than x/NN/x 2/CD/2. now/RB/now /,/, i/PRP/i compare/VBP/compare x/NN/x 3/CD/3 and/CC/and x/NN/x 4/CD/4. supposing/VBG/supposing x/NN/x 3/CD/3 is/VBZ/is greater/JJR/greater than/IN/than x/NN/x 4/CD/4. this/DT/this is/VBZ/is my/PRP$/my second/JJ/second comparison/NNP/comparison. now/RB/now /,/, where/WRB/where do/VBP/do i/PRP/i find/VBP/find the/DT/the minimum/JJ/minimum ?/./? i/PRP/i mean/VBP/mean /,/, how/WRB/how do/VBP/do i/PRP/i find/VBP/find the/DT/the minimum/JJ/minimum ?/./? the/DT/the minimum/JJ/minimum clearly/RB/clearly is/VBZ/is either/DT/either x/NN/x 1/CD/1 or/CC/or x/NN/x 4/CD/4. it/PRP/it is/VBZ/is the/DT/the smaller/JJR/smaller of/IN/of x/NN/x 1/CD/1 and/CC/and x/NN/x 4/CD/4. so/RB/so /,/, i/PRP/i compare/VBP/compare these/DT/these two/CD/two and/CC/and find/JJ/find the/DT/the minimum/NNP/minimum. similarly/RB/similarly /,/, i/PRP/i compare/VBP/compare these/DT/these two/CD/two and/CC/and find/JJ/find the/DT/the maximum/NNP/maximum. so/RB/so /,/, how/WRB/how many/JJ/many comparisons/NNS/comparisons i/PRP/i have/VBP/have made/VBN/made ?/./? i/PRP/i have/VBP/have made/VBN/made 1/CD/1 2/CD/2 3/CD/3 and/CC/and 4/CD/4 /,/, so/RB/so four/CD/four comparisons/NNP/comparisons. what/WP/what does/VBZ/does our/PRP$/our old/JJ/old algorithm/NN/algorithm say/NN/say ?/./? it/PRP/it says/VBZ/says 2/CD/2 n/NN/n minus/NN/minus 2/CD/2. n/NN/n is/VBZ/is 4/CD/4. so/RB/so /,/, this/DT/this is/VBZ/is 6/CD/6 when/WRB/when n/JJ/n is/VBZ/is 4/CD/4. so/RB/so /,/, we/PRP/we seem/VBP/seem to/TO/to have/VB/have done/VBN/done certainly/RB/certainly /,/, better/RBR/better than/IN/than 2/CD/2 n/NN/n minus/NN/minus 2/CD/2. when/WRB/when there/EX/there are/VBP/are four/CD/four elements/NNS/elements /,/, we/PRP/we have/VBP/have certainly/RB/certainly done/VBN/done better/JJR/better than/IN/than 2/CD/2 n/NN/n minus/NN/minus 2/CD/2. and/CC/and well/RB/well the/DT/the trick/NN/trick was/VBD/was /,/, once/RB/once we/PRP/we found/VBD/found the/DT/the minimum/JJ/minimum and/CC/and maximum/NN/maximum between/IN/between x/NN/x 1/CD/1 x/NN/x 2/CD/2 and/CC/and x/NN/x 3/CD/3 x/NN/x 4/CD/4 then/RB/then /,/, for/IN/for the/DT/the minimums/NNS/minimums i/PRP/i only/RB/only need/VBP/need to/TO/to look/VB/look at/IN/at x/NN/x 1/CD/1 and/CC/and x/NN/x 4/CD/4. the/DT/the smaller/JJR/smaller on/IN/on the/DT/the left/NN/left hand/NN/hand side/NN/side and/CC/and the/DT/the smaller/NN/smaller on/IN/on the/DT/the right/NN/right hand/NN/hand side/NNP/side. i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to bother/VB/bother about/IN/about the/DT/the bigger/JJR/bigger one/CD/one and/CC/and similarly/RB/similarly for/IN/for the/DT/the maximum/NNP/maximum. so/RB/so /,/, this/DT/this trick/NN/trick can/MD/can be/VB/be applied/VBN/applied recursively/-NONE-/recursively. well/RB/well /,/, it/PRP/it is/VBZ/is certainly/RB/certainly worth/JJ/worth trying/VBG/trying and/CC/and let/VB/let us/PRP/us do/VBP/do it/NNP/it. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 57/CD/57 /CD/) here/RB/here is/VBZ/is the/DT/the let/NN/let us/PRP/us say/VBP/say i/PRP/i have/VBP/have you/PRP/you have/VBP/have an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. so/RB/so /,/, let/VB/let us/PRP/us divide/VB/divide this/DT/this into/IN/into two/CD/two parts/NNP/parts. recursively/RB/recursively find/VBP/find the/DT/the maximum/NN/maximum in/IN/in this/DT/this part/NNP/part. let/VBD/let us/PRP/us say/VBP/say max/NN/max l/NNP/l. this/DT/this is/VBZ/is the/DT/the left/VBN/left part/NN/part and/CC/and that/IN/that is/VBZ/is the/DT/the right/NN/right part/NN/part and/CC/and min/NN/min l/NNP/l. recursively/RB/recursively /,/, find/VBP/find the/DT/the maximum/NN/maximum minimum/NN/minimum on/IN/on the/DT/the right/NN/right hand/NN/hand side/NNP/side. so/RB/so /,/, that/IN/that is/VBZ/is max/NN/max r/NN/r and/CC/and min/NN/min r/NNP/r. now/RB/now /,/, how/WRB/how do/VBP/do i/PRP/i find/VBP/find the/DT/the maximum/NN/maximum and/CC/and minimum/JJ/minimum ?/./? well/RB/well /,/, i/PRP/i need/VBP/need to/TO/to compare/VB/compare these/DT/these two/CD/two to/TO/to find/VB/find the/DT/the minimum/NNP/minimum. i/PRP/i need/VBP/need to/TO/to compare/VB/compare those/DT/those two/CD/two to/TO/to find/VB/find the/DT/the maximum/NNP/maximum. so/RB/so /,/, here/RB/here is/VBZ/is an/DT/an algorithm/NN/algorithm that/IN/that seems/VBZ/seems natural/NNP/natural. i/PRP/i divide/VBP/divide this/DT/this into/IN/into two/CD/two parts/NNP/parts. divide/NN/divide this/DT/this into/IN/into two/CD/two parts/NNP/parts. let/NN/let us/PRP/us say/VBP/say two/CD/two equal/JJ/equal parts/NNP/parts. two/CD/two equal/JJ/equal halves/NNP/halves. halves/NNS/halves are/VBP/are always/RB/always equal/NNP/equal. i/PRP/i find/VBP/find the/DT/the maximum/NN/maximum and/CC/and the/DT/the minimum/JJ/minimum on/IN/on the/DT/the left/NN/left hand/NN/hand side/NNP/side. the/DT/the left/NN/left half/NN/half /,/, i/PRP/i find/VBP/find the/DT/the maximum/NN/maximum and/CC/and minimum/JJ/minimum in/IN/in the/DT/the right/NN/right hand/NN/hand side/NNP/side. now/RB/now /,/, i/PRP/i compare/VBP/compare the/DT/the two/CD/two minimums/NNS/minimums to/TO/to output/VB/output the/DT/the minimum/JJ/minimum of/IN/of the/DT/the array/NNP/array. i/PRP/i compare/VBP/compare the/DT/the two/CD/two maximums/NNS/maximums /,/, to/TO/to find/VB/find the/DT/the maximum/NN/maximum of/IN/of the/DT/the array/NNP/array. how/WRB/how many/JJ/many comparisons/NNS/comparisons does/VBZ/does this/DT/this algorithm/NN/algorithm take/VB/take ?/./? let/VB/let me/PRP/me write/VB/write down/RP/down the/DT/the algorithm/NNP/algorithm. but/CC/but /,/, in/IN/in future/JJ/future with/IN/with this/DT/this explanation/NN/explanation you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to write/VB/write the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, divide/IN/divide into/IN/into halves/NNP/halves. let/VB/let us/PRP/us say/VB/say left/VBN/left and/CC/and right/NNP/right. then/RB/then /,/, recurse/NN/recurse on/IN/on both/DT/both parts/NNS/parts on/IN/on the/DT/the left/NN/left and/CC/and on/IN/on the/DT/the right/NNP/right. and/CC/and the/DT/the answers/NNS/answers are/VBP/are max/JJ/max l/NN/l and/CC/and min/NN/min l/NN/l and/CC/and max/NN/max r/NN/r and/CC/and min/NN/min r/NNP/r. then/RB/then /,/, put/VBD/put these/DT/these things/NNS/things together/RB/together /,/, to/TO/to get/VB/get the/DT/the minimum/JJ/minimum and/CC/and maximum/NNP/maximum. and/CC/and then/RB/then /,/, compute/NN/compute final/JJ/final solution/NN/solution from/IN/from the/DT/the solution/NN/solution of/IN/of the/DT/the two/CD/two parts/NNP/parts. well/RB/well /,/, i/PRP/i have/VBP/have written/VBN/written the/DT/the essence/NN/essence of/IN/of the/DT/the algorithm/NN/algorithm without/IN/without really/RB/really writing/VBG/writing details/NNP/details. i/PRP/i hope/VBP/hope /,/, you/PRP/you can/MD/can fill/VB/fill in/IN/in the/DT/the details/NNP/details. define/NN/define procedures/NNS/procedures and/CC/and write/VB/write down/RP/down recursive/JJ/recursive calls/NNP/calls. and/CC/and you/PRP/you know/VBP/know /,/, do/VBP/do these/DT/these two/CD/two comparisons/NNS/comparisons and/CC/and output/NN/output the/DT/the minimum/JJ/minimum maximum/NNP/maximum. do/VBP/do how/WRB/how many/JJ/many comparisons/NNS/comparisons does/VBZ/does this/DT/this take/NN/take ?/./? that/IN/that is/VBZ/is the/DT/the question/NN/question /,/, we/PRP/we need/VBP/need to/TO/to answer/NNP/answer. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 53/CD/53 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say t/NN/t n/NN/n is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by max/NN/max min/NN/min on/IN/on arrays/NNS/arrays of/IN/of size/NN/size n/NNP/n. it/PRP/it is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by max/NN/max min/NN/min on/IN/on arrays/NNS/arrays of/IN/of size/NN/size n/NNP/n. then/RB/then /,/, t/NN/t n/NN/n is/VBZ/is there/EX/there are/VBP/are two/CD/two problems/NNS/problems of/IN/of half/NN/half the/DT/the size/NNP/size. you/PRP/you solve/VBP/solve two/CD/two problems/NNS/problems of/IN/of half/NN/half the/DT/the size/NNP/size. there/RB/there is/VBZ/is 2/CD/2 n/NN/n by/IN/by 2/CD/2 plus/CC/plus ;/:/; two/CD/two more/JJR/more comparisons/NNS/comparisons /,/, one/CD/one between/IN/between the/DT/the 2/CD/2 maxs/NNS/maxs to/TO/to get/VB/get the/DT/the new/JJ/new max/NN/max /,/, one/CD/one between/IN/between the/DT/the 2/CD/2 minus/NN/minus to/TO/to get/VB/get the/DT/the new/JJ/new minimum/NNP/minimum. these/DT/these are/VBP/are this/DT/this is/VBZ/is for/IN/for the/DT/the recursive/JJ/recursive call/NNP/call. so/RB/so /,/, you/PRP/you call/VBP/call the/DT/the left/NN/left hand/NN/hand side/NN/side /,/, that/IN/that is/VBZ/is n/VBN/n by/IN/by 2/CD/2 right/NN/right hand/NN/hand side/NN/side n/NN/n by/IN/by 2/CD/2 and/CC/and then/RB/then 2/CD/2. well/RB/well /,/, if/IN/if n/NN/n is/VBZ/is odd/JJ/odd i/NN/i would/MD/would have/VB/have a/DT/a ceiling/NN/ceiling and/CC/and floor/NN/floor somewhere/NNP/somewhere. but/CC/but /,/, let/VB/let us/PRP/us not/RB/not worry/VBP/worry about/IN/about it/PRP/it for/IN/for the/DT/the time/NN/time being/NNP/being. let/NN/let us/PRP/us assume/VBP/assume that/IN/that /,/, n/VBP/n is/VBZ/is even/NNP/even. you/PRP/you can/MD/can assume/VB/assume n/NN/n is/VBZ/is the/DT/the power/NN/power of/IN/of 2/CD/2. we/PRP/we also/RB/also know/VBP/know that/IN/that /,/, t/NN/t 2/CD/2 is/VBZ/is 1/CD/1. for/IN/for two/CD/two elements/NNS/elements /,/, i/PRP/i can/MD/can find/VB/find it/PRP/it in/IN/in one/CD/one comparison/NNP/comparison. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence ?/./? let/NN/let us/PRP/us see/NNP/see. so/RB/so /,/, the/DT/the easiest/JJS/easiest way/NN/way to/TO/to solve/VB/solve all/DT/all this/DT/this is/VBZ/is to/TO/to check/VB/check /,/, how/WRB/how this/DT/this recurrence/NN/recurrence behaves/NNP/behaves. so/RB/so /,/, t/NN/t n/NN/n is/VBZ/is nothing/NN/nothing but/CC/but 2/CD/2. and/CC/and now/RB/now /,/, i/PRP/i open/VBP/open this/DT/this out/NNP/out. this/DT/this is/VBZ/is 2/CD/2 t/NN/t n/NN/n by/IN/by 4/CD/4 plus/CC/plus 2/CD/2 plus/NNS/plus 2/CD/2 /,/, which/WDT/which is/VBZ/is 2/CD/2 square/JJ/square t/NN/t n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus 2/CD/2 square/NN/square plus/CC/plus 2/CD/2. you/PRP/you can/MD/can right/RB/right this/DT/this down/IN/down /,/, once/RB/once more/NNP/more. and/CC/and essentially/RB/essentially we/PRP/we want/VBP/want to/TO/to see/VB/see how/WRB/how /,/, what/WP/what pattern/NN/pattern this/DT/this follows/VBZ/follows ?/./? well/RB/well /,/, it/PRP/it is/VBZ/is not/RB/not too/RB/too difficult/JJ/difficult to/TO/to guess/NN/guess what/WP/what the/DT/the pattern/NN/pattern is/VBZ/is ?/./? the/DT/the pattern/NN/pattern is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 55/CD/55 /CD/) so/RB/so /,/, t/NN/t n/NN/n is/VBZ/is 2/CD/2 to/TO/to the/DT/the i/PRP/i t/VBP/t n/JJ/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 2/CD/2 to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and so/RB/so on/NNP/on. all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to 2/CD/2. so/RB/so /,/, now/RB/now we/PRP/we set/VBP/set n/RP/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i to/TO/to be/VB/be 2/CD/2 /,/, because/IN/because we/PRP/we know/VBP/know that/IN/that t/NN/t of/IN/of 2/CD/2 is/VBZ/is 1/CD/1. then/RB/then /,/, we/PRP/we have/VBP/have t/VBN/t of/IN/of n/NN/n is/VBZ/is 2/CD/2 to/TO/to the/DT/the i/NNP/i. this/DT/this t/NN/t /,/, this/DT/this becomes/VBZ/becomes 2/CD/2. so/RB/so /,/, t/NN/t of/IN/of 2/CD/2 is/VBZ/is 1plus/CD/1plus 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 2/CD/2 to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 1/CD/1 plus/NN/plus well/RB/well 2/CD/2 to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to 2/CD/2. you/PRP/you can/MD/can check/VB/check that/IN/that this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but we/PRP/we also/RB/also know/VBP/know that/IN/that 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is n/NNP/n. and/CC/and i/PRP/i hope/VBP/hope you/PRP/you can/MD/can solve/VB/solve this/NNP/this. i/PRP/i will/MD/will leave/VB/leave it/PRP/it for/IN/for you/PRP/you /,/, to/TO/to solve/VB/solve this/NNP/this. this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but n/NNP/n. and/CC/and this/DT/this sum/NN/sum /,/, you/PRP/you will/MD/will get/VB/get as/IN/as n/NN/n by/IN/by 2/CD/2 minus/NN/minus 2/CD/2. if/IN/if you/PRP/you sum/VBP/sum this/DT/this up/NN/up /,/, using/VBG/using the/DT/the usual/JJ/usual geometric/JJ/geometric series/NN/series and/CC/and use/VBP/use this/DT/this fact/NN/fact /,/, that/IN/that n/NN/n is/VBZ/is 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 1/CD/1. you/PRP/you will/MD/will get/VB/get that/IN/that /,/, this/DT/this sum/NN/sum is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n by/IN/by 2/CD/2 minus/NN/minus 2/CD/2. well/RB/well /,/, put/VBD/put this/DT/this together/NNP/together. you/PRP/you get/VBP/get t/VBN/t of/IN/of n/NN/n is/VBZ/is 3/CD/3 n/NN/n by/IN/by 2/CD/2 minus/NN/minus 2/CD/2. you/PRP/you can/MD/can check/VB/check that/IN/that this/DT/this /,/, when/WRB/when n/NN/n is/VBZ/is 2/CD/2 this/DT/this is/VBZ/is 1/CD/1 /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we want/NNP/want. and/CC/and this/DT/this also/RB/also satisfies/VBZ/satisfies the/DT/the recurrence/NN/recurrence that/IN/that we/PRP/we had/NNP/had. the/DT/the recurrence/NN/recurrence was/VBD/was let/VBN/let me/PRP/me refresh/JJ/refresh your/PRP$/your memory/NNP/memory. the/DT/the recurrence/NN/recurrence was/VBD/was t/VBN/t n/NN/n is/VBZ/is twice/NN/twice t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus 2/CD/2. so/RB/so /,/, if/IN/if i/PRP/i put/VBD/put t/NN/t n/NN/n equals/NNS/equals 3/CD/3 n/NN/n by/IN/by 2/CD/2 minus/NN/minus 2/CD/2 /,/, this/DT/this satisfies/NNS/satisfies the/DT/the recurrence/NNP/recurrence. you/PRP/you can/MD/can prove/VB/prove that/IN/that t/NN/t n/NN/n is/VBZ/is this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 30/CD/30 /:/: 12/CD/12 /CD/) /CD/) /./. well/RB/well /,/, so/RB/so the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that we/PRP/we seem/VBP/seem to/TO/to make/VB/make using/VBG/using this/DT/this method/NN/method is/VBZ/is 3/CD/3 n/NN/n by/IN/by 2/CD/2 minus/NN/minus 2/CD/2 /,/, which/WDT/which is/VBZ/is certainly/RB/certainly better/RBR/better than/IN/than 2/CD/2 n/NN/n minus/NN/minus 2/CD/2. we/PRP/we seem/VBP/seem to/TO/to have/VB/have done/VBN/done something/NN/something fairly/RB/fairly mechanically/RB/mechanically and/CC/and we/PRP/we seem/VBP/seem to/TO/to have/VB/have improved/VBN/improved the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons made/VBN/made /,/, quite/RB/quite drastically/NNP/drastically. so/RB/so /,/, this/DT/this technique/NN/technique is/VBZ/is called/VBN/called divide/NN/divide and/CC/and conquer/NN/conquer /,/, is/VBZ/is used/VBN/used by/IN/by the/DT/the british/JJ/british in/IN/in the/DT/the last/JJ/last century/NN/century /,/, i/PRP/i mean/VBP/mean last/JJ/last century/NN/century and/CC/and even/RB/even before/IN/before that/NNP/that. we/PRP/we will/MD/will put/VB/put it/PRP/it to/TO/to good/VB/good use/NN/use /,/, in/IN/in designing/NN/designing algorithms/NNP/algorithms. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down the/DT/the main/JJ/main steps/NNS/steps of/IN/of this/DT/this technique/NNP/technique. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 02/CD/02 /CD/) the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to divide/VB/divide the/DT/the problem/NN/problem into/IN/into /,/, i/PRP/i will/MD/will say/VB/say two/CD/two parts/NNP/parts. often/RB/often we/PRP/we will/MD/will want/VB/want these/DT/these parts/NNS/parts to/TO/to have/VB/have equal/JJ/equal sizes/NNS/sizes /,/, often/RB/often of/IN/of equal/JJ/equal sizes/NNP/sizes. the/DT/the next/JJ/next step/NN/step is/VBZ/is recurse/JJ/recurse on/IN/on each/DT/each part/NNP/part. so/RB/so /,/, you/PRP/you recurse/VBP/recurse on/IN/on each/DT/each part/NN/part and/CC/and solve/VB/solve each/DT/each of/IN/of them/NNP/them. both/DT/both the/DT/the parts/NNS/parts /,/, if/IN/if there/EX/there are/VBP/are two/NNP/two. and/CC/and the/DT/the final/JJ/final step/NN/step is/VBZ/is put/VBN/put these/DT/these solutions/NNS/solutions together/NNP/together. put/VBD/put these/DT/these solutions/NNS/solutions together/RB/together /,/, to/TO/to get/VB/get a/DT/a solution/NN/solution for/IN/for the/DT/the original/JJ/original problem/NNP/problem. often/RB/often /,/, you/PRP/you can/MD/can just/RB/just do/VB/do this/DT/this blindly/NNP/blindly. in/IN/in fact/NN/fact /,/, for/IN/for the/DT/the max/NN/max min/NN/min we/PRP/we could/MD/could have/VB/have done/VBN/done it/PRP/it blindly/NNP/blindly. take/VB/take this/DT/this array/NN/array of/IN/of size/NN/size n/NN/n /,/, divide/NN/divide that/IN/that divide/NN/divide this/DT/this array/NN/array into/IN/into two/CD/two arrays/NNS/arrays to/TO/to size/VB/size n/NN/n by/IN/by 2/CD/2. find/IN/find the/DT/the maximum/NN/maximum and/CC/and minimum/JJ/minimum on/IN/on the/DT/the left/NN/left array/NN/array /,/, the/DT/the maximum/NN/maximum and/CC/and minimum/JJ/minimum on/IN/on the/DT/the right/NN/right array/NNP/array. and/CC/and once/RB/once you/PRP/you have/VB/have these/DT/these two/CD/two solutions/NNS/solutions together/RB/together /,/, now/RB/now you/PRP/you find/VBP/find the/DT/the maximum/NN/maximum of/IN/of the/DT/the whole/JJ/whole array/NN/array comparing/VBG/comparing the/DT/the two/CD/two maximums/NNP/maximums. find/NN/find the/DT/the minimum/JJ/minimum of/IN/of the/DT/the array/NN/array by/IN/by comparing/NN/comparing two/CD/two minimums/NNP/minimums. again/RB/again the/DT/the essence/NN/essence is/VBZ/is this/DT/this induction/NNP/induction. in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, if/IN/if you/PRP/you could/MD/could solve/VB/solve problems/NNS/problems of/IN/of smaller/JJR/smaller size/NN/size which/WDT/which is/VBZ/is what/WP/what you/PRP/you are/VBP/are doing/VBG/doing in/IN/in this/DT/this recursion/NNP/recursion. you/PRP/you are/VBP/are somehow/RB/somehow putting/VBG/putting these/DT/these together/NN/together to/TO/to get/VB/get a/DT/a solution/NN/solution /,/, for/IN/for the/DT/the big/JJ/big problem/NNP/problem. how/WRB/how you/PRP/you will/MD/will find/VB/find these/DT/these small/JJ/small problems/NNS/problems varies/NNS/varies from/IN/from problem/NN/problem to/TO/to problem/NNP/problem. let/VB/let us/PRP/us look/VB/look at/IN/at another/DT/another problem/NN/problem /,/, where/WRB/where we/PRP/we will/MD/will apply/VB/apply this/DT/this method/NN/method blindly/RB/blindly and/CC/and we/PRP/we will/MD/will see/VB/see what/WP/what we/PRP/we get/VBP/get ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 14/CD/14 /CD/) this/DT/this problem/NN/problem is/VBZ/is to/TO/to find/VB/find both/DT/both the/DT/the minimum/JJ/minimum and/CC/and second/JJ/second minimum/NNP/minimum. the/DT/the minimum/JJ/minimum is/VBZ/is the/DT/the smallest/JJS/smallest element/NN/element in/IN/in the/DT/the array/NNP/array. the/DT/the second/JJ/second minimum/JJ/minimum is/VBZ/is the/DT/the next/JJ/next one/CD/one /,/, the/DT/the second/JJ/second smallest/NN/smallest element/NN/element in/IN/in the/DT/the array/NNP/array. so/RB/so /,/, your/PRP$/your input/NN/input is/VBZ/is an/DT/an array/NNP/array. and/CC/and you/PRP/you are/VBP/are going/VBG/going to/TO/to find/VB/find both/DT/both the/DT/the minimum/JJ/minimum and/CC/and the/DT/the second/JJ/second minimum/NNP/minimum. the/DT/the usual/JJ/usual way/NN/way you/PRP/you would/MD/would do/VB/do it/PRP/it is/VBZ/is /,/, you/PRP/you first/RB/first scan/JJ/scan the/DT/the array/NN/array and/CC/and find/VB/find the/DT/the minimum/NNP/minimum. now/RB/now /,/, you/PRP/you again/RB/again scan/JJ/scan the/DT/the array/NN/array and/CC/and find/VB/find the/DT/the second/JJ/second minimum/NNP/minimum. the/DT/the other/JJ/other way/NN/way to/TO/to do/VB/do it/PRP/it is/VBZ/is /,/, to/TO/to have/VB/have two/CD/two temporary/JJ/temporary variables/NNS/variables temp/VBP/temp 1/CD/1 and/CC/and temp/NN/temp 2/CD/2. in/IN/in temporary/JJ/temporary 1/CD/1 /,/, i/PRP/i store/VBP/store the/DT/the current/JJ/current minimum/NNP/minimum. in/IN/in temporary/JJ/temporary 2/CD/2 /,/, i/PRP/i store/VBP/store the/DT/the current/JJ/current second/JJ/second minimum/NNP/minimum. now/RB/now /,/, when/WRB/when i/PRP/i get/VBP/get to/TO/to an/DT/an array/NN/array element/NN/element i/PRP/i let/VBP/let us/PRP/us say/VBP/say the/DT/the ith/NN/ith element/NNP/element. i/PRP/i compare/VBP/compare this/DT/this first/JJ/first with/IN/with the/DT/the minimum/JJ/minimum then/RB/then /,/, with/IN/with the/DT/the second/JJ/second minimum/JJ/minimum that/IN/that i/PRP/i have/NNP/have. and/CC/and based/VBN/based on/IN/on the/DT/the result/NN/result of/IN/of these/DT/these two/CD/two comparisons/NNS/comparisons /,/, i/PRP/i update/VBP/update minimum/JJ/minimum and/CC/and second/JJ/second minimum/NNP/minimum. now/RB/now /,/, this/DT/this will/MD/will take/VB/take we/PRP/we have/VBP/have seen/VBN/seen how/WRB/how many/JJ/many comparisons/NNS/comparisons this/DT/this will/MD/will take/NNP/take. it/PRP/it is/VBZ/is 2/CD/2 n/NN/n minus/NN/minus 2/CD/2 as/IN/as it/PRP/it was/VBD/was in/IN/in the/DT/the max/NN/max min/NN/min case/NNP/case. and/CC/and let/VB/let us/PRP/us just/RB/just apply/RB/apply our/PRP$/our divide/NN/divide and/CC/and conquer/NN/conquer paradigm/NN/paradigm /,/, blindly/RB/blindly to/TO/to this/DT/this problem/NN/problem and/CC/and see/VB/see what/WP/what you/PRP/you get/NNP/get. so/RB/so /,/, how/WRB/how would/MD/would we/VB/we do/VBP/do this/DT/this ?/./? so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the array/NNP/array. the/DT/the array/NN/array is/VBZ/is of/IN/of size/NN/size n/NNP/n. i/PRP/i divide/VBP/divide this/DT/this equally/RB/equally into/IN/into two/CD/two paths/NNP/paths. i/PRP/i find/VBP/find a/DT/a minimum/JJ/minimum and/CC/and second/JJ/second minimum/JJ/minimum here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say min/NN/min left/VBN/left and/CC/and the/DT/the second/JJ/second min/NN/min left/VBD/left /,/, min/NN/min right/RB/right and/CC/and s/NNS/s min/VBP/min right/NNP/right. so/RB/so /,/, i/PRP/i have/VBP/have found/VBN/found these/DT/these four/CD/four values/NNP/values. and/CC/and now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the minimum/JJ/minimum and/CC/and second/JJ/second minimum/JJ/minimum for/IN/for the/DT/the entire/JJ/entire array/NNP/array. the/DT/the minimum/JJ/minimum is/VBZ/is not/RB/not a/DT/a problem/NNP/problem. so/RB/so /,/, i/PRP/i just/RB/just compare/VBP/compare min/NN/min l/NN/l and/CC/and these/DT/these two/CD/two values/NNS/values and/CC/and i/PRP/i can/MD/can output/VB/output the/DT/the minimum/NNP/minimum. the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two is/VBZ/is the/DT/the minimum/NNP/minimum. now/RB/now /,/, what/WDT/what do/VBP/do i/PRP/i do/VBP/do about/IN/about the/DT/the second/JJ/second minimum/NNP/minimum. now/RB/now /,/, supposing/VBG/supposing min/NN/min l/NN/l was/VBD/was smaller/JJR/smaller than/IN/than min/NN/min r/NN/r /,/, so/RB/so without/IN/without loss/NN/loss of/IN/of generality/NN/generality this/DT/this min/NN/min l/NNP/l. so/RB/so /,/, assume/NN/assume min/NN/min l/NN/l was/VBD/was less/JJR/less than/IN/than min/NN/min r/NN/r /,/, which/WDT/which means/VBZ/means at/IN/at this/DT/this point/NN/point min/NN/min l/NN/l has/VBZ/has been/VBN/been output/NNP/output. now/RB/now /,/, what/WDT/what are/VBP/are the/DT/the candidates/NNS/candidates for/IN/for the/DT/the second/JJ/second minimum/JJ/minimum ?/./? clearly/RB/clearly /,/, min/IN/min r/NN/r is/VBZ/is still/RB/still a/DT/a candidate/NN/candidate for/IN/for the/DT/the second/JJ/second minimum/NNP/minimum. second/JJ/second minimum/JJ/minimum of/IN/of the/DT/the left/NN/left hand/NN/hand side/NN/side s/NNS/s min/VBP/min l/NN/l is/VBZ/is also/RB/also a/DT/a candidate/NN/candidate for/IN/for the/DT/the second/JJ/second minimum/NNP/minimum. but/CC/but /,/, one/CD/one of/IN/of these/DT/these elements/NNS/elements we/PRP/we have/VBP/have sort/NN/sort of/IN/of thrown/NN/thrown out/IN/out /,/, which/WDT/which is/VBZ/is s/VBZ/s min/VBN/min r/NNP/r. this/DT/this does/VBZ/does not/RB/not figure/VB/figure in/IN/in the/DT/the picture/NN/picture at/IN/at all/NNP/all. so/RB/so /,/, we/PRP/we need/VBP/need exactly/RB/exactly one/CD/one more/JJR/more comparison/NN/comparison to/TO/to get/VB/get the/DT/the second/JJ/second minimum/JJ/minimum /,/, which/WDT/which is/VBZ/is supposing/VBG/supposing this/DT/this is/VBZ/is true/JJ/true then/RB/then compare/JJ/compare the/DT/the second/JJ/second minimum/JJ/minimum on/IN/on the/DT/the left/NN/left and/CC/and the/DT/the minimum/JJ/minimum from/IN/from the/DT/the right/NNP/right. so/RB/so /,/, you/PRP/you need/VBP/need to/TO/to compare/VB/compare just/RB/just these/DT/these two/CD/two elements/NNP/elements. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that /,/, the/DT/the minimum/JJ/minimum of/IN/of these/DT/these two/CD/two will/MD/will give/VB/give me/PRP/me the/DT/the second/JJ/second minimum/NNP/minimum. the/DT/the minimum/JJ/minimum of/IN/of the/DT/the entire/JJ/entire array/NN/array i/PRP/i get/VBP/get by/IN/by comparing/VBG/comparing these/DT/these two/CD/two minimums/NNS/minimums /,/, the/DT/the minimum/JJ/minimum the/DT/the left/NN/left hand/NN/hand side/NN/side minimum/NN/minimum the/DT/the right/NN/right hand/NN/hand side/NN/side minimum/NNP/minimum. and/CC/and the/DT/the second/JJ/second minimum/JJ/minimum i/PRP/i can/MD/can get/VB/get by/IN/by comparing/NN/comparing the/DT/the minimum/JJ/minimum element/NN/element /,/, which/WDT/which lost/VBD/lost the/DT/the first/JJ/first comparison/NN/comparison which/WDT/which was/VBD/was larger/JJR/larger and/CC/and the/DT/the second/JJ/second minimum/JJ/minimum of/IN/of the/DT/the element/NN/element that/IN/that one/NNP/one. so/RB/so /,/, that/IN/that will/MD/will give/VB/give me/PRP/me the/DT/the second/JJ/second minimum/NNP/minimum. so/RB/so /,/, how/WRB/how many/JJ/many comparisons/NNS/comparisons have/VBP/have we/PRP/we does/VBZ/does this/DT/this take/NNP/take. well/RB/well /,/, if/IN/if you/PRP/you write/VBP/write down/RP/down the/DT/the recurrence/NN/recurrence this/DT/this seems/VBZ/seems to/TO/to be/VB/be very/RB/very similar/JJ/similar to/TO/to the/DT/the previous/JJ/previous one/NNP/one. so/RB/so /,/, what/WDT/what is/VBZ/is ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 23/CD/23 /CD/) so/RB/so /,/, if/IN/if t/NN/t n/NN/n is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm /,/, we/PRP/we have/VBP/have two/CD/two sub/NN/sub problems/NNS/problems each/DT/each of/IN/of size/NN/size n/NN/n by/IN/by 2/CD/2. that/WDT/that takes/VBZ/takes time/NN/time t/NN/t of/IN/of n/NN/n by/IN/by 2/CD/2. and/CC/and then/RB/then /,/, we/PRP/we have/VBP/have two/CD/two more/RBR/more comparisons/NNS/comparisons /,/, one/CD/one with/IN/with the/DT/the two/CD/two minimums/NNS/minimums and/CC/and one/CD/one to/TO/to find/VB/find the/DT/the second/JJ/second minimum/NNP/minimum. we/PRP/we also/RB/also know/VBP/know that/IN/that /,/, t/NN/t of/IN/of 2/CD/2 is/VBZ/is 1/CD/1. if/IN/if i/PRP/i have/VBP/have two/CD/two elements/NNS/elements /,/, one/CD/one comparison/NN/comparison suffices/NNS/suffices to/TO/to find/VB/find both/DT/both the/DT/the minimum/JJ/minimum and/CC/and second/JJ/second minimum/NNP/minimum. and/CC/and these/DT/these set/NN/set of/IN/of equations/NNS/equations are/VBP/are exactly/RB/exactly the/DT/the same/JJ/same as/IN/as the/DT/the set/NN/set of/IN/of equations/NNS/equations /,/, we/PRP/we had/VBD/had before/NNP/before. so/RB/so /,/, the/DT/the solution/NN/solution is/VBZ/is t/VBN/t n/NN/n is/VBZ/is 3/CD/3 n/NN/n by/IN/by 2/CD/2 minus/NN/minus 2/CD/2. so/RB/so /,/, the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons we/PRP/we make/VBP/make is/VBZ/is 3/CD/3 half/NN/half n/NN/n minus/NN/minus 2/CD/2. and/CC/and it/PRP/it is/VBZ/is not/RB/not 2/CD/2 n/NN/n minus/NN/minus 2/CD/2. it/PRP/it is/VBZ/is much/RB/much less/NNP/less. one/CD/one can/MD/can ask/VB/ask /,/, is/VBZ/is this/DT/this the/DT/the best/JJS/best ?/./? can/MD/can we/VB/we do/VBP/do better/RBR/better than/IN/than 3/CD/3 half/NN/half n/NN/n minus/NN/minus 2/CD/2 ?/./? this/DT/this question/NN/question can/MD/can be/VB/be asked/VBN/asked both/DT/both for/IN/for max/NN/max min/NN/min and/CC/and also/RB/also for/IN/for min/NN/min and/CC/and second/JJ/second min/NNP/min. well/RB/well /,/, it/PRP/it turns/VBZ/turns out/RP/out that/IN/that these/DT/these two/CD/two problems/NNS/problems behave/VBP/behave differently/NNP/differently. for/IN/for max/NN/max min/NN/min 3/CD/3 half/NN/half n/NN/n minus/NN/minus 2/CD/2 /,/, is/VBZ/is the/DT/the best/JJS/best we/PRP/we can/MD/can do/VB/do. so/RB/so /,/, 3/CD/3 half/NN/half n/NN/n comparisons/NNS/comparisons is/VBZ/is the/DT/the best/JJS/best we/PRP/we need/VBP/need 3/CD/3 half/NN/half n/NN/n comparisons/NNP/comparisons. while/IN/while in/IN/in this/DT/this case/NN/case /,/, when/WRB/when minimum/JJ/minimum and/CC/and second/JJ/second minimum/JJ/minimum you/PRP/you can/MD/can do/VB/do with/IN/with actually/RB/actually less/NNP/less. the/DT/the divide/NN/divide and/CC/and conquer/NN/conquer sort/NN/sort of/IN/of paradigm/NN/paradigm gave/VBD/gave us/PRP/us 3/CD/3 half/NN/half n/NN/n /,/, but/CC/but that/IN/that is/VBZ/is not/RB/not the/DT/the best/NNP/best. so/RB/so /,/, why/WRB/why ?/./? so/RB/so /,/, let/VB/let me/PRP/me give/VB/give you/PRP/you a/DT/a reason/NN/reason why/WRB/why you/PRP/you can/MD/can do/VB/do better/RBR/better here/NNP/here. to/TO/to better/JJR/better this/DT/this /,/, you/PRP/you need/VBP/need to/TO/to understand/VB/understand a/DT/a bit/NN/bit more/RBR/more as/IN/as to/TO/to how/WRB/how this/DT/this algorithm/NN/algorithm works/VBZ/works ?/./? let/NN/let us/PRP/us unfold/VBD/unfold the/DT/the recurrent/NN/recurrent /,/, the/DT/the recursion/NN/recursion out/IN/out and/CC/and see/VB/see what/WP/what this/DT/this looks/VBZ/looks like/NNP/like. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 18/CD/18 /CD/) initially/RB/initially /,/, i/PRP/i have/VBP/have array/VBP/array elements/NNS/elements x/NN/x 1/CD/1 x/NN/x 2/CD/2 x/NN/x 3/CD/3 x/NN/x 4/CD/4 and/CC/and so/RB/so on/IN/on /,/, all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to x/VB/x n/NNP/n. what/WP/what we/PRP/we do/VBP/do is/VBZ/is /,/, we/PRP/we just/RB/just divide/VBP/divide it/PRP/it into/IN/into two/CD/two parts/NNP/parts. we/PRP/we divide/VBP/divide it/PRP/it down/IN/down the/DT/the middle/NNP/middle. and/CC/and then/RB/then /,/, you/PRP/you recurse/VBP/recurse on/IN/on these/DT/these two/NNP/two. on/IN/on the/DT/the left/NN/left half/NN/half /,/, we/PRP/we divide/VBP/divide it/PRP/it again/RB/again into/IN/into two/CD/two halves/NNS/halves /,/, recurse/VBP/recurse divide/JJ/divide recurse/NN/recurse divide/NN/divide recurse/NNP/recurse. now/RB/now /,/, we/PRP/we come/VBP/come down/RB/down all/DT/all the/DT/the way/NN/way down/IN/down to/TO/to /,/, when/WRB/when they/PRP/they avail/VBP/avail as/IN/as size/NN/size 2/CD/2. this/DT/this is/VBZ/is when/WRB/when the/DT/the comparisons/NNS/comparisons start/VBP/start happening/NNP/happening. the/DT/the recurrence/NN/recurrence sort/NN/sort of/IN/of bottoms/NNS/bottoms down/IN/down /,/, till/IN/till you/PRP/you reach/VBP/reach arrays/NNS/arrays of/IN/of size/NN/size 2/CD/2. now/RB/now /,/, i/PRP/i will/MD/will find/VB/find the/DT/the minimum/JJ/minimum of/IN/of x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2 that/WDT/that goes/VBZ/goes up/NNP/up. the/DT/the minimum/JJ/minimum of/IN/of x/NN/x 3/CD/3 and/CC/and x/NN/x 4/CD/4 is/VBZ/is pushed/VBN/pushed up/NNP/up. also/RB/also the/DT/the second/JJ/second minimum/JJ/minimum is/VBZ/is pushed/VBN/pushed up/NNP/up. but/CC/but /,/, let/VB/let us/PRP/us not/RB/not worry/VBP/worry about/IN/about that/DT/that for/IN/for the/DT/the minute/NNP/minute. the/DT/the maximum/NN/maximum case/NN/case also/RB/also it/PRP/it works/VBZ/works very/RB/very similar/NNP/similar. you/PRP/you put/VBD/put the/DT/the max/NN/max min/NN/min /,/, max/NN/max mins/NNS/mins are/VBP/are pushed/VBN/pushed up/RP/up at/IN/at each/DT/each level/NNP/level. we/PRP/we just/RB/just focus/VBZ/focus on/IN/on the/DT/the minimum/JJ/minimum element/NNP/element. so/RB/so /,/, the/DT/the minimum/JJ/minimum element/NN/element is/VBZ/is pushed/VBN/pushed up/NNP/up. from/IN/from here/RB/here /,/, the/DT/the minimum/JJ/minimum element/NN/element is/VBZ/is pushed/VBN/pushed up/RP/up from/IN/from there/NNP/there. at/IN/at the/DT/the next/JJ/next level/NN/level /,/, i/PRP/i will/MD/will compare/VB/compare the/DT/the minimum/JJ/minimum of/IN/of these/DT/these two/NNP/two. this/DT/this contains/VBZ/contains a/DT/a minimum/JJ/minimum of/IN/of x/NN/x 1/CD/1 x/NN/x 2/CD/2. this/DT/this contains/VBZ/contains a/DT/a minimum/JJ/minimum of/IN/of x/NN/x 3/CD/3 x/NN/x 4/CD/4. this/DT/this contains/VBZ/contains a/DT/a minimum/JJ/minimum of/IN/of these/DT/these two/CD/two /,/, which/WDT/which is/VBZ/is actually/RB/actually the/DT/the minimum/JJ/minimum of/IN/of these/DT/these four/CD/four and/CC/and so/RB/so on/NNP/on. this/DT/this would/MD/would be/VB/be a/DT/a bigger/JJR/bigger tree/NN/tree and/CC/and so/RB/so on/NNP/on. all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the root/NN/root and/CC/and this/DT/this root/NN/root /,/, you/PRP/you can/MD/can the/DT/the minimum/JJ/minimum is/VBZ/is known/NNP/known. so/RB/so /,/, for/IN/for instance/NN/instance here/RB/here x/NN/x n/NN/n minus/NN/minus 1/CD/1 and/CC/and x/NN/x n/NN/n are/VBP/are compared/NNP/compared. this/DT/this is/VBZ/is the/DT/the minimum/NNP/minimum. at/IN/at the/DT/the next/JJ/next instance/NN/instance /,/, you/PRP/you compare/VBP/compare it/PRP/it with/IN/with the/DT/the other/JJ/other two/NNP/two. this/DT/this would/MD/would be/VB/be x/NN/x n/NN/n minus/NN/minus 2/CD/2 and/CC/and x/NN/x n/NN/n minus/NN/minus 3/CD/3 and/CC/and so/RB/so on/NNP/on. all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the root/NN/root /,/, where/WRB/where the/DT/the minimum/JJ/minimum is/VBZ/is known/NNP/known. now/RB/now /,/, this/DT/this looks/NNS/looks like/IN/like if/IN/if n/JJ/n was/VBD/was say/VB/say power/NN/power of/IN/of 2/CD/2. this/DT/this looks/NNS/looks like/IN/like very/RB/very familiar/JJ/familiar complete/JJ/complete binary/NN/binary tree/NNP/tree. so/RB/so /,/, there/EX/there are/VBP/are log/NN/log n/NN/n levels/NNP/levels. there/EX/there are/VBP/are n/NN/n leaves/NNP/leaves. there/EX/there are/VBP/are log/NN/log n/NN/n levels/NNP/levels. and/CC/and in/IN/in each/DT/each level/NN/level /,/, we/PRP/we sort/VBP/sort of/IN/of have/NN/have some/DT/some sort/NN/sort of/IN/of minimum/JJ/minimum and/CC/and some/DT/some portions/NNS/portions of/IN/of the/DT/the array/NN/array and/CC/and these/DT/these are/VBP/are pushed/VBN/pushed up/NNP/up. now/RB/now /,/, where/WRB/where was/VBD/was the/DT/the minimum/JJ/minimum element/NN/element ?/./? the/DT/the minimum/JJ/minimum element/NN/element sits/NNS/sits somewhere/RB/somewhere in/IN/in this/DT/this array/NNP/array. and/CC/and at/IN/at each/DT/each stage/NN/stage /,/, it/PRP/it is/VBZ/is pushed/VBN/pushed up/NNP/up. it/PRP/it sort/VBD/sort of/IN/of wins/NNS/wins /,/, its/PRP$/its comparison/NN/comparison each/DT/each time/NN/time at/IN/at each/DT/each level/NN/level of/IN/of this/DT/this tree/NNP/tree. and/CC/and it/PRP/it finds/VBZ/finds its/PRP$/its way/NN/way to/TO/to the/DT/the top/NNP/top. somewhere/RB/somewhere with/IN/with perhaps/RB/perhaps /,/, came/VBD/came from/IN/from the/DT/the left/NNP/left. may/MD/may be/VB/be it/PRP/it came/VBD/came from/IN/from the/DT/the right/NN/right /,/, came/VBD/came from/IN/from the/DT/the left/NN/left came/VBD/came from/IN/from the/DT/the left/NN/left and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, it/PRP/it does/VBZ/does traverse/VB/traverse some/DT/some root/NN/root all/DT/all the/DT/the way/NN/way from/IN/from the/DT/the root/NN/root node/NN/node to/TO/to a/DT/a leaf/NNP/leaf. and/CC/and this/DT/this is/VBZ/is where/WRB/where the/DT/the minimum/JJ/minimum element/NN/element resided/NNP/resided. now/RB/now /,/, what/WDT/what can/MD/can you/PRP/you say/VB/say of/IN/of the/DT/the second/JJ/second minimum/JJ/minimum element/NNP/element. now/RB/now /,/, well/RB/well the/DT/the crucial/JJ/crucial sort/NN/sort of/IN/of observation/NN/observation that/IN/that you/PRP/you need/VBP/need to/TO/to make/VB/make to/TO/to speed/VB/speed up/RP/up the/DT/the algorithm/NN/algorithm is/VBZ/is that/IN/that /,/, at/IN/at some/DT/some stage/NN/stage the/DT/the second/JJ/second minimum/JJ/minimum must/MD/must have/VB/have been/VBN/been compared/VBN/compared with/IN/with the/DT/the minimum/JJ/minimum element/NNP/element. this/DT/this is/VBZ/is absolutely/RB/absolutely crucial/NNP/crucial. if/IN/if the/DT/the second/JJ/second minimum/JJ/minimum element/NN/element were/VBD/were never/RB/never compared/VBN/compared with/IN/with the/DT/the minimum/JJ/minimum element/NN/element then/RB/then /,/, you/PRP/you really/RB/really do/VBP/do not/RB/not know/VB/know which/WDT/which of/IN/of these/DT/these two/CD/two is/VBZ/is the/DT/the minimum/JJ/minimum /,/, because/IN/because in/IN/in each/DT/each comparison/NN/comparison the/DT/the second/JJ/second minimum/JJ/minimum one/CD/one /,/, it/PRP/it was/VBD/was smaller/JJR/smaller than/IN/than every/DT/every other/JJ/other element/NNP/element. so/IN/so /,/, was/VBD/was the/DT/the minimum/JJ/minimum element/NN/element which/WDT/which of/IN/of these/DT/these two/CD/two is/VBZ/is minimum/JJ/minimum /,/, to/TO/to know/VB/know that/IN/that you/PRP/you must/MD/must have/VB/have compared/VBN/compared the/DT/the second/JJ/second minimum/JJ/minimum element/NN/element with/IN/with the/DT/the minimum/JJ/minimum element/NNP/element. now/RB/now let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this picture/NNP/picture. here/RB/here is/VBZ/is the/DT/the picture/NNP/picture. how/WRB/how many/JJ/many elements/NNS/elements did/VBD/did the/DT/the minimum/JJ/minimum element/NN/element /,/, you/PRP/you know/VBP/know win/VBP/win against/NNP/against. how/WRB/how many/JJ/many elements/NNS/elements were/VBD/were compared/VBN/compared with/IN/with the/DT/the minimum/JJ/minimum element/NN/element ?/./? if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this picture/NN/picture and/CC/and you/PRP/you follow/VBP/follow this/DT/this /,/, at/IN/at each/DT/each stage/NN/stage in/IN/in this/DT/this path/NN/path down/RP/down from/IN/from the/DT/the loop/NN/loop to/TO/to the/DT/the leaf/NN/leaf /,/, the/DT/the minimum/JJ/minimum element/NN/element was/VBD/was compared/VBN/compared with/IN/with exactly/RB/exactly one/CD/one element/NNP/element. the/DT/the length/NN/length of/IN/of this/DT/this path/NN/path is/VBZ/is log/NN/log n/NNP/n. so/RB/so /,/, the/DT/the minimum/JJ/minimum element/NN/element was/VBD/was compared/VBN/compared with/IN/with at/IN/at most/JJS/most log/JJ/log n/NN/n elements/NNS/elements in/IN/in this/DT/this tree/NN/tree /,/, which/WDT/which means/VBZ/means log/NN/log n/NN/n elements/NNS/elements in/IN/in this/DT/this array/NN/array were/VBD/were compared/VBN/compared with/IN/with a/DT/a minimum/JJ/minimum element/NNP/element. and/CC/and one/CD/one of/IN/of these/DT/these log/NN/log n/NN/n elements/NNS/elements /,/, remember/NN/remember must/MD/must be/VB/be the/DT/the second/JJ/second minimum/NNP/minimum. so/RB/so /,/, to/TO/to find/VB/find the/DT/the second/JJ/second minimum/JJ/minimum all/DT/all we/PRP/we do/VBP/do is/VBZ/is this/NNP/this. find/NN/find the/DT/the minimum/JJ/minimum using/NN/using this/DT/this tree/NNP/tree. you/PRP/you can/MD/can do/VB/do it/PRP/it recursively/RB/recursively /,/, if/IN/if you/PRP/you want/NNP/want. once/RB/once you/PRP/you find/VBP/find the/DT/the minimum/JJ/minimum element/NN/element /,/, collect/NN/collect all/DT/all elements/NNS/elements that/WDT/that the/DT/the minimum/JJ/minimum element/NN/element one/CD/one against/IN/against was/VBD/was compared/VBN/compared against/NNP/against. if/IN/if you/PRP/you have/VBP/have this/DT/this tree/NN/tree in/IN/in front/NN/front of/IN/of you/PRP/you /,/, you/PRP/you can/MD/can certainly/RB/certainly go/VB/go down/RB/down the/DT/the tree/NN/tree and/CC/and figure/NN/figure out/RP/out /,/, which/WDT/which were/VBD/were these/DT/these elements/NNP/elements. among/IN/among these/DT/these elements/NNS/elements /,/, find/VBP/find out/RP/out which/WDT/which is/VBZ/is the/DT/the minimum/JJ/minimum ?/./? and/CC/and that/IN/that will/MD/will give/VB/give you/PRP/you a/DT/a second/JJ/second one/NNP/one. there/RB/there are/VBP/are log/JJ/log n/NN/n elements/NNP/elements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 24/CD/24 /CD/) \/CD/\ so/RB/so /,/, initially/RB/initially you/PRP/you made/VBD/made n/NN/n comparisons/NNP/comparisons. may/MD/may be/VB/be /,/, it/PRP/it is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1 /,/, n/NN/n minus/NN/minus one/CD/one comparisons/NNS/comparisons to/TO/to find/VB/find a/DT/a minimum/NNP/minimum. and/CC/and then/RB/then /,/, you/PRP/you need/VBP/need about/IN/about log/NN/log n/NN/n minus/NN/minus 1/CD/1 comparison/NN/comparison more/JJR/more to/TO/to find/VB/find the/DT/the second/JJ/second minimum/NNP/minimum. this/DT/this then/RB/then is/VBZ/is actually/RB/actually optimum/JJ/optimum /,/, though/IN/though we/PRP/we will/MD/will not/RB/not do/VB/do it/PRP/it in/IN/in this/DT/this course/NNP/course. there/RB/there is/VBZ/is an/DT/an argument/NN/argument /,/, which/WDT/which shows/VBZ/shows that/IN/that you/PRP/you need/VBP/need n/NN/n plus/CC/plus log/NN/log n/NNP/n. but/CC/but /,/, it/PRP/it is/VBZ/is surprising/VBG/surprising that/IN/that you/PRP/you can/MD/can actually/RB/actually do/VB/do this/DT/this in/IN/in n/NN/n plus/CC/plus log/NN/log n/NNP/n. and/CC/and this/DT/this problem/NN/problem in/IN/in this/DT/this way/NN/way /,/, it/PRP/it differs/VBZ/differs from/IN/from the/DT/the previous/JJ/previous problem/NNP/problem. a/DT/a straight/JJ/straight forward/NN/forward application/NN/application of/IN/of divide/NN/divide and/CC/and conquer/NN/conquer does/VBZ/does not/RB/not work/NNP/work. you/PRP/you need/VBP/need to/TO/to use/VB/use some/DT/some more/RBR/more intuition/NNP/intuition. you/PRP/you need/VBP/need to/TO/to understand/VB/understand a/DT/a problem/NN/problem a/DT/a bit/NN/bit more/RBR/more come/JJ/come up/RP/up with/IN/with new/JJ/new ideas/NNP/ideas. and/CC/and that/IN/that is/VBZ/is what/WP/what algorithm/NN/algorithm design/NN/design is/VBZ/is all/DT/all about/NNP/about. often/RB/often /,/, there/EX/there are/VBP/are problems/NNS/problems which/WDT/which are/VBP/are hard/NNP/hard. you/PRP/you really/RB/really do/VBP/do not/RB/not know/VB/know what/WP/what to/TO/to do/VB/do ?/./? and/CC/and when/WRB/when you/PRP/you come/VBP/come up/RP/up with/IN/with a/DT/a smart/NN/smart answer/NN/answer to/TO/to an/DT/an algorithm/NN/algorithm /,/, you/PRP/you feel/VBP/feel really/RB/really you/PRP/you feel/VBP/feel nice/NNP/nice. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder viswanathan/IN/viswanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 6/CD/6 divide/NN/divide and/CC/and conquer/NN/conquer ?/./? i/PRP/i /VBP/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 11/CD/11 /CD/) the/DT/the three/CD/three of/IN/of them/PRP/them are/VBP/are first/RB/first 1/CD/1 is/VBZ/is induction/NNP/induction. then/RB/then /,/, ordering/VBG/ordering the/DT/the input/NN/input and/CC/and the/DT/the third/JJ/third is/VBZ/is storing/VBG/storing old/JJ/old values/NNP/values. so/RB/so /,/, let/VB/let me/PRP/me sort/VB/sort of/IN/of let/NN/let us/PRP/us talk/VBP/talk about/IN/about all/DT/all these/DT/these three/CD/three once/RB/once more/NNP/more. induction/NN/induction essentially/RB/essentially says/VBZ/says /,/, supposing/VBG/supposing you/PRP/you can/MD/can solve/VB/solve the/DT/the problem/NN/problem for/IN/for smaller/JJR/smaller inputs/NNP/inputs. how/WRB/how do/VBP/do you/PRP/you solve/VB/solve it/PRP/it for/IN/for larger/JJR/larger inputs/NNS/inputs ?/./? so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first term/NN/term design/NN/design principle/NNP/principle. so/RB/so /,/, supposing/VBG/supposing you/PRP/you know/VBP/know /,/, you/PRP/you can/MD/can put/VB/put together/RP/together /,/, these/DT/these solutions/NNS/solutions for/IN/for these/DT/these smaller/JJR/smaller inputs/NNP/inputs. and/CC/and somehow/VB/somehow generate/JJ/generate a/DT/a solution/NN/solution for/IN/for the/DT/the larger/JJR/larger input/NNP/input. then/RB/then /,/, your/PRP$/your algorithm/NN/algorithm is/VBZ/is clear/NNP/clear. you/PRP/you sort/VBD/sort of/IN/of recurse/NN/recurse on/IN/on the/DT/the smaller/JJR/smaller inputs/NNS/inputs solve/VBP/solve them/NNP/them. and/CC/and when/WRB/when you/PRP/you get/VBP/get the/DT/the solutions/NNS/solutions back/RB/back you/PRP/you put/VBD/put them/PRP/them together/NNP/together. and/CC/and get/VB/get the/DT/the solution/NN/solution to/TO/to the/DT/the larger/JJR/larger input/NNP/input. that/IN/that is/VBZ/is induction/NN/induction /,/, you/PRP/you could/MD/could use/VB/use either/DT/either recursion/NN/recursion or/CC/or it/PRP/it could/MD/could even/RB/even be/VB/be once/RB/once you/PRP/you know/VBP/know what/WP/what the/DT/the smaller/JJR/smaller inputs/NNS/inputs it/PRP/it could/MD/could even/RB/even be/VB/be /:/( /-NONE-/( refer/VBP/refer time/NN/time /:/: 02/CD/02 /:/: 42/CD/42 /CD/) /CD/) /./. the/DT/the next/JJ/next point/NN/point is/VBZ/is ordering/VBG/ordering the/DT/the input/NN/input /,/, which/WDT/which is/VBZ/is you/PRP/you look/VBP/look at/IN/at the/DT/the input/NN/input in/IN/in some/DT/some order/NNP/order. for/IN/for instance/NN/instance /,/, if/IN/if it/PRP/it is/VBZ/is an/DT/an array/NN/array you/PRP/you look/VBP/look at/IN/at it/NNP/it. let/VB/let us/PRP/us say/VB/say /,/, in/IN/in increasing/VBG/increasing order/NN/order of/IN/of indices/NNP/indices. for/IN/for other/JJ/other structures/NNS/structures it/PRP/it is/VBZ/is could/MD/could be/VB/be different/NNP/different. if/IN/if it/PRP/it is/VBZ/is a/DT/a list/NN/list again/RB/again /,/, you/PRP/you will/MD/will have/VB/have to/TO/to look/VB/look at/IN/at it/PRP/it element/VBD/element by/IN/by element/NNP/element. for/IN/for other/JJ/other data/NNS/data input/IN/input and/CC/and other/JJ/other data/NNS/data structures/NNS/structures /,/, you/PRP/you could/MD/could this/DT/this could/MD/could vary/NNP/vary. the/DT/the other/JJ/other thing/NN/thing is/VBZ/is store/RBR/store values/NNS/values /,/, which/WDT/which you/PRP/you may/MD/may use/VB/use later/JJ/later on/NNP/on. if/IN/if you/PRP/you are/VBP/are not/RB/not going/VBG/going to/TO/to use/VB/use a/DT/a value/NN/value /,/, which/WDT/which you/PRP/you have/VBP/have computed/VBN/computed later/JJ/later on/IN/on then/RB/then you/PRP/you can/MD/can of/IN/of course/NN/course /,/, discard/NN/discard it/NNP/it. otherwise/NN/otherwise /,/, this/DT/this very/RB/very simple/JJ/simple principle/NN/principle will/MD/will help/VB/help us/PRP/us design/VB/design algorithms/NNS/algorithms in/IN/in the/DT/the future/NN/future good/NNP/good. so/RB/so /,/, we/PRP/we have/VBP/have seen/VBN/seen /,/, some/DT/some algorithms/NNS/algorithms simple/VBP/simple algorithms/NNS/algorithms for/IN/for simple/JJ/simple problems/NNS/problems using/VBG/using these/NNP/these. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 44/CD/44 /CD/) the/DT/the paradigm/NN/paradigm /,/, that/IN/that we/PRP/we considered/VBD/considered last/JJ/last time/NN/time was/VBD/was divide/JJ/divide and/CC/and conquer/NNP/conquer. so/RB/so /,/, the/DT/the basic/JJ/basic idea/NN/idea was/VBD/was this/DT/this /,/, if/IN/if i/PRP/i have/VBP/have an/DT/an input/NN/input let/NN/let us/PRP/us say/VBP/say an/DT/an array/NNP/array. but/CC/but /,/, it/PRP/it could/MD/could absolutely/RB/absolutely anything/NNP/anything. divide/NN/divide it/PRP/it into/IN/into two/CD/two parts/NNP/parts. solve/NN/solve for/IN/for the/DT/the left/NN/left /,/, solve/VBP/solve for/IN/for the/DT/the right/NN/right say/NNP/say. and/CC/and then/RB/then /,/, put/VBD/put the/DT/the solution/NN/solution back/RB/back together/NNP/together. so/RB/so /,/, you/PRP/you divide/VBP/divide input/NNP/input. solve/NN/solve each/DT/each part/NN/part and/CC/and put/VBD/put them/PRP/them together/RB/together to/TO/to get/VB/get a/DT/a solution/NN/solution for/IN/for the/DT/the big/JJ/big problem/NNP/problem. and/CC/and well/RB/well often/RB/often it/PRP/it pays/VBZ/pays to/TO/to divide/VB/divide it/PRP/it into/IN/into equal/JJ/equal parts/NNP/parts. we/PRP/we will/MD/will in/IN/in fact/NN/fact /,/, see/VB/see an/DT/an example/NN/example why/WRB/why this/DT/this is/VBZ/is so/RB/so ?/./? but/CC/but /,/, even/RB/even in/IN/in the/DT/the previous/JJ/previous cases/NNS/cases for/IN/for instance/NN/instance max/NN/max min/NN/min or/CC/or finding/VBG/finding the/DT/the second/JJ/second minimum/NNP/minimum. the/DT/the two/CD/two examples/NNS/examples that/WDT/that we/PRP/we saw/VBD/saw /,/, you/PRP/you could/MD/could try/VB/try breaking/VBG/breaking at/IN/at breaking/VBG/breaking the/DT/the input/NN/input up/RP/up into/IN/into unequal/JJ/unequal pieces/NNP/pieces. and/CC/and then/RB/then /,/, try/NN/try and/CC/and solve/VB/solve the/DT/the recurrence/NNP/recurrence. and/CC/and see/VB/see /,/, what/WDT/what answer/NN/answer you/PRP/you get/NNP/get. so/RB/so /,/, you/PRP/you should/MD/should i/PRP/i sort/VB/sort of/IN/of encourage/NN/encourage you/PRP/you to/TO/to try/VB/try this/DT/this out/NNP/out. so/RB/so /,/, the/DT/the next/JJ/next problem/NN/problem /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to consider/VB/consider is/VBZ/is the/DT/the very/JJ/very familiar/JJ/familiar /,/, should/MD/should be/VB/be very/RB/very familiar/JJ/familiar to/TO/to all/DT/all of/IN/of us/PRP/us it/PRP/it is/VBZ/is sorting/NNP/sorting. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 22/CD/22 /CD/) only/RB/only we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at it/PRP/it now/RB/now from/IN/from the/DT/the new/JJ/new sort/NN/sort of/IN/of design/NN/design principles/NNS/principles /,/, that/IN/that we/PRP/we have/VBP/have learnt/NNP/learnt. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to try/NN/try and/CC/and apply/RB/apply those/DT/those to/TO/to sorting/NNP/sorting. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take the/DT/the simplest/JJS/simplest sort/NN/sort of/IN/of case/NNP/case. you/PRP/you have/VBP/have an/DT/an array/NNP/array. an/DT/an array/NN/array of/IN/of n/NN/n elements/NNS/elements and/CC/and you/PRP/you would/MD/would like/VB/like to/TO/to sort/VB/sort the/DT/the elements/NNS/elements in/IN/in increasing/VBG/increasing order/NNP/order. let/NN/let us/PRP/us /,/, assume/VBP/assume that/IN/that elements/NNS/elements are/VBP/are distinct/NNP/distinct. this/DT/this is/VBZ/is not/RB/not going/VBG/going to/TO/to change/VB/change any/DT/any of/IN/of our/PRP$/our design/NN/design principle/NN/principle or/CC/or that/IN/that or/CC/or the/DT/the algorithm/NN/algorithm we/PRP/we come/VBP/come up/RP/up with/IN/with /,/, but/CC/but it/PRP/it will/MD/will just/RB/just /,/, it/PRP/it is/VBZ/is just/RB/just to/TO/to keep/VB/keep your/PRP$/your mind/NN/mind less/JJR/less cluttered/NNP/cluttered. so/RB/so /,/, you/PRP/you have/VBP/have an/DT/an array/NN/array of/IN/of let/NN/let us/PRP/us say/VBP/say /,/, n/NN/n elements/NNS/elements and/CC/and you/PRP/you would/MD/would like/VB/like to/TO/to sort/VB/sort them/PRP/them in/IN/in increasing/VBG/increasing order/NNP/order. let/NN/let us/PRP/us put/VBD/put the/DT/the first/JJ/first design/NN/design principle/NN/principle into/IN/into practice/NNP/practice. supposing/NN/supposing you/PRP/you can/MD/can solve/VB/solve it/PRP/it for/IN/for a/DT/a smaller/JJR/smaller array/NN/array /,/, how/WRB/how do/VBP/do you/PRP/you extend/VB/extend it/PRP/it to/TO/to a/DT/a bigger/JJR/bigger array/NN/array ?/./? and/CC/and the/DT/the most/RBS/most natural/JJ/natural smaller/NN/smaller arrays/NNS/arrays let/VBP/let us/PRP/us say/VBP/say /,/, the/DT/the first/JJ/first n/NN/n minus/NN/minus 1/CD/1 elements/NNP/elements. supposing/NN/supposing /,/, i/PRP/i could/MD/could solve/VB/solve this/DT/this problem/NN/problem of/IN/of sorting/VBG/sorting the/DT/the array/NN/array for/IN/for the/DT/the first/JJ/first n/NN/n minus/NN/minus 1/CD/1 elements/NNP/elements. how/WRB/how do/VBP/do i/PRP/i /,/, now/RB/now extend/VBP/extend it/PRP/it to/TO/to the/DT/the bigger/JJR/bigger array/NNP/array. so/RB/so /,/, here/RB/here the/DT/the problem/NN/problem /,/, here/RB/here is/VBZ/is what/WP/what the/DT/the input/NN/input looks/VBZ/looks like/NNP/like. this/DT/this will/MD/will be/VB/be first/RB/first n/VB/n minus/NN/minus 1/CD/1 elements/NNS/elements and/CC/and this/DT/this is/VBZ/is the/DT/the last/JJ/last element/NNP/element. so/IN/so /,/, you/PRP/you first/RB/first sort/NN/sort this/DT/this is/VBZ/is by/IN/by recursion/NN/recursion let/VB/let us/PRP/us /,/, say/VBP/say and/CC/and now/RB/now i/PRP/i want/VBP/want to/TO/to place/VB/place this/DT/this in/IN/in the/DT/the right/NN/right position/NNP/position. now/RB/now /,/, i/PRP/i guess/VBP/guess most/JJS/most of/IN/of you/PRP/you know/VBP/know binary/JJ/binary search/NN/search by/IN/by now/NNP/now. so/RB/so /,/, the/DT/the position/NN/position is/VBZ/is very/RB/very easily/RB/easily identified/NNP/identified. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, this/DT/this is/VBZ/is now/RB/now sorted/NNP/sorted. so/RB/so /,/, this/DT/this portion/NN/portion is/VBZ/is sorted/VBN/sorted and/CC/and this/DT/this position/NN/position now/RB/now is/VBZ/is identified/NNP/identified. let/NN/let us/PRP/us say/VBP/say /,/, they/PRP/they are/VBP/are you/PRP/you do/VBP/do a/DT/a binary/JJ/binary search/NNP/search. and/CC/and identify/VB/identify exactly/RB/exactly where/WRB/where this/DT/this goes/VBZ/goes in/NNP/in. well/RB/well now/RB/now /,/, what/WDT/what you/PRP/you have/VBP/have to/TO/to do/VB/do is/VBZ/is to/TO/to insert/VB/insert this/DT/this in/IN/in the/DT/the right/NN/right position/NNP/position. you/PRP/you have/VBP/have to/TO/to move/VB/move /,/, you/PRP/you have/VBP/have to/TO/to make/VB/make essentially/RB/essentially make/VB/make space/NNP/space. so/RB/so /,/, from/IN/from this/DT/this point/NN/point onwards/NNS/onwards /,/, you/PRP/you need/VBP/need to/TO/to move/VB/move everything/NN/everything one/CD/one step/NN/step to/TO/to the/DT/the right/NNP/right. every/DT/every element/NN/element here/RB/here /,/, you/PRP/you have/VBP/have to/TO/to move/VB/move one/CD/one step/NN/step to/TO/to the/DT/the right/NNP/right. move/NN/move one/CD/one step/NN/step and/CC/and then/RB/then insert/VB/insert the/DT/the element/NN/element in/IN/in the/DT/the right/NN/right order/NNP/order. so/RB/so /,/, here/RB/here is/VBZ/is an/DT/an algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go over/IN/over this/DT/this again/NNP/again. you/PRP/you recursively/RB/recursively /,/, sort/NN/sort the/DT/the first/JJ/first n/NN/n minus/NN/minus 1/CD/1 elements/NNP/elements. figure/NN/figure out/RP/out where/WRB/where the/DT/the last/JJ/last element/NN/element sits/NNS/sits and/CC/and then/RB/then put/VBD/put it/PRP/it in/IN/in place/NNP/place. this/DT/this is/VBZ/is called/VBN/called insertion/NN/insertion sort/NNP/sort. so/RB/so /,/, in/IN/in you/PRP/you previous/JJ/previous courses/NNS/courses /,/, you/PRP/you have/VBP/have dealt/VBN/dealt with/IN/with this/DT/this algorithm/NNP/algorithm. you/PRP/you have/VBP/have learnt/VBN/learnt insertion/NN/insertion sort/NN/sort there/EX/there people/NNS/people i/PRP/i guess/VBP/guess told/JJ/told you/PRP/you what/WP/what insertion/NN/insertion sort/NN/sort is/VBZ/is all/DT/all about/NNP/about. here/RB/here /,/, we/PRP/we are/VBP/are trying/VBG/trying to/TO/to understand/VB/understand /,/, how/WRB/how it/PRP/it is/VBZ/is that/IN/that people/NNS/people come/VBP/come up/RP/up with/IN/with these/DT/these algorithms/NNP/algorithms. so/RB/so that/IN/that /,/, when/WRB/when you/PRP/you are/VBP/are faced/VBN/faced with/IN/with a/DT/a new/JJ/new problem/NN/problem /,/, you/PRP/you can/MD/can come/VB/come up/RP/up with/IN/with an/DT/an algorithm/NN/algorithm of/IN/of your/PRP$/your own/NNP/own. that/IN/that is/VBZ/is the/DT/the idea/NNP/idea. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how you/PRP/you come/VBP/come up/RP/up with/IN/with an/DT/an insertion/NN/insertion sort/NNP/sort. it/PRP/it is/VBZ/is just/RB/just putting/VBG/putting you/PRP/you know/VBP/know the/DT/the principle/NN/principle /,/, we/PRP/we had/VBD/had into/IN/into practice/NNP/practice. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 09/CD/09 /:/: 03/CD/03 /CD/) /CD/) how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NNP/take. well/RB/well /,/, if/IN/if we/PRP/we just/RB/just look/VBP/look at/IN/at number/NN/number of/IN/of comparisons/NNP/comparisons. if/IN/if just/RB/just want/VBP/want to/TO/to find/VB/find out/RP/out the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. the/DT/the last/JJ/last element/NN/element /,/, you/PRP/you use/VBP/use the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is log/JJ/log n/NN/n /,/, because/IN/because you/PRP/you are/VBP/are just/RB/just doing/VBG/doing a/DT/a binary/JJ/binary search/NNP/search. so/RB/so /,/, and/CC/and every/DT/every other/JJ/other element/NN/element use/NN/use less/RBR/less time/NNP/time. it/PRP/it was/VBD/was for/IN/for the/DT/the i/NN/i th/NN/th element/NN/element it/PRP/it was/VBD/was log/JJ/log i/NNP/i. the/DT/the time/NN/time taken/VBN/taken was/VBD/was log/JJ/log i/NNP/i. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is in/IN/in fact/NN/fact /,/, roughly/RB/roughly order/NN/order log/NN/log n/NN/n /,/, order/NN/order n/NN/n log/NN/log n/NNP/n. i/PRP/i mean/VBP/mean it/PRP/it is/VBZ/is order/NN/order log/NN/log n/NN/n per/IN/per element/NN/element /,/, there/EX/there are/VBP/are n/NN/n elements/NNS/elements and/CC/and it/PRP/it is/VBZ/is n/VBN/n log/NN/log n/NNP/n. but/CC/but /,/, the/DT/the mains/NNS/mains step/VBP/step here/RB/here /,/, which/WDT/which takes/VBZ/takes time/NN/time is/VBZ/is not/RB/not comparison/NN/comparison /,/, but/CC/but this/DT/this movement/NNP/movement. let/VBD/let us/PRP/us /,/, look/VBP/look at/IN/at the/DT/the last/JJ/last step/NNP/step. the/DT/the last/JJ/last step/NN/step says/VBZ/says /,/, once/RB/once i/PRP/i find/VBP/find this/DT/this place/NN/place i/PRP/i have/VBP/have to/TO/to move/VB/move everything/NN/everything to/TO/to the/DT/the right/NNP/right. now/RB/now /,/, this/DT/this place/NN/place could/MD/could actually/RB/actually be/VB/be the/DT/the beginning/NN/beginning of/IN/of the/DT/the array/NN/array /,/, in/IN/in which/WDT/which case/NN/case you/PRP/you are/VBP/are going/VBG/going to/TO/to shift/VB/shift the/DT/the entire/JJ/entire array/NN/array by/IN/by 1/CD/1. so/RB/so /,/, while/IN/while you/PRP/you just/RB/just took/VBD/took log/NN/log n/NN/n time/NN/time to/TO/to find/VB/find the/DT/the place/NN/place to/TO/to move/VB/move elements/NNS/elements /,/, you/PRP/you may/MD/may take/VB/take you/PRP/you know/VB/know n/JJ/n units/NNS/units of/IN/of time/NNP/time. this/DT/this is/VBZ/is the/DT/the expansive/JJ/expansive step/NN/step in/IN/in insertion/NN/insertion sort/NNP/sort. and/CC/and if/IN/if /,/, implemented/VBN/implemented in/IN/in this/DT/this in/IN/in this/DT/this manner/NN/manner /,/, each/DT/each time/NN/time you/PRP/you take/VBP/take order/NN/order n/NN/n steps/NNP/steps. for/IN/for the/DT/the i/NN/i th/NN/th step/VB/step /,/, you/PRP/you take/VBP/take i/PRP/i units/NNS/units of/IN/of time/NN/time to/TO/to move/VB/move it/PRP/it to/TO/to the/DT/the right/NNP/right. you/PRP/you may/MD/may take/VB/take i/PRP/i units/NNS/units in/IN/in the/DT/the worst/JJS/worst case/NN/case /,/, in/IN/in which/WDT/which case/NN/case the/DT/the time/NN/time will/MD/will be/VB/be order/NN/order n/NN/n square/NNP/square. so/RB/so /,/, i/PRP/i will/MD/will leave/VB/leave it/PRP/it for/IN/for you/PRP/you to/TO/to see/VB/see if/IN/if you/PRP/you can/MD/can use/VB/use better/JJR/better data/NNS/data structures/NNP/structures. so/RB/so /,/, that/IN/that you/PRP/you can/MD/can sort/VB/sort of/IN/of avoid/JJ/avoid this/DT/this movement/NNP/movement. but/CC/but /,/, implemented/VBD/implemented this/DT/this way/NN/way insertion/NN/insertion sort/NN/sort takes/VBZ/takes order/NN/order n/NN/n square/NN/square time/NN/time though/IN/though the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons here/RB/here is/VBZ/is still/RB/still n/JJ/n log/NN/log n/NNP/n. let/NN/let us/PRP/us /,/, put/VBD/put our/PRP$/our other/JJ/other design/NN/design paradigms/NNS/paradigms into/IN/into play/NN/play into/IN/into practice/NNP/practice. one/CD/one was/VBD/was to/TO/to divide/VB/divide the/DT/the array/NN/array equally/NNP/equally. work/NN/work one/CD/one each/DT/each piece/NN/piece and/CC/and then/RB/then put/VBD/put them/PRP/them together/NNP/together. let/VBP/let us/PRP/us look/VBP/look at/IN/at this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 15/CD/15 /CD/) so/IN/so /,/, here/RB/here is/VBZ/is my/PRP$/my so/RB/so sorting/NNP/sorting. so/IN/so /,/, this/DT/this is/VBZ/is the/DT/the second/JJ/second algorithm/NN/algorithm we/PRP/we are/VBP/are going/VBG/going to/TO/to try/NNP/try. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my array/NNP/array. you/PRP/you divide/VBP/divide it/PRP/it into/IN/into two/CD/two equal/JJ/equal halves/NNS/halves /,/, two/CD/two halves/NNP/halves. sort/NN/sort each/DT/each piece/NN/piece /,/, sort/NN/sort each/DT/each piece/NN/piece and/CC/and then/RB/then you/PRP/you have/VB/have to/TO/to put/VB/put these/DT/these things/NNS/things together/NNP/together. so/RB/so /,/, let/VB/let us/PRP/us /,/, write/VBP/write this/DT/this down/NNP/down. so/RB/so /,/, divide/IN/divide into/IN/into two/CD/two pieces/NNP/pieces. sort/NN/sort each/DT/each piece/NN/piece and/CC/and then/RB/then put/VBD/put them/PRP/them together/NNP/together. so/RB/so /,/, the/DT/the algorithm/NN/algorithm is/VBZ/is clear/JJ/clear /,/, except/IN/except for/IN/for this/DT/this step/NNP/step. what/WP/what does/VBZ/does it/PRP/it mean/VB/mean to/TO/to put/VB/put them/PRP/them together/RP/together ?/./? so/RB/so /,/, far/RB/far it/PRP/it is/VBZ/is okay/NNP/okay. dividing/NN/dividing into/IN/into two/CD/two pieces/NNS/pieces no/DT/no sweat/NN/sweat /,/, sort/NN/sort each/DT/each recursion/NNP/recursion. you/PRP/you recurse/VBP/recurse on/IN/on each/DT/each piece/NN/piece you/PRP/you sort/NN/sort each/NNP/each. well/RB/well /,/, here/RB/here is/VBZ/is the/DT/the crucial/JJ/crucial step/NN/step that/WDT/that we/PRP/we need/VBP/need to/TO/to implement/VB/implement /,/, which/WDT/which is/VBZ/is putting/VBG/putting two/CD/two sorted/JJ/sorted arrays/NNS/arrays together/NNP/together. let/VB/let me/PRP/me /,/, also/RB/also say/VBP/say that/IN/that this/DT/this you/PRP/you could/MD/could work/VB/work with/IN/with other/JJ/other data/NNS/data structures/NNP/structures. instead/RB/instead of/IN/of arrays/NNS/arrays you/PRP/you could/MD/could have/VB/have list/NNP/list. and/CC/and you/PRP/you can/MD/can apply/VB/apply the/DT/the same/JJ/same design/NN/design principles/NNS/principles to/TO/to list/VB/list too/NNP/too. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will do/VB/do this/DT/this with/IN/with arrays/NNP/arrays. but/CC/but /,/, you/PRP/you it/PRP/it is/VBZ/is really/RB/really does/VBZ/does not/RB/not matter/NNP/matter. so/RB/so /,/, when/WRB/when i/PRP/i mention/VBP/mention array/JJ/array /,/, you/PRP/you could/MD/could you/PRP/you could/MD/could put/VB/put a/DT/a list/NN/list there/RB/there equally/RB/equally well/NNP/well. especially/RB/especially /,/, for/IN/for this/DT/this method/NN/method /,/, so/RB/so we/PRP/we divide/VBP/divide into/IN/into two/CD/two pieces/NNP/pieces. we/PRP/we sort/VBP/sort each/DT/each of/IN/of them/PRP/them by/IN/by recursion/NNP/recursion. and/CC/and then/RB/then we/PRP/we put/VBD/put the/DT/the solutions/NNS/solutions together/NNP/together. what/WP/what does/VBZ/does this/DT/this step/NN/step entail/NN/entail ?/./? well/RB/well /,/, this/DT/this let/NN/let us/PRP/us focus/VBZ/focus on/IN/on this/DT/this step/NNP/step. because/IN/because /,/, once/RB/once we/PRP/we implement/VBP/implement this/DT/this the/DT/the algorithm/NN/algorithm is/VBZ/is ready/NNP/ready. and/CC/and you/PRP/you can/MD/can program/VB/program it/PRP/it at/IN/at your/PRP$/your leisure/NNP/leisure. so/RB/so /,/, this/DT/this step/NN/step entails/VBZ/entails the/DT/the following/NNP/following. i/PRP/i have/VBP/have two/CD/two sorted/VBN/sorted arrays/NNS/arrays /,/, we/PRP/we sort/VBP/sort it/NNP/it. i/PRP/i need/VBP/need to/TO/to combine/VB/combine this/DT/this to/TO/to get/VB/get one/CD/one big/JJ/big sorted/JJ/sorted array/NNP/array. this/DT/this is/VBZ/is what/WP/what i/PRP/i want/NNP/want. i/PRP/i have/VBP/have these/DT/these two/CD/two pieces/NNS/pieces /,/, which/WDT/which are/VBP/are sorted/NNP/sorted. this/DT/this piece/NN/piece is/VBZ/is sorted/VBN/sorted /,/, so/RB/so is/VBZ/is that/IN/that piece/NNP/piece. we/PRP/we need/VBP/need to/TO/to put/VB/put these/DT/these two/CD/two sorted/VBN/sorted pieces/NNS/pieces together/RB/together to/TO/to get/VB/get a/DT/a big/JJ/big sorted/VBN/sorted piece/NNP/piece. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to solve/NNP/solve. so/RB/so /,/, this/DT/this is/VBZ/is called/VBN/called merging/VBG/merging two/CD/two sorted/JJ/sorted arrays/NNS/arrays or/CC/or lists/NNP/lists. it/PRP/it does/VBZ/does not/RB/not matter/NNP/matter. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 54/CD/54 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given elements/NNP/elements. these/DT/these are/VBP/are sorting/VBG/sorting let/NN/let us/PRP/us say/VBP/say /,/, sorted/VBN/sorted in/IN/in ascending/NN/ascending order/NN/order and/CC/and i/PRP/i would/MD/would like/VB/like to/TO/to build/VB/build a/DT/a bigger/JJR/bigger structure/NN/structure /,/, which/WDT/which is/VBZ/is which/WDT/which contains/VBZ/contains elements/NNS/elements in/IN/in both/DT/both of/IN/of them/PRP/them and/CC/and which/WDT/which is/VBZ/is sorted/NNP/sorted. so/RB/so /,/, i/PRP/i guess/VBP/guess the/DT/the procedure/NN/procedure should/MD/should be/VB/be fairly/RB/fairly natural/NNP/natural. and/CC/and most/JJS/most of/IN/of you/PRP/you should/MD/should have/VB/have gotten/VBN/gotten this/DT/this by/IN/by now/NNP/now. which/WDT/which is/VBZ/is well/RB/well /,/, what/WDT/what is/VBZ/is the/DT/the smallest/JJS/smallest /,/, so/RB/so here/RB/here is/VBZ/is my/PRP$/my new/JJ/new list/NN/list or/CC/or array/NNP/array. this/DT/this is/VBZ/is my/PRP$/my output/NNP/output. what/WP/what is/VBZ/is which/WDT/which element/NN/element will/MD/will occur/VB/occur will/MD/will occupy/VB/occupy the/DT/the first/JJ/first position/NNP/position. well/RB/well it/PRP/it has/VBZ/has to/TO/to be/VB/be the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two elements/NNP/elements. so/RB/so /,/, what/WDT/what i/PRP/i do/VBP/do /,/, i/PRP/i first/RB/first compare/VBP/compare the/DT/the first/JJ/first elements/NNS/elements of/IN/of these/DT/these two/CD/two lists/NNS/lists or/CC/or arrays/NNS/arrays or/CC/or sub/VB/sub arrays/NNP/arrays. and/CC/and put/VBD/put the/DT/the smaller/JJR/smaller of/IN/of them/PRP/them here/NNP/here. so/RB/so /,/, i/PRP/i can/MD/can have/VB/have two/CD/two pointers/NNS/pointers or/CC/or two/CD/two temporary/JJ/temporary variables/NNS/variables /,/, which/WDT/which point/NN/point to/TO/to some/DT/some places/NNS/places in/IN/in the/DT/the array/NNP/array. i/PRP/i compare/VBP/compare these/DT/these two/CD/two put/VBD/put the/DT/the smaller/JJR/smaller one/CD/one here/RB/here and/CC/and move/VB/move that/IN/that corresponding/VBG/corresponding pointer/NNP/pointer. let/NN/let us/PRP/us /,/, call/VBP/call this/DT/this a/DT/a and/CC/and b/NN/b /,/, supposing/VBG/supposing a/DT/a 1/CD/1 is/VBZ/is smaller/JJR/smaller than/IN/than b/NN/b 1/CD/1. then/RB/then c/JJ/c of/IN/of 1/CD/1 i/PRP/i should/MD/should assign/VB/assign the/DT/the smaller/JJR/smaller of/IN/of 2/CD/2 /,/, which/WDT/which is/VBZ/is a/DT/a 1/CD/1. and/CC/and i/PRP/i should/MD/should move/VB/move this/DT/this pointer/NNP/pointer. so/RB/so /,/, let/VB/let us/PRP/us call/MD/call these/VB/these two/CD/two pointers/NNS/pointers something/NNP/something. so/RB/so /,/, small/JJ/small a/DT/a and/CC/and small/JJ/small b/NNP/b. so/RB/so /,/, c/NN/c small/JJ/small c/NN/c is/VBZ/is small/JJ/small a/DT/a and/CC/and then/RB/then i/PRP/i need/VBP/need to/TO/to increment/NNP/increment. so/RB/so /,/, increment/NN/increment so/IN/so a/DT/a /,/, which/WDT/which is/VBZ/is pointing/VBG/pointing here/RB/here will/MD/will point/VB/point to/TO/to the/DT/the next/JJ/next element/NN/element and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, i/PRP/i just/RB/just keep/VB/keep doing/VBG/doing this/DT/this at/IN/at any/DT/any stage/NNP/stage. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the generic/JJ/generic step/NN/step at/IN/at some/DT/some stage/NN/stage i/PRP/i have/VBP/have these/DT/these arrays/NNS/arrays a/DT/a and/CC/and b/NNP/b. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 24/CD/24 /CD/) i/PRP/i have/VBP/have pointers/NNS/pointers small/JJ/small a/DT/a and/CC/and small/JJ/small b/NNP/b. and/CC/and then/RB/then i/PRP/i have/VBP/have pointer/JJR/pointer small/JJ/small c/NNP/c. i/PRP/i compare/VBP/compare these/DT/these two/CD/two elements/NNS/elements /,/, put/VBD/put the/DT/the smaller/JJR/smaller of/IN/of them/PRP/them here/RB/here and/CC/and increment/NN/increment the/DT/the corresponding/NN/corresponding pointer/NNP/pointer. this/DT/this is/VBZ/is the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i just/RB/just essentially/RB/essentially /,/, somehow/WRB/somehow scan/JJ/scan these/DT/these two/CD/two and/CC/and keep/VB/keep filling/VBG/filling in/IN/in these/DT/these elements/NNS/elements in/IN/in this/DT/this big/JJ/big array/NNP/array. so/RB/so /,/, this/DT/this is/VBZ/is merging/NNP/merging. i/PRP/i hope/VBP/hope you/PRP/you can/MD/can write/VB/write code/NN/code /,/, if/IN/if need/NN/need be/NNP/be. if/IN/if the/DT/the idea/NN/idea is/VBZ/is very/RB/very simple/JJ/simple and/CC/and if/IN/if they/PRP/they are/VBP/are less/RBR/less of/IN/of course/NN/course /,/, it/PRP/it is/VBZ/is it/PRP/it is/VBZ/is trivial/JJ/trivial /,/, you/PRP/you just/RB/just you/PRP/you have/VBP/have these/DT/these two/CD/two pointers/NNS/pointers you/PRP/you sort/VBP/sort of/IN/of compare/NN/compare these/DT/these two/CD/two values/NNP/values. put/VBD/put the/DT/the new/JJ/new value/NN/value in/IN/in a/DT/a new/JJ/new list/NN/list and/CC/and increment/NN/increment this/DT/this pointer/NNP/pointer. that/IN/that is/VBZ/is the/DT/the way/NN/way it/PRP/it is/VBZ/is done/NNP/done. and/CC/and arrays/VBZ/arrays if/IN/if you/PRP/you want/VBP/want to/TO/to you/PRP/you may/MD/may actually/RB/actually /,/, have/VBP/have sub/NN/sub arrays/NNS/arrays of/IN/of the/DT/the original/JJ/original array/NN/array /,/, where/WRB/where you/PRP/you are/VBP/are doing/VBG/doing this/DT/this work/NNP/work. you/PRP/you could/MD/could have/VB/have a/DT/a temporary/JJ/temporary array/NN/array /,/, where/WRB/where you/PRP/you create/VBP/create this/DT/this merge/NN/merge list/NN/list and/CC/and then/RB/then write/VB/write it/PRP/it back/RB/back into/IN/into the/DT/the original/JJ/original array/NNP/array. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, the/DT/the merge/NN/merge step/NN/step is/VBZ/is also/RB/also now/RB/now done/NNP/done. this/DT/this is/VBZ/is the/DT/the algorithm/NNP/algorithm. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? this/DT/this algorithm/NN/algorithm is/VBZ/is called/VBN/called merge/NN/merge sort/NN/sort by/IN/by the/DT/the way/NNP/way. so/RB/so /,/, it/PRP/it is/VBZ/is called/VBN/called merge/NN/merge sort/NNP/sort. and/CC/and how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NNP/take. let/VBD/let us/PRP/us go/VBP/go back/RB/back to/TO/to this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 17/CD/17 /:/: 52/CD/52 /CD/) /CD/) scribble/JJ/scribble piece/NN/piece of/IN/of paper/NNP/paper. so/RB/so /,/, here/RB/here is/VBZ/is merge/NN/merge sort/NNP/sort. it/PRP/it says/VBZ/says /,/, divide/RB/divide into/IN/into two/CD/two pieces/NNS/pieces sort/NN/sort each/DT/each of/IN/of them/PRP/them and/CC/and put/VBD/put them/PRP/them together/NNP/together. this/DT/this is/VBZ/is essentially/RB/essentially /,/, essentially/RB/essentially merging/VBG/merging two/CD/two sorted/JJ/sorted sequences/NNS/sequences into/IN/into one/CD/one big/JJ/big sequence/NNP/sequence. that/IN/that is/VBZ/is the/DT/the third/JJ/third step/NNP/step. the/DT/the divide/NN/divide step/NN/step well/RB/well does/VBZ/does not/RB/not take/VB/take any/DT/any time/NNP/time. sorting/NN/sorting each/DT/each is/VBZ/is a/DT/a recursive/JJ/recursive step/NNP/step. we/PRP/we sort/VBP/sort on/IN/on roughly/RB/roughly half/DT/half the/DT/the array/NNP/array. and/CC/and we/PRP/we need/VBP/need to/TO/to figure/VB/figure out/RP/out how/WRB/how much/RB/much time/NN/time does/VBZ/does it/PRP/it take/VB/take to/TO/to put/VB/put these/DT/these things/NNS/things together/NNP/together. good/NNP/good. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the time/NN/time taken/VBN/taken ?/./? supposing/NN/supposing t/NN/t n/NN/n is/VBZ/is the/DT/the time/NN/time for/IN/for an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 43/CD/43 /CD/) by/IN/by time/NN/time again/RB/again /,/, we/PRP/we will/MD/will focus/VB/focus on/IN/on the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, because/IN/because even/RB/even here/NNP/here. every/DT/every other/JJ/other operation/NN/operation is/VBZ/is big/JJ/big o/NN/o of/IN/of number/NN/number of/IN/of comparisons/NNP/comparisons. so/RB/so /,/, the/DT/the number/NN/number of/IN/of /,/, if/IN/if i/PRP/i can/MD/can bound/VB/bound the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is a/DT/a constant/JJ/constant times/NNS/times the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. so/RB/so /,/, please/VB/please check/NN/check this/NNP/this. for/IN/for instance/NN/instance moving/VBG/moving the/DT/the pointer/NN/pointer etcetera/NN/etcetera /,/, etcetera/NN/etcetera /,/, etcetera/NNP/etcetera. and/CC/and if/IN/if /,/, you/PRP/you have/VBP/have list/VBN/list copying/VBG/copying one/CD/one list/NN/list to/TO/to the/DT/the other/JJ/other etcetera/NNP/etcetera. they/PRP/they are/VBP/are all/RB/all bounded/VBN/bounded by/IN/by the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. so/RB/so /,/, i/PRP/i can/MD/can just/RB/just focus/VB/focus on/IN/on this/DT/this one/CD/one quantity/NN/quantity /,/, which/WDT/which is/VBZ/is number/NN/number of/IN/of comparisons/NNP/comparisons. so/RB/so /,/, let/VB/let t/NN/t n/NN/n be/VB/be the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that we/PRP/we make/VBP/make /,/, we/PRP/we would/MD/would now/RB/now like/VB/like to/TO/to bound/VB/bound the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons needed/VBN/needed for/IN/for an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. well/RB/well the/DT/the divide/NN/divide step/NN/step does/VBZ/does not/RB/not take/VB/take any/DT/any time/NNP/time. so/RB/so /,/, but/CC/but there/EX/there are/VBP/are two/CD/two sub/NN/sub problems/NNS/problems of/IN/of roughly/RB/roughly equal/JJ/equal size/NN/size /,/, so/RB/so that/IN/that that/IN/that gives/NNS/gives you/PRP/you 2/CD/2 t/NN/t n/NN/n by/IN/by 2/CD/2. again/RB/again /,/, we/PRP/we will/MD/will not/RB/not worry/VB/worry about/IN/about floors/NNS/floors and/CC/and ceilings/NNS/ceilings for/IN/for ease/NN/ease of/IN/of calculation/NNP/calculation. and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is a/DT/a merge/NN/merge step/NNP/step. how/WRB/how much/JJ/much time/NN/time does/VBZ/does merge/NN/merge step/VB/step take/NN/take on/IN/on an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is something/NN/something we/PRP/we need/VBP/need to/TO/to do/NNP/do. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the merge/NN/merge step/NN/step on/IN/on an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 20/CD/20 /CD/) the/DT/the merge/NN/merge /,/, i/PRP/i have/VBP/have two/CD/two arrays/NNS/arrays of/IN/of size/NN/size n/NN/n by/IN/by 2/CD/2. two/CD/two sub/NN/sub arrays/NNS/arrays of/IN/of size/NN/size n/NN/n by/IN/by 2/CD/2 or/CC/or two/CD/two lists/NNS/lists of/IN/of size/NN/size n/NN/n by/IN/by 2/CD/2. and/CC/and i/PRP/i merge/VBP/merge this/DT/this to/TO/to get/VB/get something/NN/something of/IN/of size/NN/size n/NNP/n. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? well/RB/well /,/, there/EX/there are/VBP/are many/JJ/many ways/NNS/ways of/IN/of figuring/VBG/figuring this/DT/this out/NNP/out. so/RB/so /,/, let/VB/let me/PRP/me tell/VB/tell you/PRP/you one/CD/one way/NN/way of/IN/of doing/VBG/doing it/NNP/it. this/DT/this is/VBZ/is a/DT/a smart/NN/smart way/NN/way of/IN/of doing/VBG/doing it/NNP/it. and/CC/and then/RB/then /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you a/DT/a way/NN/way /,/, which/WDT/which is/VBZ/is just/RB/just using/VBG/using the/DT/the /,/, we/PRP/we will/MD/will again/RB/again design/VB/design this/DT/this algorithm/NN/algorithm using/VBG/using design/NN/design principles/NNS/principles /,/, that/IN/that we/PRP/we have/VBP/have already/RB/already followed/VBN/followed and/CC/and then/RB/then analyze/VB/analyze it/PRP/it that/IN/that way/NN/way also/NNP/also. so/RB/so /,/, we/PRP/we will/MD/will do/VB/do it/PRP/it two/CD/two ways/NNP/ways. so/RB/so /,/, what/WDT/what is/VBZ/is each/DT/each step/NN/step ?/./? each/DT/each step/NN/step you/PRP/you compare/VBP/compare two/CD/two elements/NNS/elements and/CC/and an/DT/an element/NN/element gets/VBZ/gets filled/VBN/filled in/IN/in the/DT/the array/NN/array c/NNP/c. the/DT/the crucial/JJ/crucial sort/NN/sort of/IN/of observation/NN/observation here/RB/here is/VBZ/is that/NNP/that. each/DT/each time/NN/time you/PRP/you make/VBP/make an/DT/an /,/, each/DT/each time/NN/time you/PRP/you make/VBP/make a/DT/a comparison/NNP/comparison. one/CD/one element/NN/element in/IN/in c/NN/c in/IN/in this/DT/this new/JJ/new array/NN/array /,/, the/DT/the final/JJ/final sorted/VBN/sorted array/NN/array gets/NNS/gets filled/NNP/filled. once/RB/once again/RB/again /,/, one/CD/one for/IN/for each/DT/each comparison/NN/comparison an/DT/an extra/JJ/extra element/NN/element a/DT/a new/JJ/new element/NN/element gets/NNS/gets filled/VBD/filled in/IN/in the/DT/the total/JJ/total array/NNP/array. how/WRB/how many/JJ/many elements/NNS/elements get/VBP/get filled/VBN/filled ?/./? the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements that/WDT/that gets/VBZ/gets filled/VBN/filled into/IN/into a/DT/a new/JJ/new array/NN/array is/VBZ/is n/NNP/n. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons you/PRP/you make/VBP/make is/VBZ/is utmost/VBN/utmost n/NNP/n. let/NN/let me/PRP/me say/VBP/say /,/, state/NN/state this/DT/this analysis/NN/analysis again/RB/again /,/, because/IN/because this/DT/this is/VBZ/is this/DT/this is/VBZ/is quite/RB/quite important/NNP/important. each/DT/each time/NN/time you/PRP/you make/VBP/make a/DT/a comparison/NN/comparison an/DT/an element/NN/element of/IN/of c/NN/c gets/NNS/gets filled/NNP/filled. so/RB/so /,/, if/IN/if i/PRP/i make/VBP/make k/NN/k comparisons/NNS/comparisons /,/, then/RB/then i/PRP/i fill/VBP/fill k/NN/k elements/NNS/elements in/IN/in c/NNP/c. the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements in/IN/in c/NN/c is/VBZ/is n/NNP/n. so/RB/so /,/, the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons i/PRP/i make/VBP/make must/MD/must also/RB/also be/VB/be bounded/VBN/bounded by/IN/by n/NNP/n. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is n/NNP/n. the/DT/the reason/NN/reason is/VBZ/is for/IN/for each/DT/each comparison/NN/comparison /,/, we/PRP/we add/VBP/add an/DT/an element/NN/element to/TO/to call/VB/call this/DT/this array/NN/array c/NNP/c. from/IN/from these/DT/these two/CD/two smaller/JJR/smaller arrays/NNS/arrays a/DT/a and/CC/and b/NN/b /,/, i/PRP/i pick/VBP/pick an/DT/an element/NN/element and/CC/and add/VBD/add it/PRP/it to/TO/to c/NNP/c. the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements in/IN/in c/NN/c is/VBZ/is n/NNP/n. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons i/PRP/i make/VBP/make is/VBZ/is also/RB/also n/NNP/n. let/VB/let us/PRP/us /,/, do/VBP/do this/DT/this merge/NN/merge differently/NNP/differently. so/RB/so /,/, that/IN/that total/JJ/total time/NN/time now/RB/now is/VBZ/is n/NNP/n. /,/, we/PRP/we now/RB/now this/NNP/this. and/CC/and we/PRP/we can/MD/can now/RB/now /,/, write/JJ/write the/DT/the recurrence/NN/recurrence and/CC/and we/PRP/we will/MD/will solve/VB/solve it/NNP/it. that/IN/that is/VBZ/is fine/NNP/fine. but/CC/but /,/, let/VB/let us/PRP/us again/RB/again do/VBP/do this/DT/this merge/NN/merge a/DT/a bit/NN/bit differently/NNP/differently. so/RB/so /,/, we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to apply/VB/apply our/PRP$/our design/NN/design principles/NNS/principles /,/, which/WDT/which is/VBZ/is induction/NN/induction like/IN/like a/DT/a merge/NN/merge to/TO/to smaller/JJR/smaller arrays/NNP/arrays. how/WRB/how do/VBP/do i/PRP/i merge/VB/merge larger/JJR/larger arrays/NNS/arrays ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 40/CD/40 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this again/NNP/again. so/RB/so /,/, here/RB/here are/VBP/are my/PRP$/my two/CD/two arrays/NNS/arrays /:/( /:/( refer/NN/refer time/NN/time /:/: 23/CD/23 /:/: 46/CD/46 /CD/) /CD/) /./. now/RB/now /,/, i/PRP/i know/VBP/know that/IN/that the/DT/the first/JJ/first element/NN/element in/IN/in c/NN/c is/VBZ/is the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two elements/NNP/elements. the/DT/the first/JJ/first element/NN/element here/RB/here is/VBZ/is the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/CD/two elements/NNP/elements. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is smaller/NNP/smaller. now/RB/now /,/, i/PRP/i look/VBP/look at/IN/at the/DT/the input/NN/input without/IN/without this/NNP/this. the/DT/the input/NN/input now/RB/now consists/VBZ/consists of/IN/of one/CD/one less/JJR/less element/NN/element from/IN/from here/RB/here and/CC/and some/DT/some elements/NNS/elements from/IN/from here/NNP/here. now/RB/now /,/, the/DT/the sizes/NNS/sizes need/VBP/need not/RB/not be/VB/be same/NNP/same. so/RB/so /,/, i/PRP/i can/MD/can supposing/VBG/supposing i/PRP/i solve/VBP/solve my/PRP$/my problem/NN/problem for/IN/for this/DT/this smaller/JJR/smaller input/NNP/input. can/MD/can i/VB/i solve/VB/solve the/DT/the problem/NN/problem for/IN/for the/DT/the larger/JJR/larger input/NN/input ?/./? well/RB/well /,/, the/DT/the answer/NN/answer is/VBZ/is should/MD/should be/VB/be you/PRP/you know/VB/know vociferous/JJ/vociferous yes/NNP/yes. it/PRP/it can/MD/can be/VB/be solved/NNP/solved. this/DT/this is/VBZ/is the/DT/the smaller/JJR/smaller of/IN/of this/DT/this shaded/JJ/shaded is/VBZ/is the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/NNP/two. and/CC/and now/RB/now /,/, i/PRP/i have/VBP/have two/CD/two arrays/NNS/arrays here/NNP/here. so/RB/so /,/, the/DT/the total/JJ/total size/NN/size is/VBZ/is smaller/NNP/smaller. one/CD/one element/NN/element i/PRP/i have/VBP/have removed/NNP/removed. so/RB/so /,/, these/DT/these two/CD/two i/PRP/i merge/VBP/merge to/TO/to get/VB/get this/DT/this portion/NNP/portion. and/CC/and the/DT/the smaller/NN/smaller element/NN/element i/PRP/i put/VBD/put here/RB/here /,/, this/DT/this goes/VBZ/goes in/IN/in here/NNP/here. and/CC/and recursively/RB/recursively /,/, i/PRP/i can/MD/can sort/VB/sort of/IN/of merge/NN/merge these/DT/these two/CD/two to/TO/to get/VB/get this/DT/this portion/NNP/portion. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the other/JJ/other way/NN/way of/IN/of doing/VBG/doing this/NNP/this. here/RB/here /,/, you/PRP/you would/MD/would naturally/RB/naturally use/VB/use recursion/NNP/recursion. and/CC/and if/IN/if not/RB/not iteration/NN/iteration at/IN/at least/JJS/least initially/RB/initially /,/, may/MD/may be/VB/be later/JJ/later on/IN/on you/PRP/you will/MD/will see/VB/see that/IN/that this/DT/this can/MD/can be/VB/be implemented/VBN/implemented iteratively/-NONE-/iteratively. and/CC/and you/PRP/you could/MD/could put/VB/put them/PRP/them together/RP/together iteratively/NNP/iteratively. so/RB/so /,/, now/RB/now how/WRB/how much/RB/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? if/IN/if there/EX/there are/VBP/are two/CD/two elements/NNP/elements. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write the/DT/the recurrence/NN/recurrence here/NNP/here. so/RB/so /,/, t/NN/t /,/, so/RB/so this/DT/this could/MD/could be/VB/be n/VBN/n and/CC/and m/NN/m /,/, because/IN/because they/PRP/they could/MD/could have/VB/have different/JJ/different sizes/NNP/sizes. so/RB/so /,/, if/IN/if it/PRP/it is/VBZ/is /,/, let/VB/let me/PRP/me not/RB/not use/VB/use n/NN/n here/NNP/here. let/NN/let us/PRP/us say/VBP/say m/NN/m 1/CD/1 and/CC/and m/NN/m 2/CD/2. t/NN/t of/IN/of m/NN/m 1/CD/1 m/NN/m 2/CD/2 is/VBZ/is what/WP/what /,/, well/RB/well one/CD/one of/IN/of them/PRP/them decreases/VBZ/decreases by/IN/by 1/CD/1. we/PRP/we do/VBP/do not/RB/not know/VB/know which/WDT/which one/-NONE-/one. so/RB/so may/MD/may be/VB/be /,/, i/PRP/i can/MD/can just/RB/just write/VB/write a/DT/a recurrence/NN/recurrence on/IN/on the/DT/the sum/NN/sum of/IN/of these/DT/these two/CD/two sizes/NNP/sizes. so/RB/so /,/, i/PRP/i can/MD/can actually/RB/actually /,/, write/JJ/write it/PRP/it on/IN/on n/NNP/n. this/DT/this n/NN/n stands/VBZ/stands for/IN/for the/DT/the sum/NN/sum of/IN/of these/DT/these two/CD/two sizes/NNS/sizes /,/, which/WDT/which is/VBZ/is the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements in/IN/in the/DT/the input/NNP/input. this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but t/NN/t n/NN/n minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1. where/WRB/where does/VBZ/does this/DT/this 1/CD/1 come/NN/come from/IN/from ?/./? this/DT/this is/VBZ/is two/CD/two /,/, when/WRB/when i/PRP/i have/VBP/have two/CD/two lists/NNP/lists. for/IN/for the/DT/the first/JJ/first comparison/NN/comparison i/PRP/i make/NNP/make. i/PRP/i make/VBP/make i/PRP/i compare/VBP/compare these/DT/these two/CD/two elements/NNS/elements remove/VBP/remove the/DT/the smaller/JJR/smaller 1/CD/1 and/CC/and apply/RB/apply recursion/NNP/recursion. this/DT/this 1/CD/1 comes/VBZ/comes for/IN/for the/DT/the first/JJ/first comparison/NN/comparison i/PRP/i make/NNP/make. and/CC/and you/PRP/you can/MD/can check/VB/check that/IN/that t/NN/t n/NN/n the/DT/the solution/NN/solution to/TO/to this/NNP/this. so/RB/so /,/, t/NN/t of/IN/of 2/CD/2 is/VBZ/is 1/CD/1. the/DT/the solution/NN/solution to/TO/to this/DT/this is/VBZ/is t/NN/t n/NN/n equals/NNS/equals n/VBP/n minus/NN/minus 1/CD/1. so/RB/so /,/, to/TO/to merge/VB/merge two/CD/two arrays/NNS/arrays the/DT/the sum/NN/sum of/IN/of two/CD/two sizes/NNS/sizes is/VBZ/is n/NNP/n. the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1. so/RB/so /,/, these/DT/these are/VBP/are two/CD/two ways/NNS/ways to/TO/to do/VB/do this/DT/this merge/NNP/merge. when/WRB/when you/PRP/you write/VBP/write the/DT/the code/NN/code actually/RB/actually /,/, the/DT/the comparisons/NNS/comparisons they/PRP/they /,/, the/DT/the both/DT/both the/DT/the algorithms/NNS/algorithms do/VBP/do will/MD/will be/VB/be /,/, if/IN/if you/PRP/you unroll/VBP/unroll the/DT/the recursion/NN/recursion you/PRP/you will/MD/will actually/RB/actually get/VB/get the/DT/the iterative/JJ/iterative process/NN/process back/NNP/back. so/RB/so now/RB/now /,/, we/PRP/we can/MD/can go/VB/go back/RB/back to/TO/to merge/VB/merge sort/NN/sort and/CC/and look/VB/look for/IN/for the/DT/the what/WP/what is/VBZ/is the/DT/the time/NN/time that/IN/that we/PRP/we need/NNP/need. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 19/CD/19 /CD/) so/RB/so /,/, it/PRP/it is/VBZ/is 2/CD/2 twice/NN/twice t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. so/RB/so /,/, in/IN/in fact/NN/fact /,/, well/RB/well i/PRP/i just/RB/just put/VBD/put n/RP/n here/RB/here for/IN/for simplicity/NNP/simplicity. you/PRP/you can/MD/can put/VB/put a/DT/a constant/NN/constant times/VBZ/times n/NN/n and/CC/and calculate/VB/calculate this/DT/this /,/, it/PRP/it will/MD/will make/VB/make no/DT/no difference/NNP/difference. these/DT/these constant/JJ/constant will/MD/will just/RB/just come/VB/come out/RP/out of/IN/of the/DT/the calculation/NNP/calculation. so/RB/so now/RB/now /,/, we/PRP/we need/VBP/need to/TO/to solve/VB/solve this/DT/this recurrence/NNP/recurrence. i/PRP/i guess/VBZ/guess most/JJS/most of/IN/of you/PRP/you would/MD/would have/VB/have hopefully/RB/hopefully do/VB/do know/RB/know how/WRB/how to/TO/to solve/VB/solve this/NNP/this. let/VB/let us/PRP/us /,/, anyway/RB/anyway do/VBP/do this/NNP/this. so/RB/so /,/, t/NN/t 2/CD/2 is/VBZ/is 1/CD/1. well/RB/well /,/, i/PRP/i should/MD/should strictly/RB/strictly write/VB/write t/NN/t n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. if/IN/if i/PRP/i am/VBP/am writing/VBG/writing comparisons/NNS/comparisons for/IN/for the/DT/the simple/JJ/simple reason/NN/reason that/WDT/that /,/, if/IN/if i/PRP/i have/VBP/have two/CD/two arrays/NNS/arrays whose/WP$/whose let/NN/let us/PRP/us say/VBP/say /,/, they/PRP/they are/VBP/are not/RB/not of/IN/of equal/JJ/equal size/NNP/size. then/RB/then i/PRP/i could/MD/could use/VB/use less/RBR/less than/IN/than n/NNP/n. in/IN/in this/DT/this case/NN/case /,/, it/PRP/it is/VBZ/is n/VBN/n and/CC/and it/PRP/it is/VBZ/is equal/NNP/equal. but/CC/but /,/, often/RB/often you/PRP/you should/MD/should sort/VB/sort of/IN/of check/NN/check whether/IN/whether /,/, this/DT/this should/MD/should be/VB/be equal/JJ/equal to/TO/to or/CC/or less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/NN/to. in/IN/in this/DT/this case/NN/case /,/, it/PRP/it is/VBZ/is in/IN/in fact/NN/fact /,/, equal/NNP/equal. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 39/CD/39 /CD/) and/CC/and t/NN/t n/NN/n is/VBZ/is twice/NN/twice t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. so/RB/so /,/, this/DT/this then/RB/then is/VBZ/is so/RB/so let/VB/let us/PRP/us open/JJ/open this/DT/this out/NN/out /,/, twice/NN/twice t/NN/t n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus n/NN/n plus/CC/plus n/NNP/n. so/RB/so /,/, this/DT/this t/NN/t n/NN/n by/IN/by 2/CD/2 /,/, i/PRP/i have/VBP/have replaced/VBN/replaced i/PRP/i have/VBP/have again/RB/again used/VBN/used this/DT/this recurrence/NNP/recurrence. i/PRP/i am/VBP/am sorry/NNP/sorry. so/RB/so /,/, this/DT/this should/MD/should be/VB/be n/VBN/n by/IN/by 2/CD/2. i/PRP/i have/VBP/have just/RB/just used/VBN/used recurrence/NNP/recurrence. i/PRP/i use/VBP/use the/DT/the same/JJ/same recurrence/NN/recurrence on/IN/on t/NN/t n/NN/n by/IN/by 2/CD/2. so/RB/so /,/, that/IN/that will/MD/will be/VB/be twice/NN/twice t/NN/t n/NN/n by/IN/by 4/CD/4 plus/CC/plus n/NN/n by/IN/by 2/CD/2 /,/, but/CC/but just/RB/just using/VBG/using this/DT/this with/IN/with n/NN/n by/IN/by 2/CD/2 in/IN/in place/NN/place of/IN/of n/NNP/n. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i get/NNP/get. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this /,/, this/DT/this is/VBZ/is 2/CD/2 square/JJ/square t/NN/t n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus n/NN/n plus/CC/plus n/NNP/n. so/RB/so /,/, if/IN/if i/PRP/i do/VBP/do this/DT/this i/PRP/i times/VBZ/times /,/, well/RB/well you/PRP/you could/MD/could do/VB/do it/PRP/it once/RB/once more/JJR/more to/TO/to see/VB/see what/WP/what the/DT/the pattern/NN/pattern looks/VBZ/looks like/NNP/like. if/IN/if i/PRP/i do/VBP/do it/PRP/it i/PRP/i times/VBZ/times /,/, i/PRP/i get/VBP/get 2/CD/2 to/TO/to the/DT/the i/PRP/i times/VBZ/times t/JJ/t n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i /,/, you/PRP/you can/MD/can plus/VB/plus there/RB/there will/MD/will be/VB/be a/DT/a number/NN/number of/IN/of n/NNP/n. so/RB/so /,/, how/WRB/how many/JJ/many times/NNS/times will/MD/will i/VB/i have/VB/have n/JJ/n ?/./? s/NNS/s here/RB/here /,/, it/PRP/it will/MD/will be/VB/be i/PRP/i times/VBZ/times n/JJ/n /,/, this/DT/this you/PRP/you can/MD/can check/NNP/check. you/PRP/you should/MD/should do/VB/do it/PRP/it once/RB/once more/JJR/more /,/, you/PRP/you will/MD/will get/VB/get 3/CD/3 times/NNS/times n/NNP/n. so/RB/so /,/, here/RB/here i/PRP/i have/VBP/have 2/CD/2 times/NNS/times n/NNP/n. if/IN/if i/PRP/i do/VBP/do it/PRP/it once/RB/once more/JJR/more i/PRP/i get/VBP/get 3/CD/3 times/NNS/times n/NNP/n. the/DT/the next/JJ/next step/NN/step you/PRP/you get/VBP/get 4/CD/4 times/NNS/times n/NNP/n. so/RB/so /,/, you/PRP/you check/VBP/check /,/, you/PRP/you sort/NN/sort of/IN/of guess/NN/guess that/IN/that this/DT/this is/VBZ/is what/WP/what is/VBZ/is going/VBG/going to/TO/to after/IN/after i/PRP/i steps/NNP/steps. and/CC/and you/PRP/you can/MD/can actually/RB/actually check/VB/check this/DT/this by/IN/by induction/NN/induction on/IN/on i/NNP/i. once/RB/once /,/, you/PRP/you have/VBP/have guessed/VBN/guessed this/DT/this you/PRP/you can/MD/can check/VB/check that/IN/that t/NN/t n/NN/n is/VBZ/is in/IN/in fact/NN/fact /,/, equal/JJ/equal to/TO/to this/DT/this by/IN/by induction/NN/induction on/IN/on i/NNP/i. that/IN/that i/PRP/i will/MD/will let/VB/let you/PRP/you know/NNP/know. now/RB/now what/WP/what /,/, well/RB/well we/PRP/we continue/VBP/continue till/RB/till n/JJ/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/NNP/i. so/RB/so /,/, let/VB/let me/PRP/me let/VB/let us/PRP/us start/VB/start here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 58/CD/58 /CD/) now/RB/now /,/, we/PRP/we know/VBP/know t/NN/t of/IN/of n/NN/n is/VBZ/is 2/CD/2 to/TO/to the/DT/the i/PRP/i times/VBZ/times t/JJ/t n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus i/PRP/i times/VBZ/times n/NNP/n. now/RB/now /,/, i/PRP/i know/VBP/know t/JJ/t of/IN/of 2/CD/2 is/VBZ/is 1/CD/1. so/RB/so /,/, i/PRP/i will/MD/will let/VB/let n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i to/TO/to be/VB/be 2/CD/2. so/RB/so /,/, then/RB/then what/WP/what do/VBP/do i/PRP/i get/NNP/get. if/IN/if i/PRP/i choose/VBP/choose an/DT/an i/PRP/i /,/, so/RB/so that/IN/that this/DT/this is/VBZ/is true/NNP/true. then/RB/then /,/, i/PRP/i get/VBP/get t/RB/t n/VBN/n is/VBZ/is well/RB/well 2/CD/2 to/TO/to the/DT/the i/PRP/i is/VBZ/is n/JJ/n by/IN/by 2/CD/2. this/DT/this is/VBZ/is t/NN/t by/IN/by t/NN/t of/IN/of 2/CD/2 /,/, which/WDT/which is/VBZ/is 1/CD/1 plus/RB/plus i/PRP/i times/VBZ/times n/NNP/n. what/WP/what is/VBZ/is i/NNP/i. well/RB/well /,/, i/PRP/i know/VBP/know 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is n/NNP/n. so/RB/so /,/, i/PRP/i is/VBZ/is log/JJ/log base/NN/base 2/CD/2 of/IN/of n/NN/n by/IN/by 2/CD/2. this/DT/this is/VBZ/is what/WP/what i/PRP/i is/VBZ/is /,/, so/RB/so plus/RB/plus n/JJ/n times/NNS/times log/VBP/log base/NN/base 2/CD/2 n/NN/n by/IN/by 2/CD/2. this/DT/this is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, the/DT/the time/NN/time taken/VBN/taken by/IN/by merge/NN/merge sort/NN/sort is/VBZ/is n/VBN/n log/NN/log n/NNP/n. there/EX/there is/VBZ/is one/CD/one more/RBR/more way/NN/way to/TO/to do/VB/do this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer business/NN/business on/IN/on arrays/NNS/arrays to/TO/to sort/NNP/sort. and/CC/and it/PRP/it in/IN/in fact/NN/fact /,/, gives/VBZ/gives rise/NN/rise to/TO/to another/DT/another well/RB/well known/VBN/known algorithm/NN/algorithm /,/, which/WDT/which you/PRP/you may/MD/may have/VB/have studied/NNP/studied. let/VB/let us/PRP/us see/VB/see /,/, what/WDT/what this/DT/this idea/NN/idea is/NNP/is. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the array/NNP/array. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 37/CD/37 /CD/) i/PRP/i still/RB/still want/VBP/want to/TO/to do/VB/do divide/JJ/divide and/CC/and conquer/NNP/conquer. so/RB/so /,/, i/PRP/i still/RB/still want/VBP/want to/TO/to divide/VB/divide the/DT/the array/NN/array into/IN/into two/CD/two parts/NNP/parts. somehow/NN/somehow work/NN/work with/IN/with each/DT/each part/NNP/part. and/CC/and then/RB/then put/VBD/put the/DT/the solutions/NNS/solutions back/RB/back together/NNP/together. but/CC/but /,/, the/DT/the way/NN/way i/PRP/i do/VBP/do /,/, it/PRP/it will/MD/will be/VB/be slightly/RB/slightly different/JJ/different in/IN/in this/DT/this case/NNP/case. so/RB/so /,/, what/WDT/what i/PRP/i do/VBP/do is/VBZ/is this/NNP/this. so/RB/so /,/, what/WDT/what i/PRP/i do/VBP/do is/VBZ/is in/IN/in the/DT/the divide/NN/divide part/NN/part /,/, i/PRP/i /VBP/( /:/( refer/NN/refer time/NN/time /:/: 33/CD/33 /:/: 02/CD/02 /CD/) /CD/) start/NN/start rearranging/VBG/rearranging the/DT/the elements/NNS/elements of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, i/PRP/i now/RB/now have/VBP/have two/CD/two parts/NNS/parts to/TO/to the/DT/the array/NNP/array. but/CC/but /,/, these/DT/these are/VBP/are not/RB/not divided/VBN/divided as/IN/as in/IN/in the/DT/the previous/JJ/previous case/NNP/case. remember/NN/remember in/IN/in the/DT/the previous/JJ/previous case/NN/case /,/, we/PRP/we just/RB/just picked/VBD/picked up/RP/up the/DT/the array/NN/array and/CC/and just/RB/just divided/VBN/divided arbitrarily/RB/arbitrarily into/IN/into two/CD/two parts/NNP/parts. this/DT/this time/NN/time we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be more/JJR/more careful/NNP/careful. what/WP/what we/PRP/we would/MD/would like/VB/like is/VBZ/is every/DT/every element/NN/element landing/NN/landing up/IN/up in/IN/in the/DT/the left/NN/left is/VBZ/is smaller/JJR/smaller than/IN/than every/DT/every element/NN/element landing/NN/landing up/IN/up in/IN/in the/DT/the right/NNP/right. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a x/NN/x here/RB/here and/CC/and y/NN/y here/NNP/here. i/PRP/i know/VBP/know that/IN/that x/NN/x is/VBZ/is less/JJR/less than/IN/than y/NNP/y. again/RB/again /,/, every/DT/every element/NN/element in/IN/in the/DT/the array/NN/array must/MD/must occur/VB/occur in/IN/in one/CD/one of/IN/of these/NNP/these. so/RB/so /,/, somehow/WRB/somehow /,/, i/PRP/i have/VBP/have divided/VBN/divided this/DT/this array/NN/array into/IN/into two/CD/two parts/NNS/parts left/VBN/left and/CC/and right/NNP/right. so/RB/so /,/, that/IN/that elements/NNS/elements in/IN/in the/DT/the left/NN/left are/VBP/are smaller/JJR/smaller than/IN/than the/DT/the elements/NNS/elements in/IN/in the/DT/the right/NNP/right. this/DT/this somehow/NN/somehow we/PRP/we have/VBP/have done/VBN/done this/NNP/this. now/RB/now /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is just/RB/just recurse/JJ/recurse on/IN/on these/DT/these two/CD/two parts/NNP/parts. so/RB/so /,/, you/PRP/you sort/NN/sort the/DT/the left/NN/left separately/NNP/separately. you/PRP/you sort/VBD/sort the/DT/the right/NN/right separately/NNP/separately. let/NN/let us/PRP/us see/VBP/see /,/, what/WP/what happens/NNS/happens once/RB/once you/PRP/you do/VBP/do this/NNP/this. once/RB/once you/PRP/you do/VBP/do this/DT/this /,/, i/PRP/i claim/VBP/claim that/IN/that the/DT/the entire/JJ/entire array/NN/array is/VBZ/is now/RB/now sorted/NNP/sorted. why/WRB/why is/VBZ/is that/IN/that so/RB/so ?/./? well/RB/well this/DT/this portion/NN/portion is/VBZ/is sorted/VBN/sorted right/NNP/right. this/DT/this left/NN/left portion/NN/portion is/VBZ/is sorted/NNP/sorted. this/DT/this right/NN/right portion/NN/portion is/VBZ/is sorted/NNP/sorted. i/PRP/i also/RB/also know/VBP/know that/IN/that every/DT/every element/NN/element on/IN/on the/DT/the left/NN/left is/VBZ/is smaller/JJR/smaller than/IN/than every/DT/every element/NN/element on/IN/on the/DT/the right/NNP/right. so/RB/so /,/, the/DT/the largest/JJS/largest element/NN/element here/RB/here is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the smallest/JJS/smallest element/NN/element here/NNP/here. so/RB/so /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at the/DT/the entire/JJ/entire array/NN/array /,/, you/PRP/you can/MD/can check/VB/check that/IN/that the/DT/the entire/JJ/entire array/NN/array is/VBZ/is now/RB/now sorted/NNP/sorted. so/RB/so /,/, this/DT/this is/VBZ/is also/RB/also an/DT/an example/NN/example of/IN/of divide/NN/divide and/CC/and conquer/NNP/conquer. the/DT/the divided/VBN/divided step/NN/step is/VBZ/is where/WRB/where we/PRP/we did/VBD/did work/NNP/work. in/IN/in the/DT/the divide/NN/divide step/NN/step /,/, which/WDT/which i/PRP/i have/VBP/have still/RB/still to/TO/to specify/VB/specify you/PRP/you somehow/VB/somehow divided/VBN/divided this/DT/this array/NN/array into/IN/into two/CD/two parts/NNS/parts left/VBN/left and/CC/and right/NNP/right. so/RB/so /,/, that/IN/that elements/NNS/elements in/IN/in the/DT/the left/NN/left are/VBP/are smaller/JJR/smaller than/IN/than the/DT/the elements/NNS/elements in/IN/in the/DT/the right/NNP/right. this/DT/this was/VBD/was the/DT/the divide/NN/divide step/NNP/step. now/RB/now /,/, it/PRP/it is/VBZ/is recursion/NN/recursion /:/( /:/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 06/CD/06 /CD/) /CD/) sweat/NNP/sweat. you/PRP/you just/RB/just recurse/VBP/recurse on/IN/on these/DT/these two/CD/two parts/NNS/parts and/CC/and recursion/NN/recursion does/VBZ/does it/PRP/it for/IN/for you/PRP/you and/CC/and you/PRP/you sort/NN/sort these/DT/these two/NNP/two. putting/NN/putting things/NNS/things together/RB/together is/VBZ/is trivial/NNP/trivial. you/PRP/you just/RB/just have/VBP/have to/TO/to do/VB/do no/DT/no work/NNP/work. both/DT/both of/IN/of them/PRP/them are/VBP/are sorted/VBN/sorted /,/, when/WRB/when you/PRP/you put/VBD/put them/PRP/them together/RB/together in/IN/in fact/NN/fact /,/, the/DT/the entire/JJ/entire array/NN/array is/VBZ/is sorted/NNP/sorted. the/DT/the only/JJ/only thing/NN/thing we/PRP/we need/VBP/need to/TO/to figure/VB/figure out/RP/out /,/, it/PRP/it how/WRB/how to/TO/to divide/VB/divide the/DT/the input/NNP/input. so/RB/so /,/, that/IN/that everything/NN/everything on/IN/on the/DT/the left/NN/left is/VBZ/is smaller/JJR/smaller than/IN/than everything/NN/everything on/IN/on the/DT/the right/NNP/right. well/RB/well /,/, some/DT/some of/IN/of you/PRP/you may/MD/may have/VB/have noticed/VBN/noticed that/IN/that /,/, this/DT/this is/VBZ/is an/DT/an algorithm/NN/algorithm that/IN/that you/PRP/you have/VBP/have seen/VBN/seen before/IN/before and/CC/and it/PRP/it is/VBZ/is called/VBN/called quick/JJ/quick sort/NNP/sort. again/RB/again /,/, let/VB/let me/PRP/me sort/VB/sort of/IN/of emphasize/NN/emphasize that/NNP/that. earlier/RBR/earlier on/IN/on you/PRP/you were/VBD/were told/VBN/told what/WP/what these/DT/these algorithms/NNS/algorithms are/NNP/are. you/PRP/you were/VBD/were given/VBN/given code/NN/code for/IN/for /CD/( /CD/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 54/CD/54 /CD/) /CD/) while/IN/while this/DT/this is/VBZ/is quick/JJ/quick sort/NN/sort /,/, that/IN/that this/DT/this sorts/NNS/sorts an/DT/an array/NNP/array. our/PRP$/our emphasis/NN/emphasis here/RB/here is/VBZ/is to/TO/to see/VB/see /,/, how/WRB/how do/VBP/do people/NNS/people come/VB/come up/RP/up with/IN/with these/DT/these algorithms/NNP/algorithms. how/WRB/how does/VBZ/does somebody/NN/somebody come/VB/come up/RP/up with/IN/with an/DT/an algorithm/NN/algorithm called/VBN/called quick/NN/quick sort/NNP/sort. well/RB/well /,/, this/DT/this is/VBZ/is how/WRB/how they/PRP/they come/VBP/come up/RP/up with/NNP/with. so/RB/so /,/, you/PRP/you start/VBP/start with/IN/with divide/JJ/divide and/CC/and conquer/NN/conquer at/IN/at the/DT/the back/NN/back of/IN/of your/PRP$/your mind/NNP/mind. and/CC/and you/PRP/you figure/VBP/figure out/RP/out /,/, how/WRB/how do/VBP/do you/PRP/you put/VB/put this/DT/this paradigm/NN/paradigm into/IN/into place/NNP/place. so/RB/so /,/, now/RB/now how/WRB/how do/VBP/do people/NNS/people /,/, how/WRB/how do/VBP/do we/PRP/we split/VB/split an/DT/an array/NN/array into/IN/into left/NN/left and/CC/and right/NNP/right. well/RB/well /,/, you/PRP/you pick/VBP/pick a/DT/a pivot/NN/pivot /,/, xome/NN/xome element/NN/element in/IN/in the/DT/the array/NN/array /,/, which/WDT/which you/PRP/you call/VBP/call the/DT/the pivot/NNP/pivot. left/VBD/left consists/NNS/consists of/IN/of every/DT/every element/NN/element /,/, which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the pivot/NNP/pivot. and/CC/and right/RB/right consists/VBZ/consists of/IN/of every/DT/every element/NN/element /,/, which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the pivot/NNP/pivot. so/RB/so /,/, the/DT/the smallest/JJS/smallest element/NN/element on/IN/on the/DT/the right/NN/right is/VBZ/is the/DT/the pivot/NNP/pivot. and/CC/and you/PRP/you know/VBP/know that/IN/that the/DT/the left/NN/left of/IN/of the/DT/the array/NN/array every/DT/every element/NN/element is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the pivot/NNP/pivot. so/RB/so /,/, that/IN/that does/VBZ/does it/NNP/it. let/VB/let me/PRP/me just/RB/just write/VBP/write this/DT/this down/NNP/down. so/RB/so /,/, that/IN/that we/PRP/we have/VBP/have quick/JJ/quick sort/NN/sort in/IN/in front/NN/front of/IN/of us/NNP/us. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 03/CD/03 /CD/) so/RB/so /,/, pick/NN/pick a/DT/a pivot/NNP/pivot. this/DT/this is/VBZ/is quick/JJ/quick sort/NNP/sort. pick/NN/pick a/DT/a pivot/NN/pivot divide/NN/divide into/IN/into two/CD/two parts/NNS/parts smaller/JJR/smaller than/IN/than the/DT/the pivot/NN/pivot elements/NNP/elements. let/NN/let us/PRP/us /,/, call/VBP/call this/DT/this p/NN/p pivot/NN/pivot p/NNP/p. and/CC/and elements/NNS/elements greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to p/NNP/p. these/DT/these are/VBP/are elements/NNS/elements less/RBR/less than/IN/than p/NN/p and/CC/and elements/NNS/elements greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to p/NNP/p. these/DT/these are/VBP/are the/DT/the two/CD/two parts/NNP/parts. recurse/NN/recurse and/CC/and put/VBD/put them/PRP/them together/NNP/together. that/IN/that is/VBZ/is the/DT/the last/JJ/last step/NNP/step. well/RB/well /,/, unlike/IN/unlike the/DT/the difference/NN/difference between/IN/between merge/NN/merge sort/NN/sort and/CC/and quick/JJ/quick sort/NN/sort is/VBZ/is essentially/RB/essentially this/NNP/this. in/IN/in quick/JJ/quick sort/NN/sort this/DT/this is/VBZ/is where/WRB/where you/PRP/you spend/VBP/spend most/JJS/most of/IN/of your/PRP$/your time/NNP/time. putting/NN/putting them/PRP/them together/RB/together is/VBZ/is easy/NNP/easy. in/IN/in merge/NN/merge sort/NN/sort dividing/VBG/dividing into/IN/into two/CD/two parts/NNS/parts is/VBZ/is easy/NNP/easy. putting/NN/putting them/PRP/them together/RB/together is/VBZ/is where/WRB/where you/PRP/you take/VBP/take time/NNP/time. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the this/DT/this is/VBZ/is this/DT/this is/VBZ/is quick/JJ/quick sort/NNP/sort. how/WRB/how much/JJ/much time/NN/time does/VBZ/does quick/JJ/quick sort/NN/sort take/NN/take ?/./? well/RB/well /,/, it/PRP/it depends/VBZ/depends on/IN/on which/WDT/which element/NN/element you/PRP/you pick/VBP/pick as/IN/as a/DT/a pivot/NNP/pivot. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, what/WDT/what really/RB/really happens/NNP/happens. so/RB/so /,/, supposing/VBG/supposing you/PRP/you pick/VB/pick the/DT/the i/PRP/i th/VBP/th element/NNP/element. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by i/PRP/i th/VBP/th element/JJ/element /,/, means/VBZ/means in/IN/in the/DT/the sorted/VBN/sorted order/NN/order it/PRP/it is/VBZ/is the/DT/the i/NN/i th/NN/th element/NNP/element. so/RB/so /,/, let/VB/let me/PRP/me make/VB/make a/DT/a definition/NN/definition here/RB/here /,/, which/WDT/which we/PRP/we will/MD/will use/VB/use later/JJ/later on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 53/CD/53 /CD/) the/DT/the rank/NN/rank of/IN/of an/DT/an element/NN/element is/VBZ/is it/PRP/it is/VBZ/is position/NN/position in/IN/in the/DT/the sorted/VBN/sorted order/NNP/order. remember/NN/remember recall/NN/recall that/WDT/that /,/, we/PRP/we are/VBP/are assuming/VBG/assuming that/IN/that each/DT/each element/NN/element in/IN/in the/DT/the array/NN/array is/VBZ/is distinct/NNP/distinct. so/RB/so /,/, each/DT/each element/NN/element has/VBZ/has a/DT/a distinct/JJ/distinct rank/NNP/rank. if/IN/if there/EX/there are/VBP/are i/PRP/i elements/NNS/elements smaller/JJR/smaller than/IN/than x/NN/x /,/, say/VB/say x/NN/x is/VBZ/is an/DT/an element/NN/element i/PRP/i elements/VBZ/elements are/VBP/are smaller/JJR/smaller than/IN/than x/NN/x the/DT/the rank/NN/rank is/VBZ/is i/PRP/i plus/RB/plus 1/CD/1. the/DT/the minimum/JJ/minimum element/NN/element has/VBZ/has a/DT/a rank/NN/rank 1/CD/1. and/CC/and the/DT/the maximum/NN/maximum element/NN/element has/VBZ/has a/DT/a rank/NN/rank n/NN/n /,/, which/WDT/which is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, the/DT/the rank/NN/rank of/IN/of an/DT/an element/NN/element is/VBZ/is it/PRP/it is/VBZ/is position/NN/position in/IN/in the/DT/the array/NNP/array. so/RB/so /,/, if/IN/if everything/NN/everything depends/NNS/depends on/IN/on the/DT/the rank/NN/rank of/IN/of the/DT/the pivot/NNP/pivot. so/RB/so /,/, if/IN/if the/DT/the rank/NN/rank of/IN/of the/DT/the pivot/NN/pivot is/VBZ/is i/NNP/i. then/RB/then /,/, the/DT/the time/NN/time taken/VBN/taken there/EX/there will/MD/will be/VB/be i/PRP/i minus/VBZ/minus 1/CD/1 on/IN/on 1/CD/1 side/NN/side and/CC/and n/NN/n minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1 on/IN/on the/DT/the other/JJ/other side/NN/side right/NNP/right. so/RB/so /,/, is/VBZ/is t/VBN/t of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 plus/NN/plus t/NN/t n/NN/n minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1 plus/NN/plus the/DT/the time/NN/time taken/VBN/taken to/TO/to partition/NN/partition the/DT/the array/NNP/array. what/WP/what was/VBD/was this/DT/this time/NN/time ?/./? how/WRB/how did/VBD/did we/PRP/we partition/NN/partition the/DT/the array/NN/array ?/./? well/RB/well /,/, we/PRP/we compared/VBD/compared each/DT/each element/NN/element to/TO/to the/DT/the pivot/NNP/pivot. put/VBD/put the/DT/the ones/NNS/ones on/IN/on the/DT/the left/NN/left on/IN/on the/DT/the /,/, put/VBD/put the/DT/the lesser/NN/lesser ones/NNS/ones on/IN/on the/DT/the left/NN/left and/CC/and the/DT/the larger/JJR/larger ones/NNS/ones on/IN/on the/DT/the right/NNP/right. so/RB/so /,/, we/PRP/we compared/VBD/compared every/DT/every element/NN/element to/TO/to the/DT/the pivot/NNP/pivot. so/RB/so /,/, number/NN/number of/IN/of comparisons/NNS/comparisons we/PRP/we made/VBD/made is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1. for/IN/for ease/NN/ease of/IN/of calculation/NN/calculation /,/, we/PRP/we will/MD/will just/RB/just say/VB/say this/DT/this is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n/NNP/n. it/PRP/it will/MD/will not/RB/not bother/VB/bother us/PRP/us much/NNP/much. what/WP/what is/VBZ/is the/DT/the constant/JJ/constant between/IN/between /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 54/CD/54 /CD/) /CD/) /./. so/RB/so /,/, if/IN/if the/DT/the rank/NN/rank is/VBZ/is i/PRP/i then/RB/then it/PRP/it is/VBZ/is utmost/VBN/utmost t/NN/t of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 plus/NN/plus t/NN/t n/NN/n minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1 plus/NN/plus n/NNP/n. this/DT/this is/VBZ/is the/DT/the time/NN/time taken/VBN/taken to/TO/to partition/NN/partition the/DT/the array/NN/array /,/, because/IN/because every/DT/every element/NN/element was/VBD/was compared/VBN/compared to/TO/to the/DT/the pivot/NN/pivot ones/NNS/ones exactly/RB/exactly once/NNP/once. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NNP/recurrence. clearly/RB/clearly sort/NN/sort of/IN/of it/PRP/it depends/VBZ/depends on/IN/on i/NNP/i. it/PRP/it depends/VBZ/depends on/IN/on what/WP/what i/PRP/i is/VBZ/is and/CC/and various/JJ/various values/NNS/values of/IN/of i/PRP/i it/PRP/it varies/VBZ/varies /,/, for/IN/for instance/NN/instance if/IN/if i/PRP/i picked/VBD/picked the/DT/the minimum/JJ/minimum element/NNP/element. if/IN/if i/PRP/i picked/VBD/picked the/DT/the minimum/JJ/minimum element/NN/element then/RB/then /,/, then/RB/then what/WP/what happens/NNP/happens. then/RB/then i/PRP/i was/VBD/was 1/CD/1 /,/, oh/JJ/oh sorry/NN/sorry this/DT/this should/MD/should be/VB/be minus/RB/minus 1/CD/1 /CD/( /CD/( refer/NN/refer time/NN/time /:/: 41/CD/41 /:/: 47/CD/47 /CD/) /CD/) n/NN/n minus/NN/minus i/PRP/i minus/VBZ/minus 1/CD/1 or/CC/or it/PRP/it should/MD/should be/VB/be n/VBN/n minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1. that/IN/that is/VBZ/is what/WP/what fits/NNS/fits in/IN/in here/RB/here /,/, n/VBP/n minus/CC/minus i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, if/IN/if i/PRP/i were/VBD/were 1/CD/1 then/RB/then there/RB/there is/VBZ/is nothing/NN/nothing on/IN/on the/DT/the left/NNP/left. and/CC/and there/EX/there are/VBP/are n/NN/n minus/NN/minus 1/CD/1 elements/NNS/elements on/IN/on your/PRP$/your right/NN/right hand/NN/hand side/NNP/side. there/EX/there is/VBZ/is something/NN/something wrong/JJ/wrong here/NNP/here. this/DT/this should/MD/should just/RB/just be/VB/be n/VBN/n minus/NN/minus i/NNP/i. there/EX/there is/VBZ/is no/DT/no 1/CD/1 here/NNP/here. this/DT/this is/VBZ/is exactly/RB/exactly n/VBN/n minus/NN/minus i/NNP/i. i/PRP/i have/VBP/have the/DT/the pivot/NNP/pivot. i/PRP/i have/VBP/have i/PRP/i minus/VBZ/minus 1/CD/1 here/NNP/here. and/CC/and i/PRP/i have/VBP/have n/VBN/n minus/NN/minus i/PRP/i elements/VBZ/elements on/IN/on this/DT/this side/NNP/side. the/DT/the pivot/NN/pivot sits/VBZ/sits at/IN/at the/DT/the center/NNP/center. so/RB/so /,/, the/DT/the right/NN/right hand/NN/hand side/NN/side had/VBD/had size/NN/size n/NN/n minus/NN/minus i/NNP/i. so/RB/so /,/, if/IN/if i/PRP/i has/VBZ/has chosen/VBN/chosen the/DT/the minimum/JJ/minimum element/NN/element /,/, then/RB/then i/PRP/i get/VBP/get t/RB/t of/IN/of n/NN/n to/TO/to be/VB/be t/VBN/t of/IN/of 0/-NONE-/0 /,/, which/WDT/which is/VBZ/is 0/-NONE-/0 plus/VBZ/plus t/NN/t of/IN/of n/NN/n minus/NN/minus 1/CD/1 plus/CC/plus n/NNP/n. and/CC/and if/IN/if i/PRP/i kept/VBD/kept picking/VBG/picking the/DT/the minimum/JJ/minimum element/NN/element as/IN/as the/DT/the pivot/NN/pivot what/WP/what is/VBZ/is this/DT/this time/NNP/time. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write this/DT/this again/NNP/again. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 14/CD/14 /CD/) so/RB/so /,/, t/NN/t n/NN/n looks/NNS/looks to/TO/to be/VB/be t/VBN/t of/IN/of n/NN/n minus/NN/minus 1/CD/1 plus/CC/plus n/NNP/n. let/NN/let us/PRP/us expand/VBP/expand this/DT/this further/NNP/further. it/PRP/it is/VBZ/is n/VBN/n minus/NN/minus 2/CD/2 plus/NN/plus n/NN/n minus/NN/minus 1/CD/1 plus/CC/plus n/NN/n so/IN/so on/IN/on and/CC/and so/RB/so on/NNP/on. well/RB/well /,/, it/PRP/it comes/VBZ/comes down/IN/down to/TO/to 1/CD/1 plus/NNS/plus 2/CD/2 plus/NNS/plus so/RB/so on/IN/on up/IN/up to/TO/to n/NNP/n. this/DT/this is/VBZ/is n/VBN/n times/NNS/times n/VBP/n plus/RB/plus 1/CD/1 by/IN/by 2/CD/2. this/DT/this is/VBZ/is order/NN/order n/NN/n square/NNP/square. so/RB/so /,/, if/IN/if the/DT/the pivot/NN/pivot turns/VBZ/turns out/RP/out to/TO/to be/VB/be the/DT/the minimum/JJ/minimum element/NN/element in/IN/in each/DT/each case/NN/case /,/, then/RB/then the/DT/the total/NN/total time/NN/time taken/VBN/taken is/VBZ/is order/NN/order n/NN/n square/NN/square for/IN/for quick/NN/quick sort/NNP/sort. and/CC/and you/PRP/you can/MD/can check/VB/check that/IN/that if/IN/if i/PRP/i start/VBP/start increasing/VBG/increasing now/NNP/now. let/NN/let us/PRP/us say/VBP/say /,/, the/DT/the pivot/NN/pivot was/VBD/was a/DT/a second/JJ/second element/NNP/element. there/RB/there is/VBZ/is a/DT/a time/NN/time decreases/NNP/decreases. it/PRP/it will/MD/will decrease/VB/decrease till/NN/till you/PRP/you reach/VBP/reach the/DT/the middle/NN/middle element/NNP/element. let/NN/let us/PRP/us see/VBP/see what/WP/what happens/NNS/happens /,/, if/IN/if i/PRP/i pick/VBP/pick the/DT/the roughly/RB/roughly the/DT/the middle/NN/middle element/NNP/element. then/RB/then /,/, t/NN/t of/IN/of n/NN/n roughly/RB/roughly /,/, i/PRP/i will/MD/will have/VB/have two/CD/two problems/NNS/problems of/IN/of equal/JJ/equal size/NNP/size. that/WDT/that is/VBZ/is 2/CD/2 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. this/DT/this does/VBZ/does not/RB/not change/NNP/change. because/IN/because /,/, every/DT/every element/NN/element i/PRP/i have/VBP/have to/TO/to compare/VB/compare with/IN/with the/DT/the pivot/NN/pivot anyway/NNP/anyway. this/DT/this recurrence/NN/recurrence i/PRP/i know/VBP/know what/WP/what then/RB/then solution/NN/solution is/NNP/is. this/DT/this looks/VBZ/looks like/IN/like order/NN/order n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, let/VB/let us/PRP/us sort/VB/sort of/IN/of write/JJ/write all/DT/all this/DT/this on/IN/on one/CD/one slide/NN/slide and/CC/and look/VB/look at/IN/at it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 47/CD/47 /CD/) i/PRP/i started/VBD/started out/RP/out with/IN/with saying/VBG/saying let/NN/let us/PRP/us say/VBP/say /,/, t/NN/t n/NN/n with/IN/with t/NN/t i/PRP/i plus/VBZ/plus t/JJ/t n/NN/n minus/NN/minus i/PRP/i plus/VBZ/plus n/NNP/n. now/RB/now /,/, if/IN/if i/PRP/i equals/VBZ/equals 1/CD/1 /,/, there/EX/there is/VBZ/is i/PRP/i minus/VBZ/minus 1/CD/1 here/NNP/here. if/IN/if i/PRP/i is/VBZ/is 1/CD/1 /,/, then/RB/then i/PRP/i get/VBP/get order/NN/order n/NN/n square/NNP/square. this/DT/this i/PRP/i is/VBZ/is roughly/RB/roughly n/VBN/n by/IN/by 2/CD/2. then/RB/then i/PRP/i get/VBP/get order/NN/order n/NN/n log/NN/log n/NNP/n. well/RB/well /,/, one/CD/one can/MD/can check/VB/check that/IN/that /,/, if/IN/if i/PRP/i plot/VBP/plot t/JJ/t n/NN/n versus/NN/versus i/PRP/i then/RB/then it/PRP/it initially/RB/initially falls/NNP/falls. if/IN/if we/PRP/we start/VBP/start with/IN/with n/NN/n square/NN/square it/PRP/it initially/RB/initially starts/VBZ/starts falling/VBG/falling /,/, till/IN/till i/PRP/i roughly/RB/roughly n/JJ/n by/IN/by 2/CD/2. and/CC/and then/RB/then /,/, again/RB/again it/PRP/it starts/VBZ/starts rising/NNP/rising. so/RB/so /,/, if/IN/if i/PRP/i pick/VBP/pick the/DT/the maximum/NN/maximum it/PRP/it is/VBZ/is very/RB/very similar/JJ/similar to/TO/to picking/NN/picking the/DT/the minimum/NNP/minimum. the/DT/the array/NN/array sizes/VBZ/sizes split/NN/split much/RB/much the/DT/the same/JJ/same way/NNP/way. and/CC/and it/PRP/it again/RB/again goes/VBZ/goes back/RB/back to/TO/to n/VB/n square/NNP/square. so/RB/so /,/, the/DT/the worst/JJS/worst case/NN/case time/NN/time is/VBZ/is n/VBN/n square/-NONE-/square. and/CC/and if/IN/if you/PRP/you manage/VBP/manage to/TO/to pick/VB/pick the/DT/the pivots/NNS/pivots correctly/RB/correctly /,/, i/PRP/i mean/VBP/mean if/IN/if you/PRP/you pick/VBP/pick the/DT/the middle/NN/middle element/NN/element at/IN/at each/DT/each stage/NNP/stage. then/RB/then the/DT/the time/NN/time taken/VBN/taken by/IN/by quick/JJ/quick sort/NN/sort is/VBZ/is n/VBN/n log/NN/log n/NNP/n. so/RB/so /,/, we/PRP/we are/VBP/are only/RB/only worried/VBN/worried about/IN/about the/DT/the worst/JJS/worst case/NN/case time/NNP/time. so/RB/so /,/, if/IN/if somebody/NN/somebody asks/NNS/asks you/PRP/you /,/, what/WP/what is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by quick/JJ/quick sort/NNP/sort. well/RB/well /,/, it/PRP/it is/VBZ/is n/VBN/n square/-NONE-/square. this/DT/this implementation/NN/implementation of/IN/of quick/JJ/quick sort/NN/sort /,/, takes/VBZ/takes order/NN/order n/NN/n square/NN/square time/NN/time /,/, because/IN/because that/DT/that is/VBZ/is the/DT/the worst/JJS/worst case/NN/case time/NNP/time. if/IN/if somehow/WRB/somehow /,/, we/PRP/we could/MD/could pick/VB/pick an/DT/an element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2 efficiently/NNP/efficiently. if/IN/if you/PRP/you can/MD/can pick/VB/pick an/DT/an element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2 efficiently/RB/efficiently /,/, what/WDT/what do/VBP/do you/PRP/you mean/VB/mean /,/, what/WDT/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by efficiently/RB/efficiently here/NNP/here. it/PRP/it means/VBZ/means the/DT/the recursion/NN/recursion should/MD/should not/RB/not change/VB/change much/NNP/much. so/RB/so /,/, if/IN/if i/PRP/i know/VBP/know i/PRP/i get/VBP/get n/RB/n log/JJ/log n/NN/n with/IN/with the/DT/the following/VBG/following recurrence/NN/recurrence t/NN/t n/NN/n is/VBZ/is 2/CD/2 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. in/IN/in fact/NN/fact /,/, i/PRP/i could/MD/could add/VB/add a/DT/a constant/JJ/constant here/NNP/here. and/CC/and it/PRP/it would/MD/would still/RB/still be/VB/be n/VBN/n log/NN/log n/NNP/n. this/DT/this will/MD/will still/RB/still give/VB/give me/PRP/me order/JJR/order n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, you/PRP/you can/MD/can check/VB/check this/NNP/this. this/DT/this constant/NN/constant will/MD/will just/RB/just come/VB/come out/RP/out of/IN/of the/DT/the calculation/NNP/calculation. if/IN/if i/PRP/i have/VBP/have c/JJ/c n/NN/n then/RB/then i/PRP/i get/VBP/get n/RB/n log/JJ/log n/NNP/n. now/RB/now /,/, if/IN/if i/PRP/i can/MD/can somehow/VB/somehow find/VB/find the/DT/the middle/NN/middle element/NN/element of/IN/of an/DT/an array/NN/array /,/, which/WDT/which means/VBZ/means an/DT/an element/NN/element of/IN/of rank/NN/rank roughly/RB/roughly n/JJ/n by/IN/by 2/CD/2. so/RB/so /,/, if/IN/if i/PRP/i can/MD/can find/VB/find an/DT/an element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2 in/IN/in constant/JJ/constant times/NNS/times n/VBP/n time/NNP/time. then/RB/then /,/, i/PRP/i can/MD/can implement/VB/implement quick/JJ/quick sort/NN/sort to/TO/to take/VB/take time/NN/time order/NN/order n/NN/n log/NN/log n/NNP/n. the/DT/the way/NN/way i/PRP/i do/VBP/do it/PRP/it is/VBZ/is i/PRP/i first/RB/first pick/VB/pick i/PRP/i spend/VBP/spend c/JJ/c n/NN/n time/NN/time pick/NN/pick this/DT/this middle/NN/middle element/NNP/element. the/DT/the element/NN/element of/IN/of rank/NN/rank roughly/RB/roughly n/JJ/n by/IN/by 2/CD/2. now/RB/now /,/, i/PRP/i do/VBP/do the/DT/the usual/NNP/usual. use/NN/use this/DT/this pivot/NN/pivot divide/NN/divide the/DT/the array/NN/array into/IN/into two/CD/two parts/NNP/parts. now/RB/now /,/, the/DT/the array/NN/array is/VBZ/is divided/VBN/divided into/IN/into two/CD/two roughly/RB/roughly equal/JJ/equal parts/NNP/parts. once/RB/once /,/, i/PRP/i divide/VBP/divide them/PRP/them into/IN/into equal/JJ/equal parts/NNP/parts. now/RB/now /,/, it/PRP/it is/VBZ/is the/DT/the usual/JJ/usual recursion/NN/recursion and/CC/and i/PRP/i am/VBP/am done/NN/done if/IN/if i/PRP/i take/VBP/take n/RP/n log/NN/log n/NNP/n. so/RB/so /,/, i/PRP/i can/MD/can implement/VB/implement quick/JJ/quick sort/NNP/sort. there/RB/there is/VBZ/is an/DT/an implementation/NN/implementation of/IN/of quick/JJ/quick sort/NNP/sort. there/RB/there will/MD/will be/VB/be an/DT/an implementation/NN/implementation of/IN/of quick/JJ/quick sort/NN/sort /,/, which/WDT/which takes/VBZ/takes n/NN/n log/NN/log n/NN/n time/NN/time /,/, provided/VBN/provided i/PRP/i can/MD/can find/VB/find this/DT/this element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2 in/IN/in linear/JJ/linear time/NNP/time. which/WDT/which is/VBZ/is what/WP/what we/PRP/we do/VBP/do next/JJ/next ?/./? before/IN/before we/PRP/we do/VBP/do that/IN/that let/VB/let me/PRP/me so/RB/so point/VBP/point this/DT/this fact/NN/fact out/IN/out /,/, that/IN/that in/IN/in the/DT/the recurrence/NN/recurrence /,/, it/PRP/it was/VBD/was desirable/JJ/desirable that/IN/that the/DT/the two/CD/two parts/NNS/parts were/VBD/were of/IN/of roughly/RB/roughly equal/JJ/equal size/NNP/size. if/IN/if they/PRP/they were/VBD/were not/RB/not of/IN/of equal/JJ/equal size/NN/size /,/, then/RB/then the/DT/the time/NN/time was/VBD/was proportionally/RB/proportionally it/PRP/it was/VBD/was higher/NNP/higher. so/RB/so /,/, often/RB/often in/IN/in these/DT/these divide/NN/divide and/CC/and conquer/NN/conquer kind/NN/kind of/IN/of situations/NNP/situations. we/PRP/we try/VBP/try and/CC/and see/VB/see /,/, if/IN/if we/PRP/we can/MD/can somehow/VB/somehow split/NN/split the/DT/the input/NN/input into/IN/into exactly/RB/exactly two/CD/two parts/NNS/parts in/IN/in two/CD/two halves/NNP/halves. so/RB/so /,/, once/RB/once we/PRP/we have/VBP/have halves/NNS/halves /,/, some/DT/some because/IN/because of/IN/of the/DT/the way/NN/way this/DT/this recurrence/NN/recurrence these/DT/these recurrences/NNS/recurrences work/VBP/work the/DT/the time/NN/time taken/VBN/taken is/VBZ/is usually/RB/usually smaller/NNP/smaller. so/RB/so /,/, our/PRP$/our job/NN/job next/IN/next is/VBZ/is to/TO/to figure/VB/figure out/RP/out /,/, how/WRB/how to/TO/to pick/VB/pick this/DT/this element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2 in/IN/in linear/JJ/linear time/NNP/time. so/RB/so /,/, let/VB/let me/PRP/me state/VB/state this/DT/this problem/NNP/problem. so/RB/so /,/, this/DT/this element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2 is/VBZ/is called/VBN/called the/DT/the median/NNP/median. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 28/CD/28 /CD/) so/RB/so /,/, the/DT/the median/JJ/median is/VBZ/is an/DT/an element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2. let/NN/let us/PRP/us say/VBP/say /,/, floor/NN/floor of/IN/of n/NN/n by/IN/by 2/CD/2. you/PRP/you could/MD/could take/VB/take the/DT/the ceiling/NN/ceiling of/IN/of n/NN/n by/IN/by 2/CD/2. it/PRP/it does/VBZ/does not/RB/not matter/NNP/matter. so/RB/so /,/, n/IN/n is/VBZ/is odd/NNP/odd. you/PRP/you get/VBP/get the/DT/the floor/NN/floor of/IN/of n/NN/n by/IN/by 2/CD/2 and/CC/and our/PRP$/our job/NNP/job. so/RB/so /,/, what/WDT/what we/PRP/we want/VBP/want to/TO/to do/VB/do is/VBZ/is this/NNP/this. the/DT/the algorithmic/JJ/algorithmic problem/NN/problem given/VBN/given an/DT/an array/NN/array find/NN/find the/DT/the median/NNP/median. how/WRB/how do/VBP/do you/PRP/you find/VB/find this/DT/this element/NN/element of/IN/of rank/NN/rank roughly/RB/roughly n/JJ/n by/IN/by 2/CD/2 ?/./? well/RB/well /,/, the/DT/the easy/JJ/easy way/NN/way to/TO/to do/VB/do it/NNP/it. is/VBZ/is sort/NN/sort the/DT/the array/NN/array and/CC/and pick/NN/pick the/DT/the middle/NN/middle element/NNP/element. that/IN/that takes/VBZ/takes time/NN/time n/NN/n log/NN/log n/NNP/n. the/DT/the time/NN/time for/IN/for that/DT/that is/VBZ/is n/VBN/n log/NN/log n/NNP/n. so/RB/so /,/, if/IN/if you/PRP/you for/IN/for instance/NN/instance use/NN/use merge/NN/merge sort/NNP/sort. that/IN/that is/VBZ/is not/RB/not good/JJ/good enough/NNP/enough. can/MD/can we/PRP/we do/VBP/do it/PRP/it faster/JJR/faster ?/./? the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. you/PRP/you can/MD/can in/IN/in fact/NN/fact /,/, do/VBP/do it/PRP/it find/VB/find median/JJ/median in/IN/in linear/JJ/linear time/NNP/time. and/CC/and this/DT/this will/MD/will be/VB/be the/DT/the first/JJ/first non/NN/non trivial/NN/trivial algorithm/NN/algorithm that/WDT/that you/PRP/you will/MD/will see/VB/see. it/PRP/it is/VBZ/is a/DT/a really/RB/really smart/NN/smart algorithm/NN/algorithm and/CC/and as/IN/as we/PRP/we present/VBP/present /,/, i/PRP/i hope/VBP/hope you/PRP/you appreciate/VBP/appreciate the/DT/the beauty/NN/beauty of/IN/of the/DT/the solution/NNP/solution. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder viswanathan/IN/viswanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture ?/./? 7/CD/7 divide/NN/divide and/CC/and conquer/NN/conquer ?/./? ii/NN/ii median/NN/median finding/NN/finding we/PRP/we had/VBD/had looked/VBN/looked at/IN/at algorithms/NNS/algorithms for/IN/for sorting/VBG/sorting /,/, especially/RB/especially quick/JJ/quick sort/NNP/sort. the/DT/the way/NN/way quick/NN/quick sort/NN/sort worked/VBD/worked was/VBD/was you/PRP/you picked/VBD/picked a/DT/a pivot/NN/pivot /,/, and/CC/and compared/VBN/compared each/DT/each element/NN/element in/IN/in the/DT/the array/NN/array with/IN/with the/DT/the pivot/NNP/pivot. and/CC/and split/NN/split the/DT/the array/NN/array into/IN/into two/CD/two parts/NNP/parts. those/DT/those elements/NNS/elements /,/, which/WDT/which were/VBD/were less/JJR/less than/IN/than the/DT/the pivot/NN/pivot and/CC/and elements/NNS/elements /,/, which/WDT/which were/VBD/were greater/JJR/greater than/IN/than the/DT/the pivot/NN/pivot /,/, and/CC/and then/RB/then we/PRP/we recursed/VBD/recursed down/RP/down these/DT/these two/CD/two parts/NNP/parts. and/CC/and you/PRP/you recursed/VBD/recursed on/IN/on these/DT/these two/CD/two parts/NNS/parts and/CC/and recursively/RB/recursively sorted/VBN/sorted them/NNP/them. and/CC/and this/DT/this then/RB/then gave/VBD/gave you/PRP/you the/DT/the sorted/JJ/sorted order/NN/order of/IN/of the/DT/the entire/JJ/entire array/NNP/array. the/DT/the time/NN/time taken/VBN/taken by/IN/by quick/JJ/quick sort/NN/sort /,/, crucially/RB/crucially depends/VBZ/depends on/IN/on the/DT/the position/NN/position of/IN/of the/DT/the pivot/NN/pivot on/IN/on the/DT/the array/NNP/array. we/PRP/we would/MD/would like/VB/like to/TO/to pick/VB/pick an/DT/an element/NN/element /,/, which/WDT/which is/VBZ/is the/DT/the middle/NN/middle of/IN/of the/DT/the array/NNP/array. it/PRP/it is/VBZ/is called/VBN/called the/DT/the median/NNP/median. so/RB/so /,/, if/IN/if we/PRP/we could/MD/could always/RB/always pick/VB/pick the/DT/the median/JJ/median fast/NNP/fast. then/RB/then perhaps/RB/perhaps we/PRP/we can/MD/can make/VB/make quick/JJ/quick sort/NN/sort work/NN/work in/IN/in n/NN/n log/NN/log n/NN/n time/NNP/time. and/CC/and that/IN/that is/VBZ/is our/PRP$/our goal/NNP/goal. that/IN/that is/VBZ/is the/DT/the next/JJ/next goal/NN/goal to/TO/to see/VB/see if/IN/if we/PRP/we can/MD/can pick/VB/pick we/PRP/we can/MD/can given/VB/given an/DT/an array/NN/array /,/, we/PRP/we can/MD/can find/VB/find the/DT/the median/JJ/median in/IN/in time/NN/time linear/NN/linear in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, let/VB/let me/PRP/me make/VB/make a/DT/a few/JJ/few definitions/NNS/definitions just/RB/just to/TO/to set/VB/set the/DT/the ball/NN/ball rolling/NNP/rolling. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 25/CD/25 /CD/) the/DT/the rank/NN/rank of/IN/of an/DT/an element/NN/element is/VBZ/is it/PRP/it is/VBZ/is position/NN/position in/IN/in the/DT/the sorted/VBN/sorted array/NNP/array. so/RB/so /,/, given/VBN/given an/DT/an array/NN/array and/CC/and an/DT/an element/NN/element to/TO/to find/VB/find the/DT/the rank/NN/rank of/IN/of this/DT/this element/NN/element sort/NN/sort the/DT/the array/NN/array and/CC/and the/DT/the position/NN/position of/IN/of this/DT/this element/NN/element in/IN/in the/DT/the array/NN/array /:/( /:/( refer/NN/refer time/NN/time /:/: 02/CD/02 /:/: 57/CD/57 /CD/) /CD/) /./. we/PRP/we will/MD/will assume/VB/assume for/IN/for simplicity/NN/simplicity that/WDT/that elements/VBZ/elements in/IN/in the/DT/the array/NN/array are/VBP/are distinct/NNP/distinct. every/DT/every element/NN/element is/VBZ/is distinct/NNP/distinct. all/DT/all algorithms/NNS/algorithms that/WDT/that we/PRP/we designed/VBD/designed will/MD/will also/RB/also work/VB/work when/WRB/when the/DT/the elements/NNS/elements are/VBP/are not/RB/not distinct/NNP/distinct. but/CC/but /,/, this/DT/this is/VBZ/is just/RB/just for/IN/for simplicity/NNP/simplicity. this/DT/this is/VBZ/is the/DT/the rank/NN/rank and/CC/and rank/NN/rank of/IN/of an/DT/an element/NN/element and/CC/and the/DT/the median/JJ/median is/VBZ/is an/DT/an element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2. that/WDT/that is/VBZ/is the/DT/the floor/NN/floor of/IN/of n/NN/n by/IN/by 2/CD/2 /,/, an/DT/an element/NN/element of/IN/of rank/NN/rank floor/NN/floor of/IN/of n/NN/n by/IN/by 2/CD/2. our/PRP$/our objective/JJ/objective is/VBZ/is to/TO/to find/VB/find the/DT/the median/JJ/median in/IN/in an/DT/an array/NNP/array. how/WRB/how fast/JJ/fast can/MD/can we/PRP/we do/VBP/do this/DT/this ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 52/CD/52 /CD/) so/RB/so /,/, the/DT/the problem/NN/problem is/VBZ/is this/NNP/this. the/DT/the input/NN/input is/VBZ/is an/DT/an array/NN/array a/DT/a /,/, the/DT/the output/NN/output the/DT/the median/NNP/median. now/RB/now /,/, clearly/RB/clearly this/DT/this can/MD/can be/VB/be done/VBN/done in/IN/in order/NN/order n/NN/n log/NN/log n/NN/n time/NN/time /,/, by/IN/by just/RB/just sorting/VBG/sorting the/DT/the array/NN/array and/CC/and picking/VBG/picking the/DT/the middle/NN/middle element/NNP/element. sort/NN/sort the/DT/the array/NN/array pick/NN/pick the/DT/the middle/NN/middle element/NN/element that/WDT/that gives/VBZ/gives you/PRP/you the/DT/the median/NNP/median. and/CC/and sorting/VBG/sorting takes/NNS/takes n/NN/n log/NN/log n/NN/n time/NNP/time. our/PRP$/our objective/NN/objective of/IN/of course/NN/course /,/, is/VBZ/is to/TO/to do/VB/do this/DT/this faster/NNP/faster. we/PRP/we want/VBP/want to/TO/to find/VB/find the/DT/the median/JJ/median faster/NNP/faster. how/WRB/how does/VBZ/does one/CD/one go/VB/go about/IN/about doing/VBG/doing this/DT/this ?/./? let/NN/let can/MD/can we/VB/we apply/RB/apply divide/VB/divide and/CC/and conquer/NN/conquer for/IN/for instance/NNP/instance. supposing/VBG/supposing /,/, we/PRP/we want/VBP/want to/TO/to apply/VB/apply divide/JJ/divide and/CC/and conquer/NNP/conquer. how/WRB/how do/VBP/do we/PRP/we like/IN/like to/TO/to divide/VB/divide the/DT/the array/NN/array ?/./? how/WRB/how do/VBP/do you/PRP/you divide/VB/divide the/DT/the array/NN/array ?/./? again/RB/again /,/, it/PRP/it seems/VBZ/seems sort/NN/sort of/IN/of to/TO/to think/VB/think about/IN/about this/DT/this and/CC/and you/PRP/you are/VBP/are up/RP/up against/IN/against the/DT/the wall/NNP/wall. so/RB/so /,/, supposing/VBG/supposing somehow/NN/somehow /,/, you/PRP/you can/MD/can find/VB/find a/DT/a let/NN/let us/PRP/us say/VBP/say /,/, not/RB/not the/DT/the exact/JJ/exact median/NNP/median. but/CC/but /,/, some/DT/some kind/NN/kind of/IN/of approximate/JJ/approximate median/NNP/median. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by an/DT/an approximate/JJ/approximate median/NN/median ?/./? let/NN/let us/PRP/us say/VBP/say an/DT/an element/NN/element whose/WP$/whose rank/NN/rank is/VBZ/is greater/JJR/greater than/IN/than n/NN/n by/IN/by 4/CD/4. and/CC/and rank/NN/rank of/IN/of x/NN/x and/CC/and it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than by/IN/by 4/CD/4. that/WDT/that is/VBZ/is greater/JJR/greater than/IN/than equal/JJ/equal to/TO/to n/VB/n by/IN/by 4/CD/4. less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 n/NN/n by/IN/by 4/CD/4 /,/, n/NN/n is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, these/DT/these elements/NNS/elements i/PRP/i will/MD/will call/VB/call approximate/JJ/approximate medians/NNP/medians. they/PRP/they are/VBP/are not/RB/not quite/RB/quite the/DT/the middle/NN/middle element/NNP/element. but/CC/but /,/, they/PRP/they roughly/RB/roughly sit/VB/sit around/IN/around the/DT/the middle/NN/middle element/NNP/element. supposing/NN/supposing /,/, you/PRP/you could/MD/could find/VB/find supposing/VBG/supposing somebody/NN/somebody gives/VBZ/gives you/PRP/you an/DT/an approximate/JJ/approximate median/NNP/median. then/RB/then /,/, what/WDT/what can/MD/can you/PRP/you do/NNP/do. i/PRP/i mean/VBP/mean can/MD/can does/VBZ/does this/DT/this help/NNP/help. well/RB/well /,/, it/PRP/it may/MD/may help/NNP/help. i/PRP/i mean/VBP/mean in/IN/in the/DT/the following/JJ/following sense/NN/sense that/IN/that /,/, so/RB/so here/RB/here is/VBZ/is my/PRP$/my array/NNP/array. i/PRP/i take/VBP/take the/DT/the array/NNP/array. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 24/CD/24 /CD/) this/DT/this is/VBZ/is my/PRP$/my array/NN/array a/NNP/a. x/NN/x is/VBZ/is an/DT/an approximate/JJ/approximate median/NNP/median. let/NN/let us/PRP/us /,/, not/RB/not lose/VB/lose focus/NN/focus of/IN/of our/PRP$/our goal/NN/goal /,/, which/WDT/which is/VBZ/is to/TO/to find/VB/find the/DT/the exact/JJ/exact median/NNP/median. x/NN/x is/VBZ/is an/DT/an approximate/JJ/approximate median/NN/median and/CC/and well/RB/well you/PRP/you just/RB/just come/VBP/come to/TO/to know/VB/know of/IN/of it/PRP/it somehow/NNP/somehow. what/WP/what you/PRP/you could/MD/could do/VB/do is/VBZ/is this/NNP/this. you/PRP/you split/VBD/split the/DT/the array/NN/array as/IN/as less/JJR/less than/IN/than x/NN/x and/CC/and greater/JJR/greater than/IN/than x/NNP/x. so/RB/so /,/, here/RB/here are/VBP/are elements/NNS/elements less/RBR/less than/IN/than x/NNP/x. here/RB/here /,/, are/VBP/are elements/NNS/elements greater/JJR/greater than/IN/than x/NNP/x. this/DT/this is/VBZ/is less/JJR/less than/IN/than x/NNP/x. this/DT/this is/VBZ/is greater/JJR/greater than/IN/than x/NNP/x. once/RB/once /,/, you/PRP/you do/VBP/do this/DT/this /,/, you/PRP/you know/VBP/know where/WRB/where the/DT/the median/JJ/median falls/NNP/falls. if/IN/if this/DT/this is/VBZ/is less/JJR/less than/IN/than n/NN/n by/IN/by 2/CD/2 /,/, if/IN/if the/DT/the rank/NN/rank of/IN/of x/NN/x is/VBZ/is less/JJR/less than/IN/than n/NN/n by/IN/by 2/CD/2 then/RB/then the/DT/the median/NN/median falls/VBZ/falls on/IN/on the/DT/the right/NNP/right. it/PRP/it sits/VBZ/sits in/IN/in this/DT/this portion/NN/portion of/IN/of the/DT/the array/NNP/array. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, if/IN/if the/DT/the rank/NN/rank of/IN/of x/NN/x is/VBZ/is greater/JJR/greater than/IN/than n/NN/n by/IN/by 2/CD/2 /,/, then/RB/then the/DT/the median/NN/median falls/VBZ/falls in/IN/in the/DT/the left/NN/left portion/NN/portion of/IN/of the/DT/the array/NNP/array. you/PRP/you know/VBP/know where/WRB/where /,/, it/PRP/it which/WDT/which portion/NN/portion of/IN/of the/DT/the array/NN/array it/PRP/it sits/NNP/sits. so/RB/so /,/, the/DT/the other/JJ/other good/JJ/good thing/NN/thing about/IN/about this/DT/this partitioning/NN/partitioning is/VBZ/is that/IN/that /,/, see/VBP/see both/DT/both these/DT/these parts/NNS/parts have/VBP/have size/NN/size at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4 /,/, the/DT/the elements/NNS/elements which/WDT/which are/VBP/are less/RBR/less than/IN/than x/NN/x /,/, as/IN/as size/NN/size at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4. the/DT/the elements/NNS/elements greater/JJR/greater than/IN/than x/NN/x has/VBZ/has size/NN/size at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, if/IN/if you/PRP/you can/MD/can get/VB/get rid/JJ/rid of/IN/of one/CD/one part/NN/part /,/, let/VB/let us/PRP/us say/VB/say the/DT/the smaller/JJR/smaller part/NNP/part. then/RB/then the/DT/the bigger/JJR/bigger part/NN/part is/VBZ/is of/IN/of size/NN/size utmost/NN/utmost 3/CD/3 n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, you/PRP/you have/VBP/have shrunk/NN/shrunk the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array by/IN/by a/DT/a constant/JJ/constant factor/NNP/factor. does/VBZ/does this/DT/this is/VBZ/is that/IN/that does/VBZ/does this/DT/this help/NN/help or/CC/or actually/RB/actually it/PRP/it does/NNP/does. supposing/VBG/supposing i/PRP/i can/MD/can find/VB/find this/DT/this approximate/NN/approximate median/NN/median in/IN/in let/NN/let us/PRP/us say/VBP/say /,/, linear/JJ/linear time/NN/time somehow/NN/somehow may/MD/may be/VB/be you/PRP/you do/VBP/do not/RB/not know/VB/know how/WRB/how that/IN/that is/VBZ/is done/NNP/done. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, how/WRB/how much/JJ/much time/NN/time for/IN/for finding/NN/finding the/DT/the exact/JJ/exact median/NN/median will/MD/will take/NNP/take. so/RB/so /,/, what/WDT/what we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do is/VBZ/is this/NNP/this. we/PRP/we have/VBP/have an/DT/an array/NN/array of/IN/of size/NN/size n/NN/n /,/, so/RB/so let/VB/let us/PRP/us say/VB/say the/DT/the time/NN/time is/VBZ/is t/VBN/t n/NNP/n. we/PRP/we find/VBP/find approximate/JJ/approximate median/NN/median /,/, which/WDT/which takes/VBZ/takes n/NN/n time/NNP/time. and/CC/and then/RB/then /,/, we/PRP/we would/MD/would like/VB/like to/TO/to recurse/VB/recurse on/IN/on a/DT/a small/JJ/small part/NNP/part. that/IN/that part/NN/part has/VBZ/has size/NN/size 3/CD/3 n/NN/n by/IN/by 4/CD/4. well/RB/well there/RB/there is/VBZ/is still/RB/still a/DT/a problem/NN/problem /,/, which/WDT/which we/PRP/we need/VBP/need to/TO/to address/NNP/address. but/CC/but /,/, supposing/VBG/supposing you/PRP/you can/MD/can do/VB/do this/NNP/this. then/RB/then /,/, you/PRP/you check/VBP/check that/IN/that this/DT/this recurrence/NN/recurrence gives/VBZ/gives you/PRP/you order/JJR/order n/NNP/n. you/PRP/you can/MD/can just/RB/just open/VB/open out/RP/out a/DT/a few/JJ/few terms/NNS/terms here/NNP/here. and/CC/and you/PRP/you can/MD/can prove/VB/prove that/IN/that this/DT/this in/IN/in fact/NN/fact is/VBZ/is order/NN/order n/NNP/n. there/EX/there is/VBZ/is a/DT/a problem/NNP/problem. the/DT/the problem/NN/problem is/VBZ/is this/NNP/this. i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the median/JJ/median of/IN/of the/DT/the big/JJ/big array/NNP/array. i/PRP/i somehow/VBP/somehow get/VB/get this/DT/this approximate/NN/approximate median/NN/median in/IN/in linear/NN/linear time/NNP/time. this/DT/this we/PRP/we still/RB/still do/VBP/do not/RB/not know/VB/know how/WRB/how this/DT/this is/VBZ/is done/NNP/done. i/PRP/i know/VBP/know that/IN/that the/DT/the median/JJ/median is/VBZ/is here/RB/here somewhere/NNP/somewhere. this/DT/this is/VBZ/is the/DT/the element/NN/element i/PRP/i want/VBP/want to/TO/to find/NNP/find. the/DT/the element/NN/element could/MD/could sit/VB/sit here/RB/here not/RB/not exactly/RB/exactly in/IN/in the/DT/the middle/NNP/middle. so/RB/so /,/, what/WDT/what i/PRP/i want/VBP/want to/TO/to find/VB/find in/IN/in this/DT/this array/NN/array is/VBZ/is not/RB/not exactly/RB/exactly the/DT/the median/NNP/median. the/DT/the element/NN/element that/IN/that i/PRP/i want/VBP/want to/TO/to find/VB/find depends/NNS/depends the/DT/the rank/NN/rank of/IN/of the/DT/the element/NN/element i/PRP/i want/VBP/want to/TO/to find/VB/find depends/NNS/depends on/IN/on the/DT/the left/NN/left hand/NN/hand side/NN/side of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, what/WDT/what i/PRP/i want/VBP/want to/TO/to find/VB/find let/NN/let us/PRP/us say/VBP/say that/IN/that the/DT/the numbers/NNP/numbers. so/RB/so /,/, let/VB/let us/PRP/us call/MD/call these/VB/these two/CD/two things/NNS/things let/VBP/let us/PRP/us say/VBP/say /,/, a/DT/a left/NN/left and/CC/and a/DT/a right/NNP/right. let/NN/let us/PRP/us /,/, assume/VBP/assume that/IN/that the/DT/the size/NN/size of/IN/of a/DT/a left/NN/left is/VBZ/is less/JJR/less than/IN/than n/NN/n by/IN/by 2/CD/2 /,/, floor/NN/floor of/IN/of n/NN/n by/IN/by 2/CD/2. we/PRP/we will/MD/will assume/VB/assume this/DT/this without/IN/without loss/NN/loss of/IN/of generality/NNP/generality. now/RB/now /,/, what/WDT/what i/PRP/i want/VBP/want is/VBZ/is the/DT/the median/JJ/median of/IN/of the/DT/the entire/JJ/entire array/NNP/array. what/WP/what is/VBZ/is it/PRP/it is/VBZ/is rank/NN/rank in/IN/in a/DT/a r/NNP/r. so/RB/so /,/, it/PRP/it is/VBZ/is the/DT/the element/NN/element that/IN/that i/PRP/i want/NNP/want. what/WP/what is/VBZ/is the/DT/the rank/NN/rank in/IN/in a/DT/a r/NNP/r. supposing/NN/supposing that/WDT/that rank/NN/rank is/VBZ/is r/NNP/r. what/WP/what i/PRP/i want/VBP/want is/VBZ/is r/NN/r plus/RB/plus 1/CD/1 plus/NNS/plus size/VBP/size of/IN/of a/DT/a l/NN/l should/MD/should be/VB/be equal/JJ/equal to/TO/to n/VB/n by/IN/by 2/CD/2. in/IN/in other/JJ/other words/NNS/words /,/, i/PRP/i want/VBP/want r/JJ/r to/TO/to be/VB/be n/VBN/n by/IN/by 2/CD/2 minus/NN/minus size/NN/size of/IN/of a/DT/a l/NN/l minus/NN/minus 1/CD/1. so/RB/so /,/, r/NN/r is/VBZ/is the/DT/the rank/NN/rank of/IN/of the/DT/the median/JJ/median of/IN/of a/DT/a in/IN/in a/DT/a r/NNP/r. the/DT/the small/JJ/small r/NN/r is/VBZ/is the/DT/the rank/NN/rank of/IN/of the/DT/the median/JJ/median of/IN/of a/DT/a in/IN/in this/DT/this array/NN/array a/DT/a r/NNP/r. let/NN/let me/PRP/me /,/, draw/VBP/draw a/DT/a picture/NN/picture and/CC/and sort/NN/sort of/IN/of explain/NN/explain this/DT/this again/NNP/again. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 32/CD/32 /CD/) this/DT/this is/VBZ/is a/NNP/a. /:/( /:/( refer/NN/refer time/NN/time /:/: 13/CD/13 /:/: 34/CD/34 /CD/) /CD/) this/DT/this is/VBZ/is sorted/VBN/sorted here/RB/here is/VBZ/is my/PRP$/my middle/NN/middle element/NNP/element. this/DT/this is/VBZ/is n/VBN/n by/IN/by 2/CD/2. now/RB/now /,/, my/PRP$/my element/NN/element x/NN/x sits/NNS/sits somewhere/RB/somewhere here/NNP/here. this/DT/this is/VBZ/is this/DT/this is/VBZ/is element/NN/element x/NN/x /,/, which/WDT/which is/VBZ/is approximate/VBP/approximate median/NNP/median. and/CC/and this/DT/this portion/NN/portion is/VBZ/is a/DT/a l/NNP/l. this/DT/this portion/NN/portion is/VBZ/is a/DT/a r/NNP/r. when/WRB/when the/DT/the size/NN/size is/VBZ/is a/DT/a l/NN/l this/DT/this portion/NN/portion is/VBZ/is a/DT/a r/NNP/r. now/RB/now /,/, the/DT/the rank/NN/rank of/IN/of the/DT/the median/JJ/median is/VBZ/is just/RB/just the/DT/the rank/NN/rank /,/, the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in this/DT/this portion/NNP/portion. what/WP/what is/VBZ/is that/IN/that /,/, n/VBP/n by/IN/by 2/CD/2 minus/NN/minus a/DT/a l/NN/l plus/CC/plus 1/CD/1. so/RB/so /,/, it/PRP/it is/VBZ/is nothing/VBG/nothing but/CC/but n/NN/n by/IN/by 2/CD/2 minus/NN/minus size/NN/size of/IN/of a/DT/a l/NN/l minus/NN/minus 1/CD/1. so/RB/so /,/, the/DT/the rank/NN/rank of/IN/of this/DT/this element/NN/element /,/, which/WDT/which is/VBZ/is the/DT/the median/JJ/median /,/, this/DT/this is/VBZ/is the/DT/the median/JJ/median that/IN/that we/PRP/we want/VBP/want to/TO/to find/NNP/find. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the median/JJ/median a/NNP/a. the/DT/the rank/NN/rank of/IN/of this/DT/this element/NN/element in/IN/in a/DT/a r/NN/r is/VBZ/is this/NNP/this. so/RB/so /,/, the/DT/the problem/NN/problem when/WRB/when we/PRP/we recurse/VBP/recurse we/PRP/we do/VBP/do not/RB/not really/RB/really want/VBP/want the/DT/the median/JJ/median in/IN/in a/NNP/a. we/PRP/we are/VBP/are not/RB/not looking/VBG/looking for/IN/for the/DT/the median/NNP/median. we/PRP/we are/VBP/are looking/VBG/looking for/IN/for an/DT/an element/NN/element of/IN/of rank/NN/rank this/NNP/this. we/PRP/we are/VBP/are looking/VBG/looking for/IN/for an/DT/an element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 2/CD/2 minus/NN/minus a/DT/a l/NN/l minus/NN/minus 1/CD/1. and/CC/and this/DT/this need/NN/need not/RB/not be/VB/be the/DT/the middle/NN/middle element/NN/element in/IN/in a/DT/a l/NNP/l. this/DT/this is/VBZ/is the/DT/the first/JJ/first problem/NNP/problem. so/RB/so /,/, when/WRB/when we/PRP/we recurse/VBP/recurse /,/, we/PRP/we do/VBP/do not/RB/not really/RB/really want/VBP/want the/DT/the i/PRP/i mean/VBP/mean it/PRP/it is/VBZ/is not/RB/not just/RB/just the/DT/the median/NNP/median. but/CC/but /,/, we/PRP/we want/VBP/want an/DT/an element/NN/element of/IN/of some/DT/some particular/JJ/particular /NN/( /:/( refer/NN/refer time/NN/time /:/: 13/CD/13 /:/: 15/CD/15 /CD/) /CD/) /./. well/RB/well /,/, why/WRB/why not/RB/not look/VB/look for/IN/for a/DT/a procedure/NN/procedure to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of any/DT/any rank/NNP/rank. so/RB/so /,/, pay/NN/pay careful/JJ/careful attention/NN/attention here/NNP/here. this/DT/this is/VBZ/is a/DT/a very/RB/very sort/NN/sort of/IN/of important/JJ/important design/NN/design principle/NNP/principle. we/PRP/we started/VBD/started off/RP/off with/IN/with trying/VBG/trying to/TO/to find/VB/find the/DT/the median/NNP/median. we/PRP/we tried/VBD/tried to/TO/to find/VB/find the/DT/the recursive/JJ/recursive procedure/NNP/procedure. along/IN/along the/DT/the way/NN/way we/PRP/we have/VBP/have encountered/VBN/encountered a/DT/a problem/NN/problem /,/, where/WRB/where we/PRP/we actually/RB/actually want/VBP/want to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of some/DT/some other/JJ/other rank/NNP/rank. not/RB/not just/RB/just rank/VB/rank n/JJ/n by/IN/by 2/CD/2 /,/, but/CC/but some/DT/some other/JJ/other rank/NNP/rank. so/IN/so /,/, this/DT/this seems/VBZ/seems to/TO/to be/VB/be a/DT/a more/RBR/more general/JJ/general problem/NNP/problem. finding/NN/finding the/DT/the median/JJ/median a/DT/a special/JJ/special case/NN/case of/IN/of this/DT/this problem/NNP/problem. sometimes/RB/sometimes /,/, it/PRP/it is/VBZ/is easier/JJR/easier to/TO/to solve/VB/solve a/DT/a more/RBR/more general/JJ/general problem/NN/problem /,/, than/IN/than a/DT/a specific/JJ/specific problem/NNP/problem. and/CC/and in/IN/in this/DT/this case/NN/case /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we will/MD/will do/VB/do. so/RB/so /,/, the/DT/the problem/NN/problem we/PRP/we would/MD/would like/VB/like to/TO/to tackle/VB/tackle is/VBZ/is not/RB/not just/RB/just finding/VBG/finding the/DT/the median/NNP/median. it/PRP/it is/VBZ/is finding/VBG/finding the/DT/the element/NN/element of/IN/of any/DT/any rank/NNP/rank. so/RB/so /,/, the/DT/the input/NN/input let/VBD/let me/PRP/me write/RB/write this/DT/this problem/NN/problem now/NNP/now. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 17/CD/17 /CD/) input/NN/input is/VBZ/is array/NN/array a/DT/a and/CC/and r/NNP/r. the/DT/the output/NN/output is/VBZ/is an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in a/NNP/a. now/RB/now /,/, when/WRB/when r/NN/r is/VBZ/is n/VBN/n by/IN/by 2/CD/2 we/PRP/we get/VBP/get the/DT/the median/NNP/median. this/DT/this is/VBZ/is a/DT/a more/RBR/more general/JJ/general problem/NN/problem /,/, than/IN/than the/DT/the one/CD/one we/PRP/we started/VBD/started out/RP/out with/NNP/with. and/CC/and this/DT/this is/VBZ/is what/WP/what /,/, now/RB/now we/PRP/we would/MD/would like/VB/like to/TO/to solve/NNP/solve. the/DT/the reason/NN/reason this/DT/this problem/NN/problem came/VBD/came up/RP/up is/VBZ/is that/IN/that during/IN/during the/DT/the recursion/NN/recursion /,/, i/PRP/i mean/VBP/mean at/IN/at least/JJS/least the/DT/the recursion/NN/recursion that/IN/that we/PRP/we tried/VBD/tried we/PRP/we started/VBD/started out/RP/out with/IN/with the/DT/the median/NNP/median. but/CC/but /,/, when/WRB/when we/PRP/we try/VBP/try and/CC/and get/VB/get the/DT/the recursion/NN/recursion going/VBG/going the/DT/the problem/NN/problem we/PRP/we end/VBP/end up/RP/up with/IN/with is/VBZ/is this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem we/PRP/we will/MD/will try/VB/try and/CC/and solve/NNP/solve. now/RB/now /,/, you/PRP/you see/VBP/see that/IN/that there/EX/there is/VBZ/is no/DT/no problem/NN/problem with/IN/with the/DT/the recursion/NN/recursion at/IN/at least/NNP/least. so/RB/so /,/, if/IN/if i/PRP/i solve/VBP/solve /,/, if/IN/if i/PRP/i find/VBP/find an/DT/an array/NN/array a/DT/a /,/, i/PRP/i start/VBP/start with/IN/with an/DT/an array/NN/array a/NNP/a. supposing/NN/supposing /,/, this/DT/this is/VBZ/is still/RB/still a/DT/a step/NN/step which/WDT/which is/VBZ/is left/VBN/left undone/-NONE-/undone. i/PRP/i get/VBP/get x/RB/x /,/, which/WDT/which is/VBZ/is an/DT/an approx/NN/approx median/NNP/median. i/PRP/i split/VBP/split the/DT/the array/NN/array into/IN/into two/CD/two parts/NNS/parts a/DT/a l/NN/l and/CC/and a/DT/a r/NN/r and/CC/and x/NNP/x. i/PRP/i want/VBP/want to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of rank/NN/rank r/NNP/r. if/IN/if r/NN/r is/VBZ/is less/JJR/less than/IN/than the/DT/the size/NN/size of/IN/of a/DT/a l/NN/l /,/, i/PRP/i recurse/VBP/recurse on/IN/on a/DT/a l/NNP/l. if/IN/if r/NN/r is/VBZ/is greater/JJR/greater than/IN/than size/NN/size of/IN/of a/DT/a l/NN/l plus/CC/plus x/NN/x /,/, i/PRP/i recurse/VBP/recurse on/IN/on a/DT/a r/NNP/r. that/WDT/that is/VBZ/is it/NNP/it. that/IN/that is/VBZ/is the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, as/IN/as long/RB/long as/IN/as i/PRP/i can/MD/can find/VB/find a/DT/a approximate/NN/approximate median/NN/median /,/, i/PRP/i can/MD/can find/VB/find the/DT/the element/NN/element of/IN/of any/DT/any rank/NN/rank /,/, by/IN/by this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer scheme/NNP/scheme. you/PRP/you can/MD/can write/VB/write down/RP/down the/DT/the recurrence/NN/recurrence relation/NNP/relation. and/CC/and see/VB/see that/IN/that /,/, if/IN/if we/PRP/we can/MD/can find/VB/find this/DT/this approximate/NN/approximate median/NN/median in/IN/in linear/NN/linear time/NNP/time. then/RB/then /,/, you/PRP/you can/MD/can find/VB/find the/DT/the an/DT/an element/NN/element of/IN/of any/DT/any rank/NN/rank till/IN/till linear/JJ/linear time/NNP/time. so/RB/so /,/, how/WRB/how will/MD/will you/PRP/you find/VB/find the/DT/the approximate/NN/approximate medium/NNP/medium. this/DT/this is/VBZ/is what/WP/what /,/, this/DT/this is/VBZ/is seems/VBZ/seems to/TO/to be/VB/be as/RB/as difficult/JJ/difficult as/IN/as finding/NN/finding the/DT/the exact/JJ/exact median/NN/median of/IN/of any/DT/any rank/NNP/rank. so/RB/so /,/, it/PRP/it is/VBZ/is and/CC/and the/DT/the solution/NN/solution that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to present/NNP/present. now/RB/now /,/, is/VBZ/is really/RB/really smart/NNP/smart. so/RB/so /,/, the/DT/the way/NN/way you/PRP/you find/VBP/find the/DT/the approximate/NN/approximate median/NN/median is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 49/CD/49 /CD/) first/JJ/first take/NN/take the/DT/the array/NN/array a/NNP/a. so/RB/so /,/, unfortunately/RB/unfortunately i/PRP/i can/MD/can not/RB/not tell/VB/tell you/PRP/you exactly/RB/exactly how/WRB/how people/NNS/people came/VBD/came up/RP/up with/IN/with this/NNP/this. i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to present/VB/present the/DT/the solution/NN/solution to/TO/to you/NNP/you. sometimes/RB/sometimes /,/, we/PRP/we just/RB/just have/VBP/have to/TO/to be/VB/be really/RB/really clever/JJR/clever and/CC/and come/VB/come up/RP/up the/DT/the solution/NNP/solution. there/RB/there is/VBZ/is no/DT/no real/JJ/real recipe/NN/recipe for/IN/for finding/NN/finding algorithms/NNS/algorithms all/DT/all the/DT/the time/NNP/time. there/RB/there are/VBP/are the/DT/the few/JJ/few general/JJ/general recipes/NNS/recipes that/WDT/that one/CD/one follows/VBZ/follows /,/, but/CC/but often/RB/often you/PRP/you know/VBP/know these/DT/these things/NNS/things are/VBP/are so/RB/so problem/NN/problem dependent/NNP/dependent. that/IN/that you/PRP/you just/RB/just have/VBP/have to/TO/to think/VB/think about/IN/about it/PRP/it think/VBP/think about/IN/about it/PRP/it and/CC/and at/IN/at some/DT/some point/NN/point /,/, you/PRP/you know/VBP/know some/DT/some light/NN/light bulb/NN/bulb goes/VBZ/goes off/RP/off somewhere/NNP/somewhere. and/CC/and you/PRP/you know/VBP/know you/PRP/you come/VBP/come up/RP/up the/DT/the algorithm/NN/algorithm that/IN/that works/NNP/works. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the algorithm/NN/algorithm that/IN/that works/NNP/works. so/RB/so /,/, take/VB/take the/DT/the array/NN/array a/NNP/a. split/NN/split up/IN/up the/DT/the elements/NNS/elements in/IN/in the/DT/the following/JJ/following form/NNP/form. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 32/CD/32 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a /,/, i/PRP/i split/VBP/split the/DT/the elements/NNS/elements into/IN/into groups/NNS/groups of/IN/of 5/CD/5. so/RB/so /,/, these/DT/these are/VBP/are 5/CD/5 elements/NNP/elements. these/DT/these are/VBP/are the/DT/the first/JJ/first 5/CD/5 elements/NNS/elements /,/, the/DT/the next/JJ/next 5/CD/5 elements/NNS/elements and/CC/and so/RB/so on/NNP/on. and/CC/and i/PRP/i have/VBP/have n/VBN/n by/IN/by 5/CD/5 groups/NNP/groups. i/PRP/i have/VBP/have n/VBN/n by/IN/by 5/CD/5 groups/NNS/groups in/IN/in a/DT/a and/CC/and each/DT/each of/IN/of them/PRP/them has/VBZ/has 5/CD/5 elements/NNP/elements. now/RB/now /,/, find/VBP/find the/DT/the median/JJ/median of/IN/of these/DT/these 5/CD/5 elements/NNP/elements. this/DT/this will/MD/will give/VB/give me/PRP/me some/DT/some median/JJ/median y/NN/y 1/CD/1. this/DT/this will/MD/will be/VB/be some/DT/some median/JJ/median y/NN/y 2/CD/2. and/CC/and the/DT/the last/JJ/last one/CD/one will/MD/will give/VB/give me/PRP/me some/DT/some median/JJ/median y/NN/y n/NN/n by/IN/by 5/CD/5 these/DT/these are/VBP/are medians/NNS/medians of/IN/of the/DT/the groups/NNP/groups. there/RB/there are/VBP/are n/VBN/n by/IN/by groups/NNP/groups. each/DT/each of/IN/of each/DT/each consisting/VBG/consisting of/IN/of 5/CD/5 elements/NNS/elements and/CC/and this/DT/this is/VBZ/is the/DT/the median/JJ/median of/IN/of these/DT/these groups/NNP/groups. now/RB/now /,/, the/DT/the approximate/NN/approximate median/NN/median /,/, which/WDT/which we/PRP/we will/MD/will pull/VB/pull out/RP/out is/VBZ/is the/DT/the exact/JJ/exact median/NN/median /,/, of/IN/of these/DT/these n/NN/n by/IN/by 5/CD/5 elements/NNP/elements. approximate/NN/approximate median/NN/median that/WDT/that will/MD/will output/VB/output exact/JJ/exact median/NN/median of/IN/of these/DT/these n/NN/n by/IN/by elements/NNP/elements. so/RB/so /,/, let/VB/let me/PRP/me repeat/VB/repeat this/DT/this again/NNP/again. you/PRP/you split/VBD/split them/PRP/them into/IN/into groups/NNS/groups of/IN/of five/NNP/five. there/EX/there are/VBP/are n/NN/n by/IN/by 5/CD/5 groups/NNP/groups. for/IN/for each/DT/each group/NN/group you/PRP/you find/VBP/find the/DT/the median/JJ/median y/NN/y 1/CD/1 /,/, y/JJ/y 2/CD/2 up/IN/up to/TO/to y/NN/y n/NN/n by/IN/by 5/CD/5. each/DT/each group/NN/group /,/, you/PRP/you find/VBP/find the/DT/the median/NNP/median. now/RB/now /,/, you/PRP/you find/VBP/find the/DT/the exact/JJ/exact median/NN/median of/IN/of these/DT/these n/NN/n by/IN/by 5/CD/5 elements/NNP/elements. and/CC/and this/DT/this is/VBZ/is an/DT/an approximate/JJ/approximate median/NNP/median. there/RB/there are/VBP/are number/NN/number of/IN/of questions/NNP/questions. why/WRB/why should/MD/should this/DT/this be/VB/be an/DT/an approximate/JJ/approximate median/NN/median ?/./? that/IN/that is/VBZ/is the/DT/the first/JJ/first question/NNP/question. second/NN/second question/NN/question /,/, we/PRP/we started/VBD/started off/RP/off trying/VBG/trying to/TO/to find/VB/find the/DT/the exact/JJ/exact median/NNP/median. we/PRP/we ended/VBD/ended with/IN/with trying/VBG/trying to/TO/to find/VB/find the/DT/the approximate/NN/approximate median/NNP/median. and/CC/and we/PRP/we are/VBP/are again/RB/again finding/VBG/finding the/DT/the exact/JJ/exact median/NNP/median. to/TO/to find/VB/find the/DT/the approximate/NN/approximate median/NN/median /,/, we/PRP/we find/VBP/find these/DT/these y/NN/y 1/CD/1 through/IN/through y/JJ/y n/NN/n by/IN/by 5/CD/5. and/CC/and again/RB/again we/PRP/we are/VBP/are finding/VBG/finding the/DT/the exact/JJ/exact median/NNP/median. what/WP/what is/VBZ/is going/VBG/going on/NNP/on. well/RB/well /,/, the/DT/the second/JJ/second thing/NN/thing is/VBZ/is not/RB/not so/RB/so serious/NNP/serious. in/IN/in the/DT/the sense/NN/sense /,/, that/IN/that initially/RB/initially we/PRP/we started/VBD/started out/RP/out trying/VBG/trying to/TO/to find/VB/find the/DT/the median/JJ/median of/IN/of n/NN/n elements/NNP/elements. we/PRP/we are/VBP/are now/RB/now finding/VBG/finding the/DT/the exact/JJ/exact of/IN/of median/JJ/median on/IN/on n/NN/n by/IN/by 5/CD/5 elements/NNP/elements. so/RB/so /,/, the/DT/the size/NN/size has/VBZ/has reduced/NNP/reduced. and/CC/and we/PRP/we can/MD/can apply/VB/apply the/DT/the /,/, we/PRP/we can/MD/can recurse/VB/recurse on/IN/on this/DT/this smaller/JJR/smaller size/NNP/size. remember/NN/remember i/PRP/i said/VBD/said /,/, we/PRP/we can/MD/can find/VB/find solve/VB/solve the/DT/the problem/NN/problem for/IN/for a/DT/a smaller/JJR/smaller size/NNP/size. you/PRP/you know/VBP/know /,/, you/PRP/you can/MD/can put/VB/put the/DT/the solution/NN/solution back/RB/back up/NNP/up. so/RB/so /,/, the/DT/the exact/JJ/exact median/NN/median that/WDT/that we/PRP/we want/VBP/want to/TO/to find/VB/find among/IN/among these/DT/these n/JJ/n by/IN/by 5/CD/5 elements/NNP/elements. we/PRP/we just/RB/just do/VBP/do it/PRP/it by/IN/by recursion/NNP/recursion. we/PRP/we just/RB/just recurse/VBP/recurse and/CC/and find/VB/find the/DT/the exact/JJ/exact median/NN/median here/NNP/here. that/IN/that gives/VBZ/gives you/PRP/you what/WP/what we/PRP/we want/NNP/want. we/PRP/we said/VBD/said /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of any/DT/any rank/NNP/rank. this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to do/NNP/do. if/IN/if somehow/WRB/somehow /,/, we/PRP/we can/MD/can find/VB/find the/DT/the approximate/NN/approximate median/NN/median we/PRP/we have/VBP/have done/NNP/done. to/TO/to find/VB/find the/DT/the approximate/NN/approximate median/NN/median /,/, we/PRP/we have/VBP/have to/TO/to solve/VB/solve an/DT/an exact/JJ/exact median/NN/median problem/NN/problem on/IN/on an/DT/an input/NN/input of/IN/of smaller/JJR/smaller size/NNP/size. this/DT/this can/MD/can also/RB/also be/VB/be done/VBN/done by/IN/by recursion/NNP/recursion. i/PRP/i have/VBP/have to/TO/to still/RB/still convince/VB/convince you/PRP/you /,/, that/DT/that the/DT/the exact/JJ/exact median/NN/median of/IN/of these/DT/these n/NN/n by/IN/by 5/CD/5 elements/NNS/elements will/MD/will be/VB/be an/DT/an approximate/JJ/approximate median/NNP/median. let/NN/let us/PRP/us see/VBP/see why/WRB/why this/DT/this is/NNP/is. to/TO/to see/VB/see this/DT/this /,/, let/VB/let me/PRP/me arrange/VB/arrange these/DT/these 5/CD/5 elements/NNS/elements in/IN/in each/DT/each group/NN/group in/IN/in descending/NN/descending order/NNP/order. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 49/CD/49 /CD/) so/RB/so /,/, smallest/JJS/smallest element/NN/element will/MD/will be/VB/be at/IN/at the/DT/the bottom/NN/bottom say/VBP/say a/DT/a 1/CD/1 1/CD/1 /,/, then/RB/then the/DT/the next/JJ/next element/NN/element a/DT/a 1/CD/1 2/CD/2. then/RB/then /,/, a/DT/a 1/CD/1 3/CD/3 /,/, a/DT/a 1/CD/1 4/CD/4 /,/, a/DT/a 1/CD/1 5/CD/5. so/RB/so /,/, all/DT/all of/IN/of these/DT/these /,/, i/PRP/i will/MD/will all/VB/all of/IN/of these/DT/these small/JJ/small groups/NNS/groups /,/, let/VB/let me/PRP/me first/RB/first write/JJ/write them/PRP/them down/IN/down in/IN/in increasing/VBG/increasing order/NN/order upwards/NNS/upwards or/CC/or decreasing/VBG/decreasing order/NN/order downwards/NNP/downwards. the/DT/the next/JJ/next thing/NN/thing i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do is/VBZ/is look/VB/look at/IN/at these/DT/these middle/JJ/middle elements/NNS/elements /,/, a/DT/a you/PRP/you know/VBP/know the/DT/the medians/NNS/medians of/IN/of these/DT/these groups/NNP/groups. and/CC/and i/PRP/i will/MD/will write/VB/write them/PRP/them in/IN/in sorted/JJ/sorted order/NN/order towards/NNS/towards the/DT/the right/NNP/right. so/RB/so /,/, a/DT/a 1/CD/1 3/CD/3 will/MD/will be/VB/be the/DT/the smallest/JJS/smallest element/NN/element among/IN/among these/DT/these medians/NNP/medians. so/RB/so /,/, a/DT/a 1/CD/1 3/CD/3 is/VBZ/is less/JJR/less than/IN/than a/DT/a 2/CD/2 3/CD/3 /,/, less/RBR/less than/IN/than a/DT/a 3/CD/3 3/CD/3. so/RB/so on/IN/on and/CC/and a/DT/a n/NN/n by/IN/by 5/CD/5 /,/, 3/CD/3. so/RB/so /,/, this/DT/this is/VBZ/is also/RB/also part/NN/part of/IN/of a/DT/a group/NN/group /,/, which/WDT/which i/PRP/i have/VBP/have written/VBN/written in/IN/in this/DT/this order/NNP/order. this/DT/this is/VBZ/is a/DT/a 2/CD/2 2/CD/2. this/DT/this is/VBZ/is a/DT/a 2/CD/2 1/CD/1 /,/, a/DT/a 2/CD/2 4/CD/4 /,/, a/DT/a 2/CD/2 5/CD/5. similarly/RB/similarly /,/, here/RB/here a/DT/a n/NN/n by/IN/by 5/CD/5 /,/, 2/CD/2 /,/, a/DT/a n/NN/n by/IN/by 5/CD/5 /,/, 1/CD/1 /,/, a/DT/a n/NN/n by/IN/by 5/CD/5 /,/, 4/CD/4 and/CC/and a/DT/a n/NN/n by/IN/by 5/CD/5 /,/, 5/CD/5. so/RB/so /,/, the/DT/the entire/JJ/entire array/NN/array /,/, i/PRP/i have/VBP/have written/VBN/written out/RP/out this/DT/this way/NNP/way. well/RB/well the/DT/the last/JJ/last row/NN/row may/MD/may not/RB/not be/VB/be one/CD/one of/IN/of these/DT/these rows/NNS/rows /,/, may/MD/may not/RB/not may/MD/may not/RB/not have/VB/have all/PDT/all 5/CD/5 elements/NNP/elements. but/CC/but if/IN/if the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array is/VBZ/is divisible/JJ/divisible by/IN/by 5/CD/5. all/DT/all of/IN/of these/DT/these columns/NNS/columns will/MD/will have/VB/have sorry/JJ/sorry all/DT/all of/IN/of these/DT/these columns/NNS/columns will/MD/will have/VB/have 5/CD/5 elements/NNP/elements. so/RB/so /,/, let/VB/let me/PRP/me again/RB/again explain/VB/explain this/DT/this picture/NNP/picture. you/PRP/you first/RB/first /,/, split/NN/split each/DT/each of/IN/of them/PRP/them into/IN/into 5/CD/5 parts/NNP/parts. there/RB/there are/VBP/are n/VBN/n by/IN/by 5/CD/5 groups/NNP/groups. now/RB/now /,/, you/PRP/you sort/NN/sort /,/, you/PRP/you sort/NN/sort them/PRP/them in/IN/in increasing/VBG/increasing order/NNP/order. look/NN/look at/IN/at the/DT/the middle/NN/middle elements/NNP/elements. sort/NN/sort them/PRP/them middle/JJ/middle elements/NNS/elements in/IN/in increasing/VBG/increasing order/NN/order /,/, lay/NN/lay them/PRP/them out/NNP/out. and/CC/and lay/VBD/lay out/RP/out the/DT/the entire/JJ/entire array/NN/array in/IN/in this/DT/this fashion/NNP/fashion. so/RB/so /,/, a/DT/a 1/CD/1 3/CD/3 is/VBZ/is this/DT/this smallest/NN/smallest element/NN/element among/IN/among the/DT/the middle/NN/middle elements/NNP/elements. it/PRP/it comes/VBZ/comes in/IN/in some/DT/some group/NNP/group. it/PRP/it may/MD/may be/VB/be the/DT/the 20th/JJ/20th group/NN/group or/CC/or the/DT/the 15th/JJ/15th group/NN/group or/CC/or whatever/NNP/whatever. whatever/NN/whatever it/PRP/it is/VBZ/is /,/, i/PRP/i will/MD/will call/VB/call it/PRP/it a/DT/a 1/CD/1 3/CD/3. so/RB/so /,/, the/DT/the first/JJ/first group/NN/group here/RB/here i/PRP/i get/VBP/get by/IN/by taking/VBG/taking that/IN/that part/NN/part of/IN/of the/DT/the array/NN/array /,/, where/WRB/where the/DT/the middle/JJ/middle element/NN/element was/VBD/was the/DT/the smallest/NNP/smallest. when/WRB/when /,/, i/PRP/i look/VBP/look at/IN/at the/DT/the middle/NN/middle elements/NNS/elements this/DT/this has/VBZ/has to/TO/to be/VB/be the/DT/the smallest/NNP/smallest. so/RB/so /,/, then/RB/then comes/VBZ/comes the/DT/the second/JJ/second group/NN/group and/CC/and then/RB/then the/DT/the third/JJ/third group/NN/group and/CC/and so/RB/so on/NNP/on. and/CC/and this/DT/this is/VBZ/is the/DT/the last/NNP/last. i/PRP/i will/MD/will just/RB/just arrange/VB/arrange the/DT/the elements/NNS/elements of/IN/of the/DT/the array/NN/array this/DT/this way/NNP/way. now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the median/JJ/median of/IN/of this/DT/this /,/, this/DT/this portion/NNP/portion. remember/NN/remember /,/, that/IN/that we/PRP/we said/VBD/said that/IN/that the/DT/the median/JJ/median of/IN/of this/DT/this portion/NN/portion is/VBZ/is an/DT/an approximate/JJ/approximate median/NNP/median. median/NN/median of/IN/of this/DT/this middle/NN/middle portion/NN/portion is/VBZ/is what/WP/what we/PRP/we claim/VBP/claim to/TO/to be/VB/be an/DT/an approximate/JJ/approximate medium/NNP/medium. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this middle/NN/middle what/WP/what is/VBZ/is this/NNP/this. so/RB/so /,/, it/PRP/it sits/VBZ/sits somewhere/RB/somewhere in/IN/in the/DT/the middle/NN/middle here/NNP/here. so/RB/so /,/, it/PRP/it is/VBZ/is the/DT/the way/NN/way we/PRP/we have/VBP/have written/VBN/written this/DT/this /,/, it/PRP/it is/VBZ/is a/DT/a n/NN/n by/IN/by 10/CD/10 /,/, 3/CD/3. that/WDT/that is/VBZ/is the/DT/the element/NN/element /,/, which/WDT/which is/VBZ/is the/DT/the median/JJ/median of/IN/of this/DT/this /,/, this/DT/this portion/NNP/portion. now/RB/now /,/, how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are smaller/JJR/smaller than/IN/than this/DT/this medium/NN/medium ?/./? where/WRB/where do/VBP/do you/PRP/you find/VB/find elements/NNS/elements in/IN/in the/DT/the array/NN/array /,/, which/WDT/which is/VBZ/is smaller/JJR/smaller than/IN/than this/DT/this medium/NNP/medium. well/RB/well /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this middle/NN/middle row/NN/row /,/, everything/NN/everything to/TO/to the/DT/the left/NN/left here/RB/here is/VBZ/is smaller/NNP/smaller. also/RB/also /,/, everything/NN/everything down/IN/down here/RB/here is/VBZ/is also/RB/also smaller/JJR/smaller /,/, which/WDT/which means/VBZ/means this/DT/this entire/NN/entire portion/NN/portion consists/NNS/consists of/IN/of elements/NNS/elements /,/, which/WDT/which are/VBP/are smaller/NNP/smaller. these/DT/these are/VBP/are smaller/JJR/smaller elements/NNP/elements. similarly/RB/similarly /,/, if/IN/if you/PRP/you look/VBP/look to/TO/to the/DT/the right/NN/right these/DT/these are/VBP/are all/DT/all larger/JJR/larger elements/NNP/elements. and/CC/and also/RB/also /,/, if/IN/if i/PRP/i go/VBP/go right/RB/right and/CC/and up/RP/up i/PRP/i also/RB/also get/VB/get larger/JJR/larger elements/NNP/elements. this/DT/this is/VBZ/is also/RB/also larger/JJR/larger than/IN/than this/NNP/this. so/RB/so /,/, this/DT/this portion/NN/portion again/RB/again consists/VBZ/consists of/IN/of larger/JJR/larger elements/NNP/elements. this/DT/this portion/NN/portion consists/VBZ/consists of/IN/of larger/JJR/larger elements/NNS/elements this/DT/this portion/NN/portion consists/VBZ/consists of/IN/of smaller/JJR/smaller elements/NNP/elements. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that /,/, each/DT/each of/IN/of these/DT/these this/DT/this portion/NN/portion is/VBZ/is at/IN/at least/JJS/least 1/CD/1 4th/CD/4th. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is greater/JJR/greater for/IN/for our/PRP$/our purposes/NNS/purposes this/DT/this is/VBZ/is at/IN/at least/JJS/least 1/CD/1 4th/CD/4th of/IN/of the/DT/the entire/JJ/entire array/NNP/array. this/DT/this portion/NN/portion is/VBZ/is at/IN/at least/JJS/least 1/CD/1 4th/CD/4th of/IN/of the/DT/the entire/JJ/entire array/NNP/array. that/IN/that is/VBZ/is the/DT/the reason/NN/reason /,/, this/DT/this is/VBZ/is an/DT/an approximate/JJ/approximate median/NNP/median. we/PRP/we have/VBP/have just/RB/just shown/VBN/shown that/IN/that /,/, at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4 elements/NNS/elements in/IN/in the/DT/the array/NN/array are/VBP/are smaller/JJR/smaller than/IN/than this/NNP/this. at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4 elements/NNS/elements are/VBP/are larger/JJR/larger than/IN/than this/NNP/this. that/IN/that is/VBZ/is why/WRB/why this/DT/this is/VBZ/is an/DT/an approximate/JJ/approximate median/NNP/median. and/CC/and once/RB/once /,/, we/PRP/we have/VBP/have the/DT/the approximate/NN/approximate median/NN/median /,/, well/RB/well we/PRP/we know/VBP/know what/WP/what to/TO/to do/VB/do next/NNP/next. we/PRP/we take/VBP/take this/DT/this approximate/NN/approximate median/NN/median and/CC/and recurse/NN/recurse on/IN/on these/DT/these two/CD/two parts/NNP/parts. and/CC/and i/PRP/i have/VBP/have well/RB/well in/IN/in sort/NN/sort of/IN/of vague/NN/vague disjoint/NN/disjoint way/NN/way i/PRP/i have/VBP/have given/VBN/given you/PRP/you all/DT/all the/DT/the ideas/NNS/ideas needed/VBD/needed to/TO/to design/VB/design this/DT/this algorithm/NN/algorithm to/TO/to find/VB/find a/DT/a median/NNP/median. let/NN/let us/PRP/us just/RB/just put/VBD/put all/DT/all of/IN/of this/DT/this together/NNP/together. let/VBD/let us/PRP/us just/RB/just write/VBP/write down/RP/down each/DT/each step/NNP/step. put/VBD/put all/DT/all these/DT/these steps/NNS/steps together/RB/together stare/VBP/stare at/IN/at it/NNP/it. and/CC/and then/RB/then /,/, see/VB/see if/IN/if you/PRP/you can/MD/can analyze/VB/analyze it/PRP/it and/CC/and see/VB/see what/WP/what the/DT/the running/VBG/running time/NNP/time. so/RB/so /,/, i/PRP/i will/MD/will not/RB/not be/VB/be giving/VBG/giving you/PRP/you code/NNP/code. but/CC/but /,/, i/PRP/i will/MD/will write/VB/write down/IN/down each/DT/each step/NN/step carefully/NNP/carefully. so/RB/so /,/, here/RB/here goes/NNP/goes. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 10/CD/10 /CD/) i/PRP/i want/VBP/want to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in an/DT/an array/NN/array a/NNP/a. so/RB/so /,/, let/VB/let us/PRP/us call/MD/call this/DT/this find/NN/find rank/NN/rank /,/, find/VBP/find element/NNP/element. let/NN/let us/PRP/us say/VBP/say /,/, r/NN/r /,/, a/DT/a this/DT/this finds/VBZ/finds an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in array/NN/array a/NNP/a. now/RB/now /,/, what/WDT/what do/VBP/do we/PRP/we do/NNP/do. well/RB/well the/DT/the first/JJ/first thing/NN/thing is/VBZ/is to/TO/to somehow/VB/somehow gets/NNS/gets this/DT/this approximate/NN/approximate median/NNP/median. so/RB/so /,/, for/IN/for that/DT/that well/RB/well /,/, the/DT/the first/JJ/first step/NN/step is/VBZ/is this/NNP/this. so/RB/so /,/, partition/NN/partition array/NN/array /,/, partition/NN/partition a/DT/a into/IN/into n/NN/n by/IN/by 5/CD/5 groups/NNS/groups of/IN/of size/NN/size 5/CD/5. find/NN/find the/DT/the median/JJ/median of/IN/of each/DT/each group/NNP/group. now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to recurse/NNP/recurse. i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the median/JJ/median of/IN/of these/DT/these medians/NNP/medians. there/RB/there are/VBP/are n/VBN/n by/IN/by 5/CD/5 groups/NNP/groups. so/RB/so /,/, there/EX/there are/VBP/are n/NN/n by/IN/by 5/CD/5 elements/NNP/elements. so/RB/so /,/, each/DT/each group/NN/group and/CC/and put/VBD/put them/PRP/them in/IN/in an/DT/an array/NNP/array. put/NN/put them/PRP/them in/IN/in array/NN/array b/NN/b say/NNP/say. array/NN/array b/NN/b has/VBZ/has size/NN/size n/NN/n by/IN/by 5/CD/5. now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find element/NN/element essentially/RB/essentially /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the median/JJ/median in/IN/in this/DT/this array/NN/array so/IN/so /,/, find/VBP/find element/NN/element of/IN/of rank/NN/rank n/NN/n by/IN/by 10/CD/10 in/IN/in the/DT/the array/NN/array b/NNP/b. this/DT/this is/VBZ/is again/RB/again recursion/NNP/recursion. so/RB/so /,/, this/DT/this portion/NN/portion /,/, find/VBP/find the/DT/the approximate/NN/approximate median/NNP/median. this/DT/this well/NN/well this/DT/this should/MD/should return/VB/return an/DT/an element/NNP/element. so/RB/so /,/, call/VBP/call this/DT/this x/NNP/x. so/RB/so /,/, this/DT/this returns/NNS/returns x/NNP/x. this/DT/this element/NN/element x/NN/x is/VBZ/is returned/VBN/returned by/IN/by this/DT/this call/NNP/call. and/CC/and this/DT/this x/NN/x is/VBZ/is the/DT/the approximate/NN/approximate median/NN/median that/WDT/that we/PRP/we want/NNP/want. now/RB/now /,/, what/WDT/what do/VBP/do ?/./? well/RB/well /,/, we/PRP/we use/VBP/use this/DT/this is/VBZ/is something/NN/something we/PRP/we have/VBP/have done/VBN/done before/NNP/before. we/PRP/we use/VBP/use x/NN/x partition/NN/partition array/NN/array into/IN/into two/CD/two parts/NNS/parts and/CC/and then/RB/then recurse/VB/recurse on/IN/on the/DT/the right/NN/right part/NN/part /,/, that/IN/that is/VBZ/is it/NNP/it. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 14/CD/14 /CD/) so/RB/so /,/, partition/NN/partition a/DT/a into/IN/into a/DT/a l/NN/l and/CC/and a/DT/a r/NNP/r. so/RB/so /,/, elements/NNS/elements in/IN/in a/DT/a l/NN/l are/VBP/are less/RBR/less than/IN/than x/NNP/x. elements/NNS/elements in/IN/in a/DT/a r/NN/r are/VBP/are greater/JJR/greater than/IN/than x/NNP/x. that/IN/that is/VBZ/is how/WRB/how you/PRP/you get/VBP/get a/DT/a l/NN/l and/CC/and a/DT/a r/NNP/r. now/RB/now /,/, let/VB/let us/PRP/us see/VB/see /,/, so/RB/so now/RB/now /,/, we/PRP/we are/VBP/are left/VBN/left with/IN/with cases/NNS/cases depending/VBG/depending on/IN/on what/WP/what the/DT/the rank/NN/rank of/IN/of x/NN/x is/VBZ/is we/PRP/we have/VBP/have to/TO/to either/DT/either recurse/NN/recurse on/IN/on a/DT/a l/NN/l or/CC/or a/DT/a r/NNP/r. so/RB/so /,/, there/EX/there are/VBP/are 3/CD/3 cases/NNP/cases. the/DT/the first/JJ/first case/NN/case is/VBZ/is if/IN/if /,/, x/NN/x luckily/RB/luckily happens/VBZ/happens to/TO/to be/VB/be the/DT/the element/NN/element we/PRP/we are/VBP/are looking/VBG/looking for/NNP/for. so/RB/so /,/, when/WRB/when does/VBZ/does that/IN/that happen/JJ/happen ?/./? so/RB/so /,/, if/IN/if size/NN/size of/IN/of a/DT/a l/NN/l is/VBZ/is let/VBN/let us/PRP/us say/VBP/say /,/, n/NN/n by/IN/by 2/CD/2 minus/NN/minus 1/CD/1. then/RB/then /,/, return/NN/return x/NN/x /,/, x/NN/x is/VBZ/is the/DT/the median/JJ/median that/IN/that we/PRP/we are/VBP/are looking/VBG/looking for/NNP/for. now/RB/now /,/, if/IN/if i/PRP/i am/VBP/am sorry/JJ/sorry /,/, so/RB/so size/VBP/size of/IN/of a/DT/a l/NN/l should/MD/should be/VB/be r/RB/r minus/CC/minus 1/CD/1. we/PRP/we are/VBP/are looking/VBG/looking for/IN/for an/DT/an element/NN/element of/IN/of rank/NN/rank r/NNP/r. so/RB/so /,/, we/PRP/we go/VBP/go back/RB/back to/TO/to here/RB/here /:/( /:/( refer/NN/refer time/NN/time /:/: 32/CD/32 /:/: 40/CD/40 /CD/) /CD/) /./. what/WP/what we/PRP/we want/VBP/want to/TO/to find/VB/find is/VBZ/is an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in a/DT/a /,/, not/RB/not just/RB/just the/DT/the median/NNP/median. so/RB/so /,/, if/IN/if the/DT/the size/NN/size of/IN/of a/DT/a l/NN/l is/VBZ/is r/NN/r minus/NN/minus 1/CD/1 /,/, then/RB/then rank/VB/rank of/IN/of x/NN/x is/VBZ/is nothing/NN/nothing but/CC/but r/NNP/r. so/RB/so /,/, x/NN/x is/VBZ/is the/DT/the element/NN/element of/IN/of rank/NN/rank r/NN/r and/CC/and we/PRP/we return/VBP/return x/NNP/x. so/RB/so /,/, if/IN/if size/NN/size of/IN/of a/DT/a l/NN/l is/VBZ/is greater/JJR/greater than/IN/than r/NN/r minus/NN/minus 1/CD/1. then/RB/then /,/, we/PRP/we know/VBP/know that/IN/that this/DT/this element/NN/element of/IN/of rank/NN/rank r/NN/r sits/NNS/sits in/IN/in array/NN/array a/DT/a l/NNP/l. the/DT/the element/NN/element of/IN/of rank/NN/rank r/NN/r sits/NNS/sits in/IN/in array/NN/array a/DT/a l/NNP/l. so/RB/so /,/, we/PRP/we recurse/VBP/recurse on/IN/on array/NN/array a/DT/a l/NNP/l. so/RB/so /,/, we/PRP/we say/VBP/say find/VBP/find the/DT/the element/NNP/element. so/RB/so /,/, we/PRP/we want/VBP/want still/RB/still to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of rank/NN/rank r/NNP/r. and/CC/and we/PRP/we now/RB/now recurse/VBP/recurse on/IN/on a/DT/a l/NNP/l. an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in a/DT/a l/NN/l will/MD/will also/RB/also be/VB/be an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in a/NNP/a. that/IN/that is/VBZ/is easy/JJ/easy to/TO/to see/NNP/see. and/CC/and the/DT/the last/JJ/last case/NN/case is/VBZ/is when/WRB/when size/NN/size of/IN/of a/DT/a l/NN/l smaller/NNP/smaller. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 02/CD/02 /CD/) the/DT/the last/JJ/last case/NN/case is/VBZ/is size/NN/size of/IN/of a/DT/a l/NN/l is/VBZ/is smaller/JJR/smaller than/IN/than r/NN/r minus/NN/minus 1/CD/1. then/RB/then /,/, we/PRP/we need/VBP/need to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of rank/NNP/rank. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a let/NN/let us/PRP/us quickly/RB/quickly draw/VBD/draw picture/NN/picture to/TO/to find/VB/find this/DT/this out/NNP/out. so/RB/so /,/, here/RB/here is/VBZ/is x/NNP/x. this/DT/this is/VBZ/is a/DT/a l/NNP/l. and/CC/and i/PRP/i know/VBP/know that/IN/that r/NN/r is/VBZ/is somewhere/RB/somewhere here/NNP/here. this/DT/this is/VBZ/is what/WP/what i/PRP/i want/NNP/want. now/RB/now /,/, this/DT/this is/VBZ/is r/NN/r /,/, this/DT/this there/EX/there are/VBP/are r/NN/r elements/NNS/elements here/NNP/here. there/RB/there are/VBP/are size/RB/size of/IN/of a/DT/a l/NN/l elements/NNS/elements here/RB/here /,/, one/CD/one element/NN/element here/RB/here so/RB/so /,/, the/DT/the rank/NN/rank of/IN/of this/DT/this element/NN/element in/IN/in this/DT/this portion/NN/portion of/IN/of the/DT/the array/NN/array is/VBZ/is nothing/NN/nothing but/CC/but this/DT/this distance/NNP/distance. that/IN/that is/VBZ/is nothing/NN/nothing but/CC/but r/NN/r minus/NN/minus size/NN/size of/IN/of a/DT/a l/NN/l minus/NN/minus 1/CD/1. this/DT/this entire/JJ/entire distance/NN/distance is/VBZ/is r/NNP/r. this/DT/this distance/NN/distance is/VBZ/is size/NN/size of/IN/of a/DT/a l/NN/l and/CC/and x/NN/x is/VBZ/is just/RB/just one/CD/one element/NNP/element. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find now/RB/now an/DT/an element/NN/element to/TO/to find/VB/find element/NNP/element. the/DT/the rank/NN/rank is/VBZ/is r/NN/r minus/NN/minus size/NN/size of/IN/of a/DT/a l/NN/l minus/NN/minus 1/CD/1. and/CC/and we/PRP/we want/VBP/want to/TO/to do/VB/do this/DT/this in/IN/in a/DT/a r/NNP/r. this/DT/this portion/NN/portion of/IN/of the/DT/the array/NN/array /,/, that/IN/that portion/NN/portion of/IN/of the/DT/the array/NN/array is/VBZ/is a/DT/a r/NNP/r. that/WDT/that is/VBZ/is it/NNP/it. that/IN/that ends/NNS/ends the/DT/the description/NN/description of/IN/of the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this algorithm/NN/algorithm again/NNP/again. we/PRP/we want/VBP/want to/TO/to find/VB/find an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in array/NN/array a/NNP/a. partition/NN/partition a/DT/a into/IN/into /NN/( /:/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 01/CD/01 /CD/) /CD/) n/NN/n 5/CD/5 n/NN/n by/IN/by 5/CD/5 groups/NNS/groups of/IN/of size/NN/size 5/CD/5. find/NN/find the/DT/the median/JJ/median of/IN/of each/DT/each group/NNP/group. now/RB/now /,/, find/VBP/find the/DT/the median/JJ/median of/IN/of these/DT/these medians/NNP/medians. this/DT/this returns/NNS/returns an/DT/an element/NN/element x/NN/x /,/, which/WDT/which will/MD/will be/VB/be an/DT/an approximate/JJ/approximate median/NNP/median. and/CC/and we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to partition/NN/partition with/IN/with respect/NN/respect to/TO/to x/NNP/x. so/RB/so /,/, partition/NN/partition a/DT/a into/IN/into a/DT/a l/NN/l and/CC/and a/DT/a r/NN/r with/IN/with respect/NN/respect to/TO/to x/VB/x /:/( /:/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 27/CD/27 /CD/) /CD/) /./. these/DT/these are/VBP/are elements/NNS/elements smaller/JJR/smaller than/IN/than x/NN/x and/CC/and those/DT/those larger/JJR/larger than/IN/than x/NNP/x. and/CC/and now/RB/now are/VBP/are going/VBG/going to/TO/to recurse/VB/recurse on/IN/on one/CD/one of/IN/of these/DT/these two/CD/two parts/NNP/parts. that/IN/that depends/NNS/depends on/IN/on the/DT/the rank/NN/rank of/IN/of this/DT/this element/NN/element x/NNP/x. the/DT/the rank/NN/rank of/IN/of this/DT/this element/NN/element x/NN/x is/VBZ/is nothing/NN/nothing but/CC/but size/NN/size of/IN/of a/DT/a l/NN/l plus/CC/plus 1/CD/1. so/RB/so /,/, if/IN/if the/DT/the rank/NN/rank of/IN/of the/DT/the element/NN/element x/NN/x is/VBZ/is r/NN/r exactly/RB/exactly r/NNP/r. then/RB/then we/PRP/we return/VBP/return x/NN/x as/IN/as the/DT/the answer/NNP/answer. if/IN/if the/DT/the rank/NN/rank of/IN/of element/NN/element is/VBZ/is x/NN/x is/VBZ/is larger/JJR/larger than/IN/than r/NN/r that/IN/that means/NNS/means /,/, the/DT/the element/NN/element we/PRP/we are/VBP/are looking/VBG/looking for/IN/for is/VBZ/is on/IN/on the/DT/the left/NN/left half/NN/half of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, we/PRP/we just/RB/just find/VBP/find an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r in/IN/in the/DT/the left/NN/left half/NN/half of/IN/of the/DT/the array/NNP/array. if/IN/if this/DT/this does/VBZ/does not/RB/not work/VB/work /,/, well/RB/well the/DT/the element/NN/element that/IN/that we/PRP/we are/VBP/are looking/VBG/looking for/IN/for lies/NNS/lies on/IN/on the/DT/the right/NN/right half/NN/half of/IN/of the/DT/the array/NNP/array. and/CC/and well/RB/well this/DT/this is/VBZ/is what/WP/what we/PRP/we do/NNP/do. if/IN/if the/DT/the rank/NN/rank is/VBZ/is less/JJR/less than/IN/than r/NN/r minus/NN/minus 1/CD/1 /,/, then/RB/then we/PRP/we find/VBP/find an/DT/an element/NN/element of/IN/of rank/NN/rank r/NN/r minus/NN/minus a/DT/a l/NN/l minus/NN/minus 1/CD/1 in/IN/in the/DT/the right/NN/right half/NN/half of/IN/of the/DT/the array/NNP/array. this/DT/this is/VBZ/is the/DT/the entire/JJ/entire procedure/NNP/procedure. how/WRB/how do/VBP/do we/PRP/we analyze/VB/analyze this/DT/this ?/./? we/PRP/we have/VBP/have to/TO/to analyze/VB/analyze this/DT/this procedure/NNP/procedure. so/RB/so /,/, we/PRP/we have/VBP/have seen/VBN/seen reasons/NNS/reasons /,/, why/WRB/why this/DT/this procedure/NN/procedure works/NNP/works. why/WRB/why this/DT/this we/PRP/we expect/VBP/expect that/IN/that this/DT/this procedure/NN/procedure should/MD/should run/VB/run in/IN/in linear/JJ/linear time/NNP/time. our/PRP$/our expectation/NN/expectation at/IN/at this/DT/this procedure/NN/procedure runs/VBZ/runs in/IN/in linear/JJ/linear time/NNP/time. and/CC/and we/PRP/we will/MD/will see/VB/see why/WRB/why /,/, this/DT/this procedure/NN/procedure actually/RB/actually works/VBZ/works in/IN/in linear/JJ/linear time/NNP/time. so/RB/so /,/, to/TO/to once/RB/once so/RB/so the/DT/the once/NN/once you/PRP/you have/VB/have designed/VBN/designed an/DT/an algorithm/NNP/algorithm. how/WRB/how do/VBP/do you/PRP/you analyze/VB/analyze /,/, the/DT/the easiest/JJS/easiest way/NN/way to/TO/to do/VB/do it/PRP/it is/VBZ/is write/JJ/write down/IN/down the/DT/the algorithm/NNP/algorithm. write/NN/write down/IN/down perhaps/RB/perhaps code/NN/code for/IN/for the/DT/the algorithm/NNP/algorithm. look/NN/look at/IN/at each/DT/each step/NNP/step. and/CC/and figure/NN/figure out/RP/out how/WRB/how many/JJ/many times/NNS/times each/DT/each step/NN/step is/VBZ/is executed/NNP/executed. the/DT/the step/NN/step could/MD/could be/VB/be a/DT/a recursive/JJ/recursive step/NNP/step. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 38/CD/38 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is let/VBN/let us/PRP/us say/VBP/say the/DT/the /,/, you/PRP/you have/VBP/have written/VBN/written an/DT/an algorithm/NN/algorithm /,/, for/IN/for some/DT/some problem/NNP/problem. there/RB/there are/VBP/are there/RB/there are/VBP/are many/JJ/many steps/NNP/steps. one/CD/one of/IN/of them/PRP/them could/MD/could be/VB/be recursive/NNP/recursive. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an algorithm/NN/algorithm call/NN/call it/PRP/it a/NNP/a. so/RB/so /,/, you/PRP/you recurse/VBP/recurse on/IN/on a/DT/a with/IN/with smaller/JJR/smaller input/NNP/input. and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is a/DT/a loop/NN/loop may/MD/may be/VB/be and/CC/and there/EX/there are/VBP/are steps/NNS/steps inside/VBP/inside the/DT/the loop/NNP/loop. this/DT/this is/VBZ/is your/PRP$/your normal/JJ/normal structure/NN/structure of/IN/of a/DT/a program/NNP/program. to/TO/to analyze/VB/analyze this/DT/this /,/, i/PRP/i need/VBP/need to/TO/to you/PRP/you need/VBP/need to/TO/to find/VB/find out/RP/out /,/, how/WRB/how many/JJ/many times/NNS/times is/VBZ/is each/DT/each step/NN/step executed/NNP/executed. those/DT/those outside/IN/outside a/DT/a loop/NN/loop are/VBP/are executed/VBN/executed once/NNP/once. that/IN/that is/VBZ/is fine/NNP/fine. for/IN/for the/DT/the recursive/JJ/recursive call/NN/call /,/, you/PRP/you need/VBP/need to/TO/to estimate/VB/estimate the/DT/the size/NN/size of/IN/of this/DT/this input/NNP/input. so/RB/so /,/, for/IN/for instance/NN/instance /,/, if/IN/if initially/RB/initially the/DT/the input/NN/input size/NN/size were/VBD/were n/NNP/n. and/CC/and this/DT/this is/VBZ/is let/VB/let us/PRP/us say/VB/say n/NN/n by/IN/by 10/CD/10. this/DT/this could/MD/could be/VB/be n/VBN/n by/IN/by 10/CD/10. and/CC/and now/RB/now /,/, you/PRP/you have/VBP/have these/DT/these things/NNS/things in/IN/in a/DT/a loop/NN/loop let/NN/let us/PRP/us say/VBP/say and/CC/and you/PRP/you have/VBP/have to/TO/to find/VB/find out/RP/out how/WRB/how many/JJ/many times/NNS/times each/DT/each of/IN/of them/PRP/them is/VBZ/is executed/NNP/executed. now/RB/now /,/, supposing/VBG/supposing there/EX/there are/VBP/are you/PRP/you know/VBP/know 5/CD/5 of/IN/of them/PRP/them /,/, 5/CD/5 steps/NNS/steps here/NNP/here. and/CC/and each/DT/each is/VBZ/is executed/VBN/executed n/NN/n times/NNP/times. then/RB/then the/DT/the total/NN/total time/NN/time that/WDT/that you/PRP/you will/MD/will take/VB/take t/NN/t n/NN/n well/RB/well t/NN/t n/NN/n by/IN/by 10/CD/10 /,/, that/WDT/that comes/VBZ/comes in/IN/in the/DT/the recursive/JJ/recursive step/NNP/step. and/CC/and these/DT/these /,/, totally/RB/totally the/DT/the total/JJ/total time/NN/time is/VBZ/is 5/CD/5 times/NNS/times n/NNP/n. there/RB/there are/VBP/are 5/CD/5 steps/NNS/steps each/DT/each takes/VBZ/takes /NN/( /:/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 14/CD/14 /CD/) /CD/) /./. each/DT/each of/IN/of them/PRP/them is/VBZ/is executed/VBN/executed n/NN/n times/NNP/times. and/CC/and that/IN/that gives/NNS/gives you/PRP/you 5/CD/5 n/NNP/n. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do something/NN/something similar/JJ/similar to/TO/to our/PRP$/our algorithm/NN/algorithm for/IN/for the/DT/the median/NNP/median. look/NN/look at/IN/at these/DT/these each/DT/each of/IN/of these/DT/these steps/NNP/steps. and/CC/and we/PRP/we will/MD/will see/VB/see how/WRB/how much/RB/much time/NN/time each/DT/each of/IN/of them/PRP/them takes/NNP/takes. so/RB/so /,/, t/NN/t of/IN/of n/NN/n is/VBZ/is the/DT/the time/NN/time taken/VBN/taken on/IN/on an/DT/an array/NN/array of/IN/of size/NN/size n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 40/CD/40 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write a/DT/a recurrence/NN/recurrence for/IN/for t/NN/t of/IN/of n/NNP/n. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the first/JJ/first slide/NN/slide /:/( /:/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 45/CD/45 /CD/) /CD/) /./. partition/NN/partition a/DT/a into/IN/into n/NN/n by/IN/by 5/CD/5 groups/NNS/groups of/IN/of size/NN/size 5/CD/5. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take nothing/NNP/nothing. this/DT/this partition/NN/partition is/VBZ/is easily/RB/easily done/NNP/done. find/VBP/find the/DT/the median/JJ/median of/IN/of each/DT/each group/NNP/group. how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NN/take ?/./? well/RB/well each/DT/each of/IN/of those/DT/those 5/CD/5 elements/NNS/elements /,/, each/DT/each of/IN/of those/DT/those n/NN/n by/IN/by 5/CD/5 groups/NNS/groups i/PRP/i could/MD/could even/RB/even sort/NNP/sort. that/IN/that will/MD/will take/VB/take let/VB/let us/PRP/us say/VB/say 25/CD/25 sort/NN/sort of/IN/of comparisons/NNS/comparisons for/IN/for each/DT/each group/NNP/group. i/PRP/i mean/VBP/mean even/RB/even if/IN/if i/PRP/i do/VBP/do bubble/JJ/bubble sort/NNP/sort. and/CC/and there/EX/there are/VBP/are n/NN/n by/IN/by 5/CD/5 such/JJ/such groups/NNS/groups /,/, so/RB/so it/PRP/it is/VBZ/is some/DT/some constant/JJ/constant times/NNS/times n/NNP/n. so/RB/so /,/, this/DT/this step/NN/step finding/NN/finding the/DT/the median/JJ/median of/IN/of each/DT/each group/NN/group takes/VBZ/takes constant/NN/constant times/NNS/times n/VBP/n for/IN/for the/DT/the entire/JJ/entire array/NNP/array. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NNP/down. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first /,/, first/RB/first step/VB/step to/TO/to the/DT/the cost/NNP/cost. c/NN/c 1/CD/1 times/NNS/times n/NNP/n. this/DT/this is/VBZ/is to/TO/to find/VB/find the/DT/the median/JJ/median of/IN/of these/DT/these groups/NNS/groups of/IN/of each/DT/each group/NNP/group. there/RB/there are/VBP/are n/VBN/n by/IN/by 5/CD/5 groups/NNP/groups. for/IN/for each/DT/each of/IN/of them/PRP/them i/PRP/i spend/VBP/spend some/DT/some constant/JJ/constant time/NNP/time. and/CC/and that/IN/that gives/NNS/gives me/PRP/me a/DT/a total/NN/total of/IN/of c/NN/c 1/CD/1 times/NNS/times n/NNP/n. what/WP/what about/IN/about this/NNP/this. what/WP/what about/IN/about this/DT/this step/NNP/step. well/RB/well /,/, i/PRP/i recurse/VBP/recurse on/IN/on something/NN/something of/IN/of size/NN/size n/NN/n by/IN/by 10/CD/10. so/RB/so /,/, sorry/JJ/sorry i/PRP/i recurse/VBP/recurse on/IN/on b/NNP/b. this/DT/this is/VBZ/is the/DT/the rank/NN/rank i/PRP/i want/VBP/want to/TO/to find/NNP/find. i/PRP/i recurse/VBP/recurse on/IN/on b/NN/b and/CC/and b/NN/b had/VBD/had size/NN/size n/NN/n by/IN/by 5/CD/5. so/RB/so /,/, i/PRP/i recurse/VBP/recurse on/IN/on a/DT/a problem/NN/problem of/IN/of size/NN/size n/NN/n by/IN/by 5/CD/5. so/RB/so /,/, that/IN/that is/VBZ/is t/VBN/t n/NN/n by/IN/by 5/CD/5 plus/NNP/plus. now/RB/now /,/, we/PRP/we get/VBP/get here/RB/here we/PRP/we partition/VBP/partition /:/( /:/( refer/NN/refer time/NN/time /:/: 42/CD/42 /:/: 41/CD/41 /CD/) /CD/) this/DT/this into/IN/into two/CD/two parts/NNP/parts. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does this/DT/this take/NNP/take. this/DT/this takes/VBZ/takes n/NN/n time/NN/time /,/, because/IN/because each/DT/each element/NN/element is/VBZ/is compared/VBN/compared with/IN/with x/NNP/x. so/RB/so /,/, this/DT/this takes/VBZ/takes an/DT/an additional/JJ/additional n/NNP/n. this/DT/this is/VBZ/is to/TO/to partition/NN/partition this/DT/this array/NN/array into/IN/into two/CD/two parts/NNP/parts. once/RB/once we/PRP/we find/VBP/find this/DT/this x/NNP/x. after/IN/after /,/, we/PRP/we do/VBP/do this/DT/this partitioning/NN/partitioning /,/, now/RB/now we/PRP/we recurse/VBP/recurse well/RB/well /,/, if/IN/if we/PRP/we are/VBP/are in/IN/in this/DT/this case/NN/case we/PRP/we are/VBP/are done/VBN/done /,/, we/PRP/we return/NNP/return. if/IN/if we/PRP/we are/VBP/are in/IN/in this/DT/this case/NN/case or/CC/or if/IN/if we/PRP/we are/VBP/are in/IN/in the/DT/the next/JJ/next case/NN/case /,/, we/PRP/we recurse/VBP/recurse on/IN/on a/DT/a smaller/JJR/smaller part/NN/part of/IN/of the/DT/the array/NNP/array. so/RB/so /,/, we/PRP/we recurse/VBP/recurse on/IN/on either/DT/either a/DT/a l/NN/l or/CC/or we/PRP/we recurse/VBP/recurse on/IN/on a/DT/a r/NN/r depending/VBG/depending on/IN/on where/WRB/where this/DT/this what/WP/what was/VBD/was the/DT/the rank/NNP/rank. what/WP/what was/VBD/was r/JJ/r and/CC/and what/WP/what was/VBD/was rank/NN/rank of/IN/of x/NNP/x. we/PRP/we either/VBP/either recurse/NN/recurse on/IN/on a/DT/a l/NN/l or/CC/or we/PRP/we recurse/VBP/recurse on/IN/on a/DT/a r/NNP/r. now/RB/now /,/, we/PRP/we know/NNP/know. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the last/JJ/last step/NNP/step. so/IN/so /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i need/VBP/need to/TO/to write/NNP/write. so/RB/so /,/, this/DT/this t/NN/t of/IN/of something/NN/something this/DT/this is/VBZ/is the/DT/the recurrent/NNP/recurrent. so/RB/so /,/, what/WDT/what do/VBP/do i/PRP/i put/VB/put here/NNP/here. well/RB/well /,/, both/DT/both a/DT/a l/NN/l and/CC/and a/DT/a r/NN/r notice/NN/notice /,/, the/DT/the size/NN/size of/IN/of a/DT/a l/NN/l i/PRP/i know/VBP/know is/VBZ/is at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4. size/NN/size of/IN/of a/DT/a r/NN/r i/PRP/i know/VBP/know is/VBZ/is at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4. or/CC/or this/DT/this implies/NNS/implies that/IN/that size/NN/size of/IN/of a/DT/a l/NN/l is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 n/NN/n by/IN/by 4/CD/4. why/WRB/why is/VBZ/is this/NNP/this. this/DT/this is/VBZ/is because/IN/because size/NN/size of/IN/of a/DT/a r/NN/r is/VBZ/is at/IN/at least/JJS/least n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, size/VBP/size of/IN/of a/DT/a l/NN/l is/VBZ/is utmost/VBN/utmost 3/CD/3 n/NN/n by/IN/by 4/CD/4. similarly/RB/similarly /,/, size/NN/size of/IN/of a/DT/a r/NN/r is/VBZ/is utmost/VBN/utmost 3/CD/3 n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, whichever/IN/whichever side/NN/side /,/, i/PRP/i recurse/VBP/recurse the/DT/the size/NN/size the/DT/the maximum/NN/maximum size/NN/size it/PRP/it can/MD/can be/VB/be is/VBZ/is 3/CD/3 n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, i/PRP/i can/MD/can put/VB/put 3/CD/3 n/NN/n by/IN/by 4/CD/4 and/CC/and i/PRP/i put/VBD/put less/JJR/less than/IN/than equal/JJ/equal to/NNP/to. what/WP/what i/PRP/i put/VBD/put here/RB/here the/DT/the size/NN/size /,/, can/MD/can only/RB/only be/VB/be less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 3/CD/3 n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, the/DT/the maximum/NN/maximum size/NN/size an/DT/an array/NN/array can/MD/can have/VB/have when/WRB/when i/PRP/i do/VBP/do this/DT/this recursion/NN/recursion is/VBZ/is 3/CD/3 n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, the/DT/the recurrence/NN/recurrence equation/NN/equation i/PRP/i get/VBP/get is/VBZ/is this/NNP/this. t/NN/t n/NN/n is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c 1/CD/1 n/NNP/n. this/DT/this is/VBZ/is to/TO/to find/VB/find the/DT/the median/JJ/median of/IN/of those/DT/those 5/CD/5 of/IN/of these/DT/these groups/NNS/groups n/VBP/n by/IN/by 5/CD/5 groups/NNP/groups. here/RB/here is/VBZ/is a/DT/a recurrent/NN/recurrent recursion/NN/recursion to/TO/to find/VB/find the/DT/the exact/JJ/exact median/NNP/median. this/DT/this is/VBZ/is the/DT/the time/NN/time for/IN/for portioning/NNP/portioning. and/CC/and this/DT/this is/VBZ/is the/DT/the last/JJ/last recursion/NNP/recursion. we/PRP/we recurse/VBP/recurse either/DT/either on/IN/on a/DT/a l/NN/l or/CC/or a/DT/a r/NNP/r. and/CC/and a/DT/a maximum/NN/maximum size/NN/size of/IN/of a/DT/a l/NN/l and/CC/and a/DT/a r/NN/r is/VBZ/is 3/CD/3 n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the recurrent/NNP/recurrent. so/RB/so /,/, t/NN/t n/NN/n is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to let/VB/let us/PRP/us say/VB/say /,/, c/NN/c 1/CD/1 plus/CC/plus 1/CD/1 n/NN/n plus/CC/plus t/NN/t of/IN/of n/NN/n by/IN/by 5/CD/5 plus/CC/plus t/NN/t of/IN/of 3/CD/3 n/NN/n by/IN/by 4/CD/4. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence ?/./? that/IN/that is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to see/NNP/see. so/RB/so /,/, here/RB/here is/VBZ/is something/NN/something i/PRP/i want/VBP/want to/TO/to sort/VB/sort of/IN/of share/NN/share with/IN/with you/NNP/you. so/RB/so /,/, look/VBP/look at/IN/at the/DT/the recurrence/NNP/recurrence. look/NN/look at/IN/at where/WRB/where we/PRP/we recurse/NNP/recurse. one/CD/one is/VBZ/is a/DT/a problem/NN/problem of/IN/of size/NN/size n/NN/n by/IN/by 5/CD/5. this/DT/this is/VBZ/is a/DT/a problem/NN/problem of/IN/of size/NN/size n/NN/n by/IN/by 5/CD/5. the/DT/the other/JJ/other is/VBZ/is a/DT/a problem/NN/problem of/IN/of size/NN/size 3/CD/3 n/NN/n by/IN/by 4/CD/4. the/DT/the sum/NN/sum these/DT/these two/CD/two is/VBZ/is less/JJR/less than/IN/than n/NNP/n. n/NN/n by/IN/by 5/CD/5 plus/CC/plus 3/CD/3 n/NN/n by/IN/by 4/CD/4 is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than n/NNP/n. in/IN/in such/JJ/such cases/NNS/cases usually/RB/usually /,/, you/PRP/you will/MD/will end/VB/end up/RP/up with/IN/with something/NN/something which/WDT/which is/VBZ/is linear/NNP/linear. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try and/CC/and prove/VB/prove this/NNP/this. so/RB/so /,/, we/PRP/we know/VBP/know and/CC/and in/IN/in such/JJ/such cases/NNS/cases instead/RB/instead of/IN/of writing/VBG/writing down/IN/down this/DT/this recurrence/NN/recurrence the/DT/the way/NN/way we/PRP/we have/VBP/have been/VBN/been doing/VBG/doing there/RB/there is/VBZ/is an/DT/an easier/JJR/easier way/NN/way to/TO/to do/VB/do this/NNP/this. so/RB/so /,/, i/PRP/i will/MD/will assume/VB/assume that/IN/that t/NN/t n/NN/n is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c n/NNP/n. i/PRP/i want/VBP/want to/TO/to prove/VB/prove this/NNP/this. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to prove/VB/prove this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just substitute/VBP/substitute this/DT/this into/IN/into the/DT/the previous/JJ/previous equation/NN/equation and/CC/and see/VB/see what/WP/what we/PRP/we get/NNP/get. so/RB/so /,/, i/PRP/i get/VBP/get t/RB/t n/VBN/n /,/, so/RB/so let/VB/let me/PRP/me do/VBP/do this/DT/this on/IN/on a/DT/a new/JJ/new sheet/NNP/sheet. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 59/CD/59 /CD/) i/PRP/i know/VBP/know this/DT/this t/NN/t n/NN/n is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c 1/CD/1 plus/CC/plus 1/CD/1 n/NN/n plus/CC/plus t/NN/t n/NN/n by/IN/by 5/CD/5 plus/CC/plus t/NN/t 3/CD/3 n/NN/n by/IN/by 4/CD/4. and/CC/and i/PRP/i want/VBP/want t/JJ/t n/NN/n is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c n/NNP/n. i/PRP/i want/VBP/want to/TO/to find/VB/find a/DT/a right/NN/right constant/NN/constant here/RB/here c/NNP/c. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just plug/VBP/plug this/DT/this into/IN/into the/DT/the original/JJ/original thing/NNP/thing. i/PRP/i get/VBP/get t/RB/t n/VBN/n is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c 1/CD/1 plus/CC/plus 1/CD/1 n/NN/n plus/CC/plus well/RB/well c/JJ/c n/NN/n by/IN/by 5/CD/5 by/IN/by plugging/NN/plugging in/IN/in c/NN/c n/NN/n plus/CC/plus 3/CD/3 by/IN/by 4/CD/4 times/NNS/times c/NN/c n/NNP/n. now/RB/now /,/, if/IN/if this/DT/this is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to c/VB/c n/NNP/n. if/IN/if i/PRP/i can/MD/can find/VB/find c/NN/c /,/, so/RB/so that/IN/that this/DT/this is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c n/NN/n then/RB/then we/PRP/we are/VBP/are done/NNP/done. if/IN/if this/DT/this is/VBZ/is true/JJ/true /,/, we/PRP/we are/VBP/are done/NNP/done. because/IN/because /,/, we/PRP/we can/MD/can actually/RB/actually /,/, prove/VBP/prove this/DT/this by/IN/by induction/NNP/induction. even/RB/even /,/, if/IN/if you/PRP/you do/VBP/do not/RB/not understand/VB/understand why/WRB/why we/PRP/we are/VBP/are done/VBN/done at/IN/at this/DT/this point/NNP/point. we/PRP/we would/MD/would like/VB/like to/TO/to find/VB/find a/DT/a c/NN/c which/WDT/which satisfies/NNS/satisfies this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us find/VB/find that/NNP/that. so/RB/so /,/, we/PRP/we want/VBP/want c/NN/c 1/CD/1 plus/CC/plus 1/CD/1. n/NN/n plus/CC/plus this/DT/this plus/NN/plus this/DT/this less/NN/less than/IN/than equal/JJ/equal to/TO/to c/VB/c n/NNP/n. so/RB/so /,/, n/IN/n cancels/NNS/cancels from/IN/from these/NNP/these. so/RB/so /,/, i/PRP/i want/VBP/want c/JJ/c 1/CD/1 plus/NNS/plus 1/CD/1 less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c minus/NN/minus c/NN/c by/IN/by 5/CD/5 minus/NN/minus 3/CD/3 c/NN/c by/IN/by 4/CD/4. we/PRP/we want/VBP/want c/NN/c plus/CC/plus c/NN/c 1/CD/1 plus/CC/plus 1/CD/1 utmost/NN/utmost c/NN/c minus/NN/minus c/NN/c by/IN/by 5/CD/5 minus/NN/minus 3/CD/3 c/NN/c by/IN/by 4/CD/4. so/RB/so /,/, this/DT/this will/MD/will imply/RB/imply the/DT/the previous/JJ/previous statement/NNP/statement. and/CC/and just/RB/just simplifying/VBG/simplifying this/DT/this /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but c/NN/c by/IN/by 20/CD/20. c/NN/c times/NNS/times on/IN/on by/IN/by 20/CD/20. so/RB/so /,/, as/IN/as long/RB/long as/IN/as c/NN/c is/VBZ/is at/IN/at least/JJS/least 20/CD/20 times/NNS/times c/NN/c 1/CD/1 plus/CC/plus 1/CD/1 we/PRP/we are/VBP/are done/NNP/done. so/RB/so /,/, if/IN/if c/NN/c is/VBZ/is greater/JJR/greater than/IN/than equal/JJ/equal to/TO/to 20/CD/20 times/NNS/times c/NN/c 1/CD/1 plus/CC/plus 1/CD/1. we/PRP/we see/VBP/see that/IN/that /,/, this/DT/this quantity/NN/quantity is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to c/VB/c n/NNP/n. so/RB/so /,/, we/PRP/we can/MD/can choose/VB/choose c/NN/c to/TO/to be/VB/be 20/CD/20 c/NN/c 1/CD/1 plus/CC/plus 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 32/CD/32 /CD/) so/RB/so now/RB/now /,/, it/PRP/it looks/VBZ/looks like/IN/like t/NN/t n/NN/n is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 20/CD/20 times/NNS/times c/NN/c 1/CD/1 plus/CC/plus 1/CD/1 times/NNS/times n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a constant/NNP/constant. this/DT/this is/VBZ/is the/DT/the constant/JJ/constant c/NNP/c. this/DT/this now/RB/now /,/, we/PRP/we can/MD/can prove/VB/prove by/IN/by induction/NN/induction on/IN/on n/NN/n /,/, that/IN/that t/NN/t n/NN/n is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to this/DT/this c/NN/c times/VBZ/times n/NNP/n. we/PRP/we can/MD/can prove/VB/prove now/RB/now by/IN/by induction/NN/induction of/IN/of n/NNP/n. for/IN/for n/NN/n equals/NNS/equals 2/CD/2 it/PRP/it is/VBZ/is true/JJ/true /,/, because/IN/because you/PRP/you make/VBP/make just/RB/just one/CD/one comparison/NNP/comparison. and/CC/and for/IN/for the/DT/the inductive/JJ/inductive step/NN/step for/IN/for the/DT/the inductive/JJ/inductive step/NN/step we/PRP/we just/RB/just observe/VBP/observe that/IN/that /,/, t/NN/t n/NN/n by/IN/by the/DT/the recurrence/NN/recurrence is/VBZ/is utmost/VBN/utmost c/NN/c 1/CD/1 plus/CC/plus 1/CD/1 n/NN/n plus/CC/plus t/NN/t n/NN/n by/IN/by 5/CD/5 plus/CC/plus 3/CD/3 n/NN/n by/IN/by 4/CD/4. and/CC/and now/RB/now i/PRP/i can/MD/can use/VB/use induction/NNP/induction. so/RB/so /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 23/CD/23 /CD/) /CD/) t/NN/t n/NN/n by/IN/by 5/CD/5 us/PRP/us utmost/RB/utmost c/VBP/c n/NN/n by/IN/by 5/CD/5. and/CC/and this/DT/this is/VBZ/is utmost/VBN/utmost this/DT/this much/NNP/much. and/CC/and the/DT/the way/NN/way we/PRP/we have/VBP/have chosen/VBN/chosen c/NN/c /,/, this/DT/this sum/NN/sum is/VBZ/is utmost/VBN/utmost c/NN/c n/NNP/n. so/RB/so /,/, the/DT/the proof/NN/proof now/RB/now follows/VBZ/follows by/IN/by induction/NNP/induction. in/IN/in fact/NN/fact /,/, initially/RB/initially we/PRP/we guessed/VBD/guessed that/IN/that t/NN/t n/NN/n is/VBZ/is utmost/VBN/utmost c/NN/c times/NNS/times n/NNP/n. and/CC/and the/DT/the plan/NN/plan was/VBD/was to/TO/to use/VB/use induction/NNP/induction. somehow/NN/somehow /,/, use/VBP/use induction/NN/induction and/CC/and prove/VB/prove this/NNP/this. and/CC/and you/PRP/you just/RB/just follow/VBP/follow your/PRP$/your nose/NN/nose in/IN/in the/DT/the induction/NN/induction substitute/NN/substitute c/NNP/c. and/CC/and find/VB/find out/RP/out /:/( /:/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 54/CD/54 /CD/) /CD/) what/WP/what is/VBZ/is the/DT/the c/NN/c that/IN/that helps/NNS/helps you/PRP/you finish/VBP/finish the/DT/the inductive/JJ/inductive /NN/( /:/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 58/CD/58 /CD/) /CD/) /./. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the other/JJ/other way/NN/way of/IN/of solving/VBG/solving recurrence/NN/recurrence relations/NNP/relations. if/IN/if you/PRP/you can/MD/can guess/VB/guess the/DT/the answer/NN/answer somehow/NN/somehow /,/, then/RB/then you/PRP/you know/VBP/know that/IN/that you/PRP/you want/VBP/want to/TO/to prove/VB/prove this/DT/this by/IN/by induction/NNP/induction. so/RB/so /,/, try/NN/try proving/VBG/proving it/PRP/it by/IN/by induction/NN/induction and/CC/and come/VB/come up/RP/up with/IN/with the/DT/the right/NN/right constants/NNP/constants. and/CC/and then/RB/then you/PRP/you can/MD/can once/RB/once you/PRP/you have/VB/have found/VBN/found it/PRP/it /,/, once/RB/once you/PRP/you plug/VBP/plug it/PRP/it in/IN/in and/CC/and then/RB/then find/VB/find out/RP/out what/WP/what and/CC/and figure/VBP/figure out/RP/out what/WP/what constants/NNS/constants to/TO/to use/VB/use then/RB/then you/PRP/you can/MD/can write/VB/write the/DT/the whole/JJ/whole thing/NN/thing by/IN/by induction/NNP/induction. so/RB/so /,/, this/DT/this proves/NNS/proves that/IN/that the/DT/the time/NN/time taken/VBN/taken by/IN/by our/PRP$/our algorithm/NN/algorithm is/VBZ/is in/IN/in fact/NN/fact /,/, linear/JJ/linear in/IN/in n/NNP/n. so/RB/so /,/, you/PRP/you can/MD/can find/VB/find the/DT/the median/JJ/median in/IN/in time/NN/time /,/, which/WDT/which is/VBZ/is linear/JJ/linear in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the array/NNP/array. if/IN/if you/PRP/you use/VBP/use this/DT/this /,/, use/VBP/use this/DT/this algorithm/NN/algorithm with/IN/with quick/JJ/quick sort/NN/sort then/RB/then the/DT/the worst/JJS/worst case/NN/case time/NN/time for/IN/for quick/JJ/quick sort/NN/sort would/MD/would be/VB/be n/VBN/n log/NN/log n/NNP/n. but/CC/but that/IN/that is/VBZ/is if/IN/if you/PRP/you pick/VBP/pick the/DT/the pivot/NN/pivot as/IN/as a/DT/a median/JJ/median each/NN/each time/NNP/time. the/DT/the normal/JJ/normal way/NN/way you/PRP/you do/VBP/do it/PRP/it of/IN/of course/NN/course /,/, it/PRP/it turns/VBZ/turns out/RP/out to/TO/to be/VB/be order/NN/order n/NN/n square/NNP/square. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 8/CD/8 divide/JJ/divide and/CC/and conquer/NN/conquer /:/- iii/NN/iii surfing/VBG/surfing lower/JJR/lower bounds/NNS/bounds we/PRP/we will/MD/will again/RB/again look/VB/look at/IN/at sorting/NNP/sorting. many/JJ/many of/IN/of these/DT/these algorithms/NNS/algorithms merge/VBP/merge sort/NN/sort /,/, quick/JJ/quick sort/NN/sort and/CC/and some/DT/some of/IN/of the/DT/the other/JJ/other sorting/NN/sorting algorithms/NNS/algorithms that/WDT/that we/PRP/we have/VBP/have studied/NNP/studied. all/DT/all of/IN/of them/PRP/them seem/VBP/seem to/TO/to take/VB/take n/NN/n log/NN/log n/NN/n time/NNP/time. i/PRP/i think/VBP/think it/PRP/it is/VBZ/is a/DT/a good/JJ/good question/NN/question to/TO/to ask/VB/ask /,/, if/IN/if we/PRP/we can/MD/can do/VB/do faster/NNP/faster. and/CC/and we/PRP/we this/DT/this n/NN/n log/NN/log n/NN/n /,/, which/WDT/which most/RBS/most of/IN/of the/DT/the sorting/NN/sorting algorithms/NNS/algorithms seem/VBP/seem to/TO/to take/NNP/take. and/CC/and this/DT/this is/VBZ/is the/DT/the question/NN/question /,/, we/PRP/we would/MD/would like/VB/like to/TO/to address/VB/address in/IN/in this/DT/this part/NN/part of/IN/of the/DT/the course/NNP/course. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will show/VB/show that/IN/that for/IN/for a/DT/a large/JJ/large family/NN/family you/PRP/you have/VBP/have sorting/VBG/sorting algorithms/NNP/algorithms. n/NN/n log/NN/log n/NN/n is/VBZ/is the/DT/the best/JJS/best that/IN/that they/PRP/they can/MD/can do/VB/do. if/IN/if we/PRP/we sort/VBP/sort of/IN/of restrict/NN/restrict /,/, the/DT/the kinds/NNS/kinds of/IN/of things/NNS/things that/WDT/that algorithms/VBZ/algorithms can/MD/can do/VB/do on/IN/on inputs/NNP/inputs. and/CC/and n/NN/n log/NN/log n/NN/n is/VBZ/is the/DT/the best/JJS/best that/IN/that we/PRP/we can/MD/can do/VB/do. now/RB/now /,/, we/PRP/we look/VBP/look at/IN/at merge/NN/merge sort/NNP/sort. let/NN/let us/PRP/us take/VBP/take merge/NN/merge sort/NN/sort /,/, but/CC/but whatever/RB/whatever i/PRP/i say/VBP/say is/VBZ/is actually/RB/actually true/JJ/true even/RB/even for/IN/for /,/, let/VB/let us/PRP/us say/VB/say quick/JJ/quick sort/NNP/sort. for/IN/for merge/NN/merge sort/NN/sort the/DT/the what/WP/what really/RB/really happens/NNP/happens. you/PRP/you split/VBD/split the/DT/the array/NN/array into/IN/into two/CD/two parts/NNP/parts. and/CC/and then/RB/then /,/, recursively/RB/recursively sort/NN/sort these/DT/these things/NNP/things. and/CC/and then/RB/then /,/, you/PRP/you merge/VBP/merge these/DT/these two/CD/two sorted/VBN/sorted arrays/NNP/arrays. that/IN/that is/VBZ/is the/DT/the crucial/JJ/crucial step/NNP/step. what/WP/what happens/VBZ/happens when/WRB/when you/PRP/you merge/VBP/merge two/CD/two sorted/VBN/sorted sub/NN/sub arrays/NNS/arrays /,/, or/CC/or when/WRB/when you/PRP/you merge/VBP/merge two/CD/two sorted/VBN/sorted lists/NNP/lists. well/RB/well /,/, you/PRP/you compare/VBP/compare two/CD/two elements/NNS/elements and/CC/and then/RB/then /,/, move/NN/move them/PRP/them out/NNP/out. compare/VBP/compare the/DT/the first/JJ/first element/NN/element in/IN/in the/DT/the list/NNP/list. that/IN/that is/VBZ/is the/DT/the smallest/JJS/smallest and/CC/and we/PRP/we put/VBD/put it/PRP/it as/IN/as a/DT/a first/JJ/first element/NNP/element. then/RB/then /,/, move/NN/move your/PRP$/your pointers/NNS/pointers and/CC/and so/RB/so on/IN/on /,/, and/CC/and so/RB/so forth/NNP/forth. so/IN/so /,/, the/DT/the most/RBS/most important/JJ/important step/NN/step there/EX/there is/VBZ/is comparing/VBG/comparing two/CD/two elements/NNS/elements and/CC/and then/RB/then /,/, some/DT/some reordering/NNP/reordering. so/RB/so /,/, the/DT/the only/JJ/only operation/NN/operation that/WDT/that /,/, you/PRP/you actually/RB/actually do/VBP/do on/IN/on these/DT/these elements/NNS/elements in/IN/in the/DT/the sorted/VBN/sorted /,/, in/IN/in the/DT/the array/NN/array is/VBZ/is comparing/VBG/comparing two/CD/two elements/NNS/elements and/CC/and moving/VBG/moving them/PRP/them out/NNP/out. so/RB/so /,/, this/DT/this property/NN/property actually/RB/actually holds/VBZ/holds even/RB/even for/IN/for quick/JJ/quick sort/NNP/sort. so/RB/so /,/, always/RB/always quick/JJ/quick sort/NN/sort term/NN/term /,/, you/PRP/you pick/VBP/pick a/DT/a pivot/NN/pivot /,/, by/IN/by your/PRP$/your favorite/JJ/favorite procedure/NNP/procedure. and/CC/and now/RB/now you/PRP/you compare/VBP/compare every/DT/every element/NN/element with/IN/with the/DT/the pivot/NNP/pivot. once/RB/once you/PRP/you compare/VBP/compare every/DT/every element/NN/element with/IN/with the/DT/the pivot/NN/pivot and/CC/and then/RB/then /,/, you/PRP/you move/VBP/move these/DT/these elements/NNS/elements around/NNP/around. so/RB/so /,/, the/DT/the basic/JJ/basic operation/NN/operation on/IN/on two/CD/two elements/NNS/elements of/IN/of the/DT/the array/NN/array is/VBZ/is compare/JJ/compare these/DT/these two/NNP/two. figure/NN/figure out/RP/out which/WDT/which one/CD/one is/VBZ/is larger/JJR/larger /,/, which/WDT/which one/CD/one is/VBZ/is smaller/NNP/smaller. so/RB/so /,/, again/RB/again the/DT/the usual/JJ/usual sort/NN/sort of/IN/of operation/NN/operation is/VBZ/is compared/VBN/compared /,/, is/VBZ/is looking/VBG/looking at/IN/at two/CD/two elements/NNS/elements in/IN/in the/DT/the array/NN/array /,/, comparing/VBG/comparing them/NNP/them. and/CC/and then/RB/then /,/, based/VBN/based on/IN/on the/DT/the result/NN/result /,/, i/PRP/i mean/VBP/mean if/IN/if one/CD/one is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the other/NNP/other. or/CC/or first/JJ/first one/CD/one is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the other/JJ/other /,/, then/RB/then you/PRP/you sort/NN/sort of/IN/of either/DT/either switch/NN/switch them/PRP/them around/IN/around or/CC/or change/NN/change the/DT/the order/NNP/order. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial operation/NN/operation /,/, that/IN/that you/PRP/you do/VBP/do on/IN/on the/DT/the array/NN/array element/NNP/element. you/PRP/you do/VBP/do not/RB/not add/VB/add them/PRP/them /,/, subtract/VBP/subtract them/PRP/them /,/, divide/VBP/divide them/NNP/them. so/RB/so /,/, the/DT/the operations/NNS/operations that/IN/that /,/, we/PRP/we use/VBP/use in/IN/in at/IN/at least/JJS/least these/DT/these popular/JJ/popular sorting/NN/sorting algorithms/NNS/algorithms /,/, is/VBZ/is compare/JJ/compare two/CD/two elements/NNP/elements. may/MD/may be/VB/be swap/NN/swap them/PRP/them or/CC/or move/VB/move them/PRP/them around/NNP/around. so/RB/so /,/, if/IN/if these/DT/these are/VBP/are the/DT/the only/JJ/only things/NNS/things /,/, that/IN/that you/PRP/you can/MD/can do/VB/do with/IN/with array/NN/array elements/NNP/elements. then/RB/then /,/, you/PRP/you need/VBP/need n/NN/n log/NN/log n/NN/n comparisons/NNS/comparisons to/TO/to sort/VB/sort an/DT/an array/NNP/array. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our goal/NNP/goal. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to show/NNP/show. then/RB/then /,/, how/WRB/how do/VBP/do we/PRP/we go/VB/go about/IN/about doing/VBG/doing this/NNP/this. well/RB/well /,/, even/RB/even if/IN/if you/PRP/you recall/VBP/recall /,/, we/PRP/we showed/VBD/showed that/IN/that /,/, find/VBP/find the/DT/the minimum/JJ/minimum you/PRP/you needed/VBD/needed n/NN/n minus/NN/minus 1/CD/1 comparison/NNP/comparison. and/CC/and even/RB/even there/RB/there /,/, it/PRP/it was/VBD/was not/RB/not an/DT/an obvious/JJ/obvious /,/, sort/NN/sort of/IN/of the/DT/the solution/NN/solution was/VBD/was not/RB/not absolutely/RB/absolutely obvious/NNP/obvious. you/PRP/you had/VBD/had to/TO/to do/VB/do little/JJ/little bit/NN/bit of/IN/of work/NNP/work. and/CC/and for/IN/for this/DT/this actually/RB/actually we/PRP/we need/VBP/need to/TO/to do/VB/do a/DT/a little/RB/little bit/NN/bit more/JJR/more of/IN/of work/NN/work /,/, but/CC/but it/PRP/it is/VBZ/is not/RB/not difficult/NNP/difficult. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing is/VBZ/is to/TO/to notice/NN/notice that/IN/that these/DT/these algorithms/NNS/algorithms can/MD/can be/VB/be written/VBN/written as/IN/as flowcharts/NNS/flowcharts /,/, or/CC/or comparison/NN/comparison trees/NNP/trees. what/WP/what is/VBZ/is a/DT/a comparison/NN/comparison tree/NN/tree ?/./? well/RB/well /,/, basic/JJ/basic block/NN/block is/VBZ/is comparison/NN/comparison between/IN/between two/CD/two elements/NNP/elements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 52/CD/52 /CD/) /./. so/RB/so /,/, i/PRP/i compare/VBP/compare two/CD/two elements/NNS/elements /,/, a/DT/a i/PRP/i and/CC/and a/DT/a j/NN/j upon/IN/upon array/NN/array /,/, for/IN/for a/DT/a branch/NN/branch this/DT/this way/NN/way /,/, if/IN/if a/DT/a i/NN/i less/RBR/less than/IN/than a/DT/a j/NNP/j. i/PRP/i branch/VBP/branch this/DT/this way/NN/way /,/, if/IN/if a/DT/a j/NN/j is/VBZ/is greater/JJR/greater than/IN/than a/DT/a i/NNP/i. we/PRP/we will/MD/will assume/VB/assume that/IN/that /,/, array/VBP/array elements/NNS/elements are/VBP/are distinct/JJ/distinct /,/, which/WDT/which means/VBZ/means i/PRP/i will/MD/will never/RB/never have/VB/have two/CD/two of/IN/of them/PRP/them equal/NNP/equal. so/RB/so /,/, compare/VBP/compare two/CD/two elements/NNS/elements /,/, branch/NN/branch this/DT/this way/NN/way if/IN/if a/DT/a i/NN/i is/VBZ/is less/JJR/less than/IN/than a/DT/a j/NN/j /,/, branch/NN/branch the/DT/the other/JJ/other way/NN/way if/IN/if a/DT/a i/NN/i is/VBZ/is greater/JJR/greater than/IN/than a/DT/a j/NNP/j. now/RB/now /,/, using/VBG/using these/DT/these as/IN/as building/NN/building blocks/NNS/blocks /,/, i/PRP/i can/MD/can build/VB/build the/DT/the large/JJ/large flow/NN/flow chart/NNP/chart. so/RB/so /,/, somewhere/EX/somewhere here/RB/here /,/, maybe/RB/maybe i/PRP/i can/MD/can compare/VB/compare two/CD/two elements/NNS/elements /,/, two/CD/two other/JJ/other elements/NNS/elements a/DT/a k/NN/k and/CC/and a/DT/a l/NNP/l. then/RB/then again/RB/again branch/NN/branch and/CC/and so/RB/so on/NNP/on. and/CC/and at/IN/at the/DT/the end/NN/end /,/, i/PRP/i will/MD/will have/VB/have these/DT/these leaves/NNS/leaves where/WRB/where i/PRP/i will/MD/will output/NNP/output. so/RB/so /,/, the/DT/the output/NN/output for/IN/for us/PRP/us is/VBZ/is the/DT/the order/NN/order /,/, is/VBZ/is the/DT/the sorted/VBN/sorted order/NNP/order. so/RB/so /,/, we/PRP/we will/MD/will look/VB/look at/IN/at flow/NN/flow charts/NNS/charts /,/, which/WDT/which look/NN/look like/IN/like this/NNP/this. the/DT/the input/NN/input to/TO/to a/DT/a flow/NN/flow chart/NN/chart is/VBZ/is just/RB/just an/DT/an array/NN/array a/DT/a /,/, the/DT/the input/NN/input is/VBZ/is an/DT/an array/NN/array a/NNP/a. and/CC/and you/PRP/you go/VBP/go through/IN/through these/DT/these flow/NN/flow charts/NNS/charts and/CC/and at/IN/at these/DT/these leaves/NNS/leaves /,/, will/MD/will output/VB/output the/DT/the sorted/VBN/sorted order/NNP/order. this/DT/this is/VBZ/is the/DT/the model/NN/model that/IN/that we/PRP/we are/VBP/are looking/VBG/looking at/NNP/at. let/NN/let us/PRP/us do/VBP/do a/DT/a small/JJ/small example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06.35/CD/06.35 /CD/) so/RB/so /,/, for/IN/for instance/NN/instance if/IN/if i/PRP/i have/VBP/have two/CD/two elements/NNS/elements /,/, then/RB/then let/VB/let us/PRP/us say/VB/say a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2 /,/, i/PRP/i compare/VBP/compare a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2. if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than the/DT/the order/NN/order output/NN/output is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2. this/DT/this is/VBZ/is in/IN/in sorted/VBN/sorted order/NNP/order. if/IN/if a/DT/a 1/CD/1 is/VBZ/is larger/JJR/larger /,/, the/DT/the order/NN/order i/PRP/i output/VBD/output is/VBZ/is a/DT/a 2/CD/2 /,/, a/DT/a 1/CD/1. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a small/JJ/small flow/NN/flow chart/NN/chart /,/, that/IN/that sorts/NNS/sorts 2/CD/2 numbers/NNP/numbers. so/RB/so /,/, it/PRP/it sorts/VBZ/sorts two/CD/two elements/NNS/elements an/DT/an array/NN/array /,/, basically/RB/basically works/VBZ/works on/IN/on arrays/NNS/arrays of/IN/of size/NN/size 2/CD/2 and/CC/and sorts/NNS/sorts these/DT/these arrays/NNP/arrays. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say 3/CD/3 /,/, what/WP/what if/IN/if the/DT/the array/NN/array size/NN/size is/VBZ/is 3/CD/3 ?/./? so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what to/TO/to do/NNP/do. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 20/CD/20 /CD/) so/RB/so /,/, you/PRP/you compare/VBP/compare /,/, let/VB/let us/PRP/us say/VB/say a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2. now/RB/now /,/, if/IN/if a/DT/a 1/CD/1 is/VBZ/is less/JJR/less let/NN/let us/PRP/us say/VBP/say i/PRP/i compare/VBP/compare a/DT/a 1/CD/1 with/IN/with a/DT/a 3/CD/3 /,/, say/VB/say a/DT/a 1/CD/1 is/VBZ/is less/NNP/less. now/RB/now /,/, i/PRP/i know/VBP/know at/IN/at this/DT/this point/NN/point /,/, that/IN/that a/DT/a 1/CD/1 is/VBZ/is the/DT/the smallest/NNP/smallest. so/RB/so /,/, i/PRP/i would/MD/would like/VB/like to/TO/to compare/VB/compare a/DT/a 2/CD/2 and/CC/and a/DT/a 3/CD/3. so/RB/so /,/, here/RB/here a/DT/a 2/CD/2 is/VBZ/is greater/JJR/greater than/IN/than a/DT/a 3/CD/3 /,/, here/RB/here a/DT/a 2/CD/2 is/VBZ/is less/JJR/less than/IN/than a/DT/a 3/CD/3. the/DT/the sorted/JJ/sorted order/NN/order here/RB/here is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2 /,/, a/DT/a 3/CD/3. here/RB/here it/PRP/it is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 3/CD/3 /,/, a/DT/a 2/CD/2 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, you/PRP/you can/MD/can sort/VB/sort of/IN/of fill/NN/fill this/DT/this up/NNP/up. so/RB/so /,/, you/PRP/you can/MD/can write/VB/write down/RP/down a/DT/a flow/NN/flow chart/NN/chart like/IN/like this/DT/this /,/, with/IN/with these/DT/these are/VBP/are the/DT/the leaves/NNS/leaves where/WRB/where you/PRP/you get/VBP/get the/DT/the answer/NN/answer /,/, which/WDT/which is/VBZ/is the/DT/the array/NN/array in/IN/in sorted/JJ/sorted order/NNP/order. now/RB/now /,/, merge/VBP/merge sort/NN/sort can/MD/can also/RB/also be/VB/be depicted/VBN/depicted like/IN/like this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, why/WRB/why that/IN/that is/VBZ/is do/NNP/do. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 34/CD/34 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at merge/NN/merge sort/NN/sort or/CC/or when/WRB/when four/CD/four elements/NNP/elements. so/RB/so /,/, i/PRP/i have/VBP/have four/CD/four elements/NNS/elements a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2 /,/, a/DT/a 3/CD/3 /,/, a/DT/a 4/CD/4. and/CC/and i/PRP/i want/VBP/want to/TO/to sort/VB/sort of/IN/of run/VBN/run merge/NN/merge sort/NN/sort on/IN/on this/NNP/this. well/RB/well /,/, we/PRP/we divide/VBP/divide this/DT/this into/IN/into two/CD/two /,/, recurs/NNS/recurs on/IN/on this/DT/this part/NN/part /,/, then/RB/then recurs/VBZ/recurs on/IN/on this/DT/this part/NN/part and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is a/DT/a merge/NNP/merge. when/WRB/when we/PRP/we recurs/VBZ/recurs on/IN/on this/DT/this part/NN/part /,/, the/DT/the first/JJ/first comparison/NN/comparison we/PRP/we do/VBP/do is/VBZ/is between/IN/between a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first comparison/NN/comparison we/PRP/we do/VBP/do ;/:/; and/CC/and this/DT/this could/MD/could be/VB/be a/DT/a 1/CD/1 is/VBZ/is less/JJR/less than/IN/than a/DT/a 2/CD/2. this/DT/this is/VBZ/is a/DT/a 1/CD/1 could/MD/could be/VB/be greater/JJR/greater than/IN/than a/DT/a 2/CD/2 /,/, we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what this/DT/this is/NNP/is. here/RB/here the/DT/the sorted/VBN/sorted order/NN/order which/WDT/which is/VBZ/is returned/VBN/returned here/RB/here is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2. on/IN/on this/DT/this side/NN/side it/PRP/it is/VBZ/is a/DT/a 2/CD/2 /,/, a/DT/a 1/CD/1. whichever/NN/whichever branch/NN/branch we/PRP/we choose/VBP/choose /,/, now/RB/now we/PRP/we have/VBP/have to/TO/to recurs/NNS/recurs on/IN/on the/DT/the right/NN/right hand/NN/hand side/NNP/side. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the next/JJ/next comparison/NN/comparison we/PRP/we do/VBP/do /,/, a/DT/a 3/CD/3 and/CC/and a/DT/a 4/CD/4 ;/:/; and/CC/and well/RB/well these/DT/these give/JJ/give again/NN/again two/CD/two sort/NN/sort of/IN/of outputs/NNP/outputs. now/RB/now /,/, at/IN/at this/DT/this step/NN/step /,/, we/PRP/we are/VBP/are up/RP/up to/TO/to the/DT/the merge/NNP/merge. the/DT/the lower/JJR/lower things/NNS/things return/VBP/return /,/, these/DT/these two/CD/two sorted/VBN/sorted orders/NNP/orders. and/CC/and now/RB/now we/PRP/we are/VBP/are down/RB/down to/TO/to the/DT/the merge/NN/merge /,/, the/DT/the top/JJ/top level/NN/level of/IN/of recursion/NNP/recursion. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take this/DT/this portion/NNP/portion. what/WP/what are/VBP/are the/DT/the two/CD/two elements/NNS/elements /,/, that/IN/that are/VBP/are compared/VBN/compared ?/./? here/RB/here i/PRP/i know/VBP/know that/IN/that a/DT/a 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than a/DT/a 2/CD/2. so/RB/so /,/, the/DT/the first/JJ/first one/CD/one returns/NNS/returns /,/, this/DT/this side/NN/side returns/NNS/returns a/DT/a 2/CD/2 a/DT/a 1/CD/1. and/CC/and here/RB/here /,/, i/PRP/i know/VBP/know a/DT/a 3/CD/3 is/VBZ/is less/JJR/less than/IN/than a/DT/a 4/CD/4. so/RB/so /,/, the/DT/the second/JJ/second list/NN/list returned/VBD/returned is/VBZ/is a/DT/a 3/CD/3 a/DT/a 4/CD/4. these/DT/these are/VBP/are the/DT/the two/CD/two lists/NNP/lists. so/RB/so /,/, the/DT/the two/CD/two elements/NNS/elements compared/VBN/compared here/RB/here /,/, are/VBP/are a/DT/a 2/CD/2 and/CC/and a/DT/a 3/CD/3. the/DT/the smallest/JJS/smallest elements/NNS/elements from/IN/from the/DT/the two/CD/two lists/NNS/lists are/VBP/are compared/VBN/compared now/NNP/now. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what is/VBZ/is compared/VBN/compared here/-NONE-/here. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go down/RP/down one/CD/one more/JJR/more step/NN/step and/CC/and see/VB/see how/WRB/how this/DT/this looks/VBZ/looks like/NNP/like. so/RB/so /,/, here/RB/here a/DT/a 2/CD/2 is/VBZ/is less/JJR/less or/CC/or a/DT/a 3/CD/3 is/VBZ/is less/NNP/less. supposing/NN/supposing /,/, we/PRP/we followed/VBD/followed this/DT/this branch/NN/branch /,/, what/WP/what is/VBZ/is the/DT/the next/JJ/next clue/NN/clue /,/, which/WDT/which are/VBP/are compared/VBN/compared for/IN/for merge/NN/merge sort/NNP/sort. well/RB/well /,/, a/DT/a 3/CD/3 is/VBZ/is less/JJR/less than/IN/than a/DT/a 2/CD/2. so/RB/so /,/, a/DT/a 3/CD/3 is/VBZ/is moved/VBN/moved to/TO/to the/DT/the new/JJ/new list/NN/list and/CC/and our/PRP$/our pointers/NNS/pointers are/VBP/are at/IN/at a/DT/a 2/CD/2 and/CC/and a/DT/a 4/CD/4. so/RB/so /,/, the/DT/the next/JJ/next two/CD/two things/NNS/things /,/, which/WDT/which are/VBP/are compared/VBN/compared are/VBP/are a/DT/a 2/CD/2 and/CC/and a/DT/a 4/CD/4 and/CC/and so/RB/so on/NNP/on. i/PRP/i can/MD/can draw/VB/draw this/DT/this tree/NN/tree out/IN/out and/CC/and at/IN/at the/DT/the leaves/NNS/leaves of/IN/of this/DT/this tree/NN/tree /,/, are/VBP/are the/DT/the solution/NNP/solution. i/PRP/i mean/VBP/mean at/IN/at each/DT/each leaf/NN/leaf /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what is/VBZ/is the/DT/the output/NN/output /,/, what/WP/what is/VBZ/is the/DT/the sorted/VBN/sorted order/NN/order which/WDT/which it/PRP/it output/NNP/output. in/IN/in fact/NN/fact /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this tree/NN/tree /,/, this/DT/this tree/NN/tree is/VBZ/is a/DT/a binary/JJ/binary tree/NNP/tree. at/IN/at each/DT/each internal/JJ/internal load/NN/load /,/, we/PRP/we have/VBP/have a/DT/a comparison/NNP/comparison. so/RB/so /,/, we/PRP/we compare/VBP/compare two/CD/two elements/NNS/elements /,/, that/IN/that you/PRP/you branch/VBP/branch out/RP/out into/IN/into two/NNP/two. and/CC/and for/IN/for each/DT/each branch/NN/branch again/RB/again there/EX/there will/MD/will an/DT/an internal/JJ/internal node/NN/node /,/, you/PRP/you compare/VBP/compare two/CD/two elements/NNS/elements branch/NN/branch into/IN/into two/CD/two /,/, that/IN/that is/VBZ/is it/NNP/it. so/RB/so /,/, if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at it/PRP/it as/IN/as /,/, if/IN/if i/PRP/i forget/VBP/forget that/IN/that /,/, there/EX/there these/DT/these comparisons/NNS/comparisons etcetera/VBP/etcetera /,/, etcetera/NNP/etcetera. the/DT/the whole/JJ/whole structure/NN/structure looks/NNS/looks like/IN/like a/DT/a tree/NNP/tree. in/IN/in fact/NN/fact /,/, the/DT/the binary/JJ/binary tree/NN/tree and/CC/and there/EX/there are/VBP/are leaves/NNS/leaves /,/, and/CC/and at/IN/at these/DT/these leaves/NNS/leaves we/PRP/we have/VBP/have the/DT/the output/NNP/output. output/NN/output mean/NN/mean in/IN/in the/DT/the sorted/VBN/sorted order/NNP/order. so/RB/so /,/, when/WRB/when i/PRP/i sort/VBP/sort of/IN/of follow/JJ/follow this/DT/this tree/NN/tree down/RP/down to/TO/to a/DT/a leaf/NN/leaf /,/, i/PRP/i get/VBP/get the/DT/the answer/NNP/answer. this/DT/this leaf/NN/leaf whatever/NN/whatever is/VBZ/is the/DT/the answer/NN/answer is/VBZ/is the/DT/the output/NNP/output. the/DT/the one/CD/one thing/NN/thing to/TO/to notice/NN/notice is/VBZ/is that/IN/that /,/, this/DT/this tree/NN/tree is/VBZ/is different/JJ/different for/IN/for different/JJ/different sizes/NNS/sizes of/IN/of the/DT/the input/NNP/input. for/IN/for four/CD/four elements/NNS/elements /,/, i/PRP/i can/MD/can tell/VB/tell you/PRP/you what/WP/what the/DT/the merge/NN/merge sort/NN/sort tree/NN/tree looks/NNS/looks like/NNP/like. the/DT/the comparison/NN/comparison tree/NN/tree for/IN/for merge/NN/merge sort/NN/sort /,/, it/PRP/it has/VBZ/has some/DT/some structure/NNP/structure. and/CC/and in/IN/in fact/NN/fact /,/, just/RB/just the/DT/the way/NN/way i/PRP/i have/VBP/have written/VBN/written part/NN/part for/IN/for the/DT/the tree/NN/tree here/RB/here /,/, you/PRP/you can/MD/can actually/RB/actually write/VB/write down/IN/down the/DT/the entire/JJ/entire tree/NNP/tree. it/PRP/it will/MD/will take/VB/take some/DT/some time/NN/time and/CC/and space/NN/space /,/, but/CC/but if/IN/if you/PRP/you have/VBP/have the/DT/the patience/NN/patience /,/, you/PRP/you could/MD/could try/VB/try this/DT/this out/NNP/out. for/IN/for five/CD/five elements/NNS/elements again/RB/again /,/, there/EX/there is/VBZ/is a/DT/a tree/NNP/tree. for/IN/for six/CD/six elements/NNS/elements /,/, there/EX/there is/VBZ/is a/DT/a different/JJ/different tree/NN/tree and/CC/and so/RB/so on/IN/on and/CC/and so/RB/so forth/NNP/forth. if/IN/if i/PRP/i take/VBP/take /,/, if/IN/if i/PRP/i fix/VBP/fix the/DT/the number/NN/number of/IN/of elements/NNS/elements to/TO/to n/VB/n /,/, then/RB/then for/IN/for merge/NN/merge sort/NN/sort i/PRP/i can/MD/can write/VB/write down/RP/down the/DT/the comparison/NN/comparison tree/NN/tree /,/, which/WDT/which does/VBZ/does the/DT/the comparisons/NNS/comparisons in/IN/in the/DT/the same/JJ/same order/NN/order as/IN/as merge/NN/merge sort/NNP/sort. so/RB/so /,/, if/IN/if i/PRP/i follow/VBP/follow the/DT/the tree/NN/tree down/IN/down for/IN/for a/DT/a particular/JJ/particular input/NN/input /,/, the/DT/the comparisons/NNS/comparisons made/VBN/made will/MD/will be/VB/be the/DT/the same/NNP/same. the/DT/the order/NN/order of/IN/of comparisons/NNS/comparisons will/MD/will be/VB/be the/DT/the same/JJ/same /,/, as/IN/as that/DT/that made/VBN/made in/IN/in merge/NN/merge sort/NNP/sort. and/CC/and the/DT/the answer/NN/answer will/MD/will be/VB/be as/RB/as given/VBN/given by/IN/by merge/NN/merge sort/NNP/sort. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time /,/, what/WP/what is/VBZ/is the/DT/the notion/NN/notion of/IN/of time/NN/time required/VBN/required on/IN/on this/DT/this tree/NNP/tree. well/RB/well /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for /,/, let/VB/let us/PRP/us say/VB/say given/VBN/given an/DT/an input/NN/input /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is just/RB/just the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons you/PRP/you make/VBP/make till/RB/till you/PRP/you hit/VBD/hit a/DT/a leaf/NN/leaf /,/, in/IN/in this/DT/this tree/NNP/tree. so/RB/so /,/, given/VBN/given an/DT/an input/NN/input you/PRP/you make/VBP/make comparisons/NNS/comparisons /,/, then/RB/then you/PRP/you branch/VBP/branch either/DT/either on/IN/on the/DT/the left/NN/left or/CC/or right/NNP/right. then/RB/then /,/, you/PRP/you make/VBP/make some/DT/some other/JJ/other comparisons/NNS/comparisons branch/NN/branch etcetera/NN/etcetera /,/, etcetera/NN/etcetera /,/, finally/RB/finally you/PRP/you hit/VBD/hit a/DT/a leaf/NNP/leaf. the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is just/RB/just a/DT/a path/NN/path in/IN/in this/DT/this tree/NN/tree from/IN/from the/DT/the root/NN/root to/TO/to a/DT/a leaf/NNP/leaf. so/RB/so /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, which/WDT/which is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path followed/VBD/followed from/IN/from the/DT/the root/NN/root to/TO/to a/DT/a leaf/NNP/leaf. so/RB/so then/RB/then /,/, the/DT/the worst/JJS/worst case/NN/case time/NN/time /,/, what/WP/what is/VBZ/is the/DT/the worst/JJS/worst case/NN/case time/NN/time by/IN/by merge/NN/merge sort/NN/sort /,/, would/MD/would be/VB/be just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. the/DT/the worst/JJS/worst case/NN/case time/NN/time for/IN/for merge/NN/merge sort/NN/sort will/MD/will just/RB/just be/VB/be the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree ;/:/; which/WDT/which is/VBZ/is the/DT/the longest/JJS/longest root/NN/root leaf/NN/leaf path/NN/path in/IN/in this/DT/this tree/NNP/tree. i/PRP/i can/MD/can show/VB/show that/IN/that this/DT/this is/VBZ/is long/RB/long enough/NNP/enough. then/RB/then /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for merge/NN/merge sort/NN/sort will/MD/will also/RB/also be/VB/be that/IN/that much/NNP/much. and/CC/and that/IN/that is/VBZ/is the/DT/the goal/NN/goal ;/:/; and/CC/and we/PRP/we have/VBP/have most/JJS/most of/IN/of the/DT/the ingredients/NNS/ingredients in/IN/in place/NNP/place. we/PRP/we just/RB/just have/VBP/have to/TO/to make/VB/make certain/JJ/certain observations/NNP/observations. here/RB/here are/VBP/are two/CD/two critical/JJ/critical observations/NNP/observations. so/RB/so /,/, we/PRP/we have/VBP/have an/DT/an algorithm/NN/algorithm as/IN/as a/DT/a flowchart/NNP/flowchart. we/PRP/we have/VBP/have an/DT/an algorithm/NN/algorithm which/WDT/which sorts/NNS/sorts n/VBP/n numbers/NNP/numbers. and/CC/and it/PRP/it is/VBZ/is depicted/VBN/depicted as/RB/as a/DT/a flow/NN/flow chart/NN/chart where/WRB/where or/CC/or a/DT/a comparison/NN/comparison tree/NN/tree /,/, where/WRB/where at/IN/at each/DT/each node/NN/node you/PRP/you compare/VBP/compare to/TO/to a/DT/a level/NN/level that/WDT/that you/PRP/you branch/VBP/branch /,/, depending/VBG/depending on/IN/on which/WDT/which one/CD/one is/VBZ/is greater/NNP/greater. at/IN/at leaves/NNS/leaves we/PRP/we output/VBP/output sorted/VBN/sorted out/RP/out /,/, this/DT/this is/VBZ/is the/DT/the thing/NNP/thing. the/DT/the question/NN/question we/PRP/we ask/VBP/ask is/VBZ/is /,/, how/WRB/how /,/, what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of such/JJ/such a/DT/a tree/NN/tree /,/, how/WRB/how tall/JJ/tall is/VBZ/is such/JJ/such a/DT/a tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 55/CD/55 /CD/) here/RB/here are/VBP/are two/CD/two sort/NN/sort of/IN/of crucial/JJ/crucial observations/NNS/observations /,/, if/IN/if this/DT/this flow/NN/flow chart/NN/chart does/VBZ/does sort/NNP/sort. then/RB/then /,/, every/DT/every input/NN/input order/NN/order must/MD/must leads/NNS/leads to/TO/to a/DT/a leaf/NNP/leaf. different/JJ/different input/NN/input orders/NNS/orders lead/VBP/lead to/TO/to different/JJ/different leaves/NNP/leaves. so/RB/so /,/, why/WRB/why is/VBZ/is this/DT/this true/JJ/true ?/./? well/RB/well /,/, firstly/RB/firstly we/PRP/we will/MD/will assume/VB/assume that/IN/that inputs/NNS/inputs /,/, in/IN/in our/PRP$/our input/NN/input every/DT/every element/NN/element is/VBZ/is distinct/NNP/distinct. we/PRP/we do/VBP/do not/RB/not have/VB/have two/CD/two copies/NNS/copies of/IN/of the/DT/the same/JJ/same element/NNP/element. there/RB/there are/VBP/are n/VBN/n factorial/JJ/factorial orders/NNS/orders /,/, that/IN/that are/VBP/are possible/JJ/possible as/IN/as input/NNP/input. and/CC/and for/IN/for each/DT/each order/NN/order you/PRP/you make/VBP/make certain/JJ/certain comparisons/NNS/comparisons and/CC/and you/PRP/you trace/VBP/trace the/DT/the path/NN/path to/TO/to a/DT/a leaf/NNP/leaf. and/CC/and at/IN/at the/DT/the leaf/NN/leaf /,/, we/PRP/we have/VBP/have to/TO/to give/VB/give the/DT/the right/NN/right order/NN/order /,/, which/WDT/which is/VBZ/is a/DT/a permutation/NN/permutation of/IN/of the/DT/the input/NNP/input. and/CC/and for/IN/for every/DT/every input/NN/input order/NN/order /,/, you/PRP/you must/MD/must end/VB/end up/RP/up with/IN/with a/DT/a different/JJ/different leaf/NN/leaf /,/, because/IN/because the/DT/the permutations/NNS/permutations are/VBP/are different/NNP/different. so/RB/so /,/, for/IN/for instance/NN/instance /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at 1/CD/1 2/CD/2 3/CD/3 this/DT/this is/VBZ/is already/RB/already sorted/NNP/sorted. if/IN/if i/PRP/i look/VBP/look at/IN/at 1/CD/1 3/CD/3 2/CD/2 /,/, the/DT/the sorted/VBN/sorted order/NN/order is/VBZ/is 1/CD/1 2/CD/2 3/CD/3. so/RB/so /,/, i/PRP/i have/VBP/have to/TO/to interchange/VB/interchange the/DT/the last/JJ/last two/CD/two elements/NNP/elements. this/DT/this order/NN/order must/MD/must appear/VB/appear at/IN/at a/DT/a different/JJ/different leaf/NN/leaf /,/, which/WDT/which means/VBZ/means all/DT/all of/IN/of these/DT/these n/NN/n factorial/JJ/factorial permutations/NNS/permutations ;/:/; must/MD/must appear/VB/appear in/IN/in one/CD/one of/IN/of these/DT/these leaves/NNP/leaves. and/CC/and different/JJ/different permutations/NNS/permutations must/MD/must appear/VB/appear at/IN/at different/JJ/different leaves/NNP/leaves. so/RB/so /,/, because/IN/because of/IN/of the/DT/the order/NN/order of/IN/of the/DT/the input/NN/input is/VBZ/is different/JJ/different and/CC/and must/MD/must land/VB/land up/RP/up in/IN/in different/JJ/different leaf/NNP/leaf. i/PRP/i land/VBP/land up/RP/up in/IN/in the/DT/the same/JJ/same leaf/NN/leaf /,/, i/PRP/i will/MD/will give/VB/give the/DT/the same/JJ/same answer/NN/answer for/IN/for both/DT/both orders/NNS/orders /,/, which/WDT/which is/VBZ/is incorrect/NNP/incorrect. so/RB/so /,/, this/DT/this means/VBZ/means /,/, there/EX/there must/MD/must be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves in/IN/in this/DT/this binary/JJ/binary tree/NNP/tree. and/CC/and each/DT/each of/IN/of these/DT/these different/JJ/different orders/NNS/orders /,/, must/MD/must land/VB/land up/RP/up in/IN/in the/DT/the leaf/NNP/leaf. and/CC/and different/JJ/different orders/NNS/orders must/MD/must land/VB/land up/RP/up in/IN/in different/JJ/different leaves/NNS/leaves /,/, which/WDT/which means/VBZ/means there/RB/there must/MD/must be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves in/IN/in this/DT/this binary/JJ/binary tree/NNP/tree. so/RB/so /,/, intuitively/RB/intuitively you/PRP/you can/MD/can see/VB/see /,/, why/WRB/why the/DT/the height/NN/height must/MD/must be/VB/be large/NNP/large. so/RB/so /,/, if/IN/if i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree with/IN/with large/JJ/large number/NN/number of/IN/of leaves/NNS/leaves /,/, the/DT/the height/NN/height better/NN/better be/VB/be large/NNP/large. so/RB/so /,/, we/PRP/we will/MD/will invoke/VB/invoke theorems/NNS/theorems /,/, which/WDT/which you/PRP/you must/MD/must have/VB/have seen/VBN/seen in/IN/in discrete/JJ/discrete structures/NNS/structures ;/:/; and/CC/and we/PRP/we will/MD/will finish/VB/finish the/DT/the proof/NNP/proof. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this flow/NN/flow chart/NN/chart or/CC/or this/DT/this decision/NN/decision tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 06/CD/06 /CD/) then/RB/then /,/, i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree and/CC/and i/PRP/i know/VBP/know that/IN/that number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is at/IN/at least/JJS/least n/NN/n factorial/NNP/factorial. using/VBG/using these/DT/these /,/, i/PRP/i want/VBP/want to/TO/to conclude/VB/conclude that/IN/that the/DT/the height/NN/height is/VBZ/is at/IN/at least/JJS/least something/NNP/something. so/RB/so /,/, if/IN/if i/PRP/i can/MD/can put/VB/put something/NN/something here/RB/here /,/, the/DT/the height/NN/height at/IN/at least/JJS/least something/NNP/something. then/RB/then /,/, i/PRP/i know/VBP/know that/IN/that the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm must/MD/must also/RB/also be/VB/be at/IN/at least/JJS/least this/DT/this much/NNP/much. so/RB/so /,/, why/WRB/why can/MD/can i/VB/i say/VB/say this/DT/this is/VBZ/is the/DT/the height/NN/height is/VBZ/is most/JJS/most /JJ/( /NN/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 42/CD/42 /CD/) /CD/) /./. well/RB/well /,/, supposing/VBG/supposing i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of leaves/NNS/leaves /,/, that/IN/that this/DT/this can/MD/can have/NNP/have. this/DT/this is/VBZ/is something/NN/something which/WDT/which you/PRP/you have/VBP/have done/VBN/done in/IN/in discrete/JJ/discrete structures/NNS/structures /,/, so/RB/so let/VB/let us/PRP/us state/NN/state this/NNP/this. so/RB/so /,/, binary/JJ/binary tree/NN/tree of/IN/of height/NN/height h/NN/h has/VBZ/has at/IN/at most/JJS/most /,/, well/RB/well 2/CD/2 to/TO/to the/DT/the h/NN/h leaves/NNP/leaves. the/DT/the number/NN/number of/IN/of leaves/NNS/leaves can/MD/can be/VB/be at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the h/NNP/h. well/RB/well /,/, let/VB/let us/PRP/us i/PRP/i hope/VBP/hope you/PRP/you can/MD/can sort/VB/sort of/IN/of prove/NN/prove this/NNP/this. let/NN/let us/PRP/us give/VBP/give a/DT/a proof/NN/proof anyway/NNP/anyway. so/RB/so /,/, proof/IN/proof is/VBZ/is by/IN/by induction/NN/induction on/IN/on h/NN/h /,/, so/RB/so the/DT/the base/NN/base case/NN/case i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do this/NNP/this. h/NN/h equals/NNS/equals 1/CD/1 /,/, i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do this/DT/this /,/, so/RB/so the/DT/the inductive/JJ/inductive step/NNP/step. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we /:/( /:/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 46/CD/46 /CD/) /CD/) the/DT/the two/CD/two steps/NNP/steps. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 59/CD/59 /CD/) well/RB/well /,/, let/VB/let us/PRP/us look/VB/look at/IN/at a/DT/a tree/NN/tree /,/, that/IN/that t/NN/t be/VB/be a/DT/a binary/JJ/binary tree/NN/tree of/IN/of height/NN/height /,/, let/VB/let us/PRP/us say/VB/say k/NN/k plus/CC/plus 1/CD/1. so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that /,/, the/DT/the statement/NN/statement is/VBZ/is true/JJ/true for/IN/for all/DT/all binary/JJ/binary trees/NNS/trees of/IN/of height/NN/height k/NN/k or/CC/or smaller/NNP/smaller. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to prove/VB/prove /,/, the/DT/the statement/NN/statement for/IN/for a/DT/a height/NN/height k/NN/k plus/CC/plus 1/CD/1. so/RB/so /,/, the/DT/the inductive/JJ/inductive hypothesis/NN/hypothesis is/VBZ/is that/IN/that /,/, for/IN/for every/DT/every tree/NN/tree of/IN/of height/NN/height k/NN/k or/CC/or smaller/JJR/smaller /,/, the/DT/the statement/NN/statement holds/NNP/holds. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to prove/VB/prove this/DT/this for/IN/for tree/NN/tree of/IN/of height/NN/height k/NN/k plus/CC/plus 1/CD/1. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at t/NN/t /,/, t/NN/t has/VBZ/has a/DT/a root/NN/root and/CC/and then/RB/then /,/, there/EX/there are/VBP/are two/CD/two sub/NN/sub trees/NNP/trees. this/DT/this is/VBZ/is what/WP/what it/PRP/it looks/VBZ/looks like/IN/like t/NN/t 1/CD/1 and/CC/and t/NN/t 2/CD/2. now/RB/now /,/, well/RB/well i/PRP/i remove/VBP/remove the/DT/the root/NN/root and/CC/and now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to apply/VB/apply induction/NN/induction to/TO/to t/VB/t 1/CD/1 and/CC/and t/NN/t 2/CD/2. apply/RB/apply the/DT/the inductive/JJ/inductive hypothesis/NN/hypothesis to/TO/to t/VB/t 1/CD/1 and/CC/and t/NN/t 2/CD/2. well/RB/well /,/, this/DT/this had/VBD/had height/VBN/height k/NN/k plus/RB/plus 1/CD/1 /,/, which/WDT/which means/VBZ/means both/DT/both t/NN/t 1/CD/1 and/CC/and t/NN/t 2/CD/2 have/VBP/have height/VBN/height k/NN/k or/CC/or less/NNP/less. one/CD/one of/IN/of them/PRP/them has/VBZ/has height/VBN/height k/NN/k /,/, the/DT/the other/JJ/other could/MD/could be/VB/be k/NN/k or/CC/or it/PRP/it could/MD/could be/VB/be less/NNP/less. so/RB/so /,/, the/DT/the height/NN/height of/IN/of t/NN/t 1/CD/1 is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to k/NNP/k. similarly/RB/similarly /,/, height/RB/height of/IN/of t/NN/t 2/CD/2 is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to k/NNP/k. that/IN/that is/VBZ/is the/DT/the reason/NN/reason /,/, we/PRP/we can/MD/can apply/VB/apply the/DT/the inductive/JJ/inductive hypothesis/NNP/hypothesis. both/DT/both of/IN/of them/PRP/them have/VBP/have height/VBN/height less/NNP/less. now/RB/now /,/, we/PRP/we can/MD/can apply/VB/apply the/DT/the inductive/JJ/inductive hypothesis/NNP/hypothesis. so/RB/so /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 1/CD/1 /,/, is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the k/NNP/k. similarly/RB/similarly /,/, number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 2/CD/2 is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the k/NNP/k. and/CC/and now/RB/now you/PRP/you can/MD/can see/VB/see /,/, basically/RB/basically the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t /,/, is/VBZ/is number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 1/CD/1 plus/CC/plus the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 2/CD/2 ;/:/; which/WDT/which is/VBZ/is this/DT/this plus/NN/plus this/DT/this which/WDT/which is/VBZ/is at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the k/NN/k plus/VBZ/plus 1/CD/1. and/CC/and that/IN/that is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the proof/NNP/proof. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 28/CD/28 /CD/) so/RB/so /,/, let/VB/let us/PRP/us just/RB/just write/VBP/write this/DT/this /,/, so/RB/so number/NN/number of/IN/of leaves/NNS/leaves t/VBP/t equals/NNS/equals number/NN/number of/IN/of leaves/NNS/leaves t/VBP/t 1/CD/1 plus/NNS/plus number/NN/number of/IN/of leaves/NNS/leaves t/VBP/t 2/CD/2. that/IN/that is/VBZ/is less/JJR/less than/IN/than 2/CD/2 to/TO/to the/DT/the k/NN/k plus/VBZ/plus 2/CD/2 to/TO/to the/DT/the k/NN/k 2/CD/2 to/TO/to the/DT/the k/NN/k plus/VBZ/plus 1/CD/1. that/IN/that finishes/NNS/finishes the/DT/the inductive/JJ/inductive proof/NN/proof /,/, that/IN/that on/IN/on a/DT/a tree/NN/tree of/IN/of height/NN/height h/NNP/h. when/WRB/when i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the h/NNP/h. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 02/CD/02 /CD/) number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the h/NNP/h. well/RB/well taking/VBG/taking logs/NNS/logs /,/, i/PRP/i get/VBP/get log/JJ/log the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is the/DT/the lower/JJR/lower bound/NN/bound on/IN/on the/DT/the height/NNP/height. well/RB/well we/PRP/we know/VBP/know remember/NN/remember that/IN/that in/IN/in our/PRP$/our binary/JJ/binary tree/NN/tree /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves was/VBD/was n/VBN/n factorial/NNP/factorial. so/RB/so /,/, the/DT/the height/NN/height this/DT/this means/VBZ/means /,/, the/DT/the height/NN/height is/VBZ/is at/IN/at least/JJS/least log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n factorial/NNP/factorial. well/RB/well /,/, this/DT/this is/VBZ/is the/DT/the height/NN/height of/IN/of any/DT/any of/IN/of the/DT/the tree/NN/tree /,/, which/WDT/which is/VBZ/is related/VBN/related to/TO/to any/DT/any this/DT/this flowcharts/NNS/flowcharts /,/, which/WDT/which sort/NN/sort flowcharts/NNP/flowcharts. for/IN/for sorting/VBG/sorting we/PRP/we looked/VBD/looked at/IN/at these/DT/these flowcharts/NNP/flowcharts. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is n/VBN/n factorial/NNP/factorial. and/CC/and we/PRP/we have/VBP/have just/RB/just seen/VBN/seen that/IN/that /,/, the/DT/the height/NN/height must/MD/must be/VB/be at/IN/at least/JJS/least the/DT/the log/NN/log of/IN/of n/NN/n factorial/NNP/factorial. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this /,/, we/PRP/we are/VBP/are very/RB/very close/NNP/close. log/NN/log of/IN/of n/NN/n factorial/JJ/factorial is/VBZ/is at/IN/at least/JJS/least log/NN/log base/NN/base 2/CD/2 n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2 /,/, why/WRB/why is/VBZ/is this/DT/this true/JJ/true ?/./? well/RB/well /,/, this/DT/this is/VBZ/is true/JJ/true /,/, because/IN/because n/NN/n factorial/JJ/factorial is/VBZ/is n/VBN/n into/IN/into n/NN/n minus/NN/minus 1/CD/1 /,/, somewhere/RB/somewhere n/JJ/n by/IN/by 2/CD/2. and/CC/and then/RB/then /,/, all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to 1/CD/1 /,/, now/RB/now if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the top/JJ/top n/NN/n by/IN/by 2/CD/2 terms/NNS/terms /,/, all/DT/all of/IN/of them/PRP/them are/VBP/are greater/JJR/greater than/IN/than n/NN/n by/IN/by 2/CD/2. there/EX/there are/VBP/are n/NN/n by/IN/by 2/CD/2 terms/NNS/terms and/CC/and all/DT/all of/IN/of them/PRP/them are/VBP/are at/IN/at least/JJS/least n/NN/n by/IN/by 2/CD/2 /,/, all/DT/all of/IN/of whom/WP/whom are/VBP/are greater/JJR/greater than/IN/than equal/JJ/equal to/TO/to n/VB/n by/IN/by 2/CD/2. so/RB/so /,/, n/IN/n factorial/JJ/factorial is/VBZ/is at/IN/at least/JJS/least n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2. well/RB/well /,/, that/IN/that is/VBZ/is why/WRB/why this/DT/this is/VBZ/is true/JJ/true and/CC/and this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n by/IN/by 2/CD/2 log/NN/log n/NN/n by/IN/by 2/CD/2. this/DT/this is/VBZ/is omega/NN/omega n/NN/n log/NN/log n/NN/n /,/, so/RB/so the/DT/the time/NN/time taken/VBN/taken is/VBZ/is at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have proved/VBN/proved some/DT/some constant/JJ/constant times/NNS/times n/VBP/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this shows/VBZ/shows that/IN/that merge/NN/merge sort/NN/sort /,/, for/IN/for instance/NN/instance we/PRP/we know/VBP/know it/PRP/it takes/VBZ/takes maximum/NN/maximum time/NN/time n/NN/n log/NN/log n/NNP/n. but/CC/but /,/, there/EX/there are/VBP/are inputs/NNS/inputs on/IN/on which/WDT/which it/PRP/it takes/VBZ/takes /,/, i/PRP/i mean/VBP/mean log/JJ/log n/NN/n /,/, it/PRP/it must/MD/must take/NNP/take. so/RB/so /,/, similarly/RB/similarly quick/JJ/quick sort/NN/sort and/CC/and any/DT/any other/JJ/other algorithm/NN/algorithm in/IN/in this/DT/this model/NN/model /,/, which/WDT/which is/VBZ/is if/IN/if the/DT/the only/JJ/only thing/NN/thing which/WDT/which the/DT/the algorithm/NN/algorithm can/MD/can do/VB/do /,/, is/VBZ/is look/NN/look at/IN/at two/CD/two element/JJ/element /,/, compare/JJ/compare them/NNP/them. and/CC/and perhaps/RB/perhaps move/VB/move them/PRP/them around/IN/around /,/, swap/NN/swap them/PRP/them for/IN/for instance/NN/instance or/CC/or move/VB/move them/PRP/them around/NNP/around. if/IN/if this/DT/this is/VBZ/is the/DT/the only/JJ/only thing/NN/thing /,/, that/IN/that is/VBZ/is possible/NNP/possible. then/RB/then /,/, the/DT/the time/NN/time taken/VBN/taken by/IN/by any/DT/any such/JJ/such algorithm/NN/algorithm for/IN/for sorting/NN/sorting must/MD/must be/VB/be n/VBN/n log/NN/log n/NNP/n. there/EX/there are/VBP/are sorting/VBG/sorting algorithms/NNS/algorithms which/WDT/which do/VBP/do not/RB/not fit/VB/fit into/IN/into this/DT/this model/NNP/model. we/PRP/we will/MD/will not/RB/not cover/VB/cover those/DT/those /,/, hopefully/RB/hopefully we/PRP/we have/VBP/have covered/VBN/covered some/DT/some of/IN/of them/PRP/them in/IN/in your/PRP$/your data/NNS/data structures/NNS/structures course/NNP/course. these/DT/these are/VBP/are bucket/NN/bucket sort/NN/sort radix/NN/radix sort/NN/sort /,/, well/RB/well these/DT/these algorithms/NNS/algorithms differ/VBP/differ in/IN/in that/NNP/that. they/PRP/they you/PRP/you can/MD/can look/VB/look at/IN/at the/DT/the least/JJS/least significant/JJ/significant digit/NNP/digit. you/PRP/you can/MD/can divide/VB/divide /,/, you/PRP/you can/MD/can take/VB/take floors/NNS/floors of/IN/of these/DT/these numbers/NNP/numbers. if/IN/if they/PRP/they are/VBP/are integers/NNS/integers /,/, you/PRP/you can/MD/can take/VB/take floors/NNS/floors and/CC/and then/RB/then /,/, do/VBP/do funny/JJ/funny things/NNS/things with/IN/with them/NNP/them. the/DT/the difference/NN/difference between/IN/between these/DT/these algorithms/NNS/algorithms and/CC/and let/VB/let us/PRP/us say/VB/say something/NN/something like/IN/like merge/NN/merge sort/NNP/sort. is/VBZ/is merge/NN/merge sort/NN/sort /,/, when/WRB/when you/PRP/you look/VBP/look at/IN/at 2/CD/2 numbers/NNS/numbers the/DT/the only/JJ/only operation/NN/operation /,/, that/IN/that you/PRP/you can/MD/can do/VB/do is/VBZ/is compare/VB/compare them/NNP/them. on/IN/on any/DT/any element/NN/element /,/, if/IN/if i/PRP/i take/VBP/take an/DT/an element/NN/element of/IN/of the/DT/the array/NNP/array. only/RB/only thing/VBG/thing i/PRP/i am/VBP/am allowed/VBN/allowed to/TO/to do/VB/do on/IN/on this/DT/this element/NN/element is/VBZ/is compare/JJ/compare this/DT/this element/NN/element with/IN/with some/DT/some other/JJ/other element/NN/element in/IN/in the/DT/the array/NNP/array. i/PRP/i can/MD/can not/RB/not sort/VB/sort of/IN/of divide/NN/divide it/PRP/it by/IN/by 10/CD/10 /,/, 20/CD/20 /,/, 100/CD/100 whatever/NNP/whatever. i/PRP/i can/MD/can not/RB/not look/VB/look at/IN/at it/PRP/it is/VBZ/is least/JJS/least significant/JJ/significant bit/NN/bit etcetera/NN/etcetera /,/, etcetera/NNP/etcetera. that/IN/that is/VBZ/is as/IN/as far/RB/far as/IN/as sorting/VBG/sorting is/VBZ/is concerned/NNP/concerned. we/PRP/we will/MD/will continue/VB/continue with/IN/with our/PRP$/our discussion/NN/discussion of/IN/of algorithm/NN/algorithm design/NN/design techniques/NNS/techniques /,/, by/IN/by looking/NN/looking at/IN/at some/DT/some other/JJ/other problems/NNS/problems /,/, which/WDT/which are/VBP/are fairly/RB/fairly interesting/NNP/interesting. and/CC/and where/WRB/where this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer paradigm/NN/paradigm sort/NN/sort of/IN/of works/NNS/works /,/, and/CC/and gives/VBZ/gives you/PRP/you better/JJR/better results/NNP/results. in/IN/in some/DT/some cases/NNS/cases perhaps/RB/perhaps you/PRP/you the/DT/the algorithm/NN/algorithm /,/, that/IN/that we/PRP/we desire/NNP/desire. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 58/CD/58 /CD/) the/DT/the first/JJ/first one/CD/one is/VBZ/is this/DT/this /,/, so/RB/so you/PRP/you are/VBP/are you/PRP/you are/VBP/are given/VBN/given a/DT/a 2/CD/2 k/NNP/k. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the input/NN/input by/IN/by 2/CD/2 k/NN/k square/NNP/square. and/CC/and what/WP/what you/PRP/you want/VBP/want as/IN/as output/NN/output is/VBZ/is a/DT/a tiling/NN/tiling with/IN/with /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what all/PDT/all this/DT/this means/NNS/means /,/, with/IN/with this/NNP/this. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by tiling/NN/tiling /,/, a/DT/a tiling/NN/tiling essentially/RB/essentially means/VBZ/means /,/, i/PRP/i must/MD/must fill/VB/fill up/RP/up all/DT/all these/DT/these squares/NNP/squares. and/CC/and try/NN/try and/CC/and fill/NN/fill up/RP/up as/RB/as many/JJ/many squares/NNS/squares as/IN/as possible/JJ/possible with/IN/with pieces/NNS/pieces /,/, which/WDT/which look/NN/look like/IN/like this/NNP/this. so/RB/so /,/, each/DT/each piece/NN/piece is/VBZ/is /,/, let/VB/let us/PRP/us say/VB/say a/DT/a kind/NN/kind of/IN/of a/DT/a domino/NN/domino /,/, which/WDT/which sort/NN/sort of/IN/of looks/NNS/looks is/VBZ/is of/IN/of this/DT/this shape/NNP/shape. and/CC/and i/PRP/i want/VBP/want to/TO/to try/NN/try and/CC/and fill/NN/fill up/RP/up /,/, as/IN/as many/JJ/many squares/NNS/squares as/IN/as possible/JJ/possible in/IN/in this/NNP/this. so/RB/so /,/, well/RB/well you/PRP/you can/MD/can see/VB/see immediately/RB/immediately /,/, i/PRP/i may/MD/may not/RB/not be/VB/be able/JJ/able to/TO/to fill/VB/fill up/RP/up all/DT/all square/NNP/square. even/RB/even for/IN/for k/NN/k equals/NNS/equals 1/CD/1 /,/, if/IN/if i/PRP/i have/VBP/have a/DT/a 2/CD/2 by/IN/by 2/CD/2 square/JJ/square /,/, i/PRP/i have/VBP/have a/DT/a 2/CD/2 by/IN/by 2/CD/2 square/NNP/square. well/RB/well i/PRP/i can/MD/can put/VB/put one/CD/one of/IN/of them/NNP/them. so/RB/so /,/, i/PRP/i can/MD/can put/VB/put something/NN/something which/WDT/which fills/NNS/fills up/IN/up these/DT/these three/CD/three squares/NNS/squares and/CC/and this/DT/this will/MD/will be/VB/be an/DT/an empty/NN/empty square/NNP/square. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a tiling/NN/tiling of/IN/of a/DT/a 2/CD/2 by/IN/by 2/CD/2 square/JJ/square with/IN/with a/DT/a domino/NN/domino of/IN/of this/DT/this form/NN/form /,/, which/WDT/which does/VBZ/does everything/NN/everything except/IN/except one/CD/one square/NNP/square. so/RB/so /,/, what/WDT/what about/IN/about 2/CD/2 to/TO/to the/DT/the k/NN/k cross/NN/cross 2/CD/2 to/TO/to the/DT/the k/NNP/k. well/RB/well /,/, the/DT/the number/NN/number of/IN/of squares/NNS/squares /,/, we/PRP/we look/VBP/look at/IN/at the/DT/the number/NN/number of/IN/of squares/NNS/squares is/VBZ/is 2/CD/2 to/TO/to the/DT/the 2/CD/2 k/NNP/k. these/DT/these are/VBP/are the/DT/the number/NN/number of/IN/of squares/NNS/squares /,/, the/DT/the number/NN/number of/IN/of squares/NNS/squares and/CC/and this/DT/this is/VBZ/is 1/CD/1 mod/NN/mod 3/CD/3. i/PRP/i will/MD/will let/VB/let you/PRP/you figure/VB/figure this/DT/this one/CD/one out/NNP/out. the/DT/the number/NN/number of/IN/of squares/NNS/squares is/VBZ/is always/RB/always 1/CD/1 mod/NN/mod 3/CD/3. well/RB/well it/PRP/it is/VBZ/is 2/CD/2 here/RB/here and/CC/and you/PRP/you can/MD/can see/VB/see /,/, that/IN/that it/PRP/it is/VBZ/is always/RB/always two/NNP/two. if/IN/if you/PRP/you want/VBP/want you/PRP/you can/MD/can prove/VB/prove it/PRP/it by/IN/by induction/NN/induction on/IN/on k/NN/k /,/, but/CC/but even/RB/even otherwise/VBP/otherwise you/PRP/you can/MD/can sort/VB/sort of/IN/of check/NN/check that/IN/that /,/, the/DT/the number/NN/number of/IN/of squares/NNS/squares will/MD/will be/VB/be always/RB/always 1/CD/1 mod/NN/mod 3/CD/3. maybe/NN/maybe we/PRP/we will/MD/will just/RB/just look/VB/look at/IN/at a/DT/a equals/NNS/equals 2/CD/2. so/RB/so /,/, then/RB/then it/PRP/it is/VBZ/is a/DT/a 4/CD/4 by/IN/by 4/CD/4 /,/, how/WRB/how does/VBZ/does this/DT/this look/NN/look like/NNP/like. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a 4/CD/4 by/IN/by 4/CD/4 thing/NN/thing and/CC/and you/PRP/you have/VBP/have well/RB/well 16/CD/16 squares/NNS/squares ;/:/; and/CC/and that/IN/that is/VBZ/is 1/CD/1 mod/NN/mod 3/CD/3. when/WRB/when i/PRP/i divide/VBP/divide this/DT/this by/IN/by 3/CD/3 i/PRP/i get/VBP/get 1/CD/1 /,/, so/RB/so 3/CD/3 times/NNS/times 5/CD/5 is/VBZ/is 15/CD/15 and/CC/and 1/CD/1 /,/, one/CD/one gets/NNS/gets left/VBN/left out/NNP/out. so/RB/so /,/, that/IN/that is/VBZ/is true/JJ/true whatever/NN/whatever k/NN/k i/PRP/i choose/VBP/choose /,/, it/PRP/it is/VBZ/is always/RB/always 3/CD/3 times/NNS/times something/NN/something plus/RB/plus 1/CD/1. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by 1/CD/1 modulo/NN/modulo 3/CD/3. when/WRB/when i/PRP/i divide/VBP/divide by/IN/by 3/CD/3 i/PRP/i get/VBP/get 1/CD/1 /,/, the/DT/the remainder/NN/remainder is/VBZ/is 1/CD/1. so/RB/so /,/, can/MD/can i/PRP/i sort/VB/sort of/IN/of now/RB/now put/VBN/put these/DT/these dominos/NNP/dominos. so/RB/so that/IN/that /,/, all/DT/all except/IN/except 1/CD/1 square/NN/square is/VBZ/is covered/NNP/covered. so/RB/so /,/, i/PRP/i have/VBP/have this/DT/this 2/CD/2 by/IN/by 2/CD/2 k/NN/k 2/CD/2 to/TO/to the/DT/the k/NN/k by/IN/by 2/CD/2 to/TO/to the/DT/the k/NN/k square/NNP/square. so/RB/so /,/, i/PRP/i will/MD/will square/VB/square with/IN/with side/NN/side length/NN/length to/TO/to the/DT/the k/NNP/k. i/PRP/i have/VBP/have these/DT/these dominos/NNS/dominos /,/, which/WDT/which each/DT/each of/IN/of them/PRP/them has/VBZ/has 3/CD/3 squares/NNS/squares put/VBD/put together/NNP/together. can/MD/can i/VB/i arrange/NN/arrange these/DT/these on/IN/on these/DT/these squares/NNS/squares /,/, so/RB/so that/IN/that all/DT/all except/IN/except 1/CD/1 square/NN/square is/VBZ/is covered/VBN/covered /,/, this/DT/this is/VBZ/is the/DT/the question/NN/question ;/:/; the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. and/CC/and we/PRP/we would/MD/would like/VB/like an/DT/an algorithm/NN/algorithm to/TO/to do/VB/do this/DT/this and/CC/and well/RB/well /,/, we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do it/PRP/it using/VBG/using divide/NN/divide and/CC/and conquer/NNP/conquer. that/IN/that is/VBZ/is the/DT/the goal/NN/goal /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this 4/CD/4 by/IN/by 4/CD/4. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will see/VB/see what/WP/what is/VBZ/is the/DT/the scene/NNP/scene. can/MD/can i/VB/i do/VBP/do a/DT/a 4/CD/4 by/IN/by 4/CD/4 with/IN/with /,/, so/RB/so here/RB/here is/VBZ/is a/DT/a 4/CD/4 by/IN/by 4/CD/4 square/JJ/square /,/, can/MD/can i/PRP/i do/VBP/do this/NNP/this. well/RB/well /,/, since/IN/since i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do something/NN/something like/IN/like divide/NN/divide and/CC/and conquer/NNP/conquer. i/PRP/i would/MD/would like/VB/like to/TO/to divide/VB/divide this/DT/this into/IN/into two/CD/two parts/NNS/parts /,/, or/CC/or more/NNP/more. in/IN/in this/DT/this case/NN/case four/CD/four parts/NNS/parts /,/, tile/JJ/tile each/DT/each of/IN/of them/PRP/them and/CC/and put/VBD/put them/PRP/them together/NNP/together. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 24/CD/24 /CD/) well/RB/well /,/, let/VB/let us/PRP/us take/VB/take a/DT/a bigger/JJR/bigger one/CD/one and/CC/and see/VB/see how/WRB/how this/DT/this is/VBZ/is done/NNP/done. i/PRP/i know/VBP/know how/WRB/how to/TO/to tile/VB/tile this/DT/this /,/, so/RB/so that/IN/that one/CD/one is/VBZ/is left/VBN/left /,/, i/PRP/i know/VBP/know how/WRB/how to/TO/to tile/VB/tile this/DT/this /,/, so/RB/so that/IN/that one/CD/one is/VBZ/is left/VBN/left and/CC/and so/RB/so on/NNP/on. now/RB/now /,/, how/WRB/how do/VBP/do i/PRP/i tile/VB/tile the/DT/the whole/JJ/whole thing/NN/thing /,/, so/RB/so that/IN/that one/CD/one is/VBZ/is left/NNP/left. well/RB/well supposing/VBG/supposing the/DT/the one/CD/one left/NN/left here/RB/here is/VBZ/is this/NNP/this. one/CD/one left/NN/left here/RB/here is/VBZ/is this/DT/this and/CC/and one/CD/one left/NN/left here/RB/here is/VBZ/is this/NNP/this. now/RB/now /,/, i/PRP/i am/VBP/am able/JJ/able to/TO/to tile/VB/tile all/DT/all four/CD/four of/IN/of them/NNP/them. so/RB/so /,/, i/PRP/i tile/VBP/tile this/DT/this /,/, so/RB/so that/IN/that this/DT/this is/VBZ/is my/PRP$/my first/JJ/first domino/NN/domino /,/, i/PRP/i use/VBP/use my/PRP$/my first/JJ/first domino/NN/domino there/RB/there /,/, i/PRP/i put/VBD/put it/PRP/it around/IN/around like/IN/like this/NNP/this. this/DT/this is/VBZ/is my/PRP$/my second/JJ/second domino/NN/domino /,/, i/PRP/i put/VBD/put it/PRP/it around/IN/around like/IN/like this/NNP/this. here/RB/here is/VBZ/is 3/CD/3 /,/, it/PRP/it does/VBZ/does not/RB/not matter/VB/matter how/WRB/how i/PRP/i put/VBD/put my/PRP$/my fourth/JJ/fourth as/IN/as of/IN/of now/NNP/now. we/PRP/we will/MD/will we/VB/we will/MD/will change/VB/change this/DT/this later/JJ/later /,/, supposing/VBG/supposing the/DT/the fourth/JJ/fourth is/VBZ/is like/IN/like this/NNP/this. well/RB/well now/RB/now i/PRP/i can/MD/can put/VB/put the/DT/the fifth/JJ/fifth domino/NN/domino here/RB/here /,/, here/RB/here 5/CD/5 5/CD/5 5/CD/5. so/RB/so /,/, i/PRP/i managed/VBD/managed to/TO/to sort/NN/sort of/IN/of tile/NN/tile at/IN/at least/JJS/least 4/CD/4 by/IN/by 4/CD/4 using/VBG/using 5/CD/5 dominos/NNP/dominos. i/PRP/i have/VBP/have just/RB/just one/CD/one left/NN/left which/WDT/which is/VBZ/is what/WP/what i/PRP/i want/NNP/want. you/PRP/you would/MD/would like/VB/like to/TO/to repeat/VB/repeat this/DT/this for/IN/for 2/CD/2 k/NN/k by/IN/by 2/CD/2 k/NNP/k. so/RB/so /,/, how/WRB/how does/VBZ/does that/IN/that look/NNP/look. so/RB/so /,/, here/RB/here we/PRP/we again/RB/again would/MD/would like/VB/like to/TO/to do/VB/do a/DT/a divide/NN/divide and/CC/and conquer/NN/conquer /,/, we/PRP/we would/MD/would like/VB/like to/TO/to divide/VB/divide this/NNP/this. i/PRP/i would/MD/would like/VB/like to/TO/to first/JJ/first tile/NN/tile this/DT/this /,/, tile/IN/tile these/DT/these 4/CD/4 and/CC/and then/RB/then put/VBD/put them/PRP/them together/NNP/together. well/RB/well /,/, by/IN/by looking/NN/looking at/IN/at this/DT/this /,/, this/DT/this example/NN/example i/PRP/i can/MD/can do/VB/do it/PRP/it if/IN/if provided/VBN/provided this/DT/this square/NN/square left/VBD/left off/RP/off here/RB/here is/VBZ/is this/NNP/this. the/DT/the square/NN/square left/VBD/left off/RP/off in/IN/in this/DT/this /,/, is/VBZ/is this/NNP/this. the/DT/the square/NN/square left/VBD/left off/RP/off here/RB/here is/VBZ/is this/NNP/this. here/RB/here i/PRP/i really/RB/really do/VBP/do not/RB/not care/NNP/care. if/IN/if i/PRP/i can/MD/can tile/VB/tile the/DT/the entire/JJ/entire region/NN/region here/RB/here /,/, except/IN/except this/DT/this corner/NN/corner and/CC/and so/RB/so on/NNP/on. for/IN/for these/DT/these 3/CD/3 /,/, then/RB/then i/PRP/i am/VBP/am able/JJ/able to/TO/to tile/VB/tile the/DT/the entire/JJ/entire region/NN/region on/IN/on top/JJ/top leaving/NN/leaving one/CD/one squares/NNP/squares. that/WDT/that square/JJ/square left/NN/left will/MD/will be/VB/be in/IN/in this/DT/this big/JJ/big sort/NN/sort of/IN/of region/NNP/region. this/DT/this is/VBZ/is 2/CD/2 to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 /,/, 2/CD/2 to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 /,/, 2/CD/2 to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, this/DT/this whole/JJ/whole thing/NN/thing is/VBZ/is 2/CD/2 to/TO/to the/DT/the k/NNP/k. so/RB/so /,/, if/IN/if i/PRP/i can/MD/can do/VB/do this/DT/this /,/, then/RB/then i/PRP/i can/MD/can fit/VB/fit in/IN/in this/DT/this entire/JJ/entire /,/, this/DT/this extra/JJ/extra sort/NN/sort of/IN/of domino/NN/domino here/NNP/here. there/EX/there will/MD/will be/VB/be one/CD/one square/JJ/square left/NN/left over/IN/over in/IN/in this/DT/this region/NN/region /,/, good/NNP/good. so/RB/so /,/, again/RB/again notice/NN/notice a/DT/a crucial/JJ/crucial thing/NN/thing /,/, to/TO/to be/VB/be able/JJ/able to/TO/to carry/VB/carry this/DT/this inductive/JJ/inductive process/NN/process /,/, to/TO/to completion/NNP/completion. i/PRP/i should/MD/should be/VB/be able/JJ/able to/TO/to have/VB/have the/DT/the extra/JJ/extra square/NNP/square. i/PRP/i mean/VBP/mean the/DT/the square/JJ/square left/NN/left over/IN/over as/RB/as a/DT/a corner/NN/corner square/NNP/square. when/WRB/when i/PRP/i tile/VBP/tile a/DT/a region/NN/region which/WDT/which is/VBZ/is like/IN/like this/DT/this /,/, the/DT/the left/NN/left over/IN/over square/JJ/square must/MD/must be/VB/be a/DT/a corner/NN/corner square/NNP/square. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a square/JJ/square left/NN/left over/IN/over or/CC/or left/VBN/left un/NN/un tiled/NNP/tiled. i/PRP/i have/VBP/have tiled/VBN/tiled the/DT/the entire/JJ/entire region/NN/region /,/, except/IN/except this/DT/this small/JJ/small square/NNP/square. if/IN/if i/PRP/i can/MD/can do/VB/do this/DT/this /,/, then/RB/then clearly/RB/clearly i/PRP/i can/MD/can do/VB/do the/DT/the big/JJ/big thing/NNP/thing. so/RB/so /,/, i/PRP/i started/VBD/started out/RP/out my/PRP$/my initial/JJ/initial objective/NN/objective was/VBD/was to/TO/to tile/VB/tile to/TO/to 2/CD/2 to/TO/to the/DT/the k/NN/k by/IN/by 2/CD/2 to/TO/to the/DT/the k/NNP/k. that/IN/that is/VBZ/is what/WP/what i/PRP/i started/VBD/started out/RP/out with/IN/with /,/, i/PRP/i want/VBP/want to/TO/to apply/VB/apply this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer kind/NN/kind of/IN/of thing/NNP/thing. well/RB/well /,/, actually/RB/actually the/DT/the process/NN/process is/VBZ/is really/RB/really induction/NN/induction always/NNP/always. if/IN/if i/PRP/i can/MD/can do/VB/do it/PRP/it for/IN/for a/DT/a small/JJ/small square/NN/square /,/, can/MD/can i/PRP/i push/VB/push it/PRP/it up/RP/up to/TO/to a/DT/a bigger/JJR/bigger square/NN/square /,/, that/IN/that is/VBZ/is the/DT/the goal/NNP/goal. well/RB/well /,/, we/PRP/we want/VBP/want to/TO/to do/VB/do divide/JJ/divide and/CC/and conquer/NNP/conquer. so/RB/so /,/, we/PRP/we saw/VBD/saw that/IN/that /,/, we/PRP/we break/VBP/break it/PRP/it up/IN/up into/IN/into these/DT/these 4/CD/4 smaller/JJR/smaller squares/NNP/squares. now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to tile/VB/tile these/DT/these smaller/JJR/smaller squares/NNS/squares and/CC/and put/VBD/put them/PRP/them up/RP/up /,/, to/TO/to a/DT/a tiling/NN/tiling for/IN/for the/DT/the bigger/JJR/bigger square/NNP/square. well/RB/well /,/, each/DT/each of/IN/of these/DT/these smaller/JJR/smaller squares/NNS/squares /,/, that/IN/that is/VBZ/is one/CD/one square/JJ/square /,/, one/CD/one small/JJ/small square/NN/square which/WDT/which is/VBZ/is not/RB/not tiled/NNP/tiled. one/CD/one piece/NN/piece which/WDT/which is/VBZ/is not/RB/not tiled/NNP/tiled. now/RB/now /,/, this/DT/this happens/NNS/happens to/TO/to be/VB/be the/DT/the corner/NN/corner /,/, then/RB/then i/PRP/i can/MD/can push/VB/push the/DT/the induction/NN/induction upwards/NNP/upwards. but/CC/but /,/, for/IN/for the/DT/the induction/NN/induction to/TO/to work/VB/work even/RB/even the/DT/the final/JJ/final /,/, so/RB/so let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this again/NNP/again. for/IN/for the/DT/the induction/NN/induction to/TO/to work/VB/work in/IN/in this/DT/this big/JJ/big square/NN/square /,/, i/PRP/i want/VBP/want the/DT/the one/CD/one square/NN/square which/WDT/which is/VBZ/is not/RB/not tiled/VBN/tiled to/TO/to be/VB/be a/DT/a corner/NNP/corner. well/RB/well /,/, it/PRP/it can/MD/can not/RB/not be/VB/be corner/RB/corner here/RB/here /,/, because/IN/because everything/NN/everything else/RB/else is/VBZ/is tiled/VBN/tiled /,/, this/DT/this can/MD/can not/RB/not be/VB/be a/DT/a corner/NN/corner /,/, it/PRP/it can/MD/can not/RB/not be/VB/be a/DT/a corner/NNP/corner. well/RB/well /,/, can/MD/can it/PRP/it be/VB/be this/DT/this corner/NN/corner /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. it/PRP/it is/VBZ/is like/IN/like i/PRP/i leave/VBP/leave this/DT/this square/NN/square un/NN/un tiled/VBD/tiled /,/, so/RB/so leave/VBP/leave this/NNP/this... now/RB/now /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at these/DT/these 4/CD/4 small/JJ/small problems/NNS/problems /,/, they/PRP/they all/VBP/all look/VBP/look absolutely/RB/absolutely alike/NNP/alike. i/PRP/i want/VBP/want to/TO/to tile/VB/tile everything/NN/everything /,/, except/IN/except a/DT/a small/JJ/small square/NN/square in/IN/in the/DT/the corner/NNP/corner. i/PRP/i want/VBP/want to/TO/to tile/VB/tile all/DT/all of/IN/of it/PRP/it /,/, except/IN/except this/DT/this square/NN/square in/IN/in the/DT/the corner/NNP/corner. except/IN/except this/DT/this in/IN/in the/DT/the corner/NN/corner and/CC/and except/IN/except this/DT/this in/IN/in the/DT/the corner/NNP/corner. and/CC/and i/PRP/i put/VBD/put them/PRP/them together/RB/together like/IN/like this/NNP/this. this/DT/this tile/NN/tile is/VBZ/is the/DT/the entire/JJ/entire big/JJ/big square/NN/square /,/, except/IN/except for/IN/for this/DT/this one/CD/one thing/NN/thing in/IN/in the/DT/the corner/NNP/corner. and/CC/and well/RB/well this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm /,/, break/NN/break it/PRP/it up/IN/up into/IN/into 2/CD/2. tile/JJ/tile these/DT/these 4/CD/4 recursively/RB/recursively and/CC/and put/VBD/put them/PRP/them together/RB/together like/IN/like this/DT/this /,/, and/CC/and in/IN/in the/DT/the middle/NN/middle i/PRP/i just/RB/just put/VBD/put one/CD/one domino/NN/domino. one/CD/one domino/NN/domino fill/NN/fill up/IN/up these/DT/these three/CD/three squares/NNS/squares /,/, so/RB/so i/PRP/i have/VBP/have tile/JJ/tile everything/NN/everything except/IN/except this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a well/RB/well divide/JJ/divide and/CC/and conquer/NN/conquer sort/NN/sort of/IN/of strategy/NN/strategy to/TO/to tile/VB/tile squares/NNP/squares. so/RB/so /,/, this/DT/this problem/NN/problem looks/VBZ/looks a/DT/a bit/NN/bit different/NN/different from/IN/from the/DT/the other/JJ/other problems/NNP/problems. and/CC/and that/IN/that is/VBZ/is why/WRB/why i/PRP/i picked/VBD/picked this/DT/this /,/, because/IN/because the/DT/the strategy/NN/strategy can/MD/can be/VB/be used/VBN/used not/RB/not just/RB/just for/IN/for computer/NN/computer algorithms/NNS/algorithms or/CC/or puzzles/NNS/puzzles /,/, or/CC/or whatever/RB/whatever you/PRP/you have/NNP/have. and/CC/and the/DT/the other/JJ/other sort/NN/sort of/IN/of lesson/NN/lesson /,/, that/IN/that we/PRP/we learn/VBP/learn through/IN/through this/DT/this example/NNP/example. is/VBZ/is that/IN/that you/PRP/you start/VBP/start with/IN/with some/DT/some problem/NN/problem you/PRP/you want/VBP/want to/TO/to solve/NNP/solve. we/PRP/we have/VBP/have seen/VBN/seen this/DT/this before/NN/before /,/, along/IN/along the/DT/the way/NN/way you/PRP/you would/MD/would like/VB/like to/TO/to apply/VB/apply /,/, you/PRP/you want/VBP/want to/TO/to find/VB/find solutions/NNS/solutions to/TO/to smaller/JJR/smaller sub/NN/sub problems/NNP/problems. you/PRP/you want/VBP/want to/TO/to put/VB/put these/DT/these together/NN/together to/TO/to get/VB/get a/DT/a solution/NN/solution to/TO/to a/DT/a larger/JJR/larger problem/NNP/problem. and/CC/and while/IN/while doing/VBG/doing this/DT/this /,/, you/PRP/you may/MD/may want/VB/want to/TO/to solve/VB/solve something/NN/something slightly/RB/slightly more/RBR/more general/NNP/general. and/CC/and then/RB/then /,/, you/PRP/you see/VBP/see this/DT/this general/JJ/general problem/NN/problem can/MD/can be/VB/be solved/NNP/solved. so/RB/so /,/, you/PRP/you try/VBP/try and/CC/and solve/VB/solve the/DT/the general/JJ/general problem/NN/problem now/RB/now /,/, again/RB/again using/VBG/using the/DT/the same/JJ/same technique/NNP/technique. the/DT/the smaller/JJR/smaller sub/NN/sub problems/NNS/problems /,/, you/PRP/you solve/VBP/solve the/DT/the general/JJ/general problem/NNP/problem. and/CC/and now/RB/now you/PRP/you see/VBP/see /,/, if/IN/if you/PRP/you can/MD/can put/VB/put them/PRP/them together/RP/together /,/, to/TO/to get/VB/get a/DT/a solution/NN/solution to/TO/to the/DT/the general/JJ/general problem/NN/problem for/IN/for the/DT/the big/JJ/big input/NNP/input. and/CC/and often/RB/often this/DT/this sort/NN/sort of/IN/of gives/NNS/gives you/PRP/you the/DT/the solution/NN/solution that/IN/that want/NNP/want. we/PRP/we saw/VBD/saw this/DT/this in/IN/in two/CD/two occasions/NNS/occasions /,/, one/CD/one was/VBD/was this/DT/this tiling/NN/tiling problem/NN/problem /,/, the/DT/the other/JJ/other was/VBD/was a/DT/a i/NN/i hope/NN/hope you/PRP/you can/MD/can remember/NNP/remember. it/PRP/it was/VBD/was when/WRB/when we/PRP/we looked/VBD/looked at/IN/at this/DT/this median/NNP/median. we/PRP/we wanted/VBD/wanted to/TO/to find/VB/find the/DT/the median/JJ/median /,/, but/CC/but we/PRP/we ended/VBD/ended up/RP/up looking/VBG/looking at/IN/at the/DT/the problem/NN/problem of/IN/of finding/NN/finding an/DT/an element/NN/element of/IN/of given/VBN/given an/DT/an array/NN/array and/CC/and a/DT/a positive/JJ/positive integer/NN/integer r/NNP/r. so/RB/so /,/, we/PRP/we found/VBD/found the/DT/the element/NN/element of/IN/of rank/NN/rank r/NN/r /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we did/NNP/did. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at one/CD/one more/JJR/more problem/NN/problem /,/, yet/CC/yet another/DT/another problem/NN/problem rather/RB/rather /,/, which/WDT/which uses/NNS/uses divide/VBP/divide and/CC/and conquer/NNP/conquer. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a familiar/JJ/familiar problem/NN/problem of/IN/of multiplying/VBG/multiplying to/TO/to two/CD/two integers/NNP/integers. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 58/CD/58 /CD/) so/RB/so /,/, i/PRP/i have/VBP/have 2/CD/2 n/NN/n bit/NN/bit integers/NNS/integers /,/, x/NN/x and/CC/and y/NN/y /,/, this/DT/this is/VBZ/is x/NN/x /,/, this/DT/this is/VBZ/is y/NN/y /,/, these/DT/these are/VBP/are n/VBN/n bits/NNP/bits. each/DT/each is/VBZ/is n/VBN/n bit/NN/bit long/RB/long /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the product/NN/product of/IN/of x/NN/x and/CC/and y/NNP/y. the/DT/the normal/JJ/normal way/NN/way is/VBZ/is well/RB/well /,/, we/PRP/we formed/VBD/formed the/DT/the product/NN/product of/IN/of each/DT/each of/IN/of these/DT/these bits/NNS/bits with/IN/with lsb/NN/lsb /,/, then/RB/then with/IN/with the/DT/the next/JJ/next one/CD/one and/CC/and so/RB/so on/IN/on /,/, and/CC/and so/RB/so forth/NNP/forth. so/IN/so /,/, there/EX/there are/VBP/are n/NN/n square/NN/square multiplications/NNP/multiplications. well/RB/well /,/, in/IN/in this/DT/this case/NN/case actually/RB/actually it/PRP/it is/VBZ/is not/RB/not /,/, you/PRP/you can/MD/can just/RB/just do/VB/do are/VBP/are and/CC/and since/IN/since they/PRP/they are/VBP/are bits/NNP/bits. but/CC/but /,/, you/PRP/you can/MD/can think/VB/think of/IN/of these/DT/these as/IN/as instead/RB/instead of/IN/of bits/NNS/bits /,/, you/PRP/you can/MD/can think/VB/think of/IN/of them/PRP/them as/IN/as digits/NNS/digits /,/, it/PRP/it really/RB/really does/VBZ/does not/RB/not matter/NNP/matter. so/RB/so /,/, each/DT/each of/IN/of them/PRP/them could/MD/could be/VB/be n/VBN/n digits/NNS/digits long/RB/long and/CC/and we/PRP/we multiply/RB/multiply these/DT/these digits/NNP/digits. so/RB/so /,/, there/EX/there are/VBP/are n/NN/n square/NN/square multiplications/NNS/multiplications /,/, this/DT/this is/VBZ/is the/DT/the high/JJ/high school/NN/school multiplication/NN/multiplication algorithm/NN/algorithm /,/, that/IN/that we/PRP/we know/NNP/know. can/MD/can we/PRP/we do/VBP/do faster/JJR/faster /,/, that/IN/that is/VBZ/is the/DT/the question/NNP/question. let/NN/let us/PRP/us try/VBP/try applying/VBG/applying divide/NN/divide and/CC/and conquer/NNP/conquer. i/PRP/i have/VBP/have divide/JJ/divide this/DT/this into/IN/into two/CD/two parts/NNP/parts. this/DT/this is/VBZ/is x/NN/x left/VBN/left x/NN/x right/RB/right /,/, y/NN/y left/VBD/left y/NN/y right/NNP/right. and/CC/and now/RB/now i/PRP/i want/VBP/want to/TO/to compute/VB/compute the/DT/the product/NN/product of/IN/of these/DT/these two/CD/two /,/, well/RB/well what/WP/what is/VBZ/is the/DT/the product/NN/product first/RB/first of/IN/of all/NNP/all. x/NN/x is/VBZ/is nothing/NN/nothing but/CC/but 2/CD/2 to/TO/to n/VB/n by/IN/by 2/CD/2 times/NNS/times x/NN/x l/NN/l plus/CC/plus x/NN/x r/NN/r y/NN/y is/VBZ/is 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2 y/NN/y l/NN/l plus/NNP/plus. so/RB/so /,/, this/DT/this means/VBZ/means x/NN/x y/NN/y is/VBZ/is 2/CD/2 to/TO/to n/VB/n x/NN/x l/NN/l y/NN/y l/NN/l plus/CC/plus 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2 x/NN/x l/NN/l y/NN/y r/NNP/r. x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus y/NN/y l/NN/l x/NN/x r/NN/r plus/CC/plus x/NN/x r/NN/r times/NNS/times y/VBP/y r/NN/r /,/, this/DT/this is/VBZ/is the/DT/the product/NN/product x/NN/x and/CC/and y/NNP/y. so/RB/so /,/, we/PRP/we could/MD/could recursively/RB/recursively sort/VB/sort of/IN/of find/NN/find these/DT/these products/NNS/products /,/, these/DT/these four/CD/four products/NNS/products and/CC/and then/RB/then /,/, compute/NN/compute this/NNP/this. this/DT/this is/VBZ/is just/RB/just shifting/VBG/shifting by/IN/by n/NN/n bits/NNS/bits /,/, we/PRP/we are/VBP/are just/RB/just shifting/VBG/shifting by/IN/by n/NN/n by/IN/by 2/CD/2 bits/NNP/bits. so/RB/so /,/, that/IN/that is/VBZ/is an/DT/an order/NN/order n/NN/n operation/NN/operation /,/, so/RB/so if/IN/if t/NN/t n/NN/n is/VBZ/is the/DT/the time/NN/time taken/VBN/taken /,/, this/DT/this what/WP/what is/VBZ/is the/DT/the recurrence/NNP/recurrence. there/RB/there are/VBP/are 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 4/CD/4 problems/NNS/problems /,/, so/RB/so 4/CD/4 times/NNS/times t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. this/DT/this is/VBZ/is some/DT/some constant/JJ/constant times/NNS/times n/VBP/n /,/, which/WDT/which is/VBZ/is for/IN/for shifting/VBG/shifting and/CC/and adding/NNP/adding. adding/NN/adding two/CD/two n/NN/n bit/NN/bit numbers/NNS/numbers /,/, it/PRP/it takes/VBZ/takes alternately/NNP/alternately. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence ?/./? well/RB/well /,/, i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do this/DT/this and/CC/and the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NNP/recurrence. you/PRP/you do/VBP/do a/DT/a solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence /,/, it/PRP/it is/VBZ/is order/NN/order n/NN/n square/NNP/square. so/RB/so /,/, we/PRP/we are/VBP/are back/RB/back to/TO/to where/WRB/where we/PRP/we started/NNP/started. compare/VBP/compare these/DT/these two/CD/two /,/, well/RB/well we/PRP/we have/VBP/have done/VBN/done divide/NN/divide and/CC/and conquer/NN/conquer /,/, but/CC/but we/PRP/we do/VBP/do not/RB/not seem/VB/seem to/TO/to have/VB/have conquered/VBN/conquered anything/NNP/anything. we/PRP/we are/VBP/are back/RB/back to/TO/to spending/NN/spending order/NN/order n/NN/n square/NN/square times/NNS/times /,/, even/RB/even with/IN/with this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer approach/NN/approach /,/, but/CC/but well/RB/well all/DT/all is/VBZ/is not/RB/not lost/NNP/lost. i/PRP/i will/MD/will first/RB/first indicate/VB/indicate this/DT/this algorithm/NNP/algorithm. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will analyze/VB/analyze /,/, and/CC/and see/VB/see how/WRB/how we/PRP/we can/MD/can decrease/VB/decrease the/DT/the number/NN/number of/IN/of multiplications/NNP/multiplications. so/RB/so /,/, well/RB/well the/DT/the trick/NN/trick is/VBZ/is this/DT/this /,/, let/VB/let us/PRP/us see/NNP/see. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 02/CD/02 /CD/) so/RB/so /,/, the/DT/the terms/NNS/terms that/WDT/that we/PRP/we want/VBP/want to/TO/to compute/VB/compute are/VBP/are x/JJ/x l/NN/l y/NN/y l/NN/l and/CC/and then/RB/then /,/, x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus y/NN/y l/NN/l x/NN/x r/NN/r and/CC/and x/NN/x r/NN/r y/NN/y r/NNP/r. these/DT/these are/VBP/are the/DT/the three/CD/three terms/NNS/terms /,/, that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to compute/NNP/compute. the/DT/the way/NN/way we/PRP/we did/VBD/did it/PRP/it /,/, was/VBD/was each/DT/each of/IN/of them/PRP/them separately/RB/separately that/IN/that gave/VBD/gave over/RB/over problems/NNS/problems of/IN/of size/NN/size n/NN/n by/IN/by 2/CD/2. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a smart/NN/smart way/NN/way of/IN/of doing/VBG/doing this/NNP/this. well/RB/well /,/, these/DT/these two/CD/two i/PRP/i compute/VBP/compute as/IN/as they/PRP/they are/VBP/are /,/, the/DT/the third/JJ/third thing/NN/thing i/PRP/i compute/VBP/compute is/VBZ/is not/RB/not quite/RB/quite these/DT/these two/CD/two /,/, it/PRP/it is/VBZ/is the/DT/the following/NNP/following. i/PRP/i computer/NN/computer x/NN/x l/NN/l plus/CC/plus x/NN/x r/NN/r times/NNS/times y/VBP/y l/NN/l plus/CC/plus y/NN/y r/NN/r /,/, i/PRP/i add/VBP/add x/NN/x l/NN/l and/CC/and x/NN/x r/NN/r /,/, i/PRP/i add/VBP/add y/JJ/y l/NN/l and/CC/and y/NN/y r/NN/r and/CC/and then/RB/then /,/, multiply/RB/multiply them/PRP/them together/NNP/together. what/WP/what is/VBZ/is this/DT/this /,/, this/DT/this is/VBZ/is x/NN/x l/NN/l y/NN/y l/NN/l plus/CC/plus x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus x/NN/x r/NN/r y/NN/y l/NN/l plus/CC/plus x/NN/x r/NN/r y/NN/y r/NN/r /,/, that/IN/that is/VBZ/is what/WP/what this/DT/this is/NNP/is. so/RB/so /,/, i/PRP/i do/VBP/do three/CD/three multiplications/NNS/multiplications and/CC/and not/RB/not four/CD/four /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first multiplication/NN/multiplication x/NN/x l/NN/l y/NN/y l/NNP/l. x/NN/x r/NN/r y/NN/y r/NN/r is/VBZ/is my/PRP$/my second/JJ/second multiplication/NN/multiplication and/CC/and this/DT/this is/VBZ/is the/DT/the third/NNP/third. this/DT/this i/PRP/i do/VBP/do not/RB/not do/VB/do /,/, as/IN/as of/IN/of now/RB/now i/PRP/i have/VBP/have not/RB/not touched/VBN/touched this/DT/this /,/, this/DT/this is/VBZ/is the/DT/the third/JJ/third multiplication/NN/multiplication i/PRP/i do/NNP/do. well/RB/well /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this x/NN/x l/NN/l y/NN/y l/NN/l is/VBZ/is present/JJ/present /,/, x/NN/x r/NN/r y/NN/y r/NN/r is/VBZ/is present/JJ/present ;/:/; and/CC/and if/IN/if i/PRP/i remove/VBP/remove these/DT/these two/CD/two what/WP/what is/VBZ/is left/VBN/left is/VBZ/is this/NNP/this. x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus x/NN/x r/NN/r y/NN/y l/NN/l is/VBZ/is exactly/RB/exactly this/NNP/this. well/RB/well /,/, i/PRP/i have/VBP/have just/RB/just written/VBN/written x/NN/x r/NN/r y/NN/y l/NN/l /,/, but/CC/but it/PRP/it is/VBZ/is same/JJ/same as/IN/as y/JJ/y l/NN/l x/NN/x r/NN/r good/NNP/good. so/RB/so /,/, how/WRB/how do/VBP/do i/PRP/i compute/VB/compute this/DT/this /,/, well/RB/well from/IN/from this/DT/this product/NN/product i/PRP/i just/RB/just subtract/VBP/subtract these/DT/these two/CD/two to/TO/to get/VB/get this/DT/this /,/, so/RB/so call/RB/call this/DT/this z/NNP/z. now/RB/now /,/, i/PRP/i just/RB/just do/VBP/do z/NN/z minus/NN/minus x/NN/x l/NN/l y/NN/y l/NN/l minus/NN/minus x/NN/x r/NN/r y/NN/y r/NN/r i/PRP/i get/VBP/get this/DT/this /,/, good/JJ/good what/WP/what have/VBP/have i/PRP/i done/NNP/done. well/RB/well i/PRP/i have/VBP/have a/DT/a few/JJ/few more/RBR/more additions/NNS/additions /,/, i/PRP/i have/VBP/have 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 more/JJR/more additions/NNP/additions. the/DT/the number/NN/number of/IN/of multiplications/NNS/multiplications has/VBZ/has gone/VBN/gone down/RP/down by/IN/by 1/CD/1. multiplying/VBG/multiplying 2/CD/2 /,/, n/NN/n by/IN/by 2/CD/2 bit/NN/bit numbers/NNS/numbers i/PRP/i do/VBP/do 1/CD/1 /,/, 2/CD/2 and/CC/and 3/CD/3. there/EX/there are/VBP/are now/RB/now only/RB/only 3/CD/3 multiplications/NNS/multiplications that/WDT/that i/PRP/i do/VBP/do. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the recurrence/NN/recurrence now/RB/now /,/, well/RB/well t/VB/t n/NN/n is/VBZ/is 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. earlier/RBR/earlier remember/NN/remember it/PRP/it was/VBD/was 4/CD/4 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. now/RB/now /,/, it/PRP/it is/VBZ/is 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NN/n and/CC/and it/PRP/it is/VBZ/is not/RB/not surprising/JJ/surprising /,/, that/IN/that the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence is/VBZ/is smaller/NNP/smaller. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will show/VB/show the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence /,/, is/VBZ/is order/NN/order n/NN/n to/TO/to the/DT/the log/NN/log 3/CD/3 base/NN/base 2/CD/2. roughly/RB/roughly it/PRP/it grows/VBZ/grows as/IN/as n/NN/n to/TO/to the/DT/the 1.59/CD/1.59 /,/, which/WDT/which is/VBZ/is certainly/RB/certainly less/JJR/less than/IN/than n/NN/n square/NN/square /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we started/VBD/started out/RP/out with/NNP/with. so/RB/so /,/, this/DT/this the/DT/the number/NN/number of/IN/of multiplications/NNS/multiplications one/CD/one makes/NNS/makes is/VBZ/is significantly/RB/significantly smaller/NNP/smaller. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 23/CD/23 /CD/) is/VBZ/is 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus some/DT/some let/NN/let us/PRP/us this/DT/this take/NN/take n/NN/n /,/, it/PRP/it does/VBZ/does not/RB/not matter/VB/matter /,/, so/RB/so t/RB/t n/JJ/n is/VBZ/is this/NNP/this. we/PRP/we will/MD/will do/VB/do the/DT/the usual/JJ/usual thing/NN/thing which/WDT/which is/VBZ/is 3/CD/3 /,/, so/RB/so 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus n/NN/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. this/DT/this is/VBZ/is 3/CD/3 square/JJ/square t/NN/t n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus 3/CD/3 times/NNS/times n/VBP/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. let/NN/let us/PRP/us do/VBP/do it/PRP/it once/RB/once more/JJR/more /,/, to/TO/to see/VB/see what/WP/what happens/NNS/happens /,/, so/RB/so this/DT/this is/VBZ/is 3/CD/3 square/JJ/square t/NN/t well/RB/well n/JJ/n by/IN/by 2/CD/2 cube/NNP/cube. i/PRP/i am/VBP/am expanding/VBG/expanding this/DT/this out/RP/out /,/, so/RB/so there/RB/there should/MD/should be/VB/be a/DT/a 3/CD/3 here/RB/here /,/, 3/CD/3 times/NNS/times plus/CC/plus n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus 3/CD/3 times/NNS/times n/VBP/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is now/RB/now 3/CD/3 cube/NN/cube t/NN/t n/NN/n by/IN/by 2/CD/2 cube/NN/cube plus/CC/plus /,/, well/RB/well 3/CD/3 by/IN/by 2/CD/2 whole/JJ/whole square/NN/square times/NNS/times n/VBP/n plus/RB/plus 3/CD/3 by/IN/by 2/CD/2 n/NN/n plus/CC/plus n/NNP/n. now/RB/now /,/, one/CD/one can/MD/can guess/NN/guess the/DT/the general/JJ/general term/NN/term /,/, in/IN/in this/DT/this when/WRB/when i/PRP/i go/VBP/go down/RB/down i/PRP/i steps/NNP/steps. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 11/CD/11 /CD/) so/RB/so /,/, t/NN/t n/NN/n will/MD/will be/VB/be 3/CD/3 to/TO/to the/DT/the i/PRP/i t/VBP/t of/IN/of n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 3/CD/3 by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 n/NN/n plus/CC/plus 3/CD/3 by/IN/by 2/CD/2 i/PRP/i minus/VBZ/minus 2/CD/2 n/NN/n so/IN/so on/IN/on /,/, to/TO/to n/VB/n /,/, good/NNP/good. so/RB/so /,/, now/RB/now we/PRP/we would/MD/would like/VB/like n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i should/MD/should be/VB/be 2/CD/2 or/CC/or say/VB/say 1/CD/1 /,/, for/IN/for ease/NN/ease of/IN/of computation/NNP/computation. if/IN/if this/DT/this is/VBZ/is one/CD/one /,/, if/IN/if i/PRP/i have/VBP/have one/CD/one bit/NN/bit and/CC/and the/DT/the time/NN/time is/VBZ/is 1/CD/1 /,/, so/RB/so the/DT/the time/NN/time is/VBZ/is just/RB/just this/DT/this becomes/VBZ/becomes t/NN/t of/IN/of 1/CD/1 is/VBZ/is 1/CD/1. so/RB/so /,/, if/IN/if this/DT/this is/VBZ/is true/JJ/true and/CC/and t/NN/t of/IN/of n/NN/n is/VBZ/is 3/CD/3 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus /,/, well/RB/well n/JJ/n times/NNS/times 1/CD/1 plus/NN/plus 3/CD/3 half/NN/half and/CC/and so/RB/so on/IN/on /,/, up/RB/up to/TO/to 3/CD/3 half/NN/half to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1. well/RB/well /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this /,/, so/RB/so this/DT/this is/VBZ/is 3/CD/3 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus n/JJ/n times/NNS/times /,/, well/RB/well what/WP/what is/VBZ/is this/DT/this ?/./? this/DT/this is/VBZ/is just/RB/just a/DT/a geometric/JJ/geometric series/NNP/series. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a roughly/RB/roughly some/DT/some constant/JJ/constant times/NNS/times 3/CD/3 half/NN/half to/TO/to the/DT/the i/NNP/i. you/PRP/you can/MD/can do/VB/do it/PRP/it more/JJR/more a/DT/a bit/NN/bit better/NN/better by/IN/by doing/NN/doing the/DT/the /,/, writing/VBG/writing the/DT/the exact/JJ/exact formula/NN/formula /,/, which/WDT/which is/VBZ/is 3/CD/3 half/NN/half to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 by/IN/by 3/CD/3 half/NN/half minus/NN/minus 1/CD/1. so/RB/so /,/, it/PRP/it is/VBZ/is at/IN/at most/JJS/most /,/, let/VB/let me/PRP/me put/VB/put it/PRP/it at/IN/at most/JJS/most this/DT/this is/VBZ/is perhaps/RB/perhaps 3/CD/3 half/NN/half minus/NN/minus 1/CD/1 which/WDT/which is/VBZ/is half/DT/half /,/, so/RB/so c/JJ/c could/MD/could be/VB/be 2/CD/2 /,/, so/RB/so c/JJ/c is/VBZ/is most/JJS/most probably/RB/probably 2/CD/2. in/IN/in any/DT/any case/NN/case /,/, this/DT/this is/VBZ/is bounded/VBN/bounded by/IN/by something/NN/something like/IN/like this/DT/this /,/, 3/CD/3 to/TO/to the/DT/the i/PRP/i plus/NNP/plus. so/RB/so /,/, what/WDT/what is/VBZ/is i/PRP/i ?/./? well/RB/well /,/, 2/CD/2 to/TO/to the/DT/the i/PRP/i is/VBZ/is n/JJ/n /,/, so/RB/so i/PRP/i is/VBZ/is nothing/VBG/nothing but/CC/but log/NN/log base/NN/base 2/CD/2 n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 n/NN/n plus/CC/plus n/NN/n times/NNS/times constant/VBP/constant times/NNS/times /,/, well/RB/well 3/CD/3 half/NN/half to/TO/to the/DT/the i/PRP/i /,/, which/WDT/which is/VBZ/is 3/CD/3 half/NN/half to/TO/to the/DT/the log/NN/log based/VBN/based 2/CD/2 n/NNP/n. now/RB/now /,/, 2/CD/2 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n /,/, these/DT/these two/CD/two things/NNS/things cancel/NNP/cancel. so/RB/so /,/, i/PRP/i have/VBP/have 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n times/NNS/times constant/VBP/constant and/CC/and 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but some/DT/some c/NN/c prime/NN/prime times/NNS/times 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n /,/, this/DT/this is/VBZ/is the/DT/the i/NN/i time/NN/time taken/NNP/taken. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 26/CD/26 /CD/) so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this /,/, well/RB/well so/RB/so the/DT/the time/NN/time /,/, the/DT/the total/JJ/total number/NN/number of/IN/of multiplications/NNS/multiplications is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NNP/n. this/DT/this is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 3/CD/3 of/IN/of n/NN/n divided/VBN/divided by/IN/by log/NN/log base/NN/base 3/CD/3 of/IN/of 2/CD/2 /,/, i/PRP/i could/MD/could take/VB/take this/DT/this up/NNP/up. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of 3/CD/3 times/NNS/times /,/, use/NN/use just/RB/just some/DT/some general/JJ/general manipulations/NNP/manipulations. so/RB/so /,/, that/IN/that is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 3/CD/3 of/IN/of n/NN/n /,/, i/PRP/i take/VBP/take this/DT/this inside/NN/inside /,/, n/NN/n to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of 3/CD/3. this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n to/TO/to the/DT/the log/NN/log 2/CD/2 of/IN/of 3/CD/3 as/IN/as promised/NNP/promised. so/RB/so /,/, this/DT/this is/VBZ/is roughly/RB/roughly n/VBN/n to/TO/to the/DT/the 1.59/CD/1.59. so/RB/so /,/, the/DT/the time/NN/time number/NN/number of/IN/of multiplications/NNS/multiplications /,/, we/PRP/we got/VBD/got it/PRP/it down/IN/down from/IN/from n/NN/n square/NNP/square. so/RB/so /,/, the/DT/the initial/JJ/initial thing/NN/thing to/TO/to roughly/RB/roughly n/VB/n to/TO/to the/DT/the 1.59/CD/1.59. of/IN/of course/NN/course /,/, we/PRP/we increase/VBP/increase the/DT/the number/NN/number of/IN/of additions/NNS/additions /,/, but/CC/but if/IN/if multiplications/NNS/multiplications are/VBP/are more/RBR/more expensive/JJ/expensive than/IN/than additions/NNP/additions. then/RB/then /,/, we/PRP/we have/VBP/have saved/VBN/saved on/IN/on time/NNP/time. this/DT/this trick/NN/trick of/IN/of using/VBG/using three/CD/three multiplications/NNS/multiplications instead/RB/instead of/IN/of 2/CD/2 is/VBZ/is actually/RB/actually a/DT/a trick/NNP/trick. it/PRP/it is/VBZ/is something/VBG/something you/PRP/you have/VBP/have to/TO/to really/RB/really need/VBP/need to/TO/to come/VB/come up/RP/up with/IN/with somehow/NNP/somehow. there/EX/there is/VBZ/is no/DT/no real/JJ/real sort/NN/sort of/IN/of way/NN/way in/IN/in which/WDT/which you/PRP/you can/MD/can do/VB/do it/NNP/it. there/RB/there is/VBZ/is no/DT/no method/NN/method and/CC/and that/IN/that is/VBZ/is the/DT/the beauty/NN/beauty of/IN/of algorithm/NN/algorithm design/NNP/design. that/IN/that somehow/WRB/somehow not/RB/not every/DT/every problem/NN/problem can/MD/can be/VB/be sort/NN/sort of/IN/of tackled/VBN/tackled using/VBG/using everything/NN/everything that/IN/that /,/, you/PRP/you could/MD/could come/VB/come up/NNP/up. often/RB/often you/PRP/you come/VBP/come up/RP/up with/IN/with /,/, all/DT/all the/DT/the time/NN/time you/PRP/you come/VBP/come up/RP/up problems/NNS/problems which/WDT/which require/NN/require you/PRP/you to/TO/to design/VB/design new/JJ/new methods/NNS/methods /,/, derive/JJ/derive new/JJ/new methods/NNS/methods /,/, find/VBP/find new/JJ/new methods/NNP/methods. rack/NN/rack your/PRP$/your brain/NN/brain and/CC/and sort/NN/sort of/IN/of come/NN/come up/RB/up with/IN/with good/JJ/good algorithms/NNP/algorithms. and/CC/and when/WRB/when you/PRP/you do/VBP/do come/VBN/come up/RP/up with/IN/with these/DT/these new/JJ/new algorithms/NNS/algorithms /,/, you/PRP/you feel/VBP/feel again/RB/again /,/, the/DT/the kick/NN/kick that/IN/that you/PRP/you derive/VBP/derive /,/, the/DT/the pleasure/NN/pleasure that/IN/that you/PRP/you derive/VBP/derive is/VBZ/is something/VBG/something else/NNP/else. this/DT/this trick/NN/trick by/IN/by the/DT/the way/NN/way or/CC/or this/DT/this multiplication/NN/multiplication is/VBZ/is due/JJ/due to/TO/to euler/NNP/euler. and/CC/and he/PRP/he used/VBD/used this/DT/this for/IN/for the/DT/the multiplying/VBG/multiplying complex/NN/complex numbers/NNP/numbers. we/PRP/we have/VBP/have just/RB/just used/VBN/used this/DT/this trick/NN/trick was/VBD/was then/RB/then used/VBN/used by/IN/by other/JJ/other people/NNS/people /,/, who/WP/who saw/VBD/saw that/NNP/that. it/PRP/it can/MD/can be/VB/be applicable/JJ/applicable in/IN/in multiplying/NN/multiplying 2/CD/2 n/NN/n bit/NN/bit numbers/NNP/numbers. thanks/NNP/thanks. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 8/CD/8 divide/JJ/divide and/CC/and conquer/NN/conquer /:/- iii/NN/iii surfing/VBG/surfing lower/JJR/lower bounds/NNS/bounds we/PRP/we will/MD/will again/RB/again look/VB/look at/IN/at sorting/NNP/sorting. many/JJ/many of/IN/of these/DT/these algorithms/NNS/algorithms merge/VBP/merge sort/NN/sort /,/, quick/JJ/quick sort/NN/sort and/CC/and some/DT/some of/IN/of the/DT/the other/JJ/other sorting/NN/sorting algorithms/NNS/algorithms that/WDT/that we/PRP/we have/VBP/have studied/NNP/studied. all/DT/all of/IN/of them/PRP/them seem/VBP/seem to/TO/to take/VB/take n/NN/n log/NN/log n/NN/n time/NNP/time. i/PRP/i think/VBP/think it/PRP/it is/VBZ/is a/DT/a good/JJ/good question/NN/question to/TO/to ask/VB/ask /,/, if/IN/if we/PRP/we can/MD/can do/VB/do faster/NNP/faster. and/CC/and we/PRP/we this/DT/this n/NN/n log/NN/log n/NN/n /,/, which/WDT/which most/RBS/most of/IN/of the/DT/the sorting/NN/sorting algorithms/NNS/algorithms seem/VBP/seem to/TO/to take/NNP/take. and/CC/and this/DT/this is/VBZ/is the/DT/the question/NN/question /,/, we/PRP/we would/MD/would like/VB/like to/TO/to address/VB/address in/IN/in this/DT/this part/NN/part of/IN/of the/DT/the course/NNP/course. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will show/VB/show that/IN/that for/IN/for a/DT/a large/JJ/large family/NN/family you/PRP/you have/VBP/have sorting/VBG/sorting algorithms/NNP/algorithms. n/NN/n log/NN/log n/NN/n is/VBZ/is the/DT/the best/JJS/best that/IN/that they/PRP/they can/MD/can do/VB/do. if/IN/if we/PRP/we sort/VBP/sort of/IN/of restrict/NN/restrict /,/, the/DT/the kinds/NNS/kinds of/IN/of things/NNS/things that/WDT/that algorithms/VBZ/algorithms can/MD/can do/VB/do on/IN/on inputs/NNP/inputs. and/CC/and n/NN/n log/NN/log n/NN/n is/VBZ/is the/DT/the best/JJS/best that/IN/that we/PRP/we can/MD/can do/VB/do. now/RB/now /,/, we/PRP/we look/VBP/look at/IN/at merge/NN/merge sort/NNP/sort. let/NN/let us/PRP/us take/VBP/take merge/NN/merge sort/NN/sort /,/, but/CC/but whatever/RB/whatever i/PRP/i say/VBP/say is/VBZ/is actually/RB/actually true/JJ/true even/RB/even for/IN/for /,/, let/VB/let us/PRP/us say/VB/say quick/JJ/quick sort/NNP/sort. for/IN/for merge/NN/merge sort/NN/sort the/DT/the what/WP/what really/RB/really happens/NNP/happens. you/PRP/you split/VBD/split the/DT/the array/NN/array into/IN/into two/CD/two parts/NNP/parts. and/CC/and then/RB/then /,/, recursively/RB/recursively sort/NN/sort these/DT/these things/NNP/things. and/CC/and then/RB/then /,/, you/PRP/you merge/VBP/merge these/DT/these two/CD/two sorted/VBN/sorted arrays/NNP/arrays. that/IN/that is/VBZ/is the/DT/the crucial/JJ/crucial step/NNP/step. what/WP/what happens/VBZ/happens when/WRB/when you/PRP/you merge/VBP/merge two/CD/two sorted/VBN/sorted sub/NN/sub arrays/NNS/arrays /,/, or/CC/or when/WRB/when you/PRP/you merge/VBP/merge two/CD/two sorted/VBN/sorted lists/NNP/lists. well/RB/well /,/, you/PRP/you compare/VBP/compare two/CD/two elements/NNS/elements and/CC/and then/RB/then /,/, move/NN/move them/PRP/them out/NNP/out. compare/VBP/compare the/DT/the first/JJ/first element/NN/element in/IN/in the/DT/the list/NNP/list. that/IN/that is/VBZ/is the/DT/the smallest/JJS/smallest and/CC/and we/PRP/we put/VBD/put it/PRP/it as/IN/as a/DT/a first/JJ/first element/NNP/element. then/RB/then /,/, move/NN/move your/PRP$/your pointers/NNS/pointers and/CC/and so/RB/so on/IN/on /,/, and/CC/and so/RB/so forth/NNP/forth. so/IN/so /,/, the/DT/the most/RBS/most important/JJ/important step/NN/step there/EX/there is/VBZ/is comparing/VBG/comparing two/CD/two elements/NNS/elements and/CC/and then/RB/then /,/, some/DT/some reordering/NNP/reordering. so/RB/so /,/, the/DT/the only/JJ/only operation/NN/operation that/WDT/that /,/, you/PRP/you actually/RB/actually do/VBP/do on/IN/on these/DT/these elements/NNS/elements in/IN/in the/DT/the sorted/VBN/sorted /,/, in/IN/in the/DT/the array/NN/array is/VBZ/is comparing/VBG/comparing two/CD/two elements/NNS/elements and/CC/and moving/VBG/moving them/PRP/them out/NNP/out. so/RB/so /,/, this/DT/this property/NN/property actually/RB/actually holds/VBZ/holds even/RB/even for/IN/for quick/JJ/quick sort/NNP/sort. so/RB/so /,/, always/RB/always quick/JJ/quick sort/NN/sort term/NN/term /,/, you/PRP/you pick/VBP/pick a/DT/a pivot/NN/pivot /,/, by/IN/by your/PRP$/your favorite/JJ/favorite procedure/NNP/procedure. and/CC/and now/RB/now you/PRP/you compare/VBP/compare every/DT/every element/NN/element with/IN/with the/DT/the pivot/NNP/pivot. once/RB/once you/PRP/you compare/VBP/compare every/DT/every element/NN/element with/IN/with the/DT/the pivot/NN/pivot and/CC/and then/RB/then /,/, you/PRP/you move/VBP/move these/DT/these elements/NNS/elements around/NNP/around. so/RB/so /,/, the/DT/the basic/JJ/basic operation/NN/operation on/IN/on two/CD/two elements/NNS/elements of/IN/of the/DT/the array/NN/array is/VBZ/is compare/JJ/compare these/DT/these two/NNP/two. figure/NN/figure out/RP/out which/WDT/which one/CD/one is/VBZ/is larger/JJR/larger /,/, which/WDT/which one/CD/one is/VBZ/is smaller/NNP/smaller. so/RB/so /,/, again/RB/again the/DT/the usual/JJ/usual sort/NN/sort of/IN/of operation/NN/operation is/VBZ/is compared/VBN/compared /,/, is/VBZ/is looking/VBG/looking at/IN/at two/CD/two elements/NNS/elements in/IN/in the/DT/the array/NN/array /,/, comparing/VBG/comparing them/NNP/them. and/CC/and then/RB/then /,/, based/VBN/based on/IN/on the/DT/the result/NN/result /,/, i/PRP/i mean/VBP/mean if/IN/if one/CD/one is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the other/NNP/other. or/CC/or first/JJ/first one/CD/one is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the other/JJ/other /,/, then/RB/then you/PRP/you sort/NN/sort of/IN/of either/DT/either switch/NN/switch them/PRP/them around/IN/around or/CC/or change/NN/change the/DT/the order/NNP/order. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial operation/NN/operation /,/, that/IN/that you/PRP/you do/VBP/do on/IN/on the/DT/the array/NN/array element/NNP/element. you/PRP/you do/VBP/do not/RB/not add/VB/add them/PRP/them /,/, subtract/VBP/subtract them/PRP/them /,/, divide/VBP/divide them/NNP/them. so/RB/so /,/, the/DT/the operations/NNS/operations that/IN/that /,/, we/PRP/we use/VBP/use in/IN/in at/IN/at least/JJS/least these/DT/these popular/JJ/popular sorting/NN/sorting algorithms/NNS/algorithms /,/, is/VBZ/is compare/JJ/compare two/CD/two elements/NNP/elements. may/MD/may be/VB/be swap/NN/swap them/PRP/them or/CC/or move/VB/move them/PRP/them around/NNP/around. so/RB/so /,/, if/IN/if these/DT/these are/VBP/are the/DT/the only/JJ/only things/NNS/things /,/, that/IN/that you/PRP/you can/MD/can do/VB/do with/IN/with array/NN/array elements/NNP/elements. then/RB/then /,/, you/PRP/you need/VBP/need n/NN/n log/NN/log n/NN/n comparisons/NNS/comparisons to/TO/to sort/VB/sort an/DT/an array/NNP/array. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our goal/NNP/goal. that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to show/NNP/show. then/RB/then /,/, how/WRB/how do/VBP/do we/PRP/we go/VB/go about/IN/about doing/VBG/doing this/NNP/this. well/RB/well /,/, even/RB/even if/IN/if you/PRP/you recall/VBP/recall /,/, we/PRP/we showed/VBD/showed that/IN/that /,/, find/VBP/find the/DT/the minimum/JJ/minimum you/PRP/you needed/VBD/needed n/NN/n minus/NN/minus 1/CD/1 comparison/NNP/comparison. and/CC/and even/RB/even there/RB/there /,/, it/PRP/it was/VBD/was not/RB/not an/DT/an obvious/JJ/obvious /,/, sort/NN/sort of/IN/of the/DT/the solution/NN/solution was/VBD/was not/RB/not absolutely/RB/absolutely obvious/NNP/obvious. you/PRP/you had/VBD/had to/TO/to do/VB/do little/JJ/little bit/NN/bit of/IN/of work/NNP/work. and/CC/and for/IN/for this/DT/this actually/RB/actually we/PRP/we need/VBP/need to/TO/to do/VB/do a/DT/a little/RB/little bit/NN/bit more/JJR/more of/IN/of work/NN/work /,/, but/CC/but it/PRP/it is/VBZ/is not/RB/not difficult/NNP/difficult. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing is/VBZ/is to/TO/to notice/NN/notice that/IN/that these/DT/these algorithms/NNS/algorithms can/MD/can be/VB/be written/VBN/written as/IN/as flowcharts/NNS/flowcharts /,/, or/CC/or comparison/NN/comparison trees/NNP/trees. what/WP/what is/VBZ/is a/DT/a comparison/NN/comparison tree/NN/tree ?/./? well/RB/well /,/, basic/JJ/basic block/NN/block is/VBZ/is comparison/NN/comparison between/IN/between two/CD/two elements/NNP/elements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 52/CD/52 /CD/) /./. so/RB/so /,/, i/PRP/i compare/VBP/compare two/CD/two elements/NNS/elements /,/, a/DT/a i/PRP/i and/CC/and a/DT/a j/NN/j upon/IN/upon array/NN/array /,/, for/IN/for a/DT/a branch/NN/branch this/DT/this way/NN/way /,/, if/IN/if a/DT/a i/NN/i less/RBR/less than/IN/than a/DT/a j/NNP/j. i/PRP/i branch/VBP/branch this/DT/this way/NN/way /,/, if/IN/if a/DT/a j/NN/j is/VBZ/is greater/JJR/greater than/IN/than a/DT/a i/NNP/i. we/PRP/we will/MD/will assume/VB/assume that/IN/that /,/, array/VBP/array elements/NNS/elements are/VBP/are distinct/JJ/distinct /,/, which/WDT/which means/VBZ/means i/PRP/i will/MD/will never/RB/never have/VB/have two/CD/two of/IN/of them/PRP/them equal/NNP/equal. so/RB/so /,/, compare/VBP/compare two/CD/two elements/NNS/elements /,/, branch/NN/branch this/DT/this way/NN/way if/IN/if a/DT/a i/NN/i is/VBZ/is less/JJR/less than/IN/than a/DT/a j/NN/j /,/, branch/NN/branch the/DT/the other/JJ/other way/NN/way if/IN/if a/DT/a i/NN/i is/VBZ/is greater/JJR/greater than/IN/than a/DT/a j/NNP/j. now/RB/now /,/, using/VBG/using these/DT/these as/IN/as building/NN/building blocks/NNS/blocks /,/, i/PRP/i can/MD/can build/VB/build the/DT/the large/JJ/large flow/NN/flow chart/NNP/chart. so/RB/so /,/, somewhere/EX/somewhere here/RB/here /,/, maybe/RB/maybe i/PRP/i can/MD/can compare/VB/compare two/CD/two elements/NNS/elements /,/, two/CD/two other/JJ/other elements/NNS/elements a/DT/a k/NN/k and/CC/and a/DT/a l/NNP/l. then/RB/then again/RB/again branch/NN/branch and/CC/and so/RB/so on/NNP/on. and/CC/and at/IN/at the/DT/the end/NN/end /,/, i/PRP/i will/MD/will have/VB/have these/DT/these leaves/NNS/leaves where/WRB/where i/PRP/i will/MD/will output/NNP/output. so/RB/so /,/, the/DT/the output/NN/output for/IN/for us/PRP/us is/VBZ/is the/DT/the order/NN/order /,/, is/VBZ/is the/DT/the sorted/VBN/sorted order/NNP/order. so/RB/so /,/, we/PRP/we will/MD/will look/VB/look at/IN/at flow/NN/flow charts/NNS/charts /,/, which/WDT/which look/NN/look like/IN/like this/NNP/this. the/DT/the input/NN/input to/TO/to a/DT/a flow/NN/flow chart/NN/chart is/VBZ/is just/RB/just an/DT/an array/NN/array a/DT/a /,/, the/DT/the input/NN/input is/VBZ/is an/DT/an array/NN/array a/NNP/a. and/CC/and you/PRP/you go/VBP/go through/IN/through these/DT/these flow/NN/flow charts/NNS/charts and/CC/and at/IN/at these/DT/these leaves/NNS/leaves /,/, will/MD/will output/VB/output the/DT/the sorted/VBN/sorted order/NNP/order. this/DT/this is/VBZ/is the/DT/the model/NN/model that/IN/that we/PRP/we are/VBP/are looking/VBG/looking at/NNP/at. let/NN/let us/PRP/us do/VBP/do a/DT/a small/JJ/small example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06.35/CD/06.35 /CD/) so/RB/so /,/, for/IN/for instance/NN/instance if/IN/if i/PRP/i have/VBP/have two/CD/two elements/NNS/elements /,/, then/RB/then let/VB/let us/PRP/us say/VB/say a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2 /,/, i/PRP/i compare/VBP/compare a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2. if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than the/DT/the order/NN/order output/NN/output is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2. this/DT/this is/VBZ/is in/IN/in sorted/VBN/sorted order/NNP/order. if/IN/if a/DT/a 1/CD/1 is/VBZ/is larger/JJR/larger /,/, the/DT/the order/NN/order i/PRP/i output/VBD/output is/VBZ/is a/DT/a 2/CD/2 /,/, a/DT/a 1/CD/1. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a small/JJ/small flow/NN/flow chart/NN/chart /,/, that/IN/that sorts/NNS/sorts 2/CD/2 numbers/NNP/numbers. so/RB/so /,/, it/PRP/it sorts/VBZ/sorts two/CD/two elements/NNS/elements an/DT/an array/NN/array /,/, basically/RB/basically works/VBZ/works on/IN/on arrays/NNS/arrays of/IN/of size/NN/size 2/CD/2 and/CC/and sorts/NNS/sorts these/DT/these arrays/NNP/arrays. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say 3/CD/3 /,/, what/WP/what if/IN/if the/DT/the array/NN/array size/NN/size is/VBZ/is 3/CD/3 ?/./? so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what to/TO/to do/NNP/do. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 20/CD/20 /CD/) so/RB/so /,/, you/PRP/you compare/VBP/compare /,/, let/VB/let us/PRP/us say/VB/say a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2. now/RB/now /,/, if/IN/if a/DT/a 1/CD/1 is/VBZ/is less/JJR/less let/NN/let us/PRP/us say/VBP/say i/PRP/i compare/VBP/compare a/DT/a 1/CD/1 with/IN/with a/DT/a 3/CD/3 /,/, say/VB/say a/DT/a 1/CD/1 is/VBZ/is less/NNP/less. now/RB/now /,/, i/PRP/i know/VBP/know at/IN/at this/DT/this point/NN/point /,/, that/IN/that a/DT/a 1/CD/1 is/VBZ/is the/DT/the smallest/NNP/smallest. so/RB/so /,/, i/PRP/i would/MD/would like/VB/like to/TO/to compare/VB/compare a/DT/a 2/CD/2 and/CC/and a/DT/a 3/CD/3. so/RB/so /,/, here/RB/here a/DT/a 2/CD/2 is/VBZ/is greater/JJR/greater than/IN/than a/DT/a 3/CD/3 /,/, here/RB/here a/DT/a 2/CD/2 is/VBZ/is less/JJR/less than/IN/than a/DT/a 3/CD/3. the/DT/the sorted/JJ/sorted order/NN/order here/RB/here is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2 /,/, a/DT/a 3/CD/3. here/RB/here it/PRP/it is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 3/CD/3 /,/, a/DT/a 2/CD/2 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, you/PRP/you can/MD/can sort/VB/sort of/IN/of fill/NN/fill this/DT/this up/NNP/up. so/RB/so /,/, you/PRP/you can/MD/can write/VB/write down/RP/down a/DT/a flow/NN/flow chart/NN/chart like/IN/like this/DT/this /,/, with/IN/with these/DT/these are/VBP/are the/DT/the leaves/NNS/leaves where/WRB/where you/PRP/you get/VBP/get the/DT/the answer/NN/answer /,/, which/WDT/which is/VBZ/is the/DT/the array/NN/array in/IN/in sorted/JJ/sorted order/NNP/order. now/RB/now /,/, merge/VBP/merge sort/NN/sort can/MD/can also/RB/also be/VB/be depicted/VBN/depicted like/IN/like this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, why/WRB/why that/IN/that is/VBZ/is do/NNP/do. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 34/CD/34 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at merge/NN/merge sort/NN/sort or/CC/or when/WRB/when four/CD/four elements/NNP/elements. so/RB/so /,/, i/PRP/i have/VBP/have four/CD/four elements/NNS/elements a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2 /,/, a/DT/a 3/CD/3 /,/, a/DT/a 4/CD/4. and/CC/and i/PRP/i want/VBP/want to/TO/to sort/VB/sort of/IN/of run/VBN/run merge/NN/merge sort/NN/sort on/IN/on this/NNP/this. well/RB/well /,/, we/PRP/we divide/VBP/divide this/DT/this into/IN/into two/CD/two /,/, recurs/NNS/recurs on/IN/on this/DT/this part/NN/part /,/, then/RB/then recurs/VBZ/recurs on/IN/on this/DT/this part/NN/part and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is a/DT/a merge/NNP/merge. when/WRB/when we/PRP/we recurs/VBZ/recurs on/IN/on this/DT/this part/NN/part /,/, the/DT/the first/JJ/first comparison/NN/comparison we/PRP/we do/VBP/do is/VBZ/is between/IN/between a/DT/a 1/CD/1 and/CC/and a/DT/a 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first comparison/NN/comparison we/PRP/we do/VBP/do ;/:/; and/CC/and this/DT/this could/MD/could be/VB/be a/DT/a 1/CD/1 is/VBZ/is less/JJR/less than/IN/than a/DT/a 2/CD/2. this/DT/this is/VBZ/is a/DT/a 1/CD/1 could/MD/could be/VB/be greater/JJR/greater than/IN/than a/DT/a 2/CD/2 /,/, we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what this/DT/this is/NNP/is. here/RB/here the/DT/the sorted/VBN/sorted order/NN/order which/WDT/which is/VBZ/is returned/VBN/returned here/RB/here is/VBZ/is a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2. on/IN/on this/DT/this side/NN/side it/PRP/it is/VBZ/is a/DT/a 2/CD/2 /,/, a/DT/a 1/CD/1. whichever/NN/whichever branch/NN/branch we/PRP/we choose/VBP/choose /,/, now/RB/now we/PRP/we have/VBP/have to/TO/to recurs/NNS/recurs on/IN/on the/DT/the right/NN/right hand/NN/hand side/NNP/side. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the next/JJ/next comparison/NN/comparison we/PRP/we do/VBP/do /,/, a/DT/a 3/CD/3 and/CC/and a/DT/a 4/CD/4 ;/:/; and/CC/and well/RB/well these/DT/these give/JJ/give again/NN/again two/CD/two sort/NN/sort of/IN/of outputs/NNP/outputs. now/RB/now /,/, at/IN/at this/DT/this step/NN/step /,/, we/PRP/we are/VBP/are up/RP/up to/TO/to the/DT/the merge/NNP/merge. the/DT/the lower/JJR/lower things/NNS/things return/VBP/return /,/, these/DT/these two/CD/two sorted/VBN/sorted orders/NNP/orders. and/CC/and now/RB/now we/PRP/we are/VBP/are down/RB/down to/TO/to the/DT/the merge/NN/merge /,/, the/DT/the top/JJ/top level/NN/level of/IN/of recursion/NNP/recursion. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take this/DT/this portion/NNP/portion. what/WP/what are/VBP/are the/DT/the two/CD/two elements/NNS/elements /,/, that/IN/that are/VBP/are compared/VBN/compared ?/./? here/RB/here i/PRP/i know/VBP/know that/IN/that a/DT/a 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than a/DT/a 2/CD/2. so/RB/so /,/, the/DT/the first/JJ/first one/CD/one returns/NNS/returns /,/, this/DT/this side/NN/side returns/NNS/returns a/DT/a 2/CD/2 a/DT/a 1/CD/1. and/CC/and here/RB/here /,/, i/PRP/i know/VBP/know a/DT/a 3/CD/3 is/VBZ/is less/JJR/less than/IN/than a/DT/a 4/CD/4. so/RB/so /,/, the/DT/the second/JJ/second list/NN/list returned/VBD/returned is/VBZ/is a/DT/a 3/CD/3 a/DT/a 4/CD/4. these/DT/these are/VBP/are the/DT/the two/CD/two lists/NNP/lists. so/RB/so /,/, the/DT/the two/CD/two elements/NNS/elements compared/VBN/compared here/RB/here /,/, are/VBP/are a/DT/a 2/CD/2 and/CC/and a/DT/a 3/CD/3. the/DT/the smallest/JJS/smallest elements/NNS/elements from/IN/from the/DT/the two/CD/two lists/NNS/lists are/VBP/are compared/VBN/compared now/NNP/now. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what is/VBZ/is compared/VBN/compared here/-NONE-/here. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go down/RP/down one/CD/one more/JJR/more step/NN/step and/CC/and see/VB/see how/WRB/how this/DT/this looks/VBZ/looks like/NNP/like. so/RB/so /,/, here/RB/here a/DT/a 2/CD/2 is/VBZ/is less/JJR/less or/CC/or a/DT/a 3/CD/3 is/VBZ/is less/NNP/less. supposing/NN/supposing /,/, we/PRP/we followed/VBD/followed this/DT/this branch/NN/branch /,/, what/WP/what is/VBZ/is the/DT/the next/JJ/next clue/NN/clue /,/, which/WDT/which are/VBP/are compared/VBN/compared for/IN/for merge/NN/merge sort/NNP/sort. well/RB/well /,/, a/DT/a 3/CD/3 is/VBZ/is less/JJR/less than/IN/than a/DT/a 2/CD/2. so/RB/so /,/, a/DT/a 3/CD/3 is/VBZ/is moved/VBN/moved to/TO/to the/DT/the new/JJ/new list/NN/list and/CC/and our/PRP$/our pointers/NNS/pointers are/VBP/are at/IN/at a/DT/a 2/CD/2 and/CC/and a/DT/a 4/CD/4. so/RB/so /,/, the/DT/the next/JJ/next two/CD/two things/NNS/things /,/, which/WDT/which are/VBP/are compared/VBN/compared are/VBP/are a/DT/a 2/CD/2 and/CC/and a/DT/a 4/CD/4 and/CC/and so/RB/so on/NNP/on. i/PRP/i can/MD/can draw/VB/draw this/DT/this tree/NN/tree out/IN/out and/CC/and at/IN/at the/DT/the leaves/NNS/leaves of/IN/of this/DT/this tree/NN/tree /,/, are/VBP/are the/DT/the solution/NNP/solution. i/PRP/i mean/VBP/mean at/IN/at each/DT/each leaf/NN/leaf /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what is/VBZ/is the/DT/the output/NN/output /,/, what/WP/what is/VBZ/is the/DT/the sorted/VBN/sorted order/NN/order which/WDT/which it/PRP/it output/NNP/output. in/IN/in fact/NN/fact /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this tree/NN/tree /,/, this/DT/this tree/NN/tree is/VBZ/is a/DT/a binary/JJ/binary tree/NNP/tree. at/IN/at each/DT/each internal/JJ/internal load/NN/load /,/, we/PRP/we have/VBP/have a/DT/a comparison/NNP/comparison. so/RB/so /,/, we/PRP/we compare/VBP/compare two/CD/two elements/NNS/elements /,/, that/IN/that you/PRP/you branch/VBP/branch out/RP/out into/IN/into two/NNP/two. and/CC/and for/IN/for each/DT/each branch/NN/branch again/RB/again there/EX/there will/MD/will an/DT/an internal/JJ/internal node/NN/node /,/, you/PRP/you compare/VBP/compare two/CD/two elements/NNS/elements branch/NN/branch into/IN/into two/CD/two /,/, that/IN/that is/VBZ/is it/NNP/it. so/RB/so /,/, if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at it/PRP/it as/IN/as /,/, if/IN/if i/PRP/i forget/VBP/forget that/IN/that /,/, there/EX/there these/DT/these comparisons/NNS/comparisons etcetera/VBP/etcetera /,/, etcetera/NNP/etcetera. the/DT/the whole/JJ/whole structure/NN/structure looks/NNS/looks like/IN/like a/DT/a tree/NNP/tree. in/IN/in fact/NN/fact /,/, the/DT/the binary/JJ/binary tree/NN/tree and/CC/and there/EX/there are/VBP/are leaves/NNS/leaves /,/, and/CC/and at/IN/at these/DT/these leaves/NNS/leaves we/PRP/we have/VBP/have the/DT/the output/NNP/output. output/NN/output mean/NN/mean in/IN/in the/DT/the sorted/VBN/sorted order/NNP/order. so/RB/so /,/, when/WRB/when i/PRP/i sort/VBP/sort of/IN/of follow/JJ/follow this/DT/this tree/NN/tree down/RP/down to/TO/to a/DT/a leaf/NN/leaf /,/, i/PRP/i get/VBP/get the/DT/the answer/NNP/answer. this/DT/this leaf/NN/leaf whatever/NN/whatever is/VBZ/is the/DT/the answer/NN/answer is/VBZ/is the/DT/the output/NNP/output. the/DT/the one/CD/one thing/NN/thing to/TO/to notice/NN/notice is/VBZ/is that/IN/that /,/, this/DT/this tree/NN/tree is/VBZ/is different/JJ/different for/IN/for different/JJ/different sizes/NNS/sizes of/IN/of the/DT/the input/NNP/input. for/IN/for four/CD/four elements/NNS/elements /,/, i/PRP/i can/MD/can tell/VB/tell you/PRP/you what/WP/what the/DT/the merge/NN/merge sort/NN/sort tree/NN/tree looks/NNS/looks like/NNP/like. the/DT/the comparison/NN/comparison tree/NN/tree for/IN/for merge/NN/merge sort/NN/sort /,/, it/PRP/it has/VBZ/has some/DT/some structure/NNP/structure. and/CC/and in/IN/in fact/NN/fact /,/, just/RB/just the/DT/the way/NN/way i/PRP/i have/VBP/have written/VBN/written part/NN/part for/IN/for the/DT/the tree/NN/tree here/RB/here /,/, you/PRP/you can/MD/can actually/RB/actually write/VB/write down/IN/down the/DT/the entire/JJ/entire tree/NNP/tree. it/PRP/it will/MD/will take/VB/take some/DT/some time/NN/time and/CC/and space/NN/space /,/, but/CC/but if/IN/if you/PRP/you have/VBP/have the/DT/the patience/NN/patience /,/, you/PRP/you could/MD/could try/VB/try this/DT/this out/NNP/out. for/IN/for five/CD/five elements/NNS/elements again/RB/again /,/, there/EX/there is/VBZ/is a/DT/a tree/NNP/tree. for/IN/for six/CD/six elements/NNS/elements /,/, there/EX/there is/VBZ/is a/DT/a different/JJ/different tree/NN/tree and/CC/and so/RB/so on/IN/on and/CC/and so/RB/so forth/NNP/forth. if/IN/if i/PRP/i take/VBP/take /,/, if/IN/if i/PRP/i fix/VBP/fix the/DT/the number/NN/number of/IN/of elements/NNS/elements to/TO/to n/VB/n /,/, then/RB/then for/IN/for merge/NN/merge sort/NN/sort i/PRP/i can/MD/can write/VB/write down/RP/down the/DT/the comparison/NN/comparison tree/NN/tree /,/, which/WDT/which does/VBZ/does the/DT/the comparisons/NNS/comparisons in/IN/in the/DT/the same/JJ/same order/NN/order as/IN/as merge/NN/merge sort/NNP/sort. so/RB/so /,/, if/IN/if i/PRP/i follow/VBP/follow the/DT/the tree/NN/tree down/IN/down for/IN/for a/DT/a particular/JJ/particular input/NN/input /,/, the/DT/the comparisons/NNS/comparisons made/VBN/made will/MD/will be/VB/be the/DT/the same/NNP/same. the/DT/the order/NN/order of/IN/of comparisons/NNS/comparisons will/MD/will be/VB/be the/DT/the same/JJ/same /,/, as/IN/as that/DT/that made/VBN/made in/IN/in merge/NN/merge sort/NNP/sort. and/CC/and the/DT/the answer/NN/answer will/MD/will be/VB/be as/RB/as given/VBN/given by/IN/by merge/NN/merge sort/NNP/sort. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time /,/, what/WP/what is/VBZ/is the/DT/the notion/NN/notion of/IN/of time/NN/time required/VBN/required on/IN/on this/DT/this tree/NNP/tree. well/RB/well /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for /,/, let/VB/let us/PRP/us say/VB/say given/VBN/given an/DT/an input/NN/input /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is just/RB/just the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons you/PRP/you make/VBP/make till/RB/till you/PRP/you hit/VBD/hit a/DT/a leaf/NN/leaf /,/, in/IN/in this/DT/this tree/NNP/tree. so/RB/so /,/, given/VBN/given an/DT/an input/NN/input you/PRP/you make/VBP/make comparisons/NNS/comparisons /,/, then/RB/then you/PRP/you branch/VBP/branch either/DT/either on/IN/on the/DT/the left/NN/left or/CC/or right/NNP/right. then/RB/then /,/, you/PRP/you make/VBP/make some/DT/some other/JJ/other comparisons/NNS/comparisons branch/NN/branch etcetera/NN/etcetera /,/, etcetera/NN/etcetera /,/, finally/RB/finally you/PRP/you hit/VBD/hit a/DT/a leaf/NNP/leaf. the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is just/RB/just a/DT/a path/NN/path in/IN/in this/DT/this tree/NN/tree from/IN/from the/DT/the root/NN/root to/TO/to a/DT/a leaf/NNP/leaf. so/RB/so /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, which/WDT/which is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path followed/VBD/followed from/IN/from the/DT/the root/NN/root to/TO/to a/DT/a leaf/NNP/leaf. so/RB/so then/RB/then /,/, the/DT/the worst/JJS/worst case/NN/case time/NN/time /,/, what/WP/what is/VBZ/is the/DT/the worst/JJS/worst case/NN/case time/NN/time by/IN/by merge/NN/merge sort/NN/sort /,/, would/MD/would be/VB/be just/RB/just the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. the/DT/the worst/JJS/worst case/NN/case time/NN/time for/IN/for merge/NN/merge sort/NN/sort will/MD/will just/RB/just be/VB/be the/DT/the height/NN/height of/IN/of this/DT/this tree/NN/tree ;/:/; which/WDT/which is/VBZ/is the/DT/the longest/JJS/longest root/NN/root leaf/NN/leaf path/NN/path in/IN/in this/DT/this tree/NNP/tree. i/PRP/i can/MD/can show/VB/show that/IN/that this/DT/this is/VBZ/is long/RB/long enough/NNP/enough. then/RB/then /,/, the/DT/the time/NN/time taken/VBN/taken for/IN/for merge/NN/merge sort/NN/sort will/MD/will also/RB/also be/VB/be that/IN/that much/NNP/much. and/CC/and that/IN/that is/VBZ/is the/DT/the goal/NN/goal ;/:/; and/CC/and we/PRP/we have/VBP/have most/JJS/most of/IN/of the/DT/the ingredients/NNS/ingredients in/IN/in place/NNP/place. we/PRP/we just/RB/just have/VBP/have to/TO/to make/VB/make certain/JJ/certain observations/NNP/observations. here/RB/here are/VBP/are two/CD/two critical/JJ/critical observations/NNP/observations. so/RB/so /,/, we/PRP/we have/VBP/have an/DT/an algorithm/NN/algorithm as/IN/as a/DT/a flowchart/NNP/flowchart. we/PRP/we have/VBP/have an/DT/an algorithm/NN/algorithm which/WDT/which sorts/NNS/sorts n/VBP/n numbers/NNP/numbers. and/CC/and it/PRP/it is/VBZ/is depicted/VBN/depicted as/RB/as a/DT/a flow/NN/flow chart/NN/chart where/WRB/where or/CC/or a/DT/a comparison/NN/comparison tree/NN/tree /,/, where/WRB/where at/IN/at each/DT/each node/NN/node you/PRP/you compare/VBP/compare to/TO/to a/DT/a level/NN/level that/WDT/that you/PRP/you branch/VBP/branch /,/, depending/VBG/depending on/IN/on which/WDT/which one/CD/one is/VBZ/is greater/NNP/greater. at/IN/at leaves/NNS/leaves we/PRP/we output/VBP/output sorted/VBN/sorted out/RP/out /,/, this/DT/this is/VBZ/is the/DT/the thing/NNP/thing. the/DT/the question/NN/question we/PRP/we ask/VBP/ask is/VBZ/is /,/, how/WRB/how /,/, what/WP/what is/VBZ/is the/DT/the height/NN/height of/IN/of such/JJ/such a/DT/a tree/NN/tree /,/, how/WRB/how tall/JJ/tall is/VBZ/is such/JJ/such a/DT/a tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 55/CD/55 /CD/) here/RB/here are/VBP/are two/CD/two sort/NN/sort of/IN/of crucial/JJ/crucial observations/NNS/observations /,/, if/IN/if this/DT/this flow/NN/flow chart/NN/chart does/VBZ/does sort/NNP/sort. then/RB/then /,/, every/DT/every input/NN/input order/NN/order must/MD/must leads/NNS/leads to/TO/to a/DT/a leaf/NNP/leaf. different/JJ/different input/NN/input orders/NNS/orders lead/VBP/lead to/TO/to different/JJ/different leaves/NNP/leaves. so/RB/so /,/, why/WRB/why is/VBZ/is this/DT/this true/JJ/true ?/./? well/RB/well /,/, firstly/RB/firstly we/PRP/we will/MD/will assume/VB/assume that/IN/that inputs/NNS/inputs /,/, in/IN/in our/PRP$/our input/NN/input every/DT/every element/NN/element is/VBZ/is distinct/NNP/distinct. we/PRP/we do/VBP/do not/RB/not have/VB/have two/CD/two copies/NNS/copies of/IN/of the/DT/the same/JJ/same element/NNP/element. there/RB/there are/VBP/are n/VBN/n factorial/JJ/factorial orders/NNS/orders /,/, that/IN/that are/VBP/are possible/JJ/possible as/IN/as input/NNP/input. and/CC/and for/IN/for each/DT/each order/NN/order you/PRP/you make/VBP/make certain/JJ/certain comparisons/NNS/comparisons and/CC/and you/PRP/you trace/VBP/trace the/DT/the path/NN/path to/TO/to a/DT/a leaf/NNP/leaf. and/CC/and at/IN/at the/DT/the leaf/NN/leaf /,/, we/PRP/we have/VBP/have to/TO/to give/VB/give the/DT/the right/NN/right order/NN/order /,/, which/WDT/which is/VBZ/is a/DT/a permutation/NN/permutation of/IN/of the/DT/the input/NNP/input. and/CC/and for/IN/for every/DT/every input/NN/input order/NN/order /,/, you/PRP/you must/MD/must end/VB/end up/RP/up with/IN/with a/DT/a different/JJ/different leaf/NN/leaf /,/, because/IN/because the/DT/the permutations/NNS/permutations are/VBP/are different/NNP/different. so/RB/so /,/, for/IN/for instance/NN/instance /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at 1/CD/1 2/CD/2 3/CD/3 this/DT/this is/VBZ/is already/RB/already sorted/NNP/sorted. if/IN/if i/PRP/i look/VBP/look at/IN/at 1/CD/1 3/CD/3 2/CD/2 /,/, the/DT/the sorted/VBN/sorted order/NN/order is/VBZ/is 1/CD/1 2/CD/2 3/CD/3. so/RB/so /,/, i/PRP/i have/VBP/have to/TO/to interchange/VB/interchange the/DT/the last/JJ/last two/CD/two elements/NNP/elements. this/DT/this order/NN/order must/MD/must appear/VB/appear at/IN/at a/DT/a different/JJ/different leaf/NN/leaf /,/, which/WDT/which means/VBZ/means all/DT/all of/IN/of these/DT/these n/NN/n factorial/JJ/factorial permutations/NNS/permutations ;/:/; must/MD/must appear/VB/appear in/IN/in one/CD/one of/IN/of these/DT/these leaves/NNP/leaves. and/CC/and different/JJ/different permutations/NNS/permutations must/MD/must appear/VB/appear at/IN/at different/JJ/different leaves/NNP/leaves. so/RB/so /,/, because/IN/because of/IN/of the/DT/the order/NN/order of/IN/of the/DT/the input/NN/input is/VBZ/is different/JJ/different and/CC/and must/MD/must land/VB/land up/RP/up in/IN/in different/JJ/different leaf/NNP/leaf. i/PRP/i land/VBP/land up/RP/up in/IN/in the/DT/the same/JJ/same leaf/NN/leaf /,/, i/PRP/i will/MD/will give/VB/give the/DT/the same/JJ/same answer/NN/answer for/IN/for both/DT/both orders/NNS/orders /,/, which/WDT/which is/VBZ/is incorrect/NNP/incorrect. so/RB/so /,/, this/DT/this means/VBZ/means /,/, there/EX/there must/MD/must be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves in/IN/in this/DT/this binary/JJ/binary tree/NNP/tree. and/CC/and each/DT/each of/IN/of these/DT/these different/JJ/different orders/NNS/orders /,/, must/MD/must land/VB/land up/RP/up in/IN/in the/DT/the leaf/NNP/leaf. and/CC/and different/JJ/different orders/NNS/orders must/MD/must land/VB/land up/RP/up in/IN/in different/JJ/different leaves/NNS/leaves /,/, which/WDT/which means/VBZ/means there/RB/there must/MD/must be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves in/IN/in this/DT/this binary/JJ/binary tree/NNP/tree. so/RB/so /,/, intuitively/RB/intuitively you/PRP/you can/MD/can see/VB/see /,/, why/WRB/why the/DT/the height/NN/height must/MD/must be/VB/be large/NNP/large. so/RB/so /,/, if/IN/if i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree with/IN/with large/JJ/large number/NN/number of/IN/of leaves/NNS/leaves /,/, the/DT/the height/NN/height better/NN/better be/VB/be large/NNP/large. so/RB/so /,/, we/PRP/we will/MD/will invoke/VB/invoke theorems/NNS/theorems /,/, which/WDT/which you/PRP/you must/MD/must have/VB/have seen/VBN/seen in/IN/in discrete/JJ/discrete structures/NNS/structures ;/:/; and/CC/and we/PRP/we will/MD/will finish/VB/finish the/DT/the proof/NNP/proof. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this flow/NN/flow chart/NN/chart or/CC/or this/DT/this decision/NN/decision tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 06/CD/06 /CD/) then/RB/then /,/, i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree and/CC/and i/PRP/i know/VBP/know that/IN/that number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is at/IN/at least/JJS/least n/NN/n factorial/NNP/factorial. using/VBG/using these/DT/these /,/, i/PRP/i want/VBP/want to/TO/to conclude/VB/conclude that/IN/that the/DT/the height/NN/height is/VBZ/is at/IN/at least/JJS/least something/NNP/something. so/RB/so /,/, if/IN/if i/PRP/i can/MD/can put/VB/put something/NN/something here/RB/here /,/, the/DT/the height/NN/height at/IN/at least/JJS/least something/NNP/something. then/RB/then /,/, i/PRP/i know/VBP/know that/IN/that the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm must/MD/must also/RB/also be/VB/be at/IN/at least/JJS/least this/DT/this much/NNP/much. so/RB/so /,/, why/WRB/why can/MD/can i/VB/i say/VB/say this/DT/this is/VBZ/is the/DT/the height/NN/height is/VBZ/is most/JJS/most /JJ/( /NN/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 42/CD/42 /CD/) /CD/) /./. well/RB/well /,/, supposing/VBG/supposing i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of leaves/NNS/leaves /,/, that/IN/that this/DT/this can/MD/can have/NNP/have. this/DT/this is/VBZ/is something/NN/something which/WDT/which you/PRP/you have/VBP/have done/VBN/done in/IN/in discrete/JJ/discrete structures/NNS/structures /,/, so/RB/so let/VB/let us/PRP/us state/NN/state this/NNP/this. so/RB/so /,/, binary/JJ/binary tree/NN/tree of/IN/of height/NN/height h/NN/h has/VBZ/has at/IN/at most/JJS/most /,/, well/RB/well 2/CD/2 to/TO/to the/DT/the h/NN/h leaves/NNP/leaves. the/DT/the number/NN/number of/IN/of leaves/NNS/leaves can/MD/can be/VB/be at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the h/NNP/h. well/RB/well /,/, let/VB/let us/PRP/us i/PRP/i hope/VBP/hope you/PRP/you can/MD/can sort/VB/sort of/IN/of prove/NN/prove this/NNP/this. let/NN/let us/PRP/us give/VBP/give a/DT/a proof/NN/proof anyway/NNP/anyway. so/RB/so /,/, proof/IN/proof is/VBZ/is by/IN/by induction/NN/induction on/IN/on h/NN/h /,/, so/RB/so the/DT/the base/NN/base case/NN/case i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do this/NNP/this. h/NN/h equals/NNS/equals 1/CD/1 /,/, i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do this/DT/this /,/, so/RB/so the/DT/the inductive/JJ/inductive step/NNP/step. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we /:/( /:/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 46/CD/46 /CD/) /CD/) the/DT/the two/CD/two steps/NNP/steps. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 59/CD/59 /CD/) well/RB/well /,/, let/VB/let us/PRP/us look/VB/look at/IN/at a/DT/a tree/NN/tree /,/, that/IN/that t/NN/t be/VB/be a/DT/a binary/JJ/binary tree/NN/tree of/IN/of height/NN/height /,/, let/VB/let us/PRP/us say/VB/say k/NN/k plus/CC/plus 1/CD/1. so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that /,/, the/DT/the statement/NN/statement is/VBZ/is true/JJ/true for/IN/for all/DT/all binary/JJ/binary trees/NNS/trees of/IN/of height/NN/height k/NN/k or/CC/or smaller/NNP/smaller. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to prove/VB/prove /,/, the/DT/the statement/NN/statement for/IN/for a/DT/a height/NN/height k/NN/k plus/CC/plus 1/CD/1. so/RB/so /,/, the/DT/the inductive/JJ/inductive hypothesis/NN/hypothesis is/VBZ/is that/IN/that /,/, for/IN/for every/DT/every tree/NN/tree of/IN/of height/NN/height k/NN/k or/CC/or smaller/JJR/smaller /,/, the/DT/the statement/NN/statement holds/NNP/holds. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to prove/VB/prove this/DT/this for/IN/for tree/NN/tree of/IN/of height/NN/height k/NN/k plus/CC/plus 1/CD/1. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at t/NN/t /,/, t/NN/t has/VBZ/has a/DT/a root/NN/root and/CC/and then/RB/then /,/, there/EX/there are/VBP/are two/CD/two sub/NN/sub trees/NNP/trees. this/DT/this is/VBZ/is what/WP/what it/PRP/it looks/VBZ/looks like/IN/like t/NN/t 1/CD/1 and/CC/and t/NN/t 2/CD/2. now/RB/now /,/, well/RB/well i/PRP/i remove/VBP/remove the/DT/the root/NN/root and/CC/and now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to apply/VB/apply induction/NN/induction to/TO/to t/VB/t 1/CD/1 and/CC/and t/NN/t 2/CD/2. apply/RB/apply the/DT/the inductive/JJ/inductive hypothesis/NN/hypothesis to/TO/to t/VB/t 1/CD/1 and/CC/and t/NN/t 2/CD/2. well/RB/well /,/, this/DT/this had/VBD/had height/VBN/height k/NN/k plus/RB/plus 1/CD/1 /,/, which/WDT/which means/VBZ/means both/DT/both t/NN/t 1/CD/1 and/CC/and t/NN/t 2/CD/2 have/VBP/have height/VBN/height k/NN/k or/CC/or less/NNP/less. one/CD/one of/IN/of them/PRP/them has/VBZ/has height/VBN/height k/NN/k /,/, the/DT/the other/JJ/other could/MD/could be/VB/be k/NN/k or/CC/or it/PRP/it could/MD/could be/VB/be less/NNP/less. so/RB/so /,/, the/DT/the height/NN/height of/IN/of t/NN/t 1/CD/1 is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to k/NNP/k. similarly/RB/similarly /,/, height/RB/height of/IN/of t/NN/t 2/CD/2 is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to k/NNP/k. that/IN/that is/VBZ/is the/DT/the reason/NN/reason /,/, we/PRP/we can/MD/can apply/VB/apply the/DT/the inductive/JJ/inductive hypothesis/NNP/hypothesis. both/DT/both of/IN/of them/PRP/them have/VBP/have height/VBN/height less/NNP/less. now/RB/now /,/, we/PRP/we can/MD/can apply/VB/apply the/DT/the inductive/JJ/inductive hypothesis/NNP/hypothesis. so/RB/so /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 1/CD/1 /,/, is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the k/NNP/k. similarly/RB/similarly /,/, number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 2/CD/2 is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the k/NNP/k. and/CC/and now/RB/now you/PRP/you can/MD/can see/VB/see /,/, basically/RB/basically the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t /,/, is/VBZ/is number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 1/CD/1 plus/CC/plus the/DT/the number/NN/number of/IN/of leaves/NNS/leaves in/IN/in t/NN/t 2/CD/2 ;/:/; which/WDT/which is/VBZ/is this/DT/this plus/NN/plus this/DT/this which/WDT/which is/VBZ/is at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the k/NN/k plus/VBZ/plus 1/CD/1. and/CC/and that/IN/that is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the proof/NNP/proof. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 28/CD/28 /CD/) so/RB/so /,/, let/VB/let us/PRP/us just/RB/just write/VBP/write this/DT/this /,/, so/RB/so number/NN/number of/IN/of leaves/NNS/leaves t/VBP/t equals/NNS/equals number/NN/number of/IN/of leaves/NNS/leaves t/VBP/t 1/CD/1 plus/NNS/plus number/NN/number of/IN/of leaves/NNS/leaves t/VBP/t 2/CD/2. that/IN/that is/VBZ/is less/JJR/less than/IN/than 2/CD/2 to/TO/to the/DT/the k/NN/k plus/VBZ/plus 2/CD/2 to/TO/to the/DT/the k/NN/k 2/CD/2 to/TO/to the/DT/the k/NN/k plus/VBZ/plus 1/CD/1. that/IN/that finishes/NNS/finishes the/DT/the inductive/JJ/inductive proof/NN/proof /,/, that/IN/that on/IN/on a/DT/a tree/NN/tree of/IN/of height/NN/height h/NNP/h. when/WRB/when i/PRP/i have/VBP/have a/DT/a binary/JJ/binary tree/NN/tree of/IN/of height/NN/height h/NN/h /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the h/NNP/h. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 02/CD/02 /CD/) number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the h/NNP/h. well/RB/well taking/VBG/taking logs/NNS/logs /,/, i/PRP/i get/VBP/get log/JJ/log the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is the/DT/the lower/JJR/lower bound/NN/bound on/IN/on the/DT/the height/NNP/height. well/RB/well we/PRP/we know/VBP/know remember/NN/remember that/IN/that in/IN/in our/PRP$/our binary/JJ/binary tree/NN/tree /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves was/VBD/was n/VBN/n factorial/NNP/factorial. so/RB/so /,/, the/DT/the height/NN/height this/DT/this means/VBZ/means /,/, the/DT/the height/NN/height is/VBZ/is at/IN/at least/JJS/least log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n factorial/NNP/factorial. well/RB/well /,/, this/DT/this is/VBZ/is the/DT/the height/NN/height of/IN/of any/DT/any of/IN/of the/DT/the tree/NN/tree /,/, which/WDT/which is/VBZ/is related/VBN/related to/TO/to any/DT/any this/DT/this flowcharts/NNS/flowcharts /,/, which/WDT/which sort/NN/sort flowcharts/NNP/flowcharts. for/IN/for sorting/VBG/sorting we/PRP/we looked/VBD/looked at/IN/at these/DT/these flowcharts/NNP/flowcharts. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is n/VBN/n factorial/NNP/factorial. and/CC/and we/PRP/we have/VBP/have just/RB/just seen/VBN/seen that/IN/that /,/, the/DT/the height/NN/height must/MD/must be/VB/be at/IN/at least/JJS/least the/DT/the log/NN/log of/IN/of n/NN/n factorial/NNP/factorial. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this /,/, we/PRP/we are/VBP/are very/RB/very close/NNP/close. log/NN/log of/IN/of n/NN/n factorial/JJ/factorial is/VBZ/is at/IN/at least/JJS/least log/NN/log base/NN/base 2/CD/2 n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2 /,/, why/WRB/why is/VBZ/is this/DT/this true/JJ/true ?/./? well/RB/well /,/, this/DT/this is/VBZ/is true/JJ/true /,/, because/IN/because n/NN/n factorial/JJ/factorial is/VBZ/is n/VBN/n into/IN/into n/NN/n minus/NN/minus 1/CD/1 /,/, somewhere/RB/somewhere n/JJ/n by/IN/by 2/CD/2. and/CC/and then/RB/then /,/, all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to 1/CD/1 /,/, now/RB/now if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the top/JJ/top n/NN/n by/IN/by 2/CD/2 terms/NNS/terms /,/, all/DT/all of/IN/of them/PRP/them are/VBP/are greater/JJR/greater than/IN/than n/NN/n by/IN/by 2/CD/2. there/EX/there are/VBP/are n/NN/n by/IN/by 2/CD/2 terms/NNS/terms and/CC/and all/DT/all of/IN/of them/PRP/them are/VBP/are at/IN/at least/JJS/least n/NN/n by/IN/by 2/CD/2 /,/, all/DT/all of/IN/of whom/WP/whom are/VBP/are greater/JJR/greater than/IN/than equal/JJ/equal to/TO/to n/VB/n by/IN/by 2/CD/2. so/RB/so /,/, n/IN/n factorial/JJ/factorial is/VBZ/is at/IN/at least/JJS/least n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2. well/RB/well /,/, that/IN/that is/VBZ/is why/WRB/why this/DT/this is/VBZ/is true/JJ/true and/CC/and this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n by/IN/by 2/CD/2 log/NN/log n/NN/n by/IN/by 2/CD/2. this/DT/this is/VBZ/is omega/NN/omega n/NN/n log/NN/log n/NN/n /,/, so/RB/so the/DT/the time/NN/time taken/VBN/taken is/VBZ/is at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have proved/VBN/proved some/DT/some constant/JJ/constant times/NNS/times n/VBP/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this shows/VBZ/shows that/IN/that merge/NN/merge sort/NN/sort /,/, for/IN/for instance/NN/instance we/PRP/we know/VBP/know it/PRP/it takes/VBZ/takes maximum/NN/maximum time/NN/time n/NN/n log/NN/log n/NNP/n. but/CC/but /,/, there/EX/there are/VBP/are inputs/NNS/inputs on/IN/on which/WDT/which it/PRP/it takes/VBZ/takes /,/, i/PRP/i mean/VBP/mean log/JJ/log n/NN/n /,/, it/PRP/it must/MD/must take/NNP/take. so/RB/so /,/, similarly/RB/similarly quick/JJ/quick sort/NN/sort and/CC/and any/DT/any other/JJ/other algorithm/NN/algorithm in/IN/in this/DT/this model/NN/model /,/, which/WDT/which is/VBZ/is if/IN/if the/DT/the only/JJ/only thing/NN/thing which/WDT/which the/DT/the algorithm/NN/algorithm can/MD/can do/VB/do /,/, is/VBZ/is look/NN/look at/IN/at two/CD/two element/JJ/element /,/, compare/JJ/compare them/NNP/them. and/CC/and perhaps/RB/perhaps move/VB/move them/PRP/them around/IN/around /,/, swap/NN/swap them/PRP/them for/IN/for instance/NN/instance or/CC/or move/VB/move them/PRP/them around/NNP/around. if/IN/if this/DT/this is/VBZ/is the/DT/the only/JJ/only thing/NN/thing /,/, that/IN/that is/VBZ/is possible/NNP/possible. then/RB/then /,/, the/DT/the time/NN/time taken/VBN/taken by/IN/by any/DT/any such/JJ/such algorithm/NN/algorithm for/IN/for sorting/NN/sorting must/MD/must be/VB/be n/VBN/n log/NN/log n/NNP/n. there/EX/there are/VBP/are sorting/VBG/sorting algorithms/NNS/algorithms which/WDT/which do/VBP/do not/RB/not fit/VB/fit into/IN/into this/DT/this model/NNP/model. we/PRP/we will/MD/will not/RB/not cover/VB/cover those/DT/those /,/, hopefully/RB/hopefully we/PRP/we have/VBP/have covered/VBN/covered some/DT/some of/IN/of them/PRP/them in/IN/in your/PRP$/your data/NNS/data structures/NNS/structures course/NNP/course. these/DT/these are/VBP/are bucket/NN/bucket sort/NN/sort radix/NN/radix sort/NN/sort /,/, well/RB/well these/DT/these algorithms/NNS/algorithms differ/VBP/differ in/IN/in that/NNP/that. they/PRP/they you/PRP/you can/MD/can look/VB/look at/IN/at the/DT/the least/JJS/least significant/JJ/significant digit/NNP/digit. you/PRP/you can/MD/can divide/VB/divide /,/, you/PRP/you can/MD/can take/VB/take floors/NNS/floors of/IN/of these/DT/these numbers/NNP/numbers. if/IN/if they/PRP/they are/VBP/are integers/NNS/integers /,/, you/PRP/you can/MD/can take/VB/take floors/NNS/floors and/CC/and then/RB/then /,/, do/VBP/do funny/JJ/funny things/NNS/things with/IN/with them/NNP/them. the/DT/the difference/NN/difference between/IN/between these/DT/these algorithms/NNS/algorithms and/CC/and let/VB/let us/PRP/us say/VB/say something/NN/something like/IN/like merge/NN/merge sort/NNP/sort. is/VBZ/is merge/NN/merge sort/NN/sort /,/, when/WRB/when you/PRP/you look/VBP/look at/IN/at 2/CD/2 numbers/NNS/numbers the/DT/the only/JJ/only operation/NN/operation /,/, that/IN/that you/PRP/you can/MD/can do/VB/do is/VBZ/is compare/VB/compare them/NNP/them. on/IN/on any/DT/any element/NN/element /,/, if/IN/if i/PRP/i take/VBP/take an/DT/an element/NN/element of/IN/of the/DT/the array/NNP/array. only/RB/only thing/VBG/thing i/PRP/i am/VBP/am allowed/VBN/allowed to/TO/to do/VB/do on/IN/on this/DT/this element/NN/element is/VBZ/is compare/JJ/compare this/DT/this element/NN/element with/IN/with some/DT/some other/JJ/other element/NN/element in/IN/in the/DT/the array/NNP/array. i/PRP/i can/MD/can not/RB/not sort/VB/sort of/IN/of divide/NN/divide it/PRP/it by/IN/by 10/CD/10 /,/, 20/CD/20 /,/, 100/CD/100 whatever/NNP/whatever. i/PRP/i can/MD/can not/RB/not look/VB/look at/IN/at it/PRP/it is/VBZ/is least/JJS/least significant/JJ/significant bit/NN/bit etcetera/NN/etcetera /,/, etcetera/NNP/etcetera. that/IN/that is/VBZ/is as/IN/as far/RB/far as/IN/as sorting/VBG/sorting is/VBZ/is concerned/NNP/concerned. we/PRP/we will/MD/will continue/VB/continue with/IN/with our/PRP$/our discussion/NN/discussion of/IN/of algorithm/NN/algorithm design/NN/design techniques/NNS/techniques /,/, by/IN/by looking/NN/looking at/IN/at some/DT/some other/JJ/other problems/NNS/problems /,/, which/WDT/which are/VBP/are fairly/RB/fairly interesting/NNP/interesting. and/CC/and where/WRB/where this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer paradigm/NN/paradigm sort/NN/sort of/IN/of works/NNS/works /,/, and/CC/and gives/VBZ/gives you/PRP/you better/JJR/better results/NNP/results. in/IN/in some/DT/some cases/NNS/cases perhaps/RB/perhaps you/PRP/you the/DT/the algorithm/NN/algorithm /,/, that/IN/that we/PRP/we desire/NNP/desire. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 58/CD/58 /CD/) the/DT/the first/JJ/first one/CD/one is/VBZ/is this/DT/this /,/, so/RB/so you/PRP/you are/VBP/are you/PRP/you are/VBP/are given/VBN/given a/DT/a 2/CD/2 k/NNP/k. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the input/NN/input by/IN/by 2/CD/2 k/NN/k square/NNP/square. and/CC/and what/WP/what you/PRP/you want/VBP/want as/IN/as output/NN/output is/VBZ/is a/DT/a tiling/NN/tiling with/IN/with /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what all/PDT/all this/DT/this means/NNS/means /,/, with/IN/with this/NNP/this. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by tiling/NN/tiling /,/, a/DT/a tiling/NN/tiling essentially/RB/essentially means/VBZ/means /,/, i/PRP/i must/MD/must fill/VB/fill up/RP/up all/DT/all these/DT/these squares/NNP/squares. and/CC/and try/NN/try and/CC/and fill/NN/fill up/RP/up as/RB/as many/JJ/many squares/NNS/squares as/IN/as possible/JJ/possible with/IN/with pieces/NNS/pieces /,/, which/WDT/which look/NN/look like/IN/like this/NNP/this. so/RB/so /,/, each/DT/each piece/NN/piece is/VBZ/is /,/, let/VB/let us/PRP/us say/VB/say a/DT/a kind/NN/kind of/IN/of a/DT/a domino/NN/domino /,/, which/WDT/which sort/NN/sort of/IN/of looks/NNS/looks is/VBZ/is of/IN/of this/DT/this shape/NNP/shape. and/CC/and i/PRP/i want/VBP/want to/TO/to try/NN/try and/CC/and fill/NN/fill up/RP/up /,/, as/IN/as many/JJ/many squares/NNS/squares as/IN/as possible/JJ/possible in/IN/in this/NNP/this. so/RB/so /,/, well/RB/well you/PRP/you can/MD/can see/VB/see immediately/RB/immediately /,/, i/PRP/i may/MD/may not/RB/not be/VB/be able/JJ/able to/TO/to fill/VB/fill up/RP/up all/DT/all square/NNP/square. even/RB/even for/IN/for k/NN/k equals/NNS/equals 1/CD/1 /,/, if/IN/if i/PRP/i have/VBP/have a/DT/a 2/CD/2 by/IN/by 2/CD/2 square/JJ/square /,/, i/PRP/i have/VBP/have a/DT/a 2/CD/2 by/IN/by 2/CD/2 square/NNP/square. well/RB/well i/PRP/i can/MD/can put/VB/put one/CD/one of/IN/of them/NNP/them. so/RB/so /,/, i/PRP/i can/MD/can put/VB/put something/NN/something which/WDT/which fills/NNS/fills up/IN/up these/DT/these three/CD/three squares/NNS/squares and/CC/and this/DT/this will/MD/will be/VB/be an/DT/an empty/NN/empty square/NNP/square. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a tiling/NN/tiling of/IN/of a/DT/a 2/CD/2 by/IN/by 2/CD/2 square/JJ/square with/IN/with a/DT/a domino/NN/domino of/IN/of this/DT/this form/NN/form /,/, which/WDT/which does/VBZ/does everything/NN/everything except/IN/except one/CD/one square/NNP/square. so/RB/so /,/, what/WDT/what about/IN/about 2/CD/2 to/TO/to the/DT/the k/NN/k cross/NN/cross 2/CD/2 to/TO/to the/DT/the k/NNP/k. well/RB/well /,/, the/DT/the number/NN/number of/IN/of squares/NNS/squares /,/, we/PRP/we look/VBP/look at/IN/at the/DT/the number/NN/number of/IN/of squares/NNS/squares is/VBZ/is 2/CD/2 to/TO/to the/DT/the 2/CD/2 k/NNP/k. these/DT/these are/VBP/are the/DT/the number/NN/number of/IN/of squares/NNS/squares /,/, the/DT/the number/NN/number of/IN/of squares/NNS/squares and/CC/and this/DT/this is/VBZ/is 1/CD/1 mod/NN/mod 3/CD/3. i/PRP/i will/MD/will let/VB/let you/PRP/you figure/VB/figure this/DT/this one/CD/one out/NNP/out. the/DT/the number/NN/number of/IN/of squares/NNS/squares is/VBZ/is always/RB/always 1/CD/1 mod/NN/mod 3/CD/3. well/RB/well it/PRP/it is/VBZ/is 2/CD/2 here/RB/here and/CC/and you/PRP/you can/MD/can see/VB/see /,/, that/IN/that it/PRP/it is/VBZ/is always/RB/always two/NNP/two. if/IN/if you/PRP/you want/VBP/want you/PRP/you can/MD/can prove/VB/prove it/PRP/it by/IN/by induction/NN/induction on/IN/on k/NN/k /,/, but/CC/but even/RB/even otherwise/VBP/otherwise you/PRP/you can/MD/can sort/VB/sort of/IN/of check/NN/check that/IN/that /,/, the/DT/the number/NN/number of/IN/of squares/NNS/squares will/MD/will be/VB/be always/RB/always 1/CD/1 mod/NN/mod 3/CD/3. maybe/NN/maybe we/PRP/we will/MD/will just/RB/just look/VB/look at/IN/at a/DT/a equals/NNS/equals 2/CD/2. so/RB/so /,/, then/RB/then it/PRP/it is/VBZ/is a/DT/a 4/CD/4 by/IN/by 4/CD/4 /,/, how/WRB/how does/VBZ/does this/DT/this look/NN/look like/NNP/like. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a 4/CD/4 by/IN/by 4/CD/4 thing/NN/thing and/CC/and you/PRP/you have/VBP/have well/RB/well 16/CD/16 squares/NNS/squares ;/:/; and/CC/and that/IN/that is/VBZ/is 1/CD/1 mod/NN/mod 3/CD/3. when/WRB/when i/PRP/i divide/VBP/divide this/DT/this by/IN/by 3/CD/3 i/PRP/i get/VBP/get 1/CD/1 /,/, so/RB/so 3/CD/3 times/NNS/times 5/CD/5 is/VBZ/is 15/CD/15 and/CC/and 1/CD/1 /,/, one/CD/one gets/NNS/gets left/VBN/left out/NNP/out. so/RB/so /,/, that/IN/that is/VBZ/is true/JJ/true whatever/NN/whatever k/NN/k i/PRP/i choose/VBP/choose /,/, it/PRP/it is/VBZ/is always/RB/always 3/CD/3 times/NNS/times something/NN/something plus/RB/plus 1/CD/1. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by 1/CD/1 modulo/NN/modulo 3/CD/3. when/WRB/when i/PRP/i divide/VBP/divide by/IN/by 3/CD/3 i/PRP/i get/VBP/get 1/CD/1 /,/, the/DT/the remainder/NN/remainder is/VBZ/is 1/CD/1. so/RB/so /,/, can/MD/can i/PRP/i sort/VB/sort of/IN/of now/RB/now put/VBN/put these/DT/these dominos/NNP/dominos. so/RB/so that/IN/that /,/, all/DT/all except/IN/except 1/CD/1 square/NN/square is/VBZ/is covered/NNP/covered. so/RB/so /,/, i/PRP/i have/VBP/have this/DT/this 2/CD/2 by/IN/by 2/CD/2 k/NN/k 2/CD/2 to/TO/to the/DT/the k/NN/k by/IN/by 2/CD/2 to/TO/to the/DT/the k/NN/k square/NNP/square. so/RB/so /,/, i/PRP/i will/MD/will square/VB/square with/IN/with side/NN/side length/NN/length to/TO/to the/DT/the k/NNP/k. i/PRP/i have/VBP/have these/DT/these dominos/NNS/dominos /,/, which/WDT/which each/DT/each of/IN/of them/PRP/them has/VBZ/has 3/CD/3 squares/NNS/squares put/VBD/put together/NNP/together. can/MD/can i/VB/i arrange/NN/arrange these/DT/these on/IN/on these/DT/these squares/NNS/squares /,/, so/RB/so that/IN/that all/DT/all except/IN/except 1/CD/1 square/NN/square is/VBZ/is covered/VBN/covered /,/, this/DT/this is/VBZ/is the/DT/the question/NN/question ;/:/; the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. and/CC/and we/PRP/we would/MD/would like/VB/like an/DT/an algorithm/NN/algorithm to/TO/to do/VB/do this/DT/this and/CC/and well/RB/well /,/, we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do it/PRP/it using/VBG/using divide/NN/divide and/CC/and conquer/NNP/conquer. that/IN/that is/VBZ/is the/DT/the goal/NN/goal /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this 4/CD/4 by/IN/by 4/CD/4. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will see/VB/see what/WP/what is/VBZ/is the/DT/the scene/NNP/scene. can/MD/can i/VB/i do/VBP/do a/DT/a 4/CD/4 by/IN/by 4/CD/4 with/IN/with /,/, so/RB/so here/RB/here is/VBZ/is a/DT/a 4/CD/4 by/IN/by 4/CD/4 square/JJ/square /,/, can/MD/can i/PRP/i do/VBP/do this/NNP/this. well/RB/well /,/, since/IN/since i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do something/NN/something like/IN/like divide/NN/divide and/CC/and conquer/NNP/conquer. i/PRP/i would/MD/would like/VB/like to/TO/to divide/VB/divide this/DT/this into/IN/into two/CD/two parts/NNS/parts /,/, or/CC/or more/NNP/more. in/IN/in this/DT/this case/NN/case four/CD/four parts/NNS/parts /,/, tile/JJ/tile each/DT/each of/IN/of them/PRP/them and/CC/and put/VBD/put them/PRP/them together/NNP/together. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 24/CD/24 /CD/) well/RB/well /,/, let/VB/let us/PRP/us take/VB/take a/DT/a bigger/JJR/bigger one/CD/one and/CC/and see/VB/see how/WRB/how this/DT/this is/VBZ/is done/NNP/done. i/PRP/i know/VBP/know how/WRB/how to/TO/to tile/VB/tile this/DT/this /,/, so/RB/so that/IN/that one/CD/one is/VBZ/is left/VBN/left /,/, i/PRP/i know/VBP/know how/WRB/how to/TO/to tile/VB/tile this/DT/this /,/, so/RB/so that/IN/that one/CD/one is/VBZ/is left/VBN/left and/CC/and so/RB/so on/NNP/on. now/RB/now /,/, how/WRB/how do/VBP/do i/PRP/i tile/VB/tile the/DT/the whole/JJ/whole thing/NN/thing /,/, so/RB/so that/IN/that one/CD/one is/VBZ/is left/NNP/left. well/RB/well supposing/VBG/supposing the/DT/the one/CD/one left/NN/left here/RB/here is/VBZ/is this/NNP/this. one/CD/one left/NN/left here/RB/here is/VBZ/is this/DT/this and/CC/and one/CD/one left/NN/left here/RB/here is/VBZ/is this/NNP/this. now/RB/now /,/, i/PRP/i am/VBP/am able/JJ/able to/TO/to tile/VB/tile all/DT/all four/CD/four of/IN/of them/NNP/them. so/RB/so /,/, i/PRP/i tile/VBP/tile this/DT/this /,/, so/RB/so that/IN/that this/DT/this is/VBZ/is my/PRP$/my first/JJ/first domino/NN/domino /,/, i/PRP/i use/VBP/use my/PRP$/my first/JJ/first domino/NN/domino there/RB/there /,/, i/PRP/i put/VBD/put it/PRP/it around/IN/around like/IN/like this/NNP/this. this/DT/this is/VBZ/is my/PRP$/my second/JJ/second domino/NN/domino /,/, i/PRP/i put/VBD/put it/PRP/it around/IN/around like/IN/like this/NNP/this. here/RB/here is/VBZ/is 3/CD/3 /,/, it/PRP/it does/VBZ/does not/RB/not matter/VB/matter how/WRB/how i/PRP/i put/VBD/put my/PRP$/my fourth/JJ/fourth as/IN/as of/IN/of now/NNP/now. we/PRP/we will/MD/will we/VB/we will/MD/will change/VB/change this/DT/this later/JJ/later /,/, supposing/VBG/supposing the/DT/the fourth/JJ/fourth is/VBZ/is like/IN/like this/NNP/this. well/RB/well now/RB/now i/PRP/i can/MD/can put/VB/put the/DT/the fifth/JJ/fifth domino/NN/domino here/RB/here /,/, here/RB/here 5/CD/5 5/CD/5 5/CD/5. so/RB/so /,/, i/PRP/i managed/VBD/managed to/TO/to sort/NN/sort of/IN/of tile/NN/tile at/IN/at least/JJS/least 4/CD/4 by/IN/by 4/CD/4 using/VBG/using 5/CD/5 dominos/NNP/dominos. i/PRP/i have/VBP/have just/RB/just one/CD/one left/NN/left which/WDT/which is/VBZ/is what/WP/what i/PRP/i want/NNP/want. you/PRP/you would/MD/would like/VB/like to/TO/to repeat/VB/repeat this/DT/this for/IN/for 2/CD/2 k/NN/k by/IN/by 2/CD/2 k/NNP/k. so/RB/so /,/, how/WRB/how does/VBZ/does that/IN/that look/NNP/look. so/RB/so /,/, here/RB/here we/PRP/we again/RB/again would/MD/would like/VB/like to/TO/to do/VB/do a/DT/a divide/NN/divide and/CC/and conquer/NN/conquer /,/, we/PRP/we would/MD/would like/VB/like to/TO/to divide/VB/divide this/NNP/this. i/PRP/i would/MD/would like/VB/like to/TO/to first/JJ/first tile/NN/tile this/DT/this /,/, tile/IN/tile these/DT/these 4/CD/4 and/CC/and then/RB/then put/VBD/put them/PRP/them together/NNP/together. well/RB/well /,/, by/IN/by looking/NN/looking at/IN/at this/DT/this /,/, this/DT/this example/NN/example i/PRP/i can/MD/can do/VB/do it/PRP/it if/IN/if provided/VBN/provided this/DT/this square/NN/square left/VBD/left off/RP/off here/RB/here is/VBZ/is this/NNP/this. the/DT/the square/NN/square left/VBD/left off/RP/off in/IN/in this/DT/this /,/, is/VBZ/is this/NNP/this. the/DT/the square/NN/square left/VBD/left off/RP/off here/RB/here is/VBZ/is this/NNP/this. here/RB/here i/PRP/i really/RB/really do/VBP/do not/RB/not care/NNP/care. if/IN/if i/PRP/i can/MD/can tile/VB/tile the/DT/the entire/JJ/entire region/NN/region here/RB/here /,/, except/IN/except this/DT/this corner/NN/corner and/CC/and so/RB/so on/NNP/on. for/IN/for these/DT/these 3/CD/3 /,/, then/RB/then i/PRP/i am/VBP/am able/JJ/able to/TO/to tile/VB/tile the/DT/the entire/JJ/entire region/NN/region on/IN/on top/JJ/top leaving/NN/leaving one/CD/one squares/NNP/squares. that/WDT/that square/JJ/square left/NN/left will/MD/will be/VB/be in/IN/in this/DT/this big/JJ/big sort/NN/sort of/IN/of region/NNP/region. this/DT/this is/VBZ/is 2/CD/2 to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 /,/, 2/CD/2 to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 /,/, 2/CD/2 to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, this/DT/this whole/JJ/whole thing/NN/thing is/VBZ/is 2/CD/2 to/TO/to the/DT/the k/NNP/k. so/RB/so /,/, if/IN/if i/PRP/i can/MD/can do/VB/do this/DT/this /,/, then/RB/then i/PRP/i can/MD/can fit/VB/fit in/IN/in this/DT/this entire/JJ/entire /,/, this/DT/this extra/JJ/extra sort/NN/sort of/IN/of domino/NN/domino here/NNP/here. there/EX/there will/MD/will be/VB/be one/CD/one square/JJ/square left/NN/left over/IN/over in/IN/in this/DT/this region/NN/region /,/, good/NNP/good. so/RB/so /,/, again/RB/again notice/NN/notice a/DT/a crucial/JJ/crucial thing/NN/thing /,/, to/TO/to be/VB/be able/JJ/able to/TO/to carry/VB/carry this/DT/this inductive/JJ/inductive process/NN/process /,/, to/TO/to completion/NNP/completion. i/PRP/i should/MD/should be/VB/be able/JJ/able to/TO/to have/VB/have the/DT/the extra/JJ/extra square/NNP/square. i/PRP/i mean/VBP/mean the/DT/the square/JJ/square left/NN/left over/IN/over as/RB/as a/DT/a corner/NN/corner square/NNP/square. when/WRB/when i/PRP/i tile/VBP/tile a/DT/a region/NN/region which/WDT/which is/VBZ/is like/IN/like this/DT/this /,/, the/DT/the left/NN/left over/IN/over square/JJ/square must/MD/must be/VB/be a/DT/a corner/NN/corner square/NNP/square. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a square/JJ/square left/NN/left over/IN/over or/CC/or left/VBN/left un/NN/un tiled/NNP/tiled. i/PRP/i have/VBP/have tiled/VBN/tiled the/DT/the entire/JJ/entire region/NN/region /,/, except/IN/except this/DT/this small/JJ/small square/NNP/square. if/IN/if i/PRP/i can/MD/can do/VB/do this/DT/this /,/, then/RB/then clearly/RB/clearly i/PRP/i can/MD/can do/VB/do the/DT/the big/JJ/big thing/NNP/thing. so/RB/so /,/, i/PRP/i started/VBD/started out/RP/out my/PRP$/my initial/JJ/initial objective/NN/objective was/VBD/was to/TO/to tile/VB/tile to/TO/to 2/CD/2 to/TO/to the/DT/the k/NN/k by/IN/by 2/CD/2 to/TO/to the/DT/the k/NNP/k. that/IN/that is/VBZ/is what/WP/what i/PRP/i started/VBD/started out/RP/out with/IN/with /,/, i/PRP/i want/VBP/want to/TO/to apply/VB/apply this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer kind/NN/kind of/IN/of thing/NNP/thing. well/RB/well /,/, actually/RB/actually the/DT/the process/NN/process is/VBZ/is really/RB/really induction/NN/induction always/NNP/always. if/IN/if i/PRP/i can/MD/can do/VB/do it/PRP/it for/IN/for a/DT/a small/JJ/small square/NN/square /,/, can/MD/can i/PRP/i push/VB/push it/PRP/it up/RP/up to/TO/to a/DT/a bigger/JJR/bigger square/NN/square /,/, that/IN/that is/VBZ/is the/DT/the goal/NNP/goal. well/RB/well /,/, we/PRP/we want/VBP/want to/TO/to do/VB/do divide/JJ/divide and/CC/and conquer/NNP/conquer. so/RB/so /,/, we/PRP/we saw/VBD/saw that/IN/that /,/, we/PRP/we break/VBP/break it/PRP/it up/IN/up into/IN/into these/DT/these 4/CD/4 smaller/JJR/smaller squares/NNP/squares. now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to tile/VB/tile these/DT/these smaller/JJR/smaller squares/NNS/squares and/CC/and put/VBD/put them/PRP/them up/RP/up /,/, to/TO/to a/DT/a tiling/NN/tiling for/IN/for the/DT/the bigger/JJR/bigger square/NNP/square. well/RB/well /,/, each/DT/each of/IN/of these/DT/these smaller/JJR/smaller squares/NNS/squares /,/, that/IN/that is/VBZ/is one/CD/one square/JJ/square /,/, one/CD/one small/JJ/small square/NN/square which/WDT/which is/VBZ/is not/RB/not tiled/NNP/tiled. one/CD/one piece/NN/piece which/WDT/which is/VBZ/is not/RB/not tiled/NNP/tiled. now/RB/now /,/, this/DT/this happens/NNS/happens to/TO/to be/VB/be the/DT/the corner/NN/corner /,/, then/RB/then i/PRP/i can/MD/can push/VB/push the/DT/the induction/NN/induction upwards/NNP/upwards. but/CC/but /,/, for/IN/for the/DT/the induction/NN/induction to/TO/to work/VB/work even/RB/even the/DT/the final/JJ/final /,/, so/RB/so let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this again/NNP/again. for/IN/for the/DT/the induction/NN/induction to/TO/to work/VB/work in/IN/in this/DT/this big/JJ/big square/NN/square /,/, i/PRP/i want/VBP/want the/DT/the one/CD/one square/NN/square which/WDT/which is/VBZ/is not/RB/not tiled/VBN/tiled to/TO/to be/VB/be a/DT/a corner/NNP/corner. well/RB/well /,/, it/PRP/it can/MD/can not/RB/not be/VB/be corner/RB/corner here/RB/here /,/, because/IN/because everything/NN/everything else/RB/else is/VBZ/is tiled/VBN/tiled /,/, this/DT/this can/MD/can not/RB/not be/VB/be a/DT/a corner/NN/corner /,/, it/PRP/it can/MD/can not/RB/not be/VB/be a/DT/a corner/NNP/corner. well/RB/well /,/, can/MD/can it/PRP/it be/VB/be this/DT/this corner/NN/corner /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. it/PRP/it is/VBZ/is like/IN/like i/PRP/i leave/VBP/leave this/DT/this square/NN/square un/NN/un tiled/VBD/tiled /,/, so/RB/so leave/VBP/leave this/NNP/this... now/RB/now /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at these/DT/these 4/CD/4 small/JJ/small problems/NNS/problems /,/, they/PRP/they all/VBP/all look/VBP/look absolutely/RB/absolutely alike/NNP/alike. i/PRP/i want/VBP/want to/TO/to tile/VB/tile everything/NN/everything /,/, except/IN/except a/DT/a small/JJ/small square/NN/square in/IN/in the/DT/the corner/NNP/corner. i/PRP/i want/VBP/want to/TO/to tile/VB/tile all/DT/all of/IN/of it/PRP/it /,/, except/IN/except this/DT/this square/NN/square in/IN/in the/DT/the corner/NNP/corner. except/IN/except this/DT/this in/IN/in the/DT/the corner/NN/corner and/CC/and except/IN/except this/DT/this in/IN/in the/DT/the corner/NNP/corner. and/CC/and i/PRP/i put/VBD/put them/PRP/them together/RB/together like/IN/like this/NNP/this. this/DT/this tile/NN/tile is/VBZ/is the/DT/the entire/JJ/entire big/JJ/big square/NN/square /,/, except/IN/except for/IN/for this/DT/this one/CD/one thing/NN/thing in/IN/in the/DT/the corner/NNP/corner. and/CC/and well/RB/well this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm /,/, break/NN/break it/PRP/it up/IN/up into/IN/into 2/CD/2. tile/JJ/tile these/DT/these 4/CD/4 recursively/RB/recursively and/CC/and put/VBD/put them/PRP/them together/RB/together like/IN/like this/DT/this /,/, and/CC/and in/IN/in the/DT/the middle/NN/middle i/PRP/i just/RB/just put/VBD/put one/CD/one domino/NN/domino. one/CD/one domino/NN/domino fill/NN/fill up/IN/up these/DT/these three/CD/three squares/NNS/squares /,/, so/RB/so i/PRP/i have/VBP/have tile/JJ/tile everything/NN/everything except/IN/except this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a well/RB/well divide/JJ/divide and/CC/and conquer/NN/conquer sort/NN/sort of/IN/of strategy/NN/strategy to/TO/to tile/VB/tile squares/NNP/squares. so/RB/so /,/, this/DT/this problem/NN/problem looks/VBZ/looks a/DT/a bit/NN/bit different/NN/different from/IN/from the/DT/the other/JJ/other problems/NNP/problems. and/CC/and that/IN/that is/VBZ/is why/WRB/why i/PRP/i picked/VBD/picked this/DT/this /,/, because/IN/because the/DT/the strategy/NN/strategy can/MD/can be/VB/be used/VBN/used not/RB/not just/RB/just for/IN/for computer/NN/computer algorithms/NNS/algorithms or/CC/or puzzles/NNS/puzzles /,/, or/CC/or whatever/RB/whatever you/PRP/you have/NNP/have. and/CC/and the/DT/the other/JJ/other sort/NN/sort of/IN/of lesson/NN/lesson /,/, that/IN/that we/PRP/we learn/VBP/learn through/IN/through this/DT/this example/NNP/example. is/VBZ/is that/IN/that you/PRP/you start/VBP/start with/IN/with some/DT/some problem/NN/problem you/PRP/you want/VBP/want to/TO/to solve/NNP/solve. we/PRP/we have/VBP/have seen/VBN/seen this/DT/this before/NN/before /,/, along/IN/along the/DT/the way/NN/way you/PRP/you would/MD/would like/VB/like to/TO/to apply/VB/apply /,/, you/PRP/you want/VBP/want to/TO/to find/VB/find solutions/NNS/solutions to/TO/to smaller/JJR/smaller sub/NN/sub problems/NNP/problems. you/PRP/you want/VBP/want to/TO/to put/VB/put these/DT/these together/NN/together to/TO/to get/VB/get a/DT/a solution/NN/solution to/TO/to a/DT/a larger/JJR/larger problem/NNP/problem. and/CC/and while/IN/while doing/VBG/doing this/DT/this /,/, you/PRP/you may/MD/may want/VB/want to/TO/to solve/VB/solve something/NN/something slightly/RB/slightly more/RBR/more general/NNP/general. and/CC/and then/RB/then /,/, you/PRP/you see/VBP/see this/DT/this general/JJ/general problem/NN/problem can/MD/can be/VB/be solved/NNP/solved. so/RB/so /,/, you/PRP/you try/VBP/try and/CC/and solve/VB/solve the/DT/the general/JJ/general problem/NN/problem now/RB/now /,/, again/RB/again using/VBG/using the/DT/the same/JJ/same technique/NNP/technique. the/DT/the smaller/JJR/smaller sub/NN/sub problems/NNS/problems /,/, you/PRP/you solve/VBP/solve the/DT/the general/JJ/general problem/NNP/problem. and/CC/and now/RB/now you/PRP/you see/VBP/see /,/, if/IN/if you/PRP/you can/MD/can put/VB/put them/PRP/them together/RP/together /,/, to/TO/to get/VB/get a/DT/a solution/NN/solution to/TO/to the/DT/the general/JJ/general problem/NN/problem for/IN/for the/DT/the big/JJ/big input/NNP/input. and/CC/and often/RB/often this/DT/this sort/NN/sort of/IN/of gives/NNS/gives you/PRP/you the/DT/the solution/NN/solution that/IN/that want/NNP/want. we/PRP/we saw/VBD/saw this/DT/this in/IN/in two/CD/two occasions/NNS/occasions /,/, one/CD/one was/VBD/was this/DT/this tiling/NN/tiling problem/NN/problem /,/, the/DT/the other/JJ/other was/VBD/was a/DT/a i/NN/i hope/NN/hope you/PRP/you can/MD/can remember/NNP/remember. it/PRP/it was/VBD/was when/WRB/when we/PRP/we looked/VBD/looked at/IN/at this/DT/this median/NNP/median. we/PRP/we wanted/VBD/wanted to/TO/to find/VB/find the/DT/the median/JJ/median /,/, but/CC/but we/PRP/we ended/VBD/ended up/RP/up looking/VBG/looking at/IN/at the/DT/the problem/NN/problem of/IN/of finding/NN/finding an/DT/an element/NN/element of/IN/of given/VBN/given an/DT/an array/NN/array and/CC/and a/DT/a positive/JJ/positive integer/NN/integer r/NNP/r. so/RB/so /,/, we/PRP/we found/VBD/found the/DT/the element/NN/element of/IN/of rank/NN/rank r/NN/r /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we did/NNP/did. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at one/CD/one more/JJR/more problem/NN/problem /,/, yet/CC/yet another/DT/another problem/NN/problem rather/RB/rather /,/, which/WDT/which uses/NNS/uses divide/VBP/divide and/CC/and conquer/NNP/conquer. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a familiar/JJ/familiar problem/NN/problem of/IN/of multiplying/VBG/multiplying to/TO/to two/CD/two integers/NNP/integers. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 58/CD/58 /CD/) so/RB/so /,/, i/PRP/i have/VBP/have 2/CD/2 n/NN/n bit/NN/bit integers/NNS/integers /,/, x/NN/x and/CC/and y/NN/y /,/, this/DT/this is/VBZ/is x/NN/x /,/, this/DT/this is/VBZ/is y/NN/y /,/, these/DT/these are/VBP/are n/VBN/n bits/NNP/bits. each/DT/each is/VBZ/is n/VBN/n bit/NN/bit long/RB/long /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the product/NN/product of/IN/of x/NN/x and/CC/and y/NNP/y. the/DT/the normal/JJ/normal way/NN/way is/VBZ/is well/RB/well /,/, we/PRP/we formed/VBD/formed the/DT/the product/NN/product of/IN/of each/DT/each of/IN/of these/DT/these bits/NNS/bits with/IN/with lsb/NN/lsb /,/, then/RB/then with/IN/with the/DT/the next/JJ/next one/CD/one and/CC/and so/RB/so on/IN/on /,/, and/CC/and so/RB/so forth/NNP/forth. so/IN/so /,/, there/EX/there are/VBP/are n/NN/n square/NN/square multiplications/NNP/multiplications. well/RB/well /,/, in/IN/in this/DT/this case/NN/case actually/RB/actually it/PRP/it is/VBZ/is not/RB/not /,/, you/PRP/you can/MD/can just/RB/just do/VB/do are/VBP/are and/CC/and since/IN/since they/PRP/they are/VBP/are bits/NNP/bits. but/CC/but /,/, you/PRP/you can/MD/can think/VB/think of/IN/of these/DT/these as/IN/as instead/RB/instead of/IN/of bits/NNS/bits /,/, you/PRP/you can/MD/can think/VB/think of/IN/of them/PRP/them as/IN/as digits/NNS/digits /,/, it/PRP/it really/RB/really does/VBZ/does not/RB/not matter/NNP/matter. so/RB/so /,/, each/DT/each of/IN/of them/PRP/them could/MD/could be/VB/be n/VBN/n digits/NNS/digits long/RB/long and/CC/and we/PRP/we multiply/RB/multiply these/DT/these digits/NNP/digits. so/RB/so /,/, there/EX/there are/VBP/are n/NN/n square/NN/square multiplications/NNS/multiplications /,/, this/DT/this is/VBZ/is the/DT/the high/JJ/high school/NN/school multiplication/NN/multiplication algorithm/NN/algorithm /,/, that/IN/that we/PRP/we know/NNP/know. can/MD/can we/PRP/we do/VBP/do faster/JJR/faster /,/, that/IN/that is/VBZ/is the/DT/the question/NNP/question. let/NN/let us/PRP/us try/VBP/try applying/VBG/applying divide/NN/divide and/CC/and conquer/NNP/conquer. i/PRP/i have/VBP/have divide/JJ/divide this/DT/this into/IN/into two/CD/two parts/NNP/parts. this/DT/this is/VBZ/is x/NN/x left/VBN/left x/NN/x right/RB/right /,/, y/NN/y left/VBD/left y/NN/y right/NNP/right. and/CC/and now/RB/now i/PRP/i want/VBP/want to/TO/to compute/VB/compute the/DT/the product/NN/product of/IN/of these/DT/these two/CD/two /,/, well/RB/well what/WP/what is/VBZ/is the/DT/the product/NN/product first/RB/first of/IN/of all/NNP/all. x/NN/x is/VBZ/is nothing/NN/nothing but/CC/but 2/CD/2 to/TO/to n/VB/n by/IN/by 2/CD/2 times/NNS/times x/NN/x l/NN/l plus/CC/plus x/NN/x r/NN/r y/NN/y is/VBZ/is 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2 y/NN/y l/NN/l plus/NNP/plus. so/RB/so /,/, this/DT/this means/VBZ/means x/NN/x y/NN/y is/VBZ/is 2/CD/2 to/TO/to n/VB/n x/NN/x l/NN/l y/NN/y l/NN/l plus/CC/plus 2/CD/2 to/TO/to the/DT/the n/NN/n by/IN/by 2/CD/2 x/NN/x l/NN/l y/NN/y r/NNP/r. x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus y/NN/y l/NN/l x/NN/x r/NN/r plus/CC/plus x/NN/x r/NN/r times/NNS/times y/VBP/y r/NN/r /,/, this/DT/this is/VBZ/is the/DT/the product/NN/product x/NN/x and/CC/and y/NNP/y. so/RB/so /,/, we/PRP/we could/MD/could recursively/RB/recursively sort/VB/sort of/IN/of find/NN/find these/DT/these products/NNS/products /,/, these/DT/these four/CD/four products/NNS/products and/CC/and then/RB/then /,/, compute/NN/compute this/NNP/this. this/DT/this is/VBZ/is just/RB/just shifting/VBG/shifting by/IN/by n/NN/n bits/NNS/bits /,/, we/PRP/we are/VBP/are just/RB/just shifting/VBG/shifting by/IN/by n/NN/n by/IN/by 2/CD/2 bits/NNP/bits. so/RB/so /,/, that/IN/that is/VBZ/is an/DT/an order/NN/order n/NN/n operation/NN/operation /,/, so/RB/so if/IN/if t/NN/t n/NN/n is/VBZ/is the/DT/the time/NN/time taken/VBN/taken /,/, this/DT/this what/WP/what is/VBZ/is the/DT/the recurrence/NNP/recurrence. there/RB/there are/VBP/are 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 4/CD/4 problems/NNS/problems /,/, so/RB/so 4/CD/4 times/NNS/times t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. this/DT/this is/VBZ/is some/DT/some constant/JJ/constant times/NNS/times n/VBP/n /,/, which/WDT/which is/VBZ/is for/IN/for shifting/VBG/shifting and/CC/and adding/NNP/adding. adding/NN/adding two/CD/two n/NN/n bit/NN/bit numbers/NNS/numbers /,/, it/PRP/it takes/VBZ/takes alternately/NNP/alternately. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence ?/./? well/RB/well /,/, i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do this/DT/this and/CC/and the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NNP/recurrence. you/PRP/you do/VBP/do a/DT/a solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence /,/, it/PRP/it is/VBZ/is order/NN/order n/NN/n square/NNP/square. so/RB/so /,/, we/PRP/we are/VBP/are back/RB/back to/TO/to where/WRB/where we/PRP/we started/NNP/started. compare/VBP/compare these/DT/these two/CD/two /,/, well/RB/well we/PRP/we have/VBP/have done/VBN/done divide/NN/divide and/CC/and conquer/NN/conquer /,/, but/CC/but we/PRP/we do/VBP/do not/RB/not seem/VB/seem to/TO/to have/VB/have conquered/VBN/conquered anything/NNP/anything. we/PRP/we are/VBP/are back/RB/back to/TO/to spending/NN/spending order/NN/order n/NN/n square/NN/square times/NNS/times /,/, even/RB/even with/IN/with this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer approach/NN/approach /,/, but/CC/but well/RB/well all/DT/all is/VBZ/is not/RB/not lost/NNP/lost. i/PRP/i will/MD/will first/RB/first indicate/VB/indicate this/DT/this algorithm/NNP/algorithm. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will analyze/VB/analyze /,/, and/CC/and see/VB/see how/WRB/how we/PRP/we can/MD/can decrease/VB/decrease the/DT/the number/NN/number of/IN/of multiplications/NNP/multiplications. so/RB/so /,/, well/RB/well the/DT/the trick/NN/trick is/VBZ/is this/DT/this /,/, let/VB/let us/PRP/us see/NNP/see. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 02/CD/02 /CD/) so/RB/so /,/, the/DT/the terms/NNS/terms that/WDT/that we/PRP/we want/VBP/want to/TO/to compute/VB/compute are/VBP/are x/JJ/x l/NN/l y/NN/y l/NN/l and/CC/and then/RB/then /,/, x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus y/NN/y l/NN/l x/NN/x r/NN/r and/CC/and x/NN/x r/NN/r y/NN/y r/NNP/r. these/DT/these are/VBP/are the/DT/the three/CD/three terms/NNS/terms /,/, that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to compute/NNP/compute. the/DT/the way/NN/way we/PRP/we did/VBD/did it/PRP/it /,/, was/VBD/was each/DT/each of/IN/of them/PRP/them separately/RB/separately that/IN/that gave/VBD/gave over/RB/over problems/NNS/problems of/IN/of size/NN/size n/NN/n by/IN/by 2/CD/2. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a smart/NN/smart way/NN/way of/IN/of doing/VBG/doing this/NNP/this. well/RB/well /,/, these/DT/these two/CD/two i/PRP/i compute/VBP/compute as/IN/as they/PRP/they are/VBP/are /,/, the/DT/the third/JJ/third thing/NN/thing i/PRP/i compute/VBP/compute is/VBZ/is not/RB/not quite/RB/quite these/DT/these two/CD/two /,/, it/PRP/it is/VBZ/is the/DT/the following/NNP/following. i/PRP/i computer/NN/computer x/NN/x l/NN/l plus/CC/plus x/NN/x r/NN/r times/NNS/times y/VBP/y l/NN/l plus/CC/plus y/NN/y r/NN/r /,/, i/PRP/i add/VBP/add x/NN/x l/NN/l and/CC/and x/NN/x r/NN/r /,/, i/PRP/i add/VBP/add y/JJ/y l/NN/l and/CC/and y/NN/y r/NN/r and/CC/and then/RB/then /,/, multiply/RB/multiply them/PRP/them together/NNP/together. what/WP/what is/VBZ/is this/DT/this /,/, this/DT/this is/VBZ/is x/NN/x l/NN/l y/NN/y l/NN/l plus/CC/plus x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus x/NN/x r/NN/r y/NN/y l/NN/l plus/CC/plus x/NN/x r/NN/r y/NN/y r/NN/r /,/, that/IN/that is/VBZ/is what/WP/what this/DT/this is/NNP/is. so/RB/so /,/, i/PRP/i do/VBP/do three/CD/three multiplications/NNS/multiplications and/CC/and not/RB/not four/CD/four /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first multiplication/NN/multiplication x/NN/x l/NN/l y/NN/y l/NNP/l. x/NN/x r/NN/r y/NN/y r/NN/r is/VBZ/is my/PRP$/my second/JJ/second multiplication/NN/multiplication and/CC/and this/DT/this is/VBZ/is the/DT/the third/NNP/third. this/DT/this i/PRP/i do/VBP/do not/RB/not do/VB/do /,/, as/IN/as of/IN/of now/RB/now i/PRP/i have/VBP/have not/RB/not touched/VBN/touched this/DT/this /,/, this/DT/this is/VBZ/is the/DT/the third/JJ/third multiplication/NN/multiplication i/PRP/i do/NNP/do. well/RB/well /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this x/NN/x l/NN/l y/NN/y l/NN/l is/VBZ/is present/JJ/present /,/, x/NN/x r/NN/r y/NN/y r/NN/r is/VBZ/is present/JJ/present ;/:/; and/CC/and if/IN/if i/PRP/i remove/VBP/remove these/DT/these two/CD/two what/WP/what is/VBZ/is left/VBN/left is/VBZ/is this/NNP/this. x/NN/x l/NN/l y/NN/y r/NN/r plus/CC/plus x/NN/x r/NN/r y/NN/y l/NN/l is/VBZ/is exactly/RB/exactly this/NNP/this. well/RB/well /,/, i/PRP/i have/VBP/have just/RB/just written/VBN/written x/NN/x r/NN/r y/NN/y l/NN/l /,/, but/CC/but it/PRP/it is/VBZ/is same/JJ/same as/IN/as y/JJ/y l/NN/l x/NN/x r/NN/r good/NNP/good. so/RB/so /,/, how/WRB/how do/VBP/do i/PRP/i compute/VB/compute this/DT/this /,/, well/RB/well from/IN/from this/DT/this product/NN/product i/PRP/i just/RB/just subtract/VBP/subtract these/DT/these two/CD/two to/TO/to get/VB/get this/DT/this /,/, so/RB/so call/RB/call this/DT/this z/NNP/z. now/RB/now /,/, i/PRP/i just/RB/just do/VBP/do z/NN/z minus/NN/minus x/NN/x l/NN/l y/NN/y l/NN/l minus/NN/minus x/NN/x r/NN/r y/NN/y r/NN/r i/PRP/i get/VBP/get this/DT/this /,/, good/JJ/good what/WP/what have/VBP/have i/PRP/i done/NNP/done. well/RB/well i/PRP/i have/VBP/have a/DT/a few/JJ/few more/RBR/more additions/NNS/additions /,/, i/PRP/i have/VBP/have 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 more/JJR/more additions/NNP/additions. the/DT/the number/NN/number of/IN/of multiplications/NNS/multiplications has/VBZ/has gone/VBN/gone down/RP/down by/IN/by 1/CD/1. multiplying/VBG/multiplying 2/CD/2 /,/, n/NN/n by/IN/by 2/CD/2 bit/NN/bit numbers/NNS/numbers i/PRP/i do/VBP/do 1/CD/1 /,/, 2/CD/2 and/CC/and 3/CD/3. there/EX/there are/VBP/are now/RB/now only/RB/only 3/CD/3 multiplications/NNS/multiplications that/WDT/that i/PRP/i do/VBP/do. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the recurrence/NN/recurrence now/RB/now /,/, well/RB/well t/VB/t n/NN/n is/VBZ/is 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. earlier/RBR/earlier remember/NN/remember it/PRP/it was/VBD/was 4/CD/4 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. now/RB/now /,/, it/PRP/it is/VBZ/is 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NN/n and/CC/and it/PRP/it is/VBZ/is not/RB/not surprising/JJ/surprising /,/, that/IN/that the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence is/VBZ/is smaller/NNP/smaller. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will show/VB/show the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence /,/, is/VBZ/is order/NN/order n/NN/n to/TO/to the/DT/the log/NN/log 3/CD/3 base/NN/base 2/CD/2. roughly/RB/roughly it/PRP/it grows/VBZ/grows as/IN/as n/NN/n to/TO/to the/DT/the 1.59/CD/1.59 /,/, which/WDT/which is/VBZ/is certainly/RB/certainly less/JJR/less than/IN/than n/NN/n square/NN/square /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we started/VBD/started out/RP/out with/NNP/with. so/RB/so /,/, this/DT/this the/DT/the number/NN/number of/IN/of multiplications/NNS/multiplications one/CD/one makes/NNS/makes is/VBZ/is significantly/RB/significantly smaller/NNP/smaller. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 23/CD/23 /CD/) is/VBZ/is 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus some/DT/some let/NN/let us/PRP/us this/DT/this take/NN/take n/NN/n /,/, it/PRP/it does/VBZ/does not/RB/not matter/VB/matter /,/, so/RB/so t/RB/t n/JJ/n is/VBZ/is this/NNP/this. we/PRP/we will/MD/will do/VB/do the/DT/the usual/JJ/usual thing/NN/thing which/WDT/which is/VBZ/is 3/CD/3 /,/, so/RB/so 3/CD/3 t/NN/t n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus n/NN/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. this/DT/this is/VBZ/is 3/CD/3 square/JJ/square t/NN/t n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus 3/CD/3 times/NNS/times n/VBP/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. let/NN/let us/PRP/us do/VBP/do it/PRP/it once/RB/once more/JJR/more /,/, to/TO/to see/VB/see what/WP/what happens/NNS/happens /,/, so/RB/so this/DT/this is/VBZ/is 3/CD/3 square/JJ/square t/NN/t well/RB/well n/JJ/n by/IN/by 2/CD/2 cube/NNP/cube. i/PRP/i am/VBP/am expanding/VBG/expanding this/DT/this out/RP/out /,/, so/RB/so there/RB/there should/MD/should be/VB/be a/DT/a 3/CD/3 here/RB/here /,/, 3/CD/3 times/NNS/times plus/CC/plus n/NN/n by/IN/by 2/CD/2 square/JJ/square plus/NN/plus 3/CD/3 times/NNS/times n/VBP/n by/IN/by 2/CD/2 plus/CC/plus n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is now/RB/now 3/CD/3 cube/NN/cube t/NN/t n/NN/n by/IN/by 2/CD/2 cube/NN/cube plus/CC/plus /,/, well/RB/well 3/CD/3 by/IN/by 2/CD/2 whole/JJ/whole square/NN/square times/NNS/times n/VBP/n plus/RB/plus 3/CD/3 by/IN/by 2/CD/2 n/NN/n plus/CC/plus n/NNP/n. now/RB/now /,/, one/CD/one can/MD/can guess/NN/guess the/DT/the general/JJ/general term/NN/term /,/, in/IN/in this/DT/this when/WRB/when i/PRP/i go/VBP/go down/RB/down i/PRP/i steps/NNP/steps. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 11/CD/11 /CD/) so/RB/so /,/, t/NN/t n/NN/n will/MD/will be/VB/be 3/CD/3 to/TO/to the/DT/the i/PRP/i t/VBP/t of/IN/of n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus 3/CD/3 by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 n/NN/n plus/CC/plus 3/CD/3 by/IN/by 2/CD/2 i/PRP/i minus/VBZ/minus 2/CD/2 n/NN/n so/IN/so on/IN/on /,/, to/TO/to n/VB/n /,/, good/NNP/good. so/RB/so /,/, now/RB/now we/PRP/we would/MD/would like/VB/like n/NN/n by/IN/by 2/CD/2 to/TO/to the/DT/the i/PRP/i should/MD/should be/VB/be 2/CD/2 or/CC/or say/VB/say 1/CD/1 /,/, for/IN/for ease/NN/ease of/IN/of computation/NNP/computation. if/IN/if this/DT/this is/VBZ/is one/CD/one /,/, if/IN/if i/PRP/i have/VBP/have one/CD/one bit/NN/bit and/CC/and the/DT/the time/NN/time is/VBZ/is 1/CD/1 /,/, so/RB/so the/DT/the time/NN/time is/VBZ/is just/RB/just this/DT/this becomes/VBZ/becomes t/NN/t of/IN/of 1/CD/1 is/VBZ/is 1/CD/1. so/RB/so /,/, if/IN/if this/DT/this is/VBZ/is true/JJ/true and/CC/and t/NN/t of/IN/of n/NN/n is/VBZ/is 3/CD/3 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus /,/, well/RB/well n/JJ/n times/NNS/times 1/CD/1 plus/NN/plus 3/CD/3 half/NN/half and/CC/and so/RB/so on/IN/on /,/, up/RB/up to/TO/to 3/CD/3 half/NN/half to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1. well/RB/well /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this /,/, so/RB/so this/DT/this is/VBZ/is 3/CD/3 to/TO/to the/DT/the i/PRP/i plus/VBZ/plus n/JJ/n times/NNS/times /,/, well/RB/well what/WP/what is/VBZ/is this/DT/this ?/./? this/DT/this is/VBZ/is just/RB/just a/DT/a geometric/JJ/geometric series/NNP/series. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a roughly/RB/roughly some/DT/some constant/JJ/constant times/NNS/times 3/CD/3 half/NN/half to/TO/to the/DT/the i/NNP/i. you/PRP/you can/MD/can do/VB/do it/PRP/it more/JJR/more a/DT/a bit/NN/bit better/NN/better by/IN/by doing/NN/doing the/DT/the /,/, writing/VBG/writing the/DT/the exact/JJ/exact formula/NN/formula /,/, which/WDT/which is/VBZ/is 3/CD/3 half/NN/half to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 by/IN/by 3/CD/3 half/NN/half minus/NN/minus 1/CD/1. so/RB/so /,/, it/PRP/it is/VBZ/is at/IN/at most/JJS/most /,/, let/VB/let me/PRP/me put/VB/put it/PRP/it at/IN/at most/JJS/most this/DT/this is/VBZ/is perhaps/RB/perhaps 3/CD/3 half/NN/half minus/NN/minus 1/CD/1 which/WDT/which is/VBZ/is half/DT/half /,/, so/RB/so c/JJ/c could/MD/could be/VB/be 2/CD/2 /,/, so/RB/so c/JJ/c is/VBZ/is most/JJS/most probably/RB/probably 2/CD/2. in/IN/in any/DT/any case/NN/case /,/, this/DT/this is/VBZ/is bounded/VBN/bounded by/IN/by something/NN/something like/IN/like this/DT/this /,/, 3/CD/3 to/TO/to the/DT/the i/PRP/i plus/NNP/plus. so/RB/so /,/, what/WDT/what is/VBZ/is i/PRP/i ?/./? well/RB/well /,/, 2/CD/2 to/TO/to the/DT/the i/PRP/i is/VBZ/is n/JJ/n /,/, so/RB/so i/PRP/i is/VBZ/is nothing/VBG/nothing but/CC/but log/NN/log base/NN/base 2/CD/2 n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 n/NN/n plus/CC/plus n/NN/n times/NNS/times constant/VBP/constant times/NNS/times /,/, well/RB/well 3/CD/3 half/NN/half to/TO/to the/DT/the i/PRP/i /,/, which/WDT/which is/VBZ/is 3/CD/3 half/NN/half to/TO/to the/DT/the log/NN/log based/VBN/based 2/CD/2 n/NNP/n. now/RB/now /,/, 2/CD/2 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n /,/, these/DT/these two/CD/two things/NNS/things cancel/NNP/cancel. so/RB/so /,/, i/PRP/i have/VBP/have 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n times/NNS/times constant/VBP/constant and/CC/and 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but some/DT/some c/NN/c prime/NN/prime times/NNS/times 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NN/n /,/, this/DT/this is/VBZ/is the/DT/the i/NN/i time/NN/time taken/NNP/taken. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 26/CD/26 /CD/) so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this /,/, well/RB/well so/RB/so the/DT/the time/NN/time /,/, the/DT/the total/JJ/total number/NN/number of/IN/of multiplications/NNS/multiplications is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of n/NNP/n. this/DT/this is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 3/CD/3 of/IN/of n/NN/n divided/VBN/divided by/IN/by log/NN/log base/NN/base 3/CD/3 of/IN/of 2/CD/2 /,/, i/PRP/i could/MD/could take/VB/take this/DT/this up/NNP/up. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of 3/CD/3 times/NNS/times /,/, use/NN/use just/RB/just some/DT/some general/JJ/general manipulations/NNP/manipulations. so/RB/so /,/, that/IN/that is/VBZ/is 3/CD/3 to/TO/to the/DT/the log/NN/log base/NN/base 3/CD/3 of/IN/of n/NN/n /,/, i/PRP/i take/VBP/take this/DT/this inside/NN/inside /,/, n/NN/n to/TO/to the/DT/the log/NN/log base/NN/base 2/CD/2 of/IN/of 3/CD/3. this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n to/TO/to the/DT/the log/NN/log 2/CD/2 of/IN/of 3/CD/3 as/IN/as promised/NNP/promised. so/RB/so /,/, this/DT/this is/VBZ/is roughly/RB/roughly n/VBN/n to/TO/to the/DT/the 1.59/CD/1.59. so/RB/so /,/, the/DT/the time/NN/time number/NN/number of/IN/of multiplications/NNS/multiplications /,/, we/PRP/we got/VBD/got it/PRP/it down/IN/down from/IN/from n/NN/n square/NNP/square. so/RB/so /,/, the/DT/the initial/JJ/initial thing/NN/thing to/TO/to roughly/RB/roughly n/VB/n to/TO/to the/DT/the 1.59/CD/1.59. of/IN/of course/NN/course /,/, we/PRP/we increase/VBP/increase the/DT/the number/NN/number of/IN/of additions/NNS/additions /,/, but/CC/but if/IN/if multiplications/NNS/multiplications are/VBP/are more/RBR/more expensive/JJ/expensive than/IN/than additions/NNP/additions. then/RB/then /,/, we/PRP/we have/VBP/have saved/VBN/saved on/IN/on time/NNP/time. this/DT/this trick/NN/trick of/IN/of using/VBG/using three/CD/three multiplications/NNS/multiplications instead/RB/instead of/IN/of 2/CD/2 is/VBZ/is actually/RB/actually a/DT/a trick/NNP/trick. it/PRP/it is/VBZ/is something/VBG/something you/PRP/you have/VBP/have to/TO/to really/RB/really need/VBP/need to/TO/to come/VB/come up/RP/up with/IN/with somehow/NNP/somehow. there/EX/there is/VBZ/is no/DT/no real/JJ/real sort/NN/sort of/IN/of way/NN/way in/IN/in which/WDT/which you/PRP/you can/MD/can do/VB/do it/NNP/it. there/RB/there is/VBZ/is no/DT/no method/NN/method and/CC/and that/IN/that is/VBZ/is the/DT/the beauty/NN/beauty of/IN/of algorithm/NN/algorithm design/NNP/design. that/IN/that somehow/WRB/somehow not/RB/not every/DT/every problem/NN/problem can/MD/can be/VB/be sort/NN/sort of/IN/of tackled/VBN/tackled using/VBG/using everything/NN/everything that/IN/that /,/, you/PRP/you could/MD/could come/VB/come up/NNP/up. often/RB/often you/PRP/you come/VBP/come up/RP/up with/IN/with /,/, all/DT/all the/DT/the time/NN/time you/PRP/you come/VBP/come up/RP/up problems/NNS/problems which/WDT/which require/NN/require you/PRP/you to/TO/to design/VB/design new/JJ/new methods/NNS/methods /,/, derive/JJ/derive new/JJ/new methods/NNS/methods /,/, find/VBP/find new/JJ/new methods/NNP/methods. rack/NN/rack your/PRP$/your brain/NN/brain and/CC/and sort/NN/sort of/IN/of come/NN/come up/RB/up with/IN/with good/JJ/good algorithms/NNP/algorithms. and/CC/and when/WRB/when you/PRP/you do/VBP/do come/VBN/come up/RP/up with/IN/with these/DT/these new/JJ/new algorithms/NNS/algorithms /,/, you/PRP/you feel/VBP/feel again/RB/again /,/, the/DT/the kick/NN/kick that/IN/that you/PRP/you derive/VBP/derive /,/, the/DT/the pleasure/NN/pleasure that/IN/that you/PRP/you derive/VBP/derive is/VBZ/is something/VBG/something else/NNP/else. this/DT/this trick/NN/trick by/IN/by the/DT/the way/NN/way or/CC/or this/DT/this multiplication/NN/multiplication is/VBZ/is due/JJ/due to/TO/to euler/NNP/euler. and/CC/and he/PRP/he used/VBD/used this/DT/this for/IN/for the/DT/the multiplying/VBG/multiplying complex/NN/complex numbers/NNP/numbers. we/PRP/we have/VBP/have just/RB/just used/VBN/used this/DT/this trick/NN/trick was/VBD/was then/RB/then used/VBN/used by/IN/by other/JJ/other people/NNS/people /,/, who/WP/who saw/VBD/saw that/NNP/that. it/PRP/it can/MD/can be/VB/be applicable/JJ/applicable in/IN/in multiplying/NN/multiplying 2/CD/2 n/NN/n bit/NN/bit numbers/NNP/numbers. thanks/NNP/thanks. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 9/CD/9 divide/NN/divide and/CC/and conquer/NN/conquer /:/- iv/NN/iv closest/NN/closest pair/NN/pair we/PRP/we will/MD/will continue/VB/continue with/IN/with our/PRP$/our study/NN/study of/IN/of algorithm/NN/algorithm design/NN/design techniques/NNP/techniques. we/PRP/we had/VBD/had looked/VBN/looked at/IN/at some/DT/some examples/NNS/examples or/CC/or which/WDT/which we/PRP/we used/VBD/used this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer strategy/NNP/strategy. we/PRP/we also/RB/also looked/VBD/looked at/IN/at sorting/NN/sorting the/DT/the strategy/NN/strategy /,/, applied/VBD/applied to/TO/to sorting/NN/sorting to/TO/to give/VB/give a/DT/a lower/JJR/lower bound/NN/bound of/IN/of n/NN/n log/NN/log n/NN/n for/IN/for certain/JJ/certain sorting/NN/sorting based/VBN/based algorithm/NNP/algorithm. we/PRP/we continue/VBP/continue along/IN/along the/DT/the same/JJ/same way/NNP/way. in/IN/in fact/NN/fact we/PRP/we look/VBP/look at/IN/at yet/RB/yet another/DT/another problem/NN/problem which/WDT/which some/DT/some meanable/JJ/meanable to/TO/to divide/VB/divide and/CC/and conquer/NNP/conquer. this/DT/this problem/NN/problem comes/VBZ/comes from/IN/from computational/JJ/computational geometry/NNP/geometry. so/RB/so /,/, it/PRP/it has/VBZ/has the/DT/the basic/JJ/basic is/VBZ/is bit/NN/bit different/JJ/different /,/, but/CC/but the/DT/the same/JJ/same strategies/NNS/strategies /,/, algorithm/NN/algorithm design/NN/design strategies/NNS/strategies applied/VBD/applied even/RB/even to/TO/to field/NNP/field. so/RB/so /,/, the/DT/the problem/NN/problem is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 54/CD/54 /CD/) the/DT/the input/NN/input the/DT/the set/NN/set of/IN/of points/NNS/points in/IN/in the/DT/the plane/NN/plane say/VBP/say the/DT/the output/NN/output i/PRP/i want/VBP/want the/DT/the closest/JJS/closest pair/NN/pair of/IN/of points/NNP/points. so/RB/so /,/, given/VBN/given some/DT/some points/NNS/points /,/, i/PRP/i can/MD/can compute/VB/compute the/DT/the distance/NN/distance /,/, we/PRP/we can/MD/can compute/VB/compute the/DT/the distance/NNP/distance. and/CC/and among/IN/among these/DT/these points/NNS/points /,/, that/IN/that you/PRP/you have/VBP/have given/VBN/given in/IN/in the/DT/the plane/NN/plane /,/, you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the closest/JJS/closest way/NNP/way. for/IN/for instance/NN/instance /,/, the/DT/the points/NNS/points could/MD/could be/VB/be given/VBN/given with/IN/with the/DT/the x/NN/x y/NN/y coordinates/VBZ/coordinates /,/, that/IN/that what/WP/what we/PRP/we will/MD/will assume/NNP/assume. so/RB/so /,/, for/IN/for each/DT/each point/NN/point /,/, i/PRP/i give/VBP/give you/PRP/you the/DT/the x/NN/x and/CC/and y/NN/y coordinate/NNP/coordinate. and/CC/and actually/RB/actually there/RB/there are/VBP/are n/VBN/n points/NNS/points and/CC/and given/VBN/given these/DT/these n/NN/n points/NNS/points /,/, with/IN/with their/PRP$/their x/NN/x y/NN/y coordinates/NNP/coordinates. i/PRP/i want/VBP/want to/TO/to find/VB/find a/DT/a pair/NN/pair of/IN/of points/NNS/points /,/, which/WDT/which are/VBP/are closest/JJS/closest to/TO/to each/DT/each other/NNP/other. so/RB/so /,/, given/VBN/given any/DT/any two/CD/two points/NNS/points the/DT/the distance/NN/distance ;/:/; the/DT/the distance/NN/distance is/VBZ/is square/JJ/square root/NN/root of/IN/of x/NN/x 1/CD/1 minus/NN/minus x/NN/x 2/CD/2 squared/VBN/squared plus/CC/plus y/NN/y 1/CD/1 minus/NN/minus y/NN/y 2/CD/2 square/NNP/square. so/RB/so /,/, the/DT/the usual/JJ/usual notion/NN/notion of/IN/of distance/NN/distance that/IN/that you/PRP/you have/VBP/have in/IN/in the/DT/the plane/NNP/plane. so/RB/so /,/, for/IN/for each/DT/each plane/NN/plane of/IN/of points/NNS/points /,/, there/EX/there is/VBZ/is a/DT/a distance/NN/distance and/CC/and among/IN/among there/EX/there are/VBP/are n/NN/n choosable/JJ/choosable distances/NNP/distances. so/RB/so /,/, between/IN/between these/DT/these pairs/NNS/pairs of/IN/of points/NNS/points /,/, if/IN/if i/PRP/i have/VBP/have n/VBN/n points/NNS/points /,/, there/EX/there are/VBP/are n/NN/n choosable/JJ/choosable distances/NNP/distances. i/PRP/i want/VBP/want to/TO/to pick/VB/pick the/DT/the minimum/JJ/minimum distance/NNP/distance. and/CC/and the/DT/the points/NNS/points /,/, which/WDT/which actually/RB/actually witness/VBZ/witness this/DT/this minimum/JJ/minimum distance/NNP/distance. so/RB/so /,/, there/EX/there is/VBZ/is an/DT/an obvious/JJ/obvious way/NN/way to/TO/to do/VB/do it/NNP/it. it/PRP/it is/VBZ/is to/TO/to compute/VB/compute for/IN/for each/DT/each pair/NN/pair a/DT/a distance/NN/distance /,/, for/IN/for each/DT/each pair/NN/pair you/PRP/you compute/VBP/compute the/DT/the distance/NNP/distance. now/RB/now /,/, you/PRP/you have/VBP/have n/VBN/n choose/NN/choose to/TO/to distances/NNS/distances and/CC/and you/PRP/you find/VBP/find the/DT/the minimum/JJ/minimum /,/, so/RB/so that/IN/that takes/VBZ/takes n/NN/n choosable/JJ/choosable time/NN/time /,/, can/MD/can you/PRP/you do/VB/do faster/JJR/faster /,/, can/MD/can you/PRP/you do/VB/do better/NNP/better. so/RB/so /,/, for/IN/for instance/NN/instance /,/, do/VBP/do you/PRP/you really/RB/really have/VBP/have to/TO/to compute/VB/compute all/DT/all distances/NNS/distances to/TO/to find/VB/find the/DT/the closest/JJS/closest pair/NNP/pair. well/RB/well /,/, that/IN/that is/VBZ/is the/DT/the big/JJ/big question/NN/question there/EX/there /,/, and/CC/and the/DT/the answer/NN/answer is/VBZ/is no/NNP/no. if/IN/if the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes /,/, then/RB/then i/PRP/i guess/VBP/guess i/PRP/i would/MD/would not/RB/not be/VB/be discussing/VBG/discussing this/DT/this problem/NN/problem here/RB/here /./( /:/( refer/NN/refer time/NN/time /:/: 04/CD/04 /:/: 30/CD/30 /CD/) /CD/) /./. so/RB/so /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will do/VB/do it/PRP/it much/RB/much faster/JJR/faster than/IN/than /,/, then/RB/then n/VB/n square/NNP/square. so/RB/so /,/, somehow/WRB/somehow you/PRP/you do/VBP/do not/RB/not really/RB/really need/VBP/need to/TO/to compute/VB/compute all/DT/all pairs/NNS/pairs /,/, distances/NNS/distances of/IN/of all/DT/all pairs/NNS/pairs /,/, that/IN/that is/VBZ/is the/DT/the moral/JJ/moral of/IN/of the/DT/the story/NNP/story. let/NN/let us/PRP/us see/VBP/see how/WRB/how we/PRP/we go/VBP/go about/IN/about designing/NNP/designing. well/RB/well /,/, on/IN/on the/DT/the face/NN/face of/IN/of it/PRP/it /,/, if/IN/if you/PRP/you would/MD/would think/VB/think a/DT/a bit/NNP/bit. you/PRP/you start/VB/start wonder/NN/wonder /,/, why/WRB/why should/MD/should i/VB/i need/VBP/need to/TO/to compute/VB/compute every/DT/every pair/NN/pair of/IN/of distance/NNP/distance. what/WP/what can/MD/can i/VB/i mean/JJ/mean /,/, can/MD/can i/PRP/i for/IN/for instance/NN/instance /,/, look/NN/look at/IN/at geometry/NN/geometry of/IN/of the/DT/the points/NNS/points to/TO/to certain/JJ/certain distances/NNS/distances /,/, maybe/RB/maybe there/EX/there are/VBP/are many/JJ/many ways/NNS/ways of/IN/of thinking/VBG/thinking about/IN/about it/NNP/it. we/PRP/we should/MD/should also/RB/also be/VB/be thinking/VBG/thinking of/IN/of an/DT/an inductive/JJ/inductive approach/NN/approach /,/, which/WDT/which is/NNP/is... supposing/NN/supposing /,/, i/PRP/i remove/VBP/remove one/CD/one point/NN/point to/TO/to compute/VB/compute a/DT/a distance/NN/distance /,/, shortest/NN/shortest distance/NN/distance between/IN/between the/DT/the other/JJ/other points/NNP/points. now/RB/now /,/, adding/VBG/adding this/DT/this point/NN/point /,/, can/MD/can i/PRP/i get/VB/get rid/JJ/rid of/IN/of some/DT/some points/NNS/points /,/, may/MD/may be/VB/be yes/NNS/yes /,/, may/MD/may be/VB/be no/NNP/no. i/PRP/i mean/VBP/mean /,/, so/RB/so let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this approach/NNP/approach. this/DT/this will/MD/will not/RB/not be/VB/be the/DT/the approach/NN/approach finally/RB/finally follow/JJ/follow /,/, but/CC/but this/DT/this is/VBZ/is something/NN/something that/IN/that i/PRP/i wanted/VBD/wanted to/TO/to think/VB/think about/IN/about for/IN/for every/DT/every problem/NNP/problem. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the reason/NN/reason i/PRP/i wanted/VBD/wanted to/TO/to go/VB/go over/IN/over this/DT/this again/NNP/again. so/RB/so /,/, the/DT/the classic/JJ/classic sort/NN/sort of/IN/of inductive/JJ/inductive approach/NN/approach to/TO/to this/DT/this any/DT/any such/JJ/such problem/NN/problem is/VBZ/is remove/JJ/remove a/DT/a point/NNP/point. the/DT/the recurs/NNS/recurs some/DT/some the/DT/the rest/NN/rest /,/, put/VBD/put the/DT/the point/NN/point back/RB/back and/CC/and see/VB/see what/WP/what you/PRP/you get/VBP/get /,/, good/NNP/good. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 13/CD/13 /CD/) so/RB/so /,/, let/VB/let us/PRP/us see/VB/see this/DT/this is/VBZ/is the/DT/the point/NN/point i/PRP/i have/VBP/have to/TO/to move/VB/move /,/, here/RB/here the/DT/the point/NN/point set/VBD/set in/IN/in this/DT/this /,/, let/VB/let us/PRP/us say/VB/say in/IN/in this/DT/this region/NNP/region. there/RB/there are/VBP/are other/JJ/other points/NNS/points /,/, this/DT/this huge/JJ/huge big/JJ/big star/NN/star /,/, this/DT/this dot/NN/dot is/VBZ/is what/WP/what i/PRP/i have/VBP/have remove/NNP/remove. now/RB/now /,/, i/PRP/i find/VBP/find the/DT/the smallest/JJS/smallest distance/NN/distance /,/, now/RB/now what/WP/what can/MD/can i/VB/i do/VBP/do ?/./? i/PRP/i mean/VBP/mean although/IN/although i/PRP/i compute/VBP/compute /,/, what/WP/what is/VBZ/is distance/NNP/distance. well/RB/well /,/, it/PRP/it looks/VBZ/looks like/IN/like /,/, i/PRP/i mean/VBP/mean the/DT/the obvious/JJ/obvious thing/NN/thing is/VBZ/is to/TO/to compute/VB/compute distances/NNS/distances from/IN/from this/DT/this to/TO/to every/DT/every other/JJ/other point/NNP/point. but/CC/but /,/, well/RB/well that/IN/that is/VBZ/is not/RB/not true/JJ/true way/NNP/way. you/PRP/you are/VBP/are back/RB/back to/TO/to the/DT/the original/JJ/original to/TO/to where/WRB/where you/PRP/you started/NNP/started. because/IN/because /,/, there/EX/there are/VBP/are n/NN/n minus/NN/minus 1/CD/1 /,/, such/JJ/such other/JJ/other points/NNS/points and/CC/and you/PRP/you will/MD/will compute/VB/compute n/NN/n minus/NN/minus 1/CD/1 distances/NNP/distances. and/CC/and this/DT/this recurrence/NN/recurrence you/PRP/you will/MD/will see/VB/see /,/, will/MD/will lead/VB/lead to/TO/to in/IN/in order/NN/order n/NN/n square/NN/square solution/NN/solution /,/, because/IN/because your/PRP$/your recurrence/NN/recurrence will/MD/will be/VB/be t/VBN/t n/NN/n is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1 plus/CC/plus t/NN/t of/IN/of n/NN/n minus/NN/minus 1/CD/1. this/DT/this will/MD/will lead/VB/lead to/TO/to order/NN/order n/NN/n square/NN/square /,/, so/RB/so you/PRP/you can/MD/can check/VB/check this/NNP/this. well/RB/well /,/, can/MD/can i/PRP/i get/VB/get rid/JJ/rid of/IN/of some/DT/some of/IN/of these/DT/these points/NNS/points now/NNP/now. if/IN/if you/PRP/you could/MD/could do/VB/do the/DT/the following/VBG/following /,/, suppose/NN/suppose in/IN/in the/DT/the minimum/JJ/minimum distance/NN/distance here/RB/here /,/, over/IN/over the/DT/the entire/JJ/entire set/NN/set /,/, except/IN/except this/DT/this point/NN/point this/DT/this is/VBZ/is delta/NNP/delta. the/DT/the minimum/JJ/minimum distance/NN/distance /,/, you/PRP/you have/VBP/have calculated/VBN/calculated recursively/RB/recursively is/VBZ/is delta/NNP/delta. then/RB/then /,/, you/PRP/you know/VBP/know that/IN/that any/DT/any point/NN/point /,/, the/DT/the points/NNS/points that/IN/that are/VBP/are actually/RB/actually in/IN/in contention/NN/contention /,/, are/VBP/are points/NNS/points in/IN/in a/DT/a circle/NN/circle of/IN/of radius/NN/radius delta/NN/delta /,/, around/IN/around this/DT/this point/NNP/point. only/RB/only points/VBZ/points in/IN/in this/DT/this circle/NN/circle are/VBP/are in/IN/in contention/NNP/contention. the/DT/the other/JJ/other points/NNS/points are/VBP/are well/RB/well too/RB/too far/RB/far away/NNP/away. if/IN/if you/PRP/you can/MD/can quickly/RB/quickly compute/VB/compute these/DT/these points/NNS/points /,/, then/RB/then you/PRP/you are/VBP/are in/IN/in business/NNP/business. i/PRP/i took/VBD/took n/NN/n minus/NN/minus 1/CD/1 times/NNS/times to/TO/to extra/VB/extra time/NN/time /,/, but/CC/but supposing/VBG/supposing i/PRP/i can/MD/can do/VB/do this/DT/this much/JJ/much faster/NN/faster /,/, somehow/NN/somehow i/PRP/i do/VBP/do not/RB/not know/VB/know how/NNP/how. but/CC/but /,/, if/IN/if you/PRP/you can/MD/can compute/VB/compute this/DT/this much/JJ/much faster/NN/faster /,/, then/RB/then you/PRP/you are/VBP/are in/IN/in good/JJ/good shape/NNP/shape. then/RB/then /,/, you/PRP/you can/MD/can may/VB/may be/VB/be reduce/NN/reduce this/DT/this n/NN/n minus/VBZ/minus 1/CD/1 somehow/NN/somehow to/TO/to something/NN/something else/NNP/else. for/IN/for instance/NN/instance /,/, if/IN/if you/PRP/you reduce/VBP/reduce this/DT/this to/TO/to log/VB/log n/NN/n /,/, your/PRP$/your n/NN/n really/RB/really good/JJ/good shape/NNP/shape. then/RB/then /,/, maybe/RB/maybe you/PRP/you can/MD/can push/VB/push this/DT/this further/JJ/further /,/, so/RB/so your/PRP$/your think/NN/think is/VBZ/is should/MD/should be/VB/be along/IN/along these/DT/these lines/NNP/lines. how/WRB/how do/VBP/do i/PRP/i cut/VB/cut this/DT/this n/NN/n minus/VBZ/minus 1/CD/1 log/NNP/log. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 02/CD/02 /CD/) so/RB/so /,/, before/IN/before we/PRP/we go/VBP/go further/RB/further /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this in/IN/in one/CD/one dimension/NNP/dimension. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this ?/./? that/IN/that mean/JJ/mean /,/, you/PRP/you are/VBP/are given/VBN/given a/DT/a line/NN/line and/CC/and some/DT/some points/NNP/points. you/PRP/you are/VBP/are given/VBN/given some/DT/some points/NNP/points. and/CC/and you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the closest/JJS/closest pair/NN/pair along/IN/along this/DT/this line/NNP/line. you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the closest/JJS/closest pair/NN/pair /,/, how/WRB/how will/MD/will you/PRP/you do/VB/do this/DT/this ?/./? well/RB/well /,/, i/PRP/i think/VBP/think some/DT/some of/IN/of you/PRP/you should/MD/should see/VB/see that/IN/that /,/, you/PRP/you do/VBP/do not/RB/not need/VB/need to/TO/to really/RB/really calculate/VB/calculate all/DT/all the/DT/the n/NN/n chooseful/NN/chooseful distances/NNP/distances. there/EX/there are/VBP/are n/NN/n points/NNS/points /,/, there/EX/there are/VBP/are n/NN/n choose/NN/choose to/TO/to sort/VB/sort of/IN/of distances/NNS/distances this/NNP/this. may/MD/may be/VB/be you/PRP/you do/VBP/do not/RB/not really/RB/really need/VBP/need to/TO/to do/VB/do n/NN/n chooseful/VB/chooseful /,/, look/NN/look at/IN/at all/DT/all n/NN/n chooseful/NNP/chooseful. so/RB/so /,/, how/WRB/how will/MD/will you/PRP/you sort/VB/sort of/IN/of do/VB/do this/DT/this /,/, well/RB/well let/VB/let think/VBP/think to/TO/to notice/NNP/notice. in/IN/in all/DT/all these/DT/these things/NNS/things /,/, you/PRP/you need/VBP/need to/TO/to notice/NN/notice something/NN/something about/IN/about the/DT/the problem/NNP/problem. some/DT/some property/NN/property of/IN/of the/DT/the problem/NN/problem /,/, that/IN/that sort/NN/sort of/IN/of pushes/NNS/pushes you/PRP/you up/NNP/up. that/IN/that let/NN/let us/PRP/us you/PRP/you do/VBP/do things/NNS/things faster/NNP/faster. so/RB/so /,/, in/IN/in this/DT/this case/NN/case /,/, well/RB/well the/DT/the thing/NN/thing to/TO/to notice/NN/notice is/VBZ/is that/IN/that /,/, supposing/VBG/supposing i/PRP/i am/VBP/am looking/VBG/looking at/IN/at this/DT/this point/NN/point /,/, the/DT/the only/JJ/only candidate/NN/candidate points/NNS/points are/VBP/are the/DT/the adjacent/NN/adjacent ones/NNP/ones. these/DT/these are/VBP/are the/DT/the only/JJ/only candidate/NN/candidate points/NNP/points. if/IN/if for/IN/for each/DT/each of/IN/of these/DT/these points/NNS/points /,/, i/PRP/i can/MD/can identify/VB/identify these/DT/these candidates/NNP/candidates. then/RB/then /,/, i/PRP/i am/VBP/am done/NN/done because/IN/because /,/, for/IN/for each/DT/each point/NN/point i/PRP/i need/VBP/need only/RB/only to/TO/to check/VB/check two/CD/two distances/NNP/distances. so/RB/so /,/, that/IN/that leads/NNS/leads to/TO/to 2/CD/2 n/NNP/n. for/IN/for each/DT/each point/NN/point i/PRP/i need/VBP/need to/TO/to check/VB/check two/CD/two distances/NNP/distances. so/RB/so /,/, for/IN/for n/NN/n points/NNS/points i/PRP/i need/VBP/need to/TO/to check/VB/check 2/CD/2 n/NN/n distances/NNP/distances. but/CC/but /,/, which/WDT/which 2/CD/2 that/WDT/that is/VBZ/is a/DT/a big/JJ/big question/NNP/question. for/IN/for this/DT/this point/NN/point /,/, how/WRB/how do/VBP/do i/PRP/i find/VBP/find these/DT/these two/CD/two /,/, which/WDT/which are/VBP/are neighbors/NNS/neighbors in/IN/in some/DT/some sense/NNP/sense. if/IN/if i/PRP/i can/MD/can do/VB/do that/DT/that /,/, then/RB/then just/RB/just 2/CD/2 n/NN/n distances/NNS/distances /,/, then/RB/then well/RB/well looks/VBZ/looks linear/NNP/linear. well/RB/well /,/, how/WRB/how do/VBP/do i/PRP/i find/VBP/find these/DT/these two/CD/two /,/, may/MD/may be/VB/be just/RB/just solved/VBN/solved them/PRP/them /,/, so/RB/so in/IN/in one/CD/one dimension/NN/dimension /,/, sort/NNP/sort. well/RB/well /,/, once/RB/once you/PRP/you sort/NN/sort them/PRP/them /,/, look/VBP/look at/IN/at them/PRP/them in/IN/in increasing/VBG/increasing order/NN/order of/IN/of from/IN/from left/VBN/left to/TO/to right/NNP/right. and/CC/and for/IN/for each/DT/each point/NN/point look/NN/look at/IN/at the/DT/the previous/JJ/previous and/CC/and then/RB/then /,/, the/DT/the next/JJ/next one/NNP/one. compute/NN/compute these/DT/these distances/NNS/distances and/CC/and choose/VB/choose the/DT/the minimum/NNP/minimum. then/RB/then /,/, you/PRP/you choose/VBP/choose the/DT/the minimum/JJ/minimum by/IN/by scanning/NN/scanning these/DT/these points/NNS/points /,/, sorting/VBG/sorting takes/NNS/takes order/NN/order n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, we/PRP/we started/VBD/started out/RP/out with/IN/with n/NN/n chooseful/JJ/chooseful distances/NNS/distances /,/, but/CC/but really/RB/really time/NN/time taken/VBN/taken is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. sorting/NN/sorting dominates/VBZ/dominates this/DT/this procedure/NN/procedure and/CC/and if/IN/if i/PRP/i sort/VBP/sort of/IN/of first/JJ/first sort/NN/sort it/PRP/it and/CC/and then/RB/then /,/, i/PRP/i do/VBP/do this/DT/this then/RB/then it/PRP/it takes/VBZ/takes the/DT/the time/NN/time taken/VBN/taken is/VBZ/is n/VBN/n log/NN/log n/NNP/n. i/PRP/i have/VBP/have reduced/VBN/reduced it/PRP/it from/IN/from n/NN/n square/NN/square to/TO/to n/VB/n log/NN/log n/NNP/n. there/EX/there are/VBP/are some/DT/some morals/NNS/morals in/IN/in this/DT/this story/NNP/story. first/RB/first one/CD/one is/VBZ/is you/PRP/you should/MD/should always/RB/always try/VB/try a/DT/a simpler/NN/simpler problem/NNP/problem. you/PRP/you are/VBP/are given/VBN/given this/DT/this problem/NN/problem in/IN/in two/CD/two dimension/NNP/dimension. it/PRP/it always/VBZ/always pays/NNS/pays to/TO/to first/JJ/first check/NN/check out/IN/out what/WP/what the/DT/the problem/NN/problem means/VBZ/means in/IN/in one/CD/one dimension/NNP/dimension. you/PRP/you will/MD/will learn/VB/learn a/DT/a little/RB/little bit/NN/bit /,/, that/IN/that is/VBZ/is the/DT/the first/JJ/first thing/NNP/thing. and/CC/and you/PRP/you at/IN/at least/JJS/least now/RB/now know/VBP/know that/IN/that /,/, may/MD/may be/VB/be it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to do/VB/do it/PRP/it in/IN/in less/JJR/less than/IN/than n/NN/n choosable/JJ/choosable time/NNP/time. because/IN/because /,/, one/CD/one dimension/NN/dimension certainly/RB/certainly you/PRP/you can/MD/can do/VB/do it/PRP/it in/IN/in n/NN/n log/NN/log n/NNP/n. question/NN/question one/CD/one asks/NNS/asks now/RB/now is/VBZ/is about/IN/about what/WP/what about/IN/about two/CD/two dimension/NN/dimension /,/, can/MD/can you/PRP/you do/NNP/do. is/VBZ/is there/RB/there something/NN/something like/IN/like sorting/NN/sorting that/IN/that i/PRP/i can/MD/can do/VB/do /,/, which/WDT/which will/MD/will help/VB/help me/PRP/me out/NNP/out. the/DT/the answer/NN/answer is/VBZ/is actually/RB/actually /,/, yes/NNS/yes and/CC/and let/VB/let us/PRP/us see/VB/see how/WRB/how this/DT/this is/VBZ/is done/VBN/done /,/, it/PRP/it is/VBZ/is quite/RB/quite a/DT/a smart/NN/smart algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we will/MD/will try/VB/try and/CC/and apply/RB/apply /,/, divide/VBP/divide and/CC/and conquer/NN/conquer approach/NN/approach /,/, reasonably/RB/reasonably blindly/NNP/blindly. but/CC/but as/IN/as we/PRP/we proceed/VBP/proceed this/DT/this fact/NN/fact we/PRP/we use/VBP/use some/DT/some some/DT/some trick/NN/trick that/IN/that speed/NN/speed up/IN/up /CD/( /CD/( refer/NN/refer time/NN/time /:/: 13/CD/13 /:/: 16/CD/16 /CD/) /CD/) /./. so/RB/so /,/, the/DT/the first/JJ/first step/NN/step is/VBZ/is something/NN/something you/PRP/you can/MD/can think/VB/think of/IN/of /,/, i/PRP/i want/VBP/want to/TO/to divide/VB/divide the/DT/the point/NN/point into/IN/into two/CD/two parts/NNP/parts. find/NN/find the/DT/the minimum/JJ/minimum on/IN/on the/DT/the left/NN/left part/NN/part /,/, find/VBP/find the/DT/the minimum/JJ/minimum on/IN/on the/DT/the right/NN/right part/NNP/part. then/RB/then /,/, once/RB/once you/PRP/you find/VBP/find the/DT/the minimum/JJ/minimum /,/, now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use these/DT/these minimums/NNS/minimums to/TO/to compute/VB/compute the/DT/the overall/JJ/overall minimum/NNP/minimum. will/MD/will this/DT/this help/NN/help /,/, will/MD/will this/DT/this not/RB/not help/VB/help /,/, well/RB/well will/MD/will have/VB/have to/TO/to see/NNP/see. before/IN/before /,/, we/PRP/we do/VBP/do this/DT/this i/PRP/i think/VBP/think it/PRP/it is/VBZ/is possibly/RB/possibly illustrative/JJ/illustrative to/TO/to do/VB/do this/DT/this on/IN/on the/DT/the line/NNP/line. we/PRP/we first/RB/first sorted/VBD/sorted in/IN/in founded/VBN/founded the/DT/the minimum/JJ/minimum /,/, that/IN/that was/VBD/was n/VBN/n log/NN/log n/NNP/n. let/NN/let us/PRP/us see/VBP/see what/WP/what this/DT/this gives/VBZ/gives /,/, this/DT/this divide/NN/divide and/CC/and conquer/NN/conquer strategy/NN/strategy gives/VBZ/gives on/IN/on the/DT/the line/NNP/line. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 06/CD/06 /CD/) so/RB/so /,/, i/PRP/i am/VBP/am given/VBN/given these/DT/these n/NN/n points/NNS/points /,/, can/MD/can i/PRP/i get/VB/get something/NN/something /,/, can/MD/can i/PRP/i do/VBP/do something/NN/something better/NNP/better. what/WP/what would/MD/would the/DT/the divide/NN/divide and/CC/and conquer/NN/conquer strategy/NN/strategy be/VB/be /,/, well/RB/well divide/VB/divide the/DT/the points/NNS/points into/IN/into two/CD/two parts/NNP/parts. one/CD/one on/IN/on the/DT/the left/NN/left /,/, one/CD/one on/IN/on the/DT/the right/NN/right and/CC/and recurs/NNS/recurs on/IN/on the/DT/the both/NN/both ;/:/; and/CC/and what/WP/what ?/./? once/RB/once we/PRP/we get/VBP/get the/DT/the minimum/JJ/minimum distance/NN/distance from/IN/from this/DT/this and/CC/and that/NNP/that. now/RB/now /,/, the/DT/the only/JJ/only sort/NN/sort of/IN/of thing/NN/thing that/WDT/that we/PRP/we have/VBP/have not/RB/not check/VB/check /,/, is/VBZ/is if/IN/if the/DT/the minimum/JJ/minimum distance/NN/distance between/IN/between points/NNS/points on/IN/on the/DT/the left/NN/left and/CC/and point/NN/point on/IN/on the/DT/the right/NNP/right. i/PRP/i find/VBP/find the/DT/the minimum/JJ/minimum here/RB/here /,/, i/PRP/i find/VBP/find the/DT/the minimum/JJ/minimum there/NNP/there. and/CC/and then/RB/then /,/, the/DT/the only/JJ/only distance/NN/distance i/PRP/i need/VBP/need to/TO/to now/RB/now compute/VB/compute is/VBZ/is the/DT/the point/NN/point on/IN/on the/DT/the left/NN/left /,/, the/DT/the last/JJ/last point/NN/point on/IN/on the/DT/the left/NNP/left. the/DT/the first/JJ/first point/NN/point on/IN/on the/DT/the right/NN/right /,/, find/VBP/find this/DT/this distance/NN/distance and/CC/and check/NN/check this/DT/this against/IN/against the/DT/the minimum/JJ/minimum /,/, that/IN/that i/PRP/i have/VBP/have computed/NNP/computed. so/RB/so /,/, i/PRP/i found/VBD/found let/VB/let us/PRP/us say/VB/say /,/, delta/NN/delta l/NN/l /,/, delta/NN/delta r/NN/r and/CC/and this/DT/this is/VBZ/is delta/NNP/delta. so/RB/so /,/, i/PRP/i need/VBP/need to/TO/to find/VB/find this/DT/this minimum/NNP/minimum. so/RB/so /,/, once/RB/once i/PRP/i compute/VBP/compute delta/NN/delta l/NN/l and/CC/and delta/NN/delta r/NN/r and/CC/and delta/NN/delta /,/, i/PRP/i just/RB/just check/VBP/check the/DT/the minimum/JJ/minimum of/IN/of these/DT/these and/CC/and return/NN/return the/DT/the minimum/JJ/minimum of/IN/of these/DT/these three/NNP/three. i/PRP/i need/VBP/need to/TO/to make/VB/make sure/JJ/sure /,/, that/IN/that i/PRP/i find/VBP/find this/DT/this point/NN/point on/IN/on the/DT/the left/NN/left recursively/NNP/recursively. and/CC/and i/PRP/i make/VBP/make find/JJ/find this/DT/this point/NN/point on/IN/on the/DT/the right/NN/right recursively/NNP/recursively. so/RB/so /,/, again/RB/again this/DT/this /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to do/VB/do by/IN/by divide/VB/divide and/CC/and conquer/NNP/conquer. then/RB/then /,/, i/PRP/i need/VBP/need to/TO/to strengthen/VB/strengthen in/IN/in /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 15/CD/15 /:/: 39/CD/39 /CD/) /CD/) /,/, which/WDT/which is/VBZ/is that/IN/that not/RB/not only/RB/only do/VBP/do i/PRP/i find/VBP/find minimum/JJ/minimum distances/NNP/distances. but/CC/but /,/, also/RB/also to/TO/to find/VB/find the/DT/the last/JJ/last point/NN/point /,/, right/RB/right most/RBS/most point/NN/point and/CC/and the/DT/the left/NN/left most/JJS/most point/NNP/point. once/RB/once i/PRP/i do/VBP/do this/DT/this /,/, then/RB/then i/PRP/i can/MD/can sort/VB/sort of/IN/of put/VBN/put these/DT/these two/CD/two things/NNS/things together/RB/together to/TO/to get/VB/get a/DT/a solution/NNP/solution. i/PRP/i do/VBP/do not/RB/not want/VB/want to/TO/to get/VB/get into/IN/into with/IN/with this/DT/this in/IN/in detail/NN/detail /,/, because/IN/because the/DT/the problem/NN/problem here/RB/here is/VBZ/is again/RB/again splitting/VBG/splitting the/DT/the input/NN/input into/IN/into two/CD/two parts/NNP/parts. now/RB/now /,/, how/WRB/how do/VBP/do you/PRP/you split/VB/split this/DT/this into/IN/into two/CD/two parts/NNP/parts. well/RB/well /,/, we/PRP/we need/VBP/need to/TO/to split/VB/split it/PRP/it into/IN/into two/CD/two equal/JJ/equal halves/NNS/halves /,/, then/RB/then you/PRP/you need/VBP/need two/CD/two halves/NNP/halves. then/RB/then /,/, we/PRP/we need/VBP/need to/TO/to find/VB/find the/DT/the median/JJ/median /,/, that/IN/that takes/VBZ/takes linear/JJ/linear time/NNP/time. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look on/IN/on the/DT/the recurrence/NN/recurrence /,/, it/PRP/it looks/VBZ/looks like/IN/like t/NN/t n/NN/n /,/, this/DT/this is/VBZ/is 2/CD/2 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus order/NN/order n/NNP/n. and/CC/and this/DT/this we/PRP/we know/VBP/know is/VBZ/is n/VBN/n log/NN/log n/NNP/n. the/DT/the solution/NN/solution to/TO/to this/DT/this is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. this/DT/this is/VBZ/is the/DT/the time/NN/time taken/VBN/taken to/TO/to find/VB/find the/DT/the median/JJ/median and/CC/and divide/JJ/divide /,/, this/DT/this is/VBZ/is the/DT/the divide/NN/divide step/NNP/step. so/RB/so /,/, this/DT/this does/VBZ/does not/RB/not really/RB/really use/VB/use sorting/VBG/sorting in/IN/in any/DT/any sense/NN/sense /,/, except/IN/except to/TO/to find/VB/find the/DT/the median/NNP/median. so/RB/so /,/, this/DT/this is/VBZ/is another/DT/another way/NN/way of/IN/of doing/VBG/doing this/DT/this /,/, using/VBG/using this/DT/this plane/NN/plane /,/, divided/VBD/divided and/CC/and conquered/VBN/conquered on/IN/on these/DT/these points/NNS/points on/IN/on the/DT/the line/NNP/line. let/NN/let us/PRP/us do/VBP/do this/DT/this to/TO/to points/NNS/points in/IN/in the/DT/the plane/NNP/plane. you/PRP/you have/VBP/have given/VBN/given points/NNS/points on/IN/on the/DT/the plane/NN/plane and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to divide/VB/divide this/DT/this into/IN/into two/CD/two parts/NNP/parts. let/NN/let us/PRP/us say/VBP/say based/VBN/based on/IN/on the/DT/the x/NN/x coordinate/NN/coordinate /,/, the/DT/the first/JJ/first n/NN/n by/IN/by 2/CD/2 /,/, the/DT/the left/NN/left most/JJS/most n/NN/n by/IN/by 2/CD/2 points/NNS/points /,/, it/PRP/it will/MD/will form/VB/form one/CD/one set/NNP/set. the/DT/the right/NN/right most/JJS/most n/NN/n by/IN/by 2/CD/2 points/NNS/points will/MD/will form/VB/form the/DT/the other/JJ/other set/NNP/set. i/PRP/i recursively/RB/recursively find/VBP/find minimum/JJ/minimum distance/NN/distance /,/, closest/NN/closest pair/NN/pair of/IN/of points/NNS/points in/IN/in the/DT/the left/NN/left /,/, closest/NN/closest set/VBD/set of/IN/of points/NNS/points in/IN/in the/DT/the right/NNP/right. and/CC/and now/RB/now i/PRP/i need/VBP/need to/TO/to find/VB/find /,/, closest/JJS/closest pair/NN/pair for/IN/for the/DT/the entire/JJ/entire thing/NNP/thing. and/CC/and let/VB/let see/NN/see if/IN/if this/DT/this can/MD/can be/VB/be done/VBN/done fast/NNP/fast. that/IN/that is/VBZ/is the/DT/the goal/NN/goal of/IN/of this/DT/this lecture/NNP/lecture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 50/CD/50 /CD/) so/RB/so /,/, here/RB/here let/VB/let us/PRP/us see/VB/see my/PRP$/my points/NNS/points are/VBP/are points/NNS/points line/NN/line this/DT/this blob/NN/blob /,/, divided/VBD/divided into/IN/into two/CD/two parts/NNP/parts. there/RB/there are/VBP/are n/VBN/n by/IN/by 2/CD/2 points/NNS/points here/RB/here /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the left/VBN/left and/CC/and that/IN/that is/VBZ/is the/DT/the right/NNP/right. there/RB/there are/VBP/are n/VBN/n by/IN/by 2/CD/2 points/NNS/points /,/, n/NN/n by/IN/by 2/CD/2 points/NNS/points here/NNP/here. now/RB/now /,/, i/PRP/i find/VBP/find closest/JJS/closest pair/NN/pair points/NNS/points in/IN/in the/DT/the left/NN/left /,/, closest/NN/closest pair/NN/pair of/IN/of points/NNS/points from/IN/from the/DT/the right/NNP/right. let/NN/let us/PRP/us say/VBP/say /,/, that/IN/that delta/NN/delta l/NN/l is/VBZ/is the/DT/the closest/JJS/closest /,/, is/VBZ/is the/DT/the minimum/JJ/minimum distance/NN/distance on/IN/on the/DT/the left/NN/left /,/, delta/NN/delta r/NN/r minimum/NN/minimum distance/NN/distance on/IN/on the/DT/the right/NNP/right. delta/NN/delta be/VB/be minimum/JJ/minimum of/IN/of delta/NN/delta l/NN/l and/CC/and delta/NN/delta r/NN/r /,/, this/DT/this is/VBZ/is the/DT/the smaller/JJR/smaller of/IN/of these/DT/these two/NNP/two. now/RB/now /,/, i/PRP/i need/VBP/need to/TO/to find/VB/find closest/JJS/closest pair/NNP/pair. and/CC/and i/PRP/i know/VBP/know that/IN/that /,/, if/IN/if at/IN/at all/DT/all there/EX/there are/VBP/are candidates/NNS/candidates or/CC/or closest/JJS/closest pair/JJ/pair /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be that/IN/that one/CD/one point/NN/point has/VBZ/has to/TO/to be/VB/be on/IN/on the/DT/the left/NN/left and/CC/and one/CD/one on/IN/on the/DT/the right/NNP/right. any/DT/any candidate/NN/candidate pair/NN/pair has/VBZ/has to/TO/to be/VB/be of/IN/of this/DT/this form/NNP/form. they/PRP/they can/MD/can not/RB/not both/VB/both be/VB/be on/IN/on the/DT/the left/NN/left and/CC/and both/DT/both on/IN/on the/DT/the right/NNP/right. one/CD/one of/IN/of them/PRP/them has/VBZ/has to/TO/to be/VB/be on/IN/on the/DT/the left/NN/left ;/:/; and/CC/and one/CD/one of/IN/of them/PRP/them has/VBZ/has to/TO/to be/VB/be on/IN/on the/DT/the right/NNP/right. what/WP/what else/RB/else can/MD/can be/VB/be said/VBN/said /,/, let/VB/let us/PRP/us also/RB/also sort/NN/sort of/IN/of at/IN/at the/DT/the same/JJ/same time/NN/time the/DT/the recurrence/NN/recurrence in/IN/in place/NNP/place. so/RB/so /,/, i/PRP/i am/VBP/am looking/VBG/looking t/NN/t n/NN/n /,/, so/RB/so t/RB/t n/JJ/n is/VBZ/is the/DT/the time/NNP/time. i/PRP/i have/VBP/have already/RB/already done/VBN/done this/DT/this plus/NN/plus what/WP/what ?/./? well/RB/well /,/, i/PRP/i would/MD/would like/VB/like this/DT/this ideally/RB/ideally to/TO/to be/NNP/be. if/IN/if this/DT/this is/VBZ/is say/VBP/say order/NN/order n/NN/n /,/, then/RB/then this/DT/this recurrence/NN/recurrence is/VBZ/is n/VBN/n log/NN/log n/NN/n /,/, i/PRP/i mean/VBP/mean good/JJ/good shape/NNP/shape. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the amount/NN/amount of/IN/of work/NN/work that/WDT/that i/PRP/i will/MD/will need/VB/need /,/, to/TO/to find/VB/find the/DT/the closest/JJS/closest pair/NNP/pair. one/CD/one from/IN/from this/DT/this side/NN/side and/CC/and one/CD/one from/IN/from that/DT/that side/NN/side ;/:/; where/WRB/where one/CD/one point/NN/point is/VBZ/is from/IN/from this/DT/this side/NN/side /,/, one/CD/one point/NN/point is/VBZ/is from/IN/from that/DT/that side/NNP/side. suppose/NN/suppose /,/, i/PRP/i do/VBP/do it/PRP/it well/RB/well the/DT/the natural/JJ/natural way/NN/way is/VBZ/is to/TO/to just/RB/just pick/VB/pick every/DT/every point/NN/point on/IN/on the/DT/the left/NN/left /,/, every/DT/every point/NN/point on/IN/on the/DT/the right/NNP/right. and/CC/and sort/NN/sort of/IN/of find/NN/find the/DT/the distances/NNS/distances /,/, for/IN/for every/DT/every pair/NNP/pair. this/DT/this could/MD/could be/VB/be as/RB/as large/JJ/large as/IN/as /,/, well/RB/well that/IN/that could/MD/could be/VB/be n/VBN/n by/IN/by 2/CD/2. there/EX/there are/VBP/are n/NN/n by/IN/by 2/CD/2 points/NNS/points and/CC/and n/NN/n by/IN/by 2/CD/2 points/NNS/points here/RB/here /,/, that/IN/that gives/VBZ/gives rise/NN/rise to/TO/to n/VB/n square/JJ/square by/IN/by 4/CD/4 pairs/NNP/pairs. so/RB/so /,/, if/IN/if i/PRP/i compute/VBP/compute n/JJ/n square/NN/square by/IN/by 4/CD/4 distances/NNS/distances i/PRP/i am/VBP/am /:/( /:/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 58/CD/58 /CD/) /CD/) /,/, that/IN/that is/VBZ/is just/RB/just too/RB/too much/NNP/much. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will back/VB/back to/TO/to our/PRP$/our usual/JJ/usual n/NN/n square/NNP/square. we/PRP/we will/MD/will be/VB/be /,/, you/PRP/you can/MD/can check/VB/check that/IN/that /,/, you/PRP/you compute/VBP/compute all/DT/all distances/NNS/distances /,/, all/DT/all pairs/NNS/pairs of/IN/of distances/NNS/distances /,/, the/DT/the n/NN/n chooseful/NN/chooseful distances/NNP/distances. so/RB/so /,/, this/DT/this is/VBZ/is not/RB/not what/WP/what we/PRP/we want/VBP/want to/TO/to do/NNP/do. so/RB/so /,/, how/WRB/how can/MD/can we/PRP/we speed/VB/speed things/NNS/things /:/( /:/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 20/CD/20 /CD/) /CD/) /./. this/DT/this is/VBZ/is the/DT/the question/NN/question /,/, that/IN/that you/PRP/you need/VBP/need to/TO/to answer/NNP/answer. now/RB/now /,/, at/IN/at this/DT/this point/NN/point /,/, it/PRP/it is/VBZ/is left/VBN/left to/TO/to your/PRP$/your ingenuity/NNP/ingenuity. it/PRP/it is/VBZ/is left/VBN/left to/TO/to little/RB/little bit/VB/bit of/IN/of luck/NN/luck /,/, but/CC/but there/EX/there are/VBP/are no/DT/no clear/NNP/clear. it/PRP/it is/VBZ/is not/RB/not as/IN/as if/IN/if at/IN/at least/JJS/least i/PRP/i do/VBP/do not/RB/not know/VB/know of/IN/of any/DT/any thing/NN/thing that/WDT/that i/PRP/i can/MD/can teach/VB/teach you/PRP/you /,/, which/WDT/which you/PRP/you can/MD/can use/NNP/use. this/DT/this is/VBZ/is left/VBN/left to/TO/to just/RB/just /,/, your/PRP$/your own/JJ/own intelligence/NN/intelligence and/CC/and perseverance/NNP/perseverance. you/PRP/you can/MD/can try/VB/try small/JJ/small problem/NN/problem /,/, small/JJ/small examples/NNS/examples etcetera/NN/etcetera /,/, etcetera/NNP/etcetera. but/CC/but /,/, the/DT/the idea/NN/idea from/IN/from this/DT/this point/NN/point onwards/NNS/onwards are/VBP/are completely/RB/completely new/NNP/new. they/PRP/they are/VBP/are problem/PRP/problem dependent/NN/dependent /,/, depends/VBZ/depends on/IN/on the/DT/the problem/NNP/problem. and/CC/and there/EX/there are/VBP/are no/DT/no general/JJ/general techniques/NNS/techniques /,/, that/IN/that i/PRP/i can/MD/can tell/VB/tell you/PRP/you which/WDT/which you/PRP/you can/MD/can use/NNP/use. there/RB/there are/VBP/are no/DT/no formulae/NN/formulae 's/POS/'s that/DT/that you/PRP/you can/MD/can apply/NNP/apply. and/CC/and this/DT/this in/IN/in fact/NN/fact /,/, is/VBZ/is the/DT/the beauty/NN/beauty of/IN/of the/DT/the speed/NN/speed /,/, that/IN/that it/PRP/it is/VBZ/is not/RB/not that/IN/that i/PRP/i pump/VBP/pump you/PRP/you full/JJ/full of/IN/of ideas/NNP/ideas. and/CC/and then/RB/then /,/, you/PRP/you are/VBP/are all/DT/all ready/JJ/ready to/TO/to take/VB/take on/IN/on a/DT/a problem/NNP/problem. that/WDT/that is/VBZ/is not/RB/not the/DT/the way/NN/way to/TO/to us/NNP/us. each/DT/each problem/NN/problem has/VBZ/has a/DT/a flavor/NN/flavor of/IN/of it/PRP/it is/VBZ/is own/NNP/own. and/CC/and each/DT/each candidate/NN/candidate also/RB/also has/VBZ/has his/PRP$/his own/JJ/own capability/NNP/capability. and/CC/and each/DT/each person/NN/person has/VBZ/has his/PRP$/his own/JJ/own capabilities/NNP/capabilities. and/CC/and is/VBZ/is a/DT/a good/JJ/good chance/NN/chance that/IN/that /,/, if/IN/if you/PRP/you try/VBP/try this/DT/this problem/NN/problem /,/, you/PRP/you will/MD/will come/VB/come up/RP/up with/IN/with your/PRP$/your own/JJ/own algorithm/NN/algorithm /,/, your/PRP$/your own/JJ/own passed/VBN/passed algorithm/NNP/algorithm. so/RB/so /,/, from/IN/from this/DT/this point/NN/point onwards/NNS/onwards /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to tell/VB/tell you/PRP/you a/DT/a few/JJ/few tricks/NNS/tricks by/IN/by which/WDT/which we/PRP/we will/MD/will reduce/VB/reduce this/NNP/this. these/DT/these observations/NNS/observations are/VBP/are which/WDT/which i/PRP/i will/MD/will make/VB/make or/CC/or we/PRP/we will/MD/will find/VB/find reasonably/RB/reasonably simple/JJ/simple initially/RB/initially /,/, but/CC/but these/DT/these we/PRP/we have/VBP/have to/TO/to find/VB/find on/IN/on your/PRP$/your own/NNP/own. there/RB/there is/VBZ/is no/DT/no teacher/NN/teacher to/TO/to teach/VB/teach you/PRP/you this/DT/this /,/, you/PRP/you have/VBP/have to/TO/to learn/VB/learn it/PRP/it yourself/NNP/yourself. it/PRP/it just/RB/just depends/VBZ/depends on/IN/on your/PRP$/your analytical/JJ/analytical skills/NNS/skills /,/, good/NNP/good. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now get/VB/get back/RB/back to/TO/to this/DT/this problem/NNP/problem. the/DT/the first/JJ/first thing/NN/thing i/PRP/i am/VBP/am going/VBG/going to/TO/to note/VB/note is/VBZ/is /,/, where/WRB/where do/VBP/do these/DT/these supposing/VBG/supposing i/PRP/i have/VBP/have these/DT/these candidate/JJ/candidate points/NNS/points on/IN/on the/DT/the left/NNP/left. and/CC/and where/WRB/where can/MD/can they/PRP/they live/VBP/live /,/, so/RB/so let/VB/let us/PRP/us look/VB/look at/IN/at this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my dividing/NN/dividing line/NN/line /,/, dividing/VBG/dividing vertical/JJ/vertical line/NNP/line. things/NNS/things are/VBP/are the/DT/the left/NN/left /,/, where/WRB/where can/MD/can they/PRP/they live/VBP/live /,/, well/RB/well they/PRP/they can/MD/can not/RB/not /,/, they/PRP/they all/VBP/all have/VBP/have to/TO/to be/VB/be /,/, we/PRP/we draw/VBP/draw a/DT/a straight/JJ/straight lines/NNS/lines here/NNP/here. they/PRP/they have/VBP/have to/TO/to be/VB/be within/IN/within a/DT/a distance/NN/distance delta/NN/delta of/IN/of this/DT/this middle/NN/middle point/NN/point /,/, similarly/RB/similarly on/IN/on this/DT/this side/NNP/side. if/IN/if a/DT/a point/NN/point lies/NNS/lies here/RB/here /,/, then/RB/then the/DT/the distance/NN/distance between/IN/between this/DT/this point/NN/point and/CC/and any/DT/any point/NN/point on/IN/on the/DT/the right/NN/right is/VBZ/is greater/JJR/greater than/IN/than delta/NNP/delta. if/IN/if it/PRP/it lies/VBZ/lies on/IN/on this/DT/this side/NN/side /,/, this/DT/this point/NN/point and/CC/and anything/NN/anything on/IN/on the/DT/the other/JJ/other side/NN/side /,/, this/DT/this distance/NN/distance is/VBZ/is greater/JJR/greater than/IN/than delta/NNP/delta. so/RB/so /,/, i/PRP/i can/MD/can forget/VB/forget about/IN/about these/DT/these points/NNP/points. so/RB/so /,/, the/DT/the only/JJ/only points/NNS/points of/IN/of interest/NN/interest to/TO/to us/PRP/us are/VBP/are points/NNS/points in/IN/in this/DT/this small/JJ/small /,/, on/IN/on these/DT/these small/JJ/small bands/NNS/bands on/IN/on either/DT/either side/NN/side of/IN/of the/DT/the middle/NN/middle line/NNP/line. each/DT/each of/IN/of these/DT/these bands/NNS/bands as/IN/as bridge/NN/bridge delta/NN/delta /,/, these/DT/these are/VBP/are the/DT/the points/NNS/points of/IN/of interest/NNP/interest. that/IN/that is/VBZ/is the/DT/the first/JJ/first observation/NN/observation /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 23/CD/23 /:/: 19/CD/19 /CD/) /CD/) so/RB/so far/RB/far it/PRP/it is/VBZ/is all/DT/all fairly/RB/fairly simple/NNP/simple. now/RB/now /,/, just/RB/just this/DT/this is/VBZ/is not/RB/not enough/NNP/enough. the/DT/the same/JJ/same problem/NN/problem could/MD/could apply/VB/apply in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, all/DT/all n/NN/n by/IN/by 2/CD/2 points/NNS/points on/IN/on the/DT/the left/NN/left could/MD/could lie/VB/lie in/IN/in this/DT/this band/NNP/band. and/CC/and all/DT/all n/NN/n by/IN/by 2/CD/2 points/NNS/points on/IN/on the/DT/the right/NN/right could/MD/could lie/VB/lie /,/, you/PRP/you know/VBP/know the/DT/the other/JJ/other band/NNP/band. in/IN/in which/WDT/which case/NN/case we/PRP/we are/VBP/are again/RB/again back/RB/back to/TO/to computing/NN/computing n/NN/n square/NN/square /,/, roughly/RB/roughly n/JJ/n square/NN/square distance/NN/distance is/VBZ/is the/DT/the other/JJ/other smart/NN/smart thing/NNP/thing. the/DT/the intuition/NN/intuition is/VBZ/is this/DT/this /,/, so/RB/so let/VB/let us/PRP/us magnify/VB/magnify this/DT/this small/JJ/small band/NN/band around/IN/around the/DT/the centre/NNP/centre. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 00/CD/00 /CD/) so/RB/so /,/, here/RB/here my/PRP$/my /,/, this/DT/this is/VBZ/is the/DT/the centre/NN/centre line/NN/line and/CC/and here/RB/here are/VBP/are the/DT/the two/CD/two bands/NNP/bands. this/DT/this is/VBZ/is delta/NN/delta and/CC/and this/DT/this is/VBZ/is also/RB/also delta/NNP/delta. so/RB/so /,/, when/WRB/when i/PRP/i look/VBP/look to/TO/to the/DT/the left/NN/left /,/, if/IN/if i/PRP/i take/VBP/take any/DT/any point/NN/point here/RB/here /,/, then/RB/then i/PRP/i know/VBP/know that/IN/that /,/, if/IN/if i/PRP/i draw/VBP/draw a/DT/a circle/NN/circle of/IN/of radius/NN/radius delta/NN/delta /,/, around/IN/around this/NNP/this. there/EX/there is/VBZ/is no/DT/no point/NN/point inside/NN/inside this/DT/this circle/NNP/circle. the/DT/the reason/NN/reason is/VBZ/is this/DT/this closest/NN/closest pair/NN/pair of/IN/of points/NNS/points on/IN/on the/DT/the left/NN/left /,/, this/DT/this is/VBZ/is the/DT/the left/VBN/left /,/, this/DT/this is/VBZ/is delta/NNP/delta. so/RB/so /,/, there/EX/there is/VBZ/is nothing/NN/nothing closer/NN/closer than/IN/than delta/NN/delta to/TO/to this/NNP/this. there/RB/there could/MD/could be/VB/be something/NN/something at/IN/at distance/NN/distance delta/NN/delta /,/, that/IN/that is/VBZ/is fine/NNP/fine. so/RB/so /,/, there/EX/there is/VBZ/is nothing/NN/nothing closer/NN/closer than/IN/than delta/NNP/delta. these/DT/these points/NNS/points are/VBP/are actually/RB/actually spread/VBN/spread /,/, they/PRP/they can/MD/can not/RB/not be/VB/be a/DT/a large/JJ/large number/NN/number of/IN/of points/NNS/points clustered/VBN/clustered together/NNP/together. they/PRP/they are/VBP/are all/RB/all spread/VBN/spread out/RP/out nicely/RB/nicely /,/, distance/NN/distance delta/NNP/delta. similarly/RB/similarly /,/, the/DT/the points/NNS/points on/IN/on the/DT/the right/NNP/right. we/PRP/we would/MD/would like/VB/like to/TO/to use/VB/use this/DT/this fact/NN/fact /,/, this/DT/this is/VBZ/is point/NN/point number/NN/number 1/CD/1. that/WDT/that these/DT/these points/NNS/points on/IN/on both/DT/both left/NN/left and/CC/and right/RB/right are/VBP/are sort/RB/sort of/IN/of spread/NN/spread apart/NNP/apart. so/RB/so /,/, there/EX/there can/MD/can not/RB/not be/VB/be too/RB/too many/JJ/many points/NNS/points close/VBP/close by/IN/by /,/, somehow/WRB/somehow we/PRP/we need/VBP/need to/TO/to use/VB/use this/NNP/this. what/WP/what else/RB/else can/MD/can be/VB/be said/VBN/said /,/, well/RB/well let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this point/NN/point on/IN/on the/DT/the left/NNP/left. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the point/NN/point on/IN/on the/DT/the left/NN/left /,/, what/WP/what about/IN/about points/NNS/points on/IN/on the/DT/the right/NNP/right. where/WRB/where can/MD/can they/PRP/they live/VBP/live /,/, let/VB/let us/PRP/us draw/VB/draw this/DT/this line/NNP/line. well/RB/well /,/, i/PRP/i know/VBP/know that/IN/that any/DT/any candidates/NNS/candidates for/IN/for this/DT/this point/NN/point will/MD/will lie/VB/lie over/IN/over this/DT/this does/VBZ/does not/RB/not look/VB/look like/IN/like a/DT/a square/JJ/square /,/, but/CC/but think/VBP/think of/IN/of this/DT/this as/IN/as square/NNP/square. so/RB/so /,/, any/DT/any candidates/NNS/candidates for/IN/for p/NN/p /,/, must/MD/must lie/VB/lie within/IN/within either/DT/either this/DT/this square/NN/square or/CC/or this/DT/this square/NNP/square. please/NN/please strain/NN/strain your/PRP$/your imagination/NN/imagination and/CC/and imagine/NN/imagine this/DT/this to/TO/to be/VB/be a/DT/a square/NNP/square. then/RB/then /,/, any/DT/any candidate/NN/candidate for/IN/for this/DT/this point/NN/point must/MD/must lie/VB/lie /,/, either/DT/either in/IN/in this/DT/this square/NN/square or/CC/or that/IN/that square/NNP/square. they/PRP/they can/MD/can not/RB/not be/VB/be /,/, if/IN/if it/PRP/it is/VBZ/is outside/IN/outside here/RB/here /,/, then/RB/then the/DT/the distance/NN/distance is/VBZ/is greater/JJR/greater than/IN/than delta/NNP/delta. in/IN/in fact/NN/fact /,/, distance/NN/distance to/TO/to this/DT/this line/NN/line is/VBZ/is greater/JJR/greater than/IN/than delta/NNP/delta. so/RB/so /,/, this/DT/this point/NN/point is/VBZ/is also/RB/also greater/JJR/greater than/IN/than delta/NNP/delta. so/RB/so /,/, everything/NN/everything has/VBZ/has to/TO/to lie/VB/lie here/RB/here /,/, and/CC/and that/IN/that is/VBZ/is the/DT/the first/NNP/first. the/DT/the second/JJ/second thing/NN/thing we/PRP/we know/VBP/know /,/, that/IN/that if/IN/if i/PRP/i take/VBP/take any/DT/any point/NN/point here/RB/here /,/, then/RB/then this/DT/this precludes/VBZ/precludes many/JJ/many points/NNS/points from/IN/from appearing/VBG/appearing in/IN/in region/NN/region of/IN/of size/NN/size delta/NNP/delta. if/IN/if i/PRP/i have/VBP/have a/DT/a point/NN/point /,/, i/PRP/i have/VBP/have a/DT/a point/NN/point in/IN/in there/NNP/there. then/RB/then /,/, in/IN/in a/DT/a circle/NN/circle of/IN/of radius/NN/radius delta/NN/delta no/DT/no other/JJ/other point/NN/point appears/NNP/appears. so/RB/so /,/, there/EX/there can/MD/can not/RB/not be/VB/be /,/, i/PRP/i mean/VBP/mean intuitively/RB/intuitively one/CD/one feels/NNS/feels that/WDT/that /,/, there/EX/there can/MD/can not/RB/not be/VB/be too/RB/too many/JJ/many points/NNS/points inside/VBP/inside each/DT/each square/NNP/square. this/DT/this is/VBZ/is delta/NN/delta by/IN/by delta/NN/delta square/NN/square /,/, if/IN/if there/EX/there are/VBP/are too/RB/too many/JJ/many points/NNS/points inside/VBP/inside this/NNP/this. there/RB/there are/VBP/are bound/VBN/bound to/TO/to be/VB/be two/CD/two points/NNS/points which/WDT/which are/VBP/are close/RB/close by/NNP/by. i/PRP/i can/MD/can not/RB/not have/VB/have every/DT/every point/NN/point as/IN/as far/RB/far away/RB/away as/IN/as delta/NNP/delta. this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use /,/, but/CC/but how/WRB/how do/VBP/do we/PRP/we use/VB/use this/NNP/this. the/DT/the intuitively/RB/intuitively you/PRP/you feel/VBP/feel that/IN/that /,/, there/EX/there can/MD/can not/RB/not be/VB/be too/RB/too many/JJ/many points/NNS/points inside/VBP/inside the/DT/the square/NNP/square. the/DT/the reason/NN/reason is/VBZ/is essentially/RB/essentially this/DT/this /,/, that/IN/that if/IN/if i/PRP/i have/VBP/have a/DT/a point/NN/point /,/, there/EX/there is/VBZ/is nothing/NN/nothing within/IN/within a/DT/a distance/NN/distance delta/NN/delta /,/, good/NNP/good. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we put/VB/put this/DT/this intuition/NN/intuition into/IN/into practice/NNP/practice. well/RB/well /,/, we/PRP/we use/VBP/use a/DT/a very/RB/very simple/JJ/simple principle/NN/principle /,/, that/IN/that you/PRP/you have/VBP/have heard/VBN/heard many/JJ/many time/NNP/time. it/PRP/it seems/VBZ/seems very/RB/very simple/JJ/simple /,/, but/CC/but putting/VBG/putting it/PRP/it to/TO/to practice/NN/practice often/RB/often requires/VBZ/requires some/DT/some thought/NNP/thought. the/DT/the principle/NN/principle is/VBZ/is called/VBN/called pigeon/NN/pigeon hole/NN/hole principle/NN/principle /,/, well/RB/well what/WP/what does/VBZ/does it/PRP/it say/NNP/say. it/PRP/it says/VBZ/says that/IN/that /,/, if/IN/if there/EX/there are/VBP/are n/NN/n plus/CC/plus 1/CD/1 pigeons/NNS/pigeons and/CC/and there/EX/there are/VBP/are n/NN/n holes/NNP/holes. and/CC/and you/PRP/you stuff/NN/stuff these/DT/these pigeons/NNS/pigeons into/IN/into these/DT/these holes/NNS/holes /,/, then/RB/then at/IN/at least/JJS/least one/CD/one hole/NN/hole /,/, must/MD/must have/VB/have two/CD/two pigeons/NNP/pigeons. there/RB/there are/VBP/are more/RBR/more pigeons/NNS/pigeons and/CC/and holes/NNP/holes. so/RB/so /,/, if/IN/if you/PRP/you stuff/VBP/stuff these/DT/these pigeons/NNS/pigeons into/IN/into holes/NNS/holes ;/:/; and/CC/and at/IN/at least/JJS/least one/CD/one hole/NN/hole must/MD/must contain/VB/contain two/CD/two pigeons/NNP/pigeons. very/RB/very simple/JJ/simple principle/NN/principle /,/, we/PRP/we all/DT/all immediately/RB/immediately understand/VBP/understand the/DT/the statement/NN/statement /,/, but/CC/but often/RB/often very/RB/very difficult/JJ/difficult to/TO/to figure/VB/figure out/RP/out where/WRB/where to/TO/to apply/VB/apply and/CC/and how/WRB/how to/TO/to apply/NNP/apply. really/RB/really nice/JJ/nice problem/NN/problem /,/, solutions/NNS/solutions based/VBN/based on/IN/on this/DT/this principle/NN/principle /,/, which/WDT/which smart/NN/smart people/NNS/people have/VBP/have figured/VBN/figured out/NNP/out. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to this/DT/this square/NN/square problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 37/CD/37 /CD/) so/RB/so /,/, i/PRP/i have/VBP/have this/DT/this square/NN/square of/IN/of size/NN/size delta/NNP/delta. and/CC/and i/PRP/i know/VBP/know that/IN/that /,/, if/IN/if i/PRP/i have/VBP/have any/DT/any point/NN/point in/IN/in this/DT/this square/NNP/square. then/RB/then /,/, no/DT/no other/JJ/other point/NN/point is/VBZ/is within/IN/within a/DT/a circle/NN/circle of/IN/of radius/NN/radius ;/:/; which/WDT/which means/VBZ/means given/VBN/given any/DT/any two/CD/two points/NNS/points /,/, the/DT/the distance/NN/distance is/VBZ/is at/IN/at least/JJS/least delta/NNS/delta between/IN/between any/DT/any pair/NNP/pair. so/RB/so /,/, the/DT/the distance/NN/distance between/IN/between any/DT/any pair/NN/pair of/IN/of points/NNS/points in/IN/in this/DT/this square/NN/square /,/, is/VBZ/is at/IN/at least/JJS/least delta/NNP/delta. how/WRB/how many/JJ/many points/NNS/points can/MD/can i/VB/i put/VBN/put in/RP/in inside/NN/inside this/DT/this square/NNP/square. well/RB/well /,/, here/RB/here is/VBZ/is the/DT/the trick/NN/trick /,/, what/WP/what you/PRP/you do/VBP/do is/VBZ/is divide/VB/divide this/DT/this into/IN/into four/CD/four parts/NNP/parts. these/DT/these will/MD/will be/VB/be our/PRP$/our holes/NNS/holes /,/, you/PRP/you have/VBP/have to/TO/to see/VB/see where/WRB/where the/DT/the pigeons/NNS/pigeons are/NNP/are. well/RB/well /,/, what/WDT/what is/VBZ/is the/DT/the maximum/NN/maximum distance/NN/distance inside/NN/inside the/DT/the small/JJ/small square/NNP/square. well/RB/well /,/, this/DT/this small/JJ/small square/NN/square as/IN/as side/NN/side length/NN/length delta/NN/delta by/IN/by 2/CD/2. maximum/NN/maximum distance/NN/distance is/VBZ/is along/IN/along the/DT/the diagonal/JJ/diagonal /,/, which/WDT/which is/VBZ/is square/JJ/square root/NN/root of/IN/of delta/NN/delta square/NN/square by/IN/by 4/CD/4 plus/CC/plus delta/NN/delta square/NN/square by/IN/by 4/CD/4. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the square/NN/square root/NN/root of/IN/of delta/NN/delta square/NN/square by/IN/by 2/CD/2. this/DT/this twice/NN/twice this/DT/this which/WDT/which is/VBZ/is nothing/NN/nothing but/CC/but delta/NN/delta by/IN/by square/JJ/square root/NN/root 2/CD/2 /,/, which/WDT/which is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than delta/NN/delta which/WDT/which is/VBZ/is what/WP/what we/PRP/we want/NNP/want. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take one/CD/one of/IN/of these/DT/these small/JJ/small squares/NNS/squares /,/, then/RB/then the/DT/the maximum/NN/maximum distance/NN/distance is/VBZ/is delta/NN/delta /,/, which/WDT/which means/VBZ/means i/PRP/i can/MD/can not/RB/not have/VB/have two/CD/two points/NNS/points sitting/VBG/sitting inside/NN/inside this/DT/this small/JJ/small square/NNP/square. if/IN/if i/PRP/i take/VBP/take any/DT/any two/CD/two points/NNS/points /,/, the/DT/the distance/NN/distance between/IN/between them/PRP/them is/VBZ/is less/JJR/less than/IN/than delta/NNP/delta. so/RB/so /,/, at/IN/at most/JJS/most one/CD/one point/NN/point can/MD/can sit/VB/sit inside/NN/inside the/DT/the small/JJ/small square/NN/square /,/, which/WDT/which means/VBZ/means in/IN/in the/DT/the big/JJ/big square/NN/square i/PRP/i can/MD/can not/RB/not at/IN/at most/JJS/most four/CD/four points/NNP/points. if/IN/if i/PRP/i say/VBP/say the/DT/the distance/NN/distance between/IN/between any/DT/any pair/NN/pair of/IN/of points/NNS/points is/VBZ/is at/IN/at least/JJS/least delta/NNP/delta. inside/NN/inside this/DT/this big/JJ/big square/NN/square /,/, i/PRP/i can/MD/can have/VB/have at/IN/at most/JJS/most four/CD/four /,/, this/DT/this is/VBZ/is the/DT/the big/JJ/big trick/NN/trick /,/, that/IN/that we/PRP/we will/MD/will use/NNP/use. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the trick/NN/trick we/PRP/we will/MD/will use/VB/use /,/, so/RB/so let/VB/let us/PRP/us get/VB/get back/RB/back to/TO/to the/DT/the original/JJ/original picture/NN/picture here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 58/CD/58 /CD/) so/RB/so /,/, i/PRP/i have/VBP/have p/RP/p and/CC/and how/WRB/how many/JJ/many points/NNS/points on/IN/on the/DT/the right/NN/right /,/, do/VBP/do i/PRP/i have/VB/have to/TO/to really/RB/really compare/NNP/compare. well/RB/well /,/, four/CD/four inside/NN/inside this/DT/this /,/, there/EX/there could/MD/could be/VB/be at/IN/at most/JJS/most 4/CD/4 candidates/NNS/candidates in/IN/in each/DT/each square/NN/square /,/, if/IN/if at/IN/at all/NNP/all. 4/CD/4 or/CC/or less/JJR/less than/IN/than equal/JJ/equal to/TO/to 4/CD/4 /,/, to/TO/to be/VB/be less/NNP/less. it/PRP/it looks/VBZ/looks like/IN/like as/IN/as of/IN/of now/RB/now /,/, for/IN/for each/DT/each point/NN/point i/PRP/i need/VBP/need to/TO/to at/IN/at most/JJS/most look/NN/look at/IN/at 8/CD/8 other/JJ/other points/NNS/points and/CC/and compute/NN/compute this/DT/this much/NNP/much. and/CC/and this/DT/this certainly/RB/certainly looks/VBZ/looks to/TO/to be/VB/be linear/NNP/linear. for/IN/for each/DT/each point/NN/point i/PRP/i need/VBP/need to/TO/to compute/VB/compute at/IN/at max/NN/max /,/, let/VB/let us/PRP/us say/VB/say /,/, 8/CD/8 other/JJ/other distances/NNP/distances. then/RB/then 8/CD/8 /,/, 10/CD/10 distances/NNS/distances is/VBZ/is what/WP/what i/PRP/i need/VBP/need to/TO/to compute/VB/compute and/CC/and my/PRP$/my recurrence/NN/recurrence i/PRP/i will/MD/will have/VB/have 2/CD/2 t/NN/t n/NN/n plus/CC/plus by/IN/by 2/CD/2 plus/CC/plus t/NN/t n/NN/n ;/:/; and/CC/and this/DT/this is/VBZ/is n/VBN/n log/NN/log n/NNP/n. how/WRB/how will/MD/will we/VB/we do/VB/do this/DT/this /,/, we/PRP/we still/RB/still not/RB/not done/NNP/done. i/PRP/i mean/VBP/mean /,/, we/PRP/we have/VBP/have all/PDT/all the/DT/the ideas/NNS/ideas in/IN/in place/NN/place now/RB/now /,/, it/PRP/it is/VBZ/is implementation/NNP/implementation. smaller/NN/smaller implementation/NN/implementation details/NNS/details are/VBP/are we/PRP/we need/VBP/need to/TO/to worry/VB/worry about/NNP/about. for/IN/for instance/NN/instance /,/, for/IN/for each/DT/each point/NN/point on/IN/on the/DT/the left/NN/left /,/, how/WRB/how do/VBP/do you/PRP/you compute/VB/compute these/DT/these 8/CD/8 points/NNS/points /,/, you/PRP/you have/VBP/have to/TO/to do/VB/do this/DT/this fast/NN/fast remember/NNP/remember. you/PRP/you can/MD/can not/RB/not take/VB/take a/DT/a lot/NN/lot of/IN/of time/NN/time to/NNP/to. we/PRP/we look/VBP/look at/IN/at all/DT/all the/DT/the points/NNS/points for/IN/for each/DT/each points/NNS/points /,/, then/RB/then your/PRP$/your sort/NN/sort /,/, because/IN/because that/DT/that is/VBZ/is n/VBN/n square/JJ/square already/NNP/already. but/CC/but /,/, again/RB/again looking/VBG/looking at/IN/at this/DT/this picture/NN/picture /,/, you/PRP/you should/MD/should again/VB/again get/VB/get ideas/NNP/ideas. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to this/DT/this picture/NNP/picture. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the point/NN/point /,/, the/DT/the 8/CD/8 points/NNS/points are/VBP/are somehow/RB/somehow located/VBN/located in/IN/in the/DT/the neighborhood/NN/neighborhood of/IN/of this/DT/this point/NNP/point. they/PRP/they are/VBP/are at/IN/at distance/NN/distance delta/NN/delta from/IN/from here/RB/here delta/NN/delta from/IN/from here/RB/here delta/NNP/delta. these/DT/these are/VBP/are the/DT/the points/NNS/points that/IN/that i/PRP/i need/VBP/need to/TO/to and/CC/and this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 32/CD/32 /:/: 44/CD/44 /CD/) /CD/) i/PRP/i need/VBP/need to/TO/to pick/VB/pick up/NNP/up. so/RB/so /,/, let/VB/let me/PRP/me put/VB/put up/RP/up another/DT/another picture/NN/picture and/CC/and after/IN/after this/DT/this picture/NN/picture hopefully/RB/hopefully the/DT/the algorithm/NN/algorithm will/MD/will be/VB/be clear/NNP/clear. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 54/CD/54 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my centre/NN/centre line/NN/line and/CC/and here/RB/here are/VBP/are these/DT/these various/JJ/various points/NNS/points the/DT/the left/NN/left in/IN/in the/DT/the right/NNP/right. here/RB/here are/VBP/are the/DT/the various/JJ/various points/NNP/points. if/IN/if i/PRP/i take/VBP/take any/DT/any point/NN/point on/IN/on this/DT/this side/NN/side /,/, if/IN/if i/PRP/i consider/VBP/consider this/NNP/this. then/RB/then /,/, i/PRP/i only/RB/only need/VBP/need to/TO/to look/VB/look at/IN/at a/DT/a window/NN/window size/NN/size to/TO/to delta/VB/delta /,/, delta/NN/delta on/IN/on this/DT/this side/NN/side /,/, delta/NN/delta on/IN/on that/DT/that side/NNP/side. this/DT/this is/VBZ/is what/WP/what i/PRP/i need/VBP/need to/TO/to do/VB/do ?/./? as/IN/as i/PRP/i go/VBP/go up/RP/up /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this point/NN/point this/DT/this window/NN/window shifts/VBZ/shifts up/RP/up /,/, it/PRP/it somehow/VBP/somehow if/IN/if i/PRP/i can/MD/can scan/VB/scan them/PRP/them upwards/NNS/upwards /,/, in/IN/in this/DT/this order/NN/order /,/, scan/JJ/scan from/IN/from bottom/NN/bottom top/NNP/top. if/IN/if i/PRP/i can/MD/can scan/VB/scan this/DT/this points/NNS/points from/IN/from bottom/NN/bottom to/TO/to top/VB/top /,/, somehow/WRB/somehow this/DT/this window/NN/window also/RB/also keeps/VBZ/keeps you/PRP/you think/VBP/think from/IN/from bottom/NN/bottom to/TO/to top/NNP/top. and/CC/and it/PRP/it again/RB/again looks/VBZ/looks like/IN/like i/PRP/i can/MD/can do/VB/do this/DT/this efficiently/RB/efficiently /,/, all/DT/all we/PRP/we need/VBP/need is/VBZ/is these/DT/these things/NNS/things altered/VBD/altered by/IN/by y/NN/y coordinates/NNP/coordinates. if/IN/if i/PRP/i have/VBP/have these/DT/these points/NNS/points altered/VBD/altered by/IN/by y/NN/y coordinates/NNS/coordinates /,/, then/RB/then i/PRP/i can/MD/can scan/VB/scan the/DT/the left/NN/left side/NN/side from/IN/from bottom/NN/bottom to/TO/to top/VB/top /,/, the/DT/the right/NN/right side/NN/side from/IN/from bottom/NN/bottom to/TO/to top/NNP/top. and/CC/and i/PRP/i can/MD/can maintain/VB/maintain this/DT/this window/NN/window easily/RB/easily /,/, this/DT/this is/VBZ/is the/DT/the last/JJ/last trick/NN/trick in/IN/in the/DT/the algorithm/NNP/algorithm. there/RB/there is/VBZ/is a/DT/a detailed/JJ/detailed left/NNP/left. so/RB/so /,/, if/IN/if i/PRP/i have/VBP/have these/DT/these points/NNS/points sorted/VBD/sorted by/IN/by the/DT/the y/NN/y coordinates/NNP/coordinates. then/RB/then this/DT/this is/VBZ/is what/WP/what i/PRP/i do/VBP/do ?/./? i/PRP/i start/VBP/start looking/VBG/looking at/IN/at the/DT/the points/NNS/points on/IN/on the/DT/the left/NN/left in/IN/in the/DT/the narrow/NN/narrow band/NNP/band. i/PRP/i look/VBP/look at/IN/at these/DT/these points/NNS/points /,/, look/VBP/look at/IN/at them/PRP/them in/IN/in increasing/VBG/increasing y/NN/y coordinates/NNP/coordinates. and/CC/and for/IN/for each/DT/each point/NN/point i/PRP/i have/VBP/have i/PRP/i also/RB/also maintain/VB/maintain this/DT/this band/NN/band of/IN/of this/DT/this sort/NN/sort of/IN/of window/NN/window on/IN/on the/DT/the right/NNP/right. so/RB/so /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at a/DT/a point/NN/point /,/, i/PRP/i have/VBP/have a/DT/a corresponding/VBG/corresponding window/NN/window on/IN/on the/DT/the right/NNP/right. when/WRB/when i/PRP/i move/VBP/move to/TO/to the/DT/the next/JJ/next point/NN/point i/PRP/i correspondingly/RB/correspondingly move/VB/move them/PRP/them window/VB/window up/NNP/up. this/DT/this is/VBZ/is all/DT/all i/PRP/i do/VBP/do /,/, so/RB/so somehow/RB/somehow i/PRP/i need/VBP/need to/TO/to move/VB/move this/DT/this window/NN/window up/NNP/up. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that /,/, it/PRP/it is/VBZ/is not/RB/not it/PRP/it should/MD/should not/RB/not be/VB/be too/RB/too difficult/JJ/difficult /,/, to/TO/to move/VB/move the/DT/the window/NN/window up/NNP/up. and/CC/and the/DT/the time/NN/time that/IN/that it/PRP/it takes/VBZ/takes is/VBZ/is linear/JJ/linear with/IN/with and/CC/and the/DT/the very/JJ/very similar/JJ/similar to/TO/to the/DT/the merge/NN/merge sort/NN/sort idea/NNP/idea. the/DT/the window/NN/window moves/VBZ/moves up/RP/up each/DT/each time/NNP/time. on/IN/on the/DT/the left/NN/left each/DT/each time/NN/time /,/, you/PRP/you know/VBP/know a/DT/a pointer/NN/pointer moves/VBZ/moves up/RP/up /,/, on/IN/on the/DT/the right/NN/right side/NN/side the/DT/the window/NN/window could/MD/could move/VB/move up/RP/up /,/, but/CC/but it/PRP/it can/MD/can move/VB/move up/RP/up only/RB/only n/JJ/n time/NNP/time. the/DT/the window/NN/window can/MD/can move/VB/move up/RP/up only/RB/only n/JJ/n time/NN/time /,/, because/IN/because there/EX/there are/VBP/are only/RB/only n/JJ/n points/NNP/points. so/RB/so /,/, at/IN/at least/JJS/least the/DT/the movement/NN/movement /,/, the/DT/the number/NN/number of/IN/of times/NNS/times the/DT/the pointer/NN/pointer here/RB/here moves/VBZ/moves or/CC/or pointer/JJR/pointer here/RB/here moves/VBZ/moves /,/, that/IN/that is/VBZ/is linear/NNP/linear. and/CC/and once/RB/once you/PRP/you have/VB/have fixed/VBN/fixed a/DT/a window/NN/window and/CC/and a/DT/a point/NN/point on/IN/on the/DT/the left/NN/left /,/, i/PRP/i need/VBP/need to/TO/to compute/VB/compute distances/NNS/distances in/IN/in this/DT/this window/NNP/window. and/CC/and i/PRP/i know/VBP/know /,/, because/IN/because of/IN/of the/DT/the geometry/NN/geometry that/IN/that there/EX/there are/VBP/are at/IN/at most/JJS/most eight/CD/eight points/NNS/points in/IN/in this/DT/this window/NN/window /,/, four/CD/four on/IN/on top/JJ/top four/CD/four on/IN/on bottom/NNP/bottom. there/EX/there are/VBP/are at/IN/at most/JJS/most eight/CD/eight points/NNS/points i/PRP/i need/VBP/need to/TO/to compute/VB/compute these/DT/these eight/CD/eight distances/NNS/distances and/CC/and choose/VB/choose the/DT/the minimum/JJ/minimum that/IN/that is/VBZ/is it/NNP/it. so/RB/so /,/, let/VB/let us/PRP/us put/VB/put all/PDT/all this/DT/this together/NN/together and/CC/and see/VB/see what/WP/what we/PRP/we get/VBP/get ?/./? that/IN/that is/VBZ/is before/IN/before we/PRP/we do/VBP/do that/IN/that /,/, i/PRP/i just/RB/just want/VBP/want to/TO/to point/NN/point out/RP/out one/CD/one thing/NNP/thing. so/RB/so /,/, we/PRP/we need/VBP/need the/DT/the points/NNS/points sorted/VBD/sorted on/IN/on to/TO/to five/CD/five coordinate/NNP/coordinate. now/RB/now /,/, if/IN/if we/PRP/we do/VBP/do it/PRP/it on/IN/on the/DT/the fly/NN/fly /,/, once/RB/once we/PRP/we partitioned/VBD/partitioned now/RB/now if/IN/if we/PRP/we look/VBP/look at/IN/at points/NNS/points in/IN/in the/DT/the each/DT/each band/NNP/band. and/CC/and now/RB/now we/PRP/we sort/VBP/sort these/DT/these points/NNS/points along/IN/along the/DT/the y/NN/y coordinate/NN/coordinate you/PRP/you take/VBP/take n/RP/n log/NN/log n/NN/n time/NN/time sorting/VBG/sorting takes/NNS/takes n/NN/n logging/VBG/logging time/NNP/time. and/CC/and then/RB/then /,/, the/DT/the recurrence/NN/recurrence looks/VBZ/looks like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 50/CD/50 /CD/) your/PRP$/your recurrence/NN/recurrence would/MD/would look/VB/look like/IN/like t/NN/t n/NN/n equals/NNS/equals t/VBP/t n/NN/n by/IN/by 2/CD/2. well/RB/well /,/, 2/CD/2 t/NN/t n/NN/n by/IN/by 2/CD/2 plus/CC/plus n/NN/n log/NN/log n/NN/n /,/, because/IN/because this/DT/this sorting/NN/sorting will/MD/will dominate/NNP/dominate. once/RB/once /,/, we/PRP/we sort/VBP/sort we/PRP/we can/MD/can go/VB/go over/IN/over them/PRP/them in/IN/in linear/JJ/linear time/NNP/time. but/CC/but /,/, this/DT/this sorting/NN/sorting will/MD/will dominate/VB/dominate and/CC/and take/VB/take n/NN/n log/NN/log n/NN/n time/NNP/time. this/DT/this the/DT/the solution/NN/solution to/TO/to this/DT/this recurrence/NN/recurrence is/VBZ/is still/RB/still not/RB/not n/VB/n long/RB/long n/VB/n /,/, the/DT/the solution/NN/solution you/PRP/you can/MD/can check/VB/check that/IN/that the/DT/the time/NN/time to/TO/to find/VB/find what/WP/what the/DT/the solution/NN/solution recurrence/NN/recurrence is/VBZ/is n/VBN/n log/NN/log n/NN/n square/NN/square and/CC/and it/PRP/it is/VBZ/is not/RB/not n/VBN/n log/NN/log /,/, we/PRP/we would/MD/would like/VB/like to/TO/to be/VB/be positive/NNP/positive. in/IN/in fact/NN/fact /,/, you/PRP/you would/MD/would like/VB/like to/TO/to get/VB/get rid/JJ/rid of/IN/of this/DT/this n/NN/n log/NN/log n/NN/n and/CC/and replace/NN/replace this/DT/this with/IN/with order/NN/order n/NNP/n. so/RB/so /,/, that/IN/that overall/JJ/overall we/PRP/we get/VBP/get n/VBN/n log/NN/log n/NNP/n. and/CC/and again/RB/again the/DT/the trick/NN/trick is/VBZ/is we/PRP/we tree/VBP/tree sort/NN/sort the/DT/the points/NNS/points in/IN/in the/DT/the x/NN/x and/CC/and y/NN/y coordinates/NNP/coordinates. we/PRP/we do/VBP/do not/RB/not do/VB/do it/PRP/it at/IN/at each/DT/each recursive/JJ/recursive call/NNP/call. so/RB/so /,/, all/DT/all i/PRP/i want/VBP/want is/VBZ/is the/DT/the point/NN/point sorted/VBD/sorted on/IN/on y/NN/y coordinate/NNP/coordinate. suppose/NN/suppose /,/, i/PRP/i can/MD/can do/VB/do it/PRP/it once/RB/once in/IN/in for/IN/for all/PDT/all initially/NNP/initially. and/CC/and use/VB/use this/DT/this effectively/RB/effectively and/CC/and that/IN/that is/VBZ/is what/WP/what i/PRP/i want/NNP/want. to/TO/to this/DT/this n/NN/n log/NN/log n/NN/n for/IN/for sorting/NN/sorting along/IN/along both/DT/both x/NN/x and/CC/and y/NN/y coordinates/NNS/coordinates i/PRP/i do/VBP/do right/RB/right in/IN/in the/DT/the beginning/NN/beginning /,/, that/IN/that is/VBZ/is the/DT/the one/CD/one time/NN/time cost/NN/cost i/PRP/i do/VBP/do not/RB/not repeat/VB/repeat this/DT/this in/IN/in each/DT/each literature/NN/literature /,/, it/PRP/it is/VBZ/is a/DT/a onetime/NN/onetime cost/NN/cost i/PRP/i sort/VBP/sort them/PRP/them i/PRP/i am/VBP/am done/NN/done with/NNP/with. and/CC/and now/RB/now i/PRP/i have/VBP/have this/DT/this sorted/VBN/sorted order/NN/order each/DT/each time/NN/time i/PRP/i make/VBP/make a/DT/a recursive/JJ/recursive call/NNP/call. so/RB/so /,/, each/DT/each time/NN/time i/PRP/i make/VBP/make a/DT/a recursive/JJ/recursive call/NN/call i/PRP/i have/VBP/have this/DT/this sorted/VBN/sorted order/NN/order in/IN/in place/NNP/place. in/IN/in which/WDT/which case/NN/case /,/, perhaps/RB/perhaps i/PRP/i can/MD/can put/VB/put order/NN/order n/NN/n instead/RB/instead of/IN/of n/NN/n log/NN/log n/NN/n and/CC/and you/PRP/you get/VBP/get order/NN/order n/NN/n log/NN/log n/NN/n in/IN/in total/JJ/total time/NNP/time. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this algorithm/NN/algorithm /,/, now/RB/now we/PRP/we have/VBP/have i/PRP/i have/VBP/have told/VBN/told you/PRP/you all/DT/all the/DT/the pieces/NNS/pieces /,/, we/PRP/we just/RB/just have/VBP/have to/TO/to put/VB/put them/PRP/them together/RP/together and/CC/and analyze/VB/analyze the/DT/the algorithm/NN/algorithm and/CC/and see/VB/see how/WRB/how much/RB/much time/NN/time it/PRP/it takes/NNP/takes. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 52/CD/52 /CD/) we/PRP/we first/RB/first sort/NN/sort to/TO/to /,/, so/RB/so input/VBD/input a/DT/a set/NN/set of/IN/of points/NNP/points. first/JJ/first step/NN/step 1/CD/1 /,/, sort/NN/sort them/PRP/them on/IN/on both/DT/both x/NN/x and/CC/and y/NN/y coordinates/NNP/coordinates. at/IN/at this/DT/this point/NN/point i/PRP/i would/MD/would like/VB/like to/TO/to make/VB/make an/DT/an assumption/NN/assumption /,/, which/WDT/which is/VBZ/is that/IN/that each/DT/each point/NN/point has/VBZ/has distinct/JJ/distinct every/DT/every point/NN/point has/VBZ/has a/DT/a distinct/JJ/distinct x/NN/x coordinate/NNP/coordinate. and/CC/and every/DT/every point/NN/point has/VBZ/has a/DT/a distinct/JJ/distinct y/NN/y coordinate/NN/coordinate /,/, which/WDT/which means/VBZ/means if/IN/if i/PRP/i take/VBP/take any/DT/any vertical/JJ/vertical line/NN/line at/IN/at most/JJS/most one/CD/one point/NN/point lies/NNS/lies on/IN/on it/NNP/it. if/IN/if you/PRP/you take/VBP/take any/DT/any horizontal/JJ/horizontal line/NN/line at/IN/at most/JJS/most one/CD/one point/NN/point lie/NN/lie on/IN/on that/NNP/that. this/DT/this is/VBZ/is not/RB/not really/RB/really a/DT/a big/JJ/big assumption/NNP/assumption. it/PRP/it will/MD/will not/RB/not it/PRP/it affect/VBP/affect us/PRP/us for/IN/for instance/NN/instance what/WP/what i/PRP/i could/MD/could do/VB/do is/VBZ/is take/VB/take the/DT/the initial/JJ/initial set/NN/set of/IN/of points/NNP/points. now/RB/now /,/, pert/NN/pert up/RB/up each/DT/each points/NNS/points slightly/RB/slightly /,/, add/JJ/add a/DT/a small/JJ/small epsilon/NN/epsilon to/TO/to each/DT/each point/NN/point it/PRP/it sort/NN/sort of/IN/of move/NN/move them/PRP/them around/IN/around a/DT/a little/RB/little bit/NNP/bit. so/RB/so /,/, that/IN/that the/DT/the minimum/JJ/minimum distance/NN/distance does/VBZ/does not/RB/not change/VB/change /,/, these/DT/these perturbations/NNS/perturbations are/VBP/are very/RB/very /,/, very/RB/very small/JJ/small ;/:/; these/DT/these perturbations/NNS/perturbations are/VBP/are very/RB/very small/NNP/small. the/DT/the minimum/JJ/minimum distance/NN/distance to/TO/to change/VB/change was/VBD/was a/DT/a points/NNS/points do/VBP/do not/RB/not change/NNP/change. the/DT/the points/NNS/points participate/VBP/participate in/IN/in the/DT/the minimum/JJ/minimum distance/NN/distance will/MD/will that/IN/that does/VBZ/does not/RB/not change/NNP/change. while/IN/while this/DT/this perturbation/NN/perturbation /,/, if/IN/if i/PRP/i make/VBP/make sure/JJ/sure that/IN/that if/IN/if i/PRP/i take/VBP/take any/DT/any vertical/JJ/vertical line/NN/line two/CD/two points/NNS/points do/VBP/do not/RB/not lie/VB/lie on/IN/on this/DT/this vertical/JJ/vertical line/NNP/line. actually/RB/actually the/DT/the algorithm/NN/algorithm i/PRP/i give/VBP/give right/RB/right now/RB/now /,/, will/MD/will assume/VB/assume that/IN/that you/PRP/you know/VBP/know no/DT/no two/CD/two points/NNS/points have/VBP/have the/DT/the same/JJ/same x/NN/x coordinate/NN/coordinate or/CC/or y/NN/y coordinate/NNP/coordinate. you/PRP/you can/MD/can /,/, then/RB/then try/NN/try and/CC/and modify/NN/modify this/DT/this algorithm/NN/algorithm to/TO/to work/VB/work even/RB/even in/IN/in the/DT/the case/NNP/case. there/RB/there are/VBP/are points/NNS/points on/IN/on with/IN/with the/DT/the same/JJ/same /NN/( /:/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 36/CD/36 /CD/) /CD/) /./. so/RB/so /,/, i/PRP/i sort/VBP/sort the/DT/the points/NNS/points on/IN/on both/DT/both x/NN/x and/CC/and y/NN/y co-ordinates/NNP/co-ordinates. so/RB/so /,/, i/PRP/i have/VBP/have two/CD/two arrays/NNS/arrays the/DT/the first/JJ/first array/NN/array where/WRB/where points/NNS/points are/VBP/are sorted/VBN/sorted on/IN/on x/NN/x coordinates/NNP/coordinates. second/JJ/second where/WRB/where points/NNS/points are/VBP/are sorted/VBN/sorted on/IN/on y/NN/y coordinates/NNP/coordinates. this/DT/this is/VBZ/is done/VBN/done right/RB/right at/IN/at the/DT/the beginning/NN/beginning i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to do/VB/do this/DT/this recursively/NNP/recursively. now/RB/now /,/, the/DT/the actual/JJ/actual procedure/NN/procedure starts/NNP/starts. so/RB/so /,/, the/DT/the input/NN/input to/TO/to this/DT/this procedure/NN/procedure /,/, the/DT/the input/NN/input is/VBZ/is points/NNS/points sorted/VBN/sorted on/IN/on x/NN/x and/CC/and y/NN/y co-ordinates/NNP/co-ordinates. points/NNS/points sorted/VBD/sorted on/IN/on x/NN/x coordinates/NNS/coordinates /,/, same/JJ/same points/NNS/points sorted/VBN/sorted on/IN/on y/NN/y coordinates/NNP/coordinates. so/RB/so /,/, i/PRP/i have/VBP/have two/CD/two sorted/VBN/sorted arrays/NNP/arrays. this/DT/this is/VBZ/is the/DT/the input/NN/input /,/, what/WP/what i/PRP/i do/VBP/do the/DT/the first/JJ/first step/NN/step /,/, let/VB/let me/PRP/me call/MD/call this/DT/this step/VB/step 0/CD/0. this/DT/this is/VBZ/is the/DT/the initialization/NN/initialization phase/NNP/phase. step/NN/step 1/CD/1 here/RB/here is/VBZ/is divide/VBN/divide /,/, step/VB/step 2/CD/2 recurse/NN/recurse on/IN/on both/DT/both /,/, divide/VBP/divide into/IN/into halves/NNP/halves. and/CC/and step/VB/step 3/CD/3 put/VBN/put them/PRP/them back/NNP/back. look/VBP/look at/IN/at these/DT/these two/CD/two solutions/NNS/solutions and/CC/and now/RB/now look/VBP/look at/IN/at these/DT/these points/NNS/points and/CC/and find/VBP/find the/DT/the minimum/JJ/minimum and/CC/and /:/( /:/( refer/NN/refer time/NN/time /:/: 42/CD/42 /:/: 06/CD/06 /CD/) /CD/) broadly/RB/broadly these/DT/these are/VBP/are the/DT/the three/CD/three steps/NNP/steps. so/RB/so /,/, let/VB/let us/PRP/us expand/VB/expand on/IN/on all/DT/all these/DT/these steps/NNS/steps /,/, here/RB/here is/VBZ/is step/VB/step 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 19/CD/19 /CD/) step/NN/step 1/CD/1 is/VBZ/is the/DT/the divide/NN/divide step/NN/step /,/, this/DT/this is/VBZ/is the/DT/the divide/NN/divide step/NNP/step. well/RB/well /,/, i/PRP/i have/VBP/have the/DT/the point/NN/point sorted/VBD/sorted on/IN/on x/NN/x coordinates/NNP/coordinates. so/RB/so /,/, i/PRP/i can/MD/can find/VB/find the/DT/the left/NN/left most/JJS/most /,/, so/RB/so since/IN/since points/NNS/points are/VBP/are sorted/VBN/sorted on/IN/on x/NN/x coordinates/NNS/coordinates /,/, find/VBP/find the/DT/the left/NN/left most/JJS/most n/NN/n by/IN/by 2/CD/2 elements/NNS/elements and/CC/and right/RB/right most/RBS/most n/JJ/n by/IN/by 2/CD/2 points/NNS/points /,/, these/DT/these are/VBP/are points/NNP/points. this/DT/this sort/NN/sort this/DT/this give/JJ/give you/PRP/you the/DT/the two/CD/two points/NNS/points /,/, the/DT/the two/CD/two sets/NNP/sets. now/RB/now /,/, i/PRP/i need/VBP/need to/TO/to do/VB/do this/DT/this even/RB/even for/IN/for the/DT/the points/NNS/points sorted/VBD/sorted on/IN/on y/NN/y coordinates/NNP/coordinates. so/RB/so /,/, i/PRP/i have/VBP/have two/CD/two arrays/NNS/arrays remember/NNP/remember. so/RB/so /,/, let/VB/let me/PRP/me call/MD/call them/PRP/them /,/, let/VB/let us/PRP/us say/VB/say a/DT/a and/CC/and b/NNP/b. so/RB/so /,/, a/DT/a is/VBZ/is sorted/VBN/sorted on/IN/on x/NN/x coordinate/NN/coordinate /,/, b/NN/b is/VBZ/is sorted/VBN/sorted on/IN/on y/NN/y coordinate/NN/coordinate splitting/VBG/splitting a/DT/a is/VBZ/is easy/JJ/easy /,/, leftmost/NN/leftmost n/NN/n by/IN/by 2/CD/2 elements/NNS/elements and/CC/and right/RB/right most/RBS/most n/JJ/n by/IN/by /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 43/CD/43 /:/: 22/CD/22 /CD/) /CD/) /./. so/RB/so /,/, this/DT/this algorithm/NN/algorithm that/IN/that we/PRP/we have/VBP/have just/RB/just seen/VBN/seen is/VBZ/is perhaps/RB/perhaps as/IN/as you/PRP/you realize/VBP/realize is/VBZ/is more/RBR/more complicated/JJ/complicated /,/, than/IN/than what/WP/what we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/NNP/far. and/CC/and we/PRP/we seen/VBP/seen all/DT/all the/DT/the pieces/NNS/pieces actually/RB/actually i/PRP/i have/VBP/have given/VBN/given you/PRP/you all/DT/all the/DT/the details/NNP/details. what/WP/what they/PRP/they are/VBP/are going/VBG/going to/TO/to now/RB/now is/VBZ/is summarize/NN/summarize the/DT/the whole/JJ/whole thing/NN/thing /,/, put/VBD/put them/PRP/them together/NNP/together. and/CC/and then/RB/then /,/, right/RB/right out/IN/out the/DT/the recurrence/NN/recurrence /,/, which/WDT/which will/MD/will not/RB/not be/VB/be difficult/JJ/difficult once/NN/once we/PRP/we put/VBD/put them/PRP/them on/IN/on the/DT/the steps/NNP/steps. and/CC/and once/RB/once we/PRP/we do/VBP/do that/IN/that /,/, we/PRP/we will/MD/will see/VB/see that/IN/that this/DT/this actually/RB/actually runs/VBZ/runs in/IN/in n/NN/n log/NN/log n/NN/n time/NNP/time. so/RB/so /,/, let/VB/let us/PRP/us summarize/VB/summarize and/CC/and write/VB/write down/RP/down this/DT/this algorithm/NN/algorithm in/IN/in one/CD/one piece/NNP/piece. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 06/CD/06 /CD/) the/DT/the first/JJ/first step/NN/step is/VBZ/is initialization/NN/initialization /,/, it/PRP/it is/VBZ/is initialization/NNP/initialization. and/CC/and here/RB/here we/PRP/we sort/VBP/sort the/DT/the points/NNS/points on/IN/on x/NN/x coordinates/NNS/coordinates and/CC/and on/IN/on y/NN/y coordinate/NNP/coordinate. so/RB/so /,/, given/VBN/given the/DT/the set/NN/set of/IN/of input/NN/input points/NNS/points we/PRP/we form/VBP/form two/CD/two lists/NNP/lists. so/RB/so /,/, we/PRP/we have/VBP/have two/CD/two arrays/NNP/arrays. one/CD/one array/NN/array which/WDT/which will/MD/will store/VB/store the/DT/the points/NNS/points in/IN/in increasing/VBG/increasing order/NN/order of/IN/of x/NN/x coordinates/NNP/coordinates. the/DT/the other/JJ/other array/NN/array will/MD/will store/VB/store the/DT/the points/NNS/points in/IN/in increasing/VBG/increasing order/NN/order of/IN/of y/NN/y coordinates/NNP/coordinates. and/CC/and this/DT/this will/MD/will be/VB/be the/DT/the input/NN/input to/TO/to the/DT/the procedure/NNP/procedure. this/DT/this initialization/NN/initialization is/VBZ/is done/VBN/done before/IN/before we/PRP/we start/VBP/start the/DT/the algorithm/NNP/algorithm. and/CC/and each/DT/each recursive/JJ/recursive step/NN/step will/MD/will pass/VB/pass down/IN/down this/DT/this information/NNP/information. so/RB/so /,/, the/DT/the next/JJ/next step/NN/step is/VBZ/is the/DT/the divide/NN/divide step/NN/step /,/, so/RB/so it/PRP/it is/VBZ/is step/VB/step 2/CD/2 /,/, it/PRP/it is/VBZ/is divide/JJ/divide step/NNP/step. so/RB/so /,/, here/RB/here we/PRP/we first/RB/first look/VBP/look at/IN/at the/DT/the median/NNP/median. so/RB/so /,/, let/VB/let the/DT/the value/NN/value of/IN/of the/DT/the median/JJ/median /,/, when/WRB/when sorted/VBN/sorted on/IN/on x/NN/x coordinates/NNS/coordinates /,/, let/VB/let us/PRP/us say/VB/say x/NN/x median/NNP/median. so/RB/so /,/, now/RB/now we/PRP/we split/VBP/split the/DT/the input/NN/input into/IN/into two/CD/two parts/NNS/parts /,/, points/NNS/points to/TO/to the/DT/the left/NN/left of/IN/of x/NN/x median/NN/median and/CC/and points/NNS/points to/TO/to the/DT/the right/NN/right of/IN/of x/NN/x median/NNP/median. and/CC/and then/RB/then /,/, we/PRP/we would/MD/would like/VB/like to/TO/to recurse/VB/recurse on/IN/on these/DT/these two/CD/two parts/NNP/parts. to/TO/to do/VB/do this/DT/this /,/, we/PRP/we have/VBP/have to/TO/to split/VB/split both/DT/both the/DT/the arrays/NNS/arrays into/IN/into two/CD/two parts/NNS/parts /,/, both/DT/both the/DT/the arrays/NNS/arrays which/WDT/which sorted/VBN/sorted on/IN/on x/NN/x coordinates/NNS/coordinates and/CC/and the/DT/the array/NN/array which/WDT/which is/VBZ/is sorted/VBN/sorted on/IN/on y/NN/y coordinates/NNP/coordinates. the/DT/the x/NN/x coordinate/NN/coordinate business/NN/business is/VBZ/is easy/JJ/easy /,/, because/IN/because you/PRP/you know/VBP/know where/WRB/where the/DT/the median/JJ/median is/VBZ/is right/RB/right it/PRP/it is/VBZ/is n/VBN/n half/NN/half the/DT/the element/NNP/element. so/RB/so /,/, you/PRP/you just/RB/just split/JJ/split the/DT/the array/NN/array into/IN/into two/CD/two parts/NNS/parts in/IN/in a/DT/a very/RB/very natural/JJ/natural rate/NNP/rate. for/IN/for the/DT/the y/NN/y coordinates/VBZ/coordinates what/WP/what you/PRP/you need/VBP/need to/TO/to do/VB/do is/VBZ/is go/VB/go through/IN/through the/DT/the entire/JJ/entire array/NNP/array. look/NN/look at/IN/at each/DT/each point/NN/point /,/, look/VBP/look at/IN/at it/PRP/it is/VBZ/is x/NN/x coordinate/NN/coordinate and/CC/and then/RB/then put/VBD/put it/PRP/it into/IN/into an/DT/an appropriate/JJ/appropriate array/NNP/array. so/RB/so /,/, now/RB/now let/VB/let us/PRP/us say/VB/say these/DT/these two/CD/two arrays/NNS/arrays /,/, where/WRB/where it/PRP/it is/VBZ/is points/NNS/points are/VBP/are x/NN/x coordinate/NNP/coordinate. so/RB/so /,/, these/DT/these two/CD/two arrays/NNS/arrays are/VBP/are called/VBN/called /,/, let/VB/let us/PRP/us say/VB/say capital/NN/capital x/NN/x and/CC/and capital/NN/capital y/NNP/y. so/RB/so /,/, split/NN/split let/VB/let me/PRP/me write/VB/write this/DT/this in/IN/in a/DT/a new/JJ/new paper/NNP/paper. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 18/CD/18 /CD/) so/RB/so /,/, split/NN/split x/NN/x into/IN/into x/NN/x l/NN/l for/IN/for x/NN/x left/VBD/left and/CC/and x/NN/x r/NN/r points/NNS/points in/IN/in x/NN/x l/NN/l have/VBP/have their/PRP$/their x/NN/x coordinate/NN/coordinate less/RBR/less than/IN/than equal/JJ/equal to/TO/to x/VB/x median/JJ/median /,/, the/DT/the median/JJ/median value/NNP/value. and/CC/and the/DT/the others/NNS/others are/VBP/are in/IN/in x/NN/x r/NN/r /,/, the/DT/the other/JJ/other points/NNS/points x/IN/x r/NN/r contains/NNS/contains the/DT/the other/JJ/other points/NNP/points. similarly/RB/similarly /,/, split/NN/split y/NN/y into/IN/into y/NN/y l/NN/l and/CC/and y/NN/y r/NNP/r. remember/NN/remember /,/, y/NN/y sorted/VBD/sorted on/IN/on y/NN/y coordinates/NNS/coordinates /,/, y/NN/y l/NN/l and/CC/and y/NN/y r/NN/r will/MD/will also/RB/also be/VB/be sorted/VBN/sorted on/IN/on y/NN/y coordinates/NNP/coordinates. y/NN/y l/NN/l contains/VBZ/contains the/DT/the same/JJ/same points/NNS/points as/IN/as x/NN/x l/NN/l only/RB/only sorted/VBN/sorted in/IN/in y/NN/y coordinates/NNP/coordinates. similarly/RB/similarly /,/, y/NN/y r/NNP/r. so/RB/so /,/, y/JJ/y r/NN/r contains/VBZ/contains the/DT/the same/JJ/same points/NNS/points as/IN/as x/NN/x r/NN/r so/RB/so /,/, this/DT/this actually/RB/actually divides/VBZ/divides the/DT/the input/NN/input into/IN/into two/CD/two parts/NNP/parts. initially/RB/initially you/PRP/you had/VBD/had this/DT/this sorted/VBN/sorted arrays/NNS/arrays x/VBP/x and/CC/and y/NNP/y. and/CC/and now/RB/now you/PRP/you have/VBP/have created/VBN/created x/NN/x l/NN/l /,/, x/NN/x r/NN/r /,/, y/NN/y l/NN/l /,/, y/NN/y r/NNP/r. the/DT/the next/JJ/next step/NN/step is/VBZ/is the/DT/the recurse/NN/recurse step/NNP/step. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write that/IN/that /,/, so/RB/so pass/NNP/pass. so/IN/so /,/, the/DT/the input/NN/input is/VBZ/is divided/VBN/divided into/IN/into two/CD/two parts/NNS/parts x/NN/x l/NN/l /,/, y/NN/y l/NN/l and/CC/and x/NN/x r/NN/r /,/, y/NN/y r/NNP/r. these/DT/these are/VBP/are the/DT/the same/JJ/same set/NN/set of/IN/of points/NNS/points /,/, in/IN/in x/NN/x l/NN/l they/PRP/they sorted/VBD/sorted in/IN/in increasing/VBG/increasing x/NN/x coordinates/NNS/coordinates and/CC/and y/NN/y l/NN/l they/PRP/they sorted/VBD/sorted in/IN/in increasing/VBG/increasing y/NN/y coordinates/NNP/coordinates. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the recurse/NN/recurse step/NNP/step. so/RB/so /,/, you/PRP/you recurse/VBP/recurse on/IN/on these/DT/these two/CD/two /,/, when/WRB/when you/PRP/you get/VBP/get the/DT/the shortest/JJS/shortest the/DT/the distance/NN/distance of/IN/of the/DT/the shortest/JJS/shortest the/DT/the closest/JJS/closest pair/NN/pair on/IN/on both/DT/both sides/NNS/sides /,/, on/IN/on either/DT/either sides/NNS/sides of/IN/of x/NN/x median/NNP/median. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 56/CD/56 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the recurse/NN/recurse step/NNP/step. so/RB/so /,/, step/VB/step 3/CD/3 is/VBZ/is the/DT/the recurse/NN/recurse step/NNP/step. so/RB/so /,/, what/WDT/what you/PRP/you get/VBP/get is/VBZ/is let/VBN/let us/PRP/us say/VBP/say d/JJ/d l/NN/l is/VBZ/is the/DT/the distance/NN/distance of/IN/of the/DT/the closest/JJS/closest pair/NN/pair on/IN/on input/NN/input capital/NN/capital x/NN/x l/NN/l capital/NN/capital y/NN/y l/NNP/l. similarly/RB/similarly /,/, d/NN/d r/NN/r is/VBZ/is the/DT/the distance/NN/distance of/IN/of the/DT/the closest/JJS/closest pair/NN/pair on/IN/on the/DT/the input/NN/input x/NN/x r/NN/r /,/, y/NN/y r/NNP/r. on/IN/on input/NN/input x/NN/x r/NN/r /,/, y/NN/y r/NN/r the/DT/the distance/NN/distance of/IN/of the/DT/the closest/JJS/closest pair/NN/pair on/IN/on the/DT/the right/NN/right hand/NN/hand side/NN/side is/VBZ/is d/VBN/d r/NNP/r. the/DT/the one/CD/one on/IN/on the/DT/the left/NN/left hand/NN/hand side/NN/side is/VBZ/is d/VBN/d l/NNP/l. so/RB/so /,/, now/RB/now you/PRP/you look/VBP/look at/IN/at these/DT/these two/CD/two distances/NNS/distances d/VBD/d l/NN/l and/CC/and d/VBD/d r/NN/r and/CC/and d/VBD/d compute/NN/compute d/NN/d as/IN/as the/DT/the minimum/JJ/minimum of/IN/of d/NN/d l/NN/l and/CC/and d/VBD/d r/NNP/r. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the next/JJ/next step/NN/step /,/, where/WRB/where you/PRP/you compute/VBP/compute the/DT/the minimum/JJ/minimum of/IN/of d/NN/d l/NN/l and/CC/and d/VBD/d r/NNP/r. now/RB/now /,/, let/VB/let me/PRP/me quickly/RB/quickly review/VB/review what/WP/what we/PRP/we have/VBP/have to/TO/to do/VB/do next/NNP/next. around/IN/around x/NN/x median/NN/median /,/, we/PRP/we look/VBP/look at/IN/at a/DT/a band/NN/band of/IN/of size/NN/size d/NN/d on/IN/on both/DT/both sides/NNP/sides. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw a/DT/a picture/NNP/picture. so/RB/so /,/, here/RB/here is/VBZ/is x/NN/x median/NN/median around/IN/around this/DT/this on/IN/on both/DT/both sides/NNS/sides at/IN/at a/DT/a distance/NN/distance of/IN/of d/NN/d /,/, we/PRP/we look/VBP/look at/IN/at the/DT/the band/NNP/band. this/DT/this is/VBZ/is the/DT/the on/IN/on the/DT/the left/NN/left side/NN/side /,/, that/IN/that is/VBZ/is on/IN/on the/DT/the right/NN/right side/NNP/side. now/RB/now /,/, we/PRP/we look/VBP/look at/IN/at points/NNS/points on/IN/on these/DT/these two/CD/two sides/NNP/sides. and/CC/and we/PRP/we know/VBP/know that/IN/that /,/, if/IN/if you/PRP/you need/VBP/need to/TO/to find/VB/find points/NNS/points which/WDT/which are/VBP/are closer/RBR/closer than/IN/than d/NNP/d. then/RB/then /,/, one/CD/one point/NN/point should/MD/should come/VB/come from/IN/from the/DT/the left/NNP/left. one/CD/one point/NN/point should/MD/should come/VB/come from/IN/from the/DT/the right/NN/right and/CC/and they/PRP/they must/MD/must be/VB/be in/IN/in this/DT/this band/NNP/band. so/RB/so /,/, let/VB/let us/PRP/us first/RB/first prove/VBP/prove x/NN/x l/NN/l /,/, y/NN/y l/NN/l /,/, x/NN/x r/NN/r /,/, y/NN/y r/NN/r to/TO/to only/RB/only points/VBZ/points in/IN/in these/DT/these bands/NNP/bands. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 27/CD/27 /CD/) so/RB/so /,/, step/VB/step 4/CD/4 is/VBZ/is putting/VBG/putting them/PRP/them together/RB/together /,/, is/VBZ/is putting/VBG/putting the/DT/the answers/NNS/answers together/RB/together /,/, so/RB/so that/IN/that is/VBZ/is the/DT/the next/JJ/next step/NNP/step. so/RB/so /,/, x/NN/x l/NN/l prime/NN/prime will/MD/will be/VB/be points/NNS/points from/IN/from x/NN/x l/NN/l whose/WP$/whose x/NN/x coordinates/NNS/coordinates are/VBP/are /,/, well/RB/well greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to x/VB/x median/JJ/median minus/NN/minus d/NNP/d. so/RB/so /,/, just/RB/just look/VBP/look at/IN/at this/DT/this figure/NN/figure /:/( /:/( refer/NN/refer time/NN/time /:/: 53/CD/53 /:/: 13/CD/13 /CD/) /CD/) /./. this/DT/this is/VBZ/is x/NN/x median/NN/median /,/, we/PRP/we need/VBP/need points/NNS/points in/IN/in this/DT/this range/NNP/range. so/RB/so /,/, any/DT/any point/NN/point will/MD/will have/VB/have it/PRP/it is/VBZ/is x/NN/x coordinate/NN/coordinate at/IN/at most/JJS/most x/NN/x median/NN/median minus/NN/minus d/NN/d /,/, so/RB/so that/IN/that is/VBZ/is step/VB/step 4/CD/4. so/RB/so /,/, similarly/RB/similarly y/JJ/y l/NN/l prime/NN/prime /,/, so/RB/so the/DT/the y/NN/y l/NN/l prime/NN/prime same/VBD/same y/NN/y coordinates/NNS/coordinates of/IN/of the/DT/the same/JJ/same set/NN/set of/IN/of points/NNS/points /,/, as/IN/as in/IN/in x/NN/x l/NN/l prime/NN/prime sorted/VBD/sorted on/IN/on y/NN/y coordinates/NNP/coordinates. so/RB/so /,/, you/PRP/you get/VBP/get these/DT/these by/IN/by pruning/NN/pruning x/NN/x l/NN/l and/CC/and y/NN/y l/NNP/l. so/RB/so /,/, you/PRP/you look/VBP/look at/IN/at x/NN/x l/NN/l and/CC/and y/NN/y l/NN/l and/CC/and only/RB/only look/VBP/look at/IN/at these/DT/these points/NNS/points in/IN/in the/DT/the band/NN/band and/CC/and you/PRP/you prove/VBP/prove /,/, remove/IN/remove some/DT/some of/IN/of those/DT/those points/NNP/points. so/RB/so /,/, you/PRP/you are/VBP/are left/VBN/left with/IN/with x/NN/x l/NN/l prime/NN/prime and/CC/and y/NN/y l/NN/l prime/NNP/prime. do/VBP/do a/DT/a similar/JJ/similar thing/NN/thing for/IN/for right/NN/right hand/NN/hand side/NN/side /,/, so/RB/so you/PRP/you get/VBP/get x/NN/x r/NN/r prime/NN/prime and/CC/and y/NN/y r/NN/r prime/NNP/prime. so/RB/so /,/, x/NN/x r/NN/r prime/NN/prime will/MD/will be/VB/be points/NNS/points from/IN/from x/NN/x r/NN/r whose/WP$/whose x/NN/x coordinates/NNS/coordinates are/NNP/are. so/RB/so /,/, these/DT/these are/VBP/are points/NNS/points from/IN/from x/NN/x r/NN/r with/IN/with x/NN/x coordinates/NNS/coordinates /,/, which/WDT/which are/VBP/are less/RBR/less than/IN/than equal/JJ/equal to/TO/to x/VB/x median/JJ/median plus/NN/plus d/NNP/d. these/DT/these are/VBP/are points/NNS/points from/IN/from y/NN/y r/NN/r with/IN/with x/NN/x coordinates/NNS/coordinates less/JJR/less than/IN/than equal/JJ/equal to/TO/to x/VB/x median/JJ/median plus/NN/plus d/NNP/d. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the same/JJ/same set/NN/set of/IN/of points/NNS/points /,/, only/RB/only x/VBP/x r/NN/r prime/NN/prime is/VBZ/is sorted/VBN/sorted on/IN/on x/NN/x coordinates/NNS/coordinates ;/:/; y/NN/y r/NN/r prime/NN/prime is/VBZ/is sorted/VBN/sorted on/IN/on y/NN/y coordinates/NNP/coordinates. our/PRP$/our focus/NN/focus from/IN/from now/RB/now will/MD/will be/VB/be on/IN/on y/NN/y l/NN/l prime/NN/prime and/CC/and y/NN/y r/NN/r prime/NNP/prime. we/PRP/we will/MD/will only/RB/only look/VB/look at/IN/at these/DT/these points/NNS/points from/IN/from increasing/VBG/increasing y/NN/y coordinates/NNP/coordinates. so/RB/so /,/, we/PRP/we are/VBP/are still/RB/still into/IN/into step/NN/step 4/CD/4. so/RB/so /,/, let/VB/let me/PRP/me recall/MD/recall what/WP/what we/PRP/we do/VBP/do now/NNP/now. so/RB/so /,/, here/RB/here are/VBP/are the/DT/the points/NNS/points let/VBP/let us/PRP/us say/VBP/say we/PRP/we have/VBP/have x/NN/x r/NN/r prime/NN/prime and/CC/and y/NN/y r/NN/r prime/NN/prime /,/, x/NN/x l/NN/l prime/NN/prime and/CC/and y/NN/y l/NN/l prime/NNP/prime. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 28/CD/28 /CD/) so/RB/so /,/, i/PRP/i look/VBP/look at/IN/at /,/, so/RB/so here/RB/here is/VBZ/is my/PRP$/my array/NN/array x/NN/x l/NN/l prime/NN/prime and/CC/and here/RB/here is/VBZ/is my/PRP$/my array/NN/array /,/, let/VB/let us/PRP/us say/VB/say x/NN/x r/NN/r prime/NNP/prime. these/DT/these arrays/NNS/arrays could/MD/could have/VB/have different/JJ/different sizes/NNS/sizes /,/, because/IN/because we/PRP/we have/VBP/have proved/VBN/proved points/NNS/points from/IN/from x/NN/x l/NN/l and/CC/and y/NN/y l/NN/l /,/, x/NN/x l/NN/l and/CC/and x/NN/x r/NNP/r. this/DT/this should/MD/should be/VB/be y/RB/y l/JJ/l prime/NN/prime /,/, because/IN/because you/PRP/you want/VBP/want to/TO/to look/VB/look at/IN/at the/DT/the points/NNS/points and/CC/and increasing/VBG/increasing y/NN/y coordinates/NNP/coordinates. so/RB/so /,/, y/JJ/y l/NN/l prime/NN/prime and/CC/and y/NN/y r/NN/r prime/NN/prime are/VBP/are what/WP/what we/PRP/we are/VBP/are concerned/VBN/concerned with/NNP/with. so/RB/so /,/, maintain/VB/maintain three/CD/three pointers/NNS/pointers /,/, let/VB/let us/PRP/us say/VB/say p/NN/p /,/, q/NN/q and/CC/and r/NNP/r. p/NN/p will/MD/will point/VB/point to/TO/to something/NN/something there/RB/there /,/, that/IN/that is/VBZ/is p/NN/p /,/, q/NN/q and/CC/and r/NN/r will/MD/will be/VB/be pointers/NNS/pointers to/TO/to y/VB/y r/NN/r prime/NNP/prime. so/RB/so /,/, let/VB/let me/PRP/me quickly/RB/quickly recall/VBP/recall what/WP/what we/PRP/we want/VBP/want a/DT/a do/NNP/do. for/IN/for each/DT/each point/NN/point here/RB/here /,/, so/RB/so here/RB/here is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. so/RB/so /,/, recall/JJ/recall that/IN/that /,/, for/IN/for each/DT/each point/NN/point in/IN/in y/NN/y l/NN/l prime/NN/prime /,/, we/PRP/we will/MD/will find/VB/find at/IN/at most/JJS/most 10/CD/10 points/NNP/points. this/DT/this at/IN/at most/JJS/most 10/CD/10 follows/NNS/follows from/IN/from a/DT/a discussion/NN/discussion that/WDT/that we/PRP/we did/VBD/did earlier/NNP/earlier. that/IN/that in/IN/in a/DT/a square/NN/square with/IN/with 5/CD/5 points/NNS/points /,/, there/EX/there will/MD/will be/VB/be two/CD/two who/WP/who are/VBP/are close/RB/close as/IN/as half/PDT/half the/DT/the diagonal/NNP/diagonal. so/RB/so /,/, we/PRP/we will/MD/will find/VB/find at/IN/at most/JJS/most 10/CD/10 points/NNS/points whose/WP$/whose y/NN/y coordinates/NNS/coordinates are/VBP/are /,/, so/RB/so supposing/VBG/supposing this/DT/this point/NN/point is/VBZ/is /,/, so/RB/so for/IN/for each/DT/each point/NN/point /,/, let/VB/let us/PRP/us say/VB/say this/DT/this point/NN/point is/VBZ/is some/DT/some x/NN/x prime/NN/prime /,/, prime/NNP/prime. y/NN/y coordinates/VBZ/coordinates are/VBP/are in/IN/in the/DT/the range/NN/range y/NN/y prime/NN/prime minus/NN/minus d/NN/d to/TO/to y/VB/y prime/JJ/prime plus/NN/plus d/NNP/d. so/RB/so /,/, we/PRP/we find/VBP/find these/DT/these points/NNS/points and/CC/and then/RB/then /,/, compute/NN/compute the/DT/the distance/NN/distance from/IN/from x/NN/x prime/NN/prime y/NN/y prime/NN/prime to/TO/to these/DT/these points/NNP/points. and/CC/and this/DT/this will/MD/will add/VB/add 10/CD/10 more/JJR/more distances/NNP/distances. we/PRP/we do/VBP/do it/PRP/it for/IN/for every/DT/every point/NN/point in/IN/in this/DT/this array/NNP/array. once/RB/once you/PRP/you do/VBP/do that/DT/that among/IN/among all/DT/all these/DT/these distances/NNS/distances /,/, 10/CD/10 times/NNS/times the/DT/the size/NN/size of/IN/of number/NN/number of/IN/of points/NNS/points in/IN/in y/NN/y l/NN/l prime/NN/prime /,/, we/PRP/we compute/VBP/compute the/DT/the minimum/NNP/minimum. that/IN/that is/VBZ/is our/PRP$/our goal/NNP/goal. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 58/CD/58 /:/: 17/CD/17 /CD/) so/RB/so /,/, a/DT/a generic/JJ/generic step/NN/step is/VBZ/is supposing/VBG/supposing /,/, so/RB/so a/DT/a generic/JJ/generic step/NN/step is/VBZ/is this/DT/this /,/, so/RB/so i/PRP/i have/NNP/have... let/VB/let us/PRP/us say/VB/say i/PRP/i have/VBP/have computed/VBN/computed up/RP/up to/TO/to this/DT/this point/NN/point p/NN/p is/VBZ/is done/VBN/done /,/, here/RB/here is/VBZ/is the/DT/the letters/NNS/letters q/VBP/q and/CC/and r/NNP/r. so/RB/so /,/, between/IN/between q/NN/q and/CC/and r/NN/r /,/, we/PRP/we find/VBP/find the/DT/the points/NNS/points with/IN/with the/DT/the correct/JJ/correct range/NN/range of/IN/of y/NN/y coordinates/NNP/coordinates. so/RB/so /,/, supposing/VBG/supposing we/PRP/we have/VBP/have done/VBN/done up/RP/up to/TO/to this/NNP/this. now/RB/now /,/, in/IN/in a/DT/a generic/JJ/generic step/NN/step /,/, i/PRP/i will/MD/will raise/VB/raise p/NN/p by/IN/by 1/CD/1 /,/, p/NN/p is/VBZ/is p/NN/p plus/RB/plus 1/CD/1 /,/, so/RB/so this/DT/this moves/NNS/moves one/CD/one step/NN/step /,/, now/RB/now this/DT/this is/VBZ/is your/PRP$/your new/JJ/new p/NNP/p. so/RB/so /,/, now/RB/now correspondingly/RB/correspondingly q/VBP/q will/MD/will move/VB/move and/CC/and r/NN/r will/MD/will move/NNP/move. so/RB/so /,/, the/DT/the next/JJ/next step/NN/step is/VBZ/is move/NN/move q/NN/q appropriately/RB/appropriately /,/, then/RB/then move/VB/move r/NN/r appropriately/NNP/appropriately. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by appropriately/RB/appropriately /,/, you/PRP/you increment/VBD/increment q/NN/q till/IN/till /,/, if/IN/if this/DT/this value/NN/value is/VBZ/is not/RB/not in/IN/in the/DT/the range/NN/range y/NN/y prime/NN/prime minus/NN/minus d/NN/d to/TO/to y/VB/y prime/JJ/prime plus/NN/plus d/NN/d /,/, which/WDT/which means/VBZ/means it/PRP/it is/VBZ/is smaller/JJR/smaller than/IN/than y/NN/y prime/NN/prime minus/NN/minus d/NNP/d. so/RB/so /,/, increment/NN/increment as/IN/as long/RB/long as/IN/as y/NN/y coordinate/NN/coordinate is/VBZ/is less/JJR/less than/IN/than y/NN/y prime/NN/prime minus/NN/minus d/NNP/d. and/CC/and similarly/RB/similarly you/PRP/you move/VBP/move r/JJ/r /,/, as/IN/as long/RB/long as/IN/as it/PRP/it is/VBZ/is less/JJR/less than/IN/than y/NN/y prime/NN/prime minus/NN/minus d/NNP/d. finally/RB/finally /,/, when/WRB/when you/PRP/you do/VBP/do this/DT/this /,/, then/RB/then you/PRP/you will/MD/will have/VB/have these/DT/these two/CD/two values/NNS/values for/IN/for the/DT/the next/JJ/next value/NN/value of/IN/of d/NNP/d. and/CC/and now/RB/now you/PRP/you compute/VBP/compute the/DT/the distances/NNP/distances. then/RB/then /,/, compute/NN/compute the/DT/the distances/NNS/distances of/IN/of y/NN/y prime/JJ/prime l/NN/l p/NN/p and/CC/and all/DT/all points/NNS/points between/IN/between y/NN/y prime/NN/prime r/NN/r q/NN/q and/CC/and y/NN/y prime/NN/prime r/NN/r small/JJ/small r/NNP/r. so/RB/so /,/, then/RB/then this/DT/this is/VBZ/is the/DT/the generic/JJ/generic step/NN/step in/IN/in the/DT/the loop/NN/loop /,/, put/VBD/put this/DT/this in/IN/in a/DT/a loop/NNP/loop. and/CC/and once/RB/once you/PRP/you are/VBP/are done/VBN/done /,/, you/PRP/you found/VBD/found these/DT/these distances/NNS/distances /,/, compute/VBP/compute the/DT/the minimum/NNP/minimum. so/RB/so /,/, the/DT/the last/JJ/last step/NN/step is/VBZ/is compute/JJ/compute the/DT/the minimum/JJ/minimum of/IN/of these/DT/these distances/NNP/distances. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 61/CD/61 /:/: 08/CD/08 /CD/) so/RB/so /,/, say/VB/say it/PRP/it is/VBZ/is some/DT/some delta/NN/delta /,/, then/RB/then return/VB/return min/NN/min of/IN/of delta/NN/delta and/CC/and d/NNP/d. and/CC/and that/IN/that is/VBZ/is /,/, ends/VBZ/ends the/DT/the algorithm/NNP/algorithm. now/RB/now /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the analysis/NN/analysis /,/, then/RB/then there/EX/there is/VBZ/is an/DT/an initial/NNP/initial. so/RB/so analysis/VBZ/analysis /,/, so/RB/so the/DT/the sorting/NN/sorting initially/RB/initially is/VBZ/is order/NN/order n/NN/n log/NN/log n/NNP/n. there/EX/there are/VBP/are two/CD/two recursive/JJ/recursive calls/NNS/calls /,/, so/RB/so that/IN/that is/VBZ/is 2/CD/2 t/NN/t n/NN/n by/IN/by 2/CD/2. and/CC/and then/RB/then /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the whole/JJ/whole analysis/NN/analysis /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is o/RB/o n/NNP/n. so/RB/so /,/, we/PRP/we can/MD/can quickly/RB/quickly do/VB/do this/DT/this /,/, while/IN/while splitting/NN/splitting does/VBZ/does not/RB/not take/VB/take time/NNP/time. the/DT/the only/JJ/only problem/NN/problem is/VBZ/is this/DT/this pointer/NN/pointer manipulation/NNP/manipulation. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 62/CD/62 /:/: 13/CD/13 /CD/) /CD/) in/IN/in this/DT/this pointer/NN/pointer manipulation/NN/manipulation /,/, how/WRB/how many/JJ/many times/NNS/times this/DT/this p/NN/p /,/, q/NN/q and/CC/and r/NN/r incremented/NNP/incremented. well/RB/well p/VB/p can/MD/can be/VB/be incremented/VBN/incremented at/IN/at most/JJS/most n/JJ/n times/NNP/times. q/NN/q can/MD/can be/VB/be incremented/VBN/incremented at/IN/at most/JJS/most n/JJ/n times/NNP/times. r/NN/r can/MD/can be/VB/be incremented/VBN/incremented at/IN/at most/JJS/most n/JJ/n times/NNS/times /,/, so/RB/so this/DT/this is/VBZ/is order/NN/order n/NNP/n. the/DT/the total/JJ/total number/NN/number of/IN/of distances/NNS/distances we/PRP/we know/VBP/know /,/, we/PRP/we calculate/VBP/calculate is/VBZ/is at/IN/at most/JJS/most order/NN/order n/NNP/n. so/RB/so /,/, that/IN/that is/VBZ/is why/WRB/why this/DT/this is/VBZ/is order/NN/order n/NN/n and/CC/and t/NN/t n/NN/n satisfies/NNS/satisfies this/DT/this recurrence/NNP/recurrence. and/CC/and the/DT/the solution/NN/solution is/VBZ/is t/VBN/t n/NN/n is/VBZ/is o/RB/o of/IN/of n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the analysis/NN/analysis of/IN/of this/DT/this algorithm/NN/algorithm /,/, it/PRP/it is/VBZ/is pretty/RB/pretty simple/JJ/simple /,/, and/CC/and this/DT/this ends/NNS/ends our/PRP$/our discussion/NN/discussion on/IN/on divide/NN/divide and/CC/and conquer/NNP/conquer. thank/NN/thank you/NNP/you. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 10/CD/10 greedy/NN/greedy algorithms/NNS/algorithms ?/./? i/PRP/i /VBP/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 00/CD/00 /:/: 59/CD/59 /CD/) we/PRP/we will/MD/will look/VB/look at/IN/at yet/RB/yet another/DT/another algorithm/NN/algorithm design/NN/design technique/NNP/technique. this/DT/this one/CD/one is/VBZ/is interestingly/RB/interestingly called/VBN/called greedy/JJ/greedy algorithm/NN/algorithm or/CC/or greedy/JJ/greedy techniques/NNS/techniques for/IN/for designing/VBG/designing algorithms/NNP/algorithms. so/RB/so /,/, the/DT/the keyword/NN/keyword here/RB/here is/VBZ/is greedy/JJ/greedy and/CC/and well/RB/well /,/, it/PRP/it has/VBZ/has something/NN/something to/TO/to do/VB/do with/IN/with greed/NN/greed as/IN/as we/PRP/we know/VBP/know it/PRP/it is/VBZ/is only/RB/only a/DT/a little/RB/little bit/NNP/bit. the/DT/the main/JJ/main technique/NN/technique main/NN/main sort/NN/sort of/IN/of technique/NN/technique for/IN/for these/DT/these for/IN/for this/DT/this algorithm/NN/algorithm design/NN/design technique/NN/technique is/VBZ/is the/DT/the somehow/NN/somehow piece/NN/piece together/RB/together your/PRP$/your optimum/NN/optimum solution/NN/solution small/JJ/small piece/NN/piece by/IN/by small/JJ/small piece/NN/piece by/IN/by piece/NNP/piece. so/RB/so /,/, construct/NN/construct the/DT/the optimum/NN/optimum solution/NN/solution somehow/NN/somehow by/IN/by getting/NN/getting a/DT/a small/JJ/small piece/NN/piece first/RB/first then/RB/then sort/NN/sort of/IN/of enlarging/VBG/enlarging it/PRP/it and/CC/and so/RB/so on/IN/on and/CC/and so/RB/so forth/JJ/forth till/NN/till you/PRP/you get/VBP/get the/DT/the final/JJ/final answer/NNP/answer. so/RB/so /,/, we/PRP/we will/MD/will start/VB/start with/IN/with an/DT/an example/NN/example and/CC/and we/PRP/we will/MD/will see/VB/see how/WRB/how this/DT/this technique/NN/technique works/NNP/works. in/IN/in some/DT/some sense/NN/sense it/PRP/it is/VBZ/is a/DT/a bit/NN/bit difficult/NN/difficult to/TO/to listen/VB/listen you/PRP/you have/VB/have to/TO/to some/DT/some zero/NN/zero in/IN/in on/IN/on part/NN/part of/IN/of the/DT/the optimum/NN/optimum output/NNP/output. the/DT/the optimum/NN/optimum has/VBZ/has some/DT/some output/NN/output you/PRP/you have/VB/have to/TO/to somehow/VB/somehow zero/NN/zero in/IN/in on/IN/on some/DT/some part/NN/part of/IN/of it/NNP/it. then/RB/then slowly/RB/slowly enlarge/VB/enlarge it/PRP/it and/CC/and how/WRB/how do/VBP/do you/PRP/you end/VB/end up/RP/up with/IN/with this/DT/this small/JJ/small piece/NNP/piece. how/WRB/how do/VBP/do you/PRP/you enlarge/VB/enlarge this/DT/this ?/./? that/IN/that is/VBZ/is the/DT/the crux/NN/crux of/IN/of design/NN/design technique/NN/technique here/RB/here often/RB/often there/EX/there are/VBP/are no/DT/no clear/JJ/clear cut/NN/cut guiding/VBG/guiding rules/NNS/rules that/WDT/that i/PRP/i can/MD/can give/VB/give you/NNP/you. it/PRP/it is/VBZ/is left/VBN/left to/TO/to your/PRP$/your sort/NN/sort of/IN/of imagination/NN/imagination and/CC/and intuition/NN/intuition hard/RB/hard work/VB/work whatever/RB/whatever perhaps/RB/perhaps luck/VB/luck that/IN/that you/PRP/you come/VBP/come up/RP/up with/IN/with the/DT/the right/NN/right ideas/NNS/ideas that/WDT/that build/NN/build in/IN/in solutions/NNP/solutions. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down the/DT/the sort/NN/sort of/IN/of basic/JJ/basic ideas/NNS/ideas here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 19/CD/19 /CD/) so/RB/so /,/, the/DT/the greedy/NN/greedy approach/NN/approach /,/, the/DT/the basic/JJ/basic idea/NN/idea the/DT/the basic/JJ/basic step/NN/step is/VBZ/is construct/NN/construct the/DT/the optimum/NN/optimum solution/NN/solution or/CC/or output/NN/output piece/NN/piece by/IN/by piece/NN/piece this/DT/this is/VBZ/is the/DT/the basic/JJ/basic step/NNP/step. so/RB/so /,/, generic/JJ/generic step/NN/step in/IN/in your/PRP$/your algorithm/NN/algorithm which/WDT/which will/MD/will typically/RB/typically be/VB/be in/IN/in a/DT/a loop/NN/loop is/VBZ/is having/VBG/having constructed/VBN/constructed some/DT/some part/NN/part of/IN/of the/DT/the optimum/NN/optimum solution/NN/solution extend/NN/extend this/DT/this you/PRP/you extend/VBP/extend this/DT/this by/IN/by identifying/NN/identifying the/DT/the next/JJ/next part/NNP/part. this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial generic/JJ/generic step/NN/step which/WDT/which you/PRP/you will/MD/will have/VB/have to/TO/to design/NNP/design. so/RB/so /,/, once/RB/once you/PRP/you get/VBP/get the/DT/the problem/NN/problem you/PRP/you somehow/VBP/somehow have/VBP/have to/TO/to get/VB/get this/DT/this generic/JJ/generic step/NNP/step. usually/RB/usually one/CD/one starts/NNS/starts off/IN/off by/IN/by figuring/NN/figuring out/IN/out what/WP/what the/DT/the first/JJ/first step/NN/step is/NNP/is. then/RB/then the/DT/the generic/JJ/generic step/NN/step and/CC/and then/RB/then you/PRP/you just/RB/just put/VBD/put the/DT/the generic/JJ/generic step/NN/step in/IN/in a/DT/a loop/NN/loop and/CC/and that/IN/that is/VBZ/is how/WRB/how the/DT/the algorithm/NN/algorithm looks/VBZ/looks like/NNP/like. well/RB/well /,/, the/DT/the crucial/JJ/crucial question/NN/question that/WDT/that you/PRP/you will/MD/will have/VB/have to/TO/to answer/VB/answer for/IN/for each/DT/each of/IN/of these/DT/these problem/NN/problem is/VBZ/is how/WRB/how do/VBP/do you/PRP/you identify/VB/identify you/PRP/you know/VB/know the/DT/the next/JJ/next part/NN/part of/IN/of the/DT/the optimum/NNP/optimum. so/RB/so /,/, you/PRP/you have/VBP/have got/VBN/got some/DT/some part/NN/part of/IN/of the/DT/the optimum/NN/optimum somehow/NN/somehow how/WRB/how do/VBP/do you/PRP/you zero/VB/zero in/IN/in on/IN/on the/DT/the next/JJ/next part/NN/part ?/./? this/DT/this is/VBZ/is the/DT/the sort/NN/sort of/IN/of crucial/JJ/crucial question/NN/question that/WDT/that you/PRP/you will/MD/will have/VB/have to/TO/to answer/NNP/answer. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 41/CD/41 /CD/) we/PRP/we will/MD/will have/VB/have to/TO/to answer/VB/answer as/IN/as we/PRP/we go/VBP/go along/IN/along for/IN/for this/DT/this course/NN/course the/DT/the question/NN/question is/VBZ/is how/WRB/how you/PRP/you zero/VBP/zero in/IN/in on/IN/on this/DT/this extension/NN/extension ?/./? by/IN/by extension/NN/extension i/PRP/i mean/VBP/mean extension/NN/extension of/IN/of this/DT/this optimum/NN/optimum solution/NN/solution like/IN/like you/PRP/you is/VBZ/is building/NNP/building. so/RB/so /,/, how/WRB/how do/VBP/do you/PRP/you get/VB/get this/DT/this ?/./? well/RB/well /,/, for/IN/for this/DT/this course/NN/course its/PRP$/its intuition/NN/intuition perhaps/RB/perhaps hard/RB/hard work/VB/work well/RB/well /,/, some/DT/some amount/NN/amount of/IN/of luck/NN/luck and/CC/and i/PRP/i will/MD/will sort/VB/sort of/IN/of sort/NN/sort of/IN/of just/RB/just say/VBP/say local/JJ/local improvement/NNP/improvement. do/VBP/do not/RB/not worry/VB/worry too/RB/too much/RB/much about/IN/about what/WP/what this/DT/this means/NNP/means. i/PRP/i will/MD/will explain/VB/explain as/IN/as we/PRP/we go/VBP/go along/NNP/along. this/DT/this may/MD/may be/VB/be the/DT/the only/JJ/only key/JJ/key i/PRP/i can/MD/can give/VB/give you/PRP/you at/IN/at this/DT/this point/NNP/point. this/DT/this local/JJ/local improvement/NN/improvement trick/NN/trick is/VBZ/is not/RB/not very/RB/very formal/JJ/formal it/PRP/it is/VBZ/is sort/NN/sort of/IN/of an/DT/an informal/JJ/informal idea/NN/idea that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to give/VB/give you/NNP/you. and/CC/and we/PRP/we will/MD/will see/VB/see that/IN/that in/IN/in many/JJ/many of/IN/of these/DT/these problems/NNS/problems you/PRP/you can/MD/can sort/VB/sort of/IN/of use/NN/use some/DT/some of/IN/of these/DT/these small/JJ/small tricks/NNS/tricks that/WDT/that i/PRP/i give/VBP/give you/PRP/you to/TO/to get/VB/get the/DT/the algorithm/NNP/algorithm. but/CC/but often/RB/often you/PRP/you know/VBP/know you/PRP/you just/RB/just have/VBP/have to/TO/to rely/RB/rely on/IN/on your/PRP$/your own/JJ/own engineering/NN/engineering as/IN/as a/DT/a bigger/JJR/bigger hint/NN/hint as/IN/as to/TO/to where/WRB/where all/DT/all these/DT/these algorithms/NNS/algorithms comes/VBZ/comes from/NNP/from. there/RB/there is/VBZ/is some/DT/some there/EX/there are/VBP/are some/DT/some there/EX/there is/VBZ/is some/DT/some theory/NN/theory behind/IN/behind it/PRP/it which/WDT/which we/PRP/we will/MD/will not/RB/not which/WDT/which as/IN/as this/DT/this says/VBZ/says beyond/IN/beyond the/DT/the scope/NN/scope of/IN/of this/DT/this course/NN/course /,/, but/CC/but i/PRP/i will/MD/will tell/VB/tell you/PRP/you where/WRB/where at/IN/at least/JJS/least some/DT/some of/IN/of it/PRP/it comes/VBZ/comes from/IN/from there/EX/there are/VBP/are 2/CD/2 subjects/NNP/subjects. so/RB/so /,/, let/VB/let me/PRP/me sort/VB/sort of/IN/of tell/NN/tell you/PRP/you what/WP/what both/DT/both are/VBP/are and/CC/and i/PRP/i will/MD/will strongly/RB/strongly encourage/VB/encourage you/PRP/you to/TO/to read/VB/read about/IN/about them/NNP/them. the/DT/the first/JJ/first so/RB/so /,/, this/DT/this is/VBZ/is for/IN/for this/DT/this course/NN/course so/IN/so /,/, future/JJ/future i/PRP/i encourage/VBP/encourage you/PRP/you to/TO/to read/VB/read the/DT/the following/NNP/following. one/CD/one is/VBZ/is matroids/NNS/matroids theory/NN/theory this/DT/this is/VBZ/is a/DT/a theory/NN/theory of/IN/of matroids/NNS/matroids and/CC/and the/DT/the second/JJ/second one/CD/one is/VBZ/is linear/JJ/linear programming/NN/programming duality/NNP/duality. so/RB/so /,/, that/IN/that is/VBZ/is so/RB/so /,/, called/VBN/called primary/JJ/primary dual/JJ/dual method/NN/method in/IN/in linear/NN/linear programming/NN/programming duality/NN/duality which/WDT/which gives/VBZ/gives you/PRP/you a/DT/a sort/NN/sort of/IN/of method/NN/method in/IN/in using/VBG/using that/IN/that method/NN/method many/JJ/many of/IN/of these/DT/these so/RB/so /,/, called/VBN/called greedy/NN/greedy algorithms/NNS/algorithms can/MD/can be/VB/be devised/NNP/devised. in/IN/in the/DT/the way/NN/way you/PRP/you pick/VBP/pick up/RP/up the/DT/the next/JJ/next part/NN/part often/RB/often is/VBZ/is dictated/VBN/dictated by/IN/by this/DT/this by/IN/by this/DT/this geometric/JJ/geometric structure/NNP/structure. so/RB/so /,/, but/CC/but this/DT/this is/VBZ/is for/IN/for the/DT/the future/NN/future forget/NN/forget about/IN/about this/DT/this after/IN/after this/DT/this course/NN/course we/PRP/we have/VBP/have the/DT/the time/NN/time /:/( /:/( refer/NN/refer time/NN/time /:/: 08/CD/08 /:/: 28/CD/28 /CD/) /CD/) /./. please/NN/please do/VB/do read/JJ/read about/IN/about these/DT/these 2/CD/2 they/PRP/they are/VBP/are very/RB/very important/JJ/important algorithm/NN/algorithm design/NN/design technique/NNP/technique. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the exchange/NN/exchange trick/NN/trick which/WDT/which i/PRP/i am/VBP/am going/VBG/going to/TO/to tell/VB/tell you/PRP/you in/IN/in a/DT/a very/RB/very sort/NN/sort of/IN/of in/IN/in a/DT/a hand/NN/hand wavy/NN/wavy fashion/NNP/fashion. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 45/CD/45 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the exchange/NN/exchange trick/NN/trick or/CC/or the/DT/the local/JJ/local improvement/NN/improvement trick/NNP/trick. so/RB/so /,/, this/DT/this trick/NN/trick in/IN/in this/DT/this trick/NN/trick what/WP/what you/PRP/you do/VBP/do is/VBZ/is this/DT/this ?/./? so/RB/so /,/, supposing/VBG/supposing you/PRP/you have/VBP/have some/DT/some solution/NN/solution some/DT/some generic/JJ/generic output/NN/output for/IN/for the/DT/the problem/NNP/problem. there/RB/there is/VBZ/is an/DT/an input/NN/input we/PRP/we want/VBP/want the/DT/the output/NNP/output. well/RB/well /,/, usually/RB/usually we/PRP/we want/VBP/want an/DT/an output/NN/output which/WDT/which satisfies/NNS/satisfies which/WDT/which is/VBZ/is maximum/NN/maximum in/IN/in some/DT/some respect/NN/respect or/CC/or minimum/JJ/minimum in/IN/in some/DT/some respect/NN/respect optimum/NN/optimum in/IN/in some/DT/some respect/NNP/respect. so/RB/so /,/, supposing/VBG/supposing you/PRP/you take/VB/take some/DT/some solution/NN/solution which/WDT/which may/MD/may be/VB/be which/WDT/which may/MD/may not/RB/not be/VB/be optimum/NNP/optimum. well/RB/well /,/, the/DT/the question/NN/question asked/VBD/asked is/VBZ/is can/MD/can you/PRP/you improve/VB/improve the/DT/the solution/NN/solution by/IN/by adding/NN/adding or/CC/or subtracting/NNP/subtracting. let/NN/let us/PRP/us say/VBP/say 1/CD/1 element/NN/element can/MD/can you/PRP/you improve/VB/improve the/DT/the solution/NN/solution by/IN/by adding/NN/adding one/CD/one element/NN/element to/TO/to it/PRP/it or/CC/or subtracting/VBG/subtracting one/CD/one element/NN/element from/IN/from it/PRP/it ?/./? so/RB/so /,/, this/DT/this question/NN/question will/MD/will sort/VB/sort of/IN/of dictate/JJ/dictate how/WRB/how the/DT/the algorithm/NN/algorithm proceeds/NNP/proceeds. this/DT/this question/NN/question will/MD/will keep/VB/keep asking/VBG/asking and/CC/and we/PRP/we will/MD/will see/VB/see how/WRB/how answers/NNS/answers to/TO/to this/DT/this question/NNP/question. we/PRP/we will/MD/will sort/VB/sort have/VB/have trigger/JJR/trigger our/PRP$/our algorithms/NNS/algorithms ;/:/; we/PRP/we will/MD/will sort/VB/sort of/IN/of push/JJ/push the/DT/the algorithms/NNS/algorithms forward/NNP/forward. so/RB/so /,/, in/IN/in some/DT/some sense/NN/sense we/PRP/we may/MD/may have/VB/have partial/JJ/partial solution/NNP/solution. you/PRP/you see/VBP/see how/WRB/how to/TO/to improve/VB/improve the/DT/the solution/NN/solution improves/VBZ/improves it/PRP/it and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, that/IN/that is/VBZ/is for/IN/for all/PDT/all the/DT/the theory/NN/theory behind/IN/behind greedy/JJ/greedy algorithms/NNP/algorithms. we/PRP/we will/MD/will now/RB/now get/VB/get down/IN/down into/IN/into business/NN/business and/CC/and solve/VB/solve a/DT/a few/JJ/few problems/NNP/problems. the/DT/the first/JJ/first problem/NN/problem is/VBZ/is the/DT/the input/NN/input i/PRP/i need/VBP/need to/TO/to define/VB/define a/DT/a term/NN/term which/WDT/which you/PRP/you may/MD/may have/VB/have seen/VBN/seen before/NNP/before. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 20/CD/20 /CD/) it/PRP/it is/VBZ/is a/DT/a notion/NN/notion of/IN/of an/DT/an independent/JJ/independent set/NN/set and/CC/and independent/JJ/independent set/NN/set in/IN/in a/DT/a graph/NN/graph g/NN/g is/VBZ/is well/RB/well /,/, it/PRP/it is/VBZ/is a/DT/a subset/NN/subset of/IN/of the/DT/the vertex/NN/vertex set/VBD/set such/JJ/such that/IN/that the/DT/the there/EX/there are/VBP/are no/DT/no edges/NNS/edges between/IN/between any/DT/any pair/NN/pair of/IN/of vertices/NNP/vertices. it/PRP/it is/VBZ/is a/DT/a subset/NN/subset let/NN/let us/PRP/us say/VBP/say u/PRP/u of/IN/of the/DT/the vertex/NN/vertex at/IN/at v/NN/v of/IN/of g/NN/g such/JJ/such that/IN/that if/IN/if i/PRP/i take/VBP/take any/DT/any 2/CD/2 vertices/NNS/vertices in/IN/in u/NN/u there/EX/there is/VBZ/is no/DT/no edge/NN/edge between/IN/between them/PRP/them such/JJ/such that/IN/that for/IN/for any/DT/any x/NN/x y/NN/y belonging/VBG/belonging to/TO/to u/VB/u /,/, x/NN/x and/CC/and y/NN/y are/VBP/are vertices/NNS/vertices in/IN/in u/NN/u x/NN/x y/NN/y does/VBZ/does not/RB/not belong/VB/belong to/TO/to the/DT/the edge/NN/edge set/NN/set of/IN/of g/NN/g there/EX/there is/VBZ/is no/DT/no edge/NN/edge between/IN/between any/DT/any pair/NNP/pair. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take an/DT/an example/NN/example suppose/NN/suppose this/DT/this is/VBZ/is a/DT/a graph/NN/graph let/NN/let us/PRP/us complicated/VBD/complicated a/DT/a graph/NNP/graph. so/RB/so /,/, let/VB/let us/PRP/us give/VB/give them/PRP/them some/DT/some labels/NNS/labels a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e f/NN/f g/NN/g h/NN/h while/IN/while you/PRP/you look/VBP/look at/IN/at this/DT/this graph/NN/graph let/VBD/let us/PRP/us see/VB/see 1/CD/1 independent/JJ/independent set/NN/set could/MD/could be/VB/be a/NNP/a. if/IN/if i/PRP/i put/VBD/put a/DT/a in/IN/in the/DT/the independent/JJ/independent set/NN/set then/RB/then b/VB/b and/CC/and d/VB/d can/MD/can not/RB/not be/VB/be part/NN/part of/IN/of the/DT/the independent/JJ/independent set/NN/set /,/, because/IN/because this/DT/this is/VBZ/is an/DT/an edge/NN/edge between/IN/between 2/CD/2 of/IN/of them/NNP/them. so/RB/so /,/, i/PRP/i could/MD/could have/VB/have c/NN/c in/IN/in it/PRP/it and/CC/and f/NNP/f. this/DT/this is/VBZ/is an/DT/an independent/JJ/independent set/NN/set /,/, a/DT/a c/NN/c and/CC/and f/NN/f is/VBZ/is an/DT/an independent/JJ/independent set/NNP/set. so/RB/so /,/, i/PRP/i could/MD/could have/VB/have other/JJ/other independent/NNP/independent. for/IN/for instance/NN/instance a/DT/a and/CC/and c/NN/c by/IN/by this/DT/this is/VBZ/is also/RB/also an/DT/an independent/JJ/independent set/NN/set a/DT/a and/CC/and c/NN/c this/DT/this is/VBZ/is an/DT/an independent/JJ/independent set/NNP/set. there/RB/there is/VBZ/is no/DT/no edge/NN/edge between/IN/between a/DT/a and/CC/and c/NNP/c. similarly/RB/similarly /,/, i/PRP/i could/MD/could have/VB/have let/VB/let me/PRP/me put/VB/put one/CD/one more/JJR/more let/JJ/let us/PRP/us say/VBP/say b/NN/b f/NNP/f. so/RB/so /,/, if/IN/if i/PRP/i have/VBP/have b/NN/b and/CC/and f/NN/f this/DT/this is/VBZ/is an/DT/an independent/JJ/independent set/NN/set i/PRP/i could/MD/could have/VB/have e/NN/e h/NN/h let/NN/let us/PRP/us see/VBP/see i/PRP/i have/VBP/have e/JJ/e and/CC/and h/NN/h then/RB/then c/NN/c a/DT/a this/DT/this is/VBZ/is an/DT/an independent/JJ/independent that/IN/that is/VBZ/is c/JJ/c a/NNP/a. that/IN/that is/VBZ/is another/DT/another independent/NN/independent set/NNP/set. so/RB/so /,/, i/PRP/i have/VBP/have sort/NN/sort of/IN/of /NN/( /:/( refer/NN/refer time/NN/time /:/: 14/CD/14 /:/: 18/CD/18 /CD/) /CD/) /./. so/RB/so /,/, there/EX/there are/VBP/are many/JJ/many others/NNP/others. for/IN/for instance/NN/instance each/DT/each vertex/NN/vertex by/IN/by itself/PRP/itself is/VBZ/is an/DT/an independent/JJ/independent set/NNP/set. just/RB/just take/VB/take an/DT/an vertex/NN/vertex itself/PRP/itself it/PRP/it is/VBZ/is an/DT/an independent/JJ/independent set/NNP/set. so/RB/so /,/, it/PRP/it is/VBZ/is just/RB/just a/DT/a collection/NN/collection of/IN/of vertices/NNP/vertices. so/RB/so /,/, there/EX/there is/VBZ/is no/DT/no edge/NN/edge between/IN/between that/DT/that is/VBZ/is an/DT/an independent/JJ/independent set/NNP/set. now/RB/now /,/, for/IN/for instance/NN/instance if/IN/if these/DT/these are/VBP/are radio/NN/radio stations/NNS/stations it/PRP/it is/VBZ/is a/DT/a mobile/JJ/mobile radio/NN/radio stations/NNS/stations and/CC/and they/PRP/they are/VBP/are transmitting/VBG/transmitting they/PRP/they want/VBP/want to/TO/to transmit/VB/transmit and/CC/and 2/CD/2 of/IN/of these/DT/these cant/JJ/cant transmit/NN/transmit if/IN/if they/PRP/they sort/VBP/sort of/IN/of if/IN/if they/PRP/they interfere/NNP/interfere. so/RB/so /,/, then/RB/then only/RB/only an/DT/an independent/JJ/independent set/NN/set can/MD/can transmit/VB/transmit at/IN/at a/DT/a time/NNP/time. if/IN/if i/PRP/i take/VBP/take if/IN/if a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e f/NN/f g/NN/g h/NN/h are/VBP/are radio/NN/radio stations/NNP/stations. and/CC/and i/PRP/i suppose/VBP/suppose i/PRP/i draw/VBP/draw an/DT/an edge/NN/edge showing/VBG/showing that/IN/that these/DT/these 2/CD/2 fellows/NNS/fellows can/MD/can not/RB/not transmit/VB/transmit at/IN/at the/DT/the same/JJ/same time/NN/time /,/, because/IN/because of/IN/of the/DT/the same/JJ/same frequency/NN/frequency /,/, because/IN/because of/IN/of interference/NN/interference then/RB/then at/IN/at one/CD/one particular/JJ/particular frequency/NN/frequency or/CC/or at/IN/at one/CD/one particular/JJ/particular time/NN/time only/RB/only an/DT/an independent/JJ/independent set/NN/set can/MD/can transmit/NNP/transmit. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the /,/, that/IN/that is/VBZ/is roughly/RB/roughly the/DT/the motivation/NN/motivation where/WRB/where independent/JJ/independent sets/NNS/sets come/VBP/come in/NNP/in. there/RB/there are/VBP/are other/JJ/other motivations/NNS/motivations there/EX/there are/VBP/are other/JJ/other places/NNS/places where/WRB/where one/CD/one looks/NNS/looks for/IN/for independent/JJ/independent sets/NNP/sets. so/RB/so /,/, general/JJ/general problem/NN/problem is/VBZ/is given/VBN/given a/DT/a graph/NN/graph you/PRP/you want/VBP/want to/TO/to find/VB/find an/DT/an independent/JJ/independent set/NN/set large/JJ/large size/NNP/size. that/IN/that is/VBZ/is the/DT/the general/JJ/general problem/NNP/problem. in/IN/in fact/NN/fact /,/, an/DT/an independent/JJ/independent set/NN/set of/IN/of maximum/NN/maximum size/NN/size that/WDT/that is/VBZ/is the/DT/the problems/NNS/problems in/IN/in that/DT/that have/VBP/have been/VBN/been traced/NNP/traced. this/DT/this problem/NN/problem tells/VBZ/tells out/RP/out to/TO/to be/VB/be hard/RB/hard and/CC/and we/PRP/we look/VBP/look at/IN/at it/PRP/it later/JJ/later on/IN/on in/IN/in this/DT/this course/NNP/course. for/IN/for now/RB/now we/PRP/we will/MD/will restrict/VB/restrict the/DT/the graphs/NNS/graphs /:/( /:/( refer/NN/refer time/NN/time /:/: 16/CD/16 /:/: 00/CD/00 /CD/) /CD/) /./. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the problem/NN/problem in/IN/in totality/NNP/totality. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 09/CD/09 /CD/) so/RB/so /,/, the/DT/the input/NN/input the/DT/the tree/NN/tree t/NN/t by/IN/by tree/NN/tree i/PRP/i mean/VBP/mean a/DT/a graph/NN/graph that/WDT/that is/VBZ/is connected/VBN/connected and/CC/and acyclic/NNP/acyclic. the/DT/the output/NN/output i/PRP/i want/VBP/want a/DT/a maximum/NN/maximum sized/VBN/sized independent/JJ/independent set/NN/set in/IN/in t/NNP/t. i/PRP/i want/VBP/want a/DT/a subset/NN/subset of/IN/of the/DT/the vertex/NN/vertex set/VBD/set of/IN/of maximum/NN/maximum size/NN/size so/RB/so /,/, that/IN/that there/EX/there is/VBZ/is no/DT/no edge/NN/edge between/IN/between any/DT/any pair/NN/pair of/IN/of them/NNP/them. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to solve/NNP/solve. well/RB/well /,/, how/WRB/how you/PRP/you solve/VBP/solve such/JJ/such a/DT/a problem/NN/problem ?/./? how/WRB/how do/VBP/do you/PRP/you find/VB/find maximum/NN/maximum sized/VBN/sized independent/JJ/independent set/NN/set in/IN/in t/NN/t ?/./? well/RB/well /,/, if/IN/if t/NN/t has/VBZ/has n/VBN/n vertices/NNS/vertices let/VBP/let us/PRP/us say/VBP/say t/NN/t has/VBZ/has n/VBN/n vertices/NNS/vertices one/CD/one way/NN/way to/TO/to do/VB/do it/PRP/it is/VBZ/is too/RB/too we/PRP/we sort/VBP/sort of/IN/of group/NN/group force/NN/force way/NN/way /:/( /:/( refer/NN/refer time/NN/time /:/: 17/CD/17 /:/: 24/CD/24 /CD/) /CD/) sort/NN/sort of/IN/of compute/NN/compute one/CD/one to/TO/to one/CD/one /CD/( /CD/( refer/NN/refer time/NN/time /:/: 17/CD/17 /:/: 28/CD/28 /CD/) /CD/) is/VBZ/is to/TO/to look/VB/look at/IN/at all/DT/all possible/JJ/possible subset/NN/subset or/CC/or vertex/NN/vertex set/NNP/set. and/CC/and look/VB/look at/IN/at see/NN/see they/PRP/they are/VBP/are independent/JJ/independent and/CC/and choose/NN/choose the/DT/the one/CD/one which/WDT/which has/VBZ/has maximum/NN/maximum size/NNP/size. now/RB/now /,/, this/DT/this is/VBZ/is just/RB/just too/RB/too expensive/NNP/expensive. the/DT/the time/NN/time taken/VBN/taken is/VBZ/is least/VBN/least number/NN/number of/IN/of subsets/NNS/subsets of/IN/of n/NN/n vertices/NNS/vertices 2/CD/2 to/TO/to the/DT/the n/NN/n let/VBD/let us/PRP/us do/VBP/do it/PRP/it we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to do/VB/do it/PRP/it much/RB/much faster/JJR/faster what/WP/what else/RB/else could/MD/could one/CD/one do/NNP/do. well/RB/well /,/, pick/VBP/pick a/DT/a vertex/NN/vertex if/IN/if you/PRP/you pick/VBP/pick a/DT/a vertex/NN/vertex in/IN/in the/DT/the independent/JJ/independent set/NN/set then/RB/then the/DT/the neighbors/NNS/neighbors of/IN/of this/DT/this vertex/NN/vertex will/MD/will not/RB/not be/VB/be in/IN/in an/DT/an independent/JJ/independent set/NNP/set. so/RB/so /,/, that/IN/that is/VBZ/is by/IN/by definition/NNP/definition. so/RB/so /,/, you/PRP/you pick/VBP/pick this/DT/this pick/NN/pick a/DT/a vertex/NN/vertex throughout/IN/throughout its/PRP$/its neighbors/NNS/neighbors we/PRP/we will/MD/will look/VB/look at/IN/at this/DT/this graph/NNP/graph. again/RB/again pick/VB/pick any/DT/any vertex/NN/vertex that/IN/that remains/VBZ/remains throughout/IN/throughout its/PRP$/its neighbors/NNS/neighbors and/CC/and so/RB/so on/NNP/on. this/DT/this for/IN/for you/PRP/you will/MD/will get/VB/get an/DT/an independent/JJ/independent set/NN/set that/WDT/that is/VBZ/is fine/NN/fine /,/, but/CC/but i/PRP/i do/VBP/do ensure/RB/ensure that/IN/that the/DT/the size/NN/size is/VBZ/is maximum/NNP/maximum. if/IN/if you/PRP/you pick/VBP/pick the/DT/the wrong/JJ/wrong vertex/NN/vertex at/IN/at any/DT/any point/NN/point then/RB/then you/PRP/you may/MD/may end/VB/end up/RP/up in/IN/in trouble/NNP/trouble. so/RB/so /,/, here/RB/here is/VBZ/is simple/JJ/simple example/NNP/example. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is the/DT/the graph/NN/graph if/IN/if i/PRP/i pick/VBP/pick this/DT/this vertex/NN/vertex if/IN/if i/PRP/i pick/VBP/pick this/DT/this vertex/NN/vertex then/RB/then what/WP/what /-NONE-/( /VBP/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 48/CD/48 /CD/) /CD/) you/PRP/you get/VBP/get is/VBZ/is an/DT/an independent/JJ/independent set/NN/set of/IN/of size/NN/size 1/CD/1 the/DT/the optimum/NN/optimum is/VBZ/is of/IN/of size/NN/size 3/CD/3. the/DT/the solution/NN/solution here/RB/here the/DT/the solution/NN/solution to/TO/to this/DT/this problem/NN/problem is/VBZ/is a/DT/a subset/NN/subset or/CC/or a/DT/a vertex/NN/vertex set/NN/set and/CC/and you/PRP/you have/VBP/have to/TO/to somehow/VB/somehow pick/NN/pick the/DT/the right/NN/right subset/NNP/subset. and/CC/and the/DT/the greedy/NN/greedy solution/NN/solution greedy/NN/greedy way/NN/way says/VBZ/says pick/NN/pick it/PRP/it one/CD/one by/IN/by one/CD/one somehow/NN/somehow which/WDT/which vertex/NN/vertex would/MD/would you/PRP/you like/VB/like to/TO/to put/VB/put in/RP/in the/DT/the independent/JJ/independent set/NN/set /:/( /:/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 39/CD/39 /CD/) /CD/) /./. the/DT/the independent/JJ/independent set/NN/set is/VBZ/is large/JJ/large will/MD/will you/PRP/you think/VB/think about/IN/about it/PRP/it for/IN/for a/DT/a while/NN/while intuition/NN/intuition tells/NNS/tells you/PRP/you that/IN/that you/PRP/you should/MD/should pick/VB/pick a/DT/a vertex/NN/vertex of/IN/of smallest/JJS/smallest degree/NN/degree in/IN/in this/DT/this graph/NNP/graph. so/RB/so /,/, if/IN/if a/DT/a vertex/NN/vertex has/VBZ/has this/DT/this small/JJ/small degree/NN/degree then/RB/then the/DT/the number/NN/number of/IN/of neighbors/NNS/neighbors that/WDT/that you/PRP/you throw/VBP/throw up/RP/up remember/NN/remember when/WRB/when i/PRP/i pick/VBP/pick a/DT/a vertex/NN/vertex i/PRP/i have/VBP/have to/TO/to throw/VB/throw out/RP/out its/PRP$/its neighbors/NNS/neighbors number/NN/number of/IN/of neighbors/NNS/neighbors i/PRP/i throw/VBP/throw up/RP/up is/VBZ/is small/NNP/small. in/IN/in particular/JJ/particular if/IN/if i/PRP/i leaf/VBP/leaf in/IN/in the/DT/the independent/JJ/independent set/NNP/set. if/IN/if i/PRP/i pick/VBP/pick a/DT/a leaf/NN/leaf in/IN/in the/DT/the independent/JJ/independent set/NN/set then/RB/then the/DT/the only/JJ/only vertex/NN/vertex i/PRP/i just/RB/just throw/VBP/throw out/RP/out one/CD/one vertex/NN/vertex per/IN/per leaf/NN/leaf right/RB/right and/CC/and this/DT/this actually/RB/actually works/NNP/works. in/IN/in this/DT/this case/NN/case this/DT/this algorithm/NN/algorithm works/VBZ/works though/IN/though we/PRP/we need/VBP/need a/DT/a proof/NN/proof to/TO/to show/VB/show that/IN/that this/DT/this technique/NN/technique actually/RB/actually it/PRP/it produces/VBZ/produces maximum/NN/maximum size/NN/size independent/NN/independent set/NNP/set. the/DT/the algorithm/NN/algorithm is/VBZ/is just/RB/just this/NNP/this. the/DT/the just/RB/just pick/VBP/pick a/DT/a leaf/NN/leaf throw/NN/throw out/IN/out its/PRP$/its neighbor/NN/neighbor and/CC/and continue/NNP/continue. at/IN/at each/DT/each stage/NN/stage you/PRP/you will/MD/will have/VB/have a/DT/a forest/NNP/forest. if/IN/if you/PRP/you have/VBP/have a/DT/a vertex/NN/vertex of/IN/of degree/NN/degree 0/-NONE-/0 it/PRP/it is/VBZ/is not/RB/not adjacent/JJ/adjacent to/TO/to anything/NN/anything else/RB/else which/WDT/which you/PRP/you may/MD/may come/VB/come across/RP/across as/IN/as the/DT/the algorithm/NN/algorithm proceeds/VBZ/proceeds just/RB/just put/VBN/put it/PRP/it in/IN/in the/DT/the independent/JJ/independent set/NN/set blindly/NNP/blindly. if/IN/if no/DT/no such/JJ/such vertex/NN/vertex exist/NN/exist then/RB/then i/PRP/i pick/VBP/pick a/DT/a leaf/NN/leaf from/IN/from there/EX/there will/MD/will be/VB/be many/JJ/many trees/NNS/trees as/IN/as the/DT/the algorithm/NN/algorithm proceeds/VBZ/proceeds pick/NN/pick any/DT/any leaf/NN/leaf and/CC/and put/VBD/put it/PRP/it in/IN/in the/DT/the independent/JJ/independent set/NN/set and/CC/and continue/NNP/continue. this/DT/this algorithm/NN/algorithm actually/RB/actually works/NNP/works. it/PRP/it ;/:/; however/RB/however /,/, needs/VBZ/needs a/DT/a proof/NNP/proof. you/PRP/you need/VBP/need to/TO/to prove/VB/prove that/IN/that this/DT/this simple/NN/simple algorithm/NN/algorithm that/WDT/that we/PRP/we just/RB/just described/VBD/described actually/RB/actually works/NNP/works. it/PRP/it is/VBZ/is greedy/JJ/greedy in/IN/in the/DT/the sense/NN/sense that/IN/that we/PRP/we start/VBP/start you/PRP/you piece/VBP/piece you/PRP/you put/VBD/put the/DT/the solution/NN/solution together/RB/together piece/NN/piece by/IN/by piece/NNP/piece. you/PRP/you pick/VBP/pick a/DT/a piece/NN/piece and/CC/and slowly/RB/slowly sort/NN/sort of/IN/of proceed/NN/proceed in/IN/in this/DT/this way/NNP/way. once/RB/once you/PRP/you have/VB/have a/DT/a part/NN/part of/IN/of the/DT/the solution/NN/solution you/PRP/you do/VBP/do not/RB/not change/VB/change it/NNP/it. this/DT/this is/VBZ/is the/DT/the other/JJ/other sort/NN/sort of/IN/of property/NNP/property. if/IN/if i/PRP/i have/VBP/have a/DT/a few/JJ/few word/NN/word vertices/NNS/vertices in/IN/in the/DT/the solution/NN/solution i/PRP/i just/RB/just build/VBP/build the/DT/the solution/NN/solution up/RP/up further/JJ/further i/PRP/i do/VBP/do not/RB/not sort/VB/sort of/IN/of throw/NN/throw somehow/NN/somehow and/CC/and then/RB/then put/VBD/put something/NN/something and/CC/and then/RB/then do/VB/do back/RB/back tracking/NNP/tracking. in/IN/in this/DT/this case/NN/case we/PRP/we sort/NN/sort of/IN/of ;/:/; obviously/RB/obviously /,/, to/TO/to extend/VB/extend the/DT/the solution/NN/solution which/WDT/which is/VBZ/is to/TO/to pick/VB/pick the/DT/the vertex/NN/vertex a/DT/a minimum/JJ/minimum degree/NN/degree it/PRP/it works/NNP/works. we/PRP/we will/MD/will see/VB/see many/JJ/many examples/NNS/examples where/WRB/where simple/JJ/simple things/NNS/things are/VBP/are not/RB/not working/NNP/working. there/RB/there is/VBZ/is yet/RB/yet another/DT/another way/NN/way of/IN/of looking/VBG/looking at/IN/at this/DT/this algorithm/NN/algorithm which/WDT/which i/PRP/i would/MD/would like/VB/like to/TO/to describe/NNP/describe. this/DT/this is/VBZ/is a/DT/a bit/NN/bit more/RBR/more general/JJ/general than/IN/than what/WP/what we/PRP/we have/VBP/have studied/VBN/studied and/CC/and this/DT/this is/VBZ/is the/DT/the sort/NN/sort of/IN/of exchange/NN/exchange trick/NN/trick i/PRP/i promised/VBD/promised which/WDT/which we/PRP/we will/MD/will use/VB/use over/IN/over and/CC/and over/IN/over again/NNP/again. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 28/CD/28 /CD/) so/RB/so /,/, another/DT/another way/NN/way to/TO/to come/VB/come up/RP/up with/IN/with the/DT/the same/JJ/same algorithm/NNP/algorithm. so/IN/so /,/, let/VB/let us/PRP/us take/VB/take an/DT/an example/NN/example to/TO/to each/NNP/each. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is a/DT/a tree/NN/tree ;/:/; tree/NN/tree in/IN/in question/NN/question and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to pick/VB/pick a/DT/a maximum/NN/maximum independent/NN/independent set/NN/set in/IN/in this/DT/this tree/NNP/tree. supposing/NN/supposing you/PRP/you have/VB/have some/DT/some subset/NN/subset which/WDT/which is/VBZ/is an/DT/an independent/JJ/independent set/NNP/set. let/NN/let us/PRP/us say/VBP/say this/DT/this and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm has/VBZ/has not/RB/not picked/NNP/picked. this/DT/this is/VBZ/is just/RB/just to/TO/to sort/VB/sort of/IN/of get/NN/get your/PRP$/your thinking/NN/thinking process/NN/process going/NNP/going. supposing/NN/supposing you/PRP/you have/VB/have you/PRP/you have/VB/have let/VBN/let us/PRP/us say/VBP/say somebody/NN/somebody gives/NNS/gives you/PRP/you an/DT/an independent/JJ/independent set/NN/set this/DT/this is/VBZ/is an/DT/an independent/JJ/independent set/NN/set somebody/NN/somebody gives/VBZ/gives you/PRP/you this/DT/this independent/JJ/independent set/NNP/set. so/RB/so /,/, the/DT/the question/NN/question is/VBZ/is when/WRB/when can/MD/can i/VB/i exchange/NN/exchange can/MD/can i/VB/i sort/NN/sort of/IN/of add/NN/add and/CC/and subtract/NN/subtract to/TO/to this/DT/this solution/NN/solution to/TO/to increase/VB/increase the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in the/DT/the independent/JJ/independent set/NN/set ?/./? can/MD/can i/VB/i add/JJ/add and/CC/and subtract/NN/subtract to/TO/to this/DT/this solution/NN/solution to/TO/to increase/VB/increase the/DT/the size/NN/size of/IN/of the/DT/the independent/JJ/independent set/NN/set ?/./? well/RB/well /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this here/RB/here i/PRP/i can/MD/can add/VB/add these/DT/these 2/CD/2 and/CC/and remove/VB/remove this/DT/this i/PRP/i can/MD/can add/VB/add these/DT/these 2/CD/2 and/CC/and remove/VB/remove this/NNP/this. from/IN/from this/DT/this example/NN/example actually/RB/actually its/PRP$/its look/NN/look like/IN/like i/PRP/i can/MD/can always/RB/always do/VB/do this/DT/this with/IN/with leaves/NNS/leaves the/DT/the sense/NN/sense that/IN/that i/PRP/i can/MD/can add/VB/add these/DT/these two/CD/two and/CC/and remove/VB/remove this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a natural/JJ/natural way/NN/way to/TO/to lead/VB/lead on/IN/on to/TO/to the/DT/the question/NN/question will/MD/will leaves/NNS/leaves always/RB/always do/VBP/do all/DT/all leaves/NNS/leaves always/RB/always fall/VBP/fall in/IN/in some/DT/some optimum/NN/optimum independent/NN/independent set/NNP/set. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the question/NN/question we/PRP/we would/MD/would like/VB/like to/TO/to answer/VB/answer and/CC/and you/PRP/you can/MD/can see/VB/see the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes why/WRB/why is/VBZ/is the/DT/the answer/NN/answer yes/VBZ/yes ?/./? well/RB/well /,/, supposing/VBG/supposing this/DT/this is/VBZ/is the/DT/the lets/NNS/lets say/VBP/say this/DT/this is/VBZ/is the/DT/the tree/NN/tree this/DT/this is/VBZ/is any/DT/any tree/NN/tree and/CC/and i/PRP/i have/VBP/have a/DT/a leaf/NN/leaf here/NNP/here. i/PRP/i have/VBP/have any/DT/any tree/NN/tree and/CC/and i/PRP/i have/VBP/have a/DT/a leaf/NNP/leaf. well/RB/well /,/, what/WDT/what i/PRP/i can/MD/can say/VB/say well/RB/well /,/, one/CD/one of/IN/of these/DT/these 2/CD/2 better/RBR/better be/VB/be in/IN/in the/DT/the independent/JJ/independent set/NNP/set. in/IN/in the/DT/the optimum/NN/optimum independent/NN/independent set/NN/set one/CD/one of/IN/of these/DT/these better/JJR/better be/VB/be in/IN/in /,/, because/IN/because if/IN/if this/DT/this is/VBZ/is not/RB/not in/IN/in i/PRP/i can/MD/can always/RB/always put/VB/put the/DT/the leaf/NN/leaf in/IN/in into/IN/into an/DT/an independent/JJ/independent set/NNP/set. so/RB/so /,/, one/CD/one of/IN/of them/PRP/them always/RB/always has/VBZ/has to/TO/to be/VB/be in/IN/in the/DT/the maximum/NN/maximum independent/NN/independent set/NNP/set. well/RB/well /,/, supposing/VBG/supposing i/PRP/i have/VBP/have this/DT/this in/IN/in the/DT/the independent/JJ/independent set/NN/set and/CC/and this/DT/this is/VBZ/is not/RB/not /:/( /:/( refer/NN/refer time/NN/time /:/: 25/CD/25 /:/: 07/CD/07 /CD/) /CD/) and/CC/and then/RB/then you/PRP/you notice/NN/notice that/WDT/that i/PRP/i can/MD/can remove/VB/remove this/DT/this from/IN/from the/DT/the independent/JJ/independent set/NN/set and/CC/and put/VBD/put the/DT/the leaf/NN/leaf in/NNP/in. the/DT/the size/NN/size of/IN/of the/DT/the independent/JJ/independent set/NN/set does/VBZ/does not/RB/not change/NNP/change. the/DT/the set/NN/set still/RB/still remains/VBZ/remains independent/JJ/independent and/CC/and the/DT/the size/NN/size of/IN/of the/DT/the independent/JJ/independent set/NN/set does/VBZ/does not/RB/not change/NNP/change. i/PRP/i have/VBP/have picked/VBN/picked one/CD/one element/NN/element out/IN/out and/CC/and i/PRP/i have/VBP/have put/VBN/put a/DT/a element/NN/element in/IN/in and/CC/and the/DT/the size/NN/size does/VBZ/does not/RB/not change/VB/change and/CC/and this/DT/this is/VBZ/is the/DT/the exchange/NN/exchange which/WDT/which we/PRP/we did/VBD/did earlier/RBR/earlier on/IN/on when/WRB/when we/PRP/we tried/VBD/tried to/TO/to increase/VB/increase the/DT/the size/NN/size of/IN/of the/DT/the independent/JJ/independent set/NNP/set. so/RB/so /,/, this/DT/this in/IN/in fact/NN/fact /,/, is/VBZ/is a/DT/a one/CD/one line/NN/line proof/IN/proof all/DT/all leaves/NNS/leaves must/MD/must be/VB/be in/IN/in you/PRP/you know/VBP/know in/IN/in some/DT/some optimum/NN/optimum independent/NN/independent set/NNP/set. so/RB/so /,/, you/PRP/you can/MD/can start/VB/start of/IN/of by/IN/by putting/NN/putting all/DT/all leaves/NNS/leaves into/IN/into the/DT/the independent/JJ/independent set/NN/set you/PRP/you know/VBP/know there/RB/there is/VBZ/is an/DT/an optimum/NN/optimum which/WDT/which contains/VBZ/contains these/DT/these remove/JJ/remove their/PRP$/their neighbors/NNS/neighbors now/RB/now /,/, you/PRP/you can/MD/can recurse/NNP/recurse. this/DT/this is/VBZ/is the/DT/the good/JJ/good thing/NN/thing with/IN/with greedy/JJ/greedy algorithm/NNP/algorithm. if/IN/if you/PRP/you pick/VBP/pick a/DT/a part/NN/part of/IN/of the/DT/the output/NN/output then/RB/then you/PRP/you have/VB/have a/DT/a smaller/JJR/smaller input/NN/input to/TO/to deal/VB/deal with/IN/with and/CC/and you/PRP/you can/MD/can just/RB/just apply/RB/apply the/DT/the same/JJ/same technique/NN/technique over/IN/over and/CC/and over/IN/over again/RB/again and/CC/and the/DT/the proof/NN/proof follows/VBZ/follows by/IN/by induction/NNP/induction. in/IN/in fact/NN/fact /,/, the/DT/the algorithm/NN/algorithm also/RB/also is/VBZ/is inductive/JJ/inductive you/PRP/you can/MD/can right/RB/right it/PRP/it as/IN/as a/DT/a recursive/JJ/recursive algorithm/NN/algorithm you/PRP/you move/VB/move part/NN/part of/IN/of the/DT/the output/NNP/output. now/RB/now /,/, you/PRP/you have/VBP/have a/DT/a modified/VBN/modified input/NN/input on/IN/on which/WDT/which to/TO/to work/VB/work on/IN/on and/CC/and /CD/( /CD/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 23/CD/23 /CD/) /CD/) /./. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the algorithm/NN/algorithm for/IN/for this/DT/this problem/NN/problem we/PRP/we move/VBP/move put/VBN/put all/DT/all the/DT/the leaves/NNS/leaves in/IN/in the/DT/the optimum/NN/optimum independent/NN/independent set/NN/set remove/NN/remove their/PRP$/their neighbors/NNP/neighbors. the/DT/the tree/NN/tree will/MD/will now/RB/now break/VB/break into/IN/into many/JJ/many parts/NNS/parts and/CC/and you/PRP/you just/RB/just recurs/VBZ/recurs in/IN/in each/DT/each part/NNP/part. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the algorithm/NN/algorithm for/IN/for this/DT/this problem/NNP/problem. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the next/JJ/next problem/NNP/problem. so/RB/so /,/, imagine/NN/imagine that/IN/that you/PRP/you are/VBP/are the/DT/the systems/NNS/systems are/VBP/are your/PRP$/your administering/NN/administering a/DT/a system/NNP/system. let/NN/let us/PRP/us say/VBP/say you/PRP/you have/VBP/have one/CD/one really/RB/really fancy/NN/fancy computer/NN/computer at/IN/at your/PRP$/your command/NN/command and/CC/and a/DT/a lot/NN/lot of/IN/of people/NNS/people want/VBP/want to/TO/to use/VB/use it/NNP/it. so/RB/so /,/, they/PRP/they come/VBP/come and/CC/and give/VB/give you/PRP/you one/CD/one so/RB/so /,/, you/PRP/you have/VBP/have a/DT/a 24/CD/24 hour/NN/hour sort/NN/sort of/IN/of time/NN/time slot/NN/slot in/IN/in which/WDT/which to/TO/to schedule/VB/schedule them/PRP/them and/CC/and they/PRP/they give/VBP/give you/PRP/you each/DT/each of/IN/of them/PRP/them comes/VBZ/comes and/CC/and give/JJ/give you/PRP/you a/DT/a time/NN/time slot/NNP/slot. somebody/NN/somebody comes/VBZ/comes and/CC/and says/VBZ/says 3/CD/3 am/NN/am to/TO/to 5/CD/5 am/NN/am /,/, somebody/NN/somebody else/RB/else says/VBZ/says 2/CD/2 pm/NN/pm to/TO/to 7/CD/7 pm/NN/pm these/DT/these intervals/NNS/intervals could/MD/could vary/NNP/vary. somebody/NN/somebody could/MD/could 12/CD/12 /:/: 30/CD/30 /,/, 12/CD/12 /:/: 31/CD/31 pm/NN/pm to/TO/to 12/CD/12 /:/: 32/CD/32 pm/NN/pm 1.05/CD/1.05 am/NN/am to/TO/to 3.51/CD/3.51 pm/NN/pm and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, they/PRP/they give/VBP/give you/PRP/you sort/NN/sort of/IN/of intervals/NNP/intervals. each/DT/each person/NN/person gives/VBZ/gives you/PRP/you exactly/RB/exactly 1/CD/1 interval/NNP/interval. we/PRP/we can/MD/can not/RB/not spread/VB/spread his/PRP$/his job/NN/job we/PRP/we can/MD/can not/RB/not each/VB/each day/NN/day he/PRP/he has/VBZ/has just/RB/just one/CD/one interval/NN/interval in/IN/in which/WDT/which he/PRP/he can/MD/can work/VB/work we/PRP/we can/MD/can give/VB/give 1/CD/1 interval/NNP/interval. so/RB/so /,/, many/JJ/many people/NNS/people come/VBP/come and/CC/and they/PRP/they give/VBP/give you/PRP/you intervals/NNS/intervals in/IN/in which/WDT/which they/PRP/they would/MD/would like/VB/like to/TO/to occupy/VB/occupy this/DT/this machine/NNP/machine. and/CC/and they/PRP/they do/VBP/do not/RB/not want/VB/want shorter/NN/shorter intervals/NNS/intervals they/PRP/they wanted/VBD/wanted for/IN/for their/PRP$/their entire/JJ/entire duration/NN/duration which/WDT/which they/PRP/they have/VBP/have asked/VBN/asked for/NNP/for. your/PRP$/your job/NN/job is/VBZ/is to/TO/to pick/VB/pick these/DT/these intervals/NNS/intervals some/DT/some intervals/NNS/intervals essentially/RB/essentially schedule/JJ/schedule people/NNS/people on/IN/on this/DT/this machine/NNP/machine. so/RB/so /,/, that/IN/that firstly/RB/firstly /,/, at/IN/at each/DT/each time/NN/time just/RB/just 1/CD/1 person/NN/person on/IN/on the/DT/the machine/NN/machine 2/CD/2 people/NNS/people can/MD/can not/RB/not work/VB/work on/IN/on the/DT/the machine/NN/machine and/CC/and the/DT/the second/JJ/second thing/NN/thing is/VBZ/is maximum/NN/maximum number/NN/number of/IN/of people/NNS/people get/VBP/get to/TO/to use/VB/use the/DT/the machine/NN/machine in/IN/in a/DT/a 24/CD/24 hour/NN/hour slot/NN/slot there/EX/there is/VBZ/is a/DT/a 24/CD/24 hour/NN/hour slot/NNP/slot. your/PRP$/your objective/NN/objective final/JJ/final objective/NN/objective is/VBZ/is maximum/NN/maximum number/NN/number of/IN/of people/NNS/people get/VBP/get to/TO/to use/VB/use the/DT/the machine/NNP/machine. it/PRP/it should/MD/should not/RB/not your/PRP$/your policy/NN/policy should/MD/should not/RB/not be/VB/be dictated/VBN/dictated on/IN/on by/IN/by any/DT/any other/JJ/other /NN/( /:/( refer/NN/refer time/NN/time /:/: 28/CD/28 /:/: 58/CD/58 /CD/) /CD/) like/IN/like the/DT/the amount/NN/amount of/IN/of money/NN/money they/PRP/they are/VBP/are willing/JJ/willing to/TO/to give/VB/give you/PRP/you etcetera/NNP/etcetera. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 17/CD/17 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the /,/, an/DT/an abstract/NN/abstract sort/NN/sort of/IN/of origin/NN/origin of/IN/of this/DT/this problem/NN/problem you/PRP/you are/VBP/are given/VBN/given a/DT/a set/NN/set of/IN/of intervals/NNS/intervals so/IN/so /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a set/NN/set of/IN/of intervals/NNP/intervals. you/PRP/you can/MD/can take/VB/take them/PRP/them as/IN/as closed/VBD/closed intervals/NNS/intervals if/IN/if you/PRP/you want/NNP/want. the/DT/the output/NN/output is/VBZ/is a/DT/a subset/NN/subset of/IN/of non/NN/non overlapping/VBG/overlapping intervals/NNS/intervals of/IN/of maximum/NN/maximum size/NNP/size. you/PRP/you must/MD/must output/VB/output a/DT/a subset/NN/subset of/IN/of non/NN/non overlapping/VBG/overlapping intervals/NNS/intervals with/IN/with maximum/NN/maximum size/NNP/size. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what this/DT/this looks/VBZ/looks like/NNP/like. so/RB/so /,/, here/RB/here is/VBZ/is let/VBN/let us/PRP/us say/VBP/say this/DT/this is/VBZ/is 0/-NONE-/0 to/TO/to 24/CD/24 hours/NNS/hours so/IN/so /,/, the/DT/the input/NN/input looks/VBZ/looks like/IN/like here/RB/here is/VBZ/is an/DT/an interval/NNP/interval. so/RB/so /,/, people/NNS/people give/VBP/give you/PRP/you various/JJ/various intervals/NNS/intervals some/DT/some of/IN/of them/PRP/them should/MD/should overlap/NNP/overlap. all/DT/all kind/NN/kind of/IN/of funny/JJ/funny ways/NNS/ways 2/CD/2 people/NNS/people may/MD/may want/VB/want the/DT/the same/JJ/same thing/NN/thing that/WDT/that is/VBZ/is also/RB/also possible/JJ/possible and/CC/and so/RB/so on/NNP/on. so/IN/so this/DT/this is/VBZ/is how/WRB/how the/DT/the input/NN/input looks/VBZ/looks like/NNP/like. so/RB/so /,/, this/DT/this is/VBZ/is person/NN/person a/DT/a b/NN/b q/NN/q z/NN/z each/DT/each person/NN/person gives/VBZ/gives you/PRP/you an/DT/an interval/NN/interval and/CC/and you/PRP/you have/VBP/have to/TO/to pick/VB/pick a/DT/a subset/NN/subset of/IN/of this/DT/this intervals/NNP/intervals. so/RB/so /,/, that/IN/that they/PRP/they do/VBP/do not/RB/not overlap/NNP/overlap. so/RB/so /,/, if/IN/if i/PRP/i pick/VBP/pick a/DT/a i/PRP/i can/MD/can not/RB/not pick/VB/pick q/NNP/q. i/PRP/i can/MD/can pick/VB/pick b/NN/b /,/, but/CC/but i/PRP/i can/MD/can not/RB/not pick/VB/pick q/NN/q and/CC/and i/PRP/i want/VBP/want to/TO/to pick/VB/pick a/DT/a maximum/NN/maximum number/NN/number of/IN/of these/DT/these intervals/NNS/intervals we/PRP/we said/VBD/said that/IN/that i/PRP/i want/VBP/want to/TO/to subset/VB/subset on/IN/on these/DT/these intervals/NNS/intervals which/WDT/which is/VBZ/is of/IN/of maximum/NN/maximum size/NNP/size. so/RB/so /,/, that/IN/that if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the intervals/NNS/intervals in/IN/in the/DT/the subset/NN/subset they/PRP/they do/VBP/do not/RB/not overlap/NNP/overlap. so/RB/so /,/, a/DT/a solution/NN/solution to/TO/to this/DT/this we/PRP/we will/MD/will see/VB/see in/IN/in the/DT/the in/IN/in the/DT/the next/JJ/next class/NNP/class. so/RB/so /,/, given/VBN/given a/DT/a set/NN/set of/IN/of intervals/NNS/intervals you/PRP/you want/VBP/want a/DT/a subset/NN/subset of/IN/of overlapping/VBG/overlapping intervals/NNS/intervals of/IN/of maximum/NN/maximum size/NN/size our/PRP$/our maximum/NN/maximum size/NN/size i/PRP/i mean/VBP/mean the/DT/the subset/NN/subset of/IN/of maximum/NN/maximum size/NNP/size. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the subset/NN/subset which/WDT/which means/VBZ/means number/NN/number of/IN/of intervals/NNS/intervals in/IN/in the/DT/the subset/NN/subset that/IN/that should/MD/should be/VB/be maximum/NNP/maximum. for/IN/for instance/NN/instance here/RB/here i/PRP/i can/MD/can if/IN/if i/PRP/i can/MD/can take/VB/take 4/CD/4 intervals/NNS/intervals then/RB/then that/IN/that are/VBP/are better/RBR/better than/IN/than picking/VBG/picking 3/CD/3 intervals/NNP/intervals. even/RB/even though/IN/though the/DT/the 3/CD/3 intervals/NNS/intervals may/MD/may be/VB/be longer/RBR/longer that/IN/that is/VBZ/is not/RB/not our/PRP$/our goal/NN/goal our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to pick/VB/pick numbers/NNS/numbers just/RB/just numbers/NNP/numbers. as/IN/as many/JJ/many intervals/NNS/intervals that/WDT/that i/PRP/i can/MD/can schedule/VB/schedule you/PRP/you should/MD/should pick/VB/pick that/IN/that is/VBZ/is the/DT/the problem/NNP/problem. so/RB/so /,/, the/DT/the problem/NN/problem you/PRP/you are/VBP/are solving/VBG/solving is/VBZ/is this/NNP/this. the/DT/the input/NN/input in/IN/in a/DT/a set/NN/set of/IN/of intervals/NNS/intervals and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to pick/VB/pick a/DT/a maximum/NN/maximum number/NN/number of/IN/of them/NNP/them. so/RB/so /,/, that/IN/that pair/JJ/pair wise/NN/wise they/PRP/they do/VBP/do not/RB/not overlap/NNP/overlap. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take 2/CD/2 intervals/NNS/intervals they/PRP/they do/VBP/do not/RB/not overlap/VB/overlap they/PRP/they are/VBP/are separating/NNP/separating. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/DT/this ?/./? well/RB/well /,/, greedy/JJ/greedy technique/NN/technique the/DT/the so/RB/so /,/, called/VBN/called greedy/NN/greedy technique/NN/technique says/VBZ/says builds/NNS/builds a/DT/a solution/NN/solution piece/NN/piece by/IN/by piece/NNP/piece. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to build/VB/build the/DT/the optimum/NN/optimum solution/NN/solution interval/NN/interval by/IN/by interval/NNP/interval. so/RB/so /,/, which/WDT/which interval/NN/interval would/MD/would you/PRP/you pick/VB/pick first/JJ/first which/WDT/which interval/NN/interval can/MD/can you/PRP/you say/VB/say in/IN/in lie/NN/lie in/IN/in some/DT/some optimum/NN/optimum solution/NN/solution which/WDT/which is/VBZ/is what/WP/what does/VBZ/does your/PRP$/your intuition/NN/intuition say/NNP/say. well/RB/well /,/, i/PRP/i want/VBP/want you/PRP/you want/VBP/want to/TO/to pick/VB/pick intervals/NNP/intervals. so/RB/so /,/, that/IN/that a/DT/a large/JJ/large number/NN/number of/IN/of intervals/NNP/intervals. so/RB/so /,/, intuition/NN/intuition i/PRP/i think/VBP/think the/DT/the first/JJ/first thing/NN/thing that/WDT/that sort/NN/sort of/IN/of strikes/NNS/strikes you/PRP/you is/VBZ/is that/IN/that if/IN/if i/PRP/i pick/VBP/pick intervals/NNS/intervals in/IN/in small/JJ/small size/NNP/size. so/RB/so /,/, that/IN/that the/DT/the span/NN/span is/VBZ/is small/JJ/small maybe/NN/maybe i/PRP/i can/MD/can pick/VB/pick a/DT/a large/JJ/large number/NN/number of/IN/of them/NNP/them. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 33/CD/33 /CD/) so/RB/so /,/, let/VB/let us/PRP/us consider/JJR/consider this/NNP/this. let/NN/let us/PRP/us call/VBP/call this/DT/this algorithm/NN/algorithm 1/CD/1 pick/NN/pick intervals/NNS/intervals interval/NN/interval of/IN/of smallest/JJS/smallest size/NN/size smallest/NN/smallest span/NN/span let/NN/let us/PRP/us say/VBP/say this/DT/this span/NN/span or/CC/or the/DT/the interval/NNP/interval. suppose/NN/suppose the/DT/the interval/NN/interval is/VBZ/is let/VBN/let us/PRP/us say/VBP/say goes/VBZ/goes from/IN/from a/DT/a to/TO/to b/VB/b ;/:/; b/NN/b minus/NN/minus a/DT/a is/VBZ/is the/DT/the span/NN/span of/IN/of the/DT/the interval/NNP/interval. so/RB/so /,/, pick/NN/pick the/DT/the smallest/JJS/smallest interval/NN/interval with/IN/with smallest/JJS/smallest span/NNP/span. well/RB/well /,/, smallest/VBP/smallest length/NN/length is/VBZ/is the/DT/the one/CD/one which/WDT/which you/PRP/you want/NNP/want. this/DT/this seems/VBZ/seems to/TO/to be/VB/be a/DT/a reasonable/JJ/reasonable algorithm/NNP/algorithm. this/DT/this is/VBZ/is what/WP/what perhaps/RB/perhaps intuition/NN/intuition suggests/VBZ/suggests /,/, but/CC/but this/DT/this intuition/NN/intuition is/VBZ/is faulty/NNP/faulty. it/PRP/it is/VBZ/is very/RB/very easy/JJ/easy to/TO/to construct/VB/construct examples/NNS/examples where/WRB/where this/DT/this algorithm/NN/algorithm fails/NNP/fails. here/RB/here is/VBZ/is on/IN/on here/RB/here is/VBZ/is an/DT/an example/NN/example where/WRB/where the/DT/the algorithm/NN/algorithm fails/NNP/fails. well/RB/well /,/, let/VB/let us/PRP/us take/VB/take a/DT/a small/JJ/small interval/NN/interval then/RB/then take/VB/take 2/CD/2 large/JJ/large intervals/NNS/intervals that/WDT/that intersect/NN/intersect us/PRP/us the/DT/the algorithm/NN/algorithm says/VBZ/says pick/NN/pick this/DT/this one/NNP/one. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the input/NN/input ;/:/; this/DT/this 3/CD/3 intervals/NNS/intervals form/NN/form the/DT/the input/NNP/input. the/DT/the algorithm/NN/algorithm says/VBZ/says pick/NN/pick this/DT/this once/NN/once you/PRP/you pick/VBP/pick this/DT/this you/PRP/you can/MD/can not/RB/not pick/VB/pick these/DT/these 2/CD/2 fellows/NNP/fellows. clearly/RB/clearly optimum/NN/optimum consists/NNS/consists of/IN/of picking/VBG/picking these/DT/these 2/CD/2 big/JJ/big fellows/NNS/fellows these/DT/these 2/CD/2 big/JJ/big intervals/NNP/intervals. the/DT/the optimum/NN/optimum has/VBZ/has value/NN/value 2/CD/2 value/NN/value of/IN/of this/DT/this picked/VBN/picked one/NNP/one. so/RB/so /,/, here/RB/here the/DT/the first/JJ/first sort/NN/sort of/IN/of first/JJ/first thing/NN/thing that/WDT/that you/PRP/you can/MD/can try/VB/try fails/NNP/fails. so/RB/so /,/, picking/VBG/picking the/DT/the interval/NN/interval of/IN/of smallest/JJS/smallest length/NN/length not/RB/not fails/NNP/fails. well/RB/well /,/, let/VB/let me/PRP/me think/VBP/think a/DT/a bit/NN/bit more/NNP/more. now/RB/now /,/, we/PRP/we start/VBP/start thinking/VBG/thinking a/DT/a bit/NN/bit more/RBR/more what/WP/what else/RB/else could/MD/could work/VB/work here/NNP/here. if/IN/if you/PRP/you look/VBP/look at/IN/at this/DT/this example/NN/example /,/, this/DT/this small/JJ/small even/RB/even though/IN/though this/DT/this interval/NN/interval is/VBZ/is small/JJ/small it/PRP/it overlaps/VBZ/overlaps 2/CD/2 of/IN/of them/PRP/them while/IN/while these/DT/these big/JJ/big ones/NNS/ones even/RB/even they/PRP/they are/VBP/are big/JJ/big they/PRP/they overlap/VBP/overlap only/RB/only 1/CD/1. so/RB/so /,/, may/MD/may be/VB/be the/DT/the right/NN/right thing/NN/thing to/TO/to do/VB/do is/VBZ/is to/TO/to pick/VB/pick interval/NN/interval that/WDT/that overlaps/VBZ/overlaps with/IN/with smallest/JJS/smallest number/NN/number of/IN/of intervals/NNP/intervals. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 45/CD/45 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the algorithm/NN/algorithm 2/CD/2 ;/:/; pick/NN/pick the/DT/the interval/NN/interval with/IN/with which/WDT/which overlaps/NNS/overlaps the/DT/the smallest/JJS/smallest overlaps/NNS/overlaps with/IN/with the/DT/the smallest/JJS/smallest number/NN/number of/IN/of intervals/NNP/intervals. so/RB/so /,/, you/PRP/you see/VBP/see that/IN/that the/DT/the first/JJ/first algorithm/NN/algorithm fails/NNS/fails you/PRP/you construct/VBP/construct an/DT/an example/NN/example where/WRB/where the/DT/the algorithm/NN/algorithm fails/VBZ/fails and/CC/and here/RB/here is/VBZ/is an/DT/an algorithm/NN/algorithm that/IN/that at/IN/at least/JJS/least works/NNS/works on/IN/on that/DT/that example/NNP/example. it/PRP/it seems/VBZ/seems fairly/RB/fairly reasonable/JJ/reasonable also/RB/also that/IN/that you/PRP/you pick/VBP/pick an/DT/an interval/NN/interval which/WDT/which overlaps/NNS/overlaps the/DT/the smaller/NNP/smaller. so/RB/so /,/, when/WRB/when i/PRP/i pick/VBP/pick this/DT/this interval/NN/interval i/PRP/i throw/VBP/throw away/RB/away the/DT/the smallest/JJS/smallest number/NN/number of/IN/of intervals/NNP/intervals. i/PRP/i pick/VBP/pick an/DT/an interval/NN/interval i/PRP/i throw/VBP/throw away/RB/away the/DT/the smallest/JJS/smallest number/NN/number of/IN/of intervals/NNS/intervals and/CC/and now/RB/now /,/, i/PRP/i recurse/NNP/recurse. once/RB/once i/PRP/i pick/VBP/pick an/DT/an interval/NN/interval every/DT/every interval/NN/interval that/IN/that overlaps/NNS/overlaps with/IN/with this/DT/this interval/NN/interval i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to pick/NNP/pick. so/RB/so /,/, i/PRP/i throw/VBP/throw those/DT/those away/RB/away and/CC/and i/PRP/i recurse/VBP/recurse this/DT/this should/MD/should look/VB/look very/RB/very familiar/JJ/familiar to/TO/to the/DT/the previous/JJ/previous problem/NNP/problem. there/RB/there you/PRP/you pick/VBP/pick vertex/NN/vertex throw/NN/throw away/RB/away its/PRP$/its neighbors/NNS/neighbors and/CC/and go/VB/go forward/NNP/forward. here/RB/here you/PRP/you pick/VBP/pick an/DT/an interval/NN/interval throw/NN/throw away/RB/away the/DT/the intervals/NNS/intervals with/IN/with which/WDT/which this/DT/this overlaps/VBZ/overlaps and/CC/and you/PRP/you proceed/VBD/proceed forward/NNP/forward. well/RB/well /,/, they/PRP/they are/VBP/are extremely/RB/extremely closely/RB/closely related/NNP/related. in/IN/in fact/NN/fact /,/, we/PRP/we could/MD/could form/VB/form a/DT/a graph/NN/graph right/RB/right here/NNP/here. for/IN/for an/DT/an interval/NN/interval you/PRP/you have/VB/have for/IN/for each/DT/each interval/NN/interval i/PRP/i can/MD/can you/PRP/you can/MD/can have/VB/have an/DT/an vertex/NN/vertex and/CC/and 2/CD/2 there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between two/CD/two vertices/NNS/vertices if/IN/if the/DT/the intervals/NNS/intervals overlap/NNP/overlap. then/RB/then all/DT/all you/PRP/you are/VBP/are doing/VBG/doing for/IN/for this/DT/this problem/NN/problem is/VBZ/is picking/VBG/picking an/DT/an independent/JJ/independent set/NN/set of/IN/of maximum/NN/maximum size/NN/size in/IN/in this/DT/this graph/NNP/graph. the/DT/the way/NN/way you/PRP/you get/VBP/get the/DT/the graph/NN/graph is/VBZ/is for/IN/for each/DT/each interval/NN/interval you/PRP/you have/VB/have a/DT/a vertex/NN/vertex and/CC/and you/PRP/you join/VBP/join 2/CD/2 vertices/NNS/vertices in/IN/in the/DT/the intervals/NNS/intervals overlap/VBP/overlap and/CC/and you/PRP/you are/VBP/are picking/VBG/picking an/DT/an independent/JJ/independent set/NN/set of/IN/of maximum/NN/maximum size/NN/size that/WDT/that is/VBZ/is what/WP/what the/DT/the problem/NN/problem is/NNP/is. this/DT/this is/VBZ/is an/DT/an independent/JJ/independent set/NN/set of/IN/of maximum/NN/maximum size/NNP/size. so/RB/so /,/, like/IN/like in/IN/in the/DT/the previous/JJ/previous case/NN/case why/WRB/why not/RB/not pick/VB/pick a/DT/a vertex/NN/vertex with/IN/with smallest/JJS/smallest degree/NNP/degree. that/IN/that is/VBZ/is what/WP/what this/DT/this is/VBZ/is an/DT/an interval/NN/interval with/IN/with minimum/JJ/minimum overlap/NN/overlap minimum/NN/minimum number/NN/number of/IN/of intervals/NNS/intervals that/WDT/that it/PRP/it overlaps/VBZ/overlaps is/VBZ/is nothing/NN/nothing /,/, but/CC/but a/DT/a vertex/NN/vertex of/IN/of smallest/JJS/smallest degree/NN/degree in/IN/in this/DT/this graph/NNP/graph. so/RB/so /,/, pick/NN/pick a/DT/a vertex/NN/vertex of/IN/of smallest/JJS/smallest degree/NN/degree then/RB/then you/PRP/you get/VBP/get its/PRP$/its neighbors/NNS/neighbors and/CC/and recurse/VB/recurse while/IN/while i/PRP/i have/VBP/have written/VBN/written just/RB/just one/CD/one sentence/NN/sentence there/RB/there is/VBZ/is a/DT/a recursion/NN/recursion going/VBG/going on/NNP/on. you/PRP/you pick/VBP/pick this/DT/this you/PRP/you pick/VBP/pick an/DT/an interval/NN/interval of/IN/of smallest/JJS/smallest degree/NN/degree throughout/IN/throughout all/DT/all the/DT/the intervals/NNS/intervals that/WDT/that it/PRP/it overlaps/NNP/overlaps. and/CC/and now/RB/now you/PRP/you recurse/VBP/recurse you/PRP/you again/RB/again pick/VBP/pick an/DT/an interval/NN/interval of/NNP/of. so/RB/so /,/, that/IN/that it/PRP/it overlaps/VBZ/overlaps the/DT/the smallest/JJS/smallest number/NN/number in/IN/in what/WP/what remains/VBZ/remains throughout/IN/throughout everything/NN/everything that/IN/that it/PRP/it overlaps/VBZ/overlaps and/CC/and so/RB/so /,/, on/IN/on and/CC/and continue/NNP/continue. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the algorithm/NN/algorithm does/VBZ/does it/PRP/it this/DT/this work/NN/work ?/./? well/RB/well /,/, it/PRP/it worked/VBD/worked in/IN/in the/DT/the previous/JJ/previous case/NNP/case. in/IN/in the/DT/the first/JJ/first problem/NN/problem this/DT/this worked/VBD/worked unfortunately/RB/unfortunately in/IN/in this/DT/this case/NN/case it/PRP/it does/VBZ/does not/RB/not work/NNP/work. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the example/NNP/example. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a bit/NN/bit more/RBR/more complicated/JJ/complicated the/DT/the example/NN/example now/RB/now /,/, which/WDT/which i/PRP/i have/VBP/have to/TO/to construct/NNP/construct. so/RB/so /,/, that/IN/that this/DT/this algorithm/NN/algorithm does/VBZ/does not/RB/not work/VB/work for/IN/for work/NN/work in/IN/in this/DT/this case/NN/case is/VBZ/is a/DT/a bit/NN/bit more/RBR/more complicated/NNP/complicated. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the example/NNP/example. so/RB/so /,/, far/RB/far it/PRP/it looks/VBZ/looks like/IN/like the/DT/the old/JJ/old 1/CD/1 we/PRP/we are/VBP/are going/VBG/going to/TO/to now/RB/now /,/, apply/RB/apply more/RBR/more intervals/NNS/intervals and/CC/and interval/NN/interval is/VBZ/is 2/CD/2. this/DT/this is/VBZ/is let/VB/let me/PRP/me it/PRP/it ends/VBZ/ends here/NNP/here. i/PRP/i do/VBP/do not/RB/not want/VB/want this/DT/this to/TO/to overlap/VB/overlap with/IN/with this/DT/this these/DT/these 2/CD/2 do/VBP/do not/RB/not overlap/VB/overlap with/IN/with each/DT/each other/NNP/other. well/RB/well /,/, similar/JJ/similar similarly/RB/similarly here/RB/here /,/, i/PRP/i can/MD/can have/VB/have many/JJ/many copies/NNS/copies let/VBP/let us/PRP/us say/VBP/say k/NN/k copies/NNP/copies. similarly/RB/similarly /,/, here/RB/here k/VBP/k copies/NNS/copies we/PRP/we can/MD/can have/VB/have many/JJ/many copies/NNP/copies. i/PRP/i just/RB/just want/VBP/want to/TO/to make/VB/make sure/JJ/sure that/IN/that this/DT/this interval/NN/interval does/VBZ/does not/RB/not overlap/VB/overlap with/IN/with those/NNP/those. let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this example/NNP/example. so/RB/so /,/, these/DT/these intervals/NNS/intervals there/RB/there are/VBP/are k/NN/k copies/NNS/copies of/IN/of these/DT/these intervals/NNP/intervals. so/RB/so /,/, each/DT/each interval/NN/interval overlaps/VBZ/overlaps with/IN/with you/PRP/you know/VBP/know k/NN/k minus/NN/minus 1/CD/1 over/IN/over here/RB/here and/CC/and 2/CD/2. so/RB/so /,/, k/NN/k plus/CC/plus 1/CD/1 intervals/NNS/intervals is/VBZ/is what/WP/what this/DT/this overlaps/NNP/overlaps. this/DT/this interval/NN/interval overlaps/VBZ/overlaps with/IN/with k/NN/k of/IN/of them/PRP/them this/DT/this interval/NN/interval overlaps/VBZ/overlaps with/IN/with k/NN/k plus/CC/plus 1/CD/1 this/DT/this similarly/RB/similarly /,/, these/DT/these are/VBP/are sort/NN/sort of/IN/of mirror/NN/mirror image/NNP/image. this/DT/this side/NN/side is/VBZ/is a/DT/a mirror/NN/mirror image/NN/image of/IN/of this/DT/this side/NNP/side. so/RB/so /,/, these/DT/these intervals/NNS/intervals have/VBP/have a/DT/a large/JJ/large overlap/NNP/overlap. the/DT/the smallest/JJS/smallest overlap/NN/overlap is/VBZ/is this/DT/this interval/NN/interval is/VBZ/is a/DT/a interval/NN/interval with/IN/with smallest/JJS/smallest overlap/NN/overlap with/IN/with smallest/JJS/smallest overlap/NNP/overlap. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is 2/CD/2 these/DT/these 2/CD/2. so/RB/so /,/, your/PRP$/your algorithm/NN/algorithm will/MD/will say/VB/say pick/NN/pick this/DT/this and/CC/and recurse/NNP/recurse. let/VB/let see/NN/see what/WP/what happens/NNS/happens when/WRB/when you/PRP/you pick/VBP/pick this/DT/this ?/./? so/RB/so /,/, when/WRB/when i/PRP/i pick/VBP/pick this/DT/this while/NN/while i/PRP/i will/MD/will throw/VB/throw away/RB/away these/DT/these 2/CD/2 /,/, because/IN/because these/DT/these 2/CD/2 overlap/NN/overlap with/IN/with this/NNP/this. so/RB/so /,/, now/RB/now /,/, i/PRP/i am/VBP/am left/VBN/left with/IN/with imagine/NN/imagine that/IN/that these/DT/these three/CD/three intervals/NNS/intervals have/VBP/have gone/NNP/gone. i/PRP/i am/VBP/am left/VBN/left with/IN/with this/DT/this side/NN/side these/DT/these intervals/NNS/intervals on/IN/on this/DT/this side/NNP/side. you/PRP/you can/MD/can say/VB/say that/IN/that i/PRP/i can/MD/can pick/VB/pick only/RB/only one/CD/one of/IN/of these/DT/these all/DT/all of/IN/of them/PRP/them pair/JJ/pair wise/NN/wise overlap/NNP/overlap. so/RB/so /,/, i/PRP/i can/MD/can pick/VB/pick only/RB/only one/CD/one of/IN/of these/DT/these i/PRP/i can/MD/can pick/VB/pick only/RB/only of/IN/of these/NNP/these. so/RB/so /,/, and/CC/and i/PRP/i have/VBP/have pick/JJ/pick any/DT/any one/NNP/one. it/PRP/it really/RB/really does/VBZ/does not/RB/not matter/VB/matter all/DT/all of/IN/of them/PRP/them have/VBP/have the/DT/the same/JJ/same degree/NNP/degree. so/IN/so /,/, the/DT/the solution/NN/solution size/NN/size of/IN/of the/DT/the solution/NN/solution i/PRP/i construct/VBP/construct is/VBZ/is 3/CD/3. the/DT/the number/NN/number of/IN/of intervals/NNS/intervals that/WDT/that i/PRP/i have/VBP/have picked/VBN/picked is/VBZ/is 3/CD/3 ;/:/; the/DT/the first/JJ/first interval/NN/interval that/WDT/that i/PRP/i have/VBP/have picked/VBN/picked interval/NN/interval with/IN/with the/DT/the smallest/JJS/smallest overlap/NN/overlap and/CC/and then/RB/then 2/CD/2 others/NNS/others after/IN/after 2/CD/2 others/NNP/others. well/RB/well /,/, if/IN/if you/PRP/you stare/VBP/stare in/IN/in this/DT/this paper/NN/paper a/DT/a bit/NN/bit more/RBR/more carefully/NNP/carefully. so/RB/so /,/, if/IN/if you/PRP/you stare/VBP/stare at/IN/at this/DT/this a/DT/a bit/NN/bit more/RBR/more carefully/RB/carefully you/PRP/you can/MD/can see/VB/see that/IN/that there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum which/WDT/which has/VBZ/has value/NN/value 4/CD/4 1/CD/1 2/CD/2 3/CD/3 4/CD/4. so/RB/so /,/, these/DT/these 4/CD/4 intervals/NNS/intervals do/VBP/do not/RB/not intersect/VB/intersect with/IN/with each/DT/each other/NNP/other. so/RB/so /,/, this/DT/this algorithm/NN/algorithm produced/VBN/produced this/DT/this i/PRP/i mean/VBP/mean 1/CD/1 2/CD/2 3/CD/3 sorry/NN/sorry 1/CD/1 2/CD/2 3/CD/3 intervals/NNS/intervals which/WDT/which do/VBP/do not/RB/not overlap/VB/overlap with/IN/with each/DT/each other/JJ/other on/IN/on the/DT/the other/JJ/other hand/NN/hand optimum/NN/optimum value/NN/value is/VBZ/is 4/CD/4 1/CD/1 2/CD/2 3/CD/3 4/CD/4. so/RB/so /,/, this/DT/this algorithm/NN/algorithm also/RB/also does/VBZ/does not/RB/not work/NNP/work. the/DT/the algorithm/NN/algorithm for/IN/for roughly/RB/roughly the/DT/the same/JJ/same kind/NN/kind of/IN/of problem/NN/problem as/IN/as the/DT/the previous/JJ/previous one/CD/one does/VBZ/does not/RB/not work/VB/work in/IN/in this/DT/this case/NN/case and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that constructing/VBG/constructing examples/NNS/examples become/VB/become harder/JJR/harder and/CC/and harder/NNP/harder. i/PRP/i mean/VBP/mean you/PRP/you can/MD/can come/VB/come up/RP/up with/IN/with really/RB/really complicated/VBN/complicated algorithms/NNS/algorithms for/IN/for which/WDT/which it/PRP/it will/MD/will be/VB/be it/PRP/it may/MD/may not/RB/not work/VB/work /,/, but/CC/but to/TO/to prove/VB/prove that/IN/that it/PRP/it does/VBZ/does not/RB/not work/VB/work you/PRP/you have/VB/have to/TO/to really/RB/really come/VBN/come up/RP/up with/IN/with all/DT/all kind/NN/kind of/IN/of complicated/JJ/complicated counter/NN/counter examples/NNP/examples. so/RB/so /,/, now/RB/now /,/, what/WDT/what do/VBP/do we/PRP/we do/VBP/do what/WP/what is/VBZ/is the/DT/the algorithm/NN/algorithm that/IN/that works/NNS/works ?/./? does/VBZ/does any/DT/any algorithm/NN/algorithm work/NN/work ?/./? well/RB/well /,/, what/WDT/what does/VBZ/does the/DT/the optimum/NN/optimum look/NN/look like/IN/like ?/./? what/WP/what is/VBZ/is the/DT/the picture/NN/picture of/IN/of the/DT/the optimum/NN/optimum ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 21/CD/21 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at this/NNP/this. so/RB/so /,/, it/PRP/it looks/VBZ/looks like/IN/like this/NNP/this. the/DT/the optimum/NN/optimum looks/VBZ/looks like/IN/like this/NNP/this. so/RB/so /,/, any/DT/any solution/NN/solution must/MD/must be/VB/be a/DT/a set/NN/set of/IN/of intervals/NNS/intervals that/WDT/that do/VBP/do no/DT/no overlap/NN/overlap with/IN/with each/DT/each other/NNP/other. so/RB/so /,/, they/PRP/they have/VBP/have to/TO/to look/VB/look like/IN/like this/NNP/this. now/RB/now /,/, the/DT/the exchange/NN/exchange trick/NN/trick what/WP/what is/VBZ/is the/DT/the exchange/NN/exchange trick/NN/trick here/RB/here what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by exchange/NN/exchange trick/NN/trick here/RB/here ?/./? well/RB/well /,/, can/MD/can i/PRP/i add/VB/add an/DT/an interval/NN/interval here/RB/here can/MD/can i/PRP/i add/VB/add an/DT/an interval/NN/interval to/TO/to this/DT/this solution/NN/solution well/RB/well /,/, certainly/RB/certainly if/IN/if i/PRP/i have/VBP/have space/NNP/space. supposing/VBG/supposing let/NN/let us/PRP/us say/VBP/say this/DT/this is/VBZ/is how/WRB/how the/DT/the solution/NN/solution looks/VBZ/looks like/NNP/like. i/PRP/i can/MD/can certainly/RB/certainly add/VB/add one/CD/one here/RB/here if/IN/if there/EX/there were/VBD/were one/NNP/one. supposing/NN/supposing these/DT/these spaces/NNS/spaces are/VBP/are filled/VBN/filled out/RP/out can/MD/can i/VB/i add/JJ/add i/PRP/i may/MD/may not/RB/not be/VB/be able/JJ/able to/TO/to add/VB/add /,/, but/CC/but can/MD/can i/PRP/i add/VB/add and/CC/and remove/VB/remove one/CD/one is/VBZ/is that/IN/that possible/JJ/possible ?/./? well/RB/well /,/, let/VB/let us/PRP/us see/VB/see supposing/VBG/supposing i/PRP/i add/VBP/add let/JJ/let us/PRP/us say/VBP/say add/JJ/add something/NN/something like/IN/like this/NNP/this. now/RB/now /,/, this/DT/this could/MD/could intersect/VB/intersect with/IN/with more/JJR/more than/IN/than 1/CD/1 intervals/NNP/intervals. it/PRP/it can/MD/can intersect/VB/intersect with/IN/with this/DT/this it/PRP/it could/MD/could intersect/VB/intersect with/IN/with well/RB/well /,/, it/PRP/it may/MD/may be/VB/be something/NN/something like/IN/like this/DT/this in/IN/in which/WDT/which case/NN/case adding/VBG/adding this/DT/this makes/VBZ/makes no/DT/no sense/NNP/sense. there/RB/there is/VBZ/is no/DT/no exchange/NN/exchange that/IN/that sort/NN/sort of/IN/of you/PRP/you know/VBP/know keep/VB/keep you/PRP/you going/VBG/going i/PRP/i can/MD/can not/RB/not exchange/VB/exchange this/DT/this with/IN/with some/DT/some others/NNP/others. i/PRP/i mean/VBP/mean if/IN/if i/PRP/i exchange/VBP/exchange this/DT/this then/RB/then i/PRP/i need/VBP/need to/TO/to remove/VB/remove more/JJR/more than/IN/than one/CD/one and/CC/and the/DT/the size/NN/size of/IN/of the/DT/the optimum/NN/optimum falls/NNP/falls. is/VBZ/is there/RB/there an/DT/an interval/NN/interval that/IN/that i/PRP/i can/MD/can always/RB/always add/VB/add to/TO/to this/DT/this optimum/NN/optimum solution/NN/solution and/CC/and maybe/VB/maybe we/PRP/we move/VB/move at/IN/at most/JJS/most one/CD/one ?/./? is/VBZ/is there/RB/there some/DT/some interval/NN/interval means/VBZ/means i/PRP/i can/MD/can always/RB/always do/VB/do ?/./? this/DT/this i/PRP/i can/MD/can always/RB/always you/PRP/you know/VBP/know add/JJ/add to/TO/to this/DT/this solution/NN/solution that/IN/that i/PRP/i have/VBP/have and/CC/and maybe/RB/maybe we/PRP/we move/VBP/move at/IN/at most/JJS/most one/NNP/one. this/DT/this requires/VBZ/requires a/DT/a bit/NN/bit of/IN/of thought/NN/thought will/MD/will tell/VB/tell you/PRP/you that/IN/that there/EX/there is/VBZ/is an/DT/an interval/NN/interval and/CC/and this/DT/this is/VBZ/is the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what this/DT/this mean/JJ/mean ?/./? so/RB/so /,/, supposing/VBG/supposing what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/RB/first it/PRP/it has/VBZ/has to/TO/to end/VB/end before/IN/before this/NNP/this. so/RB/so /,/, the/DT/the interval/NN/interval sends/NNS/sends somewhere/RB/somewhere here/NNP/here. this/DT/this is/VBZ/is the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. well/RB/well /,/, now/RB/now we/PRP/we notice/VBP/notice that/IN/that i/PRP/i can/MD/can add/VB/add this/DT/this and/CC/and remove/VB/remove at/IN/at most/JJS/most interval/JJ/interval that/IN/that is/VBZ/is the/DT/the first/JJ/first interval/NNP/interval. this/DT/this will/MD/will certainly/RB/certainly not/RB/not intersect/VB/intersect with/IN/with the/DT/the second/JJ/second interval/NN/interval /,/, because/IN/because the/DT/the starting/VBG/starting time/NN/time of/IN/of the/DT/the second/JJ/second interval/NN/interval comes/VBZ/comes after/IN/after ending/VBG/ending time/NN/time of/IN/of the/DT/the first/JJ/first interval/NN/interval and/CC/and ending/VBG/ending time/NN/time of/IN/of this/DT/this interval/NN/interval is/VBZ/is either/DT/either this/DT/this or/CC/or before/NNP/before. so/RB/so i/PRP/i can/MD/can always/RB/always add/VB/add the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/RB/first and/CC/and remove/VB/remove the/DT/the first/JJ/first interval/NN/interval it/PRP/it maybe/NNP/maybe. if/IN/if it/PRP/it ends/VBZ/ends before/IN/before /CD/( /CD/( refer/NN/refer time/NN/time /:/: 46/CD/46 /:/: 20/CD/20 /CD/) and/CC/and increasing/VBG/increasing the/DT/the size/NN/size of/IN/of the/DT/the solution/NNP/solution. so/RB/so /,/, exchange/NN/exchange trick/NN/trick well/RB/well /,/, exchange/NN/exchange trick/NN/trick plus/CC/plus some/DT/some intuition/NN/intuition plus/CC/plus whatever/RB/whatever tells/VBZ/tells us/PRP/us that/IN/that i/PRP/i can/MD/can add/VB/add the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/RB/first you/PRP/you give/VBP/give me/PRP/me any/DT/any solution/NNP/solution. i/PRP/i can/MD/can add/VB/add an/DT/an interval/NN/interval that/IN/that ends/NNS/ends first/RB/first may/MD/may be/VB/be remove/VB/remove the/DT/the first/JJ/first interval/NN/interval certainly/RB/certainly the/DT/the size/NN/size does/VBZ/does not/RB/not go/VB/go down/NNP/down. and/CC/and this/DT/this is/VBZ/is then/RB/then this/DT/this is/VBZ/is what/WP/what /,/, now/RB/now leads/VBZ/leads us/PRP/us to/TO/to the/DT/the algorithm/NN/algorithm 3/CD/3 which/WDT/which actually/RB/actually works/NNP/works. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 00/CD/00 /CD/) algorithm/NN/algorithm 3/CD/3 says/VBZ/says add/JJ/add interval/NN/interval that/WDT/that ends/VBZ/ends first/RB/first remove/VBP/remove the/DT/the intervals/NNS/intervals that/WDT/that overlap/NN/overlap with/IN/with this/DT/this and/CC/and recurse/NNP/recurse. this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm 3/CD/3 and/CC/and this/DT/this actually/RB/actually does/VBZ/does give/VB/give us/PRP/us what/WP/what we/PRP/we want/NNP/want. so/RB/so /,/, instead/RB/instead of/IN/of recursing/VBG/recursing of/IN/of course/NN/course /,/, you/PRP/you could/MD/could sort/VB/sort the/DT/the algorithm/NN/algorithm the/DT/the intervals/NNS/intervals by/IN/by ending/VBG/ending time/NN/time so/IN/so /,/, you/PRP/you can/MD/can write/VB/write this/DT/this as/IN/as a/DT/a iterative/JJ/iterative procedure/NNP/procedure. you/PRP/you sort/VBD/sort the/DT/the intervals/NNS/intervals by/IN/by ending/VBG/ending times/NNS/times and/CC/and pick/NN/pick the/DT/the first/JJ/first interval/NN/interval the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/RB/first throughout/IN/throughout the/DT/the interval/NN/interval that/IN/that this/DT/this overlaps/NNS/overlaps and/CC/and then/RB/then continue/VB/continue the/DT/the iteration/NNP/iteration. so/RB/so /,/, this/DT/this also/RB/also this/DT/this works/NNS/works so/RB/so /,/, why/WRB/why does/VBZ/does this/DT/this work/NN/work ?/./? actually/RB/actually it/PRP/it is/VBZ/is this/DT/this exchange/NN/exchange trick/NN/trick that/WDT/that makes/VBZ/makes exchange/NN/exchange trick/NN/trick that/WDT/that we/PRP/we saw/VBD/saw that/IN/that is/VBZ/is what/WP/what makes/VBZ/makes it/PRP/it work/VBP/work and/CC/and it/PRP/it will/MD/will prove/VB/prove it/PRP/it by/IN/by induction/NN/induction really/NNP/really. first/RB/first thing/VBG/thing to/TO/to prove/VB/prove would/MD/would be/VB/be show/RB/show the/DT/the interval/NN/interval that/IN/that there/EX/there is/VBZ/is some/DT/some optimum/NN/optimum solution/NN/solution which/WDT/which contains/VBZ/contains the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. and/CC/and the/DT/the proof/NN/proof we/PRP/we have/VBP/have actually/RB/actually seen/VBN/seen so/IN/so /,/, what/WP/what you/PRP/you do/VBP/do is/VBZ/is look/VB/look at/IN/at any/DT/any optimum/NN/optimum and/CC/and look/VB/look at/IN/at the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/RB/first go/VBP/go back/RB/back to/TO/to previous/JJ/previous figure/NNP/figure. supposing/NN/supposing this/DT/this where/WRB/where the/DT/the optimum/NN/optimum solution/NN/solution ?/./? here/RB/here is/VBZ/is supposing/VBG/supposing it/PRP/it already/RB/already contain/VBP/contain the/DT/the interval/NN/interval that/IN/that first/JJ/first we/PRP/we have/VBP/have done/NNP/done. so/RB/so /,/, there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum solution/NN/solution that/WDT/that contains/VBZ/contains the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/RB/first otherwise/VBP/otherwise take/VB/take the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/RB/first it/PRP/it looks/VBZ/looks like/IN/like this/NNP/this. it/PRP/it has/VBZ/has to/TO/to end/VB/end either/DT/either at/IN/at the/DT/the same/JJ/same point/NN/point or/CC/or before/IN/before add/JJ/add this/DT/this remove/NN/remove the/DT/the first/JJ/first interval/NN/interval and/CC/and we/PRP/we now/RB/now have/VBP/have an/DT/an optimum/NN/optimum solution/NN/solution which/WDT/which contains/VBZ/contains the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. there/RB/there is/VBZ/is some/DT/some optimum/NN/optimum solution/NN/solution that/WDT/that contains/VBZ/contains the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. so/RB/so /,/, i/PRP/i pick/VBP/pick this/DT/this as/IN/as part/NN/part of/IN/of my/PRP$/my solution/NNP/solution. remove/NN/remove the/DT/the intervals/NNS/intervals that/WDT/that overlap/NN/overlap with/IN/with this/DT/this and/CC/and now/RB/now recurse/VBP/recurse on/IN/on what/WP/what remains/VBZ/remains /,/, and/CC/and since/IN/since i/PRP/i am/VBP/am recursing/VBG/recursing on/IN/on a/DT/a smaller/JJR/smaller set/NN/set by/IN/by induction/NN/induction the/DT/the algorithm/NN/algorithm will/MD/will find/VB/find the/DT/the optimum/NN/optimum in/IN/in what/WP/what remains/VBZ/remains and/CC/and /:/( /:/( refer/NN/refer time/NN/time /:/: 49/CD/49 /:/: 40/CD/40 /CD/) /CD/) /./. so/RB/so /,/, when/WRB/when i/PRP/i remove/VBP/remove this/DT/this and/CC/and when/WRB/when i/PRP/i remove/VBP/remove the/DT/the intervals/NNS/intervals that/WDT/that overlap/NN/overlap the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. the/DT/the size/NN/size of/IN/of the/DT/the optimum/NN/optimum falls/VBZ/falls by/IN/by at/IN/at most/JJS/most one/CD/one that/WDT/that you/PRP/you can/MD/can see/VB/see just/RB/just by/IN/by looking/VBG/looking at/IN/at this/DT/this figure/NN/figure that/IN/that we/PRP/we have/NNP/have. i/PRP/i added/VBD/added this/DT/this interval/NN/interval to/TO/to remove/VB/remove this/DT/this and/CC/and what/WP/what remains/VBZ/remains was/VBD/was this/DT/this you/PRP/you know/VBP/know the/DT/the rest/NN/rest of/IN/of it/NNP/it. it/PRP/it just/RB/just dropped/VBD/dropped the/DT/the optimum/NN/optimum drops/NNS/drops by/IN/by 1/CD/1 by/IN/by induction/NN/induction i/PRP/i will/MD/will find/VB/find something/NN/something of/IN/of this/DT/this size/NNP/size. the/DT/the algorithm/NN/algorithm finds/NNS/finds something/NN/something of/IN/of this/DT/this size/NN/size and/CC/and the/DT/the algorithm/NN/algorithm output/NN/output this/DT/this plus/NN/plus 1/CD/1 that/WDT/that is/VBZ/is this/DT/this interval/NNP/interval. so/RB/so /,/, the/DT/the size/NN/size of/IN/of the/DT/the solution/NN/solution that/IN/that /CD/( /CD/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 20/CD/20 /CD/) /CD/) output/NN/output is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the size/NN/size of/IN/of the/DT/the optimum/NN/optimum which/WDT/which is/VBZ/is what/WP/what we/PRP/we want/NNP/want. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture ?/./? 11/CD/11 greedy/NN/greedy algorithms/NNS/algorithms ?/./? ii/NN/ii we/PRP/we are/VBP/are discussing/VBG/discussing greedy/JJ/greedy strategies/NNS/strategies for/IN/for algorithm/NN/algorithm design/NNP/design. the/DT/the main/JJ/main principle/NN/principle is/VBZ/is to/TO/to somehow/VB/somehow construct/NN/construct solution/NN/solution to/TO/to your/PRP$/your problem/NN/problem piece/NN/piece by/IN/by piece/NNP/piece. we/PRP/we saw/VBD/saw two/CD/two examples/NNS/examples /,/, last/JJ/last time/NNP/time. let/NN/let us/PRP/us quickly/RB/quickly short/JJ/short of/IN/of revise/NN/revise the/DT/the main/JJ/main lessons/NNS/lessons that/WDT/that will/MD/will learn/NNP/learn. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 18/CD/18 /CD/) so/RB/so /,/, greedy/JJ/greedy strategies/NNS/strategies for/IN/for algorithm/NN/algorithm design/NN/design /,/, has/VBZ/has been/VBN/been reviewed/NNP/reviewed. main/NN/main point/NN/point is/VBZ/is /,/, you/PRP/you somehow/VBP/somehow construct/NN/construct the/DT/the solution/NN/solution /,/, piece/NN/piece by/IN/by piece/NNP/piece. so/RB/so /,/, two/CD/two things/NNS/things are/VBP/are important/NNP/important. one/CD/one is/VBZ/is /,/, how/WRB/how you/PRP/you /,/, what/WP/what is/VBZ/is the/DT/the next/JJ/next piece/NN/piece of/IN/of your/PRP$/your solution/NNP/solution. that/IN/that is/VBZ/is the/DT/the crucial/JJ/crucial question/NN/question that/WDT/that you/PRP/you have/VBP/have to/TO/to answer/NNP/answer. and/CC/and once/RB/once /,/, you/PRP/you answer/JJR/answer this/DT/this question/NN/question /,/, you/PRP/you just/RB/just put/VBD/put it/PRP/it around/IN/around in/IN/in the/DT/the loop/NN/loop and/CC/and you/PRP/you get/VBP/get your/PRP$/your algorithm/NNP/algorithm. the/DT/the other/JJ/other thing/NN/thing we/PRP/we solve/VBP/solve /,/, especially/RB/especially with/IN/with the/DT/the 2nd/JJ/2nd problem/NN/problem /,/, 2nd/CD/2nd problem/NN/problem was/VBD/was to/TO/to find/VB/find the/DT/the /,/, input/VBD/input was/VBD/was a/DT/a set/NN/set of/IN/of intervals/NNP/intervals. and/CC/and you/PRP/you are/VBP/are the/DT/the output/NN/output was/VBD/was /,/, maximum/NN/maximum number/NN/number of/IN/of intervals/NNS/intervals that/WDT/that do/VBP/do not/RB/not overlap/VB/overlap with/IN/with each/DT/each other/NNP/other. pair/NN/pair wise/NN/wise /,/, they/PRP/they do/VBP/do not/RB/not overlap/VB/overlap with/IN/with each/DT/each other/NNP/other. now/RB/now /,/, we/PRP/we saw/VBD/saw that/IN/that two/CD/two obvious/JJ/obvious strategies/NNS/strategies for/IN/for this/DT/this problem/NN/problem field/NNP/field. one/CD/one was/VBD/was to/TO/to pick/VB/pick /,/, smallest/JJS/smallest interval/NN/interval or/CC/or the/DT/the strategy/NN/strategy of/IN/of picking/VBG/picking and/CC/and interval/JJ/interval which/WDT/which overlapped/VBN/overlapped /,/, smallest/JJS/smallest number/NN/number of/IN/of other/JJ/other intervals/NNS/intervals /,/, both/DT/both of/IN/of these/DT/these seen/VBN/seen to/TO/to be/VB/be natural/JJ/natural strategies/NNS/strategies to/TO/to consider/VB/consider in/IN/in this/DT/this field/NNP/field. the/DT/the strategy/NN/strategy that/IN/that worked/VBD/worked before/IN/before last/JJ/last time/NN/time was/VBD/was to/TO/to pick/VB/pick first/RB/first the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. to/TO/to pick/VB/pick an/DT/an interval/NN/interval that/IN/that ends/NNS/ends first/RB/first /,/, remove/RB/remove the/DT/the intervals/NNS/intervals at/IN/at overlap/NN/overlap with/IN/with this/NNP/this. and/CC/and when/WRB/when you/PRP/you request/VBP/request on/IN/on the/DT/the rest/NN/rest /,/, again/RB/again you/PRP/you pick/VBP/pick an/DT/an interval/NN/interval that/IN/that ends/NNS/ends first/RB/first and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, the/DT/the set/NN/set of/IN/of moral/JJ/moral of/IN/of that/DT/that story/NN/story was/VBD/was obvious/JJ/obvious strategies/NNS/strategies may/MD/may not/RB/not work/NNP/work. what/WP/what is/VBZ/is obvious/JJ/obvious to/TO/to one/CD/one may/MD/may not/RB/not be/VB/be obvious/JJ/obvious to/TO/to the/DT/the other/NNP/other. but/CC/but /,/, certain/JJ/certain obvious/JJ/obvious strategies/NNS/strategies /,/, which/WDT/which appear/JJ/appear obvious/JJ/obvious to/TO/to most/JJS/most normal/JJ/normal human/NN/human beings/NNS/beings /,/, may/MD/may turn/VB/turn out/RP/out not/RB/not to/TO/to work/NNP/work. so/RB/so /,/, the/DT/the point/NN/point that/IN/that i/PRP/i want/VBP/want to/TO/to stress/NN/stress is/VBZ/is a/DT/a proof/NN/proof of/IN/of correctness/NN/correctness is/VBZ/is important/NNP/important. you/PRP/you come/VBP/come up/RP/up with/IN/with the/DT/the greedy/JJ/greedy strategy/NN/strategy ;/:/; you/PRP/you need/VBP/need to/TO/to argue/VB/argue logically/RB/logically /,/, that/IN/that this/DT/this strategy/NN/strategy works/NNP/works. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write system/NN/system /,/, this/DT/this is/VBZ/is important/NNP/important. so/RB/so /,/, hence/NN/hence a/DT/a proof/NN/proof of/IN/of correctness/NN/correctness is/VBZ/is necessary/JJ/necessary and/CC/and important/NNP/important. because/IN/because /,/, obvious/JJ/obvious things/NNS/things do/VBP/do not/RB/not work/VB/work /,/, if/IN/if you/PRP/you are/VBP/are giving/VBG/giving in/IN/in obvious/JJ/obvious solution/NN/solution to/TO/to your/PRP$/your problem/NN/problem /,/, then/RB/then you/PRP/you go/VBP/go to/TO/to say/VB/say that/IN/that proof/IN/proof that/DT/that this/DT/this obvious/JJ/obvious solution/NN/solution is/VBZ/is indeed/VBN/indeed correct/NNP/correct. so/RB/so /,/, this/DT/this is/VBZ/is important/NNP/important. there/RB/there are/VBP/are usually/RB/usually two/CD/two ways/NNS/ways of/IN/of writing/VBG/writing a/DT/a proof/NN/proof for/IN/for these/DT/these greedy/JJ/greedy strategies/NNP/strategies. one/CD/one is/VBZ/is induction/NNP/induction. since/IN/since /,/, you/PRP/you are/VBP/are constructing/VBG/constructing the/DT/the solutions/NNS/solutions /,/, piece/NN/piece by/IN/by piece/NNP/piece. you/PRP/you find/VBP/find the/DT/the first/JJ/first piece/NN/piece /,/, argue/VBP/argue that/IN/that this/DT/this is/VBZ/is correct/NNP/correct. and/CC/and then/RB/then you/PRP/you proof/IN/proof of/IN/of correctness/NN/correctness /,/, usually/RB/usually works/VBZ/works by/IN/by induction/NN/induction on/IN/on the/DT/the rest/NN/rest of/IN/of the/DT/the input/NNP/input. so/RB/so /,/, you/PRP/you argue/VBP/argue that/IN/that on/IN/on the/DT/the rest/NN/rest of/IN/of the/DT/the input/NN/input /,/, your/PRP$/your strategy/NN/strategy by/IN/by induction/NN/induction works/NNP/works. and/CC/and added/VBD/added to/TO/to the/DT/the first/JJ/first thing/NN/thing that/WDT/that you/PRP/you pick/VBP/pick /,/, it/PRP/it gives/VBZ/gives your/PRP$/your optimal/JJ/optimal solution/NNP/solution. this/DT/this is/VBZ/is /,/, what/WP/what we/PRP/we followed/VBD/followed yesterday/NNP/yesterday. now/RB/now /,/, this/DT/this one/CD/one more/JJR/more way/NN/way of/IN/of writing/VBG/writing this/DT/this /,/, which/WDT/which is/VBZ/is also/RB/also quite/RB/quite popular/JJ/popular /,/, which/WDT/which i/PRP/i will/MD/will call/VB/call exchange/NNP/exchange. so/RB/so /,/, this/DT/this is/VBZ/is proof/IN/proof by/IN/by the/DT/the exchange/NN/exchange techniques/NNP/techniques. this/DT/this is/VBZ/is very/RB/very similar/JJ/similar to/TO/to the/DT/the exchange/NN/exchange trick/NN/trick that/WDT/that i/PRP/i have/VBP/have been/VBN/been mentioning/VBG/mentioning throughout/NNP/throughout. and/CC/and we/PRP/we look/VBP/look at/IN/at it/PRP/it the/DT/the bit/NN/bit more/JJR/more detail/NNP/detail. what/WP/what we/PRP/we will/MD/will do/VB/do is/VBZ/is /,/, take/VBP/take up/RP/up this/DT/this 2nd/JJ/2nd problem/NN/problem that/IN/that you/PRP/you look/VBP/look at/NNP/at. an/DT/an actually/RB/actually /,/, write/JJ/write the/DT/the proof/NN/proof derive/NN/derive a/DT/a proof/NN/proof by/IN/by using/VBG/using this/DT/this exchange/NN/exchange business/NN/business /,/, just/RB/just you/PRP/you get/VBP/get gathered/VBN/gathered into/IN/into /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 05/CD/05 /:/: 41/CD/41 /CD/) /CD/) /./. so/RB/so /,/, here/RB/here is/VBZ/is of/IN/of the/DT/the proof/NN/proof by/IN/by exchange/NN/exchange words/NNP/words. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 51/CD/51 /CD/) let/NN/let us/PRP/us review/VBD/review the/DT/the algorithm/NN/algorithm first/NNP/first. it/PRP/it is/VBZ/is says/VBZ/says /,/, pick/NN/pick /,/, this/DT/this is/VBZ/is among/IN/among the/DT/the intervals/NNS/intervals that/WDT/that remain/NN/remain /,/, the/DT/the interval/NN/interval that/IN/that ends/NNS/ends first/NNP/first. discard/NN/discard intervals/NNS/intervals that/WDT/that overlap/NN/overlap with/IN/with this/DT/this interval/NNP/interval. the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is in/IN/in a/DT/a loop/NNP/loop. this/DT/this whole/JJ/whole thing/NN/thing is/VBZ/is in/IN/in a/DT/a loop/NN/loop and/CC/and you/PRP/you are/VBP/are done/VBN/done /,/, when/WRB/when if/IN/if discarded/VBN/discarded all/DT/all the/DT/the intervals/NNP/intervals. we/PRP/we have/VBP/have an/DT/an empty/JJ/empty set/NNP/set. start/NN/start out/IN/out with/IN/with the/DT/the set/NN/set of/IN/of intervals/NNS/intervals /,/, do/VBP/do this/DT/this in/IN/in a/DT/a loop/NN/loop till/NN/till you/PRP/you do/VBP/do not/RB/not have/VB/have intervals/NNS/intervals to/TO/to deal/VB/deal with/NNP/with. now/RB/now /,/, this/DT/this was/VBD/was the/DT/the algorithm/NN/algorithm /,/, we/PRP/we know/VBP/know that/IN/that /,/, this/DT/this works/NNP/works. let/VBD/let us/PRP/us now/RB/now proof/VBP/proof /,/, using/VBG/using this/DT/this sort/NN/sort of/IN/of exchange/NN/exchange strict/NN/strict that/WDT/that disworks/-NONE-/disworks. the/DT/the proof/NN/proof is/VBZ/is actually/RB/actually logically/RB/logically the/DT/the same/JJ/same /,/, only/RB/only it/PRP/it is/VBZ/is written/VBN/written the/DT/the bit/NN/bit differently/NNP/differently. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 18/CD/18 /CD/) how/WRB/how does/VBZ/does this/DT/this work/NN/work /,/, suppose/NN/suppose /,/, so/RB/so here/RB/here the/DT/the proof/NN/proof of/IN/of correctness/NNP/correctness. it/PRP/it is/VBZ/is the/DT/the 2nd/JJ/2nd proof/NN/proof of/IN/of correctness/NNP/correctness. suppose/NN/suppose /,/, the/DT/the algorithm/NN/algorithm picked/VBD/picked intervals/NNS/intervals of/IN/of say/NN/say i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 /,/, i/PRP/i 3/CD/3 so/RB/so on/IN/on to/TO/to i/PRP/i k/NNP/k. let/VB/let us/PRP/us also/RB/also /,/, suppose/DT/suppose that/WDT/that /,/, they/PRP/they are/VBP/are sorted/VBN/sorted /,/, say/VBP/say sorted/VBN/sorted by/IN/by does/VBZ/does not/RB/not matter/VB/matter /,/, whether/IN/whether it/PRP/it is/VBZ/is finishing/VBG/finishing times/NNS/times or/CC/or finishing/VBG/finishing times/NNP/times. whether/IN/whether /,/, it/PRP/it is/VBZ/is sorted/VBN/sorted by/IN/by finishing/NN/finishing times/NNS/times /,/, they/PRP/they are/VBP/are also/RB/also sorted/VBN/sorted by/IN/by starting/NN/starting time/NN/time /,/, because/IN/because these/DT/these intervals/NNS/intervals are/VBP/are disjoint/NNP/disjoint. so/RB/so /,/, the/DT/the intervals/NNS/intervals /,/, we/PRP/we look/VBP/look like/IN/like this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is i/PRP/i 1/CD/1 /,/, it/PRP/it is/VBZ/is i/PRP/i 2/CD/2 /,/, i/PRP/i 3/CD/3 /,/, so/RB/so on/IN/on /,/, next/JJ/next i/PRP/i k/NNP/k. so/RB/so /,/, the/DT/the intervals/NNS/intervals are/VBP/are disjoint/NNP/disjoint. so/RB/so /,/, sorting/VBG/sorting by/IN/by finishing/NN/finishing times/NNS/times and/CC/and starting/VBG/starting times/NNS/times is/VBZ/is the/DT/the same/JJ/same thing/NNP/thing. suppose/NN/suppose /,/, the/DT/the algorithm/NN/algorithm /,/, pick/NN/pick these/DT/these intervals/NNS/intervals i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 /,/, i/PRP/i 3/CD/3 up/RP/up to/TO/to i/PRP/i k/NNP/k. now/RB/now /,/, we/PRP/we have/VBP/have to/TO/to somehow/VB/somehow of/IN/of show/NN/show /,/, that/IN/that there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum solution/NN/solution /,/, which/WDT/which also/RB/also picks/VBZ/picks these/DT/these intervals/NNP/intervals. if/IN/if this/DT/this is/VBZ/is lead/NN/lead to/TO/to /,/, take/VB/take the/DT/the optimum/NN/optimum /,/, if/IN/if this/DT/this is/VBZ/is an/DT/an optimum/NN/optimum solution/NN/solution /,/, which/WDT/which as/IN/as i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 /,/, i/PRP/i 3/CD/3 up/RP/up to/TO/to i/PRP/i k/VBP/k /,/, then/RB/then you/PRP/you are/VBP/are done/NNP/done. because/IN/because /,/, every/DT/every other/JJ/other interval/NN/interval in/IN/in the/DT/the input/NN/input /,/, must/MD/must overlapped/VB/overlapped with/IN/with at/IN/at least/JJS/least one/CD/one of/IN/of these/DT/these inputs/NNP/inputs. the/DT/the way/NN/way the/DT/the algorithm/NN/algorithm works/VBZ/works /,/, it/PRP/it picks/VBZ/picks an/DT/an interval/NN/interval /,/, throughout/IN/throughout the/DT/the intervals/NNS/intervals /,/, which/WDT/which overlap/NN/overlap with/IN/with this/NNP/this. and/CC/and finally/RB/finally /,/, we/PRP/we have/VBP/have an/DT/an empty/JJ/empty set/NNP/set. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a set/NN/set of/IN/of intervals/NNS/intervals /,/, that/IN/that we/PRP/we picked/VBD/picked as/IN/as i/PRP/i 1/CD/1 through/IN/through i/PRP/i k/VBP/k /,/, it/PRP/it is/VBZ/is set/NNP/set. the/DT/the rest/NN/rest of/IN/of it/PRP/it has/VBZ/has been/VBN/been discarded/NNP/discarded. because/IN/because /,/, they/PRP/they have/VBP/have been/VBN/been /,/, they/PRP/they overlapped/VBD/overlapped with/IN/with one/CD/one of/IN/of these/DT/these intervals/NNP/intervals. so/RB/so /,/, if/IN/if any/DT/any optimum/NN/optimum solution/NN/solution has/VBZ/has i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 to/TO/to i/PRP/i k/VBP/k in/IN/in it/PRP/it /,/, then/RB/then this/DT/this is/VBZ/is it/PRP/it /,/, your/PRP$/your optimum/NN/optimum must/MD/must be/VB/be must/MD/must have/VB/have size/NN/size k/NNP/k. so/RB/so /,/, let/VB/let us/PRP/us pick/NNP/pick. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we need/VBP/need to/TO/to show/VB/show that/IN/that /,/, you/PRP/you know/VBP/know optimum/NN/optimum /,/, this/DT/this is/VBZ/is an/DT/an optimum/NN/optimum solution/NNP/solution. suppose/NN/suppose /,/, it/PRP/it is/VBZ/is not/RB/not so/RB/so /,/, there/EX/there is/VBZ/is no/DT/no optimum/NN/optimum /,/, which/WDT/which as/IN/as i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 /,/, i/PRP/i 3/CD/3 up/RP/up to/TO/to i/PRP/i k/NNP/k. then/RB/then /,/, pick/NN/pick the/DT/the optimum/NN/optimum solution/NN/solution /,/, which/WDT/which has/VBZ/has maximum/NN/maximum number/NN/number of/IN/of initial/JJ/initial intervals/NNS/intervals in/IN/in common/JJ/common with/IN/with for/IN/for the/DT/the algorithm/NN/algorithm pick/NNP/pick. let/NN/let me/PRP/me write/VBP/write this/DT/this term/NNP/term. so/RB/so /,/, suppose/DT/suppose /,/, so/RB/so the/DT/the claim/NN/claim that/IN/that you/PRP/you want/VBP/want to/TO/to make/VB/make is/VBZ/is /,/, there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum solution/NN/solution containing/VBG/containing i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to i/PRP/i k/NNP/k. well/RB/well /,/, in/IN/in this/DT/this case/NN/case /,/, we/PRP/we just/RB/just saw/VBD/saw that/IN/that /,/, if/IN/if contains/NNS/contains these/DT/these /,/, it/PRP/it must/MD/must be/VB/be exactly/RB/exactly this/DT/this /,/, which/WDT/which case/NN/case this/DT/this is/VBZ/is optimum/NNP/optimum. so/RB/so /,/, if/IN/if you/PRP/you prove/VBP/prove this/DT/this claim/NN/claim /,/, we/PRP/we have/VBP/have done/NNP/done. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 44/CD/44 /CD/) so/RB/so /,/, the/DT/the proof/NN/proof is/VBZ/is /,/, why/WRB/why by/IN/by contradiction/NN/contradiction /,/, proof/IN/proof of/IN/of the/DT/the claim/NN/claim by/IN/by contradiction/NNP/contradiction. so/RB/so /,/, we/PRP/we start/VBP/start of/IN/of by/IN/by saying/VBG/saying /,/, suppose/NN/suppose not/RB/not /,/, which/WDT/which means/VBZ/means ;/:/; suppose/NN/suppose the/DT/the statement/NN/statement is/VBZ/is false/NN/false /,/, there/EX/there is/VBZ/is no/DT/no optimum/NN/optimum solution/NN/solution /,/, which/WDT/which contains/VBZ/contains i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to i/PRP/i k/NNP/k. that/IN/that is/VBZ/is /,/, why/WRB/why this/DT/this is/NNP/is. so/RB/so /,/, then/RB/then /,/, pick/NN/pick an/DT/an optimum/NN/optimum solution/NN/solution /,/, which/WDT/which has/VBZ/has the/DT/the maximum/NN/maximum number/NN/number of/IN/of initial/JJ/initial solutions/NNS/solutions /,/, initial/JJ/initial intervals/NNS/intervals in/IN/in common/JJ/common with/IN/with i/PRP/i 1/CD/1 up/RP/up to/TO/to i/PRP/i k/NNP/k. what/WP/what do/VBP/do i/PRP/i mean/VB/mean /,/, so/RB/so there/RB/there maybe/RB/maybe some/DT/some optimum/NN/optimum solutions/NNS/solutions /,/, which/WDT/which contain/NN/contain i/PRP/i 1/CD/1 /,/, which/WDT/which do/VBP/do not/RB/not contain/VB/contain i/PRP/i 1/CD/1. there/EX/there maybe/RB/maybe some/DT/some /,/, which/WDT/which contain/NN/contain i/PRP/i 1/CD/1 and/CC/and i/PRP/i 2/CD/2 /,/, but/CC/but not/RB/not i/PRP/i 3/CD/3. there/EX/there may/MD/may be/VB/be some/DT/some with/IN/with contain/NN/contain i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 /,/, i/PRP/i 3/CD/3 all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to i/PRP/i 17/CD/17 /,/, but/CC/but not/RB/not i/PRP/i 18/CD/18 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, all/DT/all these/DT/these optimum/NN/optimum solutions/NNS/solutions pick/VBP/pick 1/CD/1. so/RB/so /,/, that/IN/that the/DT/the maximum/NN/maximum number/NN/number of/IN/of initial/JJ/initial intervals/NNS/intervals or/CC/or in/IN/in this/DT/this optimum/NN/optimum solution/NNP/solution. so/RB/so /,/, suppose/DT/suppose then/RB/then /,/, this/DT/this optimum/NN/optimum solution/NN/solution has/VBZ/has i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 /,/, i/PRP/i 3/CD/3 up/RP/up to/TO/to i/PRP/i j/NNP/j. so/RB/so /,/, this/DT/this has/VBZ/has i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 up/RP/up to/TO/to i/PRP/i j/VBP/j /,/, but/CC/but not/RB/not i/PRP/i j/VBP/j plus/RB/plus 1/CD/1. so/RB/so /,/, this/DT/this says/VBZ/says that/IN/that /,/, there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum solution/NN/solution /,/, which/WDT/which has/VBZ/has i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 up/RP/up to/TO/to i/PRP/i j/VBP/j and/CC/and no/DT/no optimum/NN/optimum solution/NN/solution has/VBZ/has i/PRP/i j/VBP/j plus/RB/plus 1/CD/1. when/WRB/when /,/, i/PRP/i look/VBP/look at/IN/at all/DT/all these/DT/these optimum/NN/optimum solutions/NNS/solutions /,/, there/EX/there could/MD/could be/VB/be many/JJ/many /,/, none/NN/none of/IN/of them/PRP/them has/VBZ/has i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 and/CC/and then/NNP/then. but/CC/but /,/, there/EX/there is/VBZ/is one/CD/one /,/, which/WDT/which as/IN/as i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 up/RP/up to/TO/to i/PRP/i j/NNP/j. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at /,/, just/RB/just picks/VBZ/picks this/DT/this and/CC/and look/VB/look at/IN/at it/NNP/it. now/RB/now /,/, since/IN/since it/PRP/it has/VBZ/has i/PRP/i 1/CD/1 through/IN/through i/PRP/i j/VBP/j /,/, every/DT/every interval/NN/interval /,/, which/WDT/which overlaps/NNS/overlaps with/IN/with these/DT/these is/VBZ/is not/RB/not present/JJ/present in/IN/in the/DT/the optimum/NNP/optimum. so/RB/so /,/, every/DT/every interval/NN/interval /,/, which/WDT/which overlaps/NNS/overlaps with/IN/with i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 up/RP/up to/TO/to i/PRP/i j/VBP/j is/VBZ/is not/RB/not in/IN/in the/DT/the optimum/NN/optimum present/NN/present in/IN/in this/DT/this optimum/NNP/optimum. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is not/RB/not present/JJ/present /,/, even/RB/even in/IN/in the/DT/the algorithms/NNP/algorithms. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at i/PRP/i j/VBP/j plus/RB/plus 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 20/CD/20 /CD/) so/RB/so /,/, here/RB/here the/DT/the optimum/NN/optimum /,/, it/PRP/it has/VBZ/has i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 up/RP/up to/TO/to i/PRP/i j/NNP/j. then/RB/then /,/, it/PRP/it has/VBZ/has some/DT/some other/JJ/other interval/NN/interval /,/, kolid/VBD/kolid interval/NN/interval k/NN/k /,/, j/NN/j plus/CC/plus 1th/CD/1th interval/NN/interval in/IN/in the/DT/the optimum/NN/optimum is/VBZ/is k/NNP/k. so/RB/so /,/, let/VB/let the/DT/the j/NN/j plus/VBZ/plus 1th/JJ/1th interval/NN/interval in/IN/in the/DT/the opt/NN/opt solution/NN/solution be/VB/be k/NNP/k. so/RB/so /,/, it/PRP/it is/VBZ/is look/VBP/look like/IN/like this/DT/this and/CC/and then/RB/then /,/, there/EX/there are/VBP/are others/NNP/others. this/DT/this is/VBZ/is of/IN/of the/DT/the optimum/NN/optimum looks/NNP/looks. now/RB/now /,/, i/PRP/i j/VBP/j plus/RB/plus /,/, so/RB/so k/VBP/k looks/NNS/looks like/IN/like this/DT/this /,/, this/DT/this is/VBZ/is k/NNP/k. now/RB/now /,/, the/DT/the claim/NN/claim is/VBZ/is that/IN/that /,/, i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 /,/, ends/NNS/ends before/IN/before the/DT/the ending/VBG/ending time/NN/time of/IN/of k/NNP/k. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NNP/down. the/DT/the ending/VBG/ending time/NN/time of/IN/of i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 /,/, this/DT/this is/VBZ/is what/WP/what the/DT/the algorithm/NN/algorithm picked/NNP/picked. it/PRP/it is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to ending/VBG/ending time/NN/time of/IN/of this/DT/this interval/NN/interval k/NNP/k. any/DT/any time/NN/time of/IN/of i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to ending/VBG/ending time/NN/time of/IN/of k/NNP/k. well/RB/well /,/, which/WDT/which means/VBZ/means i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 /,/, it/PRP/it must/MD/must look/VB/look like/IN/like this/NNP/this. i/PRP/i have/VBP/have k/NN/k /,/, this/DT/this is/VBZ/is k/NN/k and/CC/and i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 should/MD/should look/VB/look like/IN/like this/NNP/this. it/PRP/it could/MD/could be/VB/be the/DT/the same/JJ/same as/IN/as k/NNP/k. but/CC/but /,/, it/PRP/it is/VBZ/is suddenly/RB/suddenly less/JJR/less than/IN/than equal/JJ/equal to/TO/to this/DT/this and/CC/and i/PRP/i j/VBP/j sits/NNS/sits like/IN/like this/NNP/this. this/DT/this one/CD/one /,/, this/DT/this is/VBZ/is the/DT/the picture/NN/picture that/IN/that we/PRP/we have/NNP/have. now/RB/now /,/, we/PRP/we notice/VBP/notice that/IN/that /,/, i/PRP/i can/MD/can put/VB/put i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 into/IN/into this/DT/this optimum/NN/optimum and/CC/and remove/VB/remove k/NNP/k. so/RB/so /,/, look/VBP/look at/IN/at this/DT/this picture/NNP/picture. so/RB/so /,/, in/IN/in this/DT/this picture/NN/picture /,/, your/PRP$/your optimum/NN/optimum has/VBZ/has other/JJ/other intervals/NNS/intervals k/VBP/k and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is what/WP/what the/DT/the optimum/NN/optimum looks/VBZ/looks like/NNP/like. i/PRP/i can/MD/can insert/VB/insert i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 /,/, the/DT/the only/JJ/only other/JJ/other interval/NN/interval /,/, it/PRP/it intersect/VBP/intersect with/IN/with this/DT/this k/NNP/k. so/RB/so /,/, i/PRP/i can/MD/can insert/VB/insert i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 and/CC/and i/PRP/i can/MD/can remove/VB/remove k/NNP/k. because/IN/because /,/, this/DT/this is/VBZ/is the/DT/the way/NN/way the/DT/the algorithm/NN/algorithm picked/VBD/picked i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 and/CC/and because/IN/because /,/, you/PRP/you pick/VBP/pick and/CC/and interval/NN/interval with/IN/with this/DT/this smallest/NN/smallest ending/VBG/ending time/NNP/time. that/IN/that is/VBZ/is the/DT/the reason/NN/reason the/DT/the ending/VBG/ending time/NN/time of/IN/of i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 is/VBZ/is smaller/JJR/smaller than/IN/than equal/JJ/equal to/TO/to ending/VBG/ending time/NN/time of/IN/of k/NNP/k. so/RB/so /,/, i/PRP/i can/MD/can insert/VB/insert i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 /,/, remove/JJ/remove k/NN/k and/CC/and this/DT/this is/VBZ/is the/DT/the contradiction/NNP/contradiction. because/IN/because /,/, now/RB/now i/PRP/i have/VBP/have an/DT/an optimum/NN/optimum of/IN/of the/DT/the same/JJ/same size/NN/size /,/, which/WDT/which has/VBZ/has i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 /,/, that/IN/that is/VBZ/is the/DT/the contradiction/NNP/contradiction. let/NN/let me/PRP/me just/RB/just write/VBP/write the/DT/the term/NNP/term. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 16/CD/16 /CD/) so/RB/so /,/, hence/NN/hence /,/, replacing/VBG/replacing k/NN/k with/IN/with i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 /,/, gives/VBZ/gives yet/RB/yet another/DT/another optimum/NN/optimum solution/NN/solution /,/, which/WDT/which contains/VBZ/contains i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 up/RP/up to/TO/to i/PRP/i j/VBP/j plus/RB/plus 1/CD/1 now/RB/now /,/, which/WDT/which is/VBZ/is a/DT/a contradiction/NN/contradiction ;/:/; that/DT/that is/VBZ/is it/NNP/it. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the proof/NN/proof by/IN/by contradiction/NN/contradiction /,/, proof/IN/proof by/IN/by this/DT/this /,/, exchange/NN/exchange techniques/NNP/techniques. by/IN/by somehow/NN/somehow /,/, the/DT/the exchange/NN/exchange what/WP/what the/DT/the optimum/NN/optimum has/VBZ/has /,/, with/IN/with what/WP/what the/DT/the algorithm/NN/algorithm constructor/NNP/constructor. as/IN/as i/PRP/i said/VBD/said earlier/JJR/earlier /,/, you/PRP/you could/MD/could write/VB/write the/DT/the same/JJ/same proof/NN/proof by/IN/by induction/NN/induction 2/CD/2. that/WDT/that is/VBZ/is another/DT/another way/NN/way of/IN/of writing/VBG/writing the/DT/the same/JJ/same proof/NN/proof and/CC/and you/PRP/you can/MD/can pick/VB/pick /,/, whichever/RB/whichever way/NN/way you/PRP/you want/VBP/want to/TO/to write/VB/write /,/, whichever/RB/whichever way/NN/way you/PRP/you like/NNP/like. so/RB/so /,/, this/DT/this was/VBD/was the/DT/the previous/JJ/previous example/NNP/example. let/NN/let us/PRP/us look/VBP/look at/IN/at some/DT/some more/RBR/more problems/NNP/problems. the/DT/the idea/NN/idea is/VBZ/is /,/, to/TO/to give/VB/give you/PRP/you a/DT/a flavor/NN/flavor of/IN/of some/DT/some kinds/NNS/kinds of/IN/of algorithms/NNS/algorithms are/VBP/are problems/NNS/problems and/CC/and algorithms/NNP/algorithms. some/DT/some of/IN/of them/PRP/them are/VBP/are easy/JJ/easy and/CC/and you/PRP/you know/VBP/know /,/, you/PRP/you follow/VBP/follow your/PRP$/your notes/NNS/notes and/CC/and you/PRP/you get/VBP/get /,/, exactly/RB/exactly what/WP/what you/PRP/you want/NNP/want. some/DT/some of/IN/of them/PRP/them are/VBP/are will/MD/will like/VB/like this/DT/this /,/, one/CD/one they/PRP/they may/MD/may be/VB/be slightly/RB/slightly more/JJR/more non-trivial/NNP/non-trivial. so/RB/so /,/, this/DT/this is/VBZ/is just/RB/just to/TO/to give/VB/give you/PRP/you a/DT/a feel/NN/feel of/IN/of behinds/NNS/behinds the/DT/the things/NNS/things that/IN/that even/RB/even do/VBP/do with/IN/with greedy/JJ/greedy algorithms/NNP/algorithms. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 17/CD/17 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the next/JJ/next one/CD/one /,/, the/DT/the input/NN/input set/VBD/set of/IN/of intervals/NNS/intervals as/IN/as in/IN/in the/DT/the previous/JJ/previous case/NNP/case. the/DT/the output/NN/output is/VBZ/is /,/, to/TO/to partition/NNP/partition. this/DT/this set/NN/set into/IN/into a/DT/a minimum/JJ/minimum number/NN/number of/IN/of parts/NNS/parts /,/, such/JJ/such that/IN/that /,/, in/IN/in each/DT/each part/NN/part /,/, you/PRP/you have/VBP/have /,/, only/RB/only have/VBP/have /,/, non-overlapping/JJ/non-overlapping intervals/NNP/intervals. so/RB/so /,/, this/DT/this is/VBZ/is similar/JJ/similar /,/, the/DT/the input/NN/input is/VBZ/is similar/NNP/similar. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to the/DT/the scheduling/NN/scheduling problem/NN/problem ;/:/; that/DT/that we/PRP/we had/VBD/had previously/NNP/previously. previously/RB/previously /,/, you/PRP/you had/VBD/had in/IN/in the/DT/the set/NN/set of/IN/of intervals/NNP/intervals. each/DT/each interval/NN/interval is/VBZ/is associated/VBN/associated with/IN/with the/DT/the user/NNP/user. so/RB/so /,/, the/DT/the user/NN/user gives/VBZ/gives an/DT/an interval/NN/interval /,/, where/WRB/where she/PRP/she wants/VBZ/wants to/TO/to work/NNP/work. and/CC/and your/PRP$/your job/NN/job is/VBZ/is to/TO/to sort/NN/sort of/IN/of /,/, you/PRP/you know/VBP/know /,/, satisfy/NN/satisfy as/IN/as many/JJ/many users/NNS/users as/IN/as possible/NNP/possible. only/RB/only /,/, two/CD/two users/NNS/users can/MD/can not/RB/not work/VB/work on/IN/on this/DT/this machine/NN/machine at/IN/at the/DT/the same/JJ/same time/NNP/time. so/IN/so /,/, the/DT/the intervals/NNS/intervals should/MD/should not/RB/not overlap/NNP/overlap. now/RB/now /,/, you/PRP/you still/RB/still want/VBP/want to/TO/to schedule/VB/schedule them/NNP/them. only/RB/only /,/, you/PRP/you have/VBP/have more/JJR/more machines/NNS/machines /,/, you/PRP/you have/VBP/have many/JJ/many machines/NNS/machines /,/, on/IN/on the/DT/the same/JJ/same machine/NN/machine /,/, you/PRP/you can/MD/can not/RB/not schedule/VB/schedule to/TO/to users/NNS/users at/IN/at the/DT/the same/JJ/same time/NNP/time. so/IN/so /,/, i/PRP/i can/MD/can not/RB/not schedule/VB/schedule to/TO/to intervals/NNS/intervals /,/, which/WDT/which overlapped/VBD/overlapped on/IN/on the/DT/the same/JJ/same machine/NNP/machine. and/CC/and i/PRP/i want/VBP/want to/TO/to minimize/VB/minimize the/DT/the number/NN/number of/IN/of machines/NNP/machines. so/RB/so /,/, users/NNS/users come/VBP/come with/IN/with these/DT/these requirements/NNS/requirements /,/, which/WDT/which is/VBZ/is an/DT/an interval/NNP/interval. each/DT/each user/NN/user comes/VBZ/comes within/IN/within interval/NNP/interval. you/PRP/you have/VBP/have a/DT/a number/NN/number of/IN/of machines/NNP/machines. you/PRP/you want/VBP/want to/TO/to minimize/VB/minimize the/DT/the number/NN/number of/IN/of machines/NNS/machines that/WDT/that we/PRP/we use/NNP/use. so/RB/so /,/, which/WDT/which means/VBZ/means /,/, have/VBP/have to/TO/to tell/VB/tell /,/, for/IN/for each/DT/each user/NN/user /,/, which/WDT/which machine/NN/machine /,/, he/PRP/he or/CC/or she/PRP/she should/MD/should sit-down/NNP/sit-down. and/CC/and it/PRP/it should/MD/should be/VB/be search/NN/search that/WDT/that /,/, for/IN/for each/DT/each machine/NN/machine /,/, two/CD/two users/NNS/users /,/, whose/WP$/whose times/NNS/times overlapped/VBD/overlapped /,/, should/MD/should not/RB/not sit/VB/sit on/IN/on the/DT/the same/JJ/same machine/NNP/machine. so/IN/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the schedules/NNS/schedules for/IN/for one/CD/one machine/NN/machine /,/, the/DT/the intervals/NNS/intervals should/MD/should be/VB/be non-overlapping/JJ/non-overlapping or/CC/or disjoint/NNP/disjoint. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem /,/, then/RB/then abstract/VB/abstract way/NN/way the/DT/the input/NN/input is/VBZ/is the/DT/the set/NN/set of/IN/of intervals/NNS/intervals and/CC/and the/DT/the output/NN/output is/VBZ/is to/TO/to partition/NNP/partition. this/DT/this set/NN/set of/IN/of intervals/NNS/intervals into/IN/into minimum/JJ/minimum number/NN/number of/IN/of parts/NNP/parts. these/DT/these are/VBP/are thing/VBG/thing of/IN/of each/DT/each part/NN/part is/VBZ/is the/DT/the processor/NNP/processor. within/IN/within each/DT/each part/NN/part /,/, i/PRP/i must/MD/must only/RB/only have/VB/have non-overlapping/JJ/non-overlapping intervals/NNP/intervals. in/IN/in other/JJ/other words/NNS/words /,/, within/IN/within each/DT/each part/NN/part /,/, i/PRP/i can/MD/can not/RB/not have/VB/have to/TO/to intervals/NNS/intervals at/IN/at overlap/NNP/overlap. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem ;/:/; that/DT/that we/PRP/we would/MD/would like/VB/like to/TO/to solve/NNP/solve. so/RB/so /,/, how/WRB/how this/DT/this one/CD/one /,/, go/RB/go ahead/RB/ahead doing/VBG/doing this/DT/this /,/, again/RB/again the/DT/the sort/NN/sort of/IN/of /,/, since/IN/since we/PRP/we are/VBP/are discussing/VBG/discussing greedy/JJ/greedy techniques/NNP/techniques. i/PRP/i guess/VBZ/guess /,/, one/CD/one would/MD/would like/VB/like to/TO/to do/VB/do it/PRP/it by/IN/by /,/, you/PRP/you know/VBP/know /,/, this/DT/this keep/NN/keep partitioning/NNP/partitioning. these/DT/these intervals/NNS/intervals putting/VBG/putting them/PRP/them in/IN/in different/JJ/different parts/NNS/parts /,/, one/CD/one by/IN/by one/CD/one till/NN/till you/PRP/you are/VBP/are done/NNP/done. so/RB/so /,/, look/VBP/look at/IN/at these/DT/these intervals/NNS/intervals in/IN/in some/DT/some orders/NNS/orders say/VBP/say and/CC/and you/PRP/you know/VBP/know /,/, this/DT/this side/NN/side /,/, which/WDT/which part/NN/part /,/, which/WDT/which processor/NN/processor that/WDT/that person/NN/person going/VBG/going to/TO/to sit/VB/sit down/NNP/down. again/RB/again /,/, the/DT/the crucial/JJ/crucial question/NN/question is/VBZ/is /,/, which/WDT/which orders/NNS/orders do/VBP/do you/PRP/you look/VB/look at/IN/at intervals/NNP/intervals. you/PRP/you can/MD/can try/VB/try ending/VBG/ending time/NN/time /,/, through/IN/through i/PRP/i mean/VBP/mean /,/, since/IN/since the/DT/the previous/JJ/previous time/NN/time /,/, in/IN/in the/DT/the previous/JJ/previous problem/NN/problem /,/, you/PRP/you know/VBP/know /,/, we/PRP/we looked/VBD/looked at/IN/at intervals/NNS/intervals on/IN/on based/VBN/based on/IN/on ending/VBG/ending times/NNP/times. for/IN/for interval/NN/interval at/IN/at end/NN/end it/PRP/it first/RB/first was/VBD/was schedule/RB/schedule on/IN/on /,/, was/VBD/was looked/VBN/looked at/IN/at first/JJ/first in/IN/in the/DT/the interval/NN/interval that/IN/that in/IN/in the/DT/the next/JJ/next /,/, we/PRP/we looked/VBD/looked at/NNP/at. since/IN/since /,/, so/RB/so on/IN/on this/DT/this is/VBZ/is the/DT/the order/NN/order in/IN/in which/WDT/which we/PRP/we looked/VBD/looked at/IN/at the/DT/the intervals/NNP/intervals. does/VBZ/does this/DT/this work/NN/work /,/, i/PRP/i let/VBP/let you/PRP/you figure/VBP/figure out/RP/out in/IN/in this/DT/this works/NNP/works. so/RB/so /,/, that/IN/that is/VBZ/is an/DT/an exercise/NN/exercise for/IN/for you/PRP/you /,/, just/RB/just see/VB/see /,/, if/IN/if you/PRP/you can/MD/can look/VB/look at/IN/at intervals/NNS/intervals based/VBN/based on/IN/on ending/VBG/ending times/NNS/times /,/, when/WRB/when you/PRP/you get/VBP/get a/DT/a new/JJ/new interval/NN/interval /,/, put/VBD/put in/IN/in on/IN/on one/CD/one of/IN/of these/DT/these processors/NNS/processors /,/, which/WDT/which processor/NN/processor /,/, well/RB/well we/PRP/we have/VBP/have to/TO/to decide/VB/decide that/NNP/that. the/DT/the set/NN/set of/IN/of greedy/NN/greedy way/NN/way of/IN/of putting/VBG/putting /,/, you/PRP/you know/VBP/know /,/, putting/VBG/putting these/DT/these intervals/NNS/intervals on/IN/on to/TO/to processors/NNS/processors this/NNP/this. order/NN/order these/DT/these processors/NNS/processors 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 and/CC/and so/RB/so on/NNP/on. and/CC/and when/WRB/when you/PRP/you get/VBP/get an/DT/an interval/NN/interval /,/, put/VBD/put it/PRP/it on/IN/on the/DT/the first/JJ/first processor/NN/processor ;/:/; that/DT/that you/PRP/you can/NNP/can. so/RB/so /,/, there/EX/there is/VBZ/is some/DT/some interval/NN/interval on/IN/on the/DT/the first/JJ/first processor/NN/processor to/TO/to which/WDT/which this/DT/this overlaps/NNP/overlaps. then/RB/then /,/, i/PRP/i do/VBP/do not/RB/not put/VB/put it/PRP/it in/IN/in and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, i/PRP/i just/RB/just keep/VB/keep going/VBG/going on/IN/on to/TO/to 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 and/CC/and the/DT/the first/JJ/first place/NN/place /,/, where/WRB/where i/PRP/i can/MD/can put/VB/put it/PRP/it /,/, i/PRP/i put/VBD/put it/NNP/it. with/IN/with this/DT/this sort/NN/sort of/IN/of greedy/JJ/greedy back/NN/back drop/NN/drop /,/, supposing/VBG/supposing you/PRP/you look/VBP/look at/IN/at intervals/NNS/intervals by/IN/by finishing/VBG/finishing times/NNS/times /,/, this/DT/this is/VBZ/is what/WP/what /,/, i/PRP/i want/VBP/want to/TO/to check/VB/check /,/, whether/IN/whether this/DT/this will/MD/will give/VB/give you/PRP/you an/DT/an optimum/NN/optimum solution/NNP/solution. well/RB/well /,/, we/PRP/we look/VBP/look at/IN/at it/PRP/it differently/RB/differently will/MD/will first/RB/first sort/VB/sort by/IN/by starting/NN/starting times/NNP/times. we/PRP/we will/MD/will sort/VB/sort intervals/NNS/intervals by/IN/by starting/VBG/starting times/NNS/times ;/:/; we/PRP/we consider/VBP/consider an/DT/an inputs/NNS/inputs in/IN/in this/DT/this order/NNP/order. and/CC/and what/WP/what will/MD/will do/VB/do is/VBZ/is this/DT/this /,/, when/WRB/when i/PRP/i come/VBP/come to/TO/to the/DT/the ith/NN/ith interval/NN/interval /,/, i/PRP/i check/VBP/check /,/, i/PRP/i order/VBP/order these/DT/these groups/NNS/groups 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5. i/PRP/i check/VBP/check /,/, whether/IN/whether i/PRP/i can/MD/can put/VB/put it/PRP/it into/IN/into the/DT/the first/JJ/first group/NN/group /,/, if/IN/if i/PRP/i can/MD/can well/RB/well and/CC/and good/NNP/good. if/IN/if not/RB/not /,/, i/PRP/i will/MD/will look/VB/look at/IN/at the/DT/the second/JJ/second group/NN/group and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, i/PRP/i put/VBD/put it/PRP/it into/IN/into the/DT/the first/JJ/first group/NN/group /,/, where/WRB/where i/PRP/i can/MD/can /,/, this/DT/this is/VBZ/is the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write this/DT/this down/NNP/down. then/RB/then /,/, we/PRP/we will/MD/will see/VB/see /,/, why/WRB/why if/IN/if at/IN/at all/DT/all this/DT/this is/VBZ/is optimum/NNP/optimum. they/PRP/they does/VBZ/does not/RB/not seem/VB/seem to/TO/to be/VB/be any/DT/any /,/, i/PRP/i mean/VBP/mean on/IN/on the/DT/the top/JJ/top on/IN/on set/NN/set of/IN/of on/IN/on the/DT/the phase/NN/phase of/IN/of it/NNP/it. there/EX/there is/VBZ/is no/DT/no real/JJ/real intuition/NN/intuition as/IN/as of/IN/of now/RB/now guiding/VBG/guiding me/NNP/me. mean/NN/mean /,/, why/WRB/why should/MD/should i/VB/i choose/VB/choose intervals/NNS/intervals /,/, why/WRB/why should/MD/should i/VB/i order/NN/order them/PRP/them by/IN/by the/DT/the starting/VBG/starting time/NNP/time. i/PRP/i could/MD/could order/VB/order them/PRP/them by/IN/by the/DT/the ending/VBG/ending time/NN/time ;/:/; i/PRP/i could/MD/could have/VB/have order/NN/order them/PRP/them by/IN/by sizes/NNS/sizes or/CC/or any/DT/any other/JJ/other parameter/NN/parameter that/IN/that you/PRP/you may/MD/may have/NNP/have. but/CC/but /,/, well/RB/well /,/, we/PRP/we will/MD/will do/VB/do it/PRP/it by/IN/by starting/VBG/starting times/NNS/times /,/, means/VBZ/means see/VB/see what/WP/what happens/NNP/happens. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 22/CD/22 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the algorithm/NN/algorithm /,/, start/NN/start consider/NN/consider the/DT/the intervals/NNS/intervals in/IN/in the/DT/the order/NN/order specified/VBD/specified by/IN/by increasing/VBG/increasing starting/VBG/starting times/NNS/times and/CC/and so/RB/so for/IN/for an/DT/an interval/NN/interval i/PRP/i /,/, let/VB/let us/PRP/us say/VB/say i/PRP/i t/NNP/t. this/DT/this is/VBZ/is the/DT/the t/NN/t th/NN/th interval/NN/interval /,/, when/WRB/when considered/VBN/considered in/IN/in this/DT/this order/NNP/order. put/VBD/put it/PRP/it in/IN/in the/DT/the first/JJ/first ;/:/; put/VBN/put it/PRP/it in/IN/in the/DT/the first/JJ/first group/NN/group or/CC/or part/NN/part ;/:/; that/DT/that you/PRP/you can/NNP/can. so/RB/so /,/, you/PRP/you consider/VBP/consider intervals/NNS/intervals in/IN/in this/DT/this order/NN/order and/CC/and when/WRB/when i/PRP/i look/VBP/look at/IN/at an/DT/an interval/NN/interval i/PRP/i t/VBP/t /,/, put/VBN/put into/IN/into the/DT/the first/JJ/first parts/NNS/parts that/WDT/that you/PRP/you can/MD/can /,/, which/WDT/which means/VBZ/means in/IN/in the/DT/the first/JJ/first part/NN/part in/IN/in which/WDT/which it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a non/NN/non /,/, it/PRP/it does/VBZ/does not/RB/not have/VB/have an/DT/an overlapping/VBG/overlapping interval/NNP/interval. if/IN/if i/PRP/i put/VBD/put it/PRP/it into/IN/into part/NN/part l/NN/l /,/, say/VB/say ;/:/; that/DT/that means/VBZ/means /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at part/NN/part 1/CD/1 /,/, part/NN/part 2/CD/2 /,/, part/NN/part 3/LS/3 up/IN/up to/TO/to part/NN/part l/NN/l minus/NN/minus 1/CD/1 ;/:/; in/IN/in all/DT/all these/DT/these /,/, there/EX/there is/VBZ/is some/DT/some interval/NN/interval /,/, which/WDT/which overlaps/NNS/overlaps with/IN/with i/PRP/i t/NNP/t. so/RB/so /,/, this/DT/this is/VBZ/is algorithm/NN/algorithm and/CC/and why/WRB/why does/VBZ/does it/PRP/it work/VB/work /,/, does/VBZ/does it/PRP/it work/NNP/work. well/RB/well /,/, it/PRP/it does/VBZ/does /,/, the/DT/the algorithms/NNS/algorithms does/VBZ/does work/NNP/work. now/RB/now /,/, let/VB/let us/PRP/us in/IN/in fact/NN/fact /,/, prove/VBP/prove it/PRP/it does/VBZ/does works/NNP/works. so/RB/so /,/, well/RB/well /,/, you/PRP/you run/VBP/run the/DT/the algorithms/NNS/algorithms on/IN/on a/DT/a set/NN/set of/IN/of inputs/NNP/inputs. so/RB/so /,/, initially/RB/initially /,/, the/DT/the first/JJ/first interval/NN/interval goes/VBZ/goes into/IN/into the/DT/the first/JJ/first part/NNP/part. 2nd/CD/2nd interval/NN/interval /,/, if/IN/if it/PRP/it does/VBZ/does not/RB/not overlap/VB/overlap /,/, if/IN/if the/DT/the first/JJ/first one/CD/one goes/VBZ/goes into/IN/into the/DT/the first/JJ/first one/NNP/one. if/IN/if it/PRP/it does/VBZ/does overlap/VB/overlap /,/, it/PRP/it goes/VBZ/goes into/IN/into the/DT/the 2nd/JJ/2nd part/NN/part and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, you/PRP/you just/RB/just sort/NN/sort of/IN/of scan/NNP/scan. your/PRP$/your objective/NN/objective is/VBZ/is some/DT/some of/IN/of to/TO/to figure/VB/figure out/RP/out /,/, what/WP/what happens/NNS/happens to/TO/to this/DT/this to/TO/to the/DT/the number/NN/number of/IN/of parts/NNS/parts /,/, you/PRP/you are/VBP/are minimizing/VBG/minimizing the/DT/the number/NN/number of/IN/of parts/NNP/parts. to/TO/to supposing/VBG/supposing the/DT/the number/NN/number of/IN/of parts/NNS/parts working/VBG/working /,/, the/DT/the algorithm/NN/algorithm produced/VBN/produced k/NN/k parts/NNS/parts ;/:/; it/PRP/it is/VBZ/is broken/VBN/broken up/RP/up into/IN/into k/NN/k parts/NNP/parts. somehow/NN/somehow /,/, we/PRP/we need/VBP/need to/TO/to argue/VB/argue /,/, i/PRP/i mean/VBP/mean /,/, if/IN/if it/PRP/it is/VBZ/is in/IN/in fact/NN/fact optimum/NN/optimum /,/, that/IN/that any/DT/any algorithm/NN/algorithm will/MD/will produce/VB/produce these/DT/these k/NN/k parts/NNP/parts. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 28/CD/28 /CD/) so/RB/so /,/, let/VB/let us/PRP/us see/VB/see why/WRB/why ?/./? so/RB/so /,/, let/VB/let us/PRP/us say/VB/say suppose/JJ/suppose the/DT/the algorithm/NN/algorithm partitioned/VBD/partitioned a/DT/a set/NN/set of/IN/of intervals/NNS/intervals into/IN/into k/NN/k parts/NNP/parts. somehow/NN/somehow /,/, we/PRP/we have/VBP/have to/TO/to now/RB/now argue/VB/argue ;/:/; that/DT/that any/DT/any algorithm/NN/algorithm on/IN/on this/DT/this ends/NNS/ends set/VBD/set of/IN/of inputs/NNS/inputs would/MD/would use/VB/use k/NN/k parts/NNP/parts. why/WRB/why should/MD/should this/DT/this be/VB/be true/JJ/true ?/./? well/RB/well /,/, let/VB/let us/PRP/us looks/VBZ/looks at/IN/at small/JJ/small values/NNS/values of/IN/of k/NNP/k. so/RB/so /,/, often/RB/often /,/, the/DT/the other/JJ/other sort/NN/sort of/IN/of trick/NN/trick /,/, which/WDT/which is/VBZ/is never/RB/never sort/NN/sort of/IN/of mention/NN/mention in/IN/in text/NN/text books/NNS/books is/VBZ/is you/PRP/you should/MD/should always/RB/always trial/JJ/trial small/JJ/small values/NNS/values of/IN/of these/DT/these parameters/NNS/parameters /,/, you/PRP/you see/VBP/see /,/, what/WP/what really/RB/really happens/NNP/happens. for/IN/for instance/NN/instance /,/, if/IN/if the/DT/the algorithm/NN/algorithm took/VBD/took two/CD/two parts/NNS/parts /,/, if/IN/if it/PRP/it divided/VBD/divided into/IN/into two/CD/two parts/NNS/parts /,/, then/RB/then you/PRP/you can/MD/can you/PRP/you can/MD/can see/VB/see that/IN/that /,/, even/RB/even the/DT/the optimum/NN/optimum will/MD/will take/VB/take two/CD/two parts/NNP/parts. why/WRB/why is/VBZ/is that/IN/that so/RB/so ?/./? where/WRB/where /,/, look/VBP/look at/IN/at anything/NN/anything that/IN/that landed/VBN/landed in/IN/in the/DT/the 2nd/JJ/2nd part/NNP/part. why/WRB/why was/VBD/was this/DT/this interval/NN/interval put/VBD/put into/IN/into the/DT/the second/JJ/second parts/NNS/parts ?/./? because/IN/because /,/, it/PRP/it overlaps/VBZ/overlaps with/IN/with something/NN/something different/JJ/different parts/NNP/parts. now/RB/now /,/, if/IN/if you/PRP/you have/VBP/have two/CD/two overlapping/VBG/overlapping intervals/NNS/intervals /,/, you/PRP/you better/JJR/better you/PRP/you two/CD/two parts/NNP/parts. so/RB/so /,/, if/IN/if you/PRP/you two/CD/two parts/NNS/parts /,/, you/PRP/you are/VBP/are through/IN/through /,/, anybody/NN/anybody else/RB/else in/IN/in this/DT/this you/PRP/you know/VBP/know working/VBG/working with/IN/with the/DT/the same/JJ/same input/NN/input will/MD/will use/VB/use two/CD/two parts/NNP/parts. what/WP/what about/IN/about three/CD/three parts/NNS/parts ?/./? well/RB/well /,/, what/WDT/what do/VBP/do you/PRP/you know/VB/know ;/:/; you/PRP/you know/VBP/know that/IN/that /,/, if/IN/if something/NN/something was/VBD/was put/VBN/put into/IN/into the/DT/the 3rd/JJ/3rd part/NNP/part. it/PRP/it must/MD/must overlap/VB/overlap with/IN/with some/DT/some interval/NN/interval in/IN/in the/DT/the first/JJ/first part/NN/part and/CC/and some/DT/some interval/NN/interval in/IN/in the/DT/the 2nd/JJ/2nd part/NNP/part. let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this picture/NNP/picture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 48/CD/48 /CD/) so/RB/so /,/, here/RB/here let/VB/let us/PRP/us say/VB/say i/PRP/i have/VBP/have an/DT/an interval/NNP/interval. so/RB/so /,/, this/DT/this was/VBD/was put/VBN/put into/IN/into the/DT/the 3rd/JJ/3rd part/NNP/part. this/DT/this interval/NN/interval was/VBD/was put/VBN/put into/IN/into the/DT/the 3rd/JJ/3rd part/NN/part /,/, which/WDT/which means/VBZ/means /,/, there/EX/there must/MD/must be/VB/be an/DT/an interval/NN/interval that/IN/that overlapped/JJ/overlapped /,/, which/WDT/which was/VBD/was the/DT/the first/JJ/first part/NN/part and/CC/and second/JJ/second part/NNP/part. now/RB/now /,/, what/WDT/what are/VBP/are the/DT/the various/JJ/various things/NNS/things that/WDT/that can/MD/can happen/VB/happen /,/, then/RB/then i/PRP/i can/MD/can have/VB/have /,/, this/DT/this was/VBD/was in/IN/in the/DT/the first/JJ/first part/NNP/part. and/CC/and let/VB/let us/PRP/us say/VB/say /,/, this/DT/this was/VBD/was in/IN/in the/DT/the 2nd/JJ/2nd part/NNP/part. this/DT/this is/VBZ/is one/CD/one seen/NNP/seen. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the other/JJ/other seen/NN/seen in/IN/in that/DT/that possible/NNP/possible. let/VBD/let us/PRP/us say/VBP/say /,/, this/DT/this was/VBD/was in/IN/in the/DT/the first/JJ/first part/NN/part and/CC/and let/VB/let us/PRP/us say/VB/say /,/, this/DT/this was/VBD/was in/IN/in the/DT/the second/JJ/second part/NNP/part. let/NN/let us/PRP/us look/VBP/look at/IN/at these/DT/these 2/CD/2. now/RB/now /,/, in/IN/in this/DT/this scenario/NN/scenario /,/, i/PRP/i claimed/VBD/claimed that/IN/that /,/, any/DT/any other/JJ/other algorithm/NN/algorithm will/MD/will also/RB/also use/VB/use three/CD/three parts/NNS/parts /,/, why/WRB/why is/VBZ/is that/IN/that ?/./? well/RB/well /,/, at/IN/at this/DT/this line/NN/line here/RB/here /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at this/DT/this line/NN/line here/RB/here /,/, all/DT/all three/CD/three of/IN/of them/PRP/them intersects/NNP/intersects. so/RB/so /,/, all/DT/all three/CD/three of/IN/of them/PRP/them must/MD/must be/VB/be put/VBN/put in/RP/in different/JJ/different locations/NNS/locations in/IN/in different/JJ/different parts/NNP/parts. so/RB/so /,/, if/IN/if it/PRP/it is/VBZ/is this/DT/this situation/NN/situation /,/, then/RB/then we/PRP/we are/VBP/are done/VBN/done /,/, we/PRP/we have/VBP/have doing/VBG/doing optimally/RB/optimally as/IN/as usual/NNP/usual. let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this situation/NNP/situation. now/RB/now /,/, in/IN/in this/DT/this situation/NN/situation /,/, we/PRP/we can/MD/can not/RB/not see/VB/see the/DT/the same/JJ/same thing/NNP/thing. and/CC/and optimum/NN/optimum could/MD/could have/VB/have up/RP/up put/VBN/put these/DT/these two/CD/two into/IN/into one/CD/one part/NN/part in/IN/in which/WDT/which case/NN/case we/PRP/we have/VBP/have /:/( /:/( refer/NN/refer time/NN/time /:/: 33/CD/33 /:/: 08/CD/08 /CD/) /CD/) /./. well/RB/well /,/, can/MD/can this/DT/this situation/NN/situation happen/NN/happen /,/, elsewhere/RB/elsewhere /,/, we/PRP/we see/VBP/see /,/, you/PRP/you may/MD/may progress/VB/progress /,/, because/IN/because remember/NN/remember we/PRP/we started/VBD/started by/IN/by /,/, we/PRP/we sorted/VBD/sorted these/DT/these by/IN/by starting/NN/starting times/NNP/times. so/RB/so /,/, it/PRP/it looks/VBZ/looks like/IN/like this/DT/this can/MD/can not/RB/not happen/NNP/happen. this/DT/this 2nd/JJ/2nd scenario/NN/scenario can/MD/can not/RB/not happen/NNP/happen. so/RB/so /,/, focus/NN/focus on/IN/on this/NNP/this. so/IN/so /,/, in/IN/in this/DT/this scenario/NN/scenario /,/, it/PRP/it looks/VBZ/looks like/IN/like this/DT/this fellow/JJ/fellow /,/, starts/VBZ/starts after/IN/after this/DT/this /,/, which/WDT/which means/VBZ/means it/PRP/it should/MD/should be/VB/be consider/NN/consider afterwards/NNP/afterwards. so/RB/so /,/, this/DT/this scenario/NN/scenario can/MD/can not/RB/not happen/NNP/happen. and/CC/and in/IN/in fact/NN/fact /,/, our/PRP$/our ordering/NN/ordering /,/, when/WRB/when we/PRP/we order/VBP/order /,/, the/DT/the ordering/NN/ordering thing/NN/thing is/VBZ/is to/TO/to in/IN/in fact/NN/fact /,/, get/VB/get read/VBN/read of/IN/of these/NNP/these. so/RB/so /,/, i/PRP/i guess/VBP/guess /,/, you/PRP/you know/VBP/know /,/, how/WRB/how will/MD/will an/DT/an algorithm/NN/algorithm design/NN/design or/CC/or go/VB/go about/IN/about doing/VBG/doing this/NNP/this. well/RB/well /,/, you/PRP/you say/VBP/say /,/, let/VB/let me/PRP/me look/VB/look at/IN/at in/IN/in some/DT/some order/NN/order /,/, intervals/NNS/intervals are/VBP/are looked/VBN/looked at/IN/at in/IN/in some/DT/some order/NNP/order. now/RB/now /,/, look/VBP/look for/IN/for a/DT/a proof/NN/proof /,/, when/WRB/when you/PRP/you look/VBP/look for/IN/for a/DT/a proof/NN/proof /,/, you/PRP/you see/VBP/see /,/, how/WRB/how you/PRP/you have/VBP/have to/TO/to tune/VB/tune your/PRP$/your algorithm/NNP/algorithm. so/RB/so /,/, that/IN/that the/DT/the proof/NN/proof works/VBZ/works and/CC/and that/IN/that is/VBZ/is how/WRB/how the/DT/the algorithm/NN/algorithm develops/NNP/develops. so/RB/so /,/, here/RB/here /,/, we/PRP/we want/VBP/want to/TO/to look/VB/look at/IN/at these/DT/these intervals/NNS/intervals in/IN/in some/DT/some order/NN/order and/CC/and put/VBD/put them/PRP/them into/IN/into parts/NNS/parts /,/, put/VBD/put them/PRP/them into/IN/into the/DT/the first/JJ/first parts/NNS/parts that/WDT/that it/PRP/it can/NNP/can. we/PRP/we see/VBP/see that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a point/NN/point /,/, where/WRB/where all/DT/all of/IN/of them/PRP/them intersect/VBP/intersect /,/, when/WRB/when you/PRP/you are/VBP/are through/IN/through /,/, the/DT/the only/JJ/only way/NN/way /,/, this/DT/this can/MD/can not/RB/not happen/VB/happen is/VBZ/is /,/, you/PRP/you know/VBP/know /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a figure/NN/figure like/IN/like that/NNP/that. so/RB/so /,/, have/VBP/have an/DT/an interval/NN/interval and/CC/and have/VB/have two/CD/two intervals/NNS/intervals at/IN/at do/VBP/do not/RB/not intersect/VB/intersect into/IN/into different/JJ/different parts/NNP/parts. but/CC/but /,/, if/IN/if this/DT/this happens/NNS/happens /,/, one/CD/one of/IN/of them/PRP/them must/MD/must have/VB/have started/VBN/started after/IN/after this/DT/this 3rd/JJ/3rd interval/NNP/interval. one/CD/one of/IN/of them/PRP/them must/MD/must start/VB/start /,/, after/IN/after this/DT/this interval/NN/interval that/IN/that i/PRP/i am/VBP/am looking/VBG/looking at/IN/at right/NN/right now/NNP/now. then/RB/then /,/, you/PRP/you go/VBP/go back/RB/back and/CC/and see/VB/see /,/, can/MD/can i/PRP/i get/VB/get read/JJ/read out/IN/out this/DT/this will/MD/will /,/, can/MD/can i/PRP/i get/VB/get read/JJ/read out/IN/out this/DT/this in/IN/in my/PRP$/my proof/NNP/proof. to/TO/to get/VB/get read/JJ/read of/IN/of this/DT/this /,/, now/RB/now you/PRP/you notice/VBP/notice that/IN/that /,/, if/IN/if you/PRP/you had/VBD/had looked/VBN/looked at/IN/at these/DT/these intervals/NNS/intervals in/IN/in increasing/VBG/increasing order/NN/order of/IN/of starting/VBG/starting times/NNS/times /,/, this/DT/this case/NN/case will/MD/will not/RB/not arise/NNP/arise. and/CC/and so/RB/so /,/, in/IN/in rank/NN/rank to/TO/to prove/VB/prove /,/, you/PRP/you are/VBP/are actually/RB/actually refining/VBG/refining your/PRP$/your algorithm/NN/algorithm /,/, you/PRP/you see/VBP/see that/IN/that /,/, where/WRB/where you/PRP/you are/VBP/are previous/JJ/previous algorithms/NNS/algorithms can/MD/can go/VB/go wrong/NNP/wrong. and/CC/and you/PRP/you refine/VBP/refine this/DT/this algorithm/NN/algorithm to/TO/to take/VB/take care/NN/care of/IN/of this/DT/this case/NN/case and/CC/and you/PRP/you know/VBP/know /,/, hopefully/RB/hopefully come/VBN/come up/RP/up with/IN/with this/DT/this right/NN/right algorithm/NNP/algorithm. before/IN/before /,/, looking/VBG/looking at/IN/at the/DT/the problem/NN/problem /,/, where/WRB/where you/PRP/you have/VBP/have a/DT/a set/NN/set of/IN/of intervals/NNS/intervals and/CC/and you/PRP/you want/VBP/want to/TO/to partition/NN/partition /,/, this/DT/this set/NN/set into/IN/into minimum/JJ/minimum number/NN/number of/IN/of parts/NNP/parts. so/RB/so /,/, that/IN/that each/DT/each part/NN/part /,/, you/PRP/you have/VBP/have non-overlapping/JJ/non-overlapping intervals/NNS/intervals /,/, if/IN/if this/DT/this is/VBZ/is the/DT/the problem/NNP/problem. and/CC/and the/DT/the algorithm/NN/algorithm /,/, we/PRP/we will/MD/will like/VB/like to/TO/to consider/VB/consider is/VBZ/is sort/NN/sort in/IN/in intervals/NNS/intervals by/IN/by starting/VBG/starting time/NN/time /,/, look/NN/look at/IN/at them/PRP/them in/IN/in increasing/VBG/increasing order/NN/order of/IN/of sort/NN/sort in/IN/in staring/NN/staring time/NNP/time. and/CC/and when/WRB/when you/PRP/you look/VBP/look at/IN/at an/DT/an interval/NN/interval /,/, put/VBD/put it/PRP/it into/IN/into the/DT/the first/JJ/first part/NN/part ;/:/; that/DT/that you/PRP/you can/NNP/can. the/DT/the first/JJ/first interval/NN/interval goes/VBZ/goes into/IN/into the/DT/the first/JJ/first part/NN/part is/VBZ/is 2nd/CD/2nd interval/NN/interval will/MD/will go/VB/go into/IN/into the/DT/the 2nd/JJ/2nd part/NN/part /,/, if/IN/if it/PRP/it overlaps/VBZ/overlaps with/IN/with the/DT/the first/JJ/first and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm and/CC/and in/IN/in fact/NN/fact /,/, you/PRP/you would/MD/would like/VB/like to/TO/to prove/VB/prove that/IN/that /,/, this/DT/this algorithm/NN/algorithm is/VBZ/is optimum/NNP/optimum. so/RB/so /,/, to/TO/to prove/VB/prove this/DT/this /,/, well/RB/well we/PRP/we say/VBP/say supposing/VBG/supposing the/DT/the algorithm/NN/algorithm produced/VBN/produced k/NN/k parts/NNP/parts. we/PRP/we need/VBP/need to/TO/to show/VB/show that/IN/that /,/, any/DT/any algorithm/NN/algorithm will/MD/will produce/VB/produce k/NN/k parts/NNP/parts. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 40/CD/40 /CD/) since/IN/since /,/, there/EX/there are/VBP/are k/NN/k parts/NNP/parts. let/NN/let i/PRP/i be/VB/be /,/, let/VB/let us/PRP/us say/VB/say the/DT/the first/JJ/first interval/NN/interval /,/, the/DT/the rest/NN/rest put/VBD/put into/IN/into the/DT/the kth/NN/kth part/NNP/part. the/DT/the first/JJ/first interval/NN/interval does/VBZ/does not/RB/not matter/VB/matter /,/, any/DT/any interval/NN/interval you/PRP/you can/MD/can pick/VB/pick from/IN/from the/DT/the kth/NN/kth part/NNP/part. but/CC/but /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the first/JJ/first one/CD/one /,/, interval/NN/interval that/IN/that the/DT/the algorithm/NN/algorithm put/VBD/put in/IN/in the/DT/the kth/NN/kth part/NNP/part. we/PRP/we would/MD/would like/VB/like to/TO/to now/RB/now argue/VB/argue that/IN/that /,/, any/DT/any algorithm/NN/algorithm will/MD/will use/VB/use k/NN/k parts/NNS/parts /,/, why/WRB/why is/VBZ/is that/NNP/that. so/RB/so /,/, here/RB/here is/VBZ/is i/PRP/i /,/, so/RB/so this/DT/this my/PRP$/my interval/NN/interval i/NNP/i. well/RB/well /,/, if/IN/if i/PRP/i take/VBP/take any/DT/any other/JJ/other interval/NN/interval /,/, it/PRP/it has/VBZ/has to/TO/to start/VB/start before/IN/before i/NNP/i. any/DT/any other/JJ/other interval/NN/interval /,/, which/WDT/which is/VBZ/is already/RB/already been/VBN/been considered/NNP/considered. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at any/DT/any other/JJ/other interval/NN/interval /,/, that/IN/that is/VBZ/is already/RB/already being/VBG/being consider/NN/consider just/RB/just start/VB/start before/IN/before i/PRP/i /,/, this/DT/this much/JJ/much i/PRP/i know/NNP/know. i/PRP/i also/RB/also know/VBP/know /,/, when/WRB/when that/DT/that in/IN/in each/DT/each of/IN/of these/DT/these parts/NNP/parts. in/IN/in the/DT/the parts/NNS/parts /,/, 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 up/RP/up to/TO/to k/VB/k minus/NN/minus 1/CD/1 /,/, first/JJ/first k/NN/k minus/NN/minus 1/CD/1 parts/NNS/parts /,/, there/EX/there must/MD/must be/VB/be an/DT/an interval/NN/interval /,/, which/WDT/which intersects/NNS/intersects with/IN/with i/NNP/i. how/WRB/how is/VBZ/is that/DT/that look/NN/look like/IN/like ?/./? so/RB/so /,/, let/VB/let us/PRP/us say/VB/say in/IN/in the/DT/the the/DT/the first/JJ/first part/NN/part /,/, how/WRB/how can/MD/can interval/VB/interval will/MD/will be/VB/be. well/RB/well /,/, it/PRP/it has/VBZ/has to/TO/to start/VB/start before/IN/before this/DT/this and/CC/and it/PRP/it has/VBZ/has to/TO/to be/VB/be intersect/JJ/intersect this/NNP/this. so/RB/so /,/, it/PRP/it has/VBZ/has to/TO/to end/VB/end after/IN/after this/DT/this point/NNP/point. so/RB/so /,/, it/PRP/it has/VBZ/has be/VB/be something/NN/something like/IN/like this/NNP/this. it/PRP/it could/MD/could /,/, where/WRB/where it/PRP/it could/MD/could start/VB/start here/RB/here and/CC/and it/PRP/it could/MD/could end/VB/end after/IN/after i/PRP/i /,/, that/IN/that is/VBZ/is fine/NNP/fine. but/CC/but /,/, it/PRP/it has/VBZ/has to/TO/to start/VB/start before/IN/before this/DT/this point/NN/point and/CC/and it/PRP/it should/MD/should end/VB/end after/IN/after this/DT/this point/NNP/point. that/IN/that is/VBZ/is the/DT/the crucial/JJ/crucial thing/NNP/thing. so/RB/so /,/, these/DT/these intervals/NNS/intervals in/IN/in the/DT/the first/JJ/first part/NN/part 2nd/CD/2nd part/NN/part and/CC/and so/RB/so on/NNP/on. that/IN/that i/PRP/i overlap/VBP/overlap with/IN/with /,/, must/MD/must start/VB/start before/IN/before this/DT/this and/CC/and end/NN/end after/IN/after this/DT/this /,/, which/WDT/which means/VBZ/means /,/, this/DT/this point/NN/point must/MD/must be/VB/be common/JJ/common to/TO/to all/DT/all of/IN/of these/DT/these intervals/NNP/intervals. so/RB/so /,/, all/DT/all of/IN/of these/DT/these intervals/NNS/intervals overlap/VBP/overlap at/IN/at this/DT/this point/NN/point and/CC/and they/PRP/they must/MD/must be/VB/be put/VBN/put into/IN/into different/JJ/different parts/NNS/parts and/CC/and you/PRP/you have/VBP/have k/NN/k parts/NNP/parts. there/EX/there are/VBP/are k/NN/k intervals/NNS/intervals /,/, which/WDT/which overlap/NN/overlap at/IN/at this/DT/this point/NN/point and/CC/and hence/NN/hence /,/, they/PRP/they must/MD/must be/VB/be put/VBN/put into/IN/into k/NN/k different/JJ/different parts/NNP/parts. so/RB/so /,/, any/DT/any algorithm/NN/algorithm will/MD/will use/VB/use k/NN/k /,/, k/NN/k different/NN/different parts/NNS/parts /,/, this/DT/this is/VBZ/is the/DT/the ideal/NNP/ideal. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write /:/( refer/NN/refer time/NN/time /:/: 39/CD/39 /:/: 07/CD/07 /CD/) /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 09/CD/09 /CD/) so/RB/so /,/, let/VB/let i/PRP/i be/VB/be the/DT/the interval/NN/interval a/DT/a b/NNP/b. in/IN/in every/DT/every part/NN/part and/CC/and this/DT/this is/VBZ/is one/CD/one less/JJR/less then/RB/then equal/JJ/equal to/TO/to every/DT/every part/NN/part p/NNP/p. so/RB/so /,/, one/CD/one less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to p/VB/p /,/, less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k/VB/k minus/NN/minus 1/CD/1 /,/, there/EX/there is/VBZ/is an/DT/an interval/NN/interval /,/, which/WDT/which overlaps/NNS/overlaps with/IN/with i/PRP/i /,/, because/IN/because i/PRP/i was/VBD/was not/RB/not put/VBN/put into/IN/into this/DT/this part/NN/part /,/, which/WDT/which overlaps/NNS/overlaps with/IN/with i/NNP/i. since/IN/since /,/, i/PRP/i was/VBD/was not/RB/not put/VBN/put into/IN/into any/DT/any of/IN/of these/DT/these parts/NNS/parts ;/:/; it/PRP/it was/VBD/was put/VBN/put into/IN/into k/NN/k /,/, part/NN/part k/NNP/k. now/RB/now /,/, what/WDT/what can/MD/can be/VB/be say/VB/say /,/, this/DT/this means/VBZ/means this/DT/this interval/NN/interval /,/, let/VB/let us/PRP/us say/VB/say i/PRP/i p/NNP/p. so/RB/so /,/, what/WDT/what can/MD/can we/PRP/we say/VB/say about/IN/about i/PRP/i p/VBP/p /,/, well/RB/well i/PRP/i p/VBP/p starts/NNS/starts before/IN/before a/DT/a and/CC/and ends/VBZ/ends after/IN/after a/NNP/a. it/PRP/it is/VBZ/is starts/VBZ/starts before/IN/before a/DT/a /,/, because/IN/because i/PRP/i consider/VBP/consider the/DT/the intervals/NNS/intervals in/IN/in increasing/VBG/increasing order/NN/order of/IN/of starting/VBG/starting times/NNP/times. and/CC/and it/PRP/it ends/VBZ/ends after/IN/after a/DT/a /,/, because/IN/because it/PRP/it has/VBZ/has to/TO/to overlap/VB/overlap with/IN/with i/NNP/i. so/RB/so /,/, this/DT/this point/NN/point a/DT/a /,/, is/VBZ/is in/IN/in all/DT/all of/IN/of these/DT/these intervals/NNP/intervals. so/RB/so /,/, point/NN/point a/DT/a /,/, is/VBZ/is in/IN/in the/DT/the intervals/NNS/intervals /,/, i/PRP/i 1/CD/1 /,/, i/PRP/i 2/CD/2 up/RP/up to/TO/to i/PRP/i k/VBP/k minus/RB/minus 1/CD/1 and/CC/and i/NNP/i. so/RB/so /,/, there/EX/there are/VBP/are k/NN/k intervals/NNS/intervals /,/, which/WDT/which has/VBZ/has point/NN/point a/NNP/a. so/RB/so /,/, we/PRP/we optimum/VBP/optimum must/MD/must have/VB/have size/NN/size k/NNP/k. that/IN/that is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the proof/NNP/proof. i/PRP/i am/VBP/am not/RB/not hiding/VBG/hiding that/IN/that last/JJ/last sentence/NN/sentence /,/, just/RB/just fill/RB/fill it/PRP/it in/IN/in /,/, your/PRP$/your optimum/NN/optimum must/MD/must have/VB/have size/NN/size k/NN/k /,/, because/IN/because of/IN/of this/DT/this /,/, because/IN/because of/IN/of k/NN/k intervals/NNS/intervals /,/, which/WDT/which has/VBZ/has a/DT/a point/NN/point and/CC/and all/DT/all of/IN/of them/NNP/them. so/RB/so /,/, the/DT/the algorithm/NN/algorithm produces/VBZ/produces an/DT/an optimum/NN/optimum solution/NNP/solution. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what /,/, we/PRP/we want/VBP/want to/TO/to proof/NNP/proof. so/RB/so /,/, well/RB/well /,/, what/WDT/what i/PRP/i want/VBP/want to/TO/to point/NN/point out/RP/out with/IN/with this/DT/this /,/, this/DT/this problem/NN/problem is/VBZ/is that/IN/that in/IN/in the/DT/the previous/JJ/previous case/NN/case /,/, we/PRP/we looked/VBD/looked at/IN/at them/PRP/them in/IN/in increasing/VBG/increasing order/NN/order of/IN/of ending/VBG/ending times/NNP/times. and/CC/and this/DT/this case/NN/case /,/, we/PRP/we look/VBP/look at/IN/at them/PRP/them with/IN/with increasing/VBG/increasing order/NN/order sorting/VBG/sorting times/NNS/times /,/, you/PRP/you could/MD/could look/VB/look at/IN/at them/PRP/them with/IN/with decreasing/VBG/decreasing order/NN/order of/IN/of ending/VBG/ending times/NNS/times and/CC/and that/IN/that will/MD/will work/NNP/work. i/PRP/i will/MD/will leave/VB/leave it/PRP/it you/PRP/you /,/, again/RB/again is/VBZ/is an/DT/an exercise/NNP/exercise. so/RB/so /,/, i/PRP/i can/MD/can look/VB/look at/IN/at these/DT/these intervals/NNS/intervals in/IN/in decreasing/VBG/decreasing order/NN/order of/IN/of ending/VBG/ending times/NNS/times and/CC/and then/RB/then /,/, do/VBP/do this/DT/this partitioning/NN/partitioning and/CC/and that/IN/that will/MD/will also/RB/also work/NNP/work. same/JJ/same proof/NN/proof /,/, you/PRP/you just/RB/just the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is similar/NNP/similar. i/PRP/i guess/VBZ/guess you/PRP/you can/MD/can see/VB/see /,/, because/IN/because i/PRP/i can/MD/can either/VB/either look/NN/look at/IN/at the/DT/the intervals/NNS/intervals from/IN/from left/VBN/left to/TO/to right/RB/right or/CC/or right/RB/right to/TO/to left/VB/left /,/, it/PRP/it really/RB/really does/VBZ/does not/RB/not matter/NNP/matter. so/RB/so /,/, things/NNS/things that/WDT/that work/NN/work in/IN/in one/CD/one problem/NN/problem /,/, you/PRP/you know/VBP/know the/DT/the ordering/VBG/ordering /,/, which/WDT/which works/NNS/works in/IN/in one/CD/one problem/NN/problem /,/, may/MD/may not/RB/not work/VB/work in/IN/in some/DT/some other/JJ/other problem/NNP/problem. and/CC/and this/DT/this ordering/NN/ordering of/IN/of the/DT/the input/NN/input /,/, the/DT/the order/NN/order in/IN/in which/WDT/which you/PRP/you consider/VBP/consider the/DT/the input/NN/input is/VBZ/is a/DT/a crucial/JJ/crucial strategy/NN/strategy in/IN/in greedy/NN/greedy algorithms/NNP/algorithms. so/RB/so /,/, remember/NN/remember /,/, when/WRB/when i/PRP/i started/VBD/started /,/, i/PRP/i said/VBD/said there/RB/there are/VBP/are three/CD/three set/NN/set of/IN/of paradigms/NNS/paradigms /,/, there/EX/there are/VBP/are three/CD/three techniques/NNS/techniques /,/, that/IN/that is/VBZ/is run/VBN/run through/IN/through all/DT/all algorithm/NN/algorithm design/NN/design /,/, all/DT/all these/DT/these algorithms/NNS/algorithms that/WDT/that we/PRP/we design/NNP/design. one/CD/one is/VBZ/is induction/NNP/induction. that/IN/that is/VBZ/is /,/, we/PRP/we can/MD/can solve/VB/solve it/PRP/it for/IN/for a/DT/a smaller/JJR/smaller problem/NN/problem /,/, how/WRB/how do/VBP/do you/PRP/you extend/VB/extend the/DT/the solution/NN/solution to/TO/to a/DT/a bigger/JJR/bigger problem/NNP/problem. 2nd/CD/2nd is/VBZ/is ordering/VBG/ordering the/DT/the input/NN/input /,/, look/NN/look at/IN/at the/DT/the input/NN/input in/IN/in the/DT/the right/NN/right order/NNP/order. and/CC/and the/DT/the 3rd/JJ/3rd was/VBD/was storing/VBG/storing old/JJ/old values/NNS/values /,/, some/DT/some of/IN/of store/NN/store value/NN/value /,/, which/WDT/which may/MD/may be/VB/be reusing/NNP/reusing. in/IN/in greedy/JJ/greedy strategy/NN/strategy /,/, this/DT/this greedy/NN/greedy strategy/NN/strategy that/WDT/that you/PRP/you looked/VBD/looked at/IN/at /,/, you/PRP/you can/MD/can see/VB/see that/IN/that /,/, there/EX/there are/VBP/are two/CD/two things/NNS/things induction/NN/induction and/CC/and ordering/VBG/ordering /,/, which/WDT/which has/VBZ/has so/RB/so for/IN/for lead/NN/lead the/DT/the crucial/JJ/crucial role/NNP/role. so/RB/so /,/, let/VB/let me/PRP/me go/VB/go back/RB/back and/CC/and tell/NN/tell you/PRP/you /,/, bit/NN/bit more/JJR/more about/IN/about this/DT/this exchange/NN/exchange trick/NNP/trick. then/RB/then /,/, we/PRP/we will/MD/will see/VB/see a/DT/a problem/NN/problem /,/, where/WRB/where it/PRP/it couple/VBP/couple of/IN/of problem/NN/problem /,/, where/WRB/where this/DT/this works/VBZ/works beautifully/NNP/beautifully. so/RB/so /,/, the/DT/the exchange/NN/exchange trick/NN/trick usually/RB/usually works/VBZ/works /,/, when/WRB/when your/PRP$/your algorithm/NN/algorithm looks/NNS/looks like/IN/like this/NNP/this. when/WRB/when your/PRP$/your problem/NN/problem looks/NNS/looks like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 37/CD/37 /CD/) so/RB/so /,/, you/PRP/you have/VBP/have a/DT/a set/NN/set of/IN/of elements/NNS/elements as/IN/as input/NNP/input. you/PRP/you want/VBP/want a/DT/a subset/NN/subset as/IN/as output/NNP/output. and/CC/and usually/RB/usually /,/, you/PRP/you want/VBP/want this/DT/this subset/NN/subset to/TO/to satisfy/VB/satisfy some/DT/some property/NNP/property. so/RB/so /,/, this/DT/this is/VBZ/is /,/, how/WRB/how the/DT/the problem/NN/problem looks/VBZ/looks like/IN/like /,/, your/PRP$/your input/NN/input is/VBZ/is the/DT/the set/NN/set of/IN/of elements/NNS/elements and/CC/and you/PRP/you want/VBP/want a/DT/a subset/NN/subset of/IN/of this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, that/IN/that is/VBZ/is this/DT/this /,/, you/PRP/you want/VBP/want subset/VBN/subset of/IN/of this/DT/this with/IN/with satisfy/NN/satisfy some/DT/some property/NN/property as/IN/as output/NNP/output. the/DT/the first/JJ/first two/CD/two problems/NNS/problems were/VBD/were absolutely/RB/absolutely like/IN/like this/NNP/this. what/WP/what was/VBD/was your/PRP$/your input/NN/input /,/, initially/RB/initially it/PRP/it was/VBD/was a/DT/a 3/CD/3. it/PRP/it is/VBZ/is set/VBN/set of/IN/of vertex/NN/vertex and/CC/and well/RB/well there/RB/there are/VBP/are /:/( refer/NN/refer time/NN/time /:/: 44/CD/44 /:/: 39/CD/39 /CD/) /CD/) /./. there/RB/there is/VBZ/is an/DT/an input/NN/input with/IN/with some/DT/some structure/NN/structure /,/, embedded/VBD/embedded in/NNP/in. you/PRP/you want/VBP/want a/DT/a subset/NN/subset of/IN/of the/DT/the vertex/NN/vertex set/NNP/set. so/RB/so /,/, that/IN/that you/PRP/you know/VBP/know they/PRP/they are/VBP/are independent/JJ/independent /,/, you/PRP/you want/VBP/want an/DT/an independent/JJ/independent set/NN/set as/IN/as output/NN/output /,/, which/WDT/which is/VBZ/is maximum/NN/maximum in/IN/in size/NNP/size. so/RB/so /,/, the/DT/the first/JJ/first problem/NN/problem had/VBD/had this/DT/this property/NNP/property. this/DT/this 2nd/JJ/2nd problem/NN/problem also/RB/also had/VBD/had this/DT/this property/NNP/property. you/PRP/you want/VBP/want to/TO/to set/VB/set of/IN/of intervals/NNS/intervals /,/, you/PRP/you want/VBP/want to/TO/to subset/VB/subset with/IN/with maximum/NN/maximum size/NNP/size. so/RB/so /,/, that/IN/that the/DT/the intervals/NNS/intervals do/VBP/do not/RB/not overlap/NNP/overlap. both/DT/both these/DT/these problems/NNS/problems are/VBP/are this/DT/this property/NNP/property. the/DT/the third/JJ/third one/CD/one was/VBD/was slightly/RB/slightly different/JJ/different /,/, you/PRP/you wanted/VBD/wanted to/TO/to partition/NN/partition /,/, means/VBZ/means and/CC/and intervals/NNS/intervals into/IN/into many/JJ/many parts/NNP/parts. so/RB/so /,/, the/DT/the first/JJ/first and/CC/and second/JJ/second fitted/VBN/fitted into/IN/into this/DT/this roughly/RB/roughly this/DT/this frame/NN/frame work/NNP/work. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this exchange/NN/exchange trick/NN/trick that/WDT/that i/PRP/i am/VBP/am saying/VBG/saying /,/, roughly/RB/roughly /,/, it/PRP/it is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 37/CD/37 /CD/) to/TO/to supposing/NN/supposing you/PRP/you have/VB/have a/DT/a solution/NN/solution /,/, supposing/VBG/supposing you/PRP/you have/VBP/have /,/, let/VB/let us/PRP/us say/VB/say candidate/NNP/candidate. these/DT/these things/NNS/things are/VBP/are to/TO/to help/VB/help you/PRP/you design/VB/design the/DT/the algorithms/NNP/algorithms. i/PRP/i am/VBP/am not/RB/not giving/VBG/giving you/PRP/you algorithm/VBP/algorithm as/IN/as search/NN/search /,/, but/CC/but telling/VBG/telling you/PRP/you tips/VBZ/tips as/IN/as to/TO/to /,/, how/WRB/how do/VBP/do design/NN/design this/DT/this algorithm/NNP/algorithm. so/RB/so /,/, your/PRP$/your candidate/NN/candidate algorithm/NN/algorithm solution/NN/solution is/VBZ/is a/DT/a subset/NNP/subset. now/RB/now /,/, the/DT/the exchange/NN/exchange trick/NN/trick is/VBZ/is this/NNP/this. supposing/NN/supposing /,/, you/PRP/you remove/VBP/remove /,/, let/VB/let us/PRP/us say/VB/say an/DT/an element/NN/element /,/, x/NN/x from/IN/from this/DT/this solution/NNP/solution. so/RB/so /,/, called/VBN/called this/DT/this t/NN/t /,/, so/RB/so this/DT/this is/VBZ/is subset/VBN/subset t/NN/t from/IN/from t/NN/t and/CC/and add/VBD/add /,/, let/VB/let us/PRP/us say/VB/say y/NNP/y. the/DT/the question/NN/question you/PRP/you ask/VBP/ask you/PRP/you /,/, does/VBZ/does the/DT/the solution/NN/solution improve/NN/improve /,/, we/PRP/we ask/VBP/ask this/DT/this question/NNP/question. so/RB/so /,/, if/IN/if we/PRP/we can/MD/can some/VB/some more/RBR/more identify/JJ/identify /,/, when/WRB/when the/DT/the solution/NN/solution improves/VBZ/improves that/IN/that /,/, you/PRP/you give/VBP/give as/IN/as a/DT/a clue/NN/clue as/IN/as to/TO/to how/WRB/how to/TO/to design/VB/design these/DT/these algorithm/NNP/algorithm. and/CC/and that/IN/that happened/VBD/happened in/IN/in the/DT/the first/JJ/first two/CD/two cases/NNP/cases. so/RB/so /,/, let/VB/let me/PRP/me look/VB/look /,/, tell/NN/tell you/PRP/you recall/MD/recall your/PRP$/your /NN/( /:/( refer/NN/refer time/NN/time /:/: 47/CD/47 /:/: 05/CD/05 /CD/) /CD/) memory/NN/memory effect/NNP/effect. so/RB/so /,/, the/DT/the first/JJ/first case/NN/case /,/, we/PRP/we set/VBD/set that/IN/that /,/, if/IN/if we/PRP/we did/VBD/did not/RB/not have/VB/have a/DT/a leaf/NNP/leaf. so/RB/so /,/, i/PRP/i can/MD/can put/VB/put this/DT/this leaf/NN/leaf in/IN/in and/CC/and i/PRP/i remove/VBP/remove something/NN/something else/RB/else /,/, solution/NN/solution may/MD/may improve/NNP/improve. in/IN/in the/DT/the 2nd/JJ/2nd case/NN/case /,/, i/PRP/i said/VBD/said that/IN/that /,/, you/PRP/you could/MD/could pick/VB/pick /,/, you/PRP/you could/MD/could put/VB/put /,/, always/RB/always put/VBD/put the/DT/the interval/NN/interval that/IN/that ended/VBD/ended first/JJ/first into/IN/into the/DT/the solution/NN/solution and/CC/and remove/VB/remove something/NN/something else/NNP/else. that/IN/that is/VBZ/is how/WRB/how /,/, we/PRP/we sort/VBP/sort of/IN/of came/NN/came off/IN/off to/TO/to that/NNP/that. now/RB/now /,/, we/PRP/we will/MD/will see/VB/see examples/NNS/examples /,/, where/WRB/where this/DT/this was/VBD/was /,/, this/DT/this exchange/NN/exchange trick/NN/trick was/VBD/was /,/, the/DT/the problem/NN/problem is/VBZ/is this/NNP/this. so/RB/so /,/, actually/RB/actually fairly/RB/fairly the/DT/the simple/JJ/simple problem/NN/problem and/CC/and even/RB/even without/IN/without this/DT/this exchange/NN/exchange pick/NN/pick should/MD/should be/VB/be able/JJ/able to/TO/to come/VB/come up/RP/up with/IN/with algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 54/CD/54 /CD/) it/PRP/it is/VBZ/is again/RB/again from/IN/from scheduling/NNP/scheduling. so/RB/so /,/, you/PRP/you have/VBP/have a/DT/a set/NN/set of/IN/of jobs/NNP/jobs. the/DT/the input/NN/input is/VBZ/is set/VBN/set of/IN/of jobs/NNS/jobs with/IN/with processing/NN/processing times/NNS/times t/VBP/t 1/CD/1 /,/, t/NN/t 2/CD/2 /,/, up/RB/up to/TO/to t/VB/t n/NNP/n. there/RB/there are/VBP/are n/VBN/n jobs/NNS/jobs /,/, they/PRP/they have/VBP/have processing/VBG/processing times/NNS/times t/NN/t 1/CD/1 /,/, t/NN/t 2/CD/2 up/IN/up to/TO/to t/VB/t n/NNP/n. there/RB/there is/VBZ/is a/DT/a single/JJ/single processor/NNP/processor. you/PRP/you have/VBP/have one/CD/one processor/NN/processor /,/, you/PRP/you want/VBP/want to/TO/to schedule/VB/schedule these/NNP/these. so/RB/so /,/, obviously/RB/obviously /,/, will/MD/will schedule/VB/schedule them/PRP/them by/IN/by one/CD/one by/IN/by one/CD/one /,/, there/EX/there is/VBZ/is no/DT/no preemption/NNP/preemption. in/IN/in fact/NN/fact /,/, in/IN/in all/DT/all over/IN/over scheduling/VBG/scheduling problems/NNS/problems /,/, that/IN/that you/PRP/you have/VBP/have taken/VBN/taken up/RP/up so/RB/so for/IN/for ;/:/; there/EX/there is/VBZ/is no/DT/no preemption/NNP/preemption. so/RB/so /,/, you/PRP/you can/MD/can not/RB/not stop/VB/stop a/DT/a job/NN/job in/IN/in the/DT/the middle/NN/middle /,/, you/PRP/you lock/VBP/lock at/IN/at the/DT/the processor/NNP/processor. the/DT/the processor/NN/processor runs/VBZ/runs to/TO/to completion/NNP/completion. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to schedule/VB/schedule this/DT/this /,/, one/CD/one processor/NN/processor /,/, no/DT/no preemption/NNP/preemption. so/RB/so /,/, the/DT/the output/NN/output in/IN/in the/DT/the schedule/NN/schedule on/IN/on one/CD/one processor/NN/processor /,/, it/PRP/it is/VBZ/is no/DT/no preemption/NNP/preemption. well/RB/well and/CC/and we/PRP/we beyond/VBP/beyond want/VBP/want to/TO/to minimize/VB/minimize something/NN/something /,/, want/JJ/want to/TO/to we/PRP/we want/VBP/want to/TO/to minimize/VB/minimize /,/, we/PRP/we want/VBP/want to/TO/to minimize/VB/minimize the/DT/the some/DT/some of/IN/of the/DT/the finishing/NN/finishing times/NNP/times. schedule/NN/schedule of/IN/of one/CD/one processor/NN/processor /,/, no/DT/no preemption/NN/preemption /,/, minimize/NN/minimize the/DT/the sum/NN/sum of/IN/of the/DT/the finishing/NN/finishing times/NNP/times. so/RB/so /,/, what/WDT/what do/VBP/do i/PRP/i am/VBP/am mean/JJ/mean by/IN/by this/DT/this /,/, in/IN/in fact/NN/fact /,/, what/WP/what do/VBP/do i/PRP/i am/VBP/am mean/JJ/mean by/IN/by schedule/NNP/schedule. the/DT/the schedule/NN/schedule means/VBZ/means /,/, as/IN/as to/TO/to tell/VB/tell you/PRP/you /,/, which/WDT/which order/NN/order you/PRP/you put/VBD/put these/DT/these jobs/NNS/jobs on/IN/on to/TO/to the/DT/the processor/NNP/processor. so/RB/so /,/, supposing/VBG/supposing i/PRP/i put/VBD/put them/PRP/them in/IN/in order/NN/order t/NN/t 1/CD/1 /,/, t/NN/t 2/CD/2 /,/, t/NN/t 3/LS/3 up/IN/up to/TO/to t/VB/t n/NN/n /,/, this/DT/this is/VBZ/is the/DT/the order/NN/order in/IN/in which/WDT/which i/PRP/i schedule/VBP/schedule them/PRP/them on/IN/on to/TO/to the/DT/the processor/NNP/processor. the/DT/the finishing/NN/finishing time/NN/time on/IN/on the/DT/the first/JJ/first job/NN/job is/VBZ/is t/VBN/t 1/CD/1. the/DT/the finishing/NN/finishing time/NN/time of/IN/of the/DT/the 2nd/CD/2nd job/NN/job is/VBZ/is t/VBN/t 1/CD/1 plus/RB/plus t/JJ/t 2/CD/2. the/DT/the finishing/NN/finishing time/NN/time of/IN/of the/DT/the 3rd/JJ/3rd job/NN/job is/VBZ/is t/VBN/t 1/CD/1 plus/RB/plus t/JJ/t 2/CD/2 plus/NN/plus t/NN/t 3/CD/3. the/DT/the ith/NN/ith job/NN/job is/VBZ/is /,/, t/NN/t 1/CD/1 plus/CC/plus t/NN/t 2/CD/2 up/IN/up to/TO/to t/VB/t i/NNP/i. this/DT/this is/VBZ/is the/DT/the finishing/NN/finishing time/NN/time of/IN/of the/DT/the ith/NN/ith job/NNP/job. i/PRP/i want/VBP/want to/TO/to minimize/VB/minimize the/DT/the sum/NN/sum of/IN/of the/DT/the finishing/NN/finishing times/NNP/times. so/RB/so /,/, each/DT/each job/NN/job as/IN/as a/DT/a finishing/NN/finishing time/NN/time /,/, i/PRP/i add/VBP/add up/RP/up all/DT/all finishing/VBG/finishing times/NNP/times. and/CC/and i/PRP/i want/VBP/want to/TO/to minimize/VB/minimize the/DT/the some/DT/some of/IN/of the/DT/the finishing/NN/finishing times/NNP/times. this/DT/this is/VBZ/is the/DT/the problem/NNP/problem. so/RB/so /,/, if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at this/DT/this sum/NN/sum /,/, what/WP/what is/VBZ/is this/DT/this ?/./? so/RB/so just/RB/just take/VB/take a/DT/a minute/NNP/minute. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 13/CD/13 /CD/) so/RB/so /,/, the/DT/the first/JJ/first finishing/NN/finishing time/NN/time f/NN/f 1/CD/1 is/VBZ/is t/VBN/t 1/CD/1 /,/, f/NN/f 2/CD/2 is/VBZ/is t/VBN/t 1/CD/1 plus/RB/plus t/JJ/t 2/CD/2 /,/, so/RB/so on/IN/on /,/, f/NN/f i/PRP/i /,/, the/DT/the ith/NN/ith finishing/VBG/finishing time/NN/time t/NN/t 1/CD/1 plus/CC/plus t/NN/t 2/CD/2 plus/NN/plus 2/CD/2 t/NN/t i/NNP/i. now/RB/now /,/, what/WDT/what is/VBZ/is sigma/NN/sigma f/NN/f i/PRP/i /,/, f/NN/f j/NN/j /,/, let/VB/let us/PRP/us say/VB/say j/NN/j equal/JJ/equal to/TO/to 1/CD/1 to/TO/to n/NNP/n. this/DT/this is/VBZ/is what/WP/what i/PRP/i want/VBP/want to/TO/to minimize/NNP/minimize. well/RB/well /,/, it/PRP/it is/VBZ/is t/VBN/t 1/CD/1 plus/RB/plus t/JJ/t 1/CD/1 plus/NNS/plus t/NN/t 2/CD/2 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to the/DT/the last/JJ/last 1/CD/1 /,/, f/NN/f n/NN/n is/VBZ/is t/VBN/t 1/CD/1 plus/RB/plus t/JJ/t 2/CD/2 and/CC/and so/RB/so on/IN/on plus/CC/plus t/NN/t n/NNP/n. it/PRP/it is/VBZ/is this/DT/this some/DT/some /,/, if/IN/if you/PRP/you sort/VBP/sort of/IN/of look/NN/look at/IN/at this/DT/this some/DT/some /,/, it/PRP/it is/VBZ/is nothing/VBG/nothing but/CC/but n/NN/n times/NNS/times t/VBP/t 1/CD/1 plus/NNS/plus n/VBP/n minus/NN/minus 1/CD/1 times/NNS/times t/NN/t 2/CD/2 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to plus/CC/plus t/VB/t n/NN/n is/VBZ/is 1/CD/1. and/CC/and when/WRB/when you/PRP/you look/VBP/look at/IN/at this/DT/this sum/NN/sum /,/, immediately/RB/immediately realize/VB/realize that/IN/that i/PRP/i better/JJR/better have/VBP/have this/DT/this modules/NNS/modules job/NN/job here/RB/here /,/, sitting/VBG/sitting here/RB/here /,/, t/NN/t 1/CD/1 should/MD/should be/VB/be minimum/JJ/minimum among/IN/among the/DT/the t/NN/t ?/./? s/NNS/s /,/, t/NN/t 2/CD/2 should/MD/should be/VB/be the/DT/the max/NN/max minimum/NN/minimum and/CC/and so/RB/so on/IN/on /,/, t/NN/t n/NN/n is/VBZ/is the/DT/the maximum/NN/maximum time/NNP/time. it/PRP/it is/VBZ/is a/DT/a just/RB/just look/NN/look at/IN/at this/DT/this /,/, you/PRP/you see/VBP/see that/IN/that is/VBZ/is what/WP/what /,/, that/IN/that is/VBZ/is the/DT/the way/NN/way should/MD/should be/VB/be and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the proof/NN/proof is/VBZ/is also/RB/also obvious/NNP/obvious. and/CC/and that/IN/that is/VBZ/is the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, you/PRP/you just/RB/just sort/NN/sort of/IN/of the/DT/the jobs/NNS/jobs by/IN/by increasing/VBG/increasing times/NNP/times. and/CC/and that/IN/that is/VBZ/is what/WP/what ;/:/; it/PRP/it should/MD/should be/VB/be /,/, just/RB/just by/IN/by looking/VBG/looking at/IN/at that/DT/that is/VBZ/is a/DT/a very/RB/very simple/JJ/simple algorithm/NN/algorithm for/IN/for this/DT/this problem/NNP/problem. we/PRP/we will/MD/will look/VB/look at/IN/at these/DT/these problem/NN/problem /,/, again/RB/again just/RB/just to/TO/to sort/VB/sort of/IN/of pushing/VBG/pushing in/IN/in a/DT/a point/NN/point /,/, when/WRB/when we/PRP/we start/VBP/start next/JJ/next time/NNP/time. and/CC/and then/RB/then we/PRP/we look/VBP/look at/IN/at you/PRP/you know/VBP/know slightly/RB/slightly more/RBR/more complicated/JJ/complicated problems/NNS/problems from/IN/from the/DT/the greedy/JJ/greedy perspective/NNP/perspective. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 12/CD/12 greedy/NN/greedy algorithms/NNS/algorithms ?/./? iii/NN/iii /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 03/CD/03 /CD/) next/JJ/next problem/NN/problem /,/, we/PRP/we want/VBP/want to/TO/to discuss/VB/discuss is/VBZ/is called/VBN/called fractional/JJ/fractional knapsack/NNP/knapsack. you/PRP/you want/VBP/want to/TO/to be/VB/be correct/JJ/correct ;/:/; you/PRP/you can/MD/can call/VB/call it/PRP/it the/DT/the fractional/JJ/fractional knapsack/NN/knapsack problem/NNP/problem. well/RB/well /,/, imagine/NN/imagine that/IN/that you/PRP/you are/VBP/are a/DT/a bugler/NN/bugler and/CC/and always/RB/always wanted/VBD/wanted to/TO/to start/VB/start in/IN/in algorithms/NNS/algorithms lecture/NN/lecture this/DT/this way/NNP/way. so/RB/so /,/, here/RB/here goes/VBZ/goes /,/, so/RB/so imagine/NN/imagine you/PRP/you are/VBP/are a/DT/a bugler/NN/bugler /,/, it/PRP/it is/VBZ/is say/VBP/say successful/JJ/successful one/CD/one at/IN/at it/NNP/it. you/PRP/you set/VBD/set up/RP/up to/TO/to bugler/VB/bugler house/NN/house and/CC/and you/PRP/you have/VBP/have a/DT/a bag/NN/bag with/IN/with you/PRP/you or/CC/or a/DT/a knapsack/NNP/knapsack. that/WDT/that is/VBZ/is why/WRB/why /,/, the/DT/the word/NN/word knapsack/NN/knapsack comes/VBZ/comes on/NNP/on. so/RB/so /,/, you/PRP/you have/VBP/have a/DT/a sack/NN/sack with/IN/with you/PRP/you and/CC/and you/PRP/you enter/VBP/enter the/DT/the house/NNP/house. so/RB/so /,/, you/PRP/you are/VBP/are a/DT/a /NN/( /:/( refer/NN/refer time/NN/time /:/: 01/CD/01 /:/: 45/CD/45 /CD/) /CD/) /./. so/RB/so /,/, you/PRP/you enter/JJR/enter the/DT/the house/NNP/house. then/RB/then /,/, you/PRP/you find/VBP/find that/IN/that /,/, you/PRP/you are/VBP/are really/RB/really hit/VBN/hit the/DT/the jackpot/NN/jackpot in/IN/in the/DT/the sense/NN/sense that/IN/that houses/NNS/houses all/DT/all kinds/NNS/kinds of/IN/of stuff/NN/stuff in/IN/in it/NNP/it. but/CC/but /,/, you/PRP/you see/VBP/see your/PRP$/your sack/NN/sack has/VBZ/has limited/VBN/limited capacity/NNP/capacity. you/PRP/you can/MD/can not/RB/not just/RB/just take/VB/take everything/NN/everything away/RB/away /,/, which/WDT/which is/VBZ/is /,/, where/WRB/where in/IN/in the/DT/the house/NNP/house. so/RB/so /,/, the/DT/the crucial/JJ/crucial question/NN/question /,/, there/EX/there you/PRP/you have/VBP/have to/TO/to answer/VB/answer at/IN/at this/DT/this point/NN/point is/VBZ/is /,/, what/WP/what you/PRP/you stuff/VBP/stuff into/IN/into your/PRP$/your knapsack/NN/knapsack ?/./? what/WP/what do/VBP/do you/PRP/you stuff/NN/stuff into/IN/into your/PRP$/your back/NN/back ?/./? now/RB/now /,/, each/DT/each item/NN/item as/IN/as a/DT/a size/NN/size and/CC/and there/EX/there is/VBZ/is some/DT/some profit/NN/profit associated/VBN/associated with/IN/with it/NNP/it. so/RB/so /,/, if/IN/if you/PRP/you sell/VBP/sell it/PRP/it /,/, there/EX/there is/VBZ/is some/DT/some cost/NN/cost of/IN/of profit/NN/profit /,/, that/IN/that you/PRP/you some/DT/some money/NN/money /,/, that/IN/that you/PRP/you get/VBP/get out/RP/out of/IN/of it/NNP/it. each/DT/each item/NN/item has/VBZ/has a/DT/a profit/NN/profit and/CC/and size/NNP/size. now/RB/now /,/, the/DT/the total/JJ/total amount/NN/amount of/IN/of item/NN/item /,/, set/VBN/set you/PRP/you can/MD/can take/VB/take back/RP/back with/IN/with you/PRP/you is/VBZ/is /,/, restricted/VBN/restricted by/IN/by the/DT/the size/NN/size of/IN/of your/PRP$/your sack/NNP/sack. your/PRP$/your objective/NN/objective is/VBZ/is to/TO/to fill/VB/fill this/DT/this sack/NN/sack with/IN/with items/NNS/items /,/, such/JJ/such that/IN/that /,/, the/DT/the total/JJ/total profit/NN/profit is/VBZ/is maximized/NNP/maximized. so/RB/so /,/, you/PRP/you like/IN/like to/TO/to somehow/VB/somehow decide/JJ/decide /,/, which/WDT/which items/NNS/items to/TO/to put/VB/put into/IN/into this/DT/this sack/NNP/sack. so/RB/so /,/, that/IN/that the/DT/the profit/NN/profit is/VBZ/is maximized/NNP/maximized. well/RB/well /,/, this/DT/this is/VBZ/is the/DT/the knapsack/NN/knapsack problem/NN/problem without/IN/without the/DT/the fractional/JJ/fractional part/NNP/part. well/RB/well /,/, if/IN/if you/PRP/you put/VBD/put take/VB/take fractions/NNS/fractions of/IN/of each/DT/each item/NN/item /,/, then/RB/then it/PRP/it is/VBZ/is called/VBN/called the/DT/the fraction/NN/fraction in/IN/in knapsack/NNP/knapsack. in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, imagine/NN/imagine that/IN/that /,/, you/PRP/you not/RB/not bugling/VBG/bugling an/DT/an ordinary/JJ/ordinary house/NN/house /,/, you/PRP/you have/VBP/have bugling/VBG/bugling cake/NN/cake shops/NNP/shops. then/RB/then /,/, there/EX/there are/VBP/are all/DT/all kinds/NNS/kinds of/IN/of cakes/NNS/cakes /,/, fancy/NN/fancy cakes/VBZ/cakes tune/NN/tune around/IN/around and/CC/and you/PRP/you can/MD/can take/VB/take fractions/NNS/fractions of/IN/of each/DT/each cake/NN/cake and/CC/and select/VB/select you/PRP/you can/MD/can not/RB/not eat/VB/eat it/NNP/it. so/RB/so /,/, you/PRP/you can/MD/can not/RB/not have/VB/have the/DT/the cake/NN/cake and/CC/and eat/NN/eat it/PRP/it too/NNP/too. so/RB/so /,/, you/PRP/you have/VBP/have to/TO/to sell/VB/sell this/DT/this cakes/NNS/cakes /,/, you/PRP/you can/MD/can take/VB/take a/DT/a fraction/NN/fraction of/IN/of each/DT/each cake/NN/cake and/CC/and you/PRP/you like/IN/like your/PRP$/your job/NN/job is/VBZ/is to/TO/to sort/NN/sort of/IN/of choose/NN/choose /,/, those/DT/those which/WDT/which can/MD/can fit/VB/fit into/IN/into your/PRP$/your bag/NN/bag and/CC/and make/VB/make sure/JJ/sure not/RB/not to/TO/to squish/VB/squish them/NNP/them. and/CC/and you/PRP/you will/MD/will again/VB/again to/TO/to maximize/VB/maximize profit/NNP/profit. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the fractional/JJ/fractional knapsack/NN/knapsack problem/NNP/problem. so/RB/so /,/, let/VB/let us/PRP/us get/VB/get back/RB/back to/TO/to our/PRP$/our real/JJ/real occasion/NN/occasion /,/, which/WDT/which is/VBZ/is designing/VBG/designing algorithms/NNS/algorithms and/CC/and let/VB/let me/PRP/me define/VB/define this/DT/this problem/NN/problem formally/NNP/formally. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 08/CD/08 /CD/) so/RB/so /,/, there/EX/there are/VBP/are n/NN/n items/NNP/items. so/RB/so /,/, each/DT/each item/NN/item has/VBZ/has a/DT/a profit/NN/profit and/CC/and size/NN/size /,/, associated/VBN/associated with/IN/with it/NNP/it. so/RB/so /,/, this/DT/this is/VBZ/is p/NN/p i/PRP/i and/CC/and this/DT/this is/VBZ/is s/VBZ/s i/NNP/i. let/NN/let us/PRP/us say/VBP/say /,/, 1/CD/1 less/JJR/less than/IN/than equal/JJ/equal to/TO/to i/PRP/i /,/, less/JJR/less than/IN/than equal/JJ/equal to/TO/to n/NNP/n. each/DT/each item/NN/item has/VBZ/has a/DT/a profit/NN/profit p/NN/p i/PRP/i and/CC/and size/VB/size associated/VBN/associated with/IN/with it/NNP/it. you/PRP/you have/VBP/have knapsack/RP/knapsack of/IN/of capacity/NN/capacity b/NN/b say/VB/say /,/, this/DT/this is/VBZ/is input/NNP/input. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the input/NN/input /,/, which/WDT/which is/VBZ/is each/DT/each item/NN/item has/VBZ/has a/DT/a profit/NN/profit and/CC/and size/NN/size and/CC/and knapsack/NN/knapsack of/IN/of capacity/NN/capacity b/NNP/b. and/CC/and the/DT/the output/NN/output is/VBZ/is /,/, for/IN/for each/DT/each item/NN/item /,/, you/PRP/you have/VBP/have to/TO/to say/VB/say /,/, what/WDT/what fractions/NNS/fractions of/IN/of this/DT/this item/NN/item /,/, you/PRP/you going/VBG/going to/TO/to take/NNP/take. so/RB/so /,/, you/PRP/you are/VBP/are given/VBN/given the/DT/the each/DT/each item/NN/item /,/, there/EX/there only/RB/only unit/NN/unit /,/, one/CD/one unit/NN/unit of/IN/of an/DT/an item/NN/item /,/, which/WDT/which is/VBZ/is available/JJ/available to/TO/to you/NNP/you. you/PRP/you have/VBP/have to/TO/to take/VB/take a/DT/a fraction/NN/fraction of/IN/of this/DT/this item/NNP/item. so/RB/so /,/, each/DT/each item/NN/item /,/, you/PRP/you have/VBP/have to/TO/to say/VB/say /,/, what/WDT/what fraction/NNP/fraction. so/RB/so /,/, that/IN/that the/DT/the total/JJ/total size/NN/size is/VBZ/is at/IN/at most/JJS/most b/NN/b /,/, you/PRP/you can/MD/can not/RB/not take/VB/take /,/, more/JJR/more than/IN/than what/WP/what knapsack/NN/knapsack /,/, the/DT/the knapsack/NN/knapsack and/CC/and contain/NN/contain and/CC/and you/PRP/you want/VBP/want to/TO/to maximize/VB/maximize the/DT/the profit/NNP/profit. so/RB/so /,/, let/VB/let us/PRP/us again/RB/again write/JJ/write this/DT/this down/NN/down mathematically/NNP/mathematically. let/NN/let me/PRP/me recall/MD/recall /,/, you/PRP/you are/VBP/are given/NNP/given. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 56/CD/56 /CD/) so/RB/so /,/, you/PRP/you are/VBP/are given/VBN/given p/NN/p 1/CD/1 through/IN/through p/NN/p n/NN/n /,/, s/VBZ/s 1/CD/1 through/IN/through s/NNS/s n/VBP/n /,/, these/DT/these are/VBP/are profit/NN/profit and/CC/and sizes/VBZ/sizes and/CC/and b/NNP/b. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the capacity/NN/capacity of/IN/of the/DT/the knapsack/NNP/knapsack. what/WP/what do/VBP/do you/PRP/you want/VB/want is/VBZ/is /,/, so/RB/so you/PRP/you are/VBP/are going/VBG/going to/TO/to find/VB/find x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2 up/IN/up to/TO/to x/VB/x n/NNP/n. that/IN/that is/VBZ/is /,/, what/WP/what for/IN/for action/NN/action of/IN/of each/DT/each item/NN/item /,/, that/IN/that you/PRP/you want/VBP/want to/TO/to pick/NNP/pick. so/RB/so /,/, what/WDT/what should/MD/should be/VB/be satisfy/RB/satisfy /,/, well/RB/well you/PRP/you want/VBP/want maximize/VBP/maximize the/DT/the profit/NNP/profit. so/RB/so /,/, for/IN/for one/CD/one unit/NN/unit of/IN/of item/NN/item 1/CD/1 /,/, the/DT/the profit/NN/profit is/VBZ/is p/NN/p 1/CD/1 /,/, for/IN/for x/NN/x 1/CD/1 units/NNS/units /,/, it/PRP/it is/VBZ/is x/NN/x 1/CD/1 times/NNS/times p/VBP/p 1/CD/1. for/IN/for instance/NN/instance /,/, if/IN/if x/NN/x 1/CD/1 was/VBD/was half/PDT/half /,/, the/DT/the profit/NN/profit work/NN/work p/NN/p could/MD/could be/VB/be t/VBN/t 1/CD/1 by/IN/by 2/CD/2. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to maximize/VB/maximize sigma/NN/sigma x/NN/x i/PRP/i p/VBP/p i/PRP/i /,/, i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/NNP/n. and/CC/and the/DT/the total/JJ/total size/NN/size of/IN/of these/DT/these items/NNS/items ;/:/; that/DT/that you/PRP/you pick/VBP/pick should/MD/should be/VB/be at/IN/at most/JJS/most b/NNP/b. so/RB/so /,/, that/IN/that /,/, sigma/NN/sigma x/NN/x i/PRP/i s/VBZ/s i/PRP/i is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to b/VB/b /,/, i/PRP/i equal/JJ/equal to/TO/to 1/CD/1 to/TO/to n/NNP/n. and/CC/and let/VB/let me/PRP/me remind/VB/remind you/PRP/you /,/, that/DT/that x/NN/x i/PRP/i are/VBP/are fraction/NNP/fraction. so/RB/so /,/, 0/-NONE-/0 less/JJR/less than/IN/than equal/JJ/equal to/TO/to x/VB/x i/PRP/i /,/, less/JJR/less than/IN/than equal/JJ/equal to/TO/to 1/CD/1 for/IN/for all/DT/all i/NNP/i. so/RB/so /,/, mathematically/RB/mathematically /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem you/PRP/you want/VBP/want to/TO/to solve/NNP/solve. the/DT/the input/NN/input is/VBZ/is p/NN/p 1/CD/1 through/IN/through p/NN/p n/NN/n /,/, s/VBZ/s 1/CD/1 through/IN/through s/NNS/s n/VBP/n and/CC/and b/NNP/b. output/NN/output is/VBZ/is x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2 up/IN/up to/TO/to x/VB/x n/NNP/n. you/PRP/you want/VBP/want to/TO/to maximize/VB/maximize this/DT/this profit/NN/profit function/NN/function /,/, which/WDT/which is/VBZ/is sigma/NN/sigma x/NN/x i/PRP/i p/VBP/p i/NNP/i. and/CC/and the/DT/the x/NN/x i/PRP/i should/MD/should satisfy/VB/satisfy these/DT/these two/CD/two constraints/NNS/constraints /,/, which/WDT/which is/VBZ/is /,/, first/RB/first one/CD/one is/VBZ/is this/DT/this /,/, that/IN/that the/DT/the total/JJ/total size/NN/size that/WDT/that at/IN/at most/JJS/most b/NNP/b. and/CC/and the/DT/the 2nd/CD/2nd is/VBZ/is /,/, they/PRP/they must/MD/must live/VB/live between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the fractional/JJ/fractional knapsack/NN/knapsack problem/NNP/problem. this/DT/this is/VBZ/is the/DT/the problem/NN/problem ;/:/; that/DT/that you/PRP/you like/VBP/like to/TO/to solve/NNP/solve. so/RB/so /,/, how/WRB/how does/VBZ/does one/CD/one /,/, go/RB/go about/RB/about doing/VBG/doing this/DT/this /,/, where/WRB/where they/PRP/they still/RB/still within/IN/within the/DT/the real/JJ/real muff/NN/muff greedy/NN/greedy algorithms/NNP/algorithms. so/RB/so /,/, i/PRP/i guess/VBP/guess /,/, one/CD/one just/RB/just has/VBZ/has to/TO/to be/VB/be greedy/JJ/greedy and/CC/and pick/NN/pick as/IN/as many/JJ/many cakes/NNS/cakes as/IN/as one/CD/one can/NNP/can. so/RB/so /,/, what/WDT/what you/PRP/you like/VBP/like to/TO/to do/VB/do is/VBZ/is /,/, pick/NN/pick these/DT/these items/NNS/items 1/CD/1 by/IN/by 1/CD/1. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what a/DT/a greedy/JJ/greedy approach/NN/approach to/TO/to this/DT/this will/MD/will be/NNP/be. so/RB/so /,/, the/DT/the output/NN/output is/VBZ/is /,/, roughly/RB/roughly looks/VBZ/looks like/IN/like a/DT/a subset/NNP/subset. it/PRP/it is/VBZ/is a/DT/a fractional/JJ/fractional subset/NN/subset not/RB/not quite/RB/quite subset/VB/subset in/IN/in the/DT/the real/JJ/real terms/NNP/terms. but/CC/but /,/, still/RB/still we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do this/DT/this greedily/NN/greedily /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that ;/:/; we/PRP/we would/MD/would like/VB/like to/TO/to pick/VB/pick elements/NNS/elements by/IN/by 1/CD/1 by/IN/by 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 48/CD/48 /CD/) so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to use/VB/use the/DT/the greedy/NN/greedy approach/NN/approach /,/, which/WDT/which means/VBZ/means pick/NN/pick items/NNS/items 1/CD/1 by/IN/by 1/CD/1. so/RB/so /,/, the/DT/the crucial/JJ/crucial question/NN/question here/RB/here is/VBZ/is /,/, the/DT/the crucial/JJ/crucial decision/NN/decision that/WDT/that you/PRP/you want/VBP/want to/TO/to make/VB/make is/VBZ/is /,/, how/WRB/how do/VBP/do you/PRP/you order/JJR/order items/NNS/items to/TO/to pick/VB/pick well/RB/well /,/, i/PRP/i can/MD/can come/VB/come up/RP/up with/IN/with all/DT/all kinds/NNS/kinds of/IN/of orderings/NNP/orderings. you/PRP/you can/MD/can say/VB/say /,/, so/RB/so here/RB/here is/VBZ/is 1/CD/1 /,/, for/IN/for instance/NN/instance /,/, decreasing/VBG/decreasing profit/NNP/profit. so/RB/so /,/, you/PRP/you could/MD/could look/VB/look at/IN/at items/NNS/items in/IN/in decreasing/VBG/decreasing profit/NN/profit /,/, according/VBG/according to/TO/to decreasing/VBG/decreasing profit/NN/profit and/CC/and pick/VB/pick them/PRP/them /,/, well/RB/well increasing/VBG/increasing sizes/NNP/sizes. and/CC/and you/PRP/you could/MD/could sort/VB/sort of/IN/of put/VBN/put profit/NN/profit and/CC/and sizes/VBZ/sizes together/RP/together into/IN/into various/JJ/various functions/NNP/functions. and/CC/and let/VB/let us/PRP/us say/VB/say /,/, profit/NN/profit by/IN/by size/NN/size or/CC/or profit/NN/profit by/IN/by size/NN/size squared/VBD/squared /,/, profit/NN/profit squared/VBD/squared by/IN/by size/NN/size /,/, etcetera/NN/etcetera /,/, etcetera/NNP/etcetera. and/CC/and you/PRP/you know/VBP/know /,/, you/PRP/you can/MD/can ask/VB/ask /,/, which/WDT/which of/IN/of these/DT/these work/NNP/work. you/PRP/you can/MD/can try/VB/try /,/, all/DT/all of/IN/of these/DT/these /,/, do/VBP/do these/DT/these work/NNP/work. well/RB/well /,/, that/IN/that is/VBZ/is one/CD/one way/NN/way of/IN/of set/NN/set of/IN/of approaching/VBG/approaching this/NNP/this. try/NN/try all/DT/all these/DT/these /,/, you/PRP/you know/VBP/know various/JJ/various possibilities/NNS/possibilities that/WDT/that go/VB/go through/IN/through your/PRP$/your hidden/NN/hidden /,/, do/VBP/do not/RB/not go/VB/go through/IN/through your/PRP$/your hide/NNP/hide. and/CC/and you/PRP/you know/VBP/know /,/, trying/VBG/trying prove/NN/prove that/IN/that /,/, these/DT/these possibilities/NNS/possibilities work/NNP/work. remember/NN/remember that/WDT/that /,/, coming/VBG/coming of/IN/of the/DT/the possibilities/NNS/possibilities is/VBZ/is not/RB/not too/RB/too difficult/NNP/difficult. you/PRP/you just/RB/just listed/VBN/listed out/RP/out many/JJ/many /,/, coming/VBG/coming out/RP/out with/IN/with the/DT/the right/NN/right kind/NN/kind of/IN/of order/NN/order is/VBZ/is the/DT/the crucial/JJ/crucial /,/, is/VBZ/is the/DT/the sort/NN/sort of/IN/of key/JJ/key here/NNP/here. and/CC/and so/RB/so /,/, how/WRB/how do/VBP/do you/PRP/you do/VB/do this/NNP/this. one/CD/one is/VBZ/is /,/, when/WRB/when we/PRP/we try/VBP/try the/DT/the sort/NN/sort of/IN/of one/CD/one way/NN/way is/VBZ/is to/TO/to you/PRP/you know/VB/know /,/, come/VB/come up/RP/up with/IN/with these/DT/these things/NNS/things and/CC/and see/VB/see /,/, if/IN/if you/PRP/you can/MD/can prove/VB/prove one/CD/one way/NN/way or/CC/or the/DT/the other/NNP/other. either/DT/either come/NN/come up/RP/up with/IN/with examples/NNS/examples /,/, so/RB/so that/IN/that the/DT/the strategy/NN/strategy works/VBZ/works of/IN/of fails/NNP/fails. i/PRP/i mean/VBP/mean strategy/NN/strategy fails/NNS/fails or/CC/or you/PRP/you try/VBP/try and/CC/and prove/VB/prove somehow/NN/somehow /,/, that/IN/that this/DT/this strategy/NN/strategy works/NNP/works. what/WP/what we/PRP/we will/MD/will like/VB/like to/TO/to do/VB/do is/VBZ/is /,/, to/TO/to use/VB/use this/DT/this in/IN/in defined/VBN/defined exchange/NN/exchange trick/NN/trick ;/:/; that/DT/that we/PRP/we mentioned/NNP/mentioned. and/CC/and see/VB/see /,/, we/PRP/we can/MD/can use/VB/use act/NN/act to/TO/to design/VB/design /,/, this/DT/this algorithm/NNP/algorithm. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we going/VBG/going to/TO/to do/NNP/do. so/RB/so /,/, we/PRP/we going/VBG/going to/TO/to take/VB/take this/DT/this exchange/NN/exchange trick/NN/trick somehow/NN/somehow /,/, you/PRP/you know/VBP/know exchange/NN/exchange item/NNP/item. basically/RB/basically /,/, put/VBD/put one/CD/one item/NN/item in/IN/in and/CC/and exchange/NN/exchange one/CD/one item/NN/item for/IN/for another/DT/another and/CC/and see/VB/see what/WP/what happens/NNS/happens to/TO/to the/DT/the profit/NNP/profit. and/CC/and that/IN/that /,/, hopefully/RB/hopefully will/MD/will guide/VB/guide us/PRP/us /,/, as/IN/as to/TO/to how/WRB/how to/TO/to come/VB/come up/RP/up with/IN/with this/DT/this order/NN/order /,/, ordering/VBG/ordering on/IN/on a/DT/a limits/NNP/limits. this/DT/this does/VBZ/does not/RB/not always/RB/always work/VB/work /,/, but/CC/but in/IN/in cases/NNS/cases /,/, where/WRB/where it/PRP/it works/VBZ/works /,/, it/PRP/it works/NNP/works. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try this/NNP/this. so/RB/so /,/, supposing/VBG/supposing /,/, let/VB/let me/PRP/me raise/VB/raise /,/, write/JJ/write this/DT/this term/NNP/term. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to use/VB/use the/DT/the exchange/NN/exchange trick/NN/trick here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 11/CD/11 /CD/) so/RB/so /,/, remember/NN/remember /,/, this/DT/this is/VBZ/is just/RB/just the/DT/the way/NN/way to/TO/to design/VB/design the/DT/the algorithm/NNP/algorithm. this/DT/this is/VBZ/is some/DT/some kind/NN/kind of/IN/of trick/NN/trick that/IN/that you/PRP/you can/MD/can use/VB/use and/CC/and i/PRP/i am/VBP/am not/RB/not guaranteeing/VBG/guaranteeing that/IN/that this/DT/this will/MD/will work/NNP/work. always/RB/always /,/, it/PRP/it is/VBZ/is just/RB/just hints/VBZ/hints that/IN/that i/PRP/i give/VBP/give you/NNP/you. so/RB/so /,/, try/NN/try this/DT/this /,/, what/WP/what does/VBZ/does exchange/NN/exchange trick/NN/trick looks/NNS/looks like/IN/like /,/, we/PRP/we would/MD/would like/VB/like to/TO/to exchange/VB/exchange /,/, some/DT/some portion/NN/portion of/IN/of item/NN/item i/PRP/i for/IN/for item/NN/item j/NNP/j. see/NN/see /,/, there/EX/there are/VBP/are two/CD/two items/NNS/items i/PRP/i and/CC/and j/NNP/j. i/PRP/i would/MD/would like/VB/like to/TO/to put/VB/put more/JJR/more of/IN/of item/NN/item j/NN/j and/CC/and take/VB/take out/RP/out some/DT/some amount/NN/amount of/IN/of item/NN/item i/NNP/i. then/RB/then /,/, i/PRP/i will/MD/will like/VB/like to/TO/to see/VB/see /,/, what/WDT/what happens/NNS/happens to/TO/to the/DT/the profit/NNP/profit. of/IN/of course/NN/course /,/, i/PRP/i have/VBP/have to/TO/to make/VB/make sure/JJ/sure that/IN/that /,/, the/DT/the bag/NN/bag does/VBZ/does not/RB/not bust/NNP/bust. so/RB/so /,/, we/PRP/we can/MD/can assume/VB/assume that/IN/that /,/, you/PRP/you know/VBP/know you/PRP/you started/VBD/started out/RP/out with/IN/with solution/NN/solution in/IN/in mind/NNP/mind. and/CC/and you/PRP/you know/VBP/know /,/, you/PRP/you can/MD/can assume/VB/assume that/IN/that the/DT/the bag/NN/bag is/VBZ/is full/NNP/full. if/IN/if it/PRP/it is/VBZ/is not/RB/not full/JJ/full /,/, i/PRP/i can/MD/can put/VB/put /,/, you/PRP/you know/VBP/know /,/, i/PRP/i can/MD/can start/VB/start filling/NN/filling in/IN/in arbitrarily/NN/arbitrarily some/DT/some items/NNS/items in/IN/in the/DT/the bag/NN/bag is/VBZ/is full/NNP/full. so/RB/so /,/, we/PRP/we take/VBP/take /,/, let/VB/let us/PRP/us say/VB/say y/JJ/y 1/CD/1 of/IN/of item/NN/item 1/CD/1 /,/, y/JJ/y 2/CD/2 of/IN/of item/NN/item 2/CD/2 is/VBZ/is so/RB/so on/IN/on /,/, y/NN/y n/NN/n of/IN/of item/NN/item n/NN/n /,/, such/JJ/such that/IN/that /,/, the/DT/the bag/NN/bag is/VBZ/is full/NNP/full. and/CC/and from/IN/from now/RB/now /,/, with/IN/with this/DT/this in/IN/in mind/NN/mind /,/, now/RB/now i/PRP/i will/MD/will exchange/VB/exchange one/CD/one item/NN/item for/IN/for other/JJ/other for/IN/for another/NNP/another. so/RB/so /,/, that/IN/that the/DT/the bag/NN/bag still/RB/still remains/VBZ/remains full/NNP/full. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will see/VB/see what/WP/what happens/NNS/happens to/TO/to the/DT/the profit/NNP/profit. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the sort/NN/sort of/IN/of calculation/NN/calculation that/IN/that i/PRP/i would/MD/would like/VB/like to/TO/to do/NNP/do. so/RB/so /,/, will/MD/will assume/VB/assume y/NN/y t/NN/t unit/NN/unit is/VBZ/is of/IN/of item/NN/item t/NN/t picked/NNP/picked. and/CC/and so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the /,/, we/PRP/we will/MD/will also/RB/also assume/VB/assume that/IN/that sigma/NN/sigma y/NN/y t/NN/t s/NNS/s t/VBP/t /,/, t/NN/t going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n /,/, it/PRP/it is/VBZ/is exactly/RB/exactly b/NNP/b. so/RB/so /,/, the/DT/the bag/NN/bag is/VBZ/is full/NNP/full. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the profit/NN/profit /,/, the/DT/the profit/NN/profit is/VBZ/is nothing/NN/nothing /,/, but/CC/but sigma/NN/sigma y/NN/y t/NN/t p/NN/p t/NN/t /,/, t/NN/t going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n /,/, this/DT/this is/VBZ/is the/DT/the profit/NNP/profit. now/RB/now /,/, what/WDT/what would/MD/would i/VB/i like/IN/like to/TO/to do/VB/do with/IN/with this/DT/this is/VBZ/is /,/, remove/VBP/remove some/DT/some of/IN/of item/NN/item /,/, some/DT/some amount/NN/amount of/IN/of item/NN/item or/CC/or high/JJ/high an/DT/an increase/NN/increase some/DT/some amount/NN/amount of/IN/of item/NN/item j/NNP/j. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 06/CD/06 /CD/) so/RB/so /,/, in/IN/in my/PRP$/my new/JJ/new thing/NN/thing /,/, initially/RB/initially i/PRP/i had/VBD/had y/JJ/y 1/CD/1 /,/, y/JJ/y 2/CD/2 /,/, somewhere/RB/somewhere had/VBD/had y/JJ/y i/PRP/i /,/, somewhere/RB/somewhere had/VBD/had y/JJ/y j/NN/j /,/, y/NN/y n/NNP/n. this/DT/this is/VBZ/is what/WP/what i/PRP/i have/NNP/have. now/RB/now /,/, what/WDT/what i/PRP/i would/MD/would like/VB/like to/TO/to do/VB/do is/VBZ/is /,/, make/VBP/make this/DT/this /,/, let/VB/let us/PRP/us say/VB/say y/JJ/y i/PRP/i minus/VBZ/minus epsilon/JJ/epsilon /,/, for/IN/for some/DT/some small/JJ/small epsilon/NNP/epsilon. and/CC/and this/DT/this /,/, i/PRP/i would/MD/would like/VB/like to/TO/to increase/VB/increase by/IN/by some/DT/some amount/NNP/amount. let/NN/let us/PRP/us say/VBP/say y/JJ/y j/NN/j plus/CC/plus epsilon/NN/epsilon prime/NNP/prime. this/DT/this is/VBZ/is what/WP/what i/PRP/i would/MD/would like/VB/like to/TO/to do/VB/do /,/, which/WDT/which is/VBZ/is i/PRP/i have/VBP/have replaced/VBN/replaced some/DT/some portion/NN/portion of/IN/of the/DT/the ith/NN/ith element/NN/element with/IN/with some/DT/some of/IN/of the/DT/the jth/NN/jth element/NNP/element. i/PRP/i would/MD/would like/VB/like to/TO/to maintain/VB/maintain the/DT/the bag/NN/bag to/TO/to be/VB/be full/JJ/full /,/, what/WP/what this/DT/this transactions/NNS/transactions to/TO/to be/VB/be such/JJ/such that/IN/that the/DT/the bag/NN/bag is/VBZ/is still/RB/still full/NNP/full. then/RB/then /,/, i/PRP/i would/MD/would like/VB/like to/TO/to see/VB/see what/WP/what happens/NNS/happens to/TO/to the/DT/the profit/NNP/profit. so/RB/so /,/, what/WDT/what it/PRP/it mean/VBP/mean that/IN/that the/DT/the bag/NN/bag is/VBZ/is full/JJ/full /,/, it/PRP/it means/VBZ/means /,/, s/NNS/s 1/CD/1 /,/, y/JJ/y 1/CD/1 plus/NNS/plus s/NNS/s 2/CD/2 /,/, y/NN/y 2/CD/2 and/CC/and so/RB/so on/IN/on /,/, plus/CC/plus s/NNS/s i/PRP/i and/CC/and y/JJ/y i/NN/i minus/NN/minus epsilon/NN/epsilon plus/CC/plus 1/CD/1 s/NNS/s j/NN/j into/IN/into y/NN/y j/NN/j plus/CC/plus epsilon/NN/epsilon plus/CC/plus s/NNS/s n/VBP/n y/NN/y n/NN/n equal/JJ/equal to/TO/to b/NNP/b. so/RB/so /,/, this/DT/this is/VBZ/is sigma/NN/sigma s/NNS/s i/PRP/i y/VBP/y i/PRP/i sorry/VBP/sorry /,/, s/NNS/s t/VBP/t /,/, let/VB/let us/PRP/us say/VB/say y/JJ/y t/NN/t /,/, t/NN/t going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n /,/, plus/CC/plus s/NNS/s j/VBP/j times/NNS/times /,/, this/DT/this is/VBZ/is epsilon/NN/epsilon prime/NNP/prime. epsilon/NN/epsilon prime/NN/prime minus/NN/minus s/NNS/s i/PRP/i times/VBZ/times epsilon/JJ/epsilon equal/JJ/equal to/TO/to b/NNP/b. well/RB/well /,/, this/DT/this fellow/JJ/fellow i/NN/i know/VBP/know already/RB/already b/NN/b /,/, because/IN/because /,/, initially/RB/initially i/PRP/i started/VBD/started out/RP/out with/IN/with the/DT/the bag/NN/bag being/VBG/being full/NNP/full. so/RB/so /,/, we/PRP/we have/VBP/have that/IN/that s/NNS/s j/VBP/j epsilon/NN/epsilon prime/NN/prime equals/NNS/equals s/VBZ/s i/PRP/i epsilon/NNP/epsilon. if/IN/if i/PRP/i want/VBP/want the/DT/the bag/NN/bag to/TO/to be/VB/be full/JJ/full /,/, then/RB/then i/PRP/i guide/VBP/guide that/IN/that epsilon/NN/epsilon prime/NN/prime and/CC/and epsilon/NN/epsilon i/PRP/i can/MD/can choose/VB/choose in/IN/in the/DT/the ratio/NN/ratio of/IN/of s/NNS/s j/VBP/j to/TO/to s/NNS/s i/NNP/i. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 26/CD/26 /CD/) so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, what/WDT/what happens/NNS/happens to/TO/to the/DT/the profit/NNP/profit. so/RB/so /,/, what/WDT/what happens/NNS/happens to/TO/to the/DT/the profit/NN/profit ?/./? so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the new/JJ/new profit/NN/profit ?/./? the/DT/the old/JJ/old profit/NN/profit we/PRP/we know/NNP/know. the/DT/the new/JJ/new profit/NN/profit is/VBZ/is /,/, new/JJ/new is/VBZ/is p/NN/p 1/CD/1 /,/, y/JJ/y 1/CD/1 and/CC/and so/RB/so on/IN/on /,/, plus/CC/plus p/VB/p i/PRP/i into/IN/into y/JJ/y i/PRP/i minus/VBZ/minus epsilon/NNP/epsilon. so/RB/so /,/, on/IN/on plus/CC/plus p/NN/p j/NN/j into/IN/into y/NN/y j/NN/j plus/CC/plus epsilon/NN/epsilon prime/NN/prime and/CC/and we/PRP/we go/VBP/go on/IN/on p/NN/p n/NN/n times/NNS/times y/VBP/y n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing /,/, but/CC/but the/DT/the old/JJ/old profit/NN/profit which/WDT/which is/VBZ/is p/VBP/p 1/CD/1 /,/, y/JJ/y 1/CD/1 and/CC/and so/RB/so on/IN/on /,/, p/NN/p i/PRP/i y/VBP/y i/PRP/i etcetera/VBP/etcetera /,/, p/NN/p j/NN/j y/NN/y j/NN/j plus/CC/plus p/NN/p n/NN/n y/NN/y n/NN/n plus/CC/plus minus/NN/minus p/NN/p i/PRP/i time/VBP/time epsilon/RP/epsilon plus/RB/plus p/VB/p j/NN/j times/NNS/times epsilon/VBP/epsilon prime/NNP/prime. so/RB/so /,/, the/DT/the new/JJ/new profit/NN/profit is/VBZ/is nothing/NN/nothing /,/, but/CC/but the/DT/the old/JJ/old profit/NN/profit minus/NN/minus this/DT/this plus/NN/plus /,/, that/IN/that good/NNP/good. so/RB/so /,/, now/RB/now the/DT/the profit/NN/profit /,/, there/EX/there is/VBZ/is a/DT/a profit/NN/profit increase/NN/increase this/DT/this is/NNP/is. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/NNP/want. when/WRB/when /,/, is/VBZ/is there/EX/there profit/NN/profit increase/NN/increase /,/, well/RB/well this/DT/this fellow/JJ/fellow is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 /,/, which/WDT/which means/VBZ/means p/NN/p j/NN/j times/NNS/times epsilon/VBP/epsilon prime/JJ/prime is/VBZ/is greater/JJR/greater than/IN/than p/NN/p i/PRP/i times/VBZ/times epsilon/JJ/epsilon /,/, which/WDT/which means/VBZ/means p/NN/p j/NN/j by/IN/by p/NN/p i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than epsilon/NN/epsilon by/IN/by epsilon/NN/epsilon prime/NNP/prime. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a profit/NN/profit increase/NN/increase /,/, this/DT/this is/VBZ/is 2/CD/2. let/NN/let me/PRP/me just/RB/just full/JJ/full back/RB/back and/CC/and old/JJ/old slide/NN/slide /:/( /:/( refer/NN/refer time/NN/time /:/: 15/CD/15 /:/: 06/CD/06 /CD/) /CD/) on/IN/on this/DT/this is/VBZ/is s/VBZ/s j/NN/j times/NNS/times epsilon/VBP/epsilon prime/JJ/prime is/VBZ/is s/NNS/s i/PRP/i times/VBZ/times epsilon/JJ/epsilon which/NN/which means/VBZ/means epsilon/NN/epsilon by/IN/by epsilon/NN/epsilon prime/JJ/prime is/VBZ/is s/NNS/s j/VBP/j by/IN/by s/NNS/s i/NNP/i. now/RB/now /,/, so/RB/so let/VB/let us/PRP/us just/RB/just put/VBD/put this/DT/this bag/NN/bag into/IN/into that/DT/that other/JJ/other inequality/NNP/inequality. we/PRP/we are/VBP/are going/VBG/going to/TO/to put/VB/put this/DT/this equality/NN/equality into/IN/into other/JJ/other inequality/NNP/inequality. so/IN/so /,/, this/DT/this epsilon/NN/epsilon by/IN/by epsilon/NN/epsilon prime/JJ/prime is/VBZ/is nothing/NN/nothing /,/, but/CC/but s/VBZ/s j/NN/j by/IN/by s/NNS/s i/NNP/i. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a profit/NN/profit increase/NN/increase if/IN/if p/NN/p j/NN/j by/IN/by p/NN/p i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than s/NNS/s j/VBP/j by/IN/by s/NNS/s i/PRP/i or/CC/or p/VB/p j/NN/j by/IN/by s/NNS/s j/VBP/j is/VBZ/is greater/JJR/greater than/IN/than pi/NN/pi by/IN/by s/NNS/s i/NNP/i. there/RB/there is/VBZ/is an/DT/an increase/NN/increase in/IN/in profit/NN/profit if/IN/if p/NN/p j/NN/j by/IN/by s/NNS/s j/VBP/j is/VBZ/is greater/JJR/greater than/IN/than p/NN/p i/PRP/i by/IN/by s/NNS/s i/NNP/i. this/DT/this tells/VBZ/tells you/PRP/you /,/, what/WP/what to/TO/to favor/NNP/favor. i/PRP/i remember/VBP/remember this/DT/this happen/NN/happen /,/, if/IN/if i/PRP/i replace/VBP/replace part/NN/part of/IN/of item/NN/item i/PRP/i with/IN/with item/NN/item j/NNP/j. i/PRP/i should/MD/should favor/VB/favor item/NN/item j/NN/j if/IN/if p/NN/p j/NN/j by/IN/by s/NNS/s j/VBP/j is/VBZ/is greater/JJR/greater than/IN/than p/NN/p i/PRP/i by/IN/by s/NNS/s i/NNP/i. that/IN/that is/VBZ/is what/WP/what this/DT/this calculation/NN/calculation tells/VBZ/tells and/CC/and that/IN/that is/VBZ/is what/WP/what my/PRP$/my algorithms/NNS/algorithms will/MD/will give/NNP/give. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 58/CD/58 /CD/) so/RB/so /,/, you/PRP/you can/MD/can see/VB/see /,/, how/WRB/how just/RB/just using/VBG/using the/DT/the exchange/NN/exchange trick/NNP/trick. we/PRP/we have/VBP/have actually/RB/actually device/NN/device an/DT/an algorithms/NNS/algorithms and/CC/and we/PRP/we will/MD/will /,/, in/IN/in fact/NN/fact /,/, also/RB/also proof/IN/proof that/DT/that this/DT/this algorithm/NN/algorithm is/VBZ/is optimum/NNP/optimum. so/RB/so /,/, these/DT/these score/NN/score of/IN/of an/DT/an item/NN/item is/VBZ/is nothing/NN/nothing /,/, but/CC/but profit/NN/profit divided/VBD/divided by/IN/by size/NNP/size. and/CC/and the/DT/the algorithm/NN/algorithm is/VBZ/is simple/JJ/simple /,/, you/PRP/you say/VBP/say /,/, the/DT/the algorithm/NN/algorithm says/VBZ/says order/NN/order items/NNS/items by/IN/by let/NN/let us/PRP/us say/VBP/say decreasing/VBG/decreasing scores/NNP/scores. and/CC/and when/WRB/when pick/NN/pick these/DT/these items/NNS/items in/IN/in this/DT/this order/NN/order and/CC/and pick/VB/pick them/PRP/them in/IN/in this/DT/this order/NN/order /,/, till/NN/till you/PRP/you fill/MD/fill the/DT/the knapsack/NNP/knapsack. this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm in/IN/in one/CD/one sentence/NNP/sentence. so/RB/so /,/, how/WRB/how will/MD/will they/PRP/they output/VB/output look/NN/look like/IN/like /,/, well/RB/well you/PRP/you pick/VBP/pick the/DT/the first/JJ/first item/NN/item /,/, the/DT/the one/CD/one with/IN/with top/JJ/top score/NN/score /,/, you/PRP/you pick/VBP/pick the/DT/the item/NN/item /,/, you/PRP/you pick/VBP/pick the/DT/the next/JJ/next item/NN/item and/CC/and so/RB/so on/NNP/on. and/CC/and at/IN/at some/DT/some point/NN/point /,/, you/PRP/you know/VBP/know you/PRP/you picked/VBD/picked these/DT/these items/NNS/items and/CC/and the/DT/the next/JJ/next item/NN/item ;/:/; there/EX/there may/MD/may not/RB/not be/VB/be enough/RB/enough space/NN/space in/IN/in the/DT/the knapsack/NNP/knapsack. so/RB/so /,/, you/PRP/you do/VBP/do not/RB/not pick/VB/pick the/DT/the entire/JJ/entire item/NN/item /,/, you/PRP/you pick/VBP/pick a/DT/a fraction/NNP/fraction. so/RB/so /,/, the/DT/the first/JJ/first few/JJ/few items/NNS/items /,/, the/DT/the first/JJ/first /,/, if/IN/if i/PRP/i pick/VBP/pick k/NN/k items/NNS/items /,/, k/NN/k minus/NN/minus 1/CD/1 item/NN/item will/MD/will be/VB/be /,/, i/PRP/i will/MD/will pick/VB/pick the/DT/the entire/JJ/entire item/NN/item unit/NNP/unit. and/CC/and the/DT/the kth/NN/kth item/NN/item will/MD/will be/VB/be a/DT/a fraction/NNP/fraction. so/RB/so /,/, in/IN/in my/PRP$/my solution/NN/solution /,/, there/EX/there will/MD/will be/VB/be one/CD/one fraction/NN/fraction /,/, which/WDT/which is/VBZ/is a/DT/a last/JJ/last item/NN/item and/CC/and the/DT/the rest/NN/rest of/IN/of them/PRP/them will/MD/will be/VB/be units/NNP/units. that/IN/that is/VBZ/is what/WP/what the/DT/the outputs/NNS/outputs looks/VBZ/looks like/NNP/like. so/RB/so /,/, the/DT/the algorithm/NN/algorithm /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at /,/, let/VB/let us/PRP/us say/VB/say x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2 /,/, so/RB/so on/IN/on /,/, this/DT/this is/VBZ/is the/DT/the output/NNP/output. and/CC/and let/VB/let us/PRP/us say/VB/say 1/CD/1 is/VBZ/is the/DT/the item/NN/item with/IN/with maximum/NN/maximum score/NNP/score. so/RB/so /,/, this/DT/this is/VBZ/is items/NNS/items by/IN/by decreasing/VBG/decreasing scores/NNP/scores. this/DT/this is/VBZ/is the/DT/the maximum/NN/maximum score/NN/score and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is the/DT/the least/JJS/least score/NNP/score. then/RB/then and/CC/and this/DT/this is/VBZ/is the/DT/the output/NN/output is/VBZ/is output/NNP/output. then/RB/then /,/, it/PRP/it is/VBZ/is of/IN/of the/DT/the form/NN/form /,/, this/DT/this sequence/NN/sequence is/VBZ/is and/CC/and let/VB/let us/PRP/us say/VB/say /,/, it/PRP/it is/VBZ/is of/IN/of the/DT/the form/NN/form 1/CD/1 /,/, 1/CD/1 /,/, 1/CD/1 up/RP/up to/TO/to some/DT/some level/NNP/level. and/CC/and then/RB/then some/DT/some let/NN/let us/PRP/us say/VBP/say delta/NN/delta /,/, which/WDT/which is/VBZ/is between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1 /,/, and/CC/and then/RB/then 0/-NONE-/0 /,/, 0/NNP/0. this/DT/this is/VBZ/is how/WRB/how the/DT/the output/NN/output looks/VBZ/looks likes/NNP/likes. we/PRP/we need/VBP/need to/TO/to now/RB/now proof/IN/proof that/DT/that /,/, this/DT/this in/IN/in the/DT/the works/NNP/works. this/DT/this algorithm/NN/algorithm /,/, the/DT/the output/NN/output that/IN/that this/DT/this algorithm/NN/algorithm gives/VBZ/gives you/PRP/you is/VBZ/is optimal/NNP/optimal. so/RB/so /,/, let/VB/let us/PRP/us prove/VBP/prove that/IN/that this/DT/this is/VBZ/is optimum/NNP/optimum. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 51/CD/51 /CD/) so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to compare/VB/compare this/DT/this with/IN/with any/DT/any optimum/NN/optimum and/CC/and shows/VBZ/shows that/IN/that /,/, this/DT/this is/VBZ/is optimum/NNP/optimum. this/DT/this is/VBZ/is the/DT/the /,/, next/JJ/next way/NN/way we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do it/PRP/it and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to use/VB/use an/DT/an exchange/NN/exchange trick/NN/trick again/NNP/again. but/CC/but /,/, now/RB/now to/TO/to prove/VB/prove that/IN/that it/PRP/it is/VBZ/is indeed/RB/indeed correct/NNP/correct. and/CC/and we/PRP/we will/MD/will use/VB/use it/PRP/it the/DT/the same/JJ/same way/NN/way /,/, we/PRP/we use/VBP/use it/PRP/it earlier/NNP/earlier. so/RB/so /,/, please/VB/please set/VBN/set of/IN/of review/NN/review that/IN/that material/NN/material /,/, if/IN/if you/PRP/you forgotten/NNP/forgotten. so/RB/so /,/, the/DT/the proof/NN/proof goes/VBZ/goes this/DT/this way/NNP/way. so/RB/so /,/, supposing/VBG/supposing /,/, so/RB/so let/VB/let z/NN/z 1/CD/1 /,/, z/NN/z 2/CD/2 /,/, z/NN/z n/NN/n be/VB/be an/DT/an optimum/NN/optimum output/NNP/output. let/NN/let me/PRP/me recall/MD/recall that/IN/that /,/, our/PRP$/our outputs/NNS/outputs looks/NNS/looks like/IN/like this/DT/this /,/, /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 58/CD/58 /CD/) /CD/) it/PRP/it is/VBZ/is x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2 /,/, x/NN/x n/NNP/n. it/PRP/it looks/VBZ/looks like/IN/like 1/CD/1 /,/, till/IN/till something/NNP/something. these/DT/these are/VBP/are in/IN/in decreasing/VBG/decreasing order/NN/order of/IN/of scores/NNP/scores. then/RB/then /,/, you/PRP/you have/VBP/have a/DT/a delta/NN/delta and/CC/and then/RB/then 0/-NONE-/0 ?/./? s/NNP/s. this/DT/this is/VBZ/is how/WRB/how our/PRP$/our outputs/NNS/outputs looks/NNS/looks like/IN/like good/NNP/good. so/RB/so /,/, let/VB/let z/NN/z 1/CD/1 /,/, z/NN/z 2/CD/2 /,/, z/NN/z n/NN/n be/VB/be an/DT/an optimum/NN/optimum output/NNP/output. again/RB/again /,/, the/DT/the items/NNS/items are/VBP/are /,/, the/DT/the order/NN/order of/IN/of the/DT/the item/NN/item is/VBZ/is at/IN/at the/DT/the same/NNP/same. in/IN/in both/DT/both /,/, z/NN/z 1/CD/1 /,/, the/DT/the item/NN/item 1/CD/1 is/VBZ/is an/DT/an item/NN/item with/IN/with the/DT/the top/JJ/top score/NNP/score. this/DT/this is/VBZ/is the/DT/the way/NN/way the/DT/the optimum/NN/optimum picks/VBZ/picks /,/, if/IN/if it/PRP/it is/VBZ/is of/IN/of course/NN/course /,/, 1/CD/1 /,/, 1/CD/1 /,/, 1/CD/1 /,/, and/CC/and then/RB/then /,/, delta/NN/delta and/CC/and 0/CD/0. then/RB/then /,/, you/PRP/you have/VBP/have done/VBN/done /,/, because/IN/because this/DT/this exactly/RB/exactly equals/VBZ/equals z/NN/z exactly/RB/exactly equals/VBZ/equals x/NNP/x. now/RB/now /,/, let/VB/let it/PRP/it is/VBZ/is possible/JJ/possible that/IN/that z/NN/z 1/CD/1 /,/, equal/JJ/equal to/TO/to x/VB/x 1/CD/1 /,/, z/NN/z 2/CD/2 /,/, equal/JJ/equal to/TO/to x/VB/x 2/CD/2. but/CC/but /,/, if/IN/if they/PRP/they are/VBP/are different/JJ/different /,/, they/PRP/they will/MD/will be/VB/be first/RB/first index/NN/index /,/, where/WRB/where they/PRP/they differ/NNP/differ. there/RB/there will/MD/will be/VB/be a/DT/a first/JJ/first index/NN/index /,/, where/WRB/where they/PRP/they differ/NNP/differ. so/RB/so /,/, what/WDT/what you/PRP/you are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is /,/, we/PRP/we picked/VBD/picked more/JJR/more of/IN/of these/DT/these item/NN/item in/IN/in the/DT/the first/JJ/first index/NN/index exit/NN/exit ith/IN/ith index/NN/index they/PRP/they differ/NNP/differ. then/RB/then /,/, here/RB/here we/PRP/we thick/VBP/thick more/JJR/more of/IN/of i/PRP/i and/CC/and he/PRP/he picked/VBD/picked less/JJR/less of/IN/of i/NNP/i. because/IN/because /,/, we/PRP/we picked/VBD/picked one/CD/one unit/NN/unit of/IN/of i/PRP/i and/CC/and he/PRP/he is/VBZ/is picked/VBN/picked /,/, let/VB/let say/VBP/say /,/, less/RBR/less than/IN/than one/CD/one unit/NN/unit of/IN/of i/NNP/i. then/RB/then /,/, we/PRP/we would/MD/would like/VB/like to/TO/to see/VB/see what/WP/what happens/NNP/happens. if/IN/if we/PRP/we increase/VBP/increase /,/, we/PRP/we take/VBP/take the/DT/the optimum/NN/optimum increase/NN/increase the/DT/the ith/NN/ith and/CC/and we/PRP/we decrease/VBP/decrease something/NN/something some/DT/some other/JJ/other /,/, where/WRB/where which/WDT/which as/IN/as a/DT/a lower/JJR/lower score/NN/score /,/, we/PRP/we can/MD/can do/VB/do this/NNP/this. and/CC/and using/VBG/using the/DT/the previous/JJ/previous sort/NN/sort of/IN/of calculation/NN/calculation that/IN/that we/PRP/we did/VBD/did during/IN/during the/DT/the exchange/NN/exchange trick/NN/trick /,/, we/PRP/we will/MD/will see/VB/see that/IN/that the/DT/the profit/NN/profit goes/VBZ/goes out/NNP/out. this/DT/this is/VBZ/is the/DT/the argument/NNP/argument. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just formalize/NNP/formalize. so/RB/so /,/, let/VB/let j/NN/j be/VB/be the/DT/the first/JJ/first coordinate/NN/coordinate /,/, where/WRB/where z/NN/z j/NN/j is/VBZ/is less/JJR/less than/IN/than x/NN/x j/NNP/j. this/DT/this is/VBZ/is also/RB/also the/DT/the first/JJ/first coordinate/NN/coordinate /,/, where/WRB/where they/PRP/they differ/NNP/differ. well/RB/well /,/, i/PRP/i will/MD/will let/VB/let you/PRP/you observed/VBN/observed or/CC/or proof/IN/proof that/DT/that /,/, this/DT/this first/JJ/first coordinate/NN/coordinate /,/, where/WRB/where they/PRP/they differ/VBP/differ /,/, z/NN/z j/NN/j will/MD/will be/VB/be less/RBR/less than/IN/than x/NN/x j/NN/j /,/, it/PRP/it will/MD/will not/RB/not be/VB/be greater/JJR/greater than/IN/than x/NN/x j/NNP/j. that/IN/that is/VBZ/is the/DT/the way/NN/way /,/, we/PRP/we have/VBP/have picked/VBN/picked exist/NNP/exist. they/PRP/they are/VBP/are once/RB/once still/RB/still some/DT/some stage/NN/stage and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is a/DT/a delta/NN/delta total/NN/total sum/NN/sum is/VBZ/is b/NNP/b. if/IN/if i/PRP/i increase/VBP/increase any/DT/any one/CD/one of/IN/of them/PRP/them /,/, it/PRP/it is/VBZ/is can/MD/can not/RB/not be/VB/be /,/, the/DT/the once/RB/once i/PRP/i can/MD/can not/RB/not increase/VB/increase obviously/NNP/obviously. and/CC/and if/IN/if all/DT/all the/DT/the initial/JJ/initial things/NNS/things are/VBP/are 1/CD/1 /,/, i/PRP/i can/MD/can not/RB/not increase/VB/increase this/DT/this delta/NNP/delta. because/IN/because /,/, then/RB/then it/PRP/it will/MD/will be/VB/be greater/JJR/greater than/IN/than b/NNP/b. so/RB/so /,/, the/DT/the first/JJ/first coordinate/NN/coordinate /,/, where/WRB/where they/PRP/they differ/VBP/differ z/NN/z j/NN/j will/MD/will be/VB/be less/RBR/less than/IN/than x/NN/x j/NNP/j. so/RB/so /,/, then/RB/then there/EX/there is/VBZ/is some/DT/some i/PRP/i /,/, which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than j/NN/j /,/, where/WRB/where z/NN/z j/NN/j is/VBZ/is greater/JJR/greater than/IN/than x/NN/x j/NN/j /,/, z/NN/z i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than x/NN/x i/PRP/i /,/, some/DT/some x/NN/x i/PRP/i /,/, where/WRB/where this/DT/this is/VBZ/is true/NNP/true. because/IN/because /,/, the/DT/the total/JJ/total of/IN/of both/DT/both of/IN/of them/PRP/them is/VBZ/is b/NNP/b. now/RB/now /,/, what/WDT/what i/PRP/i do/VBP/do is/VBZ/is /,/, i/PRP/i increase/VBP/increase the/DT/the profit/NNP/profit. so/RB/so /,/, one/CD/one can/MD/can increase/VB/increase the/DT/the profit/NN/profit here/RB/here by/IN/by doing/VBG/doing this/NNP/this. so/RB/so /,/, take/VB/take z/NN/z 1/CD/1 /,/, z/NN/z 2/CD/2 /,/, z/NN/z j/NN/j plus/CC/plus epsilon/NN/epsilon and/CC/and so/RB/so on/IN/on /,/, z/NN/z i/PRP/i minus/VBZ/minus epsilon/JJ/epsilon and/CC/and so/RB/so on/IN/on z/NN/z n/NNP/n. so/RB/so /,/, look/VBP/look at/IN/at this/DT/this epsilon/NN/epsilon prime/NN/prime /,/, do/VBP/do the/DT/the same/JJ/same calculation/NN/calculation that/IN/that you/PRP/you did/NNP/did. and/CC/and you/PRP/you can/MD/can see/VB/see /,/, that/IN/that the/DT/the profit/NN/profit /,/, remember/NN/remember as/IN/as an/DT/an end/NN/end of/IN/of it/PRP/it /,/, we/PRP/we came/VBD/came up/RP/up with/IN/with the/DT/the new/JJ/new profit/NN/profit /,/, which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than the/DT/the old/JJ/old profit/NNP/profit. of/IN/of course/NN/course /,/, we/PRP/we need/VBP/need to/TO/to choose/VB/choose epsilon/NN/epsilon and/CC/and epsilon/NN/epsilon prime/NN/prime properly/NNP/properly. and/CC/and i/PRP/i like/VBP/like to/TO/to look/VB/look at/IN/at /,/, i/PRP/i like/VBP/like to/TO/to do/VB/do this/NNP/this. so/RB/so /,/, go/VBP/go back/RB/back to/TO/to this/DT/this old/JJ/old calculation/NN/calculation that/WDT/that we/PRP/we did/NNP/did. figure/NN/figure out/RP/out /,/, what/WP/what epsilon/NN/epsilon the/DT/the epsilon/NN/epsilon prime/NN/prime should/MD/should be/NNP/be. i/PRP/i again/RB/again have/VBP/have enough/RB/enough items/NNS/items to/TO/to fill/VB/fill enough/JJ/enough type/NN/type size/NN/size of/IN/of b/NNP/b. with/IN/with the/DT/the profit/NN/profit as/IN/as strictly/RB/strictly increased/VBN/increased /,/, which/WDT/which means/VBZ/means at/IN/at the/DT/the original/JJ/original z/NN/z 1/CD/1 /,/, z/NN/z 2/CD/2 /,/, up/RB/up to/TO/to z/VB/z n/NN/n was/VBD/was not/RB/not optimum/NNP/optimum. that/WDT/that is/VBZ/is the/DT/the contradiction/NNP/contradiction. so/RB/so /,/, this/DT/this is/VBZ/is /,/, for/IN/for a/DT/a contradiction/NN/contradiction and/CC/and calculate/VB/calculate the/DT/the profit/NN/profit for/IN/for a/DT/a contradiction/NNP/contradiction. i/PRP/i am/VBP/am said/VBD/said towards/NNS/towards /,/, that/IN/that is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the proof/NNP/proof. i/PRP/i let/VBP/let you/PRP/you sort/NN/sort of/IN/of frame/NN/frame this/DT/this better/NN/better and/CC/and write/VB/write it/PRP/it properly/NNP/properly. that/IN/that is/VBZ/is one/CD/one small/JJ/small thing/NN/thing about/IN/about this/DT/this proof/NN/proof which/WDT/which i/PRP/i should/MD/should say/VB/say /,/, supposing/VBG/supposing /,/, so/RB/so let/VB/let us/PRP/us say/VB/say that/IN/that /,/, these/DT/these items/NNS/items are/VBP/are same/JJ/same score/NNP/score. they/PRP/they all/DT/all had/VBD/had different/JJ/different scores/NNS/scores and/CC/and then/RB/then /,/, there/EX/there is/VBZ/is no/DT/no problem/NN/problem in/IN/in this/DT/this proof/NN/proof /,/, it/PRP/it was/VBD/was perfectly/NNP/perfectly. if/IN/if the/DT/the scores/NNS/scores are/VBP/are the/DT/the same/JJ/same /,/, then/RB/then you/PRP/you need/VBP/need to/TO/to worry/VB/worry about/IN/about it/NNP/it. you/PRP/you need/VBP/need to/TO/to modify/VB/modify the/DT/the proof/NN/proof slightly/NNP/slightly. basically/RB/basically /,/, i/PRP/i could/MD/could up/VB/up chose/DT/chose in/IN/in you/PRP/you know/VBP/know an/DT/an item/NN/item with/IN/with /,/, among/IN/among items/NNS/items in/IN/in the/DT/the same/JJ/same score/NN/score /,/, i/PRP/i can/MD/can sort/VB/sort of/IN/of chose/NN/chose any/DT/any one/CD/one of/IN/of them/PRP/them write/NNP/write. and/CC/and i/PRP/i may/MD/may differ/VB/differ /,/, from/IN/from the/DT/the optimum/NN/optimum in/IN/in this/DT/this respect/NN/respect /,/, but/CC/but it/PRP/it is/VBZ/is only/RB/only in/IN/in this/DT/this respect/NNP/respect. that/IN/that part/NN/part of/IN/of the/DT/the proof/NN/proof /,/, i/PRP/i will/MD/will let/VB/let you/PRP/you sort/VB/sort of/IN/of film/NN/film /,/, but/CC/but module/NN/module that/IN/that /,/, this/DT/this finishes/NNS/finishes the/DT/the proof/NN/proof of/IN/of correctness/NN/correctness of/IN/of the/DT/the algorithm/NN/algorithm to/TO/to fill/VB/fill up/RP/up knapsack/NNP/knapsack. so/RB/so /,/, again/RB/again /,/, let/VB/let me/PRP/me emphasis/NN/emphasis this/DT/this /,/, that/IN/that the/DT/the right/NN/right order/NN/order that/WDT/that we/PRP/we want/VBP/want is/VBZ/is to/TO/to pick/VB/pick to/TO/to look/VB/look at/IN/at the/DT/the profit/NN/profit by/IN/by size/NNP/size. this/DT/this is/VBZ/is also/RB/also ;/:/; you/PRP/you could/MD/could up/VB/up come/VBN/come up/RP/up with/IN/with this/DT/this intuitaly/RB/intuitaly also/NNP/also. you/PRP/you know/VBP/know /,/, your/PRP$/your intuition/NN/intuition could/MD/could have/VB/have told/VBN/told you/PRP/you /,/, in/IN/in fact/NN/fact /,/, even/RB/even i/PRP/i mentioned/VBD/mentioned initially/RB/initially /,/, that/IN/that you/PRP/you look/VBP/look at/IN/at profit/NN/profit by/IN/by size/NN/size /,/, as/IN/as i/PRP/i measure/VBP/measure /,/, which/WDT/which we/PRP/we should/MD/should follow/NNP/follow. but/CC/but to/TO/to sort/VB/sort of/IN/of the/DT/the way/NN/way /,/, we/PRP/we got/VBD/got it/PRP/it was/VBD/was just/RB/just by/IN/by trying/VBG/trying out/IN/out this/DT/this exchange/NN/exchange idea/NNP/idea. and/CC/and just/RB/just exchange/NN/exchange two/CD/two things/NNS/things and/CC/and we/PRP/we saw/VBD/saw what/WP/what happened/VBN/happened and/CC/and profit/NN/profit by/IN/by size/NN/size /,/, came/VBD/came out/RP/out naturally/RB/naturally from/IN/from this/DT/this from/IN/from this/DT/this exercise/NNP/exercise. so/RB/so /,/, that/IN/that is/VBZ/is just/RB/just see/VB/see /,/, that/IN/that is/VBZ/is the/DT/the model/NN/model that/IN/that i/PRP/i want/VBP/want to/TO/to commit/VB/commit you/NNP/you. that/IN/that often/RB/often /,/, when/WRB/when you/PRP/you are/VBP/are face/RB/face the/DT/the problem/NN/problem this/DT/this kind/NNP/kind. just/RB/just do/VBP/do the/DT/the exchange/NN/exchange trick/NNP/trick. run/NN/run over/IN/over this/DT/this exchange/NN/exchange tricks/VBZ/tricks ;/:/; see/VB/see /,/, what/WDT/what is/VBZ/is the/DT/the quantity/NN/quantity that/IN/that comes/VBZ/comes out/NNP/out. and/CC/and that/IN/that quantity/NN/quantity /,/, hopefully/RB/hopefully /,/, will/MD/will let/VB/let you/PRP/you dictate/VB/dictate /,/, what/WDT/what your/PRP$/your algorithm/NN/algorithm should/MD/should be/NNP/be. the/DT/the next/JJ/next problem/NN/problem that/IN/that we/PRP/we look/VBP/look at/IN/at comes/NNS/comes from/IN/from the/DT/the area/NN/area of/IN/of information/NN/information transmission/NN/transmission and/CC/and it/PRP/it is/VBZ/is related/VBN/related to/TO/to codes/NNP/codes. so/RB/so /,/, we/PRP/we could/MD/could like/VB/like to/TO/to design/VB/design codes/NNS/codes /,/, which/WDT/which have/VBP/have some/DT/some properties/NNP/properties. that/IN/that is/VBZ/is the/DT/the next/JJ/next problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 50/CD/50 /CD/) so/RB/so /,/, the/DT/the problem/NN/problem is/VBZ/is like/IN/like this/NNP/this. so/RB/so /,/, you/PRP/you have/VBP/have symbols/NNS/symbols x/VBP/x 1/CD/1 /,/, x/NN/x 2/CD/2 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to x/VB/x n/NNP/n. so/RB/so /,/, you/PRP/you have/VBP/have n/VBN/n symbols/NNS/symbols /,/, each/DT/each of/IN/of them/PRP/them has/VBZ/has of/IN/of frequency/NN/frequency f/NN/f 1/CD/1 /,/, f/NN/f 2/CD/2 /,/, f/NN/f n/NNP/n. so/RB/so /,/, these/DT/these are/VBP/are symbols/NNS/symbols that/IN/that as/IN/as sent/NN/sent on/IN/on a/DT/a channel/NN/channel from/IN/from let/NN/let us/PRP/us say/VBP/say place/NN/place a/DT/a to/TO/to place/NN/place b/NNP/b. these/DT/these are/VBP/are symbols/NNS/symbols /,/, which/WDT/which are/VBP/are same/JJ/same from/IN/from one/CD/one place/NN/place to/TO/to another/DT/another and/CC/and this/DT/this is/VBZ/is the/DT/the frequency/NN/frequency at/IN/at which/WDT/which they/PRP/they are/VBP/are send/NNP/send. and/CC/and what/WP/what we/PRP/we would/MD/would like/VB/like /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the input/NNP/input. so/RB/so /,/, what/WDT/what we/PRP/we would/MD/would like/VB/like is/VBZ/is codes/NNS/codes c/VBP/c 1/CD/1 /,/, c/NN/c 2/CD/2. we/PRP/we would/MD/would like/VB/like to/TO/to code/VB/code them/PRP/them it/PRP/it is/VBZ/is using/VBG/using c/NN/c 1/CD/1 /,/, c/NN/c 2/CD/2 up/IN/up to/TO/to c/NN/c n/NNP/n. these/DT/these are/VBP/are /,/, let/VB/let us/PRP/us say/VB/say /,/, binary/JJ/binary codes/NNP/codes. each/DT/each of/IN/of these/DT/these is/VBZ/is a/DT/a binary/JJ/binary string/NN/string and/CC/and we/PRP/we would/MD/would like/VB/like this/DT/this binary/JJ/binary strings/NNS/strings associated/VBN/associated with/IN/with each/DT/each of/IN/of these/DT/these symbols/NNP/symbols. so/RB/so /,/, for/IN/for instance/NN/instance /,/, if/IN/if i/PRP/i send/VBP/send c/JJ/c 1/CD/1 /,/, c/NN/c 1/CD/1 /,/, c/NN/c 2/CD/2 ;/:/; it/PRP/it means/VBZ/means /,/, you/PRP/you have/VBP/have received/VBN/received /,/, you/PRP/you send/VBP/send symbols/NNS/symbols x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2 ;/:/; the/DT/the word/NN/word x/NN/x 1/CD/1 /,/, x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2. so/RB/so /,/, it/PRP/it sends/VBZ/sends these/DT/these symbols/NNS/symbols /,/, i/PRP/i just/RB/just send/VBP/send this/DT/this codes/NNS/codes /,/, which/WDT/which a/DT/a sort/NN/sort of/IN/of decoded/VBN/decoded at/IN/at the/DT/the other/JJ/other end/NNP/end. and/CC/and what/WP/what you/PRP/you send/VBP/send is/VBZ/is not/RB/not symbol/NN/symbol at/IN/at a/DT/a time/NN/time /,/, but/CC/but huge/JJ/huge word/NN/word at/IN/at a/DT/a time/NNP/time. so/RB/so /,/, you/PRP/you have/VBP/have this/DT/this huge/JJ/huge sort/NN/sort of/IN/of string/VBG/string /,/, which/WDT/which keeps/NNS/keeps sending/VBG/sending from/IN/from the/DT/the left/NNP/left. another/DT/another right/NN/right /,/, you/PRP/you sort/NN/sort of/IN/of full/JJ/full of/IN/of those/DT/those strings/NNS/strings and/CC/and you/PRP/you decode/VBP/decode it/NNP/it. so/RB/so /,/, this/DT/this code/NN/code is/VBZ/is the/DT/the output/NNP/output. so/RB/so /,/, if/IN/if it/PRP/it not/RB/not for/IN/for the/DT/the frequency/NN/frequency /,/, there/EX/there is/VBZ/is nothing/NN/nothing much/RB/much to/TO/to this/NNP/this. i/PRP/i have/VBP/have n/VBN/n symbols/NNS/symbols /,/, i/PRP/i just/RB/just write/JJ/write down/IN/down ;/:/; you/PRP/you know/VBP/know and/CC/and sort/NN/sort strings/NNS/strings as/IN/as scored/NNP/scored. then/RB/then /,/, i/PRP/i send/VBP/send them/PRP/them out/RP/out the/DT/the frequencies/NNS/frequencies that/WDT/that make/VBP/make things/NNS/things are/VBP/are being/VBG/being difficult/NNP/difficult. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take an/DT/an example/NNP/example. so/RB/so /,/, for/IN/for instance/NN/instance /,/, i/PRP/i have/VBP/have symbols/NNS/symbols /,/, whereas/IN/whereas /,/, in/IN/in example/NN/example /,/, i/PRP/i have/VBP/have let/VBN/let us/PRP/us say/VBP/say a/DT/a /,/, b/NN/b and/CC/and c/NN/c ;/:/; free/JJ/free symbols/NNP/symbols. for/IN/for frequencies/NNS/frequencies are/VBP/are /,/, 100/CD/100 /,/, 2/CD/2 /,/, which/WDT/which means/VBZ/means /,/, it/PRP/it is/VBZ/is send/VBP/send 100/CD/100 times/NNS/times 2nd/CD/2nd ;/:/; b/NN/b send/NN/send 2/CD/2 times/NNS/times the/DT/the 2nd/JJ/2nd ;/:/; c/NN/c 2/CD/2 times/NNS/times the/DT/the 2nd/CD/2nd. these/DT/these are/VBP/are the/DT/the frequencies/NNS/frequencies that/WDT/that which/WDT/which average/VBP/average frequencies/NNS/frequencies that/IN/that which/WDT/which a/DT/a send/NN/send through/NNP/through. now/RB/now /,/, we/PRP/we would/MD/would like/VB/like code/NN/code /,/, these/DT/these are/VBP/are the/DT/the frequencies/NNP/frequencies. we/PRP/we would/MD/would like/VB/like a/DT/a code/NN/code /,/, well/RB/well here/RB/here is/VBZ/is a/DT/a good/JJ/good code/NN/code /,/, a/DT/a is/VBZ/is 0/-NONE-/0 /,/, this/DT/this is/VBZ/is 1/CD/1 0/-NONE-/0 and/CC/and this/DT/this is/VBZ/is 1/CD/1 1/CD/1. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this code/NN/code for/IN/for a/DT/a /,/, b/NN/b and/CC/and c/NNP/c. well/RB/well /,/, i/PRP/i use/VBP/use stands/NNS/stands to/TO/to resend/VB/resend that/IN/that i/PRP/i would/MD/would like/VB/like to/TO/to use/VB/use small/JJ/small number/NN/number of/IN/of bits/NNS/bits for/IN/for a/DT/a because/NN/because /,/, it/PRP/it sends/VBZ/sends many/JJ/many times/NNP/times. so/RB/so /,/, i/PRP/i would/MD/would like/VB/like to/TO/to send/VB/send this/DT/this smaller/JJR/smaller number/NN/number of/IN/of bits/NNS/bits across/NNP/across. so/RB/so /,/, this/DT/this has/VBZ/has 1/CD/1 bit/NN/bit /,/, then/RB/then i/PRP/i have/VBP/have 2/CD/2 bits/NNS/bits for/IN/for b/NN/b and/CC/and 2/CD/2 bits/NNS/bits for/IN/for c/NNP/c. so/RB/so /,/, then/RB/then /,/, it/PRP/it is/VBZ/is sort/NN/sort of/IN/of /,/, i/PRP/i use/VBP/use lesser/NN/lesser number/NN/number of/IN/of bits/NNS/bits /,/, which/WDT/which i/PRP/i transmitted/VBD/transmitted across/IN/across from/IN/from from/IN/from left/VBN/left to/TO/to right/NNP/right. now/RB/now /,/, this/DT/this code/NN/code has/VBZ/has another/DT/another property/NNP/property. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the strings/NNS/strings of/IN/of 0/-NONE-/0 ?/./? s/NNS/s and/CC/and 1/CD/1 ?/./? s/NNS/s going/VBG/going across/IN/across /,/, decoding/VBG/decoding is/VBZ/is easy/NNP/easy. the/DT/the reason/NN/reason is/VBZ/is this/NNP/this. as/IN/as soon/RB/soon /,/, supposing/VBG/supposing the/DT/the first/JJ/first symbol/NN/symbol is/VBZ/is 0/-NONE-/0 /,/, i/PRP/i note/VBP/note it/PRP/it is/VBZ/is an/DT/an a/DT/a for/IN/for sure/NNP/sure. if/IN/if i/PRP/i hit/VBP/hit a/DT/a 1/CD/1 /,/, if/IN/if the/DT/the first/JJ/first symbol/NN/symbol is/VBZ/is 1/CD/1 /,/, i/PRP/i just/RB/just look/VBP/look at/IN/at the/DT/the next/JJ/next symbol/NN/symbol /,/, it/PRP/it is/VBZ/is either/DT/either 0/-NONE-/0 or/CC/or 1,depending/JJ/1,depending on/IN/on whether/IN/whether /,/, it/PRP/it is/VBZ/is 0/-NONE-/0 or/CC/or 1/CD/1 /,/, i/PRP/i know/VBP/know it/PRP/it is/VBZ/is b/NN/b or/CC/or c/NN/c /./. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do one/CD/one example/NN/example here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 45/CD/45 /CD/) so/RB/so /,/, i/PRP/i have/VBP/have a/DT/a /,/, b/NN/b and/CC/and c/NN/c /,/, 0/-NONE-/0 /,/, 1/CD/1 0/-NONE-/0 and/CC/and 1/CD/1 1/CD/1. let/NN/let us/PRP/us take/VBP/take a/DT/a binary/JJ/binary string/NN/string /,/, let/VB/let us/PRP/us say/VB/say 11001000101/CD/11001000101. so/RB/so /,/, how/WRB/how do/VBP/do i/PRP/i decoded/NNP/decoded. so/RB/so /,/, i/PRP/i am/VBP/am getting/VBG/getting the/DT/the symbols/NNS/symbols from/IN/from left/VBN/left to/TO/to right/NNP/right. i/PRP/i get/VBP/get 1/CD/1 /,/, i/PRP/i check/VBP/check /,/, i/PRP/i know/VBP/know it/PRP/it has/VBZ/has to/TO/to be/VB/be either/DT/either an/DT/an a/DT/a or/CC/or b/NN/b or/CC/or c/NNP/c. so/RB/so /,/, this/DT/this gives/VBZ/gives me/PRP/me c/NNP/c. i/PRP/i get/VBP/get this/DT/this 0/-NONE-/0 /,/, this/DT/this has/VBZ/has to/TO/to be/VB/be an/DT/an a/NNP/a. this/DT/this has/VBZ/has to/TO/to be/VB/be an/DT/an a/DT/a /,/, 1/CD/1 0/-NONE-/0 means/VBZ/means b/NN/b /,/, 0/-NONE-/0 is/VBZ/is an/DT/an a/DT/a /,/, 0/-NONE-/0 is/VBZ/is an/DT/an a/DT/a /,/, 1/CD/1 0/-NONE-/0 is/VBZ/is a/DT/a b/NNP/b. 1/CD/1 /,/, well/RB/well there/RB/there has/VBZ/has to/TO/to be/VB/be something/NN/something else/RB/else /,/, here/RB/here let/VB/let us/PRP/us say/VB/say 11/CD/11 and/CC/and that/IN/that give/JJ/give you/PRP/you c/NNP/c. i/PRP/i can/MD/can just/RB/just look/VB/look at/IN/at this/DT/this symbol/NN/symbol as/IN/as they/PRP/they arrive/VBP/arrive the/DT/the bits/NNS/bits as/IN/as they/PRP/they arrive/VBP/arrive and/CC/and decode/NNP/decode. decoding/NN/decoding is/VBZ/is very/RB/very easy/NNP/easy. this/DT/this code/NN/code /,/, which/WDT/which have/VBP/have this/DT/this actually/RB/actually has/VBZ/has a/DT/a property/NN/property /,/, which/WDT/which i/PRP/i will/MD/will tell/VB/tell you/PRP/you /,/, which/WDT/which is/VBZ/is that/NNP/that. none/NN/none of/IN/of these/DT/these /,/, is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of another/DT/another /,/, 0/-NONE-/0 is/VBZ/is not/RB/not a/DT/a prefix/NN/prefix of/IN/of any/DT/any of/IN/of these/DT/these and/CC/and these/DT/these two/CD/two are/VBP/are suddenly/RB/suddenly not/RB/not prefix/VB/prefix of/IN/of each/DT/each other/NNP/other. so/RB/so /,/, such/JJ/such codes/NNS/codes are/VBP/are called/VBN/called prefix/NN/prefix pre/NN/pre codes/NNP/codes. so/RB/so /,/, if/IN/if i/PRP/i have/VBP/have code/JJ/code c/NN/c 1/CD/1 /,/, c/NN/c 2/CD/2 /,/, up/RB/up to/TO/to c/VB/c n/NN/n /,/, c/NN/c i/PRP/i is/VBZ/is not/RB/not a/DT/a prefix/NN/prefix of/IN/of c/NN/c j/NN/j for/IN/for any/DT/any i/PRP/i j/VBP/j /,/, then/RB/then it/PRP/it is/VBZ/is called/VBN/called a/DT/a prefix/NN/prefix pre/NN/pre code/NNP/code. and/CC/and these/DT/these /,/, you/PRP/you can/MD/can see/VB/see are/VBP/are easy/JJ/easy to/TO/to decode/NNP/decode. i/PRP/i just/RB/just keep/VB/keep looking/VBG/looking at/IN/at the/DT/the symbols/NNS/symbols and/CC/and as/IN/as soon/RB/soon as/IN/as i/PRP/i get/VBP/get a/DT/a code/NN/code word/NN/word /,/, i/PRP/i am/VBP/am done/NNP/done. i/PRP/i know/VBP/know /,/, what/WP/what about/IN/about is/NNP/is. so/RB/so /,/, i/PRP/i write/VBP/write the/DT/the word/NN/word /,/, i/PRP/i remove/VBP/remove these/DT/these and/CC/and i/PRP/i keep/VBP/keep scanning/NNP/scanning. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to construct/VB/construct prefix/NN/prefix pre/NN/pre codes/NNP/codes. so/RB/so /,/, that/IN/that is/VBZ/is an/DT/an objective/JJ/objective /,/, given/VBN/given these/DT/these symbols/NNS/symbols /,/, i/PRP/i would/MD/would like/VB/like to/TO/to construct/VB/construct prefix/NN/prefix pre/NN/pre codes/VBZ/codes and/CC/and given/VBN/given the/DT/the frequencies/NNP/frequencies. but/CC/but /,/, each/DT/each frequency/NN/frequency /,/, there/EX/there will/MD/will be/VB/be a/DT/a /,/, with/IN/with each/DT/each alphabet/NN/alphabet /,/, there/EX/there is/VBZ/is a/DT/a frequency/NNP/frequency. i/PRP/i would/MD/would like/VB/like prefix/NN/prefix pre/NN/pre codes/VBZ/codes /,/, which/WDT/which minimize/NN/minimize the/DT/the average/JJ/average in/IN/in your/PRP$/your length/NN/length of/IN/of the/DT/the message/NN/message with/IN/with send/NN/send /,/, which/WDT/which means/VBZ/means /,/, the/DT/the length/NN/length of/IN/of a/DT/a message/NN/message /,/, i/PRP/i will/MD/will think/VB/think of/IN/of /,/, the/DT/the length/NN/length frequency/NN/frequency times/NNS/times /,/, the/DT/the length/NN/length of/IN/of the/DT/the code/NN/code word/NNP/word. it/PRP/it has/VBZ/has the/DT/the code/NN/code has/VBZ/has some/DT/some length/NN/length l/NNP/l. so/RB/so /,/, the/DT/the frequency/NN/frequency times/VBZ/times length/NN/length is/VBZ/is a/DT/a length/NN/length is/VBZ/is a/DT/a average/JJ/average length/NNP/length. and/CC/and the/DT/the some/DT/some over/IN/over all/DT/all elements/NNS/elements i/PRP/i would/MD/would like/VB/like to/TO/to minimize/NNP/minimize. so/RB/so /,/, before/IN/before i/PRP/i state/VBP/state this/DT/this formally/RB/formally /,/, let/VB/let us/PRP/us observe/VB/observe that/IN/that /,/, prefix/CD/prefix pre/NN/pre codes/NNS/codes have/VBP/have a/DT/a close/JJ/close connection/NN/connection to/TO/to binary/JJ/binary trees/NNP/trees. so/RB/so /,/, for/IN/for instance/NN/instance /,/, this/DT/this code/NN/code a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, i/PRP/i can/MD/can represented/VB/represented this/DT/this way/NN/way /,/, 0/-NONE-/0 1/CD/1 /,/, 0/-NONE-/0 1/CD/1 /,/, a/DT/a /,/, b/NN/b /,/, c/NNP/c. so/RB/so /,/, basically/RB/basically i/PRP/i want/VBP/want to/TO/to show/VB/show that/IN/that /,/, given/VBN/given any/DT/any prefix/NN/prefix pre/NN/pre codes/VBZ/codes /,/, code/NN/code /,/, there/EX/there is/VBZ/is a/DT/a binary/JJ/binary tree/NN/tree and/CC/and given/VBN/given any/DT/any binary/JJ/binary tree/NN/tree like/IN/like this/DT/this /,/, i/PRP/i can/MD/can get/VB/get a/DT/a prefix/NN/prefix pre/NN/pre codes/NNP/codes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 05/CD/05 /CD/) so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the secret/NN/secret of/IN/of this/DT/this transformation/NN/transformation ?/./? well/RB/well /,/, take/VBP/take any/DT/any binary/JJ/binary tree/NN/tree ;/:/; the/DT/the crucial/JJ/crucial things/NNS/things are/VBP/are code/JJ/code words/NNS/words at/IN/at leaves/NNS/leaves /,/, the/DT/the leaves/NNS/leaves /,/, where/WRB/where you/PRP/you look/VBP/look at/IN/at the/DT/the code/NN/code word/NNP/word. left/VBD/left branch/NN/branch is/VBZ/is 0/-NONE-/0 and/CC/and the/DT/the right/NN/right branch/NN/branch is/VBZ/is 1/CD/1. so/RB/so /,/, when/WRB/when i/PRP/i take/VBP/take the/DT/the left/NN/left branch/NN/branch /,/, i/PRP/i think/VBP/think of/IN/of it/PRP/it has/VBZ/has 0/-NONE-/0 /,/, right/RB/right branch/NN/branch i/PRP/i think/VBP/think of/IN/of it/PRP/it has/VBZ/has 1/CD/1. and/CC/and when/WRB/when you/PRP/you reach/VBP/reach a/DT/a leaf/NN/leaf /,/, you/PRP/you know/VBP/know /,/, you/PRP/you have/VBP/have traverse/JJ/traverse a/DT/a binary/JJ/binary string/NNP/string. now/RB/now /,/, that/IN/that will/MD/will be/VB/be the/DT/the code/NN/code word/NN/word /,/, associated/VBN/associated with/IN/with that/DT/that with/IN/with that/DT/that symbol/NNP/symbol. so/RB/so /,/, for/IN/for by/IN/by go/NN/go left/VBD/left /,/, left/VBN/left /,/, right/RB/right /,/, left/VBN/left and/CC/and there/EX/there is/VBZ/is a/DT/a there/RB/there is/VBZ/is a/DT/a code/NN/code word/NN/word there/EX/there /,/, will/MD/will be/VB/be 0/-NONE-/0 0/-NONE-/0 /,/, 1/CD/1 0/CD/0. so/RB/so /,/, given/VBN/given a/DT/a binary/JJ/binary tree/NN/tree /,/, with/IN/with these/DT/these code/NN/code word/NN/word /,/, at/IN/at leaves/NNS/leaves /,/, with/IN/with these/DT/these words/NNS/words at/IN/at leaves/NNP/leaves. then/RB/then /,/, i/PRP/i can/MD/can assign/VB/assign a/DT/a code/NN/code word/NN/word to/TO/to each/DT/each of/IN/of these/DT/these symbols/NNP/symbols. so/RB/so /,/, maybe/RB/maybe /,/, i/PRP/i should/MD/should say/VB/say symbols/NNS/symbols /,/, given/VBN/given a/DT/a binary/JJ/binary tree/NN/tree with/IN/with symbols/NNS/symbols at/IN/at leaves/NNS/leaves /,/, i/PRP/i can/MD/can assign/VB/assign a/DT/a code/NN/code word/NN/word to/TO/to each/DT/each symbol/NN/symbol /,/, using/VBG/using this/DT/this 0/-NONE-/0 and/CC/and 1/CD/1 business/NNP/business. you/PRP/you can/MD/can check/VB/check that/IN/that /,/, that/IN/that this/DT/this is/VBZ/is prefix/CD/prefix free/NNP/free. so/RB/so /,/, why/WRB/why this/DT/this so/RB/so /,/, because/IN/because take/NN/take any/DT/any node/NN/node in/IN/in the/DT/the tree/NNP/tree. so/RB/so /,/, this/DT/this has/VBZ/has some/DT/some binary/JJ/binary string/NN/string /,/, associated/VBN/associated with/IN/with it/PRP/it /,/, which/WDT/which is/VBZ/is you/PRP/you followed/VBD/followed the/DT/the path/NN/path from/IN/from the/DT/the root/NN/root to/TO/to leaf/NNP/leaf. and/CC/and if/IN/if you/PRP/you go/VBP/go right/RB/right /,/, you/PRP/you have/VBP/have a/DT/a 1/CD/1 /,/, if/IN/if you/PRP/you go/VBP/go left/VBN/left /,/, you/PRP/you have/VBP/have a/DT/a 0/CD/0. so/RB/so /,/, you/PRP/you get/VBP/get /,/, there/EX/there is/VBZ/is a/DT/a binary/JJ/binary string/NN/string associate/NNP/associate. now/RB/now /,/, what/WDT/what are/VBP/are the/DT/the prefix/NN/prefix of/IN/of this/DT/this binary/JJ/binary string/NN/string ?/./? the/DT/the prefix/NN/prefix are/VBP/are exactly/RB/exactly those/DT/those string/VBG/string /,/, which/WDT/which you/PRP/you get/VBP/get at/IN/at nodes/NNS/nodes /,/, which/WDT/which are/VBP/are in/IN/in the/DT/the path/NN/path from/IN/from the/DT/the root/NN/root to/TO/to this/DT/this node/NNP/node. if/IN/if i/PRP/i only/RB/only take/VBP/take leaf/NN/leaf of/IN/of a/DT/a binary/JJ/binary tree/NN/tree /,/, no/DT/no tree/NN/tree /,/, no/DT/no leaf/NN/leaf is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of another/DT/another leaf/NN/leaf /,/, no/DT/no leaf/NN/leaf sets/VBZ/sets on/IN/on a/DT/a path/NN/path from/IN/from another/DT/another leaf/NN/leaf to/TO/to a/DT/a root/NNP/root. let/NN/let us/PRP/us say/VBP/say just/RB/just not/RB/not on/NNP/on. so/RB/so /,/, the/DT/the codes/NNS/codes that/WDT/that you/PRP/you get/VBP/get this/DT/this way/NN/way of/IN/of prefix/NN/prefix free/JJ/free and/CC/and given/VBN/given any/DT/any prefix/NN/prefix pre/NN/pre code/NN/code /,/, you/PRP/you can/MD/can construct/VB/construct the/DT/the binary/JJ/binary tree/NNP/tree. just/RB/just the/DT/the simple/JJ/simple fashion/NN/fashion you/PRP/you just/RB/just go/VBP/go 01/CD/01 /,/, 01/CD/01 at/IN/at each/DT/each stage/NN/stage and/CC/and you/PRP/you follow/VBP/follow your/PRP$/your follow/NN/follow this/DT/this 0/-NONE-/0 and/CC/and pattern/NNP/pattern. and/CC/and when/WRB/when you/PRP/you hit/VBP/hit a/DT/a pattern/NN/pattern /,/, which/WDT/which you/PRP/you want/VBP/want /,/, just/RB/just remove/VBP/remove everything/NN/everything below/IN/below it/PRP/it and/CC/and that/IN/that will/MD/will be/VB/be your/PRP$/your leaf/NNP/leaf. i/PRP/i am/VBP/am the/DT/the word/NN/word associated/VBN/associated there/EX/there with/IN/with that/DT/that will/MD/will be/VB/be the/DT/the code/NN/code word/NNP/word. will/MD/will the/DT/the symbol/NN/symbol /,/, which/WDT/which is/VBZ/is associated/VBN/associated with/IN/with that/DT/that code/NN/code word/NNP/word. so/RB/so /,/, these/DT/these are/VBP/are prefix/CD/prefix pre/NN/pre codes/NNS/codes /,/, what/WP/what we/PRP/we want/VBP/want is/VBZ/is /,/, you/PRP/you want/VBP/want to/TO/to construct/VB/construct prefix/NN/prefix pre/NN/pre code/NNP/code. before/IN/before /,/, this/DT/this let/NN/let me/PRP/me just/RB/just take/VBP/take a/DT/a new/JJ/new set/NN/set of/IN/of paper/NN/paper and/CC/and write/VB/write this/DT/this entire/JJ/entire problem/NN/problem properly/NNP/properly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 34/CD/34 /CD/) so/RB/so /,/, the/DT/the input/NN/input is/VBZ/is frequencies/NNS/frequencies f/NN/f 1/CD/1 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to f/NN/f n/NNP/n. what/WP/what is/VBZ/is the/DT/the output/NN/output that/IN/that we/PRP/we desire/VBP/desire ?/./? we/PRP/we desire/VBP/desire prefix/CD/prefix free/JJ/free codes/NNS/codes or/CC/or in/IN/in other/JJ/other word/NN/word a/DT/a binary/JJ/binary tree/NNP/tree. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to minimize/VB/minimize the/DT/the following/VBG/following function/NN/function sigma/NN/sigma h/NN/h i/PRP/i f/VBP/f i/PRP/i /,/, i/PRP/i equal/JJ/equal to/TO/to 1/CD/1 to/TO/to n/NNP/n. the/DT/the frequency/NN/frequency is/VBZ/is come/VBN/come from/IN/from there/NNP/there. well/RB/well /,/, things/NNS/things with/IN/with large/JJ/large frequencies/NNS/frequencies must/MD/must be/VB/be very/RB/very /,/, must/MD/must have/VB/have sort/NN/sort codes/NNS/codes /,/, which/WDT/which means/VBZ/means they/PRP/they should/MD/should be/VB/be close/RB/close to/TO/to the/DT/the root/NN/root from/IN/from the/DT/the tree/NNP/tree. so/RB/so /,/, h/JJ/h i/PRP/i in/IN/in fact/NN/fact /,/, is/VBZ/is the/DT/the height/NN/height of/IN/of symbol/NN/symbol i/PRP/i in/IN/in the/DT/the binary/JJ/binary tree/NNP/tree. so/RB/so /,/, the/DT/the input/NN/input of/IN/of frequencies/NNS/frequencies f/IN/f 1/CD/1 through/IN/through f/NN/f 1/CD/1 /,/, f/NN/f n/NN/n /,/, i/PRP/i would/MD/would like/VB/like to/TO/to output/VB/output a/DT/a binary/JJ/binary tree/NNP/tree. and/CC/and with/IN/with each/DT/each leaf/NN/leaf /,/, i/PRP/i associate/VBP/associate one/CD/one of/IN/of these/DT/these works/NNS/works either1/NNP/either1 /,/, 2/CD/2 /,/, 3/CD/3 up/RP/up to/TO/to n/NNP/n. one/CD/one of/IN/of these/DT/these symbols/NNS/symbols and/CC/and i/PRP/i would/MD/would like/VB/like to/TO/to minimize/VB/minimize h/NN/h i/PRP/i f/VBP/f i/PRP/i with/IN/with the/DT/the some/DT/some h/NN/h i/PRP/i f/VBP/f i/PRP/i /,/, where/WRB/where h/JJ/h i/PRP/i is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the symbol/NN/symbol i/PRP/i in/IN/in the/DT/the binary/JJ/binary tree/NNP/tree. f/NN/f i/PRP/i is/VBZ/is the/DT/the frequency/NN/frequency of/IN/of symbol/NN/symbol i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i want/NNP/want. now/RB/now /,/, how/WRB/how do/VBP/do i/PRP/i go/VB/go about/IN/about doing/VBG/doing this/DT/this ?/./? so/RB/so /,/, given/VBN/given a/DT/a binary/JJ/binary tree/NN/tree /,/, supposing/VBG/supposing that/IN/that /,/, i/PRP/i give/VBP/give you/PRP/you a/DT/a binary/JJ/binary tree/NN/tree with/IN/with n/NN/n leafs/NNP/leafs. now/RB/now /,/, can/MD/can you/PRP/you assign/VB/assign these/DT/these words/NNS/words to/TO/to this/DT/this leaves/NNP/leaves. well/RB/well /,/, or/CC/or to/TO/to minimize/VB/minimize this/DT/this function/NN/function /,/, when/WRB/when the/DT/the answer/NN/answer is/VBZ/is /,/, it/PRP/it is/VBZ/is easy/NNP/easy. so/RB/so /,/, given/VBN/given a/DT/a given/VBN/given a/DT/a tree/NN/tree /,/, since/IN/since i/PRP/i want/VBP/want to/TO/to minimize/VB/minimize the/DT/the h/NN/h i/PRP/i f/VBP/f i/PRP/i /,/, i/PRP/i put/VBD/put items/NNS/items with/IN/with the/DT/the largest/JJS/largest frequency/NN/frequency as/RB/as close/JJ/close to/TO/to the/DT/the root/NNP/root. so/RB/so /,/, basically/RB/basically /,/, i/PRP/i take/VBP/take these/DT/these leafs/NNS/leafs /,/, i/PRP/i sort/VBP/sort them/PRP/them in/IN/in decreasing/NN/decreasing order/NN/order of/IN/of height/NNP/height. saying/VBG/saying increasing/VBG/increasing order/NN/order of/IN/of height/NN/height /,/, i/PRP/i take/VBP/take frequency/NN/frequency /,/, i/PRP/i sort/VBP/sort them/PRP/them into/IN/into decreasing/VBG/decreasing order/NN/order of/IN/of frequencies/NNS/frequencies and/CC/and i/PRP/i just/RB/just tied/VBD/tied them/PRP/them up/NNP/up. so/RB/so /,/, if/IN/if the/DT/the tree/NN/tree is/VBZ/is given/VBN/given /,/, then/RB/then this/DT/this is/VBZ/is easy/NNP/easy. the/DT/the heaviest/JJS/heaviest item/NN/item of/IN/of the/DT/the most/RBS/most frequency/NN/frequency must/MD/must set/VB/set close/JJ/close to/TO/to the/DT/the root/NN/root and/CC/and those/DT/those with/IN/with whose/WP$/whose frequencies/NNS/frequencies of/IN/of the/DT/the least/JJS/least will/MD/will sit/VB/sit for/IN/for just/RB/just away/RB/away from/IN/from the/DT/the root/NN/root in/IN/in this/DT/this tree/NNP/tree. the/DT/the question/NN/question is/VBZ/is /,/, what/WP/what the/DT/the tree/NN/tree should/MD/should look/VB/look like/IN/like ;/:/; there/EX/there are/VBP/are many/JJ/many binary/JJ/binary trees/NNS/trees with/IN/with n/NN/n leaf/NNP/leaf. it/PRP/it is/VBZ/is a/DT/a good/JJ/good exercise/NN/exercise to/TO/to see/VB/see /,/, how/WRB/how many/NNP/many. if/IN/if there/EX/there are/VBP/are large/JJ/large number/NN/number of/IN/of binaries/NNS/binaries trees/NNS/trees with/IN/with n/NN/n leafs/NNS/leafs /,/, which/WDT/which of/IN/of these/DT/these threes/NNS/threes we/PRP/we pick/NNP/pick. once/RB/once /,/, you/PRP/you pick/VBP/pick a/DT/a tree/NN/tree we/PRP/we are/VBP/are done/VBN/done /,/, we/PRP/we know/VBP/know /,/, how/WRB/how to/TO/to sort/VB/sort of/IN/of fit/NN/fit these/DT/these symbols/NNS/symbols into/IN/into the/DT/the leafs/NNP/leafs. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we pick/VB/pick these/DT/these trees/NNS/trees ?/./? well/RB/well /,/, do/VBP/do you/PRP/you like/IN/like to/TO/to do/VB/do something/NN/something some/DT/some kind/NN/kind of/IN/of exchange/NN/exchange trick/NN/trick here/NNP/here. even/RB/even here/RB/here /,/, what/WDT/what could/MD/could the/DT/the exchange/NN/exchange pick/NN/pick really/RB/really mean/JJ/mean /,/, you/PRP/you know/VBP/know /,/, you/PRP/you want/VBP/want to/TO/to come/VB/come up/RP/up with/IN/with the/DT/the binary/JJ/binary tree/NNP/tree. and/CC/and you/PRP/you have/VBP/have these/DT/these items/NNS/items /,/, which/WDT/which set/VBN/set of/IN/of these/DT/these symbols/NNS/symbols /,/, which/WDT/which are/VBP/are sitting/NNP/sitting. what/WP/what does/VBZ/does mean/JJ/mean to/TO/to pick/VB/pick ?/./? what/WP/what is/VBZ/is the/DT/the exchange/NN/exchange trick/NN/trick mean/NN/mean ?/./? so/RB/so /,/, what/WDT/what we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do is/VBZ/is /,/, construct/NN/construct the/DT/the correct/NN/correct tree/NNP/tree. that/IN/that is/VBZ/is /,/, what/WP/what we/PRP/we want/VBP/want to/TO/to true/JJ/true /,/, you/PRP/you want/VBP/want to/TO/to do/NNP/do. and/CC/and so/RB/so /,/, what/WDT/what does/VBZ/does it/PRP/it mean/VB/mean to/TO/to do/VB/do an/DT/an exchange/NN/exchange trick/NNP/trick. so/RB/so /,/, supposing/VBG/supposing you/PRP/you have/VBP/have some/DT/some tree/NN/tree /,/, you/PRP/you know/VBP/know that/IN/that the/DT/the bottom/NN/bottom of/IN/of the/DT/the tree/NN/tree /,/, which/WDT/which means/VBZ/means node/VBP/node with/IN/with the/DT/the longest/JJS/longest height/NNP/height. you/PRP/you have/VBP/have the/DT/the two/CD/two items/NNS/items with/IN/with the/DT/the largest/JJS/largest frequency/NN/frequency /,/, will/MD/will sit/VB/sit there/NNP/there. so/RB/so /,/, this/DT/this much/JJ/much /,/, we/PRP/we know/NNP/know. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 07/CD/07 /CD/) so/RB/so /,/, we/PRP/we know/VBP/know /,/, we/PRP/we really/RB/really know/VBP/know some/DT/some part/NN/part in/IN/in the/DT/the tree/NN/tree /,/, which/WDT/which is/VBZ/is /,/, this/DT/this is/VBZ/is a/DT/a binary/JJ/binary tree/NNP/tree. now/RB/now /,/, the/DT/the bottom/NN/bottom most/JJS/most points/NNS/points /,/, somewhere/RB/somewhere here/RB/here it/PRP/it is/VBZ/is a/DT/a bottom/NN/bottom most/JJS/most points/NNP/points. i/PRP/i have/VBP/have /,/, once/RB/once with/IN/with largest/JJS/largest frequencies/NNP/frequencies. the/DT/the two/CD/two items/NNS/items with/IN/with the/DT/the largest/JJS/largest frequencies/NNS/frequencies will/MD/will sit/VB/sit at/IN/at the/DT/the bottom/NN/bottom on/IN/on the/DT/the tree/NNP/tree. the/DT/the other/JJ/other leafs/NNS/leafs are/VBP/are somewhere/RB/somewhere there/NNP/there. this/DT/this much/JJ/much /,/, i/PRP/i know/NNP/know. so/RB/so /,/, i/PRP/i know/VBP/know part/NN/part of/IN/of the/DT/the tree/NNP/tree. what/WP/what about/IN/about the/DT/the rest/NN/rest of/IN/of the/DT/the tree/NNP/tree. can/MD/can i/VB/i sort/NN/sort of/IN/of somehow/NN/somehow compute/NN/compute the/DT/the tree/NN/tree part/NN/part by/IN/by part/NN/part /,/, well/RB/well /,/, so/RB/so that/IN/that is/VBZ/is one/CD/one thing/NNP/thing. what/WP/what could/MD/could an/DT/an exchange/NN/exchange trick/NN/trick look/NN/look like/IN/like here/RB/here ?/./? what/WP/what do/VBP/do i/PRP/i exchange/VB/exchange items/NNP/items. but/CC/but /,/, if/IN/if i/PRP/i exchange/VBP/exchange items/NNS/items /,/, remember/NN/remember the/DT/the tree/NN/tree remains/VBZ/remains the/DT/the same/NNP/same. so/RB/so /,/, the/DT/the trick/NN/trick /,/, the/DT/the exchange/NN/exchange trick/NN/trick that/WDT/that you/PRP/you would/MD/would like/VB/like to/TO/to try/VB/try is/VBZ/is exchange/NN/exchange sub/NN/sub trees/NNP/trees. so/RB/so /,/, given/VBN/given a/DT/a tree/NN/tree /,/, i/PRP/i pick/VBP/pick two/CD/two sub/NN/sub trees/NNS/trees and/CC/and exchange/NN/exchange them/PRP/them and/CC/and see/VB/see what/WP/what happens/NNP/happens. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the calculation/NN/calculation we/PRP/we would/MD/would like/VB/like to/TO/to do/NNP/do. and/CC/and once/RB/once we/PRP/we do/VBP/do this/DT/this calculation/NN/calculation /,/, we/PRP/we would/MD/would like/VB/like to/TO/to see/VB/see /,/, what/WDT/what really/RB/really happens/VBZ/happens to/TO/to the/DT/the average/JJ/average height/NNP/height. and/CC/and from/IN/from this/DT/this hopefully/RB/hopefully /,/, will/MD/will get/VB/get a/DT/a clue/NN/clue as/IN/as to/TO/to how/WRB/how to/TO/to construct/VB/construct in/IN/in the/DT/the tree/NNP/tree. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 13/CD/13 greedy/JJ/greedy algorithms/NNS/algorithms ?/./? iv/NN/iv we/PRP/we will/MD/will look/VB/look at/IN/at this/DT/this problem/NN/problem from/IN/from information/NN/information transmission/NNP/transmission. let/VB/let me/PRP/me recall/MD/recall the/DT/the problem/NN/problem /,/, we/PRP/we had/VBD/had n/VBN/n symbols/NNS/symbols x/VBP/x 1/CD/1 through/IN/through x/NN/x n/NNP/n. and/CC/and each/DT/each at/IN/at a/DT/a frequency/NN/frequency associated/VBN/associated with/IN/with it/PRP/it /,/, which/WDT/which was/VBD/was the/DT/the frequency/NN/frequency of/IN/of occurrence/NNP/occurrence. we/PRP/we wanted/VBD/wanted to/TO/to construct/VB/construct the/DT/the code/NN/code for/IN/for this/DT/this set/NN/set of/IN/of symbols/NNP/symbols. so/RB/so /,/, for/IN/for each/DT/each symbol/NN/symbol we/PRP/we read/VBP/read the/DT/the binary/JJ/binary string/NNP/string. now/RB/now /,/, if/IN/if the/DT/the codeword/NN/codeword such/JJ/such that/IN/that /CD/( /CD/( refer/NN/refer time/NN/time /:/: 01/CD/01 /:/: 26/CD/26 /CD/) /CD/) /,/, length/NN/length of/IN/of these/DT/these string/VBG/string /,/, whether/IN/whether same/JJ/same for/IN/for all/DT/all of/IN/of them/NNP/them. then/RB/then /,/, there/EX/there is/VBZ/is really/RB/really no/DT/no problem/NN/problem there/RB/there is/VBZ/is we/PRP/we do/VBP/do not/RB/not have/VB/have a/DT/a problem/NN/problem to/TO/to solve/VB/solve /,/, but/CC/but if/IN/if you/PRP/you allow/VBP/allow the/DT/the coding/VBG/coding to/TO/to be/VB/be such/JJ/such that/IN/that /,/, these/DT/these codeword/NN/codeword 's/POS/'s can/MD/can have/VB/have variable/JJ/variable length/NNP/length. then/RB/then /,/, we/PRP/we do/VBP/do have/VBP/have a/DT/a problem/NN/problem to/TO/to solve/NNP/solve. essentially/RB/essentially /,/, symbols/NNS/symbols which/WDT/which appear/JJ/appear more/RBR/more frequently/RB/frequently /,/, we/PRP/we would/MD/would like/VB/like to/TO/to give/VB/give a/DT/a shorter/NN/shorter codeword/NNP/codeword. i/PRP/i just/RB/just one/CD/one way/NN/way to/TO/to see/VB/see this/DT/this is/VBZ/is for/IN/for instance/NN/instance /,/, if/IN/if you/PRP/you had/VBD/had a/DT/a large/JJ/large file/NN/file and/CC/and you/PRP/you had/VBD/had n/VBN/n words/NNS/words /,/, which/WDT/which these/DT/these word/NN/word are/VBP/are repeated/NNP/repeated. the/DT/the all/DT/all have/VBP/have frequency/NN/frequency associated/VBN/associated with/IN/with them/PRP/them /,/, which/WDT/which is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the number/NN/number of/IN/of times/NNS/times that/WDT/that the/DT/the codeword/NN/codeword appears/VBZ/appears in/IN/in a/DT/a file/NN/file /,/, that/IN/that file/NNP/file. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to encode/VB/encode this/DT/this file/NN/file as/NNP/as... so/RB/so /,/, that/IN/that in/IN/in the/DT/the codeword/NN/codeword 's/POS/'s are/VBP/are prefix/CD/prefix free/JJ/free /,/, which/WDT/which means/VBZ/means no/DT/no codeword/NN/codeword is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of another/NNP/another. this/DT/this is/VBZ/is how/WRB/how we/PRP/we want/VBP/want to/TO/to encode/VB/encode this/DT/this file/NN/file and/CC/and send/NN/send it/PRP/it across/NNP/across. then/RB/then /,/, the/DT/the size/NN/size of/IN/of the/DT/the file/NN/file once/RB/once encoded/VBD/encoded the/DT/the size/NN/size of/IN/of the/DT/the file/NN/file is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the frequency/NN/frequency times/VBZ/times for/IN/for it/PRP/it is/VBZ/is some/DT/some over/IN/over every/DT/every word/NNP/word. the/DT/the frequency/NN/frequency of/IN/of occurrence/NN/occurrence of/IN/of the/DT/the word/NN/word /,/, times/VBZ/times the/DT/the size/NN/size of/IN/of the/DT/the codeword/NNP/codeword. and/CC/and this/DT/this quantity/NN/quantity /,/, which/WDT/which is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the file/NN/file we/PRP/we would/MD/would like/VB/like to/TO/to minimize/NNP/minimize. so/RB/so /,/, this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we had/NNP/had. so/RB/so /,/, let/VB/let me/PRP/me put/VB/put that/IN/that put/NN/put it/PRP/it file/RB/file across/NNP/across. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 08/CD/08 /CD/) so/RB/so /,/, the/DT/the input/NN/input /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a set/NN/set of/IN/of frequencies/NNS/frequencies f/IN/f 1/CD/1 through/IN/through f/NN/f n/NNP/n. and/CC/and we/PRP/we would/MD/would like/VB/like a/DT/a prefix/NN/prefix free/JJ/free code/NN/code /,/, this/DT/this is/VBZ/is from/IN/from yesterday/NNP/yesterday. well/RB/well /,/, i/PRP/i just/RB/just get/VB/get to/TO/to this/DT/this binary/NN/binary tree/NN/tree in/IN/in a/DT/a minute/NNP/minute. essentially/RB/essentially /,/, we/PRP/we want/VBP/want to/TO/to prefix/VB/prefix free/JJ/free code/NN/code and/CC/and you/PRP/you want/VBP/want to/TO/to minimize/VB/minimize the/DT/the following/VBG/following h/NN/h i/PRP/i times/VBZ/times f/NN/f i/PRP/i /,/, h/JJ/h i/PRP/i here/RB/here we/PRP/we say/VBP/say it/PRP/it is/VBZ/is the/DT/the height/NN/height of/IN/of the/DT/the symbol/NN/symbol i/PRP/i in/IN/in the/DT/the binary/JJ/binary tree/NNP/tree. but/CC/but /,/, this/DT/this is/VBZ/is the/DT/the same/JJ/same as/IN/as a/DT/a length/NN/length of/IN/of the/DT/the codeword/NN/codeword h/NN/h i/PRP/i is/VBZ/is the/DT/the same/JJ/same is/VBZ/is also/RB/also length/NN/length of/IN/of the/DT/the code/NN/code word/NN/word for/IN/for symbol/NN/symbol i/NNP/i. so/RB/so /,/, then/RB/then this/DT/this tree/NN/tree is/VBZ/is nothing/NN/nothing but/CC/but a/DT/a size/NN/size of/IN/of the/DT/the file/NN/file /,/, f/NN/f i/PRP/i is/VBZ/is the/DT/the number/NN/number of/IN/of times/NNS/times the/DT/the word/NN/word occurs/NNS/occurs /,/, this/DT/this is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the curve/NN/curve codeword/NNP/codeword. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the this/DT/this quantity/NN/quantity is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the number/NN/number of/IN/of bits/NNS/bits used/VBN/used to/TO/to encode/VB/encode the/DT/the file/NNP/file. and/CC/and you/PRP/you would/MD/would like/VB/like to/TO/to minimize/VB/minimize this/NNP/this. so/RB/so /,/, we/PRP/we also/RB/also saw/VBD/saw that/IN/that prefix/CD/prefix free/JJ/free code/NN/code of/IN/of prefix/NN/prefix free/JJ/free code/NN/code corresponds/NNS/corresponds to/TO/to a/DT/a binary/JJ/binary tree/NNP/tree. there/RB/there is/VBZ/is a/DT/a one/CD/one to/TO/to one/CD/one correspondence/NNP/correspondence. so/RB/so /,/, given/VBN/given a/DT/a binary/JJ/binary tree/NN/tree and/CC/and symbols/NNS/symbols at/IN/at each/DT/each leafs/NNS/leafs /,/, you/PRP/you can/MD/can construct/VB/construct the/DT/the prefix/NN/prefix free/JJ/free code/NNP/code. now/RB/now /,/, this/DT/this gives/VBZ/gives you/PRP/you a/DT/a prefix/NN/prefix free/JJ/free code/NN/code for/IN/for the/DT/the symbols/NNP/symbols. essentially/RB/essentially /,/, when/WRB/when you/PRP/you traverse/VBP/traverse right/RB/right /,/, you/PRP/you think/VBP/think of/IN/of it/PRP/it as/IN/as one/CD/one /,/, if/IN/if you/PRP/you traverse/VBP/traverse left/VBN/left on/IN/on the/DT/the tree/NN/tree you/PRP/you think/VBP/think of/IN/of it/PRP/it as/IN/as a/DT/a zero/NNP/zero. you/PRP/you traverse/VBP/traverse a/DT/a path/NN/path from/IN/from root/NN/root to/TO/to this/DT/this leaf/NN/leaf and/CC/and that/IN/that gives/NNS/gives you/PRP/you a/DT/a codeword/NNP/codeword. each/DT/each time/NN/time you/PRP/you going/VBG/going to/TO/to right/JJ/right you/PRP/you right/RB/right a/DT/a one/CD/one /,/, each/DT/each time/NN/time you/PRP/you going/VBG/going to/TO/to left/VB/left to/TO/to right/JJ/right a/DT/a zero/NNP/zero. and/CC/and when/WRB/when you/PRP/you end/VBP/end up/RP/up with/IN/with leaf/NN/leaf this/DT/this code/NN/code word/NN/word associated/VBN/associated with/IN/with it/NNP/it. similarly/RB/similarly /,/, given/VBN/given prefix/NN/prefix free/JJ/free code/NN/code for/IN/for n/NN/n symbols/NNS/symbols /,/, you/PRP/you can/MD/can construct/VB/construct the/DT/the binary/JJ/binary tree/NN/tree with/IN/with n/NN/n leafs/NNS/leafs for/IN/for which/WDT/which this/DT/this is/VBZ/is n/VBN/n or/CC/or more/JJR/more leafs/NNS/leafs /,/, which/WDT/which as/IN/as which/WDT/which the/DT/the same/JJ/same property/NNP/property. so/IN/so /,/, essentially/RB/essentially if/IN/if your/PRP$/your code/NN/code codeword/NN/codeword is/VBZ/is say/VB/say 1/CD/1 1/CD/1 1/CD/1 1/CD/1 0/CD/0. then/RB/then /,/, you/PRP/you get/VBP/get to/TO/to this/DT/this leaf/NN/leaf by/IN/by traversing/NN/traversing right/RB/right /,/, right/RB/right /,/, right/RB/right and/CC/and then/RB/then left/NNP/left. that/IN/that gives/VBZ/gives you/PRP/you the/DT/the position/NN/position /,/, similarly/RB/similarly for/IN/for any/DT/any binary/JJ/binary string/NN/string /,/, you/PRP/you sort/NN/sort of/IN/of get/NN/get two/CD/two a/DT/a leaf/NNP/leaf. so/RB/so /,/, you/PRP/you traverse/VBP/traverse right/RB/right if/IN/if it/PRP/it is/VBZ/is a/DT/a one/CD/one traverse/NN/traverse left/NN/left if/IN/if it/PRP/it is/VBZ/is a/DT/a zero/NNP/zero. and/CC/and then/RB/then /,/, gives/VBZ/gives you/PRP/you part/NN/part of/IN/of the/DT/the binary/JJ/binary tree/NN/tree /,/, you/PRP/you can/MD/can fill/VB/fill up/RP/up the/DT/the rest/NN/rest of/IN/of the/DT/the binary/JJ/binary tree/NN/tree if/IN/if you/PRP/you want/NNP/want. since/IN/since /,/, it/PRP/it is/VBZ/is prefix/CD/prefix free/JJ/free each/DT/each time/NN/time you/PRP/you will/MD/will end/VB/end up/RP/up with/IN/with leaf/NNP/leaf. so/RB/so /,/, all/DT/all these/DT/these symbols/NNS/symbols will/MD/will sit/VB/sit on/IN/on leafs/NNP/leafs. so/IN/so /,/, you/PRP/you can/MD/can check/VB/check this/DT/this using/NN/using small/JJ/small example/NNP/example. in/IN/in fact/NN/fact /,/, i/PRP/i encouraged/VBD/encouraged do/VBP/do it/PRP/it /,/, that/IN/that will/MD/will help/VB/help you/PRP/you understand/VB/understand this/DT/this better/NNP/better. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to do/NNP/do. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to output/VB/output prefix/NN/prefix free/JJ/free code/NN/code or/CC/or a/DT/a binary/JJ/binary tree/NN/tree /,/, which/WDT/which corresponds/NNS/corresponds to/TO/to this/DT/this which/WDT/which minimize/NN/minimize this/DT/this something/NN/something like/IN/like this/NNP/this. we/PRP/we saw/VBD/saw that/IN/that once/RB/once this/DT/this structure/NN/structure of/IN/of the/DT/the binary/JJ/binary trees/NNS/trees fixed/NNP/fixed. then/RB/then /,/, we/PRP/we know/VBP/know how/WRB/how to/TO/to associate/VB/associate these/DT/these words/NNS/words to/TO/to the/DT/the binary/JJ/binary tree/NN/tree /,/, with/IN/with two/CD/two with/IN/with the/DT/the smallest/JJS/smallest frequencies/NNS/frequencies /,/, will/MD/will see/VB/see that/IN/that leaves/NNS/leaves that/WDT/that two/CD/two with/IN/with smallest/JJS/smallest frequencies/NNS/frequencies will/MD/will sit/VB/sit at/IN/at leafs/NNS/leafs /,/, which/WDT/which are/VBP/are at/IN/at the/DT/the bottom/NN/bottom /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 43/CD/43 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my tree/NN/tree /,/, so/RB/so it/PRP/it is/VBZ/is a/DT/a binary/JJ/binary tree/NNP/tree. and/CC/and let/VB/let us/PRP/us say/VB/say somewhere/RB/somewhere here/RB/here at/IN/at see/NN/see it/PRP/it is/VBZ/is important/JJ/important /,/, it/PRP/it need/VBP/need not/RB/not be/VB/be sort/VBN/sort of/IN/of balance/NN/balance you/PRP/you can/MD/can even/RB/even be/VB/be skew/JJ/skew like/IN/like this/NNP/this. let/NN/let us/PRP/us say/VBP/say these/DT/these two/CD/two are/VBP/are the/DT/the bottom/NN/bottom most/JJS/most leafs/NNS/leafs /,/, then/RB/then i/PRP/i know/VBP/know the/DT/the these/DT/these will/MD/will have/VB/have the/DT/the least/JJS/least frequencies/NNP/frequencies. these/DT/these two/CD/two the/DT/the frequencies/NNS/frequencies will/MD/will be/VB/be the/DT/the smallest/NNP/smallest. because/IN/because /,/, take/VBP/take supposing/VBG/supposing it/PRP/it was/VBD/was not/RB/not the/DT/the case/NN/case and/CC/and you/PRP/you know/VBP/know somewhere/RB/somewhere here/RB/here /,/, you/PRP/you had/VBD/had you/PRP/you had/VBD/had a/DT/a leaf/NNP/leaf. now/RB/now /,/, the/DT/the quantity/NN/quantity of/IN/of minimizing/VBG/minimizing is/VBZ/is sigma/NN/sigma h/NN/h i/PRP/i f/VBP/f i/NNP/i. now/RB/now /,/, if/IN/if this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 07/CD/07 /:/: 37/CD/37 /CD/) /CD/) like/IN/like closure/NN/closure in/IN/in the/DT/the h/NN/h of/IN/of this/DT/this was/VBD/was smaller/JJR/smaller /,/, h/JJ/h of/IN/of this/DT/this was/VBD/was larger/NNP/larger. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is the/DT/the h/NN/h 1/CD/1 and/CC/and this/DT/this is/VBZ/is the/DT/the h/NN/h 2/CD/2 /,/, h/JJ/h 1/CD/1 smaller/JJR/smaller than/IN/than h/NN/h 2/CD/2. h/NN/h 1/CD/1 is/VBZ/is smaller/JJR/smaller than/IN/than h/NN/h 2/CD/2 /,/, this/DT/this is/VBZ/is lower/JJR/lower down/IN/down and/CC/and that/IN/that is/VBZ/is higher/JJR/higher up/NNP/up. now/RB/now /,/, you/PRP/you like/IN/like to/TO/to put/VB/put smaller/JJR/smaller frequency/NN/frequency here/NNP/here. so/RB/so /,/, that/IN/that if/IN/if i/PRP/i had/VBD/had f/NN/f 1/CD/1 /,/, f/NN/f 2/CD/2 supposing/VBG/supposing /,/, let/VB/let us/PRP/us say/VB/say this/DT/this way/NN/way f/NN/f 1/CD/1 was/VBD/was smaller/NNP/smaller. then/RB/then /,/, i/PRP/i could/MD/could like/VB/like f/NN/f 1/CD/1 this/DT/this to/TO/to sit/VB/sit there/RB/there and/CC/and this/DT/this to/TO/to sit/VB/sit there/NNP/there. because/IN/because /,/, then/RB/then it/PRP/it will/MD/will be/VB/be f/NN/f 2/CD/2 h/NN/h 1/CD/1 plus/CC/plus f/NN/f 1/CD/1 h/NN/h 2/CD/2 which/WDT/which is/VBZ/is smaller/NNP/smaller. then/RB/then /,/, f/NN/f 1/CD/1 h/NN/h 1/CD/1 plus/CC/plus f/NN/f 2/CD/2 h/NN/h 2/CD/2 /,/, you/PRP/you can/MD/can check/VB/check that/IN/that this/DT/this is/VBZ/is smaller/JJR/smaller and/CC/and that/NNP/that. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want /,/, which/WDT/which means/VBZ/means things/NNS/things which/WDT/which are/VBP/are smaller/JJR/smaller in/IN/in frequency/NN/frequency /,/, must/MD/must be/VB/be lower/JJR/lower down/IN/down in/IN/in the/DT/the tree/NNP/tree. things/NNS/things /,/, which/WDT/which are/VBP/are larger/JJR/larger in/IN/in frequency/NN/frequency should/MD/should be/VB/be higher/JJR/higher of/IN/of in/IN/in that/DT/that tree/NN/tree /,/, which/WDT/which stands/NNS/stands to/TO/to reason/NNP/reason. because/IN/because /,/, the/DT/the larger/JJR/larger the/DT/the frequency/NN/frequency /,/, this/DT/this smaller/JJR/smaller should/MD/should be/VB/be the/DT/the codeword/NN/codeword /,/, which/WDT/which means/VBZ/means should/MD/should be/VB/be higher/JJR/higher up/IN/up in/IN/in the/DT/the tree/NNP/tree. so/RB/so /,/, this/DT/this much/JJ/much we/PRP/we know/NNP/know... so/RB/so /,/, given/VBN/given the/DT/the shape/NN/shape of/IN/of the/DT/the tree/NN/tree /,/, we/PRP/we can/MD/can certainly/RB/certainly fill/VB/fill it/PRP/it up/RP/up with/IN/with these/DT/these frequencies/NNS/frequencies /,/, that/IN/that is/VBZ/is easily/RB/easily done/NNP/done. but/CC/but /,/, what/WP/what is/VBZ/is the/DT/the shape/NN/shape of/IN/of the/DT/the tree/NN/tree /,/, that/IN/that is/VBZ/is the/DT/the question/NN/question that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to answer/VB/answer yes/NNP/yes. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we would/MD/would like/VB/like to/TO/to answer/VB/answer and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to use/VB/use this/DT/this exchange/NN/exchange trick/NNP/trick. so/RB/so /,/, what/WDT/what you/PRP/you like/VBP/like to/TO/to do/VB/do this/DT/this ?/./? supposing/VBG/supposing you/PRP/you are/VBP/are given/VBN/given some/DT/some tree/NN/tree and/CC/and you/PRP/you filled/VBD/filled it/PRP/it up/RP/up somehow/NNP/somehow. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 29/CD/29 /CD/) now/RB/now /,/, suppose/VBP/suppose there/EX/there are/VBP/are these/DT/these two/CD/two parts/NNS/parts from/IN/from the/DT/the root/NNP/root. this/DT/this is/VBZ/is let/VB/let us/PRP/us say/VB/say node/NN/node i/PRP/i /,/, next/JJ/next node/NN/node j/NNP/j. there/EX/there is/VBZ/is a/DT/a tree/NN/tree sitting/VBG/sitting here/RB/here call/JJ/call it/PRP/it t/VBD/t i/PRP/i and/CC/and there/EX/there is/VBZ/is a/DT/a tree/NN/tree sitting/VBG/sitting here/RB/here call/JJ/call it/PRP/it t/VBD/t j/NN/j /,/, here/RB/here is/VBZ/is the/DT/the root/NNP/root. now/RB/now /,/, so/RB/so what/WP/what you/PRP/you like/VBP/like to/TO/to do/VB/do is/VBZ/is exchange/VB/exchange these/DT/these two/CD/two sub/NN/sub trees/NNP/trees. so/RB/so /,/, remember/NN/remember the/DT/the or/CC/or exchange/NN/exchange trick/NN/trick was/VBD/was the/DT/the somehow/NN/somehow exchange/NN/exchange some/DT/some part/NN/part of/IN/of the/DT/the output/NNP/output. supposing/NN/supposing /,/, we/PRP/we had/VBD/had some/DT/some constructed/VBN/constructed solution/NN/solution /,/, we/PRP/we would/MD/would like/VB/like to/TO/to change/VB/change twist/NN/twist the/DT/the solutions/NNS/solutions slightly/RB/slightly and/CC/and see/VB/see what/WP/what happens/NNP/happens. and/CC/and earlier/JJR/earlier it/PRP/it was/VBD/was exchanging/VBG/exchanging part/NN/part to/TO/to the/DT/the solution/NN/solution with/IN/with something/NN/something /,/, which/WDT/which is/VBZ/is outside/NNP/outside. well/RB/well /,/, here/RB/here since/IN/since we/PRP/we are/VBP/are constructing/VBG/constructing trees/NNS/trees /,/, what/WP/what you/PRP/you like/VBP/like to/TO/to see/VB/see is/VBZ/is suppose/DT/suppose your/PRP$/your exchange/NN/exchange to/TO/to sub/VB/sub trees/NNP/trees. and/CC/and what/WP/what is/VBZ/is the/DT/the result/NN/result of/IN/of this/DT/this action/NN/action ?/./? what/WP/what happens/NNS/happens with/IN/with this/DT/this action/NN/action ?/./? what/WP/what happens/NNS/happens to/TO/to the/DT/the you/PRP/you know/VBP/know the/DT/the function/NN/function we/PRP/we are/VBP/are trying/VBG/trying to/TO/to minimize/VB/minimize /,/, which/WDT/which is/VBZ/is product/NN/product to/TO/to the/DT/the height/NN/height times/VBZ/times the/DT/the frequency/NNP/frequency. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to exchange/VB/exchange these/DT/these two/CD/two sub/NN/sub trees/NNS/trees and/CC/and see/VB/see what/WP/what really/RB/really happens/NNP/happens. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this calculation/NNP/calculation. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is at/IN/at height/NN/height /,/, so/RB/so this/DT/this let/NN/let us/PRP/us say/VBP/say is/VBZ/is height/VBN/height h/NN/h /,/, let/VB/let us/PRP/us say/VB/say this/DT/this portion/NN/portion is/VBZ/is h/JJ/h prime/NN/prime /,/, this/DT/this is/VBZ/is all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the root/NNP/root. so/RB/so /,/, the/DT/the root/NN/root two/CD/two node/NN/node i/PRP/i is/VBZ/is height/JJ/height h/NN/h. so/IN/so /,/, h/JJ/h is/VBZ/is length/NN/length of/IN/of path/NN/path from/IN/from root/NN/root to/TO/to i/NNP/i. h/NN/h prime/NN/prime is/VBZ/is from/IN/from root/NN/root 2/CD/2 j/NN/j /,/, that/IN/that is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path from/IN/from root/NN/root 2/CD/2 j/NN/j at/IN/at h/NN/h prime/NNP/prime. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to now/RB/now compute/VB/compute this/DT/this function/NNP/function. so/RB/so /,/, see/VB/see when/WRB/when you/PRP/you exchange/VBP/exchange these/DT/these two/CD/two sub/NN/sub trees/NNS/trees /,/, the/DT/the rest/NN/rest of/IN/of the/DT/the elements/NNS/elements remain/VBP/remain that/IN/that they/PRP/they are/NNP/are. so/RB/so /,/, there/EX/there contribution/NN/contribution to/TO/to this/DT/this cost/NN/cost remains/VBZ/remains the/DT/the same/JJ/same /,/, we/PRP/we are/VBP/are not/RB/not changing/VBG/changing that/IN/that at/IN/at all/NNP/all. so/RB/so /,/, the/DT/the anything/NN/anything we/PRP/we need/VBP/need to/TO/to worry/VB/worry about/IN/about is/VBZ/is the/DT/the contribution/NN/contribution change/NN/change in/IN/in the/DT/the cost/NN/cost /,/, because/IN/because of/IN/of the/DT/the exchange/NNP/exchange. so/RB/so /,/, let/VB/let us/PRP/us calculate/VB/calculate the/DT/the old/JJ/old cost/NN/cost /,/, because/IN/because of/IN/of these/DT/these two/CD/two sub/NN/sub trees/NNP/trees. the/DT/the new/JJ/new cost/NN/cost because/IN/because of/IN/of these/DT/these two/CD/two sub/NN/sub trees/NNS/trees and/CC/and we/PRP/we will/MD/will see/VB/see what/WP/what the/DT/the differences/NNP/differences. so/RB/so /,/, here/RB/here the/DT/the old/JJ/old cost/NNP/cost. so/RB/so /,/, let/VB/let me/PRP/me do/VBP/do it/PRP/it for/IN/for t/NN/t i/PRP/i so/RB/so for/IN/for every/DT/every element/NN/element e/NN/e in/IN/in t/NN/t i/NNP/i. so/RB/so /,/, i/PRP/i have/VBP/have the/DT/the frequency/NN/frequency times/VBZ/times the/DT/the length/NN/length of/IN/of the/DT/the part/NN/part from/IN/from root/NN/root 2/CD/2 that/WDT/that element/NN/element /,/, which/WDT/which is/VBZ/is h/VBP/h length/NN/length root/NN/root to/TO/to i/PRP/i plus/RB/plus the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path inside/NN/inside this/DT/this sub/NN/sub tree/NNP/tree. let/NN/let me/PRP/me call/VBP/call this/DT/this l/NN/l e/NNP/e. l/NN/l e/NN/e is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path from/IN/from i/PRP/i to/TO/to the/DT/the element/NN/element e/NN/e in/IN/in t/NN/t i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the cost/NN/cost old/JJ/old cost/NN/cost for/IN/for t/NN/t i/PRP/i and/CC/and the/DT/the old/JJ/old cost/NN/cost for/IN/for t/NN/t j/NN/j is/VBZ/is sigma/NNP/sigma. let/NN/let us/PRP/us say/VBP/say f/NN/f c/NN/c h/NN/h prime/NN/prime plus/CC/plus l/NN/l prime/NN/prime c/NN/c and/CC/and c/NN/c is/VBZ/is in/IN/in t/NN/t j/NN/j the/DT/the similar/JJ/similar cost/NN/cost for/IN/for t/NN/t j/NN/j h/NN/h prime/NN/prime is/VBZ/is this/DT/this l/NN/l prime/NN/prime c/NN/c is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path from/IN/from j/NN/j to/TO/to the/DT/the element/NN/element c/NN/c f/NN/f c/NN/c is/VBZ/is a/DT/a frequency/NNP/frequency. this/DT/this is/VBZ/is the/DT/the old/JJ/old cost/NN/cost of/IN/of elements/NNS/elements in/IN/in t/NN/t i/PRP/i and/CC/and elements/NNS/elements in/IN/in t/NN/t j/NNP/j. similarly/RB/similarly /,/, we/PRP/we can/MD/can write/VB/write the/DT/the new/JJ/new cost/NN/cost /,/, let/VB/let me/PRP/me actually/RB/actually i/PRP/i guess/VBP/guess i/PRP/i will/MD/will have/VB/have to/TO/to write/VB/write this/DT/this again/NNP/again. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 50/CD/50 /CD/) so/RB/so /,/, let/VB/let me/PRP/me try/NN/try and/CC/and write/VB/write all/DT/all this/DT/this in/IN/in one/NNP/one. so/RB/so /,/, here/RB/here the/DT/the old/JJ/old cost/NN/cost sigma/NN/sigma e/NN/e belong/IN/belong to/TO/to t/VB/t i/PRP/i f/NN/f e/NN/e times/NNS/times h/VBP/h plus/RB/plus l/JJ/l e/NN/e plus/CC/plus sigma/NN/sigma c/NN/c belongs/NNS/belongs to/TO/to t/VB/t j/NN/j f/NN/f c/NN/c times/NNS/times h/VBP/h prime/JJ/prime plus/NNS/plus l/VBP/l prime/JJ/prime this/DT/this is/VBZ/is old/JJ/old /,/, a/DT/a new/JJ/new cost/NN/cost /,/, well/RB/well here/RB/here and/CC/and just/RB/just exchanging/NNP/exchanging. let/VB/let us/PRP/us go/VB/go back/RB/back here/RB/here /:/( /:/( refer/NN/refer time/NN/time /:/: 14/CD/14 /:/: 10/CD/10 /CD/) /CD/) i/PRP/i am/VBP/am exchanging/VBG/exchanging t/NN/t i/PRP/i and/CC/and t/VB/t j/NNP/j. so/RB/so /,/, this/DT/this h/NN/h will/MD/will remain/VB/remain the/DT/the same/JJ/same /,/, but/CC/but here/RB/here i/PRP/i will/MD/will have/VB/have t/NN/t j/NN/j instead/RB/instead of/IN/of t/NN/t i/PRP/i sigma/VBP/sigma e/JJ/e belongs/NNS/belongs to/TO/to t/VB/t i/NNP/i. now/RB/now /,/, t/NN/t i/PRP/i shifted/VBD/shifted from/IN/from h/NN/h to/TO/to h/VB/h prime/NNP/prime. so/RB/so /,/, it/PRP/it will/MD/will be/VB/be f/NN/f e/NN/e times/NNS/times h/VBP/h prime/JJ/prime plus/NNS/plus l/VBP/l e/NN/e plus/CC/plus sigma/NN/sigma c/NN/c belongs/NNS/belongs to/TO/to t/VB/t j/NN/j f/NN/f c/NN/c remains/VBZ/remains the/DT/the same/JJ/same h/NN/h plus/CC/plus l/NN/l prime/NNP/prime. so/RB/so /,/, this/DT/this cost/NN/cost this/DT/this length/NN/length inside/NN/inside the/DT/the tree/NN/tree /,/, inside/NN/inside the/DT/the sub/NN/sub tree/NN/tree remains/VBZ/remains fixed/NNP/fixed. but/CC/but /,/, earlier/RBR/earlier it/PRP/it was/VBD/was attach/JJ/attach to/TO/to i/PRP/i that/IN/that is/VBZ/is why/WRB/why i/PRP/i add/VBP/add h/JJ/h prime/NN/prime here/NNP/here. now/RB/now /,/, it/PRP/it is/VBZ/is attach/DT/attach to/TO/to j/VB/j /,/, so/RB/so earlier/JJR/earlier it/PRP/it was/VBD/was attach/JJ/attach to/TO/to j/VB/j /,/, that/IN/that is/VBZ/is why/WRB/why it/PRP/it is/VBZ/is h/JJ/h prime/NN/prime /,/, now/RB/now it/PRP/it is/VBZ/is attach/DT/attach to/TO/to i/PRP/i /,/, so/RB/so it/PRP/it is/VBZ/is h/NNP/h. so/RB/so /,/, this/DT/this is/VBZ/is new/JJ/new cost/NN/cost /,/, so/RB/so what/WP/what is/VBZ/is difference/NN/difference in/IN/in cost/NNP/cost. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to compute/VB/compute old/JJ/old minus/NN/minus new/NNP/new. so/RB/so /,/, when/WRB/when i/PRP/i do/VBP/do old/JJ/old minus/NN/minus new/JJ/new /,/, this/DT/this f/NN/f e/NN/e l/NN/l e/NN/e cancels/NNS/cancels in/IN/in both/NNP/both. similarly/RB/similarly /,/, f/NN/f c/NN/c l/NN/l primes/VBZ/primes c/NN/c cancels/NNS/cancels /,/, so/RB/so with/IN/with f/NN/f c/NN/c when/WRB/when i/PRP/i subtract/VBP/subtract h/JJ/h minus/NN/minus h/NN/h prime/NN/prime is/VBZ/is what/WP/what remains/-NONE-/remains. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but h/NN/h minus/NN/minus h/NN/h prime/NN/prime time/NN/time 's/POS/'s sigma/NN/sigma f/NN/f e/NN/e plus/CC/plus h/NN/h prime/NN/prime minus/NN/minus h/NN/h times/NNS/times sigma/VBP/sigma f/NN/f c/NNP/c. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but and/CC/and this/DT/this rewriting/NN/rewriting this/DT/this h/NN/h prime/NN/prime minus/NN/minus h/NN/h times/NNS/times sigma/VBP/sigma f/NN/f c/NN/c minus/NN/minus sigma/NN/sigma f/NN/f e/NNP/e. this/DT/this is/VBZ/is c/NN/c belong/IN/belong into/IN/into t/NN/t j/NN/j and/CC/and this/DT/this is/VBZ/is e/NN/e belong/IN/belong into/IN/into t/NN/t i/NNP/i. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back from/IN/from slide/NN/slide h/NN/h prime/NN/prime i/PRP/i will/MD/will assume/VB/assume is/VBZ/is greater/JJR/greater than/IN/than h/NN/h /:/( /:/( refer/NN/refer time/NN/time /:/: 16/CD/16 /:/: 19/CD/19 /CD/) /CD/) i/PRP/i have/VBP/have done/VBN/done a/DT/a shift/NN/shift of/IN/of this/DT/this if/IN/if h/NN/h prime/NN/prime is/VBZ/is greater/JJR/greater than/IN/than h/NN/h what/WP/what is/VBZ/is the/DT/the result/NN/result ?/./? so/RB/so /,/, h/JJ/h prime/NN/prime is/VBZ/is greater/JJR/greater than/IN/than h/NN/h /,/, then/RB/then this/DT/this quantity/NN/quantity is/VBZ/is positive/NNP/positive. so/RB/so /,/, if/IN/if this/DT/this quantity/NN/quantity is/VBZ/is negative/JJ/negative /,/, then/RB/then we/PRP/we have/VBP/have achieve/VBP/achieve something/NN/something which/WDT/which is/VBZ/is good/JJ/good /,/, the/DT/the cost/NN/cost as/IN/as decreased/VBN/decreased /,/, i/PRP/i mean/VBP/mean in/IN/in the/DT/the cost/NN/cost as/IN/as increased/NNP/increased. so/RB/so /,/, this/DT/this is/VBZ/is old/JJ/old minus/NN/minus new/NNP/new. if/IN/if old/JJ/old minus/NN/minus new/JJ/new is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 at/IN/at means/NNS/means the/DT/the old/JJ/old cost/NN/cost is/VBZ/is greater/JJR/greater than/IN/than the/DT/the new/JJ/new cost/NN/cost /,/, we/PRP/we have/VBP/have decreased/VBN/decreased the/DT/the cost/NNP/cost. so/RB/so /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we want/VBP/want /,/, so/RB/so when/WRB/when is/VBZ/is this/DT/this /,/, this/DT/this is/VBZ/is greater/JJR/greater than/IN/than 0/CD/0. so/RB/so /,/, this/DT/this is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 /,/, then/RB/then we/PRP/we are/VBP/are in/IN/in good/JJ/good shape/NNP/shape. this/DT/this fellow/JJ/fellow is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 /,/, then/RB/then we/PRP/we have/VBP/have achieve/VBP/achieve something/NNP/something. so/RB/so /,/, which/WDT/which means/VBZ/means /,/, so/RB/so let/VB/let me/PRP/me just/RB/just write/VBP/write this/DT/this term/NN/term /,/, so/RB/so just/RB/just conclude/NNP/conclude. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 33/CD/33 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is i/PRP/i t/VBP/t i/PRP/i and/CC/and somewhere/RB/somewhere here/RB/here is/VBZ/is j/NN/j and/CC/and t/NN/t j/NNP/j. if/IN/if sigma/NN/sigma f/NN/f c/NN/c c/NN/c belongs/NNS/belongs to/TO/to t/VB/t j/NN/j is/VBZ/is greater/JJR/greater and/CC/and sigma/NN/sigma f/NN/f e/NN/e e/NN/e belong/IN/belong to/TO/to t/VB/t i/PRP/i c/VBP/c belongs/NNS/belongs to/TO/to t/VB/t j/NN/j e/NN/e belongs/NNS/belongs to/TO/to t/VB/t i/PRP/i this/DT/this is/VBZ/is true/JJ/true is/VBZ/is then/RB/then /,/, exchanging/VBG/exchanging leads/NNS/leads to/TO/to smaller/JJR/smaller cost/NNP/cost. so/RB/so /,/, we/PRP/we have/VBP/have two/CD/two sub/NN/sub trees/NNS/trees /,/, one/CD/one is/VBZ/is this/DT/this t/NN/t i/PRP/i that/IN/that is/VBZ/is t/VBN/t i/PRP/i and/CC/and that/IN/that is/VBZ/is fellow/JJ/fellow t/NN/t j/NNP/j. if/IN/if the/DT/the some/DT/some of/IN/of the/DT/the frequencies/NNS/frequencies of/IN/of the/DT/the elements/NNS/elements in/IN/in t/NN/t j/NN/j is/VBZ/is greater/JJR/greater than/IN/than the/DT/the sum/NN/sum of/IN/of the/DT/the frequencies/NNS/frequencies of/IN/of elements/NNS/elements in/IN/in t/NN/t i/PRP/i /,/, then/RB/then if/IN/if i/PRP/i exchange/VBP/exchange i/PRP/i get/VBP/get a/DT/a smaller/JJR/smaller cost/NNP/cost. remember/NN/remember /,/, it/PRP/it is/VBZ/is just/RB/just this/DT/this when/WRB/when i/PRP/i look/VBP/look at/IN/at a/DT/a sub/NN/sub tree/NN/tree i/PRP/i need/VBP/need to/TO/to look/VB/look at/IN/at only/RB/only if/IN/if some/DT/some of/IN/of the/DT/the frequencies/NNS/frequencies inside/VBP/inside /,/, that/IN/that is/VBZ/is what/WP/what these/DT/these two/CD/two things/NNS/things it/NNP/it. only/RB/only the/DT/the some/DT/some of/IN/of the/DT/the frequencies/NNS/frequencies nothing/NN/nothing to/TO/to do/VB/do the/DT/the length/NN/length inside/NN/inside the/DT/the tree/NN/tree /,/, etcetera/NNP/etcetera. i/PRP/i do/VBP/do not/RB/not care/VB/care what/WP/what this/DT/this tree/NN/tree looks/VBZ/looks like/NNP/like. as/IN/as long/RB/long as/IN/as the/DT/the some/DT/some of/IN/of the/DT/the frequencies/NNS/frequencies of/IN/of elements/NNS/elements inside/VBP/inside this/DT/this sub/NN/sub tree/NN/tree is/VBZ/is greater/JJR/greater than/IN/than this/DT/this i/NN/i should/MD/should move/VB/move it/PRP/it up/NNP/up. that/IN/that is/VBZ/is what/WP/what the/DT/the exchange/NN/exchange trick/NN/trick tells/NNS/tells us/PRP/us and/CC/and our/PRP$/our algorithm/NNP/algorithm. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will use/VB/use this/DT/this fact/NNP/fact. so/RB/so /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at a/DT/a sub/NN/sub tree/NN/tree the/DT/the quantity/NN/quantity that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to keep/VB/keep looking/VBG/looking at/IN/at is/VBZ/is the/DT/the some/DT/some of/IN/of the/DT/the frequencies/NNS/frequencies of/IN/of elements/NNS/elements in/IN/in this/DT/this sub/NN/sub tree/NNP/tree. not/RB/not the/DT/the average/JJ/average length/NN/length or/CC/or anything/NN/anything of/IN/of that/DT/that kind/NNP/kind. so/RB/so /,/, this/DT/this will/MD/will be/VB/be the/DT/the mantra/NN/mantra that/IN/that we/PRP/we will/MD/will follow/VB/follow during/IN/during the/DT/the course/NN/course of/IN/of this/DT/this algorithm/NNP/algorithm. so/RB/so /,/, now/RB/now what/WP/what so/RB/so we/PRP/we would/MD/would like/VB/like to/TO/to follow/VB/follow greedy/JJ/greedy approach/NN/approach /,/, which/WDT/which is/VBZ/is we/PRP/we would/MD/would like/VB/like to/TO/to build/VB/build this/DT/this sub/NN/sub trees/VBZ/trees one/CD/one by/IN/by one/CD/one slowly/NNP/slowly. initially/RB/initially each/DT/each element/NN/element will/MD/will be/VB/be a/DT/a sub/NN/sub tree/NN/tree of/IN/of it/PRP/it is/VBZ/is own/NNP/own. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to build/VB/build this/DT/this sub/NN/sub trees/VBZ/trees bottom/NN/bottom up/IN/up /,/, slow/JJ/slow increase/NN/increase the/DT/the size/NN/size of/IN/of the/DT/the sub/NN/sub trees/NNS/trees that/WDT/that i/PRP/i build/VBP/build slowly/NNP/slowly. initially/RB/initially /,/, each/DT/each element/NN/element will/MD/will be/VB/be a/DT/a sub/NN/sub tree/NN/tree of/IN/of it/PRP/it is/VBZ/is own/JJ/own this/DT/this is/VBZ/is the/DT/the bottom/NN/bottom thing/NN/thing and/CC/and i/PRP/i know/VBP/know the/DT/the first/JJ/first step/NNP/step. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 25/CD/25 /CD/) so/IN/so /,/, if/IN/if i/PRP/i have/VBP/have let/VBN/let us/PRP/us say/VBP/say i/PRP/i have/VBP/have these/DT/these elements/NNS/elements /,/, let/VB/let us/PRP/us say/VB/say this/DT/this as/IN/as frequency/NN/frequency f/NN/f 1/CD/1 /,/, f/NN/f 2/CD/2 /,/, f/NN/f n/NN/n minus/NN/minus one/CD/one and/CC/and f/NN/f n/NNP/n. suppose/NN/suppose these/DT/these are/VBP/are the/DT/the frequencies/NNS/frequencies and/CC/and let/VB/let us/PRP/us say/VB/say /,/, they/PRP/they are/VBP/are in/IN/in decreasing/VBG/decreasing order/NNP/order. so/RB/so /,/, f/NN/f 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than equal/JJ/equal to/TO/to f/NN/f 2/CD/2 and/CC/and so/RB/so on/IN/on two/CD/two of/IN/of the/DT/the smallest/JJS/smallest once/RB/once are/VBP/are f/NN/f n/NN/n minus/NN/minus 1/CD/1 and/CC/and f/NN/f n/NNP/n. then/RB/then /,/, i/PRP/i know/VBP/know part/NN/part of/IN/of the/DT/the sub/NN/sub tree/NN/tree /,/, i/PRP/i know/VBP/know that/IN/that my/PRP$/my next/JJ/next step/NN/step i/PRP/i can/MD/can have/VB/have f/NN/f 1/CD/1 /,/, f/NN/f 2/CD/2 and/CC/and so/RB/so on/NNP/on. i/PRP/i can/MD/can join/VB/join the/DT/the last/JJ/last /,/, this/DT/this will/MD/will be/VB/be a/DT/a sub/NN/sub tree/NN/tree i/PRP/i know/NNP/know. so/RB/so /,/, this/DT/this is/VBZ/is f/NN/f 1/CD/1 minus/NN/minus 1/CD/1 and/CC/and this/DT/this is/VBZ/is f/NN/f n/NNP/n. the/DT/the question/NN/question is/VBZ/is what/WP/what next/JJ/next ?/./? now/RB/now /,/, the/DT/the crucial/JJ/crucial trick/NN/trick is/VBZ/is rather/RB/rather than/IN/than treat/NN/treat them/PRP/them as/IN/as leafs/NNS/leafs /,/, i/PRP/i treat/VBP/treat all/DT/all of/IN/of them/PRP/them as/IN/as sub/NN/sub trees/NNP/trees. this/DT/this is/VBZ/is one/CD/one sub/NN/sub tree/NN/tree /,/, this/DT/this is/VBZ/is another/DT/another sub/NN/sub tree/NN/tree well/RB/well a/DT/a leaf/NN/leaf is/VBZ/is a/DT/a sub/NN/sub tree/NNP/tree. this/DT/this is/VBZ/is sub/NN/sub tree/NN/tree /,/, that/IN/that is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree /,/, this/DT/this is/VBZ/is sub/NN/sub tree/NNP/tree. now/RB/now /,/, which/WDT/which are/VBP/are the/DT/the two/CD/two sub/NN/sub trees/NNS/trees that/WDT/that i/PRP/i want/VBP/want to/TO/to be/VB/be at/IN/at bottom/NNP/bottom. remember/NN/remember /,/, the/DT/the previous/JJ/previous exchange/NN/exchange thing/NN/thing as/IN/as the/DT/the bottom/NN/bottom i/PRP/i want/VBP/want the/DT/the sub/NN/sub tree/NN/tree with/IN/with whose/WP$/whose some/DT/some of/IN/of the/DT/the frequencies/NNS/frequencies of/IN/of the/DT/the nodes/NNS/nodes inside/VBP/inside it/PRP/it must/MD/must be/VB/be the/DT/the smallest/NNP/smallest. so/RB/so /,/, i/PRP/i now/RB/now look/VBP/look at/IN/at these/DT/these frequencies/NNS/frequencies i/PRP/i have/VBP/have f/NN/f 1/CD/1 f/NN/f 2/CD/2 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, this/DT/this is/VBZ/is f/NN/f n/NN/n minus/NN/minus 2/CD/2. now/RB/now /,/, this/DT/this i/PRP/i treat/VBP/treat us/PRP/us one/CD/one sub/NN/sub tree/NN/tree and/CC/and it/PRP/it is/VBZ/is f/NN/f n/NN/n minus/NN/minus 1/CD/1 plus/CC/plus f/NN/f n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my new/JJ/new f/NN/f prime/NN/prime let/VB/let say/NN/say n/NN/n minus/NN/minus 1/CD/1. these/DT/these frequencies/NNS/frequencies remain/VBP/remain the/DT/the same/JJ/same /,/, now/RB/now this/DT/this i/PRP/i look/VBP/look upon/IN/upon as/IN/as a/DT/a sub/NN/sub tree/NN/tree with/IN/with this/DT/this frequency/NNP/frequency. among/IN/among these/DT/these i/PRP/i chose/VBP/chose two/CD/two of/IN/of this/DT/this smallest/JJS/smallest and/CC/and i/PRP/i put/VBD/put a/DT/a new/JJ/new node/NN/node and/CC/and join/NN/join them/PRP/them together/RB/together and/CC/and this/DT/this is/VBZ/is my/PRP$/my algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i just/RB/just keep/VB/keep doing/VBG/doing this/DT/this as/IN/as i/PRP/i go/VBP/go up/NNP/up. so/RB/so /,/, my/PRP$/my generic/JJ/generic step/NN/step of/IN/of the/DT/the algorithm/NN/algorithm is/VBZ/is this/DT/this /,/, i/PRP/i have/VBP/have sub/NN/sub trees/NNP/trees. so/RB/so /,/, initially/RB/initially treat/VB/treat each/DT/each element/NN/element is/VBZ/is treated/VBN/treated as/RB/as sub/NN/sub tree/NN/tree and/CC/and as/IN/as i/PRP/i go/VBP/go long/RB/long i/PRP/i will/MD/will have/VB/have may/MD/may sub/VB/sub trees/NNP/trees. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 59/CD/59 /CD/) so/RB/so /,/, the/DT/the intermediate/JJ/intermediate stage/NN/stage is/VBZ/is this/DT/this i/NN/i have/VBP/have sub/NN/sub trees/NNS/trees /,/, let/VB/let us/PRP/us say/VB/say t/NN/t 1/CD/1 t/NN/t 2/CD/2 so/RB/so on/IN/on up/IN/up to/TO/to t/VB/t k/NNP/k. now/RB/now /,/, i/PRP/i associate/VBP/associate weight/JJ/weight to/TO/to each/DT/each of/IN/of them/PRP/them /,/, which/WDT/which is/VBZ/is just/RB/just the/DT/the some/DT/some of/IN/of the/DT/the frequencies/NNS/frequencies of/IN/of the/DT/the elements/NNS/elements in/IN/in side/NN/side each/NNP/each. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say f/NN/f 1/CD/1 prime/NN/prime f/NN/f 2/CD/2 prime/NN/prime so/IN/so on/IN/on f/NN/f k/NN/k prime/NNP/prime. so/RB/so /,/, f/NN/f i/PRP/i prime/VBP/prime is/VBZ/is the/DT/the sum/NN/sum of/IN/of frequencies/NNS/frequencies of/IN/of elements/NNS/elements in/IN/in t/NN/t i/PRP/i or/CC/or symbols/NNS/symbols or/CC/or words/NNP/words. so/RB/so /,/, just/RB/just sum/NN/sum of/IN/of all/DT/all the/DT/the frequencies/NNS/frequencies and/CC/and that/IN/that is/VBZ/is my/PRP$/my f/NN/f i/PRP/i prime/NNP/prime. now/RB/now /,/, i/PRP/i pick/VBP/pick two/CD/two of/IN/of minimum/JJ/minimum f/NN/f prime/NN/prime and/CC/and join/NN/join them/PRP/them together/RB/together and/CC/and make/VB/make a/DT/a new/JJ/new sub/NN/sub tree/NNP/tree. for/IN/for instance/NN/instance /,/, if/IN/if f/NN/f k/NN/k prime/NN/prime and/CC/and f/NN/f k/NN/k minus/NN/minus 1/CD/1 prime/JJ/prime where/WRB/where the/DT/the smallest/JJS/smallest once/NNP/once. then/RB/then /,/, i/PRP/i would/MD/would take/VB/take t/NN/t k/NN/k minus/NN/minus 1/CD/1 and/CC/and t/NN/t k/NN/k and/CC/and join/NN/join them/PRP/them together/NNP/together. the/DT/the others/NNS/others remain/VBP/remain as/RB/as they/PRP/they are/VBP/are t/RB/t k/NN/k minus/NN/minus 2/CD/2 and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is if/IN/if t/NN/t k/NN/k and/CC/and f/NN/f k/NN/k prime/NN/prime was/VBD/was the/DT/the smallest/JJS/smallest /,/, let/VB/let us/PRP/us say/VB/say and/CC/and f/NN/f k/NN/k minus/NN/minus 1/CD/1 prime/JJ/prime was/VBD/was the/DT/the next/JJ/next smallest/NNP/smallest. when/WRB/when /,/, in/IN/in that/DT/that iteration/NN/iteration i/PRP/i take/VBP/take this/DT/this as/IN/as input/NN/input and/CC/and i/PRP/i create/VBP/create this/NNP/this. so/RB/so /,/, number/NN/number of/IN/of tree/NN/tree is/VBZ/is as/IN/as decreased/VBN/decreased by/IN/by one/CD/one i/PRP/i have/VBP/have just/RB/just merge/JJ/merge these/DT/these two/CD/two sub/NN/sub trees/NNS/trees together/NNP/together. the/DT/the new/JJ/new frequency/NN/frequency of/IN/of this/DT/this will/MD/will be/VB/be just/RB/just the/DT/the sum/NN/sum of/IN/of the/DT/the frequencies/NNS/frequencies of/IN/of these/DT/these two/CD/two things/NNP/things. this/DT/this will/MD/will remain/VB/remain f/NN/f 1/CD/1 prime/NN/prime and/CC/and so/RB/so on/NNP/on. because/IN/because /,/, here/RB/here you/PRP/you have/VBP/have just/RB/just the/DT/the elements/NNS/elements of/IN/of these/DT/these two/CD/two just/RB/just get/VB/get union/NNP/union. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the generic/JJ/generic step/NN/step and/CC/and i/PRP/i put/VBD/put this/DT/this into/IN/into a/DT/a loop/NNP/loop. and/CC/and this/DT/this is/VBZ/is my/PRP$/my algorithm/NN/algorithm /,/, you/PRP/you can/MD/can see/VB/see that/IN/that the/DT/the algorithm/NN/algorithm terminates/VBZ/terminates ease/NN/ease to/TO/to see/NNP/see. because/IN/because /,/, initially/RB/initially start/VB/start with/IN/with each/DT/each leaf/NN/leaf /,/, each/DT/each element/NN/element as/IN/as a/DT/a sub/NN/sub tree/NNP/tree. so/RB/so /,/, these/DT/these will/MD/will be/VB/be the/DT/the leafs/NNS/leafs and/CC/and there/EX/there are/VBP/are n/NN/n of/IN/of them/PRP/them /,/, each/DT/each time/NN/time the/DT/the number/NN/number of/IN/of sub/NN/sub trees/NNS/trees decreases/NNS/decreases by/IN/by one/NNP/one. so/RB/so /,/, finally/RB/finally /,/, i/PRP/i will/MD/will just/RB/just have/VB/have one/CD/one sub/NN/sub tree/NN/tree /,/, this/DT/this will/MD/will be/VB/be my/PRP$/my binary/NN/binary tree/NN/tree /,/, this/DT/this will/MD/will be/VB/be a/DT/a the/DT/the binary/JJ/binary tree/NN/tree that/WDT/that i/PRP/i want/NNP/want. and/CC/and this/DT/this will/MD/will give/VB/give me/PRP/me the/DT/the prefix/NN/prefix free/JJ/free code/NN/code that/WDT/that i/PRP/i am/VBP/am looking/VBG/looking for/NNP/for. so/RB/so /,/, why/WRB/why does/VBZ/does this/DT/this algorithm/NN/algorithm work/NNP/work. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write a/DT/a proof/NN/proof of/IN/of correctness/NN/correctness and/CC/and again/RB/again it/PRP/it will/MD/will just/RB/just invoke/VB/invoke the/DT/the same/JJ/same exchange/NN/exchange principle/NN/principle /,/, that/IN/that done/NN/done to/TO/to write/VB/write a/DT/a proof/NNP/proof. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a proof/NNP/proof. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 16/CD/16 /CD/) so/RB/so /,/, what/WDT/what we/PRP/we would/MD/would like/VB/like to/TO/to argue/VB/argue is/VBZ/is that/IN/that /,/, at/IN/at each/DT/each stage/NN/stage see/VBP/see at/IN/at each/DT/each stage/NN/stage you/PRP/you have/VB/have /:/( /:/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 26/CD/26 /CD/) /CD/) these/DT/these sub/NN/sub trees/NNS/trees t/VBP/t 1/CD/1 /,/, t/NN/t 2/CD/2 up/IN/up to/TO/to t/VB/t k/NN/k will/MD/will the/DT/the proof/NN/proof statement/NN/statement /,/, that/IN/that we/PRP/we would/MD/would like/VB/like is/VBZ/is that/NNP/that. at/IN/at each/DT/each stage/NN/stage /,/, there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum tree/NN/tree which/WDT/which has/VBZ/has the/DT/the sub/NN/sub trees/NNS/trees /,/, that/IN/that the/DT/the algorithm/NN/algorithm constructs/VBZ/constructs as/IN/as sub/NN/sub trees/NNP/trees. so/RB/so /,/, what/WDT/what does/VBZ/does it/PRP/it mean/NNP/mean. so/RB/so /,/, if/IN/if the/DT/the algorithm/NN/algorithm for/IN/for instance/NN/instance here/RB/here if/IN/if the/DT/the algorithm/NN/algorithm had/VBD/had sub/NN/sub trees/NNS/trees /:/( /:/( refer/NN/refer time/NN/time /:/: 27/CD/27 /:/: 19/CD/19 /CD/) /CD/) t/NN/t 1/CD/1 t/NN/t 2/CD/2 up/IN/up to/TO/to t/VB/t k/NN/k /,/, there/EX/there must/MD/must be/VB/be an/DT/an optimum/NN/optimum tree/NN/tree which/WDT/which has/VBZ/has these/DT/these as/IN/as sub/NN/sub trees/NNP/trees. you/PRP/you do/VBP/do not/RB/not know/VB/know how/WRB/how these/DT/these are/VBP/are connected/VBN/connected /,/, but/CC/but the/DT/the optimum/NN/optimum must/MD/must have/VB/have these/DT/these as/IN/as sub/NN/sub trees/NNS/trees /,/, there/EX/there must/MD/must be/VB/be some/DT/some optimum/NN/optimum tree/NN/tree with/IN/with these/DT/these a/DT/a sub/NN/sub trees/NNP/trees. now/RB/now /,/, this/DT/this statement/NN/statement is/VBZ/is if/IN/if you/PRP/you prove/VBP/prove this/DT/this statement/NN/statement /,/, then/RB/then we/PRP/we are/VBP/are done/NNP/done. because/IN/because /,/, once/RB/once algorithm/NN/algorithm terminates/NNS/terminates we/PRP/we just/RB/just have/VBP/have one/CD/one tree/NNP/tree. and/CC/and we/PRP/we just/RB/just said/VBD/said that/IN/that an/DT/an optimum/NN/optimum must/MD/must have/VB/have this/DT/this as/IN/as a/DT/a sub/NN/sub tree/NN/tree /,/, which/WDT/which means/VBZ/means optimum/NN/optimum must/MD/must be/VB/be this/DT/this tree/NNP/tree. so/RB/so /,/, if/IN/if this/DT/this statement/NN/statement is/VBZ/is true/JJ/true for/IN/for all/DT/all stages/NNS/stages of/IN/of the/DT/the algorithm/NN/algorithm /,/, it/PRP/it should/MD/should be/VB/be true/JJ/true when/WRB/when the/DT/the algorithm/NN/algorithm terminates/NNP/terminates. in/IN/in which/WDT/which case/NN/case we/PRP/we have/VBP/have what/WP/what we/PRP/we want/VBP/want /,/, so/RB/so why/WRB/why is/VBZ/is this/DT/this true/NNP/true. so/RB/so /,/, again/RB/again the/DT/the proof/NN/proof you/PRP/you can/MD/can write/VB/write this/DT/this proof/NN/proof by/IN/by induction/NN/induction on/IN/on the/DT/the stages/NNP/stages. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to prove/VB/prove this/DT/this maybe/NN/maybe i/PRP/i should/MD/should shift/VB/shift this/DT/this here/NNP/here. so/RB/so /,/, proof/IN/proof by/IN/by induction/NN/induction on/IN/on stages/NNS/stages /,/, the/DT/the first/JJ/first stage/NN/stage at/IN/at the/DT/the beginning/NNP/beginning. so/RB/so /,/, the/DT/the base/NN/base case/NN/case well/RB/well it/PRP/it is/VBZ/is true/NNP/true. because/IN/because /,/, what/WP/what you/PRP/you have/VBP/have as/RB/as sub/VBN/sub trees/NNS/trees i/PRP/i just/RB/just the/DT/the leaves/NNS/leaves and/CC/and these/DT/these should/MD/should be/VB/be leaves/NNS/leaves even/RB/even in/IN/in an/DT/an optimum/NN/optimum tree/NNP/tree. the/DT/the base/NN/base case/NN/case you/PRP/you have/VB/have n/VBN/n elements/NNS/elements which/WDT/which are/VBP/are not/RB/not connected/VBN/connected to/TO/to anything/NNP/anything. and/CC/and this/DT/this is/VBZ/is true/JJ/true even/RB/even in/IN/in the/DT/the optimum/NN/optimum case/NNP/case. so/RB/so /,/, the/DT/the base/NN/base case/NN/case is/NNP/is... so/RB/so /,/, what/WDT/what is/VBZ/is what/WP/what about/IN/about the/DT/the inductive/JJ/inductive step/NN/step /,/, well/RB/well what/WP/what happened/VBN/happened in/IN/in the/DT/the inductive/JJ/inductive step/NNP/step. so/RB/so /,/, here/RB/here inductive/JJ/inductive step/NNP/step. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 13/CD/13 /CD/) well/RB/well /,/, you/PRP/you started/VBD/started out/RP/out with/IN/with trees/NNS/trees let/VBP/let us/PRP/us say/VBP/say t/NN/t 1/CD/1 up/IN/up to/TO/to t/VB/t k/NN/k and/CC/and you/PRP/you ended/VBD/ended up/RP/up with/IN/with t/NN/t 1/CD/1 up/IN/up to/TO/to t/VB/t k/NN/k minus/NN/minus 2/CD/2. two/CD/two of/IN/of them/PRP/them let/VB/let us/PRP/us say/VB/say the/DT/the last/JJ/last two/CD/two you/PRP/you join/VBP/join /,/, this/DT/this is/VBZ/is t/NN/t k/NN/k minus/NN/minus 1/CD/1 and/CC/and t/NN/t k/NN/k this/DT/this is/VBZ/is what/WP/what the/DT/the algorithm/NN/algorithm /:/( /:/( refer/NN/refer time/NN/time /:/: 29/CD/29 /:/: 37/CD/37 /CD/) /CD/) /./. you/PRP/you know/VBP/know by/IN/by induction/NN/induction /,/, that/IN/that there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum which/WDT/which at/IN/at these/DT/these as/IN/as sub/NN/sub trees/NNP/trees. there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum tree/NN/tree /,/, which/WDT/which at/IN/at these/DT/these as/IN/as sub/NN/sub tree/NNP/tree. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this optimum/NNP/optimum. so/RB/so /,/, by/IN/by the/DT/the inductive/JJ/inductive hypothesis/NN/hypothesis /,/, there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum tree/NN/tree with/IN/with t/NN/t 1/CD/1 up/IN/up to/TO/to t/VB/t k/NN/k as/IN/as sub/NN/sub trees/NNP/trees. now/RB/now /,/, we/PRP/we would/MD/would like/VB/like to/TO/to argue/VB/argue that/IN/that there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum /,/, which/WDT/which as/IN/as all/DT/all these/DT/these as/IN/as sub/NN/sub trees/NNS/trees /,/, voice/NN/voice are/VBP/are true/JJ/true well/RB/well the/DT/the reason/NN/reason is/VBZ/is this/NNP/this. let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this optimum/NN/optimum tree/NN/tree /,/, there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum tree/NN/tree let/NN/let us/PRP/us say/VBP/say call/JJ/call it/PRP/it t/VBD/t let/VB/let us/PRP/us look/VB/look at/IN/at t/NNP/t. now/RB/now /,/, among/IN/among these/DT/these ?/./? so/RB/so /,/, how/WRB/how this/DT/this look/NN/look like/NNP/like. so/RB/so /,/, it/PRP/it is/VBZ/is something/VBG/something like/IN/like this/DT/this /,/, then/RB/then there/EX/there is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree maybe/RB/maybe goes/VBZ/goes as/IN/as a/DT/a sub/NN/sub tree/NN/tree somewhere/RB/somewhere around/IN/around this/DT/this is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree /,/, then/RB/then the/DT/the branches/NNS/branches of/IN/of line/NN/line this/DT/this maybe/NN/maybe there/RB/there is/VBZ/is a/DT/a sub/NN/sub tree/NN/tree here/RB/here and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, there/EX/there are/VBP/are these/DT/these sub/NN/sub trees/NNS/trees t/VBP/t 1/CD/1 t/NN/t 2/CD/2 up/IN/up to/TO/to t/VB/t k/NN/k sitting/VBG/sitting here/NNP/here. so/RB/so /,/, look/VBP/look at/IN/at the/DT/the lowest/JJS/lowest sub/NN/sub trees/NNP/trees. i/PRP/i clean/VBP/clean that/IN/that i/PRP/i can/MD/can put/VB/put t/NN/t k/NN/k here/RB/here /,/, the/DT/the lowest/JJS/lowest sub/NN/sub tree/NN/tree must/MD/must contain/VB/contain t/NN/t k/NNP/k. now/RB/now /,/, why/WRB/why is/VBZ/is that/IN/that is/VBZ/is so/RB/so supposing/VBG/supposing it/PRP/it is/VBZ/is not/RB/not supposing/VBG/supposing something/NN/something else/RB/else it/PRP/it is/VBZ/is here/NNP/here. what/WP/what i/PRP/i do/VBP/do is/VBZ/is some/DT/some t/NN/t i/PRP/i ?/./? what/WP/what i/PRP/i do/VBP/do is/VBZ/is exchange/NN/exchange /,/, supposing/VBG/supposing let/NN/let us/PRP/us say/VBP/say t/NN/t k/NN/k for/IN/for here/RB/here and/CC/and you/PRP/you know/VBP/know t/NN/t i/PRP/i for/IN/for here/NNP/here. then/RB/then /,/, i/PRP/i exchange/VBP/exchange t/JJ/t i/PRP/i and/CC/and t/VB/t k/NN/k i/PRP/i do/VBP/do this/DT/this sub/NN/sub tree/NN/tree exchange/NNP/exchange. and/CC/and by/IN/by the/DT/the previous/JJ/previous argument/NN/argument that/WDT/that we/PRP/we did/VBD/did /,/, we/PRP/we saw/VBD/saw that/IN/that the/DT/the cost/NN/cost decreased/NNP/decreased. when/WRB/when we/PRP/we did/VBD/did the/DT/the exchange/NN/exchange trick/NN/trick and/CC/and we/PRP/we did/VBD/did the/DT/the calculation/NN/calculation /,/, we/PRP/we saw/VBD/saw that/IN/that the/DT/the cost/NN/cost actually/RB/actually decreased/NNP/decreased. so/RB/so /,/, this/DT/this should/MD/should not/RB/not be/VB/be possible/JJ/possible /,/, in/IN/in which/WDT/which means/NNS/means in/IN/in the/DT/the optimum/NN/optimum i/PRP/i should/MD/should always/RB/always have/VB/have t/VBN/t k/NN/k sitting/VBG/sitting at/IN/at the/DT/the bottom/NNP/bottom. similarly/RB/similarly /,/, t/NN/t k/NN/k minus/NN/minus 1/CD/1 must/MD/must also/RB/also these/DT/these sitting/VBG/sitting at/IN/at the/DT/the bottom/NN/bottom /,/, which/WDT/which means/VBZ/means the/DT/the height/NN/height must/MD/must be/VB/be again/RB/again maximum/NNP/maximum. so/RB/so /,/, what/WDT/what i/PRP/i can/MD/can do/VB/do is/VBZ/is take/VB/take the/DT/the bottom/NN/bottom to/TO/to nodes/NNS/nodes /,/, take/VBP/take the/DT/the bottom/NN/bottom to/TO/to nodes/NNP/nodes. and/CC/and i/PRP/i can/MD/can always/RB/always exchange/VB/exchange whatever/NN/whatever sits/NNS/sits here/RB/here /,/, i/PRP/i can/MD/can exchange/VB/exchange it/PRP/it with/IN/with this/DT/this should/MD/should be/VB/be t/VBN/t k/NN/k and/CC/and this/DT/this as/IN/as t/NN/t k/NN/k minus/NN/minus 1/CD/1. remember/NN/remember /,/, that/IN/that these/DT/these frequencies/NNS/frequencies are/VBP/are the/DT/the smallest/JJS/smallest t/NN/t k/NN/k was/VBD/was the/DT/the smallest/JJS/smallest and/CC/and this/DT/this was/VBD/was the/DT/the second/JJ/second smallest/NNP/smallest. so/RB/so /,/, i/PRP/i can/MD/can always/RB/always exchange/VB/exchange any/DT/any of/IN/of those/DT/those trees/NNS/trees with/IN/with these/DT/these two/CD/two /,/, these/DT/these are/VBP/are the/DT/the bottom/NN/bottom most/NNP/most. and/CC/and i/PRP/i will/MD/will always/RB/always get/VB/get cost/NN/cost which/WDT/which is/VBZ/is less/NNP/less. so/RB/so /,/, i/PRP/i can/MD/can assume/VB/assume that/IN/that there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum solution/NN/solution with/IN/with t/NN/t k/NN/k and/CC/and t/NN/t k/NN/k minus/NN/minus 1/CD/1 and/CC/and the/DT/the bottom/NNP/bottom. well/RB/well /,/, now/RB/now i/PRP/i am/VBP/am done/NN/done because/IN/because this/DT/this structure/NN/structure i/PRP/i just/RB/just pull/VBP/pull out/RP/out from/IN/from here/NNP/here. this/DT/this is/VBZ/is t/NN/t k/NN/k that/WDT/that t/NN/t k/VBP/k minus/NN/minus 1/CD/1 and/CC/and here/RB/here is/VBZ/is the/DT/the other/JJ/other nodes/NNP/nodes. so/IN/so /,/, this/DT/this structure/NN/structure i/PRP/i just/RB/just pull/VBP/pull out/RP/out from/IN/from here/RB/here good/NNP/good. so/RB/so /,/, there/EX/there is/VBZ/is an/DT/an optimum/NN/optimum tree/NN/tree which/WDT/which as/IN/as t/NN/t 1/CD/1 t/NN/t k/NN/k minus/NN/minus 1/CD/1 and/CC/and this/DT/this as/IN/as sub/NN/sub trees/NNP/trees. and/CC/and we/PRP/we are/VBP/are we/PRP/we are/VBP/are actually/RB/actually done/NNP/done. so/RB/so /,/, finish/JJ/finish the/DT/the proof/NN/proof that/IN/that this/DT/this algorithm/NN/algorithm is/VBZ/is optimum/NNP/optimum. so/RB/so /,/, each/DT/each time/NN/time you/PRP/you look/VBP/look at/IN/at you/PRP/you merge/VBP/merge to/TO/to trees/NNS/trees /,/, which/WDT/which i/PRP/i have/VBP/have the/DT/the least/JJS/least weight/NN/weight /,/, the/DT/the minimum/JJ/minimum weights/NNS/weights of/IN/of tree/NN/tree and/CC/and the/DT/the second/JJ/second minimum/NNP/minimum. and/CC/and you/PRP/you create/VB/create the/DT/the new/JJ/new tree/NN/tree by/IN/by merging/NN/merging these/DT/these two/CD/two into/IN/into a/DT/a binary/JJ/binary tree/NNP/tree. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the algorithm/NN/algorithm and/CC/and networks/NNS/networks /,/, this/DT/this was/VBD/was done/VBN/done by/IN/by huffman/NN/huffman and/CC/and it/PRP/it is/VBZ/is called/VBN/called this/DT/this coding/NN/coding is/VBZ/is called/VBN/called huffman/NN/huffman coding/NNP/coding. so/RB/so /,/, let/VB/let us/PRP/us summarize/VB/summarize our/PRP$/our discussion/NN/discussion of/IN/of greedy/JJ/greedy algorithms/NNP/algorithms. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 42/CD/42 /CD/) well/RB/well /,/, the/DT/the main/JJ/main thing/NN/thing was/VBD/was we/PRP/we build/VBP/build the/DT/the solution/NN/solution output/NN/output /,/, solution/NN/solution piece/NN/piece by/IN/by piece/NN/piece each/DT/each time/NN/time we/PRP/we somehow/VBP/somehow get/NN/get the/DT/the right/NN/right piece/NN/piece two/CD/two imagine/NN/imagine it/PRP/it is/VBZ/is a/DT/a kickshaw/NNP/kickshaw. and/CC/and you/PRP/you know/VBP/know pulling/VBG/pulling out/RP/out pieces/NNS/pieces to/TO/to fit/NNP/fit. and/CC/and each/DT/each time/NN/time put/VBN/put the/DT/the right/NN/right piece/NN/piece and/CC/and place/NN/place /,/, that/IN/that is/VBZ/is the/DT/the crucial/JJ/crucial thing/NN/thing to/TO/to help/VB/help us/PRP/us we/PRP/we used/VBD/used what/WP/what is/VBZ/is called/VBN/called exchange/NN/exchange trick/NNP/trick. essentially/RB/essentially start/VB/start with/IN/with any/DT/any solution/NN/solution and/CC/and change/NN/change solution/NN/solution to/TO/to obtain/VB/obtain better/JJR/better one/NNP/one. this/DT/this is/VBZ/is just/RB/just something/NN/something that/WDT/that you/PRP/you do/VBP/do to/TO/to figure/VB/figure out/RP/out /,/, what/WP/what your/PRP$/your algorithm/NN/algorithm should/MD/should be/VB/be doing/NNP/doing. this/DT/this is/VBZ/is not/RB/not what/WP/what exactly/RB/exactly the/DT/the algorithm/NN/algorithm does/VBZ/does /,/, this/DT/this is/VBZ/is just/RB/just you/PRP/you help/VB/help you/PRP/you figure/VB/figure out/RP/out what/WP/what the/DT/the algorithm/NN/algorithm does/VBZ/does /,/, which/WDT/which is/VBZ/is you/PRP/you start/VBP/start with/IN/with any/DT/any solution/NNP/solution. now/RB/now /,/, we/PRP/we start/VBP/start of/IN/of /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 34/CD/34 /:/: 50/CD/50 /CD/) /CD/) the/DT/the solution/NN/solution a/DT/a bit/NN/bit and/CC/and see/VB/see what/WP/what happens/NNP/happens. and/CC/and typically/RB/typically it/PRP/it is/VBZ/is exchanging/VBG/exchanging part/NN/part of/IN/of the/DT/the solution/NN/solution for/IN/for something/NN/something else/NNP/else. you/PRP/you takes/VBZ/takes something/NN/something out/IN/out of/IN/of the/DT/the solution/NN/solution puts/VBZ/puts something/NN/something in/IN/in /,/, you/PRP/you do/VBP/do a/DT/a better/JJR/better exchange/NNP/exchange. then/RB/then /,/, you/PRP/you see/VBP/see what/WP/what happens/NNS/happens to/TO/to the/DT/the profit/NN/profit or/CC/or the/DT/the objective/NN/objective function/NNP/function. if/IN/if it/PRP/it is/VBZ/is increases/NNS/increases /,/, if/IN/if it/PRP/it is/VBZ/is gets/VBZ/gets better/JJR/better than/IN/than some/DT/some tells/NNS/tells you/PRP/you gives/VBZ/gives your/PRP$/your /NN/( /:/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 14/CD/14 /CD/) /CD/) how/WRB/how to/TO/to proceed/NNP/proceed. so/RB/so /,/, this/DT/this is/VBZ/is about/IN/about greedy/JJ/greedy algorithms/NNS/algorithms i/PRP/i would/MD/would recommend/VB/recommend /,/, that/IN/that you/PRP/you study/VBP/study metroids/NNS/metroids /,/, theory/NN/theory of/IN/of methorids/NNS/methorids and/CC/and linear/JJ/linear programming/NN/programming /,/, especially/RB/especially the/DT/the so/RB/so called/VBN/called primary/JJ/primary dual/JJ/dual method/NN/method /,/, which/WDT/which is/VBZ/is available/JJ/available in/IN/in most/JJS/most text/JJ/text books/NNS/books and/CC/and linear/JJ/linear programming/NNP/programming. and/CC/and these/DT/these two/CD/two may/MD/may give/VB/give you/PRP/you a/DT/a better/JJR/better sort/NN/sort of/IN/of feeling/VBG/feeling for/IN/for greedy/JJ/greedy algorithms/NNS/algorithms /,/, in/IN/in how/WRB/how you/PRP/you know/VBP/know the/DT/the strategies/NNS/strategies work/NNP/work. good/JJ/good luck/NNP/luck. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 14/CD/14 pattern/NN/pattern matching/VBG/matching ?/./? i/PRP/i we/PRP/we next/JJ/next look/NN/look at/IN/at the/DT/the problem/NN/problem called/VBD/called pattern/NN/pattern matching/NNP/matching. this/DT/this is/VBZ/is something/NN/something i/PRP/i am/VBP/am sure/JJ/sure you/PRP/you used/VBD/used before/NNP/before. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 02/CD/02 /CD/) so/RB/so /,/, the/DT/the problem/NN/problem is/VBZ/is this/DT/this you/PRP/you given/VBP/given as/IN/as input/NN/input /,/, text/NN/text and/CC/and pattern/NNP/pattern. and/CC/and you/PRP/you want/VBP/want to/TO/to find/VB/find /,/, if/IN/if you/PRP/you going/VBG/going to/TO/to determine/VB/determine if/IN/if this/DT/this pattern/NN/pattern occurs/VBZ/occurs in/IN/in the/DT/the text/NN/text and/CC/and where/NNP/where. output/NN/output is/VBZ/is find/JJ/find an/DT/an occurrence/NN/occurrence of/IN/of the/DT/the pattern/NN/pattern in/IN/in the/DT/the text/NNP/text. you/PRP/you could/MD/could changes/NNS/changes to/TO/to say/VB/say find/IN/find all/DT/all occurrences/NNS/occurrences /,/, it/PRP/it really/RB/really does/VBZ/does not/RB/not matter/VB/matter for/NNP/for. so/RB/so /,/, the/DT/the time/NN/time being/VBG/being we/PRP/we concentrate/VBP/concentrate on/IN/on this/DT/this /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find and/CC/and occurrence/NN/occurrence of/IN/of this/DT/this pattern/NN/pattern in/IN/in the/DT/the given/VBN/given text/NNP/text. grep/NN/grep is/VBZ/is something/NN/something that/IN/that does/VBZ/does it/NNP/it. so/RB/so /,/, i/PRP/i guess/VBP/guess you/PRP/you are/VBP/are used/VBN/used uniques/NNS/uniques /,/, we/PRP/we use/VBP/use uniques/NNP/uniques. then/RB/then /,/, the/DT/the command/NN/command that/IN/that does/VBZ/does is/VBZ/is it/PRP/it grep/VB/grep /,/, you/PRP/you can/MD/can grep/VB/grep for/IN/for a/DT/a string/NN/string in/IN/in a/DT/a file/NNP/file. so/RB/so /,/, intake/VB/intake of/IN/of file/JJ/file and/CC/and the/DT/the string/NN/string as/IN/as input/NNP/input. and/CC/and look/VB/look for/IN/for this/DT/this string/NN/string in/IN/in this/DT/this file/NN/file and/CC/and i/PRP/i am/VBP/am sure/JJ/sure every/DT/every other/JJ/other operating/NN/operating system/NN/system provides/VBZ/provides this/DT/this facility/NN/facility /,/, it/PRP/it is/VBZ/is a/DT/a very/RB/very basic/JJ/basic sort/NN/sort of/IN/of facility/NN/facility /,/, which/WDT/which is/VBZ/is provided/VBN/provided and/CC/and which/WDT/which is/VBZ/is used/VBN/used quite/RB/quite extensively/NNP/extensively. so/RB/so /,/, what/WDT/what we/PRP/we going/VBG/going to/TO/to do/VB/do is/VBZ/is design/NN/design and/CC/and algorithm/NN/algorithm for/IN/for this/DT/this problem/NN/problem /,/, which/WDT/which is/VBZ/is given/VBN/given a/DT/a text/NN/text and/CC/and pattern/NN/pattern /,/, find/VBP/find an/DT/an occurrence/NN/occurrence of/IN/of this/DT/this pattern/NN/pattern in/IN/in the/DT/the given/VBN/given text/NNP/text. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the first/JJ/first thing/NN/thing /,/, first/JJ/first algorithm/NN/algorithm that/WDT/that you/PRP/you would/MD/would write/NNP/write. well/RB/well /,/, take/VBP/take the/DT/the pattern/NN/pattern and/CC/and you/PRP/you sort/NN/sort of/IN/of look/NN/look for/IN/for the/DT/the pattern/NN/pattern at/IN/at every/DT/every possible/JJ/possible position/NN/position in/IN/in the/DT/the text/NNP/text. so/RB/so /,/, the/DT/the text/NN/text is/VBZ/is say/VB/say n/NN/n characters/NNS/characters long/RB/long /,/, you/PRP/you started/VBD/started the/DT/the ith/NN/ith character/NN/character in/IN/in check/NN/check whether/IN/whether /,/, the/DT/the pattern/NNP/pattern. there/RB/there is/VBZ/is an/DT/an occurrence/NN/occurrence of/IN/of pattern/NN/pattern starting/VBG/starting of/IN/of the/DT/the ith/NN/ith character/NN/character do/VBP/do this/DT/this for/IN/for every/DT/every i/NNP/i. so/RB/so /,/, for/IN/for every/DT/every possible/JJ/possible position/NN/position /,/, you/PRP/you check/VBP/check whether/IN/whether the/DT/the pattern/NN/pattern does/NNP/does. in/IN/in fact/NN/fact /,/, occur/VBP/occur that/IN/that position/NN/position you/PRP/you could/MD/could do/VB/do this/DT/this in/IN/in a/DT/a loop/NNP/loop. so/RB/so /,/, you/PRP/you can/MD/can sort/VB/sort of/IN/of scan/JJ/scan the/DT/the text/NN/text /,/, character/NN/character by/IN/by character/NN/character starting/VBG/starting at/IN/at you/PRP/you know/VBP/know from/IN/from left/VBN/left to/TO/to right/RB/right say/NNP/say. and/CC/and for/IN/for each/DT/each character/NN/character from/IN/from this/DT/this character/NN/character onwards/NNS/onwards is/VBZ/is there/RB/there is/VBZ/is a/DT/a pattern/NN/pattern exist/NNP/exist. so/RB/so /,/, you/PRP/you check/VBP/check for/IN/for this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 53/CD/53 /CD/) so/RB/so /,/, symbolically/RB/symbolically let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is the/DT/the text/NN/text /,/, well/RB/well that/IN/that is/VBZ/is the/DT/the pattern/NN/pattern i/PRP/i start/VBP/start matching/VBG/matching character/NN/character by/IN/by character/NN/character here/NNP/here. if/IN/if there/EX/there is/VBZ/is a/DT/a complete/JJ/complete match/NN/match /,/, then/RB/then i/PRP/i know/VBP/know that/IN/that the/DT/the pattern/NN/pattern occurs/NNS/occurs here/NNP/here. if/IN/if it/PRP/it does/VBZ/does not/RB/not /,/, let/VB/let us/PRP/us say/VB/say there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch somewhere/WRB/somewhere here/RB/here /,/, then/RB/then i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by one/CD/one /,/, one/CD/one character/NN/character to/TO/to the/DT/the right/NNP/right. and/CC/and now/RB/now i/PRP/i start/VBP/start comparing/VBG/comparing from/IN/from this/DT/this second/JJ/second character/NN/character onwards/NNP/onwards. i/PRP/i check/VBP/check whether/IN/whether the/DT/the second/JJ/second character/NN/character /,/, that/IN/that text/NN/text equals/NNS/equals the/DT/the first/JJ/first character/NN/character the/DT/the pattern/NN/pattern etcetera/NNP/etcetera. so/RB/so /,/, i/PRP/i check/VBP/check whether/IN/whether the/DT/the patters/NNS/patters occurs/VBZ/occurs here/RB/here /,/, if/IN/if it/PRP/it does/VBZ/does output/NNP/output. if/IN/if it/PRP/it is/VBZ/is does/VBZ/does not/RB/not i/PRP/i again/RB/again shift/JJ/shift this/DT/this pattern/NN/pattern by/IN/by one/CD/one more/JJR/more and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, each/DT/each time/NN/time i/PRP/i sort/VBP/sort of/IN/of shift/NN/shift the/DT/the pattern/NN/pattern /,/, along/IN/along the/DT/the text/NNP/text. and/CC/and well/RB/well when/WRB/when the/DT/the pattern/NN/pattern /,/, when/WRB/when the/DT/the sort/NN/sort of/IN/of pattern/NN/pattern is/VBZ/is at/IN/at some/DT/some place/NN/place let/NN/let us/PRP/us say/VBP/say here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the pattern/NN/pattern in/IN/in that/DT/that is/VBZ/is the/DT/the text/NN/text /,/, i/PRP/i just/RB/just check/VBP/check whether/IN/whether the/DT/the match/NN/match character/NN/character to/TO/to character/NNP/character. i/PRP/i just/RB/just check/VBP/check that/IN/that these/DT/these two/CD/two character/NN/character as/IN/as same/NNP/same. if/IN/if all/DT/all of/IN/of them/PRP/them are/VBP/are the/DT/the same/JJ/same /,/, then/RB/then i/PRP/i actually/RB/actually found/VBD/found the/DT/the pattern/NN/pattern here/RB/here of/IN/of the/DT/the text/NN/text and/CC/and i/PRP/i can/MD/can output/VB/output this/DT/this index/NNP/index. this/DT/this is/VBZ/is where/WRB/where the/DT/the pattern/NN/pattern occurs/NNP/occurs. so/RB/so /,/, this/DT/this is/VBZ/is sort/NN/sort of/IN/of a/DT/a /NN/( /:/( refer/NN/refer time/NN/time /:/: 05/CD/05 /:/: 19/CD/19 /CD/) /CD/) and/CC/and the/DT/the sort/NN/sort of/IN/of the/DT/the first/JJ/first thing/NN/thing that/WDT/that you/PRP/you would/MD/would do/VB/do /,/, first/JJ/first algorithm/NN/algorithm that/WDT/that you/PRP/you would/MD/would come/VB/come up/RP/up with/IN/with to/TO/to search/NN/search for/IN/for a/DT/a pattern/NN/pattern in/IN/in text/NNP/text. how/WRB/how much/JJ/much time/NN/time i/PRP/i guess/VBP/guess is/VBZ/is the/DT/the question/NN/question /,/, that/IN/that we/PRP/we asking/VBG/asking throughout/IN/throughout this/DT/this course/NN/course and/CC/and we/PRP/we will/MD/will ask/VB/ask again/NNP/again. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it takes/VBZ/takes /,/, first/RB/first you/PRP/you this/DT/this can/MD/can be/VB/be sort/NN/sort of/IN/of return/NN/return in/IN/in a/DT/a i/NN/i mean/NN/mean i/PRP/i hope/VBP/hope all/DT/all of/IN/of you/PRP/you can/MD/can write/VB/write code/NN/code for/IN/for this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 0547/CD/0547 /CD/) /CD/) algorithm/NN/algorithm is/VBZ/is putted/VBN/putted in/IN/in the/DT/the loop/NNP/loop. and/CC/and you/PRP/you sort/NN/sort of/IN/of you/PRP/you know/VBP/know move/NN/move the/DT/the pattern/NN/pattern across/IN/across the/DT/the text/NNP/text. so/RB/so /,/, this/DT/this is/VBZ/is should/MD/should be/VB/be able/JJ/able to/TO/to do/VB/do and/CC/and if/IN/if you/PRP/you doubtful/VBP/doubtful i/PRP/i would/MD/would suggest/VB/suggest you/PRP/you /,/, you/PRP/you just/RB/just try/VBP/try this/DT/this before/IN/before we/PRP/we proceed/VBP/proceed further/NNP/further. then/RB/then /,/, we/PRP/we come/VBP/come back/RB/back to/TO/to this/DT/this question/NN/question how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/NNP/take. well/RB/well /,/, you/PRP/you compare/VBP/compare let/VB/let us/PRP/us say/VB/say that/IN/that of/IN/of the/DT/the size/NN/size of/IN/of the/DT/the text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 19/CD/19 /CD/) let/NN/let us/PRP/us say/VBP/say the/DT/the text/NN/text as/IN/as n/NN/n characters/NNS/characters and/CC/and the/DT/the pattern/NN/pattern as/IN/as m/NN/m characters/NNS/characters /,/, size/VBP/size of/IN/of the/DT/the pattern/NN/pattern is/VBZ/is m/NN/m /,/, size/NN/size of/IN/of the/DT/the text/NN/text is/VBZ/is n/NNP/n. then/RB/then /,/, for/IN/for each/DT/each starting/VBG/starting point/NN/point in/IN/in the/DT/the text/NN/text we/PRP/we search/VBP/search for/IN/for the/DT/the pattern/NNP/pattern. so/RB/so /,/, in/IN/in the/DT/the loop/NN/loop there/RB/there are/VBP/are i/PRP/i have/VBP/have to/TO/to check/VB/check for/IN/for starting/VBG/starting with/IN/with n/NN/n characters/NNP/characters. and/CC/and each/DT/each time/NN/time and/CC/and the/DT/the worst/JJS/worst case/NN/case i/PRP/i may/MD/may make/VB/make m/NN/m comparisons/NNP/comparisons. so/RB/so /,/, the/DT/the total/JJ/total sort/NN/sort of/IN/of time/NN/time is/VBZ/is o/RB/o m/NN/m n/NN/n /,/, this/DT/this is/VBZ/is the/DT/the total/JJ/total time/NNP/time. this/DT/this should/MD/should be/VB/be clear/JJ/clear /,/, because/IN/because for/IN/for each/DT/each of/IN/of these/DT/these n/NN/n characters/NNS/characters /:/( /:/( refer/NN/refer time/NN/time /:/: 07/CD/07 /:/: 11/CD/11 /CD/) /CD/) /./. so/RB/so /,/, i/PRP/i when/WRB/when i/PRP/i start/VBP/start comparing/VBG/comparing from/IN/from here/RB/here i/PRP/i could/MD/could go/VB/go you/PRP/you know/VB/know most/JJS/most of/IN/of the/DT/the pattern/NN/pattern /,/, i/PRP/i could/MD/could sort/VB/sort of/IN/of go/NN/go down/IN/down most/JJS/most of/IN/of the/DT/the way/NN/way and/CC/and then/RB/then pattern/JJ/pattern discover/NN/discover a/DT/a mismatch/NNP/mismatch. in/IN/in which/WDT/which case/NN/case /,/, you/PRP/you know/VBP/know the/DT/the total/JJ/total time/NN/time taken/VBN/taken is/VBZ/is o/RB/o m/NN/m for/IN/for each/DT/each of/IN/of these/DT/these indexes/NNS/indexes and/CC/and there/EX/there are/VBP/are o/RB/o n/JJ/n indexes/NNP/indexes. so/RB/so /,/, well/RB/well the/DT/the total/JJ/total time/NN/time is/VBZ/is order/NN/order m/NN/m n/NN/n or/CC/or objective/JJ/objective is/VBZ/is to/TO/to can/MD/can we/VB/we do/VBP/do faster/NNP/faster. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the question/NN/question that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to address/NNP/address. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will do/VB/do faster/NNP/faster. so/RB/so /,/, by/IN/by the/DT/the time/NN/time this/DT/this lecture/NN/lecture ends/NNP/ends. you/PRP/you see/VBP/see that/IN/that we/PRP/we can/MD/can do/VB/do much/RB/much faster/JJR/faster than/IN/than o/NN/o m/NN/m n/NN/n /,/, that/IN/that is/VBZ/is you/PRP/you have/VBP/have written/NNP/written. to/TO/to see/VB/see how/WRB/how we/PRP/we can/MD/can how/VB/how do/VB/do we/PRP/we go/VB/go about/IN/about doing/VBG/doing this/DT/this /,/, the/DT/the first/JJ/first thing/NN/thing do/VBP/do is/VBZ/is to/TO/to check/VB/check out/RP/out the/DT/the few/JJ/few examples/NNS/examples /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we will/MD/will do/VB/do. so/RB/so /,/, we/PRP/we will/MD/will take/VB/take some/DT/some patterns/NNS/patterns /,/, some/DT/some simple/JJ/simple pattern/NN/pattern we/PRP/we will/MD/will see/VB/see how/WRB/how would/MD/would once/RB/once search/VB/search for/IN/for this/DT/this pattern/NN/pattern in/IN/in a/DT/a given/VBN/given text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 26/CD/26 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say so/RB/so here/RB/here sample/JJ/sample 1/CD/1. so/RB/so /,/, supposing/VBG/supposing my/PRP$/my pattern/NN/pattern is/VBZ/is a/DT/a b/NN/b to/TO/to the/DT/the k/NN/k /,/, this/DT/this means/VBZ/means it/PRP/it is/VBZ/is a/DT/a b/NN/b b/NN/b b/NN/b there/EX/there are/VBP/are k/NN/k occurrences/NNS/occurrences of/IN/of this/NNP/this. you/PRP/you can/MD/can take/VB/take k/NN/k to/TO/to be/VB/be 20/CD/20 for/IN/for instance/NN/instance /,/, real/JJ/real exact/NN/exact value/NN/value of/IN/of k/NN/k does/VBZ/does not/RB/not matter/NNP/matter. but/CC/but /,/, the/DT/the pattern/NN/pattern looks/VBZ/looks like/IN/like this/DT/this and/CC/and your/PRP$/your searching/NN/searching for/IN/for this/DT/this pattern/NN/pattern in/IN/in a/DT/a text/NNP/text. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just see/VB/see what/WP/what happens/NNS/happens here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is the/DT/the text/NN/text and/CC/and you/PRP/you started/VBD/started searching/VBG/searching from/IN/from this/DT/this point/NN/point onwards/NNP/onwards. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the pattern/NN/pattern you/PRP/you sorted/VBD/sorted searching/VBG/searching from/IN/from here/RB/here this/DT/this is/VBZ/is a/DT/a let/NN/let us/PRP/us say/NNP/say. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a match/NN/match /,/, then/RB/then you/PRP/you sort/NN/sort of/IN/of check/NN/check maybe/RB/maybe /,/, this/DT/this is/VBZ/is also/RB/also a/DT/a match/NNP/match. you/PRP/you go/VBP/go down/RP/down you/PRP/you know/VBP/know of/IN/of few/JJ/few characters/NNS/characters their/PRP$/their own/JJ/own matches/NNS/matches and/CC/and then/RB/then there/RB/there is/VBZ/is a/DT/a mismatch/NNP/mismatch. so/RB/so /,/, here/RB/here i/PRP/i have/VBP/have a/DT/a mismatch/NN/mismatch /,/, before/IN/before the/DT/the pattern/NN/pattern ends/VBZ/ends /,/, which/WDT/which is/VBZ/is the/DT/the pattern/NN/pattern ends/VBZ/ends here/NNP/here. so/RB/so /,/, somewhere/EX/somewhere here/RB/here is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, which/WDT/which means/VBZ/means this/DT/this is/VBZ/is not/RB/not a/DT/a b/NN/b i/PRP/i know/VBP/know that/IN/that this/DT/this is/VBZ/is not/RB/not a/DT/a b/NNP/b. now/RB/now /,/, what/WDT/what can/MD/can we/PRP/we do/VBP/do well/RB/well the/DT/the /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 09/CD/09 /:/: 55/CD/55 /CD/) /CD/) algorithm/NN/algorithm you/PRP/you know/VBP/know what/WP/what /-NONE-/( /VBP/( refer/NN/refer time/NN/time /:/: 09/CD/09 /:/: 57/CD/57 /CD/) /CD/) algorithm/NN/algorithm have/VBP/have done/VBN/done /,/, it/PRP/it will/MD/will have/VB/have shifted/VBN/shifted this/DT/this pattern/NN/pattern by/IN/by one/CD/one character/NNP/character. and/CC/and then/RB/then /,/, started/VBD/started comparing/VBG/comparing /,/, this/DT/this a/DT/a would/MD/would have/VB/have been/VBN/been compared/VBN/compared again/RB/again this/DT/this b/NNP/b. you/PRP/you would/MD/would have/VB/have immediately/RB/immediately got/VBN/got a/DT/a mismatch/NN/mismatch /,/, then/RB/then again/RB/again go/VB/go down/RB/down one/CD/one more/JJR/more you/PRP/you would/MD/would have/VB/have a/DT/a again/RB/again have/VBP/have a/DT/a mismatch/NNP/mismatch. because/IN/because /,/, well/RB/well all/DT/all of/IN/of these/DT/these are/VBP/are b/NN/b ?/./? s/NNS/s up/IN/up to/TO/to here/RB/here /,/, because/IN/because the/DT/the pattern/NN/pattern is/VBZ/is match/NNP/match. so/RB/so /,/, for/IN/for all/PDT/all of/IN/of these/DT/these are/VBP/are b/NN/b 's/NNP/'s. in/IN/in fact/NN/fact so/IN/so all/DT/all these/DT/these when/WRB/when i/PRP/i start/VBP/start shifting/VBG/shifting /,/, all/DT/all the/DT/the initial/JJ/initial shifts/NNS/shifts are/VBP/are useless/RB/useless in/IN/in a/DT/a sense/NNP/sense. because/IN/because /,/, when/WRB/when i/PRP/i shift/VBP/shift by/IN/by let/NN/let us/PRP/us say/VBP/say this/DT/this amount/NN/amount up/RP/up to/TO/to this/NNP/this. i/PRP/i know/VBP/know this/DT/this a/DT/a is/VBZ/is go/VBN/go to/TO/to have/VB/have a/DT/a mismatch/NN/mismatch with/IN/with the/DT/the b/NNP/b. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start shifting/NN/shifting again/RB/again i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to find/VB/find the/DT/the pattern/NNP/pattern. so/RB/so /,/, the/DT/the pattern/NN/pattern this/DT/this pattern/NN/pattern is/VBZ/is suddenly/RB/suddenly not/RB/not going/VBG/going to/TO/to start/VB/start anywhere/RB/anywhere here/NNP/here. if/IN/if at/IN/at all/DT/all it/PRP/it is/VBZ/is going/VBG/going to/TO/to start/VB/start here/NNP/here. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch i/PRP/i can/MD/can for/IN/for this/DT/this pattern/NN/pattern /,/, i/PRP/i can/MD/can move/VB/move this/DT/this all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to here/NNP/here. so/RB/so /,/, i/PRP/i can/MD/can start/VB/start comparing/VBG/comparing here/RB/here now/NNP/now. so/RB/so /,/, i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way here/RB/here and/CC/and i/PRP/i start/VBP/start comparing/NNP/comparing. i/PRP/i do/VBP/do not/RB/not need/VB/need to/TO/to sort/VB/sort of/IN/of shifted/VBN/shifted one/CD/one by/IN/by one/CD/one i/PRP/i can/MD/can shifted/VB/shifted all/PDT/all the/DT/the way/NN/way here/RB/here and/CC/and i/PRP/i start/VBP/start comparing/NNP/comparing. so/RB/so /,/, there/EX/there was/VBD/was a/DT/a mismatch/NN/mismatch at/IN/at this/DT/this position/NN/position i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way and/CC/and now/RB/now i/PRP/i start/VBP/start comparing/NNP/comparing. so/RB/so /,/, for/IN/for this/DT/this pattern/NN/pattern this/DT/this algorithm/NN/algorithm works/NNP/works. so/RB/so /,/, i/PRP/i start/VBP/start comparing/VBG/comparing /,/, you/PRP/you know/VBP/know the/DT/the text/NN/text in/IN/in the/DT/the pattern/NN/pattern /,/, here/RB/here the/DT/the text/NN/text in/IN/in pattern/NNP/pattern. and/CC/and if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch in/IN/in the/DT/the ith/NN/ith position/NN/position of/IN/of the/DT/the pattern/NN/pattern /,/, i/PRP/i just/RB/just move/VB/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to here/NNP/here. and/CC/and i/PRP/i start/VBP/start comparing/VBG/comparing now/RB/now with/IN/with the/DT/the first/JJ/first character/NN/character of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so /,/, essentially/RB/essentially we/PRP/we have/VBP/have some/DT/some more/RBR/more use/NN/use the/DT/the factor/NN/factor /,/, you/PRP/you know/VBP/know the/DT/the text/NN/text as/IN/as match/NN/match the/DT/the pattern/NN/pattern up/RP/up to/TO/to here/NNP/here. so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that these/DT/these are/VBP/are all/DT/all b/NN/b ?/./? s/NNP/s. and/CC/and my/PRP$/my pattern/NN/pattern must/MD/must start/VB/start with/IN/with an/DT/an a/NNP/a. since/IN/since /,/, there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch here/RB/here /,/, there/EX/there is/VBZ/is a/DT/a good/JJ/good chance/NN/chance i/PRP/i mean/VBP/mean there/RB/there is/VBZ/is some/DT/some chance/NN/chance that/IN/that there/EX/there is/VBZ/is an/DT/an a/DT/a here/NNP/here. so/RB/so /,/, we/PRP/we can/MD/can not/RB/not sort/VB/sort of/IN/of move/NN/move it/PRP/it even/RB/even further/RB/further /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we move/VBP/move the/DT/the text/NN/text of/IN/of tool/NNP/tool. so/RB/so /,/, supposing/VBG/supposing we/PRP/we follow/VBP/follow this/DT/this algorithm/NN/algorithm for/IN/for this/DT/this pattern/NN/pattern /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch i/PRP/i am/VBP/am move/NN/move it/PRP/it all/DT/all the/DT/the way/NN/way here/NNP/here. and/CC/and know/VB/know again/RB/again start/VB/start comparing/VBG/comparing /,/, i/PRP/i compare/VBP/compare this/DT/this with/IN/with a/DT/a i/NN/i go/VBP/go down/RB/down here/NNP/here. suppose/NN/suppose there/RB/there is/VBZ/is a/DT/a mismatch/NN/mismatch i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way here/NNP/here. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does existing/NNP/existing. well/RB/well this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial argument/NN/argument /,/, because/IN/because some/DT/some such/JJ/such argument/NN/argument will/MD/will use/VB/use in/IN/in general/NNP/general. when/WRB/when /,/, the/DT/the time/NN/time the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons by/IN/by time/NN/time will/MD/will just/RB/just say/VB/say the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is actually/RB/actually 2/CD/2 n/NN/n at/IN/at most/JJS/most 2/CD/2 n/NN/n comparisons/NNS/comparisons now/RB/now why/WRB/why is/VBZ/is that/NNP/that. well/RB/well we/PRP/we look/VBP/look at/IN/at each/DT/each position/NN/position of/IN/of the/DT/the text/NN/text i/PRP/i claimed/VBD/claimed /,/, that/IN/that for/IN/for each/DT/each positional/JJ/positional the/DT/the text/NNP/text. i/PRP/i will/MD/will make/VB/make at/IN/at most/JJS/most two/CD/two comparisons/NNP/comparisons. why/WRB/why is/VBZ/is that/IN/that well/RB/well /,/, let/VB/let us/PRP/us see/VB/see we/PRP/we start/VB/start here/RB/here for/IN/for these/DT/these positions/NNS/positions of/IN/of the/DT/the text/NN/text i/PRP/i make/VBP/make only/RB/only one/CD/one comparison/NNP/comparison. because/IN/because /,/, once/RB/once there/RB/there is/VBZ/is a/DT/a match/NN/match here/RB/here i/PRP/i never/RB/never make/VB/make anymore/JJ/anymore comparisons/NNS/comparisons for/IN/for this/DT/this position/NN/position in/IN/in the/DT/the text/NNP/text. if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch i/PRP/i may/MD/may make/VB/make one/CD/one more/JJR/more comparison/NN/comparison /,/, which/WDT/which is/VBZ/is the/DT/the pattern/NN/pattern shifted/VBD/shifted all/DT/all the/DT/the way/NNP/way. now/RB/now /,/, i/PRP/i match/VBP/match a/DT/a with/IN/with this/DT/this /,/, if/IN/if this/DT/this does/VBZ/does not/RB/not match/VB/match i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern and/CC/and i/PRP/i move/VBP/move ahead/NNP/ahead. so/RB/so /,/, for/IN/for each/DT/each position/NN/position in/IN/in the/DT/the text/NN/text i/PRP/i make/VBP/make at/IN/at most/JJS/most two/CD/two comparisons/NNP/comparisons. so/RB/so /,/, the/DT/the time/NN/time here/RB/here the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons that/WDT/that i/PRP/i make/VBP/make for/IN/for this/DT/this /,/, that/IN/that i/PRP/i need/VBP/need to/TO/to make/VB/make for/IN/for this/DT/this pattern/NN/pattern this/DT/this 2/CD/2 n/NNP/n. so/RB/so /,/, well/RB/well there/RB/there is/VBZ/is a/DT/a /NN/( /:/( refer/NN/refer time/NN/time /:/: 13/CD/13 /:/: 49/CD/49 /CD/) /CD/) that/WDT/that maybe/RB/maybe we/PRP/we can/MD/can do/VB/do faster/JJR/faster than/IN/than m/NN/m times/NNS/times n/NNP/n. so/RB/so /,/, let/VB/let us/PRP/us takes/VBZ/takes another/DT/another example/NNP/example. again/RB/again any/DT/any simple/NN/simple example/NN/example /,/, but/CC/but this/DT/this will/MD/will again/RB/again illustrate/VB/illustrate what/WP/what we/PRP/we are/VBP/are trying/VBG/trying to/TO/to do/NNP/do. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 05/CD/05 /CD/) so/RB/so /,/, example/NN/example 2/CD/2 /,/, so/RB/so earlier/JJR/earlier we/PRP/we took/VBD/took a/DT/a b/NN/b to/TO/to the/DT/the k/NN/k that/IN/that is/VBZ/is now/RB/now take/VBP/take a/DT/a to/TO/to the/DT/the k/NN/k times/VBZ/times a/DT/a to/TO/to the/DT/the k/NN/k b/NN/b which/WDT/which is/VBZ/is nothing/NN/nothing but/CC/but a/DT/a /,/, a/DT/a /,/, a/DT/a k/NN/k times/VBZ/times followed/VBN/followed by/IN/by b/NNP/b. this/DT/this is/VBZ/is the/DT/the pattern/NN/pattern we/PRP/we are/VBP/are looking/VBG/looking for/IN/for in/IN/in a/DT/a text/NNP/text. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/VB/take /,/, how/WRB/how many/JJ/many comparisons/NNS/comparisons do/VBP/do we/PRP/we have/VB/have to/TO/to make/VB/make /,/, if/IN/if we/PRP/we sort/VBP/sort of/IN/of do/NN/do things/NNS/things not/RB/not just/RB/just namely/RB/namely /,/, but/CC/but in/IN/in an/DT/an intelligent/NN/intelligent way/NNP/way. so/RB/so /,/, again/RB/again let/VB/let us/PRP/us see/VB/see what/WP/what happens/NNP/happens. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my text/NN/text i/PRP/i start/VBP/start comparing/VBG/comparing /,/, let/VB/let us/PRP/us say/VB/say from/IN/from here/NNP/here. i/PRP/i have/VBP/have done/VBN/done all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to here/RB/here and/CC/and i/PRP/i am/VBP/am sort/NN/sort of/IN/of comparing/VBG/comparing from/IN/from here/NNP/here. and/CC/and let/VB/let us/PRP/us say/VB/say that/IN/that is/VBZ/is the/DT/the pattern/NN/pattern and/CC/and i/PRP/i have/VBP/have a/DT/a mismatch/NN/mismatch here/NNP/here. so/RB/so /,/, i/PRP/i have/VBP/have a/DT/a /,/, a/DT/a /,/, a/DT/a here/RB/here all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to b/VB/b this/DT/this is/VBZ/is the/DT/the pattern/NNP/pattern. in/IN/in the/DT/the text/NN/text i/PRP/i know/VBP/know that/IN/that i/PRP/i have/VBP/have a/DT/a is/VBZ/is here/NNP/here. here/RB/here /,/, there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, this/DT/this could/MD/could be/VB/be anything/NNP/anything. this/DT/this is/VBZ/is the/DT/the mismatch/NN/mismatch well/RB/well what/WP/what can/MD/can i/VB/i do/NNP/do. so/RB/so /,/, in/IN/in the/DT/the /NN/( /:/( refer/NN/refer time/NN/time /:/: 15/CD/15 /:/: 28/CD/28 /CD/) /CD/) sort/NN/sort of/IN/of thing/NN/thing i/PRP/i would/MD/would have/VB/have shifted/VBN/shifted this/DT/this by/IN/by one/CD/one /,/, this/DT/this would/MD/would have/VB/have shifted/VBN/shifted by/IN/by one/CD/one and/CC/and i/PRP/i will/MD/will was/VBD/was started/VBN/started comparing/VBG/comparing again/NNP/again. and/CC/and you/PRP/you know/VBP/know that/IN/that again/RB/again there/EX/there will/MD/will be/VB/be a/DT/a mismatch/NN/mismatch here/NNP/here. there/EX/there will/MD/will be/VB/be matches/NNS/matches all/DT/all over/IN/over here/RB/here and/CC/and there/EX/there will/MD/will be/VB/be a/DT/a mismatch/NN/mismatch here/NNP/here. this/DT/this is/VBZ/is known/VBN/known /,/, because/IN/because i/PRP/i know/VBP/know what/WP/what the/DT/the patterns/NNP/patterns. so/RB/so /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to do/VB/do it/PRP/it intelligently/RB/intelligently /,/, you/PRP/you know/VBP/know that/IN/that starting/VBG/starting the/DT/the pattern/NN/pattern anywhere/RB/anywhere here/RB/here all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to here/RB/here is/VBZ/is useless/NNP/useless. because/IN/because /,/, i/PRP/i need/VBP/need you/PRP/you know/VBP/know string/VBG/string of/IN/of size/NN/size a/DT/a is/VBZ/is of/IN/of size/NN/size there/EX/there should/MD/should be/VB/be k/NN/k a/DT/a ?/./? s/VBZ/s and/CC/and they/PRP/they do/VBP/do not/RB/not occur/VB/occur here/NNP/here. this/DT/this is/VBZ/is not/RB/not an/DT/an a/DT/a /,/, so/RB/so i/PRP/i can/MD/can in/IN/in fact/NN/fact /,/, start/VB/start the/DT/the pattern/NN/pattern right/RB/right here/NNP/here. so/RB/so /,/, once/RB/once as/IN/as a/DT/a mismatch/NN/mismatch i/PRP/i can/MD/can start/VB/start comparing/VBG/comparing right/RB/right here/NNP/here. so/RB/so /,/, i/PRP/i can/MD/can move/VB/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way after/IN/after the/DT/the mismatch/NNP/mismatch. once/RB/once /,/, as/IN/as a/DT/a mismatch/NN/mismatch i/PRP/i just/RB/just move/VB/move the/DT/the pattern/NN/pattern up/RP/up to/TO/to here/NNP/here. so/RB/so /,/, i/PRP/i know/VBP/know because/IN/because the/DT/the reason/NN/reason is/VBZ/is i/PRP/i can/MD/can not/RB/not find/VB/find pattern/JJ/pattern /,/, anywhere/RB/anywhere here/RB/here i/PRP/i have/VBP/have to/TO/to start/VB/start here/NNP/here. because/IN/because /,/, pattern/NN/pattern has/VBZ/has to/TO/to start/VB/start with/IN/with an/DT/an a/DT/a and/CC/and then/RB/then i/PRP/i need/VBP/need to/TO/to see/VB/see k/NN/k a/DT/a ?/./? s/NNP/s. and/CC/and i/PRP/i do/VBP/do not/RB/not see/VB/see that/IN/that here/RB/here /,/, this/DT/this is/VBZ/is not/RB/not an/DT/an a/NNP/a. so/RB/so /,/, again/RB/again i/PRP/i use/VBP/use some/DT/some information/NN/information about/IN/about the/DT/the pattern/NN/pattern to/TO/to move/VB/move the/DT/the string/NN/string all/DT/all the/DT/the way/NNP/way. there/RB/there is/VBZ/is one/CD/one more/RBR/more case/NN/case here/RB/here /,/, which/WDT/which is/VBZ/is when/WRB/when the/DT/the mismatch/NN/mismatch is/VBZ/is at/IN/at b/NNP/b. but/CC/but /,/, before/IN/before we/PRP/we do/VBP/do that/IN/that let/VB/let us/PRP/us maybe/RB/maybe do/VBP/do that/IN/that and/CC/and then/RB/then come/VBN/come back/RB/back and/CC/and see/VB/see how/WRB/how much/RB/much time/NN/time takes/NNP/takes. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 54/CD/54 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my text/NN/text now/RB/now the/DT/the mismatch/NN/mismatch is/VBZ/is here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the mismatch/NN/mismatch /,/, but/CC/but text/NN/text matches/NNS/matches all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to here/RB/here /,/, except/IN/except you/PRP/you know/VBP/know there/RB/there is/VBZ/is a/DT/a mismatch/NN/mismatch now/RB/now what/WP/what do/VBP/do i/PRP/i do/NNP/do. so/RB/so /,/, now/RB/now there/EX/there is/VBZ/is a/DT/a good/JJ/good possibility/NN/possibility /,/, that/IN/that this/DT/this is/VBZ/is a/NNP/a. there/RB/there is/VBZ/is a/DT/a good/JJ/good possibility/NN/possibility that/IN/that the/DT/the place/NN/place /,/, where/WRB/where there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, in/IN/in the/DT/the text/NN/text it/PRP/it actually/RB/actually is/VBZ/is a/NNP/a. in/IN/in which/WDT/which case/NN/case /,/, if/IN/if this/DT/this is/VBZ/is a/DT/a b/NN/b the/DT/the next/JJ/next thing/NN/thing is/VBZ/is a/DT/a b/NN/b /,/, then/RB/then you/PRP/you will/MD/will miss/VB/miss i/PRP/i mean/VBP/mean you/PRP/you can/MD/can not/RB/not move/VB/move it/PRP/it by/IN/by more/JJR/more than/IN/than one/NNP/one. so/RB/so /,/, i/PRP/i have/VBP/have to/TO/to try/VB/try this/DT/this the/DT/the pattern/NN/pattern shifted/VBD/shifted by/IN/by one/NNP/one. this/DT/this is/VBZ/is quite/RB/quite possible/JJ/possible a/DT/a /,/, a/DT/a b/NN/b if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch at/IN/at this/DT/this position/NN/position /,/, it/PRP/it is/VBZ/is quite/RB/quite possible/JJ/possible that/IN/that the/DT/the pattern/NN/pattern occurs/NNS/occurs here/NNP/here. so/RB/so /,/, i/PRP/i can/MD/can at/IN/at most/JJS/most shift/NN/shift the/DT/the pattern/NN/pattern by/IN/by one/NNP/one. so/RB/so /,/, this/DT/this looks/NNS/looks like/IN/like you/PRP/you know/VBP/know worst/JJ/worst case/NN/case i/PRP/i can/MD/can not/RB/not shift/VB/shift by/IN/by more/JJR/more /,/, the/DT/the pattern/NN/pattern by/IN/by more/NNP/more. this/DT/this looks/VBZ/looks like/IN/like a/DT/a worst/JJ/worst case/NN/case and/CC/and be/VB/be a/DT/a back/NN/back to/TO/to looking/VBG/looking something/NN/something looking/VBG/looking at/IN/at the/DT/the /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 12/CD/12 /CD/) /CD/) algorithm/NNP/algorithm. but/CC/but /,/, while/IN/while we/PRP/we are/VBP/are shifting/VBG/shifting the/DT/the pattern/NN/pattern by/IN/by one/CD/one /,/, there/EX/there is/VBZ/is something/NN/something you/PRP/you are/VBP/are gaining/NNP/gaining. what/WP/what we/PRP/we are/VBP/are gaining/VBG/gaining is/VBZ/is that/IN/that /,/, we/PRP/we know/VBP/know that/IN/that there/EX/there are/VBP/are up/RP/up to/TO/to this/DT/this position/NN/position there/RB/there is/VBZ/is a/DT/a match/NNP/match. while/IN/while i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by one/CD/one i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to again/VB/again match/NN/match all/DT/all of/IN/of these/DT/these as/IN/as i/PRP/i did/VBD/did in/IN/in the/DT/the /NN/( /:/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 31/CD/31 /CD/) /CD/) case/NNP/case. remember/NN/remember /,/, then/RB/then /:/( /:/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 35/CD/35 /CD/) /CD/) algorithm/NN/algorithm i/PRP/i shifted/VBD/shifted by/IN/by one/CD/one /,/, then/RB/then i/PRP/i started/VBD/started my/PRP$/my comparisons/NNS/comparisons here/RB/here do/VBP/do this/DT/this match/NN/match /,/, do/VBP/do this/DT/this match/NN/match /,/, do/VBP/do this/DT/this match/NN/match and/CC/and so/RB/so on/NNP/on. here/RB/here /,/, i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to do/VB/do that/DT/that /,/, i/PRP/i can/MD/can start/VB/start comparing/VBG/comparing from/IN/from here/NNP/here. i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by one/CD/one and/CC/and then/RB/then i/PRP/i start/VBP/start comparisons/NNS/comparisons here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an a/DT/a if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match /,/, then/RB/then i/PRP/i move/VBP/move up/RP/up again/RB/again /,/, this/DT/this fellow/JJ/fellow moves/NNS/moves up/IN/up a/DT/a again/NN/again this/DT/this moves/NNP/moves. now/RB/now /,/, i/PRP/i see/VBP/see whether/IN/whether this/DT/this is/VBZ/is b/NN/b /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch i/PRP/i am/VBP/am moving/VBG/moving the/DT/the pattern/NN/pattern by/IN/by one/CD/one /,/, but/CC/but the/DT/the text/NN/text pointer/NN/pointer remains/VBZ/remains where/WRB/where it/PRP/it was/NNP/was. so/RB/so /,/, the/DT/the text/NN/text pointer/NN/pointer remains/VBZ/remains where/WRB/where it/PRP/it was/NNP/was. so/RB/so /,/, how/WRB/how many/JJ/many /,/, so/RB/so i/PRP/i hope/VBP/hope if/IN/if the/DT/the algorithms/NNS/algorithms in/IN/in this/DT/this case/NN/case is/VBZ/is clear/JJ/clear it/PRP/it is/VBZ/is slightly/RB/slightly more/RBR/more complicated/JJ/complicated than/IN/than a/DT/a b/NN/b to/TO/to the/DT/the k/NNP/k. but/CC/but /,/, i/PRP/i hope/VBP/hope the/DT/the algorithm/NN/algorithm is/VBZ/is clear/NNP/clear. so/RB/so /,/, how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it take/NNP/take. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the time/NN/time /,/, which/WDT/which means/VBZ/means how/WRB/how many/JJ/many comparisons/NNS/comparisons do/VBP/do we/PRP/we make/VB/make in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a to/TO/to the/DT/the /NN/( /:/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 35/CD/35 /CD/) /CD/) /./. so/RB/so /,/, let/VB/let me/PRP/me again/RB/again let/VB/let us/PRP/us over/IN/over this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 37/CD/37 /CD/) /CD/) /./. suppose/NN/suppose /,/, this/DT/this a/DT/a mismatch/NN/mismatch in/IN/in one/CD/one of/IN/of these/DT/these positions/NNS/positions i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way here/NNP/here. i/PRP/i the/DT/the move/NN/move the/DT/the pattern/NN/pattern here/RB/here /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch at/IN/at b/NN/b well/RB/well i/PRP/i am/VBP/am move/NN/move the/DT/the pattern/NN/pattern by/IN/by one/CD/one by/IN/by one/CD/one unit/NNP/unit. but/CC/but /,/, i/PRP/i start/VBP/start comparisons/NNS/comparisons here/RB/here /,/, this/DT/this takes/VBZ/takes with/IN/with this/DT/this pattern/NNP/pattern. now/RB/now /,/, of/IN/of course/NN/course there/EX/there could/MD/could be/VB/be a/DT/a mismatch/NN/mismatch /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an mismatch/NN/mismatch /,/, then/RB/then i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way up/NNP/up. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match /,/, then/RB/then i/PRP/i move/VBP/move this/DT/this point/NN/point by/IN/by one/CD/one /,/, this/DT/this point/NN/point by/IN/by one/CD/one and/CC/and i/PRP/i compare/NNP/compare. that/IN/that is/VBZ/is the/DT/the /NN/( /:/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 10/CD/10 /CD/) /CD/) algorithm/NN/algorithm works/NNP/works. how/WRB/how much/JJ/much time/NN/time does/VBZ/does it/PRP/it takes/VBZ/takes /,/, well/RB/well the/DT/the claim/NN/claim is/VBZ/is again/RB/again for/IN/for look/NN/look at/IN/at each/DT/each position/NN/position in/IN/in the/DT/the text/NNP/text. by/IN/by look/NN/look at/IN/at this/DT/this position/NN/position in/IN/in the/DT/the text/NN/text /,/, then/RB/then the/DT/the number/NN/number of/IN/of times/NNS/times is/VBZ/is compared/VBN/compared is/VBZ/is at/IN/at most/JJS/most 2/CD/2. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match /,/, then/RB/then the/DT/the text/NN/text pointer/NN/pointer moves/NNS/moves forward/NNP/forward. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match text/NN/text pointer/NN/pointer moves/NNS/moves forward/RB/forward and/CC/and that/IN/that position/NN/position is/VBZ/is never/RB/never compared/VBN/compared again/NNP/again. so/RB/so /,/, it/PRP/it at/IN/at most/JJS/most once/RB/once a/DT/a match/NN/match occurred/VBD/occurred at/IN/at a/DT/a position/NN/position with/IN/with text/NN/text at/IN/at most/JJS/most once/NNP/once. how/WRB/how many/JJ/many times/NNS/times can/MD/can a/DT/a mismatch/NN/mismatch occur/NN/occur /,/, will/MD/will again/VB/again i/PRP/i claimed/VBD/claimed that/IN/that the/DT/the mismatch/NN/mismatch will/MD/will occur/VB/occur at/IN/at most/JJS/most once/NNP/once. well/RB/well /,/, if/IN/if the/DT/the mismatch/NN/mismatch occurs/NNS/occurs at/IN/at a/DT/a position/NN/position /,/, which/WDT/which is/VBZ/is not/RB/not b/VB/b at/IN/at one/CD/one of/IN/of the/DT/the a/DT/a ?/./? s/VBZ/s /,/, then/RB/then the/DT/the text/NN/text moves/VBZ/moves forward/NNP/forward. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the case/NN/case /,/, if/IN/if the/DT/the mismatch/NN/mismatch occurs/NNS/occurs at/IN/at one/CD/one of/IN/of the/DT/the a/DT/a ?/./? s/VBZ/s /,/, then/RB/then the/DT/the pattern/NN/pattern is/VBZ/is moved/VBN/moved all/DT/all the/DT/the way/NN/way up/RP/up here/NNP/here. and/CC/and the/DT/the text/NN/text pointer/NN/pointer /,/, which/WDT/which was/VBD/was here/RB/here now/RB/now moves/VBZ/moves up/RP/up by/IN/by 1/CD/1. if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch text/NN/text pointer/NN/pointer moves/NNS/moves by/IN/by 1/CD/1 i/PRP/i never/RB/never compare/VBP/compare this/DT/this again/NN/again /,/, i/PRP/i never/RB/never compare/VBP/compare this/DT/this character/NN/character again/NNP/again. if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch at/IN/at b/NN/b /,/, the/DT/the text/NN/text is/VBZ/is again/RB/again here/RB/here /,/, but/CC/but the/DT/the pattern/NN/pattern has/VBZ/has moved/NNP/moved. now/RB/now /,/, check/NN/check what/WP/what can/MD/can happen/VB/happen /,/, either/DT/either there/EX/there is/VBZ/is a/DT/a match/NN/match in/IN/in which/WDT/which case/NN/case the/DT/the text/NN/text moves/VBZ/moves or/CC/or there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch at/IN/at an/DT/an a/DT/a again/NN/again the/DT/the text/NN/text moves/NNP/moves. so/RB/so /,/, there/EX/there can/MD/can be/VB/be at/IN/at most/JJS/most two/CD/two comparisons/NNS/comparisons per/IN/per text/NN/text character/NNP/character. so/RB/so /,/, for/IN/for each/DT/each character/NN/character in/IN/in the/DT/the text/NN/text /,/, there/EX/there can/MD/can be/VB/be at/IN/at most/JJS/most two/CD/two comparisons/NNP/comparisons. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is 2/CD/2 n/NN/n number/NN/number of/IN/of comparisons/NNP/comparisons. so/RB/so /,/, number/NN/number of/IN/of comparisons/NNS/comparisons at/IN/at most/JJS/most 2/CD/2 n/NNP/n. so/RB/so /,/, in/IN/in both/DT/both cases/NNS/cases we/PRP/we see/VBP/see /,/, that/IN/that the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is at/IN/at most/JJS/most 2/CD/2 n/NNP/n. and/CC/and this/DT/this gives/VBZ/gives as/IN/as scope/NN/scope /,/, that/IN/that maybe/RB/maybe we/PRP/we can/MD/can do/VB/do it/PRP/it you/PRP/you know/VBP/know faster/NNP/faster. for/IN/for instance/NN/instance /,/, it/PRP/it is/VBZ/is /:/( /:/( refer/NN/refer time/NN/time /:/: 22/CD/22 /:/: 47/CD/47 /CD/) /CD/) asking/VBG/asking can/MD/can we/PRP/we do/VBP/do it/PRP/it o/VB/o n/NN/n time/NN/time for/IN/for all/DT/all patterns/NNP/patterns. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 00/CD/00 /CD/) so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the scene/NN/scene /,/, suppose/NN/suppose it/PRP/it should/MD/should be/VB/be able/JJ/able to/TO/to do/VB/do this/DT/this /,/, what/WP/what is/VBZ/is the/DT/the scene/NN/scene ?/./? well/RB/well /,/, the/DT/the question/NN/question is/NNP/is... so/RB/so /,/, if/IN/if i/PRP/i have/VBP/have this/DT/this is/VBZ/is the/DT/the text/NN/text and/CC/and i/PRP/i have/VBP/have /,/, now/RB/now this/DT/this is/VBZ/is the/DT/the pattern/NNP/pattern. and/CC/and i/PRP/i match/VBP/match some/DT/some of/IN/of them/PRP/them and/CC/and here/RB/here i/PRP/i have/VBP/have a/DT/a mismatch/NNP/mismatch. in/IN/in each/DT/each of/IN/of the/DT/the earlier/JJR/earlier cases/NNS/cases /,/, we/PRP/we some/DT/some more/RBR/more used/JJ/used this/DT/this matched/JJ/matched information/NNP/information. this/DT/this information/NN/information /,/, that/IN/that this/DT/this portion/NN/portion of/IN/of the/DT/the string/NN/string matches/VBZ/matches with/IN/with this/DT/this portion/NN/portion the/DT/the text/NN/text was/VBD/was used/VBN/used in/IN/in both/DT/both cases/NNP/cases. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we would/MD/would like/VB/like to/TO/to use/NNP/use. so/RB/so /,/, can/MD/can we/PRP/we use/VB/use the/DT/the match/NN/match information/NN/information /,/, which/WDT/which means/VBZ/means the/DT/the information/NN/information that/IN/that this/DT/this portion/NN/portion of/IN/of the/DT/the string/NN/string actually/RB/actually match/VBP/match this/DT/this portion/NN/portion of/IN/of the/DT/the text/NN/text can/MD/can we/PRP/we use/VB/use this/NNP/this. and/CC/and this/DT/this is/VBZ/is what/WP/what we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do /,/, somehow/VB/somehow use/NN/use this/DT/this information/NNP/information. what/WP/what you/PRP/you would/MD/would also/RB/also like/VB/like to/TO/to do/VB/do /,/, like/IN/like in/IN/in the/DT/the previous/JJ/previous case/NN/case is/VBZ/is try/NN/try and/CC/and shift/NN/shift the/DT/the pattern/NN/pattern as/IN/as much/JJ/much as/IN/as possible/NNP/possible. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 23/CD/23 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is one/CD/one goal/NN/goal /,/, so/RB/so shift/NN/shift pattern/NN/pattern as/IN/as much/JJ/much as/IN/as possible/NNP/possible. so/RB/so /,/, what/WDT/what does/VBZ/does this/DT/this mean/NN/mean /,/, i/PRP/i mean/NNP/mean. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my text/NN/text we/PRP/we going/VBG/going to/TO/to see/VB/see many/JJ/many of/IN/of these/DT/these two/CD/two line/NN/line highways/NNS/highways throughout/IN/throughout this/DT/this /,/, this/DT/this stock/NNP/stock. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my pattern/NN/pattern in/IN/in fact/NN/fact /,/, if/IN/if you/PRP/you see/VBP/see this/DT/this figure/NN/figure this/DT/this is/VBZ/is a/DT/a text/NN/text in/IN/in /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 24/CD/24 /:/: 54/CD/54 /CD/) /CD/) pattern/NN/pattern i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to keep/VB/keep writing/NN/writing this/DT/this text/NN/text pattern/NN/pattern will/MD/will miss/NNP/miss. now/RB/now /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is a/DT/a mismatch/NN/mismatch here/NNP/here. now/RB/now /,/, when/WRB/when can/MD/can i/VB/i say/VB/say that/IN/that moving/VBG/moving it/PRP/it by/IN/by one/CD/one is/VBZ/is not/RB/not necessary/NNP/necessary. when/WRB/when can/MD/can i/VB/i say/VB/say that/IN/that this/DT/this is/VBZ/is useless/NNP/useless. well/RB/well /,/, this/DT/this is/VBZ/is useless/NN/useless if/IN/if this/DT/this portion/NN/portion will/MD/will not/RB/not match/VB/match this/DT/this portion/NN/portion of/IN/of the/DT/the text/NNP/text. if/IN/if this/DT/this portion/NN/portion does/VBZ/does not/RB/not match/VB/match this/DT/this same/JJ/same portion/NN/portion of/IN/of the/DT/the text/NN/text /,/, there/EX/there is/VBZ/is no/DT/no point/NN/point and/CC/and moving/VBG/moving it/PRP/it by/IN/by one/NNP/one. we/PRP/we in/IN/in some/DT/some ways/NNS/ways no/DT/no this/DT/this portion/NN/portion with/IN/with text/NN/text /,/, because/IN/because it/PRP/it has/VBZ/has exactly/RB/exactly match/JJ/match this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. all/DT/all this/DT/this i/PRP/i have/VBP/have a/DT/a match/NN/match /,/, in/IN/in the/DT/the text/NN/text up/RP/up to/TO/to here/RB/here i/PRP/i have/VBP/have a/DT/a match/NN/match this/DT/this is/VBZ/is my/PRP$/my first/JJ/first mismatch/NN/mismatch /,/, which/WDT/which means/VBZ/means if/IN/if this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern /,/, does/VBZ/does not/RB/not match/VB/match with/IN/with this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. forget/NN/forget the/DT/the text/NN/text for/IN/for the/DT/the time/NN/time being/VBG/being /,/, just/RB/just look/VBP/look at/IN/at the/DT/the pattern/NNP/pattern. this/DT/this is/VBZ/is the/DT/the original/JJ/original pattern/NN/pattern and/CC/and here/RB/here is/VBZ/is the/DT/the pattern/NN/pattern shifted/VBD/shifted by/IN/by one/CD/one character/NNP/character. if/IN/if this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern /,/, does/VBZ/does not/RB/not match/VB/match this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern /,/, there/EX/there is/VBZ/is no/DT/no point/NN/point and/CC/and shifting/VBG/shifting it/PRP/it by/IN/by one/CD/one /,/, because/IN/because if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch somewhere/WRB/somewhere here/RB/here /,/, there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a mismatch/NN/mismatch there/EX/there also/NNP/also. how/WRB/how about/IN/about two/CD/two characters/NNS/characters /,/, again/RB/again it/PRP/it is/VBZ/is a/DT/a same/JJ/same thing/NN/thing only/RB/only now/RB/now i/PRP/i am/VBP/am concerned/VBN/concerned about/IN/about this/DT/this portion/NN/portion of/IN/of the/DT/the text/NN/text /,/, this/DT/this portion/NN/portion and/CC/and you/PRP/you see/VBP/see that/IN/that portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. in/IN/in general/JJ/general /,/, so/RB/so let/VB/let me/PRP/me draw/VB/draw this/DT/this again/NN/again /,/, well/RB/well the/DT/the crucial/JJ/crucial idea/NN/idea again/RB/again is/VBZ/is that/NNP/that. once/RB/once i/PRP/i have/VBP/have matched/VBN/matched up/RP/up to/TO/to here/RB/here /,/, then/RB/then whether/IN/whether to/TO/to shifted/VBN/shifted by/IN/by one/CD/one or/CC/or two/CD/two or/CC/or three/CD/three or/CC/or four/CD/four it/PRP/it is/VBZ/is only/RB/only something/VBG/something do/VBP/do with/IN/with the/DT/the pattern/NN/pattern /,/, it/PRP/it has/VBZ/has noting/VBG/noting do/VBP/do with/IN/with the/DT/the text/NN/text in/IN/in some/DT/some sense/NN/sense /,/, because/IN/because the/DT/the text/NN/text is/VBZ/is already/RB/already matched/NNP/matched. so/RB/so /,/, this/DT/this decision/NN/decision i/PRP/i can/MD/can make/VB/make by/IN/by looking/VBG/looking at/IN/at only/RB/only the/DT/the pattern/NN/pattern what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 20/CD/20 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my pattern/NNP/pattern. so/RB/so /,/, thing/NN/thing of/IN/of the/DT/the text/NN/text sitting/VBG/sitting up/RP/up there/RB/there /,/, i/PRP/i have/VBP/have a/DT/a mismatch/NN/mismatch here/NNP/here. and/CC/and let/VB/let us/PRP/us say/VB/say /,/, you/PRP/you know/VBP/know the/DT/the best/JJS/best way/NN/way to/TO/to do/VB/do it/PRP/it is/VBZ/is to/TO/to shift/VB/shift by/IN/by you/PRP/you know/VBP/know some/DT/some i/PRP/i units/NNP/units. essentially/RB/essentially /,/, i/PRP/i do/VBP/do not/RB/not by/IN/by shifting/NN/shifting i/PRP/i do/VBP/do not/RB/not want/VB/want to/TO/to miss/VB/miss and/CC/and occurrence/NN/occurrence of/IN/of the/DT/the pattern/NN/pattern /,/, in/IN/in the/DT/the text/NNP/text. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i do/VBP/do not/RB/not want/VB/want to/TO/to miss/VB/miss /,/, otherwise/RB/otherwise i/PRP/i would/MD/would like/VB/like to/TO/to shift/VB/shift as/IN/as much/JJ/much as/IN/as possible/NNP/possible. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the text/NN/text /,/, supposing/VBG/supposing this/DT/this is/VBZ/is shifted/VBN/shifted by/IN/by i/PRP/i units/VBZ/units here/RB/here /,/, supposing/VBG/supposing you/PRP/you know/VBP/know if/IN/if i/PRP/i is/VBZ/is the/DT/the best/JJS/best you/PRP/you can/MD/can do/VB/do /,/, what/WDT/what is/VBZ/is this/DT/this mean/JJ/mean ?/./? this/DT/this means/VBZ/means /,/, that/IN/that this/DT/this portion/NN/portion must/MD/must match/VB/match this/DT/this portion/NNP/portion. this/DT/this portion/NN/portion which/WDT/which is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern /,/, must/MD/must match/VB/match the/DT/the suffix/NN/suffix of/IN/of this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. this/DT/this prefix/NN/prefix must/MD/must match/VB/match this/DT/this suffix/NN/suffix and/CC/and this/DT/this must/MD/must be/VB/be the/DT/the largest/JJS/largest prefix/NN/prefix i/PRP/i can/MD/can not/RB/not have/VB/have a/DT/a larger/JJR/larger prefix/NN/prefix matching/VBG/matching this/DT/this /,/, for/IN/for instance/NN/instance if/IN/if instead/RB/instead if/IN/if i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern by/IN/by less/NNP/less. let/NN/let us/PRP/us say/VBP/say i/PRP/i minus/VBZ/minus 1/CD/1 /,/, then/RB/then i/PRP/i have/VBP/have a/DT/a and/CC/and there/EX/there is/VBZ/is a/DT/a match/NN/match /,/, then/RB/then i/PRP/i should/MD/should not/RB/not you/PRP/you know/VBP/know miss/NNS/miss that/IN/that opportunity/NNP/opportunity. so/RB/so /,/, what/WDT/what i/PRP/i am/VBP/am saying/VBG/saying is/VBZ/is this/NNP/this. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my text/NN/text /,/, so/RB/so here/RB/here is/VBZ/is the/DT/the pattern/NN/pattern /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is shifted/VBN/shifted by/IN/by j/NN/j /,/, which/WDT/which is/VBZ/is less/RBR/less than/IN/than i/PRP/i /,/, this/DT/this is/VBZ/is j/NN/j which/WDT/which is/VBZ/is less/RBR/less than/IN/than i/NNP/i. the/DT/the mismatch/NN/mismatch is/VBZ/is at/IN/at the/DT/the same/JJ/same position/NN/position /,/, this/DT/this is/VBZ/is the/DT/the same/JJ/same position/NN/position is/VBZ/is that/NNP/that. now/RB/now /,/, i/PRP/i can/MD/can safely/RB/safely do/VB/do away/RB/away with/IN/with this/DT/this j/NN/j 's/POS/'s /,/, if/IN/if this/DT/this is/VBZ/is not/RB/not a/DT/a prefix/NNP/prefix. this/DT/this prefix/NN/prefix is/VBZ/is not/RB/not a/DT/a suffix/NN/suffix of/IN/of this/NNP/this. so/RB/so /,/, for/IN/for all/PDT/all j/NN/j less/RBR/less than/IN/than i/PRP/i this/DT/this prefix/NN/prefix is/VBZ/is not/RB/not a/DT/a suffix/NN/suffix of/IN/of this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so /,/, this/DT/this is/VBZ/is this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern is/VBZ/is the/DT/the same/JJ/same as/IN/as this/DT/this /,/, these/DT/these two/CD/two are/VBP/are the/DT/the same/NNP/same. so/RB/so /,/, any/DT/any prefix/NN/prefix which/WDT/which as/IN/as larger/JJR/larger than/IN/than this/DT/this length/NN/length /,/, larger/JJR/larger than/IN/than this/DT/this will/MD/will not/RB/not match/VB/match suffix/CD/suffix /,/, then/RB/then i/PRP/i can/MD/can move/VB/move it/PRP/it forward/NNP/forward. and/CC/and essentially/RB/essentially i/PRP/i want/VBP/want you/PRP/you know/VBP/know the/DT/the largest/JJS/largest prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern /,/, which/WDT/which matches/NNS/matches the/DT/the suffix/NN/suffix at/IN/at this/DT/this point/NNP/point. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch that/WDT/that is/VBZ/is what/WP/what i/PRP/i want/NNP/want. then/RB/then /,/, i/PRP/i can/MD/can move/VB/move it/PRP/it all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to that/DT/that portion/NN/portion and/CC/and then/RB/then start/VB/start comparing/NNP/comparing. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i really/RB/really want/VBP/want to/TO/to do/NNP/do. so/RB/so /,/, this/DT/this data/NN/data is/VBZ/is only/RB/only pattern/JJ/pattern dependent/NN/dependent /,/, that/IN/that is/VBZ/is the/DT/the first/JJ/first thing/NNP/thing. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 32/CD/32 /CD/) so/RB/so /,/, this/DT/this only/RB/only pattern/VBP/pattern dependent/NN/dependent this/DT/this is/VBZ/is the/DT/the data/NNS/data /,/, that/IN/that tells/NNS/tells you/PRP/you how/WRB/how much/JJ/much to/TO/to shift/NNP/shift. and/CC/and what/WP/what is/VBZ/is this/DT/this data/NNP/data. so/RB/so /,/, supposing/VBG/supposing you/PRP/you have/VBP/have a/DT/a mismatch/NN/mismatch at/IN/at the/DT/the ith/NN/ith position/NNP/position. how/WRB/how much/JJ/much to/TO/to shift/VB/shift the/DT/the pattern/NN/pattern by/IN/by that/DT/that is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to know/NNP/know. so/RB/so /,/, how/WRB/how much/JJ/much to/TO/to shift/VB/shift the/DT/the pattern/NN/pattern by/IN/by well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 45/CD/45 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look so/RB/so here/RB/here is/VBZ/is the/DT/the pattern/NN/pattern /,/, this/DT/this is/VBZ/is the/DT/the ith/NN/ith position/NN/position i/PRP/i have/VBP/have p/RP/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus 1/CD/1. and/CC/and supposing/VBG/supposing i/PRP/i have/VBP/have an/DT/an optimal/JJ/optimal shift/NN/shift /,/, which/WDT/which looks/NNS/looks like/IN/like this/NNP/this. so/RB/so /,/, p/NN/p 1/CD/1 so/RB/so on/IN/on and/CC/and this/DT/this is/VBZ/is p/NN/p i/PRP/i minus/VBZ/minus /,/, now/RB/now let/VB/let us/PRP/us say/VB/say t/NN/t minus/NN/minus 1/CD/1. so/RB/so /,/, supposing/VBG/supposing the/DT/the optimum/NN/optimum shift/NN/shift is/VBZ/is by/IN/by t/NN/t characters/NNS/characters /,/, which/WDT/which means/VBZ/means if/IN/if i/PRP/i shift/VBP/shift by/IN/by less/JJR/less than/IN/than something/NN/something less/JJR/less than/IN/than t/NN/t character/NNP/character. then/RB/then /,/, this/DT/this is/VBZ/is not/RB/not going/VBG/going to/TO/to work/VB/work i/PRP/i mean/VBP/mean in/IN/in the/DT/the sense/NN/sense there/RB/there will/MD/will be/VB/be a/DT/a mismatch/NNP/mismatch. so/RB/so /,/, what/WDT/what is/VBZ/is that/IN/that mean/NNP/mean. so/RB/so /,/, if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than t/NN/t to/TO/to here/RB/here is/VBZ/is my/PRP$/my pattern/NN/pattern p/NN/p 1/CD/1 to/TO/to p/VB/p i/PRP/i minus/VBZ/minus 1/CD/1. if/IN/if i/PRP/i shift/VBP/shift with/IN/with by/IN/by less/JJR/less than/IN/than t/NN/t then/RB/then there/RB/there will/MD/will be/VB/be a/DT/a mismatch/NN/mismatch somewhere/WRB/somewhere here/RB/here /,/, mismatch/VBP/mismatch if/IN/if shift/NN/shift is/VBZ/is less/JJR/less than/IN/than t/NNP/t. so/RB/so /,/, this/DT/this means/VBZ/means that/IN/that there/EX/there is/VBZ/is no/DT/no point/NN/point and/CC/and time/NN/time out/RP/out the/DT/the shift/NN/shift /,/, i/PRP/i am/VBP/am it/PRP/it as/IN/as well/RB/well shifted/VBN/shifted all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to t/NNP/t. and/CC/and if/IN/if the/DT/the optimum/NN/optimum shift/NN/shift is/VBZ/is t/VBN/t /,/, this/DT/this means/VBZ/means that/IN/that you/PRP/you know/VBP/know there/RB/there is/VBZ/is i/PRP/i have/VBP/have a/DT/a match/NN/match all/DT/all the/DT/the up/RP/up to/TO/to here/RB/here /,/, which/WDT/which means/VBZ/means p/NN/p 1/CD/1 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to p/VB/p i/PRP/i minus/VBZ/minus t/JJ/t minus/NN/minus 1/CD/1 is/VBZ/is a/DT/a suffix/NN/suffix of/IN/of p/NN/p 1/CD/1 to/TO/to pi/VB/pi minus/NN/minus 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the word/NN/word and/CC/and that/IN/that this/DT/this is/VBZ/is the/DT/the word/NN/word with/IN/with i/PRP/i minus/VBZ/minus 1/CD/1 characters/NNP/characters. and/CC/and this/DT/this word/NN/word is/VBZ/is a/DT/a suffix/NN/suffix of/IN/of this/DT/this /,/, that/IN/that is/VBZ/is what/WP/what this/DT/this shows/VBZ/shows that/IN/that these/DT/these two/CD/two of/IN/of the/DT/the same/JJ/same /,/, these/DT/these two/CD/two of/IN/of the/DT/the same/JJ/same and/CC/and so/RB/so on/IN/on /,/, and/CC/and because/IN/because it/PRP/it is/VBZ/is a/DT/a mismatch/NN/mismatch somewhere/WRB/somewhere here/NNP/here. we/PRP/we also/RB/also know/VBP/know that/IN/that p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus /,/, let/VB/let us/PRP/us say/VB/say j/NN/j is/VBZ/is not/RB/not a/DT/a suffix/NN/suffix of/IN/of p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus 1/CD/1 for/IN/for small/JJ/small for/IN/for the/DT/the values/NNS/values is/VBZ/is j/NN/j which/WDT/which are/VBP/are smaller/JJR/smaller than/IN/than t/NN/t minus/NN/minus 1/CD/1. so/RB/so /,/, for/IN/for j/NN/j less/JJR/less than/IN/than t/NN/t minus/NN/minus 1/CD/1. so/RB/so /,/, the/DT/the values/NNS/values of/IN/of j/NN/j is/VBZ/is less/JJR/less than/IN/than t/NN/t minus/NN/minus 1/CD/1. so/RB/so /,/, the/DT/the shift/NN/shift is/VBZ/is less/JJR/less than/IN/than t/NN/t which/WDT/which means/VBZ/means /,/, the/DT/the shift/NN/shift is/VBZ/is less/JJR/less than/IN/than t/NNP/t. then/RB/then /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a suffix/NN/suffix /,/, when/WRB/when i/PRP/i shifted/VBD/shifted by/IN/by t/NN/t units/NNS/units /,/, then/RB/then i/PRP/i have/VBP/have a/DT/a match/NN/match all/DT/all the/DT/the way/NN/way /,/, which/WDT/which means/VBZ/means this/DT/this prefix/NN/prefix of/IN/of this/DT/this pattern/NN/pattern is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, given/VBN/given a/DT/a pattern/NN/pattern what/WP/what we/PRP/we trying/VBG/trying to/TO/to do/VB/do is/VBZ/is for/IN/for a/DT/a mismatch/NNP/mismatch. we/PRP/we want/VBP/want to/TO/to find/VB/find out/RP/out how/WRB/how much/RB/much we/PRP/we can/MD/can shift/VB/shift the/DT/the pattern/NN/pattern by/IN/by /,/, we/PRP/we would/MD/would like/VB/like to/TO/to shifted/VBN/shifted by/IN/by as/RB/as much/JJ/much as/IN/as possible/JJ/possible /,/, without/IN/without missing/NN/missing and/CC/and occurrence/NN/occurrence of/IN/of this/DT/this pattern/NN/pattern in/IN/in the/DT/the text/NN/text /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are doing/NNP/doing. so/RB/so /,/, supposing/VBG/supposing the/NNP/the... so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this figure/NNP/figure. so/RB/so /,/, supposing/VBG/supposing the/DT/the mismatch/NN/mismatch is/VBZ/is at/IN/at the/DT/the ith/NN/ith position/NN/position in/IN/in the/DT/the pattern/NN/pattern /,/, you/PRP/you the/DT/the text/NN/text sort/NN/sort is/VBZ/is to/TO/to here/RB/here there/RB/there is/VBZ/is mismatch/JJ/mismatch at/IN/at this/DT/this position/NNP/position. how/WRB/how much/JJ/much should/MD/should i/PRP/i shift/VB/shift the/DT/the pattern/NN/pattern by/NNP/by. and/CC/and we/PRP/we saw/VBD/saw that/IN/that /,/, i/PRP/i would/MD/would shifted/VB/shifted by/IN/by t/NN/t units/NNS/units /,/, this/DT/this is/VBZ/is t/NN/t units/NNP/units. if/IN/if the/DT/the following/VBG/following thing/NN/thing holds/NNS/holds /,/, which/WDT/which is/VBZ/is this/DT/this prefix/NN/prefix p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus t/JJ/t minus/NN/minus 1/CD/1 i/PRP/i minus/VBZ/minus t/JJ/t plus/NN/plus 1/CD/1. this/DT/this prefix/NN/prefix is/VBZ/is a/DT/a suffix/NN/suffix of/IN/of this/DT/this portion/NN/portion and/CC/and this/DT/this is/VBZ/is the/DT/the largest/JJS/largest such/JJ/such string/NNP/string. if/IN/if i/PRP/i shifted/VBD/shifted by/IN/by less/JJR/less than/IN/than this/DT/this /,/, then/RB/then there/EX/there will/MD/will be/VB/be a/DT/a position/NN/position where/WRB/where there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, that/IN/that is/VBZ/is what/WP/what it/PRP/it says/NNP/says. for/IN/for all/DT/all smallest/JJS/smallest shift/NN/shift there/RB/there will/MD/will be/VB/be a/DT/a mismatch/NN/mismatch /,/, here/RB/here i/PRP/i get/VBP/get a/DT/a perfect/NN/perfect match/NN/match /,/, there/EX/there is/VBZ/is a/DT/a match/NN/match between/IN/between these/NNP/these. so/RB/so /,/, just/RB/just says/VBZ/says that/IN/that this/DT/this is/VBZ/is the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of the/DT/the string/NN/string /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of the/DT/the string/NNP/string. i/PRP/i want/VBP/want actually/RB/actually then/RB/then to/TO/to be/VB/be proper/JJ/proper prefix/NN/prefix of/IN/of this/DT/this /,/, which/WDT/which is/VBZ/is the/DT/the suffix/NNP/suffix. so/RB/so /,/, then/RB/then the/DT/the crucial/JJ/crucial thing/NN/thing /,/, the/DT/the thing/NN/thing that/WDT/that we/PRP/we want/VBP/want to/TO/to find/VB/find out/RP/out this/DT/this is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 02/CD/02 /CD/) so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing is/VBZ/is this/DT/this quantity/NN/quantity is/VBZ/is a/DT/a function/NN/function of/IN/of the/DT/the pattern/NN/pattern and/CC/and can/MD/can be/VB/be pre-computed/NNP/pre-computed. so/RB/so /,/, i/PRP/i can/MD/can pre-compute/VB/pre-compute this/DT/this value/NN/value as/IN/as to/TO/to for/IN/for each/DT/each mismatch/NN/mismatch how/WRB/how much/JJ/much to/TO/to shifted/VBN/shifted by/NNP/by. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this function/NN/function of/IN/of the/DT/the pattern/NN/pattern /,/, that/IN/that i/PRP/i want/VBP/want to/TO/to compute/VB/compute is/VBZ/is for/IN/for each/DT/each i/PRP/i /,/, for/IN/for each/DT/each position/NN/position let/NN/let us/PRP/us say/VBP/say find/VBP/find the/DT/the largest/JJS/largest prefix/NN/prefix which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NNP/suffix. so/RB/so /,/, i/PRP/i have/VBP/have actually/RB/actually not/RB/not defined/VBN/defined prefix/NN/prefix and/CC/and suffix/CD/suffix i/PRP/i hope/VBP/hope you/PRP/you know/VBP/know what/WP/what it/PRP/it is/VBZ/is ?/./? so/RB/so /,/, given/VBN/given a/DT/a string/NN/string a/DT/a prefix/NN/prefix is/VBZ/is all/DT/all the/DT/the initial/JJ/initial portions/NNS/portions /,/, the/DT/the initial/JJ/initial the/DT/the first/JJ/first i/PRP/i portion/NN/portion is/VBZ/is a/DT/a prefix/NNP/prefix. and/CC/and suffix/CD/suffix is/VBZ/is just/RB/just a/DT/a last/JJ/last portion/NN/portion /,/, this/DT/this is/VBZ/is suffix/CD/suffix and/CC/and this/DT/this is/VBZ/is the/DT/the prefix/NNP/prefix. so/RB/so /,/, given/VBN/given any/DT/any string/NN/string this/DT/this is/VBZ/is the/DT/the prefix/NN/prefix and/CC/and that/IN/that is/VBZ/is the/DT/the suffix/NNP/suffix. so/RB/so /,/, given/VBN/given any/DT/any string/NN/string i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the largest/JJS/largest prefix/NN/prefix /,/, let/VB/let us/PRP/us say/VB/say largest/JJS/largest proper/NN/proper prefix/NN/prefix which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NNP/suffix. clearly/RB/clearly /,/, if/IN/if i/PRP/i take/VBP/take a/DT/a string/NN/string /,/, the/DT/the string/NN/string is/VBZ/is a/DT/a prefix/NN/prefix of/IN/of itself/PRP/itself and/CC/and suffix/CD/suffix of/IN/of itself/NNP/itself. but/CC/but /,/, i/PRP/i want/VBP/want the/DT/the largest/JJS/largest proper/NN/proper prefix/NN/prefix of/IN/of a/DT/a string/NN/string /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NNP/suffix. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i want/VBP/want to/TO/to compute/NNP/compute. supposing/NN/supposing /,/, i/PRP/i have/VBP/have computed/VBN/computed this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 05/CD/05 /CD/) so/RB/so /,/, i/PRP/i have/VBP/have pattern/JJ/pattern p/NN/p 1/CD/1 through/IN/through p/NN/p n/NN/n is/VBZ/is the/DT/the pattern/NNP/pattern. let/NN/let us/PRP/us say/VBP/say f/NN/f i/PRP/i is/VBZ/is length/JJ/length of/IN/of the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of p/NN/p 1/CD/1 up/IN/up to/TO/to p/VB/p i/PRP/i minus/VBZ/minus 2/CD/2 /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of p/NN/p 1/CD/1 up/IN/up to/TO/to p/VB/p i/PRP/i minus/VBZ/minus 1/CD/1. this/DT/this p/NN/p i/PRP/i minus/VBZ/minus 2/CD/2 is/VBZ/is just/RB/just to/TO/to make/VB/make it/PRP/it proper/JJR/proper prefix/NNP/prefix. so/RB/so /,/, any/DT/any prefix/NN/prefix of/IN/of this/NNP/this. so/RB/so /,/, length/NN/length of/IN/of the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of this/DT/this /,/, which/WDT/which is/VBZ/is also/RB/also suffix/CD/suffix of/IN/of this/DT/this i/NN/i could/MD/could have/VB/have written/VBN/written p/NN/p i/PRP/i minus/VBZ/minus 1/CD/1. but/CC/but /,/, then/RB/then i/PRP/i will/MD/will mention/VB/mention the/DT/the longest/JJS/longest proper/NN/proper prefix/NNP/prefix. so/RB/so /,/, supposing/VBG/supposing i/PRP/i have/VBP/have computed/VBN/computed this/DT/this for/IN/for each/DT/each i/PRP/i /,/, for/IN/for each/DT/each position/NN/position in/IN/in the/DT/the pattern/NN/pattern of/IN/of computer/NN/computer this/DT/this f/NN/f i/PRP/i /,/, which/WDT/which is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus 2/CD/2 /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of this/DT/this /,/, which/WDT/which means/NNP/means. if/IN/if i/PRP/i take/VBP/take any/DT/any other/JJ/other prefix/NN/prefix which/WDT/which is/VBZ/is longer/RBR/longer /,/, than/IN/than f/NN/f i/PRP/i then/RB/then it/PRP/it will/MD/will not/RB/not be/VB/be a/DT/a suffix/NN/suffix of/IN/of this/DT/this pattern/NNP/pattern. now/RB/now /,/, on/IN/on mismatch/NN/mismatch at/IN/at position/NN/position i/PRP/i what/WP/what can/MD/can i/VB/i say/VB/say ?/./? i/PRP/i say/VBP/say /,/, that/IN/that you/PRP/you can/MD/can shift/VB/shift the/DT/the pattern/NN/pattern by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus f/NN/f i/NNP/i. i/PRP/i can/MD/can shifted/VB/shifted by/IN/by this/DT/this much/JJ/much /,/, given/VBN/given f/NN/f i/PRP/i which/WDT/which is/VBZ/is defined/VBN/defined this/DT/this way/NNP/way. then/RB/then /,/, on/IN/on mismatch/NN/mismatch at/IN/at position/NN/position i/PRP/i /,/, i/PRP/i can/MD/can shift/VB/shift the/DT/the pattern/NN/pattern by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus f/NN/f i/NNP/i. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 31/CD/31 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my text/NN/text /,/, this/DT/this is/VBZ/is the/DT/the pattern/NN/pattern and/CC/and this/DT/this is/VBZ/is the/DT/the ith/NN/ith position/NN/position in/IN/in the/DT/the pattern/NN/pattern and/CC/and there/EX/there is/VBZ/is a/DT/a mismatch/NNP/mismatch. now/RB/now i/PRP/i know/VBP/know /,/, so/RB/so let/VB/let us/PRP/us see/VB/see what/WP/what this/DT/this is/VBZ/is /NNP/( /:/( refer/NN/refer time/NN/time /:/: 41/CD/41 /:/: 58/CD/58 /CD/) /CD/) this/DT/this says/VBZ/says f/NN/f i/PRP/i is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest prefix/NN/prefix /,/, which/WDT/which is/VBZ/is also/RB/also suffix/NNP/suffix. so/RB/so /,/, let/VB/let me/PRP/me if/IN/if i/PRP/i put/VBD/put the/DT/the term/NN/term here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the string/NN/string that/IN/that i/PRP/i am/VBP/am considering/VBG/considering now/NNP/now. i/PRP/i am/VBP/am only/RB/only looking/VBG/looking at/IN/at /CD/( /CD/( refer/NN/refer time/NN/time /:/: 42/CD/42 /:/: 15/CD/15 /CD/) /CD/) p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus 1/CD/1 the/DT/the mismatch/NN/mismatch is/VBZ/is at/IN/at i/NNP/i. but/CC/but i/PRP/i am/VBP/am looking/VBG/looking at/IN/at p/NN/p 1/CD/1 through/IN/through p/NN/p i/PRP/i minus/VBZ/minus 1/CD/1 good/NNP/good. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the string/NN/string i/PRP/i am/VBP/am looking/VBG/looking at/NNP/at. and/CC/and i/PRP/i know/VBP/know that/IN/that which/WDT/which is/VBZ/is the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of this/DT/this same/JJ/same string/NN/string /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NNP/suffix. this/DT/this i/PRP/i know/VBP/know as/IN/as length/NN/length l/NN/l i/PRP/i /,/, which/WDT/which means/VBZ/means if/IN/if i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to this/DT/this position/NNP/position. then/RB/then /,/, there/EX/there is/VBZ/is a/DT/a match/NN/match here/NNP/here. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match here/RB/here i/PRP/i know/VBP/know that/IN/that the/DT/the text/NN/text as/IN/as match/NN/match everywhere/RB/everywhere here/NNP/here. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a match/NN/match in/IN/in the/DT/the text/NN/text i/PRP/i also/RB/also know/VBP/know /,/, that/IN/that this/DT/this is/VBZ/is a/DT/a longest/NN/longest prefix/NN/prefix which/WDT/which means/VBZ/means if/IN/if i/PRP/i shifted/VBD/shifted by/IN/by any/DT/any less/JJR/less /,/, there/EX/there will/MD/will be/VB/be a/DT/a mismatch/NN/mismatch at/IN/at some/DT/some position/NN/position /,/, which/WDT/which means/VBZ/means you/PRP/you have/VBP/have be/VB/be a/DT/a mismatch/NN/mismatch in/IN/in the/DT/the text/NNP/text. so/RB/so /,/, the/DT/the among/JJ/among time/NN/time move/NN/move is/VBZ/is this/DT/this the/DT/the among/IN/among the/DT/the shift/NN/shift the/DT/the pattern/NN/pattern is/VBZ/is this/DT/this /,/, this/DT/this is/VBZ/is i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, among/IN/among the/DT/the shift/NN/shift the/DT/the pattern/NN/pattern is/VBZ/is i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus l/NN/l i/PRP/i which/WDT/which is/VBZ/is what/WP/what we/PRP/we had/VBD/had f/NN/f i/PRP/i this/DT/this is/VBZ/is f/NN/f i/NNP/i. so/RB/so /,/, i/PRP/i must/MD/must shift/VB/shift this/DT/this by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus f/NN/f i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i have/VBP/have said/VBN/said in/IN/in the/DT/the previous/JJ/previous step/NNP/step. so/RB/so /,/, once/RB/once i/PRP/i compute/VBP/compute these/DT/these f/NN/f i/PRP/i 's/VBZ/'s if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch of/IN/of the/DT/the ith/NN/ith position/NN/position of/IN/of the/DT/the pattern/NN/pattern /,/, if/IN/if p/NN/p i/PRP/i mismatches/VBZ/mismatches the/DT/the text/NNP/text. then/RB/then /,/, i/PRP/i just/RB/just shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus f/NN/f i/NNP/i. i/PRP/i start/VBP/start comparing/VBG/comparing now/NNP/now. so/RB/so /,/, let/VB/let us/PRP/us right/RB/right this/DT/this code/NN/code /:/( /:/( refer/NN/refer time/NN/time /:/: 44/CD/44 /:/: 02/CD/02 /CD/) /CD/) see/NN/see what/WP/what this/DT/this terms/NNS/terms out/NNP/out. so/RB/so /,/, initially/RB/initially i/PRP/i am/VBP/am looking/VBG/looking for/IN/for a/DT/a pattern/NN/pattern in/IN/in a/DT/a text/NNP/text. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 12/CD/12 /CD/) so/RB/so /,/, the/DT/the pointer/NN/pointer to/TO/to the/DT/the pattern/NN/pattern i/PRP/i will/MD/will refer/VB/refer by/IN/by x/NN/x /,/, the/DT/the pointer/NN/pointer to/TO/to text/VB/text i/PRP/i refer/VBP/refer by/IN/by y/NN/y /,/, the/DT/the variable/JJ/variable will/MD/will be/VB/be y/NNP/y. initially/RB/initially my/PRP$/my initialization/NN/initialization is/VBZ/is x/NN/x is/VBZ/is set/VBN/set to/TO/to 1/CD/1 /,/, y/JJ/y set/NN/set to/TO/to 1/CD/1 and/CC/and a/DT/a start/NN/start comparing/NNP/comparing. now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the generic/JJ/generic step/NN/step look/NN/look like/NNP/like. so/RB/so /,/, if/IN/if p/NN/p of/IN/of x/NN/x is/VBZ/is text/JJ/text at/IN/at y/NN/y /,/, this/DT/this is/VBZ/is a/DT/a text/NN/text /,/, this/DT/this is/VBZ/is the/DT/the pattern/NNP/pattern. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match then/RB/then what/WP/what you/PRP/you do/VBP/do ?/./? well/RB/well /,/, i/PRP/i need/VBP/need to/TO/to increment/VB/increment x/NN/x and/CC/and y/NN/y by/IN/by 1/CD/1 and/CC/and then/RB/then continue/NNP/continue. then/RB/then /,/, x/NN/x is/VBZ/is set/VBN/set to/TO/to x/VB/x plus/RB/plus 1/CD/1 /,/, y/JJ/y is/VBZ/is set/VBN/set to/TO/to y/VB/y plus/RB/plus 1/CD/1 and/CC/and i/PRP/i continue/VBP/continue /,/, i/PRP/i will/MD/will have/VB/have to/TO/to go/VB/go back/RB/back in/IN/in a/DT/a loop/NNP/loop. what/WP/what happens/VBZ/happens otherwise/RB/otherwise /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, then/RB/then i/PRP/i know/VBP/know that/IN/that i/PRP/i am/VBP/am a/DT/a shift/NN/shift the/DT/the pattern/NN/pattern by/IN/by this/DT/this much/JJ/much /NN/( /:/( refer/NN/refer time/NN/time /:/: 43/CD/43 /:/: 35/CD/35 /CD/) /CD/) i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus f/NN/f i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is where/WRB/where the/DT/the mismatch/NN/mismatch is/NNP/is... so/RB/so /,/, this/DT/this is/VBZ/is where/WRB/where my/PRP$/my y/NN/y this/DT/this pointer/NN/pointer on/IN/on the/DT/the string/NN/string is/VBZ/is y/JJ/y /,/, the/DT/the pointer/NN/pointer in/IN/in the/DT/the text/NN/text was/VBD/was i/PRP/i here/NNP/here. now/RB/now /,/, what/WDT/what do/VBP/do i/PRP/i set/VB/set it/PRP/it to/TO/to /,/, i/PRP/i set/VBD/set it/PRP/it to/TO/to f/VB/f i/PRP/i plus/RB/plus 1/CD/1 /,/, if/IN/if it/PRP/it your/PRP$/your i/PRP/i initially/RB/initially i/PRP/i set/VBP/set it/PRP/it to/TO/to f/VB/f i/PRP/i plus/RB/plus 1/CD/1. if/IN/if it/PRP/it your/PRP$/your x/NN/x initially/RB/initially i/PRP/i set/VBP/set it/PRP/it to/TO/to f/VB/f i/PRP/i plus/RB/plus 1/CD/1. because/IN/because /,/, i/PRP/i have/VBP/have moved/VBN/moved it/PRP/it by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus f/NN/f i/PRP/i or/CC/or i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus f/NN/f x/NN/x remember/NN/remember my/PRP$/my point/NN/point of/IN/of /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 46/CD/46 /:/: 21/CD/21 /CD/) /CD/) x/NN/x here/RB/here it/PRP/it does/VBZ/does not/RB/not i/NNP/i. but/CC/but /,/, x/NN/x if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, i/PRP/i shifted/VBD/shifted by/IN/by x/NN/x minus/NN/minus 1/CD/1 minus/NN/minus f/NN/f x/NNP/x. so/RB/so /,/, the/DT/the point/NN/point next/IN/next character/NN/character i/PRP/i am/VBP/am going/VBG/going to/TO/to check/VB/check in/IN/in the/DT/the pattern/NN/pattern is/VBZ/is nothing/NN/nothing but/CC/but f/NN/f x/NN/x plus/CC/plus 1/CD/1. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do this/NNP/this. so/RB/so /,/, else/RB/else x/NN/x is/VBZ/is set/VBN/set to/TO/to f/NN/f x/NN/x plus/CC/plus 1/CD/1 /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i want/VBP/want to/TO/to do/NNP/do. there/RB/there just/RB/just one/CD/one case/NN/case that/WDT/that we/PRP/we need/VBP/need to/TO/to take/VB/take care/NN/care of/IN/of which/WDT/which is/VBZ/is /,/, this/DT/this actually/RB/actually is/VBZ/is true/JJ/true when/WRB/when x/NN/x is/VBZ/is not/RB/not equal/JJ/equal to/TO/to 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is when/WRB/when x/NN/x else/RB/else /,/, if/IN/if x/NN/x note/NN/note equal/JJ/equal to/TO/to 1/CD/1 then/RB/then you/PRP/you do/VBP/do this/NNP/this. now/RB/now /,/, if/IN/if x/NN/x equals/NNS/equals 1/CD/1 /,/, what/WP/what is/VBZ/is this/DT/this mean/JJ/mean ?/./? let/NN/let me/PRP/me the/DT/the first/JJ/first character/NN/character of/IN/of the/DT/the pattern/NN/pattern /,/, there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch with/IN/with the/DT/the text/NNP/text. and/CC/and comparing/VBG/comparing the/DT/the pattern/NN/pattern with/IN/with the/DT/the text/NN/text /,/, if/IN/if x/NN/x equals/NNS/equals to/TO/to 1/CD/1 is/VBZ/is the/DT/the first/JJ/first character/NNP/character. so/RB/so /,/, the/DT/the first/JJ/first character/NN/character of/IN/of the/DT/the match/NN/match pattern/NN/pattern mismatches/NNS/mismatches with/IN/with the/DT/the text/NNP/text. then/RB/then /,/, i/PRP/i just/RB/just move/VB/move both/DT/both pointers/NNS/pointers i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern by/IN/by one/CD/one and/CC/and i/PRP/i move/VBP/move the/DT/the text/NN/text pointer/NN/pointer by/IN/by one/NNP/one. so/RB/so /,/, let/VB/let me/PRP/me right/RB/right this/DT/this all/DT/all it/PRP/it is/VBZ/is inside/JJ/inside else/NNP/else. so/RB/so /,/, if/IN/if x/NN/x equals/NNS/equals 1/CD/1 then/RB/then y/JJ/y is/VBZ/is y/JJ/y plus/NN/plus 1/CD/1. so/RB/so /,/, i/PRP/i have/VBP/have i/PRP/i just/RB/just increment/JJ/increment the/DT/the text/NN/text pointer/NN/pointer by/IN/by one/NNP/one. so/RB/so /,/, all/DT/all this/DT/this it/PRP/it is/VBZ/is inside/JJ/inside the/DT/the else/NNP/else. so/RB/so /,/, this/DT/this is/VBZ/is inside/NN/inside the/DT/the else/NN/else and/CC/and the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is in/IN/in a/DT/a loop/NNP/loop. when/WRB/when do/VBP/do have/VBP/have success/NN/success /,/, when/WRB/when do/VBP/do i/PRP/i stop/NNP/stop. well/RB/well /,/, i/PRP/i stop/VBP/stop when/WRB/when x/NN/x becomes/VBZ/becomes size/NN/size of/IN/of p/NN/p plus/CC/plus 1/CD/1. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that to/TO/to success/NN/success /,/, if/IN/if x/NN/x is/VBZ/is size/NN/size of/IN/of p/NN/p plus/CC/plus 1/CD/1 or/CC/or m/NN/m plus/CC/plus 1/CD/1 /,/, which/WDT/which means/VBZ/means i/PRP/i have/VBP/have match/JJ/match successfully/RB/successfully the/DT/the m/NN/m positions/NNS/positions of/IN/of the/DT/the pattern/NNP/pattern. then/RB/then /,/, i/PRP/i have/VBP/have found/VBN/found the/DT/the pattern/NN/pattern in/IN/in the/DT/the text/NN/text /,/, this/DT/this is/VBZ/is the/DT/the success/NN/success and/CC/and the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is in/IN/in a/DT/a loop/NNP/loop. so/RB/so /,/, in/IN/in a/DT/a while/NN/while loop/NN/loop you/PRP/you can/MD/can check/VB/check whether/IN/whether x/NN/x is/VBZ/is p/NN/p plus/RB/plus 1/CD/1 or/CC/or not/NNP/not. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the procedure/NN/procedure this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm given/VBN/given f/NN/f x/NNP/x. in/IN/in this/DT/this function/NN/function f/NN/f x/NN/x for/IN/for each/DT/each f/NN/f i/PRP/i for/IN/for each/DT/each position/NN/position i/NNP/i. then/RB/then /,/, the/DT/the algorithm/NN/algorithm for/IN/for searching/VBG/searching /,/, this/DT/this pattern/NN/pattern in/IN/in the/DT/the text/NN/text is/VBZ/is this/NNP/this. and/CC/and now/RB/now let/VB/let us/PRP/us see/VB/see how/WRB/how much/RB/much time/NN/time this/DT/this takes/VBZ/takes ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 31/CD/31 /CD/) so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the time/NN/time /,/, the/DT/the time/NN/time let/NN/let me/PRP/me quickly/RB/quickly write/JJ/write the/DT/the main/JJ/main loop/NN/loop again/RB/again /,/, it/PRP/it is/VBZ/is says/VBZ/says if/IN/if p/NN/p x/NN/x equals/NNS/equals t/VBP/t y/NN/y /,/, then/RB/then x/VB/x is/VBZ/is made/VBN/made x/NN/x plus/RB/plus 1/CD/1 /,/, y/JJ/y is/VBZ/is made/VBN/made y/NN/y plus/RB/plus 1/CD/1 else/RB/else the/DT/the crucial/JJ/crucial step/NN/step is/NNP/is... if/IN/if x/NN/x not/RB/not equal/JJ/equal to/TO/to 1/CD/1 /,/, then/RB/then x/VB/x is/VBZ/is f/NN/f x/NN/x plus/CC/plus 1/CD/1. so/RB/so /,/, you/PRP/you shifted/VBD/shifted the/DT/the pattern/NN/pattern if/IN/if x/NN/x equal/JJ/equal to/TO/to 1/CD/1. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, then/RB/then y/JJ/y is/VBZ/is y/JJ/y plus/NN/plus 1/CD/1 in/IN/in the/DT/the new/JJ/new loop/NN/loop /,/, this/DT/this is/VBZ/is algorithm/NN/algorithm and/CC/and then/RB/then /,/, you/PRP/you check/VBP/check for/IN/for success/NNP/success. so/RB/so /,/, how/WRB/how much/JJ/much timed/VBN/timed does/VBZ/does it/PRP/it take/VB/take /,/, well/RB/well it/PRP/it is/VBZ/is a/DT/a number/NN/number of/IN/of times/NNS/times these/DT/these statement/NN/statement are/VBP/are executed/NNP/executed. so/RB/so /,/, how/WRB/how many/JJ/many times/NNS/times are/VBP/are these/DT/these executed/VBN/executed ?/./? well/RB/well /,/, i/PRP/i can/MD/can count/VB/count number/NN/number of/IN/of comparisons/NNS/comparisons /,/, this/DT/this will/MD/will tell/VB/tell me/PRP/me the/DT/the order/NN/order of/IN/of the/DT/the algorithm/NNP/algorithm. now/RB/now /,/, the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, that/IN/that i/PRP/i make/VBP/make totally/RB/totally over/IN/over is/VBZ/is nothing/NN/nothing but/CC/but number/NN/number of/IN/of successful/JJ/successful comparisons/NNS/comparisons /,/, which/WDT/which is/VBZ/is number/NN/number of/IN/of matches/NNS/matches plus/CC/plus number/NN/number of/IN/of mismatches/NNP/mismatches. so/RB/so /,/, now/RB/now let/VB/let us/PRP/us look/VB/look at/IN/at each/DT/each of/IN/of these/DT/these in/IN/in term/NN/term /,/, this/DT/this is/VBZ/is very/RB/very similar/JJ/similar to/TO/to the/DT/the merge/NN/merge sort/NNP/sort. so/RB/so /,/, i/PRP/i would/MD/would /,/, once/RB/once you/PRP/you look/VBP/look at/IN/at this/DT/this analysis/NN/analysis go/VBP/go back/RB/back and/CC/and check/NN/check out/RP/out merge/NN/merge sort/NNP/sort. so/RB/so /,/, now/RB/now what/WP/what is/VBZ/is the/DT/the number/NN/number of/IN/of successful/JJ/successful comparisons/NNP/comparisons. now/RB/now /,/, each/DT/each time/NN/time there/RB/there is/VBZ/is a/DT/a successful/JJ/successful comparison/NN/comparison /,/, why/WRB/why increases/NNS/increases by/IN/by one/CD/one /,/, check/NN/check out/IN/out that/DT/that y/NN/y increase/NN/increase by/IN/by 1/CD/1 y/NN/y never/RB/never goes/VBZ/goes down/NNP/down. the/DT/the pointer/NN/pointer on/IN/on the/DT/the texts/NNS/texts never/RB/never goes/VBZ/goes back/RB/back always/RB/always goes/VBZ/goes forward/NNP/forward. so/RB/so /,/, the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons each/DT/each time/NN/time y/NN/y goes/VBZ/goes up/RP/up by/IN/by one/CD/one it/PRP/it is/VBZ/is start/VB/start set/VBN/set 1/CD/1 ends/NNS/ends up/IN/up at/IN/at n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1 /,/, because/IN/because y/NN/y this/DT/this smallest/NN/smallest value/NN/value is/VBZ/is 1/CD/1 /,/, the/DT/the largest/JJS/largest value/NN/value is/VBZ/is n/NNP/n. and/CC/and each/DT/each time/NN/time there/RB/there is/VBZ/is a/DT/a successful/JJ/successful comparison/NN/comparison it/PRP/it increases/VBZ/increases by/IN/by 1/CD/1. how/WRB/how number/NN/number of/IN/of mismatches/NNS/mismatches /,/, well/RB/well in/IN/in one/CD/one case/NN/case x/NN/x drops/NNS/drops by/IN/by at/IN/at least/JJS/least 1/CD/1 /,/, in/IN/in the/DT/the other/JJ/other case/NN/case y/NN/y increases/NNS/increases by/IN/by 1/CD/1. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at y/NN/y minus/NN/minus x/NN/x /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this function/NN/function y/NN/y minus/NN/minus x/NNP/x. this/DT/this always/VBZ/always increases/NNS/increases /,/, when/WRB/when there/EX/there is/VBZ/is a/DT/a mismatch/NNP/mismatch. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match y/NN/y minus/NN/minus x/NN/x remains/VBZ/remains the/DT/the same/JJ/same both/DT/both of/IN/of them/PRP/them go/VBP/go up/RP/up by/IN/by 1/CD/1 nothing/NN/nothing happens/NNS/happens to/TO/to this/NNP/this. if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, this/DT/this increases/NNS/increases initially/RB/initially this/DT/this is/VBZ/is 0/-NONE-/0 /,/, the/DT/the largest/JJS/largest this/DT/this can/MD/can be/VB/be is/VBZ/is is/VBZ/is at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1. so/RB/so /,/, number/NN/number of/IN/of mismatches/NNS/mismatches is/VBZ/is also/RB/also n/RB/n minus/VBZ/minus 1/CD/1. the/DT/the other/JJ/other way/NN/way to/TO/to see/VB/see that/IN/that the/DT/the number/NN/number of/IN/of mismatches/NNS/mismatches at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1 is/VBZ/is that/IN/that each/DT/each time/NN/time there/RB/there is/VBZ/is a/DT/a mismatch/NNP/mismatch. i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by at/IN/at least/JJS/least one/NNP/one. remember/NN/remember /,/, there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch i/PRP/i shift/VBP/shift the/DT/the pattern/NNP/pattern. so/RB/so /,/, i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by at/IN/at least/JJS/least one/CD/one /,/, the/DT/the number/NN/number of/IN/of time/NN/time i/PRP/i can/MD/can shift/VB/shift the/DT/the pattern/NN/pattern is/VBZ/is at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1. so/RB/so /,/, the/DT/the number/NN/number of/IN/of mismatches/NNS/mismatches /,/, number/NN/number of/IN/of unsuccessful/JJ/unsuccessful comparisons/NNS/comparisons is/VBZ/is at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is twice/NN/twice and/CC/and minus/NN/minus 1/CD/1 /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we had/VBD/had for/IN/for those/DT/those small/JJ/small examples/NNP/examples. but/CC/but /,/, this/DT/this now/RB/now shows/VBZ/shows that/IN/that true/JJ/true for/IN/for any/DT/any example/NNP/example. all/DT/all we/PRP/we need/VBP/need to/TO/to do/VB/do now/RB/now which/WDT/which we/PRP/we do/VBP/do next/JJ/next time/NN/time is/VBZ/is to/TO/to compute/VB/compute this/DT/this function/NN/function f/NN/f x/NNP/x. once/RB/once we/PRP/we compute/VBP/compute that/IN/that we/PRP/we are/VBP/are through/NNP/through. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institution/NN/institution of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture ?/./? 15/CD/15 pattern/NN/pattern matching/NN/matching ?/./? ii/NN/ii we/PRP/we were/VBD/were discussing/VBG/discussing pattern/NN/pattern matching/VBG/matching in/IN/in the/DT/the last/JJ/last lecture/NNP/lecture. the/DT/the problem/NN/problem was/VBD/was given/VBN/given a/DT/a pattern/NN/pattern and/CC/and text/NNP/text. you/PRP/you want/VBP/want to/TO/to find/VB/find let/NN/let us/PRP/us say/VBP/say the/DT/the first/JJ/first occurrence/NN/occurrence of/IN/of this/DT/this pattern/NN/pattern in/IN/in the/DT/the text/NNP/text. and/CC/and we/PRP/we were/VBD/were on/IN/on our/PRP$/our way/NN/way to/TO/to finding/NN/finding linear/NN/linear time/NN/time algorithm/NN/algorithm for/IN/for this/DT/this problem/NNP/problem. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing was/VBD/was that/IN/that the/DT/the notice/NN/notice that/IN/that /,/, what/WP/what we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do on/NNP/on. so/RB/so /,/, we/PRP/we start/VBP/start matching/VBG/matching the/DT/the pattern/NN/pattern to/TO/to the/DT/the text/NN/text and/CC/and once/RB/once this/DT/this mismatch/NNP/mismatch. we/PRP/we would/MD/would like/VB/like to/TO/to shift/VB/shift the/DT/the pattern/NNP/pattern. the/DT/the worst/JJS/worst case/NN/case was/VBD/was algorithm/NN/algorithm the/DT/the proof/NN/proof of/IN/of the/DT/the algorithm/NN/algorithm shifted/VBD/shifted the/DT/the pattern/NN/pattern by/IN/by 1/CD/1. and/CC/and started/VBD/started comparing/VBG/comparing from/IN/from the/DT/the beginning/NN/beginning again/NNP/again. we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do much/RB/much better/RBR/better than/IN/than this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 52/CD/52 /CD/) and/CC/and we/PRP/we will/MD/will let/VB/let us/PRP/us quickly/RB/quickly go/VBP/go away/RB/away what/WP/what we/PRP/we did/VBD/did last/JJ/last time/NNP/time. so/IN/so /,/, you/PRP/you have/VBP/have the/DT/the text/NN/text and/CC/and you/PRP/you have/VBP/have let/VBN/let us/PRP/us say/VBP/say the/DT/the pattern/NN/pattern and/CC/and let/VB/let us/PRP/us say/VB/say you/PRP/you are/VBP/are comparing/VBG/comparing this/DT/this position/NN/position starting/VBG/starting from/IN/from this/DT/this position/NNP/position. now/RB/now /,/, you/PRP/you compare/VBP/compare till/RB/till you/PRP/you find/VBP/find a/DT/a mismatch/NNP/mismatch. let/NN/let us/PRP/us say/VBP/say that/IN/that is/VBZ/is mismatch/JJ/mismatch and/CC/and your/PRP$/your matches/NNS/matches is/VBZ/is all/DT/all over/IN/over this/DT/this place/NN/place /,/, what/WP/what you/PRP/you like/VBP/like to/TO/to use/VB/use is/VBZ/is the/DT/the fact/NN/fact that/NNP/that. the/DT/the text/NN/text in/IN/in this/DT/this portion/NN/portion exactly/RB/exactly equally/RB/equally pattern/JJ/pattern in/IN/in this/DT/this portion/NNP/portion. this/DT/this is/VBZ/is the/DT/the information/NN/information that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to use/NNP/use. and/CC/and on/IN/on a/DT/a mismatch/NN/mismatch we/PRP/we would/MD/would like/VB/like to/TO/to push/VB/push the/DT/the pattern/NN/pattern as/IN/as much/JJ/much as/IN/as possible/NNP/possible. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to push/VB/push the/DT/the pattern/NN/pattern the/DT/the maximum/NN/maximum possible/JJ/possible without/IN/without missing/NN/missing and/CC/and occurrence/NN/occurrence of/IN/of the/DT/the pattern/NN/pattern in/IN/in the/DT/the text/NN/text that/IN/that is/VBZ/is the/DT/the goal/NNP/goal. and/CC/and for/IN/for this/DT/this /,/, we/PRP/we set/VBD/set that/IN/that what/WP/what we/PRP/we want/VBP/want to/TO/to know/VB/know is/VBZ/is for/IN/for each/DT/each position/NN/position in/IN/in the/DT/the pattern/NNP/pattern. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of this/DT/this /,/, this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern which/WDT/which is/VBZ/is also/RB/also suffix/CD/suffix of/IN/of this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so /,/, this/DT/this is/VBZ/is something/NN/something that/IN/that we/PRP/we want/VBP/want to/TO/to compute/VB/compute ;/:/; because/IN/because if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch and/CC/and we/PRP/we shift/VBP/shift the/DT/the pattern/NN/pattern across/NNP/across. let/NN/let us/PRP/us /,/, say/VBP/say to/TO/to this/DT/this position/NNP/position. then/RB/then we/PRP/we notice/VBP/notice that/IN/that up/IN/up to/TO/to here/NNP/here. this/DT/this is/VBZ/is the/DT/the prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern which/WDT/which is/VBZ/is a/DT/a suffix/NN/suffix of/IN/of this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. there/RB/there is/VBZ/is a/DT/a mismatch/NN/mismatch here/NNP/here. so/RB/so this/DT/this portion/NN/portion /,/, if/IN/if this/DT/this has/VBZ/has to/TO/to match/VB/match prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern has/VBZ/has to/TO/to be/VB/be equal/JJ/equal to/TO/to the/DT/the suffix/NN/suffix of/IN/of the/DT/the pattern/NNP/pattern. and/CC/and since/IN/since /,/, we/PRP/we do/VBP/do not/RB/not want/VB/want to/TO/to miss/VB/miss out/RP/out and/CC/and occurrence/NN/occurrence of/IN/of the/DT/the pattern/NN/pattern in/IN/in the/DT/the text/NNP/text. we/PRP/we find/VBP/find the/DT/the maximum/NN/maximum search/NN/search /,/, i/PRP/i mean/VBP/mean in/IN/in the/DT/the maximum/NN/maximum search/NN/search which/WDT/which means/VBZ/means a/DT/a minimum/JJ/minimum shift/NN/shift which/WDT/which gives/VBZ/gives you/PRP/you this/NNP/this. so/RB/so /,/, we/PRP/we find/VBP/find the/DT/the maximum/NN/maximum length/NN/length of/IN/of a/DT/a prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern /,/, the/DT/the mismatch/NN/mismatch that/IN/that occurred/VBN/occurred here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to find/NNP/find. and/CC/and the/DT/the algorithm/NN/algorithm was/VBD/was once/RB/once we/PRP/we determined/VBD/determined this/NNP/this. this/DT/this is/VBZ/is a/DT/a function/NN/function of/IN/of the/DT/the pattern/NN/pattern and/CC/and can/MD/can be/VB/be pre-computed/NNP/pre-computed. so/RB/so /,/, once/RB/once this/DT/this is/VBZ/is computed/VBN/computed /,/, then/RB/then the/DT/the algorithm/NN/algorithm was/VBD/was clear/JJ/clear /,/, i/PRP/i keep/VBP/keep matching/NNP/matching. once/RB/once i/PRP/i have/VBP/have a/DT/a mismatch/NN/mismatch i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern over/IN/over as/RB/as much/JJ/much as/IN/as i/PRP/i can/NNP/can. and/CC/and i/PRP/i start/VBP/start comparing/VBG/comparing at/IN/at the/DT/the same/JJ/same position/NN/position starting/VBG/starting from/IN/from the/DT/the same/JJ/same position/NN/position on/IN/on the/DT/the text/NNP/text. the/DT/the pattern/NN/pattern is/VBZ/is of/IN/of course/NN/course shifted/NNP/shifted. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 53/CD/53 /CD/) and/CC/and we/PRP/we argue/VBP/argue that/IN/that this/DT/this let/NN/let us/PRP/us look/VBP/look at/IN/at this/DT/this algorithm/NN/algorithm once/RB/once again/NNP/again. this/DT/this is/VBZ/is from/IN/from yesterdays/NNS/yesterdays notes/NNP/notes. so/RB/so /,/, pointer/NN/pointer to/TO/to the/DT/the text/NN/text is/VBZ/is y/JJ/y the/DT/the pointer/NN/pointer to/TO/to the/DT/the pattern/NN/pattern is/VBZ/is x/NNP/x. the/DT/the generic/JJ/generic step/NN/step is/VBZ/is this/DT/this you/PRP/you check/VBP/check if/IN/if these/DT/these are/VBP/are equal/JJ/equal if/IN/if there/EX/there is/VBZ/is a/DT/a match/NNP/match. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match then/RB/then you/PRP/you go/VBP/go on/IN/on to/TO/to the/DT/the next/JJ/next character/NNP/character. you/PRP/you go/VBP/go on/IN/on to/TO/to the/DT/the next/JJ/next character/NN/character in/IN/in the/DT/the pattern/NN/pattern and/CC/and next/JJ/next character/NN/character in/IN/in the/DT/the text/NNP/text. that/IN/that is/VBZ/is what/WP/what this/DT/this portion/NN/portion does/VBZ/does x/NN/x is/VBZ/is x/NN/x plus/RB/plus 1/CD/1 y/NN/y is/VBZ/is y/JJ/y plus/NN/plus 1/CD/1. if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch ignore/NN/ignore the/DT/the x/NN/x equal/JJ/equal to/TO/to 1/CD/1 part/NNP/part. well/RB/well if/IN/if x/NN/x equal/JJ/equal to/TO/to 1/CD/1 /,/, then/RB/then you/PRP/you are/VBP/are the/DT/the first/JJ/first position/NN/position in/IN/in the/DT/the pattern/NN/pattern which/WDT/which means/VBZ/means your/PRP$/your pattern/NN/pattern shift/NN/shift and/CC/and the/DT/the text/NN/text also/RB/also and/CC/and the/DT/the pointer/NN/pointer on/IN/on the/DT/the text/NN/text also/RB/also shift/NNP/shift. the/DT/the pattern/NN/pattern shifting/VBG/shifting does/VBZ/does not/RB/not make/VB/make any/DT/any changes/NNS/changes /,/, because/IN/because x/NN/x remains/VBZ/remains 1/CD/1. but/CC/but /,/, y/NN/y increases/NNS/increases by/IN/by 1/CD/1 /,/, because/IN/because now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start comparing/NN/comparing the/DT/the next/JJ/next character/NN/character in/IN/in the/DT/the text/NNP/text. now/RB/now /,/, if/IN/if x/NN/x is/VBZ/is not/RB/not equal/JJ/equal to/TO/to 1/CD/1 that/IN/that is/VBZ/is the/DT/the crucial/JJ/crucial stack/NN/stack that/WDT/that we/PRP/we set/NNP/set. then/RB/then /,/, this/DT/this is/VBZ/is where/WRB/where you/PRP/you shift/VBP/shift the/DT/the pattern/NN/pattern why/WRB/why remains/VBZ/remains the/DT/the same/NNP/same. so/RB/so /,/, you/PRP/you start/VBP/start comparing/VBG/comparing from/IN/from the/DT/the mismatch/NN/mismatch onwards/NNS/onwards this/DT/this is/VBZ/is what/WP/what happens/NNS/happens /VBP/( /:/( refer/NN/refer time/NN/time /:/: 1/LS/1 /:/: 52/CD/52 /CD/) /CD/) /./. this/DT/this y/NN/y remains/VBZ/remains the/DT/the same/JJ/same /,/, but/CC/but now/RB/now the/DT/the pattern/NN/pattern shifts/NNP/shifts. so/RB/so /,/, initially/RB/initially x/NN/x was/VBD/was pointing/VBG/pointing here/RB/here now/RB/now x/VBP/x will/MD/will point/VB/point here/NNP/here. this/DT/this is/VBZ/is a/DT/a new/JJ/new x/NN/x this/DT/this is/VBZ/is the/DT/the old/JJ/old x/NN/x this/DT/this a/DT/a new/JJ/new x/NNP/x. and/CC/and how/WRB/how do/VBP/do you/PRP/you find/VB/find this/DT/this new/JJ/new x/NN/x /,/, new/JJ/new x/NN/x is/VBZ/is nothing/NN/nothing but/CC/but this/DT/this length/NN/length plus/VBZ/plus 1/CD/1 and/CC/and that/IN/that length/NN/length we/PRP/we have/VBP/have calculated/VBN/calculated already/RB/already and/CC/and which/WDT/which is/VBZ/is f/NN/f x/NNP/x. so/RB/so /,/, f/NN/f is/VBZ/is an/DT/an array/NN/array then/RB/then you/PRP/you want/VBP/want to/TO/to write/VB/write you/PRP/you know/VB/know f/NN/f of/IN/of x/NNP/x. if/IN/if f/NN/f is/VBZ/is stored/VBN/stored in/IN/in an/DT/an array/NN/array /,/, then/RB/then you/PRP/you would/MD/would write/VB/write want/JJ/want to/TO/to find/VB/find a/DT/a prefix/NN/prefix ?/./? so/RB/so /,/, this/DT/this gives/VBZ/gives you/PRP/you the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern up/RP/up to/TO/to x/VB/x minus/NN/minus 1/CD/1 which/WDT/which is/VBZ/is also/RB/also suffix/CD/suffix of/IN/of the/DT/the pattern/NN/pattern up/RP/up to/TO/to x/VB/x minus/NN/minus 1/CD/1 /,/, only/RB/only you/PRP/you need/VBP/need the/DT/the prefix/NN/prefix to/TO/to be/VB/be a/DT/a proper/NN/proper prefix/NNP/prefix. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say the/DT/the prefix/NN/prefix of/IN/of p/NN/p 1/CD/1 up/IN/up to/TO/to p/VB/p x/NN/x minus/NN/minus 2/CD/2 prefix/CD/prefix of/IN/of this/DT/this which/WDT/which is/VBZ/is the/DT/the suffix/NN/suffix of/IN/of p/NN/p 1/CD/1 up/IN/up to/TO/to p/VB/p x/NN/x minus/NN/minus 1/CD/1. so/RB/so that/IN/that is/VBZ/is what/WP/what we/PRP/we wanted/NNP/wanted. so/RB/so /,/, this/DT/this moves/NNS/moves the/DT/the pattern/NN/pattern up/RP/up that/DT/that is/VBZ/is what/WP/what this/DT/this says/NNP/says. and/CC/and you/PRP/you start/VB/start comparing/VBG/comparing again/RB/again this/DT/this is/VBZ/is in/IN/in a/DT/a loop/NNP/loop. the/DT/the question/NN/question was/VBD/was what/WP/what is/VBZ/is the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons we/PRP/we make/VBP/make /,/, because/IN/because this/DT/this dictate/NN/dictate the/DT/the order/NN/order of/IN/of the/DT/the algorithm/NNP/algorithm. now/RB/now /,/, this/DT/this i/PRP/i can/MD/can write/VB/write as/RB/as number/NN/number of/IN/of successful/JJ/successful comparisons/NNS/comparisons in/IN/in number/NN/number of/IN/of unsuccessful/JJ/unsuccessful /,/, which/WDT/which mean/JJ/mean number/NN/number of/IN/of times/NNS/times i/PRP/i take/VBP/take the/DT/the /,/, if/IN/if else/RB/else number/NN/number of/IN/of times/NNS/times i/PRP/i take/VBP/take the/DT/the else/NN/else close/NNP/close. well/RB/well in/IN/in the/DT/the /,/, if/IN/if close/JJ/close we/PRP/we notice/VBP/notice that/IN/that each/DT/each time/NN/time /,/, this/DT/this is/VBZ/is a/DT/a match/NN/match y/NN/y moves/NNS/moves up/IN/up by/IN/by 1/CD/1. the/DT/the pointer/NN/pointer in/IN/in the/DT/the text/NN/text moves/VBZ/moves by/IN/by 1/CD/1 increases/NNP/increases. we/PRP/we also/RB/also notice/VBP/notice that/IN/that the/DT/the pointer/NN/pointer in/IN/in the/DT/the text/NN/text never/RB/never moves/VBZ/moves back/RB/back it/PRP/it always/RB/always moves/VBZ/moves forward/NNP/forward. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons can/MD/can be/VB/be at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1. total/NN/total number/NN/number of/IN/of successful/JJ/successful comparison/NN/comparison can/MD/can be/VB/be at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1 /,/, because/IN/because why/WRB/why increases/NNS/increases each/DT/each time/NNP/time. now/RB/now /,/, what/WDT/what about/IN/about unsuccessful/JJ/unsuccessful comparisons/NNS/comparisons here/RB/here ?/./? well/RB/well again/RB/again let/VB/let us/PRP/us look/VB/look at/IN/at only/RB/only x/VB/x not/RB/not equal/JJ/equal to/TO/to 1/CD/1 /,/, when/WRB/when x/NN/x is/VBZ/is not/RB/not equal/JJ/equal to/TO/to 1/CD/1. then/RB/then /,/, the/DT/the pattern/NN/pattern shift/NN/shift the/DT/the text/NN/text pointer/NN/pointer remain/NN/remain as/IN/as it/PRP/it is/VBZ/is with/IN/with the/DT/the pattern/NN/pattern shift/NN/shift to/TO/to the/DT/the by/IN/by at/IN/at least/JJS/least 1/CD/1 unit/NNP/unit. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times a/DT/a pattern/NN/pattern /,/, which/WDT/which shift/NN/shift is/VBZ/is at/IN/at most/JJS/most n/JJ/n minus/NN/minus 1/CD/1 and/CC/and well/RB/well that/IN/that is/VBZ/is why/WRB/why this/DT/this is/VBZ/is also/RB/also bounded/VBN/bounded by/IN/by n/NN/n minus/NN/minus 1/CD/1. and/CC/and y/NN/y minus/NN/minus x/NN/x plus/CC/plus 1/CD/1 actually/RB/actually gives/VBZ/gives you/PRP/you the/DT/the position/NN/position of/IN/of the/DT/the head/NN/head of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at y/NN/y minus/NN/minus x/NN/x it/PRP/it points/VBZ/points to/TO/to the/DT/the position/NN/position before/IN/before the/DT/the pattern/NNP/pattern. so/RB/so /,/, x/NN/x points/NNS/points here/RB/here y/JJ/y points/NNS/points here/RB/here /,/, this/DT/this position/NN/position is/VBZ/is actually/RB/actually y/JJ/y minus/NN/minus x/NNP/x. so/RB/so /,/, this/DT/this is/VBZ/is giving/VBG/giving me/PRP/me y/RB/y minus/VBZ/minus x/NNP/x. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at y/NN/y minus/NN/minus x/NN/x since/IN/since the/DT/the pattern/NN/pattern shift/NN/shift this/DT/this will/MD/will strictly/RB/strictly increase/NNP/increase. in/IN/in this/DT/this case/NN/case in/IN/in fact/NN/fact /,/, in/IN/in both/DT/both this/DT/this in/IN/in that/DT/that you/PRP/you can/MD/can see/VB/see that/IN/that /,/, this/DT/this strictly/RB/strictly increase/NNP/increase. why/WRB/why increase/NN/increase in/IN/in the/DT/the first/JJ/first case/NN/case the/DT/the second/JJ/second case/NNP/case. i/PRP/i mean/VBP/mean in/IN/in the/DT/the first/JJ/first case/NN/case x/NN/x decreases/NNS/decreases in/IN/in the/DT/the second/JJ/second case/NN/case here/RB/here when/WRB/when x/NN/x equal/JJ/equal to/TO/to 1/CD/1 y/NN/y increases/NNP/increases. so/RB/so /,/, this/DT/this thing/NN/thing always/RB/always goes/VBZ/goes up/RP/up it/PRP/it never/RB/never goes/VBZ/goes down/NNP/down. even/RB/even when/WRB/when there/EX/there is/VBZ/is a/DT/a match/NN/match it/PRP/it does/VBZ/does not/RB/not go/VB/go down/NNP/down. the/DT/the pattern/NN/pattern remains/VBZ/remains as/IN/as it/PRP/it is/VBZ/is that/IN/that is/VBZ/is what/WP/what that/IN/that is/VBZ/is what/WP/what this/DT/this is/NNP/is. so/RB/so /,/, this/DT/this follow/NN/follow initially/RB/initially starts/VBZ/starts out/RP/out being/VBG/being 0/-NONE-/0 and/CC/and the/DT/the largest/JJS/largest value/NN/value it/PRP/it can/MD/can be/VB/be is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1. so/RB/so /,/, maybe/RB/maybe this/DT/this is/VBZ/is n/NNP/n. so/RB/so /,/, the/DT/the largest/JJS/largest value/NN/value is/VBZ/is n/NNP/n. actually/RB/actually /,/, x/NN/x will/MD/will be/VB/be 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of comparisons/NNS/comparisons is/VBZ/is order/NN/order n/NN/n /,/, it/PRP/it is/VBZ/is let/VB/let us/PRP/us than/IN/than equal/JJ/equal to/TO/to 2/CD/2 n/NN/n clearly/RB/clearly which/WDT/which is/VBZ/is what/WP/what we/PRP/we wanted/VBD/wanted to/TO/to show/NNP/show. so/RB/so once/RB/once we/PRP/we compute/VBP/compute this/DT/this fx/NN/fx /,/, which/WDT/which is/VBZ/is a/DT/a which/WDT/which is/VBZ/is a/DT/a property/NN/property of/IN/of this/NNP/this. if/IN/if the/DT/the pattern/NN/pattern we/PRP/we can/MD/can do/VB/do these/DT/these pattern/NN/pattern matching/VBG/matching in/IN/in linear/JJ/linear timing/NN/timing ?/./? so/RB/so /,/, we/PRP/we still/RB/still left/VBN/left with/IN/with the/DT/the problem/NN/problem of/IN/of computing/NN/computing this/DT/this function/NN/function f/NNP/f. so/RB/so that/IN/that is/VBZ/is something/NN/something we/PRP/we are/VBP/are to/TO/to do/VB/do ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 48/CD/48 /CD/) and/CC/and we/PRP/we will/NNP/will. in/IN/in fact/NN/fact /,/, do/VBP/do this/DT/this do/VB/do it/PRP/it now/NNP/now. so/RB/so /,/, what/WDT/what is/VBZ/is it/PRP/it that/IN/that we/PRP/we want/VBP/want ?/./? so/RB/so /,/, we/PRP/we have/VBP/have given/VBN/given so/RB/so input/VBN/input is/VBZ/is the/DT/the pattern/NN/pattern p/NN/p 1/CD/1 p/NN/p 2/CD/2 p/NN/p 3/CD/3 p/NN/p m/NNP/m. it/PRP/it is/VBZ/is m/NN/m characters/NNS/characters long/RB/long now/RB/now what/WP/what we/PRP/we want/VBP/want as/IN/as output/NN/output is/VBZ/is for/IN/for each/DT/each i/PRP/i /,/, find/VBP/find the/DT/the largest/JJS/largest prefix/NN/prefix largest/JJS/largest or/CC/or longest/JJS/longest maybe/NN/maybe longest/NN/longest prefix/NN/prefix of/IN/of p/NN/p 1/CD/1 p/NN/p 2/CD/2 up/IN/up to/TO/to p/VB/p i/PRP/i minus/VBZ/minus 1/CD/1 /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix p/NN/p 1/CD/1 p/NN/p 2/CD/2 up/IN/up to/TO/to pi/NNP/pi. so/RB/so this/DT/this length/NN/length /,/, we/PRP/we call/VBP/call say/VBP/say li/NNP/li. and/CC/and this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but f/NN/f of/IN/of i/PRP/i plus/VBZ/plus 1/CD/1 from/IN/from the/DT/the previous/JJ/previous this/DT/this is/VBZ/is the/DT/the f/NN/f which/WDT/which was/VBD/was defined/VBN/defined earlier/NNP/earlier. so/RB/so /,/, for/IN/for each/DT/each i/PRP/i for/IN/for each/DT/each position/NN/position i/PRP/i want/VBP/want to/TO/to find/VB/find the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of this/DT/this string/NN/string /,/, which/WDT/which is/VBZ/is the/DT/the sub/NN/sub string/VBG/string of/IN/of this/DT/this /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 42/CD/42 /CD/) so/RB/so /,/, again/RB/again pictorially/RB/pictorially let/VB/let me/PRP/me draw/VB/draw this/NNP/this. so/RB/so /,/, i/PRP/i have/VBP/have this/DT/this is/VBZ/is p/NN/p 1/CD/1 p/NN/p 2/CD/2 up/IN/up to/TO/to pi/VB/pi pi/NN/pi minus/NN/minus 1/CD/1. so/RB/so /,/, i/PRP/i want/VBP/want the/DT/the longest/JJS/longest prefix/NN/prefix which/WDT/which is/VBZ/is suffix/CD/suffix of/IN/of p/NN/p 1/CD/1 up/IN/up to/TO/to pi/VB/pi which/WDT/which means/NNS/means the/DT/the longest/JJS/longest prefix/NN/prefix will/MD/will look/VB/look like/IN/like this/DT/this p/NN/p 1/CD/1 this/DT/this is/VBZ/is pi/NN/pi minus/NN/minus 1/CD/1. so/RB/so that/IN/that the/DT/the minimum/JJ/minimum /,/, i/PRP/i have/VBP/have to/TO/to shift/VB/shift /,/, so/RB/so that/IN/that there/EX/there is/VBZ/is a/DT/a match/NN/match up/RP/up to/TO/to this/DT/this place/NNP/place. this/DT/this length/NN/length is/VBZ/is what/WP/what we/PRP/we want/VBP/want and/CC/and this/DT/this length/NN/length is/VBZ/is called/VBN/called li/NN/li it/PRP/it is/VBZ/is also/RB/also equal/JJ/equal to/TO/to f/NN/f i/PRP/i plus/VBZ/plus 1/CD/1 as/IN/as of/IN/of the/DT/the previous/NNP/previous. so/RB/so /,/, let/VB/let us/PRP/us focus/VB/focus on/IN/on li/NN/li will/MD/will not/RB/not look/VB/look at/IN/at fi/NN/fi as/IN/as if/IN/if not/NNP/not. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i want/VBP/want shift/NN/shift the/DT/the pattern/NN/pattern a/DT/a minimum/NNP/minimum. so/RB/so that/IN/that /,/, there/EX/there is/VBZ/is a/DT/a match/NN/match here/RB/here suffix/CD/suffix of/IN/of this/DT/this string/NN/string is/VBZ/is the/DT/the prefix/NN/prefix of/IN/of that/DT/that string/VBG/string this/DT/this is/VBZ/is a/DT/a prefix/NN/prefix and/CC/and that/IN/that this/DT/this is/VBZ/is the/DT/the suffix/NNP/suffix. this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to compute/VB/compute and/CC/and this/DT/this is/VBZ/is a/DT/a proof/NN/proof force/NN/force way/NN/way of/IN/of doing/VBG/doing this/NNP/this. so/RB/so /,/, what/WDT/what the/DT/the na/NN/na ?/./? ve/NN/ve way/NN/way /,/, well/RB/well i/PRP/i just/RB/just shifted/VBD/shifted by/IN/by 1/CD/1 and/CC/and c/NNP/c. if/IN/if it/PRP/it matches/VBZ/matches shifted/VBN/shifted by/IN/by 2/CD/2 and/CC/and c/NN/c if/IN/if it/PRP/it matches/VBZ/matches shifted/VBN/shifted by/IN/by 3/CD/3 and/CC/and stop/VB/stop the/DT/the first/JJ/first i/PRP/i am/VBP/am i/PRP/i get/VBP/get the/DT/the complete/JJ/complete match/NNP/match. if/IN/if it/PRP/it does/VBZ/does not/RB/not match/VB/match at/IN/at all/DT/all the/DT/the value/NN/value is/VBZ/is 0/-NONE-/0 /,/, this/DT/this length/NN/length is/VBZ/is 0/CD/0. i/PRP/i mean/VBP/mean if/IN/if at/IN/at no/DT/no stage/NN/stage you/PRP/you are/VBP/are find/VBP/find the/DT/the match/NN/match here/RB/here ;/:/; that/DT/that means/VBZ/means /,/, this/DT/this value/NN/value is/VBZ/is 0/CD/0. so/RB/so /,/, the/DT/the na/NN/na ?/./? ve/NN/ve way/NN/way is/VBZ/is for/IN/for each/DT/each position/NN/position up/RP/up to/TO/to i/PRP/i /,/, i/PRP/i do/VBP/do these/DT/these comparisons/NNS/comparisons and/CC/and it/PRP/it looks/VBZ/looks like/IN/like i/PRP/i have/VBP/have to/TO/to do/VB/do about/RB/about for/IN/for position/NN/position j/NN/j i/PRP/i need/VBP/need do/VBP/do i/PRP/i minus/VBZ/minus j/NN/j comparisons/NNP/comparisons. so/RB/so /,/, this/DT/this will/MD/will just/RB/just be/VB/be sigma/VBN/sigma i/PRP/i minus/VBZ/minus j/NN/j /,/, j/NN/j going/VBG/going from/IN/from this/DT/this is/VBZ/is the/DT/the position/NN/position j/NNP/j. so/RB/so /,/, this/DT/this is/VBZ/is firstly/RB/firstly for/IN/for i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to m/NNP/m. for/IN/for each/DT/each i/PRP/i /,/, now/RB/now i/PRP/i need/VBP/need to/TO/to compare/VB/compare for/IN/for each/DT/each i/PRP/i i/PRP/i need/VBP/need to/TO/to start/VB/start this/DT/this off/NN/off from/IN/from j/NN/j /,/, j/NN/j going/VBG/going from/IN/from 1/CD/1 to/TO/to i/PRP/i it/PRP/it is/VBZ/is i/PRP/i minus/VBZ/minus j/NNP/j. so/RB/so /,/, this/DT/this is/VBZ/is too/RB/too much/JJ/much well/RB/well i/PRP/i let/VBP/let you/PRP/you figure/VBP/figure out/RP/out what/WP/what this/DT/this sum/NN/sum is/VBZ/is /,/, but/CC/but this/DT/this is/VBZ/is suddenly/RB/suddenly not/RB/not linear/VB/linear in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the pattern/NN/pattern this/DT/this is/VBZ/is too/RB/too much/JJ/much time/NNP/time. so/RB/so /,/, i/PRP/i guess/VBP/guess you/PRP/you can/MD/can write/VB/write this/DT/this it/PRP/it needed/VBD/needed /,/, but/CC/but the/DT/the time/NN/time taken/VBN/taken by/IN/by this/DT/this just/RB/just too/RB/too much/NNP/much. it/PRP/it is/VBZ/is suddenly/RB/suddenly not/RB/not linear/VB/linear in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the pattern/NNP/pattern. so/RB/so /,/, we/PRP/we want/VBP/want o/RB/o m/NN/m time/NNP/time. so/RB/so /,/, this/DT/this is/VBZ/is not/RB/not so/NNP/so. well/RB/well then/RB/then /,/, what/WDT/what we/PRP/we do/VBP/do ?/./? so/RB/so /,/, we/PRP/we will/MD/will put/VB/put over/IN/over algorithm/NN/algorithm design/NN/design sort/NN/sort principles/NNS/principles to/TO/to use/VB/use some/DT/some extend/NNP/extend. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like we/PRP/we again/NNP/again. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem on/IN/on arrays/NNS/arrays roughly/RB/roughly it/PRP/it is/VBZ/is look/VBP/look like/IN/like a/DT/a problem/NN/problem on/IN/on arrays/NNS/arrays or/CC/or less/NNP/less. so/RB/so /,/, we/PRP/we will/MD/will use/VB/use our/PRP$/our favorite/JJ/favorite inductive/JJ/inductive kind/NN/kind of/IN/of approach/NN/approach will/MD/will use/VB/use our/PRP$/our inductive/JJ/inductive approach/NN/approach and/CC/and assuming/VBG/assuming which/WDT/which means/NNS/means assuming/VBG/assuming that/IN/that i/PRP/i have/VBP/have d1/NNP/d1 it/PRP/it for/IN/for you/PRP/you first/RB/first i/PRP/i minus/VBZ/minus 1/CD/1 places/NNS/places /,/, how/WRB/how do/VBP/do i/PRP/i compute/VB/compute the/DT/the ith/NN/ith value/NN/value ?/./? so/RB/so /,/, the/DT/the value/NN/value of/IN/of l/NN/l i/PRP/i have/VBP/have computed/VBN/computed let/NN/let us/PRP/us say/VBP/say up/RP/up to/TO/to the/DT/the first/JJ/first i/PRP/i minus/VBZ/minus 1/CD/1 places/NNS/places and/CC/and i/PRP/i want/VBP/want to/TO/to compute/VB/compute li/NN/li /,/, l1/NNP/l1 l2/NNP/l2 up/IN/up to/TO/to li/VB/li minus/NN/minus 1/CD/1 is/VBZ/is d1/NNP/d1. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/DT/this ?/./? the/DT/the question/NN/question also/RB/also is/VBZ/is can/MD/can be/VB/be use/VB/use this/DT/this l/NN/l 1/CD/1 l/NN/l 2/CD/2 up/IN/up to/TO/to li/VB/li minus/NN/minus 1/CD/1. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, what/WDT/what this/DT/this is/VBZ/is ?/./? so/RB/so /,/, you/PRP/you thing/VBG/thing is/VBZ/is to/TO/to keep/VB/keep working/JJ/working at/IN/at the/DT/the problem/NN/problem and/CC/and trying/VBG/trying and/CC/and understanding/VBG/understanding what/WP/what it/PRP/it really/RB/really means/VBZ/means sometime/JJ/sometime thing/NN/thing added/NNP/added. some/DT/some point/NN/point and/CC/and time/NN/time thinks/NNS/thinks just/RB/just start/VB/start to/TO/to click/NNP/click. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 30/CD/30 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my pattern/NN/pattern this/DT/this is/VBZ/is the/DT/the ith/NN/ith thing/NN/thing which/WDT/which i/PRP/i want/VBP/want to/TO/to calculate/VB/calculate li/NN/li is/VBZ/is what/WP/what i/PRP/i want/VBP/want to/TO/to calculate/NNP/calculate. so/RB/so /,/, what/WDT/what i/PRP/i want/VBP/want is/VBZ/is shifted/VBN/shifted by/IN/by the/DT/the least/JJS/least amount/NNP/amount. so/RB/so that/IN/that /,/, it/PRP/it matches/VBZ/matches algorithm/NN/algorithm this/DT/this matches/VBZ/matches up/RP/up to/TO/to here/RB/here it/PRP/it all/DT/all matches/NNS/matches upwards/NNS/upwards /,/, what/WP/what is/VBZ/is this/DT/this is/VBZ/is what/WP/what i/PRP/i want/NNP/want. so/RB/so /,/, shifted/VBN/shifted by/IN/by least/JJS/least amount/NN/amount or/CC/or the/DT/the longest/JJS/longest prefix/NN/prefix whichever/RB/whichever way/NN/way you/PRP/you want/VBP/want to/TO/to look/VB/look at/IN/at it/NNP/it. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing to/TO/to notice/NN/notice is/VBZ/is that/IN/that /,/, when/WRB/when if/IN/if this/DT/this portion/NN/portion matches/VBZ/matches this/DT/this portion/NN/portion exactly/NNP/exactly. this/DT/this portion/NN/portion up/RP/up to/TO/to the/DT/the previous/JJ/previous character/NN/character also/RB/also matches/VBZ/matches this/DT/this portion/NNP/portion. if/IN/if this/DT/this big/JJ/big portion/NN/portion matches/NNS/matches all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to i/PRP/i this/DT/this portion/NN/portion up/RP/up to/TO/to the/DT/the previous/JJ/previous character/NN/character also/RB/also matches/VBZ/matches up/RP/up to/TO/to this/DT/this portion/NN/portion which/WDT/which means/VBZ/means if/IN/if i/PRP/i want/VBP/want a/DT/a prefix/NN/prefix to/TO/to be/VB/be a/DT/a suffix/NN/suffix up/RP/up to/TO/to i/NNP/i. i/PRP/i want/VBP/want to/TO/to prefix/VB/prefix also/RB/also to/TO/to be/VB/be suffix/CD/suffix up/RP/up to/TO/to i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, i/PRP/i want/VBP/want that/IN/that to/TO/to happen/VB/happen /,/, i/PRP/i know/VBP/know this/DT/this length/NN/length is/VBZ/is at/IN/at most/JJS/most l/JJ/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, i/PRP/i can/MD/can start/VB/start of/IN/of by/IN/by shifting/NNP/shifting. so/RB/so /,/, i/PRP/i can/MD/can start/VB/start by/IN/by shifting/NN/shifting pattern/NN/pattern by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. these/DT/these have/VBP/have already/RB/already computed/VBN/computed by/IN/by induction/NN/induction /,/, i/PRP/i have/VBP/have already/RB/already computed/NNP/computed. so/RB/so /,/, i/PRP/i do/VBP/do not/RB/not need/VB/need to/TO/to start/VB/start of/IN/of here/RB/here i/PRP/i can/MD/can start/VB/start of/IN/of by/IN/by shifting/NN/shifting it/PRP/it by/IN/by this/DT/this much/JJ/much and/CC/and now/RB/now i/PRP/i start/VBP/start comparing/NNP/comparing. i/PRP/i know/VBP/know that/IN/that there/EX/there is/VBZ/is a/DT/a match/NN/match up/RP/up to/TO/to this/DT/this place/NN/place ;/:/; i/PRP/i only/RB/only need/VBP/need to/TO/to compare/VB/compare these/DT/these two/NNP/two. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match here/RB/here also/RB/also /,/, then/RB/then i/PRP/i know/VBP/know what/WP/what li/NN/li is/VBZ/is just/RB/just li/NN/li minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1. if/IN/if there/EX/there is/VBZ/is no/DT/no match/NN/match here/RB/here /,/, then/RB/then what/WP/what we/PRP/we do/VBP/do to/TO/to shift/VB/shift this/DT/this pattern/NN/pattern further/NNP/further. but/CC/but again/RB/again /,/, we/PRP/we use/VBP/use we/PRP/we make/VBP/make use/VBP/use of/IN/of the/DT/the fact/NN/fact that/IN/that if/IN/if calculate/JJ/calculate the/DT/the l/NN/l calculated/VBD/calculated l/NN/l values/NNS/values previously/NNP/previously. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 13/CD/13 /CD/) so/RB/so /,/, what/WDT/what happens/NNS/happens here/RB/here ?/./? so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my pattern/NNP/pattern. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the same/JJ/same pattern/NN/pattern shifted/NNP/shifted. and/CC/and this/DT/this is/VBZ/is the/DT/the ith/NN/ith position/NN/position /,/, ith/IN/ith position/NN/position in/IN/in the/DT/the top/NNP/top. so/RB/so /,/, this/DT/this is/VBZ/is something/NN/something else/NNP/else. now/RB/now /,/, this/DT/this i/PRP/i know/VBP/know is/VBZ/is l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 /,/, this/DT/this is/VBZ/is my/PRP$/my first/JJ/first shift/NN/shift day/NN/day shift/NN/shift this/DT/this is/VBZ/is my/PRP$/my first/JJ/first shift/NNP/shift. and/CC/and now/RB/now i/PRP/i am/VBP/am comparing/VBG/comparing these/DT/these two/CD/two i/PRP/i know/VBP/know that/IN/that shifting/VBG/shifting it/PRP/it by/IN/by any/DT/any less/JJR/less is/VBZ/is useless/NNP/useless. so/RB/so /,/, shift/NN/shift by/IN/by this/DT/this and/CC/and now/RB/now i/PRP/i am/VBP/am comparing/VBG/comparing these/DT/these two/NNP/two. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match or/CC/or found/VBN/found li/NN/li if/IN/if this/DT/this does/VBZ/does not/RB/not match/NNP/match. now/RB/now what/WP/what should/MD/should i/VB/i do/VBP/do well/RB/well i/PRP/i need/VBP/need to/TO/to shift/VB/shift this/DT/this further/NNP/further. i/PRP/i need/VBP/need to/TO/to shift/VB/shift this/DT/this pattern/NN/pattern further/RB/further /,/, why/WRB/why by/IN/by how/WRB/how much/JJ/much how/WRB/how much/JJ/much do/VBP/do i/PRP/i shifted/NNP/shifted. well/RB/well again/RB/again we/PRP/we notice/VBP/notice that/IN/that if/IN/if you/PRP/you shifted/VBD/shifted more/NNP/more. then/RB/then this/DT/this is/VBZ/is the/DT/the i/NN/i minus/NN/minus 1/CD/1 at/IN/at position/NN/position /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at this/DT/this pattern/NNP/pattern. and/CC/and this/DT/this i/NN/i need/VBP/need a/DT/a match/NN/match from/IN/from here/NNP/here. forget/NN/forget this/DT/this for/IN/for the/DT/the timing/NN/timing focus/NN/focus on/IN/on these/DT/these two/CD/two focus/NN/focus on/IN/on these/DT/these two/NNP/two. now/RB/now /,/, i/PRP/i know/VBP/know that/IN/that these/DT/these two/CD/two patterns/NNS/patterns must/MD/must match/VB/match in/IN/in this/DT/this portion/NN/portion which/WDT/which means/VBZ/means this/DT/this prefix/NN/prefix of/IN/of the/DT/the pattern/NN/pattern must/MD/must be/VB/be a/DT/a suffix/NN/suffix of/IN/of this/DT/this part/NN/part of/IN/of the/DT/the portion/NN/portion /,/, this/DT/this part/NN/part of/IN/of the/DT/the pattern/NNP/pattern. this/DT/this index/NN/index is/VBZ/is l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but l/NN/l of/IN/of l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so that/IN/that is/VBZ/is /,/, what/WP/what this/DT/this length/NN/length is/NNP/is. so/RB/so /,/, let/VB/let us/PRP/us this/DT/this is/VBZ/is just/RB/just 1/CD/1 level/NN/level of/IN/of because/IN/because itself/NNP/itself. so/RB/so let/VB/let us/PRP/us see/VB/see what/WP/what is/VBZ/is exactly/RB/exactly going/VBG/going on/NNP/on. so/RB/so /,/, i/PRP/i have/VBP/have a/DT/a mismatch/NN/mismatch here/NNP/here. now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to shift/VB/shift the/DT/the pattern/NN/pattern further/NNP/further. this/DT/this is/VBZ/is the/DT/the original/JJ/original pattern/NN/pattern now/RB/now i/PRP/i want/VBP/want to/TO/to shift/VB/shift this/DT/this pattern/NNP/pattern. supposing/NN/supposing this/DT/this is/VBZ/is the/DT/the correct/NN/correct shift/NN/shift after/IN/after this/DT/this /,/, this/DT/this is/VBZ/is the/DT/the correct/NN/correct shift/NNP/shift. now/RB/now /,/, we/PRP/we observe/VBP/observe that/IN/that this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern must/MD/must match/VB/match this/DT/this portion/NN/portion which/WDT/which is/VBZ/is what/WP/what we/PRP/we want/VBP/want the/DT/the middle/NN/middle part/NN/part for/IN/for the/DT/the timing/NNP/timing. this/DT/this portion/NN/portion must/MD/must match/VB/match this/DT/this portion/NN/portion correct/NNP/correct. now/RB/now /,/, put/VBD/put the/DT/the middle/NN/middle portion/NN/portion back/RB/back this/DT/this portion/NN/portion of/IN/of the/DT/the middle/NN/middle part/NN/part match/NN/match this/DT/this portion/NN/portion of/IN/of the/DT/the text/NNP/text. and/CC/and so/RB/so /,/, must/MD/must match/VB/match this/DT/this portion/NNP/portion. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at only/RB/only the/DT/the middle/NN/middle part/NN/part and/CC/and the/DT/the bottom/NN/bottom part/NN/part /,/, this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern must/MD/must match/VB/match write/JJ/write above/IN/above it/NNP/it. so/RB/so /,/, if/IN/if i/PRP/i omit/VBP/omit the/DT/the top/JJ/top part/NN/part what/WP/what is/VBZ/is see/VBP/see is/VBZ/is /,/, this/DT/this is/VBZ/is a/DT/a similar/JJ/similar phenomenon/NN/phenomenon /,/, what/WP/what i/PRP/i want/VBP/want /,/, is/VBZ/is the/DT/the longest/JJS/longest prefix/NN/prefix of/IN/of this/DT/this portion/NN/portion which/WDT/which is/VBZ/is also/RB/also suffix/NNP/suffix. so/RB/so /,/, this/DT/this initially/RB/initially this/DT/this length/NN/length was/VBD/was i/PRP/i and/CC/and i/PRP/i got/VBD/got l/JJ/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. now/RB/now /,/, this/DT/this length/NN/length is/VBZ/is l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, what/WDT/what i/PRP/i get/VBP/get is/VBZ/is l/NN/l of/IN/of l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, essentially/RB/essentially i/PRP/i use/VBP/use the/DT/the l/NN/l values/NNS/values to/TO/to shifted/VBN/shifted further/RB/further that/IN/that is/VBZ/is what/WP/what this/DT/this length/NN/length is/NNP/is. so/RB/so /,/, i/PRP/i know/VBP/know what/WP/what the/DT/the shift/NN/shift is/VBZ/is ?/./? so/RB/so /,/, this/DT/this shift/NN/shift will/MD/will be/VB/be nothing/NN/nothing but/CC/but l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus 1/CD/1 minus/NN/minus l/NN/l of/IN/of l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 that/IN/that is/VBZ/is what/WP/what i/PRP/i shift/NNP/shift. now/RB/now /,/, again/RB/again if/IN/if i/PRP/i find/VBP/find the/DT/the mismatch/NN/mismatch again/RB/again i/PRP/i do/VBP/do the/DT/the shift/NN/shift only/RB/only now/RB/now i/PRP/i work/VBP/work with/IN/with this/DT/this rather/RB/rather than/IN/than l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, you/PRP/you can/MD/can see/VB/see even/RB/even though/IN/though it/PRP/it is/VBZ/is sounds/VBZ/sounds bit/NN/bit complicated/VBN/complicated see/NN/see roughly/RB/roughly /,/, how/WRB/how we/PRP/we use/VBP/use the/DT/the previous/JJ/previous values/NNS/values of/IN/of previous/JJ/previous l/NN/l values/NNS/values /,/, to/TO/to shift/VB/shift the/DT/the pattern/NN/pattern forward/NNP/forward. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write what/WP/what happens/NNS/happens well/RB/well it/PRP/it could/MD/could so/RB/so happen/VB/happen that/IN/that you/PRP/you keep/VB/keep shifting/VBG/shifting and/CC/and you/PRP/you shift/VBD/shift all/DT/all the/DT/the way/NN/way to/TO/to 0/CD/0. so/RB/so /,/, it/PRP/it will/MD/will happen/VB/happen that/IN/that you/PRP/you shift/VBP/shift it/PRP/it all/DT/all the/DT/the way/NN/way across/IN/across /,/, there/EX/there is/VBZ/is no/DT/no place/NN/place to/TO/to you/PRP/you get/VB/get any/DT/any you/PRP/you get/VBP/get complete/JJ/complete match/NN/match which/WDT/which case/NN/case l/NN/l of/IN/of i/PRP/i could/MD/could well/RB/well turn/VB/turn out/RP/out to/TO/to be/VB/be 0/CD/0. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 39/CD/39 /CD/) so/RB/so /,/, let/VB/let us/PRP/us write/VB/write this/DT/this algorithm/NN/algorithm down/NNP/down. so/RB/so /,/, the/DT/the position/NN/position on/IN/on the/DT/the on/IN/on input/NN/input pattern/NN/pattern let/NN/let us/PRP/us say/VBP/say is/VBZ/is i/NNP/i. so/RB/so /,/, li/NN/li is/VBZ/is what/WP/what i/PRP/i want/VBP/want to/TO/to fill/VB/fill l/NN/l 1/CD/1 l/NN/l 2/CD/2 up/IN/up to/TO/to li/VB/li minus/NN/minus 1/CD/1 /,/, i/PRP/i have/VBP/have filled/NNP/filled. so/RB/so /,/, pointer/NN/pointer on/IN/on the/DT/the prefix/NN/prefix /,/, this/DT/this is/VBZ/is the/DT/the shifted/VBN/shifted /,/, this/DT/this i/PRP/i will/MD/will call/VB/call j/NNP/j. so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my initial/JJ/initial pattern/NN/pattern that/WDT/that is/VBZ/is i/PRP/i and/CC/and this/DT/this will/MD/will be/VB/be j/NNP/j. so/RB/so /,/, initially/RB/initially j/VB/j for/IN/for instance/NN/instance here/RB/here is/VBZ/is li/NN/li minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1 /,/, then/RB/then it/PRP/it becomes/VBZ/becomes l/NN/l of/IN/of li/NN/li minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1. so/RB/so that/IN/that is/VBZ/is what/WP/what j/NN/j the/DT/the shifted/VBN/shifted pattern/NNP/pattern. so/RB/so /,/, now/RB/now what/WP/what do/VBP/do you/PRP/you have/VB/have /,/, so/RB/so again/RB/again it/PRP/it is/VBZ/is let/VB/let us/PRP/us see/VB/see l/JJ/l 1/CD/1 is/VBZ/is 0/CD/0. let/NN/let us/PRP/us do/VBP/do the/DT/the initialization/NN/initialization first/RB/first l/JJ/l 1/CD/1 is/VBZ/is 0/-NONE-/0 /,/, i/PRP/i as/IN/as set/JJ/set to/TO/to 2/CD/2 j/NN/j i/PRP/i set/VBD/set to/TO/to 1/CD/1 /,/, this/DT/this is/VBZ/is my/PRP$/my initialization/NNP/initialization. so/RB/so /,/, i/PRP/i have/VBP/have to/TO/to find/VB/find l/NN/l 2/CD/2 l/NN/l 3/CD/3 and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 10/CD/10 /CD/) now/RB/now if/IN/if so/RB/so here/RB/here is/VBZ/is the/DT/the procedure/NN/procedure /,/, if/IN/if let/NN/let us/PRP/us say/VBP/say note/NN/note down/IN/down separate/JJ/separate things/NNS/things and/CC/and need/VBP/need the/DT/the space/NNP/space. if/IN/if pattern/NN/pattern at/IN/at i/PRP/i equals/NNS/equals pattern/VBP/pattern at/IN/at j/NNP/j. then/RB/then /,/, well/RB/well here/RB/here there/EX/there is/VBZ/is a/DT/a match/NN/match so/IN/so both/DT/both pointers/NNS/pointers move/VBP/move forward/NNP/forward. so/RB/so also/RB/also /,/, where/WRB/where was/VBD/was this/DT/this /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match at/IN/at any/DT/any time/NN/time /,/, then/RB/then i/PRP/i know/VBP/know what/WP/what the/DT/the l/NN/l value/NN/value is/NNP/is. if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match at/IN/at any/DT/any time/NN/time i/PRP/i know/VBP/know what/WP/what l/NN/l value/NN/value is/VBZ/is its/PRP$/its nothing/NN/nothing /,/, but/CC/but j/NNP/j. so/RB/so /,/, li/NN/li equals/NNS/equals j/VBP/j /,/, this/DT/this is/VBZ/is the/DT/the longest/JJS/longest prefix/NN/prefix that/WDT/that i/PRP/i can/MD/can now/RB/now increment/VB/increment i/PRP/i and/CC/and j/NNP/j. now/RB/now /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find it/PRP/it for/IN/for the/DT/the next/JJ/next value/NN/value of/IN/of i/PRP/i this/DT/this is/VBZ/is inside/NN/inside if/IN/if else/NN/else this/DT/this is/VBZ/is the/DT/the crucial/JJ/crucial part/NNP/part. well/RB/well again/RB/again /,/, if/IN/if j/NN/j is/VBZ/is not/RB/not equal/JJ/equal to/TO/to 1/CD/1 which/WDT/which means/VBZ/means you/PRP/you are/VBP/are not/RB/not looking/VBG/looking at/IN/at the/DT/the first/JJ/first character/NN/character in/IN/in the/DT/the pattern/NN/pattern in/IN/in the/DT/the shifted/VBN/shifted pattern/NN/pattern then/RB/then what/WP/what can/MD/can we/PRP/we say/NNP/say. then/RB/then /,/, we/PRP/we just/RB/just shift/VBP/shift the/DT/the pattern/NN/pattern some/DT/some more/RBR/more and/CC/and what/WP/what is/VBZ/is the/DT/the shifted/VBN/shifted value/NN/value it/PRP/it is/VBZ/is nothing/VBG/nothing but/CC/but l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we had/NNP/had. so/RB/so /,/, let/VB/let me/PRP/me recall/MD/recall this/DT/this portion/NN/portion it/PRP/it was/VBD/was l/JJ/l of/IN/of we/PRP/we will/MD/will looking/VBG/looking at/IN/at i/NNP/i. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 13/CD/13 /CD/) so/RB/so /,/, it/PRP/it is/VBZ/is l/JJ/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 plus/NN/plus 1/CD/1. similarly/RB/similarly again/RB/again here/RB/here /,/, it/PRP/it will/MD/will be/VB/be l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus 1/CD/1 l/NN/l of/IN/of that/DT/that is/VBZ/is what/WP/what we/PRP/we want/NNP/want. so/RB/so /,/, j/NN/j will/MD/will be/VB/be l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1 /,/, this/DT/this is/VBZ/is j/NN/j is/VBZ/is not/RB/not equal/JJ/equal to/TO/to 1/CD/1. if/IN/if j/NN/j equal/JJ/equal to/TO/to 1/CD/1 this/DT/this is/VBZ/is an/DT/an exceptional/JJ/exceptional case/NNP/case. then/RB/then /,/, which/WDT/which means/VBZ/means we/PRP/we are/VBP/are looking/VBG/looking at/IN/at the/DT/the first/JJ/first we/PRP/we shifted/VBD/shifted the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NNP/way. so/RB/so that/IN/that /,/, the/DT/the first/JJ/first character/NN/character match/NN/match is/VBZ/is looking/VBG/looking is/VBZ/is matches/NNS/matches is/VBZ/is below/IN/below the/DT/the ith/NN/ith character/NN/character of/IN/of the/DT/the pattern/NN/pattern and/CC/and this/DT/this does/VBZ/does not/RB/not match/VB/match which/WDT/which means/NNS/means li/VBP/li must/MD/must be/VB/be 0/-NONE-/0 li/PRP/li equal/JJ/equal to/TO/to 0/-NONE-/0 and/CC/and i/PRP/i can/MD/can move/VB/move forward/NNP/forward. so/RB/so /,/, i/PRP/i is/VBZ/is i/PRP/i plus/RB/plus 1/CD/1. so/RB/so /,/, i/PRP/i calculated/VBD/calculated li/NN/li and/CC/and i/PRP/i move/VBP/move forward/NNP/forward. this/DT/this now/RB/now goes/VBZ/goes into/IN/into a/DT/a loop/NN/loop this/DT/this thing/NN/thing goes/VBZ/goes into/IN/into a/DT/a loop/NN/loop and/CC/and that/IN/that is/VBZ/is it/NNP/it. so/RB/so /,/, we/PRP/we just/RB/just keep/VB/keep calculating/VBG/calculating this/DT/this way/NNP/way. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the time/NN/time taken/VBN/taken ?/./? well/RB/well again/RB/again /,/, we/PRP/we break/VBP/break it/PRP/it into/IN/into two/CD/two parts/NNS/parts 1/CD/1 is/VBZ/is the/DT/the /,/, if/IN/if and/CC/and else/RB/else the/DT/the successful/JJ/successful match/NN/match and/CC/and unsuccessful/JJ/unsuccessful comparison/NNP/comparison. so/RB/so /,/, pi/NN/pi equals/NNS/equals pj/VBP/pj and/CC/and pi/NN/pi is/VBZ/is not/RB/not equal/JJ/equal to/TO/to pj/NNP/pj. so/RB/so /,/, plus/CC/plus number/NN/number of/IN/of times/NNS/times you/PRP/you execute/VBP/execute the/DT/the l/NN/l close/NNP/close. so/RB/so /,/, how/WRB/how many/JJ/many times/NNS/times do/VBP/do you/PRP/you execute/VB/execute this/DT/this well/NN/well again/RB/again we/PRP/we notice/VBP/notice that/IN/that here/RB/here i/PRP/i goes/VBZ/goes up/RP/up by/IN/by 1/CD/1. so/RB/so /,/, look/VBP/look at/IN/at i/PRP/i /,/, i/PRP/i goes/VBZ/goes up/RP/up by/IN/by 1/CD/1 time/NN/time which/WDT/which is/VBZ/is the/DT/the pattern/NN/pattern you/PRP/you fill/MD/fill out/VB/out this/DT/this entry/NNP/entry. you/PRP/you filled/VBD/filled out/RP/out 1/CD/1 entry/NN/entry in/IN/in the/DT/the pattern/NN/pattern is/VBZ/is li/NN/li set/VBN/set to/TO/to j/VB/j and/CC/and i/PRP/i goes/VBZ/goes up/RP/up i/PRP/i never/RB/never decreases/VBZ/decreases anywhere/NNP/anywhere. so/RB/so /,/, the/DT/the number/NN/number of/IN/of times/NNS/times /,/, this/DT/this will/MD/will happen/VB/happen is/VBZ/is m/NNP/m. so/RB/so /,/, each/DT/each time/NN/time this/DT/this happens/NNS/happens i/PRP/i is/VBZ/is incremented/VBN/incremented by/IN/by 1/CD/1 the/DT/the largest/JJS/largest value/NN/value of/IN/of i/PRP/i is/VBZ/is n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is at/IN/at most/JJS/most m/NN/m /,/, how/WRB/how about/RP/about this/DT/this else/NN/else clause/NN/clause well/RB/well either/DT/either i/PRP/i is/VBZ/is incremented/VBN/incremented or/CC/or j/NN/j is/VBZ/is decremented/VBN/decremented which/WDT/which means/VBZ/means pattern/NN/pattern below/IN/below its/PRP$/its shifts/NNS/shifts again/RB/again it/PRP/it is/VBZ/is the/DT/the same/JJ/same argument/NNP/argument. so/IN/so /,/, i/PRP/i look/VBP/look at/IN/at i/PRP/i minus/VBZ/minus j/NN/j the/DT/the maximum/NN/maximum value/NN/value /,/, this/DT/this is/VBZ/is always/RB/always incremented/VBN/incremented here/NNP/here. it/PRP/it remains/VBZ/remains the/DT/the same/JJ/same here/RB/here ;/:/; this/DT/this is/VBZ/is always/RB/always incremented/VBN/incremented in/IN/in this/DT/this case/NNP/case. so/RB/so /,/, the/DT/the maximum/NN/maximum time/NN/time in/IN/in the/DT/the time/NN/time taken/VBN/taken here/RB/here is/VBZ/is m/NNP/m. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time taken/VBN/taken by/IN/by this/DT/this procedure/NN/procedure is/VBZ/is twice/NN/twice m/NNP/m. i/PRP/i just/RB/just realize/VBP/realize that/IN/that i/PRP/i made/VBD/made will/MD/will small/VB/small mistake/VB/mistake let/JJ/let me/PRP/me correct/VBP/correct that/NNP/that. so/RB/so /,/, everything/NN/everything was/VBD/was light/JJ/light except/IN/except this/NNP/this. so/RB/so /,/, just/RB/just focus/VBZ/focus on/IN/on this/NNP/this. here/RB/here i/PRP/i have/VBP/have i/PRP/i wrote/VBD/wrote this/DT/this minus/NN/minus 1/CD/1 which/WDT/which is/VBZ/is not/RB/not true/JJ/true what/WP/what i/PRP/i said/VBD/said earlier/JJR/earlier was/VBD/was perfectly/RB/perfectly correct/NNP/correct. the/DT/the reason/NN/reason the/DT/the j/NN/j value/NN/value is/VBZ/is actually/RB/actually n/VBN/n of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 plus/NN/plus 1/CD/1. so/RB/so /,/, what/WDT/what i/PRP/i have/VBP/have here/RB/here is/VBZ/is l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1. when/WRB/when i/PRP/i take/VBP/take l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1 /,/, now/RB/now it/PRP/it becomes/VBZ/becomes l/NN/l of/IN/of l/NN/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1 /,/, this/DT/this minus/NN/minus 1/CD/1. now/RB/now /,/, the/DT/the new/JJ/new j/NN/j value/NN/value will/MD/will be/VB/be this/DT/this plus/NN/plus 1/CD/1 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, what/WP/what i/PRP/i earlier/JJR/earlier said/VBD/said was/VBD/was correct/JJ/correct /,/, this/DT/this length/NN/length there/RB/there is/VBZ/is no/DT/no minus/NN/minus 1/CD/1 /,/, here/RB/here this/DT/this length/NN/length is/VBZ/is exactly/RB/exactly l/JJ/l of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. i/PRP/i am/VBP/am sorry/JJ/sorry for/IN/for this/DT/this for/IN/for this/DT/this mistake/NNP/mistake. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to the/DT/the algorithm/NN/algorithm /,/, we/PRP/we just/RB/just finished/VBD/finished looking/VBG/looking at/IN/at /CD/( /CD/( refer/NN/refer time/NN/time /:/: 32/CD/32 /:/: 59/CD/59 /CD/) /CD/) y/NN/y the/DT/the time/NN/time is/VBZ/is twice/NN/twice m/NNP/m. so/RB/so /,/, in/IN/in linear/JJ/linear time/NN/time we/PRP/we have/VBP/have actually/RB/actually computed/VBN/computed the/DT/the l/NN/l values/NNS/values /,/, well/RB/well if/IN/if you/PRP/you want/VBP/want to/TO/to write/VB/write l/NN/l as/IN/as an/DT/an array/NN/array i/PRP/i have/VBP/have written/VBN/written as/IN/as subscripts/NNP/subscripts. i/PRP/i have/VBP/have this/DT/this is/VBZ/is the/DT/the way/NN/way i/PRP/i describe/VBP/describe this/DT/this algorithm/NN/algorithm you/PRP/you can/MD/can of/IN/of course/NN/course /,/, write/JJ/write l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1. if/IN/if you/PRP/you are/VBP/are storing/VBG/storing the/DT/the l/NN/l values/NNS/values and/CC/and array/VBP/array and/CC/and this/DT/this is/VBZ/is what/WP/what this/DT/this /,/, how/WRB/how you/PRP/you write/VBP/write it/NNP/it. i/PRP/i just/RB/just written/VBN/written it/PRP/it as/IN/as a/DT/a subscript/NNP/subscript. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a match/NN/match then/RB/then i/PRP/i have/VBP/have computed/VBN/computed the/DT/the l/NN/l value/NN/value for/IN/for i/PRP/i and/CC/and i/PRP/i go/VBP/go ahead/RB/ahead and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to try/NN/try and/CC/and compute/NN/compute the/DT/the l/NN/l value/NN/value for/IN/for i/PRP/i plus/CC/plus 1/CD/1. that/WDT/that is/VBZ/is what/WP/what this/DT/this portion/NN/portion says/VBZ/says ;/:/; this/DT/this portion/NN/portion says/VBZ/says if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NNP/mismatch. then/RB/then /,/, i/PRP/i need/VBP/need to/TO/to shift/VB/shift the/DT/the pattern/NNP/pattern. and/CC/and how/WRB/how much/JJ/much do/VBP/do /,/, i/PRP/i shifted/VBD/shifted by/IN/by /,/, what/WP/what do/VBP/do i/PRP/i shifted/VBD/shifted by/IN/by well/RB/well /,/, that/IN/that is/VBZ/is why/WRB/why this/DT/this j/NN/j comes/VBZ/comes in/IN/in j/NN/j i/PRP/i set/VBD/set to/TO/to l/VB/l of/IN/of j/NN/j minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 06/CD/06 /CD/) the/DT/the reasoning/NN/reasoning is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we did/VBD/did earlier/RBR/earlier /,/, because/IN/because so/RB/so here/RB/here is/VBZ/is my/PRP$/my pattern/NNP/pattern. the/DT/the ith/NN/ith position/NN/position is/VBZ/is what/WP/what i/PRP/i am/VBP/am trying/VBG/trying to/TO/to compare/VB/compare and/CC/and i/PRP/i have/VBP/have shifted/VBN/shifted and/CC/and this/DT/this is/VBZ/is the/DT/the jth/NN/jth position/NN/position on/IN/on this/DT/this bottom/NN/bottom pattern/NNP/pattern. this/DT/this is/VBZ/is i/PRP/i n/VBP/n that/IN/that is/VBZ/is j/NN/j and/CC/and there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, how/WRB/how much/JJ/much you/PRP/you are/VBP/are shifted/VBN/shifted by/IN/by well/RB/well /,/, if/IN/if i/PRP/i shifted/VBD/shifted by/IN/by some/DT/some amount/NNP/amount. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say i/PRP/i shifted/VBD/shifted by/IN/by this/DT/this amount/NN/amount and/CC/and this/DT/this is/VBZ/is the/DT/the value/NN/value then/RB/then up/IN/up to/TO/to here/RB/here this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern matches/VBZ/matches this/DT/this portion/NN/portion of/IN/of the/DT/the pattern/NNP/pattern. and/CC/and i/PRP/i need/VBP/need to/TO/to shift/VB/shift by/IN/by minimum/NNP/minimum. so/RB/so /,/, that/IN/that this/DT/this happens/NNS/happens which/WDT/which means/VBZ/means this/DT/this length/NN/length is/VBZ/is nothing/NN/nothing but/CC/but l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1 this/DT/this length/NN/length is/VBZ/is l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1. so/RB/so /,/, the/DT/the new/JJ/new j/NN/j will/MD/will be/VB/be here/RB/here /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to compare/VB/compare start/NN/start comparing/VBG/comparing this/DT/this with/IN/with i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1 which/WDT/which is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we have/NNP/have. so/RB/so /,/, if/IN/if j/NN/j is/VBZ/is not/RB/not equal/JJ/equal to/TO/to 1/CD/1 j/NN/j is/VBZ/is l/NN/l of/IN/of j/NN/j minus/NN/minus 1/CD/1 plus/CC/plus 1/CD/1. if/IN/if j/NN/j is/VBZ/is 1/CD/1 which/WDT/which means/VBZ/means i/PRP/i have/VBP/have comparing/VBG/comparing the/DT/the first/JJ/first character/NN/character /,/, if/IN/if which/WDT/which means/VBZ/means it/PRP/it looks/VBZ/looks like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 25/CD/25 /CD/) so/IN/so /,/, let/VB/let us/PRP/us do/VBP/do 1/CD/1 figure/NNP/figure. so/RB/so /,/, what/WDT/what happens/NNS/happens when/WRB/when so/RB/so this/DT/this is/VBZ/is i/PRP/i and/CC/and the/DT/the pattern/NN/pattern actually/RB/actually looks/VBZ/looks like/IN/like this/DT/this j/NN/j is/VBZ/is 1.now/CD/1.now /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, then/RB/then i/PRP/i know/VBP/know there/RB/there is/VBZ/is no/DT/no prefix/NN/prefix which/WDT/which is/VBZ/is the/DT/the suffix/NN/suffix till/IN/till of/IN/of this/DT/this portion/NNP/portion. so/RB/so /,/, li/NN/li equal/JJ/equal to/TO/to 0/-NONE-/0 and/CC/and i/PRP/i shift/VBP/shift i/PRP/i now/RB/now move/VBP/move everything/VBG/everything over/NNP/over. so/RB/so /,/, i/PRP/i move/VBP/move i/PRP/i 1/CD/1 and/CC/and i/PRP/i move/VBP/move the/DT/the pattern/NN/pattern by/IN/by 1/CD/1 and/CC/and i/PRP/i start/VBP/start comparing/VBG/comparing from/IN/from this/DT/this same/JJ/same position/NNP/position. that/IN/that is/VBZ/is what/WP/what this/DT/this is/VBZ/is the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is in/IN/in a/DT/a loop/NN/loop and/CC/and you/PRP/you end/VBP/end when/WRB/when you/PRP/you finish/VBP/finish scanning/VBG/scanning the/DT/the entire/JJ/entire pattern/NNP/pattern. the/DT/the total/JJ/total time/NN/time is/VBZ/is m/NN/m /,/, because/IN/because the/DT/the number/NN/number of/IN/of time/NN/time this/DT/this is/VBZ/is executed/VBN/executed is/VBZ/is at/IN/at most/JJS/most m/NN/m /,/, number/NN/number of/IN/of time/NN/time this/DT/this is/VBZ/is executed/VBN/executed is/VBZ/is also/RB/also at/IN/at most/JJS/most m/NNP/m. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is 2/CD/2 m/NN/m and/CC/and in/IN/in 2/CD/2 m/NN/m steps/NNS/steps /,/, we/PRP/we can/MD/can compute/VB/compute this/DT/this length/NN/length l/NNP/l. and/CC/and once/RB/once we/PRP/we have/VBP/have the/DT/the length/NN/length l/NN/l /,/, we/PRP/we can/MD/can compute/VB/compute the/DT/the f/NN/f that/IN/that we/PRP/we wanted/VBD/wanted by/IN/by just/RB/just shifting/VBG/shifting the/DT/the l/NN/l values/NNS/values 1/CD/1 step/NN/step to/TO/to the/DT/the right/NN/right that/IN/that is/VBZ/is all/DT/all the/DT/the risk/NNP/risk. because/IN/because /,/, fi/VBP/fi plus/CC/plus 1/CD/1 is/VBZ/is li/NN/li and/CC/and once/RB/once we/PRP/we have/VBP/have computed/VBN/computed f/NN/f for/IN/for the/DT/the pattern/NNP/pattern. now/RB/now /,/, we/PRP/we can/MD/can scan/VB/scan any/DT/any text/NN/text for/IN/for this/DT/this pattern/NN/pattern using/VBG/using the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we saw/VBD/saw last/JJ/last time/NNP/time. and/CC/and that/IN/that also/RB/also works/VBZ/works in/IN/in linear/JJ/linear time/NNP/time. this/DT/this algorithm/NN/algorithm is/VBZ/is due/JJ/due to/TO/to /CD/( /CD/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 57/CD/57 /CD/) /CD/) /./. this/DT/this is/VBZ/is not/RB/not actually/RB/actually use/VB/use in/IN/in practice/NN/practice an/DT/an algorithm/NN/algorithm /,/, even/RB/even though/IN/though this/DT/this is/VBZ/is efficient/NNP/efficient. and/CC/and algorithm/NN/algorithm that/IN/that is/VBZ/is found/VBN/found to/TO/to be/VB/be more/JJR/more efficient/JJ/efficient in/IN/in practice/NN/practice is/VBZ/is due/JJ/due to/TO/to boyer/NN/boyer and/CC/and moore/VB/moore and/CC/and that/IN/that what/WP/what is/VBZ/is used/VBN/used in/IN/in /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 20/CD/20 /CD/) /./. and/CC/and boyer/NN/boyer moore/NN/moore /,/, the/DT/the idea/NN/idea is/VBZ/is very/RB/very similar/JJ/similar you/PRP/you want/VBP/want to/TO/to shift/VB/shift by/IN/by as/IN/as much/JJ/much as/IN/as possible/JJ/possible and/CC/and use/NN/use the/DT/the fact/NN/fact that/IN/that has/VBZ/has been/VBN/been a/DT/a match/NN/match in/IN/in some/DT/some portion/NN/portion of/IN/of the/DT/the pattern/NN/pattern in/IN/in text/NNP/text. the/DT/the difference/NN/difference between/IN/between boyer/NN/boyer moore/NN/moore and/CC/and this/DT/this growth/NN/growth moore/NN/moore is/VBZ/is track/NN/track is/VBZ/is there/EX/there boyer/NN/boyer moore/NN/moore starts/VBZ/starts comparing/VBG/comparing from/IN/from the/DT/the last/JJ/last pattern/NN/pattern i/PRP/i mean/VBP/mean in/IN/in the/DT/the last/JJ/last character/NN/character of/IN/of the/DT/the pattern/NN/pattern downwards/NNP/downwards. here/RB/here /,/, you/PRP/you start/VBP/start from/IN/from the/DT/the first/JJ/first character/NN/character of/IN/of the/DT/the pattern/NN/pattern upwards/NNS/upwards and/CC/and boyer/NN/boyer moore/NN/moore you/PRP/you look/VBP/look at/IN/at the/DT/the last/JJ/last character/NN/character of/IN/of the/DT/the pattern/NN/pattern downwards/NNS/downwards that/WDT/that is/VBZ/is what/WP/what they/PRP/they do/VBP/do. but/CC/but /,/, the/DT/the concepts/NNS/concepts are/VBP/are very/RB/very very/RB/very similar/NNP/similar. let/VB/let us/PRP/us before/IN/before /,/, we/PRP/we windup/VBP/windup this/DT/this thing/NNP/thing. let/VBD/let us/PRP/us go/VBP/go back/RB/back and/CC/and look/VB/look at/IN/at those/DT/those two/CD/two examples/NNS/examples that/WDT/that we/PRP/we looked/VBD/looked at/IN/at write/JJ/write at/IN/at the/DT/the beginning/NNP/beginning. and/CC/and see/VB/see what/WP/what happens/NNS/happens to/TO/to the/DT/the f/NN/f function/NN/function and/CC/and how/WRB/how this/DT/this pattern/NN/pattern matching/VBG/matching algorithm/NN/algorithm works/NNS/works on/IN/on that/NNP/that. they/PRP/they were/VBD/were two/CD/two strings/NNS/strings that/WDT/that we/PRP/we worked/VBD/worked at/IN/at we/PRP/we looked/VBD/looked at/IN/at the/DT/the beginning/NNP/beginning. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at them/PRP/them and/CC/and see/VB/see what/WP/what we/PRP/we have/NNP/have. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 30/CD/30 /CD/) so/RB/so /,/, the/DT/the two/CD/two strings/NNS/strings first/RB/first string/VBG/string was/VBD/was a/DT/a b/NN/b b/NN/b b/NN/b this/DT/this is/VBZ/is k/NN/k times/NNP/times. in/IN/in other/JJ/other words/NNS/words it/PRP/it is/VBZ/is a/DT/a b/NN/b to/TO/to the/DT/the k/NNP/k. so/RB/so /,/, what/WDT/what happens/NNS/happens in/IN/in this/DT/this case/NN/case ?/./? suppose/NN/suppose this/DT/this is/VBZ/is the/DT/the pattern/NN/pattern what/WP/what we/PRP/we do/NNP/do. so/RB/so /,/, let/VB/let what/WP/what are/VBP/are the/DT/the l/NN/l values/NNP/values. so/RB/so of/IN/of course/NN/course /,/, for/IN/for a/DT/a it/PRP/it is/VBZ/is 0/CD/0. if/IN/if i/PRP/i look/VBP/look at/IN/at a/DT/a b/NN/b /,/, what/WP/what is/VBZ/is the/DT/the longest/JJS/longest prefix/NN/prefix /,/, which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix /,/, while/IN/while if/IN/if i/PRP/i look/VBP/look at/IN/at a/DT/a b/NN/b the/DT/the only/JJ/only prefix/NN/prefix proper/NN/proper prefix/NN/prefix i/PRP/i have/VBP/have is/VBZ/is a/NNP/a. and/CC/and certainly/RB/certainly it/PRP/it is/VBZ/is not/RB/not a/DT/a suffix/NNP/suffix. so/RB/so /,/, this/DT/this value/NN/value is/VBZ/is also/RB/also 0/-NONE-/0 /,/, how/WRB/how about/RP/about a/DT/a b/NN/b b/NN/b ?/./? well/RB/well the/DT/the two/CD/two proper/JJ/proper prefix/NN/prefix is/VBZ/is a/DT/a and/CC/and a/DT/a b/NN/b and/CC/and meet/VB/meet the/DT/the algorithm/NN/algorithm is/VBZ/is the/DT/the suffix/NN/suffix here/RB/here a/DT/a is/VBZ/is not/RB/not a/DT/a suffix/NN/suffix ab/NN/ab is/VBZ/is also/RB/also not/RB/not a/DT/a suffix/NN/suffix i/PRP/i will/MD/will this/DT/this matches/NNS/matches this/DT/this does/VBZ/does not/RB/not matches/NNP/matches. so/RB/so /,/, there/EX/there is/VBZ/is no/DT/no proper/NN/proper prefix/NN/prefix of/IN/of a/DT/a b/NN/b b/NN/b which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix of/IN/of this/DT/this is/VBZ/is 0/CD/0. and/NNP/and. in/IN/in fact/NN/fact /,/, all/DT/all of/IN/of them/PRP/them as/IN/as zero/NN/zero for/IN/for n1/NNP/n1 of/IN/of them/PRP/them is/VBZ/is that/IN/that a/DT/a proper/NN/proper prefix/NN/prefix which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix /,/, so/RB/so that/IN/that is/VBZ/is the/DT/the l/NN/l value/NNP/value. so/RB/so /,/, f/NN/f values/NNS/values are/VBP/are also/RB/also 0/CD/0. now/RB/now /,/, what/WDT/what is/VBZ/is so/RB/so when/WRB/when there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, what/WP/what is/VBZ/is what/WP/what does/VBZ/does 1/CD/1 shift/NN/shift by/IN/by let/NN/let us/PRP/us recall/MD/recall this/NNP/this. so/RB/so the/DT/the shift/NN/shift value/NN/value /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch at/IN/at the/DT/the ith/NN/ith position/NN/position is/VBZ/is i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus fi/NNP/fi. in/IN/in this/DT/this case/NN/case it/PRP/it is/VBZ/is i/PRP/i minus/VBZ/minus 1/CD/1. if/IN/if there/EX/there is/VBZ/is mismatch/NN/mismatch of/IN/of the/DT/the ith/NN/ith position/NN/position i/PRP/i shift/VBP/shift the/DT/the pattern/NN/pattern to/TO/to the/DT/the right/NN/right by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 position/NN/position this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we did/VBD/did earlier/NNP/earlier. so/RB/so /,/, we/PRP/we basically/RB/basically shift/VBP/shift the/DT/the pattern/NN/pattern all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to the/DT/the position/NN/position /,/, where/WRB/where this/DT/this a/DT/a mismatch/NN/mismatch almost/RB/almost to/TO/to the/DT/the position/NN/position /,/, where/WRB/where there/EX/there is/VBZ/is a/DT/a mismatch/NNP/mismatch. so/RB/so that/IN/that was/VBD/was for/IN/for that/DT/that pattern/NN/pattern and/CC/and this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we did/VBD/did earlier/RBR/earlier before/IN/before we/PRP/we did/VBD/did all/PDT/all this/DT/this you/PRP/you know/VBP/know analysis/NN/analysis about/IN/about prefix/CD/prefix and/CC/and then/RB/then suffixes/NNP/suffixes. but/CC/but /,/, this/DT/this is/VBZ/is the/DT/the idea/NN/idea that/IN/that the/DT/the sort/NN/sort of/IN/of intuitively/RB/intuitively used/VBN/used use/NN/use then/NNP/then. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 07/CD/07 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the second/JJ/second 1/CD/1 which/WDT/which was/VBD/was a/DT/a a/DT/a a/DT/a b/NN/b this/DT/this is/VBZ/is k/NN/k times/NNP/times. the/DT/the string/NN/string of/IN/of a/DT/a /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the second/JJ/second pattern/NN/pattern that/WDT/that we/PRP/we looked/VBD/looked at/NNP/at. so/RB/so /,/, what/WDT/what are/VBP/are the/DT/the l/NN/l values/NNS/values ?/./? well/RB/well it/PRP/it is/VBZ/is 0/-NONE-/0 for/IN/for 1/CD/1 the/DT/the first/JJ/first 1/CD/1 if/IN/if i/PRP/i look/VBP/look at/IN/at a/DT/a a/DT/a the/DT/the longest/JJS/longest prefix/NN/prefix which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix well/RB/well the/DT/the only/JJ/only proper/NN/proper prefix/NN/prefix is/VBZ/is a/DT/a that/IN/that is/VBZ/is also/RB/also a/DT/a suffix/NNP/suffix. so/RB/so /,/, this/DT/this value/NN/value is/VBZ/is 1/CD/1 /,/, how/WRB/how about/RP/about a/DT/a a/DT/a a/DT/a ?/./? well/RB/well the/DT/the longest/JJS/longest prefix/NN/prefix which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix is/VBZ/is a/DT/a a/DT/a longest/NN/longest proper/NN/proper prefix/NN/prefix which/WDT/which is/VBZ/is also/RB/also a/DT/a suffix/NN/suffix is/VBZ/is a/NNP/a. so/RB/so /,/, this/DT/this value/NN/value is/VBZ/is 2/CD/2 and/CC/and so/RB/so on/NNP/on. this/DT/this value/NN/value will/MD/will be/VB/be k/NN/k minus/NN/minus 1/CD/1 for/IN/for this/DT/this it/PRP/it will/MD/will be/VB/be 0/CD/0. these/DT/these are/VBP/are the/DT/the l/NN/l values/NNS/values what/WP/what are/VBP/are the/DT/the f/NN/f values/NNS/values ?/./? well/RB/well the/DT/the f/NN/f values/NNS/values are/VBP/are just/RB/just all/DT/all of/IN/of these/DT/these shifted/VBN/shifted to/TO/to the/DT/the right/NNP/right. so/RB/so /,/, i/PRP/i have/VBP/have 0/-NONE-/0 0/-NONE-/0 1/CD/1 2/CD/2 so/RB/so on/IN/on k/NN/k minus/NN/minus 2/CD/2 k/NN/k minus/NN/minus 1/CD/1. these/DT/these are/VBP/are the/DT/the f/NN/f values/NNP/values. and/CC/and if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch /,/, then/RB/then you/PRP/you shifted/VBD/shifted by/IN/by i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus fi/NN/fi and/CC/and in/IN/in this/DT/this case/NN/case and/CC/and this/DT/this case/NN/case this/DT/this will/MD/will be/VB/be i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and fi/NN/fi you/PRP/you can/MD/can see/VB/see its/PRP$/its nothing/NN/nothing but/CC/but i/PRP/i minus/VBZ/minus 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is 1/CD/1. so/RB/so /,/, you/PRP/you actually/RB/actually shift/VBP/shift the/DT/the pattern/NN/pattern by/IN/by just/RB/just 1/CD/1 unit/NN/unit which/WDT/which is/VBZ/is also/RB/also what/WP/what we/PRP/we did/VBD/did there/NNP/there. if/IN/if there/EX/there is/VBZ/is a/DT/a mismatch/NN/mismatch we/PRP/we only/RB/only shifted/VBD/shifted it/PRP/it by/IN/by 1/CD/1 unit/NNP/unit. but/CC/but /,/, the/DT/the crucial/JJ/crucial thing/NN/thing is/VBZ/is we/PRP/we start/VBP/start compare/VBP/compare now/RB/now we/PRP/we start/VBP/start comparing/VBG/comparing where/WRB/where there/EX/there was/VBD/was a/DT/a mismatch/NNP/mismatch. we/PRP/we do/VBP/do not/RB/not go/VB/go back/RB/back and/CC/and compare/VB/compare everything/NN/everything again/NNP/again. this/DT/this was/VBD/was the/DT/the other/JJ/other lesion/NN/lesion be/VB/be we/PRP/we had/VBD/had we/PRP/we are/VBP/are learned/VBN/learned /,/, we/PRP/we also/RB/also done/VBP/done this/DT/this earlier/NNP/earlier. that/IN/that once/RB/once the/DT/the pattern/NN/pattern once/RB/once you/PRP/you have/VB/have matched/VBN/matched up/RP/up to/TO/to some/DT/some level/NN/level of/IN/of the/DT/the pattern/NNP/pattern. we/PRP/we know/VBP/know the/DT/the previous/JJ/previous things/NNS/things are/VBP/are all/DT/all a/DT/a ?/./? s/VBZ/s in/IN/in this/DT/this case/NNP/case. some/DT/some we/PRP/we do/VBP/do not/RB/not have/VB/have to/TO/to again/VB/again sort/NN/sort of/IN/of match/NN/match all/DT/all over/IN/over them/NNP/them. we/PRP/we know/VBP/know that/IN/that the/DT/the shift/NN/shift that/IN/that portion/NN/portion will/MD/will always/RB/always match/VB/match with/IN/with the/DT/the previous/JJ/previous thing/NN/thing we/PRP/we just/RB/just need/VBP/need to/TO/to look/VB/look at/IN/at the/DT/the new/JJ/new position/NN/position in/IN/in the/DT/the text/NNP/text. so/RB/so that/IN/that is/VBZ/is it/PRP/it for/IN/for pattern/NN/pattern matching/VBG/matching from/IN/from us/PRP/us i/PRP/i would/MD/would recommend/VB/recommend strangely/RB/strangely that/NNP/that. you/PRP/you take/VBP/take more/JJR/more examples/NNS/examples and/CC/and do/VBP/do this/DT/this yourself/PRP/yourself take/VBP/take examples/NNS/examples of/IN/of text/NN/text strings/NNS/strings take/VBP/take examples/NNS/examples of/IN/of pattern/NN/pattern take/NN/take these/DT/these patterns/NNS/patterns compute/VBP/compute the/DT/the l/NN/l values/NNS/values compute/VBP/compute the/DT/the f/NN/f values/NNS/values see/VBP/see /,/, how/WRB/how these/DT/these values/NNS/values you/PRP/you know/VBP/know sit/NN/sit in/NNP/in. then/RB/then /,/, take/VB/take text/NN/text and/CC/and see/VB/see how/WRB/how the/DT/the algorithms/NNS/algorithms runs/VBZ/runs with/IN/with this/DT/this pattern/NN/pattern and/CC/and takes/VBZ/takes what/WP/what happens/NNS/happens to/TO/to the/DT/the pointers/NNS/pointers how/WRB/how the/DT/the pointers/NNS/pointers move/VBP/move how/WRB/how do/VBP/do you/PRP/you shift/VB/shift /,/, what/WDT/what exactly/RB/exactly this/DT/this 1/CD/1 mean/NN/mean by/IN/by shifting/NN/shifting a/DT/a pattern/NN/pattern etcetera/NN/etcetera /,/, etcetera/NNP/etcetera. so/RB/so /,/, i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to run/VB/run this/DT/this algorithm/NNP/algorithm. you/PRP/you let/VB/let you/PRP/you hopefully/RB/hopefully understood/VBD/understood on/IN/on a/DT/a few/JJ/few examples/NNS/examples that/WDT/that you/PRP/you can/MD/can cook/VB/cook up/RP/up yourself/NNP/yourself. so/RB/so that/IN/that you/PRP/you get/VBP/get a/DT/a better/JJR/better hang/NN/hang of/IN/of what/WP/what exactly/RB/exactly is/VBZ/is going/VBG/going on/NNP/on. thank/NN/thank you/NNP/you. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institution/NN/institution of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 16/CD/16 combinatorial/JJ/combinatorial search/NN/search and/CC/and optimization/NN/optimization ?/./? i/PRP/i welcome/VBP/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. our/PRP$/our topic/JJ/topic for/IN/for today/NN/today is/VBZ/is combinatorial/JJ/combinatorial search/NN/search and/CC/and optimization/NNP/optimization. the/DT/the general/JJ/general problem/NN/problem that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to address/NN/address is/VBZ/is something/NN/something like/IN/like the/DT/the following/NNP/following. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 27/CD/27 /CD/) so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find an/DT/an object/NN/object and/CC/and this/DT/this will/MD/will usually/RB/usually be/VB/be a/DT/a discrete/JJ/discrete object/NN/object say/NN/say a/DT/a set/NN/set of/IN/of numbers/NNS/numbers or/CC/or a/DT/a graph/NNP/graph. and/CC/and since/IN/since it/PRP/it is/VBZ/is a/DT/a discrete/JJ/discrete objects/NNS/objects object/VBP/object when/WRB/when we/PRP/we talk/VBP/talk about/IN/about a/DT/a set/NN/set of/IN/of number/NNP/number. we/PRP/we will/MD/will usually/RB/usually mean/VB/mean set/VBN/set of/IN/of integers/NNP/integers. so/RB/so /,/, even/RB/even perhaps/RB/perhaps set/VBN/set of/IN/of zero/NN/zero and/CC/and values/NNP/values. and/CC/and this/DT/this object/NN/object must/MD/must satisfy/VB/satisfy certain/JJ/certain given/VBN/given constraints/NNP/constraints. find/NN/find us/PRP/us find/VBP/find an/DT/an object/NN/object such/JJ/such that/IN/that first/JJ/first it/PRP/it satisfies/VBZ/satisfies some/DT/some given/VBN/given constraints/NNP/constraints. and/CC/and further/JJ/further more/RBR/more optionally/RB/optionally then/RB/then might/MD/might be/VB/be a/DT/a second/JJ/second requirement/NN/requirement that/WDT/that of/IN/of all/DT/all objects/NNS/objects satisfying/VBG/satisfying those/DT/those constraints/NNP/constraints. we/PRP/we want/VBP/want an/DT/an object/NN/object of/IN/of the/DT/the lease/NN/lease cost/NN/cost /,/, where/WRB/where the/DT/the cost/NN/cost is/VBZ/is a/DT/a function/NN/function defined/VBN/defined on/IN/on the/DT/the objects/NNS/objects ?/./? is/VBZ/is a/DT/a function/NN/function from/IN/from the/DT/the space/NN/space of/IN/of objects/NNS/objects to/TO/to real/JJ/real numbers/NNS/numbers ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 24/CD/24 /CD/) optionally/RB/optionally /,/, we/PRP/we might/MD/might also/RB/also have/VB/have an/DT/an alternate/JJ/alternate definition/NN/definition in/IN/in which/WDT/which instead/RB/instead of/IN/of saying/VBG/saying we/PRP/we want/VBP/want least/JJS/least cost/NNP/cost. so/RB/so option/NN/option 2/CD/2 /,/, it/PRP/it could/MD/could be/VB/be stated/VBN/stated differently/RB/differently instead/RB/instead of/IN/of asking/VBG/asking for/IN/for the/DT/the object/NN/object of/IN/of least/JJS/least cost/NN/cost we/PRP/we want/VBP/want an/DT/an object/NN/object of/IN/of maximum/NN/maximum benefit/NNP/benefit. find/NN/find object/NN/object of/IN/of maximum/NN/maximum benefit/NN/benefit of/IN/of course/NN/course in/IN/in addition/NN/addition to/TO/to satisfying/VBG/satisfying the/DT/the given/VBN/given constraints/NNP/constraints. benefit/NN/benefit is/VBZ/is also/RB/also a/DT/a function/NN/function from/IN/from the/DT/the objects/NNS/objects to/TO/to real/JJ/real numbers/NNP/numbers. given/VBN/given note/NN/note initiately/RB/initiately that/IN/that these/DT/these are/VBP/are not/RB/not really/RB/really too/RB/too distinct/JJ/distinct for/IN/for simulations/NNP/simulations. but/CC/but /,/, we/PRP/we can/MD/can set/VB/set benefit/NN/benefit equal/JJ/equal to/TO/to negative/JJ/negative of/IN/of the/DT/the cost/NNP/cost. and/CC/and then/RB/then instead/RB/instead of/IN/of maximizing/VBG/maximizing the/DT/the benefit/NN/benefit it/PRP/it is/VBZ/is the/DT/the same/JJ/same as/IN/as minimizing/NN/minimizing the/DT/the cost/NNP/cost. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an abstract/NN/abstract definition/NN/definition and/CC/and let/VB/let me/PRP/me give/VB/give you/PRP/you a/DT/a few/JJ/few examples/NNS/examples initiately/NNP/initiately. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 09/CD/09 /CD/) so/RB/so /,/, let/VB/let me/PRP/me first/RB/first start/VB/start with/IN/with the/DT/the familiar/JJ/familiar example/NN/example in/IN/in which/WDT/which there/EX/there is/VBZ/is no/DT/no objective/NN/objective function/NN/function given/NNP/given. so/RB/so /,/, this/DT/this cost/NN/cost function/NN/function for/IN/for example/NN/example /,/, or/CC/or this/DT/this benefit/NN/benefit function/NN/function is/VBZ/is also/RB/also often/RB/often called/VBN/called an/DT/an objective/NN/objective function/NNP/function. and/CC/and so/RB/so in/IN/in this/DT/this first/JJ/first example/NN/example /,/, we/PRP/we are/VBP/are not/RB/not given/VBN/given an/DT/an objective/JJ/objective function/NN/function /,/, but/CC/but here/RB/here only/RB/only given/VBN/given constraints/NNP/constraints. so/RB/so /,/, this/DT/this example/NN/example that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to talk/VB/talk about/IN/about this/DT/this is/VBZ/is so/RB/so called/VBN/called 8/CD/8 queens/NNS/queens problem/NNP/problem. probably/RB/probably /,/, most/RBS/most of/IN/of what/WP/what this/DT/this is/VBZ/is so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given usual/JJ/usual chess/NN/chess board/NNP/board. and/CC/and we/PRP/we want/VBP/want to/TO/to place/VB/place queens/NNS/queens on/IN/on it/NNP/it. so/IN/so /,/, place/NN/place 8/CD/8 queens/NNS/queens on/IN/on usual/JJ/usual which/WDT/which is/VBZ/is an/DT/an 8/CD/8 by/IN/by 8/CD/8 chess/NNS/chess board/NN/board such/JJ/such that/IN/that no/DT/no 2/CD/2 queens/NNS/queens capture/NN/capture each/DT/each other/JJ/other or/CC/or no/DT/no 2/CD/2 queens/NNS/queens are/VBP/are in/IN/in the/DT/the same/JJ/same row/NN/row same/NN/same column/NN/column or/CC/or same/JJ/same diagonal/NNP/diagonal. we/PRP/we remainder/VBP/remainder by/IN/by this/DT/this is/VBZ/is a/DT/a problem/NN/problem in/IN/in the/DT/the sense/NN/sense /,/, we/PRP/we have/VBP/have described/NNP/described. well/RB/well /,/, we/PRP/we can/MD/can always/RB/always modulate/VB/modulate as/IN/as problem/NN/problem on/IN/on numbers/NNS/numbers an/DT/an integer/NNP/integer. so/RB/so /,/, we/PRP/we can/MD/can think/VB/think of/IN/of this/DT/this as/IN/as find/NN/find q/NN/q 1/CD/1 q/NN/q 2/CD/2 to/TO/to q/VB/q 8/CD/8. let/VB/let us/PRP/us say/VB/say q/NN/q i/PRP/i represents/VBZ/represents where/WRB/where in/IN/in column/NN/column i/PRP/i the/DT/the ith/NN/ith queen/NN/queen is/VBZ/is going/VBG/going to/TO/to be/VB/be placed/NNP/placed. so/RB/so /,/, find/IN/find these/DT/these q/NN/q such/JJ/such that/IN/that q/NN/q of/IN/of i/PRP/i is/VBZ/is not/RB/not equal/JJ/equal to/TO/to q/VB/q of/IN/of j/NNP/j. so/RB/so /,/, interferic/JJ/interferic q/NN/q of/IN/of i/PRP/i as/IN/as equal/JJ/equal to/TO/to the/DT/the row/NN/row in/IN/in which/WDT/which the/DT/the queen/NN/queen in/IN/in column/NN/column i/PRP/i is/VBZ/is placed/NNP/placed. so/RB/so /,/, this/DT/this condition/NN/condition simply/RB/simply says/VBZ/says that/IN/that the/DT/the green/JJ/green which/NN/which get/NN/get placed/VBD/placed in/IN/in the/DT/the row/NN/row in/IN/in column/NN/column i/NNP/i. does/VBZ/does not/RB/not have/VB/have as/RB/as it/PRP/it is/VBZ/is row/NN/row number/NN/number value/NN/value /,/, which/WDT/which is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the value/NN/value in/IN/in which/WDT/which value/NN/value which/WDT/which the/DT/the queen/NN/queen in/IN/in the/DT/the jth/NN/jth column/NN/column is/VBZ/is placed/NNP/placed. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words the/DT/the ith/NN/ith queen/NN/queen in/IN/in the/DT/the jth/NN/jth queen/NN/queen are/VBP/are not/RB/not placed/VBN/placed in/IN/in the/DT/the same/JJ/same row/NNP/row. and/CC/and we/PRP/we will/MD/will assume/VB/assume that/IN/that the/DT/the ith/NN/ith queen/NN/queen is/VBZ/is placed/VBN/placed in/IN/in the/DT/the ith/NN/ith column/NN/column and/CC/and the/DT/the jth/NN/jth queen/NN/queen is/VBZ/is placed/VBN/placed in/IN/in the/DT/the jth/NN/jth column/NNP/column. but/CC/but this/DT/this is/VBZ/is not/RB/not all/NNP/all. so/RB/so /,/, we/PRP/we have/VBP/have already/RB/already taken/VBN/taken care/NN/care of/IN/of the/DT/the first/JJ/first condition/NN/condition that/WDT/that they/PRP/they are/VBP/are not/RB/not placed/VBN/placed in/IN/in the/DT/the same/JJ/same row/NNP/row. well/RB/well /,/, they/PRP/they are/VBP/are not/RB/not placed/VBN/placed in/IN/in the/DT/the same/JJ/same column/NNP/column. because/IN/because /,/, we/PRP/we are/VBP/are only/RB/only defining/VBG/defining 8/CD/8 variables/NNS/variables and/CC/and we/PRP/we are/VBP/are saying/VBG/saying that/IN/that k/NN/k of/IN/of i/PRP/i is/VBZ/is the/DT/the position/NNP/position. the/DT/the queen/NN/queen which/WDT/which is/VBZ/is going/VBG/going to/TO/to a/DT/a fixed/VBN/fixed in/IN/in that/DT/that which/WDT/which is/VBZ/is going/VBG/going to/TO/to be/VB/be placed/VBN/placed in/IN/in the/DT/the ith/NN/ith column/NN/column and/CC/and we/PRP/we are/VBP/are only/RB/only giving/VBG/giving the/DT/the row/NNP/row. now/RB/now /,/, we/PRP/we need/VBP/need to/TO/to take/VB/take care/NN/care of/IN/of the/DT/the condition/NN/condition that/IN/that they/PRP/they are/VBP/are not/RB/not placed/VBN/placed in/IN/in the/DT/the same/JJ/same diagonal/NNP/diagonal. and/CC/and this/DT/this condition/NN/condition is/VBZ/is easily/RB/easily taken/VBN/taken care/NN/care of/IN/of by/IN/by asserting/NN/asserting that/IN/that q/NN/q of/IN/of i/PRP/i minus/VBZ/minus q/NN/q of/IN/of j/NNP/j. this/DT/this is/VBZ/is simply/RB/simply the/DT/the distance/NN/distance along/IN/along the/DT/the rows/NNS/rows the/DT/the vertical/JJ/vertical distance/NNP/distance. the/DT/the distance/NN/distance between/IN/between the/DT/the rows/NNS/rows and/CC/and if/IN/if i/PRP/i take/VBP/take the/DT/the absolute/JJ/absolute value/NN/value it/PRP/it will/MD/will actually/RB/actually be/VB/be an/DT/an unsigned/VBN/unsigned and/CC/and this/DT/this should/MD/should not/RB/not be/VB/be equal/JJ/equal to/TO/to i/PRP/i minus/VBZ/minus j/NNP/j. this/DT/this is/VBZ/is true/JJ/true for/IN/for all/DT/all i/PRP/i j/VBP/j distinct/NNP/distinct. so/RB/so /,/, we/PRP/we have/VBP/have now/RB/now formulated/VBN/formulated the/DT/the 8/CD/8 queens/NNS/queens problem/NN/problem as/IN/as the/DT/the problem/NN/problem of/IN/of finding/NN/finding a/DT/a sequence/NN/sequence of/IN/of numbers/NNS/numbers q/VBP/q 1/CD/1 through/IN/through q/NN/q 8/CD/8 such/JJ/such that/IN/that they/PRP/they satisfy/VBP/satisfy these/DT/these 2/CD/2 conditions/NNP/conditions. well/RB/well actually/RB/actually these/DT/these are/VBP/are not/RB/not 2/CD/2 conditions/NNS/conditions between/IN/between these/DT/these conditions/NNS/conditions which/WDT/which apply/RB/apply for/IN/for all/DT/all i/PRP/i and/CC/and j/NNP/j. so/RB/so /,/, this/DT/this is/VBZ/is say/VBP/say /,/, whatever/RB/whatever 8/CD/8 times/NNS/times 8/CD/8 upon/IN/upon 2/CD/2 conditions/NNS/conditions this/DT/this is/VBZ/is also/RB/also 8/CD/8 times/NNS/times 8/CD/8 upon/IN/upon 2/CD/2 conditions/NNP/conditions. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 15/CD/15 /CD/) of/IN/of course/NN/course /,/, this/DT/this is/VBZ/is really/RB/really a/DT/a toy/NN/toy or/CC/or game/NN/game problem/NN/problem /,/, but/CC/but we/PRP/we can/MD/can do/VB/do we/PRP/we can/MD/can have/VB/have more/JJR/more serious/JJ/serious problems/NNS/problems as/IN/as well/NNP/well. so/RB/so /,/, let/VB/let me/PRP/me give/VB/give a/DT/a few/JJ/few of/IN/of those/NNP/those. the/DT/the second/JJ/second problem/NN/problem that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at is/VBZ/is so/RB/so called/VBN/called knapsack/NN/knapsack problem/NNP/problem. in/IN/in this/DT/this case/NN/case in/IN/in fact/NN/fact /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have an/DT/an object/NN/object function/NN/function as/IN/as well/NNP/well. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 05/CD/05 /:/: 09/CD/09 /CD/) /CD/) so/RB/so in/IN/in this/DT/this case/NN/case /,/, our/PRP$/our question/NN/question was/VBD/was to/TO/to their/PRP$/their exist/NN/exist such/JJ/such numbers/NNP/numbers. that/IN/that is/VBZ/is satisfy/JJ/satisfy these/DT/these conditions/NNP/conditions. but/CC/but /,/, it/PRP/it did/VBD/did not/RB/not say/VB/say that/IN/that if/IN/if there/EX/there are/VBP/are several/JJ/several such/JJ/such 8/CD/8 tuples/NNS/tuples of/IN/of number/NN/number which/WDT/which one/CD/one we/PRP/we are/VBP/are interested/JJ/interested in/NNP/in. we/PRP/we said/VBD/said the/DT/the just/RB/just find/VBP/find any/DT/any such/JJ/such set/NN/set or/CC/or any/DT/any such/JJ/such sequence/NNP/sequence. here/RB/here /,/, also/RB/also going/VBG/going to/TO/to have/VB/have an/DT/an objective/JJ/objective function/NNP/function. so/RB/so here/RB/here as/IN/as /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have an/DT/an input/NN/input and/CC/and the/DT/the input/NN/input consist/VBP/consist of/IN/of say/NN/say numbers/NNS/numbers v/VBP/v 1/CD/1 v/NN/v 2/CD/2 all/DT/all the/DT/the way/NN/way to/TO/to v/VB/v n/NNP/n. and/CC/and thing/NN/thing of/IN/of v/NN/v i/PRP/i as/IN/as the/DT/the value/NN/value in/IN/in rupees/NNS/rupees say/VBP/say of/IN/of ith/NN/ith object/NNP/object. so/RB/so implicit/JJ/implicit is/VBZ/is that/IN/that /,/, there/EX/there is/VBZ/is a/DT/a set/NN/set of/IN/of n/NN/n objects/NNS/objects over/IN/over here/RB/here each/DT/each object/NN/object has/VBZ/has a/DT/a value/NN/value and/CC/and that/IN/that value/NN/value is/VBZ/is known/VBN/known to/TO/to us/NNP/us. in/IN/in addition/NN/addition each/DT/each object/NN/object also/RB/also has/VBZ/has a/DT/a weight/NNP/weight. so/RB/so /,/, say/VB/say w/NN/w 1/CD/1 w/NN/w 2/CD/2 all/DT/all the/DT/the w8/NNP/w8 w/NN/w n/NN/n and/CC/and say/VB/say such/JJ/such that/IN/that w/NN/w i/PRP/i is/VBZ/is the/DT/the weight/NN/weight saying/VBG/saying in/IN/in kilos/NNS/kilos in/IN/in kilo/NN/kilo grams/NNS/grams of/IN/of the/DT/the ith/NN/ith object/NNP/object. and/CC/and imagine/NN/imagine that/IN/that /,/, we/PRP/we are/VBP/are given/VBN/given a/DT/a knapsack/NN/knapsack which/WDT/which has/VBZ/has capacity/NN/capacity c/NN/c /,/, c/NN/c is/VBZ/is weight/VBN/weight /,/, capacity/NN/capacity by/IN/by weight/NNP/weight. the/DT/the problem/NN/problem should/MD/should be/VB/be this/DT/this manner/NN/manner ;/:/; we/PRP/we want/VBP/want to/TO/to determine/VB/determine which/WDT/which of/IN/of these/DT/these objects/NNP/objects. we/PRP/we should/MD/should place/VB/place in/IN/in the/DT/the knapsack/NN/knapsack such/JJ/such that/IN/that we/PRP/we do/VBP/do not/RB/not exceed/VB/exceed the/DT/the capacity/NN/capacity of/IN/of the/DT/the knapsack/NN/knapsack and/CC/and such/JJ/such that/IN/that we/PRP/we are/VBP/are picking/VBG/picking up/RP/up objects/NNS/objects of/IN/of maximum/NN/maximum value/NNP/value. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find a/DT/a subset/NN/subset of/IN/of the/DT/the object/NN/object such/JJ/such that/IN/that value/NN/value of/IN/of objects/NNP/objects. the/DT/the total/JJ/total value/NN/value of/IN/of selected/VBN/selected objects/NNS/objects is/VBZ/is as/RB/as large/JJ/large as/IN/as possible/JJ/possible /,/, while/IN/while capacity/NN/capacity while/IN/while total/JJ/total weight/NN/weight is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/CD/0. so/RB/so although/IN/although /,/, this/DT/this problem/NN/problem looks/VBZ/looks like/IN/like it/PRP/it arises/VBZ/arises in/IN/in the/DT/the context/NN/context of/IN/of objects/NNS/objects and/CC/and values/NNS/values and/CC/and weights/NNS/weights it/PRP/it can/MD/can also/RB/also arise/VB/arise and/CC/and other/JJ/other context/NNP/context. so/IN/so maybe/RB/maybe /,/, there/EX/there are/VBP/are jobs/NNS/jobs and/CC/and their/PRP$/their profits/NNS/profits associated/VBN/associated with/IN/with the/DT/the job/NNP/job. and/CC/and we/PRP/we want/VBP/want to/TO/to decide/VB/decide which/WDT/which job/NN/job to/TO/to select/VB/select something/NN/something like/IN/like that/NNP/that. so/RB/so /,/, again/RB/again there/EX/there is/VBZ/is a/DT/a constraint/NN/constraint over/IN/over here/RB/here well/RB/well first/RB/first of/IN/of all/DT/all there/EX/there is/VBZ/is a/DT/a combinatorial/JJ/combinatorial object/NN/object that/WDT/that we/PRP/we need/VBP/need to/TO/to take/VB/take which/WDT/which is/VBZ/is this/DT/this /,/, which/WDT/which is/VBZ/is a/DT/a subset/NN/subset of/IN/of the/DT/the given/VBN/given objects/NNS/objects or/CC/or crops/NNS/crops call/VBP/call these/DT/these objects/NNS/objects items/NNP/items. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to pick/VB/pick a/DT/a subset/NN/subset of/IN/of these/DT/these given/VBN/given items/NNP/items. and/CC/and there/EX/there is/VBZ/is a/DT/a constraint/NN/constraint on/IN/on them/PRP/them that/IN/that the/DT/the weight/NN/weight of/IN/of the/DT/the selected/VBN/selected items/NNS/items should/MD/should not/RB/not be/VB/be bigger/JJR/bigger than/IN/than c/NN/c that/IN/that the/DT/the constraints/NNP/constraints. and/CC/and then/RB/then there/RB/there is/VBZ/is also/RB/also an/DT/an objective/JJ/objective function/NNP/function. the/DT/the objective/NN/objective function/NN/function is/VBZ/is that/IN/that there/EX/there value/NN/value should/MD/should be/VB/be as/RB/as large/JJ/large as/IN/as possible/NNP/possible. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a maximization/NN/maximization problem/NN/problem and/CC/and the/DT/the objective/NN/objective function/NN/function given/VBN/given to/TO/to us/PRP/us can/MD/can be/VB/be thought/VBN/thought of/IN/of is/VBZ/is a/DT/a benefit/NN/benefit function/NNP/function. because/IN/because after/IN/after all/DT/all /,/, if/IN/if we/PRP/we pick/VBP/pick as/IN/as many/JJ/many objects/NNS/objects of/IN/of large/JJ/large value/NNP/value. we/PRP/we are/VBP/are maximizing/VBG/maximizing the/DT/the benefit/NN/benefit to/TO/to ourselves/NNP/ourselves. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 32/CD/32 /CD/) let/NN/let me/PRP/me give/VBP/give you/PRP/you one/CD/one more/JJR/more example/NN/example /,/, this/DT/this is/VBZ/is another/DT/another classic/JJ/classic example/NN/example this/DT/this is/VBZ/is so/RB/so called/VBN/called travelling/VBG/travelling sales/NNS/sales person/NN/person problem/NNP/problem. the/DT/the input/NN/input over/IN/over here/RB/here is/VBZ/is a/DT/a weighted/VBN/weighted graph/NNP/graph. and/CC/and the/DT/the output/NN/output is/VBZ/is a/DT/a tour/NN/tour through/IN/through the/DT/the graph/NNP/graph. that/IN/that visits/NNS/visits every/DT/every vertex/NN/vertex exactly/RB/exactly once/RB/once and/CC/and objective/JJ/objective we/PRP/we want/VBP/want to/TO/to minimize/VB/minimize the/DT/the weight/NN/weight of/IN/of the/DT/the edges/NNS/edges in/IN/in the/DT/the tour/NNP/tour. the/DT/the names/NNS/names come/VBP/come from/IN/from the/DT/the association/NN/association that/IN/that we/PRP/we can/MD/can think/VB/think of/IN/of this/DT/this weighted/VBN/weighted graph/NN/graph as/IN/as representing/VBG/representing a/DT/a map/NNP/map. map/NN/map of/IN/of a/DT/a city/NN/city for/IN/for example/NN/example /,/, i/PRP/i am/VBP/am sorry/JJ/sorry a/DT/a map/NN/map of/IN/of a/DT/a country/NN/country or/CC/or a/DT/a map/NN/map of/IN/of the/DT/the world/NN/world vertices/NNS/vertices represent/VBP/represent towns/NNS/towns and/CC/and edges/NNS/edges represents/NNS/represents roads/NNS/roads and/CC/and weight/VBD/weight represent/NN/represent the/DT/the length/NN/length of/IN/of the/DT/the edges/NNP/edges. so/RB/so /,/, imagine/NN/imagine that/IN/that there/EX/there is/VBZ/is a/DT/a sales/NNS/sales person/NN/person who/WP/who wants/VBZ/wants to/TO/to visit/VB/visit every/DT/every city/NN/city for/IN/for his/PRP$/his for/IN/for selling/VBG/selling his/PRP$/his products/NNP/products. however/RB/however /,/, he/PRP/he wants/VBZ/wants to/TO/to make/VB/make sure/JJ/sure that/IN/that he/PRP/he travels/VBZ/travels as/IN/as little/JJ/little as/IN/as possible/NNP/possible. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a problem/NN/problem that/WDT/that he/PRP/he might/MD/might he/PRP/he or/CC/or she/PRP/she might/MD/might want/VB/want to/TO/to solve/VB/solve she/PRP/she might/NNP/might. so/RB/so /,/, he/PRP/he would/MD/would like/VB/like to/TO/to find/VB/find the/DT/the tour/NN/tour that/IN/that visits/NNS/visits every/DT/every city/NN/city exactly/RB/exactly once/RB/once such/JJ/such that/IN/that the/DT/the total/JJ/total distance/NN/distance covered/VBN/covered along/IN/along all/DT/all the/DT/the edges/NNS/edges is/VBZ/is as/RB/as small/JJ/small as/IN/as possible/NNP/possible. again/RB/again on/IN/on one/CD/one hand/NN/hand this/DT/this may/MD/may seem/VB/seem like/IN/like a/DT/a problem/NN/problem relating/VBG/relating to/TO/to sales/NNS/sales persons/NNS/persons and/CC/and cities/NNS/cities and/CC/and roads/NNP/roads. but/CC/but /,/, this/DT/this problem/NN/problem arises/VBZ/arises in/IN/in many/JJ/many many/JJ/many contexts/NNP/contexts. for/IN/for example/NN/example this/DT/this problem/NN/problem arises/VBZ/arises in/IN/in robotics/NNS/robotics ;/:/; this/DT/this problem/NN/problem arises/VBZ/arises in/IN/in computation/NN/computation of/IN/of biology/NN/biology and/CC/and many/JJ/many other/JJ/other fields/NNP/fields. before/IN/before carrying/VBG/carrying on/IN/on let/NN/let me/PRP/me do/VBP/do an/DT/an example/NN/example of/IN/of this/DT/this problem/NN/problem just/RB/just to/TO/to clarify/VB/clarify what/WP/what is/VBZ/is meant/VBN/meant over/IN/over here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say that/IN/that we/PRP/we have/VBP/have four/CD/four cities/NNP/cities. these/DT/these are/VBP/are our/PRP$/our four/CD/four cities/NNS/cities and/CC/and so/RB/so this/DT/this is/VBZ/is our/PRP$/our graph/NNP/graph. so/RB/so typically/RB/typically /,/, we/PRP/we will/MD/will have/VB/have a/DT/a complete/JJ/complete graph/NN/graph over/IN/over here/RB/here the/DT/the graph/NN/graph i/PRP/i am/VBP/am going/VBG/going to/TO/to draw/VB/draw is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a undirected/VBN/undirected graph/NNP/graph. but/CC/but /,/, this/DT/this problem/NN/problem makes/VBZ/makes sense/NN/sense in/IN/in the/DT/the directed/VBN/directed case/NN/case as/IN/as well/RB/well /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the graph/NNP/graph. and/CC/and let/VB/let us/PRP/us say/VB/say there/EX/there are/VBP/are weights/NNS/weights over/IN/over here/NNP/here. so/RB/so for/IN/for example/NN/example /,/, this/DT/this weight/NN/weight could/MD/could be/VB/be 1/CD/1 this/DT/this could/MD/could be/VB/be 2/CD/2 say/VB/say 9/CD/9. this/DT/this could/MD/could be/VB/be 6/CD/6 this/DT/this could/MD/could be/VB/be 2/CD/2 and/CC/and say/VB/say this/DT/this could/MD/could be/VB/be 4/CD/4. so/RB/so /,/, there/EX/there are/VBP/are various/JJ/various ways/NNS/ways in/IN/in which/WDT/which the/DT/the sales/NNS/sales man/NN/man could/MD/could tour/VB/tour through/IN/through this/DT/this cities/NNP/cities. and/CC/and so/RB/so /,/, for/IN/for example/NN/example /,/, 1/CD/1 way/NN/way is/VBZ/is this/DT/this outer/NN/outer most/JJS/most this/DT/this outer/NN/outer tour/NN/tour /,/, what/WP/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of the/DT/the ?/./? well/RB/well the/DT/the cost/NN/cost of/IN/of that/DT/that is/VBZ/is 1/CD/1 plus/RB/plus 2/CD/2 plus/NNS/plus 9/CD/9 plus/NNS/plus 4/CD/4. so/RB/so that/IN/that is/VBZ/is 16/CD/16 /,/, here/RB/here is/VBZ/is a/DT/a better/JJR/better tour/NNP/tour. so/RB/so for/IN/for example/NN/example /,/, something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, this/DT/this figure/NN/figure of/IN/of 8/CD/8 this/DT/this tour/NN/tour /,/, what/WP/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of that/DT/that ?/./? that/IN/that is/VBZ/is 2/CD/2 plus/RB/plus 6/CD/6 plus/NNS/plus 2/CD/2 plus/NNS/plus 4/CD/4. so/RB/so that/IN/that is/VBZ/is 14/CD/14. so/RB/so /,/, this/DT/this is/VBZ/is in/IN/in fact/NN/fact /,/, a/DT/a better/JJR/better to/TO/to over/IN/over than/IN/than just/RB/just the/DT/the outer/NN/outer tour/NNP/tour. and/CC/and in/IN/in fact/NN/fact /,/, you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to check/VB/check that/IN/that this/DT/this is/VBZ/is the/DT/the best/JJS/best possible/JJ/possible tour/NNP/tour. in/IN/in any/DT/any case/NN/case the/DT/the pointers/NNS/pointers we/PRP/we want/VBP/want to/TO/to we/PRP/we want/VBP/want to/TO/to make/VB/make sure/JJ/sure that/IN/that we/PRP/we have/VBP/have found/VBN/found the/DT/the tour/NN/tour which/WDT/which has/VBZ/has the/DT/the minimum/JJ/minimum such/JJ/such cost/NN/cost at/IN/at the/DT/the minimum/JJ/minimum such/JJ/such length/NN/length if/IN/if you/PRP/you like/NNP/like. these/DT/these are/VBP/are only/RB/only three/CD/three examples/NNS/examples of/IN/of the/DT/the kinds/NNS/kinds of/IN/of problems/NNS/problems we/PRP/we have/VBP/have in/IN/in mind/NNP/mind. and/CC/and in/IN/in fact/NN/fact /,/, later/JJ/later on/IN/on in/IN/in the/DT/the course/NN/course will/MD/will be/VB/be considering/VBG/considering more/JJR/more will/MD/will be/VB/be considering/VBG/considering more/JJR/more problems/NNS/problems of/IN/of a/DT/a similar/JJ/similar kind/NNP/kind. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 10/CD/10 /CD/) but/CC/but let/VB/let me/PRP/me now/RB/now state/VBP/state the/DT/the topic/JJ/topic for/IN/for today/NNP/today. the/DT/the idea/NN/idea today/NN/today is/VBZ/is to/TO/to look/VB/look at/IN/at we/PRP/we want/VBP/want to/TO/to start/VB/start a/DT/a study/NN/study of/IN/of strategies/NNS/strategies for/IN/for solving/VBG/solving combinatorial/JJ/combinatorial optimization/NN/optimization problems/NNP/problems. combinatorial/JJ/combinatorial optimization/NN/optimization and/CC/and search/NN/search problems/NNS/problems /,/, i/PRP/i may/MD/may drop/VB/drop the/DT/the search/NN/search occasionally/RB/occasionally /,/, but/CC/but that/IN/that is/VBZ/is what/WP/what that/IN/that is/VBZ/is imply/NNP/imply. today/NN/today i/PRP/i am/VBP/am going/VBG/going to/TO/to talk/VB/talk about/IN/about a/DT/a few/JJ/few basic/JJ/basic strategies/NNS/strategies one/CD/one is/VBZ/is so/RB/so called/VBN/called well/RB/well one/CD/one is/VBZ/is based/VBN/based so/RB/so called/VBN/called backtrack/NN/backtrack search/NN/search /,/, but/CC/but it/PRP/it really/RB/really a/DT/a sort/NN/sort of/IN/of a/DT/a brute/NN/brute force/NN/force search/NN/search strategy/NNP/strategy. so/RB/so /,/, under/IN/under this/DT/this we/PRP/we will/MD/will be/VB/be looking/VBG/looking at/IN/at what/WP/what is/VBZ/is called/VBN/called backtrack/NN/backtrack search/NNP/search. then/RB/then /,/, we/PRP/we look/VBP/look at/IN/at the/DT/the strategy/NN/strategy called/VBD/called branch/NN/branch and/CC/and bound/NNP/bound. will/MD/will also/RB/also be/VB/be looking/VBG/looking at/IN/at a/DT/a strategy/NN/strategy called/VBN/called dynamic/JJ/dynamic programming/NN/programming and/CC/and in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is this/DT/this strategy/NN/strategy that/IN/that we/PRP/we want/VBP/want to/TO/to study/NN/study the/DT/the most/NNP/most. because/IN/because /,/, this/DT/this is/VBZ/is the/DT/the strategy/NN/strategy which/WDT/which we/PRP/we can/MD/can analyze/VB/analyze and/CC/and very/RB/very often/RB/often it/PRP/it gives/VBZ/gives us/PRP/us very/RB/very fast/RB/fast algorithms/VBZ/algorithms as/IN/as well/NNP/well. but/CC/but /,/, it/PRP/it requires/VBZ/requires as/IN/as considerable/JJ/considerable about/IN/about among/IN/among the/DT/the diff/NN/diff level/NN/level analysis/NNP/analysis. but/CC/but /,/, i/PRP/i am/VBP/am wanted/VBN/wanted to/TO/to start/VB/start talking/NN/talking about/IN/about this/DT/this strategy/NN/strategy today/NNP/today. there/EX/there is/VBZ/is also/RB/also a/DT/a strategy/NN/strategy which/WDT/which is/VBZ/is often/RB/often called/VBN/called greedy/JJ/greedy strategy/NN/strategy which/WDT/which is/VBZ/is also/RB/also going/VBG/going to/TO/to be/VB/be discussed/VBN/discussed on/IN/on this/DT/this course/NNP/course. because/IN/because /,/, this/DT/this is/VBZ/is also/RB/also gives/VBZ/gives us/PRP/us very/RB/very fast/RB/fast algorithms/VBZ/algorithms for/IN/for solving/VBG/solving combinatorial/JJ/combinatorial optimization/NN/optimization problems/NNP/problems. let/NN/let me/PRP/me /,/, point/NN/point out/IN/out right/RB/right away/RB/away that/IN/that this/DT/this strategy/NN/strategy the/DT/the backtrack/NN/backtrack search/NN/search strategy/NN/strategy is/VBZ/is inner/NN/inner most/RBS/most was/VBD/was general/NNP/general. this/DT/this can/MD/can be/VB/be apply/RB/apply to/TO/to almost/RB/almost any/DT/any problem/NNP/problem. this/DT/this is/VBZ/is the/DT/the more/RBR/more restricted/JJ/restricted strategy/NN/strategy /,/, but/CC/but it/PRP/it becomes/VBZ/becomes little/JJ/little bit/NN/bit more/RBR/more efficient/JJ/efficient than/IN/than backtrack/NN/backtrack search/NN/search problem/NN/problem search/NN/search strategies/NNP/strategies. dynamic/JJ/dynamic programming/NN/programming typically/RB/typically is/VBZ/is more/RBR/more efficient/JJ/efficient than/IN/than branch/NN/branch and/CC/and bound/NNP/bound. but/CC/but /,/, it/PRP/it requires/VBZ/requires as/IN/as to/TO/to do/VB/do a/DT/a lot/NN/lot more/RBR/more analytical/JJ/analytical work/NNP/work. we/PRP/we need/VBP/need to/TO/to actually/RB/actually exploit/VB/exploit the/DT/the problem/NN/problem and/CC/and it/PRP/it is/VBZ/is not/RB/not always/RB/always the/DT/the case/NN/case the/DT/the dynamic/JJ/dynamic programming/NN/programming ideas/NNS/ideas will/MD/will be/VB/be applicable/NNP/applicable. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 02/CD/02 /CD/) so/RB/so /,/, let/VB/let us/PRP/us come/VB/come to/TO/to brute/VB/brute force/NN/force search/NN/search strategies/NNP/strategies. the/DT/the name/NN/name should/MD/should suggest/VB/suggest to/TO/to you/PRP/you that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do something/NN/something fairly/RB/fairly simple/JJ/simple minded/NNP/minded. and/CC/and in/IN/in fact/NN/fact /,/, let/VB/let us/PRP/us just/RB/just catch/VBP/catch how/WRB/how you/PRP/you may/MD/may do/VB/do this/DT/this simple/JJ/simple minded/VBD/minded ;/:/; we/PRP/we might/MD/might do/VB/do something/NN/something simple/VB/simple minded/VBN/minded to/TO/to make/VB/make sure/NNP/sure. however/RB/however that/IN/that we/PRP/we do/VBP/do get/VB/get an/DT/an answer/NN/answer correct/NN/correct we/PRP/we correctly/NNP/correctly. so/RB/so /,/, the/DT/the basic/JJ/basic idea/NN/idea as/IN/as you/PRP/you might/MD/might guess/VB/guess or/CC/or as/IN/as in/IN/in such/JJ/such as/IN/as is/VBZ/is to/TO/to systematically/RB/systematically somehow/VB/somehow a/DT/a numerate/NN/numerate or/CC/or generate/VB/generate all/DT/all possible/JJ/possible objects/NNS/objects which/WDT/which can/MD/can potentially/RB/potentially satisfy/VB/satisfy the/DT/the constraints/NNP/constraints. for/IN/for each/DT/each object/NN/object here/RB/here is/VBZ/is /,/, what/WP/what we/PRP/we do/VBP/do ?/./? then/RB/then /,/, we/PRP/we first/RB/first check/VBP/check whether/IN/whether in/IN/in fact/NN/fact the/DT/the constraints/NNS/constraints are/VBP/are satisfied/NNP/satisfied. if/IN/if so/RB/so /,/, we/PRP/we evaluate/VBP/evaluate the/DT/the cost/NN/cost or/CC/or benefit/NN/benefit function/NNP/function. if/IN/if the/DT/the cost/NN/cost is/VBZ/is better/RBR/better than/IN/than the/DT/the cost/NN/cost so/RB/so for/IN/for that/DT/that is/VBZ/is if/IN/if the/DT/the cost/NN/cost of/IN/of this/DT/this object/NN/object is/VBZ/is less/JJR/less than/IN/than the/DT/the cost/NN/cost of/IN/of the/DT/the best/JJS/best object/NN/object so/RB/so for/IN/for then/RB/then we/PRP/we storage/NNP/storage. so/RB/so /,/, we/PRP/we record/VBP/record cost/NN/cost if/IN/if necessary/NNP/necessary. similarly/RB/similarly /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a benefit/NN/benefit function/NN/function given/VBN/given to/TO/to us/PRP/us instead/RB/instead of/IN/of the/DT/the cost/NN/cost function/NNP/function. we/PRP/we evaluate/VBP/evaluate the/DT/the benefit/NN/benefit function/NN/function and/CC/and check/NN/check this/DT/this benefit/NN/benefit function/NN/function with/IN/with the/DT/the best/JJS/best benefit/NN/benefit function/NN/function found/VBD/found so/RB/so for/NNP/for. if/IN/if this/DT/this new/JJ/new object/NN/object has/VBZ/has a/DT/a benefit/NN/benefit function/NN/function which/WDT/which is/VBZ/is better/RBR/better than/IN/than the/DT/the best/JJS/best of/IN/of best/JJS/best benefit/NN/benefit function/NN/function founds/NNS/founds so/RB/so for/NNP/for. then/RB/then /,/, we/PRP/we record/VBP/record this/DT/this benefit/NN/benefit function/NN/function and/CC/and also/RB/also the/DT/the current/JJ/current object/NN/object record/NN/record cost/NN/cost /,/, if/IN/if necessary/JJ/necessary and/CC/and current/JJ/current object/NNP/object. so/RB/so clearly/RB/clearly /,/, if/IN/if we/PRP/we generate/VBP/generate all/DT/all possible/JJ/possible objects/NNS/objects and/CC/and we/PRP/we check/VBP/check whether/IN/whether each/DT/each of/IN/of them/PRP/them satisfies/VBZ/satisfies the/DT/the conditions/NNS/conditions this/DT/this procedure/NN/procedure must/MD/must certainly/RB/certainly work/NNP/work. this/DT/this procedure/NN/procedure must/MD/must will/MD/will be/VB/be guaranteed/VBN/guaranteed to/TO/to give/VB/give us/PRP/us the/DT/the correct/NN/correct answer/NNP/answer. just/RB/just because/IN/because /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going over/IN/over we/PRP/we are/VBP/are doing/VBG/doing everything/NN/everything that/IN/that can/MD/can possibly/RB/possibly have/VB/have to/TO/to be/VB/be done/NNP/done. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 04/CD/04 /CD/) a/DT/a question/NN/question over/IN/over is/VBZ/is how/WRB/how do/VBP/do we/PRP/we systematically/RB/systematically generate/VBP/generate all/DT/all possible/JJ/possible objects/NNP/objects. and/CC/and that/IN/that is/VBZ/is where/WRB/where slight/JJ/slight amount/NN/amount of/IN/of cleverness/NN/cleverness comes/VBZ/comes in/NNP/in. so/RB/so /,/, generating/VBG/generating all/DT/all possible/JJ/possible objects/NNS/objects are/VBP/are how/WRB/how to/TO/to generate/VB/generate /,/, the/DT/the basic/JJ/basic idea/NN/idea is/VBZ/is think/NN/think of/IN/of the/DT/the object/NN/object that/IN/that we/PRP/we want/VBP/want as/IN/as a/DT/a collection/NN/collection of/IN/of parts/NNS/parts or/CC/or a/DT/a collection/NN/collection of/IN/of slots/NNP/slots. then/RB/then /,/, consider/NN/consider each/DT/each possible/JJ/possible way/NN/way of/IN/of generating/VBG/generating each/DT/each part/NN/part or/CC/or if/IN/if you/PRP/you want/VBP/want to/TO/to think/VB/think of/IN/of this/DT/this object/NN/object as/IN/as a/DT/a template/NN/template in/IN/in which/WDT/which there/EX/there are/VBP/are slots/NNS/slots to/TO/to be/VB/be filled/NNP/filled. we/PRP/we want/VBP/want to/TO/to think/VB/think of/IN/of each/DT/each possible/JJ/possible way/NN/way possible/JJ/possible way/NN/way of/IN/of filling/NN/filling each/DT/each slot/NN/slot /,/, how/WRB/how do/VBP/do we/PRP/we go/VB/go about/IN/about actually/RB/actually doing/VBG/doing this/DT/this ?/./? well/RB/well we/PRP/we go/VBP/go over/IN/over the/DT/the parts/NNS/parts or/CC/or the/DT/the slots/NNS/slots one/CD/one after/IN/after another/NNP/another. so/RB/so /,/, the/DT/the basic/JJ/basic idea/NN/idea is/VBZ/is that/IN/that initially/RB/initially the/DT/the sort/NN/sort of/IN/of have/NN/have an/DT/an empty/JJ/empty template/NNP/template. so/RB/so /,/, all/DT/all ?/./? s/NNS/s slots/NNS/slots are/VBP/are empty/NNP/empty. then/RB/then /,/, we/PRP/we fill/MD/fill in/IN/in the/DT/the first/JJ/first slot/NN/slot of/IN/of course/NN/course ;/:/; this/DT/this can/MD/can be/VB/be done/VBN/done in/IN/in several/JJ/several possible/JJ/possible ways/NNP/ways. so/RB/so here/RB/here /,/, we/PRP/we have/VBP/have to/TO/to consider/VB/consider all/DT/all the/DT/the alternatives/NNP/alternatives. then/RB/then /,/, we/PRP/we fill/MD/fill in/IN/in the/DT/the next/JJ/next slot/NN/slot and/CC/and again/RB/again we/PRP/we consider/VBP/consider all/DT/all the/DT/the alternatives/NNS/alternatives over/IN/over here/RB/here and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 17/CD/17 /CD/) let/NN/let us/PRP/us /,/, take/VBP/take an/DT/an example/NN/example and/CC/and that/IN/that will/MD/will make/VB/make this/DT/this idea/NN/idea very/RB/very clear/NNP/clear. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take the/DT/the example/NN/example of/IN/of 8/CD/8 queens/NNS/queens /,/, but/CC/but sense/NN/sense this/DT/this page/NN/page is/VBZ/is small/JJ/small /,/, let/VB/let us/PRP/us just/RB/just make/VBP/make it/PRP/it 4/CD/4 queens/NNP/queens. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have well/RB/well we/PRP/we have/VBP/have very/RB/very wells/NNS/wells q/VBP/q of/IN/of 1/CD/1 q/NN/q of/IN/of 2/CD/2 q/NN/q of/IN/of 3/CD/3 and/CC/and q/NN/q of/IN/of 4/CD/4. so/RB/so /,/, we/PRP/we can/MD/can think/VB/think of/IN/of these/DT/these four/CD/four as/IN/as the/DT/the smaller/JJR/smaller parts/NNS/parts comprising/VBG/comprising our/PRP$/our big/JJ/big object/NN/object that/WDT/that we/PRP/we need/VBP/need to/TO/to find/VB/find or/CC/or we/PRP/we can/MD/can think/VB/think of/IN/of this/DT/this as/IN/as a/DT/a template/NN/template with/IN/with four/CD/four slots/NNS/slots and/CC/and it/PRP/it which/WDT/which is/VBZ/is given/VBN/given to/TO/to us/PRP/us and/CC/and we/PRP/we want/VBP/want to/TO/to fill/VB/fill in/IN/in values/NNS/values into/IN/into the/DT/the slots/NNP/slots. instead/RB/instead of/IN/of looking/VBG/looking at/IN/at these/DT/these numbers/NNS/numbers themselves/NNP/themselves. i/PRP/i am/VBP/am going/VBG/going to/TO/to think/VB/think of/IN/of this/DT/this i/NN/i am/VBP/am going/VBG/going to/TO/to interpret/VB/interpret these/DT/these numbers/NNS/numbers and/CC/and pictorially/RB/pictorially draw/VB/draw the/DT/the board/NN/board that/IN/that corresponds/NNS/corresponds to/TO/to this/NNP/this. so/RB/so initially/RB/initially /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start up/RP/up with/IN/with an/DT/an empty/JJ/empty template/NNP/template. so/RB/so that/IN/that corresponds/NNS/corresponds to/TO/to a/DT/a board/NN/board which/WDT/which is/VBZ/is completely/RB/completely empty/NNP/empty. then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to consider/VB/consider the/DT/the ways/NNS/ways in/IN/in which/WDT/which the/DT/the first/JJ/first slot/NN/slot in/IN/in this/DT/this template/NN/template can/MD/can be/VB/be filled/NNP/filled. so/RB/so q/NN/q 1/CD/1 /,/, we/PRP/we said/VBD/said must/MD/must have/VB/have a/DT/a value/NN/value between/IN/between 1/CD/1 and/CC/and n/NN/n where/WRB/where n/NN/n is/VBZ/is 4/CD/4 over/IN/over here/NNP/here. and/CC/and so/RB/so /,/, there/EX/there are/VBP/are four/CD/four ways/NNS/ways in/IN/in which/WDT/which this/DT/this can/MD/can be/VB/be done/NNP/done. so/RB/so for/IN/for example/NN/example /,/, something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, we/PRP/we can/MD/can placed/VB/placed the/DT/the first/JJ/first queen/NN/queen in/IN/in this/DT/this first/JJ/first position/NN/position over/IN/over here/NNP/here. but/CC/but /,/, this/DT/this is/VBZ/is not/RB/not the/DT/the only/JJ/only way/NN/way in/IN/in which/WDT/which this/DT/this slot/NN/slot can/MD/can be/VB/be filled/NNP/filled. there/RB/there are/VBP/are many/JJ/many other/JJ/other ways/NNS/ways in/IN/in which/WDT/which the/DT/the slot/NN/slot can/MD/can be/VB/be filled/VBN/filled as/IN/as well/NNP/well. and/CC/and so/RB/so /,/, here/RB/here is/VBZ/is another/NNP/another. so/RB/so from/IN/from this/DT/this empty/NN/empty template/NN/template /,/, we/PRP/we can/MD/can come/VB/come to/TO/to this/DT/this way/NN/way this/DT/this possible/JJ/possible way/NN/way of/IN/of filling/NN/filling the/DT/the first/JJ/first slot/NNP/slot. that/IN/that is/VBZ/is that/IN/that we/PRP/we placed/VBD/placed the/DT/the first/JJ/first queen/NN/queen in/IN/in the/DT/the second/JJ/second row/NNP/row. of/IN/of course/NN/course /,/, it/PRP/it is/VBZ/is not/RB/not necessary/JJ/necessary that/IN/that we/PRP/we placed/VBD/placed in/IN/in the/DT/the second/JJ/second row/NN/row /,/, but/CC/but we/PRP/we might/MD/might place/VB/place it/PRP/it in/IN/in the/DT/the third/JJ/third row/NN/row as/IN/as well/NNP/well. so/RB/so /,/, this/DT/this is/VBZ/is that/IN/that corresponding/VBG/corresponding position/NN/position and/CC/and of/IN/of course/NN/course /,/, we/PRP/we can/MD/can place/VB/place it/PRP/it in/IN/in the/DT/the fourth/JJ/fourth row/NNP/row. i/PRP/i am/VBP/am not/RB/not drawing/VBG/drawing the/DT/the entire/JJ/entire board/NNP/board. but/CC/but /,/, i/PRP/i am/VBP/am just/RB/just telling/VBG/telling you/PRP/you where/WRB/where the/DT/the queen/JJ/queen is/VBZ/is going/VBG/going to/TO/to be/VB/be placed/NNP/placed. so/RB/so /,/, these/DT/these are/VBP/are all/DT/all possible/JJ/possible ways/NNS/ways in/IN/in which/WDT/which the/DT/the first/JJ/first queen/NN/queen is/VBZ/is placed/VBN/placed first/RB/first queen/VBN/queen can/MD/can be/VB/be placed/NNP/placed. and/CC/and we/PRP/we started/VBD/started out/RP/out with/IN/with the/DT/the empty/NN/empty board/NN/board and/CC/and at/IN/at the/DT/the end/NN/end of/IN/of one/CD/one way/NN/way of/IN/of one/CD/one considering/VBG/considering how/WRB/how the/DT/the first/JJ/first slot/NN/slot can/MD/can be/VB/be filled/NNP/filled. we/PRP/we have/VBP/have arrived/VBN/arrived at/IN/at four/CD/four possible/JJ/possible positions/NNS/positions four/CD/four possible/JJ/possible candidate/NN/candidate objects/NNS/objects each/DT/each of/IN/of edges/NNS/edges only/RB/only partially/RB/partially built/NNP/built. so/RB/so /,/, we/PRP/we started/VBD/started up/RP/up with/IN/with one/CD/one partially/RB/partially built/VBN/built object/NN/object candidate/NN/candidate object/NN/object and/CC/and now/RB/now we/PRP/we have/VBP/have four/CD/four partially/RB/partially built/VBN/built candidate/NN/candidate objects/NNP/objects. but/CC/but /,/, they/PRP/they have/VBP/have been/VBN/been they/PRP/they have/VBP/have been/VBN/been extended/NNP/extended. so/RB/so /,/, we/PRP/we started/VBD/started up/RP/up this/DT/this object/NN/object and/CC/and these/DT/these are/VBP/are object/JJ/object which/WDT/which are/VBP/are full/JJ/full arrange/NN/arrange substance/NN/substance or/CC/or more/JJR/more build/JJ/build up/IN/up than/IN/than this/DT/this previous/JJ/previous object/NNP/object. but/CC/but /,/, we/PRP/we can/MD/can keep/VB/keep going/VBG/going in/IN/in this/DT/this manner/NNP/manner. so/RB/so from/IN/from this/DT/this point/NN/point /,/, we/PRP/we will/MD/will again/RB/again consider/VB/consider all/DT/all possible/JJ/possible ways/NNS/ways of/IN/of placing/VBG/placing the/DT/the second/JJ/second queen/NNP/queen. the/DT/the first/JJ/first queen/NN/queen is/VBZ/is placed/VBN/placed over/IN/over here/RB/here /,/, the/DT/the second/JJ/second queen/NN/queen could/MD/could also/RB/also be/VB/be placed/VBN/placed in/IN/in the/DT/the same/JJ/same row/NN/row or/CC/or it/PRP/it could/MD/could be/VB/be placed/VBN/placed in/IN/in the/DT/the next/JJ/next row/NN/row or/CC/or the/DT/the row/NN/row after/IN/after that/DT/that or/CC/or finally/RB/finally /,/, in/IN/in the/DT/the last/JJ/last row/NNP/row. so/IN/so /,/, when/WRB/when we/PRP/we come/VBP/come down/RB/down to/TO/to this/DT/this level/NNP/level. we/PRP/we have/VBP/have our/PRP$/our object/NN/object even/RB/even more/RBR/more fully/RB/fully constructed/NNP/constructed. so/RB/so /,/, we/PRP/we have/VBP/have placed/VBN/placed 2/CD/2 queens/NNS/queens /,/, we/PRP/we are/VBP/are not/RB/not placed/VBN/placed all/DT/all of/IN/of them/PRP/them here/NNP/here. but/CC/but /,/, this/DT/this is/VBZ/is at/IN/at a/DT/a higher/JJR/higher level/NN/level of/IN/of construction/NN/construction higher/JJR/higher level/NN/level completion/NN/completion than/IN/than this/DT/this one/CD/one which/WDT/which internal/JJ/internal at/IN/at higher/JJR/higher level/NN/level of/IN/of completion/NN/completion and/CC/and this/DT/this one/NNP/one. and/CC/and of/IN/of course/NN/course /,/, each/DT/each of/IN/of these/DT/these objects/NNS/objects will/MD/will have/VB/have to/TO/to be/VB/be constructed/VBN/constructed further/NNP/further. so/RB/so /,/, there/EX/there will/MD/will be/VB/be something/NN/something over/IN/over here/RB/here and/CC/and meet/VBP/meet everything/NN/everything which/WDT/which represents/NNS/represents the/DT/the ways/NNS/ways of/IN/of placing/VBG/placing the/DT/the third/JJ/third queen/NNP/queen. and/CC/and then/RB/then and/CC/and read/VB/read /,/, this/DT/this there/EX/there will/MD/will be/VB/be something/NN/something which/WDT/which represents/NNS/represents the/DT/the ways/NNS/ways of/IN/of placing/VBG/placing the/DT/the fourth/JJ/fourth queen/NNP/queen. in/IN/in this/DT/this case/NN/case /,/, we/PRP/we can/MD/can see/VB/see what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/NNP/happen. so/RB/so /,/, we/PRP/we started/VBD/started with/IN/with one/CD/one node/NN/node /,/, then/RB/then we/PRP/we have/VBP/have four/CD/four nodes/NNS/nodes we/PRP/we have/VBP/have four/CD/four bolts/NNS/bolts in/IN/in this/DT/this next/JJ/next level/NNP/level. then/RB/then /,/, we/PRP/we have/VBP/have a/DT/a 4/CD/4 square/NN/square bolts/NNS/bolts to/TO/to be/VB/be consider/NN/consider at/IN/at this/DT/this level/NN/level 4/CD/4 square/NN/square partially/RB/partially constructed/VBN/constructed objects/NNP/objects. then/RB/then /,/, we/PRP/we have/VBP/have a/DT/a 4/CD/4 cube/NN/cube partially/RB/partially constructed/VBN/constructed objects/NNS/objects at/IN/at the/DT/the next/JJ/next level/NN/level 4/CD/4 times/NNS/times as/RB/as many/JJ/many as/IN/as the/DT/the when/WRB/when the/DT/the previous/JJ/previous level/NNP/level. and/CC/and finally/RB/finally /,/, 4/CD/4 to/TO/to the/DT/the 4/CD/4 objects/NNS/objects at/IN/at the/DT/the leaf/NN/leaf level/NN/level /,/, in/IN/in fact/NN/fact /,/, i/PRP/i have/VBP/have already/RB/already told/VBN/told you/PRP/you what/WP/what this/DT/this looks/VBZ/looks like/IN/like in/IN/in some/DT/some sense/NNP/sense. so/RB/so /,/, we/PRP/we have/VBP/have leaves/NNS/leaves at/IN/at the/DT/the bottom/NN/bottom /,/, we/PRP/we have/VBP/have root/VBN/root at/IN/at the/DT/the top/JJ/top and/CC/and in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to look/VB/look like/IN/like a/DT/a tree/NNP/tree. in/IN/in fact/NN/fact /,/, in/IN/in almost/RB/almost every/DT/every in/IN/in every/DT/every exhaustive/JJ/exhaustive generation/NN/generation method/NN/method we/PRP/we will/MD/will be/VB/be following/VBG/following something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, we/PRP/we start/VBP/start of/IN/of in/IN/in the/DT/the empty/NN/empty object/NN/object /,/, we/PRP/we keep/VBP/keep on/IN/on extending/VBG/extending it/NNP/it. so/RB/so /,/, the/DT/the extension/NN/extension will/MD/will correspond/VB/correspond to/TO/to children/VB/children of/IN/of the/DT/the parent/NN/parent node/NNP/node. their/PRP$/their extensions/NNS/extensions will/MD/will correspond/VB/correspond to/TO/to object/VB/object which/WDT/which are/VBP/are even/RB/even fuller/NNP/fuller. and/CC/and until/IN/until we/PRP/we get/VBP/get to/TO/to a/DT/a point/NN/point at/IN/at which/WDT/which we/PRP/we can/MD/can not/RB/not extend/VB/extend object/JJ/object any/DT/any further/NNP/further. that/IN/that is/VBZ/is the/DT/the point/NN/point at/IN/at which/WDT/which we/PRP/we have/VBP/have got/VBN/got to/TO/to leaves/NNS/leaves and/CC/and that/IN/that is/VBZ/is the/DT/the point/NN/point at/IN/at which/WDT/which we/PRP/we can/MD/can terminate/VB/terminate our/PRP$/our generation/NN/generation step/NNP/step. once/RB/once /,/, we/PRP/we get/VBP/get to/TO/to a/DT/a leaf/NN/leaf in/IN/in this/DT/this case/NN/case for/IN/for example/NN/example /,/, we/PRP/we know/VBP/know that/IN/that we/PRP/we have/VBP/have all/PDT/all the/DT/the queens/NNS/queens completely/RB/completely placed/NNP/placed. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the next/JJ/next step/NN/step ?/./? well/RB/well at/IN/at this/DT/this point/NN/point we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check if/IN/if the/DT/the queen/NN/queen position/NN/position satisfy/NN/satisfy our/PRP$/our conditions/NNP/conditions. if/IN/if they/PRP/they do/VBP/do then/RB/then in/IN/in this/DT/this case/NN/case /,/, we/PRP/we can/MD/can just/RB/just report/VB/report we/PRP/we can/MD/can just/RB/just print/VB/print out/RP/out saying/VBG/saying yes/NNS/yes they/PRP/they do/VBP/do in/IN/in fact/NN/fact satisfy/NN/satisfy all/DT/all the/DT/the conditions/NNP/conditions. if/IN/if they/PRP/they do/VBP/do not/RB/not well/RB/well /,/, then/RB/then we/PRP/we have/VBP/have to/TO/to consider/VB/consider the/DT/the other/JJ/other leaves/NNP/leaves. this/DT/this is/VBZ/is as/IN/as for/IN/for as/IN/as considering/VBG/considering problems/NNS/problems in/IN/in which/WDT/which there/EX/there is/VBZ/is no/DT/no objective/NN/objective function/NNP/function. if/IN/if there/EX/there is/VBZ/is an/DT/an objective/JJ/objective function/NN/function then/RB/then when/WRB/when we/PRP/we get/VBP/get down/RP/down to/TO/to this/DT/this level/NN/level /,/, we/PRP/we need/VBP/need to/TO/to not/RB/not only/RB/only consider/JJR/consider whether/IN/whether the/DT/the leaf/NN/leaf the/DT/the leaf/NN/leaf objects/VBZ/objects satisfy/NN/satisfy the/DT/the constraints/NNP/constraints. but/CC/but /,/, we/PRP/we also/RB/also need/VBP/need to/TO/to evaluate/VB/evaluate the/DT/the cost/NN/cost function/NNP/function. so/RB/so suppose/RB/suppose in/IN/in fact/NN/fact /,/, we/PRP/we have/VBP/have a/DT/a cost/NN/cost function/NN/function rather/RB/rather than/IN/than a/DT/a benefit/NN/benefit function/NNP/function. this/DT/this for/IN/for each/DT/each leaves/NNS/leaves /,/, we/PRP/we can/MD/can think/VB/think of/IN/of the/DT/the cost/NN/cost function/NNP/function. and/CC/and we/PRP/we can/MD/can evaluate/VB/evaluate the/DT/the cost/NN/cost function/NN/function and/CC/and our/PRP$/our problem/NN/problem is/VBZ/is to/TO/to find/VB/find a/DT/a leaf/NN/leaf such/JJ/such that/IN/that it/PRP/it is/VBZ/is satisfies/NNS/satisfies all/DT/all the/DT/the constraints/NNS/constraints and/CC/and such/JJ/such that/IN/that whose/WP$/whose cost/NN/cost functions/NNS/functions is/VBZ/is as/RB/as small/JJ/small as/IN/as possible/NNP/possible. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 07/CD/07 /CD/) so/RB/so /,/, let/VB/let me/PRP/me /,/, said/VBD/said as/IN/as summarize/NN/summarize what/WP/what i/PRP/i said/VBD/said in/IN/in terms/NNS/terms of/IN/of a/DT/a programming/NN/programming idea/NNP/idea. so/RB/so /,/, first/JJ/first we/PRP/we need/VBP/need something/NN/something so/RB/so that/IN/that we/PRP/we represent/VBP/represent our/PRP$/our objects/NNS/objects properly/NNP/properly. so/RB/so for/IN/for example/NN/example /,/, in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the 8/CD/8 queens/NNS/queens problem/NN/problem /,/, where/WRB/where the/DT/the four/CD/four queens/NNS/queens problem/NN/problem ?/./? we/PRP/we used/VBD/used a/DT/a data/NN/data structure/NN/structure of/IN/of an/DT/an array/NN/array of/IN/of four/CD/four element/NN/element array/NN/array to/TO/to represent/VB/represent the/DT/the four/CD/four queen/CD/queen positions/NNP/positions. in/IN/in case/NN/case of/IN/of the/DT/the travelling/NN/travelling salesman/NN/salesman problem/NN/problem of/IN/of the/DT/the travelling/NN/travelling salesperson/NN/salesperson problem/NN/problem /,/, we/PRP/we want/VBP/want to/TO/to represent/VB/represent the/DT/the tour/NN/tour again/RB/again if/IN/if the/DT/the graph/NN/graph as/IN/as n/NN/n vertices/NNS/vertices we/PRP/we could/MD/could use/VB/use an/DT/an array/NN/array of/IN/of length/NN/length n/NN/n /,/, where/WRB/where the/DT/the ith/NN/ith element/NN/element of/IN/of the/DT/the array/NN/array denotes/VBZ/denotes the/DT/the ith/NN/ith city/NN/city in/IN/in the/DT/the tour/NNP/tour. in/IN/in the/DT/the case/NN/case of/IN/of the/DT/the knapsack/NN/knapsack problem/NN/problem is/VBZ/is simply/RB/simply need/VBP/need to/TO/to say/VB/say whether/IN/whether a/DT/a certain/JJ/certain object/NN/object has/VBZ/has been/VBN/been selected/VBN/selected or/CC/or not/NNP/not. so/RB/so /,/, corresponding/VBG/corresponding to/TO/to each/DT/each object/NN/object we/PRP/we could/MD/could have/VB/have a/DT/a bit/NN/bit which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to 0/-NONE-/0 meaning/VBG/meaning that/IN/that object/NN/object is/VBZ/is not/RB/not replaced/VBN/replaced in/IN/in the/DT/the knapsack/NN/knapsack or/CC/or if/IN/if that/DT/that bit/NN/bit is/VBZ/is 1/CD/1 /,/, then/RB/then the/DT/the object/NN/object is/VBZ/is replaced/VBN/replaced in/IN/in the/DT/the knapsack/NNP/knapsack. so/RB/so some/DT/some of/IN/of the/DT/the other/JJ/other /,/, we/PRP/we need/VBP/need to/TO/to have/VB/have a/DT/a representation/NN/representation of/IN/of the/DT/the object/NN/object that/IN/that we/PRP/we are/VBP/are looking/VBG/looking for/NNP/for. after/IN/after that/DT/that /,/, we/PRP/we need/VBP/need a/DT/a procedure/NN/procedure for/IN/for filling/NN/filling in/IN/in the/DT/the next/JJ/next empty/NN/empty slot/NN/slot in/IN/in the/DT/the object/NNP/object. of/IN/of course/NN/course /,/, there/EX/there will/MD/will be/VB/be many/JJ/many ways/NNS/ways in/IN/in which/WDT/which this/DT/this can/MD/can be/VB/be done/NNP/done. and/CC/and so/RB/so /,/, this/DT/this procedure/NN/procedure should/MD/should allow/VB/allow us/PRP/us to/TO/to provide/VB/provide all/DT/all possible/JJ/possible ways/NNP/ways. at/IN/at this/DT/this point/NN/point in/IN/in the/DT/the algorithm/NN/algorithm /,/, we/PRP/we are/VBP/are simply/RB/simply going/VBG/going to/TO/to recurse/NNP/recurse. so/RB/so then/RB/then /,/, we/PRP/we will/MD/will recurse/VB/recurse and/CC/and we/PRP/we will/MD/will recursively/RB/recursively fill/VB/fill in/IN/in the/DT/the sub/NN/sub sequential/NN/sequential loss/NN/loss /,/, what/WP/what happens/NNS/happens next/IN/next ?/./? when/WRB/when we/PRP/we have/VBP/have recurse/VBP/recurse we/PRP/we will/MD/will it/PRP/it is/VBZ/is prevalent/JJ/prevalent to/TO/to starting/NN/starting at/IN/at say/NN/say the/DT/the root/NNP/root. and/CC/and we/PRP/we filled/VBD/filled in/IN/in the/DT/the object/NN/object filled/VBD/filled in/IN/in the/DT/the first/JJ/first slot/NN/slot and/CC/and then/RB/then when/WRB/when we/PRP/we recurse/VBP/recurse we/PRP/we filled/VBD/filled in/IN/in the/DT/the next/JJ/next slot/NN/slot and/CC/and so/RB/so on/NNP/on. eventually/RB/eventually /,/, we/PRP/we will/MD/will get/VB/get the/DT/the leaves/NNP/leaves. so/RB/so viral/JJ/viral you/PRP/you need/VBP/need to/TO/to have/VB/have a/DT/a check/NN/check over/IN/over here/RB/here /,/, just/RB/just to/TO/to see/VB/see whether/IN/whether we/PRP/we have/VBP/have in/IN/in the/DT/the leaves/NNP/leaves. so/RB/so for/IN/for leaf/NN/leaf objects/NNS/objects /,/, we/PRP/we need/VBP/need a/DT/a procedure/NN/procedure that/WDT/that checks/VBZ/checks constraints/NNP/constraints. i/PRP/i am/VBP/am it/PRP/it written/VBN/written true/JJ/true if/IN/if all/DT/all constraints/NNS/constraints are/VBP/are met/VBN/met it/PRP/it written/RB/written false/VB/false if/IN/if the/DT/the constraints/NNS/constraints are/VBP/are not/RB/not met/NNP/met. we/PRP/we also/RB/also need/VBP/need a/DT/a procedure/NN/procedure for/IN/for evaluating/NN/evaluating cost/NNP/cost. that/IN/that is/VBZ/is not/RB/not all/DT/all however/NNP/however. so/RB/so this/DT/this way/NN/way /,/, we/PRP/we keep/VBP/keep going/VBG/going down/RB/down and/CC/and we/PRP/we go/VBP/go down/RB/down to/TO/to a/DT/a leaf/NNP/leaf. but/CC/but /,/, you/PRP/you also/RB/also want/VBP/want to/TO/to go/VB/go back/RB/back up/IN/up /,/, and/CC/and go/VB/go to/TO/to the/DT/the other/JJ/other leafs/NNS/leafs and/CC/and that/IN/that is/VBZ/is why/WRB/why this/DT/this whole/JJ/whole procedure/NN/procedure is/VBZ/is called/VBN/called back/RP/back track/NN/track search/NNP/search. so/RB/so /,/, we/PRP/we get/VBP/get to/TO/to the/DT/the leaf/NN/leaf and/CC/and then/RB/then we/PRP/we go/VBP/go back/RB/back up/IN/up again/RB/again in/IN/in the/DT/the tree/NNP/tree. and/CC/and then/RB/then /,/, we/PRP/we go/VBP/go to/TO/to the/DT/the next/JJ/next leafs/NNS/leafs then/RB/then from/IN/from that/DT/that leaf/NN/leaf /,/, we/PRP/we go/VBP/go back/RB/back up/IN/up again/NNP/again. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 10/CD/10 /CD/) so/RB/so over/IN/over here/RB/here /,/, we/PRP/we said/VBD/said that/IN/that we/PRP/we need/VBP/need a/DT/a procedure/NN/procedure for/IN/for filling/NN/filling in/IN/in the/DT/the next/JJ/next empty/NN/empty slot/NN/slot in/IN/in the/DT/the object/NNP/object. but/CC/but similarly/RB/similarly /,/, we/PRP/we need/VBP/need a/DT/a procedure/NN/procedure for/IN/for removing/NN/removing the/DT/the last/JJ/last value/NN/value filled/VBD/filled in/IN/in the/DT/the last/JJ/last slot/NNP/slot. this/DT/this is/VBZ/is how/WRB/how we/PRP/we will/MD/will go/VB/go back/RB/back up/IN/up into/IN/into the/DT/the tree/JJ/tree and/CC/and make/VB/make sure/JJ/sure that/IN/that all/DT/all the/DT/the objects/NNS/objects will/MD/will get/VB/get generated/NNP/generated. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 50/CD/50 /CD/) so/RB/so /,/, let/VB/let me/PRP/me try/NN/try to/TO/to write/VB/write this/DT/this as/IN/as a/DT/a very/RB/very vaguely/RB/vaguely as/IN/as a/DT/a procedure/NN/procedure just/RB/just give/VB/give you/PRP/you the/DT/the idea/NN/idea of/IN/of what/WP/what is/VBZ/is going/VBG/going on/NNP/on. so/RB/so /,/, our/PRP$/our search/NN/search procedure/NN/procedure is/VBZ/is going/VBG/going to/TO/to look/VB/look something/NN/something like/IN/like this/DT/this so/RB/so it/PRP/it going/VBG/going to/TO/to take/VB/take this/DT/this candidate/NN/candidate objects/VBZ/objects as/IN/as an/DT/an argument/NNP/argument. and/CC/and let/VB/let me/PRP/me /,/, just/RB/just note/VBP/note that/IN/that this/DT/this while/NN/while have/VBP/have a/DT/a return/NN/return while/IN/while have/NN/have return/NN/return on/IN/on object/NN/object every/DT/every here/RB/here i/PRP/i really/RB/really mean/JJ/mean this/DT/this template/NN/template which/WDT/which could/MD/could be/VB/be partially/RB/partially filled/NNP/filled. so/RB/so /,/, what/WDT/what does/VBZ/does this/DT/this do/VB/do ?/./? so/RB/so /,/, if/IN/if object/NN/object has/VBZ/has all/DT/all slots/NNS/slots filled/VBN/filled which/WDT/which is/VBZ/is to/TO/to say/VB/say that/IN/that it/PRP/it is/VBZ/is a/DT/a leaf/NNP/leaf. then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check constraints/NNP/constraints. we/PRP/we are/VBP/are going/VBG/going to/TO/to evaluate/VB/evaluate the/DT/the objective/NN/objective function/NNP/function. if/IN/if constraints/NNS/constraints satisfied/VBN/satisfied and/CC/and in/IN/in fact/NN/fact we/PRP/we will/MD/will return/VB/return the/DT/the value/NN/value /,/, if/IN/if the/DT/the constraints/NNS/constraints are/VBP/are not/RB/not satisfied/VBN/satisfied we/PRP/we will/MD/will return/NNP/return. so/RB/so /,/, if/IN/if the/DT/the constraints/NNS/constraints are/VBP/are not/RB/not satisfied/VBN/satisfied /,/, then/RB/then will/MD/will return/VB/return infinity/NN/infinity if/IN/if we/PRP/we are/VBP/are given/VBN/given a/DT/a cost/NN/cost function/NNP/function. that/IN/that is/VBZ/is to/TO/to say/VB/say that/IN/that this/DT/this leaf/NN/leaf found/VBD/found is/VBZ/is to/TO/to be/VB/be disorder/NNP/disorder. infinitive/JJ/infinitive will/MD/will just/RB/just say/VB/say that/IN/that this/DT/this is/VBZ/is a/DT/a useless/NN/useless leaf/NNP/leaf. if/IN/if you/PRP/you return/VBP/return a/DT/a minus/NN/minus infinitive/NN/infinitive or/CC/or a/DT/a zero/NN/zero if/IN/if this/DT/this is/VBZ/is a/DT/a benefit/NN/benefit function/NNP/function. assuming/NN/assuming that/WDT/that the/DT/the benefit/NN/benefit is/VBZ/is positive/JJ/positive we/PRP/we can/MD/can even/RB/even return/VB/return zero/NNP/zero. so/RB/so this/DT/this is/VBZ/is what/WP/what we/PRP/we do/VBP/do at/IN/at a/DT/a leaf/NN/leaf ?/./? if/IN/if object/NN/object has/VBZ/has unfiled/VBN/unfiled slots/NNS/slots then/RB/then what/WP/what we/PRP/we need/VBP/need to/TO/to do/VB/do ?/./? well/RB/well we/PRP/we need/VBP/need to/TO/to do/VB/do this/DT/this branching/NN/branching business/NNP/business. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 09/CD/09 /CD/) so/RB/so /,/, this/DT/this has/VBZ/has an/DT/an unfilled/VBN/unfilled slot/NNP/slot. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to filled/VBN/filled for/IN/for this/DT/this slots/NNS/slots /,/, if/IN/if object/NN/object has/VBZ/has unfilled/VBN/unfilled slots/NNP/slots. we/PRP/we are/VBP/are going/VBG/going to/TO/to consider/VB/consider all/DT/all possible/JJ/possible ways/NNS/ways of/IN/of filling/VBG/filling slots/NNS/slots filling/VBG/filling next/JJ/next slot/NNP/slot. so/RB/so /,/, you/PRP/you will/MD/will fill/VB/fill in/IN/in ith/NN/ith possible/JJ/possible manner/NNP/manner. we/PRP/we will/MD/will recurse/VB/recurse on/IN/on modified/VBN/modified object/NNP/object. and/CC/and this/DT/this recursion/NN/recursion will/MD/will give/VB/give as/IN/as value/NNP/value. so/RB/so /,/, let/VB/let me/PRP/me call/MD/call this/DT/this v/NN/v sub/NN/sub i/PRP/i and/CC/and this/DT/this will/MD/will be/VB/be in/IN/in the/DT/the end/NN/end of/IN/of the/DT/the loop/NNP/loop. so/RB/so /,/, this/DT/this think/NN/think of/IN/of this/DT/this consider/NN/consider as/IN/as being/VBG/being a/DT/a loop/NNP/loop. and/CC/and now/RB/now the/DT/the idea/NN/idea is/VBZ/is something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be go/RB/go over/IN/over all/DT/all possible/JJ/possible leaves/NNS/leaves underneath/NNP/underneath. so/RB/so /,/, starting/VBG/starting at/IN/at this/DT/this or/CC/or starting/VBG/starting at/IN/at this/DT/this we/PRP/we will/MD/will be/VB/be visiting/VBG/visiting this/DT/this will/MD/will be/VB/be visiting/VBG/visiting this/DT/this will/MD/will be/VB/be visiting/VBG/visiting this/DT/this will/MD/will be/VB/be visiting/VBG/visiting this/DT/this will/MD/will be/VB/be visiting/VBG/visiting this/NNP/this. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to associate/VB/associate with/IN/with this/DT/this node/NN/node a/DT/a cost/NN/cost function/NN/function which/WDT/which is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the smallest/JJS/smallest cost/NN/cost function/NN/function found/VBD/found anywhere/RB/anywhere over/IN/over here/NNP/here. that/IN/that way/NN/way /,/, we/PRP/we can/MD/can written/VB/written that/IN/that and/CC/and eventually/RB/eventually will/MD/will make/VB/make sure/JJ/sure that/IN/that the/DT/the smallest/JJS/smallest cost/NN/cost gets/NNS/gets written/VBN/written to/TO/to the/DT/the top/NNP/top. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 13/CD/13 /CD/) so/RB/so /,/, here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be return/NN/return in/IN/in smallest/NN/smallest v/NN/v sub/NN/sub i/PRP/i calculated/VBD/calculated above/NNP/above. so/RB/so let/VB/let me/PRP/me /,/, do/VBP/do this/DT/this again/NNP/again. so/RB/so /,/, we/PRP/we start/VBP/start up/RP/up with/IN/with an/DT/an empty/JJ/empty object/NN/object /,/, then/RB/then we/PRP/we consider/VBP/consider all/DT/all possible/JJ/possible ways/NNS/ways of/IN/of doing/VBG/doing it/NNP/it. but/CC/but really/RB/really in/IN/in the/DT/the first/JJ/first instance/NN/instance /,/, we/PRP/we just/RB/just consider/VBP/consider we/PRP/we just/RB/just go/VBP/go along/IN/along this/DT/this path/NNP/path. then/RB/then /,/, we/PRP/we go/VBP/go along/IN/along this/DT/this path/NN/path then/RB/then we/PRP/we go/VBP/go along/IN/along this/DT/this path/NN/path and/CC/and so/RB/so on/IN/on until/IN/until we/PRP/we get/VBP/get to/TO/to a/DT/a leaf/NNP/leaf. say/VBP/say let/NN/let us/PRP/us say/VBP/say we/PRP/we get/VBP/get to/TO/to a/DT/a leaf/NN/leaf over/IN/over here/NNP/here. then/RB/then /,/, we/PRP/we return/VBP/return the/DT/the value/NN/value of/IN/of the/DT/the cost/NN/cost as/IN/as seen/VBN/seen at/IN/at this/DT/this leaf/NNP/leaf. then/RB/then /,/, at/IN/at this/DT/this point/NN/point we/PRP/we consider/VBP/consider other/JJ/other waste/NN/waste of/IN/of generating/VBG/generating it/PRP/it and/CC/and we/PRP/we get/VBP/get to/TO/to another/DT/another leaf/NN/leaf for/IN/for example/NN/example /,/, then/RB/then we/PRP/we return/VBP/return this/DT/this cost/NNP/cost. then/RB/then /,/, we/PRP/we go/VBP/go back/RB/back again/RB/again then/RB/then we/PRP/we return/VBP/return the/DT/the cost/NN/cost over/IN/over here/NNP/here. and/CC/and let/VB/let us/PRP/us say/VB/say there/EX/there are/VBP/are no/DT/no more/RBR/more ways/NNS/ways of/IN/of filing/NN/filing in/IN/in that/DT/that last/JJ/last slot/NNP/slot. then/RB/then at/IN/at that/DT/that point/NN/point what/WP/what gets/NNS/gets return/VBP/return over/IN/over here/RB/here is/VBZ/is the/DT/the smallest/JJS/smallest of/IN/of these/DT/these cost/NN/cost values/NNP/values. so/RB/so /,/, in/IN/in general/JJ/general in/IN/in this/DT/this manner/NN/manner /,/, what/WP/what is/VBZ/is going/VBG/going to/TO/to get/VB/get return/NN/return to/TO/to the/DT/the root/NN/root /,/, is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the value/NN/value generated/VBD/generated at/IN/at along/IN/along some/DT/some path/NN/path in/IN/in this/DT/this graph/NNP/graph. and/CC/and that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the least/JJS/least cost/NN/cost leaf/NN/leaf the/DT/the value/NN/value of/IN/of the/DT/the least/JJS/least cost/NN/cost leaf/NNP/leaf. so/RB/so /,/, this/DT/this complete/JJ/complete at/IN/at description/NN/description of/IN/of this/DT/this search/NN/search procedure/NNP/procedure. in/IN/in fact/NN/fact /,/, if/IN/if you/PRP/you have/VBP/have studied/VBN/studied this/DT/this in/IN/in the/DT/the data/NN/data structures/NNS/structures scores/NNS/scores /,/, what/WP/what you/PRP/you have/VBP/have done/VBN/done really/RB/really is/VBZ/is a/DT/a depth/NN/depth first/RB/first search/NN/search over/IN/over this/DT/this search/NN/search space/NNP/space. search/NN/search space/NN/space is/VBZ/is simply/RB/simply set/VBN/set of/IN/of leafs/NNP/leafs. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at all/DT/all the/DT/the leaves/NNS/leaves somehow/VBP/somehow the/DT/the other/NNP/other. and/CC/and so/RB/so that/IN/that is/VBZ/is of/IN/of called/VBN/called search/NN/search space/NNP/space. and/CC/and what/WP/what we/PRP/we are/VBP/are doing/VBG/doing is/VBZ/is ?/./? we/PRP/we are/VBP/are putting/VBG/putting a/DT/a tree/NN/tree on/IN/on top/JJ/top of/IN/of that/DT/that search/NN/search space/NN/space and/CC/and we/PRP/we are/VBP/are just/RB/just doing/VBG/doing a/DT/a depth/NN/depth first/RB/first search/NN/search of/IN/of it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 04/CD/04 /CD/) there/EX/there are/VBP/are some/DT/some improvements/NNS/improvements possible/JJ/possible to/TO/to procedure/NNP/procedure. we/PRP/we do/VBP/do not/RB/not need/VB/need to/TO/to do/VB/do our/PRP$/our condition/NN/condition with/IN/with checks/NNS/checks our/PRP$/our constraints/NNS/constraints checks/NNS/checks at/IN/at the/DT/the very/RB/very end/NNP/end. we/PRP/we can/MD/can do/VB/do them/PRP/them as/IN/as early/JJ/early as/IN/as possible/NNP/possible. so/RB/so for/IN/for example/NN/example /,/, in/IN/in case/NN/case of/IN/of the/DT/the 4/CD/4 queens/NNS/queens problem/NNP/problem. suppose/NN/suppose /,/, we/PRP/we placed/VBD/placed the/DT/the first/JJ/first queen/NN/queen in/IN/in this/DT/this first/JJ/first column/NN/column in/IN/in this/DT/this first/JJ/first row/NN/row then/RB/then when/WRB/when we/PRP/we placed/VBD/placed the/DT/the second/JJ/second queen/NN/queen in/IN/in the/DT/the first/JJ/first row/NN/row as/IN/as well/NNP/well. we/PRP/we could/MD/could say/VB/say look/NN/look these/DT/these 2/CD/2 queens/NNS/queens already/RB/already capture/VBP/capture in/IN/in each/DT/each other/NNP/other. or/CC/or the/DT/the condition/NN/condition that/IN/that q/NN/q of/IN/of 1/CD/1 equals/NNS/equals to/TO/to q/VB/q 2/CD/2 to/TO/to not/RB/not equal/JJ/equal to/TO/to q/VB/q 2/CD/2 to/TO/to is/VBZ/is not/RB/not being/VBG/being made/NNP/made. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can say/VB/say we/PRP/we do/VBP/do not/RB/not really/RB/really need/VBP/need to/TO/to go/VB/go and/CC/and further/JJ/further check/NN/check where/WRB/where condition/NN/condition where/WRB/where queens/NNS/queens three/CD/three and/CC/and four/CD/four placed/NNP/placed. so/RB/so /,/, what/WDT/what happen/VBN/happen to/TO/to be/VB/be here/RB/here was/VBD/was that/IN/that we/PRP/we started/VBD/started up/RP/up with/IN/with empty/JJ/empty board/NNP/board. then/RB/then we/PRP/we placed/VBD/placed the/DT/the first/JJ/first wheel/NN/wheel and/CC/and then/RB/then we/PRP/we placed/VBD/placed the/DT/the second/JJ/second wheel/NN/wheel as/IN/as well/NNP/well. and/CC/and then/RB/then /,/, we/PRP/we can/MD/can safely/RB/safely ignore/VB/ignore this/DT/this part/NN/part of/IN/of the/DT/the search/NN/search tree/NN/tree immediately/NNP/immediately. because/IN/because /,/, we/PRP/we have/VBP/have checking/VBG/checking the/DT/the condition/NN/condition right/RB/right here/RB/here and/CC/and this/DT/this condition/NN/condition which/WDT/which we/PRP/we check/VBP/check should/MD/should be/VB/be something/NN/something which/WDT/which will/MD/will be/VB/be valid/VBN/valid no/DT/no matter/NN/matter what/WP/what will/MD/will be/VB/be get/VB/get over/IN/over here/NNP/here. and/CC/and in/IN/in fact/NN/fact /,/, that/IN/that is/VBZ/is true/JJ/true /,/, these/DT/these 2/CD/2 queens/NNS/queens are/VBP/are not/RB/not going/VBG/going to/TO/to change/VB/change their/PRP$/their position/NN/position at/IN/at any/DT/any of/IN/of these/DT/these leaves/NNS/leaves at/IN/at these/DT/these leaves/NNS/leaves only/RB/only these/DT/these queens/NNS/queens will/MD/will get/VB/get placed/NNP/placed. and/CC/and therefore/RB/therefore /,/, this/DT/this condition/NN/condition /:/( /:/( refer/NN/refer time/NN/time /:/: 45/CD/45 /:/: 18/CD/18 /CD/) /CD/) /./. so/RB/so /,/, the/DT/the possibility/NN/possibility of/IN/of early/JJ/early conditional/JJ/conditional checks/NNS/checks condition/NN/condition checks/NNS/checks can/MD/can improve/VB/improve up/RP/up on/IN/on efficiency/NNP/efficiency. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 36/CD/36 /CD/) i/PRP/i would/MD/would also/RB/also like/VB/like to/TO/to note/VB/note that/IN/that this/DT/this procedure/NN/procedure is/VBZ/is ;/:/; obviously/RB/obviously /,/, correct/NNP/correct. and/CC/and that/IN/that really/RB/really follows/VBZ/follows from/IN/from the/DT/the fact/NN/fact that/IN/that we/PRP/we are/VBP/are considering/VBG/considering all/DT/all possible/JJ/possible ways/NNS/ways of/IN/of filling/VBG/filling each/DT/each slot/NNP/slot. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 56/CD/56 /CD/) let/NN/let we/PRP/we go/VBP/go to/TO/to our/PRP$/our second/JJ/second example/NN/example which/WDT/which is/VBZ/is the/DT/the travelling/NN/travelling salesperson/NNP/salesperson. so/RB/so /,/, i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to give/VB/give a/DT/a quick/JJ/quick description/NN/description of/IN/of what/WP/what this/DT/this search/NN/search tree/NN/tree is/VBZ/is going/VBG/going to/TO/to look/VB/look like/NNP/like. so/RB/so at/IN/at the/DT/the root/NN/root /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have the/DT/the empty/NN/empty tour/NNP/tour. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see this/DT/this is/VBZ/is our/PRP$/our graph/NNP/graph. then/RB/then /,/, we/PRP/we can/MD/can say/VB/say that/IN/that let/JJ/let us/PRP/us say/VBP/say just/RB/just designates/VBZ/designates this/DT/this vertex/NN/vertex of/IN/of the/DT/the starting/NN/starting vertex/NN/vertex it/PRP/it does/VBZ/does not/RB/not really/RB/really matters/NNP/matters. since/IN/since /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to come/VB/come back/RB/back to/TO/to vertex/VB/vertex anyway/NNP/anyway. since/IN/since /,/, the/DT/the tour/NN/tour is/VBZ/is cyclic/NNP/cyclic. but/CC/but suppose/VB/suppose /,/, this/DT/this is/VBZ/is the/DT/the starting/VBG/starting vertex/NN/vertex /,/, then/RB/then we/PRP/we can/MD/can ask/VB/ask how/WRB/how many/JJ/many ways/NNS/ways are/VBP/are there/RB/there in/IN/in which/WDT/which the/DT/the tour/NN/tour we/PRP/we can/MD/can go/VB/go out/RP/out of/IN/of this/DT/this vertex/NNP/vertex. and/CC/and that/IN/that gives/NNS/gives us/PRP/us that/IN/that is/VBZ/is sort/NN/sort of/IN/of closing/NN/closing in/IN/in the/DT/the first/JJ/first slot/NN/slot in/IN/in the/DT/the tour/NNP/tour. so/RB/so for/IN/for example/NN/example /,/, we/PRP/we can/MD/can come/VB/come to/TO/to this/DT/this point/NN/point at/IN/at which/WDT/which the/DT/the tour/NN/tour has/VBZ/has proceeded/VBN/proceeded along/IN/along this/DT/this edge/NN/edge or/CC/or we/PRP/we can/MD/can come/VB/come to/TO/to this/DT/this point/NN/point at/IN/at which/WDT/which the/DT/the tour/NN/tour has/VBZ/has proceeded/VBN/proceeded down/RP/down diagonally/RB/diagonally or/CC/or we/PRP/we can/MD/can come/VB/come to/TO/to this/DT/this point/NN/point at/IN/at which/WDT/which the/DT/the tour/NN/tour has/VBZ/has gone/VBN/gone now/NNP/now. then/RB/then this/DT/this tour/NN/tour can/MD/can further/RB/further we/PRP/we extended/VBD/extended over/RP/over here/NNP/here. so/RB/so starting/VBG/starting at/IN/at this/DT/this /,/, we/PRP/we can/MD/can go/VB/go down/RB/down directly/RB/directly or/CC/or it/PRP/it can/MD/can go/VB/go back/RB/back diagonally/RB/diagonally and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, eventually/RB/eventually we/PRP/we will/MD/will get/VB/get to/TO/to a/DT/a leaf/NN/leaf where/WRB/where will/MD/will be/VB/be having/VBG/having complete/JJ/complete tour/NNP/tour. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 29/CD/29 /CD/) so/RB/so /,/, let/VB/let me/PRP/me say/VB/say something/NN/something about/IN/about the/DT/the running/NN/running time/NN/time of/IN/of backtrack/NN/backtrack search/NNP/search. so/RB/so basically/RB/basically /,/, the/DT/the idea/NN/idea is/VBZ/is that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at every/DT/every possible/JJ/possible leaf/NNP/leaf. so/RB/so /,/, the/DT/the time/NN/time taken/VBN/taken will/MD/will be/VB/be will/MD/will essentially/RB/essentially have/VB/have to/TO/to be/VB/be at/IN/at least/JJS/least in/IN/in the/DT/the worst/JJS/worst case/NN/case have/VBP/have to/TO/to be/VB/be the/DT/the number/NN/number of/IN/of leaves/NNP/leaves. so/RB/so /,/, let/VB/let us/PRP/us consider/JJR/consider this/DT/this for/IN/for the/DT/the case/NN/case of/IN/of the/DT/the n/NN/n queens/VBZ/queens problem/NNP/problem. specialized/VBD/specialized generalized/VBN/generalized it/PRP/it 2/CD/2 n/NN/n queens/NNS/queens rather/RB/rather than/IN/than 8/CD/8 queens/NNS/queens or/CC/or 4/CD/4 queens/NNP/queens. so/RB/so in/IN/in this/DT/this case/NN/case /,/, how/WRB/how many/JJ/many leaves/NNS/leaves to/TO/to be/VB/be have/VBP/have ?/./? well/RB/well the/DT/the first/JJ/first queen/NN/queen can/MD/can be/VB/be placed/VBN/placed in/IN/in n/NN/n ways/NNS/ways the/DT/the second/JJ/second can/MD/can be/VB/be placed/VBN/placed in/IN/in n/NN/n ways/NNS/ways and/CC/and so/RB/so on/NNP/on. and/CC/and so/RB/so /,/, there/EX/there are/VBP/are n/NN/n to/TO/to the/DT/the power/NN/power n/NN/n leaves/VBZ/leaves and/CC/and so/RB/so time/VB/time is/VBZ/is at/IN/at least/JJS/least n/NN/n to/TO/to the/DT/the power/NN/power n/NNP/n. if/IN/if you/PRP/you implement/VBP/implement the/DT/the early/JJ/early checks/NNS/checks /,/, then/RB/then the/DT/the early/JJ/early checks/NNS/checks will/MD/will improve/VB/improve the/DT/the situation/NN/situation some/DT/some part/NNP/part. and/CC/and in/IN/in fact/NN/fact /,/, a/DT/a simple/JJ/simple very/NN/very simple/NN/simple early/RB/early checks/VBZ/checks is/VBZ/is to/TO/to say/VB/say let/NN/let me/PRP/me make/VBP/make sure/JJ/sure that/IN/that this/DT/this new/JJ/new queen/NN/queen is/VBZ/is placed/VBN/placed in/IN/in a/DT/a different/JJ/different row/NN/row from/IN/from all/DT/all the/DT/the previous/JJ/previous queens/NNP/queens. so/RB/so here/RB/here /,/, our/PRP$/our output/NN/output will/MD/will simply/RB/simply be/VB/be a/DT/a permutation/NN/permutation on/IN/on the/DT/the numbers/NNS/numbers 1/CD/1 through/IN/through n/NNP/n. and/CC/and so/RB/so /,/, here/RB/here there/EX/there will/MD/will be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNP/leaves. so/RB/so /,/, the/DT/the time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be omega/NN/omega n/NN/n factorial/NNP/factorial. this/DT/this is/VBZ/is still/RB/still to/TO/to still/RB/still quite/RB/quite large/JJ/large /,/, what/WP/what about/IN/about the/DT/the tsp/NN/tsp /,/, how/WRB/how many/JJ/many tours/NNS/tours do/VBP/do you/PRP/you have/VB/have /,/, through/IN/through n/NN/n cities/NNP/cities. well/RB/well starting/VBG/starting at/IN/at any/DT/any city/NN/city the/DT/the first/JJ/first city/NN/city you/PRP/you can/MD/can be/VB/be placed/VBN/placed can/MD/can be/VB/be picked/VBN/picked in/IN/in n/NN/n minus/NN/minus 1/CD/1 factorial/JJ/factorial ways/NNP/ways. then/RB/then /,/, n/NN/n minus/NN/minus 1/CD/1 ways/NNS/ways then/RB/then the/DT/the next/JJ/next n/NN/n minus/NN/minus 2/CD/2 ways/NNS/ways and/CC/and so/RB/so on/IN/on and/CC/and therefore/RB/therefore /,/, we/PRP/we will/MD/will have/VB/have n/VBN/n minus/NN/minus 1/CD/1 factorial/JJ/factorial different/JJ/different leaves/NNS/leaves in/IN/in this/DT/this search/NN/search space/NNP/space. so/RB/so simply/RB/simply put/VBN/put /,/, there/EX/there are/VBP/are three/CD/three ways/NNS/ways of/IN/of getting/VBG/getting to/TO/to the/DT/the first/JJ/first the/DT/the vertex/NN/vertex of/IN/of the/DT/the first/JJ/first level/NNP/level. the/DT/the next/JJ/next there/EX/there are/VBP/are two/CD/two children/NNS/children and/CC/and in/IN/in this/DT/this case/NN/case there/RB/there will/MD/will be/VB/be 1/CD/1 child/NN/child and/CC/and so/RB/so on/NNP/on. but/CC/but in/IN/in general/JJ/general /,/, if/IN/if you/PRP/you start/VBP/start you/PRP/you can/MD/can n/VB/n city/NN/city tour/NN/tour there/EX/there will/MD/will be/VB/be n/VBN/n minus/NN/minus 1/CD/1 children/NNS/children of/IN/of the/DT/the first/JJ/first level/NN/level n/NN/n minus/NN/minus 2/CD/2 children/NNS/children at/IN/at the/DT/the second/JJ/second level/NN/level for/IN/for each/DT/each of/IN/of the/DT/the vertices/NNS/vertices in/IN/in the/DT/the previous/JJ/previous level/NNP/level. so/RB/so therefore/RB/therefore /,/, we/PRP/we will/MD/will have/VB/have n/VBN/n minus/NN/minus 1/CD/1 differently/RB/differently used/JJ/used and/CC/and again/RB/again here/RB/here the/DT/the time/NN/time will/MD/will be/VB/be omega/NN/omega n/NN/n factorial/NNP/factorial. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 10/CD/10 /CD/) for/IN/for the/DT/the knapsack/NN/knapsack problem/NN/problem /,/, it/PRP/it should/MD/should be/VB/be possible/JJ/possible for/IN/for you/PRP/you to/TO/to improve/VB/improve that/IN/that there/EX/there will/MD/will be/VB/be 2/CD/2 to/TO/to the/DT/the n/NN/n leaves/VBZ/leaves corresponding/VBG/corresponding to/TO/to all/DT/all possible/JJ/possible ways/NNS/ways for/IN/for mean/JJ/mean subsets/NNS/subsets of/IN/of n/NN/n objects/NNP/objects. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 00/CD/00 /CD/) so/RB/so /,/, let/VB/let me/PRP/me summarize/VB/summarize this/DT/this co/NN/co situation/NNP/situation. so/RB/so /,/, what/WDT/what have/VBP/have you/PRP/you done/VBN/done ?/./? so/RB/so for/IN/for /,/, we/PRP/we have/VBP/have looked/VBN/looked at/IN/at very/RB/very general/JJ/general method/NNP/method. it/PRP/it is/VBZ/is brute/JJ/brute force/NN/force in/IN/in that/DT/that it/PRP/it generates/VBZ/generates every/DT/every possible/JJ/possible object/NN/object and/CC/and it/PRP/it does/VBZ/does not/RB/not try/VB/try to/TO/to be/VB/be two/CD/two efficient/JJ/efficient or/CC/or two/CD/two clever/JJ/clever in/IN/in saying/VBG/saying look/NN/look i/PRP/i do/VBP/do not/NNP/not. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to generate/VB/generate this/DT/this class/NN/class of/IN/of objects/NNS/objects /,/, because/IN/because this/DT/this is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be useful/JJ/useful to/TO/to me/NNP/me. and/CC/and typically/RB/typically it/PRP/it takes/VBZ/takes long/RB/long time/NNP/time. in/IN/in fact/NN/fact /,/, typically/RB/typically takes/VBZ/takes time/NN/time exp1ntial/NNP/exp1ntial in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the object/NNP/object. so/RB/so either/RB/either /,/, due/JJ/due to/TO/to again/RB/again or/CC/or n/VB/n factorial/JJ/factorial or/CC/or n/NN/n to/TO/to the/DT/the n/NN/n or/CC/or something/NN/something like/IN/like that/DT/that and/CC/and we/PRP/we have/VBP/have defined/VBN/defined terms/NNS/terms likes/VBZ/likes search/NN/search space/NN/space and/CC/and tree/NN/tree that/IN/that set/NN/set on/IN/on it/PRP/it as/IN/as a/DT/a search/NN/search tree/NNP/tree. and/CC/and let/VB/let me/PRP/me end/VB/end this/DT/this lecture/NN/lecture by/IN/by mentioning/NN/mentioning one/CD/one more/JJR/more term/NN/term which/WDT/which is/VBZ/is combinatorial/JJ/combinatorial optimization/NN/optimization combinatorial/JJ/combinatorial explosion/NNP/explosion. this/DT/this term/NN/term is/VBZ/is commonly/RB/commonly used/VBN/used in/IN/in connection/NN/connection the/DT/the back/NN/back track/NN/track search/NNP/search. the/DT/the idea/NN/idea is/VBZ/is that/IN/that at/IN/at the/DT/the first/JJ/first level/NN/level the/DT/the tree/NN/tree might/MD/might look/VB/look manage/NN/manage level/NN/level /,/, because/IN/because it/PRP/it has/VBZ/has a/DT/a small/JJ/small number/NN/number of/IN/of children/NNP/children. and/CC/and the/DT/the second/JJ/second level/NN/level the/DT/the number/NN/number of/IN/of children/NNS/children the/DT/the grand/NN/grand children/NNS/children of/IN/of the/DT/the root/NN/root will/MD/will grow/NNP/grow. at/IN/at the/DT/the third/JJ/third level/NN/level the/DT/the number/NN/number of/IN/of children/NNS/children will/MD/will be/VB/be a/DT/a further/NNP/further. and/CC/and eventually/RB/eventually even/RB/even you/PRP/you get/VBP/get believes/NNS/believes you/PRP/you will/MD/will have/VB/have many/JJ/many /,/, many/JJ/many /,/, many/JJ/many children/NNS/children or/CC/or many/JJ/many many/JJ/many /,/, many/JJ/many vertices/NNP/vertices. and/CC/and so/RB/so /,/, enzymes/VBZ/enzymes your/PRP$/your tree/NN/tree will/MD/will explore/VB/explore and/CC/and this/DT/this think/NN/think and/CC/and this/DT/this phenomena/NN/phenomena is/VBZ/is commonly/RB/commonly called/VBN/called combinatorial/JJ/combinatorial explosion/NNP/explosion. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 40/CD/40 /CD/) so/RB/so let/JJ/let me/PRP/me /,/, just/RB/just look/VBP/look at/IN/at what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do next/NNP/next. we/PRP/we are/VBP/are going/VBG/going to/TO/to study/NN/study improvements/NNS/improvements to/TO/to backtrack/VB/backtrack search/NNP/search. as/IN/as mention/NN/mention before/IN/before we/PRP/we are/VBP/are going/VBG/going to/TO/to study/NN/study a/DT/a technique/NN/technique called/VBN/called branch/NN/branch and/CC/and bound/NNP/bound. and/CC/and then/RB/then we/PRP/we will/MD/will look/VB/look at/IN/at dynamic/JJ/dynamic programming/NN/programming and/CC/and greedy/JJ/greedy strategies/NNP/strategies. and/CC/and this/DT/this is/VBZ/is really/RB/really the/DT/the focus/NN/focus of/IN/of this/DT/this course/NN/course /,/, but/CC/but it/PRP/it is/VBZ/is important/JJ/important to/TO/to view/VB/view these/DT/these as/IN/as part/NN/part of/IN/of a/DT/a grand/NN/grand picture/NN/picture in/IN/in which/WDT/which sort/NN/sort of/IN/of the/DT/the simplest/JJS/simplest backtrack/NN/backtrack search/NN/search ideas/NNS/ideas are/VBP/are present/JJ/present as/IN/as well/RB/well as/IN/as these/DT/these more/RBR/more sophisticated/JJ/sophisticated strategies/NNS/strategies are/VBP/are present/NNP/present. we/PRP/we should/MD/should also/RB/also note/VB/note that/IN/that the/DT/the backtrack/NN/backtrack search/NN/search is/VBZ/is a/DT/a very/RB/very /,/, very/RB/very general/JJ/general strategy/NN/strategy /,/, whereas/VBZ/whereas these/DT/these are/VBP/are very/RB/very /,/, very/RB/very sophisticated/NNP/sophisticated. but/CC/but very/RB/very specialized/VBN/specialized strategies/NNS/strategies /,/, these/DT/these are/VBP/are likely/JJ/likely to/TO/to be/VB/be fast/JJ/fast as/IN/as we/PRP/we will/MD/will see/VB/see in/IN/in the/DT/the next/JJ/next lectures/NNP/lectures. this/DT/this is/VBZ/is likely/JJ/likely to/TO/to be/VB/be slow/JJ/slow /,/, but/CC/but it/PRP/it is/VBZ/is likely/JJ/likely to/TO/to /VB/( /:/( refer/NN/refer time/NN/time /:/: 53/CD/53 /:/: 52/CD/52 /CD/) /CD/) it/PRP/it is/VBZ/is going/VBG/going to/TO/to very/RB/very /,/, very/RB/very general/JJ/general and/CC/and applicable/JJ/applicable in/IN/in almost/RB/almost any/DT/any combinatorial/JJ/combinatorial optimization/NN/optimization problem/NNP/problem. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture ?/./? 17/CD/17 combinatorial/JJ/combinatorial search/NN/search and/CC/and optimization/NN/optimization ?/./? ii/NN/ii welcome/NN/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design &/CC/& analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. our/PRP$/our topic/JJ/topic today/NN/today is/VBZ/is combinatorial/JJ/combinatorial optimization/NN/optimization and/CC/and search/NNP/search. and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to the/DT/the second/JJ/second lecture/NN/lecture /,/, on/IN/on this/DT/this topic/NNP/topic. let/VBD/let me/PRP/me start/VB/start by/IN/by summarizing/NN/summarizing /,/, what/WP/what we/PRP/we did/VBD/did last/JJ/last time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 09/CD/09 /CD/) in/IN/in the/DT/the last/JJ/last lecture/NN/lecture /,/, we/PRP/we gave/VBD/gave examples/NNS/examples of/IN/of what/WP/what we/PRP/we mean/VBP/mean by/IN/by combinatorial/JJ/combinatorial search/NNP/search. and/CC/and then/RB/then we/PRP/we discussed/VBD/discussed /,/, a/DT/a fairly/RB/fairly general/JJ/general technique/NN/technique called/VBN/called backtrack/NN/backtrack search/NNP/search. this/DT/this is/VBZ/is sort/NN/sort of/IN/of the/DT/the obvious/JJ/obvious idea/NN/idea /,/, just/RB/just executed/VBN/executed systematically/NNP/systematically. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just summarize/VBP/summarize by/IN/by saying/VBG/saying that/IN/that it/PRP/it is/VBZ/is a/DT/a general/JJ/general technique/NNP/technique. it/PRP/it will/MD/will work/VB/work essentially/RB/essentially for/IN/for every/DT/every combinatorial/JJ/combinatorial optimization/NN/optimization problem/NN/problem or/CC/or combinatorial/JJ/combinatorial search/NN/search problem/NNP/problem. and/CC/and the/DT/the basic/JJ/basic idea/NN/idea /,/, over/IN/over here/RB/here is/VBZ/is to/TO/to systematically/RB/systematically try/NN/try out/IN/out all/DT/all possibilities/NNP/possibilities. the/DT/the problem/NN/problem of/IN/of course/NN/course /,/, with/IN/with these/DT/these techniques/NNS/techniques was/VBD/was so/RB/so called/VBN/called combinatorial/JJ/combinatorial explosion/NNP/explosion. as/IN/as we/PRP/we explained/VBD/explained last/JJ/last time/NN/time /,/, this/DT/this just/RB/just means/VBZ/means that/DT/that the/DT/the number/NN/number of/IN/of all/DT/all possibilities/NNS/possibilities /,/, which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to trial/JJ/trial is/VBZ/is really/RB/really large/NNP/large. and/CC/and therefore/RB/therefore /,/, this/DT/this technique/NN/technique typically/RB/typically takes/VBZ/takes a/DT/a lot/NN/lot of/IN/of time/NNP/time. however/RB/however for/IN/for many/JJ/many problems/NNS/problems /,/, this/DT/this is/VBZ/is the/DT/the only/JJ/only way/NN/way to/TO/to go/NNP/go. our/PRP$/our topic/JJ/topic today/NN/today is/VBZ/is to/TO/to consider/VB/consider cases/NNS/cases /,/, in/IN/in which/WDT/which we/PRP/we can/MD/can do/VB/do better/NNP/better. so/RB/so /,/, today/NN/today ?/./? s/NNS/s topic/JJ/topic is/VBZ/is going/VBG/going to/TO/to be/VB/be how/WRB/how to/TO/to improve/VB/improve upon/IN/upon backtrack/NN/backtrack search/NNP/search. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 50/CD/50 /CD/) and/CC/and specifically/RB/specifically /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see a/DT/a variation/NN/variation called/VBN/called branch/NN/branch and/CC/and bound/NNP/bound. this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the main/JJ/main topic/NNP/topic. but/CC/but /,/, we/PRP/we will/MD/will eventually/RB/eventually also/RB/also look/VBP/look at/IN/at other/JJ/other ideas/NNS/ideas called/VBN/called dynamic/JJ/dynamic programming/NN/programming and/CC/and also/RB/also greedy/JJ/greedy algorithms/NNS/algorithms /,/, which/WDT/which are/VBP/are also/RB/also used/VBN/used to/TO/to solve/VB/solve combinatorial/JJ/combinatorial optimization/NN/optimization problems/NNP/problems. but/CC/but this/DT/this will/MD/will come/VB/come later/JJ/later /,/, all/DT/all this/DT/this will/MD/will come/VB/come later/NNP/later. and/CC/and we/PRP/we will/MD/will deal/VB/deal with/IN/with dynamic/JJ/dynamic programming/NN/programming /,/, as/IN/as well/RB/well as/IN/as greedy/JJ/greedy algorithms/NNS/algorithms are/VBP/are quite/RB/quite some/DT/some length/NNP/length. and/CC/and today/NN/today /,/, we/PRP/we will/MD/will mostly/RB/mostly focus/VB/focus on/IN/on branch/NN/branch and/CC/and bound/NNP/bound. so/RB/so /,/, the/DT/the main/JJ/main question/NN/question is/VBZ/is /,/, we/PRP/we know/VBP/know how/WRB/how to/TO/to do/VB/do backtrack/NN/backtrack search/NN/search and/CC/and we/PRP/we will/MD/will review/VB/review it/PRP/it /,/, in/IN/in a/DT/a minute/NNP/minute. how/WRB/how do/VBP/do we/PRP/we make/VB/make it/PRP/it more/JJR/more efficient/JJ/efficient that/IN/that remains/VBZ/remains the/DT/the main/JJ/main question/NNP/question. so/RB/so /,/, let/VB/let me/PRP/me start/VB/start by/IN/by reviewing/NN/reviewing what/WP/what backtrack/NN/backtrack search/NN/search is/VBZ/is ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 57/CD/57 /CD/) so/RB/so /,/, the/DT/the idea/NN/idea over/IN/over here/RB/here is/VBZ/is that/IN/that we/PRP/we are/VBP/are expected/VBN/expected to/TO/to find/VB/find the/DT/the combinatorial/JJ/combinatorial object/NNP/object. let/NN/let us/PRP/us call/VBP/call it/PRP/it some/DT/some x/NN/x star/NN/star /,/, which/WDT/which satisfy/NN/satisfy certain/NN/certain constraints/NNP/constraints. so/RB/so /,/, we/PRP/we know/VBP/know all/DT/all the/DT/the constraints/NNS/constraints and/CC/and we/PRP/we require/VBP/require that/IN/that the/DT/the combinatorial/JJ/combinatorial object/NN/object x/NN/x star/NN/star must/MD/must satisfy/VB/satisfy all/DT/all those/DT/those constraints/NNP/constraints. and/CC/and further/JJ/further there/EX/there is/VBZ/is cost/NN/cost function/NN/function /,/, which/WDT/which is/VBZ/is also/RB/also given/VBN/given for/IN/for these/DT/these objects/NNP/objects. and/CC/and we/PRP/we are/VBP/are /,/, we/PRP/we need/VBP/need to/TO/to minimize/VB/minimize the/DT/the cost/NNP/cost. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a set/NN/set of/IN/of possibilities/NNS/possibilities for/IN/for x/NN/x star/NN/star and/CC/and somehow/NN/somehow /,/, we/PRP/we have/VBP/have to/TO/to be/VB/be sure/JJ/sure that/IN/that we/PRP/we have/VBP/have found/VBN/found the/DT/the one/CD/one with/IN/with the/DT/the least/JJS/least cost/NN/cost among/IN/among them/NNP/them. and/CC/and furthermore/VB/furthermore of/IN/of those/DT/those /,/, we/PRP/we first/RB/first once/RB/once which/WDT/which satisfy/NN/satisfy the/DT/the constraints/NNS/constraints ;/:/; and/CC/and from/IN/from those/DT/those we/PRP/we find/VBP/find the/DT/the one/CD/one which/WDT/which minimize/NN/minimize the/DT/the cost/NNP/cost. so/RB/so /,/, last/JJ/last time/NN/time we/PRP/we said/VBD/said that/IN/that a/DT/a good/JJ/good way/NN/way of/IN/of organizing/VBG/organizing /,/, this/DT/this search/NN/search is/VBZ/is to/TO/to start/VB/start up/RP/up with/IN/with an/DT/an object/NN/object techniques/NNS/techniques called/VBN/called x/NNP/x. x/NN/x is/VBZ/is really/RB/really not/RB/not an/DT/an object/NN/object in/IN/in the/DT/the sense/NN/sense that/IN/that we/PRP/we have/VBP/have defined/VBN/defined over/IN/over here/RB/here /,/, x/NN/x is/VBZ/is sort/NN/sort of/IN/of a/DT/a template/NNP/template. so/RB/so /,/, x/NN/x think/NN/think of/IN/of x/NN/x as/IN/as consisting/VBG/consisting of/IN/of slots/NNS/slots /,/, which/WDT/which need/VBP/need to/TO/to be/VB/be filled/NNP/filled. the/DT/the first/JJ/first slot/NN/slot of/IN/of x/NN/x can/MD/can be/VB/be filled/VBN/filled in/IN/in several/JJ/several ways/NNP/ways. and/CC/and corresponding/VBG/corresponding to/TO/to that/DT/that will/MD/will have/VB/have branches/NNS/branches going/VBG/going out/RP/out of/IN/of this/DT/this node/NNP/node. so/RB/so /,/, the/DT/the first/JJ/first way/NN/way of/IN/of filling/NN/filling the/DT/the first/JJ/first slot/NN/slot /,/, will/MD/will give/VB/give me/PRP/me a/DT/a partially/RB/partially constructed/VBN/constructed object/NN/object /,/, let/VB/let me/PRP/me call/MD/call it/PRP/it x/VB/x 1/CD/1. the/DT/the second/JJ/second way/NN/way of/IN/of filling/NN/filling /,/, this/DT/this first/JJ/first slot/NN/slot will/MD/will give/VB/give me/PRP/me partially/RB/partially constructed/VBD/constructed object/NN/object x/NN/x 2/CD/2 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, the/DT/the first/JJ/first slot/NN/slot can/MD/can be/VB/be filled/VBN/filled in/IN/in many/JJ/many /,/, many/JJ/many ways/NNP/ways. and/CC/and i/PRP/i will/MD/will get/VB/get /,/, different/JJ/different partially/RB/partially constructed/VBN/constructed objects/NNS/objects based/VBN/based on/IN/on ;/:/; however/RB/however /,/, choose/VB/choose to/TO/to fill/VB/fill that/IN/that slot/NNP/slot. i/PRP/i can/MD/can keep/VB/keep going/VBG/going in/IN/in this/DT/this manner/NN/manner say/VBP/say from/IN/from x/NN/x 1/CD/1 or/CC/or from/IN/from any/DT/any of/IN/of these/NNP/these. now/RB/now /,/, i/PRP/i take/VBP/take any/DT/any of/IN/of these/DT/these partially/RB/partially constructed/VBN/constructed objects/NNP/objects. and/CC/and from/IN/from these/DT/these /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to filled/JJ/filled the/DT/the second/JJ/second slot/NNP/slot. so/RB/so /,/, let/VB/let me/PRP/me denote/VB/denote this/DT/this by/IN/by calling/NN/calling this/DT/this new/JJ/new object/NN/object x/NN/x 1/CD/1 2/CD/2. well/RB/well it/PRP/it is/VBZ/is not/RB/not a/DT/a fully/RB/fully constructed/VBN/constructed object/NN/object yet/RB/yet x/NN/x 1/CD/1 1/CD/1. but/CC/but two/CD/two of/IN/of its/PRP$/its slots/NNS/slots have/VBP/have been/VBN/been filled/NNP/filled. the/DT/the first/JJ/first slot/NN/slot has/VBZ/has been/VBN/been filled/VBN/filled /,/, in/IN/in the/DT/the first/JJ/first possible/JJ/possible way/NNP/way. the/DT/the second/JJ/second here/RB/here /,/, has/VBZ/has been/VBN/been filled/VBN/filled in/IN/in the/DT/the first/JJ/first possible/JJ/possible way/NN/way as/IN/as well/NNP/well. but/CC/but /,/, the/DT/the second/JJ/second slot/NN/slot could/MD/could also/RB/also be/VB/be filled/VBN/filled in/IN/in another/DT/another way/NNP/way. and/CC/and that/IN/that another/DT/another way/NN/way /,/, could/MD/could be/VB/be written/VBN/written down/RP/down in/IN/in this/DT/this manner/NNP/manner. so/RB/so /,/, in/IN/in this/DT/this manner/NN/manner i/PRP/i keep/VBP/keep going/VBG/going and/CC/and eventually/RB/eventually /,/, i/PRP/i will/MD/will get/VB/get the/DT/the complete/JJ/complete object/NN/object constructed/VBD/constructed over/IN/over here/NNP/here. of/IN/of course/NN/course /,/, when/WRB/when i/PRP/i get/VBP/get the/DT/the complete/JJ/complete object/NN/object constructed/VBD/constructed /,/, i/PRP/i have/VBP/have to/TO/to stop/NNP/stop. so/RB/so /,/, at/IN/at this/DT/this point/NN/point /,/, when/WRB/when i/PRP/i get/VBP/get to/TO/to the/DT/the leaves/NNS/leaves of/IN/of this/DT/this tree/NN/tree i/PRP/i have/VBP/have to/TO/to stop/VB/stop and/CC/and at/IN/at each/DT/each leaf/NN/leaf i/PRP/i am/VBP/am going/VBG/going to/TO/to make/VB/make sure/JJ/sure that/IN/that may/MD/may constraints/NNS/constraints are/VBP/are satisfy/NNP/satisfy. and/CC/and then/RB/then i/PRP/i will/MD/will evaluate/VB/evaluate the/DT/the cost/NN/cost function/NN/function /,/, given/VBN/given to/TO/to me/PRP/me and/CC/and then/RB/then from/IN/from that/DT/that /,/, i/PRP/i will/MD/will pick/VB/pick the/DT/the object/NN/object with/IN/with the/DT/the minimum/JJ/minimum cost/NNP/cost. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say the/DT/the minimum/JJ/minimum cost/NN/cost object/NN/object x/NN/x star/NN/star appear/NN/appear somewhere/RB/somewhere over/IN/over here/RB/here and/CC/and that/IN/that is/VBZ/is how/WRB/how i/PRP/i am/VBP/am going/VBG/going to/TO/to find/VB/find it/NNP/it. and/CC/and that/IN/that is/VBZ/is the/DT/the way/NN/way that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to written/NNP/written. we/PRP/we said/VBD/said /,/, last/JJ/last time/NN/time as/IN/as well/RB/well that/IN/that this/DT/this is/VBZ/is a/DT/a tree/NN/tree /,/, which/WDT/which is/VBZ/is often/RB/often called/VBN/called the/DT/the search/NN/search tree/NN/tree /,/, this/DT/this tree/NN/tree which/WDT/which is/VBZ/is the/DT/the search/NN/search tree/NN/tree is/VBZ/is explored/VBN/explored in/IN/in a/DT/a depth/NN/depth first/RB/first manner/NNP/manner. so/RB/so /,/, from/IN/from x/NN/x we/PRP/we generate/VBP/generate /,/, we/PRP/we fill/MD/fill the/DT/the first/JJ/first slot/NNP/slot. and/CC/and we/PRP/we generate/VBP/generate x/NN/x 1/CD/1 /,/, from/IN/from x/NN/x 1/CD/1 we/PRP/we filled/VBD/filled the/DT/the second/JJ/second slot/NN/slot and/CC/and which/WDT/which of/IN/of the/DT/the rate/NN/rate x/NN/x 1/CD/1 1/CD/1 and/CC/and so/RB/so on/IN/on /,/, till/IN/till we/PRP/we get/VBP/get to/TO/to the/DT/the end/NNP/end. at/IN/at this/DT/this point/NN/point /,/, we/PRP/we check/VBP/check the/DT/the constraints/NNS/constraints /,/, we/PRP/we evaluate/VBP/evaluate the/DT/the cost/NN/cost if/IN/if necessary/NNP/necessary. and/CC/and then/RB/then we/PRP/we go/VBP/go back/RB/back and/CC/and then/RB/then we/PRP/we consider/VBP/consider the/DT/the second/JJ/second way/NN/way /,/, of/IN/of the/DT/the next/JJ/next possible/JJ/possible way/NN/way of/IN/of filling/NN/filling /,/, the/DT/the next/JJ/next possible/JJ/possible slot/NN/slot or/CC/or the/DT/the same/JJ/same slot/NNP/slot. and/CC/and then/RB/then we/PRP/we go/VBP/go down/RB/down in/IN/in the/DT/the tree/NN/tree /,/, but/CC/but in/IN/in the/DT/the different/JJ/different direction/NN/direction now/NNP/now. and/NNP/and. so/RB/so /,/, whenever/IN/whenever we/PRP/we come/VBP/come to/TO/to the/DT/the leaf/NN/leaf /,/, we/PRP/we go/VBP/go back/NNP/back. and/CC/and in/IN/in this/DT/this manner/NN/manner /,/, we/PRP/we go/VBP/go through/IN/through the/DT/the entire/JJ/entire tree/NN/tree /,/, going/VBG/going back/RB/back and/CC/and forth/JJ/forth and/CC/and this/DT/this back/NN/back /,/, this/DT/this going/NN/going back/RB/back gives/VBZ/gives a/DT/a name/NN/name backtrack/NN/backtrack search/NN/search for/IN/for this/DT/this method/NNP/method. so/RB/so /,/, we/PRP/we will/MD/will have/VB/have to/TO/to explore/VB/explore /,/, the/DT/the entire/JJ/entire tree/NN/tree and/CC/and in/IN/in order/NN/order to/TO/to be/VB/be sure/JJ/sure that/IN/that we/PRP/we have/VBP/have found/VBN/found the/DT/the minimum/JJ/minimum cost/NN/cost leaf/NN/leaf extra/NNP/extra. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the organization/NN/organization of/IN/of backtrack/NN/backtrack search/NNP/search. although/IN/although /,/, i/PRP/i have/VBP/have drawn/VBN/drawn the/DT/the tree/NN/tree in/IN/in parallel/NN/parallel /,/, i/PRP/i have/VBP/have drawn/VBN/drawn the/DT/the entire/JJ/entire tree/NN/tree for/IN/for you/NNP/you. remember/NN/remember that/WDT/that the/DT/the way/NN/way a/DT/a program/NN/program would/MD/would execute/VB/execute this/DT/this procedure/NNP/procedure. it/PRP/it will/MD/will start/VB/start with/IN/with the/DT/the top/JJ/top node/NN/node under/IN/under it/PRP/it and/CC/and will/MD/will go/VB/go along/IN/along some/DT/some particular/JJ/particular path/NN/path /,/, then/RB/then come/VBN/come back/RB/back /,/, then/RB/then go/VB/go down/RB/down again/NNP/again. so/RB/so /,/, at/IN/at any/DT/any point/NN/point and/CC/and time/NN/time /,/, it/PRP/it will/MD/will only/RB/only be/VB/be having/VBG/having certain/JJ/certain path/NN/path in/IN/in this/DT/this entire/JJ/entire search/NN/search tree/NNP/tree. and/CC/and it/PRP/it will/MD/will either/VB/either go/VB/go down/RP/down that/IN/that path/NN/path or/CC/or it/PRP/it will/MD/will roll/VB/roll back/RB/back that/IN/that path/NNP/path. and/CC/and then/RB/then take/VB/take a/DT/a different/JJ/different path/NN/path that/WDT/that is/VBZ/is how/WRB/how the/DT/the algorithm/NN/algorithm will/MD/will execute/NNP/execute. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the search/NN/search tree/NN/tree that/WDT/that we/PRP/we mentioned/VBD/mentioned and/CC/and now/RB/now the/DT/the natural/JJ/natural question/NN/question is/VBZ/is /,/, do/VBP/do we/PRP/we need/VBP/need to/TO/to explore/VB/explore the/DT/the entire/JJ/entire tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 36/CD/36 /CD/) this/DT/this is/VBZ/is an/DT/an extremely/RB/extremely important/JJ/important question/NNP/question. we/PRP/we said/VBD/said that/IN/that there/EX/there is/VBZ/is combinatorial/JJ/combinatorial explosion/NN/explosion and/CC/and that/IN/that because/IN/because the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is a/DT/a huge/JJ/huge number/NN/number /,/, the/DT/the leaf/NN/leaf coming/VBG/coming back/RB/back to/TO/to this/DT/this picture/NNP/picture. at/IN/at every/DT/every time/NN/time as/IN/as we/PRP/we go/VBP/go down/RB/down the/DT/the tree/NN/tree /,/, the/DT/the numbers/NNS/numbers of/IN/of nodes/NNS/nodes doubles/NNS/doubles are/VBP/are get/VB/get multiplied/VBN/multiplied by/IN/by a/DT/a large/JJ/large number/NN/number as/IN/as we/PRP/we go/VBP/go down/NNP/down. and/CC/and therefore/RB/therefore /,/, the/DT/the number/NN/number of/IN/of leaves/NNS/leaves is/VBZ/is enormous/NNP/enormous. so/RB/so /,/, suppose/DT/suppose it/PRP/it was/VBD/was possible/JJ/possible for/IN/for as/IN/as to/TO/to say/VB/say /,/, that/IN/that look/NN/look anything/NN/anything that/WDT/that is/VBZ/is underneath/NN/underneath these/DT/these x/NN/x 2/CD/2 /,/, really/RB/really does/VBZ/does not/RB/not need/VBP/need to/TO/to be/VB/be explored/VBN/explored and/CC/and without/IN/without even/RB/even seeing/VBG/seeing /,/, anything/NN/anything underneath/NN/underneath it/PRP/it /,/, if/IN/if we/PRP/we could/MD/could do/VB/do that/DT/that /,/, then/RB/then we/PRP/we will/MD/will be/VB/be saving/VBG/saving ourselves/NNS/ourselves a/DT/a lot/NN/lot of/IN/of work/NNP/work. and/CC/and so/RB/so the/DT/the idea/NN/idea that/IN/that we/PRP/we are/VBP/are looking/VBG/looking for/IN/for over/IN/over here/RB/here is/VBZ/is called/VBN/called pruning/-NONE-/pruning. so/RB/so /,/, another/DT/another way/NN/way of/IN/of expressing/VBG/expressing the/DT/the same/JJ/same version/NN/version is/VBZ/is /,/, can/MD/can we/PRP/we prune/VB/prune the/DT/the search/NN/search tree/NNP/tree. so/RB/so /,/, if/IN/if we/PRP/we could/MD/could do/VB/do that/DT/that /,/, then/RB/then you/PRP/you reduce/VB/reduce our/PRP$/our work/NN/work and/CC/and then/RB/then we/PRP/we would/MD/would have/VB/have /,/, a/DT/a more/RBR/more efficient/JJ/efficient way/NN/way of/IN/of searching/NNP/searching. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 11/CD/11 /CD/) so/RB/so /,/, the/DT/the branch/NN/branch and/CC/and bound/NN/bound is/VBZ/is just/RB/just one/CD/one possible/JJ/possible heuristic/JJ/heuristic of/IN/of pruning/NN/pruning /,/, is/VBZ/is a/DT/a pruning/NN/pruning heuristic/NNP/heuristic. so/RB/so /,/, let/VB/let us/PRP/us come/VB/come back/RB/back to/TO/to this/DT/this picture/NN/picture here/RB/here again/NNP/again. /:/( refer/NN/refer time/NN/time /:/: 11/CD/11 /:/: 28/CD/28 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say that/IN/that we/PRP/we have/VBP/have explored/VBN/explored this/DT/this whole/JJ/whole thing/NN/thing /,/, we/PRP/we found/VBD/found certain/JJ/certain solution/NN/solution x/NN/x over/IN/over here/RB/here and/CC/and we/PRP/we evaluated/VBD/evaluated its/PRP$/its cost/NN/cost and/CC/and this/DT/this cost/NN/cost turned/VBD/turned out/RP/out to/TO/to be/VB/be some/DT/some c/NN/c of/IN/of x/NNP/x. so/RB/so /,/, we/PRP/we went/VBD/went down/IN/down along/IN/along the/DT/the left/NN/left branch/NN/branch in/IN/in the/DT/the tree/NN/tree and/CC/and we/PRP/we found/VBD/found /,/, a/DT/a certain/JJ/certain c/NN/c of/IN/of x/NNP/x. now/RB/now /,/, suppose/VBP/suppose this/DT/this cost/NN/cost function/NN/function c/NN/c can/MD/can be/VB/be used/VBN/used to/TO/to evaluate/VB/evaluate the/DT/the cost/NN/cost of/IN/of x/NN/x /,/, which/WDT/which is/VBZ/is a/DT/a complete/JJ/complete object/NN/object or/CC/or let/VB/let me/PRP/me call/MD/call this/DT/this say/VB/say some/DT/some x/NN/x bar/NN/bar /,/, x/NN/x bar/NN/bar is/VBZ/is a/DT/a completely/RB/completely defined/VBN/defined object/NNP/object. but/CC/but /,/, let/VB/let us/PRP/us suppose/VB/suppose that/IN/that this/DT/this cost/NN/cost function/NN/function c/NN/c is/VBZ/is also/RB/also /,/, will/MD/will also/RB/also be/VB/be able/JJ/able to/TO/to tell/VB/tell us/PRP/us the/DT/the cost/NN/cost of/IN/of partial/JJ/partial object/NNP/object. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an important/JJ/important idea/NNP/idea. so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given a/DT/a cost/NN/cost function/NN/function c/NN/c /,/, some/DT/some c/NN/c of/IN/of say/NN/say x/NN/x bar/NN/bar /,/, which/WDT/which gives/VBZ/gives the/DT/the cost/NN/cost of/IN/of a/DT/a complete/JJ/complete object/NN/object x/NN/x bar/NNP/bar. but/CC/but /,/, suppose/VBP/suppose c/NN/c of/IN/of say/NN/say some/DT/some xij/NN/xij is/VBZ/is also/RB/also defined/NNP/defined. suppose/NN/suppose so/IN/so as/IN/as we/PRP/we construct/VBP/construct our/PRP$/our object/NN/object little/RB/little by/IN/by little/RB/little /,/, we/PRP/we can/MD/can still/RB/still associate/VB/associate a/DT/a cost/NN/cost with/IN/with it/NNP/it. this/DT/this may/MD/may not/RB/not always/RB/always be/VB/be true/JJ/true /,/, but/CC/but in/IN/in some/DT/some cases/NNS/cases /,/, it/PRP/it will/MD/will be/VB/be and/CC/and we/PRP/we are/VBP/are talking/VBG/talking about/IN/about those/DT/those some/DT/some cases/NNS/cases and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to give/VB/give an/DT/an example/NN/example in/IN/in a/DT/a minute/NNP/minute. and/CC/and furthermore/VB/furthermore /,/, suppose/DT/suppose this/DT/this extended/JJ/extended cost/NN/cost function/NN/function /,/, now/RB/now has/VBZ/has the/DT/the following/VBG/following interesting/JJ/interesting property/NNP/property. so/RB/so /,/, in/IN/in addition/NN/addition to/TO/to this/DT/this /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first condition/NN/condition that/WDT/that we/PRP/we need/VBP/need /,/, in/IN/in the/DT/the second/JJ/second condition/NN/condition is/VBZ/is that/IN/that if/IN/if say/NN/say x/NN/x bar/NN/bar is/VBZ/is obtained/VBN/obtained by/IN/by extending/NN/extending xij/NN/xij /,/, then/RB/then we/PRP/we know/VBP/know that/IN/that cost/NN/cost of/IN/of x/NN/x bar/NN/bar is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to cost/VB/cost of/IN/of xij/NNP/xij. suppose/NN/suppose the/DT/the cost/NN/cost function/NN/function satisfy/NN/satisfy these/DT/these two/CD/two properties/NNP/properties. what/WP/what are/VBP/are the/DT/the two/CD/two properties/NNS/properties that/WDT/that it/PRP/it must/MD/must be/VB/be defined/VBN/defined /,/, even/RB/even for/IN/for partially/RB/partially constructed/VBN/constructed objects/NNS/objects and/CC/and furthermore/VB/furthermore /,/, we/PRP/we should/MD/should only/RB/only increase/VB/increase as/IN/as we/PRP/we go/VBP/go towards/NNS/towards completely/RB/completely building/VBG/building that/IN/that object/NNP/object. another/DT/another way/NN/way of/IN/of saying/VBG/saying the/DT/the something/NN/something is/VBZ/is that/IN/that /,/, this/DT/this is/VBZ/is our/PRP$/our tree/NNP/tree. /NNP/( refer/NN/refer time/NN/time /:/: 14/CD/14 /:/: 26/CD/26 /CD/) so/RB/so /,/, the/DT/the cost/NN/cost function/NN/function should/MD/should be/VB/be defined/VBN/defined at/IN/at every/DT/every node/NN/node in/IN/in this/DT/this tree/NNP/tree. and/CC/and furthermore/VB/furthermore /,/, it/PRP/it has/VBZ/has to/TO/to only/RB/only increase/VB/increase /,/, actually/RB/actually does/VBZ/does not/RB/not have/VB/have to/TO/to increase/VB/increase but/CC/but it/PRP/it can/MD/can not/RB/not decrease/VB/decrease /,/, it/PRP/it should/MD/should not/RB/not decrease/VB/decrease as/IN/as we/PRP/we go/VBP/go down/RB/down from/IN/from the/DT/the root/NN/root towards/NNS/towards the/DT/the leaves/NNP/leaves. so/RB/so /,/, if/IN/if these/DT/these two/CD/two properties/NNS/properties are/VBP/are met/VBN/met then/RB/then we/PRP/we can/MD/can have/VB/have a/DT/a branch/NN/branch and/CC/and boundary/JJ/boundary /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 14/CD/14 /:/: 46/CD/46 /CD/) /CD/) /./. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down and/CC/and then/RB/then i/PRP/i will/MD/will explain/VB/explain why/NNP/why. so/RB/so /,/, this/DT/this implies/VBZ/implies that/IN/that branch/NN/branch and/CC/and bound/NN/bound is/VBZ/is possible/JJ/possible /,/, so/RB/so here/RB/here is/VBZ/is the/DT/the idea/NNP/idea. so/RB/so /,/, suppose/DT/suppose i/PRP/i have/VBP/have found/VBN/found some/DT/some solution/NN/solution over/IN/over here/RB/here /,/, a/DT/a complete/JJ/complete object/NN/object and/CC/and its/PRP$/its cost/NNP/cost. /NNP/( refer/NN/refer time/NN/time /:/: 15/CD/15 /:/: 13/CD/13 /CD/) and/CC/and now/RB/now i/PRP/i am/VBP/am exploring/VBG/exploring this/DT/this tree/NN/tree and/CC/and i/PRP/i go/VBP/go back/RB/back and/CC/and i/PRP/i go/VBP/go back/RB/back to/TO/to this/DT/this point/NN/point x/NN/x 2/CD/2 /,/, at/IN/at this/DT/this point/NN/point avail/NN/avail you/PRP/you evaluate/VBP/evaluate the/DT/the cost/NN/cost of/IN/of x/NN/x 2/CD/2. now/RB/now /,/, if/IN/if the/DT/the cost/NN/cost of/IN/of x/NN/x 2/CD/2 is/VBZ/is itself/PRP/itself larger/JJR/larger than/IN/than the/DT/the cost/NN/cost of/IN/of the/DT/the best/JJS/best solution/NN/solution that/WDT/that i/PRP/i have/VBP/have found/VBN/found so/RB/so far/RB/far /,/, then/RB/then something/NN/something interesting/VBG/interesting has/VBZ/has happen/NNP/happen. i/PRP/i know/VBP/know because/IN/because of/IN/of the/DT/the property/NN/property /,/, of/IN/of this/DT/this cost/NN/cost function/NN/function that/WDT/that no/DT/no matter/NN/matter how/WRB/how i/PRP/i complete/VBP/complete this/DT/this object/NN/object /:/( refer/NN/refer time/NN/time /:/: 15/CD/15 /:/: 39/CD/39 /CD/) /./. how/WRB/how i/PRP/i extend/VBP/extend this/DT/this object/NN/object into/IN/into a/DT/a full/JJ/full object/NN/object /,/, the/DT/the cost/NN/cost is/VBZ/is only/RB/only going/VBG/going to/TO/to increase/NNP/increase. but/CC/but /,/, this/DT/this cost/NN/cost itself/PRP/itself is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the cost/NN/cost of/IN/of the/DT/the best/JJS/best object/NN/object found/VBD/found so/RB/so far/NNP/far. and/CC/and therefore/RB/therefore /,/, there/EX/there is/VBZ/is no/DT/no point/NN/point in/IN/in searching/NN/searching further/RB/further below/IN/below x/NN/x 2/CD/2 /,/, this/DT/this is/VBZ/is an/DT/an important/JJ/important idea/NNP/idea. this/DT/this is/VBZ/is the/DT/the idea/NN/idea of/IN/of branch/NN/branch and/CC/and bound/NNP/bound. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take an/DT/an example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 06/CD/06 /CD/) so/RB/so /,/, my/PRP$/my example/NN/example is/VBZ/is the/DT/the travelling/NN/travelling salesman/NN/salesman problem/NNP/problem. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use a/DT/a very/RB/very simple/JJ/simple graph/NN/graph /,/, to/TO/to explain/VB/explain how/WRB/how branch/NN/branch and/CC/and bound/NN/bound can/MD/can be/VB/be used/VBN/used with/IN/with tsp/NNP/tsp. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my simple/NN/simple graph/NNP/graph. so/RB/so /,/, it/PRP/it is/VBZ/is just/RB/just a/DT/a problem/NN/problem on/IN/on four/CD/four cities/NNP/cities. so/RB/so /,/, here/RB/here are/VBP/are the/DT/the edges/NNS/edges and/CC/and vertices/NNS/vertices in/IN/in my/PRP$/my graph/NN/graph /,/, this/DT/this is/VBZ/is of/IN/of course/NN/course /,/, ridiculously/RB/ridiculously small/JJ/small problem/NN/problem /,/, but/CC/but it/PRP/it will/MD/will do/VB/do for/IN/for explaining/VBG/explaining our/PRP$/our ideas/NNP/ideas. let/NN/let me/PRP/me put/VBD/put down/RP/down the/DT/the weights/NNS/weights along/IN/along with/IN/with this/NNP/this. so/RB/so /,/, may/MD/may be/VB/be this/DT/this edges/NNS/edges weight/VBD/weight 2/CD/2 /,/, let/VB/let us/PRP/us say/VB/say this/DT/this edges/NNS/edges to/TO/to be/VB/be 1/CD/1 /,/, let/VB/let us/PRP/us say/VB/say this/DT/this edges/NNS/edges be/VB/be 15/CD/15 /,/, this/DT/this edge/NN/edge over/IN/over here/RB/here has/VBZ/has be/VB/be 10/CD/10 /,/, say/VB/say this/DT/this edge/NN/edge has/VBZ/has be/VB/be 3/CD/3 and/CC/and this/DT/this outer/NN/outer edge/NN/edge has/VBZ/has be/VB/be 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the graph/NN/graph that/IN/that we/PRP/we have/VBP/have given/VBN/given and/CC/and our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to find/VB/find a/DT/a tour/NN/tour through/IN/through this/DT/this graph/NN/graph /,/, a/DT/a tour/NN/tour is/VBZ/is simply/RB/simply a/DT/a sequence/NN/sequence of/IN/of vertices/NNS/vertices /,/, which/WDT/which contains/VBZ/contains all/DT/all vertices/NNS/vertices and/CC/and this/DT/this is/VBZ/is the/DT/the complete/JJ/complete graph/NNP/graph. and/CC/and furthermore/VB/furthermore /,/, the/DT/the weight/NN/weight of/IN/of the/DT/the edges/NNS/edges traverse/VBP/traverse according/VBG/according to/TO/to the/DT/the tour/NN/tour should/MD/should be/VB/be as/RB/as simple/JJ/simple as/IN/as possible/NNP/possible. i/PRP/i am/VBP/am going/VBG/going to/TO/to first/JJ/first explain/NN/explain /,/, how/WRB/how backtrack/NN/backtrack search/NN/search should/MD/should work/VB/work on/IN/on this/NNP/this. and/CC/and then/RB/then i/PRP/i will/MD/will tell/VB/tell you/PRP/you how/WRB/how /,/, a/DT/a branch/NN/branch and/CC/and bound/NN/bound heuristic/JJ/heuristic will/MD/will allow/VB/allow us/PRP/us to/TO/to prove/VB/prove away/RP/away a/DT/a lot/NN/lot of/IN/of the/DT/the searching/NNP/searching. so/RB/so /,/, let/VB/let us/PRP/us start/VB/start with/IN/with the/DT/the empty/NN/empty tour/NN/tour /,/, the/DT/the empty/NN/empty tour/NN/tour is/VBZ/is /,/, so/RB/so these/DT/these are/VBP/are my/PRP$/my four/CD/four vertices/NNS/vertices and/CC/and let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is my/PRP$/my starting/NN/starting point/NN/point /,/, i/PRP/i could/MD/could have/VB/have anything/NN/anything as/IN/as my/PRP$/my starting/NN/starting point/NN/point /,/, does/VBZ/does not/RB/not really/RB/really matter/NNP/matter. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the starting/VBG/starting point/NNP/point. at/IN/at this/DT/this starting/NN/starting point/NN/point /,/, my/PRP$/my idea/NN/idea is/VBZ/is going/VBG/going to/TO/to be/VB/be that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to extend/VB/extend the/DT/the tour/NN/tour /,/, just/RB/just i/PRP/i have/VBP/have been/VBN/been given/VBN/given a/DT/a partially/RB/partially constructed/VBN/constructed object/NN/object /,/, an/DT/an object/NN/object which/WDT/which represents/NNS/represents a/DT/a tour/NN/tour which/WDT/which is/VBZ/is not/RB/not fully/RB/fully constructed/VBN/constructed here/NNP/here. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to extend/VB/extend it/PRP/it edge/VB/edge by/IN/by edge/NNP/edge. so/RB/so /,/, the/DT/the first/JJ/first edge/NN/edge i/PRP/i can/MD/can add/VB/add in/IN/in several/JJ/several ways/NNP/ways. so/IN/so /,/, for/IN/for example/NN/example /,/, here/RB/here is/VBZ/is one/CD/one possibility/NNP/possibility. so/RB/so /,/, i/PRP/i can/MD/can start/VB/start over/IN/over here/RB/here and/CC/and i/PRP/i can/MD/can go/VB/go down/NNP/down. so/RB/so /,/, these/DT/these are/VBP/are my/PRP$/my other/JJ/other two/CD/two cities/NNP/cities. so/RB/so /,/, i/PRP/i could/MD/could have/VB/have gone/VBN/gone down/RP/down over/IN/over here/NNP/here. of/IN/of course/NN/course /,/, i/PRP/i could/MD/could have/VB/have something/NN/something else/RB/else what/WP/what could/MD/could i/VB/i have/VBP/have done/VBN/done /,/, i/PRP/i could/MD/could have/VB/have say/VB/say taken/VBN/taken the/DT/the horizontal/JJ/horizontal edge/NN/edge instead/NNP/instead. this/DT/this i/PRP/i will/MD/will explore/VB/explore little/JJ/little bit/NN/bit later/JJ/later /,/, but/CC/but right/RB/right now/RB/now this/DT/this is/VBZ/is what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to explore/NNP/explore. so/RB/so /,/, as/IN/as we/PRP/we said/VBD/said earlier/RBR/earlier the/DT/the algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to proceed/VB/proceed in/IN/in a/DT/a depth/NN/depth first/RB/first manner/NNP/manner. so/RB/so /,/, the/DT/the algorithm/NN/algorithm will/MD/will make/VB/make a/DT/a choice/NN/choice that/WDT/that the/DT/the first/JJ/first edge/NN/edge is/VBZ/is the/DT/the downward/NN/downward edge/NN/edge over/IN/over here/NNP/here. next/JJ/next /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to extend/VB/extend the/DT/the tour/NN/tour starting/VBG/starting at/IN/at this/DT/this vertex/NNP/vertex. so/RB/so /,/, how/WRB/how will/MD/will you/PRP/you do/VB/do that/DT/that /,/, well/RB/well it/PRP/it will/MD/will consider/VB/consider all/DT/all possibilities/NNS/possibilities out/IN/out of/IN/of that/NNP/that. so/RB/so /,/, from/IN/from here/RB/here /,/, from/IN/from here/RB/here there/RB/there are/VBP/are two/CD/two possibilities/NNS/possibilities /,/, now/RB/now either/DT/either it/PRP/it can/MD/can either/VB/either take/VB/take the/DT/the horizontal/JJ/horizontal edge/NN/edge or/CC/or it/PRP/it can/MD/can take/VB/take this/DT/this diagonal/JJ/diagonal edge/NN/edge going/VBG/going back/NNP/back. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say take/NN/take this/DT/this diagonal/JJ/diagonal edge/NN/edge /,/, the/DT/the horizontal/JJ/horizontal edge/NN/edge will/MD/will come/VB/come in/IN/in somewhere/NN/somewhere over/IN/over here/NNP/here. then/RB/then from/IN/from here/RB/here what/WP/what are/VBP/are the/DT/the possibilities/NNP/possibilities. so/RB/so /,/, from/IN/from here/RB/here the/DT/the possibilities/NNS/possibilities are/VBP/are that/IN/that till/NN/till valid/VBD/valid it/PRP/it is/VBZ/is gone/VBN/gone down/RP/down and/CC/and it/PRP/it is/VBZ/is gone/VBN/gone up/NNP/up. and/CC/and this/DT/this point/NN/point really/RB/really there/EX/there is/VBZ/is only/RB/only one/CD/one thing/NN/thing left/NN/left to/TO/to do/VB/do /,/, it/PRP/it has/VBZ/has to/TO/to go/VB/go down/RP/down here/RB/here again/RB/again /,/, it/PRP/it has/VBZ/has to/TO/to go/VB/go down/NNP/down. and/CC/and then/RB/then finally/RB/finally /,/, from/IN/from here/RB/here there/RB/there is/VBZ/is only/RB/only one/CD/one possibility/NNP/possibility. in/IN/in fact/NN/fact /,/, so/RB/so there/RB/there is/VBZ/is no/DT/no /,/, even/RB/even here/RB/here there/EX/there was/VBD/was one/CD/one possibility/NN/possibility ;/:/; here/RB/here as/IN/as well/RB/well there/RB/there is/VBZ/is one/CD/one possibility/NNP/possibility. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we had/VBD/had done/VBN/done so/RB/so far/RB/far /,/, and/CC/and then/RB/then from/IN/from here/RB/here it/PRP/it will/MD/will go/VB/go back/NNP/back. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the tour/NN/tour that/IN/that we/PRP/we would/MD/would have/VB/have got/VBN/got /,/, by/IN/by doing/NN/doing depth/NN/depth first/RB/first search/NNP/search. so/RB/so /,/, take/VB/take the/DT/the first/JJ/first alternative/NN/alternative at/IN/at each/DT/each step/NN/step and/CC/and we/PRP/we would/MD/would come/VB/come to/TO/to this/DT/this tour/NNP/tour. at/IN/at this/DT/this point/NN/point we/PRP/we would/MD/would ask/VB/ask /,/, what/WDT/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of the/DT/the tour/NN/tour ?/./? what/WP/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of the/DT/the tour/NN/tour here/RB/here /,/, so/RB/so it/PRP/it is/VBZ/is 2/CD/2 for/IN/for this/DT/this 2/CD/2 plus/VBZ/plus 1/CD/1 3/CD/3 3/CD/3 plus/CC/plus 3/CD/3 plus/NNS/plus 1/CD/1. so/RB/so /,/, the/DT/the cost/NN/cost of/IN/of this/DT/this is/VBZ/is 6/CD/6. so/RB/so /,/, in/IN/in backtrack/NN/backtrack search/NN/search /,/, we/PRP/we would/MD/would just/RB/just record/VB/record this/DT/this 6/CD/6 and/CC/and we/PRP/we would/MD/would say/VB/say this/DT/this is/VBZ/is the/DT/the best/JJS/best object/NN/object we/PRP/we have/VBP/have gone/VBN/gone /,/, so/RB/so far/NNP/far. what/WP/what we/PRP/we do/VBP/do next/JJ/next then/RB/then we/PRP/we would/MD/would go/VB/go back/RB/back from/IN/from here/NNP/here. when/WRB/when we/PRP/we go/VBP/go back/RB/back here/RB/here /,/, we/PRP/we say/VBP/say is/VBZ/is there/EX/there another/DT/another way/NN/way in/IN/in which/WDT/which this/DT/this tour/NN/tour could/MD/could have/VB/have extended/VBN/extended no/NN/no. there/RB/there is/VBZ/is no/DT/no other/JJ/other way/NN/way because/IN/because from/IN/from here/RB/here /,/, we/PRP/we have/VBP/have to/TO/to go/VB/go back/RB/back to/TO/to the/DT/the starting/NN/starting point/NNP/point. so/RB/so /,/, there/EX/there is/VBZ/is no/DT/no other/JJ/other way/NNP/way. so/IN/so /,/, then/RB/then we/PRP/we go/VBP/go back/RB/back over/IN/over here/RB/here again/NNP/again. so/RB/so /,/, at/IN/at this/DT/this point/NN/point again/RB/again we/PRP/we need/VBP/need to/TO/to ask/VB/ask is/VBZ/is there/RB/there another/DT/another way/NN/way of/IN/of /,/, in/IN/in which/WDT/which this/DT/this tour/NN/tour could/MD/could have/VB/have been/VBN/been extended/NNP/extended. well/RB/well even/RB/even here/RB/here /,/, there/EX/there is/VBZ/is no/DT/no other/JJ/other way/NN/way because/IN/because we/PRP/we can/MD/can not/RB/not go/VB/go back/RB/back to/TO/to town/VB/town which/WDT/which we/PRP/we have/VBP/have already/RB/already seen/VBN/seen /,/, because/IN/because we/PRP/we have/VBP/have to/TO/to go/VB/go through/RP/through all/DT/all the/DT/the towns/NNS/towns first/NNP/first. so/RB/so /,/, the/DT/the only/JJ/only way/NN/way could/MD/could have/VB/have been/VBN/been to/TO/to go/VB/go down/RP/down /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we did/VBD/did over/RP/over here/NNP/here. so/RB/so /,/, even/RB/even here/RB/here there/EX/there was/VBD/was no/DT/no other/JJ/other choice/NNP/choice. so/IN/so /,/, we/PRP/we come/VBP/come back/RB/back over/IN/over here/RB/here and/CC/and at/IN/at this/DT/this point/NN/point /,/, we/PRP/we could/MD/could ask/VB/ask well/RB/well instead/RB/instead of/IN/of going/VBG/going in/IN/in this/DT/this direction/NN/direction could/MD/could be/VB/be go/RB/go straight/NNP/straight. so/RB/so /,/, yes/NNS/yes we/PRP/we could/MD/could go/VB/go straight/NNP/straight. in/IN/in fact/NN/fact /,/, and/CC/and therefore/RB/therefore /,/, we/PRP/we would/MD/would go/VB/go and/CC/and we/PRP/we would/MD/would explore/VB/explore this/DT/this part/NN/part of/IN/of the/DT/the search/NN/search page/NN/page so/RB/so /,/, from/IN/from here/RB/here /,/, instead/RB/instead of/IN/of going/VBG/going back/RB/back diagonally/RB/diagonally we/PRP/we could/MD/could go/VB/go down/IN/down horizontally/NNP/horizontally. now/RB/now /,/, from/IN/from this/DT/this point/NN/point onwards/NNS/onwards backtrack/VBP/backtrack search/NN/search would/MD/would go/VB/go down/RB/down and/CC/and search/NN/search the/DT/the rest/NN/rest of/IN/of the/DT/the tree/NN/tree /:/( /:/( refer/NN/refer time/NN/time /:/: 21/CD/21 /:/: 43/CD/43 /CD/) /CD/) /./. but/CC/but /,/, here/RB/here is/VBZ/is how/WRB/how branch/NN/branch and/CC/and bound/NN/bound would/MD/would make/VB/make a/DT/a different/JJ/different decision/NNP/decision. now/RB/now /,/, branch/NN/branch and/CC/and bound/NN/bound could/MD/could say/VB/say /,/, let/VB/let us/PRP/us evaluate/VB/evaluate the/DT/the cost/NN/cost of/IN/of the/DT/the tour/NN/tour that/IN/that we/PRP/we have/VBP/have constructed/VBN/constructed so/RB/so far/NNP/far. so/IN/so /,/, what/WP/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of this/DT/this tour/NN/tour /,/, the/DT/the cost/NN/cost of/IN/of these/DT/these edges/NNS/edges is/VBZ/is 2/CD/2 the/DT/the cost/NN/cost of/IN/of this/DT/this edge/NN/edge is/VBZ/is 15/CD/15. so/RB/so /,/, the/DT/the total/JJ/total cost/NN/cost of/IN/of this/DT/this partial/JJ/partial object/NN/object that/WDT/that we/PRP/we have/VBP/have constructed/VBN/constructed is/VBZ/is 17/CD/17. we/PRP/we know/VBP/know that/IN/that as/IN/as we/PRP/we add/VBP/add more/JJR/more and/CC/and more/JJR/more edges/NNS/edges into/IN/into this/DT/this /,/, the/DT/the edge/NN/edge length/NN/length that/WDT/that the/DT/the total/JJ/total distance/NN/distance covered/VBN/covered is/VBZ/is only/RB/only going/VBG/going to/TO/to increase/VB/increase and/CC/and this/DT/this is/VBZ/is based/VBN/based on/IN/on the/DT/the important/JJ/important assumption/NN/assumption /,/, which/WDT/which is/VBZ/is that/IN/that all/DT/all edge/NN/edge lengths/NNS/lengths are/VBP/are positive/NNP/positive. let/NN/let me/PRP/me write/VBP/write the/DT/the term/NN/term because/IN/because that/DT/that is/VBZ/is really/RB/really an/DT/an important/JJ/important assumption/NN/assumption /,/, all/DT/all edge/NN/edge lengths/NNS/lengths are/VBP/are non-negative/NNP/non-negative. if/IN/if this/DT/this assumption/NN/assumption when/WRB/when not/RB/not true/JJ/true /,/, there/EX/there we/PRP/we would/MD/would not/RB/not have/VB/have a/DT/a branch/NN/branch and/CC/and bound/NN/bound algorithm/NN/algorithm at/IN/at least/JJS/least not/RB/not the/DT/the way/NN/way /,/, i/PRP/i have/VBP/have described/VBN/described so/RB/so far/NNP/far. but/CC/but /,/, this/DT/this is/VBZ/is the/DT/the very/JJ/very natural/JJ/natural assumption/NN/assumption and/CC/and so/RB/so we/PRP/we can/MD/can conclude/VB/conclude at/IN/at this/DT/this point/NN/point that/NNP/that. in/IN/in fact/NN/fact /,/, any/DT/any possible/JJ/possible way/NN/way in/IN/in which/WDT/which this/DT/this tour/NN/tour is/VBZ/is to/TO/to be/VB/be extended/VBN/extended /,/, does/VBZ/does not/RB/not need/VBP/need to/TO/to be/VB/be considered/VBN/considered /,/, because/IN/because its/PRP$/its cost/NN/cost is/VBZ/is going/VBG/going to/TO/to be/VB/be bigger/JJR/bigger than/IN/than 17/CD/17. and/CC/and therefore/RB/therefore /,/, it/PRP/it can/MD/can not/RB/not beat/VB/beat this/DT/this best/JJS/best cost/NN/cost tour/NN/tour that/WDT/that we/PRP/we have/VBP/have found/VBN/found so/RB/so far/NNP/far. so/IN/so /,/, branch/NN/branch and/CC/and bound/NN/bound would/MD/would not/RB/not do/VB/do /,/, any/DT/any of/IN/of the/DT/the work/NN/work of/IN/of exploring/VBG/exploring anything/NN/anything below/IN/below this/NNP/this. so/RB/so /,/, at/IN/at this/DT/this point/NN/point branch/NN/branch and/CC/and bound/NN/bound will/MD/will say/VB/say /,/, oh/JJ/oh i/PRP/i do/VBP/do not/RB/not need/VB/need to/TO/to do/VB/do anything/NN/anything and/CC/and i/PRP/i would/MD/would return/VB/return back/NNP/back. and/CC/and it/PRP/it would/MD/would keep/VB/keep the/DT/the 6/CD/6 as/IN/as the/DT/the only/JJ/only tour/NN/tour that/WDT/that we/PRP/we have/VBP/have found/VBN/found so/RB/so far/NNP/far. and/CC/and that/IN/that is/VBZ/is the/DT/the best/JJS/best and/CC/and it/PRP/it would/MD/would know/VB/know that/IN/that with/IN/with assurance/NN/assurance /:/( /:/( refer/NN/refer time/NN/time /:/: 23/CD/23 /:/: 34/CD/34 /CD/) /CD/) /./. we/PRP/we have/VBP/have essentially/RB/essentially proved/NNP/proved. in/IN/in fact/NN/fact /,/, that/IN/that noting/VBG/noting underneath/NN/underneath over/IN/over here/RB/here needs/VBZ/needs to/TO/to be/VB/be explored/NNP/explored. what/WP/what would/MD/would happen/VB/happen next/JJ/next /,/, we/PRP/we come/VBP/come back/RB/back over/IN/over here/RB/here /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 23/CD/23 /:/: 44/CD/44 /CD/) /CD/) /./. and/CC/and then/RB/then we/PRP/we say/VBP/say /,/, instead/RB/instead of/IN/of exploring/VBG/exploring in/IN/in this/DT/this manner/NN/manner /,/, instead/RB/instead of/IN/of taking/VBG/taking the/DT/the first/JJ/first edge/NN/edge itself/PRP/itself going/VBG/going downwards/NNS/downwards /,/, let/VB/let us/PRP/us take/VB/take it/PRP/it some/DT/some other/JJ/other way/NNP/way. so/IN/so /,/, what/WP/what is/VBZ/is another/DT/another way/NN/way /,/, it/PRP/it is/VBZ/is this/DT/this way/NN/way /,/, let/VB/let us/PRP/us take/VB/take the/DT/the horizontal/JJ/horizontal edge/NNP/edge. again/RB/again branch/NN/branch and/CC/and bound/NN/bound will/MD/will evaluate/VB/evaluate /,/, what/WDT/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of this/DT/this partial/JJ/partial tour/NN/tour that/WDT/that we/PRP/we have/VBP/have constructed/NNP/constructed. what/WP/what is/VBZ/is the/DT/the cost/NN/cost over/IN/over here/RB/here /,/, the/DT/the cost/NN/cost of/IN/of this/DT/this partial/JJ/partial tour/NN/tour is10/NNP/is10 /,/, because/IN/because this/DT/this horizontal/JJ/horizontal edge/NN/edge has/VBZ/has cost/VBN/cost 10/CD/10. again/RB/again /,/, without/IN/without exploring/NN/exploring things/NNS/things below/IN/below this/DT/this vertex/NN/vertex /,/, we/PRP/we can/MD/can safely/RB/safely conclude/VB/conclude that/IN/that this/DT/this is/VBZ/is large/JJ/large enough/RB/enough /,/, that/IN/that we/PRP/we do/VBP/do not/RB/not need/VB/need to/TO/to explore/VB/explore anything/NN/anything underneath/NN/underneath it/NNP/it. because/IN/because whatever/JJR/whatever comes/NNS/comes underneath/NN/underneath is/VBZ/is /,/, is/VBZ/is going/VBG/going to/TO/to be/VB/be obtained/VBN/obtained by/IN/by extending/NN/extending this/DT/this tour/NN/tour /,/, which/WDT/which already/RB/already has/VBZ/has cost/VBN/cost 10/CD/10. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can say/VB/say forget/NN/forget it/PRP/it /,/, the/DT/the cost/NN/cost of/IN/of anything/NN/anything below/IN/below this/DT/this has/VBZ/has to/TO/to be/VB/be bigger/JJR/bigger than/IN/than at/IN/at least/JJS/least /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least 10/CD/10 /,/, but/CC/but we/PRP/we already/RB/already found/VBN/found that/IN/that tour/PRP$/tour of/IN/of cost/NN/cost 6/CD/6. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can return/VB/return back/RB/back over/IN/over here/RB/here and/CC/and then/RB/then we/PRP/we can/MD/can take/VB/take the/DT/the next/JJ/next stage/NN/stage and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, in/IN/in any/DT/any case/NN/case in/IN/in backtrack/NN/backtrack search/NN/search we/PRP/we would/MD/would have/VB/have explored/VBN/explored everything/NN/everything underneath/NN/underneath this/DT/this /,/, in/IN/in backtrack/NN/backtrack search/NN/search we/PRP/we would/MD/would have/VB/have also/RB/also explored/VBN/explored everything/NN/everything underneath/NN/underneath this/NNP/this. in/IN/in branch/NN/branch and/CC/and bound/NN/bound /,/, we/PRP/we come/VBP/come to/TO/to this/DT/this vertex/NN/vertex and/CC/and we/PRP/we know/VBP/know we/PRP/we do/VBP/do not/RB/not need/VB/need to/TO/to do/VB/do this/DT/this work/NNP/work. also/RB/also we/PRP/we come/VBP/come to/TO/to this/DT/this vertex/NN/vertex and/CC/and we/PRP/we do/VBP/do not/RB/not need/VB/need to/TO/to do/VB/do this/DT/this work/NNP/work. and/CC/and therefore/RB/therefore /,/, we/PRP/we have/VBP/have saved/VBN/saved on/IN/on the/DT/the total/JJ/total amount/NN/amount of/IN/of work/NN/work that/WDT/that we/PRP/we do/VBP/do. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just summarize/VBP/summarize this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 16/CD/16 /CD/) so/RB/so /,/, let/VB/let me/PRP/me just/RB/just write/VBP/write this/DT/this as/IN/as a/DT/a comparison/NN/comparison of/IN/of backtrack/NN/backtrack and/CC/and branch/NN/branch and/CC/and bound/NNP/bound. so/RB/so /,/, this/DT/this is/VBZ/is backtrack/RP/backtrack and/CC/and this/DT/this is/VBZ/is branch/NN/branch and/CC/and bound/NNP/bound. so/RB/so /,/, branch/NN/branch and/CC/and bound/NN/bound backtrack/NN/backtrack is/VBZ/is a/DT/a general/JJ/general method/NN/method /,/, branch/NN/branch and/CC/and bound/NN/bound needs/VBZ/needs suitable/JJ/suitable cost/NN/cost function/NNP/function. and/CC/and there/EX/there might/MD/might be/VB/be some/DT/some amount/NN/amount of/IN/of cleverness/NN/cleverness that/IN/that might/MD/might be/VB/be needed/VBN/needed /,/, in/IN/in defining/NN/defining this/DT/this cost/NN/cost function/NNP/function. this/DT/this may/MD/may do/VB/do more/RBR/more work/VB/work /,/, because/IN/because more/JJR/more nodes/NNS/nodes of/IN/of the/DT/the tree/NN/tree are/VBP/are visited/NNP/visited. in/IN/in this/DT/this /,/, there/EX/there maybe/RB/maybe pruning/VBG/pruning and/CC/and there/EX/there may/MD/may be/VB/be fewer/JJR/fewer notes/NNS/notes of/IN/of the/DT/the tree/NN/tree /,/, which/WDT/which might/MD/might get/VB/get explored/VBN/explored in/IN/in this/NNP/this. but/CC/but there/EX/there is/VBZ/is this/DT/this small/JJ/small overhead/NN/overhead of/IN/of evaluating/VBG/evaluating cost/NN/cost at/IN/at every/DT/every node/NNP/node. in/IN/in general/JJ/general branch/NN/branch and/CC/and bound/NN/bound /,/, if/IN/if you/PRP/you have/VBP/have reasonable/JJ/reasonable cost/NN/cost function/NN/function will/MD/will work/VB/work substantially/RB/substantially better/RBR/better than/IN/than backtrack/NNP/backtrack. and/CC/and i/PRP/i might/MD/might go/VB/go as/RB/as far/RB/far as/IN/as saying/VBG/saying /,/, that/IN/that whenever/WRB/whenever you/PRP/you can/MD/can find/VB/find a/DT/a reasonable/JJ/reasonable cost/NN/cost function/NN/function /,/, which/WDT/which has/VBZ/has the/DT/the property/NN/property that/IN/that i/PRP/i just/RB/just mention/NNP/mention. you/PRP/you would/MD/would invariably/RB/invariably use/VB/use it/PRP/it /,/, because/IN/because the/DT/the gain/NN/gain from/IN/from the/DT/the pruning/NN/pruning that/IN/that you/PRP/you get/VBP/get /,/, will/MD/will typically/RB/typically be/VB/be much/RB/much more/RBR/more than/IN/than the/DT/the over/NN/over head/NN/head of/IN/of maintaining/VBG/maintaining /,/, the/DT/the cost/NN/cost function/NN/function is/VBZ/is concerned/NNP/concerned. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take one/CD/one more/JJR/more example/NN/example /,/, before/IN/before we/PRP/we go/VBP/go on/IN/on to/TO/to something/NN/something else/NNP/else. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 26/CD/26 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at branch/NN/branch and/CC/and bound/NN/bound /,/, but/CC/but we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at branch/NN/branch and/CC/and bound/NN/bound this/DT/this time/NN/time /,/, for/IN/for the/DT/the knapsack/NN/knapsack problem/NNP/problem. we/PRP/we introduce/VBP/introduce this/DT/this problem/NN/problem last/JJ/last time/NN/time /,/, but/CC/but let/VB/let me/PRP/me defined/VBD/defined it/PRP/it again/NNP/again. so/RB/so /,/, the/DT/the input/NN/input r/NN/r is/VBZ/is the/DT/the vector/NN/vector is/VBZ/is r/NN/r two/CD/two vectors/NNS/vectors /,/, say/VBP/say v/NN/v 1/CD/1 2/CD/2 then/RB/then v/NN/v n/NNP/n. so/RB/so /,/, we/PRP/we have/VBP/have been/VBN/been given/VBN/given n/NN/n numbers/NNS/numbers /,/, vi/VBP/vi represents/NNS/represents the/DT/the value/NN/value of/IN/of the/DT/the ith/NN/ith object/NNP/object. and/CC/and we/PRP/we are/VBP/are also/RB/also given/VBN/given numbers/NNS/numbers w/VBP/w 1/CD/1 w/NN/w 2/CD/2 till/NN/till w/NN/w n/NN/n where/WRB/where /,/, wi/VBP/wi represents/NNS/represents the/DT/the width/NN/width of/IN/of the/DT/the ith/NN/ith object/NNP/object. and/CC/and we/PRP/we are/VBP/are given/VBN/given one/CD/one more/RBR/more input/NN/input /,/, which/WDT/which i/PRP/i will/MD/will call/VB/call c/NN/c /,/, which/WDT/which is/VBZ/is the/DT/the capacity/NNP/capacity. so/RB/so /,/, we/PRP/we have/VBP/have been/VBN/been given/VBN/given think/NN/think of/IN/of it/PRP/it /,/, as/IN/as in/IN/in this/DT/this manner/NNP/manner. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a back/RB/back of/IN/of capacity/NN/capacity c/NN/c where/WRB/where /,/, c/JJ/c is/VBZ/is also/RB/also measured/VBN/measured as/IN/as a/DT/a weight/NNP/weight. so/RB/so /,/, say/VB/say we/PRP/we have/VBP/have been/VBN/been given/VBN/given a/DT/a bag/NN/bag /,/, which/WDT/which can/MD/can carry/VB/carry at/IN/at most/JJS/most 50/CD/50 kg/NNP/kg. in/IN/in front/NN/front of/IN/of us/PRP/us r/VBP/r n/NN/n object/NN/object /,/, we/PRP/we know/VBP/know the/DT/the weight/NN/weight of/IN/of each/DT/each object/NN/object as/IN/as well/RB/well as/IN/as we/PRP/we know/VBP/know the/DT/the value/NN/value of/IN/of each/DT/each object/NNP/object. our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to select/VB/select objects/NNS/objects /,/, such/JJ/such that/IN/that we/PRP/we do/VBP/do not/RB/not overflow/VB/overflow our/PRP$/our bag/NNP/bag. so/RB/so /,/, we/PRP/we do/VBP/do not/RB/not put/VB/put too/RB/too much/RB/much weight/RB/weight in/IN/in our/PRP$/our bag/NN/bag /,/, which/WDT/which might/MD/might break/VB/break it/NNP/it. but/CC/but /,/, subject/JJ/subject to/TO/to this/DT/this constraint/NN/constraint we/PRP/we should/MD/should put/VB/put in/IN/in as/IN/as much/JJ/much value/NN/value as/IN/as possible/JJ/possible /,/, that/IN/that is/VBZ/is the/DT/the goal/NNP/goal. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to explain/VB/explain how/WRB/how they/PRP/they will/MD/will do/VB/do branch/NN/branch and/CC/and bound/NN/bound /,/, how/WRB/how we/PRP/we can/MD/can implement/VB/implement the/DT/the branch/NN/branch and/CC/and boundary/JJ/boundary heuristics/NNS/heuristics for/IN/for this/NNP/this. but/CC/but before/IN/before that/IN/that i/PRP/i would/MD/would like/VB/like to/TO/to start/VB/start with/IN/with the/DT/the backtrack/NN/backtrack search/NN/search /,/, how/WRB/how backtrack/NN/backtrack search/NN/search will/MD/will work/VB/work on/IN/on this/NNP/this. and/CC/and like/IN/like the/DT/the last/JJ/last problem/NN/problem where/WRB/where /,/, there/EX/there was/VBD/was a/DT/a natural/JJ/natural cost/NN/cost /,/, the/DT/the natural/JJ/natural objective/NN/objective function/NN/function over/IN/over here/RB/here is/VBZ/is a/DT/a different/JJ/different function/NNP/function. so/RB/so /,/, the/DT/the natural/JJ/natural function/NN/function over/IN/over here/RB/here is/VBZ/is a/DT/a benefit/NN/benefit function/NNP/function. so/RB/so /,/, our/PRP$/our goal/NN/goal is/VBZ/is naturally/RB/naturally expressed/VBN/expressed as/IN/as maximize/NN/maximize total/NN/total value/NNP/value. so/RB/so /,/, this/DT/this is/VBZ/is ;/:/; however/RB/however /,/, object/VB/object ;/:/; however/RB/however /,/, object/VB/object is/VBZ/is naturally/RB/naturally expressed/VBN/expressed we/PRP/we want/VBP/want to/TO/to pick/VB/pick up/RP/up objects/NNS/objects /,/, such/JJ/such that/IN/that we/PRP/we get/VBP/get maximum/NN/maximum value/NN/value /,/, subject/JJ/subject to/TO/to the/DT/the constraints/NNS/constraints that/WDT/that our/PRP$/our weight/NN/weight /,/, the/DT/the total/JJ/total weight/NN/weight that/WDT/that we/PRP/we pick/VBP/pick up/RP/up is/VBZ/is at/IN/at most/JJS/most c/NNP/c. so/RB/so /,/, how/WRB/how will/MD/will backtrack/VB/backtrack search/NN/search work/NN/work on/IN/on this/DT/this /,/, well/RB/well we/PRP/we need/VBP/need to/TO/to define/VB/define the/DT/the nation/NN/nation of/IN/of /,/, we/PRP/we need/VBP/need to/TO/to develop/VB/develop this/DT/this idea/NN/idea that/IN/that when/WRB/when we/PRP/we construct/VBP/construct solutions/NNS/solutions /,/, candidate/VBP/candidate solutions/NNS/solutions for/IN/for this/NNP/this. we/PRP/we have/VBP/have to/TO/to /,/, can/MD/can we/PRP/we do/VBP/do that/IN/that as/IN/as step/NN/step by/IN/by step/NN/step process/NN/process in/IN/in which/WDT/which we/PRP/we start/VBP/start of/IN/of within/IN/within empty/JJ/empty candidate/NN/candidate object/NN/object and/CC/and we/PRP/we extended/VBD/extended little/JJ/little by/IN/by little/NNP/little. so/RB/so /,/, that/IN/that eventually/RB/eventually we/PRP/we have/VBP/have a/DT/a complete/JJ/complete solution/NN/solution /,/, so/RB/so our/PRP$/our nation/NNP/nation. so/RB/so /,/, what/WDT/what we/PRP/we are/VBP/are constructing/VBG/constructing over/IN/over here/RB/here is/VBZ/is a/DT/a selection/NN/selection /,/, selection/NN/selection of/IN/of objects/NNS/objects /,/, which/WDT/which is/VBZ/is essentially/RB/essentially a/DT/a subset/NNP/subset. so/RB/so /,/, clearly/RB/clearly we/PRP/we should/MD/should think/VB/think of/IN/of this/DT/this as/IN/as /,/, we/PRP/we start/VBP/start of/IN/of by/IN/by looking/VBG/looking at/IN/at the/DT/the empty/NN/empty subset/NNP/subset. then/RB/then the/DT/the first/JJ/first decision/NN/decision point/NN/point that/WDT/that we/PRP/we take/VBP/take and/CC/and that/IN/that point/NN/point we/PRP/we need/VBP/need to/TO/to /,/, we/PRP/we simply/RB/simply decide/VBP/decide /,/, do/VBP/do we/PRP/we take/VB/take the/DT/the first/JJ/first object/NN/object or/CC/or do/VBP/do we/PRP/we not/RB/not take/VB/take the/DT/the first/JJ/first object/NNP/object. let/NN/let us/PRP/us make/VBP/make a/DT/a firm/NN/firm decision/NNP/decision. so/RB/so /,/, either/DT/either we/PRP/we take/VBP/take the/DT/the first/JJ/first object/NN/object or/CC/or we/PRP/we reject/VBP/reject the/DT/the first/JJ/first object/NNP/object. so/RB/so /,/, say/VB/say let/NN/let us/PRP/us say/VBP/say we/PRP/we decide/VBP/decide to/TO/to take/VB/take the/DT/the first/JJ/first object/NN/object /,/, then/RB/then the/DT/the subset/NN/subset that/IN/that we/PRP/we have/VBP/have selected/VBN/selected so/RB/so far/RB/far is/VBZ/is consist/VBN/consist of/IN/of 1/CD/1 and/CC/and the/DT/the subset/NN/subset that/IN/that we/PRP/we have/VBP/have not/RB/not selected/VBN/selected so/RB/so far/RB/far consist/VBP/consist of/IN/of 2/CD/2 through/IN/through n/NNP/n. so/RB/so /,/, let/VB/let me/PRP/me here/RB/here there/RB/there is/VBZ/is an/DT/an additional/JJ/additional number/NN/number /,/, which/WDT/which is/VBZ/is 1/CD/1 to/TO/to n/NNP/n. so/RB/so /,/, the/DT/the pointers/NNS/pointers that/WDT/that our/PRP$/our search/NN/search let/NN/let me/PRP/me just/RB/just write/VBP/write this/DT/this separate/JJ/separate /,/, this/DT/this is/VBZ/is beginning/VBG/beginning fill/NN/fill up/RP/up to/TO/to small/NNP/small. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 28/CD/28 /CD/) so/RB/so /,/, initially/RB/initially our/PRP$/our search/NN/search can/MD/can be/VB/be characterized/VBN/characterized by/IN/by writing/NN/writing down/IN/down /,/, what/WP/what objects/NNS/objects we/PRP/we have/VBP/have selected/VBN/selected and/CC/and what/WP/what are/VBP/are the/DT/the objects/NNS/objects /,/, which/WDT/which are/VBP/are yet/RB/yet to/TO/to be/VB/be selected/NNP/selected. so/RB/so /,/, initially/RB/initially we/PRP/we have/VBP/have selected/VBN/selected no/DT/no object/NN/object what/WP/what so/RB/so ever/NNP/ever. this/DT/this is/VBZ/is the/DT/the set/NN/set of/IN/of object/NN/object /,/, about/IN/about which/WDT/which we/PRP/we have/VBP/have not/RB/not made/VBN/made a/DT/a decision/NNP/decision. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the starting/VBG/starting point/NN/point /,/, now/RB/now the/DT/the idea/NN/idea is/VBZ/is that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to make/VB/make decisions/NNS/decisions about/IN/about objects/NNP/objects. we/PRP/we will/MD/will either/VB/either decide/VB/decide to/TO/to take/VB/take an/DT/an object/NN/object or/CC/or either/DT/either will/MD/will reject/VB/reject an/DT/an object/NNP/object. in/IN/in the/DT/the first/JJ/first decision/NN/decision point/NN/point /,/, we/PRP/we will/MD/will make/VB/make the/DT/the decision/NN/decision about/IN/about the/DT/the first/JJ/first object/NNP/object. what/WP/what could/MD/could the/DT/the decision/NN/decision be/VB/be /,/, well/RB/well there/RB/there are/VBP/are into/IN/into two/CD/two choices/NNS/choices /,/, we/PRP/we will/MD/will either/VB/either pick/NN/pick that/WDT/that object/NN/object or/CC/or not/RB/not pick/VB/pick that/IN/that object/NNP/object. so/RB/so /,/, if/IN/if we/PRP/we decide/VBP/decide to/TO/to not/RB/not pick/VB/pick that/IN/that object/NN/object we/PRP/we will/MD/will get/VB/get this/DT/this state/NNP/state. so/RB/so /,/, we/PRP/we will/MD/will not/RB/not have/VB/have picked/VBN/picked any/DT/any object/NN/object whatsoever/NNP/whatsoever. but/CC/but the/DT/the set/NN/set of/IN/of objects/NNS/objects about/IN/about which/WDT/which we/PRP/we have/VBP/have to/TO/to yet/RB/yet to/TO/to make/VB/make a/DT/a decision/NN/decision or/CC/or going/VBG/going to/TO/to be/VB/be 2/CD/2 to/TO/to n/VB/n this/DT/this time/NNP/time. so/RB/so /,/, here/RB/here we/PRP/we have/VBP/have said/VBN/said that/IN/that we/PRP/we are/VBP/are definitely/RB/definitely /,/, not/RB/not interested/JJ/interested in/IN/in the/DT/the first/JJ/first object/NNP/object. why/WRB/why are/VBP/are we/PRP/we not/RB/not interested/JJ/interested /,/, well/RB/well there/RB/there is/VBZ/is no/DT/no real/JJ/real reason/NN/reason for/IN/for it/PRP/it /,/, this/DT/this is/VBZ/is just/RB/just one/CD/one of/IN/of the/DT/the possibilities/NNS/possibilities that/WDT/that we/PRP/we are/VBP/are considering/NNP/considering. remember/NN/remember the/DT/the back/NN/back track/NN/track search/NN/search involves/VBZ/involves /,/, exploring/VBG/exploring all/DT/all possible/JJ/possible decisions/NNP/decisions. so/RB/so /,/, this/DT/this is/VBZ/is just/RB/just an/DT/an exploration/NN/exploration of/IN/of this/DT/this possibility/NN/possibility in/IN/in which/WDT/which /,/, we/PRP/we do/VBP/do not/RB/not take/VB/take the/DT/the first/JJ/first object/NN/object /,/, the/DT/the other/JJ/other possibility/NN/possibility is/VBZ/is that/IN/that we/PRP/we in/IN/in fact/NN/fact /,/, include/VBP/include the/DT/the first/JJ/first object/NNP/object. so/RB/so /,/, here/RB/here will/MD/will have/VB/have 1/CD/1 and/CC/and those/DT/those objects/NNS/objects about/IN/about which/WDT/which we/PRP/we have/VBP/have yet/RB/yet to/TO/to make/VB/make a/DT/a decision/NN/decision /,/, will/MD/will appear/VB/appear over/IN/over here/NNP/here. of/IN/of course/NN/course /,/, we/PRP/we will/MD/will not/RB/not be/VB/be building/VBG/building this/DT/this set/NN/set immediately/RB/immediately /,/, we/PRP/we will/MD/will first/RB/first just/RB/just make/VB/make a/DT/a decision/NN/decision about/IN/about this/DT/this and/CC/and will/MD/will come/VB/come to/TO/to this/DT/this point/NNP/point. then/RB/then what/WP/what will/MD/will be/VB/be do/VB/do /,/, then/RB/then will/MD/will we/VB/we will/MD/will make/VB/make a/DT/a decision/NN/decision about/IN/about the/DT/the second/JJ/second object/NNP/object. again/RB/again there/RB/there are/VBP/are two/CD/two possibilities/NNS/possibilities and/CC/and therefore/RB/therefore /,/, we/PRP/we could/MD/could get/VB/get something/NN/something like/IN/like this/DT/this /,/, again/RB/again may/MD/may be/VB/be we/PRP/we decide/VBP/decide no/DT/no /,/, we/PRP/we are/VBP/are not/RB/not interested/JJ/interested in/IN/in the/DT/the second/JJ/second object/NN/object either/NNP/either. so/RB/so /,/, we/PRP/we will/MD/will get/VB/get 3/CD/3 to/TO/to n/VB/n over/IN/over here/RB/here or/CC/or we/PRP/we could/MD/could decide/VB/decide that/IN/that we/PRP/we are/VBP/are /,/, in/IN/in fact/NN/fact interested/VBD/interested in/IN/in the/DT/the second/JJ/second object/NN/object this/DT/this time/NNP/time. so/RB/so /,/, we/PRP/we will/MD/will get/VB/get something/NN/something like/IN/like 3/CD/3 and/CC/and 3/CD/3 to/TO/to m/VB/m and/CC/and similarly/RB/similarly over/IN/over here/NNP/here. so/RB/so /,/, in/IN/in this/DT/this manner/NN/manner /,/, if/IN/if we/PRP/we proceed/VBP/proceed we/PRP/we will/MD/will get/VB/get to/TO/to two/CD/two to/TO/to the/DT/the leaves/NNS/leaves /,/, which/WDT/which will/MD/will correspond/VB/correspond to/TO/to all/DT/all possible/JJ/possible ways/NNS/ways of/IN/of taking/VBG/taking subsets/NNS/subsets of/IN/of n/NN/n objects/NNP/objects. and/CC/and then/RB/then at/IN/at that/DT/that point/NN/point /,/, we/PRP/we could/MD/could evaluate/VB/evaluate our/PRP$/our benefit/NN/benefit function/NN/function and/CC/and then/RB/then we/PRP/we would/MD/would have/VB/have to/TO/to keep/VB/keep track/NN/track up/IN/up of/IN/of the/DT/the best/JJS/best possible/JJ/possible benefit/NN/benefit function/NNP/function. at/IN/at the/DT/the best/JJS/best possible/JJ/possible completely/RB/completely generated/VBN/generated subset/NN/subset with/IN/with what/WP/what its/PRP$/its benefit/NN/benefit is/NNP/is. going/VBG/going back/RB/back to/TO/to our/PRP$/our definition/NN/definition ;/:/; however/RB/however /,/, we/PRP/we said/VBD/said that/IN/that in/IN/in order/NN/order to/TO/to apply/VB/apply a/DT/a branch/NN/branch and/CC/and bound/NN/bound /,/, we/PRP/we need/VBP/need to/TO/to write/VB/write down/RP/down a/DT/a proper/NN/proper cost/NN/cost function/NNP/function. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 54/CD/54 /CD/) /CD/) and/CC/and further/JJ/further more/RBR/more the/DT/the cost/NN/cost function/NN/function must/MD/must have/VB/have this/DT/this property/NN/property /,/, of/IN/of course/NN/course we/PRP/we could/MD/could do/VB/do the/DT/the same/JJ/same reasoning/NN/reasoning with/IN/with the/DT/the benefit/NN/benefit function/NN/function as/IN/as well/RB/well that/IN/that is/VBZ/is indeed/VBN/indeed possible/-NONE-/possible. but/CC/but i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take slightly/RB/slightly different/JJ/different rule/NN/rule /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to keep/VB/keep our/PRP$/our definition/NN/definition of/IN/of branch/NN/branch and/CC/and bound/NN/bound the/DT/the same/JJ/same /,/, that/IN/that is/VBZ/is we/PRP/we will/MD/will vary/VB/vary about/IN/about cost/NN/cost function/NN/function rather/RB/rather than/IN/than benefits/NNS/benefits function/NNP/function. and/CC/and now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to express/NN/express the/DT/the knapsack/NN/knapsack problem/NN/problem /,/, in/IN/in terms/NNS/terms of/IN/of a/DT/a benefit/NN/benefit functional/JJ/functional rather/RB/rather than/IN/than a/DT/a cost/NN/cost function/NNP/function. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 26/CD/26 /CD/) so/RB/so /,/, our/PRP$/our original/JJ/original function/NN/function is/VBZ/is maximize/NN/maximize value/NN/value of/IN/of selected/VBN/selected objects/NNS/objects is/VBZ/is there/RB/there a/DT/a natural/JJ/natural cost/NN/cost function/NN/function /,/, which/WDT/which we/PRP/we can/MD/can minimize/NNP/minimize. i/PRP/i could/MD/could simply/RB/simply do/VB/do the/DT/the negative/JJ/negative of/IN/of this/DT/this /,/, but/CC/but that/IN/that negative/JJ/negative is/VBZ/is not/RB/not really/RB/really very/RB/very interesting/JJ/interesting /,/, it/PRP/it does/VBZ/does not/RB/not really/RB/really give/VB/give us/PRP/us any/DT/any insight/NN/insight into/IN/into the/DT/the problem/NNP/problem. instead/RB/instead of/IN/of that/DT/that /,/, why/WRB/why not/RB/not ask/VB/ask for/IN/for minimizing/NN/minimizing the/DT/the value/NN/value of/IN/of rejected/VBN/rejected objects/NNP/objects. i/PRP/i claim/VBP/claim that/IN/that these/DT/these two/CD/two are/VBP/are identical/NNP/identical. so/RB/so /,/, if/IN/if you/PRP/you give/VBP/give you/PRP/you a/DT/a subset/NN/subset /,/, in/IN/in which/WDT/which the/DT/the value/NN/value of/IN/of the/DT/the selected/VBN/selected objects/NNS/objects is/VBZ/is as/RB/as large/JJ/large as/IN/as possible/JJ/possible /,/, i/PRP/i claim/VBP/claim that/IN/that the/DT/the value/NN/value of/IN/of the/DT/the rejected/VBN/rejected objects/NNS/objects must/MD/must also/RB/also be/VB/be as/IN/as small/JJ/small as/IN/as possible/NNP/possible. this/DT/this is/VBZ/is simply/RB/simply waste/JJ/waste of/IN/of the/DT/the observation/NN/observation that/IN/that the/DT/the total/JJ/total value/NN/value is/VBZ/is fixed/VBN/fixed and/CC/and therefore/RB/therefore /,/, if/IN/if you/PRP/you select/VBP/select large/JJ/large value/NN/value then/RB/then you/PRP/you are/VBP/are rejecting/VBG/rejecting the/DT/the small/JJ/small value/NNP/value. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the key/JJ/key to/TO/to applying/NN/applying branch/NN/branch and/CC/and bound/NN/bound to/TO/to this/DT/this problem/NNP/problem. so/RB/so /,/, now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to think/VB/think of/IN/of this/DT/this knapsack/NN/knapsack problem/NN/problem /,/, not/RB/not in/IN/in terms/NNS/terms of/IN/of maximizing/VBG/maximizing the/DT/the value/NN/value of/IN/of the/DT/the selected/VBN/selected objects/NNS/objects /,/, but/CC/but in/IN/in terms/NNS/terms of/IN/of minimizing/VBG/minimizing the/DT/the values/NNS/values of/IN/of rejected/VBN/rejected objects/NNP/objects. in/IN/in fact/NN/fact /,/, let/VB/let us/PRP/us take/VB/take a/DT/a numerical/JJ/numerical example/NN/example /,/, which/WDT/which will/MD/will make/VB/make this/DT/this idea/NN/idea completely/RB/completely clear/NNP/clear. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 13/CD/13 /CD/) so/RB/so /,/, our/PRP$/our numerical/JJ/numerical example/NN/example is/VBZ/is that/IN/that our/PRP$/our array/NN/array /,/, this/DT/this is/VBZ/is our/PRP$/our array/NN/array v/NN/v /,/, so/RB/so v/NN/v consists/NNS/consists of/IN/of value/NN/value 20/CD/20 3/CD/3 7/CD/7 and/CC/and 5/CD/5 let/NN/let us/PRP/us say/VBP/say and/CC/and w/NN/w consists/NNS/consists of/IN/of say/NN/say 5/CD/5 2/CD/2 4/CD/4 and/CC/and 1/CD/1. so/RB/so /,/, the/DT/the third/JJ/third object/NN/object has/VBZ/has value/NN/value 7/CD/7 and/CC/and weight/NN/weight 4/CD/4 and/CC/and let/VB/let us/PRP/us says/VBZ/says our/PRP$/our capacity/NN/capacity is/VBZ/is equal/JJ/equal to/TO/to 8/CD/8. what/WP/what will/MD/will be/VB/be the/DT/the branch/NN/branch and/CC/and bound/NN/bound tree/NN/tree for/IN/for this/DT/this looks/NNS/looks like/NNP/like. so/RB/so /,/, originally/RB/originally we/PRP/we will/MD/will start/VB/start with/IN/with no/DT/no selection/NNP/selection. so/RB/so /,/, the/DT/the selected/VBN/selected set/NN/set is/VBZ/is this/DT/this /,/, the/DT/the set/NN/set of/IN/of out/RP/out which/WDT/which we/PRP/we are/VBP/are to/TO/to make/VB/make a/DT/a decision/NN/decision consists/VBZ/consists of/IN/of all/DT/all four/CD/four objects/NNS/objects 1/CD/1 2/CD/2 3/CD/3 4/CD/4. then/RB/then we/PRP/we make/VBP/make a/DT/a decision/NN/decision about/IN/about the/DT/the first/JJ/first object/NNP/object. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say that/IN/that is/VBZ/is n/VBN/n says/VBZ/says that/IN/that the/DT/the first/JJ/first object/NN/object is/VBZ/is not/RB/not to/TO/to be/VB/be taken/NNP/taken. so/RB/so /,/, now/RB/now we/PRP/we still/RB/still have/VBP/have to/TO/to make/VB/make a/DT/a decision/NN/decision about/IN/about 2/CD/2 3/CD/3 4/CD/4 /,/, over/IN/over here/RB/here let/VB/let us/PRP/us say/VB/say we/PRP/we do/VBP/do make/NNP/make. in/IN/in fact/NN/fact /,/, let/VB/let me/PRP/me change/VB/change my/PRP$/my idea/NN/idea little/RB/little bit/NN/bit /,/, let/VB/let us/PRP/us say/VB/say here/RB/here we/PRP/we make/VBP/make the/DT/the decision/NN/decision that/IN/that the/DT/the first/JJ/first object/NN/object is/VBZ/is to/TO/to be/VB/be taken/NNP/taken. so/RB/so /,/, here/RB/here the/DT/the decision/NN/decision could/MD/could be/VB/be that/IN/that the/DT/the first/JJ/first object/NN/object is/VBZ/is not/RB/not taken/VBN/taken and/CC/and 2/CD/2 3/CD/3 4/CD/4 we/PRP/we have/VBP/have again/RB/again really/RB/really made/VBD/made up/RP/up our/PRP$/our mind/NN/mind yet/NNP/yet. so/RB/so /,/, if/IN/if we/PRP/we take/VBP/take the/DT/the first/JJ/first object/NN/object /,/, we/PRP/we will/MD/will have/VB/have used/VBN/used up/RP/up v/NN/v 5/CD/5 /,/, so/RB/so now/RB/now we/PRP/we need/VBP/need to/TO/to make/VB/make a/DT/a decision/NN/decision about/IN/about the/DT/the next/JJ/next object/NNP/object. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say all/PDT/all the/DT/the left/NN/left going/VBG/going paths/NNS/paths are/VBP/are the/DT/the once/RB/once in/IN/in which/WDT/which we/PRP/we are/VBP/are greedy/JJ/greedy /,/, we/PRP/we are/VBP/are keep/VB/keep taking/VBG/taking those/DT/those objects/NNP/objects. so/RB/so /,/, what/WDT/what would/MD/would happen/VB/happen over/IN/over here/RB/here /,/, so/RB/so we/PRP/we will/MD/will take/VB/take the/DT/the second/JJ/second object/NN/object as/IN/as well/NNP/well. so/RB/so /,/, our/PRP$/our bag/NN/bag would/MD/would contain/VB/contain or/CC/or our/PRP$/our knapsack/NN/knapsack would/MD/would contain/VB/contain both/DT/both 1/CD/1 and/CC/and 2/CD/2 and/CC/and we/PRP/we will/MD/will not/RB/not yet/VB/yet have/VBP/have made/VBN/made a/DT/a decision/NN/decision about/IN/about 3/CD/3 and/CC/and 4/CD/4. and/CC/and then/RB/then at/IN/at this/DT/this point/NN/point /,/, we/PRP/we could/MD/could either/VB/either decide/VB/decide to/TO/to take/VB/take third/JJ/third object/NN/object or/CC/or we/PRP/we could/MD/could check/VB/check the/DT/the constraints/NNS/constraints /,/, remember/NN/remember do/VB/do not/RB/not have/VB/have to/TO/to be/VB/be always/RB/always we/PRP/we checked/VBD/checked at/IN/at the/DT/the end/NN/end /,/, we/PRP/we could/MD/could make/VB/make the/DT/the check/NN/check earlier/JJR/earlier as/IN/as well/NNP/well. so/RB/so /,/, if/IN/if we/PRP/we decide/VBP/decide to/TO/to check/VB/check the/DT/the constraints/NNS/constraints earlier/JJR/earlier /,/, if/IN/if we/PRP/we have/VBP/have already/RB/already taken/VBN/taken the/DT/the first/JJ/first two/CD/two objects/NNS/objects then/RB/then taking/VBG/taking in/IN/in the/DT/the third/JJ/third object/NN/object would/MD/would make/VB/make the/DT/the weight/NN/weight be/VB/be 11/CD/11 /,/, which/WDT/which is/VBZ/is bigger/JJR/bigger than/IN/than 8/CD/8. and/CC/and therefore/RB/therefore /,/, there/EX/there is/VBZ/is no/DT/no question/NN/question of/IN/of taking/VBG/taking in/IN/in the/DT/the third/JJ/third object/NNP/object. so/RB/so /,/, we/PRP/we could/MD/could say/VB/say we/PRP/we could/MD/could definitely/RB/definitely go/VB/go down/RB/down to/TO/to 1/CD/1 2/CD/2 and/CC/and only/RB/only 4/CD/4 over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we have/VBP/have rejected/VBN/rejected object/JJ/object three/NNP/three. so/RB/so /,/, from/IN/from this/DT/this /,/, we/PRP/we will/MD/will go/VB/go down/RB/down to/TO/to leaf/VB/leaf which/WDT/which is/VBZ/is 1/CD/1 2/CD/2 and/CC/and 4/CD/4 /,/, this/DT/this is/VBZ/is an/DT/an acceptable/JJ/acceptable leaf/NN/leaf because/IN/because 1/CD/1 2/CD/2 and/CC/and 4/CD/4 are/VBP/are these/DT/these objects/NNS/objects which/WDT/which have/VBP/have a/DT/a weights/NNS/weights 5/CD/5 2/CD/2 and/CC/and 1/CD/1 /,/, which/WDT/which adapt/NN/adapt to/TO/to eight/CD/eight /,/, server/RB/server capacity/NN/capacity is/VBZ/is not/RB/not being/VBG/being violated/NNP/violated. and/CC/and at/IN/at this/DT/this point/NN/point /,/, i/PRP/i am/VBP/am putting/VBG/putting an/DT/an empty/NN/empty set/NN/set over/IN/over here/RB/here /,/, indicating/VBG/indicating that/IN/that all/DT/all our/PRP$/our decisions/NNS/decisions have/VBP/have been/VBN/been we/PRP/we made/VBD/made /,/, we/PRP/we have/VBP/have made/VBN/made decisions/NNS/decisions about/IN/about all/DT/all the/DT/the object/NN/object so/RB/so /,/, we/PRP/we have/VBP/have come/VBN/come to/TO/to leaf/VB/leaf and/CC/and we/PRP/we have/VBP/have found/VBN/found the/DT/the solution/NN/solution and/CC/and what/WP/what its/PRP$/its value/NN/value /,/, well/RB/well this/DT/this is/VBZ/is an/DT/an object/NN/object which/WDT/which we/PRP/we took/VBD/took /,/, this/DT/this is/VBZ/is an/DT/an object/NN/object that/IN/that we/PRP/we took/VBD/took and/CC/and this/DT/this is/VBZ/is an/DT/an object/NN/object that/IN/that we/PRP/we took/NNP/took. so/RB/so /,/, the/DT/the value/NN/value is/VBZ/is 20/CD/20 plus/RB/plus 3/CD/3 plus/NNS/plus 5/CD/5 /,/, which/WDT/which is/VBZ/is 28/CD/28. so/RB/so /,/, here/RB/here found/VBN/found a/DT/a leaf/NN/leaf /,/, we/PRP/we have/VBP/have found/VBN/found a/DT/a solution/NN/solution with/IN/with value/NN/value 28/CD/28. so/RB/so /,/, now/RB/now we/PRP/we can/MD/can go/VB/go back/RB/back and/CC/and we/PRP/we could/MD/could explore/VB/explore this/DT/this /,/, i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to focus/VB/focus your/PRP$/your attention/NN/attention on/IN/on what/WP/what happens/NNS/happens /,/, when/WRB/when the/DT/the search/NN/search reach/NN/reach us/PRP/us this/DT/this point/NN/point over/IN/over here/NNP/here. well/RB/well this/DT/this is/VBZ/is the/DT/the benefit/NN/benefit /,/, but/CC/but we/PRP/we let/VBP/let me/PRP/me just/RB/just remind/VBP/remind you/PRP/you that/IN/that we/PRP/we said/VBD/said that/IN/that we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to worry/VB/worry about/IN/about the/DT/the benefit/NN/benefit /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to worry/VB/worry about/IN/about the/DT/the cost/NNP/cost. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the cost/NN/cost over/IN/over here/NNP/here. remember/NN/remember that/WDT/that the/DT/the cost/NN/cost is/VBZ/is nothing/NN/nothing /,/, but/CC/but the/DT/the value/NN/value of/IN/of the/DT/the object/NN/object /,/, which/WDT/which were/VBD/were rejected/NNP/rejected. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the object/NN/object which/WDT/which is/VBZ/is rejected/VBN/rejected /,/, well/RB/well the/DT/the object/NN/object which/WDT/which was/VBD/was rejected/VBN/rejected is/VBZ/is the/DT/the third/JJ/third object/NN/object and/CC/and so/RB/so the/DT/the cost/NN/cost over/IN/over here/RB/here is/VBZ/is equal/JJ/equal to/TO/to 7/CD/7 /,/, this/DT/this is/VBZ/is the/DT/the benefit/NN/benefit /,/, which/WDT/which is/VBZ/is interesting/VBG/interesting of/IN/of course/NN/course /,/, because/IN/because in/IN/in the/DT/the end/NN/end we/PRP/we want/VBP/want to/TO/to report/VB/report the/DT/the benefit/NNP/benefit. but/CC/but the/DT/the cost/NN/cost of/IN/of this/DT/this solution/NN/solution is/VBZ/is 7/CD/7 /,/, in/IN/in the/DT/the 7/CD/7 that/WDT/that we/PRP/we defined/VBD/defined /,/, the/DT/the cost/NN/cost as/IN/as the/DT/the value/NN/value of/IN/of the/DT/the object/NN/object that/IN/that was/VBD/was rejected/NNP/rejected. so/RB/so /,/, if/IN/if we/PRP/we want/VBP/want to/TO/to execute/VB/execute branch/NN/branch and/CC/and bound/NN/bound on/IN/on this/DT/this /,/, what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/NNP/happen. we/PRP/we are/VBP/are going/VBG/going to/TO/to evaluate/VB/evaluate the/DT/the cost/NN/cost at/IN/at each/DT/each particular/JJ/particular point/NN/point /,/, in/IN/in this/DT/this whole/JJ/whole exploration/NNP/exploration. so/RB/so /,/, when/WRB/when we/PRP/we come/VBP/come to/TO/to this/DT/this point/NN/point /,/, we/PRP/we will/MD/will also/RB/also be/VB/be evaluating/VBG/evaluating the/DT/the cost/NNP/cost. so/RB/so /,/, now/RB/now i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to tell/VB/tell me/PRP/me /,/, what/WP/what the/DT/the cost/NN/cost of/IN/of this/DT/this partial/JJ/partial solution/NN/solution is/NNP/is. at/IN/at this/DT/this point/NN/point /,/, the/DT/the object/NN/object that/IN/that we/PRP/we have/VBP/have firmly/RB/firmly rejected/VBN/rejected is/VBZ/is the/DT/the first/JJ/first object/NN/object /,/, because/IN/because that/DT/that is/VBZ/is the/DT/the decision/NN/decision that/IN/that we/PRP/we made/VBD/made /,/, so/RB/so what/WP/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of this/NNP/this. so/RB/so /,/, the/DT/the cost/NN/cost of/IN/of this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the cost/NN/cost of/IN/of the/DT/the object/NN/object which/WDT/which we/PRP/we have/VBP/have definitely/RB/definitely rejected/VBN/rejected /,/, all/DT/all objects/NNS/objects which/WDT/which we/PRP/we have/VBP/have definitely/RB/definitely rejected/VBN/rejected /,/, so/RB/so far/NNP/far. we/PRP/we may/MD/may reject/VB/reject further/JJ/further objects/NNS/objects in/IN/in the/DT/the future/NN/future /,/, but/CC/but that/IN/that we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to cover/NNP/cover. so/RB/so /,/, the/DT/the cost/NN/cost of/IN/of the/DT/the object/NN/object that/IN/that we/PRP/we have/VBP/have definitely/RB/definitely rejected/VBN/rejected /,/, so/RB/so far/RB/far is/VBZ/is 20/CD/20. so/RB/so /,/, now/RB/now we/PRP/we can/MD/can conclude/VB/conclude that/IN/that no/DT/no further/JJ/further exploration/NN/exploration underneath/NN/underneath this/DT/this /,/, are/VBP/are really/RB/really interesting/NNP/interesting. because/IN/because as/IN/as we/PRP/we go/VBP/go down/RB/down /,/, we/PRP/we will/MD/will only/RB/only reject/VB/reject more/RBR/more objects/NNP/objects. we/PRP/we will/MD/will include/VB/include more/RBR/more objects/NNS/objects as/IN/as well/RB/well /,/, but/CC/but remember/NN/remember that/IN/that right/NN/right now/RB/now we/PRP/we are/VBP/are focusing/VBG/focusing on/IN/on the/DT/the object/NN/object which/WDT/which will/MD/will reject/NNP/reject. so/RB/so /,/, in/IN/in that/DT/that sense/NN/sense if/IN/if we/PRP/we think/VBP/think of/IN/of the/DT/the cost/NN/cost /,/, the/DT/the cost/NN/cost of/IN/of this/DT/this is/VBZ/is only/RB/only going/VBG/going to/TO/to increase/VB/increase if/IN/if at/IN/at all/DT/all /,/, it/PRP/it is/VBZ/is not/RB/not going/VBG/going to/TO/to decrease/NNP/decrease. and/CC/and therefore/RB/therefore /,/, whatever/RB/whatever leaf/NN/leaf we/PRP/we reach/VBP/reach underneath/NN/underneath this/DT/this is/VBZ/is going/VBG/going to/TO/to have/VB/have cost/NN/cost at/IN/at least/JJS/least 20/CD/20. if/IN/if it/PRP/it cost/VBP/cost at/IN/at least/JJS/least 20/CD/20 /,/, then/RB/then what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum benefit/NN/benefit that/WDT/that we/PRP/we can/MD/can ;/:/; however/RB/however /,/, here/RB/here well/RB/well the/DT/the total/JJ/total value/NN/value is/VBZ/is going/VBG/going to/TO/to be/VB/be 20/CD/20 plus/CC/plus 3/CD/3 plus/NNS/plus 7/CD/7 plus/NNS/plus 5/CD/5 which/WDT/which is/VBZ/is 35/CD/35. so/RB/so /,/, the/DT/the total/JJ/total benefit/NN/benefit /,/, the/DT/the total/JJ/total value/NN/value is/VBZ/is 35/CD/35 /,/, we/PRP/we have/VBP/have already/RB/already rejected/VBN/rejected an/DT/an object/NN/object of/IN/of cost/NN/cost 20/CD/20. so/RB/so /,/, when/WRB/when we/PRP/we come/VBP/come down/RB/down to/TO/to over/IN/over here/RB/here /,/, our/PRP$/our benefit/NN/benefit is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at most/JJS/most 15/CD/15. the/DT/the interesting/JJ/interesting thing/NN/thing is/VBZ/is that/IN/that we/PRP/we know/VBP/know that/IN/that even/RB/even without/IN/without seeing/VBG/seeing all/DT/all possible/JJ/possible subsets/NNP/subsets. and/CC/and that/IN/that is/VBZ/is what/WP/what makes/VBZ/makes the/DT/the method/NN/method powerful/NNP/powerful. so/RB/so /,/, at/IN/at this/DT/this point/NN/point itself/PRP/itself /,/, we/PRP/we can/MD/can reject/VB/reject the/DT/the entire/JJ/entire sub/NN/sub tree/NN/tree and/CC/and we/PRP/we can/MD/can say/VB/say forgive/JJ/forgive it/PRP/it /,/, go/VBP/go back/RB/back and/CC/and this/DT/this has/VBZ/has to/TO/to be/VB/be the/DT/the best/JJS/best cost/NN/cost subset/NNP/subset. whereas/IN/whereas /,/, backtrack/NN/backtrack search/NN/search could/MD/could /,/, in/IN/in fact/NN/fact has/VBZ/has search/NN/search everything/NNP/everything. because/IN/because it/PRP/it is/VBZ/is not/RB/not keeping/VBG/keeping track/NN/track of/IN/of what/WP/what is/VBZ/is the/DT/the best/JJS/best and/CC/and it/PRP/it is/VBZ/is not/RB/not putting/VBG/putting /,/, the/DT/the bound/NN/bound on/IN/on how/WRB/how much/JJ/much /,/, how/WRB/how good/JJ/good as/IN/as a/DT/a solution/NN/solution we/PRP/we can/MD/can get/NNP/get. so/RB/so /,/, again/RB/again even/RB/even in/IN/in this/DT/this case/NN/case branch/NN/branch and/CC/and bound/NN/bound will/MD/will work/VB/work quite/RB/quite well/NNP/well. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 41/CD/41 /CD/) i/PRP/i want/VBP/want to/TO/to give/VB/give an/DT/an exercise/NNP/exercise. so/RB/so /,/, basically/RB/basically if/IN/if you/PRP/you want/VBP/want to/TO/to use/VB/use the/DT/the branch/NN/branch and/CC/and bound/NN/bound heuristic/JJ/heuristic /,/, you/PRP/you need/VBP/need to/TO/to come/VB/come up/RP/up with/IN/with good/JJ/good ways/NNS/ways of/IN/of constructing/VBG/constructing these/DT/these cost/NN/cost functions/NNP/functions. so/RB/so /,/, we/PRP/we already/RB/already saw/VBD/saw two/CD/two problems/NNS/problems over/IN/over which/WDT/which /,/, we/PRP/we constructed/VBD/constructed cost/NN/cost functions/NNS/functions in/IN/in one/CD/one case/NN/case the/DT/the cost/NN/cost function/NN/function was/VBD/was fairly/RB/fairly natural/NNP/natural. in/IN/in another/DT/another case/NN/case we/PRP/we have/VBP/have to/TO/to do/VB/do a/DT/a little/RB/little bit/NN/bit /,/, we/PRP/we have/VBP/have to/TO/to be/VB/be slightly/RB/slightly cleaver/JJR/cleaver in/IN/in order/NN/order to/TO/to construct/VB/construct the/DT/the cost/NN/cost function/NNP/function. so/RB/so /,/, let/VB/let me/PRP/me give/VB/give you/PRP/you a/DT/a variation/NN/variation of/IN/of the/DT/the tsp/NN/tsp problem/NNP/problem. say/VBP/say let/NN/let us/PRP/us call/VBP/call this/DT/this the/DT/the geographical/JJ/geographical tsp/NN/tsp problem/NN/problem /,/, the/DT/the euclidean/JJ/euclidean tsp/NN/tsp problem/NNP/problem. in/IN/in the/DT/the euclidean/JJ/euclidean tsp/NN/tsp problem/NN/problem /,/, what/WP/what we/PRP/we know/VBP/know well/RB/well think/VBP/think of/IN/of this/DT/this as/IN/as a/DT/a euclidean/JJ/euclidean or/CC/or the/DT/the geographical/JJ/geographical tsp/NN/tsp problem/NN/problem /,/, which/WDT/which means/VBZ/means that/DT/that /,/, in/IN/in fact/NN/fact we/PRP/we think/VBP/think of/IN/of vertices/NNS/vertices as/IN/as towns/NNS/towns and/CC/and edges/NNS/edges as/IN/as roads/NNS/roads correcting/VBG/correcting them/NNP/them. so/RB/so /,/, suppose/DT/suppose in/IN/in addition/NN/addition to/TO/to knowing/VBG/knowing the/DT/the road/NN/road distances/NNS/distances /,/, we/PRP/we also/RB/also know/VBP/know the/DT/the latitudes/NNS/latitudes and/CC/and longitudes/NNS/longitudes or/CC/or the/DT/the x/NN/x y/NN/y coordinates/VBZ/coordinates of/IN/of the/DT/the town/NN/town is/VBZ/is themselves/NNP/themselves. so/RB/so /,/, then/RB/then there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of the/DT/the shortest/JJS/shortest distance/NN/distance or/CC/or the/DT/the straight/JJ/straight line/NN/line distance/NN/distance or/CC/or which/WDT/which is/VBZ/is often/RB/often called/VBN/called the/DT/the distance/NN/distance as/IN/as the/DT/the crow/NN/crow flies/NNP/flies. so/RB/so /,/, this/DT/this distance/NN/distance is/VBZ/is definitely/RB/definitely going/VBG/going to/TO/to be/VB/be a/DT/a lower/JJR/lower bound/NN/bound /,/, on/IN/on the/DT/the length/NN/length of/IN/of any/DT/any road/NN/road correcting/VBG/correcting /,/, because/IN/because a/DT/a road/NN/road code/NN/code wind/NN/wind does/VBZ/does much/NNP/much. if/IN/if it/PRP/it goes/VBZ/goes through/IN/through other/JJ/other towns/NNS/towns it/PRP/it might/MD/might even/RB/even reverse/VB/reverse /,/, but/CC/but the/DT/the road/NN/road could/MD/could wind/VB/wind and/CC/and therefore/RB/therefore /,/, there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be this/DT/this direct/JJ/direct straight/NN/straight line/NN/line distance/NN/distance which/WDT/which is/VBZ/is going/VBG/going to/TO/to prove/VB/prove a/DT/a lower/JJR/lower bound/NN/bound /,/, which/WDT/which is/VBZ/is going/VBG/going to/TO/to give/VB/give a/DT/a lower/JJR/lower bound/NN/bound on/IN/on the/DT/the distance/NN/distance possible/NNP/possible. so/RB/so /,/, in/IN/in addition/NN/addition to/TO/to the/DT/the input/NN/input that/IN/that you/PRP/you already/RB/already have/VBP/have /,/, so/RB/so the/DT/the input/NN/input in/IN/in this/DT/this case/NN/case is/VBZ/is this/DT/this distance/NN/distance matrix/NNP/matrix. plus/CC/plus all/DT/all possible/JJ/possible straight/JJ/straight line/NN/line distances/NNP/distances. so/RB/so /,/, using/VBG/using this/DT/this i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to construct/VB/construct a/DT/a cost/NN/cost function/NN/function /,/, which/WDT/which will/MD/will be/VB/be better/JJR/better than/IN/than the/DT/the cost/NN/cost function/NN/function which/WDT/which we/PRP/we have/VBP/have constructed/VBN/constructed earlier/NNP/earlier. what/WP/what does/VBZ/does better/JJR/better mean/JJ/mean /,/, that/IN/that if/IN/if i/PRP/i give/VBP/give it/PRP/it partially/RB/partially constructed/VBD/constructed tour/PRP$/tour /,/, it/PRP/it should/MD/should give/VB/give me/PRP/me a/DT/a value/NN/value which/WDT/which is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the value/NN/value which/WDT/which i/PRP/i had/VBD/had earlier/NNP/earlier. now/RB/now /,/, why/WRB/why could/MD/could that/DT/that mean/NNP/mean. so/RB/so /,/, that/IN/that would/MD/would have/VB/have to/TO/to be/VB/be because/IN/because /,/, it/PRP/it is/VBZ/is somehow/WRB/somehow has/VBZ/has to/TO/to take/VB/take into/IN/into account/NN/account that/IN/that i/PRP/i have/VBP/have committed/VBN/committed to/TO/to using/VBG/using these/DT/these edges/NNP/edges. but/CC/but /,/, i/PRP/i still/RB/still have/VBP/have to/TO/to visit/VB/visit all/DT/all these/DT/these towns/NNS/towns and/CC/and if/IN/if i/PRP/i want/VBP/want to/TO/to visit/VB/visit these/DT/these towns/NNS/towns /,/, i/PRP/i would/MD/would at/IN/at least/JJS/least have/VBP/have to/TO/to have/VB/have some/DT/some amount/NN/amount of/IN/of distance/NN/distance added/VBD/added to/TO/to the/DT/the distance/NN/distance that/IN/that i/PRP/i have/VBP/have calculated/VBN/calculated so/RB/so far/RB/far /,/, so/RB/so for/IN/for doing/VBG/doing this/DT/this /,/, the/DT/the straight/JJ/straight line/NN/line distance/NN/distance information/NN/information will/MD/will come/VB/come /:/( /:/( refer/NN/refer time/NN/time /:/: 49/CD/49 /:/: 12/CD/12 /CD/) /CD/) /./. so/RB/so /,/, this/DT/this should/MD/should be/VB/be an/DT/an exercise/NN/exercise i/PRP/i will/MD/will like/VB/like it/PRP/it to/TO/to try/NNP/try. so/RB/so /,/, let/VB/let me/PRP/me summarize/VB/summarize again/RB/again /,/, just/RB/just i/PRP/i have/VBP/have summarize/VBP/summarize this/NNP/this. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down in/IN/in the/DT/the final/JJ/final word/NNP/word. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 28/CD/28 /CD/) so/RB/so /,/, there/EX/there is/VBZ/is some/DT/some cleverness/NN/cleverness needed/VBN/needed in/IN/in constructing/NN/constructing cost/NN/cost functions/NNP/functions. that/IN/that is/VBZ/is an/DT/an important/JJ/important idea/NN/idea /,/, but/CC/but once/RB/once the/DT/the cost/NN/cost functions/NNS/functions are/VBP/are constructed/VBN/constructed /,/, usually/RB/usually substantial/JJ/substantial pruning/NN/pruning happens/NNP/happens. so/RB/so /,/, let/VB/let me/PRP/me look/VB/look ahead/RB/ahead a/DT/a little/RB/little bit/NN/bit well/RB/well /,/, actually/RB/actually know/VB/know let/JJ/let me/PRP/me look/VBP/look back/RB/back little/JJ/little bit/NNP/bit. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 23/CD/23 /CD/) so/RB/so /,/, there/EX/there are/VBP/are number/NN/number of/IN/of issues/NNS/issues /,/, which/WDT/which you/PRP/you have/VBP/have not/RB/not talked/VBN/talked about/IN/about in/IN/in both/DT/both branch/NN/branch and/CC/and bound/NN/bound and/CC/and backtrack/NNP/backtrack. so/RB/so /,/, the/DT/the first/JJ/first issue/NN/issue that/WDT/that we/PRP/we have/VBP/have not/RB/not talked/VBN/talked about/IN/about is/VBZ/is /,/, how/WRB/how to/TO/to organize/VB/organize the/DT/the search/NN/search space/NN/space /,/, what/WP/what i/PRP/i mean/VBP/mean by/IN/by this/DT/this is/VBZ/is let/VB/let me/PRP/me come/VB/come back/RB/back to/TO/to this/DT/this example/NN/example /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 51/CD/51 /CD/) /CD/) /./. here/RB/here we/PRP/we said/VBD/said that/IN/that will/MD/will look/VB/look at/IN/at the/DT/the first/JJ/first object/NN/object first/RB/first /,/, that/IN/that is/VBZ/is what/WP/what necessary/JJ/necessary /,/, we/PRP/we could/MD/could have/VB/have used/VBN/used some/DT/some other/JJ/other heuristic/JJ/heuristic of/IN/of deciding/NN/deciding which/WDT/which object/NN/object to/TO/to look/VB/look at/IN/at first/NNP/first. so/RB/so /,/, this/DT/this initial/JJ/initial that/IN/that /CD/( /CD/( refer/NN/refer time/NN/time /:/: 51/CD/51 /:/: 05/CD/05 /CD/) /CD/) we/PRP/we do/VBP/do might/MD/might have/VB/have great/JJ/great pay/NN/pay offs/NNS/offs in/IN/in the/DT/the end/NNP/end. so/RB/so /,/, maybe/RB/maybe we/PRP/we could/MD/could say/VB/say that/IN/that we/PRP/we want/VBP/want to/TO/to look/VB/look at/IN/at the/DT/the object/NN/object /,/, which/WDT/which has/VBZ/has the/DT/the highest/JJS/highest value/NN/value first/RB/first or/CC/or which/WDT/which has/VBZ/has the/DT/the highest/JJS/highest value/NN/value to/TO/to weight/NN/weight ratio/NN/ratio first/NNP/first. so/RB/so /,/, at/IN/at a/DT/a given/VBN/given node/NN/node /,/, which/WDT/which edge/NN/edge to/TO/to select/VB/select first/RB/first to/TO/to explore/VB/explore first/NNP/first. again/RB/again coming/VBG/coming back/RB/back to/TO/to this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 51/CD/51 /:/: 46/CD/46 /CD/) /CD/) at/IN/at this/DT/this given/VBN/given node/NN/node /,/, here/RB/here we/PRP/we select/VBP/select at/IN/at the/DT/the edge/NN/edge in/IN/in which/WDT/which we/PRP/we included/VBD/included the/DT/the object/NNP/object. here/RB/here we/PRP/we did/VBD/did not/RB/not include/VB/include the/DT/the object/NNP/object. in/IN/in this/DT/this case/NN/case /,/, we/PRP/we explore/VBP/explore this/DT/this edge/NN/edge first/RB/first at/IN/at not/RB/not this/DT/this edge/NN/edge and/CC/and you/PRP/you saw/VBD/saw that/IN/that was/VBD/was the/DT/the more/RBR/more interesting/JJ/interesting thing/NN/thing to/TO/to do/VB/do because/IN/because /,/, we/PRP/we got/VBD/got a/DT/a good/JJ/good object/NN/object with/IN/with good/JJ/good cost/NNP/cost. and/CC/and as/IN/as a/DT/a result/NN/result of/IN/of which/WDT/which could/MD/could prove/VB/prove in/IN/in this/NNP/this. if/IN/if we/PRP/we have/VBP/have gone/VBN/gone in/IN/in different/JJ/different direction/NN/direction /,/, then/RB/then maybe/RB/maybe we/PRP/we did/VBD/did not/RB/not have/VB/have what/WP/what this/DT/this pruning/NN/pruning effect/NNP/effect. so/RB/so /,/, clearly/RB/clearly how/WRB/how we/PRP/we which/WDT/which has/VBZ/has to/TO/to explore/VB/explore first/RB/first is/VBZ/is an/DT/an interesting/JJ/interesting decision/NNP/decision. so/RB/so /,/, there/EX/there are/VBP/are additional/JJ/additional heuristics/NNS/heuristics possible/JJ/possible for/IN/for all/DT/all these/DT/these questions/NNS/questions /,/, both/DT/both these/DT/these questions/NNP/questions. there/RB/there are/VBP/are lots/NNS/lots of/IN/of works/NNS/works and/CC/and there/EX/there are/VBP/are internet/JJ/internet articles/NNS/articles as/IN/as well/RB/well /,/, these/DT/these days/NNS/days which/WDT/which will/MD/will tell/VB/tell you/PRP/you about/IN/about these/DT/these things/NNP/things. and/CC/and which/WDT/which will/MD/will tell/VB/tell you/PRP/you /,/, how/WRB/how the/DT/the different/JJ/different heuristics/NNS/heuristics works/NNS/works for/IN/for different/JJ/different kinds/NNS/kinds of/IN/of problems/NNP/problems. for/IN/for our/PRP$/our next/JJ/next lecture/NN/lecture /,/, we/PRP/we will/MD/will take/VB/take a/DT/a complete/JJ/complete different/JJ/different viewpoint/NNP/viewpoint. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 12/CD/12 /CD/) and/CC/and we/PRP/we look/VBP/look at/IN/at dynamic/JJ/dynamic programming/NN/programming /,/, which/WDT/which is/VBZ/is an/DT/an even/RB/even more/RBR/more interesting/JJ/interesting way/NN/way of/IN/of doing/VBG/doing combinatorial/JJ/combinatorial search/NN/search and/CC/and optimization/NN/optimization and/CC/and this/DT/this stop/NN/stop here/NNP/here. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 18/CD/18 dynamic/JJ/dynamic programming/NN/programming welcome/NN/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. our/PRP$/our topic/JJ/topic today/NN/today is/VBZ/is dynamic/JJ/dynamic programming/NNP/programming. dynamic/JJ/dynamic programming/NN/programming is/VBZ/is a/DT/a powerful/JJ/powerful technique/NN/technique for/IN/for designing/NN/designing algorithms/NNS/algorithms /,/, and/CC/and it/PRP/it actually/RB/actually finds/VBZ/finds applications/NNS/applications in/IN/in many/JJ/many areas/NNP/areas. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 10/CD/10 /CD/) the/DT/the name/NN/name itself/PRP/itself is/VBZ/is not/RB/not really/RB/really very/RB/very /,/, very/RB/very enlightening/NNP/enlightening. so/RB/so /,/, i/PRP/i will/MD/will not/RB/not talk/VB/talk about/IN/about it/PRP/it /,/, there/EX/there is/VBZ/is an/DT/an origin/NN/origin is/VBZ/is somewhat/RB/somewhat obscure/NNP/obscure. and/CC/and so/RB/so let/VB/let us/PRP/us not/RB/not worry/VBP/worry about/IN/about it/NNP/it. but/CC/but /,/, as/IN/as i/PRP/i said/VBD/said the/DT/the techniques/NNS/techniques finds/VBZ/finds applications/NNS/applications in/IN/in many/JJ/many areas/NNS/areas /,/, including/VBG/including operations/NNS/operations research/NN/research /,/, signal/JJ/signal processing/NN/processing /,/, computational/JJ/computational biology/NN/biology /,/, geometry/NN/geometry and/CC/and many/JJ/many more/NNP/more. we/PRP/we are/VBP/are going/VBG/going to/TO/to view/VB/view /,/, dynamic/JJ/dynamic programming/NN/programming as/IN/as a/DT/a technique/NN/technique for/IN/for combinatorial/JJ/combinatorial optimization/NNP/optimization. and/CC/and in/IN/in some/DT/some sense/NN/sense /,/, will/MD/will think/VB/think of/IN/of dynamic/JJ/dynamic programming/NN/programming as/IN/as an/DT/an optimization/NN/optimization of/IN/of the/DT/the backtrack/NN/backtrack search/NN/search technique/NN/technique that/WDT/that we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/NNP/far. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 29/CD/29 /CD/) so/RB/so /,/, we/PRP/we will/MD/will think/VB/think of/IN/of dynamic/JJ/dynamic programming/NN/programming /,/, as/IN/as in/IN/in some/DT/some sense/NN/sense are/VBP/are optimization/NN/optimization of/IN/of backtrack/NN/backtrack search/NNP/search. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do today/NNP/today. i/PRP/i am/VBP/am going/VBG/going to/TO/to talk/VB/talk about/IN/about /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take an/DT/an example/NN/example to/TO/to illustrate/VB/illustrate the/DT/the technique/NN/technique and/CC/and this/DT/this example/NN/example is/VBZ/is going/VBG/going to/TO/to be/VB/be our/PRP$/our familiar/JJ/familiar knapsack/NN/knapsack problem/NNP/problem. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to review/VB/review the/DT/the backtrack/NN/backtrack search/NN/search solution/NN/solution /,/, then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to say/VB/say how/WRB/how we/PRP/we can/MD/can really/RB/really /VB/( /:/( refer/NN/refer time/NN/time /:/: 03/CD/03 /:/: 03/CD/03 /CD/) /CD/) slightly/RB/slightly differently/RB/differently and/CC/and how/WRB/how we/PRP/we can/MD/can optimize/VB/optimize it/NNP/it. and/CC/and that/IN/that is/VBZ/is how/WRB/how we/PRP/we will/MD/will lead/VB/lead into/IN/into the/DT/the dynamic/JJ/dynamic programming/NN/programming idea/NNP/idea. and/CC/and then/RB/then i/PRP/i will/MD/will describe/VB/describe some/DT/some details/NNS/details and/CC/and then/RB/then summarize/NNP/summarize. so/RB/so /,/, let/VB/let me/PRP/me take/VB/take an/DT/an example/NN/example of/IN/of an/DT/an knapsack/NN/knapsack problem/NNP/problem. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say our/PRP$/our knapsack/NN/knapsack problem/NN/problem /,/, let/VB/let me/PRP/me remind/VB/remind you/PRP/you that/IN/that our/PRP$/our knapsack/NN/knapsack problem/NN/problem involves/VBZ/involves filling/VBG/filling a/DT/a knapsack/NN/knapsack with/IN/with objects/NNS/objects of/IN/of the/DT/the maximum/NN/maximum value/NNP/value. the/DT/the inputs/NNS/inputs to/TO/to this/DT/this problem/NN/problem are/VBP/are two/CD/two vectors/NNP/vectors. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 55/CD/55 /CD/) let/NN/let us/PRP/us say/VBP/say v/NN/v /,/, v/NN/v is/VBZ/is one/CD/one of/IN/of the/DT/the vectors/NNS/vectors /,/, which/WDT/which gives/VBZ/gives the/DT/the value/NN/value of/IN/of each/DT/each object/NNP/object. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we have/VBP/have v/NN/v value/NN/value is/VBZ/is which/WDT/which are/VBP/are 7/CD/7 2/CD/2 1/CD/1 6and/CD/6and 12/CD/12. this/DT/this juts/NNS/juts mean/VBP/mean that/IN/that the/DT/the first/JJ/first object/NN/object has/VBZ/has value/NN/value 7/CD/7 /,/, the/DT/the second/JJ/second object/NN/object has/VBZ/has value/NN/value 2/CD/2 /,/, the/DT/the third/JJ/third object/NN/object has/VBZ/has value/NN/value 1/CD/1 /,/, fourth/JJ/fourth object/NN/object is/VBZ/is value/NN/value 6/CD/6 and/CC/and so/RB/so on/NNP/on. second/JJ/second thing/NN/thing of/IN/of the/DT/the value/NN/value has/VBZ/has been/VBN/been given/VBN/given to/TO/to us/PRP/us a/DT/a rupees/NNS/rupees or/CC/or something/VBG/something like/IN/like that/DT/that /,/, then/RB/then we/PRP/we are/VBP/are also/RB/also given/VBN/given another/DT/another vector/NNP/vector. so/RB/so /,/, this/DT/this vector/NN/vector gives/VBZ/gives the/DT/the weight/NN/weight of/IN/of each/DT/each object/NNP/object. so/RB/so /,/, for/IN/for example/NN/example /,/, we/PRP/we might/MD/might have/VB/have that/IN/that the/DT/the first/JJ/first object/NN/object weights/NNS/weights 3/CD/3 kilograms/NNS/kilograms /,/, the/DT/the second/JJ/second object/NN/object based/VBN/based 1/CD/1 kilogram/NN/kilogram /,/, the/DT/the third/JJ/third object/NN/object weights/NNS/weights 2/CD/2 kilograms/NNS/kilograms the/DT/the fourth/JJ/fourth object/NN/object weights/NNS/weights 4/CD/4 kilograms/NNS/kilograms and/CC/and say/VB/say the/DT/the last/JJ/last object/NN/object is/VBZ/is 6/CD/6 kilograms/NNP/kilograms. and/CC/and finally/RB/finally /,/, we/PRP/we are/VBP/are given/VBN/given a/DT/a knapsack/NN/knapsack and/CC/and it/PRP/it is/VBZ/is capacity/NNP/capacity. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our last/JJ/last parameter/NN/parameter c/NN/c and/CC/and say/VB/say this/DT/this time/NN/time c/NN/c is/VBZ/is given/VBN/given to/TO/to be/VB/be 10/CD/10. so/RB/so /,/, let/VB/let me/PRP/me remind/VB/remind you/PRP/you what/WP/what the/DT/the problem/NN/problem is/VBZ/is /,/, we/PRP/we are/VBP/are suppose/RB/suppose to/TO/to pick/VB/pick up/RP/up objects/NNS/objects from/IN/from the/DT/the set/NN/set /,/, such/JJ/such that/IN/that the/DT/the total/JJ/total weight/NN/weight is/VBZ/is at/IN/at most/JJS/most 10/CD/10. but/CC/but /,/, we/PRP/we want/VBP/want to/TO/to pick/VB/pick up/RP/up the/DT/the objects/NNS/objects of/IN/of maximum/NN/maximum value/NNP/value. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NNP/problem. let/NN/let me/PRP/me now/RB/now remind/VBP/remind you/PRP/you /,/, how/WRB/how we/PRP/we did/VBD/did backtrack/RB/backtrack search/NN/search on/IN/on this/NNP/this. so/IN/so /,/, we/PRP/we become/VBP/become the/DT/the backtrack/NN/backtrack search/NN/search /,/, by/IN/by saying/VBG/saying that/IN/that at/IN/at present/JJ/present /,/, we/PRP/we have/VBP/have all/PDT/all possible/JJ/possible objects/NNS/objects in/IN/in front/JJ/front of/IN/of this/DT/this and/CC/and we/PRP/we have/VBP/have not/RB/not picked/VBN/picked up/RP/up any/DT/any object/NNP/object. so/RB/so /,/, that/IN/that is/VBZ/is corresponds/NNS/corresponds to/TO/to the/DT/the first/JJ/first node/NN/node in/IN/in our/PRP$/our search/NNP/search. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw that/IN/that node/NN/node out/IN/out here/NNP/here. so/RB/so /,/, this/DT/this first/JJ/first brace/NN/brace says/VBZ/says that/IN/that we/PRP/we have/VBP/have not/RB/not really/RB/really made/VBD/made any/DT/any decision/NN/decision yet/RB/yet /,/, on/IN/on any/DT/any object/NNP/object. we/PRP/we have/VBP/have not/RB/not picked/VBN/picked up/RP/up any/DT/any object/NN/object yet/RB/yet and/CC/and the/DT/the second/JJ/second set/NN/set 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 gives/NNS/gives us/PRP/us the/DT/the list/NN/list or/CC/or this/DT/this is/VBZ/is the/DT/the set/NN/set of/IN/of objects/NNS/objects /,/, which/WDT/which i/PRP/i still/RB/still need/VBP/need to/TO/to make/VB/make a/DT/a decision/NN/decision about/NNP/about. so/RB/so /,/, this/DT/this first/JJ/first vertex/NN/vertex just/RB/just says/VBZ/says that/IN/that i/PRP/i have/VBP/have to/TO/to make/VB/make a/DT/a decision/NN/decision about/IN/about all/DT/all objects/NNP/objects. and/CC/and backtrack/NN/backtrack search/NN/search /,/, systematically/RB/systematically goes/VBZ/goes through/IN/through the/DT/the entire/JJ/entire search/NN/search space/NN/space and/CC/and determines/NNS/determines the/DT/the value/NN/value /,/, when/WRB/when different/JJ/different objects/NNS/objects are/VBP/are picked/VBN/picked or/CC/or not/RB/not picked/NNP/picked. the/DT/the first/JJ/first decision/NN/decision point/NN/point is/VBZ/is where/WRB/where we/PRP/we decide/VBP/decide /,/, whether/IN/whether or/CC/or not/RB/not to/TO/to pick/VB/pick up/RP/up the/DT/the first/JJ/first object/NNP/object. on/IN/on this/DT/this side/NN/side /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider the/DT/the case/NN/case that/IN/that the/DT/the first/JJ/first object/NN/object /,/, in/IN/in fact/NN/fact is/VBZ/is not/RB/not picked/NNP/picked. so/RB/so /,/, for/IN/for example/NN/example /,/, i/PRP/i will/MD/will write/VB/write here/RB/here /,/, nothing/NN/nothing has/VBZ/has been/VBN/been picked/VBN/picked yet/NNP/yet. but/CC/but to/TO/to indicate/VB/indicate the/DT/the fact/NN/fact that/IN/that i/PRP/i have/VBP/have made/VBN/made a/DT/a decision/NN/decision about/IN/about the/DT/the first/JJ/first object/NN/object /,/, i/PRP/i will/MD/will remove/VB/remove the/DT/the first/JJ/first object/NN/object from/IN/from the/DT/the set/NN/set of/IN/of objects/NNS/objects /,/, which/WDT/which about/IN/about which/WDT/which i/PRP/i have/VBP/have to/TO/to make/VB/make a/DT/a decision/NNP/decision. so/RB/so /,/, i/PRP/i will/MD/will just/RB/just write/VB/write 2/CD/2 3/CD/3 4/CD/4 5/CD/5 over/IN/over here/NNP/here. on/IN/on this/DT/this side/NN/side /,/, i/PRP/i will/MD/will make/VB/make the/DT/the other/JJ/other choice/NN/choice which/WDT/which is/VBZ/is /,/, i/PRP/i will/MD/will pick/VB/pick up/RP/up 1/CD/1 and/CC/and then/RB/then on/IN/on this/DT/this side/NN/side i/PRP/i will/MD/will include/VB/include 2/CD/2 3/CD/3 4/CD/4 5/CD/5. this/DT/this means/VBZ/means /,/, that/IN/that i/PRP/i have/VBP/have decided/VBN/decided to/TO/to pick/VB/pick up/RP/up the/DT/the first/JJ/first object/NN/object and/CC/and these/DT/these are/VBP/are the/DT/the objects/NNS/objects about/IN/about which/WDT/which /,/, ith/IN/ith have/VBP/have to/TO/to make/VB/make a/DT/a decision/NNP/decision. in/IN/in a/DT/a similar/JJ/similar manner/NN/manner /,/, i/PRP/i will/MD/will keep/VB/keep on/IN/on examining/NN/examining each/DT/each of/IN/of these/DT/these nodes/NNS/nodes /,/, i/PRP/i will/MD/will make/VB/make more/RBR/more and/CC/and more/RBR/more decisions/NNP/decisions. and/CC/and i/PRP/i will/MD/will systematically/RB/systematically evaluate/VB/evaluate all/DT/all the/DT/the possibilities/NNP/possibilities. so/RB/so /,/, for/IN/for example/NN/example /,/, on/IN/on this/DT/this side/NN/side i/PRP/i could/MD/could have/VB/have said/VBN/said that/IN/that /,/, so/RB/so next/JJ/next decision/NN/decision is/VBZ/is about/IN/about object/JJ/object 2/CD/2. so/RB/so /,/, maybe/RB/maybe i/PRP/i will/MD/will on/IN/on this/DT/this side/NN/side /,/, i/PRP/i will/MD/will not/RB/not pick/VB/pick up/RP/up object/JJ/object 2/CD/2 and/CC/and this/DT/this side/NN/side maybe/RB/maybe i/PRP/i will/MD/will pick/VB/pick up/RP/up object/JJ/object 2/CD/2. so/RB/so /,/, now/RB/now the/DT/the set/NN/set of/IN/of object/NN/object that/IN/that remains/VBZ/remains unpicked/VBN/unpicked is/VBZ/is 3/CD/3 4/CD/4 5/CD/5 or/CC/or the/DT/the set/NN/set of/IN/of object/NN/object /,/, which/WDT/which remains/VBZ/remains undecided/VBN/undecided is/VBZ/is 3/CD/3 4/CD/4 5/CD/5. on/IN/on this/DT/this side/NN/side /,/, similarly/RB/similarly let/VB/let us/PRP/us say/VB/say i/PRP/i go/VBP/go to/TO/to the/DT/the left/NN/left and/CC/and as/IN/as i/PRP/i have/VBP/have said/VBN/said we/PRP/we have/VBP/have by/IN/by convention/NN/convention decided/VBD/decided that/IN/that on/IN/on the/DT/the left/NN/left side/NN/side /,/, i/PRP/i will/MD/will not/RB/not picking/VB/picking up/RP/up the/DT/the corresponding/NN/corresponding objects/NNP/objects. so/RB/so /,/, again/RB/again the/DT/the objects/NNS/objects that/WDT/that i/PRP/i have/VBP/have selected/VBN/selected are/VBP/are only/RB/only one/NNP/one. whereas/IN/whereas /,/, i/PRP/i just/RB/just made/VBD/made a/DT/a decision/NN/decision about/IN/about object/NN/object 2/CD/2 and/CC/and i/PRP/i said/VBD/said /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to pick/VB/pick it/PRP/it up/NNP/up. so/RB/so /,/, the/DT/the objects/NNS/objects that/WDT/that are/VBP/are remaining/VBG/remaining are/VBP/are 3/CD/3 4/CD/4 and/CC/and 5/CD/5 and/CC/and so/RB/so on/NNP/on. i/PRP/i will/MD/will explore/VB/explore the/DT/the tree/NN/tree in/IN/in this/DT/this manner/NN/manner and/CC/and we/PRP/we remark/VBP/remark long/RB/long ago/RB/ago that/IN/that if/IN/if we/PRP/we do/VBP/do this/DT/this /,/, we/PRP/we will/MD/will generate/VB/generate a/DT/a tree/NN/tree with/IN/with height/NN/height with/IN/with total/JJ/total number/NN/number of/IN/of leaves/NNS/leaves 2/CD/2 to/TO/to the/DT/the n/NNP/n. if/IN/if n/NN/n denotes/NNS/denotes the/DT/the number/NN/number of/IN/of objects/NNS/objects that/WDT/that clearly/RB/clearly is/VBZ/is two/CD/two large/JJ/large at/IN/at time/NN/time for/IN/for even/RB/even for/IN/for moderately/RB/moderately large/JJ/large n/NNP/n. so/RB/so /,/, we/PRP/we clearly/RB/clearly need/VBP/need a/DT/a better/JJR/better algorithm/NN/algorithm than/IN/than this/NNP/this. now/RB/now /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take a/DT/a different/JJ/different view/NN/view of/IN/of this/DT/this backtrack/NN/backtrack search/NN/search procedure/NN/procedure that/WDT/that i/PRP/i just/RB/just described/NNP/described. let/VB/let me/PRP/me first/RB/first remind/VBP/remind you/PRP/you /,/, what/WP/what the/DT/the backtrack/NN/backtrack search/NN/search view/NN/view is/VBZ/is ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 53/CD/53 /CD/) so/RB/so /,/, the/DT/the backtrack/NN/backtrack search/NN/search view/NN/view of/IN/of a/DT/a vertex/NN/vertex in/IN/in this/DT/this tree/NN/tree /,/, corresponds/NNS/corresponds to/TO/to a/DT/a partially/RB/partially constructed/VBN/constructed solution/NNP/solution. so/RB/so /,/, for/IN/for example/NN/example /,/, i/PRP/i wrote/VBD/wrote 2/CD/2 and/CC/and 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, this/DT/this just/RB/just says/VBZ/says that/IN/that i/PRP/i have/VBP/have included/VBN/included 2/CD/2 in/IN/in a/DT/a solution/NNP/solution. i/PRP/i have/VBP/have decided/VBN/decided not/RB/not to/TO/to include/VB/include object/NN/object 1/CD/1 and/CC/and this/DT/this is/VBZ/is the/DT/the part/NN/part about/IN/about which/WDT/which /,/, i/PRP/i have/VBP/have not/RB/not yet/RB/yet made/VBD/made any/DT/any decisions/NNP/decisions. but/CC/but /,/, here/RB/here is/VBZ/is an/DT/an alternate/JJ/alternate view/NN/view /,/, suppose/NN/suppose i/PRP/i have/VBP/have decided/VBN/decided to/TO/to include/VB/include 2/CD/2. so/RB/so /,/, let/VB/let me/PRP/me go/VB/go back/RB/back to/TO/to my/PRP$/my old/JJ/old problem/NNP/problem. so/RB/so /,/, if/IN/if i/PRP/i decide/VBP/decide to/TO/to include/VB/include 2/CD/2 and/CC/and not/RB/not 1/CD/1 /CD/( /CD/( refer/NN/refer time/NN/time /:/: 09/CD/09 /:/: 50/CD/50 /CD/) /CD/) and/CC/and i/PRP/i have/VBP/have capacity/NN/capacity 10/CD/10 then/RB/then ;/:/; that/DT/that means/VBZ/means /,/, that/IN/that out/IN/out of/IN/of the/DT/the capacity/NN/capacity that/IN/that i/PRP/i had/VBD/had of/IN/of 10/CD/10 /,/, i/PRP/i have/VBP/have used/VBN/used up/RP/up capacity/NN/capacity equal/JJ/equal to/TO/to 1/CD/1. because/IN/because the/DT/the second/JJ/second object/NN/object has/VBZ/has weight/VBN/weight 1/CD/1. so/RB/so that/IN/that means/NNS/means /,/, corresponding/VBG/corresponding to/TO/to this/DT/this vertex/NNP/vertex. so/RB/so /,/, this/DT/this choice/NN/choice of/IN/of mine/JJ/mine really/RB/really says/VBZ/says that/IN/that our/PRP$/our new/JJ/new capacity/NN/capacity after/IN/after i/PRP/i have/VBP/have decided/VBN/decided to/TO/to include/VB/include object/NN/object 2/CD/2 is/VBZ/is 10/CD/10 minus/NN/minus weight/NN/weight of/IN/of the/DT/the second/JJ/second object/NNP/object. in/IN/in this/DT/this case/NN/case /,/, 10/CD/10 minus/NN/minus the/DT/the weight/NN/weight of/IN/of second/JJ/second object/NN/object happens/NNS/happens to/TO/to be/VB/be 1/CD/1. and/CC/and therefore/RB/therefore /,/, the/DT/the new/JJ/new capacity/NN/capacity happens/NNS/happens to/TO/to be/VB/be 9/CD/9. and/CC/and then/RB/then /,/, i/PRP/i have/VBP/have not/RB/not yet/RB/yet made/VBD/made decisions/NNS/decisions about/IN/about objects/NNS/objects 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5. so/RB/so /,/, rather/RB/rather than/IN/than thinking/VBG/thinking about/IN/about this/DT/this remaining/VBG/remaining part/NN/part /,/, as/IN/as an/DT/an extension/NN/extension of/IN/of the/DT/the old/JJ/old solution/NN/solution /,/, this/DT/this new/JJ/new view/NN/view encourages/NNS/encourages us/PRP/us to/TO/to think/NNP/think. let/VB/let us/PRP/us forget/VB/forget our/PRP$/our original/JJ/original capacity/NNP/capacity. let/NN/let us/PRP/us say/VBP/say deal/NN/deal with/IN/with what/WP/what really/RB/really is/VBZ/is remaining/NNP/remaining. what/WP/what really/RB/really is/VBZ/is remaining/VBG/remaining is/VBZ/is 9/CD/9. so/RB/so /,/, we/PRP/we have/VBP/have capacity/NN/capacity of/IN/of 9/CD/9 /,/, which/WDT/which is/VBZ/is remaining/NNP/remaining. and/CC/and we/PRP/we have/VBP/have to/TO/to select/VB/select the/DT/the 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, these/DT/these objects/NNS/objects 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5. so/RB/so /,/, we/PRP/we are/VBP/are allowed/VBN/allowed /,/, now/RB/now to/TO/to take/VB/take objects/NNS/objects from/IN/from this/DT/this set/NN/set 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5. our/PRP$/our capacity/NN/capacity is/VBZ/is 9/CD/9 ;/:/; that/DT/that means/VBZ/means /,/, the/DT/the weight/NN/weight of/IN/of objects/NNS/objects /,/, which/WDT/which is/VBZ/is select/VBP/select from/IN/from this/DT/this must/MD/must not/RB/not go/VB/go beyond/IN/beyond 9/CD/9 and/CC/and within/IN/within that/DT/that /,/, we/PRP/we want/VBP/want to/TO/to maximize/VB/maximize our/PRP$/our value/NNP/value. clearly/RB/clearly solving/VBG/solving this/DT/this problem/NN/problem /,/, extending/VBG/extending the/DT/the solution/NN/solution over/IN/over here/RB/here is/VBZ/is exactly/RB/exactly the/DT/the same/JJ/same as/IN/as this/DT/this /,/, as/IN/as solving/NN/solving this/DT/this independent/NN/independent problem/NNP/problem. that/IN/that is/VBZ/is because/IN/because even/RB/even here/RB/here /,/, i/PRP/i will/MD/will have/VB/have used/VBN/used up/RP/up 1/CD/1 unit/NN/unit of/IN/of capacity/NN/capacity /,/, out/IN/out of/IN/of the/DT/the 10/CD/10 units/NNS/units that/WDT/that i/PRP/i have/VBP/have already/RB/already had/NNP/had. and/CC/and clearly/RB/clearly /,/, it/PRP/it makes/VBZ/makes sense/NN/sense for/IN/for meet/NN/meet to/TO/to fill/VB/fill up/RP/up the/DT/the remaining/VBG/remaining capacity/NN/capacity with/IN/with the/DT/the best/JJS/best /,/, the/DT/the most/RBS/most valuable/JJ/valuable objects/NNS/objects from/IN/from this/DT/this set/NNP/set. whose/WP$/whose total/JJ/total weight/NN/weight is/VBZ/is less/JJR/less than/IN/than 9/CD/9. and/CC/and that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what happens/NNS/happens here/RB/here as/IN/as well/NNP/well. so/RB/so /,/, this/DT/this is/VBZ/is ;/:/; however/RB/however /,/, a/DT/a substantial/JJ/substantial improvement/NN/improvement because/IN/because /,/, now/RB/now our/PRP$/our view/NN/view is/VBZ/is that/IN/that /,/, we/PRP/we are/VBP/are not/RB/not really/RB/really thinking/VBG/thinking of/IN/of about/RB/about extending/VBG/extending the/DT/the solution/NNP/solution. but/CC/but we/PRP/we are/VBP/are thinking/VBG/thinking of/IN/of solving/VBG/solving and/CC/and independent/JJ/independent problem/NNP/problem. and/CC/and further/JJ/further that/IN/that problem/NN/problem is/VBZ/is of/IN/of the/DT/the same/JJ/same kind/NN/kind as/IN/as the/DT/the original/JJ/original problem/NNP/problem. so/RB/so /,/, rather/RB/rather than/IN/than saying/VBG/saying that/IN/that let/NN/let us/PRP/us extend/VBP/extend the/DT/the solution/NN/solution /,/, we/PRP/we will/MD/will just/RB/just say/VB/say that/IN/that look/NN/look in/IN/in order/NN/order solves/NNS/solves this/DT/this original/JJ/original problem/NNP/problem. let/NN/let us/PRP/us solve/VBP/solve this/DT/this alternate/NN/alternate problem/NN/problem /,/, but/CC/but this/DT/this problem/NN/problem is/VBZ/is not/RB/not an/DT/an extension/NN/extension /,/, of/IN/of any/DT/any extension/NN/extension of/IN/of any/DT/any solution/NNP/solution. but/CC/but /,/, it/PRP/it is/VBZ/is a/DT/a simple/JJ/simple new/JJ/new problem/NN/problem of/IN/of the/DT/the same/JJ/same kind/NNP/kind. so/IN/so /,/, this/DT/this first/JJ/first of/IN/of all/DT/all introduce/NN/introduce as/IN/as simplification/NN/simplification in/IN/in our/PRP$/our outlook/NNP/outlook. and/CC/and in/IN/in some/DT/some sense/NN/sense it/PRP/it makes/VBZ/makes programming/VBG/programming easier/JJR/easier /,/, so/RB/so the/DT/the benefits/NNS/benefits of/IN/of this/DT/this new/JJ/new view/NNP/view. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 15/CD/15 /CD/) the/DT/the first/JJ/first benefit/NN/benefit is/VBZ/is that/IN/that /,/, this/DT/this new/JJ/new view/NN/view is/VBZ/is simpler/JJR/simpler or/CC/or i/PRP/i would/MD/would state/VB/state that/IN/that as/IN/as the/DT/the outlook/NN/outlook /,/, our/PRP$/our outlook/NN/outlook overall/NN/overall is/VBZ/is simpler/NNP/simpler. this/DT/this in/IN/in term/NN/term such/JJ/such as/IN/as our/PRP$/our programming/NN/programming is/VBZ/is going/VBG/going to/TO/to be/VB/be easier/NNP/easier. i/PRP/i will/MD/will talk/VB/talk more/RBR/more about/IN/about this/DT/this in/IN/in a/DT/a minute/NN/minute and/CC/and you/PRP/you will/MD/will see/VB/see that/IN/that indeed/RB/indeed /,/, the/DT/the programming/NN/programming gets/VBZ/gets simplified/NNP/simplified. however/RB/however these/DT/these two/CD/two are/VBP/are not/RB/not really/RB/really /,/, the/DT/the main/JJ/main important/JJ/important benefits/NNP/benefits. there/RB/there is/VBZ/is an/DT/an additional/JJ/additional benefit/NN/benefit /,/, which/WDT/which is/VBZ/is much/RB/much more/RBR/more important/JJ/important /,/, but/CC/but about/IN/about which/WDT/which i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to tell/VB/tell you/PRP/you right/RB/right now/NNP/now. let/VB/let us/PRP/us wait/VB/wait /,/, until/IN/until i/PRP/i tell/VBP/tell you/PRP/you of/IN/of how/WRB/how to/TO/to do/VB/do the/DT/the programming/NN/programming and/CC/and then/RB/then i/PRP/i will/MD/will tell/VB/tell you/PRP/you /,/, about/IN/about this/DT/this surprise/NN/surprise benefit/NNP/benefit. and/CC/and you/PRP/you will/MD/will agree/VB/agree with/IN/with me/PRP/me then/RB/then /,/, that/IN/that this/DT/this is/VBZ/is really/RB/really a/DT/a very/RB/very exiting/VBG/exiting benefit/NNP/benefit. so/RB/so /,/, let/VB/let us/PRP/us start/VB/start /,/, let/VB/let us/PRP/us worry/VB/worry about/IN/about /,/, how/WRB/how we/PRP/we going/VBG/going to/TO/to program/NN/program this/NNP/this. so/RB/so /,/, the/DT/the idea/NN/idea was/VBD/was that/IN/that in/IN/in order/NN/order to/TO/to solve/VB/solve the/DT/the knapsack/NN/knapsack problem/NNP/problem. instead/RB/instead of/IN/of thinking/VBG/thinking about/IN/about extending/VBG/extending the/DT/the solution/NN/solution /,/, we/PRP/we said/VBD/said let/VB/let us/PRP/us construct/VB/construct a/DT/a new/JJ/new problem/NN/problem of/IN/of the/DT/the same/JJ/same kind/NN/kind and/CC/and then/RB/then solve/VB/solve that/IN/that maybe/NN/maybe /,/, one/CD/one or/CC/or as/IN/as you/PRP/you have/VBP/have seen/VBN/seen maybe/RB/maybe /,/, more/JJR/more problems/NNS/problems of/IN/of the/DT/the same/JJ/same kind/NN/kind and/CC/and solve/VB/solve that/NNP/that. so/RB/so /,/, this/DT/this naturally/RB/naturally means/VBZ/means that/IN/that we/PRP/we should/MD/should be/VB/be thinking/VBG/thinking of/IN/of recursion/NNP/recursion. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down a/DT/a recursive/JJ/recursive procedure/NN/procedure /,/, to/TO/to solve/VB/solve this/DT/this knapsack/NN/knapsack problem/NNP/problem. so/RB/so /,/, let/VB/let me/PRP/me first/RB/first define/VBP/define that/IN/that procedure/NN/procedure /,/, let/VB/let me/PRP/me write/VB/write down/RP/down this/DT/this specifications/NNS/specifications of/IN/of the/DT/the procedure/NN/procedure first/NNP/first. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 18/CD/18 /CD/) so/RB/so /,/, i/PRP/i will/MD/will call/VB/call my/PRP$/my procedure/NN/procedure ks/NNS/ks and/CC/and it/PRP/it will/MD/will take/VB/take two/CD/two parameters/NNS/parameters c/NN/c and/CC/and i/NNP/i. c/NN/c is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the capacity/NN/capacity /,/, remaining/VBG/remaining or/CC/or actually/RB/actually i/PRP/i should/MD/should say/VB/say rather/RB/rather /,/, than/IN/than remaining/VBG/remaining that/IN/that the/DT/the capacity/NN/capacity given/VBN/given for/IN/for solving/NN/solving the/DT/the problem/NNP/problem. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just strike/VBP/strike this/DT/this off/NN/off /,/, capacity/NN/capacity for/IN/for containing/VBG/containing solution/NNP/solution. i/PRP/i is/VBZ/is a/DT/a parameter/NN/parameter /,/, which/WDT/which is/VBZ/is the/DT/the index/NN/index of/IN/of the/DT/the first/JJ/first undecided/VBD/undecided object/NN/object or/CC/or in/IN/in fact/NN/fact /,/, instead/RB/instead of/IN/of thinking/VBG/thinking about/IN/about the/DT/the first/JJ/first thinking/NN/thinking of/IN/of it/PRP/it as/IN/as a/DT/a first/JJ/first undecided/VBN/undecided object/NN/object /,/, i/PRP/i could/MD/could think/VB/think of/IN/of it/PRP/it as/IN/as the/DT/the first/JJ/first object/NN/object /,/, which/WDT/which is/VBZ/is allowed/NNP/allowed. so/RB/so /,/, the/DT/the object/NN/object which/WDT/which are/VBP/are allowed/VBN/allowed for/IN/for me/PRP/me ri/VBP/ri /,/, i/PRP/i plus/VBZ/plus 1/CD/1 /,/, i/PRP/i plus/VBZ/plus 2/CD/2 all/DT/all the/DT/the way/NN/way till/IN/till n/NNP/n. so/RB/so /,/, my/PRP$/my original/JJ/original problem/NN/problem that/IN/that i/PRP/i needed/VBD/needed to/TO/to solve/VB/solve was/VBD/was say/VB/say something/NN/something like/IN/like ks/NNS/ks of/IN/of 10/CD/10 /,/, 1/CD/1. what/WP/what does/VBZ/does it/PRP/it indicate/VBP/indicate that/IN/that i/PRP/i want/VBP/want to/TO/to solve/VB/solve the/DT/the knapsack/NN/knapsack problem/NN/problem /,/, on/IN/on knapsack/NN/knapsack of/IN/of capacity/NN/capacity 10/CD/10 and/CC/and i/PRP/i want/VBP/want all/DT/all the/DT/the objects/NNS/objects /,/, in/IN/in the/DT/the first/JJ/first object/NN/object onward/NN/onward until/IN/until n/NN/n to/TO/to be/VB/be considered/NNP/considered. i/PRP/i have/VBP/have told/VBN/told you/PRP/you what/WP/what n/RB/n is/VBZ/is and/CC/and let/VB/let us/PRP/us assume/VB/assume that/IN/that n/NN/n is/VBZ/is a/DT/a global/JJ/global variable/NNP/variable. so/RB/so /,/, there/EX/there are/VBP/are some/DT/some global/JJ/global variables/NNS/variables over/IN/over here/NNP/here. so/RB/so /,/, n/IN/n is/VBZ/is a/DT/a global/JJ/global variable/JJ/variable /,/, the/DT/the total/JJ/total number/NN/number of/IN/of objects/NNS/objects /,/, similarly/RB/similarly the/DT/the value/NN/value array/NN/array is/VBZ/is a/DT/a global/JJ/global variable/JJ/variable and/CC/and the/DT/the weight/NN/weight array/NN/array is/VBZ/is also/RB/also a/DT/a global/JJ/global variable/NNP/variable. and/CC/and let/VB/let me/PRP/me just/RB/just remind/VBP/remind you/PRP/you /,/, that/DT/that there/EX/there are/VBP/are n/NN/n components/NNS/components in/IN/in each/DT/each of/IN/of these/DT/these arrays/NNP/arrays. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the specifications/NNS/specifications of/IN/of the/DT/the procedure/NN/procedure that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to write/NNP/write. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now write/VBP/write the/DT/the procedure/NNP/procedure. so/RB/so /,/, let/VB/let us/PRP/us deal/VBP/deal with/IN/with the/DT/the base/NN/base case/NN/case first/RB/first that/IN/that is/VBZ/is fairly/RB/fairly easy/NNP/easy. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 49/CD/49 /CD/) ks/NNS/ks of/IN/of c/NN/c i/PRP/i /,/, so/RB/so first/RB/first the/DT/the base/NN/base case/NN/case /,/, so/RB/so if/IN/if i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than n/NNP/n. so/RB/so /,/, that/IN/that means/NNS/means that/WDT/that i/PRP/i have/VBP/have been/VBN/been asked/VBN/asked to/TO/to solve/VB/solve the/DT/the problem/NN/problem /,/, starting/VBG/starting from/IN/from the/DT/the n/NN/n plus/VBZ/plus first/JJ/first object/NN/object or/CC/or some/DT/some object/JJ/object beyond/NN/beyond n/NNP/n. that/IN/that means/VBZ/means i/PRP/i really/RB/really have/VBP/have made/VBN/made up/RP/up my/PRP$/my mind/NN/mind about/IN/about all/DT/all the/DT/the previous/JJ/previous object/NN/object /:/( /:/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 19/CD/19 /CD/) /CD/) or/CC/or in/IN/in essentially/RB/essentially what/WP/what is/VBZ/is am/VBP/am saying/VBG/saying is/VBZ/is that/IN/that /,/, i/PRP/i am/VBP/am not/RB/not allow/JJ/allow to/TO/to choose/VB/choose any/DT/any objects/NNS/objects at/IN/at all/NNP/all. in/IN/in that/DT/that case/NN/case we/PRP/we should/MD/should be/VB/be return/VBN/return in/IN/in 0/-NONE-/0 /,/, as/IN/as the/DT/the value/NN/value of/IN/of the/DT/the solution/NNP/solution. i/PRP/i should/MD/should say/VB/say before/IN/before i/PRP/i get/VBP/get into/IN/into this/DT/this /,/, that/IN/that in/IN/in this/DT/this problem/NN/problem that/IN/that this/DT/this specification/NN/specification that/IN/that i/PRP/i have/VBP/have wrote/VBD/wrote down/NNP/down. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 42/CD/42 /CD/) /CD/) i/PRP/i should/MD/should also/RB/also say/VB/say that/IN/that we/PRP/we will/MD/will only/RB/only we/PRP/we worried/VBD/worried about/IN/about the/DT/the value/NN/value of/IN/of the/DT/the optimal/JJ/optimal solution/NNP/solution. so/RB/so /,/, the/DT/the idea/NN/idea is/VBZ/is that/IN/that case/NN/case of/IN/of 10/CD/10 /,/, 1/CD/1 will/MD/will not/RB/not actually/RB/actually return/VBP/return /,/, the/DT/the set/NN/set of/IN/of object/NN/object which/WDT/which are/VBP/are chosen/NNP/chosen. but/CC/but /,/, in/IN/in fact/NN/fact it/PRP/it will/MD/will return/VB/return the/DT/the best/JJS/best possible/JJ/possible value/NN/value that/WDT/that i/PRP/i can/MD/can get/VB/get out/IN/out of/IN/of it/NNP/it. now/RB/now /,/, /:/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 14/CD/14 /CD/) i/PRP/i think/VBP/think this/DT/this is/VBZ/is a/DT/a /NN/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 15/CD/15 /CD/) simplification/NN/simplification of/IN/of the/DT/the problem/NN/problem that/IN/that is/VBZ/is given/VBN/given to/TO/to us/NNP/us. and/CC/and in/IN/in some/DT/some sense/NN/sense it/PRP/it is/VBZ/is /,/, but/CC/but later/JJ/later on/IN/on you/PRP/you will/MD/will see/VB/see that/NNP/that. in/IN/in fact/NN/fact /,/, once/RB/once we/PRP/we know/VBP/know what/WP/what the/DT/the value/NN/value is/VBZ/is /,/, it/PRP/it is/VBZ/is very/RB/very easy/JJ/easy to/TO/to go/VB/go back/RB/back over/IN/over our/PRP$/our calculations/NNS/calculations and/CC/and actually/RB/actually figure/NN/figure out/IN/out what/WP/what that/IN/that set/NN/set was/NNP/was. so/RB/so /,/, we/PRP/we will/MD/will leave/VB/leave that/IN/that for/IN/for the/DT/the future/NN/future /,/, later/JJ/later in/IN/in this/DT/this lecture/NNP/lecture. right/RB/right now/RB/now we/PRP/we will/MD/will just/RB/just concentrate/VB/concentrate on/IN/on determining/NN/determining /,/, what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum value/NN/value i/PRP/i can/MD/can get/VB/get by/IN/by filling/NN/filling my/PRP$/my knapsack/NN/knapsack /,/, so/RB/so that/IN/that it/PRP/it does/VBZ/does not/RB/not overflow/VB/overflow /,/, it/PRP/it is/VBZ/is in/IN/in overloaded/NNP/overloaded. this/DT/this is/VBZ/is the/DT/the base/NN/base case/NN/case /,/, if/IN/if i/PRP/i have/VBP/have already/RB/already gone/VBN/gone past/JJ/past n/NN/n then/RB/then ;/:/; that/DT/that means/VBZ/means /,/, we/PRP/we have/VBP/have considered/VBN/considered all/DT/all the/DT/the possible/JJ/possible objects/NNS/objects and/CC/and then/RB/then we/PRP/we should/MD/should returning/VBG/returning 0/CD/0. because/IN/because there/EX/there is/VBZ/is nothing/NN/nothing to/TO/to add/VB/add to/TO/to our/PRP$/our knapsack/NN/knapsack /,/, so/RB/so you/PRP/you have/VB/have already/RB/already return/NNP/return. otherwise/RB/otherwise /,/, the/DT/the first/JJ/first object/NN/object that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be considering/VBG/considering is/VBZ/is the/DT/the ith/NN/ith object/NNP/object. so/RB/so /,/, what/WDT/what can/MD/can you/PRP/you do/VB/do about/IN/about it/PRP/it /,/, well/RB/well we/PRP/we need/VBP/need to/TO/to consider/VB/consider it/PRP/it only/RB/only if/IN/if the/DT/the capacity/NN/capacity is/VBZ/is in/IN/in fact/NN/fact /,/, able/JJ/able to/TO/to take/VB/take that/IN/that object/NNP/object. so/RB/so /,/, if/IN/if c/NN/c /,/, if/IN/if the/DT/the capacity/NN/capacity happens/VBZ/happens to/TO/to be/VB/be less/JJR/less than/IN/than the/DT/the weight/NN/weight of/IN/of the/DT/the object/NN/object /,/, then/RB/then we/PRP/we can/MD/can not/RB/not do/VB/do anything/NN/anything right/NNP/right. so/RB/so /,/, if/IN/if the/DT/the capacity/NN/capacity happens/VBZ/happens to/TO/to be/VB/be is/VBZ/is less/JJR/less than/IN/than the/DT/the weight/NN/weight of/IN/of the/DT/the object/NNP/object. then/RB/then that/IN/that object/NN/object can/MD/can not/RB/not be/VB/be considered/VBN/considered /,/, which/WDT/which means/VBZ/means /,/, we/PRP/we should/MD/should just/RB/just go/VB/go on/IN/on to/TO/to the/DT/the next/JJ/next object/NN/object and/CC/and return/NN/return whatever/NN/whatever we/PRP/we can/MD/can with/IN/with the/DT/the remaining/VBG/remaining object/NNP/object. so/RB/so /,/, in/IN/in that/DT/that case/NN/case /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to return/VB/return ks/NNS/ks of/IN/of c/NN/c and/CC/and i/PRP/i plus/RB/plus 1/CD/1. the/DT/the interesting/JJ/interesting case/NN/case appears/VBZ/appears /,/, if/IN/if c/NN/c is/VBZ/is in/IN/in fact/NN/fact /,/, bigger/JJR/bigger than/IN/than w/NN/w of/IN/of i/PRP/i /,/, so/RB/so else/RB/else what/WP/what happens/NNP/happens. so/RB/so /,/, else/RB/else we/PRP/we have/VBP/have the/DT/the possibility/NN/possibility that/IN/that we/PRP/we can/MD/can in/IN/in fact/NN/fact /,/, include/VBP/include this/DT/this object/NN/object in/IN/in our/PRP$/our knapsack/NN/knapsack of/IN/of course/NN/course /,/, it/PRP/it might/MD/might not/RB/not always/RB/always be/VB/be wise/RB/wise to/TO/to include/VB/include that/IN/that object/NNP/object. simply/RB/simply because/IN/because /,/, if/IN/if we/PRP/we include/VBP/include that/IN/that object/NN/object we/PRP/we have/VBP/have to/TO/to reduce/VB/reduce /,/, we/PRP/we have/VBP/have to/TO/to use/VB/use of/IN/of some/DT/some of/IN/of your/PRP$/your capacity/NN/capacity and/CC/and maybe/VB/maybe the/DT/the benefit/NN/benefit that/IN/that we/PRP/we get/VBP/get because/IN/because of/IN/of using/VBG/using of/IN/of that/DT/that capacity/NN/capacity is/VBZ/is not/RB/not adequate/JJ/adequate enough/NNP/enough. or/CC/or because/IN/because we/PRP/we might/MD/might be/VB/be losing/VBG/losing some/DT/some better/JJR/better options/NNS/options later/JJ/later on/NNP/on. so/RB/so /,/, therefore/IN/therefore /,/, to/TO/to cover/VB/cover both/DT/both possibilities/NNS/possibilities /,/, here/RB/here is/VBZ/is what/WP/what we/PRP/we should/MD/should do/NNP/do. we/PRP/we should/MD/should return/VB/return the/DT/the best/JJS/best of/IN/of those/DT/those towards/NNP/towards. so/RB/so /,/, the/DT/the first/JJ/first is/VBZ/is we/PRP/we will/MD/will ignore/VB/ignore this/DT/this current/JJ/current object/NN/object /,/, in/IN/in which/WDT/which case/NN/case we/PRP/we should/MD/should be/VB/be returning/VBG/returning ks/NNS/ks of/IN/of c/NN/c /,/, i/PRP/i plus/VBZ/plus 1/CD/1. and/CC/and then/RB/then we/PRP/we need/VBP/need to/TO/to consider/VB/consider the/DT/the other/JJ/other possibility/NN/possibility /,/, which/WDT/which is/VBZ/is that/IN/that we/PRP/we include/VBP/include this/DT/this ith/NN/ith object/NNP/object. but/CC/but /,/, if/IN/if we/PRP/we do/VBP/do include/VBP/include the/DT/the ith/NN/ith object/NN/object there/EX/there are/VBP/are two/CD/two effects/NNP/effects. first/JJ/first of/IN/of we/PRP/we gets/VBZ/gets it/PRP/it value/NNP/value. so/RB/so /,/, we/PRP/we should/MD/should be/VB/be returning/VBG/returning in/IN/in whatever/NN/whatever we/PRP/we return/VBP/return /,/, we/PRP/we should/MD/should improve/VB/improve that/IN/that value/NN/value as/IN/as well/NNP/well. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to return/VB/return v/NN/v of/IN/of i/PRP/i /,/, but/CC/but will/MD/will also/RB/also get/VB/get some/DT/some value/NN/value form/NN/form the/DT/the remaining/VBG/remaining objects/NNP/objects. however/RB/however /,/, when/WRB/when we/PRP/we go/VBP/go for/IN/for the/DT/the remaining/VBG/remaining objects/NNS/objects we/PRP/we would/MD/would not/RB/not have/VB/have the/DT/the full/JJ/full capacity/NN/capacity c/NN/c to/TO/to consider/NNP/consider. but/CC/but /,/, instead/RB/instead will/MD/will have/VB/have a/DT/a capacity/NN/capacity /,/, which/WDT/which is/VBZ/is a/DT/a little/RB/little bit/NN/bit reduced/NNP/reduced. so/RB/so /,/, we/PRP/we should/MD/should we/PRP/we should/MD/should be/VB/be returning/VBG/returning /,/, v/NN/v i/PRP/i plus/VBZ/plus ks/NNS/ks of/IN/of c/NN/c minus/NN/minus width/NN/width of/IN/of i/PRP/i /,/, because/IN/because this/DT/this is/VBZ/is the/DT/the amount/NN/amount by/IN/by which/WDT/which the/DT/the capacity/NN/capacity series/NN/series is/VBZ/is going/VBG/going to/TO/to be/VB/be reduced/NNP/reduced. and/CC/and whatever/NN/whatever choice/NN/choice we/PRP/we can/MD/can make/VB/make from/IN/from i/PRP/i plus/CC/plus 1/CD/1 from/IN/from the/DT/the remaining/VBG/remaining objects/NNP/objects. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we should/MD/should return/VB/return /,/, the/DT/the best/JJS/best of/IN/of this/DT/this quantity/NN/quantity and/CC/and this/DT/this quantity/NNP/quantity. so/RB/so /,/, this/DT/this finishes/NNS/finishes the/DT/the recursive/JJ/recursive implementation/NN/implementation of/IN/of the/DT/the backtrack/NN/backtrack search/NN/search that/WDT/that i/PRP/i have/VBP/have just/RB/just mention/NNP/mention. just/RB/just make/VB/make sure/JJ/sure /,/, that/IN/that we/PRP/we understand/VBP/understand this/NNP/this. let/NN/let us/PRP/us actually/RB/actually execute/VBP/execute this/DT/this /,/, on/IN/on a/DT/a sample/NN/sample on/IN/on our/PRP$/our own/JJ/own example/NN/example /,/, in/IN/in fact/NNP/fact. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 49/CD/49 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down what/WP/what our/PRP$/our vs/NNS/vs and/CC/and ws/NNS/ws are/NNP/are. so/RB/so /,/, our/PRP$/our vs/NNS/vs and/CC/and ws/NNS/ws were/VBD/were v/NN/v was/VBD/was 7/CD/7 2/CD/2 1/CD/1 6/CD/6 12/CD/12. w/NN/w was/VBD/was 3/CD/3 1/CD/1 2/CD/2 4/CD/4 6/CD/6 and/CC/and our/PRP$/our capacity/NN/capacity was/VBD/was 10/CD/10. we/PRP/we started/VBD/started of/IN/of by/IN/by making/VBG/making the/DT/the first/JJ/first call/NN/call /,/, which/WDT/which was/VBD/was ks/NNS/ks of/IN/of 10/CD/10 /,/, 1/CD/1. ks/NNS/ks of/IN/of 10/CD/10 /,/, 1/CD/1 /,/, now/RB/now let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to our/PRP$/our code/NN/code and/CC/and our/PRP$/our value/NN/value of/IN/of n/NN/n was/VBD/was equal/JJ/equal to/TO/to 5/CD/5. so/RB/so /,/, if/IN/if we/PRP/we go/VBP/go back/RB/back to/TO/to our/PRP$/our code/NN/code and/CC/and ask/NN/ask how/WRB/how this/DT/this code/NN/code could/MD/could execute/VB/execute /,/, the/DT/the first/JJ/first step/NN/step we/PRP/we have/VBP/have to/TO/to check/VB/check is/VBZ/is i/PRP/i bigger/JJR/bigger than/IN/than n/NNP/n. n/NN/n is/VBZ/is 5/CD/5 and/CC/and i/PRP/i is/VBZ/is 1/CD/1. so/RB/so /,/, clearly/RB/clearly it/PRP/it does/VBZ/does not/RB/not happen/VB/happen and/NNP/and. so/RB/so /,/, we/PRP/we come/VBP/come to/TO/to situation/NNP/situation. so/RB/so /,/, the/DT/the weight/NN/weight of/IN/of the/DT/the first/JJ/first object/NN/object is/VBZ/is 3/CD/3. /CD/( refer/NN/refer time/NN/time /:/: 24/CD/24 /:/: 46/CD/46 /CD/) and/CC/and the/DT/the capacity/NN/capacity is/VBZ/is certainly/RB/certainly bigger/JJR/bigger than/IN/than that/NNP/that. so/RB/so /,/, this/DT/this is/VBZ/is not/RB/not case/NN/case that/WDT/that we/PRP/we execute/VBP/execute /,/, but/CC/but in/IN/in state/NN/state we/PRP/we execute/VBP/execute this/DT/this case/NNP/case. in/IN/in that/DT/that case/NN/case /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to consider/VB/consider two/CD/two possibilities/NNP/possibilities. one/CD/one is/VBZ/is searching/VBG/searching the/DT/the knapsack/NN/knapsack possibilities/NNS/possibilities /,/, with/IN/with the/DT/the same/JJ/same capacity/NN/capacity and/CC/and i/PRP/i plus/RB/plus 1/CD/1. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw this/DT/this as/IN/as a/DT/a recursion/NN/recursion tree/NNP/tree. so/RB/so /,/, here/RB/here i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get ks/NNS/ks of/IN/of 10/CD/10 /,/, 2/CD/2 and/CC/and of/IN/of this/DT/this side/NN/side i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get whatever/RB/whatever is/VBZ/is whatever/RB/whatever corresponds/VBZ/corresponds to/TO/to this/NNP/this. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 25/CD/25 /:/: 19/CD/19 /CD/) /CD/) but/CC/but /,/, corresponds/NNS/corresponds to/TO/to this/DT/this we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use up/RP/up /,/, out/IN/out of/IN/of the/DT/the c/NN/c capacity/NN/capacity we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use a/DT/a w/NN/w i/PRP/i capacity/NNP/capacity. so/RB/so /,/, w/NN/w of/IN/of 1/CD/1 capacity/NN/capacity is/VBZ/is going/VBG/going to/TO/to get/VB/get used/VBN/used up/RP/up the/DT/the w/NN/w of/IN/of 1/CD/1 capacity/NN/capacity is/VBZ/is 3/CD/3 units/NNP/units. so/RB/so /,/, on/IN/on this/DT/this side/NN/side i/PRP/i am/VBP/am to/TO/to i/PRP/i am/VBP/am going/VBG/going to/TO/to make/VB/make a/DT/a call/NN/call ks/VBZ/ks with/IN/with the/DT/the reaming/VBG/reaming capacity/NN/capacity /,/, which/WDT/which is/VBZ/is 7/CD/7 /,/, 2/CD/2. because/IN/because /,/, now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to only/RB/only consider/JJR/consider objects/NNS/objects starting/VBG/starting at/IN/at the/DT/the second/JJ/second object/NNP/object. in/IN/in this/DT/this manner/NN/manner /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to execute/NNP/execute. so/RB/so /,/, let/VB/let me/PRP/me do/VBP/do a/DT/a few/JJ/few an/DT/an executions/NNS/executions /,/, just/RB/just to/TO/to make/VB/make sure/JJ/sure that/IN/that the/DT/the idea/NN/idea is/VBZ/is understood/NNP/understood. what/WP/what happens/VBZ/happens /,/, when/WRB/when we/PRP/we try/VBP/try ks/NNS/ks of/IN/of 10/CD/10 /,/, 2/CD/2 again/RB/again even/RB/even here/RB/here /,/, we/PRP/we will/MD/will see/VB/see that/IN/that /CD/( /CD/( refer/NN/refer time/NN/time /:/: 25/CD/25 /:/: 57/CD/57 /CD/) /CD/) the/DT/the weight/NN/weight of/IN/of the/DT/the second/JJ/second object/NN/object is/VBZ/is 1/CD/1 and/CC/and that/IN/that is/VBZ/is still/RB/still smaller/JJR/smaller than/IN/than the/DT/the capacity/NNP/capacity. and/CC/and therefore/RB/therefore /,/, we/PRP/we will/MD/will use/VB/use this/DT/this part/NN/part of/IN/of the/DT/the statement/NNP/statement. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing will/MD/will execute/VB/execute is/VBZ/is ks/NNS/ks of/IN/of c/NN/c /,/, i/PRP/i plus/VBZ/plus 1/CD/1 /,/, which/WDT/which is/VBZ/is with/IN/with the/DT/the same/JJ/same capacity/NN/capacity will/MD/will try/VB/try to/TO/to go/VB/go for/IN/for the/DT/the remaining/VBG/remaining object/NNP/object. so/RB/so /,/, will/MD/will be/VB/be executing/VBG/executing ks/NNS/ks of/IN/of 10/CD/10 /,/, 3/CD/3 and/CC/and on/IN/on this/DT/this side/NN/side /,/, we/PRP/we will/MD/will be/VB/be executing/VBG/executing recursive/JJ/recursive call/NN/call corresponding/VBG/corresponding to/TO/to this/DT/this call/NN/call over/IN/over here/NNP/here. /:/( /:/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 33/CD/33 /CD/) /CD/) w/NN/w of/IN/of 2/CD/2 now/RB/now is/VBZ/is this/NNP/this. so/RB/so /,/, will/MD/will have/VB/have to/TO/to decrement/VB/decrement that/IN/that 1/CD/1 from/IN/from that/DT/that and/CC/and therefore/RB/therefore /,/, the/DT/the call/NN/call that/IN/that we/PRP/we execute/VBP/execute over/IN/over here/RB/here will/MD/will be/VB/be ks/NNS/ks of/IN/of 9/CD/9 /,/, 3/CD/3. let/NN/let us/PRP/us do/VBP/do one/CD/one more/RBR/more of/IN/of these/DT/these calls/NNP/calls. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what happens/NNS/happens when/WRB/when case/NN/case of/IN/of 9/CD/9 /,/, 3/CD/3 is/VBZ/is executed/VBN/executed further/NNP/further. so/RB/so /,/, again/RB/again if/IN/if you/PRP/you go/VBP/go back/RB/back to/TO/to this/DT/this procedure/NN/procedure /,/, you/PRP/you will/MD/will see/VB/see that/IN/that even/RB/even here/RB/here the/DT/the capacity/NN/capacity is/VBZ/is larger/JJR/larger than/IN/than this/DT/this w/NN/w i/PRP/i /,/, w/VBP/w of/IN/of 3/CD/3. w/NN/w of/IN/of 3/CD/3 is/VBZ/is 2/CD/2 and/CC/and it/PRP/it is/VBZ/is still/RB/still larger/JJR/larger and/CC/and therefore/RB/therefore /,/, this/DT/this will/MD/will get/VB/get executed/NNP/executed. /NNP/( refer/NN/refer time/NN/time /:/: 27/CD/27 /:/: 09/CD/09 /CD/) so/RB/so /,/, again/RB/again there/EX/there will/MD/will be/VB/be two/CD/two children/NNS/children /,/, two/CD/two recursive/JJ/recursive calls/NNP/calls. so/RB/so /,/, the/DT/the first/JJ/first one/CD/one will/MD/will simply/RB/simply be/VB/be ks/NNS/ks of/IN/of 9/CD/9 /,/, 4/CD/4 and/CC/and on/IN/on this/DT/this side/NN/side /,/, the/DT/the call/NN/call would/MD/would be/VB/be ks/NNS/ks of/IN/of c/NN/c minus/NN/minus w/NN/w i/NNP/i. so/RB/so /,/, c/NN/c minus/NN/minus w/NN/w i/PRP/i this/DT/this time/NN/time is/VBZ/is this/NNP/this. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be 7/CD/7 /,/, 4/CD/4. let/NN/let us/PRP/us do/VBP/do something/NN/something on/IN/on this/DT/this side/NN/side and/NNP/and. so/RB/so /,/, what/WDT/what happens/NNS/happens over/IN/over here/NNP/here. so/RB/so /,/, case/NN/case of/IN/of 7/CD/7 /,/, 2/CD/2 if/IN/if we/PRP/we execute/VBP/execute we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, first/JJ/first we/PRP/we will/MD/will execute/VB/execute ks/NNS/ks of/IN/of 7/CD/7 /,/, 3/CD/3 this/DT/this corresponds/NNS/corresponds to/TO/to the/DT/the possibility/NN/possibility that/IN/that we/PRP/we do/VBP/do not/RB/not choose/VB/choose the/DT/the third/JJ/third object/NNP/object. they/PRP/they will/MD/will of/IN/of course/NN/course /,/, be/VB/be corresponding/VBG/corresponding exploration/NN/exploration on/IN/on this/DT/this side/NN/side where/WRB/where /,/, we/PRP/we do/VBP/do choose/RB/choose the/DT/the third/JJ/third object/NNP/object. but/CC/but /,/, even/RB/even here/RB/here there/EX/there will/MD/will be/VB/be two/CD/two possibilities/NNS/possibilities ks/NNS/ks of/IN/of 7/CD/7 /,/, 4/CD/4 and/CC/and on/IN/on this/DT/this side/NN/side the/DT/the possibility/NN/possibility that/IN/that we/PRP/we choose/VBP/choose the/DT/the third/JJ/third object/NNP/object. so/RB/so /,/, whatever/IN/whatever that/DT/that is/NNP/is. at/IN/at this/DT/this point/NN/point i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to do/VB/do two/CD/two things/NNS/things /,/, first/JJ/first of/IN/of all/DT/all i/PRP/i like/VBP/like to/TO/to make/VB/make sure/JJ/sure that/IN/that this/DT/this picture/NN/picture is/VBZ/is understood/NNP/understood. what/WP/what we/PRP/we have/VBP/have drawn/VBN/drawn in/IN/in this/DT/this picture/NN/picture is/VBZ/is /,/, what/WP/what is/VBZ/is popularly/RB/popularly called/VBN/called recursion/NN/recursion tree/NNP/tree. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first recursive/JJ/recursive called/VBN/called we/PRP/we need/VBP/need /,/, that/IN/that call/NN/call give/VBP/give raise/NN/raise to/TO/to this/DT/this recursive/JJ/recursive call/NN/call and/CC/and this/DT/this recursive/JJ/recursive call/NN/call /,/, that/IN/that in/IN/in terms/NNS/terms give/VBP/give raise/NN/raise to/TO/to these/DT/these two/CD/two recursive/JJ/recursive calls/NNS/calls just/RB/just will/MD/will give/VB/give raise/VB/raise to/TO/to this/DT/this call/NN/call and/CC/and some/DT/some other/JJ/other call/NN/call over/IN/over here/RB/here and/CC/and so/RB/so on/NNP/on. but/CC/but that/IN/that is/VBZ/is of/IN/of course/NN/course /,/, quite/RB/quite routine/JJ/routine /,/, the/DT/the most/RBS/most interesting/JJ/interesting parts/NNS/parts of/IN/of this/DT/this picture/NN/picture are/VBP/are these/DT/these two/CD/two calls/NNP/calls. this/DT/this should/MD/should really/RB/really write/VB/write as/IN/as ks/NNP/ks. so/RB/so /,/, there/EX/there is/VBZ/is something/NN/something very/RB/very interesting/JJ/interesting about/IN/about these/DT/these two/CD/two calls/NNP/calls. they/PRP/they are/VBP/are identical/NNP/identical. what/WP/what is/VBZ/is it/PRP/it mean/JJ/mean /,/, in/IN/in this/DT/this part/NN/part of/IN/of the/DT/the tree/NN/tree i/PRP/i am/VBP/am going/VBG/going to/TO/to make/VB/make a/DT/a procedure/NN/procedure call/NN/call with/IN/with parameter/NN/parameter 7/CD/7 and/CC/and 4/CD/4. and/CC/and i/PRP/i am/VBP/am also/RB/also going/VBG/going to/TO/to make/VB/make procedure/NN/procedure call/NN/call this/DT/this side/NN/side /,/, also/RB/also with/IN/with parameters/NNS/parameters 7/CD/7 and/CC/and 4/CD/4. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the beauty/NNP/beauty. so/RB/so /,/, this/DT/this is/VBZ/is where/WRB/where the/DT/the optimization/NN/optimization can/MD/can come/VB/come in/NNP/in. once/RB/once i/PRP/i explore/VBP/explore this/DT/this search/NN/search tree/NN/tree underneath/NN/underneath this/DT/this /,/, i/PRP/i won/VBD/won not/RB/not need/VBN/need to/TO/to explore/VB/explore this/DT/this search/NN/search tree/NN/tree again/NNP/again. if/IN/if i/PRP/i store/VBP/store the/DT/the value/NN/value /,/, that/IN/that i/PRP/i get/VBP/get from/IN/from this/DT/this call/NN/call /,/, then/RB/then when/WRB/when i/PRP/i come/VBP/come to/TO/to this/DT/this portion/NNP/portion. if/IN/if i/PRP/i just/RB/just need/VBP/need to/TO/to look/VB/look it/PRP/it up/RP/up /,/, i/PRP/i will/MD/will just/RB/just look/VB/look it/PRP/it up/RP/up and/CC/and i/PRP/i will/MD/will get/VB/get it/NNP/it. in/IN/in fact/NN/fact /,/, that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be my/PRP$/my default/NN/default idea/NNP/idea. whenever/NN/whenever i/PRP/i calculate/VBP/calculate the/DT/the value/NN/value of/IN/of a/DT/a certain/JJ/certain recursive/JJ/recursive call/NN/call /,/, i/PRP/i will/MD/will actually/RB/actually stored/VBN/stored it/PRP/it in/IN/in a/DT/a table/NNP/table. before/IN/before embarking/VBG/embarking on/IN/on any/DT/any recursive/JJ/recursive call/NN/call /,/, i/PRP/i will/MD/will first/RB/first check/VB/check if/IN/if the/DT/the table/NN/table already/RB/already contains/VBZ/contains are/VBP/are value/NN/value /,/, if/IN/if it/PRP/it does/VBZ/does i/PRP/i will/MD/will just/RB/just use/VB/use that/IN/that value/NNP/value. if/IN/if it/PRP/it does/VBZ/does not/RB/not then/RB/then i/PRP/i will/MD/will calculate/VB/calculate that/IN/that value/NNP/value. but/CC/but at/IN/at the/DT/the end/NN/end of/IN/of it/PRP/it i/PRP/i will/MD/will stored/VB/stored it/PRP/it in/IN/in the/DT/the table/NN/table that/IN/that is/VBZ/is basically/RB/basically the/DT/the idea/NN/idea that/IN/that is/VBZ/is basically/RB/basically the/DT/the optimization/NN/optimization that/IN/that i/PRP/i was/VBD/was talking/VBG/talking about/NNP/about. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that by/IN/by viewing/VBG/viewing /,/, what/WP/what remains/VBZ/remains to/TO/to be/VB/be done/VBN/done rather/RB/rather than/IN/than thinking/VBG/thinking of/IN/of this/DT/this search/NN/search tree/NN/tree as/IN/as an/DT/an exploration/NN/exploration /,/, in/IN/in which/WDT/which you/PRP/you are/VBP/are extending/VBG/extending solutions/NNP/solutions. it/PRP/it is/VBZ/is in/IN/in this/DT/this new/JJ/new view/NN/view of/IN/of things/NNS/things ;/:/; it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to determine/VB/determine that/IN/that the/DT/the work/NN/work over/IN/over here/RB/here is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the work/NN/work over/IN/over here/NNP/here. and/CC/and thereby/VB/thereby /,/, we/PRP/we can/MD/can do/VB/do this/DT/this optimization/NN/optimization that/IN/that we/PRP/we that/IN/that i/PRP/i just/RB/just mention/NNP/mention. so/RB/so /,/, let/VB/let me/PRP/me let/VB/let me/PRP/me now/RB/now flush/VBP/flush out/RP/out this/DT/this optimization/NN/optimization for/IN/for you/NNP/you. so/RB/so /,/, we/PRP/we will/MD/will go/VB/go back/RB/back to/TO/to the/DT/the same/JJ/same code/NN/code and/CC/and now/RB/now i/PRP/i will/MD/will write/VB/write down/IN/down /,/, what/WP/what is/VBZ/is the/DT/the corresponding/NN/corresponding code/NN/code with/IN/with the/DT/the optimization/NNP/optimization. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down in/IN/in different/JJ/different color/NNP/color. so/RB/so /,/, if/IN/if i/PRP/i greater/JJR/greater than/IN/than n/NN/n then/RB/then return/NN/return 0/-NONE-/0 is/VBZ/is the/DT/the idea/NN/idea over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that before/IN/before returning/VBG/returning any/DT/any value/NN/value /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to store/VB/store it/PRP/it in/IN/in some/DT/some table/NNP/table. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 29/CD/29 /CD/) so/RB/so /,/, instead/RB/instead of/IN/of that/DT/that instead/RB/instead of/IN/of just/RB/just returning/VBG/returning 0/-NONE-/0 /,/, this/DT/this part/NN/part of/IN/of the/DT/the code/NN/code will/MD/will be/VB/be replaced/VBN/replaced by/IN/by this/DT/this part/NNP/part. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to still/RB/still check/VB/check /,/, if/IN/if i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than n/NNP/n. but/CC/but if/IN/if it/PRP/it is/VBZ/is then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to we/PRP/we are/VBP/are going/VBG/going to/TO/to set/VB/set table/JJ/table of/IN/of c/NN/c /,/, i/PRP/i equal/JJ/equal to/TO/to 0/-NONE-/0 and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to return/VB/return table/JJ/table of/IN/of c/NN/c /,/, i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what /,/, this/DT/this statement/NN/statement is/VBZ/is going/VBG/going to/TO/to be/VB/be replaced/VBN/replaced by/IN/by in/IN/in our/PRP$/our optimized/JJ/optimized version/NNP/version. let/NN/let me/PRP/me just/RB/just remind/VBP/remind you/PRP/you that/IN/that /,/, that/IN/that the/DT/the idea/NN/idea is/VBZ/is to/TO/to remember/VB/remember value/NN/value is/VBZ/is before/IN/before we/PRP/we calculate/VBP/calculate them/NNP/them. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 21/CD/21 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have another/DT/another global/JJ/global array/NN/array called/VBN/called table/NNP/table. and/CC/and table/JJ/table is/VBZ/is going/VBG/going to/TO/to have/VB/have /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a two/CD/two dimensional/JJ/dimensional array/NNP/array. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have /,/, the/DT/the first/JJ/first index/NN/index correspond/NN/correspond to/TO/to all/DT/all possible/JJ/possible capacities/NNS/capacities and/CC/and the/DT/the second/JJ/second index/NN/index correspond/NN/correspond to/TO/to all/DT/all i/PRP/i ?/./? s/NNS/s /,/, all/DT/all the/DT/the possible/JJ/possible values/NNS/values of/IN/of i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be /,/, i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be from/IN/from 1/CD/1 to/TO/to well/RB/well n/VB/n and/CC/and as/IN/as we/PRP/we saw/VBD/saw our/PRP$/our base/NN/base case/NN/case actually/RB/actually takes/VBZ/takes at/IN/at beyond/NN/beyond n/NNP/n. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be n/VBN/n plus/CC/plus 1/CD/1. so/RB/so /,/, the/DT/the second/JJ/second dimension/NN/dimension is/VBZ/is going/VBG/going to/TO/to be/VB/be n/VBN/n plus/CC/plus 1/CD/1 /,/, c/NN/c is/VBZ/is going/VBG/going to/TO/to be/VB/be in/IN/in the/DT/the range/NN/range 0/-NONE-/0 through/IN/through whatever/NN/whatever value/NN/value /,/, so/RB/so the/DT/the capacity/NN/capacity given/NNP/given. so/RB/so /,/, in/IN/in fact/NN/fact /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is little/RB/little c/JJ/c and/NNP/and. so/RB/so /,/, little/RB/little c/NN/c 0/-NONE-/0 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to little/JJ/little c/NN/c /,/, less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to capital/NN/capital c/NNP/c. so/RB/so /,/, the/DT/the first/JJ/first index/NN/index of/IN/of the/DT/the first/JJ/first dimension/NN/dimension will/MD/will have/VB/have this/DT/this range/NN/range /,/, this/DT/this is/VBZ/is the/DT/the two/CD/two dimensional/JJ/dimensional array/NN/array in/IN/in which/WDT/which /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to store/VB/store our/PRP$/our values/NNP/values. what/WP/what about/IN/about this/DT/this if/IN/if c/NN/c is/VBZ/is less/JJR/less than/IN/than w/NN/w i/PRP/i return/VBP/return ks/NNS/ks of/IN/of c/NN/c i/PRP/i plus1/NNP/plus1. we/PRP/we just/RB/just define/VBP/define the/DT/the rule/NN/rule and/CC/and we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to follow/VB/follow it/NNP/it. so/RB/so /,/, instead/RB/instead of/IN/of returning/VBG/returning case/NN/case of/IN/of c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1 /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to first/JJ/first check/NNP/check. so/RB/so /,/, the/DT/the way/NN/way we/PRP/we check/VBP/check /,/, i/PRP/i will/MD/will just/RB/just write/VB/write down/RP/down the/DT/the code/NN/code corresponding/VBG/corresponding to/TO/to this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check /,/, if/IN/if table/JJ/table of/IN/of c/NN/c /,/, i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is not/RB/not calculated/VBN/calculated and/CC/and that/IN/that i/PRP/i will/MD/will denote/VB/denote by/IN/by null/NNP/null. then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to actually/RB/actually calculated/NNP/calculated. so/RB/so /,/, will/MD/will calculate/VB/calculate table/JJ/table of/IN/of c/NN/c /,/, i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to ks/NNS/ks of/IN/of c/NN/c /,/, i/PRP/i plus/VBZ/plus 1/CD/1. and/CC/and then/RB/then we/PRP/we will/MD/will return/VB/return table/JJ/table of/IN/of c/NN/c /,/, i/PRP/i plus/VBZ/plus 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be /,/, what/WDT/what this/DT/this code/NN/code is/VBZ/is will/MD/will replace/VB/replace this/DT/this code/NN/code over/IN/over here/NNP/here. similarly/RB/similarly /,/, we/PRP/we will/MD/will have/VB/have code/NN/code /,/, which/WDT/which will/MD/will replace/VB/replace this/DT/this as/IN/as well/NNP/well. so/RB/so /,/, corresponding/VBG/corresponding to/TO/to this/DT/this we/PRP/we will/MD/will just/RB/just make/VB/make a/DT/a check/NN/check in/IN/in c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1 here/NNP/here. so/RB/so /,/, this/DT/this part/NN/part will/MD/will really/RB/really with/IN/with the/DT/the same/JJ/same as/IN/as this/DT/this and/CC/and instead/RB/instead of/IN/of this/DT/this /,/, will/MD/will make/VB/make a/DT/a check/NN/check in/IN/in a/DT/a slightly/RB/slightly different/JJ/different position/NNP/position. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down as/IN/as well/NNP/well. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down separately/RB/separately over/IN/over here/NNP/here. so/RB/so /,/, return/NN/return /:/( /:/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 19/CD/19 /CD/) /CD/) of/IN/of c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is going/VBG/going to/TO/to be/VB/be done/VBN/done by/IN/by first/JJ/first checking/NN/checking whether/IN/whether case/NN/case of/IN/of c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1 has/VBZ/has been/VBN/been calculated/NNP/calculated. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 28/CD/28 /CD/) so/RB/so /,/, that/IN/that is/VBZ/is as/IN/as good/JJ/good as/IN/as saying/VBG/saying if/IN/if table/JJ/table of/NNP/of. so/RB/so /,/, return/NN/return this/DT/this expression/NN/expression is/VBZ/is going/VBG/going to/TO/to be/VB/be done/VBN/done by/IN/by checking/NN/checking this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check if/IN/if table/JJ/table of/IN/of c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to null/NNP/null. so/RB/so /,/, in/IN/in that/DT/that case/NN/case we/PRP/we are/VBP/are going/VBG/going to/TO/to calculated/NNP/calculated. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to set/VB/set table/JJ/table of/IN/of c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1 equal/JJ/equal to/TO/to ks/NNS/ks of/IN/of c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1. then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to check/VB/check whether/IN/whether this/DT/this has/VBZ/has been/VBN/been calculated/VBN/calculated as/IN/as well/RB/well /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 15/CD/15 /CD/) /CD/) so/RB/so /,/, that/IN/that is/VBZ/is as/IN/as could/MD/could as/IN/as saying/VBG/saying /,/, if/IN/if table/JJ/table of/IN/of c/NN/c minus/NN/minus w/NN/w i/PRP/i /,/, i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to null/NNP/null. then/RB/then we/PRP/we actually/RB/actually calculated/VBN/calculated /,/, table/JJ/table of/IN/of c/NN/c minus/NN/minus w/NN/w i/PRP/i /,/, i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to ks/NNS/ks of/IN/of c/NN/c i/PRP/i plus/VBZ/plus 1/CD/1. and/CC/and then/RB/then finally/RB/finally /,/, we/PRP/we will/MD/will just/RB/just return/VB/return the/DT/the maximum/NN/maximum of/IN/of these/DT/these two/CD/two quantities/NNS/quantities /:/( /:/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 54/CD/54 /CD/) /CD/) and/CC/and that/IN/that is/VBZ/is done/VBN/done simply/RB/simply by/IN/by saying/VBG/saying /,/, return/NN/return max/NN/max of/IN/of table/JJ/table of/IN/of c/NN/c /,/, i/PRP/i plus/VBZ/plus 1.and/CD/1.and v/NN/v of/IN/of i/PRP/i plus/VBZ/plus table/JJ/table of/IN/of c/NN/c minus/NN/minus w/NN/w i/PRP/i /,/, i/PRP/i plus/VBZ/plus 1/CD/1. so/RB/so /,/, this/DT/this code/NN/code will/MD/will replace/VB/replace this/DT/this last/JJ/last code/NN/code in/IN/in your/PRP$/your program/NNP/program. so/RB/so /,/, should/MD/should be/VB/be clear/JJ/clear to/TO/to you/PRP/you /,/, that/DT/that this/DT/this new/JJ/new code/NN/code that/WDT/that we/PRP/we have/VBP/have return/NNP/return. because/IN/because /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to do/VB/do less/JJR/less work/VB/work because/IN/because some/DT/some parts/NNS/parts of/IN/of the/DT/the search/NN/search tree/NN/tree /,/, which/WDT/which were/VBD/were explored/VBN/explored several/JJ/several times/NNS/times in/IN/in the/DT/the original/JJ/original code/NN/code will/MD/will now/RB/now be/VB/be explored/VBN/explored exactly/RB/exactly once/NNP/once. but/CC/but /,/, now/RB/now you/PRP/you would/MD/would like/VB/like to/TO/to prove/VB/prove by/IN/by how/WRB/how much/JJ/much precisely/RB/precisely the/DT/the work/NN/work gets/VBZ/gets reduced/NNP/reduced. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 56/CD/56 /CD/) so/RB/so /,/, we/PRP/we come/VBP/come to/TO/to the/DT/the analysis/NNP/analysis. normally/RB/normally when/WRB/when you/PRP/you write/VBP/write recursive/JJ/recursive algorithms/NNS/algorithms /,/, the/DT/the idea/NN/idea is/VBZ/is that/IN/that will/MD/will write/VB/write to/TO/to recurrence/VB/recurrence for/IN/for the/DT/the time/NN/time taken/VBN/taken and/CC/and we/PRP/we will/MD/will saw/VB/saw /:/( refer/NN/refer time/NN/time /:/: 38/CD/38 /:/: 07/CD/07 /CD/) /./. in/IN/in the/DT/the case/NN/case of/IN/of dynamic/JJ/dynamic programming/NN/programming and/CC/and in/IN/in particular/JJ/particular /,/, where/WRB/where we/PRP/we stored/VBD/stored these/DT/these values/NNS/values in/IN/in a/DT/a table/NN/table and/CC/and use/VBP/use them/PRP/them as/IN/as needed/VBN/needed /,/, this/DT/this recursive/JJ/recursive estimate/NN/estimate is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be very/RB/very good/NNP/good. it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be an/DT/an over/IN/over estimate/NNP/estimate. so/RB/so /,/, we/PRP/we need/VBP/need something/NN/something much/RB/much more/RBR/more precise/JJ/precise /,/, we/PRP/we can/MD/can produce/VB/produce an/DT/an estimate/NN/estimate ;/:/; we/PRP/we can/MD/can produce/VB/produce a/DT/a way/NN/way of/IN/of doing/VBG/doing that/IN/that estimate/NN/estimate /,/, which/WDT/which gives/VBZ/gives us/PRP/us much/RB/much sharper/JJR/sharper bounds/NNP/bounds. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the idea/NNP/idea. so/RB/so /,/, think/VBP/think of/IN/of this/DT/this way/NN/way as/IN/as the/DT/the computer/NN/computer executes/VBZ/executes each/DT/each line/NN/line of/IN/of the/DT/the code/NNP/code. suppose/NN/suppose /,/, it/PRP/it writes/VBZ/writes the/DT/the diary/JJ/diary /,/, in/IN/in the/DT/the diary/JJ/diary it/PRP/it is/VBZ/is going/VBG/going to/TO/to write/VB/write the/DT/the following/VBG/following things/NNP/things. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call this/DT/this diary/JJ/diary /,/, it/PRP/it is/VBZ/is customary/JJ/customary to/TO/to call/VB/call this/DT/this diary/JJ/diary a/DT/a transcript/NNP/transcript. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a transcript/NN/transcript of/IN/of the/DT/the execution/NNP/execution. so/RB/so /,/, the/DT/the computer/NN/computer is/VBZ/is going/VBG/going to/TO/to write/VB/write down/RP/down /,/, the/DT/the line/NN/line number/NN/number in/IN/in the/DT/the program/NNP/program. then/RB/then it/PRP/it is/VBZ/is going/VBG/going to/TO/to write/VB/write down/RP/down /,/, the/DT/the value/NN/value of/IN/of c/NN/c that/IN/that is/VBZ/is the/DT/the correctly/RB/correctly it/PRP/it has/VBZ/has and/CC/and then/RB/then the/DT/the value/NN/value of/IN/of i/PRP/i that/IN/that it/PRP/it currently/RB/currently it/PRP/it has/VBZ/has ?/./? it/PRP/it is/VBZ/is going/VBG/going to/TO/to write/VB/write down/RP/down a/DT/a triple/NN/triple /,/, like/IN/like this/NNP/this. so/RB/so /,/, it/PRP/it will/MD/will write/VB/write down/IN/down once/RB/once such/JJ/such triple/NN/triple every/DT/every time/NN/time it/PRP/it executes/VBZ/executes a/DT/a line/NN/line in/IN/in the/DT/the program/NN/program /,/, where/WRB/where we/PRP/we did/VBD/did in/IN/in this/NNP/this. this/DT/this will/MD/will become/VB/become clear/JJ/clear in/IN/in just/RB/just a/DT/a minute/NN/minute /,/, if/IN/if the/DT/the idea/NN/idea is/VBZ/is clear/NNP/clear. so/RB/so /,/, let/VB/let me/PRP/me take/VB/take an/DT/an example/NNP/example. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my code/NNP/code. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we have/VBP/have number/NN/number the/DT/the lines/NNS/lines in/IN/in this/DT/this code/NN/code /,/, some/DT/some going/VBG/going to/TO/to for/IN/for simplicity/NNP/simplicity. i/PRP/i am/VBP/am going/VBG/going to/TO/to think/VB/think of/IN/of this/DT/this has/VBZ/has been/VBN/been my/PRP$/my code/NN/code or/CC/or actually/RB/actually i/PRP/i could/MD/could do/VB/do this/DT/this as/IN/as well/NNP/well. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 06/CD/06 /CD/) /CD/) so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my this/DT/this is/VBZ/is line/NN/line number/NN/number 1/CD/1 /,/, this/DT/this is/VBZ/is line/NN/line number/NN/number 2/CD/2 /,/, this/DT/this is/VBZ/is line/NN/line number/NN/number 2/CD/2 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, give/JJ/give numbers/NNS/numbers to/TO/to every/DT/every line/NN/line in/IN/in this/DT/this program/NNP/program. and/CC/and i/PRP/i have/VBP/have added/VBN/added some/DT/some lines/NNS/lines over/IN/over here/NNP/here. so/RB/so /,/, i/PRP/i will/MD/will give/VB/give numbers/NNS/numbers these/DT/these lines/NNS/lines as/IN/as well/RB/well /,/, maybe/RB/maybe this/DT/this is/VBZ/is line/NN/line number/NN/number 14/CD/14 /,/, /:/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 22/CD/22 /CD/) this/DT/this is/VBZ/is line/NN/line number/NN/number 15/CD/15 /,/, this/DT/this is/VBZ/is line/NN/line number/NN/number 16/CD/16 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, i/PRP/i have/VBP/have given/VBN/given numbers/NNS/numbers to/TO/to everything/NN/everything whatever/NN/whatever /,/, this/DT/this is/VBZ/is line/NN/line number/NN/number 20/CD/20. so/RB/so /,/, when/WRB/when the/DT/the programs/NNS/programs starts/VBZ/starts executing/VBG/executing /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to be/VB/be making/VBG/making the/DT/the call/NN/call ks/VBZ/ks of/IN/of c/NN/c i/NNP/i. so/RB/so /,/, what/WDT/what will/MD/will the/DT/the computer/NN/computer write/NN/write the/DT/the first/JJ/first time/NN/time around/NNP/around. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be my/PRP$/my line/NN/line number/NN/number 1/CD/1 whatever/NN/whatever /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be my/PRP$/my number/NN/number 1/CD/1 /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be line/NN/line number/NN/number 2/CD/2 and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 54/CD/54 /CD/) so/RB/so /,/, my/PRP$/my transcript/NN/transcript of/IN/of my/PRP$/my program/NN/program is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the line/NN/line number/NN/number /,/, which/WDT/which is/VBZ/is 1/CD/1 /,/, what/WP/what will/MD/will be/VB/be the/DT/the value/NN/value of/IN/of cb/NN/cb /,/, the/DT/the first/JJ/first time/NN/time the/DT/the value/NN/value of/IN/of c/NN/c is/VBZ/is 10/CD/10 and/CC/and the/DT/the value/NN/value of/IN/of i/PRP/i is/VBZ/is 1/CD/1. so/RB/so /,/, this/DT/this will/MD/will be/VB/be the/DT/the first/JJ/first entry/NN/entry in/IN/in my/PRP$/my transcript/NNP/transcript. the/DT/the next/JJ/next entry/NN/entry in/IN/in my/PRP$/my transcript/NN/transcript is/VBZ/is /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to execute/VB/execute the/DT/the next/JJ/next line/NN/line of/IN/of the/DT/the program/NN/program 2/CD/2 /,/, 10/CD/10 and/CC/and 1/CD/1. as/IN/as i/PRP/i keep/VBP/keep writing/VBG/writing at/IN/at some/DT/some points/NNS/points /,/, things/NNS/things will/MD/will change/VB/change /,/, of/IN/of course/NN/course the/DT/the line/NN/line number/NN/number will/MD/will change/VB/change almost/RB/almost every/DT/every time/NNP/time. but/CC/but /,/, at/IN/at some/DT/some points/NNS/points this/DT/this 10/CD/10 will/MD/will also/RB/also change/VB/change /,/, the/DT/the 10/CD/10 will/MD/will change/VB/change according/VBG/according to/TO/to my/PRP$/my execution/NN/execution tree/NN/tree /,/, which/WDT/which i/PRP/i drawn/VBP/drawn over/IN/over here/NNP/here. so/RB/so /,/, in/IN/in this/DT/this execution/NN/execution tree/NN/tree as/IN/as i/PRP/i started/VBD/started up/RP/up with/IN/with ks/NNS/ks 10/CD/10 1/CD/1 /,/, but/CC/but then/RB/then i/PRP/i went/VBD/went on/IN/on to/TO/to ks/NNS/ks 10/CD/10 2/CD/2. so/RB/so /,/, at/IN/at some/DT/some point/NN/point during/IN/during this/DT/this execution/NN/execution /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get again/RB/again the/DT/the 1/CD/1 /,/, 10/CD/10 /,/, 2/CD/2. so/RB/so /,/, this/DT/this corresponds/NNS/corresponds to/TO/to the/DT/the first/JJ/first recursive/JJ/recursive call/NNP/call. and/CC/and similarly/RB/similarly /,/, the/DT/the different/JJ/different recursive/JJ/recursive calls/NNS/calls will/MD/will come/VB/come out/RP/out over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be my/PRP$/my transcript/NNP/transcript. how/WRB/how will/MD/will you/PRP/you lines/VBZ/lines will/MD/will there/RB/there be/VB/be in/IN/in this/DT/this transcript/NNP/transcript. how/WRB/how many/JJ/many triples/NNS/triples will/MD/will there/VB/there be/VB/be in/IN/in this/DT/this transcript/NN/transcript /,/, clearly/RB/clearly number/NN/number of/IN/of triples/NNS/triples is/VBZ/is exactly/RB/exactly equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of time/NN/time steps/NNP/steps. because/IN/because at/IN/at every/DT/every step/NN/step /,/, the/DT/the every/NN/every step/NN/step the/DT/the computer/NN/computer takes/VBZ/takes /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to make/VB/make one/CD/one entry/NN/entry into/IN/into its/PRP$/its diary/JJ/diary or/CC/or it/PRP/it is/VBZ/is transcript/VBN/transcript and/CC/and that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be triples/NNP/triples. so/RB/so /,/, the/DT/the number/NN/number of/IN/of triples/NNS/triples is/VBZ/is exactly/RB/exactly equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of time/NN/time steps/NNP/steps. so/RB/so /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to estimate/VB/estimate the/DT/the time/NN/time taken/VBN/taken by/IN/by this/DT/this computer/NN/computer on/IN/on this/DT/this particular/JJ/particular problem/NN/problem /,/, all/DT/all i/PRP/i need/VBP/need to/TO/to do/VB/do is/VBZ/is to/TO/to count/NN/count how/WRB/how many/JJ/many triples/NNS/triples /,/, i/PRP/i have/VBP/have in/IN/in my/PRP$/my diary/NN/diary or/CC/or in/IN/in this/DT/this transcript/NNP/transcript. you/PRP/you might/MD/might now/RB/now wonder/VB/wonder /,/, what/WDT/what is/VBZ/is the/DT/the big/JJ/big deal/NN/deal we/PRP/we want/VBP/want to/TO/to estimate/VB/estimate time/NN/time /,/, now/RB/now we/PRP/we want/VBP/want to/TO/to estimate/VB/estimate triples/NNS/triples there/RB/there is/VBZ/is actually/RB/actually rather/RB/rather interesting/JJ/interesting property/NN/property to/TO/to do/VB/do with/IN/with these/DT/these triples/NNP/triples. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 08/CD/08 /CD/) and/CC/and this/DT/this idea/NN/idea is/VBZ/is /,/, that/IN/that every/DT/every triple/NN/triple in/IN/in this/DT/this transcript/NN/transcript must/MD/must be/VB/be different/JJ/different transcript/NN/transcript will/MD/will have/VB/have to/TO/to be/VB/be different/NNP/different. so/RB/so /,/, what/WDT/what i/PRP/i am/VBP/am cleaning/VBG/cleaning is/VBZ/is that/IN/that if/IN/if this/DT/this is/VBZ/is the/DT/the transcript/NN/transcript that/IN/that my/PRP$/my computer/NN/computer wrote/VBD/wrote /,/, then/RB/then subsequently/RB/subsequently i/PRP/i am/VBP/am not/RB/not ever/RB/ever going/VBG/going to/TO/to see/VB/see the/DT/the entry/NN/entry 1/CD/1 /,/, 10/CD/10 /,/, 2/CD/2 again/NNP/again. so/RB/so /,/, this/DT/this is/VBZ/is never/RB/never going/VBG/going to/TO/to happen/VB/happen /,/, why/WRB/why is/VBZ/is that/IN/that the/DT/the answer/NN/answer to/TO/to that/DT/that comes/VBZ/comes in/IN/in the/DT/the changes/NNS/changes that/WDT/that we/PRP/we made/NNP/made. so/RB/so /,/, if/IN/if some/DT/some entry/NN/entry reappears/NNS/reappears /,/, then/RB/then that/IN/that means/NNS/means the/DT/the computer/NN/computer is/VBZ/is executing/VBG/executing that/IN/that same/JJ/same statement/NN/statement /,/, whatever/RB/whatever the/DT/the statement/NN/statement is/VBZ/is with/IN/with the/DT/the same/JJ/same two/CD/two previous/JJ/previous parameters/NNS/parameters /,/, same/JJ/same two/CD/two values/NNS/values of/IN/of c/NN/c and/CC/and i/NNP/i. but/CC/but then/RB/then ;/:/; that/DT/that means/VBZ/means /,/, the/DT/the ks/NNS/ks must/MD/must have/VB/have been/VBN/been called/VBN/called with/IN/with exactly/RB/exactly those/DT/those two/CD/two values/NNS/values c/NN/c and/CC/and i/PRP/i again/RB/again twice/JJ/twice at/IN/at least/NNP/least. but/CC/but /,/, that/IN/that was/VBD/was precisely/RB/precisely the/DT/the point/NN/point of/IN/of the/DT/the changes/NNS/changes that/WDT/that we/PRP/we made/NNP/made. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that before/IN/before we/PRP/we make/VBP/make a/DT/a call/NN/call to/TO/to ks/NNS/ks /,/, the/DT/the computer/NN/computer actually/RB/actually checks/NNP/checks. did/VBD/did i/PRP/i already/RB/already execute/VBP/execute this/DT/this call/NN/call /,/, if/IN/if i/PRP/i did/VBD/did execute/JJ/execute the/DT/the call/NN/call /,/, i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to pick/VB/pick up/RP/up that/DT/that value/NN/value from/IN/from my/PRP$/my table/NNP/table. and/CC/and therefore/RB/therefore /,/, we/PRP/we know/VBP/know that/IN/that the/DT/the computer/NN/computer never/RB/never makes/VBZ/makes a/DT/a called/VBN/called to/TO/to ks/NNS/ks /,/, twice/NN/twice with/IN/with the/DT/the same/JJ/same values/NNP/values. so/IN/so /,/, that/IN/that from/IN/from that/DT/that it/PRP/it follows/VBZ/follows /,/, the/DT/the every/NN/every triple/NN/triple in/IN/in the/DT/the transcript/NN/transcript will/MD/will have/VB/have to/TO/to be/VB/be different/NNP/different. that/IN/that gives/VBZ/gives us/PRP/us a/DT/a good/JJ/good way/NN/way to/TO/to estimate/VB/estimate the/DT/the total/JJ/total length/NN/length of/IN/of the/DT/the transcript/NNP/transcript. we/PRP/we just/RB/just count/VBP/count /,/, how/WRB/how many/JJ/many different/JJ/different triples/NNS/triples can/MD/can there/VB/there be/NNP/be. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to the/DT/the place/NN/place where/WRB/where /,/, we/PRP/we wrote/VBD/wrote down/RP/down whatever/RB/whatever triples/VBZ/triples were/NNP/were. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our definition/NN/definition of/IN/of triples/NNP/triples. so/RB/so /,/, since/IN/since every/DT/every triple/NN/triple has/VBZ/has to/TO/to be/VB/be different/JJ/different /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 45/CD/45 /:/: 12/CD/12 /CD/) /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 13/CD/13 /CD/) the/DT/the total/JJ/total length/NN/length of/IN/of the/DT/the transcript/NN/transcript will/MD/will be/VB/be /,/, at/IN/at most/JJS/most the/DT/the number/NN/number of/IN/of different/JJ/different triples/NNS/triples that/WDT/that are/VBP/are possible/NNP/possible. so/RB/so /,/, the/DT/the number/NN/number of/IN/of different/JJ/different triples/NNS/triples that/WDT/that are/VBP/are possible/JJ/possible is/VBZ/is simply/RB/simply /,/, the/DT/the number/NN/number of/IN/of lines/NNS/lines in/IN/in the/DT/the program/NN/program /,/, times/VBZ/times the/DT/the maximum/NN/maximum value/NN/value of/IN/of the/DT/the capacity/NN/capacity times/VBZ/times /,/, the/DT/the different/JJ/different values/NNS/values that/WDT/that i/PRP/i can/MD/can take/NNP/take. the/DT/the different/JJ/different values/NNS/values /,/, that/IN/that i/PRP/i can/MD/can take/VB/take n/NN/n the/DT/the number/NN/number of/IN/of objects/NNP/objects. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of entries/NNS/entries that/WDT/that can/MD/can there/RB/there be/VB/be in/IN/in the/DT/the transcript/NNP/transcript. so/RB/so /,/, let/VB/let us/PRP/us complete/JJ/complete our/PRP$/our example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 16/CD/16 /CD/) so/RB/so /,/, in/IN/in our/PRP$/our case/NN/case the/DT/the number/NN/number of/IN/of lines/NNS/lines in/IN/in the/DT/the program/NN/program /,/, we/PRP/we just/RB/just said/VBD/said was/VBD/was say/VB/say something/NN/something like/IN/like 20/CD/20 times/NNS/times the/DT/the capacity/NN/capacity we/PRP/we said/VBD/said was/VBD/was in/IN/in 10/CD/10 and/CC/and n/NN/n was/VBD/was 5/CD/5 /,/, well/RB/well actually/RB/actually we/PRP/we shall/MD/shall said/VBD/said n/NN/n plus/NN/plus 1/CD/1. because/IN/because /,/, we/PRP/we allowed/VBD/allowed the/DT/the program/NN/program /,/, the/DT/the procedure/NN/procedure to/TO/to be/VB/be called/VBN/called not/RB/not with/IN/with just/RB/just the/DT/the number/NN/number of/IN/of objects/NNS/objects /,/, but/CC/but one/CD/one beyond/NN/beyond the/DT/the number/NN/number of/IN/of objects/NNS/objects as/IN/as well/RB/well /,/, so/RB/so in/IN/in that/DT/that case/NN/case is/VBZ/is 6/CD/6. so/RB/so /,/, then/RB/then we/PRP/we can/MD/can estimate/VB/estimate that/IN/that this/DT/this has/VBZ/has to/TO/to me/PRP/me 60/CD/60 times/NNS/times 2/CD/2 equals/NNS/equals 1200/CD/1200. so/RB/so /,/, our/PRP$/our program/NN/program will/MD/will require/VB/require 1200/CD/1200 steps/NNS/steps of/IN/of execution/NNP/execution. in/IN/in general/JJ/general /,/, the/DT/the number/NN/number of/IN/of lines/NNS/lines in/IN/in the/DT/the program/NN/program /,/, does/VBZ/does not/RB/not depend/VB/depend on/IN/on the/DT/the capacity/NN/capacity that/IN/that is/VBZ/is given/VBN/given to/TO/to you/PRP/you nor/CC/nor to/TO/to the/DT/the number/NN/number of/IN/of objects/NNS/objects and/CC/and therefore/RB/therefore /,/, i/PRP/i can/MD/can write/VB/write this/DT/this as/IN/as o/NN/o of/IN/of 1/CD/1 times/NNS/times c/NN/c times/NNS/times n/VBP/n or/CC/or the/DT/the total/JJ/total time/NN/time taken/VBN/taken is/VBZ/is simply/RB/simply o/RB/o of/IN/of n/NN/n times/NNS/times c/VBP/c /,/, which/WDT/which is/VBZ/is much/RB/much /,/, much/RB/much less/JJR/less than/IN/than 2/CD/2 to/TO/to the/DT/the n/NN/n /,/, which/WDT/which was/VBD/was what/WP/what we/PRP/we would/MD/would get/VB/get with/IN/with backtrack/NN/backtrack search/NNP/search. and/CC/and this/DT/this is/VBZ/is what/WP/what /,/, we/PRP/we get/VBP/get with/IN/with dynamic/JJ/dynamic programming/NNP/programming. so/RB/so /,/, let/VB/let me/NNP/me. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now summarize/VBP/summarize the/DT/the main/JJ/main ideas/NNS/ideas in/IN/in all/DT/all this/DT/this /,/, the/DT/the main/JJ/main ideas/NNS/ideas in/IN/in all/DT/all this/DT/this are/VBP/are 2/CD/2 3/CD/3. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 44/CD/44 /CD/) the/DT/the first/JJ/first idea/NN/idea is/NNP/is. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just review/VB/review this/NNP/this. this/DT/this is/VBZ/is the/DT/the review/NN/review ;/:/; the/DT/the main/JJ/main ideas/NNS/ideas are/VBP/are first/RB/first think/VBP/think about/IN/about whether/IN/whether the/DT/the optimization/NN/optimization problem/NN/problem can/MD/can be/VB/be expressed/VBN/expressed as/IN/as a/DT/a sequence/NN/sequence of/IN/of decisions/NNP/decisions. this/DT/this is/VBZ/is something/NN/something that/IN/that we/PRP/we need/VBP/need even/RB/even in/IN/in order/NN/order to/TO/to do/VB/do backtrack/NN/backtrack search/NNP/search. but/CC/but /,/, beyond/IN/beyond that/DT/that in/IN/in dynamic/JJ/dynamic programming/NN/programming we/PRP/we do/VBP/do something/NN/something more/NNP/more. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 46/CD/46 /CD/) what/WP/what we/PRP/we do/VBP/do more/JJR/more in/IN/in dynamic/JJ/dynamic programming/NN/programming is/VBZ/is that/IN/that rather/RB/rather than/IN/than think/NN/think of/IN/of extending/VBG/extending solution/NNP/solution. so/RB/so /,/, do/VBP/do not/RB/not extending/VBG/extending solution/NN/solution /,/, but/CC/but solving/VBG/solving smaller/JJR/smaller problem/NN/problem of/IN/of the/DT/the same/JJ/same kind/NN/kind /,/, that/IN/that is/VBZ/is the/DT/the important/JJ/important dynamic/JJ/dynamic programming/NN/programming step/NN/step /,/, dynamic/JJ/dynamic programming/NN/programming idea/NNP/idea. let/NN/let me/PRP/me see/VBP/see /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first dynamic/JJ/dynamic programming/NN/programming idea/NNP/idea. and/CC/and in/IN/in the/DT/the second/JJ/second dynamic/JJ/dynamic programming/NN/programming idea/NN/idea is/VBZ/is /,/, check/NN/check if/IN/if the/DT/the same/JJ/same problem/NN/problem is/VBZ/is being/VBG/being solved/VBN/solved again/RB/again if/NNP/if. so/RB/so /,/, keep/VB/keep a/DT/a table/JJ/table and/CC/and save/VB/save time/NNP/time. so/RB/so /,/, you/PRP/you keep/VB/keep a/DT/a table/JJ/table and/CC/and we/PRP/we save/VBP/save time/NN/time by/IN/by not/RB/not repeating/VBG/repeating that/IN/that calculation/NNP/calculation. so/RB/so /,/, these/DT/these are/VBP/are three/CD/three ideas/NNS/ideas in/IN/in dynamic/JJ/dynamic programming/NN/programming /,/, well/NNP/well. the/DT/the first/JJ/first idea/NN/idea was/VBD/was really/RB/really similar/JJ/similar to/TO/to was/VBD/was really/RB/really common/JJ/common to/TO/to backtrack/VB/backtrack search/NN/search /,/, but/CC/but these/DT/these are/VBP/are the/DT/the two/CD/two new/JJ/new important/JJ/important ideas/NNP/ideas. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 24/CD/24 /CD/) and/CC/and then/RB/then there/RB/there is/VBZ/is also/RB/also a/DT/a fourth/JJ/fourth idea/NN/idea which/WDT/which is/VBZ/is for/IN/for the/DT/the analysis/NNP/analysis. the/DT/the fourth/JJ/fourth idea/NN/idea says/VBZ/says that/IN/that do/NN/do not/RB/not use/VB/use the/DT/the recurrences/NNS/recurrences /,/, recurrence/NN/recurrence relation/NN/relation to/TO/to estimate/VB/estimate time/NNP/time. but/CC/but /,/, instead/RB/instead use/VB/use this/DT/this transcript/NN/transcript idea/NNP/idea. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the important/JJ/important ideas/NNP/ideas. so/RB/so /,/, let/VB/let me/PRP/me say/VB/say a/DT/a little/JJ/little bit/NN/bit about/IN/about what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to talk/VB/talk about/IN/about in/IN/in the/DT/the next/JJ/next lecture/NNP/lecture. in/IN/in the/DT/the next/JJ/next lecture/NN/lecture /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use a/DT/a slightly/RB/slightly different/JJ/different formulation/NN/formulation of/IN/of what/WP/what we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/NNP/far. and/CC/and that/IN/that will/MD/will actually/RB/actually /,/, end/NN/end up/RP/up eliminating/VBG/eliminating the/DT/the recursion/NNP/recursion. and/CC/and in/IN/in some/DT/some ways/NNS/ways /,/, it/PRP/it will/MD/will simplify/VB/simplify further/JJ/further our/PRP$/our view/NN/view of/IN/of this/DT/this whole/JJ/whole procedure/NNP/procedure. and/CC/and then/RB/then we/PRP/we will/MD/will also/RB/also use/VB/use dynamic/JJ/dynamic programming/NN/programming /,/, on/IN/on some/DT/some other/JJ/other problems/NNP/problems. on/IN/on these/DT/these other/JJ/other problems/NNS/problems /,/, the/DT/the expression/NN/expression and/CC/and our/PRP$/our program/NN/program will/MD/will become/VB/become a/DT/a little/RB/little bit/NN/bit more/JJR/more complicated/NNP/complicated. but/CC/but the/DT/the basic/JJ/basic idea/NN/idea as/IN/as you/PRP/you will/MD/will see/VB/see will/MD/will remain/VB/remain more/RBR/more or/CC/or less/JJR/less the/DT/the same/NNP/same. thank/NN/thank you/NNP/you. design/NN/design &/CC/& analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 19/CD/19 longest/JJS/longest common/JJ/common subsequence/NN/subsequence welcome/NN/welcome to/TO/to another/DT/another lecture/NN/lecture on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. today/NN/today ?/./? s/NNS/s lecture/VBP/lecture will/MD/will also/RB/also be/VB/be on/IN/on dynamic/JJ/dynamic programming/NNP/programming. the/DT/the topic/JJ/topic for/IN/for today/NN/today is/VBZ/is the/DT/the longest/JJS/longest common/JJ/common subsequence/NNP/subsequence. let/NN/let me/PRP/me /,/, start/VB/start by/IN/by defining/NN/defining the/DT/the problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 09/CD/09 /CD/) so/RB/so /,/, the/DT/the longest/JJS/longest common/JJ/common subsequent/NN/subsequent will/MD/will abbreviated/VB/abbreviated as/IN/as lcs/NNP/lcs. the/DT/the input/NN/input to/TO/to this/DT/this problem/NN/problem consists/VBZ/consists of/IN/of two/CD/two strings/NNP/strings. so/RB/so /,/, there/EX/there is/VBZ/is one/CD/one string/VBG/string a/DT/a of/IN/of length/NN/length m/NN/m /,/, and/CC/and another/DT/another string/NN/string b/NN/b of/IN/of length/NN/length n/NNP/n. i/PRP/i might/MD/might string/VB/string occasionally/RB/occasionally /,/, but/CC/but i/PRP/i do/VBP/do means/NNS/means sequence/VB/sequence /,/, it/PRP/it does/VBZ/does not/RB/not really/RB/really matter/NNP/matter. the/DT/the sequence/NN/sequence will/MD/will be/VB/be a/DT/a sequence/NN/sequence of/IN/of characters/NNS/characters typically/NNP/typically. so/RB/so /,/, i/PRP/i will/MD/will use/VB/use string/NN/string and/CC/and sequence/NN/sequence interchange/NN/interchange again/NNP/again. the/DT/the output/NN/output is/VBZ/is also/RB/also going/VBG/going to/TO/to be/VB/be a/DT/a string/NN/string /,/, let/VB/let me/PRP/me call/MD/call it/PRP/it c/NNP/c. and/CC/and say/VB/say it/PRP/it will/MD/will have/VB/have some/DT/some length/NN/length p/NN/p /,/, which/WDT/which is/VBZ/is as/RB/as it/PRP/it unknown/NNP/unknown. and/CC/and we/PRP/we required/VBD/required the/DT/the c/NN/c have/VBP/have the/DT/the following/VBG/following property/NNP/property. so/RB/so /,/, c/NN/c should/MD/should be/VB/be a/DT/a subsequence/NN/subsequence of/IN/of a/DT/a as/IN/as well/RB/well as/IN/as b/NNP/b. that/IN/that is/VBZ/is what/WP/what a/DT/a common/JJ/common subsequences/NNP/subsequences. i/PRP/i will/MD/will define/VB/define subsequence/NN/subsequence /,/, more/RBR/more formally/RB/formally in/IN/in a/DT/a minute/NNP/minute. so/RB/so /,/, c/NN/c should/MD/should be/VB/be a/DT/a subsequence/NNP/subsequence. and/CC/and we/PRP/we want/VBP/want c/NN/c to/TO/to be/VB/be the/DT/the longest/JJS/longest possible/JJ/possible subsequence/NNP/subsequence. so/RB/so /,/, this/DT/this is/VBZ/is your/PRP$/your problem/NNP/problem. let/NN/let me/PRP/me define/VBP/define what/WP/what a/DT/a subsequences/NNP/subsequences. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 34/CD/34 /CD/) so/RB/so /,/, we/PRP/we will/MD/will see/VB/see that/IN/that x/NN/x is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of y/NN/y /,/, if/IN/if x/NN/x is/VBZ/is obtained/VBN/obtained by/IN/by dropping/NN/dropping elements/NNS/elements of/IN/of y/NNP/y. and/CC/and of/IN/of course/NN/course /,/, the/DT/the remaining/VBG/remaining elements/NNS/elements /,/, which/WDT/which hidden/VBN/hidden drop/NN/drop should/MD/should be/VB/be kept/VBN/kept in/IN/in the/DT/the same/JJ/same origin/NNP/origin. so/IN/so /,/, for/IN/for example/NN/example /,/, a/DT/a d/NN/d is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of say/NN/say a/DT/a b/NN/b c/NN/c d/NN/d e/NNP/e. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the elements/NNS/elements that/WDT/that we/PRP/we dropped/VBD/dropped /,/, and/CC/and as/IN/as we/PRP/we said/VBD/said common/JJ/common subsequences/NNS/subsequences or/CC/or just/RB/just sequences/NNS/sequences of/IN/of both/NNP/both. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take an/DT/an example/NN/example of/IN/of lcs/NNP/lcs. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 42/CD/42 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say a/DT/a is/VBZ/is a/DT/a sequence/NN/sequence of/IN/of characters/NNS/characters a/DT/a b/NN/b c/NN/c d/NN/d e/NNP/e. and/CC/and let/VB/let us/PRP/us say/VB/say b/NN/b is/VBZ/is a/DT/a sequence/NN/sequence of/IN/of characters/NNS/characters say/VBP/say b/NN/b c/NN/c d/NN/d or/CC/or let/VB/let me/PRP/me say/VB/say /,/, let/VB/let me/PRP/me write/VB/write it/PRP/it as/IN/as b/NN/b c/NN/c e/NN/e a/DT/a d/NN/d and/CC/and some/DT/some q/NNP/q. they/PRP/they do/VBP/do not/RB/not have/VB/have to/TO/to give/VB/give the/DT/the same/JJ/same length/NNP/length. so/IN/so /,/, clearly/RB/clearly b/LS/b c/NN/c d/NN/d is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of both/NNP/both. and/CC/and therefore/RB/therefore /,/, it/PRP/it is/VBZ/is a/DT/a common/JJ/common subsequence/NNP/subsequence. a/DT/a d/NN/d also/RB/also is/VBZ/is a/DT/a common/JJ/common subsequence/NNP/subsequence. so/RB/so /,/, a/DT/a d/NN/d for/IN/for example/NN/example /,/, appears/VBZ/appears over/IN/over here/RB/here and/CC/and over/IN/over here/NNP/here. b/NN/b c/NN/c d/NNP/d. for/IN/for example/NN/example /,/, appears/VBZ/appears over/IN/over here/RB/here and/CC/and over/IN/over here/NNP/here. so/RB/so /,/, now/RB/now we/PRP/we know/VBP/know what/WP/what common/JJ/common subsequences/NNS/subsequences are/VBP/are we/PRP/we would/MD/would like/VB/like to/TO/to define/VB/define /,/, but/CC/but the/DT/the longest/JJS/longest common/JJ/common subsequences/NNP/subsequences. so/RB/so /,/, lcs/NNS/lcs of/IN/of a/DT/a and/CC/and b/NN/b for/IN/for example/NN/example /,/, is/VBZ/is b/NN/b c/NN/c d/NNP/d. you/PRP/you can/MD/can look/VB/look through/IN/through the/DT/the sequences/NNS/sequences and/CC/and you/PRP/you will/MD/will figure/VB/figure out/RP/out /,/, the/DT/the only/JJ/only common/JJ/common sequences/NNS/sequences of/IN/of length/NN/length 3/CD/3 are/VBP/are very/RB/very few/NNP/few. and/CC/and in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is no/DT/no common/JJ/common sequence/NN/sequence of/IN/of length/NN/length 4/CD/4. and/CC/and so/RB/so therefore/RB/therefore /,/, this/DT/this is/VBZ/is a/DT/a long/JJ/long common/JJ/common subsequence/NNP/subsequence. in/IN/in fact/NN/fact /,/, you/PRP/you can/MD/can see/VB/see that/IN/that b/NN/b c/NN/c e/NN/e is/VBZ/is also/RB/also a/DT/a common/JJ/common subsequences/NNP/subsequences. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just underlying/VBG/underlying that/IN/that /,/, so/RB/so say/VBP/say b/NN/b c/NN/c e/NN/e appears/VBZ/appears over/IN/over here/NNP/here. and/CC/and over/IN/over here/RB/here it/PRP/it appears/VBZ/appears over/IN/over here/NNP/here. so/RB/so /,/, the/DT/the goal/NN/goal now/RB/now is/VBZ/is to/TO/to find/VB/find one/CD/one of/IN/of these/DT/these common/JJ/common subsequence/NNP/subsequence. so/RB/so /,/, goal/JJ/goal in/IN/in this/DT/this lcs/NNS/lcs problem/VBP/problem find/JJ/find any/DT/any longest/NN/longest common/JJ/common subsequence/NN/subsequence of/IN/of a/DT/a and/CC/and b/NNP/b. we/PRP/we do/VBP/do not/RB/not care/VB/care which/WDT/which one/CD/one /,/, but/CC/but we/PRP/we want/VBP/want one/CD/one of/IN/of those/NNP/those. when/WRB/when we/PRP/we speak/VBP/speak of/IN/of lcs/NNS/lcs /,/, we/PRP/we will/MD/will mean/VB/mean either/DT/either every/DT/every lcs/NNS/lcs or/CC/or one/CD/one of/IN/of the/DT/the lcs/NNS/lcs ?/./? s/NNP/s. and/CC/and what/WP/what we/PRP/we mean/VBP/mean should/MD/should generally/RB/generally /,/, we/PRP/we clear/VBP/clear by/IN/by context/JJ/context otherwise/NN/otherwise will/MD/will explicitly/RB/explicitly /VB/( /:/( refer/NN/refer time/NN/time /:/: 06/CD/06 /:/: 21/CD/21 /CD/) /CD/) /./. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 26/CD/26 /CD/) let/NN/let me/PRP/me give/VBP/give you/PRP/you a/DT/a /NN/( /:/( refer/NN/refer time/NN/time /:/: 06/CD/06 /:/: 26/CD/26 /CD/) /CD/) motivation/NN/motivation about/IN/about /,/, why/WRB/why we/PRP/we care/VBP/care about/IN/about this/DT/this lcs/NNS/lcs problem/NNP/problem. the/DT/the length/NN/length of/IN/of the/DT/the lcs/NNS/lcs of/IN/of say/NN/say a/DT/a and/CC/and b/NN/b can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as representing/VBG/representing the/DT/the similarity/NN/similarity between/IN/between a/DT/a and/CC/and b/NNP/b. clearly/RB/clearly /,/, the/DT/the longer/NN/longer this/DT/this lcs/NNS/lcs ?/./? s/NNS/s the/DT/the more/RBR/more similar/JJ/similar a/DT/a and/CC/and b/NN/b /:/( /:/( refer/NN/refer time/NN/time /:/: 06/CD/06 /:/: 58/CD/58 /CD/) /CD/) /./. you/PRP/you might/MD/might ask/VB/ask /,/, why/WRB/why do/VBP/do we/PRP/we care/VB/care about/IN/about strings/NNS/strings similarity/NNP/similarity. the/DT/the answers/NNS/answers to/TO/to that/DT/that are/VBP/are fairly/RB/fairly well/RB/well known/VBN/known and/CC/and obvious/JJ/obvious probably/NNP/probably. so/RB/so /,/, say/VB/say we/PRP/we have/VBP/have two/CD/two dna/NNS/dna sequences/NNP/sequences. and/CC/and we/PRP/we want/VBP/want to/TO/to know/VB/know are/VBP/are they/PRP/they very/RB/very similar/NNP/similar. if/IN/if they/PRP/they are/VBP/are very/RB/very similar/JJ/similar maybe/NN/maybe there/EX/there is/VBZ/is a/DT/a common/JJ/common evaluation/NN/evaluation in/IN/in those/DT/those sequences/NNP/sequences. and/CC/and so/RB/so therefore/RB/therefore /,/, some/DT/some measure/NN/measure of/IN/of similarity/NN/similarity is/VBZ/is useful/JJ/useful /,/, suppose/NN/suppose we/PRP/we have/VBP/have a/DT/a miss/NN/miss pelt/NN/pelt word/NNP/word. we/PRP/we would/MD/would like/VB/like to/TO/to know/VB/know the/DT/the word/NN/word /,/, which/WDT/which is/VBZ/is most/JJS/most similar/JJ/similar to/TO/to /VB/( /:/( refer/NN/refer time/NN/time /:/: 07/CD/07 /:/: 38/CD/38 /CD/) /CD/) from/IN/from our/PRP$/our given/VBN/given dictionary/NNP/dictionary. again/RB/again /,/, we/PRP/we need/VBP/need some/DT/some measure/NN/measure of/IN/of what/WP/what similarity/NN/similarity is/NNP/is. so/RB/so even/RB/even here/RB/here /,/, the/DT/the nation/NN/nation of/IN/of an/DT/an longest/NN/longest common/JJ/common subsequence/NN/subsequence is/VBZ/is useful/NNP/useful. as/IN/as it/PRP/it terms/VBZ/terms out/RP/out /,/, lcs/NNS/lcs is/VBZ/is not/RB/not the/DT/the only/JJ/only measure/NN/measure of/IN/of similarity/NN/similarity /,/, there/EX/there are/VBP/are others/NNS/others as/IN/as well/NNP/well. but/CC/but /,/, interestingly/RB/interestingly enough/RB/enough the/DT/the algorithms/NNS/algorithms we/PRP/we develop/VBP/develop a/DT/a lcs/NNS/lcs will/MD/will we/VB/we somewhat/RB/somewhat similar/NNP/similar. and/CC/and you/PRP/you can/MD/can probably/RB/probably extend/VB/extend them/PRP/them for/IN/for other/JJ/other measures/NNS/measures of/IN/of similarity/NN/similarity as/IN/as well/NNP/well. let/NN/let me/PRP/me /,/, start/VB/start by/IN/by considering/NN/considering a/DT/a brute/NN/brute force/NN/force algorithm/NN/algorithm for/IN/for lcs/NNP/lcs. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 14/CD/14 /CD/) this/DT/this is/VBZ/is probably/RB/probably a/DT/a good/JJ/good idea/NN/idea before/IN/before embarking/VBG/embarking on/IN/on trying/VBG/trying to/TO/to discover/VB/discover a/DT/a complicated/JJ/complicated algorithm/NNP/algorithm. it/PRP/it at/IN/at least/JJS/least tells/NNS/tells you/PRP/you something/NNP/something. if/IN/if /,/, not/RB/not you/PRP/you have/VB/have something/NN/something to/TO/to fall/VB/fall back/RB/back up/IN/up on/NNP/on. so/RB/so /,/, what/WDT/what could/MD/could be/VB/be the/DT/the brute/NN/brute force/NN/force algorithm/NNP/algorithm. so/RB/so /,/, the/DT/the idea/NN/idea could/MD/could be/VB/be to/TO/to say/VB/say let/NN/let us/PRP/us generate/VBP/generate all/DT/all possible/JJ/possible subsequences/NNS/subsequences of/IN/of a/NNP/a. this/DT/this will/MD/will be/VB/be the/DT/the first/JJ/first step/NNP/step. then/RB/then we/PRP/we will/MD/will check/VB/check /,/, which/WDT/which are/VBP/are also/RB/also subsequences/NNS/subsequences of/IN/of b/NNP/b. and/CC/and then/RB/then /,/, we/PRP/we retain/VBP/retain the/DT/the longest/NNP/longest. as/IN/as we/PRP/we said/VBD/said /,/, there/EX/there could/MD/could be/VB/be several/JJ/several longest/JJS/longest /,/, but/CC/but we/PRP/we do/VBP/do not/RB/not care/VB/care we/PRP/we will/MD/will just/RB/just keep/VB/keep one/CD/one of/IN/of those/NNP/those. and/CC/and that/IN/that could/MD/could be/VB/be the/DT/the answer/NN/answer that/IN/that you/PRP/you could/MD/could print/NNP/print. is/VBZ/is this/DT/this algorithm/NN/algorithm good/VBD/good enough/RB/enough ?/./? well/RB/well /,/, this/DT/this is/VBZ/is algorithm/NN/algorithm good/JJ/good /,/, well/RB/well certainly/RB/certainly will/MD/will written/VB/written an/DT/an answer/NNP/answer. but/CC/but the/DT/the question/NN/question is/VBZ/is will/MD/will it/PRP/it be/VB/be fast/NNP/fast. now/RB/now /,/, it/PRP/it is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be very/RB/very fast/JJ/fast /,/, because/IN/because a/DT/a number/NN/number of/IN/of all/DT/all possible/JJ/possible sequences/NNS/sequences of/IN/of a/DT/a is/VBZ/is quite/RB/quite large/NNP/large. in/IN/in fact/NN/fact /,/, you/PRP/you know/VBP/know that/IN/that if/IN/if sequence/NN/sequence as/IN/as length/NN/length m/NNP/m. then/RB/then there/RB/there are/VBP/are 2/CD/2 to/TO/to the/DT/the m/NN/m possible/JJ/possible subsequences/NNP/subsequences. so/RB/so /,/, therefore/IN/therefore /,/, the/DT/the time/NN/time for/IN/for this/DT/this algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at least/JJS/least 2/CD/2 to/TO/to the/DT/the m/NNP/m. in/IN/in fact/NN/fact /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to write/VB/write down/RP/down the/DT/the sequences/NNS/sequences the/DT/the subsequences/NNS/subsequences /,/, you/PRP/you will/MD/will also/RB/also a/DT/a multiply/RB/multiply this/DT/this by/IN/by the/DT/the by/IN/by m/NN/m itself/NNP/itself. but/CC/but /,/, any/DT/any in/IN/in case/NN/case that/WDT/that is/VBZ/is at/IN/at least/JJS/least exponential/JJ/exponential m/NNP/m. so/RB/so /,/, that/IN/that is/VBZ/is not/RB/not what/WP/what you/PRP/you want/VBP/want /,/, we/PRP/we would/MD/would like/VB/like something/NN/something faster/NNP/faster. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we have/VBP/have said/VBN/said earlier/RBR/earlier /,/, that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to apply/VB/apply dynamic/JJ/dynamic programming/NN/programming for/IN/for this/NNP/this. and/CC/and our/PRP$/our hope/NN/hope is/VBZ/is the/DT/the dynamic/JJ/dynamic programming/NN/programming will/MD/will give/VB/give a/DT/a something/NN/something better/NNP/better. so/RB/so /,/, let/VB/let me/PRP/me review/VB/review /,/, what/WDT/what the/DT/the dynamic/JJ/dynamic programming/NN/programming ideas/NNS/ideas are/NNP/are. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 16/CD/16 /CD/) so/RB/so /,/, the/DT/the first/JJ/first idea/NN/idea was/VBD/was that/IN/that we/PRP/we should/MD/should try/VB/try to/TO/to express/VB/express the/DT/the problem/NN/problem as/IN/as a/DT/a search/NN/search problem/NNP/problem. by/IN/by that/DT/that i/PRP/i mean/VBP/mean /,/, that/IN/that you/PRP/you should/MD/should clearly/RB/clearly identify/VB/identify what/WP/what the/DT/the search/NN/search space/NN/space is/NNP/is. so/RB/so /,/, what/WDT/what is/VBZ/is it/PRP/it /,/, what/WDT/what is/VBZ/is a/DT/a possible/JJ/possible candidate/NN/candidate that/WDT/that you/PRP/you are/VBP/are looking/VBG/looking for/IN/for ?/./? so/RB/so /,/, in/IN/in our/PRP$/our case/NN/case /,/, the/DT/the search/NN/search space/NN/space consists/NNS/consists of/IN/of common/JJ/common subsequences/NNS/subsequences of/IN/of a/DT/a and/CC/and b/NNP/b. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to search/NN/search through/IN/through the/DT/the common/JJ/common subsequences/NNP/subsequences. and/CC/and so/RB/so /,/, in/IN/in that/DT/that sense/NN/sense is/VBZ/is first/JJ/first step/NN/step is/VBZ/is over/IN/over well/RB/well not/RB/not quite/NNP/quite. so/RB/so /,/, there/EX/there is/VBZ/is also/RB/also one/CD/one more/JJR/more thing/NN/thing /,/, which/WDT/which is/VBZ/is we/PRP/we want/VBP/want to/TO/to determine/VB/determine the/DT/the objective/NN/objective function/NNP/function. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the objective/NN/objective function/NN/function ?/./? so/RB/so /,/, let/VB/let us/PRP/us says/VBZ/says of/IN/of all/DT/all the/DT/the elements/NNS/elements in/IN/in the/DT/the sub/NN/sub space/NN/space /,/, which/WDT/which is/VBZ/is the/DT/the one/CD/one that/WDT/that you/PRP/you are/VBP/are going/VBG/going to/TO/to pick/NNP/pick. so/RB/so /,/, in/IN/in our/PRP$/our case/NN/case /,/, that/IN/that easily/RB/easily stated/VBD/stated it/PRP/it is/VBZ/is a/DT/a longest/NN/longest one/NNP/one. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a space/NN/space consisting/VBG/consisting of/IN/of all/DT/all subsequences/NNS/subsequences of/IN/of a/DT/a and/CC/and b/NNP/b. and/CC/and we/PRP/we want/VBP/want from/IN/from it/NNP/it. that/IN/that string/VBG/string which/WDT/which is/VBZ/is the/DT/the longest/NNP/longest. of/IN/of course/NN/course /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to generate/VB/generate this/DT/this space/NN/space explicitly/NNP/explicitly. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to ever/RB/ever write/VB/write down/IN/down anywhere/RB/anywhere all/DT/all the/DT/the common/JJ/common subsequences/NNS/subsequences that/WDT/that will/MD/will take/VB/take too/RB/too much/RB/much time/NNP/time. this/DT/this is/VBZ/is just/RB/just for/IN/for the/DT/the purposes/NNS/purposes of/IN/of thinking/NNP/thinking. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write the/DT/the term/NNP/term. so/RB/so /,/, this/DT/this is/VBZ/is only/RB/only help/VB/help in/IN/in thinking/NNP/thinking. we/PRP/we are/VBP/are not/RB/not actually/RB/actually going/VBG/going to/TO/to generate/VB/generate the/DT/the subspace/NN/subspace any/DT/any of/IN/of these/DT/these spaces/NNP/spaces. then/RB/then /,/, what/WDT/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/NNP/is. we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write the/DT/the recursive/JJ/recursive procedure/NNP/procedure. listed/VBD/listed explicitly/RB/explicitly what/WP/what a/DT/a search/NN/search space/NN/space is/VBZ/is having/VBG/having defined/VBN/defined explicitly/RB/explicitly /,/, what/WDT/what a/DT/a search/NN/search spaces/NNP/spaces. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 28/CD/28 /CD/) the/DT/the next/JJ/next step/NN/step is/VBZ/is to/TO/to write/VB/write a/DT/a recursive/JJ/recursive procedure/NN/procedure /,/, which/WDT/which looks/NNS/looks something/VBG/something like/IN/like this/NNP/this. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a search/NNP/search. and/CC/and it/PRP/it will/MD/will take/VB/take as/IN/as argument/NN/argument the/DT/the space/NN/space has/VBZ/has which/WDT/which we/PRP/we want/VBP/want to/TO/to search/NNP/search. and/CC/and now/RB/now /,/, the/DT/the procedure/NN/procedure typically/RB/typically will/MD/will divide/VB/divide s/NNS/s into/IN/into subspaces/NNP/subspaces. say/VBP/say /,/, let/VB/let me/PRP/me call/MD/call those/VB/those s/NNS/s 1/CD/1 /,/, s/NNS/s 2/CD/2 say/VBP/say some/DT/some s/NNS/s k/NNP/k. so/RB/so /,/, there/EX/there are/VBP/are k/NN/k subspaces/NNP/subspaces. and/CC/and the/DT/the idea/NN/idea is/VBZ/is that/IN/that will/MD/will find/VB/find the/DT/the best/JJS/best in/IN/in each/DT/each s/NNS/s i/NNP/i. so/RB/so /,/, by/IN/by best/JJS/best we/PRP/we mean/VBP/mean in/IN/in the/DT/the one/CD/one in/IN/in the/DT/the element/NN/element /,/, which/WDT/which is/VBZ/is which/WDT/which maximize/NN/maximize as/IN/as our/PRP$/our objective/NN/objective function/NN/function /,/, which/WDT/which is/VBZ/is which/WDT/which optimizes/VBZ/optimizes our/PRP$/our object/NN/object function/NNP/function. so/RB/so /,/, in/IN/in our/PRP$/our case/NN/case /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the longest/JJS/longest subsequent/NN/subsequent belonging/VBG/belonging to/TO/to each/DT/each of/IN/of these/DT/these s/NNS/s i/PRP/i ?/./? s/NNP/s. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will return/VB/return the/DT/the best/JJS/best of/IN/of the/DT/the best/NNP/best. by/IN/by this/DT/this best/JJS/best i/PRP/i mean/VBP/mean /,/, the/DT/the best/JJS/best computed/VBN/computed above/IN/above here/NNP/here. simple/NN/simple enough/RB/enough /,/, now/RB/now the/DT/the important/JJ/important point/NN/point is/VBZ/is going/VBG/going to/TO/to be/VB/be /,/, how/WRB/how do/VBP/do we/PRP/we find/VBP/find the/DT/the best/JJS/best in/IN/in each/DT/each s/NNS/s i/PRP/i ?/./? this/DT/this is/VBZ/is the/DT/the recursion/NN/recursion is/VBZ/is going/VBG/going to/TO/to come/VB/come in/NNP/in. so/RB/so /,/, this/DT/this if/IN/if we/PRP/we can/MD/can express/VB/express recursively/RB/recursively will/MD/will at/IN/at least/JJS/least have/VBP/have a/DT/a recursive/JJ/recursive procedure/NNP/procedure. of/IN/of course/NN/course /,/, this/DT/this is/VBZ/is not/RB/not your/PRP$/your dynamic/JJ/dynamic programming/NN/programming stops/NNP/stops. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 13/CD/13 /CD/) so/RB/so /,/, the/DT/the next/JJ/next step/NN/step is/VBZ/is that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to characterize/VB/characterize the/DT/the calls/NNS/calls the/DT/the recursive/JJ/recursive calls/NNP/calls. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask what/WP/what are/VBP/are the/DT/the arguments/NNS/arguments to/TO/to the/DT/the recursive/JJ/recursive calls/NNS/calls ?/./? in/IN/in fact/NN/fact /,/, to/TO/to all/DT/all the/DT/the recursive/JJ/recursive calls/NNS/calls /,/, which/WDT/which are/VBP/are made/VBN/made during/IN/during the/DT/the life/NN/life time/NN/time of/IN/of that/DT/that recursive/JJ/recursive procedure/NNP/procedure. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define a/DT/a table/JJ/table then/NNP/then. so/RB/so /,/, let/VB/let me/PRP/me call/MD/call it/PRP/it t/VB/t /,/, which/WDT/which will/MD/will store/VB/store the/DT/the results/NNS/results evaluated/VBD/evaluated for/IN/for each/DT/each recursive/JJ/recursive calls/NNP/calls. now/RB/now /,/, here/RB/here comes/VBZ/comes an/DT/an importance/NN/importance which/WDT/which /,/, now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask that/IN/that we/PRP/we should/MD/should write/VB/write non/NN/non recursive/JJ/recursive procedure/NNP/procedure. and/CC/and this/DT/this /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call fill/NN/fill /,/, which/WDT/which fills/NNS/fills entries/VBZ/entries of/IN/of t/NN/t /,/, assuming/VBG/assuming other/JJ/other entries/NNS/entries are/VBP/are already/RB/already filled/NNP/filled. in/IN/in particular/JJ/particular /,/, it/PRP/it fills/VBZ/fills say/VBP/say entry/NN/entry i/PRP/i j/VBP/j of/IN/of t/NN/t assuming/VBG/assuming all/DT/all other/JJ/other entries/NNS/entries are/VBP/are filled/NNP/filled. the/DT/the key/JJ/key time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be that/IN/that /,/, the/DT/the key/JJ/key point/NN/point is/VBZ/is going/VBG/going to/TO/to be/VB/be that/IN/that as/IN/as a/DT/a result/NN/result of/IN/of this/DT/this the/DT/the total/NN/total time/NN/time will/MD/will be/VB/be small/NNP/small. in/IN/in fact/NN/fact /,/, right/RB/right now/RB/now i/PRP/i can/MD/can list/VB/list what/WP/what the/DT/the total/JJ/total time/NN/time is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so /,/, total/JJ/total time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be size/NN/size of/IN/of the/DT/the table/NN/table times/VBZ/times filling/VBG/filling time/NNP/time. so/RB/so /,/, if/IN/if we/PRP/we can/MD/can do/VB/do this/DT/this with/IN/with a/DT/a small/JJ/small enough/JJ/enough table/NNP/table. and/CC/and if/IN/if we/PRP/we can/MD/can show/VB/show /,/, that/IN/that each/DT/each entry/NN/entry requires/VBZ/requires will/MD/will be/VB/be a/DT/a small/JJ/small amount/NN/amount of/IN/of time/NN/time to/TO/to be/VB/be filled/NNP/filled. then/RB/then will/MD/will have/VB/have a/DT/a fast/JJ/fast algorithm/NNP/algorithm. and/CC/and your/PRP$/your hope/NN/hope is/VBZ/is that/IN/that this/DT/this strategy/NN/strategy will/MD/will give/VB/give as/IN/as a/DT/a fast/NN/fast algorithm/NN/algorithm for/IN/for the/DT/the longest/JJS/longest common/JJ/common subsequent/NN/subsequent problem/NNP/problem. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, how/WRB/how to/TO/to do/VB/do this/DT/this in/IN/in the/DT/the case/NN/case of/IN/of lcs/NNP/lcs. the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to define/VB/define the/DT/the search/NN/search space/NN/space /,/, which/WDT/which we/PRP/we already/RB/already did/NNP/did. the/DT/the next/JJ/next step/NN/step /:/( /:/( refer/NN/refer time/NN/time /:/: 17/CD/17 /:/: 04/CD/04 /CD/) /CD/) is/VBZ/is to/TO/to write/VB/write this/DT/this procedure/NN/procedure and/CC/and this/DT/this requires/NNS/requires just/RB/just divide/VBP/divide s/NNS/s into/IN/into subspaces/NNS/subspaces s/NNS/s 1/CD/1 to/TO/to s/NNS/s k/NNP/k. so/RB/so /,/, just/RB/just do/VBP/do that/IN/that one/NNP/one. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 17/CD/17 /CD/) remind/NN/remind you/PRP/you /,/, s/VBZ/s is/VBZ/is the/DT/the space/NN/space of/IN/of the/DT/the common/JJ/common sequences/NNS/sequences of/IN/of a/DT/a and/CC/and b/NNP/b. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to search/NNP/search. and/CC/and now/RB/now /,/, we/PRP/we go/VBP/go to/TO/to partitioning/NNP/partitioning. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down one/CD/one strategy/NNP/strategy. there/RB/there can/MD/can be/VB/be several/JJ/several strategies/NNP/strategies. and/CC/and i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to write/VB/write down/RP/down 1/CD/1. so/RB/so /,/, one/CD/one idea/NN/idea might/MD/might be/VB/be /,/, that/IN/that i/PRP/i will/MD/will defines/NNS/defines i/PRP/i will/MD/will partition/VB/partition s/NNS/s as/IN/as s/NNS/s sub/VBP/sub a/DT/a union/NN/union s/VBZ/s sub/NN/sub b/NN/b union/NN/union s/NNS/s sub/VBP/sub c/NN/c all/DT/all the/DT/the way/NN/way till/IN/till s/NNS/s sub/VBP/sub z/NNP/z. the/DT/the idea/NN/idea is/VBZ/is that/IN/that s/NNS/s sub/VBP/sub a/DT/a is/VBZ/is subspace/NN/subspace of/IN/of s/NNS/s consisting/VBG/consisting of/IN/of common/JJ/common subsequences/NNS/subsequences starting/VBG/starting with/IN/with letter/NN/letter a/NNP/a. s/VBZ/s sub/NN/sub b/NN/b will/MD/will be/VB/be elements/NNS/elements of/IN/of s/NNS/s /,/, which/WDT/which start/NN/start to/TO/to the/DT/the letter/NN/letter b/NNP/b. s/VBZ/s sub/NN/sub c/NN/c will/MD/will be/VB/be the/DT/the elements/NNS/elements of/IN/of s/NNS/s /,/, which/WDT/which start/NN/start to/TO/to the/DT/the letter/NN/letter c/NN/c and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, here/RB/here is/VBZ/is one/CD/one partition/NNP/partition. now/RB/now /,/, dynamic/JJ/dynamic programming/NN/programming will/MD/will require/VB/require as/IN/as the/DT/the idea/NN/idea of/IN/of dynamic/JJ/dynamic programming/NN/programming will/MD/will require/VB/require as/IN/as to/TO/to find/VB/find to/TO/to write/VB/write a/DT/a recursive/JJ/recursive procedure/NN/procedure /,/, which/WDT/which recursively/RB/recursively search/VBP/search as/IN/as s/NNS/s a/DT/a /,/, s/VBZ/s b/NN/b /,/, sc/NN/sc and/CC/and so/RB/so on/NNP/on. and/CC/and then/RB/then /,/, pick/NN/pick the/DT/the best/JJS/best of/IN/of the/DT/the best/JJS/best of/IN/of those/DT/those answers/NNP/answers. this/DT/this is/VBZ/is the/DT/the 1/CD/1 strategy/NNP/strategy. this/DT/this will/MD/will give/VB/give us/PRP/us /,/, better/RBR/better than/IN/than exponential/JJ/exponential time/NN/time solution/NNP/solution. but/CC/but /,/, this/DT/this is/VBZ/is not/RB/not the/DT/the only/JJ/only possible/JJ/possible strategy/NNP/strategy. so/RB/so /,/, let/VB/let me/PRP/me give/VB/give you/PRP/you another/DT/another strategy/NN/strategy as/IN/as well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 13/CD/13 /CD/) in/IN/in this/DT/this strategy/NN/strategy /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take s/NNS/s and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to partitioning/VBG/partitioning it/PRP/it /,/, only/RB/only in/IN/in two/CD/two subspaces/NNP/subspaces. so/RB/so /,/, let/VB/let me/PRP/me tell/VB/tell you/PRP/you /,/, what/WP/what s/NNS/s 1/CD/1 is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so /,/, s/NNS/s 1/CD/1 is/VBZ/is going/VBG/going to/TO/to be/VB/be all/PDT/all subsequences/NNS/subsequences /,/, which/WDT/which start/NN/start with/IN/with the/DT/the first/JJ/first letter/NN/letter of/IN/of a/NNP/a. so/RB/so /,/, remember/NN/remember a/DT/a is/VBZ/is already/RB/already known/VBN/known to/TO/to us/NNP/us. a/DT/a and/CC/and b/NN/b are/VBP/are known/VBN/known to/TO/to us/NNP/us. and/CC/and so/RB/so we/PRP/we can/MD/can ask/VB/ask questions/NNS/questions about/IN/about what/WP/what a/DT/a 1/CD/1 is/NNP/is. so/RB/so /,/, s/NNS/s 1/CD/1 is/VBZ/is going/VBG/going to/TO/to be/VB/be all/PDT/all subsequences/NNS/subsequences /,/, which/WDT/which start/NN/start with/IN/with a/DT/a 1/CD/1. s/NNS/s 2/CD/2 is/VBZ/is the/DT/the rest/NN/rest /,/, that/IN/that is/VBZ/is start/NN/start with/IN/with something/NN/something else/RB/else /,/, some/DT/some other/JJ/other character/NNP/character. now/RB/now /,/, this/DT/this is/VBZ/is the/DT/the strategy/NN/strategy we/PRP/we are/VBP/are going/VBG/going to/TO/to develop/VB/develop further/NNP/further. but/CC/but will/MD/will see/VB/see that/IN/that the/DT/the idea/NN/idea of/IN/of this/DT/this development/NN/development can/MD/can also/RB/also be/VB/be used/VBN/used for/IN/for the/DT/the previous/JJ/previous strategy/NNP/strategy. so/RB/so now/RB/now we/PRP/we need/VBP/need to/TO/to define/VB/define a/DT/a recursive/JJ/recursive strategy/NN/strategy /,/, recursive/JJ/recursive procedure/NN/procedure for/IN/for searching/VBG/searching s/NNS/s 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 21/CD/21 /CD/) so/RB/so /,/, our/PRP$/our question/NN/question is/VBZ/is how/WRB/how to/TO/to search/VB/search s/NNS/s 1/CD/1. so/RB/so /,/, let/VB/let us/PRP/us let/VB/let me/PRP/me remind/VB/remind you/PRP/you /,/, what/WP/what is/VBZ/is s/VBZ/s 1/CD/1 /,/, s/NNS/s 1/CD/1 consists/NNS/consists of/IN/of all/DT/all subsequences/NNS/subsequences /,/, which/WDT/which start/NN/start with/IN/with a/DT/a 1/CD/1. so/RB/so /,/, when/WRB/when we/PRP/we are/VBP/are looking/VBG/looking for/IN/for something/NN/something it/PRP/it is/VBZ/is usually/RB/usually a/DT/a good/JJ/good idea/NN/idea to/TO/to write/VB/write down/RP/down explicitly/RB/explicitly what/WP/what is/VBZ/is it/PRP/it /,/, that/IN/that we/PRP/we are/VBP/are looking/VBG/looking for/NNP/for. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, r/NN/r equal/JJ/equal to/TO/to longest/VB/longest element/NN/element of/IN/of s/NNP/s. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say r/NN/r as/IN/as p/NN/p as/IN/as length/NN/length p/NN/p of/IN/of course/NN/course /,/, p/NN/p is/VBZ/is not/RB/not known/VBN/known to/TO/to us/PRP/us /,/, but/CC/but let/VB/let me/PRP/me just/RB/just define/VBP/define notation/NN/notation p/NNP/p. what/WP/what is/VBZ/is to/TO/to be/VB/be know/RB/know about/IN/about r/NNP/r. well/RB/well we/PRP/we know/VBP/know that/IN/that r/NN/r of/IN/of 1/CD/1 the/DT/the first/JJ/first letter/NN/letter of/IN/of r/NN/r is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the first/JJ/first letter/NN/letter of/IN/of a/NNP/a. not/RB/not comes/VBZ/comes from/IN/from the/DT/the definition/NN/definition of/IN/of s/NNS/s 1/CD/1. we/PRP/we just/RB/just said/VBD/said that/IN/that /,/, s/NNS/s 1/CD/1 only/RB/only consists/VBZ/consists of/IN/of subsequences/NNS/subsequences /,/, which/WDT/which start/NN/start with/IN/with a/DT/a 1/CD/1. now/RB/now /,/, r/NN/r is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of a/DT/a as/IN/as well/RB/well as/IN/as a/DT/a subsequence/NN/subsequence of/IN/of p/NNP/p. so/RB/so /,/, which/WDT/which means/VBZ/means that/DT/that r/NN/r 1/CD/1 must/MD/must appear/VB/appear in/IN/in b/NN/b as/IN/as well/NNP/well. so/RB/so /,/, without/IN/without loss/NN/loss of/IN/of generality/NN/generality we/PRP/we can/MD/can assume/NNP/assume. let/VB/let us/PRP/us /,/, say/VBP/say that/IN/that k/NN/k is/VBZ/is the/DT/the smallest/JJS/smallest /,/, such/JJ/such that/IN/that b/NN/b of/IN/of k/NN/k is/VBZ/is equal/JJ/equal to/TO/to r/VB/r 1/CD/1 or/CC/or actually/RB/actually it/PRP/it is/VBZ/is equal/JJ/equal to/TO/to a/DT/a 1/CD/1. now/RB/now /,/, it/PRP/it may/MD/may term/VB/term out/RP/out /,/, that/IN/that even/RB/even does/VBZ/does not/RB/not at/IN/at all/DT/all appear/JJ/appear in/IN/in b/NNP/b. that/IN/that is/VBZ/is possible/JJ/possible /,/, in/IN/in that/DT/that case/NN/case this/DT/this search/NN/search this/DT/this space/NN/space s/VBZ/s 1/CD/1 will/MD/will be/VB/be null/NNP/null. so/RB/so /,/, that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a better/JJR/better of/IN/of a/DT/a degenerate/JJ/degenerate case/NNP/case. so/RB/so /,/, for/IN/for now/RB/now /,/, for/IN/for a/DT/a minute/NN/minute i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume that/IN/that this/DT/this does/VBZ/does not/RB/not happen/NNP/happen. and/CC/and that/IN/that k/NN/k is/VBZ/is well/RB/well defined/NNP/defined. so/RB/so /,/, there/EX/there is/VBZ/is some/DT/some k/NNP/k. so/RB/so /,/, now/RB/now once/RB/once we/PRP/we know/VBP/know what/WP/what this/DT/this k/NN/k is/VBZ/is /,/, what/WP/what can/MD/can we/PRP/we say/VB/say about/IN/about /,/, can/MD/can we/PRP/we give/VB/give something/NN/something more/JJR/more /,/, can/MD/can we/PRP/we say/VB/say something/NN/something more/JJR/more about/IN/about r/JJ/r 1/CD/1. well/RB/well /,/, here/RB/here is/VBZ/is what/WP/what we/PRP/we can/MD/can say/NNP/say. so/RB/so /,/, we/PRP/we know/VBP/know now/RB/now that/IN/that r/NN/r of/IN/of 2/CD/2 to/TO/to p/VB/p is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of a/NNP/a. well/RB/well not/RB/not of/IN/of a/DT/a /,/, because/IN/because a/DT/a 1/CD/1 is/VBZ/is already/RB/already taken/VBN/taken up/RP/up by/IN/by r/NN/r 1/CD/1. so/RB/so /,/, the/DT/the rest/NN/rest of/IN/of a/NNP/a. so/RB/so /,/, 2/CD/2 to/TO/to m/VB/m and/CC/and also/RB/also of/IN/of b/NN/b from/IN/from k/NN/k plus/CC/plus 1/CD/1 onwards/NNP/onwards. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be b/NN/b of/IN/of k/NN/k plus/CC/plus 1/CD/1 to/TO/to n/NNP/n. so/RB/so /,/, this/DT/this just/RB/just comes/VBZ/comes from/IN/from the/DT/the definition/NN/definition of/IN/of r/NNP/r. so/RB/so /,/, r/NN/r has/VBZ/has to/TO/to be/VB/be a/DT/a common/JJ/common subsequence/NN/subsequence of/IN/of a/DT/a as/IN/as well/RB/well as/IN/as b/NNP/b. the/DT/the first/JJ/first element/NN/element of/IN/of r/NN/r appears/VBZ/appears at/IN/at a/DT/a 1/CD/1 by/IN/by definition/NN/definition of/IN/of s/NNS/s 1/CD/1. it/PRP/it appears/VBZ/appears at/IN/at k/NN/k /,/, at/IN/at b/NN/b k/NN/k in/IN/in b/NNP/b. and/CC/and the/DT/the rest/NN/rest of/IN/of it/PRP/it also/RB/also must/MD/must be/VB/be a/DT/a subsequence/NNP/subsequence. otherwise/NN/otherwise /,/, it/PRP/it would/MD/would not/RB/not be/VB/be a/DT/a common/JJ/common subsequence/NNP/subsequence. and/CC/and therefore/RB/therefore /,/, r/NN/r must/MD/must be/VB/be a/DT/a subsequent/JJ/subsequent of/IN/of this/DT/this as/IN/as well/RB/well as/IN/as the/DT/the subsequence/NN/subsequence of/IN/of this/NNP/this. so/RB/so /,/, now/RB/now having/VBG/having characterize/NN/characterize what/WP/what r/NN/r is/VBZ/is our/PRP$/our question/NN/question is/VBZ/is how/WRB/how do/VBP/do we/PRP/we find/VBP/find r/NNP/r. usually/RB/usually /,/, terms/NNS/terms out/IN/out that/DT/that if/IN/if you/PRP/you characterize/VBP/characterize something/NN/something adequately/RB/adequately it/PRP/it helps/VBZ/helps some/DT/some finding/NNP/finding. and/CC/and so/RB/so /,/, in/IN/in fact/NN/fact /,/, we/PRP/we are/VBP/are almost/RB/almost ready/JJ/ready to/TO/to find/NNP/find. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we can/MD/can claim/VB/claim that/IN/that sense/NN/sense r/NN/r has/VBZ/has to/TO/to be/VB/be a/DT/a subsequence/NN/subsequence of/IN/of both/DT/both perhaps/RB/perhaps it/PRP/it is/VBZ/is a/DT/a longest/NN/longest such/JJ/such subsequence/NNP/subsequence. so/IN/so /,/, let/VB/let me/PRP/me write/VB/write it/PRP/it down/IN/down as/IN/as a/DT/a formal/JJ/formal plain/NNP/plain. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 13/CD/13 /CD/) so/RB/so /,/, r/NN/r my/PRP$/my claim/NN/claim is/VBZ/is r/NN/r 2/CD/2 through/IN/through p/NN/p is/VBZ/is an/DT/an lcs/NNS/lcs of/IN/of a/DT/a 2/CD/2 through/IN/through m/NN/m and/CC/and b/NN/b k/NN/k plus/CC/plus 1/CD/1 through/IN/through n/NNP/n. where/WRB/where /,/, k/VBP/k is/VBZ/is as/IN/as we/PRP/we defined/VBD/defined a/DT/a minute/NN/minute ago/NNP/ago. k/NN/k is/VBZ/is the/DT/the index/NN/index of/IN/of the/DT/the first/JJ/first occurrence/NN/occurrence of/IN/of a/DT/a 1/CD/1 inside/NN/inside p/NNP/p. terms/NNS/terms out/IN/out that/DT/that this/DT/this claim/NN/claim is/VBZ/is true/NNP/true. and/CC/and the/DT/the proof/NN/proof is/VBZ/is not/RB/not terribly/RB/terribly hard/RB/hard either/DT/either the/DT/the proof/NN/proof if/IN/if by/IN/by contradiction/NNP/contradiction. so/RB/so /,/, let/VB/let us/PRP/us assume/VB/assume that/IN/that r/NN/r 2/CD/2 p/NN/p is/VBZ/is not/RB/not an/DT/an lcs/NNS/lcs of/IN/of this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, there/EX/there is/VBZ/is some/DT/some s/NNS/s is/VBZ/is some/DT/some lcs/NNS/lcs of/IN/of a/DT/a 2/CD/2 to/TO/to m/VB/m and/CC/and b/VB/b k/NN/k plus/CC/plus 1/CD/1 to/TO/to n/NNP/n. and/CC/and in/IN/in fact/NN/fact /,/, for/IN/for the/DT/the sake/NN/sake of/IN/of contradiction/NN/contradiction we/PRP/we have/VBP/have to/TO/to argue/VB/argue /,/, we/PRP/we have/VBP/have to/TO/to assume/VB/assume that/IN/that s/NNS/s is/VBZ/is longer/JJR/longer than/IN/than r/NN/r 2/CD/2 to/TO/to p/NNP/p. so/RB/so /,/, that/IN/that is/VBZ/is length/NN/length of/IN/of s/NNS/s is/VBZ/is greater/JJR/greater than/IN/than the/DT/the length/NN/length of/IN/of this/DT/this /,/, the/DT/the length/NN/length of/IN/of this/DT/this is/VBZ/is p/NN/p minus/NN/minus 1/CD/1. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than r/NN/r equal/JJ/equal to/TO/to p/NNP/p. now/RB/now /,/, the/DT/the interesting/JJ/interesting thing/NN/thing is/VBZ/is that/IN/that suppose/DT/suppose i/PRP/i consider/VBP/consider the/DT/the sequence/NN/sequence a/DT/a 1/CD/1 concatenated/VBN/concatenated with/IN/with s/NNP/s. can/MD/can we/PRP/we say/VB/say anything/NN/anything interesting/VBG/interesting about/IN/about this/DT/this ?/./? well/RB/well /,/, s/NNS/s is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of a/DT/a to/TO/to m/NNP/m. so/RB/so /,/, this/DT/this must/MD/must be/VB/be a/DT/a subsequence/NN/subsequence of/IN/of a/DT/a 1/CD/1 concatenated/VBN/concatenated with/IN/with a/DT/a 2/CD/2 to/TO/to m/NNP/m. but/CC/but /,/, this/DT/this is/VBZ/is simply/RB/simply a/DT/a 1/CD/1 to/TO/to m/NNP/m. similarly/RB/similarly /,/, this/DT/this is/VBZ/is also/RB/also a/DT/a subsequence/NN/subsequence of/IN/of a/DT/a 1/CD/1 concatenated/VBN/concatenated with/IN/with b/NN/b k/NN/k plus/CC/plus 1/CD/1 to/TO/to n/NNP/n. but/CC/but what/WP/what is/VBZ/is this/DT/this ?/./? well/RB/well /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but even/RB/even is/VBZ/is also/RB/also b/RB/b k/NNP/k. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is b/NN/b k/NN/k forward/NN/forward by/IN/by b/NN/b k/NN/k plus/CC/plus 1/CD/1 to/TO/to n/NNP/n. and/CC/and therefore/RB/therefore /,/, this/DT/this whole/JJ/whole thing/NN/thing is/VBZ/is in/IN/in fact/NN/fact /,/, b/LS/b k/NN/k to/TO/to n/NNP/n. so/RB/so /,/, what/WDT/what have/VBP/have we/PRP/we found/VBN/found then/RB/then ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 07/CD/07 /CD/) so/RB/so /,/, we/PRP/we have/VBP/have found/VBN/found /,/, we/PRP/we have/VBP/have discovered/VBN/discovered that/IN/that this/DT/this s/NNS/s is/VBZ/is a/DT/a common/JJ/common subsequence/NN/subsequence of/IN/of a/DT/a 1/CD/1 to/TO/to m/NNP/m. and/CC/and b/NN/b k/NN/k to/TO/to n/NNP/n. but/CC/but /,/, this/DT/this is/VBZ/is itself/PRP/itself is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of b/NN/b 1/CD/1 to/TO/to n/NNP/n. so/RB/so /,/, i/PRP/i could/MD/could just/RB/just the/DT/the right/NN/right this/DT/this as/IN/as 1/CD/1 to/TO/to n/NNP/n. and/CC/and also/RB/also /,/, s/NNS/s starts/VBZ/starts with/IN/with let/NN/let me/PRP/me put/VBD/put it/PRP/it here/NNP/here. a/DT/a starts/VBZ/starts with/IN/with a/DT/a 1/CD/1. now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the length/NN/length of/IN/of s/NNP/s. s/NNS/s has/VBZ/has length/NN/length at/IN/at least/JJS/least p/NNP/p. so/RB/so /,/, this/DT/this really/RB/really up/RP/up to/TO/to be/VB/be a/DT/a 1/CD/1 concatenated/VBN/concatenated with/IN/with s/NNS/s is/VBZ/is a/DT/a common/JJ/common subsequence/NN/subsequence of/IN/of this/NNP/this. and/CC/and in/IN/in fact/NN/fact /,/, a/DT/a 1/CD/1 concatenate/NN/concatenate with/IN/with s/NNS/s starts/NNS/starts with/IN/with a/DT/a 1/CD/1. so/RB/so /,/, a/DT/a 1/CD/1 concatenated/VBN/concatenated with/IN/with s/NNS/s has/VBZ/has length/NN/length at/IN/at least/JJS/least p/NN/p plus/RB/plus 1/CD/1. but/CC/but now/RB/now /,/, we/PRP/we have/VBP/have a/DT/a contradiction/NNP/contradiction. because/IN/because /,/, we/PRP/we said/VBD/said that/IN/that r/NN/r of/IN/of length/NN/length p/NN/p was/VBD/was an/DT/an lcs/NNP/lcs. so/RB/so /,/, then/RB/then that/IN/that means/NNS/means /,/, there/EX/there can/MD/can not/RB/not be/VB/be longer/RB/longer sequence/NN/sequence /,/, which/WDT/which is/VBZ/is common/JJ/common to/TO/to both/NNP/both. but/CC/but /,/, which/WDT/which we/PRP/we have/VBP/have just/RB/just proved/VBN/proved has/VBZ/has to/TO/to be/VB/be there/NNP/there. and/CC/and therefore/RB/therefore /,/, our/PRP$/our original/JJ/original claim/NN/claim must/MD/must have/VB/have been/VBN/been true/NNP/true. so/RB/so /,/, what/WDT/what was/VBD/was our/PRP$/our original/JJ/original claim/NN/claim /,/, that/IN/that r/NN/r 2/CD/2 p/NN/p is/VBZ/is an/DT/an lcs/NNS/lcs of/IN/of a/DT/a to/TO/to m/NN/m and/CC/and b/NN/b k/NN/k plus/CC/plus 1/CD/1 to/TO/to n/NNP/n. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the conclusion/NN/conclusion from/IN/from this/DT/this ?/./? so/RB/so /,/, let/VB/let me/PRP/me write/VB/write it/PRP/it that/IN/that down/NNP/down. so/RB/so /,/, the/DT/the conclusion/NN/conclusion is/VBZ/is that/IN/that we/PRP/we know/VBP/know now/RB/now /,/, how/WRB/how to/TO/to search/VB/search s/NNS/s 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 09/CD/09 /CD/) so/RB/so /,/, longest/VBP/longest element/NN/element in/IN/in s/NNS/s 1/CD/1 can/MD/can be/VB/be found/VBN/found as/IN/as follows/NNP/follows. so/RB/so /,/, 1/CD/1 determine/NN/determine smallest/NN/smallest k/NN/k such/JJ/such that/IN/that b/NN/b of/IN/of k/NN/k equal/JJ/equal to/TO/to a/DT/a of/IN/of 1/CD/1. second/JJ/second find/NN/find capital/NN/capital l/NN/l equals/NNS/equals lcs/NNS/lcs of/IN/of a/DT/a of/IN/of 2/CD/2 to/TO/to m/VB/m /,/, b/NN/b of/IN/of k/NN/k plus/CC/plus 1/CD/1 to/TO/to n/NNP/n. why/WRB/why did/VBD/did we/PRP/we do/VBP/do this/DT/this well/RB/well this/DT/this ?/./? well/RB/well this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 30/CD/30 /:/: 04/CD/04 /CD/) /CD/) immediately/RB/immediately from/IN/from our/PRP$/our claim/NNP/claim. so/RB/so /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 30/CD/30 /:/: 09/CD/09 /CD/) /CD/) r/NN/r 2/CD/2 p/NN/p we/PRP/we claimed/VBD/claimed is/VBZ/is an/DT/an lcs/NNS/lcs of/IN/of this/NNP/this. so/RB/so /,/, we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what this/DT/this is/NNP/is. so/RB/so /,/, we/PRP/we just/RB/just find/VBP/find it/NNP/it. so/RB/so /,/, we/PRP/we just/RB/just use/VBP/use recursion/NN/recursion for/IN/for it/NNP/it. and/CC/and finally/RB/finally /,/, return/NN/return r/NN/r equal/JJ/equal to/TO/to a/DT/a of/IN/of 1/CD/1 concatenated/VBN/concatenated with/IN/with this/DT/this l/NNP/l. so/RB/so /,/, we/PRP/we claim/VBP/claim that/IN/that this/DT/this we/PRP/we showed/VBD/showed /,/, that/IN/that this/DT/this has/VBZ/has to/TO/to be/VB/be along/IN/along a/DT/a common/JJ/common sequence/NN/sequence of/IN/of both/DT/both a/DT/a and/CC/and b/NNP/b. such/JJ/such that/IN/that it/PRP/it lies/VBZ/lies in/IN/in s/NNS/s 1/CD/1 /,/, and/CC/and so/RB/so that/IN/that is/VBZ/is what/WP/what we/PRP/we have/VBP/have constructed/NNP/constructed. so/RB/so /,/, we/PRP/we have/VBP/have constructed/VBN/constructed a/DT/a procedure/NN/procedure for/IN/for searching/VBG/searching s/NNS/s 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 53/CD/53 /CD/) so/RB/so /,/, the/DT/the next/JJ/next thing/NN/thing is/VBZ/is to/TO/to find/VB/find a/DT/a procedure/NN/procedure for/IN/for searching/VBG/searching s/NNS/s 2.well/CD/2.well /,/, as/IN/as before/IN/before let/NN/let us/PRP/us write/VBP/write down/RP/down what/WP/what we/PRP/we are/VBP/are searching/VBG/searching for/NNP/for. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, we/PRP/we are/VBP/are searching/VBG/searching for/IN/for some/DT/some r/NN/r again/NNP/again. so/RB/so /,/, say/VB/say again/RB/again of/IN/of lengths/NNS/lengths p/VBP/p /,/, which/WDT/which is/VBZ/is longest/JJS/longest on/IN/on s/NNS/s 2/CD/2. can/MD/can we/PRP/we characterize/VB/characterize are/VBP/are further/NNP/further. well/RB/well /,/, we/PRP/we know/VBP/know that/IN/that r/NN/r is/VBZ/is a/DT/a subsequence/NN/subsequence of/IN/of a/DT/a 2/CD/2 to/TO/to m/NNP/m. why/WRB/why 2/CD/2 to/TO/to m/NNP/m. because/IN/because we/PRP/we know/VBP/know that/IN/that a/DT/a 1/CD/1 does/VBZ/does not/RB/not appear/VB/appear in/IN/in it/NNP/it. so/RB/so /,/, there/EX/there is/VBZ/is no/DT/no question/NN/question of/IN/of r/NN/r being/VBG/being a/DT/a subsequence/NN/subsequence of/IN/of a/DT/a whole/JJ/whole thing/NNP/thing. so/RB/so /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be 2/CD/2 to/TO/to m/NNP/m. and/CC/and r/NN/r is/VBZ/is also/RB/also subsequence/NN/subsequence of/IN/of b/NN/b 1/CD/1 to/TO/to n/NNP/n. so/RB/so /,/, note/VBP/note that/IN/that over/IN/over here/RB/here /,/, we/PRP/we have/VBP/have use/VBP/use a/DT/a defining/NN/defining property/NN/property of/IN/of s/NNS/s 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how you/PRP/you have/VBP/have characterized/VBN/characterized r/NNP/r. so/RB/so /,/, at/IN/at this/DT/this point/NN/point it/PRP/it might/MD/might be/VB/be tempt/VBN/tempt into/IN/into claim/NN/claim or/CC/or at/IN/at least/JJS/least conjecture/NN/conjecture that/WDT/that perhaps/RB/perhaps r/VBP/r should/MD/should be/VB/be the/DT/the longest/JJS/longest common/JJ/common subsequence/NN/subsequence of/IN/of both/DT/both of/IN/of these/NNP/these. that/IN/that is/VBZ/is the/DT/the nice/JJ/nice conjecture/NNP/conjecture. but/CC/but /,/, unfortunately/RB/unfortunately it/PRP/it is/VBZ/is not/RB/not true/NNP/true. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to explain/VB/explain it/PRP/it into/IN/into much/JJ/much detail/NNP/detail. but/CC/but /,/, let/VB/let me/PRP/me just/RB/just give/VBP/give you/PRP/you /,/, a/DT/a hint/NN/hint of/IN/of why/WRB/why it/PRP/it is/VBZ/is not/RB/not true/JJ/true and/CC/and then/RB/then you/PRP/you can/MD/can prove/VB/prove it/PRP/it for/IN/for yourself/NNP/yourself. so/RB/so /,/, just/RB/just consider/JJR/consider a/DT/a as/RB/as a/DT/a sequence/NN/sequence of/IN/of letters/NNS/letters a/DT/a a/DT/a a/DT/a a/NNP/a. and/CC/and b/NN/b say/VB/say as/IN/as also/RB/also the/DT/the same/NNP/same. then/RB/then /,/, work/NN/work out/RP/out what/WP/what x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2 are/VBP/are going/VBG/going to/TO/to be/VB/be /,/, and/CC/and the/DT/the you/PRP/you see/VBP/see why/WRB/why this/DT/this is/VBZ/is not/RB/not true/NNP/true. so/RB/so /,/, r/NN/r is/VBZ/is not/RB/not the/DT/the longest/JJS/longest common/JJ/common subsequence/NN/subsequence of/IN/of both/DT/both of/IN/of these/NNP/these. however/RB/however /,/, something/NN/something equally/RB/equally useful/JJ/useful is/VBZ/is true/NNP/true. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. so/RB/so /,/, what/WDT/what is/VBZ/is true/JJ/true is/VBZ/is the/DT/the following/NNP/following. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 54/CD/54 /CD/) so/RB/so /,/, i/PRP/i claim/VBP/claim that/IN/that r/NN/r as/IN/as defined/VBN/defined here/RB/here is/VBZ/is no/DT/no longer/NN/longer then/RB/then lcs/VBZ/lcs of/IN/of a/DT/a 2/CD/2 through/IN/through m/NN/m and/CC/and b/NN/b 1/CD/1 through/IN/through n/NNP/n. i/PRP/i will/MD/will tell/VB/tell you/PRP/you /,/, why/WRB/why this/DT/this is/VBZ/is useful/JJ/useful in/IN/in a/DT/a minute/NNP/minute. let/NN/let me/PRP/me /,/, prove/VBP/prove it/PRP/it first/NNP/first. the/DT/the proof/NN/proof is/VBZ/is actually/RB/actually a/DT/a single/JJ/single line/NNP/line. we/PRP/we know/VBP/know that/IN/that r/NN/r is/VBZ/is a/DT/a common/JJ/common sequence/NN/sequence of/IN/of both/DT/both of/IN/of these/NNP/these. so/RB/so well/RB/well /,/, so/RB/so it/PRP/it can/MD/can not/RB/not be/VB/be longer/RB/longer than/IN/than lcs/NNS/lcs of/IN/of these/DT/these two/CD/two sequences/NNS/sequences /,/, so/RB/so done/NNP/done. so/IN/so /,/, let/VB/let me/PRP/me now/RB/now compare/VBP/compare to/TO/to this/DT/this conclusion/NN/conclusion that/IN/that we/PRP/we have/VBP/have written/VBN/written earlier/NNP/earlier. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that we/PRP/we want/VBP/want to/TO/to here/RB/here is/VBZ/is a/DT/a procedure/NN/procedure for/IN/for looking/VBG/looking for/IN/for the/DT/the longest/JJS/longest element/NN/element in/IN/in s/NNS/s 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 56/CD/56 /CD/) so/RB/so /,/, we/PRP/we also/RB/also want/VBP/want to/TO/to procedure/VB/procedure for/IN/for looking/VBG/looking for/IN/for the/DT/the longest/JJS/longest element/NN/element in/IN/in s/NNS/s 2/CD/2. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/IN/down over/IN/over here/NNP/here. so/RB/so /,/, what/WDT/what will/MD/will that/IN/that procedure/NN/procedure look/NN/look like/IN/like ?/./? so/RB/so /,/, i/PRP/i claim/VBP/claim /,/, that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to define/VB/define r/NN/r prime/NN/prime equal/JJ/equal to/TO/to lcs/NNS/lcs of/IN/of a/DT/a of/IN/of 2/CD/2 through/IN/through m/NN/m /,/, b/NN/b of/IN/of 1/CD/1 through/IN/through n/NNP/n. so/RB/so /,/, this/DT/this will/MD/will be/VB/be generated/VBN/generated by/IN/by recursive/JJ/recursive call/NNP/call. and/CC/and this/DT/this is/VBZ/is no/DT/no smaller/JJR/smaller /,/, no/DT/no shorter/NN/shorter than/IN/than longest/JJS/longest of/IN/of s/NNS/s 2/CD/2. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have /,/, we/PRP/we have/VBP/have a/DT/a procedure/NN/procedure to/TO/to determine/VB/determine the/DT/the longest/JJS/longest element/NN/element and/CC/and s/NNS/s 1/CD/1 /,/, and/CC/and an/DT/an element/NN/element /,/, which/WDT/which is/VBZ/is no/DT/no shorter/NN/shorter than/IN/than the/DT/the longest/JJS/longest of/IN/of s/NNS/s 2/CD/2. so/RB/so /,/, is/VBZ/is this/DT/this useful/JJ/useful /,/, so/RB/so what/WP/what was/VBD/was our/PRP$/our goal/NNP/goal. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to our/PRP$/our goal/NNP/goal. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 04/CD/04 /CD/) our/PRP$/our goal/NN/goal was/VBD/was to/TO/to determine/VB/determine the/DT/the longest/JJS/longest of/IN/of the/DT/the longest/JJS/longest the/DT/the longest/JJS/longest of/IN/of s/NNS/s 1/CD/1 and/CC/and the/DT/the longest/NN/longest of/IN/of s/NNS/s 2/CD/2. and/CC/and of/IN/of course/NN/course /,/, so/RB/so long/RB/long as/IN/as and/CC/and we/PRP/we would/MD/would happy/NNP/happy. so/RB/so /,/, long/RB/long as/IN/as it/PRP/it is/VBZ/is longer/JJR/longer itself/PRP/itself in/IN/in s/NNP/s. so/RB/so /,/, this/DT/this we/PRP/we know/VBP/know /,/, this/DT/this is/VBZ/is our/PRP$/our /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we just/RB/just said/VBD/said or/CC/or and/CC/and this/DT/this is/VBZ/is r/NNP/r. what/WP/what if/IN/if i/PRP/i put/VBD/put r/RP/r prime/JJ/prime over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is no/DT/no shorter/NNP/shorter. and/CC/and so/RB/so if/IN/if i/PRP/i take/VBP/take the/DT/the larger/JJR/larger of/IN/of this/DT/this it/PRP/it will/MD/will certainly/RB/certainly be/VB/be no/RB/no shorter/JJR/shorter than/IN/than all/DT/all of/IN/of this/NNP/this. and/CC/and it/PRP/it will/MD/will also/RB/also lie/VB/lie in/IN/in our/PRP$/our original/JJ/original space/NNP/space. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is also/RB/also /,/, so/RB/so the/DT/the longest/JJS/longest of/IN/of s/NNS/s and/CC/and so/RB/so if/IN/if i/PRP/i substitute/VBP/substitute r/JJ/r prime/NN/prime over/IN/over here/NNP/here. that/IN/that is/VBZ/is fine/NNP/fine. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but longer/JJR/longer of/IN/of the/DT/the longest/JJS/longest of/IN/of s/NNS/s 1/CD/1. and/CC/and no/DT/no shorter/NN/shorter than/IN/than longest/JJS/longest of/IN/of s/NNS/s 2/CD/2 provided/VBN/provided this/DT/this also/RB/also lies/VBZ/lies in/IN/in s/NNP/s. so/RB/so /,/, if/IN/if i/PRP/i do/VBP/do this/NNP/this. i/PRP/i will/MD/will still/RB/still be/VB/be happy/NNP/happy. and/CC/and therefore/RB/therefore /,/, this/DT/this conclusion/NN/conclusion that/IN/that we/PRP/we have/VBP/have written/VBN/written /-NONE-/( /:/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 27/CD/27 /CD/) /CD/) is/VBZ/is good/JJ/good in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, if/IN/if i/PRP/i compute/VBP/compute r/JJ/r prime/NN/prime in/IN/in this/DT/this way/NNP/way. i/PRP/i just/RB/just have/VBP/have to/TO/to return/VB/return the/DT/the longer/NN/longer of/IN/of r/NN/r prime/JJ/prime and/CC/and r/NN/r /,/, and/CC/and that/IN/that will/MD/will give/VB/give may/MD/may the/DT/the best/JJS/best answer/NN/answer for/IN/for the/DT/the original/JJ/original space/NN/space itself/NNP/itself. so/RB/so /,/, now/RB/now we/PRP/we are/VBP/are ready/RB/ready to/TO/to write/VB/write down/RP/down our/PRP$/our general/JJ/general search/NN/search procedure/NNP/procedure. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 08/CD/08 /CD/) so/RB/so /,/, recursive/JJ/recursive procedure/NN/procedure /,/, which/WDT/which i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call lcs/NNP/lcs. it/PRP/it will/MD/will take/VB/take as/IN/as arguments/NNS/arguments a/DT/a of/IN/of 1/CD/1 through/IN/through m/NN/m /,/, and/CC/and b/NN/b of/IN/of 1/CD/1 through/IN/through n/NNP/n. and/CC/and now/RB/now /,/, since/IN/since we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write it/PRP/it as/IN/as a/DT/a procedure/NN/procedure /,/, let/VB/let us/PRP/us we/PRP/we careful/VBP/careful about/IN/about boundary/JJ/boundary conditions/NNP/conditions. so/RB/so /,/, if/IN/if a/DT/a equal/JJ/equal to/TO/to null/VB/null or/CC/or b/VB/b equal/JJ/equal to/TO/to null/NNP/null. that/IN/that is/VBZ/is as/IN/as equal/JJ/equal to/TO/to saying/VBG/saying /,/, say/VB/say these/DT/these are/VBP/are strings/NNS/strings of/IN/of 0/-NONE-/0 length/NNP/length. so/RB/so /,/, say/VB/say first/JJ/first index/NN/index is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the second/JJ/second index/NN/index return/NN/return null/NNP/null. so/RB/so /,/, clearly/RB/clearly the/DT/the longest/JJS/longest common/JJ/common sequence/NN/sequence of/IN/of 2/CD/2 null/NN/null sequence/NN/sequence or/CC/or 1/CD/1 null/JJ/null and/CC/and something/NN/something else/RB/else is/VBZ/is null/JJ/null sequence/NNP/sequence. now/RB/now /,/, now/RB/now we/PRP/we have/VBP/have to/TO/to worry/VB/worry about/IN/about the/DT/the main/JJ/main case/NNP/case. so/RB/so /,/, let/VB/let us/PRP/us start/VB/start by/IN/by doing/NN/doing that/NNP/that. so/RB/so /,/, we/PRP/we are/VBP/are first/RB/first going/VBG/going to/TO/to see/VB/see how/WRB/how s/NNS/s 1/CD/1 is/VBZ/is going/VBG/going to/TO/to be/VB/be searched/NNP/searched. so/RB/so /,/, k/NN/k is/VBZ/is equal/JJ/equal to/TO/to smallest/NNP/smallest. such/JJ/such that/IN/that b/NN/b of/IN/of k/NN/k is/VBZ/is equal/JJ/equal to/TO/to a/DT/a of/IN/of 1/CD/1 remember/NN/remember /,/, we/PRP/we are/VBP/are searching/VBG/searching s/NNS/s 1/CD/1 and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we did/NNP/did. if/IN/if k/NN/k equal/JJ/equal to/TO/to null/VB/null as/IN/as here/RB/here or/CC/or k/VB/k is/VBZ/is undefined/VBN/undefined that/IN/that is/VBZ/is my/PRP$/my short/NN/short form/NN/form for/IN/for that/DT/that is/VBZ/is k/NN/k equal/JJ/equal to/TO/to null/VB/null is/VBZ/is a/DT/a short/JJ/short for/IN/for saying/VBG/saying that/NNP/that. then/RB/then /,/, again/RB/again will/MD/will return/VB/return null/NNP/null. otherwise/NN/otherwise this/DT/this will/MD/will /VB/( /:/( refer/NN/refer time/NN/time /:/: 38/CD/38 /:/: 37/CD/37 /CD/) /CD/) /./. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do all/PDT/all this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write or/CC/or i/PRP/i will/MD/will just/RB/just write/VB/write it/PRP/it jointly/NNP/jointly. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to compute/VB/compute r/NN/r equals/NNS/equals all/DT/all of/IN/of this/NNP/this. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that down/NNP/down. otherwise/NN/otherwise /,/, will/MD/will compute/VB/compute r/NN/r equals/NNS/equals a/DT/a of/IN/of 1/CD/1 concatenated/VBN/concatenated with/IN/with lcs/NNS/lcs of/IN/of a/DT/a of/IN/of 2/CD/2 through/IN/through m/NNP/m. and/CC/and b/NN/b of/IN/of k/NN/k plus/CC/plus 1/CD/1 through/IN/through n/NN/n /,/, then/RB/then they/PRP/they will/MD/will compute/VB/compute r/NN/r prime/NNP/prime. now/RB/now /,/, this/DT/this time/NN/time we/PRP/we are/VBP/are searching/VBG/searching s/NNS/s 2/CD/2. so/RB/so /,/, that/IN/that as/IN/as lcs/NNS/lcs of/IN/of a/DT/a of/IN/of 2/CD/2 through/IN/through m/NN/m and/CC/and b/NN/b of/IN/of 1/CD/1 through/IN/through n/NNP/n. and/CC/and then/RB/then we/PRP/we will/MD/will return/VB/return the/DT/the longer/NN/longer of/IN/of r/NN/r and/CC/and r/NN/r prime/NNP/prime. so/RB/so /,/, we/PRP/we will/MD/will get/VB/get r/NN/r and/CC/and r/NN/r prime/NN/prime explicitly/RB/explicitly will/MD/will compute/VB/compute there/EX/there lengths/NNP/lengths. and/CC/and will/MD/will return/VB/return the/DT/the longer/NN/longer of/IN/of the/DT/the two/NNP/two. now/RB/now /,/, i/PRP/i should/MD/should point/VB/point out/RP/out some/DT/some technicalities/NNP/technicalities. so/RB/so /,/, in/IN/in this/DT/this call/NN/call we/PRP/we wrote/VBD/wrote down/RP/down a/DT/a of/IN/of 2/CD/2 through/IN/through m/NNP/m. the/DT/the moment/NN/moment we/PRP/we write/VBP/write down/RP/down a/DT/a of/IN/of 2/CD/2 through/IN/through m/NN/m /,/, we/PRP/we are/VBP/are implicitly/RB/implicitly assuming/VBG/assuming that/IN/that m/NN/m is/VBZ/is bigger/JJR/bigger than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2 /,/, which/WDT/which may/MD/may not/RB/not be/VB/be true/JJ/true m/NN/m might/MD/might be/VB/be equal/JJ/equal to/TO/to 1/CD/1. in/IN/in this/DT/this case/NN/case /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume that/IN/that an/DT/an expression/NN/expression like/IN/like this/DT/this will/MD/will be/VB/be evaluated/VBN/evaluated as/IN/as null/NNP/null. so/RB/so /,/, instead/RB/instead of/IN/of passing/VBG/passing /,/, so/RB/so this/DT/this expression/NN/expression will/MD/will be/VB/be passed/VBN/passed as/IN/as null/JJ/null if/IN/if m/NN/m is/VBZ/is in/IN/in fact/NN/fact /,/, smaller/JJR/smaller than/IN/than 2/CD/2. so/RB/so /,/, what/WDT/what will/MD/will happen/VB/happen then/RB/then /,/, when/WRB/when this/DT/this comes/VBZ/comes over/IN/over here/RB/here in/IN/in the/DT/the recursive/JJ/recursive call/NN/call and/CC/and null/JJ/null will/MD/will be/VB/be return/NNP/return. but/CC/but /,/, which/WDT/which is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we want/VBP/want over/IN/over here/NNP/here. and/CC/and so/RB/so therefore/RB/therefore /,/, this/DT/this interpretation/NN/interpretation is/VBZ/is fine/NNP/fine. so/RB/so /,/, i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to write/VB/write that/IN/that is/VBZ/is special/JJ/special case/NN/case /,/, whether/IN/whether m/NN/m is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 2/CD/2. it/PRP/it is/VBZ/is just/RB/just handle/JJ/handle by/IN/by saying/VBG/saying that/IN/that /,/, this/DT/this just/RB/just represents/VBZ/represents null/JJ/null strings/NNS/strings or/CC/or null/JJ/null sequence/NNP/sequence. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our basic/JJ/basic recursive/JJ/recursive procedure/NNP/procedure. now/RB/now /,/, one/CD/one possibility/NN/possibility might/MD/might be/VB/be to/TO/to write/VB/write down/RP/down the/DT/the recurrence/NN/recurrence to/TO/to estimate/VB/estimate the/DT/the time/NN/time taken/VBN/taken for/IN/for this/NNP/this. and/CC/and i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do that/NNP/that. and/CC/and you/PRP/you will/MD/will see/VB/see /,/, that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is actually/RB/actually quite/RB/quite large/NNP/large. it/PRP/it will/MD/will be/VB/be exponential/NNP/exponential. however/RB/however /,/, that/IN/that is/VBZ/is not/RB/not where/WRB/where we/PRP/we stop/VBP/stop dynamic/JJ/dynamic programming/NN/programming require/NN/require first/RB/first go/VB/go further/NNP/further. and/CC/and that/IN/that is/VBZ/is that/IN/that next/JJ/next step/NN/step is/VBZ/is in/IN/in fact/NN/fact /,/, the/DT/the one/CD/one which/WDT/which is/VBZ/is going/VBG/going to/TO/to improve/VB/improve the/DT/the time/NN/time for/IN/for us/NNP/us. so/RB/so /,/, what/WDT/what this/DT/this dynamic/JJ/dynamic programming/NN/programming require/NNP/require. so/RB/so /,/, dynamic/JJ/dynamic programming/NN/programming as/IN/as such/JJ/such to/TO/to characterize/VB/characterize what/WP/what recursive/JJ/recursive calls/NNS/calls happen/VBP/happen in/IN/in this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at that/NNP/that. so/RB/so /,/, first/JJ/first the/DT/the recursive/JJ/recursive call/NN/call is/VBZ/is this/NNP/this. after/IN/after that/DT/that /,/, there/EX/there are/VBP/are two/CD/two recursive/JJ/recursive calls/NNP/calls. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a recursive/JJ/recursive call/NN/call over/IN/over here/NNP/here. and/CC/and then/RB/then there/RB/there is/VBZ/is a/DT/a recursive/JJ/recursive call/NN/call over/IN/over here/NNP/here. so/RB/so /,/, is/VBZ/is there/EX/there any/DT/any nice/NN/nice property/NN/property /,/, which/WDT/which we/PRP/we know/VBP/know for/IN/for this/DT/this recursive/JJ/recursive calls/NNP/calls. well/RB/well /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at a/DT/a the/DT/the argument/NN/argument pass/NN/pass for/IN/for first/JJ/first string/NN/string it/PRP/it is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be some/DT/some part/NN/part of/IN/of a/NNP/a. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the second/JJ/second index/NN/index is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be m/NNP/m. similarly/RB/similarly /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the second/JJ/second argument/NN/argument to/TO/to the/DT/the recursive/JJ/recursive call/NN/call it/PRP/it is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be b/NNP/b. the/DT/the second/JJ/second argument/NN/argument is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be n/NNP/n. the/DT/the terminal/JJ/terminal index/NN/index in/IN/in that/DT/that array/NN/array is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be n/NNP/n. in/IN/in the/DT/the first/JJ/first index/NN/index could/MD/could be/VB/be anything/NN/anything /,/, it/PRP/it could/MD/could be/VB/be k/NN/k plus/CC/plus 1/CD/1. and/CC/and if/IN/if you/PRP/you recurs/VBZ/recurs again/RB/again /,/, this/DT/this property/NN/property is/VBZ/is going/VBG/going to/TO/to stay/VB/stay they/PRP/they say/NNP/say.... so/RB/so /,/, we/PRP/we are/VBP/are /,/, so/RB/so when/WRB/when we/PRP/we recurs/VBZ/recurs the/DT/the key/NN/key idea/NN/idea is/VBZ/is that/IN/that when/WRB/when we/PRP/we recurs/VBZ/recurs our/PRP$/our calls/NNS/calls are/VBP/are going/VBG/going to/TO/to be/VB/be something/NN/something like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 39/CD/39 /CD/) so/RB/so /,/, all/DT/all calls/NNS/calls /,/, which/WDT/which are/VBP/are going/VBG/going to/TO/to be/VB/be made/VBN/made are/VBP/are going/VBG/going to/TO/to have/VB/have the/DT/the form/NN/form lcs/NNS/lcs of/IN/of a/DT/a of/IN/of i/PRP/i to/TO/to m/VB/m /,/, b/NN/b of/IN/of j/NN/j to/TO/to n/NNP/n. where/WRB/where /,/, i/PRP/i and/CC/and j/VB/j could/MD/could be/VB/be anything/NNP/anything. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an important/JJ/important observation/NNP/observation. and/CC/and this/DT/this is/VBZ/is an/DT/an important/JJ/important part/NN/part of/IN/of the/DT/the whole/JJ/whole dynamic/JJ/dynamic programming/NN/programming strategy/NNP/strategy. so/RB/so /,/, once/RB/once we/PRP/we know/VBP/know that/IN/that all/DT/all calls/NNS/calls are/VBP/are of/IN/of these/DT/these kinds/NNP/kinds. so/RB/so /,/, let/VB/let me/PRP/me actually/RB/actually note/VBP/note that/IN/that down/IN/down /CD/( refer/NN/refer time/NN/time /:/: 43/CD/43 /:/: 10/CD/10 /CD/) /CD/) going/VBG/going to/TO/to be/VB/be a/DT/a this/DT/this kind/NNP/kind. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this term/NN/term say/VBP/say /,/, where/WRB/where 1/CD/1 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to i/PRP/i is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to m/NNP/m. and/CC/and 1/CD/1 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to j/VB/j is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n/NNP/n. dynamic/JJ/dynamic programming/NN/programming says/VBZ/says let/NN/let us/PRP/us define/VBP/define a/DT/a table/JJ/table let/NN/let us/PRP/us called/VBD/called t/NNP/t. such/JJ/such that/IN/that it/PRP/it is/VBZ/is entry/NN/entry is/VBZ/is will/MD/will save/VB/save the/DT/the solution/NN/solution answers/NNS/answers to/TO/to these/DT/these calls/NNP/calls. so/RB/so /,/, t/NN/t i/PRP/i j/VBP/j will/MD/will store/VB/store lcs/NNS/lcs of/IN/of a/DT/a i/NN/i to/TO/to m/VB/m /,/, b/NN/b j/NN/j to/TO/to n/NNP/n. so/RB/so /,/, actually/RB/actually i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use not/RB/not i/PRP/i ranging/VBG/ranging over/IN/over just/RB/just 1/CD/1 through/IN/through m/NN/m /,/, but/CC/but over/IN/over 1/CD/1 through/IN/through m/NN/m plus/CC/plus 1/CD/1. and/CC/and j/NN/j will/MD/will arrange/VB/arrange over/IN/over 1/CD/1 through/IN/through n/NN/n plus/CC/plus 1/CD/1. and/CC/and the/DT/the reason/NN/reason for/IN/for that/DT/that will/MD/will become/VB/become clear/JJ/clear in/IN/in a/DT/a minute/NNP/minute. it/PRP/it will/MD/will serve/VB/serve as/IN/as a/DT/a certain/JJ/certain kind/NN/kind of/IN/of /NN/( /:/( refer/NN/refer time/NN/time /:/: 44/CD/44 /:/: 18/CD/18 /CD/) /./. so/RB/so /,/, this/DT/this will/MD/will be/VB/be two/CD/two dimensional/JJ/dimensional table/JJ/table with/IN/with m/NN/m plus/CC/plus 1/CD/1 rows/NNS/rows /,/, and/CC/and m/NN/m plus/RB/plus 1/CD/1 columns/NNP/columns. and/CC/and now/RB/now our/PRP$/our goal/NN/goal is/VBZ/is simply/RB/simply to/TO/to fill/VB/fill in/IN/in the/DT/the entries/NNS/entries of/IN/of this/DT/this table/NNP/table. so/RB/so /,/, once/RB/once we/PRP/we filling/VBG/filling the/DT/the entries/NNS/entries of/IN/of the/DT/the table/NN/table t/NN/t of/IN/of 1,1/CD/1,1 will/MD/will be/VB/be lcs/NNS/lcs of/IN/of a/DT/a 1/CD/1 through/IN/through m/NN/m and/CC/and b/NN/b 1/CD/1 through/IN/through m/NNP/m. and/CC/and that/IN/that is/VBZ/is the/DT/the solution/NN/solution we/PRP/we are/VBP/are looking/VBG/looking for/NNP/for. so/RB/so /,/, if/IN/if we/PRP/we can/MD/can generate/VB/generate the/DT/the procedure/NN/procedure for/IN/for filling/NN/filling these/DT/these entries/NNP/entries. and/CC/and it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a non/NN/non recursive/NN/recursive procedure/NNP/procedure. then/RB/then we/PRP/we will/MD/will be/VB/be done/NNP/done. so/RB/so /,/, long/RB/long as/IN/as we/PRP/we say/VBP/say /,/, in/IN/in which/WDT/which order/NN/order the/DT/the entries/NNS/entries are/VBP/are going/VBG/going to/TO/to be/VB/be filled/NNP/filled. so/RB/so /,/, i/PRP/i claim/VBP/claim that/IN/that from/IN/from this/DT/this procedure/NN/procedure of/IN/of ours/NNS/ours /,/, there/EX/there is/VBZ/is a/DT/a fairly/RB/fairly nice/JJ/nice way/NN/way of/IN/of filling/NN/filling in/IN/in the/DT/the entries/NNP/entries. so/RB/so /,/, why/WRB/why is/VBZ/is that/IN/that ?/./? so/RB/so /,/, let/VB/let me/PRP/me define/VB/define fill/NN/fill i/PRP/i j/VBP/j as/IN/as follows/NNP/follows. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 20/CD/20 /CD/) so/RB/so /,/, what/WDT/what is/VBZ/is will/MD/will i/VB/i j/NN/j going/VBG/going to/TO/to do/NNP/do. it/PRP/it is/VBZ/is going/VBG/going to/TO/to fill/VB/fill the/DT/the entry/NN/entry t/NN/t i/PRP/i j/NNP/j. but/CC/but /,/, what/WP/what is/VBZ/is t/VBN/t i/PRP/i j/NNP/j. t/NN/t i/PRP/i j/VBP/j is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the lcs/NNS/lcs let/VBP/let me/PRP/me write/RB/write that/IN/that term/NNP/term. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be lcs/NNS/lcs of/IN/of a/DT/a i/NN/i through/IN/through m/NN/m /,/, b/NN/b j/NN/j through/IN/through n/NNP/n. so/RB/so /,/, let/VB/let me/PRP/me comment/VB/comment it/NNP/it. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what the/DT/the entries/NNS/entries suppose/VBP/suppose to/TO/to be/NNP/be. the/DT/the fill/NN/fill is/VBZ/is suppose/JJ/suppose to/TO/to written/VBN/written this/DT/this entry/NNP/entry. now/RB/now /,/, if/IN/if we/PRP/we look/VBP/look at/IN/at our/PRP$/our original/JJ/original procedure/NN/procedure then/RB/then this/DT/this is/VBZ/is after/IN/after all/DT/all a/DT/a string/NN/string and/CC/and this/DT/this is/VBZ/is another/DT/another string/NNP/string. and/CC/and we/PRP/we could/MD/could just/RB/just as/IN/as will/MD/will pass/VB/pass this/DT/this string/NN/string or/CC/or these/DT/these two/CD/two subsequences/NNP/subsequences. so/RB/so /,/, all/DT/all i/PRP/i have/VBP/have to/TO/to do/VB/do is/VBZ/is to/TO/to mimic/JJ/mimic what/WP/what happens/NNS/happens in/IN/in this/DT/this procedure/NNP/procedure. and/CC/and see/VB/see /,/, how/WRB/how fill/NN/fill should/MD/should really/RB/really behave/NNP/behave. so/RB/so /,/, the/DT/the first/JJ/first step/NN/step is/VBZ/is /,/, if/IN/if a/DT/a is/VBZ/is equal/JJ/equal to/TO/to null/VB/null or/CC/or b/VB/b is/VBZ/is equal/JJ/equal to/TO/to null/VB/null /,/, then/RB/then return/VB/return null/NNP/null. so/RB/so /,/, in/IN/in this/DT/this case/NN/case /,/, what/WP/what does/VBZ/does being/VBG/being null/NN/null mean/NNP/mean. so/RB/so /,/, being/VBG/being null/NN/null is/VBZ/is simply/RB/simply if/IN/if you/PRP/you want/VBP/want to/TO/to saying/VBG/saying /,/, when/WRB/when does/VBZ/does this/DT/this expression/NN/expression not/RB/not having/VBG/having any/DT/any meaning/NN/meaning at/IN/at all/NNP/all. so/RB/so /,/, i/PRP/i will/MD/will interpret/VB/interpret that/IN/that as/IN/as saying/VBG/saying if/IN/if i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than n/NN/n or/CC/or j/NN/j is/VBZ/is greater/JJR/greater than/IN/than n/NN/n /,/, then/RB/then it/PRP/it does/VBZ/does not/RB/not make/VB/make sense/NNP/sense. and/CC/and then/RB/then so/RB/so we/PRP/we will/MD/will return/VB/return null/NNP/null. so/RB/so /,/, that/IN/that is/VBZ/is that/IN/that take/NN/take care/NN/care of/IN/of that/NNP/that. in/IN/in the/DT/the next/JJ/next step/NN/step is/VBZ/is i/PRP/i have/VBP/have to/TO/to find/VB/find out/RP/out /,/, what/WP/what this/DT/this smallest/JJS/smallest k/NN/k is/VBZ/is such/JJ/such that/IN/that b/NN/b k/NN/k equal/JJ/equal to/TO/to a/DT/a 1/CD/1. now/RB/now /,/, here/RB/here the/DT/the string/NN/string was/VBD/was starting/VBG/starting from/IN/from the/DT/the first/JJ/first index/NN/index a/NNP/a. here/RB/here /,/, we/PRP/we are/VBP/are starting/VBG/starting from/IN/from i/NNP/i. so/RB/so /,/, naturally/RB/naturally instead/RB/instead of/IN/of 1/CD/1 over/IN/over here/RB/here /,/, i/PRP/i should/MD/should be/VB/be looking/VBG/looking at/IN/at the/DT/the ith/NN/ith element/NN/element over/IN/over here/RB/here /,/, because/IN/because this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but a/DT/a starting/NN/starting element/NN/element of/IN/of this/DT/this string/NNP/string. and/CC/and therefore/RB/therefore /,/, this/DT/this should/MD/should be/VB/be the/DT/the element/NN/element that/IN/that i/PRP/i look/VBP/look at/NNP/at. so/RB/so /,/, our/PRP$/our corresponding/NN/corresponding step/NN/step over/IN/over here/RB/here is/VBZ/is going/VBG/going to/TO/to be/VB/be k/NN/k equals/NNS/equals smallest/VBP/smallest /,/, such/JJ/such that/IN/that b/NN/b of/IN/of k/NN/k equals/NNS/equals a/DT/a of/IN/of i/NNP/i. and/CC/and of/IN/of course/NN/course /,/, k/NN/k is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to j/NNP/j. why/WRB/why this/DT/this because/IN/because we/PRP/we want/VBP/want to/TO/to search/NN/search to/TO/to happen/VB/happen from/IN/from starting/VBG/starting from/IN/from j/NN/j over/IN/over here/NNP/here. within/IN/within this/DT/this string/NN/string we/PRP/we do/VBP/do not/RB/not want/VB/want this/DT/this search/NN/search to/TO/to go/VB/go before/IN/before b/NNP/b. the/DT/the next/JJ/next step/NN/step over/IN/over here/RB/here /:/( /:/( refer/NN/refer time/NN/time /:/: 48/CD/48 /:/: 03/CD/03 /CD/) /CD/) was/VBD/was if/IN/if k/NN/k equal/JJ/equal to/TO/to null/VB/null then/RB/then return/VB/return null/NNP/null. so/RB/so /,/, we/PRP/we could/MD/could put/VB/put that/IN/that in/NNP/in. but/CC/but /,/, we/PRP/we do/VBP/do not/RB/not as/IN/as a/DT/a terms/NNS/terms out/IN/out we/PRP/we do/VBP/do not/RB/not need/VB/need to/NNP/to. so/RB/so /,/, the/DT/the next/JJ/next step/NN/step is/VBZ/is going/VBG/going to/TO/to be/VB/be r/JJ/r is/VBZ/is equal/JJ/equal to/TO/to a/DT/a of/IN/of 1/CD/1 concatenated/VBN/concatenated with/IN/with this/DT/this lcs/NNP/lcs. but/CC/but /,/, remember/NN/remember that/IN/that we/PRP/we do/VBP/do not/RB/not want/VB/want to/TO/to recursive/VB/recursive calls/NNP/calls. so/RB/so /,/, we/PRP/we can/MD/can not/RB/not write/VB/write filled/VBN/filled of/IN/of all/DT/all of/IN/of this/NNP/this. however/RB/however /,/, we/PRP/we are/VBP/are allow/RB/allow to/TO/to assume/VB/assume that/IN/that the/DT/the table/NN/table is/VBZ/is already/RB/already full/NNP/full. so/RB/so /,/, in/IN/in which/WDT/which case/NN/case what/WP/what can/MD/can we/PRP/we do/NNP/do. we/PRP/we can/MD/can write/VB/write over/IN/over here/RB/here t/NN/t of/IN/of a/DT/a of/IN/of 2/CD/2 through/IN/through m/NNP/m. but/CC/but /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 48/CD/48 /:/: 59/CD/59 /CD/) /CD/) a/DT/a of/IN/of 2/CD/2 through/IN/through m/NN/m has/VBZ/has to/TO/to be/VB/be interpreted/VBN/interpreted in/IN/in light/JJ/light of/IN/of this/DT/this a/DT/a of/IN/of 1/CD/1 through/IN/through m/NN/m /,/, which/WDT/which in/IN/in our/PRP$/our cases/NNS/cases i/PRP/i through/IN/through m/NNP/m. so/RB/so /,/, this/DT/this 2/CD/2 through/IN/through m/NN/m really/RB/really is/VBZ/is nothing/NN/nothing but/CC/but i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through m/NNP/m. so/NNP/so. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will be/VB/be writing/VBG/writing instead/RB/instead of/IN/of writing/VBG/writing a/DT/a of/IN/of 2/CD/2 through/IN/through m/NN/m we/PRP/we will/MD/will be/VB/be writing/VBG/writing t/NN/t of/IN/of i/PRP/i plus/VBZ/plus 1/CD/1 comma/NN/comma k/NN/k plus/CC/plus 1/CD/1. the/DT/the next/JJ/next thing/NN/thing is/VBZ/is r/NN/r prime/NN/prime and/CC/and again/RB/again over/IN/over here/RB/here instead/RB/instead of/IN/of lcs/NNS/lcs of/IN/of 2/CD/2 through/IN/through m/NNP/m. since/IN/since /,/, we/PRP/we started/VBD/started with/IN/with a/DT/a which/WDT/which is/VBZ/is going/VBG/going from/IN/from i/PRP/i through/IN/through m/NN/m this/DT/this will/MD/will be/VB/be i/PRP/i plus/RB/plus 1/CD/1. and/CC/and this/DT/this is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be 1/CD/1 through/IN/through n/NN/n /,/, but/CC/but this/DT/this will/MD/will be/VB/be j/NN/j through/IN/through n/NNP/n. so/RB/so /,/, this/DT/this will/MD/will mean/VB/mean that/IN/that r/NN/r prime/NN/prime will/MD/will be/VB/be slightly/RB/slightly different/NNP/different. so/RB/so /,/, r/NN/r prime/NN/prime will/MD/will have/VB/have to/TO/to be/VB/be table/JJ/table entry/NN/entry not/RB/not lcs/VBZ/lcs again/RB/again /,/, but/CC/but the/DT/the table/NN/table entry/NNP/entry. so/RB/so /,/, i/PRP/i plus/VBZ/plus 1/CD/1 comma/NN/comma j/NN/j /,/, so/RB/so this/DT/this is/VBZ/is what/WP/what it/PRP/it was/NNP/was. and/CC/and now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to return/VB/return the/DT/the longer/NN/longer of/IN/of r/NN/r and/CC/and r/NN/r prime/NNP/prime. so/RB/so /,/, now/RB/now here/RB/here essentially/RB/essentially done/VBN/done ?/./? so/RB/so /,/, we/PRP/we have/VBP/have return/VBN/return the/DT/the fill/NN/fill procedure/NNP/procedure. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, how/WRB/how the/DT/the fill/NN/fill procedure/NN/procedure is/VBZ/is working/VBG/working out/NNP/out. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 36/CD/36 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at our/PRP$/our table/NNP/table. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our table/NNP/table. so/RB/so /,/, in/IN/in our/PRP$/our table/JJ/table /,/, say/VBP/say i/PRP/i is/VBZ/is going/VBG/going in/IN/in this/DT/this direction/NN/direction /,/, j/NN/j is/VBZ/is going/VBG/going in/IN/in this/DT/this direction/NNP/direction. in/IN/in the/DT/the first/JJ/first step/NN/step is/VBZ/is /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 48/CD/48 /CD/) /CD/) if/IN/if i/PRP/i greater/JJR/greater than/IN/than m/NN/m or/CC/or j/NN/j greater/JJR/greater than/IN/than n/NN/n return/NN/return null/NNP/null. so/RB/so /,/, this/DT/this step/NN/step is/VBZ/is essentially/RB/essentially says/VBZ/says /,/, that/IN/that if/IN/if this/DT/this is/VBZ/is the/DT/the m/NN/m plus/VBZ/plus 1th/JJ/1th entry/NNP/entry. so/RB/so /,/, this/DT/this part/NN/part of/IN/of the/DT/the table/NN/table and/CC/and this/DT/this part/NN/part of/IN/of the/DT/the table/NN/table /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the n/NN/n plus/VBZ/plus 1/CD/1 entry/NN/entry over/IN/over here/RB/here or/CC/or going/VBG/going to/TO/to be/VB/be all/PDT/all nulls/NNS/nulls /,/, in/IN/in this/DT/this entire/JJ/entire thing/NNP/thing. now/RB/now /,/, if/IN/if we/PRP/we look/VBP/look at/IN/at i/PRP/i j/VBP/j /,/, how/WRB/how to/TO/to fill/VB/fill i/PRP/i j/VBP/j it/PRP/it depends/VBZ/depends on/IN/on i/PRP/i plus/VBZ/plus 1/CD/1 k/NN/k plus/CC/plus 1/CD/1 and/CC/and i/PRP/i plus/RB/plus 1/CD/1 and/CC/and j/NN/j /,/, these/DT/these are/VBP/are the/DT/the two/CD/two table/JJ/table and/CC/and /:/( /:/( refer/NN/refer time/NN/time /:/: 51/CD/51 /:/: 20/CD/20 /CD/) /CD/) depends/NNS/depends upon/NNP/upon. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that out/NNP/out. so/RB/so /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to fill/VB/fill /,/, so/RB/so this/DT/this is/VBZ/is some/DT/some index/NN/index i/PRP/i and/CC/and if/IN/if i/PRP/i want/VBP/want to/TO/to fill/VB/fill this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is this/DT/this j/NN/j over/IN/over here/NNP/here. then/RB/then this/DT/this entry/NN/entry is/VBZ/is going/VBG/going to/TO/to depend/VB/depend upon/IN/upon i/PRP/i plus/CC/plus 1/CD/1 j/NNP/j. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to depend/VB/depend upon/IN/upon this/DT/this entry/NNP/entry. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write that/IN/that is/VBZ/is an/DT/an arrow/NN/arrow over/IN/over here/NNP/here. and/CC/and it/PRP/it will/MD/will also/RB/also depend/VB/depend upon/IN/upon i/PRP/i plus/CC/plus 1/CD/1 k/NN/k plus/CC/plus 1/CD/1. just/RB/just going/VBG/going back/RB/back to/TO/to this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 51/CD/51 /:/: 46/CD/46 /CD/) /CD/) it/PRP/it depends/VBZ/depends upon/IN/upon i/PRP/i plus/CC/plus 1/CD/1 k/NN/k plus/CC/plus 1/CD/1 as/IN/as well/NNP/well. so/RB/so /,/, i/PRP/i plus/VBZ/plus 1/CD/1 k/NN/k plus/CC/plus 1/CD/1 could/MD/could be/VB/be something/NN/something in/IN/in this/NNP/this. so/RB/so /,/, it/PRP/it could/MD/could be/VB/be some/DT/some entry/NN/entry of/IN/of over/IN/over here/NNP/here. so/RB/so /,/, it/PRP/it will/MD/will also/RB/also depend/VB/depend upon/IN/upon this/NNP/this. so/RB/so /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to fill/VB/fill this/DT/this entry/NNP/entry. i/PRP/i need/VBP/need to/TO/to have/VB/have these/DT/these entries/NNS/entries already/RB/already filled/NNP/filled. but/CC/but /,/, that/IN/that is/VBZ/is very/RB/very easy/NNP/easy. how/WRB/how do/VBP/do i/PRP/i do/VBP/do it/NNP/it. well/RB/well /,/, if/IN/if i/PRP/i start/VBP/start filling/VBG/filling the/DT/the entries/NNS/entries from/IN/from the/DT/the bottom/NNP/bottom. then/RB/then i/PRP/i am/VBP/am essentially/RB/essentially /,/, then/RB/then i/PRP/i will/MD/will ensure/VB/ensure that/IN/that when/WRB/when it/PRP/it comes/VBZ/comes time/NN/time to/TO/to fill/VB/fill these/DT/these entries/NNS/entries /,/, these/DT/these entries/NNS/entries are/VBP/are already/RB/already filled/NNP/filled. and/CC/and then/RB/then the/DT/the fill/NN/fill procedure/NN/procedure will/MD/will work/VB/work correctly/NNP/correctly. so/RB/so /,/, that/IN/that is/VBZ/is all/NNP/all. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what i/PRP/i need/VBP/need to/TO/to write/VB/write down/RP/down next/NNP/next. so/RB/so /,/, that/IN/that is/VBZ/is very/RB/very simply/RB/simply done/NNP/done. so/RB/so /,/, i/PRP/i just/RB/just want/VBP/want to/TO/to tell/VB/tell you/NNP/you. what/WP/what the/DT/the code/NN/code is/VBZ/is going/VBG/going to/TO/to look/VB/look like/NNP/like. so/RB/so /,/, first/JJ/first i/PRP/i want/VBP/want to/TO/to make/VB/make sure/JJ/sure that/IN/that these/DT/these two/CD/two things/NNS/things these/DT/these two/CD/two are/VBP/are properly/RB/properly set/NNP/set. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 43/CD/43 /CD/) so/RB/so /,/, that/IN/that will/MD/will be/VB/be done/VBN/done by/IN/by saying/NN/saying for/IN/for i/PRP/i equal/JJ/equal to/TO/to 1/CD/1 to/TO/to m/VB/m plus/RB/plus 1/CD/1. what/WP/what happens/NNS/happens /,/, t/NN/t of/IN/of i/PRP/i comma/VBP/comma n/JJ/n plus/NN/plus 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to null/NNP/null. and/CC/and for/IN/for j/NN/j equal/JJ/equal to/TO/to 1/CD/1 to/TO/to m/VB/m plus/RB/plus 1/CD/1. t/NN/t of/IN/of m/NN/m plus/CC/plus 1/CD/1 comma/NN/comma j/NN/j is/VBZ/is equal/JJ/equal to/TO/to null/NNP/null. that/IN/that just/RB/just set/VBN/set the/DT/the bottom/NN/bottom row/NN/row and/CC/and the/DT/the right/NN/right hand/NN/hand side/NN/side column/NN/column to/TO/to null/NNP/null. now/RB/now /,/, comes/VBZ/comes the/DT/the main/JJ/main point/NNP/point. so/RB/so /,/, for/IN/for i/PRP/i equal/JJ/equal to/TO/to m/VB/m to/TO/to 1/CD/1 /,/, for/IN/for j/NN/j equals/NNS/equals n/VBP/n to/TO/to 1/CD/1 will/MD/will just/RB/just fill/VB/fill t/NN/t i/PRP/i j/VBP/j is/VBZ/is equal/JJ/equal to/TO/to fill/VB/fill of/IN/of i/PRP/i j/VBP/j /,/, and/CC/and because/IN/because our/PRP$/our rows/NNS/rows are/VBP/are going/VBG/going m/NN/m to/TO/to 1/CD/1 backwards/NNP/backwards. will/MD/will make/VB/make sure/JJ/sure that/IN/that fill/NN/fill of/IN/of i/PRP/i j/VBP/j will/MD/will find/VB/find the/DT/the table/NN/table entries/NNS/entries already/RB/already filled/VBN/filled properly/NNP/properly. so/RB/so /,/, that/IN/that takes/VBZ/takes care/NN/care of/IN/of the/DT/the whole/JJ/whole thing/NNP/thing. so/RB/so /,/, at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this is/VBZ/is simply/RB/simply return/NN/return t/NN/t of/IN/of 1/CD/1 /,/, 1/CD/1 that/WDT/that is/VBZ/is going/VBG/going to/TO/to be/VB/be your/PRP$/your final/JJ/final answer/NNP/answer. so/RB/so /,/, what/WDT/what remains/VBZ/remains now/RB/now /,/, is/VBZ/is to/TO/to estimate/VB/estimate the/DT/the time/NN/time taken/NNP/taken. so/RB/so /,/, this/DT/this time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be simply/RB/simply o/VB/o of/IN/of m/NNP/m. this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NNP/n. and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of m/NN/m n/NNP/n. because/IN/because /,/, of/IN/of these/DT/these loops/NNS/loops over/IN/over here/RB/here and/CC/and the/DT/the time/NN/time taken/VBN/taken for/IN/for fill/NN/fill i/PRP/i j/NNP/j. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 18/CD/18 /CD/) so/RB/so /,/, how/WRB/how long/JJ/long this/DT/this fill/NN/fill i/PRP/i j/VBP/j take/NNP/take. well/RB/well the/DT/the only/JJ/only place/NN/place /,/, where/WRB/where time/NN/time is/VBZ/is taken/VBN/taken there/RB/there are/VBP/are two/CD/two places/NNS/places where/WRB/where time/NN/time is/VBZ/is taken/NNP/taken. so/RB/so /,/, one/CD/one is/VBZ/is this/NNP/this. so/RB/so /,/, this/DT/this could/MD/could take/VB/take time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of b/NNP/b. so/RB/so /,/, this/DT/this could/MD/could take/VB/take time/NN/time proportional/JJ/proportional to/TO/to n/NNP/n. what/WP/what about/IN/about this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do the/DT/the concatenation/NNP/concatenation. now/RB/now /,/, if/IN/if you/PRP/you store/VBP/store the/DT/the subsequences/NNS/subsequences /,/, which/WDT/which have/VBP/have been/VBN/been computed/VBN/computed as/IN/as arrays/NNS/arrays /,/, then/RB/then this/DT/this could/MD/could take/VB/take time/NN/time o/NN/o of/IN/of m/NNP/m. because/IN/because /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take the/DT/the subsequence/NN/subsequence and/CC/and we/PRP/we have/VBP/have to/TO/to concatenated/NNP/concatenated. or/CC/or in/IN/in fact/NN/fact /,/, it/PRP/it would/MD/would take/VB/take time/NN/time /,/, it/PRP/it could/MD/could be/VB/be that/IN/that the/DT/the subsequences/NNS/subsequences the/DT/the entire/JJ/entire things/NNP/things. so/RB/so /,/, it/PRP/it could/MD/could be/VB/be max/NN/max of/IN/of m/NN/m and/CC/and n/NNP/n. and/CC/and maybe/VB/maybe the/DT/the longer/NN/longer computing/NN/computing the/DT/the longer/NN/longer will/MD/will also/RB/also take/VB/take time/NN/time this/DT/this much/NNP/much. so/RB/so /,/, over/IN/over all/DT/all the/DT/the time/NN/time taken/VBN/taken for/IN/for this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of max/NN/max of/IN/of m/NN/m n/NNP/n. so/RB/so /,/, coming/VBG/coming back/RB/back this/DT/this last/JJ/last part/NN/part fill/NN/fill is/VBZ/is going/VBG/going to/TO/to take/VB/take time/NN/time o/NN/o of/IN/of /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 55/CD/55 /:/: 24/CD/24 /CD/) /CD/) max/NN/max of/IN/of m/NN/m n/NNP/n. and/CC/and so/RB/so the/DT/the total/JJ/total time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the product/NN/product of/IN/of these/DT/these two/CD/two things/NNP/things. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 39/CD/39 /CD/) or/CC/or in/IN/in other/JJ/other words/NNS/words /,/, total/JJ/total time/NN/time is/VBZ/is equal/JJ/equal to/TO/to o/VB/o of/IN/of m/NN/m n/NN/n times/NNS/times max/VBP/max of/IN/of m/NN/m n/NNP/n. now/RB/now /,/, let/VB/let me/PRP/me just/RB/just to/TO/to summarize/VB/summarize /,/, let/VB/let me/PRP/me just/RB/just say/VBP/say that/IN/that i/PRP/i will/MD/will given/VB/given you/PRP/you dynamic/JJ/dynamic programming/NN/programming algorithm/NN/algorithm /,/, which/WDT/which runs/VBZ/runs in/IN/in so/RB/so much/RB/much time/NNP/time. there/EX/there is/VBZ/is a/DT/a simple/JJ/simple modification/NN/modification that/WDT/that you/PRP/you can/MD/can make/VB/make to/TO/to this/DT/this /,/, using/VBG/using which/WDT/which we/PRP/we can/MD/can reduce/VB/reduce the/DT/the times/NNS/times further/NNP/further. so/RB/so /,/, it/PRP/it could/MD/could be/VB/be it/PRP/it can/MD/can be/VB/be reduce/VB/reduce to/TO/to time/VB/time o/NN/o of/IN/of m/NN/m n/NNP/n. so/RB/so /,/, i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to write/VB/write down/RP/down the/DT/the code/NN/code for/IN/for fill/NN/fill and/CC/and we/PRP/we will/MD/will not/RB/not prove/VB/prove it/PRP/it correctness/NNP/correctness. but/CC/but /,/, the/DT/the correctness/NN/correctness will/MD/will be/VB/be include/VBN/include in/IN/in the/DT/the manner/NN/manner analog/NN/analog is/VBZ/is it/PRP/it will/MD/will be/VB/be only/RB/only slightly/RB/slightly more/RBR/more complicated/NNP/complicated. and/CC/and so/RB/so i/PRP/i will/MD/will just/RB/just do/VB/do that/DT/that and/CC/and i/PRP/i will/MD/will stop/VB/stop this/DT/this lecture/NNP/lecture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 24/CD/24 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the code/NN/code /,/, which/WDT/which will/MD/will give/VB/give you/PRP/you faster/JJR/faster result/NNP/result. it/PRP/it will/MD/will require/VB/require that/IN/that you/PRP/you store/VBP/store the/DT/the result/NN/result being/VBG/being calculated/NNP/calculated. the/DT/the table/NN/table entry/NN/entry should/MD/should be/VB/be stored/VBN/stored as/IN/as a/DT/a linked/VBN/linked list/NNP/list. rather/RB/rather than/IN/than storing/VBG/storing the/DT/the entire/JJ/entire subsequence/NN/subsequence in/IN/in each/DT/each entry/NN/entry in/IN/in the/DT/the table/NN/table /,/, store/NN/store it/PRP/it as/IN/as a/DT/a linked/VBN/linked list/NNP/list. if/IN/if you/PRP/you do/VBP/do that/DT/that /,/, with/IN/with the/DT/the little/JJ/little slight/NN/slight trick/NN/trick you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to reduce/VB/reduce the/DT/the time/NN/time taken/VBN/taken just/RB/just down/IN/down to/TO/to o/VB/o of/IN/of m/NN/m n/NN/n /:/( /:/( refer/NN/refer time/NN/time /:/: 57/CD/57 /:/: 58/CD/58 /CD/) /CD/) /./. so/RB/so /,/, with/IN/with that/DT/that i/PRP/i will/MD/will stop/VB/stop this/DT/this lecture/NNP/lecture. thank/NN/thank you/NNP/you. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 20/CD/20 matric/JJ/matric chain/NN/chain multiplication/NN/multiplication welcome/NN/welcome to/TO/to another/DT/another lecture/NN/lecture on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. our/PRP$/our topic/JJ/topic for/IN/for today/NN/today is/VBZ/is matric/JJ/matric chain/NN/chain multiplication/NNP/multiplication. let/NN/let me/PRP/me begin/VBP/begin with/IN/with an/DT/an informal/JJ/informal statement/NN/statement of/IN/of the/DT/the problem/NN/problem that/IN/that we/PRP/we have/NNP/have. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 02/CD/02 /CD/) so/RB/so /,/, our/PRP$/our problem/NN/problem is/VBZ/is something/NN/something like/IN/like this/NNP/this. we/PRP/we are/VBP/are given/VBN/given n/NN/n matrices/NNP/matrices. let/NN/let us/PRP/us call/VBP/call them/PRP/them m/NN/m 1/CD/1 /,/, m/NN/m 2/CD/2 /,/, all/DT/all the/DT/the way/NN/way till/IN/till m/NN/m sub/NN/sub n/NNP/n. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to multiply/RB/multiply them/PRP/them and/CC/and form/NN/form this/DT/this product/NNP/product. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the usual/JJ/usual matrix/NN/matrix product/NNP/product. we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do this/DT/this as/IN/as fast/NN/fast as/IN/as possible/NNP/possible. here/RB/here are/VBP/are some/DT/some of/IN/of the/DT/the issues/NNS/issues involved/VBD/involved in/IN/in doing/NN/doing this/NNP/this. if/IN/if the/DT/the first/JJ/first issue/NN/issue is/VBZ/is what/WP/what algorithm/NN/algorithm should/MD/should be/VB/be use/VB/use /,/, when/WRB/when we/PRP/we just/RB/just multiply/RB/multiply to/TO/to matrices/NNS/matrices together/RB/together /,/, because/IN/because we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use this/DT/this algorithm/NN/algorithm repeatedly/NNP/repeatedly. that/IN/that is/VBZ/is how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to solve/VB/solve this/DT/this problem/NN/problem today/NNP/today. the/DT/the second/JJ/second issue/NN/issue is/VBZ/is since/IN/since matrix/NN/matrix multiplication/NN/multiplication is/VBZ/is associative/NNP/associative. how/WRB/how do/VBP/do we/PRP/we parenthesize/VB/parenthesize this/DT/this product/NNP/product. because/IN/because /,/, that/IN/that will/MD/will /,/, it/PRP/it will/MD/will be/VB/be clear/JJ/clear zone/NNP/zone. that/IN/that will/MD/will also/RB/also affect/VB/affect the/DT/the time/NN/time required/VBN/required to/TO/to do/VB/do the/DT/the entire/JJ/entire to/TO/to perform/NN/perform the/DT/the entire/JJ/entire product/NNP/product. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the first/JJ/first issue/NNP/issue. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 55/CD/55 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we want/VBP/want to/TO/to compute/VB/compute c/NN/c equal/JJ/equal to/TO/to a/DT/a times/NNS/times b/NNP/b. where/WRB/where /,/, a/DT/a is/VBZ/is a/DT/a p/NN/p by/IN/by q/NN/q matrix/NNP/matrix. b/NN/b is/VBZ/is q/NN/q by/IN/by r/NN/r matrix/NNP/matrix. a/DT/a and/CC/and b/NN/b are/VBP/are given/VBN/given to/TO/to us/NNP/us. and/CC/and c/NN/c is/VBZ/is a/DT/a p/NN/p by/IN/by r/NN/r matrix/NN/matrix /,/, which/WDT/which is/VBZ/is to/TO/to be/VB/be completed/NNP/completed. the/DT/the simplest/JJS/simplest algorithm/NN/algorithm for/IN/for doing/VBG/doing this/DT/this is/VBZ/is to/TO/to use/VB/use a/DT/a definition/NN/definition of/IN/of matrix/NN/matrix multiplication/NNP/multiplication. matrix/NN/matrix multiplication/NN/multiplication is/VBZ/is defined/VBN/defined as/RB/as c/JJ/c i/PRP/i j/VBP/j is/VBZ/is equal/JJ/equal to/TO/to summation/NN/summation over/IN/over k/NN/k /,/, k/NN/k going/VBG/going from/IN/from 1/CD/1 to/TO/to q/VB/q of/IN/of a/DT/a i/NN/i k/NN/k times/NNS/times b/VBP/b k/NN/k j/NNP/j. computing/NN/computing the/DT/the single/JJ/single term/NN/term such/JJ/such as/IN/as c/NN/c i/PRP/i j/VBP/j will/MD/will require/VB/require o/NN/o of/IN/of q/NN/q time/NNP/time. c/NN/c has/VBZ/has p/NN/p r/NN/r elements/NNS/elements overall/JJ/overall c/NN/c is/VBZ/is a/DT/a p/NN/p by/IN/by r/NN/r matrix/NNP/matrix. so/RB/so /,/, it/PRP/it has/VBZ/has p/VB/p r/NN/r elements/NNP/elements. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time will/MD/will be/VB/be o/RB/o of/IN/of p/NN/p q/NN/q r/NNP/r. now/RB/now /,/, terms/NNS/terms out/IN/out that/DT/that there/EX/there are/VBP/are faster/JJR/faster algorithm/NN/algorithm possible/NNP/possible. but/CC/but /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to strict/VB/strict to/TO/to this/DT/this algorithm/NN/algorithm for/IN/for simplicity/NNP/simplicity. so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume for/IN/for the/DT/the rest/NN/rest of/IN/of the/DT/the lecture/NNP/lecture. that/IN/that if/IN/if i/PRP/i want/VBP/want to/TO/to just/RB/just multiply/RB/multiply 2/CD/2 matrices/NNS/matrices together/RB/together my/PRP$/my time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of p/NN/p q/NN/q r/NN/r or/CC/or to/TO/to wake/VB/wake it/PRP/it even/RB/even simpler/NNP/simpler. i/PRP/i am/VBP/am going/VBG/going to/TO/to just/RB/just say/VB/say p/NN/p q/NN/q r/NN/r is/VBZ/is the/DT/the time/NN/time required/VBN/required for/IN/for multiplication/NN/multiplication of/IN/of 2/CD/2 matrices/NNP/matrices. p/NN/p by/IN/by q/NN/q matrix/NN/matrix by/IN/by and/CC/and q/NN/q by/IN/by r/NN/r matrix/NNP/matrix. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 13/CD/13 /CD/) the/DT/the second/JJ/second issue/NN/issue concerns/NNS/concerns associativity/NNP/associativity. let/VB/let me/PRP/me explain/VB/explain this/DT/this with/IN/with specific/JJ/specific example/NN/example involving/VBG/involving only/RB/only 3/CD/3 matrices/NNS/matrices so/IN/so /,/, say/VBP/say n/NN/n is/VBZ/is equal/JJ/equal to/TO/to 3/CD/3 over/IN/over here/NNP/here. now/RB/now /,/, we/PRP/we need/VBP/need to/TO/to compute/VB/compute the/DT/the product/NN/product m/NN/m 1/CD/1 times/NNS/times /,/, m/NN/m 2/CD/2 times/NNS/times /,/, m/NN/m 3/CD/3. there/EX/there are/VBP/are two/CD/two ways/NNS/ways to/TO/to do/VB/do this/NNP/this. one/CD/one possibility/NN/possibility is/VBZ/is multiply/RB/multiply m/NN/m 2/CD/2 and/CC/and m/NN/m 3/CD/3 first/NNP/first. and/CC/and then/RB/then multiply/RB/multiply that/IN/that with/IN/with m/NN/m 1/CD/1. or/CC/or multiply/RB/multiply m/NN/m 1/CD/1 and/CC/and m/NN/m 2/CD/2 first/NNP/first. and/CC/and then/RB/then multiply/RB/multiply that/IN/that with/IN/with m/NN/m 3/CD/3. let/NN/let us/PRP/us /,/, take/VBP/take a/DT/a specific/JJ/specific example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 55/CD/55 /CD/) so/RB/so /,/, let/VB/let us/PRP/us assume/VB/assume that/IN/that m/NN/m 1/CD/1. m/NN/m 1/CD/1 is/VBZ/is a/DT/a 3/CD/3 by/IN/by 2/CD/2 matrix/NNP/matrix. m/NN/m 2/CD/2 is/VBZ/is a/DT/a 2/CD/2 by/IN/by 4/CD/4 matrix/NNP/matrix. and/CC/and m/NN/m 3/CD/3 is/VBZ/is a/DT/a 4/CD/4 by/IN/by 1/CD/1 matrix/NNP/matrix. so/RB/so /,/, now/RB/now if/IN/if you/PRP/you want/VBP/want to/TO/to multiplied/VBN/multiplied according/VBG/according to/TO/to this/DT/this manner/NN/manner /:/( /:/( refer/NN/refer time/NN/time /:/: 04/CD/04 /:/: 23/CD/23 /CD/) /CD/) /./. then/RB/then here/RB/here is/VBZ/is what/WP/what will/MD/will happen/NNP/happen. so/RB/so /,/, we/PRP/we will/MD/will first/RB/first compute/VB/compute matrix/NN/matrix m/NN/m 4/CD/4 /,/, which/WDT/which is/VBZ/is m/NN/m 2/CD/2 times/NNS/times m/VBP/m 3/CD/3. so/RB/so /,/, m/NN/m 2/CD/2 was/VBD/was 2/CD/2 by/IN/by 4/CD/4 matrix/NNP/matrix. and/CC/and m/NN/m 3/CD/3 was/VBD/was a/DT/a 4/CD/4 by/IN/by 1/CD/1 matrix/NNP/matrix. so/RB/so /,/, the/DT/the product/NN/product will/MD/will be/VB/be following/VBG/following over/RP/over formula/NN/formula p/NN/p q/NN/q r/NN/r /,/, it/PRP/it will/MD/will be/VB/be 2/CD/2 times/NNS/times 4/CD/4 times/NNS/times 1/CD/1 /,/, or/CC/or it/PRP/it will/MD/will be/VB/be 8/CD/8. now/RB/now /,/, given/VBN/given m/NN/m 4/CD/4 our/PRP$/our final/JJ/final answer/NN/answer can/MD/can be/VB/be computed/VBN/computed just/RB/just by/IN/by multiplying/NN/multiplying m/NN/m 1/CD/1 with/IN/with in/NNP/in. m/NN/m 1/CD/1 is/VBZ/is a/DT/a 3/CD/3 by/IN/by 2/CD/2 matrix/NNP/matrix. and/CC/and m/NN/m 4/CD/4 we/PRP/we calculated/VBD/calculated /:/( /CD/( refer/NN/refer time/NN/time /:/: 04/CD/04 /:/: 58/CD/58 /CD/) /CD/) 2/CD/2 by/IN/by 1/CD/1 matrix/NNP/matrix. so/RB/so /,/, this/DT/this will/MD/will require/VB/require time/NN/time 3/CD/3 by/IN/by 2/CD/2 by/IN/by 1/CD/1 or/CC/or 6/CD/6. so/RB/so /,/, this/DT/this will/MD/will require/VB/require 6/CD/6 matrix/CD/matrix multiplication/NN/multiplication /,/, 6/CD/6 scalar/JJ/scalar multiplication/NN/multiplication this/DT/this will/MD/will require/VB/require 8s/CD/8s scalar/JJ/scalar multiplications/NNP/multiplications. then/RB/then the/DT/the total/NN/total number/NN/number of/IN/of multiplication/NN/multiplication required/VBN/required will/MD/will be/VB/be 14/CD/14. another/DT/another possibility/NN/possibility /,/, which/WDT/which i/PRP/i have/VBP/have indicated/VBN/indicated over/IN/over here/RB/here /,/, is/VBZ/is to/TO/to first/RB/first form/NN/form m/NN/m 1/CD/1 times/NNS/times m/VBP/m 2/CD/2. so/RB/so /,/, we/PRP/we compute/VBP/compute m/NN/m 5/CD/5 equals/NNS/equals m/NN/m 1/CD/1 time/NN/time m/NN/m 2/CD/2. remember/NN/remember /,/, that/IN/that m/NN/m 1/CD/1 was/VBD/was in/IN/in 3/CD/3 by/IN/by 2/CD/2 matrix/NNP/matrix. and/CC/and m/NN/m 2/CD/2 was/VBD/was a/DT/a 2/CD/2 by/IN/by 4/CD/4 matrix/NNP/matrix. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time over/IN/over here/RB/here /,/, to/TO/to calculate/VB/calculate m/NN/m 5/CD/5 is/VBZ/is equal/JJ/equal to/TO/to 24/CD/24. the/DT/the answer/NN/answer now/RB/now /,/, can/MD/can be/VB/be obtained/VBN/obtained by/IN/by multiplying/NN/multiplying this/DT/this m/NN/m 5/CD/5 which/WDT/which is/VBZ/is just/RB/just this/DT/this /,/, which/WDT/which we/PRP/we calculated/VBD/calculated by/IN/by m/NN/m 3/CD/3. now/RB/now /,/, m/NN/m 5/CD/5 in/IN/in the/DT/the product/NN/product was/VBD/was 3/CD/3 by/IN/by 4/CD/4. so/RB/so /,/, it/PRP/it is/VBZ/is p/VB/p and/CC/and q/VB/q are/VBP/are 3/CD/3 and/CC/and 4/CD/4. m/NN/m 3/CD/3 is/VBZ/is 4/CD/4 by/IN/by 1/CD/1. so/RB/so /,/, q/NN/q by/IN/by r/NN/r is/VBZ/is 4/CD/4 and/CC/and 1/CD/1. so/RB/so /,/, this/DT/this product/NN/product requires/VBZ/requires time/NN/time 3/CD/3 times/NNS/times 4/CD/4 times/NNS/times 1/CD/1 or/CC/or 12/CD/12. the/DT/the total/JJ/total time/NN/time for/IN/for this/DT/this way/NN/way of/IN/of doing/VBG/doing things/NNS/things is/VBZ/is therefore/RB/therefore /,/, 24/CD/24 plus/CC/plus 12/CD/12 which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to 36/CD/36. so/RB/so /,/, clearly/RB/clearly this/DT/this first/JJ/first way/NN/way is/VBZ/is better/NNP/better. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 18/CD/18 /CD/) the/DT/the problem/NN/problem now/RB/now is/VBZ/is that/IN/that /,/, if/IN/if we/PRP/we are/VBP/are that/IN/that we/PRP/we can/MD/can take/VB/take our/PRP$/our product/NNP/product. and/CC/and we/PRP/we can/MD/can parenthesize/VB/parenthesize it/PRP/it in/IN/in this/DT/this way/NN/way or/CC/or we/PRP/we can/MD/can parenthesize/VB/parenthesize it/PRP/it in/IN/in this/DT/this way/NNP/way. we/PRP/we could/MD/could speak/VB/speak of/IN/of parenthesization/NNP/parenthesization. but/CC/but /,/, i/PRP/i would/MD/would like/VB/like to/TO/to point/VB/point out/RP/out that/IN/that these/DT/these parenthesization/NN/parenthesization can/MD/can be/VB/be you/PRP/you can/MD/can also/RB/also be/VB/be thought/VBN/thought of/IN/of it/PRP/it rooted/VBD/rooted trees/NNP/trees. so/RB/so /,/, let/VB/let me/PRP/me explain/VB/explain that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 43/CD/43 /CD/) so/RB/so /,/, here/RB/here are/VBP/are our/PRP$/our metrics/NNS/metrics to/TO/to be/VB/be multiplied/VBN/multiplied m/NN/m 1/CD/1 /,/, m/NN/m 2/CD/2 /,/, m/NN/m 3/CD/3. so/RB/so /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to first/JJ/first form/NN/form the/DT/the product/NN/product m/NN/m 2/CD/2 times/NNS/times m/VBP/m 3/CD/3. let/NN/let me/PRP/me represent/VBP/represent it/PRP/it in/IN/in our/PRP$/our usual/JJ/usual fashion/NN/fashion by/IN/by drawing/NN/drawing vertex/NN/vertex over/IN/over here/NNP/here. and/CC/and this/DT/this vertex/NN/vertex represents/VBZ/represents there/EX/there product/NNP/product. the/DT/the next/JJ/next thing/NN/thing i/PRP/i do/VBP/do is/VBZ/is /,/, i/PRP/i take/VBP/take the/DT/the product/NN/product of/IN/of these/DT/these two/NNP/two. and/CC/and this/DT/this is/VBZ/is my/PRP$/my final/JJ/final answer/NNP/answer. so/RB/so /,/, this/DT/this corresponds/NNS/corresponds to/TO/to the/DT/the parenthesization/NN/parenthesization m/NN/m 1/CD/1 times/NNS/times m/VBP/m 2/CD/2 times/NNS/times m/VBP/m 3/CD/3. alternatively/RB/alternatively /,/, i/PRP/i could/MD/could also/RB/also have/VB/have done/VBN/done something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, i/PRP/i could/MD/could take/VB/take product/NN/product of/IN/of m/NN/m 1/CD/1 and/CC/and m/NN/m 2/CD/2 first/NNP/first. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first way/NN/way of/IN/of doing/VBG/doing things/NNP/things. this/DT/this is/VBZ/is this/DT/this is/VBZ/is what/WP/what i/PRP/i do/VBP/do first/RB/first and/CC/and then/RB/then i/PRP/i take/VBP/take the/DT/the product/NN/product of/IN/of those/NNP/those. so/RB/so /,/, the/DT/the parenthesization/NN/parenthesization corresponding/VBG/corresponding to/TO/to this/DT/this is/VBZ/is m/NN/m 1/CD/1 times/NNS/times m/VBP/m 2/CD/2 whole/JJ/whole times/NNS/times m/VBP/m 3/CD/3. so/RB/so /,/, this/DT/this is/VBZ/is this/DT/this we/PRP/we have/VBP/have doing/VBG/doing things/NNS/things which/WDT/which we/PRP/we had/VBD/had early/RB/early indicated/VBN/indicated earlier/NNP/earlier. in/IN/in this/DT/this particular/JJ/particular example/NN/example /,/, we/PRP/we found/VBD/found that/IN/that this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 07/CD/07 /:/: 49/CD/49 /CD/) /CD/) superior/NNP/superior. but/CC/but /,/, of/IN/of course/NN/course /,/, with/IN/with other/JJ/other choices/NNS/choices of/IN/of the/DT/the matrix/NN/matrix to/TO/to mentions/NNS/mentions /,/, other/JJ/other way/NN/way could/MD/could be/VB/be superior/JJ/superior this/DT/this could/MD/could be/VB/be superior/NNP/superior. we/PRP/we want/VBP/want multiply/RB/multiply m/NN/m matrices/NNS/matrices /:/( /:/( refer/NN/refer time/NN/time /:/: 08/CD/08 /:/: 04/CD/04 /CD/) /CD/) just/RB/just 3/CD/3. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do one/CD/one more/RBR/more example/JJ/example /,/, what/WP/what if/IN/if we/PRP/we have/VBP/have 4/CD/4 matrices/NNP/matrices. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 07/CD/07 /CD/) so/RB/so /,/, in/IN/in this/DT/this case/NN/case /,/, we/PRP/we have/VBP/have addresses/NNS/addresses m/VBP/m 1/CD/1 /,/, m/NN/m 2/CD/2 /,/, m/NN/m 3/LS/3 /,/, m/NN/m 4/CD/4. so/RB/so /,/, the/DT/the parenthesizations/NNS/parenthesizations here/RB/here /,/, will/MD/will corresponds/NNS/corresponds to/TO/to 4/CD/4 trees/NNS/trees with/IN/with 4/CD/4 leaves/NNP/leaves. so/RB/so /,/, one/CD/one possible/JJ/possible parenthesization/NN/parenthesization /,/, which/WDT/which i/PRP/i might/MD/might indicate/VB/indicate is/VBZ/is something/NN/something like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 32/CD/32 /CD/) so/RB/so /,/, say/VB/say for/IN/for example/NN/example /,/, i/PRP/i could/MD/could compute/VB/compute say/VB/say the/DT/the product/NN/product of/IN/of m/NN/m 2/CD/2 and/CC/and m/NN/m 3/CD/3 first/NNP/first. then/RB/then /,/, maybe/RB/maybe i/PRP/i compute/VBP/compute product/NN/product of/IN/of m/NN/m 3/CD/3 and/CC/and m/NN/m 4/CD/4 next/NNP/next. and/CC/and then/RB/then finally/RB/finally /,/, i/PRP/i compute/VBP/compute this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my /,/, this/DT/this is/VBZ/is the/DT/the tree/NNP/tree. of/IN/of course/NN/course /,/, there/EX/there are/VBP/are many/JJ/many such/JJ/such trees/NNS/trees possible/NNP/possible. and/CC/and in/IN/in fact/NN/fact /,/, in/IN/in this/DT/this case/NN/case let/VBD/let me/PRP/me just/RB/just write/VBP/write down/RP/down all/DT/all the/DT/the values/NNS/values all/DT/all those/NNP/those. so/RB/so /,/, say/VB/say for/IN/for example/NN/example /,/, here/RB/here is/VBZ/is another/DT/another tree/NNP/tree. so/RB/so /,/, here/RB/here is/VBZ/is another/DT/another tree/NN/tree /,/, in/IN/in which/WDT/which we/PRP/we first/RB/first multiply/RB/multiply and/CC/and 3/CD/3 and/CC/and 4/CD/4. then/RB/then multiply/RB/multiply that/IN/that with/IN/with m/NN/m 2/CD/2 and/CC/and then/RB/then with/IN/with m/NN/m 1/CD/1. but/CC/but /,/, that/IN/that is/VBZ/is not/RB/not only/RB/only one/CD/one here/RB/here is/VBZ/is another/NNP/another. and/CC/and then/RB/then /,/, we/PRP/we also/RB/also have/VBP/have things/NNS/things like/IN/like and/CC/and also/NNP/also. so/RB/so /,/, in/IN/in this/DT/this case/NN/case /,/, it/PRP/it terms/VBZ/terms out/RP/out that/IN/that there/EX/there are/VBP/are 5/CD/5 trees/NNS/trees in/IN/in which/WDT/which m/NN/m 1/CD/1 /,/, m/NN/m 2/CD/2 /,/, m/NN/m 3/LS/3 /,/, m/NN/m 4/CD/4 can/MD/can be/VB/be the/DT/the leaves/NNP/leaves. and/CC/and therefore/RB/therefore /,/, 5/CD/5 ways/NNS/ways of/IN/of parenthesize/NN/parenthesize in/IN/in this/DT/this product/NNP/product. as/IN/as you/PRP/you saw/VBD/saw to/TO/to go/VB/go from/IN/from 3/CD/3 to/TO/to 4/CD/4 we/PRP/we went/VBD/went from/IN/from 2/CD/2 to/TO/to 5/CD/5. if/IN/if you/PRP/you keep/VBP/keep doing/VBG/doing this/DT/this /,/, you/PRP/you will/MD/will see/VB/see that/IN/that the/DT/the number/NN/number of/IN/of tree/NN/tree is/VBZ/is grow/NN/grow is/VBZ/is very/RB/very fast/NNP/fast. in/IN/in fact/NN/fact /,/, you/PRP/you can/MD/can prove/VB/prove you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to prove/VB/prove that/IN/that it/PRP/it grows/VBZ/grows exponential/NNP/exponential. so/RB/so /,/, in/IN/in the/DT/the pointers/NNS/pointers that/WDT/that we/PRP/we want/VBP/want to/TO/to pick/VB/pick a/DT/a tree/NN/tree from/IN/from one/CD/one of/IN/of these/DT/these possible/JJ/possible trees/NNS/trees /,/, and/CC/and we/PRP/we want/VBP/want to/TO/to pick/VB/pick the/DT/the 1/CD/1 /,/, which/WDT/which minimize/NN/minimize this/DT/this the/DT/the total/NN/total time/NN/time taken/NNP/taken. so/RB/so /,/, we/PRP/we are/VBP/are now/RB/now ready/RB/ready to/TO/to give/VB/give a/DT/a formal/JJ/formal statement/NN/statement of/IN/of the/DT/the problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 31/CD/31 /CD/) so/RB/so /,/, our/PRP$/our input/NN/input consist/NN/consist of/IN/of an/DT/an array/NN/array d/NN/d zero/NN/zero through/IN/through d/NN/d n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to represent/VB/represent the/DT/the dimensions/NNS/dimensions of/IN/of the/DT/the matrix/NNP/matrix. so/RB/so /,/, d/JJ/d i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and d/JJ/d i/NN/i respectively/RB/respectively will/MD/will give/VB/give the/DT/the number/NN/number of/IN/of rows/NNS/rows and/CC/and columns/NNS/columns of/IN/of matrix/NN/matrix m/NN/m i/NNP/i. so/RB/so /,/, this/DT/this means/VBZ/means that/IN/that the/DT/the columns/NNS/columns of/IN/of the/DT/the number/NN/number of/IN/of rows/NNS/rows of/IN/of matrix/NN/matrix m/NN/m i/PRP/i plus/VBZ/plus 1/CD/1 /,/, will/MD/will be/VB/be d/VBN/d i/-NONE-/i. so/RB/so /,/, which/WDT/which will/MD/will be/VB/be equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of columns/NNS/columns of/IN/of matrix/NN/matrix m/NN/m i/NNP/i. which/WDT/which is/VBZ/is as/RB/as i/PRP/i should/MD/should be/VB/be /,/, because/IN/because only/RB/only then/RB/then can/MD/can be/VB/be think/VB/think of/IN/of the/DT/the product/NN/product m/NN/m i/PRP/i times/VBZ/times m/NN/m i/PRP/i plus/VBZ/plus 1/CD/1. so/RB/so /,/, although/IN/although we/PRP/we have/VBP/have m/NN/m matrices/NNS/matrices /,/, which/WDT/which are/VBP/are being/VBG/being multiplied/VBN/multiplied and/CC/and this/DT/this is/VBZ/is supposed/VBN/supposed to/TO/to represent/VB/represent the/DT/the dimensions/NNS/dimensions of/IN/of n/NN/n matrices/NNP/matrices. we/PRP/we only/RB/only have/VBP/have a/DT/a /,/, have/VBP/have n/VBN/n plus/RB/plus 1/CD/1 numbers/NNS/numbers over/IN/over here/NNP/here. our/PRP$/our output/NN/output is/VBZ/is suppose/JJ/suppose to/TO/to be/VB/be a/DT/a rooted/VBN/rooted binary/JJ/binary tree/NN/tree with/IN/with m/NN/m 1/CD/1 to/TO/to m/VB/m n/NN/n as/IN/as leaves/NNP/leaves. and/CC/and this/DT/this whole/JJ/whole thing/NN/thing should/MD/should give/VB/give us/PRP/us the/DT/the least/JJS/least time/NN/time for/IN/for computing/NN/computing the/DT/the product/NNP/product. let/NN/let me/PRP/me now/RB/now /,/, state/NN/state as/IN/as state/NN/state again/NNP/again. that/IN/that if/IN/if you/PRP/you give/VBP/give me/PRP/me a/DT/a tree/NN/tree /,/, i/PRP/i can/MD/can estimate/VB/estimate the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the tree/NNP/tree. and/CC/and the/DT/the algorithm/NN/algorithm here/RB/here is/VBZ/is actually/RB/actually fairly/RB/fairly straight/JJ/straight forward/NNP/forward. so/RB/so /,/, if/IN/if we/PRP/we give/VBP/give me/PRP/me a/DT/a tree/NN/tree /,/, then/RB/then the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the left/NN/left sub/NN/sub tree/NN/tree can/MD/can be/VB/be estimated/VBN/estimated recursively/-NONE-/recursively. the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the right/NN/right sub/NN/sub tree/NN/tree can/MD/can be/VB/be estimated/VBN/estimated recursively/-NONE-/recursively. and/CC/and then/RB/then /,/, i/PRP/i just/RB/just add/VBP/add up/RP/up the/DT/the two/CD/two times/NNP/times. but/CC/but /,/, that/IN/that does/VBZ/does not/RB/not finish/VB/finish the/DT/the time/NN/time the/DT/the total/JJ/total time/NNP/time. i/PRP/i have/VBP/have to/TO/to take/VB/take the/DT/the product/NN/product represented/VBD/represented by/IN/by the/DT/the left/NN/left tree/NNP/tree. the/DT/the product/NN/product represented/VBD/represented by/IN/by the/DT/the right/NN/right tree/NN/tree and/CC/and i/PRP/i have/VBP/have to/TO/to multiply/RB/multiply them/PRP/them together/NNP/together. so/RB/so /,/, i/PRP/i need/VBP/need an/DT/an additional/JJ/additional term/NN/term over/IN/over here/NNP/here. so/RB/so /,/, just/RB/just to/TO/to clarify/VB/clarify suppose/NN/suppose /,/, we/PRP/we have/VBP/have we/PRP/we consider/VBP/consider a/DT/a tree/NN/tree /,/, in/IN/in which/WDT/which the/DT/the left/NN/left sub/NN/sub tree/NN/tree has/VBZ/has i/PRP/i leaves/NNP/leaves. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 28/CD/28 /CD/) so/RB/so /,/, say/VB/say m/NN/m 1/CD/1 through/IN/through m/NN/m i/PRP/i belong/VBP/belong to/TO/to the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. and/CC/and m/NN/m i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through m/NN/m n/NN/n are/VBP/are leaves/NNS/leaves for/IN/for the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. and/CC/and so/RB/so we/PRP/we take/VBP/take the/DT/the product/NN/product over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this has/VBZ/has some/DT/some cost/NN/cost let/VBD/let me/PRP/me call/VBP/call it/PRP/it c/VBP/c l/NN/l and/CC/and let/VB/let me/PRP/me call/MD/call the/DT/the cost/NN/cost of/IN/of this/DT/this c/NN/c r/NNP/r. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of this/DT/this entire/JJ/entire tree/NN/tree ?/./? well/RB/well /,/, so/RB/so /,/, the/DT/the cost/NN/cost is/VBZ/is going/VBG/going to/TO/to be/VB/be c/JJ/c l/NN/l plus/CC/plus c/NN/c r/NN/r plus/CC/plus computing/VBG/computing the/DT/the product/NN/product of/IN/of these/DT/these matrices/NNS/matrices with/IN/with the/DT/the product/NN/product of/IN/of these/DT/these matrices/NNP/matrices. but/CC/but /,/, what/WP/what is/VBZ/is the/DT/the product/NN/product of/IN/of these/DT/these matrices/NNS/matrices /,/, what/WP/what is/VBZ/is the/DT/the dimension/NN/dimension of/IN/of the/DT/the product/NN/product of/IN/of these/DT/these matrices/NNP/matrices. so/RB/so /,/, that/IN/that is/VBZ/is simply/RB/simply the/DT/the number/NN/number of/IN/of rows/NNS/rows in/IN/in this/DT/this matrix/NN/matrix /,/, which/WDT/which is/VBZ/is d/VBN/d 0/-NONE-/0 /,/, times/NNS/times the/DT/the number/NN/number of/IN/of columns/NNS/columns in/IN/in this/DT/this matrix/NNP/matrix. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this are/VBP/are here/RB/here /,/, this/DT/this product/NN/product is/VBZ/is going/VBG/going to/TO/to be/VB/be d/VBN/d 0/-NONE-/0 times/NNS/times /,/, the/DT/the number/NN/number of/IN/of columns/NNS/columns over/IN/over here/NNP/here. so/RB/so /,/, times/NNS/times d/VBP/d i/PRP/i /,/, this/DT/this product/NN/product is/VBZ/is going/VBG/going to/TO/to be/VB/be d/VBN/d i/PRP/i times/VBZ/times d/JJ/d n/NNP/n. so/RB/so /,/, as/IN/as a/DT/a result/NN/result /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get is/VBZ/is the/DT/the total/JJ/total time/NN/time or/CC/or the/DT/the time/NN/time to/TO/to computer/NN/computer this/DT/this lost/NN/lost product/NN/product /,/, which/WDT/which is/VBZ/is the/DT/the only/JJ/only term/NN/term remaining/VBG/remaining over/IN/over here/RB/here is/VBZ/is d/VBN/d 0/-NONE-/0 times/NNS/times d/VBP/d i/PRP/i times/VBZ/times d/JJ/d n/NNP/n. so/RB/so /,/, stated/VBN/stated here/RB/here /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is /,/, the/DT/the time/NN/time for/IN/for the/DT/the left/NN/left sub/NN/sub tree/NN/tree /,/, time/NN/time for/IN/for the/DT/the right/NN/right sub/NN/sub tree/NN/tree plus/CC/plus d/NN/d 0/-NONE-/0 d/NN/d i/PRP/i d/VBP/d n/NNP/n. so/RB/so /,/, here/RB/here i/PRP/i was/VBD/was using/VBG/using subscripts/NNP/subscripts. here/RB/here /,/, i/PRP/i will/MD/will just/RB/just use/VB/use array/NN/array accesses/NNS/accesses /,/, but/CC/but you/PRP/you know/VBP/know there/RB/there will/MD/will be/VB/be in/IN/in the/DT/the same/JJ/same thing/NNP/thing. i/PRP/i mean/VBP/mean the/DT/the same/JJ/same thing/NN/thing by/IN/by them/NNP/them. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 40/CD/40 /CD/) so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we solve/VB/solve this/DT/this problem/NNP/problem. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a simple/JJ/simple brute/NN/brute force/NN/force algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we generate/VBP/generate all/DT/all possible/JJ/possible n/NN/n leaf/NN/leaf trees/NNP/trees. and/CC/and will/MD/will use/VB/use /,/, will/MD/will calculate/VB/calculate the/DT/the cost/NN/cost for/IN/for each/DT/each or/CC/or cost/NN/cost is/VBZ/is really/RB/really the/DT/the same/JJ/same as/IN/as time/NN/time in/IN/in optimization/NN/optimization /:/( /:/( refer/NN/refer time/NN/time /:/: 15/CD/15 /:/: 00/CD/00 /CD/) /CD/) more/JJR/more customer/NN/customer is/VBZ/is to/TO/to think/VB/think of/IN/of cost/NNP/cost. so/RB/so /,/, i/PRP/i might/MD/might use/VB/use or/CC/or i/PRP/i will/MD/will use/VB/use cost/NN/cost to/TO/to represent/VB/represent time/NN/time in/IN/in the/DT/the rest/NN/rest of/IN/of the/DT/the lecture/NNP/lecture. so/RB/so /,/, we/PRP/we calculate/VBP/calculate the/DT/the cost/NN/cost of/IN/of each/DT/each of/IN/of these/DT/these trees/NNP/trees. and/CC/and then/RB/then /,/, will/MD/will be/VB/be return/NN/return the/DT/the 1/CD/1 with/IN/with the/DT/the minimum/JJ/minimum cost/NNP/cost. as/IN/as remarked/VBN/remarked earlier/JJR/earlier /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be too/RB/too slow/JJ/slow /,/, because/IN/because a/DT/a number/NN/number of/IN/of trees/NNS/trees is/VBZ/is going/VBG/going to/TO/to be/VB/be exponential/JJ/exponential in/IN/in n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 22/CD/22 /CD/) we/PRP/we would/MD/would like/VB/like to/TO/to solve/VB/solve this/DT/this problem/NN/problem or/CC/or we/PRP/we would/MD/would like/VB/like to/TO/to see/VB/see /,/, if/IN/if dynamic/JJ/dynamic programming/NN/programming can/MD/can be/VB/be used/VBN/used to/TO/to design/VB/design an/DT/an efficient/NN/efficient algorithm/NN/algorithm for/IN/for solving/NN/solving this/DT/this problem/NNP/problem. so/RB/so /,/, let/VB/let me/PRP/me give/VB/give a/DT/a quick/JJ/quick overview/NN/overview of/IN/of what/WP/what dynamic/JJ/dynamic programming/NN/programming the/DT/the whole/JJ/whole dynamic/JJ/dynamic programming/NN/programming ideas/NNP/ideas. so/RB/so /,/, in/IN/in dynamic/JJ/dynamic programming/NN/programming the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to cost/VB/cost the/DT/the problem/NN/problem as/IN/as a/DT/a search/NN/search for/IN/for an/DT/an object/NN/object over/IN/over a/DT/a certain/JJ/certain search/NN/search space/NNP/space. so/RB/so /,/, this/DT/this certain/JJ/certain search/NN/search space/NN/space /,/, we/PRP/we have/VBP/have to/TO/to define/VB/define a/DT/a /NN/( /:/( refer/NN/refer time/NN/time /:/: 15/CD/15 /:/: 50/CD/50 /CD/) /CD/) clearly/RB/clearly /,/, just/RB/just to/TO/to clarify/VB/clarify our/PRP$/our thoughts/NNP/thoughts. then/RB/then /,/, we/PRP/we also/RB/also need/VBP/need to/TO/to define/VB/define clearly/RB/clearly an/DT/an objective/NN/objective function/NN/function /,/, which/WDT/which is/VBZ/is to/TO/to be/VB/be minimized/VBN/minimized or/CC/or maximized/NNP/maximized. in/IN/in our/PRP$/our problem/NN/problem /,/, we/PRP/we have/VBP/have really/RB/really done/VBN/done this/DT/this step/NNP/step. because/IN/because /,/, the/DT/the search/NN/search space/NN/space is/VBZ/is simply/RB/simply the/DT/the search/NN/search space/NN/space is/VBZ/is simply/RB/simply the/DT/the space/NN/space of/IN/of all/DT/all possible/JJ/possible trees/NNP/trees. and/CC/and the/DT/the cost/NN/cost function/NN/function is/VBZ/is the/DT/the time/NN/time and/CC/and that/IN/that is/VBZ/is to/TO/to be/VB/be minimized/VBN/minimized /,/, the/DT/the objective/NN/objective function/NN/function or/CC/or the/DT/the cost/NN/cost function/NNP/function. the/DT/the next/JJ/next step/NN/step is/VBZ/is to/TO/to design/NN/design an/DT/an algorithm/NN/algorithm /,/, which/WDT/which partitions/NNS/partitions search/VBP/search space/NNP/space. and/CC/and each/DT/each partition/NN/partition is/VBZ/is searched/VBN/searched to/TO/to find/VB/find the/DT/the best/JJS/best /,/, the/DT/the best/JJS/best element/NN/element in/IN/in it/PRP/it or/CC/or in/IN/in our/PRP$/our case/NN/case the/DT/the best/JJS/best tree/NN/tree in/NNP/in. now/RB/now /,/, here/RB/here is/VBZ/is the/DT/the key/JJ/key idea/NN/idea /,/, each/DT/each partition/NN/partition is/VBZ/is to/TO/to be/VB/be searched/VBN/searched /,/, but/CC/but we/PRP/we can/MD/can do/VB/do this/DT/this recursively/NNP/recursively. so/RB/so /,/, we/PRP/we find/VBP/find the/DT/the best/JJS/best element/NN/element in/IN/in each/DT/each partition/NNP/partition. and/CC/and since/IN/since /,/, we/PRP/we want/VBP/want the/DT/the best/JJS/best element/NN/element in/IN/in the/DT/the entire/JJ/entire space/NN/space /,/, which/WDT/which is/VBZ/is staying/VBG/staying the/DT/the best/JJS/best of/IN/of these/DT/these best/NNP/best. dynamic/JJ/dynamic programming/NN/programming does/VBZ/does not/RB/not stop/VB/stop at/IN/at this/DT/this step/NN/step 2/CD/2. the/DT/the last/JJ/last and/CC/and most/JJS/most important/JJ/important step/NN/step perhaps/RB/perhaps or/CC/or the/DT/the most/RBS/most unusual/JJ/unusual steps/NNS/steps perhaps/RB/perhaps is/VBZ/is that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to characterize/VB/characterize /,/, the/DT/the recursive/JJ/recursive calls/NNS/calls which/WDT/which over/IN/over made/VBD/made over/RB/over here/NNP/here. so/RB/so /,/, in/IN/in this/DT/this we/PRP/we will/MD/will making/VBG/making several/JJ/several recursive/JJ/recursive calls/NNS/calls /,/, we/PRP/we will/MD/will ask/VB/ask the/DT/the question/NNP/question. is/VBZ/is there/RB/there anything/NN/anything interesting/VBG/interesting about/IN/about those/DT/those calls/NNS/calls /,/, is/VBZ/is there/EX/there any/DT/any property/NN/property that/IN/that we/PRP/we can/MD/can identify/VB/identify for/IN/for those/DT/those calls/NNP/calls. or/CC/or somehow/VB/somehow /,/, can/MD/can be/VB/be say/VB/say that/IN/that the/DT/the calls/NNS/calls are/VBP/are only/RB/only made/VBN/made on/IN/on these/DT/these arguments/NNP/arguments. so/RB/so /,/, once/RB/once we/PRP/we get/VBP/get a/DT/a characterization/NN/characterization /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to build/VB/build the/DT/the table/NN/table /,/, in/IN/in which/WDT/which the/DT/the results/NNS/results of/IN/of all/DT/all these/DT/these calls/NNS/calls are/VBP/are going/VBG/going to/TO/to be/VB/be stored/NNP/stored. so/RB/so /,/, we/PRP/we have/VBP/have identified/VBN/identified /,/, which/WDT/which are/VBP/are the/DT/the calls/NNS/calls which/WDT/which are/VBP/are going/VBG/going to/TO/to be/VB/be made/VBN/made over/RP/over the/DT/the lifetime/NN/lifetime of/IN/of this/DT/this algorithm/NNP/algorithm. and/CC/and will/MD/will have/VB/have an/DT/an entry/NN/entry in/IN/in this/DT/this table/NN/table corresponding/VBG/corresponding to/TO/to each/DT/each such/JJ/such call/NNP/call. then/RB/then will/MD/will define/VB/define a/DT/a procedure/NN/procedure /,/, which/WDT/which i/PRP/i will/MD/will call/VB/call fill/NN/fill /,/, which/WDT/which will/MD/will be/VB/be able/JJ/able to/TO/to fill/VB/fill the/DT/the table/NN/table entries/NNS/entries using/VBG/using other/JJ/other table/JJ/table entries/NNP/entries. the/DT/the key/JJ/key requirement/NN/requirement is/VBZ/is that/IN/that fill/NN/fill should/MD/should not/RB/not be/VB/be recursive/JJ/recursive function/NNP/function. if/IN/if we/PRP/we can/MD/can do/VB/do this/DT/this /,/, we/PRP/we will/MD/will have/VB/have a/DT/a dynamic/JJ/dynamic programming/NN/programming algorithm/NNP/algorithm. and/CC/and if/IN/if everything/NN/everything works/NNS/works right/RB/right this/DT/this will/MD/will the/DT/the a/DT/a fast/NN/fast algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see how/WRB/how we/PRP/we can/MD/can make/VB/make this/DT/this work/NNP/work. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing is/VBZ/is to/TO/to look/VB/look at/IN/at the/DT/the search/NN/search space/NNP/space. so/RB/so /,/, let/VB/let us/PRP/us quickly/RB/quickly take/VB/take a/DT/a look/NN/look at/IN/at that/NNP/that. so/RB/so /,/, the/DT/the search/NN/search space/NN/space in/IN/in our/PRP$/our case/NN/case is/VBZ/is all/DT/all possible/JJ/possible trees/NNS/trees with/IN/with m/NN/m 1/CD/1 /,/, m/NN/m 2/CD/2 the/DT/the matrices/NNS/matrices at/IN/at the/DT/the leaves/NNP/leaves. note/NN/note /,/, that/IN/that we/PRP/we have/VBP/have not/RB/not actually/RB/actually been/VBN/been given/VBN/given the/DT/the matrices/NNP/matrices. and/CC/and we/PRP/we do/VBP/do not/RB/not need/VB/need them/PRP/them /,/, we/PRP/we do/VBP/do not/RB/not we/PRP/we are/VBP/are not/RB/not actually/RB/actually going/VBG/going to/TO/to calculate/VB/calculate the/DT/the matrix/NN/matrix product/NNP/product. we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to design/VB/design scheme/NN/scheme for/IN/for calculating/NN/calculating the/DT/the products/NNP/products. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 50/CD/50 /CD/) so/RB/so /,/, even/RB/even though/IN/though i/PRP/i say/VBP/say /,/, that/IN/that m/NN/m 1/CD/1 /,/, m/NN/m 2/CD/2 /,/, m/NN/m n/NN/n are/VBP/are the/DT/the leaves/NNP/leaves. i/PRP/i really/RB/really mean/JJ/mean /,/, so/RB/so i/PRP/i really/RB/really mean/JJ/mean there/EX/there are/VBP/are some/DT/some place/NN/place holders/NNS/holders m/VBP/m 1/CD/1 /,/, m/NN/m 2/CD/2 /,/, m/NN/m n/NN/n where/WRB/where the/DT/the matrices/NNS/matrices can/MD/can eventually/RB/eventually be/VB/be placed/NNP/placed. so/RB/so /,/, there/EX/there are/VBP/are these/DT/these place/NN/place holders/NNS/holders m/VBP/m 1/CD/1 /,/, m/NN/m 2/CD/2 /,/, m/NN/m n/NN/n which/WDT/which are/VBP/are going/VBG/going to/TO/to be/VB/be the/DT/the leaves/NNP/leaves. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to consider/VB/consider all/DT/all possible/JJ/possible trees/NNS/trees and/CC/and that/IN/that going/VBG/going to/TO/to be/VB/be our/PRP$/our space/NN/space s/NNP/s. our/PRP$/our object/NN/object function/NN/function is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a cost/NNP/cost. we/PRP/we call/VBP/call it/PRP/it a/DT/a cost/NN/cost /,/, because/IN/because that/DT/that is/VBZ/is something/NN/something that/IN/that we/PRP/we want/VBP/want to/TO/to minimize/NNP/minimize. so/RB/so /,/, our/PRP$/our cost/NN/cost is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the time/NN/time required/VBN/required for/IN/for a/DT/a tree/NNP/tree. and/CC/and we/PRP/we have/VBP/have already/RB/already seen/VBN/seen /,/, how/WRB/how we/PRP/we calculate/VBP/calculate this/DT/this time/NNP/time. so/RB/so /,/, our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to find/VB/find the/DT/the minimum/JJ/minimum cost/NN/cost tree/NN/tree from/IN/from this/DT/this s/NNP/s. the/DT/the next/JJ/next step/NN/step is/VBZ/is to/TO/to partition/NN/partition this/DT/this s/NNP/s. now/RB/now /,/, there/EX/there are/VBP/are several/JJ/several ways/NNP/ways. in/IN/in which/WDT/which you/PRP/you could/MD/could partition/NNP/partition. if/IN/if you/PRP/you have/VBP/have so/RB/so this/DT/this is/VBZ/is the/DT/the place/NN/place /,/, where/WRB/where we/PRP/we require/VBP/require some/DT/some creativity/NNP/creativity. however/RB/however /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to point/NN/point out/RP/out a/DT/a very/RB/very natural/JJ/natural way/NN/way of/IN/of doing/VBG/doing this/DT/this partitioning/NNP/partitioning. so/RB/so /,/, s/NNS/s is/VBZ/is the/DT/the space/NN/space of/IN/of all/DT/all trees/NNP/trees. i/PRP/i am/VBP/am going/VBG/going to/TO/to define/VB/define s/NNS/s sub/VB/sub i/PRP/i is/VBZ/is that/IN/that sub/NN/sub space/NNP/space. so/RB/so /,/, that/IN/that sub/NN/sub space/NN/space in/IN/in which/WDT/which consists/NNS/consists of/IN/of all/DT/all trees/NNS/trees /,/, in/IN/in which/WDT/which left/VBN/left sub/NN/sub tree/NN/tree of/IN/of root/NN/root has/VBZ/has m/NN/m 1/CD/1 through/IN/through m/NN/m i/PRP/i at/IN/at the/DT/the leaves/NNP/leaves. and/CC/and right/RB/right sub/VB/sub tree/NN/tree of/IN/of root/NN/root has/VBZ/has m/NN/m i/PRP/i plus/VBZ/plus 1/CD/1 to/TO/to m/VB/m n/NN/n at/IN/at the/DT/the leaves/NNP/leaves. so/RB/so in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a tree/NN/tree which/WDT/which looks/NNS/looks like/IN/like this/NNP/this. so/RB/so /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 22/CD/22 /CD/) /CD/) in/IN/in this/DT/this picture/NN/picture /,/, i/PRP/i have/VBP/have m/NN/m 1/CD/1 through/IN/through m/NN/m i/PRP/i at/IN/at the/DT/the leaves/NNS/leaves of/IN/of the/DT/the left/NN/left sub/NN/sub tree/NNP/tree. so/RB/so in/IN/in fact/NN/fact /,/, let/VB/let me/PRP/me call/MD/call this/DT/this sub/NN/sub tree/NN/tree l/NN/l and/CC/and let/VB/let me/PRP/me call/MD/call this/DT/this r/NNP/r. now/RB/now /,/, i/PRP/i have/VBP/have told/VBN/told you/PRP/you /,/, what/WP/what structure/NN/structure l/NN/l is/VBZ/is going/VBG/going to/TO/to have/VB/have /,/, it/PRP/it could/MD/could have/VB/have any/DT/any structure/NN/structure what/WP/what so/RB/so ever/NNP/ever. i/PRP/i have/VBP/have told/VBN/told you/PRP/you what/WP/what structure/NN/structure r/NN/r is/VBZ/is going/VBG/going to/TO/to have/VB/have /,/, that/IN/that could/MD/could also/RB/also have/VB/have any/DT/any structure/NNP/structure. so/RB/so /,/, all/DT/all such/JJ/such trees/NNS/trees /,/, which/WDT/which have/VBP/have this/DT/this form/NN/form r/NN/r going/VBG/going to/TO/to be/VB/be in/IN/in this/DT/this sub/NN/sub space/NN/space s/NNS/s i/NNP/i. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider as/IN/as a/DT/a sub/NN/sub space/NN/space for/IN/for each/DT/each value/NN/value of/IN/of i/PRP/i /,/, i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n minus/NN/minus 1/CD/1. because/IN/because /,/, i/PRP/i want/VBP/want at/IN/at least/JJS/least 1/CD/1 leaf/NN/leaf in/IN/in this/DT/this side/NN/side and/CC/and 1/CD/1 leaf/NN/leaf in/IN/in this/DT/this side/NNP/side. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take the/DT/the union/NN/union of/IN/of these/DT/these subspaces/NNS/subspaces s/VBZ/s 1/CD/1 /,/, s/NNS/s 2/CD/2 all/DT/all the/DT/the way/NN/way till/IN/till s/NNS/s n/VBP/n /,/, s/NNS/s n/VBP/n minus/NN/minus 1/CD/1. i/PRP/i will/MD/will get/VB/get my/PRP$/my original/JJ/original space/NNP/space. so/RB/so /,/, every/DT/every tree/NN/tree in/IN/in this/DT/this original/JJ/original space/NN/space is/VBZ/is place/NN/place /,/, somewhere/RB/somewhere in/IN/in one/CD/one of/IN/of these/DT/these subspaces/NNP/subspaces. the/DT/the next/JJ/next question/NN/question is/VBZ/is how/WRB/how do/VBP/do i/PRP/i search/VBP/search s/NNS/s i/NNP/i. so/RB/so /,/, if/IN/if we/PRP/we can/MD/can design/VB/design an/DT/an algorithm/NN/algorithm for/IN/for searching/VBG/searching s/NNS/s i/NNP/i. then/RB/then will/MD/will be/VB/be able/JJ/able to/TO/to find/VB/find the/DT/the best/JJS/best in/IN/in s/NNS/s i/NNP/i. and/CC/and then/RB/then /,/, will/MD/will take/VB/take the/DT/the best/JJS/best of/IN/of the/DT/the best/JJS/best as/IN/as we/PRP/we has/VBZ/has said/VBN/said earlier/NNP/earlier. so/RB/so /,/, whenever/IN/whenever we/PRP/we look/VBP/look for/IN/for something/NN/something it/PRP/it is/VBZ/is usually/RB/usually a/DT/a good/JJ/good idea/NN/idea to/TO/to characterize/VB/characterize to/TO/to design/VB/design some/DT/some property/NN/property to/TO/to define/VB/define some/DT/some property/NN/property of/IN/of it/NNP/it. so/RB/so /,/, as/IN/as i/PRP/i am/VBP/am looking/VBG/looking for/IN/for a/DT/a tiger/NN/tiger in/IN/in a/DT/a forest/NNP/forest. well/RB/well /,/, it/PRP/it will/MD/will be/VB/be useful/JJ/useful /,/, if/IN/if i/PRP/i say/VBP/say that/IN/that a/DT/a tiger/NN/tiger has/VBZ/has strips/NNS/strips or/CC/or it/PRP/it is/VBZ/is yellow/JJ/yellow or/CC/or it/PRP/it is/VBZ/is a/DT/a large/JJ/large animal/NNP/animal. so/RB/so /,/, if/IN/if we/PRP/we can/MD/can define/VB/define some/DT/some properties/NNS/properties for/IN/for the/DT/the best/JJS/best tree/NN/tree that/WDT/that we/PRP/we are/VBP/are looking/VBG/looking at/NNP/at. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say t/NN/t is/VBZ/is the/DT/the least/JJS/least cost/NN/cost tree/NN/tree in/IN/in this/DT/this s/NNS/s i/NNP/i. and/CC/and if/IN/if we/PRP/we can/MD/can define/VB/define some/DT/some properties/NNS/properties for/IN/for it/PRP/it /,/, then/RB/then it/PRP/it will/MD/will help/VB/help us/PRP/us in/IN/in actually/RB/actually finding/VBG/finding t/NNP/t. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 18/CD/18 /CD/) now/RB/now /,/, here/RB/here is/VBZ/is the/DT/the main/JJ/main property/NN/property of/IN/of t/NN/t that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to use/NNP/use. and/CC/and it/PRP/it is/VBZ/is actually/RB/actually a/DT/a fairly/RB/fairly natural/JJ/natural property/NNP/property. so/RB/so /,/, the/DT/the main/JJ/main lemma/NN/lemma that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove is/VBZ/is this/NNP/this. so/RB/so /,/, left/VBN/left l/NN/l be/VB/be the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of t/NN/t /,/, which/WDT/which is/VBZ/is a/DT/a least/JJ/least cost/NN/cost tree/NN/tree in/IN/in the/DT/the side/NNP/side. i/PRP/i am/VBP/am saying/VBG/saying a/DT/a /,/, and/CC/and not/RB/not b/VB/b least/JJS/least /:/( /:/( refer/NN/refer time/NN/time /:/: 22/CD/22 /:/: 41/CD/41 /CD/) /CD/) cost/NN/cost tree/NN/tree /,/, because/IN/because there/EX/there could/MD/could be/VB/be several/JJ/several least/JJS/least cost/NN/cost trees/NNP/trees. so/RB/so /,/, t/NN/t is/VBZ/is just/RB/just a/DT/a least/JJ/least cost/NN/cost tree/NN/tree in/IN/in our/PRP$/our subspace/NN/subspace s/NNS/s i/NNP/i. and/CC/and l/NN/l is/VBZ/is it/PRP/it is/VBZ/is that/IN/that sub/NN/sub tree/NNP/tree. the/DT/the interesting/JJ/interesting observation/NN/observation or/CC/or the/DT/the interesting/JJ/interesting /NN/( /:/( refer/NN/refer time/NN/time /:/: 22/CD/22 /:/: 57/CD/57 /CD/) /CD/) perhaps/RB/perhaps right/RB/right now/NNP/now. is/VBZ/is that/IN/that /,/, if/IN/if t/NN/t is/VBZ/is a/DT/a least/JJ/least cost/NN/cost tree/NNP/tree. then/RB/then somehow/VB/somehow /,/, we/PRP/we expect/VBP/expect that/IN/that l/NN/l also/RB/also should/MD/should be/VB/be a/DT/a least/JJS/least cost/NN/cost tree/NNP/tree. but/CC/but /,/, l/NN/l is/VBZ/is only/RB/only over/IN/over the/DT/the l/NN/l only/RB/only is/VBZ/is computing/VBG/computing the/DT/the product/NN/product m/NN/m 1/CD/1 through/IN/through m/NN/m i/NNP/i. and/CC/and so/RB/so /,/, our/PRP$/our claim/NN/claim is/VBZ/is that/IN/that l/NN/l must/MD/must be/VB/be a/DT/a least/JJS/least cost/NN/cost tree/NN/tree for/IN/for computing/NN/computing the/DT/the product/NN/product m/NN/m 1/CD/1 through/IN/through m/NN/m i/NNP/i. and/CC/and the/DT/the proof/NN/proof of/IN/of this/DT/this is/VBZ/is very/RB/very follows/VBZ/follows in/IN/in the/DT/the standard/JJ/standard dynamic/JJ/dynamic programming/NN/programming /:/( /:/( refer/NN/refer time/NN/time /:/: 22/CD/22 /:/: 28/CD/28 /CD/) /CD/) argument/NNP/argument. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume /:/( /:/( refer/NN/refer time/NN/time /:/: 22/CD/22 /:/: 30/CD/30 /CD/) /CD/) /./. so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that l/NN/l prime/NN/prime be/VB/be the/DT/the optimal/JJ/optimal or/CC/or the/DT/the best/JJS/best tree/NN/tree for/IN/for this/DT/this product/NN/product m/NN/m 1/CD/1 through/IN/through m/NN/m i/NNP/i. and/CC/and it/PRP/it is/VBZ/is cost/VBN/cost sorry/JJ/sorry and/CC/and the/DT/the cost/NN/cost of/IN/of l/NN/l is/VBZ/is actually/RB/actually /,/, greater/JJR/greater than/IN/than the/DT/the cost/NN/cost of/IN/of l/NN/l prime/JJ/prime /,/, which/WDT/which has/VBZ/has to/TO/to be/VB/be the/DT/the case/NN/case /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to claim/VB/claim that/IN/that l/NN/l is/VBZ/is not/RB/not optimal/NNP/optimal. so/RB/so /,/, l/NN/l has/VBZ/has cost/VBN/cost strictly/RB/strictly bigger/JJR/bigger the/DT/the l/NN/l prime/NNP/prime. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw picture/NN/picture over/IN/over here/RB/here another/DT/another picture/NNP/picture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 02/CD/02 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is l/NN/l /,/, this/DT/this is/VBZ/is r/NN/r and/CC/and say/VB/say this/DT/this is/VBZ/is my/PRP$/my tree/NN/tree t/NNP/t. now/RB/now /,/, what/WDT/what we/PRP/we are/VBP/are just/RB/just claimed/VBN/claimed is/VBZ/is that/IN/that there/EX/there is/VBZ/is t/NN/t l/NN/l prime/NNP/prime. and/CC/and this/DT/this has/VBZ/has leaves/VBZ/leaves m/NN/m 1/CD/1 through/IN/through m/NN/m i/NNP/i. and/CC/and the/DT/the cost/NN/cost of/IN/of this/DT/this is/VBZ/is smaller/JJR/smaller in/IN/in the/DT/the cost/NN/cost of/IN/of this/NNP/this. of/IN/of course/NN/course /,/, l/NN/l must/MD/must also/RB/also have/VB/have leaves/NNS/leaves m/VB/m 1/CD/1 through/IN/through m/NN/m i/NNP/i. and/CC/and let/VB/let me/PRP/me write/VB/write down/RP/down the/DT/the leaves/NNS/leaves over/IN/over here/RB/here as/IN/as well/RB/well this/DT/this should/MD/should be/VB/be m/NN/m i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through m/NN/m n/NNP/n. here/RB/here /,/, is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. here/RB/here is/VBZ/is sort/NN/sort of/IN/of the/DT/the standard/JJ/standard dynamic/JJ/dynamic programming/NN/programming idea/NNP/idea. i/PRP/i am/VBP/am going/VBG/going to/TO/to construct/VB/construct another/DT/another tree/NN/tree t/NNP/t. but/CC/but /,/, this/DT/this time/NN/time i/PRP/i am/VBP/am going/VBG/going to/TO/to place/VB/place l/NN/l prime/NN/prime instead/RB/instead of/IN/of l/NNP/l. so/RB/so /,/, my/PRP$/my tree/NN/tree t/NN/t is/VBZ/is tree/JJ/tree t/NN/t prime/NN/prime is/VBZ/is going/VBG/going to/TO/to looks/NNS/looks something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have l/NN/l prime/NN/prime over/IN/over here/NNP/here. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to retain/VB/retain r/NN/r as/IN/as it/PRP/it was/NNP/was. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to connect/VB/connect these/DT/these two/CD/two together/NNP/together. so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my tree/NN/tree t/NN/t prime/NNP/prime. so/RB/so /,/, i/PRP/i start/VBP/start /,/, so/RB/so t/RB/t is/VBZ/is known/VBN/known to/TO/to be/VB/be optimal/NNP/optimal. so/RB/so /,/, this/DT/this t/NN/t is/VBZ/is optimal/JJ/optimal and/CC/and i/PRP/i do/VBP/do not/RB/not know/VB/know anything/NN/anything about/IN/about this/NNP/this. but/CC/but /,/, i/PRP/i would/MD/would like/VB/like to/TO/to estimate/VB/estimate the/DT/the cost/NN/cost of/IN/of this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the cost/NN/cost of/IN/of t/NN/t first/NNP/first. so/RB/so /,/, cost/NN/cost of/IN/of t/NN/t is/VBZ/is equal/JJ/equal to/TO/to cost/VB/cost of/IN/of l/NN/l plus/CC/plus /:/( /:/( refer/NN/refer time/NN/time /:/: 25/CD/25 /:/: 35/CD/35 /CD/) /CD/) cost/NN/cost of/IN/of r/NN/r plus/CC/plus d/NN/d zero/NN/zero d/NN/d i/PRP/i d/VBP/d n/NNP/n. so/RB/so /,/, this/DT/this just/RB/just comes/VBZ/comes from/IN/from this/DT/this observation/NN/observation /,/, which/WDT/which we/PRP/we had/VBD/had made/VBN/made earlier/NNP/earlier. now/RB/now /,/, what/WDT/what we/PRP/we know/VBP/know about/IN/about cost/JJS/cost of/IN/of l/NN/l /,/, cost/NN/cost of/IN/of l/NN/l is/VBZ/is bigger/JJR/bigger than/IN/than cost/NN/cost of/IN/of l/NN/l prime/NNP/prime. so/RB/so /,/, if/IN/if i/PRP/i substitute/VBP/substitute l/JJ/l cost/NN/cost of/IN/of l/NN/l prime/JJ/prime over/IN/over here/NNP/here. i/PRP/i get/VBP/get that/IN/that cost/NN/cost of/IN/of t/NN/t is/VBZ/is bigger/JJR/bigger than/IN/than cost/NN/cost of/IN/of l/NN/l prime/JJ/prime plus/NN/plus cost/NN/cost of/IN/of r/NN/r plus/CC/plus all/DT/all of/IN/of this/NNP/this. now/RB/now /,/, this/DT/this entire/JJ/entire expression/NN/expression really/RB/really /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at thus/RB/thus picture/VB/picture over/IN/over here/RB/here /,/, you/PRP/you can/MD/can see/VB/see is/VBZ/is nothing/NN/nothing but/CC/but cost/VB/cost of/IN/of t/NN/t prime/NNP/prime. so/RB/so /,/, this/DT/this entire/JJ/entire expression/NN/expression /:/( /:/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 16/CD/16 /CD/) /CD/) is/VBZ/is equal/JJ/equal to/TO/to cost/VB/cost of/IN/of t/NN/t prime/NNP/prime. so/RB/so /,/, what/WDT/what have/VBP/have you/PRP/you proved/VBD/proved /,/, we/PRP/we have/VBP/have proved/VBN/proved the/DT/the cost/NN/cost of/IN/of t/NN/t is/VBZ/is bigger/JJR/bigger than/IN/than cost/NN/cost of/IN/of t/NN/t prime/JJ/prime or/CC/or /:/( /CD/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 27/CD/27 /CD/) /CD/) t/NN/t prime/NN/prime has/VBZ/has a/DT/a smaller/JJR/smaller cost/NN/cost than/IN/than t/NNP/t. but/CC/but we/PRP/we had/VBD/had made/VBN/made a/DT/a claim/NN/claim about/IN/about t/NNP/t. so/RB/so /,/, we/PRP/we had/VBD/had claim/VBP/claim the/DT/the t/NN/t is/VBZ/is optimal/NNP/optimal. so/RB/so /,/, t/NN/t is/VBZ/is optimal/JJ/optimal for/IN/for this/DT/this space/NN/space s/VBZ/s i/NNP/i. so/RB/so /,/, t/NN/t is/VBZ/is the/DT/the best/JJS/best possible/JJ/possible tree/NN/tree of/IN/of this/DT/this form/NN/form with/IN/with i/PRP/i least/JJS/least on/IN/on the/DT/the left/NN/left side/NN/side it/PRP/it is/VBZ/is a/DT/a least/JJ/least cost/NN/cost tree/NNP/tree. but/CC/but /,/, we/PRP/we have/VBP/have just/RB/just found/VBN/found /-NONE-/( /:/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 52/CD/52 /CD/) /CD/) /,/, that/IN/that t/NN/t prime/NN/prime has/VBZ/has even/RB/even smaller/JJR/smaller cost/NN/cost than/IN/than that/NNP/that. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a contradiction/NNP/contradiction. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a contradiction/NN/contradiction and/CC/and therefore/RB/therefore /,/, our/PRP$/our basic/JJ/basic statement/NN/statement must/MD/must be/VB/be true/NNP/true. that/IN/that l/NN/l must/MD/must be/VB/be /:/( /-NONE-/( refer/VBP/refer time/NN/time /:/: 27/CD/27 /:/: 07/CD/07 /CD/) /CD/) l/NN/l must/MD/must also/RB/also be/VB/be a/DT/a least/JJS/least cost/NN/cost tree/NNP/tree. so/RB/so /,/, if/IN/if t/NN/t is/VBZ/is a/DT/a least/JJ/least cost/NN/cost tree/NN/tree /,/, then/RB/then its/PRP$/its left/NN/left sub/NN/sub tree/NN/tree l/NN/l must/MD/must also/RB/also be/VB/be a/DT/a least/JJS/least cost/NN/cost tree/NNP/tree. but/CC/but /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 27/CD/27 /:/: 18/CD/18 /CD/) /CD/) we/PRP/we can/MD/can apply/VB/apply the/DT/the same/JJ/same argument/NN/argument to/TO/to the/DT/the right/NN/right side/NN/side as/IN/as well/NNP/well. so/RB/so /,/, we/PRP/we can/MD/can argue/VB/argue that/IN/that the/DT/the right/NN/right sub/NN/sub tree/NN/tree of/IN/of t/NN/t must/MD/must also/RB/also be/VB/be the/DT/the optimal/JJ/optimal sub/NN/sub tree/NN/tree over/IN/over it/PRP/it is/VBZ/is leaves/NNP/leaves. so/RB/so /,/, we/PRP/we are/VBP/are now/RB/now /,/, ready/RB/ready to/TO/to design/VB/design a/DT/a recursive/JJ/recursive algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 39/CD/39 /CD/) so/RB/so /,/, we/PRP/we will/MD/will call/VB/call our/PRP$/our recursive/JJ/recursive algorithm/NN/algorithm mcm/NN/mcm stands/VBZ/stands for/IN/for metrics/NNS/metrics chain/NN/chain multiplication/NNP/multiplication. it/PRP/it will/MD/will take/VB/take as/IN/as argument/NN/argument then/RB/then array/VBP/array /,/, the/DT/the array/NN/array which/WDT/which gives/VBZ/gives the/DT/the dimension/NN/dimension of/IN/of the/DT/the matrices/NNP/matrices. and/CC/and it/PRP/it will/MD/will return/VB/return the/DT/the optimal/JJ/optimal tree/NNP/tree. we/PRP/we do/VBP/do not/RB/not have/VB/have the/DT/the leaves/NNS/leaves the/DT/the matrices/NNS/matrices themselves/NNP/themselves. so/RB/so /,/, the/DT/the tree/NN/tree will/MD/will just/RB/just p/VB/p the/DT/the tree/NN/tree will/MD/will just/RB/just have/VB/have an/DT/an adequate/JJ/adequate number/NN/number of/IN/of leaves/NNP/leaves. and/CC/and the/DT/the leaves/NNS/leaves will/MD/will serve/VB/serve as/IN/as place/NN/place holders/NNS/holders for/IN/for the/DT/the metrics/NNP/metrics. we/PRP/we are/VBP/are only/RB/only interested/JJ/interested in/IN/in the/DT/the structure/NN/structure of/IN/of the/DT/the tree/NN/tree anyway/NNP/anyway. so/RB/so /,/, we/PRP/we are/VBP/are not/RB/not actually/RB/actually going/VBG/going to/TO/to perform/NN/perform in/IN/in the/DT/the matrix/NN/matrix multiplications/NNS/multiplications themselves/NNP/themselves. but/CC/but /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to indicate/VB/indicate the/DT/the order/NN/order in/IN/in which/WDT/which the/DT/the matrix/NN/matrix multiplication/NN/multiplication should/MD/should be/VB/be performed/NNP/performed. the/DT/the basics/NNS/basics for/IN/for writing/VBG/writing this/DT/this algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the lemma/NN/lemma that/IN/that /,/, which/WDT/which has/VBZ/has proved/NNP/proved. but/CC/but we/PRP/we need/VBP/need to/TO/to first/JJ/first take/NN/take care/NN/care of/IN/of some/DT/some base/NN/base cases/NNP/cases. so/RB/so /,/, suppose/DT/suppose our/PRP$/our array/NN/array only/RB/only represents/VBZ/represents a/DT/a single/JJ/single matrix/NN/matrix /,/, in/IN/in which/WDT/which case/NN/case this/DT/this n/NN/n could/MD/could be/VB/be 1/CD/1. we/PRP/we could/MD/could be/VB/be given/VBN/given just/RB/just two/CD/two number/NN/number /,/, the/DT/the number/NN/number of/IN/of rows/NNS/rows and/CC/and the/DT/the number/NN/number of/IN/of columns/NNP/columns. in/IN/in this/DT/this case/NN/case of/IN/of course/NN/course /,/, there/EX/there is/VBZ/is no/DT/no multiplication/NN/multiplication to/TO/to be/VB/be done/NNP/done. but/CC/but /,/, this/DT/this is/VBZ/is the/DT/the base/NN/base case/NN/case and/CC/and here/RB/here we/PRP/we will/MD/will written/VB/written a/DT/a tree/NNP/tree. but/CC/but /,/, this/DT/this tree/NN/tree will/MD/will just/RB/just consist/VB/consist of/IN/of a/DT/a single/JJ/single vertex/NNP/vertex. now/RB/now /,/, we/PRP/we are/VBP/are ready/RB/ready to/TO/to generate/VB/generate the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we use/VBP/use the/DT/the lemma/NN/lemma generate/NN/generate our/PRP$/our algorithm/NNP/algorithm. the/DT/the basic/JJ/basic idea/NN/idea is/VBZ/is that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to explore/VB/explore each/DT/each subspace/NN/subspace s/VBZ/s i/NNP/i. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the code/NN/code for/IN/for doing/VBG/doing that/NNP/that. so/RB/so /,/, i/PRP/i here/RB/here is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the subspace/NN/subspace that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be exploring/NNP/exploring. and/CC/and i/PRP/i will/MD/will take/VB/take value/NN/value is/VBZ/is 1/CD/1 to/TO/to n/VB/n modulation/NN/modulation one/NNP/one. so/RB/so /,/, for/IN/for each/DT/each subspace/NN/subspace we/PRP/we will/MD/will first/RB/first calculate/VB/calculate /,/, the/DT/the best/JJS/best left/VBN/left sub/NN/sub tree/NN/tree that/WDT/that must/MD/must be/VB/be made/VBN/made that/IN/that must/MD/must form/VB/form /,/, the/DT/the that/WDT/that must/MD/must be/VB/be a/DT/a part/NN/part of/IN/of the/DT/the optimal/JJ/optimal sub/NN/sub tree/NN/tree optimal/NN/optimal tree/NN/tree for/IN/for that/NNP/that. so/RB/so /,/, as/IN/as for/IN/for the/DT/the previous/JJ/previous lemma/NN/lemma the/DT/the left/NN/left sub/NN/sub tree/NN/tree of/IN/of the/DT/the optimal/JJ/optimal sub/NN/sub tree/NN/tree optimal/NN/optimal tree/NN/tree for/IN/for this/DT/this subspace/NN/subspace must/MD/must itself/PRP/itself the/DT/the an/DT/an optimal/JJ/optimal tree/NNP/tree. so/RB/so /,/, to/TO/to do/VB/do that/DT/that /,/, will/MD/will recursively/RB/recursively call/VB/call mcm/NNP/mcm. but/CC/but /,/, this/DT/this time/NN/time we/PRP/we only/RB/only want/VBP/want the/DT/the optimal/JJ/optimal tree/NN/tree over/IN/over the/DT/the first/JJ/first i/PRP/i leaves/NNP/leaves. so/RB/so /,/, likewise/VBP/likewise we/PRP/we will/MD/will only/RB/only we/PRP/we passing/VBG/passing the/DT/the i/NN/i plus/VBZ/plus 1/CD/1 elements/NNS/elements of/IN/of this/DT/this array/NNP/array. so/RB/so /,/, i/PRP/i plus/VBZ/plus 1/CD/1 elements/NNS/elements will/MD/will define/VB/define the/DT/the rows/NNS/rows and/CC/and columns/NNS/columns of/IN/of the/DT/the sizes/NNS/sizes of/IN/of the/DT/the number/NN/number of/IN/of rows/NNS/rows and/CC/and columns/NNS/columns of/IN/of the/DT/the first/JJ/first i/PRP/i matrices/VBZ/matrices and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we will/MD/will pass/VB/pass. likewise/VB/likewise /,/, will/MD/will construct/VB/construct r/NN/r i/PRP/i /,/, which/WDT/which will/MD/will be/VB/be the/DT/the optimal/JJ/optimal right/NN/right sub/NN/sub tree/NN/tree /,/, which/WDT/which will/MD/will be/VB/be the/DT/the part/NN/part of/IN/of the/DT/the optimal/JJ/optimal tree/NN/tree for/IN/for s/NNS/s i/NNP/i. so/RB/so /,/, this/DT/this will/MD/will be/VB/be done/VBN/done by/IN/by this/DT/this call/NN/call mcm/NN/mcm of/IN/of d/NN/d i/PRP/i through/IN/through n/NNP/n. and/CC/and this/DT/this will/MD/will simply/RB/simply be/VB/be the/DT/the dimensions/NNS/dimensions of/IN/of the/DT/the remaining/VBG/remaining n/NN/n minus/NN/minus i/PRP/i metrics/NNP/metrics. c/NN/c sub/NN/sub i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the cost/NN/cost of/IN/of this/NNP/this. this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be computed/VBN/computed using/VBG/using this/DT/this observation/NNP/observation. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the cost/NN/cost of/IN/of l/NN/l plus/CC/plus the/DT/the cost/NN/cost of/IN/of r/NN/r /:/( /:/( refer/NN/refer time/NN/time /:/: 30/CD/30 /:/: 50/CD/50 /CD/) /CD/) and/CC/and the/DT/the cost/NN/cost of/IN/of multiplying/VBG/multiplying the/DT/the two/CD/two the/DT/the results/NNS/results together/NNP/together. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have over/IN/over here/NNP/here. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be cost/VBN/cost of/IN/of this/DT/this tree/NN/tree /,/, cost/NN/cost of/IN/of this/DT/this tree/NN/tree that/IN/that we/PRP/we get/VBP/get and/CC/and the/DT/the time/NN/time required/VBN/required or/CC/or the/DT/the cost/NN/cost required/VBN/required to/TO/to multiply/RB/multiply the/DT/the results/NNS/results corresponding/VBG/corresponding to/TO/to these/DT/these two/NNP/two. note/NN/note over/IN/over here/RB/here /,/, that/IN/that i/PRP/i am/VBP/am using/VBG/using this/DT/this /,/, this/DT/this expression/NN/expression cost/NN/cost of/IN/of l/NN/l i/NNP/i. and/CC/and you/PRP/you may/MD/may think/VB/think of/IN/of it/PRP/it either/DT/either as/IN/as a/DT/a function/NN/function /,/, but/CC/but more/RBR/more accurately/RB/accurately you/PRP/you should/MD/should think/VB/think of/IN/of it/PRP/it as/IN/as a/DT/a field/NN/field selector/NNP/selector. so/RB/so /,/, when/WRB/when we/PRP/we return/VBP/return the/DT/the tree/NN/tree itself/PRP/itself /,/, the/DT/the tree/NN/tree will/MD/will also/RB/also contain/VB/contain its/PRP$/its cost/NNP/cost. so/RB/so /,/, we/PRP/we are/VBP/are just/RB/just extracting/VBG/extracting the/DT/the cost/NN/cost out/IN/out of/IN/of it/NNP/it. so/RB/so in/IN/in fact/NN/fact /,/, as/IN/as we/PRP/we designed/VBN/designed the/DT/the algorithm/NN/algorithm we/PRP/we should/MD/should consider/VB/consider that/DT/that we/PRP/we are/VBP/are not/RB/not only/RB/only written/VBN/written in/IN/in the/DT/the tree/NNP/tree. but/CC/but /,/, we/PRP/we are/VBP/are also/RB/also written/VBN/written in/IN/in the/DT/the cost/NN/cost of/IN/of the/DT/the tree/NNP/tree. next/JJ/next /,/, we/PRP/we will/MD/will have/VB/have all/PDT/all these/DT/these c/NN/c i/PRP/i ?/./? s/NNS/s and/CC/and we/PRP/we just/RB/just want/VBP/want to/TO/to find/VB/find the/DT/the minimum/JJ/minimum c/NN/c i/NNP/i. and/CC/and let/VB/let us/PRP/us call/MD/call that/IN/that i/PRP/i for/IN/for which/WDT/which c/NN/c i/PRP/i is/VBZ/is minimum/NNP/minimum. and/CC/and let/VB/let us/PRP/us call/MD/call that/IN/that i/PRP/i /,/, lets/NNS/lets us/PRP/us use/VBP/use i/PRP/i to/TO/to denote/VB/denote time/NNP/time. and/CC/and then/RB/then /,/, we/PRP/we are/VBP/are simply/RB/simply going/VBG/going to/TO/to take/VB/take the/DT/the corresponding/NN/corresponding tree/NN/tree in/IN/in the/DT/the corresponding/NN/corresponding left/VBD/left and/CC/and right/RB/right sub/VB/sub trees/NNS/trees and/CC/and make/VB/make a/DT/a tree/NN/tree out/IN/out of/IN/of those/DT/those and/CC/and written/VBN/written that/NNP/that. so/RB/so /,/, this/DT/this will/MD/will typically/RB/typically we/PRP/we something/NN/something like/IN/like l/NN/l i/PRP/i will/MD/will be/VB/be a/DT/a pointer/NN/pointer to/TO/to the/DT/the left/NN/left sub/NN/sub tree/NN/tree or/CC/or i/PRP/i will/MD/will be/VB/be a/DT/a pointer/NN/pointer to/TO/to the/DT/the right/NN/right sub/NN/sub tree/NNP/tree. so/RB/so /,/, we/PRP/we will/MD/will construct/VB/construct the/DT/the new/JJ/new node/NN/node /,/, which/WDT/which will/MD/will be/VB/be the/DT/the new/JJ/new root/NNP/root. and/CC/and we/PRP/we will/MD/will make/VB/make the/DT/the root/NN/root point/NN/point to/TO/to align/VB/align r/NN/r i/NNP/i. and/CC/and since/IN/since we/PRP/we also/RB/also want/VBP/want to/TO/to written/VBN/written a/DT/a cost/NN/cost /,/, we/PRP/we will/MD/will attach/VB/attach an/DT/an additional/JJ/additional field/NN/field /,/, which/WDT/which is/VBZ/is c/NN/c i/PRP/i over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the procedure/NNP/procedure. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the recursive/JJ/recursive algorithm/NN/algorithm that/WDT/that we/PRP/we wanted/NNP/wanted. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 39/CD/39 /CD/) now/RB/now /,/, we/PRP/we could/MD/could work/VB/work with/IN/with this/DT/this /,/, but/CC/but to/TO/to simplify/VB/simplify a/DT/a matrix/NNP/matrix. we/PRP/we will/MD/will only/RB/only consider/VB/consider will/MD/will consider/VB/consider an/DT/an algorithm/NN/algorithm /,/, in/IN/in which/WDT/which we/PRP/we only/RB/only compute/VBP/compute we/PRP/we only/RB/only compute/VBP/compute the/DT/the cost/NN/cost and/CC/and not/RB/not the/DT/the tree/NN/tree itself/NNP/itself. so/RB/so /,/, the/DT/the idea/NN/idea is/VBZ/is going/VBG/going to/TO/to be/VB/be very/RB/very similar/JJ/similar to/TO/to the/DT/the previous/JJ/previous algorithm/NN/algorithm in/IN/in that/DT/that it/PRP/it going/VBG/going to/TO/to be/VB/be simpler/NNP/simpler. so/RB/so /,/, earlier/JJR/earlier we/PRP/we said/VBD/said that/IN/that /,/, if/IN/if n/NN/n is/VBZ/is equal/JJ/equal to/TO/to 1/CD/1 then/RB/then be/VB/be written/VBN/written single/JJ/single element/NNP/element. in/IN/in this/DT/this case/NN/case /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to written/VB/written a/DT/a element/NN/element /,/, but/CC/but we/PRP/we are/VBP/are going/VBG/going to/TO/to written/VB/written its/PRP$/its cost/NNP/cost. so/RB/so /,/, in/IN/in this/DT/this case/NN/case /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to written/VB/written 0/CD/0. in/IN/in the/DT/the previous/JJ/previous algorithm/NN/algorithm /,/, we/PRP/we l/VBP/l i/PRP/i equal/JJ/equal to/TO/to mcm/VB/mcm of/IN/of this/NNP/this. but/CC/but here/RB/here /,/, now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use mcmc/NNP/mcmc. so/RB/so /,/, mcmc/NN/mcmc is/VBZ/is the/DT/the cost/NN/cost the/DT/the cost/NN/cost of/IN/of the/DT/the optimal/JJ/optimal tree/NNP/tree. so/RB/so /,/, will/MD/will l/VB/l i/PRP/i will/MD/will now/RB/now become/VB/become the/DT/the cost/NN/cost /,/, arrive/JJ/arrive will/MD/will also/RB/also become/VB/become the/DT/the cost/NNP/cost. and/CC/and so/RB/so the/DT/the total/JJ/total cost/NN/cost is/VBZ/is going/VBG/going to/TO/to be/VB/be not/RB/not cost/VB/cost of/IN/of l/NN/l i/PRP/i /,/, but/CC/but just/RB/just l/VBP/l i/PRP/i plus/RB/plus r/JJ/r i/PRP/i plus/VBZ/plus whatever/RB/whatever this/DT/this was/NNP/was. and/CC/and now/RB/now /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to find/VB/find the/DT/the i/PRP/i for/IN/for which/WDT/which this/DT/this is/VBZ/is the/DT/the minimum/NNP/minimum. and/CC/and then/RB/then we/PRP/we will/MD/will write/VB/write this/DT/this c/NN/c of/IN/of i/NNP/i. so/RB/so /,/, we/PRP/we will/MD/will work/VB/work with/IN/with this/DT/this and/CC/and the/DT/the rest/NN/rest of/IN/of the/DT/the dynamic/JJ/dynamic programming/NN/programming procedure/NN/procedure will/MD/will work/VB/work will/MD/will use/VB/use this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 51/CD/51 /CD/) actually/RB/actually /,/, we/PRP/we would/MD/would like/VB/like to/TO/to simplify/VB/simplify /,/, we/PRP/we can/MD/can simplify/VB/simplify the/DT/the whole/JJ/whole thing/NNP/thing. and/CC/and here/RB/here is/VBZ/is however/RB/however /,/, simplify/NN/simplify it/NNP/it. so/RB/so /,/, let/VB/let me/PRP/me go/VB/go back/RB/back to/TO/to this/DT/this and/CC/and let/VB/let me/PRP/me try/NN/try doing/VBG/doing this/DT/this one/CD/one paper/NN/paper /:/( /:/( refer/NN/refer time/NN/time /:/: 34/CD/34 /:/: 01/CD/01 /CD/) /CD/) /./. so/RB/so /,/, you/PRP/you can/MD/can see/VB/see both/DT/both the/DT/the things/NNS/things at/IN/at the/DT/the same/JJ/same time/NNP/time. so/IN/so /,/, the/DT/the idea/NN/idea over/IN/over here/RB/here was/VBD/was that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to calculate/VB/calculate this/DT/this expression/NN/expression and/CC/and take/VB/take the/DT/the minimum/NNP/minimum. so/NNP/so. in/IN/in fact/NN/fact /,/, this/DT/this whole/JJ/whole part/NN/part i/PRP/i can/MD/can replace/VB/replace by/IN/by the/DT/the following/JJ/following expression/NNP/expression. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 25/CD/25 /CD/) so/IN/so /,/, i/PRP/i will/MD/will just/RB/just write/VB/write this/DT/this as/IN/as return/NN/return the/DT/the minimum/JJ/minimum over/IN/over all/DT/all possible/JJ/possible values/NNS/values of/IN/of i/PRP/i /,/, of/IN/of what/WP/what are/VBP/are say/VBP/say in/IN/in fact/NN/fact /,/, i/PRP/i going/VBG/going from/IN/from 1/CD/1 to/TO/to n/VB/n minus/NN/minus 1/CD/1. and/CC/and what/WP/what is/VBZ/is it/PRP/it that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take the/DT/the minimum/JJ/minimum of/IN/of it/PRP/it is/VBZ/is just/RB/just going/VBG/going to/TO/to be/VB/be this/DT/this c/NN/c of/IN/of i/PRP/i over/IN/over here/NNP/here. so/RB/so /,/, instead/RB/instead of/IN/of l/NN/l i/PRP/i /,/, i/PRP/i will/MD/will just/RB/just substitute/VB/substitute this/DT/this mcmc/NNP/mcmc. so/RB/so /,/, i/PRP/i will/MD/will write/VB/write that/IN/that as/IN/as mcmc/NN/mcmc of/IN/of d/NN/d 0/-NONE-/0 through/IN/through i/PRP/i plus/CC/plus mcmc/NN/mcmc of/IN/of d/NN/d i/PRP/i through/IN/through n/JJ/n plus/CC/plus d/NN/d of/IN/of 0/-NONE-/0 times/NNS/times d/VBP/d of/IN/of i/PRP/i times/VBZ/times d/JJ/d of/IN/of n/NNP/n. so/RB/so /,/, i/PRP/i just/RB/just taken/VBN/taken this/DT/this expression/NN/expression /:/( /:/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 25/CD/25 /CD/) /CD/) and/CC/and i/PRP/i have/VBP/have substituted/VBN/substituted mcmc/NN/mcmc over/IN/over it/PRP/it here/NNP/here. and/CC/and this/DT/this mcmc/NN/mcmc over/IN/over here/RB/here and/CC/and i/PRP/i get/VBP/get this/DT/this expression/NNP/expression. so/RB/so /,/, that/IN/that entire/JJ/entire part/NN/part could/MD/could be/VB/be represented/VBN/represented as/IN/as this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take this/DT/this expression/NN/expression for/IN/for all/DT/all values/NNS/values of/IN/of i/PRP/i and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to find/VB/find the/DT/the minimum/JJ/minimum fit/NNP/fit. and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to return/NNP/return. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the resulting/VBG/resulting expression/NN/expression /:/( /:/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 47/CD/47 /CD/) /CD/) /./. so/RB/so /,/, if/IN/if n/NN/n is/VBZ/is equal/JJ/equal to/TO/to 1/CD/1 again/RB/again will/MD/will return/VB/return 0/-NONE-/0 otherwise/VB/otherwise will/MD/will return/VB/return this/DT/this /,/, which/WDT/which is/VBZ/is what/WP/what i/PRP/i have/VBP/have return/NN/return over/IN/over here/NNP/here. the/DT/the final/JJ/final step/NN/step in/IN/in dynamic/JJ/dynamic programming/NN/programming is/VBZ/is to/TO/to characterize/VB/characterize the/DT/the recursive/JJ/recursive calls/NNP/calls. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 01/CD/01 /CD/) so/RB/so /,/, our/PRP$/our recursive/JJ/recursive calls/NNS/calls /,/, which/WDT/which we/PRP/we made/VBD/made /:/( /CD/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 04/CD/04 /CD/) for/IN/for this/DT/this procedure/NN/procedure mcmc/NN/mcmc of/IN/of d/NN/d 0/-NONE-/0 through/IN/through n/NNP/n. and/CC/and we/PRP/we called/VBD/called d/VBN/d 0/-NONE-/0 over/IN/over i/PRP/i over/IN/over here/RB/here and/CC/and d/VBD/d i/PRP/i n/VBP/n over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we mcmc/VBP/mcmc /:/( /:/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 14/CD/14 /CD/) /CD/) was/VBD/was called/VBN/called these/DT/these arguments/NNP/arguments. so/RB/so /,/, if/IN/if we/PRP/we look/VBP/look at/IN/at how/WRB/how mcmc/NN/mcmc would/MD/would progress/VB/progress further/JJ/further /,/, you/PRP/you will/MD/will notice/VB/notice that/IN/that each/DT/each time/NN/time we/PRP/we are/VBP/are taking/VBG/taking our/PRP$/our original/JJ/original range/NNP/range. and/CC/and then/RB/then we/PRP/we are/VBP/are splitting/VBG/splitting get/NN/get in/IN/in some/DT/some way/NNP/way. so/RB/so /,/, here/RB/here we/PRP/we are/VBP/are taking/VBG/taking a/DT/a prefix/NN/prefix of/IN/of the/DT/the range/NNP/range. here/RB/here we/PRP/we are/VBP/are taking/VBG/taking the/DT/the suffix/NN/suffix of/IN/of the/DT/the range/NNP/range. if/IN/if we/PRP/we take/VBP/take a/DT/a prefix/NN/prefix of/IN/of the/DT/the suffix/NN/suffix then/RB/then we/PRP/we will/MD/will get/VB/get some/DT/some range/NN/range for/IN/for not/RB/not necessarily/RB/necessarily a/DT/a suffix/NN/suffix or/CC/or prefix/CD/prefix of/IN/of this/NNP/this. but/CC/but /,/, never/RB/never there/EX/there is/VBZ/is always/RB/always some/DT/some sub/NN/sub range/NN/range of/IN/of this/NNP/this. so/RB/so /,/, our/PRP$/our characterization/NN/characterization could/MD/could be/VB/be something/NN/something like/IN/like this/NNP/this. that/IN/that mcmc/NN/mcmc is/VBZ/is always/RB/always called/VBN/called is/VBZ/is a/DT/a sub/NN/sub range/NN/range d/NN/d j/NN/j k/NN/k /,/, where/WRB/where j/NN/j k/NN/k is/VBZ/is the/DT/the sub/NN/sub range/NN/range of/IN/of 0/-NONE-/0 through/IN/through n/NNP/n. so/RB/so /,/, our/PRP$/our entire/JJ/entire array/NN/array was/VBD/was d/VBN/d 0/-NONE-/0 through/IN/through n/NNP/n. but/CC/but /,/, will/MD/will call/VB/call it/PRP/it with/IN/with some/DT/some d/JJ/d j/NN/j k/NNP/k. so/RB/so /,/, this/DT/this allows/VBZ/allows just/RB/just define/NN/define a/DT/a table/NNP/table. since/IN/since /,/, we/PRP/we know/VBP/know what/WP/what all/DT/all the/DT/the recursive/JJ/recursive calls/NNS/calls are/VBP/are going/VBG/going to/TO/to be/VB/be /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to allocate/VB/allocate one/CD/one entry/NN/entry for/IN/for each/DT/each possible/JJ/possible result/NNP/result. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the possible/JJ/possible result/NNP/result. so/RB/so /,/, d/JJ/d j/NN/j k/NN/k /,/, where/WRB/where 0/-NONE-/0 less/JJR/less than/IN/than /,/, j/NN/j less/JJR/less than/IN/than /,/, k/NN/k less/JJR/less than/IN/than n/NNP/n. so/RB/so /,/, this/DT/this result/NN/result of/IN/of the/DT/the call/NN/call mcmc/NN/mcmc on/IN/on this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be store/RB/store in/IN/in table/JJ/table entry/NN/entry t/NN/t j/NN/j k/NNP/k. our/PRP$/our next/JJ/next step/NN/step is/VBZ/is to/TO/to define/VB/define a/DT/a non/NN/non recursive/NN/recursive procedure/NN/procedure fill/NN/fill /,/, which/WDT/which will/MD/will be/VB/be used/VBN/used to/TO/to fill/VB/fill this/NNP/this. so/RB/so /,/, if/IN/if we/PRP/we call/VBP/call fill/RB/fill with/IN/with j/NN/j k/NN/k /,/, we/PRP/we should/MD/should get/VB/get exactly/RB/exactly what/WP/what is/VBZ/is suppose/DT/suppose to/TO/to be/VB/be filled/VBN/filled over/RP/over here/RB/here or/CC/or it/PRP/it should/MD/should return/VB/return mcmc/NN/mcmc of/IN/of d/NN/d j/NN/j k/NNP/k. so/RB/so /,/, mcmc/NN/mcmc of/IN/of d/NN/d j/NN/j k/NN/k /,/, so/RB/so you/PRP/you need/VBP/need to/TO/to figure/VB/figure out/RP/out what/WP/what exactly/RB/exactly is/VBZ/is mcmc/JJ/mcmc of/IN/of d/NN/d j/NN/j k/NNP/k. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try and/CC/and execute/NN/execute mcmc/NN/mcmc with/IN/with the/DT/the arguments/NNS/arguments d/VBD/d j/NN/j k/NNP/k. so/RB/so /,/, for/IN/for that/DT/that we/PRP/we need/VBP/need to/TO/to go/VB/go back/RB/back to/TO/to the/DT/the definition/NN/definition of/IN/of mcmc/NNP/mcmc. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what we/PRP/we need/VBP/need to/TO/to do/VB/do /,/, we/PRP/we want/VBP/want to/TO/to execute/VB/execute the/DT/the call/NN/call mcmc/NN/mcmc of/IN/of d/NN/d j/NN/j k/NNP/k. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 09/CD/09 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our basic/JJ/basic procedure/NN/procedure /:/( /:/( refer/NN/refer time/NN/time /:/: 38/CD/38 /:/: 25/CD/25 /CD/) /CD/) mcmc/NNP/mcmc. so/RB/so /,/, this/DT/this is/VBZ/is being/VBG/being called/VBN/called the/DT/the parameters/NNS/parameters over/IN/over here/RB/here are/VBP/are the/DT/the entire/JJ/entire sub/NN/sub range/NN/range 0/-NONE-/0 through/IN/through n/NNP/n. however/RB/however /,/, we/PRP/we want/VBP/want to/TO/to call/VB/call it/PRP/it with/IN/with this/DT/this sub/NN/sub range/NNP/range. so/RB/so /,/, assume/NN/assume of/IN/of course/NN/course /,/, that/IN/that the/DT/the compiler/NN/compiler will/MD/will rename/VB/rename and/CC/and make/VB/make this/DT/this appear/NN/appear like/IN/like 0/-NONE-/0 through/IN/through n/NNP/n. but/CC/but /,/, when/WRB/when it/PRP/it does/VBZ/does that/IN/that /,/, what/WP/what exactly/RB/exactly will/MD/will this/DT/this return/NNP/return. what/WP/what exactly/RB/exactly how/WRB/how exactly/RB/exactly will/MD/will this/DT/this execute/NNP/execute. that/IN/that is/VBZ/is what/WP/what we/PRP/we need/VBP/need to/TO/to understand/NNP/understand. so/RB/so /,/, the/DT/the condition/NN/condition n/NN/n equal/JJ/equal to/TO/to 1/CD/1 over/IN/over here/NNP/here. just/RB/just say/VBP/say /,/, whether/IN/whether this/DT/this last/JJ/last index/NN/index is/VBZ/is 1/CD/1 plus/RB/plus this/DT/this first/JJ/first index/NNP/index. so/RB/so /,/, this/DT/this condition/NN/condition really/RB/really should/MD/should be/VB/be thought/VBN/thought of/IN/of us/NNP/us. if/IN/if the/DT/the last/JJ/last index/NN/index k/NN/k is/VBZ/is equal/JJ/equal to/TO/to j/VB/j plus/RB/plus 1/CD/1. in/IN/in that/DT/that case/NN/case return/NN/return 0/CD/0. otherwise/NN/otherwise /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to return/VB/return this/DT/this expression/NNP/expression. so/RB/so /,/, we/PRP/we are/VBP/are still/RB/still going/VBG/going to/TO/to return/VB/return this/DT/this expression/NN/expression /,/, but/CC/but wherever/RB/wherever the/DT/the first/JJ/first index/NN/index 0/-NONE-/0 appears/VBZ/appears will/MD/will just/RB/just put/VB/put in/IN/in j/NN/j and/CC/and wherever/NN/wherever the/DT/the last/JJ/last index/NN/index n/NN/n appears/VBZ/appears we/PRP/we just/RB/just put/VBD/put in/IN/in a/DT/a k/NNP/k. so/RB/so /,/, that/IN/that exactly/RB/exactly what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to what/WP/what that/IN/that procedure/NN/procedure should/MD/should be/VB/be doing/NNP/doing. so/RB/so /,/, mcmc/NN/mcmc even/RB/even called/VBN/called on/IN/on d/NN/d j/NN/j k/NN/k will/MD/will work/VB/work something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, it/PRP/it will/MD/will return/VB/return say/VB/say min/NN/min our/PRP$/our i/PRP/i going/VBG/going from/IN/from not/RB/not 1/CD/1 to/TO/to n/VB/n minus/NN/minus 1/CD/1. but/CC/but /,/, instead/RB/instead it/PRP/it will/MD/will go/VB/go from/IN/from j/NN/j plus/CC/plus 1/CD/1 to/TO/to k/VB/k minus/NN/minus 1/CD/1. and/CC/and it/PRP/it will/MD/will compute/VB/compute mcmc/NN/mcmc of/IN/of d/NN/d of/IN/of j/NN/j i/PRP/i plus/VBZ/plus mcmc/JJ/mcmc of/IN/of d/NN/d of/IN/of i/PRP/i k/VBP/k plus/RB/plus instead/RB/instead of/IN/of this/DT/this we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have the/DT/the corresponding/VBG/corresponding right/RB/right bounds/VBZ/bounds /:/( /:/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 29/CD/29 /CD/) /CD/) /./. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get d/JJ/d of/IN/of instead/RB/instead of/IN/of 0/-NONE-/0 /,/, we/PRP/we will/MD/will get/VB/get j/NN/j times/NNS/times d/VBP/d of/IN/of i/PRP/i times/VBZ/times d/JJ/d of/IN/of k/NNP/k. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 45/CD/45 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the value/NN/value that/IN/that should/MD/should be/VB/be return/VBN/return by/IN/by fill/NNP/fill. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what fill/RB/fill in/IN/in fact/NN/fact /,/, as/NNP/as. so/RB/so /,/, fill/MD/fill is/VBZ/is going/VBG/going to/TO/to do/VB/do exactly/RB/exactly this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 56/CD/56 /CD/) /CD/) /./. however/RB/however /,/, fill/RB/fill is/VBZ/is not/RB/not really/RB/really allow/VBP/allow to/TO/to reference/NN/reference mcmc/NN/mcmc and/CC/and in/IN/in fact/NN/fact /,/, filled/VBD/filled does/VBZ/does not/RB/not need/VBP/need to/TO/to reference/NN/reference mcmc/NNP/mcmc. so/RB/so /,/, when/WRB/when it/PRP/it wants/VBZ/wants to/TO/to compute/VB/compute mcmc/NN/mcmc of/IN/of d/NN/d j/NN/j i/NNP/i. it/PRP/it fill/MD/fill knows/VBZ/knows that/IN/that this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be stored/VBN/stored in/IN/in d/NN/d j/NN/j i/NNP/i. so/RB/so in/IN/in fact/NN/fact /,/, instead/RB/instead of/IN/of mcmc/NN/mcmc fill/NN/fill is/VBZ/is just/RB/just going/VBG/going to/TO/to return/VB/return d/JJ/d of/IN/of j/NN/j i/NNP/i. instead/RB/instead of/IN/of mcmc/NN/mcmc of/IN/of d/NN/d i/PRP/i k/VBP/k fill/RB/fill is/VBZ/is just/RB/just going/VBG/going to/TO/to return/VB/return t/NN/t i/PRP/i k/NNP/k. and/CC/and then/RB/then this/DT/this part/NN/part is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the same/JJ/same as/IN/as before/NNP/before. in/IN/in fact/NN/fact /,/, that/IN/that is/VBZ/is what/WP/what fill/RB/fill is/VBZ/is going/VBG/going to/TO/to be/VB/be returning/NNP/returning. so/RB/so /,/, this/DT/this procedure/NN/procedure fill/NN/fill that/WDT/that we/PRP/we have/VBP/have defined/VBN/defined over/IN/over here/RB/here is/VBZ/is the/DT/the right/NN/right procedure/NN/procedure it/PRP/it is/VBZ/is non/IN/non recursive/NNP/recursive. it/PRP/it does/VBZ/does not/RB/not think/VB/think talk/NN/talk about/IN/about mcmc/NN/mcmc does/VBZ/does not/RB/not call/VB/call anyone/NN/anyone else/RB/else /,/, but/CC/but it/PRP/it is/VBZ/is look/VBP/look at/IN/at the/DT/the table/NN/table entries/NNP/entries. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we needed/VBD/needed /,/, we/PRP/we want/VBP/want it/PRP/it to/TO/to have/VB/have a/DT/a procedure/NN/procedure /,/, which/WDT/which tells/NNS/tells us/PRP/us how/WRB/how to/TO/to fill/VB/fill the/DT/the j/NN/j k/NN/k th/NN/th entry/NN/entry assuming/VBG/assuming that/IN/that other/JJ/other entries/NNS/entries are/VBP/are full/NNP/full. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what it/PRP/it is/VBZ/is doing/NNP/doing. so/RB/so /,/, now/RB/now we/PRP/we are/VBP/are really/RB/really pretty/RB/pretty match/VB/match ready/JJ/ready to/TO/to right/JJ/right the/DT/the dynamic/JJ/dynamic programming/NN/programming algorithm/NNP/algorithm. so/RB/so /,/, what/WDT/what we/PRP/we need/VBP/need to/TO/to do/VB/do next/JJ/next is/VBZ/is to/TO/to characterize/VB/characterize how/WRB/how fill/NN/fill works/NNP/works. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down over/IN/over table/JJ/table first/NNP/first. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 22/CD/22 /CD/) so/RB/so /,/, our/PRP$/our table/JJ/table t/NN/t is/VBZ/is going/VBG/going to/TO/to look/VB/look something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the first/JJ/first index/NN/index /,/, index/NN/index which/WDT/which is/VBZ/is i/PRP/i here/RB/here is/VBZ/is the/DT/the first/JJ/first index/NN/index /,/, which/WDT/which is/VBZ/is the/DT/the second/JJ/second index/NN/index which/WDT/which is/VBZ/is j/NN/j /,/, sorry/JJ/sorry our/PRP$/our first/JJ/first index/NN/index is/VBZ/is j/NN/j and/CC/and the/DT/the second/JJ/second index/NN/index is/VBZ/is k/NNP/k. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now look/VBP/look at/IN/at the/DT/the first/JJ/first step/NN/step the/DT/the first/JJ/first statement/NN/statement and/CC/and fill/NNP/fill. so/RB/so /,/, it/PRP/it is/VBZ/is says/VBZ/says that/IN/that fill/NN/fill /:/( /:/( refer/NN/refer time/NN/time /:/: 42/CD/42 /:/: 56/CD/56 /CD/) /CD/) the/DT/the table/JJ/table must/NN/must contain/NN/contain as/IN/as 0/-NONE-/0 /,/, if/IN/if k/NN/k equals/NNS/equals j/VBP/j plus/RB/plus 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is 1/CD/1 1/CD/1. so/RB/so /,/, this/DT/this will/MD/will be/VB/be the/DT/the entry/NN/entry 1/CD/1 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is not/RB/not of/IN/of interest/NNP/interest. so/RB/so /,/, if/IN/if k/NN/k is/VBZ/is equal/JJ/equal to/TO/to j/VB/j plus/RB/plus 1/CD/1. so/RB/so /,/, this/DT/this entry/NN/entry is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a 0/CD/0. this/DT/this is/VBZ/is where/WRB/where k/NN/k equals/NNS/equals j/VBP/j plus/RB/plus 1/CD/1. but/CC/but /,/, that/IN/that is/VBZ/is not/RB/not the/DT/the only/JJ/only entry/NNP/entry. in/IN/in fact/NN/fact /,/, another/DT/another entry/NN/entry /,/, which/WDT/which will/MD/will be/VB/be 0/CD/0. because/IN/because /,/, of/IN/of this/DT/this will/MD/will be/VB/be this/DT/this entry/NN/entry and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, these/DT/these are/VBP/are simply/RB/simply entries/NNS/entries above/IN/above the/DT/the mean/JJ/mean diagonal/NNP/diagonal. so/RB/so /,/, this/DT/this could/MD/could be/VB/be the/DT/the mean/JJ/mean diagonal/NNP/diagonal. and/CC/and all/DT/all the/DT/the entries/NNS/entries above/IN/above the/DT/the mean/JJ/mean diagonal/JJ/diagonal will/MD/will be/VB/be 0/-NONE-/0 ?/./? s/NNP/s. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is going/VBG/going to/TO/to be/VB/be define/NN/define for/IN/for j/NN/j less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to k/NNP/k. so/RB/so /,/, in/IN/in fact/NN/fact it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be defined/VBN/defined on/IN/on this/DT/this side/NNP/side. this/DT/this side/NN/side is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be use/NN/use /,/, this/DT/this side/NN/side and/CC/and the/DT/the diagonal/JJ/diagonal are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be used/VBN/used at/IN/at all/NNP/all. now/RB/now /,/, let/VB/let us/PRP/us examine/VB/examine how/WRB/how does/VBZ/does fill/NN/fill /:/( /:/( refer/NN/refer time/NN/time /:/: 44/CD/44 /:/: 01/CD/01 /CD/) /CD/) a/DT/a particular/JJ/particular entry/NN/entry j/NN/j k/NNP/k. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is my/PRP$/my j/NN/j over/IN/over here/NNP/here. and/CC/and so/RB/so this/DT/this is/VBZ/is the/DT/the entry/NN/entry that/IN/that i/PRP/i want/VBP/want to/TO/to fill/NNP/fill. and/CC/and this/DT/this is/VBZ/is the/DT/the index/NN/index k/NNP/k. so/RB/so /,/, the/DT/the jth/NN/jth row/NN/row kth/NN/kth column/NN/column this/DT/this is/VBZ/is the/DT/the entry/NN/entry that/IN/that i/PRP/i want/VBP/want to/TO/to fill/NNP/fill. how/WRB/how does/VBZ/does filled/VBN/filled /-NONE-/( /:/( refer/NN/refer time/NN/time /:/: 44/CD/44 /:/: 21/CD/21 /CD/) /CD/) fill/NN/fill this/DT/this entry/NNP/entry. so/RB/so /,/, it/PRP/it considers/VBZ/considers the/DT/the values/NNS/values of/IN/of t/NN/t j/NN/j i/PRP/i /,/, where/WRB/where j/NN/j ranges/NNS/ranges sorry/VBP/sorry t/NN/t j/NN/j i/PRP/i where/WRB/where i/PRP/i ranges/VBZ/ranges from/IN/from j/NN/j plus/CC/plus 1/CD/1 to/TO/to k/NNP/k. so/RB/so /,/, these/DT/these are/VBP/are simply/RB/simply table/JJ/table entries/NNS/entries in/IN/in this/DT/this region/NNP/region. so/RB/so /,/, let/VB/let me/PRP/me put/VB/put them/PRP/them in/IN/in a/DT/a different/JJ/different color/NN/color /,/, so/RB/so it/PRP/it so/RB/so these/DT/these are/VBP/are the/DT/the table/JJ/table entries/NNP/entries. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the table/JJ/table entries/NNS/entries /,/, which/WDT/which are/VBP/are needed/VBN/needed for/IN/for updating/NN/updating this/NNP/this. so/RB/so /,/, let/VB/let me/PRP/me put/VB/put an/DT/an arrow/NN/arrow going/VBG/going from/IN/from here/RB/here to/TO/to here/NNP/here. but/CC/but /,/, it/PRP/it also/RB/also uses/VBZ/uses table/JJ/table entries/NNS/entries i/PRP/i k/VBP/k /:/( /:/( refer/NN/refer time/NN/time /:/: 44/CD/44 /:/: 53/CD/53 /CD/) /CD/) again/RB/again i/PRP/i going/VBG/going from/IN/from j/NN/j plus/CC/plus 1/CD/1 to/TO/to k/VB/k minus/NN/minus 1/CD/1. so/RB/so /,/, which/WDT/which are/VBP/are these/DT/these entries/NNP/entries. well/RB/well /,/, these/DT/these are/VBP/are the/DT/the entries/NNS/entries /,/, which/WDT/which are/VBP/are below/IN/below over/IN/over here/NNP/here. so/RB/so /,/, the/DT/the entry/NN/entry is/VBZ/is above/IN/above the/DT/the main/JJ/main diagonal/NNP/diagonal. but/CC/but /,/, below/IN/below this/DT/this element/NN/element are/VBP/are also/RB/also going/VBG/going to/TO/to be/VB/be used/NNP/used. so/RB/so /,/, if/IN/if these/DT/these entries/NNS/entries have/VBP/have been/VBN/been have/VBP/have already/RB/already been/VBN/been defined/NNP/defined. and/CC/and these/DT/these entries/NNS/entries have/VBP/have already/RB/already been/VBN/been defined/NNP/defined. then/RB/then fill/VB/fill can/MD/can fill/VB/fill in/IN/in this/DT/this table/NN/table entry/NNP/entry. so/RB/so /,/, then/RB/then the/DT/the entire/JJ/entire procedure/NN/procedure is/VBZ/is extremely/RB/extremely simple/NNP/simple. what/WP/what is/VBZ/is that/IN/that we/PRP/we have/VBP/have to/TO/to do/NNP/do. we/PRP/we must/MD/must ensure/VB/ensure that/IN/that when/WRB/when it/PRP/it comes/VBZ/comes time/NN/time to/TO/to fill/VB/fill this/DT/this entry/NNP/entry. all/DT/all these/DT/these entries/NNS/entries must/MD/must already/RB/already have/VB/have been/VBN/been filled/NNP/filled. so/RB/so /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 45/CD/45 /:/: 41/CD/41 /CD/) /CD/) that/WDT/that such/JJ/such as/IN/as is/VBZ/is a/DT/a very/RB/very simple/JJ/simple order/NN/order in/IN/in which/WDT/which we/PRP/we can/MD/can fill/VB/fill these/DT/these entries/NNP/entries. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 47/CD/47 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my table/NNP/table. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the main/JJ/main diagonal/NNP/diagonal. so/RB/so /,/, this/DT/this diagonal/JJ/diagonal i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to do/VB/do anything/NN/anything with/NNP/with. but/CC/but /,/, the/DT/the entry/NN/entry is/VBZ/is above/IN/above that/DT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to mark/VB/mark as/IN/as 0/-NONE-/0 ?/./? s/NNP/s. then/RB/then /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start filling/NN/filling entries/NNP/entries. but/CC/but /,/, i/PRP/i should/MD/should fill/VB/fill entries/NNS/entries such/JJ/such that/IN/that if/IN/if i/PRP/i want/VBP/want to/TO/to fill/VB/fill this/DT/this entry/NNP/entry. then/RB/then /,/, everything/NN/everything on/IN/on this/DT/this side/NN/side and/CC/and everything/NN/everything on/IN/on this/DT/this side/NN/side is/VBZ/is already/RB/already filled/NNP/filled. so/RB/so /,/, next/JJ/next i/PRP/i can/MD/can fill/VB/fill this/DT/this entry/NN/entry maybe/NNP/maybe. so/RB/so /,/, i/PRP/i will/MD/will put/VB/put a/DT/a 1/CD/1 over/IN/over here/NNP/here. after/IN/after that/DT/that /,/, i/PRP/i can/MD/can fill/VB/fill this/DT/this entry/NNP/entry. i/PRP/i can/MD/can fill/VB/fill this/DT/this entry/NNP/entry. then/RB/then i/PRP/i can/MD/can fill/VB/fill this/DT/this entry/NN/entry /,/, this/DT/this entry/NN/entry /,/, this/DT/this entry/NN/entry /,/, 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 /,/, 10/CD/10. in/IN/in general/JJ/general /,/, i/PRP/i can/MD/can let/VB/let me/PRP/me use/VB/use another/DT/another picture/NNP/picture. i/PRP/i can/MD/can take/VB/take my/PRP$/my matrix/NNP/matrix. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 39/CD/39 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my matrix/NN/matrix /,/, this/DT/this is/VBZ/is my/PRP$/my table/NNP/table. i/PRP/i will/MD/will filled/VB/filled the/DT/the second/JJ/second diagonal/JJ/diagonal with/IN/with 0/-NONE-/0 ?/./? s/NNP/s. then/RB/then /,/, i/PRP/i will/MD/will fill/VB/fill the/DT/the entries/NNS/entries /,/, the/DT/the rest/NN/rest of/IN/of the/DT/the entries/NNS/entries in/IN/in this/DT/this order/NNP/order. first/RB/first /,/, i/PRP/i will/MD/will fill/VB/fill these/DT/these /,/, then/RB/then i/PRP/i will/MD/will fill/VB/fill these/DT/these /,/, then/RB/then i/PRP/i will/MD/will fill/VB/fill these/DT/these /,/, then/RB/then i/PRP/i will/MD/will fill/VB/fill these/DT/these and/CC/and so/RB/so on/NNP/on. the/DT/the point/NN/point is/VBZ/is that/IN/that /,/, if/IN/if i/PRP/i have/VBP/have fill/RB/fill entries/NNS/entries in/IN/in this/DT/this order/NNP/order. whenever/NN/whenever /,/, it/PRP/it comes/VBZ/comes time/NN/time to/TO/to fill/VB/fill say/NN/say an/DT/an intersome/NN/intersome where/WRB/where over/IN/over here/NNP/here. i/PRP/i would/MD/would already/RB/already have/VB/have filled/VBN/filled these/DT/these entries/NNS/entries and/CC/and these/DT/these entries/NNS/entries on/IN/on which/WDT/which this/DT/this entry/NN/entry depends/NNP/depends. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the key/JJ/key idea/NNP/idea. so/RB/so /,/, if/IN/if these/DT/these entries/NNS/entries are/VBP/are already/RB/already filled/VBN/filled then/RB/then you/PRP/you can/MD/can fill/VB/fill this/DT/this entries/NNP/entries. so/RB/so /,/, the/DT/the only/JJ/only thing/NN/thing that/WDT/that remains/VBZ/remains to/TO/to be/VB/be done/VBN/done now/RB/now is/VBZ/is to/TO/to figure/VB/figure out/RP/out /,/, how/WRB/how much/JJ/much time/NN/time the/DT/the whole/JJ/whole thing/NN/thing /:/( /:/( refer/NN/refer time/NN/time /:/: 47/CD/47 /:/: 28/CD/28 /CD/) /CD/) will/MD/will take/NNP/take. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 32/CD/32 /CD/) so/RB/so /,/, the/DT/the total/JJ/total time/NN/time taken/VBN/taken is/VBZ/is clearly/RB/clearly equal/JJ/equal to/TO/to number/NN/number of/IN/of entries/NNS/entries in/IN/in the/DT/the table/NNP/table. times/VBZ/times time/NN/time to/TO/to fill/VB/fill 1/CD/1 entry/NNP/entry. so/RB/so /,/, this/DT/this is/VBZ/is already/RB/already telling/VBG/telling us/PRP/us /,/, everything/NN/everything that/IN/that we/PRP/we want/VBP/want to/TO/to know/NNP/know. how/WRB/how many/JJ/many entries/NNS/entries do/VBP/do you/PRP/you have/VB/have in/IN/in the/DT/the table/NNP/table. well/RB/well /,/, t/NN/t has/VBZ/has all/DT/all this/DT/this entire/JJ/entire range/NN/range j/NN/j k/NN/k /,/, where/WRB/where j/NN/j k/NN/k lie/NN/lie between/IN/between 0/-NONE-/0 and/CC/and n/NN/n so/IN/so /,/, we/PRP/we have/VBP/have a/DT/a two/CD/two dimensional/JJ/dimensional table/JJ/table with/IN/with n/NN/n rows/NNS/rows and/CC/and n/NN/n columns/NNP/columns. we/PRP/we are/VBP/are only/RB/only using/VBG/using half/NN/half of/IN/of it/NNP/it. but/CC/but /,/, clearly/RB/clearly the/DT/the number/NN/number of/IN/of entries/NNS/entries is/VBZ/is therefore/RB/therefore /,/, o/RB/o of/IN/of n/NN/n squared/NNP/squared. what/WP/what about/IN/about the/DT/the time/NN/time to/TO/to fill/VB/fill a/DT/a single/JJ/single entry/NNP/entry. so/RB/so /,/, t/NN/t j/NN/j i/PRP/i and/CC/and t/VB/t i/PRP/i k/VBP/k are/VBP/are already/RB/already known/VBN/known /,/, when/WRB/when we/PRP/we /VBP/( /:/( refer/NN/refer time/NN/time /:/: 48/CD/48 /:/: 29/CD/29 /CD/) /CD/) are/VBP/are going/VBG/going to/TO/to have/VB/have to/TO/to compute/VB/compute this/DT/this product/NNP/product. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do these/DT/these additions/NNP/additions. but/CC/but /,/, and/CC/and this/DT/this has/VBZ/has to/TO/to be/VB/be done/VBN/done these/DT/these many/JJ/many times/NNS/times /,/, so/RB/so far/RB/far every/DT/every value/NN/value between/IN/between j/NN/j plus/CC/plus 1/CD/1 and/CC/and k/NN/k minus/NN/minus 1/CD/1. this/DT/this range/NN/range can/MD/can be/VB/be as/RB/as large/JJ/large as/IN/as n/NNP/n. and/CC/and therefore/RB/therefore /,/, the/DT/the time/NN/time to/TO/to fill/VB/fill a/DT/a single/JJ/single entry/NN/entry is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n again/NNP/again. so/RB/so /,/, the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n cube/NNP/cube. so/RB/so /,/, that/IN/that really/RB/really /:/( /:/( refer/NN/refer time/NN/time /:/: 48/CD/48 /:/: 58/CD/58 /CD/) /CD/) finishes/NNS/finishes the/DT/the entire/JJ/entire algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 02/CD/02 /CD/) so/RB/so /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is n/VBN/n square/JJ/square times/NNS/times n/VBP/n which/WDT/which is/VBZ/is equal/JJ/equal to/TO/to o/VB/o of/IN/of n/NN/n cube/NNP/cube. now/RB/now /,/, i/PRP/i just/RB/just want/VBP/want to/TO/to make/VB/make one/CD/one more/JJR/more comment/NNP/comment. in/IN/in the/DT/the comment/NN/comment is/VBZ/is about/IN/about this/DT/this simplification/NN/simplification that/IN/that we/PRP/we tell/NNP/tell. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to compute/VB/compute the/DT/the exact/JJ/exact tree/NN/tree that/WDT/that we/PRP/we wanted/NNP/wanted. but/CC/but /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to compute/VB/compute /,/, the/DT/the cost/NN/cost of/IN/of the/DT/the optimal/JJ/optimal tree/NNP/tree. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to leave/VB/leave you/PRP/you with/IN/with an/DT/an exercise/NN/exercise /,/, which/WDT/which is/VBZ/is how/WRB/how can/MD/can you/PRP/you modify/VB/modify this/DT/this algorithm/NNP/algorithm. so/RB/so /,/, that/IN/that you/PRP/you actually/RB/actually /,/, calculate/JJ/calculate the/DT/the tree/NN/tree and/CC/and not/RB/not just/RB/just the/DT/the cost/NNP/cost. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 44/CD/44 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is exercise/NNP/exercise. so/RB/so in/IN/in fact/NN/fact /,/, the/DT/the idea/NN/idea is/VBZ/is something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, i/PRP/i am/VBP/am giving/VBG/giving your/PRP$/your hint/NN/hint over/IN/over here/NNP/here. in/IN/in each/DT/each table/NN/table entry/NN/entry /,/, store/NN/store the/DT/the root/NN/root node/NN/node of/IN/of the/DT/the tree/NN/tree along/IN/along with/IN/with the/DT/the cost/NN/cost of/IN/of that/NNP/that. the/DT/the root/NN/root node/NN/node will/MD/will contains/VB/contains pointers/NNS/pointers to/TO/to the/DT/the left/NN/left and/CC/and right/RB/right sub/VB/sub trees/NNP/trees. now/RB/now /,/, if/IN/if you/PRP/you go/VBP/go and/CC/and ask/NN/ask the/DT/the question/NN/question /,/, how/WRB/how do/VBP/do i/PRP/i update/VB/update a/DT/a single/JJ/single element/NN/element of/IN/of the/DT/the table/NNP/table. you/PRP/you will/MD/will have/VB/have to/TO/to construct/VB/construct the/DT/the root/NN/root node/NN/node as/IN/as well/RB/well as/IN/as these/DT/these pointers/NNS/pointers and/CC/and as/IN/as well/RB/well as/IN/as these/DT/these cost/NNP/cost. but/CC/but /,/, you/PRP/you will/MD/will see/VB/see that/IN/that each/DT/each filling/VBG/filling now/RB/now will/MD/will still/RB/still be/VB/be possible/JJ/possible in/IN/in o/NN/o of/IN/of n/NN/n time/NNP/time. and/CC/and since/IN/since the/DT/the number/NN/number of/IN/of entries/NNS/entries are/VBP/are o/RB/o n/JJ/n squared/VBN/squared the/DT/the total/JJ/total time/NN/time should/MD/should still/RB/still be/VB/be o/RB/o of/IN/of n/NN/n cube/NNP/cube. so/RB/so /,/, that/IN/that concludes/NNS/concludes this/DT/this lecture/NNP/lecture. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 21/CD/21 scheduling/VBG/scheduling with/IN/with startup/NN/startup and/CC/and holding/VBG/holding costs/NNS/costs welcome/VB/welcome to/TO/to another/DT/another lecture/NN/lecture on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. we/PRP/we will/MD/will see/VB/see 1/CD/1 more/JJR/more problem/NN/problem which/WDT/which can/MD/can be/VB/be solved/VBN/solved nicely/RB/nicely using/VBG/using dynamic/JJ/dynamic programming/NN/programming today/NNP/today. the/DT/the problem/NN/problem we/PRP/we are/VBP/are going/VBG/going to/TO/to solve/VB/solve is/VBZ/is scheduling/VBG/scheduling with/IN/with startup/NN/startup and/CC/and holding/VBG/holding costs/NNP/costs. let/NN/let me/PRP/me define/VBP/define this/DT/this problem/NN/problem for/IN/for you/NNP/you. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 10/CD/10 /CD/) so/RB/so /,/, in/IN/in this/DT/this problem/NN/problem we/PRP/we are/VBP/are given/VBN/given a/DT/a machine/NN/machine which/WDT/which has/VBZ/has the/DT/the capacity/NN/capacity of/IN/of producing/VBG/producing 1/CD/1 unit/NN/unit of/IN/of something/NN/something whatever/RB/whatever it/PRP/it is/VBZ/is per/IN/per day/NNP/day. however/RB/however /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to start/VB/start a/DT/a machine/NN/machine a/DT/a machine/NN/machine on/IN/on some/DT/some day/NN/day which/WDT/which is/VBZ/is so/RB/so /,/, what/WDT/what i/PRP/i mean/VBP/mean by/IN/by that/DT/that is/VBZ/is that/IN/that if/IN/if the/DT/the machine/NN/machine was/VBD/was not/RB/not on/IN/on today/NNP/today. and/CC/and i/PRP/i want/VBP/want to/TO/to get/VB/get it/PRP/it working/VBG/working today/NN/today then/RB/then i/PRP/i have/VBP/have to/TO/to pay/VB/pay a/DT/a startup/NN/startup cost/NN/cost and/CC/and that/IN/that startup/NN/startup cost/NN/cost is/VBZ/is some/DT/some s/NNS/s units/NNS/units which/WDT/which is/VBZ/is defined/VBN/defined as/RB/as the/DT/the part/NN/part of/IN/of the/DT/the input/NNP/input. clarifying/NN/clarifying again/RB/again if/IN/if the/DT/the machine/NN/machine was/VBD/was on/IN/on yesterday/NN/yesterday then/RB/then i/PRP/i do/VBP/do not/RB/not pay/VB/pay a/DT/a startup/NN/startup cost/NN/cost today/NN/today if/IN/if i/PRP/i want/VBP/want to/TO/to keep/VB/keep the/DT/the machine/NN/machine working/NNP/working. if/IN/if the/DT/the machine/NN/machine was/VBD/was off/JJ/off yesterday/NN/yesterday /,/, but/CC/but i/PRP/i want/VBP/want to/TO/to start/VB/start it/PRP/it today/NN/today then/RB/then i/PRP/i will/MD/will have/VB/have to/TO/to pay/VB/pay a/DT/a startup/NN/startup cost/NNP/cost. we/PRP/we also/RB/also have/VBP/have a/DT/a warehouse/NN/warehouse to/TO/to hold/VB/hold units/NNS/units which/WDT/which have/VBP/have been/VBN/been produced/NNP/produced. so/RB/so /,/, if/IN/if i/PRP/i produce/VBP/produce something/NN/something today/NN/today and/CC/and it/PRP/it is/VBZ/is not/RB/not to/TO/to be/VB/be delivered/VBN/delivered today/NN/today itself/PRP/itself then/RB/then it/PRP/it goes/VBZ/goes to/TO/to a/DT/a warehouse/NNP/warehouse. but/CC/but of/IN/of course/NN/course /,/, if/IN/if i/PRP/i place/VBP/place something/NN/something in/IN/in the/DT/the warehouse/NN/warehouse i/PRP/i have/VBP/have to/TO/to pay/VB/pay some/DT/some rent/NNP/rent. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say that/IN/that we/PRP/we will/MD/will call/VB/call that/IN/that the/DT/the holding/VBG/holding cost/NN/cost and/CC/and that/IN/that holding/VBG/holding cost/NN/cost will/MD/will be/VB/be some/DT/some h/NN/h rupees/NNS/rupees per/IN/per night/NNP/night. the/DT/the main/JJ/main input/NN/input to/TO/to the/DT/the problem/NN/problem consists/VBZ/consists of/IN/of a/DT/a daily/JJ/daily demand/NN/demand for/IN/for n/NN/n days/NNP/days. so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given the/DT/the vector/NN/vector d/NN/d of/IN/of 1/CD/1 through/IN/through n/NN/n in/IN/in which/WDT/which d/NN/d of/IN/of i/PRP/i represents/VBZ/represents the/DT/the demand/NN/demand for/IN/for the/DT/the ith/NN/ith day/NNP/day. we/PRP/we are/VBP/are also/RB/also given/VBN/given the/DT/the startup/NN/startup cost/NN/cost s/NNS/s the/DT/the value/NN/value of/IN/of s/NNS/s and/CC/and the/DT/the value/NN/value of/IN/of h/NN/h the/DT/the holding/VBG/holding cost/NN/cost and/CC/and what/WP/what we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to produce/VB/produce is/VBZ/is a/DT/a schedule/NNP/schedule. so/RB/so /,/, we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to produce/VB/produce a/DT/a vector/NN/vector p/NN/p of/IN/of 1/CD/1 through/IN/through n/NN/n in/IN/in which/WDT/which p/NN/p of/IN/of i/PRP/i denotes/VBZ/denotes whether/IN/whether or/CC/or not/RB/not the/DT/the machine/NN/machine is/VBZ/is to/TO/to be/VB/be kept/VBN/kept on/IN/on the/DT/the ith/NN/ith day/NN/day or/CC/or in/IN/in other/JJ/other words/NNS/words whether/IN/whether the/DT/the machine/NN/machine should/MD/should be/VB/be producing/VBG/producing anything/NN/anything on/IN/on the/DT/the ith/NN/ith day/NNP/day. so/RB/so /,/, the/DT/the final/JJ/final requirement/NN/requirement which/WDT/which is/VBZ/is which/WDT/which might/MD/might be/VB/be obvious/JJ/obvious perhaps/RB/perhaps /,/, but/CC/but let/VB/let me/PRP/me state/VB/state it/PRP/it nevertheless/RB/nevertheless is/VBZ/is at/IN/at the/DT/the end/NN/end of/IN/of n/NN/n days/NNS/days all/DT/all the/DT/the units/NNS/units that/WDT/that have/VBP/have been/VBN/been manufactured/VBN/manufactured must/MD/must have/VB/have been/VBN/been delivered/NNP/delivered. so/RB/so /,/, we/PRP/we can/MD/can not/RB/not be/VB/be left/VBN/left with/IN/with any/DT/any inventory/NN/inventory at/IN/at the/DT/the end/NN/end of/IN/of n/NN/n days/NNS/days and/CC/and of/IN/of course/NN/course /,/, it/PRP/it is/VBZ/is possible/JJ/possible that/IN/that the/DT/the demand/NN/demand that/IN/that is/VBZ/is being/VBG/being given/VBN/given to/TO/to us/PRP/us is/VBZ/is just/RB/just not/RB/not satisfiable/NNP/satisfiable. because/IN/because after/IN/after all/DT/all our/PRP$/our machine/NN/machine can/MD/can produce/VB/produce only/RB/only 1/CD/1 unit/NN/unit per/IN/per day/NNP/day. so/RB/so /,/, in/IN/in n/NN/n days/NNS/days the/DT/the machine/NN/machine can/MD/can produce/VB/produce n/NN/n units/NNP/units. so/RB/so /,/, certainly/RB/certainly if/IN/if the/DT/the total/JJ/total demand/NN/demand is/VBZ/is more/RBR/more than/IN/than n/NN/n we/PRP/we will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to meet/NNP/meet. there/RB/there will/MD/will be/VB/be other/JJ/other conditions/NNS/conditions under/IN/under which/WDT/which the/DT/the demand/NN/demand could/MD/could not/RB/not be/VB/be met/VBN/met /,/, but/CC/but whatever/RB/whatever these/DT/these conditions/NNS/conditions are/VBP/are our/PRP$/our algorithm/NN/algorithm must/MD/must report/VB/report if/IN/if the/DT/the given/VBN/given demand/NN/demand can/MD/can not/RB/not be/VB/be met/NNP/met. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 01/CD/01 /CD/) so/RB/so /,/, let/VB/let me/PRP/me now/RB/now take/VBP/take an/DT/an example/NN/example to/TO/to illustrate/VB/illustrate this/DT/this problem/NN/problem better/NNP/better. so/RB/so /,/, in/IN/in this/DT/this example/NN/example this/DT/this is/VBZ/is the/DT/the demand/NN/demand vector/NN/vector that/WDT/that is/VBZ/is given/VBN/given to/TO/to us/NNP/us. so/RB/so /,/, what/WDT/what this/DT/this means/VBZ/means is/VBZ/is on/IN/on day/NN/day 0/-NONE-/0 /,/, day/NN/day 1/CD/1 nothing/NN/nothing gets/NNS/gets to/TO/to be/VB/be delivered/VBN/delivered nothing/NN/nothing needs/VBZ/needs to/TO/to be/VB/be delivered/VBN/delivered /,/, day/NN/day 2/CD/2 nothing/NN/nothing needs/VBZ/needs to/TO/to be/VB/be delivered/NNP/delivered. on/IN/on day/NN/day 3/CD/3 there/EX/there is/VBZ/is a/DT/a order/NN/order of/IN/of 2/CD/2 units/NNS/units which/WDT/which has/VBZ/has to/TO/to be/VB/be delivered/VBN/delivered day/NN/day 4/CD/4 /,/, day/NN/day 5/CD/5 /,/, day/NN/day 6/CD/6 nothing/NN/nothing has/VBZ/has to/TO/to be/VB/be delivered/VBN/delivered and/CC/and on/IN/on day/NN/day 7/CD/7 there/EX/there is/VBZ/is an/DT/an order/NN/order of/IN/of 3/CD/3 units/NNP/units. the/DT/the holding/VBG/holding cost/NN/cost that/IN/that is/VBZ/is the/DT/the cost/NN/cost of/IN/of storing/VBG/storing 1/CD/1 unit/NN/unit in/IN/in our/PRP$/our warehouse/NN/warehouse is/VBZ/is 1/CD/1. so/RB/so /,/, it/PRP/it is/VBZ/is 1/CD/1 per/IN/per unit/NN/unit and/CC/and the/DT/the startup/NN/startup cost/NN/cost is/VBZ/is five/NNP/five. so/RB/so /,/, here/RB/here is/VBZ/is 1/CD/1 possible/JJ/possible schedule/NN/schedule or/CC/or 1/CD/1 possible/JJ/possible production/NN/production plan/NN/plan which/WDT/which will/MD/will meet/VB/meet this/NNP/this. so/RB/so /,/, i/PRP/i have/VBP/have shown/VBN/shown this/DT/this in/IN/in a/DT/a tabular/JJ/tabular form/NN/form over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we have/VBP/have days/NNS/days on/IN/on the/DT/the x/NN/x axis/NNP/axis. so/RB/so /,/, 1/CD/1 through/IN/through 7/CD/7 since/IN/since there/EX/there are/VBP/are 7/CD/7 days/NNS/days the/DT/the demand/NN/demand is/VBZ/is given/VBN/given as/RB/as 7/CD/7 days/NNS/days on/IN/on the/DT/the third/JJ/third day/NN/day there/RB/there is/VBZ/is a/DT/a demand/NN/demand of/IN/of 2/CD/2 as/IN/as specified/VBN/specified over/IN/over here/NNP/here. and/CC/and on/IN/on the/DT/the seventh/NN/seventh day/NN/day also/RB/also there/RB/there is/VBZ/is demand/NN/demand and/CC/and in/IN/in this/DT/this case/NN/case the/DT/the demand/NN/demand is/VBZ/is 3/CD/3. here/RB/here is/VBZ/is a/DT/a production/NN/production plan/NN/plan which/WDT/which will/MD/will meet/VB/meet this/DT/this demand/NNP/demand. so/RB/so /,/, notice/NN/notice that/IN/that on/IN/on this/DT/this day/NN/day 2/CD/2 units/NNS/units have/VBP/have to/TO/to be/VB/be delivered/VBN/delivered and/CC/and on/IN/on any/DT/any day/NN/day we/PRP/we can/MD/can deliver/VB/deliver only/RB/only 1/CD/1 unit/NNP/unit. so/RB/so /,/, which/WDT/which means/VBZ/means we/PRP/we have/VBP/have to/TO/to start/VB/start producing/VBG/producing earlier/NNP/earlier. so/RB/so /,/, say/VB/say in/IN/in this/DT/this case/NN/case we/PRP/we have/VBP/have to/TO/to start/VB/start producing/VBG/producing on/IN/on day/NN/day 2/CD/2. so/RB/so /,/, we/PRP/we will/MD/will produce/VB/produce on/IN/on these/DT/these 2/CD/2 days/NNS/days and/CC/and then/RB/then for/IN/for to/TO/to meet/VB/meet for/IN/for this/DT/this demand/NN/demand we/PRP/we will/MD/will produce/VB/produce on/IN/on these/DT/these 3/CD/3 days/NNS/days machine/NN/machine will/MD/will be/VB/be idle/JJ/idle on/IN/on this/DT/this day/NN/day and/CC/and not/RB/not this/DT/this day/NNP/day. since/IN/since the/DT/the machine/NN/machine is/VBZ/is going/VBG/going to/TO/to start/VB/start having/VBG/having the/DT/the idle/NN/idle on/IN/on the/DT/the previous/JJ/previous day/NN/day there/RB/there will/MD/will be/VB/be a/DT/a startup/NN/startup cost/NN/cost on/IN/on day/NN/day 2/CD/2. so/RB/so /,/, this/DT/this will/MD/will be/VB/be a/DT/a cost/NN/cost of/IN/of 5/CD/5 similarly/RB/similarly on/IN/on this/DT/this day/NN/day the/DT/the machine/NN/machine will/MD/will have/VB/have to/TO/to start/VB/start again/RB/again been/VBN/been idle/JJ/idle on/IN/on this/DT/this day/NNP/day. so/RB/so /,/, there/EX/there will/MD/will be/VB/be another/DT/another startup/NN/startup cost/NN/cost on/IN/on this/DT/this day/NN/day /,/, day/NN/day 2/CD/2 whatever/NN/whatever has/VBZ/has been/VBN/been produced/VBN/produced is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be delivered/NNP/delivered. it/PRP/it is/VBZ/is only/RB/only going/VBG/going to/TO/to be/VB/be delivered/VBN/delivered the/DT/the next/JJ/next day/NNP/day. so/RB/so /,/, it/PRP/it will/MD/will have/VB/have to/TO/to be/VB/be held/VBN/held in/IN/in the/DT/the warehouse/NN/warehouse and/NNP/and. so/RB/so /,/, there/EX/there will/MD/will be/VB/be a/DT/a inventory/NN/inventory cost/NN/cost of/IN/of 1/CD/1. similarly/RB/similarly /,/, on/IN/on this/DT/this day/NN/day whatever/NN/whatever has/VBZ/has been/VBN/been produced/VBN/produced will/MD/will have/VB/have to/TO/to be/VB/be held/VBN/held in/IN/in the/DT/the warehouse/NN/warehouse whatever/NN/whatever is/VBZ/is been/VBN/been produced/VBN/produced in/IN/in the/DT/the warehouse/NN/warehouse on/IN/on this/DT/this day/NN/day will/MD/will also/RB/also be/VB/be held/NNP/held. so/RB/so /,/, at/IN/at this/DT/this point/NN/point there/RB/there will/MD/will be/VB/be 2/CD/2 units/NNS/units in/IN/in the/DT/the warehouse/NNP/warehouse. so/RB/so /,/, holding/VBG/holding cost/NN/cost of/IN/of 2/CD/2 will/MD/will be/VB/be incurred/VBN/incurred here/RB/here this/DT/this is/VBZ/is of/IN/of course/NN/course /,/, not/RB/not the/DT/the only/JJ/only plan/NN/plan here/RB/here is/VBZ/is another/NNP/another. so/RB/so /,/, in/IN/in this/DT/this case/NN/case what/WP/what we/PRP/we have/VBP/have done/VBN/done is/VBZ/is instead/RB/instead of/IN/of keeping/VBG/keeping a/DT/a gap/NN/gap on/IN/on day/NN/day 4/CD/4. we/PRP/we have/VBP/have begun/VBN/begun the/DT/the production/NN/production earlier/JJR/earlier /,/, but/CC/but notice/NN/notice if/IN/if we/PRP/we begin/VBP/begin the/DT/the production/NN/production earlier/JJR/earlier then/RB/then we/PRP/we have/VBP/have our/PRP$/our holding/VBG/holding cost/NN/cost here/RB/here as/IN/as well/NNP/well. so/RB/so /,/, infact/NN/infact /,/, the/DT/the 4/CD/4 dates/NNS/dates we/PRP/we have/VBP/have to/TO/to hold/VB/hold in/IN/in our/PRP$/our warehouse/NN/warehouse whatever/NN/whatever unit/NN/unit has/VBZ/has been/VBN/been produced/NNP/produced. on/IN/on the/DT/the fifth/JJ/fifth day/NN/day whatever/NN/whatever has/VBZ/has been/VBN/been produced/VBN/produced has/VBZ/has also/RB/also to/TO/to be/VB/be held/VBN/held in/IN/in addition/NN/addition to/TO/to whatever/VB/whatever have/VBP/have produced/VBN/produced yesterday/NN/yesterday the/DT/the day/NN/day before/IN/before that/NNP/that. and/CC/and finally/RB/finally /,/, whatever/RB/whatever is/VBZ/is produced/VBN/produced in/IN/in the/DT/the sixth/JJ/sixth day/NN/day there/RB/there have/VBP/have to/TO/to be/VB/be held/VBN/held and/CC/and all/DT/all these/DT/these 3/CD/3 units/NNS/units will/MD/will have/VB/have to/TO/to be/VB/be delivered/VBN/delivered on/IN/on the/DT/the seventh/NN/seventh day/NN/day which/WDT/which of/IN/of these/DT/these is/VBZ/is better/NNP/better. well/RB/well /,/, let/VB/let us/PRP/us calculate/VB/calculate the/DT/the time/NN/time taken/VBN/taken and/CC/and the/DT/the cost/NN/cost of/IN/of each/DT/each the/DT/the cost/NN/cost of/IN/of the/DT/the first/JJ/first plan/NN/plan that/WDT/that is/VBZ/is simply/RB/simply the/DT/the startup/NN/startup cost/NN/cost which/WDT/which is/VBZ/is 5/CD/5 plus/NN/plus 5/CD/5 here/RB/here plus/CC/plus 1/CD/1 plus/NNS/plus 2/CD/2. so/RB/so /,/, this/DT/this cost/NN/cost for/IN/for the/DT/the first/JJ/first plan/NN/plan is/VBZ/is 14/CD/14 the/DT/the cost/NN/cost for/IN/for this/DT/this plan/NN/plan is/VBZ/is 5/CD/5 startup/NN/startup 5/CD/5 for/IN/for the/DT/the startups/NNS/startups and/CC/and then/RB/then 1/CD/1 plus/NN/plus 1/CD/1 plus/CC/plus 2/CD/2 plus/NNS/plus 3/CD/3 which/WDT/which is/VBZ/is written/VBN/written over/IN/over here/RB/here and/CC/and this/DT/this adds/VBZ/adds up/RP/up to/TO/to 12/CD/12. so/RB/so /,/, eventually/RB/eventually this/DT/this plan/NN/plan is/VBZ/is better/RBR/better our/PRP$/our question/NN/question in/IN/in general/JJ/general is/VBZ/is going/VBG/going to/TO/to be/VB/be to/TO/to consider/VB/consider all/DT/all such/JJ/such possible/JJ/possible plans/NNS/plans and/CC/and figure/NN/figure out/RP/out which/WDT/which is/VBZ/is the/DT/the best/JJS/best 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 56/CD/56 /CD/) so/RB/so /,/, this/DT/this naturally/RB/naturally suggests/VBZ/suggests a/DT/a brute/NN/brute force/NN/force algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we will/MD/will generate/VB/generate all/DT/all possible/JJ/possible plan/NN/plan for/IN/for each/DT/each will/MD/will evaluate/VB/evaluate the/DT/the costs/NNS/costs and/CC/and then/RB/then will/MD/will pick/VB/pick the/DT/the best/NNP/best. unfortunately/RB/unfortunately the/DT/the number/NN/number of/IN/of such/JJ/such schedules/NNS/schedules or/CC/or such/JJ/such plans/NNS/plans is/VBZ/is going/VBG/going to/TO/to be/VB/be exponentially/RB/exponentially n/VB/n where/WRB/where n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of days/NNP/days. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be just/RB/just slow/JJ/slow and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to have/VB/have a/DT/a faster/JJR/faster algorithm/NN/algorithm this/DT/this is/VBZ/is where/WRB/where the/DT/the dynamic/JJ/dynamic programming/NN/programming comes/NNP/comes. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a quick/JJ/quick view/NN/view of/IN/of the/DT/the dynamic/JJ/dynamic programming/NNP/programming. so/RB/so /,/, the/DT/the first/JJ/first idea/NN/idea is/VBZ/is to/TO/to find/VB/find some/DT/some kind/NN/kind of/IN/of a/DT/a repulsive/JJ/repulsive solution/NNP/solution. how/WRB/how do/VBP/do we/PRP/we do/VBP/do that/IN/that ?/./? well/RB/well /,/, we/PRP/we cast/VBP/cast our/PRP$/our problem/NN/problem as/IN/as a/DT/a search/NN/search for/IN/for some/DT/some object/NN/object over/IN/over certain/JJ/certain search/NN/search space/NNP/space. so/RB/so /,/, it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to define/VB/define the/DT/the search/NN/search space/NN/space quite/RB/quite clearly/RB/clearly as/IN/as well/RB/well as/IN/as it/PRP/it is/VBZ/is important/JJ/important to/TO/to define/VB/define clearly/RB/clearly an/DT/an objective/NN/objective function/NN/function which/WDT/which is/VBZ/is to/TO/to be/VB/be minimized/VBN/minimized or/CC/or sometimes/RB/sometimes it/PRP/it has/VBZ/has to/TO/to be/VB/be maximized/VBN/maximized whatever/RP/whatever it/PRP/it is/VBZ/is it/PRP/it has/VBZ/has to/TO/to be/VB/be defined/VBN/defined very/RB/very clearly/NNP/clearly. then/RB/then we/PRP/we design/VBP/design a/DT/a algorithm/NN/algorithm which/WDT/which searches/NNS/searches the/DT/the space/NN/space typically/RB/typically the/DT/the algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to partition/NN/partition the/DT/the search/NN/search space/NNP/space. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to say/VB/say let/NN/let us/PRP/us divide/VBP/divide the/DT/the search/NN/search space/NN/space into/IN/into spaces/NNS/spaces and/CC/and each/DT/each space/NN/space or/CC/or each/DT/each part/NN/part of/IN/of the/DT/the space/NN/space each/DT/each subspace/NN/subspace is/VBZ/is going/VBG/going to/TO/to be/VB/be searched/VBN/searched separately/-NONE-/separately. so/RB/so /,/, i/PRP/i search/VBP/search the/DT/the first/JJ/first subspace/NN/subspace and/CC/and i/PRP/i get/VBP/get the/DT/the best/JJS/best solution/NNP/solution. and/CC/and i/PRP/i get/VBP/get the/DT/the optimal/JJ/optimal solution/NN/solution in/IN/in it/PRP/it what/WP/what i/PRP/i mean/VBP/mean by/IN/by that/DT/that is/VBZ/is the/DT/the solution/NN/solution which/WDT/which minimizes/VBZ/minimizes the/DT/the objective/NN/objective function/NNP/function. or/CC/or if/IN/if we/PRP/we want/VBP/want maximization/NN/maximization the/DT/the solution/NN/solution which/WDT/which maximizes/VBZ/maximizes that/IN/that objective/JJ/objective function/NNP/function. so/RB/so /,/, we/PRP/we calculate/VBP/calculate the/DT/the best/JJS/best optimal/JJ/optimal in/IN/in each/DT/each search/NN/search space/NN/space and/CC/and then/RB/then return/VB/return the/DT/the best/JJS/best of/IN/of the/DT/the best/NNP/best. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the general/JJ/general idea/NN/idea of/IN/of getting/VBG/getting a/DT/a recursive/JJ/recursive solution/NN/solution dynamic/JJ/dynamic programming/NN/programming ;/:/; however/RB/however /,/, does/VBZ/does not/RB/not stop/VB/stop at/IN/at this/DT/this point/NNP/point. it/PRP/it proceeds/VBZ/proceeds further/JJ/further in/IN/in the/DT/the following/JJ/following sense/NN/sense the/DT/the idea/NN/idea is/VBZ/is that/IN/that will/MD/will characterize/VB/characterize what/WP/what the/DT/the recursive/JJ/recursive calls/NNS/calls are/VBP/are in/IN/in this/DT/this part/NNP/part. so/RB/so /,/, essentially/RB/essentially we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask the/DT/the question/NN/question what/WP/what is/VBZ/is that/IN/that we/PRP/we are/VBP/are what/WP/what are/VBP/are the/DT/the problems/NNS/problems that/WDT/that we/PRP/we are/VBP/are solving/VBG/solving ?/./? so/RB/so /,/, we/PRP/we essentially/RB/essentially make/VBP/make a/DT/a table/JJ/table of/IN/of all/DT/all those/DT/those problems/NNS/problems and/CC/and in/IN/in each/DT/each cell/NN/cell of/IN/of the/DT/the table/NN/table we/PRP/we would/MD/would like/VB/like to/TO/to store/VB/store the/DT/the results/NNS/results of/IN/of those/NNP/those. so/RB/so /,/, we/PRP/we will/MD/will define/VB/define such/PDT/such a/DT/a table/NN/table then/RB/then will/MD/will define/VB/define a/DT/a procedure/NN/procedure for/IN/for filling/NN/filling table/NN/table entries/NNS/entries and/CC/and this/DT/this procedure/NN/procedure will/MD/will be/VB/be a/DT/a direct/JJ/direct procedure/NN/procedure it/PRP/it would/MD/would not/RB/not very/RB/very particular/JJ/particular and/CC/and it/PRP/it will/MD/will assume/VB/assume that/IN/that if/IN/if i/PRP/i want/VBP/want to/TO/to fill/VB/fill a/DT/a certain/JJ/certain table/NN/table entry/NN/entry i/PRP/i can/MD/can use/VB/use entries/NNS/entries which/WDT/which have/VBP/have been/VBN/been filled/VBN/filled earlier/NNP/earlier. so/RB/so /,/, this/DT/this will/MD/will fill/VB/fill entries/NNS/entries in/IN/in the/DT/the table/NN/table given/VBN/given that/IN/that other/JJ/other entries/NNS/entries have/VBP/have been/VBN/been already/RB/already filled/NNP/filled. so/RB/so /,/, in/IN/in this/DT/this recursive/JJ/recursive procedure/NN/procedure the/DT/the recursive/JJ/recursive procedure/NN/procedure might/MD/might be/VB/be slower/JJR/slower /,/, because/IN/because it/PRP/it might/MD/might calculate/VB/calculate the/DT/the same/JJ/same quantity/NN/quantity several/JJ/several times/NNP/times. whereas/IN/whereas /,/, in/IN/in this/DT/this case/NN/case when/WRB/when we/PRP/we make/VBP/make the/DT/the table/JJ/table we/PRP/we will/MD/will carefully/RB/carefully think/VB/think about/IN/about what/WP/what it/PRP/it is/VBZ/is that/IN/that needs/NNS/needs to/TO/to be/VB/be calculated/VBN/calculated and/CC/and will/MD/will calculate/VB/calculate that/IN/that exactly/RB/exactly once/NNP/once. so/RB/so /,/, that/IN/that is/VBZ/is going/VBG/going to/TO/to give/VB/give us/PRP/us our/PRP$/our efficiency/NNP/efficiency. so/RB/so /,/, what/WDT/what we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do now/RB/now is/VBZ/is apply/RB/apply this/DT/this whole/JJ/whole idea/NN/idea to/TO/to our/PRP$/our given/VBN/given problem/NNP/problem. the/DT/the first/JJ/first step/NN/step in/IN/in this/DT/this is/VBZ/is to/TO/to find/VB/find the/DT/the recursive/JJ/recursive solution/NNP/solution. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to cast/VB/cast our/PRP$/our problem/NN/problem as/IN/as a/DT/a problem/NN/problem in/IN/in the/DT/the recursive/JJ/recursive fashion/NN/fashion our/PRP$/our algorithm/NN/algorithm in/IN/in a/DT/a recursive/JJ/recursive fashion/NNP/fashion. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 19/CD/19 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is how/WRB/how you/PRP/you might/MD/might think/VB/think of/IN/of a/DT/a recursive/JJ/recursive algorithm/NN/algorithm for/IN/for our/PRP$/our problem/NNP/problem. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to solve/VB/solve a/DT/a n/NN/n day/NN/day problem/NNP/problem. so/RB/so /,/, typical/JJ/typical steps/NNS/steps in/IN/in that/DT/that might/MD/might be/VB/be that/IN/that we/PRP/we somehow/VBP/somehow solve/VBP/solve the/DT/the first/JJ/first day/NN/day and/CC/and then/RB/then we/PRP/we recurse/VBP/recurse on/IN/on the/DT/the remaining/VBG/remaining n/NN/n minus/NN/minus 1/CD/1 days/NNP/days. now/RB/now /,/, unfortunately/RB/unfortunately recursing/VBG/recursing on/IN/on n/NN/n minus/NN/minus 1/CD/1 days/NNS/days will/MD/will depend/VB/depend on/IN/on what/WP/what happens/NNS/happens on/IN/on the/DT/the first/JJ/first day/NNP/day. so/RB/so /,/, say/VB/say for/IN/for example/NN/example /,/, if/IN/if the/DT/the machine/NN/machine has/VBZ/has been/VBN/been switched/VBN/switched on/IN/on on/IN/on the/DT/the first/JJ/first day/NN/day then/RB/then when/WRB/when i/PRP/i recurse/VBP/recurse this/DT/this information/NN/information is/VBZ/is very/RB/very useful/JJ/useful to/TO/to me/NNP/me. so/RB/so /,/, if/IN/if the/DT/the machine/NN/machine is/VBZ/is on/IN/on then/RB/then on/IN/on the/DT/the first/JJ/first day/NN/day of/IN/of recursion/NN/recursion i/PRP/i do/VBP/do not/RB/not have/VB/have to/TO/to pay/VB/pay the/DT/the startup/NN/startup cost/NNP/cost. so/RB/so /,/, which/WDT/which means/VBZ/means our/PRP$/our recursion/NN/recursion must/MD/must somehow/VB/somehow include/NN/include additional/JJ/additional history/NN/history information/NN/information the/DT/the most/JJS/most natural/JJ/natural way/NN/way of/IN/of doing/VBG/doing this/DT/this is/VBZ/is to/TO/to generalize/VB/generalize our/PRP$/our problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 18/CD/18 /CD/) so/RB/so /,/, let/VB/let us/PRP/us see/VB/see that/NNP/that. so/RB/so /,/, our/PRP$/our generalized/JJ/generalized scheduling/NN/scheduling problem/NN/problem looks/VBZ/looks something/NN/something like/IN/like this/DT/this it/PRP/it has/VBZ/has the/DT/the same/JJ/same inputs/NNS/inputs as/IN/as before/IN/before except/IN/except there/EX/there are/VBP/are some/DT/some more/NNP/more. so/RB/so /,/, it/PRP/it has/VBZ/has inputs/NNS/inputs the/DT/the demand/NN/demand as/IN/as inputs/NNS/inputs the/DT/the demands/NNS/demands for/IN/for n/NN/n days/NNS/days the/DT/the startup/NN/startup cost/NN/cost the/DT/the holding/VBG/holding cost/NNP/cost. and/CC/and then/RB/then there/RB/there are/VBP/are 2/CD/2 additional/JJ/additional inputs/NNS/inputs and/CC/and input/VBD/input i/PRP/i which/WDT/which gives/VBZ/gives the/DT/the initial/JJ/initial inventory/NNP/inventory. what/WP/what i/PRP/i mean/VBP/mean by/IN/by inventory/NN/inventory is/VBZ/is that/IN/that how/WRB/how many/JJ/many units/NNS/units have/VBP/have already/RB/already in/IN/in stock/NN/stock on/IN/on day/NN/day 1/CD/1 ?/./? so/RB/so /,/, when/WRB/when i/PRP/i begin/VBP/begin the/DT/the whole/JJ/whole thing/NN/thing it/PRP/it is/VBZ/is possible/JJ/possible that/IN/that i/PRP/i already/RB/already have/VBP/have some/DT/some units/NNS/units in/IN/in stock/NN/stock ?/./? so/RB/so /,/, that/IN/that number/NN/number is/VBZ/is specified/VBN/specified as/RB/as a/DT/a part/NN/part of/IN/of the/DT/the input/NN/input and/CC/and that/IN/that is/VBZ/is this/DT/this number/NN/number i/NNP/i. then/RB/then on/IN/on the/DT/the day/NN/day which/WDT/which i/PRP/i begin/VBP/begin the/DT/the machine/NN/machine might/MD/might be/VB/be already/RB/already on/IN/on or/CC/or off/IN/off and/CC/and that/IN/that is/VBZ/is specified/VBN/specified by/IN/by this/DT/this variable/JJ/variable m/NNP/m. so/RB/so /,/, m/NN/m can/MD/can take/VB/take values/NNS/values on/IN/on or/CC/or off/IN/off i/PRP/i can/MD/can take/VB/take values/NNS/values any/DT/any integer/NN/integer the/DT/the rest/NN/rest is/VBZ/is similar/JJ/similar well/RB/well i/PRP/i should/MD/should point/VB/point out/RP/out that/IN/that our/PRP$/our old/JJ/old problem/NN/problem which/WDT/which we/PRP/we had/VBD/had defined/VBN/defined earlier/JJR/earlier corresponds/NNS/corresponds to/TO/to having/VBG/having i/PRP/i is/VBZ/is equal/JJ/equal to/TO/to 0/-NONE-/0 that/DT/that is/VBZ/is no/DT/no inventory/NN/inventory when/WRB/when we/PRP/we start/VBP/start and/CC/and m/NN/m equal/JJ/equal to/TO/to off/NNP/off. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the generalization/NN/generalization in/IN/in the/DT/the sense/NN/sense that/IN/that now/RB/now we/PRP/we allow/VBP/allow i/PRP/i and/CC/and m/VB/m to/TO/to take/VB/take on/IN/on a/DT/a wider/NN/wider range/NN/range of/IN/of values/NNS/values our/PRP$/our output/NN/output is/VBZ/is as/IN/as before/NNP/before. we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to produce/VB/produce a/DT/a production/NN/production schedule/NN/schedule and/CC/and the/DT/the requirements/NNS/requirements are/VBP/are same/JJ/same that/IN/that at/IN/at the/DT/the end/NN/end of/IN/of n/NN/n days/NNS/days everything/VBG/everything that/IN/that has/VBZ/has produced/VBN/produced must/MD/must be/VB/be consumed/NNP/consumed. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 54/CD/54 /CD/) so/RB/so /,/, let/VB/let us/PRP/us now/RB/now try/VBP/try to/TO/to define/VB/define a/DT/a recursive/JJ/recursive algorithm/NN/algorithm for/IN/for this/DT/this problem/NNP/problem. so/RB/so /,/, the/DT/the first/JJ/first step/NN/step was/VBD/was to/TO/to design/VB/design or/CC/or think/VB/think about/IN/about a/DT/a search/NN/search space/NN/space for/IN/for this/DT/this problem/NN/problem and/CC/and the/DT/the objective/NN/objective function/NNP/function. so/RB/so /,/, let/VB/let me/PRP/me call/MD/call s/VB/s the/DT/the search/NN/search space/NNP/space. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the search/NN/search space/NN/space for/IN/for the/DT/the input/NN/input problem/NN/problem as/IN/as given/NNP/given. well/RB/well the/DT/the search/NN/search space/NN/space will/MD/will contain/VB/contain all/DT/all possible/JJ/possible schedules/NNS/schedules for/IN/for this/DT/this instance/NN/instance under/IN/under instances/NNS/instances characterized/VBN/characterized by/IN/by these/DT/these inputs/NNP/inputs. so/RB/so /,/, a/DT/a instance/NN/instance is/VBZ/is defined/VBN/defined as/RB/as d/JJ/d s/NNS/s h/VBP/h i/PRP/i m/VBP/m where/WRB/where d/JJ/d is/VBZ/is a/DT/a vector/NN/vector of/IN/of n/NN/n elements/NNS/elements if/IN/if it/PRP/it helps/VBZ/helps us/PRP/us to/TO/to think/VB/think about/IN/about will/MD/will think/VB/think of/IN/of each/DT/each schedule/NN/schedule as/IN/as being/VBG/being as/IN/as n/NN/n bit/NN/bit vector/NNP/vector. so/RB/so /,/, each/DT/each bit/NN/bit specifies/NNS/specifies whether/IN/whether the/DT/the machine/NN/machine is/VBZ/is to/TO/to be/VB/be on/IN/on or/CC/or off/IN/off on/IN/on the/DT/the corresponding/NN/corresponding day/NNP/day. the/DT/the objective/NN/objective function/NN/function is/VBZ/is the/DT/the cost/NN/cost and/CC/and it/PRP/it just/RB/just consists/VBZ/consists of/IN/of the/DT/the sum/NN/sum of/IN/of the/DT/the holding/VBG/holding and/CC/and the/DT/the startup/NN/startup costs/NNP/costs. and/CC/and our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to get/VB/get the/DT/the minimum/JJ/minimum cost/NN/cost schedule/NN/schedule from/IN/from this/DT/this space/NN/space s/NNP/s. next/JJ/next comes/NNS/comes how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to partition/NN/partition this/DT/this here/RB/here is/VBZ/is a/DT/a natural/JJ/natural way/NN/way in/IN/in which/WDT/which the/DT/the space/NN/space can/MD/can be/VB/be partitioned/VBN/partitioned ?/./? so/RB/so /,/, we/PRP/we will/MD/will ask/VB/ask what/WP/what does/VBZ/does what/WP/what happens/NNS/happens on/IN/on the/DT/the first/JJ/first day/NNP/day. so/RB/so /,/, in/IN/in sub/NN/sub space/NN/space s/NNS/s sub/VBP/sub p/NN/p we/PRP/we will/MD/will put/VB/put all/DT/all schedules/NNS/schedules in/IN/in which/WDT/which machine/NN/machine is/VBZ/is producing/VBG/producing on/IN/on day/NN/day 1/CD/1. in/IN/in space/NN/space sub/NN/sub space/NN/space s/NNS/s sub/VBP/sub i/PRP/i we/PRP/we will/MD/will put/VB/put all/DT/all schedules/NNS/schedules in/IN/in which/WDT/which machine/NN/machine is/VBZ/is idle/JJ/idle on/IN/on day/NN/day 1/CD/1. now/RB/now /,/, this/DT/this union/NN/union this/DT/this is/VBZ/is this/DT/this in/IN/in the/DT/the sense/NN/sense that/IN/that in/IN/in every/DT/every schedule/NN/schedule in/IN/in every/DT/every element/NN/element of/IN/of s/NNP/s. either/CC/either the/DT/the machine/NN/machine is/VBZ/is producing/VBG/producing on/IN/on the/DT/the first/JJ/first day/NN/day or/CC/or it/PRP/it is/VBZ/is idle/JJ/idle on/IN/on the/DT/the first/JJ/first day/NN/day and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is equal/JJ/equal to/TO/to this/DT/this union/NN/union this/NNP/this. so/RB/so /,/, we/PRP/we have/VBP/have partition/NN/partition s/NNS/s and/CC/and so/RB/so the/DT/the next/JJ/next question/NN/question is/VBZ/is how/WRB/how do/VBP/do you/PRP/you search/VB/search each/DT/each of/IN/of these/DT/these sub/NN/sub spaces/NNP/spaces. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 13/CD/13 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at s/NNS/s sub/VBP/sub p/NN/p first/RB/first and/CC/and we/PRP/we will/MD/will try/VB/try to/TO/to think/VB/think of/IN/of how/WRB/how to/TO/to search/VB/search s/NNS/s sub/VB/sub p/NNP/p. here/RB/here is/VBZ/is the/DT/the key/JJ/key idea/NN/idea in/IN/in devising/NN/devising recursive/JJ/recursive algorithms/NNS/algorithms for/IN/for optimization/NN/optimization problems/NNP/problems. so/RB/so /,/, if/IN/if p/NN/p is/VBZ/is the/DT/the least/JJS/least cost/NN/cost element/NN/element of/IN/of s/NNS/s sub/VBP/sub p/NN/p then/RB/then the/DT/the question/NN/question we/PRP/we should/MD/should be/VB/be asking/VBG/asking is/VBZ/is will/MD/will parts/NNS/parts of/IN/of p/NN/p themselves/NNS/themselves be/VB/be least/JJS/least cost/NN/cost solutions/NNS/solutions some/DT/some smaller/JJR/smaller instance/NNP/instance. if/IN/if they/PRP/they are/VBP/are then/RB/then we/PRP/we can/MD/can use/VB/use recursion/NNP/recursion. so/RB/so /,/, this/DT/this is/VBZ/is called/VBN/called the/DT/the so/RB/so called/VBN/called optimal/JJ/optimal sub/NN/sub structure/NN/structure idea/NNP/idea. so/RB/so /,/, if/IN/if p/NN/p is/VBZ/is an/DT/an optimal/JJ/optimal solution/NN/solution in/IN/in this/DT/this subspace/NN/subspace s/VBZ/s sub/NN/sub p/NNP/p. the/DT/the question/NN/question is/VBZ/is will/MD/will parts/NNS/parts of/IN/of p/NN/p will/MD/will also/RB/also be/VB/be optimal/JJ/optimal for/IN/for a/DT/a smaller/JJR/smaller sub/NN/sub problem/NN/problem and/CC/and in/IN/in fact/NN/fact ;/:/; it/PRP/it turns/VBZ/turns out/RP/out in/IN/in our/PRP$/our case/NN/case that/WDT/that that/IN/that is/VBZ/is true/NNP/true. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 00/CD/00 /CD/) so/RB/so /,/, let/VB/let p/NN/p 1/CD/1 through/IN/through n/NN/n be/VB/be a/DT/a least/JJS/least cost/NN/cost schedule/NN/schedule in/IN/in s/NNS/s sub/VBP/sub p/NN/p will/MD/will show/VB/show the/DT/the parts/NNS/parts of/IN/of it/PRP/it will/MD/will have/VB/have to/TO/to be/VB/be optimal/JJ/optimal for/IN/for a/DT/a sub/NN/sub problem/NN/problem for/IN/for a/DT/a smaller/JJR/smaller instance/NNP/instance. so/RB/so /,/, if/IN/if p/NN/p is/VBZ/is the/DT/the least/JJS/least cost/NN/cost schedule/NN/schedule what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about it/PRP/it well/RB/well we/PRP/we know/VBP/know that/IN/that p/NN/p of/IN/of 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to true/JJ/true /,/, why/WRB/why because/IN/because p/NN/p is/VBZ/is the/DT/the least/JJS/least cost/NN/cost schedule/NN/schedule in/IN/in s/NNS/s sub/VBP/sub p/NN/p and/CC/and s/NNS/s sub/VBP/sub p/NN/p is/VBZ/is a/DT/a set/NN/set of/IN/of schedules/NNS/schedules in/IN/in which/WDT/which the/DT/the machine/NN/machine is/VBZ/is on/IN/on in/IN/in the/DT/the first/JJ/first day/NNP/day. so/RB/so /,/, p/NN/p of/IN/of 1/CD/1 must/MD/must be/VB/be true/JJ/true p/NN/p of/IN/of 2/CD/2 n/NN/n is/VBZ/is the/DT/the rest/NN/rest of/IN/of the/DT/the schedule/NN/schedule /,/, but/CC/but now/RB/now i/PRP/i can/MD/can think/VB/think of/IN/of p/NN/p of/IN/of 2/CD/2 as/IN/as a/DT/a schedule/NN/schedule for/IN/for the/DT/the residual/JJ/residual instance/NN/instance from/IN/from d/NN/d 2/CD/2. so/RB/so /,/, let/VB/let me/PRP/me clarify/VB/clarify this/NNP/this. so/RB/so /,/, our/PRP$/our original/JJ/original instance/NN/instance was/VBD/was this/DT/this d/NN/d s/VBZ/s h/NN/h i/PRP/i m/VBP/m when/WRB/when n/NN/n integer/NN/integer vector/NNP/vector. the/DT/the residual/JJ/residual instance/NN/instance is/VBZ/is just/RB/just a/DT/a part/NN/part of/IN/of this/DT/this which/WDT/which begins/VBZ/begins in/IN/in the/DT/the second/JJ/second day/NNP/day. so/RB/so /,/, in/IN/in the/DT/the residual/JJ/residual instance/NN/instance we/PRP/we have/VBP/have only/RB/only demands/NNS/demands for/IN/for days/NNS/days 2/CD/2 through/IN/through n/NN/n then/RB/then s/VBZ/s is/VBZ/is the/DT/the same/JJ/same the/DT/the startup/NN/startup cost/NN/cost does/VBZ/does not/RB/not change/NNP/change. the/DT/the holding/VBG/holding cost/NN/cost does/VBZ/does not/RB/not change/VB/change ;/:/; however/RB/however /,/, the/DT/the inventory/NN/inventory on/IN/on day/NN/day 1/CD/1 is/VBZ/is going/VBG/going to/TO/to be/VB/be different/JJ/different on/IN/on day/NN/day 2/CD/2 is/VBZ/is going/VBG/going to/TO/to be/VB/be different/JJ/different on/IN/on day/NN/day 1/CD/1 the/DT/the inventory/NN/inventory is/VBZ/is 1/CD/1. and/CC/and on/IN/on the/DT/the first/JJ/first day/NN/day we/PRP/we produced/VBD/produced of/IN/of the/DT/the inventory/NN/inventory that/IN/that was/VBD/was present/JJ/present on/IN/on day/NN/day 1/CD/1. we/PRP/we are/VBP/are going/VBG/going to/TO/to deliver/VB/deliver d/JJ/d of/IN/of 1/CD/1 which/WDT/which was/VBD/was what/WP/what the/DT/the problem/NN/problem require/NN/require has/VBZ/has to/TO/to deliver/JJR/deliver and/CC/and then/RB/then it/PRP/it will/MD/will add/VB/add whatever/RB/whatever we/PRP/we produced/VBN/produced on/IN/on day/NN/day 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the inventory/NN/inventory for/IN/for this/DT/this instance/NN/instance beginning/NN/beginning on/IN/on the/DT/the second/JJ/second day/NN/day the/DT/the final/JJ/final component/NN/component is/VBZ/is the/DT/the machine/NN/machine status/NNP/status. so/RB/so /,/, over/IN/over here/RB/here the/DT/the machine/NN/machine status/NN/status could/MD/could have/VB/have been/VBN/been whatever/RB/whatever now/RB/now we/PRP/we know/VBP/know since/IN/since we/PRP/we did/VBD/did produce/VB/produce on/IN/on the/DT/the first/JJ/first day/NN/day the/DT/the machine/NN/machine status/NN/status had/VBD/had better/RBR/better be/VB/be true/NNP/true. so/RB/so /,/, this/DT/this i/PRP/i the/DT/the residual/JJ/residual instance/NN/instance and/CC/and clearly/RB/clearly p/VB/p 2/CD/2 n/NN/n must/MD/must be/VB/be a/DT/a schedule/NN/schedule which/WDT/which satisfies/NNS/satisfies this/DT/this residual/JJ/residual influence/NNP/influence. here/RB/here is/VBZ/is the/DT/the key/JJ/key lemma/NN/lemma this/DT/this lemma/NN/lemma says/VBZ/says that/IN/that not/RB/not only/RB/only does/VBZ/does it/PRP/it satisfy/VB/satisfy the/DT/the residual/JJ/residual instance/NN/instance /,/, but/CC/but in/IN/in fact/NN/fact it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a optimal/JJ/optimal schedule/NN/schedule for/IN/for this/DT/this instance/NNP/instance. or/CC/or in/IN/in other/JJ/other words/NNS/words it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a least/JJS/least cost/NN/cost schedule/NN/schedule for/IN/for this/DT/this instance/NN/instance the/DT/the argument/NN/argument for/IN/for this/DT/this is/VBZ/is fairly/RB/fairly straight/JJ/straight forward/NNP/forward. and/CC/and it/PRP/it is/VBZ/is of/IN/of the/DT/the typical/JJ/typical argument/NN/argument in/IN/in dynamic/JJ/dynamic programming/NN/programming arguments/NNP/arguments. so/RB/so /,/, well/RB/well do/VBP/do the/DT/the argument/NN/argument by/IN/by contradiction/NNP/contradiction. so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that p/NN/p 2/CD/2 n/NN/n is/VBZ/is not/RB/not an/DT/an optimal/JJ/optimal schedule/NN/schedule which/WDT/which means/VBZ/means there/RB/there are/VBP/are better/RBR/better be/VB/be a/DT/a schedule/NN/schedule q/NN/q 2/CD/2 n/NN/n which/WDT/which is/VBZ/is optimal/JJ/optimal for/IN/for this/DT/this instance/NN/instance and/CC/and it/PRP/it is/VBZ/is cost/VBN/cost be/VB/be better/JJR/better smaller/JJR/smaller than/IN/than the/DT/the cost/NN/cost of/IN/of p/NN/p 2/CD/2 n/NNP/n. so/RB/so /,/, cost/NN/cost of/IN/of q/NN/q 2/CD/2 n/NN/n must/MD/must be/VB/be smaller/JJR/smaller than/IN/than cost/NN/cost of/IN/of p/NN/p 2/CD/2 n/NN/n /,/, but/CC/but now/RB/now let/VBP/let us/PRP/us consider/JJR/consider this/DT/this schedule/NN/schedule r/NN/r where/WRB/where r/NN/r follows/VBZ/follows p/NN/p on/IN/on the/DT/the first/JJ/first day/NNP/day. or/CC/or in/IN/in other/JJ/other words/NNS/words r/IN/r is/VBZ/is true/JJ/true on/IN/on the/DT/the first/JJ/first day/NN/day and/CC/and on/IN/on the/DT/the remaining/VBG/remaining days/NNS/days it/PRP/it follows/VBZ/follows q/NN/q clearly/RB/clearly this/DT/this is/VBZ/is a/DT/a valid/JJ/valid solution/NN/solution for/IN/for the/DT/the original/JJ/original instance/NN/instance right/NNP/right. because/IN/because well/RB/well on/IN/on the/DT/the first/JJ/first day/NN/day we/PRP/we produced/VBD/produced and/CC/and then/RB/then we/PRP/we were/VBD/were left/VBN/left with/IN/with this/DT/this instance/NN/instance and/CC/and that/IN/that is/VBZ/is what/WP/what q/NN/q took/VBD/took care/NN/care of/NNP/of. now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of r/NN/r ?/./? clearly/RB/clearly cost/VB/cost of/IN/of r/NN/r must/MD/must be/VB/be smaller/JJR/smaller than/IN/than the/DT/the cost/NN/cost of/IN/of p/NN/p why/WRB/why because/IN/because cost/NN/cost of/IN/of r/NN/r is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the cost/NN/cost for/IN/for remaining/VBG/remaining days/NNS/days plus/CC/plus the/DT/the cost/NN/cost of/IN/of p/NNP/p. the/DT/the cost/NN/cost of/IN/of the/DT/the first/JJ/first day/NN/day this/DT/this is/VBZ/is the/DT/the cost/NN/cost of/IN/of r/NN/r cost/NN/cost of/IN/of p/NN/p is/VBZ/is cost/VBN/cost with/IN/with the/DT/the first/JJ/first day/NN/day plus/RB/plus cost/VB/cost of/IN/of the/DT/the remaining/VBG/remaining days/NNS/days which/WDT/which is/VBZ/is not/RB/not q/VB/q 2/CD/2 through/IN/through n/NN/n /,/, but/CC/but p/VB/p 2/CD/2 through/IN/through n/NNP/n. but/CC/but in/IN/in p/NN/p we/PRP/we are/VBP/are adding/VBG/adding this/DT/this whereas/NN/whereas ;/:/; in/IN/in r/NN/r we/PRP/we are/VBP/are adding/VBG/adding this/DT/this ;/:/; this/DT/this is/VBZ/is smaller/JJR/smaller than/IN/than this/NNP/this. and/CC/and therefore/RB/therefore /,/, the/DT/the cost/NN/cost of/IN/of r/NN/r must/MD/must be/VB/be smaller/JJR/smaller than/IN/than cost/NN/cost of/IN/of p/NN/p /,/, but/CC/but remember/NN/remember we/PRP/we assume/VBP/assume that/IN/that p/NN/p is/VBZ/is a/DT/a least/JJ/least cost/NN/cost schedule/NN/schedule in/IN/in s/NNS/s sub/VBP/sub p/NNP/p. but/CC/but here/RB/here we/PRP/we are/VBP/are showing/VBG/showing there/RB/there exists/VBZ/exists a/DT/a schedule/NN/schedule r/NN/r which/WDT/which has/VBZ/has even/RB/even less/JJR/less cost/NN/cost than/IN/than p/NN/p and/CC/and also/RB/also the/DT/the first/JJ/first element/NN/element of/IN/of r/NN/r is/VBZ/is true/JJ/true /,/, because/IN/because it/PRP/it is/VBZ/is p/VB/p 1/CD/1 itself/NNP/itself. so/RB/so /,/, r/NN/r also/RB/also belongs/VBZ/belongs to/TO/to s/NNS/s sub/VB/sub p/NN/p and/CC/and therefore/RB/therefore /,/, we/PRP/we have/VBP/have a/DT/a contradiction/NNP/contradiction. and/CC/and therefore/RB/therefore /,/, our/PRP$/our basic/JJ/basic assumption/NN/assumption must/MD/must have/VB/have been/VBN/been false/RB/false or/CC/or in/IN/in other/JJ/other words/NNS/words our/PRP$/our lemma/NN/lemma must/MD/must have/VB/have been/VBN/been true/JJ/true then/RB/then this/DT/this is/VBZ/is also/RB/also optimal/JJ/optimal for/IN/for instance/NN/instance the/DT/the residual/JJ/residual instance/NNP/instance. so/RB/so /,/, this/DT/this tells/VBZ/tells us/PRP/us how/WRB/how to/TO/to search/VB/search the/DT/the space/NN/space s/VBZ/s sub/NN/sub p/NN/p and/CC/and a/DT/a similar/JJ/similar idea/NN/idea works/NNS/works for/IN/for the/DT/the s/NNS/s sub/VBP/sub r/NNP/r. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 00/CD/00 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say i/PRP/i 1/CD/1 through/IN/through n/NN/n be/VB/be a/DT/a least/JJS/least cost/NN/cost schedule/NN/schedule in/IN/in s/NNS/s sub/VBP/sub i/NNP/i. then/RB/then i/PRP/i 2/CD/2 through/IN/through n/NN/n is/VBZ/is a/DT/a least/JJ/least cost/NN/cost schedule/NN/schedule or/CC/or is/VBZ/is optimal/JJ/optimal for/IN/for the/DT/the instance/NN/instance d/NN/d 2/CD/2 n/NN/n s/NNS/s h/VBP/h i/PRP/i minus/VBZ/minus d/JJ/d 1/CD/1 false/NN/false or/CC/or this/DT/this is/VBZ/is the/DT/the residual/JJ/residual instance/NNP/instance. so/RB/so /,/, see/VB/see that/IN/that the/DT/the last/JJ/last component/NN/component the/DT/the machine/NN/machine status/NN/status is/VBZ/is false/NN/false /,/, because/IN/because s/NNS/s i/PRP/i consists/VBZ/consists of/IN/of schedules/NNS/schedules in/IN/in which/WDT/which the/DT/the machine/NN/machine is/VBZ/is off/RP/off on/IN/on day/NN/day 1/CD/1. therefore/NN/therefore this/DT/this is/VBZ/is false/NN/false and/CC/and the/DT/the original/JJ/original elementary/NN/elementary was/VBD/was i/PRP/i but/CC/but on/IN/on day/NN/day 1/CD/1 we/PRP/we delivered/VBD/delivered something/NN/something without/IN/without producing/NNP/producing. so/RB/so /,/, the/DT/the new/JJ/new entry/NN/entry is/VBZ/is i/PRP/i minus/VBZ/minus d/JJ/d 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the residual/JJ/residual instance/NN/instance and/CC/and this/DT/this remark/NN/remark claims/VBZ/claims that/IN/that i/PRP/i 2/CD/2 through/IN/through n/NN/n must/MD/must be/VB/be optimal/JJ/optimal for/IN/for this/DT/this residual/JJ/residual instance/NNP/instance. so/RB/so /,/, we/PRP/we have/VBP/have accomplished/VBN/accomplished the/DT/the goals/NNS/goals that/WDT/that we/PRP/we set/NNP/set. so/RB/so /,/, we/PRP/we have/VBP/have shown/VBN/shown how/WRB/how to/TO/to search/VB/search s/NNS/s sub/VB/sub p/NN/p and/CC/and how/WRB/how to/TO/to search/VB/search s/NNS/s sub/VB/sub i/PRP/i and/CC/and this/DT/this has/VBZ/has been/VBN/been done/VBN/done by/IN/by using/NN/using recursion/NNP/recursion. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 14/CD/14 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are essentially/RB/essentially ready/JJ/ready to/TO/to build/VB/build a/DT/a recursive/JJ/recursive algorithm/NN/algorithm for/IN/for sorting/NN/sorting this/DT/this problem/NNP/problem. here/RB/here is/VBZ/is a/DT/a outline/NNP/outline. so/RB/so /,/, we/PRP/we will/MD/will call/VB/call our/PRP$/our algorithm/NN/algorithm opts/NNS/opts schedule/NN/schedule arguments/NNS/arguments the/DT/the entire/JJ/entire demands/NNS/demands and/CC/and when/WRB/when i/PRP/i write/VBP/write d/JJ/d 1/CD/1 through/IN/through n/NN/n over/IN/over here/RB/here i/PRP/i simply/RB/simply mean/JJ/mean that/IN/that d/JJ/d is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a vector/NN/vector with/IN/with n/NN/n elements/NNP/elements. it/PRP/it will/MD/will take/VB/take additional/JJ/additional argument/NN/argument which/WDT/which is/VBZ/is the/DT/the startup/NN/startup cost/NN/cost the/DT/the holding/VBG/holding cost/NN/cost the/DT/the current/JJ/current inventory/NN/inventory at/IN/at the/DT/the beginning/NN/beginning and/CC/and the/DT/the machine/NN/machine status/NN/status at/IN/at the/DT/the beginning/NNP/beginning. there/RB/there will/MD/will have/VB/have to/TO/to some/DT/some best/JJS/best case/NN/case that/WDT/that will/MD/will have/VB/have to/TO/to take/VB/take care/NN/care of/IN/of /,/, but/CC/but this/DT/this is/VBZ/is sort/NN/sort of/IN/of the/DT/the main/JJ/main core/NN/core of/IN/of the/DT/the recursive/JJ/recursive algorithm/NNP/algorithm. so/RB/so /,/, this/DT/this part/NN/part in/IN/in this/DT/this part/NN/part we/PRP/we are/VBP/are going/VBG/going to/TO/to search/NN/search the/DT/the space/NN/space s/VBZ/s sub/NN/sub p/NNP/p. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to find/VB/find the/DT/the optimal/JJ/optimal schedule/NN/schedule for/IN/for the/DT/the recursive/JJ/recursive residual/JJ/residual problem/NNP/problem. assuming/NN/assuming that/WDT/that on/IN/on the/DT/the first/JJ/first day/NN/day we/PRP/we do/VBP/do produce/RB/produce and/CC/and that/IN/that will/MD/will be/VB/be our/PRP$/our schedule/NN/schedule p/NN/p 1/CD/1 through/IN/through n/NN/n i/PRP/i 1/CD/1 through/IN/through n/NN/n will/MD/will likewise/VB/likewise be/VB/be the/DT/the optimized/VBN/optimized schedule/NN/schedule for/IN/for s/NNS/s sub/VBP/sub i/PRP/i and/CC/and in/IN/in this/DT/this case/NNP/case. on/IN/on the/DT/the first/JJ/first day/NN/day we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to produce/VB/produce anything/NN/anything and/CC/and this/DT/this is/VBZ/is just/RB/just the/DT/the residual/JJ/residual problem/NN/problem given/VBN/given that/IN/that we/PRP/we do/VBP/do not/RB/not produce/VB/produce anything/NN/anything on/IN/on the/DT/the first/JJ/first day/NNP/day. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the problems/NNS/problems which/WDT/which we/PRP/we exactly/RB/exactly looked/VBD/looked at/IN/at in/IN/in the/DT/the 2/CD/2 lemmas/NNS/lemmas that/WDT/that we/PRP/we just/RB/just saw/NNP/saw. and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the cost/NN/cost of/IN/of the/DT/the first/JJ/first schedule/NN/schedule the/DT/the cost/NN/cost of/IN/of the/DT/the second/JJ/second schedule/NN/schedule and/CC/and we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to return/VB/return the/DT/the best/JJS/best of/IN/of these/NNP/these. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the best/JJS/best of/IN/of best/JJS/best idea/NNP/idea. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the best/JJS/best solution/NN/solution in/IN/in the/DT/the first/JJ/first sub/NN/sub space/NN/space this/DT/this is/VBZ/is the/DT/the best/JJS/best solution/NN/solution in/IN/in the/DT/the second/JJ/second sub/NN/sub space/NN/space what/WP/what we/PRP/we are/VBP/are returning/VBG/returning is/VBZ/is the/DT/the best/JJS/best of/IN/of the/DT/the bests/NNS/bests and/CC/and number/NN/number of/IN/of details/NNS/details have/VBP/have to/TO/to be/VB/be filled/VBN/filled up/RP/up over/IN/over here/NNP/here. however/RB/however /,/, you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to argue/VB/argue that/IN/that this/DT/this algorithm/NN/algorithm will/MD/will take/VB/take time/NN/time o/NN/o of/IN/of 2/CD/2 to/TO/to the/DT/the n/NN/n see/VBP/see just/RB/just try/NN/try to/TO/to recurrence/NN/recurrence and/CC/and this/DT/this will/MD/will just/RB/just come/VB/come over/NNP/over. so/RB/so /,/, what/WDT/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do now/RB/now is/VBZ/is not/RB/not to/TO/to fill/VB/fill up/RP/up the/DT/the details/NNS/details the/DT/the remaining/VBG/remaining details/NNS/details and/CC/and there/EX/there are/VBP/are a/DT/a few/JJ/few important/JJ/important details/NNS/details which/WDT/which are/VBP/are missing/VBG/missing over/IN/over here/NNP/here. but/CC/but what/WP/what we/PRP/we have/VBP/have done/VBN/done is/VBZ/is we/PRP/we have/VBP/have essentially/RB/essentially identified/VBN/identified what/WP/what kind/NN/kind of/IN/of recursion/NN/recursion we/PRP/we are/VBP/are going/VBG/going to/TO/to have/NNP/have. so/RB/so /,/, we/PRP/we will/MD/will just/RB/just proceed/VB/proceed to/TO/to the/DT/the next/JJ/next step/NN/step of/IN/of our/PRP$/our agenda/NNP/agenda. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 34/CD/34 /CD/) so/RB/so /,/, the/DT/the next/JJ/next step/NN/step is/VBZ/is the/DT/the dynamic/JJ/dynamic programming/NN/programming idea/NNP/idea. so/RB/so /,/, this/DT/this step/NN/step is/VBZ/is the/DT/the key/JJ/key step/NN/step of/IN/of dynamic/JJ/dynamic programming/NN/programming which/WDT/which is/VBZ/is characterizing/VBG/characterizing the/DT/the recursive/JJ/recursive calls/NNP/calls. so/RB/so /,/, the/DT/the first/JJ/first observation/NN/observation is/VBZ/is that/IN/that opts/NNS/opts schedule/VBP/schedule is/VBZ/is always/RB/always called/VBN/called using/VBG/using arguments/NNS/arguments d/VBD/d j/NN/j through/IN/through n/NN/n and/CC/and s/NNS/s h/VBP/h i/PRP/i m/VBP/m where/WRB/where j/NN/j can/MD/can be/VB/be any/DT/any number/NNP/number. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just observe/VBP/observe let/JJ/let me/NN/me just/RB/just point/NN/point out/RP/out why/WRB/why this/DT/this is/NNP/is. so/RB/so /,/, initially/RB/initially opts/VBZ/opts schedule/NN/schedule is/VBZ/is going/VBG/going to/TO/to be/VB/be called/VBN/called with/IN/with the/DT/the entire/JJ/entire input/NNP/input. but/CC/but later/JJ/later on/IN/on it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be called/VBN/called with/IN/with the/DT/the residual/JJ/residual problem/NN/problem in/IN/in which/WDT/which we/PRP/we are/VBP/are only/RB/only going/VBG/going to/TO/to pass/VB/pass the/DT/the sub/NN/sub array/NN/array beginning/NN/beginning with/IN/with the/DT/the second/JJ/second index/NNP/index. now/RB/now /,/, what/WDT/what happens/NNS/happens in/IN/in this/DT/this call/NN/call itself/PRP/itself in/IN/in this/DT/this call/NN/call we/PRP/we are/VBP/are again/RB/again going/VBG/going to/TO/to throw/VB/throw out/RP/out the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the demand/NN/demand array/NN/array and/CC/and then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to call/VB/call it/PRP/it with/IN/with the/DT/the rest/NN/rest of/IN/of it/NNP/it. so/RB/so /,/, when/WRB/when we/PRP/we are/VBP/are doing/VBG/doing the/DT/the recursion/NN/recursion on/IN/on it/PRP/it we/PRP/we will/MD/will be/VB/be calling/VBG/calling it/PRP/it with/IN/with d/JJ/d 3/CD/3 n/NN/n and/CC/and then/RB/then when/WRB/when we/PRP/we recurse/VBP/recurse on/IN/on that/DT/that we/PRP/we will/MD/will be/VB/be calling/VBG/calling d/NN/d 4/CD/4 n/NN/n and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, in/IN/in other/JJ/other words/NNS/words the/DT/the argument/NN/argument is/VBZ/is going/VBG/going to/TO/to be/VB/be of/IN/of this/DT/this form/NN/form that/IN/that we/PRP/we will/MD/will be/VB/be that/IN/that the/DT/the first/JJ/first argument/NN/argument that/WDT/that is/VBZ/is going/VBG/going to/TO/to be/VB/be passed/VBN/passed will/MD/will be/VB/be some/DT/some sub/NN/sub range/NNP/range. well/RB/well /,/, it/PRP/it will/MD/will always/RB/always be/VB/be a/DT/a terminal/JJ/terminal sub/NN/sub range/NN/range of/IN/of our/PRP$/our input/NN/input d/NNP/d. so/RB/so /,/, suffix/CD/suffix of/IN/of that/DT/that d/NN/d array/NN/array and/CC/and then/RB/then these/DT/these could/MD/could be/VB/be pretty/RB/pretty much/RB/much anything/NNP/anything. so/RB/so /,/, j/NN/j has/VBZ/has to/TO/to be/VB/be some/DT/some number/NN/number between/IN/between 1/CD/1 and/CC/and n/NNP/n. so/RB/so /,/, the/DT/the largest/JJS/largest index/NN/index is/VBZ/is n/NNP/n. so/RB/so /,/, j/NN/j could/MD/could be/VB/be anything/NN/anything until/IN/until n/NN/n s/NNS/s and/CC/and h/NN/h get/NN/get passed/VBD/passed without/IN/without any/DT/any change/NN/change what/WP/what so/RB/so ever/RB/ever the/DT/the inventory/NN/inventory can/MD/can be/VB/be at/IN/at most/JJS/most l/JJ/l why/WRB/why is/VBZ/is that/IN/that ?/./? well/RB/well /,/, we/PRP/we have/VBP/have n/VBN/n days/NNS/days during/IN/during which/WDT/which the/DT/the machine/NN/machine produces/VBZ/produces 1/CD/1 unit/NN/unit per/IN/per day/NN/day and/CC/and therefore/RB/therefore /,/, the/DT/the inventory/NN/inventory can/MD/can not/RB/not ever/RB/ever build/VB/build up/RP/up to/TO/to more/JJR/more than/IN/than n/NNP/n. so/RB/so /,/, this/DT/this argument/NN/argument will/MD/will be/VB/be an/DT/an integer/NN/integer at/IN/at most/JJS/most l/JJ/l and/CC/and the/DT/the last/JJ/last argument/NN/argument could/MD/could either/VB/either be/VB/be true/JJ/true or/CC/or false/NNP/false. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a reasonably/RB/reasonably good/JJ/good characterization/NN/characterization of/IN/of all/DT/all the/DT/the recursive/JJ/recursive calls/NNS/calls that/WDT/that could/MD/could get/VB/get made/VBN/made in/IN/in our/PRP$/our recursive/JJ/recursive algorithm/NNP/algorithm. so/RB/so /,/, the/DT/the characterization/NN/characterization says/VBZ/says that/IN/that these/DT/these are/VBP/are the/DT/the arguments/NNS/arguments that/WDT/that are/VBP/are going/VBG/going to/TO/to be/VB/be passed/VBN/passed and/CC/and each/DT/each argument/NN/argument can/MD/can vary/VB/vary in/IN/in this/DT/this manner/NN/manner or/CC/or not/RB/not vary/JJ/vary at/IN/at all/NNP/all. the/DT/the next/JJ/next step/NN/step of/IN/of dynamic/JJ/dynamic programming/NN/programming says/VBZ/says well/RB/well now/RB/now that/IN/that you/PRP/you have/VBP/have identified/VBN/identified what/WP/what the/DT/the recursive/JJ/recursive calls/NNS/calls are/VBP/are going/VBG/going to/TO/to be/VB/be make/VB/make a/DT/a table/JJ/table in/IN/in which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to store/VB/store the/DT/the table/NNP/table. so/RB/so /,/, we/PRP/we will/MD/will construct/VB/construct a/DT/a table/JJ/table t/NN/t in/IN/in which/WDT/which t/NN/t will/MD/will have/VB/have 3/CD/3 indices/NNS/indices j/NN/j i/PRP/i and/CC/and m/NNP/m. so/RB/so /,/, t/NN/t of/IN/of j/NN/j i/PRP/i m/VBP/m will/MD/will store/VB/store the/DT/the result/NN/result of/IN/of optschedule/NN/optschedule of/IN/of d/NN/d j/NN/j through/IN/through n/NN/n s/NNS/s h/VBP/h i/PRP/i m/NNP/m. the/DT/the point/NN/point of/IN/of making/VBG/making the/DT/the table/NN/table really/RB/really is/VBZ/is that/IN/that we/PRP/we just/RB/just want/VBP/want to/TO/to focus/VB/focus we/PRP/we just/RB/just want/VBP/want to/TO/to make/VB/make a/DT/a list/NN/list of/IN/of what/WP/what are/VBP/are the/DT/the sub/NN/sub problems/NNS/problems that/WDT/that we/PRP/we are/VBP/are ever/RB/ever going/VBG/going to/TO/to solve/NNP/solve. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we will/MD/will do/VB/do. now/RB/now /,/, we/PRP/we can/MD/can work/VB/work with/IN/with this/DT/this table/NN/table t/NN/t ;/:/; however/RB/however /,/, dealing/VBG/dealing with/IN/with schedules/NNS/schedules is/VBZ/is a/DT/a little/RB/little bit/NN/bit cumbersome/NN/cumbersome because/IN/because we/PRP/we are/VBP/are going/VBG/going to/TO/to simplify/VB/simplify the/DT/the problem/NN/problem just/RB/just for/IN/for a/DT/a few/JJ/few minutes/NNP/minutes. so/RB/so /,/, instead/RB/instead of/IN/of working/VBG/working with/IN/with entire/JJ/entire schedules/NNS/schedules we/PRP/we will/MD/will just/RB/just work/VB/work with/IN/with the/DT/the cost/NN/cost of/IN/of optschedule/NNP/optschedule. in/IN/in the/DT/the table/NN/table t/NN/t we/PRP/we were/VBD/were planning/VBG/planning to/TO/to store/VB/store in/IN/in each/DT/each cell/NN/cell the/DT/the entire/JJ/entire optimal/JJ/optimal schedule/NN/schedule instead/RB/instead of/IN/of that/DT/that we/PRP/we will/MD/will build/VB/build a/DT/a different/JJ/different table/JJ/table let/NN/let us/PRP/us call/VBP/call it/PRP/it c/VBP/c for/IN/for cost/NNP/cost. it/PRP/it will/MD/will have/VB/have same/JJ/same very/RB/very similar/JJ/similar entries/NNS/entries similar/JJ/similar number/NN/number of/IN/of entries/NNS/entries with/IN/with similar/JJ/similar indices/NNS/indices and/CC/and in/IN/in this/DT/this we/PRP/we will/MD/will just/RB/just store/VB/store the/DT/the cost/NN/cost of/IN/of the/DT/the optimal/JJ/optimal schedule/NNP/schedule. so/RB/so /,/, now/RB/now /,/, we/PRP/we are/VBP/are now/RB/now going/VBG/going to/TO/to work/VB/work with/IN/with this/DT/this table/NN/table and/CC/and what/WP/what dynamic/JJ/dynamic programming/NN/programming requires/VBZ/requires to/TO/to do/VB/do is/VBZ/is to/TO/to figure/VB/figure out/RP/out how/WRB/how entries/NNS/entries in/IN/in this/DT/this table/NN/table depend/NN/depend upon/IN/upon each/DT/each other/NNP/other. so/RB/so /,/, in/IN/in another/DT/another words/NNS/words if/IN/if the/DT/the entry/NN/entry c/NN/c j/NN/j i/PRP/i m/VBP/m has/VBZ/has to/TO/to be/VB/be filled/VBN/filled assuming/VBG/assuming the/DT/the remaining/VBG/remaining entries/NNS/entries are/VBP/are full/JJ/full what/WP/what is/VBZ/is the/DT/the exact/JJ/exact computation/NN/computation that/WDT/that needs/VBZ/needs to/TO/to be/VB/be done/NNP/done. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 13/CD/13 /CD/) so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to derive/VB/derive some/DT/some kind/NN/kind of/IN/of recurrence/NN/recurrence for/IN/for c/NN/c j/NN/j i/PRP/i m/VBP/m let/JJ/let me/NN/me just/RB/just remind/VBP/remind you/PRP/you that/IN/that c/NN/c j/NN/j i/PRP/i m/VBP/m is/VBZ/is the/DT/the cost/NN/cost of/IN/of this/DT/this optimal/JJ/optimal schedule/NN/schedule for/IN/for the/DT/the sub/NN/sub problem/NN/problem or/CC/or for/IN/for the/DT/the residual/JJ/residual problem/NN/problem actually/RB/actually d/JJ/d j/NN/j n/NN/n s/NNS/s h/VBP/h i/PRP/i m/NNP/m. let/VB/let me/PRP/me just/RB/just remind/VBP/remind you/PRP/you that/IN/that you/PRP/you did/VBD/did not/RB/not have/VB/have s/NNS/s h/IN/h in/IN/in the/DT/the table/NN/table /,/, because/IN/because they/PRP/they are/VBP/are fixed/VBN/fixed throughout/IN/throughout the/DT/the execution/NN/execution anywhere/NNP/anywhere. here/RB/here is/VBZ/is what/WP/what the/DT/the optimal/JJ/optimal schedule/NN/schedule for/IN/for d/NN/d j/NN/j n/NN/n is/VBZ/is going/VBG/going to/TO/to look/VB/look like/NNP/like. so/RB/so /,/, i/PRP/i claim/VBP/claim that/IN/that the/DT/the optimal/JJ/optimal schedule/NN/schedule for/IN/for d/NN/d j/NN/j n/NN/n s/NNS/s h/VBP/h i/PRP/i m/VBP/m is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the schedule/NN/schedule with/IN/with the/DT/the lower/JJR/lower cost/NN/cost from/IN/from this/DT/this schedule/NN/schedule and/CC/and this/DT/this schedule/NNP/schedule. this/DT/this really/RB/really comes/VBZ/comes from/IN/from the/DT/the procedure/NN/procedure that/IN/that we/PRP/we wrote/VBD/wrote a/DT/a minute/NN/minute ago/NNP/ago. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just see/VB/see that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 31/CD/31 /:/: 16/CD/16 /CD/) so/RB/so /,/, let/VB/let me/PRP/me just/RB/just write/VBP/write this/DT/this term/NNP/term. so/RB/so /,/, my/PRP$/my claim/NN/claim is/VBZ/is or/CC/or what/WP/what i/PRP/i want/VBP/want to/TO/to examine/VB/examine is/VBZ/is the/DT/the optimal/JJ/optimal schedule/NN/schedule for/IN/for d/NN/d of/IN/of j/NN/j through/IN/through n/NN/n s/NNS/s h/VBP/h i/PRP/i m/VBP/m this/DT/this is/VBZ/is what/WP/what i/PRP/i want/VBP/want to/TO/to understand/VB/understand and/CC/and i/PRP/i want/VBP/want to/TO/to figure/VB/figure out/RP/out how/WRB/how what/WP/what will/MD/will the/DT/the optimal/JJ/optimal schedule/NN/schedule to/TO/to this/DT/this be/VB/be ?/./? so/RB/so /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to the/DT/the code/NN/code that/IN/that we/PRP/we wrote/VBD/wrote or/CC/or the/DT/the recursive/JJ/recursive algorithm/NN/algorithm that/WDT/that we/PRP/we wrote/NNP/wrote. and/CC/and we/PRP/we said/VBD/said that/IN/that the/DT/the optimal/JJ/optimal schedule/NN/schedule for/IN/for d/NN/d 1/CD/1 through/IN/through n/NN/n sh/NN/sh i/PRP/i m/VBP/m is/VBZ/is going/VBG/going to/TO/to be/VB/be one/CD/one of/IN/of these/DT/these 2/CD/2 now/RB/now /,/, one/CD/one of/IN/of these/DT/these 2/CD/2 /,/, when/WRB/when d/JJ/d is/VBZ/is passed/VBN/passed as/RB/as the/DT/the entire/JJ/entire array/NN/array is/VBZ/is this/DT/this /,/, but/CC/but only/RB/only when/WRB/when a/DT/a small/JJ/small smaller/NN/smaller range/NN/range is/VBZ/is passed/NNP/passed. so/RB/so /,/, the/DT/the first/JJ/first argument/NN/argument is/VBZ/is 1/CD/1 what/WP/what will/MD/will this/DT/this be/VB/be ?/./? so/RB/so /,/, the/DT/the first/JJ/first schedule/NN/schedule will/MD/will simply/RB/simply be/VB/be true/JJ/true concatenated/VBN/concatenated with/IN/with optschedule/NN/optschedule and/CC/and this/DT/this time/NN/time instead/RB/instead of/IN/of passing/VBG/passing 2/CD/2 through/IN/through n/NNP/n. i/PRP/i should/MD/should really/RB/really pass/VB/pass j/NN/j plus/CC/plus 1/CD/1 through/IN/through n/NN/n /,/, because/IN/because this/DT/this was/VBD/was just/RB/just dropping/VBG/dropping the/DT/the first/JJ/first element/NNP/element. so/RB/so /,/, if/IN/if i/PRP/i drop/VBP/drop the/DT/the first/JJ/first element/NN/element from/IN/from this/DT/this this/DT/this will/MD/will become/VB/become d/JJ/d of/IN/of j/NN/j plus/CC/plus 1/CD/1 through/IN/through n/NN/n s/NNS/s h/VBP/h i/PRP/i m/VBP/m what/WP/what about/IN/about this/DT/this ?/./? so/RB/so /,/, this/DT/this will/MD/will become/VB/become false/NN/false and/CC/and optsched/VBD/optsched d/VBN/d of/IN/of j/NN/j plus/CC/plus through/IN/through n/NN/n s/NNS/s h/VBP/h and/CC/and in/IN/in the/DT/the inventory/NN/inventory i/PRP/i should/MD/should really/RB/really remove/VB/remove what/WP/what was/VBD/was present/JJ/present on/IN/on day/NN/day 1/CD/1. so/RB/so /,/, or/CC/or not/RB/not on/IN/on day/NN/day 1/CD/1 /,/, but/CC/but on/IN/on day/NN/day j/NN/j and/CC/and i/PRP/i should/MD/should have/VB/have m/NN/m this/DT/this is/VBZ/is what/WP/what i/PRP/i should/MD/should have/NNP/have. here/RB/here instead/RB/instead of/IN/of inventory/NN/inventory being/VBG/being i/PRP/i i/PRP/i should/MD/should really/RB/really have/VB/have i/PRP/i minus/RB/minus d/JJ/d of/IN/of j/NN/j plus/CC/plus 1/CD/1 /,/, because/IN/because since/IN/since the/DT/the machine/NN/machine was/VBD/was on/IN/on the/DT/the first/JJ/first day/NN/day i/PRP/i had/VBD/had to/TO/to have/VB/have a/DT/a plus/NN/plus 1/CD/1 over/IN/over here/NNP/here. so/RB/so /,/, you/PRP/you can/MD/can see/VB/see that/IN/that this/DT/this is/VBZ/is a/DT/a this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what i/PRP/i have/VBP/have written/VBN/written over/IN/over here/NNP/here. so/RB/so /,/, true/JJ/true concatenated/VBN/concatenated with/IN/with optimal/JJ/optimal schedule/NN/schedule for/IN/for the/DT/the demands/NNS/demands d/VBD/d j/NN/j plus/CC/plus 1/CD/1 through/IN/through n/NN/n s/NNS/s h/VBP/h i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j plus/CC/plus 1/CD/1 and/CC/and true/JJ/true and/CC/and the/DT/the other/JJ/other schedule/NN/schedule which/WDT/which is/VBZ/is optimal/JJ/optimal schedule/NN/schedule false/NN/false concatenated/VBD/concatenated with/IN/with optimal/JJ/optimal schedule/NN/schedule of/IN/of d/NN/d j/NN/j plus/CC/plus 1/CD/1 through/IN/through s/NNS/s h/VBP/h i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j and/CC/and false/NNP/false. so/RB/so /,/, now/RB/now we/PRP/we understand/VBP/understand what/WP/what optimal/JJ/optimal schedule/NN/schedule is/NNP/is. so/RB/so /,/, we/PRP/we just/RB/just now/RB/now have/VBP/have to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the cost/NN/cost relationship/NN/relationship amongst/NN/amongst the/DT/the cost/NN/cost is/VBZ/is going/VBG/going to/TO/to be/VB/be ?/./? /-NONE-/( refer/VBP/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 20/CD/20 /CD/) so/RB/so /,/, c/NN/c j/NN/j i/PRP/i m/VBP/m is/VBZ/is simply/RB/simply the/DT/the cost/NN/cost of/IN/of this/NNP/this. so/RB/so /,/, what/WDT/what is/VBZ/is that/IN/that going/VBG/going to/TO/to be/VB/be well/RB/well this/DT/this is/VBZ/is the/DT/the least/JJS/least cost/NN/cost of/IN/of this/DT/this ?/./? so/RB/so /,/, c/NN/c j/NN/j i/PRP/i m/VBP/m better/RBR/better be/VB/be the/DT/the minimum/JJ/minimum cost/NN/cost of/IN/of the/DT/the cost/NN/cost of/IN/of these/DT/these 2/CD/2 schedules/NNP/schedules. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of these/DT/these 2/CD/2 schedules/NNS/schedules ?/./? well/RB/well /,/, the/DT/the first/JJ/first schedule/NN/schedule starts/VBZ/starts with/IN/with keeping/VBG/keeping the/DT/the machine/NN/machine on/IN/on day/NN/day 1/CD/1. so/RB/so /,/, here/RB/here there/EX/there is/VBZ/is some/DT/some potential/JJ/potential for/IN/for incurring/NN/incurring a/DT/a startup/NN/startup cost/NN/cost whether/IN/whether the/DT/the startup/NN/startup cost/NN/cost is/VBZ/is incurred/VBN/incurred depends/NNS/depends upon/IN/upon whether/IN/whether this/DT/this n/NN/n was/VBD/was on/IN/on or/CC/or off/IN/off or/CC/or true/JJ/true or/CC/or false/NN/false to/TO/to begin/VB/begin with/NNP/with. so/RB/so /,/, if/IN/if m/NN/m is/VBZ/is true/JJ/true then/RB/then there/RB/there is/VBZ/is no/DT/no startup/NN/startup cost/NN/cost or/CC/or the/DT/the startup/NN/startup cost/NN/cost is/VBZ/is 0/CD/0. if/IN/if n/NN/n is/VBZ/is false/NN/false then/RB/then the/DT/the startup/NN/startup cost/NN/cost is/VBZ/is s/NNP/s. so/RB/so /,/, this/DT/this expression/NN/expression which/WDT/which i/PRP/i have/VBP/have written/VBN/written down/RP/down over/IN/over here/RB/here is/VBZ/is to/TO/to be/VB/be understood/VBN/understood as/IN/as the/DT/the c/NN/c expression/NN/expression that/WDT/that is/VBZ/is the/DT/the c/NN/c expression/NN/expression mark/NN/mark true/NN/true value/NN/value colon/NN/colon false/NN/false value/NNP/value. so/RB/so /,/, if/IN/if m/NN/m is/VBZ/is true/JJ/true then/RB/then this/DT/this bracket/NN/bracket evaluates/VBZ/evaluates to/TO/to 0/-NONE-/0 otherwise/VB/otherwise it/PRP/it evaluates/VBZ/evaluates to/TO/to false/VB/false in/IN/in other/JJ/other words/NNS/words this/DT/this bracket/NN/bracket over/IN/over here/RB/here represents/VBZ/represents the/DT/the startup/NN/startup cost/NN/cost it/PRP/it is/VBZ/is either/DT/either 0/-NONE-/0 or/CC/or it/PRP/it is/VBZ/is depending/VBG/depending upon/IN/upon m/NNP/m. then/RB/then on/IN/on day/NN/day 1/CD/1 there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be some/DT/some inventory/NN/inventory cost/NNP/cost. so/RB/so /,/, this/DT/this inventory/NN/inventory cost/NN/cost is/VBZ/is given/VBN/given over/IN/over here/NNP/here. so/RB/so /,/, the/DT/the inventory/NN/inventory for/IN/for day/NN/day 1/CD/1 is/VBZ/is going/VBG/going to/TO/to be/VB/be this/DT/this whatever/NN/whatever the/DT/the inventory/NN/inventory subtract/NN/subtract whatever/NN/whatever was/VBD/was delivered/VBN/delivered on/IN/on d/JJ/d j/NN/j add/NN/add whatever/NN/whatever was/VBD/was produced/NNP/produced. so/RB/so /,/, times/NNS/times h/VBP/h will/MD/will be/VB/be the/DT/the inventory/NN/inventory cost/NN/cost and/CC/and then/RB/then there/RB/there is/VBZ/is a/DT/a residual/JJ/residual cost/NNP/cost. so/RB/so /,/, it/PRP/it is/VBZ/is just/RB/just the/DT/the cost/NN/cost of/IN/of this/DT/this part/NN/part of/IN/of the/DT/the schedule/NNP/schedule. but/CC/but this/DT/this part/NN/part of/IN/of the/DT/the schedule/NN/schedule the/DT/the cost/NN/cost of/IN/of this/DT/this is/VBZ/is simply/RB/simply c/JJ/c j/NN/j plus/CC/plus 1/CD/1 i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j plus/CC/plus 1/CD/1 true/NNP/true. so/RB/so /,/, we/PRP/we have/VBP/have related/VBN/related the/DT/the j/NN/j i/PRP/i mth/VBP/mth entry/NN/entry to/TO/to the/DT/the j/NN/j plus/VBZ/plus 1/CD/1 i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j plus/CC/plus 1/CD/1 2/CD/2 entry/NNP/entry. so/RB/so /,/, we/PRP/we have/VBP/have to/TO/to take/VB/take the/DT/the minimum/JJ/minimum of/IN/of this/DT/this quantity/NN/quantity and/CC/and this/DT/this quantity/NN/quantity and/CC/and in/IN/in this/DT/this case/NN/case the/DT/the computation/NN/computation of/IN/of the/DT/the cost/NN/cost is/VBZ/is actually/RB/actually simple/NNP/simple. because/IN/because there/EX/there is/VBZ/is since/IN/since the/DT/the machine/NN/machine is/VBZ/is off/RP/off on/IN/on the/DT/the first/JJ/first day/NN/day this/DT/this is/VBZ/is false/NN/false there/RB/there is/VBZ/is no/DT/no startup/NN/startup cost/NN/cost /,/, but/CC/but there/EX/there is/VBZ/is some/DT/some holding/VBG/holding cost/NNP/cost. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the holding/VBG/holding cost/NN/cost on/IN/on day/NN/day j/NN/j something/NN/something gets/VBZ/gets deleted/VBN/deleted the/DT/the inventory/NN/inventory gets/VBZ/gets reduced/VBN/reduced by/IN/by i/PRP/i minus/VBZ/minus d/JJ/d j/NNP/j. so/RB/so /,/, the/DT/the inventory/NN/inventory is/VBZ/is just/RB/just this/DT/this and/CC/and the/DT/the inventory/NN/inventory cost/NN/cost is/VBZ/is just/RB/just this/DT/this and/CC/and this/DT/this is/VBZ/is the/DT/the cost/NN/cost of/IN/of the/DT/the residual/JJ/residual problem/NNP/problem. so/RB/so /,/, now/RB/now /,/, we/PRP/we have/VBP/have a/DT/a recurrence/NN/recurrence connecting/VBG/connecting c/NN/c j/NN/j i/PRP/i m/VBP/m to/TO/to other/JJ/other entries/NNS/entries in/IN/in the/DT/the table/NNP/table. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the one/CD/one other/JJ/other entry/NN/entry and/CC/and this/DT/this is/VBZ/is 1/CD/1 other/JJ/other entry/NN/entry there/EX/there are/VBP/are some/DT/some problems/NNS/problems though/NNP/though. so/RB/so /,/, when/WRB/when we/PRP/we wrote/VBP/wrote down/RP/down these/DT/these numbers/NNS/numbers /,/, we/PRP/we did/VBD/did not/RB/not we/PRP/we have/VBP/have not/RB/not so/RB/so far/RB/far considered/VBN/considered the/DT/the possibility/NN/possibility that/IN/that i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j plus/CC/plus 1/CD/1 or/CC/or i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j might/MD/might become/VB/become negative/JJ/negative that/IN/that does/VBZ/does not/RB/not make/VB/make sense/NNP/sense. so/RB/so /,/, i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j plus/CC/plus 1/CD/1 or/CC/or i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j is/VBZ/is the/DT/the inventory/NNP/inventory. so/RB/so /,/, it/PRP/it does/VBZ/does not/RB/not make/VB/make sense/NN/sense for/IN/for the/DT/the inventory/NN/inventory to/TO/to become/VB/become negative/NNP/negative. so/RB/so /,/, we/PRP/we somehow/VBP/somehow have/VBP/have to/TO/to take/VB/take care/NN/care of/IN/of that/DT/that essentially/RB/essentially what/WP/what is/VBZ/is going/VBG/going to/TO/to happen/VB/happen is/VBZ/is what/WP/what should/MD/should happen/VB/happen is/VBZ/is that/IN/that we/PRP/we should/MD/should check/VB/check that/IN/that if/IN/if we/PRP/we want/VBP/want to/TO/to consider/VB/consider the/DT/the schedule/NNP/schedule. and/CC/and if/IN/if we/PRP/we are/VBP/are requiring/VBG/requiring that/IN/that i/PRP/i minus/VBZ/minus d/JJ/d j/NN/j plus/CC/plus 1/CD/1 be/VB/be negative/JJ/negative then/RB/then we/PRP/we should/MD/should not/RB/not really/RB/really be/VB/be considering/VBG/considering it/PRP/it at/IN/at all/DT/all and/CC/and we/PRP/we should/MD/should just/RB/just use/VB/use this/NNP/this. here/RB/here is/VBZ/is a/DT/a very/RB/very nice/JJ/nice fix/NN/fix to/TO/to this/DT/this a/DT/a simple/NN/simple fix/NNP/fix. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define c/NN/c j/NN/j c/NN/c of/IN/of j/NN/j i/PRP/i m/VBP/m to/TO/to be/VB/be infinity/NN/infinity if/IN/if i/PRP/i is/VBZ/is less/JJR/less than/IN/than 0/CD/0. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what this/DT/this does/VBZ/does ?/./? so/RB/so /,/, in/IN/in this/DT/this example/NN/example in/IN/in this/DT/this alternative/NN/alternative for/IN/for example/NN/example /,/, if/IN/if in/IN/in this/DT/this table/NN/table entry/NN/entry this/DT/this is/VBZ/is some/DT/some negative/JJ/negative number/NNP/number. so/RB/so /,/, we/PRP/we are/VBP/are asking/VBG/asking for/IN/for c/NN/c of/IN/of j/NN/j plus/CC/plus 1/CD/1 some/DT/some negative/JJ/negative number/NN/number true/JJ/true now/RB/now this/DT/this entry/NN/entry would/MD/would be/VB/be defined/VBN/defined as/IN/as infinity/NN/infinity which/WDT/which would/MD/would mean/VB/mean that/IN/that this/DT/this number/NN/number would/MD/would be/VB/be infinite/NNP/infinite. but/CC/but if/IN/if this/DT/this number/NN/number is/VBZ/is infinite/JJ/infinite then/RB/then this/DT/this entire/NN/entire cost/NN/cost would/MD/would be/VB/be infinite/NNP/infinite. but/CC/but since/IN/since we/PRP/we are/VBP/are taking/VBG/taking the/DT/the min/NN/min over/IN/over here/RB/here /,/, that/IN/that would/MD/would force/VB/force us/PRP/us to/TO/to look/VB/look at/IN/at this/DT/this cost/NNP/cost. so/RB/so /,/, essentially/RB/essentially we/PRP/we would/MD/would be/VB/be ignoring/VBG/ignoring this/DT/this cost/NNP/cost. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 39/CD/39 /:/: 00/CD/00 /CD/) so/RB/so /,/, by/IN/by defining/NN/defining c/NN/c j/NN/j i/PRP/i m/VBP/m equal/JJ/equal to/TO/to infinity/NN/infinity we/PRP/we are/VBP/are saving/VBG/saving ourselves/NNS/ourselves the/DT/the trouble/NN/trouble of/IN/of checking/NN/checking the/DT/the indices/NNS/indices are/VBP/are less/JJR/less than/IN/than 0/-NONE-/0 in/IN/in this/DT/this expression/NN/expression and/CC/and automatically/RB/automatically getting/VBG/getting the/DT/the same/JJ/same effect/NNP/effect. now/RB/now /,/, of/IN/of course/NN/course /,/, you/PRP/you might/MD/might ask/VB/ask if/IN/if we/PRP/we want/VBP/want to/TO/to do/VB/do this/DT/this for/IN/for all/DT/all i/PRP/i less/JJR/less than/IN/than 0/-NONE-/0 /,/, do/VBP/do we/PRP/we need/VBP/need to/TO/to consider/VB/consider a/DT/a infinite/JJ/infinite all/DT/all the/DT/the infinite/JJ/infinite negative/JJ/negative numbers/NNS/numbers for/IN/for i/PRP/i ?/./? well/RB/well /,/, we/PRP/we do/VBP/do not/RB/not and/CC/and there/EX/there is/VBZ/is a/DT/a simple/JJ/simple reason/NN/reason for/IN/for it/PRP/it /,/, remember/NN/remember that/IN/that the/DT/the demand/NN/demand on/IN/on any/DT/any day/NN/day can/MD/can not/RB/not be/VB/be bigger/JJR/bigger than/IN/than l/NNP/l. why/WRB/why if/IN/if the/DT/the demand/NN/demand is/VBZ/is bigger/JJR/bigger than/IN/than n/NN/n then/RB/then we/PRP/we can/MD/can not/RB/not fulfill/VB/fulfill that/IN/that instance/NN/instance anyway/NNP/anyway. and/CC/and so/RB/so /,/, we/PRP/we can/MD/can check/VB/check at/IN/at the/DT/the beginning/NN/beginning whether/IN/whether the/DT/the demand/NN/demand on/IN/on any/DT/any day/NN/day is/VBZ/is bigger/JJR/bigger than/IN/than n/NNP/n. in/IN/in which/WDT/which case/NN/case we/PRP/we just/RB/just reject/VBP/reject we/PRP/we just/RB/just say/VBP/say that/IN/that this/DT/this problem/NN/problem is/VBZ/is unsolvable/NNP/unsolvable. so/RB/so /,/, this/DT/this algorithm/NN/algorithm or/CC/or whatever/RB/whatever algorithm/NN/algorithm we/PRP/we are/VBP/are going/VBG/going to/TO/to design/VB/design will/MD/will only/RB/only be/VB/be called/VBN/called if/IN/if d/JJ/d of/IN/of j/NN/j is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n/NNP/n. but/CC/but if/IN/if d/JJ/d of/IN/of j/NN/j is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n/VB/n then/RB/then we/PRP/we are/VBP/are only/RB/only subtracting/VBG/subtracting n/NN/n from/IN/from whatever/NN/whatever has/VBZ/has to/TO/to be/VB/be a/DT/a positive/JJ/positive number/NN/number earlier/NNP/earlier. so/RB/so /,/, in/IN/in which/WDT/which case/NN/case it/PRP/it suffices/VBZ/suffices i/PRP/i is/VBZ/is bigger/JJR/bigger than/IN/than or/CC/or equal/JJ/equal to/TO/to minus/NN/minus n/NNP/n. so/RB/so /,/, we/PRP/we only/RB/only need/VBP/need to/TO/to consider/VB/consider i/PRP/i only/RB/only a/DT/a few/JJ/few negative/JJ/negative values/NNS/values of/IN/of n/NN/n that/IN/that is/VBZ/is values/NNS/values of/IN/of i/PRP/i that/IN/that is/VBZ/is values/NNS/values going/VBG/going from/IN/from minus/NN/minus l/NN/l to/TO/to minus/NN/minus n/NNP/n. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words our/PRP$/our table/JJ/table is/VBZ/is not/RB/not going/VBG/going to/TO/to become/VB/become too/RB/too large/JJ/large the/DT/the final/JJ/final problem/NN/problem that/IN/that we/PRP/we need/VBP/need to/TO/to consider/VB/consider is/VBZ/is the/DT/the base/NN/base keys/NNP/keys. so/RB/so /,/, we/PRP/we relate/VBP/relate entries/NNS/entries with/IN/with the/DT/the table/NN/table with/IN/with other/JJ/other entries/NNS/entries /,/, but/CC/but this/DT/this can/MD/can not/RB/not go/VB/go on/IN/on forever/NNP/forever. so/IN/so /,/, some/DT/some entries/NNS/entries we/PRP/we have/VBP/have to/TO/to set/VB/set ourselves/NNP/ourselves. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 39/CD/39 /CD/) so/RB/so /,/, these/DT/these are/VBP/are the/DT/the entries/NNS/entries for/IN/for the/DT/the last/JJ/last day/NN/day schedule/NNP/schedule. so/RB/so /,/, remember/NN/remember that/IN/that c/NN/c j/NN/j i/PRP/i m/VBP/m were/VBD/were the/DT/the indices/NNS/indices for/IN/for the/DT/the table/NN/table entries/NNP/entries. if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the last/JJ/last day/NN/day then/RB/then the/DT/the first/JJ/first index/NN/index over/IN/over here/RB/here should/MD/should be/VB/be n/NNP/n. so/RB/so /,/, in/IN/in this/DT/this case/NN/case we/PRP/we are/VBP/are asking/VBG/asking for/IN/for a/DT/a single/JJ/single day/NN/day schedule/NNP/schedule. so/RB/so /,/, we/PRP/we should/MD/should be/VB/be able/JJ/able to/TO/to set/VB/set this/DT/this without/IN/without much/RB/much doubt/NNP/doubt. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the idea/NN/idea if/IN/if we/PRP/we want/VBP/want to/TO/to figure/VB/figure out/RP/out what/WP/what c/NN/c i/PRP/i and/CC/and m/VB/m are/VBP/are to/TO/to be/VB/be and/CC/and we/PRP/we need/VBP/need to/TO/to figure/VB/figure whether/IN/whether there/EX/there is/VBZ/is a/DT/a legal/JJ/legal schedule/NNP/schedule. so/RB/so /,/, the/DT/the main/JJ/main condition/NN/condition over/IN/over here/RB/here is/VBZ/is that/IN/that whatever/NN/whatever inventory/NN/inventory we/PRP/we come/VBP/come in/IN/in with/IN/with should/MD/should not/RB/not be/VB/be too/RB/too large/JJ/large or/CC/or should/MD/should not/RB/not be/VB/be too/RB/too small/NNP/small. if/IN/if it/PRP/it is/VBZ/is too/RB/too large/JJ/large then/RB/then even/RB/even after/IN/after satisfying/VBG/satisfying the/DT/the demand/NN/demand we/PRP/we will/MD/will be/VB/be left/VBN/left with/IN/with inventory/NN/inventory and/CC/and that/IN/that is/VBZ/is illegal/JJ/illegal that/IN/that will/MD/will not/RB/not constitute/VB/constitute a/DT/a valid/JJ/valid schedule/NNP/schedule. if/IN/if it/PRP/it is/VBZ/is too/RB/too little/JJ/little we/PRP/we may/MD/may not/RB/not be/VB/be able/JJ/able to/TO/to satisfy/VB/satisfy d/JJ/d of/IN/of n/NN/n at/IN/at all/NNP/all. so/RB/so /,/, the/DT/the inventory/NN/inventory should/MD/should be/VB/be just/RB/just enough/RB/enough to/TO/to satisfy/VB/satisfy the/DT/the last/JJ/last day/NN/day ?/./? s/NNS/s demand/NNP/demand. so/RB/so /,/, very/RB/very simply/RB/simply if/IN/if i/PRP/i is/VBZ/is the/DT/the last/JJ/last day/NN/day ?/./? s/NNS/s demand/NN/demand if/IN/if i/PRP/i takes/VBZ/takes the/DT/the value/NN/value last/JJ/last demand/NN/demand then/RB/then we/PRP/we should/MD/should run/VB/run with/IN/with the/DT/the machine/NN/machine we/PRP/we should/MD/should not/RB/not produce/VB/produce anymore/RB/anymore units/NNS/units and/NNP/and. so/RB/so /,/, in/IN/in that/DT/that the/DT/the cost/NN/cost for/IN/for the/DT/the last/JJ/last day/NN/day is/VBZ/is simply/RB/simply 0/CD/0. so/RB/so /,/, c/NN/c of/IN/of n/NN/n i/PRP/i m/VBP/m must/MD/must be/VB/be 0/-NONE-/0 if/IN/if i/PRP/i is/VBZ/is equal/JJ/equal to/TO/to d/VB/d of/IN/of n/NN/n if/IN/if on/IN/on the/DT/the other/JJ/other hand/NN/hand the/DT/the inventory/NN/inventory is/VBZ/is just/RB/just 1/CD/1 less/JJR/less as/IN/as we/PRP/we come/VBP/come into/IN/into the/DT/the nth/JJ/nth day/NNP/day. then/RB/then what/WP/what the/DT/the demand/NN/demand is/VBZ/is then/RB/then we/PRP/we would/MD/would better/VB/better produce/VB/produce to/TO/to make/VB/make up/RP/up the/DT/the inventory/NN/inventory that/IN/that we/PRP/we want/VBP/want to/TO/to deliver/VB/deliver whatever/NN/whatever is/VBZ/is needed/VBN/needed to/TO/to be/VB/be delivered/NNP/delivered. so/RB/so /,/, we/PRP/we will/MD/will have/VB/have the/DT/the machine/NN/machine be/VB/be on/IN/on and/CC/and now/RB/now for/IN/for the/DT/the last/JJ/last day/NN/day we/PRP/we need/VBP/need to/TO/to run/VB/run the/DT/the machine/NNP/machine. so/RB/so /,/, our/PRP$/our cost/NN/cost is/VBZ/is going/VBG/going to/TO/to be/VB/be 0/-NONE-/0 if/IN/if the/DT/the machine/NN/machine was/VBD/was already/RB/already off/RP/off was/VBD/was already/RB/already on/IN/on and/CC/and s/NNS/s if/IN/if the/DT/the machine/NN/machine was/VBD/was off/NNP/off. so/RB/so /,/, this/DT/this is/VBZ/is again/RB/again the/DT/the c/NN/c style/NN/style expression/NN/expression which/WDT/which evaluates/VBZ/evaluates to/TO/to either/DT/either 0/-NONE-/0 or/CC/or s/NNS/s for/IN/for all/DT/all other/JJ/other values/NNS/values of/IN/of i/PRP/i other/JJ/other than/IN/than d/JJ/d n/NN/n and/CC/and d/VBD/d n/NN/n minus/NN/minus 1/CD/1. this/DT/this means/VBZ/means that/IN/that we/PRP/we have/VBP/have too/RB/too much/RB/much inventory/NN/inventory or/CC/or too/RB/too little/JJ/little inventory/NN/inventory in/IN/in which/WDT/which case/NN/case we/PRP/we should/MD/should set/VB/set the/DT/the cost/NN/cost to/TO/to be/VB/be infinite/NNP/infinite. so/RB/so /,/, that/IN/that takes/VBZ/takes care/NN/care of/IN/of the/DT/the best/JJS/best case/NN/case as/RB/as well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 23/CD/23 /CD/) so/RB/so /,/, let/VB/let me/PRP/me pictorially/RB/pictorially show/VBP/show what/WP/what has/VBZ/has happened/VBN/happened here/RB/here or/CC/or let/VB/let me/PRP/me pictorially/RB/pictorially show/VBP/show whatever/RB/whatever table/JJ/table is/VBZ/is going/VBG/going to/TO/to look/VB/look like/NNP/like. so/RB/so /,/, our/PRP$/our table/JJ/table is/VBZ/is going/VBG/going to/TO/to look/VB/look like/IN/like something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, on/IN/on this/DT/this axis/NN/axis i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have the/DT/the days/NNS/days on/IN/on this/DT/this axis/NN/axis or/CC/or this/DT/this is/VBZ/is where/WRB/where how/WRB/how j/NN/j is/VBZ/is going/VBG/going to/TO/to vary/VB/vary on/IN/on this/DT/this axis/NN/axis i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have inventory/NN/inventory /./. so/RB/so /,/, this/DT/this is/VBZ/is inventory/NN/inventory greater/NN/greater than/IN/than 0/-NONE-/0 on/IN/on this/DT/this side/NN/side i/PRP/i have/VBP/have i/PRP/i less/JJR/less than/IN/than 0/-NONE-/0 and/CC/and on/IN/on this/DT/this axis/NN/axis into/IN/into the/DT/the page/NN/page if/IN/if you/PRP/you will/MD/will i/VB/i will/MD/will have/VB/have m/NN/m /./. so/RB/so /,/, this/DT/this corresponds/NNS/corresponds to/TO/to say/VB/say on/IN/on and/CC/and this/DT/this corresponds/NNS/corresponds to/TO/to off/NNP/off. so/RB/so /,/, i/PRP/i will/MD/will draw/VB/draw the/DT/the off/NN/off in/IN/in a/DT/a different/JJ/different color/NNP/color. so/RB/so /,/, it/PRP/it will/MD/will look/VB/look something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, there/EX/there will/MD/will sort/VB/sort of/IN/of 2/CD/2 sheets/NNP/sheets. so/RB/so /,/, even/RB/even the/DT/the second/JJ/second sheet/NNP/sheet. so/RB/so /,/, our/PRP$/our table/JJ/table is/VBZ/is going/VBG/going to/TO/to look/VB/look something/NN/something like/IN/like this/DT/this now/RB/now how/WRB/how did/VBD/did we/PRP/we fill/VBP/fill the/DT/the table/NN/table ?/./? well/RB/well /,/, in/IN/in this/DT/this case/NN/case we/PRP/we looked/VBD/looked at/IN/at the/DT/the last/JJ/last column/NN/column on/IN/on the/DT/the days/NNS/days side/NNP/side. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we filled/VBD/filled out/RP/out all/DT/all right/NNP/right. so/RB/so /,/, this/DT/this part/NN/part we/PRP/we filled/VBD/filled out/NNP/out. so/RB/so /,/, this/DT/this is/VBZ/is nth/JJ/nth day/NN/day and/CC/and this/DT/this in/IN/in the/DT/the second/JJ/second part/NN/part in/IN/in the/DT/the off/NN/off side/NN/side also/RB/also we/PRP/we filled/VBD/filled it/PRP/it out/NNP/out. so/RB/so /,/, these/DT/these values/NNS/values are/VBP/are known/VBN/known then/RB/then /,/, because/IN/because of/IN/of this/DT/this we/PRP/we divided/VBD/divided c/NN/c j/NN/j i/PRP/i m/VBP/m equal/JJ/equal to/TO/to infinity/NN/infinity where/WRB/where ever/RB/ever i/PRP/i was/VBD/was 0/CD/0. we/PRP/we have/VBP/have also/RB/also filled/VBN/filled this/DT/this out/RP/out this/DT/this part/NNP/part. so/RB/so /,/, these/DT/these parts/NNS/parts are/VBP/are filled/VBN/filled out/RP/out to/TO/to begin/VB/begin with/IN/with by/IN/by very/RB/very simple/JJ/simple ideas/NNP/ideas. so/RB/so /,/, the/DT/the recursion/NN/recursion part/NN/part comes/VBZ/comes only/RB/only for/IN/for this/DT/this part/NN/part and/CC/and this/DT/this part/NN/part over/IN/over here/NNP/here. so/RB/so /,/, how/WRB/how is/VBZ/is that/DT/that filled/VBN/filled ?/./? well/RB/well that/IN/that is/VBZ/is filled/VBN/filled using/VBG/using these/DT/these expressions/NNP/expressions. so/RB/so /,/, essentially/RB/essentially if/IN/if i/PRP/i want/VBP/want to/TO/to fill/VB/fill this/DT/this entry/NN/entry what/WP/what am/NN/am i/PRP/i going/VBG/going to/TO/to use/NNP/use. well/RB/well /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use some/DT/some entry/NN/entry in/IN/in the/DT/the j/NN/j plus/VBZ/plus 1/CD/1 th/NN/th column/NN/column some/DT/some value/NN/value from/IN/from this/DT/this column/NN/column and/CC/and also/RB/also the/DT/the corresponding/NN/corresponding column/NN/column of/IN/of the/DT/the off/NN/off side/NN/side on/IN/on the/DT/the /,/, of/IN/of the/DT/the machine/NN/machine being/VBG/being off/RP/off /,/, because/IN/because i/PRP/i am/VBP/am getting/VBG/getting c/NN/c j/NN/j plus/CC/plus 1/CD/1 true/JJ/true and/CC/and c/NN/c j/NN/j plus/CC/plus 1/CD/1 and/CC/and false/NN/false as/IN/as well/NNP/well. so/RB/so /,/, this/DT/this entry/NN/entry depends/VBZ/depends upon/IN/upon the/DT/the next/JJ/next column/NNP/column. so/RB/so /,/, now/RB/now our/PRP$/our calculation/NN/calculation is/VBZ/is quite/RB/quite straight/JJ/straight forward/NNP/forward. so/RB/so /,/, this/DT/this part/NN/part is/VBZ/is already/RB/already been/VBN/been filled/VBN/filled up/RP/up easily/RB/easily by/IN/by the/DT/the last/JJ/last 2/CD/2 days/NNS/days calculation/NN/calculation and/CC/and by/IN/by this/DT/this calculation/NNP/calculation. and/CC/and then/RB/then to/TO/to fill/VB/fill each/DT/each entry/NN/entry we/PRP/we will/MD/will just/RB/just use/VB/use this/DT/this expression/NN/expression and/CC/and this/DT/this entry/NN/entry can/MD/can be/VB/be filled/VBN/filled in/IN/in constant/JJ/constant time/NN/time as/IN/as i/PRP/i have/VBP/have seen/VBN/seen over/IN/over here/RB/here as/IN/as i/PRP/i have/VBP/have shown/VBN/shown over/IN/over here/NNP/here. so/RB/so /,/, basically/RB/basically the/DT/the idea/NN/idea is/VBZ/is that/IN/that we/PRP/we fill/VBP/fill the/DT/the entire/JJ/entire table/NN/table in/IN/in decreasing/NN/decreasing order/NN/order of/IN/of j/NNP/j. so/RB/so /,/, we/PRP/we start/VBP/start from/IN/from here/RB/here and/CC/and go/VB/go backwards/NNS/backwards and/CC/and we/PRP/we fill/MD/fill in/IN/in the/DT/the table/NNP/table. so/RB/so /,/, the/DT/the number/NN/number of/IN/of entries/NNS/entries here/RB/here well/RB/well let/VB/let us/PRP/us calculate/VB/calculate that/IN/that carefully/RB/carefully j/VBP/j ranges/NNS/ranges from/IN/from 1/CD/1 to/TO/to n/NNP/n. so/RB/so /,/, here/RB/here it/PRP/it is/VBZ/is 1/CD/1 and/CC/and here/RB/here it/PRP/it is/VBZ/is n/VBN/n i/PRP/i goes/VBZ/goes from/IN/from minus/NN/minus n/NN/n and/CC/and it/PRP/it goes/VBZ/goes all/DT/all the/DT/the way/NN/way to/TO/to plus/RB/plus n/NNP/n. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 20/CD/20 /CD/) so/RB/so /,/, there/EX/there are/VBP/are 2/CD/2 n/NN/n plus/CC/plus values/NNS/values for/IN/for i/PRP/i and/CC/and m/VB/m can/MD/can be/VB/be on/IN/on or/CC/or off/NNP/off. so/RB/so /,/, there/EX/there are/VBP/are only/RB/only 2/CD/2 values/NNS/values of/IN/of m/NNP/m. so/RB/so /,/, that/IN/that total/JJ/total number/NN/number of/IN/of entries/NNS/entries in/IN/in the/DT/the table/NN/table is/VBZ/is just/RB/just all/DT/all possible/JJ/possible choices/NNS/choices for/IN/for j/NN/j all/DT/all possible/JJ/possible choices/NNS/choices for/IN/for i/PRP/i and/CC/and all/DT/all possible/JJ/possible choices/NNS/choices for/IN/for n/NNP/n. so/RB/so /,/, n/IN/n times/NNS/times 2/CD/2 n/NN/n plus/CC/plus 1/CD/1 times/NNS/times 2/CD/2 or/CC/or o/CD/o of/IN/of n/NN/n square/NN/square time/NN/time to/TO/to fill/VB/fill each/DT/each entry/NN/entry our/PRP$/our recurrence/NN/recurrence can/MD/can be/VB/be evaluated/VBN/evaluated in/IN/in constant/JJ/constant time/NN/time or/CC/or each/DT/each single/JJ/single step/NN/step can/MD/can be/VB/be evaluated/VBN/evaluated in/IN/in constant/JJ/constant time/NNP/time. so/RB/so /,/, that/IN/that is/VBZ/is o/RB/o of/IN/of 1/CD/1 and/CC/and as/IN/as a/DT/a result/NN/result the/DT/the total/NN/total time/NN/time is/VBZ/is o/RB/o of/IN/of n/NN/n square/NNP/square. so/RB/so /,/, we/PRP/we will/MD/will fill/VB/fill the/DT/the entire/JJ/entire table/NN/table in/IN/in o/NN/o of/IN/of n/NN/n square/NN/square time/NN/time we/PRP/we should/MD/should ask/VB/ask well/RB/well we/PRP/we have/VBP/have filled/VBN/filled this/DT/this table/NN/table /,/, but/CC/but which/WDT/which part/NN/part is/VBZ/is the/DT/the 1/CD/1 that/WDT/that we/PRP/we want/NNP/want. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 19/CD/19 /CD/) so/RB/so /,/, coming/VBG/coming back/RB/back to/TO/to this/DT/this ;/:/; this/DT/this is/VBZ/is the/DT/the entry/NN/entry which/WDT/which we/PRP/we want/NNP/want. so/RB/so /,/, at/IN/at the/DT/the end/NN/end this/DT/this is/VBZ/is our/PRP$/our final/JJ/final answer/NN/answer or/CC/or i/PRP/i am/VBP/am sorry/JJ/sorry not/RB/not this/DT/this it/PRP/it is/VBZ/is this/DT/this /,/, this/DT/this is/VBZ/is the/DT/the final/JJ/final answer/NN/answer or/CC/or the/DT/the optimal/JJ/optimal cost/NN/cost is/VBZ/is found/VBN/found in/IN/in entry/NN/entry 1/CD/1 0/-NONE-/0 falls/NNS/falls of/IN/of the/DT/the table/NNP/table. so/RB/so /,/, 1/CD/1 is/VBZ/is the/DT/the j/NN/j value/NN/value 0/-NONE-/0 is/VBZ/is the/DT/the /,/, i/PRP/i value/NNP/value. so/RB/so /,/, it/PRP/it is/VBZ/is this/DT/this entry/NN/entry on/IN/on this/DT/this axis/NN/axis itself/PRP/itself and/CC/and it/PRP/it is/VBZ/is in/IN/in the/DT/the off/NN/off or/CC/or the/DT/the false/NN/false side/NNP/side. so/RB/so /,/, this/DT/this just/RB/just says/VBZ/says what/WP/what is/VBZ/is the/DT/the cost/NN/cost of/IN/of generating/VBG/generating a/DT/a schedule/NN/schedule for/IN/for the/DT/the entire/JJ/entire demand/NN/demand ?/./? given/VBN/given that/IN/that there/EX/there is/VBZ/is no/DT/no inventory/NN/inventory to/TO/to begin/VB/begin with/IN/with and/CC/and that/IN/that the/DT/the machine/NN/machine is/VBZ/is off/NNP/off. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 12/CD/12 /CD/) the/DT/the final/JJ/final topic/JJ/topic is/VBZ/is how/WRB/how do/VBP/do we/PRP/we find/VBP/find out/RP/out /,/, how/WRB/how do/VBP/do i/PRP/i find/VBP/find the/DT/the schedule/NN/schedule given/VBN/given the/DT/the table/JJ/table ?/./? so/RB/so /,/, remember/NN/remember that/IN/that c/NN/c 1/CD/1 off/IN/off was/VBD/was the/DT/the cost/NN/cost of/IN/of the/DT/the schedule/NNP/schedule. now/RB/now /,/, this/DT/this cost/NN/cost is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a minimum/JJ/minimum of/IN/of some/DT/some costs/NNS/costs which/WDT/which costs/NNS/costs well/RB/well /,/, we/PRP/we note/VBP/note we/PRP/we noted/VBD/noted that/IN/that if/IN/if i/PRP/i want/VBP/want to/TO/to calculate/VB/calculate this/DT/this cost/NN/cost it/PRP/it is/VBZ/is the/DT/the minimum/JJ/minimum of/IN/of some/DT/some cost/NN/cost in/IN/in this/DT/this and/CC/and some/DT/some cost/NN/cost in/IN/in the/DT/the corresponding/NN/corresponding column/NN/column over/IN/over here/NNP/here. so/RB/so /,/, c/NN/c 1/CD/1 off/IN/off would/MD/would be/VB/be the/DT/the minimum/JJ/minimum of/IN/of some/DT/some expression/NN/expression involving/VBG/involving some/DT/some column/NN/column some/DT/some element/NN/element in/IN/in the/DT/the next/JJ/next column/NN/column on/IN/on the/DT/the off/NN/off side/NN/side as/IN/as well/RB/well as/IN/as in/IN/in the/DT/the next/JJ/next column/NN/column on/IN/on the/DT/the on/IN/on side/NNP/side. so/IN/so /,/, we/PRP/we simply/RB/simply check/VBP/check whether/IN/whether c/NN/c 1/CD/1 is/VBZ/is equal/JJ/equal to/TO/to the/DT/the first/JJ/first term/NN/term or/CC/or the/DT/the second/JJ/second term/NN/term it/PRP/it is/VBZ/is the/DT/the minimum/NNP/minimum. so/RB/so /,/, it/PRP/it should/MD/should at/IN/at least/JJS/least be/VB/be equal/JJ/equal to/TO/to at/IN/at least/JJS/least one/CD/one of/IN/of these/NNP/these. if/IN/if c/NN/c 1/CD/1 off/IN/off is/VBZ/is equal/JJ/equal to/TO/to the/DT/the first/JJ/first term/NN/term what/WP/what do/VBP/do we/PRP/we know/VB/know ?/./? we/PRP/we know/VBP/know that/IN/that this/DT/this must/MD/must be/VB/be generated/VBN/generated by/IN/by keeping/NN/keeping the/DT/the by/IN/by using/VBG/using the/DT/the first/JJ/first term/NN/term or/CC/or by/IN/by keeping/NN/keeping the/DT/the machine/NN/machine on/IN/on during/IN/during day/NN/day 1/CD/1. if/IN/if this/DT/this term/NN/term is/VBZ/is equal/JJ/equal to/TO/to the/DT/the second/JJ/second term/NN/term over/IN/over here/RB/here then/RB/then the/DT/the machine/NN/machine should/MD/should be/VB/be off/RP/off on/IN/on that/DT/that first/JJ/first day/NNP/day. so/RB/so /,/, in/IN/in this/DT/this way/NN/way by/IN/by knowing/NN/knowing the/DT/the optimal/JJ/optimal cost/NN/cost we/PRP/we were/VBD/were able/JJ/able to/TO/to and/CC/and knowing/VBG/knowing the/DT/the table/NN/table we/PRP/we were/VBD/were able/JJ/able to/TO/to figure/VB/figure out/RP/out whether/IN/whether the/DT/the machine/NN/machine should/MD/should be/VB/be on/IN/on or/CC/or off/IN/off on/IN/on the/DT/the first/JJ/first day/NNP/day. and/CC/and we/PRP/we are/VBP/are also/RB/also able/JJ/able to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the corresponding/VBG/corresponding entry/NN/entry for/IN/for the/DT/the optimal/JJ/optimal schedule/NN/schedule for/IN/for the/DT/the residual/JJ/residual plan/NN/plan is/VBZ/is is/VBZ/is it/PRP/it this/DT/this or/CC/or is/VBZ/is it/PRP/it this/DT/this so/RB/so /,/, then/RB/then we/PRP/we can/MD/can apply/VB/apply this/DT/this argument/NN/argument again/RB/again and/CC/and again/RB/again and/CC/and will/MD/will get/VB/get machine/NN/machine status/NN/status for/IN/for every/DT/every day/NN/day and/CC/and will/MD/will does/VBZ/does generate/VB/generate the/DT/the entire/JJ/entire schedule/NNP/schedule. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now conclude/NNP/conclude. so/RB/so /,/, in/IN/in this/DT/this problem/NN/problem in/IN/in today/NN/today ?/./? s/NNS/s lecture/VBP/lecture we/PRP/we saw/VBD/saw another/DT/another problem/NN/problem for/IN/for which/WDT/which dynamic/JJ/dynamic programming/NN/programming could/MD/could be/VB/be used/VBN/used before/IN/before using/VBG/using the/DT/the dynamic/JJ/dynamic programming/NNP/programming. there/RB/there was/VBD/was a/DT/a important/JJ/important step/NN/step that/WDT/that we/PRP/we took/VBD/took which/WDT/which is/VBZ/is quietly/RB/quietly an/DT/an important/JJ/important and/CC/and interesting/JJ/interesting step/NN/step very/RB/very often/RB/often we/PRP/we are/VBP/are given/VBN/given problems/NNS/problems for/IN/for which/WDT/which to/TO/to device/NN/device recursive/VB/recursive algorithm/NN/algorithm a/DT/a we/PRP/we need/VBP/need to/TO/to generalize/VB/generalize the/DT/the problem/NN/problem formation/NN/formation itself/NNP/itself. so/RB/so /,/, here/RB/here is/VBZ/is 1/CD/1 such/JJ/such example/NN/example you/PRP/you must/MD/must have/VB/have seen/VBN/seen similar/JJ/similar example/NN/example in/IN/in another/DT/another problem/NN/problem which/WDT/which was/VBD/was the/DT/the problem/NN/problem of/IN/of medium/NN/medium finding/NNP/finding. if/IN/if we/PRP/we want/VBP/want to/TO/to device/NN/device a/DT/a recursive/JJ/recursive algorithm/NN/algorithm for/IN/for medium/NN/medium finding/VBG/finding well/RB/well /,/, we/PRP/we can/MD/can not/RB/not do/VB/do that/DT/that very/RB/very easily/RB/easily or/CC/or very/RB/very simply/NNP/simply. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do instead/RB/instead is/VBZ/is we/PRP/we generalize/VBP/generalize the/DT/the problem/NN/problem and/CC/and ask/NN/ask for/IN/for recursive/JJ/recursive algorithm/NN/algorithm for/IN/for finding/NN/finding the/DT/the arc/NN/arc smallest/NNP/smallest. so/RB/so /,/, some/DT/some similar/JJ/similar issue/NN/issue was/VBD/was applicable/JJ/applicable here/RB/here as/IN/as well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 59/CD/59 /CD/) i/PRP/i would/MD/would like/VB/like to/TO/to make/VB/make a/DT/a comment/NN/comment on/IN/on dynamic/JJ/dynamic programming/NN/programming and/CC/and the/DT/the comment/NN/comment is/VBZ/is simply/RB/simply the/DT/the dynamic/JJ/dynamic programming/NN/programming can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as recursion/NN/recursion a/DT/a basic/JJ/basic idea/NNP/idea. the/DT/the basic/JJ/basic idea/NN/idea the/DT/the first/JJ/first basic/JJ/basic idea/NN/idea /,/, basic/JJ/basic idea/NN/idea is/VBZ/is recursion/NN/recursion and/CC/and the/DT/the next/JJ/next idea/NN/idea is/VBZ/is make/VB/make sure/JJ/sure that/IN/that you/PRP/you compute/VBP/compute every/DT/every value/NN/value only/RB/only once/NNP/once. and/CC/and our/PRP$/our table/JJ/table essentially/RB/essentially made/VBN/made as/IN/as focus/NN/focus on/IN/on what/WP/what values/NNS/values we/PRP/we were/VBD/were computing/VBG/computing and/CC/and we/PRP/we were/VBD/were and/CC/and we/PRP/we thereby/VBP/thereby we/PRP/we could/MD/could only/RB/only calculate/VB/calculate we/PRP/we can/MD/can make/VB/make sure/JJ/sure that/IN/that we/PRP/we have/VBP/have calculated/VBN/calculated every/DT/every value/NN/value only/RB/only once/NNP/once. finally/RB/finally i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to i/PRP/i would/MD/would like/VB/like to/TO/to draw/VB/draw your/PRP$/your attention/NN/attention to/TO/to recursion/NN/recursion itself/PRP/itself and/CC/and point/NN/point out/RP/out that/IN/that when/WRB/when we/PRP/we use/VBP/use recursion/NN/recursion in/IN/in search/NN/search problem/NN/problem in/IN/in any/DT/any search/NN/search problems/NNP/problems. it/PRP/it can/MD/can be/VB/be thought/VBN/thought as/IN/as a/DT/a divide/NN/divide and/CC/and conquer/NN/conquer of/IN/of the/DT/the search/NN/search space/NNP/space. so/RB/so /,/, with/IN/with that/DT/that i/PRP/i will/MD/will conclude/VB/conclude this/DT/this lecture/NNP/lecture. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 22/CD/22 average/JJ/average case/NN/case analysis/NN/analysis of/IN/of quicksort/NN/quicksort welcome/NN/welcome to/TO/to another/DT/another lecture/NN/lecture on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. our/PRP$/our topic/JJ/topic for/IN/for today/NN/today is/VBZ/is average/JJ/average case/NN/case analysis/NN/analysis of/IN/of quick/JJ/quick sort/NNP/sort. let/NN/let us/PRP/us begin/VBP/begin by/IN/by discussing/VBG/discussing average/JJ/average case/NN/case analysis/NNP/analysis. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 07/CD/07 /CD/) let/NN/let suppose/NN/suppose a/DT/a be/NN/be an/DT/an algorithm/NNP/algorithm. q/NN/q is/VBZ/is the/DT/the set/NN/set of/IN/of input/NN/input instances/NNS/instances of/IN/of a/NNP/a. and/CC/and let/VB/let us/PRP/us make/VB/make it/PRP/it /,/, make/VBP/make q/NN/q be/VB/be a/DT/a function/NN/function of/IN/of n/NNP/n. so/RB/so /,/, q/NN/q of/IN/of n/NN/n is/VBZ/is a/DT/a set/NN/set of/IN/of instances/NNS/instances of/IN/of instances/NNS/instances for/IN/for algorithm/NN/algorithm a/DT/a of/IN/of length/NN/length n/NNP/n. t/NN/t sub/NN/sub a/DT/a of/IN/of q/NN/q is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by a/DT/a on/IN/on instance/NN/instance q/NNP/q. given/NN/given this/DT/this /,/, you/PRP/you can/MD/can define/VB/define the/DT/the average/JJ/average time/NN/time taken/VBN/taken by/IN/by a/DT/a on/IN/on inputs/NNS/inputs of/IN/of size/NN/size n/NN/n /,/, which/WDT/which we/PRP/we might/MD/might write/VB/write down/RP/down as/IN/as m/NN/m sub/NN/sub a/DT/a of/IN/of n/NNP/n. m/NN/m could/MD/could be/VB/be interpreted/VBN/interpreted as/IN/as mean/JJ/mean for/IN/for example/NNP/example. and/CC/and m/NN/m sub/NN/sub a/DT/a of/IN/of n/NN/n is/VBZ/is defined/VBN/defined as/RB/as sum/NN/sum over/IN/over all/DT/all instances/NNS/instances in/IN/in the/DT/the set/NN/set q/NN/q of/IN/of n/NNP/n. or/CC/or sum/NN/sum over/IN/over all/DT/all instances/NNS/instances of/IN/of size/NN/size n/NN/n of/IN/of the/DT/the time/NN/time taken/VBN/taken by/IN/by those/DT/those instances/NNS/instances /,/, divided/VBD/divided by/IN/by the/DT/the total/JJ/total number/NN/number of/IN/of instances/NNP/instances. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the usual/JJ/usual definition/NN/definition of/IN/of what/WP/what we/PRP/we mean/VBP/mean by/IN/by an/DT/an average/NNP/average. this/DT/this is/VBZ/is not/RB/not the/DT/the most/RBS/most popular/JJ/popular definition/NN/definition of/IN/of course/NNP/course. the/DT/the definition/NN/definition we/PRP/we usually/RB/usually use/VBP/use is/VBZ/is the/DT/the so/RB/so called/VBN/called worst/JJ/worst case/NN/case measure/NNP/measure. here/RB/here the/DT/the worst/JJS/worst case/NN/case time/NN/time of/IN/of an/DT/an algorithm/NN/algorithm a/DT/a on/IN/on problems/NNS/problems of/IN/of size/NN/size n/NN/n /,/, is/VBZ/is defined/VBN/defined as/RB/as the/DT/the maximum/NN/maximum over/IN/over all/DT/all q/NN/q of/IN/of this/NNP/this. the/DT/the maximum/NN/maximum time/NN/time taken/VBN/taken by/IN/by any/DT/any input/NN/input instance/NN/instance of/IN/of size/NN/size n/NN/n is/VBZ/is defined/VBN/defined as/RB/as /,/, the/DT/the usual/JJ/usual measure/NN/measure or/CC/or the/DT/the worst/JJS/worst case/NN/case time/NNP/time. there/EX/there are/VBP/are several/JJ/several reasons/NNS/reasons for/IN/for doing/VBG/doing this/NNP/this. worst/JJS/worst case/NN/case is/VBZ/is usually/RB/usually easier/JJR/easier to/TO/to compute/VB/compute than/IN/than this/DT/this average/NNP/average. when/WRB/when we/PRP/we talk/VBP/talk about/IN/about the/DT/the average/NN/average /,/, in/IN/in some/DT/some ways/NNS/ways we/PRP/we have/VBP/have to/TO/to talk/VB/talk about/IN/about all/DT/all input/NN/input instances/NNP/instances. whereas/IN/whereas /,/, often/RB/often it/PRP/it is/VBZ/is easier/JJR/easier to/TO/to deduce/VB/deduce what/WP/what the/DT/the worst/JJS/worst instance/NN/instance is/VBZ/is going/VBG/going to/TO/to be/NNP/be. and/CC/and /,/, then/RB/then we/PRP/we can/MD/can just/RB/just worry/VB/worry about/IN/about that/NNP/that. for/IN/for many/JJ/many algorithms/NNS/algorithms /,/, most/JJS/most of/IN/of the/DT/the inputs/NNS/inputs behave/VBP/behave like/IN/like the/DT/the worst/JJS/worst input/NN/input anyway/NNP/anyway. so/RB/so /,/, in/IN/in which/WDT/which case/NN/case it/PRP/it does/VBZ/does not/RB/not really/RB/really matter/JJR/matter /,/, it/PRP/it is/VBZ/is not/RB/not really/RB/really necessary/JJ/necessary to/TO/to take/VB/take the/DT/the average/JJ/average in/IN/in any/DT/any case/NNP/case. very/RB/very often/RB/often may/MD/may be/VB/be perhaps/RB/perhaps /,/, the/DT/the average/JJ/average case/NN/case is/VBZ/is easy/JJ/easy to/TO/to compute/VB/compute if/IN/if at/IN/at all/NNP/all. and/CC/and it/PRP/it might/MD/might still/RB/still not/RB/not be/VB/be preferable/JJ/preferable /,/, it/PRP/it might/MD/might still/RB/still not/RB/not be/VB/be very/RB/very popular/JJ/popular because/IN/because /,/, in/IN/in practice/NN/practice we/PRP/we do/VBP/do not/RB/not know/VB/know which/WDT/which input/VBN/input instances/NNS/instances are/VBP/are likely/JJ/likely to/TO/to appear/VB/appear more/JJR/more frequently/NNP/frequently. if/IN/if some/DT/some instances/NNS/instances appear/VBP/appear more/JJR/more frequently/RB/frequently /,/, then/RB/then in/IN/in this/DT/this mean/NN/mean expression/NN/expression we/PRP/we would/MD/would have/VB/have to/TO/to wait/VB/wait those/DT/those instances/NNS/instances more/RBR/more heavily/NNP/heavily. therefore/RB/therefore /,/, if/IN/if we/PRP/we just/RB/just take/VBP/take the/DT/the mean/JJ/mean /,/, then/RB/then that/IN/that is/VBZ/is not/RB/not an/DT/an indication/NN/indication of/IN/of what/WP/what might/MD/might happen/VB/happen in/IN/in practice/NNP/practice. and/CC/and therefore/RB/therefore /,/, again/RB/again we/PRP/we do/VBP/do not/RB/not really/RB/really focus/VBZ/focus so/RB/so much/RB/much on/IN/on the/DT/the average/NN/average case/NN/case analysis/NNP/analysis. worst/NN/worst case/NN/case on/IN/on the/DT/the other/JJ/other hand/NN/hand might/MD/might be/VB/be conservative/JJ/conservative /,/, but/CC/but at/IN/at least/JJS/least we/PRP/we know/VBP/know that/IN/that it/PRP/it is/VBZ/is conservative/NNP/conservative. and/CC/and therefore/RB/therefore /,/, at/IN/at least/JJS/least we/PRP/we can/MD/can give/VB/give some/DT/some guarantees/NNP/guarantees. our/PRP$/our topic/JJ/topic for/IN/for today/NN/today is/VBZ/is quick/JJ/quick sort/NN/sort however/RB/however /,/, where/WRB/where average/JJ/average case/NN/case analysis/NN/analysis turns/VBZ/turns out/RP/out to/TO/to be/VB/be quite/RB/quite useful/JJ/useful and/CC/and quite/RB/quite interesting/NNP/interesting. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 14/CD/14 /CD/) so/RB/so /,/, let/VB/let me/PRP/me say/VB/say a/DT/a few/JJ/few things/NNS/things about/IN/about quick/JJ/quick sort/NNP/sort. quick/NN/quick sort/NN/sort is/VBZ/is a/DT/a popular/JJ/popular sorting/NN/sorting algorithm/NN/algorithm /,/, perhaps/RB/perhaps the/DT/the most/RBS/most popular/JJ/popular and/CC/and the/DT/the most/RBS/most commonly/RB/commonly used/JJ/used in/IN/in practice/NNP/practice. it/PRP/it is/VBZ/is very/RB/very fast/NNP/fast. and/CC/and as/IN/as i/PRP/i said/VBD/said /,/, it/PRP/it is/VBZ/is often/RB/often the/DT/the method/NN/method of/IN/of choice/NNP/choice. the/DT/the worse/NN/worse case/NN/case time/NN/time of/IN/of quick/JJ/quick sort/NN/sort is/VBZ/is o/RB/o of/IN/of n/NN/n square/NNP/square. the/DT/the average/JJ/average case/NN/case time/NN/time on/IN/on the/DT/the other/JJ/other hand/NN/hand is/VBZ/is o/RB/o of/IN/of n/NN/n log/NN/log n/NN/n and/CC/and will/MD/will see/VB/see this/DT/this quite/NN/quite soon/NNP/soon. so/RB/so /,/, in/IN/in some/DT/some sense/NN/sense the/DT/the excellent/NN/excellent performance/NN/performance in/IN/in practice/NN/practice might/MD/might be/VB/be better/JJR/better explained/VBN/explained by/IN/by the/DT/the fact/NN/fact /,/, that/IN/that the/DT/the average/NN/average case/NN/case time/NN/time is/VBZ/is o/RB/o of/IN/of n/NN/n log/NN/log n/NN/n rather/RB/rather than/IN/than by/IN/by focusing/NN/focusing on/IN/on the/DT/the worse/NN/worse case/NN/case time/NNP/time. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now take/VBP/take a/DT/a look/NN/look at/IN/at this/DT/this algorithm/NNP/algorithm. quick/NN/quick sort/NN/sort is/VBZ/is based/VBN/based on/IN/on divide/NN/divide and/CC/and conquer/NN/conquer strategy/NNP/strategy. and/CC/and the/DT/the algorithm/NN/algorithm is/VBZ/is something/NN/something like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 08/CD/08 /CD/) so/RB/so /,/, as/IN/as input/NN/input we/PRP/we take/VBP/take an/DT/an array/NN/array x/NN/x 1/CD/1 through/IN/through n/NN/n by/IN/by writing/NN/writing x/NN/x 1/CD/1 through/IN/through n/NN/n /,/, i/PRP/i simply/RB/simply mean/JJ/mean that/IN/that x/NN/x is/VBZ/is an/DT/an array/NN/array whose/WP$/whose length/NN/length is/VBZ/is n/NNP/n. this/DT/this is/VBZ/is an/DT/an array/NN/array in/IN/in which/WDT/which we/PRP/we have/VBP/have keys/NNP/keys. we/PRP/we can/MD/can think/VB/think of/IN/of these/DT/these keys/NNS/keys for/IN/for the/DT/the minute/NN/minute as/IN/as some/DT/some integers/NNS/integers perhaps/NNP/perhaps. and/CC/and our/PRP$/our idea/NN/idea and/CC/and the/DT/the goal/NN/goal of/IN/of quick/JJ/quick sort/NN/sort is/VBZ/is to/TO/to sort/NN/sort them/NNP/them. that/IN/that is/VBZ/is let/VBN/let us/PRP/us say/VBP/say that/IN/that the/DT/the smallest/JJS/smallest keys/NNS/keys have/VBP/have to/TO/to come/VB/come at/IN/at the/DT/the beginning/NN/beginning and/CC/and the/DT/the largest/JJS/largest ones/NNS/ones have/VBP/have to/TO/to go/VB/go towards/NNS/towards the/DT/the end/NNP/end. we/PRP/we begin/VBP/begin quick/JJ/quick sort/NN/sort by/IN/by looking/NN/looking at/IN/at the/DT/the best/JJS/best case/NN/case first/NNP/first. so/RB/so /,/, the/DT/the best/JJS/best case/NN/case just/RB/just checks/VBZ/checks whether/IN/whether /,/, this/DT/this is/VBZ/is an/DT/an element/NN/element this/DT/this array/NN/array has/VBZ/has only/RB/only one/CD/one element/NNP/element. if/IN/if it/PRP/it only/RB/only has/VBZ/has one/CD/one element/NN/element /,/, then/RB/then the/DT/the array/NN/array is/VBZ/is sorted/VBN/sorted trivially/-NONE-/trivially. and/CC/and therefore/RB/therefore /,/, we/PRP/we just/RB/just return/VBP/return that/IN/that array/NNP/array. otherwise/NN/otherwise /,/, we/PRP/we pick/VBP/pick something/NN/something which/WDT/which we/PRP/we will/MD/will call/VB/call it/PRP/it splitter/NNP/splitter. and/CC/and that/IN/that splitter/NN/splitter is/VBZ/is chosen/VBN/chosen to/TO/to be/VB/be the/DT/the first/JJ/first element/NN/element of/IN/of this/DT/this x/NNP/x. the/DT/the first/JJ/first key/JJ/key is/VBZ/is the/DT/the splitter/NNP/splitter. then/RB/then /,/, we/PRP/we built/VBD/built three/CD/three lists/NNP/lists. a/DT/a list/NN/list which/WDT/which will/MD/will call/VB/call small/JJ/small is/VBZ/is going/VBG/going to/TO/to be/VB/be small/JJ/small /,/, which/WDT/which contains/VBZ/contains all/DT/all elements/NNS/elements of/IN/of x/NN/x which/WDT/which are/VBP/are smaller/JJR/smaller than/IN/than the/DT/the splitter/NNP/splitter. a/DT/a list/NN/list which/WDT/which we/PRP/we will/MD/will call/VB/call equal/JJ/equal /,/, which/WDT/which will/MD/will contain/VB/contain all/DT/all elements/NNS/elements of/IN/of x/NN/x which/WDT/which are/VBP/are equal/JJ/equal to/TO/to x/VB/x 1/CD/1 and/CC/and so/RB/so /,/, we/PRP/we begin/VBP/begin by/IN/by putting/VBG/putting x/NN/x 1/CD/1 into/IN/into equal/NNP/equal. i/PRP/i should/MD/should perhaps/RB/perhaps said/VBD/said less/JJR/less over/IN/over here/NNP/here. but/CC/but /,/, will/MD/will not/RB/not we/VB/we are/VBP/are not/RB/not worrying/VBG/worrying /,/, we/PRP/we are/VBP/are not/RB/not very/RB/very careful/JJ/careful about/IN/about this/NNP/this. and/CC/and we/PRP/we will/MD/will not/RB/not be/VB/be very/RB/very careful/JJ/careful about/IN/about this/DT/this throughout/NN/throughout the/DT/the course/NNP/course. so/RB/so /,/, we/PRP/we will/MD/will i/VB/i just/RB/just tell/VB/tell you/PRP/you that/IN/that /,/, we/PRP/we have/VBP/have just/RB/just made/VBN/made equal/JJ/equal just/RB/just single/JJ/single list/NN/list /,/, a/DT/a list/NN/list with/IN/with a/DT/a single/JJ/single element/NNP/element. and/CC/and we/PRP/we will/MD/will also/RB/also construct/VB/construct a/DT/a list/NN/list /,/, which/WDT/which we/PRP/we will/MD/will call/VB/call large/NNP/large. and/CC/and large/JJ/large will/MD/will contain/VB/contain all/DT/all the/DT/the elements/NNS/elements of/IN/of x/NN/x /,/, which/WDT/which are/VBP/are larger/JJR/larger than/IN/than x/NN/x 1/CD/1. so/RB/so /,/, right/RB/right now/RB/now it/PRP/it has/VBZ/has been/VBN/been initialized/VBN/initialized to/TO/to null/VB/null and/CC/and small/JJ/small has/VBZ/has also/RB/also been/VBN/been initialized/VBN/initialized to/TO/to null/NNP/null. this/DT/this loop/NN/loop is/VBZ/is simply/RB/simply going/VBG/going to/TO/to build/VB/build up/RP/up the/DT/the lists/NNS/lists /,/, as/IN/as we/PRP/we just/RB/just described/NNP/described. so/RB/so /,/, first/JJ/first step/NN/step if/IN/if so/RB/so for/IN/for every/DT/every element/NN/element other/JJ/other than/IN/than the/DT/the first/NNP/first. we/PRP/we check/VBP/check whether/IN/whether it/PRP/it is/VBZ/is smaller/JJR/smaller than/IN/than splitter/JJR/splitter in/IN/in which/WDT/which case/NN/case /,/, we/PRP/we add/VBP/add that/IN/that element/NN/element to/TO/to small/NNP/small. if/IN/if it/PRP/it is/VBZ/is equal/JJ/equal to/TO/to splitter/NN/splitter /,/, then/RB/then we/PRP/we add/VBP/add it/PRP/it to/TO/to equal/NNP/equal. if/IN/if it/PRP/it is/VBZ/is greater/JJR/greater than/IN/than splitter/JJR/splitter /,/, we/PRP/we add/VBP/add it/PRP/it to/TO/to large/NNP/large. so/RB/so /,/, at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this loop/NN/loop all/DT/all the/DT/the elements/NNS/elements have/VBP/have been/VBN/been put/VBN/put into/IN/into the/DT/the proper/JJ/proper lists/NNP/lists. so/RB/so /,/, now/RB/now it/PRP/it is/VBZ/is simply/RB/simply a/DT/a matter/NN/matter of/IN/of recursion/NNP/recursion. so/RB/so /,/, small/JJ/small is/VBZ/is a/DT/a list/NN/list which/WDT/which contained/VBD/contained all/DT/all small/JJ/small elements/NNP/elements. so/RB/so /,/, we/PRP/we call/VBP/call qsort/NN/qsort or/CC/or quick/JJ/quick sort/NN/sort in/IN/in this/DT/this list/NNP/list. so/RB/so /,/, as/IN/as a/DT/a result/NN/result we/PRP/we will/MD/will get/VB/get these/DT/these elements/NNS/elements sorted/NNP/sorted. now/RB/now /,/, these/DT/these elements/NNS/elements are/VBP/are all/DT/all guaranteed/VBN/guaranteed to/TO/to be/VB/be smaller/JJR/smaller than/IN/than the/DT/the elements/NNS/elements in/IN/in the/DT/the list/NN/list equal/NNP/equal. and/CC/and those/DT/those in/IN/in turn/NN/turn /,/, are/VBP/are guaranteed/VBN/guaranteed to/TO/to be/VB/be smaller/JJR/smaller than/IN/than the/DT/the list/NN/list in/IN/in large/NNP/large. but/CC/but we/PRP/we do/VBP/do not/RB/not append/VB/append large/JJ/large immediately/RB/immediately over/IN/over here/RB/here /,/, we/PRP/we quick/VBP/quick sort/NN/sort it/NNP/it. so/RB/so /,/, as/IN/as a/DT/a result/NN/result we/PRP/we have/VBP/have a/DT/a long/JJ/long list/NN/list which/WDT/which is/VBZ/is made/VBN/made up/RP/up by/IN/by appending/NN/appending three/CD/three lists/NNP/lists. but/CC/but /,/, which/WDT/which in/IN/in turn/NN/turn is/VBZ/is guaranteed/VBN/guaranteed to/TO/to be/VB/be sorted/NNP/sorted. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how quick/JJ/quick sort/NN/sort works/NNP/works. so/RB/so /,/, as/IN/as i/PRP/i said/VBD/said it/PRP/it is/VBZ/is divide/JJ/divide and/CC/and conquer/NN/conquer strategy/NN/strategy /,/, the/DT/the division/NN/division part/NN/part is/VBZ/is where/WRB/where the/DT/the interesting/JJ/interesting work/NN/work happens/NNP/happens. and/CC/and /,/, then/RB/then there/EX/there is/VBZ/is a/DT/a conquer/NN/conquer part/NN/part and/CC/and then/RB/then the/DT/the combined/VBN/combined part/NN/part is/VBZ/is trivial/NNP/trivial. correctness/NN/correctness is/VBZ/is quite/RB/quite obvious/JJ/obvious here/NNP/here. you/PRP/you can/MD/can do/VB/do a/DT/a induction/NN/induction on/IN/on size/NN/size /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to prove/VB/prove it/PRP/it formally/NNP/formally. and/CC/and i/PRP/i will/MD/will leave/VB/leave that/IN/that as/IN/as a/DT/a easy/JJ/easy exercise/NNP/exercise. so/RB/so /,/, now/RB/now you/PRP/you wanted/VBD/wanted to/TO/to analyze/VB/analyze this/DT/this algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 36/CD/36 /CD/) let/NN/let me/PRP/me use/VBP/use t/NN/t of/IN/of n/NN/n to/TO/to denote/VB/denote the/DT/the time/NN/time for/IN/for quick/JJ/quick sort/NN/sort /,/, on/IN/on size/NN/size and/CC/and input/NNP/input. so/RB/so /,/, right/RB/right now/RB/now i/PRP/i have/VBP/have only/RB/only written/VBN/written n/NN/n over/IN/over here/NNP/here. but/CC/but /,/, i/PRP/i will/MD/will actually/RB/actually have/VB/have a/DT/a specific/JJ/specific input/NN/input in/IN/in mind/NNP/mind. just/RB/just for/IN/for the/DT/the minute/NNP/minute. later/JJ/later on/IN/on we/PRP/we will/MD/will worry/VB/worry about/IN/about average/JJ/average cases/NNS/cases or/CC/or the/DT/the worst/JJS/worst cases/NNS/cases or/CC/or whatever/NNP/whatever. so/RB/so /,/, right/RB/right now/RB/now let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is for/IN/for a/DT/a particular/JJ/particular instance/NNP/instance. so/RB/so /,/, t/NN/t of/IN/of n/NN/n is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by that/DT/that particular/JJ/particular instance/NNP/instance. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we analyze/VB/analyze this/DT/this ?/./? well/NNP/well. usually/RB/usually if/IN/if we/PRP/we write/VBP/write something/NN/something like/IN/like this/DT/this /,/, we/PRP/we try/VBP/try to/TO/to establish/VB/establish the/DT/the recurrence/NNP/recurrence. so/RB/so /,/, of/IN/of course/NN/course no/DT/no matter/NN/matter what/WP/what input/NN/input instance/NN/instance we/PRP/we feed/NNP/feed. if/IN/if it/PRP/it has/VBZ/has length/NN/length of/IN/of only/RB/only 1/CD/1 /,/, then/RB/then the/DT/the time/NN/time taken/VBN/taken is/VBZ/is constant/NNP/constant. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what is/VBZ/is you/PRP/you write/VBP/write down/RP/down first/NNP/first. then/RB/then /,/, we/PRP/we need/VBP/need to/TO/to find/VB/find out/RP/out how/WRB/how the/DT/the recursion/NN/recursion happens/NNP/happens. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just go/VBP/go back/RB/back to/TO/to the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, over/IN/over here/RB/here the/DT/the recursion/NN/recursion happens/VBZ/happens by/IN/by calling/NN/calling quick/NN/quick sort/NN/sort on/IN/on small/JJ/small and/CC/and calling/VBG/calling quick/NN/quick sort/NN/sort on/IN/on large/NNP/large. and/CC/and before/IN/before that/IN/that /,/, we/PRP/we have/VBP/have a/DT/a loop/NN/loop which/WDT/which runs/VBZ/runs about/IN/about n/NN/n times/NNP/times. so/RB/so /,/, the/DT/the result/NN/result we/PRP/we have/VBP/have o/RB/o of/IN/of n/NN/n time/NN/time for/IN/for the/DT/the loop/NNP/loop. and/CC/and t/NN/t of/IN/of large/JJ/large or/CC/or t/NN/t of/IN/of the/DT/the cardinality/NN/cardinality of/IN/of large/JJ/large is/VBZ/is the/DT/the time/NN/time taken/VBN/taken for/IN/for that/DT/that instance/NN/instance /,/, for/IN/for further/JJ/further for/IN/for evoking/NN/evoking quick/NN/quick sort/NN/sort on/IN/on the/DT/the list/NN/list large/NNP/large. and/CC/and t/NN/t of/IN/of small/JJ/small /,/, is/VBZ/is the/DT/the time/NN/time taken/VBN/taken for/IN/for invoking/NN/invoking quick/NN/quick sort/NN/sort in/IN/in the/DT/the list/NN/list small/NNP/small. now/RB/now /,/, we/PRP/we can/MD/can analyze/VB/analyze this/DT/this using/NN/using the/DT/the recursion/NN/recursion tree/NNP/tree. so/RB/so /,/, this/DT/this was/VBD/was our/PRP$/our basic/JJ/basic recurrence/NNP/recurrence. so/RB/so /,/, let/VB/let us/PRP/us draw/VB/draw a/DT/a recursion/NN/recursion tree/NN/tree corresponding/VBG/corresponding to/TO/to this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 28/CD/28 /CD/) so/RB/so /,/, we/PRP/we start/VBP/start off/RP/off with/IN/with the/DT/the problem/NN/problem of/IN/of size/NN/size n/NNP/n. and/CC/and /,/, then/RB/then as/IN/as per/NN/per this/DT/this recurrence/NN/recurrence we/PRP/we break/VBP/break the/DT/the problem/NN/problem into/IN/into two/CD/two pieces/NNP/pieces. one/CD/one is/VBZ/is the/DT/the small/JJ/small list/NN/list and/CC/and the/DT/the other/JJ/other is/VBZ/is the/DT/the large/JJ/large list/NNP/list. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the small/JJ/small part/NN/part and/CC/and this/DT/this is/VBZ/is the/DT/the large/JJ/large part/NNP/part. this/DT/this is/VBZ/is a/DT/a problem/NN/problem of/IN/of size/NN/size n/NNP/n. this/DT/this is/VBZ/is the/DT/the small/JJ/small part/NN/part /,/, this/DT/this is/VBZ/is the/DT/the large/JJ/large part/NNP/part. if/IN/if this/DT/this is/VBZ/is the/DT/the small/JJ/small part/NN/part this/DT/this is/VBZ/is the/DT/the large/JJ/large part/NN/part /,/, then/RB/then we/PRP/we are/VBP/are going/VBG/going to/TO/to call/VB/call quick/JJ/quick sort/NN/sort recursively/RB/recursively on/IN/on these/NNP/these. so/IN/so /,/, furthermore/IN/furthermore this/DT/this problem/NN/problem will/MD/will get/VB/get split/VBN/split /,/, this/DT/this problem/NN/problem will/MD/will get/VB/get split/NNP/split. of/IN/of course/NN/course /,/, if/IN/if the/DT/the problem/NN/problem is/VBZ/is going/VBG/going to/TO/to get/VB/get split/NN/split /,/, may/MD/may be/VB/be one/CD/one part/NN/part one/CD/one side/NN/side could/MD/could be/VB/be smaller/JJR/smaller than/IN/than other/JJ/other side/NN/side could/MD/could be/VB/be larger/JJR/larger and/CC/and so/RB/so on/NNP/on. and/CC/and may/MD/may be/VB/be one/CD/one of/IN/of the/DT/the lists/NNS/lists could/MD/could be/VB/be empty/JJ/empty in/IN/in which/WDT/which case/NN/case of/IN/of course/NN/course /,/, this/DT/this whole/JJ/whole thing/NN/thing terminates/NNP/terminates. so/RB/so /,/, in/IN/in general/JJ/general it/PRP/it is/VBZ/is going/VBG/going to/TO/to keep/VB/keep on/IN/on splitting/NNP/splitting. may/MD/may be/VB/be once/RB/once in/IN/in a/DT/a while/NN/while /,/, a/DT/a list/NN/list terminates/VBZ/terminates and/CC/and things/NNS/things keep/VB/keep on/IN/on going/VBG/going in/IN/in this/DT/this manner/NNP/manner. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know all/PDT/all about/IN/about this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 38/CD/38 /CD/) well/RB/well /,/, here/RB/here is/VBZ/is the/DT/the first/JJ/first observation/NNP/observation. so/RB/so /,/, if/IN/if this/DT/this node/NN/node has/VBZ/has size/NN/size n/NN/n /,/, then/RB/then we/PRP/we know/VBP/know that/IN/that in/IN/in this/DT/this node/NN/node the/DT/the number/NN/number of/IN/of keys/NNS/keys which/WDT/which are/VBP/are going/VBG/going to/TO/to be/VB/be present/JJ/present is/VBZ/is definitely/RB/definitely going/VBG/going to/TO/to be/VB/be less/JJR/less than/IN/than n/NN/n /,/, in/IN/in this/DT/this node/NNP/node. or/CC/or in/IN/in fact/NN/fact /,/, in/IN/in this/DT/this node/NN/node as/IN/as well/RB/well /,/, so/RB/so what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? so/RB/so that/IN/that means/NNS/means that/WDT/that as/IN/as i/PRP/i go/VBP/go down/RB/down from/IN/from here/RB/here along/IN/along any/DT/any branch/NN/branch /,/, the/DT/the size/NN/size of/IN/of the/DT/the instance/NN/instance has/VBZ/has to/TO/to decrease/NNP/decrease. so/RB/so /,/, which/WDT/which means/VBZ/means i/PRP/i can/MD/can not/RB/not go/VB/go down/RB/down too/RB/too far/NNP/far. so/RB/so /,/, i/PRP/i start/VBP/start the/DT/the instance/NN/instance of/IN/of size/NN/size n/NNP/n. it/PRP/it has/VBZ/has to/TO/to decrease/VB/decrease therefore/RB/therefore /,/, that/IN/that means/NNS/means this/DT/this height/NN/height has/VBZ/has to/TO/to be/VB/be utmost/VBN/utmost n/-NONE-/n. that/IN/that is/VBZ/is the/DT/the first/JJ/first observation/NNP/observation. the/DT/the second/JJ/second observation/NN/observation is/VBZ/is that/IN/that /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at any/DT/any node/NN/node its/PRP$/its children/NNS/children have/VBP/have a/DT/a certain/JJ/certain size/NNP/size. but/CC/but /,/, that/IN/that size/NN/size adds/VBZ/adds up/RP/up to/TO/to something/NN/something strictly/RB/strictly smaller/JJR/smaller than/IN/than this/NNP/this. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the size/NN/size over/IN/over here/RB/here /,/, it/PRP/it is/VBZ/is n/VBN/n the/DT/the size/NN/size over/IN/over here/RB/here has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than n/NNP/n. the/DT/the size/NN/size over/IN/over here/RB/here in/IN/in fact/NN/fact /,/, has/VBZ/has to/TO/to be/VB/be smaller/JJR/smaller than/IN/than this/DT/this for/IN/for these/DT/these two/NNP/two. and/CC/and for/IN/for these/DT/these two/CD/two /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be smaller/JJR/smaller than/IN/than this/NNP/this. so/RB/so /,/, this/DT/this also/RB/also has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than n/NNP/n. this/DT/this also/RB/also has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than n/NNP/n. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at any/DT/any level/NN/level /,/, the/DT/the size/NN/size of/IN/of that/DT/that the/DT/the sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of the/DT/the problem/NN/problem at/IN/at that/DT/that level/NN/level have/VBP/have to/TO/to be/VB/be at/IN/at most/JJS/most n/NNP/n. but/CC/but now/RB/now /,/, if/IN/if we/PRP/we go/VBP/go back/RB/back to/TO/to our/PRP$/our problem/NN/problem our/PRP$/our algorithm/NN/algorithm at/IN/at each/DT/each inside/NN/inside the/DT/the body/NN/body of/IN/of each/DT/each invocation/NN/invocation /,/, we/PRP/we do/VBP/do work/NN/work or/CC/or we/PRP/we do/VBP/do work/NN/work proportional/JJ/proportional to/TO/to the/DT/the size/NN/size of/IN/of the/DT/the problem/NNP/problem. so/RB/so /,/, which/WDT/which means/VBZ/means corresponding/VBG/corresponding to/TO/to each/DT/each node/NN/node over/IN/over here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do work/NN/work /,/, which/WDT/which is/VBZ/is proportional/JJ/proportional to/TO/to its/PRP$/its problem/NN/problem size/NNP/size. so/RB/so /,/, now/RB/now if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the total/JJ/total work/NN/work done/NN/done here/RB/here /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NNP/n. because/IN/because /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be proportional/JJ/proportional to/TO/to this/DT/this problem/NN/problem size/NN/size this/DT/this problem/NN/problem size/NN/size added/VBD/added up/RP/up /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be proportional/JJ/proportional to/TO/to o/VB/o of/IN/of n/NN/n or/CC/or it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NNP/n. similarly/RB/similarly /,/, here/RB/here also/RB/also it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NNP/n. at/IN/at every/DT/every level/NN/level /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at most/JJS/most n/JJ/n at/IN/at most/JJS/most proportional/JJ/proportional to/TO/to n/NNP/n. so/RB/so /,/, now/RB/now we/PRP/we have/VBP/have an/DT/an upper/JJ/upper bound/NN/bound on/IN/on the/DT/the work/NNP/work. because/IN/because /,/, there/EX/there are/VBP/are n/NN/n levels/NNS/levels at/IN/at most/JJS/most and/CC/and at/IN/at each/DT/each level/NN/level the/DT/the work/NN/work is/VBZ/is o/RB/o of/IN/of n/NNP/n. and/CC/and therefore/RB/therefore /,/, the/DT/the total/JJ/total work/NN/work has/VBZ/has to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n square/NNP/square. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the upper/JJ/upper bound/NN/bound on/IN/on quick/NN/quick sort/NNP/sort. now/RB/now /,/, i/PRP/i will/MD/will leave/VB/leave it/PRP/it as/IN/as an/DT/an exercise/NN/exercise for/IN/for you/PRP/you to/TO/to construct/VB/construct an/DT/an input/NN/input instance/NN/instance for/IN/for which/WDT/which /,/, quick/VBP/quick sort/NN/sort actually/RB/actually takes/VBZ/takes time/NN/time n/NN/n square/NNP/square. so/RB/so /,/, this/DT/this is/VBZ/is actually/RB/actually fairly/RB/fairly easy/NNP/easy. let/VB/let me/PRP/me give/VB/give you/PRP/you a/DT/a hint/NN/hint /,/, think/VBP/think of/IN/of a/DT/a sorted/VBN/sorted list/NNP/list. what/WP/what if/IN/if the/DT/the input/NN/input instance/NN/instance is/VBZ/is already/RB/already sorted/VBN/sorted ?/./? but/CC/but /,/, the/DT/the key/JJ/key question/NN/question is/VBZ/is that/IN/that this/DT/this is/VBZ/is the/DT/the worst/JJS/worst time/NNP/time. but/CC/but /,/, will/MD/will it/PRP/it be/VB/be the/DT/the most/JJS/most time/NN/time /,/, will/MD/will it/PRP/it take/VB/take this/DT/this long/JJ/long usually/RB/usually or/CC/or is/VBZ/is this/DT/this some/DT/some kind/NN/kind of/IN/of an/DT/an unusual/JJ/unusual case/NNP/case. so/RB/so /,/, if/IN/if you/PRP/you come/VBP/come back/RB/back to/TO/to the/DT/the recursion/NN/recursion tree/NN/tree to/TO/to this/DT/this tree/NN/tree /,/, then/RB/then we/PRP/we know/VBP/know that/IN/that at/IN/at every/DT/every level/NN/level the/DT/the work/NN/work is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at most/JJS/most n/NNP/n. so/RB/so /,/, the/DT/the real/JJ/real question/NN/question that/WDT/that we/PRP/we want/VBP/want to/TO/to ask/VB/ask is/VBZ/is /,/, will/MD/will the/DT/the tree/NN/tree be/VB/be of/IN/of a/DT/a large/JJ/large height/NN/height or/CC/or will/MD/will the/DT/the tree/NN/tree have/VBP/have a/DT/a small/JJ/small height/NN/height because/IN/because /,/, if/IN/if the/DT/the tree/NN/tree has/VBZ/has small/JJ/small height/NN/height then/RB/then our/PRP$/our total/JJ/total work/NN/work will/MD/will be/VB/be less/NNP/less. so/RB/so /,/, in/IN/in fact/NN/fact that/IN/that is/VBZ/is what/WP/what we/PRP/we will/MD/will see/VB/see is/VBZ/is /,/, going/VBG/going to/TO/to happen/VB/happen quite/RB/quite frequently/NNP/frequently. so/RB/so /,/, we/PRP/we did/VBD/did the/DT/the analysis/NN/analysis of/IN/of the/DT/the worst/JJS/worst case/NNP/case. so/RB/so /,/, let/VB/let us/PRP/us ask/VB/ask what/WP/what the/DT/the best/JJS/best case/NN/case is/VBZ/is going/VBG/going to/TO/to be/VB/be ?/./? so/RB/so /,/, clearly/RB/clearly the/DT/the best/JJS/best cases/NNS/cases are/VBP/are the/DT/the one/CD/one in/IN/in which/WDT/which tree/NN/tree is/VBZ/is as/IN/as small/JJ/small as/IN/as possible/NNP/possible. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 41/CD/41 /CD/) if/IN/if the/DT/the elements/NNS/elements that/WDT/that we/PRP/we are/VBP/are trying/VBG/trying to/TO/to sort/VB/sort are/VBP/are all/DT/all distinct/JJ/distinct /,/, then/RB/then i/PRP/i will/MD/will claim/VB/claim that/IN/that the/DT/the height/NN/height can/MD/can not/RB/not be/VB/be smaller/JJR/smaller than/IN/than log/NN/log n/NNP/n. why/WRB/why is/VBZ/is that/IN/that ?/./? well/RB/well /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to leave/VB/leave this/DT/this as/IN/as an/DT/an exercise/NNP/exercise. but/CC/but /,/, again/RB/again let/VB/let me/PRP/me give/VB/give a/DT/a hint/NNP/hint. so/RB/so /,/, we/PRP/we said/VBD/said as/IN/as we/PRP/we go/VBP/go down/RB/down the/DT/the tree/NN/tree height/NN/height must/MD/must decrease/NNP/decrease. but/CC/but /,/, we/PRP/we also/RB/also said/VBD/said that/IN/that the/DT/the sum/NN/sum of/IN/of the/DT/the nodes/NNS/nodes over/IN/over here/RB/here /,/, the/DT/the size/NN/size over/IN/over here/RB/here plus/CC/plus the/DT/the size/NN/size over/IN/over here/RB/here must/MD/must be/VB/be smaller/JJR/smaller than/IN/than this/NNP/this. but/CC/but /,/, if/IN/if everything/NN/everything is/VBZ/is distinct/JJ/distinct it/PRP/it will/MD/will only/RB/only be/VB/be one/CD/one less/JJR/less than/IN/than this/NNP/this. so/RB/so /,/, if/IN/if it/PRP/it is/VBZ/is one/CD/one less/JJR/less than/IN/than this/DT/this /,/, then/RB/then you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to argue/VB/argue that/IN/that it/PRP/it would/MD/would not/RB/not decrease/VB/decrease too/RB/too fast/RB/fast either/NNP/either. so/RB/so in/IN/in fact/NN/fact /,/, you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to argue/VB/argue that/IN/that it/PRP/it essentially/RB/essentially halves/VBZ/halves at/IN/at each/DT/each step/NNP/step. and/CC/and therefore/RB/therefore /,/, the/DT/the total/JJ/total height/NN/height will/MD/will be/VB/be something/NN/something like/IN/like log/NN/log n/NNP/n. so/RB/so /,/, what/WDT/what happens/NNS/happens in/IN/in the/DT/the best/JJS/best case/NN/case ?/./? so/RB/so /,/, in/IN/in the/DT/the best/JJS/best case/NN/case it/PRP/it turns/VBZ/turns out/NNP/out. that/IN/that the/DT/the total/JJ/total time/NN/time taken/VBN/taken will/MD/will be/VB/be o/RB/o of/IN/of log/NN/log n/NN/n /,/, o/NN/o of/IN/of n/NN/n log/NN/log n/NNP/n. and/CC/and in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is a/DT/a very/RB/very simple/JJ/simple situation/NN/situation in/IN/in which/WDT/which the/DT/the best/JJS/best case/NN/case will/MD/will happen/VB/happen /,/, which/WDT/which is/VBZ/is this/DT/this ?/./? if/IN/if the/DT/the splitter/NN/splitter is/VBZ/is equal/JJ/equal to/TO/to the/DT/the median/JJ/median /,/, then/RB/then the/DT/the problem/NN/problem size/NN/size halves/NNP/halves. and/CC/and /,/, then/RB/then the/DT/the height/NN/height becomes/VBZ/becomes o/NN/o of/IN/of log/NN/log n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 57/CD/57 /CD/) so/RB/so /,/, if/IN/if the/DT/the height/NN/height is/VBZ/is o/RB/o of/IN/of log/NN/log n/NN/n that/WDT/that i/PRP/i have/VBP/have taken/VBN/taken as/IN/as n/NN/n log/NN/log n/NN/n /,/, and/CC/and that/IN/that is/VBZ/is the/DT/the best/NNP/best. so/RB/so /,/, we/PRP/we consider/VBP/consider two/CD/two cases/NNS/cases one/CD/one case/NN/case in/IN/in which/WDT/which the/DT/the splitter/NN/splitter goes/VBZ/goes /,/, somewhere/RB/somewhere in/IN/in the/DT/the middle/NNP/middle. another/DT/another case/NN/case in/IN/in which/WDT/which the/DT/the splitter/NN/splitter was/VBD/was extreme/NN/extreme /,/, the/DT/the splitter/NN/splitter was/VBD/was the/DT/the smallest/JJS/smallest element/NNP/element. well/RB/well /,/, that/IN/that was/VBD/was supposed/VBN/supposed to/TO/to be/VB/be a/DT/a homework/NN/homework exercise/NNP/exercise. but/CC/but /,/, suppose/VBP/suppose we/PRP/we take/VBP/take splitter/NN/splitter /,/, the/DT/the splitter/NN/splitter happens/VBZ/happens to/TO/to be/VB/be the/DT/the smallest/JJS/smallest element/NNP/element. then/RB/then /,/, the/DT/the list/NN/list would/MD/would be/VB/be split/VBN/split very/RB/very unevenly/NNP/unevenly. so/RB/so /,/, let/VB/let us/PRP/us consider/JJR/consider a/DT/a case/NN/case which/WDT/which is/VBZ/is somewhere/RB/somewhere in/IN/in between/NNP/between. so/RB/so /,/, in/IN/in this/DT/this the/DT/the splitter/NN/splitter is/VBZ/is say/VB/say larger/JJR/larger than/IN/than n/NN/n over/IN/over 10/CD/10 elements/NNS/elements in/IN/in the/DT/the list/NN/list and/CC/and is/VBZ/is also/RB/also smaller/JJR/smaller than/IN/than n/NN/n over/IN/over 10/CD/10 elements/NNP/elements. so/RB/so /,/, it/PRP/it could/MD/could be/VB/be somewhere/RB/somewhere in/IN/in the/DT/the middle/NNP/middle. so/RB/so /,/, of/IN/of course/NN/course this/DT/this is/VBZ/is an/DT/an artificial/JJ/artificial case/NNP/case. but/CC/but /,/, you/PRP/you can/MD/can imagine/VB/imagine that/IN/that this/DT/this will/MD/will happen/VB/happen frequently/RB/frequently enough/RB/enough because/IN/because /,/, after/IN/after all/DT/all if/IN/if i/PRP/i pick/VBP/pick an/DT/an element/NN/element from/IN/from a/DT/a list/NN/list /,/, it/PRP/it is/VBZ/is likely/JJ/likely to/TO/to be/VB/be somewhere/RB/somewhere in/IN/in the/DT/the middle/NNP/middle. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say this/DT/this happens/NNP/happens. let/VBD/let us/PRP/us say/VBP/say that/IN/that /,/, every/DT/every time/NN/time i/PRP/i pick/VBP/pick a/DT/a splitter/NN/splitter it/PRP/it satisfies/VBZ/satisfies a/DT/a property/NN/property like/IN/like this/DT/this one/NNP/one. what/WP/what happens/VBZ/happens then/RB/then ?/./? well/RB/well /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to the/DT/the recursion/NN/recursion tree/NNP/tree. so/RB/so /,/, let/VB/let us/PRP/us redraw/VB/redraw this/DT/this recursion/NN/recursion tree/NNP/tree. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 18/CD/18 /CD/) so/RB/so /,/, i/PRP/i start/VBP/start with/IN/with an/DT/an n/NN/n node/NN/node problem/NN/problem an/DT/an n/NN/n key/NN/key problem/NNP/problem. now/RB/now /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to pick/VB/pick a/DT/a splitter/NN/splitter such/JJ/such that/IN/that /,/, it/PRP/it is/VBZ/is larger/JJR/larger than/IN/than n/NN/n over/IN/over 10/CD/10 elements/NNP/elements. so/RB/so /,/, if/IN/if i/PRP/i consider/VBP/consider /,/, what/WP/what is/VBZ/is the/DT/the most/RBS/most uneven/JJ/uneven distribution/NN/distribution ?/./? what/WP/what is/VBZ/is the/DT/the size/NN/size ?/./? well/RB/well on/IN/on one/CD/one side/NN/side i/PRP/i could/MD/could get/VB/get something/NN/something like/IN/like a/DT/a list/NN/list of/IN/of n/NN/n over/IN/over 10/CD/10 elements/NNP/elements. on/IN/on this/DT/this side/NN/side /,/, i/PRP/i could/MD/could get/VB/get a/DT/a list/NN/list of/IN/of say/NN/say 9/CD/9 n/NN/n over/IN/over 10/CD/10 elements/NNP/elements. so/RB/so /,/, this/DT/this is/VBZ/is good/JJ/good because/IN/because /,/, this/DT/this list/NN/list is/VBZ/is going/VBG/going to/TO/to shrink/VB/shrink and/CC/and its/PRP$/its going/NN/going to/TO/to terminate/VB/terminate quickly/NNP/quickly. the/DT/the height/NN/height is/VBZ/is going/VBG/going to/TO/to be/VB/be small/JJ/small over/IN/over here/NNP/here. this/DT/this on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, might/MD/might appear/VB/appear to/TO/to be/VB/be a/DT/a problem/NN/problem /,/, because/IN/because here/RB/here the/DT/the height/NN/height has/VBZ/has not/RB/not reduced/NNP/reduced. that/WDT/that the/DT/the size/NN/size has/VBZ/has not/RB/not reduced/NNP/reduced. if/IN/if the/DT/the size/NN/size has/VBZ/has not/RB/not reduced/VBN/reduced /,/, then/RB/then it/PRP/it will/MD/will keep/VB/keep on/IN/on going/VBG/going in/IN/in this/DT/this manner/NNP/manner. and/CC/and may/MD/may be/VB/be the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree may/MD/may be/VB/be large/NNP/large. but/CC/but /,/, what/WP/what we/PRP/we argued/VBD/argued was/VBD/was the/DT/the work/NN/work done/NN/done in/IN/in this/DT/this algorithm/NN/algorithm is/VBZ/is /,/, the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is at/IN/at most/JJS/most the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree multiplied/VBD/multiplied by/IN/by n/NN/n because/IN/because /,/, n/NN/n is/VBZ/is the/DT/the work/NN/work at/IN/at each/DT/each level/NNP/level. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 23/CD/23 /CD/) so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what happens/NNS/happens ?/./? so/RB/so /,/, in/IN/in the/DT/the first/JJ/first level/NN/level as/IN/as we/PRP/we have/VBP/have pointed/VBN/pointed out/RP/out /,/, the/DT/the largest/JJS/largest problem/NN/problem size/NN/size will/MD/will be/VB/be 9/CD/9 n/NN/n by/IN/by 10/CD/10. it/PRP/it could/MD/could be/VB/be smaller/JJR/smaller than/IN/than that/NNP/that. so/RB/so /,/, it/PRP/it could/MD/could be/VB/be say/VB/say half/DT/half half/NNP/half. but/CC/but /,/, that/IN/that is/VBZ/is actually/RB/actually not/RB/not so/RB/so bad/NNP/bad. that/IN/that means/VBZ/means /,/, the/DT/the third/JJ/third tree/NN/tree height/NN/height will/MD/will be/VB/be actually/RB/actually small/NNP/small. so/RB/so /,/, this/DT/this is/VBZ/is trying/VBG/trying to/TO/to force/VB/force the/DT/the tree/NN/tree height/NN/height to/TO/to be/VB/be large/NNP/large. and/CC/and therefore/RB/therefore /,/, it/PRP/it is/VBZ/is trying/VBG/trying to/TO/to force/VB/force quick/JJ/quick sort/NN/sort to/TO/to take/VB/take large/JJ/large /,/, to/TO/to take/VB/take long/JJ/long time/NNP/time. so/RB/so /,/, we/PRP/we are/VBP/are sort/RB/sort of/IN/of looking/VBG/looking at/IN/at we/PRP/we said/VBD/said that/IN/that we/PRP/we are/VBP/are looking/VBG/looking at/IN/at neither/DT/neither the/DT/the best/JJS/best nor/CC/nor the/DT/the worst/JJS/worst cases/NNP/cases. but/CC/but /,/, we/PRP/we are/VBP/are sort/RB/sort of/IN/of erring/VBG/erring on/IN/on the/DT/the side/NN/side of/IN/of the/DT/the worst/JJS/worst within/IN/within this/DT/this region/NNP/region. so/RB/so /,/, in/IN/in the/DT/the first/JJ/first level/NN/level problem/NN/problem /,/, largest/JJS/largest problem/NN/problem level/NN/level size/NN/size is/VBZ/is 9/CD/9 n/NN/n by/IN/by 10/CD/10. what/WP/what happens/NNS/happens next/IN/next ?/./? again/RB/again /,/, we/PRP/we assume/VBP/assume that/IN/that the/DT/the problem/NN/problem will/MD/will split/VB/split in/IN/in the/DT/the ratio/NN/ratio 1/CD/1 is/VBZ/is to/TO/to 9/CD/9. so/RB/so /,/, this/DT/this will/MD/will become/VB/become say/VB/say something/NN/something like/IN/like n/NN/n by/IN/by 100/CD/100 and/CC/and 9/CD/9 n/NN/n by/IN/by 100/CD/100. this/DT/this will/MD/will become/VB/become something/NN/something like/IN/like 90/CD/90 n/NN/n by/IN/by 100/CD/100 and/CC/and 81/CD/81 n/NN/n by/IN/by 100/CD/100. so/RB/so /,/, as/IN/as you/PRP/you can/MD/can see/VB/see this/DT/this rightmost/NN/rightmost branch/NN/branch will/MD/will keep/VB/keep on/IN/on having/VBG/having the/DT/the largest/JJS/largest size/NNP/size. so/RB/so /,/, what/WDT/what will/MD/will happen/VB/happen ?/./? at/IN/at each/DT/each in/IN/in each/DT/each step/NN/step /,/, the/DT/the size/NN/size of/IN/of the/DT/the largest/JJS/largest problem/NN/problem drops/NNS/drops down/IN/down by/IN/by a/DT/a factor/NN/factor 9/CD/9 by/IN/by 10/CD/10. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can conclude/VB/conclude that/IN/that log/NN/log of/IN/of n/NN/n to/TO/to the/DT/the base/NN/base 10/CD/10 by/IN/by 9/CD/9 /,/, the/DT/the problem/NN/problem size/NN/size will/MD/will even/RB/even on/IN/on this/DT/this right/NN/right most/JJS/most branch/NN/branch will/MD/will drop/VB/drop down/IN/down to/TO/to 1/CD/1. and/CC/and even/RB/even to/TO/to do/VB/do that/DT/that /,/, i/PRP/i will/MD/will take/VB/take log/NN/log of/IN/of n/NN/n to/TO/to the/DT/the base/NN/base 10/CD/10 by/IN/by 9/CD/9 levels/NNP/levels. so/RB/so /,/, this/DT/this is/VBZ/is good/JJ/good news/NN/news in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, even/RB/even when/WRB/when i/PRP/i am/VBP/am looking/VBG/looking at/IN/at a/DT/a split/NN/split which/WDT/which is/VBZ/is lopsided/NNP/lopsided. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 25/CD/25 /CD/) the/DT/the number/NN/number of/IN/of levels/NNS/levels /,/, the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is still/RB/still going/VBG/going to/TO/to be/VB/be about/RB/about log/NNP/log. well/RB/well /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be log/JJ/log not/RB/not to/TO/to the/DT/the base/NN/base 2/CD/2. but/CC/but /,/, to/TO/to the/DT/the base/NN/base 10/CD/10 by/IN/by 9/CD/9 and/CC/and let/VB/let me/PRP/me just/RB/just remind/VBP/remind you/PRP/you that/IN/that /,/, log/NN/log n/NN/n to/TO/to the/DT/the base/NN/base 10/CD/10 by/IN/by 9/CD/9 is/VBZ/is simply/RB/simply equal/JJ/equal to/TO/to log/VB/log of/IN/of n/NN/n to/TO/to the/DT/the base/NN/base 2/CD/2 divided/VBN/divided by/IN/by log/NN/log of/IN/of 10/CD/10 by/IN/by 9/CD/9 to/TO/to the/DT/the base/NN/base 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is still/RB/still only/RB/only a/DT/a constant/NNP/constant. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is still/RB/still o/RB/o of/IN/of log/NN/log n/NNP/n. so/RB/so /,/, the/DT/the height/NN/height given/VBN/given in/IN/in this/DT/this case/NN/case is/VBZ/is o/RB/o of/IN/of log/NN/log n/NN/n /,/, the/DT/the height/NN/height of/IN/of the/DT/the tree/NNP/tree. the/DT/the tree/NN/tree height/NN/height is/VBZ/is of/IN/of log/NN/log n/NNP/n. and/CC/and therefore/RB/therefore /,/, the/DT/the total/JJ/total work/NN/work is/VBZ/is n/VBN/n log/NN/log n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 08/CD/08 /CD/) so/RB/so /,/, even/RB/even in/IN/in this/DT/this middle/NN/middle case/NN/case we/PRP/we have/VBP/have seen/VBN/seen that/IN/that the/DT/the total/JJ/total work/NN/work is/VBZ/is about/IN/about n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the sort/NN/sort of/IN/of the/DT/the first/JJ/first intuition/NN/intuition as/IN/as to/TO/to why/WRB/why quick/JJ/quick sort/NN/sort should/MD/should work/VB/work ?/./? quick/NN/quick sort/NN/sort may/MD/may be/VB/be works/NNS/works while/IN/while in/IN/in practice/NNP/practice. because/IN/because /,/, unless/IN/unless the/DT/the splitter/NN/splitter comes/VBZ/comes from/IN/from too/RB/too large/JJ/large or/CC/or too/RB/too small/JJ/small /,/, the/DT/the two/CD/two sub/NN/sub problems/NNS/problems that/WDT/that we/PRP/we create/VBP/create will/MD/will be/VB/be reasonably/RB/reasonably balanced/VBN/balanced and/CC/and not/RB/not too/RB/too lopsided/NNP/lopsided. and/CC/and if/IN/if they/PRP/they are/VBP/are not/RB/not too/RB/too lopsided/VBN/lopsided /,/, then/RB/then the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree height/NN/height of/IN/of the/DT/the recursion/NN/recursion tree/NN/tree will/MD/will not/RB/not be/VB/be too/RB/too large/NNP/large. next/JJ/next we/PRP/we are/VBP/are going/VBG/going to/TO/to actually/RB/actually do/VB/do sort/NN/sort of/IN/of a/DT/a very/RB/very systematic/JJ/systematic analysis/NN/analysis /,/, of/IN/of the/DT/the average/NN/average time/NN/time taken/VBN/taken by/IN/by the/DT/the quick/JJ/quick sort/NNP/sort. we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do this/DT/this in/IN/in two/CD/two ways/NNP/ways. in/IN/in one/CD/one way/NN/way /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to derive/VB/derive the/DT/the recurrence/NNP/recurrence. and/CC/and we/PRP/we will/MD/will not/RB/not really/RB/really solve/VB/solve the/DT/the recurrence/NN/recurrence /,/, but/CC/but i/PRP/i will/MD/will indicate/VB/indicate to/TO/to you/PRP/you how/WRB/how that/DT/that recurrence/NN/recurrence could/MD/could be/VB/be solved/NNP/solved. and/CC/and it/PRP/it will/MD/will turn/VB/turn out/RP/out that/IN/that /,/, the/DT/the solution/NN/solution of/IN/of the/DT/the recurrence/NN/recurrence is/VBZ/is n/VBN/n log/NN/log n/NNP/n. and/CC/and /,/, then/RB/then i/PRP/i will/MD/will indicate/VB/indicate somewhat/RB/somewhat more/JJR/more elegant/JJ/elegant way/NN/way using/VBG/using /,/, which/WDT/which we/PRP/we can/MD/can also/RB/also derive/VB/derive n/NN/n log/NN/log n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 22/CD/22 /CD/) so/RB/so /,/, when/WRB/when i/PRP/i talk/VBP/talk about/IN/about average/JJ/average case/NN/case /,/, i/PRP/i have/VBP/have to/TO/to define/VB/define what/WP/what are/VBP/are the/DT/the possible/JJ/possible inputs/NNS/inputs ?/./? so/RB/so /,/, in/IN/in this/DT/this case/NN/case i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume that/IN/that /,/, for/IN/for this/DT/this particular/JJ/particular analysis/NN/analysis i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume first/RB/first of/IN/of all/DT/all that/DT/that all/DT/all the/DT/the inputs/NNS/inputs are/VBP/are distinct/NNP/distinct. all/DT/all the/DT/the inputs/NNS/inputs /,/, the/DT/the numbers/NNS/numbers the/DT/the elements/NNS/elements the/DT/the keys/NNS/keys which/WDT/which are/VBP/are given/VBN/given to/TO/to us/PRP/us are/VBP/are all/DT/all distinct/NNP/distinct. and/CC/and if/IN/if they/PRP/they are/VBP/are all/RB/all distinct/JJ/distinct /,/, i/PRP/i might/MD/might as/RB/as well/RB/well assume/NN/assume that/IN/that they/PRP/they are/VBP/are integers/NNS/integers 1/CD/1 through/IN/through n/NN/n for/IN/for each/DT/each of/IN/of the/DT/the n/NN/n keys/NNP/keys. but/CC/but of/IN/of course/NN/course /,/, they/PRP/they will/MD/will not/RB/not be/VB/be given/VBN/given to/TO/to me/PRP/me as/IN/as 1/CD/1 through/IN/through n/NN/n /,/, but/CC/but they/PRP/they will/MD/will be/VB/be given/VBN/given to/TO/to me/PRP/me as/IN/as some/DT/some permutation/NN/permutation of/IN/of 1/CD/1 through/IN/through n/NNP/n. so/RB/so /,/, now/RB/now i/PRP/i will/MD/will state/VB/state exactly/RB/exactly what/WP/what my/PRP$/my allowed/VBD/allowed inputs/NNS/inputs are/NNP/are. so/RB/so /,/, my/PRP$/my allowed/VBN/allowed inputs/NNS/inputs are/VBP/are any/DT/any possible/JJ/possible permutation/NN/permutation of/IN/of the/DT/the integers/NNS/integers 1/CD/1 through/IN/through n/NNP/n. so/RB/so /,/, there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial possible/JJ/possible permutations/NNP/permutations. there/RB/there are/VBP/are that/IN/that many/JJ/many input/NN/input instances/NNS/instances for/IN/for my/PRP$/my algorithm/NNP/algorithm. so/RB/so /,/, my/PRP$/my question/NN/question will/MD/will be/VB/be /,/, what/WDT/what is/VBZ/is the/DT/the average/JJ/average time/NN/time taken/VBN/taken by/IN/by my/PRP$/my algorithm/NN/algorithm over/IN/over all/DT/all these/DT/these input/NN/input instances/NNS/instances or/CC/or over/IN/over all/DT/all these/DT/these permutations/NNS/permutations ?/./? and/CC/and of/IN/of course/NN/course /,/, i/PRP/i would/MD/would like/VB/like you/PRP/you to/TO/to express/VB/express it/PRP/it as/IN/as a/DT/a function/NN/function of/IN/of n/NNP/n. so/RB/so /,/, now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to express/NN/express i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at our/PRP$/our analysis/NNP/analysis. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to figure/VB/figure out/RP/out /,/, how/WRB/how we/PRP/we can/MD/can estimate/VB/estimate this/NNP/this. so/RB/so /,/, although/IN/although i/PRP/i have/VBP/have been/VBN/been talking/VBG/talking about/IN/about different/JJ/different /,/, about/IN/about taking/VBG/taking averages/NNS/averages i/PRP/i can/MD/can also/RB/also think/VB/think of/IN/of this/DT/this in/IN/in terms/NNS/terms of/IN/of probabilities/NNP/probabilities. so/RB/so /,/, i/PRP/i can/MD/can think/VB/think of/IN/of this/DT/this as/IN/as follows/NNP/follows. so/RB/so /,/, i/PRP/i have/VBP/have been/VBN/been given/VBN/given a/DT/a set/NN/set of/IN/of input/NN/input instances/NNP/instances. i/PRP/i have/VBP/have constructed/VBN/constructed a/DT/a set/NN/set of/IN/of input/NN/input instances/NNP/instances. and/CC/and i/PRP/i am/VBP/am picking/VBG/picking one/CD/one of/IN/of those/DT/those instances/NNS/instances at/IN/at random/NNP/random. and/CC/and i/PRP/i am/VBP/am doing/VBG/doing this/DT/this /,/, giving/VBG/giving equal/JJ/equal probability/NN/probability to/TO/to every/DT/every input/NN/input instance/NNP/instance. so/RB/so /,/, there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial instances/NNS/instances possible/NNP/possible. each/DT/each one/CD/one has/VBZ/has equal/JJ/equal probability/NN/probability or/CC/or in/IN/in other/JJ/other words/NNS/words each/DT/each one/CD/one has/VBZ/has probability/NN/probability whenever/RB/whenever we/PRP/we assign/NNP/assign. so/RB/so i/PRP/i am/VBP/am picking/VBG/picking one/CD/one of/IN/of those/NNP/those. and/CC/and i/PRP/i could/MD/could also/RB/also be/VB/be asking/VBG/asking under/IN/under this/DT/this choice/NN/choice /,/, what/WP/what is/VBZ/is the/DT/the expected/VBN/expected time/NN/time for/IN/for that/DT/that for/IN/for the/DT/the instance/NN/instance that/IN/that i/PRP/i pick/VBP/pick ?/./? which/WDT/which is/VBZ/is of/IN/of course/NN/course /,/, the/DT/the same/JJ/same thing/NN/thing asking/VBG/asking what/WP/what is/VBZ/is the/DT/the time/NN/time taken/VBN/taken /,/, what/WP/what is/VBZ/is the/DT/the average/JJ/average of/IN/of all/DT/all the/DT/the times/NNS/times ?/./? so/RB/so /,/, now/RB/now this/DT/this average/JJ/average can/MD/can be/VB/be estimated/VBN/estimated by/IN/by grouping/NN/grouping the/DT/the instances/NNS/instances into/IN/into separate/JJ/separate groups/NNP/groups. and/CC/and /,/, then/RB/then calculating/VBG/calculating the/DT/the average/JJ/average within/NN/within each/DT/each group/NN/group and/CC/and then/RB/then multiplying/VBG/multiplying by/IN/by /,/, essentially/RB/essentially by/IN/by the/DT/the size/NN/size of/IN/of the/DT/the group/NN/group or/CC/or by/IN/by the/DT/the probability/NN/probability of/IN/of picking/VBG/picking that/IN/that group/NNP/group. so/RB/so /,/, here/RB/here is/VBZ/is how/WRB/how you/PRP/you are/VBP/are going/VBG/going to/TO/to do/VB/do it/NNP/it. so/RB/so /,/, in/IN/in the/DT/the first/JJ/first step/NN/step of/IN/of the/DT/the algorithm/NN/algorithm /,/, we/PRP/we pick/VBP/pick a/DT/a splitter/NNP/splitter. there/RB/there are/VBP/are n/VBN/n keys/NNS/keys and/CC/and the/DT/the keys/NNS/keys are/VBP/are going/VBG/going to/TO/to be/VB/be numbers/NNS/numbers in/IN/in the/DT/the range/NN/range 1/CD/1 through/IN/through n/NNP/n. so/RB/so /,/, there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be some/DT/some probability/NN/probability that/IN/that /,/, the/DT/the splitter/NN/splitter is/VBZ/is going/VBG/going to/TO/to be/VB/be one/CD/one of/IN/of these/DT/these keys/NNP/keys. it/PRP/it is/VBZ/is to/TO/to be/VB/be even/RB/even any/DT/any one/CD/one of/IN/of those/DT/those keys/NNP/keys. so/RB/so in/IN/in fact/NN/fact /,/, let/VB/let us/PRP/us assume/VB/assume that/IN/that we/PRP/we always/RB/always pick/VBP/pick a/DT/a splitter/NN/splitter at/IN/at the/DT/the first/JJ/first element/NN/element which/WDT/which is/VBZ/is in/IN/in fact/NN/fact /,/, what/WP/what the/DT/the algorithm/NN/algorithm did/NNP/did. so/RB/so /,/, in/IN/in that/DT/that case/NN/case the/DT/the question/NN/question is/NNP/is. so/RB/so /,/, we/PRP/we are/VBP/are splitting/VBG/splitting all/DT/all our/PRP$/our input/NN/input instances/NNS/instances into/IN/into those/DT/those permutations/NNS/permutations first/RB/first in/IN/in which/WDT/which the/DT/the splitter/NN/splitter in/IN/in which/WDT/which i/PRP/i appears/VBZ/appears in/IN/in the/DT/the first/JJ/first place/NNP/place. and/CC/and within/IN/within that/DT/that group/NN/group /,/, we/PRP/we are/VBP/are taking/VBG/taking the/DT/the average/JJ/average time/NNP/time. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw this/DT/this picture/NN/picture out/IN/out here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 59/CD/59 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our set/NN/set of/IN/of input/NN/input instances/NNP/instances. so/RB/so /,/, i/PRP/i am/VBP/am breaking/VBG/breaking it/PRP/it into/IN/into pieces/NNP/pieces. so/RB/so /,/, these/DT/these are/VBP/are input/VBN/input instances/NNS/instances which/WDT/which begin/NN/begin with/IN/with 1/CD/1. that/IN/that is/VBZ/is /,/, they/PRP/they have/VBP/have 1/CD/1 in/IN/in the/DT/the first/JJ/first place/NNP/place. these/DT/these are/VBP/are input/VBN/input instances/NNS/instances which/WDT/which begin/NN/begin with/IN/with 2/CD/2. these/DT/these are/VBP/are input/VBN/input instances/NNS/instances which/WDT/which begin/NN/begin with/IN/with 3/CD/3. and/CC/and somewhere/RB/somewhere over/IN/over here/RB/here are/VBP/are input/VBN/input instances/NNS/instances which/WDT/which begin/NN/begin with/IN/with i/NNP/i. and/CC/and of/IN/of course/NN/course /,/, at/IN/at the/DT/the end/NN/end there/RB/there are/VBP/are instances/NNS/instances which/WDT/which begin/NN/begin with/IN/with n/NNP/n. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to pick/VB/pick a/DT/a group/NNP/group. and/CC/and /,/, then/RB/then i/PRP/i am/VBP/am going/VBG/going to/TO/to pick/VB/pick an/DT/an element/NN/element from/IN/from it/NNP/it. or/CC/or i/PRP/i can/MD/can ask/VB/ask /,/, what/WDT/what is/VBZ/is the/DT/the average/JJ/average time/NN/time taken/VBN/taken for/IN/for this/DT/this group/NN/group ?/./? and/CC/and if/IN/if all/DT/all this/DT/this groups/NNS/groups are/VBP/are identical/JJ/identical /,/, then/RB/then i/PRP/i can/MD/can just/RB/just take/VB/take this/DT/this average/JJ/average or/CC/or i/PRP/i will/MD/will have/VB/have to/TO/to wait/VB/wait with/IN/with the/DT/the size/NN/size of/IN/of this/DT/this group/NNP/group. so/RB/so /,/, that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what i/PRP/i have/VBP/have done/VBN/done over/IN/over here/NNP/here. so/RB/so /,/, i/PRP/i have/VBP/have taken/VBN/taken the/DT/the average/JJ/average time/NN/time for/IN/for this/DT/this group/NN/group which/WDT/which is/VBZ/is what/WP/what is/VBZ/is written/VBN/written over/IN/over here/RB/here ?/./? average/JJ/average time/NN/time given/VBN/given that/IN/that splitter/NN/splitter is/VBZ/is equal/JJ/equal to/TO/to i/NNP/i. but/CC/but /,/, given/VBN/given that/IN/that splitter/NN/splitter is/VBZ/is equal/JJ/equal to/TO/to i/PRP/i is/VBZ/is the/DT/the same/JJ/same thing/NN/thing as/IN/as saying/VBG/saying /,/, that/IN/that the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the list/NN/list is/VBZ/is i/NNP/i. so/RB/so /,/, i/PRP/i am/VBP/am in/IN/in this/DT/this region/NN/region of/IN/of my/PRP$/my input/NN/input space/NNP/space. and/CC/and since/IN/since /,/, i/PRP/i want/VBP/want the/DT/the average/JJ/average over/IN/over the/DT/the entire/JJ/entire space/NN/space /,/, i/PRP/i just/RB/just want/VBP/want to/TO/to i/PRP/i just/RB/just multiply/RB/multiply by/IN/by the/DT/the probability/NN/probability that/IN/that the/DT/the splitter/NN/splitter is/VBZ/is equal/JJ/equal to/TO/to i/NNP/i. or/CC/or the/DT/the fraction/NN/fraction which/WDT/which indicates/VBZ/indicates how/WRB/how many/JJ/many instances/NNS/instances are/VBP/are there/RB/there in/IN/in this/DT/this group/NN/group as/IN/as compared/VBN/compared to/TO/to the/DT/the entire/JJ/entire group/NNP/group. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i get/NNP/get. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 42/CD/42 /CD/) now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the average/JJ/average time/NN/time given/VBN/given that/IN/that the/DT/the splitter/NN/splitter is/VBZ/is i/PRP/i ?/./? well/RB/well /,/, if/IN/if we/PRP/we go/VBP/go back/RB/back to/TO/to our/PRP$/our algorithm/NN/algorithm here/NNP/here. so/RB/so /,/, i/PRP/i pick/VBP/pick a/DT/a splitter/NN/splitter over/IN/over here/NNP/here. then/RB/then /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have this/DT/this loop/NN/loop anyway/NNP/anyway. so/RB/so /,/, if/IN/if i/PRP/i am/VBP/am solving/VBG/solving a/DT/a problem/NN/problem of/IN/of size/NN/size n/NN/n /,/, i/PRP/i will/MD/will do/VB/do n/NN/n work/VB/work in/IN/in any/DT/any case/NNP/case. and/CC/and /,/, then/RB/then i/PRP/i will/MD/will have/VB/have my/PRP$/my inputs/NNS/inputs split/NN/split into/IN/into two/CD/two lists/NNS/lists or/CC/or three/CD/three lists/NNP/lists. but/CC/but /,/, only/RB/only two/CD/two of/IN/of which/WDT/which will/MD/will be/VB/be interesting/NNP/interesting. so/RB/so /,/, average/JJ/average time/NN/time given/VBN/given splitter/NN/splitter i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n for/IN/for that/DT/that loop/NN/loop to/TO/to take/VB/take /,/, loop/VB/loop to/TO/to do/VB/do its/PRP$/its work/NN/work plus/CC/plus the/DT/the average/JJ/average time/NN/time for/IN/for sorting/NN/sorting the/DT/the small/JJ/small set/NNP/set. but/CC/but /,/, what/WP/what is/VBZ/is the/DT/the small/JJ/small set/NN/set ?/./? it/PRP/it is/VBZ/is the/DT/the permutation/NN/permutation of/IN/of the/DT/the elements/NNS/elements of/IN/of integers/NNS/integers 1/CD/1 to/TO/to i/PRP/i minus/VBZ/minus 1/CD/1. and/CC/and the/DT/the average/JJ/average time/NN/time for/IN/for sorting/NN/sorting permutation/NN/permutation of/IN/of elements/NNS/elements i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through n/NNP/n. because/IN/because /,/, that/IN/that is/VBZ/is what/WP/what quick/JJ/quick sort/NN/sort does/NNP/does. it/PRP/it splits/VBZ/splits into/IN/into groups/NNS/groups /,/, it/PRP/it sorts/VBZ/sorts the/DT/the first/JJ/first group/NN/group /,/, takes/VBZ/takes the/DT/the equal/JJ/equal elements/NNS/elements in/IN/in which/WDT/which case/NN/case in/IN/in this/DT/this case/NN/case there/RB/there is/VBZ/is only/RB/only one/CD/one equal/JJ/equal element/NN/element which/WDT/which is/VBZ/is i/NNP/i. sorts/NNS/sorts the/DT/the last/JJ/last group/NN/group and/CC/and then/RB/then concatenates/VBZ/concatenates them/PRP/them together/NNP/together. so/RB/so /,/, in/IN/in addition/NN/addition to/TO/to sorting/VBG/sorting the/DT/the time/NN/time will/MD/will require/VB/require is/VBZ/is o/VBN/o of/IN/of n/NNP/n. so/RB/so /,/, you/PRP/you might/MD/might require/VB/require o/RB/o of/IN/of n/NN/n time/NN/time also/RB/also for/IN/for concatenation/NNP/concatenation. but/CC/but /,/, in/IN/in any/DT/any case/NN/case we/PRP/we have/VBP/have written/VBN/written o/NN/o without/IN/without actually/RB/actually mentioning/VBG/mentioning the/DT/the constant/NNP/constant. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is fine/NNP/fine. or/CC/or we/PRP/we might/MD/might have/VB/have a/DT/a clever/NN/clever data/NN/data structure/NN/structure in/IN/in which/WDT/which case/NN/case /,/, we/PRP/we do/VBP/do not/RB/not need/VB/need this/DT/this o/NN/o of/IN/of n/NN/n time/NNP/time. but/CC/but /,/, in/IN/in any/DT/any case/NN/case we/PRP/we need/VBP/need the/DT/the o/NN/o of/IN/of n/NN/n time/NN/time for/IN/for the/DT/the loop/NNP/loop. so/RB/so /,/, this/DT/this is/VBZ/is perfectly/RB/perfectly fine/NNP/fine. so/RB/so /,/, now/RB/now you/PRP/you have/VBP/have the/DT/the average/JJ/average time/NN/time for/IN/for sorting/NN/sorting permutation/NN/permutation of/IN/of 1/CD/1 through/IN/through i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and then/RB/then the/DT/the average/NN/average time/NN/time for/IN/for sorting/NN/sorting permutation/NN/permutation of/IN/of i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through n/NNP/n. here/RB/here is/VBZ/is the/DT/the important/JJ/important part/NNP/part. so/RB/so /,/, the/DT/the first/JJ/first time/NN/time we/PRP/we picked/VBD/picked the/DT/the splitter/NN/splitter to/TO/to be/VB/be i/PRP/i and/CC/and then/RB/then we/PRP/we constructed/VBD/constructed this/DT/this group/NNP/group. but/CC/but /,/, the/DT/the key/JJ/key observation/NN/observation has/VBZ/has to/TO/to be/VB/be /,/, that/IN/that the/DT/the numbers/NNS/numbers the/DT/the order/NN/order in/IN/in which/WDT/which these/DT/these numbers/NNS/numbers will/MD/will appear/VB/appear is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be particularly/RB/particularly biased/NNP/biased. so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that within/IN/within the/DT/the group/NN/group that/WDT/that we/PRP/we selected/VBD/selected /,/, i/PRP/i is/VBZ/is going/VBG/going to/TO/to appear/VB/appear as/IN/as the/DT/the first/JJ/first element/NNP/element. since/IN/since we/PRP/we are/VBP/are dealing/VBG/dealing with/IN/with all/DT/all possible/JJ/possible permutations/NNS/permutations /,/, the/DT/the other/JJ/other elements/NNS/elements would/MD/would appear/VB/appear equally/RB/equally likely/JJ/likely in/IN/in the/DT/the first/JJ/first space/NN/space in/IN/in this/DT/this group/NN/group or/CC/or in/IN/in the/DT/the second/JJ/second space/NN/space in/IN/in this/DT/this group/NN/group or/CC/or in/IN/in the/DT/the third/JJ/third space/NN/space in/IN/in this/DT/this group/NNP/group. so/RB/so /,/, this/DT/this group/NN/group will/MD/will have/VB/have all/PDT/all possible/JJ/possible permutations/NNS/permutations of/IN/of 1/CD/1 through/IN/through i/PRP/i minus/VBZ/minus 1/CD/1 as/IN/as well/NNP/well. so/RB/so /,/, if/IN/if it/PRP/it has/VBZ/has all/DT/all possible/JJ/possible permutations/NNS/permutations of/IN/of 1/CD/1 through/IN/through i/PRP/i minus/VBZ/minus 1/CD/1 /,/, then/RB/then the/DT/the time/NN/time average/NN/average time/NN/time for/IN/for sorting/NN/sorting it/PRP/it will/MD/will be/VB/be t/VBN/t of/IN/of i/PRP/i or/CC/or other/JJ/other t/NN/t of/IN/of i/PRP/i minus/VBZ/minus 1/CD/1. it/PRP/it does/VBZ/does not/RB/not really/RB/really matter/JJR/matter /,/, t/NN/t of/IN/of i/PRP/i over/IN/over here/NNP/here. the/DT/the time/NN/time over/IN/over here/RB/here is/VBZ/is going/VBG/going to/TO/to be/VB/be i/PRP/i plus/RB/plus 1/CD/1 through/IN/through n/NN/n or/CC/or it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be t/VBN/t of/IN/of n/NN/n minus/NN/minus i/NNP/i. so/RB/so /,/, i/PRP/i think/NNP/think. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we get/VB/get from/IN/from this/DT/this ?/./? well/RB/well this/DT/this expression/NN/expression has/VBZ/has to/TO/to be/VB/be put/VBN/put in/RP/in over/IN/over here/RB/here and/CC/and as/IN/as a/DT/a result/NN/result we/PRP/we get/VBP/get something/NN/something like/IN/like this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 03/CD/03 /CD/) t/NN/t of/IN/of n/NN/n is/VBZ/is equal/JJ/equal to/TO/to sum/NN/sum over/IN/over i/PRP/i of/IN/of this/DT/this probability/NN/probability that/IN/that /,/, the/DT/the splitter/NN/splitter is/VBZ/is i/NNP/i. there/RB/there are/VBP/are n/VBN/n choices/NNS/choices for/IN/for i/PRP/i and/CC/and since/IN/since we/PRP/we are/VBP/are considering/VBG/considering all/DT/all possible/JJ/possible permutations/NNP/permutations. everyone/NN/everyone is/VBZ/is equally/RB/equally likely/JJ/likely to/TO/to appear/VB/appear in/IN/in the/DT/the first/JJ/first place/NNP/place. and/CC/and therefore/RB/therefore /,/, the/DT/the probability/NN/probability that/IN/that i/PRP/i appears/VBZ/appears in/IN/in the/DT/the first/JJ/first place/NN/place is/VBZ/is just/RB/just 1/CD/1 over/IN/over n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is 1/CD/1 over/IN/over n/NN/n and/CC/and this/DT/this we/PRP/we just/RB/just established/VBD/established is/VBZ/is this/NNP/this. and/CC/and that/IN/that is/VBZ/is what/WP/what i/PRP/i have/VBP/have written/VBN/written over/IN/over here/NNP/here. i/PRP/i just/RB/just remarked/VBD/remarked that/IN/that this/DT/this should/MD/should have/VB/have been/VBN/been i/PRP/i minus/VBZ/minus 1/CD/1. and/CC/and that/IN/that is/VBZ/is what/WP/what i/PRP/i have/VBP/have put/VBN/put in/IN/in over/IN/over here/NNP/here. now/RB/now /,/, this/DT/this recurrence/NN/recurrence can/MD/can actually/RB/actually be/VB/be solved/NNP/solved. it/PRP/it is/VBZ/is a/DT/a little/RB/little bit/NN/bit tedious/JJ/tedious algebraically/RB/algebraically /,/, but/CC/but you/PRP/you can/MD/can certainly/RB/certainly solve/VB/solve it/PRP/it by/IN/by recursion/NN/recursion induction/NNP/induction. since/IN/since i/PRP/i am/VBP/am telling/VBG/telling you/PRP/you that/IN/that /,/, the/DT/the solution/NN/solution is/VBZ/is n/VBN/n log/NN/log n/NNP/n. so/RB/so /,/, that/IN/that will/MD/will establish/VB/establish that/IN/that the/DT/the average/NN/average case/NN/case of/IN/of quick/NN/quick sort/NN/sort is/VBZ/is n/VBN/n log/NN/log is/VBZ/is o/RB/o of/IN/of log/NN/log n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 02/CD/02 /CD/) now/RB/now /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do we/PRP/we are/VBP/are going/VBG/going to/TO/to consider/VB/consider an/DT/an alternate/NN/alternate method/NN/method for/IN/for solving/NN/solving this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be much/RB/much more/RBR/more direct/NNP/direct. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to write/VB/write recurrences/NNP/recurrences. we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to do/VB/do some/DT/some interesting/JJ/interesting counting/NNP/counting. so/RB/so /,/, here/RB/here we/PRP/we will/MD/will focus/VB/focus on/IN/on the/DT/the comparisons/NNS/comparisons performed/VBD/performed by/IN/by the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, after/IN/after all/DT/all the/DT/the important/JJ/important operation/NN/operation in/IN/in all/DT/all of/IN/of this/DT/this /,/, is/VBZ/is comparison/NNP/comparison. so/RB/so /,/, if/IN/if you/PRP/you go/VBP/go back/RB/back to/TO/to the/DT/the loop/NN/loop let/VBD/let us/PRP/us just/RB/just take/VBP/take a/DT/a look/NN/look at/IN/at that/NNP/that. we/PRP/we did/VBD/did other/JJ/other work/NN/work as/IN/as well/NNP/well. say/VBP/say we/PRP/we added/VBD/added elements/NNS/elements into/IN/into lists/NNP/lists. but/CC/but /,/, corresponding/VBG/corresponding to/TO/to every/DT/every such/JJ/such operation/NN/operation there/EX/there is/VBZ/is a/DT/a comparison/NN/comparison operation/NN/operation going/VBG/going on/IN/on as/IN/as well/NNP/well. so/RB/so /,/, certainly/RB/certainly if/IN/if we/PRP/we bound/VBP/bound the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, then/RB/then that/IN/that will/MD/will give/VB/give us/PRP/us a/DT/a good/JJ/good indication/NN/indication of/IN/of the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the entire/JJ/entire algorithm/NNP/algorithm. so/RB/so /,/, that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to estimate/VB/estimate what/WP/what is/VBZ/is the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons performed/VBN/performed by/IN/by the/DT/the algorithm/NN/algorithm on/IN/on the/DT/the average/NNP/average. and/CC/and we/PRP/we will/MD/will show/VB/show /,/, then/RB/then that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something like/IN/like o/NN/o of/IN/of n/NN/n log/NN/log n/NNP/n. well/RB/well /,/, let/VB/let us/PRP/us first/RB/first determine/VBP/determine what/WP/what is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of comparisons/NNS/comparisons possible/JJ/possible ?/./? so/RB/so /,/, the/DT/the maximum/NN/maximum number/NN/number clearly/RB/clearly is/VBZ/is n/VBN/n into/IN/into n/NN/n minus/NN/minus 1/CD/1 upon/IN/upon 2/CD/2. this/DT/this is/VBZ/is /,/, if/IN/if every/DT/every key/JJ/key is/VBZ/is compared/VBN/compared with/IN/with every/DT/every other/JJ/other key/NNP/key. and/CC/and of/IN/of course/NN/course /,/, if/IN/if the/DT/the input/NN/input is/VBZ/is the/DT/the worst/JJS/worst case/NN/case input/NN/input /,/, then/RB/then something/NN/something like/IN/like this/DT/this actually/RB/actually happens/NNP/happens. but/CC/but /,/, this/DT/this will/MD/will not/RB/not this/DT/this will/MD/will /,/, but/CC/but if/IN/if the/DT/the input/NN/input is/VBZ/is some/DT/some permutation/NN/permutation /,/, then/RB/then every/DT/every key/JJ/key will/MD/will not/RB/not get/VB/get compared/VBN/compared with/IN/with other/JJ/other key/NNP/key. so/IN/so /,/, just/RB/just to/TO/to see/VB/see clearly/RB/clearly what/WP/what is/VBZ/is going/VBG/going on/IN/on /,/, i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to describe/VB/describe a/DT/a table/JJ/table which/WDT/which shows/VBZ/shows what/WP/what happens/NNS/happens for/IN/for different/JJ/different input/NN/input instances/NNP/instances. so/RB/so /,/, a/DT/a table/JJ/table this/DT/this table/JJ/table will/MD/will have/VB/have rows/NNP/rows. and/CC/and there/EX/there will/MD/will be/VB/be a/DT/a row/NN/row corresponding/VBG/corresponding to/TO/to every/DT/every possible/JJ/possible comparison/NNP/comparison. so/RB/so /,/, our/PRP$/our keys/NNS/keys are/VBP/are integers/NNS/integers in/IN/in the/DT/the range/NN/range 1/CD/1 through/IN/through n/NNP/n. and/CC/and for/IN/for every/DT/every i/PRP/i and/CC/and j/VB/j /,/, we/PRP/we will/MD/will have/VB/have a/DT/a row/NNP/row. so/RB/so /,/, i/PRP/i compare/VBP/compare j/NN/j that/IN/that will/MD/will be/VB/be the/DT/the label/NN/label of/IN/of that/DT/that row/NNP/row. and/CC/and in/IN/in that/DT/that row/NN/row /,/, we/PRP/we will/MD/will have/VB/have information/NN/information about/IN/about whether/IN/whether i/PRP/i and/CC/and j/VB/j are/VBP/are compared/VBN/compared in/IN/in every/DT/every possible/JJ/possible input/NN/input instance/NNP/instance. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the columns/NNS/columns will/MD/will be/VB/be the/DT/the input/NN/input instances/NNP/instances. so/RB/so /,/, the/DT/the entries/NNS/entries are/VBP/are going/VBG/going to/TO/to be/VB/be indexed/VBN/indexed by/IN/by two/CD/two indices/NNS/indices /,/, one/CD/one is/VBZ/is i/PRP/i colon/VBP/colon j/NNP/j. well/RB/well /,/, this/DT/this itself/PRP/itself is/VBZ/is a/DT/a complicated/JJ/complicated index/NN/index and/CC/and the/DT/the other/JJ/other is/VBZ/is this/DT/this permutation/NN/permutation p/NNP/p. so/RB/so /,/, here/RB/here for/IN/for example/NN/example /,/, is/VBZ/is a/DT/a table/NNP/table. of/IN/of course/NN/course /,/, i/PRP/i have/VBP/have just/RB/just made/VBN/made up/RP/up the/DT/the entries/NNS/entries /,/, just/RB/just to/TO/to tell/VB/tell you/PRP/you what/WP/what this/DT/this table/JJ/table might/NN/might look/NN/look like/NNP/like. so/RB/so /,/, the/DT/the rows/NNS/rows are/VBP/are labeled/VBN/labeled i/PRP/i colon/VBP/colon j/NNP/j. so/RB/so /,/, starting/VBG/starting with/IN/with 1/CD/1 column/NN/column 2/CD/2 /,/, 1/CD/1 compare/NN/compare 2/CD/2 /,/, 1/CD/1 compare/NN/compare 3/CD/3 and/CC/and so/RB/so on/IN/on to/TO/to n/VB/n minus/NN/minus 1/CD/1 compare/NN/compare n/NNP/n. so/RB/so /,/, during/IN/during the/DT/the execution/NN/execution whether/IN/whether it/PRP/it is/VBZ/is or/CC/or not/RB/not 1/CD/1 is/VBZ/is compared/VBN/compared to/TO/to 2/CD/2 /,/, when/WRB/when permutation/NN/permutation 1/CD/1 is/VBZ/is input/VBN/input is/VBZ/is going/VBG/going to/TO/to be/VB/be written/VBN/written out/RP/out here/NNP/here. so/RB/so /,/, you/PRP/you have/VBP/have left/VBN/left a/DT/a blank/NN/blank over/IN/over here/NNP/here. and/CC/and that/IN/that just/RB/just says/VBZ/says that/IN/that node/NN/node /,/, that/IN/that node/NN/node will/MD/will not/RB/not be/VB/be compare/NNP/compare. it/PRP/it is/VBZ/is just/RB/just an/DT/an example/NNP/example. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, 1/CD/1 and/CC/and 3/CD/3 will/MD/will be/VB/be compared/VBN/compared /,/, when/WRB/when permutation/NN/permutation 1/CD/1 is/VBZ/is the/DT/the input/NNP/input. similarly/RB/similarly /,/, if/IN/if permutation/NN/permutation 2/CD/2 is/VBZ/is the/DT/the input/NN/input then/RB/then 1/CD/1 and/CC/and 2/CD/2 will/MD/will get/VB/get compared/VBN/compared /,/, 1/CD/1 and/CC/and 3/CD/3 will/MD/will get/VB/get compared/VBN/compared and/CC/and may/MD/may be/VB/be some/DT/some other/JJ/other things/NNS/things will/MD/will also/RB/also get/VB/get compared/NNP/compared. similarly/RB/similarly /,/, there/EX/there will/MD/will be/VB/be other/JJ/other permutations/NNS/permutations for/IN/for which/WDT/which this/DT/this will/MD/will be/VB/be the/DT/the pattern/NN/pattern of/IN/of comparison/NN/comparison /,/, this/DT/this will/MD/will be/VB/be and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial possible/JJ/possible input/NN/input permutation/NNP/permutation. so/RB/so /,/, we/PRP/we have/VBP/have n/VBN/n factorial/JJ/factorial possible/JJ/possible columns/NNP/columns. and/CC/and for/IN/for each/DT/each possible/JJ/possible comparison/NN/comparison /,/, we/PRP/we have/VBP/have a/DT/a row/NNP/row. and/CC/and their/PRP$/their intersection/NN/intersection says/VBZ/says that/IN/that /,/, whether/IN/whether that/DT/that comparison/NN/comparison actually/RB/actually happens/VBZ/happens in/IN/in the/DT/the corresponding/NN/corresponding execution/NNP/execution. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 00/CD/00 /CD/) the/DT/the key/JJ/key question/NN/question is/VBZ/is /,/, are/VBP/are there/RB/there many/JJ/many t/NN/t cells/NNS/cells in/IN/in this/DT/this or/CC/or are/VBP/are most/RBS/most of/IN/of the/DT/the cells/NNS/cells blank/VBP/blank ?/./? what/WP/what we/PRP/we really/RB/really want/VBP/want to/TO/to know/VB/know is/VBZ/is /,/, what/WP/what fraction/NN/fraction of/IN/of the/DT/the cells/NNS/cells in/IN/in the/DT/the column/NN/column are/VBP/are marked/VBN/marked ?/./? or/CC/or what/WP/what is/VBZ/is the/DT/the average/JJ/average number/NN/number of/IN/of cells/NNS/cells which/WDT/which are/VBP/are marked/VBN/marked in/IN/in a/DT/a given/VBN/given column/NN/column ?/./? we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to answer/VB/answer this/DT/this question/NN/question directly/NNP/directly. we/PRP/we will/MD/will begin/VB/begin by/IN/by asking/NN/asking /,/, what/WP/what is/VBZ/is the/DT/the fraction/NN/fraction of/IN/of cells/NNS/cells which/WDT/which are/VBP/are marked/VBN/marked in/IN/in any/DT/any row/NN/row ?/./? and/CC/and interestingly/RB/interestingly /,/, that/IN/that will/MD/will tell/VB/tell us/PRP/us something/NN/something about/IN/about what/WP/what happens/NNS/happens in/IN/in columns/NNS/columns as/IN/as well/NNP/well. say/VBP/say /,/, if/IN/if i/PRP/i go/VBP/go to/TO/to a/DT/a particular/JJ/particular row/NN/row of/IN/of this/DT/this table/NN/table or/CC/or the/DT/the row/NN/row which/WDT/which has/VBZ/has labeled/VBN/labeled i/PRP/i colon/VBP/colon j/NN/j /,/, the/DT/the question/NN/question that/IN/that i/PRP/i am/VBP/am asking/VBG/asking is/VBZ/is /,/, is/VBZ/is i/PRP/i going/VBG/going to/TO/to be/VB/be compared/VBN/compared with/IN/with j/NN/j in/IN/in the/DT/the first/JJ/first permutation/NN/permutation or/CC/or in/IN/in the/DT/the first/JJ/first input/NN/input instance/NN/instance or/CC/or in/IN/in the/DT/the second/JJ/second input/NN/input instance/NN/instance in/IN/in the/DT/the third/JJ/third input/NN/input instance/NN/instance and/CC/and so/RB/so on/NNP/on. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 12/CD/12 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the key/JJ/key observation/NN/observation for/IN/for i/PRP/i to/TO/to be/VB/be compared/VBN/compared with/IN/with j/NN/j either/DT/either i/PRP/i or/CC/or j/VB/j must/MD/must be/VB/be chosen/VBN/chosen as/IN/as a/DT/a splitter/NN/splitter before/IN/before /,/, one/CD/one of/IN/of the/DT/the elements/NNS/elements between/IN/between that/DT/that is/VBZ/is elements/NNS/elements i/PRP/i plus/VBZ/plus j/NN/j or/CC/or j/NN/j minus/NN/minus 1/CD/1 gets/NNS/gets splitter/NNP/splitter. so/RB/so /,/, let/VB/let me/PRP/me explain/VB/explain this/DT/this a/DT/a little/RB/little bit/NNP/bit. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 33/CD/33 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is i/PRP/i here/RB/here is/VBZ/is j/NN/j and/CC/and there/EX/there are/VBP/are some/DT/some elements/NNS/elements in/IN/in between/NNP/between. well/RB/well /,/, i/PRP/i know/VBP/know i/PRP/i plus/RB/plus 1/CD/1 i/PRP/i plus/VBZ/plus 2/CD/2 all/DT/all the/DT/the way/NN/way till/IN/till j/NN/j minus/NN/minus 1/CD/1. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the elements/NNS/elements that/WDT/that i/PRP/i am/VBP/am considering/NNP/considering. of/IN/of course/NN/course /,/, they/PRP/they will/MD/will not/RB/not appear/VB/appear in/IN/in my/PRP$/my input/NN/input instance/NN/instance in/IN/in this/DT/this order/NNP/order. they/PRP/they will/MD/will be/VB/be in/IN/in my/PRP$/my input/NN/input instance/NN/instance /,/, they/PRP/they will/MD/will be/VB/be scrambled/VBN/scrambled up/NNP/up. but/CC/but /,/, i/PRP/i am/VBP/am just/RB/just thinking/VBG/thinking of/IN/of them/PRP/them as/IN/as sitting/VBG/sitting in/IN/in a/DT/a line/NNP/line. now/RB/now /,/, suppose/VBP/suppose some/DT/some element/NN/element over/IN/over here/RB/here gets/VBZ/gets picked/VBN/picked up/RP/up as/RB/as a/DT/a splitter/NN/splitter /,/, what/WP/what happens/NNS/happens ?/./? if/IN/if this/DT/this element/NN/element is/VBZ/is picked/VBN/picked as/RB/as a/DT/a splitter/NN/splitter /,/, then/RB/then this/DT/this element/NN/element is/VBZ/is compared/VBN/compared with/IN/with everything/NN/everything else/NNP/else. if/IN/if everything/NN/everything else/RB/else is/VBZ/is compared/VBN/compared with/IN/with it/PRP/it /,/, then/RB/then this/DT/this i/PRP/i will/MD/will get/VB/get input/VBN/input in/IN/in the/DT/the small/JJ/small list/NNP/list. so/RB/so /,/, i/PRP/i will/MD/will go/VB/go into/IN/into the/DT/the small/JJ/small list/NNP/list. j/NN/j on/IN/on the/DT/the other/JJ/other hand/NN/hand will/MD/will get/VB/get input/VBN/input in/IN/in the/DT/the large/JJ/large list/NNP/list. but/CC/but /,/, remember/NN/remember that/IN/that once/RB/once an/DT/an element/NN/element goes/VBZ/goes into/IN/into this/DT/this list/NN/list and/CC/and another/DT/another element/NN/element goes/VBZ/goes into/IN/into another/DT/another list/NN/list /,/, there/EX/there is/VBZ/is no/DT/no question/NN/question of/IN/of comparing/VBG/comparing them/PRP/them subsequently/NNP/subsequently. so/RB/so /,/, if/IN/if any/DT/any of/IN/of the/DT/the elements/NNS/elements in/IN/in between/IN/between over/IN/over here/RB/here get/VB/get picked/VBN/picked as/IN/as splitters/NNS/splitters /,/, before/IN/before any/DT/any of/IN/of these/DT/these two/CD/two elements/NNS/elements get/VBP/get picked/NNP/picked. then/RB/then /,/, we/PRP/we know/VBP/know for/IN/for sure/RB/sure that/WDT/that these/DT/these elements/NNS/elements will/MD/will go/VB/go into/IN/into separate/JJ/separate lists/NNP/lists. and/CC/and therefore/RB/therefore /,/, they/PRP/they will/MD/will not/RB/not be/VB/be compared/NNP/compared. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, before/IN/before these/DT/these elements/NNS/elements have/VBP/have been/VBN/been picked/VBN/picked suppose/NN/suppose i/PRP/i gets/VBZ/gets chosen/VBN/chosen /,/, what/WP/what happens/NNS/happens then/RB/then ?/./? well/RB/well /,/, then/RB/then i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be compared/VBN/compared with/IN/with everything/NN/everything larger/JJR/larger than/IN/than it/PRP/it /,/, or/CC/or certainly/RB/certainly everything/NN/everything which/WDT/which has/VBZ/has not/RB/not been/VBN/been found/VBN/found which/WDT/which is/VBZ/is in/IN/in the/DT/the current/JJ/current list/NNP/list. but/CC/but /,/, if/IN/if nothing/NN/nothing in/IN/in this/DT/this has/VBZ/has been/VBN/been selected/VBN/selected as/IN/as a/DT/a splitter/NN/splitter /,/, then/RB/then this/DT/this had/VBD/had been/VBN/been better/JJR/better been/VBN/been in/IN/in the/DT/the current/JJ/current list/NNP/list. and/CC/and therefore/RB/therefore /,/, j/NN/j will/MD/will get/VB/get compared/VBN/compared with/IN/with i/PRP/i and/CC/and vice/NN/vice versa/NNP/versa. if/IN/if j/NN/j gets/NNS/gets picked/VBD/picked first/JJ/first /,/, then/RB/then i/PRP/i will/MD/will get/VB/get compared/VBN/compared because/IN/because j/NN/j will/MD/will be/VB/be compared/VBN/compared with/IN/with everything/NN/everything over/IN/over here/NNP/here. so/RB/so /,/, which/WDT/which means/VBZ/means that/DT/that /,/, these/DT/these two/CD/two elements/NNS/elements must/MD/must get/VB/get split/VBN/split as/IN/as splitters/NNS/splitters before/IN/before these/DT/these /,/, inner/JJ/inner elements/NNS/elements are/VBP/are picked/NNP/picked. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the probability/NN/probability of/IN/of that/DT/that happening/VBG/happening ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 59/CD/59 /CD/) so/RB/so /,/, i/PRP/i claim/VBP/claim that/IN/that probability/NN/probability of/IN/of i/PRP/i or/CC/or j/VB/j being/VBG/being chosen/VBN/chosen before/IN/before i/PRP/i plus/CC/plus 1/CD/1 or/CC/or before/IN/before elements/NNS/elements i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through j/NN/j minus/NN/minus 1/CD/1 is/VBZ/is in/IN/in fact/NN/fact /,/, 2/CD/2 minus/NN/minus 2/CD/2 upon/IN/upon j/NN/j minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 22/CD/22 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is i/PRP/i here/RB/here is/VBZ/is j/NNP/j. so/RB/so /,/, how/WRB/how many/JJ/many elements/NNS/elements are/VBP/are these/DT/these in/IN/in total/JJ/total ?/./? these/DT/these are/VBP/are j/NN/j minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1 elements/NNP/elements. and/CC/and out/IN/out of/IN/of these/DT/these /,/, the/DT/the comparison/NN/comparison happens/VBZ/happens only/RB/only if/IN/if this/DT/this is/VBZ/is picked/VBN/picked or/CC/or this/DT/this is/VBZ/is picked/NNP/picked. so/RB/so /,/, there/EX/there are/VBP/are two/CD/two cases/NNS/cases which/WDT/which are/VBP/are good/JJ/good out/IN/out of/IN/of j/NN/j minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1 cases/NNP/cases. and/CC/and therefore/RB/therefore /,/, that/IN/that is/VBZ/is the/DT/the probability/NNP/probability. so/RB/so /,/, now/RB/now actually/RB/actually things/NNS/things are/VBP/are very/RB/very /,/, very/RB/very simple/NNP/simple. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 59/CD/59 /CD/) so/RB/so /,/, the/DT/the fact/NN/fact that/IN/that i/PRP/i or/CC/or j/VB/j is/VBZ/is probability/NN/probability that/IN/that i/PRP/i or/CC/or j/VB/j is/VBZ/is chosen/VBN/chosen /,/, before/IN/before i/PRP/i plus/CC/plus 1/CD/1 through/IN/through j/NN/j minus/NN/minus 1/CD/1 is/VBZ/is this/DT/this just/RB/just tells/VBZ/tells us/PRP/us something/NN/something very/RB/very simple/NNP/simple. it/PRP/it tells/VBZ/tells us/PRP/us that/IN/that the/DT/the fraction/NN/fraction of/IN/of t/NN/t s/NNS/s in/IN/in this/DT/this row/NN/row is/VBZ/is just/RB/just this/NNP/this. because/IN/because /,/, that/IN/that is/VBZ/is what/WP/what the/DT/the probability/NN/probability is/NNP/is. we/PRP/we are/VBP/are going/VBG/going to/TO/to pick/VB/pick a/DT/a row/NN/row at/IN/at random/NNP/random. and/CC/and we/PRP/we know/VBP/know that/IN/that /,/, 2/CD/2 upon/IN/upon j/NN/j minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1 fraction/NN/fraction of/IN/of the/DT/the time/NN/time we/PRP/we get/VBP/get a/DT/a t/NN/t or/CC/or the/DT/the comparison/NN/comparison happens/NNP/happens. so/RB/so that/IN/that means/NNS/means /,/, in/IN/in other/JJ/other words/NNS/words the/DT/the number/NN/number of/IN/of columns/NNS/columns the/DT/the fraction/NN/fraction of/IN/of the/DT/the number/NN/number of/IN/of columns/NNS/columns in/IN/in which/WDT/which t/NN/t s/VBZ/s appear/JJ/appear /,/, is/VBZ/is just/RB/just going/VBG/going to/TO/to be/VB/be this/DT/this much/NNP/much. so/RB/so /,/, what/WDT/what does/VBZ/does that/IN/that tell/NN/tell us/PRP/us ?/./? so/RB/so /,/, it/PRP/it tells/VBZ/tells us/PRP/us that/IN/that the/DT/the total/JJ/total number/NN/number of/IN/of t/NN/t s/NNS/s in/IN/in the/DT/the entire/JJ/entire table/NN/table is/VBZ/is going/VBG/going to/TO/to be/VB/be sum/NN/sum over/IN/over all/DT/all the/DT/the rows/NNS/rows of/IN/of this/DT/this multiplied/JJ/multiplied by/IN/by n/NN/n factorial/NNP/factorial. let/NN/let me/PRP/me explain/VB/explain that/IN/that a/DT/a bit/NN/bit slowly/NNP/slowly. so/RB/so /,/, from/IN/from this/DT/this what/WP/what can/MD/can i/VB/i conclude/VBP/conclude ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 03/CD/03 /CD/) i/PRP/i can/MD/can conclude/VB/conclude that/IN/that /,/, in/IN/in row/NN/row i/PRP/i colon/VBP/colon j/NN/j contains/NNS/contains n/VBP/n factorial/JJ/factorial times/NNS/times 2/CD/2 upon/NN/upon j/NN/j minus/NN/minus i/PRP/i plus/VBZ/plus 1/CD/1 t/NN/t s/NNS/s /,/, what/WP/what t/NN/t s/VBZ/s represent/NN/represent ?/./? where/WRB/where comparisons/NNS/comparisons happen/VBP/happen /,/, whether/IN/whether comparisons/NNS/comparisons happen/VBP/happen or/CC/or not/NNP/not. but/CC/but /,/, if/IN/if i/PRP/i want/VBP/want over/IN/over the/DT/the entire/JJ/entire table/NN/table i/PRP/i just/RB/just have/VBP/have to/TO/to sum/VB/sum over/IN/over all/DT/all possible/JJ/possible rows/NNP/rows. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i have/VBP/have written/VBN/written out/RP/out here/NNP/here. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 33/CD/33 /CD/) except/IN/except that/DT/that the/DT/the n/NN/n factorial/NN/factorial has/VBZ/has taken/VBN/taken outside/IN/outside because/IN/because /,/, it/PRP/it does/VBZ/does not/RB/not depend/VB/depend on/IN/on what/WP/what row/NN/row i/PRP/i am/VBP/am looking/VBG/looking at/NNP/at. well/RB/well /,/, this/DT/this expression/NN/expression can/MD/can be/VB/be written/VBN/written out/RP/out slightly/RB/slightly differently/NNP/differently. so/RB/so /,/, all/DT/all possible/JJ/possible labels/NNS/labels i/PRP/i j/VBP/j /,/, i/PRP/i can/MD/can now/RB/now classify/VB/classify as/IN/as all/DT/all possible/JJ/possible levels/NNS/levels in/IN/in which/WDT/which j/NN/j is/VBZ/is a/DT/a second/JJ/second element/NNP/element. and/CC/and /,/, then/RB/then the/DT/the first/JJ/first element/NN/element has/VBZ/has to/TO/to be/VB/be smaller/NNP/smaller. and/CC/and therefore/RB/therefore /,/, it/PRP/it is/VBZ/is sum/NN/sum over/IN/over i/PRP/i is/VBZ/is less/JJR/less than/IN/than j/NN/j of/IN/of this/DT/this expression/NNP/expression. but/CC/but /,/, what/WP/what is/VBZ/is that/IN/that /,/, so/RB/so summation/NN/summation over/IN/over i/PRP/i of/IN/of i/PRP/i less/JJR/less than/IN/than j/NN/j of/IN/of this/DT/this expression/NN/expression /,/, well/NNP/well. what/WP/what is/VBZ/is the/DT/the first/JJ/first term/NN/term ?/./? so/RB/so /,/, i/PRP/i begin/VBP/begin from/IN/from 1/CD/1 and/CC/and so/RB/so /,/, first/JJ/first term/NN/term is/VBZ/is simply/RB/simply 2/CD/2 upon/IN/upon j/NNP/j. and/CC/and next/JJ/next term/NN/term is/VBZ/is 2/CD/2 upon/IN/upon j/NN/j minus/NN/minus 1/CD/1 and/CC/and so/RB/so up/IN/up on/IN/on until/IN/until 2/CD/2. but/CC/but /,/, what/WP/what is/VBZ/is this/DT/this ?/./? so/RB/so /,/, this/DT/this is/VBZ/is let/VB/let me/PRP/me write/VB/write it/PRP/it down/IN/down again/NNP/again. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 37/CD/37 /CD/) it/PRP/it is/VBZ/is 2/CD/2 upon/IN/upon j/NN/j plus/CC/plus 2/CD/2 upon/IN/upon j/NN/j minus/NN/minus 1/CD/1 plus/CC/plus all/DT/all the/DT/the way/NN/way till/IN/till 2/CD/2 upon/IN/upon 2/CD/2 or/CC/or written/VBN/written differently/RB/differently /,/, it/PRP/it is/VBZ/is 2/CD/2 times/NNS/times 1/CD/1 plus/NN/plus half/NN/half plus/CC/plus one/CD/one third/JJ/third all/DT/all the/DT/the way/NN/way upon/IN/upon till/NN/till 1/CD/1 upon/IN/upon j/NNP/j. and/CC/and this/DT/this we/PRP/we know/VBP/know simply/RB/simply l/JJ/l n/NN/n n/NN/n by/IN/by treating/NN/treating this/DT/this sum/NN/sum to/TO/to an/DT/an integral/JJ/integral /,/, converting/VBG/converting it/PRP/it to/TO/to an/DT/an integral/NNP/integral. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a good/JJ/good estimate/NN/estimate or/CC/or in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is an/DT/an upper/JJ/upper bound/NNP/bound. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 13/CD/13 /CD/) so/RB/so /,/, finally/RB/finally we/PRP/we have/VBP/have this/DT/this whole/JJ/whole thing/NN/thing as/IN/as n/NN/n factorial/NN/factorial times/NNS/times sum/NN/sum over/IN/over j/NN/j of/IN/of o/NN/o of/IN/of l/NN/l n/NN/n j/NNP/j. but/CC/but /,/, if/IN/if you/PRP/you are/VBP/are going/VBG/going to/TO/to take/VB/take the/DT/the sum/NN/sum over/IN/over j/NN/j /,/, what/WP/what do/VBP/do we/PRP/we get/VB/get ?/./? well/RB/well /,/, we/PRP/we get/VBP/get n/VBN/n l/NN/l n/NN/n and/CC/and n/NNP/n. so/RB/so /,/, we/PRP/we get/VBP/get n/VBN/n l/NN/l and/CC/and n/NN/n over/IN/over here/RB/here /,/, what/WDT/what is/VBZ/is n/VBN/n l/NN/l and/CC/and n/NN/n ?/./? so/RB/so /,/, we/PRP/we have/VBP/have total/JJ/total number/NN/number of/IN/of t/NN/t s/NNS/s in/IN/in the/DT/the entire/JJ/entire table/NN/table list/NN/list n/NN/n factorial/NN/factorial times/NNS/times n/VBP/n l/NN/l n/NN/n n/NNP/n. so/RB/so /,/, what/WDT/what then/RB/then is/VBZ/is the/DT/the number/NN/number of/IN/of t/NN/t s/NNS/s per/IN/per column/NN/column or/CC/or what/WP/what is/VBZ/is the/DT/the average/JJ/average number/NN/number of/IN/of t/NN/t s/NNS/s per/IN/per column/NN/column ?/./? well/RB/well /,/, how/WRB/how many/JJ/many columns/NNS/columns are/VBP/are there/RB/there are/VBP/are there/RB/there ?/./? there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial columns/NNP/columns. and/CC/and therefore/RB/therefore /,/, we/PRP/we divide/VBP/divide this/DT/this total/NN/total number/NN/number by/IN/by n/NN/n factorial/JJ/factorial and/CC/and then/RB/then we/PRP/we get/VBP/get o/RB/o of/IN/of n/NN/n l/NN/l n/NN/n n/NNP/n. so/RB/so /,/, average/JJ/average running/NN/running time/NN/time is/VBZ/is o/RB/o of/IN/of n/NN/n l/NN/l n/NN/n n/NN/n and/CC/and why/WRB/why is/VBZ/is that/IN/that ?/./? because/IN/because t/NN/t s/NNS/s represent/VBP/represent the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons /,/, and/CC/and we/PRP/we said/VBD/said that/IN/that the/DT/the average/NN/average that/IN/that the/DT/the time/NN/time is/VBZ/is in/IN/in fact/NN/fact proportional/JJ/proportional to/TO/to the/DT/the number/NN/number of/IN/of comparisons/NNP/comparisons. so/RB/so /,/, the/DT/the average/JJ/average running/NN/running time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n l/NN/l n/NN/n n/NNP/n. but/CC/but /,/, o/VBP/o of/IN/of n/NN/n l/NN/l n/NN/n n/NN/n is/VBZ/is simply/RB/simply o/RB/o of/IN/of n/NN/n log/NN/log n/NN/n as/IN/as well/NNP/well. so/RB/so /,/, here/RB/here the/DT/the base/NN/base was/VBD/was the/DT/the natural/JJ/natural base/NN/base was/VBD/was e/JJ/e or/CC/or this/DT/this was/VBD/was the/DT/the natural/JJ/natural logarithm/NNP/logarithm. here/RB/here the/DT/the base/NN/base is/VBZ/is 2/CD/2 /,/, but/CC/but that/IN/that does/VBZ/does not/RB/not matter/VB/matter log/NN/log of/IN/of n/NN/n and/CC/and l/NN/l n/NN/n of/IN/of n/NN/n are/VBP/are within/IN/within a/DT/a constant/JJ/constant factor/NN/factor of/IN/of each/DT/each other/NNP/other. so/RB/so /,/, let/VB/let me/PRP/me conclude/NNP/conclude. so/RB/so /,/, i/PRP/i would/MD/would just/RB/just like/VB/like to/TO/to say/VB/say that/IN/that /,/, a/DT/a similar/JJ/similar idea/NN/idea works/NNS/works for/IN/for selection/NN/selection as/IN/as well/NNP/well. so/RB/so /,/, suppose/DT/suppose we/PRP/we want/VBP/want to/TO/to select/VB/select the/DT/the rth/JJ/rth smallest/NN/smallest element/NN/element /,/, then/RB/then something/NN/something like/IN/like this/DT/this will/MD/will also/RB/also be/VB/be fine/NNP/fine. thank/NN/thank you/NNP/you. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 23/CD/23 bipartite/NN/bipartite maximum/NN/maximum matching/VBG/matching bipartite/NN/bipartite graph/NN/graph matching/VBG/matching in/IN/in the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. let/NN/let me/PRP/me begin/VBP/begin with/IN/with a/DT/a motivating/NN/motivating example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 01/CD/01 /CD/) so/RB/so /,/, in/IN/in this/DT/this example/NN/example we/PRP/we have/VBP/have some/DT/some j/NN/j jobs/NNS/jobs and/CC/and some/DT/some c/NN/c candidates/NNP/candidates. the/DT/the idea/NN/idea is/VBZ/is that/IN/that the/DT/the each/DT/each candidate/NN/candidate we/PRP/we have/VBP/have given/VBN/given we/PRP/we have/VBP/have been/VBN/been given/VBN/given the/DT/the list/NN/list of/IN/of jobs/NNS/jobs that/WDT/that they/PRP/they candidate/VBP/candidate can/MD/can do/NNP/do. and/CC/and we/PRP/we also/RB/also have/VBP/have been/VBN/been given/VBN/given a/DT/a constraint/NNP/constraint. the/DT/the constraint/NN/constraint says/VBZ/says that/IN/that /,/, each/DT/each candidate/NN/candidate must/MD/must be/VB/be given/VBN/given at/IN/at most/JJS/most one/CD/one job/NNP/job. and/CC/and also/RB/also each/DT/each job/NN/job must/MD/must be/VB/be assigned/VBN/assigned to/TO/to at/IN/at most/JJS/most one/CD/one candidate/NNP/candidate. the/DT/the goal/NN/goal is/VBZ/is our/PRP$/our obvious/JJ/obvious goal/NNP/goal. assign/NN/assign candidates/VBZ/candidates to/TO/to jobs/NNS/jobs such/JJ/such that/IN/that /,/, maximum/NN/maximum number/NN/number of/IN/of jobs/NNS/jobs are/VBP/are filled/NNP/filled. the/DT/the bipartite/NN/bipartite maximum/NN/maximum matching/VBG/matching problem/NN/problem is/VBZ/is exactly/RB/exactly this/DT/this /,/, in/IN/in more/JJR/more mathematical/JJ/mathematical terms/NNP/terms. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to first/JJ/first define/NN/define this/DT/this problem/NNP/problem. and/CC/and then/RB/then /,/, i/PRP/i will/MD/will relate/VB/relate it/PRP/it to/TO/to this/DT/this job/NN/job and/CC/and candidate/NN/candidate problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 59/CD/59 /CD/) in/IN/in this/DT/this problem/NN/problem /,/, our/PRP$/our input/NN/input is/VBZ/is a/DT/a bipartite/JJ/bipartite graph/NNP/graph. so/RB/so /,/, let/VB/let us/PRP/us call/MD/call it/PRP/it g/NNP/g. g/NN/g is/VBZ/is composed/VBN/composed of/IN/of two/CD/two vertex/NN/vertex sets/NNS/sets u/VBP/u and/CC/and v/NNP/v. and/CC/and the/DT/the cardinality/NN/cardinality of/IN/of u/NN/u says/VBZ/says n/NN/n 1/CD/1. and/CC/and the/DT/the cardinality/NN/cardinality of/IN/of v/NN/v is/VBZ/is n/VBN/n 2/CD/2 and/CC/and e/NN/e is/VBZ/is the/DT/the set/NN/set of/IN/of edges/NNP/edges. let/NN/let me/PRP/me remind/VBP/remind you/PRP/you /,/, what/WP/what a/DT/a bipartite/JJ/bipartite graph/NN/graph is/NNP/is. a/DT/a bipartite/JJ/bipartite graph/NN/graph is/VBZ/is simply/RB/simply the/DT/the graph/NN/graph /,/, in/IN/in which/WDT/which the/DT/the vertex/NN/vertex set/VBD/set is/VBZ/is in/IN/in two/CD/two parts/NNS/parts u/VBP/u and/CC/and v/NNP/v. and/CC/and the/DT/the edges/NNS/edges only/RB/only go/VBP/go between/IN/between u/NN/u and/CC/and v/NNP/v. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 31/CD/31 /CD/) here/RB/here for/IN/for example/NN/example /,/, is/VBZ/is a/DT/a bipartite/JJ/bipartite graph/NNP/graph. so/RB/so /,/, this/DT/this forms/NNS/forms this/DT/this set/NN/set of/IN/of vertices/NNS/vertices forms/NNS/forms u/NNP/u. this/DT/this set/NN/set of/IN/of vertices/NNS/vertices forms/NNS/forms v/CC/v. and/CC/and as/IN/as you/PRP/you can/MD/can see/VB/see the/DT/the edges/NNS/edges /,/, only/RB/only go/VBP/go from/IN/from some/DT/some vertex/NN/vertex in/IN/in v/NN/v to/TO/to some/DT/some vertex/NN/vertex in/IN/in u/NN/u to/TO/to some/DT/some vertex/NN/vertex in/IN/in v/NNP/v. specifically/RB/specifically /,/, there/EX/there are/VBP/are no/DT/no edges/NNS/edges which/WDT/which connect/NN/connect our/PRP$/our text/NN/text in/IN/in u/NN/u to/TO/to another/DT/another vertex/NN/vertex in/IN/in u/NN/u or/CC/or our/PRP$/our text/NN/text is/VBZ/is v/NN/v to/TO/to another/DT/another vertex/NN/vertex in/IN/in v/NNP/v. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 00/CD/00 /CD/) so/RB/so /,/, let/VB/let me/PRP/me now/RB/now define/VBP/define what/WP/what a/DT/a matching/NN/matching is/NNP/is. a/DT/a matching/NN/matching is/VBZ/is a/DT/a subset/NN/subset of/IN/of the/DT/the edges/NNS/edges such/JJ/such that/IN/that /,/, at/IN/at most/JJS/most one/CD/one edge/NN/edge is/VBZ/is incident/NN/incident on/IN/on any/DT/any vertex/NN/vertex either/DT/either in/IN/in u/NN/u or/CC/or in/IN/in v/NNP/v. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 15/CD/15 /CD/) so/IN/so /,/, in/IN/in this/DT/this graph/NN/graph for/IN/for example/NN/example /,/, the/DT/the set/NN/set of/IN/of blue/JJ/blue edges/NNS/edges would/MD/would be/VB/be a/DT/a matching/NNP/matching. if/IN/if i/PRP/i add/VBP/add one/CD/one more/JJR/more blue/JJ/blue edge/NN/edge as/IN/as here/RB/here /,/, this/DT/this would/MD/would not/RB/not be/VB/be a/DT/a matching/NN/matching /,/, because/IN/because we/PRP/we would/MD/would have/VB/have a/DT/a conflict/NN/conflict at/IN/at this/DT/this vertex/NN/vertex 7/CD/7. so/RB/so /,/, here/RB/here we/PRP/we would/MD/would have/VB/have been/VBN/been having/VBG/having two/CD/two edges/NNS/edges of/IN/of the/DT/the matching/NN/matching /,/, of/IN/of the/DT/the so/RB/so called/VBN/called matching/VBG/matching being/VBG/being incident/NN/incident and/CC/and that/IN/that is/VBZ/is not/RB/not allowed/NNP/allowed. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 38/CD/38 /CD/) so/RB/so /,/, now/RB/now let/VB/let me/PRP/me tell/VB/tell you/PRP/you /,/, what/WP/what the/DT/the goal/NN/goal in/IN/in this/DT/this problem/NN/problem is/VBZ/is or/CC/or what/WP/what we/PRP/we require/VBP/require to/TO/to output/NNP/output. so/RB/so /,/, we/PRP/we are/VBP/are required/VBN/required to/TO/to output/VB/output a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum possible/JJ/possible size/NNP/size. a/DT/a size/NN/size of/IN/of the/DT/the matching/NN/matching is/VBZ/is defined/VBN/defined as/RB/as the/DT/the number/NN/number of/IN/of edges/NNS/edges in/IN/in it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 54/CD/54 /CD/) in/IN/in this/DT/this graph/NN/graph for/IN/for example/NN/example /,/, we/PRP/we have/VBP/have this/DT/this blue/JJ/blue matching/NN/matching which/WDT/which consists/NNS/consists of/IN/of three/CD/three edges/NNP/edges. so/RB/so /,/, its/PRP$/its size/NN/size is/VBZ/is 3/CD/3. this/DT/this however/NN/however /,/, is/VBZ/is not/RB/not the/DT/the maximum/NN/maximum sized/VBD/sized matching/NNP/matching. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 06/CD/06 /CD/) this/DT/this red/NN/red matching/VBG/matching for/IN/for example/NN/example is/VBZ/is the/DT/the maximum/NN/maximum size/NN/size matching/NNP/matching. and/CC/and in/IN/in fact/NN/fact /,/, it/PRP/it contains/VBZ/contains 1/CD/1 2/CD/2 and/CC/and 3/CD/3 and/CC/and 4/CD/4 edges/NNP/edges. maximum/NN/maximum matchings/NNS/matchings are/VBP/are not/RB/not unique/JJ/unique /,/, in/IN/in this/DT/this graph/NN/graph itself/NNP/itself. for/IN/for example/NN/example /,/, this/DT/this is/VBZ/is another/DT/another maximum/NN/maximum matching/NNP/matching. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 25/CD/25 /CD/) let/NN/let me/PRP/me now/RB/now relate/VBP/relate /,/, this/DT/this matching/NN/matching problem/NN/problem to/TO/to that/DT/that of/IN/of our/PRP$/our candidates/NNS/candidates and/CC/and jobs/NNS/jobs problem/NNP/problem. so/RB/so /,/, this/DT/this first/JJ/first set/NN/set of/IN/of vertices/NNS/vertices which/WDT/which we/PRP/we call/VBP/call u/PRP/u /,/, can/MD/can be/VB/be thought/VBN/thought of/IN/of as/RB/as the/DT/the candidates/NNP/candidates. so/RB/so /,/, think/VBP/think of/IN/of 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 as/IN/as being/VBG/being the/DT/the candidates/NNP/candidates. and/CC/and the/DT/the jobs/NNS/jobs are/VBP/are represented/VBN/represented by/IN/by this/DT/this second/JJ/second set/NN/set /,/, which/WDT/which we/PRP/we call/VBP/call v/NNP/v. we/PRP/we draw/VBP/draw an/DT/an edge/NN/edge from/IN/from a/DT/a vertex/NN/vertex over/IN/over here/RB/here to/TO/to a/DT/a vertex/NN/vertex over/IN/over here/RB/here /,/, if/IN/if the/DT/the corresponding/NN/corresponding candidate/NN/candidate over/IN/over here/RB/here can/MD/can do/VB/do this/DT/this job/NNP/job. so/RB/so /,/, these/DT/these two/CD/two edges/NNS/edges for/IN/for example/NN/example /,/, represent/NN/represent the/DT/the fact/NN/fact that/IN/that candidate/JJ/candidate 1/CD/1 can/MD/can do/VB/do job/NN/job 6/CD/6 as/IN/as well/RB/well as/IN/as job/NN/job 7/CD/7. so/RB/so /,/, in/IN/in fact/NN/fact the/DT/the list/NN/list ally/RB/ally that/IN/that i/PRP/i have/VBP/have mentioned/VBN/mentioned will/MD/will contain/VB/contain 6/CD/6 and/CC/and 7/CD/7 in/IN/in the/DT/the list/NN/list of/IN/of candidate/NN/candidate 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 21/CD/21 /CD/) a/DT/a matching/JJ/matching now/RB/now is/VBZ/is simply/RB/simply /,/, an/DT/an assignment/NN/assignment of/IN/of jobs/NNS/jobs to/TO/to candidates/NNP/candidates. so/RB/so /,/, for/IN/for example/NN/example here/RB/here is/VBZ/is a/DT/a matching/NN/matching which/WDT/which says/NNP/says. let/VBD/let us/PRP/us assign/JJ/assign to/TO/to candidate/VB/candidate 1/CD/1 job/NN/job 6/CD/6 to/TO/to candidate/VB/candidate 3/CD/3 job/NN/job 7/CD/7 to/TO/to candidate/VB/candidate 5/CD/5 job/NN/job 9/CD/9. of/IN/of course/NN/course /,/, we/PRP/we would/MD/would like/VB/like to/TO/to maximize/VB/maximize the/DT/the number/NN/number of/IN/of jobs/NNS/jobs assigned/NNP/assigned. so/RB/so in/IN/in fact/NN/fact /,/, instead/RB/instead of/IN/of this/DT/this we/PRP/we should/MD/should really/RB/really be/VB/be taking/VBG/taking one/CD/one of/IN/of the/DT/the red/NN/red matchings/NNS/matchings that/WDT/that /,/, we/PRP/we saw/VBD/saw earlier/NNP/earlier. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 51/CD/51 /CD/) here/RB/here is/VBZ/is the/DT/the outline/NN/outline of/IN/of my/PRP$/my lecture/NNP/lecture. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to begin/VB/begin with/IN/with an/DT/an algorithm/NN/algorithm design/NN/design idea/NNP/idea. and/CC/and we/PRP/we will/MD/will see/VB/see few/JJ/few more/RBR/more ideas/NNS/ideas and/CC/and refine/NN/refine them/NNP/them. then/RB/then /,/, we/PRP/we will/MD/will come/VB/come to/TO/to the/DT/the notion/NN/notion of/IN/of augmenting/VBG/augmenting paths/NNP/paths. this/DT/this turns/VBZ/turns out/RP/out to/TO/to be/VB/be a/DT/a very/RB/very important/JJ/important concept/NN/concept /,/, in/IN/in this/DT/this whole/JJ/whole matching/NN/matching area/NNP/area. that/IN/that will/MD/will understanding/VB/understanding augmenting/VBG/augmenting paths/NNS/paths /,/, will/MD/will lead/VB/lead us/PRP/us to/TO/to reasonably/RB/reasonably clean/JJ/clean simple/NN/simple high/JJ/high level/NN/level algorithm/NNP/algorithm. it/PRP/it is/VBZ/is correctness/NN/correctness depends/NNS/depends upon/IN/upon something/NN/something called/VBN/called berge/NN/berge ?/./? s/NNS/s theorem/NNP/theorem. so/RB/so /,/, we/PRP/we will/MD/will state/VB/state and/CC/and prove/VB/prove that/IN/that theorem/NN/theorem next/NNP/next. and/CC/and then/RB/then /,/, finally/RB/finally we/PRP/we talk/VBP/talk about/IN/about how/WRB/how to/TO/to efficiently/RB/efficiently implement/JJ/implement this/DT/this algorithm/NNP/algorithm. and/CC/and we/PRP/we will/MD/will estimate/VB/estimate its/PRP$/its time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 35/CD/35 /CD/) so/RB/so /,/, let/VB/let us/PRP/us start/VB/start with/IN/with a/DT/a really/RB/really simple/JJ/simple winded/VBN/winded idea/NNP/idea. how/WRB/how would/MD/would you/PRP/you find/VB/find the/DT/the largest/JJS/largest size/NN/size matching/VBG/matching ?/./? the/DT/the moment/NN/moment you/PRP/you talk/VBP/talk about/IN/about larger/JJR/larger size/NN/size perhaps/RB/perhaps /,/, the/DT/the most/RBS/most natural/JJ/natural thing/NN/thing to/TO/to consider/VB/consider is/VBZ/is the/DT/the greedy/JJ/greedy idea/NNP/idea. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the strategy/NNP/strategy. so/RB/so /,/, we/PRP/we look/VBP/look at/IN/at all/DT/all the/DT/the edges/NNS/edges and/CC/and maintain/VB/maintain a/DT/a set/NN/set called/VBN/called m/NNP/m. and/CC/and we/PRP/we keep/VBP/keep on/IN/on adding/VBG/adding edges/NNS/edges into/IN/into m/NN/m /,/, till/NN/till no/DT/no more/RBR/more edges/NNS/edges can/MD/can be/VB/be added/NNP/added. of/IN/of course/NN/course /,/, as/IN/as we/PRP/we add/VBP/add edges/NNS/edges into/IN/into m/NN/m you/PRP/you have/VB/have to/TO/to make/VB/make sure/JJ/sure that/IN/that there/EX/there are/VBP/are no/DT/no conflicts/NNS/conflicts or/CC/or there/EX/there are/VBP/are no/DT/no two/CD/two edges/NNS/edges which/WDT/which ever/RB/ever are/VBP/are incident/JJ/incident on/IN/on the/DT/the same/JJ/same vertex/NN/vertex /,/, which/WDT/which are/VBP/are placed/VBN/placed in/IN/in our/PRP$/our set/NN/set m/NNP/m. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 19/CD/19 /CD/) in/IN/in this/DT/this case/NN/case for/IN/for example/NN/example /,/, if/IN/if we/PRP/we tried/VBD/tried this/DT/this idea/NN/idea what/WP/what would/MD/would happen/VB/happen ?/./? well/RB/well /,/, we/PRP/we would/MD/would start/VB/start with/IN/with this/DT/this edge/NN/edge and/CC/and add/VBD/add it/PRP/it no/DT/no problem/NNP/problem. then/RB/then maybe/VB/maybe we/PRP/we will/MD/will try/VB/try to/TO/to add/VB/add an/DT/an edge/NN/edge going/VBG/going out/RP/out of/IN/of 2/CD/2 /,/, but/CC/but this/DT/this edge/NN/edge can/MD/can not/RB/not be/VB/be added/VBN/added because/IN/because it/PRP/it would/MD/would produce/VB/produce a/DT/a conflict/NN/conflict at/IN/at 6/CD/6. so/RB/so /,/, we/PRP/we take/VBP/take the/DT/the next/JJ/next edge/NNP/edge. so/RB/so /,/, we/PRP/we add/VBP/add that/IN/that one/NNP/one. then/RB/then /,/, we/PRP/we try/VBP/try that/IN/that this/DT/this edge/NN/edge over/IN/over here/RB/here this/DT/this edge/NN/edge also/RB/also can/MD/can not/RB/not be/VB/be added/VBN/added because/IN/because /,/, it/PRP/it will/MD/will produce/VB/produce a/DT/a conflict/NN/conflict over/IN/over here/NNP/here. then/RB/then /,/, we/PRP/we try/VBP/try adding/VBG/adding this/DT/this edge/NNP/edge. that/IN/that also/RB/also can/MD/can not/RB/not be/VB/be added/VBN/added /,/, because/IN/because it/PRP/it would/MD/would produce/VB/produce conflict/NN/conflict over/IN/over here/NNP/here. and/CC/and then/RB/then /,/, we/PRP/we try/VBP/try to/TO/to add/VB/add an/DT/an edge/NN/edge out/IN/out of/IN/of 5/CD/5. and/CC/and say/VB/say for/IN/for example/NN/example /,/, we/PRP/we end/VBP/end up/RP/up adding/VBG/adding this/DT/this edge/NNP/edge. after/IN/after this/DT/this /,/, you/PRP/you can/MD/can see/VB/see that/IN/that no/DT/no more/RBR/more additions/NNS/additions are/VBP/are possible/NNP/possible. have/VBP/have you/PRP/you reached/VBD/reached the/DT/the best/JJS/best possible/JJ/possible matching/NN/matching ?/./? no/DT/no /,/, because/IN/because we/PRP/we know/VBP/know that/IN/that there/EX/there exists/NNS/exists a/DT/a matching/NNP/matching. in/IN/in fact/NN/fact /,/, any/DT/any one/CD/one of/IN/of those/DT/those red/VBN/red matchings/NNS/matchings which/WDT/which we/PRP/we saw/VBD/saw earlier/RBR/earlier which/WDT/which have/VBP/have four/CD/four edges/NNS/edges in/IN/in them/PRP/them rather/RB/rather than/IN/than just/RB/just the/DT/the three/CD/three edges/NNS/edges /,/, which/WDT/which we/PRP/we have/VBP/have found/VBN/found over/IN/over here/NNP/here. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 24/CD/24 /CD/) so/RB/so /,/, we/PRP/we clearly/RB/clearly need/VBP/need something/NN/something better/RBR/better than/IN/than the/DT/the greedy/NN/greedy idea/NNP/idea. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what i/PRP/i call/VBP/call the/DT/the kho/NN/kho kho/NN/kho idea/NNP/idea. so/RB/so /,/, if/IN/if you/PRP/you have/VBP/have played/VBN/played this/DT/this game/NN/game of/IN/of kho/NN/kho kho/NN/kho /,/, you/PRP/you might/MD/might remember/VB/remember that/IN/that in/IN/in that/DT/that game/NN/game there/EX/there is/VBZ/is a/DT/a chaser/NN/chaser who/WP/who keeps/NNS/keeps running/NNP/running. but/CC/but /,/, who/WP/who occasionally/RB/occasionally goes/VBZ/goes and/CC/and knocks/NNS/knocks on/IN/on the/DT/the back/NN/back of/IN/of a/DT/a person/NN/person /,/, who/WP/who is/VBZ/is sitting/VBG/sitting down/NNP/down. and/CC/and then/RB/then /,/, that/IN/that the/DT/the person/NN/person who/WP/who was/VBD/was originally/RB/originally sitting/VBG/sitting down/IN/down starts/NNS/starts running/VBG/running and/CC/and starts/NNS/starts chasing/VBG/chasing the/DT/the members/NNS/members of/IN/of the/DT/the opposing/NN/opposing team/NNP/team. until/IN/until he/PRP/he or/CC/or she/PRP/she again/RB/again goes/VBZ/goes behind/IN/behind and/CC/and knocks/NNS/knocks in/IN/in the/DT/the back/NN/back of/IN/of another/DT/another person/NN/person /,/, who/WP/who is/VBZ/is sitting/VBG/sitting and/CC/and who/WP/who takes/VBZ/takes over/NNP/over. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the idea/NN/idea that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to explore/NNP/explore. so/RB/so /,/, i/PRP/i need/VBP/need a/DT/a definition/NN/definition for/IN/for that/NNP/that. the/DT/the definition/NN/definition is/VBZ/is that/IN/that of/IN/of a/DT/a free/JJ/free vertex/NNP/vertex. so/RB/so /,/, given/VBN/given a/DT/a matching/NN/matching m/NN/m i/PRP/i will/MD/will say/VB/say that/IN/that the/DT/the vertex/NN/vertex is/VBZ/is free/JJ/free /,/, if/IN/if it/PRP/it is/VBZ/is not/RB/not an/DT/an end/NN/end point/NN/point of/IN/of any/DT/any edge/NN/edge in/IN/in that/DT/that matching/NNP/matching. so/RB/so /,/, we/PRP/we will/MD/will take/VB/take an/DT/an example/NN/example on/IN/on this/DT/this shortly/NNP/shortly. but/CC/but /,/, let/VB/let me/PRP/me state/VB/state that/IN/that idea/NN/idea first/NNP/first. so/RB/so /,/, the/DT/the idea/NN/idea is/VBZ/is something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, suppose/DT/suppose we/PRP/we have/VBP/have a/DT/a free/JJ/free edge/NN/edge then/RB/then /,/, that/IN/that indicates/NNS/indicates that/WDT/that maybe/RB/maybe we/PRP/we can/MD/can augment/VB/augment or/CC/or we/PRP/we can/MD/can increase/VB/increase the/DT/the size/NN/size of/IN/of our/PRP$/our matching/NNP/matching. may/MD/may be/VB/be by/IN/by throwing/NN/throwing an/DT/an edge/NN/edge by/IN/by considering/NN/considering an/DT/an edge/NN/edge out/IN/out of/IN/of that/DT/that vertex/NN/vertex /,/, and/CC/and may/MD/may be/VB/be trying/VBG/trying to/TO/to include/VB/include that/IN/that edge/NN/edge include/VBP/include that/IN/that matching/VBG/matching that/IN/that we/PRP/we have/VBP/have found/VBN/found so/RB/so far/NNP/far. this/DT/this may/MD/may succeed/VB/succeed if/IN/if it/PRP/it succeeds/VBZ/succeeds great/JJ/great then/RB/then /,/, we/PRP/we have/VBP/have a/DT/a bigger/JJR/bigger matching/NNP/matching. if/IN/if it/PRP/it does/VBZ/does not/RB/not succeed/VB/succeed /,/, well/RB/well how/WRB/how will/MD/will it/PRP/it not/RB/not succeed/VB/succeed ?/./? it/PRP/it will/MD/will not/RB/not succeed/VB/succeed because/IN/because /,/, may/MD/may be/VB/be it/PRP/it conflicts/VBZ/conflicts with/IN/with another/DT/another edge/NN/edge which/WDT/which is/VBZ/is already/RB/already present/NNP/present. so/RB/so /,/, this/DT/this is/VBZ/is where/WRB/where the/DT/the kho/NN/kho kho/NN/kho idea/NN/idea comes/NNP/comes. so/RB/so /,/, this/DT/this new/JJ/new edge/NN/edge that/WDT/that is/VBZ/is present/NNP/present. the/DT/the old/JJ/old edge/NN/edge that/WDT/that is/VBZ/is present/JJ/present will/MD/will get/VB/get knocked/VBN/knocked up/NNP/up. and/CC/and the/DT/the new/JJ/new edge/NN/edge will/MD/will sort/VB/sort of/IN/of set/NN/set in/IN/in our/PRP$/our matching/NNP/matching. but/CC/but /,/, now/RB/now once/RB/once we/PRP/we knock/VBP/knock out/RP/out an/DT/an old/JJ/old edge/NN/edge /,/, what/WP/what will/MD/will happen/VB/happen ?/./? well/RB/well /,/, the/DT/the other/JJ/other end/NN/end point/NN/point of/IN/of that/DT/that will/MD/will become/VB/become free/NNP/free. and/CC/and now/RB/now we/PRP/we will/MD/will try/VB/try to/TO/to match/VB/match that/NNP/that. and/CC/and we/PRP/we will/MD/will try/VB/try to/TO/to do/VB/do on/IN/on this/DT/this /,/, until/IN/until we/PRP/we find/VBP/find that/IN/that there/EX/there is/VBZ/is no/DT/no conflict/NNP/conflict. and/CC/and if/IN/if we/PRP/we succeed/VBP/succeed then/RB/then /,/, maybe/RB/maybe we/PRP/we have/VBP/have increased/VBN/increased the/DT/the size/NN/size of/IN/of our/PRP$/our matching/JJ/matching a/DT/a little/RB/little bit/NNP/bit. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try it/PRP/it out/NNP/out. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 33/CD/33 /CD/) so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing to/TO/to check/VB/check is/VBZ/is which/WDT/which are/VBP/are the/DT/the free/JJ/free vertices/NNS/vertices ?/./? so/RB/so /,/, in/IN/in this/DT/this case/NN/case vertex/NN/vertex 2/CD/2 vertex/NN/vertex 4/CD/4 and/CC/and vertex/NN/vertex 8/CD/8 are/VBP/are free/NNP/free. because/IN/because /,/, they/PRP/they do/VBP/do not/RB/not contain/VB/contain incident/NN/incident on/IN/on the/DT/the any/DT/any edge/NN/edge in/IN/in the/DT/the matching/NN/matching /,/, edges/NNS/edges in/IN/in the/DT/the matching/NN/matching are/VBP/are shown/VBN/shown in/IN/in blue/JJ/blue over/IN/over here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us start/VB/start with/IN/with vertex/NN/vertex 4/CD/4. and/CC/and let/VB/let us/PRP/us try/NN/try to/TO/to see/VB/see /,/, what/WDT/what happens/NNS/happens if/IN/if we/PRP/we try/VBP/try to/TO/to match/VB/match it/PRP/it somewhere/NNP/somewhere. well/RB/well /,/, 4/CD/4 can/MD/can only/RB/only be/VB/be matched/VBN/matched to/TO/to 7/CD/7. so/RB/so /,/, i/PRP/i have/VBP/have indicated/VBN/indicated that/IN/that this/DT/this is/VBZ/is our/PRP$/our candidate/NN/candidate for/IN/for inclusion/NN/inclusion into/IN/into our/PRP$/our old/JJ/old matching/NNP/matching. if/IN/if we/PRP/we try/VBP/try to/TO/to include/VB/include this/DT/this /,/, what/WP/what will/MD/will happen/VB/happen ?/./? well/RB/well /,/, that/IN/that will/MD/will have/VB/have there/EX/there will/MD/will be/VB/be two/CD/two vertices/NNS/vertices two/CD/two edges/NNS/edges incident/NN/incident at/IN/at 7/CD/7. so/RB/so /,/, essentially/RB/essentially we/PRP/we will/MD/will have/VB/have a/DT/a conflict/NNP/conflict. conflict/NN/conflict just/RB/just means/VBZ/means that/DT/that /,/, there/EX/there are/VBP/are two/CD/two edges/NNS/edges incident/NN/incident in/IN/in a/DT/a matching/NNP/matching. we/PRP/we just/RB/just want/VBP/want one/CD/one edge/NN/edge to/TO/to be/VB/be incident/JJ/incident or/CC/or at/IN/at most/JJS/most one/CD/one edge/NN/edge to/TO/to be/VB/be incident/NNP/incident. well/RB/well /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a conflict/NN/conflict what/WP/what do/VBP/do we/PRP/we do/VBP/do ?/./? well/RB/well /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to remove/VB/remove this/DT/this edge/NNP/edge. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 35/CD/35 /CD/) so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do that/NNP/that. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use the/DT/the color/NN/color code/NN/code green/IN/green /,/, the/DT/the color/NN/color green/NN/green to/TO/to show/VB/show edges/NNS/edges /,/, which/WDT/which were/VBD/were in/IN/in the/DT/the matching/NN/matching before/IN/before we/PRP/we started/VBD/started this/DT/this entire/JJ/entire procedure/NN/procedure /,/, but/CC/but which/WDT/which we/PRP/we have/VBP/have just/RB/just removed/NNP/removed. remember/NN/remember that/WDT/that yellow/JJ/yellow edges/NNS/edges are/VBP/are the/DT/the ones/NNS/ones which/WDT/which we/PRP/we just/RB/just added/NNP/added. so/RB/so /,/, they/PRP/they were/VBD/were not/RB/not in/IN/in the/DT/the matching/NN/matching before/IN/before /,/, we/PRP/we started/VBD/started this/DT/this procedure/NNP/procedure. but/CC/but /,/, they/PRP/they have/VBP/have just/RB/just come/VBN/come into/IN/into the/DT/the matching/NNP/matching. green/JJ/green edges/NNS/edges are/VBP/are the/DT/the edges/NNS/edges /,/, which/WDT/which were/VBD/were in/IN/in the/DT/the matching/NN/matching earlier/NNP/earlier. but/CC/but /,/, now/RB/now they/PRP/they have/VBP/have gone/VBN/gone out/RP/out of/IN/of the/DT/the matching/NNP/matching. if/IN/if this/DT/this edge/NN/edge from/IN/from 3/CD/3 to/TO/to 7/CD/7 goes/VBZ/goes out/RP/out /,/, what/WP/what happens/NNS/happens ?/./? well/RB/well /,/, vertex/NN/vertex 3/LS/3 becomes/VBZ/becomes free/NNP/free. vertex/NN/vertex 3/CD/3 does/VBZ/does not/RB/not have/VB/have an/DT/an edge/NN/edge in/IN/in the/DT/the matching/NN/matching attached/VBD/attached to/TO/to it/PRP/it in/IN/in longer/NNP/longer. remember/NN/remember this/DT/this edge/NN/edge is/VBZ/is just/RB/just gone/VBN/gone out/RP/out of/IN/of the/DT/the matching/NNP/matching. so/RB/so /,/, now/RB/now we/PRP/we try/VBP/try to/TO/to match/VB/match 3/CD/3. well/RB/well /,/, we/PRP/we could/MD/could try/VB/try and/CC/and match/VB/match it/PRP/it back/RB/back again/RB/again to/TO/to 7/CD/7 /,/, but/CC/but that/IN/that seems/NNS/seems foolish/NNP/foolish. we/PRP/we just/RB/just removed/VBD/removed this/DT/this edge/NNP/edge. so/RB/so /,/, we/PRP/we should/MD/should not/RB/not try/VB/try to/TO/to put/VB/put it/PRP/it back/RB/back again/NNP/again. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try to/TO/to do/VB/do something/NN/something else/NNP/else. so/RB/so /,/, the/DT/the only/JJ/only else/NN/else the/DT/the only/JJ/only other/JJ/other thing/NN/thing that/WDT/that we/PRP/we can/MD/can do/VB/do is/VBZ/is add/VBN/add an/DT/an edge/NN/edge 3/CD/3 to/TO/to 9/CD/9. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 38/CD/38 /CD/) so/RB/so /,/, let/VB/let us/PRP/us try/NN/try doing/VBG/doing that/NNP/that. so/RB/so /,/, now/RB/now this/DT/this yellow/JJ/yellow edge/NN/edge this/DT/this yellow/NN/yellow color/NN/color says/VBZ/says that/IN/that /,/, this/DT/this edge/NN/edge has/VBZ/has entered/VBN/entered our/PRP$/our matching/JJ/matching and/CC/and it/PRP/it was/VBD/was not/RB/not there/RB/there originally/NNP/originally. well/RB/well /,/, what/WDT/what does/VBZ/does this/DT/this do/VB/do ?/./? it/PRP/it produces/VBZ/produces a/DT/a conflict/NN/conflict of/IN/of time/NNP/time. how/WRB/how do/VBP/do we/PRP/we eliminate/VB/eliminate that/IN/that conflict/NN/conflict ?/./? well/RB/well /,/, we/PRP/we remove/VBP/remove this/DT/this edge/NNP/edge. so/RB/so /,/, this/DT/this edge/NN/edge goes/VBZ/goes out/RP/out of/IN/of the/DT/the matching/NNP/matching. and/CC/and therefore/RB/therefore /,/, we/PRP/we color/VBP/color it/PRP/it green/NNP/green. now/RB/now /,/, it/PRP/it happens/NNP/happens. now/RB/now /,/, vertex/NN/vertex 5/CD/5 is/VBZ/is free/NNP/free. so/RB/so /,/, we/PRP/we try/VBP/try to/TO/to match/VB/match it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 15/CD/15 /CD/) when/WRB/when we/PRP/we do/VBP/do match/RB/match it/PRP/it /,/, we/PRP/we match/VBP/match it/PRP/it to/TO/to 8/CD/8 and/CC/and interestingly/RB/interestingly there/RB/there is/VBZ/is no/DT/no conflict/NNP/conflict. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the basic/JJ/basic step/NN/step that/WDT/that i/PRP/i mentioned/NNP/mentioned. this/DT/this is/VBZ/is the/DT/the kho/NN/kho kho/NN/kho sort/NN/sort that/WDT/that /,/, i/PRP/i mentioned/NNP/mentioned. let/VB/let us/PRP/us see/VB/see /,/, what/WDT/what it/PRP/it is/VBZ/is accomplished/NNP/accomplished. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 28/CD/28 /CD/) so/RB/so /,/, we/PRP/we ended/VBD/ended adding/VBG/adding three/CD/three edges/NNP/edges. which/WDT/which are/VBP/are the/DT/the three/CD/three edges/NNS/edges we/PRP/we added/VBD/added ?/./? well/RB/well /,/, these/DT/these three/CD/three this/DT/this yellow/JJ/yellow edge/NN/edge /,/, this/DT/this yellow/NN/yellow edge/NN/edge and/CC/and this/DT/this yellow/NN/yellow edge/NNP/edge. so/RB/so /,/, these/DT/these three/CD/three edges/NNS/edges we/PRP/we added/NNP/added. so/RB/so /,/, now/RB/now you/PRP/you know/VBP/know why/WRB/why i/PRP/i color/VBP/color those/DT/those edges/NNS/edges very/RB/very /,/, very/RB/very carefully/NNP/carefully. so/RB/so /,/, that/IN/that i/PRP/i can/MD/can keep/VB/keep track/NN/track of/IN/of what/WP/what exactly/RB/exactly happen/VBP/happen ?/./? what/WP/what happened/VBN/happened to/TO/to the/DT/the edges/NNS/edges earlier/JJR/earlier in/IN/in the/DT/the matching/NN/matching ?/./? well/RB/well /,/, some/DT/some of/IN/of them/PRP/them stayed/NNP/stayed. this/DT/this edge/NN/edge was/VBD/was there/RB/there in/IN/in the/DT/the matching/NN/matching earlier/JJR/earlier it/PRP/it state/NNP/state. but/CC/but /,/, this/DT/this edge/NN/edge which/WDT/which was/VBD/was there/RB/there in/IN/in the/DT/the matching/NN/matching earlier/JJR/earlier went/NN/went away/NNP/away. this/DT/this edge/NN/edge which/WDT/which was/VBD/was there/RB/there earlier/JJR/earlier in/IN/in the/DT/the matching/NN/matching /,/, that/IN/that also/RB/also went/VBD/went away/NNP/away. but/CC/but /,/, two/CD/two edges/NNS/edges went/VBD/went away/RB/away and/CC/and three/CD/three edges/NNS/edges came/VBD/came in/NNP/in. so/RB/so /,/, now/RB/now we/PRP/we have/VBP/have a/DT/a better/JJR/better matching/VBG/matching which/WDT/which consists/NNS/consists of/IN/of this/DT/this edge/NN/edge /,/, this/DT/this edge/NN/edge /,/, this/DT/this edge/NN/edge and/CC/and this/DT/this edge/NNP/edge. so/RB/so /,/, earlier/JJR/earlier we/PRP/we had/VBD/had three/CD/three edges/NNS/edges in/IN/in the/DT/the matching/NNP/matching. now/RB/now /,/, we/PRP/we have/VBP/have four/CD/four edges/NNS/edges in/IN/in the/DT/the matching/NNP/matching. now/RB/now /,/, the/DT/the colors/NNS/colors are/VBP/are going/VBG/going to/TO/to tell/VB/tell us/PRP/us something/NN/something more/JJR/more interesting/JJ/interesting /,/, about/IN/about what/WP/what exactly/RB/exactly happened/NNP/happened. and/CC/and in/IN/in fact/NN/fact /,/, it/PRP/it makes/VBZ/makes sense/NN/sense to/TO/to ask/VB/ask exactly/RB/exactly how/WRB/how we/PRP/we traverse/VBP/traverse this/DT/this graph/NN/graph in/IN/in this/DT/this entire/JJ/entire process/NNP/process. so/RB/so /,/, as/IN/as we/PRP/we executed/VBD/executed this/DT/this process/NN/process we/PRP/we really/RB/really traversed/VBD/traversed a/DT/a path/NN/path in/IN/in the/DT/the graph/NNP/graph. so/RB/so /,/, we/PRP/we started/VBD/started at/IN/at vertex/NN/vertex 7/CD/7. then/RB/then /,/, we/PRP/we added/VBD/added edge/NN/edge 4/CD/4 7/CD/7. then/RB/then /,/, we/PRP/we removed/VBD/removed edge/NN/edge 7/CD/7 3/CD/3. then/RB/then /,/, we/PRP/we added/VBD/added edge/NN/edge 3/CD/3 9/CD/9. then/RB/then /,/, we/PRP/we added/VBD/added then/RB/then /,/, we/PRP/we removed/VBD/removed edge/NN/edge 9/CD/9 5/CD/5 and/CC/and added/VBD/added edge/NN/edge 5/CD/5 8/CD/8. so/RB/so /,/, that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what happened/VBN/happened ?/./? this/DT/this /,/, this/DT/this /,/, this/DT/this /,/, this/DT/this /,/, and/CC/and this/NNP/this. in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is more/JJR/more interesting/JJ/interesting pattern/NN/pattern out/IN/out here/NNP/here. so/RB/so /,/, let/VB/let me/PRP/me show/VB/show what/WP/what that/IN/that pattern/NN/pattern is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 14/CD/14 /CD/) let/NN/let me/PRP/me take/VBP/take this/DT/this vertex/NN/vertex 3/CD/3 and/CC/and let/VB/let me/PRP/me drag/VB/drag it/PRP/it over/IN/over here/NNP/here. so/RB/so /,/, now/RB/now you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to see/VB/see /,/, what/WDT/what that/IN/that pattern/NN/pattern is/VBZ/is even/RB/even more/RBR/more clearly/NNP/clearly. so/RB/so /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at the/DT/the first/JJ/first edge/NN/edge on/IN/on this/DT/this graph/NN/graph /,/, it/PRP/it is/VBZ/is yellow/NNP/yellow. the/DT/the second/JJ/second edge/NN/edge on/IN/on this/DT/this path/NN/path is/VBZ/is green/VBN/green /,/, the/DT/the next/JJ/next edge/NN/edge on/IN/on this/DT/this path/NN/path is/VBZ/is yellow/JJ/yellow again/NN/again its/PRP$/its green/JJ/green again/NN/again it/PRP/it is/VBZ/is yellow/NNP/yellow. so/RB/so /,/, in/IN/in fact/NN/fact the/DT/the colors/NNS/colors of/IN/of the/DT/the edges/NNS/edges alternate/VBP/alternate along/IN/along this/DT/this path/NNP/path. and/CC/and that/IN/that is/VBZ/is of/IN/of course/NN/course /,/, to/TO/to be/VB/be expected/VBN/expected why/WRB/why /,/, because/IN/because we/PRP/we alternately/RB/alternately added/VBD/added and/CC/and removed/VBN/removed edges/NNP/edges. in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is one/CD/one more/RBR/more interesting/JJ/interesting thing/NNP/thing. so/RB/so /,/, whenever/IN/whenever we/PRP/we were/VBD/were adding/VBG/adding edges/NNS/edges we/PRP/we were/VBD/were going/VBG/going forward/RB/forward in/IN/in the/DT/the graph/NN/graph and/CC/and we/PRP/we were/VBD/were following/VBG/following edges/NNS/edges which/WDT/which were/VBD/were originally/RB/originally not/RB/not in/IN/in the/DT/the matching/NNP/matching. when/WRB/when we/PRP/we removed/VBD/removed edges/NNS/edges /,/, we/PRP/we were/VBD/were following/VBG/following edges/NNS/edges which/WDT/which were/VBD/were originally/RB/originally in/IN/in the/DT/the matching/NNP/matching. but/CC/but /,/, we/PRP/we were/VBD/were going/VBG/going backwards/NNS/backwards in/IN/in the/DT/the graph/NNP/graph. and/CC/and similarly/RB/similarly /,/, again/RB/again we/PRP/we go/VBP/go forward/RB/forward backward/JJ/backward and/CC/and finally/RB/finally forward/RB/forward again/NNP/again. so/RB/so /,/, you/PRP/you see/VBP/see that/IN/that what/WP/what we/PRP/we did/VBD/did /,/, the/DT/the path/NN/path we/PRP/we traced/VBD/traced at/IN/at this/DT/this entire/JJ/entire procedure/NN/procedure has/VBZ/has lots/NNS/lots of/IN/of interest/NN/interest in/IN/in properties/NNP/properties. and/CC/and in/IN/in fact/NN/fact /,/, this/DT/this path/NN/path that/IN/that we/PRP/we traced/VBD/traced is/VBZ/is so/RB/so important/JJ/important that/IN/that it/PRP/it is/VBZ/is given/VBN/given a/DT/a name/NN/name /,/, it/PRP/it is/VBZ/is called/VBN/called an/DT/an augmenting/NN/augmenting path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 28/CD/28 /CD/) so/RB/so /,/, given/VBN/given a/DT/a matching/NN/matching there/EX/there is/VBZ/is a/DT/a notion/NN/notion of/IN/of an/DT/an augmenting/NN/augmenting path/NNP/path. an/DT/an augmenting/VBG/augmenting path/NN/path is/VBZ/is a/DT/a sequence/NN/sequence of/IN/of vertices/NNS/vertices v/VBP/v 1/CD/1 v/NN/v 2/CD/2 v/NN/v k/NNP/k. such/JJ/such that/IN/that the/DT/the first/JJ/first vertex/NN/vertex is/VBZ/is in/IN/in the/DT/the set/NN/set u/NN/u in/IN/in the/DT/the graph/NN/graph /,/, the/DT/the left/NN/left the/DT/the set/NN/set of/IN/of vertices/NNS/vertices on/IN/on the/DT/the left/NN/left corresponding/VBG/corresponding to/TO/to the/DT/the vertex/NN/vertex 4/CD/4 that/WDT/that we/PRP/we started/VBD/started off/RP/off with/IN/with and/CC/and it/PRP/it is/VBZ/is a/DT/a free/JJ/free vertex/NNP/vertex. that/IN/that is/VBZ/is exactly/RB/exactly /,/, how/WRB/how we/PRP/we started/VBD/started out/RP/out the/DT/the construction/NNP/construction. the/DT/the last/JJ/last vertex/NN/vertex is/VBZ/is also/RB/also free/JJ/free because/IN/because /,/, that/IN/that is/VBZ/is what/WP/what enabled/VBN/enabled us/PRP/us to/TO/to discover/VB/discover an/DT/an extra/JJ/extra edge/NNP/edge. and/CC/and then/RB/then /,/, the/DT/the intermediate/JJ/intermediate vertices/NNS/vertices well/RB/well the/DT/the vertex/NN/vertex from/IN/from v/NN/v 1/CD/1 to/TO/to v/VB/v 2/CD/2 was/VBD/was originally/RB/originally in/IN/in the/DT/the graph/NN/graph /,/, but/CC/but not/RB/not in/IN/in the/DT/the matching/NNP/matching. and/CC/and that/IN/that is/VBZ/is exactly/RB/exactly /,/, what/WDT/what this/DT/this set/NN/set e/NN/e minus/NN/minus m/NN/m supposed/VBD/supposed to/TO/to denote/NNP/denote. e/NN/e is/VBZ/is the/DT/the set/NN/set of/IN/of edges/NNS/edges from/IN/from that/DT/that /,/, i/PRP/i remove/VBP/remove the/DT/the set/NN/set of/IN/of edges/NNS/edges which/WDT/which were/VBD/were in/IN/in the/DT/the matching/NN/matching earlier/NNP/earlier. so/RB/so /,/, this/DT/this edge/NN/edge v/NN/v 1/CD/1 v/NN/v 2/CD/2 is/VBZ/is now/RB/now was/VBD/was supposed/VBN/supposed to/TO/to be/VB/be in/IN/in this/DT/this set/NN/set e/NN/e minus/NN/minus m/NNP/m. the/DT/the next/JJ/next edge/NN/edge on/IN/on the/DT/the path/NN/path however/RB/however /,/, v/NN/v 2/CD/2 v/NN/v 3/CD/3 is/VBZ/is a/DT/a backward/NN/backward edge/NN/edge and/CC/and it/PRP/it belongs/VBZ/belongs to/TO/to the/DT/the matching/NNP/matching. and/CC/and this/DT/this edge/NN/edge is/VBZ/is the/DT/the forward/NN/forward edge/NNP/edge. so/RB/so /,/, we/PRP/we go/VBP/go forward/RB/forward then/RB/then /,/, we/PRP/we go/VBP/go backward/RB/backward then/RB/then we/PRP/we go/VBP/go forward/RB/forward again/RB/again potentially/NNP/potentially. again/RB/again we/PRP/we follow/VBP/follow an/DT/an edge/NN/edge /,/, which/WDT/which is/VBZ/is not/RB/not in/IN/in the/DT/the matching/NN/matching and/CC/and we/PRP/we go/VBP/go forward/NNP/forward. and/CC/and maybe/VB/maybe we/PRP/we go/VBP/go backward/RB/backward again/NNP/again. and/CC/and we/PRP/we do/VBP/do this/DT/this several/JJ/several times/NNS/times /,/, until/IN/until we/PRP/we end/VBP/end with/IN/with this/DT/this set/NN/set v/NN/v that/WDT/that is/VBZ/is what/WP/what a/DT/a augmenting/NN/augmenting path/NN/path is/NNP/is. the/DT/the operation/NN/operation of/IN/of taking/VBG/taking an/DT/an augmenting/VBG/augmenting path/NN/path p/NN/p and/CC/and a/DT/a matching/NN/matching m/NN/m and/CC/and generating/VBG/generating a/DT/a new/JJ/new bigger/NN/bigger matching/VBG/matching which/WDT/which we/PRP/we just/RB/just did/VBD/did /,/, we/PRP/we will/MD/will abbreviate/VB/abbreviate as/IN/as m/NN/m symmetric/JJ/symmetric difference/NN/difference p/NNP/p. why/WRB/why is/VBZ/is this/DT/this called/VBN/called symmetric/JJ/symmetric difference/NN/difference ?/./? well/RB/well /,/, here/RB/here is/VBZ/is the/DT/the definition/NN/definition of/IN/of this/DT/this circle/NN/circle plus/VBZ/plus operator/NNP/operator. we/PRP/we will/MD/will define/VB/define q/NN/q circle/NN/circle plus/CC/plus r/NN/r or/CC/or q/NN/q symmetric/JJ/symmetric difference/NN/difference r/NN/r /,/, as/IN/as the/DT/the set/NN/set of/IN/of elements/NNS/elements in/IN/in q/NN/q or/CC/or in/IN/in r/NN/r /,/, but/CC/but not/RB/not in/IN/in both/NNP/both. so/RB/so /,/, in/IN/in that/DT/that sense/NN/sense it/PRP/it is/VBZ/is the/DT/the symmetric/JJ/symmetric difference/NNP/difference. so/RB/so /,/, it/PRP/it is/VBZ/is the/DT/the sense/NN/sense in/IN/in which/WDT/which q/NN/q and/CC/and r/NN/r are/VBP/are different/JJ/different from/IN/from each/DT/each other/JJ/other /,/, not/RB/not their/PRP$/their similarity/NN/similarity /,/, but/CC/but there/EX/there is/VBZ/is difference/NNP/difference. so/RB/so /,/, in/IN/in fact/NN/fact you/PRP/you can/MD/can see/VB/see that/IN/that the/DT/the new/JJ/new matching/NN/matching is/VBZ/is the/DT/the symmetric/JJ/symmetric matching/NN/matching is/VBZ/is the/DT/the symmetric/JJ/symmetric difference/NN/difference of/IN/of the/DT/the old/JJ/old matching/NN/matching and/CC/and the/DT/the path/NNP/path. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take a/DT/a look/NN/look at/IN/at that/DT/that quickly/NNP/quickly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 04/CD/04 /CD/) so/RB/so /,/, the/DT/the old/JJ/old matching/NN/matching was/VBD/was this/DT/this matching/NN/matching 1/CD/1 6/CD/6 3/CD/3 7/CD/7 and/CC/and 5/CD/5 9/CD/9. so/RB/so /,/, the/DT/the old/JJ/old matching/NN/matching is/VBZ/is the/DT/the blue/JJ/blue edges/NNS/edges and/CC/and the/DT/the green/JJ/green edges/NNP/edges. the/DT/the path/NN/path is/VBZ/is this/NNP/this. so/RB/so /,/, the/DT/the path/NN/path is/VBZ/is the/DT/the yellow/JJ/yellow edges/NNS/edges and/CC/and the/DT/the green/JJ/green edges/NNP/edges. so/RB/so /,/, as/IN/as you/PRP/you can/MD/can see/VB/see the/DT/the green/JJ/green edges/NNS/edges form/NN/form the/DT/the intersection/NN/intersection between/IN/between the/DT/the path/NN/path and/CC/and the/DT/the old/JJ/old matching/NNP/matching. and/CC/and therefore/RB/therefore /,/, they/PRP/they have/VBP/have been/VBN/been removed/NNP/removed. and/CC/and what/WP/what has/VBZ/has included/VBN/included in/IN/in the/DT/the new/JJ/new matching/NN/matching is/VBZ/is just/RB/just the/DT/the difference/NN/difference /,/, the/DT/the symmetric/JJ/symmetric difference/NN/difference between/IN/between the/DT/the path/NN/path and/CC/and the/DT/the old/JJ/old matching/NNP/matching. so/RB/so /,/, these/DT/these are/VBP/are edges/NNS/edges which/WDT/which were/VBD/were in/IN/in the/DT/the path/NN/path /,/, but/CC/but not/RB/not in/IN/in the/DT/the matching/NNP/matching. this/DT/this is/VBZ/is also/RB/also an/DT/an edge/NN/edge this/DT/this is/VBZ/is an/DT/an edge/NN/edge which/WDT/which is/VBZ/is in/IN/in the/DT/the matching/NN/matching /,/, but/CC/but not/RB/not in/IN/in the/DT/the path/NNP/path. and/CC/and so/RB/so /,/, the/DT/the new/JJ/new matching/NN/matching will/MD/will just/RB/just contain/VB/contain this/DT/this and/CC/and these/NNP/these. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 01/CD/01 /CD/) so/RB/so /,/, augmenting/VBG/augmenting paths/NNS/paths play/VBP/play a/DT/a big/JJ/big role/NN/role seem/NN/seem to/TO/to play/VB/play a/DT/a big/JJ/big role/NN/role when/WRB/when we/PRP/we want/VBP/want to/TO/to increase/VB/increase the/DT/the size/NN/size of/IN/of our/PRP$/our matchings/NNP/matchings. in/IN/in fact/NN/fact /,/, edmonds/NNS/edmonds who/WP/who was/VBD/was a/DT/a eminent/NN/eminent computer/NN/computer scientist/NN/scientist from/IN/from /,/, ii/NN/ii guess/NN/guess from/IN/from the/DT/the previous/JJ/previous century/NN/century who/WP/who is/VBZ/is one/CD/one of/IN/of the/DT/the who/WP/who could/MD/could even/RB/even be/VB/be called/VBN/called as/IN/as one/CD/one of/IN/of the/DT/the founders/NNS/founders in/IN/in some/DT/some sense/NN/sense of/IN/of analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to describe/VB/describe an/DT/an algorithm/NN/algorithm which/WDT/which is/VBZ/is credited/VBN/credited to/TO/to edmond/VB/edmond ?/./? s/NNP/s. so/RB/so /,/, the/DT/the algorithm/NN/algorithm is/VBZ/is essentially/RB/essentially based/VBN/based on/IN/on this/DT/this idea/NN/idea of/IN/of augmenting/VBG/augmenting paths/NNP/paths. so/RB/so /,/, we/PRP/we start/VBP/start off/RP/off with/IN/with m/NN/m which/WDT/which is/VBZ/is an/DT/an empty/NN/empty matching/VBG/matching which/WDT/which is/VBZ/is an/DT/an empty/NN/empty set/NNP/set. so/RB/so /,/, there/EX/there is/VBZ/is nothing/NN/nothing in/IN/in it/NNP/it. and/CC/and then/RB/then /,/, we/PRP/we keep/VBP/keep on/IN/on finding/NN/finding the/DT/the augmenting/NN/augmenting path/NNP/path. so/RB/so /,/, we/PRP/we check/VBP/check if/IN/if there/EX/there is/VBZ/is an/DT/an augmenting/VBG/augmenting path/NN/path p/NN/p for/IN/for this/DT/this m/NN/m /,/, defined/VBD/defined in/IN/in this/DT/this sense/NNP/sense. if/IN/if there/EX/there is/VBZ/is then/RB/then /,/, we/PRP/we perform/VBP/perform this/DT/this operation/NN/operation and/CC/and set/VBD/set m/NN/m to/TO/to the/DT/the result/NNP/result. we/PRP/we keep/VBP/keep on/IN/on doing/VBG/doing this/DT/this /,/, until/IN/until we/PRP/we discover/RB/discover that/IN/that we/PRP/we can/MD/can not/RB/not augment/VB/augment our/PRP$/our current/JJ/current matching/NNP/matching. the/DT/the moment/NN/moment that/IN/that happens/NNS/happens /,/, we/PRP/we stop/VBP/stop and/CC/and we/PRP/we output/VBD/output m/NNP/m. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the algorithm/NNP/algorithm. does/VBZ/does it/PRP/it seem/VBP/seem reasonable/JJ/reasonable ?/./? well/RB/well /,/, yes/NNS/yes it/PRP/it seems/VBZ/seems reasonable/NNP/reasonable. we/PRP/we seem/VBP/seem to/TO/to be/VB/be adding/VBG/adding edges/NNS/edges if/IN/if possible/JJ/possible /,/, but/CC/but there/EX/there is/VBZ/is a/DT/a old/JJ/old problem/NN/problem which/WDT/which we/PRP/we had/VBD/had with/IN/with our/PRP$/our greedy/JJ/greedy idea/NN/idea as/IN/as well/NNP/well. what/WP/what if/IN/if we/PRP/we discover/VBP/discover that/IN/that there/EX/there is/VBZ/is no/DT/no augmenting/NN/augmenting path/NNP/path. can/MD/can we/PRP/we stop/VB/stop then/RB/then really/RB/really or/CC/or it/PRP/it is/VBZ/is possible/JJ/possible that/IN/that there/EX/there is/VBZ/is some/DT/some bigger/JJR/bigger matching/VBG/matching which/WDT/which we/PRP/we will/MD/will find/VB/find using/VBG/using this/DT/this idea/NNP/idea. so/RB/so /,/, this/DT/this possibility/NN/possibility can/MD/can be/VB/be ruled/VBN/ruled out/RP/out and/CC/and this/DT/this is/VBZ/is done/VBN/done by/IN/by a/DT/a theorem/NN/theorem attributed/VBN/attributed to/TO/to berge/NNP/berge. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 55/CD/55 /CD/) so/RB/so here/RB/here is/VBZ/is what/WP/what berge/NN/berge ?/./? s/NNS/s theorem/VBP/theorem says/NNP/says. berge/NN/berge ?/./? s/NNS/s theorem/VBP/theorem says/VBZ/says that/IN/that a/DT/a matching/NN/matching m/NN/m in/IN/in a/DT/a bipartite/JJ/bipartite graph/NN/graph is/VBZ/is maximum/NN/maximum /,/, if/IN/if and/CC/and only/RB/only if/IN/if there/EX/there does/VBZ/does not/RB/not exist/VB/exist a/DT/a augmenting/NN/augmenting path/NN/path for/IN/for m/NNP/m. we/PRP/we will/MD/will prove/VB/prove this/DT/this in/IN/in a/DT/a minute/NN/minute /,/, but/CC/but i/PRP/i just/RB/just want/VBP/want to/TO/to persuade/VB/persuade you/PRP/you that/IN/that /,/, this/DT/this is/VBZ/is exactly/RB/exactly the/DT/the theorem/NN/theorem that/IN/that we/PRP/we wanted/NNP/wanted. so/RB/so /,/, this/DT/this theorem/NN/theorem says/VBZ/says that/IN/that if/IN/if ever/RB/ever we/PRP/we come/VBP/come to/TO/to a/DT/a point/NN/point at/IN/at which/WDT/which we/PRP/we can/MD/can not/RB/not find/VB/find an/DT/an augmenting/NN/augmenting path/NNP/path. then/RB/then /,/, we/PRP/we must/MD/must have/VB/have in/IN/in our/PRP$/our hands/NNS/hands a/DT/a maximum/NN/maximum sized/VBN/sized matching/NNP/matching. so/RB/so /,/, this/DT/this theorem/NN/theorem justifies/VBZ/justifies or/CC/or proves/NNS/proves the/DT/the correctness/NN/correctness of/IN/of edmond/NN/edmond ?/./? s/NNS/s algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now prove/VBP/prove this/DT/this theorem/NNP/theorem. the/DT/the proof/NN/proof is/VBZ/is in/IN/in two/CD/two parts/NNP/parts. since/IN/since /,/, this/DT/this is/VBZ/is a/DT/a if/IN/if and/CC/and only/RB/only if/IN/if theorem/NNP/theorem. the/DT/the first/JJ/first part/NN/part is/VBZ/is the/DT/the only/JJ/only if/NNP/if. so/RB/so /,/, what/WDT/what are/VBP/are we/PRP/we required/VBN/required to/TO/to prove/VB/prove over/IN/over here/RB/here ?/./? if/IN/if a/DT/a matching/NN/matching in/IN/in a/DT/a bipartite/JJ/bipartite graph/NN/graph is/VBZ/is maximum/NN/maximum then/RB/then /,/, there/EX/there can/MD/can not/RB/not exist/VB/exist an/DT/an augmenting/NN/augmenting path/NNP/path. this/DT/this should/MD/should be/VB/be quite/RB/quite obvious/NNP/obvious. if/IN/if there/EX/there existed/VBN/existed an/DT/an augmenting/NN/augmenting path/NN/path /,/, what/WP/what would/MD/would happen/VB/happen ?/./? well/RB/well /,/, we/PRP/we could/MD/could add/VB/add we/PRP/we could/MD/could augment/VB/augment that/IN/that path/NN/path with/IN/with our/PRP$/our matching/NNP/matching. we/PRP/we could/MD/could compute/VB/compute m/NN/m circle/NN/circle plus/CC/plus p/NN/p and/CC/and we/PRP/we would/MD/would get/VB/get a/DT/a bigger/JJR/bigger matching/NNP/matching. is/VBZ/is if/IN/if that/IN/that possible/JJ/possible ?/./? no/DT/no /,/, because/IN/because we/PRP/we said/VBD/said that/IN/that m/NN/m is/VBZ/is already/RB/already maximum/NNP/maximum. and/CC/and therefore/RB/therefore /,/, the/DT/the only/JJ/only if/IN/if case/NN/case is/VBZ/is obvious/NNP/obvious. the/DT/the interesting/JJ/interesting case/NN/case is/VBZ/is the/DT/the /,/, if/IN/if case/NNP/case. we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove this/DT/this case/NN/case by/IN/by contradiction/NNP/contradiction. so/RB/so /,/, how/WRB/how does/VBZ/does this/DT/this work/NN/work ?/./? well/NNP/well. so/RB/so /,/, let/VB/let us/PRP/us assume/VB/assume the/DT/the contrary/NNP/contrary. so/RB/so /,/, let/VB/let us/PRP/us suppose/VB/suppose that/IN/that m/NN/m has/VBZ/has no/DT/no augmenting/NN/augmenting path/NNP/path. so/RB/so /,/, m/NN/m has/VBZ/has no/DT/no augmenting/NN/augmenting path/NN/path that/WDT/that of/IN/of course/NN/course /,/, by/IN/by itself/PRP/itself does/VBZ/does not/RB/not make/VB/make up/RP/up the/DT/the contradiction/NNP/contradiction. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that m/NN/m has/VBZ/has no/DT/no augmenting/NN/augmenting path/NNP/path. and/CC/and there/EX/there exists/NNS/exists a/DT/a matching/VBG/matching m/NN/m such/JJ/such that/IN/that /,/, n/VBP/n is/VBZ/is larger/JJR/larger than/IN/than m/NNP/m. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the case/NN/case that/IN/that we/PRP/we really/RB/really wanted/VBD/wanted to/TO/to watch/VB/watch out/RP/out with/NNP/with. we/PRP/we can/MD/can not/RB/not find/VB/find an/DT/an augmenting/NN/augmenting path/NN/path /,/, neither/DT/neither have/VBP/have we/PRP/we got/VBD/got the/DT/the best/JJS/best matching/NNP/matching. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the if/IN/if case/NNP/case. and/CC/and this/DT/this is/VBZ/is the/DT/the case/NN/case that/IN/that we/PRP/we really/RB/really want/VBP/want to/TO/to rule/NN/rule out/NNP/out. so/RB/so /,/, we/PRP/we are/VBP/are worried/VBN/worried about/IN/about such/JJ/such m/NNP/m. we/PRP/we have/VBP/have in/IN/in our/PRP$/our hands/NNS/hands matching/VBG/matching m/NNP/m. and/CC/and we/PRP/we know/VBP/know that/IN/that there/EX/there is/VBZ/is /,/, we/PRP/we are/VBP/are assuming/VBG/assuming that/IN/that there/EX/there is/VBZ/is a/DT/a bigger/JJR/bigger matching/VBG/matching n/NN/n somewhere/RB/somewhere out/IN/out there/NNP/there. well/RB/well /,/, at/IN/at this/DT/this point/NN/point it/PRP/it is/VBZ/is natural/JJ/natural to/TO/to ask/VB/ask /,/, what/WDT/what is/VBZ/is the/DT/the difference/NN/difference between/IN/between m/NN/m and/CC/and n/NN/n ?/./? so/RB/so /,/, that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we do/NNP/do. so/RB/so /,/, we/PRP/we will/MD/will ask/VB/ask will/MD/will say/VB/say /,/, let/VB/let r/NN/r be/VB/be the/DT/the symmetric/JJ/symmetric difference/NN/difference of/IN/of m/NN/m and/CC/and n/NNP/n. and/CC/and then/RB/then /,/, let/VB/let us/PRP/us investigate/VB/investigate what/WP/what this/DT/this /,/, what/WP/what the/DT/the properties/NNS/properties of/IN/of the/DT/the symmetric/JJ/symmetric difference/NN/difference are/NNP/are. i/PRP/i claim/VBP/claim that/IN/that /,/, so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at this/DT/this symmetric/JJ/symmetric difference/NN/difference r/NNP/r. my/PRP$/my first/JJ/first claim/NN/claim is/VBZ/is that/IN/that this/DT/this r/NN/r must/MD/must be/VB/be composed/VBN/composed of/IN/of paths/NNS/paths and/CC/and cycles/NNP/cycles. why/WRB/why is/VBZ/is that/IN/that ?/./? well/RB/well /,/, before/IN/before saying/VBG/saying why/WRB/why that/IN/that is/VBZ/is /,/, let/VB/let me/PRP/me just/RB/just say/VBP/say that/IN/that the/DT/the claim/NN/claim is/VBZ/is equivalent/JJ/equivalent to/TO/to stating/NN/stating that/IN/that the/DT/the degree/NN/degree of/IN/of every/DT/every vertex/NN/vertex in/IN/in r/NN/r is/VBZ/is at/IN/at most/JJS/most 2/CD/2. remember/NN/remember m/NN/m and/CC/and n/NN/n are/VBP/are sets/NNS/sets of/IN/of edges/NNP/edges. r/NN/r is/VBZ/is also/RB/also a/DT/a set/NN/set of/IN/of edges/NNP/edges. and/CC/and it/PRP/it is/VBZ/is over/IN/over the/DT/the same/JJ/same vertex/NN/vertex set/NN/set u/NN/u and/CC/and v/NNP/v. so/RB/so /,/, i/PRP/i can/MD/can talk/VB/talk about/IN/about the/DT/the degree/NNP/degree. so/RB/so /,/, i/PRP/i claim/VBP/claim that/IN/that if/IN/if r/NN/r is/VBZ/is made/VBN/made up/RP/up of/IN/of paths/NNS/paths and/CC/and cycles/NNS/cycles /,/, it/PRP/it is/VBZ/is the/DT/the same/JJ/same thing/NN/thing that/WDT/that saying/VBG/saying the/DT/the degree/NN/degree of/IN/of every/DT/every vertex/NN/vertex in/IN/in r/NN/r is/VBZ/is at/IN/at most/JJS/most 2/CD/2 obviously/NNP/obviously. the/DT/the degree/NN/degree of/IN/of any/DT/any vertex/NN/vertex in/IN/in a/DT/a path/NN/path is/VBZ/is 2/CD/2 /,/, the/DT/the degree/NN/degree of/IN/of any/DT/any vertex/NN/vertex in/IN/in a/DT/a cycle/NN/cycle is/VBZ/is also/RB/also 2/CD/2. so/RB/so /,/, if/IN/if i/PRP/i can/MD/can prove/VB/prove this/DT/this i/PRP/i would/MD/would have/VB/have proved/VBN/proved this/NNP/this. well/RB/well /,/, why/WRB/why is/VBZ/is this/DT/this true/JJ/true ?/./? well/RB/well /,/, just/RB/just examine/NN/examine how/WRB/how we/PRP/we constructed/VBD/constructed r/NN/r ?/./? we/PRP/we constructed/VBD/constructed r/NN/r by/IN/by taking/NN/taking some/DT/some edges/NNS/edges of/IN/of m/NN/m and/CC/and some/DT/some edges/NNS/edges of/IN/of n/NNP/n. but/CC/but /,/, note/VBP/note that/IN/that the/DT/the degree/NN/degree of/IN/of every/DT/every vertex/NN/vertex in/IN/in m/NN/m and/CC/and n/NN/n is/VBZ/is at/IN/at most/JJS/most 1/CD/1. the/DT/the edges/NNS/edges of/IN/of m/NN/m and/CC/and n/NN/n are/VBP/are such/JJ/such that/IN/that /,/, on/IN/on every/DT/every vertex/NN/vertex at/IN/at most/JJS/most 1/CD/1 edge/NN/edge from/IN/from either/DT/either m/NN/m or/CC/or n/NN/n is/VBZ/is an/DT/an incident/NNP/incident. so/RB/so /,/, even/RB/even if/IN/if i/PRP/i take/VBP/take the/DT/the union/NN/union forget/NN/forget the/DT/the symmetric/JJ/symmetric difference/NN/difference /,/, even/RB/even if/IN/if i/PRP/i take/VBP/take the/DT/the union/NN/union the/DT/the degree/NN/degree of/IN/of every/DT/every vertex/NN/vertex in/IN/in m/NN/m and/CC/and n/NN/n will/MD/will be/VB/be at/IN/at most/NNP/most. since/IN/since the/DT/the degree/NN/degree of/IN/of m/NN/m and/CC/and n/NN/n in/IN/in every/DT/every vertex/NN/vertex is/VBZ/is at/IN/at most/JJS/most 1/CD/1 /,/, the/DT/the degree/NN/degree of/IN/of the/DT/the union/NN/union will/MD/will be/VB/be at/IN/at most/JJS/most 2/CD/2. so/RB/so /,/, from/IN/from this/DT/this it/PRP/it follow/VBP/follow that/IN/that this/DT/this is/VBZ/is true/NNP/true. therefore/RB/therefore /,/, this/DT/this is/VBZ/is same/JJ/same as/IN/as this/NNP/this. here/RB/here is/VBZ/is an/DT/an interesting/JJ/interesting fact/NN/fact about/IN/about r/NNP/r. so/RB/so /,/, it/PRP/it consists/VBZ/consists of/IN/of paths/NNS/paths and/CC/and cycles/NNS/cycles /,/, but/CC/but the/DT/the edges/NNS/edges in/IN/in r/NN/r alternate/NN/alternate between/IN/between m/NN/m and/CC/and n/NNP/n. why/WRB/why is/VBZ/is that/IN/that ?/./? well/RB/well /,/, could/MD/could there/VB/there be/VB/be two/CD/two consecutive/JJ/consecutive edges/NNS/edges in/IN/in r/NN/r coming/VBG/coming from/IN/from m/NNP/m. no/DT/no /,/, because/IN/because m/NN/m has/VBZ/has been/VBN/been defined/VBN/defined to/TO/to consist/VB/consist of/IN/of edges/NNS/edges which/WDT/which are/VBP/are incident/JJ/incident on/IN/on vertices/NNP/vertices. but/CC/but /,/, at/IN/at most/JJS/most one/CD/one edge/NN/edge is/VBZ/is incident/NN/incident on/IN/on any/DT/any vertex/NNP/vertex. so/RB/so /,/, in/IN/in m/NN/m itself/PRP/itself two/CD/two edges/NNS/edges are/VBP/are never/RB/never incident/JJ/incident on/IN/on the/DT/the same/JJ/same vertex/NN/vertex and/CC/and therefore/RB/therefore /,/, when/WRB/when those/DT/those edges/NNS/edges going/VBG/going to/TO/to r/VB/r this/DT/this property/NN/property will/MD/will stay/VB/stay around/IN/around and/CC/and similarly/RB/similarly for/IN/for n/NNP/n. and/CC/and therefore/RB/therefore /,/, we/PRP/we know/VBP/know that/IN/that the/DT/the paths/NNS/paths and/CC/and cycles/NNS/cycles inside/VBP/inside r/NN/r consist/NN/consist of/IN/of alternate/NN/alternate edges/NNS/edges of/IN/of m/NN/m and/CC/and n/NNP/n. some/DT/some more/JJR/more properties/NNS/properties /,/, what/WP/what is/VBZ/is r/JJ/r ?/./? well/RB/well r/JJ/r is/VBZ/is the/DT/the symmetric/JJ/symmetric difference/NNP/difference. so/RB/so /,/, that/IN/that is/VBZ/is as/IN/as good/JJ/good as/IN/as saying/VBG/saying that/IN/that /,/, we/PRP/we take/VBP/take the/DT/the union/NN/union and/CC/and then/RB/then we/PRP/we remove/VBP/remove the/DT/the intersection/NNP/intersection. so/RB/so /,/, the/DT/the size/NN/size of/IN/of r/NN/r is/VBZ/is size/NN/size of/IN/of n/NN/n plus/CC/plus the/DT/the size/NN/size of/IN/of m/NN/m minus/NN/minus the/DT/the size/NN/size of/IN/of the/DT/the intersection/NNP/intersection. but/CC/but note/VB/note that/IN/that /,/, n/VBP/n has/VBZ/has bigger/JJR/bigger size/NN/size than/IN/than m/NNP/m. so/RB/so /,/, we/PRP/we subtract/VBP/subtract something/NN/something /,/, but/CC/but in/IN/in the/DT/the end/NN/end we/PRP/we subtract/VBP/subtract something/NN/something we/PRP/we just/RB/just common/JJ/common to/TO/to both/DT/both m/NN/m and/CC/and n/NNP/n. so/RB/so /,/, in/IN/in the/DT/the end/NN/end r/NN/r must/MD/must have/VB/have more/JJR/more edges/NNS/edges in/IN/in it/PRP/it from/IN/from m/NN/m rather/RB/rather than/IN/than from/IN/from n/NNP/n. so/RB/so /,/, we/PRP/we just/RB/just how/WRB/how to/TO/to examine/VB/examine the/DT/the implications/NNS/implications of/IN/of this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 28/CD/28 /CD/) let/NN/let us/PRP/us look/VBP/look at/IN/at cycles/NNS/cycles first/NNP/first. each/DT/each cycle/NN/cycle consists/VBZ/consists of/IN/of an/DT/an equal/JJ/equal number/NN/number of/IN/of edges/NNS/edges from/IN/from both/DT/both m/NN/m and/CC/and n/NNP/n. so/RB/so /,/, if/IN/if we/PRP/we just/RB/just look/VBP/look at/IN/at the/DT/the cycles/NNS/cycles this/DT/this fact/NN/fact can/MD/can not/RB/not be/VB/be explained/NNP/explained. so/RB/so /,/, what/WDT/what first/RB/first happen/VBP/happen ?/./? there/EX/there has/VBZ/has to/TO/to exist/VB/exist a/DT/a path/NN/path /,/, which/WDT/which must/MD/must contain/VB/contain more/RBR/more edges/NNS/edges from/IN/from n/NNP/n. if/IN/if it/PRP/it contains/VBZ/contains more/JJR/more edges/NNS/edges from/IN/from n/NN/n /,/, what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about such/JJ/such a/DT/a path/NN/path ?/./? well/RB/well /,/, let/VB/let us/PRP/us take/VB/take a/DT/a picture/NNP/picture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 03/CD/03 /CD/) let/NN/let us/PRP/us draw/VBD/draw a/DT/a picture/NN/picture over/IN/over here/NNP/here. so/RB/so /,/, here/RB/here is/VBZ/is this/DT/this path/NNP/path. it/PRP/it contains/VBZ/contains more/JJR/more edges/NNS/edges from/IN/from n/NNP/n. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say n/NN/n edges/NNS/edges are/VBP/are in/IN/in black/NNP/black. so/RB/so /,/, if/IN/if it/PRP/it contains/VBZ/contains more/JJR/more edges/NNS/edges from/IN/from n/NN/n clearly/RB/clearly /,/, the/DT/the first/JJ/first edge/NN/edge has/VBZ/has to/TO/to be/VB/be from/IN/from n/NN/n then/RB/then /,/, from/IN/from m/NN/m then/RB/then /,/, from/IN/from n/NN/n then/RB/then from/IN/from m/NNP/m. and/CC/and finally/RB/finally /,/, the/DT/the last/JJ/last edge/NN/edge must/MD/must be/VB/be from/IN/from n/NNP/n. so/RB/so /,/, now/RB/now what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about these/DT/these vertices/NNS/vertices ?/./? so/RB/so /,/, will/MD/will these/VB/these vertices/NNS/vertices have/VBP/have an/DT/an additional/JJ/additional edge/NN/edge either/DT/either from/IN/from m/NN/m or/CC/or n/NN/n going/VBG/going out/NNP/out. well/RB/well /,/, if/IN/if there/EX/there was/VBD/was a/DT/a red/VBN/red edge/NN/edge going/VBG/going out/RP/out then/RB/then /,/, this/DT/this could/MD/could be/VB/be a/DT/a path/NN/path which/WDT/which have/VBP/have been/VBN/been continued/NNP/continued. we/PRP/we could/MD/could have/VB/have considered/VBN/considered that/IN/that itself/PRP/itself /,/, but/CC/but this/DT/this is/VBZ/is the/DT/the maximal/JJ/maximal path/NN/path that/WDT/that we/PRP/we are/VBP/are considering/NNP/considering. so/RB/so /,/, there/EX/there can/MD/can not/RB/not be/VB/be a/DT/a red/VBN/red edge/NN/edge going/VBG/going out/RP/out of/IN/of here/NNP/here. there/EX/there can/MD/can not/RB/not be/VB/be a/DT/a black/JJ/black edge/NN/edge going/VBG/going out/RP/out over/IN/over here/RB/here /,/, similarly/RB/similarly over/IN/over here/NNP/here. so/RB/so /,/, that/IN/that means/NNS/means that/WDT/that the/DT/the first/JJ/first and/CC/and the/DT/the last/JJ/last end/NN/end points/NNS/points of/IN/of p/NN/p must/MD/must also/RB/also be/VB/be free/JJ/free in/IN/in m/NN/m and/CC/and what/WP/what is/VBZ/is this/NNP/this. this/DT/this is/VBZ/is simply/RB/simply the/DT/the definition/NN/definition of/IN/of an/DT/an augmenting/NN/augmenting path/NNP/path. so/RB/so /,/, this/DT/this path/NN/path p/NN/p is/VBZ/is an/DT/an augmenting/VBG/augmenting path/NN/path for/IN/for this/DT/this matching/NN/matching m/NNP/m. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that an/DT/an augmenting/VBG/augmenting path/NN/path exists/NNS/exists and/CC/and in/IN/in other/JJ/other words/NNS/words /,/, this/DT/this you/PRP/you can/MD/can improve/VB/improve your/PRP$/your path/NNP/path. and/CC/and we/PRP/we started/VBD/started off/RP/off by/IN/by saying/VBG/saying that/IN/that /,/, m/NN/m has/VBZ/has no/DT/no augmenting/NN/augmenting path/NNP/path. so/RB/so /,/, we/PRP/we have/VBP/have got/VBN/got to/TO/to a/DT/a contradiction/NNP/contradiction. so/RB/so /,/, this/DT/this proves/NNS/proves berge/VBP/berge ?/./? s/NNS/s theorem/NNP/theorem. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved berge/NN/berge ?/./? s/NNS/s theorem/NNP/theorem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 35/CD/35 /CD/) so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that augmenting/VBG/augmenting paths/NNS/paths are/VBP/are useful/JJ/useful and/CC/and not/RB/not only/RB/only useful/JJ/useful /,/, but/CC/but they/PRP/they are/VBP/are sufficient/NNP/sufficient. so/RB/so /,/, the/DT/the only/JJ/only question/NN/question that/WDT/that /,/, remains/VBZ/remains is/VBZ/is can/MD/can we/PRP/we find/VB/find augmenting/VBG/augmenting paths/NNS/paths quickly/RB/quickly ?/./? so/RB/so /,/, what/WDT/what are/VBP/are the/DT/the properties/NNS/properties that/WDT/that we/PRP/we know/VBP/know about/IN/about augmenting/VBG/augmenting paths/NNS/paths ?/./? well/RB/well /,/, an/DT/an augmenting/NN/augmenting path/NN/path starts/VBZ/starts and/CC/and ends/NNS/ends at/IN/at a/DT/a free/JJ/free vertex/NNP/vertex. it/PRP/it starts/VBZ/starts at/IN/at a/DT/a vertex/NN/vertex /,/, say/VB/say u/PRP/u and/CC/and ends/NNS/ends in/IN/in a/DT/a vertex/NN/vertex v/CC/v. so/RB/so /,/, without/IN/without loss/NN/loss of/IN/of generality/NN/generality or/CC/or vice/NN/vice versa/NN/versa /,/, so/RB/so without/IN/without loss/NN/loss of/IN/of generality/NN/generality we/PRP/we can/MD/can assume/VB/assume that/IN/that the/DT/the starting/VBG/starting point/NN/point is/VBZ/is u/NNP/u. so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given a/DT/a graph/NN/graph and/CC/and we/PRP/we want/VBP/want to/TO/to start/VB/start an/DT/an augmenting/NN/augmenting path/NNP/path. we/PRP/we want/VBP/want to/TO/to check/VB/check whether/IN/whether there/EX/there exists/NNS/exists a/DT/a augmenting/VBG/augmenting path/NN/path /,/, starting/VBG/starting at/IN/at some/DT/some vertex/NN/vertex in/IN/in u/NNP/u. if/IN/if we/PRP/we knew/VBP/knew where/WRB/where the/DT/the path/NN/path started/VBD/started /,/, we/PRP/we could/MD/could just/RB/just try/VB/try growing/VBG/growing the/DT/the path/NN/path out/IN/out of/IN/of that/DT/that vertex/NNP/vertex. so/RB/so /,/, we/PRP/we could/MD/could try/VB/try something/NN/something like/IN/like depth/NN/depth first/RB/first search/NN/search or/CC/or something/NN/something like/IN/like that/NNP/that. and/CC/and try/NN/try going/VBG/going out/RP/out from/IN/from that/DT/that vertex/NN/vertex into/IN/into the/DT/the rest/NN/rest of/IN/of the/DT/the graph/NNP/graph. but/CC/but /,/, we/PRP/we do/VBP/do not/RB/not know/VB/know where/WRB/where it/PRP/it starts/NNP/starts. so/RB/so /,/, here/RB/here is/VBZ/is an/DT/an interesting/JJ/interesting idea/NNP/idea. so/RB/so /,/, since/IN/since we/PRP/we do/VBP/do not/RB/not know/VB/know where/WRB/where it/PRP/it starts/VBZ/starts /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start growing/VBG/growing from/IN/from all/DT/all the/DT/the free/JJ/free vertices/NNS/vertices in/IN/in u/NNP/u. now/RB/now /,/, we/PRP/we know/VBP/know something/NN/something more/RBR/more about/IN/about augmenting/VBG/augmenting paths/NNS/paths /,/, which/WDT/which is/VBZ/is that/IN/that the/DT/the paths/NNS/paths have/VBP/have to/TO/to grow/VB/grow forward/RB/forward using/VBG/using only/RB/only edges/NNS/edges in/IN/in e/NN/e minus/NN/minus m/NNP/m. e/NN/e difference/NN/difference the/DT/the edges/NNS/edges which/WDT/which are/VBP/are in/IN/in e/NN/e /,/, but/CC/but not/RB/not in/IN/in the/DT/the matching/NN/matching e/NN/e minus/NN/minus m/NNP/m. and/CC/and the/DT/the path/NN/path must/MD/must grow/VB/grow backwards/NNS/backwards using/VBG/using edges/NNS/edges /,/, which/WDT/which are/VBP/are in/IN/in the/DT/the matching/NNP/matching. you/PRP/you may/MD/may do/VB/do this/DT/this several/JJ/several times/NNP/times. it/PRP/it may/MD/may go/VB/go forward/RB/forward and/CC/and go/VB/go backward/RB/backward and/CC/and then/RB/then /,/, forward/RB/forward again/RB/again several/JJ/several times/NNS/times /,/, but/CC/but every/DT/every time/NN/time it/PRP/it goes/VBZ/goes forward/NNP/forward. it/PRP/it must/MD/must use/VB/use an/DT/an edge/NN/edge which/WDT/which is/VBZ/is not/RB/not in/IN/in the/DT/the matching/NNP/matching. and/CC/and every/DT/every time/NN/time it/PRP/it goes/VBZ/goes backwards/NNS/backwards /,/, it/PRP/it must/MD/must use/VB/use an/DT/an edge/NN/edge which/WDT/which is/VBZ/is in/IN/in the/DT/the matching/NNP/matching. finally/RB/finally /,/, if/IN/if we/PRP/we reach/VBP/reach a/DT/a free/JJ/free node/NN/node or/CC/or a/DT/a free/JJ/free vertex/NN/vertex in/IN/in the/DT/the set/NN/set v/NN/v /,/, which/WDT/which is/VBZ/is the/DT/the set/NN/set on/IN/on the/DT/the right/NN/right side/NN/side through/IN/through any/DT/any paths/NNS/paths /,/, whatever/RB/whatever we/PRP/we are/VBP/are done/NNP/done. so/RB/so /,/, that/IN/that is/VBZ/is how/WRB/how we/PRP/we are/VBP/are going/VBG/going to/TO/to grow/VB/grow these/DT/these parts/NNP/parts. and/CC/and if/IN/if we/PRP/we reach/VBP/reach a/DT/a free/JJ/free vertex/NN/vertex /,/, great/JJ/great we/PRP/we are/VBP/are done/NNP/done. we/PRP/we would/MD/would have/VB/have discovered/VBN/discovered a/DT/a path/NNP/path. now/RB/now /,/, it/PRP/it turns/VBZ/turns out/RP/out that/IN/that you/PRP/you can/MD/can package/VB/package this/DT/this set/NN/set of/IN/of ideas/NNS/ideas very/RB/very nicely/RB/nicely as/IN/as a/DT/a breadth/NN/breadth first/RB/first search/NN/search on/IN/on a/DT/a new/JJ/new graph/NNP/graph. well/RB/well /,/, on/IN/on a/DT/a slightly/RB/slightly a/DT/a graph/NN/graph which/WDT/which has/VBZ/has been/VBN/been derived/VBN/derived from/IN/from this/DT/this m/NN/m and/CC/and g/NNP/g. this/DT/this graph/NN/graph is/VBZ/is going/VBG/going to/TO/to be/VB/be very/RB/very similar/JJ/similar to/TO/to g/VB/g /,/, but/CC/but it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be crucially/RB/crucially and/CC/and slightly/RB/slightly different/NNP/different. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take a/DT/a look/NN/look at/IN/at this/NNP/this. but/CC/but let/VB/let us/PRP/us first/RB/first take/VB/take an/DT/an example/NN/example first/RB/first of/IN/of /,/, how/WRB/how we/PRP/we can/MD/can do/VB/do this/DT/this ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 28/CD/28 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our old/JJ/old graph/NN/graph and/CC/and here/RB/here is/VBZ/is our/PRP$/our old/JJ/old matching/NNP/matching. so/RB/so /,/, let/VB/let me/PRP/me try/NN/try to/TO/to see/VB/see how/WRB/how this/DT/this idea/NN/idea will/MD/will work/VB/work out/RP/out /,/, on/IN/on this/DT/this graph/NNP/graph. so/RB/so /,/, the/DT/the first/JJ/first point/NN/point was/VBD/was to/TO/to look/VB/look for/IN/for a/DT/a free/JJ/free vertex/NN/vertex /,/, actually/RB/actually a/DT/a free/JJ/free vertex/NN/vertex on/IN/on the/DT/the u/NN/u side/NNP/side. we/PRP/we say/VBP/say here/RB/here two/CD/two vertices/NNS/vertices are/VBP/are free/JJ/free /,/, vertex.2/-NONE-/vertex.2 and/CC/and vertex/NN/vertex 4/CD/4. these/DT/these are/VBP/are the/DT/the free/JJ/free vertices/NNP/vertices. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the vertices/NNS/vertices from/IN/from which/WDT/which we/PRP/we can/MD/can start/VB/start the/DT/the paths/NNP/paths. so/RB/so /,/, we/PRP/we could/MD/could say/VB/say for/IN/for example/NN/example /,/, that/IN/that let/NN/let us/PRP/us grow/VBP/grow paths/NNS/paths from/IN/from 2/CD/2 and/CC/and 4/CD/4 going/VBG/going in/IN/in the/DT/the forward/NN/forward direction/NN/direction and/CC/and backward/NN/backward direction/NN/direction as/IN/as we/PRP/we just/RB/just described/NNP/described. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 08/CD/08 /CD/) instead/RB/instead of/IN/of that/DT/that /,/, just/RB/just to/TO/to make/VB/make our/PRP$/our description/NN/description nice/NN/nice and/CC/and compact/NNP/compact. we/PRP/we are/VBP/are going/VBG/going to/TO/to throw/VB/throw in/IN/in a/DT/a new/JJ/new vertex/NN/vertex /,/, we/PRP/we will/MD/will call/VB/call s/NNP/s. we/PRP/we will/MD/will also/RB/also throw/VB/throw in/IN/in two/CD/two edges/NNS/edges /,/, going/VBG/going out/RP/out of/IN/of s/NNS/s to/TO/to both/DT/both the/DT/the free/JJ/free vertices/NNS/vertices or/CC/or to/TO/to all/DT/all the/DT/the free/JJ/free vertices/NNS/vertices /,/, whatever/RB/whatever free/JJ/free vertices/NNS/vertices there/RB/there are/NNP/are. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to direct/VB/direct these/DT/these edges/NNP/edges. so/RB/so /,/, earlier/JJR/earlier graph/NN/graph was/VBD/was an/DT/an undirected/VBN/undirected graph/NNP/graph. this/DT/this new/JJ/new graph/NN/graph is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a directed/VBN/directed graph/NNP/graph. we/PRP/we can/MD/can do/VB/do breadth/NN/breadth first/RB/first search/NN/search or/CC/or any/DT/any kind/NN/kind of/IN/of search/NN/search on/IN/on an/DT/an undirected/JJ/undirected graph/NN/graph /,/, just/RB/just as/IN/as well/RB/well as/IN/as on/IN/on a/DT/a directed/VBN/directed graph/NNP/graph. so/RB/so /,/, here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do it/PRP/it in/IN/in a/DT/a directed/VBN/directed graph/NNP/graph. so/RB/so /,/, now/RB/now instead/RB/instead of/IN/of saying/VBG/saying that/IN/that we/PRP/we go/VBP/go upon/IN/upon paths/NNS/paths 2/CD/2 and/CC/and 4/CD/4 /,/, notice/NN/notice that/IN/that we/PRP/we can/MD/can just/RB/just say/VB/say grow/NN/grow paths/NNS/paths out/IN/out of/IN/of s/NNS/s /,/, just/RB/just a/DT/a single/JJ/single vertex/NN/vertex s/NNP/s. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to grow/VB/grow out/RP/out of/IN/of s/NNP/s. and/CC/and once/RB/once we/PRP/we do/VBP/do and/CC/and if/IN/if we/PRP/we do/VBP/do that/IN/that /,/, we/PRP/we will/MD/will naturally/RB/naturally hit/VB/hit 2/CD/2 and/CC/and 4/CD/4 which/WDT/which is/VBZ/is where/WRB/where you/PRP/you want/VBP/want to/TO/to go/VB/go anyway/NNP/anyway. what/WP/what do/VBP/do we/PRP/we next/JJ/next ?/./? well/RB/well /,/, we/PRP/we want/VBP/want to/TO/to grow/VB/grow the/DT/the path/NN/path itself/NNP/itself. and/CC/and for/IN/for growing/VBG/growing the/DT/the path/NN/path /,/, we/PRP/we need/VBP/need to/TO/to use/VB/use edges/NNS/edges which/WDT/which do/VBP/do not/RB/not belong/VB/belong to/TO/to the/DT/the matching/NNP/matching. and/CC/and furthermore/VB/furthermore /,/, we/PRP/we know/VBP/know that/IN/that these/DT/these edges/NNS/edges will/MD/will be/VB/be used/VBN/used only/RB/only in/IN/in the/DT/the forward/NN/forward direction/NNP/direction. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 24/CD/24 /CD/) so/RB/so /,/, a/DT/a natural/JJ/natural way/NN/way to/TO/to enforce/VB/enforce this/DT/this constraint/NN/constraint is/VBZ/is to/TO/to say/VB/say /,/, this/DT/this is/VBZ/is the/DT/the constraint/NN/constraint that/IN/that we/PRP/we want/VBP/want to/TO/to enforce/NNP/enforce. so/RB/so /,/, the/DT/the natural/JJ/natural way/NN/way of/IN/of doing/VBG/doing that/IN/that is/VBZ/is to/TO/to direct/JJ/direct these/DT/these edges/NNS/edges in/IN/in the/DT/the forward/NN/forward direction/NNP/direction. so/RB/so /,/, every/DT/every time/NN/time we/PRP/we grow/VBP/grow the/DT/the paths/NNP/paths. we/PRP/we know/VBP/know that/IN/that the/DT/the edges/NNS/edges which/WDT/which are/VBP/are not/RB/not in/IN/in the/DT/the matching/NN/matching will/MD/will be/VB/be used/VBN/used /,/, only/RB/only in/IN/in the/DT/the forward/NN/forward direction/NNP/direction. so/RB/so /,/, we/PRP/we put/VBD/put a/DT/a direction/NN/direction on/IN/on them/NNP/them. so/IN/so /,/, that/IN/that forces/NNS/forces the/DT/the search/NN/search to/TO/to use/VB/use them/PRP/them /,/, only/RB/only in/IN/in the/DT/the forward/NN/forward direction/NNP/direction. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 53/CD/53 /CD/) now/RB/now /,/, what/WDT/what happens/NNS/happens when/WRB/when the/DT/the path/NN/path the/DT/the augmented/VBN/augmented path/NN/path goes/VBZ/goes backwards/NNS/backwards ?/./? well/RB/well /,/, it/PRP/it uses/VBZ/uses edges/NNS/edges /,/, which/WDT/which are/VBP/are in/IN/in the/DT/the matching/NNP/matching. if/IN/if it/PRP/it uses/VBZ/uses edges/NNS/edges which/WDT/which are/VBP/are in/IN/in the/DT/the matching/NN/matching /,/, it/PRP/it only/RB/only uses/VBZ/uses them/PRP/them going/VBG/going backwards/NNP/backwards. so/RB/so /,/, we/PRP/we put/VBD/put backward/RB/backward arrows/VBZ/arrows on/IN/on this/NNP/this. so/IN/so /,/, the/DT/the idea/NN/idea now/RB/now is/VBZ/is /,/, we/PRP/we start/VBP/start over/IN/over here/RB/here we/PRP/we keep/VBP/keep we/PRP/we go/VBP/go forward/RB/forward we/PRP/we are/VBP/are allowed/VBN/allowed to/TO/to go/VB/go forward/NNP/forward. then/RB/then /,/, we/PRP/we are/VBP/are allowed/VBN/allowed to/TO/to go/VB/go forward/RB/forward using/VBG/using edges/NNS/edges /,/, is/VBZ/is not/RB/not in/IN/in the/DT/the matching/NNP/matching. we/PRP/we can/MD/can come/VB/come back/RB/back /,/, we/PRP/we can/MD/can go/VB/go forward/RB/forward we/PRP/we can/MD/can come/VB/come back/RB/back /,/, every/DT/every time/NN/time we/PRP/we come/VBP/come back/RB/back we/PRP/we need/VBP/need to/TO/to use/VB/use edges/NNS/edges in/IN/in the/DT/the matching/NNP/matching. every/DT/every time/NN/time we/PRP/we go/VBP/go forward/NNP/forward. we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to use/VB/use edges/NNS/edges /,/, which/WDT/which are/VBP/are not/RB/not in/IN/in the/DT/the matching/NNP/matching. and/CC/and finally/RB/finally /,/, we/PRP/we would/MD/would like/VB/like to/TO/to end/VB/end up/RP/up with/IN/with a/DT/a free/JJ/free vertex/NN/vertex in/IN/in this/DT/this set/NN/set v/CC/v. again/RB/again there/RB/there could/MD/could be/VB/be many/JJ/many free/JJ/free vertices/NNS/vertices over/IN/over here/NNP/here. and/CC/and instead/RB/instead of/IN/of saying/VBG/saying /,/, let/VB/let us/PRP/us end/VB/end up/RP/up saying/VBG/saying free/JJ/free vertex/NN/vertex in/IN/in this/DT/this set/NN/set v/CC/v. here/RB/here is/VBZ/is what/WP/what we/PRP/we will/MD/will do/VB/do ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 44/CD/44 /CD/) instead/RB/instead of/IN/of saying/VBG/saying that/IN/that /,/, the/DT/the path/NN/path must/MD/must end/VB/end at/IN/at any/DT/any free/JJ/free vertex/NN/vertex we/PRP/we will/MD/will put/VB/put a/DT/a vertex/NN/vertex t/NN/t out/IN/out here/NNP/here. and/CC/and all/DT/all the/DT/the free/JJ/free vertices/NNS/vertices we/PRP/we will/MD/will connect/VB/connect it/PRP/it to/TO/to t/NNP/t. in/IN/in this/DT/this case/NN/case /,/, there/EX/there is/VBZ/is one/CD/one free/JJ/free vertex/NNP/vertex. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we will/MD/will connect/VB/connect to/TO/to t/NNP/t. so/RB/so /,/, now/RB/now what/WP/what is/VBZ/is the/DT/the problem/NN/problem that/IN/that we/PRP/we want/VBP/want to/TO/to solve/VB/solve ?/./? while/IN/while we/PRP/we want/VBP/want to/TO/to ask/VB/ask the/DT/the question/NN/question /,/, does/VBZ/does there/EX/there exist/NN/exist a/DT/a path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t in/IN/in this/DT/this directed/VBN/directed graph/NNP/graph. notice/NN/notice that/WDT/that by/IN/by putting/VBG/putting directions/NNS/directions /,/, we/PRP/we have/VBP/have essentially/RB/essentially enforced/VBN/enforced all/DT/all the/DT/the constraints/NNS/constraints that/WDT/that we/PRP/we wanted/VBD/wanted on/IN/on that/DT/that augmenting/NN/augmenting path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 18/CD/18 /CD/) so/RB/so /,/, let/VB/let us/PRP/us formalize/VB/formalize this/NNP/this. let/VB/let us/PRP/us state/NN/state this/DT/this algebraically/NNP/algebraically. so/RB/so /,/, we/PRP/we will/MD/will define/VB/define this/DT/this directed/VBN/directed graph/NN/graph and/CC/and we/PRP/we will/MD/will call/VB/call it/PRP/it the/DT/the auxiliary/JJ/auxiliary graph/NN/graph /,/, for/IN/for g/NN/g and/CC/and m/NNP/m. so/RB/so /,/, what/WDT/what does/VBZ/does this/DT/this graph/NN/graph look/NN/look like/IN/like ?/./? first/JJ/first of/IN/of all/DT/all /,/, we/PRP/we will/MD/will get/VB/get symbol/NN/symbol g/NN/g prime/NNP/prime. it/PRP/it is/VBZ/is going/VBG/going to/TO/to consist/VB/consist of/IN/of vertex/NN/vertex set/NN/set v/NN/v prime/NN/prime /,/, which/WDT/which i/PRP/i will/MD/will define/VB/define in/IN/in a/DT/a minute/NN/minute and/CC/and edge/NN/edge set/NNP/set. so/RB/so /,/, these/DT/these edges/NNS/edges are/VBP/are actually/RB/actually directed/NNP/directed. so/RB/so /,/, this/DT/this edge/NN/edge set/VBD/set is/VBZ/is e/NN/e prime/NNP/prime. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the vertex/NN/vertex set/VBD/set ?/./? v/NN/v prime/NN/prime is/VBZ/is the/DT/the union/NN/union of/IN/of set/NN/set u/NN/u in/IN/in the/DT/the original/JJ/original graph/NN/graph /,/, the/DT/the set/NN/set v/NN/v in/IN/in the/DT/the original/JJ/original graph/NN/graph and/CC/and these/DT/these two/CD/two vertices/NNS/vertices /,/, which/WDT/which we/PRP/we added/VBD/added the/DT/the s/NNS/s vertex/NN/vertex and/CC/and the/DT/the t/NN/t vertex/NNP/vertex. let/NN/let us/PRP/us define/VBP/define the/DT/the edge/NN/edge set/NN/set e/NN/e prime/NN/prime consists/NNS/consists of/IN/of these/DT/these edges/NNS/edges /,/, which/WDT/which goes/VBZ/goes out/RP/out of/IN/of s/NNP/s. so/RB/so /,/, just/RB/just to/TO/to remind/VB/remind you/NNP/you. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the edges/NNS/edges which/WDT/which are/VBP/are e/RB/e s/NNS/s edges/NNP/edges. e/NN/e f/NN/f is/VBZ/is the/DT/the edges/NNS/edges /,/, which/WDT/which are/VBP/are the/DT/the forward/NN/forward edges/NNP/edges. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go over/IN/over them/PRP/them step/VB/step by/IN/by step/NNP/step. e/NN/e f/NN/f are/VBP/are the/DT/the set/NN/set of/IN/of edges/NNS/edges in/IN/in the/DT/the forward/NN/forward direction/NN/direction that/IN/that is/VBZ/is /,/, what/WP/what this/DT/this f/NN/f is/VBZ/is supposed/VBN/supposed to/TO/to end/VB/end up/NNP/up. so/RB/so /,/, they/PRP/they consist/VBP/consist of/IN/of the/DT/the arcs/NNS/arcs of/IN/of the/DT/the form/NN/form u/NN/u v/NN/v /,/, where/WRB/where u/NN/u belongs/NNS/belongs to/TO/to the/DT/the left/NN/left hand/NN/hand set/NN/set of/IN/of vertices/NNS/vertices /,/, v/NN/v belongs/NNS/belongs to/TO/to little/VB/little v/NN/v belongs/NNS/belongs to/TO/to the/DT/the right/NN/right hand/NN/hand side/NN/side vertices/NNS/vertices of/IN/of capital/NN/capital v/NN/v and/CC/and u/NN/u v/NN/v is/VBZ/is not/RB/not in/IN/in the/DT/the matching/NN/matching /,/, but/CC/but it/PRP/it is/VBZ/is in/IN/in the/DT/the edge/NN/edge set/NNP/set. e/NN/e sub/NN/sub b/NN/b are/VBP/are the/DT/the backward/NN/backward edges/NNS/edges /,/, the/DT/the edges/NNS/edges which/WDT/which we/PRP/we directed/VBD/directed backwards/NNP/backwards. and/CC/and these/DT/these are/VBP/are simply/RB/simply all/DT/all the/DT/the edges/NNS/edges in/IN/in the/DT/the matching/NNP/matching. so/RB/so /,/, these/DT/these are/VBP/are all/DT/all the/DT/the edges/NNS/edges which/WDT/which were/VBD/were not/RB/not in/IN/in the/DT/the matching/NN/matching which/WDT/which we/PRP/we directed/VBD/directed forward/NNP/forward. these/DT/these are/VBP/are all/DT/all the/DT/the edges/NNS/edges which/WDT/which in/IN/in the/DT/the matching/NN/matching /,/, which/WDT/which we/PRP/we directed/VBD/directed backwards/NNP/backwards. so/RB/so /,/, notice/NN/notice that/IN/that this/DT/this is/VBZ/is u/PRP/u to/TO/to v/VB/v whereas/NNS/whereas /,/, this/DT/this is/VBZ/is v/NN/v to/TO/to u/NNP/u. and/CC/and finally/RB/finally /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to put/VB/put edges/NNS/edges out/IN/out of/IN/of every/DT/every vertex/NN/vertex /,/, every/DT/every free/JJ/free vertex/NN/vertex in/IN/in v/NN/v to/TO/to the/DT/the vertex/NN/vertex t/NNP/t. so/RB/so /,/, this/DT/this defines/NNS/defines our/PRP$/our auxiliary/JJ/auxiliary graph/NNP/graph. so/RB/so /,/, now/RB/now comes/VBZ/comes our/PRP$/our main/JJ/main claim/NNP/claim. our/PRP$/our main/JJ/main claim/NN/claim says/VBZ/says that/IN/that /,/, g/NN/g has/VBZ/has an/DT/an augmenting/NN/augmenting path/NN/path for/IN/for this/DT/this matching/NN/matching m/NN/m if/IN/if and/CC/and only/RB/only if/IN/if /,/, g/VBP/g prime/JJ/prime has/NNS/has a/DT/a directed/VBN/directed path/NN/path from/IN/from s/NNS/s to/TO/to t/NNP/t. we/PRP/we will/MD/will prove/VB/prove this/DT/this /,/, we/PRP/we just/RB/just point/VBP/point out/RP/out why/WRB/why this/DT/this claim/NN/claim is/VBZ/is important/NNP/important. notice/NN/notice that/WDT/that /,/, we/PRP/we did/VBD/did not/RB/not have/VB/have any/DT/any specific/JJ/specific way/NN/way of/IN/of finding/NN/finding augmenting/VBG/augmenting paths/NNP/paths. however/RB/however /,/, given/VBN/given a/DT/a graph/NN/graph g/NN/g prime/NN/prime does/VBZ/does it/PRP/it have/VB/have a/DT/a directed/VBN/directed path/NN/path from/IN/from s/NNS/s to/TO/to t/NNP/t. that/IN/that we/PRP/we know/VBP/know how/WRB/how to/TO/to find/VB/find it/PRP/it completely/RB/completely ?/./? that/IN/that is/VBZ/is just/RB/just simple/JJ/simple /,/, breadth/NN/breadth first/RB/first search/NN/search /,/, depth/NN/depth first/RB/first search/NN/search or/CC/or whatever/RB/whatever you/PRP/you like/NNP/like. so/RB/so /,/, this/DT/this claim/NN/claim would/MD/would enable/VB/enable us/PRP/us to/TO/to find/VB/find augmented/VBN/augmented paths/NNS/paths very/RB/very quickly/NNP/quickly. and/CC/and that/IN/that is/VBZ/is why/WRB/why /,/, it/PRP/it is/VBZ/is a/DT/a very/RB/very significant/JJ/significant claim/NNP/claim. so/RB/so /,/, let/VB/let us/PRP/us prove/VBP/prove it/NNP/it. the/DT/the proof/NN/proof really/RB/really goes/VBZ/goes along/NNP/along. pretty/RB/pretty much/RB/much along/IN/along the/DT/the lines/NNS/lines of/IN/of the/DT/the construction/NN/construction /,/, as/IN/as i/PRP/i explained/VBD/explained it/PRP/it in/IN/in a/DT/a minute/NN/minute ago/IN/ago /,/, but/CC/but i/PRP/i will/MD/will try/VB/try to/TO/to explain/VB/explain it/PRP/it formally/RB/formally right/RB/right now/RB/now /,/, without/IN/without reference/NN/reference to/TO/to a/DT/a specific/JJ/specific graph/NNP/graph. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the only/JJ/only if/IN/if part/NN/part first/NNP/first. so/RB/so /,/, the/DT/the only/JJ/only if/IN/if part/NN/part says/VBZ/says that/IN/that suppose/NN/suppose g/NN/g has/VBZ/has an/DT/an augmenting/NN/augmenting path/NN/path then/RB/then /,/, g/NN/g prime/NN/prime must/MD/must have/VB/have a/DT/a directed/VBN/directed path/NN/path from/IN/from s/NNS/s to/TO/to t/NNP/t. so/RB/so /,/, the/DT/the only/JJ/only part/NN/part says/VBZ/says that/IN/that let/NN/let a/DT/a be/NN/be an/DT/an augmenting/NN/augmenting path/NN/path for/IN/for g/NN/g m/NN/m then/RB/then /,/, we/PRP/we will/MD/will show/VB/show we/PRP/we must/MD/must show/VB/show that/IN/that s/NNS/s v/VBP/v 1/CD/1 v/NN/v k/NN/k the/DT/the same/JJ/same path/NN/path /,/, but/CC/but in/IN/in the/DT/the new/JJ/new in/IN/in the/DT/the graph/NN/graph g/NN/g prime/NN/prime /,/, must/MD/must be/VB/be a/DT/a directed/VBN/directed s/NNS/s t/VBP/t path/NNP/path. so/RB/so /,/, i/PRP/i hope/VBP/hope there/RB/there is/VBZ/is no/DT/no confusion/NNP/confusion. because/IN/because /,/, we/PRP/we are/VBP/are using/VBG/using the/DT/the same/JJ/same set/NN/set of/IN/of vertices/NNS/vertices /,/, but/CC/but we/PRP/we have/VBP/have carefully/RB/carefully defined/VBN/defined everything/NN/everything in/IN/in this/DT/this definition/NNP/definition. and/CC/and also/RB/also in/IN/in the/DT/the previous/JJ/previous graph/NN/graph in/IN/in the/DT/the previous/JJ/previous picture/NN/picture /,/, we/PRP/we actually/RB/actually use/VBP/use the/DT/the same/JJ/same set/NN/set of/IN/of vertices/NNP/vertices. and/CC/and we/PRP/we just/RB/just transformed/VBD/transformed our/PRP$/our original/JJ/original g/NN/g to/TO/to g/VB/g prime/NNP/prime. by/IN/by context/NN/context you/PRP/you should/MD/should know/VB/know /,/, when/WRB/when i/PRP/i refer/VBP/refer to/TO/to over/IN/over vertex/NN/vertex whether/IN/whether i/PRP/i am/VBP/am referring/VBG/referring to/TO/to it/PRP/it inside/VB/inside g/NN/g prime/NN/prime or/CC/or inside/VB/inside g/NNP/g. so/RB/so /,/, we/PRP/we had/VBD/had given/VBN/given this/DT/this augmenting/NN/augmenting path/NN/path v/NN/v 1/CD/1 to/TO/to v/VB/v k/NNP/k. and/CC/and we/PRP/we want/VBP/want to/TO/to show/VB/show that/IN/that /,/, this/DT/this must/MD/must be/VB/be a/DT/a directed/VBN/directed path/NN/path in/IN/in g/NN/g prime/NNP/prime. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 04/CD/04 /CD/) what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about augmenting/VBG/augmenting paths/NNS/paths ?/./? it/PRP/it starts/VBZ/starts at/IN/at a/DT/a free/JJ/free vertex/NN/vertex in/IN/in u/NN/u /,/, goes/VBZ/goes forward/RB/forward and/CC/and backward/NN/backward several/JJ/several times/NNS/times and/CC/and terminates/NNS/terminates at/IN/at a/DT/a free/JJ/free vertex/NN/vertex in/IN/in v/NNP/v. so/RB/so /,/, v/NN/v 1/CD/1 is/VBZ/is a/DT/a free/JJ/free vertex/NN/vertex and/CC/and the/DT/the path/NN/path goes/VBZ/goes forward/RB/forward from/IN/from v/NN/v 1/CD/1. when/WRB/when it/PRP/it goes/VBZ/goes forward/RB/forward /,/, we/PRP/we must/MD/must have/VB/have an/DT/an analogous/JJ/analogous edge/NN/edge in/IN/in g/NN/g prime/NNP/prime. so/RB/so /,/, all/DT/all that/DT/that you/PRP/you need/VBP/need to/TO/to do/VB/do is/VBZ/is that/IN/that /,/, analogous/JJ/analogous edge/NN/edge is/VBZ/is present/JJ/present in/IN/in g/NN/g prime/NNP/prime. note/NN/note that/IN/that in/IN/in the/DT/the forward/NN/forward direction/NN/direction /,/, the/DT/the path/NN/path users/NNS/users edges/NNS/edges in/IN/in e/NN/e minus/NN/minus m/NNP/m. this/DT/this is/VBZ/is inside/NN/inside g/NNP/g. an/DT/an augmenting/VBG/augmenting path/NN/path in/IN/in the/DT/the forward/NN/forward direction/NN/direction /,/, uses/VBZ/uses edges/NNS/edges which/WDT/which are/VBP/are not/RB/not in/IN/in the/DT/the matching/NNP/matching. the/DT/the path/NN/path is/VBZ/is moving/VBG/moving forward/RB/forward /,/, but/CC/but it/PRP/it is/VBZ/is using/VBG/using edges/NNS/edges which/WDT/which are/VBP/are not/RB/not in/IN/in the/DT/the matching/NNP/matching. now/RB/now /,/, these/DT/these edges/NNS/edges are/VBP/are in/IN/in fact/NN/fact present/NN/present in/IN/in g/NN/g prime/NNP/prime. these/DT/these are/VBP/are exactly/RB/exactly the/DT/the edges/NNP/edges. they/PRP/they are/VBP/are present/JJ/present in/IN/in g/NN/g prime/NN/prime and/CC/and in/IN/in fact/NN/fact /,/, they/PRP/they are/VBP/are directed/VBN/directed in/IN/in the/DT/the forward/NN/forward direction/NNP/direction. so/RB/so /,/, if/IN/if we/PRP/we look/VBP/look at/IN/at the/DT/the forward/NN/forward going/VBG/going edges/NNS/edges in/IN/in this/DT/this /,/, they/PRP/they are/VBP/are all/RB/all present/JJ/present in/IN/in g/NN/g prime/NN/prime and/CC/and they/PRP/they are/VBP/are all/RB/all oriented/VBN/oriented properly/NNP/properly. they/PRP/they are/VBP/are oriented/VBN/oriented as/IN/as per/NN/per the/DT/the movement/NN/movement of/IN/of the/DT/the direction/NN/direction /,/, movement/NN/movement of/IN/of the/DT/the path/NN/path direction/NNP/direction. what/WP/what does/VBZ/does the/DT/the path/NN/path do/VBP/do ?/./? well/RB/well /,/, the/DT/the path/NN/path can/MD/can go/VB/go backward/NNP/backward. when/WRB/when it/PRP/it goes/VBZ/goes backward/NN/backward /,/, it/PRP/it uses/VBZ/uses the/DT/the edges/NNS/edges of/IN/of m/NNP/m. but/CC/but /,/, these/DT/these edges/NNS/edges are/VBP/are also/RB/also present/JJ/present in/IN/in g/NN/g prime/NN/prime and/CC/and they/PRP/they are/VBP/are directed/VBN/directed backwards/NNP/backwards. so/RB/so /,/, again/RB/again this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we wanted/NNP/wanted. well/RB/well /,/, there/EX/there is/VBZ/is no/DT/no coincidence/NN/coincidence over/IN/over here/RB/here /,/, because/IN/because we/PRP/we arranged/VBD/arranged it/PRP/it to/TO/to be/VB/be this/NNP/this. so/RB/so /,/, in/IN/in some/DT/some sense/NN/sense if/IN/if you/PRP/you followed/VBD/followed that/IN/that example/NN/example then/RB/then /,/, this/DT/this should/MD/should not/RB/not be/VB/be surprise/RB/surprise to/TO/to you/PRP/you at/IN/at all/NNP/all. so/RB/so /,/, again/RB/again going/VBG/going back/RB/back to/TO/to this/DT/this /,/, v/NN/v u/NN/u is/VBZ/is an/DT/an edge/NN/edge going/VBG/going from/IN/from v/NN/v to/TO/to u/VB/u and/CC/and that/IN/that is/VBZ/is how/WRB/how we/PRP/we have/VBP/have oriented/VBN/oriented it/NNP/it. if/IN/if for/IN/for all/PDT/all such/JJ/such edges/NNS/edges which/WDT/which belong/IN/belong to/TO/to the/DT/the matching/NNP/matching. so/RB/so /,/, what/WDT/what have/VBP/have we/PRP/we proved/VBD/proved then/RB/then ?/./? we/PRP/we have/VBP/have proved/VBN/proved that/IN/that /,/, this/DT/this portion/NN/portion which/WDT/which is/VBZ/is an/DT/an augmenting/VBG/augmenting path/NN/path which/WDT/which is/VBZ/is also/RB/also present/JJ/present in/IN/in g/NN/g prime/NN/prime and/CC/and it/PRP/it has/VBZ/has proper/JJR/proper orientation/NNP/orientation. so/RB/so /,/, all/DT/all that/DT/that we/PRP/we need/VBP/need to/TO/to argue/VB/argue is/VBZ/is the/DT/the s/NNS/s to/TO/to v/VB/v 1/CD/1 connection/NN/connection and/CC/and v/NN/v k/NN/k to/TO/to t/VB/t connection/NNP/connection. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about s/NNS/s to/TO/to v/VB/v 1/CD/1. so/RB/so /,/, s/NNS/s has/VBZ/has a/DT/a directed/VBN/directed edge/NN/edge to/TO/to every/DT/every free/JJ/free vertex/NN/vertex in/IN/in u/NNP/u. and/CC/and of/IN/of course/NN/course /,/, v/NN/v 1/CD/1 must/MD/must be/VB/be a/DT/a free/JJ/free vertex/NNP/vertex. so/RB/so /,/, this/DT/this since/NN/since it/PRP/it is/VBZ/is an/DT/an augmenting/VBG/augmenting path/NNP/path. so/RB/so /,/, s/NNS/s to/TO/to v/VB/v 1/CD/1 must/MD/must be/VB/be an/DT/an edge/NN/edge in/IN/in g/NN/g prime/NNP/prime. similarly/RB/similarly /,/, v/NN/v k/NN/k to/TO/to t/VB/t also/RB/also is/VBZ/is an/DT/an edge/NN/edge /,/, because/IN/because every/DT/every free/JJ/free vertex/NN/vertex has/VBZ/has an/DT/an edge/NN/edge s/VBZ/s to/TO/to t/NNP/t. so/RB/so /,/, that/IN/that is/VBZ/is also/RB/also present/JJ/present in/IN/in g/NN/g prime/NN/prime and/CC/and thus/RB/thus we/PRP/we have/VBP/have a/DT/a path/NN/path in/IN/in g/NN/g prime/NN/prime also/NNP/also. so/RB/so /,/, this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is a/DT/a path/NN/path in/IN/in g/NN/g prime/NN/prime exactly/RB/exactly as/IN/as we/PRP/we wanted/NNP/wanted. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 14/CD/14 /CD/) the/DT/the if/IN/if part/NN/part /,/, the/DT/the if/IN/if part/NN/part says/VBZ/says that/IN/that if/IN/if g/NN/g prime/NN/prime has/VBZ/has a/DT/a directed/VBN/directed path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t then/RB/then /,/, g/NN/g must/MD/must have/VB/have an/DT/an augmenting/VBG/augmenting path/NNP/path. so/RB/so in/IN/in fact/NN/fact /,/, you/PRP/you will/MD/will see/VB/see that/IN/that exactly/RB/exactly the/DT/the reverse/NN/reverse of/IN/of this/DT/this reasoning/NN/reasoning will/MD/will accomplish/VB/accomplish the/DT/the /,/, if/IN/if part/NN/part also/NNP/also. so/RB/so /,/, let/VB/let us/PRP/us summarize/VB/summarize what/WP/what we/PRP/we have/VBP/have done/NNP/done. so/RB/so /,/, we/PRP/we have/VBP/have defined/VBN/defined this/DT/this auxiliary/JJ/auxiliary graph/NNP/graph. and/CC/and using/VBG/using the/DT/the auxiliary/JJ/auxiliary graph/NN/graph /,/, all/DT/all we/PRP/we have/VBP/have to/TO/to do/VB/do is/VBZ/is just/RB/just find/VBP/find the/DT/the path/NN/path in/IN/in it/NNP/it. and/CC/and we/PRP/we get/VBP/get an/DT/an augmenting/VBG/augmenting path/NNP/path. so/RB/so /,/, we/PRP/we find/VBP/find a/DT/a path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t and/CC/and we/PRP/we get/VBP/get an/DT/an augmenting/VBG/augmenting path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 03/CD/03 /CD/) so/RB/so /,/, now/RB/now that/IN/that brings/NNS/brings us/PRP/us back/RB/back to/TO/to our/PRP$/our algorithm/NNP/algorithm. so/RB/so /,/, that/IN/that brings/NNS/brings us/PRP/us back/RB/back to/TO/to the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we just/RB/just have/VBP/have to/TO/to build/VB/build up/RP/up on/IN/on this/DT/this step/NN/step of/IN/of finding/NN/finding an/DT/an augmenting/NN/augmenting path/NN/path /,/, but/CC/but we/PRP/we know/VBP/know how/WRB/how to/TO/to do/VB/do that/NNP/that. so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our augmenting/NN/augmenting path/NN/path procedure/NNP/procedure. so/RB/so /,/, we/PRP/we construct/VBP/construct g/NN/g prime/NN/prime just/RB/just as/IN/as we/PRP/we defined/VBD/defined a/DT/a minute/NN/minute ago/IN/ago then/RB/then /,/, we/PRP/we find/VBP/find p/NN/p the/DT/the path/NN/path from/IN/from s/NNS/s to/TO/to t/NNP/t. we/PRP/we can/MD/can use/VB/use breadth/NN/breadth first/RB/first search/NN/search for/IN/for it/PRP/it or/CC/or we/PRP/we can/MD/can use/VB/use depth/NN/depth first/RB/first search/NN/search /,/, it/PRP/it does/VBZ/does not/RB/not matter/NNP/matter. but/CC/but /,/, somehow/VBP/somehow we/PRP/we do/VBP/do it/NNP/it. and/CC/and then/RB/then /,/, if/IN/if p/NN/p is/VBZ/is not/RB/not null/JJ/null then/RB/then /,/, we/PRP/we delete/VBP/delete that/IN/that as/IN/as t/NN/t and/CC/and return/NN/return the/DT/the augmenting/NN/augmenting path/NNP/path. this/DT/this return/NN/return path/NN/path will/MD/will be/VB/be used/VBN/used over/RP/over here/RB/here to/TO/to augment/VB/augment the/DT/the matching/NNP/matching. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now analyze/VBP/analyze this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say n/NN/n denotes/NNS/denotes the/DT/the cardinality/NN/cardinality of/IN/of u/NN/u plus/CC/plus the/DT/the cardinality/NN/cardinality of/IN/of v/NN/v or/CC/or the/DT/the total/JJ/total number/NN/number of/IN/of vertices/NNP/vertices. let/NN/let m/NN/m denote/NN/denote the/DT/the cardinality/NN/cardinality of/IN/of the/DT/the edge/NN/edge set/NN/set of/IN/of the/DT/the original/JJ/original graph/NNP/graph. and/CC/and let/VB/let us/PRP/us assume/VB/assume that/IN/that /,/, the/DT/the graphs/NNS/graphs are/VBP/are represented/VBN/represented in/IN/in the/DT/the adjacency/NN/adjacency list/NN/list representation/NNP/representation. in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will keep/VB/keep m/NN/m also/RB/also in/IN/in some/DT/some adjacency/NN/adjacency list/NN/list representation/NNP/representation. just/RB/just for/IN/for the/DT/the purpose/NN/purpose of/IN/of simplicity/NN/simplicity of/IN/of thinking/VBG/thinking about/IN/about this/DT/this whole/JJ/whole thing/NNP/thing. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know now/RB/now ?/./? well/RB/well /,/, we/PRP/we have/VBP/have to/TO/to analyze/VB/analyze what/WP/what the/DT/the time/NN/time for/IN/for constructing/NN/constructing g/NN/g prime/NN/prime ?/./? and/CC/and g/NN/g prime/NN/prime is/VBZ/is and/CC/and then/RB/then /,/, doing/VBG/doing the/DT/the breadth/NN/breadth first/RB/first search/NN/search and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, here/RB/here we/PRP/we construct/VBP/construct this/DT/this graph/NN/graph g/NN/g prime/NNP/prime. so/RB/so /,/, how/WRB/how did/VBD/did we/PRP/we do/VBP/do that/IN/that ?/./? we/PRP/we took/VBD/took g/NN/g and/CC/and we/PRP/we took/VBD/took the/DT/the matching/NN/matching and/CC/and we/PRP/we took/VBD/took its/PRP$/its union/NN/union /,/, we/PRP/we oriented/VBD/oriented the/DT/the edges/NNP/edges. so/RB/so /,/, in/IN/in any/DT/any case/NN/case that/WDT/that can/MD/can be/VB/be done/VBN/done in/IN/in time/NN/time proportional/JJ/proportional to/TO/to the/DT/the sizes/NNS/sizes of/IN/of two/CD/two graphs/NNS/graphs /,/, which/WDT/which is/VBZ/is o/RB/o of/IN/of m/NN/m plus/CC/plus n/NNP/n. the/DT/the next/JJ/next step/NN/step over/IN/over here/RB/here is/VBZ/is to/TO/to find/VB/find the/DT/the path/NN/path from/IN/from s/NNS/s to/TO/to t/VB/t using/VBG/using bfs/NNP/bfs. bfs/NNS/bfs breadth/VBP/breadth first/JJ/first search/NN/search takes/VBZ/takes time/NN/time again/RB/again o/RB/o of/IN/of m/NN/m plus/CC/plus n/NNP/n. so/RB/so /,/, this/DT/this step/NN/step also/RB/also takes/VBZ/takes time/NN/time o/NN/o of/IN/of m/NN/m plus/CC/plus 1/CD/1. so/RB/so /,/, both/DT/both of/IN/of these/DT/these steps/NNS/steps take/VBP/take time/NN/time m/NN/m plus/CC/plus n/NNP/n. time/NN/time for/IN/for this/DT/this entire/JJ/entire procedure/NN/procedure /,/, i/PRP/i claim/VBP/claim this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of m/NN/m plus/CC/plus n/NN/n /,/, this/DT/this entire/JJ/entire procedure/NN/procedure augmenting/VBG/augmenting path/NNP/path. that/IN/that is/VBZ/is /,/, because/IN/because this/DT/this part/NN/part deleting/VBG/deleting s/NNS/s and/CC/and t/NN/t can/MD/can be/VB/be done/VBN/done in/IN/in constant/JJ/constant time/NNP/time. and/CC/and therefore/RB/therefore /,/, this/DT/this entire/JJ/entire thing/NN/thing is/VBZ/is just/RB/just the/DT/the sum/NN/sum of/IN/of this/DT/this plus/NN/plus this/DT/this /,/, which/WDT/which is/VBZ/is o/RB/o of/IN/of m/NN/m plus/CC/plus n/NNP/n. so/RB/so /,/, this/DT/this takes/VBZ/takes o/NN/o of/IN/of m/NN/m plus/CC/plus n/NN/n time/NNP/time. so/RB/so /,/, the/DT/the only/JJ/only question/NN/question that/WDT/that remains/VBZ/remains is/VBZ/is /,/, how/WRB/how many/JJ/many times/NNS/times do/VBP/do we/PRP/we augment/VB/augment ?/./? well/RB/well and/CC/and how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/DT/this augmentation/NN/augmentation itself/PRP/itself ?/./? in/IN/in fact/NN/fact /,/, in/IN/in m/NN/m plus/CC/plus n/NN/n time/NN/time you/PRP/you can/MD/can compute/VB/compute m/NN/m augmented/VBN/augmented with/IN/with p/NN/p also/NNP/also. because/IN/because /,/, that/IN/that is/VBZ/is just/RB/just going/VBG/going over/IN/over the/DT/the graph/NN/graph completely/RB/completely once/RB/once even/RB/even that/IN/that /,/, will/MD/will take/VB/take time/NN/time o/NN/o of/IN/of m/NN/m plus/CC/plus n/NNP/n. how/WRB/how many/JJ/many augmentations/NNS/augmentations do/VBP/do we/PRP/we do/VBP/do ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 54/CD/54 /CD/) well/RB/well /,/, what/WDT/what do/VBP/do you/PRP/you know/VB/know about/IN/about matching/JJ/matching size/NN/size ?/./? the/DT/the matching/NN/matching size/NN/size is/VBZ/is at/IN/at most/JJS/most n/JJ/n by/IN/by 2/CD/2 /,/, since/IN/since the/DT/the number/NN/number of/IN/of vertices/NNS/vertices is/VBZ/is n/NNP/n. and/CC/and so/RB/so /,/, the/DT/the number/NN/number of/IN/of augmentations/NNS/augmentations is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at most/JJS/most n/JJ/n by/IN/by 2/CD/2. so/RB/so /,/, now/RB/now we/PRP/we know/VBP/know what/WP/what the/DT/the total/JJ/total time/NN/time is/VBZ/is /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is n/VBN/n by/IN/by 2/CD/2 multiplied/VBN/multiplied by/IN/by this/DT/this or/CC/or in/IN/in other/JJ/other words/NNS/words /,/, it/PRP/it is/VBZ/is o/RB/o f/NN/f n/NN/n times/NNS/times m/VBP/m plus/RB/plus n/JJ/n m/NN/m is/VBZ/is typically/RB/typically larger/JJR/larger than/IN/than n/NN/n and/CC/and so/RB/so /,/, we/PRP/we can/MD/can write/VB/write it/PRP/it as/IN/as o/NN/o of/IN/of m/NN/m n/NNP/n. so/RB/so /,/, that/IN/that completes/NNS/completes the/DT/the analysis/NN/analysis of/IN/of the/DT/the algorithm/NN/algorithm /,/, the/DT/the description/NN/description and/CC/and the/DT/the analysis/NN/analysis of/IN/of this/DT/this algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 29/CD/29 /CD/) so/RB/so /,/, let/VB/let me/PRP/me make/VB/make a/DT/a few/JJ/few concluding/NN/concluding remarks/NNP/remarks. we/PRP/we can/MD/can actually/RB/actually think/VB/think of/IN/of this/DT/this algorithm/NN/algorithm /,/, as/IN/as an/DT/an iterative/JJ/iterative refinement/NNP/refinement. what/WP/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? well/RB/well /,/, we/PRP/we have/VBP/have a/DT/a matching/VBG/matching currently/RB/currently and/CC/and then/RB/then /,/, can/MD/can we/PRP/we improve/VB/improve it/PRP/it by/IN/by making/VBG/making the/DT/the small/JJ/small change/NNP/change. so/RB/so /,/, an/DT/an augmenting/NN/augmenting path/NN/path essentially/RB/essentially allowed/VBN/allowed us/PRP/us to/TO/to determine/VB/determine if/IN/if a/DT/a small/JJ/small change/NN/change can/MD/can be/VB/be made/NNP/made. this/DT/this is/VBZ/is not/RB/not the/DT/the fastest/JJS/fastest algorithm/NNP/algorithm. in/IN/in fact/NN/fact /,/, an/DT/an m/NN/m root/NN/root n/NN/n algorithm/NN/algorithm is/VBZ/is known/VBN/known not/RB/not just/RB/just m/VB/m n/NNP/n. so/RB/so /,/, m/NN/m root/NN/root n/NN/n algorithm/NN/algorithm is/VBZ/is known/NNP/known. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 01/CD/01 /CD/) and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we can/MD/can define/VB/define this/DT/this problem/NN/problem for/IN/for non/NN/non bipartite/NN/bipartite graphs/NNP/graphs. so/RB/so /,/, that/IN/that also/RB/also turns/VBZ/turns out/RP/out to/TO/to be/VB/be useful/JJ/useful very/RB/very often/NNP/often. and/CC/and as/IN/as it/PRP/it turns/VBZ/turns out/RP/out that/IN/that /,/, similar/JJ/similar bounds/NNS/bounds can/MD/can be/VB/be found/VBN/found for/IN/for the/DT/the non/NN/non bipartite/NN/bipartite case/NNP/case. so/RB/so /,/, maximum/NN/maximum matching/VBG/matching can/MD/can also/RB/also be/VB/be found/VBN/found in/IN/in non/NN/non bipartite/NN/bipartite graphs/NNP/graphs. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 26/CD/26 /CD/) in/IN/in the/DT/the same/JJ/same time/NN/time as/IN/as above/JJ/above /,/, but/CC/but the/DT/the algorithm/NN/algorithm is/VBZ/is much/JJ/much /,/, much/RB/much more/RBR/more complicated/NNP/complicated. and/CC/and i/PRP/i will/MD/will stop/VB/stop here/NNP/here. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 24/CD/24 lower/JJR/lower bounds/NNS/bounds for/IN/for sorting/VBG/sorting welcome/NN/welcome to/TO/to another/DT/another lecture/NN/lecture on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. the/DT/the topic/JJ/topic for/IN/for today/NN/today is/VBZ/is lower/JJR/lower bounds/NNS/bounds for/IN/for sorting/NNP/sorting. let/NN/let me/PRP/me begin/VBP/begin with/IN/with a/DT/a very/RB/very fundamental/JJ/fundamental /,/, very/RB/very basic/JJ/basic question/NNP/question. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 03/CD/03 /CD/) suppose/NN/suppose /,/, we/PRP/we just/RB/just designed/VBN/designed a/DT/a algorithm/NN/algorithm /,/, that/IN/that takes/VBZ/takes time/NN/time f/NN/f of/IN/of n/NN/n to/TO/to solve/VB/solve some/DT/some problem/NN/problem /,/, where/WRB/where n/NN/n is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the problem/NNP/problem. what/WP/what would/MD/would we/VB/we like/IN/like to/TO/to know/VB/know then/NNP/then. naturally/RB/naturally the/DT/the question/NN/question /,/, that/IN/that we/PRP/we would/MD/would like/VB/like to/TO/to ask/VB/ask is/VBZ/is /,/, is/VBZ/is this/DT/this the/DT/the best/JJS/best possible/JJ/possible algorithm/NN/algorithm or/CC/or can/MD/can we/PRP/we do/VBP/do better/RBR/better than/IN/than this/NNP/this. here/RB/here is/VBZ/is the/DT/the possible/JJ/possible result/NN/result /,/, we/PRP/we will/MD/will desire/NNP/desire. we/PRP/we would/MD/would like/VB/like it/PRP/it /,/, if/IN/if we/PRP/we can/MD/can prove/VB/prove that/IN/that every/DT/every algorithm/NN/algorithm for/IN/for solving/NN/solving the/DT/the problem/NN/problem /,/, must/MD/must take/VB/take time/NN/time at/IN/at least/JJS/least omega/NN/omega of/IN/of f/NN/f of/IN/of n/NNP/n. remember/NN/remember /,/, f/NN/f of/IN/of n/NN/n is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we just/RB/just designed/NNP/designed. supposed/VBD/supposed /,/, we/PRP/we proved/VBD/proved a/DT/a result/NN/result like/IN/like this/DT/this /,/, what/WP/what could/MD/could it/PRP/it mean/VB/mean ?/./? would/MD/would it/PRP/it be/VB/be a/DT/a valuable/JJ/valuable result/NN/result /,/, well/RB/well first/JJ/first of/IN/of all/DT/all this/DT/this result/NN/result if/IN/if we/PRP/we can/MD/can prove/VB/prove /,/, it/PRP/it is/VBZ/is called/VBN/called a/DT/a problem/NN/problem lower/JJR/lower bound/NNP/bound. it/PRP/it is/VBZ/is called/VBN/called the/DT/the problem/NN/problem lower/JJR/lower bound/NNP/bound. because/IN/because /,/, it/PRP/it says/VBZ/says something/NN/something about/IN/about the/DT/the problem/NN/problem /,/, it/PRP/it is/VBZ/is not/RB/not really/RB/really saying/VBG/saying anything/NN/anything about/IN/about a/DT/a specific/JJ/specific algorithm/NNP/algorithm. it/PRP/it says/VBZ/says every/DT/every algorithm/NN/algorithm for/IN/for solving/NN/solving the/DT/the problem/NN/problem /,/, must/MD/must take/VB/take time/NN/time at/IN/at least/JJS/least omega/NN/omega of/IN/of f/NN/f of/IN/of n/NNP/n. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a lower/JJR/lower bound/NN/bound /,/, then/RB/then the/DT/the time/NN/time taken/VBN/taken for/IN/for any/DT/any algorithm/NN/algorithm /,/, which/WDT/which solves/NNS/solves the/DT/the problem/NNP/problem. now/RB/now /,/, if/IN/if we/PRP/we could/MD/could prove/VB/prove something/NN/something like/IN/like this/NNP/this. that/IN/that is/VBZ/is /,/, if/IN/if we/PRP/we can/MD/can prove/VB/prove that/IN/that the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the algorithm/NN/algorithm /,/, is/VBZ/is equal/JJ/equal to/TO/to the/DT/the problem/NN/problem lower/JJR/lower bound/NN/bound or/CC/or is/VBZ/is equal/JJ/equal to/TO/to within/VB/within this/DT/this omega/NN/omega /,/, or/CC/or within/IN/within some/DT/some proportionality/NN/proportionality constant/NNP/constant. what/WP/what do/VBP/do we/PRP/we know/VB/know /,/, well/RB/well if/IN/if we/PRP/we could/MD/could prove/VB/prove something/NN/something like/IN/like this/DT/this /,/, we/PRP/we know/VBP/know that/IN/that we/PRP/we have/VBP/have the/DT/the best/JJS/best possible/JJ/possible algorithm/NNP/algorithm. if/IN/if this/DT/this equality/NN/equality is/VBZ/is exact/JJ/exact and/CC/and we/PRP/we know/VBP/know /,/, we/PRP/we have/VBP/have the/DT/the absolute/JJ/absolute best/JJS/best possible/JJ/possible algorithm/NNP/algorithm. if/IN/if this/DT/this equality/NN/equality is/VBZ/is approximate/JJ/approximate /,/, well/RB/well if/IN/if it/PRP/it is/VBZ/is of/IN/of the/DT/the form/NN/form omega/NNP/omega. so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that this/DT/this bound/NN/bound /,/, that/IN/that we/PRP/we have/VBP/have the/DT/the best/JJS/best possible/JJ/possible algorithm/NN/algorithm to/TO/to within/VB/within a/DT/a constant/JJ/constant factor/NNP/factor. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the main/JJ/main motivation/NN/motivation for/IN/for studying/VBG/studying /,/, what/WP/what are/VBP/are called/VBN/called problem/NN/problem lower/JJR/lower bounds/NNP/bounds. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 05/CD/05 /CD/) /./. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do today/NNP/today. so/RB/so /,/, we/PRP/we will/MD/will be/VB/be having/VBG/having a/DT/a general/JJ/general discussion/NN/discussion /,/, of/IN/of problem/NN/problem lower/JJR/lower bounds/NNP/bounds. then/RB/then /,/, we/PRP/we will/MD/will consider/VB/consider the/DT/the question/NN/question of/IN/of lower/JJR/lower bounds/NNS/bounds for/IN/for sorting/NNP/sorting. so/RB/so /,/, problem/NN/problem lower/JJR/lower bounds/NNS/bounds /,/, but/CC/but the/DT/the problem/NN/problem being/VBG/being sorting/NNP/sorting. regarding/VBG/regarding sorting/VBG/sorting i/PRP/i will/MD/will introduce/VB/introduce a/DT/a model/NN/model of/IN/of computation/NN/computation /,/, called/VBN/called the/DT/the decision/NN/decision tree/NNP/tree. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will prove/VB/prove problem/NN/problem lower/JJR/lower bounds/NNS/bounds on/IN/on decision/NN/decision trees/NNS/trees /,/, for/IN/for the/DT/the problem/NN/problem we/PRP/we are/VBP/are sorting/NNP/sorting. now/RB/now /,/, you/PRP/you may/MD/may wonder/VB/wonder why/WRB/why do/VB/do we/PRP/we care/VB/care about/IN/about decision/NN/decision trees/NNS/trees /,/, is/VBZ/is it/PRP/it not/RB/not the/DT/the random/NN/random access/NN/access machine/NN/machine or/CC/or the/DT/the ram/NN/ram model/NN/model /,/, which/WDT/which we/PRP/we have/VBP/have been/VBN/been defined/VBN/defined and/CC/and which/WDT/which we/PRP/we have/VBP/have been/VBN/been using/VBG/using so/RB/so far/RB/far in/IN/in the/DT/the course/NN/course ;/:/; is/VBZ/is it/PRP/it not/RB/not /,/, it/PRP/it a/DT/a good/JJ/good enough/RB/enough model/NNP/model. well/RB/well /,/, it/PRP/it turns/VBZ/turns out/RP/out that/IN/that whatever/NN/whatever we/PRP/we do/VBP/do on/IN/on decision/NN/decision trees/NNS/trees /,/, is/VBZ/is actually/RB/actually quite/RB/quite relevant/JJ/relevant to/TO/to the/DT/the ram/NN/ram model/NNP/model. so/RB/so /,/, we/PRP/we will/MD/will see/VB/see this/DT/this relevance/NNP/relevance. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will come/VB/come to/TO/to average/VB/average case/NN/case lower/JJR/lower bounds/NNP/bounds. again/RB/again we/PRP/we will/MD/will prove/VB/prove average/JJ/average case/NN/case lower/JJR/lower bounds/NNS/bounds /,/, on/IN/on decision/NN/decision trees/NNP/trees. but/CC/but /,/, again/RB/again all/DT/all that/DT/that will/MD/will be/VB/be relevant/JJ/relevant to/TO/to the/DT/the ram/NN/ram as/IN/as well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 12/CD/12 /CD/) so/RB/so /,/, let/VB/let us/PRP/us start/VB/start with/IN/with something/NN/something /,/, which/WDT/which we/PRP/we have/VBP/have already/RB/already studied/VBN/studied /,/, at/IN/at least/JJS/least a/DT/a little/RB/little bit/NNP/bit. so/RB/so /,/, we/PRP/we have/VBP/have already/RB/already defined/VBN/defined the/DT/the notion/NN/notion of/IN/of putting/VBG/putting the/DT/the lower/JJR/lower bound/NN/bound on/IN/on the/DT/the time/NN/time taken/VBN/taken by/IN/by an/DT/an algorithm/NNP/algorithm. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what we/PRP/we said/VBD/said /,/, we/PRP/we said/VBD/said that/IN/that if/IN/if we/PRP/we have/VBP/have an/DT/an algorithm/NN/algorithm a/DT/a for/IN/for a/DT/a problem/NN/problem p/NNP/p. then/RB/then /,/, we/PRP/we will/MD/will say/VB/say it/PRP/it has/VBZ/has a/DT/a lower/JJR/lower bound/NN/bound f/NN/f sub/NN/sub a/NNP/a. where/WRB/where f/NN/f sub/NN/sub a/DT/a is/VBZ/is a/DT/a function/NNP/function. if/IN/if the/DT/the time/NN/time for/IN/for algorithm/NN/algorithm a/DT/a on/IN/on instances/NNS/instances of/IN/of size/NN/size n/NN/n /,/, is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to f/NN/f a/DT/a of/IN/of n/NNP/n. and/CC/and of/IN/of course/NN/course /,/, we/PRP/we are/VBP/are not/RB/not worried/VBN/worried about/IN/about every/DT/every instance/NN/instance /,/, but/CC/but we/PRP/we are/VBP/are worried/VBN/worried about/IN/about the/DT/the worst/JJS/worst case/NN/case instance/NN/instance /,/, the/DT/the worst/JJS/worst instance/NN/instance /,/, the/DT/the instance/NN/instance for/IN/for which/WDT/which the/DT/the time/NN/time is/VBZ/is a/DT/a largest/NNP/largest. so/RB/so /,/, always/RB/always in/IN/in this/DT/this course/NN/course /,/, we/PRP/we have/VBP/have been/VBN/been stressing/VBG/stressing the/DT/the worst/JJS/worst case/NN/case bounds/NNP/bounds. or/CC/or the/DT/the worst/JJS/worst case/NN/case times/NNS/times /,/, when/WRB/when we/PRP/we measure/VBP/measure the/DT/the performance/NN/performance of/IN/of algorithms/NNP/algorithms. and/CC/and even/RB/even here/RB/here we/PRP/we are/VBP/are doing/VBG/doing that/NNP/that. so/RB/so /,/, we/PRP/we are/VBP/are asking/VBG/asking /,/, what/WP/what is/VBZ/is lower/JJR/lower bound/NN/bound on/IN/on this/DT/this time/NN/time /,/, the/DT/the time/NN/time of/IN/of the/DT/the worst/JJS/worst instance/NN/instance i/PRP/i of/IN/of size/NN/size n/NN/n of/IN/of course/NNP/course. so/RB/so /,/, it/PRP/it will/MD/will be/VB/be f/NN/f a/DT/a of/IN/of n/NN/n /,/, this/DT/this is/VBZ/is what/WP/what this/DT/this means/NNP/means. this/DT/this is/VBZ/is what/WP/what it/PRP/it means/VBZ/means to/TO/to have/VB/have f/NN/f a/DT/a as/IN/as a/DT/a lower/JJR/lower bound/NN/bound on/IN/on a/DT/a problem/NN/problem p/NN/p /,/, on/IN/on a/DT/a algorithm/NN/algorithm a/DT/a for/IN/for a/DT/a problem/NN/problem p/NNP/p. now/RB/now /,/, of/IN/of course/NN/course /,/, it/PRP/it is/VBZ/is customary/JJ/customary to/TO/to say/VB/say that/IN/that /,/, this/DT/this inequality/NN/inequality holds/VBZ/holds /,/, only/RB/only for/IN/for large/JJ/large enough/RB/enough n/NNP/n. so/RB/so /,/, there/EX/there is/VBZ/is actually/RB/actually a/DT/a clause/NN/clause over/IN/over here/RB/here /,/, which/WDT/which says/VBZ/says for/IN/for all/PDT/all n/NN/n greater/JJR/greater than/IN/than n/NN/n naught/NN/naught /,/, where/WRB/where n/NN/n naught/NN/naught is/VBZ/is some/DT/some number/NNP/number. but/CC/but /,/, let/VB/let us/PRP/us not/RB/not worry/VBP/worry about/IN/about too/RB/too many/JJ/many technicalities/NNS/technicalities /:/( /:/( refer/NN/refer time/NN/time /:/: 05/CD/05 /:/: 47/CD/47 /CD/) /CD/) /./. now/RB/now /,/, the/DT/the typical/JJ/typical way/NN/way we/PRP/we prove/VBP/prove lower/JJR/lower bounds/NNS/bounds /,/, is/VBZ/is by/IN/by constructing/NN/constructing instances/NNS/instances i/PRP/i which/WDT/which take/VB/take a/DT/a large/JJ/large time/NNP/time. so/RB/so /,/, if/IN/if we/PRP/we have/VBP/have an/DT/an algorithm/NN/algorithm /,/, we/PRP/we look/VBP/look at/IN/at where/WRB/where the/DT/the algorithm/NN/algorithm is/VBZ/is weak/JJ/weak so/RB/so to/TO/to say/NNP/say. and/CC/and we/PRP/we construct/VBP/construct instances/NNS/instances /,/, which/WDT/which show/NN/show that/IN/that the/DT/the algorithm/NN/algorithm must/MD/must take/VB/take a/DT/a long/JJ/long time/NN/time on/IN/on that/DT/that particular/JJ/particular instance/NNP/instance. so/RB/so /,/, that/IN/that gives/VBZ/gives us/PRP/us good/JJ/good value/NN/value of/IN/of f/NN/f sub/NN/sub a/DT/a /,/, f/NN/f sub/NN/sub a/DT/a of/IN/of n/NNP/n. and/CC/and we/PRP/we have/VBP/have to/TO/to do/VB/do this/DT/this for/IN/for every/DT/every instance/NN/instance /,/, every/DT/every size/NN/size instance/NN/instance size/NNP/size. if/IN/if we/PRP/we can/MD/can do/VB/do this/DT/this /,/, then/RB/then we/PRP/we can/MD/can construct/VB/construct this/DT/this lower/JJR/lower bound/NN/bound function/NNP/function. next/JJ/next /,/, we/PRP/we will/MD/will look/VB/look at/IN/at problem/NN/problem lower/JJR/lower bounds/NNP/bounds. a/DT/a problem/NN/problem p/NN/p is/VBZ/is said/VBN/said to/TO/to have/VB/have a/DT/a lower/JJR/lower bound/NN/bound f/NN/f /,/, if/IN/if every/DT/every possible/JJ/possible algorithm/NN/algorithm has/VBZ/has lower/JJR/lower bound/NN/bound f/NNP/f. so/RB/so /,/, this/DT/this statement/NN/statement has/VBZ/has to/TO/to apply/RB/apply /,/, but/CC/but it/PRP/it has/VBZ/has to/TO/to apply/RB/apply for/IN/for all/DT/all possible/JJ/possible algorithms/NNS/algorithms /,/, for/IN/for this/DT/this problem/NN/problem p/NNP/p. here/RB/here is/VBZ/is the/DT/the more/RBR/more algebraic/JJ/algebraic statement/NNP/statement. so/RB/so /,/, notice/NN/notice that/IN/that this/DT/this part/NN/part /,/, is/VBZ/is just/RB/just similar/JJ/similar to/TO/to this/DT/this part/NN/part ;/:/; and/CC/and now/RB/now we/PRP/we have/VBP/have an/DT/an additional/JJ/additional quantification/NNP/quantification. we/PRP/we are/VBP/are saying/VBG/saying that/IN/that this/DT/this must/MD/must hold/VB/hold /,/, even/RB/even for/IN/for the/DT/the best/JJS/best algorithm/NNP/algorithm. so/RB/so /,/, the/DT/the algorithm/NN/algorithm which/WDT/which takes/VBZ/takes the/DT/the minimum/JJ/minimum worst/NN/worst case/NN/case time/NN/time /,/, must/MD/must have/VB/have time/NN/time bigger/JJR/bigger than/IN/than f/NN/f of/IN/of n/NNP/n. of/IN/of course/NN/course /,/, with/IN/with the/DT/the best/JJS/best algorithm/NN/algorithm has/VBZ/has time/NN/time bigger/JJR/bigger than/IN/than f/NN/f of/IN/of n/NNP/n. then/RB/then /,/, clearly/RB/clearly every/DT/every algorithm/NN/algorithm will/MD/will have/VB/have time/NN/time bigger/JJR/bigger than/IN/than f/NN/f of/IN/of n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what it/PRP/it means/VBZ/means for/IN/for f/NN/f to/TO/to be/VB/be a/DT/a problem/NN/problem lower/JJR/lower bound/NN/bound /,/, for/IN/for this/DT/this problem/NN/problem p/NNP/p. how/WRB/how do/VBP/do we/PRP/we prove/VBP/prove such/JJ/such bounds/NNS/bounds /,/, now/RB/now we/PRP/we have/VBP/have to/TO/to construct/VB/construct bad/JJ/bad instances/NNP/instances. instances/NNS/instances which/WDT/which show/NN/show /,/, that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is large/NNP/large. but/CC/but /,/, we/PRP/we have/VBP/have to/TO/to construct/VB/construct them/PRP/them /,/, not/RB/not only/RB/only for/IN/for all/DT/all problem/NN/problem sizes/NNS/sizes /,/, but/CC/but for/IN/for all/DT/all algorithms/NNS/algorithms as/IN/as well/NNP/well. and/CC/and of/IN/of course/NN/course /,/, the/DT/the instance/NN/instance it/PRP/it need/VBP/need not/RB/not be/VB/be the/DT/the same/JJ/same instance/NN/instance for/IN/for all/DT/all algorithms/NNP/algorithms. it/PRP/it could/MD/could be/VB/be that/IN/that for/IN/for one/CD/one algorithm/NN/algorithm /,/, it/PRP/it is/VBZ/is one/CD/one instance/NN/instance which/WDT/which is/VBZ/is bad/NNP/bad. for/IN/for another/DT/another algorithm/NN/algorithm /,/, it/PRP/it is/VBZ/is another/DT/another instance/NN/instance which/WDT/which is/VBZ/is bad/JJ/bad /,/, that/IN/that is/VBZ/is ok/NNP/ok. but/CC/but /,/, somehow/VBP/somehow we/PRP/we must/MD/must give/VB/give a/DT/a construction/NN/construction /,/, which/WDT/which shows/VBZ/shows that/IN/that no/DT/no matter/NN/matter what/WP/what algorithm/NN/algorithm you/PRP/you give/NNP/give. here/RB/here is/VBZ/is an/DT/an instance/NN/instance on/IN/on which/WDT/which it/PRP/it will/MD/will take/VB/take a/DT/a long/JJ/long time/NNP/time. we/PRP/we may/MD/may not/RB/not do/VB/do this/DT/this directly/RB/directly /,/, but/CC/but at/IN/at least/JJS/least indirectly/RB/indirectly something/NN/something like/IN/like this/DT/this has/VBZ/has to/TO/to be/VB/be proved/VBN/proved /,/, in/IN/in order/NN/order to/TO/to prove/VB/prove a/DT/a lower/JJR/lower bound/NN/bound over/IN/over here/NNP/here. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 21/CD/21 /CD/) here/RB/here are/VBP/are some/DT/some trivial/JJ/trivial lower/NN/lower bounds/NNS/bounds /,/, that/IN/that we/PRP/we can/MD/can prove/NNP/prove. most/RBS/most problems/NNS/problems have/VBP/have omega/NN/omega of/IN/of n/NN/n lower/JJR/lower bound/NN/bound /,/, where/WRB/where n/NN/n is/VBZ/is the/DT/the instance/NN/instance size/NN/size i/PRP/i say/VBP/say this/DT/this is/VBZ/is trivial/NNP/trivial. because/IN/because /,/, no/DT/no matter/NN/matter what/WP/what algorithm/NN/algorithm is/VBZ/is used/VBN/used /,/, the/DT/the algorithm/NN/algorithm at/IN/at least/JJS/least has/VBZ/has to/TO/to read/VB/read all/DT/all the/DT/the input/NNP/input. the/DT/the input/NN/input has/VBZ/has length/NN/length n/NN/n and/CC/and therefore/RB/therefore /,/, omega/NN/omega of/IN/of n/NN/n time/NN/time has/VBZ/has to/TO/to be/VB/be taken/NNP/taken. so/RB/so /,/, in/IN/in that/DT/that sense/NN/sense /,/, there/EX/there is/VBZ/is nothing/NN/nothing clever/RB/clever about/IN/about this/NNP/this. and/CC/and it/PRP/it by/IN/by and/CC/and large/JJ/large applies/NNS/applies to/TO/to every/DT/every problem/NNP/problem. there/RB/there could/MD/could be/VB/be some/DT/some problems/NNS/problems where/WRB/where it/PRP/it may/MD/may not/RB/not apply/VB/apply /,/, but/CC/but those/DT/those are/VBP/are not/RB/not probably/RB/probably very/RB/very interesting/JJ/interesting problems/NNP/problems. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 06/CD/06 /CD/) what/WP/what about/IN/about non-trivial/JJ/non-trivial bounds/NNS/bounds ?/./? it/PRP/it turns/VBZ/turns out/RP/out that/IN/that on/IN/on random/NN/random access/NN/access machines/NNS/machines ram/NN/ram ?/./? s/NNS/s /,/, proving/VBG/proving non/NN/non trivial/JJ/trivial bounds/NNS/bounds is/VBZ/is actually/RB/actually very/RB/very difficult/NNP/difficult. and/CC/and here/RB/here are/VBP/are some/DT/some of/IN/of the/DT/the reasons/NNP/reasons. basically/RB/basically when/WRB/when we/PRP/we assert/VBP/assert a/DT/a problem/NN/problem lower/JJR/lower bound/NN/bound /,/, we/PRP/we are/VBP/are saying/VBG/saying something/NN/something about/IN/about every/DT/every possible/JJ/possible algorithm/NNP/algorithm. now/RB/now /,/, on/IN/on ram/NN/ram ?/./? s/NNS/s /,/, the/DT/the space/NN/space of/IN/of all/DT/all possible/JJ/possible algorithms/NNS/algorithms is/VBZ/is really/RB/really huge/JJ/huge ;/:/; and/CC/and it/PRP/it is/VBZ/is tricky/JJ/tricky to/TO/to analyze/NNP/analyze. so/RB/so /,/, a/DT/a single/JJ/single problem/NN/problem may/MD/may have/VB/have lots/NNS/lots and/CC/and lots/NNS/lots of/IN/of algorithms/NNP/algorithms. enumerating/NN/enumerating those/DT/those algorithms/NNS/algorithms or/CC/or analyzing/VBG/analyzing them/PRP/them in/IN/in some/DT/some structured/VBN/structured fashion/NN/fashion /,/, is/VBZ/is often/RB/often a/DT/a very/RB/very tricky/JJ/tricky business/NNP/business. it/PRP/it is/VBZ/is tricky/JJ/tricky /,/, because/IN/because of/IN/of some/DT/some of/IN/of these/DT/these reasons/NNS/reasons /,/, a/DT/a ram/NN/ram has/VBZ/has many/JJ/many instructions/NNP/instructions. ram/NN/ram has/VBZ/has many/JJ/many instructions/NNS/instructions to/TO/to do/VB/do all/PDT/all arithmetic/JJ/arithmetic /,/, they/PRP/they can/MD/can be/VB/be composed/VBN/composed to/TO/to do/VB/do more/JJR/more complicated/JJ/complicated things/NNP/things. you/PRP/you can/MD/can take/VB/take logs/NNS/logs /,/, you/PRP/you can/MD/can exponentiate/VB/exponentiate /,/, you/PRP/you can/MD/can take/VB/take trigonometric/JJ/trigonometric functions/NNP/functions. you/PRP/you can/MD/can do/VB/do all/PDT/all such/JJ/such things/NNS/things with/IN/with ram/NN/ram instructions/NNP/instructions. there/EX/there are/VBP/are also/RB/also many/JJ/many control/NN/control flow/NN/flow pattern/NN/pattern /,/, there/EX/there is/VBZ/is looping/VBG/looping /,/, there/EX/there is/VBZ/is recursion/NN/recursion and/CC/and so/NNP/so. if/IN/if i/PRP/i give/VBP/give you/PRP/you a/DT/a ram/NN/ram program/NN/program /,/, analyzing/VBG/analyzing it/PRP/it is/VBZ/is pretty/RB/pretty difficult/NNP/difficult. and/CC/and saying/VBG/saying something/NN/something about/IN/about all/DT/all possible/JJ/possible ram/NN/ram programs/NNS/programs is/VBZ/is even/RB/even more/RBR/more difficult/NNP/difficult. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what is/VBZ/is typically/RB/typically done/NNP/done. so/RB/so /,/, we/PRP/we define/VBP/define a/DT/a simpler/NN/simpler computational/JJ/computational model/NN/model /,/, which/WDT/which say/VBP/say does/VBZ/does not/RB/not have/VB/have that/IN/that many/JJ/many instructions/NNP/instructions. and/CC/and which/WDT/which does/VBZ/does not/RB/not have/VB/have that/IN/that many/JJ/many control/NN/control flow/NN/flow patterns/NNP/patterns. so/RB/so /,/, we/PRP/we define/VBP/define such/JJ/such computational/JJ/computational models/NNS/models and/CC/and then/RB/then /,/, we/PRP/we analyze/VBP/analyze that/NNP/that. it/PRP/it will/MD/will turn/VB/turn now/RB/now /,/, that/IN/that on/IN/on such/JJ/such models/NNS/models the/DT/the space/NN/space of/IN/of programs/NNS/programs or/CC/or space/NN/space of/IN/of algorithms/NNS/algorithms is/VBZ/is actually/RB/actually fairly/RB/fairly small/NNP/small. well/RB/well /,/, it/PRP/it is/VBZ/is never/RB/never really/RB/really small/JJ/small /,/, but/CC/but it/PRP/it is/VBZ/is much/RB/much easier/JJR/easier to/TO/to visualize/NNP/visualize. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do next/NNP/next. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 13/CD/13 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is one/CD/one such/JJ/such model/NN/model /,/, this/DT/this model/NN/model has/VBZ/has been/VBN/been introduced/VBN/introduced in/IN/in the/DT/the context/NN/context of/IN/of algorithms/NNS/algorithms such/JJ/such as/IN/as sorting/NNP/sorting. so/RB/so /,/, it/PRP/it will/MD/will instructions/NNS/instructions which/WDT/which are/VBP/are relevant/JJ/relevant for/IN/for sorting/NN/sorting /,/, but/CC/but which/WDT/which are/VBP/are perhaps/RB/perhaps not/RB/not very/RB/very useful/JJ/useful for/IN/for other/JJ/other problems/NNS/problems /,/, but/CC/but since/IN/since typically/RB/typically we/PRP/we will/MD/will consider/VB/consider this/DT/this model/NN/model in/IN/in the/DT/the context/NN/context of/IN/of sorting/NNP/sorting. this/DT/this model/NN/model will/MD/will actually/RB/actually be/VB/be a/DT/a reasonably/RB/reasonably good/JJ/good model/NN/model to/TO/to look/VB/look at/NNP/at. so/RB/so /,/, here/RB/here is/VBZ/is what/WP/what the/DT/the model/NN/model looks/VBZ/looks like/NNP/like. so/RB/so /,/, the/DT/the input/NN/input to/TO/to every/DT/every algorithm/NN/algorithm is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be a/DT/a sequence/NN/sequence of/IN/of numbers/NNP/numbers. and/CC/and we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to be/VB/be worried/VBN/worried worry/NN/worry about/IN/about inputting/VBG/inputting those/DT/those numbers/NNP/numbers. we/PRP/we will/MD/will assume/VB/assume that/IN/that those/DT/those numbers/NNS/numbers have/VBP/have already/RB/already been/VBN/been read/NNP/read. and/CC/and they/PRP/they are/VBP/are already/RB/already stored/VBN/stored somewhere/RB/somewhere in/IN/in the/DT/the model/NNP/model. a/DT/a program/NN/program for/IN/for this/DT/this model/NN/model is/VBZ/is a/DT/a labeled/VBN/labeled tree/NNP/tree. so/RB/so /,/, every/DT/every non-leaf/JJ/non-leaf node/NN/node has/VBZ/has labels/NNS/labels of/IN/of the/DT/the form/NN/form i/PRP/i colon/VBP/colon j/NN/j /,/, where/WRB/where i/PRP/i and/CC/and j/VB/j are/VBP/are integers/NNP/integers. i/PRP/i will/MD/will tell/VB/tell you/PRP/you exactly/RB/exactly what/WP/what a/DT/a label/NN/label means/VBZ/means in/IN/in a/DT/a minute/NN/minute /,/, but/CC/but let/VB/let me/PRP/me just/RB/just describe/VBP/describe the/DT/the model/NN/model first/NNP/first. each/DT/each edge/NN/edge also/RB/also has/VBZ/has a/DT/a label/NN/label and/CC/and the/DT/the label/NN/label could/MD/could be/VB/be any/DT/any of/IN/of these/DT/these relational/JJ/relational operators/NNP/operators. leaf/NN/leaf node/NN/node labels/NNS/labels are/VBP/are the/DT/the values/NNS/values /,/, that/IN/that are/VBP/are going/VBG/going to/TO/to be/VB/be printed/NNP/printed. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what the/DT/the structure/NN/structure of/IN/of a/DT/a program/NN/program is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 40/CD/40 /CD/) so/RB/so /,/, here/RB/here for/IN/for example/NN/example /,/, is/VBZ/is a/DT/a program/NN/program which/WDT/which will/MD/will be/VB/be used/VBN/used for/IN/for sorting/NN/sorting 3/CD/3 numbers/NNS/numbers /,/, which/WDT/which can/MD/can sort/VB/sort 3/CD/3 numbers/NNP/numbers. i/PRP/i have/VBP/have not/RB/not told/VBN/told exactly/RB/exactly how/WRB/how it/PRP/it sorts/VBZ/sorts 3/CD/3 numbers/NNS/numbers /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you that/NNP/that. but/CC/but /,/, i/PRP/i just/RB/just wanted/VBD/wanted to/TO/to give/VB/give you/PRP/you a/DT/a picture/NN/picture for/IN/for the/DT/the program/NN/program tree/NN/tree model/NN/model /,/, that/IN/that i/PRP/i just/RB/just mentioned/NNP/mentioned. so/RB/so /,/, as/IN/as you/PRP/you can/MD/can see/VB/see /,/, the/DT/the label/NN/label over/IN/over here/RB/here is/VBZ/is 1/CD/1 colon/NN/colon 2/CD/2. this/DT/this edge/NN/edge is/VBZ/is labeled/VBN/labeled with/IN/with greater/JJR/greater than/IN/than and/CC/and so/RB/so on/NNP/on. and/CC/and the/DT/the leaf/NN/leaf is/VBZ/is labeled/VBN/labeled with/IN/with 3/CD/3 /,/, 1/CD/1 /,/, 2/CD/2 which/WDT/which is/VBZ/is what/WP/what it/PRP/it is/VBZ/is going/VBG/going to/TO/to output/VB/output /,/, as/IN/as per/NN/per the/DT/the execution/NN/execution model/NN/model /,/, which/WDT/which i/PRP/i will/MD/will describe/VB/describe next/NNP/next. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 13/CD/13 /:/: 17/CD/17 /CD/) /CD/) the/DT/the execution/NN/execution in/IN/in this/DT/this model/NN/model begins/VBZ/begins at/IN/at the/DT/the root/NN/root /,/, at/IN/at any/DT/any node/NN/node labeled/VBD/labeled i/PRP/i colon/VBP/colon j/NN/j input/NN/input x/NN/x i/PRP/i /,/, which/WDT/which came/VBD/came over/RP/over here/RB/here is/VBZ/is compared/VBN/compared with/IN/with input/NN/input x/NN/x j/NNP/j. the/DT/the result/NN/result of/IN/of this/DT/this comparison/NN/comparison is/VBZ/is some/DT/some relational/JJ/relational label/NN/label /,/, so/RB/so it/PRP/it is/VBZ/is either/DT/either say/NN/say actually/RB/actually its/PRP$/its either/DT/either less/JJR/less than/IN/than equal/JJ/equal to/TO/to or/CC/or greater/JJR/greater than/NNP/than. and/CC/and based/VBN/based on/IN/on that/DT/that result/NN/result /,/, the/DT/the execution/NN/execution follows/VBZ/follows the/DT/the appropriate/NN/appropriate branch/NNP/branch. so/RB/so /,/, say/VB/say for/IN/for example/NN/example /,/, the/DT/the result/NN/result is/VBZ/is less/JJR/less than/NNP/than. then/RB/then /,/, we/PRP/we will/MD/will look/VB/look for/IN/for branches/NNS/branches having/VBG/having either/DT/either the/DT/the label/NN/label less/NN/less than/NNP/than. or/CC/or the/DT/the label/NN/label less/NN/less than/IN/than or/CC/or equal/JJ/equal to/TO/to branch/NN/branch on/IN/on that/NNP/that. we/PRP/we will/MD/will require/VB/require that/IN/that only/RB/only one/CD/one out/IN/out of/IN/of less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to and/CC/and less/JJR/less than/IN/than be/VB/be a/DT/a label/NN/label present/NN/present /,/, on/IN/on the/DT/the outgoing/NN/outgoing edge/NNP/edge. this/DT/this is/VBZ/is because/IN/because /,/, we/PRP/we want/VBP/want our/PRP$/our algorithms/NNS/algorithms to/TO/to be/VB/be deterministic/NNP/deterministic. so/RB/so /,/, once/RB/once we/PRP/we make/VBP/make the/DT/the comparison/NN/comparison /,/, we/PRP/we want/VBP/want a/DT/a unique/JJ/unique path/NN/path to/TO/to follow/VB/follow outwards/NNP/outwards. when/WRB/when the/DT/the execution/NN/execution arise/NN/arise at/IN/at any/DT/any leaf/NN/leaf /,/, the/DT/the label/NN/label of/IN/of the/DT/the leaf/NN/leaf is/VBZ/is output/NNP/output. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try this/DT/this out/NN/out for/IN/for this/DT/this program/NN/program /,/, that/IN/that we/PRP/we have/VBP/have drawn/VBN/drawn over/IN/over here/NNP/here. so/RB/so /,/, as/IN/as i/PRP/i said/VBD/said this/DT/this program/NN/program is/VBZ/is going/VBG/going to/TO/to be/VB/be used/VBN/used for/IN/for sorting/NN/sorting 3/CD/3 numbers/NNP/numbers. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say the/DT/the input/NN/input instance/NN/instance is/VBZ/is x/NN/x 1/CD/1 equal/JJ/equal to/TO/to 20/CD/20 /,/, x/NN/x 2/CD/2 equal/JJ/equal to/TO/to 30/CD/30 /,/, x/NN/x 3/LS/3 equal/JJ/equal to/TO/to 10/CD/10. as/IN/as we/PRP/we said/VBD/said the/DT/the execution/NN/execution starts/VBZ/starts by/IN/by looking/VBG/looking at/IN/at the/DT/the root/NN/root by/IN/by starting/NN/starting at/IN/at the/DT/the root/NNP/root. at/IN/at the/DT/the root/NN/root we/PRP/we compare/VBP/compare x/NN/x 1/CD/1 with/IN/with x/NN/x 2/CD/2. so/RB/so /,/, in/IN/in general/JJ/general if/IN/if the/DT/the label/NN/label is/VBZ/is i/PRP/i and/CC/and j/VB/j /,/, we/PRP/we compare/VBP/compare x/NN/x i/PRP/i with/IN/with x/NN/x j/NNP/j. so/RB/so /,/, when/WRB/when we/PRP/we compare/VBP/compare x/NN/x 1/CD/1 which/WDT/which is/VBZ/is 20/CD/20 /,/, with/IN/with x/NN/x 2/CD/2 which/WDT/which is/VBZ/is 30/CD/30 /,/, we/PRP/we discover/RB/discover that/IN/that x/NN/x 1/CD/1 is/VBZ/is smaller/NNP/smaller. so/RB/so /,/, if/IN/if it/PRP/it is/VBZ/is smaller/JJR/smaller /,/, then/RB/then we/PRP/we follow/VBP/follow this/DT/this branch/NNP/branch. so/RB/so /,/, we/PRP/we follow/VBP/follow this/DT/this branch/NN/branch and/CC/and we/PRP/we arrive/VBP/arrive at/IN/at this/DT/this node/NNP/node. and/CC/and when/WRB/when we/PRP/we arrive/VBP/arrive at/IN/at this/DT/this node/NN/node /,/, we/PRP/we have/VBP/have to/TO/to act/VB/act according/VBG/according to/TO/to the/DT/the instruction/NN/instruction /,/, represented/VBD/represented by/IN/by this/DT/this node/NN/node /,/, which/WDT/which is/VBZ/is to/TO/to compare/VB/compare x/NN/x 2/CD/2 and/CC/and x/NN/x 3/CD/3 /,/, x/NN/x 2/CD/2 is/VBZ/is 30/CD/30 /,/, x/NN/x 3/LS/3 is/VBZ/is 10/CD/10. so/RB/so /,/, therefore/IN/therefore /,/, we/PRP/we find/VBP/find that/IN/that x/NN/x 2/CD/2 is/VBZ/is bigger/JJR/bigger than/IN/than x/NN/x 3/CD/3. and/CC/and therefore/RB/therefore /,/, we/PRP/we follow/VBP/follow this/DT/this branch/NNP/branch. then/RB/then /,/, we/PRP/we perform/VBP/perform the/DT/the instruction/NN/instruction represented/VBD/represented by/IN/by this/DT/this node/NN/node /,/, which/WDT/which requires/VBZ/requires to/TO/to compare/VB/compare x/NN/x 1/CD/1 and/CC/and x/NN/x 3/CD/3. so/RB/so /,/, x/NN/x 1/CD/1 is/VBZ/is 20/CD/20 /,/, x/NN/x 3/LS/3 is/VBZ/is 10/CD/10 /,/, x/NN/x 1/CD/1 is/VBZ/is bigger/NNP/bigger. so/RB/so /,/, we/PRP/we arrive/VBP/arrive at/IN/at this/DT/this node/NN/node and/CC/and at/IN/at this/DT/this node/NN/node /,/, we/PRP/we just/RB/just output/NNP/output. so/RB/so /,/, we/PRP/we output/VBD/output 3/CD/3 /,/, 1/CD/1 /,/, 2/CD/2 which/WDT/which is/VBZ/is representing/VBG/representing our/PRP$/our conclusion/NN/conclusion /,/, that/IN/that x/NN/x 3/CD/3 is/VBZ/is the/DT/the smallest/JJS/smallest /,/, x/NN/x 1/CD/1 is/VBZ/is the/DT/the next/JJ/next smallest/NNP/smallest. x/NN/x 2/CD/2 is/VBZ/is the/DT/the largest/JJS/largest and/CC/and indeed/RB/indeed you/PRP/you will/MD/will see/VB/see /,/, that/IN/that x/NN/x 3/CD/3 is/VBZ/is 10/CD/10 which/WDT/which is/VBZ/is the/DT/the smallest/JJS/smallest of/IN/of 10/CD/10 /,/, 20/CD/20 /,/, 30/CD/30. x/NN/x 1/CD/1 is/VBZ/is the/DT/the next/JJ/next largest/JJS/largest and/CC/and x/NN/x 2/CD/2 is/VBZ/is the/DT/the largest/NNP/largest. so/RB/so /,/, at/IN/at least/JJS/least for/IN/for this/DT/this instance/NN/instance /,/, we/PRP/we have/VBP/have checked/VBN/checked that/IN/that this/DT/this decision/NN/decision tree/NN/tree /,/, which/WDT/which represents/VBZ/represents a/DT/a sorting/NN/sorting program/NN/program has/VBZ/has in/IN/in fact/NN/fact /,/, correctly/RB/correctly sorted/VBN/sorted this/DT/this input/NN/input instance/NNP/instance. notice/NN/notice that/WDT/that if/IN/if i/PRP/i increase/VBP/increase the/DT/the size/NN/size of/IN/of my/PRP$/my input/NN/input /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 16/CD/16 /:/: 44/CD/44 /CD/) /CD/) i/PRP/i will/MD/will have/VB/have a/DT/a different/JJ/different program/NNP/program. i/PRP/i will/MD/will have/VB/have to/TO/to have/VB/have a/DT/a different/JJ/different program/NNP/program. this/DT/this is/VBZ/is unlike/IN/unlike what/WP/what we/PRP/we usually/RB/usually do/VBP/do in/IN/in a/DT/a ram/NN/ram model/NNP/model. but/CC/but /,/, that/IN/that is/VBZ/is we/PRP/we are/VBP/are going/VBG/going to/TO/to allow/VB/allow that/IN/that in/IN/in this/DT/this model/NN/model /,/, to/TO/to complete/VB/complete the/DT/the discussion/NN/discussion of/IN/of the/DT/the model/NN/model /,/, let/VB/let me/PRP/me just/RB/just mention/NN/mention that/IN/that the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the program/NN/program is/VBZ/is simply/RB/simply the/DT/the number/NN/number of/IN/of comparisons/NNS/comparisons performed/VBN/performed for/IN/for each/DT/each instance/NNP/instance. the/DT/the worst/JJS/worst case/NN/case time/NN/time is/VBZ/is equal/JJ/equal to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path /,/, in/IN/in the/DT/the program/NN/program tree/NNP/tree. because/IN/because /,/, if/IN/if in/IN/in any/DT/any execution/NN/execution you/PRP/you follow/VBP/follow that/IN/that path/NN/path /,/, that/IN/that is/VBZ/is the/DT/the time/NN/time you/PRP/you will/MD/will end/VB/end up/RP/up setting/NNP/setting. likewise/NN/likewise /,/, we/PRP/we can/MD/can also/RB/also define/VB/define average/JJ/average case/NN/case time/NNP/time. so/RB/so /,/, here/RB/here the/DT/the input/NN/input instances/NNS/instances will/MD/will be/VB/be chosen/VBN/chosen randomly/RB/randomly with/IN/with equal/JJ/equal probability/NN/probability /,/, from/IN/from all/DT/all possible/JJ/possible input/NN/input instances/NNP/instances. or/CC/or we/PRP/we are/VBP/are just/RB/just asking/VBG/asking for/IN/for an/DT/an average/JJ/average time/NN/time over/IN/over all/DT/all possible/JJ/possible input/NN/input instances/NNP/instances. and/CC/and therefore/RB/therefore /,/, we/PRP/we should/MD/should consider/VB/consider all/DT/all possible/JJ/possible root/NN/root to/TO/to leaf/VB/leaf paths/NNP/paths. and/CC/and it/PRP/it is/VBZ/is simply/RB/simply the/DT/the time/NN/time for/IN/for each/DT/each path/NN/path is/VBZ/is /,/, it/PRP/it is/VBZ/is length/NNP/length. and/CC/and so/RB/so the/DT/the average/JJ/average case/NN/case time/NN/time /,/, is/VBZ/is just/RB/just the/DT/the average/JJ/average root/NN/root to/TO/to the/DT/the leaf/NN/leaf path/NN/path length/NNP/length. so/RB/so /,/, notice/NN/notice that/IN/that /,/, the/DT/the time/NN/time taken/VBN/taken has/VBZ/has a/DT/a very/RB/very nice/JJ/nice graphical/JJ/graphical interpretation/NN/interpretation in/IN/in this/DT/this model/NNP/model. so/RB/so /,/, now/RB/now here/RB/here are/VBP/are the/DT/the main/JJ/main claims/NNS/claims /,/, that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to make/NNP/make. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 03/CD/03 /CD/) the/DT/the first/JJ/first claim/NN/claim is/VBZ/is that/IN/that sorting/VBG/sorting will/MD/will take/VB/take time/NN/time n/NN/n log/NN/log n/NN/n in/IN/in the/DT/the decision/NN/decision tree/NN/tree model/NNP/model. this/DT/this claim/NN/claim has/VBZ/has to/TO/to be/VB/be understood/VBN/understood properly/-NONE-/properly. this/DT/this claim/NN/claim says/VBZ/says /,/, that/IN/that no/DT/no matter/NN/matter what/WP/what algorithm/NN/algorithm you/PRP/you use/NNP/use. and/CC/and by/IN/by algorithm/NN/algorithm we/PRP/we mean/VBP/mean no/DT/no matter/NN/matter what/WP/what tree/NN/tree you/PRP/you use/NNP/use. because/IN/because /,/, that/IN/that is/VBZ/is the/DT/the space/NN/space of/IN/of all/DT/all possible/JJ/possible algorithms/NNS/algorithms /,/, no/DT/no matter/NN/matter what/WP/what we/PRP/we use/VBP/use that/IN/that time/NN/time taken/VBN/taken will/MD/will be/VB/be n/VBN/n log/NN/log n/NNP/n. the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path in/IN/in the/DT/the tree/NN/tree /,/, will/MD/will be/VB/be at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. so/RB/so notice/NN/notice that/IN/that /,/, this/DT/this is/VBZ/is already/RB/already a/DT/a non/NN/non trivial/NN/trivial bound/NN/bound /,/, because/IN/because a/DT/a trivial/JJ/trivial bound/NN/bound will/MD/will be/VB/be omega/NN/omega of/IN/of n/NNP/n. we/PRP/we will/MD/will prove/VB/prove this/DT/this in/IN/in a/DT/a minute/NN/minute /,/, but/CC/but i/PRP/i first/RB/first want/VBP/want to/TO/to relate/VB/relate all/DT/all this/DT/this to/TO/to a/DT/a ram/NN/ram model/NNP/model. because/IN/because /,/, ram/NN/ram is/VBZ/is after/IN/after all/DT/all what/WP/what we/PRP/we use/VBP/use every/DT/every day/NNP/day. so/RB/so /,/, a/DT/a definition/NN/definition first/RB/first /,/, ram/NN/ram sorting/VBG/sorting algorithm/NN/algorithm is/VBZ/is said/VBN/said to/TO/to be/VB/be comparison/NN/comparison based/VBN/based /,/, if/IN/if the/DT/the only/JJ/only operations/NNS/operations it/PRP/it performs/VBZ/performs on/IN/on keys/NNS/keys are/VBP/are comparisons/NNS/comparisons and/CC/and copying/NNP/copying. so/RB/so /,/, if/IN/if you/PRP/you go/VBP/go back/RB/back and/CC/and think/VBP/think about/IN/about the/DT/the sorting/NN/sorting algorithms/NNS/algorithms /,/, that/IN/that you/PRP/you have/VBP/have seen/NNP/seen. there/RB/there is/VBZ/is a/DT/a good/JJ/good chance/NN/chance that/IN/that most/JJS/most of/IN/of them/PRP/them are/VBP/are in/IN/in fact/NN/fact /,/, comparison/NN/comparison based/NNP/based. take/NN/take heap/NN/heap sort/NN/sort for/IN/for example/NN/example /,/, the/DT/the only/JJ/only operations/NNS/operations you/PRP/you do/VBP/do on/IN/on keys/NNS/keys /,/, are/VBP/are compare/JJ/compare to/TO/to keys/NNP/keys. and/CC/and maybe/VB/maybe you/PRP/you copy/VB/copy that/DT/that /,/, similarly/RB/similarly for/IN/for merge/NN/merge sort/NN/sort /,/, similarly/RB/similarly for/IN/for insertion/NN/insertion sort/NNP/sort. similarly/RB/similarly /,/, for/IN/for shell/NN/shell sort/NN/sort /,/, if/IN/if you/PRP/you have/VBP/have studied/VBN/studied that/NNP/that. so/RB/so /,/, in/IN/in fact/NN/fact /,/, most/JJS/most of/IN/of the/DT/the algorithms/NNS/algorithms /,/, that/IN/that you/PRP/you have/VBP/have studied/VBN/studied probably/RB/probably are/VBP/are comparison/NN/comparison based/VBN/based algorithms/NNP/algorithms. and/CC/and it/PRP/it turns/VBZ/turns out/RP/out /,/, that/IN/that they/PRP/they are/VBP/are actually/RB/actually quite/RB/quite nicely/RB/nicely connected/VBN/connected to/TO/to decision/NN/decision tree/NN/tree algorithms/NNP/algorithms. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the claim/NN/claim /,/, let/VB/let a/DT/a be/VB/be a/DT/a comparison/NN/comparison based/VBN/based ram/NN/ram sorting/NN/sorting algorithm/NNP/algorithm. then/RB/then /,/, there/EX/there exists/NNS/exists a/DT/a decision/NN/decision tree/NN/tree sorting/VBG/sorting algorithm/NN/algorithm c/NNP/c. that/IN/that performs/NNS/performs the/DT/the same/JJ/same key/NN/key comparisons/NNS/comparisons /,/, as/IN/as a/DT/a on/IN/on every/DT/every input/NN/input instance/NNP/instance. in/IN/in fact/NN/fact /,/, in/IN/in the/DT/the same/JJ/same sequence/NN/sequence /,/, this/DT/this means/VBZ/means that/IN/that the/DT/the time/NN/time on/IN/on this/DT/this decision/NN/decision tree/NN/tree model/NN/model /,/, is/VBZ/is intimately/RB/intimately related/VBN/related to/TO/to the/DT/the time/NN/time on/IN/on the/DT/the ram/NN/ram model/NN/model also/NNP/also. for/IN/for this/DT/this class/NN/class of/IN/of algorithms/NNP/algorithms. the/DT/the final/JJ/final claim/NN/claim says/VBZ/says /,/, every/DT/every comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithm/NN/algorithm on/IN/on the/DT/the ram/NN/ram /,/, must/MD/must take/VB/take time/NN/time n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is where/WRB/where we/PRP/we have/VBP/have finally/RB/finally /,/, come/VBP/come back/RB/back to/TO/to the/DT/the ram/NNP/ram. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a non/NN/non trivial/NN/trivial result/NNP/result. not/RB/not about/IN/about all/DT/all sorting/VBG/sorting algorithms/NNS/algorithms /,/, but/CC/but for/IN/for comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithms/NNP/algorithms. for/IN/for comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithms/NNS/algorithms /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that the/DT/the time/NN/time taken/VBN/taken must/MD/must be/VB/be at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. well/RB/well /,/, we/PRP/we have/VBP/have claimed/VBN/claimed and/CC/and we/PRP/we will/MD/will have/VB/have proved/VBN/proved this/DT/this in/IN/in a/DT/a minute/NNP/minute. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try proving/VBG/proving this/DT/this first/JJ/first this/NNP/this. this/DT/this in/IN/in fact/NN/fact /,/, turns/VBZ/turns out/RP/out to/TO/to be/VB/be the/DT/the main/JJ/main /,/, the/DT/the crux/NN/crux of/IN/of the/DT/the matter/NNP/matter. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to prove/VB/prove that/IN/that sorting/VBG/sorting takes/NNS/takes time/NN/time /,/, omega/NN/omega of/IN/of n/NN/n log/NN/log n/NN/n in/IN/in the/DT/the decision/NN/decision tree/NN/tree model/NNP/model. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 04/CD/04 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start with/IN/with a/DT/a certain/JJ/certain input/NN/input x/NNP/x. remember/NN/remember x/NN/x is/VBZ/is that/IN/that sequence/NN/sequence x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2 /,/, x/NN/x 3/CD/3. and/CC/and let/VB/let us/PRP/us suppose/VB/suppose /,/, we/PRP/we have/VBP/have a/DT/a sequence/NN/sequence x/NN/x which/WDT/which is/VBZ/is the/DT/the permutation/NN/permutation of/IN/of the/DT/the sequence/NN/sequence 1/CD/1 through/IN/through n/NNP/n. permutation/NN/permutation is/VBZ/is just/RB/just the/DT/the rearrangement/NN/rearrangement of/IN/of that/DT/that sequence/NNP/sequence. so/RB/so /,/, x/NN/x is/VBZ/is pi/NN/pi of/IN/of this/NNP/this. so/RB/so /,/, what/WDT/what can/MD/can we/PRP/we conclude/VBP/conclude from/IN/from that/DT/that /,/, well/RB/well then/RB/then 1/CD/1 to/TO/to n/VB/n must/MD/must be/VB/be pi/PRP/pi inverse/VB/inverse of/IN/of x/NNP/x. so/RB/so /,/, if/IN/if i/PRP/i apply/RB/apply the/DT/the inverse/NN/inverse permutation/NN/permutation on/IN/on both/DT/both sides/NNS/sides /,/, i/PRP/i will/MD/will get/VB/get pi/NN/pi inverse/NN/inverse over/IN/over here/RB/here /,/, and/CC/and 1/CD/1 to/TO/to n/VB/n over/IN/over here/NNP/here. so/RB/so /,/, notice/NN/notice that/IN/that when/WRB/when we/PRP/we do/VBP/do the/DT/the sorting/VBG/sorting /,/, we/PRP/we actually/RB/actually are/VBP/are supposed/VBN/supposed to/TO/to compute/VB/compute this/DT/this inverse/NN/inverse permutation/NNP/permutation. so/RB/so /,/, every/DT/every leaf/NN/leaf the/DT/the answer/NN/answer /,/, essentially/RB/essentially must/MD/must be/VB/be pi/PRP/pi inverse/VB/inverse 1/CD/1 /,/, must/MD/must be/VB/be pi/PRP/pi inverse/NNP/inverse. so/RB/so /,/, essentially/RB/essentially pi/VBP/pi inverse/NN/inverse must/MD/must appear/VB/appear as/IN/as a/DT/a label/NN/label of/IN/of at/IN/at least/JJS/least one/CD/one leaf/NN/leaf /,/, essentially/RB/essentially /,/, because/IN/because that/DT/that leaf/NN/leaf must/MD/must have/VB/have somehow/WRB/somehow identified/VBN/identified this/DT/this permutation/NNP/permutation. and/CC/and only/RB/only then/RB/then /,/, can/MD/can it/PRP/it name/VB/name how/WRB/how this/DT/this permutation/NN/permutation can/MD/can be/VB/be unscrambled/VBN/unscrambled to/TO/to get/VB/get 1/CD/1 to/TO/to n/NNP/n. so/RB/so /,/, pi/NN/pi inverse/NN/inverse must/MD/must appear/VB/appear as/IN/as a/DT/a label/NN/label of/IN/of at/IN/at least/JJS/least one/CD/one leaf/NNP/leaf. now/RB/now /,/, this/DT/this holds/NNS/holds good/VBD/good for/IN/for all/PDT/all possible/JJ/possible permutations/NNP/permutations. not/RB/not just/RB/just a/DT/a particular/JJ/particular pi/NN/pi /,/, how/WRB/how many/JJ/many permutations/NNS/permutations are/VBP/are there/RB/there /,/, well/RB/well there/RB/there are/VBP/are n/VBN/n factorial/JJ/factorial permutations/NNP/permutations. and/CC/and therefore/RB/therefore /,/, there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial leaves/NNP/leaves. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the key/JJ/key insight/NNP/insight. we/PRP/we have/VBP/have proved/VBN/proved that/IN/that this/DT/this tree/NN/tree /,/, the/DT/the algorithm/NN/algorithm tree/NN/tree must/MD/must have/VB/have at/IN/at least/JJS/least n/NN/n factorial/NN/factorial leaves/NNP/leaves. each/DT/each node/NN/node of/IN/of the/DT/the tree/NN/tree can/MD/can only/RB/only have/VB/have at/IN/at most/JJS/most 3/CD/3 outgoing/VBG/outgoing edges/NNP/edges. well/RB/well there/RB/there are/VBP/are so/RB/so many/JJ/many relational/JJ/relational operators/NNS/operators which/WDT/which we/PRP/we mentioned/NNP/mentioned. but/CC/but /,/, we/PRP/we can/MD/can not/RB/not use/VB/use them/PRP/them simultaneously/RB/simultaneously /,/, as/IN/as i/PRP/i mentioned/VBD/mentioned earlier/NNP/earlier. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 23/CD/23 /:/: 15/CD/15 /CD/) /CD/) we/PRP/we can/MD/can only/RB/only have/VB/have /,/, so/RB/so here/RB/here is/VBZ/is a/DT/a node/NNP/node. if/IN/if we/PRP/we have/VBP/have less/JJR/less than/IN/than here/RB/here /,/, then/RB/then we/PRP/we can/MD/can not/RB/not have/VB/have less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to over/IN/over here/NNP/here. we/PRP/we must/MD/must have/VB/have something/NN/something which/WDT/which is/VBZ/is disjoint/VBP/disjoint from/IN/from this/NNP/this. so/RB/so /,/, the/DT/the only/JJ/only possibilities/NNS/possibilities are/VBP/are we/PRP/we have/VBP/have greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to /,/, in/IN/in which/WDT/which we/PRP/we can/MD/can have/VB/have only/RB/only 2/CD/2 labels/NNP/labels. only/RB/only 2/CD/2 outgoing/VBG/outgoing edges/NNS/edges or/CC/or we/PRP/we could/MD/could have/VB/have 3/CD/3 outgoing/VBG/outgoing edges/NNS/edges less/JJR/less than/IN/than /,/, equal/JJ/equal to/TO/to and/CC/and greater/JJR/greater than/NNP/than. so/RB/so /,/, at/IN/at most/JJS/most 3/CD/3 outgoing/VBG/outgoing edges/NNS/edges are/VBP/are possible/NNP/possible. now/RB/now /,/, each/DT/each tree/NN/tree node/NN/node can/MD/can only/RB/only have/VB/have 3/CD/3 outgoing/VBG/outgoing /,/, if/IN/if it/PRP/it can/MD/can only/RB/only have/VB/have 3/CD/3 outgoing/VBG/outgoing edges/NNP/edges. then/RB/then /,/, the/DT/the height/NN/height must/MD/must be/VB/be log/VBN/log of/IN/of the/DT/the number/NN/number of/IN/of the/DT/the leaves/NNS/leaves to/TO/to the/DT/the base/NN/base 3/CD/3. the/DT/the height/NN/height of/IN/of a/DT/a ternary/JJ/ternary tree/NN/tree /,/, is/VBZ/is log/JJ/log of/IN/of the/DT/the number/NN/number of/IN/of leaves/NNS/leaves to/TO/to the/DT/the base/NN/base 3/CD/3 at/IN/at least/NNP/least. and/CC/and therefore/RB/therefore /,/, height/RB/height must/MD/must be/VB/be log/VBN/log of/IN/of n/NN/n factorial/JJ/factorial to/TO/to the/DT/the base/NN/base 3/CD/3 /,/, because/IN/because n/NN/n factorial/JJ/factorial is/VBZ/is the/DT/the lower/JJR/lower bound/NN/bound on/IN/on the/DT/the number/NN/number of/IN/of keys/NNS/keys number/NN/number of/IN/of leaves/NNS/leaves /,/, turns/VBZ/turns out/RP/out however/RB/however that/RB/that if/IN/if you/PRP/you are/VBP/are using/VBG/using only/RB/only permutations/NNS/permutations of/IN/of this/DT/this /,/, then/RB/then we/PRP/we will/MD/will never/RB/never pass/VB/pass through/IN/through this/DT/this equality/NN/equality edge/NNP/edge. so/RB/so /,/, which/WDT/which means/VBZ/means the/DT/the n/NN/n factorial/NN/factorial leaves/VBZ/leaves must/MD/must be/VB/be accessible/JJ/accessible only/RB/only passing/VBG/passing along/IN/along the/DT/the strict/NN/strict inequality/NN/inequality branches/NNP/branches. so/RB/so /,/, which/WDT/which is/VBZ/is as/RB/as good/JJ/good as/IN/as saying/VBG/saying that/IN/that /,/, if/IN/if our/PRP$/our input/NN/input is/VBZ/is permutation/NN/permutation of/IN/of 1/CD/1 to/TO/to n/NNP/n. then/RB/then /,/, we/PRP/we are/VBP/are only/RB/only considering/VBG/considering a/DT/a sub/NN/sub tree/NN/tree whose/WP$/whose degree/NN/degree is/VBZ/is at/IN/at most/JJS/most 2/CD/2. and/CC/and therefore/RB/therefore /,/, the/DT/the height/NN/height is/VBZ/is at/IN/at most/JJS/most log/JJ/log of/IN/of n/NN/n factorial/JJ/factorial to/TO/to the/DT/the base/NN/base 2/CD/2. but/CC/but /,/, log/NN/log of/IN/of n/NN/n factorial/JJ/factorial to/TO/to the/DT/the base/NN/base 2/CD/2 /,/, can/MD/can be/VB/be now/RB/now thought/VBN/thought as/IN/as to/TO/to expand/VB/expand out/RP/out the/DT/the product/NNP/product. you/PRP/you can/MD/can see/VB/see that/IN/that it/PRP/it is/VBZ/is this/DT/this and/CC/and this/DT/this is/VBZ/is actually/RB/actually easy/JJ/easy to/TO/to see/VB/see /,/, so/RB/so let/VB/let us/PRP/us do/VBP/do that/NNP/that. so/RB/so /,/, n/IN/n factorial/JJ/factorial is/VBZ/is n/VBN/n times/NNS/times n/VBP/n minus/NN/minus 1/CD/1 times/NNS/times n/VBP/n minus/NN/minus 2/CD/2 and/CC/and so/RB/so on/NNP/on. somewhere/RB/somewhere in/IN/in this/DT/this /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have n/NN/n upon/IN/upon 2/CD/2 and/CC/and then/RB/then /,/, there/EX/there are/VBP/are going/VBG/going to/TO/to be/VB/be some/DT/some more/RBR/more terms/NNS/terms over/IN/over here/NNP/here. but/CC/but /,/, all/DT/all these/DT/these numbers/NNS/numbers you/PRP/you can/MD/can see/VB/see /,/, are/VBP/are going/VBG/going to/TO/to be/VB/be at/IN/at least/JJS/least n/NN/n upon/IN/upon 2/CD/2. and/CC/and how/WRB/how many/JJ/many such/JJ/such numbers/NNS/numbers are/VBP/are there/NNP/there. well/RB/well /,/, there/EX/there are/VBP/are n/NN/n over/IN/over 2/CD/2 numbers/NNS/numbers each/DT/each of/IN/of which/WDT/which is/VBZ/is at/IN/at least/JJS/least n/NN/n over/IN/over 2/CD/2. so/RB/so /,/, therefore/IN/therefore /,/, n/NN/n factorial/JJ/factorial is/VBZ/is bigger/JJR/bigger than/IN/than n/NN/n over/IN/over 2/CD/2 to/TO/to the/DT/the power/NN/power n/NN/n over/IN/over 2/CD/2. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have now/RB/now is/VBZ/is log/JJ/log of/IN/of n/NN/n factorial/JJ/factorial to/TO/to the/DT/the base/NN/base 2/CD/2 /,/, is/VBZ/is at/IN/at least/JJS/least log/NN/log n/NN/n over/IN/over 2/CD/2 to/TO/to the/DT/the power/NN/power n/NN/n over/IN/over 2/CD/2. well/RB/well /,/, we/PRP/we can/MD/can simplify/VB/simplify this/NNP/this. and/CC/and we/PRP/we get/VBP/get n/VBN/n over/IN/over 2/CD/2 /,/, this/DT/this is/VBZ/is equal/JJ/equal to/TO/to n/VB/n over/IN/over 2/CD/2 log/NN/log of/IN/of n/NN/n over/IN/over 2/CD/2 and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is omega/NN/omega of/IN/of n/NN/n log/NN/log n/NN/n /:/( /:/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 04/CD/04 /CD/) /CD/) /./. so/RB/so /,/, what/WDT/what you/PRP/you have/VBP/have done/VBN/done /,/, so/RB/so far/RB/far is/VBZ/is that/IN/that we/PRP/we have/VBP/have proved/VBN/proved this/NNP/this. now/RB/now /,/, we/PRP/we want/VBP/want to/TO/to look/VB/look at/IN/at the/DT/the next/JJ/next claim/NNP/claim. the/DT/the next/JJ/next claim/NN/claim is/VBZ/is the/DT/the one/CD/one which/WDT/which relates/NNS/relates comparison/VBP/comparison based/VBN/based sorting/VBG/sorting algorithms/NNS/algorithms in/IN/in the/DT/the ram/NN/ram /,/, to/TO/to decision/NN/decision tree/NN/tree sorting/VBG/sorting algorithms/NNP/algorithms. so/RB/so /,/, the/DT/the claim/NN/claim says/VBZ/says that/IN/that let/NN/let a/DT/a be/NN/be a/DT/a comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithm/NNP/algorithm. then/RB/then /,/, there/EX/there exists/NNS/exists a/DT/a decision/NN/decision tree/NN/tree sorting/VBG/sorting algorithm/NN/algorithm c/NN/c /,/, that/IN/that performs/NNS/performs exactly/RB/exactly the/DT/the same/JJ/same key/NN/key comparisons/NNS/comparisons as/IN/as a/DT/a on/IN/on every/DT/every input/NN/input instance/NNP/instance. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove this/DT/this and/CC/and the/DT/the proof/NN/proof is/VBZ/is actually/RB/actually going/VBG/going to/TO/to be/VB/be constructive/NNP/constructive. so/RB/so /,/, what/WDT/what we/PRP/we will/MD/will do/VB/do is/VBZ/is /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that we/PRP/we have/VBP/have been/VBN/been given/VBN/given this/DT/this algorithm/NN/algorithm a/DT/a which/WDT/which is/VBZ/is a/DT/a comparison/NN/comparison based/VBN/based ram/NN/ram sorting/NN/sorting algorithm/NNP/algorithm. and/CC/and then/RB/then using/VBG/using that/IN/that we/PRP/we will/MD/will construct/VB/construct a/DT/a decision/NN/decision tree/NN/tree sorting/VBG/sorting algorithm/NN/algorithm c/NNP/c. and/CC/and we/PRP/we have/VBP/have to/TO/to make/VB/make sure/JJ/sure /,/, that/IN/that c/NN/c performs/NNS/performs exactly/RB/exactly the/DT/the same/JJ/same key/NN/key comparisons/NNS/comparisons as/IN/as a/DT/a does/VBZ/does on/IN/on every/DT/every input/NN/input instance/NN/instance /,/, and/CC/and also/RB/also in/IN/in the/DT/the same/JJ/same sequence/NNP/sequence. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 22/CD/22 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to construct/VB/construct c/NN/c from/IN/from ram/NN/ram algorithm/NN/algorithm a/NNP/a. so/RB/so /,/, let/VB/let me/PRP/me remind/VB/remind you/PRP/you what/WP/what c/NN/c looks/VBZ/looks like/NNP/like. so/RB/so /,/, c/NN/c is/VBZ/is going/VBG/going to/TO/to be/VB/be some/DT/some root/NN/root node/NN/node /:/( /:/( refer/NN/refer time/NN/time /:/: 27/CD/27 /:/: 37/CD/37 /CD/) /CD/) /,/, may/MD/may be/VB/be some/DT/some branches/NNS/branches may/MD/may be/VB/be nodes/NNS/nodes over/IN/over here/RB/here and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, if/IN/if i/PRP/i tell/VBP/tell you/PRP/you how/WRB/how these/DT/these things/NNS/things are/VBP/are going/VBG/going to/TO/to be/VB/be labeled/VBN/labeled /,/, then/RB/then i/PRP/i am/VBP/am done/NNP/done. so/RB/so /,/, let/VB/let me/PRP/me tell/VB/tell you/PRP/you the/DT/the edge/NN/edge labels/NNS/labels right/RB/right away/NNP/away. the/DT/the edge/NN/edge labels/NNS/labels are/VBP/are going/VBG/going to/TO/to be/VB/be less/JJR/less than/IN/than over/IN/over here/RB/here /,/, equal/JJ/equal to/TO/to over/IN/over here/RB/here greater/JJR/greater than/IN/than over/IN/over here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us keep/VB/keep it/PRP/it really/RB/really simple/JJ/simple and/CC/and similarly/RB/similarly subsequently/RB/subsequently /,/, but/CC/but i/PRP/i have/VBP/have to/TO/to tell/VB/tell you/PRP/you what/WP/what the/DT/the label/NN/label here/RB/here is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so /,/, the/DT/the question/NN/question is/VBZ/is how/WRB/how do/VBP/do i/PRP/i do/VBP/do that/IN/that /,/, so/RB/so it/PRP/it is/VBZ/is going/VBG/going to/TO/to some/DT/some i/PRP/i colon/VBP/colon j/NNP/j. but/CC/but /,/, i/PRP/i have/VBP/have to/TO/to figure/VB/figure out/RP/out what/WP/what i/PRP/i colon/VBP/colon j/NN/j /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/NNP/be. and/CC/and here/RB/here is/VBZ/is the/DT/the key/JJ/key insight/NN/insight in/IN/in figuring/NN/figuring this/DT/this out/NNP/out. the/DT/the main/JJ/main idea/NN/idea is/VBZ/is that/IN/that which/WDT/which keys/NNS/keys are/VBP/are compared/VBN/compared first/JJ/first by/IN/by a/DT/a /,/, is/VBZ/is our/PRP$/our ram/NN/ram algorithm/NNP/algorithm. does/VBZ/does not/RB/not depend/VB/depend upon/IN/upon the/DT/the key/JJ/key values/NNS/values /,/, why/WRB/why is/VBZ/is that/IN/that ?/./? well/RB/well /,/, a/DT/a is/VBZ/is going/VBG/going to/TO/to read/VB/read things/NNS/things and/CC/and then/RB/then /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to compare/NNP/compare. it/PRP/it is/VBZ/is not/RB/not going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the keys/NNS/keys and/CC/and base/NN/base it/PRP/it is/VBZ/is decision/NN/decision on/IN/on which/WDT/which keys/NNS/keys to/TO/to compare/VB/compare on/IN/on the/DT/the value/NN/value of/IN/of any/DT/any key/NNP/key. because/IN/because in/IN/in fact/NN/fact /,/, value/NN/value of/IN/of any/DT/any key/JJ/key /,/, does/VBZ/does not/RB/not really/RB/really come/VBN/come into/IN/into the/DT/the control/NN/control structure/NN/structure of/IN/of a/DT/a /,/, other/JJ/other than/IN/than in/IN/in the/DT/the comparisons/NNS/comparisons that/WDT/that a/DT/a does/NNP/does. so/RB/so /,/, if/IN/if a/DT/a does/VBZ/does a/DT/a comparison/NN/comparison /,/, that/IN/that is/VBZ/is the/DT/the only/JJ/only time/NN/time when/WRB/when a/DT/a can/NN/can actually/RB/actually peep/VB/peep inside/JJ/inside a/DT/a key/JJ/key value/NNP/value. so/RB/so /,/, clearly/RB/clearly the/DT/the first/JJ/first time/NN/time that/WDT/that a/DT/a peeps/VBZ/peeps inside/NN/inside a/DT/a key/JJ/key value/NN/value /,/, is/VBZ/is the/DT/the first/JJ/first time/NN/time a/DT/a does/VBZ/does a/DT/a comparison/NNP/comparison. and/CC/and in/IN/in fact/NN/fact /,/, that/IN/that which/WDT/which keys/NNS/keys it/PRP/it compares/VBZ/compares is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the same/JJ/same no/DT/no matter/NN/matter what/WP/what the/DT/the values/NNS/values of/IN/of keys/NNS/keys are/NNP/are. so/RB/so /,/, i/PRP/i j/VBP/j can/MD/can be/VB/be determined/VBN/determined by/IN/by examining/NN/examining the/DT/the algorithm/NN/algorithm a/NNP/a. we/PRP/we just/RB/just look/VBP/look at/IN/at the/DT/the code/NN/code of/IN/of a/NNP/a. and/CC/and will/MD/will know/VB/know which/WDT/which key/JJ/key is/VBZ/is going/VBG/going to/TO/to examine/VB/examine first/NNP/first. so/RB/so /,/, whatever/IN/whatever they/PRP/they are/VBP/are we/PRP/we can/MD/can write/VB/write that/IN/that now/RB/now over/IN/over here/RB/here /,/, i/PRP/i colon/VBP/colon j/NNP/j. we/PRP/we find/VBP/find actual/JJ/actual numbers/NNS/numbers i/PRP/i and/CC/and j/VB/j and/CC/and we/PRP/we put/VBD/put them/PRP/them down/IN/down over/IN/over here/NNP/here. so/RB/so /,/, i/PRP/i claim/VBP/claim now/RB/now that/IN/that whatever/NN/whatever numbers/NNS/numbers i/PRP/i and/CC/and j/VB/j be/VB/be put/VBN/put down/RP/down over/IN/over here/NNP/here. they/PRP/they will/MD/will be/VB/be the/DT/the same/JJ/same /,/, no/DT/no matter/NN/matter what/WP/what the/DT/the values/NNS/values of/IN/of key/JJ/key are/VBP/are and/CC/and that/IN/that is/VBZ/is what/WP/what i/PRP/i just/RB/just explained/NNP/explained. so/RB/so /,/, next/JJ/next we/PRP/we want/VBP/want to/TO/to find/VB/find the/DT/the labels/NNS/labels of/IN/of say/NN/say this/DT/this node/NN/node over/IN/over here/RB/here /,/, to/TO/to do/VB/do that/DT/that here/RB/here is/VBZ/is what/WP/what we/PRP/we consider/NNP/consider. so/RB/so /,/, suppose/DT/suppose i/PRP/i is/VBZ/is an/DT/an instance/NN/instance /,/, in/IN/in which/WDT/which x/NN/x i/PRP/i is/VBZ/is less/JJR/less than/IN/than x/NN/x j/NNP/j. now/RB/now /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to examine/VB/examine the/DT/the program/NN/program of/IN/of a/DT/a to/TO/to determine/NN/determine /,/, which/WDT/which keys/NNS/keys are/VBP/are compared/VBN/compared in/IN/in the/DT/the second/JJ/second comparison/NN/comparison for/IN/for this/DT/this instance/NN/instance i/NNP/i. suppose/NN/suppose /,/, x/NN/x k/NN/k and/CC/and x/NN/x l/NN/l are/VBP/are compared/NNP/compared. so/RB/so /,/, those/DT/those values/NNS/values /,/, those/DT/those k/NN/k and/CC/and l/NN/l /,/, we/PRP/we will/MD/will put/VB/put down/RP/down over/IN/over here/NNP/here. so/RB/so /,/, now/RB/now what/WP/what is/VBZ/is the/DT/the idea/NN/idea ?/./? so/RB/so /,/, for/IN/for instance/NN/instance i/PRP/i what/WP/what will/MD/will happen/VB/happen /,/, the/DT/the first/JJ/first comparison/NN/comparison will/MD/will be/VB/be this/NNP/this. then/RB/then of/IN/of course/NN/course /,/, in/IN/in the/DT/the decision/NN/decision tree/NN/tree /,/, this/DT/this will/MD/will be/VB/be the/DT/the branch/NN/branch taken/VBN/taken and/CC/and the/DT/the second/JJ/second comparison/NN/comparison will/MD/will be/VB/be this/NNP/this. so/RB/so /,/, instance/NN/instance i/PRP/i /,/, in/IN/in fact/NN/fact in/IN/in instance/NN/instance i/PRP/i /,/, the/DT/the first/JJ/first two/CD/two comparisons/NNS/comparisons have/VBP/have been/VBN/been the/DT/the same/JJ/same in/IN/in the/DT/the decision/NN/decision tree/NNP/tree. as/IN/as they/PRP/they have/VBP/have been/VBN/been in/IN/in our/PRP$/our algorithm/NN/algorithm a/DT/a /,/, so/RB/so far/RB/far so/RB/so good/NNP/good. so/IN/so far/RB/far we/PRP/we have/VBP/have built/VBN/built this/DT/this part/NN/part of/IN/of our/PRP$/our tree/NNP/tree. and/CC/and indeed/RB/indeed in/IN/in this/DT/this tree/NN/tree the/DT/the decision/NN/decision /,/, the/DT/the comparisons/NNS/comparisons made/VBN/made on/IN/on this/DT/this instance/NN/instance /,/, are/VBP/are the/DT/the same/JJ/same as/IN/as comparisons/NNS/comparisons made/VBN/made on/IN/on the/DT/the instance/NN/instance /,/, in/IN/in our/PRP$/our ram/NN/ram model/NN/model also/NNP/also. but/CC/but /,/, let/VB/let us/PRP/us consider/JJR/consider another/DT/another instance/NN/instance i/PRP/i prime/VBP/prime /,/, what/WP/what will/MD/will happen/VB/happen in/IN/in that/NNP/that. so/RB/so /,/, if/IN/if we/PRP/we consider/VBP/consider another/DT/another instance/NN/instance /,/, i/PRP/i prime/NNP/prime. in/IN/in which/WDT/which x/NN/x i/PRP/i is/VBZ/is less/JJR/less than/IN/than x/NN/x j/NN/j what/WP/what will/MD/will happen/VB/happen /,/, which/WDT/which keys/NNS/keys will/MD/will be/VB/be compared/VBN/compared next/NNP/next. i/PRP/i claim/VBP/claim that/IN/that even/RB/even in/IN/in that/DT/that case/NN/case /,/, the/DT/the keys/NNS/keys to/TO/to be/VB/be compared/VBN/compared will/MD/will be/VB/be just/RB/just be/VB/be these/DT/these x/NN/x k/NN/k and/CC/and x/NN/x l/NN/l /,/, why/WRB/why is/VBZ/is that/IN/that ?/./? so/RB/so /,/, let/VB/let us/PRP/us examine/VB/examine this/DT/this /,/, /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 32/CD/32 /:/: 06/CD/06 /CD/) /CD/) so/RB/so here/RB/here is/VBZ/is an/DT/an execution/NN/execution of/IN/of i/PRP/i and/CC/and here/RB/here is/VBZ/is an/DT/an execution/NN/execution of/IN/of i/PRP/i prime/NNP/prime. so/RB/so /,/, somewhere/EX/somewhere we/PRP/we start/VBP/start execution/NNP/execution. so/RB/so /,/, we/PRP/we compare/VBP/compare x/NN/x i/PRP/i versus/VBZ/versus x/NNP/x. and/CC/and we/PRP/we know/VBP/know that/IN/that the/DT/the first/JJ/first comparison/NN/comparison is/VBZ/is the/DT/the same/JJ/same in/IN/in both/DT/both and/CC/and so/RB/so we/PRP/we compare/VBP/compare x/NN/x i/PRP/i versus/VBZ/versus x/NN/x j/NNP/j. then/RB/then /,/, we/PRP/we do/VBP/do some/DT/some instruction/NN/instruction over/IN/over here/RB/here and/CC/and we/PRP/we compare/VBP/compare x/NN/x k/NN/k versus/VBZ/versus x/NN/x l/NNP/l. so/RB/so /,/, when/WRB/when we/PRP/we do/VBP/do this/DT/this comparisons/NNS/comparisons /,/, the/DT/the question/NN/question is/VBZ/is what/WP/what will/MD/will happen/VB/happen over/IN/over here/NNP/here. i/PRP/i claim/VBP/claim that/IN/that if/IN/if in/IN/in these/DT/these instructions/NNS/instructions /,/, no/DT/no key/JJ/key is/VBZ/is even/RB/even touched/NNP/touched. then/RB/then /,/, exactly/RB/exactly the/DT/the same/JJ/same instructions/NNS/instructions will/MD/will be/VB/be executed/VBN/executed over/RP/over here/NNP/here. why/WRB/why is/VBZ/is that/IN/that /,/, well/RB/well the/DT/the control/NN/control flow/NN/flow can/MD/can change/VB/change /,/, only/RB/only if/IN/if there/EX/there is/VBZ/is a/DT/a comparison/NN/comparison /,/, and/CC/and if/IN/if the/DT/the comparison/NN/comparison has/VBZ/has a/DT/a different/JJ/different result/NNP/result. so/RB/so /,/, in/IN/in this/DT/this entire/JJ/entire part/NN/part /,/, there/EX/there has/VBZ/has been/VBN/been a/DT/a comparison/NN/comparison with/IN/with keys/NNS/keys /,/, but/CC/but the/DT/the result/NN/result over/IN/over here/RB/here is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the result/NN/result over/IN/over here/NNP/here. because/IN/because /,/, in/IN/in both/DT/both cases/NNS/cases we/PRP/we said/VBD/said that/IN/that x/NN/x i/PRP/i is/VBZ/is less/JJR/less than/IN/than x/NN/x j/NNP/j. so/RB/so /,/, during/IN/during this/DT/this entire/JJ/entire portion/NN/portion and/CC/and this/DT/this entire/JJ/entire portion/NN/portion /,/, wherever/RB/wherever there/EX/there have/VBP/have been/VBN/been comparisons/NNP/comparisons. the/DT/the comparison/NN/comparison outcomes/VBZ/outcomes have/VB/have matched/NNP/matched. and/CC/and therefore/RB/therefore /,/, the/DT/the instruction/NN/instruction which/WDT/which is/VBZ/is going/VBG/going to/TO/to be/VB/be executed/VBN/executed over/RP/over here/RB/here /,/, is/VBZ/is going/VBG/going to/TO/to be/VB/be exactly/RB/exactly the/DT/the same/NNP/same. and/CC/and therefore/RB/therefore /,/, we/PRP/we will/MD/will also/RB/also compare/VB/compare x/NN/x k/NN/k and/CC/and x/NN/x l/NN/l over/IN/over here/NNP/here. so/RB/so /,/, which/WDT/which means/VBZ/means even/RB/even for/IN/for this/DT/this instance/NN/instance i/PRP/i /,/, i/PRP/i prime/VBP/prime k/NN/k and/CC/and l/NN/l /,/, x/NN/x k/NN/k and/CC/and x/NN/x l/NN/l will/MD/will be/VB/be compared/NNP/compared. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can put/VB/put down/RP/down this/DT/this label/NN/label of/IN/of the/DT/the node/NN/node as/IN/as k/NN/k compared/VBN/compared to/TO/to l/NNP/l. now/RB/now /,/, we/PRP/we can/MD/can generalize/VB/generalize this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 33/CD/33 /:/: 46/CD/46 /CD/) so/RB/so /,/, the/DT/the general/JJ/general pattern/NN/pattern is/VBZ/is /,/, we/PRP/we have/VBP/have constructed/VBN/constructed some/DT/some super/NN/super tree/NN/tree of/IN/of c/NN/c /,/, how/WRB/how do/VBP/do extend/NN/extend it/NNP/it. so/RB/so /,/, we/PRP/we have/VBP/have constructed/VBN/constructed something/NN/something like/IN/like this/DT/this /,/, and/CC/and so/RB/so in/IN/in general/JJ/general we/PRP/we might/MD/might have/VB/have had/VBN/had constructed/VBN/constructed some/DT/some path/NNP/path. and/CC/and then/RB/then /,/, we/PRP/we want/VBP/want to/TO/to extend/VB/extend this/DT/this path/NN/path outwards/NNS/outwards /,/, how/WRB/how do/VBP/do we/PRP/we do/VBP/do that/NNP/that. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the observation/NN/observation /,/, the/DT/the label/NN/label of/IN/of a/DT/a node/NN/node can/MD/can be/VB/be determined/VBN/determined by/IN/by considering/NN/considering an/DT/an instance/NN/instance /,/, consistent/NN/consistent with/IN/with the/DT/the labels/NNS/labels on/IN/on the/DT/the path/NN/path till/IN/till the/DT/the node/NNP/node. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to determine/VB/determine the/DT/the label/NN/label of/IN/of this/DT/this node/NN/node /,/, how/WRB/how do/VBP/do i/PRP/i do/VBP/do it/NNP/it. well/RB/well /,/, i/PRP/i look/VBP/look at/IN/at instances/NNS/instances on/IN/on the/DT/the path/NN/path from/IN/from the/DT/the root/NN/root /,/, i/PRP/i look/VBP/look at/IN/at the/DT/the labels/NNS/labels on/IN/on the/DT/the path/NN/path from/IN/from the/DT/the root/NN/root to/TO/to this/DT/this node/NNP/node. and/CC/and i/PRP/i construct/VBP/construct a/DT/a instance/NN/instance /,/, which/WDT/which is/VBZ/is consistent/JJ/consistent with/IN/with these/DT/these labels/NNP/labels. so/RB/so /,/, which/WDT/which means/VBZ/means that/DT/that x/NN/x i/PRP/i must/MD/must be/VB/be equal/JJ/equal to/TO/to x/VB/x j/NNP/j. and/CC/and then/RB/then /,/, what/WDT/what ever/RB/ever the/DT/the label/NN/label is/VBZ/is over/IN/over here/RB/here the/DT/the corresponding/NN/corresponding keys/NNS/keys here/RB/here must/MD/must satisfy/VB/satisfy this/DT/this label/NN/label and/CC/and so/RB/so on/NNP/on. and/CC/and then/RB/then /,/, we/PRP/we simply/RB/simply look/VBP/look at/IN/at the/DT/the algorithm/NN/algorithm for/IN/for a/NNP/a. and/CC/and ask/VB/ask what/WP/what is/VBZ/is the/DT/the next/JJ/next comparison/NN/comparison /,/, that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be made/NNP/made. and/CC/and we/PRP/we put/VBD/put down/RP/down those/DT/those labels/NNS/labels over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we have/VBP/have constructed/VBN/constructed an/DT/an instance/NN/instance /,/, which/WDT/which is/VBZ/is consistent/JJ/consistent with/IN/with the/DT/the labels/NNS/labels along/IN/along this/DT/this path/NNP/path. and/CC/and we/PRP/we look/VBP/look at/IN/at the/DT/the algorithm/NN/algorithm and/CC/and decide/VB/decide /,/, what/WDT/what is/VBZ/is the/DT/the comparison/NN/comparison that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be done/VBN/done by/IN/by the/DT/the algorithm/NN/algorithm in/IN/in that/DT/that instance/NNP/instance. so/RB/so /,/, if/IN/if the/DT/the comparison/NN/comparison is/VBZ/is between/IN/between some/DT/some x/NN/x p/NN/p and/CC/and x/NN/x q/NNP/q. we/PRP/we put/VBD/put down/RP/down p/NN/p colon/NN/colon q/NN/q over/IN/over here/RB/here /:/( /:/( refer/NN/refer time/NN/time /:/: 35/CD/35 /:/: 21/CD/21 /CD/) /CD/) /./. so/RB/so /,/, exactly/RB/exactly like/IN/like what/WP/what we/PRP/we did/VBD/did in/IN/in this/DT/this case/NN/case /,/, but/CC/but just/RB/just more/RBR/more general/NNP/general. so/RB/so in/IN/in fact/NN/fact /,/, in/IN/in all/DT/all such/JJ/such instances/NNS/instances /,/, which/WDT/which are/VBP/are consistent/JJ/consistent with/IN/with the/DT/the labels/NNS/labels along/IN/along this/NNP/this. you/PRP/you can/MD/can argue/VB/argue exactly/RB/exactly in/IN/in the/DT/the same/JJ/same way/NN/way /,/, that/IN/that x/NN/x p/NN/p will/MD/will get/VB/get compared/VBN/compared with/IN/with x/NN/x q/NNP/q. and/CC/and that/IN/that will/MD/will fix/VB/fix the/DT/the label/NN/label of/IN/of this/NNP/this. if/IN/if it/PRP/it turns/VBZ/turns /,/, that/IN/that the/DT/the information/NN/information which/WDT/which has/VBZ/has been/VBN/been gleaned/VBN/gleaned along/IN/along this/DT/this path/NN/path /,/, is/VBZ/is enough/RB/enough to/TO/to determine/VB/determine the/DT/the final/JJ/final sorted/VBN/sorted order/NNP/order. and/CC/and because/IN/because of/IN/of which/WDT/which the/DT/the algorithm/NN/algorithm does/VBZ/does not/RB/not do/VB/do any/DT/any comparisons/NNS/comparisons at/IN/at all/NNP/all. then/RB/then /,/, well/RB/well we/PRP/we simply/RB/simply take/VBP/take that/IN/that sorted/VBN/sorted order/NNP/order. and/CC/and put/VBD/put back/RP/back the/DT/the label/NN/label and/CC/and name/NN/name and/CC/and make/VB/make that/IN/that leaf/NNP/leaf. now/RB/now /,/, the/DT/the important/JJ/important point/NN/point is/VBZ/is /,/, that/IN/that we/PRP/we have/VBP/have constructed/VBN/constructed our/PRP$/our decision/NN/decision tree/NN/tree algorithm/NN/algorithm in/IN/in this/DT/this manner/NNP/manner. and/CC/and by/IN/by construction/NN/construction /,/, because/IN/because of/IN/of the/DT/the care/NN/care that/IN/that we/PRP/we took/VBD/took in/IN/in the/DT/the construction/NNP/construction. you/PRP/you can/MD/can see/VB/see that/IN/that c/NN/c performs/NNS/performs /,/, exactly/RB/exactly the/DT/the same/JJ/same key/NN/key comparisons/NNS/comparisons as/IN/as a/DT/a does/NNP/does. and/CC/and exactly/RB/exactly the/DT/the same/JJ/same sequence/NN/sequence on/IN/on every/DT/every instance/NNP/instance. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 31/CD/31 /CD/) /CD/) so/RB/so /,/, this/DT/this finishes/NNS/finishes this/DT/this claim/NNP/claim. so/RB/so /,/, now/RB/now i/PRP/i want/VBP/want to/TO/to argue/VB/argue that/IN/that every/DT/every comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithm/NN/algorithm on/IN/on the/DT/the ram/NN/ram /,/, must/MD/must take/VB/take time/NN/time n/NN/n log/NN/log n/NNP/n. but/CC/but /,/, this/DT/this is/VBZ/is actually/RB/actually fairly/RB/fairly straight/JJ/straight forward/NNP/forward. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 41/CD/41 /CD/) so/RB/so /,/, suppose/DT/suppose some/DT/some comparison/NN/comparison based/VBN/based ram/NN/ram algorithm/NN/algorithm /,/, takes/VBZ/takes time/NN/time t/NN/t of/IN/of n/NN/n /,/, what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about comparison/NN/comparison based/VBN/based ram/NN/ram algorithms/NNS/algorithms /,/, by/IN/by the/DT/the claim/NN/claim that/IN/that we/PRP/we just/RB/just proved/NNP/proved. we/PRP/we know/VBP/know that/IN/that there/EX/there must/MD/must exist/VB/exist a/DT/a decision/NN/decision tree/NN/tree algorithm/NN/algorithm /,/, taking/VBG/taking time/NN/time at/IN/at most/JJS/most t/JJ/t of/IN/of n/NNP/n. but/CC/but /,/, the/DT/the first/JJ/first claim/NN/claim tells/NNS/tells us/PRP/us something/VBG/something about/IN/about decision/NN/decision tree/NN/tree algorithm/NNP/algorithm. the/DT/the first/JJ/first claim/NN/claim says/VBZ/says that/IN/that the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the decision/NN/decision tree/NN/tree algorithms/NNS/algorithms /,/, must/MD/must be/VB/be at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, t/NN/t of/IN/of n/NN/n had/VBD/had better/RBR/better be/VB/be at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n /,/, but/CC/but then/RB/then this/DT/this t/NN/t is/VBZ/is the/DT/the same/JJ/same as/IN/as this/DT/this t/NNP/t. and/CC/and therefore/RB/therefore /,/, comparison/NN/comparison based/VBN/based ram/NN/ram algorithms/NNS/algorithms must/MD/must also/RB/also take/VB/take time/NN/time n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved this/DT/this claim/NN/claim /:/( /:/( refer/NN/refer time/NN/time /:/: 37/CD/37 /:/: 29/CD/29 /CD/) /CD/) /./. so/RB/so /,/, notice/NN/notice that/IN/that in/IN/in a/DT/a single/JJ/single claim/NN/claim /,/, we/PRP/we have/VBP/have proved/VBN/proved a/DT/a lower/JJR/lower bound/NN/bound on/IN/on a/DT/a variety/NN/variety of/IN/of sorting/NN/sorting algorithms/NNS/algorithms /,/, heap/NN/heap sort/NN/sort /,/, merge/NN/merge sort/NN/sort /,/, shell/NN/shell sort/NN/sort /,/, insertion/NN/insertion sort/NN/sort /,/, and/CC/and many/JJ/many other/JJ/other algorithms/NNS/algorithms /,/, which/WDT/which we/PRP/we have/VBP/have not/RB/not even/RB/even though/IN/though about/NNP/about. but/CC/but /,/, which/WDT/which only/RB/only if/IN/if they/PRP/they are/VBP/are comparison/RB/comparison based/VBN/based /,/, then/RB/then this/DT/this lower/JJR/lower bound/NN/bound will/MD/will apply/VB/apply to/TO/to them/NNP/them. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 57/CD/57 /CD/) next/JJ/next we/PRP/we turn/VBP/turn to/TO/to average/JJ/average case/NN/case complexity/NNP/complexity. so/RB/so /,/, basically/RB/basically we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask the/DT/the question/NN/question /,/, what/WP/what is/VBZ/is the/DT/the average/JJ/average case/NN/case /,/, can/MD/can we/PRP/we put/VB/put a/DT/a lower/JJR/lower bound/NN/bound on/IN/on the/DT/the average/NN/average case/NN/case complexity/NNP/complexity. so/RB/so /,/, on/IN/on the/DT/the average/NN/average time/NN/time to/TO/to sort/VB/sort /,/, not/RB/not just/RB/just the/DT/the worst/JJS/worst case/NN/case time/NNP/time. so/RB/so /,/, this/DT/this actually/RB/actually first/RB/first follows/VBZ/follows fairly/RB/fairly easily/RB/easily /,/, just/RB/just based/VBN/based on/IN/on structures/NNS/structures /,/, on/IN/on some/DT/some properties/NNS/properties of/IN/of trees/NNP/trees. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the first/JJ/first claim/NN/claim /,/, if/IN/if a/DT/a tree/NN/tree has/VBZ/has k/NN/k keys/NNS/keys /,/, then/RB/then there/EX/there exist/NN/exist at/IN/at least/JJS/least k/NN/k over/IN/over 2/CD/2 keys/NNS/keys at/IN/at a/DT/a distance/NN/distance log/NN/log k/NN/k over/IN/over 2/CD/2. why/WRB/why /,/, well/RB/well there/RB/there can/MD/can be/VB/be at/IN/at most/JJS/most square/JJ/square root/NN/root k/NN/k leaves/VBZ/leaves at/IN/at a/DT/a distance/NN/distance /,/, just/RB/just like/IN/like worst/JJ/worst case/NNP/case. we/PRP/we can/MD/can use/VB/use similar/JJ/similar arguments/NNS/arguments /,/, to/TO/to prove/VB/prove bounds/NNS/bounds on/IN/on the/DT/the average/NN/average case/NN/case complexity/NN/complexity of/IN/of sorting/VBG/sorting as/IN/as well/RB/well /,/, on/IN/on the/DT/the decision/NN/decision tree/NN/tree model/NN/model of/IN/of course/NNP/course. and/CC/and of/IN/of course/NN/course /,/, that/IN/that will/MD/will imply/RB/imply some/DT/some lower/JJR/lower bounds/NNS/bounds /,/, on/IN/on comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithms/NNP/algorithms. as/IN/as far/RB/far as/IN/as the/DT/the average/NN/average case/NN/case complexity/NN/complexity is/VBZ/is concerned/NNP/concerned. and/CC/and these/DT/these bounds/NNS/bounds follow/VBP/follow very/RB/very simply/RB/simply from/IN/from some/DT/some properties/NNS/properties of/IN/of trees/NNS/trees /,/, with/IN/with respect/NN/respect to/TO/to the/DT/the relation/NN/relation between/IN/between the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree and/CC/and the/DT/the number/NN/number of/IN/of leaves/NNP/leaves. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the first/JJ/first claim/NN/claim /,/, if/IN/if a/DT/a tree/NN/tree has/VBZ/has k/NN/k leaves/NNS/leaves /,/, then/RB/then there/EX/there exist/NN/exist at/IN/at least/JJS/least k/NN/k by/IN/by 2/CD/2 leaves/NNS/leaves at/IN/at a/DT/a distance/NNP/distance. at/IN/at least/JJS/least log/NN/log k/NN/k by/IN/by 2/CD/2 from/IN/from the/DT/the root/NNP/root. well/RB/well /,/, here/RB/here is/VBZ/is the/DT/the proof/NN/proof /,/, there/EX/there can/MD/can be/VB/be at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the /NN/( /:/( refer/NN/refer time/NN/time /:/: 39/CD/39 /:/: 45/CD/45 /CD/) /CD/) l/NN/l leaves/NNS/leaves at/IN/at a/DT/a distance/NN/distance l/NN/l /,/, which/WDT/which means/VBZ/means there/RB/there can/MD/can be/VB/be at/IN/at most/JJS/most 2/CD/2 to/TO/to the/DT/the power/NN/power log/NN/log k/NN/k /,/, whole/JJ/whole thing/NN/thing upon/IN/upon 2/CD/2. leaves/NNS/leaves a/DT/a distance/NN/distance l/NN/l and/CC/and this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but k/NN/k to/TO/to the/DT/the half/NN/half /,/, square/JJ/square root/NN/root of/IN/of k/NNP/k. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what is/VBZ/is claimed/VBN/claimed over/IN/over here/NNP/here. the/DT/the rest/NN/rest of/IN/of the/DT/the leaves/NNS/leaves have/VBP/have to/TO/to be/VB/be at/IN/at larger/JJR/larger distance/NNP/distance. and/CC/and in/IN/in fact/NN/fact /,/, this/DT/this says/VBZ/says that/IN/that as/IN/as many/JJ/many as/IN/as k/NN/k minus/NN/minus square/NN/square root/NN/root k/NN/k /,/, have/VBP/have to/TO/to be/VB/be at/IN/at a/DT/a larger/JJR/larger distance/NN/distance /,/, whereas/VBZ/whereas what/WP/what is/VBZ/is claimed/VBN/claimed over/IN/over here/RB/here is/VBZ/is just/RB/just k/NN/k by/IN/by 2/CD/2. so/RB/so /,/, the/DT/the claim/NN/claim is/VBZ/is very/RB/very easily/RB/easily proved/NNP/proved. in/IN/in fact/NN/fact /,/, we/PRP/we can/MD/can prove/VB/prove something/NN/something stronger/NNP/stronger. but/CC/but /,/, once/RB/once we/PRP/we have/VBP/have that/IN/that /,/, we/PRP/we can/MD/can prove/VB/prove the/DT/the following/VBG/following /,/, we/PRP/we can/MD/can prove/VB/prove that/IN/that the/DT/the average/NN/average path/NN/path length/NNP/length. average/NN/average is/VBZ/is taken/VBN/taken over/RP/over all/DT/all leaves/NNS/leaves /,/, is/VBZ/is at/IN/at least/JJS/least log/NN/log k/NN/k upon/IN/upon 4/CD/4 /,/, why/WRB/why is/VBZ/is that/IN/that ?/./? let/NN/let us/PRP/us count/VBP/count what/WP/what the/DT/the total/JJ/total path/NN/path length/NN/length is/NNP/is. the/DT/the total/JJ/total path/NN/path length/NN/length /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to calculate/VB/calculate first/RB/first for/IN/for these/DT/these leaves/NNS/leaves which/WDT/which we/PRP/we talked/VBD/talked about/NNP/about. so/RB/so /,/, there/EX/there are/VBP/are k/NN/k over/IN/over 2/CD/2 of/IN/of them/NNP/them. and/CC/and each/DT/each has/VBZ/has a/DT/a path/NN/path of/IN/of length/NN/length log/NN/log k/NN/k upon/IN/upon 2/CD/2. so/RB/so /,/, the/DT/the total/JJ/total path/NN/path length/NN/length just/RB/just for/IN/for these/DT/these k/NN/k over/IN/over 2/CD/2 leaves/NNS/leaves is/VBZ/is at/IN/at least/JJS/least this/DT/this much/NNP/much. so/RB/so /,/, now/RB/now the/DT/the average/JJ/average is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a k/NN/k th/NN/th fraction/NN/fraction of/IN/of this/NNP/this. and/CC/and therefore/RB/therefore /,/, it/PRP/it is/VBZ/is simply/RB/simply going/VBG/going to/TO/to be/VB/be this/DT/this k/NN/k factorial/NN/factorial drop/NN/drop out/IN/out /,/, this/DT/this 2/CD/2 and/CC/and this/DT/this 2/CD/2 will/MD/will give/VB/give us/PRP/us 4/CD/4. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be log/JJ/log k/NN/k over/IN/over 4/CD/4. from/IN/from this/DT/this it/PRP/it immediately/RB/immediately follows/VBZ/follows that/IN/that /,/, the/DT/the average/JJ/average time/NN/time for/IN/for sorting/NN/sorting on/IN/on decision/NN/decision trees/NNS/trees /,/, is/VBZ/is n/VBN/n log/NN/log n/NNP/n. and/CC/and here/RB/here is/VBZ/is why/WRB/why /,/, every/DT/every algorithm/NN/algorithm tree/NN/tree has/VBZ/has n/VBN/n factorial/JJ/factorial leaves/NNP/leaves. thus/RB/thus average/JJ/average path/NN/path length/NN/length is/VBZ/is bigger/JJR/bigger than/IN/than this/DT/this claim/NN/claim /,/, log/NN/log of/IN/of the/DT/the number/NN/number of/IN/of leaves/NNS/leaves or/CC/or the/DT/the number/NN/number of/IN/of or/CC/or log/NN/log of/IN/of n/NN/n factorial/JJ/factorial upon/IN/upon 4/CD/4. but/CC/but /,/, log/NN/log of/IN/of n/NN/n factorial/JJ/factorial upon/IN/upon 4/CD/4 is/VBZ/is n/VBN/n log/NN/log n/NNP/n. and/CC/and therefore/RB/therefore /,/, average/JJ/average time/NN/time for/IN/for sorting/NN/sorting on/IN/on decision/NN/decision tree/NN/tree is/VBZ/is this/DT/this much/NNP/much. and/CC/and this/DT/this means/VBZ/means that/IN/that the/DT/the average/NN/average case/NN/case time/NN/time /,/, for/IN/for all/PDT/all comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithms/NNP/algorithms. say/NN/say heap/NN/heap sort/NN/sort /,/, merge/NN/merge sort/NN/sort /,/, shell/NN/shell sort/NN/sort all/DT/all of/IN/of these/DT/these is/VBZ/is n/VBN/n log/NN/log n/NNP/n. so/RB/so /,/, when/WRB/when we/PRP/we did/VBD/did /,/, when/WRB/when we/PRP/we studied/VBD/studied average/JJ/average case/NN/case complexity/NN/complexity of/IN/of quick/JJ/quick sort/NNP/sort. we/PRP/we proved/VBD/proved that/IN/that although/IN/although the/DT/the worse/NN/worse case/NN/case complexity/NN/complexity for/IN/for quick/NN/quick sort/NN/sort was/VBD/was n/VBN/n square/NNP/square. the/DT/the average/JJ/average case/NN/case was/VBD/was n/VBN/n log/NN/log n/NNP/n. so/RB/so /,/, in/IN/in a/DT/a similar/JJ/similar manner/NN/manner /,/, it/PRP/it may/MD/may be/VB/be conceivable/JJ/conceivable /,/, that/IN/that heap/NN/heap sort/NN/sort may/MD/may have/VB/have worse/NN/worse case/NN/case complexity/NN/complexity of/IN/of n/NN/n log/NN/log n/NNP/n. but/CC/but /,/, it/PRP/it is/VBZ/is average/JJ/average case/NN/case complexity/NN/complexity is/VBZ/is just/RB/just n/VBN/n /,/, it/PRP/it might/MD/might have/VB/have been/VBN/been conceivable/NNP/conceivable. but/CC/but this/DT/this result/NN/result shows/VBZ/shows that/IN/that the/DT/the average/NN/average case/NN/case time/NN/time for/IN/for heap/NN/heap sort/NN/sort /,/, is/VBZ/is also/RB/also going/VBG/going to/TO/to at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. and/CC/and similarly/RB/similarly for/IN/for merge/NN/merge sort/NN/sort /,/, shell/NN/shell sort/NN/sort and/CC/and any/DT/any other/JJ/other comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 51/CD/51 /CD/) so/RB/so /,/, now/RB/now i/PRP/i want/VBP/want to/TO/to conclude/VB/conclude and/CC/and here/RB/here are/VBP/are some/DT/some remarks/NNP/remarks. first/RB/first some/DT/some implications/NNS/implications of/IN/of the/DT/the lower/JJR/lower bound/NN/bound /,/, on/IN/on comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithms/NNS/algorithms in/IN/in the/DT/the ram/NNP/ram. so/RB/so /,/, here/RB/here is/VBZ/is an/DT/an important/JJ/important application/NNP/application. so/RB/so /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to sort/VB/sort faster/JJR/faster than/IN/than n/NN/n log/NN/log n/NN/n /,/, what/WP/what do/VBP/do i/PRP/i know/VB/know /,/, well/RB/well i/PRP/i know/VBP/know /,/, that/IN/that i/PRP/i must/MD/must use/VB/use some/DT/some other/JJ/other operations/NNS/operations besides/VBZ/besides just/RB/just comparisons/NNP/comparisons. if/IN/if i/PRP/i limit/VBP/limit myself/PRP/myself to/TO/to just/RB/just comparisons/NNS/comparisons what/WP/what happens/NNP/happens. well/RB/well /,/, there/EX/there is/VBZ/is a/DT/a decision/NN/decision tree/NN/tree algorithm/NN/algorithm /,/, which/WDT/which mimics/NNS/mimics the/DT/the ram/NN/ram algorithm/NNP/algorithm. and/CC/and therefore/RB/therefore /,/, i/PRP/i am/VBP/am stuck/NN/stuck to/TO/to a/DT/a lower/JJR/lower bound/NN/bound of/IN/of at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, i/PRP/i must/MD/must use/VB/use some/DT/some other/JJ/other operations/NNS/operations besides/VBZ/besides comparisons/NNS/comparisons /,/, are/VBP/are there/RB/there such/JJ/such operations/NNS/operations there/RB/there actually/RB/actually are/VBP/are ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 46/CD/46 /CD/) so/RB/so /,/, in/IN/in fact/NN/fact a/DT/a popular/JJ/popular sorting/NN/sorting algorithm/NN/algorithm called/VBN/called bucket/NN/bucket sort/NN/sort /,/, does/VBZ/does exactly/RB/exactly this/NNP/this. the/DT/the main/JJ/main operation/NN/operation it/PRP/it performs/VBZ/performs /,/, is/VBZ/is that/IN/that uses/NNS/uses the/DT/the key/JJ/key values/NNS/values /,/, as/IN/as an/DT/an index/NN/index into/IN/into an/DT/an array/NN/array /,/, which/WDT/which was/VBD/was not/RB/not allowed/VBN/allowed in/IN/in comparison/NN/comparison based/VBN/based sorting/VBG/sorting algorithms/NNP/algorithms. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the main/JJ/main claim/NN/claim /,/, if/IN/if the/DT/the keys/NNS/keys are/VBP/are integers/NNS/integers are/VBP/are 1/CD/1 to/TO/to r/VB/r /,/, in/IN/in the/DT/the range/NN/range 1/CD/1 through/IN/through r/NNP/r. then/RB/then /,/, sorting/VBG/sorting time/NN/time is/VBZ/is at/IN/at most/JJS/most n/JJ/n plus/NN/plus r/NNP/r. so/RB/so /,/, i/PRP/i will/MD/will just/RB/just give/VB/give the/DT/the algorithm/NN/algorithm as/IN/as the/DT/the proof/NNP/proof. so/RB/so /,/, first/JJ/first we/PRP/we are/VBP/are going/VBG/going to/TO/to build/VB/build an/DT/an array/NN/array of/IN/of buckets/NNS/buckets b/VBP/b 1/CD/1 through/IN/through r/NNP/r. so/RB/so /,/, these/DT/these buckets/NNS/buckets will/MD/will be/VB/be initialized/VBN/initialized to/TO/to null/NNP/null. so/RB/so /,/, that/IN/that will/MD/will take/VB/take about/IN/about r/NN/r time/NNP/time. then/RB/then /,/, we/PRP/we take/VBP/take key/JJ/key x/NN/x i/PRP/i and/CC/and we/PRP/we insert/VBP/insert it/PRP/it into/IN/into this/DT/this bucket/NN/bucket b/NN/b of/IN/of x/NN/x i/NNP/i. so/RB/so /,/, b/NN/b of/IN/of x/NN/x i/PRP/i can/MD/can be/VB/be compute/JJ/compute in/IN/in constant/JJ/constant time/NNP/time. so/RB/so /,/, in/IN/in constant/JJ/constant time/NN/time /,/, we/PRP/we keep/VBP/keep a/DT/a list/NN/list over/IN/over there/EX/there and/CC/and we/PRP/we insert/VBP/insert this/DT/this key/JJ/key into/IN/into that/DT/that list/NNP/list. and/CC/and we/PRP/we do/VBP/do this/DT/this for/IN/for all/DT/all the/DT/the keys/NNS/keys /,/, for/IN/for all/PDT/all i/NNP/i. so/RB/so /,/, now/RB/now all/DT/all keys/NNS/keys are/VBP/are now/RB/now into/IN/into their/PRP$/their buckets/NNP/buckets. now/RB/now /,/, for/IN/for i/PRP/i equal/JJ/equal to/TO/to 1/CD/1 to/TO/to r/VB/r /,/, we/PRP/we go/VBP/go visit/NN/visit each/DT/each bucket/NN/bucket in/IN/in turn/NNP/turn. and/CC/and we/PRP/we print/VBP/print out/RP/out the/DT/the contents/NNS/contents /,/, clearly/RB/clearly we/PRP/we will/MD/will print/VB/print out/RP/out the/DT/the contents/NNS/contents in/IN/in increasing/VBG/increasing order/NNP/order. what/WP/what is/VBZ/is the/DT/the time/NN/time taken/VBN/taken /,/, well/RB/well the/DT/the insertion/NN/insertion time/NN/time is/VBZ/is proportional/JJ/proportional to/TO/to the/DT/the number/NN/number of/IN/of keys/NNP/keys. so/RB/so /,/, because/IN/because of/IN/of this/DT/this statement/NN/statement /,/, the/DT/the time/NN/time taken/VBN/taken to/TO/to initialize/VB/initialize the/DT/the array/NN/array of/IN/of this/DT/this b/NN/b array/NN/array /,/, is/VBZ/is going/VBG/going to/TO/to be/VB/be r/NNP/r. and/CC/and printing/VBG/printing out/RP/out the/DT/the answer/NN/answer /,/, well/RB/well we/PRP/we have/VBP/have to/TO/to visit/VB/visit every/DT/every element/NN/element of/IN/of the/DT/the array/NNP/array. and/CC/and we/PRP/we also/RB/also have/VBP/have to/TO/to visit/VB/visit every/DT/every key/JJ/key /,/, which/WDT/which has/VBZ/has inserted/VBN/inserted in/IN/in some/DT/some bucket/NNP/bucket. so/RB/so /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n plus/CC/plus r/NNP/r. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n plus/CC/plus r/NNP/r. and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be faster/JJR/faster than/IN/than n/NN/n log/NN/log n/NN/n /,/, if/IN/if r/NN/r is/VBZ/is small/NNP/small. in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is not/RB/not the/DT/the only/JJ/only range/NN/range /,/, if/IN/if you/PRP/you want/VBP/want some/DT/some bigger/JJR/bigger ranges/NNS/ranges say/VBP/say 1/CD/1 through/IN/through r/NN/r square/NNP/square. is/VBZ/is slight/VBN/slight modification/NN/modification of/IN/of this/DT/this will/MD/will in/IN/in fact/NN/fact /,/, do/VBP/do the/DT/the job/NNP/job. /NNP/( /NNP/( refer/NN/refer time/NN/time 45/CD/45 /:/: 56/CD/56 /CD/) /CD/) the/DT/the second/JJ/second concluding/NN/concluding remark/NN/remark that/WDT/that i/PRP/i want/VBP/want to/TO/to make/VB/make /,/, is/VBZ/is that/IN/that not/RB/not only/RB/only sorting/NNP/sorting. but/CC/but /,/, you/PRP/you can/MD/can use/VB/use the/DT/the decision/NN/decision tree/NN/tree model/NN/model to/TO/to study/NN/study several/JJ/several other/JJ/other problems/NNP/problems. so/IN/so /,/, the/DT/the other/JJ/other problems/NNS/problems are/VBP/are say/VBP/say merging/NNP/merging. and/CC/and this/DT/this will/MD/will figure/VB/figure in/IN/in the/DT/the exercises/NNS/exercises /,/, which/WDT/which i/PRP/i will/MD/will show/VB/show later/NNP/later. and/CC/and also/RB/also things/NNS/things like/IN/like finding/NN/finding duplicates/NNP/duplicates. and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the topic/JJ/topic in/IN/in the/DT/the next/JJ/next lecture/NNP/lecture. in/IN/in fact/NN/fact /,/, let/VB/let me/PRP/me point/NN/point out/RP/out /,/, let/VB/let me/PRP/me say/VB/say in/IN/in conclusion/NNP/conclusion. that/IN/that in/IN/in fact/NN/fact /,/, we/PRP/we can/MD/can extend/VB/extend this/DT/this decision/NN/decision tree/NN/tree model/NNP/model. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to go/VB/go to/TO/to my/PRP$/my second/JJ/second concluding/NN/concluding remark/NN/remark /,/, which/WDT/which is/VBZ/is to/TO/to say/VB/say that/IN/that the/DT/the decision/NN/decision tree/NN/tree model/NN/model /,/, can/MD/can be/VB/be used/VBN/used to/TO/to study/NN/study other/JJ/other problems/NNS/problems as/IN/as well/RB/well /,/, not/RB/not just/RB/just sorting/NNP/sorting. so/RB/so /,/, in/IN/in particular/JJ/particular it/PRP/it can/MD/can be/VB/be used/VBN/used to/TO/to study/NN/study merging/VBG/merging problems/NNS/problems /,/, which/WDT/which i/PRP/i guess/VBP/guess you/PRP/you might/MD/might think/VB/think as/RB/as very/RB/very similar/JJ/similar to/TO/to sorting/NNP/sorting. it/PRP/it can/MD/can also/RB/also be/VB/be used/VBN/used to/TO/to study/NN/study problems/NNS/problems /,/, like/IN/like finding/NN/finding duplicates/NNP/duplicates. or/CC/or it/PRP/it can/MD/can also/RB/also be/VB/be used/VBN/used to/TO/to study/NN/study problems/NNS/problems /,/, such/JJ/such as/IN/as putting/NN/putting lower/JJR/lower bounds/NNS/bounds on/IN/on the/DT/the time/NN/time to/TO/to calculate/VB/calculate the/DT/the intersections/NNS/intersections /,/, between/IN/between two/CD/two given/VBN/given sets/NNP/sets. now/RB/now /,/, this/DT/this problem/NN/problem /,/, might/MD/might seem/VB/seem like/IN/like rather/RB/rather different/JJ/different from/IN/from sorting/NNP/sorting. and/CC/and it/PRP/it is/VBZ/is perhaps/RB/perhaps somewhat/RB/somewhat surprising/JJ/surprising /,/, the/DT/the decision/NN/decision trees/NNS/trees can/MD/can be/VB/be used/VBN/used for/IN/for this/NNP/this. nevertheless/NN/nevertheless /,/, they/PRP/they can/MD/can be/VB/be used/VBN/used and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will see/VB/see the/DT/the finding/NN/finding duplicates/VBZ/duplicates example/NN/example in/IN/in the/DT/the next/JJ/next lecture/NNP/lecture. i/PRP/i will/MD/will also/RB/also state/VB/state that/IN/that the/DT/the idea/NN/idea of/IN/of decision/NN/decision tree/NN/tree /,/, is/VBZ/is the/DT/the general/JJ/general model/NN/model of/IN/of decision/NN/decision tree/NN/tree is/VBZ/is can/MD/can be/VB/be extended/VBN/extended somewhat/NNP/somewhat. so/RB/so that/IN/that /,/, rather/RB/rather than/IN/than just/RB/just allowing/VBG/allowing comparison/NN/comparison /,/, you/PRP/you can/MD/can also/RB/also allow/VB/allow some/DT/some arithmetic/JJ/arithmetic incident/NNP/incident. and/CC/and so/RB/so the/DT/the lower/JJR/lower bound/NN/bound model/NN/model can/MD/can be/VB/be made/VBN/made somewhat/RB/somewhat stronger/NNP/stronger. in/IN/in any/DT/any case/NN/case /,/, we/PRP/we have/VBP/have seen/VBN/seen some/DT/some lower/JJR/lower bound/NN/bound results/NNP/results. and/CC/and we/PRP/we will/MD/will continue/VB/continue this/DT/this with/IN/with the/DT/the next/JJ/next lecture/NNP/lecture. thank/NN/thank you/NNP/you. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 25/CD/25 element/NN/element distinctness/NN/distinctness lower/JJR/lower bounds/NNS/bounds welcome/VBP/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. our/PRP$/our topic/JJ/topic today/NN/today is/VBZ/is element/NN/element distinctness/NN/distinctness lower/JJR/lower bound/NNP/bound. this/DT/this will/MD/will be/VB/be the/DT/the continuation/NN/continuation of/IN/of the/DT/the previous/JJ/previous lecture/NN/lecture /,/, which/WDT/which was/VBD/was on/IN/on sorting/NN/sorting lower/JJR/lower bounds/NNP/bounds. let/NN/let me/PRP/me start/VB/start by/IN/by defining/NN/defining the/DT/the problem/NNP/problem. so/RB/so /,/, the/DT/the problem/NN/problem is/VBZ/is as/IN/as follows/NNP/follows. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 11/CD/11 /CD/) you/PRP/you are/VBP/are given/VBN/given as/IN/as a/DT/a input/NN/input /,/, a/DT/a sequence/NN/sequence of/IN/of numbers/NNP/numbers. let/NN/let me/PRP/me call/VBP/call the/DT/the entire/JJ/entire sequence/NN/sequence x/NN/x and/CC/and the/DT/the individual/JJ/individual numbers/NNS/numbers in/IN/in the/DT/the sequence/NN/sequence are/VBP/are x/NN/x 1/CD/1 /,/, x/NN/x 2/CD/2 /,/, x/NN/x n/NNP/n. we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to output/VB/output a/DT/a yes/NNS/yes answer/NN/answer /,/, if/IN/if all/PDT/all the/DT/the x/NN/x are/VBP/are distinct/NNP/distinct. and/CC/and otherwise/VB/otherwise /,/, if/IN/if some/DT/some x/NN/x i/PRP/i equal/JJ/equal to/TO/to x/VB/x j/NN/j some/DT/some two/CD/two numbers/NNS/numbers x/NN/x i/PRP/i and/CC/and x/VB/x j/NN/j /,/, distinct/JJ/distinct two/CD/two numbers/NNS/numbers x/NN/x i/PRP/i and/CC/and x/VB/x j/NN/j are/VBP/are identical/NNP/identical. then/RB/then /,/, we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to output/VB/output and/CC/and no/DT/no answer/NNP/answer. a/DT/a no/DT/no answer/NN/answer means/VBZ/means /,/, that/IN/that no/DT/no all/DT/all the/DT/the elements/NNS/elements are/VBP/are not/RB/not distinct/NNP/distinct. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove today/NN/today is/VBZ/is that/IN/that /,/, in/IN/in the/DT/the decision/NN/decision tree/NN/tree model/NN/model /,/, which/WDT/which we/PRP/we talked/VBD/talked about/IN/about last/JJ/last time/NNP/time. and/CC/and which/WDT/which i/PRP/i will/MD/will quickly/RB/quickly define/VB/define this/DT/this time/NN/time also/RB/also just/RB/just for/IN/for continuity/NNP/continuity. we/PRP/we will/MD/will prove/VB/prove that/IN/that in/IN/in this/DT/this decision/NN/decision tree/NN/tree model/NN/model /,/, the/DT/the time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be n/VBN/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a non/NN/non trivial/NN/trivial lower/JJR/lower bound/NN/bound /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that it/PRP/it says/NNP/says. that/IN/that you/PRP/you need/VBP/need to/TO/to do/VB/do a/DT/a little/RB/little bit/NN/bit more/JJR/more /,/, than/IN/than just/RB/just examine/NN/examine the/DT/the numbers/NNS/numbers /,/, which/WDT/which would/MD/would just/RB/just take/VB/take omega/NN/omega of/IN/of n/NN/n time/NNP/time. it/PRP/it should/MD/should be/VB/be quite/RB/quite obvious/JJ/obvious to/TO/to you/PRP/you /,/, that/DT/that if/IN/if you/PRP/you are/VBP/are allowed/VBN/allowed to/TO/to use/VB/use n/NN/n log/NN/log n/NN/n time/NNP/time. then/RB/then /,/, element/NN/element distinctness/NN/distinctness can/MD/can easily/RB/easily be/VB/be solved/NNP/solved. how/WRB/how ?/./? well/RB/well /,/, in/IN/in n/NN/n log/NN/log n/NN/n time/NN/time we/PRP/we can/MD/can sort/VB/sort all/PDT/all the/DT/the numbers/NNP/numbers. and/CC/and now/RB/now /,/, if/IN/if two/CD/two numbers/NNS/numbers are/VBP/are identical/JJ/identical /,/, they/PRP/they are/VBP/are guaranteed/VBN/guaranteed to/TO/to come/VB/come next/JJ/next to/TO/to each/DT/each other/NNP/other. in/IN/in which/WDT/which case/NN/case /,/, we/PRP/we simply/RB/simply have/VBP/have to/TO/to compare/VB/compare adjacent/NN/adjacent numbers/NNS/numbers after/IN/after sorting/VBG/sorting and/CC/and that/IN/that will/MD/will enable/VB/enable us/PRP/us to/TO/to find/VB/find out/RP/out /,/, whether/IN/whether all/DT/all the/DT/the numbers/NNS/numbers are/VBP/are distinct/JJ/distinct are/VBP/are not/NNP/not. so/RB/so /,/, in/IN/in summary/NN/summary in/IN/in n/NN/n log/NN/log n/NN/n time/NN/time /,/, we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to actually/RB/actually compute/VB/compute /,/, whether/IN/whether the/DT/the numbers/NNS/numbers are/VBP/are distinct/NNP/distinct. however/RB/however /,/, the/DT/the subject/NN/subject of/IN/of today/NN/today ?/./? s/NNS/s lecture/VBP/lecture is/VBZ/is not/RB/not that/NNP/that. the/DT/the subject/NN/subject of/IN/of today/NN/today ?/./? s/NNS/s lecture/VBP/lecture is/VBZ/is to/TO/to prove/VB/prove /,/, that/IN/that at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n time/NN/time is/VBZ/is needed/NNP/needed. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to prove/VB/prove a/DT/a lower/JJR/lower bound/NNP/bound. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 03/CD/03 /CD/) here/RB/here is/VBZ/is what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do today/NN/today ?/./? so/RB/so /,/, today/NN/today i/PRP/i am/VBP/am going/VBG/going to/TO/to talk/VB/talk about/IN/about /,/, the/DT/the decision/NN/decision tree/NN/tree model/NNP/model. i/PRP/i am/VBP/am going/VBG/going to/TO/to go/VB/go through/RP/through this/DT/this rather/RB/rather quickly/NNP/quickly. because/IN/because /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be very/RB/very similar/JJ/similar to/TO/to what/WP/what we/PRP/we did/VBD/did last/JJ/last time/NNP/time. last/JJ/last time/NN/time we/PRP/we looked/VBD/looked at/IN/at lower/JJR/lower bounds/NNS/bounds on/IN/on sorting/VBG/sorting and/CC/and we/PRP/we introduced/VBD/introduced a/DT/a lower/JJR/lower bound/NN/bound technique/NNP/technique. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to explain/VB/explain /,/, why/WRB/why that/IN/that lower/JJR/lower bounding/VBG/bounding technique/NN/technique does/VBZ/does not/RB/not work/VB/work /,/, that/IN/that seem/NN/seem like/IN/like a/DT/a very/RB/very nice/JJ/nice technique/NNP/technique. but/CC/but /,/, it/PRP/it will/MD/will turn/VB/turn out/RP/out that/IN/that /,/, that/IN/that does/VBZ/does not/RB/not really/RB/really work/VB/work for/IN/for the/DT/the problem/NN/problem /,/, which/WDT/which we/PRP/we are/VBP/are looking/VBG/looking at/IN/at today/NNP/today. then/RB/then /,/, i/PRP/i will/MD/will talk/VB/talk about/IN/about a/DT/a new/JJ/new lower/NN/lower bound/NN/bound technique/NN/technique /,/, which/WDT/which works/NNS/works for/IN/for this/DT/this problem/NN/problem of/IN/of element/NN/element distinctness/NNP/distinctness. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will prove/VB/prove the/DT/the lower/JJR/lower bound/NN/bound that/IN/that i/PRP/i mentioned/NNP/mentioned. finally/RB/finally /,/, i/PRP/i will/MD/will extend/VB/extend the/DT/the model/NNP/model. so/RB/so /,/, instead/RB/instead of/IN/of the/DT/the decision/NN/decision tree/NN/tree model/NN/model /,/, i/PRP/i will/MD/will define/VB/define a/DT/a more/RBR/more powerful/JJ/powerful model/NN/model i/PRP/i will/MD/will call/VB/call the/DT/the algebraic/JJ/algebraic decision/NN/decision tree/NN/tree model/NNP/model. and/CC/and i/PRP/i will/MD/will talk/VB/talk a/DT/a little/RB/little bit/NN/bit about/IN/about it/NNP/it. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 04/CD/04 /:/: 04/CD/04 /CD/) so/RB/so /,/, let/VB/let me/PRP/me start/VB/start with/IN/with the/DT/the decision/NN/decision tree/NN/tree model/NNP/model. so/RB/so /,/, in/IN/in the/DT/the decision/NN/decision tree/NN/tree model/NN/model /,/, the/DT/the input/NN/input is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be a/DT/a sequence/NN/sequence of/IN/of numbers/NNP/numbers. say/VBP/say /,/, the/DT/the same/JJ/same sequence/NN/sequence x/NN/x 1/CD/1 through/IN/through x/NN/x n/NNP/n. and/CC/and we/PRP/we will/MD/will assume/VB/assume that/IN/that these/DT/these numbers/NNS/numbers have/VBP/have already/RB/already been/VBN/been read/JJ/read into/IN/into the/DT/the model/NNP/model. so/RB/so /,/, there/EX/there are/VBP/are no/DT/no input/NN/input instructions/NNS/instructions as/IN/as such/JJ/such /,/, the/DT/the inputs/NNS/inputs are/VBP/are already/RB/already read/NNP/read. a/DT/a program/NN/program in/IN/in this/DT/this model/NN/model is/VBZ/is a/DT/a label/NN/label tree/NNP/tree. and/CC/and all/DT/all non/NN/non leaf/NN/leaf nodes/VBZ/nodes are/VBP/are labeled/VBN/labeled i/PRP/i colon/VBP/colon j/NN/j /,/, where/WRB/where i/PRP/i and/CC/and j/VB/j are/VBP/are integers/NNP/integers. and/CC/and these/DT/these integers/NNS/integers have/VBP/have to/TO/to be/VB/be fixed/VBN/fixed as/IN/as a/DT/a part/NN/part of/IN/of the/DT/the program/NNP/program. leaf/NN/leaf node/NN/node /,/, each/DT/each leaf/NN/leaf node/NN/node has/VBZ/has a/DT/a label/NN/label /,/, which/WDT/which just/RB/just says/VBZ/says what/WP/what is/VBZ/is the/DT/the value/NN/value to/TO/to the/DT/the output/NN/output ?/./? edge/NN/edge labels/NNS/labels are/VBP/are relational/JJ/relational operators/NNP/operators. so/RB/so /,/, less/JJR/less than/IN/than equal/JJ/equal to/TO/to greater/JJR/greater than/IN/than or/CC/or not/RB/not equal/JJ/equal to/TO/to less/RBR/less than/IN/than less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/NN/to. let/NN/let me/PRP/me quickly/RB/quickly take/VB/take an/DT/an example/NN/example of/IN/of a/DT/a decision/NN/decision tree/NN/tree program/NNP/program. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 12/CD/12 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a decision/NN/decision tree/NN/tree program/NN/program for/IN/for sorting/VBG/sorting three/CD/three numbers/NNP/numbers. as/IN/as you/PRP/you can/MD/can see/VB/see /,/, each/DT/each non/NN/non leaf/NN/leaf node/NN/node is/VBZ/is labeled/VBN/labeled i/PRP/i colon/VBP/colon j/NN/j in/IN/in this/DT/this case/NN/case 1/CD/1 colon/NN/colon 2/CD/2. and/CC/and it/PRP/it is/VBZ/is each/DT/each leaf/NN/leaf node/NN/node is/VBZ/is labeled/VBN/labeled by/IN/by the/DT/the answer/NN/answer /,/, that/IN/that is/VBZ/is to/TO/to be/VB/be output/NNP/output. and/CC/and furthermore/VB/furthermore /,/, each/DT/each edge/NN/edge is/VBZ/is labeled/VBN/labeled with/IN/with a/DT/a relational/JJ/relational operator/NN/operator /:/( /:/( refer/NN/refer time/NN/time /:/: 05/CD/05 /:/: 34/CD/34 /CD/) /CD/) /./. execution/NN/execution begins/VBZ/begins at/IN/at the/DT/the root/NN/root /,/, at/IN/at each/DT/each node/NN/node labeled/VBD/labeled i/PRP/i colon/VBP/colon j/NN/j /,/, x/NN/x i/PRP/i from/IN/from this/DT/this set/NN/set of/IN/of inputs/NNS/inputs is/VBZ/is compared/VBN/compared with/IN/with x/NN/x j/NNP/j. whatever/NN/whatever the/DT/the outcome/NN/outcome of/IN/of that/DT/that comparison/NN/comparison is/VBZ/is /,/, the/DT/the corresponding/NN/corresponding branch/NN/branch is/VBZ/is found/VBN/found with/IN/with the/DT/the corresponding/VBG/corresponding label/NNP/label. the/DT/the corresponding/NN/corresponding outgoing/VBG/outgoing edges/NNS/edges are/VBP/are found/VBN/found and/CC/and execution/NN/execution follows/VBZ/follows that/IN/that branch/NN/branch /,/, that/IN/that outgoing/VBG/outgoing edge/NNP/edge. so/RB/so /,/, you/PRP/you go/VBP/go down/RP/down to/TO/to the/DT/the node/NN/node /,/, which/WDT/which is/VBZ/is at/IN/at the/DT/the other/JJ/other end/NN/end point/NN/point of/IN/of that/DT/that edge/NNP/edge. and/CC/and you/PRP/you repeat/VBD/repeat this/DT/this whole/JJ/whole thing/NN/thing /,/, until/IN/until you/PRP/you get/VBP/get to/TO/to a/DT/a leaf/NNP/leaf. when/WRB/when you/PRP/you get/VBP/get to/TO/to a/DT/a leaf/NN/leaf it/PRP/it is/VBZ/is label/NN/label is/VBZ/is the/DT/the output/NNP/output. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the answer/NN/answer that/IN/that you/PRP/you are/VBP/are going/VBG/going to/TO/to compute/VB/compute /,/, that/IN/that you/PRP/you wanted/VBD/wanted to/TO/to compute/NNP/compute. so/RB/so /,/, two/CD/two things/NNS/things to/TO/to be/VB/be noted/NNP/noted. so/RB/so /,/, as/IN/as we/PRP/we saw/VBD/saw in/IN/in the/DT/the example/NN/example /,/, there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a separate/JJ/separate program/NN/program for/IN/for each/DT/each input/NN/input size/NNP/size. so/RB/so /,/, there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a separate/JJ/separate program/NN/program for/IN/for n/NN/n equal/JJ/equal to/TO/to 1/CD/1 /,/, for/IN/for n/NN/n equal/JJ/equal to/TO/to 2/CD/2 /,/, for/IN/for n/NN/n equal/JJ/equal to/TO/to 3/CD/3 and/CC/and so/RB/so on/NNP/on. and/CC/and we/PRP/we saw/VBD/saw a/DT/a program/NN/program for/IN/for size/NN/size n/NN/n equal/JJ/equal to/TO/to 3/CD/3 /,/, not/RB/not for/IN/for element/NN/element distinctness/NN/distinctness /,/, but/CC/but for/IN/for sorting/NNP/sorting. and/CC/and then/RB/then /,/, the/DT/the other/JJ/other point/NN/point we/PRP/we noted/VBD/noted is/VBZ/is /,/, that/IN/that although/IN/although we/PRP/we are/VBP/are looking/VBG/looking at/IN/at a/DT/a decision/NN/decision tree/NN/tree model/NNP/model. and/CC/and a/DT/a decision/NN/decision tree/NN/tree model/NN/model is/VBZ/is not/RB/not exactly/RB/exactly like/IN/like our/PRP$/our computer/NN/computer /,/, like/IN/like any/DT/any of/IN/of our/PRP$/our computers/NNP/computers. it/PRP/it does/VBZ/does in/IN/in fact/NN/fact /,/, have/VBP/have a/DT/a connection/NN/connection to/TO/to the/DT/the ram/NN/ram model/NN/model or/CC/or the/DT/the random/NN/random access/NN/access machine/NN/machine model/NN/model which/WDT/which in/IN/in fact/NN/fact /,/, resembles/VBZ/resembles our/PRP$/our computers/NNP/computers. and/CC/and this/DT/this relevance/NN/relevance has/VBZ/has been/VBN/been discussed/VBN/discussed in/IN/in the/DT/the previous/JJ/previous lecture/NNP/lecture. and/CC/and let/VB/let me/PRP/me remind/VB/remind you/PRP/you what/WP/what that/IN/that relevance/NN/relevance was/NNP/was. so/RB/so /,/, we/PRP/we said/VBD/said in/IN/in the/DT/the previous/JJ/previous lecture/NN/lecture /,/, that/IN/that if/IN/if we/PRP/we have/VBP/have a/DT/a lower/JJR/lower bound/NN/bound in/IN/in the/DT/the decision/NN/decision tree/NN/tree model/NN/model /,/, when/WRB/when it/PRP/it applies/VBZ/applies to/TO/to the/DT/the ram/NN/ram model/NN/model /,/, not/RB/not completely/NNP/completely. but/CC/but /,/, it/PRP/it applies/VBZ/applies to/TO/to comparison/NN/comparison based/VBN/based algorithms/NNS/algorithms in/IN/in the/DT/the ram/NN/ram model/NNP/model. comparison/NN/comparison based/VBN/based algorithms/NNS/algorithms are/VBP/are simply/RB/simply algorithms/NNS/algorithms /,/, which/WDT/which compare/NN/compare the/DT/the keys/NNS/keys /,/, they/PRP/they do/VBP/do not/RB/not perform/VB/perform arithmetic/JJ/arithmetic on/IN/on the/DT/the keys/NNP/keys. or/CC/or they/PRP/they do/VBP/do not/RB/not use/VB/use /,/, the/DT/the keys/NNS/keys to/TO/to induct/VB/induct into/IN/into the/DT/the arrays/NNP/arrays. they/PRP/they simply/RB/simply compare/VBP/compare the/DT/the keys/NNS/keys and/CC/and of/IN/of course/NN/course /,/, they/PRP/they make/VBP/make copy/NNP/copy. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 07/CD/07 /:/: 48/CD/48 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a quick/JJ/quick overview/NN/overview of/IN/of the/DT/the sorting/NN/sorting lower/JJR/lower bound/NNP/bound. the/DT/the input/NN/input to/TO/to the/DT/the sorting/NN/sorting problem/NN/problem was/VBD/was the/DT/the sequence/NN/sequence x/NNP/x. the/DT/the same/JJ/same sequence/NN/sequence which/WDT/which we/PRP/we have/VBP/have mentioned/VBN/mentioned /,/, consisting/VBG/consisting of/IN/of components/NNS/components x/VBP/x 1/CD/1 /,/, x/NN/x 2/CD/2 /,/, x/NN/x n/NNP/n. so/RB/so /,/, these/DT/these are/VBP/are all/DT/all numbers/NNS/numbers and/CC/and we/PRP/we want/VBP/want to/TO/to sort/VB/sort these/DT/these numbers/NNP/numbers. the/DT/the key/JJ/key thing/NN/thing to/TO/to observe/VB/observe in/IN/in this/DT/this problem/NN/problem or/CC/or in/IN/in the/DT/the lower/JJR/lower bound/NN/bound argument/NN/argument is/VBZ/is that/IN/that there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial possible/JJ/possible answers/NNP/answers. so/RB/so /,/, either/DT/either i/PRP/i could/MD/could say/VB/say that/IN/that /,/, this/DT/this is/VBZ/is the/DT/the sorted/VBN/sorted sequence/NN/sequence or/CC/or i/PRP/i could/MD/could take/VB/take a/DT/a permutation/NN/permutation of/IN/of this/NNP/this. and/CC/and say/VB/say that/IN/that is/VBZ/is a/DT/a sorted/VBN/sorted sequence/NNP/sequence. i/PRP/i could/MD/could take/VB/take every/DT/every possible/JJ/possible permutation/NN/permutation of/IN/of this/DT/this and/CC/and that/IN/that could/MD/could be/VB/be my/PRP$/my answer/NNP/answer. every/DT/every possible/JJ/possible permutation/NN/permutation could/MD/could be/VB/be an/DT/an answer/NN/answer and/CC/and there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial permutations/NNP/permutations. and/CC/and therefore/RB/therefore /,/, there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial possible/JJ/possible answers/NNP/answers. this/DT/this is/VBZ/is a/DT/a very/RB/very important/JJ/important point/NN/point /,/, in/IN/in this/DT/this argument/NNP/argument. now/RB/now /,/, the/DT/the answer/NN/answer is/VBZ/is going/VBG/going to/TO/to be/VB/be printed/VBN/printed at/IN/at the/DT/the leaf/NN/leaf of/IN/of these/DT/these trees/NNS/trees of/IN/of the/DT/the program/NN/program tree/NN/tree /,/, which/WDT/which means/VBZ/means that/DT/that /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to print/VB/print out/RP/out n/NN/n factorial/JJ/factorial different/JJ/different answers/NNP/answers. then/RB/then /,/, you/PRP/you must/MD/must have/VB/have n/VBN/n factorial/JJ/factorial leaves/NNS/leaves /,/, you/PRP/you have/VBP/have no/DT/no choice/NNP/choice. because/IN/because /,/, a/DT/a single/JJ/single leaf/NN/leaf can/MD/can just/RB/just print/VB/print a/DT/a single/JJ/single answer/NN/answer /,/, it/PRP/it will/MD/will print/VB/print out/RP/out that/IN/that entire/JJ/entire permutation/NNP/permutation. but/CC/but /,/, that/IN/that entire/JJ/entire permutation/NN/permutation constitutes/NNS/constitutes a/DT/a single/JJ/single answer/NNP/answer. so/RB/so /,/, if/IN/if execution/NN/execution arrives/NNS/arrives to/TO/to that/DT/that leaf/NN/leaf /,/, then/RB/then that/IN/that is/VBZ/is the/DT/the only/JJ/only answer/NN/answer it/PRP/it can/MD/can print/VB/print out/NNP/out. so/RB/so /,/, if/IN/if your/PRP$/your program/NN/program tree/NN/tree is/VBZ/is going/VBG/going to/TO/to be/VB/be even/RB/even capable/JJ/capable of/IN/of printing/NN/printing n/NN/n factorial/NN/factorial different/NN/different answers/NNP/answers. then/RB/then /,/, it/PRP/it had/VBD/had better/RBR/better have/VBP/have n/VBN/n factorial/JJ/factorial leaves/NNP/leaves. but/CC/but /,/, if/IN/if it/PRP/it does/VBZ/does have/VB/have n/VBN/n factorial/JJ/factorial leaves/NNP/leaves. then/RB/then /,/, the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least log/NN/log of/IN/of n/NN/n factorial/JJ/factorial /,/, which/WDT/which is/VBZ/is n/VBN/n log/NN/log n/NNP/n. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree is/VBZ/is the/DT/the worst/JJS/worst case/NN/case time/NNP/time. and/CC/and therefore/RB/therefore /,/, the/DT/the worst/JJS/worst case/NN/case time/NN/time taken/VBN/taken is/VBZ/is at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a rough/JJ/rough sketch/NN/sketch of/IN/of the/DT/the argument/NN/argument /,/, that/IN/that we/PRP/we saw/VBD/saw last/JJ/last time/NNP/time. this/DT/this idea/NN/idea /,/, that/IN/that if/IN/if the/DT/the answer/NN/answer is/VBZ/is n/VBN/n factorial/JJ/factorial possibilities/NNP/possibilities. or/CC/or if/IN/if there/EX/there are/VBP/are n/NN/n factorial/JJ/factorial different/JJ/different answers/NNS/answers /,/, in/IN/in the/DT/the language/NN/language of/IN/of information/NN/information theory/NN/theory /,/, can/MD/can be/VB/be expressed/VBN/expressed as/IN/as saying/VBG/saying that/IN/that this/DT/this answer/NN/answer has/VBZ/has high/JJ/high information/NNP/information. so/RB/so /,/, whatever/IN/whatever we/PRP/we are/VBP/are going/VBG/going to/TO/to print/VB/print out/RP/out as/RB/as the/DT/the answer/NN/answer /,/, if/IN/if you/PRP/you think/VBP/think of/IN/of it/PRP/it as/IN/as a/DT/a variable/JJ/variable /,/, it/PRP/it has/VBZ/has a/DT/a very/RB/very high/JJ/high information/NN/information content/NNP/content. the/DT/the answer/NN/answer can/MD/can take/VB/take n/NN/n factorial/JJ/factorial different/JJ/different values/NNP/values. so/RB/so /,/, it/PRP/it has/VBZ/has the/DT/the information/NN/information quantity/NN/quantity in/IN/in it/PRP/it is/VBZ/is high/JJ/high is/VBZ/is something/NN/something like/IN/like n/NN/n factorial/NNP/factorial. in/IN/in fact/NN/fact /,/, information/NN/information theory/NN/theory measures/VBZ/measures information/NN/information as/IN/as the/DT/the number/NN/number of/IN/of ways/NNS/ways /,/, the/DT/the log/NN/log of/IN/of the/DT/the number/NN/number of/IN/of ways/NNP/ways. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be log/JJ/log of/IN/of n/NN/n factorial/JJ/factorial /,/, very/RB/very roughly/NNP/roughly. in/IN/in any/DT/any case/NN/case /,/, bounds/NNS/bounds of/IN/of this/DT/this kind/NN/kind /,/, where/WRB/where we/PRP/we say/VBP/say that/IN/that there/EX/there are/VBP/are so/RB/so many/JJ/many ways/NNS/ways in/IN/in which/WDT/which this/DT/this variable/JJ/variable can/MD/can take/VB/take a/DT/a value/NN/value are/VBP/are therefore/RB/therefore /,/, called/VBN/called information/NN/information theoretical/JJ/theoretical lower/JJR/lower bounds/NNP/bounds. so/RB/so in/IN/in fact/NN/fact /,/, you/PRP/you will/MD/will see/VB/see the/DT/the sorting/NN/sorting lower/JJR/lower bound/NN/bound often/RB/often refer/VBP/refer to/TO/to as/IN/as the/DT/the information/NN/information theoretic/JJ/theoretic lower/JJR/lower bound/NNP/bound. let/NN/let us/PRP/us now/RB/now turn/VBP/turn to/TO/to the/DT/the element/NN/element distinctness/NN/distinctness problem/NNP/problem. how/WRB/how many/JJ/many answers/NNS/answers do/VBP/do we/PRP/we have/VB/have ?/./? well/RB/well /,/, the/DT/the answers/NNS/answers are/VBP/are two/CD/two really/RB/really /,/, the/DT/the answer/NN/answer could/MD/could be/VB/be yes/NNS/yes /,/, which/WDT/which means/VBZ/means all/DT/all elements/NNS/elements are/VBP/are distinct/JJ/distinct or/CC/or the/DT/the answer/NN/answer could/MD/could be/VB/be no/NNP/no. no/DT/no means/VBZ/means some/DT/some duplicate/NN/duplicate exist/NNP/exist. so/RB/so /,/, we/PRP/we only/RB/only have/VBP/have two/CD/two answers/NNS/answers /,/, so/RB/so our/PRP$/our answer/NN/answer has/VBZ/has only/RB/only two/CD/two possibilities/NNP/possibilities. so/RB/so /,/, log/NN/log of/IN/of that/DT/that is/VBZ/is not/RB/not going/VBG/going to/TO/to be/VB/be very/RB/very large/JJ/large it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be in/IN/in fact/NN/fact /,/, exactly/RB/exactly one/NNP/one. so/RB/so /,/, if/IN/if we/PRP/we just/RB/just say/VBP/say that/IN/that there/EX/there are/VBP/are two/CD/two possibilities/NNP/possibilities. and/CC/and therefore/RB/therefore /,/, there/EX/there are/VBP/are two/CD/two leaves/NNS/leaves that/WDT/that does/VBZ/does not/RB/not help/VB/help us/PRP/us much/NNP/much. because/IN/because /,/, log/NN/log of/IN/of 2/CD/2 is/VBZ/is 1/CD/1 and/CC/and it/PRP/it just/RB/just says/VBZ/says that/IN/that /,/, the/DT/the tree/NN/tree must/MD/must have/VB/have height/VBN/height of/IN/of value/NN/value /,/, which/WDT/which is/VBZ/is really/RB/really a/DT/a silly/RB/silly bound/NNP/bound. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to do/VB/do something/NN/something better/NNP/better. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to have/VB/have a/DT/a new/JJ/new strategy/NNP/strategy. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 12/CD/12 /:/: 01/CD/01 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a rough/JJ/rough sketch/NN/sketch of/IN/of the/DT/the strategy/NNP/strategy. so/RB/so /,/, we/PRP/we will/MD/will show/VB/show that/IN/that there/EX/there must/MD/must be/VB/be at/IN/at least/JJS/least n/NN/n factorial/NN/factorial leaves/NNP/leaves. again/RB/again the/DT/the n/NN/n factorial/NN/factorial is/VBZ/is going/VBG/going to/TO/to turn/VB/turn out/RP/out be/VB/be somewhat/RB/somewhat significant/NNP/significant. but/CC/but /,/, we/PRP/we will/MD/will prove/VB/prove that/IN/that in/IN/in fact/NN/fact /,/, there/EX/there must/MD/must be/VB/be n/VBN/n factorial/JJ/factorial leaves/NNS/leaves all/DT/all of/IN/of them/PRP/them giving/VBG/giving yes/NNS/yes answers/NNP/answers. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a interesting/JJ/interesting argument/NNP/argument. and/CC/and we/PRP/we will/MD/will be/VB/be making/VBG/making some/DT/some rather/RB/rather clever/RB/clever use/VB/use of/IN/of n/NN/n dimensional/JJ/dimensional geometry/NNP/geometry. do/VBP/do not/RB/not be/VB/be worried/VBN/worried about/IN/about n/NN/n dimensional/JJ/dimensional geometry/NN/geometry /,/, most/JJS/most of/IN/of the/DT/the time/NN/time for/IN/for the/DT/the purposes/NNS/purposes of/IN/of getting/VBG/getting intuition/NNP/intuition. you/PRP/you can/MD/can visualize/VB/visualize /,/, what/WDT/what is/VBZ/is going/VBG/going on/IN/on in/IN/in two/CD/two or/CC/or three/CD/three dimensions/NNP/dimensions. and/CC/and that/IN/that usually/RB/usually tends/VBZ/tends to/TO/to be/VB/be enough/RB/enough which/WDT/which is/VBZ/is in/IN/in fact/NN/fact /,/, going/VBG/going to/TO/to be/VB/be the/DT/the case/NN/case in/IN/in our/PRP$/our proof/NNP/proof. however/RB/however /,/, if/IN/if we/PRP/we want/VBP/want it/PRP/it algebraically/RB/algebraically write/JJ/write down/IN/down things/NNS/things /,/, the/DT/the arguments/NNS/arguments can/MD/can get/VB/get a/DT/a little/RB/little bit/NN/bit complicated/NNP/complicated. but/CC/but /,/, fortunately/RB/fortunately even/RB/even the/DT/the algebraic/JJ/algebraic argument/NN/argument that/WDT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to show/VB/show you/PRP/you is/VBZ/is going/VBG/going to/TO/to be/VB/be rather/RB/rather simple/NNP/simple. /:/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 12/CD/12 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our main/JJ/main claim/NN/claim again/RB/again /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove that/IN/that the/DT/the time/NN/time required/VBN/required for/IN/for the/DT/the element/NN/element distinctness/NN/distinctness problem/NN/problem is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n on/IN/on the/DT/the decision/NN/decision tree/NN/tree model/NNP/model. let/NN/let me/PRP/me remind/VBP/remind you/PRP/you what/WP/what this/DT/this claim/NN/claim means/NNP/means. so/RB/so /,/, this/DT/this claim/NN/claim asserts/VBZ/asserts a/DT/a problem/NN/problem lower/JJR/lower bound/NN/bound /,/, it/PRP/it says/VBZ/says that/IN/that the/DT/the time/NN/time required/VBN/required for/IN/for this/DT/this problem/NN/problem /,/, irrespective/JJ/irrespective of/IN/of any/DT/any algorithm/NN/algorithm is/VBZ/is this/NNP/this. so/RB/so /,/, it/PRP/it is/VBZ/is not/RB/not a/DT/a bound/NN/bound on/IN/on an/DT/an algorithm/NNP/algorithm. well/RB/well /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to think/VB/think about/IN/about algorithms/NNS/algorithms /,/, it/PRP/it is/VBZ/is a/DT/a bound/NN/bound on/IN/on all/DT/all possible/JJ/possible algorithms/NNS/algorithms /,/, in/IN/in this/DT/this model/NN/model of/IN/of course/NNP/course. here/RB/here is/VBZ/is a/DT/a quick/JJ/quick overview/NN/overview of/IN/of the/DT/the proof/NN/proof /,/, the/DT/the proof/NN/proof is/VBZ/is a/DT/a little/RB/little bit/NN/bit long/RB/long /,/, but/CC/but not/RB/not terribly/RB/terribly so/NNP/so. the/DT/the first/JJ/first idea/NN/idea is/VBZ/is going/VBG/going to/TO/to be/VB/be to/TO/to interpret/VB/interpret our/PRP$/our input/NN/input sequence/NNP/sequence. so/RB/so /,/, we/PRP/we have/VBP/have our/PRP$/our input/NN/input consists/NNS/consists of/IN/of n/NN/n numbers/NNS/numbers x/VBP/x 1/CD/1 /,/, x/NN/x 2/CD/2 all/DT/all the/DT/the way/NN/way till/IN/till x/NN/x n/NNP/n. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to think/VB/think of/IN/of this/DT/this n/NN/n tuple/NN/tuple as/IN/as representing/VBG/representing /,/, the/DT/the coordinates/NNS/coordinates of/IN/of a/DT/a n/NN/n dimensional/JJ/dimensional point/NNP/point. so/RB/so /,/, x/NN/x 1/CD/1 represents/NNS/represents the/DT/the first/JJ/first coordinate/NN/coordinate /,/, x/NN/x 2/CD/2 represents/NNS/represents the/DT/the second/JJ/second coordinate/NN/coordinate /,/, x/NN/x n/NN/n represents/VBZ/represents the/DT/the nth/NN/nth coordinate/NNP/coordinate. and/CC/and the/DT/the entire/JJ/entire thing/NN/thing represents/NNS/represents a/DT/a point/NN/point and/CC/and will/MD/will call/VB/call that/IN/that point/NN/point x/NNP/x. we/PRP/we are/VBP/are going/VBG/going to/TO/to restrict/VB/restrict these/DT/these instances/NNS/instances to/TO/to the/DT/the unit/NN/unit n/NN/n cube/NNP/cube. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/DT/that ?/./? well/RB/well /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to insist/VB/insist that/IN/that all/DT/all the/DT/the x/NN/x i/PRP/i 's/VBZ/'s lie/JJ/lie between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1. we/PRP/we will/MD/will prove/VB/prove the/DT/the lower/JJR/lower bound/NN/bound under/IN/under this/DT/this restriction/NNP/restriction. so/RB/so /,/, that/IN/that should/MD/should not/RB/not be/VB/be a/DT/a cause/NN/cause of/IN/of any/DT/any worry/NNP/worry. if/IN/if we/PRP/we prove/VBP/prove the/DT/the lower/JJR/lower bound/NN/bound under/IN/under this/DT/this restriction/NN/restriction of/IN/of course/NN/course /,/, it/PRP/it works/VBZ/works if/IN/if we/PRP/we do/VBP/do not/RB/not have/VB/have this/DT/this restriction/NNP/restriction. so/RB/so in/IN/in fact/NN/fact /,/, if/IN/if we/PRP/we do/VBP/do not/RB/not have/VB/have this/DT/this restriction/NN/restriction /,/, who/WP/who knows/VBZ/knows things/NNS/things can/MD/can get/VB/get even/RB/even much/RB/much worse/NNP/worse. but/CC/but /,/, we/PRP/we are/VBP/are not/RB/not worried/VBN/worried about/IN/about that/DT/that /,/, we/PRP/we just/RB/just want/VBP/want to/TO/to argue/VB/argue that/IN/that things/NNS/things can/MD/can certainly/RB/certainly get/VB/get at/IN/at least/JJS/least as/IN/as bad/JJ/bad as/IN/as this/NNP/this. and/CC/and so/RB/so it/PRP/it is/VBZ/is to/TO/to have/VB/have this/DT/this restriction/NNP/restriction. here/RB/here is/VBZ/is the/DT/the first/JJ/first claim/NN/claim /,/, that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to make/NNP/make. we/PRP/we will/MD/will use/VB/use the/DT/the notation/NN/notation r/NN/r of/IN/of l/NN/l /,/, which/WDT/which stands/NNS/stands for/IN/for the/DT/the region/NN/region for/IN/for l/NNP/l. so/RB/so /,/, the/DT/the region/NN/region of/IN/of l/NN/l /,/, where/WRB/where l/NN/l is/VBZ/is a/DT/a leaf/NN/leaf is/VBZ/is a/DT/a set/NN/set of/IN/of all/DT/all input/NN/input instances/NNS/instances for/IN/for which/WDT/which leaf/NN/leaf l/NN/l is/VBZ/is reached/VBN/reached at/IN/at the/DT/the end/NN/end of/IN/of execution/NNP/execution. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the definition/NN/definition of/IN/of what/WP/what r/NN/r of/IN/of l/NN/l means/VBZ/means /,/, what/WP/what we/PRP/we are/VBP/are asserting/VBG/asserting is/VBZ/is that/IN/that this/DT/this r/NN/r of/IN/of l/NN/l is/VBZ/is connected/NNP/connected. i/PRP/i will/MD/will explain/VB/explain to/TO/to you/PRP/you what/WP/what connected/VBN/connected means/VBZ/means in/IN/in just/RB/just a/DT/a minute/NNP/minute. but/CC/but /,/, it/PRP/it is/VBZ/is the/DT/the usual/JJ/usual notion/NNP/notion. so/RB/so /,/, a/DT/a region/NN/region is/VBZ/is connected/VBN/connected /,/, if/IN/if it/PRP/it looks/VBZ/looks together/RB/together or/CC/or if/IN/if there/EX/there are/VBP/are two/CD/two points/NNS/points in/IN/in it/NNP/it. and/CC/and they/PRP/they can/MD/can be/VB/be joined/VBN/joined by/IN/by a/DT/a path/NN/path /,/, within/IN/within that/DT/that region/NNP/region. we/PRP/we will/MD/will do/VB/do this/DT/this a/DT/a little/RB/little bit/NN/bit more/JJR/more formally/RB/formally and/CC/and we/PRP/we will/MD/will write/VB/write it/PRP/it in/IN/in a/DT/a minute/NNP/minute. the/DT/the second/JJ/second claim/NN/claim goes/VBZ/goes something/NN/something like/IN/like this/NNP/this. suppose/NN/suppose we/PRP/we have/VBP/have a/DT/a point/NN/point x/NN/x whose/WP$/whose coordinates/NNS/coordinates are/VBP/are distinct/NNP/distinct. so/RB/so /,/, the/DT/the sequence/NN/sequence consist/VBP/consist of/IN/of distinct/JJ/distinct elements/NNS/elements or/CC/or alternately/RB/alternately these/DT/these coordinates/NNS/coordinates are/VBP/are distinct/NNP/distinct. now/RB/now /,/, we/PRP/we take/VBP/take y/NN/y which/WDT/which is/VBZ/is the/DT/the non/NN/non trivial/NN/trivial permutation/NN/permutation of/IN/of these/DT/these coordinates/NNP/coordinates. so/RB/so /,/, here/RB/here is/VBZ/is this/DT/this coordinates/VBZ/coordinates /,/, pre/NN/pre reorder/NN/reorder than/NNP/than. such/JJ/such that/IN/that this/DT/this sequence/NN/sequence and/CC/and this/DT/this sequence/NN/sequence look/NN/look different/NNP/different. that/IN/that is/VBZ/is what/WP/what x/NN/x and/CC/and y/NN/y are/NNP/are. so/RB/so /,/, the/DT/the main/JJ/main claim/NN/claim is/VBZ/is and/CC/and this/DT/this is/VBZ/is the/DT/the key/JJ/key claim/NN/claim in/IN/in this/DT/this entire/JJ/entire proof/NN/proof x/NN/x and/CC/and y/NN/y must/MD/must reach/VB/reach distinct/JJ/distinct yes/NNS/yes leaves/NNP/leaves. so/RB/so /,/, the/DT/the point/NN/point is/VBZ/is this/DT/this /,/, that/IN/that this/DT/this will/MD/will allow/VB/allow us/PRP/us to/TO/to argue/VB/argue /,/, that/IN/that there/EX/there will/MD/will be/VB/be at/IN/at least/JJS/least two/CD/two distinct/NN/distinct leaves/NNS/leaves or/CC/or who/WP/who knows/VBZ/knows more/NNP/more. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will argue/VB/argue in/IN/in fact/NN/fact /,/, based/VBN/based on/IN/on this/DT/this essentially/RB/essentially /,/, that/IN/that the/DT/the number/NN/number of/IN/of yes/NNS/yes leaves/VBZ/leaves is/VBZ/is bigger/JJR/bigger than/IN/than n/NN/n factorial/NNP/factorial. the/DT/the time/NN/time is/VBZ/is simply/RB/simply going/VBG/going to/TO/to be/VB/be the/DT/the height/NN/height of/IN/of such/JJ/such a/DT/a tree/NNP/tree. and/CC/and it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be log/JJ/log of/IN/of n/NN/n factorial/JJ/factorial or/CC/or n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this will/MD/will immediately/RB/immediately follow/VB/follow from/IN/from this/DT/this /,/, we/PRP/we will/MD/will see/VB/see that/IN/that later/NNP/later. so/RB/so /,/, let/VB/let me/PRP/me go/VB/go over/IN/over each/DT/each of/IN/of these/DT/these items/NNP/items. and/CC/and let/VB/let me/PRP/me explain/VB/explain each/DT/each of/IN/of these/DT/these items/NNP/items. so/RB/so /,/, let/VB/let me/PRP/me start/VB/start with/IN/with this/DT/this /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to interpret/VB/interpret /,/, this/DT/this x/NN/x as/IN/as a/DT/a point/NN/point in/IN/in n/NN/n dimensional/JJ/dimensional space/NNP/space. and/CC/and of/IN/of course/NN/course /,/, we/PRP/we are/VBP/are restricting/VBG/restricting the/DT/the points/NNS/points to/TO/to unit/NN/unit n/NN/n cube/NNP/cube. as/IN/as i/PRP/i said/VBD/said /,/, it/PRP/it is/VBZ/is hard/RB/hard to/TO/to visualize/VB/visualize n/NN/n dimensional/JJ/dimensional space/NNP/space. so/RB/so /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to leave/VB/leave it/PRP/it two/CD/two /,/, we/PRP/we will/MD/will visualize/VB/visualize two/CD/two dimensional/JJ/dimensional space/NN/space and/CC/and we/PRP/we will/MD/will say/VB/say what/WP/what happens/NNS/happens ?/./? and/CC/and you/PRP/you must/MD/must note/VB/note that/IN/that /,/, even/RB/even if/IN/if we/PRP/we work/VBP/work with/IN/with two/CD/two dimensions/NNS/dimensions /,/, we/PRP/we will/MD/will get/VB/get enough/RB/enough of/IN/of the/DT/the insight/NNP/insight. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 16/CD/16 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our visualization/NNP/visualization. so/RB/so /,/, our/PRP$/our instance/NN/instance is/VBZ/is this/DT/this x/NN/x that/IN/that first/JJ/first coordinate/NN/coordinate is/VBZ/is x/NN/x 1/CD/1 /,/, second/JJ/second coordinate/NN/coordinate x/NN/x 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our x/NN/x 1/CD/1 axis/NNS/axis /,/, this/DT/this is/VBZ/is our/PRP$/our x/NN/x 2/CD/2 axis/NNP/axis. our/PRP$/our instances/NNS/instances come/VBP/come from/IN/from the/DT/the unit/NN/unit cube/NNP/cube. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the unit/NN/unit cube/NN/cube in/IN/in two/CD/two dimension/NN/dimension /,/, this/DT/this entire/JJ/entire interior/NN/interior is/VBZ/is a/DT/a unit/NN/unit cube/NNP/cube. so/RB/so /,/, this/DT/this is/VBZ/is one/CD/one /,/, this/DT/this is/VBZ/is one/CD/one /,/, this/DT/this is/VBZ/is where/WRB/where our/PRP$/our instances/NNS/instances come/VBP/come from/IN/from /,/, what/WP/what i/PRP/i mean/VBP/mean by/IN/by that/DT/that is/VBZ/is i/PRP/i pick/VBP/pick a/DT/a point/NN/point over/IN/over here/NNP/here. it/PRP/it is/VBZ/is first/JJ/first coordinate/NN/coordinate is/VBZ/is the/DT/the x/NN/x 1/CD/1 value/NN/value /,/, it/PRP/it is/VBZ/is second/JJ/second coordinate/NN/coordinate is/VBZ/is the/DT/the y/NN/y 1/CD/1 value/NNP/value. so/RB/so /,/, let/VB/let me/PRP/me continue/VB/continue the/DT/the analogy/NN/analogy of/IN/of little/JJ/little bit/NN/bit further/RB/further to/TO/to show/VB/show you/PRP/you /,/, what/WP/what we/PRP/we make/VBP/make sure/JJ/sure we/PRP/we understand/VBP/understand at/IN/at least/JJS/least this/DT/this case/NN/case of/IN/of two/CD/two dimensions/NNS/dimensions very/RB/very well/NNP/well. i/PRP/i claim/VBP/claim that/IN/that all/DT/all the/DT/the instances/NNS/instances which/WDT/which lie/NN/lie on/IN/on this/DT/this diagonal/JJ/diagonal are/VBP/are no/DT/no instances/NNS/instances for/IN/for this/DT/this problem/NN/problem of/IN/of size/NN/size two/NNP/two. well/RB/well /,/, what/WDT/what are/VBP/are the/DT/the instances/NNS/instances which/WDT/which lie/NN/lie on/IN/on this/DT/this diagonal/NNP/diagonal. so/RB/so /,/, the/DT/the instances/NNS/instances on/IN/on the/DT/the diagonal/JJ/diagonal simply/NN/simply are/VBP/are those/DT/those points/NNS/points whose/WP$/whose x/NN/x 1/CD/1 coordinate/NN/coordinate is/VBZ/is exactly/RB/exactly equal/JJ/equal to/TO/to the/DT/the x/NN/x 2/CD/2 coordinate/NNP/coordinate. but/CC/but /,/, if/IN/if the/DT/the x/NN/x 1/CD/1 coordinate/NN/coordinate is/VBZ/is equal/JJ/equal to/TO/to the/DT/the x/NN/x 2/CD/2 coordinate/NN/coordinate /,/, then/RB/then we/PRP/we know/VBP/know that/IN/that they/PRP/they may/MD/may n/VB/n dimension/NN/dimension distinct/NNP/distinct. and/CC/and therefore/RB/therefore /,/, these/DT/these points/NNS/points on/IN/on the/DT/the diagonal/JJ/diagonal are/VBP/are in/IN/in fact/NN/fact /,/, the/DT/the no/DT/no instances/NNP/instances. the/DT/the interior/JJ/interior of/IN/of this/DT/this triangle/NN/triangle and/CC/and the/DT/the interior/JJ/interior of/IN/of this/DT/this triangle/NN/triangle are/VBP/are the/DT/the yes/NNS/yes instances/NNP/instances. why/WRB/why /,/, because/IN/because if/IN/if i/PRP/i pick/VBP/pick a/DT/a point/NN/point in/IN/in it/PRP/it /,/, i/PRP/i know/VBP/know that/IN/that the/DT/the x/NN/x and/CC/and y/NN/y coordinates/NNS/coordinates can/MD/can not/RB/not be/VB/be equal/JJ/equal /,/, the/DT/the x/NN/x and/CC/and y/NN/y well/RB/well the/DT/the x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2 coordinates/NNS/coordinates can/MD/can not/RB/not be/VB/be equal/NNP/equal. similarly/RB/similarly /,/, over/IN/over here/RB/here this/DT/this is/VBZ/is the/DT/the line/NN/line which/WDT/which divides/VBZ/divides the/DT/the square/NN/square into/IN/into two/CD/two parts/NNP/parts. and/CC/and this/DT/this is/VBZ/is the/DT/the line/NN/line on/IN/on which/WDT/which the/DT/the x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2 coordinates/NNS/coordinates are/VBP/are in/IN/in fact/NN/fact /,/, equal/NNP/equal. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have done/VBN/done over/IN/over here/RB/here is/VBZ/is /,/, we/PRP/we have/VBP/have taken/VBN/taken our/PRP$/our problem/NNP/problem. and/CC/and we/PRP/we are/VBP/are viewing/VBG/viewing it/PRP/it geometrically/RB/geometrically and/CC/and you/PRP/you will/MD/will see/VB/see /,/, that/IN/that this/DT/this geometric/JJ/geometric view/NN/view point/NN/point gives/VBZ/gives some/DT/some interesting/JJ/interesting insights/NNS/insights /:/( /:/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 25/CD/25 /CD/) /CD/) /./. so/RB/so /,/, we/PRP/we have/VBP/have finished/VBN/finished interpreting/VBG/interpreting these/DT/these instances/NNS/instances in/IN/in a/DT/a two/CD/two dimensional/JJ/dimensional space/NN/space or/CC/or in/IN/in particular/JJ/particular in/IN/in an/DT/an n/NN/n dimensional/JJ/dimensional space/NNP/space. so/RB/so /,/, we/PRP/we have/VBP/have finished/VBN/finished this/DT/this part/NNP/part. we/PRP/we interpreted/VBD/interpreted our/PRP$/our input/NN/input instance/NN/instance /,/, as/IN/as a/DT/a point/NN/point in/IN/in n/NN/n dimensional/JJ/dimensional space/NNP/space. well/RB/well /,/, in/IN/in this/DT/this case/NN/case it/PRP/it was/VBD/was just/RB/just two/CD/two dimensional/JJ/dimensional space/NNP/space. but/CC/but /,/, you/PRP/you should/MD/should get/VB/get the/DT/the idea/NN/idea and/CC/and we/PRP/we also/RB/also restricted/VBD/restricted the/DT/the instance/NN/instance to/TO/to be/VB/be in/IN/in n/NN/n cube/NN/cube /,/, which/WDT/which in/IN/in this/DT/this case/NN/case was/VBD/was just/RB/just the/DT/the unit/NN/unit square/NNP/square. now/RB/now /,/, you/PRP/you want/VBP/want to/TO/to prove/VB/prove this/DT/this claim/NNP/claim. so/RB/so /,/, this/DT/this and/CC/and this/DT/this are/VBP/are the/DT/the two/CD/two main/JJ/main claims/NNP/claims. this/DT/this claim/NN/claim says/VBZ/says /,/, that/IN/that if/IN/if we/PRP/we look/VBP/look at/IN/at the/DT/the region/NN/region of/IN/of this/DT/this cube/NN/cube from/IN/from which/WDT/which instances/NNS/instances will/MD/will reach/VB/reach l/NNP/l. then/RB/then /,/, this/DT/this region/NN/region is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a connected/VBN/connected means/NNP/means. so/RB/so /,/, let/VB/let me/PRP/me start/VB/start by/IN/by defining/NN/defining what/WP/what connected/VBN/connected means/NNP/means. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 21/CD/21 /:/: 21/CD/21 /CD/) a/DT/a connected/JJ/connected region/NN/region in/IN/in n/NN/n dimensional/JJ/dimensional space/NNP/space. so/RB/so is/VBZ/is as/IN/as follows/NNS/follows a/DT/a region/NN/region r/NN/r is/VBZ/is said/VBN/said to/TO/to be/VB/be connected/NNP/connected. if/IN/if for/IN/for any/DT/any points/NNS/points x/VBP/x or/CC/or y/NN/y in/IN/in r/NN/r /,/, there/EX/there exists/NNS/exists a/DT/a path/NN/path from/IN/from x/NN/x to/TO/to y/VB/y passing/NN/passing entirely/RB/entirely through/IN/through r/NNP/r. so/RB/so /,/, we/PRP/we have/VBP/have any/DT/any points/NNS/points x/VBP/x and/CC/and y/NN/y in/IN/in r/NN/r and/CC/and there/EX/there exists/NNS/exists a/DT/a path/NN/path from/IN/from x/NN/x to/TO/to y/VB/y /,/, which/WDT/which goes/VBZ/goes only/RB/only through/IN/through the/DT/the points/NNS/points to/TO/to r/NNP/r. so/RB/so /,/, what/WDT/what is/VBZ/is a/DT/a connected/VBN/connected region/NN/region ?/./? so/RB/so /,/, the/DT/the cube/NN/cube that/IN/that we/PRP/we mentioned/VBD/mentioned for/IN/for example/NN/example /,/, is/VBZ/is a/DT/a connected/VBN/connected region/NN/region the/DT/the interior/JJ/interior of/IN/of it/NNP/it. well/RB/well the/DT/the surface/NN/surface of/IN/of it/PRP/it is/VBZ/is also/RB/also connected/VBN/connected region/NNP/region. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now define/VBP/define a/DT/a convex/NN/convex region/NNP/region. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be needed/VBN/needed in/IN/in the/DT/the proof/NNP/proof. a/DT/a region/NN/region r/NN/r is/VBZ/is said/VBN/said to/TO/to be/VB/be convex/NN/convex /,/, if/IN/if for/IN/for any/DT/any points/NNS/points x/VBP/x and/CC/and y/NN/y in/IN/in that/DT/that region/NNP/region. the/DT/the straight/JJ/straight line/NN/line path/NN/path from/IN/from x/NN/x to/TO/to y/VB/y passes/NNS/passes entirely/RB/entirely through/IN/through r/NNP/r. so/RB/so /,/, here/RB/here we/PRP/we just/RB/just said/VBD/said /,/, that/IN/that the/DT/the any/DT/any path/NN/path that/IN/that some/DT/some path/NN/path passing/VBG/passing from/IN/from x/NN/x to/TO/to y/VB/y /,/, must/MD/must pass/VB/pass entirely/RB/entirely through/IN/through r/NNP/r. now/RB/now /,/, we/PRP/we are/VBP/are making/VBG/making the/DT/the stronger/JJR/stronger requirement/NNP/requirement. so/RB/so /,/, we/PRP/we are/VBP/are now/RB/now saying/VBG/saying /,/, that/IN/that in/IN/in particular/JJ/particular the/DT/the straight/JJ/straight line/NN/line path/NN/path from/IN/from x/NN/x to/TO/to y/VB/y must/MD/must pass/VB/pass through/IN/through r/NNP/r. notice/NN/notice /,/, that/IN/that convexity/NN/convexity is/VBZ/is only/RB/only a/DT/a special/JJ/special case/NN/case of/IN/of connectivity/NNP/connectivity. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words /,/, if/IN/if we/PRP/we know/VBP/know that/IN/that a/DT/a certain/JJ/certain region/NN/region is/VBZ/is convex/NN/convex /,/, then/RB/then it/PRP/it has/VBZ/has to/TO/to be/VB/be connected/VBN/connected of/IN/of course/NNP/course. so/RB/so /,/, the/DT/the reason/NN/reason why/WRB/why we/PRP/we worry/VBP/worry about/IN/about convexity/NN/convexity is/VBZ/is that/IN/that /,/, if/IN/if we/PRP/we look/VBP/look at/IN/at only/RB/only straight/JJ/straight line/NN/line paths/NNS/paths /,/, they/PRP/they are/VBP/are very/RB/very easy/JJ/easy to/TO/to reason/NN/reason with/NNP/with. and/CC/and therefore/RB/therefore /,/, its/PRP$/its often/RB/often much/JJ/much easier/JJR/easier to/TO/to argue/VB/argue /,/, that/IN/that is/VBZ/is a/DT/a certain/JJ/certain region/NN/region is/VBZ/is convex/NNP/convex. so/RB/so /,/, convexity/NN/convexity of/IN/of a/DT/a region/NN/region is/VBZ/is easier/JJR/easier to/TO/to prove/NNP/prove. and/CC/and therefore/RB/therefore /,/, we/PRP/we are/VBP/are worried/VBN/worried about/IN/about convex/NN/convex regions/NNP/regions. but/CC/but /,/, notice/NN/notice that/IN/that if/IN/if we/PRP/we prove/VBP/prove that/IN/that something/NN/something is/VBZ/is convex/NN/convex /,/, we/PRP/we are/VBP/are also/RB/also proving/VBG/proving that/IN/that it/PRP/it is/VBZ/is connected/NNP/connected. so/RB/so /,/, some/DT/some examples/NNS/examples of/IN/of convex/NN/convex objects/NNS/objects are/VBP/are the/DT/the cube/NN/cube /,/, the/DT/the fill/NN/fill the/DT/the whole/JJ/whole cube/NN/cube or/CC/or the/DT/the whole/JJ/whole sphere/NNP/sphere. examples/NNS/examples of/IN/of objects/NNS/objects which/WDT/which are/VBP/are connected/VBN/connected /,/, but/CC/but not/RB/not convex/NN/convex say/VB/say something/NN/something like/IN/like a/DT/a torus/NNP/torus. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw a/DT/a picture/NNP/picture. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 23/CD/23 /:/: 53/CD/53 /CD/) so/RB/so /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a torus/NN/torus /,/, so/RB/so it/PRP/it has/VBZ/has a/DT/a hole/NN/hole in/IN/in it/NNP/it. so/RB/so /,/, if/IN/if i/PRP/i pick/VBP/pick a/DT/a point/NN/point x/NN/x over/IN/over here/RB/here and/CC/and a/DT/a point/NN/point y/NN/y over/IN/over here/NNP/here. then/RB/then /,/, the/DT/the line/NN/line joining/VBG/joining the/DT/the straight/JJ/straight line/NN/line joining/VBG/joining them/PRP/them would/MD/would pass/VB/pass through/IN/through this/DT/this region/NN/region /,/, which/WDT/which is/VBZ/is not/RB/not in/IN/in r/NNP/r. so/RB/so /,/, this/DT/this torus/NN/torus is/VBZ/is itself/PRP/itself in/IN/in r/NN/r /,/, but/CC/but this/DT/this region/NN/region is/VBZ/is not/RB/not is/VBZ/is r/NNP/r. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 17/CD/17 /CD/) a/DT/a kidney/NN/kidney shaped/VBD/shaped region/NN/region or/CC/or a/DT/a cashew/JJ/cashew shaped/VBN/shaped region/NN/region is/VBZ/is also/RB/also not/RB/not convex/NNP/convex. because/IN/because /,/, i/PRP/i can/MD/can take/VB/take a/DT/a point/NN/point x/NN/x over/IN/over here/RB/here /,/, a/DT/a point/NN/point y/NN/y over/IN/over here/RB/here and/CC/and this/DT/this line/NN/line passes/VBZ/passes outside/JJ/outside the/DT/the region/NNP/region. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 33/CD/33 /CD/) if/IN/if i/PRP/i look/VBP/look at/IN/at a/DT/a cube/NN/cube and/CC/and if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at it/PRP/it is/VBZ/is surface/NN/surface not/RB/not the/DT/the interior/NNP/interior. but/CC/but /,/, if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at it/PRP/it is/VBZ/is surface/NN/surface /,/, if/IN/if i/PRP/i take/VBP/take a/DT/a point/NN/point over/IN/over here/RB/here and/CC/and a/DT/a point/NN/point over/IN/over here/RB/here and/CC/and this/DT/this phase/NNP/phase. then/RB/then /,/, the/DT/the line/NN/line joining/VBG/joining them/PRP/them has/VBZ/has the/DT/the straight/JJ/straight line/NN/line joining/VBG/joining them/PRP/them /,/, will/MD/will pass/VB/pass through/IN/through the/DT/the interior/JJ/interior /,/, which/WDT/which is/VBZ/is not/RB/not in/IN/in this/DT/this region/NN/region r/NNP/r. and/CC/and therefore/RB/therefore /,/, this/DT/this shell/NN/shell is/VBZ/is not/RB/not convex/NN/convex either/NNP/either. so/RB/so /,/, that/IN/that describes/NNS/describes what/WP/what connected/VBN/connected means/VBZ/means /:/( /:/( refer/NN/refer time/NN/time /:/: 25/CD/25 /:/: 14/CD/14 /CD/) /CD/) /,/, formally/RB/formally and/CC/and also/RB/also what/WP/what convex/NN/convex means/NNP/means. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 17/CD/17 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our claim/NNP/claim. so/RB/so /,/, we/PRP/we claim/VBP/claim that/IN/that r/NN/r of/IN/of l/NN/l is/VBZ/is the/DT/the set/NN/set of/IN/of instances/NNS/instances for/IN/for which/WDT/which leaf/NN/leaf l/NN/l is/VBZ/is reached/VBN/reached on/IN/on execution/NNP/execution. and/CC/and then/RB/then /,/, we/PRP/we want/VBP/want to/TO/to argue/VB/argue that/IN/that r/NN/r of/IN/of l/NN/l is/VBZ/is convex/NNP/convex. well/RB/well /,/, actually/RB/actually we/PRP/we wanted/VBD/wanted to/TO/to argue/VB/argue /,/, that/IN/that it/PRP/it is/VBZ/is connected/NNP/connected. but/CC/but /,/, we/PRP/we will/MD/will in/IN/in fact/NN/fact /,/, argue/VBP/argue that/IN/that r/NN/r of/IN/of l/NN/l is/VBZ/is convex/NN/convex /,/, which/WDT/which will/MD/will assure/VB/assure that/IN/that it/PRP/it is/VBZ/is also/RB/also connected/NNP/connected. let/VB/let me/PRP/me pictorially/RB/pictorially remind/VBP/remind you/PRP/you /,/, what/WP/what this/DT/this r/NN/r of/IN/of l/NN/l is/NNP/is... /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 53/CD/53 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our decision/NN/decision tree/NN/tree and/CC/and this/DT/this is/VBZ/is leaf/NN/leaf l/NNP/l. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this region/NN/region that/IN/that i/PRP/i am/VBP/am talking/VBG/talking about/IN/about ?/./? well/RB/well /,/, if/IN/if i/PRP/i start/VBP/start with/IN/with any/DT/any instance/NN/instance x/NN/x and/CC/and suppose/VB/suppose i/PRP/i follow/VBP/follow this/DT/this path/NN/path and/CC/and i/PRP/i reach/VBP/reach l/NNP/l. then/RB/then /,/, i/PRP/i will/MD/will say/VB/say that/IN/that this/DT/this instance/NN/instance belongs/VBZ/belongs to/TO/to r/VB/r /,/, if/IN/if execution/NN/execution arrives/NNS/arrives at/IN/at l/NNP/l. so/RB/so /,/, then/RB/then it/PRP/it belongs/VBZ/belongs to/TO/to r/VB/r of/IN/of l/NN/l in/IN/in the/DT/the region/NN/region of/IN/of l/NNP/l. so/RB/so /,/, let/VB/let me/PRP/me first/RB/first begin/VBP/begin by/IN/by giving/VBG/giving some/DT/some intuition/NNP/intuition. so/RB/so /,/, i/PRP/i said/VBD/said that/IN/that x/NN/x is/VBZ/is a/DT/a set/NN/set of/IN/of points/NNS/points /,/, such/JJ/such that/IN/that if/IN/if i/PRP/i start/VBP/start from/IN/from here/RB/here and/CC/and i/PRP/i get/VBP/get eventually/RB/eventually i/PRP/i get/VBP/get to/TO/to l/NNP/l. so/RB/so /,/, what/WDT/what do/VBP/do i/PRP/i know/VB/know about/IN/about x/NN/x ?/./? well/RB/well /,/, each/DT/each node/NN/node that/IN/that is/VBZ/is visited/VBN/visited has/VBZ/has some/DT/some condition/NN/condition associated/VBN/associated with/IN/with it/NNP/it. so/RB/so /,/, may/MD/may be/VB/be here/RB/here the/DT/the comparison/NN/comparison is/VBZ/is between/IN/between i/PRP/i and/CC/and j/NNP/j. and/CC/and say/VB/say this/DT/this is/VBZ/is the/DT/the less/RBR/less than/IN/than path/NN/path /,/, then/RB/then these/DT/these two/CD/two together/RP/together say/NN/say that/IN/that /,/, this/DT/this x/NN/x must/MD/must satisfy/VB/satisfy x/NN/x i/PRP/i less/JJR/less than/IN/than x/NN/x j/NNP/j. may/MD/may be/VB/be this/DT/this label/NN/label over/IN/over here/RB/here is/VBZ/is k/NN/k l/NN/l and/CC/and say/VB/say this/DT/this is/VBZ/is the/DT/the equal/JJ/equal to/TO/to path/NNP/path. then/RB/then /,/, this/DT/this says/VBZ/says that/IN/that the/DT/the condition/NN/condition satisfied/VBD/satisfied must/MD/must be/VB/be x/NN/x k/NN/k equal/JJ/equal to/TO/to x/VB/x l/NNP/l. so/RB/so /,/, if/IN/if any/DT/any instance/NN/instance gets/VBZ/gets to/TO/to this/DT/this level/NN/level l/NN/l /,/, i/PRP/i know/VBP/know that/IN/that all/DT/all of/IN/of these/DT/these conditions/NNS/conditions along/IN/along this/DT/this path/NN/path must/MD/must be/VB/be satisfied/NNP/satisfied. so/RB/so /,/, this/DT/this is/VBZ/is one/CD/one way/NN/way to/TO/to characterize/VB/characterize the/DT/the region/NN/region /,/, the/DT/the set/NN/set of/IN/of points/NNS/points which/WDT/which reach/DT/reach l/NN/l during/IN/during execution/NNP/execution. but/CC/but /,/, notice/NN/notice that/IN/that this/DT/this characterization/NN/characterization is/VBZ/is geometric/NNP/geometric. so/RB/so /,/, this/DT/this just/RB/just says/VBZ/says that/IN/that the/DT/the ith/NN/ith coordinate/NN/coordinate is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the jth/NN/jth coordinate/NNP/coordinate. so/RB/so /,/, this/DT/this is/VBZ/is naturally/RB/naturally putting/VBG/putting our/PRP$/our region/NN/region r/NN/r of/IN/of l/NN/l into/IN/into some/DT/some parts/NNS/parts in/IN/in our/PRP$/our unit/NN/unit cube/NNP/cube. so/RB/so /,/, let/VB/let us/PRP/us start/VB/start with/IN/with this/DT/this root/NN/root itself/NNP/itself. so/RB/so /,/, which/WDT/which are/VBP/are the/DT/the instances/NNS/instances /,/, which/WDT/which can/MD/can visit/VB/visit the/DT/the root/NN/root /,/, well/RB/well at/IN/at the/DT/the root/NN/root any/DT/any instance/NN/instance will/MD/will arrive/NNP/arrive. so/RB/so in/IN/in fact/NN/fact /,/, any/DT/any x/NN/x in/IN/in the/DT/the entire/JJ/entire unit/NN/unit cube/NN/cube /,/, will/MD/will arrive/VB/arrive at/IN/at the/DT/the root/NN/root /,/, will/MD/will start/VB/start at/IN/at the/DT/the root/NNP/root. so/RB/so /,/, instances/NNS/instances visiting/VBG/visiting the/DT/the root/NN/root constitute/NN/constitute the/DT/the entire/JJ/entire cube/NNP/cube. what/WP/what about/IN/about instances/NNS/instances visiting/VBG/visiting this/DT/this node/NN/node ?/./? so/RB/so /,/, this/DT/this node/NN/node is/VBZ/is visited/VBN/visited by/IN/by those/DT/those instances/NNS/instances /,/, for/IN/for which/WDT/which x/NN/x i/PRP/i is/VBZ/is less/JJR/less than/IN/than x/NN/x j/NNP/j. now/RB/now /,/, here/RB/here is/VBZ/is the/DT/the key/JJ/key insight/NNP/insight. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 44/CD/44 /CD/) so/RB/so /,/, asserting/VBG/asserting that/IN/that x/NN/x i/PRP/i is/VBZ/is less/JJR/less than/IN/than x/NN/x j/NN/j is/VBZ/is equivalent/JJ/equivalent to/TO/to saying/VBG/saying that/IN/that /,/, if/IN/if this/DT/this is/VBZ/is our/PRP$/our unit/NN/unit cube/NNP/cube. now/RB/now /,/, i/PRP/i am/VBP/am looking/VBG/looking at/IN/at three/CD/three dimensions/NNS/dimensions and/CC/and may/MD/may be/VB/be this/DT/this is/VBZ/is some/DT/some x/NN/x 1/CD/1 /,/, this/DT/this is/VBZ/is x/NN/x 2/CD/2 /,/, this/DT/this is/VBZ/is x/NN/x 3/CD/3. and/CC/and if/IN/if i/PRP/i say/VBP/say /,/, that/IN/that x/NN/x 3/CD/3 is/VBZ/is say/JJ/say less/NN/less than/IN/than x/NN/x 1/CD/1 what/WP/what do/VBP/do i/PRP/i do/VBP/do ?/./? well/RB/well /,/, i/PRP/i will/MD/will look/VB/look at/IN/at this/DT/this x/NN/x 3/CD/3 and/CC/and i/PRP/i look/VBP/look at/IN/at this/DT/this x/NN/x 1/CD/1. and/CC/and then/RB/then i/PRP/i look/VBP/look at/IN/at first/JJ/first /,/, that/IN/that portion/NN/portion where/WRB/where x/NN/x 3/CD/3 is/VBZ/is equal/JJ/equal to/TO/to x/VB/x 1/CD/1. so/RB/so /,/, it/PRP/it is/VBZ/is this/DT/this /,/, it/PRP/it is/VBZ/is this/DT/this plane/NN/plane let/VBD/let me/PRP/me just/RB/just shade/VBP/shade it/NNP/it. so/RB/so /,/, it/PRP/it is/VBZ/is this/DT/this slice/NN/slice through/IN/through the/DT/the centre/NN/centre of/IN/of that/DT/that cub/NNP/cub. that/IN/that is/VBZ/is /,/, where/WRB/where x/NN/x 3/CD/3 is/VBZ/is equal/JJ/equal to/TO/to x/VB/x 1/CD/1 and/CC/and if/IN/if i/PRP/i want/VBP/want x/NN/x 3/CD/3 to/TO/to be/VB/be smaller/NNP/smaller. then/RB/then /,/, which/WDT/which side/NN/side should/MD/should i/VB/i take/VB/take then/RB/then x/VB/x 1/CD/1. so/RB/so /,/, i/PRP/i want/VBP/want x/NN/x 1/CD/1 to/TO/to be/VB/be larger/JJR/larger and/CC/and x/NN/x 3/CD/3 top/JJ/top be/NN/be smaller/NNP/smaller. so/RB/so in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is the/DT/the entire/JJ/entire region/NNP/region. so/RB/so in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is this/DT/this region/NN/region /,/, the/DT/the wedge/NN/wedge shaped/VBD/shaped region/NN/region that/IN/that is/VBZ/is facing/VBG/facing us/NNP/us. so/RB/so /,/, the/DT/the idea/NN/idea is/VBZ/is this/DT/this /,/, the/DT/the moment/NN/moment i/PRP/i assert/VBP/assert a/DT/a condition/NN/condition /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to slice/NN/slice my/PRP$/my current/NN/current set/NNP/set. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take one/CD/one part/NN/part of/IN/of it/PRP/it /,/, if/IN/if my/PRP$/my assertion/NN/assertion was/VBD/was something/NN/something like/IN/like x/NN/x 3/CD/3 equal/JJ/equal to/TO/to x/VB/x 1/CD/1 then/RB/then i/PRP/i won/VBD/won not/RB/not take/VB/take one/CD/one part/NN/part /,/, but/CC/but i/PRP/i will/MD/will take/VB/take that/IN/that slicing/VBG/slicing region/NN/region itself/NNP/itself. so/RB/so /,/, notice/NN/notice that/IN/that i/PRP/i started/VBD/started off/RP/off with/IN/with the/DT/the entire/JJ/entire cube/NN/cube which/WDT/which is/VBZ/is convex/NNP/convex. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 18/CD/18 /CD/) and/CC/and the/DT/the important/JJ/important point/NN/point is/VBZ/is that/IN/that /,/, whenever/RB/whenever i/PRP/i go/VBP/go to/TO/to a/DT/a child/NN/child as/IN/as in/IN/in this/NNP/this. i/PRP/i am/VBP/am going/VBG/going to/TO/to shrink/VB/shrink the/DT/the set/NN/set of/IN/of instances/NNS/instances /,/, which/WDT/which visit/NN/visit this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 30/CD/30 /:/: 28/CD/28 /CD/) /CD/) /./. and/CC/and when/WRB/when i/PRP/i shrink/VBP/shrink them/PRP/them /,/, i/PRP/i will/MD/will be/VB/be shrinking/VBG/shrinking them/PRP/them in/IN/in a/DT/a convex/NN/convex manner/NNP/manner. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 36/CD/36 /CD/) so/RB/so /,/, it/PRP/it is/VBZ/is sort/NN/sort of/IN/of i/PRP/i will/MD/will take/VB/take my/PRP$/my region/NN/region i/PRP/i will/MD/will take/VB/take a/DT/a region/NN/region /,/, which/WDT/which is/VBZ/is convex/NN/convex then/RB/then i/PRP/i will/MD/will slice/VB/slice of/IN/of a/DT/a part/NN/part of/IN/of it/NNP/it. but/CC/but /,/, this/DT/this slicing/NN/slicing operation/NN/operation maintains/VBZ/maintains convexity/NNP/convexity. so/RB/so /,/, that/IN/that is/VBZ/is roughly/RB/roughly the/DT/the idea/NNP/idea. so/RB/so /,/, even/RB/even if/IN/if i/PRP/i do/VBP/do it/PRP/it several/JJ/several times/NNS/times /,/, the/DT/the region/NN/region that/IN/that i/PRP/i am/VBP/am left/VBN/left with/IN/with at/IN/at the/DT/the end/NN/end is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a convex/NN/convex region/NNP/region. and/CC/and therefore/RB/therefore /,/, also/RB/also connected/VBD/connected region/NN/region /,/, that/IN/that is/VBZ/is roughly/RB/roughly the/DT/the argument/NNP/argument. so/RB/so /,/, now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see it/PRP/it more/JJR/more formally/RB/formally /:/( /:/( refer/NN/refer time/NN/time /:/: 31/CD/31 /:/: 05/CD/05 /CD/) /CD/) /./. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the proof/NN/proof /,/, suppose/NN/suppose x/NN/x and/CC/and y/NN/y are/VBP/are two/CD/two points/NNS/points in/IN/in r/NN/r in/IN/in this/DT/this region/NNP/region. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to consider/VB/consider three/CD/three execution/NNP/execution. in/IN/in the/DT/the first/JJ/first execution/NN/execution the/DT/the instance/NN/instance is/VBZ/is going/VBG/going to/TO/to be/VB/be x/NN/x /,/, what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about this/DT/this ?/./? i/PRP/i know/VBP/know that/IN/that l/NN/l is/VBZ/is reached/VBN/reached by/IN/by definition/NN/definition /,/, by/IN/by our/PRP$/our assumption/NN/assumption that/IN/that x/NN/x and/CC/and y/NN/y are/VBP/are points/NNS/points in/IN/in r/NN/r of/IN/of l/NNP/l. so/RB/so /,/, when/WRB/when i/PRP/i finish/VBP/finish this/DT/this execution/NN/execution i/PRP/i know/VBP/know that/IN/that l/NN/l is/VBZ/is reached/NNP/reached. in/IN/in execution/NN/execution 2/CD/2 i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start with/IN/with y/NNP/y. what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about this/DT/this ?/./? well/RB/well /,/, i/PRP/i know/VBP/know that/IN/that for/IN/for this/DT/this point/NN/point as/IN/as well/RB/well l/JJ/l is/VBZ/is reached/NNP/reached. so/RB/so /,/, even/RB/even for/IN/for this/DT/this point/NN/point l/NN/l is/VBZ/is reached/VBN/reached right/RB/right /,/, again/RB/again that/IN/that is/VBZ/is because/IN/because i/PRP/i said/VBD/said that/IN/that y/NN/y belongs/NNS/belongs to/TO/to r/VB/r of/IN/of l/NN/l which/WDT/which is/VBZ/is nothing/NN/nothing but/CC/but saying/VBG/saying if/IN/if i/PRP/i do/VBP/do an/DT/an execution/NN/execution with/IN/with instance/NN/instance my/PRP$/my instance/NN/instance equal/JJ/equal to/TO/to y/VB/y i/PRP/i will/MD/will reach/VB/reach that/IN/that same/JJ/same leaf/NNP/leaf. my/PRP$/my third/JJ/third execution/NN/execution is/VBZ/is the/DT/the interesting/JJ/interesting execution/NNP/execution. here/RB/here /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start off/RP/off with/IN/with an/DT/an instance/NN/instance which/WDT/which i/PRP/i will/MD/will call/VB/call z/NNP/z. z/NN/z let/VBD/let me/PRP/me remind/VBP/remind you/PRP/you has/VBZ/has n/VBN/n coordinates/NNS/coordinates /,/, just/RB/just like/IN/like x/NN/x and/CC/and y/NNP/y. so/RB/so /,/, i/PRP/i will/MD/will call/VB/call those/DT/those z/NN/z 1/CD/1 /,/, z/NN/z 2/CD/2 all/DT/all the/DT/the way/NN/way till/IN/till z/NN/z n/NNP/n. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to set/VB/set z/NN/z i/PRP/i in/IN/in a/DT/a curious/JJ/curious looking/NN/looking manner/NNP/manner. z/NN/z i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be lambda/NN/lambda times/NNS/times x/VBP/x i/PRP/i /,/, where/WRB/where lambda/NN/lambda is/VBZ/is some/DT/some positive/JJ/positive number/NN/number between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1. i/PRP/i will/MD/will tell/VB/tell you/PRP/you more/JJR/more i/PRP/i will/MD/will write/VB/write that/IN/that down/IN/down in/IN/in a/DT/a minute/NN/minute /,/, and/CC/and lambda/NN/lambda times/NNS/times x/VBP/x i/PRP/i plus/RB/plus 1/CD/1 minus/NN/minus lambda/NN/lambda times/NNS/times y/VBP/y i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how each/DT/each z/NN/z i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be set/NNP/set. so/RB/so /,/, it/PRP/it will/MD/will be/VB/be some/DT/some kind/NN/kind of/IN/of an/DT/an average/JJ/average of/IN/of x/NN/x i/PRP/i and/CC/and y/JJ/y i/NN/i /,/, where/WRB/where the/DT/the weights/NNS/weights for/IN/for x/NN/x i/PRP/i and/CC/and lambda/NNP/lambda. and/CC/and the/DT/the remaining/VBG/remaining weights/NNS/weights come/VBP/come from/IN/from y/NNP/y. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take the/DT/the case/NN/case lambda/NN/lambda equal/JJ/equal to/TO/to 0/-NONE-/0 what/WP/what does/VBZ/does it/PRP/it mean/NNP/mean. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take lambda/NN/lambda is/VBZ/is equal/JJ/equal to/TO/to 0/-NONE-/0 /,/, then/RB/then this/DT/this part/NN/part goes/VBZ/goes away/RB/away and/CC/and i/PRP/i get/VBP/get y/NNP/y. if/IN/if i/PRP/i get/VBP/get lambda/NN/lambda equal/JJ/equal to/TO/to 1/CD/1 /,/, this/DT/this part/NN/part goes/VBZ/goes away/RB/away and/CC/and i/PRP/i get/VBP/get x/NNP/x. and/CC/and if/IN/if lambda/NN/lambda is/VBZ/is somewhere/RB/somewhere in/IN/in between/IN/between /,/, what/WP/what do/VBP/do i/PRP/i get/VB/get ?/./? if/IN/if lambda/NN/lambda is/VBZ/is equal/JJ/equal to/TO/to half/DT/half /,/, then/RB/then i/PRP/i get/VBP/get half/DT/half of/IN/of this/DT/this and/CC/and half/DT/half of/IN/of this/NNP/this. and/CC/and in/IN/in fact/NN/fact /,/, i/PRP/i get/VBP/get the/DT/the midpoint/NN/midpoint of/IN/of line/NN/line segment/NN/segment x/NN/x /,/, y/NNP/y. if/IN/if i/PRP/i take/VBP/take other/JJ/other values/NNS/values of/IN/of lambda/NN/lambda i/PRP/i will/MD/will likewise/VB/likewise get/VB/get /,/, points/NNS/points on/IN/on the/DT/the line/NN/line segment/NN/segment joining/VBG/joining x/NN/x and/CC/and y/NN/y /,/, the/DT/the straight/JJ/straight line/NN/line segment/NN/segment line/NN/line joining/VBG/joining x/NN/x and/CC/and y/NNP/y. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the key/JJ/key behind/NN/behind /,/, this/DT/this is/VBZ/is the/DT/the key/JJ/key part/NN/part of/IN/of the/DT/the definition/NN/definition set/NNP/set. i/PRP/i am/VBP/am going/VBG/going to/TO/to i/PRP/i have/VBP/have defined/VBN/defined z/NN/z /,/, so/RB/so that/IN/that it/PRP/it happens/VBZ/happens to/TO/to be/VB/be on/IN/on this/DT/this straight/JJ/straight line/NN/line x/NN/x /,/, y/NNP/y. and/CC/and so/RB/so long/RB/long as/IN/as i/PRP/i restrict/VBP/restrict lambda/NN/lambda between/IN/between 0/-NONE-/0 and/CC/and 1/CD/1 /,/, it/PRP/it will/MD/will be/VB/be in/IN/in the/DT/the interior/JJ/interior of/IN/of this/DT/this line/NN/line segment/NN/segment x/NN/x /,/, y/NNP/y. so/RB/so /,/, what/WDT/what do/VBP/do i/PRP/i have/VB/have to/TO/to prove/VB/prove in/IN/in order/NN/order to/TO/to i/PRP/i give/VBP/give that/IN/that /,/, this/DT/this r/NN/r of/IN/of l/NN/l is/VBZ/is convex/NNP/convex. well/RB/well /,/, the/DT/the definition/NN/definition says/VBZ/says that/IN/that straight/JJ/straight line/NN/line path/NN/path must/MD/must lie/VB/lie inside/NN/inside of/IN/of r/NN/r of/IN/of l/NNP/l. if/IN/if i/PRP/i prove/VBP/prove that/IN/that then/RB/then i/PRP/i am/VBP/am done/NN/done /,/, that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/NNP/do. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to analyze/VB/analyze this/DT/this execution/NN/execution 3/CD/3 and/CC/and figure/NN/figure out/RP/out what/WP/what happens/NNS/happens during/IN/during execution/NNP/execution. so/RB/so /,/, let/VB/let us/PRP/us start/VB/start with/IN/with root/NN/root /,/, the/DT/the root/NN/root label/NN/label is/VBZ/is i/PRP/i colon/VBP/colon j/NNP/j. and/CC/and suppose/VB/suppose /,/, the/DT/the less/JJR/less than/IN/than branch/NN/branch is/VBZ/is taken/VBN/taken in/IN/in execution/NN/execution 1/CD/1. i/PRP/i am/VBP/am just/RB/just taking/VBG/taking this/DT/this as/IN/as an/DT/an example/NN/example /,/, the/DT/the argument/NN/argument will/MD/will really/RB/really work/VB/work for/IN/for every/DT/every possible/JJ/possible branch/NNP/branch. so/RB/so /,/, the/DT/the less/JJR/less than/IN/than branch/NN/branch is/VBZ/is taken/VBN/taken in/IN/in this/DT/this execution/NNP/execution. in/IN/in this/DT/this execution/NN/execution /,/, what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about this/DT/this execution/NN/execution ?/./? well/RB/well /,/, clearly/RB/clearly the/DT/the same/JJ/same branch/NN/branch will/MD/will be/VB/be taken/VBN/taken in/IN/in execution/NN/execution 2/CD/2. why/WRB/why ?/./? well/RB/well /,/, in/IN/in execution/NN/execution 2/CD/2 we/PRP/we reach/VBP/reach final/JJ/final finally/RB/finally /,/, the/DT/the same/JJ/same leaf/NNP/leaf. and/CC/and there/EX/there is/VBZ/is only/RB/only one/CD/one way/NN/way to/TO/to get/VB/get at/IN/at that/DT/that leaf/NNP/leaf. and/CC/and therefore/RB/therefore /,/, it/PRP/it had/VBD/had better/RBR/better be/VB/be along/IN/along the/DT/the same/JJ/same path/NNP/path. so/IN/so /,/, even/RB/even in/IN/in this/DT/this second/JJ/second execution/NN/execution /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to follow/VB/follow the/DT/the same/JJ/same branch/NNP/branch. what/WP/what can/MD/can we/PRP/we conclude/VBP/conclude from/IN/from that/DT/that ?/./? so/RB/so /,/, from/IN/from the/DT/the fact/NN/fact that/IN/that in/IN/in the/DT/the first/JJ/first execution/NN/execution /,/, this/DT/this branch/NN/branch was/VBD/was taken/NNP/taken. it/PRP/it clearly/RB/clearly means/VBZ/means /,/, that/IN/that x/NN/x i/PRP/i and/CC/and x/VB/x j/NN/j got/VBD/got compared/VBN/compared and/CC/and x/NN/x i/PRP/i turned/VBD/turned out/RP/out to/TO/to be/VB/be less/JJR/less than/IN/than x/NN/x j/NNP/j. in/IN/in the/DT/the second/JJ/second execution/NN/execution y/NN/y i/PRP/i and/CC/and y/JJ/y j/NN/j got/VBD/got compared/NNP/compared. and/CC/and y/NN/y i/PRP/i turned/VBD/turned out/RP/out to/TO/to be/VB/be less/JJR/less than/IN/than y/NN/y j/NNP/j. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we know/VBP/know /,/, if/IN/if we/PRP/we assume/VBP/assume that/IN/that the/DT/the less/JJR/less than/IN/than branch/NN/branch was/VBD/was taken/VBN/taken in/IN/in this/DT/this execution/NNP/execution. now/RB/now /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to multiply/RB/multiply this/DT/this by/IN/by lambda/NN/lambda and/CC/and this/DT/this by/IN/by 1/CD/1 minus/NN/minus lambda/NN/lambda and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to add/VB/add these/DT/these two/CD/two things/NNP/things. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what happens/NNP/happens. so/RB/so /,/, i/PRP/i claim/VBP/claim that/IN/that i/PRP/i get/VBP/get this/DT/this inequality/NN/inequality /,/, let/VB/let us/PRP/us check/VB/check that/IN/that out/NNP/out. from/IN/from the/DT/the left/NN/left hand/NN/hand side/NN/side i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get from/IN/from this/DT/this inequality/NN/inequality lambda/NN/lambda times/NNS/times x/VBP/x i/PRP/i /,/, which/WDT/which i/PRP/i have/VBP/have got/VBN/got over/IN/over here/NNP/here. from/IN/from this/DT/this i/NN/i will/MD/will get/VB/get 1/CD/1 minus/NN/minus lambda/NN/lambda times/NNS/times y/VBP/y i/PRP/i /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i have/VBP/have got/VBN/got over/IN/over here/NNP/here. on/IN/on the/DT/the right/NN/right side/NN/side i/PRP/i got/VBD/got lambda/NN/lambda times/NNS/times x/VBP/x j/NN/j from/IN/from this/DT/this inequality/NN/inequality and/CC/and from/IN/from this/DT/this inequality/NN/inequality i/PRP/i got/VBD/got 1/CD/1 minus/NN/minus lambda/NN/lambda times/NNS/times y/VBP/y j/NNP/j. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have now/RB/now is/VBZ/is this/DT/this inequality/NNP/inequality. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the inequality/NN/inequality that/IN/that we/PRP/we got/VBD/got /,/, let/VB/let me/PRP/me just/RB/just complete/JJ/complete this/DT/this argument/NNP/argument. so/RB/so /,/, to/TO/to complete/VB/complete this/DT/this argument/NN/argument what/WP/what we/PRP/we have/VBP/have is/VBZ/is /,/, that/IN/that this/DT/this part/NN/part is/VBZ/is simply/RB/simply z/NN/z i/PRP/i and/CC/and this/DT/this part/NN/part is/VBZ/is simply/RB/simply z/NN/z j/NN/j /,/, so/RB/so this/DT/this is/VBZ/is z/NN/z i/PRP/i this/DT/this is/VBZ/is z/NN/z j/NNP/j. so/RB/so /,/, we/PRP/we have/VBP/have concluded/VBN/concluded /,/, that/IN/that z/NN/z i/PRP/i must/MD/must be/VB/be less/RBR/less than/IN/than z/NN/z j/NNP/j. but/CC/but /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we wanted/VBD/wanted /,/, why/WRB/why ?/./? because/IN/because /,/, if/IN/if z/NN/z i/PRP/i is/VBZ/is less/JJR/less than/IN/than z/NN/z j/NN/j /,/, we/PRP/we know/VBP/know that/IN/that the/DT/the less/JJR/less than/IN/than branch/NN/branch will/MD/will also/RB/also be/VB/be taken/VBN/taken in/IN/in execution/NN/execution 3/CD/3. so/RB/so /,/, for/IN/for this/DT/this first/JJ/first root/NN/root we/PRP/we have/VBP/have proved/VBN/proved that/IN/that execution/NN/execution 3/CD/3 will/MD/will follow/VB/follow the/DT/the same/JJ/same path/NN/path /,/, as/IN/as that/DT/that followed/VBN/followed by/IN/by execution/NN/execution 1/CD/1 and/CC/and execution/NN/execution 2/CD/2. so/RB/so /,/, this/DT/this argument/NN/argument can/MD/can be/VB/be made/VBN/made if/IN/if instead/RB/instead of/IN/of less/JJR/less /:/( /:/( refer/NN/refer time/NN/time /:/: 37/CD/37 /:/: 38/CD/38 /CD/) /CD/) than/IN/than we/PRP/we took/VBD/took some/DT/some of/IN/of the/DT/the other/NNP/other. and/CC/and we/PRP/we can/MD/can make/VB/make it/PRP/it at/IN/at every/DT/every node/NN/node along/IN/along that/DT/that path/NNP/path. and/CC/and so/RB/so we/PRP/we can/MD/can argue/VB/argue that/IN/that finally/RB/finally /,/, l/NN/l is/VBZ/is going/VBG/going to/TO/to be/VB/be reached/NNP/reached. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have argued/VBN/argued is/VBZ/is that/IN/that /,/, z/NN/z will/MD/will reach/VB/reach l/NN/l z/NN/z is/VBZ/is any/DT/any point/NN/point on/IN/on this/DT/this line/NN/line segment/NNP/segment. and/CC/and so/RB/so if/IN/if i/PRP/i start/VBP/start with/IN/with any/DT/any point/NN/point on/IN/on this/DT/this line/NN/line segment/NN/segment i/PRP/i reach/VBP/reach l/NNP/l. and/CC/and therefore/RB/therefore /,/, i/PRP/i have/VBP/have concluded/VBN/concluded that/IN/that r/NN/r of/IN/of l/NN/l is/VBZ/is convex/NNP/convex. so/RB/so /,/, i/PRP/i have/VBP/have proved/VBN/proved this/DT/this claim/NNP/claim. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now turn/VBP/turn to/TO/to the/DT/the next/JJ/next claim/NNP/claim. so/RB/so /,/, this/DT/this claim/NN/claim says/VBZ/says that/IN/that /CD/( /CD/( refer/NN/refer time/NN/time /:/: 38/CD/38 /:/: 20/CD/20 /CD/) /CD/) if/IN/if i/PRP/i have/VBP/have a/DT/a point/NN/point or/CC/or an/DT/an instance/NN/instance x/NN/x /,/, whose/WP$/whose all/DT/all coordinates/NNS/coordinates are/VBP/are distinct/NNP/distinct. and/CC/and y/NN/y is/VBZ/is another/DT/another non/NN/non is/VBZ/is a/DT/a permutation/NN/permutation on/IN/on this/DT/this /,/, which/WDT/which is/VBZ/is not/RB/not exactly/RB/exactly equal/NNP/equal. then/RB/then /,/, x/NN/x and/CC/and y/NN/y must/MD/must reach/VB/reach distinct/JJ/distinct leaves/NNP/leaves. of/IN/of course/NN/course /,/, they/PRP/they must/MD/must reach/VB/reach yes/NNS/yes leaves/NNS/leaves /,/, because/IN/because their/PRP$/their coordinates/NNS/coordinates are/VBP/are all/DT/all different/NNP/different. but/CC/but in/IN/in fact/NN/fact the/DT/the claim/NN/claim asserts/VBZ/asserts that/IN/that they/PRP/they must/MD/must reach/VB/reach distinct/JJ/distinct yes/NNS/yes leaves/NNP/leaves. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 38/CD/38 /:/: 50/CD/50 /CD/) so/RB/so /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to prove/VB/prove this/NNP/this. so/RB/so /,/, x/NN/x consists/NNS/consists of/IN/of distinct/JJ/distinct values/NNS/values /,/, means/VBZ/means the/DT/the answer/NN/answer of/IN/of x/NN/x must/MD/must be/VB/be yes/NNS/yes /,/, y/NN/y is/VBZ/is some/DT/some permutation/NN/permutation sigma/NNP/sigma. so/RB/so /,/, the/DT/the answer/NN/answer to/TO/to y/VB/y is/VBZ/is also/RB/also yes/NNP/yes. we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/VB/prove this/DT/this result/NN/result by/IN/by contradiction/NNP/contradiction. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that say/NN/say x/NN/x and/CC/and y/NN/y reach/NN/reach the/DT/the same/JJ/same leaf/NN/leaf l/NNP/l. then/RB/then /,/, we/PRP/we know/VBP/know that/IN/that every/DT/every the/DT/the region/NN/region corresponding/VBG/corresponding to/TO/to every/DT/every leaf/NN/leaf l/NN/l is/VBZ/is a/DT/a connected/VBN/connected region/NNP/region. if/IN/if it/PRP/it is/VBZ/is a/DT/a connected/VBN/connected region/NN/region /,/, then/RB/then there/EX/there has/VBZ/has to/TO/to exist/VB/exist a/DT/a path/NN/path p/NN/p from/IN/from x/NN/x to/TO/to y/VB/y /,/, which/WDT/which passes/NNS/passes entirely/RB/entirely through/IN/through l/NNP/l. this/DT/this is/VBZ/is what/WP/what we/PRP/we know/VBP/know from/IN/from the/DT/the previous/JJ/previous claim/NNP/claim. so/RB/so /,/, what/WDT/what we/PRP/we will/MD/will show/VB/show /,/, that/IN/that if/IN/if you/PRP/you tell/VBP/tell me/PRP/me that/IN/that it/PRP/it is/VBZ/is this/DT/this path/NN/path i/PRP/i will/MD/will show/VB/show /,/, that/IN/that there/EX/there exists/NNS/exists a/DT/a point/NN/point z/NN/z on/IN/on this/DT/this path/NN/path p/NN/p /,/, such/JJ/such that/IN/that the/DT/the answer/NN/answer to/TO/to z/VB/z is/VBZ/is no/NNP/no. now/RB/now /,/, this/DT/this will/MD/will be/VB/be a/DT/a contradiction/NN/contradiction /,/, because/IN/because z/NN/z lies/NNS/lies on/IN/on p/NN/p /,/, p/NN/p supposed/VBD/supposed to/TO/to lie/VB/lie inside/NN/inside r/NN/r of/IN/of l/NNP/l. and/CC/and what/WP/what we/PRP/we have/VBP/have argued/VBN/argued is/VBZ/is that/IN/that /,/, the/DT/the answer/NN/answer is/VBZ/is no/DT/no whereas/NN/whereas /,/, the/DT/the answer/NN/answer for/IN/for l/NN/l is/VBZ/is supposed/VBN/supposed to/TO/to be/VB/be yes/NNP/yes. so/RB/so /,/, this/DT/this would/MD/would be/VB/be the/DT/the contradiction/NNP/contradiction. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do ?/./? let/VB/let me/PRP/me start/VB/start with/IN/with the/DT/the sub/NN/sub claim/NNP/claim. the/DT/the sub/NN/sub claim/NN/claim says/VBZ/says that/IN/that there/EX/there have/VBP/have to/TO/to exist/VB/exist i/PRP/i and/CC/and j/NNP/j. such/JJ/such that/IN/that /,/, the/DT/the ith/NN/ith coordinate/NN/coordinate of/IN/of x/NN/x is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than the/DT/the jth/NN/jth coordinate/NN/coordinate of/IN/of x/NN/x /,/, whereas/VBZ/whereas the/DT/the ith/NN/ith coordinate/NN/coordinate of/IN/of y/NN/y is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the jth/NN/jth coordinate/NN/coordinate of/IN/of y/NNP/y. i/PRP/i will/MD/will prove/VB/prove this/DT/this in/IN/in a/DT/a minute/NNP/minute. but/CC/but /,/, let/VB/let me/PRP/me just/RB/just examine/VBP/examine it/PRP/it is/VBZ/is implications/NNP/implications. so/RB/so in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to give/VB/give us/PRP/us the/DT/the proof/NN/proof almost/RB/almost immediately/NNP/immediately. so/RB/so /,/, let/VB/let me/PRP/me define/VB/define a/DT/a function/NN/function f/NN/f in/IN/in this/DT/this space/NN/space /,/, where/WRB/where f/NN/f for/IN/for a/DT/a point/NN/point w/NN/w is/VBZ/is simply/RB/simply the/DT/the difference/NN/difference between/IN/between the/DT/the ith/NN/ith and/CC/and the/DT/the jth/NN/jth coordinates/NNP/coordinates. so/RB/so /,/, what/WDT/what is/VBZ/is f/NN/f of/IN/of x/NN/x /,/, f/NN/f of/IN/of x/NN/x is/VBZ/is x/NN/x i/PRP/i minus/VBZ/minus x/NN/x j/NN/j /,/, but/CC/but x/NN/x i/PRP/i is/VBZ/is smaller/JJR/smaller than/IN/than x/NN/x j/NNP/j. so/RB/so /,/, f/NN/f of/IN/of x/NN/x is/VBZ/is less/JJR/less than/IN/than 0/-NONE-/0 /,/, what/WP/what is/VBZ/is f/NN/f of/IN/of y/NN/y ?/./? well/RB/well /,/, y/JJ/y i/PRP/i is/VBZ/is bigger/JJR/bigger than/IN/than y/NN/y j/NNP/j. so/RB/so /,/, y/JJ/y i/PRP/i minus/VBZ/minus y/JJ/y j/NN/j is/VBZ/is bigger/JJR/bigger than/IN/than 0/-NONE-/0 and/CC/and f/NN/f y/NN/y is/VBZ/is bigger/JJR/bigger than/IN/than 0/CD/0. so/RB/so /,/, f/NN/f of/IN/of x/NN/x is/VBZ/is less/JJR/less than/IN/than 0/-NONE-/0 /,/, f/NN/f of/IN/of y/NN/y is/VBZ/is bigger/JJR/bigger than/IN/than 0/-NONE-/0 /,/, they/PRP/they are/VBP/are joined/VBN/joined by/IN/by this/DT/this continuous/JJ/continuous path/NN/path p/NNP/p. so/RB/so /,/, what/WDT/what happens/NNS/happens is/VBZ/is we/PRP/we move/VBP/move along/IN/along this/DT/this path/NN/path from/IN/from x/NN/x to/TO/to y/NNP/y. the/DT/the path/NN/path is/VBZ/is continuous/JJ/continuous /,/, this/DT/this is/VBZ/is a/DT/a continuous/JJ/continuous function/NNP/function. and/CC/and so/RB/so /,/, by/IN/by the/DT/the mean/JJ/mean value/NN/value theorem/NN/theorem /,/, there/EX/there has/VBZ/has to/TO/to exist/VB/exist a/DT/a point/NN/point z/NN/z on/IN/on p/NN/p such/JJ/such that/IN/that f/NN/f of/IN/of z/NN/z is/VBZ/is 0/CD/0. if/IN/if f/NN/f of/IN/of z/NN/z is/VBZ/is equal/JJ/equal to/TO/to 0/-NONE-/0 /,/, what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? this/DT/this means/VBZ/means that/IN/that z/NN/z i/PRP/i equal/JJ/equal to/TO/to z/VB/z j/NN/j /,/, but/CC/but z/NN/z i/PRP/i equal/JJ/equal to/TO/to z/VB/z j/NN/j /,/, then/RB/then two/CD/two coordinates/NNS/coordinates are/VBP/are equal/NNP/equal. that/IN/that means/VBZ/means /,/, the/DT/the answer/NN/answer to/TO/to z/VB/z is/VBZ/is no/NNP/no. the/DT/the coordinates/NNS/coordinates are/VBP/are not/RB/not distinct/NNP/distinct. so/RB/so /,/, the/DT/the answer/NN/answer is/VBZ/is a/DT/a no/DT/no /,/, but/CC/but this/DT/this supposed/VBN/supposed to/TO/to be/VB/be a/DT/a point/NN/point inside/NN/inside r/NN/r of/IN/of l/NNP/l. so/RB/so /,/, the/DT/the answer/NN/answer had/VBD/had better/RBR/better been/VBN/been yes/NNS/yes /,/, so/RB/so there/RB/there is/VBZ/is a/DT/a contradiction/NNP/contradiction. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved our/PRP$/our basic/JJ/basic claim/NNP/claim. so/RB/so /,/, all/DT/all that/DT/that remains/VBZ/remains now/RB/now is/VBZ/is to/TO/to prove/VB/prove this/DT/this sub/NN/sub claim/NNP/claim. so/RB/so /,/, let/VB/let us/PRP/us prove/VBP/prove that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 42/CD/42 /:/: 32/CD/32 /CD/) so/RB/so /,/, the/DT/the claim/NN/claim is/VBZ/is that/IN/that there/EX/there exist/NN/exist i/PRP/i /,/, j/VBP/j such/JJ/such that/IN/that x/NN/x i/PRP/i is/VBZ/is less/JJR/less than/IN/than x/NN/x j/NN/j and/CC/and y/NN/y i/PRP/i is/VBZ/is less/JJR/less than/IN/than y/NN/y j/NNP/j. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do this/DT/this with/IN/with an/DT/an example/NN/example to/TO/to help/VB/help you/PRP/you understand/VB/understand what/WP/what is/VBZ/is going/VBG/going on/NNP/on. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my example/NNP/example. so/RB/so /,/, i/PRP/i am/VBP/am looking/VBG/looking at/IN/at say/NN/say five/CD/five dimensional/JJ/dimensional space/NN/space /,/, this/DT/this is/VBZ/is my/PRP$/my x/NN/x /,/, the/DT/the coordinates/NNS/coordinates are/VBP/are all/DT/all points/NNS/points in/IN/in the/DT/the unit/NN/unit cube/NNP/cube. this/DT/this is/VBZ/is why/WRB/why remember/NN/remember that/WDT/that y/NN/y is/VBZ/is just/RB/just a/DT/a permutation/NN/permutation of/IN/of this/DT/this permutation/NN/permutation sigma/NNP/sigma. and/CC/and y/NN/y is/VBZ/is such/JJ/such that/IN/that /,/, it/PRP/it is/VBZ/is not/RB/not identical/NNP/identical. so/RB/so /,/, the/DT/the same/JJ/same numbers/NNS/numbers as/IN/as x/NN/x is/VBZ/is repeated/VBN/repeated over/IN/over here/NNP/here. but/CC/but /,/, it/PRP/it is/VBZ/is not/RB/not repeated/VBN/repeated they/PRP/they are/VBP/are not/RB/not repeated/VBN/repeated identically/NNP/identically. well/RB/well /,/, they/PRP/they can/MD/can be/VB/be identical/JJ/identical at/IN/at one/CD/one place/NN/place that/WDT/that is/-NONE-/is. now/RB/now /,/, here/RB/here is/VBZ/is the/DT/the key/JJ/key step/NN/step /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to define/VB/define a/DT/a permutation/NN/permutation pi/NN/pi which/WDT/which sorts/NNS/sorts x/NNP/x. so/RB/so /,/, pi/NN/pi of/IN/of x/NN/x then/RB/then is/VBZ/is going/VBG/going to/TO/to simply/RB/simply take/VB/take these/DT/these and/CC/and rearrange/NN/rearrange them/PRP/them in/IN/in increasing/VBG/increasing order/NNP/order. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to 0.2/CD/0.2 /,/, 0.5/CD/0.5 /,/, 0.7/CD/0.7 and/CC/and so/RB/so on/NNP/on. it/PRP/it may/MD/may not/RB/not be/VB/be clear/JJ/clear to/TO/to you/PRP/you /,/, why/WRB/why i/PRP/i am/VBP/am not/RB/not defining/VBG/defining this/DT/this permutation/NN/permutation pi/NNP/pi. but/CC/but /,/, please/NN/please bear/NN/bear with/IN/with me/PRP/me /,/, the/DT/the answer/NN/answer will/MD/will hit/VB/hit you/PRP/you in/IN/in a/DT/a minute/NNP/minute. so/RB/so /,/, i/PRP/i know/VBP/know what/WP/what pi/NN/pi is/VBZ/is i/PRP/i know/VBP/know how/WRB/how to/TO/to take/VB/take x/NN/x and/CC/and generate/VB/generate pi/NN/pi of/IN/of x/NN/x from/IN/from it/NNP/it. i/PRP/i apply/RB/apply the/DT/the same/JJ/same permutation/NN/permutation on/IN/on y/NN/y as/IN/as well/NNP/well. so/RB/so /,/, what/WDT/what happens/NNS/happens well/RB/well i/PRP/i look/VBP/look at/IN/at the/DT/the column/NN/column /,/, the/DT/the column/NN/column of/IN/of x/NN/x which/WDT/which moved/VBN/moved over/IN/over here/NNP/here. and/CC/and i/PRP/i take/VBP/take the/DT/the corresponding/NN/corresponding value/NN/value for/IN/for y/NN/y and/CC/and move/VB/move it/PRP/it down/IN/down over/IN/over here/NNP/here. so/RB/so /,/, it/PRP/it is/VBZ/is both/DT/both are/VBP/are 0.2/CD/0.2 over/IN/over here/RB/here /,/, so/RB/so /,/, it/PRP/it is/VBZ/is both/DT/both are/VBP/are 0.2/CD/0.2 over/IN/over here/NNP/here. then/RB/then /,/, 0.5/CD/0.5 came/VBD/came from/IN/from here/NNP/here. so/RB/so /,/, the/DT/the value/NN/value over/IN/over here/RB/here must/MD/must also/RB/also come/VB/come over/IN/over here/RB/here 0.7/CD/0.7 came/VBD/came from/IN/from here/NNP/here. so/RB/so /,/, below/IN/below it/PRP/it is/VBZ/is 0.9/CD/0.9 /,/, so/RB/so over/IN/over here/RB/here also/RB/also there/RB/there is/VBZ/is 0.9/CD/0.9 /,/, then/RB/then we/PRP/we have/VBP/have 0.8/CD/0.8 /,/, 0.7/CD/0.7 from/IN/from this/DT/this and/CC/and 0.8/CD/0.8 /,/, 0.9/CD/0.9 /,/, 0.5/CD/0.5 from/IN/from here/NNP/here. so/RB/so /,/, we/PRP/we have/VBP/have rearranged/VBN/rearranged x/NN/x and/CC/and we/PRP/we have/VBP/have rearranged/VBN/rearranged y/NNP/y. now/RB/now /,/, be/VB/be patient/VBN/patient with/IN/with me/PRP/me just/RB/just for/IN/for a/DT/a minute/NN/minute /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to prove/VB/prove this/DT/this claim/NNP/claim. but/CC/but /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to prove/VB/prove it/PRP/it for/IN/for pi/NN/pi x/NN/x and/CC/and pi/NN/pi y/NN/y /,/, where/WRB/where it/PRP/it is/VBZ/is easy/JJ/easy to/TO/to see/NNP/see. and/CC/and you/PRP/you will/MD/will see/VB/see that/IN/that /,/, they/PRP/they can/MD/can just/RB/just trace/VB/trace it/PRP/it backwards/VBZ/backwards to/TO/to x/VB/x and/CC/and y/NNP/y. so/RB/so /,/, what/WDT/what is/VBZ/is it/PRP/it mean/JJ/mean to/TO/to prove/VB/prove the/DT/the claim/NN/claim for/IN/for pi/NN/pi x/NN/x and/CC/and pi/NN/pi y/NN/y ?/./? well/RB/well /,/, we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to find/VB/find i/PRP/i j/VBP/j of/IN/of this/DT/this property/NNP/property. so/RB/so /,/, because/IN/because we/PRP/we sorted/VBD/sorted and/CC/and here/RB/here is/VBZ/is now/RB/now the/DT/the reason/NN/reason for/IN/for sorting/NN/sorting it/PRP/it /,/, if/IN/if i/PRP/i is/VBZ/is less/JJR/less than/IN/than j/NN/j we/PRP/we know/VBP/know that/IN/that pi/NN/pi of/IN/of x/NN/x i/PRP/i has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than pi/NN/pi of/IN/of x/NN/x j/NN/j /,/, because/IN/because this/DT/this is/VBZ/is sorted/VBN/sorted order/NNP/order. so/RB/so /,/, pi/NN/pi of/IN/of x/NN/x sub/NN/sub i/PRP/i the/DT/the ith/NN/ith component/NN/component of/IN/of pi/NN/pi of/IN/of x/NN/x must/MD/must be/VB/be smaller/JJR/smaller than/IN/than the/DT/the jth/NN/jth component/NN/component of/IN/of pi/NN/pi of/IN/of x/NNP/x. so/RB/so /,/, this/DT/this is/VBZ/is smaller/JJR/smaller than/IN/than this/DT/this /,/, this/DT/this is/VBZ/is smaller/JJR/smaller than/IN/than this/DT/this and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, long/JJ/long as/IN/as i/PRP/i choose/VBP/choose i/PRP/i smaller/JJR/smaller than/IN/than j/NN/j /,/, this/DT/this first/JJ/first property/NN/property is/VBZ/is guaranteed/VBN/guaranteed to/TO/to me/NNP/me. what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about y/NN/y ?/./? so/RB/so /,/, here/RB/here is/VBZ/is one/CD/one sequence/NN/sequence i/PRP/i change/VBP/change that/IN/that and/CC/and then/RB/then permuted/NNP/permuted. so/RB/so /,/, i/PRP/i know/VBP/know now/RB/now that/IN/that somewhere/WRB/somewhere /,/, this/DT/this new/JJ/new sequence/NN/sequence has/VBZ/has to/TO/to be/VB/be non/VBN/non increasing/-NONE-/increasing. this/DT/this was/VBD/was in/IN/in increasing/VBG/increasing sequence/NN/sequence /,/, this/DT/this is/VBZ/is a/DT/a permutation/NN/permutation of/IN/of it/NNP/it. so/RB/so /,/, somewhere/EX/somewhere this/DT/this sequence/NN/sequence has/VBZ/has to/TO/to be/VB/be non/VBN/non increasing/-NONE-/increasing. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say that/IN/that there/EX/there exist/NN/exist i/PRP/i j/VBP/j /,/, such/JJ/such that/IN/that i/PRP/i less/JJR/less than/IN/than j/NN/j and/CC/and if/IN/if it/PRP/it is/VBZ/is non/IN/non increasing/NNP/increasing. then/RB/then ;/:/; that/DT/that means/VBZ/means /,/, pi/NN/pi y/NN/y must/MD/must be/VB/be greater/JJR/greater than/IN/than pi/NN/pi y/NN/y j/NNP/j. but/CC/but /,/, notice/NN/notice that/IN/that then/RB/then we/PRP/we have/VBP/have found/VBN/found these/DT/these two/NNP/two. so/RB/so /,/, we/PRP/we have/VBP/have found/VBN/found i/PRP/i j/VBP/j such/JJ/such that/IN/that /,/, pi/VBP/pi y/NN/y is/VBZ/is bigger/JJR/bigger than/IN/than pi/NN/pi y/NN/y j/NN/j /,/, whereas/VBZ/whereas pi/NN/pi x/NN/x i/PRP/i is/VBZ/is bigger/JJR/bigger than/IN/than pi/NN/pi x/NN/x j/NNP/j. so/RB/so /,/, just/RB/just to/TO/to illustrate/VB/illustrate in/IN/in this/DT/this example/NNP/example. here/RB/here is/VBZ/is the/DT/the case/NN/case /,/, where/WRB/where this/DT/this is/VBZ/is smaller/JJR/smaller than/IN/than this/DT/this /,/, but/CC/but this/DT/this is/VBZ/is larger/JJR/larger than/IN/than this/NNP/this. now/RB/now /,/, we/PRP/we have/VBP/have proved/VBN/proved it/PRP/it for/IN/for this/DT/this pi/NN/pi x/NN/x and/CC/and pi/NN/pi y/NNP/y. how/WRB/how do/VBP/do we/PRP/we go/VB/go back/RB/back ?/./? well/RB/well /,/, the/DT/the idea/NN/idea is/VBZ/is simply/RB/simply we/PRP/we take/VBP/take we/PRP/we figure/VBP/figure out/RP/out /,/, where/WRB/where these/DT/these columns/NNS/columns came/VBD/came from/IN/from our/PRP$/our original/JJ/original example/NNP/example. this/DT/this column/NN/column came/VBD/came from/IN/from here/RB/here and/CC/and this/DT/this column/NN/column came/VBD/came from/IN/from here/NNP/here. and/CC/and sure/NN/sure enough/RB/enough /,/, this/DT/this number/NN/number is/VBZ/is less/JJR/less than/IN/than this/DT/this whereas/NN/whereas /,/, this/DT/this number/NN/number is/VBZ/is greater/JJR/greater than/IN/than this/NNP/this. so/RB/so /,/, i/PRP/i will/MD/will skip/VB/skip the/DT/the algebra/NNP/algebra. but/CC/but /,/, this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what is/VBZ/is happening/VBG/happening ?/./? we/PRP/we just/RB/just have/VBP/have to/TO/to follow/VB/follow back/RB/back and/CC/and then/RB/then this/DT/this property/NN/property will/MD/will hold/VB/hold nevertheless/NN/nevertheless /:/( /:/( refer/NN/refer time/NN/time /:/: 46/CD/46 /:/: 40/CD/40 /CD/) /CD/) /./. so/RB/so /,/, what/WDT/what have/VBP/have we/PRP/we proved/VBD/proved /,/, well/RB/well we/PRP/we have/VBP/have proved/VBN/proved this/DT/this claim/NNP/claim. and/CC/and this/DT/this was/VBD/was all/DT/all that/DT/that was/VBD/was needed/VBN/needed to/TO/to prove/VB/prove our/PRP$/our original/JJ/original claim/NN/claim /,/, which/WDT/which was/VBD/was this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 46/CD/46 /:/: 48/CD/48 /CD/) /CD/) /./. so/RB/so /,/, once/RB/once we/PRP/we prove/VBP/prove this/DT/this claim/NN/claim what/WP/what do/VBP/do we/PRP/we know/VB/know that/IN/that if/IN/if we/PRP/we have/VBP/have two/CD/two distinct/JJ/distinct permutations/NNS/permutations of/IN/of this/NNP/this. if/IN/if we/PRP/we distinct/VBP/distinct permutation/NN/permutation of/IN/of this/DT/this /,/, then/RB/then that/IN/that must/MD/must reach/VB/reach a/DT/a different/JJ/different region/NNP/region. but/CC/but /,/, now/RB/now i/PRP/i know/VBP/know that/IN/that the/DT/the number/NN/number of/IN/of distinct/NN/distinct permutation/NN/permutation can/MD/can be/VB/be n/VBN/n factorial/-NONE-/factorial. and/CC/and therefore/RB/therefore /,/, the/DT/the number/NN/number of/IN/of yes/NNS/yes leaves/VBZ/leaves has/VBZ/has to/TO/to be/VB/be bigger/JJR/bigger than/IN/than n/NN/n factorial/NNP/factorial. and/CC/and the/DT/the time/NN/time has/VBZ/has to/TO/to be/VB/be bigger/JJR/bigger than/IN/than the/DT/the height/NN/height of/IN/of the/DT/the tree/NN/tree /,/, which/WDT/which is/VBZ/is log/NN/log of/IN/of n/NN/n factorial/JJ/factorial or/CC/or at/IN/at least/JJS/least n/NN/n log/NN/log n/NNP/n. so/RB/so /,/, this/DT/this finishes/NNS/finishes the/DT/the claim/NN/claim that/IN/that the/DT/the time/NN/time for/IN/for element/NN/element distinctness/NN/distinctness is/VBZ/is at/IN/at least/JJS/least n/NN/n log/NN/log n/NN/n on/IN/on decision/NN/decision trees/NNP/trees. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 47/CD/47 /:/: 30/CD/30 /CD/) here/RB/here is/VBZ/is the/DT/the quick/NN/quick summary/NN/summary of/IN/of the/DT/the argument/NNP/argument. so/RB/so /,/, what/WDT/what we/PRP/we did/VBD/did here/RB/here was/VBD/was /,/, that/IN/that we/PRP/we said/VBD/said that/IN/that the/DT/the instances/NNS/instances visiting/VBG/visiting any/DT/any yes/NNS/yes leaf/VBP/leaf /,/, former/JJ/former connected/VBN/connected region/NN/region in/IN/in the/DT/the instance/NN/instance space/NNP/space. no/DT/no instances/NNS/instances partition/NN/partition the/DT/the instance/NN/instance space/NN/space /,/, such/JJ/such that/IN/that distinct/JJ/distinct permutations/NNS/permutations are/VBP/are not/RB/not in/IN/in the/DT/the same/JJ/same connected/VBN/connected region/NNP/region. and/CC/and therefore/RB/therefore /,/, we/PRP/we conclude/VBP/conclude that/IN/that the/DT/the number/NN/number of/IN/of yes/NNS/yes leaves/VBZ/leaves must/MD/must be/VB/be large/NNP/large. what/WP/what is/VBZ/is the/DT/the implication/NN/implication for/IN/for the/DT/the ram/NN/ram model/NN/model ?/./? well/RB/well /,/, for/IN/for the/DT/the ram/NN/ram model/NN/model we/PRP/we can/MD/can conclude/VB/conclude exactly/RB/exactly using/VBG/using ideas/NNS/ideas similar/JJ/similar to/TO/to last/JJ/last time/NN/time /,/, that/IN/that the/DT/the comparison/NN/comparison based/VBN/based algorithms/NNS/algorithms for/IN/for element/NN/element distinctness/NN/distinctness /,/, must/MD/must take/VB/take time/NN/time n/NN/n log/NN/log n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 48/CD/48 /:/: 13/CD/13 /CD/) i/PRP/i want/VBP/want to/TO/to quickly/RB/quickly extend/VB/extend this/DT/this to/TO/to the/DT/the case/NN/case of/IN/of algebraic/JJ/algebraic decision/NN/decision trees/NNP/trees. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a quick/JJ/quick definition/NNP/definition. so/RB/so /,/, again/RB/again the/DT/the program/NN/program in/IN/in this/DT/this model/NN/model consists/VBZ/consists of/IN/of trees/NNS/trees with/IN/with outgoing/VBG/outgoing branches/NNS/branches /,/, less/RBR/less than/IN/than equal/JJ/equal to/TO/to or/CC/or greater/JJR/greater than/NNP/than. but/CC/but /,/, this/DT/this time/NN/time we/PRP/we will/MD/will have/VB/have these/DT/these three/CD/three relational/JJ/relational operators/NNS/operators /,/, just/RB/just for/IN/for simplicity/NN/simplicity /,/, although/IN/although you/PRP/you can/MD/can have/VB/have other/JJ/other operators/NNS/operators too/NNP/too. the/DT/the node/NN/node labels/NNS/labels are/VBP/are no/DT/no longer/JJR/longer i/PRP/i colon/VBP/colon j/NN/j /,/, but/CC/but they/PRP/they are/VBP/are algebraic/JJ/algebraic expressions/NNS/expressions /,/, over/IN/over the/DT/the input/NN/input the/DT/the components/NNS/components of/IN/of the/DT/the input/NNP/input. so/RB/so /,/, x/NN/x 1/CD/1 square/NN/square plus/CC/plus x/NN/x 2/CD/2 square/NN/square minus/NN/minus 25/CD/25. the/DT/the action/NN/action is/VBZ/is we/PRP/we are/VBP/are going/VBG/going to/TO/to evaluate/VB/evaluate the/DT/the label/NN/label expression/NNP/expression. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to compare/VB/compare it/PRP/it to/TO/to 0/CD/0. so/RB/so /,/, this/DT/this expression/NN/expression is/VBZ/is equal/JJ/equal to/TO/to 0/-NONE-/0 /,/, then/RB/then we/PRP/we will/MD/will choose/VB/choose the/DT/the equal/JJ/equal to/TO/to branch/NNP/branch. if/IN/if this/DT/this is/VBZ/is less/JJR/less than/IN/than 0/-NONE-/0 /,/, then/RB/then we/PRP/we will/MD/will choose/VB/choose the/DT/the less/JJR/less than/IN/than branch/NNP/branch. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just take/VBP/take a/DT/a quick/JJ/quick example/NNP/example. so/RB/so /,/, if/IN/if our/PRP$/our expression/NN/expression is/VBZ/is x/NN/x 1/CD/1 square/NN/square plus/CC/plus x/NN/x 2/CD/2 square/NN/square is/VBZ/is 25/CD/25 or/CC/or minus/CC/minus 25/CD/25. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 18/CD/18 /CD/) then/RB/then /,/, the/DT/the condition/NN/condition x/NN/x 1/CD/1 square/NN/square plus/CC/plus x/NN/x 2/CD/2 square/NN/square minus/NN/minus 25/CD/25 is/VBZ/is less/JJR/less than/IN/than 0/CD/0. simply/RB/simply means/VBZ/means /,/, that/IN/that our/PRP$/our point/NN/point lies/NNS/lies inside/VBP/inside this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are restricting/VBG/restricting our/PRP$/our point/NN/point to/TO/to be/VB/be inside/JJ/inside this/DT/this region/NNP/region. if/IN/if the/DT/the expression/NN/expression is/VBZ/is linear/JJ/linear instead/RB/instead of/IN/of this/DT/this /,/, which/WDT/which is/VBZ/is a/DT/a quadratic/NNP/quadratic. then/RB/then /,/, our/PRP$/our previous/JJ/previous results/NNS/results actually/RB/actually hold/NNP/hold. unfortunately/RB/unfortunately /,/, if/IN/if the/DT/the expression/NN/expression is/VBZ/is non-linear/JJ/non-linear /NN/( /:/( refer/NN/refer time/NN/time /:/: 49/CD/49 /:/: 50/CD/50 /CD/) /CD/) /,/, then/RB/then the/DT/the intersection/NN/intersection of/IN/of constraints/NNS/constraints can/MD/can produce/VB/produce disconnected/VBN/disconnected regions/NNS/regions /,/, which/WDT/which can/MD/can not/RB/not happen/VB/happen if/IN/if things/NNS/things are/VBP/are linear/NNP/linear. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 57/CD/57 /CD/) the/DT/the main/JJ/main result/NN/result is/VBZ/is something/NN/something like/IN/like this/DT/this /,/, this/DT/this is/VBZ/is a/DT/a deep/NN/deep result/NN/result actually/RB/actually from/IN/from algebraic/JJ/algebraic geometry/NNP/geometry. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a decision/NN/decision problem/NN/problem over/IN/over inputs/NNS/inputs x/VBP/x 1/CD/1 to/TO/to x/VB/x n/NN/n /,/, by/IN/by a/DT/a decision/NN/decision problem/NN/problem we/PRP/we simply/RB/simply mean/JJ/mean /,/, that/IN/that we/PRP/we mean/VBP/mean a/DT/a problem/NN/problem whose/WP$/whose answer/NN/answer is/VBZ/is yes/NNS/yes or/CC/or no/DT/no /,/, just/RB/just like/IN/like element/NN/element distinctness/NNP/distinctness. suppose/NN/suppose a/DT/a is/VBZ/is a/DT/a algebraic/JJ/algebraic decision/NN/decision tree/NN/tree algorithm/NN/algorithm for/IN/for the/DT/the problem/NNP/problem. such/JJ/such that/IN/that /,/, the/DT/the degree/NN/degree of/IN/of each/DT/each algebraic/JJ/algebraic expression/NN/expression is/VBZ/is some/DT/some fixed/VBN/fixed constant/NN/constant d/NNP/d. so/RB/so /,/, x/NN/x 1/CD/1 square/NN/square plus/CC/plus x/NN/x 2/CD/2 square/NN/square would/MD/would be/VB/be degree/JJ/degree 2/CD/2. suppose/NN/suppose /,/, the/DT/the no/DT/no answers/NNS/answers partition/NN/partition the/DT/the instance/NN/instance space/NN/space into/IN/into w/NN/w connected/VBN/connected regions/NNS/regions /,/, within/IN/within each/DT/each of/IN/of which/WDT/which the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. so/RB/so /,/, in/IN/in our/PRP$/our case/NN/case for/IN/for simple/NN/simple decision/NN/decision trees/NNS/trees /,/, this/DT/this w/NN/w for/IN/for the/DT/the element/NN/element distinctness/NN/distinctness was/VBD/was n/VBN/n log/NN/log n/NNP/n. but/CC/but /,/, in/IN/in general/JJ/general the/DT/the time/NN/time required/VBN/required is/VBZ/is going/VBG/going to/TO/to be/VB/be by/IN/by this/DT/this algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to be/VB/be omega/NN/omega of/IN/of log/NN/log of/IN/of w/NN/w minus/NN/minus n/NNP/n. now/RB/now /,/, you/PRP/you might/MD/might wonder/VB/wonder what/WP/what happened/VBN/happened to/TO/to that/DT/that d/NNP/d. so/RB/so /,/, this/DT/this d/NN/d actually/RB/actually appears/VBZ/appears inside/NN/inside this/DT/this omega/NNP/omega. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a constant/JJ/constant of/IN/of proportionality/NN/proportionality /,/, which/WDT/which depends/NNS/depends upon/IN/upon d/NNP/d. for/IN/for decision/NN/decision trees/NNS/trees the/DT/the time/NN/time is/VBZ/is log/JJ/log of/IN/of w/NN/w /,/, not/RB/not even/RB/even omega/VB/omega it/PRP/it is/VBZ/is actually/RB/actually just/RB/just log/JJ/log of/IN/of w/NN/w /,/, a/DT/a log/NN/log of/IN/of w/NN/w to/TO/to the/DT/the base/NN/base 2/CD/2. so/RB/so /,/, what/WDT/what this/DT/this theorem/NN/theorem says/VBZ/says /,/, that/IN/that the/DT/the complicated/JJ/complicated algebraic/JJ/algebraic model/NN/model does/VBZ/does not/RB/not really/RB/really help/VB/help all/DT/all that/DT/that much/NNP/much. so/RB/so /,/, the/DT/the lower/JJR/lower bound/NN/bound that/IN/that we/PRP/we get/VBP/get is/VBZ/is almost/RB/almost as/IN/as good/NNP/good. well/RB/well /,/, it/PRP/it is/VBZ/is a/DT/a little/RB/little bit/NN/bit smaller/JJR/smaller /,/, because/IN/because of/IN/of this/DT/this minus/NN/minus n/NN/n and/CC/and may/MD/may be/VB/be the/DT/the proportionality/NN/proportionality constant/NN/constant is/VBZ/is a/DT/a little/RB/little bit/NN/bit different/NN/different /,/, but/CC/but it/PRP/it is/VBZ/is essentially/RB/essentially the/DT/the same/JJ/same lower/NN/lower bound/NNP/bound. for/IN/for element/NN/element distinctness/NN/distinctness in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is no/DT/no change/NN/change /,/, the/DT/the algebraic/JJ/algebraic tree/NN/tree for/IN/for any/DT/any fixed/VBN/fixed degree/NN/degree will/MD/will give/VB/give us/PRP/us n/VB/n log/NN/log n/NN/n as/IN/as before/NNP/before. the/DT/the proof/NN/proof idea/NN/idea is/VBZ/is actually/RB/actually pretty/RB/pretty difficult/NNP/difficult. now/RB/now /,/, as/IN/as we/PRP/we said/VBD/said a/DT/a single/JJ/single leaf/NN/leaf can/MD/can correspond/VB/correspond to/TO/to a/DT/a small/JJ/small number/NN/number of/IN/of connected/VBN/connected regions/NNS/regions /,/, not/RB/not just/RB/just exactly/RB/exactly one/CD/one connected/VBN/connected region/NNP/region. so/RB/so /,/, now/RB/now we/PRP/we have/VBP/have to/TO/to get/VB/get some/DT/some heavy/JJ/heavy duty/NN/duty machinery/NN/machinery from/IN/from algebraic/JJ/algebraic geometry/NN/geometry to/TO/to count/VB/count the/DT/the number/NN/number of/IN/of connected/VBN/connected regions/NNP/regions. when/WRB/when that/DT/that you/PRP/you get/VBP/get when/WRB/when you/PRP/you take/VBP/take intersection/NN/intersection of/IN/of several/JJ/several constraints/NNP/constraints. if/IN/if the/DT/the constraints/NNS/constraints are/VBP/are linear/JJ/linear /,/, then/RB/then it/PRP/it is/VBZ/is very/RB/very simple/NNP/simple. if/IN/if the/DT/the constraints/NNS/constraints are/VBP/are high/JJ/high degree/NN/degree algebraic/JJ/algebraic expressions/NNS/expressions /,/, then/RB/then this/DT/this becomes/VBZ/becomes rather/RB/rather complicated/NNP/complicated. /:/( refer/NN/refer slide/NN/slide time/NN/time 52/CD/52 /:/: 30/CD/30 /CD/) so/RB/so /,/, quickly/RB/quickly summarize/VBP/summarize lower/JJR/lower bound/NN/bound theory/NN/theory /,/, that/IN/that we/PRP/we have/VBP/have been/VBN/been looking/VBG/looking at/IN/at in/IN/in the/DT/the last/JJ/last two/CD/two lectures/NNS/lectures /,/, tells/NNS/tells us/PRP/us when/WRB/when to/TO/to start/VB/start searching/NN/searching for/IN/for better/JJR/better algorithms/NNP/algorithms. this/DT/this is/VBZ/is very/RB/very good/JJ/good /,/, because/IN/because it/PRP/it is/VBZ/is good/JJ/good to/TO/to know/VB/know that/IN/that you/PRP/you are/VBP/are done/NNP/done. another/DT/another interesting/NN/interesting point/NN/point of/IN/of this/DT/this theory/NN/theory is/VBZ/is that/IN/that it/PRP/it has/VBZ/has some/DT/some connections/NNS/connections /,/, with/IN/with some/DT/some really/RB/really deep/VBP/deep mathematics/NNP/mathematics. algebraic/JJ/algebraic geometry/NN/geometry is/VBZ/is supposed/VBN/supposed to/TO/to be/VB/be rather/RB/rather deep/VB/deep area/NN/area of/IN/of mathematics/NNP/mathematics. and/CC/and it/PRP/it has/VBZ/has connections/NNS/connections to/TO/to many/JJ/many other/JJ/other fields/NNS/fields also/NNP/also. here/RB/here is/VBZ/is a/DT/a very/RB/very simple/JJ/simple context/NN/context /,/, in/IN/in which/WDT/which this/DT/this idea/NN/idea can/MD/can be/VB/be used/NNP/used. so/RB/so /,/, i/PRP/i will/MD/will leave/VB/leave it/PRP/it as/IN/as a/DT/a problem/NN/problem for/IN/for you/NNP/you. suppose/NN/suppose /,/, you/PRP/you have/VBP/have 27/CD/27 coins/NNS/coins /,/, such/JJ/such that/IN/that 26/CD/26 have/VBP/have equal/JJ/equal weight/NNP/weight. and/CC/and one/CD/one is/VBZ/is heavier/JJR/heavier /,/, find/VBP/find the/DT/the heavier/NN/heavier using/VBG/using 3/CD/3 weighings/NNP/weighings. this/DT/this is/VBZ/is probably/RB/probably we/PRP/we have/VBP/have puzzle/JJ/puzzle that/IN/that we/PRP/we have/VBP/have solved/NNP/solved. now/RB/now /,/, i/PRP/i want/VBP/want you/PRP/you to/TO/to use/VB/use the/DT/the ideas/NNS/ideas expressed/VBN/expressed in/IN/in this/DT/this lecture/NN/lecture to/TO/to formulate/VB/formulate a/DT/a decision/NN/decision tree/NN/tree model/NN/model using/VBG/using which/WDT/which /,/, you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to argue/VB/argue /,/, that/IN/that you/PRP/you can/MD/can not/RB/not do/VB/do this/DT/this in/IN/in fewer/JJR/fewer than/IN/than 3/CD/3 weighings/NNP/weighings. thank/NN/thank you/NNP/you. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 26/CD/26 np/NN/np /:/- completeness/NN/completeness /:/- i/PRP/i motivation/VBP/motivation introduction/NN/introduction to/TO/to reductions/NNS/reductions /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 00/CD/00 /:/: 51/CD/51 /CD/) deals/NNS/deals with/IN/with the/DT/the notion/NN/notion of/IN/of np/NN/np completeness/NN/completeness /,/, we/PRP/we will/MD/will study/VB/study this/DT/this notion/NN/notion and/CC/and we/PRP/we will/MD/will see/VB/see how/WRB/how to/TO/to use/VB/use this/DT/this notion/NN/notion effectively/NNP/effectively. the/DT/the first/JJ/first thing/NN/thing i/PRP/i will/MD/will sort/VB/sort of/IN/of talk/NN/talk about/IN/about is/VBZ/is motivation/NNP/motivation. hopefully/RB/hopefully at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this i/NN/i will/MD/will motivate/VB/motivate you/PRP/you sufficiently/RB/sufficiently that/IN/that /,/, you/PRP/you will/MD/will be/VB/be interested/JJ/interested enough/RB/enough to/TO/to study/VB/study about/IN/about the/DT/the subject/NNP/subject. so/RB/so /,/, imagine/NN/imagine that/IN/that you/PRP/you finished/VBD/finished your/PRP$/your b/NN/b tech/NNP/tech. you/PRP/you have/VBP/have the/DT/the all/DT/all new/JJ/new subjects/NNS/subjects well/RB/well /,/, and/CC/and then/RB/then you/PRP/you gone/VBP/gone for/IN/for a/DT/a interview/NN/interview /,/, you/PRP/you land/VBP/land your/PRP$/your dream/NN/dream job/NNP/job. the/DT/the company/NN/company pays/VBZ/pays well/RB/well /,/, you/PRP/you are/VBP/are really/RB/really happy/JJ/happy /,/, you/PRP/you settled/VBD/settled in/IN/in software/NN/software job/NNP/job. you/PRP/you very/RB/very happy/JJ/happy /,/, because/IN/because it/PRP/it is/VBZ/is you/PRP/you have/VBP/have to/TO/to deal/VB/deal with/IN/with designing/NN/designing things/NNP/things. and/CC/and your/PRP$/your boss/NN/boss is/VBZ/is also/RB/also happy/JJ/happy with/IN/with you/PRP/you and/CC/and he/PRP/he wants/VBZ/wants to/TO/to give/VB/give you/PRP/you challenging/VBG/challenging projects/NNP/projects. the/DT/the first/JJ/first project/NN/project you/PRP/you get/VBP/get is/VBZ/is the/DT/the following/VBG/following it/PRP/it scheduling/VBG/scheduling jobs/NNS/jobs on/IN/on computers/NNP/computers. so/IN/so /,/, the/DT/the input/NN/input is/VBZ/is set/VBN/set of/IN/of jobs/NNS/jobs and/CC/and each/DT/each job/NN/job as/IN/as a/DT/a size/NN/size associated/VBN/associated with/IN/with it/NNP/it. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say the/DT/the jobs/NNS/jobs are/VBP/are j/RB/j 1/CD/1 /,/, j/NN/j 2/CD/2 up/IN/up to/TO/to j/VB/j n/NN/n and/CC/and the/DT/the sizes/NNS/sizes are/VBP/are s/NNS/s 1/CD/1 /,/, s/NNS/s 2/CD/2 and/CC/and so/RB/so on/IN/on to/TO/to s/NNS/s n/NNP/n. these/DT/these sizes/NNS/sizes could/MD/could vary/VB/vary /,/, they/PRP/they could/MD/could some/VB/some of/IN/of the/DT/the jobs/NNS/jobs could/MD/could have/VB/have the/DT/the same/JJ/same size/NN/size /,/, some/DT/some could/MD/could have/VB/have different/NNP/different. you/PRP/you can/MD/can think/VB/think of/IN/of them/PRP/them as/IN/as positive/JJ/positive integers/NNP/integers. now/RB/now /,/, there/EX/there are/VBP/are two/CD/two processors/NNP/processors. so/RB/so /,/, there/EX/there are/VBP/are two/CD/two processors/NNS/processors p/VBP/p 1/CD/1 and/CC/and p/NN/p 2/CD/2 both/DT/both are/VBP/are identical/NNP/identical. and/CC/and your/PRP$/your job/NN/job is/VBZ/is to/TO/to schedule/VB/schedule /,/, these/DT/these jobs/NNS/jobs on/IN/on these/DT/these two/CD/two processors/NNP/processors. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to automate/VB/automate your/PRP$/your boss/NN/boss wants/NNS/wants you/PRP/you to/TO/to automate/VB/automate this/DT/this process/NNP/process. you/PRP/you have/VBP/have to/TO/to write/VB/write a/DT/a program/NN/program /,/, which/WDT/which takes/VBZ/takes input/NN/input these/DT/these sizes/NNS/sizes s/VBZ/s 1/CD/1 /,/, s/NNS/s 2/CD/2 up/IN/up to/TO/to s/NNS/s n/NNP/n. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say a/DT/a array/NN/array of/IN/of size/NN/size n/NN/n or/CC/or reads/NNS/reads it/PRP/it of/IN/of a/DT/a screen/NNP/screen. and/CC/and you/PRP/you have/VBP/have to/TO/to schedule/VB/schedule these/DT/these jobs/NNS/jobs on/IN/on processors/NNS/processors p/VBP/p 1/CD/1 and/CC/and p/NN/p 2/CD/2. now/RB/now /,/, the/DT/the scheduling/NN/scheduling should/MD/should be/VB/be such/JJ/such /,/, that/IN/that the/DT/the last/JJ/last job/NN/job finished/VBD/finished is/VBZ/is fastest/NNP/fastest. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we mean/VB/mean by/IN/by this/DT/this ?/./? supposing/VBG/supposing /,/, i/PRP/i schedule/VBP/schedule all/DT/all of/IN/of them/PRP/them in/IN/in p/NN/p 1/CD/1. and/CC/and the/DT/the time/NN/time taken/VBN/taken will/MD/will be/VB/be s/NNS/s 1/CD/1 plus/NNS/plus s/NNS/s 2/CD/2 plus/NNS/plus s/NNS/s 3/CD/3 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to s/NNS/s n/NNP/n. let/VB/let us/PRP/us say/VB/say that/IN/that job/NN/job of/IN/of size/NN/size s/NNS/s i/PRP/i takes/VBZ/takes the/DT/the same/JJ/same time/NN/time /,/, time/NN/time s/NNS/s i/PRP/i to/TO/to finish/VB/finish if/IN/if i/PRP/i schedule/VBP/schedule it/PRP/it /,/, it/PRP/it takes/VBZ/takes time/NN/time s/NNS/s i/NNP/i. so/RB/so /,/, also/RB/also assume/VBP/assume that/IN/that there/EX/there is/VBZ/is preemption/NNP/preemption. once/RB/once /,/, you/PRP/you start/VBP/start a/DT/a job/NN/job of/IN/of it/PRP/it has/VBZ/has to/TO/to run/VB/run for/IN/for completion/NNP/completion. so/RB/so /,/, if/IN/if i/PRP/i run/VBP/run all/DT/all of/IN/of them/PRP/them on/IN/on one/CD/one processor/NN/processor /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is s/NNS/s 1/CD/1 plus/NNS/plus s/NNS/s 2/CD/2 plus/NNS/plus s/NNS/s 3/CD/3 up/IN/up to/TO/to s/NNS/s n/NNP/n. so/RB/so /,/, at/IN/at time/NN/time s/NNS/s 1/CD/1 plus/NNS/plus s/NNS/s 2/CD/2 up/IN/up to/TO/to s/NNS/s 3/CD/3 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to s/NNS/s n/VB/n /,/, all/DT/all jobs/NNS/jobs must/MD/must finish/NNP/finish. now/RB/now /,/, supposing/VBG/supposing i/PRP/i schedule/VBP/schedule /,/, the/DT/the even/RB/even jobs/VBZ/jobs on/IN/on p/NN/p 2/CD/2 and/CC/and odd/JJ/odd jobs/NNS/jobs on/IN/on p/NN/p 1/CD/1. let/NN/let us/PRP/us say/VBP/say s/NNS/s 1/CD/1 /,/, s/NNS/s 3/LS/3 and/CC/and so/RB/so on/IN/on here/RB/here it/PRP/it is/VBZ/is s/VBZ/s 2/CD/2 /,/, s/NNS/s 4/CD/4. let/NN/let us/PRP/us say/VBP/say there/RB/there are/VBP/are seven/VBN/seven jobs/NNS/jobs s/NNS/s 5/CD/5 /,/, s/NNS/s 7/CD/7 /,/, s/NNS/s 6/CD/6. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how the/DT/the jobs/NNS/jobs are/VBP/are scheduled/NNP/scheduled. now/RB/now /,/, the/DT/the time/NN/time taken/VBN/taken on/IN/on p/NN/p 1/CD/1 is/VBZ/is s/NNS/s 1/CD/1 plus/NNS/plus s/NNS/s 3/CD/3 plus/NNS/plus s/NNS/s 5/CD/5 plus/NNS/plus s/NNS/s 7/CD/7 /,/, time/NN/time on/IN/on p/NN/p 2/CD/2 is/VBZ/is s/NNS/s 2/CD/2 plus/NNS/plus s/NNS/s 4/CD/4 plus/NNS/plus s/NNS/s 6/CD/6. now/RB/now /,/, it/PRP/it may/MD/may so/RB/so happen/VB/happen that/IN/that these/DT/these are/VBP/are very/RB/very large/JJ/large jobs/NNP/jobs. let/NN/let us/PRP/us say/VBP/say /,/, these/DT/these sizes/NNS/sizes are/VBP/are 1/CD/1 and/CC/and these/DT/these are/VBP/are 100/CD/100. then/RB/then /,/, the/DT/the time/NN/time at/IN/at which/WDT/which the/DT/the last/JJ/last job/NN/job completes/NNS/completes is/VBZ/is 300/CD/300. this/DT/this process/NN/process finishes/VBZ/finishes of/IN/of in/IN/in four/CD/four units/NNS/units of/IN/of time/NN/time /,/, while/IN/while this/DT/this takes/VBZ/takes 300/CD/300 units/NNS/units of/IN/of time/NNP/time. so/RB/so /,/, the/DT/the last/JJ/last job/NN/job finishes/NNS/finishes after/IN/after 300/CD/300 units/NNS/units of/IN/of time/NN/time /,/, this/DT/this is/VBZ/is not/RB/not what/WP/what we/PRP/we want/NNP/want. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to sort/VB/sort of/IN/of distribute/NN/distribute the/DT/the jobs/NNS/jobs evenly/RB/evenly among/IN/among these/DT/these two/CD/two processors/NNP/processors. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to distribute/VB/distribute the/DT/the jobs/NNS/jobs in/IN/in such/JJ/such a/DT/a way/NN/way /,/, that/IN/that these/DT/these large/JJ/large jobs/NNS/jobs say/VBP/say one/CD/one of/IN/of the/DT/the s/NNS/s 4/CD/4 should/MD/should be/VB/be here/NNP/here. and/CC/and may/MD/may be/VB/be s/NNS/s 5/CD/5 should/MD/should be/VB/be here/RB/here and/CC/and so/RB/so on/IN/on /,/, we/PRP/we want/VBP/want to/TO/to distribute/VB/distribute as/IN/as evenly/RB/evenly as/IN/as possible/NNP/possible. so/RB/so /,/, you/PRP/you think/VBP/think about/IN/about this/DT/this for/IN/for some/DT/some time/NN/time and/CC/and here/RB/here is/VBZ/is the/DT/the first/JJ/first idea/NN/idea /,/, we/PRP/we come/VBP/come up/RP/up with/NNP/with. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 07/CD/07 /CD/) so/RB/so /,/, you/PRP/you take/VBP/take the/DT/the jobs/NNS/jobs in/IN/in order/NNP/order. so/RB/so /,/, the/DT/the jobs/NNS/jobs are/VBP/are of/IN/of sizes/NNS/sizes s/NNS/s 1/CD/1 /,/, s/NNS/s 2/CD/2 and/CC/and so/RB/so on/IN/on with/IN/with the/DT/the first/JJ/first job/NN/job on/IN/on the/DT/the first/JJ/first process/NN/process it/PRP/it is/VBZ/is p/VB/p 1/CD/1 i/PRP/i put/VBD/put s/NNS/s 1/CD/1 here/NNP/here. the/DT/the second/JJ/second job/NN/job goes/VBZ/goes to/TO/to p/VB/p 2/CD/2. now/RB/now /,/, you/PRP/you put/VBD/put when/WRB/when i/PRP/i take/VBP/take the/DT/the third/JJ/third one/CD/one /,/, you/PRP/you put/VBD/put it/PRP/it on/IN/on the/DT/the processor/NN/processor /,/, which/WDT/which is/VBZ/is least/JJS/least lightly/RB/lightly loaded/NNP/loaded. for/IN/for instance/NN/instance /,/, if/IN/if s/NNS/s 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than s/NNS/s 2/CD/2 /,/, then/RB/then i/PRP/i put/VBD/put s/NNS/s 3/CD/3 here/NNP/here. and/CC/and you/PRP/you keep/VB/keep doing/VBG/doing this/DT/this /,/, i/PRP/i look/VBP/look at/IN/at s/NNS/s 4/CD/4 and/CC/and i/PRP/i see/VBP/see which/WDT/which one/CD/one is/VBZ/is greater/NNP/greater. assume/NN/assume that/WDT/that s/VBZ/s 2/CD/2 and/CC/and s/NNS/s 3/CD/3 are/VBP/are on/IN/on p/NN/p 2/CD/2 /,/, check/NN/check whether/IN/whether s/NNS/s 1/CD/1 is/VBZ/is larger/JJR/larger than/IN/than s/NNS/s 2/CD/2 plus/NNS/plus s/NNS/s 3/CD/3 or/CC/or is/VBZ/is s/NNS/s 2/CD/2 plus/NNS/plus s/NNS/s 3/CD/3 larger/JJR/larger than/IN/than s/NNS/s 1/CD/1. if/IN/if s/NNS/s 2/CD/2 plus/NNS/plus s/NNS/s 3/CD/3 is/VBZ/is larger/JJR/larger than/IN/than s/NNS/s 1/CD/1 then/RB/then i/PRP/i put/VBD/put s/NNS/s 4/CD/4 on/IN/on p/NN/p 1/CD/1. so/RB/so /,/, s/NNS/s 4/CD/4 will/MD/will go/VB/go here/RB/here /,/, if/IN/if s/NNS/s 2/CD/2 plus/NNS/plus s/NNS/s 3/CD/3 is/VBZ/is larger/JJR/larger than/IN/than s/NNS/s 1/CD/1 /,/, you/PRP/you can/MD/can break/VB/break ties/NNS/ties as/IN/as you/PRP/you want/NNP/want. this/DT/this is/VBZ/is the/DT/the first/JJ/first algorithm/NN/algorithm you/PRP/you come/VBP/come up/RP/up with/NNP/with. you/PRP/you code/VBP/code this/DT/this and/CC/and it/PRP/it is/VBZ/is starts/VBZ/starts working/VBG/working your/PRP$/your boss/NN/boss is/VBZ/is happy/NNP/happy. but/CC/but /,/, the/DT/the next/JJ/next day/NN/day the/DT/the boss/NN/boss shows/VBZ/shows up/RP/up and/CC/and tells/NNS/tells you/PRP/you /,/, that/DT/that this/DT/this does/VBZ/does not/RB/not work/NNP/work. so/RB/so /,/, he/PRP/he gives/VBZ/gives you/PRP/you an/DT/an input/NN/input on/IN/on which/WDT/which you/PRP/you produce/VBP/produce the/DT/the schedule/NN/schedule /,/, which/WDT/which takes/VBZ/takes some/DT/some time/NN/time t/NNP/t. so/RB/so /,/, you/PRP/you take/VBP/take some/DT/some time/NN/time t/NN/t while/IN/while the/DT/the boss/NN/boss produces/VBZ/produces the/DT/the schedule/NN/schedule which/WDT/which is/VBZ/is less/RBR/less than/IN/than t/NNP/t. so/RB/so /,/, the/DT/the optimal/JJ/optimal schedule/NN/schedule on/IN/on the/DT/the input/NN/input is/VBZ/is smaller/JJR/smaller /,/, the/DT/the total/JJ/total time/NN/time the/DT/the optimal/JJ/optimal takes/NNS/takes is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the time/NN/time that/IN/that your/PRP$/your algorithm/NN/algorithm produced/NNP/produced. and/CC/and the/DT/the boss/NN/boss says/VBZ/says fix/NN/fix this/NNP/this. so/RB/so /,/, at/IN/at this/DT/this point/NN/point i/PRP/i would/MD/would like/VB/like to/TO/to give/VB/give you/PRP/you an/DT/an exercise/NN/exercise /,/, what/WP/what give/JJ/give an/DT/an example/NN/example to/TO/to show/NN/show that/IN/that /,/, this/DT/this algorithm/NN/algorithm does/VBZ/does not/RB/not produce/VB/produce a/DT/a optimal/JJ/optimal schedule/NNP/schedule. so/RB/so /,/, give/JJ/give an/DT/an example/NN/example to/TO/to show/NN/show that/IN/that this/DT/this algorithm/NN/algorithm does/VBZ/does not/RB/not produce/VB/produce the/DT/the optimal/JJ/optimal schedule/NNP/schedule. well/RB/well /,/, you/PRP/you go/VBP/go back/RB/back and/CC/and figure/NN/figure out/RP/out /,/, there/EX/there is/VBZ/is something/NN/something wrong/JJ/wrong with/IN/with the/DT/the algorithm/NN/algorithm in/IN/in the/DT/the sense/NN/sense /,/, that/IN/that if/IN/if these/DT/these jobs/NNS/jobs are/VBP/are mixed/VBN/mixed up/NNP/up. if/IN/if the/DT/the sizes/NNS/sizes are/VBP/are mixed/VBN/mixed up/RP/up arbitrarily/RB/arbitrarily /,/, may/MD/may be/VB/be that/IN/that is/VBZ/is the/DT/the reason/NN/reason the/DT/the algorithm/NN/algorithm does/VBZ/does not/RB/not work/NNP/work. /:/( refer/NN/refer slide/NN/slide time/NN/time 09/CD/09 /:/: 10/CD/10 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is your/PRP$/your next/JJ/next attempt/NN/attempt /,/, the/DT/the first/JJ/first thing/NN/thing you/PRP/you do/VBP/do is/VBZ/is you/PRP/you sort/NN/sort the/DT/the jobs/NNS/jobs by/IN/by size/NNP/size. now/RB/now /,/, you/PRP/you know/VBP/know that/IN/that s/NNS/s 1/CD/1 is/VBZ/is less/JJR/less than/IN/than s/NNS/s 2/CD/2 less/JJR/less than/IN/than s/NNS/s 3/CD/3 and/CC/and so/RB/so on/NNP/on. you/PRP/you know/VBP/know that/IN/that /,/, the/DT/the jobs/NNS/jobs are/VBP/are increasing/VBG/increasing order/NN/order of/IN/of size/NNP/size. and/CC/and now/RB/now you/PRP/you do/VBP/do the/DT/the same/JJ/same algorithm/NN/algorithm /,/, you/PRP/you put/VBD/put s/NNS/s 1/CD/1 on/IN/on the/DT/the first/JJ/first processor/NN/processor /,/, s/VBZ/s 2/CD/2 on/IN/on the/DT/the second/JJ/second and/CC/and so/RB/so on/NNP/on. well/RB/well /,/, this/DT/this seems/VBZ/seems to/TO/to work/VB/work /,/, but/CC/but two/CD/two days/NNS/days later/JJ/later again/NN/again your/PRP$/your boss/NN/boss shows/NNS/shows up/IN/up with/IN/with an/DT/an example/NN/example /,/, which/WDT/which does/VBZ/does not/RB/not work/NNP/work. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this example/NNP/example. the/DT/the example/NN/example has/VBZ/has five/CD/five jobs/NNS/jobs and/CC/and the/DT/the sizes/NNS/sizes are/VBP/are as/RB/as follows/VBZ/follows 2/CD/2 /,/, 2/CD/2 /,/, 2/CD/2 /,/, 3/CD/3 and/CC/and 3/CD/3 /,/, let/VB/let us/PRP/us see/VB/see what/WP/what your/PRP$/your algorithm/NN/algorithm does/NNP/does. so/RB/so /,/, here/RB/here are/VBP/are my/PRP$/my two/CD/two processes/NNS/processes p/VBP/p 1/CD/1 and/CC/and p/NN/p 2/CD/2 /,/, these/DT/these are/VBP/are the/DT/the job/NN/job sizes/NNP/sizes. so/RB/so /,/, the/DT/the first/JJ/first job/NN/job goes/VBZ/goes on/IN/on to/TO/to p/VB/p 1/CD/1 /,/, the/DT/the second/JJ/second job/NN/job is/VBZ/is on/IN/on p/NN/p 2/CD/2 /,/, the/DT/the third/JJ/third job/NN/job you/PRP/you could/MD/could put/VB/put either/DT/either on/IN/on p/NN/p 1/CD/1 or/CC/or p/NN/p 2/CD/2 /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we pick/VB/pick p/NN/p 1/CD/1. the/DT/the next/JJ/next one/CD/one goes/VBZ/goes here/RB/here and/CC/and well/RB/well 4/CD/4 is/VBZ/is smaller/JJR/smaller than/IN/than 5/CD/5. so/RB/so /,/, you/PRP/you put/VBD/put the/DT/the last/JJ/last one/CD/one here/NNP/here. now/RB/now /,/, the/DT/the total/JJ/total time/NN/time that/WDT/that your/PRP$/your schedule/NN/schedule takes/VBZ/takes is/VBZ/is 3/CD/3 plus/RB/plus 2/CD/2 plus/NNS/plus 2/CD/2 which/WDT/which is/VBZ/is 7/CD/7. on/IN/on this/DT/this processor/NN/processor of/IN/of course/NN/course /,/, you/PRP/you take/VBP/take 5/CD/5 units/NNS/units on/IN/on this/DT/this you/PRP/you take/VBP/take 7/CD/7 units/NNP/units. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time to/TO/to finish/VB/finish all/DT/all jobs/NNS/jobs is/VBZ/is 7/CD/7 units/NNP/units. well/RB/well /,/, you/PRP/you can/MD/can see/VB/see that/IN/that this/DT/this is/VBZ/is not/RB/not optimum/NN/optimum /,/, the/DT/the best/JJS/best way/NN/way to/TO/to do/VB/do this/DT/this is/VBZ/is i/PRP/i guess/VBP/guess you/PRP/you have/VBP/have seen/VBN/seen them/PRP/them by/IN/by now/RB/now /,/, you/PRP/you put/VBD/put the/DT/the 2s/CD/2s on/IN/on the/DT/the one/CD/one processor/NN/processor and/CC/and the/DT/the 3s/CD/3s on/IN/on the/DT/the other/NNP/other. now/RB/now /,/, there/EX/there are/VBP/are only/RB/only 2/CD/2 3s/CD/3s. so/RB/so /,/, this/DT/this takes/VBZ/takes 6/CD/6 units/NNS/units and/CC/and that/IN/that takes/NNS/takes 6/CD/6 units/NNS/units every/DT/every job/NN/job has/VBZ/has finished/VBN/finished in/IN/in 6/CD/6 units/NNS/units of/IN/of time/NNP/time. so/RB/so /,/, this/DT/this /NN/( /:/( refer/NN/refer time/NN/time /:/: 11/CD/11 /:/: 19/CD/19 /CD/) /CD/) that/WDT/that you/PRP/you will/MD/will come/VB/come up/RP/up with/IN/with also/RB/also does/VBZ/does not/RB/not work/NNP/work. let/VB/let me/PRP/me again/RB/again repeat/VB/repeat the/DT/the algorithm/NN/algorithm /,/, you/PRP/you sort/NN/sort the/DT/the jobs/NNS/jobs by/IN/by size/NNP/size. now/RB/now /,/, you/PRP/you look/VBP/look at/IN/at these/DT/these jobs/NNS/jobs one/CD/one by/IN/by one/NNP/one. and/CC/and assign/NN/assign these/DT/these processes/NNS/processes greedily/RB/greedily /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, you/PRP/you put/VBD/put the/DT/the first/JJ/first one/CD/one in/IN/in the/DT/the first/JJ/first process/NN/process /,/, the/DT/the second/JJ/second one/CD/one in/IN/in the/DT/the second/NNP/second. and/CC/and when/WRB/when i/PRP/i reach/VBP/reach the/DT/the ith/NN/ith job/NN/job /,/, you/PRP/you put/VBD/put it/PRP/it on/IN/on the/DT/the least/JJS/least lightly/RB/lightly loaded/VBD/loaded processor/NNP/processor. you/PRP/you sum/VBP/sum up/RP/up the/DT/the previous/JJ/previous sizes/NNS/sizes /,/, which/WDT/which are/VBP/are on/IN/on each/DT/each processor/NN/processor /,/, choose/NN/choose the/DT/the smaller/JJR/smaller one/CD/one and/CC/and put/VBD/put this/DT/this new/JJ/new job/NN/job on/IN/on that/DT/that processor/NNP/processor. this/DT/this was/VBD/was the/DT/the algorithm/NN/algorithm we/PRP/we came/VBD/came up/RP/up with/IN/with and/CC/and this/DT/this does/VBZ/does not/RB/not work/VB/work /,/, here/RB/here is/VBZ/is an/DT/an example/NN/example that/IN/that it/PRP/it does/VBZ/does not/RB/not work/NNP/work. so/RB/so /,/, now/RB/now what/WP/what do/VBP/do you/PRP/you do/VB/do ?/./? well/RB/well /,/, you/PRP/you can/MD/can go/VB/go back/RB/back and/CC/and try/NN/try fix/NN/fix this/DT/this example/NNP/example. when/WRB/when /,/, you/PRP/you come/VBP/come up/RP/up with/IN/with another/DT/another heuristic/JJ/heuristic /,/, which/WDT/which beats/NNS/beats this/DT/this example/NNP/example. but/CC/but /,/, i/PRP/i can/MD/can tell/VB/tell you/PRP/you that/IN/that it/PRP/it is/VBZ/is extremely/RB/extremely difficult/JJ/difficult possibly/RB/possibly impossible/JJ/impossible to/TO/to come/VB/come up/RP/up with/IN/with a/DT/a smart/NN/smart heuristic/JJ/heuristic like/IN/like this/DT/this /,/, which/WDT/which does/VBZ/does well/RB/well for/IN/for all/PDT/all inputs/NNS/inputs /,/, which/WDT/which always/RB/always does/VBZ/does well/NNP/well. so/RB/so /,/, you/PRP/you after/IN/after trying/VBG/trying various/JJ/various heuristics/NNS/heuristics most/JJS/most of/IN/of them/PRP/them do/VBP/do not/RB/not work/NNP/work. you/PRP/you are/VBP/are now/RB/now at/IN/at the/DT/the end/NN/end of/IN/of your/PRP$/your patience/NN/patience /,/, you/PRP/you are/VBP/are really/RB/really worried/VBN/worried about/IN/about what/WP/what your/PRP$/your job/NN/job /,/, because/IN/because boss/NNS/boss is/VBZ/is now/RB/now threatening/VBG/threatening you/PRP/you with/IN/with dismissal/NNP/dismissal. so/RB/so /,/, then/RB/then what/WP/what you/PRP/you do/VBP/do is/VBZ/is this/NNP/this. so/RB/so /,/, you/PRP/you now/RB/now sort/NN/sort of/IN/of want/JJ/want an/DT/an algorithm/NN/algorithm that/IN/that works/NNS/works always/NNP/always. so/RB/so /,/, what/WDT/what you/PRP/you do/VBP/do is/VBZ/is a/DT/a brute/NN/brute force/NN/force algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 13/CD/13 /:/: 11/CD/11 /CD/) so/RB/so /,/, you/PRP/you take/VBP/take every/DT/every subset/NN/subset of/IN/of the/DT/the jobs/NNP/jobs. so/RB/so /,/, i/PRP/i have/VBP/have jobs/NNS/jobs /,/, i/PRP/i have/VBP/have sizes/NNS/sizes s/NNS/s 1/CD/1 /,/, s/NNS/s 2/CD/2 up/IN/up to/TO/to s/NNS/s n/NNP/n. so/RB/so /,/, take/VB/take all/PDT/all subsets/NNS/subsets /:/( /:/( refer/NN/refer time/NN/time /:/: 13/CD/13 /:/: 30/CD/30 /CD/) /CD/) /./. so/RB/so /,/, compute/JJ/compute the/DT/the size/NN/size of/IN/of s/NNS/s and/CC/and size/VB/size of/IN/of s/NNS/s bar/NNP/bar. s/NNS/s bar/NN/bar is/VBZ/is the/DT/the complement/NN/complement of/IN/of s/NNP/s. so/RB/so /,/, all/DT/all jobs/NNS/jobs not/RB/not is/VBZ/is s/NNS/s which/WDT/which is/VBZ/is s/VBZ/s bar/NNP/bar. so/RB/so /,/, essentially/RB/essentially we/PRP/we want/VBP/want to/TO/to put/VB/put s/NNS/s on/IN/on process/NN/process on/IN/on p/NN/p 1/CD/1 and/CC/and the/DT/the complement/NN/complement on/IN/on the/DT/the processor/NN/processor p/NN/p 2/CD/2. so/RB/so /,/, you/PRP/you do/VBP/do this/DT/this and/CC/and look/VB/look at/IN/at the/DT/the maximum/NN/maximum of/IN/of these/DT/these two/CD/two and/CC/and choose/JJ/choose the/DT/the maximum/NN/maximum of/IN/of these/DT/these two/NNP/two. so/RB/so /,/, this/DT/this will/MD/will tell/VB/tell you/PRP/you the/DT/the time/NN/time /,/, the/DT/the total/JJ/total time/NN/time that/WDT/that this/DT/this schedule/NN/schedule took/NNP/took. so/RB/so /,/, do/VBP/do this/DT/this for/IN/for every/DT/every possible/JJ/possible subset/NN/subset and/CC/and pick/NN/pick the/DT/the minimum/NNP/minimum. take/NN/take all/DT/all subsets/NNS/subsets compute/VBP/compute these/DT/these choose/NN/choose the/DT/the maximum/NN/maximum and/CC/and of/IN/of these/DT/these maximum/NN/maximum pick/NN/pick the/DT/the minimum/JJ/minimum of/IN/of these/NNP/these. you/PRP/you can/MD/can easily/RB/easily see/VB/see that/IN/that this/DT/this will/MD/will always/RB/always give/VB/give you/PRP/you the/DT/the right/NN/right answer/NNP/answer. because/IN/because /,/, you/PRP/you will/MD/will look/VB/look at/IN/at all/DT/all possible/JJ/possible ways/NNS/ways of/IN/of scheduling/VBG/scheduling /,/, these/DT/these jobs/NNS/jobs on/IN/on two/CD/two processors/NNS/processors and/CC/and one/CD/one of/IN/of them/PRP/them has/VBZ/has to/TO/to be/VB/be the/DT/the minimum/NNP/minimum. now/RB/now /,/, this/DT/this is/VBZ/is fine/NN/fine /,/, this/DT/this algorithm/NN/algorithm works/VBZ/works /,/, your/PRP$/your boss/NN/boss tries/NNS/tries out/IN/out a/DT/a few/JJ/few inputs/NNS/inputs and/CC/and it/PRP/it is/VBZ/is all/DT/all it/PRP/it works/VBZ/works for/IN/for all/DT/all most/JJS/most all/DT/all for/NNP/for... in/IN/in fact/NN/fact /,/, for/IN/for all/PDT/all inputs/NNS/inputs till/VBP/till your/PRP$/your boss/NN/boss feeds/NNS/feeds in/IN/in an/DT/an input/NN/input with/IN/with let/NN/let us/PRP/us say/VBP/say 1000/CD/1000 numbers/NNP/numbers. there/RB/there are/VBP/are 1000/CD/1000 jobs/NNS/jobs /,/, which/WDT/which have/VBP/have to/TO/to be/VB/be read/VBN/read to/TO/to these/DT/these processors/NNS/processors these/DT/these two/CD/two processors/NNP/processors. so/RB/so /,/, we/PRP/we give/VBP/give the/DT/the input/NN/input as/IN/as a/DT/a list/NN/list of/IN/of size/NN/size 1000/CD/1000. now/RB/now /,/, you/PRP/you start/VBP/start running/VBG/running the/DT/the algorithm/NN/algorithm 5/CD/5 minutes/NNS/minutes pass/NN/pass an/DT/an hour/NN/hour passes/VBZ/passes /,/, 2/CD/2 hours/NNS/hours /,/, 10/CD/10 hours/NNS/hours /,/, 1/CD/1 day/NN/day the/DT/the algorithm/NN/algorithm does/VBZ/does not/RB/not stop/VB/stop /,/, 2/CD/2 days/NNS/days /,/, one/CD/one week/NNP/week. and/CC/and now/RB/now your/PRP$/your boss/NN/boss is/VBZ/is starting/VBG/starting to/TO/to get/VB/get worried/NNP/worried. here/RB/here is/VBZ/is an/DT/an algorithm/NN/algorithm which/WDT/which is/VBZ/is got/VBN/got for/IN/for all/PDT/all small/JJ/small inputs/NNS/inputs and/CC/and now/RB/now it/PRP/it is/VBZ/is weak/JJ/weak and/CC/and the/DT/the algorithm/NN/algorithm does/VBZ/does not/RB/not stop/VB/stop for/IN/for an/DT/an input/NN/input of/IN/of size/NN/size 1000/CD/1000. well/RB/well i/PRP/i can/MD/can tell/VB/tell you/PRP/you that/IN/that this/DT/this is/VBZ/is not/RB/not going/VBG/going to/TO/to stop/VB/stop even/RB/even after/IN/after many/JJ/many years/NNP/years. you/PRP/you can/MD/can take/VB/take years/NNS/years and/CC/and years/NNS/years and/CC/and this/DT/this is/VBZ/is not/RB/not going/VBG/going to/TO/to stop/VB/stop /,/, in/IN/in my/PRP$/my lifetime/NN/lifetime not/RB/not your/PRP$/your lifetime/NN/lifetime may/MD/may be/VB/be many/JJ/many lifetimes/NNP/lifetimes. that/IN/that is/VBZ/is a/DT/a problem/NN/problem with/IN/with such/JJ/such brute/JJ/brute force/NN/force approaches/NNP/approaches. let/NN/let us/PRP/us do/VBP/do a/DT/a quick/JJ/quick calculation/NN/calculation to/TO/to see/VB/see how/WRB/how much/RB/much time/NN/time your/PRP$/your algorithm/NN/algorithm is/VBZ/is going/VBG/going to/TO/to take/VB/take on/IN/on inputs/NNS/inputs of/IN/of size/NN/size 1000/CD/1000. /CD/( refer/NN/refer slide/NN/slide time/NN/time 16/CD/16 /:/: 30/CD/30 /CD/) if/IN/if you/PRP/you have/VBP/have 1000/CD/1000 jobs/NNS/jobs /,/, the/DT/the number/NN/number of/IN/of subsets/NNS/subsets of/IN/of jobs/NNS/jobs that/WDT/that you/PRP/you look/VBP/look at/IN/at is/VBZ/is to/TO/to be/VB/be 1000/CD/1000. so/RB/so /,/, the/DT/the number/NN/number of/IN/of subsets/NNS/subsets of/IN/of jobs/NNS/jobs is/VBZ/is 2/CD/2 to/TO/to the/DT/the 1000/CD/1000. now/RB/now /,/, let/VB/let us/PRP/us assume/VB/assume that/IN/that in/IN/in one/CD/one instruction/NN/instruction a/DT/a computer/NN/computer can/MD/can process/NN/process one/CD/one of/IN/of these/DT/these subsets/NNP/subsets. let/VBD/let us/PRP/us see/VB/see /,/, how/WRB/how much/JJ/much time/NN/time computers/NNS/computers will/MD/will take/VB/take to/TO/to process/NN/process all/DT/all of/IN/of these/DT/these subsets/NNP/subsets. now/RB/now /,/, the/DT/the fastest/JJS/fastest computer/NN/computer runs/NNS/runs /,/, let/VB/let me/PRP/me make/VB/make an/DT/an estimate/NNP/estimate. let/NN/let us/PRP/us say/VBP/say 10/CD/10 to/TO/to the/DT/the 20/CD/20 instructions/NNS/instructions per/IN/per second/NNP/second. this/DT/this is/VBZ/is the/DT/the fastest/JJS/fastest computer/NNP/computer. on/IN/on the/DT/the fastest/JJS/fastest /,/, this/DT/this is/VBZ/is a/DT/a big/JJ/big over/IN/over estimate/NN/estimate it/PRP/it is/VBZ/is much/RB/much smaller/JJR/smaller than/IN/than this/DT/this /,/, but/CC/but we/PRP/we will/MD/will assume/VB/assume this/DT/this /,/, how/WRB/how many/JJ/many computers/NNS/computers you/PRP/you think/VBP/think there/RB/there are/VBP/are in/IN/in world/NN/world 10/CD/10 to/TO/to the/DT/the 20/CD/20. let/NN/let us/PRP/us say/VBP/say 10/CD/10 to/TO/to the/DT/the 20/CD/20 /,/, it/PRP/it is/VBZ/is again/RB/again an/DT/an overestimate/NN/overestimate computers/NNS/computers in/IN/in the/DT/the world/NNP/world. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is put/VBN/put all/DT/all the/DT/the computers/NNS/computers in/IN/in the/DT/the world/NN/world /,/, at/IN/at your/PRP$/your disposal/NN/disposal to/TO/to solve/VB/solve you/PRP/you know/VB/know to/TO/to run/VB/run the/DT/the your/PRP$/your brute/NN/brute force/NN/force algorithm/NNP/algorithm. so/RB/so /,/, putting/VBG/putting these/DT/these two/CD/two together/RP/together /,/, then/RB/then i/PRP/i have/VBP/have 10/CD/10 to/TO/to the/DT/the 40/CD/40 instructions/NNS/instructions i/PRP/i can/MD/can do/VB/do instructions/NNS/instructions per/IN/per second/JJ/second /,/, using/VBG/using all/DT/all computers/NNP/computers. so/RB/so /,/, i/PRP/i am/VBP/am using/VBG/using all/DT/all the/DT/the computers/NNS/computers in/IN/in the/DT/the world/NN/world and/CC/and i/PRP/i can/MD/can do/VB/do 10/CD/10 to/TO/to the/DT/the 40/CD/40 instructions/NNS/instructions per/IN/per second/NNP/second. so/RB/so /,/, how/WRB/how many/JJ/many instructions/NNS/instructions do/VBP/do you/PRP/you think/VB/think /,/, one/CD/one can/MD/can do/VB/do in/IN/in a/DT/a year/NN/year /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this calculation/NNP/calculation. so/RB/so /,/, it/PRP/it is/VBZ/is 10/CD/10 to/TO/to the/DT/the 40/CD/40 instructions/NNS/instructions per/IN/per second/NNP/second. so/RB/so /,/, in/IN/in an/DT/an hour/NN/hour i/PRP/i can/MD/can do/VB/do this/DT/this time/NN/time 60/CD/60 in/IN/in a/DT/a minute/NN/minute i/PRP/i can/MD/can do/VB/do this/DT/this time/NN/time 60/CD/60 another/DT/another 60/CD/60 for/IN/for an/DT/an hour/NNP/hour. then/RB/then /,/, i/PRP/i have/VBP/have 24/CD/24 hours/NNS/hours a/DT/a day/NNP/day. then/RB/then /,/, i/PRP/i have/VBP/have 365/CD/365 days/NNS/days in/IN/in a/DT/a year/NNP/year. so/RB/so /,/, these/DT/these many/JJ/many instructions/NNS/instructions per/IN/per year/NNP/year. let/NN/let me/PRP/me do/VBP/do a/DT/a overestimate/JJ/overestimate here/RB/here /,/, this/DT/this i/PRP/i am/VBP/am going/VBG/going to/TO/to say/VB/say 10/CD/10 to/TO/to the/DT/the 2/CD/2 /,/, this/DT/this let/NN/let us/PRP/us say/VBP/say this/DT/this is/VBZ/is 10/CD/10 to/TO/to the/DT/the 2/CD/2. well/RB/well /,/, 10/CD/10 to/TO/to the/DT/the 2/CD/2 since/IN/since we/PRP/we are/VBP/are generous/JJ/generous /,/, this/DT/this is/VBZ/is 10/CD/10 to/TO/to the/DT/the 3/CD/3. so/RB/so /,/, number/NN/number of/IN/of instructions/NNS/instructions per/IN/per year/NN/year is/VBZ/is certainly/RB/certainly not/RB/not more/JJR/more than/IN/than 2/CD/2 /,/, 4/CD/4 /,/, 6/CD/6 /,/, 10/CD/10 /,/, 10/CD/10 to/TO/to the/DT/the 50/CD/50 good/NNP/good. so/RB/so /,/, i/PRP/i have/VBP/have 2/CD/2 to/TO/to the/DT/the 1000/CD/1000 subsets/NNS/subsets to/TO/to look/VB/look at/NNP/at. i/PRP/i can/MD/can look/VB/look at/IN/at at/IN/at most/JJS/most 10/CD/10 to/TO/to the/DT/the 50/CD/50 subsets/NNS/subsets per/IN/per year/NNP/year. let/NN/let us/PRP/us see/VBP/see how/WRB/how many/JJ/many years/NNS/years this/DT/this takes/NNP/takes. so/RB/so /,/, let/VB/let me/PRP/me quickly/NNP/quickly. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 53/CD/53 /CD/) so/RB/so /,/, you/PRP/you have/VBP/have 2/CD/2 to/TO/to the/DT/the 1000/CD/1000 instructions/NNS/instructions and/CC/and using/VBG/using all/DT/all the/DT/the computers/NNS/computers in/IN/in the/DT/the world/NN/world the/DT/the fastest/JJS/fastest speeds/NNP/speeds. you/PRP/you have/VBP/have 10/CD/10 to/TO/to the/DT/the 50/CD/50 instructions/NNS/instructions /,/, that/IN/that you/PRP/you can/MD/can do/VB/do per/RBR/per year/NNP/year. now/RB/now /,/, this/DT/this 10/CD/10 to/TO/to the/DT/the 50/CD/50 is/VBZ/is roughly/RB/roughly 2/CD/2 to/TO/to the/DT/the 10/CD/10 is/VBZ/is /CD/( /CD/( refer/NN/refer time/NN/time /:/: 20/CD/20 /:/: 21/CD/21 /CD/) /CD/) let/NN/let us/PRP/us say/VBP/say is/VBZ/is certainly/RB/certainly less/JJR/less than/IN/than equal/JJ/equal to/TO/to 2/CD/2 to/TO/to the/DT/the 4/CD/4 times/NNS/times 50/CD/50. that/WDT/that is/VBZ/is 2/CD/2 to/TO/to the/DT/the 50/CD/50 for/IN/for the/DT/the 200/CD/200. so/RB/so /,/, now/RB/now you/PRP/you can/MD/can i/VB/i just/RB/just divide/VB/divide this/DT/this by/IN/by that/DT/that to/TO/to check/VB/check /,/, how/WRB/how many/JJ/many years/NNS/years i/PRP/i am/VBP/am going/VBG/going to/TO/to take/NNP/take. so/RB/so /,/, the/DT/the number/NN/number of/IN/of years/NNS/years you/PRP/you going/VBG/going to/TO/to take/VB/take is/VBZ/is 2/CD/2 to/TO/to the/DT/the 1000/CD/1000 minus/NN/minus 200/CD/200 /,/, this/DT/this is/VBZ/is roughly/RB/roughly 800/CD/800 years/NNP/years. you/PRP/you can/MD/can check/VB/check /,/, how/WRB/how many/JJ/many particles/NNS/particles there/EX/there are/VBP/are in/IN/in the/DT/the universe/NNP/universe. this/DT/this is/VBZ/is not/RB/not very/RB/very far/RB/far away/RB/away from/IN/from that/DT/that number/NN/number of/IN/of atoms/NNS/atoms in/IN/in the/DT/the universe/NN/universe per/IN/per year/NNP/year. so/RB/so /,/, you/PRP/you are/VBP/are going/VBG/going to/TO/to take/VB/take a/DT/a lot/NN/lot of/IN/of years/NNS/years for/IN/for this/DT/this algorithm/NN/algorithm to/TO/to finish/NNP/finish. this/DT/this is/VBZ/is certainly/RB/certainly not/RB/not what/WP/what you/PRP/you wanted/VBD/wanted to/TO/to do/NNP/do. if/IN/if the/DT/the boss/NN/boss figures/NNS/figures this/DT/this out/IN/out /,/, you/PRP/you certainly/RB/certainly fired/NNP/fired. in/IN/in fact/NN/fact /,/, even/RB/even if/IN/if he/PRP/he does/VBZ/does not/RB/not figure/VB/figure this/DT/this out/RP/out you/PRP/you are/VBP/are fired/NNP/fired. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we do/VBP/do ?/./? so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a motivation/NN/motivation for/IN/for studying/VBG/studying np/NN/np completeness/NNP/completeness. i/PRP/i will/MD/will give/VB/give you/PRP/you a/DT/a recipe/NN/recipe /,/, using/VBG/using which/WDT/which you/PRP/you can/MD/can hopefully/RB/hopefully save/VB/save your/PRP$/your job/NNP/job. if/IN/if your/PRP$/your boss/NN/boss is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a little/RB/little bit/NN/bit intelligent/NNP/intelligent. so/RB/so /,/, the/DT/the first/JJ/first part/NN/part of/IN/of the/DT/the course/NN/course /,/, which/WDT/which you/PRP/you did/VBD/did design/NN/design of/IN/of algorithms/NNS/algorithms /,/, was/VBD/was to/TO/to help/VB/help you/PRP/you get/VB/get a/DT/a job/NNP/job. the/DT/the second/JJ/second part/NN/part that/WDT/that we/PRP/we do/VBP/do theory/NN/theory of/IN/of np/NN/np completeness/NN/completeness will/MD/will help/VB/help you/PRP/you quickly/NNP/quickly. so/RB/so /,/, our/PRP$/our final/JJ/final objective/NN/objective will/MD/will be/VB/be to/TO/to show/VB/show that/IN/that /,/, this/DT/this problem/NN/problem is/VBZ/is among/IN/among hard/JJ/hard problems/NNS/problems in/IN/in this/DT/this world/NN/world /,/, what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by hard/JJ/hard ?/./? it/PRP/it means/VBZ/means that/IN/that /,/, so/RB/so far/RB/far nobody/NN/nobody else/RB/else has/VBZ/has been/VBN/been able/JJ/able to/TO/to find/VB/find the/DT/the solution/NN/solution to/TO/to this/DT/this problem/NNP/problem. well/RB/well /,/, the/DT/the boss/NN/boss can/MD/can say/VB/say i/PRP/i mean/VBP/mean this/DT/this problem/NN/problem /,/, just/RB/just come/VBN/come up/RP/up with/IN/with our/PRP$/our company/NNP/company. you/PRP/you know/VBP/know other/JJ/other companies/NNS/companies handle/VBP/handle other/JJ/other problems/NNS/problems /,/, why/WRB/why are/VBP/are you/PRP/you saying/VBG/saying that/IN/that /,/, this/DT/this is/VBZ/is not/RB/not been/VBN/been solved/VBN/solved before/NNP/before. well/RB/well you/PRP/you can/MD/can in/IN/in fact/NN/fact /,/, say/VB/say that/IN/that if/IN/if somebody/NN/somebody manages/NNS/manages to/TO/to solve/VB/solve this/DT/this problem/NNP/problem. then/RB/then /,/, a/DT/a lot/NN/lot of/IN/of other/JJ/other problems/NNS/problems /,/, which/WDT/which will/MD/will lot/VB/lot of/IN/of other/JJ/other people/NNS/people have/VBP/have not/RB/not been/VBN/been able/JJ/able to/TO/to solve/VB/solve can/MD/can also/RB/also be/VB/be solved/NNP/solved. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the kind/NN/kind of/IN/of statement/NN/statement we/PRP/we would/MD/would like/VB/like to/TO/to make/NNP/make. so/RB/so /,/, before/IN/before we/PRP/we formally/RB/formally look/VBP/look at/IN/at this/DT/this notion/NN/notion of/IN/of np/NN/np completeness/NNP/completeness. we/PRP/we will/MD/will lead/VB/lead a/DT/a few/JJ/few other/JJ/other fonda/NN/fonda 's/POS/'s /,/, few/JJ/few other/JJ/other notions/NNS/notions that/IN/that we/PRP/we need/VBP/need to/TO/to imbibe/NNP/imbibe. the/DT/the first/JJ/first one/CD/one is/VBZ/is the/DT/the concept/NN/concept of/IN/of reduction/NNP/reduction. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 59/CD/59 /CD/) so/RB/so /,/, we/PRP/we will/MD/will first/RB/first look/VB/look at/IN/at an/DT/an example/NN/example and/CC/and we/PRP/we will/MD/will see/VB/see what/WP/what reduction/NN/reduction really/RB/really means/NNP/means. so/RB/so /,/, reduction/NN/reduction really/RB/really means/VBZ/means this/DT/this /,/, supposing/VBG/supposing you/PRP/you are/VBP/are having/VBG/having a/DT/a library/NNP/library. so/RB/so /,/, you/PRP/you have/VBP/have a/DT/a library/NN/library where/WRB/where large/JJ/large number/NN/number of/IN/of problems/NNS/problems have/VBP/have been/VBN/been very/RB/very well/RB/well coded/VBN/coded by/IN/by very/RB/very good/JJ/good programmer/NNP/programmer. now/RB/now /,/, given/VBN/given a/DT/a new/JJ/new thing/NN/thing that/WDT/that you/PRP/you want/VBP/want to/TO/to code/VB/code /,/, it/PRP/it would/MD/would be/VB/be very/RB/very nice/JJ/nice if/IN/if we/PRP/we can/MD/can use/VB/use sub/NN/sub routines/NNS/routines from/IN/from the/DT/the library/NN/library in/IN/in your/PRP$/your code/NNP/code. rather/RB/rather than/IN/than /,/, re/NN/re invent/NN/invent the/DT/the wheel/NN/wheel and/CC/and try/NN/try and/CC/and do/VBP/do all/DT/all this/DT/this by/IN/by yourself/NNP/yourself. this/DT/this is/VBZ/is all/DT/all that/DT/that is/VBZ/is to/TO/to reduction/NNP/reduction. how/WRB/how to/TO/to efficiently/RB/efficiently use/VB/use code/NN/code for/IN/for other/JJ/other algorithms/NNS/algorithms to/TO/to generate/VB/generate new/JJ/new algorithms/NNP/algorithms. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at an/DT/an example/NNP/example. this/DT/this is/VBZ/is not/RB/not very/RB/very easy/JJ/easy example/NN/example /,/, it/PRP/it is/VBZ/is not/RB/not very/RB/very hard/RB/hard either/NNP/either. so/RB/so /,/, before/IN/before we/PRP/we start/VBP/start a/DT/a few/JJ/few definitions/NNS/definitions /,/, which/WDT/which we/PRP/we will/MD/will recall/VB/recall hopefully/RB/hopefully you/PRP/you have/VB/have seen/VBN/seen this/DT/this before/NNP/before. the/DT/the first/JJ/first thing/NN/thing is/VBZ/is notion/NN/notion of/IN/of a/DT/a matching/JJ/matching /,/, in/IN/in a/DT/a graph/NN/graph g/NN/g equals/NNS/equals v/VBP/v e/NN/e /,/, v/NN/v is/VBZ/is the/DT/the vertex/NN/vertex set/VBD/set /,/, e/NN/e is/VBZ/is the/DT/the edge/NN/edge set/NNP/set. a/DT/a matching/NN/matching in/IN/in a/DT/a graph/NN/graph is/VBZ/is a/DT/a subset/NN/subset of/IN/of the/DT/the edge/NN/edge set/NN/set is/VBZ/is a/DT/a subset/NN/subset of/IN/of e/NNP/e. so/RB/so /,/, let/VB/let me/PRP/me call/MD/call this/DT/this m/NN/m /,/, the/DT/the subset/NN/subset m/NN/m of/IN/of e/NN/e /,/, such/JJ/such that/IN/that no/DT/no two/CD/two edges/NNS/edges share/NN/share the/DT/the same/JJ/same vertex/NNP/vertex. such/JJ/such that/IN/that /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NN/down no/DT/no two/CD/two edges/NNS/edges in/IN/in m/NN/m have/VBP/have the/DT/the same/JJ/same end/NN/end point/NN/point /,/, let/VB/let us/PRP/us look/VB/look at/IN/at an/DT/an example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 25/CD/25 /:/: 21/CD/21 /CD/) so/RB/so /,/, let/VB/let us/PRP/us take/VB/take a/DT/a graph/NN/graph /,/, let/VB/let us/PRP/us say/VB/say this/DT/this is/VBZ/is a/DT/a graph/NNP/graph. then/RB/then /,/, here/RB/here is/VBZ/is a/DT/a matching/NN/matching /,/, the/DT/the ticked/VBN/ticked edges/NNS/edges form/NN/form a/DT/a matching/NNP/matching. if/IN/if i/PRP/i look/VBP/look at/IN/at these/DT/these two/CD/two edges/NNS/edges /,/, they/PRP/they do/VBP/do not/RB/not share/VB/share a/DT/a end/NN/end point/NNP/point. the/DT/the end/NN/end points/NNS/points of/IN/of these/DT/these edges/NNS/edges are/VBP/are these/DT/these two/CD/two /,/, the/DT/the end/NN/end point/NN/point of/IN/of this/DT/this edge/NN/edge is/VBZ/is these/DT/these two/CD/two they/PRP/they do/VBP/do not/RB/not share/VB/share any/DT/any end/NN/end point/NNP/point. for/IN/for instance/NN/instance /,/, let/VB/let me/PRP/me label/VB/label this/DT/this a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NNP/e. if/IN/if i/PRP/i take/VBP/take a/DT/a /,/, b/NN/b and/CC/and a/DT/a /,/, d/NN/d these/DT/these do/VBP/do not/RB/not form/VB/form a/DT/a matching/NN/matching /,/, this/DT/this is/VBZ/is not/RB/not a/DT/a matching/NNP/matching. essentially/RB/essentially one/CD/one set/NN/set of/IN/of edges/NNP/edges. so/RB/so /,/, that/IN/that they/PRP/they look/VBP/look like/IN/like this/DT/this in/IN/in a/DT/a graph/NN/graph /,/, they/PRP/they do/VBP/do not/RB/not share/VB/share an/DT/an environment/NN/environment /,/, this/DT/this is/VBZ/is what/WP/what matching/VBG/matching is/NNP/is... the/DT/the next/JJ/next definition/NN/definition we/PRP/we need/VBP/need is/VBZ/is that/IN/that of/IN/of a/DT/a perfect/NN/perfect matching/NNP/matching. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 26/CD/26 /:/: 40/CD/40 /CD/) we/PRP/we will/MD/will say/VB/say that/IN/that a/DT/a matching/NN/matching is/VBZ/is perfect/JJ/perfect /,/, if/IN/if all/PDT/all vertices/NNS/vertices in/IN/in the/DT/the graph/NN/graph are/VBP/are end/NN/end points/NNS/points of/IN/of at/IN/at least/JJS/least one/CD/one edge/NNP/edge. this/DT/this is/VBZ/is a/DT/a matching/NN/matching such/JJ/such that/IN/that /,/, all/DT/all end/NN/end points/NNP/points. a/DT/a perfect/NN/perfect matching/VBG/matching is/VBZ/is a/DT/a matching/NN/matching /,/, such/JJ/such that/IN/that all/DT/all vertices/NNS/vertices are/VBP/are end/NN/end points/NNS/points of/IN/of at/IN/at least/JJS/least exactly/RB/exactly one/CD/one edge/NN/edge in/IN/in m/NNP/m. so/RB/so /,/, it/PRP/it must/MD/must be/VB/be matching/VBG/matching m/NN/m such/JJ/such that/IN/that all/DT/all vertices/NNS/vertices are/VBP/are end/NN/end points/NNS/points of/IN/of exactly/RB/exactly one/CD/one edge/NNP/edge. so/RB/so /,/, the/DT/the size/NN/size of/IN/of a/DT/a perfect/NN/perfect matching/VBG/matching is/VBZ/is just/RB/just half/DT/half the/DT/the size/NN/size of/IN/of the/DT/the vertex/NN/vertex set/NNP/set. so/RB/so /,/, then/RB/then note/VB/note that/IN/that size/NN/size of/IN/of m/NN/m is/VBZ/is size/NN/size of/IN/of v/NN/v by/IN/by 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a perfect/NN/perfect matching/VBG/matching /,/, let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to this/DT/this old/JJ/old graph/NN/graph of/IN/of ours/NNS/ours /,/, do/VBP/do you/PRP/you think/VB/think that/IN/that this/DT/this graph/NN/graph has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /NN/( /:/( refer/NN/refer time/NN/time /:/: 28/CD/28 /:/: 30/CD/30 /CD/) /CD/) /./. the/DT/the answer/NN/answer is/VBZ/is no/DT/no /,/, well/RB/well there/RB/there are/VBP/are five/CD/five vertices/NNP/vertices. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take a/DT/a matching/NN/matching with/IN/with two/CD/two edges/NNS/edges i/PRP/i can/MD/can cover/VB/cover four/CD/four of/IN/of these/DT/these vertices/NNS/vertices /,/, i/PRP/i can/MD/can not/RB/not cover/VB/cover five/NNP/five. and/CC/and i/PRP/i can/MD/can not/RB/not take/VB/take three/CD/three edges/NNS/edges /,/, because/IN/because then/RB/then two/CD/two of/IN/of these/DT/these edges/NNS/edges will/MD/will share/VB/share an/DT/an end/NN/end point/NNP/point. so/RB/so /,/, this/DT/this graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/VBG/matching /,/, but/CC/but for/IN/for instance/NN/instance if/IN/if i/PRP/i change/VBP/change this/DT/this graph/NN/graph slightly/NNP/slightly. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 04/CD/04 /CD/) let/NN/let us/PRP/us see/VBP/see i/PRP/i have/VBP/have a/DT/a /,/, b/NN/b /,/, d/VBD/d /,/, e/NN/e /,/, c/NN/c let/VB/let me/PRP/me add/VB/add one/CD/one more/JJR/more /,/, let/VB/let us/PRP/us say/VB/say f/NNP/f. now/RB/now /,/, this/DT/this graph/NN/graph has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. in/IN/in fact/NN/fact /,/, it/PRP/it has/VBZ/has many/JJ/many at/IN/at least/JJS/least two/CD/two perfect/NN/perfect matching/VBG/matching 's/POS/'s /,/, may/MD/may be/VB/be two/CD/two perfect/JJ/perfect matching/NN/matching 's/POS/'s /,/, here/RB/here is/VBZ/is i/PRP/i take/VBP/take these/DT/these three/CD/three edges/NNS/edges a/DT/a /,/, b/NN/b /,/, e/NN/e /,/, d/VBD/d and/CC/and c/NN/c /,/, f/NN/f is/VBZ/is a/DT/a perfect/NN/perfect matching/VBG/matching a/DT/a d/NN/d /,/, e/NN/e b/NN/b and/CC/and c/NN/c f/NN/f is/VBZ/is also/RB/also a/DT/a perfect/NN/perfect matching/NNP/matching. it/PRP/it ticks/VBZ/ticks for/IN/for one/CD/one perfect/NN/perfect matching/NN/matching and/CC/and the/DT/the crosses/NNS/crosses form/NN/form another/DT/another perfect/NN/perfect matching/VBG/matching /,/, this/DT/this graph/NN/graph /:/( /:/( refer/NN/refer time/NN/time /:/: 29/CD/29 /:/: 55/CD/55 /CD/) /CD/) /./. so/RB/so /,/, now/RB/now that/IN/that we/PRP/we have/VBP/have defined/VBN/defined these/DT/these two/CD/two problems/NNP/problems. here/RB/here is/VBZ/is a/DT/a problem/NN/problem that/WDT/that we/PRP/we would/MD/would like/VB/like to/TO/to solve/NNP/solve. so/RB/so /,/, there/EX/there are/VBP/are two/CD/two problems/NNP/problems. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 30/CD/30 /:/: 20/CD/20 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is let/VBN/let me/PRP/me say/VBP/say one/CD/one is/VBZ/is problem/NN/problem perfect/NN/perfect match/NN/match pm/NN/pm is/VBZ/is for/IN/for perfect/NN/perfect matching/NNP/matching. the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g and/CC/and the/DT/the question/NN/question you/PRP/you ask/VBP/ask /,/, does/VBZ/does g/NN/g have/VBP/have a/DT/a perfect/NN/perfect matching/NNP/matching. this/DT/this is/VBZ/is your/PRP$/your first/JJ/first problem/NN/problem /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g does/VBZ/does g/NN/g has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. the/DT/the other/JJ/other problem/NN/problem we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at this/DT/this /,/, it/PRP/it is/VBZ/is very/RB/very closely/RB/closely related/VBN/related to/TO/to the/DT/the first/JJ/first one/NNP/one. so/RB/so /,/, this/DT/this is/VBZ/is maximum/NN/maximum matching/VBG/matching /,/, the/DT/the input/NN/input is/VBZ/is the/DT/the same/JJ/same /,/, input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NNP/g. the/DT/the output/NN/output i/PRP/i need/VBP/need is/VBZ/is a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum size/NNP/size. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at these/DT/these two/CD/two problems/NNP/problems. for/IN/for this/DT/this problem/NN/problem i/PRP/i only/RB/only need/VBP/need to/TO/to say/VB/say yes/NNS/yes or/CC/or no/NNP/no. ii/NN/ii just/RB/just want/VBP/want to/TO/to say/VB/say whether/IN/whether the/DT/the graph/NN/graph is/VBZ/is perfect/JJ/perfect matching/NN/matching or/CC/or not/NNP/not. we/PRP/we actually/RB/actually need/VBP/need an/DT/an output/NN/output /,/, which/WDT/which is/VBZ/is i/PRP/i need/VBP/need to/TO/to know/VB/know the/DT/the i/PRP/i need/VBP/need edges/NNS/edges /,/, which/WDT/which will/MD/will represent/VB/represent in/IN/in some/DT/some matching/NN/matching of/IN/of maximum/NN/maximum size/NNP/size. we/PRP/we have/VBP/have seen/VBN/seen that/IN/that a/DT/a matching/NN/matching a/DT/a graph/NN/graph could/MD/could have/VB/have more/JJR/more than/IN/than one/CD/one matching/VBG/matching 's/POS/'s of/IN/of maximum/NN/maximum size/NN/size /,/, any/DT/any one/CD/one of/IN/of them/PRP/them will/MD/will do/VB/do. now/RB/now /,/, supposing/VBG/supposing in/IN/in your/PRP$/your sub/NN/sub routine/NN/routine library/NN/library /,/, you/PRP/you know/VBP/know you/PRP/you have/VBP/have sub/NN/sub routine/NN/routine coded/VBD/coded for/IN/for this/DT/this for/IN/for problem/NN/problem maximum/NN/maximum matching/VBG/matching which/NNP/which. so/RB/so /,/, given/VBN/given you/PRP/you have/VBP/have an/DT/an algorithm/NN/algorithm /,/, so/RB/so that/IN/that when/WRB/when you/PRP/you feed/VBP/feed in/IN/in a/DT/a graph/NN/graph g/NN/g /,/, it/PRP/it will/MD/will output/VB/output a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum size/NNP/size. can/MD/can we/PRP/we use/VB/use this/DT/this to/TO/to solve/VB/solve all/DT/all this/DT/this problem/NN/problem /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. just/RB/just feed/VBD/feed in/IN/in the/DT/the same/JJ/same graph/NN/graph g/NN/g /,/, look/NN/look at/IN/at the/DT/the matching/NNP/matching. if/IN/if it/PRP/it has/VBZ/has v/NN/v by/IN/by 2/CD/2 edges/NNS/edges /,/, v/NN/v is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. if/IN/if this/DT/this has/VBZ/has v/NN/v by/IN/by 2/CD/2 edges/NNS/edges /,/, then/RB/then the/DT/the graph/NN/graph has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. if/IN/if it/PRP/it is/VBZ/is less/JJR/less than/IN/than v/NN/v by/IN/by 2/CD/2 /,/, then/RB/then the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/NNP/matching. so/RB/so /,/, given/VBN/given a/DT/a algorithm/NN/algorithm for/IN/for this/DT/this second/JJ/second problem/NN/problem /,/, very/RB/very easy/JJ/easy to/TO/to construct/VB/construct one/CD/one for/IN/for the/DT/the first/JJ/first problem/NNP/problem. how/WRB/how about/IN/about the/DT/the other/JJ/other way/NN/way around/IN/around which/WDT/which is/VBZ/is given/NNP/given. supposing/NN/supposing /,/, this/DT/this sub/NN/sub routine/NN/routine library/NN/library has/VBZ/has an/DT/an algorithm/NN/algorithm for/IN/for this/DT/this /,/, which/WDT/which is/VBZ/is given/VBN/given in/IN/in graph/NN/graph g/NN/g /,/, it/PRP/it will/MD/will tell/VB/tell you/PRP/you whether/IN/whether it/PRP/it has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching or/CC/or not/NNP/not. and/CC/and now/RB/now /,/, you/PRP/you want/VBP/want to/TO/to output/VB/output matching/JJ/matching of/IN/of maximum/NN/maximum size/NNP/size. your/PRP$/your job/NN/job is/VBZ/is to/TO/to construct/VB/construct an/DT/an algorithm/NN/algorithm /,/, which/WDT/which does/VBZ/does this/NNP/this. and/CC/and you/PRP/you would/MD/would like/VB/like to/TO/to use/VB/use this/DT/this algorithm/NN/algorithm /,/, effectively/NNP/effectively. because/IN/because /,/, this/DT/this is/VBZ/is a/DT/a very/RB/very good/JJ/good implementation/NN/implementation and/CC/and you/PRP/you would/MD/would like/VB/like to/TO/to use/VB/use this/DT/this effectively/NNP/effectively. let/VBD/let us/PRP/us see/VB/see how/WRB/how this/DT/this is/VBZ/is done/NNP/done. so/RB/so /,/, i/PRP/i hope/VBP/hope the/DT/the objective/NN/objective is/VBZ/is clear/JJ/clear /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NNP/down. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 00/CD/00 /CD/) so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given an/DT/an algorithm/NN/algorithm for/IN/for a/DT/a perfect/NN/perfect matching/NNP/matching. and/CC/and we/PRP/we want/VBP/want to/TO/to design/VB/design one/CD/one for/IN/for max/NN/max matching/NNP/matching. this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to do/VB/do ?/./? well/RB/well /,/, how/WRB/how do/VBP/do we/PRP/we really/RB/really use/VBP/use this/DT/this algorithm/NN/algorithm /,/, that/IN/that is/VBZ/is the/DT/the crucial/JJ/crucial question/NN/question ?/./? in/IN/in fact/NN/fact /,/, let/VB/let us/PRP/us take/VB/take something/NN/something which/WDT/which is/VBZ/is sort/NN/sort of/IN/of intermediate/JJ/intermediate between/IN/between these/DT/these two/CD/two /,/, how/WRB/how about/RP/about time/NN/time to/TO/to find/VB/find the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/NNP/matching. we/PRP/we will/MD/will look/VB/look at/IN/at this/DT/this problem/NN/problem maximum/NN/maximum matching/VBG/matching /NN/( /:/( refer/NN/refer time/NN/time /:/: 34/CD/34 /:/: 54/CD/54 /CD/) /CD/) /./. the/DT/the output/NN/output should/MD/should be/VB/be edges/NNS/edges /,/, set/VBN/set of/IN/of edges/NNS/edges in/IN/in a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum set/NN/set of/IN/of size/NNP/size. that/IN/that is/VBZ/is what/WP/what the/DT/the output/NN/output should/MD/should be/NNP/be. now/RB/now /,/, supposing/VBG/supposing we/PRP/we only/RB/only want/VBP/want to/TO/to know/VB/know the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching in/IN/in the/DT/the graph/NN/graph /,/, can/MD/can we/PRP/we solve/VB/solve this/DT/this let/NN/let me/PRP/me write/VBP/write this/DT/this problem/NN/problem down/IN/down and/CC/and will/MD/will try/VB/try and/CC/and do/VB/do this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is objective/JJ/objective 1/CD/1 and/CC/and intermediate/JJ/intermediate objective/NN/objective is/VBZ/is this/DT/this design/NN/design and/CC/and algorithm/NN/algorithm to/TO/to find/VB/find the/DT/the size/NN/size of/IN/of a/DT/a maximum/NN/maximum matching/VBG/matching in/IN/in g/NNP/g. so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given an/DT/an algorithm/NN/algorithm for/IN/for perfect/NN/perfect matching/VBG/matching /,/, you/PRP/you want/VBP/want to/TO/to design/VB/design an/DT/an algorithm/NN/algorithm to/TO/to find/VB/find the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching in/IN/in g/NN/g /,/, this/DT/this is/VBZ/is how/WRB/how you/PRP/you do/VBP/do it/NNP/it. so/RB/so /,/, you/PRP/you take/VBP/take this/DT/this graph/NN/graph g/NNP/g. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 36/CD/36 /:/: 14/CD/14 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is your/PRP$/your algorithm/NN/algorithm that/WDT/that does/VBZ/does perfect/VBP/perfect matching/NNP/matching. now/RB/now /,/, you/PRP/you first/RB/first feed/VBP/feed in/IN/in g/NNP/g. and/CC/and ask/VB/ask whether/IN/whether it/PRP/it has/VBZ/has perfect/JJ/perfect matching/NN/matching ?/./? if/IN/if g/NN/g has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, then/RB/then you/PRP/you know/VBP/know the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching is/VBZ/is hopefully/NNP/hopefully. it/PRP/it is/VBZ/is if/IN/if g/NN/g has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, then/RB/then the/DT/the size/NN/size is/VBZ/is v/NN/v by/IN/by 2/CD/2 /,/, where/WRB/where v/NN/v is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in the/DT/the graph/NNP/graph. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this down/NN/down /,/, if/IN/if g/NN/g has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, then/RB/then the/DT/the size/NN/size of/IN/of maximum/NN/maximum matching/VBG/matching i/PRP/i is/VBZ/is a/DT/a v/NN/v by/IN/by 2/CD/2. so/RB/so /,/, supposing/VBG/supposing /,/, it/PRP/it says/VBZ/says that/IN/that g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/VBG/matching now/RB/now what/WP/what you/PRP/you do/VBP/do ?/./? well/RB/well /,/, what/WDT/what you/PRP/you do/VBP/do is/VBZ/is this/DT/this you/PRP/you take/VBP/take here/RB/here is/VBZ/is g/NNP/g. so/RB/so /,/, step/VB/step 2/CD/2 /,/, so/RB/so you/PRP/you take/VBP/take g/RP/g add/JJ/add a/DT/a vertex/NN/vertex /,/, this/DT/this is/VBZ/is a/DT/a new/JJ/new vertex/NN/vertex connected/VBN/connected to/TO/to all/DT/all vertices/NNS/vertices in/IN/in g/NNP/g. now/RB/now /,/, call/VBP/call this/DT/this graph/NN/graph g/NN/g 1/CD/1 /,/, now/RB/now you/PRP/you feed/VBP/feed g/JJ/g 1/CD/1 into/IN/into this/DT/this algorithm/NN/algorithm for/IN/for perfect/NN/perfect matching/NNP/matching. you/PRP/you have/VBP/have taken/VBN/taken g/NN/g /,/, you/PRP/you added/VBD/added vertex/NN/vertex /,/, which/WDT/which is/VBZ/is adjacent/NN/adjacent to/TO/to every/DT/every other/JJ/other vertex/NN/vertex in/IN/in g/NNP/g. and/CC/and now/RB/now you/PRP/you feed/VBP/feed this/DT/this into/IN/into this/DT/this perfect/NN/perfect matching/NNP/matching. again/RB/again two/CD/two things/NNS/things can/MD/can happen/VB/happen /,/, either/DT/either it/PRP/it can/MD/can come/VB/come back/RB/back and/CC/and say/VB/say it/PRP/it has/VBZ/has perfect/JJ/perfect matching/NN/matching or/CC/or it/PRP/it can/MD/can say/VB/say no/NN/no. let/VB/let us/PRP/us see/VB/see what/WP/what happens/NNS/happens in/IN/in both/DT/both cases/NNP/cases. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 38/CD/38 /:/: 48/CD/48 /CD/) so/RB/so /,/, g/IN/g 1/CD/1 is/VBZ/is g/JJ/g plus/NN/plus a/DT/a vertex/NN/vertex connected/VBN/connected to/TO/to all/DT/all vertices/NNS/vertices in/IN/in g/NN/g /,/, that/IN/that is/VBZ/is what/WP/what you/PRP/you want/NNP/want. now/RB/now /,/, supposing/VBG/supposing g/NN/g 1/CD/1 has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. then/RB/then /,/, what/WDT/what can/MD/can you/PRP/you say/VB/say about/IN/about g/NNP/g. well/RB/well /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at a/DT/a perfect/NN/perfect matching/VBG/matching in/IN/in g/NN/g 1/CD/1 /,/, this/DT/this vertex/NN/vertex this/DT/this extra/JJ/extra vertex/NN/vertex is/VBZ/is will/MD/will in/IN/in the/DT/the matching/NN/matching /,/, it/PRP/it will/MD/will be/VB/be connected/VBN/connected to/TO/to something/NN/something in/IN/in g/NNP/g. this/DT/this is/VBZ/is the/DT/the picture/NN/picture here/RB/here is/VBZ/is g/JJ/g /,/, here/RB/here is/VBZ/is the/DT/the extra/JJ/extra vertex/NN/vertex and/CC/and i/PRP/i just/RB/just going/VBG/going to/TO/to draw/VB/draw the/DT/the edges/NNS/edges in/IN/in the/DT/the matching/NNP/matching. so/RB/so /,/, this/DT/this fellow/JJ/fellow will/MD/will be/VB/be connected/VBN/connected to/TO/to something/NN/something here/RB/here in/IN/in this/DT/this matching/NNP/matching. the/DT/the other/JJ/other vertices/NNS/vertices in/IN/in g/NN/g are/VBP/are all/DT/all match/NN/match somewhere/RB/somewhere over/IN/over the/DT/the other/NNP/other. this/DT/this is/VBZ/is if/IN/if g/NN/g 1/CD/1 has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, then/RB/then this/DT/this is/VBZ/is the/DT/the figure/NN/figure /,/, this/DT/this is/VBZ/is how/WRB/how it/PRP/it looks/VBZ/looks like/IN/like /,/, which/WDT/which means/VBZ/means except/IN/except for/IN/for this/DT/this vertex/NNP/vertex. if/IN/if i/PRP/i remove/VBP/remove this/DT/this vertex/NN/vertex out/IN/out /,/, the/DT/the rest/NN/rest of/IN/of the/DT/the graph/NN/graph is/VBZ/is a/DT/a perfect/NN/perfect matching/VBG/matching /,/, which/WDT/which means/VBZ/means there/RB/there is/VBZ/is a/DT/a matching/NN/matching of/IN/of size/NN/size /,/, this/DT/this implies/VBZ/implies that/IN/that g/NN/g has/VBZ/has a/DT/a matching/NN/matching of/IN/of size/NN/size v/NN/v minus/NN/minus 1/CD/1 by/IN/by 2/CD/2. and/CC/and this/DT/this is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching really/NNP/really. we/PRP/we know/VBP/know that/IN/that /,/, because/IN/because v/NN/v did/VBD/did not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/VBG/matching /,/, it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a matching/JJ/matching of/IN/of size/NN/size v/NN/v by/IN/by 2/CD/2. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, it/PRP/it has/VBZ/has a/DT/a matching/NN/matching of/IN/of size/NN/size v/NN/v minus/NN/minus 1/CD/1 by/IN/by 2/CD/2. this/DT/this is/VBZ/is if/IN/if g/NN/g 1/CD/1 has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, what/WP/what if/IN/if g/NN/g 1/CD/1 does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/NNP/matching. if/IN/if g/NN/g 1/CD/1 does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/VBG/matching /,/, then/RB/then we/PRP/we know/VBP/know that/IN/that g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a matching/JJ/matching of/IN/of this/DT/this type/NNP/type. so/RB/so /,/, then/RB/then we/PRP/we create/VBP/create graph/JJ/graph g/NN/g 2/CD/2. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 41/CD/41 /:/: 05/CD/05 /CD/) so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we create/VB/create g/JJ/g 2/CD/2 well/RB/well /,/, similar/JJ/similar you/PRP/you take/VBP/take g/RP/g 1/CD/1 plus/NNS/plus a/DT/a vertex/NN/vertex connected/VBN/connected to/TO/to all/DT/all vertices/NNS/vertices in/IN/in g/NN/g 1/CD/1. now/RB/now /,/, you/PRP/you ask/VBP/ask g/JJ/g 2/CD/2 has/VBZ/has appropriate/JJ/appropriate matching/NN/matching and/CC/and so/RB/so on/NNP/on. then/RB/then /,/, you/PRP/you form/NN/form g/NN/g 3/CD/3 and/CC/and ask/NN/ask whether/IN/whether g/NN/g 3/CD/3 has/VBZ/has a/DT/a perfect/NN/perfect match/NNP/match. and/CC/and you/PRP/you stop/VB/stop as/IN/as soon/RB/soon as/IN/as the/DT/the perfect/NN/perfect matching/VBG/matching fellows/NNS/fellows says/VBZ/says yes/NNP/yes. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write the/DT/the generic/JJ/generic step/NNP/step. so/RB/so /,/, you/PRP/you get/VBP/get g/JJ/g i/PRP/i the/DT/the graph/NN/graph g/NN/g i/PRP/i minus/VBZ/minus 1/CD/1 plus/NN/plus a/DT/a vertex/NN/vertex connected/VBN/connected to/TO/to all/DT/all vertices/NNS/vertices in/IN/in g/NN/g i/PRP/i minus/VBZ/minus 1/CD/1. well/RB/well /,/, this/DT/this is/VBZ/is how/WRB/how you/PRP/you get/VBP/get g/JJ/g i/NNP/i. so/RB/so /,/, now/RB/now you/PRP/you look/VBP/look at/IN/at g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 /,/, g/NN/g 3/LS/3 and/CC/and so/RB/so on/NNP/on. and/CC/and ask/VB/ask whether/IN/whether g/NN/g 1/CD/1 has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, g/NN/g 2/CD/2 has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, let/VB/let us/PRP/us say/VB/say k/NN/k is/VBZ/is the/DT/the first/JJ/first index/NN/index /,/, where/WRB/where the/DT/the perfect/NN/perfect matching/VBG/matching algorithm/NN/algorithm says/VBZ/says yes/NNP/yes. so/RB/so /,/, which/WDT/which means/NNP/means... /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 32/CD/32 /CD/) so/RB/so /,/, assume/NN/assume that/IN/that g/NN/g k/NN/k minus/NN/minus 1/CD/1 does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/VBG/matching and/CC/and g/NN/g k/NN/k has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. now/RB/now /,/, what/WDT/what is/VBZ/is g/VBP/g k/NN/k minus/NN/minus 1/CD/1 and/CC/and g/NN/g k/NN/k look/NN/look like/NNP/like. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my original/JJ/original graph/NN/graph g/NN/g for/IN/for g/NN/g 1/CD/1 i/PRP/i added/VBD/added one/CD/one vertex/NN/vertex with/IN/with this/DT/this connected/VBN/connected every/DT/every single/JJ/single region/NN/region this/DT/this is/VBZ/is g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 i/PRP/i added/VBD/added two/CD/two vertices/NNP/vertices. now/RB/now /,/, this/DT/this is/VBZ/is connected/VBN/connected to/TO/to this/DT/this and/CC/and also/RB/also connected/VBD/connected to/TO/to everything/NN/everything and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, g/NN/g k/NN/k minus/NN/minus 1/CD/1 i/PRP/i have/VBP/have k/NN/k minus/NN/minus vertices/NNS/vertices here/RB/here /,/, they/PRP/they are/VBP/are connected/VBN/connected through/IN/through each/DT/each other/JJ/other and/CC/and they/PRP/they are/VBP/are also/RB/also connected/VBN/connected to/TO/to everything/NN/everything in/IN/in g/NNP/g. similarly/RB/similarly /,/, this/DT/this is/VBZ/is g/NN/g k/NN/k minus/NN/minus 1/CD/1 and/CC/and g/NN/g k/NN/k looks/NNS/looks like/IN/like this/DT/this i/PRP/i have/VBP/have the/DT/the graph/NN/graph g/NN/g and/CC/and k/NN/k vertices/NNS/vertices here/NNP/here. these/DT/these are/VBP/are connected/VBN/connected to/TO/to each/DT/each other/JJ/other and/CC/and they/PRP/they are/VBP/are also/RB/also connected/VBN/connected to/TO/to each/DT/each other/JJ/other k/NN/k vertices/NNS/vertices which/WDT/which are/VBP/are connected/VBN/connected to/TO/to everything/NN/everything each/DT/each other/NNP/other. now/RB/now /,/, this/DT/this does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/VBG/matching and/CC/and this/DT/this has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, what/WP/what does/VBZ/does this/DT/this mean/NNP/mean. now/RB/now /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the perfect/NN/perfect matching/VBG/matching here/NNP/here. now/RB/now /,/, actually/RB/actually i/PRP/i must/MD/must say/VB/say that/IN/that g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to g/VB/g k/NN/k minus/NN/minus 1/CD/1 does/VBZ/does not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/NNP/matching. so/RB/so /,/, k/NN/k was/VBD/was the/DT/the first/JJ/first time/NN/time that/WDT/that we/PRP/we encountered/VBD/encountered a/DT/a graph/NN/graph with/IN/with perfect/NN/perfect matching/VBG/matching g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 /,/, g/NN/g 3/LS/3 up/IN/up to/TO/to g/VB/g k/NN/k minus/NN/minus 1/CD/1 and/CC/and does/VBZ/does not/RB/not have/VB/have one/CD/one and/CC/and g/NN/g k/NN/k has/VBZ/has one/NNP/one. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at g/NN/g k/NNP/k. so/RB/so /,/, what/WDT/what can/MD/can a/DT/a perfect/NN/perfect matching/VBG/matching look/NN/look like/IN/like /,/, can/MD/can it/PRP/it have/VB/have a/DT/a edge/NN/edge like/IN/like this/DT/this /,/, the/DT/the answer/NN/answer is/VBZ/is no/NNP/no. why/WRB/why is/VBZ/is that/IN/that /,/, supposing/VBG/supposing it/PRP/it has/VBZ/has an/DT/an edge/NN/edge like/IN/like this/DT/this in/IN/in the/DT/the matching/NN/matching /,/, you/PRP/you remove/VBP/remove these/DT/these two/CD/two and/CC/and this/DT/this graph/NN/graph now/RB/now looks/VBZ/looks like/IN/like g/NN/g k/NN/k minus/NN/minus 2/CD/2 and/CC/and this/DT/this as/IN/as a/DT/a perfect/NN/perfect matching/NNP/matching. but/CC/but /,/, we/PRP/we know/VBP/know that/IN/that g/NN/g k/NN/k minus/NN/minus 2/CD/2 does/VBZ/does not/RB/not have/NNP/have. so/RB/so /,/, all/DT/all edges/NNS/edges in/IN/in the/DT/the matching/NN/matching must/MD/must be/VB/be from/IN/from vertices/NNS/vertices here/RB/here to/TO/to vertices/NNS/vertices inside/VB/inside g/NNP/g. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the picture/NN/picture here/RB/here is/VBZ/is g/NNP/g. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 45/CD/45 /:/: 07/CD/07 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is g/NN/g k/NN/k these/DT/these are/VBP/are k/NN/k vertices/NNS/vertices /,/, these/DT/these k/NN/k vertices/NNS/vertices are/VBP/are matched/VBN/matched with/IN/with some/DT/some k/NN/k vertices/NNS/vertices in/IN/in g/NNP/g. there/EX/there are/VBP/are n/NN/n minus/NN/minus k/NN/k other/JJ/other vertices/NNS/vertices in/IN/in g/NN/g /,/, which/WDT/which are/VBP/are matched/VBN/matched amongst/NN/amongst themselves/NNP/themselves. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a matching/NN/matching inside/NN/inside g/NN/g of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2. so/RB/so /,/, there/EX/there is/VBZ/is matching/VBG/matching in/IN/in g/NN/g of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2. and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to observe/VB/observe that/IN/that /,/, there/EX/there is/VBZ/is no/DT/no smaller/JJR/smaller /,/, there/EX/there is/VBZ/is no/DT/no matching/NN/matching of/IN/of size/NN/size larger/JJR/larger than/IN/than n/NN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2. this/DT/this is/VBZ/is the/DT/the largest/JJS/largest matching/VBG/matching that/IN/that you/PRP/you can/MD/can have/VB/have /,/, now/RB/now why/WRB/why is/VBZ/is that/IN/that so/NNP/so. supposing/NN/supposing /,/, first/JJ/first this/DT/this has/VBZ/has to/TO/to be/VB/be even/RB/even m/VB/m minus/NN/minus k/NN/k has/VBZ/has to/TO/to be/VB/be even/RB/even /,/, because/IN/because this/DT/this is/VBZ/is an/DT/an integer/NN/integer right/NNP/right. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a matching/NN/matching of/IN/of size/NN/size larger/JJR/larger than/IN/than this/NNP/this. that/IN/that means/VBZ/means /,/, so/RB/so suppose/RB/suppose there/EX/there is/VBZ/is matching/VBG/matching of/IN/of size/NN/size /,/, let/VB/let us/PRP/us say/VB/say n/NN/n minus/NN/minus k/NN/k plus/CC/plus 2/CD/2 by/IN/by 2/CD/2 which/WDT/which is/VBZ/is nothing/NN/nothing but/CC/but /,/, n/VBP/n minus/CC/minus k/NN/k by/IN/by 2/CD/2 plus/CC/plus 1/CD/1 one/CD/one more/JJR/more edge/NNP/edge. so/RB/so /,/, supposing/VBG/supposing there/EX/there is/VBZ/is a/DT/a matching/NN/matching of/IN/of this/DT/this size/NNP/size. so/RB/so /,/, the/DT/the claim/NN/claim is/VBZ/is that/IN/that one/CD/one of/IN/of the/DT/the previous/JJ/previous graph/NNP/graph. in/IN/in fact/NN/fact /,/, then/RB/then g/VB/g of/IN/of k/NN/k minus/NN/minus 2/CD/2 has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. so/RB/so /,/, this/DT/this will/MD/will be/VB/be a/DT/a contradiction/NNP/contradiction. supposing/NN/supposing there/RB/there is/VBZ/is matching/VBG/matching of/IN/of size/NN/size larger/JJR/larger than/IN/than this/DT/this /,/, then/RB/then g/VB/g k/NN/k minus/NN/minus 2/CD/2 will/MD/will have/VB/have a/DT/a perfect/NN/perfect matching/NNP/matching. so/RB/so /,/, we/PRP/we will/MD/will see/VB/see this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 47/CD/47 /:/: 26/CD/26 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is g/JJ/g and/CC/and here/RB/here is/VBZ/is a/DT/a subset/NN/subset which/WDT/which is/VBZ/is of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2 plus/CC/plus 1/CD/1. so/RB/so /,/, here/RB/here i/PRP/i have/VBP/have n/VBN/n minus/NN/minus these/DT/these many/JJ/many which/WDT/which is/NNP/is... so/RB/so /,/, n/IN/n minus/NN/minus n/NN/n by/IN/by 2/CD/2 plus/CC/plus k/NN/k by/IN/by 2/CD/2 /,/, that/IN/that is/VBZ/is this/DT/this size/NN/size /,/, which/WDT/which is/VBZ/is n/VBN/n by/IN/by 2/CD/2 minus/NN/minus and/CC/and minus/NN/minus plus/RB/plus k/NN/k by/IN/by 2/CD/2 minus/NN/minus 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time 48/CD/48 /:/: 20/CD/20 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this let/NN/let me/PRP/me just/RB/just refresh/JJ/refresh /NN/( /:/( refer/NN/refer time/NN/time /:/: 48/CD/48 /:/: 24/CD/24 /CD/) /CD/) we/PRP/we are/VBP/are here/RB/here supposing/VBG/supposing there/EX/there is/VBZ/is a/DT/a matching/NN/matching of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k plus/CC/plus 2/CD/2 by/IN/by 2/CD/2. and/CC/and we/PRP/we have/VBP/have to/TO/to show/VB/show that/IN/that g/NN/g k/NN/k minus/NN/minus 2/CD/2 has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. so/RB/so /,/, this/DT/this is/VBZ/is g/NN/g /,/, so/RB/so it/PRP/it has/VBZ/has a/DT/a matching/NN/matching of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2 plus/CC/plus 1/CD/1. so/RB/so /,/, the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in the/DT/the matching/NN/matching is/VBZ/is twice/NN/twice this/DT/this /,/, so/RB/so the/DT/the size/NN/size /,/, so/RB/so number/NN/number of/IN/of vertices/NNS/vertices here/RB/here is/VBZ/is twice/NN/twice this/DT/this /,/, which/WDT/which is/VBZ/is n/VBN/n minus/NN/minus k/NN/k plus/CC/plus 2/CD/2. so/RB/so /,/, the/DT/the number/NN/number of/IN/of vertices/NNS/vertices here/RB/here is/VBZ/is n/VBN/n minus/NN/minus /,/, so/RB/so which/WDT/which is/VBZ/is k/VBP/k minus/NN/minus 2/CD/2. this/DT/this portion/NN/portion has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, which/WDT/which was/VBD/was our/PRP$/our assumption/NNP/assumption. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at g/NN/g k/NN/k minus/NN/minus 2/CD/2. so/RB/so /,/, g/IN/g k/NN/k minus/NN/minus 2/CD/2 had/VBD/had g/JJ/g /,/, this/DT/this is/VBZ/is g/NN/g this/DT/this in/IN/in fact/NN/fact /,/, is/VBZ/is g/NNP/g. and/CC/and i/PRP/i had/VBD/had k/NN/k minus/NN/minus 2/CD/2 other/JJ/other vertices/NNS/vertices /,/, which/WDT/which were/VBD/were connected/VBN/connected to/TO/to everything/NN/everything in/IN/in g/NN/g /,/, and/CC/and also/RB/also amongst/VBD/amongst themselves/PRP/themselves /,/, if/IN/if this/DT/this was/VBD/was g/NN/g k/NN/k minus/NN/minus 1/CD/1. what/WP/what i/PRP/i do/VBP/do is/VBZ/is this/DT/this /,/, i/PRP/i take/VBP/take this/DT/this matching/NN/matching in/IN/in this/DT/this portion/NNP/portion. as/IN/as if/IN/if and/CC/and each/DT/each of/IN/of these/DT/these k/NN/k minus/NN/minus 2/CD/2 vertices/NNS/vertices i/PRP/i match/VBP/match to/TO/to the/DT/the other/JJ/other size/NNP/size. you/PRP/you can/MD/can see/VB/see that/IN/that /,/, this/DT/this gives/VBZ/gives perfect/NN/perfect matching/NNP/matching. matching/NN/matching on/IN/on this/DT/this portion/NN/portion remains/VBZ/remains the/DT/the same/JJ/same as/IN/as in/IN/in this/DT/this portion/NN/portion here/NNP/here. and/CC/and these/DT/these k/NN/k minus/NN/minus 2/CD/2 vertices/NNS/vertices i/PRP/i match/VBP/match to/TO/to the/DT/the other/JJ/other side/NNP/side. so/IN/so /,/, this/DT/this shows/VBZ/shows that/IN/that g/NN/g k/NN/k minus/NN/minus 2/CD/2 in/IN/in fact/NN/fact /,/, has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /NN/( /:/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 20/CD/20 /CD/) /CD/) /./. so/RB/so /,/, let/VB/let us/PRP/us recap/VB/recap we/PRP/we were/VBD/were given/VBN/given a/DT/a algorithm/NN/algorithm for/IN/for perfect/NN/perfect matching/NNP/matching. and/CC/and the/DT/the objective/NN/objective the/DT/the intermediate/JJ/intermediate objective/NN/objective was/VBD/was to/TO/to design/VB/design a/DT/a algorithm/NN/algorithm to/TO/to find/VB/find the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching in/IN/in g/NNP/g. and/CC/and what/WP/what we/PRP/we do/VBP/do is/VBZ/is this/DT/this ?/./? /:/( /:/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 38/CD/38 /CD/) /CD/) /./. we/PRP/we define/VBP/define graphs/NNS/graphs g/VBP/g i/PRP/i /,/, where/WRB/where g/JJ/g i/PRP/i 's/VBZ/'s g/JJ/g i/PRP/i minus/VBZ/minus 1/CD/1 plus/NN/plus the/DT/the vertex/NN/vertex connected/VBD/connected to/TO/to all/DT/all vertices/NNS/vertices in/IN/in g/NN/g i/PRP/i minus/VBZ/minus 1/CD/1 /CD/( /CD/( refer/NN/refer time/NN/time /:/: 50/CD/50 /:/: 49/CD/49 /CD/) /CD/) /./. we/PRP/we find/VBP/find the/DT/the first/JJ/first graph/NN/graph we/PRP/we look/VBP/look at/IN/at g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 and/CC/and so/RB/so on/NNP/on. and/CC/and we/PRP/we find/VBP/find the/DT/the first/JJ/first graph/NN/graph g/NN/g k/NN/k which/WDT/which has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /,/, which/WDT/which means/VBZ/means g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 /,/, g/NN/g 3/LS/3 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to g/VB/g k/NN/k minus/NN/minus 1/CD/1 /,/, they/PRP/they do/VBP/do not/RB/not have/VB/have a/DT/a perfect/NN/perfect matching/NNP/matching. g/NN/g k/NN/k has/VBZ/has a/DT/a perfect/NN/perfect matching/VBG/matching /NN/( /:/( refer/NN/refer time/NN/time /:/: 51/CD/51 /:/: 05/CD/05 /CD/) /CD/) /./. then/RB/then /,/, we/PRP/we claim/VBP/claim that/IN/that there/EX/there is/VBZ/is a/DT/a matching/NN/matching in/IN/in g/NN/g of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2 and/CC/and no/DT/no larger/NNP/larger. so/RB/so /,/, the/DT/the size/NN/size is/VBZ/is the/DT/the largest/JJS/largest matching/VBG/matching is/VBZ/is n/JJ/n minus/NN/minus k/NN/k by/IN/by 2/CD/2. this/DT/this shows/VBZ/shows that/IN/that given/VBN/given an/DT/an algorithm/NN/algorithm for/IN/for finding/NN/finding the/DT/the perfect/NN/perfect matching/NNP/matching. i/PRP/i can/MD/can design/VB/design an/DT/an algorithm/NN/algorithm for/IN/for finding/NN/finding /,/, the/DT/the matching/NN/matching of/IN/of maximum/NN/maximum size/NN/size in/IN/in a/DT/a graph/NN/graph by/IN/by calling/NN/calling the/DT/the other/JJ/other algorithm/NN/algorithm repeatedly/RB/repeatedly i/PRP/i do/VBP/do not/RB/not call/VB/call it/PRP/it too/RB/too many/JJ/many times/NNP/times. i/PRP/i call/VBP/call it/PRP/it at/IN/at most/JJS/most k/NN/k times/NNS/times here/NNP/here. you/PRP/you can/MD/can actually/RB/actually do/VB/do it/PRP/it much/RB/much faster/JJR/faster /,/, you/PRP/you can/MD/can call/VB/call it/PRP/it faster/JJR/faster than/IN/than k/NN/k /,/, so/RB/so in/IN/in the/DT/the following/JJ/following sense/NNP/sense. this/DT/this k/NN/k can/MD/can it/PRP/it can/MD/can go/VB/go down/RB/down all/DT/all the/DT/the way/NN/way up/RP/up to/TO/to 4/CD/4 /,/, 5/CD/5 up/RP/up to/TO/to a/DT/a constant/NN/constant /,/, which/WDT/which means/VBZ/means you/PRP/you can/MD/can call/VB/call it/PRP/it about/IN/about n/NN/n times/NNP/times. so/RB/so /,/, we/PRP/we have/VBP/have shown/VBN/shown that/IN/that given/VBN/given an/DT/an algorithm/NN/algorithm to/TO/to find/VB/find the/DT/the perfect/NN/perfect matching/VBG/matching in/IN/in a/DT/a graph/NNP/graph. i/PRP/i can/MD/can design/VB/design an/DT/an algorithm/NN/algorithm that/IN/that finds/NNS/finds the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/NNP/matching. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 19/CD/19 /CD/) the/DT/the way/NN/way you/PRP/you do/VBP/do it/PRP/it is/VBZ/is you/PRP/you look/VBP/look at/IN/at graphs/NNS/graphs g/VBP/g /,/, g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 /,/, and/CC/and so/RB/so on/NNP/on. find/IN/find the/DT/the first/JJ/first graph/NN/graph g/NN/g k/NN/k which/WDT/which has/VBZ/has a/DT/a perfect/NN/perfect matching/NNP/matching. and/CC/and the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching /,/, then/RB/then is/VBZ/is n/VBN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2. if/IN/if k/NN/k is/VBZ/is 0/-NONE-/0 /,/, it/PRP/it is/VBZ/is g/JJ/g and/CC/and the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum i/PRP/i think/VBP/think n/JJ/n by/IN/by 2/CD/2 and/CC/and so/RB/so on/NNP/on. if/IN/if g/NN/g k/NN/k is/VBZ/is the/DT/the first/JJ/first time/NN/time you/PRP/you get/VBP/get a/DT/a perfect/NN/perfect matching/VBG/matching /,/, the/DT/the size/NN/size is/VBZ/is n/VBN/n minus/NN/minus k/NN/k by/IN/by 2/CD/2. in/IN/in the/DT/the worst/JJS/worst case/NN/case /,/, you/PRP/you would/MD/would call/VB/call the/DT/the perfect/NN/perfect matching/VBG/matching algorithm/NN/algorithm n/NN/n times/NNP/times. i/PRP/i would/MD/would call/VB/call g/NN/g 1/CD/1 /,/, g/JJ/g 2/CD/2 /,/, g/NN/g 3/LS/3 and/CC/and i/PRP/i can/MD/can go/VB/go all/PDT/all the/DT/the way/NN/way up/RP/up to/TO/to n/NNP/n. now/RB/now /,/, there/EX/there is/VBZ/is a/DT/a smarter/NN/smarter way/NN/way to/TO/to do/VB/do this/DT/this using/VBG/using binary/NN/binary search/NN/search /,/, which/WDT/which i/PRP/i will/MD/will let/VB/let you/PRP/you do/VBP/do /,/, which/WDT/which let/VB/let you/PRP/you figure/VB/figure out/RP/out this/DT/this k/NN/k /,/, using/VBG/using only/RB/only log/JJ/log n/NN/n calls/VBZ/calls to/TO/to the/DT/the algorithm/NN/algorithm for/IN/for perfect/NN/perfect matching/NNP/matching. it/PRP/it resembles/VBZ/resembles binary/JJ/binary search/NN/search and/CC/and is/VBZ/is an/DT/an exercise/NN/exercise for/IN/for you/NNP/you. /:/( /:/( refer/NN/refer time/NN/time /:/: 53/CD/53 /:/: 17/CD/17 /CD/) /CD/) essentially/RB/essentially it/PRP/it shows/VBZ/shows that/IN/that by/IN/by calling/NN/calling this/DT/this algorithm/NN/algorithm at/IN/at most/JJS/most n/JJ/n times/NNS/times i/PRP/i am/VBP/am able/JJ/able to/TO/to determine/VB/determine at/IN/at least/JJS/least the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching in/IN/in the/DT/the graph/NNP/graph. but/CC/but /,/, let/VB/let us/PRP/us go/VB/go back/RB/back now/RB/now /,/, the/DT/the objective/NN/objective we/PRP/we had/VBD/had was/VBD/was to/TO/to find/VB/find this/DT/this perfect/NN/perfect matching/NNP/matching. so/RB/so /,/, here/RB/here now/RB/now i/PRP/i have/VBP/have full/JJ/full filled/VBN/filled this/DT/this intermediate/JJ/intermediate objective/NN/objective /:/( /:/( refer/NN/refer time/NN/time /:/: 53/CD/53 /:/: 39/CD/39 /CD/) /CD/) /./. i/PRP/i can/MD/can design/VB/design an/DT/an algorithm/NN/algorithm to/TO/to find/VB/find the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching /,/, i/PRP/i want/VBP/want to/TO/to actually/RB/actually find/VB/find the/DT/the edges/NNS/edges in/IN/in the/DT/the maximum/NN/maximum matching/VBG/matching how/WRB/how do/VBP/do i/PRP/i do/VBP/do this/NNP/this. now/RB/now /,/, here/RB/here is/VBZ/is the/DT/the trick/NN/trick /,/, you/PRP/you take/VBP/take this/DT/this graph/NN/graph g/NNP/g. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 01/CD/01 /CD/) so/RB/so /,/, i/PRP/i take/VBP/take g/JJ/g i/PRP/i find/VBP/find the/DT/the size/NN/size of/IN/of the/DT/the perfect/NN/perfect /,/, size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/NNP/matching. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say the/DT/the size/NN/size is/VBZ/is l/NN/l /,/, the/DT/the size/NN/size of/IN/of a/DT/a maximum/NN/maximum matching/NNP/matching. now/RB/now /,/, what/WDT/what i/PRP/i do/VBP/do is/VBZ/is /,/, pick/NN/pick any/DT/any edge/NN/edge in/IN/in g/NN/g and/CC/and remove/VB/remove it/PRP/it /,/, remove/VBP/remove a/DT/a edge/NN/edge from/IN/from g/NNP/g. and/CC/and now/RB/now ask/VB/ask the/DT/the same/JJ/same question/NN/question /,/, what/WP/what the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching ?/./? if/IN/if it/PRP/it remains/VBZ/remains l/NN/l /,/, then/RB/then i/PRP/i throw/VBP/throw away/RB/away this/DT/this edge/NN/edge and/CC/and i/PRP/i concentrate/VBP/concentrate on/IN/on the/DT/the graph/NN/graph at/IN/at remains/NNP/remains. if/IN/if it/PRP/it is/VBZ/is not/RB/not /,/, if/IN/if it/PRP/it decreases/VBZ/decreases then/RB/then i/PRP/i put/VBD/put this/DT/this edge/NN/edge back/NNP/back. this/DT/this edge/NN/edge is/VBZ/is part/NN/part of/IN/of the/DT/the maximum/NN/maximum matching/NNP/matching. so/RB/so /,/, i/PRP/i leave/VBP/leave this/DT/this edge/NN/edge i/PRP/i look/VBP/look at/IN/at the/DT/the edges/NNS/edges e/VBP/e 1/CD/1 /,/, e/NN/e 2/CD/2 let/NN/let us/PRP/us say/VBP/say up/RP/up to/TO/to e/VB/e m/NN/m 1/CD/1 by/IN/by 1/CD/1. when/WRB/when /,/, i/PRP/i look/VBP/look at/IN/at a/DT/a edge/NN/edge i/PRP/i remove/VBP/remove it/PRP/it and/CC/and i/PRP/i ask/VBP/ask /,/, if/IN/if the/DT/the resultant/NN/resultant graph/NN/graph has/VBZ/has a/DT/a matching/NN/matching of/IN/of size/NN/size l/NNP/l. i/PRP/i find/VBP/find the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching the/DT/the resultant/NN/resultant has/NNP/has. if/IN/if it/PRP/it is/VBZ/is l/JJ/l /,/, then/RB/then i/PRP/i throw/VBP/throw away/RB/away this/DT/this edge/NNP/edge. otherwise/NN/otherwise /,/, i/PRP/i put/VBD/put this/DT/this edge/NN/edge back/RB/back by/IN/by the/DT/the time/NN/time i/PRP/i am/VBP/am through/IN/through with/IN/with all/DT/all these/DT/these edges/NNP/edges. but/CC/but /,/, what/WP/what i/PRP/i will/MD/will be/VB/be left/VBN/left with/IN/with is/VBZ/is a/DT/a graph/NN/graph which/WDT/which will/MD/will be/VB/be just/RB/just a/DT/a matching/NNP/matching. it/PRP/it will/MD/will just/RB/just be/VB/be a/DT/a matching/NN/matching of/IN/of size/NN/size l/NNP/l. let/NN/let us/PRP/us do/VBP/do an/DT/an example/NNP/example. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take a/DT/a simple/JJ/simple graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 55/CD/55 /:/: 43/CD/43 /CD/) so/RB/so /,/, here/RB/here so/RB/so let/VB/let us/PRP/us take/VB/take a/DT/a simple/JJ/simple graph/NN/graph e/NN/e 1/CD/1 /,/, e/NN/e 2/CD/2 /,/, e/NN/e 3/CD/3. the/DT/the size/NN/size of/IN/of maximum/NN/maximum matching/VBG/matching here/RB/here is/VBZ/is 2/CD/2 i/PRP/i remove/VBP/remove e/JJ/e 1/CD/1 and/CC/and i/PRP/i ask/VBP/ask what/WP/what is/VBZ/is the/DT/the size/NN/size ?/./? now/RB/now /,/, the/DT/the size/NN/size is/VBZ/is fallen/VBN/fallen by/IN/by one/CD/one the/DT/the size/NN/size is/VBZ/is one/NNP/one. so/RB/so /,/, i/PRP/i put/VBD/put e/JJ/e 1/CD/1 back/RB/back i/PRP/i remove/VBP/remove e/JJ/e 2/CD/2 /,/, i/PRP/i ask/VBP/ask what/WP/what is/VBZ/is the/DT/the size/NN/size ?/./? size/NN/size is/VBZ/is 2/CD/2. so/RB/so /,/, i/PRP/i throw/VBP/throw away/RB/away it/PRP/it /,/, at/IN/at this/DT/this point/NN/point the/DT/the graph/NN/graph looks/VBZ/looks like/IN/like this/DT/this /,/, because/IN/because i/PRP/i have/VBP/have thrown/VBN/thrown away/RB/away e/JJ/e 2/CD/2. then/RB/then /,/, i/PRP/i ask/VBP/ask for/IN/for e/NN/e three/CD/three i/PRP/i remove/VBP/remove e/JJ/e 3/CD/3 and/CC/and the/DT/the size/NN/size falls/VBZ/falls by/IN/by one/NNP/one. so/RB/so /,/, i/PRP/i put/VBD/put e/JJ/e 3/CD/3 back/NNP/back. so/RB/so /,/, i/PRP/i am/VBP/am left/VBN/left with/IN/with e/NN/e 1/CD/1 and/CC/and e/NN/e 3/CD/3 and/CC/and when/WRB/when i/PRP/i look/VBP/look at/IN/at the/DT/the graph/NN/graph that/IN/that remains/VBZ/remains is/VBZ/is the/DT/the matching/NNP/matching. in/IN/in fact/NN/fact /,/, it/PRP/it will/MD/will be/VB/be a/DT/a matching/NN/matching of/IN/of size/NN/size l/NN/l /,/, apart/NN/apart from/IN/from the/DT/the matching/NN/matching of/IN/of size/NN/size l/NNP/l. if/IN/if there/EX/there is/VBZ/is any/DT/any other/JJ/other edge/NN/edge /,/, you/PRP/you know/VBP/know when/WRB/when you/PRP/you remove/VBP/remove this/DT/this edge/NN/edge /,/, the/DT/the graph/NN/graph will/MD/will still/RB/still have/VB/have a/DT/a matching/JJ/matching of/IN/of size/NN/size l/NNP/l. so/RB/so /,/, you/PRP/you will/MD/will throw/VB/throw this/DT/this edge/NN/edge away/NNP/away. so/RB/so /,/, at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this procedure/NN/procedure /,/, what/WP/what you/PRP/you will/MD/will be/VB/be left/VBN/left with/IN/with is/VBZ/is the/DT/the matching/NN/matching of/IN/of size/NN/size l/NN/l /,/, which/WDT/which is/VBZ/is what/WP/what you/PRP/you are/VBP/are looking/VBG/looking for/NNP/for. so/RB/so /,/, this/DT/this completes/VBZ/completes our/PRP$/our objective/JJ/objective which/WDT/which we/PRP/we started/VBD/started out/RP/out with/NNP/with. we/PRP/we were/VBD/were given/VBN/given a/DT/a algorithm/NN/algorithm for/IN/for perfect/NN/perfect matching/NNP/matching. and/CC/and we/PRP/we wanted/VBD/wanted to/TO/to design/VB/design an/DT/an algorithm/NN/algorithm for/IN/for maximum/NN/maximum matching/NNP/matching. what/WP/what we/PRP/we did/VBD/did first/RB/first was/VBD/was we/PRP/we designed/VBN/designed algorithm/NN/algorithm /:/( /:/( refer/NN/refer time/NN/time /:/: 57/CD/57 /:/: 04/CD/04 /CD/) /CD/) to/TO/to find/VB/find the/DT/the size/NN/size of/IN/of maximum/NN/maximum matching/NNP/matching. and/CC/and using/VBG/using this/DT/this we/PRP/we were/VBD/were able/JJ/able to/TO/to design/NN/design one/CD/one for/IN/for maximum/NN/maximum matching/NNP/matching. so/RB/so /,/, we/PRP/we had/VBD/had this/DT/this in/IN/in our/PRP$/our sub/NN/sub routine/NN/routine library/NN/library /,/, we/PRP/we added/VBD/added this/DT/this to/TO/to the/DT/the library/NN/library by/IN/by using/VBG/using this/DT/this algorithm/NNP/algorithm. and/CC/and once/RB/once we/PRP/we had/VBD/had this/DT/this in/IN/in the/DT/the library/NN/library it/PRP/it was/VBD/was easy/JJ/easy to/TO/to design/NN/design a/DT/a algorithm/NN/algorithm here/NNP/here. we/PRP/we started/VBD/started with/IN/with this/DT/this and/CC/and we/PRP/we ended/NNP/ended. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institution/NN/institution of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 27/CD/27 np-completeness/JJ/np-completeness ?/./? 2/CD/2 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 48/CD/48 /CD/) last/JJ/last time/NN/time we/PRP/we looked/VBD/looked at/IN/at the/DT/the concept/NN/concept of/IN/of reduction/NNP/reduction. so/RB/so let/VB/let me/PRP/me just/RB/just quickly/RB/quickly review/VB/review /,/, what/WDT/what we/PRP/we mean/VBP/mean by/IN/by reduction/NN/reduction ?/./? so/RB/so /,/, reduction/NN/reduction means/VBZ/means this/DT/this given/VBN/given an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for a/DT/a problem/NN/problem pi/NN/pi 1/CD/1. so/RB/so /,/, you/PRP/you are/VBP/are given/VBN/given a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 1/CD/1. then/RB/then using/VBG/using this/DT/this /,/, we/PRP/we design/VBP/design an/DT/an efficient/NN/efficient algorithm/NN/algorithm for/IN/for a/DT/a different/JJ/different problem/NNP/problem. so/RB/so /,/, we/PRP/we essentially/RB/essentially showed/VBD/showed that/IN/that this/DT/this implies/NNS/implies that/IN/that there/EX/there exists/NNS/exists an/DT/an efficient/NN/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 2/CD/2. so/RB/so /,/, given/VBN/given that/IN/that there/EX/there exists/NNS/exists an/DT/an efficient/NN/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 1/CD/1. so/RB/so /,/, one/CD/one problem/NN/problem we/PRP/we show/VBP/show that/IN/that there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 2/CD/2. the/DT/the way/NN/way we/PRP/we do/VBP/do it/PRP/it is/VBZ/is imagine/NN/imagine that/IN/that this/DT/this pi/NN/pi 1/CD/1 somebody/NN/somebody has/VBZ/has coded/VBN/coded for/IN/for pi/NN/pi 1/CD/1 an/DT/an algorithm/NN/algorithm for/IN/for pi/NN/pi 1/CD/1 and/CC/and it/PRP/it exists/VBZ/exists in/IN/in some/DT/some library/NNP/library. then/RB/then /,/, we/PRP/we use/VBP/use this/DT/this to/TO/to design/VB/design an/DT/an algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 2/CD/2. so/RB/so /,/, this/DT/this algorithm/NN/algorithm that/IN/that we/PRP/we design/VBP/design it/PRP/it takes/VBZ/takes as/IN/as input/NN/input for/IN/for problem/NN/problem pi/NN/pi 2/CD/2. it/PRP/it perhaps/RB/perhaps does/VBZ/does something/NN/something to/TO/to the/DT/the input/NN/input and/CC/and then/RB/then calls/VBZ/calls this/DT/this sub/NN/sub routine/NN/routine for/IN/for an/DT/an algorithm/NN/algorithm pi/NN/pi 1/CD/1 may/MD/may be/VB/be once/RB/once may/MD/may be/VB/be twice/NN/twice repeatedly/NNP/repeatedly. and/CC/and at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this it/PRP/it outputs/VBZ/outputs an/DT/an answer/NN/answer and/CC/and this/DT/this answer/NN/answer is/VBZ/is for/IN/for problem/NN/problem pi/NN/pi 2/CD/2. so/RB/so /,/, essentially/RB/essentially we/PRP/we have/VBP/have solved/VBN/solved problem/NN/problem pi/NN/pi 2/CD/2 assuming/VBG/assuming that/IN/that somebody/NN/somebody has/VBZ/has given/VBN/given a/DT/a solution/NN/solution for/IN/for problem/NN/problem pi/NN/pi 1/CD/1. the/DT/the two/CD/two problems/NNS/problems /,/, we/PRP/we looked/VBD/looked at/IN/at last/JJ/last time/NN/time was/VBD/was pi/NN/pi 1/CD/1 was/VBD/was given/VBN/given a/DT/a graph/NNP/graph. does/VBZ/does /,/, there/EX/there exist/NN/exist a/DT/a perfect/NN/perfect matching/VBG/matching in/IN/in the/DT/the graph/NN/graph that/IN/that was/VBD/was pi/NN/pi 1/CD/1. and/CC/and the/DT/the algorithm/NN/algorithm /,/, we/PRP/we designed/VBD/designed was/VBD/was given/VBN/given a/DT/a graph/NN/graph output/NN/output a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum size/NN/size that/WDT/that was/VBD/was pi/VBP/pi 2/CD/2. and/CC/and we/PRP/we did/VBD/did in/IN/in fact/NN/fact /,/, repeatedly/RB/repeatedly call/VBP/call this/DT/this pi/NN/pi 1/CD/1 after/IN/after modifying/NN/modifying the/DT/the inputs/NNS/inputs likely/NNP/likely. so/RB/so /,/, why/WRB/why is/VBZ/is this/DT/this called/VBN/called the/DT/the reduction/NN/reduction ?/./? it/PRP/it is/VBZ/is called/VBN/called the/DT/the reduction/NN/reduction in/IN/in the/DT/the following/JJ/following sense/NN/sense that/IN/that you/PRP/you actually/RB/actually want/VBP/want to/TO/to call/VB/call /,/, you/PRP/you actually/RB/actually want/VBP/want to/TO/to solve/VB/solve a/DT/a problem/NN/problem pi/NN/pi 2/CD/2. and/CC/and you/PRP/you have/VBP/have somehow/RB/somehow reduced/VBN/reduced this/DT/this problem/NN/problem solving/VBG/solving the/DT/the problem/NN/problem pi/NN/pi 1/CD/1. in/IN/in the/DT/the sense/NN/sense that/IN/that you/PRP/you can/MD/can solve/VB/solve the/DT/the problem/NN/problem pi/NN/pi 1/CD/1 /,/, you/PRP/you can/MD/can solve/VB/solve problem/NN/problem pi/NN/pi 2/CD/2. so/RB/so /,/, you/PRP/you have/VBP/have reduced/VBN/reduced the/DT/the problem/NN/problem pi/NN/pi 2/CD/2 to/TO/to a/DT/a problem/NN/problem pi/NN/pi 1/CD/1. and/CC/and that/IN/that is/VBZ/is how/WRB/how the/DT/the word/NN/word reduction/NN/reduction comes/NNP/comes. but/CC/but /,/, the/DT/the essential/JJ/essential method/NN/method is/VBZ/is this/DT/this given/VBN/given an/DT/an efficient/JJ/efficient problem/NN/problem algorithm/NN/algorithm for/IN/for one/CD/one problem/NN/problem find/NN/find an/DT/an efficient/NN/efficient algorithm/NN/algorithm for/IN/for another/DT/another problem/NNP/problem. and/CC/and you/PRP/you have/VBP/have to/TO/to use/VB/use the/DT/the algorithm/NN/algorithm for/IN/for the/DT/the problem/NN/problem given/VBN/given to/TO/to construct/VB/construct this/DT/this efficient/NN/efficient algorithm/NNP/algorithm. so/RB/so /,/, this/DT/this was/VBD/was a/DT/a concept/NN/concept of/IN/of reduction/NNP/reduction. we/PRP/we will/MD/will in/IN/in fact/NN/fact /,/, see/VB/see one/CD/one more/JJR/more example/NN/example of/IN/of this/DT/this very/RB/very shortly/NNP/shortly. before/IN/before /,/, we/PRP/we see/VBP/see an/DT/an example/NN/example here/RB/here is/VBZ/is a/DT/a word/NN/word which/WDT/which seems/VBZ/seems a/DT/a bit/NN/bit new/JJ/new which/WDT/which is/VBZ/is efficient/NNP/efficient. problems/NNS/problems have/VBP/have been/VBN/been defined/VBN/defined /,/, we/PRP/we have/VBP/have seen/VBN/seen many/JJ/many problems/NNS/problems /,/, algorithms/NNS/algorithms have/VBP/have been/VBN/been defined/NNP/defined. we/PRP/we have/VBP/have seen/VBN/seen many/JJ/many algorithms/NNS/algorithms well/RB/well what/WP/what does/VBZ/does this/DT/this efficient/NN/efficient means/NNP/means. so/RB/so /,/, let/VB/let me/PRP/me define/VB/define what/WP/what i/PRP/i mean/VBP/mean by/IN/by efficient/JJ/efficient ?/./? we/PRP/we had/VBD/had seen/VBN/seen earlier/JJR/earlier a/DT/a solution/NN/solution to/TO/to one/CD/one of/IN/of these/DT/these scheduling/VBG/scheduling problems/NNS/problems /,/, where/WRB/where the/DT/the time/NN/time taken/VBN/taken was/VBD/was just/RB/just too/RB/too much/JJ/much ?/./? that/IN/that was/VBD/was a/DT/a inefficient/NN/inefficient algorithm/NNP/algorithm. an/DT/an efficient/NN/efficient algorithm/NN/algorithm /,/, we/PRP/we would/MD/would like/VB/like to/TO/to be/VB/be something/NN/something that/WDT/that on/IN/on reasonable/JJ/reasonable size/NN/size inputs/NNS/inputs finishes/NNS/finishes in/IN/in reasonable/JJ/reasonable amount/NN/amount of/IN/of time/NNP/time. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 03/CD/03 /CD/) so/RB/so /,/, let/VB/let me/PRP/me tell/VB/tell you/PRP/you algorithms/VBZ/algorithms which/WDT/which are/VBP/are not/RB/not efficient/JJ/efficient to/TO/to start/VB/start with/NNP/with. so/RB/so /,/, these/DT/these are/VBP/are usually/RB/usually brute/JJ/brute force/NN/force algorithms/NNS/algorithms are/VBP/are not/RB/not efficient/NNP/efficient. so/RB/so /,/, what/WDT/what do/VBP/do you/PRP/you mean/VB/mean by/IN/by brute/NN/brute force/NN/force algorithms/NNS/algorithms ?/./? brute/NN/brute force/NN/force algorithms/NNS/algorithms are/VBP/are algorithms/NNS/algorithms that/IN/that look/NN/look at/IN/at all/DT/all possible/JJ/possible solution/NN/solution sets/NNP/sets. there/EX/there may/MD/may be/VB/be many/JJ/many possible/JJ/possible solutions/NNS/solutions given/VBN/given your/PRP$/your input/NN/input there/EX/there could/MD/could be/VB/be many/JJ/many possible/JJ/possible solutions/NNP/solutions. and/CC/and you/PRP/you want/VBP/want to/TO/to pick/VB/pick one/CD/one which/WDT/which is/VBZ/is good/JJ/good or/CC/or the/DT/the best/NNP/best. so/RB/so /,/, the/DT/the brute/NN/brute force/NN/force algorithm/NN/algorithm would/MD/would look/VB/look at/IN/at all/DT/all possible/JJ/possible ways/NNS/ways of/IN/of doing/VBG/doing this/DT/this and/CC/and pick/NN/pick the/DT/the best/JJS/best one/NNP/one. for/IN/for instance/NN/instance /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to look/VB/look for/IN/for a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum size/NN/size a/DT/a brute/NN/brute force/NN/force algorithm/NN/algorithm would/MD/would look/VB/look at/IN/at all/DT/all possible/JJ/possible collection/NN/collection of/IN/of edges/NNP/edges. all/DT/all possible/JJ/possible subsets/NNS/subsets of/IN/of edges/NNS/edges /,/, then/RB/then check/VB/check whether/IN/whether each/DT/each subset/NN/subset is/VBZ/is a/DT/a matching/NN/matching and/CC/and also/RB/also the/DT/the size/NNP/size. and/CC/and from/IN/from this/DT/this you/PRP/you can/MD/can certainly/RB/certainly find/VB/find out/RP/out a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum size/NNP/size. but/CC/but this/DT/this algorithm/NN/algorithm takes/VBZ/takes too/RB/too much/JJ/much time/NNP/time. so/RB/so /,/, if/IN/if there/EX/there are/VBP/are m/NN/m edges/NNS/edges then/RB/then you/PRP/you take/VBP/take 2/CD/2 to/TO/to the/DT/the m/NN/m /,/, you/PRP/you have/VBP/have to/TO/to look/VB/look at/IN/at 2/CD/2 to/TO/to the/DT/the m/NN/m subsets/NNS/subsets and/CC/and we/PRP/we have/VBP/have seen/VBN/seen that/IN/that this/DT/this is/VBZ/is just/RB/just too/RB/too much/NNP/much. so/RB/so /,/, these/DT/these usually/RB/usually search/NN/search exhaustively/RB/exhaustively through/IN/through the/DT/the entire/JJ/entire solution/NN/solution space/NNP/space. and/CC/and if/IN/if the/DT/the input/NN/input is/VBZ/is of/IN/of length/NN/length n/NN/n that/WDT/that is/VBZ/is the/DT/the other/JJ/other sort/NN/sort of/IN/of characteristics/NNS/characteristics of/IN/of this/DT/this brute/NN/brute force/NN/force algorithm/NNP/algorithm. the/DT/the input/NN/input size/NN/size is/VBZ/is n/VBN/n typical/JJ/typical times/NNS/times taken/VBN/taken by/IN/by these/DT/these brute/JJ/brute force/NN/force algorithms/NNS/algorithms is/VBZ/is 2/CD/2 to/TO/to the/DT/the n/NN/n /,/, because/IN/because we/PRP/we have/VBP/have just/RB/just looked/VBN/looked at/IN/at all/DT/all subsets/NNP/subsets. typical/JJ/typical times/NNS/times are/VBP/are 2/CD/2 to/TO/to the/DT/the n/NN/n and/CC/and this/DT/this is/VBZ/is just/RB/just too/RB/too much/NNP/much. and/CC/and we/PRP/we saw/VBD/saw that/IN/that you/PRP/you design/VBP/design such/JJ/such algorithms/NNS/algorithms you/PRP/you may/MD/may get/VB/get fired/NNP/fired. so/RB/so /,/, these/DT/these are/VBP/are not/RB/not the/DT/the algorithms/NNS/algorithms that/WDT/that we/PRP/we are/VBP/are looking/VBG/looking for/IN/for these/DT/these are/VBP/are not/RB/not efficient/JJ/efficient /,/, what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/NNP/that. so/RB/so /,/, by/IN/by efficient/NN/efficient i/PRP/i mean/VBP/mean that/IN/that the/DT/the running/VBG/running time/NN/time of/IN/of the/DT/the algorithm/NN/algorithm is/VBZ/is bounded/VBN/bounded by/IN/by the/DT/the polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NNP/size. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 38/CD/38 /CD/) let/NN/let me/PRP/me write/VBP/write this/DT/this down/NN/down for/IN/for us/PRP/us this/DT/this would/MD/would mean/VB/mean this/DT/this /,/, the/DT/the running/NN/running time/NN/time of/IN/of the/DT/the algorithm/NN/algorithm is/VBZ/is bounded/VBN/bounded by/IN/by a/DT/a polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NNP/size. so/RB/so let/VB/let me/PRP/me restate/VB/restate this/DT/this again/NN/again /,/, what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by polynomial/JJ/polynomial ?/./? the/DT/the running/NN/running time/NN/time which/WDT/which is/VBZ/is bounded/VBN/bounded by/IN/by let/NN/let us/PRP/us say/VBP/say n/NN/n to/TO/to the/DT/the constant/NNP/constant. so/RB/so let/VB/let me/PRP/me /,/, just/RB/just state/NN/state this/DT/this again/NN/again which/WDT/which means/VBZ/means i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to restate/VB/restate this/NNP/this. there/RB/there exists/VBZ/exists a/DT/a constant/JJ/constant c/NN/c such/JJ/such that/IN/that the/DT/the running/VBG/running time/NN/time t/NN/t of/IN/of n/NN/n is/VBZ/is big/JJ/big o/NN/o of/IN/of n/NN/n to/TO/to the/DT/the c/NN/c /,/, where/WRB/where n/NN/n is/VBZ/is the/DT/the input/NN/input size/NNP/size. so/RB/so this/DT/this is/VBZ/is /,/, what/WP/what efficient/NN/efficient for/IN/for us/PRP/us will/MD/will mean/VB/mean ?/./? most/JJS/most of/IN/of the/DT/the algorithms/NNS/algorithms /,/, we/PRP/we studied/VBD/studied so/RB/so far/RB/far are/VBP/are efficient/JJ/efficient in/IN/in this/DT/this way/NNP/way. for/IN/for instance/NN/instance sorting/VBG/sorting /,/, we/PRP/we can/MD/can do/VB/do in/IN/in n/NN/n log/NN/log n/NN/n times/NNP/times. that/IN/that certainly/RB/certainly bounded/VBD/bounded by/IN/by a/DT/a polynomial/JJ/polynomial n/NN/n square/NN/square bounded/VBD/bounded by/IN/by n/NN/n square/NNP/square. the/DT/the other/JJ/other algorithms/NNS/algorithms which/WDT/which you/PRP/you have/VBP/have studied/VBN/studied in/IN/in your/PRP$/your divide/NN/divide and/CC/and conquer/NN/conquer or/CC/or dynamic/JJ/dynamic programming/NN/programming they/PRP/they are/VBP/are all/RB/all bounded/VBN/bounded by/IN/by a/DT/a polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NN/size n/NN/n square/NN/square n/NN/n cube/NNP/cube. shortest/NN/shortest path/NN/path finding/NN/finding minimum/NN/minimum spanning/VBG/spanning trees/NNS/trees all/DT/all most/JJS/most any/DT/any algorithm/NN/algorithm that/IN/that you/PRP/you have/VBP/have studied/VBN/studied so/RB/so far/NNP/far. they/PRP/they are/VBP/are all/RB/all their/PRP$/their running/NN/running times/NNS/times are/VBP/are all/DT/all bounded/VBN/bounded by/IN/by a/DT/a polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NNP/size. and/CC/and these/DT/these are/VBP/are the/DT/the algorithms/NNS/algorithms we/PRP/we have/VBP/have studied/VBN/studied so/RB/so far/RB/far are/VBP/are efficient/JJ/efficient /,/, why/WRB/why polynomial/JJ/polynomial /,/, why/WRB/why is/VBZ/is the/DT/the notion/NN/notion of/IN/of efficiency/NN/efficiency /,/, why/WRB/why not/RB/not some/DT/some other/JJ/other function/NN/function of/IN/of n/NNP/n. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 19/CD/19 /CD/) so/RB/so /,/, the/DT/the reason/NN/reason is/VBZ/is this/DT/this /,/, if/IN/if you/PRP/you compare/VBP/compare n/JJ/n to/TO/to the/DT/the c/NN/c if/IN/if you/PRP/you compare/VBP/compare n/JJ/n to/TO/to the/DT/the c/NNP/c. and/CC/and let/VB/let us/PRP/us say/VB/say 2/CD/2 to/TO/to the/DT/the n/NNP/n. so/RB/so /,/, these/DT/these are/VBP/are 2/CD/2 to/TO/to the/DT/the n/NN/n is/VBZ/is what/WP/what brute/NN/brute force/NN/force algorithm/NN/algorithm would/MD/would take/VB/take and/CC/and n/VB/n to/TO/to the/DT/the c/NN/c is/VBZ/is what/WP/what our/PRP$/our notion/NN/notion of/IN/of efficiency/NN/efficiency is/VBZ/is will/MD/will be/NNP/be. if/IN/if you/PRP/you look/VBP/look at/IN/at these/DT/these two/CD/two functions/NNS/functions then/RB/then 2/CD/2 to/TO/to the/DT/the n/NN/n grows/VBZ/grows just/RB/just much/JJ/much faster/NN/faster than/IN/than n/NN/n to/TO/to the/DT/the c/NNP/c. so/RB/so /,/, even/RB/even for/IN/for inputs/NNS/inputs of/IN/of size/NN/size 1000/CD/1000 square/NN/square and/CC/and 2/CD/2 to/TO/to the/DT/the 1000/CD/1000 are/VBP/are just/RB/just two/CD/two different/JJ/different things/NNP/things. if/IN/if you/PRP/you have/VBP/have something/NN/something which/WDT/which is/VBZ/is let/VBN/let us/PRP/us say/VBP/say n/NN/n square/NN/square then/RB/then if/IN/if you/PRP/you program/NN/program an/DT/an algorithm/NN/algorithm /,/, which/WDT/which runs/VBZ/runs in/IN/in time/NN/time 1000/CD/1000 square/NN/square that/WDT/that will/MD/will take/VB/take a/DT/a few/JJ/few minutes/NNS/minutes to/TO/to complete/NNP/complete. if/IN/if your/PRP$/your algorithm/NN/algorithm takes/VBZ/takes 2/CD/2 to/TO/to the/DT/the 1000/CD/1000. well/RB/well /,/, it/PRP/it is/VBZ/is not/RB/not going/VBG/going to/TO/to stop/VB/stop at/IN/at least/JJS/least in/IN/in our/PRP$/our life/NN/life times/NNS/times may/MD/may be/VB/be much/RB/much more/NNP/more. so/RB/so that/IN/that is/VBZ/is why/WRB/why /,/, this/DT/this motion/NN/motion of/IN/of efficiency/NN/efficiency has/VBZ/has been/VBN/been is/VBZ/is prevalent/NNP/prevalent. the/DT/the other/JJ/other sort/NN/sort of/IN/of reason/NN/reason is/VBZ/is the/DT/the in/IN/in practice/NN/practice usually/RB/usually when/WRB/when the/DT/the problem/NN/problem has/VBZ/has an/DT/an algorithm/NN/algorithm which/WDT/which runs/VBZ/runs an/DT/an polynomial/JJ/polynomial in/IN/in input/NN/input size/NNP/size. so/RB/so usually/RB/usually in/IN/in practice/NN/practice /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a constant/JJ/constant /,/, so/RB/so that/IN/that you/PRP/you can/MD/can bound/VB/bound the/DT/the running/NN/running time/NN/time by/IN/by n/NN/n to/TO/to the/DT/the c/NNP/c. this/DT/this c/NN/c happens/VBZ/happens to/TO/to be/VB/be very/RB/very small/JJ/small 2/CD/2 or/CC/or 3/CD/3 /,/, there/EX/there are/VBP/are very/RB/very few/JJ/few algorithms/NNS/algorithms /,/, whose/WP$/whose running/VBG/running times/NNS/times are/VBP/are more/RBR/more than/IN/than n/NN/n cube/NNP/cube. if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for this/DT/this problem/NN/problem which/WDT/which means/VBZ/means the/DT/the running/NN/running time/NN/time is/VBZ/is bounded/VBN/bounded by/IN/by a/DT/a polynomial/NNP/polynomial. then/RB/then /,/, using/VBG/using this/DT/this polynomial/JJ/polynomial is/VBZ/is small/JJ/small like/IN/like n/NN/n n/NN/n square/NN/square n/NN/n cube/NN/cube log/NN/log n/NNP/n. so/RB/so in/IN/in practice/NN/practice /,/, if/IN/if there/EX/there is/VBZ/is such/JJ/such a/DT/a c/NN/c /,/, usually/RB/usually less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 /,/, so/RB/so that/IN/that is/VBZ/is why/WRB/why one/CD/one uses/NNS/uses this/DT/this notion/NN/notion of/IN/of efficiency/NN/efficiency and/CC/and this/DT/this is/VBZ/is the/DT/the notion/NN/notion that/IN/that we/PRP/we will/MD/will use/VB/use for/IN/for the/DT/the rest/NN/rest of/IN/of this/DT/this course/NN/course /:/( /:/( refer/NN/refer time/NN/time 1/CD/1 /:/: 48/CD/48 /CD/) /CD/) /./. we/PRP/we said/VBD/said that/IN/that if/IN/if there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem p/NN/p i/PRP/i 1/CD/1 /,/, there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 2/CD/2. /CD/( refer/NN/refer slide/NN/slide time/NN/time 12/CD/12 /:/: 54/CD/54 /CD/) so/RB/so /,/, let/VB/let us/PRP/us again/RB/again look/VBP/look at/IN/at the/DT/the matching/NN/matching example/NN/example that/WDT/that we/PRP/we did/VBD/did pi/PRP/pi 1/CD/1. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that lets/NNS/lets assume/VBP/assume that/IN/that there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for perfect/NN/perfect matching/NNP/matching. so/RB/so this/DT/this /,/, we/PRP/we said/VBD/said implied/VBN/implied an/DT/an algorithm/NN/algorithm for/IN/for finding/NN/finding the/DT/the size/NN/size of/IN/of the/DT/the maximum/NN/maximum matching/VBG/matching and/CC/and this/DT/this implied/JJ/implied an/DT/an algorithm/NN/algorithm for/IN/for finding/NN/finding a/DT/a maximum/NN/maximum matching/NNP/matching. this/DT/this is/VBZ/is what/WP/what we/PRP/we saw/VBD/saw last/JJ/last time/NN/time ?/./? now/RB/now even/RB/even though/IN/though this/DT/this algorithm/NN/algorithm /,/, it/PRP/it is/VBZ/is efficient/NNP/efficient. it/PRP/it is/VBZ/is not/RB/not necessary/JJ/necessary that/IN/that when/WRB/when you/PRP/you do/VBP/do this/DT/this transformation/NNP/transformation. the/DT/the new/JJ/new algorithm/NN/algorithm is/VBZ/is efficient/NNP/efficient. in/IN/in this/DT/this case/NN/case /,/, it/PRP/it actually/RB/actually is/VBZ/is true/JJ/true the/DT/the reason/NN/reason is/VBZ/is this/DT/this algorithm/NN/algorithm is/VBZ/is called/VBN/called at/IN/at most/JJS/most n/JJ/n times/NNP/times. so/RB/so /,/, the/DT/the running/NN/running time/NN/time were/VBD/were let/VBN/let us/PRP/us say/VBP/say n/NN/n to/TO/to the/DT/the c/NN/c this/DT/this was/VBD/was called/VBN/called at/IN/at most/JJS/most n/JJ/n times/NNS/times running/VBG/running time/NN/time here/RB/here is/VBZ/is roughly/RB/roughly n/VBN/n to/TO/to the/DT/the c/NN/c plus/VBZ/plus 1/CD/1. and/CC/and this/DT/this called/VBN/called this/DT/this at/IN/at most/JJS/most n/JJ/n times/NNS/times /,/, so/RB/so this/DT/this turns/VBZ/turns out/RP/out to/TO/to be/VB/be n/VBN/n to/TO/to the/DT/the c/NN/c plus/VBZ/plus 2/CD/2. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a c/NN/c if/IN/if there/EX/there is/VBZ/is a/DT/a constant/JJ/constant c/NNP/c. so/RB/so that/IN/that this/DT/this running/VBG/running time/NN/time is/VBZ/is bounded/VBN/bounded by/IN/by n/NN/n to/TO/to the/DT/the c/NNP/c. there/RB/there is/VBZ/is some/DT/some other/JJ/other c/NN/c possibly/RB/possibly may/MD/may be/VB/be c/NN/c plus/CC/plus 2/CD/2 2/CD/2 c/NNP/c. so/RB/so /,/, that/IN/that the/DT/the new/JJ/new algorithm/NN/algorithm runs/VBZ/runs in/IN/in time/NN/time n/NN/n to/TO/to the/DT/the c/NNP/c. so/RB/so that/IN/that is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by saying/VBG/saying that/IN/that if/IN/if there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 1/CD/1. there/EX/there is/VBZ/is a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem pi/NN/pi 2/CD/2. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 54/CD/54 /CD/) for/IN/for our/PRP$/our next/JJ/next problem/NN/problem i/PRP/i need/VBP/need to/TO/to define/VB/define a/DT/a couple/NN/couple of/IN/of terms/NNP/terms. these/DT/these are/VBP/are concepts/NNS/concepts of/IN/of hamiltonian/JJ/hamiltonian path/NN/path in/IN/in hamiltonian/JJ/hamiltonian cycle/NN/cycle some/DT/some of/IN/of you/PRP/you have/VBP/have seen/VBN/seen this/DT/this before/NN/before /,/, but/CC/but let/VB/let me/PRP/me define/VB/define this/DT/this anyway/NNP/anyway. so/RB/so /,/, a/DT/a hamiltonian/JJ/hamiltonian path/NN/path in/IN/in a/DT/a graph/NN/graph g/NN/g is/VBZ/is a/DT/a path/NN/path of/IN/of length/NN/length n/NN/n minus/NN/minus 1/CD/1 /,/, where/WRB/where n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. so/RB/so /,/, path/NN/path of/IN/of length/NN/length n/NN/n minus/NN/minus 1/CD/1 /,/, where/WRB/where n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. in/IN/in other/JJ/other words/NNS/words it/PRP/it is/VBZ/is a/DT/a path/NN/path which/WDT/which spans/NNS/spans all/DT/all vertices/NNP/vertices. other/JJ/other words/NNS/words /,/, it/PRP/it is/VBZ/is a/DT/a path/NN/path that/WDT/that contains/VBZ/contains all/DT/all vertices/NNP/vertices. so/RB/so /,/, it/PRP/it must/MD/must be/VB/be a/DT/a path/NN/path in/IN/in the/DT/the graph/NN/graph and/CC/and all/DT/all vertices/NNS/vertices in/IN/in the/DT/the graph/NN/graph must/MD/must be/VB/be present/NNP/present. clearly/RB/clearly /,/, the/DT/the length/NN/length is/VBZ/is n/VBN/n minus/NN/minus 1/CD/1 /,/, the/DT/the number/NN/number of/IN/of edges/NNS/edges which/WDT/which is/VBZ/is length/NN/length n/NN/n minus/NN/minus 1/CD/1 /,/, this/DT/this is/VBZ/is hamiltonian/JJ/hamiltonian path/NNP/path. the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle is/VBZ/is very/RB/very similar/JJ/similar ;/:/; it/PRP/it is/VBZ/is a/DT/a cycle/NN/cycle which/WDT/which spans/NNS/spans all/DT/all vertices/NNS/vertices one/CD/one single/JJ/single cycle/NN/cycle which/WDT/which spans/NNS/spans all/DT/all vertices/NNP/vertices. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 30/CD/30 /CD/) let/NN/let me/PRP/me write/VBP/write this/DT/this down/NN/down to/TO/to a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in a/DT/a graph/NN/graph is/VBZ/is a/DT/a cycle/NN/cycle which/WDT/which spans/NNS/spans all/DT/all vertices/NNP/vertices. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at an/DT/an example/NN/example /,/, so/RB/so supposing/VBG/supposing this/DT/this is/VBZ/is a/DT/a graph/NNP/graph. now/RB/now /,/, here/RB/here is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in the/DT/the graph/NN/graph /,/, this/DT/this edge/NN/edge /,/, this/DT/this edge/NN/edge /,/, that/IN/that edge/NN/edge this/DT/this edge/NNP/edge. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a cycle/NN/cycle which/WDT/which has/VBZ/has all/DT/all the/DT/the vertices/NNS/vertices in/IN/in the/DT/the graph/NNP/graph. and/CC/and if/IN/if i/PRP/i remove/VBP/remove any/DT/any one/CD/one of/IN/of these/DT/these edges/NNS/edges it/PRP/it gives/VBZ/gives a/DT/a hamiltonian/JJ/hamiltonian path/NN/path in/IN/in the/DT/the graph/NNP/graph. any/DT/any one/CD/one of/IN/of these/DT/these edges/NNS/edges in/IN/in the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, this/DT/this gives/VBZ/gives a/DT/a hamiltonian/JJ/hamiltonian path/NN/path in/IN/in the/DT/the graph/NNP/graph. so/RB/so /,/, if/IN/if a/DT/a graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, it/PRP/it has/VBZ/has hamiltonian/JJ/hamiltonian path/NNP/path. the/DT/the reverse/NN/reverse of/IN/of course/NN/course may/MD/may not/RB/not be/VB/be true/NNP/true. so/RB/so for/IN/for instance/NN/instance /,/, the/DT/the graph/NN/graph is/VBZ/is just/RB/just a/DT/a path/NNP/path. if/IN/if the/DT/the graph/NN/graph is/VBZ/is this/DT/this path/NN/path then/RB/then it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NN/path and/CC/and it/PRP/it has/VBZ/has no/DT/no cycle/NNP/cycle. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 43/CD/43 /CD/) so/RB/so now/RB/now we/PRP/we have/VBP/have defined/VBN/defined these/DT/these two/CD/two terms/NNS/terms /,/, let/VB/let us/PRP/us put/VB/put them/PRP/them to/TO/to use/NNP/use. we/PRP/we are/VBP/are talking/VBG/talking of/IN/of reductions/NNP/reductions. so/RB/so we/PRP/we are/VBP/are going/VBG/going to/TO/to see/VB/see /,/, how/WRB/how closely/RB/closely are/VBP/are these/DT/these two/CD/two problems/NNS/problems or/CC/or two/CD/two problems/NNS/problems that/WDT/that i/PRP/i am/VBP/am going/VBG/going to/TO/to define/VB/define right/RB/right now/RB/now related/NNP/related. one/CD/one is/VBZ/is the/DT/the problem/NN/problem of/IN/of finding/NN/finding the/DT/the hamiltonian/JJ/hamiltonian paths/NNS/paths and/CC/and the/DT/the other/JJ/other is/VBZ/is the/DT/the problem/NN/problem of/IN/of finding/NN/finding the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, the/DT/the first/JJ/first problem/NN/problem is/VBZ/is called/VBN/called hamiltonian/JJ/hamiltonian cycle/NNP/cycle. let/NN/let us/PRP/us see/VBP/see /,/, it/PRP/it is/VBZ/is this/DT/this input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NNP/g. the/DT/the questions/NNS/questions you/PRP/you ask/VBP/ask does/VBZ/does g/NN/g have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle ?/./? this/DT/this is/VBZ/is problem/NN/problem hc/NNP/hc. similarly/RB/similarly /,/, i/PRP/i have/VBP/have problem/NN/problem hp/NN/hp not/RB/not to/TO/to be/VB/be confused/VBN/confused with/IN/with hewlett/NN/hewlett packard/NNP/packard. and/CC/and the/DT/the input/NN/input to/TO/to the/DT/the graph/NN/graph g/NN/g /,/, the/DT/the question/NN/question does/VBZ/does g/NN/g have/VBP/have hamiltonian/JJ/hamiltonian path/NN/path ?/./? so/RB/so for/IN/for this/DT/this problem/NN/problem /,/, you/PRP/you want/VBP/want an/DT/an algorithm/NN/algorithm that/IN/that says/VBZ/says you/PRP/you fit/VBP/fit in/IN/in a/DT/a graph/NN/graph g/NNP/g. and/CC/and this/DT/this algorithm/NN/algorithm should/MD/should say/VB/say either/DT/either yes/NNS/yes the/DT/the hamiltonian/JJ/hamiltonian path/NN/path or/CC/or not/RB/not the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have that/IN/that is/VBZ/is for/IN/for this/DT/this problem/NNP/problem. for/IN/for this/DT/this problem/NN/problem /,/, it/PRP/it should/MD/should say/VB/say yes/NNS/yes put/VBN/put the/DT/the graph/NN/graph as/IN/as hamiltonian/JJ/hamiltonian cycle/NN/cycle otherwise/NN/otherwise no/DT/no the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph /,/, the/DT/the output/NN/output is/VBZ/is yes/NNS/yes or/CC/or no/DT/no /,/, yes/VBZ/yes if/IN/if it/PRP/it has/VBZ/has this/DT/this structure/NN/structure either/DT/either the/DT/the path/NN/path either/DT/either the/DT/the hamiltonian/JJ/hamiltonian path/NN/path or/CC/or cycle/NN/cycle no/DT/no /,/, it/PRP/it have/NNP/have. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the two/CD/two problems/NNS/problems and/CC/and clearly/RB/clearly they/PRP/they seem/VBP/seem to/TO/to be/VB/be related/VBN/related i/PRP/i mean/VBP/mean hamiltonian/JJ/hamiltonian cycle/NN/cycle is/VBZ/is a/DT/a cycle/NN/cycle that/WDT/that spans/VBZ/spans all/DT/all vertices/NNP/vertices. hamiltonian/JJ/hamiltonian path/NN/path is/VBZ/is a/DT/a path/NN/path that/WDT/that spans/VBZ/spans all/DT/all vertices/NNP/vertices. so/RB/so /,/, one/CD/one would/MD/would expect/VB/expect these/DT/these two/CD/two problems/NNS/problems to/TO/to be/VB/be similar/JJ/similar in/IN/in some/DT/some way/NNP/way. in/IN/in fact/NN/fact similar/JJ/similar now/RB/now /,/, we/PRP/we have/VBP/have a/DT/a clear/JJ/clear notion/NN/notion of/IN/of what/WP/what similar/JJ/similar must/MD/must be/VB/be ;/:/; we/PRP/we want/VBP/want to/TO/to say/VB/say something/NN/something like/IN/like this/NNP/this. if/IN/if we/PRP/we can/MD/can solve/VB/solve hc/NN/hc which/WDT/which means/VBZ/means if/IN/if there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for hc/NN/hc /,/, there/EX/there is/VBZ/is a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for hp/NNP/hp. and/CC/and there/EX/there is/VBZ/is a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for hp/NN/hp /,/, there/EX/there is/VBZ/is a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for hc/NNP/hc. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 10/CD/10 /CD/) so/RB/so /,/, these/DT/these are/VBP/are the/DT/the questions/NNS/questions that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to address/NN/address now/RB/now an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for hc/NN/hc which/WDT/which is/VBZ/is hamiltonian/JJ/hamiltonian cycle/NNP/cycle. design/NN/design a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for hp/NN/hp /,/, this/DT/this is/VBZ/is hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/DT/this ?/./? so/RB/so here/RB/here is/VBZ/is my/PRP$/my here/RB/here is/VBZ/is the/DT/the algorithm/NN/algorithm hc/NNP/hc. if/IN/if i/PRP/i feed/VBP/feed in/IN/in a/DT/a graph/NN/graph to/TO/to this/DT/this algorithm/NN/algorithm it/PRP/it will/MD/will say/VB/say whether/IN/whether or/CC/or not/RB/not it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. now/RB/now /,/, what/WDT/what i/PRP/i want/VBP/want to/TO/to design/VB/design is/VBZ/is one/CD/one for/IN/for hp/NNP/hp. i/PRP/i want/VBP/want this/DT/this feed/NN/feed in/IN/in a/DT/a graph/NN/graph this/DT/this would/MD/would say/VB/say yes/NNS/yes if/IN/if it/PRP/it has/VBZ/has a/DT/a hamiltonian/NNP/hamiltonian. so/RB/so /,/, supposing/VBG/supposing the/DT/the input/NN/input is/VBZ/is some/DT/some graph/NN/graph g/NNP/g. i/PRP/i want/VBP/want to/TO/to determine/VB/determine if/IN/if this/DT/this graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NN/path or/CC/or not/NNP/not. and/CC/and i/PRP/i have/VBP/have to/TO/to use/VB/use this/DT/this algorithm/NN/algorithm somehow/NNP/somehow. supposing/NN/supposing i/PRP/i feed/VBP/feed the/DT/the same/JJ/same graph/NN/graph into/IN/into hc/NN/hc /,/, two/CD/two things/NNS/things can/MD/can happen/VB/happen hc/NN/hc can/MD/can say/VB/say yes/NNS/yes or/CC/or it/PRP/it can/MD/can say/VB/say no/NN/no. so/IN/so /,/, let/VB/let us/PRP/us try/NN/try this/DT/this let/NN/let us/PRP/us see/VBP/see what/WP/what happens/NNS/happens in/IN/in each/DT/each of/IN/of these/DT/these two/CD/two phases/NNP/phases. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 42/CD/42 /CD/) i/PRP/i want/VBP/want to/TO/to determine/VB/determine if/IN/if g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NN/path /,/, does/VBZ/does g/NN/g have/VBP/have a/DT/a hp/NN/hp ?/./? this/DT/this is/VBZ/is the/DT/the question/NNP/question. so/RB/so /,/, i/PRP/i feed/VBP/feed g/JJ/g into/IN/into hc/NNP/hc. there/EX/there are/VBP/are two/CD/two cases/NNS/cases this/DT/this fellow/JJ/fellow can/NN/can say/NN/say yes/NNS/yes and/CC/and what/WP/what do/VBP/do you/PRP/you think/VB/think you/PRP/you can/MD/can conclude/NNP/conclude. if/IN/if it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle does/VBZ/does it/PRP/it have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NN/path ?/./? well/RB/well absolutely/RB/absolutely it/PRP/it must/MD/must have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, if/IN/if g/NN/g says/VBZ/says this/DT/this hc/NN/hc says/VBZ/says yes/NNS/yes for/IN/for g/NN/g you/PRP/you are/VBP/are done/VBN/done great/JJ/great it/PRP/it has/VBZ/has hp/NNP/hp. so/RB/so /,/, you/PRP/you can/MD/can say/VB/say with/IN/with surety/NN/surety that/IN/that if/IN/if it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit it/PRP/it has/VBZ/has hamiltonian/JJ/hamiltonian path/NNP/path. what/WP/what if/IN/if it/PRP/it says/VBZ/says no/DT/no ?/./? now/RB/now /,/, we/PRP/we really/RB/really do/VBP/do not/RB/not know/VB/know may/MD/may be/VB/be it/PRP/it does/VBZ/does not/RB/not have/VB/have an/DT/an hp/NN/hp in/IN/in which/WDT/which case/NN/case it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a hc/NN/hc and/CC/and so/RB/so we/PRP/we are/VBP/are all/RB/all fine/NNP/fine. the/DT/the problem/NN/problem is/VBZ/is the/DT/the graph/NN/graph could/MD/could have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NN/path /,/, but/CC/but it/PRP/it need/VBP/need not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so that/IN/that case/NN/case /,/, we/PRP/we are/VBP/are not/RB/not just/RB/just able/JJ/able to/TO/to distinguish/VB/distinguish using/VBG/using just/RB/just a/DT/a blind/JJ/blind way/NN/way of/IN/of using/VBG/using this/DT/this sub/NN/sub routine/NNP/routine. so/RB/so /,/, we/PRP/we have/VBP/have to/TO/to be/VB/be a/DT/a little/RB/little bit/NN/bit smarter/NN/smarter in/IN/in using/VBG/using this/DT/this sub/NN/sub routines/VBZ/routines and/CC/and that/IN/that is/VBZ/is the/DT/the duty/NN/duty of/IN/of the/DT/the subject/NNP/subject. you/PRP/you have/VBP/have to/TO/to figure/VB/figure out/RP/out how/WRB/how exactly/RB/exactly do/VBP/do i/PRP/i use/VB/use ?/./? this/DT/this sub/NN/sub routine/NN/routine hc/NN/hc effectively/RB/effectively to/TO/to get/VB/get a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. this/DT/this is/VBZ/is what/WP/what you/PRP/you do/VBP/do ?/./? you/PRP/you should/MD/should may/MD/may be/VB/be try/NN/try it/PRP/it you/PRP/you see/VBP/see the/DT/the solution/NN/solution i/PRP/i am/VBP/am going/VBG/going to/TO/to give/VB/give right/JJ/right now/NNP/now. in/IN/in fact/NN/fact /,/, these/DT/these transformations/NNS/transformations to/TO/to the/DT/the graph/NN/graph that/IN/that i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do you/PRP/you have/VB/have seen/VBN/seen earlier/JJR/earlier it/PRP/it is/VBZ/is a/DT/a hint/NNP/hint. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 52/CD/52 /CD/) so/RB/so here/RB/here is/VBZ/is g/JJ/g /,/, i/PRP/i take/VBP/take g/JJ/g as/IN/as it/PRP/it is/VBZ/is i/PRP/i added/VBD/added this/DT/this is/VBZ/is g/NN/g /,/, i/PRP/i added/VBD/added new/JJ/new vertex/NN/vertex u/NN/u connect/NN/connect u/NN/u to/TO/to everything/NN/everything in/IN/in g/NN/g /,/, u/NN/u is/VBZ/is connected/VBN/connected to/TO/to every/DT/every vertex/NN/vertex in/IN/in g/NNP/g. now/RB/now /,/, this/DT/this graph/NN/graph i/PRP/i feed/VBP/feed into/IN/into hc/NN/hc i/PRP/i have/VBP/have an/DT/an original/JJ/original graph/NN/graph where/WRB/where i/PRP/i want/VBP/want to/TO/to determine/VB/determine if/IN/if it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NN/path or/CC/or not/NNP/not. i/PRP/i add/VBP/add a/DT/a vertex/NN/vertex i/PRP/i connect/VBP/connect it/PRP/it to/TO/to every/DT/every other/JJ/other vertex/NN/vertex in/IN/in g/NN/g and/CC/and feed/VBD/feed it/PRP/it into/IN/into hc/NNP/hc. now/RB/now /,/, if/IN/if hc/NN/hc says/VBZ/says it/PRP/it could/MD/could say/VB/say yes/NNS/yes or/CC/or no/NNP/no. so/RB/so /,/, what/WDT/what i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do is/VBZ/is if/IN/if hc/NN/hc says/VBZ/says yes/NNS/yes then/RB/then i/PRP/i will/MD/will also/RB/also say/VB/say yes/NNS/yes /,/, the/DT/the graph/NN/graph g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. if/IN/if it/PRP/it says/VBZ/says no/DT/no /,/, i/PRP/i say/VBP/say g/JJ/g does/NNS/does not/RB/not if/IN/if hc/NN/hc says/VBZ/says yes/NNS/yes then/RB/then the/DT/the output/NN/output of/IN/of the/DT/the algorithm/NN/algorithm for/IN/for hp/NN/hp will/MD/will say/VB/say yes/NNP/yes. if/IN/if hc/NN/hc says/VBZ/says no/DT/no i/PRP/i will/MD/will say/VB/say no/DT/no on/IN/on this/DT/this new/JJ/new graph/NN/graph ;/:/; however/RB/however /,/, it/PRP/it is/VBZ/is on/IN/on the/DT/the new/JJ/new graph/NNP/graph. so/RB/so /,/, does/VBZ/does this/DT/this work/NN/work does/VBZ/does not/RB/not this/DT/this work/NNP/work. well/RB/well it/PRP/it does/VBZ/does work/VB/work we/PRP/we will/MD/will see/VB/see why/WRB/why there/EX/there are/VBP/are 2/CD/2 things/NNS/things we/PRP/we have/VBP/have to/TO/to show/VB/show we/PRP/we have/VBP/have to/TO/to show/VB/show that/IN/that if/IN/if it/PRP/it answers/VBZ/answers yes/NNP/yes. this/DT/this answer/NN/answer must/MD/must be/VB/be correct/JJ/correct which/WDT/which means/VBZ/means this/DT/this graph/NN/graph g/NN/g must/MD/must have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. and/CC/and if/IN/if it/PRP/it answers/VBZ/answers no/DT/no the/DT/the graph/NN/graph should/MD/should not/RB/not have/NNP/have. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 27/CD/27 /CD/) so/RB/so /,/, the/DT/the two/CD/two statements/NNS/statements that/WDT/that we/PRP/we need/VBP/need to/TO/to prove/VB/prove is/VBZ/is the/DT/the following/VBG/following are/VBP/are the/DT/the following/VBG/following here/RB/here is/VBZ/is g/JJ/g vertex/NN/vertex u/NN/u is/VBZ/is adjacent/NN/adjacent to/TO/to every/DT/every other/JJ/other vertex/NN/vertex in/IN/in g/NNP/g. so/RB/so /,/, call/VBP/call this/DT/this new/JJ/new graph/NN/graph g/NN/g prime/NN/prime new/JJ/new graph/NN/graph is/VBZ/is g/JJ/g prime/NNP/prime. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to show/VB/show that/IN/that g/NN/g has/VBZ/has a/DT/a hp/NN/hp if/IN/if and/CC/and only/RB/only if/IN/if g/NN/g prime/NN/prime has/VBZ/has hc/NNP/hc. this/DT/this is/VBZ/is an/DT/an if/IN/if and/CC/and only/RB/only if/IN/if statement/NN/statement /,/, so/RB/so if/IN/if there/EX/there are/VBP/are two/CD/two things/NNP/things. the/DT/the two/CD/two things/NNS/things correspond/IN/correspond to/TO/to yes/NNS/yes in/IN/in output/NNP/output. for/IN/for instance/NN/instance /,/, we/PRP/we have/VBP/have to/TO/to show/VB/show that/IN/that g/NN/g has/VBZ/has an/DT/an hp/NN/hp this/DT/this implies/VBZ/implies that/IN/that g/NN/g prime/NN/prime has/VBZ/has a/DT/a hp/NNP/hp. and/CC/and the/DT/the no/DT/no output/NN/output g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a hp/NN/hp this/DT/this implies/VBZ/implies that/IN/that g/NN/g prime/NN/prime does/VBZ/does not/RB/not have/VB/have hc/NNP/hc. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the two/CD/two things/NNP/things. so/RB/so /,/, assume/NN/assume that/IN/that g/NN/g has/VBZ/has a/DT/a hp/NN/hp /,/, we/PRP/we need/VBP/need to/TO/to show/VB/show that/IN/that g/NN/g prime/NN/prime has/VBZ/has an/DT/an hp/NNP/hp. and/CC/and i/PRP/i think/VBP/think this/DT/this should/MD/should be/VB/be fairly/RB/fairly obvious/JJ/obvious /,/, there/EX/there is/VBZ/is g/NN/g here/RB/here is/VBZ/is my/PRP$/my hp/NNP/hp. i/PRP/i do/VBP/do not/RB/not know/VB/know how/WRB/how this/DT/this looks/VBZ/looks ;/:/; it/PRP/it is/VBZ/is a/DT/a path/NN/path which/WDT/which runs/VBZ/runs between/IN/between /,/, which/WDT/which has/VBZ/has all/DT/all the/DT/the vertices/NNS/vertices in/IN/in g/NNP/g. now/RB/now /,/, i/PRP/i need/VBP/need to/TO/to construct/VB/construct an/DT/an hc/NN/hc which/WDT/which is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in g/NN/g prime/NN/prime and/CC/and that/IN/that is/VBZ/is easy/JJ/easy i/NN/i just/RB/just add/JJ/add these/DT/these two/CD/two edges/NNP/edges. so/RB/so /,/, this/DT/this path/NN/path starts/VBZ/starts at/IN/at some/DT/some vertex/NN/vertex and/CC/and it/PRP/it ends/VBZ/ends at/IN/at some/DT/some vertex/NNP/vertex. it/PRP/it starts/VBZ/starts at/IN/at x/NN/x and/CC/and ends/NNS/ends at/IN/at y/NN/y /,/, the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, i/PRP/i get/VBP/get by/IN/by just/RB/just appending/VBG/appending u/NN/u to/TO/to x/VB/x and/CC/and y/NNP/y. i/PRP/i add/VBP/add the/DT/the edges/NNS/edges u/VBP/u x/NN/x and/CC/and u/NN/u y/NN/y and/CC/and i/PRP/i get/VBP/get a/DT/a cycle/NN/cycle in/IN/in g/NN/g prime/NNP/prime. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that i/PRP/i can/MD/can go/VB/go the/DT/the other/JJ/other way/NN/way also/NNP/also. so/RB/so /,/, given/VBN/given the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in g/NN/g prime/NN/prime i/PRP/i can/MD/can construct/VB/construct a/DT/a path/NN/path a/DT/a hamiltonian/JJ/hamiltonian path/NN/path in/IN/in g/NN/g and/CC/and the/DT/the construction/NN/construction is/VBZ/is similar/NNP/similar. so/RB/so here/RB/here /,/, supposing/VBG/supposing this/DT/this is/VBZ/is graph/NN/graph g/NN/g prime/NN/prime and/CC/and i/PRP/i have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle it/PRP/it goes/VBZ/goes around/IN/around like/IN/like this/DT/this in/IN/in g/NN/g prime/NNP/prime. now/RB/now /,/, this/DT/this vertex/NN/vertex u/NN/u sits/NNS/sits somewhere/RB/somewhere /,/, this/DT/this is/VBZ/is my/PRP$/my vertex/NN/vertex u/NNP/u. if/IN/if i/PRP/i remove/VBP/remove this/DT/this vertex/NN/vertex u/NN/u from/IN/from the/DT/the graph/NN/graph what/WP/what i/PRP/i am/VBP/am left/VBN/left with/IN/with is/VBZ/is the/DT/the hamiltonian/JJ/hamiltonian path/NN/path in/IN/in g/NNP/g. this/DT/this path/NN/path will/MD/will start/VB/start from/IN/from this/DT/this vertex/NN/vertex x/NN/x and/CC/and will/MD/will end/VB/end at/IN/at this/DT/this vertex/NN/vertex y/NNP/y. so/RB/so /,/, the/DT/the path/NN/path starts/VBZ/starts at/IN/at x/NN/x it/PRP/it will/MD/will go/VB/go around/IN/around and/CC/and end/NN/end at/IN/at y/NN/y and/CC/and this/DT/this path/NN/path is/VBZ/is in/IN/in the/DT/the graph/NN/graph g/NNP/g. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved statement/NN/statement both/DT/both ways/NNS/ways that/WDT/that if/IN/if the/DT/the original/JJ/original graph/NN/graph had/VBD/had a/DT/a hamiltonian/JJ/hamiltonian path/NN/path the/DT/the new/JJ/new graph/NN/graph have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. if/IN/if the/DT/the original/JJ/original graph/NN/graph did/VBD/did not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NN/path the/DT/the new/JJ/new graph/NN/graph will/MD/will not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. what/WP/what about/IN/about the/DT/the other/JJ/other way/NN/way round/NN/round ?/./? we/PRP/we said/VBD/said given/VBN/given an/DT/an algorithm/NN/algorithm for/IN/for hamiltonian/JJ/hamiltonian cycle/NNP/cycle. we/PRP/we could/MD/could construct/VB/construct one/CD/one for/IN/for hamiltonian/JJ/hamiltonian path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 47/CD/47 /CD/) what/WP/what about/IN/about the/DT/the other/JJ/other way/NN/way round/NN/round ?/./? the/DT/the other/JJ/other way/NN/way round/NN/round would/MD/would be/VB/be this/DT/this given/VBN/given an/DT/an algorithm/NN/algorithm for/IN/for hamiltonian/JJ/hamiltonian path/NN/path constructs/NNS/constructs one/CD/one for/IN/for hc/NN/hc and/CC/and from/IN/from now/RB/now on/IN/on it/PRP/it /,/, if/IN/if you/PRP/you are/VBP/are given/VBN/given a/DT/a algorithm/NN/algorithm it/PRP/it is/VBZ/is efficient/NNP/efficient. and/CC/and you/PRP/you want/VBP/want to/TO/to construct/VB/construct one/CD/one that/WDT/that better/JJR/better be/VB/be a/DT/a hp/NNP/hp. so/RB/so /,/, these/DT/these are/VBP/are all/DT/all well/RB/well i/PRP/i just/RB/just said/VBD/said algorithm/NN/algorithm /,/, we/PRP/we want/VBP/want efficient/JJ/efficient algorithm/NNP/algorithm. the/DT/the previous/JJ/previous one/CD/one was/VBD/was clearly/RB/clearly efficient/NNP/efficient. i/PRP/i had/VBD/had to/TO/to call/VB/call the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle routine/NN/routine exactly/RB/exactly once/NNP/once. i/PRP/i do/VBP/do a/DT/a small/JJ/small modification/NN/modification to/TO/to the/DT/the graph/NN/graph the/DT/the input/NN/input size/NN/size does/VBZ/does not/RB/not go/VB/go up/RP/up by/IN/by much/RB/much and/CC/and i/PRP/i call/VBP/call the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle routine/NN/routine exactly/RB/exactly once/NNP/once. so/RB/so that/IN/that running/VBG/running time/NN/time is/VBZ/is roughly/RB/roughly this/DT/this the/DT/the old/JJ/old algorithm/NN/algorithm was/VBD/was sufficient/JJ/sufficient the/DT/the new/JJ/new one/CD/one was/NNP/was. so/RB/so /,/, how/WRB/how about/RP/about this/DT/this ?/./? so/RB/so /,/, you/PRP/you are/VBP/are given/VBN/given a/DT/a algorithm/NN/algorithm for/IN/for hp/NN/hp which/WDT/which means/VBZ/means if/IN/if you/PRP/you are/VBP/are given/VBN/given a/DT/a graph/NN/graph g/NN/g it/PRP/it says/VBZ/says yes/VBZ/yes or/CC/or no/DT/no and/CC/and what/WP/what i/PRP/i want/VBP/want is/VBZ/is for/IN/for hc/NN/hc ?/./? the/DT/the given/VBN/given let/NN/let me/PRP/me call/VBP/call this/DT/this g/NN/g prime/NN/prime to/TO/to distinguish/VB/distinguish from/IN/from this/DT/this g/NNP/g. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want this/DT/this is/VBZ/is given/VBN/given to/TO/to us/NNP/us. so/RB/so /,/, somehow/WRB/somehow again/RB/again i/PRP/i have/VBP/have to/TO/to use/VB/use this/DT/this routine/NN/routine for/IN/for hp/NN/hp efficiently/RB/efficiently to/TO/to get/VB/get this/DT/this routine/NN/routine for/IN/for hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, how/WRB/how do/VBP/do i/PRP/i do/VBP/do ?/./? i/PRP/i could/MD/could let/VB/let us/PRP/us try/NN/try the/DT/the usual/JJ/usual trick/NN/trick feed/NN/feed this/DT/this graph/NN/graph into/IN/into hp/NN/hp and/CC/and it/PRP/it says/VBZ/says yes/NNP/yes. if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes then/RB/then well/RB/well it/PRP/it could/MD/could have/VB/have a/DT/a hc/NN/hc or/CC/or it/PRP/it may/MD/may not/RB/not have/VB/have an/DT/an hamiltonian/JJ/hamiltonian cycle/NNP/cycle. on/IN/on the/DT/the other/JJ/other hand/NN/hand if/IN/if it/PRP/it said/VBD/said no/DT/no then/RB/then i/PRP/i am/VBP/am here/RB/here that/IN/that the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. in/IN/in fact/NN/fact /,/, does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian part/NNP/part. so/RB/so /,/, if/IN/if it/PRP/it says/VBZ/says no/DT/no i/PRP/i have/VBP/have no/DT/no we/PRP/we are/VBP/are all/RB/all fine/NN/fine /,/, but/CC/but if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes /,/, again/RB/again we/PRP/we run/VBP/run into/IN/into a/DT/a similar/JJ/similar problem/NNP/problem. we/PRP/we can/MD/can not/RB/not decide/VB/decide whether/IN/whether it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit or/CC/or not/NNP/not. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 20/CD/20 /CD/) so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we do/VBP/do ?/./? so/RB/so /,/, here/RB/here is/VBZ/is there/EX/there is/VBZ/is an/DT/an attempt/NN/attempt take/NN/take the/DT/the graph/NN/graph g/NNP/g. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to use/VB/use let/NN/let me/PRP/me just/RB/just put/VBD/put this/DT/this on/IN/on the/DT/the side/NNP/side. so/RB/so this/DT/this is/VBZ/is /,/, what/WP/what i/PRP/i want/VBP/want to/TO/to use/VB/use and/CC/and i/PRP/i want/VBP/want to/TO/to create/VB/create one/CD/one for/IN/for hp/NNP/hp. so/RB/so /,/, what/WDT/what do/VBP/do i/PRP/i feed/VBP/feed into/IN/into hp/NNP/hp. so/RB/so /,/, take/VB/take this/DT/this graph/NN/graph there/RB/there is/VBZ/is a/DT/a input/NN/input graph/NN/graph g/NNP/g. so/RB/so /,/, take/VB/take g/NN/g now/RB/now remove/VBP/remove edges/NNS/edges from/IN/from g/NN/g one/CD/one by/IN/by one/NNP/one. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say i/PRP/i remove/VBP/remove edge/NN/edge e/NNP/e. now/RB/now i/PRP/i feed/VBP/feed into/IN/into g/NN/g prime/JJ/prime and/CC/and i/PRP/i will/MD/will see/VB/see whether/IN/whether it/PRP/it says/VBZ/says yes/VBZ/yes or/CC/or no/NNP/no. now/RB/now /,/, if/IN/if it/PRP/it says/VBZ/says no/DT/no for/IN/for any/DT/any edge/NN/edge /,/, then/RB/then clearly/RB/clearly the/DT/the graph/NN/graph will/MD/will not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, why/WRB/why is/VBZ/is this/DT/this ?/./? so/RB/so /,/, supposing/VBG/supposing g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle then/RB/then if/IN/if i/PRP/i remove/VBP/remove any/DT/any edge/NN/edge from/IN/from g/NN/g /,/, the/DT/the graph/NN/graph still/RB/still has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take g/JJ/g and/CC/and remove/VB/remove any/DT/any edge/NN/edge the/DT/the hamiltonian/JJ/hamiltonian paths/NNS/paths must/MD/must keep/VB/keep saying/VBG/saying yes/NNP/yes. is/VBZ/is this/DT/this a/DT/a good/JJ/good algorithm/NN/algorithm i/PRP/i mean/VBP/mean can/MD/can i/PRP/i sort/VB/sort of/IN/of say/NN/say that/IN/that remove/JJ/remove every/DT/every edge/NN/edge from/IN/from g/NN/g feed/VBN/feed into/IN/into hp/NN/hp ?/./? if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes all/DT/all the/DT/the time/NN/time then/RB/then yes/VBZ/yes g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. if/IN/if at/IN/at least/JJS/least once/RB/once it/PRP/it says/VBZ/says no/DT/no then/RB/then g/JJ/g does/NNS/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian cycle/NNP/cycle. let/NN/let me/PRP/me write/VBP/write this/DT/this algorithm/NNP/algorithm. for/IN/for each/DT/each edge/NN/edge e/NN/e call/NN/call hp/NN/hp with/IN/with g/NN/g minus/NN/minus e/NNP/e. if/IN/if hp/NN/hp says/VBZ/says yes/NNS/yes for/IN/for all/DT/all edges/NNS/edges then/RB/then g/JJ/g has/VBZ/has an/DT/an hc/NNP/hc. so/RB/so /,/, you/PRP/you output/VBD/output yes/NNS/yes otherwise/VBP/otherwise output/VBN/output no/NN/no. so/IN/so /,/, if/IN/if it/PRP/it says/VBZ/says if/IN/if hp/NN/hp says/VBZ/says no/DT/no for/IN/for any/DT/any input/NN/input then/RB/then you/PRP/you say/VBP/say no/NNP/no. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the algorithm/NNP/algorithm. well/RB/well the/DT/the question/NN/question is/VBZ/is does/VBZ/does this/DT/this work/NN/work what/WP/what do/VBP/do we/PRP/we mean/VB/mean by/IN/by this/DT/this question/NN/question what/WP/what does/VBZ/does it/PRP/it mean/VB/mean for/IN/for this/DT/this to/TO/to work/VB/work or/CC/or not/NNP/not. it/PRP/it means/VBZ/means that/IN/that whenever/JJR/whenever you/PRP/you output/VBD/output yes/NNP/yes. so/RB/so /,/, whenever/IN/whenever you/PRP/you output/VBD/output yes/NNS/yes the/DT/the graph/NN/graph better/NN/better have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. and/CC/and whenever/NN/whenever you/PRP/you output/VBD/output no/DT/no the/DT/the graph/NN/graph should/MD/should not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. let/NN/let us/PRP/us take/VBP/take both/DT/both of/IN/of these/DT/these in/IN/in turn/NN/turn and/CC/and see/VB/see whether/IN/whether we/PRP/we can/MD/can prove/VB/prove this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 29/CD/29 /CD/) so/RB/so /,/, let/VB/let us/PRP/us take/VB/take no/DT/no first/JJ/first /,/, so/RB/so that/IN/that is/VBZ/is easier/NNP/easier. so/RB/so /,/, you/PRP/you output/VBD/output no/DT/no if/IN/if for/IN/for some/DT/some edge/NN/edge e/NN/e prime/NN/prime g/NN/g minus/NN/minus e/NN/e prime/NN/prime does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, if/IN/if i/PRP/i remove/VBP/remove this/DT/this edge/NN/edge e/NN/e prime/NN/prime then/RB/then the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. we/PRP/we have/VBP/have seen/VBN/seen that/IN/that this/DT/this implies/NNS/implies that/IN/that g/NN/g does/VBZ/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian cycle/NNP/cycle. if/IN/if it/PRP/it had/VBD/had a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle then/RB/then if/IN/if i/PRP/i removed/VBD/removed any/DT/any edge/NN/edge out/IN/out i/PRP/i would/MD/would still/RB/still have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NN/path in/IN/in the/DT/the resultant/NN/resultant graph/NNP/graph. so/RB/so whenever/RB/whenever we/PRP/we output/VBD/output no/DT/no /,/, we/PRP/we are/VBP/are in/IN/in the/DT/the clears/NNS/clears we/PRP/we are/VBP/are correct/JJ/correct the/DT/the algorithm/NN/algorithm is/VBZ/is always/RB/always correct/JJ/correct /,/, what/WP/what about/IN/about the/DT/the yes/NNS/yes case/NN/case ?/./? it/PRP/it seems/VBZ/seems very/RB/very reasonable/JJ/reasonable that/IN/that for/IN/for every/DT/every edge/NN/edge if/IN/if i/PRP/i remove/VBP/remove it/NNP/it. and/CC/and ask/VB/ask there/EX/there is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian path/NN/path and/CC/and it/PRP/it says/VBZ/says yes/VBZ/yes there/RB/there should/MD/should be/VB/be reasonable/JJ/reasonable that/IN/that there/EX/there should/MD/should be/VB/be a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian path/NN/path after/IN/after removal/NN/removal of/IN/of any/DT/any edge/NN/edge is/VBZ/is a/DT/a good/JJ/good chance/NN/chance that/IN/that one/CD/one feels/NNS/feels that/WDT/that graph/NN/graph should/MD/should have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, but/CC/but this/DT/this is/VBZ/is false/NNP/false. so/RB/so /,/, this/DT/this statement/NN/statement is/VBZ/is false/NNP/false. /:/( refer/NN/refer slide/NN/slide time/NN/time 37/CD/37 /:/: 11/CD/11 /CD/) let/NN/let us/PRP/us see/VBP/see an/DT/an example/NN/example /,/, so/RB/so here/RB/here is/VBZ/is an/DT/an example/NNP/example. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a graph/NN/graph such/JJ/such that/IN/that removal/NN/removal of/IN/of after/IN/after removal/NN/removal of/IN/of any/DT/any edge/NN/edge graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NN/path /,/, but/CC/but the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, there/EX/there are/VBP/are two/CD/two things/NNS/things to/TO/to be/VB/be checked/VBN/checked with/IN/with this/DT/this graph/NNP/graph. that/IN/that it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, but/CC/but if/IN/if i/PRP/i remove/VBP/remove any/DT/any edge/NN/edge from/IN/from this/DT/this graph/NN/graph any/DT/any edge/NN/edge at/IN/at all/DT/all then/RB/then this/DT/this graph/NN/graph must/MD/must have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. let/NN/let us/PRP/us check/VBP/check both/DT/both of/IN/of them/NNP/them. now/RB/now /,/, this/DT/this graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle and/CC/and to/TO/to see/VB/see that/IN/that we/PRP/we focus/VBZ/focus on/IN/on this/DT/this vertex/NN/vertex in/IN/in the/DT/the middle/NNP/middle. if/IN/if i/PRP/i remove/VBP/remove this/DT/this vertex/NN/vertex /,/, then/RB/then this/DT/this graph/NN/graph becomes/VBZ/becomes disconnected/NNP/disconnected. there/RB/there is/VBZ/is a/DT/a vertex/NN/vertex in/IN/in this/DT/this graph/NNP/graph. so/RB/so that/IN/that if/IN/if i/PRP/i remove/VBP/remove this/DT/this middle/NN/middle vertex/NN/vertex and/CC/and the/DT/the graph/NN/graph becomes/VBZ/becomes disconnected/NNP/disconnected. this/DT/this can/MD/can not/RB/not happen/VB/happen if/IN/if the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. if/IN/if the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, if/IN/if i/PRP/i remove/VBP/remove any/DT/any vertex/NN/vertex the/DT/the resultant/NN/resultant graph/NN/graph will/MD/will have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NN/path and/CC/and will/MD/will in/VB/in fact/NN/fact be/VB/be connected/NNP/connected. so/RB/so /,/, if/IN/if a/DT/a graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle if/IN/if i/PRP/i remove/VBP/remove any/DT/any vertex/NN/vertex it/PRP/it must/MD/must remain/VB/remain connected/VBN/connected that/IN/that is/VBZ/is not/RB/not true/JJ/true for/IN/for this/DT/this graph/NNP/graph. that/IN/that is/VBZ/is the/DT/the reason/NN/reason why/WRB/why this/DT/this does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, we/PRP/we still/RB/still have/VBP/have to/TO/to prove/VB/prove one/CD/one more/JJR/more thing/NN/thing which/WDT/which is/VBZ/is that/IN/that if/IN/if i/PRP/i remove/VBP/remove any/DT/any of/IN/of these/DT/these edges/NNS/edges in/IN/in this/DT/this graph/NN/graph then/RB/then it/PRP/it should/MD/should not/RB/not have/VB/have it/PRP/it must/MD/must have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 26/CD/26 /CD/) so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at these/DT/these edges/NNS/edges one/CD/one by/IN/by one/NNP/one. let/NN/let me/PRP/me draw/VBD/draw this/DT/this graph/NN/graph again/NNP/again. so/RB/so /,/, let/VB/let us/PRP/us focus/VB/focus on/IN/on this/DT/this edge/NN/edge supposing/VBG/supposing i/PRP/i remove/VBP/remove this/DT/this edge/NNP/edge. does/VBZ/does there/RB/there exist/VB/exist a/DT/a hamiltonian/JJ/hamiltonian path/NN/path ?/./? well/RB/well the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes choose/VBP/choose this/DT/this edge/NN/edge choose/NN/choose that/WDT/that edge/NN/edge choose/VBD/choose this/DT/this edge/NNP/edge. you/PRP/you come/VBP/come down/RP/down this/DT/this way/NN/way then/RB/then you/PRP/you choose/VBP/choose this/DT/this edge/NNP/edge. then/RB/then /,/, you/PRP/you go/VBP/go down/RP/down this/DT/this way/NN/way to/TO/to this/DT/this edge/NN/edge that/IN/that edge/NNP/edge. there/EX/there are/VBP/are other/JJ/other ways/NNS/ways of/IN/of doing/VBG/doing this/NNP/this. so/RB/so /,/, you/PRP/you go/VBP/go up/RP/up and/CC/and down/IN/down like/IN/like this/DT/this and/CC/and this/DT/this you/PRP/you can/MD/can see/VB/see the/DT/the hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, removal/NN/removal of/IN/of this/DT/this edge/NN/edge here/RB/here causes/VBZ/causes no/DT/no problem/NNP/problem. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at some/DT/some other/JJ/other edges/NNP/edges. so/IN/so /,/, let/VB/let us/PRP/us remove/VB/remove this/DT/this edge/NN/edge what/WP/what if/IN/if i/PRP/i remove/VBP/remove this/DT/this edge/NN/edge ?/./? so/RB/so in/IN/in this/DT/this case/NN/case /,/, i/PRP/i can/MD/can start/VB/start here/RB/here come/VBN/come down/RP/down here/RB/here go/VB/go up/RP/up here/RB/here there/RB/there it/PRP/it says/VBZ/says this/DT/this and/CC/and this/NNP/this. so/RB/so /,/, this/DT/this will/MD/will give/VB/give a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, you/PRP/you start/VBP/start here/RB/here and/CC/and you/PRP/you go/VBP/go up/RP/up and/CC/and down/IN/down like/IN/like this/DT/this go/NN/go up/RP/up go/RB/go down/RB/down up/IN/up to/TO/to this/DT/this and/CC/and this/DT/this you/PRP/you can/MD/can see/VB/see gives/NNS/gives a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, removal/NN/removal of/IN/of this/DT/this edge/NN/edge is/VBZ/is also/RB/also not/RB/not a/DT/a problem/NNP/problem. let/NN/let us/PRP/us look/VBP/look at/IN/at one/CD/one more/JJR/more lets/NNS/lets remove/VBP/remove this/DT/this edge/NNP/edge. if/IN/if i/PRP/i remove/VBP/remove this/DT/this edge/NN/edge /,/, the/DT/the graph/NN/graph still/RB/still has/VBZ/has the/DT/the hamiltonian/JJ/hamiltonian path/NN/path this/DT/this this/DT/this this/DT/this this/NNP/this. so/RB/so /,/, you/PRP/you go/VBP/go down/RP/down this/DT/this way/NN/way go/VBP/go back/RB/back keep/VB/keep going/VBG/going down/IN/down all/DT/all the/DT/the way/NN/way up/RP/up here/RB/here go/VBP/go down/RB/down and/CC/and back/RB/back here/NNP/here. so/RB/so /,/, if/IN/if i/PRP/i remove/VBP/remove this/DT/this edge/NN/edge too/RB/too there/RB/there is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. now/RB/now we/PRP/we just/RB/just see/VBP/see that/IN/that all/DT/all edges/NNS/edges in/IN/in the/DT/the graph/NN/graph are/VBP/are similar/JJ/similar to/TO/to one/CD/one of/IN/of these/DT/these three/NNP/three. for/IN/for instance/NN/instance this/DT/this edge/NN/edge is/VBZ/is similar/JJ/similar to/TO/to that/DT/that right/NN/right this/DT/this edge/NN/edge at/IN/at the/DT/the bottom/NN/bottom is/VBZ/is similar/JJ/similar to/TO/to this/NNP/this. so/RB/so /,/, all/DT/all edges/NNS/edges on/IN/on this/DT/this side/NN/side is/VBZ/is taken/VBN/taken care/NN/care of/NNP/of. these/DT/these two/CD/two edges/NNS/edges are/VBP/are taken/VBN/taken care/NN/care of/IN/of /,/, this/DT/this is/VBZ/is the/DT/the middle/NN/middle edge/NN/edge these/DT/these two/CD/two are/VBP/are similar/NNP/similar. and/CC/and the/DT/the graph/NN/graph is/VBZ/is symmetric/JJ/symmetric about/IN/about this/DT/this vertex/NNP/vertex. so/RB/so /,/, all/DT/all edges/NNS/edges on/IN/on this/DT/this side/NN/side on/IN/on the/DT/the left/NN/left hand/NN/hand side/NN/side are/VBP/are also/RB/also taken/VBN/taken care/NN/care of/NNP/of. so/RB/so /,/, these/DT/these three/CD/three cases/NNS/cases are/VBP/are enough/RB/enough to/TO/to enumerate/VB/enumerate to/TO/to sort/VB/sort of/IN/of hopefully/RB/hopefully convince/NN/convince you/PRP/you that/IN/that removal/JJ/removal of/IN/of any/DT/any edge/NN/edge in/IN/in this/DT/this graph/NN/graph leads/NNS/leads the/DT/the graph/NN/graph with/IN/with a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 18/CD/18 /CD/) so/RB/so /,/, this/DT/this type/NN/type the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we described/VBD/described is/VBZ/is wrong/JJ/wrong this/DT/this fails/NNP/fails. so/RB/so /,/, it/PRP/it looked/VBD/looked like/IN/like a/DT/a reasonable/JJ/reasonable thing/NN/thing to/TO/to try/VB/try /,/, but/CC/but it/PRP/it fails/NNP/fails. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 35/CD/35 /CD/) so/RB/so /,/, what/WDT/what you/PRP/you do/VBP/do is/VBZ/is this/DT/this ?/./? so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my graph/NNP/graph. so/RB/so /,/, here/RB/here is/VBZ/is let/VBN/let me/PRP/me take/VBP/take some/DT/some edge/NN/edge u/NN/u v/CC/v. now/RB/now /,/, what/WDT/what i/PRP/i will/MD/will do/VB/do is/VBZ/is remove/VB/remove the/DT/the edge/NN/edge u/NN/u v/NN/v remove/NN/remove this/DT/this edge/NN/edge and/CC/and i/PRP/i will/MD/will attach/VB/attach to/TO/to other/JJ/other vertices/NNS/vertices this/DT/this is/VBZ/is u/PRP/u prime/RB/prime that/IN/that is/VBZ/is v/NN/v prime/NNP/prime. so/RB/so /,/, i/PRP/i have/VBP/have a/DT/a original/JJ/original graph/NN/graph g/NN/g i/PRP/i remove/VBP/remove the/DT/the edge/NN/edge u/NN/u v/CC/v. so/RB/so that/IN/that is/VBZ/is g1/NNP/g1 from/IN/from here/RB/here and/CC/and then/RB/then i/PRP/i attach/VBP/attach two/CD/two additional/JJ/additional vertices/NNS/vertices u/VBP/u prime/JJ/prime and/CC/and v/NN/v prime/NNP/prime. now/RB/now /,/, i/PRP/i ask/VBP/ask does/VBZ/does this/DT/this graph/NN/graph have/VBP/have a/DT/a hp/NN/hp /,/, does/VBZ/does this/DT/this graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. the/DT/the question/NN/question we/PRP/we wanted/VBD/wanted to/TO/to answer/VB/answer was/VBD/was does/VBZ/does this/DT/this have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian circuit/NNP/circuit. now/RB/now let/VB/let us/PRP/us see/VB/see /,/, supposing/VBG/supposing this/DT/this graph/NN/graph did/VBD/did have/VB/have a/DT/a hamiltonian/JJ/hamiltonian circuit/NNP/circuit. supposing/NN/supposing this/DT/this had/VBD/had a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit not/RB/not only/RB/only that/IN/that the/DT/the hamiltonian/JJ/hamiltonian circuit/NN/circuit pass/NN/pass through/IN/through the/DT/the vertices/NNS/vertices u/VBP/u and/CC/and v/NNP/v. in/IN/in order/NN/order which/WDT/which means/VBZ/means the/DT/the edge/NN/edge u/NN/u v/NN/v was/VBD/was present/JJ/present in/IN/in some/DT/some hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in the/DT/the graph/NNP/graph. then/RB/then /,/, let/VB/let us/PRP/us notice/NN/notice that/IN/that this/DT/this new/JJ/new graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, what/WDT/what does/VBZ/does it/PRP/it mean/VB/mean for/IN/for this/DT/this graph/NN/graph to/TO/to have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle passing/VBG/passing through/IN/through u/NN/u v/NN/v ?/./? it/PRP/it means/VBZ/means there/RB/there must/MD/must be/VB/be a/DT/a cycle/NN/cycle this/DT/this way/NN/way it/PRP/it goes/VBZ/goes through/IN/through all/DT/all other/JJ/other vertices/NNS/vertices like/IN/like this/DT/this and/CC/and also/RB/also u/VBP/u v/NNP/v. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the same/JJ/same cycle/NN/cycle /,/, where/WRB/where i/PRP/i take/VBP/take the/DT/the same/JJ/same cycle/NN/cycle and/CC/and i/PRP/i add/VBP/add these/DT/these two/CD/two edges/NNS/edges and/CC/and i/PRP/i get/VBP/get a/DT/a hamiltonian/JJ/hamiltonian path/NN/path in/IN/in the/DT/the new/JJ/new graph/NNP/graph. so/RB/so /,/, if/IN/if the/DT/the old/JJ/old graph/NN/graph had/VBD/had a/DT/a hamiltonian/JJ/hamiltonian circuit/NNP/circuit. then/RB/then /,/, if/IN/if i/PRP/i picked/VBD/picked an/DT/an edge/NN/edge which/WDT/which was/VBD/was present/JJ/present in/IN/in the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle and/CC/and ask/NN/ask if/IN/if this/DT/this has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. then/RB/then /,/, it/PRP/it will/MD/will have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NN/path that/WDT/that is/VBZ/is the/DT/the first/JJ/first thing/NN/thing to/TO/to notice/NNP/notice. now/RB/now here/RB/here is/VBZ/is the/DT/the second/JJ/second thing/NN/thing to/TO/to notice/NN/notice supposing/VBG/supposing i/PRP/i took/VBD/took a/DT/a graph/NN/graph like/IN/like this/NNP/this. so/RB/so /,/, i/PRP/i took/VBD/took a/DT/a graph/NN/graph and/CC/and here/RB/here is/VBZ/is g/NNP/g. i/PRP/i took/VBD/took a/DT/a graph/NN/graph g/NN/g edge/NN/edge u/NN/u v/NN/v i/PRP/i removed/VBD/removed u/PRP/u v/NN/v attached/VBD/attached u/NN/u prime/NN/prime and/CC/and v/NN/v prime/NN/prime and/CC/and i/PRP/i ask/VBP/ask if/IN/if this/DT/this has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. supposing/NN/supposing this/DT/this says/VBZ/says yes/VBZ/yes what/WP/what does/VBZ/does the/DT/the hamiltonian/JJ/hamiltonian path/NN/path look/NN/look like/IN/like ?/./? now/RB/now /,/, the/DT/the path/NN/path has/VBZ/has to/TO/to these/DT/these two/CD/two vertices/NNS/vertices have/VBP/have degree/JJ/degree 1/CD/1. so/RB/so /,/, they/PRP/they have/VBP/have to/TO/to be/VB/be the/DT/the end/NN/end points/NNS/points of/IN/of the/DT/the path/NN/path u/NN/u prime/NN/prime and/CC/and v/NN/v prime/NN/prime have/VBP/have to/TO/to be/VB/be the/DT/the end/NN/end points/NNS/points of/IN/of hamiltonian/JJ/hamiltonian path/NN/path which/WDT/which means/VBZ/means the/DT/the hamiltonian/JJ/hamiltonian path/NN/path has/VBZ/has to/TO/to look/VB/look like/IN/like this/NNP/this. it/PRP/it has/VBZ/has to/TO/to start/VB/start at/IN/at u/NN/u prime/NN/prime and/CC/and then/RB/then go/VB/go through/IN/through all/DT/all vertices/NNS/vertices in/IN/in g/NN/g and/CC/and then/RB/then go/VB/go back/RB/back up/IN/up to/TO/to v/VB/v prime/NNP/prime. this/DT/this is/VBZ/is how/WRB/how the/DT/the hamiltonian/JJ/hamiltonian path/NN/path should/MD/should look/VB/look like/NNP/like. then/RB/then /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/DT/this ?/./? we/PRP/we remove/VBP/remove these/DT/these two/CD/two edges/NNP/edges. and/CC/and then/RB/then put/VBD/put this/DT/this edge/NN/edge u/NN/u v/NN/v which/WDT/which you/PRP/you have/VBP/have removed/VBN/removed this/DT/this will/MD/will give/VB/give you/PRP/you a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit in/IN/in the/DT/the original/JJ/original graph/NNP/graph. now/RB/now /,/, our/PRP$/our algorithm/NN/algorithm is/VBZ/is almost/RB/almost complete/JJ/complete /,/, what/WP/what we/PRP/we do/VBP/do is/VBZ/is ?/./? we/PRP/we do/VBP/do this/DT/this for/IN/for all/DT/all edges/NNS/edges in/IN/in the/DT/the graph/NNP/graph. we/PRP/we remove/VBP/remove that/IN/that edge/NN/edge attach/NN/attach this/DT/this u/NN/u prime/NN/prime v/NN/v prime/NN/prime and/CC/and ask/NN/ask if/IN/if it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. if/IN/if any/DT/any edge/NN/edge it/PRP/it says/VBZ/says yes/VBZ/yes then/RB/then we/PRP/we say/VBP/say yes/NNS/yes it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. if/IN/if for/IN/for all/PDT/all edges/NNS/edges it/PRP/it says/VBZ/says no/DT/no then/RB/then we/PRP/we say/VBP/say no/DT/no /,/, it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this algorithm/NN/algorithm /,/, then/RB/then we/PRP/we will/MD/will argue/VB/argue that/IN/that this/DT/this algorithm/NN/algorithm is/VBZ/is in/IN/in fact/NN/fact correct/NNP/correct. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 19/CD/19 /CD/) so/RB/so /,/, the/DT/the algorithm/NN/algorithm is/VBZ/is this/DT/this for/IN/for every/DT/every edge/NN/edge e/NN/e /,/, do/VBP/do the/DT/the following/NNP/following. so/RB/so /,/, remove/IN/remove e/NN/e from/IN/from g/NN/g /,/, let/VB/let us/PRP/us say/VB/say e/NN/e is/VBZ/is equals/NNS/equals is/VBZ/is u/PRP/u v/NNP/v. then/RB/then /,/, add/NN/add vertices/NNS/vertices u/VBP/u prime/JJ/prime and/CC/and v/NN/v prime/NN/prime and/CC/and connect/VB/connect u/NN/u prime/NN/prime to/TO/to u/VB/u and/CC/and v/NN/v prime/NN/prime to/TO/to v/NNP/v. this/DT/this lets/NNS/lets say/VBP/say graph/NN/graph g/NN/g lets/NNS/lets say/VBP/say e/NN/e /,/, for/IN/for an/DT/an edge/NN/edge e/NN/e i/PRP/i get/VBP/get this/DT/this graph/NN/graph g/NN/g e/NNP/e. now/RB/now feed/VBP/feed g/JJ/g e/NN/e ;/:/; that/DT/that means/VBZ/means /,/, input/NN/input g/NN/g e/NN/e to/TO/to an/DT/an algorithm/NN/algorithm for/IN/for hp/NNP/hp. if/IN/if this/DT/this algorithm/NN/algorithm says/VBZ/says yes/NNS/yes for/IN/for any/DT/any e/NN/e output/NN/output yes/NNS/yes /,/, if/IN/if it/PRP/it says/VBZ/says no/DT/no for/IN/for all/DT/all e/NN/e you/PRP/you output/VBD/output no/NNP/no. so/RB/so /,/, otherwise/RB/otherwise output/VBD/output no/NNP/no. so/RB/so you/PRP/you output/VBD/output no/DT/no /,/, if/IN/if it/PRP/it says/VBZ/says no/DT/no for/IN/for all/DT/all edges/NNS/edges you/PRP/you do/VBP/do this/DT/this you/PRP/you remove/VBP/remove this/DT/this edge/NN/edge add/VBD/add these/DT/these two/CD/two extra/JJ/extra vertices/NNS/vertices and/CC/and ask/VB/ask whether/IN/whether it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. if/IN/if it/PRP/it says/VBZ/says no/DT/no for/IN/for all/DT/all these/DT/these edges/NNS/edges then/RB/then you/PRP/you output/VBD/output no/NNP/no. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm and/CC/and we/PRP/we have/VBP/have to/TO/to show/VB/show that/IN/that this/DT/this is/VBZ/is correct/JJ/correct which/WDT/which means/VBZ/means if/IN/if the/DT/the original/JJ/original graph/NN/graph had/VBD/had a/DT/a hamiltonian/JJ/hamiltonian circuit/NNP/circuit. then/RB/then /,/, this/DT/this algorithm/NN/algorithm will/MD/will always/RB/always say/VB/say yes/NNP/yes. if/IN/if the/DT/the original/JJ/original graph/NN/graph did/VBD/did not/RB/not have/VB/have an/DT/an hamiltonian/JJ/hamiltonian circuit/NN/circuit /,/, it/PRP/it will/MD/will say/VB/say no/DT/no and/CC/and it/PRP/it is/VBZ/is efficient/NNP/efficient. if/IN/if the/DT/the hamiltonian/JJ/hamiltonian path/NN/path algorithm/NN/algorithm runs/VBZ/runs time/NN/time polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NN/size /,/, so/RB/so does/VBZ/does the/DT/the new/JJ/new algorithm/NNP/algorithm. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the three/CD/three things/NNS/things to/TO/to check/VB/check /,/, let/VB/let us/PRP/us just/RB/just make/VBP/make sure/JJ/sure that/IN/that the/DT/the algorithm/NN/algorithm is/VBZ/is efficient/JJ/efficient first/NNP/first. you/PRP/you call/VBP/call it/PRP/it once/RB/once per/IN/per edge/NN/edge the/DT/the hamiltonian/JJ/hamiltonian path/NN/path routine/NN/routine is/VBZ/is called/VBN/called once/RB/once per/IN/per edge/NN/edge and/CC/and you/PRP/you do/VBP/do not/RB/not change/VB/change the/DT/the input/NN/input size/NN/size by/IN/by much/NNP/much. you/PRP/you just/RB/just remove/VBP/remove one/CD/one edge/NN/edge and/CC/and you/PRP/you add/VBD/add two/CD/two more/JJR/more edges/NNP/edges. so/RB/so /,/, the/DT/the number/NN/number of/IN/of edges/NNS/edges goes/VBZ/goes up/RP/up by/IN/by one/NNP/one. so/RB/so /,/, the/DT/the input/NN/input size/NN/size does/VBZ/does not/RB/not go/VB/go up/RP/up by/IN/by much/RB/much and/CC/and you/PRP/you are/VBP/are calling/VBG/calling it/PRP/it at/IN/at most/JJS/most m/NN/m times/NNP/times. so/RB/so /,/, the/DT/the original/JJ/original running/NN/running time/NN/time was/VBD/was bounded/VBN/bounded by/IN/by some/DT/some n/NN/n to/TO/to the/DT/the constant/NNP/constant. it/PRP/it is/VBZ/is still/RB/still bounded/VBN/bounded by/IN/by some/DT/some n/NN/n to/TO/to the/DT/the constant/NN/constant again/RB/again there/EX/there are/VBP/are two/CD/two cases/NNP/cases. case/NN/case 1/CD/1 is/VBZ/is when/WRB/when the/DT/the algorithm/NN/algorithm outputs/NNS/outputs yes/VBZ/yes then/RB/then it/PRP/it has/VBZ/has to/TO/to be/VB/be correct/NNP/correct. second/JJ/second case/NN/case is/VBZ/is the/DT/the algorithm/NN/algorithm outputs/NNS/outputs no/DT/no this/DT/this no/DT/no answer/NN/answer also/RB/also has/VBZ/has to/TO/to be/VB/be correct/NNP/correct. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 54/CD/54 /CD/) let/NN/let us/PRP/us take/VBP/take both/DT/both these/DT/these cases/NNP/cases. so/RB/so /,/, case/NN/case 1/CD/1 /,/, so/RB/so the/DT/the algorithm/NN/algorithm outputs/NNS/outputs yes/NNP/yes. so/RB/so /,/, this/DT/this implies/VBZ/implies ;/:/; that/DT/that means/VBZ/means /,/, for/IN/for some/DT/some edge/NN/edge hp/NN/hp must/MD/must output/VB/output yes/NNP/yes. this/DT/this means/VBZ/means there/RB/there is/VBZ/is there/EX/there exists/NNS/exists an/DT/an edge/NN/edge e/NN/e in/IN/in g/NN/g such/JJ/such that/IN/that g/NN/g e/NN/e has/VBZ/has hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, here/RB/here was/VBD/was g/JJ/g and/CC/and here/RB/here is/VBZ/is e/RB/e i/PRP/i get/VBP/get g/JJ/g e/NN/e by/IN/by removing/NN/removing and/CC/and adding/VBG/adding these/DT/these two/NNP/two. so/RB/so /,/, this/DT/this had/VBD/had a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. and/CC/and now/RB/now we/PRP/we have/VBP/have seen/VBN/seen this/DT/this argument/NN/argument that/IN/that if/IN/if this/DT/this has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NN/path then/RB/then this/DT/this has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. essentially/RB/essentially you/PRP/you take/VBP/take the/DT/the hamiltonian/JJ/hamiltonian path/NN/path here/RB/here remove/VBP/remove these/DT/these two/CD/two edges/NNS/edges and/CC/and add/VB/add this/DT/this edge/NN/edge back/RB/back together/RB/together hamiltonian/JJ/hamiltonian cycle/NN/cycle here/NNP/here. so/RB/so this/DT/this case/NN/case is/VBZ/is done/NNP/done. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 59/CD/59 /CD/) the/DT/the algorithm/NN/algorithm outputs/NNS/outputs no/DT/no this/DT/this means/VBZ/means for/IN/for every/DT/every edge/NN/edge e/NN/e g/NN/g e/NN/e does/VBZ/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian path/NNP/path. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to see/VB/see that/IN/that this/DT/this implies/NNS/implies that/IN/that g/NN/g does/VBZ/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian circuit/NNP/circuit. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we need/VBP/need to/TO/to show/VB/show ?/./? so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to show/VB/show that/IN/that for/IN/for every/DT/every edge/NN/edge e/NN/e if/IN/if g/NN/g does/VBZ/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian path/NN/path /,/, then/RB/then g/VB/g does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian circuit/NNP/circuit. now/RB/now /,/, it/PRP/it is/VBZ/is easier/JJR/easier to/TO/to prove/VB/prove the/DT/the contra/NN/contra positive/JJ/positive /,/, which/WDT/which means/VBZ/means this/DT/this statement/NN/statement /,/, which/WDT/which i/PRP/i have/VBP/have written/VBN/written is/VBZ/is equivalent/VBN/equivalent to/TO/to saying/VBG/saying the/DT/the following/VBG/following that/IN/that this/DT/this let/NN/let me/PRP/me write/VBP/write the/DT/the equivalent/NN/equivalent statement/NN/statement on/IN/on the/DT/the right/NN/right hand/NN/hand side/NNP/side. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to say/VB/say that/IN/that g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle this/DT/this implies/VBZ/implies if/IN/if g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle what/WP/what should/MD/should happen/VB/happen ?/./? this/DT/this means/VBZ/means this/DT/this statement/NN/statement can/MD/can not/RB/not happen/NNP/happen. it/PRP/it is/VBZ/is not/RB/not the/DT/the case/NN/case that/IN/that for/IN/for every/DT/every edge/NN/edge e/NN/e g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. it/PRP/it means/VBZ/means there/RB/there exist/VBP/exist an/DT/an edge/NN/edge e/NN/e such/JJ/such that/IN/that g/NN/g e/NN/e does/VBZ/does not/RB/not have/VB/have hp/NNP/hp. so/RB/so /,/, these/DT/these two/CD/two things/NNS/things are/VBP/are the/DT/the same/NNP/same. so/RB/so /,/, these/DT/these two/CD/two are/VBP/are equivalent/NNP/equivalent. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just sort/NN/sort of/IN/of say/NN/say what/WP/what i/PRP/i am/VBP/am doing/NNP/doing. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to prove/VB/prove that/IN/that a/DT/a implies/NNS/implies b/NN/b you/PRP/you are/VBP/are proving/VBG/proving that/IN/that not/RB/not b/VB/b implies/NNS/implies not/RB/not a/NNP/a. i/PRP/i want/VBP/want to/TO/to prove/VB/prove that/IN/that this/DT/this implies/NNS/implies this/DT/this is/VBZ/is a/DT/a and/CC/and this/DT/this is/VBZ/is b/NNP/b. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to prove/VB/prove that/IN/that a/DT/a implies/NNS/implies b/NN/b all/DT/all i/PRP/i am/VBP/am doing/VBG/doing is/VBZ/is not/RB/not b/VB/b is/VBZ/is this/DT/this implies/VBZ/implies not/RB/not a/DT/a which/WDT/which is/VBZ/is this/DT/this because/IN/because i/PRP/i am/VBP/am going/VBG/going to/TO/to prove/VB/prove that/IN/that if/IN/if g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. there/RB/there exists/VBZ/exists a/DT/a edge/NN/edge such/JJ/such that/IN/that g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. and/CC/and you/PRP/you can/MD/can see/VB/see this/DT/this also/RB/also we/PRP/we have/VBP/have proved/NNP/proved. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 37/CD/37 /CD/) if/IN/if g/JJ/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, so/RB/so that/IN/that is/VBZ/is g/NNP/g. so/RB/so that/IN/that is/VBZ/is my/PRP$/my hamiltonian/NN/hamiltonian cycle/NN/cycle /,/, if/IN/if i/PRP/i remove/VBP/remove any/DT/any edge/NN/edge in/IN/in the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, if/IN/if i/PRP/i remove/VBP/remove this/DT/this edge/NN/edge and/CC/and attach/NN/attach these/DT/these two/CD/two vertices/NNS/vertices this/DT/this resultant/NN/resultant graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian path/NN/path which/WDT/which is/VBZ/is what/WP/what we/PRP/we wanted/VBD/wanted to/TO/to prove/NNP/prove. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to prove/VB/prove that/IN/that g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. there/RB/there exists/VBZ/exists an/DT/an edge/NN/edge such/JJ/such that/IN/that g/NN/g does/VBZ/does not/RB/not have/VB/have sorry/JJ/sorry g/NN/g does/VBZ/does have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. i/PRP/i am/VBP/am sorry/JJ/sorry about/IN/about this/DT/this g/NN/g does/VBZ/does have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NN/path and/CC/and this/DT/this we/PRP/we have/VBP/have just/RB/just proved/NNP/proved. in/IN/in fact/NN/fact /,/, this/DT/this edge/NN/edge e/NN/e can/MD/can be/VB/be any/DT/any edge/NN/edge in/IN/in the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, remove/IN/remove any/DT/any edge/NN/edge in/IN/in the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle for/IN/for that/DT/that edge/NN/edge removal/NN/removal of/IN/of that/DT/that edge/NN/edge g/NN/g e/NN/e will/MD/will have/VB/have to/TO/to remove/VB/remove that/IN/that edge/NN/edge attach/NN/attach those/DT/those two/CD/two vertices/NNP/vertices. this/DT/this new/JJ/new graph/NN/graph g/NN/g e/NN/e will/MD/will have/VB/have a/DT/a hamiltonian/JJ/hamiltonian path/NNP/path. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 37/CD/37 /CD/) so/RB/so /,/, when/WRB/when we/PRP/we looked/VBD/looked at/IN/at these/DT/these problems/NNS/problems there/RB/there were/VBD/were two/CD/two kinds/NNS/kinds of/IN/of problems/NNS/problems we/PRP/we looked/VBD/looked at/NNP/at. for/IN/for some/DT/some problems/NNS/problems we/PRP/we said/VBD/said that/IN/that we/PRP/we wrote/VBD/wrote input/VBN/input output/NNP/output. for/IN/for certain/JJ/certain other/JJ/other problems/NNS/problems we/PRP/we said/VBD/said input/VBN/input question/NN/question /,/, now/RB/now when/WRB/when i/PRP/i looked/VBD/looked at/IN/at problems/NNS/problems like/IN/like with/IN/with finding/NN/finding a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum weight/NN/weight of/IN/of finding/NN/finding a/DT/a matching/NN/matching with/IN/with maximum/NN/maximum number/NN/number of/IN/of edges/NNP/edges. they/PRP/they were/VBD/were of/IN/of the/DT/the form/NN/form input/NN/input and/CC/and output/NNP/output. because/IN/because /,/, the/DT/the output/NN/output was/VBD/was edges/NNS/edges which/WDT/which were/VBD/were there/RB/there in/IN/in a/DT/a matching/NN/matching of/IN/of maximum/NN/maximum size/NNP/size. now/RB/now /,/, for/IN/for instance/NN/instance does/VBZ/does the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle that/WDT/that is/VBZ/is the/DT/the question/NN/question the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NNP/graph. does/VBZ/does the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle i/PRP/i ask/VBP/ask a/DT/a question/NN/question the/DT/the answer/NN/answer should/MD/should be/VB/be yes/NNS/yes or/CC/or no/NNP/no. now/RB/now /,/, the/DT/the difference/NN/difference was/VBD/was for/IN/for these/DT/these kinds/NNS/kinds of/IN/of problems/NNP/problems. the/DT/the answer/NN/answer was/VBD/was a/DT/a single/JJ/single bit/NN/bit /,/, it/PRP/it was/VBD/was yes/NNS/yes or/CC/or no/NNP/no. for/IN/for these/DT/these problems/NNS/problems the/DT/the output/NN/output spend/NN/spend many/JJ/many bits/NNP/bits. so/RB/so /,/, these/DT/these had/VBD/had a/DT/a single/JJ/single bit/NN/bit as/IN/as the/DT/the output/NN/output these/DT/these had/VBD/had many/JJ/many bits/NNS/bits as/IN/as output/NN/output for/IN/for instance/NN/instance edges/NNS/edges in/IN/in a/DT/a matching/NNP/matching. in/IN/in fact/NN/fact /,/, let/VB/let us/PRP/us look/VB/look at/IN/at the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle problem/NNP/problem. we/PRP/we said/VBD/said input/VBN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g /,/, does/VBZ/does g/NN/g have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle if/IN/if yes/NNS/yes or/CC/or no/NNP/no. so/RB/so /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes or/CC/or no/NNP/no. on/IN/on the/DT/the other/JJ/other hand/NN/hand i/PRP/i could/MD/could have/VB/have asked/VBN/asked for/IN/for a/DT/a output/NN/output for/IN/for saying/VBG/saying output/NN/output the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g output/NN/output the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. now/RB/now /,/, this/DT/this problem/NN/problem seems/VBZ/seems to/TO/to be/VB/be somewhat/RB/somewhat similar/JJ/similar to/TO/to the/DT/the previous/JJ/previous problem/NN/problem only/RB/only here/RB/here the/DT/the output/NN/output has/VBZ/has many/JJ/many bits/NNP/bits. we/PRP/we have/VBP/have to/TO/to output/VB/output every/DT/every edge/NN/edge in/IN/in a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. we/PRP/we have/VBP/have to/TO/to choose/VB/choose one/CD/one hamiltonian/JJ/hamiltonian cycle/NN/cycle and/CC/and output/NN/output the/DT/the edges/NNS/edges from/IN/from the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to distinguish/VB/distinguish between/IN/between problems/NNS/problems /,/, where/WRB/where we/PRP/we require/VBP/require the/DT/the output/NN/output to/TO/to be/VB/be 1/CD/1 bit/NN/bit and/CC/and problems/NNS/problems /,/, where/WRB/where we/PRP/we require/VBP/require the/DT/the output/NN/output to/TO/to be/VB/be many/JJ/many bits/NNP/bits. these/DT/these we/PRP/we call/VBP/call decision/NN/decision problems/NNS/problems and/CC/and these/DT/these we/PRP/we call/VBP/call search/NN/search problems/NNP/problems. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 58/CD/58 /CD/) so/RB/so /,/, typically/RB/typically here/RB/here for/IN/for decision/NN/decision problem/NN/problem let/NN/let me/PRP/me write/VBP/write decision/NN/decision and/CC/and search/NNP/search. so/RB/so here/RB/here /,/, output/NN/output is/VBZ/is 1/CD/1 bit/NN/bit here/RB/here is/VBZ/is many/JJ/many bits/NNP/bits. so/RB/so /,/, here/RB/here you/PRP/you want/VBP/want to/TO/to decide/VB/decide whether/IN/whether true/JJ/true or/CC/or false/NN/false here/RB/here you/PRP/you want/VBP/want to/TO/to search/NN/search for/IN/for a/DT/a solution/NN/solution and/CC/and output/NN/output the/DT/the solution/NNP/solution. that/IN/that is/VBZ/is why/WRB/why this/DT/this i/PRP/i guess/VBP/guess that/IN/that is/VBZ/is why/WRB/why these/DT/these are/VBP/are called/VBN/called decision/NN/decision and/CC/and these/DT/these are/VBP/are called/VBN/called search/NN/search problems/NNP/problems. so/RB/so example/NN/example /,/, does/VBZ/does g/NN/g have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a decision/NN/decision problem/NNP/problem. example/NN/example of/IN/of a/DT/a search/NN/search problem/NN/problem output/NN/output a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle if/IN/if one/CD/one exists/NNP/exists. the/DT/the input/NN/input is/VBZ/is same/JJ/same to/TO/to be/VB/be both/DT/both which/WDT/which is/VBZ/is a/DT/a graph/NN/graph g/NN/g in/IN/in one/CD/one case/NN/case you/PRP/you just/RB/just want/VBP/want to/TO/to know/VB/know g/NN/g has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle or/CC/or not/NNP/not. the/DT/the other/JJ/other case/NN/case you/PRP/you want/VBP/want hamiltonian/JJ/hamiltonian cycle/NN/cycle output/NN/output you/PRP/you want/VBP/want actually/RB/actually the/DT/the edges/NNS/edges we/PRP/we have/NNP/have. now/RB/now /,/, how/WRB/how do/VBP/do these/DT/these two/CD/two things/NNS/things /,/, how/WRB/how do/VBP/do these/DT/these two/CD/two problems/NNS/problems relate/VBP/relate to/TO/to it/NNP/it. is/VBZ/is one/CD/one easier/JJR/easier than/IN/than the/DT/the other/JJ/other is/VBZ/is one/CD/one harder/NN/harder than/IN/than the/DT/the other/JJ/other ?/./? now/RB/now it/PRP/it turns/VBZ/turns out/RP/out people/NNS/people have/VBP/have just/RB/just observed/VBN/observed it/PRP/it that/IN/that they/PRP/they are/VBP/are related/VBN/related to/TO/to each/DT/each other/JJ/other quite/JJ/quite closely/RB/closely in/IN/in the/DT/the sense/NN/sense that/IN/that one/CD/one is/VBZ/is easy/JJ/easy the/DT/the other/JJ/other one/CD/one also/RB/also turns/VBZ/turns out/RP/out to/TO/to be/VB/be hard/NNP/hard. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 59/CD/59 /:/: 08/CD/08 /CD/) so/RB/so /,/, let/VB/let us/PRP/us take/VB/take this/DT/this hamiltonian/JJ/hamiltonian cycle/NN/cycle problem/NN/problem and/CC/and see/VB/see this/NNP/this. so/RB/so /,/, i/PRP/i have/VBP/have so/RB/so the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NNP/g. now/RB/now there/RB/there are/VBP/are two/CD/two problems/NNS/problems /,/, one/CD/one is/VBZ/is does/VBZ/does g/NN/g have/VBP/have hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, this/DT/this is/VBZ/is 1/CD/1. and/CC/and the/DT/the second/JJ/second thing/NN/thing output/NN/output a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle if/IN/if one/CD/one exists/NNS/exists this/DT/this is/VBZ/is problem/NN/problem 2/CD/2 that/WDT/that is/VBZ/is problem/NN/problem 1/CD/1. now/RB/now supposing/VBG/supposing there/EX/there is/VBZ/is a/DT/a algorithm/NN/algorithm for/IN/for problem/NN/problem 2/CD/2. so/RB/so /,/, which/WDT/which means/VBZ/means given/VBN/given so/RB/so if/IN/if you/PRP/you feed/VBP/feed in/IN/in a/DT/a input/NN/input graph/NN/graph the/DT/the sub/NN/sub routine/NN/routine outputs/NNS/outputs the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. can/MD/can we/PRP/we find/VB/find a/DT/a algorithm/NN/algorithm for/IN/for problem/NN/problem 1/CD/1 /,/, yes/NNS/yes i/PRP/i hope/VBP/hope all/DT/all of/IN/of you/PRP/you answered/VBD/answered yes/NNP/yes. so/RB/so /,/, the/DT/the answer/NN/answer has/VBZ/has to/TO/to be/VB/be yes/NNP/yes. so/RB/so /,/, you/PRP/you just/RB/just feed/VBP/feed the/DT/the graph/NN/graph in/IN/in so/RB/so this/DT/this sub/NN/sub routine/NN/routine and/CC/and look/VB/look at/IN/at the/DT/the edges/NNS/edges which/WDT/which have/VBP/have been/VBN/been output/NNP/output. so/RB/so /,/, if/IN/if it/PRP/it forms/VBZ/forms a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, then/RB/then you/PRP/you just/RB/just output/VBD/output saying/VBG/saying that/IN/that yes/NNS/yes it/PRP/it does/VBZ/does in/IN/in fact/NN/fact have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. and/CC/and if/IN/if it/PRP/it says/VBZ/says no/DT/no it/PRP/it does/VBZ/does not/RB/not the/DT/the original/JJ/original routine/NN/routine says/VBZ/says no/DT/no it/PRP/it does/VBZ/does not/RB/not have/VB/have hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, i/PRP/i just/RB/just then/RB/then you/PRP/you just/RB/just output/VBD/output things/NNS/things /,/, so/RB/so that/IN/that is/VBZ/is trivial/NNP/trivial. our/PRP$/our job/NN/job is/VBZ/is to/TO/to look/VB/look at/IN/at the/DT/the other/JJ/other way/NN/way which/WDT/which means/VBZ/means i/PRP/i have/VBP/have an/DT/an algorithm/NN/algorithm for/IN/for problem/NN/problem 1/CD/1. i/PRP/i have/VBP/have an/DT/an algorithm/NN/algorithm for/IN/for this/NNP/this. now/RB/now i/PRP/i want/VBP/want a/DT/a algorithm/NN/algorithm for/IN/for this/DT/this so/RB/so given/NNP/given. let/VB/let me/PRP/me add/VB/add efficient/JJ/efficient just/RB/just to/TO/to remind/VB/remind you/PRP/you that/IN/that we/PRP/we are/VBP/are talking/VBG/talking of/IN/of efficient/JJ/efficient algorithms/NNS/algorithms given/VBN/given an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for problem/NN/problem 1/CD/1. construct/NN/construct one/CD/one for/IN/for problem/NN/problem 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we really/RB/really want/VBP/want to/TO/to do/VB/do and/CC/and how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/NNP/this. we/PRP/we have/VBP/have actually/RB/actually done/VBN/done something/NN/something like/IN/like this/DT/this before/IN/before which/WDT/which was/VBD/was with/IN/with respect/NN/respect to/TO/to matching/NN/matching ?/./? s/NNS/s when/WRB/when we/PRP/we wanted/VBD/wanted to/TO/to find/VB/find the/DT/the edges/NNS/edges in/IN/in the/DT/the matching/NN/matching of/IN/of maximum/NN/maximum weight/NNP/weight. we/PRP/we used/VBD/used this/DT/this sub/NN/sub routine/NN/routine which/WDT/which answered/VBN/answered something/NN/something else/RB/else and/CC/and we/PRP/we somehow/VBP/somehow got/VBN/got these/DT/these edges/NNS/edges out/IN/out and/CC/and we/PRP/we used/VBD/used absolutely/RB/absolutely the/DT/the same/JJ/same trick/NN/trick here/NNP/here. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/DT/this ?/./? we/PRP/we will/MD/will look/VB/look at/IN/at the/DT/the edges/NNS/edges one/CD/one by/IN/by one/CD/one let/NN/let us/PRP/us say/VBP/say the/DT/the edges/NNS/edges e/VBP/e 1/CD/1 e/NN/e 2/CD/2 e/NN/e 3/CD/3 e/NN/e 4/CD/4 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, we/PRP/we look/VBP/look at/IN/at the/DT/the edges/NNS/edges one/CD/one by/IN/by one/CD/one i/PRP/i remove/VBP/remove e/JJ/e 1/CD/1. now/RB/now i/PRP/i ask/VBP/ask if/IN/if the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle or/CC/or not/NNP/not. if/IN/if the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle it/PRP/it does/VBZ/does have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle which/WDT/which does/VBZ/does not/RB/not use/VB/use this/DT/this edge/NN/edge e/NN/e 1/CD/1 /,/, so/RB/so i/PRP/i just/RB/just throw/VBP/throw away/RB/away e/JJ/e 1/CD/1. similarly/RB/similarly /,/, i/PRP/i look/VBP/look at/IN/at e/NN/e 2/CD/2 i/PRP/i remove/VBP/remove e/JJ/e 2/CD/2 and/CC/and ask/NN/ask if/IN/if the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. if/IN/if it/PRP/it says/VBZ/says if/IN/if the/DT/the sub/NN/sub routine/NN/routine says/VBZ/says yes/NNS/yes i/PRP/i just/RB/just throw/VBP/throw away/RB/away this/DT/this edge/NN/edge and/CC/and i/PRP/i keep/VBP/keep doing/VBG/doing this/NNP/this. supposing/NN/supposing i/PRP/i remove/VBP/remove an/DT/an edge/NN/edge and/CC/and it/PRP/it says/VBZ/says the/DT/the graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle then/RB/then you/PRP/you also/RB/also know/VBP/know that/IN/that this/DT/this hamiltonian/JJ/hamiltonian cycle/NN/cycle uses/NNS/uses this/DT/this edge/NNP/edge. so/RB/so /,/, these/DT/these edges/NNS/edges you/PRP/you put/VBD/put back/RP/back in/IN/in and/CC/and you/PRP/you do/VBP/do not/RB/not want/VB/want to/TO/to throw/VB/throw these/DT/these edges/NNP/edges. so/RB/so /,/, you/PRP/you just/RB/just do/VBP/do this/DT/this look/NN/look at/IN/at all/DT/all edges/NNS/edges one/CD/one by/IN/by one/CD/one for/IN/for those/DT/those edges/NNS/edges /,/, where/WRB/where the/DT/the algorithm/NN/algorithm says/VBZ/says that/IN/that it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. you/PRP/you throw/VBP/throw away/RB/away those/DT/those edges/NNS/edges /,/, but/CC/but edges/NNS/edges for/IN/for which/WDT/which the/DT/the algorithm/NN/algorithm says/VBZ/says that/IN/that there/EX/there is/VBZ/is if/IN/if you/PRP/you remove/VBP/remove there/RB/there is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. you/PRP/you throw/VBP/throw away/RB/away those/DT/those edges/NNS/edges for/IN/for edges/NNS/edges when/WRB/when you/PRP/you remove/VBP/remove those/DT/those edges/NNS/edges and/CC/and ask/VB/ask the/DT/the question/NN/question it/PRP/it says/VBZ/says no/DT/no there/EX/there is/VBZ/is no/DT/no hamiltonian/JJ/hamiltonian cycle/NN/cycle ;/:/; that/DT/that means/VBZ/means /,/, this/DT/this edge/NN/edge must/MD/must be/VB/be present/JJ/present you/PRP/you put/VBD/put it/PRP/it back/RB/back here/NNP/here. so/RB/so /,/, you/PRP/you do/VBP/do this/DT/this for/IN/for all/DT/all edges/NNS/edges and/CC/and at/IN/at the/DT/the end/NN/end of/IN/of it/PRP/it you/PRP/you throw/VBP/throw away/RB/away some/DT/some of/IN/of edges/NNS/edges and/CC/and some/DT/some edges/NNS/edges remaining/NNP/remaining. the/DT/the claim/NN/claim is/VBZ/is that/IN/that the/DT/the edges/NNS/edges which/WDT/which remain/NN/remain must/MD/must form/VB/form a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. firstly/RB/firstly /,/, the/DT/the graph/NN/graph must/MD/must have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, because/IN/because whatever/NN/whatever remains/VBZ/remains whenever/NN/whenever we/PRP/we ask/VBP/ask whether/IN/whether it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle it/PRP/it says/VBZ/says /,/, yes/NNP/yes. so/RB/so /,/, the/DT/the graph/NN/graph that/IN/that remains/VBZ/remains must/MD/must have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, why/WRB/why should/MD/should not/RB/not there/VB/there be/VB/be other/JJ/other spurious/JJ/spurious edges/NNS/edges floating/VBG/floating around/IN/around /,/, why/WRB/why should/MD/should it/PRP/it not/RB/not have/VB/have apart/NN/apart from/IN/from the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle other/JJ/other edge/NNP/edge. supposing/NN/supposing it/PRP/it had/VBD/had some/DT/some other/JJ/other edge/NN/edge when/WRB/when you/PRP/you remove/VBP/remove this/DT/this edge/NN/edge and/CC/and ask/NN/ask whether/IN/whether the/DT/the graph/NN/graph is/VBZ/is hamiltonian/JJ/hamiltonian cycle/NNP/cycle. the/DT/the answer/NN/answer should/MD/should have/VB/have been/VBN/been yes/NNP/yes. so/RB/so /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes you/PRP/you would/MD/would have/VB/have thrown/VBN/thrown this/DT/this edge/NN/edge away/NNP/away. so/RB/so /,/, there/EX/there are/VBP/are no/DT/no spurious/JJ/spurious edges/NNP/edges. the/DT/the only/JJ/only edges/NNS/edges which/WDT/which are/VBP/are present/JJ/present are/VBP/are hamiltonian/NNP/hamiltonian. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 04/CD/04 /:/: 29/CD/29 /CD/) so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/NNP/this. so/RB/so /,/, just/RB/just to/TO/to recap/VB/recap we/PRP/we are/VBP/are given/VBN/given a/DT/a algorithm/NN/algorithm that/WDT/that says/VBZ/says whether/IN/whether a/DT/a graph/NN/graph is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle or/CC/or not/NNP/not. we/PRP/we are/VBP/are constructing/VBG/constructing using/VBG/using this/DT/this as/IN/as a/DT/a sub/NN/sub routine/NN/routine /,/, we/PRP/we are/VBP/are trying/VBG/trying to/TO/to find/VB/find out/RP/out edges/NNS/edges in/IN/in some/DT/some hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, consider/IN/consider edges/NNS/edges one/CD/one by/IN/by one/CD/one for/IN/for edge/NN/edge e/NN/e i/PRP/i remove/VBP/remove e/JJ/e i/PRP/i and/CC/and ask/VB/ask hc/NN/hc if/IN/if the/DT/the resultant/NN/resultant graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. if/IN/if i/PRP/i says/VBZ/says yes/NNS/yes throw/VBP/throw away/RB/away e/JJ/e i/PRP/i else/VBP/else retain/RB/retain e/JJ/e i/PRP/i that/IN/that is/VBZ/is it/PRP/it you/PRP/you just/RB/just do/VBP/do it/PRP/it for/IN/for all/PDT/all edges/NNP/edges. finally/RB/finally /,/, what/WDT/what remains/VBZ/remains is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle which/WDT/which means/VBZ/means what/WP/what remains/VBZ/remains are/VBP/are edges/NNS/edges from/IN/from a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, you/PRP/you can/MD/can see/VB/see that/IN/that both/DT/both problems/NNS/problems are/VBP/are quite/RB/quite related/VBN/related i/PRP/i just/RB/just need/VBP/need to/TO/to call/VB/call the/DT/the other/JJ/other algorithm/NN/algorithm n/NN/n times/NNS/times able/JJ/able to/TO/to actually/RB/actually extract/VB/extract the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, it/PRP/it is/VBZ/is been/VBN/been observed/VBN/observed for/IN/for most/JJS/most problems/NNS/problems there/RB/there are/VBP/are of/IN/of course/NN/course /,/, problems/NNS/problems which/WDT/which do/VBP/do not/RB/not fall/VB/fall into/IN/into this/DT/this which/WDT/which do/VBP/do not/RB/not fall/VB/fall into/IN/into this/DT/this property/NNP/property. but/CC/but for/IN/for most/JJS/most problems/NNS/problems if/IN/if i/PRP/i can/MD/can sort/VB/sort of/IN/of decide/NN/decide then/RB/then i/PRP/i can/MD/can also/RB/also search/VB/search for/IN/for a/DT/a solution/NNP/solution. so/RB/so /,/, if/IN/if the/DT/the decision/NN/decision version/NN/version of/IN/of a/DT/a problem/NN/problem is/VBZ/is easy/JJ/easy then/RB/then even/RB/even the/DT/the search/NN/search version/NN/version is/VBZ/is easy/NNP/easy. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, if/IN/if the/DT/the search/NN/search version/NN/version is/VBZ/is hard/JJ/hard then/RB/then social/JJ/social decision/NN/decision word/NN/word /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the reason/NN/reason they/PRP/they are/VBP/are going/VBG/going to/TO/to focus/VB/focus on/IN/on decision/NN/decision versions/NNS/versions of/IN/of problem/NN/problem from/IN/from known/NNP/known. so/RB/so /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the problems/NNS/problems which/WDT/which have/VBP/have whose/WP$/whose output/NN/output is/VBZ/is 1/CD/1 bit/NN/bit and/CC/and say/VB/say yes/NNS/yes or/CC/or no/NNP/no. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 06/CD/06 /:/: 53/CD/53 /CD/) we/PRP/we are/VBP/are now/RB/now ready/RB/ready to/TO/to define/VB/define the/DT/the class/NN/class np/NNP/np. so/RB/so /,/, before/IN/before i/PRP/i formally/RB/formally define/JJ/define this/NNP/this. let/NN/let me/PRP/me /,/, sort/NN/sort of/IN/of give/JJ/give you/PRP/you a/DT/a informal/JJ/informal definition/NNP/definition. let/NN/let us/PRP/us take/VBP/take our/PRP$/our favorite/JJ/favorite hamiltonian/NN/hamiltonian problem/NNP/problem. so/RB/so /,/, hc/NN/hc the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g and/CC/and the/DT/the question/NN/question does/VBZ/does g/NN/g have/VBP/have hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this one/CD/one just/RB/just consider/JJR/consider now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do something/NN/something slightly/RB/slightly different/JJ/different from/IN/from what/WP/what we/PRP/we have/VBP/have been/VBN/been doing/NNP/doing. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to design/VB/design algorithms/NNS/algorithms for/IN/for the/DT/the time/NN/time being/VBG/being what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is have/VB/have a/DT/a game/NN/game between/IN/between two/CD/two players/NNP/players. there/RB/there are/VBP/are two/CD/two players/NNS/players now/RB/now one/CD/one i/PRP/i will/MD/will call/VB/call a/DT/a prover/NN/prover and/CC/and one/CD/one i/PRP/i will/MD/will call/VB/call a/DT/a verifier/NNP/verifier. these/DT/these are/VBP/are two/CD/two people/NNS/people prover/RB/prover and/CC/and verifier/JJR/verifier /,/, prover/RB/prover is/VBZ/is all/DT/all powerful/JJ/powerful ;/:/; he/PRP/he just/RB/just knows/VBZ/knows everything/NNP/everything. the/DT/the verifier/NN/verifier has/VBZ/has limited/VBN/limited resources/NNS/resources and/CC/and it/PRP/it does/VBZ/does not/RB/not trust/VB/trust anybody/NN/anybody sort/NN/sort of/IN/of does/VBZ/does not/RB/not trust/NNP/trust. especially/RB/especially he/PRP/he does/VBZ/does not/RB/not trust/VB/trust the/DT/the prover/NN/prover he/PRP/he has/VBZ/has limited/VBN/limited resource/NNP/resource. now/RB/now /,/, the/DT/the prover/NN/prover and/CC/and verifier/JJR/verifier sort/NN/sort of/IN/of lets/NNS/lets sitting/VBG/sitting in/IN/in a/DT/a room/NNP/room. and/CC/and there/EX/there is/VBZ/is a/DT/a huge/JJ/huge graph/NN/graph in/IN/in front/NN/front of/IN/of just/RB/just imagine/JJ/imagine that/IN/that somebody/NN/somebody has/VBZ/has drawn/VBN/drawn a/DT/a huge/JJ/huge graph/NN/graph in/IN/in front/NN/front of/IN/of them/NNP/them. the/DT/the prover/NN/prover looks/VBZ/looks at/IN/at the/DT/the graph/NN/graph and/CC/and he/PRP/he says/VBZ/says this/DT/this graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle he/PRP/he is/VBZ/is powerful/JJ/powerful he/PRP/he can/MD/can figure/VB/figure these/DT/these things/NNS/things out/IN/out and/CC/and he/PRP/he says/VBZ/says this/DT/this graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. now/RB/now /,/, the/DT/the verifier/NN/verifier is/VBZ/is skeptical/JJ/skeptical he/PRP/he does/VBZ/does not/RB/not believe/VB/believe the/DT/the prover/NNP/prover. so/RB/so /,/, he/PRP/he says/VBZ/says the/DT/the why/WRB/why should/MD/should the/DT/the graph/NN/graph have/VBP/have hamiltonian/JJ/hamiltonian cycle/NN/cycle and/CC/and what/WP/what is/VBZ/is the/DT/the deal/NN/deal /,/, then/RB/then what/WP/what should/MD/should the/DT/the prover/NN/prover do/NNP/do. the/DT/the prover/NN/prover wants/VBZ/wants to/TO/to convince/NN/convince the/DT/the verifier/NN/verifier that/IN/that he/PRP/he is/VBZ/is all/DT/all powerful/JJ/powerful and/CC/and he/PRP/he has/VBZ/has made/VBN/made the/DT/the right/NN/right statement/NN/statement he/PRP/he said/VBD/said the/DT/the graph/NN/graph is/VBZ/is hamiltonian/JJ/hamiltonian cycle/NN/cycle and/CC/and the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, he/PRP/he wants/VBZ/wants to/TO/to convince/NN/convince the/DT/the verifier/NN/verifier that/IN/that the/DT/the graph/NN/graph has/VBZ/has hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, what/WDT/what could/MD/could he/PRP/he do/VB/do ?/./? well/RB/well if/IN/if you/PRP/you think/VBP/think about/IN/about this/DT/this for/IN/for a/DT/a minute/NN/minute what/WP/what the/DT/the prover/NN/prover could/MD/could do/VB/do was/VBD/was pick/VB/pick out/RP/out the/DT/the edges/NNS/edges from/IN/from the/DT/the graph/NN/graph which/WDT/which form/NN/form some/DT/some edges/NNS/edges which/WDT/which form/NN/form some/DT/some hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, pick/NN/pick out/IN/out some/DT/some hamiltonian/JJ/hamiltonian cycle/NN/cycle from/IN/from the/DT/the graph/NN/graph and/CC/and tell/NN/tell the/DT/the verifier/NN/verifier that/IN/that here/RB/here are/VBP/are a/DT/a set/NN/set of/IN/of edges/NNS/edges which/WDT/which form/NN/form a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. now/RB/now all/DT/all the/DT/the verifier/NN/verifier needs/VBZ/needs to/TO/to do/VB/do is/VBZ/is look/VB/look at/IN/at these/DT/these edges/NNS/edges make/VBP/make sure/JJ/sure they/PRP/they form/VBP/form a/DT/a make/NN/make sure/NN/sure that/WDT/that they/PRP/they form/VBP/form a/DT/a cycle/NNP/cycle. you/PRP/you just/RB/just have/VBP/have to/TO/to verify/VB/verify that/IN/that these/DT/these set/NN/set of/IN/of edges/NNS/edges form/NN/form a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle which/WDT/which is/VBZ/is easy/JJ/easy to/TO/to verify/VB/verify even/RB/even though/IN/though he/PRP/he has/VBZ/has limited/VBN/limited resources/NNS/resources and/CC/and he/PRP/he is/VBZ/is not/RB/not too/RB/too intelligent/JJ/intelligent this/DT/this much/JJ/much he/PRP/he can/MD/can do/VB/do. so/RB/so /,/, the/DT/the prover/NN/prover has/VBZ/has somehow/RB/somehow convinced/VBN/convinced the/DT/the verifier/NN/verifier that/IN/that this/DT/this graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, the/DT/the prover/NN/prover says/VBZ/says that/IN/that there/EX/there is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in this/DT/this graph/NN/graph the/DT/the verifier/NN/verifier asks/VBZ/asks why/WRB/why the/DT/the prover/NN/prover then/RB/then picks/VBZ/picks out/RP/out the/DT/the edges/NNP/edges. these/DT/these are/VBP/are the/DT/the edges/NNS/edges look/VBP/look at/IN/at these/DT/these edges/NNS/edges they/PRP/they form/VBP/form a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in a/DT/a graph/NNP/graph. the/DT/the verifier/NN/verifier then/RB/then verifies/VBZ/verifies that/IN/that yes/NNS/yes indeed/RB/indeed the/DT/the graph/NN/graph did/VBD/did have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. and/CC/and we/PRP/we have/VBP/have just/RB/just proved/VBN/proved that/IN/that hamiltonian/JJ/hamiltonian cycle/NN/cycle is/VBZ/is in/IN/in the/DT/the graph/NN/graph is/VBZ/is in/IN/in the/DT/the class/NN/class np/NNP/np. i/PRP/i have/VBP/have not/RB/not defined/VBN/defined the/DT/the class/NN/class np/NNP/np. so/RB/so /,/, you/PRP/you really/RB/really do/VBP/do not/RB/not know/VB/know what/WP/what it/PRP/it is/NNP/is. but/CC/but /,/, this/DT/this is/VBZ/is all/DT/all there/RB/there is/VBZ/is to/TO/to proving/VBG/proving things/NNS/things proving/VBG/proving the/DT/the problems/NNS/problems are/VBP/are in/IN/in the/DT/the class/NN/class np/NNP/np. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do this/DT/this prover/NN/prover verifier/NN/verifier game/NN/game for/IN/for some/DT/some other/JJ/other problem/NN/problem just/RB/just to/TO/to get/VB/get sort/NN/sort of/IN/of just/RB/just to/TO/to get/VB/get used/VBN/used to/TO/to it/NNP/it. let/VB/let us/PRP/us say/VB/say the/DT/the input/NN/input is/VBZ/is an/DT/an integer/NN/integer t/NNP/t. so/RB/so /,/, you/PRP/you want/VBP/want so/RB/so the/DT/the output/NN/output factors/NNS/factors let/VBP/let us/PRP/us say/VBP/say two/CD/two non/NN/non trivial/JJ/trivial integers/NNS/integers t/VBP/t 1/CD/1 and/CC/and t/NN/t 2/CD/2 such/JJ/such that/IN/that t/NN/t equals/NNS/equals t/VBP/t 1/CD/1 times/NNS/times t/NN/t 2/CD/2. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to find/VB/find factors/NNS/factors of/IN/of these/NNP/these. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 12/CD/12 /:/: 08/CD/08 /CD/) now/RB/now /,/, this/DT/this is/VBZ/is a/DT/a search/NN/search question/NN/question it/PRP/it is/VBZ/is not/RB/not a/DT/a decision/NN/decision question/NNP/question. so/RB/so /,/, the/DT/the corresponding/NN/corresponding decision/NN/decision question/NN/question is/VBZ/is the/DT/the following/NNP/following. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the question/NN/question is/VBZ/is t/VBN/t composite/JJ/composite which/WDT/which means/VBZ/means can/MD/can t/VB/t be/VB/be written/VBN/written as/IN/as t/NN/t 1/CD/1 times/NNS/times t/NN/t 2/CD/2 where/WRB/where t/JJ/t 1/CD/1 is/VBZ/is not/RB/not 1/CD/1 and/CC/and t/NN/t 2/CD/2 is/VBZ/is not/RB/not 1/CD/1. so/RB/so /,/, these/DT/these two/CD/two are/VBP/are non/JJ/non trivial/JJ/trivial factors/NNS/factors of/IN/of t/NNP/t. so/RB/so /,/, let/VB/let us/PRP/us play/VB/play the/DT/the same/JJ/same prover/NN/prover verifier/NN/verifier game/NNP/game. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the prover/NN/prover whom/WP/whom i/PRP/i will/MD/will say/VB/say p/NN/p here/RB/here is/VBZ/is the/DT/the verifier/NN/verifier v/CC/v. so/RB/so /,/, p/NN/p says/VBZ/says t/NN/t is/VBZ/is composite/JJ/composite /,/, now/RB/now v/VBP/v asks/NNS/asks why/WRB/why /,/, now/RB/now t/VBP/t has/VBZ/has to/TO/to convince/NN/convince v/NN/v that/WDT/that in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is composite/NNP/composite. so/RB/so /,/, prover/IN/prover sends/NNS/sends t/VBP/t 1/CD/1 and/CC/and t/NN/t 2/CD/2 across/NNP/across. so/RB/so once/RB/once /,/, he/PRP/he sends/VBZ/sends t/NN/t 1/CD/1 and/CC/and t/NN/t 2/CD/2 across/IN/across vmultiplies/NNS/vmultiplies t/VBP/t 1/CD/1 and/CC/and t/NN/t 2/CD/2 and/CC/and checks/NNS/checks the/DT/the result/NN/result with/IN/with t/NNP/t. if/IN/if its/PRP$/its equal/JJ/equal to/TO/to t/VB/t of/IN/of course/NN/course /,/, he/PRP/he is/VBZ/is convinced/VBN/convinced that/IN/that t/NN/t is/VBZ/is composite/NNP/composite. and/CC/and in/IN/in fact/NN/fact /,/, t/NN/t 1/CD/1 and/CC/and t/NN/t 2/CD/2 are/VBP/are two/CD/two factors/NNS/factors go/VBP/go back/RB/back and/CC/and look/VB/look at/IN/at this/DT/this hamiltonian/JJ/hamiltonian problem/NN/problem again/NNP/again. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/DT/this again/NN/again /,/, now/RB/now if/IN/if the/DT/the answer/NN/answer was/VBD/was yes/NNS/yes it/PRP/it does/VBZ/does have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle which/WDT/which means/VBZ/means the/DT/the prover/NN/prover says/VBZ/says it/PRP/it has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle then/RB/then the/DT/the prover/NN/prover could/MD/could convince/VB/convince the/DT/the verifier/NN/verifier that/IN/that the/DT/the graph/NN/graph does/VBZ/does have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, what/WP/what if/IN/if the/DT/the prover/NN/prover says/VBZ/says no/DT/no it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, usually/RB/usually he/PRP/he says/VBZ/says yes/NNS/yes this/DT/this guy/NN/guy asks/VBZ/asks why/WRB/why /,/, so/RB/so he/PRP/he sends/VBZ/sends edges/NNS/edges in/IN/in hc/NN/hc and/CC/and this/DT/this guy/NN/guy verifies/NNP/verifies. now/RB/now supposing/VBG/supposing /,/, he/PRP/he says/VBZ/says no/DT/no /,/, it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. now/RB/now the/DT/the verifier/NN/verifier asks/VBZ/asks why/WRB/why and/CC/and well/RB/well what/WP/what does/VBZ/does the/DT/the prover/NN/prover do/VBP/do could/MD/could he/VB/he convince/NN/convince /,/, how/WRB/how could/MD/could he/PRP/he convince/VB/convince the/DT/the verifier/NN/verifier the/DT/the given/VBN/given graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. now/RB/now /,/, think/VBP/think about/IN/about this/DT/this for/IN/for a/DT/a little/RB/little /,/, while/IN/while you/PRP/you see/VBP/see that/IN/that it/PRP/it is/VBZ/is a/DT/a difficult/JJ/difficult question/NN/question to/TO/to answer/VB/answer /,/, how/WRB/how could/MD/could he/PRP/he convince/VB/convince somebody/NN/somebody that/WDT/that this/DT/this graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. well/RB/well the/DT/the only/JJ/only way/NN/way seems/VBZ/seems to/TO/to be/VB/be you/PRP/you just/RB/just try/VBP/try all/DT/all possible/JJ/possible subsets/NNS/subsets of/IN/of edges/NNS/edges whether/IN/whether they/PRP/they form/VBP/form a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle or/CC/or not/NNP/not. if/IN/if known/VBN/known of/IN/of them/PRP/them form/NN/form then/RB/then it/PRP/it does/VBZ/does not/RB/not have/VB/have /,/, but/CC/but this/DT/this is/VBZ/is a/DT/a brute/NN/brute force/NN/force method/NNP/method. and/CC/and the/DT/the verifier/NN/verifier does/VBZ/does not/RB/not have/VB/have so/RB/so much/RB/much time/VB/time he/PRP/he does/VBZ/does not/RB/not have/NNP/have. so/RB/so /,/, much/RB/much time/NN/time to/TO/to check/VB/check all/DT/all possible/JJ/possible subsets/NNS/subsets of/IN/of edges/NNP/edges. so/RB/so /,/, there/EX/there is/VBZ/is no/DT/no easy/JJ/easy way/NN/way for/IN/for the/DT/the prover/NN/prover to/TO/to sort/VB/sort of/IN/of convince/NN/convince the/DT/the verifier/NN/verifier that/IN/that g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, it/PRP/it looks/VBZ/looks like/IN/like the/DT/the answer/NN/answer to/TO/to the/DT/the question/NN/question /,/, whether/IN/whether it/PRP/it is/VBZ/is yes/VBZ/yes or/CC/or no/NNP/no. if/IN/if it/PRP/it is/VBZ/is yes/VBZ/yes the/DT/the prover/NN/prover can/MD/can convince/VB/convince the/DT/the verifier/NN/verifier if/IN/if it/PRP/it is/VBZ/is not/RB/not the/DT/the prover/NN/prover is/VBZ/is not/RB/not able/JJ/able to/TO/to convince/NN/convince the/DT/the verifier/NNP/verifier. so/RB/so /,/, they/PRP/they behave/VBP/behave sort/NN/sort of/IN/of differently/NNP/differently. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 28/CD/28 np/-NONE-/np- completeness/NN/completeness ?/./? 111/CD/111 we/PRP/we are/VBP/are ready/RB/ready to/TO/to define/VB/define the/DT/the class/NN/class np/NNP/np. we/PRP/we will/MD/will first/RB/first do/VB/do this/DT/this using/VBG/using an/DT/an example/NNP/example. so/RB/so /,/, the/DT/the example/NN/example we/PRP/we will/MD/will pick/VB/pick a/DT/a problem/NN/problem /,/, the/DT/the problem/NN/problem we/PRP/we pick/VBP/pick is/VBZ/is hc/NNP/hc. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 00/CD/00 /:/: 57/CD/57 /CD/) the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g and/CC/and the/DT/the question/NN/question is/VBZ/is does/VBZ/does g/NN/g have/VBP/have the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the question/NNP/question. now/RB/now /,/, forget/NN/forget algorithms/NNS/algorithms for/IN/for the/DT/the time/NN/time being/NNP/being. so/RB/so /,/, we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to discuss/VB/discuss algorithms/NNS/algorithms /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is discuss/VB/discuss a/DT/a game/NN/game between/IN/between two/CD/two players/NNP/players. there/RB/there are/VBP/are two/CD/two players/NNP/players. we/PRP/we will/MD/will call/VB/call them/PRP/them prover/JJR/prover and/CC/and the/DT/the verifier/NN/verifier /,/, we/PRP/we will/MD/will see/VB/see /,/, why/WRB/why they/PRP/they are/VBP/are called/VBN/called prover/RB/prover and/CC/and verifier/JJR/verifier very/RB/very shortly/NNP/shortly. this/DT/this prover/NN/prover think/VBP/think of/IN/of them/PRP/them as/IN/as all/DT/all powerful/JJ/powerful /,/, he/PRP/he knows/VBZ/knows all/DT/all answers/NNS/answers that/WDT/that he/PRP/he supposed/VBD/supposed to/TO/to and/CC/and even/RB/even answers/NNS/answers is/VBZ/is not/RB/not supposed/VBN/supposed to/-NONE-/to. and/CC/and the/DT/the verifier/NN/verifier has/VBZ/has limited/VBN/limited resources/NNP/resources. in/IN/in particular/JJ/particular /,/, he/PRP/he does/VBZ/does not/RB/not have/VB/have too/RB/too much/RB/much time/VB/time /,/, limited/VBN/limited resources/NNS/resources or/CC/or this/DT/this includes/VBZ/includes time/NNP/time. now/RB/now /,/, the/DT/the prover/NN/prover and/CC/and the/DT/the verifier/NN/verifier meet/NNP/meet. so/RB/so /,/, they/PRP/they are/VBP/are sitting/VBG/sitting in/IN/in a/DT/a room/NN/room and/CC/and they/PRP/they see/VBP/see a/DT/a graph/NN/graph in/IN/in front/NN/front of/IN/of it/NNP/it. now/RB/now /,/, the/DT/the prover/NN/prover looks/VBZ/looks at/IN/at the/DT/the graph/NN/graph and/CC/and says/VBZ/says this/DT/this graph/NN/graph is/VBZ/is a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. the/DT/the verifier/NN/verifier /,/, who/WP/who is/VBZ/is bid/VBN/bid trustful/JJ/trustful of/IN/of the/DT/the prover/NN/prover /,/, asks/VBZ/asks him/PRP/him why/WRB/why /,/, why/WRB/why does/VBZ/does the/DT/the graph/NN/graph have/VBP/have this/NNP/this. now/RB/now /,/, the/DT/the prover/NN/prover can/MD/can convince/VB/convince the/DT/the verifier/NN/verifier that/IN/that the/DT/the graph/NN/graph does/VBZ/does have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle very/RB/very easy/JJ/easy /,/, how/WRB/how does/VBZ/does he/PRP/he do/VBP/do it/NNP/it. he/PRP/he just/RB/just gives/VBZ/gives the/DT/the edges/NNS/edges in/IN/in the/DT/the graph/NN/graph /,/, in/IN/in the/DT/the form/NN/form of/IN/of a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, he/PRP/he picks/VBZ/picks any/DT/any hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in this/DT/this cycle/NN/cycle and/CC/and he/PRP/he tells/VBZ/tells he/PRP/he tells/VBZ/tells the/DT/the verifier/NN/verifier /,/, look/NN/look at/IN/at these/DT/these edges/NNS/edges /,/, these/DT/these edges/NNS/edges in/IN/in the/DT/the graph/NN/graph form/NN/form a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. the/DT/the verifier/NN/verifier /,/, even/RB/even though/IN/though is/VBZ/is sort/NN/sort of/IN/of limited/JJ/limited in/IN/in resources/NNS/resources this/DT/this much/JJ/much he/PRP/he can/MD/can do/VB/do /,/, given/VBN/given a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in a/DT/a graph/NN/graph you/PRP/you can/MD/can verify/VB/verify that/IN/that these/DT/these edges/NNP/edges. in/IN/in fact/NN/fact /,/, do/VBP/do form/NN/form a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just write/VBP/write this/DT/this conversation/NN/conversation between/IN/between the/DT/the prover/NN/prover and/CC/and the/DT/the verifier/NNP/verifier. so/RB/so /,/, the/DT/the prover/NN/prover says/VBZ/says yes/NNP/yes. so/RB/so /,/, this/DT/this yes/NNS/yes is/VBZ/is an/DT/an answer/NN/answer to/TO/to this/DT/this question/NN/question above/IN/above /,/, yes/NNS/yes here/RB/here is/VBZ/is an/DT/an answer/NN/answer to/TO/to the/DT/the question/NNP/question. does/VBZ/does g/NN/g have/VBP/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle the/DT/the prover/NN/prover says/VBZ/says yes/NNS/yes /,/, the/DT/the graph/NN/graph has/VBZ/has hamiltonian/JJ/hamiltonian cycle/NN/cycle or/CC/or there/EX/there is/VBZ/is an/DT/an input/NN/input graph/NN/graph that/WDT/that both/DT/both of/IN/of these/DT/these are/VBP/are looking/VBG/looking at/IN/at both/DT/both the/DT/the prover/NN/prover and/CC/and the/DT/the verifier/NN/verifier are/VBP/are looking/VBG/looking at/IN/at the/DT/the prover/NN/prover says/VBZ/says yes/NNS/yes /,/, the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. the/DT/the verifier/NN/verifier then/RB/then asks/VBZ/asks why/NNP/why. and/CC/and the/DT/the prover/NN/prover supplies/VBZ/supplies edges/NNS/edges in/IN/in some/DT/some hc/NN/hc in/IN/in g/NNP/g. and/CC/and the/DT/the verifier/NN/verifier verifies/NNS/verifies that/WDT/that these/DT/these edges/NNS/edges indeed/RB/indeed /,/, form/NN/form hamiltonian/NN/hamiltonian cycle/NNP/cycle. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the conversation/NNP/conversation. let/NN/let us/PRP/us go/VBP/go over/IN/over it/PRP/it again/RB/again /,/, the/DT/the prover/NN/prover says/VBZ/says yes/NNS/yes to/TO/to this/DT/this question/NN/question and/CC/and to/TO/to supplement/VB/supplement this/DT/this statement/NN/statement /,/, he/PRP/he supplies/VBZ/supplies the/DT/the edges/NNS/edges in/IN/in some/DT/some hamiltonian/JJ/hamiltonian cycle/NN/cycle in/IN/in g/NNP/g. and/CC/and the/DT/the verifier/NN/verifier looks/VBZ/looks at/IN/at these/DT/these edges/NNS/edges in/IN/in the/DT/the hamiltonian/JJ/hamiltonian cycle/NNP/cycle. and/CC/and it/PRP/it is/VBZ/is easy/JJ/easy for/IN/for him/PRP/him to/TO/to verify/VB/verify /,/, now/RB/now that/IN/that these/DT/these edges/NNS/edges indeed/RB/indeed do/VBP/do form/NN/form a/DT/a cycle/NNP/cycle. this/DT/this is/VBZ/is a/DT/a game/NN/game that/WDT/that we/PRP/we will/MD/will sort/VB/sort of/IN/of consider/NN/consider and/CC/and in/IN/in some/DT/some ways/NNS/ways /,/, we/PRP/we have/VBP/have already/RB/already proved/NNP/proved. i/PRP/i have/VBP/have not/RB/not defined/VBN/defined what/WP/what a/DT/a np/NN/np is/NNP/is. but/CC/but /,/, we/PRP/we have/VBP/have actually/RB/actually proved/VBN/proved that/IN/that the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle problem/NN/problem is/VBZ/is in/IN/in the/DT/the class/NN/class np/NNP/np. so/RB/so /,/, let/VB/let us/PRP/us formally/RB/formally define/VBP/define the/DT/the class/NN/class np/NNP/np. and/CC/and then/RB/then we/PRP/we will/MD/will see/VB/see /,/, why/WRB/why this/DT/this constitutes/VBZ/constitutes a/DT/a proof/NN/proof that/WDT/that hamiltonian/JJ/hamiltonian cycle/NN/cycle is/VBZ/is in/IN/in it/NNP/it. so/RB/so /,/, hamiltonian/JJ/hamiltonian cycle/NN/cycle problem/NN/problem is/VBZ/is of/IN/of course/NN/course /,/, a/DT/a decision/NN/decision problem/NNP/problem. the/DT/the question/NN/question we/PRP/we ask/VBP/ask is/VBZ/is does/VBZ/does there/RB/there exist/VB/exist a/DT/a hamiltonian/JJ/hamiltonian cycle/NN/cycle or/CC/or not/RB/not it/PRP/it is/VBZ/is to/TO/to be/VB/be answered/VBN/answered yes/NNS/yes or/CC/or no/NNP/no. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a decision/NN/decision problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 15/CD/15 /CD/) so/IN/so /,/, a/DT/a decision/NN/decision problem/NN/problem here/RB/here is/VBZ/is the/DT/the definition/NN/definition /,/, a/DT/a decision/NN/decision problem/NN/problem is/VBZ/is said/VBN/said to/TO/to be/VB/be in/IN/in the/DT/the class/NN/class np/NN/np /,/, if/IN/if for/IN/for all/PDT/all yes/NNS/yes inputs/NNP/inputs. let/VB/let me/PRP/me write/VB/write this/DT/this down/NN/down then/RB/then i/PRP/i will/MD/will explain/VB/explain what/WP/what this/DT/this means/NNP/means. if/IN/if for/IN/for all/PDT/all yes/NNS/yes inputs/NNS/inputs /,/, there/EX/there is/VBZ/is a/DT/a proof/NN/proof /,/, you/PRP/you can/MD/can think/VB/think of/IN/of this/DT/this as/IN/as an/DT/an advice/NN/advice or/CC/or a/DT/a string/NNP/string. so/RB/so /,/, this/DT/this is/VBZ/is /,/, think/VBP/think of/IN/of this/DT/this as/IN/as a/DT/a string/NN/string the/DT/the prover/NN/prover gives/VBZ/gives to/TO/to the/DT/the verifier/NNP/verifier. so/RB/so /,/, this/DT/this advice/NN/advice is/VBZ/is what/WP/what the/DT/the prover/NN/prover will/MD/will give/VB/give to/TO/to the/DT/the verifier/NNP/verifier. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a proof/NN/proof using/VBG/using which/WDT/which /,/, it/PRP/it can/MD/can be/VB/be verified/VBN/verified quickly/RB/quickly where/WRB/where /,/, the/DT/the input/NN/input is/VBZ/is indeed/VBN/indeed a/DT/a yes/NNS/yes input/NNP/input. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now /,/, look/VBP/look at/IN/at this/NNP/this. so/RB/so /,/, there/EX/there are/VBP/are some/DT/some terms/NNS/terms that/WDT/that i/PRP/i need/VBP/need to/TO/to describe/NNP/describe. so/RB/so /,/, first/JJ/first thing/NN/thing is/VBZ/is what/WP/what is/VBZ/is this/DT/this yes/VBZ/yes input/NN/input /,/, what/WP/what is/VBZ/is quickly/RB/quickly and/CC/and then/RB/then what/WP/what does/VBZ/does the/DT/the statement/NN/statement mean/NN/mean /,/, let/VB/let us/PRP/us focus/VB/focus on/IN/on the/DT/the yes/NNS/yes input/NNP/input. see/VBP/see this/DT/this problem/NN/problem is/VBZ/is a/DT/a decision/NN/decision problem/NN/problem /,/, since/IN/since it/PRP/it is/VBZ/is a/DT/a decision/NN/decision problem/NN/problem for/IN/for each/DT/each input/NN/input the/DT/the answer/NN/answer is/VBZ/is either/DT/either yes/NNS/yes or/CC/or no/DT/no right/NNP/right. so/RB/so /,/, yes/NNS/yes input/VBD/input are/VBP/are those/DT/those inputs/NNS/inputs /,/, for/IN/for which/WDT/which the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. so/RB/so /,/, we/PRP/we look/VBP/look at/IN/at only/RB/only those/DT/those inputs/NNS/inputs /,/, for/IN/for which/WDT/which the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes and/CC/and we/PRP/we say/VBP/say that/IN/that for/IN/for these/DT/these inputs/NNS/inputs /,/, i/PRP/i do/VBP/do not/RB/not worry/VB/worry about/IN/about what/WP/what happened/VBN/happened to/TO/to the/DT/the no/DT/no inputs/NNP/inputs. for/IN/for the/DT/the yes/NNS/yes inputs/VBZ/inputs there/RB/there is/VBZ/is a/DT/a proof/NN/proof /,/, this/DT/this is/VBZ/is a/DT/a proof/NN/proof that/WDT/that the/DT/the prover/NN/prover gives/VBZ/gives the/DT/the verifier/NN/verifier /,/, so/RB/so /,/, this/DT/this is/VBZ/is proof/NNP/proof. so/RB/so /,/, yes/NNS/yes input/VBD/input /,/, yes/NNS/yes inputs/NNS/inputs are/VBP/are inputs/NNS/inputs for/IN/for which/WDT/which /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes /,/, this/DT/this is/VBZ/is 1/CD/1. the/DT/the proof/NN/proof is/VBZ/is what/WP/what the/DT/the prover/NN/prover sends/NNS/sends to/TO/to the/DT/the verifier/NN/verifier and/CC/and quickly/RB/quickly in/IN/in time/NN/time polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NNP/size. so/RB/so /,/, i/PRP/i could/MD/could have/VB/have said/VBN/said efficiently/RB/efficiently /,/, i/PRP/i guess/VBP/guess that/IN/that is/VBZ/is what/WP/what i/PRP/i have/VBP/have been/VBN/been using/NNP/using. but/CC/but /,/, quickly/RB/quickly efficiently/RB/efficiently they/PRP/they all/DT/all mean/JJ/mean the/DT/the same/JJ/same thing/NN/thing /,/, which/WDT/which is/VBZ/is that/IN/that /,/, it/PRP/it can/MD/can be/VB/be verified/VBN/verified in/IN/in time/NN/time polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input side/NNP/side. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just /,/, let/VB/let go/RB/go again/RB/again this/DT/this definition/NN/definition again/RB/again /,/, since/IN/since it/PRP/it is/VBZ/is sort/NN/sort of/IN/of important/NNP/important. so/RB/so /,/, let/VB/let us/PRP/us move/VB/move over/IN/over definition/NN/definition again/NNP/again. a/DT/a decision/NN/decision problem/NN/problem is/VBZ/is said/VBN/said to/TO/to be/VB/be in/IN/in np/NNP/np. if/IN/if for/IN/for all/PDT/all yes/NNS/yes inputs/NNS/inputs /,/, there/EX/there is/VBZ/is a/DT/a proof/NN/proof /,/, there/EX/there is/VBZ/is a/DT/a proof/NN/proof using/VBG/using /,/, which/WDT/which it/PRP/it can/MD/can be/VB/be verified/VBN/verified that/IN/that the/DT/the input/NN/input is/VBZ/is indeed/VBN/indeed a/DT/a yes/NNP/yes. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at our/PRP$/our previous/JJ/previous example/NN/example for/IN/for hamiltonian/NN/hamiltonian circuit/NNP/circuit. /NNP/( refer/NN/refer time/NN/time /:/: 10/CD/10 /:/: 57/CD/57 /CD/) if/IN/if for/IN/for all/PDT/all yes/NNS/yes inputs/NNS/inputs for/IN/for a/DT/a yes/NNS/yes input/VBN/input /,/, this/DT/this means/VBZ/means /,/, if/IN/if the/DT/the graph/NN/graph does/VBZ/does have/VB/have a/DT/a hamiltonian/JJ/hamiltonian cycle/NNP/cycle. there/RB/there is/VBZ/is a/DT/a proof/NN/proof that/WDT/that the/DT/the prover/NN/prover can/MD/can give/VB/give the/DT/the verifier/NN/verifier using/VBG/using /,/, which/WDT/which this/DT/this proof/NN/proof consists/VBZ/consists of/IN/of edges/NNS/edges in/IN/in some/DT/some hamiltonian/JJ/hamiltonian cycle/NNP/cycle. and/CC/and using/VBG/using this/DT/this verifier/NN/verifier can/MD/can easily/RB/easily verify/VB/verify /,/, in/IN/in polynomial/JJ/polynomial time/NN/time whether/IN/whether the/DT/the graph/NN/graph has/VBZ/has hamiltonian/JJ/hamiltonian circuit/NN/circuit or/CC/or not/NNP/not. so/RB/so /,/, this/DT/this actually/RB/actually proves/VBZ/proves that/IN/that hamiltonian/JJ/hamiltonian circuit/NN/circuit the/DT/the problem/NN/problem hamiltonian/NN/hamiltonian circuit/NN/circuit is/VBZ/is in/IN/in the/DT/the class/NN/class np/NNP/np. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 41/CD/41 /CD/) so/RB/so /,/, let/VB/let me/PRP/me highlight/MD/highlight the/DT/the main/JJ/main sort/NN/sort of/IN/of points/NNS/points in/IN/in the/DT/the definition/NNP/definition. then/RB/then we/PRP/we will/MD/will go/VB/go over/IN/over this/DT/this again/NNP/again. so/RB/so /,/, first/JJ/first it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a decision/NN/decision problem/NNP/problem. so/RB/so /,/, answer/NN/answer has/VBZ/has to/TO/to be/VB/be yes/NNS/yes or/CC/or no/NNP/no. we/PRP/we /,/, look/VBP/look at/IN/at only/RB/only yes/VBZ/yes inputs/NNS/inputs and/CC/and on/IN/on yes/NNS/yes inputs/NNS/inputs supply/RB/supply a/DT/a proof/NNP/proof. this/DT/this proof/NN/proof will/MD/will help/VB/help the/DT/the verifier/JJR/verifier verify/NN/verify that/IN/that it/PRP/it is/VBZ/is a/DT/a yes/NNS/yes input/VBN/input /,/, which/WDT/which helps/NNS/helps verification/NNP/verification. and/CC/and this/DT/this verification/NN/verification has/VBZ/has to/TO/to be/VB/be in/IN/in polynomial/JJ/polynomial time/NNP/time. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the initial/JJ/initial things/NNS/things /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be a/DT/a decision/NN/decision problem/NN/problem /,/, we/PRP/we only/RB/only look/VBP/look at/IN/at yes/NNS/yes inputs/NNP/inputs. it/PRP/it is/VBZ/is only/RB/only for/IN/for yes/NNS/yes inputs/NNS/inputs that/WDT/that the/DT/the prover/NN/prover has/VBZ/has to/TO/to convince/NN/convince the/DT/the verifier/NN/verifier and/CC/and to/TO/to convince/VB/convince he/PRP/he can/MD/can give/VB/give a/DT/a proof/NN/proof /,/, which/WDT/which can/MD/can help/VB/help the/DT/the verification/NNP/verification. so/RB/so /,/, here/RB/here is/VBZ/is let/VBN/let me/PRP/me sort/NN/sort of/IN/of draw/NN/draw this/DT/this diagrammatically/NNP/diagrammatically. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the yes/NNS/yes input/NNP/input. so/RB/so /,/, you/PRP/you pick/VBP/pick any/DT/any one/CD/one of/IN/of the/DT/the yes/NNS/yes inputs/NNP/inputs. the/DT/the prover/NN/prover is/VBZ/is looking/VBG/looking at/IN/at this/DT/this /,/, shows/VBZ/shows the/DT/the verifier/NNP/verifier. and/CC/and the/DT/the prover/NN/prover sends/NNS/sends the/DT/the proof/NN/proof or/CC/or an/DT/an advice/NN/advice /,/, sometimes/RB/sometimes called/VBN/called an/DT/an advice/NN/advice /:/( refer/NN/refer time/NN/time /:/: 13/CD/13 /:/: 28/CD/28 /CD/) some/DT/some string/NN/string think/VBP/think of/IN/of zeroes/NNS/zeroes and/CC/and ones/NNS/ones /,/, whichever/RB/whichever way/NN/way the/DT/the verifier/NN/verifier looks/VBZ/looks at/IN/at the/DT/the string/NN/string and/CC/and sort/NN/sort of/IN/of figures/NNS/figures out/IN/out /,/, what/WP/what the/DT/the prover/NN/prover means/NNP/means. so/RB/so on/IN/on yes/NNS/yes inputs/NNS/inputs /,/, the/DT/the prover/NN/prover can/MD/can send/VB/send some/DT/some proof/JJ/proof to/TO/to the/DT/the verifier/NN/verifier using/VBG/using /,/, which/WDT/which the/DT/the verifier/JJR/verifier in/IN/in polynomial/JJ/polynomial time/NN/time can/MD/can verify/VB/verify that/NNP/that. in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is a/DT/a yes/NNS/yes input/NNP/input. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do one/CD/one more/RBR/more example/NNP/example. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 14/CD/14 /:/: 06/CD/06 /CD/) this/DT/this example/NN/example is/VBZ/is a/DT/a composites/NNS/composites /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a positive/JJ/positive integer/NN/integer l/NN/l /,/, the/DT/the question/NN/question is/VBZ/is l/NN/l composite/JJ/composite /,/, it/PRP/it is/VBZ/is the/DT/the question/NNP/question. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to know/VB/know whether/IN/whether composites/NNS/composites this/DT/this problem/NN/problem composites/VBZ/composites is/VBZ/is np/NN/np or/CC/or not/NNP/not. first/JJ/first thing/NN/thing /,/, it/PRP/it is/VBZ/is a/DT/a decision/NN/decision problem/NNP/problem. so/RB/so /,/, we/PRP/we can/MD/can it/PRP/it is/VBZ/is a/DT/a problem/NN/problem that/WDT/that we/PRP/we can/MD/can look/VB/look at/IN/at /,/, which/WDT/which could/MD/could be/NNP/be. in/IN/in the/DT/the first/JJ/first thing/NN/thing it/PRP/it has/VBZ/has to/TO/to satisfy/VB/satisfy that/IN/that the/DT/the first/JJ/first property/NN/property it/PRP/it has/VBZ/has to/TO/to satisfy/VB/satisfy is/VBZ/is that/IN/that it/PRP/it must/MD/must be/VB/be a/DT/a decision/NN/decision problem/NN/problem which/WDT/which it/PRP/it is/NNP/is. the/DT/the question/NN/question asked/VBD/asked is/VBZ/is l/NN/l is/VBZ/is composite/JJ/composite and/CC/and the/DT/the answer/NN/answer is/VBZ/is either/DT/either yes/NNS/yes or/CC/or no/NNP/no. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the next/JJ/next thing/NN/thing for/IN/for all/DT/all yes/NNS/yes inputs/NNS/inputs /,/, there/EX/there must/MD/must be/VB/be some/DT/some way/NN/way for/IN/for the/DT/the prover/NN/prover to/TO/to convince/VB/convince the/DT/the verifier/NN/verifier that/NNP/that. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is composite/NNP/composite. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just do/VBP/do this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are looking/VBG/looking at/IN/at yes/NNS/yes inputs/NNS/inputs which/WDT/which means/VBZ/means /,/, l/NN/l is/VBZ/is composite/NNP/composite. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover can/MD/can give/VB/give verifier/NNP/verifier. so/RB/so /,/, well/RB/well i/PRP/i guess/VBP/guess /,/, it/PRP/it must/MD/must be/VB/be sort/NN/sort of/IN/of obvious/JJ/obvious by/IN/by now/RB/now /,/, that/IN/that if/IN/if you/PRP/you /,/, now/RB/now if/IN/if you/PRP/you know/VBP/know that/IN/that something/NN/something is/VBZ/is composite/NNP/composite. and/CC/and you/PRP/you want/VBP/want to/TO/to convince/NN/convince somebody/NN/somebody that/WDT/that it/PRP/it is/VBZ/is composite/JJ/composite /,/, you/PRP/you can/MD/can just/RB/just give/VB/give the/DT/the two/CD/two factors/NNP/factors. so/RB/so /,/, you/PRP/you give/NNP/give. so/RB/so /,/, the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover supplies/VBZ/supplies to/TO/to the/DT/the verifier/NN/verifier is/VBZ/is a/DT/a factorization/NNP/factorization. so/RB/so /,/, he/PRP/he gives/VBZ/gives let/VB/let us/PRP/us say/VB/say l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the factorization/NN/factorization of/IN/of l/NNP/l. so/RB/so /,/, the/DT/the verifier/NN/verifier checks/NNS/checks that/WDT/that indeed/RB/indeed l/VBP/l equals/NNS/equals l/NN/l 1/CD/1 times/NNS/times l/NN/l 2/CD/2 and/CC/and neither/DT/neither of/IN/of these/DT/these is/VBZ/is 1/CD/1. okay/NN/okay l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 can/MD/can not/RB/not be/VB/be 1/CD/1. so/RB/so /,/, this/DT/this proves/NNS/proves that/IN/that this/DT/this is/VBZ/is the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover can/MD/can give/VB/give to/TO/to the/DT/the verifier/NN/verifier /,/, to/TO/to convince/VB/convince him/PRP/him at/IN/at some/DT/some number/NN/number is/VBZ/is composite/NNP/composite. so/RB/so /,/, one/CD/one question/NN/question i/PRP/i guess/VBP/guess which/WDT/which most/JJS/most people/NNS/people sort/NN/sort of/IN/of encounter/NN/encounter when/WRB/when this/DT/this definition/NN/definition is/VBZ/is made/NNP/made. you/PRP/you know/VBP/know /,/, you/PRP/you focus/VBZ/focus only/RB/only on/IN/on the/DT/the yes/NNS/yes inputs/VBZ/inputs what/WP/what about/IN/about the/DT/the no/DT/no input/NNP/input. so/RB/so /,/, take/VB/take composites/NNS/composites for/IN/for the/DT/the time/NN/time being/NNP/being. input/NN/input is/VBZ/is a/DT/a positive/JJ/positive integer/NN/integer l/NN/l /,/, question/NN/question is/VBZ/is l/NN/l composite/JJ/composite let/NN/let us/PRP/us say/VBP/say the/DT/the answer/NN/answer is/VBZ/is no/DT/no /,/, the/DT/the prover/NN/prover says/VBZ/says no/DT/no it/PRP/it is/VBZ/is not/RB/not composite/NNP/composite. now/RB/now /,/, how/WRB/how can/MD/can he/PRP/he convince/VB/convince the/DT/the verifier/NN/verifier that/IN/that it/PRP/it is/VBZ/is not/RB/not composite/JJ/composite /,/, which/WDT/which means/VBZ/means you/PRP/you have/VBP/have to/TO/to somehow/VB/somehow convince/NN/convince the/DT/the verifier/NN/verifier that/IN/that it/PRP/it is/VBZ/is prime/JJ/prime /,/, you/PRP/you know/VBP/know the/DT/the only/JJ/only sort/NN/sort of/IN/of numbers/NNS/numbers between/IN/between 1/CD/1 and/CC/and the/DT/the number/NN/number that/IN/that divides/NNS/divides it/PRP/it are/VBP/are 1/CD/1 and/CC/and the/DT/the number/NN/number itself/PRP/itself /,/, nothing/NN/nothing else/RB/else in/IN/in between/NNP/between. well/RB/well /,/, to/TO/to think/VB/think about/IN/about it/PRP/it /,/, this/DT/this is/VBZ/is not/RB/not this/DT/this does/VBZ/does not/RB/not seem/VB/seem to/TO/to be/VB/be as/RB/as easy/NNP/easy. actually/RB/actually /,/, in/IN/in this/DT/this case/NN/case there/RB/there is/VBZ/is a/DT/a way/NN/way to/TO/to do/VB/do it/NNP/it. but/CC/but /,/, ways/NNS/ways to/TO/to do/VB/do it/PRP/it is/VBZ/is certainly/RB/certainly not/RB/not easy/JJ/easy /,/, there/EX/there is/VBZ/is a/DT/a recent/JJ/recent research/NN/research /,/, which/WDT/which says/VBZ/says even/RB/even without/IN/without an/DT/an advice/NN/advice /,/, one/CD/one can/MD/can figure/VB/figure out/RP/out whether/IN/whether a/DT/a number/NN/number is/VBZ/is prime/NNP/prime. but/CC/but /,/, that/IN/that is/VBZ/is way/NN/way beyond/IN/beyond the/DT/the syllabus/NN/syllabus /,/, for/IN/for this/DT/this course/NNP/course. so/RB/so /,/, let/VB/let us/PRP/us again/RB/again do/VBP/do this/DT/this for/IN/for the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle problem/NN/problem also/RB/also /,/, just/RB/just to/TO/to get/VB/get the/DT/the hang/NN/hang of/IN/of this/DT/this here/RB/here /,/, now/RB/now /:/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 26/CD/26 /CD/) when/WRB/when the/DT/the answer/NN/answer was/VBD/was yes/NNP/yes. yes/NNS/yes the/DT/the graph/NN/graph has/VBZ/has a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit ;/:/; this/DT/this proof/NN/proof can/MD/can be/VB/be supplied/VBN/supplied right/RB/right edges/VBZ/edges having/VBG/having hamiltonian/JJ/hamiltonian circuit/NN/circuit in/IN/in this/NNP/this. supposing/NN/supposing the/DT/the prover/NN/prover had/VBD/had said/VBN/said no/DT/no /,/, if/IN/if we/PRP/we look/VBP/look at/IN/at the/DT/the no/DT/no inputs/NNP/inputs. how/WRB/how can/MD/can a/DT/a prover/NN/prover /,/, how/WRB/how can/MD/can you/PRP/you convince/VB/convince somebody/NN/somebody that/WDT/that graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian circuit/NNP/circuit. so/RB/so /,/, if/IN/if you/PRP/you think/VBP/think about/IN/about it/PRP/it for/IN/for a/DT/a while/NN/while /,/, you/PRP/you see/VBP/see that/IN/that this/DT/this is/VBZ/is actually/RB/actually a/DT/a very/RB/very difficult/JJ/difficult thing/NNP/thing. supposing/NN/supposing /,/, you/PRP/you say/VBP/say that/IN/that this/DT/this graph/NN/graph does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit by/IN/by some/DT/some way/NN/way or/CC/or method/NN/method whatever/NN/whatever /,/, you/PRP/you know/VBP/know this/NNP/this. how/WRB/how /,/, do/VBP/do you/PRP/you convince/VB/convince somebody/NN/somebody else/RB/else that/IN/that it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit /,/, seems/VBZ/seems to/TO/to be/VB/be extremely/RB/extremely difficult/JJ/difficult thing/NNP/thing. so/RB/so /,/, only/RB/only way/NN/way it/PRP/it looks/VBZ/looks like/IN/like is/VBZ/is the/DT/the other/JJ/other person/NN/person with/IN/with or/CC/or without/IN/without your/PRP$/your help/NN/help /,/, looks/VBZ/looks like/IN/like all/DT/all possible/JJ/possible collections/NNS/collections of/IN/of edges/NNP/edges. and/CC/and sees/VBZ/sees whether/IN/whether these/DT/these selection/NN/selection let/VBD/let us/PRP/us say/VBP/say /,/, all/DT/all edges/NNS/edges of/IN/of it/PRP/it take/VBP/take n/NN/n edges/NNS/edges where/WRB/where /,/, n/VBP/n is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. the/DT/the graph/NN/graph takes/VBZ/takes all/DT/all possible/JJ/possible subsets/NNS/subsets of/IN/of n/NN/n edges/NNS/edges and/CC/and check/NN/check whether/IN/whether they/PRP/they form/VBP/form a/DT/a hamiltonian/JJ/hamiltonian circuit/NN/circuit /,/, now/RB/now this/DT/this could/MD/could take/VB/take a/DT/a long/JJ/long time/NNP/time. the/DT/the time/NN/time taken/VBN/taken to/TO/to go/VB/go through/RP/through all/DT/all this/DT/this exhaustive/JJ/exhaustive technique/NN/technique is/VBZ/is certainly/RB/certainly not/RB/not may/MD/may /,/, certainly/RB/certainly not/RB/not be/VB/be polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input side/NNP/side. so/RB/so /,/, and/CC/and up/RP/up to/TO/to date/NN/date nobody/NN/nobody knows/VBZ/knows anything/NN/anything of/IN/of better/JJR/better /,/, so/RB/so for/IN/for at/IN/at least/JJS/least hc/NN/hc and/CC/and many/JJ/many of/IN/of the/DT/the problems/NNS/problems that/WDT/that we/PRP/we look/VBP/look at/NNP/at. it/PRP/it looks/VBZ/looks like/IN/like the/DT/the yes/NNS/yes input/VBD/input behaves/NNS/behaves differently/RB/differently from/IN/from the/DT/the no/DT/no input/NNP/input. when/WRB/when the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes /,/, there/EX/there is/VBZ/is an/DT/an easy/JJ/easy proof/NN/proof by/IN/by which/WDT/which you/PRP/you can/MD/can convince/VB/convince the/DT/the other/JJ/other person/NN/person that/IN/that it/PRP/it is/VBZ/is the/DT/the yes/NNS/yes input/NNP/input. the/DT/the no/DT/no input/NN/input seems/VBZ/seems to/TO/to behave/VB/behave very/RB/very differently/NNP/differently. for/IN/for the/DT/the class/NN/class np/NN/np /,/, all/DT/all that/DT/that we/PRP/we require/VBP/require is/VBZ/is that/IN/that when/WRB/when the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes /,/, there/EX/there should/MD/should be/VB/be an/DT/an easy/JJ/easy way/NN/way to/TO/to convince/NN/convince somebody/NN/somebody else/RB/else that/NNP/that. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is a/DT/a yes/NNS/yes input/NNP/input. so/RB/so /,/, how/WRB/how do/VBP/do you/PRP/you prove/VB/prove that/IN/that something/NN/something is/VBZ/is in/IN/in np/NN/np /,/, we/PRP/we have/VBP/have seen/VBN/seen two/CD/two examples/NNP/examples. but/CC/but /,/, let/VB/let us/PRP/us just/RB/just sort/NN/sort of/IN/of note/NN/note this/DT/this down/IN/down to/TO/to prove/VB/prove something/NN/something is/VBZ/is in/IN/in np/NN/np /,/, you/PRP/you need/VBP/need to/TO/to do/VB/do two/CD/two things/NNP/things. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 59/CD/59 /CD/) you/PRP/you have/VBP/have to/TO/to say/VB/say the/DT/the proof/NN/proof to/TO/to prove/VB/prove that/IN/that a/DT/a problem/NN/problem is/VBZ/is in/IN/in np/NN/np /,/, you/PRP/you have/VBP/have to/TO/to do/VB/do the/DT/the following/VBG/following things/NNP/things. you/PRP/you have/VBP/have to/TO/to say/VB/say /,/, the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover sends/NNS/sends to/TO/to the/DT/the verifier/NN/verifier and/CC/and then/RB/then how/WRB/how does/VBZ/does the/DT/the verifier/JJR/verifier check/NNP/check. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the two/CD/two things/NNS/things that/WDT/that you/PRP/you need/VBP/need to/TO/to send/VB/send /,/, this/DT/this proves/NNS/proves by/IN/by the/DT/the way/NN/way for/IN/for only/RB/only yes/VBZ/yes inputs/NNP/inputs. for/IN/for yes/NNS/yes inputs/NNS/inputs /,/, you/PRP/you must/MD/must say/VB/say what/WP/what is/VBZ/is the/DT/the proof/NN/proof given/VBN/given /,/, any/DT/any given/VBN/given yes/NNS/yes input/IN/input /,/, what/WP/what is/VBZ/is the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover sends/NNS/sends to/TO/to the/DT/the verifier/NNP/verifier. and/CC/and once/RB/once the/DT/the verifier/NN/verifier receives/VBZ/receives this/DT/this and/CC/and he/PRP/he looks/VBZ/looks at/IN/at the/DT/the input/NN/input /,/, the/DT/the verifier/NN/verifier should/MD/should you/PRP/you should/MD/should say/VB/say how/WRB/how the/DT/the verifier/NN/verifier checks/NNS/checks /,/, how/WRB/how the/DT/the verifier/NN/verifier is/VBZ/is convinced/VBN/convinced by/IN/by looking/NN/looking at/IN/at this/DT/this proof/NN/proof and/CC/and the/DT/the input/NN/input that/IN/that the/DT/the input/NN/input is/VBZ/is /,/, in/IN/in fact/NN/fact yes/NNS/yes inputs/NNP/inputs. and/CC/and for/IN/for the/DT/the hamiltonian/JJ/hamiltonian circuit/NN/circuit case/NN/case and/CC/and for/IN/for composites/NNS/composites /,/, for/IN/for the/DT/the problem/NN/problem composites/VBZ/composites we/PRP/we specified/VBN/specified both/-NONE-/both. in/IN/in the/DT/the composites/NNS/composites case/NN/case for/IN/for instance/NN/instance /,/, the/DT/the prover/NN/prover sends/NNS/sends the/DT/the factorization/NN/factorization and/CC/and the/DT/the verifier/NN/verifier just/RB/just multiplies/VBZ/multiplies two/CD/two of/IN/of them/PRP/them and/CC/and checks/NNS/checks whether/IN/whether equal/JJ/equal to/NNP/to. so/RB/so /,/, we/PRP/we have/VBP/have /,/, in/IN/in fact/NN/fact now/RB/now defined/VBN/defined a/DT/a class/NN/class np/NN/np we/PRP/we will/MD/will see/VB/see many/JJ/many other/JJ/other examples/NNP/examples. in/IN/in fact/NN/fact /,/, i/PRP/i would/MD/would encourage/VB/encourage you/PRP/you to/TO/to look/VB/look at/IN/at problems/NNS/problems you/PRP/you have/VBP/have previously/RB/previously come/VBN/come across/IN/across /,/, at/IN/at least/JJS/least the/DT/the decision/NN/decision problems/NNS/problems and/CC/and try/NN/try and/CC/and prove/VB/prove whether/IN/whether /,/, some/DT/some of/IN/of these/DT/these fit/JJ/fit into/IN/into the/DT/the class/NN/class np/NNP/np. so/RB/so /,/, one/CD/one importance/NN/importance of/IN/of this/DT/this class/NN/class np/NN/np is/VBZ/is why/WRB/why i/PRP/i define/VBP/define this/DT/this class/NN/class np/NN/np at/IN/at all/NNP/all. well/RB/well a/DT/a large/JJ/large number/NN/number of/IN/of problems/NNS/problems /,/, which/WDT/which occur/NN/occur in/IN/in real/JJ/real life/NN/life fall/NN/fall into/IN/into this/DT/this class/NN/class np/NN/np in/IN/in the/DT/the following/JJ/following sense/NNP/sense. i/PRP/i mean/VBP/mean /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at problems/NNS/problems in/IN/in real/JJ/real life/NN/life they/PRP/they /,/, most/RBS/most of/IN/of them/PRP/them you/PRP/you do/VBP/do not/RB/not want/VB/want problems/NNS/problems with/IN/with a/DT/a yes/NNS/yes no/DT/no answer/NN/answer /,/, the/DT/the answer/NN/answer is/VBZ/is usually/RB/usually many/JJ/many bits/NNP/bits. but/CC/but /,/, these/DT/these problems/NNS/problems can/MD/can be/VB/be transformed/VBN/transformed into/IN/into a/DT/a problem/NN/problem /,/, which/WDT/which is/VBZ/is not/RB/not much/JJ/much easier/NNP/easier. in/IN/in fact/NN/fact /,/, as/IN/as hard/JJ/hard as/IN/as the/DT/the original/JJ/original problem/NN/problem where/WRB/where /,/, the/DT/the answer/NN/answer is/VBZ/is one/CD/one bit/NNP/bit. and/CC/and when/WRB/when one/CD/one looks/NNS/looks at/IN/at these/DT/these versions/NNS/versions of/IN/of real/JJ/real life/NN/life /,/, very/RB/very often/RB/often they/PRP/they can/MD/can not/RB/not be/VB/be that/IN/that is/VBZ/is why/WRB/why this/DT/this class/NN/class is/VBZ/is very/RB/very important/JJ/important because/IN/because /,/, a/DT/a large/JJ/large number/NN/number of/IN/of problems/NNS/problems that/WDT/that we/PRP/we will/MD/will encounter/NNP/encounter. and/CC/and that/IN/that people/NNS/people have/VBP/have been/VBN/been encountering/VBG/encountering in/IN/in real/JJ/real life/NN/life /,/, they/PRP/they all/VBP/all fall/VBP/fall into/IN/into this/DT/this class/NN/class defined/VBD/defined yet/RB/yet another/DT/another problem/NNP/problem. but/CC/but /,/, this/DT/this is/VBZ/is sort/NN/sort of/IN/of central/JJ/central problem/NN/problem that/IN/that will/MD/will work/VB/work around/IN/around with/NNP/with. so/RB/so /,/, this/DT/this will/MD/will be/VB/be a/DT/a problem/NN/problem in/IN/in np/NN/np and/CC/and it/PRP/it will/MD/will be/VB/be the/DT/the central/JJ/central problem/NN/problem /,/, you/PRP/you would/MD/would have/VB/have seen/VBN/seen something/NN/something like/IN/like /,/, this/DT/this in/IN/in many/JJ/many of/IN/of your/PRP$/your previous/JJ/previous courses/NNS/courses in/IN/in computer/NN/computer science/NNP/science. if/IN/if you/PRP/you have/VBP/have done/VBN/done logic/NN/logic /,/, you/PRP/you would/MD/would have/VB/have seen/VBN/seen something/NN/something like/IN/like this/DT/this ;/:/; you/PRP/you would/MD/would have/VB/have seen/VBN/seen this/DT/this boolean/NN/boolean circuit/NN/circuit etc/NN/etc /,/, etc/FW/etc. so/RB/so /,/, many/JJ/many of/IN/of these/DT/these concepts/NNS/concepts that/WDT/that we/PRP/we will/MD/will deal/VB/deal with/IN/with and/CC/and will/MD/will define/VB/define should/MD/should not/RB/not be/VB/be new/JJ/new to/TO/to you/PRP/you anyway/RB/anyway /,/, i/PRP/i will/MD/will define/VB/define the/DT/the problem/NNP/problem. the/DT/the problem/NN/problem is/VBZ/is this/DT/this i/NN/i need/VBP/need to/TO/to make/VB/make few/JJ/few definitions/NNS/definitions /,/, before/IN/before i/PRP/i get/VBP/get on/IN/on to/TO/to the/DT/the problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 40/CD/40 /CD/) so/RB/so /,/, a/DT/a boolean/JJ/boolean variable/JJ/variable is/VBZ/is a/DT/a variable/JJ/variable /,/, which/WDT/which takes/VBZ/takes value/NN/value /,/, which/WDT/which takes/VBZ/takes values/NNS/values in/IN/in the/DT/the set/NN/set yes/VBZ/yes /,/, no/NNP/no. it/PRP/it takes/VBZ/takes two/CD/two values/NNS/values /,/, yes/NNS/yes or/CC/or no/NNP/no. now/RB/now /,/, if/IN/if x/NN/x is/VBZ/is a/DT/a boolean/JJ/boolean variable/JJ/variable then/RB/then x/NN/x bar/NN/bar is/VBZ/is a/DT/a negation/NN/negation /,/, is/VBZ/is called/VBN/called the/DT/the negation/NN/negation /,/, is/VBZ/is called/VBN/called its/PRP$/its negation/NN/negation and/CC/and if/IN/if x/NN/x is/VBZ/is we/PRP/we would/NNP/would. in/IN/in fact/NN/fact /,/, may/MD/may be/VB/be yes/NNS/yes or/CC/or no/DT/no will/MD/will also/RB/also sort/VB/sort of/IN/of alternate/JJ/alternate between/IN/between true/JJ/true or/CC/or false/NN/false /,/, instead/RB/instead of/IN/of yes/NNS/yes and/CC/and no/NNP/no. essentially/RB/essentially there/RB/there are/VBP/are two/CD/two values/NNS/values yes/NNS/yes no/DT/no /,/, true/JJ/true false/NN/false or/CC/or 1/CD/1 /,/, 0/CD/0. and/CC/and if/IN/if let/NN/let us/PRP/us say/VBP/say x/NN/x is/VBZ/is true/JJ/true then/RB/then x/NN/x bar/NN/bar is/VBZ/is false/NN/false and/CC/and if/IN/if x/NN/x is/VBZ/is false/NN/false then/RB/then x/NN/x bar/NN/bar is/VBZ/is true/JJ/true and/CC/and x/NN/x bar/NN/bar is/VBZ/is called/VBN/called the/DT/the negation/NNP/negation. some/DT/some people/NNS/people also/RB/also use/VBP/use /,/, x/NN/x is/VBZ/is also/RB/also used/VBN/used instead/RB/instead of/IN/of x/NN/x bar/NNP/bar. a/DT/a literal/JJ/literal is/VBZ/is either/DT/either a/DT/a boolean/JJ/boolean variable/JJ/variable or/CC/or negation/NNP/negation. so/RB/so /,/, both/DT/both x/NN/x and/CC/and bar/NN/bar are/VBP/are literals/NNP/literals. a/DT/a clause/NN/clause is/VBZ/is an/DT/an or/CC/or that/IN/that will/MD/will define/VB/define what/WP/what an/DT/an or/CC/or is/VBZ/is of/IN/of literals/NNP/literals. so/RB/so /,/, or/CC/or is/VBZ/is actually/RB/actually the/DT/the usual/JJ/usual logical/JJ/logical or/CC/or for/IN/for example/NN/example /,/, here/RB/here is/VBZ/is an/DT/an example/NN/example a/DT/a clause/NN/clause x/NN/x 1/CD/1 or/CC/or x/NN/x 2/CD/2 bar/NN/bar or/CC/or x/NN/x 3/CD/3 bar/NN/bar or/CC/or x/NN/x t/NNP/t. so/RB/so /,/, this/DT/this symbol/NN/symbol or/NNP/or. so/RB/so /,/, clause/NN/clause is/VBZ/is just/RB/just an/DT/an or/CC/or of/IN/of literals/NNS/literals and/CC/and this/DT/this clause/NN/clause evaluates/VBZ/evaluates to/TO/to either/DT/either true/JJ/true or/CC/or false/NN/false /,/, depending/VBG/depending on/IN/on values/NNS/values that/IN/that these/DT/these variables/NNS/variables here/NNP/here. if/IN/if any/DT/any one/CD/one of/IN/of them/PRP/them evaluates/VBZ/evaluates to/TO/to true/JJ/true /,/, then/RB/then the/DT/the clause/NN/clause evaluates/VBZ/evaluates to/TO/to true/JJ/true otherwise/NN/otherwise /,/, it/PRP/it evaluates/VBZ/evaluates to/TO/to false/NNP/false. for/IN/for instance/NN/instance if/IN/if x/NN/x 1/CD/1 is/VBZ/is true/JJ/true the/DT/the clause/NN/clause is/VBZ/is true/NNP/true. if/IN/if x/NN/x 2/CD/2 bar/NN/bar is/VBZ/is true/JJ/true then/RB/then it/PRP/it is/VBZ/is true/JJ/true and/NNP/and. so/RB/so /,/, on/IN/on any/DT/any one/CD/one of/IN/of them/PRP/them /,/, evaluates/VBZ/evaluates to/TO/to true/JJ/true it/PRP/it is/VBZ/is true/NNP/true. it/PRP/it is/VBZ/is false/RB/false if/IN/if all/DT/all of/IN/of them/PRP/them are/VBP/are false/RB/false /,/, which/WDT/which means/VBZ/means x/NN/x 1/CD/1 should/MD/should be/VB/be false/RB/false x/VB/x 2/CD/2 bar/NN/bar should/MD/should be/VB/be false/RB/false /,/, which/WDT/which means/VBZ/means x/NN/x 2/CD/2 should/MD/should be/VB/be true/JJ/true x/NN/x 3/CD/3 bar/NN/bar should/MD/should be/VB/be false/RB/false x/VB/x 3/CD/3 should/MD/should be/VB/be true/JJ/true and/CC/and x/NN/x 3/CD/3 should/MD/should be/VB/be false/NNP/false. all/DT/all of/IN/of them/PRP/them are/VBP/are false/RB/false then/RB/then it/PRP/it is/VBZ/is false/RB/false otherwise/RB/otherwise it/PRP/it is/VBZ/is true/NNP/true. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 39/CD/39 /CD/) let/NN/let us/PRP/us let/VB/let me/PRP/me write/VB/write this/NNP/this. so/RB/so /,/, it/PRP/it is/VBZ/is false/RB/false if/IN/if all/DT/all literals/NNS/literals are/VBP/are false/RB/false otherwise/RB/otherwise true/JJ/true you/PRP/you could/MD/could have/VB/have said/VBN/said it/PRP/it is/VBZ/is false/RB/false if/IN/if and/CC/and only/RB/only /,/, if/IN/if all/PDT/all literals/NNS/literals are/VBP/are false/NNP/false. this/DT/this is/VBZ/is the/DT/the usual/JJ/usual or/CC/or /,/, and/CC/and is/VBZ/is coming/VBG/coming up/RP/up right/RB/right now/NNP/now. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 29/CD/29 /:/: 19/CD/19 /CD/) so/RB/so /,/, a/DT/a boolean/JJ/boolean formula/NN/formula in/IN/in cnf/NN/cnf is/VBZ/is an/DT/an and/CC/and of/IN/of clauses/NNP/clauses. so/RB/so /,/, i/PRP/i have/VBP/have c/JJ/c 1/CD/1 and/CC/and c/NN/c 2/CD/2 and/CC/and c/NN/c 3/CD/3 and/CC/and c/NN/c k/NN/k and/CC/and each/DT/each of/IN/of these/DT/these is/VBZ/is a/DT/a clause/NN/clause /,/, this/DT/this symbol/NN/symbol is/VBZ/is and/CC/and this/DT/this is/VBZ/is again/RB/again the/DT/the usual/JJ/usual symbol/NN/symbol that/WDT/that we/PRP/we use/VBP/use in/IN/in logic/NNP/logic. so/RB/so /,/, this/DT/this is/VBZ/is another/DT/another definition/NNP/definition. so/RB/so /,/, boolean/JJ/boolean formula/NN/formula in/IN/in cnf/NN/cnf is/VBZ/is an/DT/an and/CC/and of/IN/of clauses/NNS/clauses /,/, each/DT/each of/IN/of them/PRP/them is/VBZ/is a/DT/a clause/NN/clause c/NN/c 1/CD/1 c/NN/c 2/CD/2 and/CC/and c/NN/c k/NN/k and/CC/and c/NN/c 1/CD/1 and/CC/and c/NN/c 2/CD/2 and/CC/and c/NN/c 3/CD/3 /,/, so/RB/so on/IN/on up/IN/up to/TO/to c/NN/c k/NN/k /,/, this/DT/this i/PRP/i will/MD/will call/VB/call a/DT/a boolean/JJ/boolean formula/NN/formula in/IN/in cnf/NN/cnf /,/, cnf/NN/cnf stands/VBZ/stands for/IN/for conjunctive/JJ/conjunctive normal/JJ/normal form/NNP/form. so/RB/so /,/, each/DT/each of/IN/of these/DT/these clause/NN/clause remember/NN/remember is/VBZ/is an/DT/an or/CC/or of/IN/of literals/NNP/literals. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an and/CC/and of/IN/of or/CC/or ?/./? s/NNS/s and/CC/and it/PRP/it is/VBZ/is called/VBN/called the/DT/the conjunctive/JJ/conjunctive normal/JJ/normal form/NNP/form. so/RB/so /,/, i/PRP/i just/RB/just have/VBP/have to/TO/to tell/VB/tell you/PRP/you the/DT/the logical/JJ/logical behavior/NN/behavior of/IN/of and/CC/and /,/, which/WDT/which is/VBZ/is again/RB/again the/DT/the usual/JJ/usual thing/NNP/thing. this/DT/this formula/NN/formula is/VBZ/is true/JJ/true evaluates/NNS/evaluates to/TO/to true/VB/true if/IN/if /,/, every/DT/every clause/NN/clause evaluates/VBZ/evaluates to/TO/to true/JJ/true otherwise/NN/otherwise it/PRP/it evaluates/VBZ/evaluates to/TO/to false/NNP/false. so/RB/so /,/, maybe/RB/maybe i/PRP/i can/MD/can just/RB/just write/VB/write this/DT/this formula/NN/formula /,/, evaluates/VBZ/evaluates to/TO/to true/JJ/true if/IN/if and/CC/and only/RB/only if/IN/if every/DT/every clause/NN/clause evaluates/VBZ/evaluates to/TO/to true/NNP/true. if/IN/if any/DT/any one/CD/one of/IN/of those/DT/those clauses/NNS/clauses is/VBZ/is false/RB/false and/CC/and this/DT/this formula/NN/formula evaluates/VBZ/evaluates to/TO/to false/NNP/false. so/RB/so /,/, what/WDT/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by evaluates/NNS/evaluates to/TO/to false/NNP/false. it/PRP/it means/VBZ/means /,/, when/WRB/when you/PRP/you give/VBP/give values/NNS/values to/TO/to these/DT/these variables/NNS/variables then/RB/then if/IN/if it/PRP/it is/VBZ/is a/DT/a variable/JJ/variable then/RB/then it/PRP/it evaluates/VBZ/evaluates to/TO/to true/NNP/true. if/IN/if it/PRP/it is/VBZ/is the/DT/the negation/NN/negation evaluates/VBZ/evaluates to/TO/to false/VB/false then/RB/then you/PRP/you check/VBP/check each/DT/each clause/NN/clause whether/IN/whether /,/, it/PRP/it is/VBZ/is value/NN/value is/VBZ/is true/JJ/true or/CC/or not/RB/not that/IN/that you/PRP/you check/NNP/check. a/DT/a clause/NN/clause evaluates/VBZ/evaluates to/TO/to true/JJ/true if/IN/if /,/, any/DT/any one/CD/one of/IN/of those/DT/those literals/NNS/literals evaluates/VBZ/evaluates to/TO/to true/NNP/true. and/CC/and then/RB/then you/PRP/you look/VBP/look at/IN/at the/DT/the formula/NN/formula /,/, you/PRP/you look/VBP/look at/IN/at the/DT/the collection/NN/collection of/IN/of these/DT/these clauses/NNS/clauses and/CC/and this/DT/this evaluates/NNS/evaluates to/TO/to true/VB/true /,/, if/IN/if all/PDT/all clauses/NNS/clauses evaluate/VBP/evaluate to/TO/to true/NNP/true. of/IN/of course/NN/course these/DT/these are/VBP/are special/JJ/special boolean/NN/boolean formulae/NN/formulae /,/, which/WDT/which we/PRP/we call/VBP/call cnf/NN/cnf /,/, which/WDT/which is/VBZ/is you/PRP/you have/VBP/have and/CC/and ?/./? s/NNS/s outside/IN/outside and/CC/and or/CC/or ?/./? s/NNS/s inside/NNP/inside. of/IN/of course/NN/course you/PRP/you can/MD/can form/VB/form general/JJ/general boolean/NN/boolean formula/NN/formula /,/, which/WDT/which and/CC/and ?/./? s/NNS/s or/CC/or ?/./? s/NNS/s and/CC/and not/RB/not ?/./? s/NNS/s any/DT/any kind/NN/kind of/IN/of way/NN/way you/PRP/you like/NNP/like. but/CC/but /,/, these/DT/these are/VBP/are the/DT/the only/JJ/only boolean/NN/boolean formula/NN/formula that/WDT/that we/PRP/we are/VBP/are interested/JJ/interested in/IN/in and/CC/and one/CD/one can/MD/can show/VB/show /,/, but/CC/but we/PRP/we will/MD/will not/RB/not do/VB/do it/NNP/it. one/CD/one can/MD/can show/VB/show that/IN/that every/DT/every boolean/JJ/boolean formula/NN/formula /,/, take/VBP/take any/DT/any boolean/JJ/boolean formula/NN/formula that/WDT/that can/MD/can be/VB/be written/VBN/written equivalently/RB/equivalently in/IN/in cnf/NNP/cnf. i/PRP/i need/VBP/need one/CD/one more/JJR/more definition/NN/definition then/RB/then we/PRP/we are/VBP/are ready/RB/ready to/TO/to roll/NNP/roll. so/RB/so /,/, boolean/JJ/boolean formula/NN/formula /,/, the/DT/the boolean/JJ/boolean formula/NN/formula in/IN/in cnf/NN/cnf is/VBZ/is said/VBN/said to/TO/to be/VB/be satisfiable/JJ/satisfiable /,/, if/IN/if there/EX/there exists/NNS/exists an/DT/an assignment/NN/assignment to/TO/to the/DT/the variables/NNS/variables /,/, an/DT/an assignment/NN/assignment assigns/VBZ/assigns a/DT/a value/NN/value either/NN/either true/NN/true or/CC/or false/VB/false to/TO/to each/DT/each variable/NNP/variable. there/RB/there is/VBZ/is an/DT/an assignment/NN/assignment to/TO/to the/DT/the variables/NNS/variables such/JJ/such that/IN/that the/DT/the formula/NN/formula evaluates/VBZ/evaluates to/TO/to true/NNP/true. there/RB/there is/VBZ/is some/DT/some way/NN/way of/IN/of assigning/VBG/assigning values/NNS/values to/TO/to these/DT/these variables/NNP/variables. each/DT/each of/IN/of these/DT/these variables/NNS/variables there/RB/there is/VBZ/is a/DT/a way/NN/way to/TO/to assign/VB/assign values/NNS/values either/CC/either true/JJ/true or/CC/or false/NN/false that/IN/that when/WRB/when you/PRP/you evaluate/VBP/evaluate the/DT/the boolean/JJ/boolean formula/NN/formula /,/, it/PRP/it evaluates/VBZ/evaluates to/TO/to true/NNP/true. in/IN/in this/DT/this case/NN/case /,/, you/PRP/you call/VBP/call the/DT/the boolean/JJ/boolean formula/NN/formula satisfied/VBD/satisfied /,/, if/IN/if not/RB/not you/PRP/you say/VBP/say that/IN/that it/PRP/it is/VBZ/is not/RB/not satisfied/NNP/satisfied. so/RB/so /,/, clearly/RB/clearly there/EX/there are/VBP/are boolean/JJ/boolean formulae/NN/formulae /,/, which/WDT/which are/VBP/are in/IN/in cnf/NN/cnf /,/, which/WDT/which are/VBP/are satisfiable/JJ/satisfiable and/CC/and which/WDT/which are/VBP/are not/RB/not satisfiable/NNP/satisfiable. for/IN/for instance/NN/instance x/NN/x and/CC/and x/NN/x bar/NN/bar if/IN/if i/PRP/i take/VBP/take one/CD/one clause/NN/clause to/TO/to be/VB/be just/RB/just x/NNP/x. and/CC/and another/DT/another clause/NN/clause to/TO/to be/VB/be x/NN/x bar/NN/bar and/CC/and there/EX/there is/VBZ/is no/DT/no way/NN/way that/IN/that you/PRP/you can/MD/can satisfy/VB/satisfy this/DT/this formula/NN/formula whatever/NN/whatever /,/, value/NN/value you/PRP/you get/VBP/get to/TO/to x/VB/x the/DT/the formula/NN/formula will/MD/will always/RB/always evaluates/VBZ/evaluates to/TO/to false/NNP/false. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 30/CD/30 /CD/) we/PRP/we are/VBP/are ready/RB/ready to/TO/to define/VB/define our/PRP$/our next/JJ/next problem/NN/problem that/IN/that we/PRP/we will/MD/will study/VB/study /,/, which/WDT/which sat/JJ/sat not/RB/not to/TO/to confuse/VB/confuse with/IN/with exams/NNS/exams /,/, sat/IN/sat stands/NNS/stands for/IN/for satisfiability/NNP/satisfiability. so/RB/so /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a boolean/JJ/boolean formula/NN/formula in/IN/in cnf/NN/cnf /,/, the/DT/the question/NN/question is/VBZ/is let/VBN/let me/PRP/me call/VBP/call this/DT/this boolean/NN/boolean formula/NN/formula something/NN/something f/NN/f /,/, is/VBZ/is f/NN/f satisfiable/JJ/satisfiable /,/, this/DT/this is/VBZ/is the/DT/the question/NNP/question. so/RB/so /,/, now/RB/now let/VB/let us/PRP/us observe/VB/observe that/IN/that sat/JJ/sat is/VBZ/is now/RB/now empty/NNP/empty. so/RB/so /,/, sat/IN/sat is/VBZ/is empty/JJ/empty or/CC/or is/VBZ/is this/DT/this /,/, well/RB/well it/PRP/it is/VBZ/is a/DT/a decision/NN/decision problem/NNP/problem. and/CC/and suppose/VB/suppose the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes /,/, we/PRP/we have/VBP/have to/TO/to only/RB/only focus/VB/focus on/IN/on yes/NNS/yes input/IN/input /,/, so/RB/so the/DT/the prover/NN/prover says/VBZ/says yes/NNS/yes it/PRP/it is/VBZ/is satisfied/NNP/satisfied. then/RB/then /,/, how/WRB/how can/MD/can the/DT/the verifier/NN/verifier be/VB/be convinced/VBN/convinced that/IN/that a/DT/a given/VBN/given formula/NN/formula is/VBZ/is indeed/VBN/indeed satisfied/-NONE-/satisfied. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the prover/NN/prover give/VBP/give the/DT/the verifier/NN/verifier /,/, so/RB/so that/IN/that the/DT/the verifier/NNP/verifier. so/RB/so /,/, the/DT/the verifier/NN/verifier can/MD/can look/VB/look at/IN/at this/DT/this advice/NN/advice that/IN/that the/DT/the prover/NN/prover has/VBZ/has given/VBN/given him/PRP/him /,/, look/VBP/look at/IN/at the/DT/the input/NN/input formula/NN/formula and/CC/and you/PRP/you know/VBP/know we/PRP/we completely/RB/completely convince/VBP/convince that/IN/that yes/NNS/yes indeed/RB/indeed the/DT/the formula/NN/formula is/VBZ/is yet/RB/yet satisfied/NNP/satisfied. well/RB/well i/PRP/i hope/VBP/hope most/JJS/most of/IN/of you/PRP/you have/VBP/have answered/VBN/answered this/DT/this question/NN/question /,/, by/IN/by now/RB/now the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover gives/VBZ/gives is/VBZ/is just/RB/just the/DT/the satisfying/NN/satisfying assignment/NNP/assignment. so/RB/so /,/, the/DT/the proof/NN/proof is/VBZ/is an/DT/an assignment/NN/assignment to/TO/to the/DT/the variables/NNP/variables. the/DT/the verifier/NN/verifier uses/VBZ/uses this/DT/this assignment/NN/assignment and/CC/and checks/NNS/checks that/WDT/that the/DT/the formula/NN/formula evaluates/VBZ/evaluates to/TO/to true/NNP/true. the/DT/the verifier/NN/verifier uses/VBZ/uses this/DT/this assignment/NN/assignment and/CC/and he/PRP/he checks/VBZ/checks the/DT/the formula/NN/formula evaluates/VBZ/evaluates to/TO/to true/NNP/true. so/RB/so /,/, given/VBN/given an/DT/an assignment/NN/assignment you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to convince/NN/convince yourself/PRP/yourself that/IN/that it/PRP/it is/VBZ/is easy/JJ/easy to/TO/to check/VB/check /,/, what/WDT/what the/DT/the value/NN/value of/IN/of your/PRP$/your formula/NN/formula is/NNP/is. so/RB/so /,/, you/PRP/you just/RB/just plug/VBP/plug in/IN/in the/DT/the values/NNS/values into/IN/into for/IN/for each/DT/each variables/NNS/variables /,/, now/RB/now check/VBP/check whether/IN/whether each/DT/each of/IN/of these/DT/these clauses/NNS/clauses are/VBP/are true/NNP/true. all/DT/all clauses/NNS/clauses are/VBP/are true/JJ/true then/RB/then you/PRP/you are/VBP/are true/JJ/true the/DT/the formula/NN/formula is/VBZ/is satisfiable/NNP/satisfiable. so/RB/so /,/, if/IN/if it/PRP/it is/VBZ/is a/DT/a yes/NNS/yes input/VBN/input that/IN/that is/VBZ/is the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover can/MD/can give/VB/give the/DT/the verifier/NN/verifier using/VBG/using which/WDT/which the/DT/the verifier/JJR/verifier can/MD/can easily/RB/easily check/VB/check that/IN/that the/DT/the formula/NN/formula is/NNP/is. in/IN/in fact/NN/fact /,/, true/NNP/true. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the big/JJ/big deal/NN/deal yet/RB/yet another/DT/another problem/NN/problem in/IN/in np/NN/np that/IN/that is/VBZ/is yet/RB/yet another/DT/another problem/NN/problem in/IN/in np/NN/np /,/, but/CC/but this/DT/this as/IN/as we/PRP/we shall/MD/shall see/VB/see in/IN/in a/DT/a minute/NN/minute is/VBZ/is a/DT/a very/RB/very special/JJ/special problem/NN/problem in/IN/in np/NNP/np. so/RB/so /,/, thing/NN/thing that/WDT/that makes/VBZ/makes sat/VBP/sat very/RB/very special/JJ/special is/VBZ/is the/DT/the following/VBG/following theorem/NN/theorem of/IN/of cook/NNP/cook. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 01/CD/01 /CD/) cook/NN/cook is/VBZ/is steven/VBN/steven cook/NN/cook /,/, it/PRP/it is/VBZ/is a/DT/a name/NN/name of/IN/of a/DT/a person/NN/person steven/VBN/steven cook/NN/cook and/CC/and there/EX/there is/VBZ/is no/DT/no relationship/NN/relationship to/TO/to /VB/( refer/NN/refer time/NN/time /:/: 39/CD/39 /:/: 22/CD/22 /CD/) /./. so/RB/so /,/, this/DT/this theorem/NN/theorem says/VBZ/says if/IN/if sat/JJ/sat has/VBZ/has an/DT/an efficient/JJ/efficient algorithm/NN/algorithm then/RB/then so/RB/so does/VBZ/does every/DT/every other/JJ/other problem/NN/problem in/IN/in np/NNP/np. let/NN/let us/PRP/us tire/VBP/tire at/IN/at this/DT/this time/NN/time for/IN/for a/DT/a minute/NNP/minute. so/RB/so /,/, this/DT/this is/VBZ/is among/IN/among the/DT/the most/RBS/most important/JJ/important theorems/NNS/theorems in/IN/in computer/NN/computer science/NNP/science. let/NN/let us/PRP/us make/VBP/make sure/JJ/sure that/IN/that we/PRP/we understand/VBP/understand this/NNP/this. by/IN/by efficient/NN/efficient i/PRP/i mean/VBP/mean polynomial/JJ/polynomial time/NN/time /,/, efficient/JJ/efficient means/NNS/means polynomial/JJ/polynomial time/NNP/time. this/DT/this says/VBZ/says that/IN/that if/IN/if /,/, there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for sat/NN/sat then/RB/then there/RB/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for every/DT/every other/JJ/other problem/NN/problem in/IN/in np/NNP/np. so/RB/so /,/, to/TO/to solve/VB/solve any/DT/any other/JJ/other problem/NN/problem in/IN/in np/NN/np /,/, it/PRP/it suffices/VBZ/suffices to/TO/to solve/VB/solve just/RB/just sat/JJ/sat i/PRP/i mean/VBP/mean /,/, remember/NN/remember that/IN/that np/NN/np includes/VBZ/includes factor/NN/factor /,/, factoring/VBG/factoring it/PRP/it also/RB/also includes/VBZ/includes hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, matching/VBG/matching etc/NN/etc /,/, etc/NN/etc /,/, etc/FW/etc. large/JJ/large number/NN/number of/IN/of problems/NNS/problems that/WDT/that we/PRP/we have/VBP/have seen/VBN/seen /,/, so/RB/so far/RB/far /,/, in/IN/in fact/NN/fact is/VBZ/is in/IN/in this/DT/this class/NN/class empty/NN/empty and/CC/and this/DT/this theorem/NN/theorem says/VBZ/says that/IN/that if/IN/if sat/JJ/sat has/VBZ/has an/DT/an efficient/JJ/efficient algorithm/NNP/algorithm. so/RB/so /,/, does/VBZ/does every/DT/every other/JJ/other problem/NN/problem in/IN/in np/NNP/np. we/PRP/we have/VBP/have proved/VBN/proved statements/NNS/statements of/IN/of which/WDT/which are/VBP/are sort/RB/sort of/IN/of similar/NNP/similar. we/PRP/we have/VBP/have proved/VBN/proved i/PRP/i mean/VBP/mean this/DT/this is/VBZ/is the/DT/the notion/NN/notion of/IN/of reduction/NNP/reduction. so/RB/so /,/, we/PRP/we showed/VBD/showed that/IN/that if/IN/if hp/NN/hp has/VBZ/has an/DT/an efficient/JJ/efficient algorithm/NNP/algorithm. we/PRP/we showed/VBD/showed this/DT/this means/NNS/means that/WDT/that hc/NN/hc has/VBZ/has an/DT/an efficient/JJ/efficient algorithm/NN/algorithm /,/, we/PRP/we have/VBP/have done/VBN/done this/NNP/this. now/RB/now /,/, and/CC/and this/DT/this was/VBD/was not/RB/not easy/JJ/easy we/PRP/we were/VBD/were /,/, we/PRP/we took/VBD/took a/DT/a little/RB/little bit/NN/bit of/IN/of time/NN/time and/CC/and effort/NN/effort to/TO/to do/VB/do something/NN/something /,/, which/WDT/which is/VBZ/is as/RB/as sort/NN/sort of/IN/of well/RB/well specified/VBN/specified at/IN/at this/NNP/this. both/DT/both these/DT/these problems/NNS/problems are/VBP/are very/RB/very well/RB/well specified/VBN/specified /,/, we/PRP/we knew/VBD/knew where/WRB/where we/PRP/we were/VBD/were going/NNP/going. look/NN/look at/IN/at this/DT/this statement/NN/statement here/RB/here this/DT/this says/VBZ/says that/IN/that sat/JJ/sat as/IN/as an/DT/an efficient/NN/efficient algorithm/NN/algorithm implies/VBZ/implies every/DT/every problem/NN/problem in/IN/in np/NN/np has/VBZ/has an/DT/an efficient/JJ/efficient algorithm/NNP/algorithm. this/DT/this is/VBZ/is not/RB/not just/RB/just one/CD/one problem/NN/problem somewhere/RB/somewhere /,/, it/PRP/it is/VBZ/is not/RB/not hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, hamiltonian/JJ/hamiltonian path/NN/path what/WP/what have/VBP/have you/PRP/you which/WDT/which means/VBZ/means every/DT/every problem/NN/problem in/IN/in np/NN/np has/VBZ/has efficient/JJ/efficient algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i hope/VBP/hope you/PRP/you appreciate/VBP/appreciate the/DT/the power/NN/power of/IN/of the/DT/the statement/NN/statement and/CC/and this/DT/this theorem/NN/theorem has/VBZ/has changed/VBN/changed the/DT/the shape/NN/shape of/IN/of computer/NN/computer science/NNP/science. so/RB/so /,/, there/EX/there are/VBP/are two/CD/two ways/NNS/ways of/IN/of reading/NN/reading this/DT/this statement/NN/statement /,/, one/CD/one is/VBZ/is to/TO/to say/VB/say that/IN/that if/IN/if you/PRP/you can/MD/can solve/VB/solve sat/JJ/sat /,/, then/RB/then you/PRP/you can/MD/can solve/VB/solve everything/NN/everything else/NNP/else. so/RB/so /,/, concentrate/JJ/concentrate all/DT/all your/PRP$/your attention/NN/attention on/IN/on sat/NN/sat that/IN/that is/VBZ/is one/CD/one way/NN/way to/TO/to do/VB/do it/NNP/it. lot/NN/lot of/IN/of people/NNS/people have/VBP/have tried/VBN/tried and/CC/and you/PRP/you know/VBP/know /,/, they/PRP/they have/VBP/have not/RB/not been/VBN/been able/JJ/able to/TO/to find/VB/find an/DT/an efficient/NN/efficient solution/NN/solution for/IN/for sat/NNP/sat. so/RB/so /,/, the/DT/the other/JJ/other way/NN/way of/IN/of to/TO/to do/VB/do this/DT/this look/NN/look at/IN/at the/DT/the statement/NN/statement /,/, sat/WDT/sat is/VBZ/is among/IN/among the/DT/the hardest/JJS/hardest problems/NNP/problems. here/RB/here is/VBZ/is a/DT/a class/NN/class np/NN/np and/CC/and sat/VB/sat is/VBZ/is amongst/VBN/amongst the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in the/DT/the sense/NN/sense that/IN/that you/PRP/you can/MD/can solve/VB/solve sat/JJ/sat everything/NN/everything else/RB/else follows/NNP/follows. so/RB/so /,/, it/PRP/it is/VBZ/is among/IN/among the/DT/the hardest/JJS/hardest problems/NNP/problems. so/RB/so /,/, sat/IN/sat is/VBZ/is one/CD/one of/IN/of the/DT/the hardest/JJS/hardest problems/NNS/problems are/VBP/are there/RB/there other/JJ/other problems/NNS/problems in/IN/in np/NN/np /,/, which/WDT/which are/VBP/are as/RB/as hard/RB/hard of/IN/of which/WDT/which i/PRP/i can/MD/can make/VB/make a/DT/a statement/NN/statement /,/, which/WDT/which is/VBZ/is similar/JJ/similar that/NNP/that. if/IN/if this/DT/this problem/NN/problem is/VBZ/is as/IN/as hard/JJ/hard is/VBZ/is the/DT/the you/PRP/you know/VBP/know /,/, i/PRP/i can/MD/can solve/VB/solve this/DT/this problem/NN/problem in/IN/in np/NN/np and/CC/and i/PRP/i can/MD/can solve/VB/solve every/DT/every other/JJ/other problem/NN/problem in/IN/in np/NN/np and/CC/and i/PRP/i make/VBP/make this/DT/this statement/NN/statement of/IN/of other/JJ/other problem/NNP/problem. and/CC/and how/WRB/how easy/JJ/easy and/CC/and difficult/JJ/difficult is/VBZ/is it/PRP/it to/TO/to prove/VB/prove these/DT/these statements/NNP/statements. fortunately/RB/fortunately with/IN/with cook/NN/cook ?/./? s/NNS/s theorem/VBP/theorem in/IN/in hand/NN/hand there/EX/there are/NNP/are. in/IN/in fact/NN/fact /,/, let/VB/let me/PRP/me further/RB/further say/VBP/say there/EX/there are/VBP/are such/JJ/such problems/NNS/problems in/IN/in np/NNP/np. and/CC/and with/IN/with cook/NN/cook ?/./? s/NNS/s theorem/VBP/theorem in/IN/in hand/NN/hand proving/VBG/proving that/IN/that these/DT/these problems/NNS/problems are/VBP/are among/IN/among the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in np/NN/np becomes/VBZ/becomes a/DT/a bit/NN/bit simpler/NN/simpler i/PRP/i mean/NNP/mean. how/WRB/how does/VBZ/does it/PRP/it go/VB/go about/IN/about doing/VBG/doing /,/, so/RB/so here/RB/here is/VBZ/is one/NNP/one. so/RB/so /,/, i/PRP/i take/VBP/take a/DT/a problem/NN/problem say/NN/say some/DT/some problem/NN/problem pi/NNP/pi. so/RB/so /,/, what/WDT/what i/PRP/i do/VBP/do is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 23/CD/23 /CD/) if/IN/if there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for pi/NN/pi then/RB/then there/RB/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for sat/NNP/sat. supposing/VBG/supposing /,/, i/PRP/i can/MD/can prove/VB/prove something/NN/something like/IN/like /,/, now/RB/now this/DT/this is/VBZ/is something/NN/something we/PRP/we have/VBP/have been/VBN/been doing/VBG/doing and/CC/and it/PRP/it looks/VBZ/looks like/IN/like we/PRP/we are/VBP/are capable/JJ/capable of/IN/of doing/VBG/doing such/JJ/such things/NNP/things. we/PRP/we have/VBP/have done/VBN/done it/PRP/it for/IN/for instead/RB/instead of/IN/of pi/NN/pi and/CC/and sat/VB/sat /,/, we/PRP/we have/VBP/have done/VBN/done it/PRP/it for/IN/for we/PRP/we have/VBP/have taken/VBN/taken hp/NN/hp hc/NN/hc and/CC/and well/RB/well matching/NNP/matching. we/PRP/we have/VBP/have seen/VBN/seen some/DT/some matching/JJ/matching where/WRB/where /,/, we/PRP/we have/VBP/have taken/VBN/taken two/CD/two algorithms/NNS/algorithms /,/, two/CD/two problems/NNS/problems like/IN/like this/NNP/this. and/CC/and we/PRP/we have/VBP/have shown/VBN/shown if/IN/if /,/, there/EX/there is/VBZ/is one/CD/one algorithm/NN/algorithm for/IN/for a/DT/a problem/NN/problem and/CC/and there/EX/there is/VBZ/is another/DT/another algorithm/NNP/algorithm. essentially/RB/essentially we/PRP/we use/VBP/use the/DT/the sub/NN/sub routine/NN/routine for/IN/for pi/NN/pi and/CC/and we/PRP/we construct/VBP/construct an/DT/an algorithm/NN/algorithm for/IN/for sat/NN/sat something/NN/something like/IN/like this/DT/this /,/, we/PRP/we can/MD/can do/VB/do. but/CC/but /,/, now/RB/now let/VB/let us/PRP/us see/VB/see what/WP/what this/DT/this gives/VBZ/gives us/PRP/us /,/, now/RB/now here/RB/here is/VBZ/is the/DT/the other/JJ/other sort/NN/sort of/IN/of implication/NN/implication that/IN/that i/PRP/i would/MD/would like/VB/like to/TO/to use/NNP/use. cook/NN/cook ?/./? s/NNS/s theorem/VBP/theorem says/VBZ/says that/IN/that if/IN/if there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for sat/NNP/sat. there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for every/DT/every problem/NN/problem in/IN/in it/PRP/it /,/, there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient for/IN/for all/DT/all of/IN/of np/NN/np which/WDT/which means/VBZ/means /,/, all/DT/all problems/NNS/problems in/IN/in np/NNP/np. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just put/VBD/put these/DT/these two/CD/two things/NNS/things together/RB/together /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for pi/NN/pi there/EX/there is/VBZ/is one/CD/one for/IN/for sat/JJ/sat and/CC/and there/EX/there is/VBZ/is one/CD/one for/IN/for sat/JJ/sat then/RB/then there/RB/there is/VBZ/is a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for all/DT/all of/IN/of np/NNP/np. this/DT/this follows/VBZ/follows from/IN/from cook/NN/cook and/CC/and this/DT/this result/NN/result we/PRP/we will/MD/will have/VB/have to/TO/to hook/VB/hook up/NNP/up. so/RB/so /,/, this/DT/this is/VBZ/is up/RP/up to/TO/to us/PRP/us to/TO/to prove/NNP/prove. so/RB/so /,/, to/TO/to prove/VB/prove that/IN/that pi/NN/pi is/VBZ/is amongst/VBN/amongst the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in np/NN/np /,/, all/DT/all i/PRP/i need/VBP/need to/TO/to do/VB/do is/VBZ/is prove/VB/prove that/IN/that if/IN/if there/EX/there is/VBZ/is a/DT/a efficient/NN/efficient algorithm/NN/algorithm for/IN/for pi/NN/pi /,/, there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for /CD/( /CD/( refer/NN/refer time/NN/time /:/: 46/CD/46 /:/: 36/CD/36 /CD/) /CD/) and/CC/and once/RB/once i/PRP/i do/VBP/do this/NNP/this. using/VBG/using this/DT/this implication/NN/implication /,/, i/PRP/i am/VBP/am down/RP/down to/TO/to prove/VB/prove that/IN/that there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm for/IN/for all/DT/all of/IN/of np/NNP/np. so/RB/so /,/, this/DT/this would/MD/would sort/VB/sort of/IN/of identify/NN/identify pi/NN/pi among/IN/among the/DT/the problems/NNS/problems in/IN/in np/NNP/np. so/RB/so /,/, let/VB/let us/PRP/us identify/VB/identify our/PRP$/our goal/NN/goal for/IN/for the/DT/the next/JJ/next few/JJ/few lectures/NNS/lectures /,/, few/JJ/few hours/NNS/hours will/MD/will be/VB/be to/TO/to identify/VB/identify more/JJR/more and/CC/and more/JJR/more problems/NNS/problems in/IN/in np/NN/np /,/, which/WDT/which are/VBP/are among/IN/among the/DT/the hardest/JJS/hardest /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that if/IN/if you/PRP/you solve/VBP/solve this/DT/this then/RB/then you/PRP/you can/MD/can solve/VB/solve every/DT/every other/JJ/other problem/NN/problem in/IN/in it/NNP/it. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the first/JJ/first one/CD/one /,/, i/PRP/i need/VBP/need to/TO/to make/VB/make a/DT/a definition/NNP/definition. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 36/CD/36 /CD/) so/RB/so /,/, a/DT/a clique/NN/clique in/IN/in a/DT/a graph/NN/graph g/NN/g is/VBZ/is a/DT/a subset/NN/subset of/IN/of v/NN/v such/JJ/such that/IN/that lets/NNS/lets say/VBP/say u/NN/u of/IN/of v/NN/v such/JJ/such that/IN/that /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at any/DT/any two/CD/two vertices/NNS/vertices in/IN/in u/NN/u /,/, there/EX/there must/MD/must be/VB/be an/DT/an edge/NN/edge between/IN/between them/NNP/them. so/RB/so /,/, you/PRP/you look/VBP/look at/IN/at a/DT/a graph/NN/graph you/PRP/you look/VBP/look at/IN/at a/DT/a small/JJ/small subset/NN/subset of/IN/of the/DT/the vertex/NN/vertex set/VBD/set and/CC/and in/IN/in this/DT/this subset/NN/subset when/WRB/when /,/, i/PRP/i look/VBP/look at/IN/at the/DT/the vertices/NNP/vertices. if/IN/if between/IN/between any/DT/any pair/NN/pair of/IN/of them/PRP/them there/EX/there is/VBZ/is an/DT/an edge/NN/edge /,/, in/IN/in the/DT/the graph/NN/graph then/RB/then this/DT/this i/PRP/i will/MD/will call/VB/call a/DT/a clique/NNP/clique. the/DT/the subset/NN/subset u/NN/u such/JJ/such that/IN/that for/IN/for every/DT/every u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2 /,/, till/IN/till u/NN/u u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2 must/MD/must be/VB/be an/DT/an edge/NN/edge in/IN/in g/NN/g /,/, must/MD/must be/VB/be an/DT/an edge/NN/edge in/IN/in g/NN/g which/WDT/which means/VBZ/means /,/, if/IN/if i/PRP/i restrict/VBP/restrict myself/PRP/myself to/TO/to u/VB/u /,/, i/PRP/i must/MD/must get/VB/get the/DT/the complete/JJ/complete graph/NNP/graph. every/DT/every edge/NN/edge must/MD/must be/VB/be present/JJ/present or/CC/or let/VB/let us/PRP/us take/VB/take an/DT/an example/NNP/example. let/NN/let us/PRP/us take/VBP/take this/DT/this example/NN/example a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e f/NN/f let/NN/let me/PRP/me add/VBD/add this/DT/this in/IN/in this/DT/this example/NN/example /,/, a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d is/VBZ/is a/DT/a clique/NNP/clique. so/RB/so /,/, i/PRP/i look/VBP/look at/IN/at these/DT/these four/CD/four vertices/NNP/vertices. every/DT/every possible/JJ/possible edge/NN/edge is/VBZ/is present/JJ/present i/NN/i can/MD/can not/RB/not replace/VB/replace c/NN/c with/IN/with e/NNP/e. a/DT/a /,/, b/NN/b /,/, d/VBD/d and/CC/and e/NN/e is/VBZ/is not/RB/not a/DT/a clique/NN/clique because/IN/because e/NN/e is/VBZ/is not/RB/not adjacent/JJ/adjacent to/TO/to a/DT/a and/CC/and d/NN/d /,/, if/IN/if i/PRP/i just/RB/just take/VBP/take a/DT/a /,/, b/NN/b /,/, d/VBD/d that/IN/that is/VBZ/is a/DT/a clique/NNP/clique. if/IN/if /,/, i/PRP/i take/VBP/take just/RB/just d/JJ/d /,/, c/NN/c and/CC/and g/NN/g that/IN/that is/VBZ/is also/RB/also a/DT/a clique/NNP/clique. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a clique/NN/clique of/IN/of size/NN/size 3/CD/3 /,/, this/DT/this is/VBZ/is a/DT/a clique/NN/clique of/IN/of size/NN/size 4/CD/4. it/PRP/it is/VBZ/is a/DT/a subset/NN/subset of/IN/of the/DT/the vertex/NN/vertex such/JJ/such that/IN/that if/IN/if i/PRP/i take/VBP/take any/DT/any two/CD/two vertices/NNS/vertices /,/, it/PRP/it is/VBZ/is in/IN/in edge/NN/edge between/IN/between any/DT/any pair/NN/pair of/IN/of them/PRP/them /,/, problem/VBP/problem is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 50/CD/50 /:/: 10/CD/10 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a search/NN/search version/NNP/version. so/RB/so /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g /,/, output/NN/output find/NN/find a/DT/a clique/NN/clique of/IN/of maximum/NN/maximum size/NN/size /,/, find/VBP/find a/DT/a subset/NN/subset find/NN/find a/DT/a largest/JJS/largest subset/NN/subset you/PRP/you can/NNP/can. so/RB/so /,/, that/IN/that when/WRB/when i/PRP/i look/VBP/look at/IN/at these/DT/these set/NN/set of/IN/of vertices/NNS/vertices it/PRP/it forms/VBZ/forms a/DT/a clique/NNP/clique. so/RB/so /,/, in/IN/in this/DT/this graph/NN/graph for/IN/for instance/NN/instance /,/, the/DT/the largest/JJS/largest clique/NN/clique that/WDT/that you/PRP/you can/MD/can find/VB/find is/VBZ/is of/IN/of size/NN/size 4/CD/4 /,/, which/WDT/which is/VBZ/is a/DT/a /,/, b/NN/b /,/, c/NN/c that/IN/that is/VBZ/is the/DT/the largest/NNP/largest. so/RB/so /,/, the/DT/the search/NN/search version/NN/version is/VBZ/is this/DT/this remembers/NNS/remembers we/PRP/we are/VBP/are trying/VBG/trying to/TO/to identify/VB/identify problems/NNS/problems in/IN/in np/NN/np this/DT/this is/VBZ/is not/RB/not even/RB/even a/DT/a decision/NN/decision problem/NNP/problem. so/RB/so /,/, you/PRP/you want/VBP/want the/DT/the vertices/NNS/vertices in/IN/in a/DT/a largest/JJS/largest clique/NNP/clique. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to look/VB/look at/IN/at /,/, what/WP/what we/PRP/we will/MD/will do/VB/do is/VBZ/is we/PRP/we will/MD/will define/VB/define a/DT/a problem/NN/problem /,/, which/WDT/which is/VBZ/is very/RB/very similar/JJ/similar to/TO/to this/DT/this /,/, which/WDT/which will/MD/will be/VB/be a/DT/a decision/NN/decision problem/NN/problem and/CC/and i/PRP/i will/MD/will focus/VB/focus on/IN/on that/NNP/that. so/IN/so /,/, the/DT/the decision/NN/decision version/NN/version is/VBZ/is this/DT/this clique/NN/clique /,/, input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g and/CC/and a/DT/a positive/JJ/positive integer/NN/integer k/NN/k /,/, you/PRP/you see/VBP/see how/WRB/how k/NN/k creeps/NNS/creeps in/IN/in or/CC/or y/NN/y creeps/NNS/creeps in/IN/in a/DT/a minute/NNP/minute. the/DT/the question/NN/question is/VBZ/is does/VBZ/does g/NN/g have/VBP/have a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the question/NN/question that/IN/that we/PRP/we look/VBP/look at/NNP/at. so/RB/so /,/, let/VB/let us/PRP/us focus/VB/focus on/IN/on these/DT/these two/CD/two problems/NNP/problems. now/RB/now /,/, the/DT/the second/JJ/second problem/NN/problem which/WDT/which is/VBZ/is a/DT/a decision/NN/decision problem/NN/problem /,/, in/IN/in the/DT/the sense/NN/sense the/DT/the question/NN/question the/DT/the answer/NN/answer is/VBZ/is either/DT/either yes/NNS/yes or/CC/or no/NNP/no. so/RB/so /,/, that/IN/that is/VBZ/is fine/NN/fine /,/, now/RB/now if/IN/if you/PRP/you can/MD/can solve/VB/solve the/DT/the search/NN/search problem/NNP/problem. if/IN/if there/EX/there is/VBZ/is an/DT/an algorithm/NN/algorithm to/TO/to solve/VB/solve the/DT/the search/NN/search problem/NN/problem /,/, clearly/RB/clearly there/EX/there is/VBZ/is an/DT/an algorithm/NN/algorithm to/TO/to solve/VB/solve the/DT/the decision/NN/decision problem/NNP/problem. just/RB/just find/VBP/find the/DT/the clique/NN/clique and/CC/and find/VB/find the/DT/the size/NNP/size. if/IN/if the/DT/the size/NN/size is/VBZ/is k/NN/k or/CC/or larger/JJR/larger then/RB/then you/PRP/you are/VBP/are done/VBN/done the/DT/the graph/NN/graph does/VBZ/does have/VB/have a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, suppose/NN/suppose you/PRP/you have/VB/have an/DT/an algorithm/NN/algorithm for/IN/for this/NNP/this. how/WRB/how do/VBP/do you/PRP/you find/VB/find /,/, can/MD/can you/PRP/you solve/VB/solve the/DT/the search/NN/search problem/NN/problem well/RB/well the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes and/CC/and the/DT/the construction/NN/construction is/VBZ/is very/RB/very similar/JJ/similar to/TO/to what/WP/what we/PRP/we have/VBP/have done/VBN/done earlier/NNP/earlier. so/RB/so /,/, what/WDT/what you/PRP/you do/VBP/do is/VBZ/is first/JJ/first find/NN/find the/DT/the size/NN/size of/IN/of the/DT/the largest/JJS/largest clique/NNP/clique. you/PRP/you can/MD/can do/VB/do a/DT/a binary/JJ/binary search/NN/search on/IN/on k/NN/k /,/, feeding/VBG/feeding the/DT/the graph/NN/graph with/IN/with various/JJ/various values/NNS/values of/IN/of k/NNP/k. and/CC/and essentially/RB/essentially want/VBP/want to/TO/to find/VB/find /,/, the/DT/the largest/JJS/largest value/NN/value i/PRP/i mean/VBP/mean if/IN/if the/DT/the graph/NN/graph has/VBZ/has an/DT/an edge/NN/edge when/WRB/when you/PRP/you place/VBP/place two/CD/two /,/, the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. so/RB/so /,/, find/IN/find the/DT/the largest/JJS/largest k/NN/k for/IN/for which/WDT/which /,/, this/DT/this is/VBZ/is true/JJ/true /,/, this/DT/this we/PRP/we can/MD/can do/VB/do by/IN/by binary/JJ/binary search/NNP/search. you/PRP/you can/MD/can even/RB/even go/VB/go sequentially/RB/sequentially and/CC/and do/VBP/do this/DT/this k/NN/k equals/VBZ/equals 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 stop/NN/stop as/IN/as soon/RB/soon as/IN/as the/DT/the answer/NN/answer is/VBZ/is no/NNP/no. the/DT/the previous/JJ/previous one/CD/one was/VBD/was the/DT/the largest/JJS/largest clique/NN/clique size/NN/size of/IN/of the/DT/the largest/JJS/largest clique/NN/clique in/IN/in the/DT/the graph/NN/graph /,/, once/RB/once you/PRP/you found/VBD/found this/DT/this size/NNP/size. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 57/CD/57 /CD/) let/NN/let me/PRP/me write/VBP/write this/DT/this /,/, first/JJ/first the/DT/the hint/NN/hint i/PRP/i am/VBP/am going/VBG/going to/TO/to give/VB/give you/PRP/you more/JJR/more hint/JJ/hint /,/, the/DT/the hint/NN/hint is/VBZ/is first/JJ/first design/NN/design algorithm/NN/algorithm to/TO/to find/VB/find largest/JJS/largest cliques/NNS/cliques size/VBP/size or/CC/or size/NN/size of/IN/of the/DT/the largest/JJS/largest clique/NNP/clique. once/RB/once you/PRP/you do/VBP/do this/DT/this /,/, now/RB/now you/PRP/you use/VBP/use this/DT/this to/TO/to solve/VB/solve this/NNP/this. what/WP/what you/PRP/you do/VBP/do is/VBZ/is look/VB/look at/IN/at the/DT/the vertices/NNS/vertices one/CD/one by/IN/by one/CD/one /,/, throw/NN/throw away/RB/away vertex/NN/vertex and/CC/and ask/NN/ask does/VBZ/does this/DT/this graph/NN/graph /,/, what/WP/what is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the largest/JJS/largest clique/NN/clique in/IN/in this/DT/this graph/NNP/graph. if/IN/if it/PRP/it is/VBZ/is k/NN/k /,/, i/PRP/i mean/VBP/mean if/IN/if it/PRP/it is/VBZ/is you/PRP/you know/VBP/know same/JJ/same as/IN/as that/DT/that of/IN/of g/NNP/g. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just backtrack/VBP/backtrack a/DT/a little/RB/little bit/NNP/bit. so/RB/so /,/, first/JJ/first you/PRP/you feed/VBP/feed this/DT/this graph/NN/graph g/NN/g and/CC/and find/VB/find the/DT/the size/NN/size of/IN/of the/DT/the largest/JJS/largest clique/NN/clique /,/, let/VB/let us/PRP/us say/VB/say k/NN/k 0/CD/0. so/RB/so /,/, k/NN/k 0/-NONE-/0 is/VBZ/is size/NN/size of/IN/of the/DT/the largest/JJS/largest clique/NN/clique in/IN/in g/NNP/g. now/RB/now /,/, i/PRP/i remove/VBP/remove a/DT/a vertex/NN/vertex and/CC/and ask/NN/ask whether/IN/whether /,/, there/EX/there is/VBZ/is a/DT/a clique/NN/clique of/IN/of size/NN/size k/NN/k 0/-NONE-/0 in/IN/in this/DT/this graph/NNP/graph. if/IN/if yes/NNS/yes /,/, i/PRP/i throw/VBP/throw the/DT/the vertex/NN/vertex away/RB/away /,/, if/IN/if no/DT/no i/PRP/i retain/VBP/retain the/DT/the vertex/NNP/vertex. i/PRP/i go/VBP/go through/IN/through all/DT/all vertices/NNS/vertices and/CC/and at/IN/at the/DT/the end/NN/end /,/, i/PRP/i would/MD/would have/VB/have thrown/VBN/thrown away/RB/away every/DT/every vertex/NN/vertex except/IN/except /,/, k/NN/k 0/-NONE-/0 vertices/NNS/vertices and/CC/and these/DT/these will/MD/will form/VB/form a/DT/a clique/NNP/clique. this/DT/this is/VBZ/is very/RB/very similar/JJ/similar to/TO/to finding/NN/finding the/DT/the edges/NNS/edges in/IN/in the/DT/the hamiltonian/JJ/hamiltonian cycle/NN/cycle /,/, if/IN/if you/PRP/you did/VBD/did earlier/NNP/earlier. only/RB/only here/RB/here we/PRP/we throw/VBP/throw away/RB/away vertices/NNS/vertices /,/, instead/RB/instead of/IN/of edges/NNP/edges. so/RB/so /,/, i/PRP/i would/MD/would encourage/VB/encourage you/PRP/you to/TO/to /,/, i/PRP/i strongly/RB/strongly encourage/VBP/encourage you/PRP/you to/TO/to follow/VB/follow through/IN/through the/DT/the steps/NNS/steps /,/, which/WDT/which i/PRP/i have/VBP/have said/VBN/said and/CC/and make/VB/make sure/JJ/sure that/IN/that you/PRP/you can/MD/can do/VB/do this/NNP/this. given/VB/given an/DT/an algorithm/NN/algorithm that/IN/that solves/NNS/solves the/DT/the decision/NN/decision version/NN/version of/IN/of the/DT/the clique/NN/clique problem/NN/problem /,/, describe/NN/describe an/DT/an algorithm/NN/algorithm that/IN/that solves/NNS/solves the/DT/the search/NN/search version/NN/version of/IN/of the/DT/the clique/NNP/clique. so/RB/so /,/, now/RB/now /,/, the/DT/the decision/NN/decision version/NN/version seems/VBZ/seems to/TO/to be/VB/be as/RB/as hard/JJ/hard as/IN/as the/DT/the search/NN/search version/NN/version of/IN/of the/DT/the clique/NNP/clique. and/CC/and from/IN/from now/RB/now on/IN/on /,/, we/PRP/we will/MD/will focus/VB/focus on/IN/on the/DT/the decision/NN/decision version/NNP/version. can/MD/can we/PRP/we solve/VB/solve the/DT/the decision/NN/decision version/NN/version or/CC/or not/NNP/not. in/IN/in fact/NN/fact /,/, our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to show/VB/show that/IN/that the/DT/the decision/NN/decision version/NN/version is/VBZ/is among/IN/among the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in np/NN/np /,/, which/WDT/which means/VBZ/means if/IN/if there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm to/TO/to solve/VB/solve the/DT/the decision/NN/decision version/NN/version of/IN/of this/DT/this problem/NN/problem /,/, there/EX/there is/VBZ/is an/DT/an efficient/JJ/efficient algorithm/NN/algorithm to/TO/to solve/VB/solve all/DT/all problems/NNS/problems in/IN/in it/NNP/it. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 29/CD/29 np/-NONE-/np- completeness/NN/completeness ?/./? iv/NN/iv /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 00/CD/00 /:/: 55/CD/55 /CD/) let/NN/let us/PRP/us do/VBP/do a/DT/a quick/JJ/quick recap/NN/recap /,/, we/PRP/we have/VBP/have defined/VBN/defined problem/NN/problem called/VBN/called sat/NNP/sat. the/DT/the input/NN/input was/VBD/was sat/VBN/sat was/VBD/was clauses/NNS/clauses c/VBP/c 1/CD/1 /,/, c/NN/c 2/CD/2 so/RB/so on/IN/on up/IN/up to/TO/to c/NN/c m/NNP/m. each/DT/each clause/NN/clause was/VBD/was an/DT/an or/CC/or of/IN/of literals/NNP/literals. so/RB/so /,/, it/PRP/it could/MD/could be/VB/be something/NN/something like/IN/like x/NN/x i/PRP/i 1/CD/1 or/CC/or x/NN/x i/PRP/i 2/CD/2 or/CC/or so/RB/so on/IN/on up/IN/up to/TO/to i/PRP/i k/NNP/k. so/RB/so /,/, we/PRP/we had/VBD/had clauses/NNS/clauses c/VBP/c 1/CD/1 through/IN/through c/NN/c n/NN/n /,/, each/DT/each clause/NN/clause was/VBD/was of/IN/of this/DT/this form/NNP/form. and/CC/and the/DT/the formula/NN/formula we/PRP/we consider/VBP/consider is/VBZ/is the/DT/the think/NN/think of/IN/of the/DT/the formula/NN/formula c/NN/c 1/CD/1 and/CC/and c/NN/c 2/CD/2 and/CC/and c/NN/c 3/CD/3 so/RB/so on/IN/on up/IN/up to/TO/to and/CC/and c/VB/c m/NNP/m. and/CC/and the/DT/the question/NN/question we/PRP/we ask/VBP/ask is/VBZ/is /,/, is/VBZ/is this/DT/this formula/NN/formula satisfiable/NNP/satisfiable. in/IN/in other/JJ/other words/NNS/words /,/, is/VBZ/is there/EX/there an/DT/an assignment/NN/assignment of/IN/of values/NNS/values true/JJ/true or/CC/or false/NN/false to/TO/to the/DT/the variables/NNS/variables such/JJ/such that/IN/that the/DT/the formula/NN/formula evaluates/VBZ/evaluates to/TO/to true/NNP/true. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the question/NNP/question. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just go/VBP/go over/IN/over this/DT/this again/NN/again /,/, you/PRP/you have/VBP/have clauses/NNS/clauses c/VBP/c 1/CD/1 /,/, c/NN/c 2/CD/2 and/CC/and c/NN/c m/NNP/m. the/DT/the formula/NN/formula we/PRP/we are/VBP/are interested/JJ/interested in/IN/in is/VBZ/is c/NN/c 1/CD/1 and/CC/and c/NN/c 2/CD/2 and/CC/and c/NN/c 3/CD/3 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to c/NN/c m/NNP/m. each/DT/each of/IN/of these/DT/these c/NN/c i/PRP/i ?/./? s/NNS/s looks/VBZ/looks like/IN/like this/NNP/this. these/DT/these are/VBP/are you/PRP/you have/VBP/have x/NN/x i/PRP/i 1/CD/1 /,/, x/NN/x i/PRP/i 2/CD/2 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to x/VB/x i/PRP/i k/NNP/k. you/PRP/you could/MD/could also/RB/also have/VB/have negations/NNS/negations also/NNP/also. for/IN/for instance/NN/instance if/IN/if you/PRP/you put/VBD/put x/NN/x i/PRP/i 1/CD/1 or/CC/or x/NN/x i/PRP/i 2/CD/2 bar/NN/bar and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, each/DT/each clause/NN/clause is/VBZ/is an/DT/an or/CC/or of/IN/of literals/NNP/literals. and/CC/and the/DT/the formula/NN/formula is/VBZ/is an/DT/an and/CC/and of/IN/of clauses/NNP/clauses. and/CC/and the/DT/the question/NN/question you/PRP/you ask/VBP/ask is/VBZ/is /,/, is/VBZ/is this/DT/this formula/NN/formula satisfiable/NNP/satisfiable. in/IN/in other/JJ/other words/NNS/words /,/, is/VBZ/is there/EX/there a/DT/a assignment/NN/assignment of/IN/of values/NNS/values true/JJ/true or/CC/or false/NN/false to/TO/to each/DT/each variable/NNP/variable. such/JJ/such that/IN/that /,/, when/WRB/when you/PRP/you evaluate/VBP/evaluate this/DT/this formula/NN/formula /,/, the/DT/the formula/NN/formula evaluates/VBZ/evaluates to/TO/to true/JJ/true /,/, which/WDT/which means/VBZ/means /,/, in/IN/in each/DT/each clause/NN/clause when/WRB/when i/PRP/i look/VBP/look at/IN/at each/DT/each clause/NN/clause there/RB/there must/MD/must be/VB/be some/DT/some literal/JJ/literal /,/, which/WDT/which must/MD/must evaluate/VB/evaluate to/TO/to true/NNP/true. either/DT/either there/EX/there should/MD/should be/VB/be a/DT/a x/NN/x and/CC/and x/NN/x should/MD/should be/VB/be set/VBN/set to/TO/to true/JJ/true or/CC/or there/EX/there should/MD/should be/VB/be a/DT/a x/NN/x bar/NN/bar /,/, where/WRB/where x/NN/x is/VBZ/is said/VBN/said to/TO/to be/VB/be false/NNP/false. if/IN/if x/NN/x is/VBZ/is set/VBN/set to/TO/to false/VB/false x/NN/x bar/NN/bar is/VBZ/is true/NNP/true. so/RB/so /,/, in/IN/in each/DT/each clause/NN/clause there/RB/there must/MD/must be/VB/be at/IN/at least/JJS/least one/CD/one literal/JJ/literal /,/, which/WDT/which is/VBZ/is /,/, which/WDT/which evaluates/VBZ/evaluates to/TO/to true/NNP/true. then/RB/then we/PRP/we say/VBP/say the/DT/the formula/NN/formula evaluates/VBZ/evaluates to/TO/to true/JJ/true and/CC/and such/JJ/such an/DT/an assignment/NNP/assignment. an/DT/an assignment/NN/assignment to/TO/to these/DT/these variables/NNS/variables that/WDT/that gives/VBZ/gives you/PRP/you the/DT/the value/NN/value true/NN/true is/VBZ/is called/VBN/called the/DT/the satisfying/NN/satisfying assignment/NNP/assignment. so/RB/so /,/, the/DT/the question/NN/question we/PRP/we ask/VBP/ask given/VBN/given a/DT/a formula/NN/formula is/VBZ/is does/VBZ/does this/DT/this formula/NN/formula have/VBP/have a/DT/a satisfying/VBG/satisfying assignment/NN/assignment /,/, the/DT/the formula/NN/formula of/IN/of which/WDT/which are/VBP/are of/IN/of this/DT/this kind/NN/kind /,/, where/WRB/where you/PRP/you have/VBP/have and/CC/and of/IN/of clauses/NNS/clauses where/WRB/where each/DT/each clause/NN/clause is/VBZ/is or/CC/or of/IN/of literals/NNP/literals. these/DT/these formula/NN/formula ?/./? s/NNS/s are/VBP/are called/VBN/called formula/NN/formula ?/./? s/NNS/s in/IN/in cnf/NN/cnf conjunctive/JJ/conjunctive normal/JJ/normal form/NNP/form. this/DT/this all/DT/all this/DT/this means/VBZ/means all/DT/all are/VBP/are same/NNP/same. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NN/problem sat/NNP/sat. and/CC/and we/PRP/we also/RB/also had/VBD/had a/DT/a theorem/NNP/theorem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 53/CD/53 /CD/) so/RB/so /,/, this/DT/this theorem/NN/theorem is/VBZ/is due/JJ/due to/TO/to cook/VB/cook and/CC/and it/PRP/it is/VBZ/is called/VBN/called cook/NN/cook ?/./? s/NNS/s theorem/NNP/theorem. it/PRP/it states/VBZ/states that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for sat/NNP/sat. then/RB/then there/RB/there is/VBZ/is one/CD/one for/IN/for every/DT/every problem/NN/problem in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, if/IN/if there/EX/there exists/NNS/exists a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for sat/NN/sat there/EX/there is/VBZ/is one/CD/one for/IN/for all/DT/all problems/NNS/problems in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words satisfiability/NN/satisfiability /,/, the/DT/the problem/NN/problem sat/NN/sat is/VBZ/is among/IN/among the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in n/NN/n p/NNP/p. you/PRP/you can/MD/can solve/VB/solve this/DT/this efficiently/RB/efficiently /,/, which/WDT/which is/VBZ/is a/DT/a efficient/NN/efficient algorithm/NN/algorithm to/TO/to solve/VB/solve sat/NNP/sat. there/RB/there is/VBZ/is one/CD/one for/IN/for every/DT/every other/JJ/other problem/NN/problem in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, this/DT/this somehow/NN/somehow identified/VBD/identified one/CD/one problem/NN/problem /,/, which/WDT/which is/VBZ/is among/IN/among the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in sat/NNP/sat. in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is a/DT/a name/NN/name for/IN/for these/DT/these problems/NNP/problems. so/RB/so /,/, we/PRP/we call/VBP/call these/DT/these problems/NNS/problems n/VBP/n p/NN/p hard/RB/hard /,/, these/DT/these are/VBP/are hard/JJ/hard problems/NNS/problems in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, let/VB/let me/PRP/me define/VB/define this/NNP/this. so/RB/so /,/, a/DT/a problem/NN/problem is/VBZ/is called/VBN/called n/NN/n p/NN/p hard/RB/hard if/IN/if it/PRP/it has/VBZ/has the/DT/the following/VBG/following property/NNP/property. if/IN/if it/PRP/it has/VBZ/has the/DT/the above/NN/above property/NN/property which/WDT/which means/VBZ/means /,/, if/IN/if what/WP/what is/VBZ/is the/DT/the property/NN/property /,/, the/DT/the property/NN/property is/VBZ/is this/NNP/this. if/IN/if there/EX/there exists/NNS/exists a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for this/DT/this problem/NN/problem there/RB/there is/VBZ/is one/CD/one for/IN/for every/DT/every problem/NN/problem in/IN/in it/NNP/it. so/RB/so /,/, the/DT/the properties/NNS/properties we/PRP/we are/VBP/are looking/VBG/looking for/IN/for is/VBZ/is this/DT/this /,/, if/IN/if it/PRP/it has/VBZ/has a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NNP/algorithm. then/RB/then there/RB/there is/VBZ/is one/CD/one for/IN/for every/DT/every problem/NN/problem in/IN/in n/NN/n p/NNP/p. to/TO/to be/VB/be /:/( /-NONE-/( refer/VBP/refer time/NN/time /:/: 07/CD/07 /:/: 32/CD/32 /CD/) /CD/) more/JJR/more correct/JJ/correct we/PRP/we say/VBP/say that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm that/WDT/that solves/VBZ/solves this/DT/this problem/NNP/problem. then/RB/then there/RB/there is/VBZ/is one/CD/one for/IN/for every/DT/every problem/NN/problem in/IN/in it/NNP/it. so/RB/so /,/, these/DT/these are/VBP/are the/DT/the hardest/JJS/hardest among/IN/among the/DT/the problems/NNP/problems. and/CC/and hence/NN/hence /,/, they/PRP/they are/VBP/are called/VBN/called n/NN/n p/NN/p hard/NNP/hard. there/EX/there is/VBZ/is one/CD/one more/RBR/more definition/NN/definition i/PRP/i need/VBP/need /,/, which/WDT/which is/VBZ/is this/DT/this a/DT/a problem/NN/problem is/VBZ/is called/VBN/called n/NN/n p/NN/p complete/NNP/complete. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 07/CD/07 /:/: 56/CD/56 /CD/) a/DT/a problem/NN/problem is/VBZ/is n/VBN/n p/NN/p complete/NN/complete if/IN/if it/PRP/it has/VBZ/has to/TO/to satisfy/VB/satisfy two/CD/two things/NNP/things. let/NN/let us/PRP/us say/VBP/say /,/, this/DT/this problem/NN/problem is/VBZ/is pi/NNP/pi. pi/NN/pi must/MD/must belong/VB/belong to/TO/to n/VB/n p/NN/p and/CC/and pi/NN/pi is/VBZ/is n/VBN/n p/NN/p hard/NNP/hard. then/RB/then it/PRP/it is/VBZ/is called/VBN/called n/NN/n p/NN/p complete/NNP/complete. so/RB/so /,/, apart/NN/apart from/IN/from being/VBG/being among/IN/among the/DT/the hardest/JJS/hardest problems/NNS/problems of/IN/of n/NN/n p/NNP/p. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 08/CD/08 /:/: 28/CD/28 /CD/) /CD/) it/PRP/it should/MD/should be/VB/be see/VB/see when/WRB/when you/PRP/you say/VBP/say a/DT/a problem/NN/problem is/VBZ/is n/VBN/n p/NN/p hard/NNP/hard. we/PRP/we do/VBP/do not/RB/not require/VB/require the/DT/the problem/NN/problem to/TO/to in/IN/in n/NN/n p/NNP/p. the/DT/the problem/NN/problem could/MD/could be/VB/be outside/IN/outside n/NN/n p/NNP/p. as/IN/as long/RB/long as/IN/as it/PRP/it has/VBZ/has the/DT/the property/NN/property that/IN/that if/IN/if you/PRP/you can/MD/can solve/VB/solve this/DT/this problem/NNP/problem. you/PRP/you can/MD/can solve/VB/solve everything/NN/everything else/RB/else in/IN/in n/NN/n p/NN/p it/PRP/it is/VBZ/is called/VBN/called n/NN/n p/NN/p hard/NNP/hard. but/CC/but /,/, for/IN/for n/NN/n p/NN/p complete/NN/complete we/PRP/we require/VBP/require the/DT/the problem/NN/problem to/TO/to be/VB/be in/IN/in it/NNP/it. the/DT/the problem/NN/problem should/MD/should be/VB/be in/IN/in n/NN/n p/NN/p and/CC/and it/PRP/it should/MD/should be/VB/be also/RB/also be/VB/be n/VBN/n p/NNP/p. that/IN/that is/VBZ/is the/DT/the only/JJ/only difference/NNP/difference. so/RB/so /,/, now/RB/now we/PRP/we can/MD/can state/VB/state cook/NN/cook ?/./? s/NNS/s theorem/VBP/theorem in/IN/in a/DT/a different/JJ/different way/NNP/way. the/DT/the theorem/NN/theorem due/JJ/due to/TO/to cook/VB/cook /,/, it/PRP/it states/VBZ/states that/IN/that sat/JJ/sat is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. we/PRP/we saw/VBD/saw that/IN/that sat/JJ/sat was/VBD/was in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, sat/IN/sat belonged/JJ/belonged to/TO/to n/VB/n p/NN/p and/CC/and cook/NN/cook ?/./? s/NNS/s theorem/VBP/theorem essentially/RB/essentially says/VBZ/says it/PRP/it is/VBZ/is also/RB/also n/RB/n p/VB/p hard/NNP/hard. so/RB/so /,/, it/PRP/it means/VBZ/means /,/, that/IN/that putting/VBG/putting these/DT/these two/CD/two things/NNS/things together/RB/together /,/, we/PRP/we know/VBP/know that/IN/that sat/JJ/sat is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. essentially/RB/essentially /,/, n/NN/n p/NN/p complete/NN/complete problems/NNS/problems are/VBP/are just/RB/just to/TO/to state/VB/state it/PRP/it again/NNP/again. they/PRP/they are/VBP/are among/IN/among the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in n/NN/n p/NNP/p. they/PRP/they have/VBP/have to/TO/to be/VB/be in/IN/in n/NN/n p/NN/p and/CC/and they/PRP/they are/VBP/are among/IN/among the/DT/the hardest/JJS/hardest problems/NNP/problems. so/RB/so /,/, our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to add/VB/add many/JJ/many problems/NNS/problems to/TO/to this/DT/this set/NNP/set. this/DT/this set/NN/set of/IN/of n/NN/n p/NN/p complete/NN/complete problems/NNS/problems and/CC/and will/MD/will begin/VB/begin with/IN/with clique/JJ/clique /,/, which/WDT/which also/RB/also we/PRP/we defined/VBD/defined last/JJ/last time/NNP/time. so/IN/so /,/, let/VB/let me/PRP/me just/RB/just define/VBP/define problem/NN/problem clique/NNP/clique. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 11/CD/11 /CD/) so/RB/so /,/, problem/NN/problem clique/NN/clique is/VBZ/is as/IN/as follows/NNS/follows /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NNP/g. and/CC/and the/DT/the positive/JJ/positive integer/NN/integer k/NNP/k. and/CC/and the/DT/the question/NN/question we/PRP/we ask/VBP/ask is/VBZ/is this/NNP/this. does/VBZ/does g/NN/g have/VBP/have a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, this/DT/this is/VBZ/is clique/NN/clique /,/, we/PRP/we saw/VBD/saw last/JJ/last time/NN/time that/IN/that this/DT/this problem/NN/problem is/VBZ/is in/IN/in n/NN/n p/NNP/p. we/PRP/we gave/VBD/gave there/RB/there was/VBD/was a/DT/a proof/NN/proof that/WDT/that /,/, the/DT/the prover/NN/prover could/MD/could give/VB/give the/DT/the verifier/NNP/verifier. so/RB/so /,/, that/IN/that the/DT/the verifier/NN/verifier by/IN/by looking/VBG/looking at/IN/at the/DT/the proof/NN/proof and/CC/and the/DT/the input/NN/input would/MD/would check/VB/check that/IN/that a/DT/a given/VBN/given graph/NN/graph /,/, in/IN/in fact/NN/fact /,/, did/VBD/did have/VB/have a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. our/PRP$/our objective/NN/objective now/RB/now is/VBZ/is to/TO/to prove/VB/prove the/DT/the other/JJ/other part/NN/part /,/, which/WDT/which is/VBZ/is the/DT/the clique/NN/clique is/VBZ/is n/VBN/n p/NN/p hard/RB/hard /,/, which/WDT/which means/VBZ/means /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm to/TO/to solve/VB/solve clique/JJ/clique /,/, there/EX/there is/VBZ/is one/CD/one to/TO/to solve/VB/solve everything/NN/everything else/RB/else in/IN/in n/NN/n p/NNP/p. again/RB/again /,/, we/PRP/we saw/VBD/saw i/PRP/i think/VBP/think i/PRP/i sort/NN/sort of/IN/of entire/JJ/entire how/WRB/how will/MD/will do/VB/do this/DT/this and/CC/and this/DT/this is/VBZ/is how/WRB/how we/PRP/we do/VBP/do it/NNP/it. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/NNP/this. we/PRP/we have/VBP/have to/TO/to use/VB/use cooks/NNS/cooks theorem/PRP/theorem to/TO/to do/VB/do this/NNP/this. so/RB/so /,/, we/PRP/we show/VBP/show the/DT/the following/VBG/following /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for clique/NNP/clique. we/PRP/we will/MD/will show/VB/show that/IN/that this/DT/this implies/NNS/implies then/RB/then there/RB/there is/VBZ/is one/CD/one for/IN/for let/NN/let me/PRP/me remove/VBP/remove this/DT/this clique/NNP/clique. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time for/IN/for clique/NN/clique will/MD/will imply/RB/imply that/IN/that there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for sat/NNP/sat. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we will/MD/will prove/NNP/prove. there/RB/there is/VBZ/is a/DT/a polynomial/JJ/polynomial given/VBN/given there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for clique/NN/clique will/MD/will show/VB/show that/IN/that /,/, we/PRP/we will/MD/will construct/VB/construct a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for sat/NNP/sat. now/RB/now /,/, cook/VBP/cook ?/./? s/NNS/s theorem/VBP/theorem says/VBZ/says that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for sat/NN/sat there/EX/there is/VBZ/is one/CD/one for/IN/for everything/NN/everything in/IN/in n/NN/n p/NN/p and/CC/and we/PRP/we will/MD/will use/VB/use this/NNP/this. so/RB/so /,/, just/RB/just following/VBG/following these/DT/these two/CD/two implications/NNS/implications we/PRP/we can/MD/can see/VB/see that/IN/that /,/, we/PRP/we prove/VBP/prove what/WP/what we/PRP/we want/NNP/want. so/RB/so /,/, all/DT/all that/DT/that remains/VBZ/remains now/RB/now is/VBZ/is i/PRP/i will/MD/will assume/VB/assume that/IN/that there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for clique/NNP/clique. and/CC/and i/PRP/i will/MD/will construct/VB/construct one/CD/one for/IN/for sat/NNP/sat. so/RB/so /,/, here/RB/here is/VBZ/is how/WRB/how we/PRP/we do/VBP/do it/NNP/it. so/RB/so /,/, we/PRP/we have/VBP/have a/DT/a algorithm/NN/algorithm for/IN/for clique/NNP/clique. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 01/CD/01 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is given/VBN/given /,/, we/PRP/we are/VBP/are given/VBN/given an/DT/an algorithm/NN/algorithm for/IN/for clique/NNP/clique. now/RB/now /,/, what/WDT/what does/VBZ/does this/DT/this state/NN/state input/NNP/input. it/PRP/it takes/VBZ/takes input/NN/input as/IN/as graph/NN/graph g/NN/g /,/, it/PRP/it takes/VBZ/takes k/NNP/k. and/CC/and it/PRP/it says/VBZ/says yes/VBZ/yes if/IN/if the/DT/the graph/NN/graph is/VBZ/is a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. and/CC/and it/PRP/it says/VBZ/says no/DT/no otherwise/NNP/otherwise. now/RB/now /,/, what/WDT/what we/PRP/we want/VBP/want is/VBZ/is this/NNP/this. we/PRP/we want/VBP/want a/DT/a black/JJ/black box/NN/box /,/, which/WDT/which will/MD/will take/NNP/take. so/RB/so /,/, this/DT/this is/VBZ/is beyond/IN/beyond a/DT/a algorithm/NN/algorithm for/IN/for sat/NNP/sat. so/RB/so /,/, the/DT/the input/NN/input to/TO/to the/DT/the sat/NN/sat is/VBZ/is a/DT/a collection/NN/collection of/IN/of clause/NN/clause /,/, so/RB/so c/JJ/c 1/CD/1 and/CC/and c/NN/c 2/CD/2 /,/, c/NN/c m/NNP/m. now/RB/now /,/, you/PRP/you want/VBP/want to/TO/to know/VB/know whether/IN/whether it/PRP/it is/VBZ/is satisfiable/JJ/satisfiable or/CC/or not/NNP/not. now/RB/now /,/, what/WDT/what do/VBP/do these/DT/these two/CD/two answers/NNS/answers /,/, so/RB/so somehow/RB/somehow /,/, we/PRP/we have/VBP/have this/DT/this sub/NN/sub routine/NNP/routine. we/PRP/we have/VBP/have to/TO/to use/VB/use this/DT/this as/IN/as a/DT/a sub/NN/sub routine/NN/routine to/TO/to solve/VB/solve this/DT/this problem/NNP/problem. so/RB/so /,/, here/RB/here is/VBZ/is an/DT/an example/NN/example /,/, where/WRB/where actually/RB/actually the/DT/the two/CD/two things/NNS/things actually/RB/actually look/VBP/look quite/RB/quite different/NNP/different. this/DT/this is/VBZ/is a/DT/a problem/NN/problem on/IN/on you/PRP/you know/VBP/know it/PRP/it is/VBZ/is something/VBG/something to/TO/to do/VB/do with/IN/with logic/NNP/logic. you/PRP/you have/VBP/have all/DT/all this/DT/this variables/NNS/variables and/CC/and you/PRP/you have/VBP/have clause/NN/clause this/DT/this is/VBZ/is a/DT/a problem/NN/problem on/IN/on graph/NNP/graph. so/IN/so /,/, this/DT/this is/VBZ/is available/JJ/available in/IN/in a/DT/a sub/NN/sub routine/NN/routine and/CC/and we/PRP/we want/VBP/want to/TO/to construct/VB/construct something/NNP/something. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we sort/VB/sort of/IN/of use/NN/use something/NN/something /,/, sub/NN/sub routine/NN/routine which/WDT/which /-NONE-/( /VBP/( refer/NN/refer time/NN/time /:/: 14/CD/14 /:/: 27/CD/27 /CD/) /CD/) graphs/NNS/graphs to/TO/to construct/VB/construct to/TO/to determine/VB/determine whether/IN/whether a/DT/a formula/NN/formula is/VBZ/is satifiable/JJ/satifiable or/CC/or not/NNP/not. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a trick/NNP/trick. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/NNP/this. so/RB/so /,/, we/PRP/we take/VBP/take these/DT/these clause/NNP/clause. so/RB/so /,/, we/PRP/we take/VBP/take c/NN/c 1/CD/1 through/IN/through c/NN/c n/NNP/n. now/RB/now /,/, somehow/WRB/somehow i/PRP/i will/MD/will tell/VB/tell you/PRP/you how/WRB/how /,/, to/TO/to construct/VB/construct a/DT/a graph/NN/graph g/NN/g and/CC/and some/DT/some k/NNP/k. feed/VBD/feed this/DT/this to/TO/to feed/VB/feed into/IN/into /,/, so/RB/so it/PRP/it is/VBZ/is called/VBN/called this/DT/this algorithm/NN/algorithm clique/NN/clique into/IN/into clique/NNP/clique. and/CC/and if/IN/if this/DT/this says/VBZ/says yes/VBZ/yes /,/, we/PRP/we will/MD/will say/VB/say that/IN/that the/DT/the formula/NN/formula is/VBZ/is satisfiable/NNP/satisfiable. if/IN/if this/DT/this says/VBZ/says no/DT/no /,/, we/PRP/we will/MD/will say/VB/say not/RB/not satisfiable/NNP/satisfiable. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at this/NNP/this. we/PRP/we take/VBP/take these/DT/these formulas/NNS/formulas ?/./? s/NNS/s c/VBP/c 1/CD/1 through/IN/through c/NN/c m/NNP/m. we/PRP/we construct/VBP/construct some/DT/some graph/NN/graph g/NN/g and/CC/and some/DT/some k/NNP/k. and/CC/and we/PRP/we feed/VBP/feed this/DT/this into/IN/into sub/NN/sub routine/NN/routine feed/NNP/feed. now/RB/now /,/, this/DT/this will/MD/will say/VB/say yes/NNS/yes or/CC/or no/DT/no /,/, if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes means/NNS/means we/PRP/we will/MD/will we/VB/we want/JJ/want to/TO/to say/VB/say that/IN/that /,/, the/DT/the formula/NN/formula is/VBZ/is satisfiable/NNP/satisfiable. it/PRP/it says/VBZ/says no/DT/no then/RB/then we/PRP/we will/MD/will say/VB/say no/NNP/no. now/RB/now /,/, how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/DT/this transformation/NNP/transformation. from/IN/from these/DT/these clauses/NNS/clauses we/PRP/we have/VBP/have to/TO/to construct/VB/construct a/DT/a graph/NNP/graph. and/CC/and from/IN/from a/DT/a clique/NN/clique /,/, what/WP/what we/PRP/we get/VBP/get as/IN/as output/NN/output is/VBZ/is graph/NN/graph has/VBZ/has a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. somehow/NN/somehow clique/NN/clique of/IN/of size/NN/size k/NN/k should/MD/should indicate/VB/indicate that/IN/that the/DT/the formula/NN/formula is/VBZ/is satisfiable/NNP/satisfiable. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see how/WRB/how this/DT/this is/VBZ/is done/NNP/done. so/RB/so /,/, you/PRP/you take/VBP/take the/DT/the formula/NN/formula c/NN/c 1/CD/1 through/IN/through c/NN/c m/NNP/m. and/CC/and here/RB/here is/VBZ/is how/WRB/how you/PRP/you construct/VBP/construct the/DT/the graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 16/CD/16 /:/: 32/CD/32 /CD/) so/RB/so /,/, here/RB/here are/VBP/are the/DT/the clauses/NNS/clauses c/VBP/c 1/CD/1 /,/, c/NN/c 2/CD/2 so/RB/so on/IN/on up/IN/up to/TO/to c/NN/c m/NNP/m. now/RB/now /,/, for/IN/for each/DT/each clause/NN/clause i/PRP/i will/MD/will have/VB/have a/DT/a number/NN/number of/IN/of vertices/NNS/vertices in/IN/in the/DT/the graph/NNP/graph. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say /,/, c/NN/c 1/CD/1 x/NN/x 5/CD/5. i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what /,/, this/DT/this x/NN/x 5/CD/5 are/VBP/are x/JJ/x 7/CD/7 bar/NN/bar /,/, c/NN/c 1/CD/1 /,/, x/NN/x t/NN/t bar/NNP/bar. if/IN/if the/DT/the clause/NN/clause c/NN/c 1/CD/1 were/VBD/were x/NN/x 5/CD/5 /,/, x/NN/x 7/CD/7 bar/NN/bar or/CC/or /,/, or/CC/or /,/, or/CC/or up/RP/up to/TO/to or/CC/or x/VB/x t/NN/t bar/NNP/bar. then/RB/then i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex for/IN/for which/WDT/which each/DT/each of/IN/of them/NNP/them. in/IN/in other/JJ/other words/NNS/words /,/, i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex for/IN/for each/DT/each literal/JJ/literal clause/NN/clause literal/JJ/literal pair/NNP/pair. so/RB/so /,/, a/DT/a literal/JJ/literal appears/NNS/appears in/IN/in a/DT/a clause/NN/clause i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex for/IN/for that/NNP/that. similarly/RB/similarly /,/, i/PRP/i have/VBP/have listed/VBN/listed them/PRP/them for/IN/for c/NN/c 2/CD/2 so/RB/so on/NNP/on. so/IN/so /,/, c/NN/c m/NN/m will/MD/will have/VB/have it/PRP/it is/VBZ/is own/JJ/own set/NN/set of/IN/of vertices/NNP/vertices. so/RB/so /,/, for/IN/for each/DT/each clause/NN/clause literal/JJ/literal pair/NN/pair i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex i/PRP/i have/VBP/have divided/VBN/divided the/DT/the vertex/NN/vertex set/VBD/set into/IN/into these/DT/these end/NN/end parts/NNS/parts one/CD/one for/IN/for clause/NNP/clause. now/RB/now /,/, what/WDT/what do/VBP/do we/PRP/we want/VBP/want is/VBZ/is that/IN/that /,/, from/IN/from a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. we/PRP/we still/RB/still have/VBP/have not/RB/not specified/VBN/specified what/WP/what k/NN/k is/VBZ/is from/IN/from a/DT/a clique/NN/clique of/IN/of size/NN/size k/NN/k i/PRP/i should/MD/should be/VB/be able/JJ/able to/TO/to figure/VB/figure out/RP/out that/IN/that there/EX/there is/VBZ/is a/DT/a satisfying/NN/satisfying assignment/NNP/assignment. so/RB/so /,/, what/WDT/what does/VBZ/does the/DT/the satisfying/NN/satisfying assignment/NN/assignment look/NN/look like/IN/like /,/, the/DT/the satisfying/NN/satisfying assignment/NN/assignment essentially/RB/essentially says/VBZ/says /,/, for/IN/for each/DT/each clause/NN/clause which/WDT/which of/IN/of them/PRP/them i/PRP/i can/MD/can set/VB/set to/TO/to true/VB/true /,/, which/WDT/which literal/JJ/literal i/PRP/i could/MD/could set/VB/set to/TO/to true/NNP/true. may/MD/may be/VB/be i/PRP/i can/MD/can set/VB/set x/NN/x 7/CD/7 bar/NN/bar to/TO/to true/VB/true /,/, which/WDT/which means/VBZ/means x/NN/x 7/CD/7 to/TO/to false/NNP/false. so/RB/so /,/, may/MD/may be/VB/be here/RB/here i/PRP/i have/VBP/have c/JJ/c 2/CD/2 and/CC/and x/NN/x 30/CD/30. may/MD/may be/VB/be x/NN/x 30/CD/30 i/PRP/i can/MD/can set/VB/set to/TO/to true/NNP/true. somewhere/RB/somewhere /,/, down/RB/down the/DT/the line/NN/line let/VBD/let us/PRP/us say/VBP/say /,/, c/NN/c 45/CD/45 i/PRP/i have/VBP/have x/NN/x 30/CD/30 bar/NNP/bar. i/PRP/i could/MD/could have/VB/have x/NN/x 30/CD/30 here/RB/here and/CC/and x/NN/x 30/CD/30 bar/NN/bar elsewhere/RB/elsewhere and/CC/and so/RB/so on/NNP/on. now/RB/now /,/, somehow/WRB/somehow each/DT/each of/IN/of these/DT/these clauses/NNS/clauses i/PRP/i want/VBP/want to/TO/to set/VB/set one/CD/one of/IN/of them/PRP/them to/TO/to be/VB/be true/NNP/true. i/PRP/i want/VBP/want to/TO/to make/VB/make that/IN/that one/CD/one of/IN/of them/PRP/them is/VBZ/is true/NNP/true. and/CC/and this/DT/this i/NN/i should/MD/should be/VB/be able/JJ/able to/TO/to pick/VB/pick out/RP/out with/IN/with a/DT/a clique/NNP/clique. so/RB/so /,/, it/PRP/it stands/VBZ/stands to/TO/to reason/NN/reason that/IN/that i/PRP/i would/MD/would have/VB/have a/DT/a clique/NN/clique of/IN/of size/NN/size m/NNP/m. and/CC/and this/DT/this clique/NN/clique i/PRP/i should/MD/should pick/VB/pick by/IN/by picking/NN/picking one/CD/one vertex/NN/vertex from/IN/from each/DT/each of/IN/of these/DT/these sets/NNP/sets. i/PRP/i should/MD/should be/VB/be able/JJ/able to/TO/to pick/VB/pick one/CD/one vertex/NN/vertex from/IN/from each/DT/each of/IN/of these/DT/these sets/NNS/sets /,/, if/IN/if i/PRP/i am/VBP/am picking/VBG/picking only/RB/only one/CD/one vertex/NN/vertex from/IN/from each/DT/each of/IN/of these/DT/these sets/NNP/sets. then/RB/then each/DT/each of/IN/of these/DT/these sets/NNS/sets may/MD/may be/VB/be an/DT/an independent/JJ/independent set/NNP/set. i/PRP/i do/VBP/do not/RB/not want/VB/want edges/NNS/edges between/IN/between any/DT/any of/IN/of these/NNP/these. all/DT/all the/DT/the edges/NNS/edges in/IN/in the/DT/the graph/NN/graph /:/( /:/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 21/CD/21 /CD/) /CD/) may/MD/may only/RB/only go/VB/go between/IN/between vertices/NNS/vertices /:/( /:/( refer/NN/refer time/NN/time /:/: 19/CD/19 /:/: 23/CD/23 /CD/) /CD/) /./. now/RB/now /,/, let/VB/let us/PRP/us look/VB/look at/IN/at these/DT/these two/CD/two c/NN/c 2/CD/2 30/CD/30 and/CC/and c/NN/c 45/CD/45 x/NN/x 30/CD/30 bar/NNP/bar. now/RB/now /,/, clearly/RB/clearly i/PRP/i can/MD/can not/RB/not if/IN/if i/PRP/i say/VBP/say this/DT/this is/VBZ/is true/JJ/true /,/, i/PRP/i can/MD/can not/RB/not set/VB/set this/DT/this to/TO/to true/VB/true /,/, this/DT/this will/MD/will immediately/RB/immediately become/VB/become false/JJ/false /,/, which/WDT/which means/VBZ/means /,/, i/PRP/i should/MD/should not/RB/not be/VB/be able/JJ/able to/TO/to pick/VB/pick these/DT/these two/CD/two in/IN/in my/PRP$/my clique/NNP/clique. remember/NN/remember /,/, the/DT/the way/NN/way we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get from/IN/from a/DT/a clique/NN/clique to/TO/to a/DT/a satisfying/NN/satisfying assignment/NN/assignment is/VBZ/is /,/, when/WRB/when i/PRP/i pick/VBP/pick the/DT/the vertices/NNS/vertices in/IN/in the/DT/the clique/NN/clique they/PRP/they will/MD/will decide/VB/decide /,/, which/WDT/which literal/JJ/literal in/IN/in a/DT/a clause/NN/clause is/VBZ/is satisfied/NNP/satisfied. this/DT/this is/VBZ/is roughly/RB/roughly the/DT/the intuition/NN/intuition that/IN/that i/PRP/i want/NNP/want. so/RB/so /,/, from/IN/from each/DT/each vertex/NN/vertex the/DT/the clique/NN/clique i/PRP/i will/MD/will pick/VB/pick one/CD/one vertex/NN/vertex from/IN/from a/DT/a clause/NNP/clause. and/CC/and you/PRP/you can/MD/can tell/VB/tell me/PRP/me which/WDT/which i/PRP/i can/MD/can /,/, which/WDT/which is/VBZ/is the/DT/the literal/JJ/literal which/WDT/which is/VBZ/is satisfied/NNP/satisfied. so/RB/so /,/, if/IN/if i/PRP/i pick/VBP/pick x/NN/x 30/CD/30 in/IN/in clique/NN/clique 2/CD/2 /,/, i/PRP/i can/MD/can not/RB/not pick/VB/pick x/NN/x 30/CD/30 bar/NN/bar in/IN/in clique/NN/clique 30/CD/30 or/CC/or 37/CD/37. so/RB/so /,/, these/DT/these two/CD/two i/PRP/i should/MD/should not/RB/not be/VB/be able/JJ/able to/TO/to pick/VB/pick /,/, which/WDT/which means/VBZ/means there/RB/there should/MD/should not/RB/not be/VB/be any/DT/any edge/NN/edge between/IN/between them/NNP/them. otherwise/NN/otherwise /,/, i/PRP/i can/MD/can add/VB/add all/PDT/all the/DT/the vertices/NNP/vertices. so/RB/so /,/, this/DT/this roughly/RB/roughly actually/RB/actually is/VBZ/is the/DT/the concept/NNP/concept. so/RB/so /,/, let/VB/let me/PRP/me formally/RB/formally tell/VBP/tell you/PRP/you what/WP/what the/DT/the construction/NN/construction is/VBZ/is construction/NN/construction of/IN/of the/DT/the graph/NN/graph is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 38/CD/38 /CD/) so/RB/so /,/, the/DT/the vertex/NN/vertex set/NNP/set. so/RB/so /,/, vertex/NN/vertex set/VBD/set v/NN/v is/VBZ/is consists/NNS/consists of/IN/of c/NN/c and/CC/and l/NN/l /,/, where/WRB/where literal/NNP/literal. let/VB/let me/PRP/me /,/, make/VBP/make this/DT/this c/NN/c i/PRP/i and/CC/and l/NN/l /,/, literal/JJ/literal l/NN/l belongs/NNS/belongs to/TO/to clause/VB/clause c/NN/c i/NNP/i. so/RB/so /,/, there/EX/there is/VBZ/is one/CD/one for/IN/for each/DT/each clause/NN/clause literal/JJ/literal pair/NN/pair /,/, if/IN/if the/DT/the literal/JJ/literal belongs/NNS/belongs to/TO/to that/DT/that clause/NNP/clause. so/RB/so /,/, what/WDT/what are/VBP/are the/DT/the edges/NNS/edges /,/, this/DT/this is/VBZ/is the/DT/the vertices/NNS/vertices edge/VBP/edge set/VBN/set is/VBZ/is c/NN/c i/PRP/i /,/, x/VBP/x and/CC/and c/NN/c j/NNP/j. y/NN/y is/VBZ/is an/DT/an edge/NNP/edge. if/IN/if and/CC/and only/RB/only if/IN/if first/JJ/first of/IN/of all/DT/all i/PRP/i is/VBZ/is not/RB/not equal/JJ/equal to/TO/to j/VB/j /,/, because/IN/because edges/NNS/edges flow/VBP/flow only/RB/only between/IN/between vertices/NNS/vertices corresponding/VBG/corresponding to/TO/to different/JJ/different clauses/NNS/clauses and/CC/and x/NN/x is/VBZ/is not/RB/not y/JJ/y bar/NNP/bar. because/IN/because /,/, if/IN/if x/NN/x is/VBZ/is equal/JJ/equal to/TO/to y/VB/y bar/NNP/bar. then/RB/then i/PRP/i do/VBP/do not/RB/not i/PRP/i can/MD/can not/RB/not pick/VB/pick both/DT/both of/IN/of them/PRP/them in/IN/in my/PRP$/my clique/NNP/clique. so/RB/so /,/, i/PRP/i can/MD/can pick/VB/pick both/DT/both of/IN/of them/PRP/them in/IN/in the/DT/the clique/NN/clique /,/, if/IN/if they/PRP/they have/VBP/have different/JJ/different variables/NNS/variables all/DT/all together/NNP/together. one/CD/one is/VBZ/is x/NN/x 15/CD/15 another/DT/another is/VBZ/is x/NN/x 30/CD/30 /,/, it/PRP/it does/VBZ/does not/RB/not matter/VB/matter what/WP/what value/NN/value i/PRP/i set/VBD/set to/TO/to it/NNP/it. but/CC/but /,/, i/PRP/i can/MD/can not/RB/not pick/VB/pick x/NN/x and/CC/and x/NN/x bar/NN/bar together/NNP/together. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the graph/NN/graph and/CC/and k/NN/k is/VBZ/is m/NNP/m. so/RB/so /,/, given/VBN/given my/PRP$/my clauses/NNS/clauses /,/, set/VBN/set of/IN/of clauses/NNS/clauses i/PRP/i construct/VBP/construct this/DT/this instance/NN/instance of/IN/of clique/NNP/clique. i/PRP/i feed/VBP/feed it/PRP/it into/IN/into the/DT/the sub/NN/sub routine/NN/routine for/IN/for clique/NNP/clique. if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes /,/, it/PRP/it has/VBZ/has a/DT/a clique/NN/clique of/IN/of size/NN/size m/NNP/m. when/WRB/when i/PRP/i say/VBP/say yes/NNS/yes /,/, the/DT/the formula/NN/formula is/VBZ/is satisfiable/JJ/satisfiable /,/, if/IN/if say/NN/say no/DT/no i/PRP/i say/VBP/say the/DT/the formula/NN/formula is/VBZ/is not/RB/not satisfiable/NNP/satisfiable. so/RB/so /,/, let/VB/let us/PRP/us actually/RB/actually /,/, formally/RB/formally prove/VBP/prove this/NNP/this. so/RB/so /,/, if/IN/if we/PRP/we actually/RB/actually /,/, informally/RB/informally argued/VBD/argued this/DT/this /,/, but/CC/but let/VB/let us/PRP/us quickly/RB/quickly sort/NN/sort of/IN/of do/NN/do a/DT/a recap/NNP/recap. so/RB/so /,/, supposing/VBG/supposing the/DT/the formula/NN/formula is/VBZ/is satisfiable/NNP/satisfiable. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 00/CD/00 /CD/) so/RB/so /,/, if/IN/if formula/NN/formula is/VBZ/is satisfiable/JJ/satisfiable /,/, what/WP/what does/VBZ/does this/DT/this mean/NN/mean in/IN/in each/DT/each clause/NNP/clause. so/RB/so /,/, look/VBP/look at/IN/at any/DT/any satisfying/VBG/satisfying assignments/NNP/assignments. if/IN/if there/EX/there is/VBZ/is a/DT/a satisfying/NN/satisfying assignment/NN/assignment look/NN/look at/IN/at any/DT/any satisfying/VBG/satisfying assignment/NN/assignment /,/, in/IN/in each/DT/each clause/NN/clause some/DT/some literal/JJ/literal will/MD/will be/VB/be true/NNP/true. so/RB/so /,/, pick/NN/pick all/DT/all this/DT/this /,/, so/RB/so pick/VB/pick these/DT/these vertices/NNS/vertices in/IN/in the/DT/the clique/NNP/clique. so/RB/so /,/, we/PRP/we have/VBP/have picked/VBN/picked m/NN/m vertices/NNP/vertices. so/RB/so /,/, we/PRP/we have/VBP/have picked/VBN/picked one/CD/one vertex/NN/vertex per/IN/per clause/NN/clause though/IN/though we/PRP/we have/VBP/have m/NN/m vertices/NNP/vertices. and/CC/and clearly/RB/clearly /,/, there/EX/there will/MD/will be/VB/be a/DT/a edge/NN/edge between/IN/between any/DT/any two/CD/two of/IN/of them/NNP/them. because/IN/because /,/, firstly/RB/firstly they/PRP/they are/VBP/are in/IN/in different/JJ/different clauses/NNP/clauses. and/CC/and if/IN/if they/PRP/they are/VBP/are the/DT/the same/JJ/same sort/NN/sort of/IN/of they/PRP/they used/VBD/used the/DT/the same/JJ/same variable/NNP/variable. then/RB/then they/PRP/they can/MD/can not/RB/not be/VB/be negations/NNS/negations of/IN/of each/DT/each other/NNP/other. so/RB/so /,/, these/DT/these in/IN/in fact/NN/fact /,/, form/NN/form a/DT/a clique/NN/clique in/IN/in the/DT/the graph/NNP/graph. and/CC/and in/IN/in fact/NN/fact /,/, the/DT/the other/JJ/other sort/NN/sort of/IN/of other/JJ/other direction/NN/direction is/VBZ/is also/RB/also similar/NNP/similar. so/RB/so /,/, take/VB/take a/DT/a clique/NN/clique of/IN/of size/NN/size m/NN/m /,/, which/WDT/which means/VBZ/means there/RB/there exists/VBZ/exists one/CD/one vertex/NN/vertex per/IN/per clause/NNP/clause. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to set/VB/set these/DT/these literals/NNS/literals to/TO/to true/NNP/true. so/RB/so /,/, these/DT/these literals/NNS/literals which/WDT/which corresponds/NNS/corresponds to/TO/to these/DT/these vertices/NNS/vertices set/VBD/set them/PRP/them to/TO/to true/NNP/true. and/CC/and you/PRP/you can/MD/can check/VB/check that/IN/that this/DT/this can/MD/can be/VB/be a/DT/a satisfying/NN/satisfying assignment/NN/assignment /,/, in/IN/in this/DT/this clique/NN/clique with/IN/with a/DT/a variable/JJ/variable x/NN/x appears/VBZ/appears x/NN/x bar/NN/bar will/MD/will not/RB/not appear/NNP/appear. so/RB/so /,/, this/DT/this will/MD/will not/RB/not be/VB/be a/DT/a satisfying/NN/satisfying assignment/NNP/assignment. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 25/CD/25 /:/: 04/CD/04 /CD/) /CD/) we/PRP/we will/MD/will just/RB/just prove/VB/prove that/IN/that clique/NN/clique is/VBZ/is n/VBN/n p/NN/p hard/RB/hard we/PRP/we saw/VBD/saw last/JJ/last time/NN/time that/IN/that clique/NN/clique is/VBZ/is empty/NNP/empty. so/RB/so /,/, put/VBD/put these/DT/these two/CD/two things/NNS/things together/RB/together /,/, we/PRP/we have/VBP/have just/RB/just shown/VBN/shown that/IN/that clique/JJ/clique is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. so/RB/so /,/, the/DT/the thing/NN/thing to/TO/to notice/NN/notice is/VBZ/is that/IN/that once/RB/once we/PRP/we have/VBP/have cook/NN/cook ?/./? s/NNS/s theorem/VBP/theorem in/IN/in hand/NNP/hand. it/PRP/it is/VBZ/is much/RB/much easier/JJR/easier to/TO/to prove/VB/prove some/DT/some other/JJ/other problem/NN/problem is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. all/DT/all you/PRP/you need/VBP/need to/TO/to do/VB/do is/VBZ/is prove/VB/prove that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for this/DT/this new/JJ/new problem/NNP/problem. there/RB/there is/VBZ/is one/CD/one for/IN/for any/DT/any of/IN/of the/DT/the old/JJ/old problem/NN/problem /,/, which/WDT/which you/PRP/you have/VBP/have already/RB/already proved/VBN/proved n/NN/n p/NN/p complete/NN/complete for/IN/for instance/NN/instance sat/NNP/sat. but/CC/but /,/, now/RB/now you/PRP/you can/MD/can use/VB/use clique/NNP/clique. so/RB/so /,/, our/PRP$/our next/JJ/next problem/NN/problem is/VBZ/is called/VBN/called independent/JJ/independent set/NNP/set. so/RB/so /,/, let/VB/let us/PRP/us define/VB/define what/WP/what a/DT/a independent/JJ/independent set/NN/set is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 25/CD/25 /:/: 51/CD/51 /CD/) so/RB/so /,/, given/VBN/given a/DT/a graph/NN/graph g/NN/g /,/, this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex set/VBD/set this/DT/this is/VBZ/is the/DT/the edge/NN/edge set/NN/set a/DT/a subset/NN/subset u/NN/u of/IN/of v/NN/v is/VBZ/is called/VBN/called an/DT/an independent/JJ/independent set/NNP/set. if/IN/if there/EX/there are/VBP/are no/DT/no edges/NNS/edges between/IN/between any/DT/any pair/NN/pair of/IN/of vertices/NNS/vertices in/IN/in u/NNP/u. if/IN/if all/DT/all u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2 belonging/VBG/belonging to/TO/to u/NNP/u. u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2 is/VBZ/is not/RB/not an/DT/an edge/NNP/edge. there/RB/there are/VBP/are several/JJ/several subsets/NNS/subsets /,/, so/RB/so that/IN/that if/IN/if i/PRP/i take/VBP/take any/DT/any two/CD/two of/IN/of them/PRP/them /,/, there/EX/there should/MD/should not/RB/not be/VB/be an/DT/an edge/NN/edge between/IN/between them/NNP/them. this/DT/this i/PRP/i mean/VBP/mean for/IN/for clique/JJ/clique he/PRP/he wanted/VBD/wanted an/DT/an edge/NN/edge to/TO/to be/VB/be in/IN/in every/DT/every pair/NNP/pair. here/RB/here /,/, you/PRP/you do/VBP/do not/RB/not want/VB/want a/DT/a edge/NN/edge between/IN/between any/DT/any pair/NNP/pair. so/RB/so /,/, our/PRP$/our next/JJ/next objective/NN/objective is/VBZ/is to/TO/to prove/VB/prove the/DT/the version/NN/version of/IN/of the/DT/the independent/JJ/independent set/NNP/set. decision/NN/decision version/NN/version of/IN/of independent/JJ/independent set/NN/set problem/NN/problem to/TO/to be/VB/be n/VBN/n p/NN/p complete/NN/complete /,/, but/CC/but the/DT/the search/NN/search was/VBD/was an/DT/an independent/JJ/independent set/NN/set essentially/RB/essentially states/VBZ/states that/IN/that given/VBN/given a/DT/a graph/NN/graph find/NN/find an/DT/an independent/JJ/independent set/NN/set of/IN/of maximum/NN/maximum size/NNP/size. the/DT/the decision/NN/decision so/RB/so we/PRP/we convert/VBP/convert this/DT/this to/TO/to a/DT/a decision/NN/decision version/NN/version in/IN/in a/DT/a fashion/NN/fashion /,/, which/WDT/which is/VBZ/is very/RB/very similar/JJ/similar to/TO/to clique/NNP/clique. so/RB/so /,/, it/PRP/it looks/VBZ/looks like/IN/like this/NNP/this. so/RB/so /,/, independent/JJ/independent set/NN/set problem/NN/problem independent/NN/independent set/NN/set has/VBZ/has input/VBN/input graph/NN/graph g/NN/g /,/, the/DT/the positive/JJ/positive integer/NN/integer k/NNP/k. the/DT/the question/NN/question you/PRP/you ask/VBP/ask is/VBZ/is does/VBZ/does g/NN/g /,/, have/VBP/have an/DT/an independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. this/DT/this is/VBZ/is the/DT/the question/NN/question we/PRP/we ask/NNP/ask. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing to/TO/to see/VB/see is/VBZ/is this/DT/this problem/NN/problem in/IN/in n/NN/n p/NNP/p. the/DT/the well/NN/well i/PRP/i hope/VBP/hope most/JJS/most of/IN/of you/PRP/you can/MD/can now/RB/now show/VB/show that/IN/that this/DT/this problem/NN/problem is/VBZ/is in/IN/in n/NN/n p/NNP/p. anyway/NN/anyway /,/, let/VB/let us/PRP/us do/VBP/do it/NNP/it. so/RB/so /,/, if/IN/if the/DT/the answer/NN/answer to/TO/to the/DT/the question/NN/question is/VBZ/is yes/NNS/yes /,/, we/PRP/we are/VBP/are looking/VBG/looking at/IN/at only/RB/only yes/VBZ/yes inputs/NNS/inputs /,/, inputs/NNS/inputs for/IN/for which/WDT/which the/DT/the answer/NN/answer is/VBZ/is yes/NNP/yes. and/CC/and for/IN/for these/DT/these inputs/NNS/inputs /,/, the/DT/the prover/NN/prover should/MD/should be/VB/be able/JJ/able to/TO/to convince/NN/convince the/DT/the verifier/NN/verifier that/IN/that in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is a/DT/a yes/NNS/yes input/NNP/input. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to figure/VB/figure out/RP/out /,/, what/WP/what is/VBZ/is the/DT/the hint/NN/hint or/CC/or proof/IN/proof or/CC/or advice/NN/advice that/IN/that the/DT/the prover/NN/prover gives/VBZ/gives the/DT/the verifier/NNP/verifier. in/IN/in this/DT/this case/NN/case /,/, again/RB/again it/PRP/it is/VBZ/is just/RB/just the/DT/the independent/JJ/independent set/NNP/set. then/RB/then he/PRP/he just/RB/just picks/VBZ/picks out/RP/out k/NN/k vertices/NNS/vertices from/IN/from the/DT/the graph/NNP/graph. and/CC/and tells/VBZ/tells the/DT/the verifier/NN/verifier here/RB/here /,/, these/DT/these vertices/NNS/vertices form/NN/form independent/NN/independent set/NNP/set. the/DT/the verifier/NN/verifier looks/VBZ/looks at/IN/at these/DT/these verifiers/NNP/verifiers. he/PRP/he checks/VBZ/checks that/IN/that there/EX/there is/VBZ/is no/DT/no edge/NN/edge between/IN/between any/DT/any of/IN/of them/NNP/them. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what he/PRP/he verifies/VBZ/verifies and/CC/and that/IN/that is/VBZ/is very/RB/very easy/JJ/easy to/TO/to verify/NNP/verify. and/CC/and we/PRP/we convince/VBP/convince that/IN/that /,/, in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is a/DT/a yes/NNS/yes input/NNP/input. the/DT/the advice/NN/advice that/IN/that the/DT/the prover/NN/prover gives/VBZ/gives the/DT/the verifier/NN/verifier in/IN/in all/DT/all most/RBS/most all/DT/all cases/NNS/cases is/VBZ/is supposing/VBG/supposing the/DT/the question/NN/question is/VBZ/is yes/NNS/yes /,/, why/WRB/why is/VBZ/is this/DT/this question/NN/question yes/NNP/yes. you/PRP/you just/RB/just answer/JJR/answer the/DT/the question/NNP/question. so/RB/so /,/, here/RB/here for/IN/for instance/NN/instance if/IN/if it/PRP/it is/VBZ/is yes/VBZ/yes if/IN/if g/NN/g has/VBZ/has an/DT/an independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, focus/NN/focus on/IN/on the/DT/the independent/JJ/independent set/NN/set of/IN/of size/NNP/size. if/IN/if this/DT/this is/VBZ/is given/VBN/given to/TO/to the/DT/the verifier/NN/verifier and/CC/and the/DT/the verifier/NN/verifier can/MD/can check/VB/check that/IN/that it/PRP/it is/VBZ/is in/IN/in fact/NN/fact /,/, good/NNP/good. so/RB/so /,/, this/DT/this problem/NN/problem is/VBZ/is in/IN/in n/NN/n p/NN/p /,/, our/PRP$/our job/NN/job is/VBZ/is my/PRP$/my job/NN/job for/IN/for the/DT/the time/NN/time being/VBG/being is/VBZ/is to/TO/to prove/VB/prove that/IN/that it/PRP/it is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do it/NNP/it. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time 30/CD/30 /:/: 01/CD/01 /CD/) so/RB/so /,/, we/PRP/we will/MD/will the/DT/the strategies/NNS/strategies is/VBZ/is we/PRP/we want/VBP/want to/TO/to show/VB/show /,/, where/WRB/where independent/JJ/independent set/NN/set is/VBZ/is n/VBN/n p/NN/p hard/NNP/hard. how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/DT/this we/PRP/we will/MD/will this/VB/this. so/RB/so /,/, assume/NN/assume there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for independent/JJ/independent set/NNP/set. so/RB/so /,/, assuming/VBG/assuming this/DT/this will/MD/will construct/VB/construct a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm or/CC/or clique/NNP/clique. what/WP/what does/VBZ/does this/DT/this give/JJ/give us/PRP/us ?/./? we/PRP/we know/VBP/know that/IN/that clique/NN/clique is/VBZ/is n/VBN/n p/NN/p complete/NN/complete /,/, which/WDT/which means/VBZ/means if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for clique/NN/clique there/EX/there is/VBZ/is one/CD/one for/IN/for everything/NN/everything in/IN/in use/NN/use good/NNP/good. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we will/MD/will use/NNP/use. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that we/PRP/we have/VBP/have done/VBN/done /,/, if/IN/if we/PRP/we can/MD/can do/VB/do this/DT/this step/NNP/step. assuming/NN/assuming that/WDT/that /,/, there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for independent/JJ/independent set/NNP/set. we/PRP/we construct/VBP/construct polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for clique/NNP/clique. and/CC/and because/IN/because /,/, there/EX/there is/VBZ/is one/CD/one for/IN/for clique/NN/clique /,/, there/EX/there is/VBZ/is one/CD/one for/IN/for everything/NN/everything in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, to/TO/to prove/VB/prove essentially/RB/essentially that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for dependent/NN/dependent set/NN/set /,/, there/EX/there is/VBZ/is one/CD/one for/IN/for everything/NNP/everything. this/DT/this is/VBZ/is not/RB/not as/IN/as difficult/JJ/difficult as/IN/as the/DT/the previous/JJ/previous one/NNP/one. and/CC/and independent/JJ/independent set/NN/set and/CC/and clique/NN/clique they/PRP/they are/VBP/are both/DT/both sort/NN/sort of/IN/of problems/NNS/problems in/IN/in graphs/NNP/graphs. and/CC/and we/PRP/we also/RB/also look/VBP/look feel/NN/feel similar/JJ/similar in/IN/in one/CD/one case/NN/case we/PRP/we have/VBP/have an/DT/an edge/NN/edge /,/, in/IN/in the/DT/the other/JJ/other you/PRP/you have/VBP/have subset/VBN/subset where/WRB/where there/EX/there are/VBP/are no/DT/no edges/NNP/edges. and/CC/and in/IN/in fact/NN/fact /,/, this/DT/this is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we do/NNP/do. so/RB/so /,/, supposing/VBG/supposing i/PRP/i have/VBP/have a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for independent/JJ/independent set/NNP/set. now/RB/now /,/, how/WRB/how do/VBP/do i/PRP/i find/VBP/find for/IN/for a/DT/a graph/NN/graph as/IN/as a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, i/PRP/i take/VBP/take this/DT/this graph/NN/graph /,/, where/WRB/where ever/RB/ever there/RB/there is/VBZ/is an/DT/an edge/NN/edge /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between two/CD/two vertices/NNS/vertices i/PRP/i remove/VBP/remove it/NNP/it. if/IN/if there/EX/there is/VBZ/is no/DT/no edge/NN/edge between/IN/between two/CD/two vertices/NNS/vertices i/PRP/i add/VBP/add an/DT/an edge/NNP/edge. so/RB/so /,/, i/PRP/i sort/VBP/sort of/IN/of complement/NN/complement the/DT/the edge/NN/edge set/NNP/set. and/CC/and in/IN/in this/DT/this new/JJ/new graph/NN/graph i/PRP/i feed/VBP/feed into/IN/into the/DT/the independent/JJ/independent sub/NN/sub routine/NNP/routine. if/IN/if it/PRP/it says/VBZ/says there/RB/there is/VBZ/is a/DT/a independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. clearly/RB/clearly /,/, these/DT/these k/NN/k vertices/NNS/vertices must/MD/must form/VB/form a/DT/a clique/NN/clique in/IN/in the/DT/the original/JJ/original value/NNP/value. because/IN/because /,/, i/PRP/i complemented/VBD/complemented the/DT/the graph/NN/graph /,/, well/RB/well this/DT/this is/VBZ/is all/DT/all there/RB/there is/NNP/is. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just write/VBP/write this/DT/this down/NNP/down. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 32/CD/32 /:/: 38/CD/38 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the transformation/NNP/transformation. so/RB/so /,/, take/VB/take g/NN/g and/CC/and k/NNP/k. so/RB/so /,/, complement/NN/complement g/NN/g to/TO/to get/VB/get g/NN/g c/NNP/c. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the complement/NN/complement essentially/RB/essentially /,/, the/DT/the edge/NN/edge set/NN/set is/VBZ/is the/DT/the same/NNP/same. i/PRP/i have/VBP/have complemented/VBN/complemented /,/, the/DT/the vertex/NN/vertex set/VBD/set is/VBZ/is the/DT/the same/JJ/same the/DT/the edge/NN/edge set/NN/set i/PRP/i have/VBP/have complemented/NNP/complemented. so/RB/so /,/, the/DT/the edge/NN/edge set/NN/set of/IN/of g/NN/g c/NN/c is/VBZ/is /,/, so/RB/so u/RB/u /,/, v/NN/v such/JJ/such that/IN/that /,/, u/VBP/u v/NN/v is/VBZ/is not/RB/not e/VB/e of/IN/of g/NNP/g. if/IN/if it/PRP/it is/VBZ/is not/RB/not there/RB/there i/PRP/i put/VBD/put it/PRP/it in/NNP/in. if/IN/if it/PRP/it is/VBZ/is there/RB/there i/PRP/i do/VBP/do not/RB/not put/VB/put it/PRP/it in/NNP/in. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the complement/NNP/complement. so/RB/so /,/, essentially/RB/essentially the/DT/the complement/NN/complement of/IN/of e/NN/e g/NNP/g. now/RB/now /,/, keep/VB/keep this/DT/this into/IN/into so/RB/so feed/VBN/feed this/DT/this into/IN/into the/DT/the sub/NN/sub routine/NN/routine or/CC/or the/DT/the independent/JJ/independent set/NNP/set. and/CC/and if/IN/if /,/, this/DT/this says/VBZ/says yes/VBZ/yes then/RB/then you/PRP/you output/VBD/output yes/NNP/yes. if/IN/if this/DT/this says/VBZ/says no/DT/no then/RB/then you/PRP/you output/VBD/output no/NNP/no. so/RB/so /,/, we/PRP/we recall/VBP/recall that/IN/that what/WP/what we/PRP/we want/VBP/want is/VBZ/is to/TO/to find/VB/find or/CC/or decide/VB/decide to/TO/to decide/VB/decide if/IN/if g/NN/g has/VBZ/has a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are doing/VBG/doing /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to decide/VB/decide whether/IN/whether g/NN/g has/VBZ/has a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. we/PRP/we complement/VBP/complement the/DT/the graph/NN/graph feed/VBD/feed this/DT/this into/IN/into the/DT/the sub/NN/sub routine/NN/routine for/IN/for independent/JJ/independent set/NNP/set. and/CC/and if/IN/if /,/, this/DT/this independent/NN/independent set/VBD/set sub/NN/sub routine/NN/routine says/VBZ/says the/DT/the yes/NNS/yes then/RB/then we/PRP/we say/VBP/say yes/NNS/yes /,/, when/WRB/when we/PRP/we say/VBP/say no/DT/no /,/, the/DT/the answer/NN/answer is/VBZ/is no/NNP/no. and/CC/and you/PRP/you can/MD/can check/VB/check that/IN/that this/DT/this box/NNP/box. i/PRP/i mean/VBP/mean in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, if/IN/if g/NN/g has/VBZ/has a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. g/NN/g complement/NN/complement also/RB/also will/MD/will have/VB/have a/DT/a size/NN/size of/IN/of k/NNP/k. if/IN/if g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a clique/NN/clique of/IN/of size/NN/size k/NN/k /,/, i/PRP/i am/VBP/am sorry/JJ/sorry if/IN/if g/NN/g has/VBZ/has a/DT/a clique/NN/clique of/IN/of size/NN/size k/NN/k /,/, then/RB/then g/VB/g complement/NN/complement will/MD/will have/VB/have a/DT/a independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. if/IN/if g/NN/g does/VBZ/does not/RB/not have/VB/have a/DT/a clique/NN/clique of/IN/of size/NN/size k/NNP/k. and/CC/and g/NN/g complement/NN/complement will/MD/will not/RB/not have/VB/have a/DT/a independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, the/DT/the answer/NN/answer in/IN/in both/DT/both case/NN/case is/VBZ/is correct/NNP/correct. our/PRP$/our next/JJ/next problem/NN/problem is/VBZ/is called/VBN/called vertex/NN/vertex cover/NNP/cover. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 35/CD/35 /:/: 20/CD/20 /CD/) vertex/NN/vertex cover/NN/cover /,/, so/RB/so what/WP/what is/VBZ/is a/DT/a vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, a/DT/a vertex/NN/vertex cover/NN/cover in/IN/in a/DT/a graph/NN/graph g/NN/g is/VBZ/is a/DT/a set/NN/set of/IN/of vertices/NNP/vertices. such/JJ/such that/IN/that /,/, every/DT/every edge/NN/edge has/VBZ/has at/IN/at least/JJS/least one/CD/one end/NN/end point/NN/point in/IN/in the/DT/the set/NNP/set. is/VBZ/is a/DT/a set/NN/set let/NN/let us/PRP/us say/VBP/say /,/, u/NN/u of/IN/of vertices/NNS/vertices /,/, so/RB/so that/IN/that every/DT/every edge/NN/edge has/VBZ/has at/IN/at least/JJS/least one/CD/one end/NN/end point/NN/point in/IN/in u/NNP/u. now/RB/now /,/, let/VB/let us/PRP/us take/VB/take an/DT/an example/NNP/example. this/DT/this graph/NN/graph let/VBD/let us/PRP/us see/VB/see /,/, suppose/VB/suppose i/PRP/i pick/VBP/pick this/DT/this /,/, then/RB/then i/PRP/i take/VBP/take this/NNP/this. this/DT/this let/NN/let us/PRP/us say/VBP/say that/IN/that /,/, now/RB/now /,/, i/PRP/i need/VBP/need to/TO/to cover/VB/cover this/DT/this edge/NNP/edge. so/RB/so /,/, hopefully/RB/hopefully i/PRP/i have/VBP/have covered/VBN/covered all/DT/all edges/NNP/edges. so/RB/so /,/, this/DT/this edge/NN/edge /,/, this/DT/this end/NN/end point/NN/point is/VBZ/is in/IN/in /,/, for/IN/for this/DT/this edge/NN/edge this/DT/this end/NN/end point/NN/point is/VBZ/is in/IN/in /,/, this/DT/this edge/NN/edge this/DT/this is/VBZ/is in/IN/in /,/, this/DT/this edge/NN/edge this/DT/this is/VBZ/is in/NNP/in. for/IN/for these/DT/these both/DT/both are/VBP/are in/IN/in /,/, but/CC/but that/IN/that is/VBZ/is fine/NNP/fine. similarly/RB/similarly /,/, for/IN/for this/DT/this edge/NN/edge both/DT/both are/VBP/are in/IN/in and/CC/and that/IN/that is/VBZ/is fine/NN/fine this/DT/this is/VBZ/is in/IN/in the/DT/the vertex/NN/vertex /:/( /:/( refer/NN/refer time/NN/time /:/: 36/CD/36 /:/: 57/CD/57 /CD/) /CD/) /./. so/RB/so /,/, if/IN/if i/PRP/i pick/VBP/pick these/DT/these vertices/NNS/vertices /,/, which/WDT/which are/VBP/are tick/VBP/tick marked/VBN/marked /,/, that/IN/that forms/NNS/forms a/DT/a vertex/NN/vertex cover/NN/cover in/IN/in the/DT/the graph/NNP/graph. it/PRP/it is/VBZ/is a/DT/a subset/NN/subset of/IN/of the/DT/the vertex/NN/vertex set/NNP/set. so/RB/so /,/, that/IN/that every/DT/every edge/NN/edge has/VBZ/has at/IN/at least/JJS/least one/CD/one end/NN/end point/NNP/point. for/IN/for instance/NN/instance /,/, supposing/VBG/supposing you/PRP/you have/VBP/have a/DT/a computer/NN/computer network/NNP/network. you/PRP/you have/VBP/have a/DT/a network/NN/network and/CC/and you/PRP/you want/VBP/want to/TO/to monitor/NN/monitor each/DT/each link/NNP/link. you/PRP/you want/VBP/want to/TO/to monitor/NN/monitor each/DT/each link/NNP/link. what/WP/what do/VBP/do you/PRP/you want/VB/want to/TO/to do/VB/do is/VBZ/is pick/VB/pick a/DT/a set/NN/set of/IN/of these/DT/these nodes/NNP/nodes. pick/NN/pick a/DT/a set/NN/set of/IN/of these/DT/these computers/NNS/computers and/CC/and to/TO/to each/DT/each computer/NN/computer you/PRP/you can/MD/can assign/VB/assign a/DT/a link/NNP/link. to/TO/to each/DT/each computer/NN/computer you/PRP/you can/MD/can assign/VB/assign a/DT/a link/NNP/link. so/RB/so /,/, that/IN/that it/PRP/it monitors/VBZ/monitors traffic/JJ/traffic on/IN/on the/DT/the links/NNS/links both/DT/both ways/NNS/ways from/IN/from the/DT/the computer/NN/computer and/CC/and from/IN/from going/VBG/going into/IN/into the/DT/the computer/NNP/computer. and/CC/and you/PRP/you want/VBP/want a/DT/a subset/NN/subset of/IN/of the/DT/the computers/NNS/computers /VBP/( /:/( refer/NN/refer time/NN/time /:/: 37/CD/37 /:/: 45/CD/45 /CD/) /CD/) every/DT/every link/NN/link is/VBZ/is covered/VBN/covered /,/, which/WDT/which means/VBZ/means for/IN/for every/DT/every link/NN/link at/IN/at least/JJS/least one/CD/one of/IN/of the/DT/the end/NN/end points/NNS/points must/MD/must be/VB/be chosen/VBN/chosen to/TO/to monitor/NN/monitor it/NNP/it. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex cover/NN/cover ideally/RB/ideally /,/, we/PRP/we would/MD/would like/VB/like to/TO/to pick/VB/pick very/RB/very small/JJ/small number/NN/number of/IN/of computers/NNS/computers to/TO/to do/VB/do this/DT/this job/NNP/job. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will look/VB/look for/IN/for vertex/NN/vertex covers/NNS/covers of/IN/of minimum/JJ/minimum size/NNP/size. given/NN/given a/DT/a graph/NN/graph find/NN/find the/DT/the vertex/NN/vertex cover/NN/cover of/IN/of minimum/JJ/minimum size/NN/size is/VBZ/is the/DT/the optimization/NN/optimization or/CC/or the/DT/the search/NN/search problem/NN/problem that/IN/that one/CD/one looks/NNS/looks for/NNP/for. and/CC/and our/PRP$/our objective/NN/objective is/VBZ/is to/TO/to show/VB/show that/IN/that this/DT/this problem/NN/problem is/VBZ/is hard/JJ/hard /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that you/PRP/you can/MD/can solve/VB/solve this/DT/this problem/NNP/problem. then/RB/then you/PRP/you can/MD/can solve/VB/solve every/DT/every problem/NN/problem in/IN/in n/NN/n p/NN/p in/IN/in polynomial/JJ/polynomial time/NNP/time. so/RB/so /,/, this/DT/this is/VBZ/is among/IN/among the/DT/the hardest/JJS/hardest problems/NNS/problems in/IN/in n/NN/n p/NNP/p. if/IN/if you/PRP/you want/VBP/want to/TO/to pick/VB/pick up/RP/up minimum/JJ/minimum number/NN/number of/IN/of computers/NNS/computers to/TO/to /,/, so/RB/so that/IN/that traffic/JJ/traffic on/IN/on every/DT/every link/NN/link can/MD/can be/VB/be monitored/VBN/monitored this/DT/this problem/NN/problem is/VBZ/is n/VBN/n p/NN/p hard/NNP/hard. unlike/IN/unlike that/DT/that you/PRP/you will/MD/will come/VB/come up/RP/up with/IN/with a/DT/a algorithm/NNP/algorithm. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do good/NNP/good. so/RB/so /,/, i/PRP/i just/RB/just mentioned/VBD/mentioned the/DT/the search/NN/search version/NN/version of/IN/of vertex/NN/vertex cover/NN/cover /,/, what/WP/what is/VBZ/is the/DT/the decision/NN/decision version/NNP/version. remember/NN/remember /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to prove/VB/prove something/NN/something is/VBZ/is n/VBN/n p/NN/p complete/NN/complete /,/, we/PRP/we look/VBP/look at/IN/at the/DT/the decision/NN/decision version/NN/version they/PRP/they are/VBP/are easier/JJR/easier to/TO/to handle/NNP/handle. so/RB/so /,/, here/RB/here is/VBZ/is how/WRB/how we/PRP/we do/VBP/do it/PRP/it the/DT/the trip/NN/trip is/VBZ/is the/DT/the same/NNP/same. we/PRP/we introduce/VBP/introduce this/DT/this extra/JJ/extra positive/JJ/positive integer/NN/integer k/NNP/k. and/CC/and we/PRP/we ask/VBP/ask if/IN/if the/DT/the graph/NN/graph has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, if/IN/if it/PRP/it has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of smaller/JJR/smaller size/NN/size /,/, clearly/RB/clearly it/PRP/it has/VBZ/has one/CD/one of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 39/CD/39 /:/: 34/CD/34 /CD/) so/RB/so /,/, vertex/NN/vertex cover/NN/cover input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g /,/, the/DT/the positive/JJ/positive integer/NN/integer k/NN/k /,/, the/DT/the question/NN/question is/VBZ/is does/VBZ/does g/NN/g have/VBP/have a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, i/PRP/i will/MD/will leave/VB/leave it/PRP/it as/IN/as an/DT/an exercise/NN/exercise for/IN/for you/PRP/you to/TO/to do/VB/do the/DT/the following/VBG/following as/IN/as a/DT/a exercise/NN/exercise for/IN/for you/PRP/you to/TO/to do/VB/do /,/, which/WDT/which is/VBZ/is supposing/VBG/supposing there/RB/there is/VBZ/is a/DT/a algorithm/NN/algorithm for/IN/for this/DT/this problem/NNP/problem. and/CC/and argue/VB/argue that/IN/that there/EX/there is/VBZ/is an/DT/an algorithm/NN/algorithm for/IN/for the/DT/the problem/NN/problem of/IN/of finding/NN/finding minimum/NN/minimum vertex/NN/vertex cover/NNP/cover. it/PRP/it is/VBZ/is very/RB/very similar/JJ/similar to/TO/to the/DT/the things/NNS/things that/IN/that we/PRP/we have/VBP/have done/VBN/done in/IN/in the/DT/the past/NNP/past. the/DT/the other/JJ/other direction/NN/direction is/VBZ/is simple/NNP/simple. if/IN/if you/PRP/you can/MD/can find/VB/find vertex/NN/vertex cover/NN/cover of/IN/of small/JJ/small size/NN/size i/PRP/i mean/VBP/mean smaller/JJR/smaller size/NN/size and/CC/and clearly/RB/clearly given/VBN/given this/DT/this question/NN/question you/PRP/you can/MD/can determine/VB/determine whether/IN/whether /,/, there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. if/IN/if that/DT/that size/NN/size is/VBZ/is smaller/JJR/smaller than/IN/than or/CC/or equal/JJ/equal to/TO/to k/VB/k the/DT/the vertex/NN/vertex cover/NN/cover you/PRP/you found/NNP/found. and/CC/and there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, adding/VBG/adding vertices/NNS/vertices to/TO/to a/DT/a vertex/NN/vertex cover/NN/cover /,/, it/PRP/it still/RB/still remains/VBZ/remains a/DT/a vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, you/PRP/you can/MD/can form/VB/form as/RB/as large/JJ/large vertex/NN/vertex cover/NN/cover that/WDT/that is/VBZ/is not/RB/not a/DT/a problem/NNP/problem. you/PRP/you put/VBD/put all/DT/all the/DT/the vertices/NNS/vertices in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. if/IN/if you/PRP/you take/VBP/take all/DT/all the/DT/the vertices/NNS/vertices in/IN/in the/DT/the graph/NN/graph it/PRP/it will/MD/will give/VB/give you/PRP/you a/DT/a vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the problem/NN/problem and/CC/and we/PRP/we would/MD/would like/VB/like to/TO/to prove/VB/prove that/IN/that this/DT/this is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. the/DT/the first/JJ/first thing/NN/thing we/PRP/we need/VBP/need to/TO/to do/VB/do is/VBZ/is to/TO/to prove/VB/prove that/IN/that it/PRP/it is/VBZ/is in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, the/DT/the first/JJ/first step/NN/step is/VBZ/is v/NN/v c/NN/c belongs/NNS/belongs to/TO/to n/VB/n p/NNP/p. why/WRB/why is/VBZ/is this/DT/this true/JJ/true ?/./? so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is /,/, so/RB/so what/WP/what is/VBZ/is we/PRP/we go/VBP/go to/TO/to our/PRP$/our usual/JJ/usual game/NNP/game. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the prover/NN/prover /,/, here/RB/here is/VBZ/is the/DT/the verifier/NN/verifier and/CC/and here/RB/here is/VBZ/is the/DT/the graph/NN/graph g/NN/g and/CC/and k/NNP/k. now/RB/now /,/, what/WDT/what does/VBZ/does the/DT/the prover/NN/prover give/VBP/give the/DT/the verifier/NN/verifier ?/./? the/DT/the verifier/NN/verifier is/VBZ/is looking/VBG/looking at/IN/at this/DT/this graph/NN/graph g/NN/g and/CC/and k/NNP/k. what/WP/what does/VBZ/does the/DT/the prover/NN/prover give/VBP/give the/DT/the verifier/NN/verifier ?/./? so/RB/so /,/, that/IN/that the/DT/the verifier/NN/verifier can/MD/can verify/VB/verify that/IN/that there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. well/RB/well /,/, the/DT/the prover/NN/prover just/RB/just gives/VBZ/gives the/DT/the subset/NNP/subset. subset/NN/subset of/IN/of k/NN/k vertices/NNS/vertices /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the prover/NN/prover gives/VBZ/gives the/DT/the verifier/NNP/verifier. now/RB/now /,/, the/DT/the verifier/NN/verifier looks/VBZ/looks at/IN/at the/DT/the subset/NNP/subset. and/CC/and when/WRB/when he/PRP/he looks/VBZ/looks at/IN/at every/DT/every edge/NNP/edge. and/CC/and checks/NNS/checks that/WDT/that /,/, this/DT/this for/IN/for every/DT/every edge/NN/edge one/CD/one of/IN/of the/DT/the end/NN/end points/NNS/points is/VBZ/is in/IN/in the/DT/the subset/NNP/subset. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what the/DT/the verifier/JJR/verifier checks/NNP/checks. he/PRP/he takes/VBZ/takes the/DT/the subset/NN/subset of/IN/of size/NN/size k/NN/k from/IN/from the/DT/the prover/NNP/prover. now/RB/now /,/, he/PRP/he goes/VBZ/goes through/IN/through the/DT/the edges/NNS/edges one/CD/one by/IN/by one/CD/one and/CC/and for/IN/for each/DT/each edge/NN/edge checks/NNS/checks that/WDT/that at/IN/at least/JJS/least one/CD/one of/IN/of these/DT/these edge/NN/edge these/DT/these two/CD/two end/NN/end points/NNS/points is/VBZ/is in/IN/in the/DT/the subset/NN/subset and/CC/and the/DT/the prover/NN/prover is/VBZ/is correct/NNP/correct. so/RB/so /,/, this/DT/this proves/NNS/proves that/IN/that vertex/NN/vertex cover/NN/cover is/VBZ/is in/IN/in n/NN/n p/NNP/p. now/RB/now we/PRP/we need/VBP/need to/TO/to show/VB/show that/IN/that vertex/NN/vertex cover/NN/cover is/VBZ/is n/VBN/n p/NN/p hard/NNP/hard. so/RB/so /,/, given/VBN/given we/PRP/we want/VBP/want to/TO/to show/VB/show that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for vertex/NN/vertex cover/NN/cover /,/, there/EX/there is/VBZ/is one/CD/one for/IN/for everything/NN/everything in/IN/in n/NN/n p/NNP/p. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 43/CD/43 /:/: 04/CD/04 /CD/) so/RB/so /,/, we/PRP/we will/MD/will show/VB/show we/PRP/we will/MD/will assume/VB/assume that/IN/that /,/, there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, what/WDT/what we/PRP/we will/MD/will do/VB/do is/VBZ/is we/PRP/we will/MD/will construct/VB/construct a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for dependent/NN/dependent set/NNP/set. instead/RB/instead of/IN/of independent/JJ/independent set/NN/set i/PRP/i could/MD/could have/VB/have chosen/VBN/chosen clique/NN/clique or/CC/or i/PRP/i could/MD/could have/VB/have chosen/VBN/chosen satisfiability/NNP/satisfiability. either/CC/either of/IN/of these/DT/these one/CD/one of/IN/of these/DT/these three/CD/three problems/NNS/problems i/PRP/i could/MD/could have/VB/have chosen/NNP/chosen. in/IN/in fact/NN/fact /,/, as/IN/as we/PRP/we go/VBP/go along/IN/along /,/, we/PRP/we could/MD/could choose/VB/choose any/DT/any of/IN/of these/DT/these already/RB/already proved/VBD/proved n/NN/n p/NN/p complete/NN/complete problems/NNS/problems here/NNP/here. but/CC/but /,/, trick/VBP/trick is/VBZ/is to/TO/to choose/VB/choose the/DT/the right/NN/right one/NNP/one. so/RB/so that/IN/that /,/, we/PRP/we choose/VBP/choose the/DT/the right/NN/right sort/NN/sort of/IN/of problem/NN/problem /,/, then/RB/then this/DT/this proving/NN/proving becomes/VBZ/becomes easier/NNP/easier. so/RB/so /,/, we/PRP/we assume/VBP/assume that/IN/that there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for vertex/NN/vertex cover/NNP/cover. we/PRP/we will/MD/will construct/VB/construct the/DT/the polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for independent/JJ/independent set/NNP/set. now/RB/now /,/, how/WRB/how does/VBZ/does one/CD/one do/VB/do this/DT/this /,/, what/WP/what is/VBZ/is the/DT/the relationship/NN/relationship between/IN/between vertex/NN/vertex cover/NN/cover and/CC/and independent/JJ/independent set/NNP/set. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my graph/NN/graph g/NN/g and/CC/and k/NNP/k. i/PRP/i have/VBP/have a/DT/a graph/NN/graph g/NN/g and/CC/and k/NN/k and/CC/and i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out if/IN/if this/DT/this graph/NN/graph g/NNP/g. does/VBZ/does g/NN/g have/VBP/have an/DT/an independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NN/k ?/./? this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to sort/VB/sort to/TO/to prove/VB/prove that/IN/that /,/, we/PRP/we want/VBP/want to/TO/to construct/VB/construct this/DT/this is/VBZ/is the/DT/the algorithm/NN/algorithm we/PRP/we want/VBP/want to/TO/to construct/VB/construct one/CD/one for/IN/for independent/JJ/independent set/NNP/set. so/RB/so /,/, supposing/VBG/supposing this/DT/this is/VBZ/is my/PRP$/my graph/NN/graph g/NNP/g. now/RB/now /,/, supposing/VBG/supposing there/EX/there is/VBZ/is a/DT/a independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. let/NN/let us/PRP/us say/VBP/say /,/, this/DT/this is/VBZ/is the/DT/the independent/JJ/independent set/NNP/set. supposing/NN/supposing this/DT/this portion/NN/portion of/IN/of the/DT/the graph/NN/graph is/VBZ/is independent/JJ/independent set/NNP/set. let/NN/let us/PRP/us /,/, look/VBP/look at/IN/at what/WP/what can/MD/can we/PRP/we say/VB/say /,/, we/PRP/we know/VBP/know that/IN/that there/EX/there are/VBP/are no/DT/no edges/NNS/edges here/NNP/here. there/RB/there are/VBP/are no/DT/no edges/NNS/edges between/IN/between any/DT/any pair/NN/pair of/IN/of vertices/NNS/vertices here/RB/here /,/, where/WRB/where are/VBP/are the/DT/the edges/NNS/edges in/IN/in the/DT/the graph/NNP/graph. well/RB/well /,/, the/DT/the edge/NN/edge can/MD/can be/VB/be on/IN/on this/DT/this side/NNP/side. or/CC/or the/DT/the edges/NNS/edges can/MD/can be/VB/be of/IN/of this/DT/this form/NNP/form. edges/VBZ/edges are/VBP/are either/RB/either completely/RB/completely in/IN/in this/DT/this side/NN/side or/CC/or one/CD/one end/NN/end point/NN/point is/VBZ/is here/RB/here and/CC/and one/CD/one end/NN/end point/NN/point is/VBZ/is here/RB/here /,/, which/WDT/which means/VBZ/means that/DT/that this/DT/this portion/NN/portion is/VBZ/is a/DT/a vertex/NN/vertex cover/NNP/cover. if/IN/if this/DT/this portion/NN/portion is/VBZ/is a/DT/a independent/JJ/independent set/NN/set /,/, this/DT/this portion/NN/portion is/VBZ/is a/DT/a vertex/NN/vertex cover/NNP/cover. and/CC/and in/IN/in fact/NN/fact /,/, this/DT/this goes/VBZ/goes this/DT/this implication/NN/implication goes/VBZ/goes the/DT/the other/JJ/other way/NNP/way. if/IN/if this/DT/this portion/NN/portion is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover and/CC/and the/DT/the rest/NN/rest of/IN/of the/DT/the graph/NN/graph better/NN/better be/VB/be an/DT/an independent/JJ/independent set/NNP/set. because/IN/because /,/, there/EX/there can/MD/can not/RB/not be/VB/be a/DT/a edge/NN/edge here/NNP/here. every/DT/every edge/NN/edge must/MD/must have/VB/have one/CD/one end/NN/end point/NN/point in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, if/IN/if a/DT/a subset/NN/subset of/IN/of the/DT/the vertex/NN/vertex set/VBD/set is/VBZ/is a/DT/a independent/JJ/independent set/NNP/set. the/DT/the complement/NN/complement of/IN/of this/DT/this set/NN/set is/VBZ/is subset/VBN/subset will/MD/will be/VB/be a/DT/a vertex/NN/vertex cover/NNP/cover. and/CC/and if/IN/if it/PRP/it is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover the/DT/the other/JJ/other will/MD/will be/VB/be a/DT/a independent/JJ/independent set/NNP/set. so/RB/so /,/, we/PRP/we will/MD/will use/VB/use this/DT/this to/TO/to prove/NNP/prove. so/RB/so /,/, essentially/RB/essentially if/IN/if you/PRP/you want/VBP/want to/TO/to find/VB/find independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. we/PRP/we will/MD/will look/VB/look for/IN/for a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k /,/, where/WRB/where n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k /,/, then/RB/then clearly/RB/clearly there/EX/there is/VBZ/is a/DT/a independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. and/CC/and if/IN/if there/EX/there is/VBZ/is no/DT/no vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size n/NN/n minus/NN/minus k/NN/k /,/, there/EX/there is/VBZ/is no/DT/no independent/JJ/independent set/NN/set of/IN/of size/NN/size either/NNP/either. so/RB/so /,/, that/IN/that is/VBZ/is all/DT/all there/RB/there is/NNP/is. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is we/PRP/we just/RB/just take/VBP/take the/DT/the same/JJ/same graph/NN/graph /,/, instead/RB/instead of/IN/of k/NN/k we/PRP/we take/VBP/take n/RP/n minus/NN/minus k/NNP/k. and/CC/and then/RB/then we/PRP/we call/VBP/call the/DT/the algorithm/NN/algorithm for/IN/for vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, given/VBN/given a/DT/a algorithm/NN/algorithm for/IN/for vertex/NN/vertex cover/NN/cover /,/, we/PRP/we are/VBP/are considering/VBG/considering one/CD/one for/IN/for independent/JJ/independent set/NNP/set. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 47/CD/47 /:/: 08/CD/08 /CD/) so/RB/so /,/, we/PRP/we take/VBP/take g/NN/g and/CC/and k/NNP/k. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find well/RB/well we/PRP/we want/VBP/want to/TO/to determine/VB/determine /,/, if/IN/if g/NN/g has/VBZ/has an/DT/an independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. what/WP/what we/PRP/we do/VBP/do is/VBZ/is we/PRP/we take/VBP/take g/NN/g prime/NN/prime and/CC/and k/NN/k /,/, where/WRB/where the/DT/the vertex/NN/vertex set/VBD/set of/IN/of g/NN/g prime/JJ/prime is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the vertex/NN/vertex set/VBD/set of/IN/of g/NNP/g. the/DT/the edge/NN/edge set/NN/set of/IN/of g/NN/g prime/JJ/prime is/VBZ/is also/RB/also the/DT/the same/JJ/same as/IN/as edge/NN/edge set/NN/set of/IN/of g/NNP/g. this/DT/this would/MD/would be/VB/be k/NN/k prime/NN/prime /,/, k/NN/k prime/NN/prime is/VBZ/is nothing/NN/nothing but/CC/but /,/, n/VBP/n minus/CC/minus k/NN/k /,/, where/WRB/where n/NN/n is/VBZ/is the/DT/the size/NN/size of/IN/of the/DT/the vertex/NN/vertex set/NNP/set. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the same/JJ/same graph/NN/graph as/IN/as the/DT/the original/NNP/original. so/RB/so /,/, we/PRP/we just/RB/just copy/VBP/copy the/DT/the graph/NN/graph down/NNP/down. and/CC/and k/NN/k prime/NN/prime is/VBZ/is nothing/NN/nothing but/CC/but /,/, n/VBP/n minus/CC/minus k/NNP/k. and/CC/and now/RB/now /,/, you/PRP/you ask/VBP/ask is/VBZ/is this/DT/this pair/NNP/pair. for/IN/for this/DT/this pair/NN/pair i/PRP/i feed/VBP/feed this/DT/this into/IN/into sub/NN/sub routine/NN/routine for/IN/for vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, you/PRP/you ask/VBP/ask does/VBZ/does this/DT/this is/VBZ/is spread/VBN/spread into/IN/into sub/NN/sub routine/NN/routine v/NN/v c/NNP/c. if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes /,/, then/RB/then you/PRP/you output/VBD/output yes/NNP/yes. if/IN/if it/PRP/it says/VBZ/says no/DT/no /,/, then/RB/then you/PRP/you output/VBD/output no/DT/no /,/, that/IN/that is/VBZ/is it/NNP/it. so/RB/so /,/, g/IN/g and/CC/and k/NN/k are/VBP/are input/NNP/input. so/RB/so /,/, this/DT/this is/VBZ/is an/DT/an algorithm/NN/algorithm for/IN/for independent/JJ/independent set/NNP/set. g/NN/g and/CC/and k/NN/k are/VBP/are input/VBN/input /,/, i/PRP/i take/VBP/take the/DT/the same/JJ/same graph/NN/graph and/CC/and i/PRP/i take/VBP/take n/RP/n minus/NN/minus k/NN/k as/IN/as k/NN/k prime/NNP/prime. g/NN/g prime/NN/prime is/VBZ/is the/DT/the same/JJ/same as/IN/as g/NN/g and/CC/and k/NN/k prime/NN/prime is/VBZ/is n/VBN/n minus/NN/minus k/NNP/k. this/DT/this i/PRP/i feed/VBP/feed into/IN/into sub/NN/sub routine/NN/routine for/IN/for vertex/NN/vertex cover/NN/cover /,/, which/WDT/which we/PRP/we have/VBP/have assumed/NNP/assumed. remember/NN/remember /,/, we/PRP/we have/VBP/have assumed/VBN/assumed that/IN/that there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for vertex/NN/vertex cover/NNP/cover. and/CC/and if/IN/if this/DT/this says/VBZ/says yes/VBZ/yes /,/, then/RB/then our/PRP$/our output/NN/output is/VBZ/is yes/NNS/yes /,/, if/IN/if this/DT/this says/VBZ/says no/DT/no our/PRP$/our output/NN/output is/VBZ/is no/NNP/no. and/CC/and it/PRP/it is/VBZ/is easy/JJ/easy to/TO/to see/VB/see we/PRP/we have/VBP/have argued/VBN/argued that/IN/that /,/, if/IN/if g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size n/NN/n minus/NN/minus k/NNP/k. it/PRP/it has/VBZ/has a/DT/a independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. and/CC/and if/IN/if it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of n/NN/n minus/NN/minus k/NN/k /,/, it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a independent/JJ/independent set/NN/set of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, we/PRP/we have/VBP/have just/RB/just added/VBN/added new/JJ/new problem/NN/problem to/TO/to our/PRP$/our list/NN/list of/IN/of n/NN/n p/NN/p complete/NN/complete problems/NNP/problems. we/PRP/we have/VBP/have just/RB/just proved/VBN/proved that/IN/that vertex/NN/vertex cover/NN/cover is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. so/RB/so /,/, we/PRP/we started/VBD/started out/RP/out cook/NN/cook ?/./? s/NNS/s theorem/VBP/theorem gave/VBP/gave us/PRP/us sat/NNP/sat. sat/VBD/sat was/VBD/was n/VBN/n p/NN/p complete/NNP/complete. and/CC/and we/PRP/we then/RB/then showed/VBD/showed that/IN/that clique/NN/clique is/VBZ/is n/VBN/n p/NN/p complete/NN/complete then/RB/then we/PRP/we showed/VBD/showed that/IN/that independent/JJ/independent set/NN/set is/VBZ/is n/VBN/n p/NN/p complete/NN/complete and/CC/and now/RB/now you/PRP/you have/VBP/have showed/VBN/showed that/IN/that vertex/NN/vertex cover/NN/cover is/VBZ/is n/VBN/n p/NNP/p. so/RB/so /,/, our/PRP$/our next/JJ/next problem/NN/problem is/VBZ/is very/RB/very similar/JJ/similar to/TO/to vertex/NN/vertex cover/NNP/cover. but/CC/but /,/, it/PRP/it is/VBZ/is a/DT/a restricted/VBN/restricted form/NN/form of/IN/of vertex/NN/vertex cover/NNP/cover. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 50/CD/50 /:/: 28/CD/28 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is called/VBN/called less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. so/RB/so /,/, the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g /,/, such/JJ/such that/IN/that the/DT/the maximum/NN/maximum vertex/NN/vertex degree/NN/degree is/VBZ/is at/IN/at most/JJS/most 3/CD/3 and/CC/and the/DT/the positive/JJ/positive integer/NN/integer k/NNP/k. the/DT/the question/NN/question is/VBZ/is same/JJ/same does/VBZ/does g/JJ/g have/VB/have a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. without/IN/without this/DT/this /,/, if/IN/if i/PRP/i omit/VBP/omit this/DT/this just/RB/just graph/VBP/graph g/JJ/g and/CC/and integer/NN/integer positive/JJ/positive k/NN/k /,/, this/DT/this is/VBZ/is just/RB/just vertex/NN/vertex cover/NNP/cover. i/PRP/i add/VBP/add this/DT/this additional/JJ/additional constraint/NN/constraint to/TO/to the/DT/the input/NNP/input. the/DT/the only/JJ/only inputs/NNS/inputs i/PRP/i can/MD/can look/VB/look for/IN/for is/VBZ/is graphs/NNS/graphs where/WRB/where the/DT/the maximum/NN/maximum vertex/NN/vertex degree/NN/degree is/VBZ/is 3/CD/3. delta/NN/delta of/IN/of g/NN/g is/VBZ/is the/DT/the maximum/NN/maximum vertex/NN/vertex degree/NN/degree in/IN/in g/NNP/g. delta/NN/delta g/NN/g is/VBZ/is max/NN/max degree/NN/degree of/IN/of a/DT/a vertex/NN/vertex in/IN/in g/NNP/g. so/RB/so /,/, look/VBP/look at/IN/at the/DT/the degrees/NNS/degrees of/IN/of vertices/NNS/vertices in/IN/in the/DT/the graph/NNP/graph. and/CC/and delta/NN/delta is/VBZ/is the/DT/the maximum/NNP/maximum. so/RB/so /,/, the/DT/the maximum/NN/maximum degree/NN/degree i/PRP/i want/VBP/want is/VBZ/is 3/CD/3. so/RB/so /,/, this/DT/this problem/NN/problem is/VBZ/is like/IN/like vertex/NN/vertex cover/NN/cover /,/, the/DT/the only/JJ/only thing/NN/thing is/VBZ/is that/IN/that we/PRP/we focus/VBZ/focus on/IN/on graphs/NNS/graphs on/IN/on only/RB/only some/DT/some graphs/NNS/graphs /,/, not/RB/not all/DT/all graphs/NNP/graphs. only/RB/only graphs/VBZ/graphs which/WDT/which have/VBP/have maximum/NN/maximum vertex/NN/vertex degree/NN/degree at/IN/at most/JJS/most 3/CD/3. now/RB/now /,/, is/VBZ/is this/DT/this as/IN/as hard/JJ/hard we/PRP/we know/VBP/know that/IN/that vertex/NN/vertex cover/NN/cover in/IN/in general/JJ/general is/VBZ/is the/DT/the hard/JJ/hard problem/NNP/problem. is/VBZ/is this/DT/this problem/NN/problem as/IN/as hard/JJ/hard /,/, is/VBZ/is it/PRP/it as/RB/as hard/RB/hard is/VBZ/is it/PRP/it much/RB/much easier/JJR/easier to/TO/to find/VB/find vertex/NN/vertex covers/NNS/covers in/IN/in graphs/NNS/graphs /,/, where/WRB/where the/DT/the maximum/NN/maximum degree/NN/degree is/VBZ/is just/RB/just 3/CD/3 and/CC/and not/RB/not more/RBR/more than/IN/than 3/CD/3. the/DT/the answer/NN/answer is/VBZ/is no/NNP/no. in/IN/in fact/NN/fact /,/, even/RB/even in/IN/in this/DT/this case/NN/case the/DT/the problem/NN/problem turns/VBZ/turns out/RP/out to/TO/to be/VB/be hard/NNP/hard. so/RB/so /,/, even/RB/even for/IN/for graphs/NNS/graphs where/WRB/where the/DT/the degree/NN/degree of/IN/of a/DT/a vertex/NN/vertex does/VBZ/does not/RB/not exceed/VB/exceed 3/CD/3 vertex/NN/vertex cover/NN/cover problem/NN/problem vertex/NN/vertex cover/NN/cover is/VBZ/is hard/NNP/hard. we/PRP/we will/MD/will show/VB/show that/IN/that this/DT/this problem/NN/problem is/VBZ/is n/VBN/n p/NN/p hard/RB/hard or/CC/or n/VB/n p/NN/p complete/NNP/complete. to/TO/to prove/VB/prove that/IN/that /,/, this/DT/this is/VBZ/is in/IN/in n/NN/n p/NN/p is/VBZ/is very/RB/very similar/JJ/similar to/TO/to the/DT/the vertex/NN/vertex cover/NN/cover thing/NN/thing and/CC/and i/PRP/i will/MD/will not/RB/not do/VB/do it/NNP/it. so/RB/so /,/, just/RB/just do/VBP/do it/NNP/it. i/PRP/i hope/VBP/hope most/JJS/most of/IN/of you/PRP/you can/MD/can do/VB/do it/NNP/it. all/DT/all of/IN/of you/PRP/you can/MD/can do/VB/do it/PRP/it good/NNP/good. we/PRP/we will/MD/will just/RB/just prove/VB/prove that/IN/that /,/, less/RBR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NN/c is/VBZ/is n/VBN/n p/NN/p hard/NNP/hard. now/RB/now /,/, which/WDT/which of/IN/of the/DT/the problems/NNS/problems /,/, which/WDT/which have/VBP/have already/RB/already been/VBN/been proved/VBN/proved n/NN/n p/NN/p complete/NN/complete should/MD/should be/VB/be used/VBN/used for/IN/for this/DT/this /,/, i/PRP/i guess/VBP/guess vertex/NN/vertex cover/NN/cover is/VBZ/is a/DT/a closest/NNP/closest. so/RB/so /,/, once/RB/once you/PRP/you sort/NN/sort of/IN/of once/RB/once you/PRP/you go/VBP/go for/IN/for vertex/NN/vertex cover/NN/cover i/PRP/i mean/VBP/mean it/PRP/it is/VBZ/is correct/NNP/correct. so/RB/so /,/, vertex/NN/vertex cover/NN/cover we/PRP/we will/MD/will do/VB/do. so/RB/so /,/, what/WDT/what we/PRP/we will/MD/will do/VB/do is/VBZ/is given/VBN/given an/DT/an efficient/JJ/efficient algorithm/NN/algorithm polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm or/CC/or less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. we/PRP/we would/MD/would like/VB/like to/TO/to construct/VB/construct efficient/JJ/efficient algorithm/NN/algorithm polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for v/NN/v c/NN/c general/NN/general v/NN/v c/NNP/c. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write this/DT/this statement/NN/statement now/NNP/now. /NNP/( refer/NN/refer slide/NN/slide time/NN/time 53/CD/53 /:/: 59/CD/59 /CD/) so/RB/so /,/, given/VBN/given polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. we/PRP/we want/VBP/want to/TO/to prove/VB/prove that/IN/that there/EX/there is/VBZ/is we/PRP/we want/VBP/want to/TO/to construct/VB/construct a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for v/NN/v c/NNP/c. this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to do/NNP/do. and/CC/and once/RB/once we/PRP/we do/VBP/do this/DT/this /,/, we/PRP/we know/VBP/know that/IN/that from/IN/from the/DT/the previous/JJ/previous construction/NN/construction that/WDT/that there/EX/there is/VBZ/is one/CD/one for/IN/for everything/NN/everything in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just sort/NN/sort of/IN/of say/NN/say what/WP/what this/DT/this means/VBZ/means /,/, see/VBP/see going/VBG/going the/DT/the other/JJ/other direction/NN/direction is/VBZ/is easy/NNP/easy. supposing/NN/supposing /,/, you/PRP/you have/VBP/have polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for v/NN/v c/NNP/c. clearly/RB/clearly /,/, if/IN/if you/PRP/you restrict/VBP/restrict the/DT/the input/NN/input in/IN/in any/DT/any way/NN/way /,/, it/PRP/it does/VBZ/does not/RB/not sort/VB/sort of/IN/of i/PRP/i mean/VBP/mean you/PRP/you can/MD/can still/RB/still feed/VB/feed the/DT/the same/JJ/same input/NN/input to/TO/to the/DT/the algorithm/NNP/algorithm. but/CC/but /,/, here/RB/here you/PRP/you can/MD/can not/RB/not just/RB/just do/VBP/do that/NNP/that. your/PRP$/your input/NN/input is/VBZ/is a/DT/a graph/NN/graph and/CC/and k/NNP/k. now/RB/now /,/, this/DT/this graph/NN/graph could/MD/could have/VB/have vertex/NN/vertex degrees/NNS/degrees /,/, which/WDT/which are/VBP/are much/RB/much higher/JJR/higher than/IN/than 3/CD/3. what/WP/what do/VBP/do we/PRP/we do/VBP/do with/IN/with these/DT/these ?/./? that/IN/that is/VBZ/is the/DT/the /NN/( /:/( refer/NN/refer time/NN/time /:/: 55/CD/55 /:/: 05/CD/05 /CD/) /CD/) /./. if/IN/if all/DT/all vertex/NN/vertex degrees/NNS/degrees were/VBD/were 3/CD/3 then/RB/then there/RB/there is/VBZ/is no/DT/no problem/NN/problem /,/, i/PRP/i just/RB/just feed/VBP/feed this/DT/this into/IN/into algorithm/NN/algorithm for/IN/for less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NN/c /:/( /:/( refer/NN/refer time/NN/time /:/: 55/CD/55 /:/: 13/CD/13 /CD/) /CD/) /./. so/RB/so /,/, what/WDT/what happens/NNS/happens when/WRB/when that/IN/that of/IN/of vertices/NNS/vertices with/IN/with degree/JJ/degree greater/JJR/greater than/IN/than 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 whatever/NN/whatever up/IN/up to/TO/to n/VB/n minus/NN/minus k/NN/k largest/JJS/largest n/NN/n minus/NN/minus 1/CD/1 /,/, when/WRB/when the/DT/the trick/NN/trick is/VBZ/is to/TO/to somehow/VB/somehow decrease/NN/decrease that/WDT/that decreasing/VBG/decreasing the/DT/the vertex/NN/vertex degrees/NNS/degrees by/IN/by creating/VBG/creating new/NNP/new. so/RB/so /,/, given/VBN/given this/DT/this original/JJ/original graph/NN/graph i/PRP/i construct/VBP/construct u/PRP/u graph/VBP/graph /,/, where/WRB/where the/DT/the vertex/NN/vertex degrees/NNS/degrees are/VBP/are smaller/NNP/smaller. and/CC/and somehow/VB/somehow /,/, you/PRP/you know/VBP/know you/PRP/you must/MD/must have/VB/have some/DT/some control/NN/control over/IN/over the/DT/the vertex/NN/vertex cover/NNP/cover. the/DT/the vertex/NN/vertex cover/NN/cover in/IN/in the/DT/the new/JJ/new graph/NN/graph must/MD/must be/VB/be related/VBN/related very/RB/very closely/RB/closely related/VBN/related to/TO/to the/DT/the vertex/NN/vertex cover/NN/cover in/IN/in the/DT/the older/NNP/older. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the trick/NNP/trick. so/RB/so /,/, i/PRP/i will/MD/will tell/VB/tell you/PRP/you what/WP/what the/DT/the trick/NN/trick is/VBZ/is to/TO/to reduce/VB/reduce the/DT/the degree/NN/degree of/IN/of the/DT/the vertex/NNP/vertex. so/RB/so /,/, the/DT/the trick/NN/trick /,/, main/JJ/main trick/NN/trick is/VBZ/is degree/JJ/degree reduction/NN/reduction while/IN/while keeping/VBG/keeping the/DT/the size/NN/size of/IN/of the/DT/the v/NN/v c/NN/c /,/, while/IN/while controlling/NNP/controlling. the/DT/the size/NN/size of/IN/of v/NN/v c/NN/c if/IN/if there/EX/there is/VBZ/is some/DT/some controlled/JJ/controlled over/IN/over how/WRB/how it/PRP/it changes/VBZ/changes /,/, when/WRB/when we/PRP/we are/VBP/are here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us take/NNP/take. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 56/CD/56 /:/: 46/CD/46 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the vertex/NN/vertex of/IN/of degree/NN/degree 5/CD/5. somehow/NN/somehow i/PRP/i need/VBP/need to/TO/to that/DT/that is/VBZ/is here/RB/here is/VBZ/is rest/NN/rest of/IN/of the/DT/the graph/NNP/graph. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we do/VBP/do is/VBZ/is this/DT/this /,/, if/IN/if you/PRP/you change/VBP/change the/DT/the degree/NN/degree i/PRP/i break/VBP/break it/PRP/it up/IN/up into/IN/into three/CD/three parts/NNS/parts /,/, i/PRP/i break/VBP/break this/DT/this vertex/NN/vertex into/IN/into three/CD/three parts/NNP/parts. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the rest/NN/rest of/IN/of the/DT/the graph/NNP/graph. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 57/CD/57 /:/: 08/CD/08 /CD/) /CD/) three/CD/three of/IN/of them/PRP/them here/NNP/here. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see /,/, what/WDT/what i/PRP/i have/VBP/have done/NNP/done. see/NN/see there/RB/there are/VBP/are 5/CD/5 of/IN/of them/PRP/them i/PRP/i have/VBP/have just/RB/just broken/VBN/broken it/PRP/it up/RP/up into/IN/into two/CD/two parts/NNP/parts. let/NN/let us/PRP/us say/VBP/say /,/, 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 this/DT/this is/VBZ/is a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d and/CC/and e/NNP/e. a/DT/a b/NN/b c/NNP/c. so/RB/so /,/, this/DT/this one/CD/one vertex/NN/vertex i/PRP/i have/VBP/have broken/VBN/broken up/RP/up into/IN/into three/CD/three vertices/NNP/vertices. i/PRP/i have/VBP/have added/VBN/added two/CD/two new/JJ/new vertices/NNP/vertices. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that /,/, vertex/NN/vertex degrees/NNS/degrees are/VBP/are decreasing/NNP/decreasing. initially/RB/initially i/PRP/i had/VBD/had one/CD/one of/IN/of degree/NN/degree 5/CD/5. and/CC/and now/RB/now /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at these/DT/these vertices/NNS/vertices /,/, there/EX/there is/VBZ/is one/CD/one of/IN/of degree/NN/degree 2/CD/2 /,/, one/CD/one of/IN/of 3/CD/3 and/CC/and one/CD/one of/IN/of degree/NN/degree 4/CD/4. so/RB/so /,/, these/DT/these vertex/NN/vertex degrees/NNS/degrees i/PRP/i have/VBP/have decreased/VBN/decreased /,/, if/IN/if this/DT/this were/VBD/were 4/CD/4 i/PRP/i would/MD/would not/RB/not have/VB/have one/CD/one of/IN/of these/DT/these edges/NNP/edges. let/VBD/let us/PRP/us say/VBP/say /,/, that/IN/that a/DT/a was/VBD/was not/RB/not there/NNP/there. then/RB/then i/PRP/i am/VBP/am done/NNP/done. so/RB/so /,/, i/PRP/i have/VBP/have three/CD/three vertices/NNS/vertices one/CD/one of/IN/of degree/NN/degree 2/CD/2 and/CC/and two/CD/two of/IN/of degree/JJ/degree 3/CD/3. i/PRP/i am/VBP/am done/NNP/done. i/PRP/i have/VBP/have decreased/VBN/decreased vertex/NN/vertex degree/NN/degree of/IN/of degree/NN/degree 4/CD/4 vertex/NNP/vertex. if/IN/if it/PRP/it is/VBZ/is 5/CD/5 i/PRP/i will/MD/will have/VB/have one/CD/one with/IN/with 4/CD/4. if/IN/if i/PRP/i have/VBP/have larger/JJR/larger again/RB/again i/PRP/i just/RB/just split/JJ/split it/PRP/it into/IN/into two/CD/two parts/NNP/parts. of/IN/of course/NN/course /,/, i/PRP/i have/VBP/have to/TO/to do/VB/do this/DT/this repeatedly/NNP/repeatedly. i/PRP/i take/VBP/take this/DT/this graph/NN/graph i/PRP/i split/VBP/split this/DT/this vertex/NN/vertex into/IN/into two/NNP/two. so/RB/so /,/, i/PRP/i decrease/VBP/decrease the/DT/the degree/NNP/degree. and/CC/and i/PRP/i keep/VBP/keep doing/VBG/doing this/DT/this /,/, till/IN/till every/DT/every vertex/NN/vertex has/VBZ/has degree/JJ/degree 3/CD/3 or/CC/or less/NNP/less. that/IN/that is/VBZ/is the/DT/the rough/JJ/rough idea/NNP/idea. let/NN/let us/PRP/us see/VBP/see /,/, what/WP/what happens/NNS/happens to/TO/to the/DT/the vertex/NN/vertex cover/NN/cover /,/, when/WRB/when i/PRP/i do/VBP/do this/DT/this split/NNP/split. so/RB/so /,/, just/RB/just to/TO/to recap/NNP/recap. i/PRP/i look/VBP/look at/IN/at this/DT/this graph/NN/graph look/NN/look at/IN/at if/IN/if there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex of/IN/of high/JJ/high degree/NN/degree i/PRP/i split/VBP/split it/PRP/it into/IN/into i/PRP/i split/VBP/split this/DT/this degree/NN/degree up/NNP/up. i/PRP/i split/VBP/split this/DT/this degree/NN/degree into/IN/into two/CD/two parts/NNP/parts. and/CC/and add/VBD/add a/DT/a new/JJ/new add/NN/add another/DT/another vertex/NNP/vertex. so/RB/so /,/, instead/RB/instead of/IN/of vertex/NN/vertex and/CC/and i/PRP/i have/VBP/have a/DT/a three/CD/three vertices/NNP/vertices. and/CC/and the/DT/the degree/NN/degree has/VBZ/has been/VBN/been reduced/NNP/reduced. initially/RB/initially /,/, they/PRP/they were/VBD/were 4/CD/4 /CD/( /CD/( refer/NN/refer time/NN/time /:/: 59/CD/59 /:/: 03/CD/03 /CD/) /CD/) /./. they/PRP/they have/VBP/have two/CD/two of/IN/of them/PRP/them are/VBP/are degree/RB/degree 3/CD/3 and/CC/and 1/CD/1 is/VBZ/is degree/JJ/degree 2/CD/2 and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, i/PRP/i keep/VBP/keep doing/VBG/doing this/NNP/this. now/RB/now /,/, i/PRP/i have/VBP/have to/TO/to somehow/VB/somehow say/NN/say /,/, that/IN/that the/DT/the vertex/NN/vertex cover/NN/cover does/VBZ/does not/RB/not change/VB/change much/NNP/much. even/RB/even if/IN/if it/PRP/it changes/VBZ/changes there/RB/there must/MD/must be/VB/be i/PRP/i must/MD/must say/VB/say that/IN/that it/PRP/it changes/VBZ/changes clearly/RB/clearly by/IN/by this/DT/this much/NNP/much. only/RB/only /,/, then/RB/then can/MD/can i/VB/i make/VB/make the/DT/the connection/NN/connection between/IN/between the/DT/the vertex/NN/vertex cover/NN/cover in/IN/in the/DT/the final/JJ/final graph/NNP/graph. and/CC/and the/DT/the vertex/NN/vertex cover/NN/cover in/IN/in the/DT/the original/JJ/original graph/NNP/graph. final/JJ/final graph/NN/graph has/VBZ/has degree/JJ/degree of/IN/of vertex/NN/vertex at/IN/at most/JJS/most three/CD/three /,/, that/WDT/that is/VBZ/is fine/NNP/fine. i/PRP/i should/MD/should also/RB/also be/VB/be able/JJ/able to/TO/to say/VB/say that/IN/that /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of this/DT/this size/NN/size in/IN/in the/DT/the final/JJ/final graph/NNP/graph. if/IN/if and/CC/and only/RB/only if/IN/if there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k the/DT/the original/JJ/original graph/NN/graph /,/, and/CC/and that/IN/that we/PRP/we will/MD/will see/VB/see right/RB/right now/NNP/now. so/RB/so /,/, supposing/VBG/supposing the/DT/the claim/NN/claim is/VBZ/is this/NNP/this. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the graph/NN/graph g/NN/g and/CC/and here/RB/here is/VBZ/is g/JJ/g prime/NN/prime /,/, which/WDT/which i/PRP/i get/VBP/get this/DT/this way/NNP/way. now/RB/now /,/, the/DT/the claim/NN/claim is/VBZ/is that/IN/that g/NN/g has/VBZ/has vertex/NN/vertex cover/RB/cover of/IN/of size/NN/size k/NN/k /,/, if/IN/if and/CC/and only/RB/only if/IN/if g/NN/g prime/NN/prime has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k plus/CC/plus 1/CD/1 /,/, which/WDT/which means/VBZ/means the/DT/the size/NN/size of/IN/of the/DT/the minimum/JJ/minimum vertex/NN/vertex cover/NN/cover goes/VBZ/goes up/RP/up by/IN/by 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my each/DT/each time/NN/time i/PRP/i use/VBP/use this/DT/this split/NN/split the/DT/the vertex/NN/vertex cover/NN/cover size/NN/size goes/VBZ/goes up/RP/up by/IN/by 1/CD/1 /CD/( /CD/( refer/NN/refer time/NN/time /:/: 1/LS/1 /:/: 00/CD/00 /:/: 28/CD/28 /CD/) /CD/) /./. so/RB/so /,/, why/WRB/why is/VBZ/is this/DT/this true/JJ/true ?/./? so/RB/so /,/, let/VB/let us/PRP/us prove/VBP/prove both/DT/both ways/NNS/ways of/IN/of this/DT/this inequality/NNP/inequality. so/RB/so /,/, let/VB/let us/PRP/us prove/VBP/prove this/NNP/this. supposing/NN/supposing g/NN/g has/VBZ/has a/DT/a v/NN/v c/NN/c of/IN/of size/NN/size k/NNP/k. why/WRB/why should/MD/should g/VB/g prime/JJ/prime should/MD/should have/VB/have a/DT/a vertex/NN/vertex v/NN/v c/NN/c of/IN/of k/NN/k plus/CC/plus 1/CD/1. so/RB/so /,/, take/VB/take the/DT/the v/NN/v c/NN/c /,/, which/WDT/which g/NN/g i/NNP/i. there/EX/there are/VBP/are two/CD/two cases/NNP/cases. so/RB/so /,/, case/NN/case 1/CD/1 is/VBZ/is let/VBN/let us/PRP/us call/VBP/call this/DT/this vertex/NN/vertex u/NNP/u. and/CC/and here/RB/here let/VB/let me/PRP/me call/MD/call these/VB/these u/PRP/u 1/CD/1 /,/, u/NN/u 2/CD/2 /,/, u/NN/u 3/CD/3. case/NN/case 1/CD/1 is/VBZ/is u/NN/u belongs/NNS/belongs to/TO/to the/DT/the v/NN/v c/NNP/c. now/RB/now /,/, u/VBP/u is/VBZ/is in/IN/in the/DT/the v/NN/v c/NN/c then/RB/then put/VBD/put u/NN/u 1/CD/1 and/CC/and u/NN/u 2/CD/2. the/DT/the rest/NN/rest of/IN/of the/DT/the vertices/NNS/vertices are/VBP/are in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover remain/NN/remain the/DT/the same/NNP/same. there/RB/there are/VBP/are some/DT/some these/DT/these vertices/NNS/vertices in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover in/IN/in this/DT/this portion/NN/portion of/IN/of the/DT/the graph/NNP/graph. and/CC/and i/PRP/i have/VBP/have used/NNP/used. i/PRP/i put/VBD/put u/RP/u 1/CD/1 /,/, u/NN/u 2/CD/2 and/CC/and the/DT/the same/JJ/same set/NN/set of/IN/of vertices/NNS/vertices in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. and/CC/and now/RB/now /,/, let/VB/let us/PRP/us observe/VB/observe that/IN/that this/DT/this is/VBZ/is also/RB/also a/DT/a vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, the/DT/the vertex/NN/vertex cover/NN/cover size/NN/size has/VBZ/has gone/VBN/gone up/RP/up by/IN/by 1/CD/1. if/IN/if there/EX/there were/VBD/were l/NN/l plus/RB/plus 1/CD/1 /,/, l/NN/l vertices/NNS/vertices here/RB/here and/CC/and 1/CD/1 vertex/NN/vertex here/RB/here /,/, then/RB/then i/PRP/i have/VBP/have l/JJ/l vertices/NNS/vertices here/RB/here and/CC/and 2/CD/2 vertices/NNP/vertices. so/RB/so /,/, it/PRP/it is/VBZ/is l/JJ/l plus/NN/plus 1/CD/1. why/WRB/why is/VBZ/is this/DT/this the/DT/the vertex/NN/vertex cover/NNP/cover. now/RB/now /,/, if/IN/if the/DT/the edges/NNS/edges completely/RB/completely in/IN/in this/DT/this portion/NN/portion it/PRP/it is/VBZ/is covered/NNP/covered. now/RB/now /,/, since/IN/since both/DT/both u/NN/u 1/CD/1 and/CC/and u/NN/u 2/CD/2 are/VBP/are in/IN/in these/DT/these edges/NNS/edges are/VBP/are covered/NNP/covered. and/CC/and these/DT/these two/CD/two edges/NNS/edges are/VBP/are also/RB/also covered/NNP/covered. so/RB/so /,/, every/DT/every edge/NN/edge is/VBZ/is covered/NNP/covered. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a vertex/NN/vertex cover/NNP/cover. now/RB/now /,/, case/NN/case 2/CD/2 /,/, u/NN/u is/VBZ/is not/RB/not in/IN/in v/NN/v c/NNP/c. then/RB/then put/VBD/put u/NN/u 3/CD/3 in/IN/in the/DT/the v/NN/v c/NNP/c. now/RB/now again/RB/again let/VB/let us/PRP/us /,/, check/VBP/check this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex cover/NNP/cover. now/RB/now /,/, all/DT/all of/IN/of these/DT/these vertices/NNS/vertices all/DT/all of/IN/of this/DT/this edges/NNS/edges a/DT/a u/NN/u /,/, b/NN/b u/NN/u and/CC/and so/RB/so on/NNP/on. have/VBP/have to/TO/to be/VB/be covered/VBN/covered /,/, which/WDT/which means/VBZ/means a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e must/MD/must be/VB/be in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover /,/, u/NN/u is/VBZ/is not/RB/not in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, all/DT/all these/DT/these edges/NNS/edges are/VBP/are covered/VBN/covered by/IN/by the/DT/the vertex/NN/vertex cover/NN/cover in/IN/in this/DT/this portion/NNP/portion. since/IN/since /,/, a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e is/VBZ/is in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, the/DT/the only/JJ/only edges/NNS/edges we/PRP/we need/VBP/need to/TO/to worry/VB/worry about/IN/about is/VBZ/is u/NN/u 1/CD/1 /,/, u/NN/u 3/LS/3 and/CC/and u/NN/u 2/CD/2 /,/, u/NN/u 3/LS/3 and/CC/and because/IN/because we/PRP/we put/VBD/put u/PRP/u 3/CD/3 in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover these/DT/these four/CD/four also/RB/also covers/NNP/covers. so/RB/so /,/, this/DT/this is/VBZ/is also/RB/also /:/( /:/( refer/NN/refer time/NN/time /:/: 1/LS/1 /:/: 02/CD/02 /:/: 54/CD/54 /CD/) /CD/) /./. just/RB/just to/TO/to recap/VB/recap /,/, if/IN/if you/PRP/you is/VBZ/is in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover remove/NN/remove u/NN/u from/IN/from the/DT/the vertex/NN/vertex cover/NN/cover and/CC/and put/VBD/put u/RP/u 1/CD/1 and/CC/and u/NN/u 2/CD/2 to/TO/to get/VB/get the/DT/the new/JJ/new vertex/NN/vertex cover/NN/cover in/IN/in g/NN/g prime/NNP/prime. this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex cover/NNP/cover. if/IN/if u/NN/u is/VBZ/is not/RB/not in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover /,/, take/VBP/take the/DT/the old/JJ/old vertex/NN/vertex cover/NN/cover and/CC/and put/VBD/put u/RP/u 3/CD/3 additionally/RB/additionally in/IN/in this/DT/this vertex/NN/vertex cover/NNP/cover. and/CC/and this/DT/this will/MD/will be/VB/be a/DT/a vertex/NN/vertex cover/NN/cover in/IN/in the/DT/the graph/NNP/graph. this/DT/this proves/VBZ/proves one/CD/one direction/NNP/direction. so/RB/so /,/, we/PRP/we need/VBP/need to/TO/to prove/VB/prove /,/, the/DT/the other/JJ/other direction/NN/direction in/IN/in which/WDT/which that/IN/that is/VBZ/is also/RB/also very/RB/very /,/, very/RB/very simple/NNP/simple. now/RB/now /,/, just/RB/just to/TO/to observe/VB/observe let/NN/let us/PRP/us look/VBP/look at/IN/at u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2 and/CC/and u/NN/u 3/CD/3. now/RB/now /,/, there/EX/there are/VBP/are two/CD/two cases/NNS/cases again/NNP/again. so/RB/so /,/, only/RB/only look/VBP/look at/IN/at the/DT/the vertex/NN/vertex cover/NN/cover here/NNP/here. i/PRP/i will/MD/will show/VB/show that/IN/that the/DT/the vertex/NN/vertex cover/NN/cover of/IN/of 1/CD/1 size/NN/size 1/CD/1 less/JJR/less on/IN/on this/DT/this side/NNP/side. whatever/NN/whatever /,/, vertex/NN/vertex cover/NN/cover is/VBZ/is there/EX/there on/IN/on this/DT/this side/NN/side i/PRP/i will/MD/will show/VB/show there/EX/there is/VBZ/is 1/CD/1 of/IN/of size/NN/size 1/CD/1 less/NNP/less. so/RB/so /,/, the/DT/the case/NN/case 1/CD/1 is/VBZ/is u/NN/u 3/CD/3 belongs/NNS/belongs to/TO/to the/DT/the vertex/NN/vertex cover/NNP/cover. we/PRP/we remember/VBP/remember this/DT/this vertex/NN/vertex cover/NN/cover is/VBZ/is in/IN/in g/NN/g prime/NNP/prime. then/RB/then i/PRP/i just/RB/just remove/VBP/remove u/PRP/u 3/CD/3. and/CC/and you/PRP/you can/MD/can check/VB/check the/DT/the rest/NN/rest of/IN/of the/DT/the vertices/NNS/vertices form/NN/form a/DT/a vertex/NN/vertex cover/NN/cover for/IN/for this/DT/this input/NNP/input. i/PRP/i must/MD/must say/VB/say that/IN/that /,/, only/RB/only u/VBP/u 3/CD/3 is/VBZ/is in/IN/in v/NN/v c/NN/c /,/, but/CC/but not/RB/not u/VBP/u 1/CD/1 and/CC/and u/NN/u 2/CD/2. so/RB/so /,/, only/RB/only u/VBP/u 3/CD/3 among/IN/among u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2 /,/, u/NN/u 3/LS/3 ;/:/; so/RB/so that/IN/that is/VBZ/is case/NN/case 1/CD/1. u/NN/u 3/CD/3 is/VBZ/is in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover /,/, but/CC/but u/PRP/u 1/CD/1 and/CC/and u/NN/u 2/CD/2 are/VBP/are not/RB/not in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. now/RB/now ;/:/; that/DT/that means/VBZ/means /,/, that/IN/that a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e all/DT/all of/IN/of these/DT/these edges/NNS/edges are/VBP/are present/JJ/present in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, these/DT/these edges/NNS/edges are/VBP/are taken/VBN/taken care/NN/care of/IN/of and/CC/and clearly/RB/clearly if/IN/if there/EX/there is/VBZ/is a/DT/a edge/NN/edge only/RB/only in/IN/in this/DT/this portion/NN/portion it/PRP/it is/VBZ/is taken/VBN/taken care/NN/care of/IN/of here/RB/here also/NNP/also. because/IN/because /,/, this/DT/this portion/NN/portion of/IN/of the/DT/the vertex/NN/vertex cover/NN/cover remains/VBZ/remains the/DT/the same/NNP/same. i/PRP/i have/VBP/have just/RB/just removed/VBN/removed them/NNP/them. so/RB/so /,/, if/IN/if u/NN/u 3/CD/3 is/VBZ/is in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover /,/, u/NN/u 1/CD/1 and/CC/and u/NN/u 2/CD/2 are/VBP/are not/RB/not in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover /,/, then/RB/then you/PRP/you are/VBP/are done/VBN/done you/PRP/you just/RB/just remove/VBP/remove u/PRP/u 3/CD/3. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 1/LS/1 /:/: 05/CD/05 /:/: 27/CD/27 /CD/) so/RB/so /,/, the/DT/the next/JJ/next case/NN/case case/NN/case 2/CD/2 /,/, if/IN/if it/PRP/it is/VBZ/is not/RB/not this/DT/this case/NN/case so/IN/so let/NN/let us/PRP/us /,/, look/VBP/look at/IN/at u/NN/u 3/CD/3 /,/, u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2. then/RB/then i/PRP/i claim/VBP/claim that/IN/that at/IN/at least/JJS/least two/CD/two of/IN/of u/NN/u 1/CD/1 /,/, u/NN/u 2/CD/2 /,/, u/NN/u 3/LS/3 must/MD/must be/VB/be ?/./? two/CD/two of/IN/of these/DT/these /,/, why/WRB/why 2/CD/2 of/IN/of these/DT/these well/RB/well /,/, i/PRP/i can/MD/can not/RB/not have/VB/have only/RB/only u/VB/u 1/CD/1 in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. i/PRP/i can/MD/can not/RB/not have/VB/have only/RB/only u/VB/u 1/CD/1 in/IN/in the/DT/the vertex/NN/vertex cover/NN/cover /,/, because/IN/because if/IN/if both/DT/both u/NN/u 2/CD/2 and/CC/and u/NN/u 3/CD/3 are/VBP/are not/RB/not there/RB/there /,/, then/RB/then this/DT/this edge/NN/edge is/VBZ/is not/RB/not covered/NNP/covered. the/DT/the case/NN/case only/RB/only u/VBP/u 3/CD/3 is/VBZ/is taken/VBN/taken care/NN/care of/NNP/of. so/RB/so /,/, we/PRP/we must/MD/must have/VB/have at/IN/at least/JJS/least two/CD/two of/IN/of these/NNP/these. in/IN/in this/DT/this case/NN/case /,/, i/PRP/i remove/VBP/remove this/DT/this and/CC/and put/VBD/put remove/RP/remove and/CC/and put/VBD/put u/RP/u in/IN/in the/DT/the v/NN/v c/NN/c instead/NNP/instead. then/RB/then /,/, i/PRP/i get/VBP/get vertex/NN/vertex cover/NN/cover of/IN/of 1/CD/1 less/NNP/less. then/RB/then /,/, well/RB/well what/WP/what if/IN/if all/DT/all three/CD/three are/VBP/are present/NNP/present. well/RB/well this/DT/this can/MD/can not/RB/not be/VB/be a/DT/a minimum/JJ/minimum vertex/NNP/vertex. if/IN/if there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size there/EX/there is/VBZ/is one/CD/one of/IN/of smaller/JJR/smaller size/NN/size on/IN/on the/DT/the right/NN/right hand/NN/hand side/NNP/side. so/RB/so /,/, that/IN/that does/VBZ/does not/RB/not impede/VB/impede our/PRP$/our progress/NNP/progress. so/RB/so /,/, when/WRB/when i/PRP/i do/VBP/do this/DT/this split/NN/split /,/, the/DT/the vertex/NN/vertex cover/NN/cover may/MD/may rise/VB/rise by/IN/by at/IN/at most/JJS/most one/NNP/one. the/DT/the vertex/NN/vertex cover/NN/cover will/MD/will rise/VB/rise by/IN/by at/IN/at most/JJS/most one/CD/one by/IN/by so/RB/so then/RB/then the/DT/the procedure/NN/procedure is/VBZ/is clear/NNP/clear. i/PRP/i start/VBP/start with/IN/with g/NN/g /,/, then/RB/then i/PRP/i do/VBP/do this/DT/this sequence/NN/sequence of/IN/of these/DT/these transformations/NNS/transformations g/VBP/g 1/CD/1 /,/, g/JJ/g 2/CD/2. each/DT/each time/NN/time i/PRP/i split/VBP/split a/DT/a vertex/NN/vertex into/IN/into 3/CD/3. so/RB/so /,/, i/PRP/i keep/VBP/keep doing/VBG/doing this/DT/this as/IN/as long/RB/long as/IN/as there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex of/IN/of degree/NN/degree 4/CD/4 or/CC/or greater/NNP/greater. so/RB/so /,/, finally/RB/finally /,/, i/PRP/i end/VBP/end up/RP/up with/IN/with g/NN/g l/NNP/l. i/PRP/i have/VBP/have done/VBN/done this/DT/this l/NN/l times/VBZ/times and/CC/and i/PRP/i get/VBP/get a/DT/a graph/NNP/graph. so/RB/so /,/, delta/NN/delta of/IN/of g/NN/g l/NN/l is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 3/CD/3. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out /,/, if/IN/if g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. what/WP/what i/PRP/i do/VBP/do is/VBZ/is i/PRP/i ask/VBP/ask if/IN/if this/DT/this has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k plus/CC/plus l/NNP/l. if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes /,/, i/PRP/i say/VBP/say yes/NNS/yes g/VBP/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k /,/, which/WDT/which says/VBZ/says no/DT/no i/PRP/i say/VBP/say g/JJ/g does/NNS/does not/RB/not have/VB/have a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. and/CC/and the/DT/the proof/NN/proof that/IN/that it/PRP/it works/VBZ/works essentially/RB/essentially is/VBZ/is we/PRP/we have/VBP/have actually/RB/actually done/VBN/done it/NNP/it. reason/NN/reason is/VBZ/is each/DT/each time/NN/time we/PRP/we do/VBP/do a/DT/a split/NN/split vertex/NN/vertex cover/NN/cover rises/NNS/rises by/IN/by 1/CD/1. so/RB/so /,/, this/DT/this actually/RB/actually /,/, proves/NNS/proves that/WDT/that less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NN/c is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. we/PRP/we just/RB/just one/CD/one small/JJ/small thing/NN/thing we/PRP/we need/VBP/need to/TO/to worry/VB/worry about/NNP/about. well/RB/well /,/, you/PRP/you start/VBP/start with/IN/with a/DT/a initial/JJ/initial graph/NN/graph start/NN/start splitting/VBG/splitting /,/, what/WP/what if/IN/if there/EX/there are/VBP/are too/RB/too many/JJ/many splits/NNP/splits. we/PRP/we have/VBP/have got/VBN/got the/DT/the polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for this/NNP/this. we/PRP/we started/VBD/started out/RP/out with/IN/with the/DT/the graph/NNP/graph. and/CC/and supposing/VBG/supposing you/PRP/you construct/VB/construct a/DT/a new/JJ/new graph/NN/graph you/PRP/you take/VBP/take lot/NN/lot of/IN/of time/NNP/time. then/RB/then this/DT/this will/MD/will not/RB/not work/NNP/work. we/PRP/we will/MD/will show/VB/show next/JJ/next time/NN/time that/WDT/that this/DT/this is/VBZ/is not/RB/not true/JJ/true and/CC/and l/NN/l is/VBZ/is bounded/NNP/bounded. so/RB/so /,/, l/NN/l will/MD/will not/RB/not be/VB/be too/RB/too large/NNP/large. if/IN/if you/PRP/you show/VBP/show that/IN/that l/NN/l is/VBZ/is not/RB/not too/RB/too large/JJ/large /,/, then/RB/then the/DT/the final/JJ/final graph/NN/graph is/VBZ/is not/RB/not so/RB/so big/JJ/big and/NNP/and. so/RB/so our/PRP$/our entire/JJ/entire procedure/NN/procedure will/MD/will run/VB/run in/IN/in polynomial/JJ/polynomial time/NNP/time. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan computer/NN/computer science/NN/science engineering/NN/engineering department/NN/department indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 30/CD/30 np-completeness/JJ/np-completeness /:/- 5/CD/5 /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 00/CD/00 /CD/) we/PRP/we were/VBD/were looking/VBG/looking at/IN/at the/DT/the problem/NN/problem less/NN/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. so/RB/so /,/, this/DT/this problem/NN/problem the/DT/the input/NN/input is/VBZ/is a/DT/a graph/NN/graph g/NN/g such/JJ/such that/IN/that delta/NN/delta g/NN/g /,/, which/WDT/which has/VBZ/has the/DT/the maximum/NN/maximum vertex/NN/vertex degree/NN/degree is/VBZ/is at/IN/at most/JJS/most 3/CD/3 and/CC/and the/DT/the positive/JJ/positive integer/NN/integer k/NNP/k. the/DT/the question/NN/question we/PRP/we ask/VBP/ask is/VBZ/is does/VBZ/does g/NN/g have/VBP/have a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k ?/./? our/PRP$/our objective/NN/objective was/VBD/was to/TO/to prove/VB/prove that/IN/that this/DT/this is/VBZ/is n/VBN/n p/NN/p complete/NN/complete ;/:/; it/PRP/it is/VBZ/is easy/JJ/easy to/TO/to see/VB/see that/IN/that this/DT/this problem/NN/problem is/VBZ/is an/DT/an n/NN/n c/NN/c ;/:/; the/DT/the proof/NN/proof is/VBZ/is very/RB/very similar/JJ/similar as/IN/as for/IN/for the/DT/the vertex/NN/vertex cover/NNP/cover. the/DT/the fact/NN/fact that/IN/that delta/NN/delta g/NN/g is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 3/CD/3 does/VBZ/does not/RB/not change/VB/change anything/NNP/anything. so/RB/so /,/, now/RB/now we/PRP/we need/VBP/need to/TO/to prove/VB/prove that/IN/that if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. there/EX/there is/VBZ/is one/CD/one for/IN/for everything/NN/everything in/IN/in it/PRP/it in/IN/in n/NN/n p/NN/p ;/:/; we/PRP/we have/VBP/have seen/VBN/seen that/IN/that it/PRP/it suffices/VBZ/suffices to/TO/to prove/VB/prove that/IN/that if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. there/EX/there is/VBZ/is one/CD/one for/IN/for b/NN/b c/NN/c that/WDT/that is/VBZ/is what/WP/what we/PRP/we were/VBD/were doing/NNP/doing. the/DT/the trick/NN/trick was/VBD/was this/DT/this /,/, so/RB/so we/PRP/we are/VBP/are given/VBN/given a/DT/a algorithm/NN/algorithm for/IN/for 3/CD/3 v/NN/v c/NNP/c. so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given an/DT/an algorithm/NN/algorithm for/IN/for less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. so/RB/so we/PRP/we want/VBP/want to/TO/to construct/VB/construct one/CD/one for/IN/for v/NN/v c/NN/c /,/, so/RB/so we/PRP/we take/VBP/take the/DT/the input/NN/input graph/NN/graph let/NN/let us/PRP/us say/VBP/say g/NNP/g. now/RB/now /,/, this/DT/this could/MD/could have/VB/have vertices/NNS/vertices of/IN/of varying/VBG/varying degrees/NNS/degrees especially/RB/especially vertices/NNS/vertices with/IN/with degree/JJ/degree greater/JJR/greater than/IN/than 3/CD/3. if/IN/if the/DT/the vertex/NN/vertex degrees/NNS/degrees are/VBP/are less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 then/RB/then we/PRP/we have/VBP/have no/DT/no problem/NNP/problem. now/RB/now /,/, what/WDT/what do/VBP/do we/PRP/we do/VBP/do for/IN/for large/JJ/large vertices/NNS/vertices with/IN/with large/JJ/large degree/NN/degree /,/, we/PRP/we use/VBP/use the/DT/the split/NN/split operation/NNP/operation. so/RB/so /,/, supposing/VBG/supposing i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex with/IN/with large/JJ/large degree/NN/degree /,/, what/WP/what you/PRP/you do/VBP/do is/VBZ/is you/PRP/you sort/NN/sort of/IN/of split/NN/split this/DT/this vertex/NN/vertex into/IN/into 3/CD/3 parts/NNP/parts. now/RB/now /,/, some/DT/some of/IN/of the/DT/the neighbors/NNS/neighbors are/VBP/are attached/VBN/attached here/RB/here and/CC/and some/DT/some of/IN/of the/DT/the neighbors/NNS/neighbors are/VBP/are attached/VBN/attached there/NNP/there. essentially/RB/essentially this/DT/this is/VBZ/is broken/VBN/broken up/RP/up into/IN/into 2/CD/2 parts/NNS/parts some/DT/some of/IN/of them/PRP/them are/VBP/are attached/VBN/attached here/RB/here some/DT/some of/IN/of them/PRP/them are/VBP/are attached/VBN/attached here/NNP/here. now/RB/now /,/, we/PRP/we saw/VBD/saw that/IN/that if/IN/if this/DT/this has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size let/NN/let us/PRP/us say/VBP/say l/NN/l this/DT/this has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size less/RBR/less than/IN/than equal/JJ/equal to/TO/to l/NN/l plus/RB/plus 1/CD/1. and/CC/and if/IN/if this/DT/this has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size p/NN/p /,/, this/DT/this has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size less/RBR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to sorry/VB/sorry p/NN/p minus/NN/minus 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the effect/NN/effect of/IN/of splitting/VBG/splitting a/DT/a vertex/NN/vertex into/IN/into these/DT/these 2/CD/2 parts/NNP/parts. so/RB/so /,/, the/DT/the vertex/NN/vertex cover/NN/cover goes/VBZ/goes up/RP/up by/IN/by only/RB/only 1/CD/1 while/IN/while we/PRP/we have/VBP/have reduced/VBN/reduced the/DT/the degree/NN/degree of/IN/of this/DT/this vertex/NNP/vertex. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 01/CD/01 /CD/) so/RB/so /,/, the/DT/the algorithm/NN/algorithm is/VBZ/is as/IN/as follows/NNS/follows /,/, so/RB/so you/PRP/you take/VBP/take g/RP/g and/CC/and then/RB/then construct/VB/construct keep/NN/keep splitting/VBG/splitting vertices/NNS/vertices as/IN/as long/RB/long as/IN/as there/EX/there are/VBP/are vertices/NNS/vertices with/IN/with you/PRP/you know/VBP/know degree/JJ/degree at/IN/at least/JJS/least 4/CD/4 g/NN/g 1/CD/1 g/NN/g 2/CD/2 so/RB/so on/NNP/on. so/IN/so /,/, maybe/RB/maybe i/PRP/i will/MD/will do/VB/do this/DT/this l/NN/l times/VBZ/times so/RB/so this/DT/this is/VBZ/is done/VBN/done l/NN/l times/NNP/times. so/RB/so /,/, and/CC/and in/IN/in g/NN/g l/NN/l i/PRP/i know/VBP/know that/IN/that there/EX/there is/VBZ/is no/DT/no vertex/NN/vertex with/IN/with degree/NN/degree greater/JJR/greater than/IN/than 3/CD/3. so/RB/so /,/, g/IN/g l/NN/l is/VBZ/is applied/VBN/applied on/IN/on this/DT/this algorithm/NN/algorithm for/IN/for 3/CD/3 v/NN/v c/NNP/c. so/RB/so /,/, this/DT/this is/VBZ/is now/RB/now /,/, input/IN/input to/TO/to an/DT/an algorithm/NN/algorithm for/IN/for 3/CD/3 v/NN/v c/NN/c and/CC/and the/DT/the k/NN/k /,/, so/RB/so initially/RB/initially k/VB/k had/VBD/had a/DT/a k/NN/k here/NNP/here. so/RB/so /,/, now/RB/now i/PRP/i feed/VBP/feed in/IN/in k/NN/k plus/CC/plus l/NN/l and/CC/and if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes then/RB/then i/PRP/i output/VBD/output yes/NNS/yes /,/, if/IN/if it/PRP/it says/VBZ/says no/DT/no then/RB/then i/PRP/i output/VBD/output no/DT/no /,/, so/RB/so this/DT/this is/VBZ/is the/DT/the entire/JJ/entire algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i take/VBP/take g/JJ/g i/PRP/i want/VBP/want to/TO/to find/VB/find out/RP/out whether/IN/whether it/PRP/it has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. i/PRP/i do/VBP/do this/DT/this sort/NN/sort of/IN/of transformation/NN/transformation i/PRP/i get/VBP/get final/JJ/final graph/NN/graph g/NN/g l/NN/l i/PRP/i feed/VBP/feed this/DT/this into/IN/into 3/CD/3 v/NN/v c/NN/c with/IN/with my/PRP$/my new/JJ/new k/NN/k as/IN/as k/NN/k plus/CC/plus l/NNP/l. if/IN/if it/PRP/it says/VBZ/says yes/VBZ/yes then/RB/then i/PRP/i say/VBP/say yes/NNS/yes if/IN/if it/PRP/it says/VBZ/says no/DT/no i/PRP/i say/VBP/say no/NNP/no. now/RB/now /,/, if/IN/if this/DT/this runs/VBZ/runs in/IN/in polynomial/JJ/polynomial time/NN/time i/PRP/i want/VBP/want to/TO/to show/VB/show that/IN/that this/DT/this entire/JJ/entire thing/NN/thing runs/VBZ/runs in/IN/in polynomial/JJ/polynomial time/NNP/time. the/DT/the first/JJ/first thing/NN/thing is/VBZ/is that/IN/that there/EX/there should/MD/should not/RB/not be/VB/be too/RB/too many/JJ/many of/IN/of these/DT/these steps/NNS/steps right/RB/right if/IN/if there/EX/there are/VBP/are large/JJ/large number/NN/number of/IN/of these/DT/these steps/NNS/steps the/DT/the overall/JJ/overall algorithm/NN/algorithm may/MD/may not/RB/not be/VB/be polynomial/JJ/polynomial may/MD/may not/RB/not run/VB/run in/IN/in polynomial/JJ/polynomial time/NNP/time. so/RB/so /,/, let/VB/let us/PRP/us first/RB/first bound/VBD/bound l/NN/l /,/, so/RB/so how/WRB/how many/JJ/many times/NNS/times can/MD/can a/DT/a vertex/NN/vertex get/NN/get split/NN/split into/IN/into 2/CD/2 parts/NNP/parts. so/RB/so /,/, supposing/VBG/supposing i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex with/IN/with let/NN/let us/PRP/us see/VBP/see this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 55/CD/55 /CD/) so/RB/so /,/, how/WRB/how many/JJ/many times/NNS/times can/MD/can a/DT/a vertex/NN/vertex be/VB/be split/VBN/split into/IN/into this/DT/this is/VBZ/is the/DT/the question/NN/question we/PRP/we want/VBP/want to/TO/to answer/NNP/answer. so/RB/so /,/, supposing/VBG/supposing i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex with/IN/with degree/NN/degree d/NNP/d. so/RB/so /,/, i/PRP/i could/MD/could split/VB/split this/DT/this once/NN/once twice/NN/twice /,/, i/PRP/i mean/VBP/mean how/WRB/how many/JJ/many times/NNS/times we/PRP/we do/VBP/do this/NNP/this. well/RB/well /,/, note/VBP/note that/IN/that each/DT/each time/NN/time the/DT/the maximum/NN/maximum degree/NN/degree will/MD/will keep/VB/keep decreasing/VBG/decreasing by/IN/by at/IN/at least/JJS/least in/IN/in fact/NN/fact /,/, by/IN/by 2/CD/2. so/RB/so /,/, the/DT/the maximum/NN/maximum number/NN/number of/IN/of times/NNS/times i/PRP/i am/VBP/am going/VBG/going to/TO/to do/VB/do this/DT/this is/VBZ/is d/VBN/d by/IN/by 2/CD/2. you/PRP/you can/MD/can do/VB/do it/PRP/it in/IN/in fact/NN/fact /,/, better/RBR/better by/IN/by splitting/NN/splitting it/PRP/it in/IN/in half/DT/half etcetera/NNP/etcetera. so/RB/so /,/, the/DT/the maximum/NN/maximum times/VBZ/times you/PRP/you will/MD/will do/VB/do this/DT/this is/VBZ/is actually/RB/actually d/VBN/d by/IN/by 2/CD/2 i/PRP/i hope/VBP/hope this/DT/this argument/NN/argument is/VBZ/is clear/JJ/clear let/NN/let me/PRP/me repeat/VBD/repeat this/NNP/this. so/RB/so /,/, each/DT/each time/NN/time i/PRP/i split/VBP/split right/RB/right the/DT/the maximum/NN/maximum /,/, so/RB/so if/IN/if i/PRP/i just/RB/just look/VBP/look at/IN/at these/DT/these graphs/NNS/graphs the/DT/the degree/NN/degree of/IN/of this/DT/this vertex/NN/vertex now/RB/now /,/, is/VBZ/is at/IN/at least/JJS/least at/IN/at most/JJS/most d/JJ/d minus/NN/minus 2/CD/2 rights/NNS/rights and/CC/and the/DT/the next/JJ/next time/NN/time i/PRP/i split/VBP/split one/CD/one of/IN/of those/DT/those vertices/NNP/vertices. again/RB/again i/PRP/i will/MD/will decrease/VB/decrease by/IN/by 2/CD/2 and/CC/and so/RB/so the/DT/the maximum/NN/maximum number/NN/number of/IN/of times/NNS/times i/PRP/i do/VBP/do this/DT/this is/VBZ/is d/VBN/d by/IN/by 2/CD/2. the/DT/the other/JJ/other way/NN/way to/TO/to see/VB/see it/PRP/it is/VBZ/is this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say i/PRP/i have/VBP/have 1/CD/1 2/CD/2 up/IN/up to/TO/to d/VB/d first/RB/first time/VB/time i/PRP/i split/VBP/split it/PRP/it like/IN/like this/DT/this i/PRP/i have/VBP/have 1/CD/1 2/CD/2 and/CC/and the/DT/the rest/NN/rest 3/CD/3 on/IN/on up/IN/up to/TO/to d/NNP/d. and/CC/and now/RB/now /,/, for/IN/for this/DT/this vertex/NN/vertex i/PRP/i again/RB/again split/JJ/split it/PRP/it into/IN/into 2/CD/2 parts/NNP/parts. so/RB/so /,/, this/DT/this portion/NN/portion remains/VBZ/remains as/IN/as it/PRP/it is/NNP/is. so/RB/so /,/, this/DT/this portion/NN/portion now/RB/now i/PRP/i split/VBP/split as/IN/as let/NN/let us/PRP/us say/VBP/say this/DT/this is/VBZ/is 3/CD/3 4/CD/4 and/CC/and then/RB/then and/CC/and so/RB/so on/NNP/on. and/CC/and you/PRP/you can/MD/can see/VB/see that/IN/that this/DT/this is/VBZ/is done/VBN/done at/IN/at most/JJS/most d/JJ/d by/IN/by 2/CD/2 times/NNP/times. so/RB/so /,/, the/DT/the number/NN/number of/IN/of times/NNS/times the/DT/the vertex/NN/vertex of/IN/of degrees/NNS/degrees d/VBP/d is/VBZ/is split/VBN/split is/VBZ/is d/VBN/d by/IN/by 2/CD/2. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times /,/, so/RB/so the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times a/DT/a split/NN/split occurs/VBZ/occurs is/VBZ/is summation/NN/summation over/IN/over all/DT/all vertices/NNS/vertices d/VBP/d v/NN/v by/IN/by 2/CD/2 and/CC/and that/IN/that we/PRP/we know/VBP/know that/IN/that is/VBZ/is nothing/NN/nothing but/CC/but number/NN/number of/IN/of edges/NNS/edges in/IN/in the/DT/the graph/NN/graph right/NNP/right. so/RB/so /,/, this/DT/this half/NN/half comes/VBZ/comes out/RP/out and/CC/and sum/NN/sum of/IN/of the/DT/the degrees/NNS/degrees of/IN/of the/DT/the vertices/NNS/vertices is/VBZ/is twice/NN/twice the/DT/the number/NN/number of/IN/of edges/NNS/edges right/NNP/right. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times the/DT/the split/NN/split occurs/NNS/occurs is/VBZ/is at/IN/at most/JJS/most if/IN/if the/DT/the vertex/NN/vertex has/VBZ/has degree/JJ/degree 3/CD/3 /,/, of/IN/of course/NN/course it/PRP/it does/VBZ/does not/RB/not split/NNP/split. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 07/CD/07 /CD/) so/RB/so /,/, here/RB/here let/VB/let us/PRP/us go/VB/go back/RB/back to/TO/to this/DT/this /,/, i/PRP/i know/VBP/know that/IN/that l/NN/l is/VBZ/is at/IN/at most/JJS/most m/NN/m and/CC/and each/DT/each time/NN/time you/PRP/you split/VBP/split you/PRP/you add/VBP/add 2/CD/2 new/JJ/new vertices/NNS/vertices to/TO/to the/DT/the graph/NNP/graph. so/RB/so /,/, the/DT/the size/NN/size of/IN/of g/NN/g l/NN/l v/NN/v of/IN/of g/NN/g l/NN/l is/VBZ/is less/JJR/less than/IN/than equal/JJ/equal to/TO/to size/VB/size of/IN/of v/NN/v of/IN/of g/NN/g and/CC/and each/DT/each time/NN/time you/PRP/you split/VBP/split you/PRP/you add/VBP/add 2/CD/2 new/JJ/new vertices/NNS/vertices plus/RB/plus twice/NN/twice l/NNP/l. so/RB/so /,/, it/PRP/it is/VBZ/is at/IN/at most/JJS/most n/JJ/n plus/NN/plus twice/NN/twice m/NN/m /,/, the/DT/the degree/NN/degree of/IN/of each/DT/each vertex/NN/vertex in/IN/in g/NN/g l/NN/l is/VBZ/is 3/CD/3. so/RB/so /,/, the/DT/the number/NN/number of/IN/of edges/NNS/edges is/VBZ/is also/RB/also some/DT/some constant/JJ/constant times/NNS/times n/VBP/n plus/RB/plus 2/CD/2 m/NNP/m. so/RB/so /,/, the/DT/the size/NN/size of/IN/of g/NN/g l/NN/l /,/, so/RB/so the/DT/the number/NN/number of/IN/of edges/NNS/edges in/IN/in g/NN/g l/NN/l is/VBZ/is polynomial/JJ/polynomial in/IN/in the/DT/the size/NN/size of/IN/of g/NNP/g. it/PRP/it is/VBZ/is not/RB/not too/RB/too big/JJ/big you/PRP/you do/VBP/do not/RB/not do/VB/do this/DT/this too/RB/too many/JJ/many times/NNS/times and/CC/and final/JJ/final graph/NN/graph that/WDT/that results/NNS/results size/VBP/size of/IN/of that/DT/that graph/NN/graph is/VBZ/is not/RB/not too/RB/too big/NNP/big. so/RB/so /,/, any/DT/any running/NN/running time/NN/time which/WDT/which is/VBZ/is polynomial/JJ/polynomial in/IN/in that/DT/that size/NN/size is/VBZ/is also/RB/also running/VBG/running time/NN/time is/VBZ/is polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NNP/size. so/RB/so /,/, this/DT/this thing/NN/thing runs/VBZ/runs in/IN/in time/NN/time /,/, so/RB/so we/PRP/we look/VBP/look at/IN/at 3/CD/3 v/NN/v c/NN/c this/DT/this runs/VBZ/runs in/IN/in time/NN/time /,/, which/WDT/which is/VBZ/is polynomial/JJ/polynomial in/IN/in this/DT/this input/NN/input size/NN/size of/IN/of g/NN/g l/NN/l /,/, but/CC/but that/IN/that is/VBZ/is also/RB/also polynomial/JJ/polynomial in/IN/in size/NN/size of/IN/of g/NNP/g. so/RB/so /,/, the/DT/the whole/JJ/whole thing/NN/thing runs/VBZ/runs in/IN/in time/NN/time /,/, which/WDT/which is/VBZ/is polynomial/JJ/polynomial in/IN/in size/NN/size of/IN/of g/NNP/g. and/CC/and now/RB/now so/RB/so we/PRP/we need/VBP/need to/TO/to know/VB/know show/NN/show that/IN/that this/DT/this works/NNP/works. so/RB/so /,/, i/PRP/i hope/VBP/hope that/IN/that you/PRP/you are/VBP/are all/DT/all convinced/VBN/convinced that/IN/that this/DT/this whole/JJ/whole thing/NN/thing runs/VBZ/runs on/IN/on polynomial/JJ/polynomial time/NN/time if/IN/if 3/CD/3 v/NN/v c/NN/c runs/VBZ/runs on/IN/on polynomial/JJ/polynomial time/NNP/time. now/RB/now /,/, we/PRP/we need/VBP/need to/TO/to convince/VB/convince ourselves/NNS/ourselves that/WDT/that if/IN/if this/DT/this says/VBZ/says yes/VBZ/yes then/RB/then answer/JJR/answer there/EX/there is/VBZ/is yes/NNS/yes it/PRP/it says/VBZ/says no/DT/no then/RB/then the/DT/the answer/NN/answer is/VBZ/is no/NNP/no. now/RB/now supposing/VBG/supposing g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k /,/, so/RB/so let/VB/let us/PRP/us prove/VBP/prove both/DT/both ways/NNS/ways supposing/VBG/supposing g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. if/IN/if g/NN/g has/VBZ/has a/DT/a v/NN/v c/NN/c of/IN/of size/NN/size k/NN/k /,/, so/RB/so this/DT/this implies/NNS/implies that/IN/that g/NN/g l/NN/l has/VBZ/has a/DT/a v/NN/v c/NN/c of/IN/of size/NN/size less/RBR/less than/IN/than equal/JJ/equal to/TO/to k/VB/k plus/RB/plus l/JJ/l right/NNP/right. so/RB/so /,/, this/DT/this has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size at/IN/at most/JJS/most k/NN/k plus/RB/plus l/NNP/l. so/RB/so /,/, it/PRP/it will/MD/will say/VB/say yes/NNS/yes /,/, so/RB/so this/DT/this answer/NN/answer will/MD/will be/VB/be yes/NNS/yes /,/, so/RB/so this/DT/this is/VBZ/is fine/NNP/fine. what/WP/what we/PRP/we need/VBP/need to/TO/to do/VB/do is/VBZ/is also/RB/also the/DT/the other/JJ/other way/NN/way round/NN/round that/WDT/that it/PRP/it does/VBZ/does not/RB/not have/VB/have a/DT/a vertex/NN/vertex of/IN/of size/NN/size k/NN/k it/PRP/it will/MD/will answer/VB/answer no/DT/no /,/, but/CC/but it/PRP/it is/VBZ/is better/RBR/better to/TO/to do/VB/do the/DT/the other/JJ/other way/NN/way round/NNP/round. so/RB/so /,/, if/IN/if this/DT/this says/VBZ/says yes/VBZ/yes /,/, if/IN/if 3/CD/3 v/NN/v c/NN/c says/VBZ/says yes/NNS/yes /,/, this/DT/this means/VBZ/means that/IN/that g/NN/g l/NNP/l. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 12/CD/12 /:/: 26/CD/26 /CD/) so/RB/so /,/, 3/CD/3 v/NN/v c/NN/c says/VBZ/says yes/NNS/yes /,/, which/WDT/which means/VBZ/means g/NN/g 2/CD/2 has/VBZ/has vertex/NN/vertex cover/RB/cover of/IN/of size/NN/size k/NN/k plus/CC/plus l/NNP/l. and/CC/and we/PRP/we know/VBP/know that/IN/that this/DT/this implies/NNS/implies that/IN/that g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size at/IN/at most/JJS/most k/NN/k right/NNP/right. so/RB/so /,/, g/IN/g has/VBZ/has a/DT/a size/NN/size of/IN/of at/IN/at most/JJS/most k/NN/k /,/, so/RB/so this/DT/this is/VBZ/is also/RB/also same/JJ/same which/WDT/which means/VBZ/means g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, both/DT/both ways/NNS/ways we/PRP/we have/VBP/have proved/VBN/proved that/IN/that the/DT/the algorithm/NN/algorithm worked/VBD/worked out/NNP/out. if/IN/if it/PRP/it has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k well/RB/well /,/, here/RB/here its/PRP$/its k/NN/k plus/CC/plus l/NN/l g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k this/DT/this implies/VBZ/implies that/IN/that g/NN/g l/NN/l has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k plus/CC/plus l/NNP/l. we/PRP/we have/VBP/have done/VBN/done /,/, which/WDT/which means/VBZ/means g/NN/g has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k then/RB/then it/PRP/it answers/VBZ/answers yes/VBZ/yes and/CC/and if/IN/if it/PRP/it answers/VBZ/answers yes/VBZ/yes then/RB/then g/JJ/g must/NN/must have/VBP/have a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NNP/k. so/RB/so /,/, this/DT/this proves/NNS/proves that/IN/that 3/CD/3 v/NN/v c/NN/c is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 55/CD/55 /CD/) so/RB/so /,/, our/PRP$/our next/JJ/next problem/NN/problem is/VBZ/is exact/JJ/exact cover/NNP/cover. so/RB/so /,/, called/VBN/called exact/JJ/exact cover/NN/cover xc/NN/xc exact/NN/exact cover/NN/cover here/RB/here /,/, the/DT/the input/NN/input is/VBZ/is set/VBN/set s/NNS/s and/CC/and the/DT/the collection/NN/collection of/IN/of subsets/NNS/subsets s/NNS/s a/DT/a 1/CD/1 /,/, a/DT/a 2/CD/2 up/RP/up to/TO/to a/DT/a m/NN/m there/EX/there are/VBP/are m/NN/m subsets/NNS/subsets of/IN/of s/NNP/s. the/DT/the question/NN/question we/PRP/we ask/VBP/ask is/VBZ/is the/DT/the following/VBG/following is/VBZ/is there/RB/there a/DT/a sub/NN/sub collection/NN/collection of/IN/of these/DT/these sets/NNP/sets. so/RB/so /,/, that/IN/that the/DT/the union/NN/union is/VBZ/is s/NNS/s and/CC/and the/DT/the sets/NNS/sets in/IN/in the/DT/the sub/NN/sub collection/NN/collection are/VBP/are disjoined/VBN/disjoined is/VBZ/is there/RB/there a/DT/a sub/NN/sub collection/NNP/collection. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say a/DT/a i/PRP/i a/DT/a i/PRP/i 1/CD/1 a/DT/a i/NN/i 2/CD/2 up/IN/up to/TO/to a/DT/a i/PRP/i p/VBP/p is/VBZ/is that/IN/that 2/CD/2 things/NNS/things the/DT/the union/NN/union must/MD/must be/VB/be yes/NNP/yes. the/DT/the union/NN/union for/IN/for all/DT/all j/NN/j a/DT/a i/NN/i j/NN/j is/VBZ/is yes/NNS/yes second/JJ/second thing/NN/thing is/VBZ/is that/IN/that a/DT/a i/NN/i j/NN/j intersect/NN/intersect a/DT/a i/NN/i x/NN/x i/PRP/i s/VBZ/s null/JJ/null set/NNP/set. so/RB/so /,/, you/PRP/you need/VBP/need to/TO/to pick/VB/pick some/DT/some sub/NN/sub sets/VBZ/sets of/IN/of some/DT/some of/IN/of these/DT/these sub/NN/sub sets/VBZ/sets in/IN/in these/DT/these collections/NNP/collections. so/RB/so /,/, that/IN/that each/DT/each element/NN/element is/VBZ/is present/JJ/present in/IN/in one/CD/one of/IN/of them/PRP/them and/CC/and exactly/RB/exactly one/CD/one of/IN/of them/NNP/them. so/RB/so /,/, each/DT/each element/NN/element is/VBZ/is covered/VBN/covered and/CC/and covered/VBN/covered exactly/RB/exactly once/NNP/once. so/RB/so /,/, that/IN/that is/VBZ/is where/WRB/where you/PRP/you get/VBP/get the/DT/the name/NN/name exact/NN/exact cover/NN/cover is/VBZ/is there/EX/there a/DT/a sub/NN/sub collection/NN/collection /,/, which/WDT/which exactly/RB/exactly covers/VBZ/covers the/DT/the set/NN/set s/VBZ/s /,/, which/WDT/which covers/NNS/covers set/VBD/set s/NNS/s in/IN/in the/DT/the sense/NN/sense that/IN/that union/NN/union is/VBZ/is s/NNS/s union/NN/union of/IN/of i/PRP/i j/VBP/j is/VBZ/is s/NNP/s. and/CC/and it/PRP/it is/VBZ/is covered/VBN/covered exactly/RB/exactly in/IN/in the/DT/the sense/NN/sense that/IN/that each/DT/each element/NN/element is/VBZ/is covered/VBN/covered exactly/RB/exactly once/NNP/once. so/RB/so /,/, these/DT/these must/MD/must be/VB/be disjoint/NNP/disjoint. so/RB/so /,/, is/VBZ/is this/DT/this problem/NN/problem n/NN/n p/NN/p complete/NN/complete the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes as/IN/as you/PRP/you must/MD/must have/VB/have guessed/VBN/guessed /,/, because/IN/because those/DT/those are/VBP/are the/DT/the problems/NNS/problems we/PRP/we have/VBP/have discussing/NNP/discussing. so/RB/so /,/, let/VB/let us/PRP/us prove/VBP/prove that/IN/that this/DT/this problem/NN/problem exact/NN/exact cover/NN/cover is/VBZ/is indeed/VBN/indeed n/NN/n p/NN/p complete/NNP/complete. so/RB/so /,/, the/DT/the first/JJ/first thing/NN/thing to/TO/to note/VB/note first/RB/first thing/VBG/thing is/VBZ/is to/TO/to prove/VB/prove that/IN/that exact/JJ/exact cover/NN/cover is/VBZ/is in/IN/in n/NN/n p/NN/p to/TO/to prove/VB/prove that/IN/that this/DT/this is/VBZ/is in/IN/in n/NN/n p/NNP/p. so/RB/so /,/, what/WDT/what is/VBZ/is a/DT/a s/NN/s input/NN/input a/DT/a s/NN/s input/NN/input is/VBZ/is just/RB/just collection/NN/collection of/IN/of i/PRP/i need/VBP/need a/DT/a collection/NNP/collection. so/RB/so /,/, that/IN/that there/EX/there is/VBZ/is some/DT/some sub/NN/sub collection/NNP/collection. so/RB/so /,/, that/IN/that a/DT/a union/NN/union is/VBZ/is s/NNS/s and/CC/and the/DT/the sets/NNS/sets in/IN/in the/DT/the sub/NN/sub collection/NN/collection are/VBP/are disjoined/NNP/disjoined. so/RB/so /,/, i/PRP/i guess/VBP/guess it/PRP/it must/MD/must be/VB/be clear/JJ/clear what/WP/what prove/JJ/prove the/DT/the provers/NNS/provers must/MD/must supply/RB/supply the/DT/the verifier/NNP/verifier. so/RB/so /,/, that/IN/that the/DT/the verifier/NN/verifier can/MD/can verify/VB/verify that/IN/that there/EX/there exists/NNS/exists such/JJ/such a/DT/a sub/NN/sub collection/NNP/collection. in/IN/in fact/NN/fact /,/, the/DT/the prover/NN/prover just/RB/just gives/VBZ/gives such/JJ/such a/DT/a sub/NN/sub collection/NN/collection the/DT/the prover/NN/prover tells/VBZ/tells the/DT/the verifier/NN/verifier what/WP/what are/VBP/are the/DT/the sets/NNS/sets in/IN/in the/DT/the sub/NN/sub collection/NN/collection the/DT/the verifier/NN/verifier takes/VBZ/takes these/DT/these sets/NNP/sets. he/PRP/he verifies/VBZ/verifies that/IN/that they/PRP/they are/VBP/are disjoint/JJ/disjoint and/CC/and he/PRP/he also/RB/also verifies/VBZ/verifies that/IN/that the/DT/the union/NN/union is/VBZ/is s/NNS/s /,/, which/WDT/which means/VBZ/means every/DT/every element/NN/element of/IN/of s/NNS/s does/VBZ/does appear/JJ/appear in/IN/in one/CD/one of/IN/of the/DT/the sets/NNS/sets in/IN/in the/DT/the sub/NN/sub collection/NNP/collection. so/RB/so /,/, this/DT/this proves/NNS/proves that/IN/that this/DT/this problem/NN/problem is/VBZ/is in/IN/in n/NN/n p/NNP/p. the/DT/the blame/NN/blame will/MD/will prove/VB/prove it/PRP/it is/VBZ/is n/VBN/n p/NN/p hard/RB/hard is/VBZ/is to/TO/to show/VB/show that/IN/that if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for exact/JJ/exact cover/NNP/cover. there/RB/there should/MD/should be/VB/be a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 26/CD/26 /CD/) so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do this/NNP/this. so/RB/so /,/, given/VBN/given a/DT/a polynomial/JJ/polynomial time/NN/time for/IN/for x/NN/x c/NN/c i/PRP/i want/VBP/want to/TO/to construct/VB/construct one/CD/one for/IN/for less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. this/DT/this is/VBZ/is our/PRP$/our goal/NN/goal /,/, so/RB/so how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/NNP/this. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to construct/VB/construct for/IN/for one/CD/one less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NNP/c. so/RB/so /,/, i/PRP/i guess/VBP/guess the/DT/the algorithm/NN/algorithm will/MD/will take/VB/take a/DT/a graph/NN/graph as/IN/as a/DT/a input/NN/input /,/, there/EX/there is/VBZ/is also/RB/also this/DT/this k/NN/k /,/, we/PRP/we know/VBP/know that/IN/that delta/NN/delta g/NN/g is/VBZ/is at/IN/at most/JJS/most 3/CD/3 and/CC/and we/PRP/we want/VBP/want to/TO/to know/NNP/know. we/PRP/we want/VBP/want to/TO/to somehow/VB/somehow figure/NN/figure out/RP/out whether/IN/whether this/DT/this graph/NN/graph has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k or/CC/or not/NNP/not. that/IN/that is/VBZ/is the/DT/the problem/NN/problem we/PRP/we really/RB/really want/VBP/want to/TO/to solve/VB/solve and/CC/and what/WP/what we/PRP/we can/MD/can use/VB/use is/VBZ/is the/DT/the sub/NN/sub routine/NN/routine is/VBZ/is this/DT/this problem/NNP/problem. so/RB/so /,/, somehow/WRB/somehow we/PRP/we need/VBP/need to/TO/to use/VB/use sub/NN/sub routine/NN/routine to/TO/to x/VB/x c/NN/c to/TO/to solve/VB/solve this/DT/this problem/NN/problem on/IN/on graphs/NNP/graphs. so/IN/so /,/, let/VB/let us/PRP/us write/VB/write down/RP/down what/WP/what a/DT/a solution/NN/solution to/TO/to x/VB/x c/NN/c and/CC/and solution/NN/solution to/TO/to vertex/VB/vertex cover/NN/cover look/NN/look like/NNP/like. the/DT/the input/NN/input to/TO/to x/VB/x c/NN/c is/VBZ/is set/VBN/set s/NNS/s and/CC/and a/DT/a 1/CD/1 through/IN/through a/DT/a m/NNP/m. this/DT/this is/VBZ/is the/DT/the input/NN/input this/DT/this is/VBZ/is input/VBN/input to/TO/to v/VB/v c/NN/c now/RB/now ;/:/; here/RB/here what/WP/what i/PRP/i want/VBP/want to/TO/to know/VB/know is/VBZ/is vertices/NNS/vertices to/TO/to cover/VB/cover all/DT/all edges/NNP/edges. here/RB/here i/PRP/i want/VBP/want sets/NNS/sets to/TO/to cover/VB/cover all/DT/all elements/NNS/elements by/IN/by sets/NNS/sets i/PRP/i mean/VBP/mean from/IN/from this/DT/this collection/NN/collection a/DT/a 1/CD/1 to/TO/to a/DT/a m/NN/m right/NNP/right. so/RB/so /,/, somehow/WRB/somehow vertices/NNS/vertices there/RB/there must/MD/must be/VB/be some/DT/some relationship/NN/relationship between/IN/between the/DT/the vertices/NNS/vertices and/CC/and the/DT/the sub/NN/sub sets/VBZ/sets /,/, so/RB/so let/VB/let me/PRP/me say/VB/say sub/NN/sub sets/NNP/sets. there/EX/there must/MD/must be/VB/be some/DT/some correspondence/NN/correspondence here/RB/here and/CC/and the/DT/the edges/NNS/edges must/MD/must correspond/VB/correspond to/TO/to elements/NNS/elements of/IN/of s/NNP/s. if/IN/if there/EX/there is/VBZ/is such/JJ/such a/DT/a correspondence/NN/correspondence then/RB/then it/PRP/it looks/VBZ/looks like/IN/like /,/, you/PRP/you know/VBP/know that/IN/that there/EX/there is/VBZ/is some/DT/some similarity/NN/similarity between/IN/between these/DT/these 2/CD/2 problems/NNP/problems. this/DT/this is/VBZ/is what/WP/what we/PRP/we would/MD/would like/VB/like to/TO/to we/PRP/we would/MD/would like/VB/like to/TO/to exploit/VB/exploit /,/, so/RB/so let/VB/let us/PRP/us take/VB/take to/TO/to attempt/VB/attempt at/IN/at this/DT/this problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 43/CD/43 /CD/) so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that the/DT/the elements/NNS/elements of/IN/of s/NNS/s are/VBP/are edges/NNS/edges and/CC/and blind/JJ/blind thing/NN/thing and/CC/and then/RB/then we/PRP/we take/VBP/take g/NN/g is/VBZ/is the/DT/the input/NNP/input. so/RB/so /,/, now/RB/now /,/, i/PRP/i look/VBP/look at/IN/at g/NN/g and/CC/and i/PRP/i need/VBP/need to/TO/to convert/VB/convert this/DT/this input/NN/input into/IN/into a/DT/a input/NN/input for/IN/for exact/JJ/exact cover/NNP/cover. so/RB/so /,/, i/PRP/i say/VBP/say the/DT/the set/NN/set s/VBZ/s is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the edge/NN/edge set/NN/set of/IN/of g/NN/g and/CC/and now/RB/now /,/, the/DT/the subset/NN/subset must/MD/must correspond/VB/correspond to/TO/to the/DT/the vertices/NNP/vertices. each/DT/each subset/NN/subset here/RB/here must/MD/must correspond/VB/correspond to/TO/to a/DT/a vertex/NN/vertex in/IN/in g/NN/g and/CC/and what/WP/what is/VBZ/is the/DT/the natural/JJ/natural sort/NN/sort of/IN/of correspondence/NN/correspondence for/IN/for vertex/NN/vertex i/PRP/i /,/, i/PRP/i add/VBP/add a/DT/a set/NN/set a/DT/a i/NN/i for/IN/for vertex/NN/vertex i/NNP/i. this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the edges/NNS/edges incident/NN/incident on/IN/on vertex/NN/vertex i/PRP/i /,/, if/IN/if i/PRP/i take/VBP/take a/DT/a i/PRP/i to/TO/to be/VB/be the/DT/the edges/NNS/edges incident/NN/incident on/IN/on vertex/NN/vertex i/NNP/i. now/RB/now /,/, i/PRP/i have/VBP/have this/DT/this correspondence/NN/correspondence right/NNP/right. so/RB/so /,/, i/PRP/i have/VBP/have the/DT/the graph/NN/graph g/NN/g here/RB/here and/CC/and i/PRP/i have/VBP/have s/NNS/s a/DT/a 1/CD/1 through/IN/through a/DT/a m/NN/m picking/VBG/picking vertices/NNS/vertices to/TO/to cover/VB/cover edges/NNS/edges corresponds/NNS/corresponds to/TO/to picking/VBG/picking subsets/NNS/subsets /,/, which/WDT/which cover/RB/cover elements/VBZ/elements of/IN/of s/NNP/s. elements/NNS/elements of/IN/of edges/NNS/edges are/VBP/are covering/VBG/covering edges/NNS/edges and/CC/and each/DT/each subset/NN/subset is/VBZ/is like/IN/like picking/VBG/picking a/DT/a vertex/NN/vertex in/IN/in g/NNP/g. picking/NN/picking a/DT/a sub/NN/sub set/NN/set here/RB/here is/VBZ/is like/IN/like picking/VBG/picking a/DT/a vertex/NN/vertex in/IN/in g/NNP/g. now/RB/now /,/, there/EX/there is/VBZ/is a/DT/a small/JJ/small problem/NN/problem first/RB/first problem/NN/problem is/VBZ/is i/PRP/i need/VBP/need to/TO/to pick/VB/pick /,/, you/PRP/you know/VBP/know there/RB/there is/VBZ/is this/DT/this k/NN/k floating/VBG/floating here/NNP/here. so/RB/so /,/, i/PRP/i should/MD/should somehow/VB/somehow make/VB/make sure/JJ/sure that/IN/that make/NN/make sure/NN/sure that/WDT/that only/RB/only k/VBP/k vertices/NNS/vertices are/VBP/are picked/NNP/picked. we/PRP/we need/VBP/need this/DT/this if/IN/if i/PRP/i just/RB/just do/VBP/do this/DT/this there/EX/there is/VBZ/is no/DT/no sort/NN/sort you/PRP/you know/VBP/know i/PRP/i could/MD/could pick/VB/pick as/IN/as many/JJ/many of/IN/of them/PRP/them i/PRP/i want/VBP/want right/NNP/right. so/RB/so /,/, a/DT/a vertex/NN/vertex could/MD/could be/VB/be i/PRP/i could/MD/could pick/VB/pick as/IN/as many/JJ/many of/IN/of these/DT/these subsets/NNP/subsets. so/RB/so /,/, this/DT/this fact/NN/fact that/IN/that in/IN/in the/DT/the original/JJ/original problem/NN/problem /,/, i/PRP/i should/MD/should only/RB/only be/VB/be allowed/VBN/allowed to/TO/to pick/VB/pick k/NN/k vertices/NNS/vertices is/VBZ/is the/DT/the does/VBZ/does not/RB/not reflect/VB/reflect in/IN/in this/DT/this transformation/NNP/transformation. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we fix/VB/fix this/DT/this problem/NN/problem ?/./? this/DT/this problem/NN/problem is/VBZ/is actually/RB/actually fixed/VBN/fixed easily/NNP/easily. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is this/DT/this /,/, so/RB/so we/PRP/we take/VBP/take k/NN/k extra/NN/extra elements/NNP/elements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 24/CD/24 /:/: 26/CD/26 /CD/) so/RB/so /,/, take/VB/take k/NN/k extra/NN/extra elements/NNS/elements we/PRP/we need/VBP/need to/TO/to what/WP/what we/PRP/we are/VBP/are shooting/VBG/shooting for/IN/for is/VBZ/is pick/JJ/pick only/RB/only k/VBP/k subsets/NNP/subsets. this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to do/VB/do ?/./? so/RB/so /,/, take/VB/take s/NNS/s now/RB/now apart/VBP/apart from/IN/from g/NN/g there/RB/there will/MD/will be/VB/be some/DT/some k/NN/k extra/NN/extra elements/NNS/elements x/VBP/x 1/CD/1 x/NN/x 2/CD/2 so/RB/so on/IN/on till/NN/till x/NN/x k/NN/k and/CC/and supposing/VBG/supposing the/DT/the sets/NNS/sets k/VBP/k 1/CD/1 through/IN/through what/WP/what i/PRP/i do/VBP/do is/VBZ/is i/PRP/i take/VBP/take the/DT/the /,/, i/PRP/i change/VBP/change the/DT/the collection/NN/collection of/IN/of sets/NNP/sets. i/PRP/i take/VBP/take a/DT/a 1/CD/1 union/NN/union x/NN/x 1/CD/1 a/DT/a 1/CD/1 union/NN/union x/NN/x 2/CD/2 so/RB/so on/IN/on a/DT/a 1/CD/1 union/NN/union x/NN/x k/NN/k similarly/RB/similarly a/DT/a 2/CD/2 union/NN/union x/NN/x 1/CD/1 so/RB/so on/IN/on up/IN/up to/TO/to a/DT/a 2/CD/2 union/NN/union x/NN/x k/NN/k and/CC/and finally/RB/finally /,/, a/DT/a n/NN/n union/NN/union x/NN/x 1/CD/1 up/IN/up to/TO/to a/DT/a n/NN/n union/NN/union x/NN/x k/NNP/k. well/RB/well /,/, n/VBP/n is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in the/DT/the graph/NN/graph that/IN/that is/VBZ/is why/WRB/why it/PRP/it is/VBZ/is n/VBN/n here/RB/here and/CC/and not/RB/not m/VB/m /,/, m/NN/m is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. well/RB/well /,/, the/DT/the number/NN/number of/IN/of collections/NNS/collections has/VBZ/has now/RB/now /,/, grown/VBN/grown to/TO/to a/DT/a factor/NN/factor of/IN/of k/NN/k initially/RB/initially /,/, we/PRP/we had/VBD/had n/VBN/n sets/NNS/sets and/CC/and now/RB/now /,/, we/PRP/we have/VBP/have k/NN/k times/NNS/times n/NNP/n. but/CC/but now/RB/now /,/, let/VB/let us/PRP/us see/VB/see supposing/VBG/supposing i/PRP/i pick/VBP/pick up/RP/up an/DT/an exact/JJ/exact cover/NN/cover here/RB/here supposing/VBG/supposing i/PRP/i pick/VBP/pick up/RP/up an/DT/an exact/JJ/exact cover/NN/cover from/IN/from this/DT/this collection/NN/collection from/IN/from these/DT/these i/PRP/i can/MD/can i/VB/i can/MD/can pick/VB/pick any/DT/any one/CD/one of/IN/of them/PRP/them right/NNP/right. but/CC/but if/IN/if i/PRP/i look/VBP/look across/IN/across row/NN/row /,/, i/PRP/i can/MD/can pick/VB/pick only/RB/only one/CD/one of/IN/of them/NNP/them. from/IN/from this/DT/this i/NN/i can/MD/can pick/VB/pick only/RB/only one/CD/one from/IN/from this/DT/this /,/, i/PRP/i can/MD/can pick/VB/pick only/RB/only one/CD/one and/CC/and so/RB/so on/NNP/on. and/CC/and from/IN/from this/DT/this i/NN/i can/MD/can pick/VB/pick only/RB/only one/CD/one /,/, so/RB/so totally/RB/totally i/PRP/i can/MD/can pick/VB/pick only/RB/only k/VB/k sets/NNP/sets. so/RB/so /,/, let/VB/let me/PRP/me say/VB/say this/DT/this argument/NN/argument again/RB/again now/RB/now /,/, when/WRB/when i/PRP/i look/VBP/look at/IN/at this/DT/this collection/NN/collection then/RB/then in/IN/in each/DT/each set/NN/set one/CD/one of/IN/of x/NN/x 1/CD/1 x/NN/x 2/CD/2 x/NN/x 3/CD/3 x/NN/x k/NN/k occurs/NNP/occurs. each/DT/each set/NN/set one/CD/one of/IN/of these/DT/these k/NN/k elements/NNS/elements must/MD/must occur/VB/occur and/CC/and if/IN/if x/NN/x 1/CD/1 occurs/NNS/occurs in/IN/in many/JJ/many states/NNS/states /,/, i/PRP/i can/MD/can only/RB/only pick/VB/pick one/CD/one of/IN/of them/PRP/them /,/, because/IN/because x/NN/x 1/CD/1 has/VBZ/has to/TO/to be/VB/be covered/VBN/covered exactly/RB/exactly once/RB/once right/NNP/right. in/IN/in fact/NN/fact /,/, exactly/RB/exactly one/CD/one of/IN/of these/DT/these sets/NNS/sets /,/, so/RB/so i/PRP/i have/VBP/have to/TO/to pick/VB/pick a/DT/a set/NN/set /,/, which/WDT/which contains/VBZ/contains s/VBZ/s 1/CD/1 as/IN/as to/TO/to pick/VB/pick a/DT/a set/NN/set /,/, which/WDT/which contains/VBZ/contains s/VBZ/s 2/CD/2 i/PRP/i have/VBP/have to/TO/to pick/VB/pick a/DT/a set/NN/set /,/, which/WDT/which contains/VBZ/contains x/NN/x 3/CD/3 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to x/VB/x k/NNP/k. these/DT/these are/VBP/are k/NN/k sets/NNS/sets and/CC/and i/PRP/i can/MD/can not/RB/not pick/VB/pick anymore/RB/anymore /,/, because/IN/because any/DT/any other/JJ/other set/NN/set has/VBZ/has to/TO/to contain/VB/contain one/CD/one of/IN/of these/DT/these elements/NNS/elements x/VBP/x 1/CD/1 x/NN/x 2/CD/2 up/IN/up to/TO/to x/VB/x n/NNP/n. so/RB/so /,/, this/DT/this trick/NN/trick force/NN/force /,/, you/PRP/you to/TO/to pick/VB/pick when/WRB/when you/PRP/you pick/VBP/pick an/DT/an exact/JJ/exact cover/NN/cover this/DT/this forces/NNS/forces /,/, you/PRP/you to/TO/to pick/VB/pick exactly/RB/exactly k/VB/k of/IN/of these/DT/these sets/NNP/sets. so/RB/so /,/, that/IN/that is/VBZ/is taken/VBN/taken care/NN/care /,/, so/RB/so is/VBZ/is there/EX/there any/DT/any other/JJ/other problem/NN/problem well/RB/well unfortunately/RB/unfortunately there/EX/there is/VBZ/is the/DT/the problem/NN/problem is/VBZ/is that/IN/that in/IN/in vertex/NN/vertex cover/NNP/cover. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 59/CD/59 /CD/) so/RB/so /,/, let/VB/let me/PRP/me sort/VB/sort of/IN/of tell/NN/tell you/PRP/you what/WP/what the/DT/the problem/NN/problem is/VBZ/is /,/, so/RB/so your/PRP$/your problem/NN/problem is/VBZ/is this/DT/this /,/, when/WRB/when you/PRP/you look/VBP/look at/IN/at a/DT/a graph/NN/graph i/PRP/i look/VBP/look at/IN/at vertex/NN/vertex cover/NNP/cover. you/PRP/you know/VBP/know it/PRP/it may/MD/may /,/, so/RB/so happen/JJ/happen that/IN/that there/EX/there may/MD/may be/VB/be a/DT/a edge/NN/edge between/IN/between 2/CD/2 vertices/NNS/vertices in/IN/in the/DT/the vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex cover/NN/cover /,/, it/PRP/it may/MD/may be/VB/be /,/, it/PRP/it may/MD/may happen/VB/happen that/IN/that there/EX/there is/VBZ/is an/DT/an edge/NN/edge between/IN/between 2/CD/2 things/NNS/things in/IN/in a/DT/a vertex/NN/vertex cover/NNP/cover. so/RB/so /,/, when/WRB/when i/PRP/i pick/VBP/pick the/DT/the corresponding/VBG/corresponding sets/NNS/sets a/DT/a i/PRP/i 1/CD/1 and/CC/and so/RB/so on/NNP/on. this/DT/this is/VBZ/is a/DT/a i/NN/i k/NN/k /,/, when/WRB/when i/PRP/i pick/VBP/pick the/DT/the corresponding/VBG/corresponding sets/NNS/sets /,/, then/RB/then you/PRP/you know/VBP/know this/DT/this edge/NN/edge gets/VBZ/gets covered/VBN/covered twice/NNP/twice. it/PRP/it gets/VBZ/gets covered/VBN/covered when/WRB/when i/PRP/i pick/VBP/pick this/DT/this vertex/NN/vertex at/IN/at this/DT/this set/NN/set ;/:/; it/PRP/it also/RB/also gets/VBZ/gets picked/VBN/picked when/WRB/when i/PRP/i pick/VBP/pick this/DT/this set/NNP/set. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the problem/NNP/problem. so/RB/so /,/, what/WDT/what we/PRP/we would/MD/would like/VB/like to/TO/to do/VB/do is/VBZ/is when/WRB/when you/PRP/you get/VBP/get to/TO/to this/DT/this vertex/NN/vertex not/RB/not pick/VB/pick this/DT/this edge/NN/edge /,/, but/CC/but may/MD/may be/VB/be pick/NN/pick the/DT/the other/JJ/other edges/NNS/edges /,/, which/WDT/which are/VBP/are not/RB/not yet/RB/yet been/VBN/been covered/NNP/covered. so/RB/so /,/, i/PRP/i would/MD/would like/VB/like to/TO/to pick/VB/pick these/DT/these sets/NNS/sets 1/CD/1 by/IN/by 1/CD/1 when/WRB/when i/PRP/i get/VBP/get to/TO/to a/DT/a vertex/NN/vertex i/PRP/i would/MD/would like/VB/like to/TO/to pick/VB/pick those/DT/those sets/NNS/sets those/DT/those edges/NNS/edges /,/, which/WDT/which are/VBP/are not/RB/not covered/VBN/covered and/CC/and the/DT/the solution/NN/solution is/VBZ/is actually/RB/actually simple/NNP/simple. so/RB/so /,/, supposing/VBG/supposing i/PRP/i had/VBD/had recalled/VBN/recalled that/IN/that the/DT/the degree/NN/degree of/IN/of each/DT/each vertex/NN/vertex is/VBZ/is 3/CD/3 supposing/VBG/supposing i/PRP/i had/VBD/had a/DT/a degree/NN/degree of/IN/of vertex/NN/vertex 3/CD/3 right/NNP/right. so/RB/so /,/, there/EX/there are/VBP/are 3/CD/3 edges/NNS/edges /,/, which/WDT/which are/VBP/are adjacent/JJ/adjacent let/NN/let us/PRP/us say/VBP/say e/NN/e f/NN/f and/CC/and g/NN/g now/RB/now /,/, it/PRP/it could/MD/could /,/, so/RB/so happen/JJ/happen by/IN/by the/DT/the time/NN/time i/PRP/i get/VBP/get to/TO/to this/DT/this vertex/NNP/vertex. i/PRP/i would/MD/would like/VB/like to/TO/to pick/VB/pick this/DT/this vertex/NN/vertex /,/, these/DT/these edges/NNS/edges sum/VBP/sum of/IN/of these/DT/these edges/NNS/edges are/VBP/are already/RB/already been/VBN/been covered/VBN/covered by/IN/by other/JJ/other vertices/NNP/vertices. then/RB/then i/PRP/i would/MD/would like/VB/like to/TO/to leap/VB/leap at/IN/at g/NN/g let/VB/let us/PRP/us say/VB/say if/IN/if e/NN/e and/CC/and f/NN/f are/VBP/are already/RB/already covered/VBN/covered i/PRP/i would/MD/would like/VB/like to/TO/to leap/VB/leap at/IN/at g/NN/g for/IN/for this/DT/this vertex/NNP/vertex. if/IN/if only/RB/only e/VBP/e is/VBZ/is covered/VBN/covered i/PRP/i would/MD/would like/VB/like to/TO/to pick/VB/pick only/RB/only f/NN/f and/CC/and g/NN/g and/CC/and similarly/RB/similarly if/IN/if none/NN/none of/IN/of them/PRP/them are/VBP/are covered/VBN/covered then/RB/then i/PRP/i would/MD/would like/VB/like to/TO/to you/PRP/you know/VB/know have/VBP/have a/DT/a set/NN/set /,/, which/WDT/which contains/VBZ/contains all/DT/all of/IN/of them/NNP/them. so/RB/so /,/, the/DT/the trick/NN/trick is/VBZ/is to/TO/to just/RB/just take/VB/take all/DT/all possible/JJ/possible subsets/NNP/subsets. so/RB/so /,/, take/VB/take all/PDT/all possible/JJ/possible subsets/NNP/subsets. so/RB/so /,/, initially/RB/initially i/PRP/i had/VBD/had with/IN/with the/DT/the vertex/NN/vertex /,/, i/PRP/i had/VBD/had the/DT/the set/NN/set e/NN/e f/NN/f g/NNP/g. now/RB/now /,/, i/PRP/i will/MD/will have/VB/have many/JJ/many of/IN/of them/PRP/them instead/RB/instead of/IN/of this/DT/this /,/, i/PRP/i will/MD/will have/VB/have now/RB/now e/VB/e f/NN/f g/NN/g and/CC/and then/RB/then all/DT/all pairs/NNS/pairs e/VBP/e f/NN/f so/IN/so on/IN/on and/CC/and finally/RB/finally /,/, e/NN/e f/NN/f g/NNP/g. so/RB/so /,/, there/EX/there are/VBP/are 7/CD/7 of/IN/of these/DT/these with/IN/with each/DT/each vertex/NN/vertex well/RB/well actually/RB/actually this/DT/this would/MD/would have/VB/have x/NN/x 1/CD/1 x/NN/x 2/CD/2 /,/, so/RB/so on/IN/on up/IN/up to/TO/to x/VB/x k/NN/k also/NNP/also. so/RB/so /,/, that/IN/that also/RB/also has/VBZ/has to/TO/to be/VB/be put/VBN/put in/-NONE-/in. so/RB/so /,/, this/DT/this set/NN/set would/MD/would have/VB/have e/NN/e f/NN/f g/NN/g in/IN/in one/CD/one of/IN/of the/DT/the exercise/NN/exercise remember/NN/remember our/PRP$/our previous/JJ/previous construction/NN/construction that/WDT/that x/NN/x i/PRP/i would/MD/would also/RB/also go/VB/go into/IN/into each/DT/each of/IN/of them/NNP/them. so/RB/so /,/, it/PRP/it us/PRP/us not/RB/not 7/CD/7 subsets/NNS/subsets /,/, it/PRP/it is/VBZ/is 7/CD/7 k/NN/k times/NNS/times it/PRP/it is/VBZ/is 7/CD/7 k/NN/k with/IN/with each/DT/each vertex/NN/vertex i/PRP/i had/VBD/had k/NN/k subsets/NNS/subsets 1/CD/1 for/IN/for x/NN/x 1/CD/1 1/CD/1 for/IN/for x/NN/x 2/CD/2 and/CC/and so/RB/so on/NNP/on. now/RB/now /,/, i/PRP/i have/VBP/have 7/CD/7 k/NN/k subsets/NNS/subsets per/IN/per vertex/NN/vertex i/PRP/i have/VBP/have 7/CD/7 k/NN/k subsets/NNS/subsets per/IN/per vertex/NN/vertex /,/, if/IN/if the/DT/the vertex/NN/vertex has/VBZ/has degree/JJ/degree 2/CD/2. then/RB/then it/PRP/it would/MD/would be/VB/be less/RBR/less then/RB/then it/PRP/it would/MD/would be/VB/be 3/CD/3 k/NN/k /,/, because/IN/because there/EX/there are/VBP/are if/IN/if i/PRP/i take/VBP/take a/DT/a size/NN/size 2/CD/2 the/DT/the number/NN/number of/IN/of distinct/NN/distinct subsets/NNS/subsets /,/, which/WDT/which are/VBP/are not/RB/not empty/JJ/empty is/VBZ/is 3/CD/3. if/IN/if the/DT/the vertex/NN/vertex has/VBZ/has degree/JJ/degree one/CD/one then/RB/then i/PRP/i would/MD/would just/RB/just have/VB/have one/CD/one subset/NN/subset /,/, which/WDT/which would/MD/would translate/VB/translate k/NN/k other/JJ/other subsets/NNP/subsets. so/IN/so /,/, when/WRB/when the/DT/the vertex/NN/vertex has/VBZ/has degree/JJ/degree k/NN/k degree/NN/degree 3/CD/3 /,/, i/PRP/i have/VBP/have 7/CD/7 k/NN/k subsets/NNS/subsets per/IN/per vertex/NNP/vertex. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 23/CD/23 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is translation/NN/translation i/PRP/i take/VBP/take this/DT/this graph/NN/graph g/NN/g and/CC/and for/IN/for every/DT/every vertex/NN/vertex for/IN/for vertex/NN/vertex u/NNP/u. i/PRP/i must/MD/must say/VB/say that/IN/that the/DT/the set/NN/set is/VBZ/is nothing/NN/nothing but/CC/but e/NN/e of/IN/of g/NN/g x/NN/x 1/CD/1 through/IN/through x/NN/x k/NN/k for/IN/for a/DT/a vertex/NN/vertex u/NNP/u. i/PRP/i would/MD/would have/VB/have either/DT/either 7/CD/7 k/NN/k or/CC/or 3/CD/3 k/NN/k or/CC/or k/NN/k say/VBP/say depending/VBG/depending upon/IN/upon the/DT/the degree/NN/degree of/IN/of the/DT/the vertex/NNP/vertex. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the typical/JJ/typical /,/, what/WP/what does/VBZ/does the/DT/the typical/JJ/typical set/NN/set look/NN/look like/IN/like ?/./? so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a subset/NN/subset of/IN/of edges/NNS/edges adjacent/VBP/adjacent incident/NN/incident on/IN/on u/NN/u and/CC/and one/CD/one of/IN/of the/DT/the exercises/NNP/exercises. so/RB/so /,/, i/PRP/i take/VBP/take a/DT/a subset/NN/subset and/CC/and x/NN/x 1/CD/1 subset/NN/subset x/NN/x 2/CD/2 subset/NN/subset and/CC/and x/NN/x 3/CD/3 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to x/VB/x k/NNP/k. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how each/DT/each element/NN/element corresponding/VBG/corresponding to/TO/to a/DT/a vertex/NN/vertex look/NN/look like/NNP/like. there/EX/there could/MD/could be/VB/be either/RB/either 7/CD/7 k/NN/k or/CC/or 3/CD/3 k/NN/k depending/VBG/depending on/IN/on the/DT/the degree/NN/degree of/IN/of the/DT/the vertex/NNP/vertex. and/CC/and this/DT/this is/VBZ/is now/RB/now /,/, i/PRP/i take/VBP/take this/DT/this instance/NN/instance of/IN/of s/NNS/s and/CC/and this/DT/this collection/NN/collection and/CC/and i/PRP/i feed/VBP/feed this/DT/this into/IN/into sub/NN/sub routine/NN/routine for/IN/for x/NN/x c/NNP/c. if/IN/if this/DT/this says/VBZ/says yes/VBZ/yes then/RB/then i/PRP/i output/VBD/output yes/NNS/yes if/IN/if this/DT/this says/VBZ/says no/DT/no then/RB/then i/PRP/i output/VBD/output no/NNP/no. so/RB/so /,/, this/DT/this is/VBZ/is this/DT/this is/VBZ/is my/PRP$/my transformation/NNP/transformation. now/RB/now /,/, to/TO/to see/VB/see that/IN/that this/DT/this works/NNS/works clearly/RB/clearly /,/, if/IN/if this/DT/this has/VBZ/has a/DT/a vertex/NN/vertex cover/NN/cover of/IN/of size/NN/size k/NN/k i/PRP/i have/VBP/have a/DT/a exact/JJ/exact cover/NN/cover of/IN/of i/PRP/i have/VBP/have exact/JJ/exact cover/NN/cover of/IN/of this/DT/this /,/, why/WRB/why is/VBZ/is that/IN/that true/JJ/true ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 35/CD/35 /CD/) so/RB/so /,/, let/VB/let the/DT/the vertex/NN/vertex cover/NN/cover consist/NN/consist of/IN/of vertices/NNS/vertices v/VBP/v 1/CD/1 v/NN/v 2/CD/2 so/RB/so on/IN/on up/IN/up to/TO/to v/VB/v k/NN/k now/RB/now /,/, for/IN/for v/NN/v 1/CD/1. i/PRP/i put/VBD/put the/DT/the set/NN/set x/NN/x 1/CD/1 comma/NN/comma all/DT/all edges/NNS/edges incident/VBP/incident on/IN/on v/NN/v 1/CD/1 i/PRP/i pick/VBP/pick the/DT/the set/NN/set with/IN/with v/NN/v i/NNP/i. i/PRP/i pick/VBP/pick the/DT/the set/NN/set x/NN/x i/PRP/i comma/VBP/comma all/DT/all edges/NNS/edges incident/VBP/incident on/IN/on v/NN/v i/PRP/i /,/, but/CC/but not/RB/not on/IN/on v/NN/v i/PRP/i so/RB/so on/IN/on up/IN/up to/TO/to v/VB/v i/PRP/i minus/VBZ/minus 1/CD/1. this/DT/this is/VBZ/is my/PRP$/my set/NN/set which/WDT/which i/PRP/i picked/VBD/picked and/CC/and you/PRP/you can/MD/can check/VB/check that/IN/that this/DT/this is/VBZ/is this/DT/this is/VBZ/is an/DT/an exact/JJ/exact cover/NN/cover x/NN/x 1/CD/1 is/VBZ/is covered/VBN/covered by/IN/by this/DT/this set/NN/set this/DT/this set/NN/set corresponding/VBG/corresponding to/TO/to v/VB/v 1/CD/1. x/NN/x i/PRP/i is/VBZ/is covered/VBN/covered by/IN/by v/NN/v i/PRP/i and/CC/and so/RB/so on/NNP/on. x/NN/x k/NN/k x/NN/x 1/CD/1 through/IN/through x/NN/x k/NN/k is/VBZ/is covered/VBN/covered and/CC/and every/DT/every edge/NN/edge is/VBZ/is also/RB/also covered/NNP/covered. since/IN/since this/DT/this is/VBZ/is a/DT/a vertex/NN/vertex cover/NN/cover if/IN/if i/PRP/i take/VBP/take any/DT/any edge/NN/edge /,/, it/PRP/it must/MD/must occur/VB/occur between/IN/between there/EX/there must/MD/must be/VB/be an/DT/an end/NN/end point/NN/point in/IN/in this/DT/this there/EX/there must/MD/must be/VB/be at/IN/at least/JJS/least one/CD/one end/NN/end point/NNP/point. choose/NN/choose the/DT/the smaller/JJR/smaller end/NN/end point/NN/point supposing/VBG/supposing it/PRP/it is/VBZ/is v/NN/v i/PRP/i then/RB/then this/DT/this edge/NN/edge must/MD/must have/VB/have the/DT/the other/JJ/other end/NN/end point/NN/point is/VBZ/is either/DT/either one/CD/one of/IN/of v/NN/v i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through v/NN/v k/NN/k or/CC/or something/NN/something else/RB/else completely/RB/completely different/JJ/different in/IN/in either/DT/either case/NN/case that/IN/that edge/NN/edge will/MD/will be/VB/be part/NN/part of/IN/of the/DT/the set/NNP/set. so/RB/so /,/, every/DT/every edge/NN/edge is/VBZ/is covered/VBN/covered by/IN/by by/IN/by this/DT/this collection/NN/collection edge/NN/edge is/VBZ/is covered/VBN/covered here/-NONE-/here. so/RB/so /,/, every/DT/every element/NN/element of/IN/of s/NNS/s is/VBZ/is covered/VBN/covered by/IN/by this/DT/this collection/NNP/collection. similarly/RB/similarly /,/, if/IN/if i/PRP/i have/VBP/have a/DT/a collection/NN/collection which/WDT/which covers/NNS/covers let/VBP/let us/PRP/us say/VBP/say b/NN/b 1/CD/1 through/IN/through b/NN/b k/NN/k is/VBZ/is the/DT/the sub/NN/sub collection/NN/collection /,/, which/WDT/which covers/NNS/covers every/DT/every element/NN/element of/IN/of s/NNP/s. let/NN/let us/PRP/us say/VBP/say that/IN/that b/NN/b i/PRP/i contains/VBZ/contains x/NN/x i/PRP/i x/VBP/x 1/CD/1 through/IN/through x/NN/x k/NN/k must/MD/must be/VB/be covered/NNP/covered. so/RB/so /,/, and/CC/and they/PRP/they are/VBP/are covered/VBN/covered exactly/RB/exactly once/RB/once /,/, so/RB/so they/PRP/they occur/VBP/occur there/RB/there must/MD/must be/VB/be k/NN/k sets/NNS/sets and/CC/and each/DT/each of/IN/of them/PRP/them must/MD/must contain/VB/contain one/CD/one of/IN/of x/NN/x 1/CD/1 through/IN/through x/NN/x k/NN/k let/NN/let us/PRP/us say/VBP/say b/NN/b 1/CD/1 contains/NNS/contains x/NN/x 1/CD/1 and/CC/and so/RB/so on/NNP/on. and/CC/and b/NN/b i/PRP/i contains/VBZ/contains x/NN/x i/PRP/i b/VBP/b k/NN/k contains/NNS/contains x/VBP/x k/NN/k now/RB/now /,/, every/DT/every edge/NN/edge must/MD/must also/RB/also be/VB/be covered/NNP/covered. and/CC/and must/MD/must occur/VB/occur in/IN/in one/CD/one of/IN/of these/DT/these sets/NNS/sets /,/, which/WDT/which means/VBZ/means if/IN/if it/PRP/it occurs/VBZ/occurs in/IN/in set/NN/set b/NN/b i/PRP/i /,/, it/PRP/it must/MD/must be/VB/be adjacent/VBN/adjacent to/TO/to the/DT/the vertex/NN/vertex i/PRP/i right/NNP/right. so/RB/so /,/, what/WDT/what i/PRP/i do/VBP/do is/VBZ/is the/DT/the vertex/NN/vertex cover/NN/cover just/RB/just consists/VBZ/consists of/IN/of the/DT/the vertices/NNS/vertices /,/, which/WDT/which corresponds/NNS/corresponds to/TO/to each/DT/each of/IN/of this/DT/this each/DT/each of/IN/of these/DT/these sets/NNS/sets /,/, which/WDT/which corresponds/NNS/corresponds to/TO/to b/VB/b 1/CD/1. the/DT/the vertex/NN/vertex /,/, which/WDT/which corresponds/NNS/corresponds to/TO/to b/VB/b i/PRP/i and/CC/and so/RB/so on/IN/on /,/, so/IN/so those/DT/those vertices/NNS/vertices will/MD/will form/VB/form a/DT/a vertex/NN/vertex cover/NN/cover /,/, so/RB/so this/DT/this shoes/VBZ/shoes that/IN/that exact/JJ/exact cover/NN/cover is/VBZ/is n/VBN/n p/NN/p complete/NN/complete /,/, why/WRB/why did/VBD/did we/PRP/we pick/VBP/pick 3/CD/3 v/NN/v c/NN/c /,/, why/WRB/why not/RB/not i/PRP/i mean/VBP/mean less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NN/c /,/, why/WRB/why not/RB/not vertex/JJ/vertex cover/NN/cover ?/./? we/PRP/we have/VBP/have done/VBN/done this/DT/this with/IN/with vertex/NN/vertex cover/NN/cover well/RB/well the/DT/the answer/NN/answer is/VBZ/is no/DT/no at/IN/at least/JJS/least this/DT/this reduction/NN/reduction does/VBZ/does not/RB/not work/NNP/work. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 06/CD/06 /CD/) the/DT/the reason/NN/reason is/VBZ/is that/IN/that supposing/VBG/supposing i/PRP/i have/VBP/have a/DT/a vertex/NN/vertex of/IN/of large/JJ/large degree/NN/degree some/DT/some degree/NN/degree d/NN/d the/DT/the number/NN/number of/IN/of subsets/NNS/subsets /,/, i/PRP/i have/VBP/have corresponding/VBG/corresponding to/TO/to this/DT/this is/VBZ/is 2/CD/2 to/TO/to the/DT/the d/NN/d minus/NN/minus 1/CD/1 times/NNS/times k/NNP/k. this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of subsets/NNS/subsets /,/, remember/NN/remember how/WRB/how we/PRP/we took/VBD/took ?/./? how/WRB/how we/PRP/we got/VBD/got the/DT/the subsets/NNS/subsets for/IN/for the/DT/the vertex/NN/vertex ?/./? we/PRP/we took/VBD/took all/PDT/all possible/JJ/possible subsets/NNS/subsets here/RB/here non/VBP/non empty/JJ/empty subsets/NNP/subsets. and/CC/and we/PRP/we added/VBD/added for/IN/for each/DT/each subset/NN/subset i/PRP/i added/VBD/added x/NN/x 1/CD/1 x/NN/x 2/CD/2 x/NN/x 3/CD/3 so/RB/so on/IN/on up/IN/up to/TO/to x/VB/x k/NNP/k. so/RB/so /,/, these/DT/these many/JJ/many non/NN/non empty/NN/empty subsets/NNS/subsets times/NNS/times k/VBP/k is/VBZ/is the/DT/the total/JJ/total number/NN/number of/IN/of subsets/NNS/subsets we/PRP/we get/VBP/get and/CC/and this/DT/this can/MD/can be/VB/be just/RB/just very/RB/very large/JJ/large right/NNP/right. if/IN/if i/PRP/i have/VBP/have a/DT/a graph/NN/graph with/IN/with degree/NN/degree for/IN/for instance/NN/instance the/DT/the complete/JJ/complete graph/NN/graph as/IN/as degree/NN/degree n/NN/n minus/NN/minus 1/CD/1. this/DT/this size/NN/size can/MD/can be/VB/be 2/CD/2 to/TO/to the/DT/the n/NN/n minus/NN/minus 1/CD/1 /,/, which/WDT/which is/VBZ/is just/RB/just too/RB/too much/JJ/much /,/, which/WDT/which is/VBZ/is too/RB/too much/JJ/much and/CC/and by/IN/by the/DT/the time/NN/time you/PRP/you write/VBP/write this/DT/this down/NN/down /,/, it/PRP/it is/VBZ/is much/RB/much more/RBR/more than/IN/than polynomial/JJ/polynomial type/NNP/type. so/RB/so /,/, that/IN/that will/MD/will it/PRP/it will/MD/will not/RB/not work/VB/work in/IN/in polynomial/JJ/polynomial time/NN/time if/IN/if you/PRP/you take/VBP/take just/RB/just about/IN/about extra/JJ/extra cover/NNP/cover. so/RB/so /,/, we/PRP/we want/VBP/want this/DT/this degree/NN/degree to/TO/to be/VB/be bounded/VBN/bounded by/IN/by a/DT/a constant/JJ/constant /,/, if/IN/if we/PRP/we use/VBP/use 3/CD/3 v/NN/v c/NN/c and/CC/and then/RB/then this/DT/this is/VBZ/is 7/CD/7 times/NNS/times k/VBP/k which/WDT/which is/VBZ/is not/RB/not 2/CD/2 bit/NNP/bit. so/RB/so /,/, the/DT/the total/JJ/total number/NN/number of/IN/of subsets/NNS/subsets we/PRP/we have/VBP/have is/VBZ/is actually/RB/actually 7/CD/7 k/NN/k times/NNS/times the/DT/the number/NN/number of/IN/of vertices/NNS/vertices /,/, this/DT/this is/VBZ/is the/DT/the total/JJ/total number/NN/number of/IN/of subsets/NNS/subsets is/VBZ/is at/IN/at most/JJS/most this/DT/this much/JJ/much if/IN/if its/PRP$/its instance/NN/instance if/IN/if the/DT/the degree/NN/degree is/VBZ/is bounded/VBN/bounded by/IN/by 3/CD/3. that/WDT/that is/VBZ/is the/DT/the reason/NN/reason we/PRP/we needed/VBD/needed less/JJR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NN/c we/PRP/we have/VBP/have shown/VBN/shown that/IN/that exact/JJ/exact cover/NN/cover is/VBZ/is n/VBN/n p/NN/p complete/NNP/complete. the/DT/the main/JJ/main trick/NN/trick was/VBD/was to/TO/to first/JJ/first show/NN/show that/WDT/that 3/CD/3 v/NN/v c/NN/c is/VBZ/is n/VBN/n p/NN/p complete/NN/complete less/RBR/less than/IN/than equal/JJ/equal to/TO/to 3/CD/3 v/NN/v c/NN/c is/VBZ/is n/VBN/n p/NN/p complete/NN/complete /,/, which/WDT/which is/VBZ/is a/DT/a restriction/NN/restriction of/IN/of vertex/NN/vertex cover/NNP/cover. then/RB/then show/VB/show that/IN/that exact/JJ/exact cover/NN/cover is/VBZ/is n/VBN/n p/NN/p complete/NN/complete one/CD/one can/MD/can actually/RB/actually do/VB/do it/PRP/it in/IN/in other/JJ/other ways/NNS/ways without/IN/without going/VBG/going through/IN/through 3/CD/3 v/NN/v c/NN/c and/CC/and i/PRP/i will/MD/will let/VB/let you/PRP/you try/VB/try this/DT/this on/IN/on your/PRP$/your own/NNP/own. the/DT/the reductions/NNS/reductions become/VBP/become slightly/RB/slightly more/RBR/more involved/VBN/involved /,/, but/CC/but you/PRP/you can/MD/can still/RB/still do/VB/do them/NNP/them. after/IN/after this/DT/this we/PRP/we will/MD/will look/VB/look at/IN/at problems/NNS/problems where/WRB/where sizes/NNS/sizes come/VBP/come into/IN/into play/NNP/play. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the next/JJ/next installment/NNP/installment. design/NN/design &/CC/& analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. sunder/NN/sunder vishwanathan/IN/vishwanathan department/NN/department of/IN/of computer/NN/computer science/NN/science engineering/NN/engineering indian/NN/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 31/CD/31 np-completeness/JJ/np-completeness ?/./? vi/NN/vi /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 07/CD/07 /CD/) the/DT/the next/JJ/next problem/NN/problem we/PRP/we consider/VBP/consider is/VBZ/is called/VBN/called subset/NN/subset sum/NNP/sum. in/IN/in this/DT/this problem/NN/problem the/DT/the input/NN/input is/VBZ/is a/DT/a set/NN/set s/VBZ/s with/IN/with m/NN/m elements/NNS/elements each/DT/each element/NN/element has/VBZ/has a/DT/a size/NNP/size. so/RB/so /,/, you/PRP/you have/VBP/have sizes/NNS/sizes s/NNS/s 1/CD/1 s/NNS/s 2/CD/2 and/CC/and so/RB/so on/IN/on to/TO/to s/NNS/s m/VB/m each/DT/each element/NN/element has/VBZ/has a/DT/a size/NNP/size. also/RB/also you/PRP/you are/VBP/are given/VBN/given a/DT/a positive/JJ/positive integer/NN/integer b/NN/b we/PRP/we will/MD/will assume/VB/assume that/IN/that these/DT/these sizes/NNS/sizes are/VBP/are also/RB/also positive/JJ/positive integer/NNP/integer. you/PRP/you have/VBP/have a/DT/a set/NN/set s/VBZ/s with/IN/with m/NN/m elements/NNS/elements each/DT/each element/NN/element has/VBZ/has the/DT/the size/NN/size m/NN/m and/CC/and also/RB/also part/NN/part of/IN/of the/DT/the input/NN/input is/VBZ/is a/DT/a positive/JJ/positive integer/NN/integer b/NNP/b. the/DT/the question/NN/question that/IN/that we/PRP/we want/VBP/want to/TO/to answer/VB/answer is/VBZ/is this/DT/this is/VBZ/is there/RB/there a/DT/a subset/NN/subset subset/NN/subset t/NN/t of/IN/of s/NNS/s whose/WP$/whose size/NN/size is/VBZ/is b/NNP/b. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a question/NN/question that/WDT/that we/PRP/we want/VBP/want to/TO/to answer/NNP/answer. now/RB/now /,/, what/WDT/what is/VBZ/is the/DT/the size/NN/size of/IN/of a/DT/a subset/NN/subset ?/./? the/DT/the size/NN/size of/IN/of a/DT/a subset/NN/subset is/VBZ/is just/RB/just the/DT/the sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of the/DT/the elements/NNS/elements in/IN/in the/DT/the subset/NNP/subset. let/NN/let me/PRP/me define/VBP/define this/DT/this /,/, the/DT/the size/NN/size of/IN/of t/NN/t is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of the/DT/the elements/NNS/elements e/VBP/e measure/NN/measure in/IN/in t/NNP/t. so/RB/so /,/, take/VB/take all/PDT/all the/DT/the elements/NNS/elements in/IN/in in/IN/in the/DT/the subset/NN/subset t/NN/t and/CC/and sum/NN/sum of/IN/of their/PRP$/their sizes/NNS/sizes this/DT/this will/MD/will give/VB/give you/PRP/you the/DT/the size/NN/size of/IN/of a/DT/a subset/NNP/subset. now/RB/now /,/, if/IN/if you/PRP/you look/VBP/look at/IN/at size/NN/size if/IN/if you/PRP/you look/VBP/look at/IN/at subsets/NNS/subsets in/IN/in s/NNS/s each/DT/each of/IN/of them/PRP/them will/MD/will have/VB/have some/DT/some size/NN/size right/NNP/right. now/RB/now /,/, we/PRP/we would/MD/would like/VB/like to/TO/to pick/VB/pick up/RP/up the/DT/the subset/NN/subset of/IN/of s/NNS/s whose/WP$/whose size/NN/size is/VBZ/is exactly/RB/exactly b/NN/b this/DT/this is/VBZ/is the/DT/the problem/NN/problem this/DT/this is/VBZ/is the/DT/the algorithmic/JJ/algorithmic problem/NN/problem that/IN/that you/PRP/you want/VBP/want to/TO/to solve/VB/solve and/CC/and this/DT/this is/VBZ/is the/DT/the next/JJ/next problem/NN/problem we/PRP/we show/VBP/show is/VBZ/is this/DT/this np/NN/np complete/NNP/complete. as/IN/as before/IN/before let/NN/let us/PRP/us first/RB/first prove/VBP/prove that/IN/that this/DT/this problem/NN/problem is/VBZ/is in/IN/in np/NN/np this/DT/this should/MD/should not/RB/not take/VB/take as/IN/as too/RB/too much/JJ/much time/NN/time what/WP/what put/VBN/put the/DT/the prover/NN/prover give/VBP/give that/IN/that verifier/NNP/verifier. so/RB/so /,/, that/IN/that the/DT/the verifier/NN/verifier can/MD/can look/VB/look at/IN/at an/DT/an input/NN/input to/TO/to to/TO/to the/DT/the subset/NN/subset sum/NN/sum and/CC/and conclude/VBP/conclude and/CC/and convince/NN/convince himself/PRP/himself that/NNP/that. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is a/DT/a s/NN/s input/NNP/input. now/RB/now /,/, for/IN/for a/DT/a s/NN/s input/NN/input there/EX/there there/EX/there must/MD/must exist/VB/exist a/DT/a subset/NN/subset whose/WP$/whose set/NN/set whose/WP$/whose size/NN/size is/VBZ/is exactly/RB/exactly b/NN/b right/NNP/right. so/RB/so /,/, the/DT/the prover/NN/prover just/RB/just gives/VBZ/gives this/DT/this subset/NN/subset to/TO/to the/DT/the verifier/NN/verifier the/DT/the verifier/NN/verifier takes/VBZ/takes this/DT/this subset/NN/subset sums/NNS/sums up/IN/up the/DT/the sizes/NNS/sizes verifies/VBZ/verifies that/IN/that this/NNP/this. in/IN/in fact/NN/fact /,/, is/VBZ/is b/NN/b and/CC/and this/DT/this verification/NN/verification happens/VBZ/happens very/RB/very fast/JJ/fast he/PRP/he just/RB/just has/VBZ/has to/TO/to sum/NN/sum up/IN/up the/DT/the sizes/NNS/sizes of/IN/of the/DT/the subset/NNP/subset. so/RB/so /,/, subsets/NNS/subsets are/VBP/are measured/VBN/measured np/NN/np our/PRP$/our next/JJ/next job/NN/job is/VBZ/is to/TO/to show/VB/show that/IN/that subset/NN/subset sum/NN/sum is/VBZ/is np/NN/np hard/NNP/hard. and/CC/and to/TO/to do/VB/do this/DT/this we/PRP/we will/MD/will use/VB/use the/DT/the exact/JJ/exact cover/NN/cover /,/, what/WP/what does/VBZ/does it/PRP/it mean/VB/mean that/IN/that we/PRP/we going/VBG/going to/TO/to use/VB/use exact/JJ/exact cover/NN/cover what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do is/VBZ/is this/NNP/this. so/RB/so /,/, we/PRP/we will/MD/will assume/VB/assume that/IN/that there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for subset/NN/subset sum/NN/sum if/IN/if there/EX/there is/VBZ/is 1/CD/1 such/JJ/such we/PRP/we will/MD/will construct/VB/construct polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for exact/JJ/exact cover/NNP/cover. so/RB/so /,/, this/DT/this polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for exact/JJ/exact cover/NN/cover will/MD/will take/VB/take input/NN/input for/IN/for exact/JJ/exact cover/NNP/cover. then/RB/then if/IN/if we/PRP/we convert/VBP/convert it/PRP/it your/PRP$/your input/NN/input for/IN/for subset/NN/subset sum/NN/sum somehow/NN/somehow feed/VBD/feed it/PRP/it into/IN/into the/DT/the subroutine/NN/subroutine for/IN/for subset/NN/subset sum/NN/sum get/NN/get an/DT/an output/NN/output back/RB/back and/CC/and then/RB/then you/PRP/you know/VBP/know given/VBN/given answer/NN/answer for/IN/for exact/JJ/exact cover/NNP/cover. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 04/CD/04 /:/: 55/CD/55 /CD/) so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do this/NNP/this. so/RB/so /,/, we/PRP/we are/VBP/are given/VBN/given a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for subset/NN/subset sum/NN/sum what/WP/what you/PRP/you want/VBP/want to/TO/to do/VB/do is/VBZ/is construct/VB/construct a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm construct/NN/construct 1/CD/1 for/IN/for exact/JJ/exact cover/NN/cover frame/NN/frame model/NN/model construct/NN/construct a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for exact/JJ/exact cover/NNP/cover. so/RB/so /,/, since/IN/since we/PRP/we are/VBP/are constructing/VBG/constructing 1/CD/1 for/IN/for exact/JJ/exact cover/NN/cover somehow/NN/somehow we/PRP/we should/MD/should convert/VB/convert input/NN/input for/IN/for exact/JJ/exact cover/NN/cover into/IN/into input/NN/input for/IN/for subset/NN/subset sum/NNP/sum. so/RB/so /,/, what/WDT/what are/VBP/are the/DT/the inputs/NNS/inputs for/IN/for exact/JJ/exact cover/NN/cover ?/./? so/RB/so /,/, let/VB/let us/PRP/us see/VB/see we/PRP/we have/VBP/have exact/JJ/exact cover/NN/cover on/IN/on this/DT/this side/NN/side the/DT/the input/NN/input is/VBZ/is the/DT/the set/NN/set t/NN/t and/CC/and subsets/NNS/subsets a/DT/a 1/CD/1 a/DT/a 2/CD/2 so/RB/so on/IN/on up/IN/up to/TO/to am/NNP/am. what/WP/what a/DT/a subset/NN/subset sum/NN/sum ?/./? subset/NN/subset sum/NN/sum has/VBZ/has a/DT/a set/NN/set s/VBZ/s that/IN/that is/VBZ/is this/DT/this positive/JJ/positive integer/NN/integer b/NNP/b. and/CC/and then/RB/then we/PRP/we have/VBP/have sizes/NNS/sizes s/NNS/s 1/CD/1 /,/, s/NNS/s 2/CD/2 up/IN/up to/TO/to sm/NN/sm that/IN/that these/DT/these 2/CD/2 m/NN/m ?/./? s/NNS/s are/VBP/are the/DT/the same/JJ/same is/VBZ/is not/RB/not a/DT/a coincidence/NN/coincidence mean/NN/mean i/PRP/i have/VBP/have chosen/VBN/chosen this/DT/this anyway/NN/anyway let/VBD/let us/PRP/us just/RB/just proceed/NNP/proceed. now/RB/now /,/, what/WDT/what do/VBP/do we/PRP/we want/VBP/want to/TO/to do/VB/do here/RB/here in/IN/in xc/NN/xc ?/./? we/PRP/we want/VBP/want to/TO/to pick/VB/pick subsets/NNS/subsets to/TO/to exactly/RB/exactly cover/RB/cover elements/NNS/elements of/IN/of the/DT/the set/NN/set t/NN/t you/PRP/you want/VBP/want to/TO/to pick/VB/pick some/DT/some of/IN/of these/NNP/these. so/RB/so /,/, that/IN/that this/DT/this set/NN/set p/NN/p is/VBZ/is covered/VBN/covered exactly/RB/exactly what/WP/what do/VBP/do we/PRP/we want/VBP/want to/TO/to do/VB/do here/RB/here ?/./? we/PRP/we want/VBP/want to/TO/to pick/VB/pick elements/NNS/elements of/IN/of s/NNS/s of/IN/of size/NN/size of/IN/of total/JJ/total size/NN/size equal/JJ/equal to/TO/to b/NNP/b. now/RB/now /,/, here/RB/here we/PRP/we have/VBP/have to/TO/to pick/VB/pick subsets/NNS/subsets it/PRP/it says/VBZ/says picks/NNS/picks up/IN/up sets/NNS/sets here/RB/here it/PRP/it says/VBZ/says pick/NN/pick elements/NNP/elements. so/RB/so /,/, there/EX/there must/MD/must be/VB/be a/DT/a correspondence/NN/correspondence there/EX/there must/MD/must be/VB/be a/DT/a correspondence/NN/correspondence between/IN/between subsets/NNS/subsets in/IN/in the/DT/the exact/JJ/exact cover/NN/cover input/NN/input and/CC/and elements/NNS/elements in/IN/in the/DT/the subset/NN/subset sum/NN/sum input/NNP/input. so/RB/so /,/, somehow/WRB/somehow subsets/NNS/subsets on/IN/on 1/CD/1 side/NN/side and/CC/and elements/NNS/elements on/IN/on the/DT/the other/JJ/other side/NN/side must/MD/must correspond/NNP/correspond. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the reason/NN/reason why/WRB/why m/NN/m is/VBZ/is i/PRP/i have/VBP/have chosen/VBN/chosen m/NN/m to/TO/to be/VB/be the/DT/the same/JJ/same because/IN/because they/PRP/they will/MD/will be/VB/be the/DT/the same/NNP/same. so/RB/so /,/, for/IN/for each/DT/each subset/NN/subset in/IN/in the/DT/the exact/JJ/exact cover/NN/cover input/NN/input there/EX/there will/MD/will be/VB/be an/DT/an element/NN/element in/IN/in the/DT/the subsets/NNS/subsets sum/NN/sum input/NN/input right/NNP/right. so/RB/so /,/, you/PRP/you want/VBP/want to/TO/to pick/VB/pick subsets/NNS/subsets here/RB/here and/CC/and you/PRP/you want/VBP/want to/TO/to pick/VB/pick elements/NNS/elements here/NNP/here. so/RB/so /,/, subsets/NNS/subsets will/MD/will correspond/VB/correspond to/TO/to elements/NNP/elements. so/RB/so /,/, let/VB/let us/PRP/us write/VB/write these/DT/these subsets/NNS/subsets /,/, it/PRP/it correspond/VBD/correspond to/TO/to elements/NNP/elements. what/WP/what is/VBZ/is the/DT/the other/JJ/other thing/NN/thing ?/./? the/DT/the other/JJ/other thing/NN/thing is/VBZ/is here/RB/here i/PRP/i want/VBP/want to/TO/to exactly/RB/exactly cover/RB/cover elements/NNS/elements of/IN/of t/NN/t here/RB/here i/PRP/i want/VBP/want to/TO/to pick/VB/pick 1/CD/1 of/IN/of size/NN/size b/NN/b somehow/NN/somehow exact/NN/exact cover/NN/cover on/IN/on this/DT/this side/NN/side must/MD/must translate/VB/translate to/TO/to the/DT/the subset/NN/subset of/IN/of size/NN/size b/NNP/b. this/DT/this side/NN/side i/PRP/i want/VBP/want to/TO/to pick/VB/pick exact/JJ/exact cover/NN/cover this/DT/this side/NN/side this/DT/this side/NN/side i/PRP/i want/VBP/want to/TO/to pick/VB/pick a/DT/a subset/NN/subset of/IN/of size/NN/size b/NN/b the/DT/the crucial/JJ/crucial thing/NN/thing of/IN/of course/NN/course /,/, is/VBZ/is what/WP/what is/VBZ/is b/VBP/b /,/, what/WP/what is/VBZ/is b/VBP/b and/CC/and what/WP/what are/VBP/are the/DT/the sizes/NNS/sizes s/VBZ/s 1/CD/1 s/NNS/s 2/CD/2 s/NNS/s 3/CD/3 up/IN/up to/TO/to sm/NN/sm ?/./? i/PRP/i know/VBP/know that/IN/that with/IN/with each/DT/each element/NN/element of/IN/of s/NNS/s what/WP/what it/PRP/it is/VBZ/is a/DT/a subset/NN/subset of/IN/of exact/JJ/exact cover/NN/cover that/WDT/that corresponds/VBZ/corresponds ?/./? how/WRB/how do/VBP/do i/PRP/i pick/VB/pick these/DT/these sizes/NNS/sizes to/TO/to make/VB/make sure/JJ/sure that/IN/that an/DT/an exact/JJ/exact cover/NN/cover on/IN/on 1/CD/1 side/NN/side corresponds/NNS/corresponds to/TO/to a/DT/a subset/NN/subset of/IN/of size/NN/size b/NN/b ?/./? so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what this/DT/this is/VBZ/is a/DT/a problem/NN/problem that/WDT/that we/PRP/we would/MD/would like/VB/like to/TO/to solve/VB/solve now/NNP/now. so/RB/so /,/, to/TO/to solve/VB/solve this/DT/this let/NN/let us/PRP/us do/VBP/do a/DT/a small/JJ/small switch/NNP/switch. so/RB/so /,/, we/PRP/we will/MD/will solve/VB/solve a/DT/a different/JJ/different we/PRP/we look/VBP/look at/IN/at a/DT/a problem/NN/problem which/WDT/which is/VBZ/is very/RB/very related/NNP/related. and/CC/and then/RB/then we/PRP/we show/VBP/show at/IN/at a/DT/a solution/NN/solution to/TO/to this/DT/this problem/NN/problem can/MD/can be/VB/be transformed/VBN/transformed i/PRP/i mean/VBP/mean is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we are/VBP/are looking/VBG/looking for/IN/for a/DT/a problem/NN/problem is/VBZ/is this/NNP/this. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 36/CD/36 /CD/) so/RB/so /,/, you/PRP/you have/VBP/have given/VBN/given a/DT/a multi/NN/multi set/NN/set m/NN/m what/WP/what is/VBZ/is a/DT/a multi/NN/multi set/NN/set multi/NN/multi set/NN/set is/VBZ/is a/DT/a is/VBZ/is like/IN/like set/NN/set except/IN/except that/DT/that elements/NNS/elements can/MD/can be/VB/be repeated/VBN/repeated you/PRP/you have/VBP/have multi/PRP/multi set/VBN/set m/NN/m the/DT/the size/NN/size k/NN/k distinct/NN/distinct elements/NNS/elements let/VBP/let us/PRP/us say/VBP/say x/NN/x 1/CD/1 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to xk/VB/xk each/DT/each element/NN/element occurs/NNS/occurs at/IN/at most/JJS/most l/JJ/l times/NNP/times. each/DT/each element/NN/element each/DT/each of/IN/of this/DT/this can/MD/can have/VB/have at/IN/at most/JJS/most l/JJ/l other/JJ/other copies/NNS/copies of/IN/of itself/PRP/itself and/CC/and we/PRP/we are/VBP/are given/VBN/given a/DT/a positive/JJ/positive integer/NN/integer l/NNP/l. now/RB/now /,/, what/WDT/what do/VBP/do we/PRP/we do/VBP/do with/IN/with this/DT/this ?/./? what/WP/what we/PRP/we want/VBP/want to/TO/to do/VB/do is/VBZ/is assign/NNP/assign. so/RB/so /,/, the/DT/the problem/NN/problem is/VBZ/is this/NNP/this. so/RB/so /,/, assign/JJ/assign sizes/NNS/sizes to/TO/to each/DT/each distinct/NN/distinct elements/NNS/elements to/TO/to x/VB/x 1/CD/1 up/IN/up to/TO/to xk/VB/xk such/JJ/such that/IN/that the/DT/the only/JJ/only way/NN/way to/TO/to pick/VB/pick a/DT/a subset/NN/subset of/IN/of size/NN/size l/NN/l from/IN/from m/NN/m is/VBZ/is to/TO/to pick/VB/pick 1/CD/1 copy/NN/copy of/IN/of each/DT/each element/NNP/element. let/NN/let us/PRP/us see/VBP/see what/WP/what this/DT/this means/NNP/means. so/RB/so /,/, i/PRP/i you/PRP/you have/VBP/have a/DT/a multi/NN/multi set/NN/set there/EX/there are/VBP/are k/NN/k elements/NNS/elements and/CC/and there/EX/there are/VBP/are l/NN/l copies/NNS/copies there/EX/there could/MD/could be/VB/be l/JJ/l copies/NNS/copies or/CC/or perhaps/RB/perhaps less/JJR/less there/EX/there is/VBZ/is at/IN/at least/JJS/least 1/CD/1 copy/NN/copy and/CC/and at/IN/at most/JJS/most l/JJ/l copies/NNS/copies of/IN/of each/DT/each element/NN/element and/CC/and there/EX/there is/VBZ/is a/DT/a positive/JJ/positive integer/NN/integer l/NN/l this/DT/this positive/JJ/positive integer/NN/integer not/RB/not given/VBN/given to/TO/to you/NNP/you. so/RB/so /,/, let/VB/let me/PRP/me clarify/VB/clarify this/DT/this is/VBZ/is a/DT/a positive/JJ/positive integer/NN/integer you/PRP/you will/MD/will have/VB/have to/TO/to fix/VB/fix also/NNP/also. now/RB/now /,/, what/WDT/what you/PRP/you want/VBP/want to/TO/to do/VB/do is/VBZ/is give/VB/give sizes/NNS/sizes to/TO/to these/DT/these elements/NNS/elements x/VBP/x 1/CD/1 to/TO/to xk/VB/xk i/PRP/i want/VBP/want to/TO/to give/VB/give some/DT/some sizes/NNS/sizes i/PRP/i also/RB/also want/VBP/want to/TO/to fix/VB/fix this/DT/this positive/JJ/positive integer/NN/integer l/NNP/l. so/RB/so that/IN/that when/WRB/when from/IN/from this/DT/this multi/NN/multi set/VBD/set if/IN/if i/PRP/i pick/VBP/pick any/DT/any subset/NN/subset this/DT/this subset/NN/subset can/MD/can also/RB/also be/VB/be a/DT/a multi/NN/multi set/NNP/set. so/RB/so /,/, if/IN/if i/PRP/i remove/VBP/remove any/DT/any subset/NNP/subset. so/RB/so /,/, that/IN/that the/DT/the size/NN/size is/VBZ/is exactly/RB/exactly l/JJ/l then/RB/then it/PRP/it must/MD/must be/VB/be the/DT/the case/NN/case that/IN/that i/PRP/i have/VBP/have picked/VBN/picked exactly/RB/exactly 1/CD/1 copy/NN/copy of/IN/of each/DT/each element/NN/element 1/CD/1 copy/NN/copy of/IN/of x/NN/x 1/CD/1 1/CD/1 copy/NN/copy of/IN/of x/NN/x 2/CD/2 1/CD/1 copy/NN/copy of/IN/of x/NN/x 3/CD/3 and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to 1/CD/1 copy/NN/copy of/IN/of xk/NNP/xk. then/RB/then we/PRP/we at/IN/at least/JJS/least know/VB/know that/DT/that what/WP/what l/NN/l should/MD/should be/VB/be right/RB/right l/JJ/l then/RB/then should/MD/should be/VB/be size/NN/size of/IN/of x/NN/x 1/CD/1 plus/CC/plus size/NN/size of/IN/of x/NN/x 2/CD/2 dot/NN/dot dot/NN/dot dot/NN/dot up/IN/up to/TO/to size/VB/size of/IN/of xk/NN/xk this/DT/this we/PRP/we know/VBP/know /,/, because/IN/because when/WRB/when i/PRP/i pick/VBP/pick a/DT/a subset/NN/subset of/IN/of size/NN/size l/NN/l i/PRP/i must/MD/must get/VB/get 1/CD/1 copy/NN/copy of/IN/of each/DT/each element/NN/element nothing/NN/nothing else/NNP/else. now/RB/now /,/, these/DT/these sizes/NNS/sizes are/VBP/are to/TO/to be/VB/be picked/VBN/picked in/IN/in such/JJ/such a/DT/a way/NN/way that/WDT/that any/DT/any other/JJ/other subset/NN/subset of/IN/of size/NN/size l/NN/l if/IN/if i/PRP/i pick/VBP/pick any/DT/any other/JJ/other subset/NN/subset that/IN/that must/MD/must also/RB/also contain/VB/contain 1/CD/1 copy/NN/copy of/IN/of each/DT/each element/NN/element if/IN/if i/PRP/i put/VBD/put 2/CD/2 copies/NNS/copies of/IN/of any/DT/any element/NN/element the/DT/the size/NN/size of/IN/of such/JJ/such subset/NN/subset can/MD/can not/RB/not be/VB/be l/NNP/l. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the goal/NNP/goal. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we do/VBP/do this/DT/this ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 34/CD/34 /CD/) so/RB/so /,/, let/VB/let us/PRP/us see/NNP/see. so/RB/so /,/, we/PRP/we have/VBP/have elements/NNS/elements x/VBP/x 1/CD/1 x/NN/x 2/CD/2 let/NN/let us/PRP/us say/VBP/say x/NN/x 3/CD/3 and/CC/and so/RB/so on/IN/on now/RB/now let/VBP/let us/PRP/us just/RB/just focus/VBZ/focus on/IN/on the/DT/the first/JJ/first 2/CD/2 elements/NNS/elements let/VBP/let us/PRP/us look/VBP/look at/IN/at x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2. so/RB/so /,/, without/IN/without loss/NN/loss of/IN/of general/JJ/general generality/NN/generality i/PRP/i can/MD/can say/VB/say that/IN/that x/NN/x 1/CD/1 has/VBZ/has size/NN/size 1/CD/1. so/RB/so /,/, size/VBP/size 1/CD/1 we/PRP/we have/VBP/have at/IN/at most/JJS/most l/JJ/l copies/NNS/copies of/IN/of each/DT/each let/NN/let us/PRP/us say/VBP/say this/DT/this is/VBZ/is the/DT/the size/NN/size 1/CD/1. in/IN/in fact/NN/fact /,/, what/WP/what i/PRP/i want/VBP/want is/VBZ/is the/DT/the sizes/NNS/sizes to/TO/to let/VB/let us/PRP/us say/VB/say increasing/VBG/increasing x/NN/x 1/CD/1 is/VBZ/is the/DT/the smallest/JJS/smallest size/NN/size x/NN/x 2/CD/2 next/JJ/next 1/CD/1 x/NN/x three/NNP/three. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to assign/VB/assign them/PRP/them in/IN/in increasing/VBG/increasing order/NN/order x/NN/x 1/CD/1 is/VBZ/is of/IN/of size/NN/size 1/CD/1 what/WP/what can/MD/can be/VB/be the/DT/the size/NN/size of/IN/of x/NN/x 2/CD/2. so/RB/so /,/, let/VB/let us/PRP/us look/VB/look at/IN/at x/NN/x 2/CD/2. so/RB/so /,/, size/VBP/size of/IN/of x/NN/x 1/CD/1 is/VBZ/is 1/CD/1 what/WP/what is/VBZ/is size/VBP/size of/IN/of x/NN/x 2/CD/2 can/MD/can it/PRP/it be/VB/be 1/CD/1 really/RB/really not/RB/not because/IN/because if/IN/if its/PRP$/its size/NN/size is/VBZ/is 1/CD/1 i/PRP/i can/MD/can always/RB/always replace/VB/replace a/DT/a copy/NN/copy of/IN/of x/NN/x 2/CD/2 with/IN/with the/DT/the copy/NN/copy of/IN/of x/NN/x 1/CD/1 can/MD/can it/PRP/it be/VB/be 2/CD/2 well/RB/well not/RB/not really/RB/really /,/, because/IN/because if/IN/if i/PRP/i could/MD/could replace/VB/replace x/NN/x 2/CD/2 with/IN/with 2/CD/2 copies/NNS/copies of/IN/of x/NN/x 1/CD/1 then/RB/then i/PRP/i am/VBP/am again/RB/again failing/VBG/failing you/PRP/you know/NNP/know. so/RB/so /,/, somehow/WRB/somehow the/DT/the size/NN/size should/MD/should be/VB/be such/JJ/such that/IN/that i/PRP/i should/MD/should not/RB/not be/VB/be able/JJ/able to/TO/to replace/VB/replace x/NN/x 2/CD/2 with/IN/with some/DT/some copies/NNS/copies of/IN/of x/NN/x 1/CD/1 right/NNP/right. so/RB/so /,/, i/PRP/i guess/VBP/guess the/DT/the smallest/JJS/smallest we/PRP/we can/MD/can take/VB/take is/VBZ/is let/VBN/let us/PRP/us say/VBP/say l/NN/l minus/NN/minus 1/CD/1 or/CC/or l/NN/l if/IN/if i/PRP/i take/VBP/take l/NN/l the/DT/the way/NN/way to/TO/to do/VB/do it/PRP/it the/DT/the way/NN/way i/PRP/i could/MD/could replace/VB/replace x/NN/x 2/CD/2 is/VBZ/is with/IN/with all/DT/all of/IN/of x/NN/x 1/CD/1. let/NN/let just/RB/just look/VBP/look at/IN/at the/DT/the 2/CD/2 element/NN/element case/NN/case supposing/VBG/supposing i/PRP/i just/RB/just had/VBD/had 2/CD/2 elements/NNP/elements. so/RB/so /,/, i/PRP/i just/RB/just had/VBD/had x/VBN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2 supposing/VBG/supposing x/NN/x 1/CD/1 i/PRP/i said/VBD/said had/VBD/had size/NN/size 1/CD/1 x/NN/x 2/CD/2 has/VBZ/has size/NN/size l/NN/l and/CC/and my/PRP$/my capital/NN/capital l/NN/l has/VBZ/has to/TO/to be/VB/be 1/CD/1 plus/CC/plus l/NNP/l. now/RB/now /,/, what/WDT/what can/MD/can we/PRP/we do/VBP/do ?/./? well/RB/well /,/, if/IN/if i/PRP/i pick/VBP/pick a/DT/a subset/NN/subset of/IN/of this/DT/this size/NN/size i/PRP/i can/MD/can not/RB/not do/VB/do it/PRP/it only/RB/only with/IN/with copies/NNS/copies of/IN/of x/NN/x 1/CD/1 right/NN/right there/RB/there are/VBP/are l/JJ/l of/IN/of them/NNP/them. so/RB/so /,/, the/DT/the total/JJ/total size/NN/size is/VBZ/is is/VBZ/is l/NNP/l. so/RB/so /,/, i/PRP/i can/MD/can not/RB/not pick/VB/pick something/NN/something of/IN/of this/DT/this this/DT/this size/NN/size this/DT/this is/VBZ/is my/PRP$/my set/NN/set s/NNS/s using/VBG/using only/RB/only x/NN/x one/NNP/one. so/RB/so /,/, i/PRP/i will/MD/will have/VB/have to/TO/to pick/VB/pick at/IN/at least/JJS/least 1/CD/1 copy/NN/copy of/IN/of x/NN/x 2/CD/2. so/RB/so /,/, if/IN/if i/PRP/i r/VBP/r pick/JJ/pick 1/CD/1 copy/NN/copy of/IN/of x/NN/x 2/CD/2 then/RB/then this/DT/this l/NN/l goes/VBZ/goes out/RP/out of/IN/of the/DT/the picture/NN/picture and/CC/and now/RB/now well/RB/well /,/, i/PRP/i have/VBP/have 1/CD/1 and/CC/and the/DT/the only/JJ/only way/NN/way to/TO/to fill/VB/fill this/DT/this is/VBZ/is is/VBZ/is to/TO/to pick/VB/pick 1/CD/1 copy/NN/copy of/IN/of x/NN/x 1/CD/1. so/RB/so /,/, if/IN/if my/PRP$/my sizes/NNS/sizes are/VBP/are 1/CD/1 and/CC/and l/NN/l and/CC/and capital/NN/capital l/NN/l is/VBZ/is 1/CD/1 plus/RB/plus small/JJ/small l/NN/l then/RB/then the/DT/the only/JJ/only way/NN/way to/TO/to pick/VB/pick a/DT/a subset/NN/subset from/IN/from this/DT/this set/NNP/set. so/RB/so /,/, that/IN/that the/DT/the size/NN/size is/VBZ/is 1/CD/1 plus/RB/plus l/JJ/l is/VBZ/is to/TO/to pick/VB/pick 1/CD/1 copy/NN/copy of/IN/of x/NN/x 1/CD/1 and/CC/and 1/CD/1 copy/NN/copy of/IN/of x/NN/x 2/CD/2 there/EX/there is/VBZ/is no/DT/no other/JJ/other way/NN/way we/PRP/we can/MD/can do/VB/do this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see if/IN/if we/PRP/we can/MD/can generalize/VB/generalize this/DT/this right/NNP/right. so/RB/so /,/, supposing/VBG/supposing we/PRP/we have/VBP/have 3/CD/3 elements/NNS/elements x/NN/x 1/CD/1 x/NN/x 2/CD/2 and/CC/and x/NN/x 3/CD/3 this/DT/this well/NN/well we/PRP/we will/MD/will still/RB/still retain/VB/retain it/PRP/it as/IN/as l/NN/l what/WP/what do/VBP/do we/PRP/we think/VBP/think ?/./? what/WP/what do/VBP/do you/PRP/you think/VB/think we/PRP/we should/MD/should put/VB/put here/RB/here well/RB/well /,/, there/EX/there are/VBP/are l/NN/l elements/NNS/elements here/RB/here each/DT/each of/IN/of size/NN/size l/NN/l that/WDT/that gives/VBZ/gives l/NN/l squared/NNP/squared. so/RB/so /,/, may/MD/may be/VB/be l/NN/l squared/VBN/squared is/VBZ/is a/DT/a good/JJ/good /,/, good/JJ/good /,/, good/JJ/good bound/NN/bound here/NNP/here. of/IN/of course/NN/course /,/, anything/NN/anything larger/JJR/larger than/IN/than l/NN/l also/RB/also will/MD/will work/VB/work here/RB/here you/PRP/you can/MD/can check/VB/check that/IN/that again/RB/again anything/NN/anything larger/NN/larger than/IN/than l/NN/l will/MD/will also/RB/also work/VB/work similarly/RB/similarly something/NN/something larger/JJR/larger than/IN/than l/NN/l squared/VBN/squared may/MD/may also/RB/also work/NNP/work. so/RB/so /,/, let/VB/let us/PRP/us check/VB/check this/NNP/this. so/RB/so /,/, l/NN/l is/VBZ/is nothing/NN/nothing but/CC/but 1/CD/1 plus/NNS/plus l/NN/l plus/CC/plus l/NN/l squared/VBD/squared these/DT/these are/VBP/are this/DT/this is/VBZ/is when/WRB/when the/DT/the set/NN/set has/VBZ/has s/NNS/s 3/CD/3 elements/NNP/elements. now/RB/now /,/, if/IN/if i/PRP/i just/RB/just took/VBD/took x/NN/x x/NN/x 1/CD/1 and/CC/and x/NN/x 2/CD/2 the/DT/the total/JJ/total size/NN/size i/PRP/i will/MD/will get/VB/get is/VBZ/is l/NN/l times/NNS/times l/VBP/l which/WDT/which is/VBZ/is l/NN/l squared/VBN/squared plus/NN/plus 1/CD/1 times/NNS/times l/NN/l which/WDT/which is/VBZ/is l/NN/l right/NNP/right. i/PRP/i can/MD/can only/RB/only get/VB/get l/NN/l plus/CC/plus l/NN/l squared/VBD/squared which/WDT/which means/NNS/means there/RB/there must/MD/must exist/VB/exist at/IN/at least/JJS/least 1/CD/1 copy/NN/copy of/IN/of x/NN/x 3/CD/3 in/IN/in in/IN/in capital/NN/capital l/NNP/l. so/RB/so /,/, there/EX/there must/MD/must be/VB/be exit/VBN/exit exist/NN/exist 1/CD/1 copy/NN/copy of/IN/of x/NN/x 3/CD/3. there/EX/there can/MD/can not/RB/not exist/VB/exist 2/CD/2 copies/NNS/copies of/IN/of x/NN/x 3/CD/3 that/WDT/that i/PRP/i can/MD/can make/VB/make sure/JJ/sure by/IN/by stating/NN/stating that/IN/that 1/CD/1 plus/CC/plus l/NN/l plus/CC/plus l/NN/l squared/VBD/squared would/MD/would be/VB/be less/RBR/less less/JJR/less than/IN/than 2/CD/2 l/NN/l squared/VBD/squared and/CC/and for/IN/for reasonable/JJ/reasonable l/NN/l ?/./? s/NNS/s this/DT/this is/VBZ/is this/DT/this is/VBZ/is satisfied/NNP/satisfied. so/RB/so /,/, i/PRP/i can/MD/can just/RB/just pick/VB/pick i/PRP/i i/PRP/i can/MD/can do/VB/do this/DT/this otherwise/NN/otherwise you/PRP/you pick/VBP/pick l/JJ/l prime/NN/prime to/TO/to be/VB/be maximum/NN/maximum of/IN/of this/DT/this l/NN/l and/CC/and some/DT/some other/JJ/other constants/NNP/constants. so/IN/so /,/, that/IN/that this/DT/this is/VBZ/is satisfied/VBN/satisfied we/PRP/we will/MD/will just/RB/just assume/VB/assume that/IN/that this/DT/this is/VBZ/is satisfied/NNP/satisfied. so/RB/so /,/, i/PRP/i have/VBP/have to/TO/to pick/VB/pick 1/CD/1 copy/NN/copy of/IN/of x/NN/x 3/CD/3 now/RB/now we/PRP/we are/VBP/are down/RB/down to/TO/to 2/CD/2 elements/NNS/elements 1/CD/1 of/IN/of size/NN/size 1/CD/1 the/DT/the other/JJ/other of/IN/of size/NN/size l/NN/l and/CC/and it/PRP/it is/VBZ/is the/DT/the same/JJ/same argument/NNP/argument. the/DT/the only/JJ/only way/NN/way i/PRP/i can/MD/can i/VB/i can/MD/can do/VB/do this/DT/this is/VBZ/is to/TO/to pick/VB/pick 1/CD/1 element/NN/element of/IN/of size/NN/size l/NN/l and/CC/and the/DT/the other/JJ/other element/NN/element of/IN/of size/NN/size one/NNP/one. so/RB/so /,/, to/TO/to pick/VB/pick an/DT/an to/TO/to pick/VB/pick a/DT/a subset/NN/subset of/IN/of size/NN/size capital/NN/capital l/NN/l the/DT/the only/JJ/only the/DT/the only/JJ/only way/NN/way to/TO/to do/VB/do it/PRP/it is/VBZ/is to/TO/to pick/VB/pick 1/CD/1 element/NN/element of/IN/of size/NN/size l/NN/l squared/VBD/squared 1/CD/1 of/IN/of size/NN/size l/NN/l and/CC/and 1/CD/1 of/IN/of size/NN/size 1/CD/1 which/WDT/which is/VBZ/is 1/CD/1 copy/NN/copy of/IN/of each/DT/each element/NN/element and/NNP/and. in/IN/in fact/NN/fact /,/, a/DT/a straightforward/NN/straightforward generalization/NN/generalization of/IN/of this/DT/this actually/RB/actually works/NNP/works. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 36/CD/36 /CD/) so/RB/so /,/, i/PRP/i have/VBP/have i/PRP/i have/VBP/have k/NN/k elements/NNS/elements i/PRP/i pick/VBP/pick the/DT/the size/NN/size of/IN/of xi/NN/xi to/TO/to be/VB/be l/JJ/l to/TO/to the/DT/the i/PRP/i and/CC/and capital/NN/capital l/NN/l to/TO/to be/VB/be 1/CD/1 plus/CC/plus l/NN/l and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1. actually/RB/actually this/DT/this is/VBZ/is l/NN/l to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 x/NN/x 1/CD/1 was/VBD/was 1/CD/1 x/NN/x 2/CD/2 was/VBD/was l/JJ/l and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, size/NN/size of/IN/of xi/NN/xi is/VBZ/is l/NN/l to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1 and/CC/and capital/NN/capital l/NN/l is/VBZ/is this/NNP/this. then/RB/then the/DT/the only/JJ/only way/NN/way to/TO/to pick/VB/pick something/NN/something of/IN/of this/DT/this size/NN/size is/VBZ/is to/TO/to pick/VB/pick 1/CD/1 element/NN/element of/IN/of each/DT/each kind/NN/kind either/DT/either you/PRP/you can/MD/can not/RB/not do/VB/do anyway/NNP/anyway. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this got/NN/got to/TO/to do/VB/do ?/./? what/WP/what is/VBZ/is this/DT/this got/NN/got to/TO/to do/VB/do with/IN/with our/PRP$/our set/NN/set cover/NN/cover ?/./? so/RB/so /,/, before/IN/before that/DT/that it/PRP/it is/VBZ/is just/RB/just easier/JJR/easier to/TO/to prove/VB/prove that/IN/that exactly/RB/exactly 1/CD/1 copy/NN/copy of/IN/of the/DT/the last/JJ/last element/NN/element has/VBZ/has to/TO/to be/VB/be for/IN/for that/DT/that we/PRP/we will/MD/will assume/VB/assume that/IN/that l/NN/l is/VBZ/is less/JJR/less than/IN/than twice/NN/twice l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1. so/RB/so /,/, for/IN/for large/JJ/large enough/RB/enough l/JJ/l this/DT/this is/VBZ/is satisfied/NNP/satisfied. so/RB/so /,/, this/DT/this l/NN/l we/PRP/we can/MD/can take/VB/take to/TO/to be/VB/be the/DT/the maximum/NN/maximum of/IN/of the/DT/the initial/JJ/initial l/NN/l that/WDT/that was/VBD/was given/VBN/given and/CC/and an/DT/an l/NN/l which/WDT/which satisfies/NNS/satisfies this/NNP/this. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this got/NN/got to/TO/to do/VB/do with/IN/with our/PRP$/our with/IN/with exact/JJ/exact cover/NN/cover ?/./? so/RB/so /,/, let/VB/let us/PRP/us let/VB/let us/PRP/us come/VB/come back/RB/back and/CC/and do/VBP/do this/NNP/this. so/RB/so /,/, exact/JJ/exact cover/NN/cover the/DT/the input/NN/input is/VBZ/is a/DT/a set/NN/set t/NN/t and/CC/and i/PRP/i have/VBP/have subsets/NNS/subsets a/DT/a 1/CD/1 a/DT/a 2/CD/2 so/RB/so on/IN/on up/IN/up to/TO/to an/DT/an these/DT/these are/VBP/are the/DT/the subsets/NNP/subsets. now/RB/now /,/, i/PRP/i will/MD/will choose/VB/choose l/NN/l to/TO/to be/VB/be the/DT/the maximum/NN/maximum number/NN/number of/IN/of times/NNS/times an/DT/an element/NN/element occurs/VBZ/occurs in/IN/in this/DT/this collection/NNP/collection. so/RB/so /,/, is/VBZ/is the/DT/the maximum/NN/maximum number/NN/number of/IN/of times/NNS/times that/WDT/that an/DT/an element/NN/element occurs/VBZ/occurs in/IN/in this/DT/this collection/NN/collection the/DT/the number/NN/number of/IN/of the/DT/the number/NN/number of/IN/of ele/NN/ele the/DT/the number/NN/number of/IN/of elements/NNS/elements is/VBZ/is nothing/VBG/nothing but/CC/but size/NN/size of/IN/of size/NN/size of/IN/of t/NN/t which/WDT/which is/VBZ/is n/VBN/n which/WDT/which was/VBD/was k/VBP/k for/IN/for us/PRP/us there/EX/there were/VBD/were k/NN/k distinct/NN/distinct elements/NNS/elements here/RB/here there/RB/there are/VBP/are n/VBN/n distinct/JJ/distinct elements/NNS/elements right/NNP/right. and/CC/and with/IN/with each/DT/each collection/NN/collection there/RB/there are/VBP/are a/DT/a few/JJ/few elements/NNS/elements and/CC/and l/NN/l is/VBZ/is just/RB/just the/DT/the number/NN/number of/IN/of maximum/NN/maximum number/NN/number of/IN/of times/NNS/times an/DT/an element/NN/element occurs/VBZ/occurs in/IN/in this/DT/this collection/NN/collection good/NNP/good. so/RB/so /,/, then/RB/then how/WRB/how do/VBP/do we/PRP/we fix/VB/fix the/DT/the sizes/NNS/sizes ?/./? so/RB/so /,/, the/DT/the question/NN/question is/VBZ/is how/WRB/how do/VBP/do we/PRP/we fix/VB/fix sizes/NNS/sizes of/IN/of each/DT/each of/IN/of these/DT/these these/DT/these each/DT/each subsets/NNP/subsets. so/RB/so /,/, what/WDT/what we/PRP/we do/VBP/do is/VBZ/is we/PRP/we fix/VBP/fix the/DT/the size/NN/size of/IN/of these/DT/these elements/NNS/elements first/RB/first i/PRP/i mean/VBP/mean fix/JJ/fix the/DT/the size/NN/size of/IN/of elements/NNS/elements like/IN/like this/DT/this size/NN/size of/IN/of each/DT/each element/NN/element is/VBZ/is l/NN/l to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, we/PRP/we think/VBP/think of/IN/of each/DT/each element/NN/element of/IN/of t/NN/t and/CC/and for/IN/for each/DT/each element/NN/element of/IN/of t/NN/t for/IN/for the/DT/the ith/NN/ith element/NN/element i/PRP/i pick/VBP/pick the/DT/the size/NN/size as/IN/as this/DT/this what/WP/what is/VBZ/is the/DT/the size/NN/size of/IN/of a/DT/a subset/NN/subset this/DT/this is/VBZ/is what/WP/what we/PRP/we really/RB/really want/VBP/want which/WDT/which is/VBZ/is going/VBG/going to/TO/to be/VB/be our/PRP$/our input/NNP/input. the/DT/the size/NN/size of/IN/of the/DT/the subset/NN/subset is/VBZ/is just/RB/just the/DT/the sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of these/DT/these elements/NNS/elements right/NNP/right. so/RB/so /,/, subset/JJ/subset sum/NN/sum so/IN/so we/PRP/we want/VBP/want to/TO/to transform/NN/transform this/DT/this to/TO/to subset/VB/subset sum/NNP/sum. so/RB/so /,/, we/PRP/we need/VBP/need a/DT/a set/NN/set s/VBZ/s and/CC/and an/DT/an element/NN/element ei/NN/ei or/CC/or each/DT/each subset/NN/subset ki/NN/ki for/IN/for each/DT/each of/IN/of these/DT/these subsets/NNS/subsets there/RB/there is/VBZ/is an/DT/an element/NN/element ki/NNP/ki. now/RB/now /,/, the/DT/the size/NN/size of/IN/of ei/NN/ei is/VBZ/is nothing/NN/nothing but/CC/but the/DT/the size/NN/size sum/NN/sum of/IN/of the/DT/the sizes/NNP/sizes. so/RB/so /,/, we/PRP/we will/MD/will think/VB/think of/IN/of first/JJ/first fixing/NN/fixing sizes/NNS/sizes of/IN/of elements/NNS/elements of/IN/of t/NN/t that/IN/that is/VBZ/is fixed/VBN/fixed like/IN/like this/NNP/this. the/DT/the size/NN/size of/IN/of the/DT/the ith/NN/ith element/NN/element is/VBZ/is just/RB/just l/JJ/l to/TO/to the/DT/the i/PRP/i minus/VBZ/minus 1/CD/1. so/RB/so /,/, now/RB/now /,/, i/PRP/i can/MD/can fix/VB/fix size/NN/size of/IN/of ei/NN/ei for/IN/for each/DT/each x/NN/x in/IN/in ai/NN/ai remember/NN/remember that/WDT/that x/NN/x is/VBZ/is an/DT/an element/NN/element of/IN/of t/NN/t i/PRP/i just/RB/just add/VBP/add the/DT/the size/NN/size of/IN/of x/NNP/x. so/RB/so /,/, if/IN/if it/PRP/it is/VBZ/is the/DT/the let/NN/let us/PRP/us say/VBP/say jth/NN/jth element/NN/element of/IN/of t/NN/t its/PRP$/its size/NN/size is/VBZ/is l/NN/l to/TO/to the/DT/the j/NN/j minus/NN/minus 1/CD/1 right/NN/right if/IN/if it/PRP/it is/VBZ/is jth/JJ/jth element/NN/element in/IN/in t/NN/t in/IN/in t/NN/t it/PRP/it is/VBZ/is nothing/VBG/nothing the/DT/the size/NN/size is/VBZ/is l/NN/l to/TO/to the/DT/the j/NN/j minus/NN/minus 1/CD/1 l/NNP/l. then/RB/then is/VBZ/is the/DT/the other/JJ/other thing/NN/thing or/CC/or b/NN/b is/VBZ/is nothing/NN/nothing but/CC/but our/PRP$/our l/NN/l which/WDT/which is/VBZ/is which/WDT/which is/VBZ/is 1/CD/1 plus/RB/plus l/JJ/l plus/NN/plus l/NN/l squared/VBD/squared and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to l/NN/l to/TO/to the/DT/the n/NN/n minus/NN/minus 1/CD/1. now/RB/now /,/, if/IN/if this/DT/this set/NN/set p/NN/p has/VBZ/has an/DT/an exact/JJ/exact cover/NN/cover supposing/VBG/supposing this/DT/this set/NN/set t/NN/t has/VBZ/has an/DT/an exact/JJ/exact cover/NN/cover then/RB/then if/IN/if i/PRP/i look/VBP/look at/IN/at those/DT/those subsets/NNS/subsets corresponding/VBG/corresponding to/TO/to those/DT/those subsets/NNP/subsets. i/PRP/i will/MD/will have/VB/have elements/NNS/elements in/IN/in the/DT/the subset/NN/subset sum/NN/sum if/IN/if i/PRP/i sum/VBP/sum sum/NN/sum up/IN/up these/DT/these sizes/NNS/sizes it/PRP/it will/MD/will be/VB/be nothing/NN/nothing but/CC/but 1/CD/1 plus/NNS/plus l/NN/l plus/CC/plus l/NN/l squared/VBD/squared plus/RB/plus so/RB/so on/IN/on up/IN/up to/TO/to l/NN/l to/TO/to the/DT/the n/NN/n minus/NN/minus 1/CD/1. and/CC/and for/IN/for the/DT/the reverse/NN/reverse direction/NN/direction pick/NN/pick any/DT/any subset/NN/subset of/IN/of size/NN/size 1/CD/1 plus/CC/plus l/NN/l plus/CC/plus and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to l/NN/l to/TO/to n/VB/n minus/NN/minus 1/CD/1 the/DT/the only/JJ/only way/NN/way to/TO/to get/VB/get something/NN/something of/IN/of this/DT/this size/NN/size is/VBZ/is to/TO/to pick/VB/pick 1/CD/1 copy/NN/copy of/IN/of each/DT/each element/NN/element this/DT/this this/DT/this ends/VBZ/ends a/DT/a discussion/NN/discussion of/IN/of of/IN/of sub/NN/sub set/NN/set sum/NNP/sum. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 24/CD/24 /CD/) so/RB/so /,/, let/VB/let me/PRP/me just/RB/just do/VBP/do 1/CD/1 small/JJ/small calculation/NN/calculation just/RB/just in/IN/in case/NN/case there/EX/there was/VBD/was a/DT/a confusion/NNP/confusion. so/RB/so /,/, what/WDT/what is/VBZ/is 1/CD/1 plus/RB/plus l/JJ/l and/CC/and so/RB/so on/IN/on up/IN/up to/TO/to l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 this/DT/this is/VBZ/is nothing/NN/nothing l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 up/IN/up on/IN/on l/NN/l minus/NN/minus 1/CD/1. so/RB/so /,/, instead/RB/instead of/IN/of summing/VBG/summing this/DT/this up/NN/up like/IN/like this/DT/this you/PRP/you can/MD/can you/PRP/you can/MD/can sort/VB/sort of/IN/of you/PRP/you can/MD/can calculate/VB/calculate it/PRP/it fairly/RB/fairly easily/NNP/easily. so/RB/so /,/, this/DT/this proves/NNS/proves that/NNP/that. so/RB/so /,/, calculating/VBG/calculating the/DT/the input/NN/input is/VBZ/is easy/JJ/easy and/CC/and so/RB/so this/DT/this proves/NNS/proves that/IN/that subset/NN/subset sum/NN/sum is/VBZ/is np/NN/np complete/JJ/complete i/NN/i think/VBP/think i/PRP/i mention/NN/mention that/WDT/that we/PRP/we need/VBP/need to/TO/to choose/VB/choose l/NNP/l. so/RB/so /,/, that/NNP/that. so/RB/so /,/, that/IN/that this/DT/this is/VBZ/is is/VBZ/is less/JJR/less than/IN/than twice/NN/twice l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1. so/RB/so /,/, that/IN/that can/MD/can also/RB/also be/VB/be done/NNP/done. in/IN/in fact/NN/fact /,/, you/PRP/you can/MD/can check/VB/check that/IN/that for/IN/for more/JJR/more most/JJS/most ones/NNS/ones this/DT/this will/MD/will be/VB/be true/NNP/true. so/RB/so /,/, just/RB/just check/VBP/check that/IN/that this/DT/this is/VBZ/is true/JJ/true because/IN/because we/PRP/we just/RB/just multiply/RB/multiply it/PRP/it out/RP/out you/PRP/you get/VBP/get that/IN/that l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 is/VBZ/is less/JJR/less than/IN/than twice/NN/twice i/PRP/i just/RB/just multiply/RB/multiply these/DT/these 2/CD/2 right/NNP/right. so/RB/so /,/, twice/NN/twice l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus twice/NN/twice l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 so/RB/so i/PRP/i will/MD/will need/VB/need l/NN/l thrice/NNP/thrice. so/RB/so /,/, i/PRP/i have/VBP/have 3/CD/3 sorry/NN/sorry i/PRP/i have/VBP/have 2/CD/2 l/NN/l to/TO/to the/DT/the k/NN/k minus/NN/minus 1/CD/1 minus/NN/minus 1/CD/1 should/MD/should be/VB/be less/RBR/less than/IN/than l/NN/l to/TO/to the/DT/the k/NNP/k. so/RB/so /,/, you/PRP/you can/MD/can check/VB/check that/IN/that for/IN/for reasonable/JJ/reasonable values/NNS/values of/IN/of k/NN/k this/DT/this is/VBZ/is true/JJ/true for/IN/for l/NN/l 3/CD/3 or/CC/or 4/CD/4 it/PRP/it is/VBZ/is true/JJ/true i/NN/i can/MD/can just/RB/just take/VB/take some/DT/some l/NN/l which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than that/NNP/that. so/RB/so /,/, that/IN/that was/VBD/was 1/CD/1 thing/NN/thing which/WDT/which was/VBD/was which/WDT/which i/PRP/i am/VBP/am not/RB/not completely/RB/completely cover/RB/cover it/PRP/it whose/WP$/whose that/IN/that subset/NN/subset sum/NN/sum is/VBZ/is is/VBZ/is np/VBN/np complete/-NONE-/complete. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 55/CD/55 /CD/) and/CC/and the/DT/the last/JJ/last problem/NN/problem we/PRP/we have/VBP/have in/IN/in this/DT/this series/NN/series is/VBZ/is called/VBN/called partition/NN/partition it/PRP/it somewhat/RB/somewhat similar/JJ/similar to/TO/to to/TO/to subset/VB/subset sum/NNP/sum. so/RB/so /,/, the/DT/the input/NN/input so/RB/so it/PRP/it is/VBZ/is called/VBN/called partition/NN/partition the/DT/the input/NN/input is/VBZ/is a/DT/a set/NN/set t/NN/t sizes/VBZ/sizes t/NN/t 1/CD/1 t/NN/t 2/CD/2 up/IN/up to/TO/to tn/NNP/tn. the/DT/the question/NN/question we/PRP/we would/MD/would like/VB/like to/TO/to ask/VB/ask is/VBZ/is is/VBZ/is there/RB/there a/DT/a partition/NN/partition of/IN/of t/NN/t into/IN/into subsets/NNS/subsets let/VBP/let us/PRP/us say/VBP/say s/NNS/s and/CC/and t/NN/t minus/NN/minus s/NNP/s. so/RB/so /,/, partition/NN/partition of/IN/of t/NN/t into/IN/into 2/CD/2 parts/NNS/parts which/WDT/which is/VBZ/is s/VBZ/s and/CC/and t/NN/t minus/NN/minus s/NNS/s such/JJ/such that/IN/that size/NN/size of/IN/of s/NNS/s equal/JJ/equal size/NN/size of/IN/of a/DT/a t/NN/t minus/NN/minus s/NNP/s. so/RB/so /,/, this/DT/this should/MD/should be/VB/be exactly/RB/exactly half/DT/half size/NN/size of/IN/of t/NNP/t. so/RB/so /,/, can/MD/can you/PRP/you partition/VB/partition it/PRP/it in/IN/in 2/CD/2 parts/NNS/parts both/DT/both of/IN/of which/WDT/which have/VBP/have exactly/RB/exactly equal/JJ/equal size/NN/size again/RB/again the/DT/the size/NN/size of/IN/of the/DT/the subset/NN/subset is/VBZ/is nothing/NN/nothing but/CC/but sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of the/DT/the elements/NNS/elements in/IN/in this/DT/this subset/NNP/subset. so/RB/so /,/, can/MD/can you/PRP/you partition/VB/partition these/DT/these into/IN/into 2/CD/2 parts/NNS/parts so/RB/so that/IN/that size/NN/size of/IN/of both/DT/both are/VBP/are equal/NNP/equal. firstly/RB/firstly /,/, the/DT/the total/JJ/total size/NN/size must/MD/must be/VB/be even/RB/even if/IN/if let/NN/let us/PRP/us say/VBP/say all/DT/all sizes/NNS/sizes are/VBP/are integers/NNS/integers positive/JJ/positive integers/NNS/integers then/RB/then the/DT/the sizes/NNS/sizes for/IN/for instance/NN/instance it/PRP/it must/MD/must be/NNP/be. so/RB/so /,/, let/VB/let us/PRP/us assume/VB/assume that/IN/that these/DT/these things/NNS/things are/VBP/are true/NNP/true. now/RB/now /,/, this/DT/this problem/NN/problem is/VBZ/is also/RB/also in/IN/in np/NN/np clearly/RB/clearly because/IN/because if/IN/if the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes then/RB/then the/DT/the proof/NN/proof that/IN/that the/DT/the prover/NN/prover gives/VBZ/gives the/DT/the verifier/NN/verifier is/VBZ/is just/RB/just this/DT/this partition/NN/partition for/IN/for each/DT/each element/NN/element he/PRP/he tells/VBZ/tells which/WDT/which part/NN/part it/PRP/it belongs/VBZ/belongs right/NNP/right. now/RB/now /,/, a/DT/a verifier/NN/verifier takes/VBZ/takes this/DT/this partition/NN/partition he/PRP/he verifies/VBZ/verifies that/IN/that the/DT/the sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of elements/NNS/elements in/IN/in the/DT/the first/JJ/first partition/NN/partition exactly/RB/exactly equals/VBZ/equals sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of the/DT/the elements/NNS/elements in/IN/in the/DT/the second/JJ/second partition/NNP/partition. so/RB/so /,/, this/DT/this problem/NN/problem is/VBZ/is in/IN/in np/NN/np we/PRP/we would/MD/would like/VB/like to/TO/to prove/VB/prove that/IN/that this/DT/this is/VBZ/is this/DT/this problem/NN/problem is/VBZ/is np/NN/np hard/RB/hard and/CC/and for/IN/for most/JJS/most problems/NNS/problems where/WRB/where sizes/NNS/sizes are/VBP/are involved/VBN/involved we/PRP/we would/MD/would like/VB/like to/TO/to use/VB/use subset/NN/subset sum/NNP/sum. so/RB/so /,/, what/WDT/what we/PRP/we show/VBP/show is/VBZ/is if/IN/if there/EX/there is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for partition/NN/partition there/EX/there is/VBZ/is 1/CD/1 for/IN/for subset/NN/subset sum/NN/sum that/WDT/that is/VBZ/is what/WP/what we/PRP/we do/NNP/do. so/RB/so /,/, let/VB/let us/PRP/us see/NNP/see. so/RB/so /,/, there/EX/there is/VBZ/is an/DT/an algorithm/NN/algorithm for/IN/for partition/NN/partition for/IN/for subset/NN/subset sum/NN/sum the/DT/the input/NN/input is/VBZ/is are/VBP/are some/DT/some sizes/NNS/sizes s/VBZ/s 1/CD/1 to/TO/to sn/VB/sn and/CC/and i/PRP/i have/VBP/have b/NN/b i/PRP/i want/VBP/want to/TO/to know/VB/know if/IN/if there/EX/there is/VBZ/is a/DT/a subset/NN/subset of/IN/of size/NN/size b/NNP/b. so/RB/so /,/, here/RB/here is/VBZ/is partition/NN/partition here/RB/here i/PRP/i want/VBP/want to/TO/to know/VB/know if/IN/if there/EX/there is/VBZ/is a/DT/a partition/NN/partition into/IN/into 2/CD/2 equal/JJ/equal parts/NNS/parts what/WP/what is/VBZ/is this/DT/this partition/NN/partition say/VBP/say this/DT/this means/NNS/means that/WDT/that there/EX/there must/MD/must be/VB/be one/CD/one of/IN/of size/NN/size b/NN/b and/CC/and 1/CD/1 of/IN/of size/NNP/size. let/NN/let us/PRP/us say/VBP/say w/NN/w minus/NN/minus b/NN/b where/WRB/where w/NN/w is/VBZ/is nothing/NN/nothing but/CC/but sum/NN/sum of/IN/of the/DT/the sizes/NNP/sizes. so/RB/so /,/, this/DT/this asks/VBZ/asks if/IN/if there/EX/there is/VBZ/is a/DT/a partition/NN/partition of/IN/of this/DT/this form/NN/form this/DT/this asks/VBZ/asks if/IN/if there/EX/there is/VBZ/is a/DT/a partition/NN/partition where/WRB/where they/PRP/they both/DT/both equal/NNP/equal. so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we sort/VB/sort of/IN/of use/NN/use this/DT/this to/TO/to solve/VB/solve subset/NN/subset sum/NN/sum ?/./? well/RB/well /,/, here/RB/here is/VBZ/is b/NN/b what/WP/what i/PRP/i am/VBP/am looking/VBG/looking for/IN/for is/VBZ/is b/NN/b and/CC/and let/VB/let us/PRP/us say/VB/say w/NN/w minus/NN/minus b/NN/b what/WP/what i/PRP/i do/VBP/do is/VBZ/is i/PRP/i add/VBP/add say/VBP/say 2/CD/2 extra/JJ/extra elements/NNS/elements 1/CD/1 of/IN/of size/NN/size l/NN/l 1/CD/1 1/CD/1 of/IN/of size/NN/size l/NN/l 2/CD/2. so/RB/so /,/, that/IN/that l/NN/l 1/CD/1 plus/CC/plus b/NN/b equals/NNS/equals l/VBP/l 2/CD/2 plus/NNS/plus w/VBP/w minus/NN/minus b/NNP/b. supposing/NN/supposing i/PRP/i do/VBP/do this/NNP/this. so/RB/so /,/, i/PRP/i take/VBP/take this/DT/this input/NN/input /,/, input/NN/input for/IN/for subset/NN/subset sum/NN/sum i/PRP/i add/VBP/add 2/CD/2 more/JJR/more elements/NNS/elements 1/CD/1 of/IN/of size/NN/size l/NN/l 1/CD/1 and/CC/and 1/CD/1 of/IN/of size/NN/size l/NN/l 2/CD/2 right/NNP/right. now/RB/now /,/, i/PRP/i ask/VBP/ask is/VBZ/is there/RB/there a/DT/a part/NN/part and/CC/and l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 satisfy/NN/satisfy this/DT/this l/NN/l 1/CD/1 plus/CC/plus b/NN/b exactly/RB/exactly equals/VBZ/equals l/NN/l 2/CD/2 plus/NN/plus w/NN/w minus/NN/minus b/NNP/b. now/RB/now /,/, i/PRP/i ask/VBP/ask is/VBZ/is there/RB/there a/DT/a partition/NN/partition into/IN/into 2/CD/2 equal/JJ/equal parts/NNP/parts. so/RB/so /,/, i/PRP/i look/VBP/look at/IN/at this/DT/this supposing/NN/supposing there/RB/there is/VBZ/is a/DT/a partition/NN/partition into/IN/into 2/CD/2 equal/JJ/equal parts/NNS/parts supposing/NNP/supposing. so/RB/so /,/, supposing/VBG/supposing l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 land/NN/land up/IN/up in/IN/in different/JJ/different partitions/NNS/partitions you/PRP/you partition/NN/partition into/IN/into 2/CD/2 eq/NN/eq 2/CD/2 equal/JJ/equal parts/NNS/parts if/IN/if l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 are/VBP/are in/IN/in different/JJ/different partitions/NNP/partitions. then/RB/then there/RB/there is/VBZ/is a/DT/a yes/NNS/yes there/RB/there is/VBZ/is an/DT/an answer/NN/answer to/TO/to the/DT/the subset/NN/subset sum/NN/sum problem/NN/problem right/RB/right there/EX/there is/VBZ/is a/DT/a yes/NNS/yes answer/NN/answer to/TO/to the/DT/the subset/NN/subset sum/NN/sum problem/NNP/problem. so/RB/so /,/, if/IN/if there/EX/there is/VBZ/is a/DT/a yes/NNS/yes answer/NN/answer to/TO/to the/DT/the subset/NN/subset sum/NN/sum problem/NN/problem then/RB/then there/RB/there is/VBZ/is clearly/RB/clearly an/DT/an answer/NN/answer to/TO/to the/DT/the partition/NN/partition right/NNP/right. i/PRP/i take/VBP/take an/DT/an answer/NN/answer to/TO/to the/DT/the subset/NN/subset sum/NN/sum problem/NN/problem put/VBD/put l/NN/l 1/CD/1 along/IN/along with/IN/with b/NN/b and/CC/and w/NN/w minus/NN/minus l/NN/l 2/CD/2 in/IN/in the/DT/the sorry/NN/sorry an/DT/an l/NN/l 2/CD/2 along/IN/along with/IN/with w/NN/w minus/NN/minus b/NN/b then/RB/then i/PRP/i know/VBP/know there/RB/there is/VBZ/is an/DT/an answer/NNP/answer. now/RB/now /,/, if/IN/if i/PRP/i look/VBP/look at/IN/at an/DT/an answer/NN/answer for/IN/for partition/NN/partition can/MD/can i/VB/i construct/NN/construct an/DT/an answer/NN/answer for/IN/for subset/NN/subset sum/NNP/sum. well/RB/well i/PRP/i can/MD/can if/IN/if l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 land/NN/land up/IN/up in/IN/in different/JJ/different partitions/NNS/partitions can/MD/can i/VB/i make/VB/make can/MD/can i/VB/i force/NN/force l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 to/TO/to land/VB/land up/RP/up in/IN/in different/JJ/different partitions/NNS/partitions the/DT/the answer/NN/answer is/VBZ/is yes/NNS/yes just/RB/just take/VBP/take l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 large/JJ/large enough/NNP/enough. for/IN/for instance/NN/instance if/IN/if i/PRP/i take/VBP/take l/NN/l 1/CD/1 let/NN/let us/PRP/us say/VBP/say equal/JJ/equal to/TO/to twice/NN/twice w/NN/w if/IN/if i/PRP/i take/VBP/take l/NN/l 1/CD/1 to/TO/to be/VB/be twice/NN/twice w/NN/w then/RB/then you/PRP/you can/MD/can check/VB/check that/IN/that l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 will/MD/will land/VB/land up/RP/up in/IN/in different/JJ/different partitions/NNP/partitions. because/IN/because if/IN/if l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 both/DT/both of/IN/of them/PRP/them land/VBP/land up/RP/up in/IN/in the/DT/the same/JJ/same partition/NN/partition on/IN/on the/DT/the other/JJ/other side/NN/side the/DT/the maximum/NN/maximum size/NN/size that/WDT/that can/MD/can happen/VB/happen is/VBZ/is w/NN/w right/RB/right which/WDT/which is/VBZ/is the/DT/the sum/NN/sum of/IN/of all/DT/all sizes/NNS/sizes the/DT/the sum/NN/sum of/IN/of the/DT/the sizes/NNS/sizes of/IN/of all/DT/all elements/NNS/elements in/IN/in the/DT/the set/NN/set set/VBD/set s/NNP/s. so/RB/so /,/, if/IN/if i/PRP/i take/VBP/take l/NN/l 1/CD/1 to/TO/to be/VB/be twice/NN/twice w/NN/w then/RB/then l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 this/DT/this is/VBZ/is elements/NNS/elements which/WDT/which have/VBP/have sizes/VBZ/sizes l/NN/l 1/CD/1 and/CC/and l/NN/l 2/CD/2 must/MD/must land/VB/land land/NN/land up/IN/up in/IN/in 2/CD/2 different/JJ/different 2/CD/2 different/JJ/different partitions/NNP/partitions. and/CC/and the/DT/the rest/NN/rest of/IN/of the/DT/the elements/NNS/elements when/WRB/when i/PRP/i look/VBP/look at/IN/at the/DT/the rest/NN/rest of/IN/of the/DT/the elements/NNS/elements the/DT/the ones/NNS/ones with/IN/with l/NN/l 1/CD/1 must/MD/must sum/VB/sum to/TO/to be/VB/be b/NN/b the/DT/the ones/NNS/ones in/IN/in l/NN/l 2/CD/2 must/MD/must sum/VB/sum to/TO/to w/VB/w minus/NN/minus b/NN/b and/CC/and this/DT/this is/VBZ/is the/DT/the answer/NN/answer that/IN/that we/PRP/we are/VBP/are looking/VBG/looking for/NNP/for. so/RB/so /,/, this/DT/this is/VBZ/is then/RB/then a/DT/a reduction/NN/reduction that/WDT/that shows/VBZ/shows that/IN/that partition/NN/partition is/VBZ/is is/VBZ/is np/VBN/np complete/-NONE-/complete. so/RB/so /,/, this/DT/this let/NN/let me/PRP/me quickly/RB/quickly revise/VBP/revise what/WP/what we/PRP/we have/VBP/have done/NNP/done. so/RB/so /,/, far/RB/far i/PRP/i have/VBP/have not/RB/not written/VBN/written a/DT/a formal/JJ/formal proof/NN/proof that/WDT/that partition/NN/partition is/VBZ/is np/NN/np complete/JJ/complete /,/, but/CC/but i/PRP/i hope/VBP/hope that/IN/that you/PRP/you can/MD/can fill/VB/fill in/IN/in the/DT/the detail/NNP/detail. so/RB/so /,/, let/VB/let us/PRP/us revise/VB/revise what/WP/what we/PRP/we have/VBP/have done/VBN/done so/RB/so far/NNP/far. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 37/CD/37 /:/: 05/CD/05 /CD/) so/RB/so /,/, cook/NN/cook told/VBD/told us/PRP/us that/IN/that sat/JJ/sat is/VBZ/is np/NN/np complete/JJ/complete and/CC/and then/RB/then we/PRP/we use/VBP/use this/DT/this to/TO/to prove/VB/prove that/IN/that vc/NN/vc is/VBZ/is np/NN/np complete/JJ/complete then/RB/then we/PRP/we showed/VBD/showed that/IN/that 3/CD/3 vc/NN/vc is/VBZ/is np/NN/np complete/NNP/complete. getting/NN/getting from/IN/from sat/JJ/sat to/TO/to vc/VB/vc we/PRP/we first/RB/first showed/VBD/showed that/IN/that clique/NN/clique is/VBZ/is np/NN/np complete/JJ/complete and/CC/and then/RB/then independent/JJ/independent set/NN/set and/CC/and then/RB/then vc/NNP/vc. so/RB/so /,/, it/PRP/it it/PRP/it is/VBZ/is not/RB/not a/DT/a direct/JJ/direct sort/NN/sort of/IN/of reduction/NN/reduction we/PRP/we first/RB/first showed/VBD/showed that/IN/that clique/NN/clique was/VBD/was np/NN/np complete/NNP/complete. then/RB/then independence/NN/independence set/NN/set then/RB/then vertex/NN/vertex cover/NN/cover then/RB/then 3/CD/3 three/CD/three vc/NN/vc then/RB/then we/PRP/we showed/VBD/showed that/IN/that xc/NN/xc is/VBZ/is np/NN/np complete/JJ/complete then/RB/then we/PRP/we show/VBP/show subset/VBN/subset sum/NN/sum finally/RB/finally /,/, partition/NNP/partition. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now look/VBP/look at/IN/at a/DT/a problem/NN/problem that/WDT/that we/PRP/we sorted/VBD/sorted out/RP/out with/NNP/with. so/RB/so /,/, remember/NN/remember that/IN/that you/PRP/you are/VBP/are joined/VBN/joined a/DT/a company/NN/company and/CC/and your/PRP$/your boss/NN/boss had/VBD/had given/VBN/given a/DT/a problem/NN/problem where/WRB/where you/PRP/you are/VBP/are given/VBN/given jobs/NNS/jobs with/IN/with with/IN/with time/NN/time execution/NN/execution time/NN/time for/IN/for each/DT/each job/NN/job and/CC/and he/PRP/he wanted/VBD/wanted to/TO/to schedule/VB/schedule them/PRP/them on/IN/on let/NN/let us/PRP/us say/VBP/say 2/CD/2 processes/NNP/processes. so/RB/so /,/, that/IN/that the/DT/the time/NN/time that/IN/that last/JJ/last job/NN/job finishes/NNS/finishes was/VBD/was smallest/NNP/smallest. supposing/NN/supposing you/PRP/you could/MD/could have/VB/have supposing/VBG/supposing just/RB/just was/VBD/was possible/JJ/possible mean/JJ/mean you/PRP/you actually/RB/actually had/VBD/had an/DT/an efficient/JJ/efficient algorithm/NNP/algorithm. let/NN/let us/PRP/us say/VBP/say polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm for/IN/for this/DT/this problem/NN/problem then/RB/then you/PRP/you know/VBP/know observe/VBP/observe that/IN/that you/PRP/you can/MD/can solve/VB/solve partition/NNP/partition. the/DT/the reason/NN/reason is/VBZ/is you/PRP/you just/RB/just take/VBP/take take/NN/take the/DT/the input/NN/input for/IN/for partition/NNP/partition. the/DT/the same/JJ/same input/NN/input you/PRP/you feed/VBP/feed into/IN/into your/PRP$/your your/PRP$/your algorithm/NN/algorithm which/WDT/which did/VBD/did the/DT/the split/NN/split in/IN/in to/TO/to 2/CD/2 processors/NNS/processors the/DT/the sizes/NNS/sizes are/VBP/are just/RB/just given/VBN/given as/IN/as running/NN/running time/NNP/time. now/RB/now /,/, you/PRP/you look/VBP/look at/IN/at the/DT/the partition/NN/partition that/IN/that your/PRP$/your algorithm/NN/algorithm proof/IN/proof is/VBZ/is gives/NNS/gives you/PRP/you back/VBP/back if/IN/if they/PRP/they are/VBP/are both/DT/both of/IN/of the/DT/the same/JJ/same size/NN/size then/RB/then there/RB/there exist/VBP/exist a/DT/a partition/NN/partition of/IN/of the/DT/the original/JJ/original set/NN/set into/IN/into 2/CD/2 equal/JJ/equal halves/NNS/halves right/RB/right where/WRB/where the/DT/the sizes/NNS/sizes are/VBP/are equal/JJ/equal if/IN/if not/RB/not there/RB/there is/VBZ/is not/NNP/not. so/RB/so /,/, the/DT/the problem/NN/problem that/IN/that you/PRP/you solve/VBP/solve is/VBZ/is more/RBR/more general/JJ/general than/IN/than partition/NNP/partition. so/RB/so /,/, if/IN/if you/PRP/you could/MD/could have/VB/have solve/VB/solve that/IN/that all/DT/all that/DT/that problem/NN/problem that/IN/that your/PRP$/your boss/NN/boss gave/VBD/gave you/PRP/you then/RB/then you/PRP/you could/MD/could have/VB/have solve/VB/solve partition/NN/partition and/CC/and by/IN/by this/DT/this sequence/NN/sequence of/IN/of reductions/NNS/reductions that/WDT/that we/PRP/we that/IN/that we/PRP/we did/VBD/did you/PRP/you could/MD/could have/VB/have you/PRP/you would/MD/would actually/RB/actually have/VB/have constructed/VBN/constructed an/DT/an algorithm/NN/algorithm for/IN/for all/DT/all of/IN/of np/NN/np that/IN/that seems/VBZ/seems highly/RB/highly unlikely/NNP/unlikely. so/RB/so /,/, hopefully/RB/hopefully when/WRB/when you/PRP/you give/VBP/give this/DT/this the/DT/the /,/, this/DT/this set/NN/set of/IN/of arguments/NNS/arguments or/CC/or this/DT/this argument/NN/argument to/TO/to your/PRP$/your boss/NN/boss will/MD/will be/VB/be both/DT/both reasonable/JJ/reasonable and/CC/and intelligent/NN/intelligent with/IN/with intelligent/NN/intelligent enough/RB/enough to/TO/to understand/VB/understand and/CC/and may/MD/may be/VB/be give/JJ/give you/PRP/you a/DT/a raise/NN/raise instead/RB/instead of/IN/of firing/NNP/firing. thank/NN/thank you/NNP/you. this/DT/this finishes/VBZ/finishes this/DT/this module/NN/module on/IN/on np/NN/np complete/NNP/complete. design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science &/CC/& engineering/VBG/engineering indian/JJ/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 32/CD/32 approximation/NN/approximation algorithms/NNS/algorithms for/IN/for np/JJ/np- complete/JJ/complete problems/NNS/problems ?/./? i/PRP/i welcome/VBP/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. the/DT/the topic/JJ/topic for/IN/for today/NN/today is/VBZ/is approximation/NN/approximation algorithms/NNS/algorithms for/IN/for np/NN/np complete/NN/complete problems/NNP/problems. so/RB/so /,/, let/VB/let me/PRP/me start/VB/start with/IN/with a/DT/a question/NN/question /,/, suppose/NN/suppose we/PRP/we have/VBP/have an/DT/an np/NN/np complete/NN/complete problem/NN/problem /,/, which/WDT/which we/PRP/we need/VBP/need to/TO/to solve/NNP/solve. so/RB/so /,/, you/PRP/you wanted/VBD/wanted to/TO/to solve/VB/solve a/DT/a certain/JJ/certain problem/NN/problem /,/, which/WDT/which arose/DT/arose in/IN/in some/DT/some real/JJ/real life/NN/life situation/NNP/situation. and/CC/and it/PRP/it turned/VBD/turned out/RP/out /,/, that/IN/that it/PRP/it was/VBD/was np/VB/np complete/NNP/complete. what/WP/what you/PRP/you do/VBP/do ?/./? this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the subject/NN/subject of/IN/of the/DT/the next/JJ/next two/CD/two three/CD/three lectures/NNP/lectures. how/WRB/how do/VBP/do we/PRP/we cope/VB/cope with/IN/with the/DT/the problem/NN/problem /,/, which/WDT/which is/VBZ/is known/VBN/known to/TO/to be/VB/be np/NN/np complete/JJ/complete ?/./? usually/RB/usually /,/, np/NN/np complete/NN/complete problems/NNS/problems arise/VBP/arise /,/, when/WRB/when we/PRP/we talk/VBP/talk about/IN/about optimization/NN/optimization problems/NNP/problems. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 36/CD/36 /CD/) so/RB/so /,/, if/IN/if finding/NN/finding an/DT/an optimal/JJ/optimal solution/NN/solution is/VBZ/is np/NN/np complete/NNP/complete. one/CD/one wonders/NNS/wonders whether/IN/whether /,/, we/PRP/we can/MD/can at/IN/at least/JJS/least get/VB/get nearly/RB/nearly optimal/JJ/optimal solution/NN/solution in/IN/in polynomial/JJ/polynomial time/NNP/time. this/DT/this approach/NN/approach is/VBZ/is actually/RB/actually /,/, quite/RB/quite promising/NNP/promising. and/CC/and it/PRP/it is/VBZ/is the/DT/the approach/NN/approach of/IN/of finding/NN/finding fast/NN/fast approximation/NN/approximation algorithms/NNP/algorithms. it/PRP/it will/MD/will not/RB/not be/VB/be interested/JJ/interested in/IN/in this/DT/this two/CD/two three/CD/three lectures/NNS/lectures in/IN/in finding/NN/finding the/DT/the optimal/JJ/optimal solution/NNP/solution. but/CC/but /,/, we/PRP/we will/MD/will be/VB/be interested/JJ/interested in/IN/in finding/NN/finding an/DT/an approximately/RB/approximately optimal/JJ/optimal solution/NNP/solution. and/CC/and therefore/RB/therefore /,/, we/PRP/we will/MD/will be/VB/be devising/VBG/devising algorithms/NNS/algorithms /,/, which/WDT/which are/VBP/are called/VBN/called approximation/NN/approximation algorithms/NNP/algorithms. and/CC/and our/PRP$/our hope/NN/hope is/VBZ/is that/IN/that for/IN/for the/DT/the real/JJ/real life/NN/life application/NN/application that/WDT/that we/PRP/we are/VBP/are worrying/VBG/worrying about/IN/about /,/, the/DT/the approximately/RB/approximately optimal/JJ/optimal solution/NN/solution that/WDT/that we/PRP/we find/VBP/find is/VBZ/is also/RB/also fairly/RB/fairly useful/NNP/useful. another/DT/another possibility/NN/possibility is/VBZ/is to/TO/to examine/VB/examine /,/, whether/IN/whether the/DT/the real/JJ/real life/NN/life problem/NN/problem that/IN/that we/PRP/we want/VBP/want to/TO/to solve/VB/solve has/VBZ/has additional/JJ/additional features/NNS/features that/WDT/that make/VBP/make it/PRP/it a/DT/a special/JJ/special case/NN/case of/IN/of an/DT/an np/NN/np complete/NN/complete problem/NNP/problem. if/IN/if this/DT/this is/VBZ/is true/JJ/true /,/, then/RB/then sometimes/RB/sometimes the/DT/the special/JJ/special cases/NNS/cases can/MD/can have/VB/have efficient/JJ/efficient algorithms/NNS/algorithms /,/, can/MD/can have/VB/have polynomial/JJ/polynomial time/NN/time algorithms/NNP/algorithms. so/RB/so /,/, for/IN/for example/NN/example /,/, vertex/NN/vertex cover/NN/cover is/VBZ/is np/NN/np complete/NNP/complete. but/CC/but /,/, if/IN/if you/PRP/you are/VBP/are finding/VBG/finding about/IN/about x/NN/x cover/NN/cover on/IN/on a/DT/a tree/NN/tree or/CC/or on/IN/on the/DT/the bipartite/JJ/bipartite graph/NNP/graph. we/PRP/we do/VBP/do have/VBP/have fast/VBN/fast algorithms/NNS/algorithms /,/, polynomial/JJ/polynomial time/NN/time algorithms/NNS/algorithms for/IN/for solving/VBG/solving such/JJ/such problems/NNP/problems. so/IN/so /,/, it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to think/VB/think about/IN/about /,/, whether/IN/whether the/DT/the real/JJ/real life/NN/life problem/NN/problem that/IN/that we/PRP/we are/VBP/are solving/VBG/solving has/VBZ/has any/DT/any special/JJ/special features/NNP/features. sometimes/RB/sometimes those/DT/those special/JJ/special features/NNS/features can/MD/can be/VB/be exploited/VBN/exploited to/TO/to get/VB/get fast/JJ/fast algorithms/NNP/algorithms. another/DT/another possibility/NN/possibility is/VBZ/is to/TO/to find/VB/find what/WP/what are/VBP/are called/VBN/called pseudo/NN/pseudo polynomial/JJ/polynomial time/NN/time algorithms/NNP/algorithms. so/RB/so /,/, let/VB/let me/PRP/me explain/VB/explain this/DT/this a/DT/a little/RB/little bit/NN/bit more/NNP/more. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 31/CD/31 /CD/) an/DT/an algorithm/NN/algorithm is/VBZ/is said/VBN/said to/TO/to run/VB/run in/IN/in pseudo/NN/pseudo polynomial/JJ/polynomial time/NNP/time. if/IN/if it/PRP/it is/VBZ/is run/VBN/run time/NN/time is/VBZ/is polynomial/JJ/polynomial in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the input/NN/input instance/NN/instance so/RB/so far/RB/far so/RB/so good/NNP/good. so/IN/so /,/, far/RB/far like/IN/like the/DT/the usual/JJ/usual definition/NNP/definition. here/RB/here is/VBZ/is a/DT/a difference/NNP/difference. the/DT/the run/NN/run time/NN/time is/VBZ/is polynomial/JJ/polynomial in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the input/NN/input instance/NNP/instance. when/WRB/when /,/, the/DT/the numbers/NNS/numbers in/IN/in the/DT/the input/NN/input are/VBP/are represented/VBN/represented in/IN/in unary/NNP/unary. in/IN/in the/DT/the normal/JJ/normal definition/NN/definition or/CC/or in/IN/in the/DT/the definition/NN/definition of/IN/of polynomial/JJ/polynomial time/NN/time /,/, we/PRP/we require/VBP/require that/IN/that the/DT/the numbers/NNS/numbers be/VB/be represented/VBN/represented in/IN/in binary/JJ/binary or/CC/or in/IN/in some/DT/some radix/NN/radix /,/, which/WDT/which is/VBZ/is larger/JJR/larger than/IN/than 1/CD/1. what/WP/what happens/NNS/happens /,/, if/IN/if you/PRP/you represent/VBP/represent them/PRP/them in/IN/in unary/JJ/unary ?/./? so/RB/so /,/, just/RB/just to/TO/to clarify/VB/clarify /,/, if/IN/if we/PRP/we have/VBP/have a/DT/a number/NN/number 13/CD/13 that/WDT/that we/PRP/we represent/VBP/represent /,/, that/IN/that we/PRP/we want/VBP/want to/TO/to represent/NNP/represent. in/IN/in the/DT/the unary/JJ/unary number/NN/number in/IN/in the/DT/the unary/JJ/unary representation/NN/representation system/NNP/system. it/PRP/it will/MD/will be/VB/be represented/VBN/represented by/IN/by a/DT/a string/NN/string of/IN/of 13/CD/13 ones/NNP/ones. so/RB/so /,/, note/VBP/note for/IN/for one/CD/one thing/NN/thing /,/, that/IN/that this/DT/this representation/NN/representation is/VBZ/is going/VBG/going to/TO/to be/VB/be much/RB/much longer/RBR/longer /,/, than/IN/than this/DT/this representation/NNP/representation. if/IN/if you/PRP/you look/VBP/look at/IN/at binary/JJ/binary /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the representation/NNP/representation. but/CC/but /,/, this/DT/this is/VBZ/is still/RB/still substantially/RB/substantially smaller/JJR/smaller over/IN/over here/RB/here /,/, over/IN/over than/IN/than over/IN/over here/NNP/here. in/IN/in fact/NN/fact /,/, the/DT/the number/NN/number of/IN/of bits/NNS/bits needed/VBN/needed over/IN/over here/RB/here is/VBZ/is log/JJ/log of/IN/of this/NNP/this. so/RB/so /,/, there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a bit/NN/bit difference/NN/difference between/IN/between the/DT/the length/NN/length of/IN/of your/PRP$/your input/NN/input instance/NN/instance /,/, when/WRB/when measure/NN/measure it/PRP/it in/IN/in unary/JJ/unary or/CC/or in/IN/in binary/NNP/binary. so/RB/so /,/, naturally/RB/naturally if/IN/if you/PRP/you are/VBP/are only/RB/only interested/JJ/interested in/IN/in devising/NN/devising algorithms/NNS/algorithms /,/, which/WDT/which run/VBN/run in/IN/in time/NN/time polynomial/JJ/polynomial in/IN/in the/DT/the length/NN/length of/IN/of the/DT/the unary/JJ/unary representation/NNP/representation. you/PRP/you have/VBP/have got/VBN/got a/DT/a lot/NN/lot more/RBR/more freedom/NN/freedom to/TO/to work/VB/work with/IN/with your/PRP$/your algorithms/NNS/algorithms can/MD/can take/VB/take somewhat/RB/somewhat longer/NNP/longer. then/RB/then if/IN/if they/PRP/they were/VBD/were to/TO/to be/VB/be running/VBG/running in/IN/in time/NN/time polynomial/JJ/polynomial /,/, in/IN/in by/IN/by in/IN/in their/PRP$/their binary/JJ/binary representation/NN/representation /,/, when/WRB/when the/DT/the numbers/NNS/numbers are/VBP/are represented/VBN/represented in/IN/in binary/NNP/binary. we/PRP/we have/VBP/have in/IN/in fact/NN/fact see/NN/see in/IN/in pseudo/NN/pseudo polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm in/IN/in this/DT/this course/NNP/course. so/RB/so /,/, this/DT/this was/VBD/was the/DT/the napes/NNS/napes the/DT/the dynamic/JJ/dynamic programming/NN/programming algorithm/NN/algorithm /,/, that/IN/that we/PRP/we saw/VBD/saw for/IN/for the/DT/the knapsack/NN/knapsack problem/NNP/problem. let/NN/let me/PRP/me remind/VBP/remind you/PRP/you /,/, what/WP/what the/DT/the problem/NN/problem was/VBD/was you/PRP/you are/VBP/are given/VBN/given n/NN/n items/NNS/items specified/VBN/specified by/IN/by their/PRP$/their weights/NNS/weights and/CC/and values/NNP/values. and/CC/and you/PRP/you are/VBP/are given/VBN/given an/DT/an integer/NN/integer capacity/NN/capacity for/IN/for a/DT/a knapsack/NNP/knapsack. all/DT/all these/DT/these where/WRB/where integers/NNS/integers /,/, this/DT/this description/NN/description applies/VBZ/applies only/RB/only 20/CD/20 /CD/( /CD/( refer/NN/refer time/NN/time /:/: 05/CD/05 /:/: 51/CD/51 /CD/) /CD/) /./. now/RB/now /,/, it/PRP/it was/VBD/was assumed/VBN/assumed implicitly/RB/implicitly /,/, that/IN/that the/DT/the weight/NN/weight value/NN/value and/CC/and capacity/NN/capacity are/VBP/are in/IN/in d/NN/d bit/NN/bit numbers/NNP/numbers. so/RB/so /,/, since/IN/since there/EX/there are/VBP/are 2/CD/2 n/NN/n weights/NNS/weights and/CC/and values/NNS/values and/CC/and one/CD/one capacity/NN/capacity the/DT/the input/NN/input size/NN/size is/VBZ/is d/VBN/d times/NNS/times 2/CD/2 n/NN/n plus/CC/plus 1/CD/1. and/CC/and if/IN/if you/PRP/you remember/VBP/remember /,/, we/PRP/we showed/VBD/showed that/IN/that the/DT/the time/NN/time taken/VBN/taken for/IN/for the/DT/the knapsack/NN/knapsack problem/NN/problem was/VBD/was o/RB/o of/IN/of c/NN/c times/NNS/times n/VBP/n /,/, where/WRB/where c/NN/c is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the capacity/NNP/capacity. so/RB/so /,/, this/DT/this is/VBZ/is crucial/JJ/crucial it/PRP/it is/VBZ/is not/RB/not necessarily/RB/necessarily the/DT/the length/NN/length of/IN/of the/DT/the bit/NN/bit string/VBG/string needed/VBN/needed to/TO/to represent/VB/represent the/DT/the capacity/NNP/capacity. but/CC/but /,/, it/PRP/it is/VBZ/is actually/RB/actually the/DT/the value/NN/value of/IN/of the/DT/the capacity/NNP/capacity. now/RB/now /,/, if/IN/if these/DT/these numbers/NNS/numbers are/VBP/are represented/VBN/represented in/IN/in unary/JJ/unary /,/, then/RB/then the/DT/the time/NN/time taken/VBN/taken is/VBZ/is o/RB/o of/IN/of d/NN/d n/NNP/n. because/IN/because /,/, then/RB/then c/JJ/c would/MD/would be/VB/be d/VBN/d bits/NNS/bits long/NNP/long. so/RB/so /,/, this/DT/this c/NN/c itself/PRP/itself would/MD/would be/VB/be d/VBN/d as/IN/as would/MD/would be/VB/be smaller/JJR/smaller than/IN/than d/NNP/d. and/CC/and therefore/RB/therefore /,/, there/EX/there is/VBZ/is no/DT/no problem/NN/problem /,/, the/DT/the time/NN/time taken/VBN/taken would/MD/would be/VB/be c/JJ/c times/NNS/times n/NNP/n. but/CC/but c/NN/c times/NNS/times n/VBP/n is/VBZ/is also/RB/also d/VBN/d times/NNS/times n/VBP/n is/VBZ/is at/IN/at most/JJS/most d/JJ/d times/NNS/times n/VBP/n as/RB/as well/NNP/well. and/CC/and this/DT/this is/VBZ/is certainly/RB/certainly polynomial/JJ/polynomial in/IN/in the/DT/the input/NN/input size/NN/size /,/, because/IN/because the/DT/the input/NN/input size/NN/size is/VBZ/is just/RB/just this/NNP/this. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is linear/JJ/linear in/IN/in the/DT/the input/NN/input size/NNP/size. however/RB/however /,/, if/IN/if the/DT/the numbers/NNS/numbers are/VBP/are represented/VBN/represented in/IN/in binary/JJ/binary what/WP/what happens/NNP/happens. well/RB/well /,/, if/IN/if the/DT/the capacity/NN/capacity is/VBZ/is represented/VBN/represented as/RB/as a/DT/a d/NN/d bit/NN/bit binary/NN/binary number/NNP/number. then/RB/then c/VB/c can/MD/can be/VB/be as/RB/as large/JJ/large as/IN/as 2/CD/2 to/TO/to the/DT/the d/NNP/d. so/RB/so /,/, then/RB/then this/DT/this time/NN/time o/NN/o of/IN/of c/NN/c times/NNS/times n/VBP/n really/RB/really could/MD/could be/VB/be as/RB/as large/JJ/large as/IN/as o/NN/o of/IN/of 2/CD/2 to/TO/to the/DT/the d/NN/d times/VBZ/times n/NNP/n. now/RB/now /,/, notice/NN/notice that/IN/that this/DT/this expression/NN/expression 2/CD/2 to/TO/to the/DT/the d/NN/d times/VBZ/times n/NN/n is/VBZ/is not/RB/not polynomial/JJ/polynomial in/IN/in this/DT/this expression/NNP/expression. whatever/NN/whatever /,/, power/NN/power you/PRP/you take/VBP/take of/IN/of this/DT/this /,/, whatever/RB/whatever constant/JJ/constant power/NN/power you/PRP/you take/VBP/take of/IN/of this/DT/this you/PRP/you can/MD/can not/RB/not beat/VB/beat this/DT/this and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is not/RB/not polynomial/NNP/polynomial. so/RB/so /,/, clearly/RB/clearly polynomial/JJ/polynomial time/NN/time /,/, if/IN/if you/PRP/you can/MD/can get/VB/get polynomial/JJ/polynomial time/NN/time it/PRP/it is/VBZ/is better/RBR/better than/IN/than pseudo/NN/pseudo polynomial/JJ/polynomial time/NNP/time. so/RB/so /,/, pseudo/VBP/pseudo polynomial/JJ/polynomial time/NN/time is/VBZ/is not/RB/not the/DT/the best/JJS/best possible/NNP/possible. or/CC/or it/PRP/it is/VBZ/is really/RB/really different/JJ/different from/IN/from our/PRP$/our notion/NN/notion of/IN/of good/JJ/good algorithms/NNS/algorithms /,/, which/WDT/which are/VBP/are polynomial/JJ/polynomial time/NN/time algorithms/NNP/algorithms. however/RB/however /,/, pseudo/VBP/pseudo polynomial/JJ/polynomial time/NN/time is/VBZ/is better/RBR/better than/IN/than exponential/JJ/exponential time/NNP/time. so/RB/so /,/, that/IN/that is/VBZ/is also/RB/also worth/JJ/worth noting/NN/noting /,/, because/IN/because the/DT/the length/NN/length is/VBZ/is o/RB/o of/IN/of n/NN/n d/NNP/d. and/CC/and exponential/JJ/exponential would/MD/would be/VB/be something/NN/something like/IN/like 2/CD/2 to/TO/to the/DT/the power/NN/power n/NN/n d/NNP/d. so/RB/so /,/, here/RB/here we/PRP/we are/VBP/are getting/VBG/getting d/NN/d in/IN/in the/DT/the exponent/NN/exponent /,/, but/CC/but we/PRP/we are/VBP/are getting/VBG/getting n/NN/n not/RB/not in/IN/in the/DT/the exponent/NN/exponent n/NN/n just/RB/just as/IN/as a/DT/a multiplier/NNP/multiplier. so/RB/so /,/, this/DT/this is/VBZ/is certainly/RB/certainly /,/, still/RB/still much/JJ/much better/RBR/better than/IN/than this/NNP/this. so/RB/so /,/, as/IN/as a/DT/a compromise/NN/compromise between/IN/between polynomial/JJ/polynomial time/NN/time and/CC/and exponential/JJ/exponential time/NNP/time. it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to think/VB/think about/IN/about whether/IN/whether /,/, there/EX/there are/VBP/are pseudo/RB/pseudo polynomial/JJ/polynomial time/NN/time algorithms/NNS/algorithms /,/, possible/JJ/possible for/IN/for the/DT/the problem/NN/problem that/IN/that you/PRP/you want/VBP/want to/TO/to solve/NNP/solve. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 52/CD/52 /CD/) then/RB/then people/NNS/people do/VBP/do look/NN/look at/IN/at algorithms/NNS/algorithms /,/, which/WDT/which are/VBP/are difficult/JJ/difficult to/TO/to analyze/VB/analyze /,/, but/CC/but instead/RB/instead of/IN/of analyzing/VBG/analyzing them/NNP/them. they/PRP/they try/VBP/try out/RP/out lots/NNS/lots of/IN/of instances/NNS/instances and/CC/and check/NN/check whether/IN/whether the/DT/the algorithms/NNS/algorithms run/VBP/run fast/RB/fast enough/NNP/enough. this/DT/this is/VBZ/is what/WP/what i/PRP/i mean/VBP/mean by/IN/by saying/VBG/saying we/PRP/we try/VBP/try to/TO/to discover/VB/discover algorithms/NNS/algorithms /,/, which/WDT/which work/NN/work well/RB/well in/IN/in practice/NN/practice /,/, such/JJ/such algorithms/NNS/algorithms are/VBP/are called/VBN/called heuristics/NNP/heuristics. and/CC/and they/PRP/they do/VBP/do tend/VBP/tend to/TO/to be/VB/be useful/JJ/useful /,/, when/WRB/when solving/VBG/solving problems/NNS/problems which/WDT/which are/VBP/are known/VBN/known to/TO/to be/VB/be very/RB/very hard/NNP/hard. so/RB/so /,/, often/RB/often it/PRP/it may/MD/may turn/VB/turn out/RP/out that/IN/that you/PRP/you may/MD/may have/VB/have a/DT/a good/JJ/good heuristic/JJ/heuristic /,/, which/WDT/which you/PRP/you really/RB/really can/MD/can not/RB/not analyze/NNP/analyze. but/CC/but /,/, it/PRP/it seems/VBZ/seems to/TO/to do/VB/do the/DT/the job/NN/job /,/, if/IN/if it/PRP/it seems/VBZ/seems to/TO/to do/VB/do the/DT/the job/NN/job why/WRB/why not/RB/not yourself/NNP/yourself. the/DT/the last/JJ/last idea/NN/idea /,/, which/WDT/which is/VBZ/is also/RB/also used/VBN/used is/VBZ/is to/TO/to use/VB/use the/DT/the exponential/JJ/exponential time/NN/time algorithm/NNP/algorithm. so/RB/so /,/, if/IN/if a/DT/a problem/NN/problem is/VBZ/is np/NN/np complete/JJ/complete /,/, we/PRP/we know/VBP/know that/IN/that it/PRP/it can/MD/can be/VB/be solved/VBN/solved by/IN/by an/DT/an exponential/JJ/exponential time/NN/time algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we use/VBP/use that/IN/that exponential/JJ/exponential time/NN/time algorithm/NNP/algorithm. if/IN/if the/DT/the problem/NN/problem size/NN/size is/VBZ/is small/JJ/small or/CC/or small/JJ/small enough/JJ/enough /,/, then/RB/then the/DT/the time/NN/time taken/VBN/taken may/MD/may be/VB/be acceptable/NNP/acceptable. or/CC/or /,/, if/IN/if the/DT/the problem/NN/problem is/VBZ/is just/RB/just to/TO/to be/VB/be solved/VBN/solved once/RB/once /,/, then/RB/then even/RB/even if/IN/if the/DT/the problem/NN/problem takes/VBZ/takes a/DT/a day/NN/day does/VBZ/does not/RB/not matter/NNP/matter. we/PRP/we will/MD/will run/VB/run a/DT/a computer/NN/computer for/IN/for a/DT/a day/NN/day and/CC/and get/VB/get a/DT/a solution/NNP/solution. so/RB/so /,/, this/DT/this also/RB/also works/VBZ/works sometimes/RB/sometimes /,/, sometimes/RB/sometimes for/IN/for solving/VBG/solving real/JJ/real life/NN/life problems/NNP/problems. the/DT/the real/JJ/real life/NN/life problems/NNS/problems tend/VBP/tend to/TO/to be/VB/be reasonably/RB/reasonably small/JJ/small and/CC/and today/NN/today computers/NNS/computers are/VBP/are getting/VBG/getting really/RB/really fast/NNP/fast. so/RB/so /,/, exponential/JJ/exponential time/NN/time algorithms/NNS/algorithms can/MD/can work/VB/work /,/, it/PRP/it is/VBZ/is not/RB/not that/IN/that they/PRP/they are/VBP/are entirely/RB/entirely useless/NNP/useless. our/PRP$/our focus/NN/focus at/IN/at these/DT/these lectures/NNS/lectures however/RB/however /,/, is/VBZ/is going/VBG/going to/TO/to be/VB/be on/IN/on approximation/NN/approximation algorithms/NNP/algorithms. we/PRP/we would/MD/would like/VB/like to/TO/to device/VB/device algorithms/NNS/algorithms /,/, which/WDT/which are/VBP/are provably/RB/provably fast/RB/fast which/WDT/which are/VBP/are running/VBG/running in/IN/in polynomial/JJ/polynomial time/NN/time /,/, that/IN/that is/VBZ/is all/DT/all that/DT/that we/PRP/we mean/VBP/mean in/IN/in this/DT/this /,/, in/IN/in these/DT/these two/CD/two three/CD/three lectures/NNS/lectures when/WRB/when we/PRP/we say/VBP/say provably/RB/provably fast/JJ/fast /,/, that/IN/that there/EX/there are/VBP/are in/IN/in polynomial/JJ/polynomial time/NN/time /,/, and/CC/and while/IN/while they/PRP/they may/MD/may not/RB/not give/VB/give the/DT/the optimal/JJ/optimal solutions/NNP/solutions. we/PRP/we will/MD/will prove/VB/prove that/IN/that they/PRP/they will/MD/will give/VB/give somewhat/RB/somewhat close/JJ/close to/TO/to optimal/JJ/optimal solutions/NNP/solutions. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 49/CD/49 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the outline/NN/outline for/IN/for today/NNP/today. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to define/VB/define the/DT/the notion/NN/notion of/IN/of approximation/NN/approximation algorithms/NNP/algorithms. i/PRP/i will/MD/will also/RB/also define/VB/define a/DT/a term/NN/term called/VBN/called the/DT/the approximation/NN/approximation ratio/NN/ratio of/IN/of an/DT/an algorithm/NN/algorithm or/CC/or an/DT/an approximation/NN/approximation factor/NN/factor of/IN/of an/DT/an algorithm/NNP/algorithm. and/CC/and then/RB/then /,/, i/PRP/i will/MD/will describe/VB/describe approximation/NN/approximation algorithms/NNS/algorithms for/IN/for two/CD/two problems/NNP/problems. one/CD/one is/VBZ/is the/DT/the metric/JJ/metric traveling/NN/traveling salesman/NN/salesman problem/NNP/problem. and/CC/and another/DT/another is/VBZ/is the/DT/the precedence/NN/precedence constrained/VBD/constrained scheduling/VBG/scheduling problem/NNP/problem. so/RB/so /,/, let/VB/let us/PRP/us begin/VB/begin with/IN/with the/DT/the definition/NN/definition of/IN/of approximation/NN/approximation algorithms/NNP/algorithms. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 22/CD/22 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say p/NN/p is/VBZ/is denotes/NNS/denotes an/DT/an optimization/NN/optimization problem/NNP/problem. p/NN/p is/VBZ/is an/DT/an optimization/NN/optimization problem/NN/problem and/CC/and it/PRP/it look/VBP/look something/NN/something like/IN/like minimize/NN/minimize this/DT/this objective/NN/objective function/NN/function subject/NN/subject to/TO/to these/DT/these constraints/NNP/constraints. of/IN/of course/NN/course /,/, it/PRP/it could/MD/could be/VB/be maximize/VB/maximize /,/, but/CC/but for/IN/for definiteness/NN/definiteness let/NN/let us/PRP/us consider/VBP/consider minimization/NN/minimization first/NNP/first. let/NN/let a/DT/a of/IN/of i/PRP/i denote/VBP/denote the/DT/the cost/NN/cost of/IN/of the/DT/the solution/NN/solution found/VBD/found by/IN/by an/DT/an algorithm/NN/algorithm a/DT/a on/IN/on instance/NN/instance i/NNP/i. so/RB/so /,/, we/PRP/we are/VBP/are not/RB/not worrying/VBG/worrying about/IN/about the/DT/the time/NN/time right/RB/right now/NNP/now. we/PRP/we are/VBP/are worrying/VBG/worrying about/IN/about the/DT/the objective/NN/objective function/NN/function cost/NNP/cost. so/RB/so /,/, we/PRP/we want/VBP/want this/DT/this objective/NN/objective function/NN/function cost/NN/cost to/TO/to be/VB/be as/RB/as small/JJ/small as/IN/as possible/NNP/possible. but/CC/but /,/, this/DT/this algorithm/NN/algorithm a/DT/a /,/, when/WRB/when run/VBN/run on/IN/on instance/NN/instance i/PRP/i produces/VBZ/produces this/DT/this objective/NN/objective function/NN/function value/NNP/value. suppose/NN/suppose /,/, opt/NN/opt of/IN/of i/PRP/i denotes/VBZ/denotes the/DT/the cost/NN/cost of/IN/of an/DT/an optimal/JJ/optimal solution/NN/solution to/TO/to this/DT/this instance/NN/instance i/NNP/i. for/IN/for technical/JJ/technical reasons/NNS/reasons will/MD/will assume/VB/assume that/IN/that opt/NN/opt of/IN/of i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 /,/, we/PRP/we will/MD/will see/VB/see why/WRB/why in/IN/in a/DT/a minute/NNP/minute. now/RB/now /,/, we/PRP/we define/VBP/define the/DT/the approximation/NN/approximation factor/NN/factor or/CC/or the/DT/the approximation/NN/approximation ratio/NN/ratio rho/NN/rho on/IN/on instance/NN/instance i/PRP/i as/IN/as a/DT/a of/IN/of i/PRP/i upon/IN/upon opt/JJ/opt i/NNP/i. what/WP/what is/VBZ/is the/DT/the factor/NN/factor by/IN/by which/WDT/which a/DT/a is/VBZ/is worse/JJ/worse than/IN/than opt/NN/opt i/NNP/i. that/IN/that is/VBZ/is what/WP/what this/DT/this approximation/NN/approximation ratio/NN/ratio is/VBZ/is all/DT/all about/NNP/about. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a natural/JJ/natural definition/NNP/definition. clearly/RB/clearly /,/, a/DT/a of/IN/of i/PRP/i the/DT/the cost/NN/cost found/VBD/found by/IN/by the/DT/the algorithm/NN/algorithm can/MD/can at/IN/at best/JJS/best be/VB/be as/RB/as small/JJ/small as/IN/as the/DT/the optimal/JJ/optimal cost/NNP/cost. in/IN/in general/JJ/general /,/, it/PRP/it could/MD/could be/VB/be larger/JJR/larger and/CC/and therefore/RB/therefore /,/, this/DT/this rho/NN/rho sub/NN/sub i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be larger/NNP/larger. and/CC/and we/PRP/we would/MD/would like/VB/like it/PRP/it to/TO/to be/VB/be as/RB/as close/JJ/close to/TO/to 1/CD/1 as/IN/as possible/NNP/possible. in/IN/in general/JJ/general /,/, the/DT/the approximation/NN/approximation factor/NN/factor of/IN/of this/DT/this algorithm/NN/algorithm is/VBZ/is just/RB/just the/DT/the maximum/NN/maximum value/NN/value of/IN/of rho/NN/rho sub/NN/sub i/PRP/i over/IN/over all/DT/all possible/JJ/possible instances/NNS/instances of/IN/of size/NN/size n/NNP/n. so/RB/so /,/, it/PRP/it is/VBZ/is customary/JJ/customary to/TO/to use/VB/use the/DT/the worst/JJS/worst case/NN/case by/IN/by enlarge/NNP/enlarge. and/CC/and so/RB/so here/RB/here /,/, as/IN/as well/RB/well we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at the/DT/the worst/JJS/worst case/NN/case ratio/NNP/ratio. and/CC/and of/IN/of course/NN/course /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be parameterized/VBN/parameterized by/IN/by the/DT/the size/NN/size n/NNP/n. so/RB/so /,/, we/PRP/we will/MD/will write/VB/write this/DT/this as/IN/as rho/NN/rho of/IN/of n/NNP/n. so/RB/so /,/, for/IN/for different/JJ/different n/NN/n we/PRP/we will/MD/will have/VB/have a/DT/a different/JJ/different ratio/NN/ratio. so/IN/so in/IN/in fact/NN/fact /,/, we/PRP/we are/VBP/are looking/VBG/looking for/IN/for /,/, looking/VBG/looking to/TO/to evaluate/VB/evaluate this/DT/this and/CC/and we/PRP/we are/VBP/are looking/VBG/looking to/TO/to keep/VB/keep this/DT/this small/NNP/small. the/DT/the goal/NN/goal clearly/RB/clearly /,/, is/VBZ/is to/TO/to design/NN/design approximation/NN/approximation algorithms/NNS/algorithms or/CC/or algorithms/NNS/algorithms such/JJ/such that/IN/that /,/, rho/WP/rho of/IN/of n/NN/n is/VBZ/is small/JJ/small as/IN/as close/JJ/close to/TO/to 1/CD/1 as/IN/as possible/JJ/possible for/IN/for large/JJ/large n/NNP/n. and/CC/and of/IN/of course/NN/course /,/, the/DT/the time/NN/time for/IN/for this/DT/this algorithm/NN/algorithm is/VBZ/is polynomial/NNP/polynomial. the/DT/the algorithm/NN/algorithm must/MD/must run/VB/run in/IN/in polynomial/JJ/polynomial time/NNP/time. sometimes/RB/sometimes /,/, you/PRP/you want/VBP/want to/TO/to maximize/VB/maximize the/DT/the objective/NN/objective function/NNP/function. in/IN/in which/WDT/which case/NN/case /,/, we/PRP/we will/MD/will define/VB/define rho/NN/rho sub/NN/sub i/PRP/i /,/, the/DT/the approximation/NN/approximation factor/NN/factor as/IN/as the/DT/the reciprocal/NNP/reciprocal. so/RB/so /,/, now/RB/now we/PRP/we know/VBP/know /,/, that/IN/that a/DT/a of/IN/of i/PRP/i can/MD/can at/IN/at most/JJS/most be/VB/be as/RB/as large/JJ/large as/IN/as this/NNP/this. and/CC/and therefore/RB/therefore /,/, it/PRP/it will/MD/will turn/VB/turn out/NNP/out. but/CC/but /,/, this/DT/this is/VBZ/is still/RB/still going/VBG/going to/TO/to be/VB/be bigger/JJR/bigger than/IN/than 1/CD/1. so/RB/so /,/, again/RB/again our/PRP$/our goal/NN/goal is/VBZ/is going/VBG/going to/TO/to be/VB/be similar/NNP/similar. so/RB/so /,/, rho/IN/rho of/IN/of n/NN/n is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the same/NNP/same. and/CC/and the/DT/the goal/NN/goal is/VBZ/is also/RB/also going/VBG/going to/TO/to be/VB/be similar/NNP/similar. we/PRP/we want/VBP/want algorithms/NNS/algorithms /,/, which/WDT/which keep/VB/keep rho/NN/rho of/IN/of n/NN/n as/IN/as close/JJ/close to/TO/to 1/CD/1 as/IN/as possible/JJ/possible /,/, which/WDT/which get/NN/get rho/VBD/rho of/IN/of n/NN/n as/IN/as small/JJ/small as/IN/as small/JJ/small as/IN/as possible/NNP/possible. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 09/CD/09 /CD/) so/RB/so /,/, now/RB/now we/PRP/we will/MD/will use/VB/use these/DT/these ideas/NNS/ideas /,/, to/TO/to device/VB/device an/DT/an approximation/NN/approximation algorithm/NN/algorithm for/IN/for the/DT/the metric/JJ/metric tsp/NN/tsp problem/NNP/problem. so/RB/so /,/, let/VB/let me/PRP/me define/VB/define this/DT/this problem/NN/problem first/NNP/first. the/DT/the input/NN/input to/TO/to this/DT/this problem/NN/problem is/VBZ/is a/DT/a graph/NN/graph g/NNP/g. and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be specified/VBN/specified as/IN/as an/DT/an n/NN/n by/IN/by n/NN/n metrics/NNS/metrics d/VBD/d /,/, in/IN/in which/WDT/which d/NN/d of/IN/of i/PRP/i /,/, j/VBP/j denotes/NNS/denotes the/DT/the distance/NN/distance between/IN/between vertex/NN/vertex i/PRP/i and/CC/and vertex/NN/vertex j/NN/j in/IN/in this/DT/this graph/NNP/graph. now/RB/now /,/, the/DT/the metric/JJ/metric in/IN/in the/DT/the title/NN/title /,/, says/VBZ/says that/IN/that d/NN/d has/VBZ/has to/TO/to have/VB/have certain/JJ/certain additional/JJ/additional structure/NNP/structure. specifically/RB/specifically /,/, d/VBD/d has/VBZ/has to/TO/to form/NN/form a/DT/a metric/JJ/metric and/CC/and by/IN/by that/DT/that we/PRP/we mean/VBP/mean /,/, first/JJ/first of/IN/of all/DT/all for/IN/for all/DT/all i/PRP/i the/DT/the distance/NN/distance of/IN/of a/DT/a node/NN/node to/TO/to itself/PRP/itself is/VBZ/is has/VBZ/has to/TO/to be/VB/be 0/CD/0. the/DT/the distances/NNS/distances have/VBP/have to/TO/to be/VB/be symmetric/JJ/symmetric /,/, the/DT/the distance/NN/distance from/IN/from i/PRP/i to/TO/to j/VB/j has/VBZ/has to/TO/to be/VB/be the/DT/the same/JJ/same as/IN/as the/DT/the distance/NN/distance from/IN/from j/NN/j to/TO/to i/NNP/i. and/CC/and the/DT/the final/JJ/final thing/NN/thing is/VBZ/is that/IN/that for/IN/for all/PDT/all i/PRP/i /,/, j/VBP/j /,/, k/NN/k the/DT/the distance/NN/distance of/IN/of going/VBG/going from/IN/from i/PRP/i to/TO/to j/VB/j directly/RB/directly has/VBZ/has to/TO/to be/VB/be no/RB/no larger/JJR/larger than/IN/than the/DT/the distance/NN/distance of/IN/of going/VBG/going from/IN/from i/PRP/i to/TO/to k/VB/k first/RB/first and/CC/and from/IN/from k/NN/k to/TO/to j/VB/j next/NNP/next. this/DT/this is/VBZ/is often/RB/often called/VBN/called a/DT/a triangle/NN/triangle inequality/NN/inequality constraint/NNP/constraint. so/RB/so /,/, imagine/NN/imagine that/IN/that i/PRP/i /,/, j/VBP/j /,/, k/NN/k are/VBP/are the/DT/the vertices/NNS/vertices of/IN/of a/DT/a triangle/NNP/triangle. and/CC/and this/DT/this just/RB/just says/VBZ/says /,/, that/IN/that the/DT/the straight/JJ/straight distance/NN/distance going/VBG/going from/IN/from i/PRP/i to/TO/to j/VB/j is/VBZ/is smaller/JJR/smaller than/IN/than the/DT/the indirect/NN/indirect distance/NNP/distance. so/RB/so /,/, let/VB/let me/PRP/me first/RB/first take/VB/take an/DT/an example/NN/example of/IN/of what/WP/what a/DT/a metric/JJ/metric problem/NN/problem is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so /,/, i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to draw/VB/draw the/DT/the metric/JJ/metric /,/, the/DT/the metrics/NNS/metrics d/VBD/d /,/, but/CC/but i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to take/VB/take the/DT/the problem/NNP/problem. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to draw/VB/draw the/DT/the graph/NN/graph corresponding/VBG/corresponding to/TO/to the/DT/the problem/NNP/problem. so/RB/so /,/, one/CD/one way/NN/way to/TO/to use/VB/use such/JJ/such a/DT/a graph/NN/graph is/VBZ/is to/TO/to imagine/VB/imagine that/IN/that the/DT/the vertices/NNS/vertices are/VBP/are embedded/VBN/embedded in/IN/in the/DT/the euclidean/JJ/euclidean plane/NNP/plane. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 17/CD/17 /:/: 10/CD/10 /CD/) so/RB/so /,/, for/IN/for example/NN/example /,/, here/RB/here is/VBZ/is vertex/NN/vertex 1/CD/1 /,/, here/RB/here is/VBZ/is vertex/NN/vertex 2/CD/2 /,/, here/RB/here says/VBZ/says vertex/NN/vertex 3/CD/3 /,/, here/RB/here says/VBZ/says vertex/NN/vertex 4/CD/4. i/PRP/i could/MD/could draw/VB/draw out/RP/out all/DT/all the/DT/the edges/NNS/edges /,/, but/CC/but even/RB/even without/IN/without drawing/NN/drawing all/DT/all the/DT/the edges/NNP/edges. let/NN/let me/PRP/me tell/VBP/tell you/PRP/you /,/, that/DT/that the/DT/the distance/NN/distance from/IN/from i/PRP/i to/TO/to j/VB/j is/VBZ/is simply/RB/simply the/DT/the straight/JJ/straight line/NN/line distance/NN/distance in/IN/in the/DT/the plane/NNP/plane. so/RB/so /,/, d/JJ/d of/IN/of i/PRP/i to/TO/to j/VB/j is/VBZ/is straight/VBN/straight distance/NN/distance /,/, straight/RB/straight euclidean/JJ/euclidean distance/NN/distance in/IN/in the/DT/the plane/NNP/plane. now/RB/now /,/, all/DT/all of/IN/of us/PRP/us know/VBP/know that/IN/that the/DT/the distance/NN/distance from/IN/from here/RB/here to/TO/to here/RB/here /,/, plus/CC/plus the/DT/the distance/NN/distance from/IN/from here/RB/here to/TO/to here/RB/here can/MD/can never/RB/never be/VB/be smaller/JJR/smaller than/IN/than the/DT/the shorter/NN/shorter distances/NNS/distances from/IN/from the/DT/the straight/JJ/straight distance/NNP/distance. and/CC/and so/RB/so clearly/RB/clearly /,/, our/PRP$/our third/JJ/third constraint/NN/constraint the/DT/the triangle/NN/triangle inequality/NN/inequality constraint/NN/constraint is/VBZ/is obviously/RB/obviously /,/, applicable/JJ/applicable over/IN/over here/NNP/here. so/RB/so /,/, for/IN/for completeness/NN/completeness i/PRP/i could/MD/could write/VB/write down/IN/down this/DT/this is/VBZ/is the/DT/the graph/NN/graph that/IN/that here/RB/here looking/VBG/looking at/NNP/at. for/IN/for example/NN/example /,/, and/CC/and if/IN/if you/PRP/you do/VBP/do the/DT/the arithmetic/JJ/arithmetic you/PRP/you could/MD/could say/VB/say for/IN/for example/NN/example /,/, that/IN/that you/PRP/you could/MD/could calculate/VB/calculate the/DT/the distances/NNP/distances. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the graph/NNP/graph. and/CC/and if/IN/if you/PRP/you look/VBP/look at/IN/at d/NN/d i/PRP/i /,/, j/VBP/j to/TO/to be/VB/be the/DT/the euclidean/JJ/euclidean distance/NNP/distance. then/RB/then clearly/RB/clearly /,/, it/PRP/it will/MD/will satisfy/VB/satisfy all/DT/all these/DT/these metric/JJ/metric property/NN/property /,/, the/DT/the properties/NNS/properties mentioned/VBD/mentioned over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this would/MD/would be/VB/be a/DT/a traveling/NN/traveling salesman/NN/salesman problem/NN/problem instance/NNP/instance. what/WP/what is/VBZ/is suppose/DT/suppose to/TO/to be/VB/be output/VBN/output /-NONE-/( /:/( refer/NN/refer time/NN/time /:/: 18/CD/18 /:/: 41/CD/41 /CD/) /CD/) /./. what/WP/what is/VBZ/is suppose/DT/suppose to/TO/to be/VB/be output/VBN/output is/VBZ/is a/DT/a cycle/NN/cycle in/IN/in the/DT/the graph/NN/graph /,/, passing/VBG/passing through/IN/through all/DT/all vertices/NNS/vertices exactly/RB/exactly once/NNP/once. such/JJ/such that/IN/that /,/, the/DT/the sum/NN/sum of/IN/of the/DT/the distances/NNS/distances associated/VBN/associated with/IN/with the/DT/the edges/NNS/edges in/IN/in the/DT/the cycle/NN/cycle is/VBZ/is small/JJ/small as/IN/as /,/, is/VBZ/is as/IN/as small/JJ/small as/IN/as possible/NNP/possible. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the same/JJ/same thing/NN/thing as/IN/as in/IN/in the/DT/the tsp/NN/tsp problem/NNP/problem. you/PRP/you want/VBP/want to/TO/to tour/PRP$/tour in/IN/in the/DT/the graph/NN/graph passing/VBG/passing through/IN/through every/DT/every vertex/NNP/vertex. such/JJ/such that/IN/that /,/, the/DT/the tour/NN/tour length/NN/length is/VBZ/is as/IN/as small/JJ/small as/IN/as possible/NNP/possible. the/DT/the first/JJ/first claim/NN/claim is/VBZ/is that/IN/that metric/JJ/metric tsp/NN/tsp is/VBZ/is np/NN/np complete/NNP/complete. well/RB/well /,/, i/PRP/i think/VBP/think we/PRP/we have/VBP/have studied/VBN/studied earlier/RBR/earlier /,/, the/DT/the tsp/NN/tsp is/VBZ/is np/NN/np complete/NNP/complete. but/CC/but /,/, it/PRP/it turns/VBZ/turns out/RP/out that/IN/that even/RB/even with/IN/with these/DT/these restrictions/NNP/restrictions. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the special/JJ/special instance/NN/instance of/IN/of a/DT/a tsp/NNP/tsp. but/CC/but /,/, even/RB/even with/IN/with these/DT/these special/JJ/special restrictions/NNS/restrictions tsp/VBP/tsp remains/NNS/remains np/VBP/np complete/NNP/complete. here/RB/here is/VBZ/is the/DT/the claim/NN/claim /,/, that/IN/that we/PRP/we are/VBP/are interested/JJ/interested in/IN/in and/CC/and which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to prove/NNP/prove. so/RB/so /,/, the/DT/the claim/NN/claim is/VBZ/is there/EX/there exist/NN/exist a/DT/a two/CD/two approximation/NN/approximation algorithm/NN/algorithm for/IN/for metric/JJ/metric tsp/NNP/tsp. here/RB/here is/VBZ/is a/DT/a quick/JJ/quick overview/NN/overview of/IN/of the/DT/the proof/NNP/proof. in/IN/in fact/NN/fact /,/, the/DT/the proof/NN/proof is/VBZ/is actually/RB/actually quite/RB/quite simple/NNP/simple. the/DT/the idea/NN/idea is/VBZ/is actually/RB/actually quite/RB/quite interesting/JJ/interesting and/CC/and but/CC/but short/NNP/short. so/RB/so /,/, the/DT/the general/JJ/general idea/NN/idea is/VBZ/is this/NNP/this. and/CC/and this/DT/this scheme/NN/scheme appears/VBZ/appears in/IN/in other/JJ/other places/NNS/places as/IN/as well/NNP/well. so/RB/so /,/, first/JJ/first we/PRP/we are/VBP/are going/VBG/going to/TO/to find/VB/find the/DT/the lower/JJR/lower bound/NN/bound l/NN/l /,/, on/IN/on the/DT/the length/NN/length opt/NN/opt of/IN/of the/DT/the optimal/JJ/optimal tour/NNP/tour. so/RB/so /,/, whatever/IN/whatever graph/NN/graph we/PRP/we are/VBP/are given/VBN/given /,/, it/PRP/it has/VBZ/has some/DT/some optimal/JJ/optimal tour/NN/tour /,/, will/MD/will try/VB/try to/TO/to figure/VB/figure out/RP/out a/DT/a lower/JJR/lower bound/NN/bound on/IN/on it/NNP/it. then/RB/then /,/, we/PRP/we will/MD/will construct/VB/construct a/DT/a tour/NN/tour of/IN/of length/NN/length c/NN/c /,/, which/WDT/which is/VBZ/is at/IN/at most/JJS/most twice/NN/twice this/NNP/this. so/RB/so /,/, notice/NN/notice that/IN/that /,/, it/PRP/it is/VBZ/is very/RB/very hard/RB/hard to/TO/to figure/VB/figure out/RP/out the/DT/the length/NN/length of/IN/of the/DT/the optimal/JJ/optimal tour/NNP/tour. so/RB/so /,/, we/PRP/we really/RB/really want/VBP/want a/DT/a tour/NN/tour /,/, which/WDT/which has/VBZ/has say/VBP/say twice/NN/twice the/DT/the length/NN/length of/IN/of the/DT/the optimal/JJ/optimal tour/NNP/tour. but/CC/but /,/, rather/RB/rather than/IN/than that/DT/that we/PRP/we will/MD/will find/VB/find a/DT/a lower/JJR/lower bound/NN/bound /,/, which/WDT/which will/MD/will be/VB/be easily/RB/easily computable/NNP/computable. and/CC/and we/PRP/we will/MD/will show/VB/show that/IN/that we/PRP/we can/MD/can construct/VB/construct a/DT/a tour/NN/tour /,/, which/WDT/which is/VBZ/is at/IN/at most/JJS/most twice/NN/twice the/DT/the length/NNP/length. but/CC/but since/IN/since /,/, this/DT/this is/VBZ/is a/DT/a lower/JJR/lower bound/NNP/bound. we/PRP/we know/VBP/know that/IN/that this/DT/this is/VBZ/is that/IN/that c/NN/c must/MD/must also/RB/also be/VB/be less/JJR/less than/IN/than twice/NN/twice opt/NNP/opt. because/IN/because /,/, l/NN/l is/VBZ/is less/JJR/less than/IN/than opt/NNP/opt. therefore/NN/therefore /,/, c/NN/c is/VBZ/is less/JJR/less than/IN/than twice/NN/twice opt/NNP/opt. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/NNP/do. so/RB/so /,/, we/PRP/we will/MD/will look/VB/look at/IN/at each/DT/each step/NN/step in/IN/in turn/NNP/turn. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first step/NNP/step. so/RB/so /,/, we/PRP/we want/VBP/want to/TO/to find/VB/find a/DT/a lower/JJR/lower bound/NN/bound on/IN/on the/DT/the length/NN/length of/IN/of the/DT/the optimal/JJ/optimal tour/NNP/tour. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 00/CD/00 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the main/JJ/main claim/NNP/claim. the/DT/the claim/NN/claim says/VBZ/says that/IN/that the/DT/the weight/NN/weight of/IN/of a/DT/a minimum/JJ/minimum weight/NN/weight spanning/VBG/spanning tree/NN/tree of/IN/of g/NN/g /,/, with/IN/with d/JJ/d as/IN/as the/DT/the weight/NN/weight matrix/NN/matrix is/VBZ/is a/DT/a lower/JJR/lower bound/NN/bound l/NN/l on/IN/on the/DT/the length/NN/length of/IN/of an/DT/an optimal/JJ/optimal tour/NN/tour of/IN/of g/NNP/g. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the lower/JJR/lower bound/NN/bound that/IN/that we/PRP/we wanted/NNP/wanted. so/RB/so /,/, i/PRP/i just/RB/just have/VBP/have to/TO/to prove/VB/prove this/NNP/this. so/RB/so /,/, let/VB/let us/PRP/us imagine/VB/imagine that/IN/that we/PRP/we are/VBP/are given/VBN/given any/DT/any optimal/JJ/optimal tour/NNP/tour. we/PRP/we take/VBP/take that/IN/that optimal/JJ/optimal tour/NN/tour and/CC/and we/PRP/we remove/VBP/remove an/DT/an edge/NN/edge in/IN/in it/PRP/it /,/, edge/NN/edge from/IN/from it/NNP/it. what/WP/what do/VBP/do we/PRP/we get/VB/get ?/./? well/RB/well /,/, we/PRP/we will/MD/will get/VB/get a/DT/a path/NN/path /,/, which/WDT/which passes/NNS/passes through/IN/through all/DT/all the/DT/the vertices/NNS/vertices of/IN/of the/DT/the graph/NN/graph once/NNP/once. it/PRP/it starts/VBZ/starts at/IN/at some/DT/some vertex/NN/vertex and/CC/and it/PRP/it passes/VBZ/passes through/IN/through all/DT/all the/DT/the other/JJ/other vertex/NN/vertex and/CC/and returns/NNS/returns to/TO/to some/DT/some other/JJ/other vertex/NNP/vertex. but/CC/but /,/, is/VBZ/is there/EX/there anything/NN/anything interesting/NN/interesting that/WDT/that we/PRP/we can/MD/can say/VB/say about/IN/about this/DT/this path/NNP/path. well/RB/well /,/, this/DT/this path/NN/path is/VBZ/is also/RB/also a/DT/a special/JJ/special case/NN/case of/IN/of a/DT/a spanning/NN/spanning tree/NNP/tree. this/DT/this is/VBZ/is a/DT/a spanning/NN/spanning path/NN/path /,/, it/PRP/it passes/VBZ/passes through/IN/through every/DT/every vertex/NNP/vertex. and/CC/and therefore/RB/therefore /,/, this/DT/this also/RB/also is/VBZ/is a/DT/a spanning/NN/spanning tree/NN/tree of/IN/of g/NNP/g. so/RB/so /,/, it/PRP/it is/VBZ/is length/NN/length /,/, it/PRP/it is/VBZ/is total/JJ/total length/NN/length is/VBZ/is certainly/RB/certainly no/DT/no smaller/JJR/smaller than/IN/than the/DT/the weight/NN/weight of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. because/IN/because /,/, the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree is/VBZ/is by/IN/by definition/NN/definition /,/, that/IN/that spanning/VBG/spanning tree/NN/tree whose/WP$/whose weight/NN/weight is/VBZ/is the/DT/the least/NNP/least. and/CC/and therefore/RB/therefore /,/, the/DT/the length/NN/length of/IN/of this/DT/this /,/, which/WDT/which is/VBZ/is the/DT/the weight/NN/weight of/IN/of the/DT/the corresponding/NN/corresponding the/DT/the spanning/NN/spanning tree/NN/tree /,/, by/IN/by the/DT/the way/NN/way /,/, in/IN/in this/DT/this case/NN/case weight/NN/weight and/CC/and length/NN/length are/VBP/are to/TO/to be/VB/be use/NN/use synonymously/NNP/synonymously. weight/NN/weight is/VBZ/is the/DT/the terminology/NN/terminology used/VBD/used in/IN/in connection/NN/connection with/IN/with minimum/JJ/minimum spanning/NN/spanning trees/NNP/trees. and/CC/and length/NN/length in/IN/in connection/NN/connection with/IN/with tours/NNP/tours. so/RB/so /,/, i/PRP/i am/VBP/am sticking/VBG/sticking to/TO/to those/DT/those /,/, stick/NN/stick into/IN/into that/DT/that /,/, but/CC/but really/RB/really length/JJ/length and/CC/and weight/NN/weight are/VBP/are the/DT/the same/NNP/same. so/RB/so /,/, the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path has/VBZ/has to/TO/to be/VB/be greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the weight/NN/weight of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. it/PRP/it will/MD/will be/VB/be equal/JJ/equal /,/, if/IN/if the/DT/the path/NN/path itself/PRP/itself happens/VBZ/happens to/TO/to be/VB/be the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. but/CC/but /,/, the/DT/the length/NN/length of/IN/of the/DT/the tour/NN/tour is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the length/NN/length of/IN/of the/DT/the path/NNP/path. because/IN/because /,/, the/DT/the tour/NN/tour in/IN/in fact/NN/fact /,/, contained/VBD/contained an/DT/an extra/JJ/extra edge/NNP/edge. and/CC/and therefore/RB/therefore /,/, the/DT/the length/NN/length of/IN/of the/DT/the tour/NN/tour is/VBZ/is also/RB/also bigger/JJR/bigger than/IN/than the/DT/the weight/NN/weight of/IN/of the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. but/CC/but /,/, this/DT/this minimum/JJ/minimum spanning/NN/spanning tree/NN/tree has/VBZ/has beat/VBN/beat l/NNP/l. and/CC/and therefore/RB/therefore /,/, we/PRP/we are/VBP/are done/NNP/done. so/RB/so /,/, the/DT/the length/NN/length of/IN/of the/DT/the optimal/JJ/optimal tour/NN/tour is/VBZ/is bigger/JJR/bigger than/IN/than l/NNP/l. so/RB/so /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 23/CD/23 /:/: 32/CD/32 /CD/) /CD/) we/PRP/we have/VBP/have proved/VBN/proved this/NNP/this. we/PRP/we have/VBP/have established/VBN/established a/DT/a lower/JJR/lower bound/NN/bound l/NN/l on/IN/on the/DT/the length/NN/length opt/NN/opt of/IN/of the/DT/the optimal/JJ/optimal tour/NNP/tour. now/RB/now /,/, we/PRP/we want/VBP/want to/TO/to argue/VB/argue /,/, we/PRP/we want/VBP/want to/TO/to construct/VB/construct a/DT/a tour/NN/tour and/CC/and argue/NN/argue that/IN/that it/PRP/it is/VBZ/is length/NN/length is/VBZ/is at/IN/at most/JJS/most 2/CD/2 times/NNS/times l/NNP/l. and/CC/and once/RB/once we/PRP/we are/VBP/are done/VBN/done /,/, we/PRP/we will/MD/will have/VB/have proved/VBN/proved our/PRP$/our result/NNP/result. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 56/CD/56 /CD/) so/RB/so /,/, here/RB/here is/VBZ/is have/VBP/have you/PRP/you construct/VBP/construct a/DT/a tour/NN/tour with/IN/with length/NN/length less/JJR/less than/IN/than 2/CD/2 times/NNS/times l/NNP/l. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to give/VB/give you/PRP/you the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, first/JJ/first we/PRP/we find/VBP/find a/DT/a minimum/JJ/minimum spanning/NN/spanning tree/NN/tree /,/, which/WDT/which allows/VBZ/allows us/PRP/us to/TO/to determine/VB/determine the/DT/the l/NNP/l. so/RB/so /,/, the/DT/the weight/NN/weight of/IN/of the/DT/the tree/NN/tree is/VBZ/is l/NNP/l. we/PRP/we can/MD/can actually/RB/actually /,/, write/JJ/write this/DT/this down/NNP/down. we/PRP/we can/MD/can find/VB/find the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. and/CC/and we/PRP/we can/MD/can find/VB/find it/PRP/it is/VBZ/is weight/VBN/weight and/CC/and that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be l/JJ/l /,/, the/DT/the lower/JJR/lower bound/NNP/bound. next/JJ/next /,/, we/PRP/we do/VBP/do a/DT/a dfs/NNS/dfs /,/, a/DT/a dfs/NN/dfs traversal/NN/traversal depth/NN/depth first/RB/first traversal/JJ/traversal of/IN/of t/NN/t or/CC/or do/VBP/do a/DT/a depth/NN/depth first/RB/first search/NN/search of/IN/of t/NNP/t. and/CC/and we/PRP/we look/VBP/look at/IN/at /,/, the/DT/the sequence/NN/sequence of/IN/of vertices/NNS/vertices that/WDT/that get/VB/get visited/NNP/visited. and/CC/and that/IN/that sequences/NNS/sequences return/VBP/return out/RP/out as/RB/as e/NNP/e. so/IN/so /,/, let/VB/let us/PRP/us take/VB/take our/PRP$/our graph/NN/graph and/CC/and let/VB/let us/PRP/us look/VB/look at/IN/at that/DT/that sequence/NNP/sequence. so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our graph/NN/graph /:/( /:/( refer/NN/refer time/NN/time /:/: 24/CD/24 /:/: 49/CD/49 /CD/) /CD/) /./. now/RB/now /,/, we/PRP/we start/VBP/start at/IN/at 1/CD/1 and/CC/and if/IN/if we/PRP/we are/VBP/are doing/VBG/doing the/DT/the depth/NN/depth first/RB/first search/NN/search well/RB/well there/RB/there could/MD/could be/VB/be many/JJ/many ways/NNS/ways /,/, in/IN/in which/WDT/which we/PRP/we do/VBP/do the/DT/the depth/NN/depth first/RB/first search/NNP/search. so/RB/so /,/, first/JJ/first of/IN/of all/DT/all i/PRP/i have/VBP/have to/TO/to identify/VB/identify /,/, what/WDT/what this/DT/this tree/NN/tree t/NN/t is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so /,/, clearly/RB/clearly this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the tree/NN/tree t/NNP/t. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NN/tree in/IN/in this/DT/this graph/NN/graph the/DT/the red/NN/red edges/NNP/edges. now/RB/now /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to do/VB/do a/DT/a depth/NN/depth first/RB/first traversal/JJ/traversal of/IN/of this/DT/this tree/NN/tree /,/, say/VB/say starting/VBG/starting at/IN/at vertex/NN/vertex 1/CD/1 /,/, what/WP/what would/MD/would i/VB/i get/VB/get ?/./? so/RB/so /,/, from/IN/from here/RB/here /,/, let/VB/let me/PRP/me just/RB/just use/VBP/use red/VBN/red again/NNP/again. so/RB/so /,/, from/IN/from here/RB/here i/PRP/i would/MD/would visit/VB/visit 2/CD/2. then/RB/then from/IN/from here/RB/here i/PRP/i would/MD/would visit/VB/visit 3/CD/3. then/RB/then i/PRP/i would/MD/would go/VB/go back/RB/back /,/, then/RB/then i/PRP/i would/MD/would go/VB/go forward/NNP/forward. then/RB/then i/PRP/i would/MD/would go/VB/go back/RB/back /,/, then/RB/then i/PRP/i would/MD/would go/VB/go forward/NNP/forward. and/CC/and so/RB/so the/DT/the e/NN/e that/IN/that i/PRP/i get/VBP/get is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, i/PRP/i start/VBP/start with/IN/with 1/CD/1 /,/, then/RB/then i/PRP/i go/VBP/go to/TO/to 2/CD/2 /,/, then/RB/then i/PRP/i go/VBP/go to/TO/to 3/CD/3 /,/, then/RB/then go/VB/go to/TO/to 2/CD/2 /,/, then/RB/then i/PRP/i go/VBP/go to/TO/to 4/CD/4 /,/, then/RB/then i/PRP/i go/VBP/go to/TO/to 2/CD/2 and/CC/and then/RB/then i/PRP/i go/VBP/go to/TO/to 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be my/PRP$/my sequence/NN/sequence e/NN/e /,/, so/RB/so 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 2/CD/2 /,/, 4/CD/4 /,/, 2/CD/2 /,/, 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how i/PRP/i have/VBP/have constructed/VBN/constructed e/NNP/e. now/RB/now /,/, the/DT/the idea/NN/idea is/VBZ/is that/IN/that if/IN/if d/JJ/d appears/NNS/appears /,/, more/RBR/more than/IN/than once/RB/once in/IN/in e/NNP/e. so/RB/so /,/, there/EX/there are/VBP/are several/JJ/several vertices/NNS/vertices /,/, which/WDT/which appear/JJ/appear more/RBR/more than/IN/than once/NNP/once. we/PRP/we are/VBP/are going/VBG/going to/TO/to delete/VB/delete it/PRP/it is/VBZ/is first/JJ/first appearance/NNP/appearance. so/RB/so /,/, 1/CD/1 appears/NNS/appears more/JJR/more than/IN/than once/RB/once /,/, but/CC/but this/DT/this 1/CD/1 is/VBZ/is really/RB/really the/DT/the /NN/( /:/( refer/NN/refer time/NN/time /:/: 26/CD/26 /:/: 28/CD/28 /CD/) /CD/) same/JJ/same as/IN/as this/DT/this 1/CD/1 /,/, because/IN/because the/DT/the tour/NN/tour is/VBZ/is just/RB/just closing/NNP/closing. so/RB/so /,/, we/PRP/we do/VBP/do not/RB/not worry/VB/worry about/IN/about this/NNP/this. so/RB/so /,/, the/DT/the first/JJ/first that/IN/that appears/NNS/appears more/RBR/more than/IN/than once/RB/once is/VBZ/is this/DT/this 2/CD/2. so/RB/so /,/, now/RB/now we/PRP/we are/VBP/are going/VBG/going to/TO/to delete/VB/delete it/NNP/it. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to replace/VB/replace it/PRP/it by/IN/by the/DT/the direct/JJ/direct edge/NNP/edge. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to delete/VB/delete 1/CD/1 to/TO/to 2/CD/2 and/CC/and 2/CD/2 to/TO/to 3/CD/3. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to replace/VB/replace it/PRP/it by/IN/by a/DT/a direct/JJ/direct edge/NNP/edge. or/CC/or maybe/VB/maybe i/PRP/i will/MD/will use/VB/use black/JJ/black this/DT/this fine/NN/fine /,/, this/DT/this will/MD/will be/VB/be perfectly/RB/perfectly understandable/NNP/understandable. and/CC/and then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to repeat/VB/repeat the/DT/the previous/JJ/previous step/NN/step while/IN/while possible/NNP/possible. so/RB/so /,/, if/IN/if a/DT/a vertex/NN/vertex appears/VBZ/appears several/JJ/several times/NNS/times /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to short/JJ/short circuit/NN/circuit it/PRP/it /,/, we/PRP/we are/VBP/are going/VBG/going short/JJ/short cut/NN/cut it/NNP/it. so/RB/so /,/, our/PRP$/our current/JJ/current e/NN/e now/RB/now is/VBZ/is going/VBG/going to/TO/to be/VB/be this/DT/this /,/, we/PRP/we have/VBP/have just/RB/just removed/VBN/removed this/NNP/this. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 27/CD/27 /:/: 14/CD/14 /CD/) /CD/) so/RB/so /,/, the/DT/the next/JJ/next vertex/NN/vertex that/WDT/that appears/VBZ/appears twice/NN/twice is/VBZ/is 2/CD/2. it/PRP/it already/RB/already appeared/VBD/appeared /,/, but/CC/but it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be 2/CD/2. it/PRP/it could/MD/could be/VB/be another/DT/another vertex/NN/vertex /,/, but/CC/but in/IN/in this/DT/this case/NN/case it/PRP/it just/RB/just happens/VBZ/happens to/TO/to be/VB/be 2/CD/2. so/RB/so /,/, we/PRP/we are/VBP/are again/RB/again going/VBG/going to/TO/to delete/VB/delete it/PRP/it is/VBZ/is first/JJ/first occurrence/NNP/occurrence. so/RB/so /,/, if/IN/if we/PRP/we delete/VBP/delete it/PRP/it is/VBZ/is first/JJ/first occurrence/NN/occurrence what/WP/what does/VBZ/does it/PRP/it mean/VB/mean /,/, instead/RB/instead of/IN/of going/VBG/going from/IN/from 3/CD/3 to/TO/to 2/CD/2 and/CC/and 2/CD/2 to/TO/to 4/CD/4. we/PRP/we are/VBP/are going/VBG/going to/TO/to remove/VB/remove these/DT/these edges/NNS/edges and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to replace/VB/replace it/PRP/it with/IN/with this/DT/this direct/JJ/direct edge/NNP/edge. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to keep/VB/keep on/IN/on doing/VBG/doing this/DT/this step/NN/step as/IN/as many/JJ/many times/NNS/times as/IN/as needed/NNP/needed. and/CC/and at/IN/at the/DT/the end/NN/end we/PRP/we are/VBP/are going/VBG/going to/TO/to return/VB/return e/NNP/e. so/RB/so /,/, let/VB/let me/PRP/me draw/VB/draw another/DT/another picture/NN/picture to/TO/to show/VB/show you/PRP/you what/WP/what this/DT/this e/NN/e /,/, that/IN/that was/VBD/was that/IN/that is/VBZ/is to/TO/to be/VB/be return/NN/return is/VBZ/is ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 02/CD/02 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our vertex/NN/vertex 1/CD/1 /,/, vertex/NN/vertex 2/CD/2 /,/, vertex/NN/vertex 3/LS/3 /,/, vertex/NN/vertex 4/CD/4. so/RB/so /,/, in/IN/in our/PRP$/our so/RB/so original/JJ/original tour/NN/tour was/VBD/was 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 2/CD/2 /,/, 4/CD/4 /,/, 2/CD/2 /,/, 1/CD/1. so/RB/so /,/, we/PRP/we removed/VBD/removed this/DT/this 2/CD/2 and/CC/and then/RB/then we/PRP/we removed/VBD/removed this/DT/this 2/CD/2 and/CC/and we/PRP/we were/VBD/were left/VBN/left with/IN/with this/NNP/this. so/RB/so /,/, our/PRP$/our e/NN/e that/WDT/that remains/VBZ/remains at/IN/at the/DT/the end/NN/end is/VBZ/is going/VBG/going to/TO/to be/VB/be this/DT/this so/RB/so /,/, going/VBG/going directly/RB/directly from/IN/from 1/CD/1 to/TO/to 3/CD/3 /,/, then/RB/then going/VBG/going directly/RB/directly from/IN/from 3/CD/3 to/TO/to 4/CD/4 then/RB/then 4/CD/4 to/TO/to 2/CD/2 and/CC/and 2/CD/2 to/TO/to 1/CD/1. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the e/NN/e that/IN/that we/PRP/we would/MD/would be/VB/be returning/NNP/returning. this/DT/this is/VBZ/is the/DT/the claimed/VBN/claimed final/JJ/final answer/NNP/answer. so/RB/so /,/, let/VB/let us/PRP/us go/VB/go over/IN/over each/DT/each step/NNP/step. and/CC/and we/PRP/we will/MD/will very/RB/very about/IN/about how/WRB/how exactly/RB/exactly it/PRP/it is/VBZ/is done/NNP/done. so/RB/so /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 29/CD/29 /:/: 10/CD/10 /CD/) /CD/) the/DT/the first/JJ/first step/NN/step is/VBZ/is done/VBN/done as/RB/as is/VBZ/is finding/VBG/finding the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. so/RB/so /,/, how/WRB/how long/JJ/long does/VBZ/does it/PRP/it take/VB/take ?/./? well/RB/well /,/, if/IN/if we/PRP/we use/VBP/use prims/NNS/prims algorithm/VBP/algorithm it/PRP/it will/MD/will take/VB/take something/NN/something like/IN/like e/NN/e plus/CC/plus v/NN/v log/NN/log v/NN/v /,/, so/RB/so clearly/RB/clearly polynomial/JJ/polynomial time/NNP/time. how/WRB/how long/JJ/long does/VBZ/does this/DT/this take/NN/take /,/, this/DT/this is/VBZ/is just/RB/just depth/JJ/depth first/JJ/first search/NNP/search. so/RB/so /,/, it/PRP/it takes/VBZ/takes time/NN/time linear/NNP/linear. in/IN/in fact/NN/fact /,/, so/RB/so this/DT/this time/NN/time is/VBZ/is less/JJR/less than/IN/than this/DT/this time/NNP/time. so/RB/so /,/, now/RB/now let/VB/let us/PRP/us worry/VB/worry about/NNP/about. so/RB/so /,/, these/DT/these steps/NNS/steps are/VBP/are again/RB/again going/VBG/going to/TO/to be/VB/be fairly/RB/fairly straightforward/NNP/straightforward. so/RB/so /,/, let/VB/let us/PRP/us not/RB/not worry/VBP/worry about/IN/about the/DT/the time/NNP/time. but/CC/but /,/, let/VB/let us/PRP/us worry/VB/worry about/IN/about the/DT/the correctness/NNP/correctness. so/RB/so /,/, once/RB/once we/PRP/we find/VBP/find this/DT/this e/NN/e /,/, we/PRP/we eventually/RB/eventually we/PRP/we modify/VBP/modify it/PRP/it and/CC/and eventually/RB/eventually return/VB/return e/NNP/e. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try to/TO/to figure/VB/figure out/RP/out some/DT/some properties/NNS/properties of/IN/of e/NNP/e. so/RB/so /,/, my/PRP$/my first/JJ/first claim/NN/claim is/VBZ/is that/IN/that weight/NN/weight of/IN/of e/NN/e after/IN/after the/DT/the step/NN/step 2/CD/2 is/VBZ/is going/VBG/going to/TO/to be/VB/be twice/NN/twice l/NNP/l. so/RB/so /,/, that/IN/that actually/RB/actually /,/, is/VBZ/is obvious/JJ/obvious from/IN/from this/DT/this picture/NNP/picture. but/CC/but i/PRP/i will/MD/will just/RB/just draw/VB/draw it/PRP/it again/NNP/again. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 19/CD/19 /CD/) so/RB/so /,/, our/PRP$/our graph/NN/graph was/VBD/was this/NNP/this. and/CC/and our/PRP$/our tour/NN/tour was/VBD/was this/NNP/this. so/RB/so /,/, notice/NN/notice that/IN/that our/PRP$/our tour/NN/tour used/VBN/used every/DT/every edge/NN/edge our/PRP$/our tour/NN/tour e/NN/e /,/, the/DT/the original/JJ/original value/NN/value of/IN/of tour/PRP$/tour e/NN/e used/VBN/used every/DT/every edge/NN/edge twice/NNP/twice. this/DT/this is/VBZ/is going/VBG/going to/TO/to work/VB/work in/IN/in general/JJ/general /,/, yes/NNP/yes. on/IN/on every/DT/every tree/NN/tree it/PRP/it will/MD/will work/VB/work /,/, because/IN/because no/DT/no matter/NN/matter what/WP/what do/VBP/do you/PRP/you have/NNP/have. when/WRB/when you/PRP/you do/VBP/do the/DT/the tour/NN/tour starting/VBG/starting from/IN/from any/DT/any edge/NN/edge /,/, you/PRP/you go/VBP/go down/RP/down an/DT/an edge/NN/edge and/CC/and then/RB/then eventually/RB/eventually /,/, you/PRP/you come/VBP/come back/RB/back up/NNP/up. and/CC/and you/PRP/you have/VBP/have to/TO/to do/VB/do it/PRP/it exactly/RB/exactly once/NNP/once. so/RB/so /,/, clearly/RB/clearly every/DT/every edge/NN/edge will/MD/will appear/VB/appear twice/NN/twice /:/( /:/( refer/NN/refer time/NN/time /:/: 31/CD/31 /:/: 01/CD/01 /CD/) /CD/) in/IN/in this/DT/this e/NNP/e. and/CC/and therefore/RB/therefore /,/, the/DT/the weight/NN/weight is/VBZ/is going/VBG/going to/TO/to be/VB/be twice/NN/twice the/DT/the length/NN/length of/IN/of the/DT/the tree/NN/tree /,/, twice/NN/twice the/DT/the total/NN/total weight/NN/weight of/IN/of the/DT/the tree/NNP/tree. but/CC/but /,/, the/DT/the weight/NN/weight of/IN/of the/DT/the tree/NN/tree itself/PRP/itself is/VBZ/is l/NNP/l. and/CC/and so/RB/so the/DT/the weight/NN/weight of/IN/of e/NN/e after/IN/after the/DT/the step/NN/step 2/CD/2 is/VBZ/is going/VBG/going to/TO/to be/VB/be twice/NN/twice l/NNP/l. the/DT/the other/JJ/other property/NN/property about/IN/about e/NN/e that/IN/that is/VBZ/is important/JJ/important is/VBZ/is that/IN/that e/NN/e must/MD/must contain/VB/contain all/DT/all the/DT/the vertices/NNS/vertices in/IN/in t/NNP/t. e/NN/e has/VBZ/has to/TO/to contain/VB/contain all/DT/all the/DT/the vertices/NNS/vertices in/IN/in t/NNP/t. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a tour/NN/tour the/DT/the only/JJ/only problem/NN/problem is/VBZ/is that/IN/that it/PRP/it contains/VBZ/contains some/DT/some vertices/NNS/vertices more/RBR/more than/IN/than once/NNP/once. and/CC/and that/IN/that is/VBZ/is why/WRB/why /,/, it/PRP/it can/MD/can not/RB/not be/VB/be it/PRP/it is/VBZ/is not/RB/not a/DT/a good/JJ/good tour/NN/tour for/IN/for us/NNP/us. so/RB/so /,/, if/IN/if v/NN/v appears/VBZ/appears more/JJR/more than/IN/than once/RB/once in/IN/in e/NN/e /,/, we/PRP/we remove/VBP/remove the/DT/the first/JJ/first appearance/NNP/appearance. so/RB/so /,/, this/DT/this is/VBZ/is good/NNP/good. because/IN/because /,/, we/PRP/we are/VBP/are going/VBG/going towards/NNS/towards making/VBG/making sure/NN/sure that/IN/that every/DT/every vertex/NN/vertex appears/VBZ/appears only/RB/only once/NNP/once. but/CC/but /,/, what/WP/what is/VBZ/is this/DT/this due/JJ/due to/TO/to e/VB/e in/IN/in particular/JJ/particular does/NNS/does it/PRP/it do/VBP/do anything/NN/anything bad/JJ/bad to/TO/to the/DT/the weight/NN/weight of/IN/of e/NNP/e. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the important/JJ/important claim/NNP/claim. the/DT/the claim/NN/claim says/VBZ/says /,/, that/IN/that after/IN/after step/NN/step 3/CD/3 weight/NN/weight of/IN/of e/NN/e is/VBZ/is at/IN/at most/JJS/most twice/NN/twice l/NNP/l. it/PRP/it can/MD/can only/RB/only decrease/NNP/decrease. now/RB/now /,/, this/DT/this is/VBZ/is the/DT/the main/JJ/main part/NN/part of/IN/of the/DT/the argument/NNP/argument. and/CC/and the/DT/the proof/NN/proof is/VBZ/is actually/RB/actually /,/, quite/RB/quite simple/NNP/simple. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the new/JJ/new weight/NN/weight ?/./? the/DT/the new/JJ/new weight/NN/weight is/VBZ/is the/DT/the old/JJ/old weight/NNP/weight. and/CC/and suppose/VB/suppose v/NN/v was/VBD/was the/DT/the edge/NN/edge we/PRP/we deleted/NNP/deleted. so/RB/so /,/, let/VB/let me/PRP/me take/VB/take a/DT/a picture/NN/picture to/TO/to explain/VB/explain this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 25/CD/25 /CD/) so/IN/so /,/, this/DT/this was/VBD/was a/DT/a portion/NN/portion of/IN/of e/NN/e and/CC/and this/DT/this is/VBZ/is the/DT/the vertex/NN/vertex v/NN/v /,/, which/WDT/which we/PRP/we are/VBP/are deleting/NNP/deleting. how/WRB/how do/VBP/do we/PRP/we deleted/VBD/deleted /,/, we/PRP/we take/VBP/take the/DT/the previous/JJ/previous vertex/NN/vertex /,/, which/WDT/which we/PRP/we call/VBP/call u/NNP/u. let/NN/let us/PRP/us call/VBP/call it/PRP/it u/VBP/u /,/, we/PRP/we take/VBP/take the/DT/the next/JJ/next vertex/NN/vertex /,/, we/PRP/we call/VBP/call it/PRP/it w/NNP/w. and/CC/and we/PRP/we removed/VBD/removed these/DT/these two/CD/two edges/NNP/edges. and/CC/and we/PRP/we put/VBD/put down/RP/down this/DT/this edge/NNP/edge. so/RB/so /,/, what/WDT/what happens/NNS/happens to/TO/to the/DT/the total/JJ/total weight/NN/weight ?/./? well/RB/well /,/, the/DT/the total/JJ/total weight/NN/weight now/RB/now becomes/VBZ/becomes the/DT/the old/JJ/old weight/NN/weight plus/CC/plus what/WP/what we/PRP/we put/VBD/put in/RP/in or/CC/or minus/CC/minus what/WP/what we/PRP/we removed/NNP/removed. so/RB/so /,/, minus/CC/minus what/WP/what we/PRP/we removed/VBD/removed is/VBZ/is so/RB/so minus/RB/minus of/IN/of d/NN/d of/IN/of u/NN/u /,/, v/NNP/v. and/CC/and we/PRP/we also/RB/also removed/VBD/removed this/DT/this plus/NN/plus d/VBD/d of/IN/of v/NN/v /,/, w/NNP/w. and/CC/and we/PRP/we put/VBD/put in/RP/in u/NN/u /,/, w/NNP/w. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the new/JJ/new weight/NNP/weight. that/WDT/that is/VBZ/is what/WP/what we/PRP/we have/VBP/have written/VBN/written down/RP/down over/IN/over here/NNP/here. but/CC/but /,/, notice/NN/notice that/IN/that these/DT/these are/VBP/are two/CD/two sides/NNS/sides of/IN/of a/DT/a triangle/NNP/triangle. and/CC/and this/DT/this is/VBZ/is the/DT/the third/JJ/third side/NN/side essentially/NNP/essentially. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the straight/JJ/straight path/NN/path and/CC/and this/DT/this is/VBZ/is the/DT/the cross/NN/cross path/NNP/path. so/RB/so /,/, which/WDT/which of/IN/of these/DT/these two/CD/two is/VBZ/is bigger/JJR/bigger ?/./? so/RB/so /,/, clearly/RB/clearly this/DT/this one/CD/one is/VBZ/is going/VBG/going to/TO/to be/VB/be bigger/JJR/bigger /,/, if/IN/if at/IN/at all/NNP/all. and/CC/and therefore/RB/therefore /,/, we/PRP/we know/VBP/know that/IN/that this/DT/this entire/JJ/entire thing/NN/thing has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/-NONE-/0 or/CC/or therefore/RB/therefore /,/, the/DT/the whole/JJ/whole thing/NN/thing is/VBZ/is at/IN/at most/JJS/most old/NNP/old. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that the/DT/the new/JJ/new weight/NN/weight is/VBZ/is at/IN/at most/JJS/most the/DT/the /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 34/CD/34 /:/: 01/CD/01 /CD/) /CD/) old/JJ/old weight/NNP/weight. the/DT/the old/JJ/old weight/NN/weight was/VBD/was twice/NN/twice l/NNP/l. and/CC/and so/RB/so the/DT/the new/JJ/new weight/NN/weight is/VBZ/is also/RB/also twice/NN/twice l/NNP/l. so/RB/so /,/, if/IN/if we/PRP/we keep/VBP/keep on/IN/on repeating/VBG/repeating this/DT/this step/NN/step as/IN/as many/JJ/many times/NNS/times as/IN/as we/PRP/we can/MD/can what/WP/what happens/NNS/happens /,/, the/DT/the weight/NN/weight keeps/VBZ/keeps on/IN/on reducing/NNP/reducing. so/IN/so /,/, it/PRP/it will/MD/will always/RB/always be/VB/be bigger/JJR/bigger than/IN/than /,/, it/PRP/it will/MD/will always/RB/always be/VB/be smaller/JJR/smaller than/IN/than twice/NN/twice l/NNP/l. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that the/DT/the weight/NN/weight of/IN/of e/NN/e is/VBZ/is always/RB/always going/VBG/going to/TO/to be/VB/be at/IN/at most/JJS/most twice/NN/twice l/NNP/l. so/RB/so /,/, the/DT/the final/JJ/final claim/NN/claim is/VBZ/is that/IN/that just/RB/just before/IN/before we/PRP/we return/VBP/return of/IN/of course/NN/course /,/, the/DT/the weight/NN/weight is/VBZ/is going/VBG/going to/TO/to be/VB/be at/IN/at most/JJS/most twice/NN/twice l/NNP/l. but/CC/but /,/, e/VBP/e is/VBZ/is also/RB/also going/VBG/going to/TO/to have/VB/have every/DT/every vertex/NN/vertex exactly/RB/exactly once/NNP/once. why/WRB/why is/VBZ/is that/IN/that ?/./? well/RB/well /,/, we/PRP/we repeated/VBD/repeated until/IN/until no/DT/no vertex/NN/vertex appeared/VBD/appeared more/JJR/more than/IN/than once/NNP/once. so/RB/so /,/, clearly/RB/clearly no/DT/no vertex/NN/vertex appears/VBZ/appears more/JJR/more than/IN/than once/NNP/once. but/CC/but /,/, initially/RB/initially every/DT/every vertex/NN/vertex did/VBD/did appear/JJ/appear at/IN/at least/JJS/least once/NNP/once. and/CC/and therefore/RB/therefore /,/, finally/RB/finally /,/, every/DT/every vertex/NN/vertex appears/VBZ/appears exactly/RB/exactly once/NNP/once. and/CC/and so/RB/so therefore/RB/therefore /,/, e/NN/e is/VBZ/is a/DT/a tour/NN/tour every/DT/every vertex/NN/vertex appears/VBZ/appears once/NNP/once. and/CC/and it/PRP/it is/VBZ/is weight/VBN/weight is/VBZ/is twice/NN/twice l/NNP/l. l/NN/l is/VBZ/is lower/JJR/lower bound/NN/bound and/CC/and therefore/RB/therefore /,/, we/PRP/we are/VBP/are done/NNP/done. the/DT/the final/JJ/final issue/NN/issue is/VBZ/is there/EX/there might/MD/might be/VB/be some/DT/some question/NN/question about/IN/about the/DT/the time/NN/time required/VBN/required for/IN/for this/DT/this part/NNP/part. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a very/RB/very nice/JJ/nice simple/NN/simple observation/NN/observation /,/, which/WDT/which says/VBZ/says that/IN/that this/DT/this entire/JJ/entire thing/NN/thing can/MD/can be/VB/be done/VBN/done in/IN/in linear/JJ/linear time/NNP/time. what/WP/what does/VBZ/does this/DT/this loop/NN/loop do/VBP/do ?/./? so/RB/so /,/, it/PRP/it says/VBZ/says /,/, if/IN/if v/NN/v appears/VBZ/appears more/JJR/more than/IN/than once/RB/once /,/, delete/JJ/delete the/DT/the first/JJ/first appearance/NNP/appearance. but/CC/but /,/, what/WP/what if/IN/if v/NN/v appears/VBZ/appears several/JJ/several times/NNS/times /,/, then/RB/then we/PRP/we will/MD/will delete/VB/delete all/DT/all /,/, but/CC/but the/DT/the last/JJ/last appearance/NNP/appearance. and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be true/JJ/true for/IN/for every/DT/every vertex/NNP/vertex. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to keep/VB/keep only/RB/only the/DT/the last/JJ/last appearance/NN/appearance of/IN/of every/DT/every vertex/NN/vertex in/IN/in this/DT/this traversal/NN/traversal e/NNP/e. but/CC/but /,/, what/WP/what is/VBZ/is that/IN/that /,/, we/PRP/we know/VBP/know that/NNP/that. when/WRB/when you/PRP/you do/VBP/do graph/JJ/graph search/NN/search /,/, we/PRP/we should/MD/should do/VB/do a/DT/a post/NN/post order/NN/order traversal/NN/traversal that/WDT/that is/VBZ/is exactly/RB/exactly what/WP/what this/DT/this is/NNP/is. and/CC/and therefore/RB/therefore /,/, the/DT/the time/NN/time for/IN/for this/DT/this steps/NNS/steps 3/CD/3 and/CC/and 4/CD/4 together/RP/together is/VBZ/is at/IN/at most/JJS/most the/DT/the time/NN/time for/IN/for a/DT/a breadth/NN/breadth for/IN/for a/DT/a depth/NN/depth first/RB/first search/NNP/search. and/CC/and therefore/RB/therefore /,/, it/PRP/it is/VBZ/is just/RB/just o/RB/o of/IN/of the/DT/the number/NN/number of/IN/of edges/NNS/edges plus/CC/plus the/DT/the number/NN/number of/IN/of vertices/NNP/vertices. so/RB/so /,/, the/DT/the total/JJ/total time/NN/time is/VBZ/is just/RB/just simply/RB/simply is/VBZ/is dominated/VBN/dominated by/IN/by the/DT/the time/NN/time for/IN/for finding/NN/finding the/DT/the minimum/JJ/minimum spanning/NN/spanning tree/NNP/tree. and/CC/and therefore/RB/therefore /,/, it/PRP/it is/VBZ/is e/JJ/e plus/NN/plus v/NN/v log/NN/log v/NN/v /,/, say/VB/say using/VBG/using prims/NNS/prims algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 41/CD/41 /CD/) let/NN/let us/PRP/us now/RB/now consider/VBP/consider the/DT/the next/JJ/next problem/NNP/problem. the/DT/the next/JJ/next problem/NN/problem is/VBZ/is precedence/NN/precedence constraint/NN/constraint scheduling/VBG/scheduling /,/, which/WDT/which is/VBZ/is also/RB/also an/DT/an np/NN/np complete/NN/complete problem/NNP/problem. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to find/VB/find a/DT/a polynomial/JJ/polynomial time/NN/time approximation/NN/approximation algorithm/NN/algorithm for/IN/for this/NNP/this. the/DT/the input/NN/input to/TO/to this/DT/this problem/NN/problem has/VBZ/has two/CD/two parts/NNP/parts. the/DT/the first/JJ/first part/NN/part is/VBZ/is a/DT/a directed/VBN/directed acyclic/JJ/acyclic graph/NN/graph g/NNP/g. vertices/NNS/vertices in/IN/in this/DT/this graph/NN/graph /,/, represent/NN/represent unit/NN/unit time/NN/time tasks/NNP/tasks. and/CC/and there/EX/there is/VBZ/is an/DT/an arc/NN/arc directed/VBN/directed edge/NN/edge going/VBG/going from/IN/from u/NN/u to/TO/to v/VB/v corresponding/NN/corresponding to/TO/to the/DT/the restriction/NN/restriction that/IN/that vertex/NN/vertex u/NN/u must/MD/must execute/VB/execute before/IN/before vertex/NN/vertex v/CC/v. so/RB/so /,/, there/EX/there is/VBZ/is a/DT/a precedence/NN/precedence constraint/NN/constraint from/IN/from u/NN/u to/TO/to v/NNP/v. and/CC/and therefore/RB/therefore the/DT/the name/NN/name of/IN/of this/DT/this problem/NNP/problem. you/PRP/you are/VBP/are also/RB/also given/VBN/given as/IN/as a/DT/a part/NN/part of/IN/of the/DT/the input/NN/input /,/, and/CC/and integer/NN/integer p/NN/p /,/, where/WRB/where p/NN/p denotes/VBZ/denotes the/DT/the number/NN/number of/IN/of available/JJ/available processors/NNP/processors. so/RB/so /,/, p/NN/p is/VBZ/is the/DT/the number/NN/number of/IN/of tasks/NNS/tasks that/WDT/that you/PRP/you can/MD/can perform/VB/perform at/IN/at each/DT/each step/NNP/step. you/PRP/you may/MD/may not/RB/not be/VB/be able/JJ/able to/TO/to find/VB/find that/IN/that many/JJ/many task/NNP/task. but/CC/but certainly/RB/certainly /,/, you/PRP/you can/MD/can not/RB/not perform/VB/perform more/JJR/more than/IN/than p/NN/p tasks/NNS/tasks at/IN/at each/DT/each step/NNP/step. for/IN/for the/DT/the output/NN/output we/PRP/we require/VBP/require to/TO/to specify/VB/specify an/DT/an integer/NN/integer time/NN/time of/IN/of execution/NN/execution t/NN/t of/IN/of u/NN/u for/IN/for each/DT/each vertex/NN/vertex u/NNP/u. such/JJ/such that/IN/that /,/, first/JJ/first of/IN/of all/DT/all t/NN/t of/IN/of u/NN/u is/VBZ/is greater/JJR/greater than/IN/than 0/CD/0. and/CC/and at/IN/at most/JJS/most p/NN/p vertices/NNS/vertices has/VBZ/has the/DT/the same/JJ/same time/NN/time of/IN/of execution/NNP/execution. furthermore/IN/furthermore /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an arc/NN/arc from/IN/from u/NN/u to/TO/to v/NNP/v. then/RB/then the/DT/the time/NN/time of/IN/of u/NN/u is/VBZ/is must/MD/must be/VB/be strictly/RB/strictly less/JJR/less than/IN/than the/DT/the time/NN/time of/IN/of v/NNP/v. remember/NN/remember that/WDT/that /,/, these/DT/these are/VBP/are integers/NNS/integers /,/, so/RB/so this/DT/this really/RB/really means/VBZ/means less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to so/RB/so there/RB/there is/VBZ/is a/DT/a difference/NN/difference of/IN/of at/IN/at least/JJS/least one/NNP/one. and/CC/and finally/RB/finally /,/, we/PRP/we want/VBP/want to/TO/to minimize/VB/minimize the/DT/the length/NN/length of/IN/of the/DT/the schedule/NNP/schedule. so/RB/so /,/, the/DT/the maximum/NN/maximum over/IN/over all/DT/all times/NNS/times is/VBZ/is as/RB/as small/JJ/small as/IN/as possible/NNP/possible. this/DT/this problem/NN/problem is/VBZ/is known/VBN/known to/TO/to be/VB/be np/NN/np complete/JJ/complete for/IN/for variable/JJ/variable p/NNP/p. so/RB/so /,/, if/IN/if p/NN/p /,/, p/NN/p changes/NNS/changes p/VBP/p is/VBZ/is allowed/VBN/allowed to/TO/to change/VB/change as/IN/as a/DT/a part/NN/part of/IN/of the/DT/the input/NNP/input. then/RB/then this/DT/this is/VBZ/is known/VBN/known to/TO/to be/VB/be np/NN/np complete/NNP/complete. here/RB/here is/VBZ/is one/CD/one lower/JJR/lower bound/NNP/bound. i/PRP/i claim/VBP/claim that/IN/that the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path in/IN/in this/DT/this graph/NN/graph is/VBZ/is a/DT/a lower/JJR/lower bound/NNP/bound. so/RB/so /,/, let/VB/let us/PRP/us do/VBP/do that/IN/that band/NNP/band. let/VB/let us/PRP/us see/VB/see that/IN/that and/CC/and for/IN/for that/DT/that let/NN/let us/PRP/us take/VBP/take an/DT/an example/NN/example as/IN/as well/NNP/well. so/RB/so /,/, let/VB/let us/PRP/us take/VB/take a/DT/a simple/JJ/simple graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 39/CD/39 /:/: 32/CD/32 /CD/) so/RB/so /,/, say/VB/say the/DT/the graph/NN/graph g/NN/g looks/NNS/looks something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, here/RB/here is/VBZ/is vertex/NN/vertex 1/CD/1 /,/, which/WDT/which is/VBZ/is one/CD/one task/NNP/task. here/RB/here is/VBZ/is vertex/NN/vertex 2/CD/2 /,/, which/WDT/which is/VBZ/is another/DT/another task/NNP/task. then/RB/then maybe/VB/maybe there/EX/there is/VBZ/is vertex/NN/vertex 3/CD/3 over/IN/over here/NNP/here. and/CC/and there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from 1/CD/1 to/TO/to 3/CD/3 /,/, there/EX/there is/VBZ/is vertex/NN/vertex 4/CD/4 /,/, there/EX/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from 1/CD/1 to/TO/to 4/CD/4 as/IN/as well/RB/well /,/, may/MD/may be/VB/be there/RB/there is/VBZ/is an/DT/an edge/NN/edge from/IN/from 2/CD/2 to/TO/to 4/CD/4 also/NNP/also. may/MD/may be/VB/be there/RB/there is/VBZ/is a/DT/a vertex/NN/vertex 5/CD/5. and/CC/and there/EX/there is/VBZ/is an/DT/an edge/NN/edge and/CC/and say/VB/say there/EX/there is/VBZ/is an/DT/an vertex/NN/vertex 6/CD/6 with/IN/with these/DT/these edges/NNP/edges. so/RB/so /,/, this/DT/this for/IN/for example/NN/example is/VBZ/is g/NNP/g. so/RB/so /,/, this/DT/this is/VBZ/is one/CD/one part/NN/part of/IN/of the/DT/the input/NNP/input. and/CC/and let/VB/let us/PRP/us say/VB/say p/NN/p is/VBZ/is equal/JJ/equal to/TO/to 2/CD/2. so/RB/so we/PRP/we want/VBP/want to/TO/to find/VB/find a/DT/a schedule/NNP/schedule. so/RB/so /,/, i/PRP/i claim/VBP/claim the/DT/the first/JJ/first lower/NN/lower bound/NN/bound /,/, which/WDT/which and/CC/and that/IN/that is/VBZ/is claimed/VBN/claimed in/IN/in the/DT/the first/JJ/first lower/NN/lower bound/NNP/bound. that/IN/that no/DT/no matter/NN/matter what/WP/what you/PRP/you do/VBP/do /,/, the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path is/VBZ/is lower/JJR/lower bound/NN/bound at/IN/at the/DT/the time/NN/time required/NNP/required. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 40/CD/40 /:/: 35/CD/35 /CD/) /CD/) so/RB/so /,/, the/DT/the idea/NN/idea is/VBZ/is actually/RB/actually fairly/RB/fairly simple/NNP/simple. so/RB/so /,/, let/VB/let us/PRP/us identify/VB/identify a/DT/a longest/NN/longest path/NN/path over/IN/over here/NNP/here. so/RB/so /,/, in/IN/in this/DT/this case/NN/case /,/, the/DT/the longest/JJS/longest path/NN/path is/VBZ/is quite/RB/quite simple/NNP/simple. so/RB/so /,/, say/VB/say for/IN/for example/NN/example /,/, this/DT/this is/VBZ/is the/DT/the longest/JJS/longest path/NNP/path. there/RB/there are/VBP/are several/JJ/several longest/JJS/longest paths/NNS/paths /,/, but/CC/but this/DT/this is/VBZ/is the/DT/the longest/JJS/longest path/NNP/path. what/WP/what is/VBZ/is this/DT/this length/NN/length ?/./? well/RB/well /,/, we/PRP/we are/VBP/are suppose/RB/suppose to/TO/to measure/VB/measure the/DT/the length/NN/length /,/, in/IN/in terms/NNS/terms of/IN/of the/DT/the vertices/NNS/vertices /,/, the/DT/the vertex/NN/vertex length/NNP/length. so/RB/so /,/, this/DT/this has/VBZ/has length/NN/length 3/CD/3. and/CC/and the/DT/the claim/NN/claim is/VBZ/is that/IN/that the/DT/the length/NN/length of/IN/of the/DT/the schedule/NN/schedule must/MD/must be/VB/be at/IN/at least/JJS/least 3/CD/3. why/WRB/why is/VBZ/is that/IN/that ?/./? well/NNP/well. the/DT/the precedence/NN/precedence constraints/NNS/constraints says/VBZ/says that/IN/that /,/, if/IN/if this/DT/this is/VBZ/is executed/VBN/executed at/IN/at step/NN/step 1/CD/1. whatever/NN/whatever step/NN/step it/PRP/it is/VBZ/is executed/VBN/executed /,/, at/IN/at this/DT/this can/MD/can not/RB/not be/VB/be executed/VBN/executed at/IN/at the/DT/the same/JJ/same step/NNP/step. so/IN/so /,/, it/PRP/it has/VBZ/has to/TO/to be/VB/be executed/VBN/executed one/CD/one step/NN/step later/NNP/later. this/DT/this has/VBZ/has to/TO/to be/VB/be executed/VBN/executed one/CD/one step/NN/step further/RB/further than/IN/than that/DT/that and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, whatever/IN/whatever the/DT/the length/NN/length of/IN/of the/DT/the graph/NN/graph is/VBZ/is that/IN/that many/JJ/many steps/NNS/steps are/VBP/are needed/VBN/needed for/IN/for this/DT/this execution/NNP/execution. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the first/JJ/first lower/NN/lower bound/NNP/bound. /NNP/( /NNP/( refer/NN/refer time/NN/time /:/: 41/CD/41 /:/: 36/CD/36 /CD/) /CD/) second/JJ/second lower/JJR/lower bound/NN/bound is/VBZ/is based/VBN/based on/IN/on how/WRB/how much/JJ/much load/NN/load can/MD/can be/VB/be consumed/VBN/consumed at/IN/at each/DT/each step/NNP/step. so/RB/so /,/, if/IN/if n/NN/n is/VBZ/is the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in g/NNP/g. how/WRB/how many/JJ/many time/NN/time steps/NNS/steps /,/, how/WRB/how many/JJ/many how/WRB/how many/JJ/many vertices/NNS/vertices can/MD/can be/VB/be consumed/VBN/consumed can/MD/can be/VB/be worked/VBN/worked on/IN/on by/IN/by the/DT/the p/NN/p processors/NNS/processors at/IN/at each/DT/each step/NNP/step. well/RB/well /,/, at/IN/at most/JJS/most p/NN/p and/CC/and therefore/RB/therefore /,/, n/NN/n over/IN/over p/NN/p steps/NNS/steps are/VBP/are at/IN/at least/JJS/least needed/NNP/needed. so/RB/so /,/, that/IN/that lower/JJR/lower bound/NN/bound in/IN/in this/DT/this case/NN/case is/VBZ/is 6/CD/6 upon/IN/upon 2/CD/2 which/WDT/which is/VBZ/is also/RB/also equal/JJ/equal to/TO/to 3/CD/3. so/RB/so /,/, the/DT/the first/JJ/first lower/NN/lower bound/NN/bound l/NN/l is/VBZ/is equal/JJ/equal to/TO/to 3/CD/3 the/DT/the second/JJ/second lower/NN/lower bound/NN/bound is/VBZ/is also/RB/also equal/JJ/equal to/TO/to 3/CD/3. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now consider/VBP/consider /,/, let/VB/let us/PRP/us now/RB/now examine/VBP/examine whether/IN/whether in/IN/in fact/NN/fact /,/, the/DT/the upper/JJ/upper bound/NN/bound for/IN/for this/DT/this matches/NNP/matches. so/RB/so /,/, is/VBZ/is it/PRP/it match/VBP/match ?/./? well/RB/well /,/, here/RB/here is/VBZ/is one/CD/one possible/JJ/possible schedule/NNP/schedule. so/RB/so /,/, we/PRP/we will/MD/will schedule/VB/schedule this/DT/this at/IN/at step/NN/step 1/CD/1. we/PRP/we will/MD/will schedule/VB/schedule this/DT/this also/RB/also at/IN/at step/NN/step 1/CD/1. and/CC/and in/IN/in fact/NN/fact /,/, that/IN/that is/VBZ/is our/PRP$/our only/RB/only choice/NNP/choice. next/JJ/next /,/, we/PRP/we have/VBP/have these/DT/these 3/CD/3. so/RB/so /,/, we/PRP/we can/MD/can pick/VB/pick say/VB/say this/DT/this we/PRP/we will/MD/will schedule/VB/schedule at/IN/at step/NN/step 2/CD/2. this/DT/this we/PRP/we will/MD/will schedule/VB/schedule at/IN/at step/NN/step 2/CD/2. this/DT/this is/VBZ/is ready/RB/ready to/TO/to be/VB/be scheduled/VBN/scheduled /,/, but/CC/but we/PRP/we can/MD/can not/RB/not schedule/VB/schedule it/PRP/it /,/, because/IN/because we/PRP/we only/RB/only have/VBP/have two/CD/two processors/NNP/processors. so/RB/so /,/, this/DT/this has/VBZ/has to/TO/to be/VB/be schedule/JJ/schedule at/IN/at step/NN/step 3/CD/3. this/DT/this we/PRP/we have/VBP/have a/DT/a processor/NN/processor available/NNP/available. but/CC/but /,/, this/DT/this can/MD/can not/RB/not be/VB/be scheduled/VBN/scheduled at/IN/at step/NN/step 3/CD/3 /,/, because/IN/because this/DT/this has/VBZ/has to/TO/to be/VB/be scheduled/VBN/scheduled only/RB/only after/IN/after this/NNP/this. so/RB/so /,/, this/DT/this has/VBZ/has to/TO/to be/VB/be scheduled/VBN/scheduled at/IN/at step/NN/step 4/CD/4. so/RB/so /,/, t/NN/t of/IN/of 1/CD/1 and/CC/and t/NN/t of/IN/of 2/CD/2 are/VBP/are both/DT/both 1/CD/1 ?/./? s/NNP/s. t/NN/t of/IN/of 3/CD/3 and/CC/and t/NN/t of/IN/of 4/CD/4 are/VBP/are both/DT/both 2/CD/2 ?/./? s/NNP/s. t/NN/t of/IN/of 5/CD/5 is/VBZ/is 3/CD/3 and/CC/and t/NN/t of/IN/of 6/CD/6 is/VBZ/is 4/CD/4. so/RB/so /,/, in/IN/in this/DT/this case/NN/case the/DT/the upper/NN/upper bound/NN/bound in/IN/in fact/NN/fact /,/, is/VBZ/is 4/CD/4 and/CC/and it/PRP/it is/VBZ/is bigger/JJR/bigger than/IN/than the/DT/the lower/JJR/lower bounds/NNP/bounds. so/RB/so /,/, now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to describe/VB/describe the/DT/the algorithm/NN/algorithm /,/, which/WDT/which will/MD/will get/VB/get /:/( /:/( refer/NN/refer time/NN/time /:/: 43/CD/43 /:/: 36/CD/36 /CD/) /CD/) within/IN/within twice/NN/twice the/DT/the best/JJS/best possible/JJ/possible schedule/NNP/schedule. and/CC/and it/PRP/it will/MD/will use/VB/use these/DT/these lower/JJR/lower bounds/NNP/bounds. and/CC/and it/PRP/it will/MD/will also/RB/also use/VB/use the/DT/the notion/NN/notion of/IN/of a/DT/a ready/JJ/ready vertex/NNP/vertex. so/RB/so /,/, vertex/NN/vertex is/VBZ/is set/VBN/set to/TO/to be/VB/be ready/JJ/ready or/CC/or ready/JJ/ready to/TO/to be/VB/be scheduled/VBN/scheduled /,/, if/IN/if it/PRP/it has/VBZ/has no/DT/no predecessors/NNP/predecessors. or/CC/or all/DT/all it/PRP/it is/VBZ/is predecessors/NNS/predecessors have/VBP/have already/RB/already be/VB/be in/IN/in scheduled/NNP/scheduled. so/RB/so /,/, now/RB/now i/PRP/i will/MD/will describe/VB/describe the/DT/the scheduling/NN/scheduling algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 44/CD/44 /:/: 04/CD/04 /CD/) so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a procedure/NN/procedure sched/VBN/sched /,/, which/WDT/which takes/VBZ/takes g/NN/g and/CC/and p/VB/p and/CC/and it/PRP/it is/VBZ/is a/DT/a 2/CD/2 approximation/NN/approximation algorithm/NNP/algorithm. it/PRP/it produces/VBZ/produces a/DT/a schedule/NN/schedule /,/, whose/WP$/whose length/NN/length is/VBZ/is twice/NN/twice the/DT/the optimal/JJ/optimal schedule/NN/schedule as/IN/as we/PRP/we will/MD/will prove/VB/prove in/IN/in a/DT/a minute/NNP/minute. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the algorithm/NN/algorithm actually/RB/actually /,/, it/PRP/it is/VBZ/is quite/RB/quite simple/JJ/simple /,/, while/IN/while the/DT/the entire/JJ/entire graph/NN/graph has/VBZ/has not/RB/not been/VBN/been scheduled/NNP/scheduled. we/PRP/we select/VBP/select as/IN/as many/JJ/many ready/JJ/ready vertices/NNS/vertices as/IN/as possible/JJ/possible /,/, but/CC/but at/IN/at most/JJS/most p/NNP/p. for/IN/for each/DT/each selected/VBN/selected vertex/NN/vertex u/NN/u /,/, we/PRP/we will/MD/will set/VB/set t/NN/t of/IN/of u/NN/u equal/JJ/equal to/TO/to i/NNP/i. so/RB/so /,/, we/PRP/we will/MD/will schedule/VB/schedule it/PRP/it at/IN/at step/NN/step i/NNP/i. and/CC/and then/RB/then /,/, we/PRP/we will/MD/will increment/VB/increment the/DT/the time/NN/time and/CC/and then/RB/then we/PRP/we will/MD/will repeat/NNP/repeat. how/WRB/how long/JJ/long does/VBZ/does this/DT/this whole/JJ/whole thing/NN/thing take/NN/take ?/./? well/RB/well /,/, the/DT/the algorithm/NN/algorithm will/MD/will take/VB/take time/NN/time the/DT/the time/NN/time required/VBN/required will/MD/will be/VB/be the/DT/the time/NN/time to/TO/to identify/VB/identify this/DT/this ready/NN/ready vertices/NNP/vertices. so/RB/so /,/, the/DT/the ready/JJ/ready vertices/NNS/vertices will/MD/will be/VB/be found/VBN/found by/IN/by looking/NN/looking at/IN/at by/IN/by looking/VBG/looking at/IN/at vertices/NNS/vertices /,/, which/WDT/which have/VBP/have already/RB/already been/VBN/been scheduled/NNP/scheduled. i/PRP/i will/MD/will just/RB/just say/VB/say that/IN/that this/DT/this can/MD/can be/VB/be done/VBN/done very/RB/very efficiently/RB/efficiently by/IN/by doing/VBG/doing a/DT/a topological/JJ/topological sort/NN/sort and/CC/and in/IN/in fact/NN/fact /,/, you/PRP/you can/MD/can do/VB/do the/DT/the whole/JJ/whole thing/NN/thing in/IN/in time/NN/time linear/NN/linear in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the graph/NNP/graph. so/RB/so /,/, this/DT/this in/IN/in fact/NN/fact /,/, will/MD/will run/VB/run in/IN/in polynomial/JJ/polynomial time/NNP/time. so/RB/so /,/, it/PRP/it is/VBZ/is easily/RB/easily shown/VBN/shown that/IN/that a/DT/a topological/JJ/topological sort/NN/sort will/MD/will suffice/NNP/suffice. let/VB/let us/PRP/us now/RB/now /,/, consider/NN/consider whether/IN/whether this/DT/this is/VBZ/is correct/NNP/correct. so/RB/so /,/, is/VBZ/is this/DT/this correct/NN/correct well/RB/well we/PRP/we are/VBP/are following/VBG/following the/DT/the restriction/NN/restriction about/IN/about the/DT/the number/NN/number of/IN/of processors/NNS/processors /,/, because/IN/because we/PRP/we are/VBP/are only/RB/only picking/VBG/picking at/IN/at most/JJS/most p/NN/p vertices/NNP/vertices. we/PRP/we are/VBP/are following/VBG/following the/DT/the restriction/NN/restriction about/IN/about precedence/NN/precedence /,/, we/PRP/we are/VBP/are because/IN/because we/PRP/we are/VBP/are picking/VBG/picking only/RB/only ready/JJ/ready vertices/NNP/vertices. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to produce/VB/produce a/DT/a correct/NN/correct schedule/NN/schedule a/DT/a valid/JJ/valid schedule/NNP/schedule. and/CC/and it/PRP/it is/VBZ/is going/VBG/going to/TO/to run/VB/run in/IN/in polynomial/JJ/polynomial time/NN/time /,/, the/DT/the only/JJ/only thing/NN/thing that/WDT/that we/PRP/we need/VBP/need to/TO/to prove/VB/prove that/IN/that it/PRP/it is/VBZ/is a/DT/a two/CD/two approximation/NN/approximation algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let g/NN/g sub/NN/sub i/PRP/i denote/VBP/denote the/DT/the graph/NN/graph induced/VBD/induced by/IN/by the/DT/the unscheduled/VBN/unscheduled vertices/NNS/vertices after/IN/after iteration/NN/iteration i/NNP/i. l/NN/l sub/NN/sub i/PRP/i is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path in/IN/in g/NN/g sub/NN/sub i/NNP/i. so/RB/so /,/, remember/NN/remember that/IN/that that/DT/that is/VBZ/is a/DT/a lower/JJR/lower bound/NN/bound on/IN/on g/NN/g sub/NN/sub i/NNP/i. let/NN/let n/NN/n sub/NN/sub i/PRP/i denote/VBP/denote the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in g/NN/g sub/NN/sub i/NNP/i. the/DT/the first/JJ/first claim/NN/claim is/VBZ/is either/DT/either n/NN/n sub/NN/sub i/PRP/i upon/IN/upon p/NN/p /,/, which/WDT/which is/VBZ/is the/DT/the lower/JJR/lower bound/NN/bound on/IN/on the/DT/the ith/NN/ith graph/NN/graph is/VBZ/is equal/JJ/equal to/TO/to n/VB/n sub/NN/sub i/PRP/i minus/VBZ/minus p/NN/p /,/, n/NN/n sub/NN/sub i/PRP/i minus/VBZ/minus 1/CD/1 upon/IN/upon p/NN/p minus/NN/minus 1/CD/1. so/RB/so /,/, either/DT/either this/DT/this lower/JJR/lower bound/NN/bound decreases/NNS/decreases or/CC/or l/NN/l sub/NN/sub i/PRP/i is/VBZ/is equal/JJ/equal to/TO/to l/NN/l sub/NN/sub i/PRP/i minus/VBZ/minus 1/CD/1 minus/NN/minus 1/CD/1. so/RB/so /,/, either/DT/either this/DT/this lower/JJR/lower bound/NN/bound decreases/NNS/decreases or/CC/or this/DT/this lower/JJR/lower bound/NN/bound decreases/NNP/decreases. so/RB/so /,/, after/IN/after first/JJ/first iteration/NN/iteration we/PRP/we have/VBP/have l/NN/l sub/NN/sub 1/CD/1 then/RB/then we/PRP/we have/VBP/have l/NN/l sub/NN/sub 2/CD/2. so/RB/so /,/, l/NN/l sub/NN/sub 2/CD/2 will/MD/will be/VB/be either/DT/either 1/CD/1 less/JJR/less or/CC/or this/DT/this lower/JJR/lower bound/NN/bound for/IN/for the/DT/the second/JJ/second iteration/NN/iteration will/MD/will be/VB/be 1/CD/1 less/NNP/less. and/CC/and this/DT/this will/MD/will be/VB/be enough/RB/enough to/TO/to prove/VB/prove the/DT/the 2/CD/2 approximation/NNP/approximation. so/RB/so /,/, let/VB/let us/PRP/us prove/VBP/prove this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 00/CD/00 /CD/) the/DT/the proof/NN/proof is/VBZ/is actually/RB/actually quite/RB/quite simple/NNP/simple. so/RB/so /,/, the/DT/the basic/JJ/basic step/NN/step in/IN/in the/DT/the algorithm/NN/algorithm is/VBZ/is to/TO/to find/VB/find p/NN/p vertices/NNS/vertices in/IN/in that/DT/that step3/NNP/step3 of/IN/of iteration/NN/iteration i/NNP/i. so/RB/so /,/, suppose/DT/suppose it/PRP/it does/VBZ/does find/VB/find those/DT/those p/NN/p vertices/NNS/vertices in/IN/in iteration/NN/iteration i/NNP/i. so/RB/so /,/, what/WDT/what happens/NNS/happens ?/./? so/RB/so /,/, if/IN/if it/PRP/it finds/VBZ/finds p/NN/p vertices/NNS/vertices /,/, then/RB/then the/DT/the number/NN/number of/IN/of vertices/NNS/vertices that/WDT/that remain/NN/remain is/VBZ/is going/VBG/going to/TO/to be/VB/be p/NN/p less/NNP/less. so/RB/so /,/, n/IN/n sub/NN/sub i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be equal/JJ/equal to/TO/to n/VB/n sub/NN/sub i/PRP/i minus/VBZ/minus 1/CD/1 upon/IN/upon p/NNP/p. but/CC/but now/RB/now /,/, if/IN/if you/PRP/you simply/RB/simply divide/VBP/divide by/IN/by p/NN/p then/RB/then we/PRP/we will/MD/will get/VB/get part/NN/part a/NNP/a. so/RB/so /,/, this/DT/this happens/NNS/happens then/RB/then part/NN/part a/DT/a will/MD/will hold/NNP/hold. the/DT/the other/JJ/other case/NN/case is/VBZ/is suppose/JJ/suppose that/IN/that the/DT/the algorithm/NN/algorithm does/VBZ/does not/RB/not find/VB/find p/NN/p vertices/NNP/vertices. if/IN/if the/DT/the algorithm/NN/algorithm does/VBZ/does not/RB/not find/VB/find p/NN/p vertices/NNS/vertices /,/, then/RB/then there/EX/there are/VBP/are at/IN/at most/JJS/most p/NN/p minus/NN/minus 1/CD/1 ready/NN/ready vertices/NNP/vertices. so/RB/so /,/, what/WDT/what are/VBP/are the/DT/the ready/JJ/ready vertices/NNS/vertices /,/, the/DT/the ready/JJ/ready vertices/NNS/vertices are/VBP/are the/DT/the vertices/NNS/vertices in/IN/in the/DT/the graph/NNP/graph. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 06/CD/06 /CD/) such/JJ/such that/IN/that their/PRP$/their predecessors/NNS/predecessors have/VBP/have already/RB/already being/VBG/being scheduled/VBN/scheduled or/CC/or they/PRP/they do/VBP/do not/RB/not have/VB/have any/DT/any predecessors/NNS/predecessors whatsoever/NNP/whatsoever. what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about such/JJ/such vertices/NNS/vertices ?/./? well/RB/well /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about paths/NNP/paths. here/RB/here is/VBZ/is the/DT/the key/JJ/key idea/NN/idea every/DT/every longest/NN/longest path/NN/path /:/( /:/( refer/NN/refer time/NN/time /:/: 48/CD/48 /:/: 22/CD/22 /CD/) /CD/) must/MD/must originate/VB/originate on/IN/on one/CD/one of/IN/of these/DT/these ready/JJ/ready vertices/NNP/vertices. suppose/NN/suppose /,/, it/PRP/it does/VBZ/does not/RB/not /,/, suppose/RB/suppose here/RB/here is/VBZ/is a/DT/a longest/NN/longest path/NNP/path. well/RB/well /,/, we/PRP/we go/VBP/go back/RB/back this/DT/this is/VBZ/is not/RB/not ready/RB/ready vertex/NNP/vertex. so/RB/so /,/, there/EX/there must/MD/must be/VB/be vertex/NN/vertex behind/IN/behind it/NNP/it. if/IN/if there/EX/there is/VBZ/is a/DT/a vertex/NN/vertex behind/IN/behind it/PRP/it /,/, then/RB/then we/PRP/we are/VBP/are getting/VBG/getting a/DT/a path/NN/path even/RB/even longer/NNP/longer. therefore/IN/therefore /,/, by/IN/by contradiction/NN/contradiction the/DT/the longest/JJS/longest path/NN/path must/MD/must originate/VB/originate over/IN/over here/NNP/here. so/RB/so /,/, /:/( /:/( refer/NN/refer time/NN/time /:/: 48/CD/48 /:/: 47/CD/47 /CD/) /CD/) the/DT/the algorithm/NN/algorithm on/IN/on the/DT/the other/JJ/other hand/NN/hand schedules/NNS/schedules all/DT/all these/DT/these ready/JJ/ready vertices/NNP/vertices. but/CC/but /,/, if/IN/if it/PRP/it does/VBZ/does schedule/NN/schedule all/DT/all these/DT/these ready/JJ/ready vertices/NNS/vertices /,/, then/RB/then the/DT/the lengths/NNS/lengths of/IN/of all/DT/all the/DT/the paths/NNS/paths starting/VBG/starting at/IN/at these/DT/these ready/JJ/ready vertices/NNS/vertices /,/, including/VBG/including the/DT/the longest/JJS/longest path/NN/path must/MD/must decrease/VB/decrease by/IN/by 1/CD/1. but/CC/but /,/, that/IN/that is/VBZ/is essentially/RB/essentially saying/VBG/saying that/IN/that l/NN/l sub/NN/sub i/PRP/i equal/JJ/equal to/TO/to l/NN/l sub/NN/sub i/PRP/i /VBP/( /:/( refer/NN/refer time/NN/time /:/: 49/CD/49 /:/: 04/CD/04 /CD/) /CD/) minus/NN/minus 1/CD/1 minus/NN/minus 1/CD/1. thus/RB/thus /:/( /:/( refer/NN/refer time/NN/time /:/: 49/CD/49 /:/: 07/CD/07 /CD/) /CD/) we/PRP/we have/VBP/have proved/VBN/proved this/DT/this /,/, either/DT/either this/DT/this holds/VBZ/holds or/CC/or this/DT/this holds/NNP/holds. the/DT/the next/JJ/next claim/NN/claim is/VBZ/is that/IN/that this/DT/this algorithm/NN/algorithm gives/VBZ/gives a/DT/a 2/CD/2 approximation/NNP/approximation. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a proof/NNP/proof. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 17/CD/17 /CD/) so/RB/so /,/, remember/NN/remember l/NN/l was/VBD/was a/DT/a lower/JJR/lower bound/NN/bound the/DT/the length/NN/length of/IN/of the/DT/the longest/JJS/longest path/NN/path in/IN/in the/DT/the entire/JJ/entire graph/NNP/graph. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call it/PRP/it l/VB/l sub/NN/sub 0/CD/0. n/NN/n was/VBD/was the/DT/the number/NN/number of/IN/of vertices/NNS/vertices in/IN/in the/DT/the entire/JJ/entire graph/NN/graph i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call it/PRP/it n/VB/n sub/NN/sub 0/CD/0. the/DT/the initial/JJ/initial lower/NN/lower bounds/NNS/bounds thus/RB/thus are/VBP/are l/JJ/l sub/NN/sub 0/-NONE-/0 and/CC/and n/NN/n sub/NN/sub 0/-NONE-/0 upon/IN/upon p/NNP/p. after/IN/after iteration/NN/iteration i/PRP/i the/DT/the bounds/NNS/bounds are/VBP/are l/JJ/l sub/NN/sub i/PRP/i and/CC/and n/VB/n sub/NN/sub i/PRP/i upon/IN/upon p/NN/p /,/, and/CC/and what/WP/what else/RB/else to/TO/to be/VB/be known/NNP/known. claim/NN/claim 2/CD/2 /,/, which/WDT/which we/PRP/we just/RB/just proved/VBD/proved says/VBZ/says that/IN/that either/DT/either the/DT/the first/JJ/first bound/NN/bound or/CC/or the/DT/the second/JJ/second bound/NN/bound drops/NNS/drops by/IN/by 1/CD/1 in/IN/in each/DT/each iteration/NNP/iteration. so/RB/so /,/, starting/VBG/starting from/IN/from l/NN/l 0/-NONE-/0 and/CC/and this/DT/this n/NN/n 0/-NONE-/0 upon/IN/upon p/NN/p /,/, we/PRP/we go/VBP/go to/TO/to l/VB/l 1/CD/1 and/CC/and n/NN/n 1/CD/1 upon/IN/upon p/NNP/p. l/NN/l 2/CD/2 and/CC/and n/NN/n 2/CD/2 upon/IN/upon p/NN/p and/CC/and so/RB/so on/NNP/on. claim/NN/claim 2/CD/2 says/VBZ/says that/IN/that either/DT/either the/DT/the first/JJ/first one/CD/one drops/NNS/drops or/CC/or the/DT/the second/JJ/second one/CD/one drops/NNP/drops. eventually/RB/eventually /,/, until/IN/until we/PRP/we get/VBP/get to/TO/to the/DT/the last/JJ/last iteration/NNP/iteration. no/DT/no bound/NN/bound can/MD/can drop/VB/drop below/IN/below 0/-NONE-/0 .because/JJ/.because it/PRP/it does/VBZ/does not/RB/not make/VB/make sense/NN/sense to/TO/to say/VB/say that/IN/that the/DT/the length/NN/length of/IN/of the/DT/the path/NN/path is/VBZ/is negative/NNP/negative. or/CC/or that/IN/that the/DT/the number/NN/number of/IN/of vertices/NNS/vertices is/VBZ/is negative/NNP/negative. so/RB/so /,/, which/WDT/which means/VBZ/means that/DT/that if/IN/if more/JJR/more than/IN/than l/NN/l plus/CC/plus n/NN/n over/IN/over p/NN/p steps/NNS/steps are/VBP/are taken/NNP/taken. then/RB/then one/CD/one of/IN/of these/DT/these bounds/NNS/bounds must/MD/must become/VB/become negative/JJ/negative starting/NN/starting from/IN/from here/NNP/here. because/IN/because /,/, this/DT/this l/NN/l 0/-NONE-/0 can/MD/can only/RB/only drop/VB/drop by/IN/by l/NN/l /,/, this/DT/this can/MD/can only/RB/only drop/VB/drop by/IN/by n/NN/n over/IN/over p/NNP/p. so/RB/so /,/, one/CD/one of/IN/of these/DT/these has/VBZ/has to/TO/to go/VB/go below/IN/below 0/CD/0. but/CC/but /,/, that/IN/that is/VBZ/is not/RB/not possible/NNP/possible. and/CC/and therefore/RB/therefore /,/, it/PRP/it means/VBZ/means that/IN/that l/NN/l plus/CC/plus n/NN/n over/IN/over p/NN/p steps/NNS/steps must/MD/must suffice/NNP/suffice. our/PRP$/our schedule/NN/schedule must/MD/must have/VB/have length/NN/length l/NN/l plus/CC/plus n/NN/n over/IN/over p/NN/p at/IN/at most/NNP/most. but/CC/but /,/, what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about l/NN/l plus/CC/plus n/NN/n over/IN/over p/NNP/p. well/RB/well /,/, this/DT/this is/VBZ/is certainly/RB/certainly less/JJR/less than/IN/than 2/CD/2 times/NNS/times max/NN/max of/IN/of l/NN/l and/CC/and n/NN/n over/IN/over p/NNP/p. so/RB/so /,/, we/PRP/we will/MD/will just/RB/just replace/VB/replace the/DT/the smaller/JJR/smaller of/IN/of the/DT/the 2/CD/2 with/IN/with the/DT/the max/NNP/max. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be less/JJR/less than/IN/than 2/CD/2 times/NNS/times max/NN/max of/IN/of l/NN/l and/CC/and n/NN/n over/IN/over p/NNP/p. but/CC/but /,/, what/WP/what is/VBZ/is max/NN/max of/IN/of l/NN/l and/CC/and n/NN/n over/IN/over p/NNP/p. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a lower/JJR/lower bound/NN/bound /,/, this/DT/this is/VBZ/is a/DT/a lower/JJR/lower bound/NNP/bound. so/RB/so /,/, the/DT/the larger/JJR/larger of/IN/of the/DT/the 2/CD/2 is/VBZ/is also/RB/also lower/JJR/lower bound/NNP/bound. so/RB/so /,/, but/CC/but if/IN/if it/PRP/it is/VBZ/is a/DT/a lower/JJR/lower bound/NN/bound /,/, then/RB/then opt/VBD/opt is/VBZ/is even/RB/even bigger/JJR/bigger than/IN/than this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is less/JJR/less than/IN/than twice/NN/twice opt/NNP/opt. so/RB/so /,/, this/DT/this max/NN/max is/VBZ/is a/DT/a lower/JJR/lower bound/NNP/bound. so/RB/so /,/, opt/IN/opt the/DT/the length/NN/length of/IN/of the/DT/the optimal/JJ/optimal schedule/NN/schedule can/MD/can not/RB/not be/VB/be smaller/JJR/smaller than/IN/than the/DT/the max/NNP/max. and/CC/and therefore/RB/therefore /,/, we/PRP/we have/VBP/have that/IN/that l/NN/l plus/CC/plus n/NN/n over/IN/over p/NN/p is/VBZ/is less/JJR/less than/IN/than 2/CD/2 times/NNS/times opt/NNP/opt. but/CC/but /,/, this/DT/this is/VBZ/is the/DT/the length/NN/length of/IN/of the/DT/the schedule/NN/schedule /,/, which/WDT/which we/PRP/we produced/NNP/produced. and/CC/and this/DT/this length/NN/length is/VBZ/is less/JJR/less than/IN/than 2/CD/2 times/NNS/times opt/VBP/opt /,/, so/RB/so l/JJ/l done/NNP/done. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that this/DT/this algorithm/NN/algorithm gives/VBZ/gives a/DT/a 2/CD/2 approximation/NNP/approximation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 58/CD/58 /CD/) so/RB/so /,/, now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to conclude/NNP/conclude. so/RB/so /,/, today/NN/today we/PRP/we discussed/VBD/discussed various/JJ/various strategies/NNS/strategies for/IN/for coping/VBG/coping with/IN/with np/NN/np complete/JJ/complete problems/NNP/problems. the/DT/the strategy/NN/strategy which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to study/NN/study is/VBZ/is the/DT/the strategy/NN/strategy of/IN/of devising/VBG/devising approximation/NN/approximation algorithms/NNP/algorithms. so/RB/so /,/, these/DT/these are/VBP/are defined/VBN/defined as/IN/as giving/NN/giving nearly/RB/nearly good/JJ/good solutions/NNS/solutions rather/RB/rather than/IN/than the/DT/the best/JJS/best possible/JJ/possible solutions/NNP/solutions. but/CC/but /,/, the/DT/the good/JJ/good thing/NN/thing about/IN/about them/PRP/them is/VBZ/is that/IN/that the/DT/the time/NN/time is/VBZ/is polynomial/NNP/polynomial. there/RB/there are/VBP/are various/JJ/various techniques/NNS/techniques for/IN/for designing/VBG/designing approximation/NN/approximation algorithms/NNP/algorithms. and/CC/and the/DT/the techniques/NNS/techniques that/WDT/that we/PRP/we studied/VBD/studied today/NN/today can/MD/can be/VB/be summarized/VBN/summarized as/IN/as follows/NNP/follows. so/RB/so /,/, basically/RB/basically we/PRP/we try/VBP/try to/TO/to find/VB/find lower/JJR/lower bounds/NNS/bounds on/IN/on the/DT/the objective/NN/objective function/NN/function /,/, which/WDT/which we/PRP/we want/VBP/want to/TO/to minimize/NNP/minimize. and/CC/and then/RB/then we/PRP/we try/VBP/try to/TO/to get/VB/get close/JJ/close to/TO/to this/NNP/this. of/IN/of course/NN/course /,/, if/IN/if the/DT/the objective/NN/objective function/NN/function had/VBD/had to/TO/to be/VB/be maximize/NN/maximize and/CC/and we/PRP/we will/MD/will try/VB/try to/TO/to find/VB/find upper/JJ/upper bounds/NNS/bounds and/CC/and we/PRP/we will/MD/will try/VB/try to/TO/to get/VB/get close/JJ/close to/TO/to those/NNP/those. so/RB/so /,/, device/NN/device we/PRP/we will/MD/will algorithms/VB/algorithms in/IN/in this/DT/this case/NN/case /,/, which/WDT/which will/MD/will get/VB/get close/JJ/close to/TO/to this/DT/this lower/JJR/lower bounds/NNP/bounds. so/RB/so /,/, the/DT/the lower/JJR/lower bounds/NNS/bounds are/VBP/are easily/RB/easily should/MD/should be/VB/be easily/RB/easily identifiable/NNP/identifiable. and/CC/and therefore/RB/therefore /,/, we/PRP/we can/MD/can actually/RB/actually compute/VB/compute them/NNP/them. and/CC/and then/RB/then /,/, we/PRP/we can/MD/can may/VB/may be/VB/be try/NN/try to/TO/to target/VB/target an/DT/an algorithm/NN/algorithm /,/, which/WDT/which tries/NNS/tries to/TO/to meet/VB/meet them/NNP/them. but/CC/but /,/, of/IN/of course/NN/course /,/, it/PRP/it will/MD/will not/RB/not succeed/VB/succeed in/IN/in meeting/NN/meeting them/NNP/them. but/CC/but /,/, it/PRP/it will/MD/will try/VB/try to/TO/to it/PRP/it will/MD/will succeed/VB/succeed in/IN/in hopefully/RB/hopefully getting/VBG/getting close/JJ/close to/TO/to them/NNP/them. we/PRP/we will/MD/will see/VB/see more/RBR/more such/JJ/such techniques/NNS/techniques in/IN/in the/DT/the next/JJ/next lectures/NNP/lectures. thank/NN/thank you/NNP/you. design/NN/design &/CC/& analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science &/CC/& engineering/VBG/engineering indian/JJ/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 33/CD/33 approximation/NN/approximation algorithms/NNS/algorithms for/IN/for np/NN/np /:/- complete/JJ/complete problems/NNS/problems ?/./? ii/NN/ii welcome/NN/welcome to/TO/to the/DT/the course/NN/course on/IN/on design/NN/design and/CC/and analysis/NN/analysis of/IN/of algorithms/NNP/algorithms. this/DT/this is/VBZ/is the/DT/the second/JJ/second lecture/NN/lecture on/IN/on approximation/NN/approximation algorithms/NNP/algorithms. we/PRP/we already/RB/already saw/VBD/saw in/IN/in the/DT/the previous/JJ/previous lecture/NN/lecture /,/, what/WP/what are/VBP/are the/DT/the approximation/NN/approximation algorithms/NNS/algorithms were/VBD/were ?/./? we/PRP/we will/MD/will go/VB/go over/IN/over that/DT/that very/RB/very quickly/RB/quickly today/NNP/today. and/CC/and we/PRP/we will/MD/will take/VB/take two/CD/two more/JJR/more examples/NNP/examples. so/RB/so /,/, let/VB/let me/PRP/me quickly/RB/quickly remind/VBP/remind you/PRP/you what/WP/what an/DT/an approximation/NN/approximation algorithm/NN/algorithm is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 01/CD/01 /:/: 20/CD/20 /CD/) so/RB/so /,/, an/DT/an approximation/NN/approximation algorithm/NN/algorithm is/VBZ/is a/DT/a polynomial/JJ/polynomial time/NN/time algorithm/NN/algorithm /,/, first/JJ/first of/IN/of all/NNP/all. and/CC/and it/PRP/it solves/VBZ/solves /,/, an/DT/an np/NN/np complete/NN/complete optimization/NN/optimization problem/NNP/problem. and/CC/and it/PRP/it gives/VBZ/gives near/IN/near optimal/JJ/optimal solutions/NNP/solutions. the/DT/the solutions/NNS/solutions it/PRP/it gives/VBZ/gives are/VBP/are near/IN/near optimal/NNP/optimal. of/IN/of course/NN/course /,/, if/IN/if it/PRP/it gave/VBD/gave optimal/JJ/optimal solutions/NNS/solutions in/IN/in polynomial/JJ/polynomial time/NN/time then/RB/then /,/, that/IN/that would/MD/would prove/VB/prove p/NN/p equals/NNS/equals np/NNP/np. and/CC/and of/IN/of course/NN/course /,/, we/PRP/we are/VBP/are not/RB/not here/RB/here to/TO/to prove/VB/prove that/NNP/that. and/CC/and most/JJS/most people/NNS/people in/IN/in fact/NN/fact believe/NN/believe that/IN/that /,/, that/IN/that is/VBZ/is not/RB/not correct/NNP/correct. so/RB/so /,/, the/DT/the most/RBS/most people/NNS/people believe/VBP/believe that/IN/that p/NN/p is/VBZ/is not/RB/not equal/JJ/equal to/TO/to np/NNP/np. and/CC/and therefore/RB/therefore /,/, polynomial/JJ/polynomial time/NN/time algorithms/NNS/algorithms which/WDT/which give/JJ/give optimal/JJ/optimal solutions/NNS/solutions are/VBP/are unlikely/RB/unlikely to/TO/to be/VB/be there/RB/there for/IN/for np/NN/np complete/NN/complete problems/NNP/problems. so/RB/so /,/, last/JJ/last time/NN/time we/PRP/we looked/VBD/looked at/IN/at this/DT/this and/CC/and we/PRP/we define/VBP/define some/DT/some notation/NN/notation for/IN/for this/NNP/this. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just quickly/RB/quickly go/VB/go over/IN/over that/DT/that notation/NNP/notation. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 02/CD/02 /:/: 29/CD/29 /CD/) so/RB/so /,/, let/VB/let us/PRP/us say/VB/say p/NN/p is/VBZ/is a/DT/a problem/NNP/problem. and/CC/and a/DT/a is/VBZ/is an/DT/an approximation/NN/approximation algorithm/NN/algorithm for/IN/for solving/NN/solving it/NNP/it. we/PRP/we said/VBD/said last/JJ/last time/NN/time that/IN/that /,/, if/IN/if i/PRP/i is/VBZ/is an/DT/an instance/NN/instance then/RB/then a/DT/a of/IN/of i/PRP/i is/VBZ/is the/DT/the cost/NN/cost of/IN/of the/DT/the solution/NN/solution found/VBD/found by/IN/by a/DT/a on/IN/on instance/NN/instance i/NNP/i. so/RB/so /,/, here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to assume/VB/assume that/IN/that our/PRP$/our problem/NN/problem is/VBZ/is a/DT/a cost/NN/cost minimization/NN/minimization problem/NNP/problem. so/RB/so /,/, there/EX/there are/VBP/are some/DT/some constraints/NNS/constraints which/WDT/which are/VBP/are specified/VBN/specified as/IN/as a/DT/a part/NN/part of/IN/of the/DT/the problem/NNP/problem. and/CC/and a/DT/a cost/NN/cost function/NN/function is/VBZ/is given/NNP/given. and/CC/and our/PRP$/our goal/NN/goal is/VBZ/is to/TO/to minimize/VB/minimize this/DT/this cost/NNP/cost. as/IN/as we/PRP/we said/VBD/said /,/, this/DT/this cost/NN/cost in/IN/in general/JJ/general will/NN/will not/RB/not be/VB/be the/DT/the optimum/NN/optimum a/DT/a i/NN/i /,/, will/MD/will not/RB/not be/VB/be the/DT/the optimal/JJ/optimal for/IN/for instance/NN/instance i/NNP/i. but/CC/but in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is some/DT/some other/JJ/other cost/NN/cost /,/, which/WDT/which i/PRP/i will/MD/will call/VB/call opt/NN/opt of/IN/of i/PRP/i which/WDT/which is/VBZ/is presumably/RB/presumably better/RBR/better than/IN/than this/NNP/this. so/RB/so /,/, this/DT/this would/MD/would be/VB/be the/DT/the cost/NN/cost found/VBD/found by/IN/by the/DT/the optimal/JJ/optimal algorithm/NNP/algorithm. so/RB/so /,/, clearly/RB/clearly we/PRP/we know/VBP/know that/IN/that a/DT/a of/IN/of i/PRP/i is/VBZ/is at/IN/at least/JJS/least as/IN/as big/JJ/big as/IN/as optimal/JJ/optimal as/IN/as opt/JJ/opt of/IN/of i/NNP/i. so/RB/so /,/, we/PRP/we said/VBD/said that/IN/that rho/NN/rho are/VBP/are the/DT/the approximation/NN/approximation factor/NN/factor on/IN/on instance/NN/instance i/PRP/i /,/, is/VBZ/is simply/RB/simply going/VBG/going to/TO/to be/VB/be a/DT/a of/IN/of i/PRP/i upon/IN/upon opt/JJ/opt of/IN/of i/NNP/i. and/CC/and we/PRP/we also/RB/also said/VBD/said that/IN/that /,/, rho/WP/rho of/IN/of n/NN/n is/VBZ/is going/VBG/going to/TO/to be/VB/be defined/VBN/defined was/VBD/was defined/VBN/defined as/IN/as max/NN/max over/IN/over all/DT/all instances/NNS/instances of/IN/of size/NN/size n/NN/n of/IN/of rho/NN/rho sub/NN/sub i/NNP/i. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the approximation/NN/approximation factor/NN/factor of/IN/of the/DT/the algorithm/NNP/algorithm. and/CC/and this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to keep/VB/keep small/NNP/small. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the general/JJ/general framework/NN/framework in/IN/in which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to work/NNP/work. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to devise/VB/devise algorithms/NNS/algorithms for/IN/for np/NN/np complete/NN/complete problems/NNS/problems /,/, which/WDT/which produce/NN/produce a/DT/a small/JJ/small approximation/NN/approximation factor/NNP/factor. in/IN/in other/JJ/other words/NNS/words the/DT/the cost/NN/cost that/IN/that they/PRP/they return/VBP/return /,/, the/DT/the cost/NN/cost of/IN/of the/DT/the solution/NN/solution that/IN/that they/PRP/they return/VBP/return a/DT/a of/IN/of i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be reason/NN/reason reasonably/RB/reasonably close/JJ/close to/TO/to opt/VB/opt of/IN/of i/NNP/i. and/CC/and of/IN/of course/NN/course /,/, they/PRP/they are/VBP/are going/VBG/going to/TO/to be/VB/be running/VBG/running in/IN/in polynomial/JJ/polynomial time/NN/time in/IN/in path/NN/path of/IN/of i/NNP/i. so/RB/so /,/, today/NN/today i/PRP/i am/VBP/am going/VBG/going to/TO/to look/VB/look at/IN/at two/CD/two problems/NNP/problems. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 05/CD/05 /:/: 22/CD/22 /CD/) so/RB/so /,/, one/CD/one problem/NN/problem is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the set/NN/set cover/NN/cover problem/NNP/problem. and/CC/and another/DT/another is/VBZ/is the/DT/the /,/, is/VBZ/is going/VBG/going to/TO/to be/VB/be so/RB/so called/VBN/called the/DT/the k/NN/k center/NN/center problem/NNP/problem. i/PRP/i will/MD/will describe/VB/describe these/DT/these problems/NNS/problems in/IN/in a/DT/a minute/NNP/minute. and/CC/and i/PRP/i will/MD/will also/RB/also give/VB/give real/JJ/real life/NN/life examples/NNS/examples /,/, corresponding/VBG/corresponding to/TO/to these/DT/these problems/NNP/problems. in/IN/in addition/NN/addition to/TO/to that/DT/that /,/, we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to look/VB/look at/IN/at some/DT/some techniques/NNS/techniques or/CC/or some/DT/some themes/NNP/themes. first/RB/first of/IN/of all/DT/all /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use some/DT/some kind/NN/kind of/IN/of a/DT/a greedy/JJ/greedy idea/NN/idea for/IN/for solving/NN/solving these/DT/these problems/NNP/problems. see/VBP/see you/PRP/you have/VB/have already/RB/already seen/VBN/seen greedy/NN/greedy strategies/NNS/strategies earlier/NNP/earlier. so/RB/so /,/, a/DT/a greedy/NN/greedy strategy/NN/strategy is/VBZ/is /,/, in/IN/in greedy/JJ/greedy strategies/NNS/strategies procedure/NN/procedure for/IN/for solving/NN/solving is/VBZ/is to/TO/to be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a sequence/NN/sequence of/IN/of decisions/NNS/decisions that/WDT/that you/PRP/you make/NNP/make. every/DT/every decision/NN/decision is/VBZ/is going/VBG/going to/TO/to change/VB/change the/DT/the cost/NN/cost a/DT/a little/RB/little bit/NNP/bit. and/CC/and the/DT/the goal/NN/goal /,/, the/DT/the idea/NN/idea of/IN/of the/DT/the strategy/NN/strategy is/VBZ/is that/IN/that the/DT/the ith/NN/ith decision/NN/decision that/WDT/that you/PRP/you take/VBP/take /,/, tries/NNS/tries to/TO/to make/VB/make the/DT/the ith/NN/ith change/NN/change in/IN/in cost/NN/cost the/DT/the ith/NN/ith increase/NN/increase in/IN/in cost/NN/cost /,/, as/IN/as small/JJ/small as/IN/as possible/NNP/possible. greedy/NN/greedy is/VBZ/is also/RB/also short/RB/short sighted/VBN/sighted in/IN/in the/DT/the following/JJ/following sense/NN/sense that/IN/that /,/, we/PRP/we will/MD/will try/VB/try to/TO/to minimize/VB/minimize the/DT/the ith/NN/ith increase/NN/increase in/IN/in cost/NN/cost using/VBG/using the/DT/the ith/NN/ith decision/NNP/decision. but/CC/but in/IN/in doing/NN/doing so/IN/so /,/, we/PRP/we will/MD/will not/RB/not worry/VB/worry about/IN/about what/WP/what happens/NNS/happens subsequently/NNP/subsequently. in/IN/in general/JJ/general of/IN/of course/NN/course /,/, greedy/JJ/greedy algorithms/NNS/algorithms will/MD/will not/RB/not work/NNP/work. but/CC/but /,/, in/IN/in many/JJ/many cases/NNS/cases they/PRP/they seem/VBP/seem to/TO/to work/NNP/work. and/CC/and today/NN/today ?/./? s/NNS/s problems/NNS/problems are/VBP/are somewhat/RB/somewhat in/IN/in that/DT/that same/JJ/same framework/NNP/framework. in/IN/in addition/NN/addition to/TO/to that/DT/that /,/, we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to see/VB/see an/DT/an interesting/JJ/interesting proof/NN/proof strategy/NN/strategy which/WDT/which i/PRP/i will/MD/will call/VB/call compete/JJ/compete with/IN/with the/DT/the optimal/NNP/optimal. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to imagine/VB/imagine that/IN/that /,/, there/EX/there is/VBZ/is an/DT/an optimal/JJ/optimal algorithm/NN/algorithm running/VBG/running along/IN/along with/IN/with the/DT/the algorithm/NN/algorithm that/IN/that we/PRP/we design/NNP/design. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to try/NN/try and/CC/and do/VBP/do at/IN/at least/JJS/least reasonably/RB/reasonably well/RB/well /,/, as/IN/as compared/VBN/compared to/TO/to that/NNP/that. we/PRP/we can/MD/can not/RB/not do/VB/do better/RBR/better than/IN/than or/CC/or even/RB/even as/IN/as well/RB/well as/IN/as the/DT/the optimal/JJ/optimal algorithm/NN/algorithm but/CC/but /,/, we/PRP/we will/MD/will try/VB/try to/TO/to see/VB/see that/IN/that we/PRP/we do/VBP/do not/RB/not do/VB/do too/RB/too badly/NNP/badly. so/RB/so /,/, let/VB/let me/PRP/me start/VB/start off/RP/off with/IN/with the/DT/the set/NN/set cover/NN/cover problem/NNP/problem. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the set/NN/set cover/NN/cover problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 08/CD/08 /:/: 00/CD/00 /CD/) the/DT/the input/NN/input consists/VBZ/consists of/IN/of sets/NNS/sets /,/, s/NNS/s 1/CD/1 s/NNS/s 2/CD/2 all/DT/all the/DT/the way/NN/way till/IN/till s/NNS/s sub/VBP/sub n/NNP/n. let/NN/let me/PRP/me use/VBP/use /,/, u/NN/u to/TO/to denote/VB/denote union/NN/union of/IN/of s/NNS/s 1/CD/1 s/NNS/s 2/CD/2 s/NNS/s n/NNP/n. so/RB/so /,/, let/VB/let me/PRP/me call/MD/call this/DT/this collection/NN/collection this/DT/this entire/NN/entire collection/NN/collection i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call c/NNP/c. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the collection/NN/collection of/IN/of sets/NNP/sets. and/CC/and our/PRP$/our goal/NN/goal /,/, the/DT/the output/NN/output that/IN/that we/PRP/we want/VBP/want is/VBZ/is a/DT/a sub/NN/sub collection/NNP/collection. let/NN/let me/PRP/me call/VBP/call it/PRP/it c/VBP/c prime/NNP/prime. such/JJ/such that/IN/that the/DT/the union/NN/union of/IN/of s/NNS/s sub/VBP/sub i/PRP/i /,/, where/WRB/where s/NNS/s sub/VBP/sub i/PRP/i belongs/VBZ/belongs to/TO/to c/VB/c prime/JJ/prime has/NNS/has to/TO/to be/VB/be exactly/RB/exactly equal/JJ/equal to/TO/to u/VB/u or/CC/or the/DT/the union/NN/union of/IN/of all/DT/all the/DT/the sets/NNP/sets. so/RB/so /,/, we/PRP/we want/VBP/want a/DT/a small/JJ/small collection/NN/collection c/NN/c prime/NNP/prime. a/DT/a small/JJ/small set/NN/set of/IN/of sets/NNS/sets such/JJ/such that/IN/that /,/, they/PRP/they contain/VBP/contain the/DT/the same/JJ/same elements/NNS/elements as/IN/as the/DT/the original/JJ/original connection/NNP/connection. so/RB/so /,/, what/WDT/what is/VBZ/is to/TO/to be/VB/be there/RB/there is/VBZ/is something/NN/something to/TO/to be/VB/be minimized/VBN/minimized over/RP/over here/NNP/here. and/CC/and we/PRP/we want/VBP/want to/TO/to minimize/VB/minimize the/DT/the cardinality/NN/cardinality of/IN/of c/NN/c prime/NNP/prime. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the set/NN/set cover/NN/cover problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 09/CD/09 /:/: 53/CD/53 /CD/) in/IN/in the/DT/the decision/NN/decision version/NN/version of/IN/of the/DT/the problem/NN/problem /,/, so/RB/so the/DT/the decision/NN/decision version/NN/version as/IN/as usual/JJ/usual we/PRP/we are/VBP/are given/VBN/given an/DT/an additional/JJ/additional target/NN/target t/NNP/t. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of sets/NNS/sets allowed/VBN/allowed in/IN/in c/NN/c prime/NNP/prime. and/CC/and what/WP/what happens/NNS/happens over/IN/over here/RB/here is/VBZ/is that/IN/that this/NNP/this. and/CC/and we/PRP/we are/VBP/are asking/VBG/asking does/NNS/does there/RB/there exist/VB/exist a/DT/a c/NN/c prime/NN/prime with/IN/with cardinality/NN/cardinality t/NNP/t. such/JJ/such that/IN/that its/PRP$/its union/NN/union /,/, the/DT/the union/NN/union of/IN/of the/DT/the sets/NNS/sets in/IN/in it/PRP/it is/VBZ/is u/NNP/u. and/CC/and this/DT/this problem/NN/problem is/VBZ/is np/NN/np complete/NNP/complete. in/IN/in fact/NN/fact /,/, the/DT/the decision/NN/decision there/RB/there is/VBZ/is a/DT/a reasonably/RB/reasonably simple/JJ/simple reduction/NN/reduction from/IN/from the/DT/the vertex/NN/vertex cover/NN/cover problem/NNP/problem. we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to prove/VB/prove this/NNP/this. but/CC/but /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to directly/RB/directly try/NN/try and/CC/and find/VB/find an/DT/an approximation/NN/approximation algorithm/NN/algorithm for/IN/for the/DT/the set/NN/set cover/NN/cover problem/NNP/problem. now/RB/now /,/, before/IN/before going/VBG/going to/TO/to the/DT/the algorithm/NN/algorithm let/VBD/let me/PRP/me give/VBP/give you/PRP/you a/DT/a brief/JJ/brief application/NN/application /,/, a/DT/a small/JJ/small application/NN/application of/IN/of this/DT/this problem/NN/problem to/TO/to tell/VB/tell you/PRP/you that/IN/that /,/, to/TO/to tell/VB/tell you/PRP/you how/WRB/how it/PRP/it might/MD/might arise/VB/arise in/IN/in real/JJ/real life/NNP/life. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 11/CD/11 /:/: 07/CD/07 /CD/) suppose/NN/suppose u/NN/u denotes/VBZ/denotes a/DT/a set/NN/set of/IN/of villages/NNP/villages. suppose/NN/suppose we/PRP/we are/VBP/are also/RB/also given/VBN/given a/DT/a set/NN/set l/NN/l of/IN/of locations/NNS/locations /,/, here/RB/here hospitals/NNS/hospitals can/MD/can be/VB/be built/NNP/built. for/IN/for each/DT/each location/NN/location say/VBP/say little/JJ/little l/NN/l /,/, we/PRP/we are/VBP/are given/VBN/given the/DT/the set/NN/set s/VBZ/s l/NNP/l. and/CC/and this/DT/this is/VBZ/is the/DT/the set/NN/set of/IN/of villages/NNS/villages that/WDT/that will/MD/will be/VB/be served/VBN/served /,/, if/IN/if a/DT/a hospital/JJ/hospital is/VBZ/is built/VBN/built at/IN/at l/NNP/l. the/DT/the natural/JJ/natural problem/NN/problem now/RB/now is/VBZ/is to/TO/to determine/VB/determine the/DT/the smallest/JJS/smallest number/NN/number of/IN/of locations/NNS/locations such/JJ/such that/IN/that /,/, all/DT/all villages/NNS/villages can/MD/can be/VB/be served/NNP/served. let/VB/let me/PRP/me write/VB/write the/DT/the term/NNP/term. we/PRP/we want/VBP/want to/TO/to pick/VB/pick as/IN/as few/JJ/few locations/NNS/locations as/IN/as possible/NNP/possible. and/CC/and build/VB/build hospitals/NNS/hospitals there/RB/there /,/, such/JJ/such that/IN/that all/DT/all villages/NNS/villages will/MD/will be/VB/be served/NNP/served. do/VB/do you/PRP/you see/VB/see now/RB/now /,/, how/WRB/how this/DT/this corresponds/NNS/corresponds to/TO/to our/PRP$/our set/NN/set cover/NN/cover problem/NN/problem ?/./? well/RB/well /,/, the/DT/the correspondence/NN/correspondence is/VBZ/is actually/RB/actually exact/JJ/exact our/PRP$/our sets/NNS/sets s/NNS/s l/VBP/l constitute/JJ/constitute the/DT/the collection/NNP/collection. these/DT/these are/VBP/are the/DT/the sets/NNS/sets in/IN/in the/DT/the collection/NN/collection as/IN/as defined/VBN/defined in/IN/in the/DT/the problem/NN/problem /,/, in/IN/in the/DT/the set/NN/set cover/NN/cover problem/NNP/problem. and/CC/and what/WP/what we/PRP/we want/VBP/want is/VBZ/is to/TO/to pick/VB/pick a/DT/a sub/NN/sub collection/NN/collection of/IN/of this/DT/this collection/NN/collection such/JJ/such that/IN/that /,/, all/DT/all villages/NNS/villages will/MD/will be/VB/be served/VBN/served or/CC/or in/IN/in other/JJ/other words/NNS/words all/DT/all villages/NNS/villages will/MD/will appear/VB/appear in/IN/in at/IN/at least/JJS/least 1/CD/1 s/NNS/s l/NNP/l. so/RB/so /,/, the/DT/the correspondence/NN/correspondence is/VBZ/is exact/NNP/exact. so/RB/so /,/, now/RB/now we/PRP/we turn/VBP/turn to/TO/to the/DT/the algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 13/CD/13 /:/: 45/CD/45 /CD/) so/RB/so /,/, the/DT/the basic/JJ/basic idea/NN/idea of/IN/of the/DT/the algorithm/NN/algorithm is/VBZ/is greedy/NNP/greedy. what/WP/what do/VBP/do i/PRP/i mean/VB/mean by/IN/by that/DT/that ?/./? well/RB/well /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to think/VB/think of/IN/of picking/VBG/picking sets/NNS/sets when/WRB/when at/IN/at a/DT/a time/NNP/time. and/CC/and every/DT/every time/NN/time we/PRP/we pick/VBP/pick a/DT/a set/NN/set /,/, we/PRP/we will/MD/will try/VB/try to/TO/to cover/VB/cover or/CC/or to/TO/to collect/VB/collect together/RP/together as/IN/as many/JJ/many elements/NNS/elements /,/, which/WDT/which have/VBP/have not/RB/not yet/RB/yet been/VBN/been collected/NNP/collected. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the idea/NNP/idea. so/RB/so /,/, here/RB/here is/VBZ/is basically/RB/basically the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start by/IN/by defining/NN/defining my/PRP$/my c/NN/c prime/NN/prime to/TO/to be/VB/be null/NNP/null. so/RB/so /,/, c/NN/c prime/NN/prime is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the collection/NN/collection our/PRP$/our answer/NN/answer eventually/NNP/eventually. i/PRP/i am/VBP/am also/RB/also going/VBG/going to/TO/to say/VB/say that/IN/that /,/, all/DT/all elements/NNS/elements of/IN/of u/NN/u which/WDT/which is/VBZ/is the/DT/the union/NN/union of/IN/of all/DT/all the/DT/the sets/NNS/sets are/VBP/are initially/RB/initially uncovered/NNP/uncovered. by/IN/by covering/VBG/covering /,/, i/PRP/i mean/VBP/mean they/PRP/they are/VBP/are inside/RB/inside a/DT/a set/NN/set which/WDT/which is/VBZ/is included/VBN/included in/IN/in this/DT/this c/NN/c prime/NNP/prime. and/CC/and now/RB/now /,/, here/RB/here is/VBZ/is the/DT/the basic/JJ/basic loop/NNP/loop. so/RB/so /,/, while/IN/while some/DT/some uncovered/VBN/uncovered elements/NNS/elements exist/VBP/exist /,/, what/WP/what do/VBP/do we/PRP/we do/VBP/do ?/./? we/PRP/we pick/VBP/pick set/VBN/set s/NNS/s i/PRP/i that/IN/that contains/NNS/contains maximum/VBP/maximum uncovered/VBN/uncovered elements/NNP/elements. so/RB/so /,/, we/PRP/we will/MD/will have/VB/have to/TO/to maintain/VB/maintain some/DT/some data/NNS/data structure/VBP/structure which/WDT/which says/VBZ/says /,/, which/WDT/which keeps/NNS/keeps track/VBP/track of/IN/of which/WDT/which elements/NNS/elements are/VBP/are covered/VBN/covered and/CC/and which/WDT/which elements/NNS/elements are/VBP/are not/RB/not covered/NNP/covered. and/CC/and as/IN/as soon/RB/soon as/IN/as we/PRP/we pick/VBP/pick elements/NNS/elements and/CC/and we/PRP/we put/VBD/put that/IN/that /,/, pick/VBP/pick a/DT/a set/NN/set and/CC/and we/PRP/we put/VBD/put that/IN/that set/NN/set into/IN/into c/NN/c prime/JJ/prime we/PRP/we will/MD/will have/VB/have to/TO/to cover/VB/cover those/DT/those elements/NNP/elements. so/RB/so /,/, we/PRP/we pick/VBP/pick the/DT/the set/NNP/set. and/CC/and then/RB/then /,/, we/PRP/we set/VBD/set c/NN/c prime/NN/prime is/VBZ/is equal/JJ/equal to/TO/to c/VB/c prime/JJ/prime union/NN/union s/NNS/s i/NNP/i. and/CC/and then/RB/then /,/, we/PRP/we uncover/RB/uncover or/CC/or recover/RB/recover elements/NNS/elements in/IN/in s/NNS/s i/NNP/i. so/RB/so /,/, our/PRP$/our universe/NN/universe or/CC/or the/DT/the ground/NN/ground set/VBD/set /,/, has/VBZ/has some/DT/some elements/NNS/elements has/VBZ/has all/DT/all elements/NNS/elements initially/RB/initially uncovered/NNP/uncovered. then/RB/then /,/, we/PRP/we pick/VBP/pick sets/NNS/sets as/IN/as a/DT/a result/NN/result of/IN/of which/WDT/which some/DT/some elements/NNS/elements get/VBP/get covered/NNP/covered. and/CC/and we/PRP/we keep/VBP/keep on/IN/on covering/VBG/covering elements/NNP/elements. and/CC/and eventually/RB/eventually /,/, we/PRP/we get/VBP/get to/TO/to a/DT/a point/NN/point where/WRB/where all/DT/all elements/NNS/elements are/VBP/are covered/NNP/covered. and/CC/and that/IN/that is/VBZ/is a/DT/a time/NN/time /,/, we/PRP/we stop/NNP/stop. so/RB/so /,/, this/DT/this is/VBZ/is where/WRB/where we/PRP/we end/VBP/end the/DT/the loop/NN/loop and/CC/and we/PRP/we return/VBP/return c/NN/c prime/NNP/prime. so/RB/so /,/, we/PRP/we are/VBP/are making/VBG/making the/DT/the decision/NN/decision at/IN/at each/DT/each stage/NN/stage which/WDT/which said/VBD/said to/TO/to include/VB/include into/IN/into our/PRP$/our sub/NN/sub collection/NN/collection and/CC/and at/IN/at each/DT/each stage/NN/stage we/PRP/we are/VBP/are saying/NNP/saying. so/RB/so /,/, let/VB/let us/PRP/us include/VBP/include a/DT/a set/NN/set which/WDT/which gives/VBZ/gives us/PRP/us which/WDT/which tries/NNS/tries to/TO/to cover/VB/cover maximum/NN/maximum elements/NNP/elements. so/RB/so /,/, the/DT/the analysis/NN/analysis of/IN/of it/PRP/it is/VBZ/is actually/RB/actually quite/RB/quite nice/JJ/nice and/CC/and simple/NNP/simple. the/DT/the analysis/NN/analysis goes/VBZ/goes by/IN/by iterations/NNS/iterations of/IN/of this/DT/this basic/JJ/basic algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to start/VB/start by/IN/by defining/NN/defining some/DT/some notation/NNP/notation. so/RB/so /,/, let/VB/let say/VBP/say n/JJ/n sub/NN/sub 0/-NONE-/0 is/VBZ/is the/DT/the number/NN/number of/IN/of elements/NNS/elements in/IN/in u/NN/u /,/, the/DT/the total/JJ/total number/NN/number of/IN/of elements/NNS/elements which/WDT/which i/PRP/i want/VBP/want to/TO/to cover/VB/cover or/CC/or this/DT/this is/VBZ/is also/RB/also equal/JJ/equal to/TO/to n/NNP/n. there/RB/there is/VBZ/is a/DT/a reason/NN/reason why/WRB/why i/PRP/i want/VBP/want to/TO/to call/VB/call it/PRP/it n/VB/n sub/NN/sub 0/-NONE-/0 as/IN/as well/NNP/well. n/NN/n sub/NN/sub i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the number/NN/number of/IN/of elements/NNS/elements /,/, uncovered/VBD/uncovered after/IN/after iteration/NN/iteration i/NNP/i. so/RB/so /,/, number/NN/number of/IN/of elements/NNS/elements in/IN/in u/NN/u originally/RB/originally /,/, these/DT/these are/VBP/are all/DT/all uncovered/NNP/uncovered. so/RB/so /,/, this/DT/this is/VBZ/is uncovered/VBN/uncovered before/IN/before the/DT/the first/JJ/first iteration/NNP/iteration. n/NN/n 1/CD/1 would/MD/would be/VB/be elements/NNS/elements /,/, which/WDT/which are/VBP/are uncovered/VBN/uncovered after/IN/after the/DT/the first/JJ/first iteration/NN/iteration after/IN/after the/DT/the second/JJ/second iteration/NN/iteration /,/, all/DT/all the/DT/the way/NN/way till/IN/till after/IN/after the/DT/the ith/NN/ith iteration/NNP/iteration. i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use opt/NN/opt to/TO/to denote/VB/denote /,/, number/NN/number of/IN/of sets/NNS/sets needed/VBN/needed by/IN/by optimal/JJ/optimal algorithm/NN/algorithm to/TO/to cover/VB/cover all/DT/all elements/NNP/elements. so/RB/so /,/, this/DT/this is/VBZ/is my/PRP$/my notation/NNP/notation. and/CC/and now/RB/now i/PRP/i want/VBP/want to/TO/to state/NN/state my/PRP$/my main/NN/main claim/NNP/claim. so/RB/so /,/, the/DT/the main/JJ/main claim/NN/claim is/VBZ/is the/DT/the following/NNP/following. the/DT/the main/JJ/main claim/NN/claim says/VBZ/says that/IN/that /,/, n/VBP/n sub/NN/sub i/PRP/i plus/VBZ/plus 1/CD/1 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n/VB/n sub/NN/sub i/PRP/i times/VBZ/times 1/CD/1 minus/NN/minus 1/CD/1 over/IN/over opt/JJ/opt /,/, very/RB/very simple/JJ/simple claim/NNP/claim. and/CC/and the/DT/the proof/NN/proof actually/RB/actually is/VBZ/is also/RB/also fairly/RB/fairly simple/NNP/simple. so/RB/so /,/, how/WRB/how does/VBZ/does the/DT/the proof/NN/proof work/NNP/work. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 30/CD/30 /CD/) so/RB/so /,/, our/PRP$/our algorithm/NN/algorithm has/VBZ/has executed/VBN/executed for/IN/for i/PRP/i iterations/NNP/iterations. and/CC/and this/DT/this is/VBZ/is our/PRP$/our set/NN/set u/NN/u of/IN/of which/WDT/which some/DT/some elements/NNS/elements have/VBP/have been/VBN/been covered/NNP/covered. and/CC/and these/DT/these are/VBP/are the/DT/the n/NN/n sub/NN/sub i/PRP/i elements/VBZ/elements /,/, which/WDT/which are/VBP/are not/RB/not covered/VBN/covered after/IN/after the/DT/the i/NN/i /,/, after/IN/after the/DT/the ith/NN/ith iteration/NNP/iteration. now/RB/now /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about the/DT/the optimal/JJ/optimal algorithm/NNP/algorithm. as/IN/as we/PRP/we said/VBD/said our/PRP$/our strategy/NN/strategy is/VBZ/is going/VBG/going to/TO/to be/VB/be /,/, we/PRP/we will/MD/will try/VB/try to/TO/to do/VB/do we/PRP/we try/VB/try to/TO/to compete/VB/compete with/IN/with the/DT/the optimal/JJ/optimal algorithm/NNP/algorithm. so/RB/so /,/, what/WDT/what we/PRP/we know/VBP/know about/IN/about the/DT/the optimal/JJ/optimal algorithm/NN/algorithm ?/./? well/RB/well /,/, we/PRP/we know/VBP/know that/IN/that this/DT/this entire/JJ/entire set/NN/set u/NN/u is/VBZ/is covered/VBN/covered by/IN/by opt/NN/opt sets/NNS/sets /,/, by/IN/by a/DT/a number/NN/number of/IN/of sets/NNS/sets equal/JJ/equal to/TO/to opt/NNP/opt. so/RB/so /,/, it/PRP/it covers/VBZ/covers all/DT/all these/DT/these elements/NNP/elements. so/RB/so /,/, therefore/IN/therefore know/NN/know that/IN/that even/RB/even this/DT/this region/NN/region is/VBZ/is also/RB/also covered/VBN/covered by/IN/by opt/NN/opt sets/NNP/sets. so/RB/so /,/, now/RB/now if/IN/if i/PRP/i look/VBP/look at/IN/at how/WRB/how these/DT/these sets/NNS/sets are/VBP/are covering/VBG/covering this/DT/this region/NN/region ?/./? i/PRP/i must/MD/must claim/VB/claim that/IN/that /,/, there/EX/there has/VBZ/has to/TO/to exist/VB/exist at/IN/at least/JJS/least one/CD/one set/NN/set which/WDT/which covers/NNS/covers n/VBP/n sub/NN/sub i/PRP/i upon/IN/upon opt/JJ/opt elements/NNS/elements at/IN/at least/NNP/least. so/RB/so /,/, at/IN/at least/JJS/least one/CD/one set/NN/set covering/VBG/covering at/IN/at least/NNP/least. because/IN/because /,/, if/IN/if no/DT/no set/NN/set covered/VBN/covered at/IN/at least/JJS/least these/DT/these many/JJ/many then/RB/then this/DT/this group/NN/group of/IN/of n/NN/n i/PRP/i elements/VBZ/elements would/MD/would not/RB/not be/VB/be /,/, it/PRP/it would/MD/would not/RB/not be/VB/be possible/JJ/possible to/TO/to cover/VB/cover this/NNP/this. so/RB/so /,/, there/EX/there has/VBZ/has to/TO/to exist/VB/exist at/IN/at least/JJS/least one/CD/one set/NN/set which/WDT/which covers/NNS/covers at/IN/at least/JJS/least n/NN/n sub/NN/sub i/PRP/i upon/IN/upon opt/JJ/opt elements/NNP/elements. here/RB/here is/VBZ/is where/WRB/where the/DT/the greedy/JJ/greedy property/NN/property now/RB/now comes/VBZ/comes in/NNP/in. so/RB/so /,/, at/IN/at this/DT/this point/NN/point we/PRP/we choose/VBP/choose a/DT/a subset/NN/subset /,/, which/WDT/which covers/NNS/covers the/DT/the maximum/NN/maximum number/NN/number of/IN/of elements/NNS/elements from/IN/from this/NNP/this. so/RB/so /,/, which/WDT/which ?/./? so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about the/DT/the set/NN/set ?/./? so/RB/so /,/, this/DT/this subset/NN/subset that/IN/that we/PRP/we choose/VBP/choose is/VBZ/is this/NNP/this. then/RB/then /,/, we/PRP/we know/VBP/know that/IN/that this/DT/this region/NN/region has/VBZ/has to/TO/to contain/VB/contain at/IN/at least/JJS/least n/NN/n sub/NN/sub i/PRP/i upon/IN/upon opt/JJ/opt elements/NNP/elements. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 21/CD/21 /:/: 53/CD/53 /CD/) so/RB/so /,/, what/WDT/what does/VBZ/does that/IN/that mean/JJ/mean ?/./? that/IN/that means/VBZ/means that/DT/that number/NN/number of/IN/of elements/NNS/elements remaining/VBG/remaining after/IN/after i/PRP/i plus/CC/plus 1/CD/1 th/NN/th iteration/NN/iteration has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than the/DT/the n/NN/n sub/NN/sub i/PRP/i /,/, which/WDT/which were/VBD/were present/JJ/present before/IN/before the/DT/the i/NN/i plus/VBZ/plus 1/CD/1 th/NN/th iteration/NN/iteration minus/NN/minus whatever/NN/whatever got/VBD/got covered/NNP/covered. and/CC/and these/DT/these are/VBP/are n/VBN/n sub/NN/sub i/PRP/i upon/IN/upon opt/NNP/opt. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words n/IN/n sub/NN/sub i/PRP/i times/VBZ/times 1/CD/1 minus/NN/minus 1/CD/1 over/IN/over opt/NNP/opt. this/DT/this is/VBZ/is precisely/RB/precisely what/WP/what we/PRP/we claimed/VBD/claimed a/DT/a few/JJ/few minutes/NNS/minutes ago/NNP/ago. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 22/CD/22 /:/: 36/CD/36 /CD/) so/RB/so /,/, this/DT/this claim/NN/claim has/VBZ/has been/VBN/been proved/NNP/proved. so/RB/so /,/, let/VB/let me/PRP/me write/VB/write down/RP/down our/PRP$/our second/JJ/second claim/NN/claim just/RB/just here/NNP/here. our/PRP$/our second/JJ/second claim/NN/claim is/VBZ/is that/IN/that cardinality/NN/cardinality of/IN/of c/NN/c prime/JJ/prime /,/, number/NN/number of/IN/of sets/NNS/sets returned/VBN/returned by/IN/by our/PRP$/our algorithm/NN/algorithm is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to opt/VB/opt times/NNS/times l/NN/l n/NN/n n/NNP/n. so/RB/so /,/, it/PRP/it is/VBZ/is opt/VBN/opt by/IN/by log/NN/log n/NN/n log/NN/log of/IN/of log/NN/log n/NN/n factor/NN/factor /,/, log/NN/log taken/VBN/taken to/TO/to the/DT/the natural/JJ/natural the/DT/the base/NN/base e/NNP/e. so/RB/so /,/, we/PRP/we will/MD/will return/VB/return c/NN/c prime/NN/prime elements/NNP/elements. whereas/IN/whereas /,/, opt/NN/opt will/MD/will return/VB/return the/DT/the optimal/JJ/optimal algorithm/NN/algorithm /,/, will/MD/will return/VB/return opt/NNP/opt. and/CC/and we/PRP/we will/MD/will not/RB/not be/VB/be returning/VBG/returning too/RB/too many/JJ/many /,/, too/RB/too much/JJ/much worse/NNP/worse. we/PRP/we will/MD/will not/RB/not be/VB/be doing/VBG/doing too/RB/too much/RB/much worse/NNP/worse. we/PRP/we will/MD/will be/VB/be doing/VBG/doing only/RB/only an/DT/an l/NN/l n/NN/n and/CC/and n/NN/n factor/NN/factor worse/NNP/worse. this/DT/this is/VBZ/is our/PRP$/our second/JJ/second claim/NN/claim /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to prove/VB/prove next/NNP/next. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 23/CD/23 /:/: 41/CD/41 /CD/) so/RB/so /,/, how/WRB/how many/JJ/many elements/NNS/elements to/TO/to be/VB/be returned/VBN/returned ?/./? well/RB/well /,/, if/IN/if the/DT/the algorithm/NN/algorithm runs/VBZ/runs for/IN/for t/NN/t iterations/NNS/iterations then/RB/then /,/, we/PRP/we return/VBP/return cardinality/NN/cardinality of/IN/of c/NN/c prime/JJ/prime is/VBZ/is equal/JJ/equal to/TO/to t/NNP/t. so/RB/so /,/, what/WDT/what we/PRP/we need/VBP/need to/TO/to evaluate/VB/evaluate is/VBZ/is how/WRB/how many/JJ/many iterations/NNS/iterations /,/, does/VBZ/does the/DT/the algorithm/NN/algorithm run/VBN/run for/NNP/for. so/RB/so /,/, suppose/DT/suppose it/PRP/it runs/VBZ/runs t/NN/t iterations/NNS/iterations then/RB/then /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about the/DT/the number/NN/number of/IN/of elements/NNS/elements that/WDT/that are/VBP/are uncovered/VBN/uncovered after/IN/after t/NN/t iterations/NNP/iterations. well/RB/well /,/, we/PRP/we know/VBP/know that/IN/that n/NN/n sub/NN/sub t/NN/t is/VBZ/is that/IN/that number/NNP/number. and/CC/and we/PRP/we know/VBP/know from/IN/from our/PRP$/our first/JJ/first claim/NN/claim that/WDT/that /,/, n/VBP/n sub/NN/sub t/NN/t is/VBZ/is less/JJR/less than/IN/than n/NN/n sub/NN/sub t/NN/t minus/NN/minus 1/CD/1 times/NNS/times 1/CD/1 minus/NN/minus 1/CD/1 over/IN/over opt/NNP/opt. but/CC/but /,/, we/PRP/we can/MD/can keep/VB/keep on/IN/on repeating/NN/repeating this/NNP/this. and/CC/and so/RB/so /,/, therefore/IN/therefore we/PRP/we get/VBP/get this/DT/this is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to n/VB/n sub/NN/sub 0/-NONE-/0 times/VBZ/times 1/CD/1 minus/NN/minus 1/CD/1 over/IN/over opt/JJ/opt whole/NN/whole to/TO/to the/DT/the power/NN/power t/NN/t because/IN/because /,/, this/DT/this factor/NN/factor will/MD/will keep/VB/keep on/IN/on repeating/NNP/repeating. and/CC/and note/VB/note of/IN/of course/NN/course /,/, that/IN/that this/DT/this is/VBZ/is just/RB/just n/NNP/n. now/RB/now /,/, nice/JJ/nice little/JJ/little inequality/NN/inequality comes/VBZ/comes to/TO/to our/PRP$/our rescue/NNP/rescue. and/CC/and that/IN/that inequality/NN/inequality is/VBZ/is 1/CD/1 minus/NN/minus x/NN/x is/VBZ/is less/JJR/less than/IN/than e/NN/e to/TO/to the/DT/the power/NN/power minus/NN/minus x/NN/x for/IN/for x/NN/x not/RB/not equal/JJ/equal to/TO/to 0/CD/0. so/RB/so /,/, what/WDT/what does/VBZ/does that/IN/that allow/JJ/allow us/PRP/us to/TO/to conclude/VB/conclude ?/./? so/RB/so /,/, therefore/IN/therefore we/PRP/we can/MD/can conclude/VB/conclude n/NN/n sub/NN/sub t/NN/t is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than now/RB/now n/VBP/n times/NNP/times. so/RB/so /,/, this/DT/this is/VBZ/is 1/CD/1 minus/NN/minus 1/CD/1 over/IN/over opt/NNP/opt. so/RB/so /,/, 1/CD/1 over/IN/over opt/JJ/opt is/VBZ/is going/VBG/going to/TO/to be/VB/be my/PRP$/my x/NNP/x. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to have/VB/have e/NN/e to/TO/to the/DT/the power/NN/power minus/NN/minus t/NN/t upon/IN/upon opt/NNP/opt. now/RB/now /,/, let/VB/let us/PRP/us check/VB/check what/WP/what we/PRP/we what/WP/what happens/NNS/happens if/IN/if t/NN/t is/VBZ/is equal/JJ/equal to/TO/to opt/VB/opt times/NNS/times l/NN/l n/NN/n n/NNP/n. what/WP/what happens/VBZ/happens then/RB/then ?/./? so/RB/so /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but n/NN/n times/NNS/times e/VBP/e to/TO/to the/DT/the power/NN/power minus/NN/minus l/NN/l n/NN/n n/NN/n times/NNS/times opt/VBP/opt upon/IN/upon opt/NN/opt or/CC/or this/DT/this is/VBZ/is n/VBN/n times/NNS/times e/VBP/e to/TO/to the/DT/the power/NN/power minus/NN/minus l/NN/l n/NN/n n/NNP/n. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than 1/CD/1. so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that n/NN/n t/NN/t is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than 1/CD/1. but/CC/but /,/, if/IN/if n/NN/n t/NN/t is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than 1/CD/1 what/WP/what does/VBZ/does it/PRP/it mean/VB/mean ?/./? that/IN/that means/VBZ/means /,/, that/IN/that n/NN/n t/NN/t is/VBZ/is exactly/RB/exactly equal/JJ/equal to/TO/to 0/CD/0. what/WP/what is/VBZ/is that/IN/that mean/JJ/mean ?/./? that/IN/that means/VBZ/means /,/, after/IN/after t/NN/t iterations/NNS/iterations all/DT/all the/DT/the elements/NNS/elements of/IN/of u/NN/u have/VBP/have been/VBN/been covered/NNP/covered. nothing/NN/nothing has/VBZ/has been/VBN/been left/VBN/left uncovered/NNP/uncovered. but/CC/but /,/, this/DT/this happens/NNS/happens for/IN/for t/NN/t equals/NNS/equals opt/VBD/opt times/NNS/times l/VBP/l n/NN/n n/NNP/n. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words cardinality/NN/cardinality of/IN/of c/NN/c prime/JJ/prime is/VBZ/is opt/VBN/opt times/NNS/times l/VBP/l n/NN/n n/NNP/n. and/CC/and that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we claimed/NNP/claimed. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 26/CD/26 /:/: 40/CD/40 /CD/) so/RB/so /,/, this/DT/this finishes/NNS/finishes the/DT/the analysis/NN/analysis of/IN/of the/DT/the set/NN/set cover/NN/cover algorithm/NNP/algorithm. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have proved/VBN/proved over/IN/over here/RB/here is/VBZ/is that/IN/that /,/, we/PRP/we can/MD/can also/RB/also find/VB/find a/DT/a set/NN/set cover/NNP/cover. the/DT/the size/NN/size of/IN/of that/DT/that set/NN/set cover/NN/cover is/VBZ/is going/VBG/going to/TO/to be/VB/be worse/JJ/worse by/IN/by a/DT/a factor/NN/factor l/NN/l n/NN/n n/NNP/n. we/PRP/we now/RB/now come/VBP/come to/TO/to our/PRP$/our second/JJ/second problem/NNP/problem. the/DT/the second/JJ/second problem/NN/problem is/VBZ/is the/DT/the so/RB/so called/VBN/called k/NN/k center/NN/center problem/NNP/problem. i/PRP/i do/VBP/do not/RB/not want/VB/want to/TO/to use/VB/use the/DT/the letter/NN/letter k/NN/k /,/, because/IN/because k/NN/k comes/VBZ/comes in/IN/in handy/NN/handy for/IN/for indices/NNS/indices and/CC/and things/NNS/things like/IN/like that/NNP/that. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call it/PRP/it as/IN/as the/DT/the t/NN/t center/NN/center problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 27/CD/27 /:/: 19/CD/19 /CD/) this/DT/this time/NN/time /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to describe/VB/describe the/DT/the problem/NN/problem informally/RB/informally first/NNP/first. and/CC/and then/RB/then /,/, i/PRP/i will/MD/will formalize/VB/formalize it/NNP/it. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say let/JJ/let us/PRP/us take/VBP/take an/DT/an example/NNP/example. the/DT/the example/NN/example is/VBZ/is that/IN/that /,/, we/PRP/we are/VBP/are given/VBN/given some/DT/some statistics/NNS/statistics say/VBP/say about/IN/about students/NNS/students in/IN/in a/DT/a class/NNP/class. so/RB/so /,/, perhaps/RB/perhaps we/PRP/we are/VBP/are given/VBN/given a/DT/a plot/NNP/plot. so/RB/so /,/, on/IN/on one/CD/one axis/NNS/axis we/PRP/we say/VBP/say have/VBP/have the/DT/the height/NN/height on/IN/on the/DT/the other/JJ/other axis/NNS/axis may/MD/may be/VB/be we/PRP/we have/VBP/have say/VBP/say the/DT/the weight/NNP/weight. so/RB/so /,/, may/MD/may be/VB/be the/DT/the class/NN/class has/VBZ/has some/DT/some number/NN/number of/IN/of students/NNS/students and/CC/and may/MD/may be/VB/be the/DT/the plot/NN/plot looks/VBZ/looks something/NN/something like/IN/like this/NNP/this. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the plot/NN/plot of/IN/of the/DT/the heights/NNS/heights of/IN/of different/JJ/different students/NNP/students. now/RB/now /,/, an/DT/an important/JJ/important question/NN/question in/IN/in analyzing/NN/analyzing this/DT/this data/NN/data statistically/RB/statistically /,/, is/VBZ/is to/TO/to see/VB/see if/IN/if there/EX/there are/VBP/are any/DT/any clusters/NNP/clusters. so/RB/so /,/, say/VB/say for/IN/for example/NN/example you/PRP/you could/MD/could think/VB/think /,/, that/IN/that this/DT/this region/NN/region is/VBZ/is consists/NNS/consists of/IN/of students/NNS/students who/WP/who are/VBP/are somehow/RB/somehow similar/JJ/similar in/IN/in their/PRP$/their build/NNP/build. this/DT/this region/NN/region consists/VBZ/consists of/IN/of students/NNS/students /,/, which/WDT/which are/VBP/are who/WP/who are/VBP/are somehow/RB/somehow similar/JJ/similar in/IN/in their/PRP$/their build/NNP/build. so/RB/so /,/, it/PRP/it would/MD/would be/VB/be. so/RB/so /,/, it/PRP/it is/VBZ/is interesting/VBG/interesting statistically/NNP/statistically. it/PRP/it is/VBZ/is see/VB/see /,/, if/IN/if this/DT/this entire/JJ/entire distribution/NN/distribution can/MD/can be/VB/be described/VBN/described just/RB/just by/IN/by using/VBG/using say/NN/say two/CD/two representatives/NNP/representatives. and/CC/and the/DT/the question/NN/question then/RB/then is/VBZ/is /,/, is/VBZ/is there/EX/there a/DT/a good/JJ/good way/NN/way of/IN/of choosing/NN/choosing those/DT/those representatives/NNP/representatives. for/IN/for example/NN/example /,/, we/PRP/we could/MD/could say/VB/say that/IN/that this/DT/this could/MD/could be/VB/be one/CD/one of/IN/of the/DT/the representatives/NNP/representatives. and/CC/and say/VB/say /,/, we/PRP/we could/MD/could say/VB/say that/IN/that this/DT/this is/VBZ/is another/DT/another representative/NNP/representative. how/WRB/how do/VBP/do we/PRP/we choose/VB/choose a/DT/a representative/JJ/representative ?/./? well/RB/well /,/, a/DT/a representative/JJ/representative is/VBZ/is chosen/VBN/chosen /,/, so/RB/so that/IN/that its/PRP$/its distance/NN/distance from/IN/from the/DT/the rest/NN/rest of/IN/of the/DT/the elements/NNS/elements in/IN/in the/DT/the cluster/NN/cluster is/VBZ/is as/IN/as small/JJ/small as/IN/as possible/NNP/possible. and/CC/and furthermore/VB/furthermore /,/, we/PRP/we decide/VBP/decide to/TO/to put/VB/put an/DT/an element/NNP/element. say/VBP/say this/DT/this one/CD/one into/IN/into this/DT/this cluster/NN/cluster because/IN/because /,/, it/PRP/it is/VBZ/is closest/JJS/closest to/TO/to its/PRP$/its representative/NNP/representative. so/RB/so /,/, the/DT/the two/CD/two the/DT/the thing/NN/thing to/TO/to the/DT/the important/JJ/important thing/NN/thing to/TO/to note/VB/note over/IN/over here/RB/here is/VBZ/is the/DT/the so/RB/so called/VBN/called radius/NN/radius of/IN/of each/DT/each cluster/NNP/cluster. so/RB/so /,/, this/DT/this cluster/NN/cluster has/VBZ/has this/DT/this is/VBZ/is the/DT/the farthest/JJS/farthest element/NN/element in/IN/in this/NNP/this. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. in/IN/in this/DT/this say/NN/say for/IN/for example/NN/example /,/, this/DT/this might/MD/might be/VB/be the/DT/the farthest/JJS/farthest distance/NNP/distance. and/CC/and so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. and/CC/and so/RB/so /,/, the/DT/the maximum/NN/maximum of/IN/of these/DT/these two/CD/two is/VBZ/is the/DT/the so/RB/so called/VBN/called radius/NN/radius of/IN/of this/DT/this clustering/NNP/clustering. so/RB/so /,/, what/WDT/what is/VBZ/is our/PRP$/our goal/NN/goal ?/./? well/RB/well /,/, we/PRP/we are/VBP/are given/VBN/given how/WRB/how many/JJ/many clusters/NNS/clusters are/VBP/are needed/NNP/needed. and/CC/and we/PRP/we want/VBP/want to/TO/to pick/VB/pick the/DT/the cluster/NN/cluster centers/VBZ/centers and/CC/and divide/VB/divide the/DT/the data/NNS/data into/IN/into clusters/NNP/clusters. so/RB/so /,/, in/IN/in this/DT/this case/NN/case this/DT/this is/VBZ/is one/CD/one cluster/NN/cluster and/CC/and this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be another/DT/another cluster/NNP/cluster. here/RB/here the/DT/the clusters/NNS/clusters are/VBP/are very/RB/very obvious/NNP/obvious. but/CC/but /,/, in/IN/in general/JJ/general they/PRP/they will/MD/will be/VB/be mixed/VBN/mixed and/CC/and finding/NN/finding representatives/NNS/representatives and/CC/and defining/VBG/defining the/DT/the boundary/JJ/boundary between/IN/between the/DT/the clusters/NNS/clusters /,/, is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a little/RB/little bit/NN/bit hard/NNP/hard. but/CC/but in/IN/in any/DT/any case/NN/case /,/, we/PRP/we want/VBP/want to/TO/to define/VB/define the/DT/the boundary/JJ/boundary and/CC/and find/NN/find a/DT/a center/NN/center the/DT/the representatives/NNS/representatives and/CC/and the/DT/the radius/NN/radius /,/, the/DT/the radia/NN/radia of/IN/of the/DT/the clusters/NNS/clusters such/JJ/such that/IN/that /,/, the/DT/the largest/JJS/largest radius/NN/radius is/VBZ/is as/IN/as small/JJ/small as/IN/as possible/NNP/possible. so/RB/so /,/, that/IN/that is/VBZ/is how/WRB/how we/PRP/we measure/VBP/measure the/DT/the goodness/NN/goodness of/IN/of the/DT/the clustering/NN/clustering problem/NNP/problem. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do this/DT/this but/CC/but /,/, before/IN/before that/DT/that i/PRP/i would/MD/would like/VB/like to/TO/to give/VB/give you/PRP/you the/DT/the formal/JJ/formal definition/NN/definition of/IN/of this/DT/this problem/NNP/problem. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 30/CD/30 /:/: 48/CD/48 /CD/) so/RB/so /,/, the/DT/the input/NN/input consists/VBZ/consists of/IN/of a/DT/a set/NN/set p/NN/p /,/, which/WDT/which is/VBZ/is a/DT/a point/NN/point set/NNP/set. let/NN/let us/PRP/us say/VBP/say /,/, this/DT/this point/NN/point set/VBD/set is/VBZ/is in/IN/in some/DT/some d/NN/d dimensions/NNP/dimensions. and/CC/and it/PRP/it has/VBZ/has say/VBP/say some/DT/some n/NN/n points/NNP/points. and/CC/and we/PRP/we are/VBP/are also/RB/also given/VBN/given an/DT/an input/NN/input parameter/NN/parameter t/NNP/t. this/DT/this is/VBZ/is the/DT/the number/NN/number of/IN/of clusters/NNS/clusters desired/NNP/desired. before/IN/before i/PRP/i describe/VBP/describe the/DT/the output/NN/output /,/, i/PRP/i need/VBP/need to/TO/to have/VB/have good/JJ/good notion/NN/notion of/IN/of distances/NNS/distances and/CC/and things/NNS/things like/IN/like that/NNP/that. so/RB/so /,/, the/DT/the distance/NN/distance between/IN/between two/CD/two points/NNS/points is/VBZ/is going/VBG/going to/TO/to be/VB/be simply/RB/simply there/RB/there /,/, euclidean/JJ/euclidean distance/NNP/distance. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a d/NN/d dimensional/JJ/dimensional space/NNP/space. it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be square/JJ/square root/NN/root of/IN/of the/DT/the sum/NN/sum of/IN/of the/DT/the squares/NNS/squares of/IN/of the/DT/the coordinate/NN/coordinate differences/NNS/differences as/IN/as usual/NNP/usual. but/CC/but here/RB/here /,/, we/PRP/we are/VBP/are also/RB/also going/VBG/going to/TO/to be/VB/be talking/VBG/talking about/IN/about the/DT/the distances/NNS/distances between/IN/between a/DT/a set/NN/set of/IN/of points/NNS/points and/CC/and a/DT/a point/NNP/point. so/RB/so /,/, let/VB/let me/PRP/me define/VB/define that/IN/that or/CC/or a/DT/a distance/NN/distance between/IN/between one/CD/one set/NN/set of/IN/of points/NNS/points and/CC/and another/DT/another set/NN/set of/IN/of points/NNP/points. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say s/NNS/s is/VBZ/is one/CD/one set/NN/set of/IN/of points/NNS/points and/CC/and s/NNS/s prime/VBP/prime is/VBZ/is another/DT/another set/NN/set of/IN/of points/NNP/points. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to define/VB/define the/DT/the distance/NN/distance between/IN/between two/CD/two point/NN/point sets/NNP/sets. as/IN/as the/DT/the minimum/JJ/minimum /,/, the/DT/the minimum/JJ/minimum distance/NN/distance between/IN/between p/NN/p p/NN/p prime/NN/prime /,/, where/WRB/where p/NN/p is/VBZ/is in/IN/in s/NNS/s and/CC/and p/VB/p prime/JJ/prime is/VBZ/is in/IN/in s/NNS/s prime/NNP/prime. so/RB/so /,/, these/DT/these could/MD/could be/VB/be in/IN/in general/JJ/general arbitrary/NN/arbitrary point/NN/point sets/NNP/sets. but/CC/but /,/, we/PRP/we want/VBP/want to/TO/to see/VB/see are/VBP/are there/RB/there two/CD/two points/NNS/points at/IN/at least/JJS/least which/WDT/which are/VBP/are too/RB/too close/JJ/close or/CC/or very/RB/very close/NNP/close. and/CC/and that/IN/that is/VBZ/is the/DT/the distance/NN/distance that/IN/that if/IN/if we/PRP/we are/VBP/are going/VBG/going to/TO/to pay/VB/pay attention/NN/attention to/NNP/to. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now tell/VBP/tell you/PRP/you what/WP/what the/DT/the output/NN/output is/NNP/is. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 32/CD/32 /:/: 49/CD/49 /CD/) so/RB/so /,/, we/PRP/we had/VBD/had the/DT/the set/NN/set p/NN/p of/IN/of points/NNP/points. so/RB/so /,/, the/DT/the output/NN/output is/VBZ/is a/DT/a set/NN/set c/NN/c which/WDT/which is/VBZ/is a/DT/a subset/NN/subset of/IN/of p/NN/p such/JJ/such that/IN/that /,/, cardinality/NN/cardinality of/IN/of c/NN/c is/VBZ/is equal/JJ/equal to/TO/to t/VB/t remember/NN/remember t/NN/t was/VBD/was number/NN/number of/IN/of clusters/NNP/clusters. and/CC/and what/WP/what we/PRP/we want/VBP/want is/VBZ/is /,/, that/IN/that d/NN/d of/IN/of c/NN/c to/TO/to p/VB/p should/MD/should be/VB/be as/RB/as small/JJ/small as/IN/as possible/NNP/possible. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take the/DT/the maximum/NN/maximum over/IN/over little/JJ/little p/NN/p belonging/VBG/belonging to/TO/to capital/NN/capital p/NN/p of/IN/of this/DT/this distance/NNP/distance. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to ask/VB/ask which/WDT/which is/VBZ/is the/DT/the point/NN/point which/WDT/which is/VBZ/is farthest/JJS/farthest from/IN/from these/DT/these centers/NNS/centers /,/, that/IN/that is/VBZ/is the/DT/the distance/NN/distance which/WDT/which i/PRP/i want/VBP/want to/TO/to minimize/VB/minimize ?/./? so/RB/so /,/, max/NN/max p/NN/p in/IN/in p/NN/p is/VBZ/is smallest/JJS/smallest possible/NNP/possible. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the intuition/NN/intuition over/IN/over here/RB/here ?/./? so/RB/so /,/, the/DT/the c/NN/c is/VBZ/is the/DT/the c/NN/c that/IN/that we/PRP/we want/VBP/want to/TO/to select/VB/select are/VBP/are the/DT/the cluster/NN/cluster centers/NNP/centers. every/DT/every point/NN/point is/VBZ/is at/IN/at some/DT/some distance/NNP/distance. so/RB/so /,/, when/WRB/when we/PRP/we ask/VBP/ask d/VBN/d of/IN/of c/NN/c comma/NN/comma p/NN/p /,/, we/PRP/we are/VBP/are asking/VBG/asking which/WDT/which is/VBZ/is the/DT/the closest/JJS/closest center/NN/center for/IN/for this/DT/this point/NN/point ?/./? so/RB/so /,/, of/IN/of the/DT/the closest/JJS/closest centers/NNS/centers i/PRP/i am/VBP/am going/VBG/going to/TO/to take/VB/take that/IN/that distance/NNP/distance. but/CC/but /,/, now/RB/now i/PRP/i am/VBP/am going/VBG/going to/TO/to ask/VB/ask /,/, which/WDT/which is/VBZ/is the/DT/the point/NN/point which/WDT/which is/VBZ/is farthest/JJS/farthest from/IN/from its/PRP$/its closest/NN/closest distance/NN/distance ?/./? so/RB/so /,/, which/WDT/which is/VBZ/is exactly/RB/exactly /,/, what/WDT/what we/PRP/we talked/VBD/talked about/IN/about earlier/JJR/earlier ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 35/CD/35 /:/: 00/CD/00 /CD/) so/RB/so /,/, what/WDT/what has/VBZ/has happened/VBN/happened over/IN/over here/RB/here is/VBZ/is that/IN/that /,/, this/DT/this is/VBZ/is our/PRP$/our set/NN/set of/IN/of points/NNP/points. so/RB/so /,/, we/PRP/we pick/VBP/pick some/DT/some centers/NNP/centers. and/CC/and for/IN/for each/DT/each point/NN/point we/PRP/we are/VBP/are asking/VBG/asking /,/, which/WDT/which is/VBZ/is the/DT/the closest/JJS/closest center/NN/center ?/./? and/CC/and we/PRP/we are/VBP/are taking/VBG/taking its/PRP$/its distance/NN/distance and/CC/and we/PRP/we are/VBP/are minimizing/VBG/minimizing this/DT/this maximum/NN/maximum over/IN/over all/DT/all distances/NNP/distances. so/RB/so /,/, let/VB/let me/PRP/me also/RB/also define/VBP/define the/DT/the radius/NN/radius of/IN/of each/DT/each cluster/NNP/cluster. so/RB/so /,/, first/JJ/first of/IN/of all/DT/all let/NN/let me/PRP/me define/VBP/define each/DT/each cluster/NNP/cluster. so/RB/so /,/, if/IN/if a/DT/a point/NN/point is/VBZ/is closest/VBN/closest to/TO/to this/DT/this center/NN/center then/RB/then /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to say/VB/say that/IN/that this/DT/this point/NN/point belongs/VBZ/belongs to/TO/to this/DT/this cluster/NNP/cluster. so/RB/so /,/, that/IN/that is/VBZ/is how/WRB/how clusters/NNS/clusters are/VBP/are defined/NNP/defined. and/CC/and of/IN/of all/DT/all the/DT/the points/NNS/points which/WDT/which are/VBP/are belonging/VBG/belonging to/TO/to a/DT/a certain/JJ/certain cluster/NN/cluster /,/, i/PRP/i just/RB/just look/VBP/look at/IN/at the/DT/the maximum/NN/maximum distance/NNP/distance. and/CC/and that/IN/that is/VBZ/is the/DT/the radius/NN/radius of/IN/of that/DT/that cluster/NNP/cluster. let/VBD/let us/PRP/us now/RB/now describe/VBP/describe /,/, let/VB/let me/PRP/me now/RB/now describe/VBP/describe an/DT/an algorithm/NN/algorithm for/IN/for this/DT/this problem/NNP/problem. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the clustering/NN/clustering algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 36/CD/36 /:/: 00/CD/00 /CD/) so/RB/so /,/, what/WDT/what are/VBP/are we/PRP/we suppose/VBP/suppose to/TO/to do/VB/do ?/./? we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to select/VB/select the/DT/the centers/NNP/centers. we/PRP/we are/VBP/are supposed/VBN/supposed to/TO/to select/VB/select t/NN/t centers/NNS/centers such/JJ/such that/IN/that /,/, no/DT/no point/NN/point is/VBZ/is too/RB/too far/RB/far away/RB/away from/IN/from any/DT/any of/IN/of the/DT/the centers/NNP/centers. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use a/DT/a greedy/NN/greedy strategy/NN/strategy for/IN/for solving/NN/solving this/DT/this problem/NNP/problem. so/RB/so /,/, how/WRB/how do/VBP/do i/PRP/i select/VB/select the/DT/the first/JJ/first center/NN/center ?/./? well/RB/well /,/, for/IN/for that/DT/that we/PRP/we do/VBP/do not/RB/not really/RB/really have/VB/have really/RB/really good/JJ/good idea/NN/idea right/RB/right now/NNP/now. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just say/VBP/say that/IN/that it/PRP/it is/VBZ/is picked/VBN/picked arbitrary/-NONE-/arbitrary. but/CC/but note/VB/note that/IN/that /,/, if/IN/if i/PRP/i pick/VBP/pick some/DT/some k/NN/k clusters/NNP/clusters. so/RB/so /,/, i/PRP/i have/VBP/have picked/VBN/picked c/NN/c 1/CD/1 c/NN/c 2/CD/2 c/NN/c k/NN/k already/RB/already picked/NNP/picked. then/RB/then /,/, if/IN/if i/PRP/i want/VBP/want to/TO/to pick/VB/pick c/NN/c k/NN/k plus/CC/plus 1/CD/1 there/EX/there is/VBZ/is an/DT/an interesting/JJ/interesting greedy/NN/greedy idea/NN/idea that/IN/that can/MD/can come/VB/come into/IN/into play/NNP/play. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the greedy/JJ/greedy idea/NN/idea ?/./? well/RB/well we/PRP/we ask/VBP/ask /,/, what/WP/what is/VBZ/is the/DT/the farthest/JJS/farthest point/NN/point from/IN/from these/DT/these first/JJ/first k/NN/k clusters/NNS/clusters ?/./? we/PRP/we picked/VBD/picked first/RB/first k/NN/k centers/NNP/centers. and/CC/and we/PRP/we want/VBP/want to/TO/to know/VB/know /,/, which/WDT/which is/VBZ/is the/DT/the point/NN/point which/WDT/which is/VBZ/is farthest/JJS/farthest from/IN/from this/DT/this k/NN/k centers/VBZ/centers ?/./? so/RB/so /,/, this/DT/this point/NN/point which/WDT/which is/VBZ/is farthest/JJS/farthest is/VBZ/is at/IN/at some/DT/some distance/NN/distance r/NNP/r. then/RB/then that/IN/that in/IN/in fact/NN/fact /,/, is/VBZ/is the/DT/the radius/NN/radius of/IN/of this/DT/this clustering/NN/clustering that/IN/that we/PRP/we have/VBP/have produced/NNP/produced. so/RB/so /,/, now/RB/now we/PRP/we want/VBP/want to/TO/to reduce/VB/reduce this/DT/this radius/NN/radius of/IN/of this/DT/this clustering/NNP/clustering. how/WRB/how do/VBP/do we/PRP/we do/VBP/do that/IN/that ?/./? well/RB/well /,/, here/RB/here is/VBZ/is a/DT/a simple/JJ/simple idea/NNP/idea. we/PRP/we pick/VBP/pick c/NN/c k/NN/k plus/CC/plus 1/CD/1 to/TO/to be/VB/be exactly/RB/exactly that/IN/that point/NNP/point. this/DT/this is/VBZ/is the/DT/the point/NN/point /,/, farthest/VBP/farthest from/IN/from c/NN/c 1/CD/1 all/DT/all the/DT/the way/NN/way till/IN/till c/NN/c k/NNP/k. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now have/VBP/have some/NNP/some. so/RB/so /,/, that/IN/that is/VBZ/is why/WRB/why that/IN/that is/VBZ/is basically/RB/basically the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i will/MD/will pick/VB/pick c/NN/c 1/CD/1 arbitrarily/NNP/arbitrarily. then/RB/then /,/, i/PRP/i will/MD/will pick/VB/pick c/NN/c 2/CD/2 to/TO/to be/VB/be the/DT/the farthest/JJS/farthest point/NN/point from/IN/from c/NN/c 1/CD/1. then/RB/then /,/, i/PRP/i will/MD/will pick/VB/pick c/NN/c 3/CD/3 to/TO/to be/VB/be the/DT/the farthest/JJS/farthest point/NN/point from/IN/from c/NN/c 1/CD/1 as/IN/as well/RB/well as/IN/as c/NN/c 2/CD/2. then/RB/then /,/, given/VBN/given k/NN/k points/NNS/points i/PRP/i will/MD/will pick/VB/pick the/DT/the k/NN/k plus/VBZ/plus 1th/JJ/1th point/NN/point /,/, to/TO/to be/VB/be the/DT/the farthest/JJS/farthest from/IN/from all/DT/all these/DT/these k/NN/k points/NNP/points. let/NN/let me/PRP/me now/RB/now define/VBP/define some/DT/some notation/NNP/notation. so/RB/so /,/, my/PRP$/my notation/NN/notation is/VBZ/is as/IN/as follows/NNP/follows. i/PRP/i am/VBP/am going/VBG/going to/TO/to use/VB/use r/NN/r sub/NN/sub k/NN/k to/TO/to be/VB/be the/DT/the clustering/NN/clustering radius/VBZ/radius /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we want/VBP/want to/TO/to keep/VB/keep small/JJ/small after/IN/after k/NN/k points/NNS/points are/VBP/are picked/NNP/picked. what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about this/DT/this clustering/NN/clustering radius/VBZ/radius ?/./? so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that r/NN/r k/NN/k plus/CC/plus 1/CD/1 is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to r/VB/r k/NNP/k. why/WRB/why ?/./? because/IN/because /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we exactly/RB/exactly did/NNP/did. we/PRP/we pick/VBP/pick the/DT/the point/NN/point /,/, which/WDT/which is/VBZ/is farthest/JJS/farthest and/CC/and we/PRP/we made/VBD/made it/PRP/it into/IN/into a/DT/a cluster/NNP/cluster. so/RB/so /,/, very/RB/very likely/JJ/likely now/RB/now the/DT/the farthest/JJS/farthest point/NN/point the/DT/the distance/NN/distance of/IN/of the/DT/the farthest/JJS/farthest point/NN/point has/VBZ/has reduced/NNP/reduced. and/CC/and therefore/RB/therefore /,/, we/PRP/we expect/VBP/expect the/DT/the k/NN/k plus/VBZ/plus 1th/JJ/1th clustering/NN/clustering radius/VBZ/radius to/TO/to be/VB/be smaller/JJR/smaller than/IN/than r/NN/r k/NNP/k. well/RB/well /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about r/NN/r k/NN/k itself/PRP/itself ?/./? what/WP/what is/VBZ/is what/WP/what do/VBP/do we/PRP/we know/VB/know about/IN/about the/DT/the clustering/NN/clustering radius/VBZ/radius r/NN/r k/NN/k ?/./? this/DT/this in/IN/in fact/NN/fact /,/, is/VBZ/is the/DT/the distance/NN/distance from/IN/from c/NN/c 1/CD/1 c/NN/c 2/CD/2 c/NN/c k/NN/k to/TO/to c/VB/c k/NN/k plus/CC/plus 1/CD/1. because/IN/because that/DT/that is/VBZ/is exactly/RB/exactly /,/, what/WDT/what we/PRP/we did/NNP/did. we/PRP/we looked/VBD/looked at/IN/at which/WDT/which was/VBD/was the/DT/the farthest/JJS/farthest point/NN/point after/IN/after picking/VBG/picking /,/, having/VBG/having picked/VBN/picked the/DT/the first/JJ/first k/NN/k centers/NNP/centers. we/PRP/we picked/VBD/picked at/IN/at we/PRP/we looked/VBD/looked at/IN/at the/DT/the farthest/JJS/farthest point/NNP/point. so/RB/so /,/, this/DT/this was/VBD/was the/DT/the point/NN/point p/NNP/p. and/CC/and we/PRP/we said/VBD/said /,/, what/WP/what was/VBD/was that/IN/that distance/NNP/distance. so/RB/so /,/, this/DT/this is/VBZ/is exactly/RB/exactly that/IN/that distance/NNP/distance. and/CC/and therefore/RB/therefore /,/, that/IN/that must/MD/must have/VB/have been/VBN/been the/DT/the radius/NN/radius after/IN/after having/VBG/having picked/VBN/picked /,/, the/DT/the first/JJ/first k/NN/k points/NNP/points. and/CC/and what/WP/what we/PRP/we have/VBP/have argued/VBN/argued earlier/RBR/earlier is/VBZ/is that/IN/that /,/, the/DT/the distance/NN/distance is/VBZ/is going/VBG/going to/TO/to keep/VB/keep on/IN/on decreasing/NNP/decreasing. so/IN/so /,/, these/DT/these two/CD/two are/VBP/are the/DT/the important/JJ/important facts/NNS/facts about/IN/about how/WRB/how the/DT/the radius/NN/radius of/IN/of clustering/VBG/clustering change/NN/change is/VBZ/is related/VBN/related to/TO/to each/DT/each other/JJ/other and/CC/and to/TO/to the/DT/the distances/NNS/distances and/CC/and to/TO/to the/DT/the centers/NNP/centers. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use these/DT/these facts/NNS/facts in/IN/in a/DT/a minute/NNP/minute. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 40/CD/40 /:/: 55/CD/55 /CD/) so/RB/so /,/, let/VB/let us/PRP/us now/RB/now analyze/VBP/analyze this/DT/this algorithm/NN/algorithm in/IN/in more/JJR/more detail/NNP/detail. as/IN/as we/PRP/we said/VBD/said earlier/RBR/earlier /,/, this/DT/this algorithm/NN/algorithm the/DT/the analysis/NN/analysis of/IN/of both/DT/both these/DT/these algorithms/NNS/algorithms is/VBZ/is going/VBG/going to/TO/to be/VB/be based/VBN/based on/IN/on this/DT/this compete/JJ/compete with/IN/with the/DT/the optimal/JJ/optimal strategy/NNP/strategy. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to try/NN/try and/CC/and see/VB/see what/WP/what the/DT/the algorithm/NN/algorithm /,/, what/WP/what the/DT/the optimal/JJ/optimal algorithm/NN/algorithm would/MD/would do/VB/do. so/RB/so /,/, let/VB/let me/PRP/me just/RB/just remind/VBP/remind you/PRP/you that/IN/that /,/, c/NN/c 1/CD/1 c/NN/c 2/CD/2 c/NN/c t/NN/t are/VBP/are centers/NNS/centers selected/VBN/selected by/IN/by our/PRP$/our algorithm/NN/algorithm a/NNP/a. let/NN/let us/PRP/us say/VBP/say /,/, o/RB/o 1/CD/1 o/NN/o 2/CD/2 o/NN/o t/NN/t are/VBP/are centers/NNS/centers selected/VBN/selected by/IN/by the/DT/the optimal/JJ/optimal algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we would/MD/would like/VB/like to/TO/to see/VB/see how/WRB/how these/DT/these centers/NNS/centers are/VBP/are related/VBN/related to/TO/to each/DT/each other/NNP/other. the/DT/the interesting/JJ/interesting thing/NN/thing is/VBZ/is that/IN/that /,/, we/PRP/we do/VBP/do not/RB/not know/VB/know what/WP/what o/RB/o 1/CD/1 o/NN/o 2/CD/2 o/NN/o t/NN/t are/NNP/are. but/CC/but /,/, nevertheless/NN/nevertheless for/IN/for the/DT/the purposes/NNS/purposes of/IN/of the/DT/the proof/NN/proof we/PRP/we will/MD/will assume/VB/assume that/IN/that /,/, we/PRP/we know/VBP/know them/NNP/them. so/RB/so /,/, we/PRP/we are/VBP/are not/RB/not actually/RB/actually going/VBG/going to/TO/to compute/VB/compute them/PRP/them any/DT/any time/NNP/time. but/CC/but /,/, for/IN/for the/DT/the purposes/NNS/purposes of/IN/of the/DT/the proof/NN/proof we/PRP/we know/VBP/know them/NNP/them. and/CC/and then/RB/then /,/, based/VBN/based on/IN/on that/DT/that we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to argue/VB/argue /,/, what/WDT/what the/DT/the relationship/NN/relationship between/IN/between the/DT/the two/CD/two clustering/VBG/clustering is/NNP/is. so/RB/so /,/, we/PRP/we have/VBP/have those/DT/those two/CD/two we/PRP/we have/VBP/have the/DT/the center/NN/center selected/VBD/selected by/IN/by c/NN/c 1/CD/1 by/IN/by the/DT/the algorithm/NNP/algorithm. and/CC/and the/DT/the center/NN/center selected/VBD/selected by/IN/by the/DT/the optimal/JJ/optimal by/IN/by our/PRP$/our algorithm/NN/algorithm and/CC/and then/RB/then by/IN/by the/DT/the optimal/JJ/optimal algorithm/NNP/algorithm. so/RB/so /,/, let/VB/let us/PRP/us focus/VB/focus on/IN/on the/DT/the centers/NNS/centers selected/VBN/selected by/IN/by the/DT/the optimal/JJ/optimal algorithm/NNP/algorithm. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 42/CD/42 /:/: 23/CD/23 /CD/) so/RB/so /,/, say/VB/say this/DT/this is/VBZ/is o/RB/o 1/CD/1. this/DT/this here/RB/here is/VBZ/is o/RB/o 2/CD/2. this/DT/this here/RB/here is/VBZ/is o/RB/o 3/CD/3. this/DT/this may/MD/may be/VB/be here/RB/here is/VBZ/is o/RB/o 4/CD/4. may/MD/may be/VB/be this/DT/this is/VBZ/is o/RB/o 5/CD/5. and/CC/and let/VB/let us/PRP/us also/RB/also look/VBP/look at/IN/at the/DT/the corresponding/NN/corresponding clusters/NNP/clusters. so/RB/so /,/, say/VB/say these/DT/these are/VBP/are the/DT/the corresponding/VBG/corresponding clusters/NNP/clusters. i/PRP/i am/VBP/am not/RB/not going/VBG/going to/TO/to draw/VB/draw all/DT/all the/DT/the points/NNS/points inside/VBP/inside but/CC/but /,/, i/PRP/i am/VBP/am just/RB/just drawing/VBG/drawing the/DT/the corresponding/VBG/corresponding clusters/NNP/clusters. so/RB/so /,/, now/RB/now let/VB/let us/PRP/us ask/VB/ask how/WRB/how do/VB/do the/DT/the centers/NNS/centers that/WDT/that we/PRP/we selected/VBD/selected relate/JJ/relate to/TO/to these/DT/these clusters/NNP/clusters. a/DT/a natural/JJ/natural question/NN/question to/TO/to ask/VB/ask is/VBZ/is /,/, is/VBZ/is there/EX/there exactly/RB/exactly one/CD/one center/NN/center we/PRP/we select/VBP/select from/IN/from each/DT/each of/IN/of the/DT/the optimal/JJ/optimal clusters/NNS/clusters or/CC/or do/VBP/do we/PRP/we perhaps/RB/perhaps select/VBP/select two/CD/two centers/NNS/centers from/IN/from each/DT/each cluster/NNP/cluster. natural/JJ/natural guesses/NNS/guesses to/TO/to say/VB/say that/IN/that perhaps/RB/perhaps /,/, we/PRP/we just/RB/just select/VBP/select our/PRP$/our clusters/NNS/clusters our/PRP$/our centers/NNS/centers are/VBP/are also/RB/also selected/VBN/selected such/JJ/such that/IN/that /,/, that/IN/that one/CD/one comes/VBZ/comes from/IN/from that/DT/that each/DT/each one/CD/one comes/VBZ/comes from/IN/from the/DT/the other/JJ/other /,/, from/IN/from the/DT/the optimal/JJ/optimal cluster/NNP/cluster. of/IN/of course/NN/course /,/, it/PRP/it could/MD/could be/VB/be this/DT/this or/CC/or it/PRP/it could/MD/could be/VB/be the/DT/the case/NN/case that/IN/that we/PRP/we select/VBP/select two/CD/two centers/NNP/centers. two/CD/two of/IN/of our/PRP$/our centers/NNS/centers are/VBP/are selected/VBN/selected from/IN/from the/DT/the same/JJ/same cluster/NN/cluster /,/, as/IN/as the/DT/the algorithm/NN/algorithm selects/VBZ/selects as/IN/as the/DT/the optimal/JJ/optimal algorithm/NN/algorithm selects/NNP/selects. so/RB/so /,/, basically/RB/basically there/EX/there are/VBP/are two/CD/two cases/NNP/cases. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 43/CD/43 /:/: 46/CD/46 /CD/) case/NN/case 1/CD/1 /,/, each/DT/each optimal/JJ/optimal cluster/NN/cluster contains/NNS/contains 1/CD/1 c/NN/c sub/NN/sub i/NNP/i. or/CC/or case/NN/case 2/CD/2 /,/, each/DT/each optimal/JJ/optimal cluster/NN/cluster or/CC/or some/DT/some optimal/JJ/optimal cluster/NN/cluster contains/NNS/contains say/VBP/say c/NN/c sub/NN/sub i/PRP/i and/CC/and c/NN/c sub/NN/sub k/NNP/k. so/RB/so /,/, in/IN/in fact/NN/fact let/NN/let us/PRP/us call/VBP/call this/DT/this optimal/JJ/optimal cluster/NN/cluster o/NN/o sub/NN/sub j/NNP/j. you/PRP/you might/MD/might think/VB/think that/IN/that /,/, we/PRP/we also/RB/also need/VBP/need to/TO/to consider/VB/consider a/DT/a third/JJ/third case/NNP/case. some/DT/some optimal/JJ/optimal cluster/NN/cluster contains/NNS/contains no/DT/no centers/NNS/centers picked/VBD/picked by/IN/by our/PRP$/our algorithm/NNP/algorithm. but/CC/but /,/, note/VBP/note that/IN/that in/IN/in this/DT/this case/NN/case some/DT/some other/JJ/other optimal/JJ/optimal cluster/NN/cluster must/MD/must contain/VB/contain at/IN/at least/JJS/least two/CD/two of/IN/of our/PRP$/our centers/NNP/centers. and/CC/and so/RB/so in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will be/VB/be having/VBG/having our/PRP$/our case/NN/case two/CD/two in/IN/in this/DT/this possibility/NN/possibility as/IN/as well/NNP/well. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now analyze/VBP/analyze case/NN/case one/CD/one in/IN/in detail/NNP/detail. in/IN/in fact/NN/fact /,/, each/DT/each optimal/JJ/optimal cluster/NN/cluster contains/NNS/contains 1/CD/1 c/NN/c i/NNP/i. and/CC/and we/PRP/we are/VBP/are free/JJ/free to/TO/to give/VB/give the/DT/the optimal/JJ/optimal clusters/NNS/clusters whatever/RB/whatever /,/, names/VBZ/names we/PRP/we want/NNP/want. so/RB/so /,/, we/PRP/we can/MD/can say/VB/say that/IN/that each/DT/each optimal/JJ/optimal cluster/NN/cluster o/NN/o sub/NN/sub i/PRP/i contains/VBZ/contains /,/, exactly/RB/exactly 1/CD/1 c/NN/c i/NNP/i. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we will/MD/will name/VB/name it/PRP/it correspondingly/NNP/correspondingly. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 36/CD/36 /CD/) so/RB/so /,/, let/VB/let us/PRP/us come/VB/come to/TO/to this/DT/this picture/NN/picture over/IN/over here/NNP/here. so/RB/so /,/, in/IN/in this/DT/this picture/NN/picture may/MD/may be/VB/be what/WP/what we/PRP/we are/VBP/are looking/VBG/looking at/IN/at is/VBZ/is /,/, this/DT/this is/VBZ/is c/NN/c 4/CD/4 this/DT/this is/VBZ/is c/NN/c 3/CD/3 this/DT/this is/VBZ/is c/NN/c 5/CD/5 c/NN/c 2/CD/2 c/NN/c 1/CD/1. so/RB/so /,/, the/DT/the algorithm/NN/algorithm happen/NN/happen to/TO/to choose/VB/choose center/NN/center such/JJ/such that/IN/that /,/, exactly/RB/exactly one/CD/one point/NN/point is/VBZ/is picked/VBN/picked from/IN/from the/DT/the clusters/NNS/clusters that/WDT/that the/DT/the optimal/JJ/optimal algorithm/NN/algorithm would/MD/would have/VB/have chosen/NNP/chosen. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the first/JJ/first case/NN/case that/WDT/that we/PRP/we are/VBP/are looking/VBG/looking at/NNP/at. so/RB/so /,/, basically/RB/basically the/DT/the idea/NN/idea now/RB/now is/VBZ/is that/IN/that we/PRP/we will/MD/will prove/VB/prove that/IN/that in/IN/in both/DT/both cases/NNP/cases. we/PRP/we will/MD/will not/RB/not do/VB/do much/RB/much worse/VB/worse than/IN/than /,/, what/WP/what the/DT/the optimal/JJ/optimal algorithm/NN/algorithm did/NNP/did. so/RB/so /,/, now/RB/now let/VB/let us/PRP/us pick/VB/pick point/NN/point p/NN/p in/IN/in one/CD/one of/IN/of these/DT/these clusters/NNP/clusters. what/WP/what do/VBP/do i/PRP/i know/VB/know about/IN/about the/DT/the distance/NN/distance of/IN/of this/DT/this p/NN/p from/IN/from c/NN/c 3/CD/3. i/PRP/i know/VBP/know that/IN/that /,/, this/DT/this distance/NN/distance is/VBZ/is at/IN/at most/JJS/most the/DT/the sum/NN/sum of/IN/of this/DT/this distance/NN/distance plus/VBZ/plus the/DT/the sum/NN/sum of/IN/of this/DT/this distance/NNP/distance. but/CC/but /,/, what/WP/what is/VBZ/is this/DT/this distance/NN/distance itself/PRP/itself ?/./? this/DT/this distance/NN/distance is/VBZ/is at/IN/at most/JJS/most /,/, the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. this/DT/this distance/NN/distance is/VBZ/is also/RB/also at/IN/at most/JJS/most the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. so/RB/so /,/, that/IN/that means/NNS/means that/WDT/that this/DT/this distance/NN/distance is/VBZ/is at/IN/at most/JJS/most twice/NN/twice the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 17/CD/17 /CD/) so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the important/JJ/important observation/NN/observation that/WDT/that we/PRP/we have/VBP/have made/NNP/made. we/PRP/we have/VBP/have established/VBN/established that/IN/that /,/, if/IN/if p/NN/p is/VBZ/is a/DT/a point/NN/point in/IN/in optimal/JJ/optimal cluster/NN/cluster /,/, c/NN/c cluster/NN/cluster o/NN/o i/PRP/i capital/NN/capital o/RB/o i/NNP/i. then/RB/then /,/, the/DT/the distance/NN/distance of/IN/of p/NN/p from/IN/from c/NN/c i/PRP/i is/VBZ/is at/IN/at most/JJS/most two/CD/two times/NNS/times the/DT/the radius/NN/radius of/IN/of o/NN/o i/NNP/i. but/CC/but /,/, this/DT/this is/VBZ/is nothing/NN/nothing but/CC/but /,/, this/DT/this is/VBZ/is certainly/RB/certainly at/IN/at most/JJS/most 2/CD/2 times/NNS/times the/DT/the max/NN/max radius/VBZ/radius of/IN/of the/DT/the optimal/JJ/optimal clustering/NNP/clustering. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to call/VB/call this/DT/this r/NN/r sub/NN/sub opt/NNP/opt. so/RB/so /,/, this/DT/this is/VBZ/is 2/CD/2 times/NNS/times r/NN/r sub/NN/sub opt/NNP/opt. so/RB/so /,/, we/PRP/we have/VBP/have really/RB/really proved/VBN/proved what/WP/what we/PRP/we wanted/NNP/wanted. surprising/VBG/surprising as/IN/as it/PRP/it may/MD/may seem/VB/seem /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that this/DT/this point/NN/point is/VBZ/is close/JJ/close to/TO/to some/DT/some center/NN/center not/RB/not necessarily/RB/necessarily the/DT/the center/NN/center with/IN/with which/WDT/which it/PRP/it is/VBZ/is associated/VBN/associated /,/, in/IN/in the/DT/the final/JJ/final clustering/NN/clustering that/WDT/that our/PRP$/our algorithm/NN/algorithm produces/NNP/produces. it/PRP/it might/MD/might be/VB/be associated/VBN/associated with/IN/with some/DT/some other/JJ/other center/NNP/center. but/CC/but /,/, its/PRP$/its distance/NN/distance to/TO/to this/DT/this center/NN/center c/NN/c i/PRP/i is/VBZ/is itself/PRP/itself less/JJR/less than/IN/than 2/CD/2 times/NNS/times r/NN/r opt/NNP/opt. and/CC/and this/DT/this is/VBZ/is true/JJ/true for/IN/for every/DT/every point/NNP/point. and/CC/and therefore/RB/therefore /,/, in/IN/in this/DT/this case/NN/case we/PRP/we have/VBP/have in/IN/in fact/NN/fact established/VBD/established the/DT/the theorem/NN/theorem which/WDT/which said/VBD/said that/IN/that /,/, which/WDT/which says/VBZ/says that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 49/CD/49 /CD/) so/RB/so /,/, we/PRP/we have/VBP/have proved/VBN/proved that/IN/that the/DT/the distance/NN/distance of/IN/of the/DT/the quality/NN/quality of/IN/of the/DT/the clustering/NN/clustering /,/, our/PRP$/our quality/NN/quality of/IN/of clustering/VBG/clustering produces/NNS/produces clusters/NNS/clusters of/IN/of radius/NN/radius at/IN/at most/JJS/most twice/NN/twice the/DT/the radius/NN/radius produced/VBN/produced by/IN/by the/DT/the optimal/JJ/optimal cluster/NNP/cluster. so/RB/so /,/, now/RB/now we/PRP/we come/VBP/come to/TO/to case/VB/case 2/CD/2. so/RB/so /,/, case/NN/case 2/CD/2 says/VBZ/says some/DT/some optimal/JJ/optimal cluster/NN/cluster o/NN/o j/NN/j contains/VBZ/contains c/NN/c i/PRP/i and/CC/and c/NN/c k/NNP/k. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 49/CD/49 /:/: 16/CD/16 /CD/) so/RB/so /,/, let/VB/let us/PRP/us draw/VB/draw picture/NNP/picture. so/RB/so /,/, here/RB/here is/VBZ/is my/PRP$/my optimal/JJ/optimal cluster/NNP/cluster. let/NN/let me/PRP/me call/VBP/call it/PRP/it capital/NN/capital o/IN/o j/NNP/j. here/RB/here is/VBZ/is little/RB/little o/RB/o j/VB/j /,/, its/PRP$/its center/NNP/center. and/CC/and suppose/VB/suppose that/IN/that it/PRP/it contains/VBZ/contains cluster/NN/cluster centers/NNS/centers c/VBP/c i/PRP/i and/CC/and c/NN/c k/NN/k which/WDT/which our/PRP$/our algorithm/NN/algorithm picked/NNP/picked. well/RB/well /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about distance/NN/distance from/IN/from c/NN/c i/PRP/i to/TO/to c/VB/c k/NNP/k. so/RB/so /,/, i/PRP/i claim/VBP/claim that/IN/that this/DT/this is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the distance/NN/distance of/IN/of c/NN/c 1/CD/1 to/TO/to c/VB/c i/NNP/i. and/CC/and i/PRP/i am/VBP/am going/VBG/going to/TO/to assume/VB/assume here/RB/here without/IN/without loss/NN/loss of/IN/of generality/NN/generality /,/, that/IN/that i/PRP/i is/VBZ/is less/JJR/less than/IN/than k/NNP/k. so/RB/so /,/, the/DT/the distance/NN/distance of/IN/of this/DT/this set/NN/set c/NN/c 1/CD/1 to/TO/to c/VB/c i/PRP/i or/CC/or rather/RB/rather c/JJ/c 1/CD/1 to/TO/to c/VB/c k/NN/k minus/NN/minus 1/CD/1 with/IN/with center/NN/center c/NN/c k/NNP/k. so/RB/so /,/, here/RB/here i/PRP/i am/VBP/am only/RB/only taking/VBG/taking the/DT/the distance/NN/distance from/IN/from c/NN/c i/PRP/i to/TO/to c/VB/c k/NNP/k. here/RB/here /,/, i/PRP/i am/VBP/am allowing/VBG/allowing a/DT/a large/JJ/large number/NN/number of/IN/of other/JJ/other points/NNS/points to/TO/to come/VB/come in/NNP/in. so/RB/so /,/, this/DT/this distance/NN/distance can/MD/can only/RB/only be/VB/be bigger/JJR/bigger than/IN/than this/DT/this distance/NNP/distance. but/CC/but /,/, what/WP/what is/VBZ/is this/DT/this distance/NNP/distance. so/RB/so /,/, this/DT/this distance/NN/distance from/IN/from what/WP/what we/PRP/we argued/VBD/argued earlier/RBR/earlier is/VBZ/is something/NN/something quite/RB/quite is/VBZ/is related/VBN/related to/TO/to our/PRP$/our clustering/NNP/clustering. so/RB/so /,/, we/PRP/we argued/VBD/argued that/IN/that r/NN/r k/NN/k plus/CC/plus 1/CD/1 has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than r/NN/r k/NN/k /,/, which/WDT/which is/VBZ/is this/NNP/this. so/RB/so /,/, comparing/VBG/comparing these/DT/these two/CD/two we/PRP/we can/MD/can argue/VB/argue that/IN/that /,/, this/DT/this distance/NN/distance has/VBZ/has to/TO/to be/VB/be bigger/JJR/bigger than/NNP/than. so/RB/so /,/, this/DT/this distance/NN/distance is/VBZ/is nothing/NN/nothing but/CC/but /,/, r/NN/r k/NN/k minus/NN/minus 1/CD/1. but/CC/but /,/, this/DT/this r/NN/r k/NN/k minus/NN/minus 1/CD/1 is/VBZ/is certainly/RB/certainly bigger/JJR/bigger than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the final/JJ/final radius/NN/radius /,/, that/IN/that the/DT/the algorithm/NN/algorithm got/NNP/got. so/RB/so /,/, what/WDT/what we/PRP/we have/VBP/have argued/VBN/argued is/VBZ/is that/IN/that the/DT/the distance/NN/distance between/IN/between these/DT/these two/CD/two clusters/NNS/clusters /,/, if/IN/if they/PRP/they happen/VBP/happen to/TO/to fall/VB/fall within/IN/within the/DT/the same/JJ/same optimal/NN/optimal cluster/NNP/cluster. so/RB/so /,/, distance/NN/distance between/IN/between any/DT/any two/CD/two clusters/NNS/clusters /,/, any/DT/any two/CD/two cluster/NN/cluster centers/NNS/centers is/VBZ/is going/VBG/going to/TO/to be/NNP/be. the/DT/the optimal/JJ/optimal is/VBZ/is going/VBG/going to/TO/to be/VB/be bigger/JJR/bigger than/IN/than the/DT/the optimal/JJ/optimal radius/NN/radius produced/VBN/produced by/IN/by our/PRP$/our algorithm/NNP/algorithm. here/RB/here we/PRP/we have/VBP/have not/RB/not yet/RB/yet use/VB/use the/DT/the property/NN/property that/IN/that these/DT/these two/CD/two centers/NNS/centers actually/RB/actually lie/VBP/lie in/IN/in this/DT/this single/JJ/single optimal/NN/optimal cluster/NNP/cluster. so/RB/so /,/, we/PRP/we will/MD/will use/VB/use that/IN/that property/NN/property now/NNP/now. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know about/IN/about the/DT/the two/CD/two /,/, these/DT/these distances/NNP/distances. so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that this/DT/this distance/NN/distance /,/, again/RB/again by/IN/by the/DT/the triangle/JJ/triangle inequality/NN/inequality is/VBZ/is at/IN/at most/JJS/most this/DT/this distance/NN/distance plus/VBZ/plus this/DT/this distance/NNP/distance. so/RB/so /,/, what/WDT/what do/VBP/do we/PRP/we know/VB/know ?/./? we/PRP/we know/VBP/know that/IN/that /,/, d/VBD/d c/NN/c i/PRP/i c/VBP/c k/NN/k is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the distance/NN/distance from/IN/from c/NN/c i/PRP/i to/TO/to o/VB/o j/NN/j and/CC/and the/DT/the distance/NN/distance from/IN/from o/NN/o j/NN/j to/TO/to c/VB/c k/NNP/k. but/CC/but /,/, what/WP/what is/VBZ/is this/DT/this tell/NN/tell us/NNP/us. so/RB/so /,/, this/DT/this lies/NNS/lies inside/VBP/inside this/DT/this cluster/NNP/cluster. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is at/IN/at most/JJS/most the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. this/DT/this is/VBZ/is at/IN/at most/JJS/most the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. so/RB/so /,/, this/DT/this is/VBZ/is just/RB/just 2/CD/2 times/NNS/times the/DT/the radius/NN/radius of/IN/of this/DT/this cluster/NNP/cluster. so/RB/so /,/, what/WDT/what have/VBP/have we/PRP/we proved/VBD/proved ?/./? /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 52/CD/52 /:/: 57/CD/57 /CD/) we/PRP/we have/VBP/have proved/VBN/proved that/IN/that /,/, the/DT/the distance/NN/distance from/IN/from c/NN/c i/PRP/i to/TO/to c/VB/c k/NN/k is/VBZ/is at/IN/at most/JJS/most 2/CD/2 times/NNS/times the/DT/the radius/NN/radius of/IN/of cluster/NN/cluster o/NN/o j/NNP/j. but/CC/but /,/, this/DT/this is/VBZ/is less/JJR/less than/IN/than 2/CD/2 times/NNS/times the/DT/the optimal/JJ/optimal radius/NNP/radius. so/RB/so /,/, together/RB/together what/WP/what have/VBP/have we/PRP/we argued/VBN/argued ?/./? so/RB/so /,/, we/PRP/we have/VBP/have argued/VBN/argued between/IN/between these/DT/these two/CD/two things/NNP/things. that/IN/that twice/NN/twice the/DT/the optimal/JJ/optimal is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to distance/NN/distance from/IN/from c/NN/c i/PRP/i to/TO/to c/VB/c k/NN/k /,/, which/WDT/which in/IN/in turn/NN/turn is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to the/DT/the radius/NN/radius produced/VBN/produced by/IN/by the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, even/RB/even in/IN/in this/DT/this case/NN/case we/PRP/we have/VBP/have argued/VBN/argued that/IN/that /,/, the/DT/the radius/NN/radius that/IN/that is/VBZ/is produced/VBN/produced by/IN/by the/DT/the algorithm/NN/algorithm is/VBZ/is at/IN/at most/JJS/most twice/NN/twice the/DT/the optimal/JJ/optimal radius/NNP/radius. and/CC/and that/IN/that is/VBZ/is what/WP/what we/PRP/we argued/VBD/argued in/IN/in the/DT/the first/JJ/first case/NN/case as/IN/as well/NNP/well. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 53/CD/53 /:/: 56/CD/56 /CD/) so/RB/so /,/, in/IN/in conclusion/NN/conclusion we/PRP/we can/MD/can say/VB/say that/IN/that greedy/JJ/greedy algorithm/NN/algorithm produces/NNS/produces clustering/VBG/clustering of/IN/of radius/NN/radius at/IN/at most/JJS/most 2/CD/2 times/NNS/times radius/VBZ/radius produced/VBN/produced by/IN/by optimal/JJ/optimal algorithm/NNP/algorithm. this/DT/this is/VBZ/is the/DT/the main/JJ/main theorem/NN/theorem of/IN/of this/DT/this entire/JJ/entire exercise/NNP/exercise. so/RB/so /,/, let/VB/let me/PRP/me now/RB/now summarize/VBP/summarize and/CC/and have/VBP/have some/DT/some concluding/VBG/concluding remarks/NNP/remarks. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 54/CD/54 /:/: 56/CD/56 /CD/) first/JJ/first /,/, in/IN/in the/DT/the clustering/NN/clustering example/NN/example the/DT/the distances/NNS/distances i/PRP/i mentioned/VBD/mentioned had/VBD/had to/TO/to be/VB/be euclidean/NNP/euclidean. but/CC/but /,/, we/PRP/we did/VBD/did not/RB/not really/RB/really use/VB/use the/DT/the euclidean/JJ/euclidean property/NNP/property. we/PRP/we just/RB/just use/VBP/use the/DT/the property/NN/property that/IN/that /,/, the/DT/the distances/NNS/distances we/PRP/we just/RB/just use/VBP/use the/DT/the triangle/NN/triangle inequality/NNP/inequality. so/RB/so /,/, essentially/RB/essentially this/DT/this means/VBZ/means that/IN/that any/DT/any metric/JJ/metric is/VBZ/is enough/NNP/enough. so/RB/so /,/, this/DT/this clustering/NN/clustering algorithm/NN/algorithm works/NNS/works not/RB/not only/RB/only for/IN/for euclidean/JJ/euclidean distances/NNS/distances but/CC/but /,/, anything/NN/anything which/WDT/which satisfies/NNS/satisfies the/DT/the metric/JJ/metric properties/NNP/properties. that/IN/that is/VBZ/is /,/, it/PRP/it satisfies/VBZ/satisfies essentially/RB/essentially the/DT/the triangle/NN/triangle inequality/NN/inequality that/WDT/that will/MD/will work/NNP/work. so/RB/so /,/, instead/RB/instead of/IN/of clustering/VBG/clustering the/DT/the same/JJ/same t/NN/t center/NN/center problem/NN/problem or/CC/or the/DT/the k/NN/k center/NN/center /,/, can/MD/can be/VB/be related/VBN/related not/RB/not only/RB/only to/TO/to clustering/VBG/clustering but/CC/but /,/, it/PRP/it can/MD/can also/RB/also be/VB/be related/VBN/related to/TO/to some/DT/some kind/NN/kind of/IN/of a/DT/a facility/NN/facility location/NN/location problem/NNP/problem. so/RB/so /,/, let/VB/let you/PRP/you think/VBP/think about/IN/about this/NNP/this. i/PRP/i would/MD/would also/RB/also like/VB/like to/TO/to observe/VB/observe that/IN/that /,/, set/VBN/set cover/NN/cover like/IN/like problems/NNS/problems also/RB/also appear/VBP/appear quite/RB/quite frequently/RB/frequently /,/, just/RB/just as/IN/as this/DT/this clustering/NN/clustering problem/NNP/problem. many/JJ/many scheduling/VBG/scheduling problems/NNS/problems and/CC/and important/JJ/important problem/NN/problem amongst/NN/amongst them/PRP/them is/VBZ/is so/RB/so called/VBN/called crew/NN/crew scheduling/NN/scheduling /,/, is/VBZ/is a/DT/a variation/NN/variation on/IN/on set/NN/set cover/NNP/cover. and/CC/and in/IN/in general/JJ/general /,/, the/DT/the greedy/NN/greedy algorithms/NNS/algorithms and/CC/and a/DT/a style/NN/style of/IN/of analysis/NN/analysis used/VBN/used over/IN/over here/RB/here which/WDT/which is/VBZ/is which/WDT/which i/PRP/i would/MD/would like/VB/like to/TO/to call/VB/call /,/, compete/JJ/compete with/IN/with the/DT/the optimal/JJ/optimal also/RB/also appears/VBZ/appears quite/RB/quite frequently/NNP/frequently. so/RB/so /,/, we/PRP/we have/VBP/have seen/VBN/seen two/CD/two styles/NNS/styles of/IN/of analysis/NN/analysis /,/, compete/JJ/compete with/IN/with the/DT/the optimal/JJ/optimal and/CC/and compete/JJ/compete with/IN/with and/CC/and compare/JJ/compare to/TO/to the/DT/the lower/JJR/lower bounds/NNP/bounds. so/RB/so /,/, between/IN/between these/DT/these two/CD/two styles/NNS/styles we/PRP/we should/MD/should be/VB/be able/JJ/able to/TO/to design/NN/design a/DT/a fair/NN/fair number/NN/number of/IN/of approximation/NN/approximation algorithms/NNP/algorithms. thank/NN/thank you/NNP/you. design/NN/design &/CC/& analysis/NN/analysis of/IN/of algorithms/NNS/algorithms prof/NNP/prof. abhiram/NN/abhiram ranade/NN/ranade department/NN/department of/IN/of computer/NN/computer science/NN/science &/CC/& engineering/VBG/engineering indian/JJ/indian institute/NN/institute of/IN/of technology/NN/technology /,/, bombay/NN/bombay lecture/NN/lecture /:/- 34/CD/34 approximation/NN/approximation algorithms/NNS/algorithms for/IN/for np/NN/np /:/- complete/JJ/complete problems/NNS/problems ?/./? iii/NN/iii this/DT/this is/VBZ/is the/DT/the third/JJ/third lecture/NN/lecture in/IN/in the/DT/the series/NN/series on/IN/on approximation/NN/approximation algorithms/NNP/algorithms. a/DT/a short/JJ/short review/NN/review of/IN/of what/WP/what we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/NNP/far. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 00/CD/00 /:/: 55/CD/55 /CD/) so/RB/so /,/, one/CD/one of/IN/of the/DT/the approximation/NN/approximation algorithms/NNS/algorithms we/PRP/we saw/VBD/saw gave/VBD/gave us/PRP/us /,/, a/DT/a two/CD/two factor/NN/factor approximation/NN/approximation for/IN/for metric/JJ/metric tsp/NNP/tsp. we/PRP/we also/RB/also saw/VBD/saw a/DT/a two/CD/two approximation/NN/approximation algorithm/NN/algorithm for/IN/for metric/JJ/metric clustering/NNP/clustering. having/NN/having seen/VBN/seen these/DT/these algorithms/NNS/algorithms /,/, a/DT/a natural/JJ/natural question/NN/question might/MD/might be/VB/be that/IN/that instead/RB/instead of/IN/of just/RB/just getting/VBG/getting a/DT/a two/CD/two approximation/NN/approximation is/VBZ/is it/PRP/it perhaps/RB/perhaps possible/JJ/possible that/IN/that /,/, we/PRP/we can/MD/can get/VB/get a/DT/a 1.5/CD/1.5 approximation/NNP/approximation. say/VBP/say either/DT/either for/IN/for metric/JJ/metric tsp/NN/tsp or/CC/or for/IN/for metric/JJ/metric clustering/NNP/clustering. here/RB/here are/VBP/are some/DT/some possible/JJ/possible answers/NNP/answers. and/CC/and these/DT/these happen/JJ/happen to/TO/to be/VB/be true/JJ/true /,/, as/IN/as a/DT/a matter/NN/matter of/IN/of fact/NNP/fact. so/RB/so /,/, for/IN/for example/NN/example for/IN/for metric/JJ/metric clustering/NN/clustering you/PRP/you can/MD/can not/RB/not get/VB/get better/JJR/better approximation/NN/approximation than/IN/than a/DT/a factor/NN/factor two/CD/two /,/, unless/IN/unless p/NN/p is/VBZ/is equal/JJ/equal to/TO/to np/NNP/np. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the other/JJ/other interesting/JJ/interesting kind/NN/kind of/IN/of a/DT/a result/NNP/result. that/WDT/that /,/, it/PRP/it is/VBZ/is not/RB/not only/RB/only is/VBZ/is it/PRP/it hard/RB/hard to/TO/to find/VB/find fast/JJ/fast clustering/NN/clustering algorithms/NNS/algorithms /,/, which/WDT/which accurately/RB/accurately cluster/NNP/cluster. but/CC/but /,/, even/RB/even getting/VBG/getting approximate/NN/approximate clustering/VBG/clustering algorithms/NNS/algorithms seems/VBZ/seems to/TO/to be/VB/be difficult/JJ/difficult /,/, because/IN/because we/PRP/we believe/VBP/believe that/IN/that p/NN/p is/VBZ/is not/RB/not equal/JJ/equal to/TO/to np/NNP/np. most/JJS/most people/NNS/people believe/VBP/believe that/NNP/that. however/RB/however /,/, here/RB/here is/VBZ/is some/DT/some good/JJ/good news/NNP/news. if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the euclidean/JJ/euclidean tsp/NN/tsp /,/, so/RB/so which/WDT/which is/VBZ/is a/DT/a special/JJ/special case/NN/case of/IN/of the/DT/the metric/JJ/metric tsp/NNP/tsp. it/PRP/it turns/VBZ/turns out/RP/out that/IN/that /,/, you/PRP/you can/MD/can get/VB/get any/DT/any approximation/NN/approximation factor/NN/factor 1/CD/1 plus/CC/plus epsilon/NNP/epsilon. however/RB/however /,/, there/EX/there is/VBZ/is a/DT/a catch/NN/catch and/CC/and the/DT/the catches/NNS/catches that/WDT/that your/PRP$/your running/VBG/running time/NN/time will/MD/will also/RB/also depend/VB/depend upon/IN/upon epsilon/NNP/epsilon. so/RB/so /,/, essentially/RB/essentially there/EX/there is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a trade/NN/trade of/IN/of between/IN/between the/DT/the running/VBG/running time/NN/time and/CC/and the/DT/the approximation/NN/approximation factor/NNP/factor. obviously/RB/obviously /,/, the/DT/the closer/NN/closer you/PRP/you want/VBP/want the/DT/the approximation/NN/approximation factor/NN/factor to/TO/to one/CD/one /,/, the/DT/the higher/JJR/higher is/VBZ/is your/PRP$/your running/NN/running time/NN/time going/VBG/going to/TO/to be/VB/be /,/, so/RB/so the/DT/the smaller/JJR/smaller the/DT/the epsilon/NN/epsilon the/DT/the larger/JJR/larger the/DT/the running/VBG/running time/NNP/time. so/RB/so /,/, this/DT/this dependence/NN/dependence will/MD/will be/VB/be captured/VBN/captured somehow/-NONE-/somehow. we/PRP/we can/MD/can evaluate/VB/evaluate that/IN/that dependence/NNP/dependence. and/CC/and in/IN/in fact/NN/fact /,/, we/PRP/we can/MD/can work/VB/work with/IN/with a/DT/a wide/JJ/wide range/NN/range of/IN/of epsilons/NNP/epsilons. and/CC/and that/IN/that is/VBZ/is /,/, what/WP/what this/DT/this result/NN/result says/NNP/says. such/JJ/such results/NNS/results are/VBP/are called/VBN/called approximation/NN/approximation schemes/NNP/schemes. and/CC/and this/DT/this is/VBZ/is /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to study/NN/study today/NNP/today. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 03/CD/03 /:/: 13/CD/13 /CD/) here/RB/here is/VBZ/is a/DT/a quick/JJ/quick definition/NNP/definition. an/DT/an algorithm/NN/algorithm a/DT/a for/IN/for a/DT/a problem/NN/problem p/NN/p /,/, is/VBZ/is said/VBN/said to/TO/to be/VB/be a/DT/a polynomial/JJ/polynomial time/NN/time approximation/NN/approximation scheme/NN/scheme abbreviated/VBD/abbreviated as/IN/as ptas/NNS/ptas /,/, if/IN/if the/DT/the following/VBG/following conditions/NNS/conditions hold/NNP/hold. first/RB/first of/IN/of all/DT/all /,/, a/DT/a must/MD/must now/RB/now take/VB/take two/CD/two arguments/NNP/arguments. of/IN/of course/NN/course /,/, it/PRP/it has/VBZ/has to/TO/to take/VB/take the/DT/the problem/NN/problem instance/NNP/instance. and/CC/and it/PRP/it will/MD/will return/VB/return the/DT/the problem/NN/problem answer/NNP/answer. but/CC/but /,/, it/PRP/it will/MD/will also/RB/also take/VB/take in/IN/in addition/NN/addition a/DT/a single/JJ/single number/NN/number epsilon/NN/epsilon /,/, which/WDT/which is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 which/WDT/which is/VBZ/is going/VBG/going to/TO/to tell/VB/tell the/DT/the algorithm/NN/algorithm /,/, how/WRB/how close/JJ/close an/DT/an answer/NN/answer we/PRP/we want/VBP/want /,/, how/WRB/how good/JJ/good an/DT/an answer/NN/answer we/PRP/we want/NNP/want. so/RB/so /,/, a/DT/a is/VBZ/is going/VBG/going to/TO/to return/VB/return a/DT/a solution/NN/solution with/IN/with approximation/NN/approximation ratio/NN/ratio one1/NNP/one1 plus/CC/plus epsilon/NNP/epsilon. the/DT/the smaller/JJR/smaller we/PRP/we name/VBP/name this/DT/this number/NN/number /,/, the/DT/the better/JJR/better is/VBZ/is our/PRP$/our solution/NN/solution going/VBG/going to/TO/to be/NNP/be. but/CC/but /,/, as/IN/as mentioned/VBN/mentioned earlier/JJR/earlier the/DT/the time/NN/time taken/VBN/taken by/IN/by a/DT/a is/VBZ/is going/VBG/going to/TO/to be/VB/be polynomial/NNP/polynomial. and/CC/and now/RB/now /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to depend/VB/depend on/IN/on epsilon/NNP/epsilon. so/IN/so /,/, this/DT/this polynomial/JJ/polynomial we/PRP/we change/VBP/change with/IN/with epsilon/NN/epsilon that/IN/that is/VBZ/is the/DT/the new/JJ/new addition/NNP/addition. so/RB/so /,/, the/DT/the time/NN/time is/VBZ/is going/VBG/going to/TO/to be/VB/be polynomial/NNP/polynomial. we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be able/JJ/able to/TO/to do/VB/do this/DT/this for/IN/for any/DT/any epsilon/NN/epsilon but/CC/but /,/, the/DT/the time/NN/time will/MD/will be/VB/be a/DT/a function/NN/function of/IN/of epsilon/NN/epsilon as/IN/as well/NNP/well. so/RB/so /,/, it/PRP/it is/VBZ/is a/DT/a scheme/NN/scheme in/IN/in the/DT/the sense/NN/sense that/IN/that /,/, you/PRP/you can/MD/can operate/VB/operate anywhere/NNP/anywhere. it/PRP/it is/VBZ/is not/RB/not just/RB/just one/CD/one algorithm/NN/algorithm but/CC/but in/IN/in fact/NN/fact /,/, you/PRP/you can/MD/can think/VB/think of/IN/of it/PRP/it as/IN/as a/DT/a family/NN/family of/IN/of algorithms/NNS/algorithms /,/, defined/VBN/defined by/IN/by different/JJ/different values/NNS/values of/IN/of epsilon/NNP/epsilon. there/EX/there is/VBZ/is also/RB/also a/DT/a notion/NN/notion of/IN/of fully/RB/fully polynomial/JJ/polynomial approximation/NN/approximation scheme/NN/scheme /,/, which/WDT/which is/VBZ/is often/RB/often abbreviated/VBN/abbreviated as/IN/as fptas/NNP/fptas. and/CC/and in/IN/in this/DT/this case/NN/case /,/, we/PRP/we require/VBP/require that/IN/that the/DT/the time/NN/time should/MD/should also/RB/also be/VB/be polynomial/JJ/polynomial in/IN/in 1/CD/1 over/IN/over epsilon/NNP/epsilon. so/RB/so /,/, yes/NNS/yes the/DT/the time/NN/time will/MD/will increase/VB/increase as/IN/as you/PRP/you reduce/VBP/reduce epsilon/NNP/epsilon. but/CC/but /,/, it/PRP/it will/MD/will only/RB/only increase/VB/increase polynomial/NNP/polynomial. here/RB/here however/RB/however /,/, the/DT/the time/NN/time can/MD/can increase/VB/increase and/CC/and in/IN/in fact/NN/fact /,/, it/PRP/it can/MD/can increase/VB/increase much/JJ/much faster/NN/faster than/IN/than any/DT/any polynomial/NNP/polynomial. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something harder/NN/harder to/TO/to do/VB/do or/CC/or this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be something/NN/something /,/, which/WDT/which is/VBZ/is going/VBG/going to/TO/to be/VB/be faster/JJR/faster for/IN/for the/DT/the same/JJ/same epsilon/NNP/epsilon. here/RB/here is/VBZ/is /,/, what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to today/NNP/today. we/PRP/we will/MD/will describe/VB/describe an/DT/an fptas/NN/fptas or/CC/or a/DT/a fully/RB/fully polynomial/JJ/polynomial approximation/NN/approximation scheme/NN/scheme for/IN/for the/DT/the knapsack/NN/knapsack problem/NN/problem /,/, which/WDT/which we/PRP/we studied/VBD/studied earlier/NNP/earlier. the/DT/the time/NN/time taken/VBN/taken by/IN/by the/DT/the scheme/NN/scheme is/VBZ/is going/VBG/going to/TO/to be/VB/be o/RB/o of/IN/of n/NN/n cube/NN/cube upon/IN/upon epsilon/NNP/epsilon. so/RB/so /,/, notice/NN/notice that/IN/that this/DT/this is/VBZ/is polynomial/JJ/polynomial in/IN/in the/DT/the size/NN/size of/IN/of the/DT/the instance/NN/instance n/NN/n /,/, as/IN/as always/RB/always we/PRP/we will/MD/will use/VB/use n/NN/n to/TO/to denote/VB/denote the/DT/the instance/NN/instance /,/, the/DT/the size/NN/size of/IN/of the/DT/the instance/NNP/instance. it/PRP/it is/VBZ/is also/RB/also polynomial/JJ/polynomial in/IN/in 1/CD/1 over/IN/over epsilon/NNP/epsilon. so/RB/so /,/, it/PRP/it is/VBZ/is n/VBN/n cube/-NONE-/cube. read/RB/read it/PRP/it as/IN/as n/NN/n cube/NN/cube times/NNS/times 1/CD/1 over/IN/over epsilon/NNP/epsilon. so/RB/so /,/, it/PRP/it is/VBZ/is dependence/NN/dependence on/IN/on 1/CD/1 over/IN/over epsilon/NN/epsilon is/VBZ/is linear/NNP/linear. so/RB/so /,/, it/PRP/it satisfies/VBZ/satisfies this/DT/this condition/NN/condition as/IN/as well/NNP/well. so/RB/so /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is polynomial/JJ/polynomial in/IN/in n/NN/n as/IN/as well/RB/well as/IN/as it/PRP/it is/VBZ/is polynomial/JJ/polynomial in/IN/in 1/CD/1 over/IN/over epsilon/NNP/epsilon. and/CC/and therefore/RB/therefore /,/, we/PRP/we will/MD/will what/WP/what we/PRP/we will/MD/will get/VB/get is/VBZ/is going/VBG/going to/TO/to be/VB/be an/DT/an fptas/NNP/fptas. and/CC/and so/RB/so we/PRP/we will/MD/will be/VB/be designing/VBG/designing an/DT/an algorithm/NN/algorithm which/WDT/which will/MD/will take/VB/take /,/, which/WDT/which will/MD/will be/VB/be an/DT/an approximation/NN/approximation scheme/NNP/scheme. so/RB/so /,/, it/PRP/it will/MD/will take/VB/take an/DT/an instance/NN/instance as/IN/as one/CD/one argument/NNP/argument. and/CC/and it/PRP/it will/MD/will take/VB/take the/DT/the number/NN/number epsilon/NNP/epsilon. it/PRP/it will/MD/will return/VB/return a/DT/a solution/NN/solution with/IN/with approximation/NN/approximation ratio/NN/ratio 1/CD/1 plus/CC/plus epsilon/NNP/epsilon. and/CC/and its/PRP$/its time/NN/time taken/VBN/taken will/MD/will be/VB/be this/NNP/this. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 06/CD/06 /:/: 49/CD/49 /CD/) let/NN/let me/PRP/me quickly/RB/quickly remind/VBP/remind you/PRP/you /,/, what/WP/what the/DT/the knapsack/NN/knapsack problem/NN/problem is/NNP/is. we/PRP/we have/VBP/have actually/RB/actually /,/, we/PRP/we have/VBP/have of/IN/of course/NN/course studied/VBN/studied it/PRP/it earlier/NNP/earlier. the/DT/the input/NN/input consists/VBZ/consists of/IN/of an/DT/an array/NN/array v/NN/v 1/CD/1 though/IN/though n/NN/n /,/, v/NN/v stands/VBZ/stands for/IN/for value/NN/value and/CC/and v/NN/v of/IN/of i/PRP/i is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the value/NN/value of/IN/of the/DT/the ith/NN/ith item/NNP/item. the/DT/the second/JJ/second part/NN/part of/IN/of the/DT/the argument/NN/argument is/VBZ/is going/VBG/going to/TO/to be/VB/be an/DT/an array/NN/array w/NN/w 1/CD/1 through/IN/through n/NNP/n. so/RB/so /,/, these/DT/these are/VBP/are all/DT/all going/VBG/going to/TO/to be/VB/be integers/NNP/integers. v/NN/v and/CC/and w/NN/w are/VBP/are both/DT/both going/VBG/going to/TO/to be/VB/be integers/NNP/integers. and/CC/and w/VB/w of/IN/of i/PRP/i again/RB/again is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the weight/NN/weight of/IN/of the/DT/the nth/NN/nth item/NNP/item. that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be a/DT/a third/JJ/third argument/NN/argument /,/, which/WDT/which is/VBZ/is c/NN/c again/RB/again an/DT/an integer/NNP/integer. and/CC/and c/NN/c is/VBZ/is going/VBG/going to/TO/to denote/VB/denote the/DT/the capacity/NN/capacity of/IN/of a/DT/a knapsack/NNP/knapsack. the/DT/the output/NN/output /,/, for/IN/for the/DT/the output/NN/output we/PRP/we have/VBP/have to/TO/to select/VB/select a/DT/a subset/NN/subset of/IN/of these/DT/these items/NNS/items 1/CD/1 through/IN/through n/NN/n such/JJ/such that/IN/that /,/, the/DT/the total/JJ/total weight/NN/weight is/VBZ/is at/IN/at most/JJS/most c/NNP/c. so/RB/so /,/, think/VBP/think of/IN/of filling/VBG/filling this/DT/this knapsack/NNP/knapsack. but/CC/but /,/, when/WRB/when we/PRP/we fill/VBP/fill the/DT/the knapsack/NN/knapsack we/PRP/we should/MD/should not/RB/not exceed/VB/exceed its/PRP$/its weight/NN/weight capacity/NNP/capacity. otherwise/NN/otherwise /,/, a/DT/a knapsack/NN/knapsack will/MD/will tear/VB/tear or/CC/or something/NN/something like/IN/like that/NNP/that. and/CC/and we/PRP/we are/VBP/are only/RB/only allowed/VBN/allowed to/TO/to pick/VB/pick a/DT/a subset/NN/subset of/IN/of these/DT/these items/NNP/items. and/CC/and furthermore/VB/furthermore /,/, we/PRP/we want/VBP/want to/TO/to pick/VB/pick the/DT/the most/JJS/most valuable/JJ/valuable subset/NNP/subset. so/RB/so /,/, whatever/IN/whatever a/DT/a subset/NN/subset we/PRP/we pick/VBP/pick /,/, we/PRP/we add/VBP/add up/RP/up the/DT/the values/NNS/values of/IN/of the/DT/the elements/NNS/elements which/WDT/which we/PRP/we pick/VBP/pick and/CC/and that/IN/that is/VBZ/is the/DT/the value/NN/value that/IN/that we/PRP/we get/NNP/get. and/CC/and we/PRP/we want/VBP/want that/IN/that value/NN/value to/TO/to be/VB/be as/RB/as large/JJ/large as/IN/as possible/NNP/possible. so/RB/so /,/, it/PRP/it should/MD/should be/VB/be maximum/NN/maximum over/IN/over all/DT/all possible/JJ/possible subsets/NNP/subsets. you/PRP/you have/VBP/have of/IN/of course/NN/course /,/, seen/VBN/seen this/DT/this problem/NN/problem earlier/NNP/earlier. we/PRP/we have/VBP/have devised/VBN/devised an/DT/an algorithm/NN/algorithm for/IN/for this/NNP/this. the/DT/the algorithm/NN/algorithm was/VBD/was pseudo/RB/pseudo polynomial/JJ/polynomial time/NN/time /,/, as/IN/as we/PRP/we discuss/VBP/discuss some/DT/some time/NN/time ago/NNP/ago. and/CC/and in/IN/in fact/NN/fact /,/, knapsack/VBP/knapsack is/VBZ/is np/NN/np complete/NNP/complete. what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to do/VB/do today/NN/today is/VBZ/is /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to discuss/VB/discuss a/DT/a new/JJ/new algorithm/NNP/algorithm. it/PRP/it is/VBZ/is again/RB/again going/VBG/going to/TO/to be/VB/be based/VBN/based on/IN/on dynamic/JJ/dynamic programming/NNP/programming. so/RB/so /,/, we/PRP/we will/MD/will have/VB/have a/DT/a new/JJ/new dynamic/JJ/dynamic programming/NN/programming algorithm/NNP/algorithm. it/PRP/it will/MD/will also/RB/also be/VB/be pseudo/VBN/pseudo polynomial/JJ/polynomial time/NNP/time. so/RB/so /,/, that/IN/that would/MD/would not/RB/not really/RB/really work/VB/work /,/, for/IN/for work/NN/work as/IN/as an/DT/an approximation/NN/approximation algorithm/NNP/algorithm. for/IN/for one/CD/one thing/NN/thing /,/, it/PRP/it is/VBZ/is not/RB/not an/DT/an approximation/NN/approximation algorithm/NNP/algorithm. it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be an/DT/an exact/JJ/exact algorithm/NNP/algorithm. but/CC/but /,/, the/DT/the reason/NN/reason it/PRP/it would/MD/would not/RB/not work/VB/work is/VBZ/is that/IN/that /,/, it/PRP/it will/MD/will take/VB/take pseudo/NN/pseudo polynomial/JJ/polynomial time/NN/time whereas/NNS/whereas /,/, we/PRP/we wanted/VBD/wanted to/TO/to take/VB/take polynomial/JJ/polynomial time/NNP/time. so/RB/so /,/, after/IN/after that/DT/that we/PRP/we will/MD/will describe/VB/describe how/WRB/how we/PRP/we can/MD/can modify/VB/modify the/DT/the input/NN/input instance/NN/instance to/TO/to this/DT/this algorithm/NNP/algorithm. such/JJ/such that/IN/that /,/, we/PRP/we get/VBP/get good/JJ/good approximate/NN/approximate answers/NNS/answers but/CC/but /,/, we/PRP/we get/VBP/get them/PRP/them fast/NNP/fast. so/RB/so /,/, that/IN/that is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the interesting/JJ/interesting idea/NNP/idea. the/DT/the sort/NN/sort of/IN/of new/JJ/new idea/NN/idea of/IN/of today/NN/today ?/./? s/NNS/s lecture/VBP/lecture is/VBZ/is going/VBG/going to/TO/to be/VB/be this/NNP/this. that/IN/that will/MD/will take/VB/take a/DT/a pseudo/NN/pseudo polynomial/NN/polynomial time/NN/time algorithm/NNP/algorithm. and/CC/and we/PRP/we will/MD/will use/VB/use that/NNP/that. but/CC/but /,/, instead/RB/instead of/IN/of feeding/VBG/feeding to/TO/to it/PRP/it /,/, the/DT/the exact/JJ/exact instance/NN/instance that/WDT/that is/VBZ/is given/VBN/given to/TO/to us/PRP/us /,/, we/PRP/we will/MD/will feed/VB/feed it/PRP/it a/DT/a different/JJ/different instance/NN/instance perhaps/RB/perhaps sort/NN/sort of/IN/of an/DT/an approximated/VBN/approximated instance/NNP/instance. so/RB/so that/IN/that we/PRP/we will/MD/will get/VB/get the/DT/the answers/NNS/answers fast/VBP/fast although/IN/although /,/, we/PRP/we will/MD/will get/VB/get approximate/JJ/approximate answers/NNP/answers. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 10/CD/10 /:/: 05/CD/05 /CD/) so/RB/so /,/, let/VB/let me/PRP/me quickly/RB/quickly go/VBP/go over/IN/over the/DT/the dynamic/JJ/dynamic programming/NN/programming formulation/NN/formulation that/WDT/that we/PRP/we have/VBP/have studied/VBN/studied earlier/RBR/earlier /,/, very/RB/very quickly/NNP/quickly. and/CC/and /,/, then/RB/then i/PRP/i will/MD/will tell/VB/tell you/PRP/you however/RB/however /,/, new/JJ/new dynamic/JJ/dynamic programming/NN/programming formulation/NN/formulation is/VBZ/is going/VBG/going to/TO/to be/VB/be different/NNP/different. here/RB/here is/VBZ/is the/DT/the old/JJ/old formulation/NNP/formulation. so/RB/so /,/, what/WDT/what we/PRP/we asked/VBD/asked over/RP/over there/RB/there was/VBD/was /,/, what/WP/what is/VBZ/is the/DT/the best/JJS/best value/NN/value we/PRP/we can/MD/can get/VB/get for/IN/for each/DT/each knapsack/NN/knapsack capacity/NN/capacity c/NN/c little/RB/little c/NN/c /,/, where/WRB/where c/NN/c is/VBZ/is an/DT/an integer/NN/integer somewhere/NN/somewhere between/IN/between anywhere/RB/anywhere between/IN/between 1/CD/1 and/CC/and c/NN/c 1/CD/1 and/CC/and capital/NN/capital c/NNP/c. so/RB/so /,/, capital/NN/capital c/NN/c is/VBZ/is the/DT/the integer/NN/integer given/VBN/given to/TO/to us/PRP/us as/IN/as the/DT/the part/NN/part of/IN/of the/DT/the problem/NN/problem instance/NNP/instance. so/RB/so /,/, if/IN/if you/PRP/you remember/VBP/remember the/DT/the dynamic/JJ/dynamic programming/NN/programming algorithm/NN/algorithm which/WDT/which we/PRP/we studied/VBD/studied long/RB/long ago/RB/ago /,/, it/PRP/it was/VBD/was doing/VBG/doing exactly/RB/exactly this/NNP/this. for/IN/for each/DT/each value/NN/value of/IN/of c/NN/c little/RB/little c/NN/c between/IN/between 1/CD/1 and/CC/and capital/NN/capital c/NN/c /,/, it/PRP/it calculated/VBD/calculated what/WP/what is/VBZ/is the/DT/the best/JJS/best value/NN/value we/PRP/we can/MD/can get/NNP/get. so/RB/so /,/, basically/RB/basically the/DT/the question/NN/question was/VBD/was for/IN/for a/DT/a fixed/VBN/fixed capacity/NN/capacity and/CC/and we/PRP/we take/VBP/take different/JJ/different capacities/NNS/capacities but/CC/but /,/, in/IN/in each/DT/each individual/NN/individual question/NN/question the/DT/the capacity/NN/capacity is/VBZ/is fixed/NNP/fixed. what/WP/what is/VBZ/is the/DT/the best/JJS/best possible/JJ/possible value/NN/value or/CC/or what/WP/what is/VBZ/is the/DT/the largest/JJS/largest possible/JJ/possible value/NN/value /,/, we/PRP/we can/MD/can get/VB/get ?/./? the/DT/the new/JJ/new problem/NN/problem or/CC/or the/DT/the new/JJ/new way/NN/way of/IN/of looking/VBG/looking at/IN/at this/DT/this problem/NN/problem /,/, is/VBZ/is to/TO/to ask/VB/ask a/DT/a different/JJ/different question/NNP/question. the/DT/the question/NN/question which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask is/VBZ/is /,/, what/WP/what is/VBZ/is the/DT/the lightest/JJS/lightest knapsack/NN/knapsack ?/./? and/CC/and by/IN/by the/DT/the time/NN/time in/IN/in /,/, what/WP/what is/VBZ/is the/DT/the smallest/JJS/smallest capacity/NN/capacity knapsack/NN/knapsack /,/, which/WDT/which we/PRP/we can/MD/can use/VB/use for/IN/for getting/VBG/getting some/DT/some value/NN/value v/CC/v. and/CC/and we/PRP/we will/MD/will do/VB/do this/DT/this for/IN/for all/DT/all values/NNS/values of/IN/of this/DT/this little/JJ/little v/NN/v /,/, in/IN/in the/DT/the range/NN/range 1/CD/1 through/IN/through v/NN/v all/NNP/all. what/WP/what is/VBZ/is v/NN/v all/DT/all ?/./? the/DT/the v/NN/v all/DT/all is/VBZ/is the/DT/the sum/NN/sum of/IN/of the/DT/the values/NNS/values of/IN/of all/DT/all the/DT/the items/NNP/items. we/PRP/we are/VBP/are looking/VBG/looking at/IN/at this/DT/this v/NN/v all/DT/all /,/, because/IN/because at/IN/at most/JJS/most we/PRP/we will/MD/will be/VB/be interested/JJ/interested in/IN/in filling/NN/filling all/DT/all items/NNP/items. beyond/IN/beyond that/DT/that /,/, there/EX/there is/VBZ/is nothing/NN/nothing of/IN/of interest/NN/interest /,/, because/IN/because there/EX/there are/VBP/are no/DT/no more/RBR/more items/NNS/items to/TO/to fill/NNP/fill. if/IN/if you/PRP/you figure/VBP/figure out/RP/out /,/, what/WP/what is/VBZ/is the/DT/the capacity/NN/capacity needed/VBD/needed to/TO/to fill/VB/fill all/DT/all the/DT/the items/NNS/items /,/, we/PRP/we should/MD/should be/VB/be we/PRP/we should/MD/should really/RB/really be/VB/be happy/NNP/happy. so/RB/so /,/, this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the kind/NN/kind of/IN/of question/NN/question that/IN/that /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to study/NN/study today/NNP/today. and/CC/and as/IN/as you/PRP/you can/MD/can see/VB/see /,/, it/PRP/it is/VBZ/is a/DT/a sort/NN/sort of/IN/of the/DT/the complementary/JJ/complementary question/NNP/question. so/RB/so /,/, here/RB/here we/PRP/we ask/VBP/ask the/DT/the largest/JJS/largest value/NN/value for/IN/for fixed/VBN/fixed capacity/NNP/capacity. here/RB/here /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask the/DT/the least/JJS/least capacity/NN/capacity for/IN/for the/DT/the fixed/VBN/fixed value/NN/value or/CC/or the/DT/the lightest/JJS/lightest knapsack/NN/knapsack for/IN/for the/DT/the fixed/VBN/fixed value/NNP/value. i/PRP/i want/VBP/want to/TO/to point/NN/point out/RP/out that/IN/that /,/, if/IN/if we/PRP/we answer/JJR/answer these/DT/these new/JJ/new questions/NNS/questions we/PRP/we will/MD/will still/RB/still get/VB/get a/DT/a solution/NN/solution to/TO/to the/DT/the original/JJ/original problem/NN/problem /,/, which/WDT/which we/PRP/we started/VBD/started off/RP/off with/NNP/with. so/RB/so /,/, these/DT/these new/JJ/new questions/NNS/questions essentially/RB/essentially compute/JJ/compute s/NNS/s of/IN/of v/NN/v /,/, where/WRB/where s/NNS/s of/IN/of v/NN/v is/VBZ/is the/DT/the lightest/JJS/lightest knapsack/NN/knapsack for/IN/for value/NN/value v/CC/v. that/IN/that is/VBZ/is exactly/RB/exactly /,/, what/WDT/what is/VBZ/is being/VBG/being computed/VBN/computed over/IN/over here/RB/here for/IN/for different/JJ/different values/NNS/values of/IN/of v/NNP/v. and/CC/and notice/NN/notice that/IN/that /,/, s/NNS/s of/IN/of v/NN/v is/VBZ/is an/DT/an increasing/VBG/increasing sequence/NN/sequence or/CC/or a/DT/a non/NN/non decreasing/VBG/decreasing sequence/NNP/sequence. now/RB/now /,/, the/DT/the question/NN/question that/IN/that we/PRP/we started/VBD/started off/RP/off with/IN/with was/VBD/was /,/, to/TO/to get/VB/get the/DT/the best/JJS/best value/NN/value for/IN/for capacity/NN/capacity c/NNP/c. so/RB/so /,/, on/IN/on the/DT/the phase/NN/phase of/IN/of it/PRP/it /,/, it/PRP/it might/MD/might seen/VB/seen that/IN/that this/DT/this is/VBZ/is the/DT/the natural/JJ/natural question/NN/question to/TO/to ask/NNP/ask. and/CC/and indeed/RB/indeed /,/, it/PRP/it is/VBZ/is somewhat/RB/somewhat more/RBR/more natural/NNP/natural. but/CC/but /,/, the/DT/the point/NN/point is/VBZ/is that/IN/that even/RB/even if/IN/if we/PRP/we answer/JJR/answer these/DT/these questions/NNS/questions /,/, we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to find/VB/find this/DT/this why/NNP/why. because/IN/because /,/, we/PRP/we simply/RB/simply ask/VBP/ask what/WP/what is/VBZ/is the/DT/the largest/JJS/largest value/NN/value v/NN/v such/JJ/such that/IN/that /,/, the/DT/the size/NN/size required/VBN/required for/IN/for it/PRP/it is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to c/NNP/c. so/RB/so /,/, clearly/RB/clearly this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the value/NN/value which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to get/VB/get /,/, had/VBD/had we/PRP/we started/VBN/started out/RP/out with/IN/with a/DT/a knapsack/NN/knapsack of/IN/of capacity/NN/capacity c/NN/c in/IN/in this/DT/this question/NNP/question. so/RB/so /,/, the/DT/the idea/NN/idea over/IN/over here/RB/here is/VBZ/is that/IN/that /,/, even/RB/even if/IN/if we/PRP/we solve/VBP/solve all/DT/all such/JJ/such questions/NNS/questions we/PRP/we will/MD/will be/VB/be able/JJ/able to/TO/to solve/VB/solve this/DT/this question/NN/question /,/, which/WDT/which we/PRP/we originally/RB/originally started/VBD/started off/IN/off with/NNP/with. you/PRP/you might/MD/might think/VB/think that/IN/that /,/, here/RB/here we/PRP/we are/VBP/are mobilized/VBN/mobilized to/TO/to solve/VB/solve many/JJ/many many/JJ/many questions/NNS/questions /,/, even/RB/even though/IN/though our/PRP$/our single/JJ/single question/NN/question over/IN/over here/RB/here is/VBZ/is just/RB/just /,/, there/EX/there is/VBZ/is the/DT/the single/JJ/single question/NN/question over/IN/over here/NNP/here. but/CC/but /,/, if/IN/if you/PRP/you remember/VBP/remember if/IN/if you/PRP/you go/VBP/go back/RB/back to/TO/to the/DT/the dynamic/JJ/dynamic programming/NN/programming algorithm/NN/algorithm we/PRP/we looked/VBD/looked at/IN/at /,/, even/RB/even to/TO/to answer/VB/answer the/DT/the single/JJ/single question/NN/question we/PRP/we really/RB/really answered/VBD/answered all/DT/all this/DT/this question/NNP/question. so/RB/so /,/, it/PRP/it is/VBZ/is not/RB/not that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to answer/VB/answer more/JJR/more questions/NNS/questions /,/, this/DT/this time/NNP/time. well/RB/well /,/, we/PRP/we are/NNP/are. so/RB/so /,/, we/PRP/we may/MD/may not/RB/not necessarily/RB/necessarily answer/JJR/answer more/JJR/more questions/NNS/questions over/IN/over here/RB/here /,/, we/PRP/we are/VBP/are just/RB/just going/VBG/going to/TO/to answer/VB/answer different/JJ/different kind/NN/kind of/IN/of questions/NNP/questions. and/CC/and from/IN/from those/DT/those answers/NNS/answers as/IN/as mentioned/VBN/mentioned over/IN/over here/RB/here /,/, we/PRP/we will/MD/will still/RB/still be/VB/be able/JJ/able to/TO/to get/VB/get the/DT/the answer/NN/answer to/TO/to the/DT/the real/JJ/real question/NN/question that/WDT/that /,/, we/PRP/we are/VBP/are asking/NNP/asking. so/RB/so /,/, from/IN/from on/IN/on for/IN/for the/DT/the rest/NN/rest of/IN/of the/DT/the lecture/NN/lecture /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to think/VB/think of/IN/of these/DT/these new/JJ/new questions/NNP/questions. and/CC/and once/RB/once we/PRP/we have/VBP/have the/DT/the answers/NNS/answers to/TO/to these/DT/these new/JJ/new questions/NNS/questions /,/, we/PRP/we will/MD/will use/VB/use this/DT/this idea/NN/idea to/TO/to return/VB/return the/DT/the best/JJS/best value/NN/value of/IN/of capacity/NN/capacity c/NN/c /,/, for/IN/for capacity/NN/capacity c/NNP/c. so/RB/so /,/, basically/RB/basically my/PRP$/my new/JJ/new instances/NNS/instances for/IN/for each/DT/each of/IN/of these/DT/these questions/NNS/questions are/VBP/are going/VBG/going to/TO/to be/VB/be characterized/VBN/characterized /,/, by/IN/by these/DT/these three/CD/three arguments/NNP/arguments. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have an/DT/an argument/NN/argument w/NN/w the/DT/the weight/NN/weight /,/, the/DT/the value/NN/value v/NN/v and/CC/and the/DT/the target/NN/target value/NNP/value. the/DT/the target/NN/target total/NN/total value/NN/value that/WDT/that we/PRP/we need/VBP/need and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have such/JJ/such questions/NNS/questions /,/, for/IN/for all/PDT/all such/JJ/such different/JJ/different v/NN/v ?/./? s/NNP/s. and/CC/and our/PRP$/our objective/NN/objective is/VBZ/is going/VBG/going to/TO/to be/VB/be minimize/NN/minimize /,/, the/DT/the knapsack/NN/knapsack size/NNP/size. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be /,/, this/DT/this kind/NN/kind of/IN/of questions/NNS/questions where/WRB/where we/PRP/we want/VBP/want the/DT/the lightest/JJS/lightest knapsack/NN/knapsack for/IN/for this/DT/this fixed/VBN/fixed value/NN/value v/CC/v. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 15/CD/15 /:/: 26/CD/26 /CD/) so/RB/so /,/, how/WRB/how do/VBP/do we/PRP/we solve/VB/solve this/DT/this problem/NN/problem ?/./? basically/RB/basically /,/, we/PRP/we see/VBP/see that/IN/that the/DT/the algorithm/NN/algorithm is/VBZ/is actually/RB/actually the/DT/the logic/NN/logic behind/IN/behind designing/VBG/designing the/DT/the algorithm/NN/algorithm is/VBZ/is very/RB/very similar/JJ/similar to/TO/to /,/, what/WDT/what we/PRP/we did/VBD/did for/IN/for the/DT/the other/JJ/other for/IN/for the/DT/the more/RBR/more natural/JJ/natural looking/NN/looking algorithm/NNP/algorithm. basically/RB/basically /,/, we/PRP/we need/VBP/need to/TO/to decide/VB/decide whether/IN/whether it/PRP/it will/MD/will include/VB/include item/NN/item 1/CD/1 /,/, whether/IN/whether it/PRP/it will/MD/will include/VB/include item/NN/item 2/CD/2 /,/, whether/IN/whether it/PRP/it will/MD/will include/VB/include item/NN/item three/CD/three and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, we/PRP/we have/VBP/have a/DT/a series/NN/series of/IN/of decisions/NNS/decisions to/TO/to make/NNP/make. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we want/NNP/want. we/PRP/we want/VBP/want the/DT/the optimal/JJ/optimal solution/NN/solution to/TO/to the/DT/the instance/NN/instance w/NN/w 1/CD/1 through/IN/through n/NN/n v/NN/v 1/CD/1 through/IN/through n/NN/n and/CC/and v/NNP/v. and/CC/and let/VB/let us/PRP/us look/VB/look at/IN/at it/PRP/it /,/, as/IN/as this/DT/this search/NN/search space/NN/space idea/NNP/idea. so/RB/so /,/, we/PRP/we consider/VBP/consider the/DT/the search/NN/search space/NN/space for/IN/for this/DT/this big/JJ/big instance/NNP/instance. for/IN/for this/DT/this instance/NN/instance /,/, which/WDT/which is/VBZ/is w/VBP/w of/IN/of 1/CD/1 through/IN/through n/NN/n v/NN/v of/IN/of 1/CD/1 through/IN/through n/NN/n and/CC/and little/RB/little v/NNP/v. so/RB/so /,/, this/DT/this is/VBZ/is our/PRP$/our search/NN/search space/NNP/space. so/RB/so /,/, what/WDT/what is/VBZ/is contained/VBN/contained in/IN/in it/PRP/it ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 16/CD/16 /:/: 25/CD/25 /CD/) it/PRP/it contains/VBZ/contains /,/, knapsack/NN/knapsack capacities/NNS/capacities or/CC/or it/PRP/it contains/VBZ/contains solutions/NNS/solutions to/TO/to such/JJ/such problems/NNP/problems. so/IN/so /,/, it/PRP/it contains/VBZ/contains feasible/JJ/feasible solutions/NNS/solutions to/TO/to such/JJ/such problems/NNP/problems. now/RB/now /,/, the/DT/the feasible/JJ/feasible solutions/NNS/solutions to/TO/to such/JJ/such problems/NNS/problems can/MD/can be/VB/be of/IN/of two/CD/two types/NNP/types. so/RB/so /,/, for/IN/for example/NN/example we/PRP/we can/MD/can have/VB/have solutions/NNS/solutions which/WDT/which have/VBP/have value/NN/value v/CC/v. so/RB/so /,/, everything/NN/everything over/IN/over here/RB/here must/MD/must have/VB/have value/NN/value v/CC/v. but/CC/but /,/, may/MD/may be/VB/be the/DT/the solution/NN/solution contains/VBZ/contains item/NN/item 1/CD/1 or/CC/or not/NNP/not. so/RB/so /,/, there/EX/there could/MD/could be/VB/be one/CD/one set/NN/set of/IN/of solutions/NNS/solutions /,/, which/WDT/which contain/NN/contain item/NN/item 1/CD/1 and/CC/and another/DT/another set/NN/set of/IN/of solutions/NNS/solutions which/WDT/which do/VBP/do not/RB/not contain/VB/contain item/NN/item 1/CD/1. so/RB/so /,/, this/DT/this consists/NNS/consists of/IN/of sets/NNS/sets with/IN/with value/NN/value v/NN/v /,/, not/RB/not containing/VBG/containing item/NN/item 1/CD/1. and/CC/and this/DT/this must/MD/must contain/VB/contain item/NN/item 1/CD/1 /,/, sets/NNS/sets containing/VBG/containing item/NN/item 1/CD/1. so/RB/so /,/, we/PRP/we really/RB/really want/VBP/want the/DT/the lightest/JJS/lightest capacity/NN/capacity set/NN/set /,/, the/DT/the lightest/JJS/lightest weight/NN/weight set/NN/set from/IN/from this/NNP/this. but/CC/but /,/, we/PRP/we set/VBD/set that/IN/that this/DT/this search/NN/search space/NN/space has/VBZ/has been/VBN/been decomposed/VBN/decomposed into/IN/into two/CD/two parts/NNP/parts. so/RB/so /,/, we/PRP/we could/MD/could ask/VB/ask what/WP/what is/VBZ/is the/DT/the lightest/JJS/lightest capacity/NN/capacity /,/, the/DT/the lightest/JJS/lightest set/NN/set in/IN/in this/DT/this ?/./? what/WP/what is/VBZ/is the/DT/the lightest/JJS/lightest set/NN/set in/IN/in this/NNP/this. and/CC/and we/PRP/we could/MD/could take/VB/take the/DT/the lighter/NN/lighter of/IN/of the/DT/the two/NNP/two. this/DT/this is/VBZ/is precisely/RB/precisely /,/, what/WDT/what has/VBZ/has been/VBN/been written/VBN/written down/RP/down over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we wanted/VBD/wanted the/DT/the optimal/JJ/optimal solution/NN/solution to/TO/to the/DT/the instance/NN/instance w/NN/w 1/CD/1 through/IN/through n/NN/n /,/, v/NN/v 1/CD/1 through/IN/through n/NN/n and/CC/and little/RB/little v/NNP/v. and/CC/and we/PRP/we can/MD/can get/VB/get that/IN/that /,/, by/IN/by picking/NN/picking the/DT/the lighter/NN/lighter of/IN/of the/DT/the solutions/NNS/solutions or/CC/or the/DT/the solution/NN/solution with/IN/with the/DT/the smaller/JJR/smaller weight/NN/weight /,/, of/IN/of these/DT/these two/CD/two solutions/NNP/solutions. so/RB/so /,/, the/DT/the first/JJ/first one/CD/one is/VBZ/is we/PRP/we look/VBP/look at/IN/at /,/, this/DT/this set/NNP/set. and/CC/and we/PRP/we pick/VBP/pick the/DT/the lightest/JJS/lightest solution/NN/solution in/IN/in that/NNP/that. and/CC/and that/IN/that is/VBZ/is over/IN/over here/NNP/here. we/PRP/we will/MD/will pick/VB/pick the/DT/the lightest/JJS/lightest solution/NN/solution in/IN/in that/DT/that and/CC/and that/IN/that is/VBZ/is over/IN/over here/NNP/here. so/RB/so /,/, if/IN/if you/PRP/you remember/VBP/remember this/DT/this is/VBZ/is pretty/RB/pretty much/RB/much idea/NN/idea we/PRP/we used/VBD/used /,/, in/IN/in our/PRP$/our original/JJ/original dynamic/JJ/dynamic programming/NN/programming algorithm/NN/algorithm as/IN/as well/NNP/well. what/WP/what can/MD/can we/PRP/we say/VB/say about/IN/about these/DT/these two/CD/two things/NNS/things ?/./? we/PRP/we can/MD/can say/VB/say something/NN/something rather/RB/rather interesting/NNP/interesting. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 18/CD/18 /:/: 54/CD/54 /CD/) so/RB/so /,/, this/DT/this first/JJ/first term/NN/term over/IN/over here/RB/here consist/VBP/consist of/IN/of all/DT/all solutions/NNS/solutions to/TO/to this/DT/this instance/NN/instance /,/, which/WDT/which do/VBP/do not/RB/not have/VB/have item/NN/item 1/CD/1. but/CC/but /,/, what/WP/what does/VBZ/does that/IN/that mean/NNP/mean. that/IN/that just/RB/just means/VBZ/means /,/, that/IN/that we/PRP/we might/MD/might as/RB/as well/RB/well we/PRP/we asking/VBG/asking for/IN/for solutions/NNS/solutions to/TO/to w/VB/w 2/CD/2 through/IN/through n/NN/n and/CC/and v/NN/v 2/CD/2 through/IN/through n/NN/n and/CC/and v/NN/v /,/, because/IN/because we/PRP/we are/VBP/are not/RB/not using/VBG/using item/NN/item 1/CD/1 any/DT/any way/NNP/way. so/RB/so /,/, this/DT/this term/NN/term is/VBZ/is in/IN/in fact/NN/fact /,/, exactly/RB/exactly the/DT/the optimal/JJ/optimal solution/NN/solution to/TO/to this/DT/this instance/NNP/instance. so/RB/so /,/, notice/NN/notice that/IN/that this/DT/this is/VBZ/is interesting/NNP/interesting. this/DT/this is/VBZ/is useful/JJ/useful /,/, because/IN/because we/PRP/we are/VBP/are heading/VBG/heading towards/NNS/towards a/DT/a recursive/JJ/recursive solution/NNP/solution. so/RB/so /,/, a/DT/a solution/NN/solution to/TO/to this/DT/this is/VBZ/is being/VBG/being expressed/VBN/expressed in/IN/in terms/NNS/terms of/IN/of a/DT/a solution/NN/solution to/TO/to a/DT/a smaller/JJR/smaller problem/NNP/problem. that/IN/that is/VBZ/is always/RB/always good/JJ/good news/NNP/news. what/WP/what about/IN/about this/DT/this ?/./? we/PRP/we want/VBP/want the/DT/the lightest/JJS/lightest solution/NN/solution of/IN/of value/NN/value v/NN/v /,/, having/VBG/having item/NN/item 1/CD/1. so/RB/so /,/, we/PRP/we are/VBP/are looking/VBG/looking at/IN/at this/DT/this set/NNP/set. we/PRP/we know/VBP/know that/IN/that at/IN/at this/DT/this set/NN/set of/IN/of sets/NNS/sets /,/, this/DT/this part/NN/part of/IN/of the/DT/the solution/NN/solution space/NNP/space. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 19/CD/19 /:/: 57/CD/57 /CD/) we/PRP/we know/VBP/know that/IN/that /,/, every/DT/every set/NN/set over/IN/over here/RB/here contains/VBZ/contains item/NN/item 1/CD/1. so/RB/so /,/, we/PRP/we take/VBP/take that/IN/that away/NNP/away. and/CC/and what/WP/what is/VBZ/is left/NNP/left. so/RB/so /,/, what/WDT/what is/VBZ/is left/VBN/left are/VBP/are sets/NNS/sets which/WDT/which do/VBP/do not/RB/not contain/VB/contain item/NN/item 1/CD/1. but/CC/but /,/, we/PRP/we also/RB/also know/VBP/know that/IN/that there/EX/there value/NN/value had/VBD/had better/RBR/better be/VB/be this/DT/this /,/, v/NN/v minus/NN/minus the/DT/the value/NN/value of/IN/of 1/CD/1. why/WRB/why ?/./? because/IN/because /,/, every/DT/every set/NN/set in/IN/in this/DT/this part/NN/part of/IN/of the/DT/the space/NN/space /,/, originally/RB/originally had/VBD/had value/NN/value little/RB/little v/CC/v. if/IN/if they/PRP/they contain/VBP/contain an/DT/an item/NN/item 1/CD/1 and/CC/and if/IN/if we/PRP/we remove/VBP/remove that/IN/that item/NN/item 1/CD/1 /,/, then/RB/then the/DT/the new/JJ/new value/NN/value must/MD/must be/VB/be exactly/RB/exactly v/VB/v minus/NN/minus v/NN/v 1/CD/1. so/RB/so /,/, what/WDT/what remains/VBZ/remains in/IN/in this/DT/this part/NN/part of/IN/of the/DT/the search/NN/search space/NN/space are/VBP/are sets/NNS/sets /,/, which/WDT/which do/VBP/do not/RB/not contain/VB/contain 1/CD/1. but/CC/but /,/, whose/WP$/whose value/NN/value is/VBZ/is v/NN/v minus/NN/minus v/NN/v 1/CD/1. /CD/( refer/NN/refer slide/NN/slide time/NN/time /:/: 20/CD/20 /:/: 46/CD/46 /CD/) so/RB/so /,/, we/PRP/we take/VBP/take the/DT/the best/JJS/best amongst/NN/amongst those/DT/those and/CC/and act/NN/act to/TO/to that/DT/that /,/, the/DT/the item1/NNP/item1. but/CC/but /,/, what/WP/what is/VBZ/is the/DT/the best/JJS/best amongst/NN/amongst those/NNP/those. so/RB/so /,/, the/DT/the best/JJS/best amongst/NN/amongst those/DT/those is/VBZ/is again/RB/again an/DT/an optimal/JJ/optimal solution/NN/solution to/TO/to some/DT/some instance/NNP/instance. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is an/DT/an optimal/JJ/optimal solution/NN/solution to/TO/to this/DT/this instance/NNP/instance. so/RB/so /,/, it/PRP/it is/VBZ/is an/DT/an optimal/JJ/optimal solution/NN/solution to/TO/to w/VB/w of/IN/of 2/CD/2 through/IN/through n/NN/n /,/, v/NN/v of/IN/of 2/CD/2 through/IN/through n/NN/n and/CC/and v/NN/v minus/NN/minus v/NN/v 1/CD/1. this/DT/this is/VBZ/is the/DT/the knapsack/NN/knapsack capacity/NN/capacity that/WDT/that /,/, this/DT/this is/VBZ/is the/DT/the value/NN/value that/IN/that we/PRP/we are/VBP/are seeking/NNP/seeking. why/WRB/why we/PRP/we seeking/VBG/seeking this/DT/this smaller/JJR/smaller value/NN/value ?/./? because/IN/because /,/, we/PRP/we know/VBP/know that/IN/that we/PRP/we are/VBP/are /,/, at/IN/at the/DT/the end/NN/end we/PRP/we are/VBP/are going/VBG/going to/TO/to add/VB/add item/NN/item 1/CD/1 to/TO/to it/NNP/it. so/RB/so /,/, if/IN/if we/PRP/we add/VBP/add item/NN/item 1/CD/1 into/IN/into it/PRP/it /,/, the/DT/the total/JJ/total value/NN/value will/MD/will become/VB/become v/NN/v and/CC/and which/WDT/which is/VBZ/is the/DT/the value/NN/value that/IN/that we/PRP/we want/NNP/want. so/RB/so /,/, therefore/IN/therefore we/PRP/we take/VBP/take an/DT/an optimal/JJ/optimal solution/NN/solution to/TO/to this/DT/this problem/NN/problem instance/NNP/instance. we/PRP/we take/VBP/take an/DT/an optimal/JJ/optimal solution/NN/solution to/TO/to this/DT/this problem/NN/problem instance/NNP/instance. add/NN/add 1/CD/1 to/TO/to it/PRP/it and/CC/and take/NNP/take. add/VBD/add the/DT/the item/NN/item 1/CD/1 to/TO/to it/PRP/it and/CC/and take/VB/take the/DT/the lighter/NN/lighter of/IN/of these/DT/these two/CD/two things/NNP/things. so/RB/so /,/, that/IN/that is/VBZ/is basically/RB/basically the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, now/RB/now all/DT/all that/DT/that we/PRP/we need/VBP/need to/TO/to do/VB/do is/VBZ/is /,/, express/NN/express this/DT/this as/IN/as a/DT/a recurrence/NNP/recurrence. well/RB/well /,/, there/EX/there is/VBZ/is a/DT/a slight/NN/slight catch/NNP/catch. so/RB/so /,/, when/WRB/when we/PRP/we do/VBP/do this/DT/this /,/, this/DT/this v/NN/v minus/VBZ/minus v/NN/v 1/CD/1 could/MD/could become/VB/become negative/NNP/negative. what/WP/what is/VBZ/is that/IN/that mean/NNP/mean. i/PRP/i want/VBP/want an/DT/an optimal/JJ/optimal solution/NN/solution in/IN/in which/WDT/which the/DT/the value/NN/value is/VBZ/is negative/JJ/negative /,/, that/IN/that does/VBZ/does not/RB/not mean/VB/mean anything/NNP/anything. so/RB/so /,/, we/PRP/we had/VBD/had better/RBR/better be/VB/be careful/JJ/careful about/IN/about that/NNP/that. so/RB/so /,/, we/PRP/we must/MD/must generate/VB/generate this/DT/this part/NNP/part. only/RB/only if/IN/if v/NN/v minus/NN/minus v/NN/v 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/-NONE-/0 /,/, because/IN/because otherwise/NN/otherwise this/DT/this problem/NN/problem instance/NN/instance is/VBZ/is undefined/NNP/undefined. so/RB/so /,/, when/WRB/when we/PRP/we write/VBP/write down/RP/down our/PRP$/our occurrence/NN/occurrence /,/, we/PRP/we will/MD/will have/VB/have to/TO/to put/VB/put an/DT/an explicit/NNP/explicit. check/NN/check whether/IN/whether v/NN/v minus/NN/minus v/NN/v 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/-NONE-/0 or/CC/or whatever/RB/whatever /,/, greater/JJR/greater than/IN/than or/CC/or less/JJR/less than/IN/than 0/CD/0. so/RB/so /,/, here/RB/here is/VBZ/is our/PRP$/our expression/NN/expression in/IN/in terms/NNS/terms of/IN/of which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define our/PRP$/our recurrence/NNP/recurrence. so/RB/so /,/, s/NNS/s i/PRP/i v/VBP/v i/PRP/i am/VBP/am going/VBG/going to/TO/to define/VB/define as/IN/as the/DT/the least/JJS/least capacity/NN/capacity knapsack/NN/knapsack /,/, which/WDT/which can/MD/can give/VB/give the/DT/the value/NN/value v/NN/v using/VBG/using items/NNS/items i/PRP/i through/IN/through n/NNP/n. so/RB/so /,/, this/DT/this i/PRP/i defines/VBZ/defines this/DT/this i/NNP/i. this/DT/this is/VBZ/is the/DT/the same/JJ/same i/NNP/i. and/CC/and this/DT/this v/NN/v defines/VBZ/defines /,/, the/DT/the value/NN/value that/IN/that we/PRP/we want/NNP/want. so/RB/so /,/, s/NNS/s i/PRP/i v/VBP/v is/VBZ/is going/VBG/going to/TO/to denote/VB/denote the/DT/the least/JJS/least capacity/NN/capacity knapsack/NN/knapsack /,/, which/WDT/which gives/VBZ/gives me/PRP/me value/NN/value v/NN/v using/VBG/using items/NNS/items i/PRP/i through/IN/through n/NNP/n. so/RB/so /,/, now/RB/now i/PRP/i am/VBP/am just/RB/just going/VBG/going to/TO/to take/VB/take this/DT/this expression/NN/expression that/IN/that we/PRP/we derived/NNP/derived. and/CC/and express/NN/express it/PRP/it in/IN/in terms/NNS/terms of/IN/of this/DT/this kind/NNP/kind. so/RB/so /,/, what/WDT/what is/VBZ/is this/DT/this optimal/JJ/optimal solution/NN/solution to/TO/to w/VB/w v/NN/v v/CC/v. well/RB/well /,/, this/DT/this is/VBZ/is simply/RB/simply this/DT/this left/NN/left hand/NN/hand side/NN/side is/VBZ/is simply/RB/simply s/VBZ/s 1/CD/1 v/NNP/v. because/IN/because /,/, we/PRP/we are/VBP/are starting/VBG/starting with/IN/with i/PRP/i equal/JJ/equal to/TO/to 1/CD/1 /,/, we/PRP/we are/VBP/are allowing/VBG/allowing all/DT/all items/NNP/items. and/CC/and we/PRP/we are/VBP/are asking/VBG/asking for/IN/for value/NN/value v/CC/v. then/RB/then /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take the/DT/the lighter/NN/lighter of/IN/of the/DT/the solutions/NNP/solutions. so/RB/so /,/, correspondingly/RB/correspondingly we/PRP/we are/VBP/are going/VBG/going to/TO/to use/VB/use the/DT/the minimum/JJ/minimum over/IN/over here/RB/here /,/, the/DT/the minimum/JJ/minimum of/IN/of two/CD/two solutions/NNP/solutions. what/WP/what is/VBZ/is the/DT/the first/JJ/first solution/NN/solution ?/./? the/DT/the first/JJ/first solution/NN/solution is/VBZ/is to/TO/to the/DT/the instance/NN/instance w/NN/w 2/CD/2 n/NN/n v/NN/v 2/CD/2 n/NN/n little/RB/little v/CC/v. so/RB/so /,/, it/PRP/it is/VBZ/is going/VBG/going to/TO/to be/VB/be the/DT/the least/JJS/least capacity/NN/capacity solution/NN/solution to/TO/to this/DT/this instance/NNP/instance. so/RB/so /,/, that/IN/that is/VBZ/is as/IN/as good/JJ/good as/IN/as saying/VBG/saying /,/, it/PRP/it is/VBZ/is s/VBZ/s 2/CD/2 v/NNP/v. so/RB/so /,/, that/IN/that is/VBZ/is what/WP/what we/PRP/we have/VBP/have written/VBN/written down/RP/down over/IN/over here/NNP/here. the/DT/the second/JJ/second part/NN/part is/VBZ/is this/NNP/this. however/RB/however /,/, when/WRB/when we/PRP/we write/VBP/write this/DT/this down/NN/down /,/, we/PRP/we have/VBP/have to/TO/to make/VB/make sure/JJ/sure that/IN/that v/NN/v minus/NN/minus v/NN/v 1/CD/1 is/VBZ/is not/RB/not less/JJR/less than/IN/than 0/CD/0. so/RB/so /,/, let/VB/let us/PRP/us check/VB/check that/NNP/that. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to write/VB/write down/RP/down a/DT/a c/NN/c style/NN/style expression/NNP/expression. so/RB/so /,/, this/DT/this says/VBZ/says that/IN/that /,/, let/VB/let us/PRP/us check/VB/check whether/IN/whether v/NN/v minus/NN/minus v/NN/v 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/CD/0. if/IN/if it/PRP/it is/VBZ/is /,/, then/RB/then the/DT/the value/NN/value that/IN/that we/PRP/we want/VBP/want here/RB/here is/VBZ/is w/RB/w of/IN/of 1/CD/1 plus/CC/plus s/NNS/s of/IN/of 2/CD/2 v/NN/v minus/NN/minus v/NN/v 1/CD/1. why/WRB/why is/VBZ/is that/IN/that ?/./? because/IN/because /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have item/NN/item 1/CD/1 always/RB/always and/CC/and therefore/RB/therefore /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have the/DT/the weight/NN/weight corresponding/VBG/corresponding to/TO/to item/VB/item /,/, always/RB/always present/JJ/present over/IN/over here/NNP/here. and/CC/and we/PRP/we are/VBP/are going/VBG/going to/TO/to add/VB/add this/DT/this item/NN/item 1/CD/1 /,/, into/IN/into the/DT/the optimal/JJ/optimal solution/NN/solution to/TO/to this/DT/this problem/NNP/problem. but/CC/but /,/, the/DT/the weight/NN/weight of/IN/of that/DT/that optimal/JJ/optimal solution/NN/solution /,/, the/DT/the capacity/NN/capacity needed/VBD/needed for/IN/for that/DT/that optimal/JJ/optimal solution/NN/solution is/VBZ/is simply/RB/simply s/VBZ/s of/IN/of 2/CD/2. we/PRP/we start/VBP/start with/IN/with items/NNS/items 2/CD/2 through/IN/through n/NNP/n. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is a/DT/a 2/CD/2 over/IN/over here/NNP/here. and/CC/and the/DT/the value/NN/value that/IN/that we/PRP/we are/VBP/are expecting/VBG/expecting is/VBZ/is v/NN/v minus/NN/minus v/NN/v 1/CD/1 /,/, exactly/RB/exactly this/NNP/this. so/RB/so /,/, if/IN/if this/DT/this expression/NN/expression is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/-NONE-/0 /,/, then/RB/then this/DT/this is/VBZ/is the/DT/the value/NN/value that/IN/that we/PRP/we want/NNP/want. if/IN/if this/DT/this expression/NN/expression is/VBZ/is less/JJR/less than/IN/than 0/-NONE-/0 /,/, this/DT/this problem/NN/problem is/VBZ/is undefined/NNP/undefined. but/CC/but /,/, what/WP/what does/NNP/does. how/WRB/how do/VBP/do we/PRP/we represent/VBP/represent that/IN/that ?/./? so/RB/so /,/, that/IN/that we/PRP/we represent/VBP/represent by/IN/by putting/VBG/putting in/IN/in an/DT/an infinity/NNP/infinity. so/RB/so /,/, we/PRP/we are/VBP/are taking/VBG/taking the/DT/the min/NN/min /,/, this/DT/this infinity/NN/infinity will/MD/will never/RB/never be/VB/be taken/NNP/taken. and/CC/and if/IN/if this/DT/this second/JJ/second expression/NN/expression is/VBZ/is in/IN/in infinite/JJ/infinite /,/, then/RB/then that/IN/that is/VBZ/is as/IN/as good/JJ/good as/IN/as saying/VBG/saying just/RB/just give/JJ/give me/PRP/me the/DT/the first/JJ/first expression/NNP/expression. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we have/VBP/have distilled/VBN/distilled out/RP/out of/IN/of this/NNP/this. well/RB/well /,/, it/PRP/it is/VBZ/is actually/RB/actually the/DT/the same/JJ/same thing/NN/thing but/CC/but /,/, it/PRP/it is/VBZ/is now/RB/now return/VBP/return out/RP/out more/JJR/more compactly/RB/compactly in/IN/in terms/NNS/terms of/IN/of variables/NNS/variables of/IN/of this/DT/this kind/NN/kind /,/, subscripted/VBD/subscripted expressions/NNS/expressions of/IN/of this/DT/this kind/NNP/kind. you/PRP/you must/MD/must of/IN/of course/NN/course /,/, generalize/NN/generalize it/PRP/it in/IN/in order/NN/order to/TO/to use/VB/use it/PRP/it to/TO/to design/VB/design an/DT/an algorithm/NN/algorithm /,/, we/PRP/we need/VBP/need to/TO/to generalize/VB/generalize it/NNP/it. so/RB/so /,/, here/RB/here is/VBZ/is a/DT/a generalization/NNP/generalization. so/RB/so /,/, here/RB/here we/PRP/we were/VBD/were looking/VBG/looking at/IN/at all/DT/all the/DT/the items/NNS/items 1/CD/1 through/IN/through n/NNP/n. and/CC/and you/PRP/you can/MD/can note/VB/note /,/, you/PRP/you can/MD/can see/VB/see that/IN/that internally/RB/internally we/PRP/we got/VBD/got we/PRP/we needed/VBD/needed to/TO/to have/VB/have solutions/NNS/solutions to/TO/to problems/NNS/problems in/IN/in which/WDT/which /,/, we/PRP/we were/VBD/were having/VBG/having items/NNS/items 2/CD/2 through/IN/through n/NNP/n. if/IN/if we/PRP/we did/VBD/did recursion/NN/recursion on/IN/on that/DT/that /,/, then/RB/then we/PRP/we would/MD/would get/VB/get 3/CD/3 through/IN/through to/TO/to n/VB/n 4/CD/4 to/TO/to n/VB/n and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, therefore/IN/therefore we/PRP/we now/RB/now consider/VBP/consider the/DT/the more/RBR/more general/JJ/general case/NNP/case. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to ask/VB/ask what/WP/what is/VBZ/is the/DT/the least/JJS/least capacity/NN/capacity solution/NN/solution of/IN/of value/NN/value v/NN/v using/VBG/using items/NNS/items i/PRP/i through/IN/through n/NNP/n. so/RB/so /,/, that/IN/that is/VBZ/is s/NNS/s of/IN/of i/PRP/i v/VBP/v /,/, that/IN/that is/VBZ/is denoted/VBN/denoted by/IN/by s/NNS/s of/IN/of i/PRP/i v/CC/v. so/RB/so /,/, analogously/RB/analogously we/PRP/we will/MD/will write/VB/write down/IN/down the/DT/the expression/NN/expression /,/, the/DT/the more/RBR/more general/JJ/general expression/NNP/expression. so/RB/so /,/, here/RB/here we/PRP/we skip/VBP/skip the/DT/the first/JJ/first item/NNP/item. and/CC/and so/RB/so we/PRP/we started/VBD/started off/RP/off with/IN/with 2/CD/2. so/RB/so /,/, similarly/RB/similarly here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to start/VB/start off/RP/off with/IN/with i/PRP/i plus/CC/plus 1/CD/1. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the first/JJ/first solution/NN/solution corresponding/NN/corresponding to/TO/to this/NNP/this. and/CC/and instead/RB/instead of/IN/of checking/VBG/checking /,/, whether/IN/whether v/NN/v minus/NN/minus v/NN/v 1/CD/1 is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/CD/0. we/PRP/we are/VBP/are simply/RB/simply going/VBG/going to/TO/to be/VB/be checking/VBG/checking /,/, whether/IN/whether v/NN/v minus/NN/minus v/NN/v of/IN/of i/PRP/i is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/CD/0. if/IN/if so/RB/so here/RB/here we/PRP/we took/VBD/took w/NN/w 1/CD/1 plus/CC/plus something/NNP/something. here/RB/here we/PRP/we will/MD/will take/VB/take w/NN/w i/PRP/i plus/VBZ/plus something/NNP/something. again/RB/again /,/, this/DT/this something/NN/something is/VBZ/is going/VBG/going to/TO/to contain/VB/contain items/NNS/items 2/CD/2 through/IN/through n/NN/n over/IN/over here/NNP/here. it/PRP/it will/MD/will contain/VB/contain items/NNS/items i/PRP/i plus/VBZ/plus 1/CD/1 through/IN/through n/NN/n over/IN/over here/NNP/here. and/CC/and so/RB/so we/PRP/we will/MD/will have/VB/have i/PRP/i plus/RB/plus 1/CD/1 over/IN/over here/NNP/here. this/DT/this was/VBD/was the/DT/the value/NN/value required/VBN/required /,/, was/VBD/was v/NN/v minus/NN/minus v/NN/v 1/CD/1. here/RB/here the/DT/the value/NN/value require/NN/require is/VBZ/is v/NN/v minus/NN/minus v/NN/v i/PRP/i /,/, because/IN/because we/PRP/we are/VBP/are adding/VBG/adding an/DT/an item/NN/item i/PRP/i later/JJ/later on/IN/on anyway/NNP/anyway. in/IN/in case/NN/case we/PRP/we want/VBP/want v/NN/v minus/NN/minus v/NN/v i/PRP/i that/IN/that is/VBZ/is the/DT/the value/NN/value of/IN/of this/DT/this part/NN/part and/CC/and then/RB/then to/TO/to it/PRP/it /,/, we/PRP/we add/VBP/add item/NN/item 1/CD/1. so/RB/so /,/, the/DT/the weight/NN/weight solution/NN/solution value/NN/value of/IN/of this/DT/this whole/JJ/whole thing/NN/thing together/RB/together will/MD/will be/VB/be w/VB/w of/IN/of i/PRP/i plus/VBZ/plus s/NNS/s of/IN/of i/PRP/i plus/VBZ/plus 1/CD/1 v/NN/v of/IN/of v/NN/v minus/NN/minus i/PRP/i /,/, as/IN/as before/NNP/before. and/CC/and of/IN/of course/NN/course /,/, if/IN/if v/NN/v minus/NN/minus v/NN/v i/PRP/i is/VBZ/is less/JJR/less than/IN/than 0/-NONE-/0 /,/, then/RB/then we/PRP/we do/VBP/do not/RB/not want/VB/want this/DT/this entire/JJ/entire term/NN/term to/TO/to be/VB/be taken/VBN/taken into/IN/into account/NN/account at/IN/at all/NNP/all. and/CC/and therefore/RB/therefore /,/, otherwise/RB/otherwise we/PRP/we are/VBP/are going/VBG/going to/TO/to put/VB/put down/RP/down infinity/NNP/infinity. so/RB/so /,/, this/DT/this is/VBZ/is a/DT/a defining/NN/defining recurrence/NN/recurrence that/WDT/that we/PRP/we are/VBP/are going/VBG/going to/TO/to use/NNP/use. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see how/WRB/how this/DT/this recurrence/NN/recurrence can/MD/can be/VB/be solved/NNP/solved. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 28/CD/28 /:/: 41/CD/41 /CD/) so/RB/so /,/, as/IN/as usual/JJ/usual we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be keeping/VBG/keeping a/DT/a table/NNP/table. so/RB/so /,/, i/PRP/i have/VBP/have just/RB/just written/VBN/written out/RP/out that/IN/that recurrence/NN/recurrence again/NNP/again. so/RB/so /,/, let/VB/let us/PRP/us see/VB/see what/WP/what kind/NN/kind of/IN/of table/JJ/table /,/, we/PRP/we can/MD/can use/VB/use for/IN/for this/NNP/this. so/RB/so /,/, here/RB/here is/VBZ/is the/DT/the table/NNP/table. this/DT/this is/VBZ/is the/DT/the i/NN/i axis/VBZ/axis going/VBG/going down/RB/down vertically/NNP/vertically. this/DT/this is/VBZ/is the/DT/the v/NN/v axis/NNP/axis. so/RB/so /,/, earlier/JJR/earlier i/PRP/i said/VBD/said that/IN/that v/NN/v really/RB/really needs/VBZ/needs to/TO/to start/VB/start from/IN/from 1/CD/1. but/CC/but /,/, it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to have/VB/have a/DT/a 0/-NONE-/0 here/RB/here /,/, as/IN/as well/NNP/well. so/RB/so /,/, have/VBP/have started/VBN/started it/PRP/it off/RP/off from/IN/from 0/-NONE-/0 and/CC/and as/IN/as before/IN/before it/PRP/it goes/VBZ/goes to/TO/to v/VB/v all/NNP/all. so/RB/so /,/, since/IN/since we/PRP/we are/VBP/are going/VBG/going to/TO/to have/VB/have /,/, since/IN/since i/PRP/i want/VBP/want to/TO/to show/VB/show you/PRP/you what/WP/what is/VBZ/is recurrence/NN/recurrence means/VBZ/means in/IN/in this/DT/this table/NN/table ?/./? i/PRP/i have/VBP/have put/VBN/put down/RP/down some/DT/some specific/JJ/specific /,/, i/PRP/i have/VBP/have marked/VBN/marked out/RP/out from/IN/from specific/JJ/specific entries/NNP/entries. so/RB/so /,/, let/VB/let us/PRP/us ask/VB/ask how/WRB/how this/DT/this recurrence/NN/recurrence will/MD/will work/VB/work out/RP/out in/IN/in this/DT/this table/NNP/table. so/RB/so /,/, i/PRP/i want/VBP/want to/TO/to compute/VB/compute s/NNS/s of/IN/of i/PRP/i v/VBP/v /,/, which/WDT/which is/VBZ/is this/DT/this entry/NN/entry in/IN/in this/DT/this table/NN/table ith/IN/ith column/NN/column vth/NN/vth row/NN/row /,/, ith/IN/ith row/NN/row vth/NN/vth column/NNP/column. now/RB/now /,/, this/DT/this entry/NN/entry depends/VBZ/depends upon/IN/upon which/WDT/which entries/NNP/entries. well/RB/well /,/, it/PRP/it depends/VBZ/depends upon/IN/upon this/DT/this entry/NNP/entry. and/CC/and it/PRP/it depends/VBZ/depends upon/IN/upon this/DT/this entry/NNP/entry. it/PRP/it does/VBZ/does not/RB/not /,/, we/PRP/we just/RB/just do/VBP/do not/RB/not have/VB/have to/TO/to look/VB/look at/IN/at this/DT/this entry/NNP/entry. we/PRP/we have/VBP/have to/TO/to do/VB/do something/NN/something to/TO/to it/NNP/it. but/CC/but /,/, this/DT/this other/JJ/other thing/NN/thing that/WDT/that we/PRP/we have/VBP/have to/TO/to do/VB/do /,/, we/PRP/we know/VBP/know what/WP/what the/DT/the value/NN/value of/IN/of w/NN/w i/PRP/i is/NNP/is. so/RB/so /,/, it/PRP/it really/RB/really depends/VBZ/depends upon/IN/upon this/DT/this entry/NN/entry and/CC/and this/DT/this entry/NNP/entry. so/RB/so /,/, which/WDT/which are/VBP/are these/DT/these two/CD/two entries/NNS/entries ?/./? so/RB/so /,/, this/DT/this entry/NN/entry is/VBZ/is this/DT/this entry/NN/entry and/CC/and this/DT/this entry/NN/entry is/VBZ/is this/DT/this entry/NNP/entry. of/IN/of course/NN/course /,/, if/IN/if v/NN/v minus/NN/minus v/NN/v i/PRP/i was/VBD/was less/JJR/less than/IN/than 0/-NONE-/0 /,/, then/RB/then this/DT/this entry/NN/entry would/MD/would fall/VB/fall outside/IN/outside the/DT/the table/NNP/table. and/CC/and so/RB/so we/PRP/we would/MD/would only/RB/only have/VB/have a/DT/a single/JJ/single entry/NN/entry over/IN/over here/NNP/here. but/CC/but /,/, this/DT/this is/VBZ/is the/DT/the more/RBR/more common/JJ/common more/RBR/more interesting/JJ/interesting case/NNP/case. so/RB/so /,/, to/TO/to fill/VB/fill this/DT/this entry/NN/entry /,/, it/PRP/it is/VBZ/is sufficient/JJ/sufficient if/IN/if we/PRP/we have/VBP/have this/DT/this entry/NN/entry and/CC/and this/DT/this entry/NN/entry filled/NNP/filled. that/IN/that is/VBZ/is /,/, all/DT/all coming/VBG/coming out/RP/out of/IN/of this/DT/this recurrence/NN/recurrence which/WDT/which we/PRP/we have/VBP/have written/VBN/written down/RP/down over/IN/over here/NNP/here. well/RB/well /,/, that/IN/that suggests/NNS/suggests a/DT/a way/NN/way of/IN/of filling/NN/filling in/IN/in this/DT/this table/NNP/table. so/RB/so /,/, we/PRP/we sort/VBP/sort of/IN/of fill/NN/fill in/IN/in going/VBG/going bottom/NN/bottom up/IN/up or/CC/or bottom/JJ/bottom right/NN/right from/NNP/from. we/PRP/we start/VBP/start of/IN/of at/IN/at the/DT/the bottom/NN/bottom and/CC/and go/VB/go upwards/NNS/upwards /,/, but/CC/but we/PRP/we also/RB/also need/VBP/need this/NNP/this. and/CC/and so/RB/so therefore/RB/therefore /,/, we/PRP/we also/RB/also have/VBP/have to/TO/to start/VB/start from/IN/from the/DT/the left/NN/left side/NNP/side. so/RB/so /,/, to/TO/to do/VB/do that/DT/that we/PRP/we would/MD/would need/VB/need to/TO/to have/VB/have these/DT/these entries/NNS/entries filled/NNP/filled. how/WRB/how do/VBP/do we/PRP/we fill/MD/fill /,/, this/DT/this entries/NNS/entries ?/./? well/RB/well /,/, let/VB/let us/PRP/us interpret/VB/interpret what/WP/what these/DT/these entries/NNS/entries are/NNP/are. so/RB/so /,/, this/DT/this entry/NN/entry in/IN/in general/JJ/general is/VBZ/is going/VBG/going to/TO/to be/VB/be s/NNS/s i/PRP/i 0/-NONE-/0 /,/, for/IN/for different/JJ/different values/NNS/values of/IN/of i/NNP/i. and/CC/and let/VB/let me/PRP/me remind/VB/remind you/PRP/you /,/, what/WP/what s/NNS/s i/PRP/i 0/-NONE-/0 is/NNP/is. s/VBZ/s i/PRP/i 0/-NONE-/0 is/VBZ/is the/DT/the capacity/NN/capacity /,/, the/DT/the minimum/JJ/minimum capacity/NN/capacity needed/VBN/needed to/TO/to get/VB/get a/DT/a value/NN/value of/IN/of 0/-NONE-/0 using/VBG/using items/NNS/items i/PRP/i through/IN/through n/NNP/n. that/IN/that does/VBZ/does not/RB/not seem/VB/seem to/TO/to difficult/VB/difficult does/VBZ/does it/PRP/it /,/, we/PRP/we just/RB/just want/VBP/want to/TO/to get/VB/get a/DT/a value/NN/value of/IN/of 0/CD/0. so/RB/so /,/, what/WDT/what is/VBZ/is the/DT/the minimum/JJ/minimum capacity/NN/capacity /,/, we/PRP/we need/NNP/need. well/RB/well trivially/RB/trivially /,/, the/DT/the answer/NN/answer is/VBZ/is 0/-NONE-/0 capacity/NNP/capacity. so/RB/so /,/, if/IN/if we/PRP/we get/VBP/get capacity/NN/capacity /,/, if/IN/if we/PRP/we get/VBP/get a/DT/a knapsack/NN/knapsack of/IN/of capacity/NN/capacity 0/-NONE-/0 we/PRP/we can/MD/can certainly/RB/certainly get/VB/get value/NN/value of/IN/of 0/-NONE-/0 by/IN/by filling/NN/filling nothing/NN/nothing into/IN/into it/NNP/it. and/CC/and clearly/RB/clearly there/RB/there is/VBZ/is no/DT/no smaller/JJR/smaller knapsack/NN/knapsack that/IN/that /,/, we/PRP/we can/MD/can use/VB/use /,/, because/IN/because this/DT/this is/VBZ/is the/DT/the smallest/JJS/smallest possible/JJ/possible knapsack/NNP/knapsack. so/RB/so /,/, this/DT/this entire/JJ/entire yellow/NN/yellow column/NN/column just/RB/just needs/VBZ/needs to/TO/to be/VB/be filled/VBN/filled with/IN/with 0s/CD/0s. and/CC/and that/IN/that something/NN/something /,/, we/PRP/we can/MD/can do/VB/do without/IN/without any/DT/any computation/NNP/computation. so/RB/so /,/, that/IN/that leaves/NNS/leaves open/JJ/open the/DT/the question/NN/question of/IN/of /,/, how/WRB/how do/VBP/do we/PRP/we fill/MD/fill this/DT/this row/NNP/row. so/RB/so /,/, let/VB/let us/PRP/us try/NN/try to/TO/to interpret/VB/interpret what/WP/what this/DT/this row/NN/row is/NNP/is. so/RB/so /,/, this/DT/this row/NN/row in/IN/in general/JJ/general is/VBZ/is going/VBG/going to/TO/to be/VB/be s/NNS/s n/VB/n v/NN/v /,/, which/WDT/which is/VBZ/is denoted/VBN/denoted /,/, which/WDT/which is/VBZ/is denoting/VBG/denoting the/DT/the capacity/NN/capacity needed/VBD/needed to/TO/to get/VB/get value/NN/value v/NN/v /,/, the/DT/the least/JJS/least capacity/NN/capacity needed/VBD/needed to/TO/to get/VB/get value/NN/value v/NN/v using/VBG/using item/NN/item n/NN/n alone/NNP/alone. so/RB/so /,/, you/PRP/you are/VBP/are just/RB/just allowed/VBN/allowed to/TO/to pick/VB/pick item/NN/item n/NN/n nothing/NN/nothing else/NNP/else. so/RB/so /,/, what/WDT/what kind/NN/kind of/IN/of capacities/NNS/capacities can/MD/can you/PRP/you get/VB/get ?/./? what/WP/what kind/NN/kind of/IN/of values/NNS/values can/MD/can you/PRP/you get/VB/get ?/./? well/RB/well clearly/RB/clearly /,/, if/IN/if this/DT/this v/NN/v happens/VBZ/happens to/TO/to be/VB/be v/NN/v of/IN/of n/NN/n /,/, then/RB/then you/PRP/you can/MD/can do/VB/do that/DT/that using/VBG/using just/RB/just a/DT/a single/JJ/single item/NNP/item. so/RB/so /,/, that/IN/that would/MD/would been/VB/been that/IN/that if/IN/if v/NN/v happens/NNS/happens to/TO/to be/VB/be v/NN/v of/IN/of n/NN/n /,/, then/RB/then the/DT/the least/JJS/least capacity/NN/capacity knapsack/NN/knapsack that/WDT/that you/PRP/you would/MD/would need/VB/need /,/, would/MD/would have/VB/have to/TO/to have/VB/have capacity/NN/capacity of/IN/of w/NN/w of/IN/of n/NNP/n. so/RB/so /,/, one/CD/one of/IN/of these/DT/these entries/NNS/entries can/MD/can be/VB/be filled/VBN/filled using/VBG/using this/NNP/this. what/WP/what about/IN/about the/DT/the rest/NN/rest of/IN/of the/DT/the entries/NNS/entries ?/./? suppose/NN/suppose we/PRP/we want/VBP/want to/TO/to do/VB/do this/DT/this for/IN/for a/DT/a different/JJ/different vale/NN/vale of/IN/of v/NNP/v. so/RB/so /,/, let/VB/let us/PRP/us say/VB/say we/PRP/we want/VBP/want to/TO/to get/VB/get a/DT/a value/NN/value larger/NN/larger than/IN/than v/NN/v of/IN/of n/NN/n /,/, can/MD/can we/PRP/we do/VBP/do it/NNP/it. we/PRP/we are/VBP/are only/RB/only use/VBP/use to/TO/to /,/, we/PRP/we are/VBP/are only/RB/only allowed/VBN/allowed to/TO/to use/VB/use the/DT/the item/NN/item n/NNP/n. so/RB/so /,/, clearly/RB/clearly we/PRP/we can/MD/can not/RB/not do/VB/do it/NNP/it. we/PRP/we can/MD/can not/RB/not get/VB/get a/DT/a value/NN/value either/NN/either bigger/NN/bigger or/CC/or larger/JJR/larger than/IN/than v/NN/v of/IN/of n/NN/n /,/, by/IN/by using/NN/using only/RB/only item/VBP/item n/NNP/n. so/RB/so /,/, then/RB/then what/WP/what we/PRP/we do/NNP/do. so/RB/so /,/, that/IN/that can/MD/can be/VB/be represented/VBN/represented quite/RB/quite nicely/RB/nicely /,/, by/IN/by saying/VBG/saying that/IN/that by/IN/by putting/VBG/putting in/IN/in infinity/NN/infinity /,/, in/IN/in these/DT/these entries/NNP/entries. so/RB/so /,/, v/NN/v of/IN/of v/NN/v n/NN/n /,/, so/RB/so if/IN/if v/NN/v is/VBZ/is not/RB/not equal/JJ/equal to/TO/to v/VB/v n/NN/n /,/, then/RB/then we/PRP/we can/MD/can not/RB/not get/VB/get that/IN/that value/NN/value and/CC/and so/RB/so we/PRP/we will/MD/will say/VB/say that/IN/that a/DT/a capacity/NN/capacity knapsack/NN/knapsack of/IN/of /,/, capacity/NN/capacity infinite/NN/infinite is/VBZ/is needed/NNP/needed. let/NN/let me/PRP/me explain/VB/explain /,/, why/WRB/why this/DT/this works/NNP/works. basically/RB/basically later/JJ/later on/IN/on /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to take/VB/take things/NNS/things like/IN/like min/NN/min of/IN/of this/DT/this or/CC/or min/NN/min of/IN/of this/DT/this or/CC/or something/NN/something like/IN/like that/NNP/that. so/RB/so /,/, if/IN/if there/EX/there are/VBP/are infinities/NNS/infinities over/IN/over here/RB/here /,/, then/RB/then that/IN/that value/NN/value is/VBZ/is essentially/RB/essentially going/VBG/going to/TO/to be/VB/be ignored/NNP/ignored. or/CC/or if/IN/if both/DT/both of/IN/of these/DT/these values/NNS/values are/VBP/are infinites/NNS/infinites and/CC/and if/IN/if you/PRP/you take/VBP/take min/RP/min of/IN/of those/DT/those infinities/NNS/infinities /,/, then/RB/then an/DT/an infinity/NN/infinity will/MD/will crop/VB/crop up/RP/up over/IN/over here/NNP/here. but/CC/but /,/, says/VBZ/says that/IN/that even/RB/even this/DT/this value/NN/value is/VBZ/is impossible/JJ/impossible to/TO/to accomplish/NNP/accomplish. so/RB/so /,/, that/IN/that is/VBZ/is sort/NN/sort of/IN/of a/DT/a nice/JJ/nice thing/NNP/thing. that/IN/that is/VBZ/is a/DT/a kind/NN/kind of/IN/of a/DT/a nice/JJ/nice coding/NN/coding that/WDT/that /,/, infinity/NN/infinity allows/VBZ/allows us/PRP/us to/TO/to accomplish/NNP/accomplish. so/RB/so /,/, basically/RB/basically now/RB/now we/PRP/we have/VBP/have express/NN/express the/DT/the algorithm/NN/algorithm entirely/NNP/entirely. so/RB/so /,/, we/PRP/we have/VBP/have entries/NNS/entries to/TO/to fill/NNP/fill. and/CC/and there/EX/there are/VBP/are sort/NN/sort of/IN/of three/CD/three kinds/NNS/kinds of/IN/of entries/NNS/entries to/TO/to fill/NNP/fill. we/PRP/we have/VBP/have these/DT/these yellow/JJ/yellow entries/NNS/entries to/TO/to fill/NNP/fill. we/PRP/we have/VBP/have these/DT/these blue/JJ/blue entries/NNS/entries to/TO/to fill/NNP/fill. and/CC/and /,/, then/RB/then there/EX/there are/VBP/are the/DT/the rest/NN/rest of/IN/of the/DT/the entries/NNS/entries which/WDT/which we/PRP/we fill/VBP/fill according/VBG/according to/TO/to this/DT/this recurrence/NNP/recurrence. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 34/CD/34 /:/: 46/CD/46 /CD/) so/RB/so /,/, we/PRP/we can/MD/can write/VB/write done/VBN/done our/PRP$/our algorithm/NNP/algorithm. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to call/VB/call my/PRP$/my algorithm/NN/algorithm ks/NNS/ks as/IN/as knapsack/NNP/knapsack. it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take as/IN/as argument/NNP/argument. so/RB/so /,/, that/IN/that brings/NNS/brings us/PRP/us to/TO/to our/PRP$/our algorithm/NNP/algorithm. we/PRP/we will/MD/will call/VB/call this/DT/this ks/NNS/ks for/IN/for knapsack/NNP/knapsack. it/PRP/it takes/VBZ/takes as/IN/as arguments/NNS/arguments /,/, the/DT/the value/NN/value /,/, the/DT/the weight/NN/weight of/IN/of all/DT/all the/DT/the n/NN/n item/NN/item and/CC/and the/DT/the capacity/NNP/capacity. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to solve/VB/solve /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to find/VB/find an/DT/an answer/NN/answer to/TO/to this/NNP/this. but/CC/but /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to find/VB/find an/DT/an answer/NN/answer using/VBG/using our/PRP$/our new/JJ/new formulation/NNP/formulation. so/RB/so /,/, as/IN/as mentioned/VBN/mentioned earlier/NNP/earlier. so/RB/so /,/, there/EX/there were/VBD/were those/DT/those yellow/JJ/yellow entries/NNS/entries to/TO/to be/VB/be filled/NNP/filled. they/PRP/they were/VBD/were all/PDT/all going/VBG/going to/TO/to be/VB/be filled/VBN/filled with/IN/with 0/CD/0. so/RB/so /,/, we/PRP/we will/MD/will do/VB/do that/NNP/that. so/RB/so /,/, these/DT/these entries/NNS/entries using/VBG/using this/DT/this equation/NNP/equation. then/RB/then /,/, there/EX/there were/VBD/were the/DT/the blue/JJ/blue entries/NNS/entries to/TO/to be/VB/be filled/NNP/filled. the/DT/the blue/JJ/blue entry/NN/entry is/VBZ/is where/WRB/where that/IN/that /,/, for/IN/for if/IN/if v/NN/v is/VBZ/is equal/JJ/equal to/TO/to v/VB/v of/IN/of n/NN/n /,/, then/RB/then the/DT/the knapsack/NN/knapsack capacity/NN/capacity needed/VBN/needed was/VBD/was w/JJ/w of/IN/of n/NNP/n. otherwise/NN/otherwise /,/, the/DT/the knapsack/NN/knapsack capacity/NN/capacity needed/VBN/needed was/VBD/was infinity/NNP/infinity. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how you/PRP/you fill/MD/fill the/DT/the bottom/NN/bottom row/NNP/row. so/RB/so /,/, this/DT/this is/VBZ/is how/WRB/how we/PRP/we filled/VBD/filled and/CC/and this/DT/this was/VBD/was the/DT/the equation/NN/equation used/NNP/used. finally/RB/finally /,/, the/DT/the rest/NN/rest of/IN/of the/DT/the entries/NNS/entries were/VBD/were filled/VBN/filled using/VBG/using the/DT/the recurrence/NN/recurrence which/WDT/which we/PRP/we derived/NNP/derived. so/RB/so /,/, this/DT/this is/VBZ/is that/IN/that recurrence/NNP/recurrence. at/IN/at the/DT/the end/NN/end of/IN/of it/PRP/it /,/, to/TO/to get/VB/get the/DT/the value/NN/value for/IN/for the/DT/the capacity/NN/capacity c/NN/c /,/, we/PRP/we needed/VBD/needed to/TO/to find/VB/find as/IN/as we/PRP/we described/VBD/described earlier/RBR/earlier the/DT/the largest/JJS/largest v/NN/v such/JJ/such that/IN/that /,/, s/NNS/s v/VBP/v 1/CD/1 is/VBZ/is less/JJR/less than/IN/than c/NNP/c. so/RB/so /,/, what/WDT/what is/VBZ/is s/NNS/s v/VBP/v 1/CD/1. so/RB/so /,/, we/PRP/we look/VBP/look at/IN/at all/DT/all possible/JJ/possible v/NN/v ?/./? s/NNP/s. so/RB/so /,/, this/DT/this is/VBZ/is column/NN/column 1/CD/1. and/CC/and we/PRP/we know/VBP/know that/IN/that /,/, as/IN/as we/PRP/we go/VBP/go as/RB/as we/PRP/we go/VBP/go down/RB/down this/DT/this is/VBZ/is going/VBG/going to/TO/to be/VB/be non/VBN/non decreasing/-NONE-/decreasing. so/RB/so /,/, we/PRP/we can/MD/can easily/RB/easily find/VB/find the/DT/the largest/JJS/largest v/NNP/v. such/JJ/such that/IN/that /,/, s/NNS/s v/VBP/v 1/CD/1 is/VBZ/is less/JJR/less than/IN/than c/NNP/c. and/CC/and that/IN/that is/VBZ/is the/DT/the value/NN/value /,/, which/WDT/which we/PRP/we will/MD/will call/VB/call v/NN/v star/NNP/star. so/RB/so /,/, that/IN/that is/VBZ/is the/DT/the value/NN/value that/IN/that we/PRP/we are/VBP/are going/VBG/going to/TO/to get/NNP/get. if/IN/if v/NN/v in/IN/in fact/NN/fact /,/, had/VBD/had a/DT/a capacity/NN/capacity of/IN/of c/NNP/c. so/RB/so /,/, if/IN/if you/PRP/you are/VBP/are just/RB/just interested/JJ/interested in/IN/in the/DT/the value/NN/value /,/, then/RB/then we/PRP/we would/MD/would be/VB/be done/VBN/done at/IN/at this/DT/this point/NNP/point. however/RB/however /,/, if/IN/if we/PRP/we wanted/VBD/wanted the/DT/the items/NNS/items to/TO/to be/VB/be returned/VBN/returned as/IN/as well/RB/well /,/, then/RB/then we/PRP/we can/MD/can do/VB/do that/DT/that also/NNP/also. you/PRP/you remember/JJR/remember /,/, how/WRB/how we/PRP/we did/VBD/did that/IN/that for/IN/for the/DT/the older/JJR/older algorithm/NNP/algorithm. we/PRP/we just/RB/just had/VBD/had to/TO/to keep/VB/keep track/NN/track of/IN/of some/DT/some additional/JJ/additional pointer/NN/pointer /,/, some/DT/some additional/JJ/additional data/NNS/data structures/NNP/structures. basically/RB/basically /,/, we/PRP/we can/MD/can do/VB/do that/DT/that as/IN/as well/NNP/well. so/RB/so /,/, corresponding/VBG/corresponding to/TO/to every/DT/every entry/NN/entry of/IN/of the/DT/the table/NN/table /,/, we/PRP/we can/MD/can determine/VB/determine what/WP/what the/DT/the corresponding/VBG/corresponding set/NN/set is/VBZ/is going/VBG/going to/TO/to be/NNP/be. so/RB/so /,/, we/PRP/we can/MD/can also/RB/also return/VB/return the/DT/the set/NN/set of/IN/of items/NNP/items. so/RB/so /,/, how/WRB/how long/JJ/long does/VBZ/does it/PRP/it take/VB/take just/RB/just to/TO/to compute/VB/compute everything/NN/everything from/IN/from here/RB/here /,/, until/IN/until v/NN/v star/NN/star ?/./? well/NNP/well. these/DT/these are/VBP/are all/DT/all /,/, this/DT/this loop/NN/loop will/MD/will take/VB/take time/NN/time o/NN/o of/IN/of n/NNP/n. this/DT/this will/MD/will take/VB/take time/NN/time o/NN/o of/IN/of v/NN/v all/NNP/all. and/CC/and here/RB/here /,/, we/PRP/we have/VBP/have nested/VBN/nested loops/NNP/loops. and/CC/and therefore/RB/therefore /,/, it/PRP/it will/MD/will take/VB/take time/NN/time o/NN/o of/IN/of n/NN/n times/NNS/times v/VBP/v all/NNP/all. in/IN/in fact/NN/fact /,/, if/IN/if you/PRP/you compute/VBP/compute the/DT/the set/NN/set itself/PRP/itself /,/, we/PRP/we will/MD/will have/VB/have to/TO/to keep/VB/keep some/DT/some additional/JJ/additional data/NNS/data structures/NNP/structures. but/CC/but /,/, as/IN/as explained/VBN/explained in/IN/in the/DT/the previous/JJ/previous algorithm/NN/algorithm we/PRP/we can/MD/can use/VB/use exactly/RB/exactly the/DT/the same/JJ/same ideas/NNS/ideas to/TO/to do/VB/do the/DT/the /,/, to/TO/to compute/VB/compute the/DT/the set/NN/set as/IN/as well/RB/well in/IN/in exactly/RB/exactly the/DT/the same/JJ/same amount/NN/amount of/IN/of time/NNP/time. well/RB/well /,/, to/TO/to within/VB/within constant/JJ/constant factors/NNP/factors. so/RB/so /,/, in/IN/in o/NN/o of/IN/of n/NN/n times/NNS/times v/VBP/v all/DT/all time/NN/time /,/, we/PRP/we can/MD/can not/RB/not only/RB/only compute/VB/compute v/NN/v star/NN/star but/CC/but /,/, we/PRP/we can/MD/can also/RB/also compute/VB/compute the/DT/the corresponding/NN/corresponding set/NNP/set. so/RB/so /,/, this/DT/this entire/JJ/entire problem/NN/problem can/MD/can be/VB/be solved/VBN/solved n/NN/n time/NN/time o/NN/o of/IN/of n/NN/n times/NNS/times v/VBP/v all/NNP/all. so/RB/so /,/, that/IN/that finishes/NNS/finishes the/DT/the first/JJ/first task/NN/task that/WDT/that we/PRP/we undertook/NNP/undertook. so/RB/so /,/, we/PRP/we now/RB/now have/VBP/have a/DT/a dynamic/JJ/dynamic programming/NN/programming algorithm/NN/algorithm /,/, which/WDT/which finishes/NNS/finishes in/IN/in time/NN/time n/NN/n times/NNS/times v/VBP/v all/NNP/all. so/RB/so /,/, now/RB/now we/PRP/we come/VBP/come to/TO/to the/DT/the approximate/NN/approximate algorithm/NNP/algorithm. here/RB/here is/VBZ/is the/DT/the important/JJ/important point/NNP/point. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 38/CD/38 /:/: 54/CD/54 /CD/) so/RB/so /,/, here/RB/here we/PRP/we are/VBP/are going/VBG/going to/TO/to be/VB/be allowed/VBN/allowed an/DT/an error/NN/error in/IN/in the/DT/the answer/NNP/answer. we/PRP/we are/VBP/are only/RB/only required/VBN/required to/TO/to get/VB/get within/IN/within 1/CD/1 plus/CC/plus epsilon/NNP/epsilon. so/RB/so /,/, epsilon/IN/epsilon is/VBZ/is sort/NN/sort of/IN/of the/DT/the error/NN/error we/PRP/we are/VBP/are allowed/NNP/allowed. the/DT/the point/NN/point is/VBZ/is that/IN/that /,/, if/IN/if we/PRP/we are/VBP/are allowed/VBN/allowed an/DT/an error/NN/error /,/, then/RB/then it/PRP/it means/VBZ/means that/IN/that we/PRP/we can/MD/can calculate/VB/calculate using/VBG/using low/JJ/low precision/NNP/precision. so/RB/so /,/, basically/RB/basically we/PRP/we are/VBP/are going/VBG/going to/TO/to calculate/VB/calculate using/VBG/using low/JJ/low precision/NNP/precision. and/CC/and that/IN/that is/VBZ/is going/VBG/going to/TO/to allow/VB/allow /,/, us/PRP/us to/TO/to reduce/VB/reduce the/DT/the time/NNP/time. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write a/DT/a new/JJ/new procedure/NN/procedure /,/, a/DT/a new/JJ/new algorithm/NN/algorithm which/WDT/which we/PRP/we are/VBP/are going/VBG/going to/TO/to call/VB/call an/DT/an approximate/NN/approximate case/NN/case approximate/NN/approximate knapsack/NN/knapsack or/CC/or aks/NNP/aks. it/PRP/it is/VBZ/is going/VBG/going to/TO/to take/VB/take the/DT/the same/JJ/same arguments/NNS/arguments as/IN/as before/NNP/before. but/CC/but /,/, it/PRP/it is/VBZ/is also/RB/also going/VBG/going to/TO/to take/VB/take an/DT/an argument/NN/argument called/VBN/called delta/NN/delta /,/, which/WDT/which is/VBZ/is somehow/WRB/somehow going/VBG/going to/TO/to reflect/VB/reflect the/DT/the precision/NNP/precision. and/CC/and we/PRP/we will/MD/will tight/RB/tight up/IN/up to/TO/to this/DT/this epsilon/NN/epsilon later/NN/later on/NNP/on. so/RB/so /,/, delta/NN/delta and/CC/and epsilon/NN/epsilon will/MD/will be/VB/be related/NNP/related. how/WRB/how they/PRP/they will/MD/will be/VB/be related/VBN/related /,/, we/PRP/we will/MD/will specify/VB/specify pretty/RB/pretty soon/NNP/soon. here/RB/here is/VBZ/is the/DT/the algorithm/NNP/algorithm. so/RB/so /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to define/VB/define a/DT/a new/JJ/new array/NN/array v/NN/v prime/NNP/prime. so/RB/so /,/, v/NN/v prime/NN/prime is/VBZ/is simply/RB/simply going/VBG/going to/TO/to be/VB/be v/NN/v divided/VBN/divided by/IN/by delta/NN/delta corresponding/VBG/corresponding elements/NNP/elements. so/RB/so /,/, every/DT/every element/NN/element here/RB/here is/VBZ/is going/VBG/going to/TO/to be/VB/be divided/VBN/divided by/IN/by delta/NNP/delta. and/CC/and we/PRP/we get/VBP/get the/DT/the corresponding/VBG/corresponding element/NN/element of/IN/of here/NNP/here. but/CC/but /,/, we/PRP/we want/VBP/want v/NN/v to/TO/to be/VB/be integer/JJR/integer as/IN/as well/NNP/well. so/RB/so /,/, if/IN/if we/PRP/we get/VBP/get a/DT/a fraction/NN/fraction which/WDT/which we/PRP/we will/MD/will in/IN/in general/JJ/general do/NN/do. we/PRP/we will/MD/will take/VB/take the/DT/the floor/NNP/floor. we/PRP/we will/MD/will take/VB/take the/DT/the largest/JJS/largest integer/NN/integer less/RBR/less than/IN/than or/CC/or the/DT/the floor/NNP/floor. and/CC/and /,/, then/RB/then so/RB/so essentially/RB/essentially we/PRP/we are/VBP/are scaling/VBG/scaling down/IN/down the/DT/the v/NN/v values/NNS/values by/IN/by a/DT/a factor/NN/factor delta/NNP/delta. we/PRP/we will/MD/will call/VB/call ks/NNS/ks using/VBG/using those/DT/those scale/NN/scale down/IN/down values/NNP/values. but/CC/but /,/, the/DT/the scale/NN/scale down/IN/down values/NNS/values are/VBP/are not/RB/not really/RB/really going/VBG/going to/TO/to be/VB/be important/JJ/important for/IN/for the/DT/the final/JJ/final answer/NNP/answer. so/RB/so /,/, for/IN/for the/DT/the final/JJ/final answer/NN/answer we/PRP/we want/VBP/want to/TO/to return/VB/return delta/NN/delta times/NNS/times whatever/RB/whatever /,/, scale/NN/scale down/IN/down values/NNS/values we/PRP/we got/NNP/got. so/RB/so /,/, this/DT/this is/VBZ/is expected/VBN/expected to/TO/to do/VB/do roughly/RB/roughly the/DT/the same/JJ/same job/NNP/job. we/PRP/we scale/VBP/scale the/DT/the values/NNS/values down/IN/down /,/, we/PRP/we got/VBD/got a/DT/a good/JJ/good solution/NNP/solution. and/CC/and /,/, then/RB/then we/PRP/we return/NNP/return. we/PRP/we scale/VBP/scale the/DT/the values/NNS/values up/IN/up /,/, the/DT/the only/JJ/only catch/NN/catch is/VBZ/is that/IN/that here/RB/here we/PRP/we took/VBD/took the/DT/the floor/NNP/floor. so/RB/so /,/, this/DT/this will/MD/will produce/VB/produce some/DT/some error/NNP/error. at/IN/at the/DT/the same/JJ/same time/NN/time sense/NN/sense /,/, the/DT/the answer/NN/answer the/DT/the time/NN/time taken/VBN/taken for/IN/for this/DT/this case/NN/case is/VBZ/is proportional/JJ/proportional to/TO/to the/DT/the second/JJ/second argument/NNP/argument. the/DT/the time/NN/time over/IN/over here/RB/here is/VBZ/is going/VBG/going to/TO/to be/VB/be v/NN/v prime/NN/prime rather/RB/rather than/IN/than v/NNP/v. so/RB/so /,/, that/IN/that is/VBZ/is where/WRB/where we/PRP/we are/VBP/are going/VBG/going to/TO/to say/VB/say on/IN/on time/NN/time /,/, as/IN/as well/NNP/well. so/RB/so /,/, we/PRP/we will/MD/will say/VB/say on/IN/on time/NN/time at/IN/at a/DT/a cost/NN/cost of/IN/of some/DT/some error/NNP/error. so/RB/so /,/, what/WDT/what remains/VBZ/remains now/RB/now is/VBZ/is to/TO/to analyze/VB/analyze all/DT/all these/NNP/these. let/NN/let us/PRP/us say/VBP/say /,/, that/IN/that s/NNS/s denotes/VBZ/denotes the/DT/the set/NN/set returned/VBD/returned by/IN/by our/PRP$/our original/JJ/original ks/NNS/ks call/NNP/call. so/RB/so /,/, where/WRB/where we/PRP/we were/VBD/were using/VBG/using the/DT/the actual/JJ/actual values/NNS/values of/IN/of v/NN/v as/IN/as given/VBN/given ?/./? so/RB/so /,/, this/DT/this is/VBZ/is truly/RB/truly the/DT/the optimal/JJ/optimal set/NN/set which/WDT/which was/VBD/was return/NNP/return. and/CC/and its/PRP$/its value/NN/value x/NN/x is/VBZ/is the/DT/the actual/JJ/actual optimal/JJ/optimal value/NNP/value. and/CC/and i/PRP/i can/MD/can think/VB/think of/IN/of this/DT/this as/IN/as the/DT/the full/JJ/full precision/NN/precision problem/NN/problem or/CC/or the/DT/the full/JJ/full precision/NN/precision answer/NN/answer as/IN/as well/NNP/well. s/NNS/s prime/VBP/prime is/VBZ/is the/DT/the set/NN/set returned/VBD/returned for/IN/for this/DT/this problem/NN/problem this/DT/this by/IN/by /,/, this/DT/this case/NN/case without/IN/without multiplication/NN/multiplication by/IN/by delta/NN/delta for/IN/for the/DT/the minute/NNP/minute. let/NN/let us/PRP/us say/VBP/say its/PRP$/its value/NN/value is/VBZ/is x/NN/x prime/NN/prime and/CC/and this/DT/this is/VBZ/is a/DT/a low/JJ/low precision/NN/precision answer/NNP/answer. so/RB/so /,/, what/WDT/what we/PRP/we now/RB/now need/VBP/need to/TO/to do/VB/do is/VBZ/is to/TO/to relate/VB/relate this/DT/this x/NN/x prime/NN/prime /,/, that/IN/that we/PRP/we so/RB/so x/VBP/x prime/JJ/prime and/CC/and x/NN/x and/CC/and so/RB/so on/NNP/on. so/IN/so /,/, let/VB/let us/PRP/us just/RB/just do/VBP/do that/NNP/that. so/RB/so /,/, i/PRP/i observe/VBP/observe first/JJ/first /,/, that/IN/that x/NN/x prime/NN/prime is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the sets/NNS/sets over/IN/over here/RB/here /,/, value/NN/value of/IN/of the/DT/the set/NN/set over/IN/over here/NNP/here. and/CC/and what/WP/what is/VBZ/is that/NNP/that. so/RB/so /,/, it/PRP/it is/VBZ/is the/DT/the values/NNS/values of/IN/of all/DT/all the/DT/the elements/NNS/elements in/IN/in the/DT/the set/NNP/set. so/RB/so /,/, v/NN/v prime/NN/prime of/IN/of i/PRP/i /,/, because/IN/because this/DT/this time/NN/time we/PRP/we had/VBD/had passed/VBN/passed v/NN/v prime/RB/prime /,/, where/WRB/where i/PRP/i belongs/VBZ/belongs to/TO/to this/DT/this s/NNP/s. now/RB/now /,/, this/DT/this s/NNS/s prime/VBP/prime /,/, now/RB/now here/RB/here is/VBZ/is the/DT/the important/JJ/important point/NNP/point. this/DT/this x/NN/x prime/NN/prime /,/, this/DT/this value/NN/value is/VBZ/is bigger/JJR/bigger than/IN/than this/DT/this expression/NN/expression as/IN/as well/NNP/well. notice/NN/notice that/WDT/that the/DT/the only/JJ/only difference/NN/difference between/IN/between these/DT/these two/CD/two things/NNS/things is/VBZ/is that/IN/that /,/, instead/RB/instead of/IN/of choosing/VBG/choosing s/NNS/s prime/JJ/prime i/PRP/i am/VBP/am choosing/VBG/choosing s/NNP/s. so/RB/so /,/, this/DT/this was/VBD/was the/DT/the optimal/JJ/optimal set/NN/set which/WDT/which was/VBD/was returned/NNP/returned. this/DT/this is/VBZ/is not/RB/not the/DT/the optimal/JJ/optimal set/NN/set but/CC/but /,/, it/PRP/it is/VBZ/is some/DT/some difference/NN/difference set/NNP/set. so/RB/so /,/, what/WDT/what happens/NNS/happens if/IN/if it/PRP/it is/VBZ/is a/DT/a difference/NN/difference set/NN/set ?/./? so/RB/so /,/, its/PRP$/its value/NN/value need/NN/need not/RB/not be/VB/be as/RB/as big/JJ/big as/IN/as the/DT/the value/NN/value of/IN/of this/NNP/this. so/RB/so /,/, in/IN/in other/JJ/other words/NNS/words this/DT/this value/NN/value could/MD/could be/VB/be has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least as/IN/as big/JJ/big as/IN/as this/DT/this value/NNP/value. but/CC/but /,/, notice/NN/notice that/IN/that this/DT/this s/NNS/s was/VBD/was an/DT/an acceptable/JJ/acceptable solution/NN/solution to/TO/to this/NNP/this. and/CC/and in/IN/in going/VBG/going from/IN/from here/RB/here to/TO/to here/RB/here /,/, we/PRP/we have/VBP/have not/RB/not changed/VBN/changed the/DT/the weights/NNP/weights. so/RB/so /,/, this/DT/this set/NN/set is/VBZ/is also/RB/also an/DT/an acceptable/JJ/acceptable solution/NN/solution to/TO/to this/NNP/this. so/RB/so /,/, therefore/IN/therefore we/PRP/we can/MD/can clearly/RB/clearly say/VB/say that/IN/that this/DT/this value/NN/value had/VBD/had better/RBR/better be/VB/be no/RB/no smaller/JJR/smaller than/IN/than this/DT/this value/NNP/value. because/IN/because /,/, this/DT/this is/VBZ/is also/RB/also feasible/JJ/feasible solution/NN/solution to/TO/to the/DT/the v/NN/v prime/NN/prime problem/NN/problem as/IN/as well/NNP/well. so/RB/so /,/, s/NNS/s is/VBZ/is also/RB/also a/DT/a feasible/JJ/feasible solution/NNP/solution. and/CC/and therefore/RB/therefore /,/, we/PRP/we get/VBP/get this/NNP/this. now/RB/now finally/RB/finally /,/, we/PRP/we observe/VBP/observe that/IN/that if/IN/if i/PRP/i take/VBP/take the/DT/the floor/NN/floor of/IN/of any/DT/any number/NN/number /,/, it/PRP/it is/VBZ/is bigger/JJR/bigger than/IN/than that/DT/that number/NN/number minus/VBZ/minus 1/CD/1. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is the/DT/the floor/NN/floor of/IN/of this/NNP/this. and/CC/and therefore/RB/therefore /,/, this/DT/this is/VBZ/is bigger/JJR/bigger than/IN/than this/DT/this minus/NN/minus 1/CD/1. so/RB/so /,/, v/NN/v prime/NN/prime of/IN/of i/PRP/i is/VBZ/is the/DT/the floor/NN/floor of/IN/of this/NNP/this. and/CC/and therefore/RB/therefore /,/, v/NN/v prime/NN/prime of/IN/of i/PRP/i is/VBZ/is bigger/JJR/bigger than/IN/than v/NN/v of/IN/of i/PRP/i upon/IN/upon delta/NN/delta minus/NN/minus 1/CD/1 because/IN/because of/IN/of this/NNP/this. so/RB/so /,/, we/PRP/we have/VBP/have been/VBN/been able/JJ/able to/TO/to relate/VB/relate x/NN/x prime/NN/prime to/TO/to this/DT/this quantity/NN/quantity over/IN/over here/NNP/here. so/RB/so /,/, the/DT/the point/NN/point is/VBZ/is that/IN/that we/PRP/we are/VBP/are getting/VBG/getting towards/NNS/towards the/DT/the optimal/JJ/optimal set/NNP/set. somehow/NN/somehow we/PRP/we want/VBP/want to/TO/to relate/VB/relate it/PRP/it to/TO/to the/DT/the value/NN/value of/IN/of the/DT/the optimal/JJ/optimal solution/NNP/solution. so/RB/so /,/, let/VB/let us/PRP/us now/RB/now ask/VBP/ask what/WP/what is/VBZ/is the/DT/the value/NN/value that/IN/that aks/NNS/aks will/MD/will return/VB/return ?/./? aks/NNS/aks returns/NNS/returns /,/, delta/NN/delta times/NNS/times this/DT/this value/NNP/value. correct/NN/correct /,/, delta/NN/delta times/NNS/times this/DT/this value/NNP/value. this/DT/this is/VBZ/is what/WP/what we/PRP/we do/VBP/do over/IN/over here/NNP/here. and/CC/and what/WP/what is/VBZ/is that/NNP/that. so/RB/so /,/, delta/NN/delta times/NNS/times that/WDT/that value/-NONE-/value. well/RB/well /,/, for/IN/for x/NN/x prime/NN/prime i/PRP/i am/VBP/am going/VBG/going to/TO/to substitute/VB/substitute this/NNP/this. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get this/DT/this /,/, multiplied/VBD/multiplied by/IN/by delta/NNP/delta. so/RB/so /,/, if/IN/if i/PRP/i multiply/RB/multiply by/IN/by delta/NN/delta /,/, this/DT/this delta/NN/delta is/VBZ/is going/VBG/going to/TO/to get/VB/get cancelled/VBN/cancelled out/NNP/out. so/RB/so /,/, i/PRP/i get/VBP/get a/DT/a v/NN/v minus/NN/minus i/NNP/i. and/CC/and instead/RB/instead of/IN/of this/DT/this one/CD/one /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get a/DT/a delta/NN/delta /,/, because/IN/because i/PRP/i multiplied/VBD/multiplied by/IN/by delta/NNP/delta. so/RB/so /,/, that/IN/that explains/NNS/explains this/DT/this part/NNP/part. now/RB/now /,/, what/WDT/what is/VBZ/is summation/NN/summation over/IN/over s/NNS/s of/IN/of v/NN/v i/NNP/i. that/IN/that simply/RB/simply x/NNP/x. so/RB/so /,/, i/PRP/i get/VBP/get an/DT/an x/NN/x over/IN/over here/NNP/here. and/CC/and there/EX/there was/VBD/was a/DT/a minus/NN/minus delta/NN/delta but/CC/but /,/, it/PRP/it was/VBD/was also/RB/also in/IN/in the/DT/the sum/NNP/sum. so/RB/so /,/, my/PRP$/my delta/NN/delta is/VBZ/is a/DT/a constant/NNP/constant. delta/NN/delta does/VBZ/does not/RB/not vary/VB/vary depending/VBG/depending upon/IN/upon /,/, which/WDT/which element/NN/element of/IN/of the/DT/the set/NN/set i/PRP/i am/VBP/am considering/NNP/considering. so/RB/so /,/, i/PRP/i will/MD/will get/VB/get minus/NN/minus delta/NN/delta as/IN/as many/JJ/many times/NNS/times as/IN/as the/DT/the cardinality/NN/cardinality of/IN/of s/NNP/s. so/RB/so /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get x/NN/x minus/NN/minus cardinality/NN/cardinality of/IN/of s/NNS/s times/NNS/times delta/NNP/delta. so/RB/so /,/, here/RB/here is/VBZ/is an/DT/an important/JJ/important observation/NNP/observation. we/PRP/we have/VBP/have proved/VBN/proved /,/, that/IN/that the/DT/the value/NN/value returned/VBD/returned approximately/RB/approximately is/VBZ/is at/IN/at least/JJS/least the/DT/the actual/JJ/actual value/NN/value minus/NN/minus cardinality/NN/cardinality of/IN/of s/NNS/s times/NNS/times delta/NNP/delta. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 45/CD/45 /:/: 55/CD/55 /CD/) so/RB/so /,/, now/RB/now we/PRP/we are/VBP/are ready/RB/ready to/TO/to evaluate/VB/evaluate the/DT/the approximation/NN/approximation ratio/NNP/ratio. what/WP/what is/VBZ/is the/DT/the approximation/NN/approximation ratio/NN/ratio ?/./? so/RB/so /,/, it/PRP/it is/VBZ/is on/IN/on the/DT/the value/NN/value of/IN/of the/DT/the returned/VBN/returned value/NN/value /,/, upon/IN/upon the/DT/the value/NN/value of/IN/of the/DT/the value/NN/value returned/VBD/returned by/IN/by the/DT/the approximate/JJ/approximate solution/NNP/solution. remember/NN/remember /,/, that/IN/that this/DT/this problem/NN/problem is/VBZ/is a/DT/a maximization/NN/maximization problem/NNP/problem. therefore/RB/therefore /,/, the/DT/the optimal/JJ/optimal solution/NN/solution has/VBZ/has the/DT/the largest/JJS/largest possible/JJ/possible value/NNP/value. and/CC/and in/IN/in that/DT/that case/NN/case /,/, we/PRP/we define/VBP/define our/PRP$/our approximation/NN/approximation ratio/NN/ratio as/IN/as the/DT/the optimal/JJ/optimal solution/NN/solution upon/IN/upon the/DT/the approximate/NN/approximate solution/NNP/solution. so/RB/so /,/, that/IN/that is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we are/VBP/are doing/VBG/doing over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we want/VBP/want the/DT/the approximation/NN/approximation ratio/NN/ratio of/IN/of x/NN/x upon/IN/upon y/NNP/y. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 46/CD/46 /:/: 46/CD/46 /CD/) so/RB/so /,/, let/VB/let us/PRP/us collect/VB/collect the/DT/the equality/NN/equality inequalities/NNS/inequalities which/WDT/which we/PRP/we had/VBD/had over/RP/over there/NNP/there. so/RB/so /,/, we/PRP/we had/VBD/had one/CD/one inequality/NN/inequality which/WDT/which is/VBZ/is y/RB/y is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to x/VB/x minus/NN/minus cardinality/NN/cardinality s/NNS/s times/NNS/times delta/NNP/delta. so/RB/so /,/, this/DT/this is/VBZ/is one/CD/one inequality/NNP/inequality. and/CC/and i/PRP/i can/MD/can write/VB/write this/DT/this as/IN/as x/NN/x is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to y/VB/y plus/RB/plus cardinality/NN/cardinality of/IN/of s/NNS/s times/NNS/times delta/NNP/delta. if/IN/if i/PRP/i divide/VBP/divide the/DT/the whole/JJ/whole thing/NN/thing by/IN/by y/NN/y /,/, i/PRP/i am/VBP/am going/VBG/going to/TO/to get/VB/get x/NN/x upon/IN/upon y/NN/y is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 1/CD/1 plus/NNS/plus cardinality/NN/cardinality of/IN/of s/NNS/s times/NNS/times delta/VBP/delta upon/IN/upon y/NNP/y. this/DT/this is/VBZ/is what/WP/what we/PRP/we are/VBP/are going/VBG/going to/TO/to get/NNP/get. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what we/PRP/we finally/RB/finally have/VBP/have over/IN/over here/NNP/here. /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 47/CD/47 /:/: 34/CD/34 /CD/) what/WP/what is/VBZ/is the/DT/the time/NN/time taken/VBN/taken by/IN/by aks/NNS/aks ?/./? so/RB/so /,/, it/PRP/it is/VBZ/is n/VBN/n times/NNS/times v/VBP/v all/DT/all v/NN/v prime/NN/prime all/DT/all or/CC/or v/NN/v prime/NN/prime all/DT/all is/VBZ/is essentially/RB/essentially v/NN/v all/DT/all by/IN/by delta/NNP/delta. so/RB/so /,/, it/PRP/it is/VBZ/is this/DT/this time/NNP/time. so/RB/so /,/, notice/NN/notice that/IN/that the/DT/the time/NN/time over/IN/over the/DT/the exact/JJ/exact evaluation/NN/evaluation has/VBZ/has reduced/VBN/reduced by/IN/by a/DT/a factor/NN/factor delta/NNP/delta. so/RB/so /,/, all/DT/all that/DT/that remains/VBZ/remains now/RB/now is/VBZ/is to/TO/to choose/VB/choose delta/NN/delta carefully/NNP/carefully. now/RB/now /,/, here/RB/here is/VBZ/is the/DT/the clever/NN/clever choice/NNP/choice. we/PRP/we are/VBP/are going/VBG/going to/TO/to choose/VB/choose delta/NN/delta equal/JJ/equal to/TO/to epsilon/VB/epsilon times/NNS/times v/NN/v all/DT/all upon/IN/upon n/NN/n square/NNP/square. so/RB/so /,/, let/VB/let us/PRP/us just/RB/just do/VBP/do that/NNP/that. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 15/CD/15 /CD/) so/IN/so /,/, we/PRP/we choose/VBP/choose delta/NN/delta equal/JJ/equal to/TO/to epsilon/VB/epsilon times/NNS/times v/NN/v all/DT/all upon/IN/upon n/NN/n squared/NNP/squared. so/RB/so /,/, what/WDT/what does/VBZ/does that/IN/that do/VB/do for/IN/for us/PRP/us ?/./? so/RB/so /,/, first/JJ/first of/IN/of all/DT/all this/DT/this was/VBD/was our/PRP$/our approximation/NN/approximation ratio/NNP/ratio. so/RB/so /,/, if/IN/if we/PRP/we substitute/VBP/substitute into/IN/into that/DT/that /,/, what/WP/what do/VBP/do we/PRP/we get/VB/get ?/./? /:/( refer/NN/refer slide/NN/slide time/NN/time /:/: 48/CD/48 /:/: 29/CD/29 /CD/) so/RB/so /,/, we/PRP/we substitute/VBP/substitute delta/NN/delta upon/IN/upon y/NN/y over/IN/over here/NNP/here. so/RB/so /,/, we/PRP/we get/VBP/get epsilon/RB/epsilon v/NN/v all/NNP/all. and/CC/and /,/, then/RB/then this/DT/this v/NN/v of/IN/of the/DT/the y/NN/y remains/VBZ/remains as/IN/as it/PRP/it is/VBZ/is from/IN/from here/NNP/here. and/CC/and we/PRP/we get/VBP/get an/DT/an n/NN/n squared/VBN/squared over/IN/over here/NNP/here. so/RB/so /,/, this/DT/this is/VBZ/is the/DT/the approximation/NN/approximation ratio/NNP/ratio. so/RB/so /,/, what/WDT/what becomes/VBZ/becomes to/TO/to this/DT/this ?/./? what/WP/what becomes/VBZ/becomes of/IN/of this/DT/this /,/, i/PRP/i claim/VBP/claim that/IN/that this/DT/this becomes/VBZ/becomes at/IN/at most/JJS/most 1/CD/1 plus/NNS/plus epsilon/NNP/epsilon. why/WRB/why ?/./? so/RB/so /,/, let/VB/let us/PRP/us see/VB/see that/NNP/that. the/DT/the first/JJ/first observation/NN/observation is/VBZ/is that/IN/that /,/, the/DT/the cardinality/NN/cardinality of/IN/of s/NNS/s which/WDT/which appears/NNS/appears over/IN/over here/RB/here has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than n/NNP/n. after/IN/after all/DT/all /,/, what/WDT/what is/VBZ/is s/NNS/s ?/./? it/PRP/it is/VBZ/is a/DT/a subset/NN/subset of/IN/of n/NN/n element/NNP/element. so/RB/so /,/, its/PRP$/its cardinality/NN/cardinality has/VBZ/has of/IN/of course/NN/course /,/, to/TO/to be/VB/be less/JJR/less than/IN/than n/NNP/n. so/RB/so /,/, that/IN/that is/VBZ/is one/CD/one important/JJ/important observation/NNP/observation. then/RB/then /,/, second/JJ/second v/NN/v all/DT/all is/VBZ/is the/DT/the sum/NN/sum of/IN/of all/DT/all the/DT/the elements/NNP/elements. so/RB/so /,/, clearly/RB/clearly it/PRP/it has/VBZ/has to/TO/to be/VB/be less/JJR/less than/IN/than v/NN/v max/NN/max times/NNS/times n/NNP/n. so/RB/so /,/, if/IN/if v/NN/v max/NN/max denotes/VBZ/denotes the/DT/the maximum/NN/maximum value/NN/value if/IN/if i/PRP/i multiplied/VBD/multiplied by/IN/by n/NN/n /,/, i/PRP/i certainly/RB/certainly should/MD/should get/VB/get something/NN/something which/WDT/which is/VBZ/is bigger/JJR/bigger than/IN/than just/RB/just the/DT/the mere/JJ/mere some/DT/some of/IN/of values/NNP/values. so/RB/so /,/, this/DT/this is/VBZ/is what/WP/what i/PRP/i get/NNP/get. and/CC/and i/PRP/i claim/VBP/claim that/IN/that /,/, v/NN/v max/NN/max can/MD/can not/RB/not be/VB/be bigger/JJR/bigger than/IN/than y/NNP/y. so/RB/so /,/, the/DT/the maximum/NN/maximum item/NN/item had/VBD/had better/RBR/better be/VB/be accommodatable/JJ/accommodatable in/IN/in my/PRP$/my knapsack/NNP/knapsack. otherwise/NN/otherwise /,/, i/PRP/i would/MD/would not/RB/not have/VB/have considered/VBN/considered it/PRP/it in/IN/in my/PRP$/my list/NN/list in/IN/in the/DT/the first/JJ/first place/NNP/place. and/CC/and therefore/RB/therefore /,/, the/DT/the optimal/JJ/optimal solution/NN/solution had/VBD/had better/RBR/better include/JJ/include this/DT/this largest/JJS/largest item/NNP/item. and/CC/and therefore/RB/therefore /,/, v/NN/v max/NN/max times/NNS/times n/VBP/n has/VBZ/has to/TO/to be/VB/be at/IN/at most/JJS/most y/JJ/y times/NNS/times n/NNP/n. so/RB/so /,/, it/PRP/it follows/VBZ/follows from/IN/from this/DT/this /,/, that/IN/that s/NNS/s times/NNS/times v/VBP/v all/DT/all is/VBZ/is less/JJR/less than/IN/than y/NN/y times/NNS/times n/VBP/n squared/NNP/squared. so/RB/so /,/, this/DT/this s/NNS/s times/VBZ/times this/DT/this v/NN/v all/DT/all is/VBZ/is less/JJR/less than/IN/than y/NN/y times/NNS/times n/VBP/n squared/NNP/squared. and/CC/and therefore/RB/therefore /,/, our/PRP$/our approximation/NN/approximation ratio/NN/ratio is/VBZ/is 1/CD/1 plus/RB/plus epsilon/NNP/epsilon. i/PRP/i also/RB/also claim/VBP/claim that/IN/that the/DT/the time/NN/time taken/VBN/taken is/VBZ/is n/VBN/n cube/NN/cube upon/IN/upon epsilon/NNP/epsilon. and/CC/and this/DT/this is/VBZ/is much/RB/much easier/JJR/easier to/TO/to see/NNP/see. so/RB/so /,/, time/NN/time taken/VBN/taken is/VBZ/is n/VBN/n times/NNS/times v/VBP/v all/DT/all upon/IN/upon delta/NNP/delta. so/RB/so /,/, i/PRP/i just/RB/just substitute/JJ/substitute and/CC/and i/PRP/i get/VBP/get instead/RB/instead of/IN/of delta/NN/delta i/PRP/i substitute/VBP/substitute this/NNP/this. so/RB/so /,/, this/DT/this v/NN/v all/DT/all cancels/NNP/cancels. and/CC/and /,/, then/RB/then i/PRP/i get/VBP/get an/DT/an n/NN/n squared/VBN/squared here/NNP/here. so/RB/so /,/, i/PRP/i get/VBP/get n/RB/n cube/VB/cube upon/IN/upon epsilon/NNP/epsilon. so/RB/so /,/, what/WDT/what has/VBZ/has happened/VBN/happened ?/./? we/PRP/we have/VBP/have shown/VBN/shown that/IN/that /,/, our/PRP$/our approximation/NN/approximation ratio/NN/ratio is/VBZ/is 1/CD/1 plus/RB/plus epsilon/NNP/epsilon. so/RB/so /,/, no/DT/no matter/NN/matter what/WP/what epsilon/NN/epsilon you/PRP/you give/VBP/give me/NNP/me. i/PRP/i will/MD/will be/VB/be able/JJ/able to/TO/to get/VB/get this/DT/this time/NN/time /,/, if/IN/if i/PRP/i choose/VBP/choose delta/NN/delta equal/JJ/equal to/TO/to this/DT/this in/IN/in my/PRP$/my procedure/NNP/procedure. and/CC/and furthermore/VB/furthermore /,/, my/PRP$/my time/NN/time taken/VBN/taken is/VBZ/is going/VBG/going to/TO/to be/VB/be n/VBN/n cube/NN/cube upon/IN/upon epsilon/NNP/epsilon. so/RB/so /,/, which/WDT/which is/VBZ/is exactly/RB/exactly what/WP/what we/PRP/we have/VBP/have promised/VBN/promised ?/./? we/PRP/we had/VBD/had promised/VBN/promised to/TO/to get/VB/get an/DT/an approximation/NN/approximation scheme/NN/scheme /,/, in/IN/in which/WDT/which the/DT/the approximation/NN/approximation ratio/NN/ratio is/VBZ/is 1/CD/1 plus/RB/plus epsilon/JJ/epsilon for/IN/for every/DT/every epsilon/NNP/epsilon. and/CC/and that/IN/that we/PRP/we would/MD/would prove/VB/prove that/IN/that /,/, the/DT/the time/NN/time taken/VBN/taken is/VBZ/is polynomial/JJ/polynomial in/IN/in n/NN/n the/DT/the input/NN/input instance/NN/instance length/NN/length and/CC/and 1/CD/1 over/IN/over epsilon/NNP/epsilon. that/IN/that is/VBZ/is what/WP/what we/PRP/we have/VBP/have done/NNP/done. so/RB/so /,/, that/IN/that concludes/NNS/concludes the/DT/the main/JJ/main part/NN/part of/IN/of the/DT/the lecture/NNP/lecture. i/PRP/i just/RB/just want/VBP/want to/TO/to make/VB/make a/DT/a few/JJ/few remarks/NNP/remarks. /NNP/( refer/NN/refer slide/NN/slide time/NN/time /:/: 51/CD/51 /:/: 18/CD/18 /CD/) our/PRP$/our fptas/NNS/fptas had/VBD/had time/NN/time of/IN/of n/NN/n cube/NN/cube upon/IN/upon epsilon/NNP/epsilon. it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to device/NN/device another/DT/another fptas/NN/fptas /,/, with/IN/with a/DT/a different/JJ/different expression/NN/expression n/NN/n log/NN/log 1/CD/1 over/IN/over epsilon/NN/epsilon plus/CC/plus 1/CD/1 over/IN/over epsilon/NN/epsilon to/TO/to the/DT/the 4/CD/4. so/RB/so /,/, it/PRP/it is/VBZ/is very/RB/very likely/JJ/likely that/IN/that in/IN/in practice/NN/practice /,/, this/DT/this approximation/NNP/approximation. in/IN/in many/JJ/many practical/JJ/practical situations/NNS/situations /,/, this/DT/this might/MD/might be/VB/be a/DT/a better/JJR/better algorithm/NN/algorithm than/IN/than this/NNP/this. but/CC/but /,/, this/DT/this is/VBZ/is of/IN/of course/NN/course /,/, more/RBR/more complicated/JJ/complicated as/IN/as well/NNP/well. and/CC/and we/PRP/we are/VBP/are not/RB/not going/VBG/going to/TO/to look/VB/look at/IN/at it/NNP/it. now/RB/now /,/, here/RB/here is/VBZ/is an/DT/an interesting/JJ/interesting fact/NN/fact that/IN/that such/JJ/such as/IN/as /,/, that/IN/that somehow/WRB/somehow that/DT/that knapsack/NN/knapsack problem/NN/problem is/VBZ/is actually/RB/actually among/IN/among the/DT/the easier/JJR/easier np/NN/np complete/JJ/complete problems/NNS/problems /,/, in/IN/in the/DT/the following/JJ/following sense/NNP/sense. knapsack/NN/knapsack problems/NNS/problems /,/, in/IN/in which/WDT/which weights/NNS/weights and/CC/and values/NNS/values are/VBP/are drawn/VBN/drawn uniformly/RB/uniformly at/IN/at random/NN/random from/IN/from the/DT/the interval/NN/interval 0/-NONE-/0 through/IN/through 1/CD/1 /,/, can/MD/can be/VB/be shown/VBN/shown to/TO/to take/VB/take polynomial/JJ/polynomial time/NN/time on/IN/on the/DT/the average/NNP/average. so/RB/so /,/, in/IN/in some/DT/some sense/NN/sense the/DT/the fptas/NNS/fptas result/NN/result says/VBZ/says that/IN/that /,/, it/PRP/it is/VBZ/is easier/JJR/easier to/TO/to approximate/NNP/approximate. and/CC/and this/DT/this says/VBZ/says that/IN/that /,/, it/PRP/it is/VBZ/is also/RB/also easier/JJR/easier on/IN/on the/DT/the average/NN/average in/IN/in fact/NN/fact /,/, its/PRP$/its polynomial/JJ/polynomial in/IN/in the/DT/the average/NNP/average. finally/RB/finally /,/, i/PRP/i just/RB/just want/VBP/want to/TO/to say/VB/say that/IN/that many/JJ/many problems/NNS/problems having/VBG/having pseudo/NN/pseudo polynomial/NN/polynomial time/NN/time algorithms/NNP/algorithms. even/RB/even if/IN/if there/EX/there np/NN/np complete/NN/complete can/MD/can be/VB/be shown/VBN/shown to/TO/to have/VB/have a/DT/a ptas/NN/ptas or/CC/or even/RB/even an/DT/an fptas/NNP/fptas. one/CD/one example/NN/example is/VBZ/is the/DT/the sub/NN/sub another/DT/another example/NN/example is/VBZ/is the/DT/the subset/NN/subset sub/NN/sub problem/NNP/problem. thank/NN/thank you/NNP/you. 