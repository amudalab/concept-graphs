continue our discussion::continue our discussion
concept of hashing::concept of hashing
collision in hashing::collision in hashing
hashing using linked::hashing using linked
method of hashing::method of hashing
method of collision::method of collision
chaining so today::chaining so today
two other method::two other method
collision resolution linear::collision resolution linear
resolution linear probing::resolution linear probing
probing and double::probing and double
discussing what hash::discussing what hash
functions what good::functions what good
good hash function::good hash function
function the function::function the function
quick to compute::quick to compute
distribute the keys::distribute the keys
keys get mapped::keys get mapped
performance of hashing::performance of hashing
linked list good::linked list good
list good hash::list good hash
paradox called birthday::paradox called birthday
thirty five students::thirty five students
students more sitting::students more sitting
compute that probability::compute that probability
sixty five days::sixty five days
thirty five people::thirty five people
fairly high probability::fairly high probability
kind of thing::kind of thing
thing is happening::thing is happening
right your days::right your days
key and put::key and put
keys were end::keys were end
slot birthday paradox::slot birthday paradox
paradox no matter::paradox no matter
matter what kind::matter what kind
kind of hash::kind of hash
notion this problem::notion this problem
deal with non::deal with non
non integer keys::non integer keys
keys in fact::keys in fact
keys were telephone::keys were telephone
return the telephone::return the telephone
numbers this manner::numbers this manner
integer we doesn::integer we doesn
drop this hyphen::drop this hyphen
techniques of converting::techniques of converting
converting non integers::converting non integers
non integers keys::non integers keys
non integer key::non integer key
last two digits::last two digits
hash function value::hash function value
converting non integer::converting non integer
keys into integer::keys into integer
hash code map::hash code map
make a hash::make a hash
function so recall::function so recall
recall a hash::recall a hash
basically a mapping::basically a mapping
mapping of keys::mapping of keys
table your hash::table your hash
code map maps::code map maps
maps the key::maps the key
key to integer::key to integer
bring this integer::bring this integer
minus one right::minus one right
call compression map::call compression map
kind of functions::kind of functions
requirement of hash::requirement of hash
key gets map::key gets map
map an key::map an key
location you understand::location you understand
mapped to location::mapped to location
maps it location::maps it location
location thirteen right::location thirteen right
kind of randomization::kind of randomization
map equal keys::map equal keys
minimize the probability::minimize the probability
probability of collisions::probability of collisions
collisions so lets::collisions so lets
popular hash code::popular hash code
hash code maps::hash code maps
code maps recall::code maps recall
recall the hash::recall the hash
map the part::map the part
part which converts::part which converts
converts your key::converts your key
pat and interpret::pat and interpret
numeric type thirty::numeric type thirty
thirty two bits::thirty two bits
interpret the bits::interpret the bits
numbers a longer::numbers a longer
longer double real::longer double real
double real number::double real number
number which takes::number which takes
chunks of thirty::chunks of thirty
bits and add::bits and add
first four bytes::first four bytes
bytes and add::bytes and add
eventually some thirty::eventually some thirty
thirty two bit::thirty two bit
kind of tree::kind of tree
compute the hash::compute the hash
lets say ankur::lets say ankur
compute the value::compute the value
number of collisions::number of collisions
two different names::two different names
kind of things::kind of things
converts strings character::converts strings character
strings character strings::strings character strings
whats called polynomial::whats called polynomial
polynomial whose coefficient::polynomial whose coefficient
evaluate this polynomial::evaluate this polynomial
evaluation that value::evaluation that value
right that integer::right that integer
map to map::map to map
code map weren::code map weren
convert a string::convert a string
non integer data::non integer data
right so evaluate::right so evaluate
stuff so people::stuff so people
people have looked::people have looked
thirty three thirty::thirty three thirty
thirty seven thirty::thirty seven thirty
lets say english::lets say english
fifty thousand words::fifty thousand words
technique to convert::technique to convert
convert your words::convert your words
observed experimental right::observed experimental right
code map lets::code map lets
table now suppose::table now suppose
size thousand twenty::size thousand twenty
choose your right::choose your right
taking some integer::taking some integer
essentially that means::essentially that means
last ten bits::last ten bits
write the integer::write the integer
taking the last::taking the last
last two bits::last two bits
lets say mod::lets say mod
taking some small::taking some small
bits the last::bits the last
ten bits basing::ten bits basing
basing the hash::basing the hash
kind of compression::kind of compression
map this simple::map this simple
simple compression map::simple compression map
two in fact::two in fact
fact it helps::fact it helps
number to give::number to give
two thousand strings::two thousand strings
put in hash::put in hash
pick the size::pick the size
hash table lets::hash table lets
threes roughly thousand::threes roughly thousand
strings per location::strings per location
size of hash::size of hash
hash table close::hash table close
kind of effect::kind of effect
effect its start::effect its start
preferably a prime::preferably a prime
things dont work::things dont work
lot of collisions::lot of collisions
right and lot::right and lot
follow perhaps improve::follow perhaps improve
kinds of compression::kinds of compression
essentially first read::essentially first read
suppose your key::suppose your key
max so recall::max so recall
recall now assuming::recall now assuming
keys are integers::keys are integers
map to convert::map to convert
integer right keys::integer right keys
max so first::max so first
multiply each key::multiply each key
first we converted::first we converted
multiply that number::multiply that number
function which means::function which means
means the round::means the round
popular compression map::popular compression map
doing such things::doing such things
lot of jugglery::lot of jugglery
smaller fraction part::smaller fraction part
evident some evident::evident some evident
root five minus::root five minus
book by donald::book by donald
knuth on sorting::knuth on sorting
sorting and searching::sorting and searching
searching which covers::searching which covers
covers hash functions::covers hash functions
add and divide::add and divide
two fixed numbers::two fixed numbers
kind of problem::kind of problem
right in fact::right in fact
avoid any kind::avoid any kind
kind of patterns::kind of patterns
random number generator::random number generator
right as part::right as part
random number random::random number random
number random number::number random number
technique called linear::technique called linear
technique linear congruential::technique linear congruential
linear congruential generators::linear congruential generators
instance your random::instance your random
initial k value::initial k value
compute this quantity::compute this quantity
give random number::give random number
value you return::value you return
return right whichever::return right whichever
right whichever last::right whichever last
whichever last random::whichever last random
last random number::last random number
generate random number::generate random number
pseudo random number::pseudo random number
technique called universal::technique called universal
hash function function::hash function function
set of keys::set of keys
function get mapped::function get mapped
make life difficult::make life difficult
spend a lot::spend a lot
doing insert delete::doing insert delete
insert delete searching::insert delete searching
delete searching right::delete searching right
bunch of hash::bunch of hash
hash function lets::hash function lets
lets say fifteen::lets say fifteen
fifteen different hash::fifteen different hash
pick one hash::pick one hash
function to put::function to put
put the keys::put the keys
function for inserting::function for inserting
keys for doing::keys for doing
doing the search::doing the search
search for doing::search for doing
doing the relation::doing the relation
run of hash::run of hash
hash table implementation::hash table implementation
change the hash::change the hash
hash function midway::hash function midway
invoke this program::invoke this program
randomly my set::randomly my set
set of hash::set of hash
doing my implementation::doing my implementation
correction of hash::correction of hash
collection of hash::collection of hash
keys the probability::keys the probability
algorithms third year::algorithms third year
function is concerned::function is concerned
class to resolve::class to resolve
put a linked::put a linked
search and delete::search and delete
delete by doing::delete by doing
doing that operation::doing that operation
two other techniques::two other techniques
today which fall::today which fall
class of open::class of open
point so open::point so open
open addressing differs::open addressing differs
differs from chaining::differs from chaining
fact in open::fact in open
addressing so recalling::addressing so recalling
recalling that chaining::recalling that chaining
elements actually stored::elements actually stored
verse a reference::verse a reference
right the table::right the table
storing the pointers::storing the pointers
hashing could map::hashing could map
number of elements::number of elements
elements as larger::elements as larger
part of linked::part of linked
entry of table::entry of table
null which means::null which means
means that doesn::means that doesn
searching or inserting::searching or inserting
inserting or deleting::inserting or deleting
probe the elements::probe the elements
modifying the hash::modifying the hash
function little bit::function little bit
key are bit::key are bit
function in mapping::function in mapping
mapping the keys::mapping the keys
set for instance::set for instance
instance the case::instance the case
case of chaining::case of chaining
parameter which specifies::parameter which specifies
key which probe::key which probe
insert a key::insert a key
insert the key::insert the key
lets say zeroth::lets say zeroth
hash function obtain::hash function obtain
location is occupied::location is occupied
parameter the first::parameter the first
location hash table::location hash table
find a empty::find a empty
right at depending::right at depending
hash function decide::hash function decide
decide will give::decide will give
sequence of slots::sequence of slots
collections of keys::collections of keys
number of keys::number of keys
element not number::element not number
table the number::table the number
hundred elements hundred::hundred elements hundred
elements hundred students::elements hundred students
location of hash::location of hash
technique under open::technique under open
insert i compute::insert i compute
table this place::table this place
place is occupied::place is occupied
location so probe::location so probe
probe is incremented::probe is incremented
find an empty::find an empty
put the element::put the element
principle the current::principle the current
mod m doing::mod m doing
start the beginning::start the beginning
retrieve the keys::retrieve the keys
right but understand::right but understand
understand this insert::understand this insert
insert you compute::insert you compute
value of hash::value of hash
location that location::location that location
element already sitting::element already sitting
find the empty::find the empty
track of references::track of references
kind of spaces::kind of spaces
slower than chaining::slower than chaining
thirteen very simple::thirteen very simple
simple hash function::simple hash function
function my keys::function my keys
insert these keys::insert these keys
table right thirteen::table right thirteen
location five right::location five right
right no problem::right no problem
point the table::point the table
table was empty::table was empty
forty one forty::forty one forty
forty one mod::forty one mod
two so forty::two so forty
absolutely no problem::absolutely no problem
twenty two twenty::twenty two twenty
twenty two mod::twenty two mod
forty four forty::forty four forty
forty four mod::forty four mod
four mod thirteen::four mod thirteen
four this location::four this location
location already occupied::location already occupied
occupied by eighteen::occupied by eighteen
eighteen so forty::eighteen so forty
location this location::location this location
location is empty::location is empty
fifty nine fifty::fifty nine fifty
fifty nine mod::fifty nine mod
thirty two thirty::thirty two thirty
thirty two mod::thirty two mod
four is sitting::four is sitting
two here thirty::two here thirty
thirty one thirty::thirty one thirty
thirty one mod::thirty one mod
occupied with eighteen::occupied with eighteen
occupied by forty::occupied by forty
occupied by fifty::occupied by fifty
occupied by thirty::occupied by thirty
occupied by twenty::occupied by twenty
thirty one seventy::thirty one seventy
seventy three seventy::seventy three seventy
seventy three mod::seventy three mod
check for seventy::check for seventy
occupied this location::occupied this location
right very simple::right very simple
elements are sitting::elements are sitting
forget the part::forget the part
location two eighteen::location two eighteen
eighteen at location::eighteen at location
location five forty::location five forty
four at location::four at location
tend to aggregate::tend to aggregate
aggregate from clusters::aggregate from clusters
locations while searching::locations while searching
inserted those elements::inserted those elements
searching for key::searching for key
compute k mod::compute k mod
find the element::find the element
reach an empty::reach an empty
location then means::location then means
means that element::means that element
checked right lets::checked right lets
lets see suppose::lets see suppose
searching for thirty::searching for thirty
thirty three mod::thirty three mod
find this location::find this location
empty this means::empty this means
search an unsuccessful::search an unsuccessful
reach a empty::reach a empty
successful search search::successful search search
search will terminate::search will terminate
two so first::two so first
search for thirty::search for thirty
thirty two right::thirty two right
two right thirty::two right thirty
two mod twenty::two mod twenty
thirty two found::thirty two found
found in location::found in location
location eight suppose::location eight suppose
suppose i removed::suppose i removed
setting an location::setting an location
null i remove::null i remove
thirty one whats::thirty one whats
happen thirtyone mod::happen thirtyone mod
thirtyone mod thirteen::thirtyone mod thirteen
location to null::location to null
mark this location::mark this location
declare the thirty::declare the thirty
setting this location::setting this location
praise a tombstone::praise a tombstone
marker any marker::marker any marker
set up bit::set up bit
location which specifies::location which specifies
location was occupied::location was occupied
encounter a tombstone::encounter a tombstone
tombstone we don::tombstone we don
search is ended::search is ended
present we continue::present we continue
tombstone here continue::tombstone here continue
location or thirty::location or thirty
tombstone it ignores::tombstone it ignores
ignores it continues::ignores it continues
encounters a tombstone::encounters a tombstone
kind of reclaim::kind of reclaim
reclaim this space::reclaim this space
search the performance::search the performance
lot of tombstones::lot of tombstones
kind of technique::kind of technique
grow the table::grow the table
growing the table::growing the table
create empty slots::create empty slots
performance will increase::performance will increase
open addressing techniques::open addressing techniques
techniques we looked::techniques we looked
looked at linear::looked at linear
linear probing linear::linear probing linear
probing linear probing::probing linear probing
function next location::function next location
two hash functions::two hash functions
piece of code::piece of code
code so probe::code so probe
probe is set::probe is set
offset is set::offset is set
probe the locations::probe the locations
probe plus offset::probe plus offset
set to probe::set to probe
offset which means::offset which means
offset plus offset::offset plus offset
offset whatever probe::offset whatever probe
offset is determining::offset is determining
probing for linear::probing for linear
probing your offset::probing your offset
jump one location::jump one location
jump two locations::jump two locations
offset this case::offset this case
case is determined::case is determined
double hashing works::double hashing works
technique will ensure::technique will ensure
insert the element::insert the element
table where empty::table where empty
divides the size::divides the size
offset never divided::offset never divided
happen in fact::happen in fact
arguments various cases::arguments various cases
advantages disadvantages linear::advantages disadvantages linear
disadvantages linear probing::disadvantages linear probing
step one step::step one step
makes the performs::makes the performs
thirteen the elements::thirteen the elements
table size twelve::table size twelve
size twelve size::size twelve size
minus k mod::minus k mod
make any sense::make any sense
place were occupied::place were occupied
insert the first::insert the first
first element eighteen::first element eighteen
element eighteen eighteen::element eighteen eighteen
eighteen eighteen mod::eighteen eighteen mod
eighteen mod thirteen::eighteen mod thirteen
location nine forty::location nine forty
two of forty::two of forty
four eight minus::four eight minus
mod eight forty::mod eight forty
empty so forty::empty so forty
location zero fifty::location zero fifty
location six thirty::location six thirty
two of thirty::two of thirty
two of seventy::two of seventy
sixteen sixteen mod::sixteen sixteen mod
technique of double::technique of double
hashing so recall::hashing so recall
assuming the load::assuming the load
factor the number::factor the number
inside the hash::inside the hash
assumptions you made::assumptions you made
class that everytime::class that everytime
everytime a probe::everytime a probe
element the hash::element the hash
table uniformly random::table uniformly random
first time probe::first time probe
random element random::random element random
element random location::element random location
put the table::put the table
pick a random::pick a random
location in hash::location in hash
analyze so alpha::analyze so alpha
minus alpha fraction::minus alpha fraction
fraction of table::fraction of table
table is empty::table is empty
right if alpha::right if alpha
half that means::half that means
means the number::means the number
half which means::half which means
table is occupied::table is occupied
half the table::half the table
empty then suppose::empty then suppose
suppose my search::suppose my search
unsuccessful search means::unsuccessful search means
unsuccessful search stop::unsuccessful search stop
tenth of table::tenth of table
empty yeah ninety::empty yeah ninety
table is full::table is full
full one tenth::full one tenth
empty so expected::empty so expected
number of probes::number of probes
location one tenth::location one tenth
tenth one tenth::tenth one tenth
trails ill hit::trails ill hit
hit a empty::hit a empty
alpha minus probe::alpha minus probe
minus probe probes::minus probe probes
probes are required::probes are required
required before hit::required before hit
hit an empty::hit an empty
location and declared::location and declared
numbers of probes::numbers of probes
required for unsuccessful::required for unsuccessful
unsuccessful search lets::unsuccessful search lets
successful searches successful::successful searches successful
searches successful search::searches successful search
suppose i search::suppose i search
average right lets::average right lets
recall from last::recall from last
class the average::class the average
required to insert::required to insert
insert those elements::insert those elements
inserting those elements::inserting those elements
probes required insert::probes required insert
insert all elements::insert all elements
table so lets::table so lets
inserting an element::inserting an element
suppose might table::suppose might table
elements right size::elements right size
first m lets::first m lets
lets say assume::lets say assume
talking of inserting::talking of inserting
inserting the first::inserting the first
first fifty elements::first fifty elements
elements right suppose::elements right suppose
forty eight forty::forty eight forty
forty nine elements::forty nine elements
hit a full::hit a full
insert this fiftieth::insert this fiftieth
forty nine element::forty nine element
average even required::average even required
required for inserting::required for inserting
inserting these elements::inserting these elements
show the rest::show the rest
element just assume::element just assume
insert this last::insert this last
full three fourth::full three fourth
fourth of table::fourth of table
roughly already full::roughly already full
quarter of table::quarter of table
location to put::location to put
put this element::put this element
roughly four probes::roughly four probes
praises an upper::praises an upper
probes to insert::probes to insert
total numbers required::total numbers required
table was full::table was full
full one quarter::full one quarter
recall from previous::recall from previous
i9s the total::i9s the total
element what part::element what part
empty what fraction::empty what fraction
half after inserted::half after inserted
minus i fraction::minus i fraction
insert the elements::insert the elements
elements n times::elements n times
factor of alpha::factor of alpha
inserted enough element::inserted enough element
factor is alpha::factor is alpha
alpha one minus::alpha one minus
quantity minus minus::quantity minus minus
minus minus log::minus minus log
alpha fraction empty::alpha fraction empty
minus alpha times::minus alpha times
fraction is empty::fraction is empty
fraction was empty::fraction was empty
empty are required::empty are required
point one minus::point one minus
numbers of required::numbers of required
probes required average::probes required average
average was divided::average was divided
alpha this quantity::alpha this quantity
unsuccessful and successful::unsuccessful and successful
recall right probing::recall right probing
times of log::times of log
log one power::log one power
power one minus::power one minus
stop the discussion::stop the discussion
discussion on hashing::discussion on hashing
discussion hashing::discussion hashing
last class::last class
hash table::hash table
resolve collision::resolve collision
linked list::linked list
collision resolution::collision resolution
resolution linear::resolution linear
linear probing::linear probing
double hashing::double hashing
hash functions::hash functions
good hash::good hash
hash function::hash function
previous class::previous class
famous paradox::famous paradox
birthday paradox::birthday paradox
high probability::high probability
days birthday::days birthday
small probability::small probability
year correspond::year correspond
slot birthday::slot birthday
non integer::non integer
integer keys::integer keys
telephone numbers::telephone numbers
converting non::converting non
non integers::non integers
integers keys::integers keys
entry numbers::entry numbers
integer key::integer key
function value::function value
hash code::hash code
code map::code map
compression map::compression map
map maps::map maps
first convert::first convert
arbitrary range::arbitrary range
call compression::call compression
index location::index location
thirteen right::thirteen right
randomization happening::randomization happening
equal keys::equal keys
popular hash::popular hash
code maps::code maps
maps recall::maps recall
bit pat::bit pat
integer right::integer right
numeric type::numeric type
type thirty::type thirty
real numbers::real numbers
double real::double real
real number::real number
eighteen chunks::eighteen chunks
string suppose::string suppose
ascii code::ascii code
bad strategy::bad strategy
english dictionary::english dictionary
ascii value::ascii value
great strategy::great strategy
converts strings::converts strings
strings character::strings character
character strings::character strings
settings whats::settings whats
polynomial accumulation::polynomial accumulation
first character::first character
coefficient things::coefficient things
large range::large range
map weren::map weren
integer data::integer data
integer value::integer value
experimental stuff::experimental stuff
fifty thousand::fifty thousand
thousand words::thousand words
experimental right::experimental right
experimental study::experimental study
map lets::map lets
small range::small range
natural thing::natural thing
size lets::size lets
size thousand::size thousand
thousand twenty::thousand twenty
integer mod::integer mod
last ten::last ten
ten bits::ten bits
binary representation::binary representation
taking mod::taking mod
last bit::last bit
taking lets::taking lets
small set::small set
bits basing::bits basing
simple compression::simple compression
prime number::prime number
table lets::table lets
important thing::important thing
table close::table close
start happening::start happening
key mod::key mod
things dont::things dont
dont work::dont work
collisions happening::collisions happening
generic principles::generic principles
improve performance::improve performance
compression maps::compression maps
first read::first read
first covert::first covert
fractional part::fractional part
key right::key right
fractional number::fractional number
floor function::floor function
nearest integer::nearest integer
popular compression::popular compression
done lot::done lot
small fraction::small fraction
smaller fraction::smaller fraction
fraction part::fraction part
good right::good right
fibonacci hashing::fibonacci hashing
significant theory::significant theory
nice book::nice book
donald knuth::donald knuth
covers hash::covers hash
multiply add::multiply add
key multiplied::key multiplied
fixed numbers::fixed numbers
compute modulo::compute modulo
first technique::first technique
patterns happening::patterns happening
random number::random number
number generator::number generator
function random::function random
number random::number random
technique linear::technique linear
linear congruential::linear congruential
congruential generators::congruential generators
seed seed::seed seed
starting value::starting value
give random::give random
last value::last value
whichever last::whichever last
last random::last random
generate random::generate random
pseudo random::pseudo random
universal hashing::universal hashing
function function::function function
make life::make life
life difficult::life difficult
doing insert::doing insert
insert delete::insert delete
delete searching::delete searching
searching right::searching right
function lets::function lets
process start::process start
table right::table right
fro run::fro run
table implementation::table implementation
function midway::function midway
bad set::bad set
resolve collisions::resolve collisions
insert search::insert search
techniques today::techniques today
general class::general class
open addressing::open addressing
addressing differs::addressing differs
key fact::key fact
starting element::starting element
first element::first element
map elements::map elements
chaining technique::chaining technique
null right::null right
suitable manner::suitable manner
keys set::keys set
specifies key::specifies key
first probe::first probe
key key::key key
zeroth probe::zeroth probe
function obtain::function obtain
first parameter::first parameter
location hash::location hash
empty location::empty location
function decide::function decide
determining sequence::determining sequence
keys soory::keys soory
hundred elements::hundred elements
elements hundred::elements hundred
hundred students::hundred students
first place::first place
element sitting::element sitting
guiding principle::guiding principle
current location::current location
reach end::reach end
compute value::compute value
specific location::specific location
spaces wasted::spaces wasted
mod thirteen::mod thirteen
simple hash::simple hash
table location::table location
eighteen mod::eighteen mod
problem forty::problem forty
problem twenty::problem twenty
put forty::put forty
location fifty::location fifty
put thirty::put thirty
location occupied::location occupied
put seventy::put seventy
simple idea::simple idea
elements forty::elements forty
elements tend::elements tend
search lets::search lets
elements suppose::elements suppose
first location::first location
element present::element present
right lets::right lets
means thirty::means thirty
unsuccessful search::unsuccessful search
search terminates::search terminates
successful search::successful search
search search::search search
delete thirty::delete thirty
right thirty::right thirty
mod twenty::mod twenty
remove thirty::remove thirty
location null::location null
good idea::good idea
right suppose::right suppose
happen thirtyone::happen thirtyone
thirtyone mod::thirtyone mod
problem coming::problem coming
full location::full location
location empty::location empty
location thirty::location thirty
null location::null location
insert encounters::insert encounters
empty locations::empty locations
search degrades::search degrades
elements put::elements put
empty slots::empty slots
addressing techniques::addressing techniques
probing linear::probing linear
first position::first position
offset probe::offset probe
offset right::offset right
hashing works::hashing works
units offset::units offset
starting location::starting location
offset divides::offset divides
small fact::small fact
rough arguments::rough arguments
advantages disadvantages::advantages disadvantages
disadvantages linear::disadvantages linear
distributes keys::distributes keys
found clusters::found clusters
thirteen steps::thirteen steps
table size::table size
size twelve::size twelve
twelve size::twelve size
lets insert::lets insert
element eighteen::element eighteen
eighteen eighteen::eighteen eighteen
minus forty::minus forty
occupied thirty::occupied thirty
recall assume::recall assume
load factor::load factor
elements divided::elements divided
sit inside::sit inside
random element::random element
uniformly random::uniformly random
element random::element random
random location::random location
table alpha::table alpha
minus alpha::minus alpha
alpha fraction::alpha fraction
empty right::empty right
search means::search means
search stop::search stop
ninety percent::ninety percent
ten percent::ten percent
expected number::expected number
probes required::probes required
ten location::ten location
tenth fraction::tenth fraction
tenths probability::tenths probability
occupied location::occupied location
excepted sense::excepted sense
alpha minus::alpha minus
minus probe::minus probe
probe probes::probe probes
excepted numbers::excepted numbers
average number::average number
successful searches::successful searches
required suppose::required suppose
average right::average right
required insert::required insert
empty table::empty table
first fifty::first fifty
fifty elements::fifty elements
inserted forty::inserted forty
excepted number::excepted number
fiftieth element::fiftieth element
first forty::first forty
total number::total number
last element::last element
upper bound::upper bound
total numbers::total numbers
numbers required::numbers required
average require::average require
total require::total require
last number::last number
table empty::table empty
table table::table table
quantity minus::quantity minus
minus minus::minus minus
minus log::minus log
fraction empty::fraction empty
alpha times::alpha times
number smaller::number smaller
average numbers::average numbers
successful probes::successful probes
alpha recall::alpha recall
today::today
continue::continue
discussion::discussion
hashing::hashing
last::last
class::class
hash::hash
table::table
concept::concept
shown::shown
resolve::resolve
collision::collision
linked::linked
list::list
method::method
chaining::chaining
two::two
resolution::resolution
linear::linear
probing::probing
double::double
spend::spend
discussing::discussing
functions::functions
good::good
function::function
likeso::likeso
computed::computed
quickly::quickly
quick::quick
compute::compute
previous::previous
distribute::distribute
keys::keys
uniformly::uniformly
right::right
happen::happen
mapped::mapped
location::location
performance::performance
worse::worse
rare::rare
famous::famous
paradox::paradox
birthday::birthday
thirty::thirty
students::students
sitting::sitting
high::high
probability::probability
birthdays::birthdays
sixty::sixty
days::days
year::year
small::small
case::case
people::people
close::close
fairly::fairly
kind::kind
thing::thing
happening::happening
correspond::correspond
slots::slots
key::key
put::put
randomly::randomly
end::end
slot::slot
matter::matter
collisions::collisions
notion::notion
problem::problem
deal::deal
non::non
integer::integer
fact::fact
telephone::telephone
numbers::numbers
return::return
manner::manner
treated::treated
doesn::doesn
drop::drop
hyphen::hyphen
thought::thought
techniques::techniques
converting::converting
integers::integers
entry::entry
coming::coming
convert::convert
digits::digits
value::value
parts::parts
code::code
map::map
compression::compression
make::make
recall::recall
basically::basically
mapping::mapping
maps::maps
first::first
arbitrary::arbitrary
range::range
bring::bring
size::size
minus::minus
index::index
part::part
call::call
things::things
requirement::requirement
understand::understand
thousand::thousand
four::four
ten::ten
thirteen::thirteen
randomization::randomization
insert::insert
retrieve::retrieve
search::search
equal::equal
indices::indices
minimize::minimize
lets::lets
popular::popular
converts::converts
bit::bit
pat::pat
interpret::interpret
numeric::numeric
type::type
bits::bits
number::number
real::real
longer::longer
takes::takes
bytes::bytes
add::add
eighteen::eighteen
chunks::chunks
eventually::eventually
working::working
tree::tree
string::string
suppose::suppose
ankur::ankur
converted::converted
possibility::possibility
ascii::ascii
interpreted::interpreted
bad::bad
strategy::strategy
noise::noise
sum::sum
names::names
student::student
order::order
making::making
words::words
english::english
dictionary::dictionary
obtain::obtain
letters::letters
summing::summing
avoid::avoid
sir::sir
replaced::replaced
reasons::reasons
great::great
specially::specially
strings::strings
character::character
technique::technique
settings::settings
whats::whats
polynomial::polynomial
accumulation::accumulation
coefficient::coefficient
evaluate::evaluate
evaluation::evaluation
large::large
weren::weren
data::data
setting::setting
experimental::experimental
stuff::stuff
looked::looked
found::found
work::work
forty::forty
values::values
fifty::fifty
query::query
observed::observed
study::study
favour::favour
natural::natural
mod::mod
give::give
choose::choose
twenty::twenty
imply::imply
taking::taking
essentially::essentially
means::means
write::write
binary::binary
representation::representation
doing::doing
forgetting::forgetting
set::set
basing::basing
simple::simple
pick::pick
power::power
helps::helps
prime::prime
hundred::hundred
assure::assure
average::average
threes::threes
roughly::roughly
length::length
important::important
effect::effect
start::start
mind::mind
preferably::preferably
dont::dont
lot::lot
depends::depends
generic::generic
principles::principles
follow::follow
improve::improve
instances::instances
experiment::experiment
necessarily::necessarily
kinds::kinds
read::read
out::out
max::max
assuming::assuming
integral::integral
covert::covert
multiply::multiply
fractional::fractional
corresponds::corresponds
consequence::consequence
floor::floor
round::round
nearest::nearest
repeat::repeat
multiplied::multiplied
done::done
instance::instance
directly::directly
clear::clear
divide::divide
choice::choice
critical::critical
jugglery::jugglery
fraction::fraction
smaller::smaller
doubt::doubt
evident::evident
root::root
turns::turns
fibonacci::fibonacci
significant::significant
theory::theory
nice::nice
book::book
donald::donald
knuth::knuth
sorting::sorting
searching::searching
covers::covers
detail::detail
fixed::fixed
modulo::modulo
multiplying::multiplying
adding::adding
multiple::multiple
patterns::patterns
random::random
generator::generator
programming::programming
congruential::congruential
based::based
generators::generators
seed::seed
starting::starting
user::user
defined::defined
provide::provide
system::system
point::point
information::information
initial::initial
quantity::quantity
whichever::whichever
generate::generate
pseudo::pseudo
figure::figure
universal::universal
briefly::briefly
idea::idea
locations::locations
adverse::adverse
life::life
difficult::difficult
picking::picking
delete::delete
solution::solution
don::don
bunch::bunch
fifteen::fifteen
process::process
inserting::inserting
relation::relation
fro::fro
run::run
implementation::implementation
change::change
midway::midway
invoke::invoke
program::program
picked::picked
results::results
correction::correction
collection::collection
algorithms::algorithms
concerned::concerned
chain::chain
operation::operation
fall::fall
general::general
open::open
addressing::addressing
questions::questions
differs::differs
recalling::recalling
elements::elements
stored::stored
verse::verse
reference::reference
element::element
storing::storing
pointers::pointers
find::find
reside::reside
larger::larger
residing::residing
nodes::nodes
connected::connected
null::null
deleting::deleting
probe::probe
suitable::suitable
modifying::modifying
universe::universe
earlier::earlier
parameter::parameter
specifies::specifies
zeroth::zeroth
occupied::occupied
empty::empty
depending::depending
decide::decide
determining::determining
sequence::sequence
examined::examined
question::question
collections::collections
require::require
soory::soory
correct::correct
create::create
place::place
incremented::incremented
check::check
increment::increment
guiding::guiding
principle::principle
current::current
rap::rap
reach::reach
beginning::beginning
short::short
specific::specific
advantage::advantage
memory::memory
track::track
references::references
node::node
spaces::spaces
wasted::wasted
slightly::slightly
slower::slower
show::show
twelve::twelve
absolutely::absolutely
hindi::hindi
seventy::seventy
forget::forget
position::position
shows::shows
tend::tend
aggregate::aggregate
clusters::clusters
inserted::inserted
present::present
checked::checked
thirtyone::thirtyone
unsuccessful::unsuccessful
terminates::terminates
successful::successful
terminate::terminate
picture::picture
remove::remove
removed::removed
didn::didn
full::full
differently::differently
mark::mark
declare::declare
wrong::wrong
praise::praise
tombstone::tombstone
marker::marker
encounter::encounter
ended::ended
ignores::ignores
continues::continues
encounters::encounters
reclaim::reclaim
space::space
tombstones::tombstones
degrades::degrades
rehash::rehash
back::back
grow::grow
growing::growing
markers::markers
increase::increase
offset::offset
piece::piece
distance::distance
advance::advance
jump::jump
determined::determined
works::works
ensure::ensure
units::units
finding::finding
cycle::cycle
divides::divides
divided::divided
proof::proof
rough::rough
arguments::arguments
cases::cases
prove::prove
formally::formally
advantages::advantages
disadvantages::disadvantages
distributes::distributes
step::step
steps::steps
makes::makes
performs::performs
lies::lies
sense::sense
trouble::trouble
continuing::continuing
sixteen::sixteen
distributed::distributed
analysis::analysis
assume::assume
load::load
factor::factor
talking::talking
scheme::scheme
sit::sit
inside::inside
similar::similar
assumptions::assumptions
made::made
everytime::everytime
analyze::analyze
schemes::schemes
depend::depend
alpha::alpha
half::half
stop::stop
probes::probes
required::required
tenth::tenth
ninety::ninety
percent::percent
expected::expected
hit::hit
tenths::tenths
trails::trails
excepted::excepted
declared::declared
talk::talk
searches::searches
begin::begin
expectation::expectation
fiftieth::fiftieth
total::total
rest::rest
fourth::fourth
quarter::quarter
praises::praises
upper::upper
bound::bound
times::times
similarly::similarly
quarters::quarters
i9s::i9s
guys::guys
fractions::fractions
wanted::wanted
log::log
form::form
capture::capture
showed::showed
lat::lat
performances::performances
