linked/VBD/linked list/NN/list from/IN/from wikipedia/NNS/wikipedia /,/, the/DT/the free/JJ/free encyclopedia/NN/encyclopedia this/DT/this article/NN/article includes/VBZ/includes a/DT/a list/NN/list of/IN/of references/NNS/references /,/, but/CC/but its/PRP$/its sources/NNS/sources remain/NN/remain unclear/NN/unclear because/IN/because it/PRP/it has/VBZ/has insufficient/VBN/insufficient inline/NN/inline citations/NNP/citations. please/NN/please help/NN/help to/TO/to improve/VB/improve this/DT/this article/NN/article by/IN/by introducing/NN/introducing more/JJR/more precise/NN/precise citations/NNP/citations. /NNP/( march/NN/march 2012/CD/2012 /CD/) in/IN/in computer/NN/computer science/NN/science /,/, a/DT/a linked/VBN/linked list/NN/list is/VBZ/is a/DT/a data/NN/data structure/NN/structure consisting/VBG/consisting of/IN/of a/DT/a group/NN/group of/IN/of nodes/NNS/nodes which/WDT/which together/RB/together represent/VBP/represent a/DT/a sequence/NNP/sequence. under/IN/under the/DT/the simplest/JJS/simplest form/NN/form /,/, each/DT/each node/NN/node is/VBZ/is composed/VBN/composed of/IN/of data/NNS/data and/CC/and a/DT/a reference/NN/reference /:/( in/IN/in other/JJ/other words/NNS/words /,/, a/DT/a link/NN/link /:/) to/TO/to the/DT/the next/JJ/next node/NN/node in/IN/in the/DT/the sequence/NN/sequence ;/:/; more/JJR/more complex/JJ/complex variants/NNS/variants add/VBP/add additional/JJ/additional links/NNP/links. this/DT/this structure/NN/structure allows/VBZ/allows for/IN/for efficient/NN/efficient insertion/NN/insertion or/CC/or removal/NN/removal of/IN/of elements/NNS/elements from/IN/from any/DT/any position/NN/position in/IN/in the/DT/the sequence/NNP/sequence. a/DT/a linked/VBN/linked list/NN/list whose/WP$/whose nodes/NNS/nodes contain/VBP/contain two/CD/two fields/NNS/fields /:/: an/DT/an integer/NN/integer value/NN/value and/CC/and a/DT/a link/NN/link to/TO/to the/DT/the next/JJ/next node/NNP/node. the/DT/the last/JJ/last node/NN/node is/VBZ/is linked/VBN/linked to/TO/to a/DT/a terminator/NN/terminator used/VBN/used to/TO/to signify/VB/signify the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. linked/VBD/linked lists/NNS/lists are/VBP/are among/IN/among the/DT/the simplest/JJS/simplest and/CC/and most/JJS/most common/JJ/common data/NNS/data structures/NNP/structures. they/PRP/they can/MD/can be/VB/be used/VBN/used to/TO/to implement/VB/implement several/JJ/several other/JJ/other common/JJ/common abstract/NN/abstract data/NNS/data types/NNS/types /,/, including/VBG/including lists/NNS/lists /:/( the/DT/the abstract/NN/abstract data/NNS/data type/NN/type /:/) /,/, stacks/NNS/stacks /,/, queues/NNS/queues /,/, associative/JJ/associative arrays/NNS/arrays /,/, and/CC/and s-expressions/NNS/s-expressions /,/, though/IN/though it/PRP/it is/VBZ/is not/RB/not uncommon/JJ/uncommon to/TO/to implement/NN/implement the/DT/the other/JJ/other data/NNS/data structures/NNS/structures directly/RB/directly without/IN/without using/VBG/using a/DT/a list/NN/list as/IN/as the/DT/the basis/NN/basis of/IN/of implementation/NNP/implementation. the/DT/the principal/JJ/principal benefit/NN/benefit of/IN/of a/DT/a linked/VBN/linked list/NN/list over/IN/over a/DT/a conventional/JJ/conventional array/NN/array is/VBZ/is that/IN/that the/DT/the list/NN/list elements/NNS/elements can/MD/can easily/RB/easily be/VB/be inserted/VBN/inserted or/CC/or removed/VBN/removed without/IN/without reallocation/NN/reallocation or/CC/or reorganization/NN/reorganization of/IN/of the/DT/the entire/JJ/entire structure/NN/structure because/IN/because the/DT/the data/NNS/data items/NNS/items need/VBP/need not/RB/not be/VB/be stored/VBN/stored contiguously/RB/contiguously in/IN/in memory/NN/memory or/CC/or on/IN/on disk/NN/disk /,/, while/IN/while an/DT/an array/NN/array has/VBZ/has to/TO/to be/VB/be declared/VBN/declared in/IN/in the/DT/the source/NN/source code/NN/code /,/, before/IN/before compiling/NN/compiling and/CC/and running/VBG/running the/DT/the program/NNP/program. linked/VBD/linked lists/NNS/lists allow/VBP/allow insertion/NN/insertion and/CC/and removal/NN/removal of/IN/of nodes/NNS/nodes at/IN/at any/DT/any point/NN/point in/IN/in the/DT/the list/NN/list /,/, and/CC/and can/MD/can do/VB/do so/RB/so with/IN/with a/DT/a constant/JJ/constant number/NN/number of/IN/of operations/NNS/operations if/IN/if the/DT/the link/NN/link previous/JJ/previous to/TO/to the/DT/the link/NN/link being/VBG/being added/VBN/added or/CC/or removed/VBN/removed is/VBZ/is maintained/VBN/maintained during/IN/during list/NN/list traversal/NNP/traversal. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, simple/JJ/simple linked/VBN/linked lists/NNS/lists by/IN/by themselves/PRP/themselves do/VBP/do not/RB/not allow/VB/allow random/NN/random access/NN/access to/TO/to the/DT/the data/NNS/data /,/, or/CC/or any/DT/any form/NN/form of/IN/of efficient/NN/efficient indexing/NNP/indexing. thus/RB/thus /,/, many/JJ/many basic/JJ/basic operations/NNS/operations such/JJ/such as/IN/as obtaining/NN/obtaining the/DT/the last/JJ/last node/NN/node of/IN/of the/DT/the list/NN/list /:/( assuming/VBG/assuming that/IN/that the/DT/the last/JJ/last node/NN/node is/VBZ/is not/RB/not maintained/VBN/maintained as/IN/as separate/JJ/separate node/NN/node reference/NN/reference in/IN/in the/DT/the list/NN/list structure/NN/structure /:/) /,/, or/CC/or finding/VBG/finding a/DT/a node/NN/node that/WDT/that contains/VBZ/contains a/DT/a given/VBN/given datum/NN/datum /,/, or/CC/or locating/VBG/locating the/DT/the place/NN/place where/WRB/where a/DT/a new/JJ/new node/NN/node should/MD/should be/VB/be inserted/VBN/inserted may/MD/may require/VB/require sequential/JJ/sequential scanning/NN/scanning of/IN/of most/JJS/most or/CC/or all/DT/all of/IN/of the/DT/the list/NN/list elements/NNP/elements. the/DT/the advantages/NNS/advantages and/CC/and disadvantages/NNS/disadvantages of/IN/of using/VBG/using linked/VBN/linked lists/NNS/lists are/VBP/are given/VBN/given below/NNP/below. contents/NNS/contents /:/[ hide/NN/hide /:/] */-NONE-/* 1/CD/1 advantages/NNS/advantages */-NONE-/* 2/CD/2 disadvantages/NNS/disadvantages */-NONE-/* 3/CD/3 history/NN/history */-NONE-/* 4/CD/4 basic/JJ/basic concepts/NNS/concepts and/CC/and nomenclature/NN/nomenclature o/NN/o 4.1/CD/4.1 singly/RB/singly linked/VBN/linked list/NN/list o/NN/o 4.2/CD/4.2 doubly/RB/doubly linked/VBN/linked list/NN/list o/NN/o 4.3/CD/4.3 multiply/RB/multiply linked/VBN/linked list/NN/list o/NN/o 4.4/CD/4.4 circular/JJ/circular linked/VBN/linked list/NN/list o/NN/o 4.5/CD/4.5 sentinel/NN/sentinel nodes/NNS/nodes o/VBP/o 4.6/CD/4.6 empty/NN/empty lists/NNS/lists o/VBP/o 4.7/CD/4.7 hash/NN/hash linking/VBG/linking o/NN/o 4.8/CD/4.8 list/NN/list handles/NNS/handles o/VBP/o 4.9/CD/4.9 combining/VBG/combining alternatives/NNS/alternatives */-NONE-/* 5/CD/5 tradeoffs/NNS/tradeoffs o/IN/o 5.1/CD/5.1 linked/VBN/linked lists/NNS/lists vs/NNP/vs. dynamic/JJ/dynamic arrays/NNS/arrays o/VBP/o 5.2/CD/5.2 singly/RB/singly linked/VBN/linked linear/JJ/linear lists/NNS/lists vs/NNP/vs. other/JJ/other lists/NNS/lists o/IN/o 5.3/CD/5.3 doubly/RB/doubly linked/VBN/linked vs/NNP/vs. singly/RB/singly linked/VBD/linked o/RB/o 5.4/CD/5.4 circularly/RB/circularly linked/VBN/linked vs/NNP/vs. linearly/RB/linearly linked/VBD/linked o/RB/o 5.5/CD/5.5 using/VBG/using sentinel/NN/sentinel nodes/NNS/nodes */-NONE-/* 6/CD/6 linked/VBN/linked list/NN/list operations/NNS/operations o/RB/o 6.1/CD/6.1 linearly/RB/linearly linked/VBN/linked lists/NNS/lists */-NONE-/* 6.1.1/CD/6.1.1 singly/RB/singly linked/VBN/linked lists/NNS/lists o/RB/o 6.2/CD/6.2 circularly/RB/circularly linked/VBN/linked list/NN/list */-NONE-/* 6.2.1/CD/6.2.1 algorithms/NNS/algorithms */-NONE-/* 7/CD/7 linked/VBN/linked lists/NNS/lists using/VBG/using arrays/NNS/arrays of/IN/of node/NN/node */-NONE-/* 8/CD/8 language/NN/language support/NN/support */-NONE-/* 9/CD/9 internal/JJ/internal and/CC/and external/JJ/external storage/NN/storage o/NN/o 9.1/CD/9.1 example/NN/example of/IN/of internal/JJ/internal and/CC/and external/JJ/external storage/NN/storage o/NN/o 9.2/CD/9.2 speeding/VBG/speeding up/RP/up search/NN/search o/NN/o 9.3/CD/9.3 random/NN/random access/NN/access lists/NNS/lists */-NONE-/* 10/CD/10 related/VBN/related data/NNS/data structures/NNS/structures */-NONE-/* 11/CD/11 notes/NNS/notes */-NONE-/* 12/CD/12 footnotes/NNS/footnotes */-NONE-/* 13/CD/13 references/NNS/references */-NONE-/* 14/CD/14 external/JJ/external links/NNS/links advantages/NNS/advantages /VBP/[ edit/NN/edit /:/] */-NONE-/* linked/VBN/linked lists/NNS/lists are/VBP/are a/DT/a dynamic/JJ/dynamic data/NNS/data structure/NN/structure /,/, allocating/VBG/allocating the/DT/the needed/JJ/needed memory/NN/memory while/IN/while the/DT/the program/NN/program is/VBZ/is running/NNP/running. */-NONE-/* insertion/NN/insertion and/CC/and deletion/NN/deletion node/NN/node operations/NNS/operations are/VBP/are easily/RB/easily implemented/VBN/implemented in/IN/in a/DT/a linked/VBN/linked list/NNP/list. */-NONE-/* linear/VB/linear data/NNS/data structures/NNS/structures such/JJ/such as/IN/as stacks/NNS/stacks and/CC/and queues/NNS/queues are/VBP/are easily/RB/easily executed/VBN/executed with/IN/with a/DT/a linked/VBN/linked list/NNP/list. */-NONE-/* they/PRP/they can/MD/can reduce/VB/reduce access/NN/access time/NN/time and/CC/and may/MD/may expand/VB/expand in/IN/in real/JJ/real time/NN/time without/IN/without memory/NN/memory overhead/NNP/overhead. disadvantages/NNS/disadvantages /:/[ edit/NN/edit /:/] */-NONE-/* they/PRP/they have/VBP/have a/DT/a tendency/NN/tendency to/TO/to use/VB/use more/JJR/more memory/NN/memory due/JJ/due to/TO/to pointers/NNS/pointers requiring/VBG/requiring extra/JJ/extra storage/NN/storage space/NNP/space. */-NONE-/* nodes/VBZ/nodes in/IN/in a/DT/a linked/VBN/linked list/NN/list must/MD/must be/VB/be read/VBN/read in/IN/in order/NN/order from/IN/from the/DT/the beginning/NN/beginning as/IN/as linked/VBN/linked lists/NNS/lists are/VBP/are inherently/RB/inherently sequential/JJ/sequential access/NNP/access. */-NONE-/* nodes/VBZ/nodes are/VBP/are stored/VBN/stored incontiguously/RB/incontiguously /,/, greatly/RB/greatly increasing/VBG/increasing the/DT/the time/NN/time required/VBN/required to/TO/to access/NN/access individual/JJ/individual elements/NNS/elements within/IN/within the/DT/the list/NNP/list. */-NONE-/* difficulties/VBZ/difficulties arise/VB/arise in/IN/in linked/VBN/linked lists/NNS/lists when/WRB/when it/PRP/it comes/VBZ/comes to/TO/to reverse/VB/reverse traversing/NNP/traversing. for/IN/for instance/NN/instance /,/, singly/RB/singly linked/VBN/linked lists/NNS/lists are/VBP/are cumbersome/VBN/cumbersome to/TO/to navigate/VB/navigate backwards/NNS/backwards /:/[ 1/CD/1 /CD/] and/CC/and while/IN/while doubly/RB/doubly linked/VBN/linked lists/NNS/lists are/VBP/are somewhat/RB/somewhat easier/JJR/easier to/TO/to read/VB/read /,/, memory/NN/memory is/VBZ/is wasted/VBN/wasted in/IN/in allocating/NN/allocating space/NN/space for/IN/for a/DT/a back/NN/back pointer/NNP/pointer. history/NN/history /:/[ edit/NN/edit /:/] linked/VBN/linked lists/NNS/lists were/VBD/were developed/VBN/developed in/IN/in 1955/CD/1955 1956/CD/1956 by/IN/by allen/NN/allen newell/NN/newell /,/, cliff/NN/cliff shaw/NN/shaw and/CC/and herbert/NN/herbert a/NNP/a. simon/NN/simon at/IN/at rand/NN/rand corporation/NN/corporation as/IN/as the/DT/the primary/JJ/primary data/NNS/data structure/NN/structure for/IN/for their/PRP$/their information/NN/information processing/VBG/processing language/NNP/language. ipl/NN/ipl was/VBD/was used/VBN/used by/IN/by the/DT/the authors/NNS/authors to/TO/to develop/VB/develop several/JJ/several early/JJ/early artificial/JJ/artificial intelligence/NN/intelligence programs/NNS/programs /,/, including/VBG/including the/DT/the logic/NN/logic theory/NN/theory machine/NN/machine /,/, the/DT/the general/JJ/general problem/NN/problem solver/NN/solver /,/, and/CC/and a/DT/a computer/NN/computer chess/NN/chess program/NNP/program. reports/NNS/reports on/IN/on their/PRP$/their work/NN/work appeared/VBD/appeared in/IN/in ire/NN/ire transactions/NNS/transactions on/IN/on information/NN/information theory/NN/theory in/IN/in 1956/CD/1956 /,/, and/CC/and several/JJ/several conference/NN/conference proceedings/NNS/proceedings from/IN/from 1957/CD/1957 to/TO/to 1959/CD/1959 /,/, including/VBG/including proceedings/NNS/proceedings of/IN/of the/DT/the western/JJ/western joint/NN/joint computer/NN/computer conference/NN/conference in/IN/in 1957/CD/1957 and/CC/and 1958/CD/1958 /,/, and/CC/and information/NN/information processing/NN/processing /:/( proceedings/NNS/proceedings of/IN/of the/DT/the first/JJ/first unesco/NN/unesco international/JJ/international conference/NN/conference on/IN/on information/NN/information processing/NN/processing /:/) in/IN/in 1959/CD/1959. the/DT/the now-classic/JJ/now-classic diagram/NN/diagram consisting/VBG/consisting of/IN/of blocks/NNS/blocks representing/VBG/representing list/NN/list nodes/NNS/nodes with/IN/with arrows/NNS/arrows pointing/VBG/pointing to/TO/to successive/VB/successive list/NN/list nodes/NNS/nodes appears/VBZ/appears in/IN/in "/NNP/" programming/NN/programming the/DT/the logic/NN/logic theory/NN/theory machine/NN/machine "/:/" by/IN/by newell/NN/newell and/CC/and shaw/NN/shaw in/IN/in proc/NNP/proc. wjcc/NN/wjcc /,/, february/JJ/february 1957/CD/1957. newell/NN/newell and/CC/and simon/NN/simon were/VBD/were recognized/VBN/recognized with/IN/with the/DT/the acm/NN/acm turing/VBG/turing award/NN/award in/IN/in 1975/CD/1975 for/IN/for having/NN/having "/:/" made/VBN/made basic/JJ/basic contributions/NNS/contributions to/TO/to artificial/JJ/artificial intelligence/NN/intelligence /,/, the/DT/the psychology/NN/psychology of/IN/of human/JJ/human cognition/NN/cognition /,/, and/CC/and list/NN/list processing/NN/processing "/:/" /./. the/DT/the problem/NN/problem of/IN/of machine/NN/machine translation/NN/translation for/IN/for natural/JJ/natural language/NN/language processing/NN/processing led/VBD/led victor/NN/victor yngve/NN/yngve at/IN/at massachusetts/NNS/massachusetts institute/VBP/institute of/IN/of technology/NN/technology /:/( mit/NN/mit /:/) to/TO/to use/VB/use linked/VBN/linked lists/NNS/lists as/IN/as data/NNS/data structures/NNS/structures in/IN/in his/PRP$/his comit/NN/comit programming/NN/programming language/NN/language for/IN/for computer/NN/computer research/NN/research in/IN/in the/DT/the field/NN/field of/IN/of linguistics/NNP/linguistics. a/DT/a report/NN/report on/IN/on this/DT/this language/NN/language entitled/VBD/entitled "/CD/" a/DT/a programming/NN/programming language/NN/language for/IN/for mechanical/JJ/mechanical translation/NN/translation "/:/" appeared/VBD/appeared in/IN/in mechanical/JJ/mechanical translation/NN/translation in/IN/in 1958/CD/1958. lisp/NN/lisp /,/, standing/NN/standing for/IN/for list/NN/list processor/NN/processor /,/, was/VBD/was created/VBN/created by/IN/by john/NN/john mccarthy/JJ/mccarthy in/IN/in 1958/CD/1958 while/IN/while he/PRP/he was/VBD/was at/IN/at mit/NN/mit and/CC/and in/IN/in 1960/CD/1960 he/PRP/he published/VBD/published its/PRP$/its design/NN/design in/IN/in a/DT/a paper/NN/paper in/IN/in the/DT/the communications/NNS/communications of/IN/of the/DT/the acm/NN/acm /,/, entitled/VBD/entitled "/:/" recursive/JJ/recursive functions/NNS/functions of/IN/of symbolic/JJ/symbolic expressions/NNS/expressions and/CC/and their/PRP$/their computation/NN/computation by/IN/by machine/NN/machine /,/, part/NN/part i/PRP/i "/VBP/" /./. one/CD/one of/IN/of lisp/NN/lisp 's/POS/'s major/JJ/major data/NNS/data structures/NNS/structures is/VBZ/is the/DT/the linked/VBN/linked list/NNP/list. by/IN/by the/DT/the early/JJ/early 1960s/CD/1960s /,/, the/DT/the utility/NN/utility of/IN/of both/DT/both linked/VBN/linked lists/NNS/lists and/CC/and languages/NNS/languages which/WDT/which use/NN/use these/DT/these structures/NNS/structures as/IN/as their/PRP$/their primary/JJ/primary data/NNS/data representation/NN/representation was/VBD/was well/RB/well established/NNP/established. bert/NN/bert green/JJ/green of/IN/of the/DT/the mit/NN/mit lincoln/NN/lincoln laboratory/NN/laboratory published/VBD/published a/DT/a review/NN/review article/NN/article entitled/VBD/entitled "/CD/" computer/NN/computer languages/NNS/languages for/IN/for symbol/NN/symbol manipulation/NN/manipulation "/:/" in/IN/in ire/NN/ire transactions/NNS/transactions on/IN/on human/JJ/human factors/NNS/factors in/IN/in electronics/NNS/electronics in/IN/in march/NN/march 1961/CD/1961 which/WDT/which summarized/VBN/summarized the/DT/the advantages/NNS/advantages of/IN/of the/DT/the linked/VBN/linked list/NN/list approach/NNP/approach. a/DT/a later/JJ/later review/NN/review article/NN/article /,/, "/:/" a/DT/a comparison/NN/comparison of/IN/of list-processing/JJ/list-processing computer/NN/computer languages/NNS/languages "/:/" by/IN/by bobrow/NN/bobrow and/CC/and raphael/NN/raphael /,/, appeared/VBD/appeared in/IN/in communications/NNS/communications of/IN/of the/DT/the acm/NN/acm in/IN/in april/NN/april 1964/CD/1964. several/JJ/several operating/NN/operating systems/NNS/systems developed/VBD/developed by/IN/by technical/JJ/technical systems/NNS/systems consultants/NNS/consultants /VBP/( originally/RB/originally of/IN/of west/JJS/west lafayette/JJ/lafayette indiana/NNS/indiana /,/, and/CC/and later/JJ/later of/IN/of chapel/NN/chapel hill/NN/hill /,/, north/JJ/north carolina/NN/carolina /:/) used/VBN/used singly/RB/singly linked/VBN/linked lists/NNS/lists as/IN/as file/JJ/file structures/NNP/structures. a/DT/a directory/NN/directory entry/NN/entry pointed/VBD/pointed to/TO/to the/DT/the first/JJ/first sector/NN/sector of/IN/of a/DT/a file/NN/file /,/, and/CC/and succeeding/VBG/succeeding portions/NNS/portions of/IN/of the/DT/the file/NN/file were/VBD/were located/VBN/located by/IN/by traversing/NN/traversing pointers/NNP/pointers. systems/NNS/systems using/VBG/using this/DT/this technique/NN/technique included/VBD/included flex/NN/flex /NN/( for/IN/for the/DT/the motorola/NN/motorola 6800/CD/6800 cpu/NN/cpu /:/) /,/, mini-flex/JJ/mini-flex /NN/( same/NN/same cpu/NN/cpu /:/) /,/, and/CC/and flex9/NNP/flex9 /NNP/( for/IN/for the/DT/the motorola/NN/motorola 6809/CD/6809 cpu/NN/cpu /:/) /./. a/DT/a variant/NN/variant developed/VBD/developed by/IN/by tsc/NN/tsc for/IN/for and/CC/and marketed/VBN/marketed by/IN/by smoke/NN/smoke signal/NN/signal broadcasting/NN/broadcasting in/IN/in california/NN/california /,/, used/VBN/used doubly/RB/doubly linked/VBN/linked lists/NNS/lists in/IN/in the/DT/the same/JJ/same manner/NNP/manner. the/DT/the tss/360/NNP/tss/360 operating/NN/operating system/NN/system /,/, developed/VBD/developed by/IN/by ibm/NN/ibm for/IN/for the/DT/the system/NN/system 360/370/CD/360/370 machines/NNS/machines /,/, used/VBN/used a/DT/a double/JJ/double linked/VBN/linked list/NN/list for/IN/for their/PRP$/their file/NN/file system/NN/system catalog/NNP/catalog. the/DT/the directory/NN/directory structure/NN/structure was/VBD/was similar/JJ/similar to/TO/to unix/VB/unix /,/, where/WRB/where a/DT/a directory/NN/directory could/MD/could contain/VB/contain files/NNS/files and/CC/and other/JJ/other directories/NNS/directories and/CC/and extend/VBP/extend to/TO/to any/DT/any depth/NNP/depth. basic/JJ/basic concepts/NNS/concepts and/CC/and nomenclature/NN/nomenclature /:/[ edit/NN/edit /:/] each/DT/each record/NN/record of/IN/of a/DT/a linked/VBN/linked list/NN/list is/VBZ/is often/RB/often called/VBN/called an/DT/an 'element/JJ/'element '/''/' or/CC/or 'node'/NNP/'node'. the/DT/the field/NN/field of/IN/of each/DT/each node/NN/node that/IN/that contains/NNS/contains the/DT/the address/NN/address of/IN/of the/DT/the next/JJ/next node/NN/node is/VBZ/is usually/RB/usually called/VBN/called the/DT/the 'next/JJ/'next link/NN/link '/''/' or/CC/or 'next/JJ/'next pointer'/NNP/pointer'. the/DT/the remaining/VBG/remaining fields/NNS/fields are/VBP/are known/VBN/known as/IN/as the/DT/the 'data/NNP/'data '/POS/' /,/, 'information/NN/'information '/''/' /,/, 'value/JJ/'value '/''/' /,/, 'cargo/NNP/'cargo '/POS/' /,/, or/CC/or 'payload/JJ/'payload '/''/' fields/NNP/fields. the/DT/the 'head/JJ/'head '/POS/' of/IN/of a/DT/a list/NN/list is/VBZ/is its/PRP$/its first/JJ/first node/NNP/node. the/DT/the 'tail/JJ/'tail '/POS/' of/IN/of a/DT/a list/NN/list may/MD/may refer/VB/refer either/DT/either to/TO/to the/DT/the rest/NN/rest of/IN/of the/DT/the list/NN/list after/IN/after the/DT/the head/NN/head /,/, or/CC/or to/TO/to the/DT/the last/JJ/last node/NN/node in/IN/in the/DT/the list/NNP/list. in/IN/in lisp/NN/lisp and/CC/and some/DT/some derived/JJ/derived languages/NNS/languages /,/, the/DT/the next/JJ/next node/NN/node may/MD/may be/VB/be called/VBN/called the/DT/the 'cdr/NNP/'cdr '/POS/' /NN/( pronounced/VBD/pronounced could-er/JJ/could-er /NN/) of/IN/of the/DT/the list/NN/list /,/, while/IN/while the/DT/the payload/NN/payload of/IN/of the/DT/the head/NN/head node/NN/node may/MD/may be/VB/be called/VBN/called the/DT/the 'car'/NNP/'car'. singly/RB/singly linked/VBD/linked list/NN/list /:/[ edit/NN/edit /:/] singly/RB/singly linked/VBN/linked lists/NNS/lists contain/VBP/contain nodes/NNS/nodes which/WDT/which have/VBP/have a/DT/a data/NN/data field/NN/field as/IN/as well/RB/well as/IN/as a/DT/a 'next/JJ/'next '/''/' field/NN/field /,/, which/WDT/which points/NNS/points to/TO/to the/DT/the next/JJ/next node/NN/node in/IN/in line/NN/line of/IN/of nodes/NNP/nodes. operations/NNS/operations that/WDT/that can/MD/can be/VB/be performed/VBN/performed on/IN/on singly/RB/singly linked/VBN/linked lists/NNS/lists include/VBP/include insertion/NN/insertion /,/, deletion/NN/deletion and/CC/and traversal/NNP/traversal. a/DT/a singly/RB/singly linked/VBN/linked list/NN/list whose/WP$/whose nodes/NNS/nodes contain/VBP/contain two/CD/two fields/NNS/fields /:/: an/DT/an integer/NN/integer value/NN/value and/CC/and a/DT/a link/NN/link to/TO/to the/DT/the next/JJ/next node/NN/node doubly/RB/doubly linked/VBN/linked list/NN/list /:/[ edit/NN/edit /:/] main/JJ/main article/NN/article /:/: doubly/RB/doubly linked/VBN/linked list/NN/list in/IN/in a/DT/a 'doubly/JJ/'doubly linked/VBN/linked list/NN/list '/''/' /,/, each/DT/each node/NN/node contains/VBZ/contains /,/, besides/VBZ/besides the/DT/the next-node/JJ/next-node link/NN/link /,/, a/DT/a second/JJ/second link/NN/link field/NN/field pointing/VBG/pointing to/TO/to the/DT/the 'previous/JJ/'previous '/POS/' node/NN/node in/IN/in the/DT/the sequence/NNP/sequence. the/DT/the two/CD/two links/NNS/links may/MD/may be/VB/be called/VBN/called 'forward/-NONE-/'forward /:/( 's/POS/'s '/''/' /:/) and/CC/and 'backwards/NNS/'backwards '/POS/' /,/, or/CC/or 'next/JJ/'next '/''/' and/CC/and 'prev/NNP/'prev '/''/' /:/( 'previous/JJ/'previous '/''/' /:/) /./. a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list whose/WP$/whose nodes/NNS/nodes contain/VBP/contain three/CD/three fields/NNS/fields /:/: an/DT/an integer/NN/integer value/NN/value /,/, the/DT/the link/NN/link forward/NN/forward to/TO/to the/DT/the next/JJ/next node/NN/node /,/, and/CC/and the/DT/the link/NN/link backward/NN/backward to/TO/to the/DT/the previous/JJ/previous node/NN/node a/DT/a technique/NN/technique known/VBN/known as/IN/as xor-linking/JJ/xor-linking allows/NNS/allows a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list to/TO/to be/VB/be implemented/VBN/implemented using/VBG/using a/DT/a single/JJ/single link/NN/link field/NN/field in/IN/in each/DT/each node/NNP/node. however/RB/however /,/, this/DT/this technique/NN/technique requires/VBZ/requires the/DT/the ability/NN/ability to/TO/to do/VB/do bit/NN/bit operations/NNS/operations on/IN/on addresses/NNS/addresses /,/, and/CC/and therefore/RB/therefore may/MD/may not/RB/not be/VB/be available/JJ/available in/IN/in some/DT/some high-level/JJ/high-level languages/NNP/languages. multiply/RB/multiply linked/VBD/linked list/NN/list /:/[ edit/NN/edit /:/] in/IN/in a/DT/a 'multiply/JJ/'multiply linked/VBN/linked list/NN/list '/''/' /,/, each/DT/each node/NN/node contains/VBZ/contains two/CD/two or/CC/or more/JJR/more link/NN/link fields/NNS/fields /,/, each/DT/each field/NN/field being/VBG/being used/VBN/used to/TO/to connect/VB/connect the/DT/the same/JJ/same set/NN/set of/IN/of data/NNS/data records/NNS/records in/IN/in a/DT/a different/JJ/different order/NN/order /:/( e.g/NNP/e.g. /,/, by/IN/by name/NN/name /,/, by/IN/by department/NN/department /,/, by/IN/by date/NN/date of/IN/of birth/JJ/birth /,/, etc/NNP/etc. /NNP/) /./. while/IN/while doubly/RB/doubly linked/VBN/linked lists/NNS/lists can/MD/can be/VB/be seen/VBN/seen as/IN/as special/JJ/special cases/NNS/cases of/IN/of multiply/RB/multiply linked/VBN/linked list/NN/list /,/, the/DT/the fact/NN/fact that/IN/that the/DT/the two/CD/two orders/NNS/orders are/VBP/are opposite/RB/opposite to/TO/to each/DT/each other/JJ/other leads/NNS/leads to/TO/to simpler/VB/simpler and/CC/and more/JJR/more efficient/JJ/efficient algorithms/NNS/algorithms /,/, so/RB/so they/PRP/they are/VBP/are usually/RB/usually treated/VBN/treated as/IN/as a/DT/a separate/JJ/separate case/NNP/case. circular/NN/circular linked/VBD/linked list/NN/list /:/[ edit/NN/edit /:/] in/IN/in the/DT/the last/JJ/last node/NN/node of/IN/of a/DT/a list/NN/list /,/, the/DT/the link/NN/link field/NN/field often/RB/often contains/VBZ/contains a/DT/a null/NN/null reference/NN/reference /,/, a/DT/a special/JJ/special value/NN/value used/VBN/used to/TO/to indicate/VB/indicate the/DT/the lack/NN/lack of/IN/of further/JJ/further nodes/NNP/nodes. a/DT/a less/JJR/less common/JJ/common convention/NN/convention is/VBZ/is to/TO/to make/VB/make it/PRP/it point/VB/point to/TO/to the/DT/the first/JJ/first node/NN/node of/IN/of the/DT/the list/NN/list ;/:/; in/IN/in that/DT/that case/NN/case the/DT/the list/NN/list is/VBZ/is said/VBN/said to/TO/to be/VB/be 'circular/JJ/'circular '/''/' or/CC/or 'circularly/RB/'circularly linked/VBN/linked '/''/' ;/:/; otherwise/RB/otherwise it/PRP/it is/VBZ/is said/VBN/said to/TO/to be/VB/be 'open/JJ/'open '/''/' or/CC/or 'linear'/NNP/'linear'. a/DT/a circular/JJ/circular linked/VBN/linked list/NN/list in/IN/in the/DT/the case/NN/case of/IN/of a/DT/a circular/JJ/circular doubly/RB/doubly linked/VBN/linked list/NN/list /,/, the/DT/the only/JJ/only change/NN/change that/WDT/that occurs/VBZ/occurs is/VBZ/is that/IN/that the/DT/the end/NN/end /,/, or/CC/or "/:/" tail/NN/tail "/:/" /,/, of/IN/of the/DT/the said/VBD/said list/NN/list is/VBZ/is linked/VBN/linked back/RB/back to/TO/to the/DT/the front/NN/front /,/, or/CC/or "/:/" head/NN/head "/:/" /,/, of/IN/of the/DT/the list/NN/list and/CC/and vice/NN/vice versa/NNP/versa. sentinel/NN/sentinel nodes/VBZ/nodes /:/[ edit/NN/edit /:/] main/JJ/main article/NN/article /:/: sentinel/NN/sentinel node/NN/node in/IN/in some/DT/some implementations/NNS/implementations /,/, an/DT/an extra/JJ/extra 'sentinel/NN/'sentinel '/''/' or/CC/or 'dummy/JJ/'dummy '/''/' node/NN/node may/MD/may be/VB/be added/VBN/added before/IN/before the/DT/the first/JJ/first data/NNS/data record/NN/record or/CC/or after/IN/after the/DT/the last/JJ/last one/NNP/one. this/DT/this convention/NN/convention simplifies/VBZ/simplifies and/CC/and accelerates/NNS/accelerates some/DT/some list-handling/JJ/list-handling algorithms/NNS/algorithms /,/, by/IN/by ensuring/NN/ensuring that/IN/that all/DT/all links/NNS/links can/MD/can be/VB/be safely/RB/safely dereferenced/VBN/dereferenced and/CC/and that/IN/that every/DT/every list/NN/list /:/( even/RB/even one/CD/one that/WDT/that contains/VBZ/contains no/DT/no data/NN/data elements/NNS/elements /:/) always/RB/always has/VBZ/has a/DT/a "/NN/" first/RB/first "/./" and/CC/and "/:/" last/JJ/last "/NN/" node/NNP/node. empty/NN/empty lists/NNS/lists /:/[ edit/NN/edit /:/] an/DT/an empty/NN/empty list/NN/list is/VBZ/is a/DT/a list/NN/list that/WDT/that contains/VBZ/contains no/DT/no data/NN/data records/NNP/records. this/DT/this is/VBZ/is usually/RB/usually the/DT/the same/JJ/same as/IN/as saying/VBG/saying that/IN/that it/PRP/it has/VBZ/has zero/RB/zero nodes/NNP/nodes. if/IN/if sentinel/NN/sentinel nodes/NNS/nodes are/VBP/are being/VBG/being used/VBN/used /,/, the/DT/the list/NN/list is/VBZ/is usually/RB/usually said/VBD/said to/TO/to be/VB/be empty/JJ/empty when/WRB/when it/PRP/it has/VBZ/has only/RB/only sentinel/JJ/sentinel nodes/NNP/nodes. hash/NN/hash linking/VBG/linking /NN/[ edit/NN/edit /:/] the/DT/the link/NN/link fields/NNS/fields need/VBP/need not/RB/not be/VB/be physically/RB/physically part/NN/part of/IN/of the/DT/the nodes/NNP/nodes. if/IN/if the/DT/the data/NNS/data records/NNS/records are/VBP/are stored/VBN/stored in/IN/in an/DT/an array/NN/array and/CC/and referenced/VBD/referenced by/IN/by their/PRP$/their indices/NNS/indices /,/, the/DT/the link/NN/link field/NN/field may/MD/may be/VB/be stored/VBN/stored in/IN/in a/DT/a separate/JJ/separate array/NN/array with/IN/with the/DT/the same/JJ/same indices/NNS/indices as/IN/as the/DT/the data/NNS/data records/NNP/records. list/NN/list handles/VBZ/handles /:/[ edit/NN/edit /:/] since/IN/since a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first node/NN/node gives/VBZ/gives access/NN/access to/TO/to the/DT/the whole/JJ/whole list/NN/list /,/, that/IN/that reference/NN/reference is/VBZ/is often/RB/often called/VBN/called the/DT/the 'address/JJ/'address '/POS/' /,/, 'pointer/JJ/'pointer '/''/' /,/, or/CC/or 'handle/JJ/'handle '/''/' of/IN/of the/DT/the list/NNP/list. algorithms/VBZ/algorithms that/IN/that manipulate/JJ/manipulate linked/VBN/linked lists/NNS/lists usually/RB/usually get/VB/get such/JJ/such handles/NNS/handles to/TO/to the/DT/the input/NN/input lists/NNS/lists and/CC/and return/NN/return the/DT/the handles/NNS/handles to/TO/to the/DT/the resulting/VBG/resulting lists/NNP/lists. in/IN/in fact/NN/fact /,/, in/IN/in the/DT/the context/NN/context of/IN/of such/JJ/such algorithms/NNS/algorithms /,/, the/DT/the word/NN/word "/:/" list/NN/list "/:/" often/RB/often means/VBZ/means "/:/" list/NN/list handle/NN/handle "/:/" /./. in/IN/in some/DT/some situations/NNS/situations /,/, however/RB/however /,/, it/PRP/it may/MD/may be/VB/be convenient/JJ/convenient to/TO/to refer/VB/refer to/TO/to a/DT/a list/NN/list by/IN/by a/DT/a handle/JJ/handle that/IN/that consists/NNS/consists of/IN/of two/CD/two links/NNS/links /,/, pointing/VBG/pointing to/TO/to its/PRP$/its first/JJ/first and/CC/and last/JJ/last nodes/NNP/nodes. combining/NN/combining alternatives/NNS/alternatives /:/[ edit/NN/edit /:/] the/DT/the alternatives/NNS/alternatives listed/VBN/listed above/IN/above may/MD/may be/VB/be arbitrarily/RB/arbitrarily combined/VBN/combined in/IN/in almost/RB/almost every/DT/every way/NN/way /,/, so/RB/so one/CD/one may/MD/may have/VB/have circular/JJ/circular doubly/RB/doubly linked/VBN/linked lists/NNS/lists without/IN/without sentinels/NNS/sentinels /,/, circular/JJ/circular singly/RB/singly linked/VBN/linked lists/NNS/lists with/IN/with sentinels/NNS/sentinels /,/, etc/NNP/etc. tradeoffs/NNS/tradeoffs /:/[ edit/NN/edit /:/] as/IN/as with/IN/with most/JJS/most choices/NNS/choices in/IN/in computer/NN/computer programming/NN/programming and/CC/and design/NN/design /,/, no/DT/no method/NN/method is/VBZ/is well/RB/well suited/VBN/suited to/TO/to all/DT/all circumstances/NNP/circumstances. a/DT/a linked/VBN/linked list/NN/list data/NNS/data structure/NN/structure might/MD/might work/VB/work well/RB/well in/IN/in one/CD/one case/NN/case /,/, but/CC/but cause/NN/cause problems/NNS/problems in/IN/in another/NNP/another. this/DT/this is/VBZ/is a/DT/a list/NN/list of/IN/of some/DT/some of/IN/of the/DT/the common/JJ/common tradeoffs/NNS/tradeoffs involving/VBG/involving linked/VBN/linked list/NN/list structures/NNP/structures. linked/VBD/linked lists/NNS/lists vs/NNP/vs. dynamic/JJ/dynamic arrays/NNS/arrays /:/[ edit/NN/edit /:/] comparison/NN/comparison of/IN/of list/NN/list data/NNS/data structures/NNS/structures linked/VBD/linked list/NN/list array/NN/array dynamic/JJ/dynamic array/NN/array balanced/VBD/balanced tree/NN/tree random/NN/random access/NN/access list/NN/list indexing/NN/indexing /:/( n/NN/n /:/) /:/( 1/CD/1 /CD/) /CD/( 1/CD/1 /CD/) /CD/( log/NN/log n/NN/n /:/) /:/( log/NN/log n/NN/n /:/) insert/delete/JJ/insert/delete at/IN/at beginning/NN/beginning /:/( 1/CD/1 /CD/) n/a/NNP/n/a /NNP/( n/NN/n /:/) /:/( log/NN/log n/NN/n /:/) /:/( 1/CD/1 /CD/) insert/delete/JJ/insert/delete at/IN/at end/NN/end /:/( n/NN/n /:/) when/WRB/when last/JJ/last element/NN/element is/VBZ/is unknown/VBN/unknown ;/:/; /:/( 1/CD/1 /CD/) when/WRB/when last/JJ/last element/NN/element is/VBZ/is known/VBN/known n/a/-NONE-/n/a /:/( 1/CD/1 /CD/) amortized/VBN/amortized /-NONE-/( log/NN/log n/NN/n /:/) /:/( log/NN/log n/NN/n /:/) updating/VBG/updating insert/delete/JJ/insert/delete in/IN/in middle/NN/middle search/NN/search time/NN/time +/:/+ /:/( 1/CD/1 /CD/) /CD/[ 2/CD/2 /CD/] /CD/[ 3/CD/3 /CD/] /CD/[ 4/CD/4 /CD/] n/a/NNP/n/a /NNP/( n/NN/n /:/) /:/( log/NN/log n/NN/n /:/) /:/( log/NN/log n/NN/n /:/) updating/VBG/updating wasted/VBN/wasted space/NN/space /:/( average/JJ/average /NN/) /:/( n/NN/n /:/) 0/-NONE-/0 /:/( n/NN/n /:/) /:/[ 5/CD/5 /CD/] /CD/( n/NN/n /:/) /:/( n/NN/n /:/) a/DT/a dynamic/JJ/dynamic array/NN/array is/VBZ/is a/DT/a data/NN/data structure/NN/structure that/WDT/that allocates/VBZ/allocates all/DT/all elements/NNS/elements contiguously/RB/contiguously in/IN/in memory/NN/memory /,/, and/CC/and keeps/NNS/keeps a/DT/a count/NN/count of/IN/of the/DT/the current/JJ/current number/NN/number of/IN/of elements/NNP/elements. if/IN/if the/DT/the space/NN/space reserved/VBD/reserved for/IN/for the/DT/the dynamic/JJ/dynamic array/NN/array is/VBZ/is exceeded/VBN/exceeded /,/, it/PRP/it is/VBZ/is reallocated/VBN/reallocated and/CC/and /NNP/( possibly/RB/possibly /:/) copied/VBN/copied /,/, an/DT/an expensive/JJ/expensive operation/NNP/operation. linked/VBD/linked lists/NNS/lists have/VBP/have several/JJ/several advantages/NNS/advantages over/IN/over dynamic/JJ/dynamic arrays/NNP/arrays. insertion/NN/insertion or/CC/or deletion/NN/deletion of/IN/of an/DT/an element/NN/element at/IN/at a/DT/a specific/JJ/specific point/NN/point of/IN/of a/DT/a list/NN/list /,/, assuming/VBG/assuming that/IN/that we/PRP/we have/VBP/have indexed/VBN/indexed a/DT/a pointer/NN/pointer to/TO/to the/DT/the node/NN/node /:/( before/IN/before the/DT/the one/CD/one to/TO/to be/VB/be removed/VBN/removed /,/, or/CC/or before/IN/before the/DT/the insertion/NN/insertion point/NN/point /:/) already/RB/already /,/, is/VBZ/is a/DT/a constant-time/JJ/constant-time operation/NN/operation /:/( otherwise/NN/otherwise without/IN/without this/DT/this reference/NN/reference it/PRP/it is/VBZ/is o/RB/o /:/( n/NN/n /:/) /:/) /,/, whereas/IN/whereas insertion/NN/insertion in/IN/in a/DT/a dynamic/JJ/dynamic array/NN/array at/IN/at random/NN/random locations/NNS/locations will/MD/will require/VB/require moving/VBG/moving half/NN/half of/IN/of the/DT/the elements/NNS/elements on/IN/on average/JJ/average /,/, and/CC/and all/DT/all the/DT/the elements/NNS/elements in/IN/in the/DT/the worst/JJS/worst case/NNP/case. while/IN/while one/CD/one can/MD/can "/VB/" delete/JJ/delete "/NN/" an/DT/an element/NN/element from/IN/from an/DT/an array/NN/array in/IN/in constant/NN/constant time/NN/time by/IN/by somehow/NN/somehow marking/VBG/marking its/PRP$/its slot/NN/slot as/IN/as "/CD/" vacant/JJ/vacant "/NN/" /,/, this/DT/this causes/NNS/causes fragmentation/NN/fragmentation that/IN/that impedes/NNS/impedes the/DT/the performance/NN/performance of/IN/of iteration/NNP/iteration. moreover/RB/moreover /,/, arbitrarily/RB/arbitrarily many/JJ/many elements/NNS/elements may/MD/may be/VB/be inserted/VBN/inserted into/IN/into a/DT/a linked/JJ/linked list/NN/list /,/, limited/VBN/limited only/RB/only by/IN/by the/DT/the total/JJ/total memory/NN/memory available/JJ/available ;/:/; while/IN/while a/DT/a dynamic/JJ/dynamic array/NN/array will/MD/will eventually/RB/eventually fill/VB/fill up/RP/up its/PRP$/its underlying/JJ/underlying array/NN/array data/NNS/data structure/NN/structure and/CC/and will/MD/will have/VB/have to/TO/to reallocate/VB/reallocate an/DT/an expensive/JJ/expensive operation/NN/operation /,/, one/CD/one that/WDT/that may/MD/may not/RB/not even/RB/even be/VB/be possible/JJ/possible if/IN/if memory/NN/memory is/VBZ/is fragmented/VBN/fragmented /,/, although/IN/although the/DT/the cost/NN/cost of/IN/of reallocation/NN/reallocation can/MD/can be/VB/be averaged/VBN/averaged over/RP/over insertions/NNS/insertions /,/, and/CC/and the/DT/the cost/NN/cost of/IN/of an/DT/an insertion/NN/insertion due/JJ/due to/TO/to reallocation/NN/reallocation would/MD/would still/RB/still be/VB/be amortized/VBN/amortized o/NN/o /:/( 1/CD/1 /CD/) /./. this/DT/this helps/NNS/helps with/IN/with appending/VBG/appending elements/NNS/elements at/IN/at the/DT/the array/NN/array 's/POS/'s end/NN/end /,/, but/CC/but inserting/VBG/inserting into/IN/into /NN/( or/CC/or removing/VBG/removing from/IN/from /NNP/) middle/NN/middle positions/NNS/positions still/RB/still carries/VBZ/carries prohibitive/JJ/prohibitive costs/NNS/costs due/JJ/due to/TO/to data/NNS/data moving/VBG/moving to/TO/to maintain/VB/maintain contiguity/NNP/contiguity. an/DT/an array/NN/array from/IN/from which/WDT/which many/JJ/many elements/NNS/elements are/VBP/are removed/VBN/removed may/MD/may also/RB/also have/VB/have to/TO/to be/VB/be resized/VBN/resized in/IN/in order/NN/order to/TO/to avoid/VB/avoid wasting/NN/wasting too/RB/too much/RB/much space/NNP/space. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, dynamic/JJ/dynamic arrays/NNS/arrays /:/( as/IN/as well/RB/well as/IN/as fixed-size/JJ/fixed-size array/NN/array data/NNS/data structures/NNS/structures /VBP/) allow/JJ/allow constant-time/JJ/constant-time random/NN/random access/NN/access /,/, while/IN/while linked/VBN/linked lists/NNS/lists allow/VBP/allow only/RB/only sequential/JJ/sequential access/NN/access to/TO/to elements/NNP/elements. singly/RB/singly linked/VBD/linked lists/NNS/lists /,/, in/IN/in fact/NN/fact /,/, can/MD/can be/VB/be easily/RB/easily traversed/VBN/traversed in/IN/in only/RB/only one/CD/one direction/NNP/direction. this/DT/this makes/VBZ/makes linked/VBN/linked lists/NNS/lists unsuitable/JJ/unsuitable for/IN/for applications/NNS/applications where/WRB/where it/PRP/it 's/VBZ/'s useful/JJ/useful to/TO/to look/VB/look up/RP/up an/DT/an element/NN/element by/IN/by its/PRP$/its index/NN/index quickly/RB/quickly /,/, such/JJ/such as/IN/as heapsort/NNP/heapsort. sequential/JJ/sequential access/NN/access on/IN/on arrays/NNS/arrays and/CC/and dynamic/JJ/dynamic arrays/NNS/arrays is/VBZ/is also/RB/also faster/JJR/faster than/IN/than on/IN/on linked/VBN/linked lists/NNS/lists on/IN/on many/JJ/many machines/NNS/machines /,/, because/IN/because they/PRP/they have/VBP/have optimal/JJ/optimal locality/NN/locality of/IN/of referenceand/NN/referenceand thus/RB/thus make/VB/make good/JJ/good use/NN/use of/IN/of data/NNS/data caching/NNP/caching. another/DT/another disadvantage/NN/disadvantage of/IN/of linked/VBN/linked lists/NNS/lists is/VBZ/is the/DT/the extra/JJ/extra storage/NN/storage needed/VBN/needed for/IN/for references/NNS/references /,/, which/WDT/which often/RB/often makes/VBZ/makes them/PRP/them impractical/JJ/impractical for/IN/for lists/NNS/lists of/IN/of small/JJ/small data/NNS/data items/NNS/items such/JJ/such as/IN/as characters/NNS/characters or/CC/or boolean/JJ/boolean values/NNS/values /,/, because/IN/because the/DT/the storage/NN/storage overhead/NN/overhead for/IN/for the/DT/the links/NNS/links may/MD/may exceed/VB/exceed by/IN/by a/DT/a factor/NN/factor of/IN/of two/CD/two or/CC/or more/JJR/more the/DT/the size/NN/size of/IN/of the/DT/the data/NNP/data. in/IN/in contrast/NN/contrast /,/, a/DT/a dynamic/JJ/dynamic array/NN/array requires/VBZ/requires only/RB/only the/DT/the space/NN/space for/IN/for the/DT/the data/NNS/data itself/PRP/itself /VBP/( and/CC/and a/DT/a very/RB/very small/JJ/small amount/NN/amount of/IN/of control/NN/control data/NNS/data /:/) /./. /:/[ note/NN/note 1/CD/1 /CD/] it/PRP/it can/MD/can also/RB/also be/VB/be slow/JJ/slow /,/, and/CC/and with/IN/with a/DT/a na/NN/na ve/NN/ve allocator/NN/allocator /,/, wasteful/JJ/wasteful /,/, to/TO/to allocate/VB/allocate memory/NN/memory separately/RB/separately for/IN/for each/DT/each new/JJ/new element/NN/element /,/, a/DT/a problem/NN/problem generally/RB/generally solved/VBN/solved using/VBG/using memory/NN/memory pools/NNP/pools. some/DT/some hybrid/JJ/hybrid solutions/NNS/solutions try/VBP/try to/TO/to combine/VB/combine the/DT/the advantages/NNS/advantages of/IN/of the/DT/the two/CD/two representations/NNP/representations. unrolled/VBD/unrolled linked/VBN/linked lists/NNS/lists store/IN/store several/JJ/several elements/NNS/elements in/IN/in each/DT/each list/NN/list node/NN/node /,/, increasing/VBG/increasing cache/PRP/cache performance/NN/performance while/IN/while decreasing/VBG/decreasing memory/NN/memory overhead/NN/overhead for/IN/for references/NNP/references. cdr/NN/cdr coding/VBG/coding does/VBZ/does both/DT/both these/DT/these as/IN/as well/RB/well /,/, by/IN/by replacing/NN/replacing references/NNS/references with/IN/with the/DT/the actual/JJ/actual data/NNS/data referenced/VBN/referenced /,/, which/WDT/which extends/NNS/extends off/IN/off the/DT/the end/NN/end of/IN/of the/DT/the referencing/NN/referencing record/NNP/record. a/DT/a good/JJ/good example/NN/example that/WDT/that highlights/VBZ/highlights the/DT/the pros/NNS/pros and/CC/and cons/NNS/cons of/IN/of using/VBG/using dynamic/JJ/dynamic arrays/NNS/arrays vs/NNP/vs. linked/VBD/linked lists/NNS/lists is/VBZ/is by/IN/by implementing/NN/implementing a/DT/a program/NN/program that/WDT/that resolves/VBZ/resolves the/DT/the josephus/NN/josephus problem/NNP/problem. the/DT/the josephus/NN/josephus problem/NN/problem is/VBZ/is an/DT/an election/NN/election method/NN/method that/WDT/that works/VBZ/works by/IN/by having/VBG/having a/DT/a group/NN/group of/IN/of people/NNS/people stand/VBP/stand in/IN/in a/DT/a circle/NNP/circle. starting/NN/starting at/IN/at a/DT/a predetermined/VBN/predetermined person/NN/person /,/, you/PRP/you count/VBP/count around/RP/around the/DT/the circle/NN/circle n/NN/n times/NNP/times. once/RB/once you/PRP/you reach/VBP/reach the/DT/the nth/NN/nth person/NN/person /,/, take/VBP/take them/PRP/them out/RP/out of/IN/of the/DT/the circle/NN/circle and/CC/and have/VB/have the/DT/the members/NNS/members close/VBP/close the/DT/the circle/NNP/circle. then/RB/then count/NN/count around/IN/around the/DT/the circle/NN/circle the/DT/the same/JJ/same n/NN/n times/NNS/times and/CC/and repeat/NN/repeat the/DT/the process/NN/process /,/, until/IN/until only/RB/only one/CD/one person/NN/person is/VBZ/is left/NNP/left. that/IN/that person/NN/person wins/NNS/wins the/DT/the election/NNP/election. this/DT/this shows/VBZ/shows the/DT/the strengths/NNS/strengths and/CC/and weaknesses/NNS/weaknesses of/IN/of a/DT/a linked/VBN/linked list/NN/list vs/NNP/vs. a/DT/a dynamic/JJ/dynamic array/NN/array /,/, because/IN/because if/IN/if you/PRP/you view/VBP/view the/DT/the people/NNS/people as/IN/as connected/VBN/connected nodes/NNS/nodes in/IN/in a/DT/a circular/JJ/circular linked/VBN/linked list/NN/list then/RB/then it/PRP/it shows/VBZ/shows how/WRB/how easily/RB/easily the/DT/the linked/VBN/linked list/NN/list is/VBZ/is able/JJ/able to/TO/to delete/VB/delete nodes/NNS/nodes /:/( as/IN/as it/PRP/it only/RB/only has/VBZ/has to/TO/to rearrange/VB/rearrange the/DT/the links/NNS/links to/TO/to the/DT/the different/JJ/different nodes/NNS/nodes /:/) /./. however/RB/however /,/, the/DT/the linked/VBN/linked list/NN/list will/MD/will be/VB/be poor/JJ/poor at/IN/at finding/NN/finding the/DT/the next/JJ/next person/NN/person to/TO/to remove/VB/remove and/CC/and will/MD/will need/VB/need to/TO/to search/VB/search through/IN/through the/DT/the list/NN/list until/IN/until it/PRP/it finds/VBZ/finds that/IN/that person/NNP/person. a/DT/a dynamic/JJ/dynamic array/NN/array /,/, on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, will/MD/will be/VB/be poor/JJ/poor at/IN/at deleting/NN/deleting nodes/NNS/nodes /:/( or/CC/or elements/NNS/elements /:/) as/IN/as it/PRP/it can/MD/can not/RB/not remove/VB/remove one/CD/one node/NN/node without/IN/without individually/RB/individually shifting/VBG/shifting all/DT/all the/DT/the elements/NNS/elements up/IN/up the/DT/the list/NN/list by/IN/by one/NNP/one. however/RB/however /,/, it/PRP/it is/VBZ/is exceptionally/RB/exceptionally easy/JJ/easy to/TO/to find/VB/find the/DT/the nth/NN/nth person/NN/person in/IN/in the/DT/the circle/NN/circle by/IN/by directly/RB/directly referencing/VBG/referencing them/PRP/them by/IN/by their/PRP$/their position/NN/position in/IN/in the/DT/the array/NNP/array. the/DT/the list/NN/list ranking/VBG/ranking problem/NN/problem concerns/NNS/concerns the/DT/the efficient/NN/efficient conversion/NN/conversion of/IN/of a/DT/a linked/VBN/linked list/NN/list representation/NN/representation into/IN/into an/DT/an array/NNP/array. although/IN/although trivial/JJ/trivial for/IN/for a/DT/a conventional/JJ/conventional computer/NN/computer /,/, solving/VBG/solving this/DT/this problem/NN/problem by/IN/by aparallel/NN/aparallel algorithm/NN/algorithm is/VBZ/is complicated/VBN/complicated and/CC/and has/VBZ/has been/VBN/been the/DT/the subject/NN/subject of/IN/of much/JJ/much research/NNP/research. a/DT/a balanced/JJ/balanced tree/NN/tree has/VBZ/has similar/JJ/similar memory/NN/memory access/NN/access patterns/NNS/patterns and/CC/and space/NN/space overhead/NN/overhead to/TO/to a/DT/a linked/VBN/linked list/NN/list while/IN/while permitting/VBG/permitting much/JJ/much more/JJR/more efficient/JJ/efficient indexing/NN/indexing /,/, taking/VBG/taking o/NN/o /:/( log/NN/log n/NN/n /:/) time/NN/time instead/RB/instead of/IN/of o/NN/o /:/( n/NN/n /:/) for/IN/for a/DT/a random/NN/random access/NNP/access. however/RB/however /,/, insertion/NN/insertion and/CC/and deletion/NN/deletion operations/NNS/operations are/VBP/are more/RBR/more expensive/JJ/expensive due/JJ/due to/TO/to the/DT/the overhead/NN/overhead of/IN/of tree/NN/tree manipulations/NNS/manipulations to/TO/to maintain/VB/maintain balance/NNP/balance. schemes/NNS/schemes exist/VBP/exist for/IN/for trees/NNS/trees to/TO/to automatically/RB/automatically maintain/VB/maintain themselves/PRP/themselves in/IN/in a/DT/a balanced/JJ/balanced state/NN/state /:/: avl/NN/avl trees/NNS/trees or/CC/or red-black/JJ/red-black trees/NNP/trees. singly/RB/singly linked/VBD/linked linear/JJ/linear lists/NNS/lists vs/NNP/vs. other/JJ/other lists/NNS/lists /:/[ edit/NN/edit /:/] while/IN/while doubly-linked/JJ/doubly-linked and/CC/and circular/JJ/circular lists/NNS/lists have/VBP/have advantages/NNS/advantages over/IN/over singly-linked/JJ/singly-linked linear/NN/linear lists/NNS/lists /,/, linear/JJ/linear lists/NNS/lists offer/VBP/offer some/DT/some advantages/NNS/advantages that/WDT/that make/VBP/make them/PRP/them preferable/JJ/preferable in/IN/in some/DT/some situations/NNP/situations. a/DT/a singly/RB/singly linked/VBN/linked linear/JJ/linear list/NN/list is/VBZ/is a/DT/a recursive/JJ/recursive data/NNS/data structure/NN/structure /,/, because/IN/because it/PRP/it contains/VBZ/contains a/DT/a pointer/NN/pointer to/TO/to a/DT/a smaller/JJR/smaller object/NN/object of/IN/of the/DT/the same/JJ/same type/NNP/type. for/IN/for that/DT/that reason/NN/reason /,/, many/JJ/many operations/NNS/operations on/IN/on singly/RB/singly linked/VBN/linked linear/JJ/linear lists/NNS/lists /:/( such/JJ/such as/IN/as merging/NN/merging two/CD/two lists/NNS/lists /,/, or/CC/or enumerating/VBG/enumerating the/DT/the elements/NNS/elements in/IN/in reverse/NN/reverse order/NN/order /:/) often/RB/often have/VBP/have very/RB/very simple/JJ/simple recursive/JJ/recursive algorithms/NNS/algorithms /,/, much/RB/much simpler/JJR/simpler than/IN/than any/DT/any solution/NN/solution using/VBG/using iterative/JJ/iterative commands/NNP/commands. while/IN/while those/DT/those recursive/JJ/recursive solutions/NNS/solutions can/MD/can be/VB/be adapted/VBN/adapted for/IN/for doubly/RB/doubly linked/VBN/linked and/CC/and circularly/RB/circularly linked/VBN/linked lists/NNS/lists /,/, the/DT/the procedures/NNS/procedures generally/RB/generally need/VBP/need extra/JJ/extra arguments/NNS/arguments and/CC/and more/JJR/more complicated/JJ/complicated base/NN/base cases/NNP/cases. linear/NN/linear singly/RB/singly linked/VBN/linked lists/NNS/lists also/RB/also allow/VBP/allow tail-sharing/JJ/tail-sharing /,/, the/DT/the use/NN/use of/IN/of a/DT/a common/JJ/common final/JJ/final portion/NN/portion of/IN/of sub-list/JJ/sub-list as/IN/as the/DT/the terminal/JJ/terminal portion/NN/portion of/IN/of two/CD/two different/JJ/different lists/NNP/lists. in/IN/in particular/JJ/particular /,/, if/IN/if a/DT/a new/JJ/new node/NN/node is/VBZ/is added/VBN/added at/IN/at the/DT/the beginning/NN/beginning of/IN/of a/DT/a list/NN/list /,/, the/DT/the former/JJ/former list/NN/list remains/VBZ/remains available/JJ/available as/IN/as the/DT/the tail/NN/tail of/IN/of the/DT/the new/JJ/new one/CD/one a/DT/a simple/JJ/simple example/NN/example of/IN/of a/DT/a persistent/JJ/persistent data/NNS/data structure/NNP/structure. again/RB/again /,/, this/DT/this is/VBZ/is not/RB/not true/JJ/true with/IN/with the/DT/the other/JJ/other variants/NNS/variants /:/: a/DT/a node/NN/node may/MD/may never/RB/never belong/VB/belong to/TO/to two/CD/two different/JJ/different circular/JJ/circular or/CC/or doubly/RB/doubly linked/VBN/linked lists/NNP/lists. in/IN/in particular/JJ/particular /,/, end-sentinel/NNP/end-sentinel nodes/VBZ/nodes can/MD/can be/VB/be shared/VBN/shared among/IN/among singly/RB/singly linked/VBN/linked non-circular/JJ/non-circular lists/NNP/lists. the/DT/the same/JJ/same end-sentinel/NN/end-sentinel node/NN/node may/MD/may be/VB/be used/VBN/used for/IN/for every/DT/every such/JJ/such list/NNP/list. in/IN/in lisp/NN/lisp /,/, for/IN/for example/NN/example /,/, every/DT/every proper/NN/proper list/NN/list ends/NNS/ends with/IN/with a/DT/a link/NN/link to/TO/to a/DT/a special/JJ/special node/NN/node /,/, denoted/VBD/denoted by/IN/by nil/NN/nil or/CC/or /CD/( /CD/) /,/, whose/WP$/whose car/NN/car and/CC/and cdr/NN/cdr links/NNS/links point/NN/point to/TO/to itself/NNP/itself. thus/RB/thus a/DT/a lisp/NN/lisp procedure/NN/procedure can/MD/can safely/RB/safely take/VB/take the/DT/the car/NN/car or/CC/or cdr/NN/cdr of/IN/of anylist/NNP/anylist. the/DT/the advantages/NNS/advantages of/IN/of the/DT/the fancy/NN/fancy variants/NNS/variants are/VBP/are often/RB/often limited/VBN/limited to/TO/to the/DT/the complexity/NN/complexity of/IN/of the/DT/the algorithms/NNS/algorithms /,/, not/RB/not in/IN/in their/PRP$/their efficiency/NNP/efficiency. a/DT/a circular/JJ/circular list/NN/list /,/, in/IN/in particular/JJ/particular /,/, can/MD/can usually/RB/usually be/VB/be emulated/VBN/emulated by/IN/by a/DT/a linear/JJ/linear list/NN/list together/RB/together with/IN/with two/CD/two variables/NNS/variables that/WDT/that point/NN/point to/TO/to the/DT/the first/JJ/first and/CC/and last/JJ/last nodes/NNS/nodes /,/, at/IN/at no/DT/no extra/JJ/extra cost/NNP/cost. doubly/RB/doubly linked/VBD/linked vs/NNP/vs. singly/RB/singly linked/VBD/linked /CD/[ edit/NN/edit /:/] double-linked/JJ/double-linked lists/NNS/lists require/VBP/require more/JJR/more space/NN/space per/IN/per node/NN/node /:/( unless/IN/unless one/CD/one uses/NNS/uses xor-linking/JJ/xor-linking /NN/) /,/, and/CC/and their/PRP$/their elementary/JJ/elementary operations/NNS/operations are/VBP/are more/RBR/more expensive/JJ/expensive ;/:/; but/CC/but they/PRP/they are/VBP/are often/RB/often easier/JJR/easier to/TO/to manipulate/VB/manipulate because/IN/because they/PRP/they allow/VBP/allow fast/JJ/fast and/CC/and easy/JJ/easy sequential/JJ/sequential access/NN/access to/TO/to the/DT/the list/NN/list in/IN/in both/DT/both directions/NNP/directions. in/IN/in a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list /,/, one/CD/one can/MD/can insert/VB/insert or/CC/or delete/VB/delete a/DT/a node/NN/node in/IN/in a/DT/a constant/NN/constant number/NN/number of/IN/of operations/NNS/operations given/VBN/given only/RB/only that/IN/that node/NN/node 's/POS/'s address/NNP/address. to/TO/to do/VB/do the/DT/the same/JJ/same in/IN/in a/DT/a singly/RB/singly linked/VBN/linked list/NN/list /,/, one/CD/one must/MD/must have/VB/have the/DT/the address/NN/address of/IN/of the/DT/the pointer/NN/pointer to/TO/to that/DT/that node/NN/node /,/, which/WDT/which is/VBZ/is either/DT/either the/DT/the handle/NN/handle for/IN/for the/DT/the whole/JJ/whole list/NN/list /:/( in/IN/in case/NN/case of/IN/of the/DT/the first/JJ/first node/NN/node /:/) or/CC/or the/DT/the link/NN/link field/NN/field in/IN/in the/DT/the previous/JJ/previous node/NNP/node. some/DT/some algorithms/NNS/algorithms require/VBP/require access/NN/access in/IN/in both/DT/both directions/NNP/directions. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, doubly/RB/doubly linked/VBN/linked lists/NNS/lists do/VBP/do not/RB/not allow/VB/allow tail-sharing/JJ/tail-sharing and/CC/and can/MD/can not/RB/not be/VB/be used/VBN/used as/IN/as persistent/JJ/persistent data/NNS/data structures/NNP/structures. circularly/RB/circularly linked/VBD/linked vs/NNP/vs. linearly/RB/linearly linked/VBD/linked /CD/[ edit/NN/edit /:/] a/DT/a circularly/RB/circularly linked/VBN/linked list/NN/list may/MD/may be/VB/be a/DT/a natural/JJ/natural option/NN/option to/TO/to represent/VB/represent arrays/NNS/arrays that/WDT/that are/VBP/are naturally/RB/naturally circular/JJ/circular /,/, e.g/NNP/e.g. the/DT/the corners/NNS/corners of/IN/of a/DT/a polygon/NN/polygon /,/, a/DT/a pool/NN/pool of/IN/of buffers/NNS/buffers that/WDT/that are/VBP/are used/VBN/used and/CC/and released/VBN/released in/IN/in fifo/NN/fifo /:/( "/:/" first/JJ/first in/IN/in /,/, first/JJ/first out/IN/out "/NNP/" /NNP/) order/NN/order /,/, or/CC/or a/DT/a set/NN/set of/IN/of processes/NNS/processes that/WDT/that should/MD/should be/VB/be time-shared/JJ/time-shared in/IN/in round-robin/JJ/round-robin order/NNP/order. in/IN/in these/DT/these applications/NNS/applications /,/, a/DT/a pointer/NN/pointer to/TO/to any/DT/any node/NN/node serves/VBZ/serves as/IN/as a/DT/a handle/NN/handle to/TO/to the/DT/the whole/JJ/whole list/NNP/list. with/IN/with a/DT/a circular/JJ/circular list/NN/list /,/, a/DT/a pointer/NN/pointer to/TO/to the/DT/the last/JJ/last node/NN/node gives/VBZ/gives easy/JJ/easy access/NN/access also/RB/also to/TO/to the/DT/the first/JJ/first node/NN/node /,/, by/IN/by following/VBG/following one/CD/one link/NNP/link. thus/RB/thus /,/, in/IN/in applications/NNS/applications that/WDT/that require/NN/require access/NN/access to/TO/to both/DT/both ends/NNS/ends of/IN/of the/DT/the list/NN/list /:/( e.g/NNP/e.g. /,/, in/IN/in the/DT/the implementation/NN/implementation of/IN/of a/DT/a queue/NN/queue /:/) /,/, a/DT/a circular/JJ/circular structure/NN/structure allows/VBZ/allows one/CD/one to/TO/to handle/VB/handle the/DT/the structure/NN/structure by/IN/by a/DT/a single/JJ/single pointer/NN/pointer /,/, instead/RB/instead of/IN/of two/NNP/two. a/DT/a circular/JJ/circular list/NN/list can/MD/can be/VB/be split/VBN/split into/IN/into two/CD/two circular/JJ/circular lists/NNS/lists /,/, in/IN/in constant/JJ/constant time/NN/time /,/, by/IN/by giving/NN/giving the/DT/the addresses/NNS/addresses of/IN/of the/DT/the last/JJ/last node/NN/node of/IN/of each/DT/each piece/NNP/piece. the/DT/the operation/NN/operation consists/VBZ/consists in/IN/in swapping/NN/swapping the/DT/the contents/NNS/contents of/IN/of the/DT/the link/NN/link fields/NNS/fields of/IN/of those/DT/those two/CD/two nodes/NNP/nodes. applying/NN/applying the/DT/the same/JJ/same operation/NN/operation to/TO/to any/DT/any two/CD/two nodes/NNS/nodes in/IN/in two/CD/two distinct/JJ/distinct lists/NNS/lists joins/VBZ/joins the/DT/the two/CD/two list/NN/list into/IN/into one/NNP/one. this/DT/this property/NN/property greatly/RB/greatly simplifies/VBZ/simplifies some/DT/some algorithms/NNS/algorithms and/CC/and data/NNS/data structures/NNS/structures /,/, such/JJ/such as/IN/as the/DT/the quad-edge/NN/quad-edge and/CC/and face-edge/NNP/face-edge. the/DT/the simplest/JJS/simplest representation/NN/representation for/IN/for an/DT/an empty/NN/empty circular/NN/circular list/NN/list /:/( when/WRB/when such/JJ/such a/DT/a thing/NN/thing makes/VBZ/makes sense/NN/sense /:/) is/VBZ/is a/DT/a null/JJ/null pointer/NN/pointer /,/, indicating/VBG/indicating that/IN/that the/DT/the list/NN/list has/VBZ/has no/DT/no nodes/NNP/nodes. without/IN/without this/DT/this choice/NN/choice /,/, many/JJ/many algorithms/NNS/algorithms have/VBP/have to/TO/to test/NN/test for/IN/for this/DT/this special/JJ/special case/NN/case /,/, and/CC/and handle/VB/handle it/PRP/it separately/NNP/separately. by/IN/by contrast/NN/contrast /,/, the/DT/the use/NN/use of/IN/of null/NN/null to/TO/to denote/VB/denote an/DT/an empty/NN/empty linear/NN/linear list/NN/list is/VBZ/is more/RBR/more natural/JJ/natural and/CC/and often/RB/often creates/VBZ/creates fewer/JJR/fewer special/JJ/special cases/NNP/cases. using/NN/using sentinel/NN/sentinel nodes/VBZ/nodes /:/[ edit/NN/edit /:/] sentinel/NN/sentinel node/NN/node may/MD/may simplify/VB/simplify certain/JJ/certain list/NN/list operations/NNS/operations /,/, by/IN/by ensuring/NN/ensuring that/IN/that the/DT/the next/JJ/next or/CC/or previous/JJ/previous nodes/NNS/nodes exist/VBP/exist for/IN/for every/DT/every element/NN/element /,/, and/CC/and that/IN/that even/RB/even empty/JJ/empty lists/NNS/lists have/VBP/have at/IN/at least/JJS/least one/CD/one node/NNP/node. one/CD/one may/MD/may also/RB/also use/VB/use a/DT/a sentinel/NN/sentinel node/NN/node at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /,/, with/IN/with an/DT/an appropriate/JJ/appropriate data/NNS/data field/NN/field /,/, to/TO/to eliminate/VB/eliminate some/DT/some end-of-list/JJ/end-of-list tests/NNP/tests. for/IN/for example/NN/example /,/, when/WRB/when scanning/VBG/scanning the/DT/the list/NN/list looking/VBG/looking for/IN/for a/DT/a node/NN/node with/IN/with a/DT/a given/VBN/given value/NN/value x/NN/x /,/, setting/VBG/setting the/DT/the sentinel/NN/sentinel 's/POS/'s data/NNS/data field/NN/field to/TO/to x/VB/x makes/NNS/makes it/PRP/it unnecessary/VBP/unnecessary to/TO/to test/NN/test for/IN/for end-of-list/JJ/end-of-list inside/NN/inside the/DT/the loop/NNP/loop. another/DT/another example/NN/example is/VBZ/is the/DT/the merging/NN/merging two/CD/two sorted/VBN/sorted lists/NNS/lists /:/: if/IN/if their/PRP$/their sentinels/NNS/sentinels have/VBP/have data/NNS/data fields/NNS/fields set/VBP/set to/TO/to +/VB/+ /,/, the/DT/the choice/NN/choice of/IN/of the/DT/the next/JJ/next output/NN/output node/NN/node does/VBZ/does not/RB/not need/VBP/need special/JJ/special handling/NN/handling for/IN/for empty/NN/empty lists/NNP/lists. however/RB/however /,/, sentinel/NN/sentinel nodes/VBZ/nodes use/NN/use up/IN/up extra/JJ/extra space/NN/space /:/( especially/RB/especially in/IN/in applications/NNS/applications that/WDT/that use/NN/use many/JJ/many short/JJ/short lists/NNS/lists /:/) /,/, and/CC/and they/PRP/they may/MD/may complicate/VB/complicate other/JJ/other operations/NNS/operations /:/( such/JJ/such as/IN/as the/DT/the creation/NN/creation of/IN/of a/DT/a new/JJ/new empty/NN/empty list/NN/list /:/) /./. however/RB/however /,/, if/IN/if the/DT/the circular/JJ/circular list/NN/list is/VBZ/is used/VBN/used merely/RB/merely to/TO/to simulate/VB/simulate a/DT/a linear/JJ/linear list/NN/list /,/, one/CD/one may/MD/may avoid/VB/avoid some/DT/some of/IN/of this/DT/this complexity/NN/complexity by/IN/by adding/NN/adding a/DT/a single/JJ/single sentinel/NN/sentinel node/NN/node to/TO/to every/DT/every list/NN/list /,/, between/IN/between the/DT/the last/JJ/last and/CC/and the/DT/the first/JJ/first data/NNS/data nodes/NNP/nodes. with/IN/with this/DT/this convention/NN/convention /,/, an/DT/an empty/NN/empty list/NN/list consists/NNS/consists of/IN/of the/DT/the sentinel/NN/sentinel node/NN/node alone/NN/alone /,/, pointing/VBG/pointing to/TO/to itself/PRP/itself via/IN/via the/DT/the next-node/JJ/next-node link/NNP/link. the/DT/the list/NN/list handle/NN/handle should/MD/should then/RB/then be/VB/be a/DT/a pointer/NN/pointer to/TO/to the/DT/the last/JJ/last data/NNS/data node/VBP/node /,/, before/IN/before the/DT/the sentinel/NN/sentinel /,/, if/IN/if the/DT/the list/NN/list is/VBZ/is not/RB/not empty/JJ/empty ;/:/; or/CC/or to/TO/to the/DT/the sentinel/NN/sentinel itself/PRP/itself /,/, if/IN/if the/DT/the list/NN/list is/VBZ/is empty/NNP/empty. the/DT/the same/JJ/same trick/NN/trick can/MD/can be/VB/be used/VBN/used to/TO/to simplify/VB/simplify the/DT/the handling/NN/handling of/IN/of a/DT/a doubly/RB/doubly linked/VBN/linked linear/JJ/linear list/NN/list /,/, by/IN/by turning/NN/turning it/PRP/it into/IN/into a/DT/a circular/JJ/circular doubly/RB/doubly linked/VBN/linked list/NN/list with/IN/with a/DT/a single/JJ/single sentinel/NN/sentinel node/NNP/node. however/RB/however /,/, in/IN/in this/DT/this case/NN/case /,/, the/DT/the handle/NN/handle should/MD/should be/VB/be a/DT/a single/JJ/single pointer/NN/pointer to/TO/to the/DT/the dummy/NN/dummy node/NN/node itself/NNP/itself. /NNP/[ 6/CD/6 /CD/] linked/VBN/linked list/NN/list operations/NNS/operations /:/[ edit/NN/edit /:/] when/WRB/when manipulating/VBG/manipulating linked/VBN/linked lists/NNS/lists in-place/-NONE-/in-place /,/, care/NN/care must/MD/must be/VB/be taken/VBN/taken to/TO/to not/RB/not use/VB/use values/NNS/values that/WDT/that you/PRP/you have/VBP/have invalidated/VBN/invalidated in/IN/in previous/JJ/previous assignments/NNP/assignments. this/DT/this makes/VBZ/makes algorithms/NNS/algorithms for/IN/for inserting/VBG/inserting or/CC/or deleting/VBG/deleting linked/VBN/linked list/NN/list nodes/NNS/nodes somewhat/WDT/somewhat subtle/NNP/subtle. this/DT/this section/NN/section gives/VBZ/gives pseudocode/NN/pseudocode for/IN/for adding/NN/adding or/CC/or removing/VBG/removing nodes/NNS/nodes from/IN/from singly/RB/singly /,/, doubly/RB/doubly /,/, and/CC/and circularly/RB/circularly linked/VBN/linked lists/NNS/lists in-place/NNP/in-place. throughout/IN/throughout we/PRP/we will/MD/will use/VB/use nullto/NN/nullto refer/NN/refer to/TO/to an/DT/an end-of-list/JJ/end-of-list marker/NN/marker or/CC/or sentinel/NN/sentinel /,/, which/WDT/which may/MD/may be/VB/be implemented/VBN/implemented in/IN/in a/DT/a number/NN/number of/IN/of ways/NNP/ways. linearly/RB/linearly linked/VBD/linked lists/NNS/lists /:/[ edit/NN/edit /:/] singly/RB/singly linked/VBN/linked lists/NNS/lists /:/[ edit/NN/edit /:/] our/PRP$/our node/NN/node data/NNS/data structure/NN/structure will/MD/will have/VB/have two/CD/two fields/NNP/fields. we/PRP/we also/RB/also keep/VB/keep a/DT/a variable/JJ/variable firstnode/NN/firstnode which/WDT/which always/RB/always points/VBZ/points to/TO/to the/DT/the first/JJ/first node/NN/node in/IN/in the/DT/the list/NN/list /,/, or/CC/or is/VBZ/is null/JJ/null for/IN/for an/DT/an empty/NN/empty list/NNP/list. record/NN/record node/NN/node /:/{ data/NNS/data ;/:/; the/DT/the data/NNS/data being/VBG/being stored/VBN/stored in/IN/in the/DT/the node/NN/node node/NN/node next/IN/next a/DT/a reference/NN/reference to/TO/to the/DT/the next/JJ/next node/NN/node /,/, null/JJ/null for/IN/for last/JJ/last node/NN/node /:/} record/NN/record list/NN/list /:/{ node/NN/node firstnode/NN/firstnode points/NNS/points to/TO/to first/JJ/first node/NN/node of/IN/of list/NN/list ;/:/; null/NN/null for/IN/for empty/NN/empty list/NN/list /:/} traversal/NN/traversal of/IN/of a/DT/a singly/RB/singly linked/VBN/linked list/NN/list is/VBZ/is simple/JJ/simple /,/, beginning/NN/beginning at/IN/at the/DT/the first/JJ/first node/NN/node and/CC/and following/VBG/following each/DT/each next/JJ/next link/NN/link until/IN/until we/PRP/we come/VBP/come to/TO/to the/DT/the end/NN/end /:/: node/NN/node /:/: =/:/= list.firstnode/JJ/list.firstnode while/IN/while node/NN/node not/RB/not null/JJ/null /NN/( do/VBP/do something/NN/something with/IN/with node.data/NNP/node.data /NNP/) node/NN/node /:/: =/:/= node.next/JJ/node.next the/DT/the following/VBG/following code/NN/code inserts/NNS/inserts a/DT/a node/NN/node after/IN/after an/DT/an existing/VBG/existing node/NN/node in/IN/in a/DT/a singly/RB/singly linked/VBN/linked list/NNP/list. the/DT/the diagram/NN/diagram shows/VBZ/shows how/WRB/how it/PRP/it works/NNP/works. inserting/VBG/inserting a/DT/a node/NN/node before/IN/before an/DT/an existing/VBG/existing one/CD/one can/MD/can not/RB/not be/VB/be done/VBN/done directly/RB/directly ;/:/; instead/RB/instead /,/, one/CD/one must/MD/must keep/VB/keep track/NN/track of/IN/of the/DT/the previous/JJ/previous node/NN/node and/CC/and insert/NN/insert a/DT/a node/NN/node after/IN/after it/NNP/it. function/NN/function insertafter/NN/insertafter /:/( node/NN/node node/NN/node /,/, node/NN/node newnode/NN/newnode /:/) insert/NN/insert newnode/NN/newnode after/IN/after node/NN/node newnode.next/JJ/newnode.next /:/: =/:/= node.next/JJ/node.next node.next/JJ/node.next /:/: =/:/= newnode/NN/newnode inserting/NN/inserting at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list requires/VBZ/requires a/DT/a separate/JJ/separate function/NNP/function. this/DT/this requires/VBZ/requires updating/VBG/updating firstnode/NNP/firstnode. function/NN/function insertbeginning/VBG/insertbeginning /NN/( list/NN/list list/NN/list /,/, node/NN/node newnode/NN/newnode /:/) insert/NN/insert node/NN/node before/IN/before current/JJ/current first/JJ/first node/NN/node newnode.next/JJ/newnode.next /:/: =/:/= list.firstnode/JJ/list.firstnode list.firstnode/JJ/list.firstnode /:/: =/:/= newnode/NN/newnode similarly/RB/similarly /,/, we/PRP/we have/VBP/have functions/NNS/functions for/IN/for removing/VBG/removing the/DT/the node/NN/node after/IN/after a/DT/a given/VBN/given node/NN/node /,/, and/CC/and for/IN/for removing/NN/removing a/DT/a node/NN/node from/IN/from the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NNP/list. the/DT/the diagram/NN/diagram demonstrates/VBZ/demonstrates the/DT/the former/NNP/former. to/TO/to find/VB/find and/CC/and remove/VB/remove a/DT/a particular/JJ/particular node/NN/node /,/, one/CD/one must/MD/must again/RB/again keep/VB/keep track/NN/track of/IN/of the/DT/the previous/JJ/previous element/NNP/element. function/NN/function removeafter/NN/removeafter /:/( node/NN/node node/NN/node /:/) remove/NN/remove node/NN/node past/NN/past this/DT/this one/CD/one obsoletenode/NN/obsoletenode /:/: =/:/= node.next/JJ/node.next node.next/JJ/node.next /:/: =/:/= node.next.next/JJ/node.next.next destroy/NN/destroy obsoletenode/NN/obsoletenode function/NN/function removebeginning/VBG/removebeginning /NN/( list/NN/list list/NN/list /:/) remove/NN/remove first/RB/first node/VBP/node obsoletenode/NN/obsoletenode /:/: =/:/= list.firstnode/JJ/list.firstnode list.firstnode/JJ/list.firstnode /:/: =/:/= list.firstnode.next/JJ/list.firstnode.next point/NN/point past/NN/past deleted/VBD/deleted node/NN/node destroy/NN/destroy obsoletenode/NN/obsoletenode notice/NN/notice that/WDT/that removebeginning/VBG/removebeginning /:/( /:/) sets/NNS/sets list.firstnode/JJ/list.firstnode to/TO/to null/VB/null when/WRB/when removing/VBG/removing the/DT/the last/JJ/last node/NN/node in/IN/in the/DT/the list/NNP/list. since/IN/since we/PRP/we ca/MD/ca n't/RB/n't iterate/VB/iterate backwards/NNS/backwards /,/, efficient/JJ/efficient insertbefore/NN/insertbefore or/CC/or removebefore/VB/removebefore operations/NNS/operations are/VBP/are not/RB/not possible/NNP/possible. appending/NN/appending one/CD/one linked/VBN/linked list/NN/list to/TO/to another/DT/another can/NN/can be/VB/be inefficient/VBN/inefficient unless/IN/unless a/DT/a reference/NN/reference to/TO/to the/DT/the tail/NN/tail is/VBZ/is kept/VBN/kept as/RB/as part/NN/part of/IN/of the/DT/the list/NN/list structure/NN/structure /,/, because/IN/because we/PRP/we must/MD/must traverse/VB/traverse the/DT/the entire/JJ/entire first/JJ/first list/NN/list in/IN/in order/NN/order to/TO/to find/VB/find the/DT/the tail/NN/tail /,/, and/CC/and then/RB/then append/VB/append the/DT/the second/JJ/second list/NN/list to/TO/to this/NNP/this. thus/RB/thus /,/, if/IN/if two/CD/two linearly/RB/linearly linked/VBN/linked lists/NNS/lists are/VBP/are each/DT/each of/IN/of length/NN/length /,/, list/NN/list appending/VBG/appending has/VBZ/has asymptotic/JJ/asymptotic time/NN/time complexity/NN/complexity of/IN/of /./. in/IN/in the/DT/the lisp/NN/lisp family/NN/family of/IN/of languages/NNS/languages /,/, list/NN/list appending/VBG/appending is/VBZ/is provided/VBN/provided by/IN/by the/DT/the append/NN/append procedure/NNP/procedure. many/JJ/many of/IN/of the/DT/the special/JJ/special cases/NNS/cases of/IN/of linked/VBN/linked list/NN/list operations/NNS/operations can/MD/can be/VB/be eliminated/VBN/eliminated by/IN/by including/NN/including a/DT/a dummy/NN/dummy element/NN/element at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the list/NNP/list. this/DT/this ensures/NNS/ensures that/IN/that there/EX/there are/VBP/are no/DT/no special/JJ/special cases/NNS/cases for/IN/for the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list and/CC/and renders/NNS/renders both/DT/both insertbeginning/VBG/insertbeginning /:/( /:/) and/CC/and removebeginning/VBG/removebeginning /:/( /:/) unnecessary/NNP/unnecessary. in/IN/in this/DT/this case/NN/case /,/, the/DT/the first/JJ/first useful/JJ/useful data/NNS/data in/IN/in the/DT/the list/NN/list will/MD/will be/VB/be found/VBN/found atlist.firstnode.next/NNP/atlist.firstnode.next. circularly/RB/circularly linked/VBD/linked list/NN/list /:/[ edit/NN/edit /:/] in/IN/in a/DT/a circularly/RB/circularly linked/VBN/linked list/NN/list /,/, all/DT/all nodes/NNS/nodes are/VBP/are linked/VBN/linked in/IN/in a/DT/a continuous/JJ/continuous circle/NN/circle /,/, without/IN/without using/VBG/using null/NNP/null. for/IN/for lists/NNS/lists with/IN/with a/DT/a front/NN/front and/CC/and a/DT/a back/NN/back /:/( such/JJ/such as/IN/as a/DT/a queue/NN/queue /:/) /,/, one/CD/one stores/NNS/stores a/DT/a reference/NN/reference to/TO/to the/DT/the last/JJ/last node/NN/node in/IN/in the/DT/the list/NNP/list. the/DT/the next/JJ/next node/NN/node after/IN/after the/DT/the last/JJ/last node/NN/node is/VBZ/is the/DT/the first/JJ/first node/NNP/node. elements/NNS/elements can/MD/can be/VB/be added/VBN/added to/TO/to the/DT/the back/NN/back of/IN/of the/DT/the list/NN/list and/CC/and removed/VBD/removed from/IN/from the/DT/the front/NN/front in/IN/in constant/NN/constant time/NNP/time. circularly/RB/circularly linked/VBD/linked lists/NNS/lists can/MD/can be/VB/be either/RB/either singly/RB/singly or/CC/or doubly/RB/doubly linked/NNP/linked. both/DT/both types/NNS/types of/IN/of circularly/RB/circularly linked/VBN/linked lists/NNS/lists benefit/NN/benefit from/IN/from the/DT/the ability/NN/ability to/TO/to traverse/VB/traverse the/DT/the full/JJ/full list/NN/list beginning/NN/beginning at/IN/at any/DT/any given/VBN/given node/NNP/node. this/DT/this often/RB/often allows/VBZ/allows us/PRP/us to/TO/to avoid/VB/avoid storing/NN/storing firstnode/NN/firstnode and/CC/and lastnode/NN/lastnode /,/, although/IN/although if/IN/if the/DT/the list/NN/list may/MD/may be/VB/be empty/JJ/empty we/PRP/we need/VBP/need a/DT/a special/JJ/special representation/NN/representation for/IN/for the/DT/the empty/NN/empty list/NN/list /,/, such/JJ/such as/IN/as a/DT/a lastnode/NN/lastnode variable/JJ/variable which/WDT/which points/NNS/points to/TO/to some/DT/some node/NN/node in/IN/in the/DT/the list/NN/list or/CC/or is/VBZ/is null/JJ/null if/IN/if it/PRP/it 's/VBZ/'s empty/JJ/empty ;/:/; we/PRP/we use/VBP/use such/JJ/such alastnode/NN/alastnode here/NNP/here. this/DT/this representation/NN/representation significantly/RB/significantly simplifies/VBZ/simplifies adding/VBG/adding and/CC/and removing/VBG/removing nodes/NNS/nodes with/IN/with a/DT/a non-empty/JJ/non-empty list/NN/list /,/, but/CC/but empty/JJ/empty lists/NNS/lists are/VBP/are then/RB/then a/DT/a special/JJ/special case/NNP/case. algorithms/NNS/algorithms /:/[ edit/NN/edit /:/] assuming/VBG/assuming that/IN/that somenode/NN/somenode is/VBZ/is some/DT/some node/NN/node in/IN/in a/DT/a non-empty/JJ/non-empty circular/NN/circular singly/RB/singly linked/VBN/linked list/NN/list /,/, this/DT/this code/NN/code iterates/VBZ/iterates through/IN/through that/DT/that list/NN/list starting/VBG/starting with/IN/with somenode/NN/somenode /:/: function/NN/function iterate/NN/iterate /:/( somenode/NN/somenode /:/) if/IN/if somenode/NN/somenode null/NN/null node/NN/node /:/: =/:/= somenode/NN/somenode do/VBP/do do/VBP/do something/NN/something with/IN/with node.value/JJ/node.value node/NN/node /:/: =/:/= node.next/JJ/node.next while/IN/while node/NN/node somenode/NN/somenode notice/NN/notice that/WDT/that the/DT/the test/NN/test "/:/" while/IN/while node/NN/node somenode/NN/somenode "/:/" must/MD/must be/VB/be at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the loop/NNP/loop. if/IN/if the/DT/the test/NN/test was/VBD/was moved/VBN/moved to/TO/to the/DT/the beginning/NN/beginning of/IN/of the/DT/the loop/NN/loop /,/, the/DT/the procedure/NN/procedure would/MD/would fail/VB/fail whenever/RB/whenever the/DT/the list/NN/list had/VBD/had only/RB/only one/CD/one node/NNP/node. this/DT/this function/NN/function inserts/NNS/inserts a/DT/a node/NN/node "/:/" newnode/NN/newnode "/:/" into/IN/into a/DT/a circular/JJ/circular linked/VBN/linked list/NN/list after/IN/after a/DT/a given/VBN/given node/NN/node "/:/" node/NN/node "/:/" /./. if/IN/if "/CD/" node/NN/node "/:/" is/VBZ/is null/JJ/null /,/, it/PRP/it assumes/VBZ/assumes that/IN/that the/DT/the list/NN/list is/VBZ/is empty/NNP/empty. function/NN/function insertafter/NN/insertafter /:/( node/NN/node node/NN/node /,/, node/NN/node newnode/NN/newnode /:/) if/IN/if node/NN/node =/:/= null/NN/null newnode.next/JJ/newnode.next /:/: =/:/= newnode/NN/newnode else/RB/else newnode.next/JJ/newnode.next /:/: =/:/= node.next/JJ/node.next node.next/JJ/node.next /:/: =/:/= newnode/NN/newnode suppose/NN/suppose that/WDT/that "/-NONE-/" l/VBP/l "/:/" is/VBZ/is a/DT/a variable/JJ/variable pointing/NN/pointing to/TO/to the/DT/the last/JJ/last node/NN/node of/IN/of a/DT/a circular/JJ/circular linked/VBN/linked list/NN/list /:/( or/CC/or null/JJ/null if/IN/if the/DT/the list/NN/list is/VBZ/is empty/JJ/empty /NN/) /./. to/TO/to append/VB/append "/:/" newnode/NN/newnode "/:/" to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /,/, one/CD/one may/MD/may do/VB/do insertafter/RBR/insertafter /VB/( l/NN/l /,/, newnode/NN/newnode /:/) l/NN/l /:/: =/:/= newnode/NN/newnode to/TO/to insert/VB/insert "/:/" newnode/NN/newnode "/:/" at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list /,/, one/CD/one may/MD/may do/VB/do insertafter/RBR/insertafter /VB/( l/NN/l /,/, newnode/NN/newnode /:/) if/IN/if l/NN/l =/:/= null/NN/null l/NN/l /:/: =/:/= newnode/NN/newnode linked/VBD/linked lists/NNS/lists using/VBG/using arrays/NNS/arrays of/IN/of node/NN/node /:/[ edit/NN/edit /:/] languages/NNS/languages that/WDT/that do/VBP/do not/RB/not support/VB/support any/DT/any type/NN/type of/IN/of reference/NN/reference can/MD/can still/RB/still create/VB/create links/NNS/links by/IN/by replacing/VBG/replacing pointers/NNS/pointers with/IN/with array/NN/array indices/NNP/indices. the/DT/the approach/NN/approach is/VBZ/is to/TO/to keep/VB/keep an/DT/an array/NN/array of/IN/of records/NNS/records /,/, where/WRB/where each/DT/each record/NN/record has/VBZ/has integer/JJR/integer fields/NNS/fields indicating/VBG/indicating the/DT/the index/NN/index of/IN/of the/DT/the next/JJ/next /NN/( and/CC/and possibly/RB/possibly previous/JJ/previous /NN/) node/NN/node in/IN/in the/DT/the array/NNP/array. not/RB/not all/DT/all nodes/NNS/nodes in/IN/in the/DT/the array/NN/array need/VBP/need be/VB/be used/NNP/used. if/IN/if records/NNS/records are/VBP/are also/RB/also not/RB/not supported,parallel/JJ/supported,parallel arrays/NNS/arrays can/MD/can often/RB/often be/VB/be used/VBN/used instead/-NONE-/instead. as/IN/as an/DT/an example/NN/example /,/, consider/NN/consider the/DT/the following/VBG/following linked/VBN/linked list/NN/list record/NN/record that/WDT/that uses/VBZ/uses arrays/VBZ/arrays instead/RB/instead of/IN/of pointers/NNS/pointers /:/: record/NN/record entry/NN/entry /:/{ integer/NN/integer next/IN/next ;/:/; index/NN/index of/IN/of next/JJ/next entry/NN/entry in/IN/in array/NN/array integer/NN/integer prev/NN/prev ;/:/; previous/JJ/previous entry/NN/entry /:/( if/IN/if double-linked/JJ/double-linked /NN/) string/VBG/string name/NN/name ;/:/; real/JJ/real balance/NN/balance ;/:/; /:/} a/DT/a linked/VBN/linked list/NN/list can/MD/can be/VB/be build/VBN/build by/IN/by creating/NN/creating an/DT/an array/NN/array of/IN/of these/DT/these structures/NNS/structures /,/, and/CC/and an/DT/an integer/NN/integer variable/JJ/variable to/TO/to store/VB/store the/DT/the index/NN/index of/IN/of the/DT/the first/JJ/first element/NNP/element. integer/NN/integer listhead/NN/listhead entry/NN/entry records/NNS/records /:/[ 1000/CD/1000 /CD/] links/NNS/links between/IN/between elements/NNS/elements are/VBP/are formed/VBN/formed by/IN/by placing/NN/placing the/DT/the array/NN/array index/NN/index of/IN/of the/DT/the next/JJ/next /NN/( or/CC/or previous/JJ/previous /NN/) cell/NN/cell into/IN/into the/DT/the next/JJ/next or/CC/or prev/NN/prev field/NN/field within/IN/within a/DT/a given/VBN/given element/NNP/element. for/IN/for example/NN/example /:/: index/NN/index next/IN/next prev/NN/prev name/NN/name balance/NN/balance 0/-NONE-/0 1/CD/1 4/CD/4 jones/NNS/jones /,/, john/NN/john 123.45/CD/123.45 1/CD/1 -1/-NONE-/-1 0/-NONE-/0 smith/NN/smith /,/, joseph/NN/joseph 234.56/CD/234.56 2/CD/2 /CD/( listhead/NN/listhead /:/) 4/CD/4 -1/-NONE-/-1 adams/NNS/adams /,/, adam/NN/adam 0.00/CD/0.00 3/CD/3 ignore/NN/ignore /,/, ignatius/VBZ/ignatius 999.99/CD/999.99 4/CD/4 0/-NONE-/0 2/CD/2 another/DT/another /,/, anita/NN/anita 876.54/CD/876.54 5/CD/5 6/CD/6 7/CD/7 in/IN/in the/DT/the above/NN/above example/NN/example /,/, listhead/NN/listhead would/MD/would be/VB/be set/VBN/set to/TO/to 2/CD/2 /,/, the/DT/the location/NN/location of/IN/of the/DT/the first/JJ/first entry/NN/entry in/IN/in the/DT/the list/NNP/list. notice/NN/notice that/WDT/that entry/NN/entry 3/CD/3 and/CC/and 5/CD/5 through/IN/through 7/CD/7 are/VBP/are not/RB/not part/NN/part of/IN/of the/DT/the list/NNP/list. these/DT/these cells/NNS/cells are/VBP/are available/JJ/available for/IN/for any/DT/any additions/NNS/additions to/TO/to the/DT/the list/NNP/list. by/IN/by creating/NN/creating a/DT/a listfree/NN/listfree integer/NN/integer variable/JJ/variable /,/, a/DT/a free/JJ/free list/NN/list could/MD/could be/VB/be created/VBN/created to/TO/to keep/VB/keep track/NN/track of/IN/of what/WP/what cells/NNS/cells are/VBP/are available/NNP/available. if/IN/if all/DT/all entries/NNS/entries are/VBP/are in/IN/in use/NN/use /,/, the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array would/MD/would have/VB/have to/TO/to be/VB/be increased/VBN/increased or/CC/or some/DT/some elements/NNS/elements would/MD/would have/VB/have to/TO/to be/VB/be deleted/VBN/deleted before/IN/before new/JJ/new entries/NNS/entries could/MD/could be/VB/be stored/VBN/stored in/IN/in the/DT/the list/NNP/list. the/DT/the following/VBG/following code/NN/code would/MD/would traverse/VB/traverse the/DT/the list/NN/list and/CC/and display/NN/display names/NNS/names and/CC/and account/NN/account balance/NN/balance /:/: i/PRP/i /:/: =/:/= listhead/NN/listhead while/IN/while i/PRP/i 0/-NONE-/0 loop/VB/loop through/IN/through the/DT/the list/NN/list print/NN/print i/PRP/i /,/, records/NNS/records /:/[ i/PRP/i /VBP/] .name/JJ/.name /,/, records/NNS/records /:/[ i/PRP/i /VBP/] .balance/JJ/.balance print/NN/print entry/NN/entry i/PRP/i /:/: =/:/= records/NNS/records /VBP/[ i/PRP/i /VBP/] .next/JJ/.next when/WRB/when faced/VBN/faced with/IN/with a/DT/a choice/NN/choice /,/, the/DT/the advantages/NNS/advantages of/IN/of this/DT/this approach/NN/approach include/VBP/include /:/: */-NONE-/* the/DT/the linked/VBN/linked list/NN/list is/VBZ/is relocatable/JJ/relocatable /,/, meaning/NN/meaning it/PRP/it can/MD/can be/VB/be moved/VBN/moved about/IN/about in/IN/in memory/NN/memory at/IN/at will/MD/will /,/, and/CC/and it/PRP/it can/MD/can also/RB/also be/VB/be quickly/RB/quickly and/CC/and directly/RB/directly serialized/VBD/serialized for/IN/for storage/NN/storage on/IN/on disk/NN/disk or/CC/or transfer/VB/transfer over/IN/over a/DT/a network/NNP/network. */-NONE-/* especially/RB/especially for/IN/for a/DT/a small/JJ/small list/NN/list /,/, array/NN/array indexes/NNS/indexes can/MD/can occupy/VB/occupy significantly/RB/significantly less/JJR/less space/NN/space than/IN/than a/DT/a full/JJ/full pointer/NN/pointer on/IN/on many/JJ/many architectures/NNP/architectures. */-NONE-/* locality/NN/locality of/IN/of reference/NN/reference can/MD/can be/VB/be improved/VBN/improved by/IN/by keeping/NN/keeping the/DT/the nodes/NNS/nodes together/RB/together in/IN/in memory/NN/memory and/CC/and by/IN/by periodically/RB/periodically rearranging/VBG/rearranging them/PRP/them /,/, although/IN/although this/DT/this can/NN/can also/RB/also be/VB/be done/VBN/done in/IN/in a/DT/a general/JJ/general store/NNP/store. */-NONE-/* na/VB/na ve/JJ/ve dynamic/JJ/dynamic memory/NN/memory allocators/NNS/allocators can/MD/can produce/VB/produce an/DT/an excessive/JJ/excessive amount/NN/amount of/IN/of overhead/NN/overhead storage/NN/storage for/IN/for each/DT/each node/NN/node allocated/VBN/allocated ;/:/; almost/RB/almost no/DT/no allocation/NN/allocation overhead/NN/overhead is/VBZ/is incurred/VBN/incurred per/IN/per node/NN/node in/IN/in this/DT/this approach/NNP/approach. */-NONE-/* seizing/VBG/seizing an/DT/an entry/NN/entry from/IN/from a/DT/a pre-allocated/JJ/pre-allocated array/NN/array is/VBZ/is faster/JJR/faster than/IN/than using/VBG/using dynamic/JJ/dynamic memory/NN/memory allocation/NN/allocation for/IN/for each/DT/each node/NN/node /,/, since/IN/since dynamic/JJ/dynamic memory/NN/memory allocation/NN/allocation typically/RB/typically requires/VBZ/requires a/DT/a search/NN/search for/IN/for a/DT/a free/JJ/free memory/NN/memory block/NN/block of/IN/of the/DT/the desired/VBN/desired size/NNP/size. this/DT/this approach/NN/approach has/VBZ/has one/CD/one main/JJ/main disadvantage/NN/disadvantage /,/, however/RB/however /:/: it/PRP/it creates/VBZ/creates and/CC/and manages/NNS/manages a/DT/a private/JJ/private memory/NN/memory space/NN/space for/IN/for its/PRP$/its nodes/NNP/nodes. this/DT/this leads/NNS/leads to/TO/to the/DT/the following/VBG/following issues/NNS/issues /:/: */-NONE-/* it/PRP/it increases/VBZ/increases complexity/NN/complexity of/IN/of the/DT/the implementation/NNP/implementation. */-NONE-/* growing/VBG/growing a/DT/a large/JJ/large array/NN/array when/WRB/when it/PRP/it is/VBZ/is full/JJ/full may/MD/may be/VB/be difficult/JJ/difficult or/CC/or impossible/JJ/impossible /,/, whereas/NNS/whereas finding/VBG/finding space/NN/space for/IN/for a/DT/a new/JJ/new linked/VBN/linked list/NN/list node/NN/node in/IN/in a/DT/a large/JJ/large /,/, general/JJ/general memory/NN/memory pool/NN/pool may/MD/may be/VB/be easier/NNP/easier. */-NONE-/* adding/VBG/adding elements/NNS/elements to/TO/to a/DT/a dynamic/JJ/dynamic array/NN/array will/MD/will occasionally/RB/occasionally /VB/( when/WRB/when it/PRP/it is/VBZ/is full/JJ/full /NN/) unexpectedly/RB/unexpectedly take/VB/take linear/JJ/linear /NN/( o/NN/o /:/( n/NN/n /:/) /:/) instead/RB/instead of/IN/of constant/JJ/constant time/NN/time /:/( although/IN/although it/PRP/it 's/VBZ/'s still/RB/still an/DT/an amortized/JJ/amortized constant/NN/constant /:/) /./. */-NONE-/* using/VBG/using a/DT/a general/JJ/general memory/NN/memory pool/NN/pool leaves/VBZ/leaves more/JJR/more memory/NN/memory for/IN/for other/JJ/other data/NNS/data if/IN/if the/DT/the list/NN/list is/VBZ/is smaller/JJR/smaller than/IN/than expected/VBN/expected or/CC/or if/IN/if many/JJ/many nodes/NNS/nodes are/VBP/are freed/NNP/freed. for/IN/for these/DT/these reasons/NNS/reasons /,/, this/DT/this approach/NN/approach is/VBZ/is mainly/RB/mainly used/VBN/used for/IN/for languages/NNS/languages that/WDT/that do/VBP/do not/RB/not support/VB/support dynamic/JJ/dynamic memory/NN/memory allocation/NNP/allocation. these/DT/these disadvantages/NNS/disadvantages are/VBP/are also/RB/also mitigated/VBN/mitigated if/IN/if the/DT/the maximum/NN/maximum size/NN/size of/IN/of the/DT/the list/NN/list is/VBZ/is known/VBN/known at/IN/at the/DT/the time/NN/time the/DT/the array/NN/array is/VBZ/is created/NNP/created. language/NN/language support/NN/support /:/[ edit/NN/edit /:/] many/JJ/many programming/NN/programming languages/NNS/languages such/JJ/such as/IN/as lisp/NN/lisp and/CC/and scheme/NN/scheme have/VBP/have singly/RB/singly linked/VBN/linked lists/NNS/lists built/VBN/built in/NNP/in. in/IN/in many/JJ/many functional/JJ/functional languages/NNS/languages /,/, these/DT/these lists/NNS/lists are/VBP/are constructed/VBN/constructed from/IN/from nodes/NNS/nodes /,/, each/DT/each called/VBN/called a/DT/a consor/NN/consor cons/NNS/cons cell/NNP/cell. the/DT/the cons/NNS/cons has/VBZ/has two/CD/two fields/NNS/fields /:/: the/DT/the car/NN/car /,/, a/DT/a reference/NN/reference to/TO/to the/DT/the data/NNS/data for/IN/for that/DT/that node/NN/node /,/, and/CC/and the/DT/the cdr/NN/cdr /,/, a/DT/a reference/NN/reference to/TO/to the/DT/the next/JJ/next node/NNP/node. although/IN/although cons/NNS/cons cells/NNS/cells can/MD/can be/VB/be used/VBN/used to/TO/to build/VB/build other/JJ/other data/NNS/data structures/NNS/structures /,/, this/DT/this is/VBZ/is their/PRP$/their primary/JJ/primary purpose/NNP/purpose. in/IN/in languages/NNS/languages that/WDT/that support/NN/support abstract/NN/abstract data/NNS/data types/NNS/types or/CC/or templates/NNS/templates /,/, linked/VBD/linked list/NN/list adts/NNS/adts or/CC/or templates/NNS/templates are/VBP/are available/JJ/available for/IN/for building/NN/building linked/VBD/linked lists/NNP/lists. in/IN/in other/JJ/other languages/NNS/languages /,/, linked/VBD/linked lists/NNS/lists are/VBP/are typically/RB/typically built/VBN/built using/VBG/using references/NNS/references together/RB/together with/IN/with records/NNP/records. internal/JJ/internal and/CC/and external/JJ/external storage/NN/storage /:/[ edit/NN/edit /:/] when/WRB/when constructing/VBG/constructing a/DT/a linked/JJ/linked list/NN/list /,/, one/CD/one is/VBZ/is faced/VBN/faced with/IN/with the/DT/the choice/NN/choice of/IN/of whether/IN/whether to/TO/to store/VB/store the/DT/the data/NNS/data of/IN/of the/DT/the list/NN/list directly/RB/directly in/IN/in the/DT/the linked/VBN/linked list/NN/list nodes/NNS/nodes /,/, called/VBN/called internal/JJ/internal storage/NN/storage /,/, or/CC/or merely/RB/merely to/TO/to store/VB/store a/DT/a reference/NN/reference to/TO/to the/DT/the data/NNS/data /,/, called/VBN/called external/JJ/external storage/NNP/storage. internal/JJ/internal storage/NN/storage has/VBZ/has the/DT/the advantage/NN/advantage of/IN/of making/VBG/making access/NN/access to/TO/to the/DT/the data/NNS/data more/JJR/more efficient/JJ/efficient /,/, requiring/VBG/requiring less/JJR/less storage/NN/storage overall/NN/overall /,/, having/VBG/having better/JJR/better locality/NN/locality of/IN/of reference/NN/reference /,/, and/CC/and simplifying/VBG/simplifying memory/NN/memory management/NN/management for/IN/for the/DT/the list/NN/list /:/( its/PRP$/its data/NNS/data is/VBZ/is allocated/VBN/allocated and/CC/and deallocated/VBN/deallocated at/IN/at the/DT/the same/JJ/same time/NN/time as/IN/as the/DT/the list/NN/list nodes/VBZ/nodes /:/) /./. external/JJ/external storage/NN/storage /,/, on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, has/VBZ/has the/DT/the advantage/NN/advantage of/IN/of being/VBG/being more/JJR/more generic/JJ/generic /,/, in/IN/in that/DT/that the/DT/the same/JJ/same data/NNS/data structure/NN/structure and/CC/and machine/NN/machine code/NN/code can/MD/can be/VB/be used/VBN/used for/IN/for a/DT/a linked/VBN/linked list/NN/list no/DT/no matter/NN/matter what/WP/what the/DT/the size/NN/size of/IN/of the/DT/the data/NNS/data is/NNP/is. it/PRP/it also/RB/also makes/VBZ/makes it/PRP/it easy/JJ/easy to/TO/to place/NN/place the/DT/the same/JJ/same data/NNS/data in/IN/in multiple/NN/multiple linked/VBN/linked lists/NNP/lists. although/IN/although with/IN/with internal/JJ/internal storage/NN/storage the/DT/the same/JJ/same data/NNS/data can/MD/can be/VB/be placed/VBN/placed in/IN/in multiple/NN/multiple lists/NNS/lists by/IN/by including/VBG/including multiple/NN/multiple next/IN/next references/NNS/references in/IN/in the/DT/the node/NN/node data/NNS/data structure/NN/structure /,/, it/PRP/it would/MD/would then/RB/then be/VB/be necessary/JJ/necessary to/TO/to create/VB/create separate/JJ/separate routines/NNS/routines to/TO/to add/VB/add or/CC/or delete/VB/delete cells/NNS/cells based/VBN/based on/IN/on each/DT/each field/NNP/field. it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to create/VB/create additional/JJ/additional linked/VBN/linked lists/NNS/lists of/IN/of elements/NNS/elements that/WDT/that use/NN/use internal/VBP/internal storage/NN/storage by/IN/by using/VBG/using external/JJ/external storage/NN/storage /,/, and/CC/and having/VBG/having the/DT/the cells/NNS/cells of/IN/of the/DT/the additional/JJ/additional linked/VBN/linked lists/NNS/lists store/IN/store references/NNS/references to/TO/to the/DT/the nodes/NNS/nodes of/IN/of the/DT/the linked/VBN/linked list/NN/list containing/VBG/containing the/DT/the data/NNP/data. in/IN/in general/JJ/general /,/, if/IN/if a/DT/a set/NN/set of/IN/of data/NNS/data structures/NNS/structures needs/VBZ/needs to/TO/to be/VB/be included/VBN/included in/IN/in linked/VBN/linked lists/NNS/lists /,/, external/JJ/external storage/NN/storage is/VBZ/is the/DT/the best/JJS/best approach/NNP/approach. if/IN/if a/DT/a set/NN/set of/IN/of data/NNS/data structures/NNS/structures need/VBP/need to/TO/to be/VB/be included/VBN/included in/IN/in only/RB/only one/CD/one linked/VBN/linked list/NN/list /,/, then/RB/then internal/JJ/internal storage/NN/storage is/VBZ/is slightly/RB/slightly better/RBR/better /,/, unless/IN/unless a/DT/a generic/JJ/generic linked/VBN/linked list/NN/list package/NN/package using/VBG/using external/JJ/external storage/NN/storage is/VBZ/is available/NNP/available. likewise/NN/likewise /,/, if/IN/if different/JJ/different sets/NNS/sets of/IN/of data/NNS/data that/WDT/that can/MD/can be/VB/be stored/VBN/stored in/IN/in the/DT/the same/JJ/same data/NNS/data structure/NN/structure are/VBP/are to/TO/to be/VB/be included/VBN/included in/IN/in a/DT/a single/JJ/single linked/VBN/linked list/NN/list /,/, then/RB/then internal/JJ/internal storage/NN/storage would/MD/would be/VB/be fine/NNP/fine. another/DT/another approach/NN/approach that/IN/that can/MD/can be/VB/be used/VBN/used with/IN/with some/DT/some languages/NNS/languages involves/VBZ/involves having/VBG/having different/JJ/different data/NNS/data structures/NNS/structures /,/, but/CC/but all/DT/all have/VBP/have the/DT/the initial/JJ/initial fields/NNS/fields /,/, including/VBG/including the/DT/the next/JJ/next /NN/( and/CC/and prev/NN/prev if/IN/if double/JJ/double linked/VBN/linked list/NN/list /:/) references/NNS/references in/IN/in the/DT/the same/JJ/same location/NNP/location. after/IN/after defining/VBG/defining separate/JJ/separate structures/NNS/structures for/IN/for each/DT/each type/NN/type of/IN/of data/NNS/data /,/, a/DT/a generic/JJ/generic structure/NN/structure can/MD/can be/VB/be defined/VBN/defined that/IN/that contains/NNS/contains the/DT/the minimum/JJ/minimum amount/NN/amount of/IN/of data/NNS/data shared/VBN/shared by/IN/by all/DT/all the/DT/the other/JJ/other structures/NNS/structures and/CC/and contained/VBD/contained at/IN/at the/DT/the top/JJ/top /NN/( beginning/NN/beginning /:/) of/IN/of the/DT/the structures/NNP/structures. then/RB/then generic/JJ/generic routines/NNS/routines can/MD/can be/VB/be created/VBN/created that/IN/that use/NN/use the/DT/the minimal/JJ/minimal structure/NN/structure to/TO/to perform/VB/perform linked/VBN/linked list/NN/list type/NN/type operations/NNS/operations /,/, but/CC/but separate/JJ/separate routines/NNS/routines can/MD/can then/RB/then handle/VB/handle the/DT/the specific/JJ/specific data/NNP/data. this/DT/this approach/NN/approach is/VBZ/is often/RB/often used/VBN/used in/IN/in message/NN/message parsing/VBG/parsing routines/NNS/routines /,/, where/WRB/where several/JJ/several types/NNS/types of/IN/of messages/NNS/messages are/VBP/are received/VBN/received /,/, but/CC/but all/DT/all start/NN/start with/IN/with the/DT/the same/JJ/same set/NN/set of/IN/of fields/NNS/fields /,/, usually/RB/usually including/VBG/including a/DT/a field/NN/field for/IN/for message/NN/message type/NNP/type. the/DT/the generic/JJ/generic routines/NNS/routines are/VBP/are used/VBN/used to/TO/to add/VB/add new/JJ/new messages/NNS/messages to/TO/to a/DT/a queue/NN/queue when/WRB/when they/PRP/they are/VBP/are received/VBN/received /,/, and/CC/and remove/VB/remove them/PRP/them from/IN/from the/DT/the queue/NN/queue in/IN/in order/NN/order to/TO/to process/NN/process the/DT/the message/NNP/message. the/DT/the message/NN/message type/NN/type field/NN/field is/VBZ/is then/RB/then used/VBN/used to/TO/to call/VB/call the/DT/the correct/NN/correct routine/NN/routine to/TO/to process/NN/process the/DT/the specific/JJ/specific type/NN/type of/IN/of message/NNP/message. example/NN/example of/IN/of internal/JJ/internal and/CC/and external/JJ/external storage/NN/storage /:/[ edit/NN/edit /:/] suppose/NN/suppose you/PRP/you wanted/VBD/wanted to/TO/to create/VB/create a/DT/a linked/VBN/linked list/NN/list of/IN/of families/NNS/families and/CC/and their/PRP$/their members/NNP/members. using/VBG/using internal/JJ/internal storage/NN/storage /,/, the/DT/the structure/NN/structure might/MD/might look/VB/look like/IN/like the/DT/the following/JJ/following /:/: record/NN/record member/NN/member /:/{ member/NN/member of/IN/of a/DT/a family/NN/family member/NN/member next/IN/next ;/:/; string/VBG/string firstname/NN/firstname ;/:/; integer/NN/integer age/NN/age ;/:/; /:/} record/NN/record family/NN/family /:/{ the/DT/the family/NN/family itself/PRP/itself family/RB/family next/JJ/next ;/:/; string/VBG/string lastname/NN/lastname ;/:/; string/VBG/string address/NN/address ;/:/; member/NN/member members/NNS/members head/NN/head of/IN/of list/NN/list of/IN/of members/NNS/members of/IN/of this/DT/this family/NN/family /:/} to/TO/to print/VB/print a/DT/a complete/JJ/complete list/NN/list of/IN/of families/NNS/families and/CC/and their/PRP$/their members/NNS/members using/VBG/using internal/JJ/internal storage/NN/storage /,/, we/PRP/we could/MD/could write/VB/write /:/: afamily/RB/afamily /:/: =/:/= families/NNS/families start/VBP/start at/IN/at head/NN/head of/IN/of families/NNS/families list/VBP/list while/IN/while afamily/RB/afamily null/JJ/null loop/NN/loop through/IN/through list/NN/list of/IN/of families/NNS/families print/VBP/print information/NN/information about/IN/about family/NN/family amember/NN/amember /:/: =/:/= afamily.members/NNS/afamily.members get/VBP/get head/NN/head of/IN/of list/NN/list of/IN/of this/DT/this family/NN/family 's/POS/'s members/NNS/members while/IN/while amember/NN/amember null/NN/null loop/NN/loop through/IN/through list/NN/list of/IN/of members/NNS/members print/VBP/print information/NN/information about/IN/about member/NN/member amember/NN/amember /:/: =/:/= amember.next/JJ/amember.next afamily/NN/afamily /:/: =/:/= afamily.next/JJ/afamily.next using/NN/using external/JJ/external storage/NN/storage /,/, we/PRP/we would/MD/would create/VB/create the/DT/the following/VBG/following structures/NNS/structures /:/: record/NN/record node/NN/node /:/{ generic/JJ/generic link/NN/link structure/NN/structure node/NN/node next/IN/next ;/:/; pointer/NN/pointer data/NNS/data generic/JJ/generic pointer/NN/pointer for/IN/for data/NNS/data at/IN/at node/NN/node /:/} record/NN/record member/NN/member /:/{ structure/NN/structure for/IN/for family/NN/family member/NN/member string/VBG/string firstname/NN/firstname ;/:/; integer/NN/integer age/NN/age /:/} record/NN/record family/NN/family /:/{ structure/NN/structure for/IN/for family/NN/family string/VBG/string lastname/NN/lastname ;/:/; string/VBG/string address/NN/address ;/:/; node/NN/node members/NNS/members head/NN/head of/IN/of list/NN/list of/IN/of members/NNS/members of/IN/of this/DT/this family/NN/family /:/} to/TO/to print/VB/print a/DT/a complete/JJ/complete list/NN/list of/IN/of families/NNS/families and/CC/and their/PRP$/their members/NNS/members using/VBG/using external/JJ/external storage/NN/storage /,/, we/PRP/we could/MD/could write/VB/write /:/: famnode/NN/famnode /:/: =/:/= families/NNS/families start/VBP/start at/IN/at head/NN/head of/IN/of families/NNS/families list/VBP/list while/IN/while famnode/NN/famnode null/NN/null loop/NN/loop through/IN/through list/NN/list of/IN/of families/NNS/families afamily/RB/afamily /:/: =/:/= /:/( family/NN/family /:/) famnode.data/NNP/famnode.data extract/NN/extract family/NN/family from/IN/from node/NN/node print/NN/print information/NN/information about/IN/about family/NN/family memnode/NN/memnode /:/: =/:/= afamily.members/NNS/afamily.members get/VBP/get list/NN/list of/IN/of family/NN/family members/NNS/members while/IN/while memnode/NN/memnode null/NN/null loop/NN/loop through/IN/through list/NN/list of/IN/of members/NNS/members amember/VBP/amember /:/: =/:/= /:/( member/NN/member /:/) memnode.data/NNP/memnode.data extract/NN/extract member/NN/member from/IN/from node/NN/node print/NN/print information/NN/information about/IN/about member/NN/member memnode/NN/memnode /:/: =/:/= memnode.next/JJ/memnode.next famnode/NN/famnode /:/: =/:/= famnode.next/JJ/famnode.next notice/NN/notice that/WDT/that when/WRB/when using/VBG/using external/JJ/external storage/NN/storage /,/, an/DT/an extra/JJ/extra step/NN/step is/VBZ/is needed/VBN/needed to/TO/to extract/VB/extract the/DT/the record/NN/record from/IN/from the/DT/the node/NN/node and/CC/and cast/JJ/cast it/PRP/it into/IN/into the/DT/the proper/JJ/proper data/NNS/data type/NNP/type. this/DT/this is/VBZ/is because/IN/because both/DT/both the/DT/the list/NN/list of/IN/of families/NNS/families and/CC/and the/DT/the list/NN/list of/IN/of members/NNS/members within/IN/within the/DT/the family/NN/family are/VBP/are stored/VBN/stored in/IN/in two/CD/two linked/VBN/linked lists/NNS/lists using/VBG/using the/DT/the same/JJ/same data/NNS/data structure/NN/structure /:/( node/NN/node /:/) /,/, and/CC/and this/DT/this language/NN/language does/VBZ/does not/RB/not have/VB/have parametric/JJ/parametric types/NNP/types. as/IN/as long/RB/long as/IN/as the/DT/the number/NN/number of/IN/of families/NNS/families that/WDT/that a/DT/a member/NN/member can/MD/can belong/VB/belong to/TO/to is/VBZ/is known/VBN/known at/IN/at compile/NN/compile time/NN/time /,/, internal/JJ/internal storage/NN/storage works/NNS/works fine/NNP/fine. if/IN/if /,/, however/RB/however /,/, a/DT/a member/NN/member needed/VBN/needed to/TO/to be/VB/be included/VBN/included in/IN/in an/DT/an arbitrary/JJ/arbitrary number/NN/number of/IN/of families/NNS/families /,/, with/IN/with the/DT/the specific/JJ/specific number/NN/number known/VBN/known only/RB/only at/IN/at run/VBN/run time/NN/time /,/, external/JJ/external storage/NN/storage would/MD/would be/VB/be necessary/NNP/necessary. speeding/NN/speeding up/IN/up search/NN/search /:/[ edit/NN/edit /:/] finding/VBG/finding a/DT/a specific/JJ/specific element/NN/element in/IN/in a/DT/a linked/VBN/linked list/NN/list /,/, even/RB/even if/IN/if it/PRP/it is/VBZ/is sorted/VBN/sorted /,/, normally/RB/normally requires/VBZ/requires o/NN/o /:/( n/NN/n /:/) time/NN/time /:/( linear/JJ/linear search/NN/search /:/) /./. this/DT/this is/VBZ/is one/CD/one of/IN/of the/DT/the primary/JJ/primary disadvantages/NNS/disadvantages of/IN/of linked/VBN/linked lists/NNS/lists over/IN/over other/JJ/other data/NNS/data structures/NNP/structures. in/IN/in addition/NN/addition to/TO/to the/DT/the variants/NNS/variants discussed/VBD/discussed above/IN/above /,/, below/IN/below are/VBP/are two/CD/two simple/NNS/simple ways/NNS/ways to/TO/to improve/VB/improve search/NN/search time/NNP/time. in/IN/in an/DT/an unordered/VBN/unordered list/NN/list /,/, one/CD/one simple/NN/simple heuristic/JJ/heuristic for/IN/for decreasing/NN/decreasing average/NN/average search/NN/search time/NN/time is/VBZ/is the/DT/the move-to-front/JJ/move-to-front heuristic/JJ/heuristic /,/, which/WDT/which simply/RB/simply moves/VBZ/moves an/DT/an element/NN/element to/TO/to the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list once/RB/once it/PRP/it is/VBZ/is found/NNP/found. this/DT/this scheme/NN/scheme /,/, handy/NN/handy for/IN/for creating/NN/creating simple/NN/simple caches/NNS/caches /,/, ensures/NNS/ensures that/WDT/that the/DT/the most/RBS/most recently/RB/recently used/VBN/used items/NNS/items are/VBP/are also/RB/also the/DT/the quickest/JJS/quickest to/TO/to find/VB/find again/NNP/again. another/DT/another common/JJ/common approach/NN/approach is/VBZ/is to/TO/to "/CD/" index/NN/index "/:/" a/DT/a linked/VBN/linked list/NN/list using/VBG/using a/DT/a more/JJR/more efficient/JJ/efficient external/JJ/external data/NNS/data structure/NNP/structure. for/IN/for example/NN/example /,/, one/CD/one can/MD/can build/VB/build a/DT/a red-black/JJ/red-black tree/NN/tree or/CC/or hash/NN/hash table/JJ/table whose/WP$/whose elements/NNS/elements are/VBP/are references/NNS/references to/TO/to the/DT/the linked/VBN/linked list/NN/list nodes/NNP/nodes. multiple/NN/multiple such/JJ/such indexes/NNS/indexes can/MD/can be/VB/be built/VBN/built on/IN/on a/DT/a single/JJ/single list/NNP/list. the/DT/the disadvantage/NN/disadvantage is/VBZ/is that/IN/that these/DT/these indexes/NNS/indexes may/MD/may need/VB/need to/TO/to be/VB/be updated/VBN/updated each/DT/each time/NN/time a/DT/a node/NN/node is/VBZ/is added/VBN/added or/CC/or removed/VBN/removed /-NONE-/( or/CC/or at/IN/at least/JJS/least /,/, before/IN/before that/DT/that index/NN/index is/VBZ/is used/VBN/used again/RB/again /:/) /./. random/NN/random access/NN/access lists/NNS/lists /:/[ edit/NN/edit /:/] a/DT/a random/NN/random access/NN/access list/NN/list is/VBZ/is a/DT/a list/NN/list with/IN/with support/NN/support for/IN/for fast/NN/fast random/NN/random access/NN/access to/TO/to read/VB/read or/CC/or modify/VB/modify any/DT/any element/NN/element in/IN/in the/DT/the list/NNP/list. /NNP/[ 7/CD/7 /CD/] one/CD/one possible/JJ/possible implementation/NN/implementation is/VBZ/is a/DT/a skew/NN/skew binary/NN/binary random/NN/random access/NN/access listusing/VBG/listusing the/DT/the skew/NN/skew binary/NN/binary number/NN/number system/NN/system /,/, which/WDT/which involves/NNS/involves a/DT/a list/NN/list of/IN/of trees/NNS/trees with/IN/with special/JJ/special properties/NNS/properties ;/:/; this/DT/this allows/VBZ/allows worst-case/NN/worst-case constant/NN/constant time/NN/time head/cons/NNS/head/cons operations/NNS/operations /,/, and/CC/and worst-case/JJ/worst-case logarithmic/JJ/logarithmic time/NN/time random/NN/random access/NN/access to/TO/to an/DT/an element/NN/element by/IN/by index/NNP/index. /NNP/[ 7/CD/7 /CD/] random/NN/random access/NN/access lists/NNS/lists can/MD/can be/VB/be implemented/VBN/implemented as/IN/as persistent/JJ/persistent data/NNS/data structures/NNP/structures. /NNP/[ 7/CD/7 /CD/] random/NN/random access/NN/access lists/NNS/lists can/MD/can be/VB/be viewed/VBN/viewed as/IN/as immutable/JJ/immutable linked/VBN/linked lists/NNS/lists in/IN/in that/DT/that they/PRP/they likewise/VBP/likewise support/NN/support the/DT/the same/JJ/same o/NN/o /:/( 1/CD/1 /CD/) head/NN/head and/CC/and tail/NN/tail operations/NNP/operations. /NNP/[ 7/CD/7 /CD/] a/DT/a simple/JJ/simple extension/NN/extension to/TO/to random/VB/random access/NN/access lists/NNS/lists is/VBZ/is the/DT/the min-list/JJ/min-list /,/, which/WDT/which provides/VBZ/provides an/DT/an additional/JJ/additional operation/NN/operation that/WDT/that yields/VBZ/yields the/DT/the minimum/JJ/minimum element/NN/element in/IN/in the/DT/the entire/JJ/entire list/NN/list in/IN/in constant/NN/constant time/NN/time /:/( without/IN/without /CD/[ clarification/NN/clarification needed/VBN/needed /NN/] mutation/NN/mutation complexities/NNS/complexities /:/) /./. /:/[ 7/CD/7 /CD/] related/JJ/related data/NNS/data structures/NNS/structures /VBP/[ edit/NN/edit /:/] both/DT/both stacks/NNS/stacks and/CC/and queues/NNS/queues are/VBP/are often/RB/often implemented/VBN/implemented using/VBG/using linked/VBN/linked lists/NNS/lists /,/, and/CC/and simply/RB/simply restrict/VB/restrict the/DT/the type/NN/type of/IN/of operations/NNS/operations which/WDT/which are/VBP/are supported/NNP/supported. the/DT/the skip/NN/skip list/NN/list is/VBZ/is a/DT/a linked/VBN/linked list/NN/list augmented/VBN/augmented with/IN/with layers/NNS/layers of/IN/of pointers/NNS/pointers for/IN/for quickly/RB/quickly jumping/VBG/jumping over/IN/over large/JJ/large numbers/NNS/numbers of/IN/of elements/NNS/elements /,/, and/CC/and then/RB/then descending/VBG/descending to/TO/to the/DT/the next/JJ/next layer/NNP/layer. this/DT/this process/NN/process continues/VBZ/continues down/IN/down to/TO/to the/DT/the bottom/NN/bottom layer/NN/layer /,/, which/WDT/which is/VBZ/is the/DT/the actual/JJ/actual list/NNP/list. a/DT/a binary/JJ/binary tree/NN/tree can/MD/can be/VB/be seen/VBN/seen as/IN/as a/DT/a type/NN/type of/IN/of linked/VBN/linked list/NN/list where/WRB/where the/DT/the elements/NNS/elements are/VBP/are themselves/PRP/themselves linked/VBD/linked lists/NNS/lists of/IN/of the/DT/the same/JJ/same nature/NNP/nature. the/DT/the result/NN/result is/VBZ/is that/IN/that each/DT/each node/NN/node may/MD/may include/VB/include a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first node/NN/node of/IN/of one/CD/one or/CC/or two/CD/two other/JJ/other linked/JJ/linked lists/NNS/lists /,/, which/WDT/which /,/, together/RB/together with/IN/with their/PRP$/their contents/NNS/contents /,/, form/NN/form the/DT/the subtrees/NNS/subtrees below/IN/below that/DT/that node/NNP/node. an/DT/an unrolled/JJ/unrolled linked/VBN/linked list/NN/list is/VBZ/is a/DT/a linked/VBN/linked list/NN/list in/IN/in which/WDT/which each/DT/each node/NN/node contains/VBZ/contains an/DT/an array/NN/array of/IN/of data/NNS/data values/NNP/values. this/DT/this leads/NNS/leads to/TO/to improved/VBN/improved cache/NN/cache performance/NN/performance /,/, since/IN/since more/JJR/more list/NN/list elements/NNS/elements are/VBP/are contiguous/JJ/contiguous in/IN/in memory/NN/memory /,/, and/CC/and reduced/VBD/reduced memory/NN/memory overhead/NN/overhead /,/, because/IN/because less/JJR/less metadata/NNS/metadata needs/VBZ/needs to/TO/to be/VB/be stored/VBN/stored for/IN/for each/DT/each element/NN/element of/IN/of the/DT/the list/NNP/list. a/DT/a hash/NN/hash table/NN/table may/MD/may use/VB/use linked/VBN/linked lists/NNS/lists to/TO/to store/VB/store the/DT/the chains/NNS/chains of/IN/of items/NNS/items that/WDT/that hash/NN/hash to/TO/to the/DT/the same/JJ/same position/NN/position in/IN/in the/DT/the hash/NN/hash table/NNP/table. a/DT/a heap/NN/heap shares/NNS/shares some/DT/some of/IN/of the/DT/the ordering/NN/ordering properties/NNS/properties of/IN/of a/DT/a linked/VBN/linked list/NN/list /,/, but/CC/but is/VBZ/is almost/RB/almost always/RB/always implemented/VBN/implemented using/VBG/using an/DT/an array/NNP/array. instead/RB/instead of/IN/of references/NNS/references from/IN/from node/NN/node to/TO/to node/VB/node /,/, the/DT/the next/JJ/next and/CC/and previous/JJ/previous data/NNS/data indexes/NNS/indexes are/VBP/are calculated/VBN/calculated using/VBG/using the/DT/the current/JJ/current data/NNS/data 's/POS/'s index/NNP/index. a/DT/a self-organizing/JJ/self-organizing list/NN/list rearranges/NNS/rearranges its/PRP$/its nodes/NNS/nodes based/VBN/based on/IN/on some/DT/some heuristic/JJ/heuristic which/WDT/which reduces/NNS/reduces search/VBP/search times/NNS/times for/IN/for data/NNS/data retrieval/NN/retrieval by/IN/by keeping/NN/keeping commonly/RB/commonly accessed/VBN/accessed nodes/NNS/nodes at/IN/at the/DT/the head/NN/head of/IN/of the/DT/the list/NNP/list. notes/VBZ/notes /:/[ edit/NN/edit /:/] 1/CD/1. jump/NN/jump up/IN/up ^/CD/^ the/DT/the amount/NN/amount of/IN/of control/NN/control data/NNS/data required/VBN/required for/IN/for a/DT/a dynamic/JJ/dynamic array/NN/array is/VBZ/is usually/RB/usually of/IN/of the/DT/the form/NN/form /,/, where/WRB/where is/VBZ/is a/DT/a per-array/JJ/per-array constant/NN/constant /,/, is/VBZ/is a/DT/a per-dimension/NN/per-dimension constant/NN/constant /,/, and/CC/and is/VBZ/is the/DT/the number/NN/number of/IN/of dimensions/NNP/dimensions. and/CC/and are/VBP/are typically/RB/typically on/IN/on the/DT/the order/NN/order of/IN/of 10/CD/10 bytes/NNP/bytes. footnotes/VBZ/footnotes /:/[ edit/NN/edit /:/] 1/CD/1. jump/NN/jump up/IN/up ^/CD/^ skiena/NNS/skiena /,/, steven/RB/steven s/NNP/s. /NNP/( 2009/CD/2009 /CD/) /./. the/DT/the algorithm/NN/algorithm design/NN/design manual/JJ/manual /NN/( 2nd/CD/2nd ed/NNP/ed. /NNP/) /./. springer/NNP/springer. p/NNP/p. 76/NNP/76. isbn/NN/isbn 9781848000704/CD/9781848000704. we/PRP/we can/MD/can do/VB/do nothing/NN/nothing without/IN/without this/DT/this list/NN/list predecessor/NN/predecessor /,/, and/CC/and so/RB/so must/MD/must spend/VB/spend linear/JJ/linear time/NN/time searching/VBG/searching for/IN/for it/PRP/it on/IN/on a/DT/a singly-linked/JJ/singly-linked list/NNP/list. 2/NNP/2. jump/VB/jump up/RP/up ^/CD/^ gerald/NN/gerald kruse/NNP/kruse. cs/NNS/cs 240/CD/240 lecture/NN/lecture notes/NNS/notes /:/: linked/VBN/linked lists/NNS/lists plus/RB/plus /:/: complexity/NN/complexity trade-offs/NNP/trade-offs. juniata/NN/juniata college/NNP/college. spring/NN/spring 2008/CD/2008. 3/CD/3. jump/NN/jump up/IN/up ^/CD/^ day/NN/day 1/CD/1 keynote/NN/keynote /:/- bjarne/NN/bjarne stroustrup/NN/stroustrup /:/: c/NN/c +/:/+ +/:/+ 11/CD/11 style/NN/style at/IN/at goingnative/JJ/goingnative 2012/CD/2012 on/IN/on channel9.msdn.com/JJ/channel9.msdn.com from/IN/from minute/NN/minute 45/CD/45 or/CC/or foil/NN/foil 44/CD/44 4/CD/4. jump/NN/jump up/IN/up ^/CD/^ number/NN/number crunching/VBG/crunching /:/: why/WRB/why you/PRP/you should/MD/should never/RB/never /,/, ever/RB/ever /,/, ever/RB/ever use/VB/use linked-list/JJ/linked-list in/IN/in your/PRP$/your code/NN/code again/RB/again at/IN/at kjellkod.wordpress.com/JJ/kjellkod.wordpress.com 5/CD/5. jump/NN/jump up/IN/up ^/CD/^ brodnik/NN/brodnik /,/, andrej/NN/andrej ;/:/; carlsson/NN/carlsson /,/, svante/NN/svante ;/:/; sedgewick/NN/sedgewick /,/, robert/NN/robert ;/:/; munro/NN/munro /,/, ji/NN/ji ;/:/; demaine/NN/demaine /,/, ed/VBD/ed /:/( 1999/CD/1999 /CD/) /,/, resizable/JJ/resizable arrays/NNS/arrays in/IN/in optimal/JJ/optimal time/NN/time and/CC/and space/NN/space /:/( technical/JJ/technical report/NN/report cs-99-09/-NONE-/cs-99-09 /./) /:/( pdf/NN/pdf /:/) /,/, department/NN/department of/IN/of computer/NN/computer science/NN/science /,/, university/NN/university of/IN/of waterloo/NN/waterloo 6/CD/6. jump/NN/jump up/IN/up ^/CD/^ ford/NN/ford /,/, william/NN/william ;/:/; topp/NN/topp /,/, william/NN/william /:/( 2002/CD/2002 /CD/) /./. data/NNS/data structures/NNS/structures with/IN/with c/NN/c +/:/+ +/:/+ using/VBG/using stl/NN/stl /:/( second/JJ/second ed/NNP/ed. /NNP/) /./. prentice-hall/NNP/prentice-hall. pp/NNP/pp. 466/CD/466 467/CD/467. isbn/NN/isbn 0-13-085850-1/CD/0-13-085850-1. 7/CD/7. ^/CD/^ jump/NN/jump up/IN/up to/TO/to /:/: a/DT/a b/NN/b c/NN/c d/NN/d e/NN/e okasaki/NN/okasaki /,/, chris/VBZ/chris /:/( 1995/CD/1995 /CD/) /./. purely/RB/purely functional/JJ/functional random-access/JJ/random-access lists/NNS/lists /:/( ps/NNS/ps /VBP/) /./. in/IN/in functional/JJ/functional programming/NN/programming languages/NNS/languages and/CC/and computer/NN/computer architecture/NN/architecture /:/( acm/NN/acm press/NN/press /:/) /./. pp/NNP/pp. 86/CD/86 95/CD/95. retrieved/VBN/retrieved may/MD/may 7,2015/CD/7,2015. references/NNS/references /:/[ edit/NN/edit /:/] */-NONE-/* juan/VB/juan /,/, angel/NN/angel /:/( 2006/CD/2006 /CD/) /./. "/CD/" ch20/NNP/ch20 data/NNS/data structures/NNS/structures ;/:/; id06/NNP/id06 /:/- programming/VBG/programming with/IN/with java/NN/java /:/( slide/NN/slide part/NN/part of/IN/of the/DT/the book/NN/book 'big/JJ/'big java/NN/java '/''/' /,/, by/IN/by cays/NNP/cays. horstmann/NN/horstmann /:/) "/:/" /:/( pdf/NN/pdf /:/) /./. p/NNP/p. 3/NNP/3. */-NONE-/* black/VB/black /,/, paul/JJ/paul e/NNP/e. /NNP/( 2004-08-16/CD/2004-08-16 /CD/) /./. pieterse/NN/pieterse /,/, vreda/NN/vreda ;/:/; black/JJ/black /,/, paul/JJ/paul e/NNP/e. /,/, eds/NNP/eds. "/NNP/" linked/VBD/linked list/NN/list "/:/" /./. dictionary/JJ/dictionary of/IN/of algorithms/NNS/algorithms and/CC/and data/NNS/data structures/NNP/structures. national/JJ/national institute/NN/institute of/IN/of standards/NNS/standards and/CC/and technology/NNP/technology. retrieved/VBD/retrieved 2004-12-14/CD/2004-12-14. */-NONE-/* antonakos/VBZ/antonakos /,/, james/VBZ/james l/NNP/l. ;/:/; mansfield/NN/mansfield /,/, kenneth/NN/kenneth c/NNP/c. /,/, jr/NNP/jr. /NNP/( 1999/CD/1999 /CD/) /./. practical/JJ/practical data/NNS/data structures/NNS/structures using/VBG/using c/c/JJ/c/c +/NN/+ +/:/+ /./. prentice-hall/NNP/prentice-hall. pp/NNP/pp. 165/CD/165 190/CD/190. isbn/NN/isbn 0-13-280843-9/CD/0-13-280843-9. */-NONE-/* collins/VBZ/collins /,/, william/NN/william j/NNP/j. /NNP/( 2005/CD/2005 /CD/) /CD/[ 2002/CD/2002 /CD/] /./. data/NNS/data structures/NNS/structures and/CC/and the/DT/the java/NN/java collections/NNS/collections framework/NNP/framework. new/JJ/new york/NN/york /:/: mcgraw/NN/mcgraw hill/NNP/hill. pp/NNP/pp. 239/CD/239 303/CD/303. isbn/NN/isbn 0-07-282379-8/CD/0-07-282379-8. */-NONE-/* cormen/VBN/cormen /,/, thomas/RB/thomas h/NNP/h. ;/:/; leiserson/NN/leiserson /,/, charles/NNS/charles e/NNP/e. ;/:/; rivest/JJS/rivest /,/, ronald/NN/ronald l/NNP/l. ;/:/; stein/NN/stein /,/, clifford/NN/clifford /:/( 2003/CD/2003 /CD/) /./. introduction/NN/introduction to/TO/to algorithms/NNP/algorithms. mit/NN/mit press/NNP/press. pp/NNP/pp. 205/CD/205 213,501/CD/213,501 505/CD/505. isbn/NN/isbn 0-262-03293-7/CD/0-262-03293-7. */-NONE-/* cormen/VBN/cormen /,/, thomas/RB/thomas h/NNP/h. ;/:/; leiserson/NN/leiserson /,/, charles/NNS/charles e/NNP/e. ;/:/; rivest/JJS/rivest /,/, ronald/NN/ronald l/NNP/l. ;/:/; stein/NN/stein /,/, clifford/NN/clifford /:/( 2001/CD/2001 /CD/) /./. "/CD/" 10.2/CD/10.2 /:/: linked/VBN/linked lists/NNS/lists "/:/" /./. introduction/NN/introduction to/TO/to algorithms/NNS/algorithms /:/( 2nd/CD/2nd ed/NNP/ed. /NNP/) /./. mit/NN/mit press/NNP/press. pp/NNP/pp. 204/CD/204 209.isbn/CD/209.isbn 0-262-03293-7/CD/0-262-03293-7. */-NONE-/* green/JJ/green /,/, bert/NN/bert f/NNP/f. /,/, jr/NNP/jr. /NNP/( 1961/CD/1961 /CD/) /./. "/CD/" computer/NN/computer languages/NNS/languages for/IN/for symbol/NN/symbol manipulation/NN/manipulation "/:/" /./. ire/NN/ire transactions/NNS/transactions on/IN/on human/JJ/human factors/NNS/factors in/IN/in electronics/NNS/electronics /:/( 2/CD/2 /CD/) /:/: 3/CD/3 8/CD/8. doi/NN/doi /:/: 10.1109/thfe2.1961.4503292/CD/10.1109/thfe2.1961.4503292. */-NONE-/* mccarthy/JJ/mccarthy /,/, john/NN/john /:/( 1960/CD/1960 /CD/) /./. "/CD/" recursive/JJ/recursive functions/NNS/functions of/IN/of symbolic/JJ/symbolic expressions/NNS/expressions and/CC/and their/PRP$/their computation/NN/computation by/IN/by machine/NN/machine /,/, part/NN/part i/PRP/i "/VBP/" /./. communications/NNS/communications of/IN/of the/DT/the acm/NN/acm 3/CD/3 /CD/( 4/CD/4 /CD/) /:/: 184.doi/CD/184.doi /:/: 10.1145/367177.367199/CD/10.1145/367177.367199. */-NONE-/* knuth/IN/knuth /,/, donald/NN/donald /:/( 1997/CD/1997 /CD/) /./. "/CD/" 2.2.3-2.2.5/CD/2.2.3-2.2.5 "/CD/" /./. fundamental/JJ/fundamental algorithms/NNS/algorithms /:/( 3rd/JJ/3rd ed/NNP/ed. /NNP/) /./. addison-wesley/NNP/addison-wesley. pp/NNP/pp. 254/CD/254 298/CD/298. isbn/NN/isbn 0-201-89683-4/CD/0-201-89683-4. */-NONE-/* newell/VB/newell /,/, allen/VBN/allen ;/:/; shaw/NN/shaw /,/, f/NNP/f. c/NNP/c. /NNP/( 1957/CD/1957 /CD/) /./. "/CD/" programming/NN/programming the/DT/the logic/NN/logic theory/NN/theory machine/NN/machine "/:/" /./. proceedings/NNS/proceedings of/IN/of the/DT/the western/JJ/western joint/NN/joint computer/NN/computer conference/NN/conference /:/: 230/CD/230 240/CD/240. */-NONE-/* parlante/VB/parlante /,/, nick/NN/nick /:/( 2001/CD/2001 /CD/) /./. "/CD/" linked/VBD/linked list/NN/list basics/NNS/basics "/:/" /:/( pdf/NN/pdf /:/) /./. stanford/NN/stanford university/NNP/university. retrieved/VBD/retrieved 2009-09-21/CD/2009-09-21. */-NONE-/* sedgewick/VB/sedgewick /,/, robert/NN/robert /:/( 1998/CD/1998 /CD/) /./. algorithms/NNS/algorithms in/IN/in c/NNP/c. addison/NN/addison wesley/NNP/wesley. pp/NNP/pp. 90/CD/90 109/CD/109. isbn/NN/isbn 0-201-31452-5/CD/0-201-31452-5. */-NONE-/* shaffer/VB/shaffer /,/, clifford/NN/clifford a/NNP/a. /NNP/( 1998/CD/1998 /CD/) /./. a/DT/a practical/JJ/practical introduction/NN/introduction to/TO/to data/NNS/data structures/NNS/structures and/CC/and algorithm/NN/algorithm analysis/NNP/analysis. new/JJ/new jersey/NN/jersey /:/: prentice/NN/prentice hall/NNP/hall. pp/NNP/pp. 77/CD/77 102/CD/102. isbn/NN/isbn 0-13-660911-2/CD/0-13-660911-2. */-NONE-/* wilkes/VBZ/wilkes /,/, maurice/NN/maurice vincent/NN/vincent /:/( 1964/CD/1964 /CD/) /./. "/CD/" an/DT/an experiment/NN/experiment with/IN/with a/DT/a self-compiling/JJ/self-compiling compiler/NN/compiler for/IN/for a/DT/a simple/JJ/simple list-processing/JJ/list-processing language/NN/language "/:/" /./. annual/JJ/annual review/NN/review in/IN/in automatic/JJ/automatic programming/NN/programming /:/( pergamon/NN/pergamon press/NN/press /:/) 4/CD/4 /CD/( 1/CD/1 /CD/) /:/: 1/CD/1. doi/NN/doi /:/: 10.1016/0066-4138/CD/10.1016/0066-4138 /CD/( 64/CD/64 /CD/) 90013-8/CD/90013-8. */-NONE-/* wilkes/VBZ/wilkes /,/, maurice/NN/maurice vincent/NN/vincent /:/( 1964/CD/1964 /CD/) /./. "/CD/" lists/NNS/lists and/CC/and why/WRB/why they/PRP/they are/VBP/are useful/JJ/useful "/NN/" /./. proceeds/NNS/proceeds of/IN/of the/DT/the acm/NN/acm national/JJ/national conference/NN/conference /,/, philadelphia/NN/philadelphia 1964/CD/1964 /CD/( acm/NN/acm /:/) /:/( p/NN/p 64/CD/64 /CD/) /:/: f1/NNP/f1 1/CD/1. */-NONE-/* shanmugasundaram/NN/shanmugasundaram /,/, kulesh/JJ/kulesh /NN/( 2005-04-04/CD/2005-04-04 /CD/) /./. "/CD/" linux/NN/linux kernel/NN/kernel linked/VBD/linked list/NN/list explained/VBN/explained "/-NONE-/" /./. retrieved/VBN/retrieved 2009-09-21/CD/2009-09-21. external/JJ/external links/NNS/links /:/[ edit/NN/edit /:/] wikimedia/NN/wikimedia commons/NNS/commons has/VBZ/has media/NNS/media related/VBN/related to/TO/to linked/VBN/linked lists/NNP/lists. */-NONE-/* description/NN/description from/IN/from the/DT/the dictionary/JJ/dictionary of/IN/of algorithms/NNS/algorithms and/CC/and data/NNS/data structures/NNS/structures */-NONE-/* introduction/NN/introduction to/TO/to linked/VBN/linked lists/NNS/lists /,/, stanford/NN/stanford university/NN/university computer/NN/computer science/NN/science library/NN/library */-NONE-/* linked/VBN/linked list/NN/list problems/NNS/problems /,/, stanford/NN/stanford university/NN/university computer/NN/computer science/NN/science library/NN/library */-NONE-/* open/VB/open data/NNS/data structures/NNS/structures /:/- chapter/NN/chapter 3/CD/3 /:/- linked/VBN/linked lists/NNS/lists */-NONE-/* patent/VB/patent for/IN/for the/DT/the idea/NN/idea of/IN/of having/VBG/having nodes/NNS/nodes which/WDT/which are/VBP/are in/IN/in several/JJ/several linked/VBN/linked lists/NNS/lists simultaneously/RB/simultaneously /:/( note/NN/note that/IN/that this/DT/this technique/NN/technique was/VBD/was widely/RB/widely used/VBN/used for/IN/for many/JJ/many decades/NNS/decades before/IN/before the/DT/the patent/NN/patent was/VBD/was granted/VBN/granted /-NONE-/) /:/[ hide/NN/hide /:/] */-NONE-/* v/VB/v */-NONE-/* t/VB/t */-NONE-/* e/VB/e data/NNS/data structures/NNS/structures types/NNS/types */-NONE-/* collection/NN/collection */-NONE-/* container/VB/container abstract/NN/abstract */-NONE-/* associative/VB/associative array/NN/array */-NONE-/* double-ended/JJ/double-ended priority/NN/priority queue/NN/queue */-NONE-/* double-ended/JJ/double-ended queue/NN/queue */-NONE-/* list/VB/list */-NONE-/* map/VB/map */-NONE-/* multimap/VB/multimap */-NONE-/* priority/NN/priority queue/VB/queue */-NONE-/* queue/VB/queue */-NONE-/* set/VB/set */-NONE-/* multiset/VB/multiset */-NONE-/* disjoint/VB/disjoint sets/NNS/sets */-NONE-/* stack/VB/stack arrays/NNS/arrays */-NONE-/* bit/VB/bit array/NN/array */-NONE-/* circular/JJ/circular buffer/NN/buffer */-NONE-/* dynamic/JJ/dynamic array/NN/array */-NONE-/* hash/VB/hash table/JJ/table */-NONE-/* hashed/VBN/hashed array/NN/array tree/NN/tree */-NONE-/* sparse/VB/sparse array/NN/array linked/VBN/linked */-NONE-/* association/NN/association list/NN/list */-NONE-/* linked/VBN/linked list/NN/list */-NONE-/* skip/VB/skip list/NN/list */-NONE-/* unrolled/VBN/unrolled linked/VBN/linked list/NN/list */-NONE-/* xor/VB/xor linked/VBN/linked list/NN/list trees/NNS/trees */-NONE-/* b-tree/JJ/b-tree */-NONE-/* binary/JJ/binary search/NN/search tree/NN/tree */-NONE-/* aa/VB/aa */-NONE-/* avl/VB/avl */-NONE-/* red-black/JJ/red-black */-NONE-/* self-balancing/JJ/self-balancing */-NONE-/* splay/VB/splay */-NONE-/* heap/VB/heap */-NONE-/* binary/VB/binary */-NONE-/* binomial/JJ/binomial */-NONE-/* fibonacci/VB/fibonacci */-NONE-/* r-tree/JJ/r-tree */-NONE-/* r/VB/r */-NONE-/* */-NONE-/* r/VB/r +/:/+ */-NONE-/* hilbert/VB/hilbert */-NONE-/* trie/VB/trie */-NONE-/* hash/VB/hash tree/JJ/tree graphs/NNS/graphs */-NONE-/* binary/JJ/binary decision/NN/decision diagram/NN/diagram */-NONE-/* directed/VBN/directed acyclic/JJ/acyclic graph/NN/graph */-NONE-/* directed/VBN/directed acyclic/JJ/acyclic word/NN/word graph/NN/graph */-NONE-/* list/VB/list of/IN/of data/NNS/data structures/NNS/structures authority/NN/authority control/NN/control */-NONE-/* gnd/VB/gnd /:/: 4783888-7/CD/4783888-7 categories/NNS/categories /:/: */-NONE-/* linked/VBN/linked lists/NNS/lists */-NONE-/* data/NNS/data structures/NNS/structures 