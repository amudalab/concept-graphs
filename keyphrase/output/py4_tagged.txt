the/DT/the goal/NN/goal of/IN/of this/DT/this book/NN/book is/VBZ/is to/TO/to teach/VB/teach you/PRP/you to/TO/to think/VB/think like/IN/like a/DT/a computer/NN/computer scientist/NNP/scientist. this/DT/this way/NN/way of/IN/of thinking/VBG/thinking combines/NNS/combines some/DT/some of/IN/of the/DT/the best/JJS/best features/NNS/features of/IN/of mathematics/NNS/mathematics /,/, engineering/NN/engineering /,/, and/CC/and natural/JJ/natural science/NNP/science. like/IN/like mathematicians/NNS/mathematicians /,/, computer/NN/computer scientists/NNS/scientists use/VBP/use formal/JJ/formal languages/NNS/languages to/TO/to denote/VB/denote ideas/NNS/ideas /:/( specifically/RB/specifically computations/NNS/computations /:/) /./. like/IN/like engineers/NNS/engineers /,/, they/PRP/they design/VBP/design things/NNS/things /,/, assembling/VBG/assembling components/NNS/components into/IN/into systems/NNS/systems and/CC/and evaluating/VBG/evaluating tradeoffs/NNS/tradeoffs among/IN/among alternatives/NNP/alternatives. like/IN/like scientists/NNS/scientists /,/, they/PRP/they observe/VBP/observe the/DT/the behavior/NN/behavior of/IN/of complex/JJ/complex systems/NNS/systems /,/, form/NN/form hypotheses/NNS/hypotheses /,/, and/CC/and test/NN/test predictions/NNP/predictions. the/DT/the single/JJ/single most/JJS/most important/JJ/important skill/NN/skill for/IN/for a/DT/a computer/NN/computer scientist/NN/scientist is/VBZ/is problem/NN/problem solving/NNP/solving. problem/NN/problem solving/VBG/solving means/NNS/means the/DT/the ability/NN/ability to/TO/to formulate/VB/formulate problems/NNS/problems /,/, think/VBP/think creatively/RB/creatively about/IN/about solutions/NNS/solutions /,/, and/CC/and express/NN/express a/DT/a solution/NN/solution clearly/RB/clearly and/CC/and accurately/NNP/accurately. as/IN/as it/PRP/it turns/VBZ/turns out/RP/out /,/, the/DT/the process/NN/process of/IN/of learning/NN/learning to/TO/to program/NN/program is/VBZ/is an/DT/an excellent/NN/excellent opportunity/NN/opportunity to/TO/to practice/NN/practice problem/NN/problem solving/VBG/solving skills/NNP/skills. that/IN/that s/NNS/s why/WRB/why this/DT/this chapter/NN/chapter is/VBZ/is called/VBN/called /,/, the/DT/the way/NN/way of/IN/of the/DT/the program/NNP/program. on/IN/on one/CD/one level/NN/level /,/, you/PRP/you will/MD/will be/VB/be learning/VBG/learning to/TO/to program/NN/program /,/, a/DT/a useful/JJ/useful skill/NN/skill by/IN/by itself/NNP/itself. on/IN/on another/DT/another level/NN/level /,/, you/PRP/you will/MD/will use/VB/use programming/NN/programming as/IN/as a/DT/a means/NNS/means to/TO/to an/DT/an end/NNP/end. as/IN/as we/PRP/we go/VBP/go along/IN/along /,/, that/IN/that end/NN/end will/MD/will become/VB/become clearer/NNP/clearer. 1.1/CD/1.1 the/DT/the python/NN/python programming/NN/programming language/NN/language the/DT/the programming/NN/programming language/NN/language you/PRP/you will/MD/will be/VB/be learning/VBG/learning is/VBZ/is python/NNP/python. python/NN/python is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a high-level/JJ/high-level language/NN/language ;/:/; other/JJ/other high-level/JJ/high-level languages/NNS/languages you/PRP/you might/MD/might have/VB/have heard/VBN/heard of/IN/of are/VBP/are c/JJ/c /,/, c/NN/c +/:/+ +/:/+ /,/, perl/NN/perl /,/, and/CC/and java/NNP/java. as/IN/as you/PRP/you might/MD/might infer/VB/infer from/IN/from the/DT/the name/NN/name high-level/NN/high-level language/NN/language /,/, there/EX/there are/VBP/are also/RB/also lowlevel/JJ/lowlevel languages/NNS/languages /,/, sometimes/RB/sometimes referred/VBN/referred to/TO/to as/RB/as machine/NN/machine languages/NNS/languages or/CC/or assembly/RB/assembly 2/CD/2 the/DT/the way/NN/way of/IN/of the/DT/the program/NN/program languages/NNP/languages. loosely/RB/loosely speaking/VBG/speaking /,/, computers/NNS/computers can/MD/can only/RB/only execute/VB/execute programs/NNS/programs written/VBN/written in/IN/in low-level/NNP/low-level languages/NNP/languages. thus/RB/thus /,/, programs/NNS/programs written/VBN/written in/IN/in a/DT/a high-level/JJ/high-level language/NN/language have/VBP/have to/TO/to be/VB/be processed/VBN/processed before/IN/before they/PRP/they can/MD/can run/NNP/run. this/DT/this extra/JJ/extra processing/NN/processing takes/VBZ/takes some/DT/some time/NN/time /,/, which/WDT/which is/VBZ/is a/DT/a small/JJ/small disadvantage/NN/disadvantage of/IN/of high-level/JJ/high-level languages/NNP/languages. but/CC/but the/DT/the advantages/NNS/advantages are/VBP/are enormous/NNP/enormous. first/RB/first /,/, it/PRP/it is/VBZ/is much/RB/much easier/JJR/easier to/TO/to program/NN/program in/IN/in a/DT/a high-level/JJ/high-level language/NNP/language. programs/NNS/programs written/VBN/written in/IN/in a/DT/a high-level/JJ/high-level language/NN/language take/NN/take less/NN/less time/NN/time to/TO/to write/VB/write /,/, they/PRP/they are/VBP/are shorter/RBR/shorter and/CC/and easier/JJR/easier to/TO/to read/VB/read /,/, and/CC/and they/PRP/they are/VBP/are more/RBR/more likely/JJ/likely to/TO/to be/VB/be correct/NNP/correct. second/JJ/second /,/, high-level/JJ/high-level languages/NNS/languages are/VBP/are portable/JJ/portable /,/, meaning/NN/meaning that/IN/that they/PRP/they can/MD/can run/VB/run on/IN/on different/JJ/different kinds/NNS/kinds of/IN/of computers/NNS/computers with/IN/with few/JJ/few or/CC/or no/DT/no modifications/NNP/modifications. low-level/NNP/low-level programs/NNS/programs can/MD/can run/VB/run on/IN/on only/RB/only one/CD/one kind/NN/kind of/IN/of computer/NN/computer and/CC/and have/VB/have to/TO/to be/VB/be rewritten/VBN/rewritten to/TO/to run/VB/run on/IN/on another/NNP/another. due/JJ/due to/TO/to these/DT/these advantages/NNS/advantages /,/, almost/RB/almost all/DT/all programs/NNS/programs are/VBP/are written/VBN/written in/IN/in high-level/NNP/high-level languages/NNP/languages. low-level/NNP/low-level languages/NNS/languages are/VBP/are used/VBN/used only/RB/only for/IN/for a/DT/a few/JJ/few specialized/VBN/specialized applications/NNP/applications. two/CD/two kinds/NNS/kinds of/IN/of programs/NNS/programs process/NN/process high-level/NN/high-level languages/NNS/languages into/IN/into low-level/JJ/low-level languages/NNS/languages /:/: interpreters/NNS/interpreters and/CC/and compilers/NNP/compilers. an/DT/an interpreter/NN/interpreter reads/NNS/reads a/DT/a high-level/JJ/high-level program/NN/program and/CC/and executes/VBZ/executes it/PRP/it /,/, meaning/VBG/meaning that/IN/that it/PRP/it does/VBZ/does what/WP/what the/DT/the program/NN/program says/NNP/says. it/PRP/it processes/VBZ/processes the/DT/the program/NN/program a/DT/a little/RB/little at/IN/at a/DT/a time/NN/time /,/, alternately/RB/alternately reading/VBG/reading lines/NNS/lines and/CC/and performing/VBG/performing computations/NNP/computations. source/NN/source output/VBD/output code/NN/code interpreter/NN/interpreter a/DT/a compiler/NN/compiler reads/NNS/reads the/DT/the program/NN/program and/CC/and translates/VBZ/translates it/PRP/it completely/RB/completely before/IN/before the/DT/the program/NN/program starts/VBZ/starts running/NNP/running. in/IN/in this/DT/this case/NN/case /,/, the/DT/the high-level/JJ/high-level program/NN/program is/VBZ/is called/VBN/called the/DT/the source/NN/source code/NN/code /,/, and/CC/and the/DT/the translated/JJ/translated program/NN/program is/VBZ/is called/VBN/called the/DT/the object/NN/object code/NN/code or/CC/or the/DT/the executable/NNP/executable. once/RB/once a/DT/a program/NN/program is/VBZ/is compiled/VBN/compiled /,/, you/PRP/you can/MD/can execute/VB/execute it/PRP/it repeatedly/RB/repeatedly without/IN/without further/JJ/further translation/NNP/translation. output/NN/output code/NN/code object/NN/object executor/NN/executor code/NN/code source/NN/source compiler/NN/compiler python/NN/python is/VBZ/is considered/VBN/considered an/DT/an interpreted/VBN/interpreted language/NN/language because/IN/because python/NN/python programs/NNS/programs are/VBP/are executed/VBN/executed by/IN/by an/DT/an interpreter/NNP/interpreter. there/RB/there are/VBP/are two/CD/two ways/NNS/ways to/TO/to use/VB/use the/DT/the interpreter/NN/interpreter /:/: commandline/NN/commandline mode/NN/mode and/CC/and script/NN/script mode/NNP/mode. in/IN/in command-line/JJ/command-line mode/NN/mode /,/, you/PRP/you type/VBP/type python/NN/python programs/NNS/programs and/CC/and the/DT/the interpreter/NN/interpreter prints/NNS/prints the/DT/the result/NN/result /:/: 1.2/CD/1.2 what/WP/what is/VBZ/is a/DT/a program/NN/program 3/CD/3 $/$/$ python/NN/python python/NN/python 2.4.1/CD/2.4.1 /CD/( #/#/# 1/CD/1 /,/, apr/NN/apr 29/CD/29 2005/CD/2005 /,/, 00/CD/00 /:/: 28/CD/28 /:/: 56/CD/56 /CD/) type/NN/type help/NN/help /,/, copyright/NN/copyright /,/, credits/NNS/credits or/CC/or license/NN/license for/IN/for more/JJR/more information/NNP/information. >/:/> >/:/> >/:/> print/NN/print 1/CD/1 +/CD/+ 1/CD/1 2/CD/2 the/DT/the first/JJ/first line/NN/line of/IN/of this/DT/this example/NN/example is/VBZ/is the/DT/the command/NN/command that/IN/that starts/NNS/starts the/DT/the python/NN/python interpreter/NNP/interpreter. the/DT/the next/JJ/next two/CD/two lines/NNS/lines are/VBP/are messages/NNS/messages from/IN/from the/DT/the interpreter/NNP/interpreter. the/DT/the third/JJ/third line/NN/line starts/VBZ/starts with/IN/with >/CD/> >/CD/> >/CD/> /,/, which/WDT/which is/VBZ/is the/DT/the prompt/NN/prompt the/DT/the interpreter/NN/interpreter uses/VBZ/uses to/TO/to indicate/VB/indicate that/IN/that it/PRP/it is/VBZ/is ready/NNP/ready. we/PRP/we typed/VBD/typed print/VBP/print 1/CD/1 +/CD/+ 1/CD/1 /,/, and/CC/and the/DT/the interpreter/NN/interpreter replied/VBD/replied 2/CD/2. alternatively/RB/alternatively /,/, you/PRP/you can/MD/can write/VB/write a/DT/a program/NN/program in/IN/in a/DT/a file/NN/file and/CC/and use/VBP/use the/DT/the interpreter/NN/interpreter to/TO/to execute/VB/execute the/DT/the contents/NNS/contents of/IN/of the/DT/the file/NNP/file. such/JJ/such a/DT/a file/NN/file is/VBZ/is called/VBN/called a/DT/a script/NNP/script. for/IN/for example/NN/example /,/, we/PRP/we used/VBD/used a/DT/a text/NN/text editor/NN/editor to/TO/to create/VB/create a/DT/a file/NN/file named/VBN/named latoya.py/JJ/latoya.py with/IN/with the/DT/the following/VBG/following contents/NNS/contents /:/: print/NN/print 1/CD/1 +/CD/+ 1/CD/1 by/IN/by convention/NN/convention /,/, files/NNS/files that/WDT/that contain/NN/contain python/NN/python programs/NNS/programs have/VBP/have names/NNS/names that/IN/that end/NN/end with/IN/with .py/NNP/.py. to/TO/to execute/VB/execute the/DT/the program/NN/program /,/, we/PRP/we have/VBP/have to/TO/to tell/VB/tell the/DT/the interpreter/NN/interpreter the/DT/the name/NN/name of/IN/of the/DT/the script/NN/script /:/: $/$/$ python/NN/python latoya.py/JJ/latoya.py 2/CD/2 in/IN/in other/JJ/other development/NN/development environments/NNS/environments /,/, the/DT/the details/NNS/details of/IN/of executing/VBG/executing programs/NNS/programs may/MD/may differ/NNP/differ. also/RB/also /,/, most/RBS/most programs/NNS/programs are/VBP/are more/RBR/more interesting/JJ/interesting than/IN/than this/DT/this one/NNP/one. most/JJS/most of/IN/of the/DT/the examples/NNS/examples in/IN/in this/DT/this book/NN/book are/VBP/are executed/VBN/executed on/IN/on the/DT/the command/NN/command line/NNP/line. working/NN/working on/IN/on the/DT/the command/NN/command line/NN/line is/VBZ/is convenient/JJ/convenient for/IN/for program/NN/program development/NN/development and/CC/and testing/NN/testing /,/, because/IN/because you/PRP/you can/MD/can type/VB/type programs/NNS/programs and/CC/and execute/VB/execute them/PRP/them immediately/NNP/immediately. once/RB/once you/PRP/you have/VB/have a/DT/a working/VBG/working program/NN/program /,/, you/PRP/you should/MD/should store/VB/store it/PRP/it in/IN/in a/DT/a script/NN/script so/IN/so you/PRP/you can/MD/can execute/VB/execute or/CC/or modify/VB/modify it/PRP/it in/IN/in the/DT/the future/NNP/future. 1.2/CD/1.2 what/WP/what is/VBZ/is a/DT/a program/NN/program a/DT/a program/NN/program is/VBZ/is a/DT/a sequence/NN/sequence of/IN/of instructions/NNS/instructions that/WDT/that specifies/NNS/specifies how/WRB/how to/TO/to perform/VB/perform a/DT/a computation/NNP/computation. the/DT/the computation/NN/computation might/MD/might be/VB/be something/NN/something mathematical/JJ/mathematical /,/, such/JJ/such as/IN/as solving/NN/solving a/DT/a system/NN/system of/IN/of equations/NNS/equations or/CC/or finding/VBG/finding the/DT/the roots/NNS/roots of/IN/of a/DT/a polynomial/JJ/polynomial /,/, but/CC/but it/PRP/it can/MD/can also/RB/also be/VB/be a/DT/a symbolic/JJ/symbolic computation/NN/computation /,/, such/JJ/such as/IN/as searching/NN/searching and/CC/and replacing/VBG/replacing text/NN/text in/IN/in a/DT/a document/NN/document or/CC/or /CD/( strangely/RB/strangely enough/RB/enough /:/) compiling/VBG/compiling a/DT/a program/NNP/program. the/DT/the details/NNS/details look/VBP/look different/JJ/different in/IN/in different/JJ/different languages/NNS/languages /,/, but/CC/but a/DT/a few/JJ/few basic/JJ/basic instructions/NNS/instructions appear/VBP/appear in/IN/in just/RB/just about/IN/about every/DT/every language/NN/language /:/: 4/CD/4 the/DT/the way/NN/way of/IN/of the/DT/the program/NN/program input/NN/input /:/: get/NN/get data/NNS/data from/IN/from the/DT/the keyboard/NN/keyboard /,/, a/DT/a file/NN/file /,/, or/CC/or some/DT/some other/JJ/other device/NNP/device. output/NN/output /:/: display/NN/display data/NNS/data on/IN/on the/DT/the screen/NN/screen or/CC/or send/VB/send data/NNS/data to/TO/to a/DT/a file/NN/file or/CC/or other/JJ/other device/NNP/device. math/NN/math /:/: perform/NN/perform basic/JJ/basic mathematical/JJ/mathematical operations/NNS/operations like/IN/like addition/NN/addition and/CC/and multiplication/NNP/multiplication. conditional/JJ/conditional execution/NN/execution /:/: check/NN/check for/IN/for certain/JJ/certain conditions/NNS/conditions and/CC/and execute/VB/execute the/DT/the appropriate/NN/appropriate sequence/NN/sequence of/IN/of statements/NNP/statements. repetition/NN/repetition /:/: perform/NN/perform some/DT/some action/NN/action repeatedly/RB/repeatedly /,/, usually/RB/usually with/IN/with some/DT/some variation/NNP/variation. believe/VBP/believe it/PRP/it or/CC/or not/RB/not /,/, that/WDT/that s/VBZ/s pretty/RB/pretty much/RB/much all/DT/all there/EX/there is/VBZ/is to/TO/to it/NNP/it. every/DT/every program/NN/program you/PRP/you ve/VBP/ve ever/RB/ever used/VBN/used /,/, no/DT/no matter/NN/matter how/WRB/how complicated/JJ/complicated /,/, is/VBZ/is made/VBN/made up/RP/up of/IN/of instructions/NNS/instructions that/WDT/that look/NN/look more/RBR/more or/CC/or less/JJR/less like/IN/like these/NNP/these. thus/RB/thus /,/, we/PRP/we can/MD/can describe/VB/describe programming/NN/programming as/IN/as the/DT/the process/NN/process of/IN/of breaking/VBG/breaking a/DT/a large/JJ/large /,/, complex/JJ/complex task/NN/task into/IN/into smaller/JJR/smaller and/CC/and smaller/JJR/smaller subtasks/NNS/subtasks until/IN/until the/DT/the subtasks/NNS/subtasks are/VBP/are simple/JJ/simple enough/JJ/enough to/TO/to be/VB/be performed/VBN/performed with/IN/with one/CD/one of/IN/of these/DT/these basic/JJ/basic instructions/NNP/instructions. that/IN/that may/MD/may be/VB/be a/DT/a little/RB/little vague/JJ/vague /,/, but/CC/but we/PRP/we will/MD/will come/VB/come back/RB/back to/TO/to this/DT/this topic/JJ/topic later/NN/later when/WRB/when we/PRP/we talk/VBP/talk about/IN/about algorithms/NNP/algorithms. 1.3/CD/1.3 what/WP/what is/VBZ/is debugging/VBG/debugging programming/NN/programming is/VBZ/is a/DT/a complex/JJ/complex process/NN/process /,/, and/CC/and because/IN/because it/PRP/it is/VBZ/is done/VBN/done by/IN/by human/JJ/human beings/NNS/beings /,/, it/PRP/it often/RB/often leads/VBZ/leads to/TO/to errors/NNP/errors. for/IN/for whimsical/JJ/whimsical reasons/NNS/reasons /,/, programming/VBG/programming errors/NNS/errors are/VBP/are called/VBN/called bugs/NNS/bugs and/CC/and the/DT/the process/NN/process of/IN/of tracking/VBG/tracking them/PRP/them down/IN/down and/CC/and correcting/VBG/correcting them/PRP/them is/VBZ/is called/VBN/called debugging/-NONE-/debugging. three/CD/three kinds/NNS/kinds of/IN/of errors/NNS/errors can/MD/can occur/VB/occur in/IN/in a/DT/a program/NN/program /:/: syntax/NN/syntax errors/NNS/errors /,/, runtime/VBP/runtime errors/NNS/errors /,/, and/CC/and semantic/JJ/semantic errors/NNP/errors. it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to distinguish/VB/distinguish between/IN/between them/PRP/them in/IN/in order/NN/order to/TO/to track/VB/track them/PRP/them down/IN/down more/JJR/more quickly/NNP/quickly. 1.3.1/CD/1.3.1 syntax/NN/syntax errors/NNS/errors python/VBP/python can/MD/can only/RB/only execute/VB/execute a/DT/a program/NN/program if/IN/if the/DT/the program/NN/program is/VBZ/is syntactically/RB/syntactically correct/JJ/correct ;/:/; otherwise/NN/otherwise /,/, the/DT/the process/NN/process fails/VBZ/fails and/CC/and returns/NNS/returns an/DT/an error/NN/error message/NNP/message. syntax/NN/syntax refers/NNS/refers to/TO/to the/DT/the structure/NN/structure of/IN/of a/DT/a program/NN/program and/CC/and the/DT/the rules/NNS/rules about/IN/about that/DT/that structure/NNP/structure. for/IN/for example/NN/example /,/, in/IN/in english/JJ/english /,/, a/DT/a sentence/NN/sentence must/MD/must begin/VB/begin with/IN/with a/DT/a capital/NN/capital letter/NN/letter and/CC/and end/NN/end with/IN/with a/DT/a period/NNP/period. this/DT/this sentence/NN/sentence contains/VBZ/contains a/DT/a syntax/NN/syntax error/NNP/error. so/RB/so does/VBZ/does this/DT/this one/CD/one for/IN/for most/JJS/most readers/NNS/readers /,/, a/DT/a few/JJ/few syntax/NN/syntax errors/NNS/errors are/VBP/are not/RB/not a/DT/a significant/JJ/significant problem/NN/problem /,/, which/WDT/which is/VBZ/is why/WRB/why we/PRP/we can/MD/can read/VB/read the/DT/the poetry/NN/poetry of/IN/of e/NNP/e. e/NNP/e. cummings/NNS/cummings without/IN/without spewing/VBG/spewing error/NN/error messages/NNP/messages. python/NN/python is/VBZ/is not/RB/not so/RB/so forgiving/NNP/forgiving. if/IN/if there/EX/there is/VBZ/is a/DT/a single/JJ/single syntax/NN/syntax error/NN/error anywhere/RB/anywhere in/IN/in your/PRP$/your program/NN/program /,/, python/NN/python will/MD/will print/VB/print an/DT/an error/NN/error message/NN/message and/CC/and quit/NN/quit /,/, and/CC/and you/PRP/you will/MD/will not/RB/not be/VB/be able/JJ/able to/TO/to run/VB/run your/PRP$/your program/NNP/program. during/IN/during the/DT/the first/JJ/first few/JJ/few weeks/NNS/weeks of/IN/of your/PRP$/your programming/NN/programming career/NN/career /,/, you/PRP/you will/MD/will probably/RB/probably spend/VB/spend a/DT/a lot/NN/lot of/IN/of time/NN/time tracking/VBG/tracking down/IN/down syntax/NN/syntax errors/NNP/errors. as/IN/as you/PRP/you gain/VBP/gain experience/NN/experience /,/, though/IN/though /,/, you/PRP/you will/MD/will make/VB/make fewer/JJR/fewer errors/NNS/errors and/CC/and find/VBP/find them/PRP/them faster/NNP/faster. 1.3/CD/1.3 what/WP/what is/VBZ/is debugging/VBG/debugging 5/CD/5 1.3.2/CD/1.3.2 runtime/NN/runtime errors/NNS/errors the/DT/the second/JJ/second type/NN/type of/IN/of error/NN/error is/VBZ/is a/DT/a runtime/NN/runtime error/NN/error /,/, so/RB/so called/VBN/called because/IN/because the/DT/the error/NN/error does/VBZ/does not/RB/not appear/VB/appear until/IN/until you/PRP/you run/VBP/run the/DT/the program/NNP/program. these/DT/these errors/NNS/errors are/VBP/are also/RB/also called/VBN/called exceptions/NNS/exceptions because/IN/because they/PRP/they usually/RB/usually indicate/VBP/indicate that/IN/that something/NN/something exceptional/JJ/exceptional /NN/( and/CC/and bad/JJ/bad /NN/) has/VBZ/has happened/NNP/happened. runtime/NN/runtime errors/NNS/errors are/VBP/are rare/JJ/rare in/IN/in the/DT/the simple/JJ/simple programs/NNS/programs you/PRP/you will/MD/will see/VB/see in/IN/in the/DT/the first/JJ/first few/JJ/few chapters/NNS/chapters /,/, so/RB/so it/PRP/it might/MD/might be/VB/be a/DT/a while/NN/while before/IN/before you/PRP/you encounter/JJR/encounter one/NNP/one. 1.3.3/CD/1.3.3 semantic/JJ/semantic errors/NNS/errors the/DT/the third/JJ/third type/NN/type of/IN/of error/NN/error is/VBZ/is the/DT/the semantic/JJ/semantic error/NNP/error. if/IN/if there/EX/there is/VBZ/is a/DT/a semantic/JJ/semantic error/NN/error in/IN/in your/PRP$/your program/NN/program /,/, it/PRP/it will/MD/will run/VB/run successfully/RB/successfully /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that the/DT/the computer/NN/computer will/MD/will not/RB/not generate/VB/generate any/DT/any error/NN/error messages/NNS/messages /,/, but/CC/but it/PRP/it will/MD/will not/RB/not do/VB/do the/DT/the right/NN/right thing/NNP/thing. it/PRP/it will/MD/will do/VB/do something/NN/something else/NNP/else. specifically/RB/specifically /,/, it/PRP/it will/MD/will do/VB/do what/WP/what you/PRP/you told/VBD/told it/PRP/it to/TO/to do/NNP/do. the/DT/the problem/NN/problem is/VBZ/is that/IN/that the/DT/the program/NN/program you/PRP/you wrote/VBD/wrote is/VBZ/is not/RB/not the/DT/the program/NN/program you/PRP/you wanted/VBD/wanted to/TO/to write/NNP/write. the/DT/the meaning/NN/meaning of/IN/of the/DT/the program/NN/program /:/( its/PRP$/its semantics/NNS/semantics /:/) is/VBZ/is wrong/NNP/wrong. identifying/NN/identifying semantic/JJ/semantic errors/NNS/errors can/MD/can be/VB/be tricky/JJ/tricky because/IN/because it/PRP/it requires/VBZ/requires you/PRP/you to/TO/to work/VB/work backward/NN/backward by/IN/by looking/VBG/looking at/IN/at the/DT/the output/NN/output of/IN/of the/DT/the program/NN/program and/CC/and trying/VBG/trying to/TO/to figure/VB/figure out/RP/out what/WP/what it/PRP/it is/VBZ/is doing/NNP/doing. 1.3.4/CD/1.3.4 experimental/JJ/experimental debugging/NN/debugging one/CD/one of/IN/of the/DT/the most/RBS/most important/JJ/important skills/NNS/skills you/PRP/you will/MD/will acquire/VB/acquire is/VBZ/is debugging/NNP/debugging. although/IN/although it/PRP/it can/MD/can be/VB/be frustrating/VBG/frustrating /,/, debugging/VBG/debugging is/VBZ/is one/CD/one of/IN/of the/DT/the most/RBS/most intellectually/RB/intellectually rich/JJ/rich /,/, challenging/VBG/challenging /,/, and/CC/and interesting/JJ/interesting parts/NNS/parts of/IN/of programming/NNP/programming. in/IN/in some/DT/some ways/NNS/ways /,/, debugging/VBG/debugging is/VBZ/is like/IN/like detective/JJ/detective work/NNP/work. you/PRP/you are/VBP/are confronted/VBN/confronted with/IN/with clues/NNS/clues /,/, and/CC/and you/PRP/you have/VBP/have to/TO/to infer/VB/infer the/DT/the processes/NNS/processes and/CC/and events/NNS/events that/WDT/that led/VBN/led to/TO/to the/DT/the results/NNS/results you/PRP/you see/NNP/see. debugging/VBG/debugging is/VBZ/is also/RB/also like/IN/like an/DT/an experimental/JJ/experimental science/NNP/science. once/RB/once you/PRP/you have/VB/have an/DT/an idea/NN/idea what/WP/what is/VBZ/is going/VBG/going wrong/JJ/wrong /,/, you/PRP/you modify/VBP/modify your/PRP$/your program/NN/program and/CC/and try/NN/try again/NNP/again. if/IN/if your/PRP$/your hypothesis/NN/hypothesis was/VBD/was correct/JJ/correct /,/, then/RB/then you/PRP/you can/MD/can predict/VB/predict the/DT/the result/NN/result of/IN/of the/DT/the modification/NN/modification /,/, and/CC/and you/PRP/you take/VBP/take a/DT/a step/NN/step closer/NN/closer to/TO/to a/DT/a working/NN/working program/NNP/program. if/IN/if your/PRP$/your hypothesis/NN/hypothesis was/VBD/was wrong/JJ/wrong /,/, you/PRP/you have/VBP/have to/TO/to come/VB/come up/RP/up with/IN/with a/DT/a new/JJ/new one/NNP/one. as/IN/as sherlock/NN/sherlock holmes/NNS/holmes pointed/VBD/pointed out/IN/out /,/, when/WRB/when you/PRP/you have/VBP/have eliminated/VBN/eliminated the/DT/the impossible/JJ/impossible /,/, whatever/RB/whatever remains/VBZ/remains /,/, however/RB/however improbable/JJ/improbable /,/, must/MD/must be/VB/be the/DT/the truth/NNP/truth. /NNP/( a/NNP/a. conan/NN/conan doyle/NN/doyle /,/, the/DT/the sign/NN/sign of/IN/of four/CD/four /CD/) for/IN/for some/DT/some people/NNS/people /,/, programming/VBG/programming and/CC/and debugging/VBG/debugging are/VBP/are the/DT/the same/JJ/same thing/NNP/thing. that/IN/that is/VBZ/is /,/, programming/NN/programming is/VBZ/is the/DT/the process/NN/process of/IN/of gradually/RB/gradually debugging/VBG/debugging a/DT/a program/NN/program until/IN/until it/PRP/it does/VBZ/does what/WP/what you/PRP/you want/NNP/want. the/DT/the idea/NN/idea is/VBZ/is that/IN/that you/PRP/you should/MD/should start/VB/start with/IN/with a/DT/a program/NN/program that/WDT/that does/VBZ/does something/NN/something and/CC/and make/VB/make small/JJ/small modifications/NNS/modifications /,/, debugging/VBG/debugging them/PRP/them as/IN/as you/PRP/you go/VBP/go /,/, so/RB/so that/IN/that you/PRP/you always/RB/always have/VBP/have a/DT/a working/VBG/working program/NNP/program. 6/CD/6 the/DT/the way/NN/way of/IN/of the/DT/the program/NN/program for/IN/for example/NN/example /,/, linux/NN/linux is/VBZ/is an/DT/an operating/NN/operating system/NN/system that/WDT/that contains/VBZ/contains thousands/NNS/thousands of/IN/of lines/NNS/lines of/IN/of code/NN/code /,/, but/CC/but it/PRP/it started/VBD/started out/IN/out as/IN/as a/DT/a simple/JJ/simple program/NN/program linus/NN/linus torvalds/NNS/torvalds used/VBN/used to/TO/to explore/VB/explore the/DT/the intel/NN/intel 80386/CD/80386 chip/NNP/chip. according/VBG/according to/TO/to larry/VB/larry greenfield/NN/greenfield /,/, one/CD/one of/IN/of linus/NN/linus s/NNS/s earlier/RBR/earlier projects/NNS/projects was/VBD/was a/DT/a program/NN/program that/WDT/that would/MD/would switch/VB/switch between/IN/between printing/NN/printing aaaa/NN/aaaa and/CC/and bbbb/NNP/bbbb. this/DT/this later/JJ/later evolved/VBD/evolved to/TO/to linux/NNP/linux. /NNP/( the/DT/the linux/NN/linux users/NNS/users guide/VBP/guide beta/NN/beta version/NN/version 1/CD/1 /CD/) later/JJ/later chapters/NNS/chapters will/MD/will make/VB/make more/RBR/more suggestions/NNS/suggestions about/IN/about debugging/VBG/debugging and/CC/and other/JJ/other programming/NN/programming practices/NNP/practices. 1.4/CD/1.4 formal/JJ/formal and/CC/and natural/JJ/natural languages/NNS/languages natural/JJ/natural languages/NNS/languages are/VBP/are the/DT/the languages/NNS/languages that/WDT/that people/NNS/people speak/VBP/speak /,/, such/JJ/such as/IN/as english/JJ/english /,/, spanish/JJ/spanish /,/, and/CC/and french/NNP/french. they/PRP/they were/VBD/were not/RB/not designed/VBN/designed by/IN/by people/NNS/people /:/( although/IN/although people/NNS/people try/NN/try to/TO/to impose/VB/impose some/DT/some order/NN/order on/IN/on them/PRP/them /:/) ;/:/; they/PRP/they evolved/VBD/evolved naturally/NNP/naturally. formal/JJ/formal languages/NNS/languages are/VBP/are languages/NNS/languages that/IN/that are/VBP/are designed/VBN/designed by/IN/by people/NNS/people for/IN/for specific/JJ/specific applications/NNP/applications. for/IN/for example/NN/example /,/, the/DT/the notation/NN/notation that/IN/that mathematicians/NNS/mathematicians use/VBP/use is/VBZ/is a/DT/a formal/JJ/formal language/NN/language that/IN/that is/VBZ/is particularly/RB/particularly good/JJ/good at/IN/at denoting/NN/denoting relationships/NNS/relationships among/IN/among numbers/NNS/numbers and/CC/and symbols/NNP/symbols. chemists/NNS/chemists use/VBP/use a/DT/a formal/JJ/formal language/NN/language to/TO/to represent/VB/represent the/DT/the chemical/JJ/chemical structure/NN/structure of/IN/of molecules/NNP/molecules. and/CC/and most/JJS/most importantly/RB/importantly /:/: programming/NN/programming languages/NNS/languages are/VBP/are formal/JJ/formal languages/NNS/languages that/WDT/that have/VBP/have been/VBN/been designed/VBN/designed to/TO/to express/NN/express computations/NNP/computations. formal/JJ/formal languages/NNS/languages tend/VBP/tend to/TO/to have/VB/have strict/JJ/strict rules/NNS/rules about/IN/about syntax/NNP/syntax. for/IN/for example/NN/example /,/, 3/CD/3 +/:/+ 3/CD/3 =/CD/= 6/CD/6 is/VBZ/is a/DT/a syntactically/RB/syntactically correct/JJ/correct mathematical/JJ/mathematical statement/NN/statement /,/, but/CC/but 3/LS/3 =/:/= +/:/+ 6/CD/6 $/$/$ is/VBZ/is not/NNP/not. h2o/NNP/h2o is/VBZ/is a/DT/a syntactically/RB/syntactically correct/JJ/correct chemical/NN/chemical name/NN/name /,/, but/CC/but 2zz/CD/2zz is/VBZ/is not/NNP/not. syntax/NN/syntax rules/NNS/rules come/VBP/come in/IN/in two/CD/two flavors/NNS/flavors /,/, pertaining/VBG/pertaining to/TO/to tokens/NNS/tokens and/CC/and structure/NNP/structure. tokens/NNS/tokens are/VBP/are the/DT/the basic/JJ/basic elements/NNS/elements of/IN/of the/DT/the language/NN/language /,/, such/JJ/such as/IN/as words/NNS/words /,/, numbers/NNS/numbers /,/, and/CC/and chemical/JJ/chemical elements/NNP/elements. one/CD/one of/IN/of the/DT/the problems/NNS/problems with/IN/with 3/CD/3 =/CD/= +/CD/+ 6/CD/6 $/$/$ is/VBZ/is that/IN/that $/$/$ is/VBZ/is not/RB/not a/DT/a legal/JJ/legal token/NN/token in/IN/in mathematics/NN/mathematics /:/( at/IN/at least/JJS/least as/IN/as far/RB/far as/IN/as we/PRP/we know/VBP/know /:/) /./. similarly/RB/similarly /,/, 2zz/CD/2zz is/VBZ/is not/RB/not legal/JJ/legal because/IN/because there/EX/there is/VBZ/is no/DT/no element/NN/element with/IN/with the/DT/the abbreviation/NN/abbreviation zz/NNP/zz. the/DT/the second/JJ/second type/NN/type of/IN/of syntax/NN/syntax error/NN/error pertains/VBZ/pertains to/TO/to the/DT/the structure/NN/structure of/IN/of a/DT/a statement/NN/statement that/IN/that is/VBZ/is /,/, the/DT/the way/NN/way the/DT/the tokens/NNS/tokens are/VBP/are arranged/NNP/arranged. the/DT/the statement/NN/statement 3/CD/3 =/CD/= +/CD/+ 6/CD/6 $/$/$ is/VBZ/is structurally/RB/structurally illegal/JJ/illegal because/IN/because you/PRP/you can/MD/can t/VB/t place/NN/place a/DT/a plus/NN/plus sign/NN/sign immediately/RB/immediately after/IN/after an/DT/an equal/JJ/equal sign/NNP/sign. similarly/RB/similarly /,/, molecular/JJ/molecular formulas/NNS/formulas have/VBP/have to/TO/to have/VB/have subscripts/NNS/subscripts after/IN/after the/DT/the element/NN/element name/NN/name /,/, not/RB/not before/NNP/before. as/IN/as an/DT/an exercise/NN/exercise /,/, create/VB/create what/WP/what appears/NNS/appears to/TO/to be/VB/be a/DT/a well-structured/JJ/well-structured english/NN/english sentence/NN/sentence with/IN/with unrecognizable/JJ/unrecognizable tokens/NNS/tokens in/IN/in it/NNP/it. then/RB/then write/VB/write another/DT/another sentence/NN/sentence with/IN/with all/DT/all valid/JJ/valid tokens/NNS/tokens but/CC/but with/IN/with invalid/JJ/invalid structure/NNP/structure. 1.4/CD/1.4 formal/JJ/formal and/CC/and natural/JJ/natural languages/NNS/languages 7/CD/7 when/WRB/when you/PRP/you read/VBP/read a/DT/a sentence/NN/sentence in/IN/in english/JJ/english or/CC/or a/DT/a statement/NN/statement in/IN/in a/DT/a formal/JJ/formal language/NN/language /,/, you/PRP/you have/VBP/have to/TO/to figure/VB/figure out/RP/out what/WP/what the/DT/the structure/NN/structure of/IN/of the/DT/the sentence/NN/sentence is/VBZ/is /:/( although/IN/although in/IN/in a/DT/a natural/JJ/natural language/NN/language you/PRP/you do/VBP/do this/DT/this subconsciously/RB/subconsciously /:/) /./. this/DT/this process/NN/process is/VBZ/is called/VBN/called parsing/-NONE-/parsing. for/IN/for example/NN/example /,/, when/WRB/when you/PRP/you hear/VBP/hear the/DT/the sentence/NN/sentence /,/, the/DT/the other/JJ/other shoe/NN/shoe fell/VBD/fell /,/, you/PRP/you understand/VBP/understand that/IN/that the/DT/the other/JJ/other shoe/NN/shoe is/VBZ/is the/DT/the subject/NN/subject and/CC/and fell/VBD/fell is/VBZ/is the/DT/the predicate/NNP/predicate. once/RB/once you/PRP/you have/VB/have parsed/VBN/parsed a/DT/a sentence/NN/sentence /,/, you/PRP/you can/MD/can figure/VB/figure out/RP/out what/WP/what it/PRP/it means/VBZ/means /,/, or/CC/or the/DT/the semantics/NNS/semantics of/IN/of the/DT/the sentence/NNP/sentence. assuming/NN/assuming that/WDT/that you/PRP/you know/VBP/know what/WP/what a/DT/a shoe/NN/shoe is/VBZ/is and/CC/and what/WP/what it/PRP/it means/VBZ/means to/TO/to fall/VB/fall /,/, you/PRP/you will/MD/will understand/VB/understand the/DT/the general/JJ/general implication/NN/implication of/IN/of this/DT/this sentence/NNP/sentence. although/IN/although formal/JJ/formal and/CC/and natural/JJ/natural languages/NNS/languages have/VBP/have many/JJ/many features/NNS/features in/IN/in common/JJ/common tokens/NNS/tokens /,/, structure/NN/structure /,/, syntax/NN/syntax /,/, and/CC/and semantics/NNS/semantics there/RB/there are/VBP/are many/JJ/many differences/NNS/differences /:/: ambiguity/NN/ambiguity /:/: natural/JJ/natural languages/NNS/languages are/VBP/are full/JJ/full of/IN/of ambiguity/NN/ambiguity /,/, which/WDT/which people/NNS/people deal/VBP/deal with/IN/with by/IN/by using/VBG/using contextual/JJ/contextual clues/NNS/clues and/CC/and other/JJ/other information/NNP/information. formal/JJ/formal languages/NNS/languages are/VBP/are designed/VBN/designed to/TO/to be/VB/be nearly/RB/nearly or/CC/or completely/RB/completely unambiguous/JJ/unambiguous /,/, which/WDT/which means/VBZ/means that/DT/that any/DT/any statement/NN/statement has/VBZ/has exactly/RB/exactly one/CD/one meaning/VBG/meaning /,/, regardless/RB/regardless of/IN/of context/NNP/context. redundancy/NN/redundancy /:/: in/IN/in order/NN/order to/TO/to make/VB/make up/RP/up for/IN/for ambiguity/NN/ambiguity and/CC/and reduce/VB/reduce misunderstandings/NNS/misunderstandings /,/, natural/JJ/natural languages/NNS/languages employ/VBP/employ lots/NNS/lots of/IN/of redundancy/NNP/redundancy. as/IN/as a/DT/a result/NN/result /,/, they/PRP/they are/VBP/are often/RB/often verbose/NNP/verbose. formal/JJ/formal languages/NNS/languages are/VBP/are less/JJR/less redundant/JJ/redundant and/CC/and more/RBR/more concise/NNP/concise. literalness/NN/literalness /:/: natural/JJ/natural languages/NNS/languages are/VBP/are full/JJ/full of/IN/of idiom/NN/idiom and/CC/and metaphor/NNP/metaphor. if/IN/if i/PRP/i say/VBP/say /,/, the/DT/the other/JJ/other shoe/NN/shoe fell/VBD/fell /,/, there/EX/there is/VBZ/is probably/RB/probably no/DT/no shoe/NN/shoe and/CC/and nothing/NN/nothing falling/NNP/falling. formal/JJ/formal languages/NNS/languages mean/VBP/mean exactly/RB/exactly what/WP/what they/PRP/they say/NNP/say. people/NNS/people who/WP/who grow/NN/grow up/IN/up speaking/VBG/speaking a/DT/a natural/JJ/natural language/NN/language everyone/NN/everyone often/RB/often have/VBP/have a/DT/a hard/JJ/hard time/NN/time adjusting/VBG/adjusting to/TO/to formal/JJ/formal languages/NNP/languages. in/IN/in some/DT/some ways/NNS/ways /,/, the/DT/the difference/NN/difference between/IN/between formal/JJ/formal and/CC/and natural/JJ/natural language/NN/language is/VBZ/is like/IN/like the/DT/the difference/NN/difference between/IN/between poetry/NN/poetry and/CC/and prose/VB/prose /,/, but/CC/but more/RBR/more so/RB/so /:/: poetry/NN/poetry /:/: words/NNS/words are/VBP/are used/VBN/used for/IN/for their/PRP$/their sounds/NNS/sounds as/IN/as well/RB/well as/IN/as for/IN/for their/PRP$/their meaning/NN/meaning /,/, and/CC/and the/DT/the whole/JJ/whole poem/NN/poem together/RB/together creates/VBZ/creates an/DT/an effect/NN/effect or/CC/or emotional/JJ/emotional response/NNP/response. ambiguity/NN/ambiguity is/VBZ/is not/RB/not only/RB/only common/JJ/common but/CC/but often/RB/often deliberate/NNP/deliberate. prose/NN/prose /:/: the/DT/the literal/JJ/literal meaning/NN/meaning of/IN/of words/NNS/words is/VBZ/is more/RBR/more important/JJ/important /,/, and/CC/and the/DT/the structure/NN/structure contributes/VBZ/contributes more/JJR/more meaning/NNP/meaning. prose/NN/prose is/VBZ/is more/RBR/more amenable/JJ/amenable to/TO/to analysis/NN/analysis than/IN/than poetry/NN/poetry but/CC/but still/RB/still often/RB/often ambiguous/NNP/ambiguous. programs/NNS/programs /:/: the/DT/the meaning/NN/meaning of/IN/of a/DT/a computer/NN/computer program/NN/program is/VBZ/is unambiguous/JJ/unambiguous and/CC/and literal/JJ/literal /,/, and/CC/and can/MD/can be/VB/be understood/VBN/understood entirely/RB/entirely by/IN/by analysis/NN/analysis of/IN/of the/DT/the tokens/NNS/tokens and/CC/and structure/NNP/structure. here/RB/here are/VBP/are some/DT/some suggestions/NNS/suggestions for/IN/for reading/NN/reading programs/NNS/programs /VBP/( and/CC/and other/JJ/other formal/JJ/formal languages/NNS/languages /:/) /./. first/JJ/first /,/, remember/NN/remember that/IN/that formal/JJ/formal languages/NNS/languages are/VBP/are much/RB/much more/RBR/more dense/JJ/dense than/IN/than natural/JJ/natural languages/NNS/languages /,/, so/RB/so it/PRP/it takes/VBZ/takes longer/RB/longer to/TO/to read/VB/read them/NNP/them. also/RB/also /,/, the/DT/the structure/NN/structure is/VBZ/is very/RB/very important/JJ/important /,/, so/RB/so 8/CD/8 the/DT/the way/NN/way of/IN/of the/DT/the program/NN/program it/PRP/it is/VBZ/is usually/RB/usually not/RB/not a/DT/a good/JJ/good idea/NN/idea to/TO/to read/VB/read from/IN/from top/JJ/top to/TO/to bottom/VB/bottom /,/, left/VBN/left to/TO/to right/NNP/right. instead/RB/instead /,/, learn/NN/learn to/TO/to parse/VB/parse the/DT/the program/NN/program in/IN/in your/PRP$/your head/NN/head /,/, identifying/VBG/identifying the/DT/the tokens/NNS/tokens and/CC/and interpreting/VBG/interpreting the/DT/the structure/NNP/structure. finally/RB/finally /,/, the/DT/the details/NNS/details matter/NNP/matter. little/RB/little things/VBZ/things like/IN/like spelling/NN/spelling errors/NNS/errors and/CC/and bad/JJ/bad punctuation/NN/punctuation /,/, which/WDT/which you/PRP/you can/MD/can get/VB/get away/RB/away with/IN/with in/IN/in natural/JJ/natural languages/NNS/languages /,/, can/MD/can make/VB/make a/DT/a big/JJ/big difference/NN/difference in/IN/in a/DT/a formal/JJ/formal language/NNP/language. 1.5/CD/1.5 the/DT/the first/JJ/first program/NN/program traditionally/RB/traditionally /,/, the/DT/the first/JJ/first program/NN/program written/VBN/written in/IN/in a/DT/a new/JJ/new language/NN/language is/VBZ/is called/VBN/called hello/NN/hello /,/, world/NN/world !/./! because/IN/because all/DT/all it/PRP/it does/VBZ/does is/VBZ/is display/NN/display the/DT/the words/NNS/words /,/, hello/VBP/hello /,/, world/NN/world !/./! in/IN/in python/NN/python /,/, it/PRP/it looks/VBZ/looks like/IN/like this/DT/this /:/: print/NN/print hello/NN/hello /,/, world/NN/world !/./! this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a print/NN/print statement/NN/statement /,/, which/WDT/which doesn/NN/doesn t/VBD/t actually/RB/actually print/VBP/print anything/NN/anything on/IN/on paper/NNP/paper. it/PRP/it displays/VBZ/displays a/DT/a value/NN/value on/IN/on the/DT/the screen/NNP/screen. in/IN/in this/DT/this case/NN/case /,/, the/DT/the result/NN/result is/VBZ/is the/DT/the words/NNS/words hello/VBP/hello /,/, world/NN/world !/./! the/DT/the quotation/NN/quotation marks/VBZ/marks in/IN/in the/DT/the program/NN/program mark/NN/mark the/DT/the beginning/NN/beginning and/CC/and end/NN/end of/IN/of the/DT/the value/NN/value ;/:/; they/PRP/they don/VBP/don t/JJ/t appear/NN/appear in/IN/in the/DT/the result/NNP/result. some/DT/some people/NNS/people judge/VBP/judge the/DT/the quality/NN/quality of/IN/of a/DT/a programming/NN/programming language/NN/language by/IN/by the/DT/the simplicity/NN/simplicity of/IN/of the/DT/the hello/NN/hello /,/, world/NN/world !/./! program/NNP/program. by/IN/by this/DT/this standard/JJ/standard /,/, python/NN/python does/VBZ/does about/IN/about as/RB/as well/RB/well as/IN/as possible/NNP/possible. 1.6/CD/1.6 glossary/JJ/glossary problem/NN/problem solving/VBG/solving /:/: the/DT/the process/NN/process of/IN/of formulating/VBG/formulating a/DT/a problem/NN/problem /,/, finding/NN/finding a/DT/a solution/NN/solution /,/, and/CC/and expressing/VBG/expressing the/DT/the solution/NNP/solution. high-level/NNP/high-level language/NN/language /:/: a/DT/a programming/NN/programming language/NN/language like/IN/like python/NN/python that/IN/that is/VBZ/is designed/VBN/designed to/TO/to be/VB/be easy/JJ/easy for/IN/for humans/NNS/humans to/TO/to read/VB/read and/CC/and write/NNP/write. low-level/NNP/low-level language/NN/language /:/: a/DT/a programming/NN/programming language/NN/language that/IN/that is/VBZ/is designed/VBN/designed to/TO/to be/VB/be easy/JJ/easy for/IN/for a/DT/a computer/NN/computer to/TO/to execute/VB/execute ;/:/; also/RB/also called/VBN/called machine/NN/machine language/NN/language or/CC/or assembly/RB/assembly language/NNP/language. portability/NN/portability /:/: a/DT/a property/NN/property of/IN/of a/DT/a program/NN/program that/WDT/that can/MD/can run/VB/run on/IN/on more/JJR/more than/IN/than one/CD/one kind/NN/kind of/IN/of computer/NNP/computer. interpret/NN/interpret /:/: to/TO/to execute/VB/execute a/DT/a program/NN/program in/IN/in a/DT/a high-level/JJ/high-level language/NN/language by/IN/by translating/NN/translating it/PRP/it one/CD/one line/NN/line at/IN/at a/DT/a time/NNP/time. 1.6/CD/1.6 glossary/JJ/glossary 9/CD/9 compile/NN/compile /:/: to/TO/to translate/VB/translate a/DT/a program/NN/program written/VBN/written in/IN/in a/DT/a high-level/JJ/high-level language/NN/language into/IN/into a/DT/a lowlevel/NN/lowlevel language/NN/language all/DT/all at/IN/at once/RB/once /,/, in/IN/in preparation/NN/preparation for/IN/for later/JJ/later execution/NNP/execution. source/NN/source code/NN/code /:/: a/DT/a program/NN/program in/IN/in a/DT/a high-level/JJ/high-level language/NN/language before/IN/before being/VBG/being compiled/NNP/compiled. object/NN/object code/NN/code /:/: the/DT/the output/NN/output of/IN/of the/DT/the compiler/NN/compiler after/IN/after it/PRP/it translates/VBZ/translates the/DT/the program/NNP/program. executable/JJ/executable /:/: another/DT/another name/NN/name for/IN/for object/NN/object code/NN/code that/WDT/that is/VBZ/is ready/RB/ready to/TO/to be/VB/be executed/NNP/executed. script/NN/script /:/: a/DT/a program/NN/program stored/VBN/stored in/IN/in a/DT/a file/NN/file /:/( usually/RB/usually one/CD/one that/WDT/that will/MD/will be/VB/be interpreted/VBN/interpreted /-NONE-/) /./. program/NN/program /:/: a/DT/a set/NN/set of/IN/of instructions/NNS/instructions that/WDT/that specifies/NNS/specifies a/DT/a computation/NNP/computation. algorithm/NN/algorithm /:/: a/DT/a general/JJ/general process/NN/process for/IN/for solving/NN/solving a/DT/a category/NN/category of/IN/of problems/NNP/problems. bug/NN/bug /:/: an/DT/an error/NN/error in/IN/in a/DT/a program/NNP/program. debugging/NN/debugging /:/: the/DT/the process/NN/process of/IN/of finding/NN/finding and/CC/and removing/VBG/removing any/DT/any of/IN/of the/DT/the three/CD/three kinds/NNS/kinds of/IN/of programming/NN/programming errors/NNP/errors. syntax/NN/syntax /:/: the/DT/the structure/NN/structure of/IN/of a/DT/a program/NNP/program. syntax/NN/syntax error/NN/error /:/: an/DT/an error/NN/error in/IN/in a/DT/a program/NN/program that/WDT/that makes/VBZ/makes it/PRP/it impossible/JJ/impossible to/TO/to parse/VB/parse /:/( and/CC/and therefore/RB/therefore impossible/JJ/impossible to/TO/to interpret/VB/interpret /:/) /./. runtime/NN/runtime error/NN/error /:/: an/DT/an error/NN/error that/IN/that does/VBZ/does not/RB/not occur/VB/occur until/IN/until the/DT/the program/NN/program has/VBZ/has started/VBN/started to/TO/to execute/VB/execute but/CC/but that/IN/that prevents/NNS/prevents the/DT/the program/NN/program from/IN/from continuing/NNP/continuing. exception/NN/exception /:/: another/DT/another name/NN/name for/IN/for a/DT/a runtime/NN/runtime error/NNP/error. semantic/JJ/semantic error/NN/error /:/: an/DT/an error/NN/error in/IN/in a/DT/a program/NN/program that/WDT/that makes/VBZ/makes it/PRP/it do/VBP/do something/NN/something other/JJ/other than/IN/than what/WP/what the/DT/the programmer/NN/programmer intended/NNP/intended. semantics/NNS/semantics /:/: the/DT/the meaning/NN/meaning of/IN/of a/DT/a program/NNP/program. natural/JJ/natural language/NN/language /:/: any/DT/any one/CD/one of/IN/of the/DT/the languages/NNS/languages that/WDT/that people/NNS/people speak/VBP/speak that/IN/that evolved/VBN/evolved naturally/NNP/naturally. formal/JJ/formal language/NN/language /:/: any/DT/any one/CD/one of/IN/of the/DT/the languages/NNS/languages that/WDT/that people/NNS/people have/VBP/have designed/VBN/designed for/IN/for specific/JJ/specific purposes/NNS/purposes /,/, such/JJ/such as/IN/as representing/VBG/representing mathematical/JJ/mathematical ideas/NNS/ideas or/CC/or computer/NN/computer programs/NNS/programs ;/:/; all/DT/all programming/NN/programming languages/NNS/languages are/VBP/are formal/JJ/formal languages/NNP/languages. token/NN/token /:/: one/CD/one of/IN/of the/DT/the basic/JJ/basic elements/NNS/elements of/IN/of the/DT/the syntactic/JJ/syntactic structure/NN/structure of/IN/of a/DT/a program/NN/program /,/, analogous/JJ/analogous to/TO/to a/DT/a word/NN/word in/IN/in a/DT/a natural/JJ/natural language/NNP/language. parse/NN/parse /:/: to/TO/to examine/VB/examine a/DT/a program/NN/program and/CC/and analyze/VB/analyze the/DT/the syntactic/JJ/syntactic structure/NNP/structure. print/NN/print statement/NN/statement /:/: an/DT/an instruction/NN/instruction that/IN/that causes/NNS/causes the/DT/the python/NN/python interpreter/NN/interpreter to/TO/to display/VB/display a/DT/a value/NN/value on/IN/on the/DT/the screen/NNP/screen. 10/CD/10 the/DT/the way/NN/way of/IN/of the/DT/the program/NN/program chapter/NN/chapter 2/CD/2 variables/NNS/variables /,/, expressions/NNS/expressions and/CC/and statements/NNS/statements 2.1/CD/2.1 values/NNS/values and/CC/and types/NNS/types a/DT/a value/NN/value is/VBZ/is one/CD/one of/IN/of the/DT/the fundamental/JJ/fundamental things/NNS/things like/IN/like a/DT/a letter/NN/letter or/CC/or a/DT/a number/NN/number that/WDT/that a/DT/a program/NN/program manipulates/NNP/manipulates. the/DT/the values/NNS/values we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/RB/far are/VBP/are 2/CD/2 /CD/( the/DT/the result/NN/result when/WRB/when we/PRP/we added/VBD/added 1/CD/1 +/CD/+ 1/CD/1 /CD/) /,/, and/CC/and hello/NN/hello /,/, world/NN/world !/./! /./. these/DT/these values/NNS/values belong/VBP/belong to/TO/to different/JJ/different types/NNS/types /:/: 2/CD/2 is/VBZ/is an/DT/an integer/NN/integer /,/, and/CC/and hello/NN/hello /,/, world/NN/world !/./! is/VBZ/is a/DT/a string/NN/string /,/, so-called/JJ/so-called because/IN/because it/PRP/it contains/VBZ/contains a/DT/a string/NN/string of/IN/of letters/NNP/letters. you/PRP/you /VBP/( and/CC/and the/DT/the interpreter/NN/interpreter /:/) can/MD/can identify/VB/identify strings/NNS/strings because/IN/because they/PRP/they are/VBP/are enclosed/VBN/enclosed in/IN/in quotation/NN/quotation marks/NNP/marks. the/DT/the print/NN/print statement/NN/statement also/RB/also works/VBZ/works for/IN/for integers/NNP/integers. >/:/> >/:/> >/:/> print/NN/print 4/CD/4 4/CD/4 if/IN/if you/PRP/you are/VBP/are not/RB/not sure/JJ/sure what/WP/what type/NN/type a/DT/a value/NN/value has/VBZ/has /,/, the/DT/the interpreter/NN/interpreter can/MD/can tell/VB/tell you/NNP/you. >/NNP/> >/NNP/> >/NNP/> type/NN/type /:/( hello/NN/hello /,/, world/NN/world !/./! /NN/) >/:/> >/:/> >/:/> type/NN/type /:/( 17/CD/17 /CD/) not/RB/not surprisingly/RB/surprisingly /,/, strings/NNS/strings belong/VBP/belong to/TO/to the/DT/the type/NN/type str/NN/str and/CC/and integers/NNS/integers belong/IN/belong to/TO/to the/DT/the type/NN/type int/NNP/int. less/RBR/less obviously/RB/obviously /,/, numbers/NNS/numbers with/IN/with a/DT/a decimal/JJ/decimal point/NN/point belong/IN/belong to/TO/to a/DT/a type/NN/type called/VBN/called float/NN/float /,/, because/IN/because these/DT/these numbers/NNS/numbers are/VBP/are represented/VBN/represented in/IN/in a/DT/a format/NN/format called/VBN/called floating-point/NNP/floating-point. 12/CD/12 variables/NNS/variables /,/, expressions/NNS/expressions and/CC/and statements/NNS/statements >/:/> >/:/> >/:/> type/NN/type /:/( 3.2/CD/3.2 /CD/) what/WP/what about/IN/about values/NNS/values like/IN/like 17/CD/17 and/CC/and 3.2/CD/3.2 they/PRP/they look/VBP/look like/IN/like numbers/NNS/numbers /,/, but/CC/but they/PRP/they are/VBP/are in/IN/in quotation/NN/quotation marks/NNS/marks like/IN/like strings/NNP/strings. >/NNP/> >/NNP/> >/NNP/> type/NN/type /:/( 17/CD/17 /CD/) >/CD/> >/CD/> >/CD/> type/NN/type /:/( 3.2/CD/3.2 /CD/) they/PRP/they re/VBP/re strings/NNP/strings. when/WRB/when you/PRP/you type/VBP/type a/DT/a large/JJ/large integer/NN/integer /,/, you/PRP/you might/MD/might be/VB/be tempted/VBN/tempted to/TO/to use/VB/use commas/NNS/commas between/IN/between groups/NNS/groups of/IN/of three/CD/three digits/NNS/digits /,/, as/IN/as in/IN/in 1,000,000/CD/1,000,000. this/DT/this is/VBZ/is not/RB/not a/DT/a legal/JJ/legal integer/NN/integer in/IN/in python/NN/python /,/, but/CC/but it/PRP/it is/VBZ/is a/DT/a legal/JJ/legal expression/NN/expression /:/: >/:/> >/:/> >/:/> print/NN/print 1,000,000/CD/1,000,000 1/CD/1 0/-NONE-/0 0/-NONE-/0 well/RB/well /,/, that/IN/that s/NNS/s not/RB/not what/WP/what we/PRP/we expected/VBD/expected at/IN/at all/DT/all !/./! python/NN/python interprets/NNS/interprets 1,000,000/CD/1,000,000 as/IN/as a/DT/a comma-separated/JJ/comma-separated list/NN/list of/IN/of three/CD/three integers/NNS/integers /,/, which/WDT/which it/PRP/it prints/VBZ/prints consecutively/NNP/consecutively. this/DT/this is/VBZ/is the/DT/the first/JJ/first example/NN/example we/PRP/we have/VBP/have seen/VBN/seen of/IN/of a/DT/a semantic/JJ/semantic error/NN/error /:/: the/DT/the code/NN/code runs/VBZ/runs without/IN/without producing/VBG/producing an/DT/an error/NN/error message/NN/message /,/, but/CC/but it/PRP/it doesn/VBP/doesn t/NN/t do/VBP/do the/DT/the right/NN/right thing/NNP/thing. 2.2/CD/2.2 variables/NNS/variables one/CD/one of/IN/of the/DT/the most/RBS/most powerful/JJ/powerful features/NNS/features of/IN/of a/DT/a programming/NN/programming language/NN/language is/VBZ/is the/DT/the ability/NN/ability to/TO/to manipulate/VB/manipulate variables/NNP/variables. a/DT/a variable/JJ/variable is/VBZ/is a/DT/a name/NN/name that/WDT/that refers/NNS/refers to/TO/to a/DT/a value/NNP/value. the/DT/the assignment/NN/assignment statement/NN/statement creates/VBZ/creates new/JJ/new variables/NNS/variables and/CC/and gives/VBZ/gives them/PRP/them values/VBZ/values /:/: >/:/> >/:/> >/:/> message/NN/message =/:/= what/WP/what s/NNS/s up/IN/up /,/, doc/NN/doc >/:/> >/:/> >/:/> n/NN/n =/:/= 17/CD/17 >/CD/> >/CD/> >/CD/> pi/NN/pi =/:/= 3.14159/CD/3.14159 this/DT/this example/NN/example makes/VBZ/makes three/CD/three assignments/NNP/assignments. the/DT/the first/JJ/first assigns/NNS/assigns the/DT/the string/VBG/string what/WP/what s/NNS/s up/IN/up /,/, doc/NN/doc to/TO/to a/DT/a new/JJ/new variable/JJ/variable named/VBN/named message/NNP/message. the/DT/the second/JJ/second gives/NNS/gives the/DT/the integer/NN/integer 17/CD/17 to/TO/to n/VB/n /,/, and/CC/and the/DT/the third/JJ/third gives/NNS/gives the/DT/the floating-point/JJ/floating-point number/NN/number 3.14159/CD/3.14159 to/TO/to pi/NNP/pi. a/DT/a common/JJ/common way/NN/way to/TO/to represent/VB/represent variables/NNS/variables on/IN/on paper/NN/paper is/VBZ/is to/TO/to write/VB/write the/DT/the name/NN/name with/IN/with an/DT/an arrow/NN/arrow pointing/VBG/pointing to/TO/to the/DT/the variable/JJ/variable s/NNS/s value/NNP/value. this/DT/this kind/NN/kind of/IN/of figure/NN/figure is/VBZ/is called/VBN/called a/DT/a state/NN/state diagram/NN/diagram because/IN/because it/PRP/it shows/VBZ/shows what/WP/what state/NN/state each/DT/each of/IN/of the/DT/the variables/NNS/variables is/VBZ/is in/IN/in /CD/( think/NN/think of/IN/of it/PRP/it as/IN/as the/DT/the variable/JJ/variable s/NNS/s state/NN/state of/IN/of mind/NN/mind /:/) /./. this/DT/this diagram/NN/diagram shows/VBZ/shows the/DT/the result/NN/result of/IN/of the/DT/the assignment/NN/assignment statements/NNS/statements /:/: 2.3/CD/2.3 variable/JJ/variable names/NNS/names and/CC/and keywords/NNS/keywords 13/CD/13 message/NN/message n/NN/n pi/NN/pi what/WP/what s/NNS/s up/IN/up /,/, doc/NN/doc 17/CD/17 3.14159/CD/3.14159 the/DT/the print/NN/print statement/NN/statement also/RB/also works/VBZ/works with/IN/with variables/NNP/variables. >/NNP/> >/NNP/> >/NNP/> print/NN/print message/NN/message what/WP/what s/NNS/s up/IN/up /,/, doc/NN/doc >/:/> >/:/> >/:/> print/NN/print n/NN/n 17/CD/17 >/CD/> >/CD/> >/CD/> print/NN/print pi/NN/pi 3.14159/CD/3.14159 in/IN/in each/DT/each case/NN/case the/DT/the result/NN/result is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the variable/NNP/variable. variables/VBZ/variables also/RB/also have/VBP/have types/NNS/types ;/:/; again/RB/again /,/, we/PRP/we can/MD/can ask/VB/ask the/DT/the interpreter/NN/interpreter what/WP/what they/PRP/they are/NNP/are. >/:/> >/:/> >/:/> type/NN/type /:/( message/NN/message /:/) >/:/> >/:/> >/:/> type/NN/type /:/( n/NN/n /:/) >/:/> >/:/> >/:/> type/NN/type /:/( pi/NN/pi /:/) the/DT/the type/NN/type of/IN/of a/DT/a variable/JJ/variable is/VBZ/is the/DT/the type/NN/type of/IN/of the/DT/the value/NN/value it/PRP/it refers/VBZ/refers to/NNP/to. 2.3/CD/2.3 variable/JJ/variable names/NNS/names and/CC/and keywords/NNS/keywords programmers/NNS/programmers generally/RB/generally choose/VBP/choose names/NNS/names for/IN/for their/PRP$/their variables/NNS/variables that/WDT/that are/VBP/are meaningful/JJ/meaningful they/PRP/they document/VBP/document what/WP/what the/DT/the variable/JJ/variable is/VBZ/is used/VBN/used for/NNP/for. variable/JJ/variable names/NNS/names can/MD/can be/VB/be arbitrarily/RB/arbitrarily long/NNP/long. they/PRP/they can/MD/can contain/VB/contain both/DT/both letters/NNS/letters and/CC/and numbers/NNS/numbers /,/, but/CC/but they/PRP/they have/VBP/have to/TO/to begin/VB/begin with/IN/with a/DT/a letter/NNP/letter. although/IN/although it/PRP/it is/VBZ/is legal/JJ/legal to/TO/to use/VB/use uppercase/NN/uppercase letters/NNS/letters /,/, by/IN/by convention/NN/convention we/PRP/we don/VBP/don t/NNP/t. if/IN/if you/PRP/you do/VBP/do /,/, remember/NN/remember that/IN/that case/NN/case matters/NNP/matters. bruce/NN/bruce and/CC/and bruce/VB/bruce are/VBP/are different/JJ/different variables/NNP/variables. the/DT/the underscore/NN/underscore character/NN/character /:/( /:/) can/MD/can appear/VB/appear in/IN/in a/DT/a name/NNP/name. it/PRP/it is/VBZ/is often/RB/often used/VBN/used in/IN/in names/NNS/names with/IN/with multiple/JJ/multiple words/NNS/words /,/, such/JJ/such as/IN/as my/PRP$/my name/NN/name or/CC/or price/NN/price of/IN/of tea/NN/tea in/IN/in china/NNP/china. if/IN/if you/PRP/you give/VBP/give a/DT/a variable/JJ/variable an/DT/an illegal/JJ/illegal name/NN/name /,/, you/PRP/you get/VBP/get a/DT/a syntax/NN/syntax error/NN/error /:/: 14/CD/14 variables/NNS/variables /,/, expressions/NNS/expressions and/CC/and statements/NNS/statements >/:/> >/:/> >/:/> 76trombones/NNS/76trombones =/VBP/= big/JJ/big parade/NN/parade syntaxerror/NN/syntaxerror /:/: invalid/JJ/invalid syntax/NN/syntax >/:/> >/:/> >/:/> more/JJR/more $/$/$ =/CD/= 1000000/CD/1000000 syntaxerror/NN/syntaxerror /:/: invalid/JJ/invalid syntax/NN/syntax >/:/> >/:/> >/:/> class/NN/class =/:/= computer/NN/computer science/NN/science 101/CD/101 syntaxerror/NN/syntaxerror /:/: invalid/JJ/invalid syntax/NN/syntax 76trombones/NNS/76trombones is/VBZ/is illegal/JJ/illegal because/IN/because it/PRP/it does/VBZ/does not/RB/not begin/VB/begin with/IN/with a/DT/a letter/NNP/letter. more/RBR/more $/$/$ is/VBZ/is illegal/JJ/illegal because/IN/because it/PRP/it contains/VBZ/contains an/DT/an illegal/JJ/illegal character/NN/character /,/, the/DT/the dollar/NN/dollar sign/NNP/sign. but/CC/but what/WP/what s/NNS/s wrong/VBP/wrong with/IN/with class/NN/class it/PRP/it turns/VBZ/turns out/RP/out that/IN/that class/NN/class is/VBZ/is one/CD/one of/IN/of the/DT/the python/NN/python keywords/NNP/keywords. keywords/NNS/keywords define/VBP/define the/DT/the language/NN/language s/VBZ/s rules/NNS/rules and/CC/and structure/NN/structure /,/, and/CC/and they/PRP/they can/MD/can not/RB/not be/VB/be used/VBN/used as/IN/as variable/JJ/variable names/NNP/names. python/NN/python has/VBZ/has twenty-nine/JJ/twenty-nine keywords/NNS/keywords /:/: and/CC/and def/NN/def exec/NN/exec if/IN/if not/RB/not return/VBP/return assert/NN/assert del/NN/del finally/RB/finally import/NN/import or/CC/or try/NN/try break/NN/break elif/IN/elif for/IN/for in/IN/in pass/NN/pass while/IN/while class/NN/class else/RB/else from/IN/from is/VBZ/is print/JJ/print yield/NN/yield continue/NN/continue except/IN/except global/JJ/global lambda/NN/lambda raise/NN/raise you/PRP/you might/MD/might want/VB/want to/TO/to keep/VB/keep this/DT/this list/NN/list handy/NNP/handy. if/IN/if the/DT/the interpreter/NN/interpreter complains/VBZ/complains about/IN/about one/CD/one of/IN/of your/PRP$/your variable/JJ/variable names/NNS/names and/CC/and you/PRP/you don/VBP/don t/NN/t know/VB/know why/WRB/why /,/, see/VBP/see if/IN/if it/PRP/it is/VBZ/is on/IN/on this/DT/this list/NNP/list. 2.4/CD/2.4 statements/NNS/statements a/DT/a statement/NN/statement is/VBZ/is an/DT/an instruction/NN/instruction that/IN/that the/DT/the python/NN/python interpreter/NN/interpreter can/MD/can execute/NNP/execute. we/PRP/we have/VBP/have seen/VBN/seen two/CD/two kinds/NNS/kinds of/IN/of statements/NNS/statements /:/: print/NN/print and/CC/and assignment/NNP/assignment. when/WRB/when you/PRP/you type/VBP/type a/DT/a statement/NN/statement on/IN/on the/DT/the command/NN/command line/NN/line /,/, python/NN/python executes/VBZ/executes it/PRP/it and/CC/and displays/VBZ/displays the/DT/the result/NN/result /,/, if/IN/if there/EX/there is/VBZ/is one/NNP/one. the/DT/the result/NN/result of/IN/of a/DT/a print/NN/print statement/NN/statement is/VBZ/is a/DT/a value/NNP/value. assignment/NN/assignment statements/NNS/statements don/VBP/don t/NN/t produce/NN/produce a/DT/a result/NNP/result. a/DT/a script/NN/script usually/RB/usually contains/VBZ/contains a/DT/a sequence/NN/sequence of/IN/of statements/NNP/statements. if/IN/if there/EX/there is/VBZ/is more/JJR/more than/IN/than one/CD/one statement/NN/statement /,/, the/DT/the results/NNS/results appear/VBP/appear one/CD/one at/IN/at a/DT/a time/NN/time as/IN/as the/DT/the statements/NNS/statements execute/NNP/execute. for/IN/for example/NN/example /,/, the/DT/the script/NN/script print/NN/print 1/CD/1 x/NN/x =/:/= 2/CD/2 print/NN/print x/NN/x produces/NNS/produces the/DT/the output/NN/output 2.5/CD/2.5 evaluating/VBG/evaluating expressions/NNS/expressions 15/CD/15 1/CD/1 2/CD/2 again/RB/again /,/, the/DT/the assignment/NN/assignment statement/NN/statement produces/NNS/produces no/DT/no output/NNP/output. 2.5/CD/2.5 evaluating/VBG/evaluating expressions/NNS/expressions an/DT/an expression/NN/expression is/VBZ/is a/DT/a combination/NN/combination of/IN/of values/NNS/values /,/, variables/NNS/variables /,/, and/CC/and operators/NNP/operators. if/IN/if you/PRP/you type/VBP/type an/DT/an expression/NN/expression on/IN/on the/DT/the command/NN/command line/NN/line /,/, the/DT/the interpreter/NN/interpreter evaluates/VBZ/evaluates it/PRP/it and/CC/and displays/VBZ/displays the/DT/the result/NN/result /:/: >/NN/> >/:/> >/:/> 1/CD/1 +/CD/+ 1/CD/1 2/CD/2 although/IN/although expressions/NNS/expressions contain/VBP/contain values/NNS/values /,/, variables/NNS/variables /,/, and/CC/and operators/NNS/operators /,/, not/RB/not every/DT/every expression/NN/expression contains/VBZ/contains all/DT/all of/IN/of these/DT/these elements/NNP/elements. a/DT/a value/NN/value all/DT/all by/IN/by itself/PRP/itself is/VBZ/is considered/VBN/considered an/DT/an expression/NN/expression /,/, and/CC/and so/RB/so is/VBZ/is a/DT/a variable/NNP/variable. >/NNP/> >/NNP/> >/NNP/> 17/CD/17 17/CD/17 >/CD/> >/CD/> >/CD/> x/NN/x 2/CD/2 confusingly/RB/confusingly /,/, evaluating/VBG/evaluating an/DT/an expression/NN/expression is/VBZ/is not/RB/not quite/RB/quite the/DT/the same/JJ/same thing/NN/thing as/IN/as printing/NN/printing a/DT/a value/NNP/value. >/NNP/> >/NNP/> >/NNP/> message/NN/message =/:/= what/WP/what s/NNS/s up/IN/up /,/, doc/NN/doc >/:/> >/:/> >/:/> message/NN/message what/WP/what s/NNS/s up/IN/up /,/, doc/NN/doc >/:/> >/:/> >/:/> print/NN/print message/NN/message what/WP/what s/NNS/s up/IN/up /,/, doc/NN/doc when/WRB/when the/DT/the python/NN/python interpreter/NN/interpreter displays/NNS/displays the/DT/the value/NN/value of/IN/of an/DT/an expression/NN/expression /,/, it/PRP/it uses/VBZ/uses the/DT/the same/JJ/same format/NN/format you/PRP/you would/MD/would use/VB/use to/TO/to enter/VB/enter a/DT/a value/NNP/value. in/IN/in the/DT/the case/NN/case of/IN/of strings/NNS/strings /,/, that/IN/that means/NNS/means that/WDT/that it/PRP/it includes/VBZ/includes the/DT/the quotation/NN/quotation marks/NNP/marks. but/CC/but if/IN/if you/PRP/you use/VBP/use a/DT/a print/NN/print statement/NN/statement /,/, python/NN/python displays/NNS/displays the/DT/the contents/NNS/contents of/IN/of the/DT/the string/NN/string without/IN/without the/DT/the quotation/NN/quotation marks/NNP/marks. in/IN/in a/DT/a script/NN/script /,/, an/DT/an expression/NN/expression all/DT/all by/IN/by itself/PRP/itself is/VBZ/is a/DT/a legal/JJ/legal statement/NN/statement /,/, but/CC/but it/PRP/it doesn/VBP/doesn t/NN/t do/VBP/do anything/NNP/anything. the/DT/the script/NN/script 17/CD/17 3.2/CD/3.2 hello/NN/hello /,/, world/NN/world !/./! 1/CD/1 +/CD/+ 1/CD/1 produces/NNS/produces no/DT/no output/NN/output at/IN/at all/NNP/all. how/WRB/how would/MD/would you/PRP/you change/VB/change the/DT/the script/NN/script to/TO/to display/VB/display the/DT/the values/NNS/values of/IN/of these/DT/these four/CD/four expressions/NNS/expressions 16/CD/16 variables/NNS/variables /,/, expressions/NNS/expressions and/CC/and statements/NNS/statements 2.6/CD/2.6 operators/NNS/operators and/CC/and operands/NNS/operands operators/NNS/operators are/VBP/are special/JJ/special symbols/NNS/symbols that/WDT/that represent/VBP/represent computations/NNS/computations like/IN/like addition/NN/addition and/CC/and multiplication/NNP/multiplication. the/DT/the values/NNS/values the/DT/the operator/NN/operator uses/VBZ/uses are/VBP/are called/VBN/called operands/NNP/operands. the/DT/the following/VBG/following are/VBP/are all/DT/all legal/JJ/legal python/NN/python expressions/NNS/expressions whose/WP$/whose meaning/VBG/meaning is/VBZ/is more/JJR/more or/CC/or less/JJR/less clear/JJ/clear /:/: 20/CD/20 +/CD/+ 32/CD/32 hour-1/-NONE-/hour-1 hour/PRP$/hour 60/CD/60 +/CD/+ minute/NN/minute minute/60/-NONE-/minute/60 5/CD/5 2/CD/2 /CD/( 5/CD/5 +/CD/+ 9/CD/9 /CD/) /CD/( 15-7/CD/15-7 /CD/) the/DT/the symbols/NNS/symbols +/:/+ /,/, /:/- /,/, and/CC/and //:// /,/, and/CC/and the/DT/the use/NN/use of/IN/of parenthesis/NN/parenthesis for/IN/for grouping/NN/grouping /,/, mean/JJ/mean in/IN/in python/NN/python what/WP/what they/PRP/they mean/VBP/mean in/IN/in mathematics/NNP/mathematics. the/DT/the asterisk/NN/asterisk /:/( /:/) is/VBZ/is the/DT/the symbol/NN/symbol for/IN/for multiplication/NN/multiplication /,/, and/CC/and is/VBZ/is the/DT/the symbol/NN/symbol for/IN/for exponentiation/NNP/exponentiation. when/WRB/when a/DT/a variable/JJ/variable name/NN/name appears/VBZ/appears in/IN/in the/DT/the place/NN/place of/IN/of an/DT/an operand/NN/operand /,/, it/PRP/it is/VBZ/is replaced/VBN/replaced with/IN/with its/PRP$/its value/NN/value before/IN/before the/DT/the operation/NN/operation is/VBZ/is performed/NNP/performed. addition/NN/addition /,/, subtraction/NN/subtraction /,/, multiplication/NN/multiplication /,/, and/CC/and exponentiation/NN/exponentiation all/DT/all do/VBP/do what/WP/what you/PRP/you expect/VBP/expect /,/, but/CC/but you/PRP/you might/MD/might be/VB/be surprised/VBN/surprised by/IN/by division/NNP/division. the/DT/the following/VBG/following operation/NN/operation has/VBZ/has an/DT/an unexpected/VBN/unexpected result/NN/result /:/: >/NN/> >/:/> >/:/> minute/NN/minute =/:/= 59/CD/59 >/CD/> >/CD/> >/CD/> minute/60/-NONE-/minute/60 0/-NONE-/0 the/DT/the value/NN/value of/IN/of minute/NN/minute is/VBZ/is 59/CD/59 /,/, and/CC/and in/IN/in conventional/JJ/conventional arithmetic/JJ/arithmetic 59/CD/59 divided/VBN/divided by/IN/by 60/CD/60 is/VBZ/is 0.98333/CD/0.98333 /,/, not/RB/not 0/CD/0. the/DT/the reason/NN/reason for/IN/for the/DT/the discrepancy/NN/discrepancy is/VBZ/is that/IN/that python/NN/python is/VBZ/is performing/VBG/performing integer/NN/integer division/NNP/division. when/WRB/when both/DT/both of/IN/of the/DT/the operands/NNS/operands are/VBP/are integers/NNS/integers /,/, the/DT/the result/NN/result must/MD/must also/RB/also be/VB/be an/DT/an integer/NN/integer /,/, and/CC/and by/IN/by convention/NN/convention /,/, integer/NN/integer division/NN/division always/RB/always rounds/VBZ/rounds down/IN/down /,/, even/RB/even in/IN/in cases/NNS/cases like/IN/like this/DT/this where/WRB/where the/DT/the next/JJ/next integer/NN/integer is/VBZ/is very/RB/very close/NNP/close. a/DT/a possible/JJ/possible solution/NN/solution to/TO/to this/DT/this problem/NN/problem is/VBZ/is to/TO/to calculate/VB/calculate a/DT/a percentage/NN/percentage rather/RB/rather than/IN/than a/DT/a fraction/NN/fraction /:/: >/:/> >/:/> >/:/> minute/NN/minute 100/60/CD/100/60 98/CD/98 again/RB/again the/DT/the result/NN/result is/VBZ/is rounded/VBN/rounded down/RP/down /,/, but/CC/but at/IN/at least/JJS/least now/RB/now the/DT/the answer/NN/answer is/VBZ/is approximately/RB/approximately correct/NNP/correct. another/DT/another alternative/NN/alternative is/VBZ/is to/TO/to use/VB/use floating-point/JJ/floating-point division/NN/division /,/, which/WDT/which we/PRP/we get/VBP/get to/TO/to in/IN/in chapter/NN/chapter 3/CD/3. 2.7/CD/2.7 order/NN/order of/IN/of operations/NNS/operations when/WRB/when more/JJR/more than/IN/than one/CD/one operator/NN/operator appears/VBZ/appears in/IN/in an/DT/an expression/NN/expression /,/, the/DT/the order/NN/order of/IN/of evaluation/NN/evaluation depends/NNS/depends on/IN/on the/DT/the rules/NNS/rules of/IN/of precedence/NNP/precedence. python/NN/python follows/VBZ/follows the/DT/the same/JJ/same precedence/NN/precedence rules/NNS/rules for/IN/for its/PRP$/its mathematical/JJ/mathematical operators/NNS/operators that/WDT/that mathematics/NNS/mathematics does/NNP/does. the/DT/the acronym/NN/acronym pemdas/VBZ/pemdas is/VBZ/is a/DT/a useful/JJ/useful way/NN/way to/TO/to remember/VB/remember the/DT/the order/NN/order of/IN/of operations/NNS/operations /:/: 2.8/CD/2.8 operations/NNS/operations on/IN/on strings/NNS/strings 17/CD/17 parentheses/NNS/parentheses have/VBP/have the/DT/the highest/JJS/highest precedence/NN/precedence and/CC/and can/MD/can be/VB/be used/VBN/used to/TO/to force/VB/force an/DT/an expression/NN/expression to/TO/to evaluate/VB/evaluate in/IN/in the/DT/the order/NN/order you/PRP/you want/NNP/want. since/IN/since expressions/NNS/expressions in/IN/in parentheses/NNS/parentheses are/VBP/are evaluated/VBN/evaluated first/JJ/first /,/, 2/CD/2 /:/( 3-1/CD/3-1 /CD/) is/VBZ/is 4/CD/4 /,/, and/CC/and /:/( 1/CD/1 +/CD/+ 1/CD/1 /CD/) /CD/( 5-2/CD/5-2 /CD/) is/VBZ/is 8/CD/8. you/PRP/you can/MD/can also/RB/also use/VB/use parentheses/NNS/parentheses to/TO/to make/VB/make an/DT/an expression/NN/expression easier/NN/easier to/TO/to read/VB/read /,/, as/IN/as in/IN/in /NNP/( minute/NN/minute 100/CD/100 /CD/) //CD// 60/CD/60 /,/, even/RB/even though/IN/though it/PRP/it doesn/VBP/doesn t/NN/t change/NN/change the/DT/the result/NNP/result. exponentiation/NN/exponentiation has/VBZ/has the/DT/the next/JJ/next highest/NN/highest precedence/NN/precedence /,/, so/RB/so 2/CD/2 1/CD/1 +/CD/+ 1/CD/1 is/VBZ/is 3/CD/3 and/CC/and not/RB/not 4/CD/4 /,/, and/CC/and 3/LS/3 1/CD/1 3/CD/3 is/VBZ/is 3/CD/3 and/CC/and not/RB/not 27/CD/27. multiplication/NN/multiplication and/CC/and division/NN/division have/VBP/have the/DT/the same/JJ/same precedence/NN/precedence /,/, which/WDT/which is/VBZ/is higher/JJR/higher than/IN/than addition/NN/addition and/CC/and subtraction/NN/subtraction /,/, which/WDT/which also/RB/also have/VBP/have the/DT/the same/JJ/same precedence/NNP/precedence. so/IN/so 2/CD/2 3-1/CD/3-1 yields/NNS/yields 5/CD/5 rather/RB/rather than/IN/than 4/CD/4 /,/, and/CC/and 2/3-1/CD/2/3-1 is/VBZ/is -1/-NONE-/-1 /,/, not/RB/not 1/CD/1 /CD/( remember/NN/remember that/WDT/that in/IN/in integer/JJR/integer division/NN/division /,/, 2/3/CD/2/3 =/:/= 0/-NONE-/0 /:/) /./. operators/NNS/operators with/IN/with the/DT/the same/JJ/same precedence/NN/precedence are/VBP/are evaluated/VBN/evaluated from/IN/from left/VBN/left to/TO/to right/NNP/right. so/RB/so in/IN/in the/DT/the expression/NN/expression minute/NN/minute 100/60/CD/100/60 /,/, the/DT/the multiplication/NN/multiplication happens/VBZ/happens first/JJ/first /,/, yielding/NN/yielding 5900/60/CD/5900/60 /,/, which/WDT/which in/IN/in turn/NN/turn yields/NNS/yields 98/CD/98. if/IN/if the/DT/the operations/NNS/operations had/VBD/had been/VBN/been evaluated/VBN/evaluated from/IN/from right/RB/right to/TO/to left/VB/left /,/, the/DT/the result/NN/result would/MD/would have/VB/have been/VBN/been 59/CD/59 1/CD/1 /,/, which/WDT/which is/VBZ/is 59/CD/59 /,/, which/WDT/which is/VBZ/is wrong/NNP/wrong. 2.8/CD/2.8 operations/NNS/operations on/IN/on strings/NNS/strings in/IN/in general/JJ/general /,/, you/PRP/you can/MD/can not/RB/not perform/VB/perform mathematical/JJ/mathematical operations/NNS/operations on/IN/on strings/NNS/strings /,/, even/RB/even if/IN/if the/DT/the strings/NNS/strings look/VBP/look like/IN/like numbers/NNP/numbers. the/DT/the following/VBG/following are/VBP/are illegal/JJ/illegal /NN/( assuming/VBG/assuming that/IN/that message/NN/message has/VBZ/has type/NN/type string/VBG/string /NN/) /:/: message-1/-NONE-/message-1 hello/123/-NONE-/hello/123 message/NN/message hello/NN/hello 15/CD/15 +/CD/+ 2/CD/2 interestingly/RB/interestingly /,/, the/DT/the +/NNP/+ operator/NN/operator does/VBZ/does work/VB/work with/IN/with strings/NNS/strings /,/, although/IN/although it/PRP/it does/VBZ/does not/RB/not do/VB/do exactly/RB/exactly what/WP/what you/PRP/you might/MD/might expect/NNP/expect. for/IN/for strings/NNS/strings /,/, the/DT/the +/NNP/+ operator/NN/operator represents/VBZ/represents concatenation/NN/concatenation /,/, which/WDT/which means/VBZ/means joining/VBG/joining the/DT/the two/CD/two operands/NNS/operands by/IN/by linking/VBG/linking them/PRP/them end-to-end/NNP/end-to-end. for/IN/for example/NN/example /:/: fruit/NN/fruit =/:/= banana/NN/banana bakedgood/NN/bakedgood =/:/= nut/NN/nut bread/NN/bread print/NN/print fruit/NN/fruit +/:/+ bakedgood/NN/bakedgood the/DT/the output/NN/output of/IN/of this/DT/this program/NN/program is/VBZ/is banana/NNS/banana nut/IN/nut bread/NNP/bread. the/DT/the space/NN/space before/IN/before the/DT/the word/NN/word nut/NN/nut is/VBZ/is part/NN/part of/IN/of the/DT/the string/NN/string /,/, and/CC/and is/VBZ/is necessary/JJ/necessary to/TO/to produce/VB/produce the/DT/the space/NN/space between/IN/between the/DT/the concatenated/VBN/concatenated strings/NNP/strings. the/DT/the operator/NN/operator also/RB/also works/VBZ/works on/IN/on strings/NNS/strings ;/:/; it/PRP/it performs/VBZ/performs repetition/NNP/repetition. for/IN/for example/NN/example /,/, fun/NN/fun 3/LS/3 is/VBZ/is funfunfun/NNP/funfunfun. one/CD/one of/IN/of the/DT/the operands/NNS/operands has/VBZ/has to/TO/to be/VB/be a/DT/a string/NN/string ;/:/; the/DT/the other/JJ/other has/VBZ/has to/TO/to be/VB/be an/DT/an integer/NNP/integer. 18/CD/18 variables/NNS/variables /,/, expressions/NNS/expressions and/CC/and statements/NNS/statements on/IN/on one/CD/one hand/NN/hand /,/, this/DT/this interpretation/NN/interpretation of/IN/of +/NNP/+ and/CC/and makes/VBZ/makes sense/NN/sense by/IN/by analogy/NN/analogy with/IN/with addition/NN/addition and/CC/and multiplication/NNP/multiplication. just/RB/just as/IN/as 4/CD/4 3/CD/3 is/VBZ/is equivalent/JJ/equivalent to/TO/to 4/CD/4 +/CD/+ 4/CD/4 +/CD/+ 4/CD/4 /,/, we/PRP/we expect/VBP/expect fun/VBN/fun 3/CD/3 to/TO/to be/VB/be the/DT/the same/JJ/same as/IN/as fun/NN/fun +/:/+ fun/NN/fun +/:/+ fun/NN/fun /,/, and/CC/and it/PRP/it is/NNP/is. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, there/EX/there is/VBZ/is a/DT/a significant/JJ/significant way/NN/way in/IN/in which/WDT/which string/VBG/string concatenation/NN/concatenation and/CC/and repetition/NN/repetition are/VBP/are different/JJ/different from/IN/from integer/NN/integer addition/NN/addition and/CC/and multiplication/NNP/multiplication. can/MD/can you/PRP/you think/VB/think of/IN/of a/DT/a property/NN/property that/WDT/that addition/NN/addition and/CC/and multiplication/NN/multiplication have/VBP/have that/IN/that string/VBG/string concatenation/NN/concatenation and/CC/and repetition/NN/repetition do/VB/do not/RB/not 2.9/CD/2.9 composition/NN/composition so/IN/so far/RB/far /,/, we/PRP/we have/VBP/have looked/VBN/looked at/IN/at the/DT/the elements/NNS/elements of/IN/of a/DT/a program/NN/program variables/NNS/variables /,/, expressions/NNS/expressions /,/, and/CC/and statements/NNS/statements in/IN/in isolation/NN/isolation /,/, without/IN/without talking/NN/talking about/IN/about how/WRB/how to/TO/to combine/VB/combine them/NNP/them. one/CD/one of/IN/of the/DT/the most/RBS/most useful/JJ/useful features/NNS/features of/IN/of programming/NN/programming languages/NNS/languages is/VBZ/is their/PRP$/their ability/NN/ability to/TO/to take/VB/take small/JJ/small building/NN/building blocks/NNS/blocks and/CC/and compose/VB/compose them/NNP/them. for/IN/for example/NN/example /,/, we/PRP/we know/VBP/know how/WRB/how to/TO/to add/VB/add numbers/NNS/numbers and/CC/and we/PRP/we know/VBP/know how/WRB/how to/TO/to print/VB/print ;/:/; it/PRP/it turns/VBZ/turns out/RP/out we/PRP/we can/MD/can do/VB/do both/DT/both at/IN/at the/DT/the same/JJ/same time/NN/time /:/: >/:/> >/:/> >/:/> print/NN/print 17/CD/17 +/CD/+ 3/CD/3 20/CD/20 in/IN/in reality/NN/reality /,/, the/DT/the addition/NN/addition has/VBZ/has to/TO/to happen/VB/happen before/IN/before the/DT/the printing/NN/printing /,/, so/RB/so the/DT/the actions/NNS/actions aren/VBP/aren t/NN/t actually/RB/actually happening/VBG/happening at/IN/at the/DT/the same/JJ/same time/NNP/time. the/DT/the point/NN/point is/VBZ/is that/IN/that any/DT/any expression/NN/expression involving/VBG/involving numbers/NNS/numbers /,/, strings/NNS/strings /,/, and/CC/and variables/NNS/variables can/MD/can be/VB/be used/VBN/used inside/NN/inside a/DT/a print/NN/print statement/NNP/statement. you/PRP/you ve/VBP/ve already/RB/already seen/VBN/seen an/DT/an example/NN/example of/IN/of this/DT/this /:/: print/NN/print number/NN/number of/IN/of minutes/NNS/minutes since/IN/since midnight/NN/midnight /:/: /,/, hour/PRP$/hour 60/CD/60 +/CD/+ minute/NN/minute you/PRP/you can/MD/can also/RB/also put/VB/put arbitrary/JJ/arbitrary expressions/NNS/expressions on/IN/on the/DT/the right-hand/NNP/right-hand side/NN/side of/IN/of an/DT/an assignment/NN/assignment statement/NN/statement /:/: percentage/NN/percentage =/:/= /:/( minute/NN/minute 100/CD/100 /CD/) //CD// 60/CD/60 this/DT/this ability/NN/ability may/MD/may not/RB/not seem/VB/seem impressive/JJ/impressive now/RB/now /,/, but/CC/but you/PRP/you will/MD/will see/VB/see other/JJ/other examples/NNS/examples where/WRB/where composition/NN/composition makes/VBZ/makes it/PRP/it possible/JJ/possible to/TO/to express/NN/express complex/NN/complex computations/NNS/computations neatly/RB/neatly and/CC/and concisely/NNP/concisely. warning/NN/warning /:/: there/EX/there are/VBP/are limits/NNS/limits on/IN/on where/WRB/where you/PRP/you can/MD/can use/VB/use certain/JJ/certain expressions/NNP/expressions. for/IN/for example/NN/example /,/, the/DT/the left-hand/NNP/left-hand side/NN/side of/IN/of an/DT/an assignment/NN/assignment statement/NN/statement has/VBZ/has to/TO/to be/VB/be a/DT/a variable/JJ/variable name/NN/name /,/, not/RB/not an/DT/an expression/NNP/expression. so/RB/so /,/, the/DT/the following/VBG/following is/VBZ/is illegal/JJ/illegal /:/: minute/NN/minute +/:/+ 1/CD/1 =/CD/= hour/NNP/hour. 2.10/CD/2.10 comments/NNS/comments as/IN/as programs/NNS/programs get/VBP/get bigger/JJR/bigger and/CC/and more/JJR/more complicated/JJ/complicated /,/, they/PRP/they get/VBP/get more/RBR/more difficult/JJ/difficult to/TO/to read/NNP/read. formal/JJ/formal languages/NNS/languages are/VBP/are dense/JJ/dense /,/, and/CC/and it/PRP/it is/VBZ/is often/RB/often difficult/JJ/difficult to/TO/to look/VB/look at/IN/at a/DT/a piece/NN/piece of/IN/of code/NN/code and/CC/and figure/NN/figure out/RP/out what/WP/what it/PRP/it is/VBZ/is doing/VBG/doing /,/, or/CC/or why/NNP/why. 2.11/CD/2.11 glossary/JJ/glossary 19/CD/19 for/IN/for this/DT/this reason/NN/reason /,/, it/PRP/it is/VBZ/is a/DT/a good/JJ/good idea/NN/idea to/TO/to add/VB/add notes/NNS/notes to/TO/to your/PRP$/your programs/NNS/programs to/TO/to explain/VB/explain in/IN/in natural/JJ/natural language/NN/language what/WP/what the/DT/the program/NN/program is/VBZ/is doing/NNP/doing. these/DT/these notes/NNS/notes are/VBP/are called/VBN/called comments/NNS/comments /,/, and/CC/and they/PRP/they are/VBP/are marked/VBN/marked with/IN/with the/DT/the #/#/# symbol/NN/symbol /:/: #/#/# compute/NN/compute the/DT/the percentage/NN/percentage of/IN/of the/DT/the hour/NN/hour that/IN/that has/VBZ/has elapsed/VBN/elapsed percentage/NN/percentage =/:/= /:/( minute/NN/minute 100/CD/100 /CD/) //CD// 60/CD/60 in/IN/in this/DT/this case/NN/case /,/, the/DT/the comment/NN/comment appears/VBZ/appears on/IN/on a/DT/a line/NN/line by/IN/by itself/NNP/itself. you/PRP/you can/MD/can also/RB/also put/VB/put comments/NNS/comments at/IN/at the/DT/the end/NN/end of/IN/of a/DT/a line/NN/line /:/: percentage/NN/percentage =/:/= /:/( minute/NN/minute 100/CD/100 /CD/) //CD// 60/CD/60 #/#/# caution/NN/caution /:/: integer/NN/integer division/NN/division everything/NN/everything from/IN/from the/DT/the #/#/# to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the line/NN/line is/VBZ/is ignored/VBN/ignored it/PRP/it has/VBZ/has no/DT/no effect/NN/effect on/IN/on the/DT/the program/NNP/program. the/DT/the message/NN/message is/VBZ/is intended/VBN/intended for/IN/for the/DT/the programmer/NN/programmer or/CC/or for/IN/for future/JJ/future programmers/NNS/programmers who/WP/who might/MD/might use/VB/use this/DT/this code/NNP/code. in/IN/in this/DT/this case/NN/case /,/, it/PRP/it reminds/VBZ/reminds the/DT/the reader/NN/reader about/IN/about the/DT/the ever-surprising/JJ/ever-surprising behavior/NN/behavior of/IN/of integer/JJR/integer division/NNP/division. this/DT/this sort/NN/sort of/IN/of comment/NN/comment is/VBZ/is less/JJR/less necessary/JJ/necessary if/IN/if you/PRP/you use/VBP/use the/DT/the integer/NN/integer division/NN/division operation/NN/operation /,/, ///NNP///. it/PRP/it has/VBZ/has the/DT/the same/JJ/same effect/NN/effect as/IN/as the/DT/the division/NN/division operator1/NNP/operator1 /,/, but/CC/but it/PRP/it signals/VBZ/signals that/IN/that the/DT/the effect/NN/effect is/VBZ/is deliberate/NNP/deliberate. percentage/NN/percentage =/:/= /:/( minute/NN/minute 100/CD/100 /CD/) ///CD/// 60/CD/60 the/DT/the integer/NN/integer division/NN/division operator/NN/operator is/VBZ/is like/IN/like a/DT/a comment/NN/comment that/WDT/that says/VBZ/says /,/, i/PRP/i know/VBP/know this/DT/this is/VBZ/is integer/JJR/integer division/NN/division /,/, and/CC/and i/PRP/i like/VBP/like it/PRP/it that/IN/that way/NN/way !/./! 2.11/CD/2.11 glossary/JJ/glossary value/NN/value /:/: a/DT/a number/NN/number or/CC/or string/VBG/string /CD/( or/CC/or other/JJ/other thing/NN/thing to/TO/to be/VB/be named/VBN/named later/JJ/later /NN/) that/WDT/that can/MD/can be/VB/be stored/VBN/stored in/IN/in a/DT/a variable/JJ/variable or/CC/or computed/VBN/computed in/IN/in an/DT/an expression/NNP/expression. type/NN/type /:/: a/DT/a set/NN/set of/IN/of values/NNP/values. the/DT/the type/NN/type of/IN/of a/DT/a value/NN/value determines/NNS/determines how/WRB/how it/PRP/it can/MD/can be/VB/be used/VBN/used in/IN/in expressions/NNP/expressions. so/RB/so far/RB/far /,/, the/DT/the types/NNS/types you/PRP/you have/VBP/have seen/VBN/seen are/VBP/are integers/NNS/integers /:/( type/NN/type int/NN/int /:/) /,/, floating-point/JJ/floating-point numbers/NNS/numbers /:/( type/NN/type float/NN/float /:/) /,/, and/CC/and strings/NNS/strings /:/( type/NN/type string/NN/string /:/) /./. floating-point/JJ/floating-point /:/: a/DT/a format/NN/format for/IN/for representing/VBG/representing numbers/NNS/numbers with/IN/with fractional/JJ/fractional parts/NNP/parts. variable/JJ/variable /:/: a/DT/a name/NN/name that/WDT/that refers/NNS/refers to/TO/to a/DT/a value/NNP/value. statement/NN/statement /:/: a/DT/a section/NN/section of/IN/of code/NN/code that/IN/that represents/NNS/represents a/DT/a command/NN/command or/CC/or action/NNP/action. so/RB/so far/RB/far /,/, the/DT/the statements/NNS/statements you/PRP/you have/VBP/have seen/VBN/seen are/VBP/are assignments/NNS/assignments and/CC/and print/VBP/print statements/NNP/statements. assignment/NN/assignment /:/: a/DT/a statement/NN/statement that/IN/that assigns/NNS/assigns a/DT/a value/NN/value to/TO/to a/DT/a variable/NNP/variable. 1for/CD/1for now/NNP/now. the/DT/the behavior/NN/behavior of/IN/of the/DT/the division/NN/division operator/NN/operator may/MD/may change/VB/change in/IN/in future/JJ/future versions/NNS/versions of/IN/of python/NNP/python. 20/CD/20 variables/NNS/variables /,/, expressions/NNS/expressions and/CC/and statements/NNS/statements state/VBP/state diagram/NN/diagram /:/: a/DT/a graphical/JJ/graphical representation/NN/representation of/IN/of a/DT/a set/NN/set of/IN/of variables/NNS/variables and/CC/and the/DT/the values/NNS/values to/TO/to which/WDT/which they/PRP/they refer/NNP/refer. keyword/NN/keyword /:/: a/DT/a reserved/JJ/reserved word/NN/word that/WDT/that is/VBZ/is used/VBN/used by/IN/by the/DT/the compiler/NN/compiler to/TO/to parse/VB/parse a/DT/a program/NN/program ;/:/; you/PRP/you can/MD/can not/RB/not use/VB/use keywords/NNS/keywords like/IN/like if/IN/if /,/, def/NN/def /,/, and/CC/and while/IN/while as/RB/as variable/JJ/variable names/NNP/names. operator/NN/operator /:/: a/DT/a special/JJ/special symbol/NN/symbol that/WDT/that represents/VBZ/represents a/DT/a simple/JJ/simple computation/NN/computation like/IN/like addition/NN/addition /,/, multiplication/NN/multiplication /,/, or/CC/or string/VBG/string concatenation/NNP/concatenation. operand/NN/operand /:/: one/CD/one of/IN/of the/DT/the values/NNS/values on/IN/on which/WDT/which an/DT/an operator/NN/operator operates/NNP/operates. expression/NN/expression /:/: a/DT/a combination/NN/combination of/IN/of variables/NNS/variables /,/, operators/NNS/operators /,/, and/CC/and values/NNS/values that/WDT/that represents/VBZ/represents a/DT/a single/JJ/single result/NN/result value/NNP/value. evaluate/NN/evaluate /:/: to/TO/to simplify/VB/simplify an/DT/an expression/NN/expression by/IN/by performing/VBG/performing the/DT/the operations/NNS/operations in/IN/in order/NN/order to/TO/to yield/VB/yield a/DT/a single/JJ/single value/NNP/value. integer/NN/integer division/NN/division /:/: an/DT/an operation/NN/operation that/IN/that divides/NNS/divides one/CD/one integer/NN/integer by/IN/by another/DT/another and/CC/and yields/NNS/yields an/DT/an integer/NNP/integer. integer/NN/integer division/NN/division yields/NNS/yields only/RB/only the/DT/the whole/JJ/whole number/NN/number of/IN/of times/NNS/times that/WDT/that the/DT/the numerator/NN/numerator is/VBZ/is divisible/JJ/divisible by/IN/by the/DT/the denominator/NN/denominator and/CC/and discards/NNS/discards any/DT/any remainder/NNP/remainder. rules/VBZ/rules of/IN/of precedence/NN/precedence /:/: the/DT/the set/NN/set of/IN/of rules/NNS/rules governing/VBG/governing the/DT/the order/NN/order in/IN/in which/WDT/which expressions/NNS/expressions involving/VBG/involving multiple/NN/multiple operators/NNS/operators and/CC/and operands/NNS/operands are/VBP/are evaluated/NNP/evaluated. concatenate/NN/concatenate /:/: to/TO/to join/VB/join two/CD/two operands/NNS/operands end-to-end/NNP/end-to-end. composition/NN/composition /:/: the/DT/the ability/NN/ability to/TO/to combine/VB/combine simple/JJ/simple expressions/NNS/expressions and/CC/and statements/NNS/statements into/IN/into compound/NN/compound statements/NNS/statements and/CC/and expressions/NNS/expressions in/IN/in order/NN/order to/TO/to represent/VB/represent complex/JJ/complex computations/NNS/computations concisely/NNP/concisely. comment/NN/comment /:/: information/NN/information in/IN/in a/DT/a program/NN/program that/WDT/that is/VBZ/is meant/JJ/meant for/IN/for other/JJ/other programmers/NNS/programmers /:/( or/CC/or anyone/NN/anyone reading/NN/reading the/DT/the source/NN/source code/NN/code /:/) and/CC/and has/VBZ/has no/DT/no effect/NN/effect on/IN/on the/DT/the execution/NN/execution of/IN/of the/DT/the program/NNP/program. chapter/NN/chapter 3/CD/3 functions/NNS/functions 3.1/CD/3.1 function/NN/function calls/NNS/calls you/PRP/you have/VBP/have already/RB/already seen/VBN/seen one/CD/one example/NN/example of/IN/of a/DT/a function/NN/function call/NN/call /:/: >/:/> >/:/> >/:/> type/NN/type /:/( 32/CD/32 /CD/) the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function is/VBZ/is type/NN/type /,/, and/CC/and it/PRP/it displays/VBZ/displays the/DT/the type/NN/type of/IN/of a/DT/a value/NN/value or/CC/or variable/NNP/variable. the/DT/the value/NN/value or/CC/or variable/JJ/variable /,/, which/WDT/which is/VBZ/is called/VBN/called the/DT/the argument/NN/argument of/IN/of the/DT/the function/NN/function /,/, has/VBZ/has to/TO/to be/VB/be enclosed/VBN/enclosed in/IN/in parentheses/NNP/parentheses. it/PRP/it is/VBZ/is common/JJ/common to/TO/to say/VB/say that/IN/that a/DT/a function/NN/function takes/VBZ/takes an/DT/an argument/NN/argument and/CC/and returns/NNS/returns a/DT/a result/NNP/result. the/DT/the result/NN/result is/VBZ/is called/VBN/called the/DT/the return/NN/return value/NNP/value. instead/RB/instead of/IN/of printing/VBG/printing the/DT/the return/NN/return value/NN/value /,/, we/PRP/we could/MD/could assign/VB/assign it/PRP/it to/TO/to a/DT/a variable/JJ/variable /:/: >/:/> >/:/> >/:/> betty/NN/betty =/:/= type/NN/type /:/( 32/CD/32 /CD/) >/CD/> >/CD/> >/CD/> print/NN/print betty/NN/betty as/IN/as another/DT/another example/NN/example /,/, the/DT/the id/NN/id function/NN/function takes/VBZ/takes a/DT/a value/NN/value or/CC/or a/DT/a variable/JJ/variable and/CC/and returns/NNS/returns an/DT/an integer/NN/integer that/IN/that acts/NNS/acts as/IN/as a/DT/a unique/JJ/unique identifier/NN/identifier for/IN/for the/DT/the value/NN/value /:/: >/:/> >/:/> >/:/> id/JJ/id /NN/( 3/CD/3 /CD/) 134882108/CD/134882108 >/CD/> >/CD/> >/CD/> betty/NN/betty =/:/= 3/CD/3 >/CD/> >/CD/> >/CD/> id/JJ/id /NN/( betty/NN/betty /:/) 134882108/CD/134882108 every/DT/every value/NN/value has/VBZ/has an/DT/an id/JJ/id /,/, which/WDT/which is/VBZ/is a/DT/a unique/JJ/unique number/NN/number related/VBN/related to/TO/to where/WRB/where it/PRP/it is/VBZ/is stored/VBN/stored in/IN/in the/DT/the memory/NN/memory of/IN/of the/DT/the computer/NNP/computer. the/DT/the id/NN/id of/IN/of a/DT/a variable/JJ/variable is/VBZ/is the/DT/the id/JJ/id of/IN/of the/DT/the value/NN/value to/TO/to which/WDT/which it/PRP/it refers/NNP/refers. 22/CD/22 functions/NNS/functions 3.2/CD/3.2 type/NN/type conversion/NN/conversion python/NN/python provides/VBZ/provides a/DT/a collection/NN/collection of/IN/of built-in/JJ/built-in functions/NNS/functions that/WDT/that convert/NN/convert values/VBZ/values from/IN/from one/CD/one type/NN/type to/TO/to another/NNP/another. the/DT/the int/NN/int function/NN/function takes/VBZ/takes any/DT/any value/NN/value and/CC/and converts/NNS/converts it/PRP/it to/TO/to an/DT/an integer/NN/integer /,/, if/IN/if possible/JJ/possible /,/, or/CC/or complains/VBZ/complains otherwise/NN/otherwise /:/: >/:/> >/:/> >/:/> int/NN/int /:/( 32/CD/32 /CD/) 32/CD/32 >/CD/> >/CD/> >/CD/> int/NN/int /:/( hello/NN/hello /:/) valueerror/NN/valueerror /:/: invalid/JJ/invalid literal/JJ/literal for/IN/for int/NN/int /:/( /:/) /:/: hello/NN/hello int/NN/int can/MD/can also/RB/also convert/VB/convert floating-point/JJ/floating-point values/NNS/values to/TO/to integers/NNS/integers /,/, but/CC/but remember/NN/remember that/IN/that it/PRP/it truncates/VBZ/truncates the/DT/the fractional/JJ/fractional part/NN/part /:/: >/:/> >/:/> >/:/> int/NN/int /:/( 3.99999/CD/3.99999 /CD/) 3/CD/3 >/CD/> >/CD/> >/CD/> int/NN/int /:/( -2.3/-NONE-/-2.3 /:/) -2/-NONE-/-2 the/DT/the float/JJ/float function/NN/function converts/NNS/converts integers/NNS/integers and/CC/and strings/NNS/strings to/TO/to floating-point/JJ/floating-point numbers/NNS/numbers /:/: >/:/> >/:/> >/:/> float/JJ/float /NN/( 32/CD/32 /CD/) 32.0/CD/32.0 >/CD/> >/CD/> >/CD/> float/JJ/float /NN/( 3.14159/CD/3.14159 /CD/) 3.14159/CD/3.14159 finally/RB/finally /,/, the/DT/the str/NN/str function/NN/function converts/NNS/converts to/TO/to type/VB/type string/NN/string /:/: >/:/> >/:/> >/:/> str/NN/str /:/( 32/CD/32 /CD/) 32/CD/32 >/CD/> >/CD/> >/CD/> str/NN/str /:/( 3.14149/CD/3.14149 /CD/) 3.14149/CD/3.14149 it/PRP/it may/MD/may seem/VB/seem odd/JJ/odd that/IN/that python/NN/python distinguishes/NNS/distinguishes the/DT/the integer/NN/integer value/NN/value 1/CD/1 from/IN/from the/DT/the floatingpoint/NN/floatingpoint value/NN/value 1.0/CD/1.0. they/PRP/they may/MD/may represent/VB/represent the/DT/the same/JJ/same number/NN/number /,/, but/CC/but they/PRP/they belong/VBP/belong to/TO/to different/JJ/different types/NNP/types. the/DT/the reason/NN/reason is/VBZ/is that/IN/that they/PRP/they are/VBP/are represented/VBN/represented differently/RB/differently inside/JJ/inside the/DT/the computer/NNP/computer. 3.3/CD/3.3 type/NN/type coercion/NN/coercion now/RB/now that/IN/that we/PRP/we can/MD/can convert/VB/convert between/IN/between types/NNS/types /,/, we/PRP/we have/VBP/have another/DT/another way/NN/way to/TO/to deal/VB/deal with/IN/with integer/JJR/integer division/NNP/division. returning/NN/returning to/TO/to the/DT/the example/NN/example from/IN/from the/DT/the previous/JJ/previous chapter/NN/chapter /,/, suppose/NN/suppose we/PRP/we want/VBP/want to/TO/to calculate/VB/calculate the/DT/the fraction/NN/fraction of/IN/of an/DT/an hour/NN/hour that/IN/that has/VBZ/has elapsed/NNP/elapsed. the/DT/the most/RBS/most obvious/JJ/obvious expression/NN/expression /,/, minute/NN/minute //:// 60/CD/60 /,/, does/VBZ/does integer/JJR/integer arithmetic/JJ/arithmetic /,/, so/RB/so the/DT/the result/NN/result is/VBZ/is always/RB/always 0/-NONE-/0 /,/, even/RB/even at/IN/at 59/CD/59 minutes/NNS/minutes past/JJ/past the/DT/the hour/NNP/hour. 3.4/CD/3.4 math/NN/math functions/NNS/functions 23/CD/23 one/CD/one solution/NN/solution is/VBZ/is to/TO/to convert/VB/convert minute/NN/minute to/TO/to floating-point/JJ/floating-point and/CC/and do/VB/do floating-point/JJ/floating-point division/NN/division /:/: >/:/> >/:/> >/:/> minute/NN/minute =/:/= 59/CD/59 >/CD/> >/CD/> >/CD/> float/JJ/float /NN/( minute/NN/minute /:/) //:// 60/CD/60 0.983333333333/CD/0.983333333333 alternatively/RB/alternatively /,/, we/PRP/we can/MD/can take/VB/take advantage/NN/advantage of/IN/of the/DT/the rules/NNS/rules for/IN/for automatic/JJ/automatic type/NN/type conversion/NN/conversion /,/, which/WDT/which is/VBZ/is called/VBN/called type/NN/type coercion/NNP/coercion. for/IN/for the/DT/the mathematical/JJ/mathematical operators/NNS/operators /,/, if/IN/if either/DT/either operand/NN/operand is/VBZ/is a/DT/a float/JJ/float /,/, the/DT/the other/JJ/other is/VBZ/is automatically/RB/automatically converted/VBN/converted to/TO/to a/DT/a float/JJ/float /:/: >/:/> >/:/> >/:/> minute/NN/minute =/:/= 59/CD/59 >/CD/> >/CD/> >/CD/> minute/NN/minute //:// 60.0/CD/60.0 0.983333333333/CD/0.983333333333 by/IN/by making/NN/making the/DT/the denominator/NN/denominator a/DT/a float/NN/float /,/, we/PRP/we force/VBP/force python/NN/python to/TO/to do/VB/do floating-point/JJ/floating-point division/NNP/division. 3.4/CD/3.4 math/NN/math functions/NNS/functions in/IN/in mathematics/NNS/mathematics /,/, you/PRP/you have/VBP/have probably/RB/probably seen/VBN/seen functions/NNS/functions like/IN/like sin/NN/sin and/CC/and log/NN/log /,/, and/CC/and you/PRP/you have/VBP/have learned/VBN/learned to/TO/to evaluate/VB/evaluate expressions/NNS/expressions like/IN/like sin/NN/sin /:/( pi/2/-NONE-/pi/2 /:/) and/CC/and log/NN/log /:/( 1/x/CD/1/x /CD/) /./. first/JJ/first /,/, you/PRP/you evaluate/VBP/evaluate the/DT/the expression/NN/expression in/IN/in parentheses/NNS/parentheses /:/( the/DT/the argument/NN/argument /:/) /./. for/IN/for example/NN/example /,/, pi/2/-NONE-/pi/2 is/VBZ/is approximately/RB/approximately 1.571/CD/1.571 /,/, and/CC/and 1/x/CD/1/x is/VBZ/is 0.1/CD/0.1 /CD/( if/IN/if x/NN/x happens/NNS/happens to/TO/to be/VB/be 10.0/CD/10.0 /CD/) /./. then/RB/then /,/, you/PRP/you evaluate/VBP/evaluate the/DT/the function/NN/function itself/PRP/itself /,/, either/DT/either by/IN/by looking/VBG/looking it/PRP/it up/RP/up in/IN/in a/DT/a table/NN/table or/CC/or by/IN/by performing/NN/performing various/JJ/various computations/NNP/computations. the/DT/the sin/NN/sin of/IN/of 1.571/CD/1.571 is/VBZ/is 1/CD/1 /,/, and/CC/and the/DT/the log/NN/log of/IN/of 0.1/CD/0.1 is/VBZ/is -1/-NONE-/-1 /:/( assuming/VBG/assuming that/IN/that log/NN/log indicates/VBZ/indicates the/DT/the logarithm/NN/logarithm base/NN/base 10/CD/10 /CD/) /./. this/DT/this process/NN/process can/MD/can be/VB/be applied/VBN/applied repeatedly/RB/repeatedly to/TO/to evaluate/VB/evaluate more/JJR/more complicated/JJ/complicated expressions/NNS/expressions like/IN/like log/NN/log /:/( 1/sin/CD/1/sin /CD/( pi/2/-NONE-/pi/2 /:/) /:/) /./. first/JJ/first /,/, you/PRP/you evaluate/VBP/evaluate the/DT/the argument/NN/argument of/IN/of the/DT/the innermost/JJS/innermost function/NN/function /,/, then/RB/then evaluate/VB/evaluate the/DT/the function/NN/function /,/, and/CC/and so/RB/so on/NNP/on. python/NN/python has/VBZ/has a/DT/a math/NN/math module/NN/module that/WDT/that provides/VBZ/provides most/JJS/most of/IN/of the/DT/the familiar/JJ/familiar mathematical/JJ/mathematical functions/NNP/functions. a/DT/a module/NN/module is/VBZ/is a/DT/a file/NN/file that/WDT/that contains/VBZ/contains a/DT/a collection/NN/collection of/IN/of related/JJ/related functions/NNS/functions grouped/VBD/grouped together/NNP/together. before/IN/before we/PRP/we can/MD/can use/VB/use the/DT/the functions/NNS/functions from/IN/from a/DT/a module/NN/module /,/, we/PRP/we have/VBP/have to/TO/to import/VB/import them/PRP/them /:/: >/:/> >/:/> >/:/> import/NN/import math/NN/math to/TO/to call/VB/call one/CD/one of/IN/of the/DT/the functions/NNS/functions /,/, we/PRP/we have/VBP/have to/TO/to specify/VB/specify the/DT/the name/NN/name of/IN/of the/DT/the module/NN/module and/CC/and the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function /,/, separated/VBD/separated by/IN/by a/DT/a dot/NN/dot /,/, also/RB/also known/VBN/known as/IN/as a/DT/a period/NNP/period. this/DT/this format/NN/format is/VBZ/is called/VBN/called dot/NN/dot notation/NNP/notation. 24/CD/24 functions/NNS/functions >/:/> >/:/> >/:/> decibel/NN/decibel =/:/= math.log10/-NONE-/math.log10 /:/( 17.0/CD/17.0 /CD/) >/CD/> >/CD/> >/CD/> angle/NN/angle =/:/= 1.5/CD/1.5 >/CD/> >/CD/> >/CD/> height/NN/height =/:/= math.sin/JJ/math.sin /NN/( angle/NN/angle /:/) the/DT/the first/JJ/first statement/NN/statement sets/VBZ/sets decibel/NN/decibel to/TO/to the/DT/the logarithm/NN/logarithm of/IN/of 17/CD/17 /,/, base/NN/base 10/CD/10. there/EX/there is/VBZ/is also/RB/also a/DT/a function/NN/function called/VBN/called log/NN/log that/IN/that takes/VBZ/takes logarithm/NN/logarithm base/NN/base e/NNP/e. the/DT/the third/JJ/third statement/NN/statement finds/NNS/finds the/DT/the sine/NN/sine of/IN/of the/DT/the value/NN/value of/IN/of the/DT/the variable/JJ/variable angle/NNP/angle. sin/NN/sin and/CC/and the/DT/the other/JJ/other trigonometric/JJ/trigonometric functions/NNS/functions /:/( cos/NNS/cos /,/, tan/JJ/tan /,/, etc/NNP/etc. /NNP/) take/VB/take arguments/NNS/arguments in/IN/in radians/NNP/radians. to/TO/to convert/VB/convert from/IN/from degrees/NNS/degrees to/TO/to radians/NNS/radians /,/, divide/VBP/divide by/IN/by 360/CD/360 and/CC/and multiply/RB/multiply by/IN/by 2/CD/2 pi/NNP/pi. for/IN/for example/NN/example /,/, to/TO/to find/VB/find the/DT/the sine/NN/sine of/IN/of 45/CD/45 degrees/NNS/degrees /,/, first/JJ/first calculate/NN/calculate the/DT/the angle/NN/angle in/IN/in radians/NNS/radians and/CC/and then/RB/then take/VB/take the/DT/the sine/NN/sine /:/: >/:/> >/:/> >/:/> degrees/NNS/degrees =/VBP/= 45/CD/45 >/CD/> >/CD/> >/CD/> angle/NN/angle =/:/= degrees/NNS/degrees 2/CD/2 math.pi/NNP/math.pi //NNP// 360.0/CD/360.0 >/CD/> >/CD/> >/CD/> math.sin/JJ/math.sin /NN/( angle/NN/angle /:/) 0.707106781187/CD/0.707106781187 the/DT/the constant/JJ/constant pi/NN/pi is/VBZ/is also/RB/also part/NN/part of/IN/of the/DT/the math/NN/math module/NNP/module. if/IN/if you/PRP/you know/VBP/know your/PRP$/your geometry/NN/geometry /,/, you/PRP/you can/MD/can check/VB/check the/DT/the previous/JJ/previous result/NN/result by/IN/by comparing/NN/comparing it/PRP/it to/TO/to the/DT/the square/NN/square root/NN/root of/IN/of two/CD/two divided/VBN/divided by/IN/by two/CD/two /:/: >/:/> >/:/> >/:/> math.sqrt/JJ/math.sqrt /NN/( 2/CD/2 /CD/) //CD// 2.0/CD/2.0 0.707106781187/CD/0.707106781187 3.5/CD/3.5 composition/NN/composition just/RB/just as/IN/as with/IN/with mathematical/JJ/mathematical functions/NNS/functions /,/, python/NN/python functions/NNS/functions can/MD/can be/VB/be composed/VBN/composed /,/, meaning/NN/meaning that/IN/that you/PRP/you use/VBP/use one/CD/one expression/NN/expression as/IN/as part/NN/part of/IN/of another/NNP/another. for/IN/for example/NN/example /,/, you/PRP/you can/MD/can use/VB/use any/DT/any expression/NN/expression as/IN/as an/DT/an argument/NN/argument to/TO/to a/DT/a function/NN/function /:/: >/:/> >/:/> >/:/> x/NN/x =/:/= math.cos/NNS/math.cos /VBP/( angle/JJ/angle +/NN/+ math.pi/2/-NONE-/math.pi/2 /./) this/DT/this statement/NN/statement takes/VBZ/takes the/DT/the value/NN/value of/IN/of pi/NN/pi /,/, divides/VBZ/divides it/PRP/it by/IN/by 2/CD/2 /,/, and/CC/and adds/VBZ/adds the/DT/the result/NN/result to/TO/to the/DT/the value/NN/value of/IN/of angle/NNP/angle. the/DT/the sum/NN/sum is/VBZ/is then/RB/then passed/VBN/passed as/IN/as an/DT/an argument/NN/argument to/TO/to the/DT/the cos/NNS/cos function/NNP/function. you/PRP/you can/MD/can also/RB/also take/VB/take the/DT/the result/NN/result of/IN/of one/CD/one function/NN/function and/CC/and pass/NN/pass it/PRP/it as/IN/as an/DT/an argument/NN/argument to/TO/to another/DT/another /:/: >/:/> >/:/> >/:/> x/NN/x =/:/= math.exp/JJ/math.exp /NN/( math.log/JJ/math.log /NN/( 10.0/CD/10.0 /CD/) /CD/) this/DT/this statement/NN/statement finds/VBZ/finds the/DT/the log/NN/log base/NN/base e/NN/e of/IN/of 10/CD/10 and/CC/and then/RB/then raises/VBZ/raises e/NN/e to/TO/to that/DT/that power/NNP/power. the/DT/the result/NN/result gets/VBZ/gets assigned/VBN/assigned to/TO/to x/NNP/x. 3.6/CD/3.6 adding/VBG/adding new/JJ/new functions/NNS/functions 25/CD/25 3.6/CD/3.6 adding/VBG/adding new/JJ/new functions/NNS/functions so/IN/so far/RB/far /,/, we/PRP/we have/VBP/have only/RB/only been/VBN/been using/VBG/using the/DT/the functions/NNS/functions that/IN/that come/NN/come with/IN/with python/NN/python /,/, but/CC/but it/PRP/it is/VBZ/is also/RB/also possible/JJ/possible to/TO/to add/VB/add new/JJ/new functions/NNP/functions. creating/NN/creating new/JJ/new functions/NNS/functions to/TO/to solve/VB/solve your/PRP$/your particular/JJ/particular problems/NNS/problems is/VBZ/is one/CD/one of/IN/of the/DT/the most/RBS/most useful/JJ/useful things/NNS/things about/IN/about a/DT/a general-purpose/JJ/general-purpose programming/NN/programming language/NNP/language. in/IN/in the/DT/the context/NN/context of/IN/of programming/NN/programming /,/, a/DT/a function/NN/function is/VBZ/is a/DT/a named/VBN/named sequence/NN/sequence of/IN/of statements/NNS/statements that/WDT/that performs/VBZ/performs a/DT/a desired/VBN/desired operation/NNP/operation. this/DT/this operation/NN/operation is/VBZ/is specified/VBN/specified in/IN/in a/DT/a function/NN/function definition/NNP/definition. the/DT/the functions/NNS/functions we/PRP/we have/VBP/have been/VBN/been using/VBG/using so/RB/so far/RB/far have/VBP/have been/VBN/been defined/VBN/defined for/IN/for us/PRP/us /,/, and/CC/and these/DT/these definitions/NNS/definitions have/VBP/have been/VBN/been hidden/NNP/hidden. this/DT/this is/VBZ/is a/DT/a good/JJ/good thing/NN/thing /,/, because/IN/because it/PRP/it allows/VBZ/allows us/PRP/us to/TO/to use/VB/use the/DT/the functions/NNS/functions without/IN/without worrying/VBG/worrying about/IN/about the/DT/the details/NNS/details of/IN/of their/PRP$/their definitions/NNP/definitions. the/DT/the syntax/NN/syntax for/IN/for a/DT/a function/NN/function definition/NN/definition is/VBZ/is /:/: def/NN/def name/NN/name /:/( list/NN/list of/IN/of parameters/NNS/parameters /:/) /:/: statements/NNS/statements you/PRP/you can/MD/can make/VB/make up/RP/up any/DT/any names/NNS/names you/PRP/you want/VBP/want for/IN/for the/DT/the functions/NNS/functions you/PRP/you create/VBP/create /,/, except/IN/except that/DT/that you/PRP/you can/MD/can t/VB/t use/NN/use a/DT/a name/NN/name that/WDT/that is/VBZ/is a/DT/a python/NN/python keyword/NNP/keyword. the/DT/the list/NN/list of/IN/of parameters/NNS/parameters specifies/NNS/specifies what/WP/what information/NN/information /,/, if/IN/if any/DT/any /,/, you/PRP/you have/VBP/have to/TO/to provide/VB/provide in/IN/in order/NN/order to/TO/to use/VB/use the/DT/the new/JJ/new function/NNP/function. there/RB/there can/MD/can be/VB/be any/DT/any number/NN/number of/IN/of statements/NNS/statements inside/VBP/inside the/DT/the function/NN/function /,/, but/CC/but they/PRP/they have/VBP/have to/TO/to be/VB/be indented/VBN/indented from/IN/from the/DT/the left/NN/left margin/NNP/margin. in/IN/in the/DT/the examples/NNS/examples in/IN/in this/DT/this book/NN/book /,/, we/PRP/we will/MD/will use/VB/use an/DT/an indentation/NN/indentation of/IN/of two/CD/two spaces/NNP/spaces. the/DT/the first/JJ/first couple/NN/couple of/IN/of functions/NNS/functions we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write have/VBP/have no/DT/no parameters/NNS/parameters /,/, so/RB/so the/DT/the syntax/NN/syntax looks/VBZ/looks like/IN/like this/DT/this /:/: def/NN/def newline/NN/newline /:/( /:/) /:/: print/NN/print this/DT/this function/NN/function is/VBZ/is named/VBN/named newline/-NONE-/newline. the/DT/the empty/NN/empty parentheses/VBZ/parentheses indicate/JJ/indicate that/IN/that it/PRP/it has/VBZ/has no/DT/no parameters/NNP/parameters. it/PRP/it contains/VBZ/contains only/RB/only a/DT/a single/JJ/single statement/NN/statement /,/, which/WDT/which outputs/NNS/outputs a/DT/a newline/NN/newline character/NNP/character. /NNP/( that/IN/that s/NNS/s what/WP/what happens/NNS/happens when/WRB/when you/PRP/you use/VBP/use a/DT/a print/NN/print command/NN/command without/IN/without any/DT/any arguments/NNP/arguments. /NNP/) the/DT/the syntax/NN/syntax for/IN/for calling/NN/calling the/DT/the new/JJ/new function/NN/function is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the syntax/NN/syntax for/IN/for built-in/JJ/built-in functions/NNS/functions /:/: print/NN/print first/RB/first line/NNP/line. newline/NN/newline /:/( /:/) print/NN/print second/NN/second line/NNP/line. the/DT/the output/NN/output of/IN/of this/DT/this program/NN/program is/VBZ/is /:/: 26/CD/26 functions/NNS/functions first/RB/first line/NNP/line. second/NN/second line/NNP/line. notice/NN/notice the/DT/the extra/JJ/extra space/NN/space between/IN/between the/DT/the two/CD/two lines/NNP/lines. what/WP/what if/IN/if we/PRP/we wanted/VBD/wanted more/JJR/more space/NN/space between/IN/between the/DT/the lines/NNS/lines we/PRP/we could/MD/could call/VB/call the/DT/the same/JJ/same function/NN/function repeatedly/RB/repeatedly /:/: print/NN/print first/RB/first line/NNP/line. newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) print/NN/print second/NN/second line/NNP/line. or/CC/or we/PRP/we could/MD/could write/VB/write a/DT/a new/JJ/new function/NN/function named/VBN/named threelines/NNS/threelines that/IN/that prints/NNS/prints three/CD/three new/JJ/new lines/NNS/lines /:/: def/NN/def threelines/NNS/threelines /:/( /:/) /:/: newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) print/NN/print first/RB/first line/NNP/line. threelines/NNS/threelines /:/( /:/) print/NN/print second/NN/second line/NNP/line. this/DT/this function/NN/function contains/VBZ/contains three/CD/three statements/NNS/statements /,/, all/DT/all of/IN/of which/WDT/which are/VBP/are indented/VBN/indented by/IN/by two/CD/two spaces/NNP/spaces. since/IN/since the/DT/the next/JJ/next statement/NN/statement is/VBZ/is not/RB/not indented/VBN/indented /,/, python/NN/python knows/VBZ/knows that/IN/that it/PRP/it is/VBZ/is not/RB/not part/NN/part of/IN/of the/DT/the function/NNP/function. you/PRP/you should/MD/should notice/VB/notice a/DT/a few/JJ/few things/NNS/things about/IN/about this/DT/this program/NN/program /:/: 1/CD/1. you/PRP/you can/MD/can call/VB/call the/DT/the same/JJ/same procedure/NN/procedure repeatedly/NNP/repeatedly. in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is quite/RB/quite common/JJ/common and/CC/and useful/JJ/useful to/TO/to do/VB/do so/NNP/so. 2/CD/2. you/PRP/you can/MD/can have/VB/have one/CD/one function/NN/function call/NN/call another/DT/another function/NN/function ;/:/; in/IN/in this/DT/this case/NN/case threelines/VBZ/threelines calls/NNS/calls newline/NNP/newline. so/RB/so far/RB/far /,/, it/PRP/it may/MD/may not/RB/not be/VB/be clear/JJ/clear why/WRB/why it/PRP/it is/VBZ/is worth/JJ/worth the/DT/the trouble/NN/trouble to/TO/to create/VB/create all/DT/all of/IN/of these/DT/these new/JJ/new functions/NNP/functions. actually/RB/actually /,/, there/EX/there are/VBP/are a/DT/a lot/NN/lot of/IN/of reasons/NNS/reasons /,/, but/CC/but this/DT/this example/NN/example demonstrates/VBZ/demonstrates two/CD/two /:/: creating/VBG/creating a/DT/a new/JJ/new function/NN/function gives/VBZ/gives you/PRP/you an/DT/an opportunity/NN/opportunity to/TO/to name/VB/name a/DT/a group/NN/group of/IN/of statements/NNP/statements. functions/NNS/functions can/MD/can simplify/VB/simplify a/DT/a program/NN/program by/IN/by hiding/NN/hiding a/DT/a complex/JJ/complex computation/NN/computation behind/IN/behind a/DT/a single/JJ/single command/NN/command and/CC/and by/IN/by using/VBG/using english/JJ/english words/NNS/words in/IN/in place/NN/place of/IN/of arcane/NN/arcane code/NNP/code. 3.7/CD/3.7 definitions/NNS/definitions and/CC/and use/VB/use 27/CD/27 creating/VBG/creating a/DT/a new/JJ/new function/NN/function can/MD/can make/VB/make a/DT/a program/NN/program smaller/NN/smaller by/IN/by eliminating/NN/eliminating repetitive/JJ/repetitive code/NNP/code. for/IN/for example/NN/example /,/, a/DT/a short/JJ/short way/NN/way to/TO/to print/VB/print nine/CD/nine consecutive/JJ/consecutive new/JJ/new lines/NNS/lines is/VBZ/is to/TO/to call/VB/call threelines/NNS/threelines three/CD/three times/NNP/times. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function called/VBN/called ninelines/NNS/ninelines that/IN/that uses/NNS/uses threelines/NNS/threelines to/TO/to print/VB/print nine/CD/nine blank/NN/blank lines/NNP/lines. how/WRB/how would/MD/would you/PRP/you print/VB/print twentyseven/RB/twentyseven new/JJ/new lines/NNS/lines 3.7/CD/3.7 definitions/NNS/definitions and/CC/and use/VB/use pulling/VBG/pulling together/RP/together the/DT/the code/NN/code fragments/NNS/fragments from/IN/from section/NN/section 3.6/CD/3.6 /,/, the/DT/the whole/JJ/whole program/NN/program looks/NNS/looks like/IN/like this/DT/this /:/: def/NN/def newline/NN/newline /:/( /:/) /:/: print/NN/print def/NN/def threelines/NNS/threelines /:/( /:/) /:/: newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) print/NN/print first/RB/first line/NNP/line. threelines/NNS/threelines /:/( /:/) print/NN/print second/NN/second line/NNP/line. this/DT/this program/NN/program contains/VBZ/contains two/CD/two function/NN/function definitions/NNS/definitions /:/: newline/NN/newline and/CC/and threelines/NNP/threelines. function/NN/function definitions/NNS/definitions get/VBP/get executed/VBN/executed just/RB/just like/IN/like other/JJ/other statements/NNS/statements /,/, but/CC/but the/DT/the effect/NN/effect is/VBZ/is to/TO/to create/VB/create the/DT/the new/JJ/new function/NNP/function. the/DT/the statements/NNS/statements inside/VBP/inside the/DT/the function/NN/function do/VBP/do not/RB/not get/VB/get executed/VBN/executed until/IN/until the/DT/the function/NN/function is/VBZ/is called/VBN/called /,/, and/CC/and the/DT/the function/NN/function definition/NN/definition generates/VBZ/generates no/DT/no output/NNP/output. as/IN/as you/PRP/you might/MD/might expect/VB/expect /,/, you/PRP/you have/VBP/have to/TO/to create/VB/create a/DT/a function/NN/function before/IN/before you/PRP/you can/MD/can execute/VB/execute it/NNP/it. in/IN/in other/JJ/other words/NNS/words /,/, the/DT/the function/NN/function definition/NN/definition has/VBZ/has to/TO/to be/VB/be executed/VBN/executed before/IN/before the/DT/the first/JJ/first time/NN/time it/PRP/it is/VBZ/is called/NNP/called. as/IN/as an/DT/an exercise/NN/exercise /,/, move/VB/move the/DT/the last/JJ/last three/CD/three lines/NNS/lines of/IN/of this/DT/this program/NN/program to/TO/to the/DT/the top/JJ/top /,/, so/RB/so the/DT/the function/NN/function calls/VBZ/calls appear/JJ/appear before/IN/before the/DT/the definitions/NNP/definitions. run/NN/run the/DT/the program/NN/program and/CC/and see/VB/see what/WP/what error/NN/error message/NN/message you/PRP/you get/NNP/get. as/IN/as another/DT/another exercise/NN/exercise /,/, start/NN/start with/IN/with the/DT/the working/VBG/working version/NN/version of/IN/of the/DT/the program/NN/program and/CC/and move/VB/move the/DT/the definition/NN/definition of/IN/of newline/NN/newline after/IN/after the/DT/the definition/NN/definition of/IN/of threelines/NNP/threelines. what/WP/what happens/VBZ/happens when/WRB/when you/PRP/you run/VBP/run this/DT/this program/NN/program 28/CD/28 functions/NNS/functions 3.8/CD/3.8 flow/NN/flow of/IN/of execution/NN/execution in/IN/in order/NN/order to/TO/to ensure/VB/ensure that/IN/that a/DT/a function/NN/function is/VBZ/is defined/VBN/defined before/IN/before its/PRP$/its first/JJ/first use/NN/use /,/, you/PRP/you have/VBP/have to/TO/to know/VB/know the/DT/the order/NN/order in/IN/in which/WDT/which statements/NNS/statements are/VBP/are executed/VBN/executed /,/, which/WDT/which is/VBZ/is called/VBN/called the/DT/the flow/NN/flow of/IN/of execution/NNP/execution. execution/NN/execution always/RB/always begins/VBZ/begins at/IN/at the/DT/the first/JJ/first statement/NN/statement of/IN/of the/DT/the program/NNP/program. statements/NNS/statements are/VBP/are executed/VBN/executed one/CD/one at/IN/at a/DT/a time/NN/time /,/, in/IN/in order/NN/order from/IN/from top/JJ/top to/TO/to bottom/NNP/bottom. function/NN/function definitions/NNS/definitions do/VBP/do not/RB/not alter/VB/alter the/DT/the flow/NN/flow of/IN/of execution/NN/execution of/IN/of the/DT/the program/NN/program /,/, but/CC/but remember/NN/remember that/IN/that statements/NNS/statements inside/VBP/inside the/DT/the function/NN/function are/VBP/are not/RB/not executed/VBN/executed until/IN/until the/DT/the function/NN/function is/VBZ/is called/NNP/called. although/IN/although it/PRP/it is/VBZ/is not/RB/not common/JJ/common /,/, you/PRP/you can/MD/can define/VB/define one/CD/one function/NN/function inside/NN/inside another/NNP/another. in/IN/in this/DT/this case/NN/case /,/, the/DT/the inner/NN/inner definition/NN/definition isn/NN/isn t/NN/t executed/VBD/executed until/IN/until the/DT/the outer/NN/outer function/NN/function is/VBZ/is called/NNP/called. function/NN/function calls/VBZ/calls are/VBP/are like/IN/like a/DT/a detour/NN/detour in/IN/in the/DT/the flow/NN/flow of/IN/of execution/NNP/execution. instead/RB/instead of/IN/of going/VBG/going to/TO/to the/DT/the next/JJ/next statement/NN/statement /,/, the/DT/the flow/NN/flow jumps/NNS/jumps to/TO/to the/DT/the first/JJ/first line/NN/line of/IN/of the/DT/the called/VBN/called function/NN/function /,/, executes/VBZ/executes all/DT/all the/DT/the statements/NNS/statements there/RB/there /,/, and/CC/and then/RB/then comes/VBZ/comes back/RB/back to/TO/to pick/VB/pick up/RP/up where/WRB/where it/PRP/it left/VBD/left off/NNP/off. that/IN/that sounds/NNS/sounds simple/VBP/simple enough/RB/enough /,/, until/IN/until you/PRP/you remember/JJR/remember that/IN/that one/CD/one function/NN/function can/MD/can call/VB/call another/NNP/another. while/IN/while in/IN/in the/DT/the middle/NN/middle of/IN/of one/CD/one function/NN/function /,/, the/DT/the program/NN/program might/MD/might have/VB/have to/TO/to execute/VB/execute the/DT/the statements/NNS/statements in/IN/in another/DT/another function/NNP/function. but/CC/but while/IN/while executing/VBG/executing that/IN/that new/JJ/new function/NN/function /,/, the/DT/the program/NN/program might/MD/might have/VB/have to/TO/to execute/VB/execute yet/RB/yet another/DT/another function/NN/function !/./! fortunately/RB/fortunately /,/, python/NN/python is/VBZ/is adept/VBN/adept at/IN/at keeping/NN/keeping track/NN/track of/IN/of where/WRB/where it/PRP/it is/VBZ/is /,/, so/RB/so each/DT/each time/NN/time a/DT/a function/NN/function completes/VBZ/completes /,/, the/DT/the program/NN/program picks/NNS/picks up/IN/up where/WRB/where it/PRP/it left/VBD/left off/RP/off in/IN/in the/DT/the function/NN/function that/IN/that called/VBN/called it/NNP/it. when/WRB/when it/PRP/it gets/VBZ/gets to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the program/NN/program /,/, it/PRP/it terminates/NNP/terminates. what/WP/what s/VBZ/s the/DT/the moral/JJ/moral of/IN/of this/DT/this sordid/NN/sordid tale/NN/tale when/WRB/when you/PRP/you read/VBP/read a/DT/a program/NN/program /,/, don/NN/don t/NN/t read/NN/read from/IN/from top/JJ/top to/TO/to bottom/NNP/bottom. instead/RB/instead /,/, follow/VBP/follow the/DT/the flow/NN/flow of/IN/of execution/NNP/execution. 3.9/CD/3.9 parameters/NNS/parameters and/CC/and arguments/NNS/arguments some/DT/some of/IN/of the/DT/the built-in/JJ/built-in functions/NNS/functions you/PRP/you have/VBP/have used/VBN/used require/NN/require arguments/NNS/arguments /,/, the/DT/the values/NNS/values that/WDT/that control/NN/control how/WRB/how the/DT/the function/NN/function does/VBZ/does its/PRP$/its job/NNP/job. for/IN/for example/NN/example /,/, if/IN/if you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the sine/NN/sine of/IN/of a/DT/a number/NN/number /,/, you/PRP/you have/VBP/have to/TO/to indicate/VB/indicate what/WP/what the/DT/the number/NN/number is/NNP/is. thus/RB/thus /,/, sin/IN/sin takes/NNS/takes a/DT/a numeric/JJ/numeric value/NN/value as/IN/as an/DT/an argument/NNP/argument. some/DT/some functions/NNS/functions take/VBP/take more/JJR/more than/IN/than one/CD/one argument/NNP/argument. for/IN/for example/NN/example /,/, pow/NN/pow takes/VBZ/takes two/CD/two arguments/NNS/arguments /,/, the/DT/the base/NN/base and/CC/and the/DT/the exponent/NNP/exponent. inside/NN/inside the/DT/the function/NN/function /,/, the/DT/the values/NNS/values that/WDT/that are/VBP/are passed/VBN/passed get/NN/get assigned/VBN/assigned to/TO/to variables/NNS/variables called/VBN/called parameters/NNP/parameters. here/RB/here is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a user-defined/JJ/user-defined function/NN/function that/WDT/that has/VBZ/has a/DT/a parameter/NN/parameter /:/: def/NN/def printtwice/NN/printtwice /:/( bruce/NN/bruce /:/) /:/: print/NN/print bruce/NN/bruce /,/, bruce/NN/bruce 3.9/CD/3.9 parameters/NNS/parameters and/CC/and arguments/NNS/arguments 29/CD/29 this/DT/this function/NN/function takes/VBZ/takes a/DT/a single/JJ/single argument/NN/argument and/CC/and assigns/NNS/assigns it/PRP/it to/TO/to a/DT/a parameter/NN/parameter named/VBN/named bruce/NNP/bruce. the/DT/the value/NN/value of/IN/of the/DT/the parameter/NN/parameter /:/( at/IN/at this/DT/this point/NN/point we/PRP/we have/VBP/have no/DT/no idea/NN/idea what/WP/what it/PRP/it will/MD/will be/VB/be /:/) is/VBZ/is printed/VBN/printed twice/NN/twice /,/, followed/VBN/followed by/IN/by a/DT/a newline/NNP/newline. the/DT/the name/NN/name bruce/NN/bruce was/VBD/was chosen/VBN/chosen to/TO/to suggest/VB/suggest that/IN/that the/DT/the name/NN/name you/PRP/you give/VBP/give a/DT/a parameter/NN/parameter is/VBZ/is up/IN/up to/TO/to you/PRP/you /,/, but/CC/but in/IN/in general/JJ/general /,/, you/PRP/you want/VBP/want to/TO/to choose/VB/choose something/NN/something more/JJR/more illustrative/JJ/illustrative than/IN/than bruce/NNP/bruce. the/DT/the function/NN/function printtwice/NN/printtwice works/NNS/works for/IN/for any/DT/any type/NN/type that/IN/that can/MD/can be/VB/be printed/VBN/printed /:/: >/:/> >/:/> >/:/> printtwice/NN/printtwice /:/( spam/NN/spam /:/) spam/NN/spam spam/NN/spam >/:/> >/:/> >/:/> printtwice/NN/printtwice /:/( 5/CD/5 /CD/) 5/CD/5 5/CD/5 >/CD/> >/CD/> >/CD/> printtwice/NN/printtwice /:/( 3.14159/CD/3.14159 /CD/) 3.14159/CD/3.14159 3.14159/CD/3.14159 in/IN/in the/DT/the first/JJ/first function/NN/function call/NN/call /,/, the/DT/the argument/NN/argument is/VBZ/is a/DT/a string/NNP/string. in/IN/in the/DT/the second/JJ/second /,/, it/PRP/it s/VBZ/s an/DT/an integer/NNP/integer. in/IN/in the/DT/the third/JJ/third /,/, it/PRP/it s/VBZ/s a/DT/a float/NNP/float. the/DT/the same/JJ/same rules/NNS/rules of/IN/of composition/NN/composition that/IN/that apply/RB/apply to/TO/to built-in/JJ/built-in functions/NNS/functions also/RB/also apply/RB/apply to/TO/to user-defined/JJ/user-defined functions/NNS/functions /,/, so/RB/so we/PRP/we can/MD/can use/VB/use any/DT/any kind/NN/kind of/IN/of expression/NN/expression as/IN/as an/DT/an argument/NN/argument for/IN/for printtwice/NN/printtwice /:/: >/:/> >/:/> >/:/> printtwice/NN/printtwice /:/( spam/NN/spam 4/CD/4 /CD/) spamspamspamspam/NN/spamspamspamspam spamspamspamspam/NN/spamspamspamspam >/:/> >/:/> >/:/> printtwice/NN/printtwice /:/( math.cos/NNS/math.cos /VBP/( math.pi/JJ/math.pi /NN/) /:/) -1.0/-NONE-/-1.0 -1.0/-NONE-/-1.0 as/IN/as usual/JJ/usual /,/, the/DT/the expression/NN/expression is/VBZ/is evaluated/VBN/evaluated before/IN/before the/DT/the function/NN/function is/VBZ/is run/VBN/run /,/, so/RB/so printtwice/NN/printtwice prints/NNS/prints spamspamspamspam/VBP/spamspamspamspam spamspamspamspam/NN/spamspamspamspam instead/RB/instead of/IN/of spam/NN/spam 4/CD/4 spam/NN/spam 4/CD/4. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a call/NN/call to/TO/to printtwice/NN/printtwice that/IN/that does/VBZ/does print/JJ/print spam/NN/spam 4/CD/4 spam/NN/spam 4/CD/4. hint/NN/hint /:/: strings/NNS/strings can/MD/can be/VB/be enclosed/VBN/enclosed in/IN/in either/DT/either single/JJ/single or/CC/or double/JJ/double quotes/NNS/quotes /,/, and/CC/and the/DT/the type/NN/type of/IN/of quote/NN/quote not/RB/not used/VBN/used to/TO/to enclose/VB/enclose the/DT/the string/NN/string can/MD/can be/VB/be used/VBN/used inside/NN/inside it/PRP/it as/IN/as part/NN/part of/IN/of the/DT/the string/NNP/string. we/PRP/we can/MD/can also/RB/also use/VB/use a/DT/a variable/JJ/variable as/IN/as an/DT/an argument/NN/argument /:/: >/:/> >/:/> >/:/> michael/NN/michael =/:/= eric/JJ/eric /,/, the/DT/the half/NN/half a/DT/a bee/NNP/bee. >/NNP/> >/NNP/> >/NNP/> printtwice/NN/printtwice /:/( michael/NN/michael /:/) eric/JJ/eric /,/, the/DT/the half/NN/half a/DT/a bee/NNP/bee. eric/JJ/eric /,/, the/DT/the half/NN/half a/DT/a bee/NNP/bee. notice/NN/notice something/NN/something very/RB/very important/JJ/important here/NNP/here. the/DT/the name/NN/name of/IN/of the/DT/the variable/JJ/variable we/PRP/we pass/VBP/pass as/IN/as an/DT/an argument/NN/argument /:/( michael/NN/michael /:/) has/VBZ/has nothing/NN/nothing to/TO/to do/VB/do with/IN/with the/DT/the name/NN/name of/IN/of the/DT/the parameter/NN/parameter /:/( bruce/NN/bruce /:/) /./. it/PRP/it doesn/VBD/doesn t/NN/t matter/NN/matter what/WP/what the/DT/the value/NN/value was/VBD/was called/VBN/called back/RB/back home/NN/home /:/( in/IN/in the/DT/the caller/NN/caller /:/) ;/:/; here/RB/here in/IN/in printtwice/NN/printtwice /,/, we/PRP/we call/VBP/call everybody/NN/everybody bruce/NNP/bruce. 30/CD/30 functions/NNS/functions 3.10/CD/3.10 variables/NNS/variables and/CC/and parameters/NNS/parameters are/VBP/are local/JJ/local when/WRB/when you/PRP/you create/VBP/create a/DT/a local/JJ/local variable/JJ/variable inside/NN/inside a/DT/a function/NN/function /,/, it/PRP/it only/RB/only exists/VBZ/exists inside/NN/inside the/DT/the function/NN/function /,/, and/CC/and you/PRP/you can/MD/can not/RB/not use/VB/use it/PRP/it outside/NNP/outside. for/IN/for example/NN/example /:/: def/NN/def cattwice/NN/cattwice /:/( part1/NNP/part1 /,/, part2/NNP/part2 /NNP/) /:/: cat/JJ/cat =/NN/= part1/NNP/part1 +/NNP/+ part2/NNP/part2 printtwice/NN/printtwice /:/( cat/NN/cat /:/) this/DT/this function/NN/function takes/VBZ/takes two/CD/two arguments/NNS/arguments /,/, concatenates/VBZ/concatenates them/PRP/them /,/, and/CC/and then/RB/then prints/NNS/prints the/DT/the result/NN/result twice/NNP/twice. we/PRP/we can/MD/can call/VB/call the/DT/the function/NN/function with/IN/with two/CD/two strings/NNS/strings /:/: >/:/> >/:/> >/:/> chant1/NNP/chant1 =/:/= pie/NN/pie jesu/NN/jesu domine/NN/domine /,/, >/:/> >/:/> >/:/> chant2/NNP/chant2 =/:/= dona/NN/dona eis/NNS/eis requiem/NNP/requiem. >/NNP/> >/NNP/> >/NNP/> cattwice/NN/cattwice /:/( chant1/NNP/chant1 /,/, chant2/NNP/chant2 /NNP/) pie/NN/pie jesu/NN/jesu domine/NN/domine /,/, dona/NN/dona eis/NNS/eis requiem/NNP/requiem. pie/NN/pie jesu/NN/jesu domine/NN/domine /,/, dona/NN/dona eis/NNS/eis requiem/NNP/requiem. when/WRB/when cattwice/NN/cattwice terminates/VBZ/terminates /,/, the/DT/the variable/JJ/variable cat/NN/cat is/VBZ/is destroyed/NNP/destroyed. if/IN/if we/PRP/we try/VBP/try to/TO/to print/VB/print it/PRP/it /,/, we/PRP/we get/VBP/get an/DT/an error/NN/error /:/: >/:/> >/:/> >/:/> print/NN/print cat/NN/cat nameerror/NN/nameerror /:/: cat/JJ/cat parameters/NNS/parameters are/VBP/are also/RB/also local/NNP/local. for/IN/for example/NN/example /,/, outside/IN/outside the/DT/the function/NN/function printtwice/NN/printtwice /,/, there/EX/there is/VBZ/is no/DT/no such/JJ/such thing/NN/thing as/IN/as bruce/NNP/bruce. if/IN/if you/PRP/you try/VBP/try to/TO/to use/VB/use it/PRP/it /,/, python/NN/python will/MD/will complain/NNP/complain. 3.11/CD/3.11 stack/NN/stack diagrams/NNS/diagrams to/TO/to keep/VB/keep track/NN/track of/IN/of which/WDT/which variables/NNS/variables can/MD/can be/VB/be used/VBN/used where/WRB/where /,/, it/PRP/it is/VBZ/is sometimes/RB/sometimes useful/JJ/useful to/TO/to draw/VB/draw a/DT/a stack/NN/stack diagram/NNP/diagram. like/IN/like state/NN/state diagrams/NNS/diagrams /,/, stack/VBP/stack diagrams/NNS/diagrams show/VBP/show the/DT/the value/NN/value of/IN/of each/DT/each variable/JJ/variable /,/, but/CC/but they/PRP/they also/RB/also show/VBP/show the/DT/the function/NN/function to/TO/to which/WDT/which each/DT/each variable/JJ/variable belongs/NNP/belongs. each/DT/each function/NN/function is/VBZ/is represented/VBN/represented by/IN/by a/DT/a frame/NNP/frame. a/DT/a frame/NN/frame is/VBZ/is a/DT/a box/NN/box with/IN/with the/DT/the name/NN/name of/IN/of a/DT/a function/NN/function beside/NN/beside it/PRP/it and/CC/and the/DT/the parameters/NNS/parameters and/CC/and variables/NNS/variables of/IN/of the/DT/the function/NN/function inside/NN/inside it/NNP/it. the/DT/the stack/NN/stack diagram/NN/diagram for/IN/for the/DT/the previous/JJ/previous example/NN/example looks/NNS/looks like/IN/like this/DT/this /:/: 3.11/CD/3.11 stack/NN/stack diagrams/NNS/diagrams 31/CD/31 cattwice/NN/cattwice chant1/NNP/chant1 chant2/NNP/chant2 pie/NN/pie jesu/NN/jesu domine/NN/domine /,/, dona/NN/dona eis/NNS/eis requiem/NNP/requiem. __main__/NNP/__main__ printtwice/NN/printtwice part1/NNP/part1 part2/NNP/part2 cat/NN/cat pie/NN/pie jesu/NN/jesu domine/NN/domine /,/, pie/NN/pie jesu/NN/jesu domine/NN/domine /,/, dona/NN/dona eis/NNS/eis requiem/NNP/requiem. dona/NN/dona eis/VBZ/eis requiem/NNP/requiem. bruce/NN/bruce pie/NN/pie jesu/NN/jesu domine/NN/domine /,/, dona/NN/dona eis/NNS/eis requiem/NNP/requiem. the/DT/the order/NN/order of/IN/of the/DT/the stack/NN/stack shows/VBZ/shows the/DT/the flow/NN/flow of/IN/of execution/NNP/execution. printtwice/NN/printtwice was/VBD/was called/VBN/called by/IN/by cattwice/NN/cattwice /,/, and/CC/and cattwice/NN/cattwice was/VBD/was called/VBN/called by/IN/by main/JJ/main /,/, which/WDT/which is/VBZ/is a/DT/a special/JJ/special name/NN/name for/IN/for the/DT/the topmost/JJS/topmost function/NNP/function. when/WRB/when you/PRP/you create/VBP/create a/DT/a variable/JJ/variable outside/NN/outside of/IN/of any/DT/any function/NN/function /,/, it/PRP/it belongs/VBZ/belongs to/TO/to main/VB/main /./. each/DT/each parameter/NN/parameter refers/NNS/refers to/TO/to the/DT/the same/JJ/same value/NN/value as/IN/as its/PRP$/its corresponding/NN/corresponding argument/NNP/argument. so/RB/so /,/, part1/NNP/part1 has/VBZ/has the/DT/the same/JJ/same value/NN/value as/IN/as chant1/NNP/chant1 /,/, part2/NNP/part2 has/VBZ/has the/DT/the same/JJ/same value/NN/value as/IN/as chant2/NNP/chant2 /,/, and/CC/and bruce/VB/bruce has/VBZ/has the/DT/the same/JJ/same value/NN/value as/IN/as cat/NNP/cat. if/IN/if an/DT/an error/NN/error occurs/VBZ/occurs during/IN/during a/DT/a function/NN/function call/NN/call /,/, python/NN/python prints/NNS/prints the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function /,/, and/CC/and the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function that/IN/that called/VBN/called it/PRP/it /,/, and/CC/and the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function that/IN/that called/VBN/called that/IN/that /,/, all/DT/all the/DT/the way/NN/way back/RB/back to/TO/to main/VB/main /./. for/IN/for example/NN/example /,/, if/IN/if we/PRP/we try/VBP/try to/TO/to access/NN/access cat/IN/cat from/IN/from within/IN/within printtwice/NN/printtwice /,/, we/PRP/we get/VBP/get a/DT/a nameerror/NN/nameerror /:/: traceback/NN/traceback /:/( innermost/NN/innermost last/JJ/last /NN/) /:/: file/JJ/file test.py/JJ/test.py /,/, line/NN/line 13/CD/13 /,/, in/IN/in __main__/NNP/__main__ cattwice/NN/cattwice /:/( chant1/NNP/chant1 /,/, chant2/NNP/chant2 /NNP/) file/NN/file test.py/JJ/test.py /,/, line/NN/line 5/CD/5 /,/, in/IN/in cattwice/NN/cattwice printtwice/NN/printtwice /:/( cat/NN/cat /:/) file/NN/file test.py/JJ/test.py /,/, line/NN/line 9/CD/9 /,/, in/IN/in printtwice/NN/printtwice print/NN/print cat/NN/cat nameerror/NN/nameerror /:/: cat/JJ/cat this/DT/this list/NN/list of/IN/of functions/NNS/functions is/VBZ/is called/VBN/called a/DT/a traceback/NNP/traceback. it/PRP/it tells/VBZ/tells you/PRP/you what/WP/what program/NN/program file/NN/file the/DT/the error/NN/error occurred/VBD/occurred in/IN/in /,/, and/CC/and what/WP/what line/NN/line /,/, and/CC/and what/WP/what functions/NNS/functions were/VBD/were executing/VBG/executing at/IN/at the/DT/the time/NNP/time. it/PRP/it also/RB/also shows/VBZ/shows the/DT/the line/NN/line of/IN/of code/NN/code that/IN/that caused/VBN/caused the/DT/the error/NNP/error. notice/NN/notice the/DT/the similarity/NN/similarity between/IN/between the/DT/the traceback/NN/traceback and/CC/and the/DT/the stack/NN/stack diagram/NNP/diagram. it/PRP/it s/VBZ/s not/RB/not a/DT/a coincidence/NNP/coincidence. 32/CD/32 functions/NNS/functions 3.12/CD/3.12 functions/NNS/functions with/IN/with results/NNS/results you/PRP/you might/MD/might have/VB/have noticed/VBN/noticed by/IN/by now/RB/now that/IN/that some/DT/some of/IN/of the/DT/the functions/NNS/functions we/PRP/we are/VBP/are using/VBG/using /,/, such/JJ/such as/IN/as the/DT/the math/NN/math functions/NNS/functions /,/, yield/NN/yield results/NNP/results. other/JJ/other functions/NNS/functions /,/, like/IN/like newline/NN/newline /,/, perform/NN/perform an/DT/an action/NN/action but/CC/but don/NN/don t/NN/t return/NN/return a/DT/a value/NNP/value. that/WDT/that raises/VBZ/raises some/DT/some questions/NNS/questions /:/: 1/CD/1. what/WP/what happens/NNS/happens if/IN/if you/PRP/you call/VBP/call a/DT/a function/NN/function and/CC/and you/PRP/you don/VBP/don t/NN/t do/VBP/do anything/NN/anything with/IN/with the/DT/the result/NN/result /:/( i.e/NNP/i.e. /,/, you/PRP/you don/VBP/don t/NN/t assign/NN/assign it/PRP/it to/TO/to a/DT/a variable/JJ/variable or/CC/or use/NN/use it/PRP/it as/IN/as part/NN/part of/IN/of a/DT/a larger/JJR/larger expression/NN/expression /:/) 2/CD/2. what/WP/what happens/NNS/happens if/IN/if you/PRP/you use/VBP/use a/DT/a function/NN/function without/IN/without a/DT/a result/NN/result as/IN/as part/NN/part of/IN/of an/DT/an expression/NN/expression /,/, such/JJ/such as/IN/as newline/NN/newline /:/( /:/) +/:/+ 7/CD/7 3/CD/3. can/MD/can you/PRP/you write/VB/write functions/NNS/functions that/IN/that yield/NN/yield results/NNS/results /,/, or/CC/or are/VBP/are you/PRP/you stuck/VBP/stuck with/IN/with simple/JJ/simple function/NN/function like/IN/like newline/NN/newline and/CC/and printtwice/NN/printtwice the/DT/the answer/NN/answer to/TO/to the/DT/the last/JJ/last question/NN/question is/VBZ/is that/IN/that you/PRP/you can/MD/can write/VB/write functions/NNS/functions that/IN/that yield/NN/yield results/NNS/results /,/, and/CC/and we/PRP/we ll/VBP/ll do/VBP/do it/PRP/it in/IN/in chapter/NN/chapter 5/CD/5. as/IN/as an/DT/an exercise/NN/exercise /,/, answer/NN/answer the/DT/the other/JJ/other two/CD/two questions/NNS/questions by/IN/by trying/VBG/trying them/PRP/them out/NNP/out. when/WRB/when you/PRP/you have/VBP/have a/DT/a question/NN/question about/IN/about what/WP/what is/VBZ/is legal/JJ/legal or/CC/or illegal/JJ/illegal in/IN/in python/NN/python /,/, a/DT/a good/JJ/good way/NN/way to/TO/to find/VB/find out/RP/out is/VBZ/is to/TO/to ask/VB/ask the/DT/the interpreter/NNP/interpreter. 3.13/CD/3.13 glossary/JJ/glossary function/NN/function call/NN/call /:/: a/DT/a statement/NN/statement that/IN/that executes/NNS/executes a/DT/a function/NNP/function. it/PRP/it consists/VBZ/consists of/IN/of the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function followed/VBD/followed by/IN/by a/DT/a list/NN/list of/IN/of arguments/NNS/arguments enclosed/VBN/enclosed in/IN/in parentheses/NNP/parentheses. argument/NN/argument /:/: a/DT/a value/NN/value provided/VBN/provided to/TO/to a/DT/a function/NN/function when/WRB/when the/DT/the function/NN/function is/VBZ/is called/NNP/called. this/DT/this value/NN/value is/VBZ/is assigned/VBN/assigned to/TO/to the/DT/the corresponding/NN/corresponding parameter/NN/parameter in/IN/in the/DT/the function/NNP/function. return/NN/return value/NN/value /:/: the/DT/the result/NN/result of/IN/of a/DT/a function/NNP/function. if/IN/if a/DT/a function/NN/function call/NN/call is/VBZ/is used/VBN/used as/RB/as an/DT/an expression/NN/expression /,/, the/DT/the return/NN/return value/NN/value is/VBZ/is the/DT/the value/NN/value of/IN/of the/DT/the expression/NNP/expression. type/NN/type conversion/NN/conversion /:/: an/DT/an explicit/NN/explicit statement/NN/statement that/IN/that takes/VBZ/takes a/DT/a value/NN/value of/IN/of one/CD/one type/NN/type and/CC/and computes/VBZ/computes a/DT/a corresponding/NN/corresponding value/NN/value of/IN/of another/DT/another type/NNP/type. type/NN/type coercion/NN/coercion /:/: a/DT/a type/NN/type conversion/NN/conversion that/WDT/that happens/VBZ/happens automatically/RB/automatically according/VBG/according to/TO/to python/VB/python s/NNS/s coercion/NN/coercion rules/NNP/rules. module/NN/module /:/: a/DT/a file/NN/file that/WDT/that contains/VBZ/contains a/DT/a collection/NN/collection of/IN/of related/JJ/related functions/NNS/functions and/CC/and classes/NNP/classes. dot/NN/dot notation/NN/notation /:/: the/DT/the syntax/NN/syntax for/IN/for calling/NN/calling a/DT/a function/NN/function in/IN/in another/DT/another module/NN/module /,/, specifying/VBG/specifying the/DT/the module/NN/module name/NN/name followed/VBD/followed by/IN/by a/DT/a dot/NN/dot /:/( period/NN/period /:/) and/CC/and the/DT/the function/NN/function name/NNP/name. 3.13/CD/3.13 glossary/JJ/glossary 33/CD/33 function/NN/function /:/: a/DT/a named/VBN/named sequence/NN/sequence of/IN/of statements/NNS/statements that/WDT/that performs/VBZ/performs some/DT/some useful/JJ/useful operation/NNP/operation. functions/NNS/functions may/MD/may or/CC/or may/MD/may not/RB/not take/VB/take arguments/NNS/arguments and/CC/and may/MD/may or/CC/or may/MD/may not/RB/not produce/VB/produce a/DT/a result/NNP/result. function/NN/function definition/NN/definition /:/: a/DT/a statement/NN/statement that/IN/that creates/NNS/creates a/DT/a new/JJ/new function/NN/function /,/, specifying/VBG/specifying its/PRP$/its name/NN/name /,/, parameters/NNS/parameters /,/, and/CC/and the/DT/the statements/NNS/statements it/PRP/it executes/NNP/executes. flow/NN/flow of/IN/of execution/NN/execution /:/: the/DT/the order/NN/order in/IN/in which/WDT/which statements/NNS/statements are/VBP/are executed/VBN/executed during/IN/during a/DT/a program/NN/program run/NNP/run. parameter/NN/parameter /:/: a/DT/a name/NN/name used/VBN/used inside/NN/inside a/DT/a function/NN/function to/TO/to refer/VB/refer to/TO/to the/DT/the value/NN/value passed/VBD/passed as/IN/as an/DT/an argument/NNP/argument. local/JJ/local variable/JJ/variable /:/: a/DT/a variable/JJ/variable defined/VBN/defined inside/NN/inside a/DT/a function/NNP/function. a/DT/a local/JJ/local variable/JJ/variable can/MD/can only/RB/only be/VB/be used/VBN/used inside/NN/inside its/PRP$/its function/NNP/function. stack/NN/stack diagram/NN/diagram /:/: a/DT/a graphical/JJ/graphical representation/NN/representation of/IN/of a/DT/a stack/NN/stack of/IN/of functions/NNS/functions /,/, their/PRP$/their variables/NNS/variables /,/, and/CC/and the/DT/the values/NNS/values to/TO/to which/WDT/which they/PRP/they refer/NNP/refer. frame/VBD/frame /:/: a/DT/a box/NN/box in/IN/in a/DT/a stack/NN/stack diagram/NN/diagram that/WDT/that represents/VBZ/represents a/DT/a function/NN/function call/NNP/call. it/PRP/it contains/VBZ/contains the/DT/the local/JJ/local variables/NNS/variables and/CC/and parameters/NNS/parameters of/IN/of the/DT/the function/NNP/function. traceback/NN/traceback /:/: a/DT/a list/NN/list of/IN/of the/DT/the functions/NNS/functions that/IN/that are/VBP/are executing/VBG/executing /,/, printed/VBN/printed when/WRB/when a/DT/a runtime/NN/runtime error/NN/error occurs/NNP/occurs. 34/CD/34 functions/NNS/functions chapter/NN/chapter 4/CD/4 conditionals/NNS/conditionals and/CC/and recursion/NN/recursion 4.1/CD/4.1 the/DT/the modulus/NN/modulus operator/NN/operator the/DT/the modulus/NN/modulus operator/NN/operator works/NNS/works on/IN/on integers/NNS/integers /:/( and/CC/and integer/JJR/integer expressions/NNS/expressions /:/) and/CC/and yields/NNS/yields the/DT/the remainder/NN/remainder when/WRB/when the/DT/the first/JJ/first operand/NN/operand is/VBZ/is divided/VBN/divided by/IN/by the/DT/the second/NNP/second. in/IN/in python/NN/python /,/, the/DT/the modulus/NN/modulus operator/NN/operator is/VBZ/is a/DT/a percent/NN/percent sign/NN/sign /:/( %/NN/% /:/) /./. the/DT/the syntax/NN/syntax is/VBZ/is the/DT/the same/JJ/same as/IN/as for/IN/for other/JJ/other operators/NNS/operators /:/: >/:/> >/:/> >/:/> quotient/NN/quotient =/:/= 7/CD/7 //CD// 3/CD/3 >/CD/> >/CD/> >/CD/> print/NN/print quotient/NN/quotient 2/CD/2 >/CD/> >/CD/> >/CD/> remainder/NN/remainder =/:/= 7/CD/7 %/NN/% 3/CD/3 >/CD/> >/CD/> >/CD/> print/NN/print remainder/NN/remainder 1/CD/1 so/RB/so 7/CD/7 divided/VBN/divided by/IN/by 3/CD/3 is/VBZ/is 2/CD/2 with/IN/with 1/CD/1 left/VBN/left over/NNP/over. the/DT/the modulus/NN/modulus operator/NN/operator turns/VBZ/turns out/RP/out to/TO/to be/VB/be surprisingly/RB/surprisingly useful/NNP/useful. for/IN/for example/NN/example /,/, you/PRP/you can/MD/can check/VB/check whether/IN/whether one/CD/one number/NN/number is/VBZ/is divisible/JJ/divisible by/IN/by another/DT/another if/IN/if x/NN/x %/NN/% y/NN/y is/VBZ/is zero/CD/zero /,/, then/RB/then x/VB/x is/VBZ/is divisible/JJ/divisible by/IN/by y/NNP/y. also/RB/also /,/, you/PRP/you can/MD/can extract/VB/extract the/DT/the right-most/JJS/right-most digit/NN/digit or/CC/or digits/NNS/digits from/IN/from a/DT/a number/NNP/number. for/IN/for example/NN/example /,/, x/NN/x %/NN/% 10/CD/10 yields/NNS/yields the/DT/the right-most/JJ/right-most digit/NN/digit of/IN/of x/NN/x /:/( in/IN/in base/NN/base 10/CD/10 /CD/) /./. similarly/RB/similarly x/NN/x %/NN/% 100/CD/100 yields/NNS/yields the/DT/the last/JJ/last two/CD/two digits/NNP/digits. 4.2/CD/4.2 boolean/JJ/boolean expressions/NNS/expressions a/DT/a boolean/JJ/boolean expression/NN/expression is/VBZ/is an/DT/an expression/NN/expression that/IN/that is/VBZ/is either/DT/either true/JJ/true or/CC/or false/NNP/false. one/CD/one way/NN/way to/TO/to write/VB/write a/DT/a boolean/JJ/boolean expression/NN/expression is/VBZ/is to/TO/to use/VB/use the/DT/the operator/NN/operator =/:/= =/:/= /,/, which/WDT/which compares/NNS/compares two/CD/two values/NNS/values and/CC/and produces/VBZ/produces a/DT/a boolean/JJ/boolean value/NN/value /:/: 36/CD/36 conditionals/NNS/conditionals and/CC/and recursion/NN/recursion >/:/> >/:/> >/:/> 5/CD/5 =/CD/= =/CD/= 5/CD/5 true/JJ/true >/NN/> >/:/> >/:/> 5/CD/5 =/CD/= =/CD/= 6/CD/6 false/NN/false in/IN/in the/DT/the first/JJ/first statement/NN/statement /,/, the/DT/the two/CD/two operands/NNS/operands are/VBP/are equal/JJ/equal /,/, so/RB/so the/DT/the value/NN/value of/IN/of the/DT/the expression/NN/expression is/VBZ/is true/JJ/true ;/:/; in/IN/in the/DT/the second/JJ/second statement/NN/statement /,/, 5/CD/5 is/VBZ/is not/RB/not equal/JJ/equal to/TO/to 6/CD/6 /,/, so/RB/so we/PRP/we get/VBP/get false/NNP/false. true/NN/true and/CC/and false/NN/false are/VBP/are special/JJ/special values/NNS/values that/WDT/that are/VBP/are built/VBN/built into/IN/into python/NNP/python. the/DT/the =/NNP/= =/NNP/= operator/NN/operator is/VBZ/is one/CD/one of/IN/of the/DT/the comparison/NN/comparison operators/NNS/operators ;/:/; the/DT/the others/NNS/others are/VBP/are /:/: x/NN/x !/./! =/:/= y/NN/y #/#/# x/NN/x is/VBZ/is not/RB/not equal/JJ/equal to/TO/to y/VB/y x/NN/x >/:/> y/NN/y #/#/# x/NN/x is/VBZ/is greater/JJR/greater than/IN/than y/NN/y x/NN/x </:/< y/NN/y #/#/# x/NN/x is/VBZ/is less/JJR/less than/IN/than y/NN/y x/NN/x >/:/> =/:/= y/NN/y #/#/# x/NN/x is/VBZ/is greater/JJR/greater than/IN/than or/CC/or equal/JJ/equal to/TO/to y/VB/y x/NN/x </:/< =/:/= y/NN/y #/#/# x/NN/x is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to y/VB/y although/IN/although these/DT/these operations/NNS/operations are/VBP/are probably/RB/probably familiar/JJ/familiar to/TO/to you/PRP/you /,/, the/DT/the python/NN/python symbols/NNS/symbols are/VBP/are different/JJ/different from/IN/from the/DT/the mathematical/JJ/mathematical symbols/NNP/symbols. a/DT/a common/JJ/common error/NN/error is/VBZ/is to/TO/to use/VB/use a/DT/a single/JJ/single equal/JJ/equal sign/NN/sign /:/( =/:/= /:/) instead/RB/instead of/IN/of a/DT/a double/JJ/double equal/JJ/equal sign/NN/sign /:/( =/:/= =/:/= /:/) /./. remember/NN/remember that/IN/that =/CD/= is/VBZ/is an/DT/an assignment/NN/assignment operator/NN/operator and/CC/and =/CD/= =/CD/= is/VBZ/is a/DT/a comparison/NN/comparison operator/NNP/operator. also/RB/also /,/, there/EX/there is/VBZ/is no/DT/no such/JJ/such thing/NN/thing as/IN/as =/CD/= </CD/< or/CC/or =/CD/= >/CD/> /./. 4.3/CD/4.3 logical/JJ/logical operators/NNS/operators there/EX/there are/VBP/are three/CD/three logical/JJ/logical operators/NNS/operators /:/: and/CC/and /,/, or/CC/or /,/, and/CC/and not/NNP/not. the/DT/the semantics/NNS/semantics /:/( meaning/VBG/meaning /:/) of/IN/of these/DT/these operators/NNS/operators is/VBZ/is similar/JJ/similar to/TO/to their/PRP$/their meaning/NN/meaning in/IN/in english/NNP/english. for/IN/for example/NN/example /,/, x/NN/x >/:/> 0/-NONE-/0 and/CC/and x/NN/x </:/< 10/CD/10 is/VBZ/is true/JJ/true only/RB/only if/IN/if x/NN/x is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 and/CC/and less/JJR/less than/IN/than 10/CD/10. n/NN/n %/NN/% 2/CD/2 =/CD/= =/CD/= 0/-NONE-/0 or/CC/or n/VB/n %/NN/% 3/CD/3 =/CD/= =/CD/= 0/-NONE-/0 is/VBZ/is true/JJ/true if/IN/if either/DT/either of/IN/of the/DT/the conditions/NNS/conditions is/VBZ/is true/JJ/true /,/, that/IN/that is/VBZ/is /,/, if/IN/if the/DT/the number/NN/number is/VBZ/is divisible/JJ/divisible by/IN/by 2/CD/2 or/CC/or 3/CD/3. finally/RB/finally /,/, the/DT/the not/RB/not operator/NN/operator negates/VBZ/negates a/DT/a boolean/JJ/boolean expression/NN/expression /,/, so/RB/so not/RB/not /:/( x/NN/x >/:/> y/NN/y /:/) is/VBZ/is true/JJ/true if/IN/if /NNP/( x/NN/x >/:/> y/NN/y /:/) is/VBZ/is false/RB/false /,/, that/IN/that is/VBZ/is /,/, if/IN/if x/NN/x is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to y/NNP/y. strictly/RB/strictly speaking/VBG/speaking /,/, the/DT/the operands/NNS/operands of/IN/of the/DT/the logical/JJ/logical operators/NNS/operators should/MD/should be/VB/be boolean/JJ/boolean expressions/NNS/expressions /,/, but/CC/but python/NN/python is/VBZ/is not/RB/not very/RB/very strict/NNP/strict. any/DT/any nonzero/NN/nonzero number/NN/number is/VBZ/is interpreted/VBN/interpreted as/RB/as true/NNP/true. >/NNP/> >/NNP/> >/NNP/> x/NN/x =/:/= 5/CD/5 >/CD/> >/CD/> >/CD/> x/NN/x and/CC/and 1/CD/1 1/CD/1 >/CD/> >/CD/> >/CD/> y/NN/y =/:/= 0/-NONE-/0 >/:/> >/:/> >/:/> y/NN/y and/CC/and 1/CD/1 0/-NONE-/0 4.4/CD/4.4 conditional/JJ/conditional execution/NN/execution 37/CD/37 in/IN/in general/JJ/general /,/, this/DT/this sort/NN/sort of/IN/of thing/NN/thing is/VBZ/is not/RB/not considered/VBN/considered good/JJ/good style/NNP/style. if/IN/if you/PRP/you want/VBP/want to/TO/to compare/VB/compare a/DT/a value/NN/value to/TO/to zero/VB/zero /,/, you/PRP/you should/MD/should do/VB/do it/PRP/it explicitly/NNP/explicitly. 4.4/CD/4.4 conditional/JJ/conditional execution/NN/execution in/IN/in order/NN/order to/TO/to write/VB/write useful/JJ/useful programs/NNS/programs /,/, we/PRP/we almost/RB/almost always/RB/always need/VBP/need the/DT/the ability/NN/ability to/TO/to check/VB/check conditions/NNS/conditions and/CC/and change/NN/change the/DT/the behavior/NN/behavior of/IN/of the/DT/the program/NN/program accordingly/NNP/accordingly. conditional/JJ/conditional statements/NNS/statements give/VBP/give us/PRP/us this/DT/this ability/NNP/ability. the/DT/the simplest/JJS/simplest form/NN/form is/VBZ/is the/DT/the if/IN/if statement/NN/statement /:/: if/IN/if x/NN/x >/:/> 0/-NONE-/0 /:/: print/NN/print x/NN/x is/VBZ/is positive/JJ/positive the/DT/the boolean/JJ/boolean expression/NN/expression after/IN/after the/DT/the if/IN/if statement/NN/statement is/VBZ/is called/VBN/called the/DT/the condition/NNP/condition. if/IN/if it/PRP/it is/VBZ/is true/JJ/true /,/, then/RB/then the/DT/the indented/VBN/indented statement/NN/statement gets/NNS/gets executed/NNP/executed. if/IN/if not/RB/not /,/, nothing/NN/nothing happens/NNP/happens. like/IN/like other/JJ/other compound/NN/compound statements/NNS/statements /,/, the/DT/the if/IN/if statement/NN/statement is/VBZ/is made/VBN/made up/RP/up of/IN/of a/DT/a header/NN/header and/CC/and a/DT/a block/NN/block of/IN/of statements/NNS/statements /:/: header/NN/header /:/: first/JJ/first statement/NN/statement /:/... last/JJ/last statement/NN/statement the/DT/the header/NN/header begins/VBZ/begins on/IN/on a/DT/a new/JJ/new line/NN/line and/CC/and ends/NNS/ends with/IN/with a/DT/a colon/NN/colon /:/( /:/: /:/) /./. the/DT/the indented/VBN/indented statements/NNS/statements that/IN/that follow/JJ/follow are/VBP/are called/VBN/called a/DT/a block/NNP/block. the/DT/the first/JJ/first unindented/VBN/unindented statement/NN/statement marks/NNS/marks the/DT/the end/NN/end of/IN/of the/DT/the block/NNP/block. a/DT/a statement/NN/statement block/NN/block inside/NN/inside a/DT/a compound/NN/compound statement/NN/statement is/VBZ/is called/VBN/called the/DT/the body/NN/body of/IN/of the/DT/the statement/NNP/statement. there/RB/there is/VBZ/is no/DT/no limit/NN/limit on/IN/on the/DT/the number/NN/number of/IN/of statements/NNS/statements that/WDT/that can/MD/can appear/VB/appear in/IN/in the/DT/the body/NN/body of/IN/of an/DT/an if/IN/if statement/NN/statement /,/, but/CC/but there/EX/there has/VBZ/has to/TO/to be/VB/be at/IN/at least/JJS/least one/NNP/one. occasionally/RB/occasionally /,/, it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to have/VB/have a/DT/a body/NN/body with/IN/with no/DT/no statements/NNS/statements /VBP/( usually/RB/usually as/IN/as a/DT/a place/NN/place keeper/NN/keeper for/IN/for code/NN/code you/PRP/you haven/RB/haven t/VBP/t written/VBN/written yet/RB/yet /:/) /./. in/IN/in that/DT/that case/NN/case /,/, you/PRP/you can/MD/can use/VB/use the/DT/the pass/NN/pass statement/NN/statement /,/, which/WDT/which does/VBZ/does nothing/NNP/nothing. 4.5/CD/4.5 alternative/NN/alternative execution/NN/execution a/DT/a second/JJ/second form/NN/form of/IN/of the/DT/the if/IN/if statement/NN/statement is/VBZ/is alternative/JJ/alternative execution/NN/execution /,/, in/IN/in which/WDT/which there/EX/there are/VBP/are two/CD/two possibilities/NNS/possibilities and/CC/and the/DT/the condition/NN/condition determines/NNS/determines which/WDT/which one/CD/one gets/VBZ/gets executed/NNP/executed. the/DT/the syntax/NN/syntax looks/VBZ/looks like/IN/like this/DT/this /:/: if/IN/if x/NN/x %/NN/% 2/CD/2 =/CD/= =/CD/= 0/-NONE-/0 /:/: print/NN/print x/NN/x /,/, is/VBZ/is even/RB/even else/RB/else /:/: print/JJ/print x/NN/x /,/, is/VBZ/is odd/JJ/odd 38/CD/38 conditionals/NNS/conditionals and/CC/and recursion/NN/recursion if/IN/if the/DT/the remainder/NN/remainder when/WRB/when x/NN/x is/VBZ/is divided/VBN/divided by/IN/by 2/CD/2 is/VBZ/is 0/-NONE-/0 /,/, then/RB/then we/PRP/we know/VBP/know that/IN/that x/NN/x is/VBZ/is even/RB/even /,/, and/CC/and the/DT/the program/NN/program displays/NNS/displays a/DT/a message/NN/message to/TO/to that/DT/that effect/NNP/effect. if/IN/if the/DT/the condition/NN/condition is/VBZ/is false/NN/false /,/, the/DT/the second/JJ/second set/NN/set of/IN/of statements/NNS/statements is/VBZ/is executed/NNP/executed. since/IN/since the/DT/the condition/NN/condition must/MD/must be/VB/be true/JJ/true or/CC/or false/NN/false /,/, exactly/RB/exactly one/CD/one of/IN/of the/DT/the alternatives/NNS/alternatives will/MD/will be/VB/be executed/NNP/executed. the/DT/the alternatives/NNS/alternatives are/VBP/are called/VBN/called branches/NNS/branches /,/, because/IN/because they/PRP/they are/VBP/are branches/NNS/branches in/IN/in the/DT/the flow/NN/flow of/IN/of execution/NNP/execution. as/IN/as an/DT/an aside/NN/aside /,/, if/IN/if you/PRP/you need/VBP/need to/TO/to check/VB/check the/DT/the parity/NN/parity /:/( evenness/NN/evenness or/CC/or oddness/NN/oddness /:/) of/IN/of numbers/NNS/numbers often/RB/often /,/, you/PRP/you might/MD/might wrap/VB/wrap this/DT/this code/NN/code in/IN/in a/DT/a function/NN/function /:/: def/NN/def printparity/NN/printparity /:/( x/NN/x /:/) /:/: if/IN/if x/NN/x %/NN/% 2/CD/2 =/CD/= =/CD/= 0/-NONE-/0 /:/: print/NN/print x/NN/x /,/, is/VBZ/is even/RB/even else/RB/else /:/: print/JJ/print x/NN/x /,/, is/VBZ/is odd/JJ/odd for/IN/for any/DT/any value/NN/value of/IN/of x/NN/x /,/, printparity/NN/printparity displays/NNS/displays an/DT/an appropriate/JJ/appropriate message/NNP/message. when/WRB/when you/PRP/you call/VBP/call it/PRP/it /,/, you/PRP/you can/MD/can provide/VB/provide any/DT/any integer/NN/integer expression/NN/expression as/IN/as an/DT/an argument/NNP/argument. >/NNP/> >/NNP/> >/NNP/> printparity/NN/printparity /:/( 17/CD/17 /CD/) 17/CD/17 is/VBZ/is odd/JJ/odd >/NN/> >/:/> >/:/> y/NN/y =/:/= 17/CD/17 >/CD/> >/CD/> >/CD/> printparity/NN/printparity /:/( y/NN/y +/:/+ 1/CD/1 /CD/) 18/CD/18 is/VBZ/is even/RB/even 4.6/CD/4.6 chained/VBN/chained conditionals/NNS/conditionals sometimes/RB/sometimes there/RB/there are/VBP/are more/RBR/more than/IN/than two/CD/two possibilities/NNS/possibilities and/CC/and we/PRP/we need/VBP/need more/JJR/more than/IN/than two/CD/two branches/NNP/branches. one/CD/one way/NN/way to/TO/to express/NN/express a/DT/a computation/NN/computation like/IN/like that/DT/that is/VBZ/is a/DT/a chained/VBN/chained conditional/JJ/conditional /:/: if/IN/if x/NN/x </:/< y/NN/y /:/: print/NN/print x/NN/x /,/, is/VBZ/is less/JJR/less than/IN/than /,/, y/NN/y elif/IN/elif x/NN/x >/:/> y/NN/y /:/: print/NN/print x/NN/x /,/, is/VBZ/is greater/JJR/greater than/IN/than /,/, y/NN/y else/RB/else /:/: print/JJ/print x/NN/x /,/, and/CC/and /,/, y/NN/y /,/, are/VBP/are equal/JJ/equal elif/NN/elif is/VBZ/is an/DT/an abbreviation/NN/abbreviation of/IN/of else/NN/else if/NNP/if. again/RB/again /,/, exactly/RB/exactly one/CD/one branch/NN/branch will/MD/will be/VB/be executed/NNP/executed. there/RB/there is/VBZ/is no/DT/no limit/NN/limit of/IN/of the/DT/the number/NN/number of/IN/of elif/NN/elif statements/NNS/statements /,/, but/CC/but the/DT/the last/JJ/last branch/NN/branch has/VBZ/has to/TO/to be/VB/be an/DT/an else/NN/else statement/NN/statement /:/: if/IN/if choice/NN/choice =/:/= =/:/= a/DT/a /:/: functiona/NN/functiona /:/( /:/) elif/IN/elif choice/NN/choice =/:/= =/:/= b/NN/b /:/: functionb/NN/functionb /:/( /:/) elif/IN/elif choice/NN/choice =/:/= =/:/= c/NN/c /:/: functionc/NN/functionc /:/( /:/) 4.7/CD/4.7 nested/VBN/nested conditionals/NNS/conditionals 39/CD/39 else/NN/else /:/: print/JJ/print invalid/NN/invalid choice/NNP/choice. each/DT/each condition/NN/condition is/VBZ/is checked/VBN/checked in/IN/in order/NNP/order. if/IN/if the/DT/the first/JJ/first is/VBZ/is false/RB/false /,/, the/DT/the next/JJ/next is/VBZ/is checked/VBN/checked /,/, and/CC/and so/RB/so on/NNP/on. if/IN/if one/CD/one of/IN/of them/PRP/them is/VBZ/is true/JJ/true /,/, the/DT/the corresponding/NN/corresponding branch/NN/branch executes/VBZ/executes /,/, and/CC/and the/DT/the statement/NN/statement ends/NNP/ends. even/RB/even if/IN/if more/JJR/more than/IN/than one/CD/one condition/NN/condition is/VBZ/is true/JJ/true /,/, only/RB/only the/DT/the first/JJ/first true/JJ/true branch/NN/branch executes/NNP/executes. as/IN/as an/DT/an exercise/NN/exercise /,/, wrap/NN/wrap these/DT/these examples/NNS/examples in/IN/in functions/NNS/functions called/VBN/called compare/NN/compare /:/( x/NN/x /,/, y/NN/y /:/) and/CC/and dispatch/NN/dispatch /:/( choice/NN/choice /:/) /./. 4.7/CD/4.7 nested/VBD/nested conditionals/NNS/conditionals one/CD/one conditional/JJ/conditional can/MD/can also/RB/also be/VB/be nested/VBN/nested within/IN/within another/NNP/another. we/PRP/we could/MD/could have/VB/have written/VBN/written the/DT/the trichotomy/NN/trichotomy example/NN/example as/IN/as follows/NNS/follows /:/: if/IN/if x/NN/x =/:/= =/:/= y/NN/y /:/: print/NN/print x/NN/x /,/, and/CC/and /,/, y/NN/y /,/, are/VBP/are equal/JJ/equal else/NN/else /:/: if/IN/if x/NN/x </:/< y/NN/y /:/: print/NN/print x/NN/x /,/, is/VBZ/is less/JJR/less than/IN/than /,/, y/NN/y else/RB/else /:/: print/JJ/print x/NN/x /,/, is/VBZ/is greater/JJR/greater than/IN/than /,/, y/NN/y the/DT/the outer/NN/outer conditional/JJ/conditional contains/NNS/contains two/CD/two branches/NNP/branches. the/DT/the first/JJ/first branch/NN/branch contains/NNS/contains a/DT/a simple/JJ/simple output/NN/output statement/NNP/statement. the/DT/the second/JJ/second branch/NN/branch contains/VBZ/contains another/DT/another if/IN/if statement/NN/statement /,/, which/WDT/which has/VBZ/has two/CD/two branches/NNS/branches of/IN/of its/PRP$/its own/NNP/own. those/DT/those two/CD/two branches/NNS/branches are/VBP/are both/DT/both output/NN/output statements/NNS/statements /,/, although/IN/although they/PRP/they could/MD/could have/VB/have been/VBN/been conditional/JJ/conditional statements/NNS/statements as/IN/as well/NNP/well. although/IN/although the/DT/the indentation/NN/indentation of/IN/of the/DT/the statements/NNS/statements makes/VBZ/makes the/DT/the structure/NN/structure apparent/NN/apparent /,/, nested/VBD/nested conditionals/NNS/conditionals become/VBP/become difficult/JJ/difficult to/TO/to read/VB/read very/RB/very quickly/NNP/quickly. in/IN/in general/JJ/general /,/, it/PRP/it is/VBZ/is a/DT/a good/JJ/good idea/NN/idea to/TO/to avoid/VB/avoid them/PRP/them when/WRB/when you/PRP/you can/NNP/can. logical/JJ/logical operators/NNS/operators often/RB/often provide/VB/provide a/DT/a way/NN/way to/TO/to simplify/VB/simplify nested/VBN/nested conditional/JJ/conditional statements/NNP/statements. for/IN/for example/NN/example /,/, we/PRP/we can/MD/can rewrite/VB/rewrite the/DT/the following/VBG/following code/NN/code using/VBG/using a/DT/a single/JJ/single conditional/JJ/conditional /:/: if/IN/if 0/-NONE-/0 </:/< x/NN/x /:/: if/IN/if x/NN/x </:/< 10/CD/10 /:/: print/JJ/print x/NN/x is/VBZ/is a/DT/a positive/JJ/positive single/JJ/single digit/NNP/digit. the/DT/the print/NN/print statement/NN/statement is/VBZ/is executed/VBN/executed only/RB/only if/IN/if we/PRP/we make/VBP/make it/PRP/it past/JJ/past both/DT/both the/DT/the conditionals/NNS/conditionals /,/, so/RB/so we/PRP/we can/MD/can use/VB/use the/DT/the and/CC/and operator/NN/operator /:/: if/IN/if 0/-NONE-/0 </:/< x/NN/x and/CC/and x/NN/x </:/< 10/CD/10 /:/: print/JJ/print x/NN/x is/VBZ/is a/DT/a positive/JJ/positive single/JJ/single digit/NNP/digit. 40/CD/40 conditionals/NNS/conditionals and/CC/and recursion/NN/recursion these/DT/these kinds/NNS/kinds of/IN/of conditions/NNS/conditions are/VBP/are common/JJ/common /,/, so/RB/so python/RB/python provides/VBZ/provides an/DT/an alternative/JJ/alternative syntax/NN/syntax that/WDT/that is/VBZ/is similar/JJ/similar to/TO/to mathematical/JJ/mathematical notation/NN/notation /:/: if/IN/if 0/-NONE-/0 </:/< x/NN/x </:/< 10/CD/10 /:/: print/JJ/print x/NN/x is/VBZ/is a/DT/a positive/JJ/positive single/JJ/single digit/NNP/digit. this/DT/this condition/NN/condition is/VBZ/is semantically/RB/semantically the/DT/the same/JJ/same as/IN/as the/DT/the compound/NN/compound boolean/NN/boolean expression/NN/expression and/CC/and the/DT/the nested/JJ/nested conditional/NNP/conditional. 4.8/CD/4.8 the/DT/the return/NN/return statement/NN/statement the/DT/the return/NN/return statement/NN/statement allows/VBZ/allows you/PRP/you to/TO/to terminate/VB/terminate the/DT/the execution/NN/execution of/IN/of a/DT/a function/NN/function before/IN/before you/PRP/you reach/VBP/reach the/DT/the end/NNP/end. one/CD/one reason/NN/reason to/TO/to use/VB/use it/PRP/it is/VBZ/is if/IN/if you/PRP/you detect/VBP/detect an/DT/an error/NN/error condition/NN/condition /:/: import/NN/import math/NN/math def/NN/def printlogarithm/NN/printlogarithm /:/( x/NN/x /:/) /:/: if/IN/if x/NN/x </:/< =/:/= 0/-NONE-/0 /:/: print/NN/print positive/JJ/positive numbers/NNS/numbers only/RB/only /,/, please/NNP/please. return/NN/return result/NN/result =/:/= math.log/JJ/math.log /NN/( x/NN/x /:/) print/NN/print the/DT/the log/NN/log of/IN/of x/NN/x is/VBZ/is /,/, result/NN/result the/DT/the function/NN/function printlogarithm/NN/printlogarithm has/VBZ/has a/DT/a parameter/NN/parameter named/VBN/named x/NNP/x. the/DT/the first/JJ/first thing/NN/thing it/PRP/it does/VBZ/does is/VBZ/is check/NN/check whether/IN/whether x/NN/x is/VBZ/is less/JJR/less than/IN/than or/CC/or equal/JJ/equal to/TO/to 0/-NONE-/0 /,/, in/IN/in which/WDT/which case/NN/case it/PRP/it displays/VBZ/displays an/DT/an error/NN/error message/NN/message and/CC/and then/RB/then uses/VBZ/uses return/NN/return to/TO/to exit/VB/exit the/DT/the function/NNP/function. the/DT/the flow/NN/flow of/IN/of execution/NN/execution immediately/RB/immediately returns/VBZ/returns to/TO/to the/DT/the caller/NN/caller /,/, and/CC/and the/DT/the remaining/VBG/remaining lines/NNS/lines of/IN/of the/DT/the function/NN/function are/VBP/are not/RB/not executed/NNP/executed. remember/NN/remember that/WDT/that to/TO/to use/VB/use a/DT/a function/NN/function from/IN/from the/DT/the math/NN/math module/NN/module /,/, you/PRP/you have/VBP/have to/TO/to import/VB/import it/NNP/it. 4.9/CD/4.9 recursion/NN/recursion we/PRP/we mentioned/VBD/mentioned that/IN/that it/PRP/it is/VBZ/is legal/JJ/legal for/IN/for one/CD/one function/NN/function to/TO/to call/VB/call another/DT/another /,/, and/CC/and you/PRP/you have/VBP/have seen/VBN/seen several/JJ/several examples/NNS/examples of/IN/of that/NNP/that. we/PRP/we neglected/VBD/neglected to/TO/to mention/NN/mention that/IN/that it/PRP/it is/VBZ/is also/RB/also legal/JJ/legal for/IN/for a/DT/a function/NN/function to/TO/to call/VB/call itself/NNP/itself. it/PRP/it may/MD/may not/RB/not be/VB/be obvious/JJ/obvious why/WRB/why that/IN/that is/VBZ/is a/DT/a good/JJ/good thing/NN/thing /,/, but/CC/but it/PRP/it turns/VBZ/turns out/RP/out to/TO/to be/VB/be one/CD/one of/IN/of the/DT/the most/RBS/most magical/JJ/magical and/CC/and interesting/JJ/interesting things/NNS/things a/DT/a program/NN/program can/MD/can do/VB/do. for/IN/for example/NN/example /,/, look/NN/look at/IN/at the/DT/the following/JJ/following function/NN/function /:/: def/NN/def countdown/IN/countdown /CD/( n/NN/n /:/) /:/: if/IN/if n/NN/n =/:/= =/:/= 0/-NONE-/0 /:/: 4.9/CD/4.9 recursion/NN/recursion 41/CD/41 print/NN/print blastoff/NN/blastoff !/./! else/NN/else /:/: print/JJ/print n/NN/n countdown/NN/countdown /:/( n-1/-NONE-/n-1 /:/) countdown/NN/countdown expects/VBZ/expects the/DT/the parameter/NN/parameter /,/, n/NN/n /,/, to/TO/to be/VB/be a/DT/a positive/JJ/positive integer/NNP/integer. if/IN/if n/NN/n is/VBZ/is 0/-NONE-/0 /,/, it/PRP/it outputs/VBZ/outputs the/DT/the word/NN/word /,/, blastoff/IN/blastoff !/./! otherwise/NN/otherwise /,/, it/PRP/it outputs/VBZ/outputs n/NN/n and/CC/and then/RB/then calls/VBZ/calls a/DT/a function/NN/function named/VBN/named countdown/NN/countdown itself/PRP/itself passing/VBG/passing n-1/-NONE-/n-1 as/IN/as an/DT/an argument/NNP/argument. what/WP/what happens/VBZ/happens if/IN/if we/PRP/we call/VBP/call this/DT/this function/NN/function like/IN/like this/DT/this /:/: >/:/> >/:/> >/:/> countdown/NN/countdown /:/( 3/CD/3 /CD/) the/DT/the execution/NN/execution of/IN/of countdown/NN/countdown begins/VBZ/begins with/IN/with n/NN/n =/:/= 3/CD/3 /,/, and/CC/and since/IN/since n/NN/n is/VBZ/is not/RB/not 0/-NONE-/0 /,/, it/PRP/it outputs/VBZ/outputs the/DT/the value/NN/value 3/CD/3 /,/, and/CC/and then/RB/then calls/VBZ/calls itself/NNP/itself... the/DT/the execution/NN/execution of/IN/of countdown/NN/countdown begins/VBZ/begins with/IN/with n/NN/n =/:/= 2/CD/2 /,/, and/CC/and since/IN/since n/NN/n is/VBZ/is not/RB/not 0/-NONE-/0 /,/, it/PRP/it outputs/VBZ/outputs the/DT/the value/NN/value 2/CD/2 /,/, and/CC/and then/RB/then calls/VBZ/calls itself/NNP/itself... the/DT/the execution/NN/execution of/IN/of countdown/NN/countdown begins/VBZ/begins with/IN/with n/NN/n =/:/= 1/CD/1 /,/, and/CC/and since/IN/since n/NN/n is/VBZ/is not/RB/not 0/-NONE-/0 /,/, it/PRP/it outputs/VBZ/outputs the/DT/the value/NN/value 1/CD/1 /,/, and/CC/and then/RB/then calls/VBZ/calls itself/NNP/itself... the/DT/the execution/NN/execution of/IN/of countdown/NN/countdown begins/VBZ/begins with/IN/with n/NN/n =/:/= 0/-NONE-/0 /,/, and/CC/and since/IN/since n/NN/n is/VBZ/is 0/-NONE-/0 /,/, it/PRP/it outputs/VBZ/outputs the/DT/the word/NN/word /,/, blastoff/IN/blastoff !/./! and/CC/and then/RB/then returns/NNP/returns. the/DT/the countdown/NN/countdown that/IN/that got/NN/got n/NN/n =/:/= 1/CD/1 returns/NNP/returns. the/DT/the countdown/NN/countdown that/IN/that got/NN/got n/NN/n =/:/= 2/CD/2 returns/NNP/returns. the/DT/the countdown/NN/countdown that/IN/that got/NN/got n/NN/n =/:/= 3/CD/3 returns/NNP/returns. and/CC/and then/RB/then you/PRP/you re/VBP/re back/RP/back in/IN/in main/JJ/main /NN/( what/WP/what a/DT/a trip/NN/trip /:/) /./. so/RB/so /,/, the/DT/the total/JJ/total output/NN/output looks/NNS/looks like/IN/like this/DT/this /:/: 3/LS/3 2/CD/2 1/CD/1 blastoff/NN/blastoff !/./! as/IN/as a/DT/a second/JJ/second example/NN/example /,/, look/NN/look again/RB/again at/IN/at the/DT/the functions/NNS/functions newline/VBP/newline and/CC/and threelines/NNS/threelines /:/: def/NN/def newline/NN/newline /:/( /:/) /:/: print/NN/print def/NN/def threelines/NNS/threelines /:/( /:/) /:/: newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) newline/NN/newline /:/( /:/) 42/CD/42 conditionals/NNS/conditionals and/CC/and recursion/NN/recursion although/IN/although these/DT/these work/NN/work /,/, they/PRP/they would/MD/would not/RB/not be/VB/be much/RB/much help/VB/help if/IN/if we/PRP/we wanted/VBD/wanted to/TO/to output/VB/output 2/CD/2 newlines/NNS/newlines /,/, or/CC/or 106/CD/106. a/DT/a better/JJR/better alternative/NN/alternative would/MD/would be/VB/be this/DT/this /:/: def/NN/def nlines/NNS/nlines /:/( n/NN/n /:/) /:/: if/IN/if n/NN/n >/:/> 0/-NONE-/0 /:/: print/NN/print nlines/NNS/nlines /:/( n-1/-NONE-/n-1 /:/) this/DT/this program/NN/program is/VBZ/is similar/JJ/similar to/TO/to countdown/VB/countdown ;/:/; as/IN/as long/RB/long as/IN/as n/NN/n is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 /,/, it/PRP/it outputs/VBZ/outputs one/CD/one newline/NN/newline and/CC/and then/RB/then calls/VBZ/calls itself/PRP/itself to/TO/to output/VB/output n-1/-NONE-/n-1 additional/JJ/additional newlines/NNP/newlines. thus/RB/thus /,/, the/DT/the total/JJ/total number/NN/number of/IN/of newlines/NNS/newlines is/VBZ/is 1/CD/1 +/CD/+ /CD/( n/NN/n /:/- 1/CD/1 /CD/) which/WDT/which /,/, if/IN/if you/PRP/you do/VBP/do your/PRP$/your algebra/NN/algebra right/RB/right /,/, comes/VBZ/comes out/RP/out to/TO/to n/NNP/n. the/DT/the process/NN/process of/IN/of a/DT/a function/NN/function calling/VBG/calling itself/PRP/itself is/VBZ/is recursion/NN/recursion /,/, and/CC/and such/JJ/such functions/NNS/functions are/VBP/are said/VBN/said to/TO/to be/VB/be recursive/NNP/recursive. 4.10/CD/4.10 stack/NN/stack diagrams/NNS/diagrams for/IN/for recursive/JJ/recursive functions/NNS/functions in/IN/in section/NN/section 3.11/CD/3.11 /,/, we/PRP/we used/VBD/used a/DT/a stack/NN/stack diagram/NN/diagram to/TO/to represent/VB/represent the/DT/the state/NN/state of/IN/of a/DT/a program/NN/program during/IN/during a/DT/a function/NN/function call/NNP/call. the/DT/the same/JJ/same kind/NN/kind of/IN/of diagram/NN/diagram can/MD/can help/VB/help interpret/VB/interpret a/DT/a recursive/JJ/recursive function/NNP/function. every/DT/every time/NN/time a/DT/a function/NN/function gets/VBZ/gets called/VBN/called /,/, python/NN/python creates/VBZ/creates a/DT/a new/JJ/new function/NN/function frame/NN/frame /,/, which/WDT/which contains/VBZ/contains the/DT/the function/NN/function s/VBZ/s local/JJ/local variables/NNS/variables and/CC/and parameters/NNP/parameters. for/IN/for a/DT/a recursive/JJ/recursive function/NN/function /,/, there/EX/there might/MD/might be/VB/be more/RBR/more than/IN/than one/CD/one frame/NN/frame on/IN/on the/DT/the stack/NN/stack at/IN/at the/DT/the same/JJ/same time/NNP/time. this/DT/this figure/NN/figure shows/VBZ/shows a/DT/a stack/NN/stack diagram/NN/diagram for/IN/for countdown/NN/countdown called/VBN/called with/IN/with n/NN/n =/:/= 3/CD/3 /:/: __main__/NNP/__main__ countdown/NN/countdown countdown/NN/countdown countdown/NN/countdown countdown/NN/countdown n/NN/n 3/CD/3 n/NN/n 2/CD/2 n/NN/n 1/CD/1 n/NN/n 0/-NONE-/0 as/IN/as usual/JJ/usual /,/, the/DT/the top/JJ/top of/IN/of the/DT/the stack/NN/stack is/VBZ/is the/DT/the frame/NN/frame for/IN/for main/JJ/main /./. it/PRP/it is/VBZ/is empty/JJ/empty because/IN/because we/PRP/we did/VBD/did not/RB/not create/VB/create any/DT/any variables/NNS/variables in/IN/in main/JJ/main or/CC/or pass/NN/pass any/DT/any arguments/NNS/arguments to/TO/to it/NNP/it. 4.11/CD/4.11 infinite/NN/infinite recursion/NN/recursion 43/CD/43 the/DT/the four/CD/four countdown/NN/countdown frames/NNS/frames have/VBP/have different/JJ/different values/NNS/values for/IN/for the/DT/the parameter/NN/parameter n/NNP/n. the/DT/the bottom/NN/bottom of/IN/of the/DT/the stack/NN/stack /,/, where/WRB/where n/NN/n =/:/= 0/-NONE-/0 /,/, is/VBZ/is called/VBN/called the/DT/the base/NN/base case/NNP/case. it/PRP/it does/VBZ/does not/RB/not make/VB/make a/DT/a recursive/JJ/recursive call/NN/call /,/, so/RB/so there/RB/there are/VBP/are no/DT/no more/RBR/more frames/NNP/frames. as/IN/as an/DT/an exercise/NN/exercise /,/, draw/NN/draw a/DT/a stack/NN/stack diagram/NN/diagram for/IN/for nlines/NNS/nlines called/VBN/called with/IN/with n/NN/n =/:/= 4/CD/4. 4.11/CD/4.11 infinite/JJ/infinite recursion/NN/recursion if/IN/if a/DT/a recursion/NN/recursion never/RB/never reaches/VBZ/reaches a/DT/a base/NN/base case/NN/case /,/, it/PRP/it goes/VBZ/goes on/IN/on making/VBG/making recursive/JJ/recursive calls/NNS/calls forever/RB/forever /,/, and/CC/and the/DT/the program/NN/program never/RB/never terminates/NNP/terminates. this/DT/this is/VBZ/is known/VBN/known as/IN/as infinite/JJ/infinite recursion/NN/recursion /,/, and/CC/and it/PRP/it is/VBZ/is generally/RB/generally not/RB/not considered/VBN/considered a/DT/a good/JJ/good idea/NNP/idea. here/RB/here is/VBZ/is a/DT/a minimal/JJ/minimal program/NN/program with/IN/with an/DT/an infinite/JJ/infinite recursion/NN/recursion /:/: def/NN/def recurse/NN/recurse /:/( /:/) /:/: recurse/NN/recurse /:/( /:/) in/IN/in most/JJS/most programming/NN/programming environments/NNS/environments /,/, a/DT/a program/NN/program with/IN/with infinite/JJ/infinite recursion/NN/recursion does/VBZ/does not/RB/not really/RB/really run/VBN/run forever/NNP/forever. python/NN/python reports/NNS/reports an/DT/an error/NN/error message/NN/message when/WRB/when the/DT/the maximum/NN/maximum recursion/NN/recursion depth/NN/depth is/VBZ/is reached/VBN/reached /:/: file/JJ/file /,/, line/NN/line 2/CD/2 /,/, in/IN/in recurse/NN/recurse /:/( 98/CD/98 repetitions/NNS/repetitions omitted/VBD/omitted /CD/) file/NN/file /,/, line/NN/line 2/CD/2 /,/, in/IN/in recurse/NN/recurse runtimeerror/NN/runtimeerror /:/: maximum/NN/maximum recursion/NN/recursion depth/NN/depth exceeded/VBD/exceeded this/DT/this traceback/NN/traceback is/VBZ/is a/DT/a little/RB/little bigger/JJR/bigger than/IN/than the/DT/the one/CD/one we/PRP/we saw/VBD/saw in/IN/in the/DT/the previous/JJ/previous chapter/NNP/chapter. when/WRB/when the/DT/the error/NN/error occurs/NNS/occurs /,/, there/EX/there are/VBP/are 100/CD/100 recurse/NN/recurse frames/NNS/frames on/IN/on the/DT/the stack/NN/stack !/./! as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function with/IN/with infinite/JJ/infinite recursion/NN/recursion and/CC/and run/VBP/run it/PRP/it in/IN/in the/DT/the python/NN/python interpreter/NNP/interpreter. 4.12/CD/4.12 keyboard/NN/keyboard input/NN/input the/DT/the programs/NNS/programs we/PRP/we have/VBP/have written/VBN/written so/RB/so far/RB/far are/VBP/are a/DT/a bit/NN/bit rude/NN/rude in/IN/in the/DT/the sense/NN/sense that/IN/that they/PRP/they accept/VBP/accept no/DT/no input/NN/input from/IN/from the/DT/the user/NNP/user. they/PRP/they just/RB/just do/VBP/do the/DT/the same/JJ/same thing/NN/thing every/DT/every time/NNP/time. python/NN/python provides/VBZ/provides built-in/JJ/built-in functions/NNS/functions that/WDT/that get/VB/get input/VBD/input from/IN/from the/DT/the keyboard/NNP/keyboard. the/DT/the simplest/JJS/simplest is/VBZ/is called/VBN/called raw/NN/raw input/NNP/input. when/WRB/when this/DT/this function/NN/function is/VBZ/is called/VBN/called /,/, the/DT/the program/NN/program stops/NNS/stops and/CC/and waits/NNS/waits for/IN/for the/DT/the user/NN/user to/TO/to type/NN/type something/NNP/something. when/WRB/when the/DT/the user/NN/user presses/VBZ/presses return/NN/return or/CC/or the/DT/the enter/NN/enter key/NN/key /,/, the/DT/the program/NN/program resumes/VBZ/resumes and/CC/and raw/NN/raw input/NN/input returns/NNS/returns what/WP/what the/DT/the user/NN/user typed/VBD/typed as/IN/as a/DT/a string/NN/string /:/: >/:/> >/:/> >/:/> input/NN/input =/:/= raw_input/NNP/raw_input /:/( /:/) what/WP/what are/VBP/are you/PRP/you waiting/VBG/waiting for/IN/for >/CD/> >/CD/> >/CD/> print/NN/print input/NN/input what/WP/what are/VBP/are you/PRP/you waiting/VBG/waiting for/IN/for 44/CD/44 conditionals/NNS/conditionals and/CC/and recursion/NN/recursion before/IN/before calling/VBG/calling raw/NN/raw input/NN/input /,/, it/PRP/it is/VBZ/is a/DT/a good/JJ/good idea/NN/idea to/TO/to print/VB/print a/DT/a message/NN/message telling/VBG/telling the/DT/the user/NN/user what/WP/what to/TO/to input/NNP/input. this/DT/this message/NN/message is/VBZ/is called/VBN/called a/DT/a prompt/NNP/prompt. we/PRP/we can/MD/can supply/RB/supply a/DT/a prompt/NN/prompt as/IN/as an/DT/an argument/NN/argument to/TO/to raw/VB/raw input/NN/input /:/: >/:/> >/:/> >/:/> name/NN/name =/:/= raw_input/NNP/raw_input /:/( what...is/NNP/what...is your/PRP$/your name/NN/name /:/) what...is/NNP/what...is your/PRP$/your name/NN/name arthur/NN/arthur /,/, king/VBG/king of/IN/of the/DT/the britons/NNS/britons !/./! >/:/> >/:/> >/:/> print/NN/print name/NN/name arthur/NN/arthur /,/, king/VBG/king of/IN/of the/DT/the britons/NNS/britons !/./! if/IN/if we/PRP/we expect/VBP/expect the/DT/the response/NN/response to/TO/to be/VB/be an/DT/an integer/NN/integer /,/, we/PRP/we can/MD/can use/VB/use the/DT/the input/NN/input function/NN/function /:/: prompt/NN/prompt =/:/= what...is/NN/what...is the/DT/the airspeed/NN/airspeed velocity/NN/velocity of/IN/of an/DT/an unladen/JJ/unladen swallow/NN/swallow \/:/\ n/NN/n speed/NN/speed =/:/= input/NN/input /:/( prompt/NN/prompt /:/) the/DT/the sequence/NN/sequence \/:/\ n/NN/n at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the string/NN/string represents/VBZ/represents a/DT/a newline/NN/newline /,/, so/RB/so the/DT/the user/NN/user s/VBZ/s input/VBN/input appears/NNS/appears below/IN/below the/DT/the prompt/NNP/prompt. if/IN/if the/DT/the user/NN/user types/NNS/types a/DT/a string/VBG/string of/IN/of digits/NNS/digits /,/, it/PRP/it is/VBZ/is converted/VBN/converted to/TO/to an/DT/an integer/NN/integer and/CC/and assigned/VBD/assigned to/TO/to speed/NNP/speed. unfortunately/RB/unfortunately /,/, if/IN/if the/DT/the user/NN/user types/NNS/types a/DT/a character/NN/character that/WDT/that is/VBZ/is not/RB/not a/DT/a digit/NN/digit /,/, the/DT/the program/NN/program crashes/NNS/crashes /:/: >/:/> >/:/> >/:/> speed/NN/speed =/:/= input/NN/input /:/( prompt/NN/prompt /:/) what...is/NN/what...is the/DT/the airspeed/NN/airspeed velocity/NN/velocity of/IN/of an/DT/an unladen/JJ/unladen swallow/NN/swallow what/WP/what do/VBP/do you/PRP/you mean/VB/mean /,/, an/DT/an african/JJ/african or/CC/or a/DT/a european/JJ/european swallow/NN/swallow syntaxerror/NN/syntaxerror /:/: invalid/JJ/invalid syntax/NN/syntax to/TO/to avoid/VB/avoid this/DT/this kind/NN/kind of/IN/of error/NN/error /,/, it/PRP/it is/VBZ/is generally/RB/generally a/DT/a good/JJ/good idea/NN/idea to/TO/to use/VB/use raw/NN/raw input/NN/input to/TO/to get/VB/get a/DT/a string/NN/string and/CC/and then/RB/then use/VB/use conversion/NN/conversion functions/NNS/functions to/TO/to convert/VB/convert to/TO/to other/JJ/other types/NNP/types. 4.13/CD/4.13 glossary/JJ/glossary modulus/NN/modulus operator/NN/operator /:/: an/DT/an operator/NN/operator /,/, denoted/VBD/denoted with/IN/with a/DT/a percent/NN/percent sign/NN/sign /:/( %/NN/% /:/) /,/, that/IN/that works/NNS/works on/IN/on integers/NNS/integers and/CC/and yields/NNS/yields the/DT/the remainder/NN/remainder when/WRB/when one/CD/one number/NN/number is/VBZ/is divided/VBN/divided by/IN/by another/NNP/another. boolean/JJ/boolean expression/NN/expression /:/: an/DT/an expression/NN/expression that/IN/that is/VBZ/is either/DT/either true/JJ/true or/CC/or false/NNP/false. comparison/NN/comparison operator/NN/operator /:/: one/CD/one of/IN/of the/DT/the operators/NNS/operators that/WDT/that compares/VBZ/compares two/CD/two values/NNS/values /:/: =/:/= =/:/= /,/, !/./! =/:/= /,/, >/:/> /,/, =/:/= /,/, and/CC/and </:/< =/:/= /./. logical/JJ/logical operator/NN/operator /:/: one/CD/one of/IN/of the/DT/the operators/NNS/operators that/WDT/that combines/VBZ/combines boolean/JJ/boolean expressions/NNS/expressions /:/: and/CC/and /,/, or/CC/or /,/, and/CC/and not/NNP/not. conditional/JJ/conditional statement/NN/statement /:/: a/DT/a statement/NN/statement that/IN/that controls/NNS/controls the/DT/the flow/NN/flow of/IN/of execution/NN/execution depending/VBG/depending on/IN/on some/DT/some condition/NNP/condition. 4.13/CD/4.13 glossary/JJ/glossary 45/CD/45 condition/NN/condition /:/: the/DT/the boolean/JJ/boolean expression/NN/expression in/IN/in a/DT/a conditional/JJ/conditional statement/NN/statement that/IN/that determines/NNS/determines which/WDT/which branch/NN/branch is/VBZ/is executed/NNP/executed. compound/NN/compound statement/NN/statement /:/: a/DT/a statement/NN/statement that/IN/that consists/NNS/consists of/IN/of a/DT/a header/NN/header and/CC/and a/DT/a body/NNP/body. the/DT/the header/NN/header ends/VBZ/ends with/IN/with a/DT/a colon/NN/colon /:/( /:/: /:/) /./. the/DT/the body/NN/body is/VBZ/is indented/VBN/indented relative/JJ/relative to/TO/to the/DT/the header/NNP/header. block/NN/block /:/: a/DT/a group/NN/group of/IN/of consecutive/JJ/consecutive statements/NNS/statements with/IN/with the/DT/the same/JJ/same indentation/NNP/indentation. body/NN/body /:/: the/DT/the block/NN/block in/IN/in a/DT/a compound/NN/compound statement/NN/statement that/IN/that follows/VBZ/follows the/DT/the header/NNP/header. nesting/NN/nesting /:/: one/CD/one program/NN/program structure/NN/structure within/IN/within another/DT/another /,/, such/JJ/such as/IN/as a/DT/a conditional/JJ/conditional statement/NN/statement inside/NN/inside a/DT/a branch/NN/branch of/IN/of another/DT/another conditional/JJ/conditional statement/NNP/statement. recursion/NN/recursion /:/: the/DT/the process/NN/process of/IN/of calling/VBG/calling the/DT/the function/NN/function that/IN/that is/VBZ/is currently/RB/currently executing/NNP/executing. base/NN/base case/NN/case /:/: a/DT/a branch/NN/branch of/IN/of the/DT/the conditional/JJ/conditional statement/NN/statement in/IN/in a/DT/a recursive/JJ/recursive function/NN/function that/WDT/that does/VBZ/does not/RB/not result/VB/result in/IN/in a/DT/a recursive/JJ/recursive call/NNP/call. infinite/NN/infinite recursion/NN/recursion /:/: a/DT/a function/NN/function that/WDT/that calls/VBZ/calls itself/PRP/itself recursively/RB/recursively without/IN/without ever/RB/ever reaching/VBG/reaching the/DT/the base/NN/base case/NNP/case. eventually/RB/eventually /,/, an/DT/an infinite/JJ/infinite recursion/NN/recursion causes/NNS/causes a/DT/a runtime/NN/runtime error/NNP/error. prompt/NN/prompt /:/: a/DT/a visual/JJ/visual cue/NN/cue that/WDT/that tells/VBZ/tells the/DT/the user/NN/user to/TO/to input/VB/input data/NNP/data. 46/CD/46 conditionals/NNS/conditionals and/CC/and recursion/NN/recursion chapter/NN/chapter 5/CD/5 fruitful/JJ/fruitful functions/NNS/functions 5.1/CD/5.1 return/NN/return values/NNS/values some/DT/some of/IN/of the/DT/the built-in/JJ/built-in functions/NNS/functions we/PRP/we have/VBP/have used/VBN/used /,/, such/JJ/such as/IN/as the/DT/the math/NN/math functions/NNS/functions /,/, have/VBP/have produced/VBN/produced results/NNP/results. calling/NN/calling the/DT/the function/NN/function generates/VBZ/generates a/DT/a new/JJ/new value/NN/value /,/, which/WDT/which we/PRP/we usually/RB/usually assign/VBP/assign to/TO/to a/DT/a variable/JJ/variable or/CC/or use/NN/use as/IN/as part/NN/part of/IN/of an/DT/an expression/NNP/expression. e/NN/e =/:/= math.exp/JJ/math.exp /NN/( 1.0/CD/1.0 /CD/) height/NN/height =/:/= radius/NN/radius math.sin/NN/math.sin /:/( angle/NN/angle /:/) but/CC/but so/RB/so far/RB/far /,/, none/NN/none of/IN/of the/DT/the functions/NNS/functions we/PRP/we have/VBP/have written/VBN/written has/VBZ/has returned/VBN/returned a/DT/a value/NNP/value. in/IN/in this/DT/this chapter/NN/chapter /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to write/VB/write functions/NNS/functions that/IN/that return/NN/return values/NNS/values /,/, which/WDT/which we/PRP/we will/MD/will call/VB/call fruitful/JJ/fruitful functions/NNS/functions /,/, for/IN/for want/JJ/want of/IN/of a/DT/a better/JJR/better name/NNP/name. the/DT/the first/JJ/first example/NN/example is/VBZ/is area/NN/area /,/, which/WDT/which returns/NNS/returns the/DT/the area/NN/area of/IN/of a/DT/a circle/NN/circle with/IN/with the/DT/the given/VBN/given radius/NN/radius /:/: import/NN/import math/NN/math def/NN/def area/NN/area /:/( radius/NN/radius /:/) /:/: temp/NN/temp =/:/= math.pi/NNP/math.pi radius/NN/radius 2/CD/2 return/NN/return temp/NN/temp we/PRP/we have/VBP/have seen/VBN/seen the/DT/the return/NN/return statement/NN/statement before/IN/before /,/, but/CC/but in/IN/in a/DT/a fruitful/JJ/fruitful function/NN/function the/DT/the return/NN/return statement/NN/statement includes/VBZ/includes a/DT/a return/NN/return value/NNP/value. this/DT/this statement/NN/statement means/VBZ/means /:/: return/NN/return immediately/RB/immediately from/IN/from this/DT/this function/NN/function and/CC/and use/VBP/use the/DT/the following/VBG/following expression/NN/expression as/IN/as a/DT/a return/NN/return value/NNP/value. the/DT/the expression/NN/expression provided/VBD/provided can/MD/can be/VB/be arbitrarily/RB/arbitrarily complicated/VBN/complicated /,/, so/RB/so we/PRP/we could/MD/could have/VB/have written/VBN/written this/DT/this function/NN/function more/JJR/more concisely/RB/concisely /:/: def/NN/def area/NN/area /:/( radius/NN/radius /:/) /:/: return/NN/return math.pi/NN/math.pi radius/VBZ/radius 2/CD/2 48/CD/48 fruitful/JJ/fruitful functions/NNS/functions on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, temporary/JJ/temporary variables/NNS/variables like/IN/like temp/NN/temp often/RB/often make/VBP/make debugging/VBG/debugging easier/NNP/easier. sometimes/RB/sometimes it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to have/VB/have multiple/JJ/multiple return/NN/return statements/NNS/statements /,/, one/CD/one in/IN/in each/DT/each branch/NN/branch of/IN/of a/DT/a conditional/JJ/conditional /:/: def/NN/def absolutevalue/NN/absolutevalue /:/( x/NN/x /:/) /:/: if/IN/if x/NN/x </:/< 0/-NONE-/0 /:/: return/NN/return -x/NN/-x else/RB/else /:/: return/NN/return x/NN/x since/IN/since these/DT/these return/NN/return statements/NNS/statements are/VBP/are in/IN/in an/DT/an alternative/NN/alternative conditional/JJ/conditional /,/, only/RB/only one/CD/one will/MD/will be/VB/be executed/NNP/executed. as/IN/as soon/RB/soon as/IN/as one/CD/one is/VBZ/is executed/VBN/executed /,/, the/DT/the function/NN/function terminates/VBZ/terminates without/IN/without executing/VBG/executing any/DT/any subsequent/NN/subsequent statements/NNP/statements. code/NN/code that/WDT/that appears/VBZ/appears after/IN/after a/DT/a return/NN/return statement/NN/statement /,/, or/CC/or any/DT/any other/JJ/other place/NN/place the/DT/the flow/NN/flow of/IN/of execution/NN/execution can/MD/can never/RB/never reach/VB/reach /,/, is/VBZ/is called/VBN/called dead/JJ/dead code/NNP/code. in/IN/in a/DT/a fruitful/JJ/fruitful function/NN/function /,/, it/PRP/it is/VBZ/is a/DT/a good/JJ/good idea/NN/idea to/TO/to ensure/VB/ensure that/IN/that every/DT/every possible/JJ/possible path/NN/path through/IN/through the/DT/the program/NN/program hits/NNS/hits a/DT/a return/NN/return statement/NNP/statement. for/IN/for example/NN/example /:/: def/NN/def absolutevalue/NN/absolutevalue /:/( x/NN/x /:/) /:/: if/IN/if x/NN/x </:/< 0/-NONE-/0 /:/: return/NN/return -x/NN/-x elif/IN/elif x/NN/x >/:/> 0/-NONE-/0 /:/: return/NN/return x/NN/x this/DT/this program/NN/program is/VBZ/is not/RB/not correct/JJ/correct because/IN/because if/IN/if x/NN/x happens/NNS/happens to/TO/to be/VB/be 0/-NONE-/0 /,/, neither/DT/neither condition/NN/condition is/VBZ/is true/JJ/true /,/, and/CC/and the/DT/the function/NN/function ends/VBZ/ends without/IN/without hitting/VBG/hitting a/DT/a return/NN/return statement/NNP/statement. in/IN/in this/DT/this case/NN/case /,/, the/DT/the return/NN/return value/NN/value is/VBZ/is a/DT/a special/JJ/special value/NN/value called/VBN/called none/NN/none /:/: >/:/> >/:/> >/:/> print/NN/print absolutevalue/NN/absolutevalue /:/( 0/-NONE-/0 /:/) none/NN/none as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a compare/NN/compare function/NN/function that/WDT/that returns/VBZ/returns 1/CD/1 if/IN/if x/NN/x >/:/> y/NN/y /,/, 0/-NONE-/0 if/IN/if x/NN/x =/:/= =/:/= y/NN/y /,/, and/CC/and -1/-NONE-/-1 if/IN/if x/NN/x </:/< y/NNP/y. 5.2/CD/5.2 program/NN/program development/NN/development at/IN/at this/DT/this point/NN/point /,/, you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to look/VB/look at/IN/at complete/JJ/complete functions/NNS/functions and/CC/and tell/NN/tell what/WP/what they/PRP/they do/VBP/do. also/RB/also /,/, if/IN/if you/PRP/you have/VBP/have been/VBN/been doing/VBG/doing the/DT/the exercises/NNS/exercises /,/, you/PRP/you have/VBP/have written/VBN/written some/DT/some small/JJ/small functions/NNP/functions. as/IN/as you/PRP/you write/VBP/write larger/JJR/larger functions/NNS/functions /,/, you/PRP/you might/MD/might start/VB/start to/TO/to have/VB/have more/JJR/more difficulty/NN/difficulty /,/, especially/RB/especially with/IN/with runtime/JJ/runtime and/CC/and semantic/JJ/semantic errors/NNP/errors. 5.2/CD/5.2 program/NN/program development/NN/development 49/CD/49 to/TO/to deal/VB/deal with/IN/with increasingly/RB/increasingly complex/JJ/complex programs/NNS/programs /,/, we/PRP/we are/VBP/are going/VBG/going to/TO/to suggest/VB/suggest a/DT/a technique/NN/technique called/VBN/called incremental/JJ/incremental development/NNP/development. the/DT/the goal/NN/goal of/IN/of incremental/JJ/incremental development/NN/development is/VBZ/is to/TO/to avoid/VB/avoid long/JJ/long debugging/NN/debugging sessions/NNS/sessions by/IN/by adding/VBG/adding and/CC/and testing/NN/testing only/RB/only a/DT/a small/JJ/small amount/NN/amount of/IN/of code/NN/code at/IN/at a/DT/a time/NNP/time. as/IN/as an/DT/an example/NN/example /,/, suppose/NN/suppose you/PRP/you want/VBP/want to/TO/to find/VB/find the/DT/the distance/NN/distance between/IN/between two/CD/two points/NNS/points /,/, given/VBN/given by/IN/by the/DT/the coordinates/NNS/coordinates /:/( x1/NNP/x1 /,/, y1/NNP/y1 /NNP/) and/CC/and /NNP/( x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) /./. by/IN/by the/DT/the pythagorean/JJ/pythagorean theorem/NN/theorem /,/, the/DT/the distance/NN/distance is/VBZ/is /:/: distance/NN/distance =/:/= p/NN/p /:/( x2/NNP/x2 x1/NNP/x1 /NNP/) 2/CD/2 +/CD/+ /CD/( y2/NNP/y2 y1/NNP/y1 /NNP/) 2/CD/2 the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to consider/VB/consider what/WP/what a/DT/a distance/NN/distance function/NN/function should/MD/should look/VB/look like/IN/like in/IN/in python/NNP/python. in/IN/in other/JJ/other words/NNS/words /,/, what/WP/what are/VBP/are the/DT/the inputs/NNS/inputs /:/( parameters/NNS/parameters /VBP/) and/CC/and what/WP/what is/VBZ/is the/DT/the output/NN/output /:/( return/NN/return value/NN/value /:/) in/IN/in this/DT/this case/NN/case /,/, the/DT/the two/CD/two points/NNS/points are/VBP/are the/DT/the inputs/NNS/inputs /,/, which/WDT/which we/PRP/we can/MD/can represent/VB/represent using/VBG/using four/CD/four parameters/NNP/parameters. the/DT/the return/NN/return value/NN/value is/VBZ/is the/DT/the distance/NN/distance /,/, which/WDT/which is/VBZ/is a/DT/a floating-point/JJ/floating-point value/NNP/value. already/RB/already we/PRP/we can/MD/can write/VB/write an/DT/an outline/NN/outline of/IN/of the/DT/the function/NN/function /:/: def/NN/def distance/NN/distance /:/( x1/NNP/x1 /,/, y1/NNP/y1 /,/, x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) /:/: return/NN/return 0.0/CD/0.0 obviously/RB/obviously /,/, this/DT/this version/NN/version of/IN/of the/DT/the function/NN/function doesn/NN/doesn t/NN/t compute/NN/compute distances/NNS/distances ;/:/; it/PRP/it always/RB/always returns/VBZ/returns zero/NNP/zero. but/CC/but it/PRP/it is/VBZ/is syntactically/RB/syntactically correct/JJ/correct /,/, and/CC/and it/PRP/it will/MD/will run/VB/run /,/, which/WDT/which means/VBZ/means that/DT/that we/PRP/we can/MD/can test/VB/test it/PRP/it before/IN/before we/PRP/we make/VBP/make it/PRP/it more/JJR/more complicated/NNP/complicated. to/TO/to test/NN/test the/DT/the new/JJ/new function/NN/function /,/, we/PRP/we call/VBP/call it/PRP/it with/IN/with sample/JJ/sample values/NNS/values /:/: >/:/> >/:/> >/:/> distance/NN/distance /:/( 1/CD/1 /,/, 2/CD/2 /,/, 4/CD/4 /,/, 6/CD/6 /:/) 0.0/CD/0.0 we/PRP/we chose/VBD/chose these/DT/these values/NNS/values so/RB/so that/IN/that the/DT/the horizontal/JJ/horizontal distance/NN/distance equals/NNS/equals 3/CD/3 and/CC/and the/DT/the vertical/JJ/vertical distance/NN/distance equals/NNS/equals 4/CD/4 ;/:/; that/DT/that way/NN/way /,/, the/DT/the result/NN/result is/VBZ/is 5/CD/5 /CD/( the/DT/the hypotenuse/NN/hypotenuse of/IN/of a/DT/a 3-4-5/CD/3-4-5 triangle/NN/triangle /:/) /./. when/WRB/when testing/NN/testing a/DT/a function/NN/function /,/, it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to know/VB/know the/DT/the right/NN/right answer/NNP/answer. at/IN/at this/DT/this point/NN/point we/PRP/we have/VBP/have confirmed/VBN/confirmed that/IN/that the/DT/the function/NN/function is/VBZ/is syntactically/RB/syntactically correct/JJ/correct /,/, and/CC/and we/PRP/we can/MD/can start/VB/start adding/VBG/adding lines/NNS/lines of/IN/of code/NNP/code. after/IN/after each/DT/each incremental/JJ/incremental change/NN/change /,/, we/PRP/we test/VBP/test the/DT/the function/NN/function again/NNP/again. if/IN/if an/DT/an error/NN/error occurs/VBZ/occurs at/IN/at any/DT/any point/NN/point /,/, we/PRP/we know/VBP/know where/WRB/where it/PRP/it must/MD/must be/VB/be in/IN/in the/DT/the last/JJ/last line/NN/line we/PRP/we added/NNP/added. a/DT/a logical/JJ/logical first/JJ/first step/NN/step in/IN/in the/DT/the computation/NN/computation is/VBZ/is to/TO/to find/VB/find the/DT/the differences/NNS/differences x2/NNP/x2 x1/NNP/x1 and/CC/and y2/NNP/y2 y1/NNP/y1. we/PRP/we will/MD/will store/VB/store those/DT/those values/NNS/values in/IN/in temporary/JJ/temporary variables/NNS/variables named/VBD/named dx/NN/dx and/CC/and dy/NN/dy and/CC/and print/VBP/print them/NNP/them. 50/CD/50 fruitful/JJ/fruitful functions/NNS/functions def/IN/def distance/NN/distance /:/( x1/NNP/x1 /,/, y1/NNP/y1 /,/, x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) /:/: dx/NN/dx =/:/= x2/NNP/x2 /:/- x1/NNP/x1 dy/NN/dy =/:/= y2/NNP/y2 /:/- y1/NNP/y1 print/NN/print dx/NN/dx is/VBZ/is /,/, dx/NN/dx print/NN/print dy/NN/dy is/VBZ/is /,/, dy/RB/dy return/VBP/return 0.0/CD/0.0 if/IN/if the/DT/the function/NN/function is/VBZ/is working/VBG/working /,/, the/DT/the outputs/NNS/outputs should/MD/should be/VB/be 3/CD/3 and/CC/and 4/CD/4. if/IN/if so/RB/so /,/, we/PRP/we know/VBP/know that/IN/that the/DT/the function/NN/function is/VBZ/is getting/VBG/getting the/DT/the right/NN/right arguments/NNS/arguments and/CC/and performing/VBG/performing the/DT/the first/JJ/first computation/NN/computation correctly/NNP/correctly. if/IN/if not/RB/not /,/, there/EX/there are/VBP/are only/RB/only a/DT/a few/JJ/few lines/NNS/lines to/TO/to check/NNP/check. next/JJ/next we/PRP/we compute/VBP/compute the/DT/the sum/NN/sum of/IN/of squares/NNS/squares of/IN/of dx/NN/dx and/CC/and dy/NN/dy /:/: def/NN/def distance/NN/distance /:/( x1/NNP/x1 /,/, y1/NNP/y1 /,/, x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) /:/: dx/NN/dx =/:/= x2/NNP/x2 /:/- x1/NNP/x1 dy/NN/dy =/:/= y2/NNP/y2 /:/- y1/NNP/y1 dsquared/VBD/dsquared =/NNP/= dx/NN/dx 2/CD/2 +/CD/+ dy/NN/dy 2/CD/2 print/NN/print dsquared/VBD/dsquared is/VBZ/is /:/: /,/, dsquared/VBD/dsquared return/NN/return 0.0/CD/0.0 notice/NN/notice that/WDT/that we/PRP/we removed/VBD/removed the/DT/the print/NN/print statements/NNS/statements we/PRP/we wrote/VBD/wrote in/IN/in the/DT/the previous/JJ/previous step/NNP/step. code/NN/code like/IN/like that/DT/that is/VBZ/is called/VBN/called scaffolding/VBG/scaffolding because/IN/because it/PRP/it is/VBZ/is helpful/JJ/helpful for/IN/for building/NN/building the/DT/the program/NN/program but/CC/but is/VBZ/is not/RB/not part/NN/part of/IN/of the/DT/the final/JJ/final product/NNP/product. again/RB/again /,/, we/PRP/we would/MD/would run/VB/run the/DT/the program/NN/program at/IN/at this/DT/this stage/NN/stage and/CC/and check/NN/check the/DT/the output/NN/output /:/( which/WDT/which should/MD/should be/VB/be 25/CD/25 /CD/) /./. finally/RB/finally /,/, if/IN/if we/PRP/we have/VBP/have imported/VBN/imported the/DT/the math/NN/math module/NN/module /,/, we/PRP/we can/MD/can use/VB/use the/DT/the sqrt/NN/sqrt function/NN/function to/TO/to compute/VB/compute and/CC/and return/VB/return the/DT/the result/NN/result /:/: def/NN/def distance/NN/distance /:/( x1/NNP/x1 /,/, y1/NNP/y1 /,/, x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) /:/: dx/NN/dx =/:/= x2/NNP/x2 /:/- x1/NNP/x1 dy/NN/dy =/:/= y2/NNP/y2 /:/- y1/NNP/y1 dsquared/VBD/dsquared =/NNP/= dx/NN/dx 2/CD/2 +/CD/+ dy/NN/dy 2/CD/2 result/NN/result =/:/= math.sqrt/NN/math.sqrt /:/( dsquared/VBN/dsquared /-NONE-/) return/NN/return result/NN/result if/IN/if that/DT/that works/VBZ/works correctly/RB/correctly /,/, you/PRP/you are/VBP/are done/NNP/done. otherwise/RB/otherwise /,/, you/PRP/you might/MD/might want/VB/want to/TO/to print/VB/print the/DT/the value/NN/value of/IN/of result/NN/result before/IN/before the/DT/the return/NN/return statement/NNP/statement. when/WRB/when you/PRP/you start/VBP/start out/RP/out /,/, you/PRP/you should/MD/should add/VB/add only/RB/only a/DT/a line/NN/line or/CC/or two/CD/two of/IN/of code/NN/code at/IN/at a/DT/a time/NNP/time. as/IN/as you/PRP/you gain/VBP/gain more/JJR/more experience/NN/experience /,/, you/PRP/you might/MD/might find/VB/find yourself/PRP/yourself writing/VBG/writing and/CC/and debugging/VBG/debugging bigger/JJR/bigger chunks/NNP/chunks. either/CC/either way/NN/way /,/, the/DT/the incremental/JJ/incremental development/NN/development process/NN/process can/MD/can save/VB/save you/PRP/you a/DT/a lot/NN/lot of/IN/of debugging/NN/debugging time/NNP/time. the/DT/the key/JJ/key aspects/NNS/aspects of/IN/of the/DT/the process/NN/process are/VBP/are /:/: 5.3/CD/5.3 composition/NN/composition 51/CD/51 1/CD/1. start/NN/start with/IN/with a/DT/a working/VBG/working program/NN/program and/CC/and make/VB/make small/JJ/small incremental/JJ/incremental changes/NNP/changes. at/IN/at any/DT/any point/NN/point /,/, if/IN/if there/EX/there is/VBZ/is an/DT/an error/NN/error /,/, you/PRP/you will/MD/will know/VB/know exactly/RB/exactly where/WRB/where it/PRP/it is/NNP/is. 2/CD/2. use/NN/use temporary/NN/temporary variables/NNS/variables to/TO/to hold/VB/hold intermediate/JJ/intermediate values/NNS/values so/IN/so you/PRP/you can/MD/can output/VB/output and/CC/and check/VB/check them/NNP/them. 3/CD/3. once/RB/once the/DT/the program/NN/program is/VBZ/is working/VBG/working /,/, you/PRP/you might/MD/might want/VB/want to/TO/to remove/VB/remove some/DT/some of/IN/of the/DT/the scaffolding/NN/scaffolding or/CC/or consolidate/VB/consolidate multiple/JJ/multiple statements/NNS/statements into/IN/into compound/NN/compound expressions/NNS/expressions /,/, but/CC/but only/RB/only if/IN/if it/PRP/it does/VBZ/does not/RB/not make/VB/make the/DT/the program/NN/program difficult/NN/difficult to/TO/to read/NNP/read. as/IN/as an/DT/an exercise/NN/exercise /,/, use/VBP/use incremental/JJ/incremental development/NN/development to/TO/to write/VB/write a/DT/a function/NN/function called/VBN/called hypotenuse/NN/hypotenuse that/IN/that returns/NNS/returns the/DT/the length/NN/length of/IN/of the/DT/the hypotenuse/NN/hypotenuse of/IN/of a/DT/a right/NN/right triangle/NN/triangle given/VBN/given the/DT/the lengths/NNS/lengths of/IN/of the/DT/the two/CD/two legs/NNS/legs as/IN/as arguments/NNP/arguments. record/NN/record each/DT/each stage/NN/stage of/IN/of the/DT/the incremental/JJ/incremental development/NN/development process/NN/process as/IN/as you/PRP/you go/NNP/go. 5.3/CD/5.3 composition/NN/composition as/IN/as you/PRP/you should/MD/should expect/VB/expect by/IN/by now/RB/now /,/, you/PRP/you can/MD/can call/VB/call one/CD/one function/NN/function from/IN/from within/IN/within another/NNP/another. this/DT/this ability/NN/ability is/VBZ/is called/VBN/called composition/NNP/composition. as/IN/as an/DT/an example/NN/example /,/, we/PRP/we ll/VBP/ll write/JJ/write a/DT/a function/NN/function that/WDT/that takes/VBZ/takes two/CD/two points/NNS/points /,/, the/DT/the center/NN/center of/IN/of the/DT/the circle/NN/circle and/CC/and a/DT/a point/NN/point on/IN/on the/DT/the perimeter/NN/perimeter /,/, and/CC/and computes/VBZ/computes the/DT/the area/NN/area of/IN/of the/DT/the circle/NNP/circle. assume/NN/assume that/WDT/that the/DT/the center/NN/center point/NN/point is/VBZ/is stored/VBN/stored in/IN/in the/DT/the variables/NNS/variables xc/VBP/xc and/CC/and yc/NN/yc /,/, and/CC/and the/DT/the perimeter/NN/perimeter point/NN/point is/VBZ/is in/IN/in xp/NN/xp and/CC/and yp/NNP/yp. the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to find/VB/find the/DT/the radius/NN/radius of/IN/of the/DT/the circle/NN/circle /,/, which/WDT/which is/VBZ/is the/DT/the distance/NN/distance between/IN/between the/DT/the two/CD/two points/NNP/points. fortunately/RB/fortunately /,/, there/EX/there is/VBZ/is a/DT/a function/NN/function /,/, distance/NN/distance /,/, that/IN/that does/VBZ/does that/IN/that /:/: radius/NNS/radius =/VBP/= distance/NN/distance /:/( xc/NN/xc /,/, yc/NN/yc /,/, xp/NN/xp /,/, yp/NN/yp /:/) the/DT/the second/JJ/second step/NN/step is/VBZ/is to/TO/to find/VB/find the/DT/the area/NN/area of/IN/of a/DT/a circle/NN/circle with/IN/with that/DT/that radius/NN/radius and/CC/and return/NN/return it/PRP/it /:/: result/NN/result =/:/= area/NN/area /:/( radius/NN/radius /:/) return/NN/return result/NN/result wrapping/VBG/wrapping that/IN/that up/IN/up in/IN/in a/DT/a function/NN/function /,/, we/PRP/we get/VBP/get /:/: def/NN/def area2/NNP/area2 /NNP/( xc/NN/xc /,/, yc/NN/yc /,/, xp/NN/xp /,/, yp/NN/yp /:/) /:/: radius/NN/radius =/:/= distance/NN/distance /:/( xc/NN/xc /,/, yc/NN/yc /,/, xp/NN/xp /,/, yp/NN/yp /:/) result/NN/result =/:/= area/NN/area /:/( radius/NN/radius /:/) return/NN/return result/NN/result we/PRP/we called/VBD/called this/DT/this function/NN/function area2/NNP/area2 to/TO/to distinguish/VB/distinguish it/PRP/it from/IN/from the/DT/the area/NN/area function/NN/function defined/VBD/defined earlier/NNP/earlier. there/RB/there can/MD/can only/RB/only be/VB/be one/CD/one function/NN/function with/IN/with a/DT/a given/VBN/given name/NN/name within/IN/within a/DT/a given/VBN/given module/NNP/module. 52/CD/52 fruitful/JJ/fruitful functions/NNS/functions the/DT/the temporary/JJ/temporary variables/NNS/variables radius/VBZ/radius and/CC/and result/NN/result are/VBP/are useful/JJ/useful for/IN/for development/NN/development and/CC/and debugging/VBG/debugging /,/, but/CC/but once/RB/once the/DT/the program/NN/program is/VBZ/is working/VBG/working /,/, we/PRP/we can/MD/can make/VB/make it/PRP/it more/JJR/more concise/NN/concise by/IN/by composing/NN/composing the/DT/the function/NN/function calls/VBZ/calls /:/: def/NN/def area2/NNP/area2 /NNP/( xc/NN/xc /,/, yc/NN/yc /,/, xp/NN/xp /,/, yp/NN/yp /:/) /:/: return/NN/return area/NN/area /:/( distance/NN/distance /:/( xc/NN/xc /,/, yc/NN/yc /,/, xp/NN/xp /,/, yp/NN/yp /:/) /:/) as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function slope/NN/slope /:/( x1/NNP/x1 /,/, y1/NNP/y1 /,/, x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) that/IN/that returns/NNS/returns the/DT/the slope/NN/slope of/IN/of the/DT/the line/NN/line through/IN/through the/DT/the points/NNS/points /:/( x1/NNP/x1 /,/, y1/NNP/y1 /NNP/) and/CC/and /NNP/( x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) /./. then/RB/then use/VB/use this/DT/this function/NN/function in/IN/in a/DT/a function/NN/function called/VBN/called intercept/NN/intercept /:/( x1/NNP/x1 /,/, y1/NNP/y1 /,/, x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) that/IN/that returns/NNS/returns the/DT/the y-intercept/JJ/y-intercept of/IN/of the/DT/the line/NN/line through/IN/through the/DT/the points/NNS/points /:/( x1/NNP/x1 /,/, y1/NNP/y1 /NNP/) and/CC/and /NNP/( x2/NNP/x2 /,/, y2/NNP/y2 /NNP/) /./. 5.4/CD/5.4 boolean/JJ/boolean functions/NNS/functions functions/NNS/functions can/MD/can return/VB/return boolean/JJ/boolean values/NNS/values /,/, which/WDT/which is/VBZ/is often/RB/often convenient/JJ/convenient for/IN/for hiding/NN/hiding complicated/VBD/complicated tests/NNS/tests inside/VBP/inside functions/NNP/functions. for/IN/for example/NN/example /:/: def/NN/def isdivisible/JJ/isdivisible /NN/( x/NN/x /,/, y/NN/y /:/) /:/: if/IN/if x/NN/x %/NN/% y/NN/y =/:/= =/:/= 0/-NONE-/0 /:/: return/NN/return true/NN/true else/RB/else /:/: return/NN/return false/NN/false the/DT/the name/NN/name of/IN/of this/DT/this function/NN/function is/VBZ/is isdivisible/NNP/isdivisible. it/PRP/it is/VBZ/is common/JJ/common to/TO/to give/VB/give boolean/JJ/boolean functions/NNS/functions names/VBZ/names that/IN/that sound/NN/sound like/IN/like yes/no/NNP/yes/no questions/NNP/questions. isdivisible/JJ/isdivisible returns/NNS/returns either/CC/either true/JJ/true or/CC/or false/NN/false to/TO/to indicate/VB/indicate whether/IN/whether the/DT/the x/NN/x is/VBZ/is or/CC/or is/VBZ/is not/RB/not divisible/JJ/divisible by/IN/by y/NNP/y. we/PRP/we can/MD/can make/VB/make the/DT/the function/NN/function more/JJR/more concise/NN/concise by/IN/by taking/NN/taking advantage/NN/advantage of/IN/of the/DT/the fact/NN/fact that/IN/that the/DT/the condition/NN/condition of/IN/of the/DT/the if/IN/if statement/NN/statement is/VBZ/is itself/PRP/itself a/DT/a boolean/JJ/boolean expression/NNP/expression. we/PRP/we can/MD/can return/VB/return it/PRP/it directly/RB/directly /,/, avoiding/VBG/avoiding the/DT/the if/IN/if statement/NN/statement altogether/RB/altogether /:/: def/NN/def isdivisible/JJ/isdivisible /NN/( x/NN/x /,/, y/NN/y /:/) /:/: return/NN/return x/NN/x %/NN/% y/NN/y =/:/= =/:/= 0/-NONE-/0 this/DT/this session/NN/session shows/VBZ/shows the/DT/the new/JJ/new function/NN/function in/IN/in action/NN/action /:/: >/:/> >/:/> >/:/> isdivisible/JJ/isdivisible /NN/( 6/CD/6 /,/, 4/CD/4 /:/) false/NN/false >/:/> >/:/> >/:/> isdivisible/JJ/isdivisible /NN/( 6/CD/6 /,/, 3/CD/3 /:/) true/JJ/true boolean/NN/boolean functions/NNS/functions are/VBP/are often/RB/often used/VBN/used in/IN/in conditional/JJ/conditional statements/NNS/statements /:/: 5.5/CD/5.5 more/JJR/more recursion/NN/recursion 53/CD/53 if/IN/if isdivisible/JJ/isdivisible /NN/( x/NN/x /,/, y/NN/y /:/) /:/: print/NN/print x/NN/x is/VBZ/is divisible/JJ/divisible by/IN/by y/NN/y else/RB/else /:/: print/JJ/print x/NN/x is/VBZ/is not/RB/not divisible/JJ/divisible by/IN/by y/NN/y it/PRP/it might/MD/might be/VB/be tempting/VBG/tempting to/TO/to write/VB/write something/NN/something like/IN/like /:/: if/IN/if isdivisible/JJ/isdivisible /NN/( x/NN/x /,/, y/NN/y /:/) =/:/= =/:/= true/JJ/true /:/: but/CC/but the/DT/the extra/JJ/extra comparison/NN/comparison is/VBZ/is unnecessary/NNP/unnecessary. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function isbetween/VBN/isbetween /-NONE-/( x/NN/x /,/, y/NN/y /,/, z/NN/z /:/) that/IN/that returns/NNS/returns true/VBP/true if/IN/if y/NN/y x/NN/x z/NN/z or/CC/or false/VB/false otherwise/NNP/otherwise. 5.5/CD/5.5 more/JJR/more recursion/NN/recursion so/IN/so far/RB/far /,/, you/PRP/you have/VBP/have only/RB/only learned/VBN/learned a/DT/a small/JJ/small subset/NN/subset of/IN/of python/NN/python /,/, but/CC/but you/PRP/you might/MD/might be/VB/be interested/JJ/interested to/TO/to know/VB/know that/IN/that this/DT/this subset/NN/subset is/VBZ/is a/DT/a complete/JJ/complete programming/NN/programming language/NN/language /,/, which/WDT/which means/VBZ/means that/DT/that anything/NN/anything that/IN/that can/MD/can be/VB/be computed/VBN/computed can/MD/can be/VB/be expressed/VBN/expressed in/IN/in this/DT/this language/NNP/language. any/DT/any program/NN/program ever/RB/ever written/VBN/written could/MD/could be/VB/be rewritten/VBN/rewritten using/VBG/using only/RB/only the/DT/the language/NN/language features/NNS/features you/PRP/you have/VBP/have learned/VBN/learned so/RB/so far/RB/far /:/( actually/RB/actually /,/, you/PRP/you would/MD/would need/VB/need a/DT/a few/JJ/few commands/NNS/commands to/TO/to control/NN/control devices/NNS/devices like/IN/like the/DT/the keyboard/NN/keyboard /,/, mouse/NN/mouse /,/, disks/VBZ/disks /,/, etc/NNP/etc. /,/, but/CC/but that/IN/that s/NNS/s all/DT/all /:/) /./. proving/VBG/proving that/IN/that claim/NN/claim is/VBZ/is a/DT/a nontrivial/JJ/nontrivial exercise/NN/exercise first/RB/first accomplished/VBD/accomplished by/IN/by alan/NN/alan turing/VBG/turing /,/, one/CD/one of/IN/of the/DT/the first/JJ/first computer/NN/computer scientists/NNS/scientists /:/( some/DT/some would/MD/would argue/VB/argue that/IN/that he/PRP/he was/VBD/was a/DT/a mathematician/JJ/mathematician /,/, but/CC/but a/DT/a lot/NN/lot of/IN/of early/JJ/early computer/NN/computer scientists/NNS/scientists started/VBD/started as/IN/as mathematicians/NNS/mathematicians /:/) /./. accordingly/RB/accordingly /,/, it/PRP/it is/VBZ/is known/VBN/known as/IN/as the/DT/the turing/NN/turing thesis/NNP/thesis. if/IN/if you/PRP/you take/VBP/take a/DT/a course/NN/course on/IN/on the/DT/the theory/NN/theory of/IN/of computation/NN/computation /,/, you/PRP/you will/MD/will have/VB/have a/DT/a chance/NN/chance to/TO/to see/VB/see the/DT/the proof/NNP/proof. to/TO/to give/VB/give you/PRP/you an/DT/an idea/NN/idea of/IN/of what/WP/what you/PRP/you can/MD/can do/VB/do with/IN/with the/DT/the tools/NNS/tools you/PRP/you have/VBP/have learned/VBN/learned so/RB/so far/RB/far /,/, we/PRP/we ll/VBP/ll evaluate/JJ/evaluate a/DT/a few/JJ/few recursively/RB/recursively defined/VBN/defined mathematical/JJ/mathematical functions/NNP/functions. a/DT/a recursive/JJ/recursive definition/NN/definition is/VBZ/is similar/JJ/similar to/TO/to a/DT/a circular/JJ/circular definition/NN/definition /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that the/DT/the definition/NN/definition contains/VBZ/contains a/DT/a reference/NN/reference to/TO/to the/DT/the thing/NN/thing being/VBG/being defined/NNP/defined. a/DT/a truly/RB/truly circular/JJ/circular definition/NN/definition is/VBZ/is not/RB/not very/RB/very useful/JJ/useful /:/: frabjuous/JJ/frabjuous /:/: an/DT/an adjective/JJ/adjective used/JJ/used to/TO/to describe/VB/describe something/NN/something that/WDT/that is/VBZ/is frabjuous/NNP/frabjuous. if/IN/if you/PRP/you saw/VBD/saw that/IN/that definition/NN/definition in/IN/in the/DT/the dictionary/JJ/dictionary /,/, you/PRP/you might/MD/might be/VB/be annoyed/NNP/annoyed. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, if/IN/if you/PRP/you looked/VBD/looked up/RP/up the/DT/the definition/NN/definition of/IN/of the/DT/the mathematical/JJ/mathematical function/NN/function factorial/JJ/factorial /,/, you/PRP/you might/MD/might get/VB/get something/NN/something like/IN/like this/DT/this /:/: 0/-NONE-/0 !/./! =/:/= 1/CD/1 n/NN/n !/./! =/:/= n/NN/n /:/( n/NN/n 1/CD/1 /CD/) !/./! this/DT/this definition/NN/definition says/VBZ/says that/IN/that the/DT/the factorial/JJ/factorial of/IN/of 0/-NONE-/0 is/VBZ/is 1/CD/1 /,/, and/CC/and the/DT/the factorial/JJ/factorial of/IN/of any/DT/any other/JJ/other value/NN/value /,/, n/NN/n /,/, is/VBZ/is n/VBN/n multiplied/VBN/multiplied by/IN/by the/DT/the factorial/JJ/factorial of/IN/of n/NN/n 1/CD/1. 54/CD/54 fruitful/JJ/fruitful functions/NNS/functions so/IN/so 3/CD/3 !/./! is/VBZ/is 3/CD/3 times/NNS/times 2/CD/2 !/./! /,/, which/WDT/which is/VBZ/is 2/CD/2 times/NNS/times 1/CD/1 !/./! /,/, which/WDT/which is/VBZ/is 1/CD/1 times/NNS/times 0/-NONE-/0 !/./! /./. putting/VBG/putting it/PRP/it all/DT/all together/RB/together /,/, 3/CD/3 !/./! equals/NNS/equals 3/CD/3 times/NNS/times 2/CD/2 times/NNS/times 1/CD/1 times/NNS/times 1/CD/1 /,/, which/WDT/which is/VBZ/is 6/CD/6. if/IN/if you/PRP/you can/MD/can write/VB/write a/DT/a recursive/JJ/recursive definition/NN/definition of/IN/of something/NN/something /,/, you/PRP/you can/MD/can usually/RB/usually write/VB/write a/DT/a python/NN/python program/NN/program to/TO/to evaluate/VB/evaluate it/NNP/it. the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to decide/VB/decide what/WP/what the/DT/the parameters/NNS/parameters are/VBP/are for/IN/for this/DT/this function/NNP/function. with/IN/with little/JJ/little effort/NN/effort /,/, you/PRP/you should/MD/should conclude/VB/conclude that/IN/that factorial/JJ/factorial has/VBZ/has a/DT/a single/JJ/single parameter/NN/parameter /:/: def/NN/def factorial/JJ/factorial /NN/( n/NN/n /:/) /:/: if/IN/if the/DT/the argument/NN/argument happens/VBZ/happens to/TO/to be/VB/be 0/-NONE-/0 /,/, all/DT/all we/PRP/we have/VBP/have to/TO/to do/VB/do is/VBZ/is return/VB/return 1/CD/1 /:/: def/JJ/def factorial/JJ/factorial /NN/( n/NN/n /:/) /:/: if/IN/if n/NN/n =/:/= =/:/= 0/-NONE-/0 /:/: return/NN/return 1/CD/1 otherwise/NN/otherwise /,/, and/CC/and this/DT/this is/VBZ/is the/DT/the interesting/JJ/interesting part/NN/part /,/, we/PRP/we have/VBP/have to/TO/to make/VB/make a/DT/a recursive/JJ/recursive call/NN/call to/TO/to find/VB/find the/DT/the factorial/JJ/factorial of/IN/of n/NN/n 1/CD/1 and/CC/and then/RB/then multiply/RB/multiply it/PRP/it by/IN/by n/NN/n /:/: def/NN/def factorial/JJ/factorial /NN/( n/NN/n /:/) /:/: if/IN/if n/NN/n =/:/= =/:/= 0/-NONE-/0 /:/: return/NN/return 1/CD/1 else/NN/else /:/: recurse/NN/recurse =/:/= factorial/JJ/factorial /NN/( n-1/-NONE-/n-1 /./) result/NN/result =/:/= n/NN/n recurse/NN/recurse return/NN/return result/NN/result the/DT/the flow/NN/flow of/IN/of execution/NN/execution for/IN/for this/DT/this program/NN/program is/VBZ/is similar/JJ/similar to/TO/to the/DT/the flow/NN/flow of/IN/of countdown/NN/countdown in/IN/in section/NN/section 4.9/CD/4.9. if/IN/if we/PRP/we call/VBP/call factorial/JJ/factorial with/IN/with the/DT/the value/NN/value 3/CD/3 /:/: since/IN/since 3/CD/3 is/VBZ/is not/RB/not 0/-NONE-/0 /,/, we/PRP/we take/VBP/take the/DT/the second/JJ/second branch/NN/branch and/CC/and calculate/VB/calculate the/DT/the factorial/JJ/factorial of/IN/of n-1/NNP/n-1... since/IN/since 2/CD/2 is/VBZ/is not/RB/not 0/-NONE-/0 /,/, we/PRP/we take/VBP/take the/DT/the second/JJ/second branch/NN/branch and/CC/and calculate/VB/calculate the/DT/the factorial/JJ/factorial of/IN/of n-1/NNP/n-1... since/IN/since 1/CD/1 is/VBZ/is not/RB/not 0/-NONE-/0 /,/, we/PRP/we take/VBP/take the/DT/the second/JJ/second branch/NN/branch and/CC/and calculate/VB/calculate the/DT/the factorial/JJ/factorial of/IN/of n-1/NNP/n-1... since/IN/since 0/-NONE-/0 is/VBZ/is 0/-NONE-/0 /,/, we/PRP/we take/VBP/take the/DT/the first/JJ/first branch/NN/branch and/CC/and return/NN/return 1/CD/1 without/IN/without making/VBG/making any/DT/any more/JJR/more recursive/JJ/recursive calls/NNP/calls. the/DT/the return/NN/return value/NN/value /:/( 1/CD/1 /CD/) is/VBZ/is multiplied/VBN/multiplied by/IN/by n/NN/n /,/, which/WDT/which is/VBZ/is 1/CD/1 /,/, and/CC/and the/DT/the result/NN/result is/VBZ/is returned/NNP/returned. the/DT/the return/NN/return value/NN/value /:/( 1/CD/1 /CD/) is/VBZ/is multiplied/VBN/multiplied by/IN/by n/NN/n /,/, which/WDT/which is/VBZ/is 2/CD/2 /,/, and/CC/and the/DT/the result/NN/result is/VBZ/is returned/NNP/returned. the/DT/the return/NN/return value/NN/value /:/( 2/CD/2 /CD/) is/VBZ/is multiplied/VBN/multiplied by/IN/by n/NN/n /,/, which/WDT/which is/VBZ/is 3/CD/3 /,/, and/CC/and the/DT/the result/NN/result /,/, 6/CD/6 /,/, becomes/VBZ/becomes the/DT/the return/NN/return value/NN/value of/IN/of the/DT/the function/NN/function call/NN/call that/WDT/that started/VBD/started the/DT/the whole/JJ/whole process/NNP/process. 5.6/CD/5.6 leap/NN/leap of/IN/of faith/NN/faith 55/CD/55 here/RB/here is/VBZ/is what/WP/what the/DT/the stack/NN/stack diagram/NN/diagram looks/NNS/looks like/IN/like for/IN/for this/DT/this sequence/NN/sequence of/IN/of function/NN/function calls/NNS/calls /:/: n/NN/n 3/CD/3 recurse/NN/recurse 2/CD/2 recurse/NN/recurse 1/CD/1 recurse/NN/recurse 1/CD/1 return/NN/return 1/CD/1 return/NN/return 2/CD/2 return/NN/return 6/CD/6 __main__/NNP/__main__ factorial/JJ/factorial n/NN/n 2/CD/2 n/NN/n 1/CD/1 n/NN/n 0/-NONE-/0 factorial/JJ/factorial factorial/JJ/factorial factorial/JJ/factorial 1/CD/1 1/CD/1 2/CD/2 6/CD/6 the/DT/the return/NN/return values/VBZ/values are/VBP/are shown/VBN/shown being/VBG/being passed/VBN/passed back/RP/back up/RP/up the/DT/the stack/NNP/stack. in/IN/in each/DT/each frame/NN/frame /,/, the/DT/the return/NN/return value/NN/value is/VBZ/is the/DT/the value/NN/value of/IN/of result/NN/result /,/, which/WDT/which is/VBZ/is the/DT/the product/NN/product of/IN/of n/NN/n and/CC/and recurse/NNP/recurse. notice/NN/notice that/WDT/that in/IN/in the/DT/the last/JJ/last frame/NN/frame /,/, the/DT/the local/JJ/local variables/NNS/variables recurse/VBP/recurse and/CC/and result/NN/result do/VB/do not/RB/not exist/VB/exist /,/, because/IN/because the/DT/the branch/NN/branch that/IN/that creates/NNS/creates them/PRP/them did/VBD/did not/RB/not execute/NNP/execute. 5.6/CD/5.6 leap/NN/leap of/IN/of faith/NN/faith following/VBG/following the/DT/the flow/NN/flow of/IN/of execution/NN/execution is/VBZ/is one/CD/one way/NN/way to/TO/to read/VB/read programs/NNS/programs /,/, but/CC/but it/PRP/it can/MD/can quickly/RB/quickly become/VB/become labyrinthine/NNP/labyrinthine. an/DT/an alternative/NN/alternative is/VBZ/is what/WP/what we/PRP/we call/VBP/call the/DT/the leap/NN/leap of/IN/of faith/NNP/faith. when/WRB/when you/PRP/you come/VBP/come to/TO/to a/DT/a function/NN/function call/NN/call /,/, instead/RB/instead of/IN/of following/VBG/following the/DT/the flow/NN/flow of/IN/of execution/NN/execution /,/, you/PRP/you assume/VBP/assume that/IN/that the/DT/the function/NN/function works/VBZ/works correctly/RB/correctly and/CC/and returns/NNS/returns the/DT/the appropriate/JJ/appropriate value/NNP/value. in/IN/in fact/NN/fact /,/, you/PRP/you are/VBP/are already/RB/already practicing/VBG/practicing this/DT/this leap/NN/leap of/IN/of faith/NN/faith when/WRB/when you/PRP/you use/VBP/use built-in/JJ/built-in functions/NNP/functions. when/WRB/when you/PRP/you call/VBP/call math.cos/NNS/math.cos or/CC/or math.exp/JJ/math.exp /,/, you/PRP/you don/VBP/don t/NN/t examine/NN/examine the/DT/the implementations/NNS/implementations of/IN/of those/DT/those functions/NNP/functions. you/PRP/you just/RB/just assume/VBP/assume that/IN/that they/PRP/they work/VBP/work because/IN/because the/DT/the people/NNS/people who/WP/who wrote/VBD/wrote the/DT/the built-in/JJ/built-in functions/NNS/functions were/VBD/were good/JJ/good programmers/NNP/programmers. the/DT/the same/JJ/same is/VBZ/is true/JJ/true when/WRB/when you/PRP/you call/VBP/call one/CD/one of/IN/of your/PRP$/your own/JJ/own functions/NNP/functions. for/IN/for example/NN/example /,/, in/IN/in section/NN/section 5.4/CD/5.4 /,/, we/PRP/we wrote/VBD/wrote a/DT/a function/NN/function called/VBN/called isdivisible/JJ/isdivisible that/IN/that determines/NNS/determines whether/IN/whether one/CD/one number/NN/number is/VBZ/is divisible/JJ/divisible by/IN/by another/NNP/another. once/RB/once we/PRP/we have/VBP/have convinced/VBN/convinced ourselves/NNS/ourselves that/IN/that this/DT/this function/NN/function is/VBZ/is correct/JJ/correct by/IN/by testing/NN/testing and/CC/and examining/VBG/examining the/DT/the code/NN/code we/PRP/we can/MD/can use/VB/use the/DT/the function/NN/function without/IN/without looking/VBG/looking at/IN/at the/DT/the code/NN/code again/NNP/again. the/DT/the same/JJ/same is/VBZ/is true/JJ/true of/IN/of recursive/JJ/recursive programs/NNP/programs. when/WRB/when you/PRP/you get/VBP/get to/TO/to the/DT/the recursive/JJ/recursive call/NN/call /,/, instead/RB/instead of/IN/of following/VBG/following the/DT/the flow/NN/flow of/IN/of execution/NN/execution /,/, you/PRP/you should/MD/should assume/VB/assume that/IN/that the/DT/the recursive/JJ/recursive 56/CD/56 fruitful/JJ/fruitful functions/NNS/functions call/VBP/call works/NNS/works /:/( yields/NNS/yields the/DT/the correct/NN/correct result/NN/result /:/) and/CC/and then/RB/then ask/VB/ask yourself/PRP/yourself /,/, assuming/VBG/assuming that/IN/that i/PRP/i can/MD/can find/VB/find the/DT/the factorial/JJ/factorial of/IN/of n/NN/n 1/CD/1 /,/, can/MD/can i/PRP/i compute/VB/compute the/DT/the factorial/JJ/factorial of/IN/of n/NN/n in/IN/in this/DT/this case/NN/case /,/, it/PRP/it is/VBZ/is clear/JJ/clear that/IN/that you/PRP/you can/MD/can /,/, by/IN/by multiplying/NN/multiplying by/IN/by n/NNP/n. of/IN/of course/NN/course /,/, it/PRP/it s/VBZ/s a/DT/a bit/NN/bit strange/NN/strange to/TO/to assume/VB/assume that/IN/that the/DT/the function/NN/function works/VBZ/works correctly/RB/correctly when/WRB/when you/PRP/you haven/VBP/haven t/NN/t finished/VBN/finished writing/VBG/writing it/PRP/it /,/, but/CC/but that/IN/that s/NNS/s why/WRB/why it/PRP/it s/VBZ/s called/VBN/called a/DT/a leap/NN/leap of/IN/of faith/NN/faith !/./! 5.7/CD/5.7 one/CD/one more/JJR/more example/NN/example in/IN/in the/DT/the previous/JJ/previous example/NN/example /,/, we/PRP/we used/VBD/used temporary/JJ/temporary variables/NNS/variables to/TO/to spell/VB/spell out/RP/out the/DT/the steps/NNS/steps and/CC/and to/TO/to make/VB/make the/DT/the code/NN/code easier/NN/easier to/TO/to debug/VB/debug /,/, but/CC/but we/PRP/we could/MD/could have/VB/have saved/VBN/saved a/DT/a few/JJ/few lines/NNS/lines /:/: def/NN/def factorial/JJ/factorial /NN/( n/NN/n /:/) /:/: if/IN/if n/NN/n =/:/= =/:/= 0/-NONE-/0 /:/: return/NN/return 1/CD/1 else/NN/else /:/: return/NN/return n/NN/n factorial/NN/factorial /:/( n-1/-NONE-/n-1 /:/) from/IN/from now/RB/now on/IN/on /,/, we/PRP/we will/MD/will tend/VB/tend to/TO/to use/VB/use the/DT/the more/RBR/more concise/JJ/concise form/NN/form /,/, but/CC/but we/PRP/we recommend/VBP/recommend that/IN/that you/PRP/you use/VBP/use the/DT/the more/RBR/more explicit/JJ/explicit version/NN/version while/IN/while you/PRP/you are/VBP/are developing/VBG/developing code/NNP/code. when/WRB/when you/PRP/you have/VBP/have it/PRP/it working/VBG/working /,/, you/PRP/you can/MD/can tighten/VB/tighten it/PRP/it up/RP/up if/IN/if you/PRP/you are/VBP/are feeling/VBG/feeling inspired/NNP/inspired. after/IN/after factorial/JJ/factorial /,/, the/DT/the most/RBS/most common/JJ/common example/NN/example of/IN/of a/DT/a recursively/RB/recursively defined/VBN/defined mathematical/JJ/mathematical function/NN/function is/VBZ/is fibonacci/NN/fibonacci /,/, which/WDT/which has/VBZ/has the/DT/the following/VBG/following definition/NN/definition /:/: fibonacci/NN/fibonacci /:/( 0/-NONE-/0 /:/) =/:/= 1/CD/1 fibonacci/NN/fibonacci /:/( 1/CD/1 /CD/) =/CD/= 1/CD/1 fibonacci/NN/fibonacci /:/( n/NN/n /:/) =/:/= fibonacci/NN/fibonacci /:/( n/NN/n 1/CD/1 /CD/) +/CD/+ fibonacci/NN/fibonacci /:/( n/NN/n 2/CD/2 /CD/) ;/:/; translated/VBN/translated into/IN/into python/NN/python /,/, it/PRP/it looks/VBZ/looks like/IN/like this/DT/this /:/: def/NN/def fibonacci/NN/fibonacci /:/( n/NN/n /:/) /:/: if/IN/if n/NN/n =/:/= =/:/= 0/-NONE-/0 or/CC/or n/VB/n =/CD/= =/CD/= 1/CD/1 /:/: return/NN/return 1/CD/1 else/NN/else /:/: return/NN/return fibonacci/NN/fibonacci /:/( n-1/-NONE-/n-1 /:/) +/:/+ fibonacci/NN/fibonacci /:/( n-2/-NONE-/n-2 /:/) if/IN/if you/PRP/you try/VBP/try to/TO/to follow/VB/follow the/DT/the flow/NN/flow of/IN/of execution/NN/execution here/RB/here /,/, even/RB/even for/IN/for fairly/RB/fairly small/JJ/small values/NNS/values of/IN/of n/NN/n /,/, your/PRP$/your head/NN/head explodes/NNP/explodes. but/CC/but according/VBG/according to/TO/to the/DT/the leap/NN/leap of/IN/of faith/NN/faith /,/, if/IN/if you/PRP/you assume/VBP/assume that/IN/that the/DT/the two/CD/two recursive/JJ/recursive calls/NNS/calls work/NN/work correctly/RB/correctly /,/, then/RB/then it/PRP/it is/VBZ/is clear/JJ/clear that/IN/that you/PRP/you get/VBP/get the/DT/the right/NN/right result/NN/result by/IN/by adding/NN/adding them/PRP/them together/NNP/together. 5.8/CD/5.8 checking/VBG/checking types/NNS/types 57/CD/57 5.8/CD/5.8 checking/NN/checking types/NNS/types what/WP/what happens/NNS/happens if/IN/if we/PRP/we call/VBP/call factorial/JJ/factorial and/CC/and give/JJ/give it/PRP/it 1.5/CD/1.5 as/IN/as an/DT/an argument/NN/argument >/:/> >/:/> >/:/> factorial/JJ/factorial /NN/( 1.5/CD/1.5 /CD/) runtimeerror/NN/runtimeerror /:/: maximum/NN/maximum recursion/NN/recursion depth/NN/depth exceeded/VBD/exceeded it/PRP/it looks/VBZ/looks like/IN/like an/DT/an infinite/JJ/infinite recursion/NNP/recursion. but/CC/but how/WRB/how can/MD/can that/DT/that be/VB/be there/RB/there is/VBZ/is a/DT/a base/NN/base case/NN/case when/WRB/when n/NN/n =/:/= =/:/= 0/CD/0. the/DT/the problem/NN/problem is/VBZ/is that/IN/that the/DT/the values/NNS/values of/IN/of n/NN/n miss/NN/miss the/DT/the base/NN/base case/NNP/case. in/IN/in the/DT/the first/JJ/first recursive/JJ/recursive call/NN/call /,/, the/DT/the value/NN/value of/IN/of n/NN/n is/VBZ/is 0.5/CD/0.5. in/IN/in the/DT/the next/JJ/next /,/, it/PRP/it is/VBZ/is -0.5/NNP/-0.5. from/IN/from there/EX/there /,/, it/PRP/it gets/VBZ/gets smaller/JJR/smaller and/CC/and smaller/JJR/smaller /,/, but/CC/but it/PRP/it will/MD/will never/RB/never be/VB/be 0/CD/0. we/PRP/we have/VBP/have two/CD/two choices/NNP/choices. we/PRP/we can/MD/can try/VB/try to/TO/to generalize/VB/generalize the/DT/the factorial/JJ/factorial function/NN/function to/TO/to work/VB/work with/IN/with floating-point/JJ/floating-point numbers/NNS/numbers /,/, or/CC/or we/PRP/we can/MD/can make/VB/make factorial/JJ/factorial check/NN/check the/DT/the type/NN/type of/IN/of its/PRP$/its argument/NNP/argument. the/DT/the first/JJ/first option/NN/option is/VBZ/is called/VBN/called the/DT/the gamma/NN/gamma function/NN/function and/CC/and it/PRP/it s/VBZ/s a/DT/a little/RB/little beyond/IN/beyond the/DT/the scope/NN/scope of/IN/of this/DT/this book/NNP/book. so/RB/so we/PRP/we ll/VBP/ll go/VBP/go for/IN/for the/DT/the second/NNP/second. we/PRP/we can/MD/can use/VB/use the/DT/the built-in/NNP/built-in function/NN/function isinstance/NN/isinstance to/TO/to verify/VB/verify the/DT/the type/NN/type of/IN/of the/DT/the argument/NNP/argument. while/IN/while we/PRP/we re/VBP/re at/IN/at it/PRP/it /,/, we/PRP/we also/RB/also make/VBP/make sure/JJ/sure the/DT/the argument/NN/argument is/VBZ/is positive/JJ/positive /:/: def/NN/def factorial/JJ/factorial /NN/( n/NN/n /:/) /:/: if/IN/if not/RB/not isinstance/NN/isinstance /:/( n/NN/n /,/, int/NN/int /:/) /:/: print/NN/print factorial/JJ/factorial is/VBZ/is only/RB/only defined/VBN/defined for/IN/for integers/NNP/integers. return/NN/return -1/-NONE-/-1 elif/IN/elif n/NN/n </:/< 0/-NONE-/0 /:/: print/NN/print factorial/JJ/factorial is/VBZ/is only/RB/only defined/VBN/defined for/IN/for positive/JJ/positive integers/NNP/integers. return/NN/return -1/-NONE-/-1 elif/IN/elif n/NN/n =/:/= =/:/= 0/-NONE-/0 /:/: return/NN/return 1/CD/1 else/NN/else /:/: return/NN/return n/NN/n factorial/NN/factorial /:/( n-1/-NONE-/n-1 /:/) now/RB/now we/PRP/we have/VBP/have three/CD/three base/NN/base cases/NNP/cases. the/DT/the first/JJ/first catches/NNS/catches nonintegers/NNP/nonintegers. the/DT/the second/JJ/second catches/NNS/catches negative/JJ/negative integers/NNP/integers. in/IN/in both/DT/both cases/NNS/cases /,/, the/DT/the program/NN/program prints/NNS/prints an/DT/an error/NN/error message/NN/message and/CC/and returns/NNS/returns a/DT/a special/JJ/special value/NN/value /,/, -1/-NONE-/-1 /,/, to/TO/to indicate/VB/indicate that/IN/that something/NN/something went/VBD/went wrong/JJ/wrong /:/: >/:/> >/:/> >/:/> factorial/JJ/factorial /NN/( fred/VBD/fred /CD/) factorial/JJ/factorial is/VBZ/is only/RB/only defined/VBN/defined for/IN/for integers/NNP/integers. -1/-NONE-/-1 >/:/> >/:/> >/:/> factorial/JJ/factorial /NN/( -2/-NONE-/-2 /./) factorial/JJ/factorial is/VBZ/is only/RB/only defined/VBN/defined for/IN/for positive/JJ/positive integers/NNP/integers. -1/-NONE-/-1 if/IN/if we/PRP/we get/VBP/get past/JJ/past both/DT/both checks/NNS/checks /,/, then/RB/then we/PRP/we know/VBP/know that/IN/that n/NN/n is/VBZ/is a/DT/a positive/JJ/positive integer/NN/integer /,/, and/CC/and we/PRP/we can/MD/can prove/VB/prove that/IN/that the/DT/the recursion/NN/recursion terminates/NNP/terminates. 58/CD/58 fruitful/JJ/fruitful functions/NNS/functions this/DT/this program/NN/program demonstrates/VBZ/demonstrates a/DT/a pattern/NN/pattern sometimes/RB/sometimes called/VBN/called a/DT/a guardian/NNP/guardian. the/DT/the first/JJ/first two/CD/two conditionals/NNS/conditionals act/NN/act as/IN/as guardians/NNS/guardians /,/, protecting/VBG/protecting the/DT/the code/NN/code that/IN/that follows/VBZ/follows from/IN/from values/NNS/values that/WDT/that might/MD/might cause/VB/cause an/DT/an error/NNP/error. the/DT/the guardians/NNS/guardians make/VBP/make it/PRP/it possible/JJ/possible to/TO/to prove/VB/prove the/DT/the correctness/NN/correctness of/IN/of the/DT/the code/NNP/code. 5.9/CD/5.9 glossary/JJ/glossary fruitful/JJ/fruitful function/NN/function /:/: a/DT/a function/NN/function that/WDT/that yields/VBZ/yields a/DT/a return/NN/return value/NNP/value. return/NN/return value/NN/value /:/: the/DT/the value/NN/value provided/VBD/provided as/IN/as the/DT/the result/NN/result of/IN/of a/DT/a function/NN/function call/NNP/call. temporary/NN/temporary variable/JJ/variable /:/: a/DT/a variable/JJ/variable used/VBN/used to/TO/to store/VB/store an/DT/an intermediate/JJ/intermediate value/NN/value in/IN/in a/DT/a complex/JJ/complex calculation/NNP/calculation. dead/NN/dead code/NN/code /:/: part/NN/part of/IN/of a/DT/a program/NN/program that/WDT/that can/MD/can never/RB/never be/VB/be executed/VBN/executed /,/, often/RB/often because/IN/because it/PRP/it appears/VBZ/appears after/IN/after a/DT/a return/NN/return statement/NNP/statement. none/NN/none /:/: a/DT/a special/JJ/special python/NN/python value/NN/value returned/VBD/returned by/IN/by functions/NNS/functions that/IN/that have/VBP/have no/DT/no return/NN/return statement/NN/statement /,/, or/CC/or a/DT/a return/NN/return statement/NN/statement without/IN/without an/DT/an argument/NNP/argument. incremental/NN/incremental development/NN/development /:/: a/DT/a program/NN/program development/NN/development plan/NN/plan intended/VBN/intended to/TO/to avoid/VB/avoid debugging/NN/debugging by/IN/by adding/NN/adding and/CC/and testing/NN/testing only/RB/only a/DT/a small/JJ/small amount/NN/amount of/IN/of code/NN/code at/IN/at a/DT/a time/NNP/time. scaffolding/NN/scaffolding /:/: code/NN/code that/IN/that is/VBZ/is used/VBN/used during/IN/during program/NN/program development/NN/development but/CC/but is/VBZ/is not/RB/not part/NN/part of/IN/of the/DT/the final/JJ/final version/NNP/version. guardian/JJ/guardian /:/: a/DT/a condition/NN/condition that/WDT/that checks/VBZ/checks for/IN/for and/CC/and handles/NNS/handles circumstances/NNS/circumstances that/WDT/that might/MD/might cause/VB/cause an/DT/an error/NNP/error. chapter/NN/chapter 6/CD/6 iteration/NN/iteration 6.1/CD/6.1 multiple/NN/multiple assignment/NN/assignment as/IN/as you/PRP/you may/MD/may have/VB/have discovered/VBN/discovered /,/, it/PRP/it is/VBZ/is legal/JJ/legal to/TO/to make/VB/make more/JJR/more than/IN/than one/CD/one assignment/NN/assignment to/TO/to the/DT/the same/JJ/same variable/NNP/variable. a/DT/a new/JJ/new assignment/NN/assignment makes/VBZ/makes an/DT/an existing/VBG/existing variable/JJ/variable refer/NN/refer to/TO/to a/DT/a new/JJ/new value/NN/value /:/( and/CC/and stop/VB/stop referring/VBG/referring to/TO/to the/DT/the old/JJ/old value/NN/value /:/) /./. bruce/NN/bruce =/:/= 5/CD/5 print/NN/print bruce/NN/bruce /,/, bruce/NN/bruce =/:/= 7/CD/7 print/NN/print bruce/NN/bruce the/DT/the output/NN/output of/IN/of this/DT/this program/NN/program is/VBZ/is 5/CD/5 7/CD/7 /,/, because/IN/because the/DT/the first/JJ/first time/NN/time bruce/NN/bruce is/VBZ/is printed/VBN/printed /,/, his/PRP$/his value/NN/value is/VBZ/is 5/CD/5 /,/, and/CC/and the/DT/the second/JJ/second time/NN/time /,/, his/PRP$/his value/NN/value is/VBZ/is 7/CD/7. the/DT/the comma/NN/comma at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the first/JJ/first print/NN/print statement/NN/statement suppresses/NNS/suppresses the/DT/the newline/NN/newline after/IN/after the/DT/the output/NN/output /,/, which/WDT/which is/VBZ/is why/WRB/why both/DT/both outputs/NNS/outputs appear/VBP/appear on/IN/on the/DT/the same/JJ/same line/NNP/line. here/RB/here is/VBZ/is what/WP/what multiple/RB/multiple assignment/VBP/assignment looks/NNS/looks like/IN/like in/IN/in a/DT/a state/NN/state diagram/NN/diagram /:/: 7/CD/7 5/CD/5 bruce/NN/bruce with/IN/with multiple/NN/multiple assignment/NN/assignment it/PRP/it is/VBZ/is especially/RB/especially important/JJ/important to/TO/to distinguish/VB/distinguish between/IN/between an/DT/an assignment/NN/assignment operation/NN/operation and/CC/and a/DT/a statement/NN/statement of/IN/of equality/NNP/equality. because/IN/because python/NN/python uses/NNS/uses the/DT/the equal/JJ/equal sign/NN/sign /:/( =/:/= /:/) for/IN/for assignment/NN/assignment /,/, it/PRP/it is/VBZ/is tempting/VBG/tempting to/TO/to interpret/VB/interpret a/DT/a statement/NN/statement like/IN/like a/DT/a =/NN/= b/NN/b as/IN/as a/DT/a statement/NN/statement of/IN/of equality/NNP/equality. it/PRP/it is/VBZ/is not/RB/not !/./! 60/CD/60 iteration/NN/iteration first/RB/first /,/, equality/NN/equality is/VBZ/is commutative/JJ/commutative and/CC/and assignment/NN/assignment is/VBZ/is not/NNP/not. for/IN/for example/NN/example /,/, in/IN/in mathematics/NN/mathematics /,/, if/IN/if a/DT/a =/NN/= 7/CD/7 then/RB/then 7/CD/7 =/CD/= a/NNP/a. but/CC/but in/IN/in python/NN/python /,/, the/DT/the statement/NN/statement a/DT/a =/NN/= 7/CD/7 is/VBZ/is legal/JJ/legal and/CC/and 7/CD/7 =/CD/= a/DT/a is/VBZ/is not/NNP/not. furthermore/NN/furthermore /,/, in/IN/in mathematics/NN/mathematics /,/, a/DT/a statement/NN/statement of/IN/of equality/NN/equality is/VBZ/is always/RB/always true/NNP/true. if/IN/if a/DT/a =/NN/= b/NN/b now/RB/now /,/, then/RB/then a/DT/a will/MD/will always/RB/always equal/JJ/equal b/NNP/b. in/IN/in python/NN/python /,/, an/DT/an assignment/NN/assignment statement/NN/statement can/MD/can make/VB/make two/CD/two variables/NNS/variables equal/JJ/equal /,/, but/CC/but they/PRP/they don/VBP/don t/JJ/t have/VBP/have to/TO/to stay/VB/stay that/IN/that way/NN/way /:/: a/DT/a =/NN/= 5/CD/5 b/NN/b =/:/= a/DT/a #/#/# a/DT/a and/CC/and b/NN/b are/VBP/are now/RB/now equal/JJ/equal a/DT/a =/NN/= 3/CD/3 #/#/# a/DT/a and/CC/and b/NN/b are/VBP/are no/RB/no longer/RBR/longer equal/JJ/equal the/DT/the third/JJ/third line/NN/line changes/NNS/changes the/DT/the value/NN/value of/IN/of a/DT/a but/CC/but does/VBZ/does not/RB/not change/VB/change the/DT/the value/NN/value of/IN/of b/NN/b /,/, so/RB/so they/PRP/they are/VBP/are no/RB/no longer/RBR/longer equal/NNP/equal. /NNP/( in/IN/in some/DT/some programming/NN/programming languages/NNS/languages /,/, a/DT/a different/JJ/different symbol/NN/symbol is/VBZ/is used/VBN/used for/IN/for assignment/NN/assignment /,/, such/JJ/such as/IN/as </NNP/< /:/- or/CC/or /:/: =/:/= /,/, to/TO/to avoid/VB/avoid confusion/NNP/confusion. /NNP/) although/IN/although multiple/NN/multiple assignment/NN/assignment is/VBZ/is frequently/RB/frequently helpful/JJ/helpful /,/, you/PRP/you should/MD/should use/VB/use it/PRP/it with/IN/with caution/NNP/caution. if/IN/if the/DT/the values/NNS/values of/IN/of variables/NNS/variables change/VBP/change frequently/RB/frequently /,/, it/PRP/it can/MD/can make/VB/make the/DT/the code/NN/code difficult/NN/difficult to/TO/to read/VB/read and/CC/and debug/NNP/debug. 6.2/CD/6.2 the/DT/the while/NN/while statement/NN/statement computers/NNS/computers are/VBP/are often/RB/often used/VBN/used to/TO/to automate/VB/automate repetitive/JJ/repetitive tasks/NNP/tasks. repeating/NN/repeating identical/JJ/identical or/CC/or similar/JJ/similar tasks/NNS/tasks without/IN/without making/VBG/making errors/NNS/errors is/VBZ/is something/VBG/something that/IN/that computers/NNS/computers do/VBP/do well/RB/well and/CC/and people/NNS/people do/VBP/do poorly/NNP/poorly. we/PRP/we have/VBP/have seen/VBN/seen two/CD/two programs/NNS/programs /,/, nlines/NNS/nlines and/CC/and countdown/VB/countdown /,/, that/IN/that use/NN/use recursion/NN/recursion to/TO/to perform/VB/perform repetition/NN/repetition /,/, which/WDT/which is/VBZ/is also/RB/also called/VBN/called iteration/NNP/iteration. because/IN/because iteration/NN/iteration is/VBZ/is so/RB/so common/JJ/common /,/, python/NN/python provides/VBZ/provides several/JJ/several language/NN/language features/NNS/features to/TO/to make/VB/make it/PRP/it easier/NNP/easier. the/DT/the first/JJ/first feature/NN/feature we/PRP/we are/VBP/are going/VBG/going to/TO/to look/VB/look at/IN/at is/VBZ/is the/DT/the while/NN/while statement/NNP/statement. here/RB/here is/VBZ/is what/WP/what countdown/RB/countdown looks/VBZ/looks like/IN/like with/IN/with a/DT/a while/NN/while statement/NN/statement /:/: def/NN/def countdown/IN/countdown /CD/( n/NN/n /:/) /:/: while/IN/while n/NN/n >/:/> 0/-NONE-/0 /:/: print/NN/print n/NN/n n/NN/n =/:/= n-1/-NONE-/n-1 print/VBP/print blastoff/RP/blastoff !/./! since/IN/since we/PRP/we removed/VBD/removed the/DT/the recursive/JJ/recursive call/NN/call /,/, this/DT/this function/NN/function is/VBZ/is not/RB/not recursive/NNP/recursive. you/PRP/you can/MD/can almost/RB/almost read/VB/read the/DT/the while/NN/while statement/NN/statement as/IN/as if/IN/if it/PRP/it were/VBD/were english/NNP/english. it/PRP/it means/VBZ/means /,/, while/IN/while n/NN/n is/VBZ/is greater/JJR/greater than/IN/than 0/-NONE-/0 /,/, continue/VBP/continue displaying/VBG/displaying the/DT/the value/NN/value of/IN/of n/NN/n and/CC/and then/RB/then reducing/VBG/reducing the/DT/the value/NN/value of/IN/of n/NN/n by/IN/by 1/CD/1. when/WRB/when you/PRP/you get/VBP/get to/TO/to 0/-NONE-/0 /,/, display/NN/display the/DT/the word/NN/word blastoff/NN/blastoff !/./! more/JJR/more formally/RB/formally /,/, here/RB/here is/VBZ/is the/DT/the flow/NN/flow of/IN/of execution/NN/execution for/IN/for a/DT/a while/NN/while statement/NN/statement /:/: 6.2/CD/6.2 the/DT/the while/NN/while statement/NN/statement 61/CD/61 1/CD/1. evaluate/NN/evaluate the/DT/the condition/NN/condition /,/, yielding/NN/yielding 0/-NONE-/0 or/CC/or 1/CD/1. 2/CD/2. if/IN/if the/DT/the condition/NN/condition is/VBZ/is false/NN/false /:/( 0/-NONE-/0 /:/) /,/, exit/NN/exit the/DT/the while/NN/while statement/NN/statement and/CC/and continue/VB/continue execution/NN/execution at/IN/at the/DT/the next/JJ/next statement/NNP/statement. 3/NNP/3. if/IN/if the/DT/the condition/NN/condition is/VBZ/is true/JJ/true /NN/( 1/CD/1 /CD/) /,/, execute/JJ/execute each/DT/each of/IN/of the/DT/the statements/NNS/statements in/IN/in the/DT/the body/NN/body and/CC/and then/RB/then go/VB/go back/RB/back to/TO/to step/VB/step 1/CD/1. the/DT/the body/NN/body consists/VBZ/consists of/IN/of all/DT/all of/IN/of the/DT/the statements/NNS/statements below/IN/below the/DT/the header/NN/header with/IN/with the/DT/the same/JJ/same indentation/NNP/indentation. this/DT/this type/NN/type of/IN/of flow/NN/flow is/VBZ/is called/VBN/called a/DT/a loop/NN/loop because/IN/because the/DT/the third/JJ/third step/NN/step loops/NNS/loops back/RB/back around/IN/around to/TO/to the/DT/the top/NNP/top. notice/NN/notice that/WDT/that if/IN/if the/DT/the condition/NN/condition is/VBZ/is false/NN/false the/DT/the first/JJ/first time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, the/DT/the statements/NNS/statements inside/VBP/inside the/DT/the loop/NN/loop are/VBP/are never/RB/never executed/NNP/executed. the/DT/the body/NN/body of/IN/of the/DT/the loop/NN/loop should/MD/should change/VB/change the/DT/the value/NN/value of/IN/of one/CD/one or/CC/or more/JJR/more variables/NNS/variables so/RB/so that/IN/that eventually/RB/eventually the/DT/the condition/NN/condition becomes/VBZ/becomes false/NN/false and/CC/and the/DT/the loop/NN/loop terminates/NNP/terminates. otherwise/NN/otherwise the/DT/the loop/NN/loop will/MD/will repeat/VB/repeat forever/RB/forever /,/, which/WDT/which is/VBZ/is called/VBN/called an/DT/an infinite/JJ/infinite loop/NNP/loop. an/DT/an endless/NN/endless source/NN/source of/IN/of amusement/NN/amusement for/IN/for computer/NN/computer scientists/NNS/scientists is/VBZ/is the/DT/the observation/NN/observation that/IN/that the/DT/the directions/NNS/directions on/IN/on shampoo/NN/shampoo /,/, lather/RB/lather /,/, rinse/NN/rinse /,/, repeat/NN/repeat /,/, are/VBP/are an/DT/an infinite/JJ/infinite loop/NNP/loop. in/IN/in the/DT/the case/NN/case of/IN/of countdown/NN/countdown /,/, we/PRP/we can/MD/can prove/VB/prove that/IN/that the/DT/the loop/NN/loop terminates/VBZ/terminates because/IN/because we/PRP/we know/VBP/know that/IN/that the/DT/the value/NN/value of/IN/of n/NN/n is/VBZ/is finite/JJ/finite /,/, and/CC/and we/PRP/we can/MD/can see/VB/see that/IN/that the/DT/the value/NN/value of/IN/of n/NN/n gets/NNS/gets smaller/JJR/smaller each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, so/RB/so eventually/RB/eventually we/PRP/we have/VBP/have to/TO/to get/VB/get to/TO/to 0/CD/0. in/IN/in other/JJ/other cases/NNS/cases /,/, it/PRP/it is/VBZ/is not/RB/not so/RB/so easy/JJ/easy to/TO/to tell/VB/tell /:/: def/NN/def sequence/NN/sequence /:/( n/NN/n /:/) /:/: while/IN/while n/NN/n !/./! =/:/= 1/CD/1 /:/: print/JJ/print n/NN/n /,/, if/IN/if n/NN/n %/NN/% 2/CD/2 =/CD/= =/CD/= 0/-NONE-/0 /:/: #/#/# n/NN/n is/VBZ/is even/RB/even n/VBN/n =/-NONE-/= n/2/-NONE-/n/2 else/RB/else /:/: #/#/# n/NN/n is/VBZ/is odd/JJ/odd n/NN/n =/:/= n/NN/n 3/CD/3 +/CD/+ 1/CD/1 the/DT/the condition/NN/condition for/IN/for this/DT/this loop/NN/loop is/VBZ/is n/VBN/n !/./! =/:/= 1/CD/1 /,/, so/RB/so the/DT/the loop/NN/loop will/MD/will continue/VB/continue until/IN/until n/NN/n is/VBZ/is 1/CD/1 /,/, which/WDT/which will/MD/will make/VB/make the/DT/the condition/NN/condition false/NNP/false. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, the/DT/the program/NN/program outputs/NNS/outputs the/DT/the value/NN/value of/IN/of n/NN/n and/CC/and then/RB/then checks/NNS/checks whether/IN/whether it/PRP/it is/VBZ/is even/RB/even or/CC/or odd/NNP/odd. if/IN/if it/PRP/it is/VBZ/is even/RB/even /,/, the/DT/the value/NN/value of/IN/of n/NN/n is/VBZ/is divided/VBN/divided by/IN/by 2/CD/2. if/IN/if it/PRP/it is/VBZ/is odd/JJ/odd /,/, the/DT/the value/NN/value is/VBZ/is replaced/VBN/replaced by/IN/by n/NN/n 3/CD/3 +/CD/+ 1/CD/1. for/IN/for example/NN/example /,/, if/IN/if the/DT/the starting/NN/starting value/NN/value /:/( the/DT/the argument/NN/argument passed/VBD/passed to/TO/to sequence/NN/sequence /:/) is/VBZ/is 3/CD/3 /,/, the/DT/the resulting/VBG/resulting sequence/NN/sequence is/VBZ/is 3/CD/3 /,/, 10/CD/10 /,/, 5/CD/5 /,/, 16/CD/16 /,/, 8/CD/8 /,/, 4/CD/4 /,/, 2/CD/2 /,/, 1/CD/1. since/IN/since n/NN/n sometimes/RB/sometimes increases/VBZ/increases and/CC/and sometimes/RB/sometimes decreases/VBZ/decreases /,/, there/EX/there is/VBZ/is no/DT/no obvious/JJ/obvious proof/IN/proof that/DT/that n/NN/n will/MD/will ever/RB/ever reach/VB/reach 1/CD/1 /,/, or/CC/or that/IN/that the/DT/the program/NN/program terminates/NNP/terminates. for/IN/for some/DT/some particular/JJ/particular values/NNS/values of/IN/of n/NN/n /,/, we/PRP/we can/MD/can prove/VB/prove termination/NNP/termination. for/IN/for example/NN/example /,/, if/IN/if the/DT/the starting/NN/starting value/NN/value is/VBZ/is a/DT/a power/NN/power of/IN/of two/CD/two /,/, then/RB/then the/DT/the value/NN/value of/IN/of n/NN/n will/MD/will be/VB/be even/RB/even each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop until/IN/until it/PRP/it reaches/VBZ/reaches 1/CD/1. the/DT/the previous/JJ/previous example/NN/example ends/NNS/ends with/IN/with such/JJ/such a/DT/a sequence/NN/sequence /,/, starting/VBG/starting with/IN/with 16/CD/16. 62/CD/62 iteration/NN/iteration particular/JJ/particular values/NNS/values aside/VBP/aside /,/, the/DT/the interesting/JJ/interesting question/NN/question is/VBZ/is whether/IN/whether we/PRP/we can/MD/can prove/VB/prove that/IN/that this/DT/this program/NN/program terminates/VBZ/terminates for/IN/for all/DT/all positive/JJ/positive values/NNS/values of/IN/of n/NNP/n. so/RB/so far/RB/far /,/, no/DT/no one/PRP/one has/VBZ/has been/VBN/been able/JJ/able to/TO/to prove/VB/prove it/PRP/it or/CC/or disprove/VB/disprove it/PRP/it !/./! as/IN/as an/DT/an exercise/NN/exercise /,/, rewrite/JJ/rewrite the/DT/the function/NN/function nlines/NNS/nlines from/IN/from section/NN/section 4.9/CD/4.9 using/VBG/using iteration/NN/iteration instead/RB/instead of/IN/of recursion/NNP/recursion. 6.3/CD/6.3 tables/NNS/tables one/CD/one of/IN/of the/DT/the things/NNS/things loops/NNS/loops are/VBP/are good/JJ/good for/IN/for is/VBZ/is generating/VBG/generating tabular/JJ/tabular data/NNP/data. before/IN/before computers/NNS/computers were/VBD/were readily/RB/readily available/JJ/available /,/, people/NNS/people had/VBD/had to/TO/to calculate/VB/calculate logarithms/NNS/logarithms /,/, sines/NNS/sines and/CC/and cosines/NNS/cosines /,/, and/CC/and other/JJ/other mathematical/JJ/mathematical functions/NNS/functions by/IN/by hand/NNP/hand. to/TO/to make/VB/make that/IN/that easier/JJR/easier /,/, mathematics/NNS/mathematics books/NNS/books contained/VBD/contained long/RB/long tables/NNS/tables listing/VBG/listing the/DT/the values/NNS/values of/IN/of these/DT/these functions/NNP/functions. creating/NN/creating the/DT/the tables/NNS/tables was/VBD/was slow/JJ/slow and/CC/and boring/VBG/boring /,/, and/CC/and they/PRP/they tended/VBD/tended to/TO/to be/VB/be full/JJ/full of/IN/of errors/NNP/errors. when/WRB/when computers/NNS/computers appeared/VBN/appeared on/IN/on the/DT/the scene/NN/scene /,/, one/CD/one of/IN/of the/DT/the initial/JJ/initial reactions/NNS/reactions was/VBD/was /,/, this/DT/this is/VBZ/is great/JJ/great !/./! we/PRP/we can/MD/can use/VB/use the/DT/the computers/NNS/computers to/TO/to generate/VB/generate the/DT/the tables/NNS/tables /,/, so/RB/so there/RB/there will/MD/will be/VB/be no/RB/no errors/NNP/errors. that/IN/that turned/VBD/turned out/RP/out to/TO/to be/VB/be true/JJ/true /NN/( mostly/RB/mostly /./) but/CC/but shortsighted/NNP/shortsighted. soon/RB/soon thereafter/JJR/thereafter /,/, computers/NNS/computers and/CC/and calculators/NNS/calculators were/VBD/were so/RB/so pervasive/JJ/pervasive that/IN/that the/DT/the tables/NNS/tables became/VBD/became obsolete/NNP/obsolete. well/RB/well /,/, almost/NNP/almost. for/IN/for some/DT/some operations/NNS/operations /,/, computers/NNS/computers use/VBP/use tables/NNS/tables of/IN/of values/NNS/values to/TO/to get/VB/get an/DT/an approximate/NN/approximate answer/NN/answer and/CC/and then/RB/then perform/NN/perform computations/NNS/computations to/TO/to improve/VB/improve the/DT/the approximation/NNP/approximation. in/IN/in some/DT/some cases/NNS/cases /,/, there/EX/there have/VBP/have been/VBN/been errors/NNS/errors in/IN/in the/DT/the underlying/VBG/underlying tables/NNS/tables /,/, most/JJS/most famously/RB/famously in/IN/in the/DT/the table/NN/table the/DT/the intel/NN/intel pentium/NN/pentium used/VBD/used to/TO/to perform/NN/perform floating-point/JJ/floating-point division/NNP/division. although/IN/although a/DT/a log/NN/log table/NN/table is/VBZ/is not/RB/not as/IN/as useful/JJ/useful as/IN/as it/PRP/it once/RB/once was/VBD/was /,/, it/PRP/it still/RB/still makes/VBZ/makes a/DT/a good/JJ/good example/NN/example of/IN/of iteration/NNP/iteration. the/DT/the following/VBG/following program/NN/program outputs/NNS/outputs a/DT/a sequence/NN/sequence of/IN/of values/NNS/values in/IN/in the/DT/the left/NN/left column/NN/column and/CC/and their/PRP$/their logarithms/NNS/logarithms in/IN/in the/DT/the right/NN/right column/NN/column /:/: x/NN/x =/:/= 1.0/CD/1.0 while/IN/while x/NN/x </:/< 10.0/CD/10.0 /:/: print/JJ/print x/NN/x /,/, \/:/\ t/NN/t /,/, math.log/JJ/math.log /NN/( x/NN/x /:/) x/NN/x =/:/= x/NN/x +/:/+ 1.0/CD/1.0 the/DT/the string/NN/string \/:/\ t/NN/t represents/NNS/represents a/DT/a tab/NN/tab character/NNP/character. as/IN/as characters/NNS/characters and/CC/and strings/NNS/strings are/VBP/are displayed/VBN/displayed on/IN/on the/DT/the screen/NN/screen /,/, an/DT/an invisible/JJ/invisible marker/NN/marker called/VBN/called the/DT/the cursor/NN/cursor keeps/VBZ/keeps track/NN/track of/IN/of where/WRB/where the/DT/the next/JJ/next character/NN/character will/MD/will go/VB/go. after/IN/after a/DT/a print/NN/print statement/NN/statement /,/, the/DT/the cursor/NN/cursor normally/RB/normally goes/VBZ/goes to/TO/to the/DT/the beginning/NN/beginning of/IN/of the/DT/the next/JJ/next line/NNP/line. the/DT/the tab/NN/tab character/NN/character shifts/NNS/shifts the/DT/the cursor/NN/cursor to/TO/to the/DT/the right/NN/right until/IN/until it/PRP/it reaches/VBZ/reaches one/CD/one of/IN/of the/DT/the tab/NN/tab stops/NNP/stops. tabs/NNS/tabs are/VBP/are useful/JJ/useful for/IN/for making/VBG/making columns/NNS/columns of/IN/of text/NN/text line/NN/line up/IN/up /,/, as/IN/as in/IN/in the/DT/the output/NN/output of/IN/of the/DT/the previous/JJ/previous program/NN/program /:/: 6.3/CD/6.3 tables/NNS/tables 63/CD/63 1.0/CD/1.0 0.0/CD/0.0 2.0/CD/2.0 0.69314718056/CD/0.69314718056 3.0/CD/3.0 1.09861228867/CD/1.09861228867 4.0/CD/4.0 1.38629436112/CD/1.38629436112 5.0/CD/5.0 1.60943791243/CD/1.60943791243 6.0/CD/6.0 1.79175946923/CD/1.79175946923 7.0/CD/7.0 1.94591014906/CD/1.94591014906 8.0/CD/8.0 2.07944154168/CD/2.07944154168 9.0/CD/9.0 2.19722457734/CD/2.19722457734 if/IN/if these/DT/these values/NNS/values seem/VBP/seem odd/JJ/odd /,/, remember/NN/remember that/IN/that the/DT/the log/NN/log function/NN/function uses/NNS/uses base/NN/base e/NNP/e. since/IN/since powers/NNS/powers of/IN/of two/CD/two are/VBP/are so/RB/so important/JJ/important in/IN/in computer/NN/computer science/NN/science /,/, we/PRP/we often/RB/often want/VBP/want to/TO/to find/VB/find logarithms/NNS/logarithms with/IN/with respect/NN/respect to/TO/to base/VB/base 2/CD/2. to/TO/to do/VB/do that/DT/that /,/, we/PRP/we can/MD/can use/VB/use the/DT/the following/VBG/following formula/NN/formula /:/: log2/NNP/log2 x/NN/x =/:/= loge/NN/loge x/NN/x loge/NN/loge 2/CD/2 changing/VBG/changing the/DT/the output/NN/output statement/NN/statement to/TO/to /:/: print/NN/print x/NN/x /,/, \/:/\ t/NN/t /,/, math.log/JJ/math.log /NN/( x/NN/x /:/) /math.log/JJ//math.log /NN/( 2.0/CD/2.0 /CD/) yields/NNS/yields /:/: 1.0/CD/1.0 0.0/CD/0.0 2.0/CD/2.0 1.0/CD/1.0 3.0/CD/3.0 1.58496250072/CD/1.58496250072 4.0/CD/4.0 2.0/CD/2.0 5.0/CD/5.0 2.32192809489/CD/2.32192809489 6.0/CD/6.0 2.58496250072/CD/2.58496250072 7.0/CD/7.0 2.80735492206/CD/2.80735492206 8.0/CD/8.0 3.0/CD/3.0 9.0/CD/9.0 3.16992500144/CD/3.16992500144 we/PRP/we can/MD/can see/VB/see that/IN/that 1/CD/1 /,/, 2/CD/2 /,/, 4/CD/4 /,/, and/CC/and 8/CD/8 are/VBP/are powers/NNS/powers of/IN/of two/CD/two because/IN/because their/PRP$/their logarithms/NNS/logarithms base/NN/base 2/CD/2 are/VBP/are round/VBN/round numbers/NNP/numbers. if/IN/if we/PRP/we wanted/VBD/wanted to/TO/to find/VB/find the/DT/the logarithms/NNS/logarithms of/IN/of other/JJ/other powers/NNS/powers of/IN/of two/CD/two /,/, we/PRP/we could/MD/could modify/VB/modify the/DT/the program/NN/program like/IN/like this/DT/this /:/: x/NN/x =/:/= 1.0/CD/1.0 while/IN/while x/NN/x </:/< 100.0/CD/100.0 /:/: print/JJ/print x/NN/x /,/, \/:/\ t/NN/t /,/, math.log/JJ/math.log /NN/( x/NN/x /:/) /math.log/JJ//math.log /NN/( 2.0/CD/2.0 /CD/) x/NN/x =/:/= x/NN/x 2.0/CD/2.0 now/RB/now instead/RB/instead of/IN/of adding/VBG/adding something/NN/something to/TO/to x/VB/x each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, which/WDT/which yields/NNS/yields an/DT/an arithmetic/JJ/arithmetic sequence/NN/sequence /,/, we/PRP/we multiply/RB/multiply x/VBP/x by/IN/by something/NN/something /,/, yielding/NN/yielding a/DT/a geometric/JJ/geometric sequence/NNP/sequence. the/DT/the result/NN/result is/VBZ/is /:/: 64/CD/64 iteration/NN/iteration 1.0/CD/1.0 0.0/CD/0.0 2.0/CD/2.0 1.0/CD/1.0 4.0/CD/4.0 2.0/CD/2.0 8.0/CD/8.0 3.0/CD/3.0 16.0/CD/16.0 4.0/CD/4.0 32.0/CD/32.0 5.0/CD/5.0 64.0/CD/64.0 6.0/CD/6.0 because/IN/because of/IN/of the/DT/the tab/NN/tab characters/NNS/characters between/IN/between the/DT/the columns/NNS/columns /,/, the/DT/the position/NN/position of/IN/of the/DT/the second/JJ/second column/NN/column does/VBZ/does not/RB/not depend/VB/depend on/IN/on the/DT/the number/NN/number of/IN/of digits/NNS/digits in/IN/in the/DT/the first/JJ/first column/NNP/column. logarithm/NN/logarithm tables/NNS/tables may/MD/may not/RB/not be/VB/be useful/JJ/useful any/DT/any more/RBR/more /,/, but/CC/but for/IN/for computer/NN/computer scientists/NNS/scientists /,/, knowing/VBG/knowing the/DT/the powers/NNS/powers of/IN/of two/CD/two is/VBZ/is !/./! as/IN/as an/DT/an exercise/NN/exercise /,/, modify/NN/modify this/DT/this program/NN/program so/IN/so that/IN/that it/PRP/it outputs/VBZ/outputs the/DT/the powers/NNS/powers of/IN/of two/CD/two up/IN/up to/TO/to 65,536/CD/65,536 /CD/( that/WDT/that s/VBZ/s 2/CD/2 16/CD/16 /CD/) /./. print/NN/print it/PRP/it out/RP/out and/CC/and memorize/VB/memorize it/NNP/it. the/DT/the backslash/NN/backslash character/NN/character in/IN/in \/NNP/\ t/NN/t indicates/VBZ/indicates the/DT/the beginning/NN/beginning of/IN/of an/DT/an escape/NN/escape sequence/NNP/sequence. escape/NN/escape sequences/NNS/sequences are/VBP/are used/VBN/used to/TO/to represent/VB/represent invisible/JJ/invisible characters/NNS/characters like/IN/like tabs/NNS/tabs and/CC/and newlines/NNP/newlines. the/DT/the sequence/NN/sequence \/:/\ n/NN/n represents/NNS/represents a/DT/a newline/NNP/newline. an/DT/an escape/NN/escape sequence/NN/sequence can/MD/can appear/VB/appear anywhere/RB/anywhere in/IN/in a/DT/a string/NN/string ;/:/; in/IN/in the/DT/the example/NN/example /,/, the/DT/the tab/NN/tab escape/NN/escape sequence/NN/sequence is/VBZ/is the/DT/the only/JJ/only thing/NN/thing in/IN/in the/DT/the string/NNP/string. how/WRB/how do/VBP/do you/PRP/you think/VB/think you/PRP/you represent/VBP/represent a/DT/a backslash/NN/backslash in/IN/in a/DT/a string/NN/string as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a single/JJ/single string/NN/string that/WDT/that produces/VBZ/produces this/DT/this output/NNP/output. 6.4/CD/6.4 two-dimensional/JJ/two-dimensional tables/NNS/tables a/DT/a two-dimensional/JJ/two-dimensional table/NN/table is/VBZ/is a/DT/a table/JJ/table where/WRB/where you/PRP/you read/VBP/read the/DT/the value/NN/value at/IN/at the/DT/the intersection/NN/intersection of/IN/of a/DT/a row/NN/row and/CC/and a/DT/a column/NNP/column. a/DT/a multiplication/NN/multiplication table/NN/table is/VBZ/is a/DT/a good/JJ/good example/NNP/example. let/NN/let s/VBZ/s say/VB/say you/PRP/you want/VBP/want to/TO/to print/VB/print a/DT/a multiplication/NN/multiplication table/NN/table for/IN/for the/DT/the values/NNS/values from/IN/from 1/CD/1 to/TO/to 6/CD/6. a/DT/a good/JJ/good way/NN/way to/TO/to start/VB/start is/VBZ/is to/TO/to write/VB/write a/DT/a loop/NN/loop that/WDT/that prints/VBZ/prints the/DT/the multiples/NNS/multiples of/IN/of 2/CD/2 /,/, all/DT/all on/IN/on one/CD/one line/NN/line /:/: i/PRP/i =/VBP/= 1/CD/1 while/IN/while i/PRP/i </VBP/< =/:/= 6/CD/6 /:/: print/JJ/print 2/CD/2 i/PRP/i /,/, /,/, i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 print/NN/print 6.5/CD/6.5 encapsulation/NN/encapsulation and/CC/and generalization/NN/generalization 65/CD/65 the/DT/the first/JJ/first line/NN/line initializes/NNS/initializes a/DT/a variable/JJ/variable named/VBN/named i/PRP/i /,/, which/WDT/which acts/NNS/acts as/IN/as a/DT/a counter/NN/counter or/CC/or loop/VB/loop variable/NNP/variable. as/IN/as the/DT/the loop/NN/loop executes/VBZ/executes /,/, the/DT/the value/NN/value of/IN/of i/PRP/i increases/VBZ/increases from/IN/from 1/CD/1 to/TO/to 6/CD/6. when/WRB/when i/PRP/i is/VBZ/is 7/CD/7 /,/, the/DT/the loop/NN/loop terminates/NNP/terminates. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, it/PRP/it displays/VBZ/displays the/DT/the value/NN/value of/IN/of 2/CD/2 i/PRP/i /,/, followed/VBD/followed by/IN/by three/CD/three spaces/NNP/spaces. again/RB/again /,/, the/DT/the comma/NN/comma in/IN/in the/DT/the print/NN/print statement/NN/statement suppresses/NNS/suppresses the/DT/the newline/NNP/newline. after/IN/after the/DT/the loop/NN/loop completes/VBZ/completes /,/, the/DT/the second/JJ/second print/NN/print statement/NN/statement starts/VBZ/starts a/DT/a new/JJ/new line/NNP/line. the/DT/the output/NN/output of/IN/of the/DT/the program/NN/program is/VBZ/is /:/: 2/CD/2 4/CD/4 6/CD/6 8/CD/8 10/CD/10 12/CD/12 so/RB/so far/RB/far /,/, so/RB/so good/NNP/good. the/DT/the next/JJ/next step/NN/step is/VBZ/is to/TO/to encapsulate/VB/encapsulate and/CC/and generalize/NNP/generalize. 6.5/CD/6.5 encapsulation/NN/encapsulation and/CC/and generalization/NN/generalization encapsulation/NN/encapsulation is/VBZ/is the/DT/the process/NN/process of/IN/of wrapping/VBG/wrapping a/DT/a piece/NN/piece of/IN/of code/NN/code in/IN/in a/DT/a function/NN/function /,/, allowing/VBG/allowing you/PRP/you to/TO/to take/VB/take advantage/NN/advantage of/IN/of all/DT/all the/DT/the things/NNS/things functions/NNS/functions are/VBP/are good/JJ/good for/NNP/for. you/PRP/you have/VBP/have seen/VBN/seen two/CD/two examples/NNS/examples of/IN/of encapsulation/NN/encapsulation /:/: printparity/NN/printparity in/IN/in section/NN/section 4.5/CD/4.5 ;/:/; and/CC/and isdivisible/JJ/isdivisible in/IN/in section/NN/section 5.4/CD/5.4. generalization/NN/generalization means/VBZ/means taking/VBG/taking something/NN/something specific/NN/specific /,/, such/JJ/such as/IN/as printing/NN/printing the/DT/the multiples/NNS/multiples of/IN/of 2/CD/2 /,/, and/CC/and making/VBG/making it/PRP/it more/JJR/more general/JJ/general /,/, such/JJ/such as/IN/as printing/NN/printing the/DT/the multiples/NNS/multiples of/IN/of any/DT/any integer/NNP/integer. this/DT/this function/NN/function encapsulates/VBZ/encapsulates the/DT/the previous/JJ/previous loop/NN/loop and/CC/and generalizes/VBZ/generalizes it/PRP/it to/TO/to print/VB/print multiples/NNS/multiples of/IN/of n/NN/n /:/: def/NN/def printmultiples/NNS/printmultiples /:/( n/NN/n /:/) /:/: i/PRP/i =/VBP/= 1/CD/1 while/IN/while i/PRP/i </VBP/< =/:/= 6/CD/6 /:/: print/JJ/print n/NN/n i/PRP/i /,/, \/:/\ t/NN/t /,/, i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 print/NN/print to/TO/to encapsulate/VB/encapsulate /,/, all/DT/all we/PRP/we had/VBD/had to/TO/to do/VB/do was/VBD/was add/VBN/add the/DT/the first/JJ/first line/NN/line /,/, which/WDT/which declares/NNS/declares the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function and/CC/and the/DT/the parameter/NN/parameter list/NNP/list. to/TO/to generalize/VB/generalize /,/, all/DT/all we/PRP/we had/VBD/had to/TO/to do/VB/do was/VBD/was replace/VB/replace the/DT/the value/NN/value 2/CD/2 with/IN/with the/DT/the parameter/NN/parameter n/NNP/n. if/IN/if we/PRP/we call/VBP/call this/DT/this function/NN/function with/IN/with the/DT/the argument/NN/argument 2/CD/2 /,/, we/PRP/we get/VBP/get the/DT/the same/JJ/same output/NN/output as/IN/as before/NNP/before. with/IN/with the/DT/the argument/NN/argument 3/CD/3 /,/, the/DT/the output/NN/output is/VBZ/is /:/: 3/CD/3 6/CD/6 9/CD/9 12/CD/12 15/CD/15 18/CD/18 with/IN/with the/DT/the argument/NN/argument 4/CD/4 /,/, the/DT/the output/NN/output is/VBZ/is /:/: 4/CD/4 8/CD/8 12/CD/12 16/CD/16 20/CD/20 24/CD/24 66/CD/66 iteration/NN/iteration by/IN/by now/RB/now you/PRP/you can/MD/can probably/RB/probably guess/VB/guess how/WRB/how to/TO/to print/VB/print a/DT/a multiplication/NN/multiplication table/NN/table by/IN/by calling/NN/calling printmultiples/NNS/printmultiples repeatedly/RB/repeatedly with/IN/with different/JJ/different arguments/NNP/arguments. in/IN/in fact/NN/fact /,/, we/PRP/we can/MD/can use/VB/use another/DT/another loop/NN/loop /:/: i/PRP/i =/VBP/= 1/CD/1 while/IN/while i/PRP/i </VBP/< =/:/= 6/CD/6 /:/: printmultiples/NNS/printmultiples /VBP/( i/PRP/i /VBP/) i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 notice/NN/notice how/WRB/how similar/JJ/similar this/DT/this loop/NN/loop is/VBZ/is to/TO/to the/DT/the one/CD/one inside/NN/inside printmultiples/NNP/printmultiples. all/DT/all we/PRP/we did/VBD/did was/VBD/was replace/NN/replace the/DT/the print/NN/print statement/NN/statement with/IN/with a/DT/a function/NN/function call/NNP/call. the/DT/the output/NN/output of/IN/of this/DT/this program/NN/program is/VBZ/is a/DT/a multiplication/NN/multiplication table/NN/table /:/: 1/LS/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 2/CD/2 4/CD/4 6/CD/6 8/CD/8 10/CD/10 12/CD/12 3/CD/3 6/CD/6 9/CD/9 12/CD/12 15/CD/15 18/CD/18 4/CD/4 8/CD/8 12/CD/12 16/CD/16 20/CD/20 24/CD/24 5/CD/5 10/CD/10 15/CD/15 20/CD/20 25/CD/25 30/CD/30 6/CD/6 12/CD/12 18/CD/18 24/CD/24 30/CD/30 36/CD/36 6.6/CD/6.6 more/JJR/more encapsulation/NN/encapsulation to/TO/to demonstrate/VB/demonstrate encapsulation/NN/encapsulation again/RB/again /,/, let/VB/let s/NNS/s take/VB/take the/DT/the code/NN/code from/IN/from the/DT/the end/NN/end of/IN/of section/NN/section 6.5/CD/6.5 and/CC/and wrap/NN/wrap it/PRP/it up/IN/up in/IN/in a/DT/a function/NN/function /:/: def/NN/def printmulttable/JJ/printmulttable /NN/( /:/) /:/: i/PRP/i =/VBP/= 1/CD/1 while/IN/while i/PRP/i </VBP/< =/:/= 6/CD/6 /:/: printmultiples/NNS/printmultiples /VBP/( i/PRP/i /VBP/) i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 this/DT/this process/NN/process is/VBZ/is a/DT/a common/JJ/common development/NN/development plan/NNP/plan. we/PRP/we develop/VB/develop code/NN/code by/IN/by writing/NN/writing lines/NNS/lines of/IN/of code/NN/code outside/IN/outside any/DT/any function/NN/function /,/, or/CC/or typing/VBG/typing them/PRP/them in/IN/in to/TO/to the/DT/the interpreter/NNP/interpreter. when/WRB/when we/PRP/we get/VBP/get the/DT/the code/NN/code working/VBG/working /,/, we/PRP/we extract/VBP/extract it/PRP/it and/CC/and wrap/VB/wrap it/PRP/it up/RP/up in/IN/in a/DT/a function/NNP/function. this/DT/this development/NN/development plan/NN/plan is/VBZ/is particularly/RB/particularly useful/JJ/useful if/IN/if you/PRP/you don/VBP/don t/NN/t know/VB/know /,/, when/WRB/when you/PRP/you start/VBP/start writing/VBG/writing /,/, how/WRB/how to/TO/to divide/VB/divide the/DT/the program/NN/program into/IN/into functions/NNP/functions. this/DT/this approach/NN/approach lets/NNS/lets you/PRP/you design/VBP/design as/IN/as you/PRP/you go/VBP/go along/NNP/along. 6.7/CD/6.7 local/JJ/local variables/NNS/variables 67/CD/67 6.7/CD/6.7 local/JJ/local variables/NNS/variables you/PRP/you might/MD/might be/VB/be wondering/VBG/wondering how/WRB/how we/PRP/we can/MD/can use/VB/use the/DT/the same/JJ/same variable/JJ/variable /,/, i/PRP/i /,/, in/IN/in both/DT/both printmultiples/NNS/printmultiples and/CC/and printmulttable/NNP/printmulttable. doesn/NN/doesn t/NN/t it/PRP/it cause/VB/cause problems/NNS/problems when/WRB/when one/CD/one of/IN/of the/DT/the functions/NNS/functions changes/NNS/changes the/DT/the value/NN/value of/IN/of the/DT/the variable/JJ/variable the/DT/the answer/NN/answer is/VBZ/is no/DT/no /,/, because/IN/because the/DT/the i/PRP/i in/IN/in printmultiples/NNS/printmultiples and/CC/and the/DT/the i/NN/i in/IN/in printmulttable/JJ/printmulttable are/VBP/are not/RB/not the/DT/the same/JJ/same variable/NNP/variable. variables/NNS/variables created/VBD/created inside/NN/inside a/DT/a function/NN/function definition/NN/definition are/VBP/are local/JJ/local ;/:/; you/PRP/you can/MD/can t/VB/t access/NN/access a/DT/a local/JJ/local variable/JJ/variable from/IN/from outside/JJ/outside its/PRP$/its home/NN/home function/NNP/function. that/IN/that means/VBZ/means you/PRP/you are/VBP/are free/JJ/free to/TO/to have/VB/have multiple/JJ/multiple variables/NNS/variables with/IN/with the/DT/the same/JJ/same name/NN/name as/IN/as long/RB/long as/IN/as they/PRP/they are/VBP/are not/RB/not in/IN/in the/DT/the same/JJ/same function/NNP/function. the/DT/the stack/NN/stack diagram/NN/diagram for/IN/for this/DT/this program/NN/program shows/VBZ/shows that/IN/that the/DT/the two/CD/two variables/NNS/variables named/VBD/named i/PRP/i are/VBP/are not/RB/not the/DT/the same/JJ/same variable/NNP/variable. they/PRP/they can/MD/can refer/VB/refer to/TO/to different/JJ/different values/NNS/values /,/, and/CC/and changing/VBG/changing one/CD/one does/VBZ/does not/RB/not affect/VB/affect the/DT/the other/NNP/other. i/PRP/i 2/CD/2 1/CD/1 3/CD/3 n/NN/n 3/CD/3 i/PRP/i 2/CD/2 1/CD/1 printmulttable/JJ/printmulttable printmultiples/NNS/printmultiples the/DT/the value/NN/value of/IN/of i/PRP/i in/IN/in printmulttable/JJ/printmulttable goes/NNS/goes from/IN/from 1/CD/1 to/TO/to 6/CD/6. in/IN/in the/DT/the diagram/NN/diagram it/PRP/it happens/VBZ/happens to/TO/to be/VB/be 3/CD/3. the/DT/the next/JJ/next time/NN/time through/IN/through the/DT/the loop/NN/loop it/PRP/it will/MD/will be/VB/be 4/CD/4. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, printmulttable/JJ/printmulttable calls/NNS/calls printmultiples/NNS/printmultiples with/IN/with the/DT/the current/JJ/current value/NN/value of/IN/of i/PRP/i as/IN/as an/DT/an argument/NNP/argument. that/IN/that value/NN/value gets/NNS/gets assigned/VBD/assigned to/TO/to the/DT/the parameter/NN/parameter n/NNP/n. inside/NN/inside printmultiples/NNS/printmultiples /,/, the/DT/the value/NN/value of/IN/of i/PRP/i goes/VBZ/goes from/IN/from 1/CD/1 to/TO/to 6/CD/6. in/IN/in the/DT/the diagram/NN/diagram /,/, it/PRP/it happens/VBZ/happens to/TO/to be/VB/be 2/CD/2. changing/VBG/changing this/DT/this variable/JJ/variable has/VBZ/has no/DT/no effect/NN/effect on/IN/on the/DT/the value/NN/value of/IN/of i/PRP/i in/IN/in printmulttable/NNP/printmulttable. it/PRP/it is/VBZ/is common/JJ/common and/CC/and perfectly/RB/perfectly legal/JJ/legal to/TO/to have/VB/have different/JJ/different local/JJ/local variables/NNS/variables with/IN/with the/DT/the same/JJ/same name/NNP/name. in/IN/in particular/JJ/particular /,/, names/VBZ/names like/IN/like i/PRP/i and/CC/and j/VB/j are/VBP/are used/VBN/used frequently/RB/frequently as/IN/as loop/NN/loop variables/NNP/variables. if/IN/if you/PRP/you avoid/VBP/avoid using/VBG/using them/PRP/them in/IN/in one/CD/one function/NN/function just/RB/just because/IN/because you/PRP/you used/VBD/used them/PRP/them somewhere/RB/somewhere else/RB/else /,/, you/PRP/you will/MD/will probably/RB/probably make/VB/make the/DT/the program/NN/program harder/NN/harder to/TO/to read/NNP/read. 68/CD/68 iteration/NN/iteration 6.8/CD/6.8 more/JJR/more generalization/NN/generalization as/IN/as another/DT/another example/NN/example of/IN/of generalization/NN/generalization /,/, imagine/NN/imagine you/PRP/you wanted/VBD/wanted a/DT/a program/NN/program that/WDT/that would/MD/would print/VB/print a/DT/a multiplication/NN/multiplication table/NN/table of/IN/of any/DT/any size/NN/size /,/, not/RB/not just/RB/just the/DT/the six-by-six/JJ/six-by-six table/NNP/table. you/PRP/you could/MD/could add/VB/add a/DT/a parameter/NN/parameter to/TO/to printmulttable/JJ/printmulttable /:/: def/NN/def printmulttable/JJ/printmulttable /NN/( high/JJ/high /NN/) /:/: i/PRP/i =/VBP/= 1/CD/1 while/IN/while i/PRP/i </VBP/< =/:/= high/JJ/high /:/: printmultiples/NNS/printmultiples /VBP/( i/PRP/i /VBP/) i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 we/PRP/we replaced/VBD/replaced the/DT/the value/NN/value 6/CD/6 with/IN/with the/DT/the parameter/NN/parameter high/NNP/high. if/IN/if we/PRP/we call/VBP/call printmulttable/JJ/printmulttable with/IN/with the/DT/the argument/NN/argument 7/CD/7 /,/, it/PRP/it displays/VBZ/displays /:/: 1/LS/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 2/CD/2 4/CD/4 6/CD/6 8/CD/8 10/CD/10 12/CD/12 3/CD/3 6/CD/6 9/CD/9 12/CD/12 15/CD/15 18/CD/18 4/CD/4 8/CD/8 12/CD/12 16/CD/16 20/CD/20 24/CD/24 5/CD/5 10/CD/10 15/CD/15 20/CD/20 25/CD/25 30/CD/30 6/CD/6 12/CD/12 18/CD/18 24/CD/24 30/CD/30 36/CD/36 7/CD/7 14/CD/14 21/CD/21 28/CD/28 35/CD/35 42/CD/42 this/DT/this is/VBZ/is fine/NN/fine /,/, except/IN/except that/DT/that we/PRP/we probably/RB/probably want/VBP/want the/DT/the table/NN/table to/TO/to be/VB/be square/JJ/square with/IN/with the/DT/the same/JJ/same number/NN/number of/IN/of rows/NNS/rows and/CC/and columns/NNP/columns. to/TO/to do/VB/do that/DT/that /,/, we/PRP/we add/VBP/add another/DT/another parameter/NN/parameter to/TO/to printmultiples/NNS/printmultiples to/TO/to specify/VB/specify how/WRB/how many/JJ/many columns/NNS/columns the/DT/the table/NN/table should/MD/should have/NNP/have. just/RB/just to/TO/to be/VB/be annoying/VBG/annoying /,/, we/PRP/we call/VBP/call this/DT/this parameter/NN/parameter high/NN/high /,/, demonstrating/VBG/demonstrating that/IN/that different/JJ/different functions/NNS/functions can/MD/can have/VB/have parameters/NNS/parameters with/IN/with the/DT/the same/JJ/same name/NN/name /:/( just/RB/just like/IN/like local/JJ/local variables/NNS/variables /:/) /./. here/RB/here s/VBZ/s the/DT/the whole/JJ/whole program/NN/program /:/: def/NN/def printmultiples/NNS/printmultiples /:/( n/NN/n /,/, high/JJ/high /NN/) /:/: i/PRP/i =/VBP/= 1/CD/1 while/IN/while i/PRP/i </VBP/< =/:/= high/JJ/high /:/: print/NN/print n/NN/n i/PRP/i /,/, \/:/\ t/NN/t /,/, i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 print/NN/print def/NN/def printmulttable/JJ/printmulttable /NN/( high/JJ/high /NN/) /:/: i/PRP/i =/VBP/= 1/CD/1 while/IN/while i/PRP/i </VBP/< =/:/= high/JJ/high /:/: printmultiples/NNS/printmultiples /VBP/( i/PRP/i /,/, high/JJ/high /NN/) i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 notice/NN/notice that/WDT/that when/WRB/when we/PRP/we added/VBD/added a/DT/a new/JJ/new parameter/NN/parameter /,/, we/PRP/we had/VBD/had to/TO/to change/VB/change the/DT/the first/JJ/first line/NN/line of/IN/of the/DT/the function/NN/function /:/( the/DT/the function/NN/function heading/VBG/heading /NN/) /,/, and/CC/and we/PRP/we also/RB/also had/VBD/had to/TO/to change/VB/change the/DT/the place/NN/place where/WRB/where 6.9/CD/6.9 functions/NNS/functions 69/CD/69 the/DT/the function/NN/function is/VBZ/is called/VBN/called in/IN/in printmulttable/NNP/printmulttable. as/IN/as expected/VBN/expected /,/, this/DT/this program/NN/program generates/VBZ/generates a/DT/a square/NN/square seven-by-seven/JJ/seven-by-seven table/NN/table /:/: 1/LS/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 7/CD/7 2/CD/2 4/CD/4 6/CD/6 8/CD/8 10/CD/10 12/CD/12 14/CD/14 3/CD/3 6/CD/6 9/CD/9 12/CD/12 15/CD/15 18/CD/18 21/CD/21 4/CD/4 8/CD/8 12/CD/12 16/CD/16 20/CD/20 24/CD/24 28/CD/28 5/CD/5 10/CD/10 15/CD/15 20/CD/20 25/CD/25 30/CD/30 35/CD/35 6/CD/6 12/CD/12 18/CD/18 24/CD/24 30/CD/30 36/CD/36 42/CD/42 7/CD/7 14/CD/14 21/CD/21 28/CD/28 35/CD/35 42/CD/42 49/CD/49 when/WRB/when you/PRP/you generalize/VBP/generalize a/DT/a function/NN/function appropriately/RB/appropriately /,/, you/PRP/you often/RB/often get/VB/get a/DT/a program/NN/program with/IN/with capabilities/NNS/capabilities you/PRP/you didn/VBP/didn t/NN/t plan/NNP/plan. for/IN/for example/NN/example /,/, you/PRP/you might/MD/might notice/VB/notice that/IN/that /,/, because/IN/because ab/NN/ab =/:/= ba/NN/ba /,/, all/DT/all the/DT/the entries/NNS/entries in/IN/in the/DT/the table/NN/table appear/NN/appear twice/NNP/twice. you/PRP/you could/MD/could save/VB/save ink/NN/ink by/IN/by printing/NN/printing only/RB/only half/DT/half the/DT/the table/NNP/table. to/TO/to do/VB/do that/DT/that /,/, you/PRP/you only/RB/only have/VBP/have to/TO/to change/VB/change one/CD/one line/NN/line of/IN/of printmulttable/NNP/printmulttable. change/NN/change printmultiples/NNS/printmultiples /:/( i/PRP/i /,/, high/JJ/high /NN/) to/TO/to printmultiples/NNS/printmultiples /:/( i/PRP/i /,/, i/PRP/i /VBP/) and/CC/and you/PRP/you get/VBP/get 1/CD/1 2/CD/2 4/CD/4 3/CD/3 6/CD/6 9/CD/9 4/CD/4 8/CD/8 12/CD/12 16/CD/16 5/CD/5 10/CD/10 15/CD/15 20/CD/20 25/CD/25 6/CD/6 12/CD/12 18/CD/18 24/CD/24 30/CD/30 36/CD/36 7/CD/7 14/CD/14 21/CD/21 28/CD/28 35/CD/35 42/CD/42 49/CD/49 as/IN/as an/DT/an exercise/NN/exercise /,/, trace/NN/trace the/DT/the execution/NN/execution of/IN/of this/DT/this version/NN/version of/IN/of printmulttable/JJ/printmulttable and/CC/and figure/NN/figure out/RP/out how/WRB/how it/PRP/it works/NNP/works. 6.9/CD/6.9 functions/NNS/functions a/DT/a few/JJ/few times/NNS/times now/RB/now /,/, we/PRP/we have/VBP/have mentioned/VBN/mentioned all/DT/all the/DT/the things/NNS/things functions/NNS/functions are/VBP/are good/JJ/good for/NNP/for. by/IN/by now/RB/now /,/, you/PRP/you might/MD/might be/VB/be wondering/VBG/wondering what/WP/what exactly/RB/exactly those/DT/those things/NNS/things are/NNP/are. here/RB/here are/VBP/are some/DT/some of/IN/of them/PRP/them /:/: giving/VBG/giving a/DT/a name/NN/name to/TO/to a/DT/a sequence/NN/sequence of/IN/of statements/NNS/statements makes/VBZ/makes your/PRP$/your program/NN/program easier/NN/easier to/TO/to read/VB/read and/CC/and debug/NNP/debug. 70/CD/70 iteration/NN/iteration dividing/VBG/dividing a/DT/a long/JJ/long program/NN/program into/IN/into functions/NNS/functions allows/VBZ/allows you/PRP/you to/TO/to separate/VB/separate parts/NNS/parts of/IN/of the/DT/the program/NN/program /,/, debug/NN/debug them/PRP/them in/IN/in isolation/NN/isolation /,/, and/CC/and then/RB/then compose/VB/compose them/PRP/them into/IN/into a/DT/a whole/NNP/whole. functions/NNS/functions facilitate/VBP/facilitate both/DT/both recursion/NN/recursion and/CC/and iteration/NNP/iteration. well-designed/JJ/well-designed functions/NNS/functions are/VBP/are often/RB/often useful/JJ/useful for/IN/for many/JJ/many programs/NNP/programs. once/RB/once you/PRP/you write/VBP/write and/CC/and debug/NN/debug one/CD/one /,/, you/PRP/you can/MD/can reuse/VB/reuse it/NNP/it. 6.10/CD/6.10 glossary/JJ/glossary multiple/NN/multiple assignment/NN/assignment /:/: making/VBG/making more/JJR/more than/IN/than one/CD/one assignment/NN/assignment to/TO/to the/DT/the same/JJ/same variable/JJ/variable during/IN/during the/DT/the execution/NN/execution of/IN/of a/DT/a program/NNP/program. iteration/NN/iteration /:/: repeated/VBN/repeated execution/NN/execution of/IN/of a/DT/a set/NN/set of/IN/of statements/NNS/statements using/VBG/using either/DT/either a/DT/a recursive/JJ/recursive function/NN/function call/NN/call or/CC/or a/DT/a loop/NNP/loop. loop/NN/loop /:/: a/DT/a statement/NN/statement or/CC/or group/NN/group of/IN/of statements/NNS/statements that/WDT/that execute/NN/execute repeatedly/RB/repeatedly until/IN/until a/DT/a terminating/NN/terminating condition/NN/condition is/VBZ/is satisfied/NNP/satisfied. infinite/NN/infinite loop/NN/loop /:/: a/DT/a loop/NN/loop in/IN/in which/WDT/which the/DT/the terminating/VBG/terminating condition/NN/condition is/VBZ/is never/RB/never satisfied/NNP/satisfied. body/NN/body /:/: the/DT/the statements/NNS/statements inside/VBP/inside a/DT/a loop/NNP/loop. loop/NN/loop variable/JJ/variable /:/: a/DT/a variable/JJ/variable used/VBN/used as/IN/as part/NN/part of/IN/of the/DT/the terminating/NN/terminating condition/NN/condition of/IN/of a/DT/a loop/NNP/loop. tab/NN/tab /:/: a/DT/a special/JJ/special character/NN/character that/WDT/that causes/VBZ/causes the/DT/the cursor/NN/cursor to/TO/to move/VB/move to/TO/to the/DT/the next/JJ/next tab/NN/tab stop/NN/stop on/IN/on the/DT/the current/JJ/current line/NNP/line. newline/NN/newline /:/: a/DT/a special/JJ/special character/NN/character that/WDT/that causes/VBZ/causes the/DT/the cursor/NN/cursor to/TO/to move/VB/move to/TO/to the/DT/the beginning/NN/beginning of/IN/of the/DT/the next/JJ/next line/NNP/line. cursor/NN/cursor /:/: an/DT/an invisible/JJ/invisible marker/NN/marker that/WDT/that keeps/VBZ/keeps track/VBP/track of/IN/of where/WRB/where the/DT/the next/JJ/next character/NN/character will/MD/will be/VB/be printed/NNP/printed. escape/NN/escape sequence/NN/sequence /:/: an/DT/an escape/NN/escape character/NN/character /:/( \/:/\ /:/) followed/VBD/followed by/IN/by one/CD/one or/CC/or more/JJR/more printable/JJ/printable characters/NNS/characters used/VBN/used to/TO/to designate/VB/designate a/DT/a nonprintable/JJ/nonprintable character/NNP/character. encapsulate/NN/encapsulate /:/: to/TO/to divide/VB/divide a/DT/a large/JJ/large complex/NN/complex program/NN/program into/IN/into components/NNS/components /:/( like/IN/like functions/NNS/functions /VBP/) and/CC/and isolate/JJ/isolate the/DT/the components/NNS/components from/IN/from each/DT/each other/JJ/other /NN/( by/IN/by using/VBG/using local/JJ/local variables/NNS/variables /,/, for/IN/for example/NN/example /:/) /./. generalize/NN/generalize /:/: to/TO/to replace/VB/replace something/NN/something unnecessarily/RB/unnecessarily specific/JJ/specific /NN/( like/IN/like a/DT/a constant/JJ/constant value/NN/value /:/) with/IN/with something/NN/something appropriately/RB/appropriately general/JJ/general /NN/( like/IN/like a/DT/a variable/JJ/variable or/CC/or parameter/NN/parameter /:/) /./. generalization/NN/generalization makes/VBZ/makes code/NN/code more/JJR/more versatile/JJ/versatile /,/, more/RBR/more likely/JJ/likely to/TO/to be/VB/be reused/VBN/reused /,/, and/CC/and sometimes/RB/sometimes even/RB/even easier/JJR/easier to/TO/to write/NNP/write. development/NN/development plan/NN/plan /:/: a/DT/a process/NN/process for/IN/for developing/VBG/developing a/DT/a program/NNP/program. in/IN/in this/DT/this chapter/NN/chapter /,/, we/PRP/we demonstrated/VBD/demonstrated a/DT/a style/NN/style of/IN/of development/NN/development based/VBN/based on/IN/on developing/VBG/developing code/NN/code to/TO/to do/VB/do simple/JJ/simple /,/, specific/JJ/specific things/NNS/things and/CC/and then/RB/then encapsulating/VBG/encapsulating and/CC/and generalizing/NNP/generalizing. chapter/NN/chapter 7/CD/7 strings/NNS/strings 7.1/CD/7.1 a/DT/a compound/NN/compound data/NN/data type/NN/type so/RB/so far/RB/far we/PRP/we have/VBP/have seen/VBN/seen three/CD/three types/NNS/types /:/: int/NN/int /,/, float/JJ/float /,/, and/CC/and string/NNP/string. strings/NNS/strings are/VBP/are qualitatively/RB/qualitatively different/JJ/different from/IN/from the/DT/the other/JJ/other two/CD/two because/IN/because they/PRP/they are/VBP/are made/VBN/made up/RP/up of/IN/of smaller/JJR/smaller pieces/NNS/pieces characters/NNP/characters. types/NNS/types that/WDT/that comprise/VBP/comprise smaller/JJR/smaller pieces/NNS/pieces are/VBP/are called/VBN/called compound/NN/compound data/NNS/data types/NNP/types. depending/VBG/depending on/IN/on what/WP/what we/PRP/we are/VBP/are doing/VBG/doing /,/, we/PRP/we may/MD/may want/VB/want to/TO/to treat/VB/treat a/DT/a compound/NN/compound data/NN/data type/NN/type as/IN/as a/DT/a single/JJ/single thing/NN/thing /,/, or/CC/or we/PRP/we may/MD/may want/VB/want to/TO/to access/NN/access its/PRP$/its parts/NNP/parts. this/DT/this ambiguity/NN/ambiguity is/VBZ/is useful/NNP/useful. the/DT/the bracket/NN/bracket operator/NN/operator selects/NNS/selects a/DT/a single/JJ/single character/NN/character from/IN/from a/DT/a string/NNP/string. >/NNP/> >/NNP/> >/NNP/> fruit/NN/fruit =/:/= banana/NN/banana >/:/> >/:/> >/:/> letter/NN/letter =/:/= fruit/NN/fruit /:/[ 1/CD/1 /CD/] >/CD/> >/CD/> >/CD/> print/NN/print letter/NN/letter the/DT/the expression/NN/expression fruit/NN/fruit /:/[ 1/CD/1 /CD/] selects/NNS/selects character/JJR/character number/NN/number 1/CD/1 from/IN/from fruit/NNP/fruit. the/DT/the variable/JJ/variable letter/NN/letter refers/NNS/refers to/TO/to the/DT/the result/NNP/result. when/WRB/when we/PRP/we display/VBP/display letter/NN/letter /,/, we/PRP/we get/VBP/get a/DT/a surprise/NN/surprise /:/: a/DT/a the/DT/the first/JJ/first letter/NN/letter of/IN/of banana/NNS/banana is/VBZ/is not/RB/not a/NNP/a. unless/IN/unless you/PRP/you are/VBP/are a/DT/a computer/NN/computer scientist/NNP/scientist. in/IN/in that/DT/that case/NN/case you/PRP/you should/MD/should think/VB/think of/IN/of the/DT/the expression/NN/expression in/IN/in brackets/NNS/brackets as/IN/as an/DT/an offset/NN/offset from/IN/from the/DT/the beginning/NN/beginning of/IN/of the/DT/the string/NN/string /,/, and/CC/and the/DT/the offset/NN/offset of/IN/of the/DT/the first/JJ/first letter/NN/letter is/VBZ/is zero/NNP/zero. so/RB/so b/VB/b is/VBZ/is the/DT/the 0th/JJ/0th letter/NN/letter /:/( zero-eth/JJ/zero-eth /NN/) of/IN/of banana/NNS/banana /,/, a/DT/a is/VBZ/is the/DT/the 1th/JJ/1th letter/NN/letter /:/( one-eth/JJ/one-eth /NN/) /,/, and/CC/and n/NN/n is/VBZ/is the/DT/the 2th/JJ/2th /NN/( two-eth/JJ/two-eth /NN/) letter/NNP/letter. to/TO/to get/VB/get the/DT/the first/JJ/first letter/NN/letter of/IN/of a/DT/a string/NN/string /,/, you/PRP/you just/RB/just put/VBD/put 0/-NONE-/0 /,/, or/CC/or any/DT/any expression/NN/expression with/IN/with the/DT/the value/NN/value 0/-NONE-/0 /,/, in/IN/in the/DT/the brackets/NNS/brackets /:/: 72/CD/72 strings/NNS/strings >/:/> >/:/> >/:/> letter/NN/letter =/:/= fruit/NN/fruit /:/[ 0/-NONE-/0 /:/] >/:/> >/:/> >/:/> print/NN/print letter/NN/letter b/NN/b the/DT/the expression/NN/expression in/IN/in brackets/NNS/brackets is/VBZ/is called/VBN/called an/DT/an index/NNP/index. an/DT/an index/NN/index specifies/NNS/specifies a/DT/a member/NN/member of/IN/of an/DT/an ordered/VBN/ordered set/NN/set /,/, in/IN/in this/DT/this case/NN/case the/DT/the set/NN/set of/IN/of characters/NNS/characters in/IN/in the/DT/the string/NNP/string. the/DT/the index/NN/index indicates/VBZ/indicates which/WDT/which one/CD/one you/PRP/you want/VBP/want /,/, hence/NN/hence the/DT/the name/NNP/name. it/PRP/it can/MD/can be/VB/be any/DT/any integer/NN/integer expression/NNP/expression. 7.2/CD/7.2 length/NN/length the/DT/the len/NN/len function/NN/function returns/NNS/returns the/DT/the number/NN/number of/IN/of characters/NNS/characters in/IN/in a/DT/a string/NN/string /:/: >/:/> >/:/> >/:/> fruit/NN/fruit =/:/= banana/NN/banana >/:/> >/:/> >/:/> len/NN/len /:/( fruit/NN/fruit /:/) 6/CD/6 to/TO/to get/VB/get the/DT/the last/JJ/last letter/NN/letter of/IN/of a/DT/a string/NN/string /,/, you/PRP/you might/MD/might be/VB/be tempted/VBN/tempted to/TO/to try/VB/try something/NN/something like/IN/like this/DT/this /:/: length/NN/length =/:/= len/NN/len /:/( fruit/NN/fruit /:/) last/JJ/last =/NN/= fruit/NN/fruit /:/[ length/NN/length /:/] #/#/# error/NN/error !/./! that/IN/that won/NN/won t/NN/t work/NNP/work. it/PRP/it causes/VBZ/causes the/DT/the runtime/NN/runtime error/NN/error indexerror/NN/indexerror /:/: string/VBG/string index/NN/index out/IN/out of/IN/of range/NNP/range. the/DT/the reason/NN/reason is/VBZ/is that/IN/that there/EX/there is/VBZ/is no/DT/no 6th/JJ/6th letter/NN/letter in/IN/in banana/NNP/banana. since/IN/since we/PRP/we started/VBD/started counting/VBG/counting at/IN/at zero/NN/zero /,/, the/DT/the six/CD/six letters/NNS/letters are/VBP/are numbered/VBN/numbered 0/-NONE-/0 to/TO/to 5/CD/5. to/TO/to get/VB/get the/DT/the last/JJ/last character/NN/character /,/, we/PRP/we have/VBP/have to/TO/to subtract/VB/subtract 1/CD/1 from/IN/from length/NN/length /:/: length/NN/length =/:/= len/NN/len /:/( fruit/NN/fruit /:/) last/JJ/last =/NN/= fruit/NN/fruit /:/[ length-1/-NONE-/length-1 /:/] alternatively/RB/alternatively /,/, we/PRP/we can/MD/can use/VB/use negative/JJ/negative indices/NNS/indices /,/, which/WDT/which count/NN/count backward/VBD/backward from/IN/from the/DT/the end/NN/end of/IN/of the/DT/the string/NNP/string. the/DT/the expression/NN/expression fruit/NN/fruit /:/[ -1/-NONE-/-1 /:/] yields/NNS/yields the/DT/the last/JJ/last letter/NN/letter /,/, fruit/NN/fruit /:/[ -2/-NONE-/-2 /:/] yields/NNS/yields the/DT/the second/JJ/second to/TO/to last/JJ/last /,/, and/CC/and so/RB/so on/NNP/on. 7.3/CD/7.3 traversal/NN/traversal and/CC/and the/DT/the for/IN/for loop/NN/loop a/DT/a lot/NN/lot of/IN/of computations/NNS/computations involve/VBP/involve processing/VBG/processing a/DT/a string/NN/string one/CD/one character/NN/character at/IN/at a/DT/a time/NNP/time. often/RB/often they/PRP/they start/VBP/start at/IN/at the/DT/the beginning/NN/beginning /,/, select/NN/select each/DT/each character/NN/character in/IN/in turn/NN/turn /,/, do/VBP/do something/NN/something to/TO/to it/PRP/it /,/, and/CC/and continue/VB/continue until/IN/until the/DT/the end/NNP/end. this/DT/this pattern/NN/pattern of/IN/of processing/NN/processing is/VBZ/is called/VBN/called a/DT/a traversal/NNP/traversal. one/CD/one way/NN/way to/TO/to encode/VB/encode a/DT/a traversal/NN/traversal is/VBZ/is with/IN/with a/DT/a while/NN/while statement/NN/statement /:/: index/NN/index =/:/= 0/-NONE-/0 while/IN/while index/NN/index </:/< len/NN/len /:/( fruit/NN/fruit /:/) /:/: letter/NN/letter =/:/= fruit/NN/fruit /:/[ index/NN/index /:/] print/NN/print letter/NN/letter index/NN/index =/:/= index/NN/index +/:/+ 1/CD/1 7.3/CD/7.3 traversal/NN/traversal and/CC/and the/DT/the for/IN/for loop/NN/loop 73/CD/73 this/DT/this loop/NN/loop traverses/VBZ/traverses the/DT/the string/NN/string and/CC/and displays/NNS/displays each/DT/each letter/NN/letter on/IN/on a/DT/a line/NN/line by/IN/by itself/NNP/itself. the/DT/the loop/NN/loop condition/NN/condition is/VBZ/is index/NN/index </:/< len/NN/len /:/( fruit/NN/fruit /:/) /,/, so/RB/so when/WRB/when index/NN/index is/VBZ/is equal/JJ/equal to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the string/NN/string /,/, the/DT/the condition/NN/condition is/VBZ/is false/NN/false /,/, and/CC/and the/DT/the body/NN/body of/IN/of the/DT/the loop/NN/loop is/VBZ/is not/RB/not executed/NNP/executed. the/DT/the last/JJ/last character/NN/character accessed/VBD/accessed is/VBZ/is the/DT/the one/CD/one with/IN/with the/DT/the index/NN/index len/NN/len /:/( fruit/NN/fruit /:/) -1/-NONE-/-1 /,/, which/WDT/which is/VBZ/is the/DT/the last/JJ/last character/NN/character in/IN/in the/DT/the string/NNP/string. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function that/WDT/that takes/VBZ/takes a/DT/a string/NN/string as/IN/as an/DT/an argument/NN/argument and/CC/and outputs/NNS/outputs the/DT/the letters/NNS/letters backward/VBP/backward /,/, one/CD/one per/NN/per line/NNP/line. using/VBG/using an/DT/an index/NN/index to/TO/to traverse/VB/traverse a/DT/a set/NN/set of/IN/of values/NNS/values is/VBZ/is so/RB/so common/JJ/common that/IN/that python/NN/python provides/VBZ/provides an/DT/an alternative/JJ/alternative /,/, simpler/NN/simpler syntax/NN/syntax the/DT/the for/IN/for loop/NN/loop /:/: for/IN/for char/NN/char in/IN/in fruit/NN/fruit /:/: print/NN/print char/NN/char each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, the/DT/the next/JJ/next character/NN/character in/IN/in the/DT/the string/NN/string is/VBZ/is assigned/VBN/assigned to/TO/to the/DT/the variable/JJ/variable char/NNP/char. the/DT/the loop/NN/loop continues/VBZ/continues until/IN/until no/DT/no characters/NNS/characters are/VBP/are left/NNP/left. the/DT/the following/VBG/following example/NN/example shows/NNS/shows how/WRB/how to/TO/to use/VB/use concatenation/NN/concatenation and/CC/and a/DT/a for/IN/for loop/NN/loop to/TO/to generate/VB/generate an/DT/an abecedarian/JJ/abecedarian series/NNP/series. abecedarian/NN/abecedarian refers/NNS/refers to/TO/to a/DT/a series/NN/series or/CC/or list/NN/list in/IN/in which/WDT/which the/DT/the elements/NNS/elements appear/VBP/appear in/IN/in alphabetical/JJ/alphabetical order/NNP/order. for/IN/for example/NN/example /,/, in/IN/in robert/NN/robert mccloskey/NN/mccloskey s/NNS/s book/NN/book make/VBP/make way/NN/way for/IN/for ducklings/NNS/ducklings /,/, the/DT/the names/NNS/names of/IN/of the/DT/the ducklings/NNS/ducklings are/VBP/are jack/RB/jack /,/, kack/NN/kack /,/, lack/VBP/lack /,/, mack/NN/mack /,/, nack/NN/nack /,/, ouack/NN/ouack /,/, pack/NN/pack /,/, and/CC/and quack/NNP/quack. this/DT/this loop/NN/loop outputs/VBZ/outputs these/DT/these names/NNS/names in/IN/in order/NN/order /:/: prefixes/NNS/prefixes =/VBP/= jklmnopq/NN/jklmnopq suffix/NN/suffix =/:/= ack/NN/ack for/IN/for letter/NN/letter in/IN/in prefixes/NNS/prefixes /:/: print/NN/print letter/NN/letter +/:/+ suffix/NN/suffix the/DT/the output/NN/output of/IN/of this/DT/this program/NN/program is/VBZ/is /:/: jack/NN/jack kack/NN/kack lack/NN/lack mack/NN/mack nack/NN/nack oack/NN/oack pack/NN/pack qack/NN/qack of/IN/of course/NN/course /,/, that/IN/that s/NNS/s not/RB/not quite/RB/quite right/RB/right because/IN/because ouack/NN/ouack and/CC/and quack/NN/quack are/VBP/are misspelled/NNP/misspelled. as/IN/as an/DT/an exercise/NN/exercise /,/, modify/NN/modify the/DT/the program/NN/program to/TO/to fix/VB/fix this/DT/this error/NNP/error. 74/CD/74 strings/NNS/strings 7.4/CD/7.4 string/VBG/string slices/NNS/slices a/DT/a segment/NN/segment of/IN/of a/DT/a string/NN/string is/VBZ/is called/VBN/called a/DT/a slice/NNP/slice. selecting/NN/selecting a/DT/a slice/NN/slice is/VBZ/is similar/JJ/similar to/TO/to selecting/NN/selecting a/DT/a character/NN/character /:/: >/:/> >/:/> >/:/> s/NNS/s =/VBP/= peter/NN/peter /,/, paul/JJ/paul /,/, and/CC/and mary/JJ/mary >/NN/> >/:/> >/:/> print/NN/print s/NNS/s /:/[ 0/-NONE-/0 /:/: 5/CD/5 /CD/] peter/NN/peter >/:/> >/:/> >/:/> print/NN/print s/NNS/s /:/[ 7/CD/7 /:/: 11/CD/11 /CD/] paul/JJ/paul >/NN/> >/:/> >/:/> print/NN/print s/NNS/s /:/[ 17/CD/17 /:/: 21/CD/21 /CD/] mary/JJ/mary the/DT/the operator/NN/operator /:/[ n/NN/n /:/: m/NN/m /:/] returns/NNS/returns the/DT/the part/NN/part of/IN/of the/DT/the string/NN/string from/IN/from the/DT/the n-eth/JJ/n-eth character/NN/character to/TO/to the/DT/the m-eth/JJ/m-eth character/NN/character /,/, including/VBG/including the/DT/the first/JJ/first but/CC/but excluding/VBG/excluding the/DT/the last/NNP/last. this/DT/this behavior/NN/behavior is/VBZ/is counterintuitive/JJ/counterintuitive ;/:/; it/PRP/it makes/VBZ/makes more/JJR/more sense/NN/sense if/IN/if you/PRP/you imagine/VBP/imagine the/DT/the indices/NNS/indices pointing/VBG/pointing between/IN/between the/DT/the characters/NNS/characters /,/, as/IN/as in/IN/in the/DT/the following/JJ/following diagram/NN/diagram /:/: fruit/NN/fruit b/NN/b a/DT/a n/NN/n a/DT/a n/NN/n a/DT/a index/NN/index 0/-NONE-/0 1/CD/1 2/CD/2 3/CD/3 4/CD/4 5/CD/5 6/CD/6 if/IN/if you/PRP/you omit/VBP/omit the/DT/the first/JJ/first index/NN/index /:/( before/IN/before the/DT/the colon/NN/colon /:/) /,/, the/DT/the slice/NN/slice starts/VBZ/starts at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the string/NNP/string. if/IN/if you/PRP/you omit/VBP/omit the/DT/the second/JJ/second index/NN/index /,/, the/DT/the slice/NN/slice goes/VBZ/goes to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the string/NNP/string. thus/RB/thus /:/: >/:/> >/:/> >/:/> fruit/NN/fruit =/:/= banana/NN/banana >/:/> >/:/> >/:/> fruit/NN/fruit /:/[ /:/: 3/LS/3 /:/] ban/NN/ban >/:/> >/:/> >/:/> fruit/NN/fruit /:/[ 3/CD/3 /:/: /:/] ana/NNS/ana what/WP/what do/VBP/do you/PRP/you think/VB/think s/NNS/s /:/[ /:/: /:/] means/NNS/means 7.5/CD/7.5 string/VBG/string comparison/NN/comparison the/DT/the comparison/NN/comparison operators/NNS/operators work/VBP/work on/IN/on strings/NNP/strings. to/TO/to see/VB/see if/IN/if two/CD/two strings/NNS/strings are/VBP/are equal/JJ/equal /:/: if/IN/if word/NN/word =/:/= =/:/= banana/NNS/banana /:/: print/NN/print yes/NNS/yes /,/, we/PRP/we have/VBP/have no/DT/no bananas/NNS/bananas !/./! 7.6/CD/7.6 strings/NNS/strings are/VBP/are immutable/JJ/immutable 75/CD/75 other/JJ/other comparison/NN/comparison operations/NNS/operations are/VBP/are useful/JJ/useful for/IN/for putting/NN/putting words/NNS/words in/IN/in alphabetical/JJ/alphabetical order/NN/order /:/: if/IN/if word/NN/word </:/< banana/NN/banana /:/: print/NN/print your/PRP$/your word/NN/word /,/, +/:/+ word/NN/word +/:/+ /,/, comes/VBZ/comes before/IN/before banana/NNP/banana. elif/IN/elif word/NN/word >/:/> banana/NN/banana /:/: print/NN/print your/PRP$/your word/NN/word /,/, +/:/+ word/NN/word +/:/+ /,/, comes/VBZ/comes after/IN/after banana/NNP/banana. else/RB/else /:/: print/JJ/print yes/NNS/yes /,/, we/PRP/we have/VBP/have no/DT/no bananas/NNS/bananas !/./! you/PRP/you should/MD/should be/VB/be aware/JJ/aware /,/, though/IN/though /,/, that/IN/that python/NN/python does/VBZ/does not/RB/not handle/VB/handle upper/JJ/upper- and/CC/and lowercase/NN/lowercase letters/NNS/letters the/DT/the same/JJ/same way/NN/way that/IN/that people/NNS/people do/NNP/do. all/DT/all the/DT/the uppercase/NN/uppercase letters/NNS/letters come/VBP/come before/IN/before all/DT/all the/DT/the lowercase/NN/lowercase letters/NNP/letters. as/IN/as a/DT/a result/NN/result /:/: your/PRP$/your word/NN/word /,/, zebra/NN/zebra /,/, comes/VBZ/comes before/IN/before banana/NNP/banana. a/DT/a common/JJ/common way/NN/way to/TO/to address/NN/address this/DT/this problem/NN/problem is/VBZ/is to/TO/to convert/VB/convert strings/NNS/strings to/TO/to a/DT/a standard/JJ/standard format/NN/format /,/, such/JJ/such as/IN/as all/DT/all lowercase/NN/lowercase /,/, before/IN/before performing/VBG/performing the/DT/the comparison/NNP/comparison. a/DT/a more/JJR/more difficult/JJ/difficult problem/NN/problem is/VBZ/is making/VBG/making the/DT/the program/NN/program realize/NN/realize that/IN/that zebras/NNS/zebras are/VBP/are not/RB/not fruit/NNP/fruit. 7.6/CD/7.6 strings/NNS/strings are/VBP/are immutable/JJ/immutable it/PRP/it is/VBZ/is tempting/VBG/tempting to/TO/to use/VB/use the/DT/the /NN/[ /:/] operator/NN/operator on/IN/on the/DT/the left/NN/left side/NN/side of/IN/of an/DT/an assignment/NN/assignment /,/, with/IN/with the/DT/the intention/NN/intention of/IN/of changing/VBG/changing a/DT/a character/NN/character in/IN/in a/DT/a string/NNP/string. for/IN/for example/NN/example /:/: greeting/VBG/greeting =/:/= hello/NN/hello /,/, world/NN/world !/./! greeting/VBG/greeting /NN/[ 0/-NONE-/0 /./] =/:/= j/NN/j #/#/# error/NN/error !/./! print/NN/print greeting/VBG/greeting instead/RB/instead of/IN/of producing/VBG/producing the/DT/the output/NN/output jello/NN/jello /,/, world/NN/world !/./! /,/, this/DT/this code/NN/code produces/VBZ/produces the/DT/the runtime/NN/runtime error/NN/error typeerror/NN/typeerror /:/: object/NN/object doesn/NN/doesn t/NN/t support/NN/support item/NN/item assignment/NNP/assignment. strings/NNS/strings are/VBP/are immutable/JJ/immutable /,/, which/WDT/which means/VBZ/means you/PRP/you can/MD/can t/VB/t change/NN/change an/DT/an existing/VBG/existing string/NNP/string. the/DT/the best/JJS/best you/PRP/you can/MD/can do/VB/do is/VBZ/is create/VB/create a/DT/a new/JJ/new string/NN/string that/WDT/that is/VBZ/is a/DT/a variation/NN/variation on/IN/on the/DT/the original/JJ/original /:/: greeting/VBG/greeting =/:/= hello/NN/hello /,/, world/NN/world !/./! newgreeting/VBG/newgreeting =/NN/= j/NN/j +/:/+ greeting/VBG/greeting /:/[ 1/CD/1 /:/: /:/] print/NN/print newgreeting/NN/newgreeting the/DT/the solution/NN/solution here/RB/here is/VBZ/is to/TO/to concatenate/VB/concatenate a/DT/a new/JJ/new first/JJ/first letter/NN/letter onto/IN/onto a/DT/a slice/NN/slice of/IN/of greeting/NNP/greeting. this/DT/this operation/NN/operation has/VBZ/has no/DT/no effect/NN/effect on/IN/on the/DT/the original/JJ/original string/NNP/string. 76/CD/76 strings/NNS/strings 7.7/CD/7.7 a/DT/a find/NN/find function/NN/function what/WP/what does/VBZ/does the/DT/the following/VBG/following function/NN/function do/VB/do def/NN/def find/VB/find /:/( str/NN/str /,/, ch/NN/ch /:/) /:/: index/NN/index =/:/= 0/-NONE-/0 while/IN/while index/NN/index </:/< len/NN/len /:/( str/NN/str /:/) /:/: if/IN/if str/NN/str /:/[ index/NN/index /:/] =/:/= =/:/= ch/NN/ch /:/: return/NN/return index/NN/index index/NN/index =/:/= index/NN/index +/:/+ 1/CD/1 return/NN/return -1/-NONE-/-1 in/IN/in a/DT/a sense/NN/sense /,/, find/VBP/find is/VBZ/is the/DT/the opposite/JJ/opposite of/IN/of the/DT/the /NNP/[ /NNP/] operator/NNP/operator. instead/RB/instead of/IN/of taking/VBG/taking an/DT/an index/NN/index and/CC/and extracting/VBG/extracting the/DT/the corresponding/VBG/corresponding character/NN/character /,/, it/PRP/it takes/VBZ/takes a/DT/a character/NN/character and/CC/and finds/NNS/finds the/DT/the index/NN/index where/WRB/where that/IN/that character/NN/character appears/NNP/appears. if/IN/if the/DT/the character/NN/character is/VBZ/is not/RB/not found/VBN/found /,/, the/DT/the function/NN/function returns/NNS/returns -1/NNP/-1. this/DT/this is/VBZ/is the/DT/the first/JJ/first example/NN/example we/PRP/we have/VBP/have seen/VBN/seen of/IN/of a/DT/a return/NN/return statement/NN/statement inside/NN/inside a/DT/a loop/NNP/loop. if/IN/if str/NN/str /:/[ index/NN/index /:/] =/:/= =/:/= ch/NN/ch /,/, the/DT/the function/NN/function returns/NNS/returns immediately/RB/immediately /,/, breaking/VBG/breaking out/RP/out of/IN/of the/DT/the loop/NN/loop prematurely/NNP/prematurely. if/IN/if the/DT/the character/NN/character doesn/NN/doesn t/NN/t appear/NN/appear in/IN/in the/DT/the string/NN/string /,/, then/RB/then the/DT/the program/NN/program exits/NNS/exits the/DT/the loop/NN/loop normally/RB/normally and/CC/and returns/NNS/returns -1/NNP/-1. this/DT/this pattern/NN/pattern of/IN/of computation/NN/computation is/VBZ/is sometimes/RB/sometimes called/VBN/called a/DT/a eureka/NN/eureka traversal/NN/traversal because/IN/because as/IN/as soon/RB/soon as/IN/as we/PRP/we find/VBP/find what/WP/what we/PRP/we are/VBP/are looking/VBG/looking for/IN/for /,/, we/PRP/we can/MD/can cry/VB/cry eureka/NN/eureka !/./! and/CC/and stop/VB/stop looking/NNP/looking. as/IN/as an/DT/an exercise/NN/exercise /,/, modify/NN/modify the/DT/the find/NN/find function/NN/function so/RB/so that/IN/that it/PRP/it has/VBZ/has a/DT/a third/JJ/third parameter/NN/parameter /,/, the/DT/the index/NN/index in/IN/in the/DT/the string/NN/string where/WRB/where it/PRP/it should/MD/should start/VB/start looking/NNP/looking. 7.8/CD/7.8 looping/VBG/looping and/CC/and counting/VBG/counting the/DT/the following/VBG/following program/NN/program counts/NNS/counts the/DT/the number/NN/number of/IN/of times/NNS/times the/DT/the letter/NN/letter a/DT/a appears/VBZ/appears in/IN/in a/DT/a string/NN/string /:/: fruit/NN/fruit =/:/= banana/NN/banana count/NN/count =/:/= 0/-NONE-/0 for/IN/for char/NN/char in/IN/in fruit/NN/fruit /:/: if/IN/if char/NN/char =/:/= =/:/= a/DT/a /:/: count/NN/count =/:/= count/NN/count +/:/+ 1/CD/1 print/NN/print count/NN/count this/DT/this program/NN/program demonstrates/VBZ/demonstrates another/DT/another pattern/NN/pattern of/IN/of computation/NN/computation called/VBN/called a/DT/a counter/NNP/counter. the/DT/the variable/JJ/variable count/NN/count is/VBZ/is initialized/VBN/initialized to/TO/to 0/-NONE-/0 and/CC/and then/RB/then incremented/VBD/incremented each/DT/each time/NN/time an/DT/an a/DT/a is/VBZ/is 7.9/CD/7.9 the/DT/the string/NN/string module/NN/module 77/CD/77 found/NNP/found. /NNP/( to/TO/to increment/VB/increment is/VBZ/is to/TO/to increase/VB/increase by/IN/by one/CD/one ;/:/; it/PRP/it is/VBZ/is the/DT/the opposite/JJ/opposite of/IN/of decrement/NN/decrement /,/, and/CC/and unrelated/VBD/unrelated to/TO/to excrement/VB/excrement /,/, which/WDT/which is/VBZ/is a/DT/a noun/NNP/noun. /NNP/) when/WRB/when the/DT/the loop/NN/loop exits/VBZ/exits /,/, count/NN/count contains/VBZ/contains the/DT/the result/NN/result the/DT/the total/NN/total number/NN/number of/IN/of a/DT/a s/NNP/s. as/IN/as an/DT/an exercise/NN/exercise /,/, encapsulate/JJ/encapsulate this/DT/this code/NN/code in/IN/in a/DT/a function/NN/function named/VBN/named countletters/NNS/countletters /,/, and/CC/and generalize/VB/generalize it/PRP/it so/RB/so that/IN/that it/PRP/it accepts/VBZ/accepts the/DT/the string/NN/string and/CC/and the/DT/the letter/NN/letter as/IN/as arguments/NNP/arguments. as/IN/as a/DT/a second/JJ/second exercise/NN/exercise /,/, rewrite/JJ/rewrite this/DT/this function/NN/function so/IN/so that/IN/that instead/RB/instead of/IN/of traversing/VBG/traversing the/DT/the string/VBG/string /,/, it/PRP/it uses/VBZ/uses the/DT/the three-parameter/JJ/three-parameter version/NN/version of/IN/of find/NN/find from/IN/from the/DT/the previous/NNP/previous. 7.9/CD/7.9 the/DT/the string/NN/string module/NN/module the/DT/the string/NN/string module/NN/module contains/VBZ/contains useful/JJ/useful functions/NNS/functions that/WDT/that manipulate/NN/manipulate strings/NNP/strings. as/IN/as usual/JJ/usual /,/, we/PRP/we have/VBP/have to/TO/to import/VB/import the/DT/the module/NN/module before/IN/before we/PRP/we can/MD/can use/VB/use it/PRP/it /:/: >/:/> >/:/> >/:/> import/NN/import string/NN/string the/DT/the string/NN/string module/NN/module includes/VBZ/includes a/DT/a function/NN/function named/VBN/named find/NN/find that/IN/that does/VBZ/does the/DT/the same/JJ/same thing/NN/thing as/IN/as the/DT/the function/NN/function we/PRP/we wrote/NNP/wrote. to/TO/to call/VB/call it/PRP/it we/PRP/we have/VBP/have to/TO/to specify/VB/specify the/DT/the name/NN/name of/IN/of the/DT/the module/NN/module and/CC/and the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function using/VBG/using dot/NN/dot notation/NNP/notation. >/NNP/> >/NNP/> >/NNP/> fruit/NN/fruit =/:/= banana/NN/banana >/:/> >/:/> >/:/> index/NN/index =/:/= string.find/JJ/string.find /NN/( fruit/NN/fruit /,/, a/DT/a /NN/) >/:/> >/:/> >/:/> print/NN/print index/NN/index 1/CD/1 this/DT/this example/NN/example demonstrates/VBZ/demonstrates one/CD/one of/IN/of the/DT/the benefits/NNS/benefits of/IN/of modules/NNS/modules they/PRP/they help/VBP/help avoid/JJ/avoid collisions/NNS/collisions between/IN/between the/DT/the names/NNS/names of/IN/of built-in/JJ/built-in functions/NNS/functions and/CC/and user-defined/JJ/user-defined functions/NNP/functions. by/IN/by using/VBG/using dot/NN/dot notation/NN/notation we/PRP/we can/MD/can specify/VB/specify which/WDT/which version/NN/version of/IN/of find/NN/find we/PRP/we want/NNP/want. actually/RB/actually /,/, string.find/JJ/string.find is/VBZ/is more/RBR/more general/JJ/general than/IN/than our/PRP$/our version/NNP/version. first/RB/first /,/, it/PRP/it can/MD/can find/VB/find substrings/NNS/substrings /,/, not/RB/not just/RB/just characters/NNS/characters /:/: >/:/> >/:/> >/:/> string.find/JJ/string.find /NN/( banana/NNS/banana /,/, na/NN/na /:/) 2/CD/2 also/RB/also /,/, it/PRP/it takes/VBZ/takes an/DT/an additional/JJ/additional argument/NN/argument that/WDT/that specifies/VBZ/specifies the/DT/the index/NN/index it/PRP/it should/MD/should start/VB/start at/IN/at /:/: >/:/> >/:/> >/:/> string.find/JJ/string.find /NN/( banana/NNS/banana /,/, na/NN/na /,/, 3/CD/3 /:/) 4/CD/4 or/CC/or it/PRP/it can/MD/can take/VB/take two/CD/two additional/JJ/additional arguments/NNS/arguments that/WDT/that specify/NN/specify a/DT/a range/NN/range of/IN/of indices/NNS/indices /:/: 78/CD/78 strings/NNS/strings >/:/> >/:/> >/:/> string.find/JJ/string.find /NN/( bob/NN/bob /,/, b/NN/b /,/, 1/CD/1 /,/, 2/CD/2 /:/) -1/-NONE-/-1 in/IN/in this/DT/this example/NN/example /,/, the/DT/the search/NN/search fails/VBZ/fails because/IN/because the/DT/the letter/NN/letter b/NN/b does/VBZ/does not/RB/not appear/VB/appear in/IN/in the/DT/the index/NN/index range/NN/range from/IN/from 1/CD/1 to/TO/to 2/CD/2 /CD/( not/RB/not including/VBG/including 2/CD/2 /CD/) /./. 7.10/CD/7.10 character/NN/character classification/NN/classification it/PRP/it is/VBZ/is often/RB/often helpful/JJ/helpful to/TO/to examine/NN/examine a/DT/a character/NN/character and/CC/and test/NN/test whether/IN/whether it/PRP/it is/VBZ/is upper/-NONE-/upper- or/CC/or lowercase/VB/lowercase /,/, or/CC/or whether/IN/whether it/PRP/it is/VBZ/is a/DT/a character/NN/character or/CC/or a/DT/a digit/NNP/digit. the/DT/the string/NN/string module/NN/module provides/VBZ/provides several/JJ/several constants/NNS/constants that/WDT/that are/VBP/are useful/JJ/useful for/IN/for these/DT/these purposes/NNP/purposes. the/DT/the string/NN/string string.lowercase/NN/string.lowercase contains/VBZ/contains all/DT/all of/IN/of the/DT/the letters/NNS/letters that/WDT/that the/DT/the system/NN/system considers/NNS/considers to/TO/to be/VB/be lowercase/NNP/lowercase. similarly/RB/similarly /,/, string.uppercase/JJ/string.uppercase contains/NNS/contains all/DT/all of/IN/of the/DT/the uppercase/NN/uppercase letters/NNP/letters. try/NN/try the/DT/the following/VBG/following and/CC/and see/VB/see what/WP/what you/PRP/you get/VBP/get /:/: >/:/> >/:/> >/:/> print/NN/print string.lowercase/NN/string.lowercase >/:/> >/:/> >/:/> print/NN/print string.uppercase/NN/string.uppercase >/:/> >/:/> >/:/> print/NN/print string.digits/NNS/string.digits we/PRP/we can/MD/can use/VB/use these/DT/these constants/NNS/constants and/CC/and find/VBP/find to/TO/to classify/VB/classify characters/NNP/characters. for/IN/for example/NN/example /,/, if/IN/if find/NN/find /:/( lowercase/NN/lowercase /,/, ch/NN/ch /:/) returns/NNS/returns a/DT/a value/NN/value other/JJ/other than/IN/than -1/-NONE-/-1 /,/, then/RB/then ch/JJ/ch must/NN/must be/VB/be lowercase/NN/lowercase /:/: def/NN/def islower/NN/islower /:/( ch/NN/ch /:/) /:/: return/NN/return string.find/JJ/string.find /NN/( string.lowercase/NN/string.lowercase /,/, ch/NN/ch /:/) !/./! =/:/= -1/-NONE-/-1 alternatively/RB/alternatively /,/, we/PRP/we can/MD/can take/VB/take advantage/NN/advantage of/IN/of the/DT/the in/IN/in operator/NN/operator /,/, which/WDT/which determines/NNS/determines whether/IN/whether a/DT/a character/NN/character appears/VBZ/appears in/IN/in a/DT/a string/NN/string /:/: def/NN/def islower/NN/islower /:/( ch/NN/ch /:/) /:/: return/NN/return ch/NN/ch in/IN/in string.lowercase/NN/string.lowercase as/IN/as yet/RB/yet another/DT/another alternative/NN/alternative /,/, we/PRP/we can/MD/can use/VB/use the/DT/the comparison/NN/comparison operator/NN/operator /:/: def/NN/def islower/NN/islower /:/( ch/NN/ch /:/) /:/: return/NN/return a/DT/a </NN/< =/:/= ch/NN/ch </:/< =/:/= z/NN/z if/IN/if ch/NN/ch is/VBZ/is between/IN/between a/DT/a and/CC/and z/NN/z /,/, it/PRP/it must/MD/must be/VB/be a/DT/a lowercase/NN/lowercase letter/NNP/letter. as/IN/as an/DT/an exercise/NN/exercise /,/, discuss/VBZ/discuss which/WDT/which version/NN/version of/IN/of islower/JJR/islower you/PRP/you think/VBP/think will/MD/will be/VB/be fastest/NNP/fastest. can/MD/can you/PRP/you think/VB/think of/IN/of other/JJ/other reasons/NNS/reasons besides/VBZ/besides speed/VBN/speed to/TO/to prefer/VB/prefer one/CD/one or/CC/or the/DT/the other/JJ/other another/DT/another constant/NN/constant defined/VBD/defined in/IN/in the/DT/the string/NN/string module/NN/module may/MD/may surprise/VB/surprise you/PRP/you when/WRB/when you/PRP/you print/VBP/print it/PRP/it /:/: 7.11/CD/7.11 glossary/JJ/glossary 79/CD/79 >/CD/> >/CD/> >/CD/> print/NN/print string.whitespace/NN/string.whitespace whitespace/NN/whitespace characters/NNS/characters move/VB/move the/DT/the cursor/NN/cursor without/IN/without printing/NN/printing anything/NNP/anything. they/PRP/they create/VBP/create the/DT/the white/JJ/white space/NN/space between/IN/between visible/JJ/visible characters/NNS/characters /:/( at/IN/at least/JJS/least on/IN/on white/NN/white paper/NN/paper /:/) /./. the/DT/the constant/NN/constant string.whitespace/NN/string.whitespace contains/VBZ/contains all/DT/all the/DT/the whitespace/NN/whitespace characters/NNS/characters /,/, including/VBG/including space/NN/space /,/, tab/NN/tab /:/( \/:/\ t/NN/t /:/) /,/, and/CC/and newline/NN/newline /:/( \/:/\ n/NN/n /:/) /./. there/EX/there are/VBP/are other/JJ/other useful/JJ/useful functions/NNS/functions in/IN/in the/DT/the string/NN/string module/NN/module /,/, but/CC/but this/DT/this book/NN/book isn/NN/isn t/NN/t intended/VBD/intended to/TO/to be/VB/be a/DT/a reference/NN/reference manual/NNP/manual. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, the/DT/the python/NN/python library/NN/library reference/NN/reference is/NNP/is. along/IN/along with/IN/with a/DT/a wealth/NN/wealth of/IN/of other/JJ/other documentation/NN/documentation /,/, it/PRP/it s/VBZ/s available/JJ/available from/IN/from the/DT/the python/NN/python website/NN/website /,/, www.python.org/NNP/www.python.org. 7.11/CD/7.11 glossary/JJ/glossary compound/NN/compound data/NNS/data type/NN/type /:/: a/DT/a data/NN/data type/NN/type in/IN/in which/WDT/which the/DT/the values/NNS/values are/VBP/are made/VBN/made up/RP/up of/IN/of components/NNS/components /,/, or/CC/or elements/NNS/elements /,/, that/IN/that are/VBP/are themselves/NNS/themselves values/NNP/values. traverse/NN/traverse /:/: to/TO/to iterate/VB/iterate through/IN/through the/DT/the elements/NNS/elements of/IN/of a/DT/a set/NN/set /,/, performing/VBG/performing a/DT/a similar/JJ/similar operation/NN/operation on/IN/on each/NNP/each. index/NN/index /:/: a/DT/a variable/JJ/variable or/CC/or value/NN/value used/VBN/used to/TO/to select/VB/select a/DT/a member/NN/member of/IN/of an/DT/an ordered/VBN/ordered set/NN/set /,/, such/JJ/such as/IN/as a/DT/a character/NN/character from/IN/from a/DT/a string/NNP/string. slice/NN/slice /:/: a/DT/a part/NN/part of/IN/of a/DT/a string/NN/string specified/VBN/specified by/IN/by a/DT/a range/NN/range of/IN/of indices/NNP/indices. mutable/JJ/mutable /:/: a/DT/a compound/NN/compound data/NN/data types/NNS/types whose/WP$/whose elements/NNS/elements can/MD/can be/VB/be assigned/VBN/assigned new/JJ/new values/NNP/values. counter/NN/counter /:/: a/DT/a variable/JJ/variable used/VBN/used to/TO/to count/VB/count something/NN/something /,/, usually/RB/usually initialized/VBN/initialized to/TO/to zero/VB/zero and/CC/and then/RB/then incremented/NNP/incremented. increment/NN/increment /:/: to/TO/to increase/VB/increase the/DT/the value/NN/value of/IN/of a/DT/a variable/JJ/variable by/IN/by one/NNP/one. decrement/NN/decrement /:/: to/TO/to decrease/VB/decrease the/DT/the value/NN/value of/IN/of a/DT/a variable/JJ/variable by/IN/by one/NNP/one. whitespace/NN/whitespace /:/: any/DT/any of/IN/of the/DT/the characters/NNS/characters that/WDT/that move/NN/move the/DT/the cursor/NN/cursor without/IN/without printing/NN/printing visible/JJ/visible characters/NNP/characters. the/DT/the constant/NN/constant string.whitespace/NN/string.whitespace contains/VBZ/contains all/DT/all the/DT/the whitespace/NN/whitespace characters/NNP/characters. 80/CD/80 strings/NNS/strings chapter/NN/chapter 8/CD/8 lists/NNS/lists a/DT/a list/NN/list is/VBZ/is an/DT/an ordered/VBN/ordered set/NN/set of/IN/of values/NNS/values /,/, where/WRB/where each/DT/each value/NN/value is/VBZ/is identified/VBN/identified by/IN/by an/DT/an index/NNP/index. the/DT/the values/NNS/values that/WDT/that make/VBP/make up/RP/up a/DT/a list/NN/list are/VBP/are called/VBN/called its/PRP$/its elements/NNP/elements. lists/NNS/lists are/VBP/are similar/JJ/similar to/TO/to strings/NNS/strings /,/, which/WDT/which are/VBP/are ordered/VBN/ordered sets/NNS/sets of/IN/of characters/NNS/characters /,/, except/IN/except that/DT/that the/DT/the elements/NNS/elements of/IN/of a/DT/a list/NN/list can/MD/can have/VB/have any/DT/any type/NNP/type. lists/VBZ/lists and/CC/and strings/NNS/strings and/CC/and other/JJ/other things/NNS/things that/IN/that behave/JJ/behave like/IN/like ordered/VBN/ordered sets/NNS/sets are/VBP/are called/VBN/called sequences/NNP/sequences. 8.1/CD/8.1 list/NN/list values/NNS/values there/EX/there are/VBP/are several/JJ/several ways/NNS/ways to/TO/to create/VB/create a/DT/a new/JJ/new list/NN/list ;/:/; the/DT/the simplest/JJS/simplest is/VBZ/is to/TO/to enclose/VB/enclose the/DT/the elements/NNS/elements in/IN/in square/JJ/square brackets/NNS/brackets /:/( /:/[ and/CC/and /:/] /:/) /:/: /:/[ 10/CD/10 /,/, 20/CD/20 /,/, 30/CD/30 /,/, 40/CD/40 /:/] /CD/[ spam/NN/spam /,/, bungee/NN/bungee /,/, swallow/JJ/swallow /NN/] the/DT/the first/JJ/first example/NN/example is/VBZ/is a/DT/a list/NN/list of/IN/of four/CD/four integers/NNP/integers. the/DT/the second/JJ/second is/VBZ/is a/DT/a list/NN/list of/IN/of three/CD/three strings/NNP/strings. the/DT/the elements/NNS/elements of/IN/of a/DT/a list/NN/list don/NN/don t/NN/t have/VBP/have to/TO/to be/VB/be the/DT/the same/JJ/same type/NNP/type. the/DT/the following/VBG/following list/NN/list contains/NNS/contains a/DT/a string/VBG/string /,/, a/DT/a float/JJ/float /,/, an/DT/an integer/NN/integer /,/, and/CC/and /:/( mirabile/JJ/mirabile dictu/NN/dictu /:/) another/DT/another list/NN/list /:/: /:/[ hello/NN/hello /,/, 2.0/CD/2.0 /,/, 5/CD/5 /,/, /NNP/[ 10/CD/10 /,/, 20/CD/20 /:/] /CD/] a/DT/a list/NN/list within/IN/within another/DT/another list/NN/list is/VBZ/is said/VBN/said to/TO/to be/VB/be nested/NNP/nested. lists/NNS/lists that/WDT/that contain/NN/contain consecutive/VBP/consecutive integers/NNS/integers are/VBP/are common/JJ/common /,/, so/RB/so python/RB/python provides/VBZ/provides a/DT/a simple/JJ/simple way/NN/way to/TO/to create/VB/create them/PRP/them /:/: >/:/> >/:/> >/:/> range/NN/range /:/( 1,5/CD/1,5 /CD/) /CD/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /:/] 82/CD/82 lists/NNS/lists the/DT/the range/NN/range function/NN/function takes/VBZ/takes two/CD/two arguments/NNS/arguments and/CC/and returns/NNS/returns a/DT/a list/NN/list that/WDT/that contains/VBZ/contains all/DT/all the/DT/the integers/NNS/integers from/IN/from the/DT/the first/JJ/first to/TO/to the/DT/the second/JJ/second /,/, including/VBG/including the/DT/the first/JJ/first but/CC/but not/RB/not including/VBG/including the/DT/the second/JJ/second !/./! there/EX/there are/VBP/are two/CD/two other/JJ/other forms/NNS/forms of/IN/of range/NNP/range. with/IN/with a/DT/a single/JJ/single argument/NN/argument /,/, it/PRP/it creates/VBZ/creates a/DT/a list/NN/list that/WDT/that starts/VBZ/starts at/IN/at 0/-NONE-/0 /:/: >/:/> >/:/> >/:/> range/NN/range /:/( 10/CD/10 /CD/) /CD/[ 0/-NONE-/0 /,/, 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /,/, 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 /:/] if/IN/if there/EX/there is/VBZ/is a/DT/a third/JJ/third argument/NN/argument /,/, it/PRP/it specifies/VBZ/specifies the/DT/the space/NN/space between/IN/between successive/JJ/successive values/NNS/values /,/, which/WDT/which is/VBZ/is called/VBN/called the/DT/the step/NN/step size/NNP/size. this/DT/this example/NN/example counts/VBZ/counts from/IN/from 1/CD/1 to/TO/to 10/CD/10 by/IN/by steps/NNS/steps of/IN/of 2/CD/2 /:/: >/:/> >/:/> >/:/> range/NN/range /:/( 1/CD/1 /,/, 10/CD/10 /,/, 2/CD/2 /:/) /CD/[ 1/CD/1 /,/, 3/CD/3 /,/, 5/CD/5 /,/, 7/CD/7 /,/, 9/CD/9 /:/] finally/RB/finally /,/, there/EX/there is/VBZ/is a/DT/a special/JJ/special list/NN/list that/WDT/that contains/VBZ/contains no/DT/no elements/NNP/elements. it/PRP/it is/VBZ/is called/VBN/called the/DT/the empty/NN/empty list/NN/list /,/, and/CC/and it/PRP/it is/VBZ/is denoted/VBN/denoted /-NONE-/[ /:/] /./. with/IN/with all/DT/all these/DT/these ways/NNS/ways to/TO/to create/VB/create lists/NNS/lists /,/, it/PRP/it would/MD/would be/VB/be disappointing/JJ/disappointing if/IN/if we/PRP/we couldn/VBP/couldn t/NN/t assign/NN/assign list/NN/list values/NNS/values to/TO/to variables/NNS/variables or/CC/or pass/NN/pass lists/NNS/lists as/IN/as arguments/NNS/arguments to/TO/to functions/NNP/functions. we/PRP/we can/NNP/can. vocabulary/JJ/vocabulary =/NN/= /:/[ ameliorate/NN/ameliorate /,/, castigate/JJ/castigate /,/, defenestrate/JJ/defenestrate /NN/] numbers/NNS/numbers =/:/= /:/[ 17/CD/17 /,/, 123/CD/123 /:/] empty/JJ/empty =/NN/= /:/[ /:/] print/NN/print vocabulary/NN/vocabulary /,/, numbers/NNS/numbers /,/, empty/JJ/empty /NN/[ ameliorate/NN/ameliorate /,/, castigate/JJ/castigate /,/, defenestrate/JJ/defenestrate /NN/] /:/[ 17/CD/17 /,/, 123/CD/123 /:/] /CD/[ /CD/] 8.2/CD/8.2 accessing/VBG/accessing elements/NNS/elements the/DT/the syntax/NN/syntax for/IN/for accessing/NN/accessing the/DT/the elements/NNS/elements of/IN/of a/DT/a list/NN/list is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the syntax/NN/syntax for/IN/for accessing/NN/accessing the/DT/the characters/NNS/characters of/IN/of a/DT/a string/NN/string the/DT/the bracket/NN/bracket operator/NN/operator /:/( /:/[ /:/] /:/) /./. the/DT/the expression/NN/expression inside/NN/inside the/DT/the brackets/NNS/brackets specifies/VBZ/specifies the/DT/the index/NNP/index. remember/NN/remember that/WDT/that the/DT/the indices/NNS/indices start/VBP/start at/IN/at 0/-NONE-/0 /:/: print/NN/print numbers/NNS/numbers /:/[ 0/-NONE-/0 /:/] numbers/NNS/numbers /VBP/[ 1/CD/1 /CD/] =/CD/= 5/CD/5 the/DT/the bracket/NN/bracket operator/NN/operator can/MD/can appear/VB/appear anywhere/RB/anywhere in/IN/in an/DT/an expression/NNP/expression. when/WRB/when it/PRP/it appears/VBZ/appears on/IN/on the/DT/the left/NN/left side/NN/side of/IN/of an/DT/an assignment/NN/assignment /,/, it/PRP/it changes/VBZ/changes one/CD/one of/IN/of the/DT/the elements/NNS/elements in/IN/in the/DT/the list/NN/list /,/, so/RB/so the/DT/the one-eth/JJ/one-eth element/NN/element of/IN/of numbers/NNS/numbers /,/, which/WDT/which used/VBN/used to/TO/to be/VB/be 123/CD/123 /,/, is/VBZ/is now/RB/now 5/CD/5. any/DT/any integer/NN/integer expression/NN/expression can/MD/can be/VB/be used/VBN/used as/IN/as an/DT/an index/NN/index /:/: >/:/> >/:/> >/:/> numbers/NNS/numbers /VBP/[ 3-2/CD/3-2 /CD/] 5/CD/5 >/CD/> >/CD/> >/CD/> numbers/NNS/numbers /:/[ 1.0/CD/1.0 /CD/] typeerror/NN/typeerror /:/: sequence/NN/sequence index/NN/index must/MD/must be/VB/be integer/JJR/integer 8.3/CD/8.3 list/NN/list length/NN/length 83/CD/83 if/IN/if you/PRP/you try/VBP/try to/TO/to read/VB/read or/CC/or write/VB/write an/DT/an element/NN/element that/IN/that does/VBZ/does not/RB/not exist/VB/exist /,/, you/PRP/you get/VBP/get a/DT/a runtime/NN/runtime error/NN/error /:/: >/:/> >/:/> >/:/> numbers/NNS/numbers /VBP/[ 2/CD/2 /CD/] =/CD/= 5/CD/5 indexerror/NN/indexerror /:/: list/NN/list assignment/NN/assignment index/NN/index out/IN/out of/IN/of range/NN/range if/IN/if an/DT/an index/NN/index has/VBZ/has a/DT/a negative/JJ/negative value/NN/value /,/, it/PRP/it counts/VBZ/counts backward/NN/backward from/IN/from the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /:/: >/:/> >/:/> >/:/> numbers/NNS/numbers /VBP/[ -1/-NONE-/-1 /:/] 5/CD/5 >/CD/> >/CD/> >/CD/> numbers/NNS/numbers /:/[ -2/-NONE-/-2 /:/] 17/CD/17 >/CD/> >/CD/> >/CD/> numbers/NNS/numbers /:/[ -3/-NONE-/-3 /:/] indexerror/NN/indexerror /:/: list/NN/list index/NN/index out/IN/out of/IN/of range/NN/range numbers/NNS/numbers /:/[ -1/-NONE-/-1 /:/] is/VBZ/is the/DT/the last/JJ/last element/NN/element of/IN/of the/DT/the list/NN/list /,/, numbers/NNS/numbers /:/[ -2/-NONE-/-2 /:/] is/VBZ/is the/DT/the second/JJ/second to/TO/to last/JJ/last /,/, and/CC/and numbers/NNS/numbers /:/[ -3/-NONE-/-3 /:/] doesn/NN/doesn t/NN/t exist/NNP/exist. it/PRP/it is/VBZ/is common/JJ/common to/TO/to use/VB/use a/DT/a loop/NN/loop variable/JJ/variable as/IN/as a/DT/a list/NN/list index/NNP/index. horsemen/NNS/horsemen =/:/= /:/[ war/NN/war /,/, famine/NN/famine /,/, pestilence/NN/pestilence /,/, death/NN/death /:/] i/PRP/i =/VBP/= 0/-NONE-/0 while/IN/while i/PRP/i </VBP/< 4/CD/4 /:/: print/JJ/print horsemen/NNS/horsemen /:/[ i/PRP/i /VBP/] i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 this/DT/this while/NN/while loop/NN/loop counts/NNS/counts from/IN/from 0/-NONE-/0 to/TO/to 4/CD/4. when/WRB/when the/DT/the loop/NN/loop variable/JJ/variable i/NN/i is/VBZ/is 4/CD/4 /,/, the/DT/the condition/NN/condition fails/VBZ/fails and/CC/and the/DT/the loop/NN/loop terminates/NNP/terminates. so/RB/so the/DT/the body/NN/body of/IN/of the/DT/the loop/NN/loop is/VBZ/is only/RB/only executed/VBN/executed when/WRB/when i/PRP/i is/VBZ/is 0/-NONE-/0 /,/, 1/CD/1 /,/, 2/CD/2 /,/, and/CC/and 3/CD/3. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, the/DT/the variable/JJ/variable i/PRP/i is/VBZ/is used/VBN/used as/RB/as an/DT/an index/NN/index into/IN/into the/DT/the list/NN/list /,/, printing/VBG/printing the/DT/the i-eth/JJ/i-eth element/NNP/element. this/DT/this pattern/NN/pattern of/IN/of computation/NN/computation is/VBZ/is called/VBN/called a/DT/a list/NN/list traversal/NNP/traversal. 8.3/CD/8.3 list/NN/list length/NN/length the/DT/the function/NN/function len/NN/len returns/NNS/returns the/DT/the length/NN/length of/IN/of a/DT/a list/NNP/list. it/PRP/it is/VBZ/is a/DT/a good/JJ/good idea/NN/idea to/TO/to use/VB/use this/DT/this value/NN/value as/IN/as the/DT/the upper/JJ/upper bound/NN/bound of/IN/of a/DT/a loop/NN/loop instead/RB/instead of/IN/of a/DT/a constant/NNP/constant. that/WDT/that way/NN/way /,/, if/IN/if the/DT/the size/NN/size of/IN/of the/DT/the list/NN/list changes/NNS/changes /,/, you/PRP/you won/VBD/won t/NN/t have/VBP/have to/TO/to go/VB/go through/RP/through the/DT/the program/NN/program changing/VBG/changing all/DT/all the/DT/the loops/NNS/loops ;/:/; they/PRP/they will/MD/will work/VB/work correctly/RB/correctly for/IN/for any/DT/any size/NN/size list/NN/list /:/: 84/CD/84 lists/NNS/lists horsemen/NNS/horsemen =/VBP/= /:/[ war/NN/war /,/, famine/NN/famine /,/, pestilence/NN/pestilence /,/, death/NN/death /:/] i/PRP/i =/VBP/= 0/-NONE-/0 while/IN/while i/PRP/i </VBP/< len/VBN/len /-NONE-/( horsemen/NNS/horsemen /:/) /:/: print/NN/print horsemen/NNS/horsemen /:/[ i/PRP/i /VBP/] i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 the/DT/the last/JJ/last time/NN/time the/DT/the body/NN/body of/IN/of the/DT/the loop/NN/loop is/VBZ/is executed/VBN/executed /,/, i/PRP/i is/VBZ/is len/VBN/len /-NONE-/( horsemen/NNS/horsemen /:/) /:/- 1/CD/1 /,/, which/WDT/which is/VBZ/is the/DT/the index/NN/index of/IN/of the/DT/the last/JJ/last element/NNP/element. when/WRB/when i/PRP/i is/VBZ/is equal/JJ/equal to/TO/to len/VB/len /:/( horsemen/NNS/horsemen /VBP/) /,/, the/DT/the condition/NN/condition fails/VBZ/fails and/CC/and the/DT/the body/NN/body is/VBZ/is not/RB/not executed/VBN/executed /,/, which/WDT/which is/VBZ/is a/DT/a good/JJ/good thing/NN/thing /,/, because/IN/because len/NN/len /:/( horsemen/NNS/horsemen /VBP/) is/VBZ/is not/RB/not a/DT/a legal/JJ/legal index/NNP/index. although/IN/although a/DT/a list/NN/list can/MD/can contain/VB/contain another/DT/another list/NN/list /,/, the/DT/the nested/VBN/nested list/NN/list still/RB/still counts/VBZ/counts as/IN/as a/DT/a single/JJ/single element/NNP/element. the/DT/the length/NN/length of/IN/of this/DT/this list/NN/list is/VBZ/is four/CD/four /:/: /:/[ spam/NN/spam !/./! /,/, 1/CD/1 /,/, /:/[ brie/NN/brie /,/, roquefort/NN/roquefort /,/, pol/NN/pol le/NN/le veq/NN/veq /:/] /,/, /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] /CD/] as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a loop/NN/loop that/WDT/that traverses/VBZ/traverses the/DT/the previous/JJ/previous list/NN/list and/CC/and prints/NNS/prints the/DT/the length/NN/length of/IN/of each/DT/each element/NNP/element. what/WP/what happens/VBZ/happens if/IN/if you/PRP/you send/VBP/send an/DT/an integer/NN/integer to/TO/to len/VB/len 8.4/CD/8.4 list/NN/list membership/NN/membership in/IN/in is/VBZ/is a/DT/a boolean/JJ/boolean operator/NN/operator that/WDT/that tests/VBZ/tests membership/NN/membership in/IN/in a/DT/a sequence/NNP/sequence. we/PRP/we used/VBD/used it/PRP/it in/IN/in section/NN/section 7.10/CD/7.10 with/IN/with strings/NNS/strings /,/, but/CC/but it/PRP/it also/RB/also works/VBZ/works with/IN/with lists/NNS/lists and/CC/and other/JJ/other sequences/NNS/sequences /:/: >/:/> >/:/> >/:/> horsemen/NNS/horsemen =/VBP/= /:/[ war/NN/war /,/, famine/NN/famine /,/, pestilence/NN/pestilence /,/, death/NN/death /:/] >/:/> >/:/> >/:/> pestilence/NN/pestilence in/IN/in horsemen/NNS/horsemen true/JJ/true >/NN/> >/:/> >/:/> debauchery/NN/debauchery in/IN/in horsemen/NNS/horsemen false/VBP/false since/IN/since pestilence/NN/pestilence is/VBZ/is a/DT/a member/NN/member of/IN/of the/DT/the horsemen/NNS/horsemen list/VBP/list /,/, the/DT/the in/IN/in operator/NN/operator returns/NNS/returns true/NNP/true. since/IN/since debauchery/NN/debauchery is/VBZ/is not/RB/not in/IN/in the/DT/the list/NN/list /,/, in/IN/in returns/NNS/returns false/NNP/false. we/PRP/we can/MD/can use/VB/use the/DT/the not/RB/not in/IN/in combination/NN/combination with/IN/with in/IN/in to/TO/to test/NN/test whether/IN/whether an/DT/an element/NN/element is/VBZ/is not/RB/not a/DT/a member/NN/member of/IN/of a/DT/a list/NN/list /:/: >/:/> >/:/> >/:/> debauchery/NN/debauchery not/RB/not in/IN/in horsemen/NNS/horsemen true/JJ/true 8.5/CD/8.5 lists/NNS/lists and/CC/and for/IN/for loops/NNS/loops the/DT/the for/IN/for loop/NN/loop we/PRP/we saw/VBD/saw in/IN/in section/NN/section 7.3/CD/7.3 also/RB/also works/VBZ/works with/IN/with lists/NNP/lists. the/DT/the generalized/JJ/generalized syntax/NN/syntax of/IN/of a/DT/a for/IN/for loop/NN/loop is/VBZ/is /:/: 8.6/CD/8.6 list/NN/list operations/NNS/operations 85/CD/85 for/IN/for variable/JJ/variable in/IN/in list/NN/list /:/: body/NN/body this/DT/this statement/NN/statement is/VBZ/is equivalent/NN/equivalent to/TO/to /:/: i/PRP/i =/VBP/= 0/-NONE-/0 while/IN/while i/PRP/i </VBP/< len/VBN/len /-NONE-/( list/NN/list /:/) /:/: variable/JJ/variable =/NN/= list/NN/list /:/[ i/PRP/i /VBP/] body/JJ/body i/PRP/i =/VBP/= i/PRP/i +/VBP/+ 1/CD/1 the/DT/the for/IN/for loop/NN/loop is/VBZ/is more/RBR/more concise/JJ/concise because/IN/because we/PRP/we can/MD/can eliminate/VB/eliminate the/DT/the loop/NN/loop variable/JJ/variable /,/, i/NNP/i. here/RB/here is/VBZ/is the/DT/the previous/JJ/previous loop/NN/loop written/VBN/written with/IN/with a/DT/a for/IN/for loop/NNP/loop. for/IN/for horseman/NN/horseman in/IN/in horsemen/NNS/horsemen /:/: print/NN/print horseman/NN/horseman it/PRP/it almost/RB/almost reads/VBZ/reads like/IN/like english/JJ/english /:/: for/IN/for /CD/( every/DT/every /NN/) horseman/NN/horseman in/IN/in /NNP/( the/DT/the list/NN/list of/IN/of /NNP/) horsemen/NNS/horsemen /,/, print/VBP/print /:/( the/DT/the name/NN/name of/IN/of the/DT/the /NNP/) horseman/NNP/horseman. any/DT/any list/NN/list expression/NN/expression can/MD/can be/VB/be used/VBN/used in/IN/in a/DT/a for/IN/for loop/NN/loop /:/: for/IN/for number/NN/number in/IN/in range/NN/range /:/( 20/CD/20 /CD/) /:/: if/IN/if number/NN/number %/NN/% 2/CD/2 =/CD/= =/CD/= 0/-NONE-/0 /:/: print/NN/print number/NN/number for/IN/for fruit/NN/fruit in/IN/in /NNP/[ banana/NN/banana /,/, apple/NN/apple /,/, quince/NN/quince /:/] /:/: print/NN/print i/PRP/i like/VBP/like to/TO/to eat/VB/eat +/:/+ fruit/NN/fruit +/:/+ s/NNS/s !/./! the/DT/the first/JJ/first example/NN/example prints/NNS/prints all/DT/all the/DT/the even/RB/even numbers/NNS/numbers between/IN/between zero/NN/zero and/CC/and nineteen/NNP/nineteen. the/DT/the second/JJ/second example/NN/example expresses/NNS/expresses enthusiasm/NN/enthusiasm for/IN/for various/JJ/various fruits/NNP/fruits. 8.6/CD/8.6 list/NN/list operations/NNS/operations the/DT/the +/NN/+ operator/NN/operator concatenates/VBZ/concatenates lists/NNS/lists /:/: >/:/> >/:/> >/:/> a/DT/a =/NN/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> b/NN/b =/:/= /:/[ 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /:/] >/CD/> >/CD/> >/CD/> c/NN/c =/:/= a/DT/a +/NN/+ b/NN/b >/:/> >/:/> >/:/> print/NN/print c/NN/c /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /:/] similarly/RB/similarly /,/, the/DT/the operator/NN/operator repeats/NNS/repeats a/DT/a list/NN/list a/DT/a given/VBN/given number/NN/number of/IN/of times/NNS/times /:/: 86/CD/86 lists/NNS/lists >/:/> >/:/> >/:/> /:/[ 0/-NONE-/0 /:/] 4/CD/4 /CD/[ 0/-NONE-/0 /,/, 0/-NONE-/0 /,/, 0/-NONE-/0 /,/, 0/-NONE-/0 /:/] >/:/> >/:/> >/:/> /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] 3/CD/3 /CD/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] the/DT/the first/JJ/first example/NN/example repeats/NNS/repeats /:/[ 0/-NONE-/0 /:/] four/CD/four times/NNP/times. the/DT/the second/JJ/second example/NN/example repeats/NNS/repeats the/DT/the list/NN/list /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] three/CD/three times/NNP/times. 8.7/CD/8.7 list/NN/list slices/NNS/slices the/DT/the slice/NN/slice operations/NNS/operations we/PRP/we saw/VBD/saw in/IN/in section/NN/section 7.4/CD/7.4 also/RB/also work/VB/work on/IN/on lists/NNS/lists /:/: >/:/> >/:/> >/:/> list/NN/list =/:/= /:/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /:/] >/:/> >/:/> >/:/> list/NN/list /:/[ 1/CD/1 /:/: 3/CD/3 /CD/] /CD/[ b/NN/b /,/, c/NN/c /:/] >/:/> >/:/> >/:/> list/NN/list /:/[ /:/: 4/CD/4 /CD/] /CD/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /:/] >/CD/> >/CD/> >/CD/> list/NN/list /:/[ 3/CD/3 /:/: /:/] /:/[ d/NN/d /,/, e/NN/e /,/, f/NN/f /:/] if/IN/if you/PRP/you omit/VBP/omit the/DT/the first/JJ/first index/NN/index /,/, the/DT/the slice/NN/slice starts/VBZ/starts at/IN/at the/DT/the beginning/NNP/beginning. if/IN/if you/PRP/you omit/VBP/omit the/DT/the second/JJ/second /,/, the/DT/the slice/NN/slice goes/VBZ/goes to/TO/to the/DT/the end/NNP/end. so/RB/so if/IN/if you/PRP/you omit/VBP/omit both/DT/both /,/, the/DT/the slice/NN/slice is/VBZ/is really/RB/really a/DT/a copy/NN/copy of/IN/of the/DT/the whole/JJ/whole list/NNP/list. >/NNP/> >/NNP/> >/NNP/> list/NN/list /:/[ /:/: /:/] /:/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /:/] 8.8/CD/8.8 lists/NNS/lists are/VBP/are mutable/JJ/mutable unlike/IN/unlike strings/NNS/strings /,/, lists/NNS/lists are/VBP/are mutable/JJ/mutable /,/, which/WDT/which means/VBZ/means we/PRP/we can/MD/can change/VB/change their/PRP$/their elements/NNP/elements. using/VBG/using the/DT/the bracket/NN/bracket operator/NN/operator on/IN/on the/DT/the left/NN/left side/NN/side of/IN/of an/DT/an assignment/NN/assignment /,/, we/PRP/we can/MD/can update/VB/update one/CD/one of/IN/of the/DT/the elements/NNS/elements /:/: >/:/> >/:/> >/:/> fruit/NN/fruit =/:/= /:/[ banana/NNS/banana /,/, apple/NN/apple /,/, quince/NN/quince /:/] >/:/> >/:/> >/:/> fruit/NN/fruit /:/[ 0/-NONE-/0 /:/] =/:/= pear/JJ/pear >/NN/> >/:/> >/:/> fruit/NN/fruit /:/[ -1/-NONE-/-1 /:/] =/:/= orange/NN/orange >/:/> >/:/> >/:/> print/NN/print fruit/NN/fruit /:/[ pear/JJ/pear /,/, apple/NN/apple /,/, orange/NN/orange /:/] with/IN/with the/DT/the slice/NN/slice operator/NN/operator we/PRP/we can/MD/can update/VB/update several/JJ/several elements/NNS/elements at/IN/at once/RB/once /:/: 8.9/CD/8.9 list/NN/list deletion/NN/deletion 87/CD/87 >/CD/> >/CD/> >/CD/> list/NN/list =/:/= /:/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /:/] >/:/> >/:/> >/:/> list/NN/list /:/[ 1/CD/1 /:/: 3/CD/3 /CD/] =/CD/= /CD/[ x/NN/x /,/, y/NN/y /:/] >/:/> >/:/> >/:/> print/NN/print list/NN/list /:/[ a/DT/a /,/, x/NN/x /,/, y/NN/y /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /:/] we/PRP/we can/MD/can also/RB/also remove/VB/remove elements/NNS/elements from/IN/from a/DT/a list/NN/list by/IN/by assigning/NN/assigning the/DT/the empty/NN/empty list/NN/list to/TO/to them/PRP/them /:/: >/:/> >/:/> >/:/> list/NN/list =/:/= /:/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /:/] >/:/> >/:/> >/:/> list/NN/list /:/[ 1/CD/1 /:/: 3/CD/3 /CD/] =/CD/= /CD/[ /CD/] >/CD/> >/CD/> >/CD/> print/NN/print list/NN/list /:/[ a/DT/a /,/, d/NN/d /,/, e/NN/e /,/, f/NN/f /:/] and/CC/and we/PRP/we can/MD/can add/VB/add elements/NNS/elements to/TO/to a/DT/a list/NN/list by/IN/by squeezing/NN/squeezing them/PRP/them into/IN/into an/DT/an empty/JJ/empty slice/NN/slice at/IN/at the/DT/the desired/VBN/desired location/NN/location /:/: >/:/> >/:/> >/:/> list/NN/list =/:/= /:/[ a/DT/a /,/, d/NN/d /,/, f/NN/f /:/] >/:/> >/:/> >/:/> list/NN/list /:/[ 1/CD/1 /:/: 1/CD/1 /CD/] =/CD/= /CD/[ b/NN/b /,/, c/NN/c /:/] >/:/> >/:/> >/:/> print/NN/print list/NN/list /:/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, f/NN/f /:/] >/:/> >/:/> >/:/> list/NN/list /:/[ 4/CD/4 /:/: 4/CD/4 /CD/] =/CD/= /CD/[ e/NN/e /:/] >/:/> >/:/> >/:/> print/NN/print list/NN/list /:/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /:/] 8.9/CD/8.9 list/NN/list deletion/NN/deletion using/VBG/using slices/NNS/slices to/TO/to delete/VB/delete list/NN/list elements/NNS/elements can/MD/can be/VB/be awkward/VBN/awkward /,/, and/CC/and therefore/RB/therefore error-prone/NNP/error-prone. python/NN/python provides/VBZ/provides an/DT/an alternative/JJ/alternative that/IN/that is/VBZ/is more/RBR/more readable/NNP/readable. del/NN/del removes/VBZ/removes an/DT/an element/NN/element from/IN/from a/DT/a list/NN/list /:/: >/:/> >/:/> >/:/> a/DT/a =/NN/= /:/[ one/CD/one /,/, two/CD/two /,/, three/CD/three /:/] >/CD/> >/CD/> >/CD/> del/NN/del a/DT/a /NN/[ 1/CD/1 /CD/] >/CD/> >/CD/> >/CD/> a/DT/a /NN/[ one/CD/one /,/, three/CD/three /:/] as/IN/as you/PRP/you might/MD/might expect/VB/expect /,/, del/DT/del handles/NNS/handles negative/JJ/negative indices/NNS/indices and/CC/and causes/NNS/causes a/DT/a runtime/NN/runtime error/NN/error if/IN/if the/DT/the index/NN/index is/VBZ/is out/RP/out of/IN/of range/NNP/range. you/PRP/you can/MD/can use/VB/use a/DT/a slice/NN/slice as/IN/as an/DT/an index/NN/index for/IN/for del/NN/del /:/: >/:/> >/:/> >/:/> list/NN/list =/:/= /:/[ a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /,/, f/NN/f /:/] >/:/> >/:/> >/:/> del/NN/del list/NN/list /:/[ 1/CD/1 /:/: 5/CD/5 /CD/] >/CD/> >/CD/> >/CD/> print/NN/print list/NN/list /:/[ a/DT/a /,/, f/NN/f /:/] 88/CD/88 lists/NNS/lists as/IN/as usual/JJ/usual /,/, slices/NNS/slices select/VBP/select all/DT/all the/DT/the elements/NNS/elements up/IN/up to/TO/to /,/, but/CC/but not/RB/not including/VBG/including /,/, the/DT/the second/JJ/second index/NNP/index. 8.10/CD/8.10 objects/NNS/objects and/CC/and values/NNS/values 89/CD/89 8.10/CD/8.10 objects/NNS/objects and/CC/and values/NNS/values if/IN/if we/PRP/we execute/VBP/execute these/DT/these assignment/NN/assignment statements/NNS/statements /,/, a/DT/a =/NN/= banana/NN/banana b/NN/b =/:/= banana/NN/banana we/PRP/we know/VBP/know that/IN/that a/DT/a and/CC/and b/NN/b will/MD/will refer/VB/refer to/TO/to a/DT/a string/NN/string with/IN/with the/DT/the letters/NNS/letters banana/NNP/banana. but/CC/but we/PRP/we can/MD/can t/VB/t tell/NN/tell whether/IN/whether they/PRP/they point/VBP/point to/TO/to the/DT/the same/JJ/same string/NNP/string. there/RB/there are/VBP/are two/CD/two possible/JJ/possible states/NNS/states /:/: a/DT/a b/NN/b banana/NN/banana banana/NN/banana a/DT/a b/NN/b banana/NN/banana in/IN/in one/CD/one case/NN/case /,/, a/DT/a and/CC/and b/NN/b refer/NN/refer to/TO/to two/CD/two different/JJ/different things/NNS/things that/WDT/that have/VBP/have the/DT/the same/JJ/same value/NNP/value. in/IN/in the/DT/the second/JJ/second case/NN/case /,/, they/PRP/they refer/VBP/refer to/TO/to the/DT/the same/JJ/same thing/NNP/thing. these/DT/these things/NNS/things have/VBP/have names/NNS/names they/PRP/they are/VBP/are called/VBN/called objects/NNP/objects. an/DT/an object/NN/object is/VBZ/is something/NN/something a/DT/a variable/JJ/variable can/NN/can refer/NN/refer to/NNP/to. every/DT/every object/NN/object has/VBZ/has a/DT/a unique/JJ/unique identifier/NN/identifier /,/, which/WDT/which we/PRP/we can/MD/can obtain/VB/obtain with/IN/with the/DT/the id/JJ/id function/NNP/function. by/IN/by printing/NN/printing the/DT/the identifier/NN/identifier of/IN/of a/DT/a and/CC/and b/NN/b /,/, we/PRP/we can/MD/can tell/VB/tell whether/IN/whether they/PRP/they refer/VBP/refer to/TO/to the/DT/the same/JJ/same object/NNP/object. >/NNP/> >/NNP/> >/NNP/> id/VBD/id /NNP/( a/DT/a /NN/) 135044008/CD/135044008 >/CD/> >/CD/> >/CD/> id/JJ/id /NN/( b/NN/b /:/) 135044008/CD/135044008 in/IN/in fact/NN/fact /,/, we/PRP/we get/VBP/get the/DT/the same/JJ/same identifier/NN/identifier twice/NN/twice /,/, which/WDT/which means/VBZ/means that/DT/that python/NN/python only/RB/only created/VBN/created one/CD/one string/VBG/string /,/, and/CC/and both/DT/both a/DT/a and/CC/and b/NN/b refer/NN/refer to/TO/to it/NNP/it. interestingly/RB/interestingly /,/, lists/NNS/lists behave/VBP/behave differently/NNP/differently. when/WRB/when we/PRP/we create/VBP/create two/CD/two lists/NNS/lists /,/, we/PRP/we get/VBP/get two/CD/two objects/NNS/objects /:/: >/:/> >/:/> >/:/> a/DT/a =/NN/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> b/NN/b =/:/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> id/JJ/id /NN/( a/DT/a /NN/) 135045528/CD/135045528 >/CD/> >/CD/> >/CD/> id/JJ/id /NN/( b/NN/b /:/) 135041704/CD/135041704 so/RB/so the/DT/the state/NN/state diagram/NN/diagram looks/NNS/looks like/IN/like this/DT/this /:/: a/DT/a b/NN/b /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] /CD/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] a/DT/a and/CC/and b/NN/b have/VBP/have the/DT/the same/JJ/same value/NN/value but/CC/but do/VBP/do not/RB/not refer/VB/refer to/TO/to the/DT/the same/JJ/same object/NNP/object. 90/CD/90 lists/NNS/lists 8.11/CD/8.11 aliasing/VBG/aliasing since/IN/since variables/NNS/variables refer/VBP/refer to/TO/to objects/NNS/objects /,/, if/IN/if we/PRP/we assign/VBP/assign one/CD/one variable/JJ/variable to/TO/to another/DT/another /,/, both/DT/both variables/NNS/variables refer/VBP/refer to/TO/to the/DT/the same/JJ/same object/NN/object /:/: >/:/> >/:/> >/:/> a/DT/a =/NN/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> b/NN/b =/:/= a/DT/a in/IN/in this/DT/this case/NN/case /,/, the/DT/the state/NN/state diagram/NN/diagram looks/NNS/looks like/IN/like this/DT/this /:/: a/DT/a b/NN/b /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] because/IN/because the/DT/the same/JJ/same list/NN/list has/VBZ/has two/CD/two different/JJ/different names/NNS/names /,/, a/DT/a and/CC/and b/NN/b /,/, we/PRP/we say/VBP/say that/IN/that it/PRP/it is/VBZ/is aliased/NNP/aliased. changes/NNS/changes made/VBD/made with/IN/with one/CD/one alias/NNS/alias affect/VBP/affect the/DT/the other/JJ/other /:/: >/:/> >/:/> >/:/> b/NN/b /:/[ 0/-NONE-/0 /:/] =/:/= 5/CD/5 >/CD/> >/CD/> >/CD/> print/NN/print a/DT/a /NN/[ 5/CD/5 /,/, 2/CD/2 /,/, 3/CD/3 /:/] although/IN/although this/DT/this behavior/NN/behavior can/MD/can be/VB/be useful/JJ/useful /,/, it/PRP/it is/VBZ/is sometimes/RB/sometimes unexpected/VBN/unexpected or/CC/or undesirable/NNP/undesirable. in/IN/in general/JJ/general /,/, it/PRP/it is/VBZ/is safer/JJR/safer to/TO/to avoid/VB/avoid aliasing/NN/aliasing when/WRB/when you/PRP/you are/VBP/are working/VBG/working with/IN/with mutable/JJ/mutable objects/NNP/objects. of/IN/of course/NN/course /,/, for/IN/for immutable/JJ/immutable objects/NNS/objects /,/, there/EX/there s/VBZ/s no/DT/no problem/NNP/problem. that/IN/that s/NNS/s why/WRB/why python/NN/python is/VBZ/is free/JJ/free to/TO/to alias/NNS/alias strings/NNS/strings when/WRB/when it/PRP/it sees/VBZ/sees an/DT/an opportunity/NN/opportunity to/TO/to economize/NNP/economize. 8.12/CD/8.12 cloning/VBG/cloning lists/NNS/lists if/IN/if we/PRP/we want/VBP/want to/TO/to modify/VB/modify a/DT/a list/NN/list and/CC/and also/RB/also keep/VB/keep a/DT/a copy/NN/copy of/IN/of the/DT/the original/JJ/original /,/, we/PRP/we need/VBP/need to/TO/to be/VB/be able/JJ/able to/TO/to make/VB/make a/DT/a copy/NN/copy of/IN/of the/DT/the list/NN/list itself/PRP/itself /,/, not/RB/not just/RB/just the/DT/the reference/NNP/reference. this/DT/this process/NN/process is/VBZ/is sometimes/RB/sometimes called/VBN/called cloning/VBG/cloning /,/, to/TO/to avoid/VB/avoid the/DT/the ambiguity/NN/ambiguity of/IN/of the/DT/the word/NN/word copy/NNP/copy. the/DT/the easiest/JJS/easiest way/NN/way to/TO/to clone/NN/clone a/DT/a list/NN/list is/VBZ/is to/TO/to use/VB/use the/DT/the slice/NN/slice operator/NN/operator /:/: >/:/> >/:/> >/:/> a/DT/a =/NN/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> b/NN/b =/:/= a/DT/a /NN/[ /:/: /:/] >/:/> >/:/> >/:/> print/NN/print b/NN/b /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] taking/VBG/taking any/DT/any slice/NN/slice of/IN/of a/DT/a creates/NNS/creates a/DT/a new/JJ/new list/NNP/list. in/IN/in this/DT/this case/NN/case the/DT/the slice/NN/slice happens/VBZ/happens to/TO/to consist/VB/consist of/IN/of the/DT/the whole/JJ/whole list/NNP/list. now/RB/now we/PRP/we are/VBP/are free/JJ/free to/TO/to make/VB/make changes/NNS/changes to/TO/to b/VB/b without/IN/without worrying/NN/worrying about/IN/about a/DT/a /:/: 8.13/CD/8.13 list/NN/list parameters/NNS/parameters 91/CD/91 >/CD/> >/CD/> >/CD/> b/NN/b /:/[ 0/-NONE-/0 /:/] =/:/= 5/CD/5 >/CD/> >/CD/> >/CD/> print/NN/print a/DT/a /NN/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] as/IN/as an/DT/an exercise/NN/exercise /,/, draw/NN/draw a/DT/a state/NN/state diagram/NN/diagram for/IN/for a/DT/a and/CC/and b/NN/b before/IN/before and/CC/and after/IN/after this/DT/this change/NNP/change. 8.13/CD/8.13 list/NN/list parameters/NNS/parameters passing/VBG/passing a/DT/a list/NN/list as/IN/as an/DT/an argument/NN/argument actually/RB/actually passes/VBZ/passes a/DT/a reference/NN/reference to/TO/to the/DT/the list/NN/list /,/, not/RB/not a/DT/a copy/NN/copy of/IN/of the/DT/the list/NNP/list. for/IN/for example/NN/example /,/, the/DT/the function/NN/function head/NN/head takes/VBZ/takes a/DT/a list/NN/list as/IN/as an/DT/an argument/NN/argument and/CC/and returns/NNS/returns the/DT/the first/JJ/first element/NN/element /:/: def/NN/def head/NN/head /:/( list/NN/list /:/) /:/: return/NN/return list/NN/list /:/[ 0/-NONE-/0 /:/] here/RB/here s/VBZ/s how/WRB/how it/PRP/it is/VBZ/is used/VBN/used /:/: >/:/> >/:/> >/:/> numbers/NNS/numbers =/VBP/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> head/NN/head /:/( numbers/NNS/numbers /VBP/) 1/CD/1 the/DT/the parameter/NN/parameter list/NN/list and/CC/and the/DT/the variable/JJ/variable numbers/NNS/numbers are/VBP/are aliases/NNS/aliases for/IN/for the/DT/the same/JJ/same object/NNP/object. the/DT/the state/NN/state diagram/NN/diagram looks/NNS/looks like/IN/like this/DT/this /:/: list/NN/list /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] __main__/NNP/__main__ numbers/NNS/numbers head/NN/head since/IN/since the/DT/the list/NN/list object/NN/object is/VBZ/is shared/VBN/shared by/IN/by two/CD/two frames/NNS/frames /,/, we/PRP/we drew/VBD/drew it/PRP/it between/IN/between them/NNP/them. if/IN/if a/DT/a function/NN/function modifies/NNS/modifies a/DT/a list/NN/list parameter/NN/parameter /,/, the/DT/the caller/NN/caller sees/VBZ/sees the/DT/the change/NNP/change. for/IN/for example/NN/example /,/, deletehead/NN/deletehead removes/NNS/removes the/DT/the first/JJ/first element/NN/element from/IN/from a/DT/a list/NN/list /:/: def/NN/def deletehead/NN/deletehead /:/( list/NN/list /:/) /:/: del/NN/del list/NN/list /:/[ 0/-NONE-/0 /:/] here/RB/here s/VBZ/s how/WRB/how deletehead/JJ/deletehead is/VBZ/is used/VBN/used /:/: >/:/> >/:/> >/:/> numbers/NNS/numbers =/VBP/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> deletehead/NN/deletehead /:/( numbers/NNS/numbers /VBP/) >/:/> >/:/> >/:/> print/NN/print numbers/NNS/numbers /:/[ 2/CD/2 /,/, 3/CD/3 /:/] 92/CD/92 lists/NNS/lists if/IN/if a/DT/a function/NN/function returns/NNS/returns a/DT/a list/NN/list /,/, it/PRP/it returns/VBZ/returns a/DT/a reference/NN/reference to/TO/to the/DT/the list/NNP/list. for/IN/for example/NN/example /,/, tail/NN/tail returns/NNS/returns a/DT/a list/NN/list that/WDT/that contains/VBZ/contains all/DT/all but/CC/but the/DT/the first/JJ/first element/NN/element of/IN/of the/DT/the given/VBN/given list/NN/list /:/: def/NN/def tail/NN/tail /:/( list/NN/list /:/) /:/: return/NN/return list/NN/list /:/[ 1/CD/1 /:/: /:/] here/RB/here s/VBZ/s how/WRB/how tail/NN/tail is/VBZ/is used/VBN/used /:/: >/:/> >/:/> >/:/> numbers/NNS/numbers =/VBP/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> rest/NN/rest =/:/= tail/NN/tail /:/( numbers/NNS/numbers /VBP/) >/:/> >/:/> >/:/> print/NN/print rest/NN/rest /:/[ 2/CD/2 /,/, 3/CD/3 /:/] because/IN/because the/DT/the return/NN/return value/NN/value was/VBD/was created/VBN/created with/IN/with the/DT/the slice/NN/slice operator/NN/operator /,/, it/PRP/it is/VBZ/is a/DT/a new/JJ/new list/NNP/list. creating/NN/creating rest/NN/rest /,/, and/CC/and any/DT/any subsequent/NN/subsequent changes/NNS/changes to/TO/to rest/VB/rest /,/, have/VB/have no/DT/no effect/NN/effect on/IN/on numbers/NNP/numbers. 8.14/CD/8.14 nested/VBD/nested lists/NNS/lists a/DT/a nested/JJ/nested list/NN/list is/VBZ/is a/DT/a list/NN/list that/WDT/that appears/VBZ/appears as/RB/as an/DT/an element/NN/element in/IN/in another/DT/another list/NNP/list. in/IN/in this/DT/this list/NN/list /,/, the/DT/the three-eth/JJ/three-eth element/NN/element is/VBZ/is a/DT/a nested/VBN/nested list/NN/list /:/: >/:/> >/:/> >/:/> list/NN/list =/:/= /:/[ hello/NN/hello /,/, 2.0/CD/2.0 /,/, 5/CD/5 /,/, /NNP/[ 10/CD/10 /,/, 20/CD/20 /:/] /CD/] if/IN/if we/PRP/we print/VBP/print list/NN/list /:/[ 3/CD/3 /CD/] /,/, we/PRP/we get/VBP/get /:/[ 10/CD/10 /,/, 20/CD/20 /:/] /./. to/TO/to extract/VB/extract an/DT/an element/NN/element from/IN/from the/DT/the nested/VBN/nested list/NN/list /,/, we/PRP/we can/MD/can proceed/VB/proceed in/IN/in two/CD/two steps/NNS/steps /:/: >/:/> >/:/> >/:/> elt/NN/elt =/:/= list/NN/list /:/[ 3/CD/3 /CD/] >/CD/> >/CD/> >/CD/> elt/NN/elt /:/[ 0/-NONE-/0 /:/] 10/CD/10 or/CC/or we/PRP/we can/MD/can combine/VB/combine them/PRP/them /:/: >/:/> >/:/> >/:/> list/NN/list /:/[ 3/CD/3 /CD/] /CD/[ 1/CD/1 /CD/] 20/CD/20 bracket/NN/bracket operators/NNS/operators evaluate/VBP/evaluate from/IN/from left/VBN/left to/TO/to right/RB/right /,/, so/RB/so this/DT/this expression/NN/expression gets/VBZ/gets the/DT/the threeeth/NN/threeeth element/NN/element of/IN/of list/NN/list and/CC/and extracts/NNS/extracts the/DT/the one-eth/JJ/one-eth element/NN/element from/IN/from it/NNP/it. 8.15/CD/8.15 matrices/NNS/matrices nested/VBN/nested lists/NNS/lists are/VBP/are often/RB/often used/VBN/used to/TO/to represent/VB/represent matrices/NNP/matrices. for/IN/for example/NN/example /,/, the/DT/the matrix/NN/matrix /:/: 1/LS/1 2/CD/2 3/CD/3 7/CD/7 8/CD/8 9/CD/9 4/CD/4 5/CD/5 6/CD/6 8.16/CD/8.16 strings/NNS/strings and/CC/and lists/NNS/lists 93/CD/93 might/MD/might be/VB/be represented/VBN/represented as/IN/as /:/: >/:/> >/:/> >/:/> matrix/NN/matrix =/:/= /:/[ /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] /,/, /:/[ 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /:/] /,/, /:/[ 7/CD/7 /,/, 8/CD/8 /,/, 9/CD/9 /:/] /CD/] matrix/CD/matrix is/VBZ/is a/DT/a list/NN/list with/IN/with three/CD/three elements/NNS/elements /,/, where/WRB/where each/DT/each element/NN/element is/VBZ/is a/DT/a row/NN/row of/IN/of the/DT/the matrix/NNP/matrix. we/PRP/we can/MD/can select/VB/select an/DT/an entire/JJ/entire row/NN/row from/IN/from the/DT/the matrix/NN/matrix in/IN/in the/DT/the usual/JJ/usual way/NN/way /:/: >/:/> >/:/> >/:/> matrix/NN/matrix /:/[ 1/CD/1 /CD/] /CD/[ 4/CD/4 /,/, 5/CD/5 /,/, 6/CD/6 /:/] or/CC/or we/PRP/we can/MD/can extract/VB/extract a/DT/a single/JJ/single element/NN/element from/IN/from the/DT/the matrix/NN/matrix using/VBG/using the/DT/the double-index/NN/double-index form/NN/form /:/: >/:/> >/:/> >/:/> matrix/NN/matrix /:/[ 1/CD/1 /CD/] /CD/[ 1/CD/1 /CD/] 5/CD/5 the/DT/the first/JJ/first index/NN/index selects/NNS/selects the/DT/the row/NN/row /,/, and/CC/and the/DT/the second/JJ/second index/NN/index selects/NNS/selects the/DT/the column/NNP/column. although/IN/although this/DT/this way/NN/way of/IN/of representing/VBG/representing matrices/NNS/matrices is/VBZ/is common/JJ/common /,/, it/PRP/it is/VBZ/is not/RB/not the/DT/the only/JJ/only possibility/NNP/possibility. a/DT/a small/JJ/small variation/NN/variation is/VBZ/is to/TO/to use/VB/use a/DT/a list/NN/list of/IN/of columns/NNS/columns instead/RB/instead of/IN/of a/DT/a list/NN/list of/IN/of rows/NNP/rows. later/JJ/later we/PRP/we will/MD/will see/VB/see a/DT/a more/RBR/more radical/JJ/radical alternative/NN/alternative using/VBG/using a/DT/a dictionary/NNP/dictionary. 8.16/CD/8.16 strings/NNS/strings and/CC/and lists/NNS/lists two/CD/two of/IN/of the/DT/the most/RBS/most useful/JJ/useful functions/NNS/functions in/IN/in the/DT/the string/NN/string module/NN/module involve/NN/involve lists/NNS/lists of/IN/of strings/NNP/strings. the/DT/the split/NN/split function/NN/function breaks/VBZ/breaks a/DT/a string/NN/string into/IN/into a/DT/a list/NN/list of/IN/of words/NNP/words. by/IN/by default/NN/default /,/, any/DT/any number/NN/number of/IN/of whitespace/NN/whitespace characters/NNS/characters is/VBZ/is considered/VBN/considered a/DT/a word/NN/word boundary/NN/boundary /:/: >/:/> >/:/> >/:/> import/NN/import string/NN/string >/:/> >/:/> >/:/> song/IN/song =/CD/= the/DT/the rain/NN/rain in/IN/in spain/NNP/spain... >/NNP/> >/NNP/> >/NNP/> string.split/NNP/string.split /NNP/( song/IN/song /NNP/) /NNP/[ the/DT/the /,/, rain/NN/rain /,/, in/IN/in /,/, spain/NNP/spain... /NNP/] an/DT/an optional/JJ/optional argument/NN/argument called/VBN/called a/DT/a delimiter/NN/delimiter can/MD/can be/VB/be used/VBN/used to/TO/to specify/VB/specify which/WDT/which characters/NNS/characters to/TO/to use/VB/use as/IN/as word/NN/word boundaries/NNP/boundaries. the/DT/the following/VBG/following example/NN/example uses/NNS/uses the/DT/the string/VBG/string ai/NN/ai as/IN/as the/DT/the delimiter/NN/delimiter /:/: >/:/> >/:/> >/:/> string.split/JJ/string.split /NN/( song/IN/song /,/, ai/VBP/ai /:/) /:/[ the/DT/the r/NN/r /,/, n/NN/n in/IN/in sp/NN/sp /,/, n/NNP/n... /NNP/] notice/NN/notice that/WDT/that the/DT/the delimiter/NN/delimiter doesn/NN/doesn t/NN/t appear/NN/appear in/IN/in the/DT/the list/NNP/list. the/DT/the join/NN/join function/NN/function is/VBZ/is the/DT/the inverse/NN/inverse of/IN/of split/NNP/split. it/PRP/it takes/VBZ/takes a/DT/a list/NN/list of/IN/of strings/NNS/strings and/CC/and concatenates/NNS/concatenates the/DT/the elements/NNS/elements with/IN/with a/DT/a space/NN/space between/IN/between each/DT/each pair/NN/pair /:/: >/:/> >/:/> >/:/> list/NN/list =/:/= /:/[ the/DT/the /,/, rain/NN/rain /,/, in/IN/in /,/, spain/NNP/spain... /NNP/] >/NNP/> >/NNP/> >/NNP/> string.join/NNP/string.join /NNP/( list/NN/list /:/) the/DT/the rain/NN/rain in/IN/in spain/NNP/spain... 94/CD/94 lists/NNS/lists like/IN/like split/NN/split /,/, join/NN/join takes/VBZ/takes an/DT/an optional/JJ/optional delimiter/NN/delimiter that/WDT/that is/VBZ/is inserted/VBN/inserted between/IN/between elements/NNS/elements /:/: >/:/> >/:/> >/:/> string.join/JJ/string.join /NN/( list/NN/list /,/, _/NNP/_ /NNP/) the_rain_in_spain/NNP/the_rain_in_spain... as/IN/as an/DT/an exercise/NN/exercise /,/, describe/VBP/describe the/DT/the relationship/NN/relationship between/IN/between string.join/JJ/string.join /NN/( string.split/NN/string.split /:/( song/JJ/song /NN/) /:/) and/CC/and song/NNP/song. are/VBP/are they/PRP/they the/DT/the same/JJ/same for/IN/for all/DT/all strings/NNS/strings when/WRB/when would/MD/would they/PRP/they be/VB/be different/JJ/different 8.17/CD/8.17 glossary/JJ/glossary list/NN/list /:/: a/DT/a named/VBN/named collection/NN/collection of/IN/of objects/NNS/objects /,/, where/WRB/where each/DT/each object/NN/object is/VBZ/is identified/VBN/identified by/IN/by an/DT/an index/NNP/index. index/NN/index /:/: an/DT/an integer/NN/integer variable/JJ/variable or/CC/or value/NN/value that/IN/that indicates/VBZ/indicates an/DT/an element/NN/element of/IN/of a/DT/a list/NNP/list. element/NN/element /:/: one/CD/one of/IN/of the/DT/the values/NNS/values in/IN/in a/DT/a list/NN/list /:/( or/CC/or other/JJ/other sequence/NN/sequence /:/) /./. the/DT/the bracket/NN/bracket operator/NN/operator selects/NNS/selects elements/NNS/elements of/IN/of a/DT/a list/NNP/list. sequence/NN/sequence /:/: any/DT/any of/IN/of the/DT/the data/NNS/data types/VBZ/types that/IN/that consist/NN/consist of/IN/of an/DT/an ordered/VBN/ordered set/NN/set of/IN/of elements/NNS/elements /,/, with/IN/with each/DT/each element/NN/element identified/VBD/identified by/IN/by an/DT/an index/NNP/index. nested/VBD/nested list/NN/list /:/: a/DT/a list/NN/list that/WDT/that is/VBZ/is an/DT/an element/NN/element of/IN/of another/DT/another list/NNP/list. list/NN/list traversal/NN/traversal /:/: the/DT/the sequential/JJ/sequential accessing/NN/accessing of/IN/of each/DT/each element/NN/element in/IN/in a/DT/a list/NNP/list. object/NN/object /:/: a/DT/a thing/NN/thing to/TO/to which/WDT/which a/DT/a variable/JJ/variable can/NN/can refer/NNP/refer. aliases/NNS/aliases /:/: multiple/JJ/multiple variables/NNS/variables that/WDT/that contain/NN/contain references/NNS/references to/TO/to the/DT/the same/JJ/same object/NNP/object. clone/NN/clone /:/: to/TO/to create/VB/create a/DT/a new/JJ/new object/NN/object that/WDT/that has/VBZ/has the/DT/the same/JJ/same value/NN/value as/IN/as an/DT/an existing/VBG/existing object/NNP/object. copying/NN/copying a/DT/a reference/NN/reference to/TO/to an/DT/an object/NN/object creates/VBZ/creates an/DT/an alias/NN/alias but/CC/but doesn/NN/doesn t/NN/t clone/NN/clone the/DT/the object/NNP/object. delimiter/NN/delimiter /:/: a/DT/a character/NN/character or/CC/or string/VBG/string used/VBN/used to/TO/to indicate/VB/indicate where/WRB/where a/DT/a string/NN/string should/MD/should be/VB/be split/NNP/split. chapter/NN/chapter 9/CD/9 tuples/NNS/tuples 9.1/CD/9.1 mutability/NN/mutability and/CC/and tuples/NNS/tuples so/RB/so far/RB/far /,/, you/PRP/you have/VBP/have seen/VBN/seen two/CD/two compound/NN/compound types/NNS/types /:/: strings/NNS/strings /,/, which/WDT/which are/VBP/are made/VBN/made up/RP/up of/IN/of characters/NNS/characters ;/:/; and/CC/and lists/NNS/lists /,/, which/WDT/which are/VBP/are made/VBN/made up/RP/up of/IN/of elements/NNS/elements of/IN/of any/DT/any type/NNP/type. one/CD/one of/IN/of the/DT/the differences/NNS/differences we/PRP/we noted/VBD/noted is/VBZ/is that/IN/that the/DT/the elements/NNS/elements of/IN/of a/DT/a list/NN/list can/MD/can be/VB/be modified/VBN/modified /,/, but/CC/but the/DT/the characters/NNS/characters in/IN/in a/DT/a string/NN/string can/MD/can not/NNP/not. in/IN/in other/JJ/other words/NNS/words /,/, strings/NNS/strings are/VBP/are immutable/JJ/immutable and/CC/and lists/NNS/lists are/VBP/are mutable/NNP/mutable. there/RB/there is/VBZ/is another/DT/another type/NN/type in/IN/in python/NN/python called/VBN/called a/DT/a tuple/NN/tuple that/WDT/that is/VBZ/is similar/JJ/similar to/TO/to a/DT/a list/NN/list except/IN/except that/DT/that it/PRP/it is/VBZ/is immutable/NNP/immutable. syntactically/RB/syntactically /,/, a/DT/a tuple/NN/tuple is/VBZ/is a/DT/a comma-separated/JJ/comma-separated list/NN/list of/IN/of values/NNS/values /:/: >/:/> >/:/> >/:/> tuple/NN/tuple =/:/= a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e although/IN/although it/PRP/it is/VBZ/is not/RB/not necessary/JJ/necessary /,/, it/PRP/it is/VBZ/is conventional/JJ/conventional to/TO/to enclose/VB/enclose tuples/NNS/tuples in/IN/in parentheses/NNS/parentheses /:/: >/:/> >/:/> >/:/> tuple/NN/tuple =/:/= /:/( a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /:/) to/TO/to create/VB/create a/DT/a tuple/NN/tuple with/IN/with a/DT/a single/JJ/single element/NN/element /,/, we/PRP/we have/VBP/have to/TO/to include/VB/include the/DT/the final/JJ/final comma/NN/comma /:/: >/:/> >/:/> >/:/> t1/NNP/t1 =/:/= /:/( a/DT/a /,/, /NNP/) >/NNP/> >/NNP/> >/NNP/> type/NN/type /:/( t1/NNP/t1 /:/) without/IN/without the/DT/the comma/NN/comma /,/, python/NN/python treats/NNS/treats /:/( a/DT/a /NN/) as/IN/as a/DT/a string/NN/string in/IN/in parentheses/NNS/parentheses /:/: >/:/> >/:/> >/:/> t2/NNP/t2 =/:/= /:/( a/DT/a /NN/) >/:/> >/:/> >/:/> type/NN/type /:/( t2/NNP/t2 /:/) 96/CD/96 tuples/NNS/tuples syntax/NN/syntax issues/NNS/issues aside/VBP/aside /,/, the/DT/the operations/NNS/operations on/IN/on tuples/NNS/tuples are/VBP/are the/DT/the same/JJ/same as/IN/as the/DT/the operations/NNS/operations on/IN/on lists/NNP/lists. the/DT/the index/NN/index operator/NN/operator selects/NNS/selects an/DT/an element/NN/element from/IN/from a/DT/a tuple/NNP/tuple. >/NNP/> >/NNP/> >/NNP/> tuple/NN/tuple =/:/= /:/( a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /:/) >/:/> >/:/> >/:/> tuple/NN/tuple /:/[ 0/-NONE-/0 /:/] a/DT/a and/CC/and the/DT/the slice/NN/slice operator/NN/operator selects/NNS/selects a/DT/a range/NN/range of/IN/of elements/NNP/elements. >/NNP/> >/NNP/> >/NNP/> tuple/NN/tuple /:/[ 1/CD/1 /:/: 3/CD/3 /CD/] /CD/( b/NN/b /,/, c/NN/c /:/) but/CC/but if/IN/if we/PRP/we try/VBP/try to/TO/to modify/VB/modify one/CD/one of/IN/of the/DT/the elements/NNS/elements of/IN/of the/DT/the tuple/NN/tuple /,/, we/PRP/we get/VBP/get an/DT/an error/NN/error /:/: >/:/> >/:/> >/:/> tuple/NN/tuple /:/[ 0/-NONE-/0 /:/] =/:/= a/DT/a typeerror/NN/typeerror /:/: object/NN/object doesn/NN/doesn t/NN/t support/NN/support item/NN/item assignment/NN/assignment of/IN/of course/NN/course /,/, even/RB/even if/IN/if we/PRP/we can/MD/can t/VB/t modify/NN/modify the/DT/the elements/NNS/elements of/IN/of a/DT/a tuple/NN/tuple /,/, we/PRP/we can/MD/can replace/VB/replace it/PRP/it with/IN/with a/DT/a different/JJ/different tuple/NN/tuple /:/: >/:/> >/:/> >/:/> tuple/NN/tuple =/:/= /:/( a/DT/a /,/, /NNP/) +/NNP/+ tuple/NN/tuple /:/[ 1/CD/1 /:/: /:/] >/:/> >/:/> >/:/> tuple/NN/tuple /:/( a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d /,/, e/NN/e /:/) 9.2/CD/9.2 tuple/NN/tuple assignment/NN/assignment once/RB/once in/IN/in a/DT/a while/NN/while /,/, it/PRP/it is/VBZ/is useful/JJ/useful to/TO/to swap/VB/swap the/DT/the values/NNS/values of/IN/of two/CD/two variables/NNP/variables. with/IN/with conventional/JJ/conventional assignment/NN/assignment statements/NNS/statements /,/, we/PRP/we have/VBP/have to/TO/to use/VB/use a/DT/a temporary/JJ/temporary variable/NNP/variable. for/IN/for example/NN/example /,/, to/TO/to swap/VB/swap a/DT/a and/CC/and b/NN/b /:/: >/:/> >/:/> >/:/> temp/NN/temp =/:/= a/DT/a >/NN/> >/:/> >/:/> a/DT/a =/NN/= b/NN/b >/:/> >/:/> >/:/> b/NN/b =/:/= temp/NN/temp if/IN/if we/PRP/we have/VBP/have to/TO/to do/VB/do this/DT/this often/RB/often /,/, this/DT/this approach/NN/approach becomes/VBZ/becomes cumbersome/NNP/cumbersome. python/NN/python provides/VBZ/provides a/DT/a form/NN/form of/IN/of tuple/NN/tuple assignment/NN/assignment that/WDT/that solves/VBZ/solves this/DT/this problem/NN/problem neatly/RB/neatly /:/: >/:/> >/:/> >/:/> a/DT/a /,/, b/NN/b =/:/= b/NN/b /,/, a/DT/a the/DT/the left/NN/left side/NN/side is/VBZ/is a/DT/a tuple/NN/tuple of/IN/of variables/NNS/variables ;/:/; the/DT/the right/NN/right side/NN/side is/VBZ/is a/DT/a tuple/NN/tuple of/IN/of values/NNP/values. each/DT/each value/NN/value is/VBZ/is assigned/VBN/assigned to/TO/to its/PRP$/its respective/JJ/respective variable/NNP/variable. all/DT/all the/DT/the expressions/NNS/expressions on/IN/on the/DT/the right/NN/right side/NN/side are/VBP/are evaluated/VBN/evaluated before/IN/before any/DT/any of/IN/of the/DT/the assignments/NNP/assignments. this/DT/this feature/NN/feature makes/VBZ/makes tuple/NN/tuple assignment/NN/assignment quite/RB/quite versatile/NNP/versatile. naturally/RB/naturally /,/, the/DT/the number/NN/number of/IN/of variables/NNS/variables on/IN/on the/DT/the left/NN/left and/CC/and the/DT/the number/NN/number of/IN/of values/NNS/values on/IN/on the/DT/the right/NN/right have/VBP/have to/TO/to be/VB/be the/DT/the same/JJ/same /:/: 9.3/CD/9.3 tuples/NNS/tuples as/IN/as return/NN/return values/NNS/values 97/CD/97 >/CD/> >/CD/> >/CD/> a/DT/a /,/, b/NN/b /,/, c/NN/c /,/, d/VBD/d =/:/= 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 valueerror/NN/valueerror /:/: unpack/NN/unpack tuple/NN/tuple of/IN/of wrong/JJ/wrong size/NN/size 9.3/CD/9.3 tuples/NNS/tuples as/IN/as return/NN/return values/NNS/values functions/NNS/functions can/MD/can return/VB/return tuples/NNS/tuples as/IN/as return/NN/return values/NNP/values. for/IN/for example/NN/example /,/, we/PRP/we could/MD/could write/VB/write a/DT/a function/NN/function that/WDT/that swaps/VBZ/swaps two/CD/two parameters/NNS/parameters /:/: def/NN/def swap/NN/swap /:/( x/NN/x /,/, y/NN/y /:/) /:/: return/NN/return y/NN/y /,/, x/NN/x then/RB/then we/PRP/we can/MD/can assign/VB/assign the/DT/the return/NN/return value/NN/value to/TO/to a/DT/a tuple/NN/tuple with/IN/with two/CD/two variables/NNS/variables /:/: a/DT/a /,/, b/NN/b =/:/= swap/NN/swap /:/( a/DT/a /,/, b/NN/b /:/) in/IN/in this/DT/this case/NN/case /,/, there/EX/there is/VBZ/is no/DT/no great/JJ/great advantage/NN/advantage in/IN/in making/VBG/making swap/NN/swap a/DT/a function/NNP/function. in/IN/in fact/NN/fact /,/, there/EX/there is/VBZ/is a/DT/a danger/NN/danger in/IN/in trying/VBG/trying to/TO/to encapsulate/VB/encapsulate swap/NN/swap /,/, which/WDT/which is/VBZ/is the/DT/the following/VBG/following tempting/NN/tempting mistake/NN/mistake /:/: def/NN/def swap/NN/swap /:/( x/NN/x /,/, y/NN/y /:/) /:/: #/#/# incorrect/NN/incorrect version/NN/version x/NN/x /,/, y/NN/y =/:/= y/NN/y /,/, x/NN/x if/IN/if we/PRP/we call/VBP/call this/DT/this function/NN/function like/IN/like this/DT/this /:/: swap/NN/swap /:/( a/DT/a /,/, b/NN/b /:/) then/RB/then a/DT/a and/CC/and x/NN/x are/VBP/are aliases/NNS/aliases for/IN/for the/DT/the same/JJ/same value/NNP/value. changing/NN/changing x/NN/x inside/NN/inside swap/NN/swap makes/VBZ/makes x/NN/x refer/NN/refer to/TO/to a/DT/a different/JJ/different value/NN/value /,/, but/CC/but it/PRP/it has/VBZ/has no/DT/no effect/NN/effect on/IN/on a/DT/a in/IN/in main/JJ/main /./. similarly/RB/similarly /,/, changing/VBG/changing y/NN/y has/VBZ/has no/DT/no effect/NN/effect on/IN/on b/NNP/b. this/DT/this function/NN/function runs/VBZ/runs without/IN/without producing/VBG/producing an/DT/an error/NN/error message/NN/message /,/, but/CC/but it/PRP/it doesn/VBP/doesn t/NN/t do/VBP/do what/WP/what we/PRP/we intended/NNP/intended. this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a semantic/JJ/semantic error/NNP/error. as/IN/as an/DT/an exercise/NN/exercise /,/, draw/NN/draw a/DT/a state/NN/state diagram/NN/diagram for/IN/for this/DT/this function/NN/function so/IN/so that/IN/that you/PRP/you can/MD/can see/VB/see why/WRB/why it/PRP/it doesn/VBP/doesn t/NN/t work/NNP/work. 9.4/CD/9.4 random/NN/random numbers/NNS/numbers most/JJS/most computer/NN/computer programs/NNS/programs do/VBP/do the/DT/the same/JJ/same thing/NN/thing every/DT/every time/NN/time they/PRP/they execute/VBP/execute /,/, so/RB/so they/PRP/they are/VBP/are said/VBN/said to/TO/to be/VB/be deterministic/NNP/deterministic. determinism/NN/determinism is/VBZ/is usually/RB/usually a/DT/a good/JJ/good thing/NN/thing /,/, since/IN/since we/PRP/we expect/VBP/expect the/DT/the same/JJ/same calculation/NN/calculation to/TO/to yield/VB/yield the/DT/the same/JJ/same result/NNP/result. for/IN/for some/DT/some applications/NNS/applications /,/, though/IN/though /,/, we/PRP/we want/VBP/want the/DT/the computer/NN/computer to/TO/to be/VB/be unpredictable/NNP/unpredictable. games/NNS/games are/VBP/are an/DT/an obvious/JJ/obvious example/NN/example /,/, but/CC/but there/EX/there are/VBP/are more/NNP/more. 98/CD/98 tuples/NNS/tuples making/VBG/making a/DT/a program/NN/program truly/RB/truly nondeterministic/JJ/nondeterministic turns/NNS/turns out/IN/out to/TO/to be/VB/be not/RB/not so/RB/so easy/JJ/easy /,/, but/CC/but there/EX/there are/VBP/are ways/NNS/ways to/TO/to make/VB/make it/PRP/it at/IN/at least/JJS/least seem/VB/seem nondeterministic/NNP/nondeterministic. one/CD/one of/IN/of them/PRP/them is/VBZ/is to/TO/to generate/VB/generate random/NN/random numbers/NNS/numbers and/CC/and use/VB/use them/PRP/them to/TO/to determine/VB/determine the/DT/the outcome/NN/outcome of/IN/of the/DT/the program/NNP/program. python/NN/python provides/VBZ/provides a/DT/a built-in/JJ/built-in function/NN/function that/WDT/that generates/VBZ/generates pseudorandom/NN/pseudorandom numbers/NNS/numbers /,/, which/WDT/which are/VBP/are not/RB/not truly/RB/truly random/VB/random in/IN/in the/DT/the mathematical/JJ/mathematical sense/NN/sense /,/, but/CC/but for/IN/for our/PRP$/our purposes/NNS/purposes they/PRP/they will/MD/will do/VB/do. the/DT/the random/NN/random module/NN/module contains/VBZ/contains a/DT/a function/NN/function called/VBN/called random/NN/random that/IN/that returns/NNS/returns a/DT/a floatingpoint/NN/floatingpoint number/NN/number between/IN/between 0.0/CD/0.0 and/CC/and 1.0/CD/1.0. each/DT/each time/NN/time you/PRP/you call/VBP/call random/NN/random /,/, you/PRP/you get/VBP/get the/DT/the next/JJ/next number/NN/number in/IN/in a/DT/a long/JJ/long series/NNP/series. to/TO/to see/VB/see a/DT/a sample/NN/sample /,/, run/VBN/run this/DT/this loop/NN/loop /:/: import/NN/import random/NN/random for/IN/for i/PRP/i in/IN/in range/NN/range /:/( 10/CD/10 /CD/) /:/: x/NN/x =/:/= random.random/JJ/random.random /NN/( /:/) print/NN/print x/NN/x to/TO/to generate/VB/generate a/DT/a random/NN/random number/NN/number between/IN/between 0.0/CD/0.0 and/CC/and an/DT/an upper/JJ/upper bound/NN/bound like/IN/like high/JJ/high /,/, multiply/RB/multiply x/NN/x by/IN/by high/NNP/high. as/IN/as an/DT/an exercise/NN/exercise /,/, generate/JJ/generate a/DT/a random/NN/random number/NN/number between/IN/between low/JJ/low and/CC/and high/NNP/high. as/IN/as an/DT/an additional/JJ/additional exercise/NN/exercise /,/, generate/JJ/generate a/DT/a random/NN/random integer/NN/integer between/IN/between low/JJ/low and/CC/and high/JJ/high /,/, including/VBG/including both/DT/both end/NN/end points/NNP/points. 9.5/CD/9.5 list/NN/list of/IN/of random/NN/random numbers/NNS/numbers the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to generate/VB/generate a/DT/a list/NN/list of/IN/of random/NN/random values/NNP/values. randomlist/NN/randomlist takes/VBZ/takes an/DT/an integer/NN/integer argument/NN/argument and/CC/and returns/NNS/returns a/DT/a list/NN/list of/IN/of random/NN/random numbers/NNS/numbers with/IN/with the/DT/the given/VBN/given length/NNP/length. it/PRP/it starts/VBZ/starts with/IN/with a/DT/a list/NN/list of/IN/of n/NN/n zeros/NNP/zeros. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, it/PRP/it replaces/VBZ/replaces one/CD/one of/IN/of the/DT/the elements/NNS/elements with/IN/with a/DT/a random/NN/random number/NNP/number. the/DT/the return/NN/return value/NN/value is/VBZ/is a/DT/a reference/NN/reference to/TO/to the/DT/the complete/JJ/complete list/NN/list /:/: def/NN/def randomlist/NN/randomlist /:/( n/NN/n /:/) /:/: s/NNS/s =/VBP/= /:/[ 0/-NONE-/0 /:/] n/NN/n for/IN/for i/PRP/i in/IN/in range/NN/range /:/( n/NN/n /:/) /:/: s/NNS/s /VBP/[ i/PRP/i /VBP/] =/:/= random.random/JJ/random.random /NN/( /:/) return/NN/return s/NNS/s we/PRP/we ll/VBP/ll test/NN/test this/DT/this function/NN/function with/IN/with a/DT/a list/NN/list of/IN/of eight/CD/eight elements/NNP/elements. for/IN/for purposes/NNS/purposes of/IN/of debugging/VBG/debugging /,/, it/PRP/it is/VBZ/is a/DT/a good/JJ/good idea/NN/idea to/TO/to start/VB/start small/NNP/small. 9.6/CD/9.6 counting/VBG/counting 99/CD/99 >/CD/> >/CD/> >/CD/> randomlist/NN/randomlist /:/( 8/CD/8 /CD/) 0.15156642489/CD/0.15156642489 0.498048560109/CD/0.498048560109 0.810894847068/CD/0.810894847068 0.360371157682/CD/0.360371157682 0.275119183077/CD/0.275119183077 0.328578797631/CD/0.328578797631 0.759199803101/CD/0.759199803101 0.800367163582/CD/0.800367163582 the/DT/the numbers/NNS/numbers generated/VBD/generated by/IN/by random/NN/random are/VBP/are supposed/VBN/supposed to/TO/to be/VB/be distributed/VBN/distributed uniformly/RB/uniformly /,/, which/WDT/which means/VBZ/means that/DT/that every/DT/every value/NN/value is/VBZ/is equally/RB/equally likely/NNP/likely. if/IN/if we/PRP/we divide/VBP/divide the/DT/the range/NN/range of/IN/of possible/JJ/possible values/NNS/values into/IN/into equal-sized/JJ/equal-sized buckets/NNS/buckets /,/, and/CC/and count/NN/count the/DT/the number/NN/number of/IN/of times/NNS/times a/DT/a random/NN/random value/NN/value falls/NNS/falls in/IN/in each/DT/each bucket/NN/bucket /,/, we/PRP/we should/MD/should get/VB/get roughly/RB/roughly the/DT/the same/JJ/same number/NN/number in/IN/in each/NNP/each. we/PRP/we can/MD/can test/VB/test this/DT/this theory/NN/theory by/IN/by writing/NN/writing a/DT/a program/NN/program to/TO/to divide/VB/divide the/DT/the range/NN/range into/IN/into buckets/NNS/buckets and/CC/and count/NN/count the/DT/the number/NN/number of/IN/of values/NNS/values in/IN/in each/NNP/each. 9.6/CD/9.6 counting/VBG/counting a/DT/a good/JJ/good approach/NN/approach to/TO/to problems/NNS/problems like/IN/like this/DT/this is/VBZ/is to/TO/to divide/VB/divide the/DT/the problem/NN/problem into/IN/into subproblems/NNS/subproblems and/CC/and look/VB/look for/IN/for subproblems/NNS/subproblems that/WDT/that fit/NN/fit a/DT/a computational/JJ/computational pattern/NN/pattern you/PRP/you have/VB/have seen/VBN/seen before/NNP/before. in/IN/in this/DT/this case/NN/case /,/, we/PRP/we want/VBP/want to/TO/to traverse/VB/traverse a/DT/a list/NN/list of/IN/of numbers/NNS/numbers and/CC/and count/NN/count the/DT/the number/NN/number of/IN/of times/NNS/times a/DT/a value/NN/value falls/VBZ/falls in/IN/in a/DT/a given/VBN/given range/NNP/range. that/IN/that sounds/NNS/sounds familiar/NNP/familiar. in/IN/in section/NN/section 7.8/CD/7.8 /,/, we/PRP/we wrote/VBD/wrote a/DT/a program/NN/program that/WDT/that traversed/VBN/traversed a/DT/a string/NN/string and/CC/and counted/VBD/counted the/DT/the number/NN/number of/IN/of times/NNS/times a/DT/a given/VBN/given letter/NN/letter appeared/NNP/appeared. so/RB/so /,/, we/PRP/we can/MD/can proceed/VB/proceed by/IN/by copying/NN/copying the/DT/the old/JJ/old program/NN/program and/CC/and adapting/VBG/adapting it/PRP/it for/IN/for the/DT/the current/JJ/current problem/NNP/problem. the/DT/the original/JJ/original program/NN/program was/VBD/was /:/: count/NN/count =/:/= 0/-NONE-/0 for/IN/for char/NN/char in/IN/in fruit/NN/fruit /:/: if/IN/if char/NN/char =/:/= =/:/= a/DT/a /:/: count/NN/count =/:/= count/NN/count +/:/+ 1/CD/1 print/NN/print count/NN/count the/DT/the first/JJ/first step/NN/step is/VBZ/is to/TO/to replace/VB/replace fruit/NN/fruit with/IN/with t/NN/t and/CC/and char/NN/char with/IN/with num/NNP/num. that/IN/that doesn/NN/doesn t/NN/t change/NN/change the/DT/the program/NN/program ;/:/; it/PRP/it just/RB/just makes/VBZ/makes it/PRP/it more/JJR/more readable/NNP/readable. the/DT/the second/JJ/second step/NN/step is/VBZ/is to/TO/to change/VB/change the/DT/the test/NNP/test. we/PRP/we aren/VBP/aren t/NN/t interested/JJ/interested in/IN/in finding/NN/finding letters/NNP/letters. we/PRP/we want/VBP/want to/TO/to see/VB/see if/IN/if num/NN/num is/VBZ/is between/IN/between the/DT/the given/VBN/given values/NNS/values low/JJ/low and/CC/and high/NNP/high. 100/CD/100 tuples/NNS/tuples count/NN/count =/:/= 0/-NONE-/0 for/IN/for num/NN/num in/IN/in t/NN/t /:/: if/IN/if low/JJ/low </NN/< num/NN/num </:/< high/JJ/high /:/: count/NN/count =/:/= count/NN/count +/:/+ 1/CD/1 print/NN/print count/NN/count the/DT/the last/JJ/last step/NN/step is/VBZ/is to/TO/to encapsulate/VB/encapsulate this/DT/this code/NN/code in/IN/in a/DT/a function/NN/function called/VBN/called inbucket/NNP/inbucket. the/DT/the parameters/NNS/parameters are/VBP/are the/DT/the list/NN/list and/CC/and the/DT/the values/NNS/values low/JJ/low and/CC/and high/NNP/high. def/NN/def inbucket/NN/inbucket /:/( t/NN/t /,/, low/JJ/low /,/, high/JJ/high /NN/) /:/: count/NN/count =/:/= 0/-NONE-/0 for/IN/for num/NN/num in/IN/in t/NN/t /:/: if/IN/if low/JJ/low </NN/< num/NN/num </:/< high/JJ/high /:/: count/NN/count =/:/= count/NN/count +/:/+ 1/CD/1 return/NN/return count/NN/count by/IN/by copying/NN/copying and/CC/and modifying/VBG/modifying an/DT/an existing/VBG/existing program/NN/program /,/, we/PRP/we were/VBD/were able/JJ/able to/TO/to write/VB/write this/DT/this function/NN/function quickly/RB/quickly and/CC/and save/VB/save a/DT/a lot/NN/lot of/IN/of debugging/NN/debugging time/NNP/time. this/DT/this development/NN/development plan/NN/plan is/VBZ/is called/VBN/called pattern/NN/pattern matching/NNP/matching. if/IN/if you/PRP/you find/VBP/find yourself/PRP/yourself working/VBG/working on/IN/on a/DT/a problem/NN/problem you/PRP/you have/VB/have solved/VBN/solved before/IN/before /,/, reuse/NN/reuse the/DT/the solution/NNP/solution. 9.7/CD/9.7 many/JJ/many buckets/NNS/buckets as/IN/as the/DT/the number/NN/number of/IN/of buckets/NNS/buckets increases/NNS/increases /,/, inbucket/NN/inbucket gets/NNS/gets a/DT/a little/RB/little unwieldy/NNP/unwieldy. with/IN/with two/CD/two buckets/NNS/buckets /,/, it/PRP/it s/VBZ/s not/RB/not bad/JJ/bad /:/: low/JJ/low =/NN/= inbucket/NN/inbucket /:/( a/DT/a /,/, 0.0/CD/0.0 /,/, 0.5/CD/0.5 /:/) high/JJ/high =/NN/= inbucket/NN/inbucket /:/( a/DT/a /,/, 0.5/CD/0.5 /,/, 1/CD/1 /:/) but/CC/but with/IN/with four/CD/four buckets/NNS/buckets it/PRP/it is/VBZ/is getting/VBG/getting cumbersome/NNP/cumbersome. bucket1/NNP/bucket1 =/NNP/= inbucket/NN/inbucket /:/( a/DT/a /,/, 0.0/CD/0.0 /,/, 0.25/CD/0.25 /:/) bucket2/NNP/bucket2 =/:/= inbucket/NN/inbucket /:/( a/DT/a /,/, 0.25/CD/0.25 /,/, 0.5/CD/0.5 /:/) bucket3/NNP/bucket3 =/:/= inbucket/NN/inbucket /:/( a/DT/a /,/, 0.5/CD/0.5 /,/, 0.75/CD/0.75 /:/) bucket4/NNP/bucket4 =/:/= inbucket/NN/inbucket /:/( a/DT/a /,/, 0.75/CD/0.75 /,/, 1.0/CD/1.0 /:/) there/EX/there are/VBP/are two/CD/two problems/NNP/problems. one/CD/one is/VBZ/is that/IN/that we/PRP/we have/VBP/have to/TO/to make/VB/make up/RP/up new/JJ/new variable/JJ/variable names/NNS/names for/IN/for each/DT/each result/NNP/result. the/DT/the other/JJ/other is/VBZ/is that/IN/that we/PRP/we have/VBP/have to/TO/to compute/VB/compute the/DT/the range/NN/range for/IN/for each/DT/each bucket/NNP/bucket. we/PRP/we ll/VBP/ll solve/VBP/solve the/DT/the second/JJ/second problem/NN/problem first/NNP/first. if/IN/if the/DT/the number/NN/number of/IN/of buckets/NNS/buckets is/VBZ/is numbuckets/NNS/numbuckets /,/, then/RB/then the/DT/the width/NN/width of/IN/of each/DT/each bucket/NN/bucket is/VBZ/is 1.0/CD/1.0 //CD// numbuckets/NNP/numbuckets. we/PRP/we ll/VBP/ll use/VBP/use a/DT/a loop/NN/loop to/TO/to compute/VB/compute the/DT/the range/NN/range of/IN/of each/DT/each bucket/NNP/bucket. the/DT/the loop/NN/loop variable/JJ/variable /,/, i/PRP/i /,/, counts/VBZ/counts from/IN/from 0/-NONE-/0 to/TO/to numbuckets-1/-NONE-/numbuckets-1 /:/: 9.7/CD/9.7 many/JJ/many buckets/NNS/buckets 101/CD/101 bucketwidth/NN/bucketwidth =/:/= 1.0/CD/1.0 //CD// numbuckets/NNS/numbuckets for/IN/for i/PRP/i in/IN/in range/NN/range /:/( numbuckets/NNS/numbuckets /VBP/) /:/: low/JJ/low =/NN/= i/PRP/i bucketwidth/VBP/bucketwidth high/JJ/high =/NN/= low/JJ/low +/NN/+ bucketwidth/NN/bucketwidth print/NN/print low/JJ/low /,/, to/TO/to /,/, high/JJ/high to/TO/to compute/VB/compute the/DT/the low/JJ/low end/NN/end of/IN/of each/DT/each bucket/NN/bucket /,/, we/PRP/we multiply/RB/multiply the/DT/the loop/NN/loop variable/JJ/variable by/IN/by the/DT/the bucket/NN/bucket width/NNP/width. the/DT/the high/JJ/high end/NN/end is/VBZ/is just/RB/just a/DT/a bucketwidth/NN/bucketwidth away/NNP/away. with/IN/with numbuckets/NNS/numbuckets =/:/= 8/CD/8 /,/, the/DT/the output/NN/output is/VBZ/is /:/: 0.0/CD/0.0 to/TO/to 0.125/CD/0.125 0.125/CD/0.125 to/TO/to 0.25/CD/0.25 0.25/CD/0.25 to/TO/to 0.375/CD/0.375 0.375/CD/0.375 to/TO/to 0.5/CD/0.5 0.5/CD/0.5 to/TO/to 0.625/CD/0.625 0.625/CD/0.625 to/TO/to 0.75/CD/0.75 0.75/CD/0.75 to/TO/to 0.875/CD/0.875 0.875/CD/0.875 to/TO/to 1.0/CD/1.0 you/PRP/you can/MD/can confirm/VB/confirm that/IN/that each/DT/each bucket/NN/bucket is/VBZ/is the/DT/the same/JJ/same width/NN/width /,/, that/IN/that they/PRP/they don/VBP/don t/JJ/t overlap/NN/overlap /,/, and/CC/and that/IN/that they/PRP/they cover/VBP/cover the/DT/the entire/JJ/entire range/NN/range from/IN/from 0.0/CD/0.0 to/TO/to 1.0/CD/1.0. now/RB/now back/RB/back to/TO/to the/DT/the first/JJ/first problem/NNP/problem. we/PRP/we need/VBP/need a/DT/a way/NN/way to/TO/to store/VB/store eight/CD/eight integers/NNS/integers /,/, using/VBG/using the/DT/the loop/NN/loop variable/JJ/variable to/TO/to indicate/VB/indicate one/CD/one at/IN/at a/DT/a time/NNP/time. by/IN/by now/RB/now you/PRP/you should/MD/should be/VB/be thinking/VBG/thinking /,/, list/NN/list !/./! we/PRP/we have/VBP/have to/TO/to create/VB/create the/DT/the bucket/NN/bucket list/NN/list outside/IN/outside the/DT/the loop/NN/loop /,/, because/IN/because we/PRP/we only/RB/only want/VBP/want to/TO/to do/VB/do it/PRP/it once/NNP/once. inside/NN/inside the/DT/the loop/NN/loop /,/, we/PRP/we ll/VBP/ll call/VBP/call inbucket/NN/inbucket repeatedly/RB/repeatedly and/CC/and update/VB/update the/DT/the i-eth/JJ/i-eth element/NN/element of/IN/of the/DT/the list/NN/list /:/: numbuckets/NNS/numbuckets =/VBP/= 8/CD/8 buckets/NNS/buckets =/:/= /:/[ 0/-NONE-/0 /:/] numbuckets/NNS/numbuckets bucketwidth/VBP/bucketwidth =/:/= 1.0/CD/1.0 //CD// numbuckets/NNS/numbuckets for/IN/for i/PRP/i in/IN/in range/NN/range /:/( numbuckets/NNS/numbuckets /VBP/) /:/: low/JJ/low =/NN/= i/PRP/i bucketwidth/VBP/bucketwidth high/JJ/high =/NN/= low/JJ/low +/NN/+ bucketwidth/NN/bucketwidth buckets/NNS/buckets /:/[ i/PRP/i /VBP/] =/:/= inbucket/NN/inbucket /:/( t/NN/t /,/, low/JJ/low /,/, high/JJ/high /NN/) print/NN/print buckets/NNS/buckets with/IN/with a/DT/a list/NN/list of/IN/of 1000/CD/1000 values/NNS/values /,/, this/DT/this code/NN/code produces/VBZ/produces this/DT/this bucket/NN/bucket list/NN/list /:/: /:/[ 138/CD/138 /,/, 124/CD/124 /,/, 128/CD/128 /,/, 118/CD/118 /,/, 130/CD/130 /,/, 117/CD/117 /,/, 114/CD/114 /,/, 131/CD/131 /:/] these/DT/these numbers/NNS/numbers are/VBP/are fairly/RB/fairly close/JJ/close to/TO/to 125/CD/125 /,/, which/WDT/which is/VBZ/is what/WP/what we/PRP/we expected/NNP/expected. at/IN/at least/JJS/least /,/, they/PRP/they are/VBP/are close/JJ/close enough/RB/enough that/IN/that we/PRP/we can/MD/can believe/VB/believe the/DT/the random/NN/random number/NN/number generator/NN/generator is/VBZ/is working/NNP/working. as/IN/as an/DT/an exercise/NN/exercise /,/, test/NN/test this/DT/this function/NN/function with/IN/with some/DT/some longer/JJR/longer lists/NNS/lists /,/, and/CC/and see/VB/see if/IN/if the/DT/the number/NN/number of/IN/of values/NNS/values in/IN/in each/DT/each bucket/NN/bucket tends/NNS/tends to/TO/to level/VB/level off/NNP/off. 102/CD/102 tuples/NNS/tuples 9.8/CD/9.8 a/DT/a single-pass/JJ/single-pass solution/NN/solution although/IN/although this/DT/this program/NN/program works/VBZ/works /,/, it/PRP/it is/VBZ/is not/RB/not as/IN/as efficient/JJ/efficient as/IN/as it/PRP/it could/MD/could be/VB/be. every/DT/every time/NN/time it/PRP/it calls/VBZ/calls inbucket/NN/inbucket /,/, it/PRP/it traverses/VBZ/traverses the/DT/the entire/JJ/entire list/NNP/list. as/IN/as the/DT/the number/NN/number of/IN/of buckets/NNS/buckets increases/NNS/increases /,/, that/IN/that gets/NNS/gets to/TO/to be/VB/be a/DT/a lot/NN/lot of/IN/of traversals/NNP/traversals. it/PRP/it would/MD/would be/VB/be better/JJR/better to/TO/to make/VB/make a/DT/a single/JJ/single pass/NN/pass through/IN/through the/DT/the list/NN/list and/CC/and compute/NN/compute for/IN/for each/DT/each value/NN/value the/DT/the index/NN/index of/IN/of the/DT/the bucket/NN/bucket in/IN/in which/WDT/which it/PRP/it falls/NNP/falls. then/RB/then we/PRP/we can/MD/can increment/VB/increment the/DT/the appropriate/NN/appropriate counter/NNP/counter. in/IN/in the/DT/the previous/JJ/previous section/NN/section we/PRP/we took/VBD/took an/DT/an index/NN/index /,/, i/PRP/i /,/, and/CC/and multiplied/VBD/multiplied it/PRP/it by/IN/by the/DT/the bucketwidth/NN/bucketwidth to/TO/to find/VB/find the/DT/the lower/JJR/lower bound/NN/bound of/IN/of a/DT/a given/VBN/given bucket/NNP/bucket. now/RB/now we/PRP/we want/VBP/want to/TO/to take/VB/take a/DT/a value/NN/value in/IN/in the/DT/the range/NN/range 0.0/CD/0.0 to/TO/to 1.0/CD/1.0 and/CC/and find/JJ/find the/DT/the index/NN/index of/IN/of the/DT/the bucket/NN/bucket where/WRB/where it/PRP/it falls/NNP/falls. since/IN/since this/DT/this problem/NN/problem is/VBZ/is the/DT/the inverse/NN/inverse of/IN/of the/DT/the previous/JJ/previous problem/NN/problem /,/, we/PRP/we might/MD/might guess/VB/guess that/IN/that we/PRP/we should/MD/should divide/VB/divide by/IN/by bucketwidth/NN/bucketwidth instead/RB/instead of/IN/of multiplying/NNP/multiplying. that/IN/that guess/NN/guess is/VBZ/is correct/NNP/correct. since/IN/since bucketwidth/NN/bucketwidth =/:/= 1.0/CD/1.0 //CD// numbuckets/NNS/numbuckets /,/, dividing/VBG/dividing by/IN/by bucketwidth/NN/bucketwidth is/VBZ/is the/DT/the same/JJ/same as/IN/as multiplying/NN/multiplying by/IN/by numbuckets/NNP/numbuckets. if/IN/if we/PRP/we multiply/RB/multiply a/DT/a number/NN/number in/IN/in the/DT/the range/NN/range 0.0/CD/0.0 to/TO/to 1.0/CD/1.0 by/IN/by numbuckets/NNS/numbuckets /,/, we/PRP/we get/VBP/get a/DT/a number/NN/number in/IN/in the/DT/the range/NN/range from/IN/from 0.0/CD/0.0 to/TO/to numbuckets/NNP/numbuckets. if/IN/if we/PRP/we round/VBP/round that/IN/that number/NN/number to/TO/to the/DT/the next/JJ/next lower/NN/lower integer/NN/integer /,/, we/PRP/we get/VBP/get exactly/RB/exactly what/WP/what we/PRP/we are/VBP/are looking/VBG/looking for/IN/for a/DT/a bucket/NN/bucket index/NN/index /:/: numbuckets/NNS/numbuckets =/VBP/= 8/CD/8 buckets/NNS/buckets =/:/= /:/[ 0/-NONE-/0 /:/] numbuckets/NNS/numbuckets for/IN/for i/PRP/i in/IN/in t/NN/t /:/: index/NN/index =/:/= int/NN/int /:/( i/PRP/i numbuckets/VBZ/numbuckets /:/) buckets/NNS/buckets /VBP/[ index/NN/index /:/] =/:/= buckets/NNS/buckets /VBP/[ index/NN/index /:/] +/:/+ 1/CD/1 we/PRP/we used/VBD/used the/DT/the int/NN/int function/NN/function to/TO/to convert/VB/convert a/DT/a floating-point/JJ/floating-point number/NN/number to/TO/to an/DT/an integer/NNP/integer. is/VBZ/is it/PRP/it possible/JJ/possible for/IN/for this/DT/this calculation/NN/calculation to/TO/to produce/VB/produce an/DT/an index/NN/index that/WDT/that is/VBZ/is out/RP/out of/IN/of range/NN/range /:/( either/DT/either negative/JJ/negative or/CC/or greater/JJR/greater than/IN/than len/NN/len /:/( buckets/NNS/buckets /VBP/) -1/-NONE-/-1 /:/) a/DT/a list/NN/list like/IN/like buckets/NNS/buckets that/WDT/that contains/VBZ/contains counts/VBZ/counts of/IN/of the/DT/the number/NN/number of/IN/of values/NNS/values in/IN/in each/DT/each range/NN/range is/VBZ/is called/VBN/called a/DT/a histogram/NNP/histogram. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function called/VBN/called histogram/NN/histogram that/IN/that takes/VBZ/takes a/DT/a list/NN/list and/CC/and a/DT/a number/NN/number of/IN/of buckets/NNS/buckets as/IN/as arguments/NNS/arguments and/CC/and returns/NNS/returns a/DT/a histogram/NN/histogram with/IN/with the/DT/the given/VBN/given number/NN/number of/IN/of buckets/NNP/buckets. 9.9/CD/9.9 glossary/JJ/glossary 103/CD/103 9.9/CD/9.9 glossary/JJ/glossary immutable/JJ/immutable type/NN/type /:/: a/DT/a type/NN/type in/IN/in which/WDT/which the/DT/the elements/NNS/elements can/MD/can not/RB/not be/VB/be modified/NNP/modified. assignments/NNS/assignments to/TO/to elements/NNS/elements or/CC/or slices/NNS/slices of/IN/of immutable/JJ/immutable types/NNS/types cause/VBP/cause an/DT/an error/NNP/error. mutable/JJ/mutable type/NN/type /:/: a/DT/a data/NN/data type/NN/type in/IN/in which/WDT/which the/DT/the elements/NNS/elements can/MD/can be/VB/be modified/NNP/modified. all/DT/all mutable/JJ/mutable types/NNS/types are/VBP/are compound/VBN/compound types/NNP/types. lists/NNS/lists and/CC/and dictionaries/NNS/dictionaries are/VBP/are mutable/JJ/mutable data/NNS/data types/NNS/types ;/:/; strings/NNS/strings and/CC/and tuples/NNS/tuples are/VBP/are not/NNP/not. tuple/NN/tuple /:/: a/DT/a sequence/NN/sequence type/NN/type that/WDT/that is/VBZ/is similar/JJ/similar to/TO/to a/DT/a list/NN/list except/IN/except that/DT/that it/PRP/it is/VBZ/is immutable/NNP/immutable. tuples/NNS/tuples can/MD/can be/VB/be used/VBN/used wherever/RP/wherever an/DT/an immutable/JJ/immutable type/NN/type is/VBZ/is required/VBN/required /,/, such/JJ/such as/IN/as a/DT/a key/JJ/key in/IN/in a/DT/a dictionary/NNP/dictionary. tuple/NN/tuple assignment/NN/assignment /:/: an/DT/an assignment/NN/assignment to/TO/to all/DT/all of/IN/of the/DT/the elements/NNS/elements in/IN/in a/DT/a tuple/NN/tuple using/VBG/using a/DT/a single/JJ/single assignment/NN/assignment statement/NNP/statement. tuple/NN/tuple assignment/NN/assignment occurs/NNS/occurs in/IN/in parallel/NN/parallel rather/RB/rather than/IN/than in/IN/in sequence/NN/sequence /,/, making/VBG/making it/PRP/it useful/JJ/useful for/IN/for swapping/NN/swapping values/NNP/values. deterministic/JJ/deterministic /:/: a/DT/a program/NN/program that/WDT/that does/VBZ/does the/DT/the same/JJ/same thing/NN/thing each/DT/each time/NN/time it/PRP/it is/VBZ/is called/NNP/called. pseudorandom/NN/pseudorandom /:/: a/DT/a sequence/NN/sequence of/IN/of numbers/NNS/numbers that/WDT/that appear/JJ/appear to/TO/to be/VB/be random/NN/random but/CC/but that/IN/that are/VBP/are actually/RB/actually the/DT/the result/NN/result of/IN/of a/DT/a deterministic/JJ/deterministic computation/NNP/computation. histogram/NN/histogram /:/: a/DT/a list/NN/list of/IN/of integers/NNS/integers in/IN/in which/WDT/which each/DT/each element/NN/element counts/VBZ/counts the/DT/the number/NN/number of/IN/of times/NNS/times something/NN/something happens/NNP/happens. pattern/NN/pattern matching/VBG/matching /:/: a/DT/a program/NN/program development/NN/development plan/NN/plan that/WDT/that involves/VBZ/involves identifying/VBG/identifying a/DT/a familiar/JJ/familiar computational/JJ/computational pattern/NN/pattern and/CC/and copying/VBG/copying the/DT/the solution/NN/solution to/TO/to a/DT/a similar/JJ/similar problem/NNP/problem. 104/CD/104 tuples/NNS/tuples chapter/NN/chapter 10/CD/10 dictionaries/NNS/dictionaries the/DT/the compound/NN/compound types/NNS/types you/PRP/you have/VBP/have learned/VBN/learned about/IN/about strings/NNS/strings /,/, lists/NNS/lists /,/, and/CC/and tuples/NNS/tuples use/VBP/use integers/NNS/integers as/IN/as indices/NNP/indices. if/IN/if you/PRP/you try/VBP/try to/TO/to use/VB/use any/DT/any other/JJ/other type/NN/type as/IN/as an/DT/an index/NN/index /,/, you/PRP/you get/VBP/get an/DT/an error/NNP/error. dictionaries/VBZ/dictionaries are/VBP/are similar/JJ/similar to/TO/to other/JJ/other compound/NN/compound types/NNS/types except/IN/except that/DT/that they/PRP/they can/MD/can use/VB/use any/DT/any immutable/JJ/immutable type/NN/type as/IN/as an/DT/an index/NNP/index. as/IN/as an/DT/an example/NN/example /,/, we/PRP/we will/MD/will create/VB/create a/DT/a dictionary/JJ/dictionary to/TO/to translate/VB/translate english/JJ/english words/NNS/words into/IN/into spanish/NNP/spanish. for/IN/for this/DT/this dictionary/JJ/dictionary /,/, the/DT/the indices/NNS/indices are/VBP/are strings/NNP/strings. one/CD/one way/NN/way to/TO/to create/VB/create a/DT/a dictionary/JJ/dictionary is/VBZ/is to/TO/to start/VB/start with/IN/with the/DT/the empty/NN/empty dictionary/NN/dictionary and/CC/and add/VBD/add elements/NNP/elements. the/DT/the empty/NN/empty dictionary/NN/dictionary is/VBZ/is denoted/VBN/denoted /-NONE-/{ /:/} /:/: >/:/> >/:/> >/:/> eng2sp/NNP/eng2sp =/:/= /:/{ /:/} >/:/> >/:/> >/:/> eng2sp/NNP/eng2sp /:/[ one/CD/one /CD/] =/CD/= uno/CD/uno >/CD/> >/CD/> >/CD/> eng2sp/NNP/eng2sp /NNP/[ two/CD/two /CD/] =/CD/= dos/NNS/dos the/DT/the first/JJ/first assignment/NN/assignment creates/VBZ/creates a/DT/a dictionary/JJ/dictionary named/VBN/named eng2sp/NNP/eng2sp ;/:/; the/DT/the other/JJ/other assignments/NNS/assignments add/VBP/add new/JJ/new elements/NNS/elements to/TO/to the/DT/the dictionary/NNP/dictionary. we/PRP/we can/MD/can print/VB/print the/DT/the current/JJ/current value/NN/value of/IN/of the/DT/the dictionary/JJ/dictionary in/IN/in the/DT/the usual/JJ/usual way/NN/way /:/: >/:/> >/:/> >/:/> print/NN/print eng2sp/NNP/eng2sp /NNP/{ one/CD/one /:/: uno/DT/uno /,/, two/CD/two /:/: dos/NNS/dos /VBP/} the/DT/the elements/NNS/elements of/IN/of a/DT/a dictionary/JJ/dictionary appear/NN/appear in/IN/in a/DT/a comma-separated/JJ/comma-separated list/NNP/list. each/DT/each entry/NN/entry contains/VBZ/contains an/DT/an index/NN/index and/CC/and a/DT/a value/NN/value separated/VBN/separated by/IN/by a/DT/a colon/NNP/colon. in/IN/in a/DT/a dictionary/JJ/dictionary /,/, the/DT/the indices/NNS/indices are/VBP/are called/VBN/called keys/NNS/keys /,/, so/RB/so the/DT/the elements/NNS/elements are/VBP/are called/VBN/called key-value/JJ/key-value pairs/NNP/pairs. another/DT/another way/NN/way to/TO/to create/VB/create a/DT/a dictionary/JJ/dictionary is/VBZ/is to/TO/to provide/VB/provide a/DT/a list/NN/list of/IN/of key-value/JJ/key-value pairs/NNS/pairs using/VBG/using the/DT/the same/JJ/same syntax/NN/syntax as/IN/as the/DT/the previous/JJ/previous output/NN/output /:/: 106/CD/106 dictionaries/NNS/dictionaries >/:/> >/:/> >/:/> eng2sp/NNP/eng2sp =/:/= /:/{ one/CD/one /:/: uno/DT/uno /,/, two/CD/two /:/: dos/NNS/dos /,/, three/CD/three /:/: tres/NNS/tres /VBP/} if/IN/if we/PRP/we print/VBP/print the/DT/the value/NN/value of/IN/of eng2sp/NNP/eng2sp again/RB/again /,/, we/PRP/we get/VBP/get a/DT/a surprise/NN/surprise /:/: >/:/> >/:/> >/:/> print/NN/print eng2sp/NNP/eng2sp /NNP/{ one/CD/one /:/: uno/DT/uno /,/, three/CD/three /:/: tres/NNS/tres /,/, two/CD/two /:/: dos/NNS/dos /VBP/} the/DT/the key-value/JJ/key-value pairs/NNS/pairs are/VBP/are not/RB/not in/IN/in order/NN/order !/./! fortunately/RB/fortunately /,/, there/EX/there is/VBZ/is no/DT/no reason/NN/reason to/TO/to care/VB/care about/IN/about the/DT/the order/NN/order /,/, since/IN/since the/DT/the elements/NNS/elements of/IN/of a/DT/a dictionary/JJ/dictionary are/VBP/are never/RB/never indexed/VBN/indexed with/IN/with integer/JJR/integer indices/NNP/indices. instead/RB/instead /,/, we/PRP/we use/VBP/use the/DT/the keys/NNS/keys to/TO/to look/VB/look up/RP/up the/DT/the corresponding/NN/corresponding values/NNS/values /:/: >/:/> >/:/> >/:/> print/NN/print eng2sp/NNP/eng2sp /NNP/[ two/CD/two /CD/] dos/NNS/dos the/DT/the key/JJ/key two/CD/two yields/NNS/yields the/DT/the value/NN/value dos/VBZ/dos even/RB/even though/IN/though it/PRP/it appears/VBZ/appears in/IN/in the/DT/the third/JJ/third keyvalue/NN/keyvalue pair/NNP/pair. 10.1/CD/10.1 dictionary/JJ/dictionary operations/NNS/operations the/DT/the del/NN/del statement/NN/statement removes/NNS/removes a/DT/a key-value/JJ/key-value pair/NN/pair from/IN/from a/DT/a dictionary/NNP/dictionary. for/IN/for example/NN/example /,/, the/DT/the following/VBG/following dictionary/JJ/dictionary contains/NNS/contains the/DT/the names/NNS/names of/IN/of various/JJ/various fruits/NNS/fruits and/CC/and the/DT/the number/NN/number of/IN/of each/DT/each fruit/NN/fruit in/IN/in stock/NN/stock /:/: >/:/> >/:/> >/:/> inventory/NN/inventory =/:/= /:/{ apples/NNS/apples /:/: 430/CD/430 /,/, bananas/NNS/bananas /:/: 312/CD/312 /,/, oranges/NNS/oranges /:/: 525/CD/525 /,/, pears/NNS/pears /:/: 217/CD/217 /CD/} >/CD/> >/CD/> >/CD/> print/NN/print inventory/NN/inventory /:/{ oranges/NNS/oranges /:/: 525/CD/525 /,/, apples/NNS/apples /:/: 430/CD/430 /,/, pears/NNS/pears /:/: 217/CD/217 /,/, bananas/NNS/bananas /:/: 312/CD/312 /CD/} if/IN/if someone/NN/someone buys/NNS/buys all/DT/all of/IN/of the/DT/the pears/NNS/pears /,/, we/PRP/we can/MD/can remove/VB/remove the/DT/the entry/NN/entry from/IN/from the/DT/the dictionary/JJ/dictionary /:/: >/:/> >/:/> >/:/> del/NN/del inventory/NN/inventory /:/[ pears/NNS/pears /VBP/] >/:/> >/:/> >/:/> print/NN/print inventory/NN/inventory /:/{ oranges/NNS/oranges /:/: 525/CD/525 /,/, apples/NNS/apples /:/: 430/CD/430 /,/, bananas/NNS/bananas /:/: 312/CD/312 /CD/} or/CC/or if/IN/if we/PRP/we re/VBP/re expecting/VBG/expecting more/JJR/more pears/NNS/pears soon/RB/soon /,/, we/PRP/we might/MD/might just/RB/just change/VB/change the/DT/the value/NN/value associated/VBN/associated with/IN/with pears/NNS/pears /:/: >/:/> >/:/> >/:/> inventory/NN/inventory /:/[ pears/NNS/pears /VBP/] =/:/= 0/-NONE-/0 >/:/> >/:/> >/:/> print/NN/print inventory/NN/inventory /:/{ oranges/NNS/oranges /:/: 525/CD/525 /,/, apples/NNS/apples /:/: 430/CD/430 /,/, pears/NNS/pears /:/: 0/-NONE-/0 /,/, bananas/VBZ/bananas /:/: 312/CD/312 /CD/} the/DT/the len/NN/len function/NN/function also/RB/also works/VBZ/works on/IN/on dictionaries/NNS/dictionaries ;/:/; it/PRP/it returns/VBZ/returns the/DT/the number/NN/number of/IN/of key-value/JJ/key-value pairs/NNS/pairs /:/: >/:/> >/:/> >/:/> len/NN/len /:/( inventory/NN/inventory /:/) 4/CD/4 10.2/CD/10.2 dictionary/JJ/dictionary methods/NNS/methods 107/CD/107 10.2/CD/10.2 dictionary/JJ/dictionary methods/NNS/methods a/DT/a method/NN/method is/VBZ/is similar/JJ/similar to/TO/to a/DT/a function/NN/function it/PRP/it takes/VBZ/takes arguments/NNS/arguments and/CC/and returns/NNS/returns a/DT/a value/NN/value but/CC/but the/DT/the syntax/NN/syntax is/VBZ/is different/NNP/different. for/IN/for example/NN/example /,/, the/DT/the keys/NNS/keys method/VBD/method takes/NNS/takes a/DT/a dictionary/JJ/dictionary and/CC/and returns/NNS/returns a/DT/a list/NN/list of/IN/of the/DT/the keys/NNS/keys that/WDT/that appear/JJ/appear /,/, but/CC/but instead/RB/instead of/IN/of the/DT/the function/NN/function syntax/NN/syntax keys/NNS/keys /:/( eng2sp/NNP/eng2sp /:/) /,/, we/PRP/we use/VBP/use the/DT/the method/NN/method syntax/NN/syntax eng2sp.keys/NNS/eng2sp.keys /:/( /:/) /./. >/:/> >/:/> >/:/> eng2sp.keys/NNS/eng2sp.keys /VBP/( /:/) /:/[ one/CD/one /,/, three/CD/three /,/, two/CD/two /:/] this/DT/this form/NN/form of/IN/of dot/NN/dot notation/NN/notation specifies/NNS/specifies the/DT/the name/NN/name of/IN/of the/DT/the function/NN/function /,/, keys/NNS/keys /,/, and/CC/and the/DT/the name/NN/name of/IN/of the/DT/the object/NN/object to/TO/to apply/VB/apply the/DT/the function/NN/function to/TO/to /,/, eng2sp/NNP/eng2sp. the/DT/the parentheses/NNS/parentheses indicate/VBP/indicate that/IN/that this/DT/this method/NN/method has/VBZ/has no/DT/no parameters/NNP/parameters. a/DT/a method/NN/method call/NN/call is/VBZ/is called/VBN/called an/DT/an invocation/NN/invocation ;/:/; in/IN/in this/DT/this case/NN/case /,/, we/PRP/we would/MD/would say/VB/say that/IN/that we/PRP/we are/VBP/are invoking/VBG/invoking keys/NNS/keys on/IN/on the/DT/the object/NN/object eng2sp/NNP/eng2sp. the/DT/the values/NNS/values method/VBD/method is/VBZ/is similar/JJ/similar ;/:/; it/PRP/it returns/VBZ/returns a/DT/a list/NN/list of/IN/of the/DT/the values/NNS/values in/IN/in the/DT/the dictionary/JJ/dictionary /:/: >/:/> >/:/> >/:/> eng2sp.values/NNS/eng2sp.values /VBP/( /:/) /:/[ uno/NN/uno /,/, tres/NNS/tres /,/, dos/NNS/dos /:/] the/DT/the items/NNS/items method/VBD/method returns/NNS/returns both/DT/both /,/, in/IN/in the/DT/the form/NN/form of/IN/of a/DT/a list/NN/list of/IN/of tuples/NNS/tuples one/CD/one for/IN/for each/DT/each key-value/JJ/key-value pair/NN/pair /:/: >/:/> >/:/> >/:/> eng2sp.items/NNS/eng2sp.items /VBP/( /:/) /:/[ /:/( one/CD/one /,/, uno/RB/uno /:/) /,/, /:/( three/CD/three /,/, tres/NNS/tres /:/) /,/, /:/( two/CD/two /,/, dos/NNS/dos /:/) /:/] the/DT/the syntax/NN/syntax provides/VBZ/provides useful/JJ/useful type/NN/type information/NNP/information. the/DT/the square/NN/square brackets/NNS/brackets indicate/VBP/indicate that/IN/that this/DT/this is/VBZ/is a/DT/a list/NNP/list. the/DT/the parentheses/NNS/parentheses indicate/VBP/indicate that/IN/that the/DT/the elements/NNS/elements of/IN/of the/DT/the list/NN/list are/VBP/are tuples/NNP/tuples. if/IN/if a/DT/a method/NN/method takes/VBZ/takes an/DT/an argument/NN/argument /,/, it/PRP/it uses/VBZ/uses the/DT/the same/JJ/same syntax/NN/syntax as/IN/as a/DT/a function/NN/function call/NNP/call. for/IN/for example/NN/example /,/, the/DT/the method/NN/method has/VBZ/has key/JJ/key takes/NNS/takes a/DT/a key/JJ/key and/CC/and returns/NNS/returns true/JJ/true /NN/( 1/CD/1 /CD/) if/IN/if the/DT/the key/JJ/key appears/NNS/appears in/IN/in the/DT/the dictionary/JJ/dictionary /:/: >/:/> >/:/> >/:/> eng2sp.has_key/JJ/eng2sp.has_key /NN/( one/CD/one /CD/) true/JJ/true >/NN/> >/:/> >/:/> eng2sp.has_key/JJ/eng2sp.has_key /NN/( deux/NN/deux /:/) false/NN/false if/IN/if you/PRP/you try/VBP/try to/TO/to call/VB/call a/DT/a method/NN/method without/IN/without specifying/NN/specifying an/DT/an object/NN/object /,/, you/PRP/you get/VBP/get an/DT/an error/NNP/error. in/IN/in this/DT/this case/NN/case /,/, the/DT/the error/NN/error message/NN/message is/VBZ/is not/RB/not very/RB/very helpful/JJ/helpful /:/: >/:/> >/:/> >/:/> has_key/NNP/has_key /:/( one/CD/one /CD/) nameerror/NN/nameerror /:/: has_key/NNP/has_key 108/CD/108 dictionaries/NNS/dictionaries 10.3/CD/10.3 aliasing/VBG/aliasing and/CC/and copying/VBG/copying because/IN/because dictionaries/NNS/dictionaries are/VBP/are mutable/JJ/mutable /,/, you/PRP/you need/VBP/need to/TO/to be/VB/be aware/JJ/aware of/IN/of aliasing/NNP/aliasing. whenever/NN/whenever two/CD/two variables/NNS/variables refer/VBP/refer to/TO/to the/DT/the same/JJ/same object/NN/object /,/, changes/NNS/changes to/TO/to one/CD/one affect/NN/affect the/DT/the other/NNP/other. if/IN/if you/PRP/you want/VBP/want to/TO/to modify/VB/modify a/DT/a dictionary/JJ/dictionary and/CC/and keep/VB/keep a/DT/a copy/NN/copy of/IN/of the/DT/the original/JJ/original /,/, use/NN/use the/DT/the copy/NN/copy method/NNP/method. for/IN/for example/NN/example /,/, opposites/VBZ/opposites is/VBZ/is a/DT/a dictionary/JJ/dictionary that/IN/that contains/NNS/contains pairs/NNS/pairs of/IN/of opposites/NNS/opposites /:/: >/:/> >/:/> >/:/> opposites/NNS/opposites =/VBP/= /:/{ up/IN/up /:/: down/IN/down /,/, right/RB/right /:/: wrong/JJ/wrong /,/, true/JJ/true /:/: false/NN/false /:/} >/:/> >/:/> >/:/> alias/NNS/alias =/VBP/= opposites/NNS/opposites >/:/> >/:/> >/:/> copy/NN/copy =/:/= opposites.copy/JJ/opposites.copy /NN/( /:/) alias/NNS/alias and/CC/and opposites/NNS/opposites refer/VBP/refer to/TO/to the/DT/the same/JJ/same object/NN/object ;/:/; copy/NN/copy refers/NNS/refers to/TO/to a/DT/a fresh/JJ/fresh copy/NN/copy of/IN/of the/DT/the same/JJ/same dictionary/NNP/dictionary. if/IN/if we/PRP/we modify/VBP/modify alias/RB/alias /,/, opposites/VBZ/opposites is/VBZ/is also/RB/also changed/VBN/changed /:/: >/:/> >/:/> >/:/> alias/NNS/alias /VBP/[ right/RB/right /:/] =/:/= left/NN/left >/:/> >/:/> >/:/> opposites/NNS/opposites /VBP/[ right/RB/right /:/] left/VBN/left if/IN/if we/PRP/we modify/VBP/modify copy/VBP/copy /,/, opposites/NNS/opposites is/VBZ/is unchanged/JJ/unchanged /:/: >/:/> >/:/> >/:/> copy/NN/copy /:/[ right/NN/right /:/] =/:/= privilege/NN/privilege >/:/> >/:/> >/:/> opposites/NNS/opposites /VBP/[ right/RB/right /:/] left/VBN/left 10.4/CD/10.4 sparse/NN/sparse matrices/NNS/matrices in/IN/in section/NN/section 8.14/CD/8.14 /,/, we/PRP/we used/VBD/used a/DT/a list/NN/list of/IN/of lists/NNS/lists to/TO/to represent/VB/represent a/DT/a matrix/NNP/matrix. that/WDT/that is/VBZ/is a/DT/a good/JJ/good choice/NN/choice for/IN/for a/DT/a matrix/NN/matrix with/IN/with mostly/RB/mostly nonzero/RB/nonzero values/VBZ/values /,/, but/CC/but consider/NN/consider a/DT/a sparse/NN/sparse matrix/NN/matrix like/IN/like this/DT/this one/CD/one /:/: 0/-NONE-/0 2/CD/2 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 1/CD/1 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 3/CD/3 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 0/-NONE-/0 the/DT/the list/NN/list representation/NN/representation contains/VBZ/contains a/DT/a lot/NN/lot of/IN/of zeroes/NNS/zeroes /:/: matrix/NN/matrix =/:/= /:/[ /:/[ 0,0,0,1,0/CD/0,0,0,1,0 /CD/] /,/, /:/[ 0,0,0,0,0/CD/0,0,0,0,0 /CD/] /,/, /:/[ 0,2,0,0,0/CD/0,2,0,0,0 /CD/] /,/, /:/[ 0,0,0,0,0/CD/0,0,0,0,0 /CD/] /,/, /:/[ 0,0,0,3,0/CD/0,0,0,3,0 /CD/] /CD/] 10.5/CD/10.5 hints/NNS/hints 109/CD/109 an/DT/an alternative/JJ/alternative is/VBZ/is to/TO/to use/VB/use a/DT/a dictionary/NNP/dictionary. for/IN/for the/DT/the keys/NNS/keys /,/, we/PRP/we can/MD/can use/VB/use tuples/NNS/tuples that/WDT/that contain/NN/contain the/DT/the row/NN/row and/CC/and column/NN/column numbers/NNP/numbers. here/RB/here is/VBZ/is the/DT/the dictionary/JJ/dictionary representation/NN/representation of/IN/of the/DT/the same/JJ/same matrix/NN/matrix /:/: matrix/NN/matrix =/:/= /:/{ /:/( 0,3/CD/0,3 /CD/) /:/: 1/CD/1 /,/, /:/( 2/CD/2 /,/, 1/CD/1 /:/) /:/: 2/CD/2 /,/, /:/( 4/CD/4 /,/, 3/CD/3 /:/) /:/: 3/LS/3 /:/} we/PRP/we only/RB/only need/VBP/need three/CD/three key-value/JJ/key-value pairs/NNS/pairs /,/, one/CD/one for/IN/for each/DT/each nonzero/NN/nonzero element/NN/element of/IN/of the/DT/the matrix/NNP/matrix. each/DT/each key/JJ/key is/VBZ/is a/DT/a tuple/NN/tuple /,/, and/CC/and each/DT/each value/NN/value is/VBZ/is an/DT/an integer/NNP/integer. to/TO/to access/NN/access an/DT/an element/NN/element of/IN/of the/DT/the matrix/NN/matrix /,/, we/PRP/we could/MD/could use/VB/use the/DT/the /NN/[ /:/] operator/NN/operator /:/: matrix/NN/matrix /:/[ 0,3/CD/0,3 /CD/] 1/CD/1 notice/NN/notice that/WDT/that the/DT/the syntax/NN/syntax for/IN/for the/DT/the dictionary/JJ/dictionary representation/NN/representation is/VBZ/is not/RB/not the/DT/the same/JJ/same as/IN/as the/DT/the syntax/NN/syntax for/IN/for the/DT/the nested/VBN/nested list/NN/list representation/NNP/representation. instead/RB/instead of/IN/of two/CD/two integer/JJR/integer indices/NNS/indices /,/, we/PRP/we use/VBP/use one/CD/one index/NN/index /,/, which/WDT/which is/VBZ/is a/DT/a tuple/NN/tuple of/IN/of integers/NNP/integers. there/EX/there is/VBZ/is one/CD/one problem/NNP/problem. if/IN/if we/PRP/we specify/VBP/specify an/DT/an element/NN/element that/IN/that is/VBZ/is zero/CD/zero /,/, we/PRP/we get/VBP/get an/DT/an error/NN/error /,/, because/IN/because there/EX/there is/VBZ/is no/DT/no entry/NN/entry in/IN/in the/DT/the dictionary/JJ/dictionary with/IN/with that/DT/that key/JJ/key /:/: >/:/> >/:/> >/:/> matrix/NN/matrix /:/[ 1,3/CD/1,3 /CD/] keyerror/NN/keyerror /:/: /:/( 1/CD/1 /,/, 3/CD/3 /:/) the/DT/the get/NN/get method/NN/method solves/NNS/solves this/DT/this problem/NN/problem /:/: >/:/> >/:/> >/:/> matrix.get/JJ/matrix.get /NN/( /:/( 0,3/CD/0,3 /CD/) /,/, 0/-NONE-/0 /:/) 1/LS/1 the/DT/the first/JJ/first argument/NN/argument is/VBZ/is the/DT/the key/JJ/key ;/:/; the/DT/the second/JJ/second argument/NN/argument is/VBZ/is the/DT/the value/NN/value get/NN/get should/MD/should return/VB/return if/IN/if the/DT/the key/JJ/key is/VBZ/is not/RB/not in/IN/in the/DT/the dictionary/JJ/dictionary /:/: >/:/> >/:/> >/:/> matrix.get/JJ/matrix.get /NN/( /:/( 1,3/CD/1,3 /CD/) /,/, 0/-NONE-/0 /:/) 0/-NONE-/0 get/NN/get definitely/RB/definitely improves/VBZ/improves the/DT/the semantics/NNS/semantics of/IN/of accessing/VBG/accessing a/DT/a sparse/NN/sparse matrix/NNP/matrix. shame/NN/shame about/IN/about the/DT/the syntax/NNP/syntax. 10.5/CD/10.5 hints/NNS/hints if/IN/if you/PRP/you played/VBD/played around/IN/around with/IN/with the/DT/the fibonacci/NN/fibonacci function/NN/function from/IN/from section/NN/section 5.7/CD/5.7 /,/, you/PRP/you might/MD/might have/VB/have noticed/VBN/noticed that/IN/that the/DT/the bigger/JJR/bigger the/DT/the argument/NN/argument you/PRP/you provide/VB/provide /,/, the/DT/the longer/NN/longer the/DT/the function/NN/function takes/VBZ/takes to/TO/to run/NNP/run. furthermore/NN/furthermore /,/, the/DT/the run/NN/run time/NN/time increases/NNS/increases very/RB/very quickly/NNP/quickly. on/IN/on one/CD/one of/IN/of our/PRP$/our machines/NNS/machines /,/, fibonacci/VBP/fibonacci /:/( 20/CD/20 /CD/) finishes/NNS/finishes instantly/RB/instantly /,/, fibonacci/NN/fibonacci /:/( 30/CD/30 /CD/) takes/NNS/takes about/IN/about a/DT/a second/JJ/second /,/, and/CC/and fibonacci/NN/fibonacci /:/( 40/CD/40 /CD/) takes/NNS/takes roughly/RB/roughly forever/NNP/forever. 110/CD/110 dictionaries/NNS/dictionaries to/TO/to understand/VB/understand why/WRB/why /,/, consider/NN/consider this/DT/this call/NN/call graph/NN/graph for/IN/for fibonacci/NN/fibonacci with/IN/with n/NN/n =/:/= 4/CD/4 /:/: fibonacci/NN/fibonacci n/NN/n 4/CD/4 fibonacci/NN/fibonacci n/NN/n 3/CD/3 fibonacci/NN/fibonacci n/NN/n 2/CD/2 fibonacci/NN/fibonacci n/NN/n 0/-NONE-/0 fibonacci/NN/fibonacci n/NN/n 1/CD/1 fibonacci/NN/fibonacci n/NN/n 1/CD/1 fibonacci/NN/fibonacci n/NN/n 2/CD/2 fibonacci/NN/fibonacci n/NN/n 0/-NONE-/0 fibonacci/NN/fibonacci n/NN/n 1/CD/1 a/DT/a call/NN/call graph/NN/graph shows/VBZ/shows a/DT/a set/NN/set function/NN/function frames/VBZ/frames /,/, with/IN/with lines/NNS/lines connecting/VBG/connecting each/DT/each frame/NN/frame to/TO/to the/DT/the frames/NNS/frames of/IN/of the/DT/the functions/NNS/functions it/PRP/it calls/NNP/calls. at/IN/at the/DT/the top/JJ/top of/IN/of the/DT/the graph/NN/graph /,/, fibonacci/NN/fibonacci with/IN/with n/NN/n =/:/= 4/CD/4 calls/NNS/calls fibonacci/VBP/fibonacci with/IN/with n/NN/n =/:/= 3/CD/3 and/CC/and n/NN/n =/:/= 2/CD/2. in/IN/in turn/NN/turn /,/, fibonacci/NN/fibonacci with/IN/with n/NN/n =/:/= 3/CD/3 calls/NNS/calls fibonacci/VBP/fibonacci with/IN/with n/NN/n =/:/= 2/CD/2 and/CC/and n/NN/n =/:/= 1/CD/1. and/CC/and so/RB/so on/NNP/on. count/NN/count how/WRB/how many/JJ/many times/NNS/times fibonacci/VBP/fibonacci /:/( 0/-NONE-/0 /:/) and/CC/and fibonacci/NN/fibonacci /:/( 1/CD/1 /CD/) are/VBP/are called/NNP/called. this/DT/this is/VBZ/is an/DT/an inefficient/NN/inefficient solution/NN/solution to/TO/to the/DT/the problem/NN/problem /,/, and/CC/and it/PRP/it gets/VBZ/gets far/RB/far worse/JJR/worse as/IN/as the/DT/the argument/NN/argument gets/VBZ/gets bigger/NNP/bigger. a/DT/a good/JJ/good solution/NN/solution is/VBZ/is to/TO/to keep/VB/keep track/NN/track of/IN/of values/NNS/values that/WDT/that have/VBP/have already/RB/already been/VBN/been computed/VBN/computed by/IN/by storing/NN/storing them/PRP/them in/IN/in a/DT/a dictionary/NNP/dictionary. a/DT/a previously/RB/previously computed/VBN/computed value/NN/value that/IN/that is/VBZ/is stored/VBN/stored for/IN/for later/JJ/later use/NN/use is/VBZ/is called/VBN/called a/DT/a hint/NNP/hint. here/RB/here is/VBZ/is an/DT/an implementation/NN/implementation of/IN/of fibonacci/NN/fibonacci using/VBG/using hints/NNS/hints /:/: previous/JJ/previous =/NN/= /:/{ 0/-NONE-/0 /:/: 1/LS/1 /,/, 1/CD/1 /:/: 1/CD/1 /CD/} def/NN/def fibonacci/NN/fibonacci /:/( n/NN/n /:/) /:/: if/IN/if previous.has_key/JJ/previous.has_key /NN/( n/NN/n /:/) /:/: return/NN/return previous/JJ/previous /NN/[ n/NN/n /:/] else/NN/else /:/: newvalue/JJ/newvalue =/NN/= fibonacci/NN/fibonacci /:/( n-1/-NONE-/n-1 /:/) +/:/+ fibonacci/NN/fibonacci /:/( n-2/-NONE-/n-2 /:/) previous/JJ/previous /NN/[ n/NN/n /:/] =/:/= newvalue/NN/newvalue return/NN/return newvalue/NN/newvalue the/DT/the dictionary/JJ/dictionary named/VBN/named previous/JJ/previous keeps/NNS/keeps track/VBP/track of/IN/of the/DT/the fibonacci/NN/fibonacci numbers/NNS/numbers we/PRP/we already/RB/already know/NNP/know. we/PRP/we start/VBP/start with/IN/with only/RB/only two/CD/two pairs/NNS/pairs /:/: 0/-NONE-/0 maps/VBZ/maps to/TO/to 1/CD/1 ;/:/; and/CC/and 1/CD/1 maps/NNS/maps to/TO/to 1/CD/1. whenever/NN/whenever fibonacci/NN/fibonacci is/VBZ/is called/VBN/called /,/, it/PRP/it checks/VBZ/checks the/DT/the dictionary/JJ/dictionary to/TO/to determine/VB/determine if/IN/if it/PRP/it contains/VBZ/contains the/DT/the result/NNP/result. if/IN/if it/PRP/it s/VBZ/s there/RB/there /,/, the/DT/the function/NN/function can/MD/can return/VB/return immediately/RB/immediately without/IN/without making/VBG/making any/DT/any more/JJR/more recursive/JJ/recursive calls/NNP/calls. if/IN/if not/RB/not /,/, it/PRP/it has/VBZ/has to/TO/to compute/VB/compute the/DT/the new/JJ/new value/NNP/value. the/DT/the new/JJ/new value/NN/value is/VBZ/is added/VBN/added to/TO/to the/DT/the dictionary/JJ/dictionary before/IN/before the/DT/the function/NN/function returns/NNP/returns. 10.6/CD/10.6 long/RB/long integers/NNS/integers 111/CD/111 using/VBG/using this/DT/this version/NN/version of/IN/of fibonacci/NN/fibonacci /,/, our/PRP$/our machines/NNS/machines can/MD/can compute/VB/compute fibonacci/NN/fibonacci /:/( 40/CD/40 /CD/) in/IN/in an/DT/an eyeblink/NNP/eyeblink. but/CC/but when/WRB/when we/PRP/we try/VBP/try to/TO/to compute/VB/compute fibonacci/NN/fibonacci /:/( 50/CD/50 /CD/) /,/, we/PRP/we see/VBP/see the/DT/the following/VBG/following /:/: >/:/> >/:/> >/:/> fibonacci/NN/fibonacci /:/( 50/CD/50 /CD/) 20365011074l/CD/20365011074l the/DT/the l/NN/l at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the result/NN/result indicates/VBZ/indicates that/IN/that the/DT/the answer/NN/answer +/:/+ /:/( 20,365,011,074/CD/20,365,011,074 /CD/) is/VBZ/is too/RB/too big/JJ/big to/TO/to fit/VB/fit into/IN/into a/DT/a python/NN/python integer/NNP/integer. python/NN/python has/VBZ/has automatically/RB/automatically converted/VBN/converted the/DT/the result/NN/result to/TO/to a/DT/a long/JJ/long integer/NNP/integer. 10.6/CD/10.6 long/RB/long integers/NNS/integers python/VBP/python provides/NNS/provides a/DT/a type/NN/type called/VBN/called long/JJ/long that/IN/that can/MD/can handle/VB/handle any/DT/any size/NN/size integer/NNP/integer. there/EX/there are/VBP/are two/CD/two ways/NNS/ways to/TO/to create/VB/create a/DT/a long/JJ/long value/NNP/value. one/CD/one is/VBZ/is to/TO/to write/VB/write an/DT/an integer/NN/integer with/IN/with a/DT/a capital/NN/capital l/NN/l at/IN/at the/DT/the end/NN/end /:/: >/:/> >/:/> >/:/> type/NN/type /:/( 1l/CD/1l /CD/) the/DT/the other/JJ/other is/VBZ/is to/TO/to use/VB/use the/DT/the long/JJ/long function/NN/function to/TO/to convert/VB/convert a/DT/a value/NN/value to/TO/to a/DT/a long/NNP/long. long/RB/long can/MD/can accept/VB/accept any/DT/any numerical/JJ/numerical type/NN/type and/CC/and even/RB/even strings/NNS/strings of/IN/of digits/NNS/digits /:/: >/:/> >/:/> >/:/> long/RB/long /:/( 1/CD/1 /CD/) 1l/CD/1l >/CD/> >/CD/> >/CD/> long/JJ/long /NN/( 3.9/CD/3.9 /CD/) 3l/CD/3l >/CD/> >/CD/> >/CD/> long/JJ/long /NN/( 57/CD/57 /CD/) 57l/CD/57l all/DT/all of/IN/of the/DT/the math/NN/math operations/NNS/operations work/VB/work on/IN/on longs/NNS/longs /,/, so/RB/so in/IN/in general/JJ/general any/DT/any code/NN/code that/IN/that works/NNS/works with/IN/with integers/NNS/integers will/MD/will also/RB/also work/VB/work with/IN/with long/RB/long integers/NNP/integers. any/DT/any time/NN/time the/DT/the result/NN/result of/IN/of a/DT/a computation/NN/computation is/VBZ/is too/RB/too big/JJ/big to/TO/to be/VB/be represented/VBN/represented with/IN/with an/DT/an integer/JJR/integer /,/, python/NN/python detects/NNS/detects the/DT/the overflow/NN/overflow and/CC/and returns/NNS/returns the/DT/the result/NN/result as/IN/as a/DT/a long/JJ/long integer/NNP/integer. for/IN/for example/NN/example /:/: >/NN/> >/:/> >/:/> 1000/CD/1000 1000/CD/1000 1000000/CD/1000000 >/CD/> >/CD/> >/CD/> 100000/CD/100000 100000/CD/100000 10000000000l/CD/10000000000l in/IN/in the/DT/the first/JJ/first case/NN/case the/DT/the result/NN/result has/VBZ/has type/NN/type int/NN/int ;/:/; in/IN/in the/DT/the second/JJ/second case/NN/case it/PRP/it is/VBZ/is long/NNP/long. 10.7/CD/10.7 counting/VBG/counting letters/NNS/letters in/IN/in chapter/NN/chapter 7/CD/7 /,/, we/PRP/we wrote/VBD/wrote a/DT/a function/NN/function that/WDT/that counted/VBN/counted the/DT/the number/NN/number of/IN/of occurrences/NNS/occurrences of/IN/of a/DT/a letter/NN/letter in/IN/in a/DT/a string/NNP/string. a/DT/a more/JJR/more general/JJ/general version/NN/version of/IN/of this/DT/this problem/NN/problem is/VBZ/is to/TO/to form/NN/form a/DT/a histogram/NN/histogram 112/CD/112 dictionaries/NNS/dictionaries of/IN/of the/DT/the letters/NNS/letters in/IN/in the/DT/the string/NN/string /,/, that/IN/that is/VBZ/is /,/, how/WRB/how many/JJ/many times/NNS/times each/DT/each letter/NN/letter appears/NNP/appears. such/JJ/such a/DT/a histogram/NN/histogram might/MD/might be/VB/be useful/JJ/useful for/IN/for compressing/NN/compressing a/DT/a text/NN/text file/NNP/file. because/IN/because different/JJ/different letters/NNS/letters appear/VBP/appear with/IN/with different/JJ/different frequencies/NNS/frequencies /,/, we/PRP/we can/MD/can compress/VB/compress a/DT/a file/NN/file by/IN/by using/VBG/using shorter/NN/shorter codes/NNS/codes for/IN/for common/JJ/common letters/NNS/letters and/CC/and longer/JJR/longer codes/NNS/codes for/IN/for letters/NNS/letters that/WDT/that appear/JJ/appear less/RBR/less frequently/NNP/frequently. dictionaries/NNS/dictionaries provide/VB/provide an/DT/an elegant/JJ/elegant way/NN/way to/TO/to generate/VB/generate a/DT/a histogram/NN/histogram /:/: >/:/> >/:/> >/:/> lettercounts/NNS/lettercounts =/VBP/= /:/{ /:/} >/:/> >/:/> >/:/> for/IN/for letter/NN/letter in/IN/in mississippi/NN/mississippi /:/: /:/... lettercounts/NNS/lettercounts /VBP/[ letter/NN/letter /:/] =/:/= lettercounts.get/JJ/lettercounts.get /NN/( letter/NN/letter /,/, 0/-NONE-/0 /:/) +/:/+ 1/CD/1 /:/... >/CD/> >/CD/> >/CD/> lettercounts/NNS/lettercounts /:/{ m/NN/m /:/: 1/LS/1 /,/, s/NNS/s /:/: 4/CD/4 /,/, p/NN/p /:/: 2/CD/2 /,/, i/PRP/i /:/: 4/CD/4 /CD/} we/PRP/we start/VBP/start with/IN/with an/DT/an empty/JJ/empty dictionary/NNP/dictionary. for/IN/for each/DT/each letter/NN/letter in/IN/in the/DT/the string/NN/string /,/, we/PRP/we find/VBP/find the/DT/the current/JJ/current count/NN/count /:/( possibly/RB/possibly zero/CD/zero /CD/) and/CC/and increment/NN/increment it/NNP/it. at/IN/at the/DT/the end/NN/end /,/, the/DT/the dictionary/JJ/dictionary contains/NNS/contains pairs/NNS/pairs of/IN/of letters/NNS/letters and/CC/and their/PRP$/their frequencies/NNP/frequencies. it/PRP/it might/MD/might be/VB/be more/RBR/more appealing/VBG/appealing to/TO/to display/VB/display the/DT/the histogram/NN/histogram in/IN/in alphabetical/JJ/alphabetical order/NNP/order. we/PRP/we can/MD/can do/VB/do that/DT/that with/IN/with the/DT/the items/NNS/items and/CC/and sort/NN/sort methods/NNS/methods /:/: >/:/> >/:/> >/:/> letteritems/NNS/letteritems =/VBP/= lettercounts.items/NNS/lettercounts.items /:/( /:/) >/:/> >/:/> >/:/> letteritems.sort/JJ/letteritems.sort /NN/( /:/) >/:/> >/:/> >/:/> print/NN/print letteritems/NNS/letteritems /:/[ /:/( m/NN/m /,/, 1/CD/1 /:/) /,/, /:/( i/PRP/i /,/, 4/CD/4 /:/) /,/, /:/( p/NN/p /,/, 2/CD/2 /:/) /,/, /:/( s/NNS/s /,/, 4/CD/4 /:/) /CD/] you/PRP/you have/VBP/have seen/VBN/seen the/DT/the items/NNS/items method/VBD/method before/IN/before /,/, but/CC/but sort/NN/sort is/VBZ/is the/DT/the first/JJ/first method/NN/method you/PRP/you have/VB/have encountered/VBN/encountered that/IN/that applies/NNS/applies to/TO/to lists/NNP/lists. there/RB/there are/VBP/are several/JJ/several other/JJ/other list/NN/list methods/NNS/methods /,/, including/VBG/including append/NN/append /,/, extend/VBP/extend /,/, and/CC/and reverse/NNP/reverse. consult/NN/consult the/DT/the python/NN/python documentation/NN/documentation for/IN/for details/NNP/details. 10.8/CD/10.8 glossary/JJ/glossary dictionary/JJ/dictionary /:/: a/DT/a collection/NN/collection of/IN/of key-value/JJ/key-value pairs/NNS/pairs that/WDT/that maps/VBZ/maps from/IN/from keys/NNS/keys to/TO/to values/NNP/values. the/DT/the keys/NNS/keys can/MD/can be/VB/be any/DT/any immutable/JJ/immutable type/NN/type /,/, and/CC/and the/DT/the values/NNS/values can/MD/can be/VB/be any/DT/any type/NNP/type. key/NN/key /:/: a/DT/a value/NN/value that/WDT/that is/VBZ/is used/VBN/used to/TO/to look/VB/look up/RP/up an/DT/an entry/NN/entry in/IN/in a/DT/a dictionary/NNP/dictionary. key-value/JJ/key-value pair/NN/pair /:/: one/CD/one of/IN/of the/DT/the items/NNS/items in/IN/in a/DT/a dictionary/NNP/dictionary. method/NN/method /:/: a/DT/a kind/NN/kind of/IN/of function/NN/function that/IN/that is/VBZ/is called/VBN/called with/IN/with a/DT/a different/JJ/different syntax/NN/syntax and/CC/and invoked/VBD/invoked on/IN/on an/DT/an object/NNP/object. invoke/NN/invoke /:/: to/TO/to call/VB/call a/DT/a method/NNP/method. hint/NN/hint /:/: temporary/JJ/temporary storage/NN/storage of/IN/of a/DT/a precomputed/VBN/precomputed value/NN/value to/TO/to avoid/VB/avoid redundant/JJ/redundant computation/NNP/computation. 10.8/CD/10.8 glossary/JJ/glossary 113/CD/113 overflow/NN/overflow /:/: a/DT/a numerical/JJ/numerical result/NN/result that/WDT/that is/VBZ/is too/RB/too large/JJ/large to/TO/to be/VB/be represented/VBN/represented in/IN/in a/DT/a numerical/JJ/numerical format/NNP/format. 114/CD/114 dictionaries/NNS/dictionaries chapter/NN/chapter 11/CD/11 files/NNS/files and/CC/and exceptions/NNS/exceptions while/IN/while a/DT/a program/NN/program is/VBZ/is running/VBG/running /,/, its/PRP$/its data/NNS/data is/VBZ/is in/IN/in memory/NNP/memory. when/WRB/when the/DT/the program/NN/program ends/VBZ/ends /,/, or/CC/or the/DT/the computer/NN/computer shuts/NNS/shuts down/IN/down /,/, data/NNS/data in/IN/in memory/NN/memory disappears/NNP/disappears. to/TO/to store/VB/store data/NNS/data permanently/RB/permanently /,/, you/PRP/you have/VBP/have to/TO/to put/VB/put it/PRP/it in/IN/in a/DT/a file/NNP/file. files/VBZ/files are/VBP/are usually/RB/usually stored/VBN/stored on/IN/on a/DT/a hard/JJ/hard drive/JJ/drive /,/, floppy/JJ/floppy drive/JJ/drive /,/, or/CC/or cd-rom/NNP/cd-rom. when/WRB/when there/EX/there are/VBP/are a/DT/a large/JJ/large number/NN/number of/IN/of files/NNS/files /,/, they/PRP/they are/VBP/are often/RB/often organized/VBN/organized into/IN/into directories/NNS/directories /:/( also/RB/also called/VBN/called folders/NNS/folders /:/) /./. each/DT/each file/NN/file is/VBZ/is identified/VBN/identified by/IN/by a/DT/a unique/JJ/unique name/NN/name /,/, or/CC/or a/DT/a combination/NN/combination of/IN/of a/DT/a file/NN/file name/NN/name and/CC/and a/DT/a directory/NN/directory name/NNP/name. by/IN/by reading/NN/reading and/CC/and writing/VBG/writing files/NNS/files /,/, programs/NNS/programs can/MD/can exchange/VB/exchange information/NN/information with/IN/with each/DT/each other/JJ/other and/CC/and generate/JJ/generate printable/JJ/printable formats/NNS/formats like/IN/like pdf/NNP/pdf. working/NN/working with/IN/with files/NNS/files is/VBZ/is a/DT/a lot/NN/lot like/IN/like working/NN/working with/IN/with books/NNP/books. to/TO/to use/VB/use a/DT/a book/NN/book /,/, you/PRP/you have/VBP/have to/TO/to open/VB/open it/NNP/it. when/WRB/when you/PRP/you re/VBP/re done/VBN/done /,/, you/PRP/you have/VBP/have to/TO/to close/VB/close it/NNP/it. while/IN/while the/DT/the book/NN/book is/VBZ/is open/JJ/open /,/, you/PRP/you can/MD/can either/VB/either write/JJ/write in/IN/in it/PRP/it or/CC/or read/VB/read from/IN/from it/NNP/it. in/IN/in either/DT/either case/NN/case /,/, you/PRP/you know/VBP/know where/WRB/where you/PRP/you are/VBP/are in/IN/in the/DT/the book/NNP/book. most/JJS/most of/IN/of the/DT/the time/NN/time /,/, you/PRP/you read/VBP/read the/DT/the whole/JJ/whole book/NN/book in/IN/in its/PRP$/its natural/JJ/natural order/NN/order /,/, but/CC/but you/PRP/you can/MD/can also/RB/also skip/VB/skip around/NNP/around. all/DT/all of/IN/of this/DT/this applies/NNS/applies to/TO/to files/NNS/files as/IN/as well/NNP/well. to/TO/to open/VB/open a/DT/a file/NN/file /,/, you/PRP/you specify/VB/specify its/PRP$/its name/NN/name and/CC/and indicate/VB/indicate whether/IN/whether you/PRP/you want/VBP/want to/TO/to read/VB/read or/CC/or write/NNP/write. opening/VBG/opening a/DT/a file/NN/file creates/VBZ/creates a/DT/a file/NN/file object/NNP/object. in/IN/in this/DT/this example/NN/example /,/, the/DT/the variable/JJ/variable f/NN/f refers/NNS/refers to/TO/to the/DT/the new/JJ/new file/NN/file object/NNP/object. >/NNP/> >/NNP/> >/NNP/> f/NN/f =/:/= open/JJ/open /NN/( test.dat,w/NN/test.dat,w /:/) >/:/> >/:/> >/:/> print/NN/print f/NN/f the/DT/the open/JJ/open function/NN/function takes/VBZ/takes two/CD/two arguments/NNP/arguments. the/DT/the first/JJ/first is/VBZ/is the/DT/the name/NN/name of/IN/of the/DT/the file/NN/file /,/, and/CC/and the/DT/the second/JJ/second is/VBZ/is the/DT/the mode/NNP/mode. mode/NN/mode w/NN/w means/VBZ/means that/DT/that we/PRP/we are/VBP/are opening/VBG/opening the/DT/the file/NN/file for/IN/for writing/NNP/writing. 116/CD/116 files/NNS/files and/CC/and exceptions/NNS/exceptions if/IN/if there/EX/there is/VBZ/is no/DT/no file/NN/file named/VBD/named test.dat/JJ/test.dat /,/, it/PRP/it will/MD/will be/VB/be created/NNP/created. if/IN/if there/EX/there already/RB/already is/VBZ/is one/CD/one /,/, it/PRP/it will/MD/will be/VB/be replaced/VBN/replaced by/IN/by the/DT/the file/NN/file we/PRP/we are/VBP/are writing/NNP/writing. when/WRB/when we/PRP/we print/VBP/print the/DT/the file/NN/file object/NN/object /,/, we/PRP/we see/VBP/see the/DT/the name/NN/name of/IN/of the/DT/the file/NN/file /,/, the/DT/the mode/NN/mode /,/, and/CC/and the/DT/the location/NN/location of/IN/of the/DT/the object/NNP/object. to/TO/to put/VB/put data/NNS/data in/IN/in the/DT/the file/NN/file we/PRP/we invoke/VBP/invoke the/DT/the write/JJ/write method/NN/method on/IN/on the/DT/the file/NN/file object/NN/object /:/: >/:/> >/:/> >/:/> f.write/JJ/f.write /NN/( now/RB/now is/VBZ/is the/DT/the time/NN/time /:/) >/:/> >/:/> >/:/> f.write/JJ/f.write /NN/( to/TO/to close/VB/close the/DT/the file/JJ/file /NN/) closing/NN/closing the/DT/the file/NN/file tells/VBZ/tells the/DT/the system/NN/system that/IN/that we/PRP/we are/VBP/are done/VBN/done writing/VBG/writing and/CC/and makes/VBZ/makes the/DT/the file/NN/file available/JJ/available for/IN/for reading/NN/reading /:/: >/:/> >/:/> >/:/> f.close/JJ/f.close /NN/( /:/) now/RB/now we/PRP/we can/MD/can open/VB/open the/DT/the file/NN/file again/RB/again /,/, this/DT/this time/NN/time for/IN/for reading/NN/reading /,/, and/CC/and read/VB/read the/DT/the contents/NNS/contents into/IN/into a/DT/a string/NNP/string. this/DT/this time/NN/time /,/, the/DT/the mode/NN/mode argument/NN/argument is/VBZ/is r/NN/r for/IN/for reading/NN/reading /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( test.dat,r/NN/test.dat,r /:/) if/IN/if we/PRP/we try/VBP/try to/TO/to open/VB/open a/DT/a file/NN/file that/WDT/that doesn/NN/doesn t/VBD/t exist/NN/exist /,/, we/PRP/we get/VBP/get an/DT/an error/NN/error /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( test.cat,r/NN/test.cat,r /:/) ioerror/NN/ioerror /:/: /:/[ errno/NN/errno 2/CD/2 /CD/] no/DT/no such/JJ/such file/NN/file or/CC/or directory/NN/directory /:/: test.cat/JJ/test.cat not/RB/not surprisingly/RB/surprisingly /,/, the/DT/the read/NN/read method/NN/method reads/NNS/reads data/NNS/data from/IN/from the/DT/the file/NNP/file. with/IN/with no/DT/no arguments/NNS/arguments /,/, it/PRP/it reads/VBZ/reads the/DT/the entire/JJ/entire contents/NNS/contents of/IN/of the/DT/the file/NN/file /:/: >/:/> >/:/> >/:/> text/NN/text =/:/= f.read/JJ/f.read /NN/( /:/) >/:/> >/:/> >/:/> print/NN/print text/NN/text now/RB/now is/VBZ/is the/DT/the timeto/NN/timeto close/NN/close the/DT/the file/NN/file there/RB/there is/VBZ/is no/DT/no space/NN/space between/IN/between time/NN/time and/CC/and to/TO/to because/IN/because we/PRP/we did/VBD/did not/RB/not write/VB/write a/DT/a space/NN/space between/IN/between the/DT/the strings/NNP/strings. read/NN/read can/MD/can also/RB/also take/VB/take an/DT/an argument/NN/argument that/IN/that indicates/VBZ/indicates how/WRB/how many/JJ/many characters/NNS/characters to/TO/to read/VB/read /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( test.dat,r/NN/test.dat,r /:/) >/:/> >/:/> >/:/> print/NN/print f.read/JJ/f.read /NN/( 5/CD/5 /CD/) now/RB/now i/PRP/i if/IN/if not/RB/not enough/RB/enough characters/NNS/characters are/VBP/are left/VBN/left in/IN/in the/DT/the file/NN/file /,/, read/VBD/read returns/NNS/returns the/DT/the remaining/VBG/remaining characters/NNP/characters. when/WRB/when we/PRP/we get/VBP/get to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the file/NN/file /,/, read/VBD/read returns/NNS/returns the/DT/the empty/NN/empty string/VBG/string /:/: >/:/> >/:/> >/:/> print/NN/print f.read/JJ/f.read /NN/( 1000006/CD/1000006 /CD/) s/NNS/s the/DT/the timeto/NN/timeto close/NN/close the/DT/the file/NN/file >/:/> >/:/> >/:/> print/NN/print f.read/JJ/f.read /NN/( /:/) >/:/> >/:/> >/:/> 11.1/CD/11.1 text/NN/text files/NNS/files 117/CD/117 the/DT/the following/JJ/following function/NN/function copies/NNS/copies a/DT/a file/NN/file /,/, reading/NN/reading and/CC/and writing/VBG/writing up/RP/up to/TO/to fifty/JJ/fifty characters/NNS/characters at/IN/at a/DT/a time/NNP/time. the/DT/the first/JJ/first argument/NN/argument is/VBZ/is the/DT/the name/NN/name of/IN/of the/DT/the original/JJ/original file/NN/file ;/:/; the/DT/the second/JJ/second is/VBZ/is the/DT/the name/NN/name of/IN/of the/DT/the new/JJ/new file/NN/file /:/: def/NN/def copyfile/IN/copyfile /CD/( oldfile/NN/oldfile /,/, newfile/JJ/newfile /NN/) /:/: f1/NNP/f1 =/:/= open/JJ/open /NN/( oldfile/NN/oldfile /,/, r/NN/r /:/) f2/NNP/f2 =/:/= open/JJ/open /NN/( newfile/NN/newfile /,/, w/NN/w /:/) while/IN/while true/JJ/true /:/: text/JJ/text =/NN/= f1.read/JJ/f1.read /NN/( 50/CD/50 /CD/) if/IN/if text/JJ/text =/NN/= =/:/= /:/: break/NN/break f2.write/JJ/f2.write /NN/( text/NN/text /:/) f1.close/JJ/f1.close /NN/( /:/) f2.close/JJ/f2.close /NN/( /:/) return/NN/return the/DT/the break/NN/break statement/NN/statement is/VBZ/is new/NNP/new. executing/NN/executing it/PRP/it breaks/VBZ/breaks out/RP/out of/IN/of the/DT/the loop/NN/loop ;/:/; the/DT/the flow/NN/flow of/IN/of execution/NN/execution moves/NNS/moves to/TO/to the/DT/the first/JJ/first statement/NN/statement after/IN/after the/DT/the loop/NNP/loop. in/IN/in this/DT/this example/NN/example /,/, the/DT/the while/NN/while loop/NN/loop is/VBZ/is infinite/JJ/infinite because/IN/because the/DT/the value/NN/value true/NN/true is/VBZ/is always/RB/always true/NNP/true. the/DT/the only/JJ/only way/NN/way to/TO/to get/VB/get out/IN/out of/IN/of the/DT/the loop/NN/loop is/VBZ/is to/TO/to execute/VB/execute break/JJ/break /,/, which/WDT/which happens/NNS/happens when/WRB/when text/JJ/text is/VBZ/is the/DT/the empty/NN/empty string/VBG/string /,/, which/WDT/which happens/NNS/happens when/WRB/when we/PRP/we get/VBP/get to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the file/NNP/file. 11.1/CD/11.1 text/NN/text files/NNS/files a/DT/a text/NN/text file/NN/file is/VBZ/is a/DT/a file/NN/file that/WDT/that contains/VBZ/contains printable/JJ/printable characters/NNS/characters and/CC/and whitespace/NN/whitespace /,/, organized/VBN/organized into/IN/into lines/NNS/lines separated/VBN/separated by/IN/by newline/NN/newline characters/NNP/characters. since/IN/since python/NN/python is/VBZ/is specifically/RB/specifically designed/VBN/designed to/TO/to process/NN/process text/NN/text files/NNS/files /,/, it/PRP/it provides/VBZ/provides methods/NNS/methods that/IN/that make/NN/make the/DT/the job/NN/job easy/NNP/easy. to/TO/to demonstrate/VB/demonstrate /,/, we/PRP/we ll/VBP/ll create/JJ/create a/DT/a text/NN/text file/NN/file with/IN/with three/CD/three lines/NNS/lines of/IN/of text/NN/text separated/VBN/separated by/IN/by newlines/NNS/newlines /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( test.dat,w/NN/test.dat,w /:/) >/:/> >/:/> >/:/> f.write/JJ/f.write /NN/( line/NN/line one/CD/one \/CD/\ nline/NN/nline two/CD/two \/CD/\ nline/NN/nline three/CD/three \/CD/\ n/NN/n /:/) >/:/> >/:/> >/:/> f.close/JJ/f.close /NN/( /:/) the/DT/the readline/NN/readline method/NN/method reads/NNS/reads all/DT/all the/DT/the characters/NNS/characters up/IN/up to/TO/to and/CC/and including/VBG/including the/DT/the next/JJ/next newline/NN/newline character/NN/character /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( test.dat,r/NN/test.dat,r /:/) >/:/> >/:/> >/:/> print/NN/print f.readline/NN/f.readline /:/( /:/) line/NN/line one/CD/one >/CD/> >/CD/> >/CD/> 118/CD/118 files/NNS/files and/CC/and exceptions/NNS/exceptions readlines/NNS/readlines returns/NNS/returns all/DT/all of/IN/of the/DT/the remaining/VBG/remaining lines/NNS/lines as/IN/as a/DT/a list/NN/list of/IN/of strings/NNS/strings /:/: >/:/> >/:/> >/:/> print/NN/print f.readlines/NNS/f.readlines /:/( /:/) /:/[ line/NN/line two/CD/two \/CD/\ 012/CD/012 /,/, line/NN/line three/CD/three \/CD/\ 012/CD/012 /CD/] in/IN/in this/DT/this case/NN/case /,/, the/DT/the output/NN/output is/VBZ/is in/IN/in list/NN/list format/NN/format /,/, which/WDT/which means/VBZ/means that/DT/that the/DT/the strings/NNS/strings appear/VBP/appear with/IN/with quotation/NN/quotation marks/NNS/marks and/CC/and the/DT/the newline/NN/newline character/NN/character appears/VBZ/appears as/IN/as the/DT/the escape/NN/escape sequence/NN/sequence 012/CD/012. at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the file/NN/file /,/, readline/NN/readline returns/NNS/returns the/DT/the empty/NN/empty string/VBG/string and/CC/and readlines/NNS/readlines returns/NNS/returns the/DT/the empty/NN/empty list/NN/list /:/: >/:/> >/:/> >/:/> print/NN/print f.readline/NN/f.readline /:/( /:/) >/:/> >/:/> >/:/> print/NN/print f.readlines/NNS/f.readlines /:/( /:/) /:/[ /:/] the/DT/the following/NN/following is/VBZ/is an/DT/an example/NN/example of/IN/of a/DT/a line-processing/JJ/line-processing program/NNP/program. filterfile/NN/filterfile makes/VBZ/makes a/DT/a copy/NN/copy of/IN/of oldfile/NN/oldfile /,/, omitting/VBG/omitting any/DT/any lines/NNS/lines that/WDT/that begin/NN/begin with/IN/with #/#/# /:/: def/NN/def filterfile/IN/filterfile /CD/( oldfile/NN/oldfile /,/, newfile/JJ/newfile /NN/) /:/: f1/NNP/f1 =/:/= open/JJ/open /NN/( oldfile/NN/oldfile /,/, r/NN/r /:/) f2/NNP/f2 =/:/= open/JJ/open /NN/( newfile/NN/newfile /,/, w/NN/w /:/) while/IN/while true/JJ/true /:/: text/JJ/text =/NN/= f1.readline/NN/f1.readline /:/( /:/) if/IN/if text/NN/text =/:/= =/:/= /:/: break/NN/break if/IN/if text/NN/text /:/[ 0/-NONE-/0 /:/] =/:/= =/:/= #/#/# /:/: continue/NN/continue f2.write/JJ/f2.write /NN/( text/NN/text /:/) f1.close/JJ/f1.close /NN/( /:/) f2.close/JJ/f2.close /NN/( /:/) return/NN/return the/DT/the continue/NN/continue statement/NN/statement ends/NNS/ends the/DT/the current/JJ/current iteration/NN/iteration of/IN/of the/DT/the loop/NN/loop /,/, but/CC/but continues/VBZ/continues looping/NNP/looping. the/DT/the flow/NN/flow of/IN/of execution/NN/execution moves/NNS/moves to/TO/to the/DT/the top/JJ/top of/IN/of the/DT/the loop/NN/loop /,/, checks/NNS/checks the/DT/the condition/NN/condition /,/, and/CC/and proceeds/NNS/proceeds accordingly/NNP/accordingly. thus/RB/thus /,/, if/IN/if text/NN/text is/VBZ/is the/DT/the empty/NN/empty string/VBG/string /,/, the/DT/the loop/NN/loop exits/NNP/exits. if/IN/if the/DT/the first/JJ/first character/NN/character of/IN/of text/NN/text is/VBZ/is a/DT/a hash/NN/hash mark/NN/mark /,/, the/DT/the flow/NN/flow of/IN/of execution/NN/execution goes/VBZ/goes to/TO/to the/DT/the top/JJ/top of/IN/of the/DT/the loop/NNP/loop. only/RB/only if/IN/if both/DT/both conditions/NNS/conditions fail/VBP/fail do/VBP/do we/PRP/we copy/VB/copy text/JJ/text into/IN/into the/DT/the new/JJ/new file/NNP/file. 11.2/CD/11.2 writing/VBG/writing variables/NNS/variables the/DT/the argument/NN/argument of/IN/of write/JJ/write has/VBZ/has to/TO/to be/VB/be a/DT/a string/NN/string /,/, so/RB/so if/IN/if we/PRP/we want/VBP/want to/TO/to put/VB/put other/JJ/other values/NNS/values in/IN/in a/DT/a file/NN/file /,/, we/PRP/we have/VBP/have to/TO/to convert/VB/convert them/PRP/them to/TO/to strings/NNS/strings first/NNP/first. the/DT/the easiest/JJS/easiest way/NN/way to/TO/to do/VB/do that/DT/that is/VBZ/is 11.2/CD/11.2 writing/VBG/writing variables/NNS/variables 119/CD/119 with/IN/with the/DT/the str/NN/str function/NN/function /:/: >/:/> >/:/> >/:/> x/NN/x =/:/= 52/CD/52 >/CD/> >/CD/> >/CD/> f.write/JJ/f.write /NN/( str/NN/str /:/( x/NN/x /:/) /:/) an/DT/an alternative/NN/alternative is/VBZ/is to/TO/to use/VB/use the/DT/the format/NN/format operator/NN/operator %/NN/% /./. when/WRB/when applied/VBD/applied to/TO/to integers/NNS/integers /,/, %/NN/% is/VBZ/is the/DT/the modulus/NN/modulus operator/NNP/operator. but/CC/but when/WRB/when the/DT/the first/JJ/first operand/NN/operand is/VBZ/is a/DT/a string/NN/string /,/, %/NN/% is/VBZ/is the/DT/the format/NN/format operator/NNP/operator. the/DT/the first/JJ/first operand/NN/operand is/VBZ/is the/DT/the format/NN/format string/VBG/string /,/, and/CC/and the/DT/the second/JJ/second operand/NN/operand is/VBZ/is a/DT/a tuple/NN/tuple of/IN/of expressions/NNP/expressions. the/DT/the result/NN/result is/VBZ/is a/DT/a string/NN/string that/WDT/that contains/VBZ/contains the/DT/the values/NNS/values of/IN/of the/DT/the expressions/NNS/expressions /,/, formatted/VBD/formatted according/VBG/according to/TO/to the/DT/the format/NN/format string/NNP/string. as/IN/as a/DT/a simple/JJ/simple example/NN/example /,/, the/DT/the format/NN/format sequence/NN/sequence %/NN/% d/NN/d means/VBZ/means that/DT/that the/DT/the first/JJ/first expression/NN/expression in/IN/in the/DT/the tuple/NN/tuple should/MD/should be/VB/be formatted/VBN/formatted as/IN/as an/DT/an integer/NNP/integer. here/RB/here the/DT/the letter/NN/letter d/NN/d stands/VBZ/stands for/IN/for decimal/JJ/decimal /:/: >/:/> >/:/> >/:/> cars/NNS/cars =/VBP/= 52/CD/52 >/CD/> >/CD/> >/CD/> %/NN/% d/NN/d %/NN/% cars/NNS/cars 52/CD/52 the/DT/the result/NN/result is/VBZ/is the/DT/the string/NN/string 52/CD/52 /,/, which/WDT/which is/VBZ/is not/RB/not to/TO/to be/VB/be confused/VBN/confused with/IN/with the/DT/the integer/NN/integer value/NN/value 52/CD/52. a/DT/a format/NN/format sequence/NN/sequence can/MD/can appear/VB/appear anywhere/RB/anywhere in/IN/in the/DT/the format/NN/format string/VBG/string /,/, so/RB/so we/PRP/we can/MD/can embed/VB/embed a/DT/a value/NN/value in/IN/in a/DT/a sentence/NN/sentence /:/: >/:/> >/:/> >/:/> cars/NNS/cars =/VBP/= 52/CD/52 >/CD/> >/CD/> >/CD/> in/IN/in july/RB/july we/PRP/we sold/VBD/sold %/NN/% d/NN/d cars/NNP/cars. %/NN/% cars/NNS/cars in/IN/in july/RB/july we/PRP/we sold/VBD/sold 52/CD/52 cars/NNP/cars. the/DT/the format/NN/format sequence/NN/sequence %/NN/% f/NN/f formats/NNS/formats the/DT/the next/JJ/next item/NN/item in/IN/in the/DT/the tuple/NN/tuple as/IN/as a/DT/a floating-point/JJ/floating-point number/NN/number /,/, and/CC/and %/NN/% s/NNS/s formats/NNS/formats the/DT/the next/JJ/next item/NN/item as/IN/as a/DT/a string/NN/string /:/: >/:/> >/:/> >/:/> in/IN/in %/NN/% d/NN/d days/NNS/days we/PRP/we made/VBD/made %/NN/% f/NN/f million/NN/million %/NN/% s/NNP/s. %/NN/% /:/( 34,6.1/CD/34,6.1 /,/, dollars/NNS/dollars /:/) in/IN/in 34/CD/34 days/NNS/days we/PRP/we made/VBD/made 6.100000/CD/6.100000 million/CD/million dollars/NNP/dollars. by/IN/by default/NN/default /,/, the/DT/the floating-point/JJ/floating-point format/NN/format prints/NNS/prints six/CD/six decimal/JJ/decimal places/NNP/places. the/DT/the number/NN/number of/IN/of expressions/NNS/expressions in/IN/in the/DT/the tuple/NN/tuple has/VBZ/has to/TO/to match/VB/match the/DT/the number/NN/number of/IN/of format/NN/format sequences/NNS/sequences in/IN/in the/DT/the string/NNP/string. also/RB/also /,/, the/DT/the types/NNS/types of/IN/of the/DT/the expressions/NNS/expressions have/VBP/have to/TO/to match/VB/match the/DT/the format/NN/format sequences/NNS/sequences /:/: >/:/> >/:/> >/:/> %/NN/% d/NN/d %/NN/% d/NN/d %/NN/% d/NN/d %/NN/% /:/( 1,2/CD/1,2 /CD/) typeerror/NN/typeerror /:/: not/RB/not enough/RB/enough arguments/VBZ/arguments for/IN/for format/NN/format string/VBG/string >/NN/> >/:/> >/:/> %/NN/% d/NN/d %/NN/% dollars/NNS/dollars typeerror/NN/typeerror /:/: illegal/JJ/illegal argument/NN/argument type/NN/type for/IN/for built-in/JJ/built-in operation/NN/operation 120/CD/120 files/NNS/files and/CC/and exceptions/NNS/exceptions in/IN/in the/DT/the first/JJ/first example/NN/example /,/, there/EX/there aren/NNS/aren t/NN/t enough/RB/enough expressions/NNS/expressions ;/:/; in/IN/in the/DT/the second/JJ/second /,/, the/DT/the expression/NN/expression is/VBZ/is the/DT/the wrong/JJ/wrong type/NNP/type. for/IN/for more/JJR/more control/NN/control over/IN/over the/DT/the format/NN/format of/IN/of numbers/NNS/numbers /,/, we/PRP/we can/MD/can specify/VB/specify the/DT/the number/NN/number of/IN/of digits/NNS/digits as/IN/as part/NN/part of/IN/of the/DT/the format/NN/format sequence/NN/sequence /:/: >/:/> >/:/> >/:/> %/NN/% 6d/CD/6d %/NN/% 62/CD/62 62/CD/62 >/CD/> >/CD/> >/CD/> %/NN/% 12f/CD/12f %/NN/% 6.1/CD/6.1 6.100000/CD/6.100000 the/DT/the number/NN/number after/IN/after the/DT/the percent/NN/percent sign/NN/sign is/VBZ/is the/DT/the minimum/JJ/minimum number/NN/number of/IN/of spaces/NNS/spaces the/DT/the number/NN/number will/MD/will take/VB/take up/NNP/up. if/IN/if the/DT/the value/NN/value provided/VBD/provided takes/VBZ/takes fewer/JJR/fewer digits/NNS/digits /,/, leading/VBG/leading spaces/NNS/spaces are/VBP/are added/NNP/added. if/IN/if the/DT/the number/NN/number of/IN/of spaces/NNS/spaces is/VBZ/is negative/JJ/negative /,/, trailing/VBG/trailing spaces/NNS/spaces are/VBP/are added/VBN/added /:/: >/:/> >/:/> >/:/> %/NN/% -6d/JJ/-6d %/NN/% 62/CD/62 62/CD/62 for/IN/for floating-point/JJ/floating-point numbers/NNS/numbers /,/, we/PRP/we can/MD/can also/RB/also specify/VB/specify the/DT/the number/NN/number of/IN/of digits/NNS/digits after/IN/after the/DT/the decimal/JJ/decimal point/NN/point /:/: >/:/> >/:/> >/:/> %/NN/% 12.2f/CD/12.2f %/NN/% 6.1/CD/6.1 6.10/CD/6.10 in/IN/in this/DT/this example/NN/example /,/, the/DT/the result/NN/result takes/VBZ/takes up/RP/up twelve/JJ/twelve spaces/NNS/spaces and/CC/and includes/VBZ/includes two/CD/two digits/NNS/digits after/IN/after the/DT/the decimal/NNP/decimal. this/DT/this format/NN/format is/VBZ/is useful/JJ/useful for/IN/for printing/NN/printing dollar/NN/dollar amounts/NNS/amounts with/IN/with the/DT/the decimal/JJ/decimal points/NNS/points aligned/NNP/aligned. for/IN/for example/NN/example /,/, imagine/NN/imagine a/DT/a dictionary/JJ/dictionary that/IN/that contains/NNS/contains student/NN/student names/NNS/names as/IN/as keys/NNS/keys and/CC/and hourly/RB/hourly wages/NNS/wages as/IN/as values/NNP/values. here/RB/here is/VBZ/is a/DT/a function/NN/function that/WDT/that prints/VBZ/prints the/DT/the contents/NNS/contents of/IN/of the/DT/the dictionary/JJ/dictionary as/IN/as a/DT/a formatted/VBN/formatted report/NN/report /:/: def/NN/def report/NN/report /:/( wages/NNS/wages /VBP/) /:/: students/NNS/students =/:/= wages.keys/NNS/wages.keys /VBP/( /:/) students.sort/JJ/students.sort /NN/( /:/) for/IN/for student/NN/student in/IN/in students/NNS/students /:/: print/VBP/print %/NN/% -20s/NNS/-20s %/NN/% 12.2f/CD/12.2f %/NN/% /:/( student/NN/student /,/, wages/NNS/wages /:/[ student/NN/student /:/] /:/) to/TO/to test/NN/test this/DT/this function/NN/function /,/, we/PRP/we ll/VBP/ll create/JJ/create a/DT/a small/JJ/small dictionary/JJ/dictionary and/CC/and print/VBP/print the/DT/the contents/NNS/contents /:/: >/:/> >/:/> >/:/> wages/NNS/wages =/VBP/= /:/{ mary/JJ/mary /:/: 6.23/CD/6.23 /,/, joe/NN/joe /:/: 5.45/CD/5.45 /,/, joshua/NN/joshua /:/: 4.25/CD/4.25 /CD/} >/CD/> >/CD/> >/CD/> report/NN/report /:/( wages/NNS/wages /VBP/) joe/NN/joe 5.45/CD/5.45 joshua/NN/joshua 4.25/CD/4.25 mary/JJ/mary 6.23/CD/6.23 by/IN/by controlling/NN/controlling the/DT/the width/NN/width of/IN/of each/DT/each value/NN/value /,/, we/PRP/we guarantee/VBP/guarantee that/IN/that the/DT/the columns/NNS/columns will/MD/will line/VB/line up/RP/up /,/, as/IN/as long/RB/long as/IN/as the/DT/the names/NNS/names contain/VBP/contain fewer/JJR/fewer than/IN/than twenty-one/JJ/twenty-one characters/NNS/characters and/CC/and the/DT/the wages/NNS/wages are/VBP/are less/JJR/less than/IN/than one/CD/one billion/CD/billion dollars/NNS/dollars an/DT/an hour/NNP/hour. 11.3/CD/11.3 directories/NNS/directories 121/CD/121 11.3/CD/11.3 directories/NNS/directories when/WRB/when you/PRP/you create/VBP/create a/DT/a new/JJ/new file/NN/file by/IN/by opening/VBG/opening it/PRP/it and/CC/and writing/VBG/writing /,/, the/DT/the new/JJ/new file/NN/file goes/VBZ/goes in/IN/in the/DT/the current/JJ/current directory/NN/directory /:/( wherever/NN/wherever you/PRP/you were/VBD/were when/WRB/when you/PRP/you ran/VBD/ran the/DT/the program/NN/program /:/) /./. similarly/RB/similarly /,/, when/WRB/when you/PRP/you open/VBP/open a/DT/a file/NN/file for/IN/for reading/NN/reading /,/, python/NN/python looks/NNS/looks for/IN/for it/PRP/it in/IN/in the/DT/the current/JJ/current directory/NNP/directory. if/IN/if you/PRP/you want/VBP/want to/TO/to open/VB/open a/DT/a file/NN/file somewhere/WRB/somewhere else/NN/else /,/, you/PRP/you have/VBP/have to/TO/to specify/VB/specify the/DT/the path/NN/path to/TO/to the/DT/the file/NN/file /,/, which/WDT/which is/VBZ/is the/DT/the name/NN/name of/IN/of the/DT/the directory/NN/directory /:/( or/CC/or folder/JJR/folder /:/) where/WRB/where the/DT/the file/JJ/file is/VBZ/is located/VBN/located /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( /usr/share/dict/words,r/NN//usr/share/dict/words,r /:/) >/:/> >/:/> >/:/> print/NN/print f.readline/NN/f.readline /:/( /:/) aarhus/RB/aarhus this/DT/this example/NN/example opens/VBZ/opens a/DT/a file/NN/file named/VBN/named words/NNS/words that/IN/that resides/NNS/resides in/IN/in a/DT/a directory/NN/directory named/VBN/named dict/NN/dict /,/, which/WDT/which resides/VBZ/resides in/IN/in share/NN/share /,/, which/WDT/which resides/VBZ/resides in/IN/in usr/NN/usr /,/, which/WDT/which resides/VBZ/resides in/IN/in the/DT/the top-level/JJ/top-level directory/NN/directory of/IN/of the/DT/the system/NN/system /,/, called/VBN/called //://. you/PRP/you can/MD/can not/RB/not use/VB/use //:// as/IN/as part/NN/part of/IN/of a/DT/a filename/NN/filename ;/:/; it/PRP/it is/VBZ/is reserved/VBN/reserved as/RB/as a/DT/a delimiter/NN/delimiter between/IN/between directory/NN/directory and/CC/and filenames/NNP/filenames. the/DT/the file/NN/file /usr/share/dict/words/NNS//usr/share/dict/words contains/VBZ/contains a/DT/a list/NN/list of/IN/of words/NNS/words in/IN/in alphabetical/JJ/alphabetical order/NN/order /,/, of/IN/of which/WDT/which the/DT/the first/JJ/first is/VBZ/is the/DT/the name/NN/name of/IN/of a/DT/a danish/JJ/danish university/NNP/university. 11.4/CD/11.4 pickling/VBG/pickling in/IN/in order/NN/order to/TO/to put/VB/put values/NNS/values into/IN/into a/DT/a file/JJ/file /,/, you/PRP/you have/VBP/have to/TO/to convert/VB/convert them/PRP/them to/TO/to strings/NNP/strings. you/PRP/you have/VBP/have already/RB/already seen/VBN/seen how/WRB/how to/TO/to do/VB/do that/DT/that with/IN/with str/NN/str /:/: >/:/> >/:/> >/:/> f.write/JJ/f.write /NN/( str/NN/str /:/( 12.3/CD/12.3 /CD/) /CD/) >/CD/> >/CD/> >/CD/> f.write/JJ/f.write /NN/( str/NN/str /:/( /:/[ 1,2,3/CD/1,2,3 /CD/] /CD/) /CD/) the/DT/the problem/NN/problem is/VBZ/is that/IN/that when/WRB/when you/PRP/you read/VBP/read the/DT/the value/NN/value back/RB/back /,/, you/PRP/you get/VBP/get a/DT/a string/NNP/string. the/DT/the original/JJ/original type/NN/type information/NN/information has/VBZ/has been/VBN/been lost/NNP/lost. in/IN/in fact/NN/fact /,/, you/PRP/you can/MD/can t/VB/t even/RB/even tell/VB/tell where/WRB/where one/CD/one value/NN/value ends/NNS/ends and/CC/and the/DT/the next/JJ/next begins/NNS/begins /:/: >/:/> >/:/> >/:/> f.readline/JJ/f.readline /NN/( /:/) 12.3/CD/12.3 /CD/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] the/DT/the solution/NN/solution is/VBZ/is pickling/VBG/pickling /,/, so/RB/so called/VBN/called because/IN/because it/PRP/it preserves/VBZ/preserves data/NNS/data structures/NNP/structures. the/DT/the pickle/NN/pickle module/NN/module contains/VBZ/contains the/DT/the necessary/JJ/necessary commands/NNP/commands. to/TO/to use/VB/use it/PRP/it /,/, import/NN/import pickle/NN/pickle and/CC/and then/RB/then open/JJ/open the/DT/the file/NN/file in/IN/in the/DT/the usual/JJ/usual way/NN/way /:/: >/:/> >/:/> >/:/> import/NN/import pickle/NN/pickle >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( test.pck,w/NN/test.pck,w /:/) 122/CD/122 files/NNS/files and/CC/and exceptions/NNS/exceptions to/TO/to store/VB/store a/DT/a data/NN/data structure/NN/structure /,/, use/VBP/use the/DT/the dump/NN/dump method/NN/method and/CC/and then/RB/then close/JJ/close the/DT/the file/JJ/file in/IN/in the/DT/the usual/JJ/usual way/NN/way /:/: >/:/> >/:/> >/:/> pickle.dump/JJ/pickle.dump /NN/( 12.3/CD/12.3 /,/, f/NN/f /:/) >/:/> >/:/> >/:/> pickle.dump/JJ/pickle.dump /NN/( /:/[ 1,2,3/CD/1,2,3 /CD/] /,/, f/NN/f /:/) >/:/> >/:/> >/:/> f.close/JJ/f.close /NN/( /:/) then/RB/then we/PRP/we can/MD/can open/VB/open the/DT/the file/NN/file for/IN/for reading/NN/reading and/CC/and load/VB/load the/DT/the data/NNS/data structures/NNS/structures we/PRP/we dumped/VBD/dumped /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( test.pck,r/NN/test.pck,r /:/) >/:/> >/:/> >/:/> x/NN/x =/:/= pickle.load/JJ/pickle.load /NN/( f/NN/f /:/) >/:/> >/:/> >/:/> x/NN/x 12.3/CD/12.3 >/CD/> >/CD/> >/CD/> type/NN/type /:/( x/NN/x /:/) >/:/> >/:/> >/:/> y/NN/y =/:/= pickle.load/JJ/pickle.load /NN/( f/NN/f /:/) >/:/> >/:/> >/:/> y/NN/y /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] >/CD/> >/CD/> >/CD/> type/NN/type /:/( y/NN/y /:/) each/DT/each time/NN/time we/PRP/we invoke/VBP/invoke load/RB/load /,/, we/PRP/we get/VBP/get a/DT/a single/JJ/single value/NN/value from/IN/from the/DT/the file/NN/file /,/, complete/JJ/complete with/IN/with its/PRP$/its original/JJ/original type/NNP/type. 11.5/CD/11.5 exceptions/NNS/exceptions whenever/RB/whenever a/DT/a runtime/NN/runtime error/NN/error occurs/NNS/occurs /,/, it/PRP/it creates/VBZ/creates an/DT/an exception/NNP/exception. usually/RB/usually /,/, the/DT/the program/NN/program stops/NNS/stops and/CC/and python/NN/python prints/NNS/prints an/DT/an error/NN/error message/NNP/message. for/IN/for example/NN/example /,/, dividing/NN/dividing by/IN/by zero/NN/zero creates/NNS/creates an/DT/an exception/NN/exception /:/: >/:/> >/:/> >/:/> print/NN/print 55/0/CD/55/0 zerodivisionerror/NN/zerodivisionerror /:/: integer/NN/integer division/NN/division or/CC/or modulo/NN/modulo so/IN/so does/VBZ/does accessing/VBG/accessing a/DT/a nonexistent/NN/nonexistent list/NN/list item/NN/item /:/: >/:/> >/:/> >/:/> a/DT/a =/NN/= /:/[ /:/] >/:/> >/:/> >/:/> print/NN/print a/DT/a /NN/[ 5/CD/5 /CD/] indexerror/NN/indexerror /:/: list/NN/list index/NN/index out/IN/out of/IN/of range/NN/range or/CC/or accessing/VBG/accessing a/DT/a key/JJ/key that/IN/that isn/NN/isn t/NN/t in/IN/in the/DT/the dictionary/JJ/dictionary /:/: >/:/> >/:/> >/:/> b/NN/b =/:/= /:/{ /:/} >/:/> >/:/> >/:/> print/NN/print b/NN/b /:/[ what/WP/what /-NONE-/] keyerror/VBP/keyerror /:/: what/WP/what 11.5/CD/11.5 exceptions/NNS/exceptions 123/CD/123 or/CC/or trying/VBG/trying to/TO/to open/VB/open a/DT/a nonexistent/NN/nonexistent file/NN/file /:/: >/:/> >/:/> >/:/> f/NN/f =/:/= open/JJ/open /NN/( idontexist/NN/idontexist /,/, r/NN/r /:/) ioerror/NN/ioerror /:/: /:/[ errno/NN/errno 2/CD/2 /CD/] no/DT/no such/JJ/such file/NN/file or/CC/or directory/NN/directory /:/: idontexist/NN/idontexist in/IN/in each/DT/each case/NN/case /,/, the/DT/the error/NN/error message/NN/message has/VBZ/has two/CD/two parts/NNS/parts /:/: the/DT/the type/NN/type of/IN/of error/NN/error before/IN/before the/DT/the colon/NN/colon /,/, and/CC/and specifics/NNS/specifics about/IN/about the/DT/the error/NN/error after/IN/after the/DT/the colon/NNP/colon. normally/RB/normally python/NN/python also/RB/also prints/VBZ/prints a/DT/a traceback/NN/traceback of/IN/of where/WRB/where the/DT/the program/NN/program was/VBD/was /,/, but/CC/but we/PRP/we have/VBP/have omitted/VBN/omitted that/IN/that from/IN/from the/DT/the examples/NNP/examples. sometimes/RB/sometimes we/PRP/we want/VBP/want to/TO/to execute/VB/execute an/DT/an operation/NN/operation that/IN/that could/MD/could cause/VB/cause an/DT/an exception/NN/exception /,/, but/CC/but we/PRP/we don/VBP/don t/NN/t want/NN/want the/DT/the program/NN/program to/TO/to stop/NNP/stop. we/PRP/we can/MD/can handle/VB/handle the/DT/the exception/NN/exception using/VBG/using the/DT/the try/NN/try and/CC/and except/IN/except statements/NNP/statements. for/IN/for example/NN/example /,/, we/PRP/we might/MD/might prompt/VB/prompt the/DT/the user/NN/user for/IN/for the/DT/the name/NN/name of/IN/of a/DT/a file/NN/file and/CC/and then/RB/then try/NN/try to/TO/to open/VB/open it/NNP/it. if/IN/if the/DT/the file/NN/file doesn/NN/doesn t/NN/t exist/NN/exist /,/, we/PRP/we don/VBP/don t/NN/t want/NN/want the/DT/the program/NN/program to/TO/to crash/VB/crash ;/:/; we/PRP/we want/VBP/want to/TO/to handle/VB/handle the/DT/the exception/NN/exception /:/: filename/NN/filename =/:/= raw_input/NNP/raw_input /:/( enter/NN/enter a/DT/a file/NN/file name/NN/name /:/: /:/) try/NN/try /:/: f/NN/f =/:/= open/JJ/open /NN/( filename/NN/filename /,/, r/NN/r /:/) except/IN/except ioerror/NN/ioerror /:/: print/NN/print there/RB/there is/VBZ/is no/DT/no file/NN/file named/VBD/named /,/, filename/NN/filename the/DT/the try/NN/try statement/NN/statement executes/VBZ/executes the/DT/the statements/NNS/statements in/IN/in the/DT/the first/JJ/first block/NNP/block. if/IN/if no/DT/no exceptions/NNS/exceptions occur/VBP/occur /,/, it/PRP/it ignores/VBZ/ignores the/DT/the except/NN/except statement/NNP/statement. if/IN/if an/DT/an exception/NN/exception of/IN/of type/NN/type ioerror/NN/ioerror occurs/NNS/occurs /,/, it/PRP/it executes/VBZ/executes the/DT/the statements/NNS/statements in/IN/in the/DT/the except/NN/except branch/NN/branch and/CC/and then/RB/then continues/NNP/continues. we/PRP/we can/MD/can encapsulate/VB/encapsulate this/DT/this capability/NN/capability in/IN/in a/DT/a function/NN/function /:/: exists/NNS/exists takes/VBZ/takes a/DT/a filename/NN/filename and/CC/and returns/NNS/returns true/JJ/true if/IN/if the/DT/the file/NN/file exists/VBZ/exists /,/, false/RB/false if/IN/if it/PRP/it doesn/VBP/doesn t/NN/t /:/: def/NN/def exists/NNS/exists /:/( filename/NN/filename /:/) /:/: try/NN/try /:/: f/NN/f =/:/= open/JJ/open /NN/( filename/NN/filename /:/) f.close/JJ/f.close /NN/( /:/) return/NN/return true/NN/true except/IN/except ioerror/NN/ioerror /:/: return/NN/return false/NN/false you/PRP/you can/MD/can use/VB/use multiple/NN/multiple except/IN/except blocks/NNS/blocks to/TO/to handle/VB/handle different/JJ/different kinds/NNS/kinds of/IN/of exceptions/NNP/exceptions. the/DT/the python/NN/python reference/NN/reference manual/JJ/manual has/VBZ/has the/DT/the details/NNP/details. if/IN/if your/PRP$/your program/NN/program detects/NNS/detects an/DT/an error/NN/error condition/NN/condition /,/, you/PRP/you can/MD/can make/VB/make it/PRP/it raise/VB/raise an/DT/an exception/NNP/exception. here/RB/here is/VBZ/is an/DT/an example/NN/example that/IN/that gets/NNS/gets input/VBD/input from/IN/from the/DT/the user/NN/user and/CC/and checks/NNS/checks for/IN/for the/DT/the value/NN/value 17/CD/17. assuming/VBG/assuming that/IN/that 17/CD/17 is/VBZ/is not/RB/not valid/JJ/valid input/NN/input for/IN/for some/DT/some reason/NN/reason /,/, we/PRP/we raise/VBP/raise an/DT/an exception/NNP/exception. 124/CD/124 files/NNS/files and/CC/and exceptions/NNS/exceptions def/IN/def inputnumber/NN/inputnumber /:/( /:/) /:/: x/NN/x =/:/= input/NN/input /:/( pick/NN/pick a/DT/a number/NN/number /:/: /:/) if/IN/if x/NN/x =/:/= =/:/= 17/CD/17 /:/: raise/VB/raise valueerror/NN/valueerror /,/, 17/CD/17 is/VBZ/is a/DT/a bad/JJ/bad number/NN/number return/NN/return x/NN/x the/DT/the raise/NN/raise statement/NN/statement takes/VBZ/takes two/CD/two arguments/NNS/arguments /:/: the/DT/the exception/NN/exception type/NN/type and/CC/and specific/JJ/specific information/NN/information about/IN/about the/DT/the error/NNP/error. valueerror/NN/valueerror is/VBZ/is one/CD/one of/IN/of the/DT/the exception/NN/exception types/NNS/types python/VBP/python provides/NNS/provides for/IN/for a/DT/a variety/NN/variety of/IN/of occasions/NNP/occasions. other/JJ/other examples/NNS/examples include/VBP/include typeerror/NN/typeerror /,/, keyerror/NN/keyerror /,/, and/CC/and my/PRP$/my favorite/JJ/favorite /,/, notimplementederror/NNP/notimplementederror. if/IN/if the/DT/the function/NN/function that/IN/that called/VBN/called inputnumber/NN/inputnumber handles/NNS/handles the/DT/the error/NN/error /,/, then/RB/then the/DT/the program/NN/program can/MD/can continue/VB/continue ;/:/; otherwise/VB/otherwise /,/, python/NN/python prints/NNS/prints the/DT/the error/NN/error message/NN/message and/CC/and exits/NNS/exits /:/: >/:/> >/:/> >/:/> inputnumber/NN/inputnumber /:/( /:/) pick/NN/pick a/DT/a number/NN/number /:/: 17/CD/17 valueerror/NN/valueerror /:/: 17/CD/17 is/VBZ/is a/DT/a bad/JJ/bad number/NN/number the/DT/the error/NN/error message/NN/message includes/VBZ/includes the/DT/the exception/NN/exception type/NN/type and/CC/and the/DT/the additional/JJ/additional information/NN/information you/PRP/you provided/NNP/provided. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function that/WDT/that uses/VBZ/uses inputnumber/NN/inputnumber to/TO/to input/VB/input a/DT/a number/NN/number from/IN/from the/DT/the keyboard/NN/keyboard and/CC/and that/IN/that handles/NNS/handles the/DT/the valueerror/NN/valueerror exception/NNP/exception. 11.6/CD/11.6 glossary/JJ/glossary file/NN/file /:/: a/DT/a named/VBN/named entity/NN/entity /,/, usually/RB/usually stored/VBD/stored on/IN/on a/DT/a hard/JJ/hard drive/JJ/drive /,/, floppy/JJ/floppy disk/NN/disk /,/, or/CC/or cd-rom/JJ/cd-rom /,/, that/IN/that contains/NNS/contains a/DT/a stream/NN/stream of/IN/of characters/NNP/characters. directory/NN/directory /:/: a/DT/a named/VBN/named collection/NN/collection of/IN/of files/NNS/files /,/, also/RB/also called/VBN/called a/DT/a folder/NNP/folder. path/NN/path /:/: a/DT/a sequence/NN/sequence of/IN/of directory/NN/directory names/NNS/names that/WDT/that specifies/NNS/specifies the/DT/the exact/JJ/exact location/NN/location of/IN/of a/DT/a file/NNP/file. text/NN/text file/NN/file /:/: a/DT/a file/NN/file that/WDT/that contains/VBZ/contains printable/JJ/printable characters/NNS/characters organized/VBN/organized into/IN/into lines/NNS/lines separated/VBN/separated by/IN/by newline/NN/newline characters/NNP/characters. break/NN/break statement/NN/statement /:/: a/DT/a statement/NN/statement that/IN/that causes/NNS/causes the/DT/the flow/NN/flow of/IN/of execution/NN/execution to/TO/to exit/VB/exit a/DT/a loop/NNP/loop. continue/NN/continue statement/NN/statement /:/: a/DT/a statement/NN/statement that/IN/that causes/NNS/causes the/DT/the current/JJ/current iteration/NN/iteration of/IN/of a/DT/a loop/NN/loop to/TO/to end/NNP/end. the/DT/the flow/NN/flow of/IN/of execution/NN/execution goes/VBZ/goes to/TO/to the/DT/the top/JJ/top of/IN/of the/DT/the loop/NN/loop /,/, evaluates/VBZ/evaluates the/DT/the condition/NN/condition /,/, and/CC/and proceeds/NNS/proceeds accordingly/NNP/accordingly. format/NN/format operator/NN/operator /:/: the/DT/the %/NN/% operator/NN/operator takes/VBZ/takes a/DT/a format/NN/format string/VBG/string and/CC/and a/DT/a tuple/NN/tuple of/IN/of expressions/NNS/expressions and/CC/and yields/NNS/yields a/DT/a string/VBG/string that/IN/that includes/NNS/includes the/DT/the expressions/NNS/expressions /,/, formatted/VBD/formatted according/VBG/according to/TO/to the/DT/the format/NN/format string/NNP/string. 11.6/CD/11.6 glossary/JJ/glossary 125/CD/125 format/NN/format string/VBG/string /:/: a/DT/a string/NN/string that/WDT/that contains/VBZ/contains printable/JJ/printable characters/NNS/characters and/CC/and format/NN/format sequences/NNS/sequences that/WDT/that indicate/VBP/indicate how/WRB/how to/TO/to format/VB/format values/NNP/values. format/NN/format sequence/NN/sequence /:/: a/DT/a sequence/NN/sequence of/IN/of characters/NNS/characters beginning/VBG/beginning with/IN/with %/NN/% that/IN/that indicates/VBZ/indicates how/WRB/how to/TO/to format/VB/format a/DT/a value/NNP/value. pickle/NN/pickle /:/: to/TO/to write/VB/write a/DT/a data/NN/data value/NN/value in/IN/in a/DT/a file/NN/file along/IN/along with/IN/with its/PRP$/its type/NN/type information/NN/information so/RB/so that/IN/that it/PRP/it can/MD/can be/VB/be reconstituted/VBN/reconstituted later/NNP/later. exception/NN/exception /:/: an/DT/an error/NN/error that/IN/that occurs/NNS/occurs at/IN/at runtime/NNP/runtime. handle/NN/handle /:/: to/TO/to prevent/VB/prevent an/DT/an exception/NN/exception from/IN/from terminating/VBG/terminating a/DT/a program/NN/program using/VBG/using the/DT/the try/NN/try and/CC/and except/IN/except statements/NNP/statements. raise/NN/raise /:/: to/TO/to signal/VB/signal an/DT/an exception/NN/exception using/VBG/using the/DT/the raise/NN/raise statement/NNP/statement. 126/CD/126 files/NNS/files and/CC/and exceptions/NNS/exceptions chapter/NN/chapter 12/CD/12 classes/NNS/classes and/CC/and objects/NNS/objects 12.1/CD/12.1 user-defined/JJ/user-defined compound/NN/compound types/NNS/types having/VBG/having used/VBN/used some/DT/some of/IN/of python/NN/python s/NNS/s built-in/JJ/built-in types/NNS/types /,/, we/PRP/we are/VBP/are ready/RB/ready to/TO/to create/VB/create a/DT/a userdefined/VBN/userdefined type/NN/type /:/: the/DT/the point/NNP/point. consider/NN/consider the/DT/the concept/NN/concept of/IN/of a/DT/a mathematical/JJ/mathematical point/NNP/point. in/IN/in two/CD/two dimensions/NNS/dimensions /,/, a/DT/a point/NN/point is/VBZ/is two/CD/two numbers/NNS/numbers /:/( coordinates/NNS/coordinates /VBP/) that/IN/that are/VBP/are treated/VBN/treated collectively/RB/collectively as/IN/as a/DT/a single/JJ/single object/NNP/object. in/IN/in mathematical/JJ/mathematical notation/NN/notation /,/, points/NNS/points are/VBP/are often/RB/often written/VBN/written in/IN/in parentheses/NNS/parentheses with/IN/with a/DT/a comma/NN/comma separating/VBG/separating the/DT/the coordinates/NNP/coordinates. for/IN/for example/NN/example /,/, /:/( 0/-NONE-/0 /,/, 0/-NONE-/0 /:/) represents/NNS/represents the/DT/the origin/NN/origin /,/, and/CC/and /:/( x/NN/x /,/, y/NN/y /:/) represents/NNS/represents the/DT/the point/NN/point x/NN/x units/NNS/units to/TO/to the/DT/the right/NN/right and/CC/and y/NN/y units/NNS/units up/IN/up from/IN/from the/DT/the origin/NNP/origin. a/DT/a natural/JJ/natural way/NN/way to/TO/to represent/VB/represent a/DT/a point/NN/point in/IN/in python/NN/python is/VBZ/is with/IN/with two/CD/two floating-point/JJ/floating-point values/NNP/values. the/DT/the question/NN/question /,/, then/RB/then /,/, is/VBZ/is how/WRB/how to/TO/to group/VB/group these/DT/these two/CD/two values/NNS/values into/IN/into a/DT/a compound/NN/compound object/NNP/object. the/DT/the quick/NN/quick and/CC/and dirty/JJ/dirty solution/NN/solution is/VBZ/is to/TO/to use/VB/use a/DT/a list/NN/list or/CC/or tuple/VB/tuple /,/, and/CC/and for/IN/for some/DT/some applications/NNS/applications that/WDT/that might/MD/might be/VB/be the/DT/the best/JJS/best choice/NNP/choice. an/DT/an alternative/NN/alternative is/VBZ/is to/TO/to define/VB/define a/DT/a new/JJ/new user-defined/JJ/user-defined compound/NN/compound type/NN/type /,/, also/RB/also called/VBN/called a/DT/a class/NNP/class. this/DT/this approach/NN/approach involves/VBZ/involves a/DT/a bit/NN/bit more/RBR/more effort/NN/effort /,/, but/CC/but it/PRP/it has/VBZ/has advantages/NNS/advantages that/IN/that will/MD/will be/VB/be apparent/JJ/apparent soon/NNP/soon. a/DT/a class/NN/class definition/NN/definition looks/NNS/looks like/IN/like this/DT/this /:/: class/NN/class point/NN/point /:/: pass/NN/pass class/NN/class definitions/NNS/definitions can/MD/can appear/VB/appear anywhere/RB/anywhere in/IN/in a/DT/a program/NN/program /,/, but/CC/but they/PRP/they are/VBP/are usually/RB/usually near/IN/near the/DT/the beginning/NN/beginning /:/( after/IN/after the/DT/the import/NN/import statements/NNS/statements /:/) /./. the/DT/the syntax/NN/syntax rules/NNS/rules for/IN/for a/DT/a class/NN/class defi/NN/defi- nition/NN/nition are/VBP/are the/DT/the same/JJ/same as/IN/as for/IN/for other/JJ/other compound/NN/compound statements/NNS/statements /:/( see/VB/see section/NN/section 4.4/CD/4.4 /CD/) /./. 128/CD/128 classes/NNS/classes and/CC/and objects/NNS/objects this/DT/this definition/NN/definition creates/VBZ/creates a/DT/a new/JJ/new class/NN/class called/VBN/called point/NNP/point. the/DT/the pass/NN/pass statement/NN/statement has/VBZ/has no/DT/no effect/NN/effect ;/:/; it/PRP/it is/VBZ/is only/RB/only necessary/JJ/necessary because/IN/because a/DT/a compound/NN/compound statement/NN/statement must/MD/must have/VB/have something/NN/something in/IN/in its/PRP$/its body/NNP/body. by/IN/by creating/NN/creating the/DT/the point/NN/point class/NN/class /,/, we/PRP/we created/VBD/created a/DT/a new/JJ/new type/NN/type /,/, also/RB/also called/VBN/called point/NNP/point. the/DT/the members/NNS/members of/IN/of this/DT/this type/NN/type are/VBP/are called/VBN/called instances/NNS/instances of/IN/of the/DT/the type/NN/type or/CC/or objects/NNP/objects. creating/NN/creating a/DT/a new/JJ/new instance/NN/instance is/VBZ/is called/VBN/called instantiation/NNP/instantiation. to/TO/to instantiate/VB/instantiate a/DT/a point/NN/point object/NN/object /,/, we/PRP/we call/VBP/call a/DT/a function/NN/function named/VBN/named /-NONE-/( you/PRP/you guessed/VBD/guessed it/PRP/it /:/) point/NN/point /:/: blank/NN/blank =/:/= point/NN/point /:/( /:/) the/DT/the variable/JJ/variable blank/NN/blank is/VBZ/is assigned/VBN/assigned a/DT/a reference/NN/reference to/TO/to a/DT/a new/JJ/new point/NN/point object/NNP/object. a/DT/a function/NN/function like/IN/like point/NN/point that/IN/that creates/NNS/creates new/JJ/new objects/NNS/objects is/VBZ/is called/VBN/called a/DT/a constructor/NNP/constructor. 12.2/CD/12.2 attributes/NNS/attributes we/PRP/we can/MD/can add/VB/add new/JJ/new data/NNS/data to/TO/to an/DT/an instance/NN/instance using/VBG/using dot/NN/dot notation/NN/notation /:/: >/:/> >/:/> >/:/> blank.x/JJ/blank.x =/NN/= 3.0/CD/3.0 >/CD/> >/CD/> >/CD/> blank.y/JJ/blank.y =/NN/= 4.0/CD/4.0 this/DT/this syntax/NN/syntax is/VBZ/is similar/JJ/similar to/TO/to the/DT/the syntax/NN/syntax for/IN/for selecting/NN/selecting a/DT/a variable/JJ/variable from/IN/from a/DT/a module/NN/module /,/, such/JJ/such as/IN/as math.pi/NNP/math.pi or/CC/or string.uppercase/NNP/string.uppercase. in/IN/in this/DT/this case/NN/case /,/, though/IN/though /,/, we/PRP/we are/VBP/are selecting/VBG/selecting a/DT/a data/NN/data item/NN/item from/IN/from an/DT/an instance/NNP/instance. these/DT/these named/VBD/named items/NNS/items are/VBP/are called/VBN/called attributes/NNP/attributes. the/DT/the following/VBG/following state/NN/state diagram/NN/diagram shows/VBZ/shows the/DT/the result/NN/result of/IN/of these/DT/these assignments/NNS/assignments /:/: x/NN/x y/NN/y 3.0/CD/3.0 4.0/CD/4.0 blank/NN/blank the/DT/the variable/JJ/variable blank/NN/blank refers/NNS/refers to/TO/to a/DT/a point/NN/point object/NN/object /,/, which/WDT/which contains/VBZ/contains two/CD/two attributes/NNP/attributes. each/DT/each attribute/NN/attribute refers/NNS/refers to/TO/to a/DT/a floating-point/JJ/floating-point number/NNP/number. we/PRP/we can/MD/can read/VB/read the/DT/the value/NN/value of/IN/of an/DT/an attribute/NN/attribute using/VBG/using the/DT/the same/JJ/same syntax/NN/syntax /:/: >/:/> >/:/> >/:/> print/NN/print blank.y/JJ/blank.y 4.0/CD/4.0 >/CD/> >/CD/> >/CD/> x/NN/x =/:/= blank.x/JJ/blank.x >/NN/> >/:/> >/:/> print/NN/print x/NN/x 3.0/CD/3.0 the/DT/the expression/NN/expression blank.x/NN/blank.x means/VBZ/means /,/, go/RB/go to/TO/to the/DT/the object/NN/object blank/NN/blank refers/NNS/refers to/TO/to and/CC/and get/VB/get the/DT/the value/NN/value of/IN/of x/NNP/x. in/IN/in this/DT/this case/NN/case /,/, we/PRP/we assign/VBP/assign that/IN/that value/NN/value to/TO/to a/DT/a variable/JJ/variable named/VBN/named x/NNP/x. there/RB/there 12.3/CD/12.3 instances/NNS/instances as/IN/as arguments/NNS/arguments 129/CD/129 is/VBZ/is no/DT/no conflict/NN/conflict between/IN/between the/DT/the variable/JJ/variable x/NN/x and/CC/and the/DT/the attribute/NN/attribute x/NNP/x. the/DT/the purpose/NN/purpose of/IN/of dot/NN/dot notation/NN/notation is/VBZ/is to/TO/to identify/VB/identify which/WDT/which variable/JJ/variable you/PRP/you are/VBP/are referring/VBG/referring to/TO/to unambiguously/NNP/unambiguously. you/PRP/you can/MD/can use/VB/use dot/NN/dot notation/NN/notation as/IN/as part/NN/part of/IN/of any/DT/any expression/NN/expression /,/, so/RB/so the/DT/the following/VBG/following statements/NNS/statements are/VBP/are legal/JJ/legal /:/: print/NN/print /:/( +/:/+ str/NN/str /:/( blank.x/JJ/blank.x /NN/) +/:/+ /,/, +/:/+ str/NN/str /:/( blank.y/JJ/blank.y /NN/) +/:/+ /:/) distancesquared/VBD/distancesquared =/CD/= blank.x/JJ/blank.x blank.x/JJ/blank.x +/NN/+ blank.y/JJ/blank.y blank.y/JJ/blank.y the/DT/the first/JJ/first line/NN/line outputs/NNS/outputs /:/( 3.0/CD/3.0 /,/, 4.0/CD/4.0 /:/) ;/:/; the/DT/the second/JJ/second line/NN/line calculates/VBZ/calculates the/DT/the value/NN/value 25.0/CD/25.0. you/PRP/you might/MD/might be/VB/be tempted/VBN/tempted to/TO/to print/VB/print the/DT/the value/NN/value of/IN/of blank/NN/blank itself/PRP/itself /:/: >/:/> >/:/> >/:/> print/NN/print blank/NN/blank the/DT/the result/NN/result indicates/VBZ/indicates that/IN/that blank/NN/blank is/VBZ/is an/DT/an instance/NN/instance of/IN/of the/DT/the point/NN/point class/NN/class and/CC/and it/PRP/it was/VBD/was defined/VBN/defined in/IN/in main/JJ/main /./. 80f8e70/CD/80f8e70 is/VBZ/is the/DT/the unique/JJ/unique identifier/NN/identifier for/IN/for this/DT/this object/NN/object /,/, written/VBN/written in/IN/in hexadecimal/JJ/hexadecimal /NN/( base/NN/base 16/CD/16 /CD/) /./. this/DT/this is/VBZ/is probably/RB/probably not/RB/not the/DT/the most/RBS/most informative/JJ/informative way/NN/way to/TO/to display/VB/display a/DT/a point/NN/point object/NNP/object. you/PRP/you will/MD/will see/VB/see how/WRB/how to/TO/to change/VB/change it/PRP/it shortly/NNP/shortly. as/IN/as an/DT/an exercise/NN/exercise /,/, create/VB/create and/CC/and print/VB/print a/DT/a point/NN/point object/NN/object /,/, and/CC/and then/RB/then use/VB/use id/NN/id to/TO/to print/VB/print the/DT/the object/NN/object s/VBZ/s unique/JJ/unique identifier/NNP/identifier. translate/NN/translate the/DT/the hexadecimal/JJ/hexadecimal form/NN/form into/IN/into decimal/JJ/decimal and/CC/and confirm/NN/confirm that/IN/that they/PRP/they match/NNP/match. 12.3/CD/12.3 instances/NNS/instances as/IN/as arguments/NNS/arguments you/PRP/you can/MD/can pass/VB/pass an/DT/an instance/NN/instance as/IN/as an/DT/an argument/NN/argument in/IN/in the/DT/the usual/JJ/usual way/NNP/way. for/IN/for example/NN/example /:/: def/NN/def printpoint/NN/printpoint /:/( p/NN/p /:/) /:/: print/NN/print /:/( +/:/+ str/NN/str /:/( p.x/JJ/p.x /NN/) +/:/+ /,/, +/:/+ str/NN/str /:/( p.y/JJ/p.y /NN/) +/:/+ /:/) printpoint/NN/printpoint takes/VBZ/takes a/DT/a point/NN/point as/IN/as an/DT/an argument/NN/argument and/CC/and displays/NNS/displays it/PRP/it in/IN/in the/DT/the standard/JJ/standard format/NNP/format. if/IN/if you/PRP/you call/VBP/call printpoint/JJ/printpoint /NN/( blank/NN/blank /:/) /,/, the/DT/the output/NN/output is/VBZ/is /:/( 3.0/CD/3.0 /,/, 4.0/CD/4.0 /:/) /./. as/IN/as an/DT/an exercise/NN/exercise /,/, rewrite/JJ/rewrite the/DT/the distance/NN/distance function/NN/function from/IN/from section/NN/section 5.2/CD/5.2 so/RB/so that/IN/that it/PRP/it takes/VBZ/takes two/CD/two points/NNS/points as/IN/as arguments/NNS/arguments instead/RB/instead of/IN/of four/CD/four numbers/NNP/numbers. 12.4/CD/12.4 sameness/NN/sameness the/DT/the meaning/NN/meaning of/IN/of the/DT/the word/NN/word same/NN/same seems/VBZ/seems perfectly/RB/perfectly clear/JJ/clear until/IN/until you/PRP/you give/VBP/give it/PRP/it some/DT/some thought/NN/thought /,/, and/CC/and then/RB/then you/PRP/you realize/VBP/realize there/RB/there is/VBZ/is more/RBR/more to/TO/to it/PRP/it than/IN/than you/PRP/you expected/NNP/expected. for/IN/for example/NN/example /,/, if/IN/if you/PRP/you say/VBP/say /,/, chris/NNS/chris and/CC/and i/PRP/i have/VBP/have the/DT/the same/JJ/same car/NN/car /,/, you/PRP/you mean/VBP/mean that/IN/that his/PRP$/his car/NN/car and/CC/and yours/NNS/yours are/VBP/are the/DT/the same/JJ/same make/NN/make and/CC/and model/NN/model /,/, but/CC/but that/IN/that they/PRP/they are/VBP/are two/CD/two different/JJ/different cars/NNP/cars. 130/CD/130 classes/NNS/classes and/CC/and objects/NNS/objects if/IN/if you/PRP/you say/VBP/say /,/, chris/NNS/chris and/CC/and i/PRP/i have/VBP/have the/DT/the same/JJ/same mother/NN/mother /,/, you/PRP/you mean/VBP/mean that/IN/that his/PRP$/his mother/NN/mother and/CC/and yours/NNS/yours are/VBP/are the/DT/the same/JJ/same person.1/NN/person.1 so/IN/so the/DT/the idea/NN/idea of/IN/of sameness/NN/sameness is/VBZ/is different/JJ/different depending/NN/depending on/IN/on the/DT/the context/NNP/context. when/WRB/when you/PRP/you talk/VBP/talk about/IN/about objects/NNS/objects /,/, there/EX/there is/VBZ/is a/DT/a similar/JJ/similar ambiguity/NNP/ambiguity. for/IN/for example/NN/example /,/, if/IN/if two/CD/two points/NNS/points are/VBP/are the/DT/the same/JJ/same /,/, does/VBZ/does that/IN/that mean/JJ/mean they/PRP/they contain/VBP/contain the/DT/the same/JJ/same data/NNS/data /:/( coordinates/NNS/coordinates /VBP/) or/CC/or that/IN/that they/PRP/they are/VBP/are actually/RB/actually the/DT/the same/JJ/same object/NN/object to/TO/to find/VB/find out/RP/out if/IN/if two/CD/two references/NNS/references refer/VBP/refer to/TO/to the/DT/the same/JJ/same object/NN/object /,/, use/VBP/use the/DT/the =/NNP/= =/NNP/= operator/NNP/operator. for/IN/for example/NN/example /:/: >/NN/> >/:/> >/:/> p1/NNP/p1 =/:/= point/NN/point /:/( /:/) >/:/> >/:/> >/:/> p1.x/JJ/p1.x =/NN/= 3/CD/3 >/CD/> >/CD/> >/CD/> p1.y/JJ/p1.y =/NN/= 4/CD/4 >/CD/> >/CD/> >/CD/> p2/NNP/p2 =/NNP/= point/NN/point /:/( /:/) >/:/> >/:/> >/:/> p2.x/JJ/p2.x =/NN/= 3/CD/3 >/CD/> >/CD/> >/CD/> p2.y/JJ/p2.y =/NN/= 4/CD/4 >/CD/> >/CD/> >/CD/> p1/NNP/p1 =/NNP/= =/NNP/= p2/NNP/p2 false/NN/false even/RB/even though/IN/though p1/NNP/p1 and/CC/and p2/NNP/p2 contain/NN/contain the/DT/the same/JJ/same coordinates/NNS/coordinates /,/, they/PRP/they are/VBP/are not/RB/not the/DT/the same/JJ/same object/NNP/object. if/IN/if we/PRP/we assign/VBP/assign p1/NNP/p1 to/TO/to p2/NNP/p2 /,/, then/RB/then the/DT/the two/CD/two variables/NNS/variables are/VBP/are aliases/NNS/aliases of/IN/of the/DT/the same/JJ/same object/NN/object /:/: >/:/> >/:/> >/:/> p2/NNP/p2 =/:/= p1/NNP/p1 >/:/> >/:/> >/:/> p1/NNP/p1 =/:/= =/:/= p2/NNP/p2 true/JJ/true this/DT/this type/NN/type of/IN/of equality/NN/equality is/VBZ/is called/VBN/called shallow/JJ/shallow equality/NN/equality because/IN/because it/PRP/it compares/VBZ/compares only/RB/only the/DT/the references/NNS/references /,/, not/RB/not the/DT/the contents/NNS/contents of/IN/of the/DT/the objects/NNP/objects. to/TO/to compare/VB/compare the/DT/the contents/NNS/contents of/IN/of the/DT/the objects/NNS/objects deep/VBP/deep equality/NN/equality we/PRP/we can/MD/can write/VB/write a/DT/a function/NN/function called/VBN/called samepoint/NN/samepoint /:/: def/NN/def samepoint/NN/samepoint /:/( p1/NNP/p1 /,/, p2/NNP/p2 /NNP/) /:/: return/NN/return /:/( p1.x/JJ/p1.x =/NN/= =/:/= p2.x/JJ/p2.x /NN/) and/CC/and /CD/( p1.y/JJ/p1.y =/NN/= =/:/= p2.y/JJ/p2.y /NN/) now/RB/now if/IN/if we/PRP/we create/VBP/create two/CD/two different/JJ/different objects/NNS/objects that/WDT/that contain/NN/contain the/DT/the same/JJ/same data/NNS/data /,/, we/PRP/we can/MD/can use/VB/use samepoint/NN/samepoint to/TO/to find/VB/find out/RP/out if/IN/if they/PRP/they represent/VBP/represent the/DT/the same/JJ/same point/NNP/point. 1not/CD/1not all/DT/all languages/NNS/languages have/VBP/have the/DT/the same/JJ/same problem/NNP/problem. for/IN/for example/NN/example /,/, german/NN/german has/VBZ/has different/JJ/different words/NNS/words for/IN/for different/JJ/different kinds/NNS/kinds of/IN/of sameness/NNP/sameness. same/JJ/same car/NN/car in/IN/in this/DT/this context/NN/context would/MD/would be/VB/be gleiche/PRP/gleiche auto/NN/auto /,/, and/CC/and same/JJ/same mother/NN/mother would/MD/would be/VB/be selbe/VB/selbe mutter/NNP/mutter. 12.5/CD/12.5 rectangles/NNS/rectangles 131/CD/131 >/CD/> >/CD/> >/CD/> p1/NNP/p1 =/NNP/= point/NN/point /:/( /:/) >/:/> >/:/> >/:/> p1.x/JJ/p1.x =/NN/= 3/CD/3 >/CD/> >/CD/> >/CD/> p1.y/JJ/p1.y =/NN/= 4/CD/4 >/CD/> >/CD/> >/CD/> p2/NNP/p2 =/NNP/= point/NN/point /:/( /:/) >/:/> >/:/> >/:/> p2.x/JJ/p2.x =/NN/= 3/CD/3 >/CD/> >/CD/> >/CD/> p2.y/JJ/p2.y =/NN/= 4/CD/4 >/CD/> >/CD/> >/CD/> samepoint/NN/samepoint /:/( p1/NNP/p1 /,/, p2/NNP/p2 /NNP/) true/JJ/true of/IN/of course/NN/course /,/, if/IN/if the/DT/the two/CD/two variables/NNS/variables refer/VBP/refer to/TO/to the/DT/the same/JJ/same object/NN/object /,/, they/PRP/they have/VBP/have both/DT/both shallow/JJ/shallow and/CC/and deep/VB/deep equality/NNP/equality. 12.5/CD/12.5 rectangles/NNS/rectangles let/VBP/let s/NNS/s say/VBP/say that/IN/that we/PRP/we want/VBP/want a/DT/a class/NN/class to/TO/to represent/VB/represent a/DT/a rectangle/NNP/rectangle. the/DT/the question/NN/question is/VBZ/is /,/, what/WP/what information/NN/information do/VBP/do we/PRP/we have/VB/have to/TO/to provide/VB/provide in/IN/in order/NN/order to/TO/to specify/VB/specify a/DT/a rectangle/JJ/rectangle to/TO/to keep/VB/keep things/NNS/things simple/JJ/simple /,/, assume/NN/assume that/IN/that the/DT/the rectangle/NN/rectangle is/VBZ/is oriented/VBN/oriented either/DT/either vertically/RB/vertically or/CC/or horizontally/RB/horizontally /,/, never/RB/never at/IN/at an/DT/an angle/NNP/angle. there/RB/there are/VBP/are a/DT/a few/JJ/few possibilities/NNS/possibilities /:/: we/PRP/we could/MD/could specify/VB/specify the/DT/the center/NN/center of/IN/of the/DT/the rectangle/JJ/rectangle /NN/( two/CD/two coordinates/NNS/coordinates /:/) and/CC/and its/PRP$/its size/NN/size /:/( width/NN/width and/CC/and height/NN/height /:/) ;/:/; or/CC/or we/PRP/we could/MD/could specify/VB/specify one/CD/one of/IN/of the/DT/the corners/NNS/corners and/CC/and the/DT/the size/NN/size ;/:/; or/CC/or we/PRP/we could/MD/could specify/VB/specify two/CD/two opposing/VBG/opposing corners/NNP/corners. a/DT/a conventional/JJ/conventional choice/NN/choice is/VBZ/is to/TO/to specify/VB/specify the/DT/the upper-left/JJ/upper-left corner/NN/corner of/IN/of the/DT/the rectangle/JJ/rectangle and/CC/and the/DT/the size/NNP/size. again/RB/again /,/, we/PRP/we ll/VBP/ll define/NN/define a/DT/a new/JJ/new class/NN/class /:/: class/NN/class rectangle/NN/rectangle /:/: pass/NN/pass and/CC/and instantiate/NN/instantiate it/PRP/it /:/: box/NN/box =/:/= rectangle/NN/rectangle /:/( /:/) box.width/JJ/box.width =/NN/= 100.0/CD/100.0 box.height/JJ/box.height =/NN/= 200.0/CD/200.0 this/DT/this code/NN/code creates/VBZ/creates a/DT/a new/JJ/new rectangle/NN/rectangle object/NN/object with/IN/with two/CD/two floating-point/JJ/floating-point attributes/NNP/attributes. to/TO/to specify/VB/specify the/DT/the upper-left/JJ/upper-left corner/NN/corner /,/, we/PRP/we can/MD/can embed/VB/embed an/DT/an object/NN/object within/IN/within an/DT/an object/NN/object !/./! box.corner/NN/box.corner =/:/= point/NN/point /:/( /:/) box.corner.x/JJ/box.corner.x =/NN/= 0.0/CD/0.0 box.corner.y/JJ/box.corner.y =/NN/= 0.0/CD/0.0 the/DT/the dot/NN/dot operator/NN/operator composes/NNP/composes. the/DT/the expression/NN/expression box.corner.x/NN/box.corner.x means/VBZ/means /,/, go/RB/go to/TO/to the/DT/the object/NN/object box/NN/box refers/NNS/refers to/TO/to and/CC/and select/VB/select the/DT/the attribute/NN/attribute named/VBD/named corner/NN/corner ;/:/; then/RB/then go/VBP/go to/TO/to that/DT/that object/NN/object and/CC/and select/VB/select the/DT/the attribute/NN/attribute named/VBD/named x/NNP/x. 132/CD/132 classes/NNS/classes and/CC/and objects/NNS/objects the/DT/the figure/NN/figure shows/VBZ/shows the/DT/the state/NN/state of/IN/of this/DT/this object/NN/object /:/: y/NN/y x/NN/x 0.0/CD/0.0 0.0/CD/0.0 width/NN/width height/NN/height 100.0/CD/100.0 corner/NN/corner 200.0/CD/200.0 box/NN/box 12.6/CD/12.6 instances/NNS/instances as/IN/as return/NN/return values/NNS/values functions/NNS/functions can/MD/can return/VB/return instances/NNP/instances. for/IN/for example/NN/example /,/, findcenter/NN/findcenter takes/VBZ/takes a/DT/a rectangle/NN/rectangle as/IN/as an/DT/an argument/NN/argument and/CC/and returns/NNS/returns a/DT/a point/NN/point that/WDT/that contains/VBZ/contains the/DT/the coordinates/NNS/coordinates of/IN/of the/DT/the center/NN/center of/IN/of the/DT/the rectangle/JJ/rectangle /:/: def/NN/def findcenter/NN/findcenter /:/( box/NN/box /:/) /:/: p/NN/p =/:/= point/NN/point /:/( /:/) p.x/JJ/p.x =/NN/= box.corner.x/NN/box.corner.x +/:/+ box.width/2.0/-NONE-/box.width/2.0 p.y/JJ/p.y =/NN/= box.corner.y/JJ/box.corner.y /:/- box.height/2.0/-NONE-/box.height/2.0 return/NN/return p/NN/p to/TO/to call/VB/call this/DT/this function/NN/function /,/, pass/NN/pass box/NN/box as/IN/as an/DT/an argument/NN/argument and/CC/and assign/NN/assign the/DT/the result/NN/result to/TO/to a/DT/a variable/JJ/variable /:/: >/:/> >/:/> >/:/> center/NN/center =/:/= findcenter/NN/findcenter /:/( box/NN/box /:/) >/:/> >/:/> >/:/> printpoint/NN/printpoint /:/( center/NN/center /:/) /:/( 50.0/CD/50.0 /,/, -100.0/-NONE-/-100.0 /:/) 12.7/CD/12.7 objects/NNS/objects are/VBP/are mutable/JJ/mutable we/PRP/we can/MD/can change/VB/change the/DT/the state/NN/state of/IN/of an/DT/an object/NN/object by/IN/by making/VBG/making an/DT/an assignment/NN/assignment to/TO/to one/CD/one of/IN/of its/PRP$/its attributes/NNP/attributes. for/IN/for example/NN/example /,/, to/TO/to change/VB/change the/DT/the size/NN/size of/IN/of a/DT/a rectangle/JJ/rectangle without/IN/without changing/NN/changing its/PRP$/its position/NN/position /,/, we/PRP/we could/MD/could modify/VB/modify the/DT/the values/NNS/values of/IN/of width/NN/width and/CC/and height/NN/height /:/: box.width/JJ/box.width =/NN/= box.width/JJ/box.width +/NN/+ 50/CD/50 box.height/JJ/box.height =/NN/= box.height/JJ/box.height +/NN/+ 100/CD/100 we/PRP/we could/MD/could encapsulate/VB/encapsulate this/DT/this code/NN/code in/IN/in a/DT/a method/NN/method and/CC/and generalize/VB/generalize it/PRP/it to/TO/to grow/VB/grow the/DT/the rectangle/NN/rectangle by/IN/by any/DT/any amount/NN/amount /:/: def/NN/def growrect/NN/growrect /:/( box/NN/box /,/, dwidth/NN/dwidth /,/, dheight/NN/dheight /:/) /:/: box.width/JJ/box.width =/NN/= box.width/JJ/box.width +/NN/+ dwidth/NN/dwidth box.height/JJ/box.height =/NN/= box.height/JJ/box.height +/NN/+ dheight/NN/dheight 12.8/CD/12.8 copying/VBG/copying 133/CD/133 the/DT/the variables/NNS/variables dwidth/VBP/dwidth and/CC/and dheight/NN/dheight indicate/NN/indicate how/WRB/how much/JJ/much the/DT/the rectangle/NN/rectangle should/MD/should grow/VB/grow in/IN/in each/DT/each direction/NNP/direction. invoking/NN/invoking this/DT/this method/NN/method has/VBZ/has the/DT/the effect/NN/effect of/IN/of modifying/VBG/modifying the/DT/the rectangle/NN/rectangle that/IN/that is/VBZ/is passed/VBN/passed as/RB/as an/DT/an argument/NNP/argument. for/IN/for example/NN/example /,/, we/PRP/we could/MD/could create/VB/create a/DT/a new/JJ/new rectangle/NN/rectangle named/VBN/named bob/NN/bob and/CC/and pass/NN/pass it/PRP/it to/TO/to growrect/VB/growrect /:/: >/:/> >/:/> >/:/> bob/NN/bob =/:/= rectangle/NN/rectangle /:/( /:/) >/:/> >/:/> >/:/> bob.width/JJ/bob.width =/NN/= 100.0/CD/100.0 >/CD/> >/CD/> >/CD/> bob.height/JJ/bob.height =/NN/= 200.0/CD/200.0 >/CD/> >/CD/> >/CD/> bob.corner/JJ/bob.corner =/NN/= point/NN/point /:/( /:/) >/:/> >/:/> >/:/> bob.corner.x/JJ/bob.corner.x =/NN/= 0.0/CD/0.0 >/CD/> >/CD/> >/CD/> bob.corner.y/JJ/bob.corner.y =/NN/= 0.0/CD/0.0 >/CD/> >/CD/> >/CD/> growrect/NN/growrect /:/( bob/NN/bob /,/, 50/CD/50 /,/, 100/CD/100 /:/) while/IN/while growrect/NN/growrect is/VBZ/is running/VBG/running /,/, the/DT/the parameter/NN/parameter box/NN/box is/VBZ/is an/DT/an alias/NN/alias for/IN/for bob/NNP/bob. any/DT/any changes/NNS/changes made/VBN/made to/TO/to box/VB/box also/RB/also affect/VB/affect bob/NNP/bob. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function named/VBN/named moverect/NN/moverect that/IN/that takes/VBZ/takes a/DT/a rectangle/NN/rectangle and/CC/and two/CD/two parameters/NNS/parameters named/VBD/named dx/NN/dx and/CC/and dy/NNP/dy. it/PRP/it should/MD/should change/VB/change the/DT/the location/NN/location of/IN/of the/DT/the rectangle/JJ/rectangle by/IN/by adding/NN/adding dx/NN/dx to/TO/to the/DT/the x/NN/x coordinate/NN/coordinate of/IN/of corner/NN/corner and/CC/and adding/VBG/adding dy/NN/dy to/TO/to the/DT/the y/NN/y coordinate/NN/coordinate of/IN/of corner/NNP/corner. 12.8/CD/12.8 copying/VBG/copying aliasing/NN/aliasing can/MD/can make/VB/make a/DT/a program/NN/program difficult/NN/difficult to/TO/to read/VB/read because/IN/because changes/NNS/changes made/VBN/made in/IN/in one/CD/one place/NN/place might/MD/might have/VB/have unexpected/VBN/unexpected effects/NNS/effects in/IN/in another/DT/another place/NNP/place. it/PRP/it is/VBZ/is hard/RB/hard to/TO/to keep/VB/keep track/NN/track of/IN/of all/DT/all the/DT/the variables/NNS/variables that/WDT/that might/MD/might refer/VB/refer to/TO/to a/DT/a given/VBN/given object/NNP/object. copying/NN/copying an/DT/an object/NN/object is/VBZ/is often/RB/often an/DT/an alternative/JJ/alternative to/TO/to aliasing/NNP/aliasing. the/DT/the copy/NN/copy module/NN/module contains/VBZ/contains a/DT/a function/NN/function called/VBN/called copy/NN/copy that/IN/that can/MD/can duplicate/VB/duplicate any/DT/any object/NN/object /:/: >/:/> >/:/> >/:/> import/NN/import copy/NN/copy >/:/> >/:/> >/:/> p1/NNP/p1 =/:/= point/NN/point /:/( /:/) >/:/> >/:/> >/:/> p1.x/JJ/p1.x =/NN/= 3/CD/3 >/CD/> >/CD/> >/CD/> p1.y/JJ/p1.y =/NN/= 4/CD/4 >/CD/> >/CD/> >/CD/> p2/NNP/p2 =/NNP/= copy.copy/NNP/copy.copy /NNP/( p1/NNP/p1 /NNP/) >/NNP/> >/NNP/> >/NNP/> p1/NNP/p1 =/NNP/= =/NNP/= p2/NNP/p2 false/NN/false >/:/> >/:/> >/:/> samepoint/NN/samepoint /:/( p1/NNP/p1 /,/, p2/NNP/p2 /NNP/) true/JJ/true once/NN/once we/PRP/we import/VBP/import the/DT/the copy/NN/copy module/NN/module /,/, we/PRP/we can/MD/can use/VB/use the/DT/the copy/NN/copy method/NN/method to/TO/to make/VB/make a/DT/a new/JJ/new point/NNP/point. p1/NNP/p1 and/CC/and p2/NNP/p2 are/VBP/are not/RB/not the/DT/the same/JJ/same point/NN/point /,/, but/CC/but they/PRP/they contain/VBP/contain the/DT/the same/JJ/same data/NNP/data. 134/CD/134 classes/NNS/classes and/CC/and objects/NNS/objects to/TO/to copy/VB/copy a/DT/a simple/JJ/simple object/NN/object like/IN/like a/DT/a point/NN/point /,/, which/WDT/which doesn/NN/doesn t/VBD/t contain/NN/contain any/DT/any embedded/VBN/embedded objects/NNS/objects /,/, copy/VBP/copy is/VBZ/is sufficient/NNP/sufficient. this/DT/this is/VBZ/is called/VBN/called shallow/JJ/shallow copying/NNP/copying. for/IN/for something/NN/something like/IN/like a/DT/a rectangle/JJ/rectangle /,/, which/WDT/which contains/VBZ/contains a/DT/a reference/NN/reference to/TO/to a/DT/a point/NN/point /,/, copy/VBP/copy doesn/NN/doesn t/NN/t do/VBP/do quite/RB/quite the/DT/the right/NN/right thing/NNP/thing. it/PRP/it copies/VBZ/copies the/DT/the reference/NN/reference to/TO/to the/DT/the point/NN/point object/NN/object /,/, so/RB/so both/DT/both the/DT/the old/JJ/old rectangle/NN/rectangle and/CC/and the/DT/the new/JJ/new one/CD/one refer/NN/refer to/TO/to a/DT/a single/JJ/single point/NNP/point. if/IN/if we/PRP/we create/VBP/create a/DT/a box/NN/box /,/, b1/NNP/b1 /,/, in/IN/in the/DT/the usual/JJ/usual way/NN/way and/CC/and then/RB/then make/VB/make a/DT/a copy/NN/copy /,/, b2/NNP/b2 /,/, using/VBG/using copy/NN/copy /,/, the/DT/the resulting/VBG/resulting state/NN/state diagram/NN/diagram looks/NNS/looks like/IN/like this/DT/this /:/: y/NN/y x/NN/x 0.0/CD/0.0 0.0/CD/0.0 100.0/CD/100.0 200.0/CD/200.0 width/NN/width height/NN/height 100.0/CD/100.0 corner/NN/corner 200.0/CD/200.0 width/NN/width height/NN/height corner/NN/corner b1/NNP/b1 b2/NNP/b2 this/DT/this is/VBZ/is almost/RB/almost certainly/RB/certainly not/RB/not what/WP/what we/PRP/we want/NNP/want. in/IN/in this/DT/this case/NN/case /,/, invoking/VBG/invoking growrect/NN/growrect on/IN/on one/CD/one of/IN/of the/DT/the rectangles/NNS/rectangles would/MD/would not/RB/not affect/VB/affect the/DT/the other/JJ/other /,/, but/CC/but invoking/VBG/invoking moverect/NN/moverect on/IN/on either/DT/either would/MD/would affect/VB/affect both/DT/both !/./! this/DT/this behavior/NN/behavior is/VBZ/is confusing/VBG/confusing and/CC/and error-prone/NNP/error-prone. fortunately/RB/fortunately /,/, the/DT/the copy/NN/copy module/NN/module contains/VBZ/contains a/DT/a method/NN/method named/VBN/named deepcopy/NN/deepcopy that/IN/that copies/NNS/copies not/RB/not only/RB/only the/DT/the object/NN/object but/CC/but also/RB/also any/DT/any embedded/VBN/embedded objects/NNP/objects. you/PRP/you will/MD/will not/RB/not be/VB/be surprised/VBN/surprised to/TO/to learn/VB/learn that/IN/that this/DT/this operation/NN/operation is/VBZ/is called/VBN/called a/DT/a deep/NN/deep copy/NNP/copy. >/NNP/> >/NNP/> >/NNP/> b2/NNP/b2 =/NNP/= copy.deepcopy/NNP/copy.deepcopy /NNP/( b1/NNP/b1 /NNP/) now/RB/now b1/NNP/b1 and/CC/and b2/NNP/b2 are/VBP/are completely/RB/completely separate/JJ/separate objects/NNP/objects. we/PRP/we can/MD/can use/VB/use deepcopy/NN/deepcopy to/TO/to rewrite/VB/rewrite growrect/JJ/growrect so/IN/so that/IN/that instead/RB/instead of/IN/of modifying/VBG/modifying an/DT/an existing/VBG/existing rectangle/JJ/rectangle /,/, it/PRP/it creates/VBZ/creates a/DT/a new/JJ/new rectangle/NN/rectangle that/WDT/that has/VBZ/has the/DT/the same/JJ/same location/NN/location as/IN/as the/DT/the old/JJ/old one/CD/one but/CC/but new/JJ/new dimensions/NNS/dimensions /:/: def/NN/def growrect/NN/growrect /:/( box/NN/box /,/, dwidth/NN/dwidth /,/, dheight/NN/dheight /:/) /:/: import/NN/import copy/NN/copy newbox/NN/newbox =/:/= copy.deepcopy/JJ/copy.deepcopy /NN/( box/NN/box /:/) newbox.width/JJ/newbox.width =/NN/= newbox.width/JJ/newbox.width +/NN/+ dwidth/NN/dwidth newbox.height/JJ/newbox.height =/NN/= newbox.height/JJ/newbox.height +/NN/+ dheight/NN/dheight return/NN/return newbox/NN/newbox an/DT/an an/DT/an exercise/NN/exercise /,/, rewrite/JJ/rewrite moverect/NN/moverect so/IN/so that/IN/that it/PRP/it creates/VBZ/creates and/CC/and returns/NNS/returns a/DT/a new/JJ/new rectangle/NN/rectangle instead/RB/instead of/IN/of modifying/VBG/modifying the/DT/the old/JJ/old one/NNP/one. 12.9/CD/12.9 glossary/JJ/glossary 135/CD/135 12.9/CD/12.9 glossary/JJ/glossary class/NN/class /:/: a/DT/a user-defined/JJ/user-defined compound/NN/compound type/NNP/type. a/DT/a class/NN/class can/MD/can also/RB/also be/VB/be thought/VBN/thought of/IN/of as/RB/as a/DT/a template/NN/template for/IN/for the/DT/the objects/NNS/objects that/WDT/that are/VBP/are instances/NNS/instances of/IN/of it/NNP/it. instantiate/NN/instantiate /:/: to/TO/to create/VB/create an/DT/an instance/NN/instance of/IN/of a/DT/a class/NNP/class. instance/NN/instance /:/: an/DT/an object/NN/object that/IN/that belongs/NNS/belongs to/TO/to a/DT/a class/NNP/class. object/NN/object /:/: a/DT/a compound/NN/compound data/NN/data type/NN/type that/WDT/that is/VBZ/is often/RB/often used/VBN/used to/TO/to model/VB/model a/DT/a thing/NN/thing or/CC/or concept/NN/concept in/IN/in the/DT/the real/JJ/real world/NNP/world. constructor/NN/constructor /:/: a/DT/a method/NN/method used/VBN/used to/TO/to create/VB/create new/JJ/new objects/NNP/objects. attribute/NN/attribute /:/: one/CD/one of/IN/of the/DT/the named/VBN/named data/NNS/data items/NNS/items that/WDT/that makes/VBZ/makes up/RP/up an/DT/an instance/NNP/instance. shallow/NN/shallow equality/NN/equality /:/: equality/NN/equality of/IN/of references/NNS/references /,/, or/CC/or two/CD/two references/NNS/references that/WDT/that point/NN/point to/TO/to the/DT/the same/JJ/same object/NNP/object. deep/NN/deep equality/NN/equality /:/: equality/NN/equality of/IN/of values/NNS/values /,/, or/CC/or two/CD/two references/NNS/references that/WDT/that point/NN/point to/TO/to objects/NNS/objects that/IN/that have/VBP/have the/DT/the same/JJ/same value/NNP/value. shallow/NN/shallow copy/NN/copy /:/: to/TO/to copy/VB/copy the/DT/the contents/NNS/contents of/IN/of an/DT/an object/NN/object /,/, including/VBG/including any/DT/any references/NNS/references to/TO/to embedded/VBN/embedded objects/NNS/objects ;/:/; implemented/VBN/implemented by/IN/by the/DT/the copy/NN/copy function/NN/function in/IN/in the/DT/the copy/NN/copy module/NNP/module. deep/NN/deep copy/NN/copy /:/: to/TO/to copy/VB/copy the/DT/the contents/NNS/contents of/IN/of an/DT/an object/NN/object as/IN/as well/RB/well as/IN/as any/DT/any embedded/VBN/embedded objects/NNS/objects /,/, and/CC/and any/DT/any objects/NNS/objects embedded/VBD/embedded in/IN/in them/PRP/them /,/, and/CC/and so/RB/so on/IN/on ;/:/; implemented/VBN/implemented by/IN/by the/DT/the deepcopy/NN/deepcopy function/NN/function in/IN/in the/DT/the copy/NN/copy module/NNP/module. 136/CD/136 classes/NNS/classes and/CC/and objects/NNS/objects chapter/NN/chapter 13/CD/13 classes/NNS/classes and/CC/and functions/NNS/functions 13.1/CD/13.1 time/NN/time as/IN/as another/DT/another example/NN/example of/IN/of a/DT/a user-defined/JJ/user-defined type/NN/type /,/, we/PRP/we ll/VBP/ll define/NN/define a/DT/a class/NN/class called/VBN/called time/NN/time that/IN/that records/NNS/records the/DT/the time/NN/time of/IN/of day/NNP/day. the/DT/the class/NN/class definition/NN/definition looks/NNS/looks like/IN/like this/DT/this /:/: class/NN/class time/NN/time /:/: pass/NN/pass we/PRP/we can/MD/can create/VB/create a/DT/a new/JJ/new time/NN/time object/NN/object and/CC/and assign/NN/assign attributes/NNS/attributes for/IN/for hours/NNS/hours /,/, minutes/NNS/minutes /,/, and/CC/and seconds/NNS/seconds /:/: time/NN/time =/:/= time/NN/time /:/( /:/) time.hours/NNS/time.hours =/VBP/= 11/CD/11 time.minutes/NNS/time.minutes =/:/= 59/CD/59 time.seconds/NNS/time.seconds =/:/= 30/CD/30 the/DT/the state/NN/state diagram/NN/diagram for/IN/for the/DT/the time/NN/time object/NN/object looks/NNS/looks like/IN/like this/DT/this /:/: 59/CD/59 30/CD/30 hours/NNS/hours minutes/NNS/minutes seconds/NNS/seconds time/NN/time 11/CD/11 as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function printtime/NN/printtime that/WDT/that takes/VBZ/takes a/DT/a time/NN/time object/NN/object as/IN/as an/DT/an argument/NN/argument and/CC/and prints/NNS/prints it/PRP/it in/IN/in the/DT/the form/NN/form hours/NNS/hours /:/: minutes/NNS/minutes /:/: seconds/NNP/seconds. 138/CD/138 classes/NNS/classes and/CC/and functions/NNS/functions as/IN/as a/DT/a second/JJ/second exercise/NN/exercise /,/, write/JJ/write a/DT/a boolean/JJ/boolean function/NN/function after/IN/after that/DT/that takes/VBZ/takes two/CD/two time/NN/time objects/NNS/objects /,/, t1/NNP/t1 and/CC/and t2/NNP/t2 /,/, as/IN/as arguments/NNS/arguments /,/, and/CC/and returns/NNS/returns true/JJ/true if/IN/if t1/NNP/t1 follows/VBZ/follows t2/NNP/t2 chronologically/RB/chronologically and/CC/and false/VB/false otherwise/NNP/otherwise. 13.2/CD/13.2 pure/NN/pure functions/NNS/functions in/IN/in the/DT/the next/JJ/next few/JJ/few sections/NNS/sections /,/, we/PRP/we ll/VBP/ll write/JJ/write two/CD/two versions/NNS/versions of/IN/of a/DT/a function/NN/function called/VBN/called addtime/NN/addtime /,/, which/WDT/which calculates/VBZ/calculates the/DT/the sum/NN/sum of/IN/of two/CD/two times/NNP/times. they/PRP/they will/MD/will demonstrate/VB/demonstrate two/CD/two kinds/NNS/kinds of/IN/of functions/NNS/functions /:/: pure/NN/pure functions/NNS/functions and/CC/and modifiers/NNP/modifiers. the/DT/the following/VBG/following is/VBZ/is a/DT/a rough/JJ/rough version/NN/version of/IN/of addtime/NN/addtime /:/: def/NN/def addtime/NN/addtime /:/( t1/NNP/t1 /,/, t2/NNP/t2 /NNP/) /:/: sum/NN/sum =/:/= time/NN/time /:/( /:/) sum.hours/NNS/sum.hours =/VBP/= t1.hours/NNS/t1.hours +/:/+ t2.hours/NNS/t2.hours sum.minutes/VBZ/sum.minutes =/:/= t1.minutes/NNS/t1.minutes +/VBP/+ t2.minutes/NNS/t2.minutes sum.seconds/NNS/sum.seconds =/VBP/= t1.seconds/NNS/t1.seconds +/:/+ t2.seconds/NNS/t2.seconds return/VBP/return sum/NN/sum the/DT/the function/NN/function creates/VBZ/creates a/DT/a new/JJ/new time/NN/time object/NN/object /,/, initializes/VBZ/initializes its/PRP$/its attributes/NNS/attributes /,/, and/CC/and returns/NNS/returns a/DT/a reference/NN/reference to/TO/to the/DT/the new/JJ/new object/NNP/object. this/DT/this is/VBZ/is called/VBN/called a/DT/a pure/NN/pure function/NN/function because/IN/because it/PRP/it does/VBZ/does not/RB/not modify/VB/modify any/DT/any of/IN/of the/DT/the objects/NNS/objects passed/VBD/passed to/TO/to it/PRP/it as/IN/as arguments/NNS/arguments and/CC/and it/PRP/it has/VBZ/has no/DT/no side/NN/side effects/NNS/effects /,/, such/JJ/such as/IN/as displaying/NN/displaying a/DT/a value/NN/value or/CC/or getting/VBG/getting user/NN/user input/NNP/input. here/RB/here is/VBZ/is an/DT/an example/NN/example of/IN/of how/WRB/how to/TO/to use/VB/use this/DT/this function/NNP/function. we/PRP/we ll/VBP/ll create/JJ/create two/CD/two time/NN/time objects/NNS/objects /:/: currenttime/JJ/currenttime /,/, which/WDT/which contains/VBZ/contains the/DT/the current/JJ/current time/NN/time ;/:/; and/CC/and breadtime/VB/breadtime /,/, which/WDT/which contains/VBZ/contains the/DT/the amount/NN/amount of/IN/of time/NN/time it/PRP/it takes/VBZ/takes for/IN/for a/DT/a breadmaker/NN/breadmaker to/TO/to make/VB/make bread/NNP/bread. then/RB/then we/PRP/we ll/VBP/ll use/VBP/use addtime/NN/addtime to/TO/to figure/VB/figure out/RP/out when/WRB/when the/DT/the bread/NN/bread will/MD/will be/VB/be done/NNP/done. if/IN/if you/PRP/you haven/VBP/haven t/NN/t finished/VBN/finished writing/VBG/writing printtime/NN/printtime yet/RB/yet /,/, take/VB/take a/DT/a look/NN/look ahead/RB/ahead to/TO/to section/NN/section 14.2/CD/14.2 before/IN/before you/PRP/you try/VBP/try this/DT/this /:/: >/:/> >/:/> >/:/> currenttime/NN/currenttime =/:/= time/NN/time /:/( /:/) >/:/> >/:/> >/:/> currenttime.hours/NNS/currenttime.hours =/VBP/= 9/CD/9 >/CD/> >/CD/> >/CD/> currenttime.minutes/NNS/currenttime.minutes =/:/= 14/CD/14 >/CD/> >/CD/> >/CD/> currenttime.seconds/NNS/currenttime.seconds =/:/= 30/CD/30 >/CD/> >/CD/> >/CD/> breadtime/NN/breadtime =/:/= time/NN/time /:/( /:/) >/:/> >/:/> >/:/> breadtime.hours/NNS/breadtime.hours =/VBP/= 3/CD/3 >/CD/> >/CD/> >/CD/> breadtime.minutes/NNS/breadtime.minutes =/:/= 35/CD/35 >/CD/> >/CD/> >/CD/> breadtime.seconds/NNS/breadtime.seconds =/:/= 0/-NONE-/0 >/:/> >/:/> >/:/> donetime/NN/donetime =/:/= addtime/NN/addtime /:/( currenttime/NN/currenttime /,/, breadtime/NN/breadtime /:/) >/:/> >/:/> >/:/> printtime/NN/printtime /:/( donetime/NN/donetime /:/) 13.3/CD/13.3 modifiers/NNS/modifiers 139/CD/139 the/DT/the output/NN/output of/IN/of this/DT/this program/NN/program is/VBZ/is 12/CD/12 /:/: 49/CD/49 /:/: 30/CD/30 /,/, which/WDT/which is/VBZ/is correct/NNP/correct. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, there/EX/there are/VBP/are cases/NNS/cases where/WRB/where the/DT/the result/NN/result is/VBZ/is not/RB/not correct/NNP/correct. can/MD/can you/PRP/you think/VB/think of/IN/of one/CD/one the/DT/the problem/NN/problem is/VBZ/is that/IN/that this/DT/this function/NN/function does/VBZ/does not/RB/not deal/VB/deal with/IN/with cases/NNS/cases where/WRB/where the/DT/the number/NN/number of/IN/of seconds/NNS/seconds or/CC/or minutes/NNS/minutes adds/VBZ/adds up/RP/up to/TO/to more/JJR/more than/IN/than sixty/NNP/sixty. when/WRB/when that/DT/that happens/VBZ/happens /,/, we/PRP/we have/VBP/have to/TO/to carry/VB/carry the/DT/the extra/JJ/extra seconds/NNS/seconds into/IN/into the/DT/the minutes/NNS/minutes column/VBP/column or/CC/or the/DT/the extra/JJ/extra minutes/NNS/minutes into/IN/into the/DT/the hours/NNS/hours column/NNP/column. here/RB/here s/VBZ/s a/DT/a second/JJ/second corrected/VBN/corrected version/NN/version of/IN/of the/DT/the function/NN/function /:/: def/NN/def addtime/NN/addtime /:/( t1/NNP/t1 /,/, t2/NNP/t2 /NNP/) /:/: sum/NN/sum =/:/= time/NN/time /:/( /:/) sum.hours/NNS/sum.hours =/VBP/= t1.hours/NNS/t1.hours +/:/+ t2.hours/NNS/t2.hours sum.minutes/VBZ/sum.minutes =/:/= t1.minutes/NNS/t1.minutes +/VBP/+ t2.minutes/NNS/t2.minutes sum.seconds/NNS/sum.seconds =/VBP/= t1.seconds/NNS/t1.seconds +/:/+ t2.seconds/NNS/t2.seconds if/IN/if sum.seconds/NNS/sum.seconds >/VBP/> =/:/= 60/CD/60 /:/: sum.seconds/NNS/sum.seconds =/VBP/= sum.seconds/NNS/sum.seconds /:/- 60/CD/60 sum.minutes/NNS/sum.minutes =/:/= sum.minutes/NNS/sum.minutes +/VBP/+ 1/CD/1 if/IN/if sum.minutes/NNS/sum.minutes >/VBP/> =/:/= 60/CD/60 /:/: sum.minutes/NNS/sum.minutes =/VBP/= sum.minutes/NNS/sum.minutes /:/- 60/CD/60 sum.hours/NNS/sum.hours =/:/= sum.hours/NNS/sum.hours +/VBP/+ 1/CD/1 return/NN/return sum/NN/sum although/IN/although this/DT/this function/NN/function is/VBZ/is correct/JJ/correct /,/, it/PRP/it is/VBZ/is starting/VBG/starting to/TO/to get/VB/get big/NNP/big. later/JJ/later we/PRP/we will/MD/will suggest/VB/suggest an/DT/an alternative/JJ/alternative approach/NN/approach that/WDT/that yields/VBZ/yields shorter/JJR/shorter code/NNP/code. 13.3/CD/13.3 modifiers/NNS/modifiers there/RB/there are/VBP/are times/NNS/times when/WRB/when it/PRP/it is/VBZ/is useful/JJ/useful for/IN/for a/DT/a function/NN/function to/TO/to modify/VB/modify one/CD/one or/CC/or more/JJR/more of/IN/of the/DT/the objects/NNS/objects it/PRP/it gets/VBZ/gets as/IN/as arguments/NNP/arguments. usually/RB/usually /,/, the/DT/the caller/NN/caller keeps/VBZ/keeps a/DT/a reference/NN/reference to/TO/to the/DT/the objects/NNS/objects it/PRP/it passes/VBZ/passes /,/, so/RB/so any/DT/any changes/NNS/changes the/DT/the function/NN/function makes/VBZ/makes are/VBP/are visible/JJ/visible to/TO/to the/DT/the caller/NNP/caller. functions/NNS/functions that/WDT/that work/NN/work this/DT/this way/NN/way are/VBP/are called/VBN/called modifiers/NNP/modifiers. increment/NN/increment /,/, which/WDT/which adds/VBZ/adds a/DT/a given/VBN/given number/NN/number of/IN/of seconds/NNS/seconds to/TO/to a/DT/a time/NN/time object/NN/object /,/, would/MD/would be/VB/be written/VBN/written most/JJS/most naturally/RB/naturally as/IN/as a/DT/a modifier/NNP/modifier. a/DT/a rough/JJ/rough draft/NN/draft of/IN/of the/DT/the function/NN/function looks/VBZ/looks like/IN/like this/DT/this /:/: 140/CD/140 classes/NNS/classes and/CC/and functions/NNS/functions def/IN/def increment/NN/increment /:/( time/NN/time /,/, seconds/NNS/seconds /:/) /:/: time.seconds/NNS/time.seconds =/VBP/= time.seconds/NNS/time.seconds +/:/+ seconds/NNS/seconds if/IN/if time.seconds/NNS/time.seconds >/VBP/> =/:/= 60/CD/60 /:/: time.seconds/NNS/time.seconds =/VBP/= time.seconds/NNS/time.seconds /:/- 60/CD/60 time.minutes/NNS/time.minutes =/:/= time.minutes/NNS/time.minutes +/VBP/+ 1/CD/1 if/IN/if time.minutes/NNS/time.minutes >/VBP/> =/:/= 60/CD/60 /:/: time.minutes/NNS/time.minutes =/VBP/= time.minutes/NNS/time.minutes /:/- 60/CD/60 time.hours/NNS/time.hours =/:/= time.hours/NNS/time.hours +/VBP/+ 1/CD/1 the/DT/the first/JJ/first line/NN/line performs/NNS/performs the/DT/the basic/JJ/basic operation/NN/operation ;/:/; the/DT/the remainder/NN/remainder deals/NNS/deals with/IN/with the/DT/the special/JJ/special cases/NNS/cases we/PRP/we saw/VBD/saw before/NNP/before. is/VBZ/is this/DT/this function/NN/function correct/NN/correct what/WP/what happens/NNS/happens if/IN/if the/DT/the parameter/NN/parameter seconds/NNS/seconds is/VBZ/is much/JJ/much greater/NN/greater than/IN/than sixty/NN/sixty in/IN/in that/DT/that case/NN/case /,/, it/PRP/it is/VBZ/is not/RB/not enough/RB/enough to/TO/to carry/VB/carry once/RB/once ;/:/; we/PRP/we have/VBP/have to/TO/to keep/VB/keep doing/VBG/doing it/PRP/it until/IN/until seconds/NNS/seconds is/VBZ/is less/JJR/less than/IN/than sixty/NNP/sixty. one/CD/one solution/NN/solution is/VBZ/is to/TO/to replace/VB/replace the/DT/the if/JJ/if statements/NNS/statements with/IN/with while/IN/while statements/NNS/statements /:/: def/NN/def increment/NN/increment /:/( time/NN/time /,/, seconds/NNS/seconds /:/) /:/: time.seconds/NNS/time.seconds =/VBP/= time.seconds/NNS/time.seconds +/:/+ seconds/NNS/seconds while/IN/while time.seconds/NNS/time.seconds >/:/> =/:/= 60/CD/60 /:/: time.seconds/NNS/time.seconds =/VBP/= time.seconds/NNS/time.seconds /:/- 60/CD/60 time.minutes/NNS/time.minutes =/:/= time.minutes/NNS/time.minutes +/VBP/+ 1/CD/1 while/IN/while time.minutes/NNS/time.minutes >/:/> =/:/= 60/CD/60 /:/: time.minutes/NNS/time.minutes =/VBP/= time.minutes/NNS/time.minutes /:/- 60/CD/60 time.hours/NNS/time.hours =/:/= time.hours/NNS/time.hours +/VBP/+ 1/CD/1 this/DT/this function/NN/function is/VBZ/is now/RB/now correct/JJ/correct /,/, but/CC/but it/PRP/it is/VBZ/is not/RB/not the/DT/the most/RBS/most efficient/JJ/efficient solution/NNP/solution. as/IN/as an/DT/an exercise/NN/exercise /,/, rewrite/JJ/rewrite this/DT/this function/NN/function so/IN/so that/IN/that it/PRP/it doesn/VBP/doesn t/NN/t contain/NN/contain any/DT/any loops/NNP/loops. as/IN/as a/DT/a second/JJ/second exercise/NN/exercise /,/, rewrite/JJ/rewrite increment/NN/increment as/IN/as a/DT/a pure/NN/pure function/NN/function /,/, and/CC/and write/VB/write function/NN/function calls/NNS/calls to/TO/to both/DT/both versions/NNP/versions. 13.4/CD/13.4 which/WDT/which is/VBZ/is better/RBR/better anything/NN/anything that/IN/that can/MD/can be/VB/be done/VBN/done with/IN/with modifiers/NNS/modifiers can/MD/can also/RB/also be/VB/be done/VBN/done with/IN/with pure/NN/pure functions/NNP/functions. in/IN/in fact/NN/fact /,/, some/DT/some programming/NN/programming languages/NNS/languages only/RB/only allow/VBP/allow pure/NN/pure functions/NNP/functions. there/EX/there is/VBZ/is some/DT/some evidence/NN/evidence that/IN/that programs/NNS/programs that/WDT/that use/NN/use pure/NN/pure functions/NNS/functions are/VBP/are faster/JJR/faster to/TO/to develop/VB/develop and/CC/and less/JJR/less error-prone/NN/error-prone than/IN/than programs/NNS/programs that/WDT/that use/NN/use modifiers/NNP/modifiers. nevertheless/NN/nevertheless /,/, modifiers/NNS/modifiers are/VBP/are convenient/JJ/convenient at/IN/at times/NNS/times /,/, and/CC/and in/IN/in some/DT/some cases/NNS/cases /,/, functional/JJ/functional programs/NNS/programs are/VBP/are less/JJR/less efficient/NNP/efficient. 13.5/CD/13.5 prototype/NN/prototype development/NN/development versus/VBZ/versus planning/VBG/planning 141/CD/141 in/IN/in general/JJ/general /,/, we/PRP/we recommend/VBP/recommend that/IN/that you/PRP/you write/VBP/write pure/NN/pure functions/NNS/functions whenever/RB/whenever it/PRP/it is/VBZ/is reasonable/JJ/reasonable to/TO/to do/VB/do so/RB/so and/CC/and resort/NN/resort to/TO/to modifiers/NNS/modifiers only/RB/only if/IN/if there/EX/there is/VBZ/is a/DT/a compelling/NN/compelling advantage/NNP/advantage. this/DT/this approach/NN/approach might/MD/might be/VB/be called/VBN/called a/DT/a functional/JJ/functional programming/NN/programming style/NNP/style. 13.5/CD/13.5 prototype/NN/prototype development/NN/development versus/VBZ/versus planning/VBG/planning in/IN/in this/DT/this chapter/NN/chapter /,/, we/PRP/we demonstrated/VBD/demonstrated an/DT/an approach/NN/approach to/TO/to program/NN/program development/NN/development that/WDT/that we/PRP/we call/VBP/call prototype/NN/prototype development/NNP/development. in/IN/in each/DT/each case/NN/case /,/, we/PRP/we wrote/VBD/wrote a/DT/a rough/JJ/rough draft/NN/draft /:/( or/CC/or prototype/NN/prototype /:/) that/IN/that performed/VBN/performed the/DT/the basic/JJ/basic calculation/NN/calculation and/CC/and then/RB/then tested/VBD/tested it/PRP/it on/IN/on a/DT/a few/JJ/few cases/NNS/cases /,/, correcting/VBG/correcting flaws/NNS/flaws as/IN/as we/PRP/we found/VBD/found them/NNP/them. although/IN/although this/DT/this approach/NN/approach can/MD/can be/VB/be effective/JJ/effective /,/, it/PRP/it can/MD/can lead/VB/lead to/TO/to code/VB/code that/IN/that is/VBZ/is unnecessarily/RB/unnecessarily complicated/VBN/complicated since/IN/since it/PRP/it deals/VBZ/deals with/IN/with many/JJ/many special/JJ/special cases/NNS/cases and/CC/and unreliable/JJ/unreliable since/IN/since it/PRP/it is/VBZ/is hard/RB/hard to/TO/to know/VB/know if/IN/if you/PRP/you have/VBP/have found/VBN/found all/DT/all the/DT/the errors/NNP/errors. an/DT/an alternative/NN/alternative is/VBZ/is planned/VBN/planned development/NN/development /,/, in/IN/in which/WDT/which high-level/-NONE-/high-level insight/VBD/insight into/IN/into the/DT/the problem/NN/problem can/MD/can make/VB/make the/DT/the programming/NN/programming much/RB/much easier/NNP/easier. in/IN/in this/DT/this case/NN/case /,/, the/DT/the insight/NN/insight is/VBZ/is that/IN/that a/DT/a time/NN/time object/NN/object is/VBZ/is really/RB/really a/DT/a three-digit/JJ/three-digit number/NN/number in/IN/in base/NN/base 60/CD/60 !/./! the/DT/the second/JJ/second component/NN/component is/VBZ/is the/DT/the ones/NNS/ones column/VBP/column /,/, the/DT/the minute/NN/minute component/NN/component is/VBZ/is the/DT/the sixties/NNS/sixties column/VBP/column /,/, and/CC/and the/DT/the hour/NN/hour component/NN/component is/VBZ/is the/DT/the thirty-six/JJ/thirty-six hundreds/NNS/hundreds column/NNP/column. when/WRB/when we/PRP/we wrote/VBP/wrote addtime/RB/addtime and/CC/and increment/NN/increment /,/, we/PRP/we were/VBD/were effectively/RB/effectively doing/VBG/doing addition/NN/addition in/IN/in base/NN/base 60/CD/60 /,/, which/WDT/which is/VBZ/is why/WRB/why we/PRP/we had/VBD/had to/TO/to carry/VB/carry from/IN/from one/CD/one column/NN/column to/TO/to the/DT/the next/NNP/next. this/DT/this observation/NN/observation suggests/VBZ/suggests another/DT/another approach/NN/approach to/TO/to the/DT/the whole/JJ/whole problem/NN/problem we/PRP/we can/MD/can convert/VB/convert a/DT/a time/NN/time object/NN/object into/IN/into a/DT/a single/JJ/single number/NN/number and/CC/and take/VB/take advantage/NN/advantage of/IN/of the/DT/the fact/NN/fact that/IN/that the/DT/the computer/NN/computer knows/VBZ/knows how/WRB/how to/TO/to do/VB/do arithmetic/JJ/arithmetic with/IN/with numbers/NNP/numbers. the/DT/the following/VBG/following function/NN/function converts/NNS/converts a/DT/a time/NN/time object/NN/object into/IN/into an/DT/an integer/NN/integer /:/: def/NN/def converttoseconds/NNS/converttoseconds /:/( t/NN/t /:/) /:/: minutes/NNS/minutes =/VBP/= t.hours/NNS/t.hours 60/CD/60 +/CD/+ t.minutes/NNS/t.minutes seconds/NNS/seconds =/VBP/= minutes/NNS/minutes 60/CD/60 +/CD/+ t.seconds/NNS/t.seconds return/NN/return seconds/NNS/seconds now/RB/now /,/, all/DT/all we/PRP/we need/VBP/need is/VBZ/is a/DT/a way/NN/way to/TO/to convert/VB/convert from/IN/from an/DT/an integer/NN/integer to/TO/to a/DT/a time/NN/time object/NN/object /:/: def/NN/def maketime/NN/maketime /:/( seconds/NNS/seconds /VBP/) /:/: time/NN/time =/:/= time/NN/time /:/( /:/) time.hours/NNS/time.hours =/VBP/= seconds/NNS/seconds ///:/// 3600/CD/3600 time.minutes/NNS/time.minutes =/:/= /:/( seconds/NNS/seconds %/NN/% 3600/CD/3600 /CD/) ///CD/// 60/CD/60 time.seconds/NNS/time.seconds =/:/= seconds/NNS/seconds %/NN/% 60/CD/60 return/NN/return time/NN/time you/PRP/you might/MD/might have/VB/have to/TO/to think/VB/think a/DT/a bit/NN/bit to/TO/to convince/VB/convince yourself/PRP/yourself that/IN/that this/DT/this function/NN/function is/VBZ/is correct/NNP/correct. assuming/VBG/assuming you/PRP/you are/VBP/are convinced/VBN/convinced /,/, you/PRP/you can/MD/can use/VB/use it/PRP/it and/CC/and converttoseconds/VBZ/converttoseconds to/TO/to rewrite/VB/rewrite addtime/NN/addtime /:/: 142/CD/142 classes/NNS/classes and/CC/and functions/NNS/functions def/IN/def addtime/NN/addtime /:/( t1/NNP/t1 /,/, t2/NNP/t2 /NNP/) /:/: seconds/NNS/seconds =/VBP/= converttoseconds/NNS/converttoseconds /:/( t1/NNP/t1 /:/) +/:/+ converttoseconds/NNS/converttoseconds /VBP/( t2/NNP/t2 /NNP/) return/NN/return maketime/NN/maketime /:/( seconds/NNS/seconds /VBP/) this/DT/this version/NN/version is/VBZ/is much/JJ/much shorter/NN/shorter than/IN/than the/DT/the original/JJ/original /,/, and/CC/and it/PRP/it is/VBZ/is much/RB/much easier/JJR/easier to/TO/to demonstrate/VB/demonstrate that/IN/that it/PRP/it is/VBZ/is correct/NNP/correct. as/IN/as an/DT/an exercise/NN/exercise /,/, rewrite/JJ/rewrite increment/NN/increment the/DT/the same/JJ/same way/NNP/way. 13.6/CD/13.6 generalization/NN/generalization in/IN/in some/DT/some ways/NNS/ways /,/, converting/VBG/converting from/IN/from base/NN/base 60/CD/60 to/TO/to base/VB/base 10/CD/10 and/CC/and back/RB/back is/VBZ/is harder/JJR/harder than/IN/than just/RB/just dealing/VBG/dealing with/IN/with times/NNP/times. base/NN/base conversion/NN/conversion is/VBZ/is more/RBR/more abstract/JJ/abstract ;/:/; our/PRP$/our intuition/NN/intuition for/IN/for dealing/VBG/dealing with/IN/with times/NNS/times is/VBZ/is better/NNP/better. but/CC/but if/IN/if we/PRP/we have/VBP/have the/DT/the insight/NN/insight to/TO/to treat/VB/treat times/NNS/times as/IN/as base/NN/base 60/CD/60 numbers/NNS/numbers and/CC/and make/VB/make the/DT/the investment/NN/investment of/IN/of writing/VBG/writing the/DT/the conversion/NN/conversion functions/NNS/functions /:/( converttoseconds/NNS/converttoseconds and/CC/and maketime/VB/maketime /:/) /,/, we/PRP/we get/VBP/get a/DT/a program/NN/program that/WDT/that is/VBZ/is shorter/RBR/shorter /,/, easier/JJR/easier to/TO/to read/VB/read and/CC/and debug/NN/debug /,/, and/CC/and more/JJR/more reliable/NNP/reliable. it/PRP/it is/VBZ/is also/RB/also easier/JJR/easier to/TO/to add/VB/add features/NNS/features later/NNP/later. for/IN/for example/NN/example /,/, imagine/NN/imagine subtracting/VBG/subtracting two/CD/two times/NNS/times to/TO/to find/VB/find the/DT/the duration/NN/duration between/IN/between them/NNP/them. the/DT/the na/NN/na ve/NN/ve approach/NN/approach would/MD/would be/VB/be to/TO/to implement/VB/implement subtraction/NN/subtraction with/IN/with borrowing/NNP/borrowing. using/VBG/using the/DT/the conversion/NN/conversion functions/NNS/functions would/MD/would be/VB/be easier/JJR/easier and/CC/and more/JJR/more likely/JJ/likely to/TO/to be/VB/be correct/NNP/correct. ironically/RB/ironically /,/, sometimes/RB/sometimes making/VBG/making a/DT/a problem/NN/problem harder/NN/harder /:/( or/CC/or more/JJR/more general/JJ/general /NN/) makes/VBZ/makes it/PRP/it easier/JJR/easier /:/( because/IN/because there/EX/there are/VBP/are fewer/JJR/fewer special/JJ/special cases/NNS/cases and/CC/and fewer/JJR/fewer opportunities/NNS/opportunities for/IN/for error/NN/error /:/) /./. 13.7/CD/13.7 algorithms/NNS/algorithms when/WRB/when you/PRP/you write/VBP/write a/DT/a general/JJ/general solution/NN/solution for/IN/for a/DT/a class/NN/class of/IN/of problems/NNS/problems /,/, as/IN/as opposed/VBN/opposed to/TO/to a/DT/a specific/JJ/specific solution/NN/solution to/TO/to a/DT/a single/JJ/single problem/NN/problem /,/, you/PRP/you have/VBP/have written/VBN/written an/DT/an algorithm/NNP/algorithm. we/PRP/we mentioned/VBD/mentioned this/DT/this word/NN/word before/IN/before but/CC/but did/VBD/did not/RB/not define/VB/define it/PRP/it carefully/NNP/carefully. it/PRP/it is/VBZ/is not/RB/not easy/JJ/easy to/TO/to define/VB/define /,/, so/RB/so we/PRP/we will/MD/will try/VB/try a/DT/a couple/NN/couple of/IN/of approaches/NNP/approaches. first/JJ/first /,/, consider/NN/consider something/NN/something that/WDT/that is/VBZ/is not/RB/not an/DT/an algorithm/NNP/algorithm. when/WRB/when you/PRP/you learned/VBD/learned to/TO/to multiply/RB/multiply single-digit/JJ/single-digit numbers/NNS/numbers /,/, you/PRP/you probably/RB/probably memorized/VBD/memorized the/DT/the multiplication/NN/multiplication table/NNP/table. in/IN/in effect/NN/effect /,/, you/PRP/you memorized/VBD/memorized 100/CD/100 specific/JJ/specific solutions/NNP/solutions. that/IN/that kind/NN/kind of/IN/of knowledge/NN/knowledge is/VBZ/is not/RB/not algorithmic/NNP/algorithmic. but/CC/but if/IN/if you/PRP/you were/VBD/were lazy/JJ/lazy /,/, you/PRP/you probably/RB/probably cheated/VBD/cheated by/IN/by learning/NN/learning a/DT/a few/JJ/few tricks/NNP/tricks. for/IN/for example/NN/example /,/, to/TO/to find/VB/find the/DT/the product/NN/product of/IN/of n/NN/n and/CC/and 9/CD/9 /,/, you/PRP/you can/MD/can write/VB/write n/NN/n 1/CD/1 as/IN/as the/DT/the first/JJ/first digit/NN/digit and/CC/and 10/CD/10 n/NN/n as/IN/as the/DT/the second/JJ/second digit/NNP/digit. this/DT/this trick/NN/trick is/VBZ/is a/DT/a general/JJ/general solution/NN/solution for/IN/for multiplying/NN/multiplying any/DT/any single-digit/JJ/single-digit number/NN/number by/IN/by 9/CD/9. that/WDT/that s/VBZ/s an/DT/an algorithm/NN/algorithm !/./! 13.8/CD/13.8 glossary/JJ/glossary 143/CD/143 similarly/RB/similarly /,/, the/DT/the techniques/NNS/techniques you/PRP/you learned/VBD/learned for/IN/for addition/NN/addition with/IN/with carrying/VBG/carrying /,/, subtraction/NN/subtraction with/IN/with borrowing/NN/borrowing /,/, and/CC/and long/RB/long division/NN/division are/VBP/are all/DT/all algorithms/NNP/algorithms. one/CD/one of/IN/of the/DT/the characteristics/NNS/characteristics of/IN/of algorithms/NNS/algorithms is/VBZ/is that/IN/that they/PRP/they do/VBP/do not/RB/not require/VB/require any/DT/any intelligence/NN/intelligence to/TO/to carry/VB/carry out/NNP/out. they/PRP/they are/VBP/are mechanical/JJ/mechanical processes/NNS/processes in/IN/in which/WDT/which each/DT/each step/NN/step follows/VBZ/follows from/IN/from the/DT/the last/JJ/last according/VBG/according to/TO/to a/DT/a simple/JJ/simple set/NN/set of/IN/of rules/NNP/rules. in/IN/in our/PRP$/our opinion/NN/opinion /,/, it/PRP/it is/VBZ/is embarrassing/VBG/embarrassing that/IN/that humans/NNS/humans spend/VBP/spend so/RB/so much/RB/much time/VB/time in/IN/in school/NN/school learning/NN/learning to/TO/to execute/VB/execute algorithms/NNS/algorithms that/WDT/that /,/, quite/RB/quite literally/RB/literally /,/, require/VBP/require no/DT/no intelligence/NNP/intelligence. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, the/DT/the process/NN/process of/IN/of designing/VBG/designing algorithms/NNS/algorithms is/VBZ/is interesting/VBG/interesting /,/, intellectually/RB/intellectually challenging/VBG/challenging /,/, and/CC/and a/DT/a central/JJ/central part/NN/part of/IN/of what/WP/what we/PRP/we call/VBP/call programming/NNP/programming. some/DT/some of/IN/of the/DT/the things/NNS/things that/IN/that people/NNS/people do/VBP/do naturally/RB/naturally /,/, without/IN/without difficulty/NN/difficulty or/CC/or conscious/JJ/conscious thought/NN/thought /,/, are/VBP/are the/DT/the hardest/JJS/hardest to/TO/to express/NN/express algorithmically/NNP/algorithmically. understanding/NN/understanding natural/JJ/natural language/NN/language is/VBZ/is a/DT/a good/JJ/good example/NNP/example. we/PRP/we all/DT/all do/VBP/do it/PRP/it /,/, but/CC/but so/RB/so far/RB/far no/DT/no one/NN/one has/VBZ/has been/VBN/been able/JJ/able to/TO/to explain/VB/explain how/WRB/how we/PRP/we do/VBP/do it/PRP/it /,/, at/IN/at least/JJS/least not/RB/not in/IN/in the/DT/the form/NN/form of/IN/of an/DT/an algorithm/NNP/algorithm. 13.8/CD/13.8 glossary/JJ/glossary pure/NN/pure function/NN/function /:/: a/DT/a function/NN/function that/WDT/that does/VBZ/does not/RB/not modify/VB/modify any/DT/any of/IN/of the/DT/the objects/NNS/objects it/PRP/it receives/VBZ/receives as/IN/as arguments/NNP/arguments. most/RBS/most pure/JJ/pure functions/NNS/functions are/VBP/are fruitful/NNP/fruitful. modifier/RBR/modifier /:/: a/DT/a function/NN/function that/WDT/that changes/NNS/changes one/CD/one or/CC/or more/JJR/more of/IN/of the/DT/the objects/NNS/objects it/PRP/it receives/VBZ/receives as/IN/as arguments/NNP/arguments. most/RBS/most modifiers/NNS/modifiers are/VBP/are fruitless/NNP/fruitless. functional/JJ/functional programming/NN/programming style/NN/style /:/: a/DT/a style/NN/style of/IN/of program/NN/program design/NN/design in/IN/in which/WDT/which the/DT/the majority/NN/majority of/IN/of functions/NNS/functions are/VBP/are pure/NNP/pure. prototype/NN/prototype development/NN/development /:/: a/DT/a way/NN/way of/IN/of developing/VBG/developing programs/NNS/programs starting/VBG/starting with/IN/with a/DT/a prototype/NN/prototype and/CC/and gradually/RB/gradually testing/VBG/testing and/CC/and improving/VBG/improving it/NNP/it. planned/VBD/planned development/NN/development /:/: a/DT/a way/NN/way of/IN/of developing/VBG/developing programs/NNS/programs that/WDT/that involves/VBZ/involves high-level/JJ/high-level insight/NN/insight into/IN/into the/DT/the problem/NN/problem and/CC/and more/JJR/more planning/VBG/planning than/IN/than incremental/JJ/incremental development/NN/development or/CC/or prototype/NN/prototype development/NNP/development. algorithm/NN/algorithm /:/: a/DT/a set/NN/set of/IN/of instructions/NNS/instructions for/IN/for solving/VBG/solving a/DT/a class/NN/class of/IN/of problems/NNS/problems by/IN/by a/DT/a mechanical/JJ/mechanical /,/, unintelligent/NN/unintelligent process/NNP/process. 144/CD/144 classes/NNS/classes and/CC/and functions/NNS/functions chapter/NN/chapter 14/CD/14 classes/NNS/classes and/CC/and methods/NNS/methods 14.1/CD/14.1 object-oriented/JJ/object-oriented features/NNS/features python/VBP/python is/VBZ/is an/DT/an object-oriented/JJ/object-oriented programming/NN/programming language/NN/language /,/, which/WDT/which means/VBZ/means that/DT/that it/PRP/it provides/VBZ/provides features/NNS/features that/IN/that support/NN/support object-oriented/JJ/object-oriented programming/NNP/programming. it/PRP/it is/VBZ/is not/RB/not easy/JJ/easy to/TO/to define/VB/define object-oriented/JJ/object-oriented programming/NN/programming /,/, but/CC/but we/PRP/we have/VBP/have already/RB/already seen/VBN/seen some/DT/some of/IN/of its/PRP$/its characteristics/NNS/characteristics /:/: programs/NNS/programs are/VBP/are made/VBN/made up/RP/up of/IN/of object/NN/object definitions/NNS/definitions and/CC/and function/NN/function definitions/NNS/definitions /,/, and/CC/and most/JJS/most of/IN/of the/DT/the computation/NN/computation is/VBZ/is expressed/VBN/expressed in/IN/in terms/NNS/terms of/IN/of operations/NNS/operations on/IN/on objects/NNP/objects. each/DT/each object/NN/object definition/NN/definition corresponds/NNS/corresponds to/TO/to some/DT/some object/NN/object or/CC/or concept/NN/concept in/IN/in the/DT/the real/JJ/real world/NN/world /,/, and/CC/and the/DT/the functions/NNS/functions that/IN/that operate/JJ/operate on/IN/on that/DT/that object/NN/object correspond/NN/correspond to/TO/to the/DT/the ways/NNS/ways real-world/JJ/real-world objects/NNS/objects interact/NNP/interact. for/IN/for example/NN/example /,/, the/DT/the time/NN/time class/NN/class defined/VBD/defined in/IN/in chapter/NN/chapter 13/CD/13 corresponds/NNS/corresponds to/TO/to the/DT/the way/NN/way people/NNS/people record/VB/record the/DT/the time/NN/time of/IN/of day/NN/day /,/, and/CC/and the/DT/the functions/NNS/functions we/PRP/we defined/VBD/defined correspond/NN/correspond to/TO/to the/DT/the kinds/NNS/kinds of/IN/of things/NNS/things people/NNS/people do/VBP/do with/IN/with times/NNP/times. similarly/RB/similarly /,/, the/DT/the point/NN/point and/CC/and rectangle/JJ/rectangle classes/NNS/classes correspond/VBP/correspond to/TO/to the/DT/the mathematical/JJ/mathematical concepts/NNS/concepts of/IN/of a/DT/a point/NN/point and/CC/and a/DT/a rectangle/NNP/rectangle. so/RB/so far/RB/far /,/, we/PRP/we have/VBP/have not/RB/not taken/VBN/taken advantage/NN/advantage of/IN/of the/DT/the features/NNS/features python/VBP/python provides/NNS/provides to/TO/to support/VB/support object-oriented/JJ/object-oriented programming/NNP/programming. strictly/RB/strictly speaking/VBG/speaking /,/, these/DT/these features/NNS/features are/VBP/are not/RB/not necessary/NNP/necessary. for/IN/for the/DT/the most/JJS/most part/NN/part /,/, they/PRP/they provide/VBP/provide an/DT/an alternative/JJ/alternative syntax/NN/syntax for/IN/for things/NNS/things we/PRP/we have/VBP/have already/RB/already done/VBN/done /,/, but/CC/but in/IN/in many/JJ/many cases/NNS/cases /,/, the/DT/the alternative/NN/alternative is/VBZ/is more/RBR/more concise/JJ/concise and/CC/and more/RBR/more accurately/RB/accurately conveys/VBZ/conveys the/DT/the structure/NN/structure of/IN/of the/DT/the program/NNP/program. for/IN/for example/NN/example /,/, in/IN/in the/DT/the time/NN/time program/NN/program /,/, there/EX/there is/VBZ/is no/DT/no obvious/JJ/obvious connection/NN/connection between/IN/between the/DT/the class/NN/class definition/NN/definition and/CC/and the/DT/the function/NN/function definitions/NNS/definitions that/WDT/that follow/-NONE-/follow. with/IN/with some/DT/some examination/NN/examination /,/, it/PRP/it is/VBZ/is apparent/JJ/apparent that/IN/that every/DT/every function/NN/function takes/VBZ/takes at/IN/at least/JJS/least one/CD/one time/NN/time object/NN/object as/IN/as an/DT/an argument/NNP/argument. 146/CD/146 classes/NNS/classes and/CC/and methods/NNS/methods this/DT/this observation/NN/observation is/VBZ/is the/DT/the motivation/NN/motivation for/IN/for methods/NNP/methods. we/PRP/we have/VBP/have already/RB/already seen/VBN/seen some/DT/some methods/NNS/methods /,/, such/JJ/such as/IN/as keys/NNS/keys and/CC/and values/NNS/values /,/, which/WDT/which were/VBD/were invoked/VBN/invoked on/IN/on dictionaries/NNP/dictionaries. each/DT/each method/NN/method is/VBZ/is associated/VBN/associated with/IN/with a/DT/a class/NN/class and/CC/and is/VBZ/is intended/VBN/intended to/TO/to be/VB/be invoked/VBN/invoked on/IN/on instances/NNS/instances of/IN/of that/DT/that class/NNP/class. methods/NNS/methods are/VBP/are just/RB/just like/IN/like functions/NNS/functions /,/, with/IN/with two/CD/two differences/NNS/differences /:/: methods/NNS/methods are/VBP/are defined/VBN/defined inside/NN/inside a/DT/a class/NN/class definition/NN/definition in/IN/in order/NN/order to/TO/to make/VB/make the/DT/the relationship/NN/relationship between/IN/between the/DT/the class/NN/class and/CC/and the/DT/the method/NN/method explicit/NNP/explicit. the/DT/the syntax/NN/syntax for/IN/for invoking/NN/invoking a/DT/a method/NN/method is/VBZ/is different/JJ/different from/IN/from the/DT/the syntax/NN/syntax for/IN/for calling/NN/calling a/DT/a function/NNP/function. in/IN/in the/DT/the next/JJ/next few/JJ/few sections/NNS/sections /,/, we/PRP/we will/MD/will take/VB/take the/DT/the functions/NNS/functions from/IN/from the/DT/the previous/JJ/previous two/CD/two chapters/NNS/chapters and/CC/and transform/NN/transform them/PRP/them into/IN/into methods/NNP/methods. this/DT/this transformation/NN/transformation is/VBZ/is purely/RB/purely mechanical/JJ/mechanical ;/:/; you/PRP/you can/MD/can do/VB/do it/PRP/it simply/RB/simply by/IN/by following/VBG/following a/DT/a sequence/NN/sequence of/IN/of steps/NNP/steps. if/IN/if you/PRP/you are/VBP/are comfortable/JJ/comfortable converting/VBG/converting from/IN/from one/CD/one form/NN/form to/TO/to another/DT/another /,/, you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to choose/VB/choose the/DT/the best/JJS/best form/NN/form for/IN/for whatever/RB/whatever you/PRP/you are/VBP/are doing/NNP/doing. 14.2/CD/14.2 printtime/NN/printtime in/IN/in chapter/NN/chapter 13/CD/13 /,/, we/PRP/we defined/VBD/defined a/DT/a class/NN/class named/VBN/named time/NN/time and/CC/and you/PRP/you wrote/VBD/wrote a/DT/a function/NN/function named/VBN/named printtime/NN/printtime /,/, which/WDT/which should/MD/should have/VB/have looked/VBN/looked something/NN/something like/IN/like this/DT/this /:/: class/NN/class time/NN/time /:/: pass/NN/pass def/NN/def printtime/NN/printtime /:/( time/NN/time /:/) /:/: print/NN/print str/NN/str /:/( time.hours/NNS/time.hours /VBP/) +/:/+ /:/: +/:/+ \/:/\ str/NN/str /:/( time.minutes/NNS/time.minutes /VBP/) +/:/+ /:/: +/:/+ \/:/\ str/NN/str /:/( time.seconds/NNS/time.seconds /VBP/) to/TO/to call/VB/call this/DT/this function/NN/function /,/, we/PRP/we passed/VBD/passed a/DT/a time/NN/time object/NN/object as/IN/as an/DT/an argument/NN/argument /:/: >/:/> >/:/> >/:/> currenttime/NN/currenttime =/:/= time/NN/time /:/( /:/) >/:/> >/:/> >/:/> currenttime.hours/NNS/currenttime.hours =/VBP/= 9/CD/9 >/CD/> >/CD/> >/CD/> currenttime.minutes/NNS/currenttime.minutes =/:/= 14/CD/14 >/CD/> >/CD/> >/CD/> currenttime.seconds/NNS/currenttime.seconds =/:/= 30/CD/30 >/CD/> >/CD/> >/CD/> printtime/NN/printtime /:/( currenttime/NN/currenttime /:/) to/TO/to make/VB/make printtime/JJ/printtime a/DT/a method/NN/method /,/, all/DT/all we/PRP/we have/VBP/have to/TO/to do/VB/do is/VBZ/is move/VB/move the/DT/the function/NN/function definition/NN/definition inside/NN/inside the/DT/the class/NN/class definition/NNP/definition. notice/NN/notice the/DT/the change/NN/change in/IN/in indentation/NNP/indentation. 14.3/CD/14.3 another/DT/another example/NN/example 147/CD/147 class/NN/class time/NN/time /:/: def/NN/def printtime/NN/printtime /:/( time/NN/time /:/) /:/: print/NN/print str/NN/str /:/( time.hours/NNS/time.hours /VBP/) +/:/+ /:/: +/:/+ \/:/\ str/NN/str /:/( time.minutes/NNS/time.minutes /VBP/) +/:/+ /:/: +/:/+ \/:/\ str/NN/str /:/( time.seconds/NNS/time.seconds /VBP/) now/RB/now we/PRP/we can/MD/can invoke/VB/invoke printtime/NN/printtime using/VBG/using dot/NN/dot notation/NNP/notation. >/NNP/> >/NNP/> >/NNP/> currenttime.printtime/NNP/currenttime.printtime /NNP/( /NNP/) as/IN/as usual/JJ/usual /,/, the/DT/the object/NN/object on/IN/on which/WDT/which the/DT/the method/NN/method is/VBZ/is invoked/VBN/invoked appears/NNS/appears before/IN/before the/DT/the dot/NN/dot and/CC/and the/DT/the name/NN/name of/IN/of the/DT/the method/NN/method appears/VBZ/appears after/IN/after the/DT/the dot/NNP/dot. the/DT/the object/NN/object on/IN/on which/WDT/which the/DT/the method/NN/method is/VBZ/is invoked/VBN/invoked is/VBZ/is assigned/VBN/assigned to/TO/to the/DT/the first/JJ/first parameter/NN/parameter /,/, so/RB/so in/IN/in this/DT/this case/NN/case currenttime/NN/currenttime is/VBZ/is assigned/VBN/assigned to/TO/to the/DT/the parameter/NN/parameter time/NNP/time. by/IN/by convention/NN/convention /,/, the/DT/the first/JJ/first parameter/NN/parameter of/IN/of a/DT/a method/NN/method is/VBZ/is called/VBN/called self/-NONE-/self. the/DT/the reason/NN/reason for/IN/for this/DT/this is/VBZ/is a/DT/a little/RB/little convoluted/VBN/convoluted /,/, but/CC/but it/PRP/it is/VBZ/is based/VBN/based on/IN/on a/DT/a useful/JJ/useful metaphor/NNP/metaphor. the/DT/the syntax/NN/syntax for/IN/for a/DT/a function/NN/function call/NN/call /,/, printtime/NN/printtime /:/( currenttime/NN/currenttime /:/) /,/, suggests/VBZ/suggests that/IN/that the/DT/the function/NN/function is/VBZ/is the/DT/the active/JJ/active agent/NNP/agent. it/PRP/it says/VBZ/says something/NN/something like/IN/like /,/, hey/PRP/hey printtime/VBP/printtime !/./! here/RB/here s/VBZ/s an/DT/an object/NN/object for/IN/for you/PRP/you to/TO/to print/NNP/print. in/IN/in object-oriented/JJ/object-oriented programming/NN/programming /,/, the/DT/the objects/NNS/objects are/VBP/are the/DT/the active/JJ/active agents/NNP/agents. an/DT/an invocation/NN/invocation like/IN/like currenttime.printtime/JJ/currenttime.printtime /NN/( /:/) says/VBZ/says hey/PRP/hey currenttime/RB/currenttime !/./! please/NN/please print/NN/print yourself/PRP/yourself !/./! this/DT/this change/NN/change in/IN/in perspective/JJ/perspective might/NN/might be/VB/be more/RBR/more polite/JJ/polite /,/, but/CC/but it/PRP/it is/VBZ/is not/RB/not obvious/JJ/obvious that/IN/that it/PRP/it is/VBZ/is useful/NNP/useful. in/IN/in the/DT/the examples/NNS/examples we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/RB/far /,/, it/PRP/it may/MD/may not/RB/not be/NNP/be. but/CC/but sometimes/RB/sometimes shifting/VBG/shifting responsibility/NN/responsibility from/IN/from the/DT/the functions/NNS/functions onto/IN/onto the/DT/the objects/NNS/objects makes/VBZ/makes it/PRP/it possible/JJ/possible to/TO/to write/VB/write more/JJR/more versatile/JJ/versatile functions/NNS/functions /,/, and/CC/and makes/VBZ/makes it/PRP/it easier/JJR/easier to/TO/to maintain/VB/maintain and/CC/and reuse/VB/reuse code/NNP/code. 14.3/CD/14.3 another/DT/another example/NN/example let/NN/let s/NNS/s convert/VBP/convert increment/NN/increment /:/( from/IN/from section/NN/section 13.3/CD/13.3 /CD/) to/TO/to a/DT/a method/NNP/method. to/TO/to save/VB/save space/NN/space /,/, we/PRP/we will/MD/will leave/VB/leave out/RP/out previously/RB/previously defined/VBN/defined methods/NNS/methods /,/, but/CC/but you/PRP/you should/MD/should keep/VB/keep them/PRP/them in/IN/in your/PRP$/your version/NN/version /:/: class/NN/class time/NN/time /:/: #/#/# previous/JJ/previous method/NN/method definitions/NNS/definitions here/NNP/here... def/NN/def increment/NN/increment /:/( self/NN/self /,/, seconds/NNS/seconds /:/) /:/: self.seconds/NNS/self.seconds =/VBP/= seconds/NNS/seconds +/:/+ self.seconds/NNS/self.seconds 148/CD/148 classes/NNS/classes and/CC/and methods/NNS/methods while/IN/while self.seconds/NNS/self.seconds >/:/> =/:/= 60/CD/60 /:/: self.seconds/NNS/self.seconds =/VBP/= self.seconds/NNS/self.seconds /:/- 60/CD/60 self.minutes/NNS/self.minutes =/:/= self.minutes/NNS/self.minutes +/VBP/+ 1/CD/1 while/IN/while self.minutes/NNS/self.minutes >/:/> =/:/= 60/CD/60 /:/: self.minutes/NNS/self.minutes =/VBP/= self.minutes/NNS/self.minutes /:/- 60/CD/60 self.hours/NNS/self.hours =/:/= self.hours/NNS/self.hours +/VBP/+ 1/CD/1 the/DT/the transformation/NN/transformation is/VBZ/is purely/RB/purely mechanical/JJ/mechanical we/PRP/we move/VBP/move the/DT/the method/NN/method definition/NN/definition into/IN/into the/DT/the class/NN/class definition/NN/definition and/CC/and change/NN/change the/DT/the name/NN/name of/IN/of the/DT/the first/JJ/first parameter/NNP/parameter. now/RB/now we/PRP/we can/MD/can invoke/VB/invoke increment/NN/increment as/IN/as a/DT/a method/NNP/method. currenttime.increment/NNP/currenttime.increment /NNP/( 500/CD/500 /CD/) again/RB/again /,/, the/DT/the object/NN/object on/IN/on which/WDT/which the/DT/the method/NN/method is/VBZ/is invoked/VBN/invoked gets/NNS/gets assigned/VBN/assigned to/TO/to the/DT/the first/JJ/first parameter/NN/parameter /,/, self/NNP/self. the/DT/the second/JJ/second parameter/NN/parameter /,/, seconds/NNS/seconds gets/VBZ/gets the/DT/the value/NN/value 500/CD/500. as/IN/as an/DT/an exercise/NN/exercise /,/, convert/NN/convert converttoseconds/NNS/converttoseconds /:/( from/IN/from section/NN/section 13.5/CD/13.5 /CD/) to/TO/to a/DT/a method/NN/method in/IN/in the/DT/the time/NN/time class/NNP/class. 14.4/CD/14.4 a/DT/a more/RBR/more complicated/JJ/complicated example/NN/example the/DT/the after/NN/after function/NN/function is/VBZ/is slightly/RB/slightly more/RBR/more complicated/JJ/complicated because/IN/because it/PRP/it operates/VBZ/operates on/IN/on two/CD/two time/NN/time objects/NNS/objects /,/, not/RB/not just/RB/just one/NNP/one. we/PRP/we can/MD/can only/RB/only convert/VB/convert one/CD/one of/IN/of the/DT/the parameters/NNS/parameters to/TO/to self/PRP/self ;/:/; the/DT/the other/JJ/other stays/NNS/stays the/DT/the same/JJ/same /:/: class/NN/class time/NN/time /:/: #/#/# previous/JJ/previous method/NN/method definitions/NNS/definitions here/NNP/here... def/NN/def after/IN/after /CD/( self/NN/self /,/, time2/NNP/time2 /NNP/) /:/: if/IN/if self.hour/JJ/self.hour >/NN/> time2.hour/JJ/time2.hour /:/: return/NN/return 1/CD/1 if/IN/if self.hour/JJ/self.hour </NN/< time2.hour/JJ/time2.hour /:/: return/NN/return 0/-NONE-/0 if/IN/if self.minute/JJ/self.minute >/NN/> time2.minute/JJ/time2.minute /:/: return/NN/return 1/CD/1 if/IN/if self.minute/JJ/self.minute </NN/< time2.minute/JJ/time2.minute /:/: return/NN/return 0/-NONE-/0 if/IN/if self.second/JJ/self.second >/NN/> time2.second/JJ/time2.second /:/: return/NN/return 1/CD/1 return/NN/return 0/-NONE-/0 14.5/CD/14.5 optional/JJ/optional arguments/NNS/arguments 149/CD/149 we/PRP/we invoke/VBP/invoke this/DT/this method/NN/method on/IN/on one/CD/one object/NN/object and/CC/and pass/NN/pass the/DT/the other/JJ/other as/IN/as an/DT/an argument/NN/argument /:/: if/IN/if donetime.after/JJ/donetime.after /NN/( currenttime/NN/currenttime /:/) /:/: print/NN/print the/DT/the bread/NN/bread is/VBZ/is not/RB/not done/VBN/done yet/NNP/yet. you/PRP/you can/MD/can almost/RB/almost read/VB/read the/DT/the invocation/NN/invocation like/IN/like english/JJ/english /:/: if/IN/if the/DT/the done-time/JJ/done-time is/VBZ/is after/IN/after the/DT/the current-time/JJ/current-time /,/, then/NNP/then... 14.5/CD/14.5 optional/JJ/optional arguments/NNS/arguments we/PRP/we have/VBP/have seen/VBN/seen built-in/-NONE-/built-in functions/NNS/functions that/IN/that take/NN/take a/DT/a variable/JJ/variable number/NN/number of/IN/of arguments/NNP/arguments. for/IN/for example/NN/example /,/, string.find/JJ/string.find can/MD/can take/VB/take two/CD/two /,/, three/CD/three /,/, or/CC/or four/CD/four arguments/NNP/arguments. it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to write/VB/write user-defined/JJ/user-defined functions/NNS/functions with/IN/with optional/JJ/optional argument/NN/argument lists/NNP/lists. for/IN/for example/NN/example /,/, we/PRP/we can/MD/can upgrade/VB/upgrade our/PRP$/our own/JJ/own version/NN/version of/IN/of find/NN/find to/TO/to do/VB/do the/DT/the same/JJ/same thing/NN/thing as/IN/as string.find/NNP/string.find. this/DT/this is/VBZ/is the/DT/the original/JJ/original version/NN/version from/IN/from section/NN/section 7.7/CD/7.7 /:/: def/NN/def find/IN/find /CD/( str/NN/str /,/, ch/NN/ch /:/) /:/: index/NN/index =/:/= 0/-NONE-/0 while/IN/while index/NN/index </:/< len/NN/len /:/( str/NN/str /:/) /:/: if/IN/if str/NN/str /:/[ index/NN/index /:/] =/:/= =/:/= ch/NN/ch /:/: return/NN/return index/NN/index index/NN/index =/:/= index/NN/index +/:/+ 1/CD/1 return/NN/return -1/-NONE-/-1 this/DT/this is/VBZ/is the/DT/the new/JJ/new and/CC/and improved/VBN/improved version/NN/version /:/: def/NN/def find/IN/find /CD/( str/NN/str /,/, ch/NN/ch /,/, start/NN/start =/:/= 0/-NONE-/0 /:/) /:/: index/NN/index =/:/= start/NN/start while/IN/while index/NN/index </:/< len/NN/len /:/( str/NN/str /:/) /:/: if/IN/if str/NN/str /:/[ index/NN/index /:/] =/:/= =/:/= ch/NN/ch /:/: return/NN/return index/NN/index index/NN/index =/:/= index/NN/index +/:/+ 1/CD/1 return/NN/return -1/-NONE-/-1 the/DT/the third/JJ/third parameter/NN/parameter /,/, start/NN/start /,/, is/VBZ/is optional/JJ/optional because/IN/because a/DT/a default/NN/default value/NN/value /,/, 0/-NONE-/0 /,/, is/VBZ/is provided/NNP/provided. if/IN/if we/PRP/we invoke/VBP/invoke find/VBP/find with/IN/with only/RB/only two/CD/two arguments/NNS/arguments /,/, it/PRP/it uses/VBZ/uses the/DT/the default/NN/default value/NN/value and/CC/and starts/VBZ/starts from/IN/from the/DT/the beginning/NN/beginning of/IN/of the/DT/the string/NN/string /:/: >/:/> >/:/> >/:/> find/NN/find /:/( apple/NN/apple /,/, p/NN/p /:/) 1/CD/1 if/IN/if we/PRP/we provide/VBP/provide a/DT/a third/JJ/third argument/NN/argument /,/, it/PRP/it overrides/VBZ/overrides the/DT/the default/NN/default /:/: 150/CD/150 classes/NNS/classes and/CC/and methods/NNS/methods >/:/> >/:/> >/:/> find/NN/find /:/( apple/NN/apple /,/, p/NN/p /,/, 2/CD/2 /:/) 2/CD/2 >/CD/> >/CD/> >/CD/> find/NN/find /:/( apple/NN/apple /,/, p/NN/p /,/, 3/CD/3 /:/) -1/-NONE-/-1 as/IN/as an/DT/an exercise/NN/exercise /,/, add/JJ/add a/DT/a fourth/JJ/fourth parameter/NN/parameter /,/, end/NN/end /,/, that/IN/that specifies/NNS/specifies where/WRB/where to/TO/to stop/VB/stop looking/NNP/looking. warning/NN/warning /:/: this/DT/this exercise/NN/exercise is/VBZ/is a/DT/a bit/NN/bit tricky/NNP/tricky. the/DT/the default/NN/default value/NN/value of/IN/of end/NN/end should/MD/should be/VB/be len/VBN/len /-NONE-/( str/NN/str /:/) /,/, but/CC/but that/IN/that doesn/NN/doesn t/NN/t work/NNP/work. the/DT/the default/NN/default values/NNS/values are/VBP/are evaluated/VBN/evaluated when/WRB/when the/DT/the function/NN/function is/VBZ/is defined/VBN/defined /,/, not/RB/not when/WRB/when it/PRP/it is/VBZ/is called/NNP/called. when/WRB/when find/JJ/find is/VBZ/is defined/VBN/defined /,/, str/NN/str doesn/NN/doesn t/NN/t exist/NN/exist yet/RB/yet /,/, so/RB/so you/PRP/you can/MD/can t/VB/t find/VB/find its/PRP$/its length/NNP/length. 14.6/CD/14.6 the/DT/the initialization/NN/initialization method/NN/method the/DT/the initialization/NN/initialization method/NN/method is/VBZ/is a/DT/a special/JJ/special method/NN/method that/WDT/that is/VBZ/is invoked/VBN/invoked when/WRB/when an/DT/an object/NN/object is/VBZ/is created/NNP/created. the/DT/the name/NN/name of/IN/of this/DT/this method/NN/method is/VBZ/is init/NN/init /:/( two/CD/two underscore/JJR/underscore characters/NNS/characters /,/, followed/VBD/followed by/IN/by init/NN/init /,/, and/CC/and then/RB/then two/CD/two more/JJR/more underscores/NNS/underscores /:/) /./. an/DT/an initialization/NN/initialization method/NN/method for/IN/for the/DT/the time/NN/time class/NN/class looks/NNS/looks like/IN/like this/DT/this /:/: class/NN/class time/NN/time /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /,/, hours/NNS/hours =/:/= 0/-NONE-/0 /,/, minutes/VBZ/minutes =/:/= 0/-NONE-/0 /,/, seconds/NNS/seconds =/:/= 0/-NONE-/0 /:/) /:/: self.hours/NNS/self.hours =/VBP/= hours/NNS/hours self.minutes/NNS/self.minutes =/VBP/= minutes/NNS/minutes self.seconds/NNS/self.seconds =/VBP/= seconds/NNS/seconds there/RB/there is/VBZ/is no/DT/no conflict/NN/conflict between/IN/between the/DT/the attribute/NN/attribute self.hours/NNS/self.hours and/CC/and the/DT/the parameter/NN/parameter hours/NNP/hours. dot/NN/dot notation/NN/notation specifies/NNS/specifies which/WDT/which variable/JJ/variable we/PRP/we are/VBP/are referring/VBG/referring to/NNP/to. when/WRB/when we/PRP/we invoke/VBP/invoke the/DT/the time/NN/time constructor/NN/constructor /,/, the/DT/the arguments/NNS/arguments we/PRP/we provide/VBP/provide are/VBP/are passed/VBN/passed along/IN/along to/TO/to init/VB/init /:/: >/:/> >/:/> >/:/> currenttime/NN/currenttime =/:/= time/NN/time /:/( 9/CD/9 /,/, 14/CD/14 /,/, 30/CD/30 /:/) >/CD/> >/CD/> >/CD/> currenttime.printtime/JJ/currenttime.printtime /NN/( /:/) 9/CD/9 /:/: 14/CD/14 /:/: 30/CD/30 because/IN/because the/DT/the arguments/NNS/arguments are/VBP/are optional/JJ/optional /,/, we/PRP/we can/MD/can omit/VB/omit them/PRP/them /:/: >/:/> >/:/> >/:/> currenttime/NN/currenttime =/:/= time/NN/time /:/( /:/) >/:/> >/:/> >/:/> currenttime.printtime/JJ/currenttime.printtime /NN/( /:/) 0/-NONE-/0 /:/: 0/-NONE-/0 /:/: 0/-NONE-/0 or/CC/or provide/VB/provide only/JJ/only the/DT/the first/JJ/first /:/: 14.7/CD/14.7 points/NNS/points revisited/VBN/revisited 151/CD/151 >/CD/> >/CD/> >/CD/> currenttime/NN/currenttime =/:/= time/NN/time /:/( 9/CD/9 /CD/) >/CD/> >/CD/> >/CD/> currenttime.printtime/JJ/currenttime.printtime /NN/( /:/) 9/CD/9 /:/: 0/-NONE-/0 /:/: 0/-NONE-/0 or/CC/or the/DT/the first/JJ/first two/CD/two /:/: >/:/> >/:/> >/:/> currenttime/NN/currenttime =/:/= time/NN/time /:/( 9/CD/9 /,/, 14/CD/14 /:/) >/CD/> >/CD/> >/CD/> currenttime.printtime/JJ/currenttime.printtime /NN/( /:/) 9/CD/9 /:/: 14/CD/14 /:/: 0/-NONE-/0 finally/RB/finally /,/, we/PRP/we can/MD/can make/VB/make assignments/NNS/assignments to/TO/to a/DT/a subset/NN/subset of/IN/of the/DT/the parameters/NNS/parameters by/IN/by naming/VBG/naming them/PRP/them explicitly/RB/explicitly /:/: >/:/> >/:/> >/:/> currenttime/NN/currenttime =/:/= time/NN/time /:/( seconds/NNS/seconds =/VBP/= 30/CD/30 /,/, hours/NNS/hours =/:/= 9/CD/9 /CD/) >/CD/> >/CD/> >/CD/> currenttime.printtime/JJ/currenttime.printtime /NN/( /:/) 9/CD/9 /:/: 0/-NONE-/0 /:/: 30/CD/30 14.7/CD/14.7 points/NNS/points revisited/VBN/revisited let/NN/let s/NNS/s rewrite/VBP/rewrite the/DT/the point/NN/point class/NN/class from/IN/from section/NN/section 12.1/CD/12.1 in/IN/in a/DT/a more/RBR/more object-oriented/JJ/object-oriented style/NN/style /:/: class/NN/class point/NN/point /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /,/, x/NN/x =/:/= 0/-NONE-/0 /,/, y/NN/y =/:/= 0/-NONE-/0 /:/) /:/: self.x/JJ/self.x =/NN/= x/NN/x self.y/NN/self.y =/:/= y/NN/y def/NN/def __str__/NNP/__str__ /NNP/( self/NN/self /:/) /:/: return/NN/return /:/( +/:/+ str/NN/str /:/( self.x/JJ/self.x /NN/) +/:/+ /,/, +/:/+ str/NN/str /:/( self.y/JJ/self.y /NN/) +/:/+ /:/) the/DT/the initialization/NN/initialization method/NN/method takes/VBZ/takes x/NN/x and/CC/and y/NN/y values/NNS/values as/IN/as optional/JJ/optional parameters/NNS/parameters ;/:/; the/DT/the default/NN/default for/IN/for either/DT/either parameter/NN/parameter is/VBZ/is 0/CD/0. the/DT/the next/JJ/next method/NN/method /,/, str/NN/str /,/, returns/NNS/returns a/DT/a string/VBG/string representation/NN/representation of/IN/of a/DT/a point/NN/point object/NNP/object. if/IN/if a/DT/a class/NN/class provides/VBZ/provides a/DT/a method/NN/method named/VBN/named str/NN/str /,/, it/PRP/it overrides/VBZ/overrides the/DT/the default/NN/default behavior/NN/behavior of/IN/of the/DT/the python/NN/python built-in/NN/built-in str/NN/str function/NNP/function. >/NNP/> >/NNP/> >/NNP/> p/NN/p =/:/= point/NN/point /:/( 3/CD/3 /,/, 4/CD/4 /:/) >/CD/> >/CD/> >/CD/> str/NN/str /:/( p/NN/p /:/) /:/( 3/CD/3 /,/, 4/CD/4 /:/) printing/VBG/printing a/DT/a point/NN/point object/NN/object implicitly/RB/implicitly invokes/VBZ/invokes str/NN/str on/IN/on the/DT/the object/NN/object /,/, so/RB/so defining/VBG/defining str/NN/str also/RB/also changes/VBZ/changes the/DT/the behavior/NN/behavior of/IN/of print/NN/print /:/: >/:/> >/:/> >/:/> p/NN/p =/:/= point/NN/point /:/( 3/CD/3 /,/, 4/CD/4 /:/) >/CD/> >/CD/> >/CD/> print/NN/print p/NN/p /:/( 3/CD/3 /,/, 4/CD/4 /:/) 152/CD/152 classes/NNS/classes and/CC/and methods/NNS/methods when/WRB/when we/PRP/we write/VBP/write a/DT/a new/JJ/new class/NN/class /,/, we/PRP/we almost/RB/almost always/RB/always start/VB/start by/IN/by writing/NN/writing init/NN/init /,/, which/WDT/which makes/VBZ/makes it/PRP/it easier/JJR/easier to/TO/to instantiate/VB/instantiate objects/NNS/objects /,/, and/CC/and str/NN/str /,/, which/WDT/which is/VBZ/is almost/RB/almost always/RB/always useful/JJ/useful for/IN/for debugging/NNP/debugging. 14.8/CD/14.8 operator/NN/operator overloading/VBG/overloading some/DT/some languages/NNS/languages make/VBP/make it/PRP/it possible/JJ/possible to/TO/to change/VB/change the/DT/the definition/NN/definition of/IN/of the/DT/the built-in/JJ/built-in operators/NNS/operators when/WRB/when they/PRP/they are/VBP/are applied/VBN/applied to/TO/to user-defined/JJ/user-defined types/NNP/types. this/DT/this feature/NN/feature is/VBZ/is called/VBN/called operator/NN/operator overloading/NNP/overloading. it/PRP/it is/VBZ/is especially/RB/especially useful/JJ/useful when/WRB/when defining/VBG/defining new/JJ/new mathematical/JJ/mathematical types/NNP/types. for/IN/for example/NN/example /,/, to/TO/to override/VB/override the/DT/the addition/NN/addition operator/NN/operator +/:/+ /,/, we/PRP/we provide/VBP/provide a/DT/a method/NN/method named/VBN/named add/NN/add /:/: class/NN/class point/NN/point /:/: #/#/# previously/RB/previously defined/VBN/defined methods/NNS/methods here/NNP/here... def/NN/def __add__/NNP/__add__ /NNP/( self/NN/self /,/, other/JJ/other /NN/) /:/: return/NN/return point/NN/point /:/( self.x/JJ/self.x +/NN/+ other.x/NN/other.x /,/, self.y/JJ/self.y +/NN/+ other.y/JJ/other.y /NN/) as/IN/as usual/JJ/usual /,/, the/DT/the first/JJ/first parameter/NN/parameter is/VBZ/is the/DT/the object/NN/object on/IN/on which/WDT/which the/DT/the method/NN/method is/VBZ/is invoked/NNP/invoked. the/DT/the second/JJ/second parameter/NN/parameter is/VBZ/is conveniently/RB/conveniently named/VBN/named other/JJ/other to/TO/to distinguish/VB/distinguish it/PRP/it from/IN/from self/NNP/self. to/TO/to add/VB/add two/CD/two points/NNS/points /,/, we/PRP/we create/VBP/create and/CC/and return/NN/return a/DT/a new/JJ/new point/NN/point that/WDT/that contains/VBZ/contains the/DT/the sum/NN/sum of/IN/of the/DT/the x/NN/x coordinates/VBZ/coordinates and/CC/and the/DT/the sum/NN/sum of/IN/of the/DT/the y/NN/y coordinates/NNP/coordinates. now/RB/now /,/, when/WRB/when we/PRP/we apply/RB/apply the/DT/the +/NN/+ operator/NN/operator to/TO/to point/NN/point objects/NNS/objects /,/, python/NN/python invokes/VBZ/invokes add/JJ/add /:/: >/:/> >/:/> >/:/> p1/NNP/p1 =/:/= point/NN/point /:/( 3/CD/3 /,/, 4/CD/4 /:/) >/CD/> >/CD/> >/CD/> p2/NNP/p2 =/NNP/= point/NN/point /:/( 5/CD/5 /,/, 7/CD/7 /:/) >/CD/> >/CD/> >/CD/> p3/NNP/p3 =/NNP/= p1/NNP/p1 +/NNP/+ p2/NNP/p2 >/NNP/> >/NNP/> >/NNP/> print/NN/print p3/NNP/p3 /NNP/( 8/CD/8 /,/, 11/CD/11 /:/) the/DT/the expression/NN/expression p1/NNP/p1 +/NNP/+ p2/NNP/p2 is/VBZ/is equivalent/NN/equivalent to/TO/to p1/NNP/p1. add/NN/add /:/( p2/NNP/p2 /:/) /,/, but/CC/but obviously/RB/obviously more/RBR/more elegant/NNP/elegant. as/IN/as an/DT/an exercise/NN/exercise /,/, add/JJ/add a/DT/a method/NN/method sub/NN/sub /:/( self/NN/self /,/, other/JJ/other /NN/) that/IN/that overloads/NNS/overloads the/DT/the subtraction/NN/subtraction operator/NN/operator /,/, and/CC/and try/NN/try it/PRP/it out/NNP/out. there/RB/there are/VBP/are several/JJ/several ways/NNS/ways to/TO/to override/VB/override the/DT/the behavior/NN/behavior of/IN/of the/DT/the multiplication/NN/multiplication operator/NN/operator /:/: by/IN/by defining/NN/defining a/DT/a method/NN/method named/VBN/named mul/NN/mul /,/, or/CC/or rmul/JJ/rmul /,/, or/CC/or both/NNP/both. if/IN/if the/DT/the left/NN/left operand/NN/operand of/IN/of is/VBZ/is a/DT/a point/NN/point /,/, python/NN/python invokes/VBZ/invokes mul/JJ/mul /,/, which/WDT/which assumes/VBZ/assumes that/IN/that the/DT/the other/JJ/other operand/NN/operand is/VBZ/is also/RB/also a/DT/a point/NNP/point. it/PRP/it computes/VBZ/computes the/DT/the dot/NN/dot product/NN/product of/IN/of the/DT/the two/CD/two points/NNS/points /,/, defined/VBN/defined according/VBG/according to/TO/to the/DT/the rules/NNS/rules of/IN/of linear/JJ/linear algebra/NN/algebra /:/: 14.9/CD/14.9 polymorphism/NN/polymorphism 153/CD/153 def/NN/def __mul__/NNP/__mul__ /NNP/( self/NN/self /,/, other/JJ/other /NN/) /:/: return/NN/return self.x/NN/self.x other.x/NN/other.x +/:/+ self.y/JJ/self.y other.y/JJ/other.y if/IN/if the/DT/the left/NN/left operand/NN/operand of/IN/of is/VBZ/is a/DT/a primitive/JJ/primitive type/NN/type and/CC/and the/DT/the right/NN/right operand/NN/operand is/VBZ/is a/DT/a point/NN/point /,/, python/NN/python invokes/VBZ/invokes rmul/JJ/rmul /,/, which/WDT/which performs/NNS/performs scalar/VBP/scalar multiplication/NN/multiplication /:/: def/NN/def __rmul__/NNP/__rmul__ /NNP/( self/NN/self /,/, other/JJ/other /NN/) /:/: return/NN/return point/NN/point /:/( other/JJ/other self.x/JJ/self.x /,/, other/JJ/other self.y/JJ/self.y /NN/) the/DT/the result/NN/result is/VBZ/is a/DT/a new/JJ/new point/NN/point whose/WP$/whose coordinates/NNS/coordinates are/VBP/are a/DT/a multiple/NN/multiple of/IN/of the/DT/the original/JJ/original coordinates/NNP/coordinates. if/IN/if other/JJ/other is/VBZ/is a/DT/a type/NN/type that/WDT/that can/MD/can not/RB/not be/VB/be multiplied/VBN/multiplied by/IN/by a/DT/a floating-point/JJ/floating-point number/NN/number /,/, then/RB/then rmul/JJ/rmul will/MD/will yield/VB/yield an/DT/an error/NNP/error. this/DT/this example/NN/example demonstrates/VBZ/demonstrates both/DT/both kinds/NNS/kinds of/IN/of multiplication/NN/multiplication /:/: >/:/> >/:/> >/:/> p1/NNP/p1 =/:/= point/NN/point /:/( 3/CD/3 /,/, 4/CD/4 /:/) >/CD/> >/CD/> >/CD/> p2/NNP/p2 =/NNP/= point/NN/point /:/( 5/CD/5 /,/, 7/CD/7 /:/) >/CD/> >/CD/> >/CD/> print/NN/print p1/NNP/p1 p2/NNP/p2 43/CD/43 >/CD/> >/CD/> >/CD/> print/NN/print 2/CD/2 p2/NNP/p2 /NNP/( 10/CD/10 /,/, 14/CD/14 /:/) what/WP/what happens/NNS/happens if/IN/if we/PRP/we try/VBP/try to/TO/to evaluate/VB/evaluate p2/NNP/p2 2/CD/2 since/IN/since the/DT/the first/JJ/first operand/NN/operand is/VBZ/is a/DT/a point/NN/point /,/, python/NN/python invokes/VBZ/invokes mul/JJ/mul with/IN/with 2/CD/2 as/IN/as the/DT/the second/JJ/second argument/NNP/argument. inside/NN/inside mul/NN/mul /,/, the/DT/the program/NN/program tries/NNS/tries to/TO/to access/NN/access the/DT/the x/NN/x coordinate/NN/coordinate of/IN/of other/JJ/other /,/, which/WDT/which fails/NNS/fails because/IN/because an/DT/an integer/NN/integer has/VBZ/has no/DT/no attributes/NNS/attributes /:/: >/:/> >/:/> >/:/> print/NN/print p2/NNP/p2 2/CD/2 attributeerror/NN/attributeerror /:/: int/NN/int object/NN/object has/VBZ/has no/DT/no attribute/NN/attribute x/NN/x unfortunately/RB/unfortunately /,/, the/DT/the error/NN/error message/NN/message is/VBZ/is a/DT/a bit/NN/bit opaque/NNP/opaque. this/DT/this example/NN/example demonstrates/VBZ/demonstrates some/DT/some of/IN/of the/DT/the difficulties/NNS/difficulties of/IN/of object-oriented/JJ/object-oriented programming/NNP/programming. sometimes/RB/sometimes it/PRP/it is/VBZ/is hard/RB/hard enough/RB/enough just/RB/just to/TO/to figure/VB/figure out/RP/out what/WP/what code/NN/code is/VBZ/is running/NNP/running. for/IN/for a/DT/a more/RBR/more complete/JJ/complete example/NN/example of/IN/of operator/NN/operator overloading/VBG/overloading /,/, see/VB/see appendix/NN/appendix b/NNP/b. 14.9/CD/14.9 polymorphism/NN/polymorphism most/JJS/most of/IN/of the/DT/the methods/NNS/methods we/PRP/we have/VBP/have written/VBN/written only/RB/only work/VB/work for/IN/for a/DT/a specific/JJ/specific type/NNP/type. when/WRB/when you/PRP/you create/VBP/create a/DT/a new/JJ/new object/NN/object /,/, you/PRP/you write/VBP/write methods/NNS/methods that/IN/that operate/JJ/operate on/IN/on that/DT/that type/NNP/type. but/CC/but there/EX/there are/VBP/are certain/JJ/certain operations/NNS/operations that/WDT/that you/PRP/you will/MD/will want/VB/want to/TO/to apply/VB/apply to/TO/to many/JJ/many types/NNS/types /,/, such/JJ/such as/IN/as the/DT/the arithmetic/JJ/arithmetic operations/NNS/operations in/IN/in the/DT/the previous/JJ/previous sections/NNP/sections. if/IN/if many/JJ/many types/NNS/types support/NN/support the/DT/the same/JJ/same set/NN/set of/IN/of operations/NNS/operations /,/, you/PRP/you can/MD/can write/VB/write functions/NNS/functions that/IN/that work/NN/work on/IN/on any/DT/any of/IN/of those/DT/those types/NNP/types. 154/CD/154 classes/NNS/classes and/CC/and methods/NNS/methods for/IN/for example/NN/example /,/, the/DT/the multadd/NN/multadd operation/NN/operation /:/( which/WDT/which is/VBZ/is common/JJ/common in/IN/in linear/JJ/linear algebra/NN/algebra /:/) takes/VBZ/takes three/CD/three arguments/NNS/arguments ;/:/; it/PRP/it multiplies/VBZ/multiplies the/DT/the first/JJ/first two/CD/two and/CC/and then/RB/then adds/VBZ/adds the/DT/the third/NNP/third. we/PRP/we can/MD/can write/VB/write it/PRP/it in/IN/in python/NN/python like/IN/like this/DT/this /:/: def/NN/def multadd/NN/multadd /:/( x/NN/x /,/, y/NN/y /,/, z/NN/z /:/) /:/: return/NN/return x/NN/x y/NN/y +/:/+ z/NN/z this/DT/this method/NN/method will/MD/will work/VB/work for/IN/for any/DT/any values/NNS/values of/IN/of x/NN/x and/CC/and y/NN/y that/IN/that can/MD/can be/VB/be multiplied/VBN/multiplied and/CC/and for/IN/for any/DT/any value/NN/value of/IN/of z/NN/z that/IN/that can/MD/can be/VB/be added/VBN/added to/TO/to the/DT/the product/NNP/product. we/PRP/we can/MD/can invoke/VB/invoke it/PRP/it with/IN/with numeric/JJ/numeric values/NNS/values /:/: >/:/> >/:/> >/:/> multadd/NN/multadd /:/( 3/CD/3 /,/, 2/CD/2 /,/, 1/CD/1 /:/) 7/CD/7 or/CC/or with/IN/with points/NNS/points /:/: >/:/> >/:/> >/:/> p1/NNP/p1 =/:/= point/NN/point /:/( 3/CD/3 /,/, 4/CD/4 /:/) >/CD/> >/CD/> >/CD/> p2/NNP/p2 =/NNP/= point/NN/point /:/( 5/CD/5 /,/, 7/CD/7 /:/) >/CD/> >/CD/> >/CD/> print/NN/print multadd/NN/multadd /:/( 2/CD/2 /,/, p1/NNP/p1 /,/, p2/NNP/p2 /NNP/) /NNP/( 11/CD/11 /,/, 15/CD/15 /:/) >/CD/> >/CD/> >/CD/> print/NN/print multadd/NN/multadd /:/( p1/NNP/p1 /,/, p2/NNP/p2 /,/, 1/CD/1 /:/) 44/CD/44 in/IN/in the/DT/the first/JJ/first case/NN/case /,/, the/DT/the point/NN/point is/VBZ/is multiplied/VBN/multiplied by/IN/by a/DT/a scalar/JJ/scalar and/CC/and then/RB/then added/VBD/added to/TO/to another/DT/another point/NNP/point. in/IN/in the/DT/the second/JJ/second case/NN/case /,/, the/DT/the dot/NN/dot product/NN/product yields/NNS/yields a/DT/a numeric/JJ/numeric value/NN/value /,/, so/RB/so the/DT/the third/JJ/third argument/NN/argument also/RB/also has/VBZ/has to/TO/to be/VB/be a/DT/a numeric/JJ/numeric value/NNP/value. a/DT/a function/NN/function like/IN/like this/DT/this that/IN/that can/MD/can take/VB/take arguments/NNS/arguments with/IN/with different/JJ/different types/NNS/types is/VBZ/is called/VBN/called polymorphic/-NONE-/polymorphic. as/IN/as another/DT/another example/NN/example /,/, consider/NN/consider the/DT/the method/NN/method frontandback/NN/frontandback /,/, which/WDT/which prints/NNS/prints a/DT/a list/NN/list twice/NN/twice /,/, forward/RB/forward and/CC/and backward/NN/backward /:/: def/NN/def frontandback/NN/frontandback /:/( front/NN/front /:/) /:/: import/NN/import copy/NN/copy back/RB/back =/./= copy.copy/JJ/copy.copy /NN/( front/NN/front /:/) back.reverse/JJ/back.reverse /NN/( /:/) print/NN/print str/NN/str /:/( front/NN/front /:/) +/:/+ str/NN/str /:/( back/RB/back /:/) because/IN/because the/DT/the reverse/NN/reverse method/NN/method is/VBZ/is a/DT/a modifier/NN/modifier /,/, we/PRP/we make/VBP/make a/DT/a copy/NN/copy of/IN/of the/DT/the list/NN/list before/IN/before reversing/VBG/reversing it/NNP/it. that/IN/that way/NN/way /,/, this/DT/this method/NN/method doesn/NN/doesn t/NN/t modify/NN/modify the/DT/the list/NN/list it/PRP/it gets/VBZ/gets as/IN/as an/DT/an argument/NNP/argument. here/RB/here s/VBZ/s an/DT/an example/NN/example that/IN/that applies/NNS/applies frontandback/VBP/frontandback to/TO/to a/DT/a list/NN/list /:/: >/:/> >/:/> >/:/> mylist/NN/mylist =/:/= /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /:/] >/CD/> >/CD/> >/CD/> frontandback/NN/frontandback /:/( mylist/NN/mylist /:/) /:/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /,/, 4/CD/4 /:/] /CD/[ 4/CD/4 /,/, 3/CD/3 /,/, 2/CD/2 /,/, 1/CD/1 /:/] 14.10/CD/14.10 glossary/JJ/glossary 155/CD/155 of/IN/of course/NN/course /,/, we/PRP/we intended/VBD/intended to/TO/to apply/VB/apply this/DT/this function/NN/function to/TO/to lists/NNS/lists /,/, so/RB/so it/PRP/it is/VBZ/is not/RB/not surprising/JJ/surprising that/IN/that it/PRP/it works/NNP/works. what/WP/what would/MD/would be/VB/be surprising/JJ/surprising is/VBZ/is if/IN/if we/PRP/we could/MD/could apply/VB/apply it/PRP/it to/TO/to a/DT/a point/NNP/point. to/TO/to determine/VB/determine whether/IN/whether a/DT/a function/NN/function can/MD/can be/VB/be applied/VBN/applied to/TO/to a/DT/a new/JJ/new type/NN/type /,/, we/PRP/we apply/RB/apply the/DT/the fundamental/JJ/fundamental rule/NN/rule of/IN/of polymorphism/NN/polymorphism /:/: if/IN/if all/DT/all of/IN/of the/DT/the operations/NNS/operations inside/VBP/inside the/DT/the function/NN/function can/MD/can be/VB/be applied/VBN/applied to/TO/to the/DT/the type/NN/type /,/, the/DT/the function/NN/function can/MD/can be/VB/be applied/VBN/applied to/TO/to the/DT/the type/NNP/type. the/DT/the operations/NNS/operations in/IN/in the/DT/the method/NN/method include/NN/include copy/NN/copy /,/, reverse/NN/reverse /,/, and/CC/and print/NNP/print. copy/NN/copy works/NNS/works on/IN/on any/DT/any object/NN/object /,/, and/CC/and we/PRP/we have/VBP/have already/RB/already written/VBN/written a/DT/a str/NN/str method/NN/method for/IN/for points/NNS/points /,/, so/RB/so all/DT/all we/PRP/we need/VBP/need is/VBZ/is a/DT/a reverse/NN/reverse method/NN/method in/IN/in the/DT/the point/NN/point class/NN/class /:/: def/NN/def reverse/NN/reverse /:/( self/NN/self /:/) /:/: self.x/JJ/self.x /,/, self.y/JJ/self.y =/NN/= self.y/JJ/self.y /,/, self.x/JJ/self.x then/RB/then we/PRP/we can/MD/can pass/VB/pass points/NNS/points to/TO/to frontandback/VB/frontandback /:/: >/:/> >/:/> >/:/> p/NN/p =/:/= point/NN/point /:/( 3/CD/3 /,/, 4/CD/4 /:/) >/CD/> >/CD/> >/CD/> frontandback/NN/frontandback /:/( p/NN/p /:/) /:/( 3/CD/3 /,/, 4/CD/4 /:/) /CD/( 4/CD/4 /,/, 3/CD/3 /:/) the/DT/the best/JJS/best kind/NN/kind of/IN/of polymorphism/NN/polymorphism is/VBZ/is the/DT/the unintentional/JJ/unintentional kind/NN/kind /,/, where/WRB/where you/PRP/you discover/VBP/discover that/IN/that a/DT/a function/NN/function you/PRP/you have/VB/have already/RB/already written/VBN/written can/MD/can be/VB/be applied/VBN/applied to/TO/to a/DT/a type/NN/type for/IN/for which/WDT/which you/PRP/you never/RB/never planned/NNP/planned. 14.10/CD/14.10 glossary/JJ/glossary object-oriented/JJ/object-oriented language/NN/language /:/: a/DT/a language/NN/language that/WDT/that provides/VBZ/provides features/NNS/features /,/, such/JJ/such as/IN/as userdefined/VBN/userdefined classes/NNS/classes and/CC/and inheritance/NN/inheritance /,/, that/IN/that facilitate/JJ/facilitate object-oriented/JJ/object-oriented programming/NNP/programming. object-oriented/JJ/object-oriented programming/NN/programming /:/: a/DT/a style/NN/style of/IN/of programming/NN/programming in/IN/in which/WDT/which data/NNS/data and/CC/and the/DT/the operations/NNS/operations that/IN/that manipulate/JJ/manipulate it/PRP/it are/VBP/are organized/VBN/organized into/IN/into classes/NNS/classes and/CC/and methods/NNP/methods. method/NN/method /:/: a/DT/a function/NN/function that/WDT/that is/VBZ/is defined/VBN/defined inside/NN/inside a/DT/a class/NN/class definition/NN/definition and/CC/and is/VBZ/is invoked/VBN/invoked on/IN/on instances/NNS/instances of/IN/of that/DT/that class/NNP/class. override/NN/override /:/: to/TO/to replace/VB/replace a/DT/a default/NNP/default. examples/VBZ/examples include/NN/include replacing/VBG/replacing a/DT/a default/NN/default value/NN/value with/IN/with a/DT/a particular/JJ/particular argument/NN/argument and/CC/and replacing/VBG/replacing a/DT/a default/NN/default method/NN/method by/IN/by providing/NN/providing a/DT/a new/JJ/new method/NN/method with/IN/with the/DT/the same/JJ/same name/NNP/name. initialization/NN/initialization method/NN/method /:/: a/DT/a special/JJ/special method/NN/method that/WDT/that is/VBZ/is invoked/VBN/invoked automatically/RB/automatically when/WRB/when a/DT/a new/JJ/new object/NN/object is/VBZ/is created/VBN/created and/CC/and that/IN/that initializes/NNS/initializes the/DT/the object/NN/object s/VBZ/s attributes/NNP/attributes. 156/CD/156 classes/NNS/classes and/CC/and methods/NNS/methods operator/NN/operator overloading/VBG/overloading /:/: extending/VBG/extending built-in/JJ/built-in operators/NNS/operators /:/( +/:/+ /,/, /:/- /,/, /,/, >/:/> /,/, >/:/> >/:/> card1/NNP/card1 =/:/= card/NN/card /:/( 1/CD/1 /,/, 11/CD/11 /:/) >/CD/> >/CD/> >/CD/> print/NN/print card1/NNP/card1 jack/NN/jack of/IN/of diamonds/NNS/diamonds class/NN/class attributes/NNS/attributes like/IN/like suitlist/NN/suitlist are/VBP/are shared/VBN/shared by/IN/by all/DT/all card/NN/card objects/NNP/objects. the/DT/the advantage/NN/advantage of/IN/of this/DT/this is/VBZ/is that/IN/that we/PRP/we can/MD/can use/VB/use any/DT/any card/NN/card object/NN/object to/TO/to access/NN/access the/DT/the class/NN/class attributes/VBZ/attributes /:/: >/:/> >/:/> >/:/> card2/NNP/card2 =/:/= card/NN/card /:/( 1/CD/1 /,/, 3/CD/3 /:/) >/CD/> >/CD/> >/CD/> print/NN/print card2/NNP/card2 3/CD/3 of/IN/of diamonds/NNS/diamonds >/:/> >/:/> >/:/> print/NN/print card2.suitlist/JJ/card2.suitlist /NN/[ 1/CD/1 /CD/] diamonds/NNS/diamonds 160/CD/160 sets/NNS/sets of/IN/of objects/NNS/objects the/DT/the disadvantage/NN/disadvantage is/VBZ/is that/IN/that if/IN/if we/PRP/we modify/VBP/modify a/DT/a class/NN/class attribute/NN/attribute /,/, it/PRP/it affects/VBZ/affects every/DT/every instance/NN/instance of/IN/of the/DT/the class/NNP/class. for/IN/for example/NN/example /,/, if/IN/if we/PRP/we decide/VBP/decide that/IN/that jack/NN/jack of/IN/of diamonds/NNS/diamonds should/MD/should really/RB/really be/VB/be called/VBN/called jack/NN/jack of/IN/of swirly/RB/swirly whales/VBZ/whales /,/, we/PRP/we could/MD/could do/VB/do this/DT/this /:/: >/:/> >/:/> >/:/> card1.suitlist/JJ/card1.suitlist /NN/[ 1/CD/1 /CD/] =/CD/= swirly/RB/swirly whales/VBZ/whales >/:/> >/:/> >/:/> print/NN/print card1/NNP/card1 jack/NN/jack of/IN/of swirly/RB/swirly whales/VBZ/whales the/DT/the problem/NN/problem is/VBZ/is that/IN/that all/DT/all of/IN/of the/DT/the diamonds/NNS/diamonds just/RB/just became/VBD/became swirly/RB/swirly whales/NNS/whales /:/: >/:/> >/:/> >/:/> print/NN/print card2/NNP/card2 3/CD/3 of/IN/of swirly/JJ/swirly whales/NNS/whales it/PRP/it is/VBZ/is usually/RB/usually not/RB/not a/DT/a good/JJ/good idea/NN/idea to/TO/to modify/VB/modify class/NN/class attributes/NNP/attributes. 15.4/CD/15.4 comparing/VBG/comparing cards/NNS/cards for/IN/for primitive/JJ/primitive types/NNS/types /,/, there/EX/there are/VBP/are conditional/JJ/conditional operators/NNS/operators /:/( /,/, =/:/= =/:/= /,/, etc/NNP/etc. /NNP/) that/IN/that compare/NN/compare values/NNS/values and/CC/and determine/NN/determine when/WRB/when one/CD/one is/VBZ/is greater/JJR/greater than/IN/than /,/, less/JJR/less than/IN/than /,/, or/CC/or equal/JJ/equal to/TO/to another/NNP/another. for/IN/for user-defined/JJ/user-defined types/NNS/types /,/, we/PRP/we can/MD/can override/VB/override the/DT/the behavior/NN/behavior of/IN/of the/DT/the built-in/JJ/built-in operators/NNS/operators by/IN/by providing/VBG/providing a/DT/a method/NN/method named/VBN/named cmp/NN/cmp /./. by/IN/by convention/NN/convention /,/, cmp/NN/cmp has/VBZ/has two/CD/two parameters/NNS/parameters /,/, self/NN/self and/CC/and other/JJ/other /,/, and/CC/and returns/NNS/returns 1/CD/1 if/IN/if the/DT/the first/JJ/first object/NN/object is/VBZ/is greater/JJR/greater /,/, -1/-NONE-/-1 if/IN/if the/DT/the second/JJ/second object/NN/object is/VBZ/is greater/JJR/greater /,/, and/CC/and 0/-NONE-/0 if/IN/if they/PRP/they are/VBP/are equal/JJ/equal to/TO/to each/DT/each other/NNP/other. some/DT/some types/NNS/types are/VBP/are completely/RB/completely ordered/VBN/ordered /,/, which/WDT/which means/VBZ/means that/DT/that you/PRP/you can/MD/can compare/VB/compare any/DT/any two/CD/two elements/NNS/elements and/CC/and tell/NN/tell which/WDT/which is/VBZ/is bigger/NNP/bigger. for/IN/for example/NN/example /,/, the/DT/the integers/NNS/integers and/CC/and the/DT/the floatingpoint/NN/floatingpoint numbers/NNS/numbers are/VBP/are completely/RB/completely ordered/NNP/ordered. some/DT/some sets/NNS/sets are/VBP/are unordered/VBN/unordered /,/, which/WDT/which means/VBZ/means that/DT/that there/EX/there is/VBZ/is no/DT/no meaningful/JJ/meaningful way/NN/way to/TO/to say/VB/say that/IN/that one/CD/one element/NN/element is/VBZ/is bigger/JJR/bigger than/IN/than another/NNP/another. for/IN/for example/NN/example /,/, the/DT/the fruits/NNS/fruits are/VBP/are unordered/VBN/unordered /,/, which/WDT/which is/VBZ/is why/WRB/why you/PRP/you can/MD/can not/RB/not compare/VB/compare apples/NNS/apples and/CC/and oranges/NNP/oranges. the/DT/the set/NN/set of/IN/of playing/NN/playing cards/NNS/cards is/VBZ/is partially/RB/partially ordered/VBN/ordered /,/, which/WDT/which means/VBZ/means that/DT/that sometimes/RB/sometimes you/PRP/you can/MD/can compare/VB/compare cards/NNS/cards and/CC/and sometimes/RB/sometimes not/NNP/not. for/IN/for example/NN/example /,/, you/PRP/you know/VBP/know that/IN/that the/DT/the 3/CD/3 of/IN/of clubs/NNS/clubs is/VBZ/is higher/JJR/higher than/IN/than the/DT/the 2/CD/2 of/IN/of clubs/NNS/clubs /,/, and/CC/and the/DT/the 3/CD/3 of/IN/of diamonds/NNS/diamonds is/VBZ/is higher/JJR/higher than/IN/than the/DT/the 3/CD/3 of/IN/of clubs/NNP/clubs. but/CC/but which/WDT/which is/VBZ/is better/RBR/better /,/, the/DT/the 3/CD/3 of/IN/of clubs/NNS/clubs or/CC/or the/DT/the 2/CD/2 of/IN/of diamonds/NNS/diamonds one/CD/one has/VBZ/has a/DT/a higher/JJR/higher rank/NN/rank /,/, but/CC/but the/DT/the other/JJ/other has/VBZ/has a/DT/a higher/JJR/higher suit/NNP/suit. in/IN/in order/NN/order to/TO/to make/VB/make cards/NNS/cards comparable/JJ/comparable /,/, you/PRP/you have/VBP/have to/TO/to decide/VB/decide which/WDT/which is/VBZ/is more/RBR/more important/JJ/important /,/, rank/NN/rank or/CC/or suit/NNP/suit. to/TO/to be/VB/be honest/JJS/honest /,/, the/DT/the choice/NN/choice is/VBZ/is arbitrary/NNP/arbitrary. for/IN/for the/DT/the sake/NN/sake of/IN/of choosing/NN/choosing /,/, we/PRP/we will/MD/will say/VB/say that/IN/that suit/NN/suit is/VBZ/is more/RBR/more important/JJ/important /,/, because/IN/because a/DT/a new/JJ/new deck/NN/deck of/IN/of cards/NNS/cards comes/VBZ/comes sorted/VBN/sorted with/IN/with all/DT/all the/DT/the clubs/NNS/clubs together/RB/together /,/, followed/VBN/followed by/IN/by all/DT/all the/DT/the diamonds/NNS/diamonds /,/, and/CC/and so/RB/so on/NNP/on. with/IN/with that/DT/that decided/VBN/decided /,/, we/PRP/we can/MD/can write/VB/write cmp/NN/cmp /:/: 15.5/CD/15.5 decks/NNS/decks 161/CD/161 def/NN/def __cmp__/NNP/__cmp__ /NNP/( self/NN/self /,/, other/JJ/other /NN/) /:/: #/#/# check/NN/check the/DT/the suits/NNS/suits if/IN/if self.suit/JJ/self.suit >/NN/> other.suit/NN/other.suit /:/: return/NN/return 1/CD/1 if/IN/if self.suit/JJ/self.suit </NN/< other.suit/NN/other.suit /:/: return/NN/return -1/-NONE-/-1 #/#/# suits/NNS/suits are/VBP/are the/DT/the same/NNP/same... check/NN/check ranks/VBZ/ranks if/IN/if self.rank/JJ/self.rank >/NN/> other.rank/NN/other.rank /:/: return/NN/return 1/CD/1 if/IN/if self.rank/JJ/self.rank </NN/< other.rank/NN/other.rank /:/: return/NN/return -1/-NONE-/-1 #/#/# ranks/NNS/ranks are/VBP/are the/DT/the same/NNP/same... it/PRP/it s/VBZ/s a/DT/a tie/NN/tie return/NN/return 0/-NONE-/0 in/IN/in this/DT/this ordering/NN/ordering /,/, aces/NNS/aces appear/VBP/appear lower/JJR/lower than/IN/than deuces/NNS/deuces /:/( 2s/CD/2s /CD/) /./. as/IN/as an/DT/an exercise/NN/exercise /,/, modify/NN/modify cmp/NN/cmp so/RB/so that/IN/that aces/NNS/aces are/VBP/are ranked/VBN/ranked higher/JJR/higher than/IN/than kings/NNP/kings. 15.5/CD/15.5 decks/NNS/decks now/RB/now that/IN/that we/PRP/we have/VBP/have objects/NNS/objects to/TO/to represent/VB/represent cards/NNS/cards /,/, the/DT/the next/JJ/next logical/JJ/logical step/NN/step is/VBZ/is to/TO/to define/VB/define a/DT/a class/NN/class to/TO/to represent/VB/represent a/DT/a deck/NNP/deck. of/IN/of course/NN/course /,/, a/DT/a deck/NN/deck is/VBZ/is made/VBN/made up/RP/up of/IN/of cards/NNS/cards /,/, so/RB/so each/DT/each deck/NN/deck object/NN/object will/MD/will contain/VB/contain a/DT/a list/NN/list of/IN/of cards/NNS/cards as/IN/as an/DT/an attribute/NNP/attribute. the/DT/the following/VBG/following is/VBZ/is a/DT/a class/NN/class definition/NN/definition for/IN/for the/DT/the deck/NN/deck class/NNP/class. the/DT/the initialization/NN/initialization method/NN/method creates/VBZ/creates the/DT/the attribute/NN/attribute cards/NNS/cards and/CC/and generates/NNS/generates the/DT/the standard/JJ/standard set/NN/set of/IN/of fifty-two/CD/fifty-two cards/NNS/cards /:/: class/NN/class deck/NN/deck /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /:/) /:/: self.cards/NNS/self.cards =/VBP/= /:/[ /:/] for/IN/for suit/NN/suit in/IN/in range/NN/range /:/( 4/CD/4 /CD/) /:/: for/IN/for rank/NN/rank in/IN/in range/NN/range /:/( 1/CD/1 /,/, 14/CD/14 /:/) /:/: self.cards.append/JJ/self.cards.append /NN/( card/NN/card /:/( suit/NN/suit /,/, rank/NN/rank /:/) /:/) the/DT/the easiest/JJS/easiest way/NN/way to/TO/to populate/VB/populate the/DT/the deck/NN/deck is/VBZ/is with/IN/with a/DT/a nested/VBN/nested loop/NNP/loop. the/DT/the outer/NN/outer loop/NN/loop enumerates/VBZ/enumerates the/DT/the suits/NNS/suits from/IN/from 0/-NONE-/0 to/TO/to 3/CD/3. the/DT/the inner/NN/inner loop/NN/loop enumerates/VBZ/enumerates the/DT/the ranks/NNS/ranks from/IN/from 1/CD/1 to/TO/to 13/CD/13. since/IN/since the/DT/the outer/NN/outer loop/NN/loop iterates/VBZ/iterates four/CD/four times/NNS/times /,/, and/CC/and the/DT/the inner/NN/inner loop/NN/loop iterates/VBZ/iterates thirteen/VBN/thirteen times/NNS/times /,/, the/DT/the total/JJ/total number/NN/number of/IN/of times/NNS/times the/DT/the body/NN/body is/VBZ/is executed/VBN/executed is/VBZ/is fifty-two/CD/fifty-two /CD/( thirteen/CD/thirteen times/NNS/times four/CD/four /CD/) /./. each/DT/each iteration/NN/iteration creates/VBZ/creates a/DT/a new/JJ/new instance/NN/instance of/IN/of card/NN/card with/IN/with the/DT/the current/JJ/current suit/NN/suit and/CC/and rank/NN/rank /,/, and/CC/and appends/NNS/appends that/WDT/that card/NN/card to/TO/to the/DT/the cards/NNS/cards list/NNP/list. the/DT/the append/NN/append method/NN/method works/NNS/works on/IN/on lists/NNS/lists but/CC/but not/RB/not /,/, of/IN/of course/NN/course /,/, tuples/NNP/tuples. 15.6/CD/15.6 printing/VBG/printing the/DT/the deck/NN/deck as/IN/as usual/JJ/usual /,/, when/WRB/when we/PRP/we define/VBP/define a/DT/a new/JJ/new type/NN/type of/IN/of object/NN/object we/PRP/we want/VBP/want a/DT/a method/NN/method that/WDT/that prints/VBZ/prints the/DT/the contents/NNS/contents of/IN/of an/DT/an object/NNP/object. to/TO/to print/VB/print a/DT/a deck/NN/deck /,/, we/PRP/we traverse/VBP/traverse the/DT/the list/NN/list and/CC/and print/VBP/print each/DT/each card/NN/card /:/: 162/CD/162 sets/NNS/sets of/IN/of objects/NNS/objects class/NN/class deck/NN/deck /:/: /:/... def/NN/def printdeck/NN/printdeck /:/( self/NN/self /:/) /:/: for/IN/for card/NN/card in/IN/in self.cards/NNS/self.cards /:/: print/NN/print card/NN/card here/RB/here /,/, and/CC/and from/IN/from now/RB/now on/IN/on /,/, the/DT/the ellipsis/NN/ellipsis /:/( /:/... /:/) indicates/NNS/indicates that/WDT/that we/PRP/we have/VBP/have omitted/VBN/omitted the/DT/the other/JJ/other methods/NNS/methods in/IN/in the/DT/the class/NNP/class. as/IN/as an/DT/an alternative/NN/alternative to/TO/to printdeck/VB/printdeck /,/, we/PRP/we could/MD/could write/VB/write a/DT/a str/NN/str method/NN/method for/IN/for the/DT/the deck/NN/deck class/NNP/class. the/DT/the advantage/NN/advantage of/IN/of str/NN/str is/VBZ/is that/IN/that it/PRP/it is/VBZ/is more/RBR/more flexible/NNP/flexible. rather/RB/rather than/IN/than just/RB/just printing/VBG/printing the/DT/the contents/NNS/contents of/IN/of the/DT/the object/NN/object /,/, it/PRP/it generates/VBZ/generates a/DT/a string/NN/string representation/NN/representation that/WDT/that other/JJ/other parts/NNS/parts of/IN/of the/DT/the program/NN/program can/MD/can manipulate/VB/manipulate before/IN/before printing/VBG/printing /,/, or/CC/or store/VB/store for/IN/for later/JJ/later use/NNP/use. here/RB/here is/VBZ/is a/DT/a version/NN/version of/IN/of str/NN/str that/IN/that returns/NNS/returns a/DT/a string/VBG/string representation/NN/representation of/IN/of a/DT/a deck/NNP/deck. to/TO/to add/VB/add a/DT/a bit/NN/bit of/IN/of pizzazz/NN/pizzazz /,/, it/PRP/it arranges/VBZ/arranges the/DT/the cards/NNS/cards in/IN/in a/DT/a cascade/NN/cascade where/WRB/where each/DT/each card/NN/card is/VBZ/is indented/VBN/indented one/CD/one space/NN/space more/JJR/more than/IN/than the/DT/the previous/JJ/previous card/NN/card /:/: class/NN/class deck/NN/deck /:/: /:/... def/NN/def __str__/NNP/__str__ /NNP/( self/NN/self /:/) /:/: s/NNS/s =/VBP/= for/IN/for i/PRP/i in/IN/in range/NN/range /:/( len/NN/len /:/( self.cards/NNS/self.cards /VBP/) /:/) /:/: s/NNS/s =/VBP/= s/NNS/s +/:/+ i/PRP/i +/VBP/+ str/JJ/str /NN/( self.cards/NNS/self.cards /:/[ i/PRP/i /VBP/] /:/) +/:/+ \/:/\ n/NN/n return/NN/return s/VBZ/s this/DT/this example/NN/example demonstrates/VBZ/demonstrates several/JJ/several features/NNP/features. first/JJ/first /,/, instead/RB/instead of/IN/of traversing/VBG/traversing self.cards/NNS/self.cards and/CC/and assigning/VBG/assigning each/DT/each card/NN/card to/TO/to a/DT/a variable/JJ/variable /,/, we/PRP/we are/VBP/are using/VBG/using i/PRP/i as/IN/as a/DT/a loop/NN/loop variable/JJ/variable and/CC/and an/DT/an index/NN/index into/IN/into the/DT/the list/NN/list of/IN/of cards/NNP/cards. second/JJ/second /,/, we/PRP/we are/VBP/are using/VBG/using the/DT/the string/VBG/string multiplication/NN/multiplication operator/NN/operator to/TO/to indent/VB/indent each/DT/each card/NN/card by/IN/by one/CD/one more/JJR/more space/NN/space than/IN/than the/DT/the last/NNP/last. the/DT/the expression/NN/expression i/PRP/i yields/VBZ/yields a/DT/a number/NN/number of/IN/of spaces/NNS/spaces equal/JJ/equal to/TO/to the/DT/the current/JJ/current value/NN/value of/IN/of i/NNP/i. third/JJ/third /,/, instead/RB/instead of/IN/of using/VBG/using the/DT/the print/NN/print command/NN/command to/TO/to print/VB/print the/DT/the cards/NNS/cards /,/, we/PRP/we use/VBP/use the/DT/the str/NN/str function/NNP/function. passing/NN/passing an/DT/an object/NN/object as/IN/as an/DT/an argument/NN/argument to/TO/to str/VB/str is/VBZ/is equivalent/VBN/equivalent to/TO/to invoking/NN/invoking the/DT/the str/NN/str method/NN/method on/IN/on the/DT/the object/NNP/object. finally/RB/finally /,/, we/PRP/we are/VBP/are using/VBG/using the/DT/the variable/JJ/variable s/NNS/s as/IN/as an/DT/an accumulator/NNP/accumulator. initially/RB/initially /,/, s/NNS/s is/VBZ/is the/DT/the empty/NN/empty string/NNP/string. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, a/DT/a new/JJ/new string/NN/string is/VBZ/is generated/VBN/generated and/CC/and concatenated/VBN/concatenated with/IN/with the/DT/the old/JJ/old value/NN/value of/IN/of s/NNS/s to/TO/to get/VB/get the/DT/the new/JJ/new value/NNP/value. when/WRB/when the/DT/the loop/NN/loop ends/VBZ/ends /,/, s/NNS/s contains/VBZ/contains the/DT/the complete/JJ/complete string/NN/string representation/NN/representation of/IN/of the/DT/the deck/NN/deck /,/, which/WDT/which looks/NNS/looks like/IN/like this/DT/this /:/: 15.7/CD/15.7 shuffling/VBG/shuffling the/DT/the deck/NN/deck 163/CD/163 >/CD/> >/CD/> >/CD/> deck/NN/deck =/:/= deck/NN/deck /:/( /:/) >/:/> >/:/> >/:/> print/NN/print deck/NN/deck ace/NN/ace of/IN/of clubs/NNS/clubs 2/CD/2 of/IN/of clubs/NNS/clubs 3/CD/3 of/IN/of clubs/NNS/clubs 4/CD/4 of/IN/of clubs/NNS/clubs 5/CD/5 of/IN/of clubs/NNS/clubs 6/CD/6 of/IN/of clubs/NNS/clubs 7/CD/7 of/IN/of clubs/NNS/clubs 8/CD/8 of/IN/of clubs/NNS/clubs 9/CD/9 of/IN/of clubs/NNS/clubs 10/CD/10 of/IN/of clubs/NNS/clubs jack/VBP/jack of/IN/of clubs/NNS/clubs queen/IN/queen of/IN/of clubs/NNS/clubs king/VBG/king of/IN/of clubs/NNS/clubs ace/VBP/ace of/IN/of diamonds/NNS/diamonds and/CC/and so/RB/so on/NNP/on. even/RB/even though/IN/though the/DT/the result/NN/result appears/VBZ/appears on/IN/on 52/CD/52 lines/NNS/lines /,/, it/PRP/it is/VBZ/is one/CD/one long/JJ/long string/NN/string that/WDT/that contains/VBZ/contains newlines/NNP/newlines. 15.7/CD/15.7 shuffling/VBG/shuffling the/DT/the deck/NN/deck if/IN/if a/DT/a deck/NN/deck is/VBZ/is perfectly/RB/perfectly shuffled/VBN/shuffled /,/, then/RB/then any/DT/any card/NN/card is/VBZ/is equally/RB/equally likely/JJ/likely to/TO/to appear/VB/appear anywhere/RB/anywhere in/IN/in the/DT/the deck/NN/deck /,/, and/CC/and any/DT/any location/NN/location in/IN/in the/DT/the deck/NN/deck is/VBZ/is equally/RB/equally likely/JJ/likely to/TO/to contain/VB/contain any/DT/any card/NNP/card. to/TO/to shuffle/VB/shuffle the/DT/the deck/NN/deck /,/, we/PRP/we will/MD/will use/VB/use the/DT/the randrange/NN/randrange function/NN/function from/IN/from the/DT/the random/NN/random module/NNP/module. with/IN/with two/CD/two integer/JJR/integer arguments/NNS/arguments /,/, a/DT/a and/CC/and b/NN/b /,/, randrange/NN/randrange chooses/NNS/chooses a/DT/a random/NN/random integer/NN/integer in/IN/in the/DT/the range/NN/range a/DT/a </NN/< =/:/= x/NN/x </:/< b/NNP/b. since/IN/since the/DT/the upper/JJ/upper bound/NN/bound is/VBZ/is strictly/RB/strictly less/JJR/less than/IN/than b/NN/b /,/, we/PRP/we can/MD/can use/VB/use the/DT/the length/NN/length of/IN/of a/DT/a list/NN/list as/IN/as the/DT/the second/JJ/second argument/NN/argument /,/, and/CC/and we/PRP/we are/VBP/are guaranteed/VBN/guaranteed to/TO/to get/VB/get a/DT/a legal/JJ/legal index/NNP/index. for/IN/for example/NN/example /,/, this/DT/this expression/NN/expression chooses/VBZ/chooses the/DT/the index/NN/index of/IN/of a/DT/a random/NN/random card/NN/card in/IN/in a/DT/a deck/NN/deck /:/: random.randrange/JJ/random.randrange /NN/( 0/-NONE-/0 /,/, len/NN/len /:/( self.cards/NNS/self.cards /VBP/) /:/) an/DT/an easy/JJ/easy way/NN/way to/TO/to shuffle/VB/shuffle the/DT/the deck/NN/deck is/VBZ/is by/IN/by traversing/NN/traversing the/DT/the cards/NNS/cards and/CC/and swapping/VBG/swapping each/DT/each card/NN/card with/IN/with a/DT/a randomly/RB/randomly chosen/VBN/chosen one/NNP/one. it/PRP/it is/VBZ/is possible/JJ/possible that/IN/that the/DT/the card/NN/card will/MD/will be/VB/be swapped/VBN/swapped with/IN/with itself/PRP/itself /,/, but/CC/but that/IN/that is/VBZ/is fine/NNP/fine. in/IN/in fact/NN/fact /,/, if/IN/if we/PRP/we precluded/VBD/precluded that/IN/that possibility/NN/possibility /,/, the/DT/the order/NN/order of/IN/of the/DT/the cards/NNS/cards would/MD/would be/VB/be less/RBR/less than/IN/than entirely/RB/entirely random/NN/random /:/: 164/CD/164 sets/NNS/sets of/IN/of objects/NNS/objects class/NN/class deck/NN/deck /:/: /:/... def/NN/def shuffle/NN/shuffle /:/( self/NN/self /:/) /:/: import/NN/import random/NN/random ncards/NNS/ncards =/:/= len/NN/len /:/( self.cards/NNS/self.cards /VBP/) for/IN/for i/PRP/i in/IN/in range/NN/range /:/( ncards/NNS/ncards /VBP/) /:/: j/NN/j =/:/= random.randrange/JJ/random.randrange /NN/( i/PRP/i /,/, ncards/NNS/ncards /:/) self.cards/NNS/self.cards /VBP/[ i/PRP/i /VBP/] /,/, self.cards/NNS/self.cards /:/[ j/NN/j /:/] =/:/= self.cards/NNS/self.cards /VBP/[ j/NN/j /:/] /,/, self.cards/NNS/self.cards /:/[ i/PRP/i /VBP/] rather/RB/rather than/IN/than assume/NN/assume that/IN/that there/EX/there are/VBP/are fifty-two/CD/fifty-two cards/NNS/cards in/IN/in the/DT/the deck/NN/deck /,/, we/PRP/we get/VBP/get the/DT/the actual/JJ/actual length/NN/length of/IN/of the/DT/the list/NN/list and/CC/and store/NN/store it/PRP/it in/IN/in ncards/NNP/ncards. for/IN/for each/DT/each card/NN/card in/IN/in the/DT/the deck/NN/deck /,/, we/PRP/we choose/VBP/choose a/DT/a random/NN/random card/NN/card from/IN/from among/IN/among the/DT/the cards/NNS/cards that/WDT/that haven/RB/haven t/VBP/t been/VBN/been shuffled/VBN/shuffled yet/NNP/yet. then/RB/then we/PRP/we swap/VBP/swap the/DT/the current/JJ/current card/NN/card /:/( i/PRP/i /VBP/) with/IN/with the/DT/the selected/VBN/selected card/NN/card /:/( j/NN/j /:/) /./. to/TO/to swap/VB/swap the/DT/the cards/NNS/cards we/PRP/we use/VBP/use a/DT/a tuple/NN/tuple assignment/NN/assignment /,/, as/IN/as in/IN/in section/NN/section 9.2/CD/9.2 /:/: self.cards/NNS/self.cards /VBP/[ i/PRP/i /VBP/] /,/, self.cards/NNS/self.cards /:/[ j/NN/j /:/] =/:/= self.cards/NNS/self.cards /VBP/[ j/NN/j /:/] /,/, self.cards/NNS/self.cards /:/[ i/PRP/i /VBP/] as/IN/as an/DT/an exercise/NN/exercise /,/, rewrite/JJ/rewrite this/DT/this line/NN/line of/IN/of code/NN/code without/IN/without using/VBG/using a/DT/a sequence/NN/sequence assignment/NNP/assignment. 15.8/CD/15.8 removing/VBG/removing and/CC/and dealing/VBG/dealing cards/NNS/cards another/DT/another method/NN/method that/IN/that would/MD/would be/VB/be useful/JJ/useful for/IN/for the/DT/the deck/NN/deck class/NN/class is/VBZ/is removecard/JJ/removecard /,/, which/WDT/which takes/VBZ/takes a/DT/a card/NN/card as/IN/as an/DT/an argument/NN/argument /,/, removes/VBZ/removes it/PRP/it /,/, and/CC/and returns/NNS/returns true/JJ/true if/IN/if the/DT/the card/NN/card was/VBD/was in/IN/in the/DT/the deck/NN/deck and/CC/and false/NN/false otherwise/RB/otherwise /:/: class/NN/class deck/NN/deck /:/: /:/... def/NN/def removecard/NN/removecard /:/( self/NN/self /,/, card/NN/card /:/) /:/: if/IN/if card/NN/card in/IN/in self.cards/NNS/self.cards /:/: self.cards.remove/JJ/self.cards.remove /NN/( card/NN/card /:/) return/NN/return true/NN/true else/RB/else /:/: return/NN/return false/NN/false the/DT/the in/IN/in operator/NN/operator returns/NNS/returns true/JJ/true if/IN/if the/DT/the first/JJ/first operand/NN/operand is/VBZ/is in/IN/in the/DT/the second/JJ/second /,/, which/WDT/which must/MD/must be/VB/be a/DT/a list/NN/list or/CC/or a/DT/a tuple/NNP/tuple. if/IN/if the/DT/the first/JJ/first operand/NN/operand is/VBZ/is an/DT/an object/NN/object /,/, python/NN/python uses/NNS/uses the/DT/the object/NN/object s/VBZ/s cmp/NN/cmp method/NN/method to/TO/to determine/VB/determine equality/NN/equality with/IN/with items/NNS/items in/IN/in the/DT/the list/NNP/list. since/IN/since the/DT/the cmp/NN/cmp in/IN/in the/DT/the card/NN/card class/NN/class checks/NNS/checks for/IN/for deep/NN/deep equality/NN/equality /,/, the/DT/the removecard/NN/removecard method/NN/method checks/NNS/checks for/IN/for deep/NN/deep equality/NNP/equality. to/TO/to deal/VB/deal cards/NNS/cards /,/, we/PRP/we want/VBP/want to/TO/to remove/VB/remove and/CC/and return/VB/return the/DT/the top/JJ/top card/NNP/card. the/DT/the list/NN/list method/NN/method pop/NN/pop provides/VBZ/provides a/DT/a convenient/JJ/convenient way/NN/way to/TO/to do/VB/do that/DT/that /:/: 15.9/CD/15.9 glossary/JJ/glossary 165/CD/165 class/NN/class deck/NN/deck /:/: /:/... def/NN/def popcard/NN/popcard /:/( self/NN/self /:/) /:/: return/NN/return self.cards.pop/NN/self.cards.pop /:/( /:/) actually/RB/actually /,/, pop/VB/pop removes/NNS/removes the/DT/the last/JJ/last card/NN/card in/IN/in the/DT/the list/NN/list /,/, so/RB/so we/PRP/we are/VBP/are in/IN/in effect/NN/effect dealing/VBG/dealing from/IN/from the/DT/the bottom/NN/bottom of/IN/of the/DT/the deck/NNP/deck. one/CD/one more/JJR/more operation/NN/operation that/IN/that we/PRP/we are/VBP/are likely/JJ/likely to/TO/to want/VB/want is/VBZ/is the/DT/the boolean/JJ/boolean function/NN/function isempty/NN/isempty /,/, which/WDT/which returns/NNS/returns true/VBP/true if/IN/if the/DT/the deck/NN/deck contains/VBZ/contains no/DT/no cards/NNS/cards /:/: class/NN/class deck/NN/deck /:/: /:/... def/NN/def isempty/NN/isempty /:/( self/NN/self /:/) /:/: return/NN/return /:/( len/NN/len /:/( self.cards/NNS/self.cards /VBP/) =/:/= =/:/= 0/-NONE-/0 /:/) 15.9/CD/15.9 glossary/JJ/glossary encode/NN/encode /:/: to/TO/to represent/VB/represent one/CD/one set/NN/set of/IN/of values/NNS/values using/VBG/using another/DT/another set/NN/set of/IN/of values/NNS/values by/IN/by constructing/VBG/constructing a/DT/a mapping/NN/mapping between/IN/between them/NNP/them. class/NN/class attribute/NN/attribute /:/: a/DT/a variable/JJ/variable that/IN/that is/VBZ/is defined/VBN/defined inside/NN/inside a/DT/a class/NN/class definition/NN/definition but/CC/but outside/IN/outside any/DT/any method/NNP/method. class/NN/class attributes/VBZ/attributes are/VBP/are accessible/JJ/accessible from/IN/from any/DT/any method/NN/method in/IN/in the/DT/the class/NN/class and/CC/and are/VBP/are shared/VBN/shared by/IN/by all/DT/all instances/NNS/instances of/IN/of the/DT/the class/NNP/class. accumulator/NN/accumulator /:/: a/DT/a variable/JJ/variable used/VBN/used in/IN/in a/DT/a loop/NN/loop to/TO/to accumulate/VB/accumulate a/DT/a series/NN/series of/IN/of values/NNS/values /,/, such/JJ/such as/IN/as by/IN/by concatenating/NN/concatenating them/PRP/them onto/IN/onto a/DT/a string/NN/string or/CC/or adding/VBG/adding them/PRP/them to/TO/to a/DT/a running/NN/running sum/NNP/sum. 166/CD/166 sets/NNS/sets of/IN/of objects/NNS/objects chapter/NN/chapter 16/CD/16 inheritance/NN/inheritance 16.1/CD/16.1 inheritance/NN/inheritance the/DT/the language/NN/language feature/NN/feature most/JJS/most often/RB/often associated/VBN/associated with/IN/with object-oriented/JJ/object-oriented programming/NN/programming is/VBZ/is inheritance/NNP/inheritance. inheritance/NN/inheritance is/VBZ/is the/DT/the ability/NN/ability to/TO/to define/VB/define a/DT/a new/JJ/new class/NN/class that/WDT/that is/VBZ/is a/DT/a modified/VBN/modified version/NN/version of/IN/of an/DT/an existing/VBG/existing class/NNP/class. the/DT/the primary/JJ/primary advantage/NN/advantage of/IN/of this/DT/this feature/NN/feature is/VBZ/is that/IN/that you/PRP/you can/MD/can add/VB/add new/JJ/new methods/NNS/methods to/TO/to a/DT/a class/NN/class without/IN/without modifying/NN/modifying the/DT/the existing/VBG/existing class/NNP/class. it/PRP/it is/VBZ/is called/VBN/called inheritance/NN/inheritance because/IN/because the/DT/the new/JJ/new class/NN/class inherits/NNS/inherits all/DT/all of/IN/of the/DT/the methods/NNS/methods of/IN/of the/DT/the existing/VBG/existing class/NNP/class. extending/VBG/extending this/DT/this metaphor/NN/metaphor /,/, the/DT/the existing/VBG/existing class/NN/class is/VBZ/is sometimes/RB/sometimes called/VBN/called the/DT/the parent/NN/parent class/NNP/class. the/DT/the new/JJ/new class/NN/class may/MD/may be/VB/be called/VBN/called the/DT/the child/NN/child class/NN/class or/CC/or sometimes/RB/sometimes subclass/NNP/subclass. inheritance/NN/inheritance is/VBZ/is a/DT/a powerful/JJ/powerful feature/NNP/feature. some/DT/some programs/NNS/programs that/WDT/that would/MD/would be/VB/be complicated/VBN/complicated without/IN/without inheritance/NN/inheritance can/MD/can be/VB/be written/VBN/written concisely/RB/concisely and/CC/and simply/RB/simply with/IN/with it/NNP/it. also/RB/also /,/, inheritance/NN/inheritance can/MD/can facilitate/VB/facilitate code/NN/code reuse/NN/reuse /,/, since/IN/since you/PRP/you can/MD/can customize/VB/customize the/DT/the behavior/NN/behavior of/IN/of parent/NN/parent classes/NNS/classes without/IN/without having/VBG/having to/TO/to modify/VB/modify them/NNP/them. in/IN/in some/DT/some cases/NNS/cases /,/, the/DT/the inheritance/NN/inheritance structure/NN/structure reflects/VBZ/reflects the/DT/the natural/JJ/natural structure/NN/structure of/IN/of the/DT/the problem/NN/problem /,/, which/WDT/which makes/VBZ/makes the/DT/the program/NN/program easier/NN/easier to/TO/to understand/NNP/understand. on/IN/on the/DT/the other/JJ/other hand/NN/hand /,/, inheritance/NN/inheritance can/MD/can make/VB/make programs/NNS/programs difficult/JJ/difficult to/TO/to read/NNP/read. when/WRB/when a/DT/a method/NN/method is/VBZ/is invoked/VBN/invoked /,/, it/PRP/it is/VBZ/is sometimes/RB/sometimes not/RB/not clear/JJ/clear where/WRB/where to/TO/to find/VB/find its/PRP$/its definition/NNP/definition. the/DT/the relevant/NN/relevant code/NN/code may/MD/may be/VB/be scattered/VBN/scattered among/IN/among several/JJ/several modules/NNP/modules. also/RB/also /,/, many/JJ/many of/IN/of the/DT/the things/NNS/things that/IN/that can/MD/can be/VB/be done/VBN/done using/VBG/using inheritance/NN/inheritance can/MD/can be/VB/be done/VBN/done as/IN/as elegantly/RB/elegantly /:/( or/CC/or more/JJR/more so/IN/so /CD/) without/IN/without it/NNP/it. if/IN/if the/DT/the natural/JJ/natural structure/NN/structure of/IN/of the/DT/the problem/NN/problem does/VBZ/does not/RB/not lend/VB/lend itself/PRP/itself to/TO/to inheritance/VB/inheritance /,/, this/DT/this style/NN/style of/IN/of programming/NN/programming can/MD/can do/VB/do more/RBR/more harm/JJ/harm than/IN/than good/NNP/good. in/IN/in this/DT/this chapter/NN/chapter we/PRP/we will/MD/will demonstrate/VB/demonstrate the/DT/the use/NN/use of/IN/of inheritance/NN/inheritance as/IN/as part/NN/part of/IN/of a/DT/a program/NN/program that/WDT/that plays/VBZ/plays the/DT/the card/NN/card game/NN/game old/JJ/old maid/NNP/maid. one/CD/one of/IN/of our/PRP$/our goals/NNS/goals is/VBZ/is to/TO/to write/VB/write code/NN/code that/WDT/that could/MD/could be/VB/be reused/VBN/reused to/TO/to implement/VB/implement other/JJ/other card/NN/card games/NNP/games. 168/CD/168 inheritance/NN/inheritance 16.2/CD/16.2 a/DT/a hand/NN/hand of/IN/of cards/NNS/cards for/IN/for almost/RB/almost any/DT/any card/NN/card game/NN/game /,/, we/PRP/we need/VBP/need to/TO/to represent/VB/represent a/DT/a hand/NN/hand of/IN/of cards/NNP/cards. a/DT/a hand/NN/hand is/VBZ/is similar/JJ/similar to/TO/to a/DT/a deck/NN/deck /,/, of/IN/of course/NNP/course. both/DT/both are/VBP/are made/VBN/made up/RP/up of/IN/of a/DT/a set/NN/set of/IN/of cards/NNS/cards /,/, and/CC/and both/DT/both require/NN/require operations/NNS/operations like/IN/like adding/VBG/adding and/CC/and removing/VBG/removing cards/NNP/cards. also/RB/also /,/, we/PRP/we might/MD/might like/VB/like the/DT/the ability/NN/ability to/TO/to shuffle/VB/shuffle both/DT/both decks/NNS/decks and/CC/and hands/NNP/hands. a/DT/a hand/NN/hand is/VBZ/is also/RB/also different/JJ/different from/IN/from a/DT/a deck/NNP/deck. depending/NN/depending on/IN/on the/DT/the game/NN/game being/VBG/being played/VBN/played /,/, we/PRP/we might/MD/might want/VB/want to/TO/to perform/VB/perform some/DT/some operations/NNS/operations on/IN/on hands/NNS/hands that/IN/that don/NN/don t/NN/t make/VB/make sense/NN/sense for/IN/for a/DT/a deck/NNP/deck. for/IN/for example/NN/example /,/, in/IN/in poker/NN/poker we/PRP/we might/MD/might classify/VB/classify a/DT/a hand/NN/hand /:/( straight/JJ/straight /,/, flush/JJ/flush /,/, etc/NNP/etc. /NNP/) or/CC/or compare/VB/compare it/PRP/it with/IN/with another/DT/another hand/NNP/hand. in/IN/in bridge/NN/bridge /,/, we/PRP/we might/MD/might want/VB/want to/TO/to compute/VB/compute a/DT/a score/NN/score for/IN/for a/DT/a hand/NN/hand in/IN/in order/NN/order to/TO/to make/VB/make a/DT/a bid/NNP/bid. this/DT/this situation/NN/situation suggests/VBZ/suggests the/DT/the use/NN/use of/IN/of inheritance/NNP/inheritance. if/IN/if hand/NN/hand is/VBZ/is a/DT/a subclass/NN/subclass of/IN/of deck/NN/deck /,/, it/PRP/it will/MD/will have/VB/have all/PDT/all the/DT/the methods/NNS/methods of/IN/of deck/NN/deck /,/, and/CC/and new/JJ/new methods/NNS/methods can/MD/can be/VB/be added/NNP/added. in/IN/in the/DT/the class/NN/class definition/NN/definition /,/, the/DT/the name/NN/name of/IN/of the/DT/the parent/NN/parent class/NN/class appears/VBZ/appears in/IN/in parentheses/NNS/parentheses /:/: class/NN/class hand/NN/hand /:/( deck/NN/deck /:/) /:/: pass/NN/pass this/DT/this statement/NN/statement indicates/VBZ/indicates that/IN/that the/DT/the new/JJ/new hand/NN/hand class/NN/class inherits/NNS/inherits from/IN/from the/DT/the existing/VBG/existing deck/NN/deck class/NNP/class. the/DT/the hand/NN/hand constructor/NN/constructor initializes/VBZ/initializes the/DT/the attributes/NNS/attributes for/IN/for the/DT/the hand/NN/hand /,/, which/WDT/which are/VBP/are name/RB/name and/CC/and cards/NNP/cards. the/DT/the string/NN/string name/NN/name identifies/NNS/identifies this/DT/this hand/NN/hand /,/, probably/RB/probably by/IN/by the/DT/the name/NN/name of/IN/of the/DT/the player/NN/player that/IN/that holds/NNS/holds it/NNP/it. the/DT/the name/NN/name is/VBZ/is an/DT/an optional/JJ/optional parameter/NN/parameter with/IN/with the/DT/the empty/NN/empty string/VBG/string as/IN/as a/DT/a default/NN/default value/NNP/value. cards/NNS/cards is/VBZ/is the/DT/the list/NN/list of/IN/of cards/NNS/cards in/IN/in the/DT/the hand/NN/hand /,/, initialized/VBD/initialized to/TO/to the/DT/the empty/NN/empty list/NN/list /:/: class/NN/class hand/NN/hand /:/( deck/NN/deck /:/) /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /,/, name/NN/name =/:/= /:/) /:/: self.cards/NNS/self.cards =/VBP/= /:/[ /:/] self.name/JJ/self.name =/NN/= name/NN/name for/IN/for just/RB/just about/IN/about any/DT/any card/NN/card game/NN/game /,/, it/PRP/it is/VBZ/is necessary/JJ/necessary to/TO/to add/VB/add and/CC/and remove/VB/remove cards/NNS/cards from/IN/from the/DT/the deck/NNP/deck. removing/NN/removing cards/NNS/cards is/VBZ/is already/RB/already taken/VBN/taken care/NN/care of/IN/of /,/, since/IN/since hand/NN/hand inherits/NNS/inherits removecard/VBP/removecard from/IN/from deck/NNP/deck. but/CC/but we/PRP/we have/VBP/have to/TO/to write/VB/write addcard/NN/addcard /:/: class/NN/class hand/NN/hand /:/( deck/NN/deck /:/) /:/: /:/... def/NN/def addcard/NN/addcard /:/( self,card/JJ/self,card /NN/) /:/: self.cards.append/JJ/self.cards.append /NN/( card/NN/card /:/) again/RB/again /,/, the/DT/the ellipsis/NN/ellipsis indicates/VBZ/indicates that/IN/that we/PRP/we have/VBP/have omitted/VBN/omitted other/JJ/other methods/NNP/methods. the/DT/the list/NN/list append/NN/append method/NN/method adds/VBZ/adds the/DT/the new/JJ/new card/NN/card to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list of/IN/of cards/NNP/cards. 16.3/CD/16.3 dealing/VBG/dealing cards/NNS/cards 169/CD/169 16.3/CD/16.3 dealing/VBG/dealing cards/NNS/cards now/RB/now that/IN/that we/PRP/we have/VBP/have a/DT/a hand/NN/hand class/NN/class /,/, we/PRP/we want/VBP/want to/TO/to deal/VB/deal cards/NNS/cards from/IN/from the/DT/the deck/NN/deck into/IN/into hands/NNP/hands. it/PRP/it is/VBZ/is not/RB/not immediately/RB/immediately obvious/JJ/obvious whether/IN/whether this/DT/this method/NN/method should/MD/should go/VB/go in/IN/in the/DT/the hand/NN/hand class/NN/class or/CC/or in/IN/in the/DT/the deck/NN/deck class/NN/class /,/, but/CC/but since/IN/since it/PRP/it operates/VBZ/operates on/IN/on a/DT/a single/JJ/single deck/NN/deck and/CC/and /CD/( possibly/RB/possibly /:/) several/JJ/several hands/NNS/hands /,/, it/PRP/it is/VBZ/is more/RBR/more natural/JJ/natural to/TO/to put/VB/put it/PRP/it in/IN/in deck/NNP/deck. deal/NN/deal should/MD/should be/VB/be fairly/RB/fairly general/JJ/general /,/, since/IN/since different/JJ/different games/NNS/games will/MD/will have/VB/have different/JJ/different requirements/NNP/requirements. we/PRP/we may/MD/may want/VB/want to/TO/to deal/VB/deal out/RP/out the/DT/the entire/JJ/entire deck/NN/deck at/IN/at once/RB/once or/CC/or add/VB/add one/CD/one card/NN/card to/TO/to each/DT/each hand/NNP/hand. deal/NN/deal takes/VBZ/takes two/CD/two arguments/NNS/arguments /,/, a/DT/a list/NN/list /:/( or/CC/or tuple/VB/tuple /CD/) of/IN/of hands/NNS/hands and/CC/and the/DT/the total/JJ/total number/NN/number of/IN/of cards/NNS/cards to/TO/to deal/NNP/deal. if/IN/if there/EX/there are/VBP/are not/RB/not enough/RB/enough cards/NNS/cards in/IN/in the/DT/the deck/NN/deck /,/, the/DT/the method/NN/method deals/NNS/deals out/IN/out all/DT/all of/IN/of the/DT/the cards/NNS/cards and/CC/and stops/NNS/stops /:/: class/NN/class deck/NN/deck /:/: /:/... def/NN/def deal/NN/deal /:/( self/NN/self /,/, hands/NNS/hands /,/, ncards/NNS/ncards =/:/= 999/CD/999 /CD/) /:/: nhands/NNS/nhands =/VBP/= len/VBN/len /-NONE-/( hands/NNS/hands /:/) for/IN/for i/PRP/i in/IN/in range/NN/range /:/( ncards/NNS/ncards /VBP/) /:/: if/IN/if self.isempty/JJ/self.isempty /NN/( /:/) /:/: break/NN/break #/#/# break/NN/break if/IN/if out/IN/out of/IN/of cards/NNS/cards card/NN/card =/:/= self.popcard/JJ/self.popcard /NN/( /:/) #/#/# take/NN/take the/DT/the top/JJ/top card/NN/card hand/NN/hand =/:/= hands/NNS/hands /VBP/[ i/PRP/i %/NN/% nhands/NNS/nhands /:/] #/#/# whose/WP$/whose turn/NN/turn is/VBZ/is next/JJ/next hand.addcard/NN/hand.addcard /:/( card/NN/card /:/) #/#/# add/NN/add the/DT/the card/NN/card to/TO/to the/DT/the hand/NN/hand the/DT/the second/JJ/second parameter/NN/parameter /,/, ncards/NNS/ncards /,/, is/VBZ/is optional/JJ/optional ;/:/; the/DT/the default/NN/default is/VBZ/is a/DT/a large/JJ/large number/NN/number /,/, which/WDT/which effectively/RB/effectively means/VBZ/means that/IN/that all/DT/all of/IN/of the/DT/the cards/NNS/cards in/IN/in the/DT/the deck/NN/deck will/MD/will get/VB/get dealt/NNP/dealt. the/DT/the loop/NN/loop variable/JJ/variable i/NN/i goes/VBZ/goes from/IN/from 0/-NONE-/0 to/TO/to ncards-1/NNP/ncards-1. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, a/DT/a card/NN/card is/VBZ/is removed/VBN/removed from/IN/from the/DT/the deck/NN/deck using/VBG/using the/DT/the list/NN/list method/NN/method pop/NN/pop /,/, which/WDT/which removes/NNS/removes and/CC/and returns/NNS/returns the/DT/the last/JJ/last item/NN/item in/IN/in the/DT/the list/NNP/list. the/DT/the modulus/NN/modulus operator/NN/operator /:/( %/NN/% /:/) allows/NNS/allows us/PRP/us to/TO/to deal/VB/deal cards/NNS/cards in/IN/in a/DT/a round/NN/round robin/NN/robin /:/( one/CD/one card/NN/card at/IN/at a/DT/a time/NN/time to/TO/to each/DT/each hand/NN/hand /:/) /./. when/WRB/when i/PRP/i is/VBZ/is equal/JJ/equal to/TO/to the/DT/the number/NN/number of/IN/of hands/NNS/hands in/IN/in the/DT/the list/NN/list /,/, the/DT/the expression/NN/expression i/PRP/i %/NN/% nhands/NNS/nhands wraps/NNS/wraps around/IN/around to/TO/to the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list /:/( index/NN/index 0/-NONE-/0 /./) /./. 16.4/CD/16.4 printing/VBG/printing a/DT/a hand/NN/hand to/TO/to print/VB/print the/DT/the contents/NNS/contents of/IN/of a/DT/a hand/NN/hand /,/, we/PRP/we can/MD/can take/VB/take advantage/NN/advantage of/IN/of the/DT/the printdeck/NN/printdeck and/CC/and str/NN/str methods/NNS/methods inherited/VBD/inherited from/IN/from deck/NNP/deck. for/IN/for example/NN/example /:/: 170/CD/170 inheritance/NN/inheritance >/:/> >/:/> >/:/> deck/NN/deck =/:/= deck/NN/deck /:/( /:/) >/:/> >/:/> >/:/> deck.shuffle/JJ/deck.shuffle /NN/( /:/) >/:/> >/:/> >/:/> hand/NN/hand =/:/= hand/NN/hand /:/( frank/NN/frank /:/) >/:/> >/:/> >/:/> deck.deal/JJ/deck.deal /NN/( /:/[ hand/NN/hand /:/] /,/, 5/CD/5 /:/) >/CD/> >/CD/> >/CD/> print/NN/print hand/NN/hand hand/NN/hand frank/NN/frank contains/VBZ/contains 2/CD/2 of/IN/of spades/NNS/spades 3/CD/3 of/IN/of spades/NNS/spades 4/CD/4 of/IN/of spades/NNS/spades ace/VBP/ace of/IN/of hearts/NNS/hearts 9/CD/9 of/IN/of clubs/NNS/clubs it/PRP/it s/VBZ/s not/RB/not a/DT/a great/JJ/great hand/NN/hand /,/, but/CC/but it/PRP/it has/VBZ/has the/DT/the makings/NNS/makings of/IN/of a/DT/a straight/JJ/straight flush/NNP/flush. although/IN/although it/PRP/it is/VBZ/is convenient/JJ/convenient to/TO/to inherit/VB/inherit the/DT/the existing/VBG/existing methods/NNS/methods /,/, there/EX/there is/VBZ/is additional/JJ/additional information/NN/information in/IN/in a/DT/a hand/NN/hand object/NN/object we/PRP/we might/MD/might want/VB/want to/TO/to include/VB/include when/WRB/when we/PRP/we print/VBP/print one/NNP/one. to/TO/to do/VB/do that/DT/that /,/, we/PRP/we can/MD/can provide/VB/provide a/DT/a str/NN/str method/NN/method in/IN/in the/DT/the hand/NN/hand class/NN/class that/WDT/that overrides/VBZ/overrides the/DT/the one/CD/one in/IN/in the/DT/the deck/NN/deck class/NN/class /:/: class/NN/class hand/NN/hand /:/( deck/NN/deck /:/) /:/... def/NN/def __str__/NNP/__str__ /NNP/( self/NN/self /:/) /:/: s/NNS/s =/VBP/= hand/NN/hand +/:/+ self.name/JJ/self.name if/IN/if self.isempty/JJ/self.isempty /NN/( /:/) /:/: return/NN/return s/NNS/s +/VBP/+ is/VBZ/is empty/JJ/empty \/NN/\ n/NN/n else/RB/else /:/: return/NN/return s/NNS/s +/VBP/+ contains/NNS/contains \/:/\ n/NN/n +/:/+ deck.__str__/JJ/deck.__str__ /NN/( self/NN/self /:/) initially/RB/initially /,/, s/NNS/s is/VBZ/is a/DT/a string/NN/string that/WDT/that identifies/VBZ/identifies the/DT/the hand/NNP/hand. if/IN/if the/DT/the hand/NN/hand is/VBZ/is empty/JJ/empty /,/, the/DT/the program/NN/program appends/NNS/appends the/DT/the words/NNS/words is/VBZ/is empty/JJ/empty and/CC/and returns/NNS/returns the/DT/the result/NNP/result. otherwise/NN/otherwise /,/, the/DT/the program/NN/program appends/NNS/appends the/DT/the word/NN/word contains/VBZ/contains and/CC/and the/DT/the string/NN/string representation/NN/representation of/IN/of the/DT/the deck/NN/deck /,/, computed/VBD/computed by/IN/by invoking/NN/invoking the/DT/the str/NN/str method/NN/method in/IN/in the/DT/the deck/NN/deck class/NN/class on/IN/on self/NNP/self. it/PRP/it may/MD/may seem/VB/seem odd/JJ/odd to/TO/to send/VB/send self/PRP/self /,/, which/WDT/which refers/NNS/refers to/TO/to the/DT/the current/JJ/current hand/NN/hand /,/, to/TO/to a/DT/a deck/NN/deck method/NN/method /,/, until/IN/until you/PRP/you remember/JJR/remember that/IN/that a/DT/a hand/NN/hand is/VBZ/is a/DT/a kind/NN/kind of/IN/of deck/NNP/deck. hand/NN/hand objects/NNS/objects can/MD/can do/VB/do everything/NN/everything deck/VB/deck objects/NNS/objects can/MD/can /,/, so/RB/so it/PRP/it is/VBZ/is legal/JJ/legal to/TO/to send/VB/send a/DT/a hand/NN/hand to/TO/to a/DT/a deck/NN/deck method/NNP/method. in/IN/in general/JJ/general /,/, it/PRP/it is/VBZ/is always/RB/always legal/JJ/legal to/TO/to use/VB/use an/DT/an instance/NN/instance of/IN/of a/DT/a subclass/NN/subclass in/IN/in place/NN/place of/IN/of an/DT/an instance/NN/instance of/IN/of a/DT/a parent/NN/parent class/NNP/class. 16.5/CD/16.5 the/DT/the cardgame/NN/cardgame class/NN/class 171/CD/171 16.5/CD/16.5 the/DT/the cardgame/NN/cardgame class/NN/class the/DT/the cardgame/NN/cardgame class/NN/class takes/VBZ/takes care/NN/care of/IN/of some/DT/some basic/JJ/basic chores/NNS/chores common/JJ/common to/TO/to all/DT/all games/NNS/games /,/, such/JJ/such as/IN/as creating/NN/creating the/DT/the deck/NN/deck and/CC/and shuffling/VBG/shuffling it/PRP/it /:/: class/NN/class cardgame/NN/cardgame /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /:/) /:/: self.deck/JJ/self.deck =/NN/= deck/NN/deck /:/( /:/) self.deck.shuffle/JJ/self.deck.shuffle /NN/( /:/) this/DT/this is/VBZ/is the/DT/the first/JJ/first case/NN/case we/PRP/we have/VBP/have seen/VBN/seen where/WRB/where the/DT/the initialization/NN/initialization method/NN/method performs/NNS/performs a/DT/a significant/JJ/significant computation/NN/computation /,/, beyond/IN/beyond initializing/NN/initializing attributes/NNP/attributes. to/TO/to implement/VB/implement specific/JJ/specific games/NNS/games /,/, we/PRP/we can/MD/can inherit/VB/inherit from/IN/from cardgame/NN/cardgame and/CC/and add/VBD/add features/NNS/features for/IN/for the/DT/the new/JJ/new game/NNP/game. as/IN/as an/DT/an example/NN/example /,/, we/PRP/we ll/VBP/ll write/JJ/write a/DT/a simulation/NN/simulation of/IN/of old/JJ/old maid/NNP/maid. the/DT/the object/NN/object of/IN/of old/JJ/old maid/NN/maid is/VBZ/is to/TO/to get/VB/get rid/JJ/rid of/IN/of cards/NNS/cards in/IN/in your/PRP$/your hand/NNP/hand. you/PRP/you do/VBP/do this/DT/this by/IN/by matching/NN/matching cards/NNS/cards by/IN/by rank/NN/rank and/CC/and color/NNP/color. for/IN/for example/NN/example /,/, the/DT/the 4/CD/4 of/IN/of clubs/NNS/clubs matches/NNS/matches the/DT/the 4/CD/4 of/IN/of spades/NNS/spades since/IN/since both/DT/both suits/NNS/suits are/VBP/are black/NNP/black. the/DT/the jack/NN/jack of/IN/of hearts/NNS/hearts matches/NNS/matches the/DT/the jack/NN/jack of/IN/of diamonds/NNS/diamonds since/IN/since both/DT/both are/VBP/are red/NNP/red. to/TO/to begin/VB/begin the/DT/the game/NN/game /,/, the/DT/the queen/NN/queen of/IN/of clubs/NNS/clubs is/VBZ/is removed/VBN/removed from/IN/from the/DT/the deck/NN/deck so/RB/so that/IN/that the/DT/the queen/NN/queen of/IN/of spades/NNS/spades has/VBZ/has no/DT/no match/NNP/match. the/DT/the fifty-one/NN/fifty-one remaining/VBG/remaining cards/NNS/cards are/VBP/are dealt/VBN/dealt to/TO/to the/DT/the players/NNS/players in/IN/in a/DT/a round/NN/round robin/NNP/robin. after/IN/after the/DT/the deal/NN/deal /,/, all/DT/all players/NNS/players match/VBP/match and/CC/and discard/NN/discard as/IN/as many/JJ/many cards/NNS/cards as/IN/as possible/NNP/possible. when/WRB/when no/DT/no more/RBR/more matches/NNS/matches can/MD/can be/VB/be made/VBN/made /,/, play/NN/play begins/NNP/begins. in/IN/in turn/NN/turn /,/, each/DT/each player/NN/player picks/VBZ/picks a/DT/a card/NN/card /:/( without/IN/without looking/VBG/looking /:/) from/IN/from the/DT/the closest/JJS/closest neighbor/NN/neighbor to/TO/to the/DT/the left/NN/left who/WP/who still/RB/still has/VBZ/has cards/NNP/cards. if/IN/if the/DT/the chosen/VBN/chosen card/NN/card matches/NNS/matches a/DT/a card/NN/card in/IN/in the/DT/the player/NN/player s/VBZ/s hand/NN/hand /,/, the/DT/the pair/NN/pair is/VBZ/is removed/NNP/removed. otherwise/RB/otherwise /,/, the/DT/the card/NN/card is/VBZ/is added/VBN/added to/TO/to the/DT/the player/NN/player s/VBZ/s hand/NNP/hand. eventually/RB/eventually all/DT/all possible/JJ/possible matches/NNS/matches are/VBP/are made/VBN/made /,/, leaving/VBG/leaving only/RB/only the/DT/the queen/NN/queen of/IN/of spades/NNS/spades in/IN/in the/DT/the loser/NN/loser s/VBZ/s hand/NNP/hand. in/IN/in our/PRP$/our computer/NN/computer simulation/NN/simulation of/IN/of the/DT/the game/NN/game /,/, the/DT/the computer/NN/computer plays/VBZ/plays all/DT/all hands/NNP/hands. unfortunately/RB/unfortunately /,/, some/DT/some nuances/NNS/nuances of/IN/of the/DT/the real/JJ/real game/NN/game are/VBP/are lost/NNP/lost. in/IN/in a/DT/a real/JJ/real game/NN/game /,/, the/DT/the player/NN/player with/IN/with the/DT/the old/JJ/old maid/NN/maid goes/VBZ/goes to/TO/to some/DT/some effort/NN/effort to/TO/to get/VB/get their/PRP$/their neighbor/NN/neighbor to/TO/to pick/VB/pick that/IN/that card/NN/card /,/, by/IN/by displaying/NN/displaying it/PRP/it a/DT/a little/RB/little more/RBR/more prominently/RB/prominently /,/, or/CC/or perhaps/RB/perhaps failing/VBG/failing to/TO/to display/VB/display it/PRP/it more/JJR/more prominently/RB/prominently /,/, or/CC/or even/RB/even failing/VBG/failing to/TO/to fail/VB/fail to/TO/to display/VB/display that/IN/that card/NN/card more/JJR/more prominently/NNP/prominently. the/DT/the computer/NN/computer simply/RB/simply picks/VBZ/picks a/DT/a neighbor/NN/neighbor s/VBZ/s card/NN/card at/IN/at random/NNP/random. 16.6/CD/16.6 oldmaidhand/NN/oldmaidhand class/NN/class a/DT/a hand/NN/hand for/IN/for playing/NN/playing old/JJ/old maid/NN/maid requires/VBZ/requires some/DT/some abilities/NNS/abilities beyond/VBP/beyond the/DT/the general/JJ/general abilities/NNS/abilities of/IN/of a/DT/a hand/NNP/hand. we/PRP/we will/MD/will define/VB/define a/DT/a new/JJ/new class/NN/class /,/, oldmaidhand/NN/oldmaidhand /,/, that/IN/that inherits/NNS/inherits from/IN/from hand/NN/hand and/CC/and provides/VBZ/provides an/DT/an additional/JJ/additional method/NN/method called/VBN/called removematches/NNS/removematches /:/: 172/CD/172 inheritance/NN/inheritance class/NN/class oldmaidhand/NN/oldmaidhand /:/( hand/NN/hand /:/) /:/: def/NN/def removematches/NNS/removematches /:/( self/PRP/self /VBP/) /:/: count/NN/count =/:/= 0/-NONE-/0 originalcards/NNS/originalcards =/VBP/= self.cards/NNS/self.cards /:/[ /:/: /:/] for/IN/for card/NN/card in/IN/in originalcards/NNS/originalcards /:/: match/NN/match =/:/= card/NN/card /:/( 3/CD/3 /:/- card.suit/JJ/card.suit /,/, card.rank/JJ/card.rank /NN/) if/IN/if match/NN/match in/IN/in self.cards/NNS/self.cards /:/: self.cards.remove/JJ/self.cards.remove /NN/( card/NN/card /:/) self.cards.remove/JJ/self.cards.remove /NN/( match/NN/match /:/) print/NN/print hand/NN/hand %/NN/% s/VBZ/s /:/: %/NN/% s/NNS/s matches/NNS/matches %/NN/% s/NNS/s %/NN/% /:/( self.name,card,match/JJ/self.name,card,match /NN/) count/NN/count =/:/= count/NN/count +/:/+ 1/CD/1 return/NN/return count/NN/count we/PRP/we start/VBP/start by/IN/by making/VBG/making a/DT/a copy/NN/copy of/IN/of the/DT/the list/NN/list of/IN/of cards/NNS/cards /,/, so/RB/so that/IN/that we/PRP/we can/MD/can traverse/VB/traverse the/DT/the copy/NN/copy while/IN/while removing/VBG/removing cards/NNS/cards from/IN/from the/DT/the original/NNP/original. since/IN/since self.cards/NNS/self.cards is/VBZ/is modified/VBN/modified in/IN/in the/DT/the loop/NN/loop /,/, we/PRP/we don/VBP/don t/NN/t want/NN/want to/TO/to use/VB/use it/PRP/it to/TO/to control/NN/control the/DT/the traversal/NNP/traversal. python/NN/python can/MD/can get/VB/get quite/RB/quite confused/VBN/confused if/IN/if it/PRP/it is/VBZ/is traversing/VBG/traversing a/DT/a list/NN/list that/WDT/that is/VBZ/is changing/VBG/changing !/./! for/IN/for each/DT/each card/NN/card in/IN/in the/DT/the hand/NN/hand /,/, we/PRP/we figure/VBP/figure out/RP/out what/WP/what the/DT/the matching/VBG/matching card/NN/card is/VBZ/is and/CC/and go/VB/go looking/VBG/looking for/IN/for it/NNP/it. the/DT/the match/NN/match card/NN/card has/VBZ/has the/DT/the same/JJ/same rank/NN/rank and/CC/and the/DT/the other/JJ/other suit/NN/suit of/IN/of the/DT/the same/JJ/same color/NNP/color. the/DT/the expression/NN/expression 3/CD/3 /:/- card.suit/JJ/card.suit turns/NNS/turns a/DT/a club/NN/club /:/( suit/NN/suit 0/-NONE-/0 /./) into/IN/into a/DT/a spade/NN/spade /:/( suit/NN/suit 3/CD/3 /CD/) and/CC/and a/DT/a diamond/NN/diamond /:/( suit/NN/suit 1/CD/1 /CD/) into/IN/into a/DT/a heart/NN/heart /:/( suit/NN/suit 2/CD/2 /CD/) /./. you/PRP/you should/MD/should satisfy/VB/satisfy yourself/PRP/yourself that/IN/that the/DT/the opposite/JJ/opposite operations/NNS/operations also/RB/also work/NNP/work. if/IN/if the/DT/the match/NN/match card/NN/card is/VBZ/is also/RB/also in/IN/in the/DT/the hand/NN/hand /,/, both/DT/both cards/NNS/cards are/VBP/are removed/NNP/removed. the/DT/the following/VBG/following example/NN/example demonstrates/NNS/demonstrates how/WRB/how to/TO/to use/VB/use removematches/NNS/removematches /:/: >/:/> >/:/> >/:/> game/NN/game =/:/= cardgame/NN/cardgame /:/( /:/) >/:/> >/:/> >/:/> hand/NN/hand =/:/= oldmaidhand/NN/oldmaidhand /:/( frank/NN/frank /:/) >/:/> >/:/> >/:/> game.deck.deal/JJ/game.deck.deal /NN/( /:/[ hand/NN/hand /:/] /,/, 13/CD/13 /:/) >/CD/> >/CD/> >/CD/> print/NN/print hand/NN/hand hand/NN/hand frank/NN/frank contains/VBZ/contains ace/NN/ace of/IN/of spades/NNS/spades 2/CD/2 of/IN/of diamonds/NNS/diamonds 7/CD/7 of/IN/of spades/NNS/spades 8/CD/8 of/IN/of clubs/NNS/clubs 6/CD/6 of/IN/of hearts/NNS/hearts 8/CD/8 of/IN/of spades/NNS/spades 7/CD/7 of/IN/of clubs/NNS/clubs queen/IN/queen of/IN/of clubs/NNS/clubs 7/CD/7 of/IN/of diamonds/NNS/diamonds 5/CD/5 of/IN/of clubs/NNS/clubs jack/VBP/jack of/IN/of diamonds/NNS/diamonds 10/CD/10 of/IN/of diamonds/NNS/diamonds 10/CD/10 of/IN/of hearts/NNS/hearts 16.7/CD/16.7 oldmaidgame/NN/oldmaidgame class/NN/class 173/CD/173 >/CD/> >/CD/> >/CD/> hand.removematches/NNS/hand.removematches /:/( /:/) hand/NN/hand frank/NN/frank /:/: 7/CD/7 of/IN/of spades/NNS/spades matches/NNS/matches 7/CD/7 of/IN/of clubs/NNS/clubs hand/VBP/hand frank/NN/frank /:/: 8/CD/8 of/IN/of spades/NNS/spades matches/NNS/matches 8/CD/8 of/IN/of clubs/NNS/clubs hand/VBP/hand frank/NN/frank /:/: 10/CD/10 of/IN/of diamonds/NNS/diamonds matches/NNS/matches 10/CD/10 of/IN/of hearts/NNS/hearts >/:/> >/:/> >/:/> print/NN/print hand/NN/hand hand/NN/hand frank/NN/frank contains/VBZ/contains ace/NN/ace of/IN/of spades/NNS/spades 2/CD/2 of/IN/of diamonds/NNS/diamonds 6/CD/6 of/IN/of hearts/NNS/hearts queen/IN/queen of/IN/of clubs/NNS/clubs 7/CD/7 of/IN/of diamonds/NNS/diamonds 5/CD/5 of/IN/of clubs/NNS/clubs jack/VBP/jack of/IN/of diamonds/NNS/diamonds notice/NN/notice that/IN/that there/EX/there is/VBZ/is no/DT/no init/NN/init method/NN/method for/IN/for the/DT/the oldmaidhand/NN/oldmaidhand class/NNP/class. we/PRP/we inherit/VBP/inherit it/PRP/it from/IN/from hand/NNP/hand. 16.7/CD/16.7 oldmaidgame/NN/oldmaidgame class/NN/class now/RB/now we/PRP/we can/MD/can turn/VB/turn our/PRP$/our attention/NN/attention to/TO/to the/DT/the game/NN/game itself/NNP/itself. oldmaidgame/NN/oldmaidgame is/VBZ/is a/DT/a subclass/NN/subclass of/IN/of cardgame/NN/cardgame with/IN/with a/DT/a new/JJ/new method/NN/method called/VBN/called play/NN/play that/IN/that takes/VBZ/takes a/DT/a list/NN/list of/IN/of players/NNS/players as/IN/as an/DT/an argument/NNP/argument. since/IN/since init/NN/init is/VBZ/is inherited/VBN/inherited from/IN/from cardgame/NN/cardgame /,/, a/DT/a new/JJ/new oldmaidgame/NN/oldmaidgame object/NN/object contains/VBZ/contains a/DT/a new/JJ/new shuffled/VBN/shuffled deck/NN/deck /:/: class/NN/class oldmaidgame/NN/oldmaidgame /:/( cardgame/NN/cardgame /:/) /:/: def/NN/def play/NN/play /:/( self/NN/self /,/, names/VBZ/names /:/) /:/: #/#/# remove/IN/remove queen/CD/queen of/IN/of clubs/NNS/clubs self.deck.removecard/JJ/self.deck.removecard /NN/( card/NN/card /:/( 0,12/CD/0,12 /CD/) /CD/) #/#/# make/NN/make a/DT/a hand/NN/hand for/IN/for each/DT/each player/NN/player self.hands/NNS/self.hands =/:/= /:/[ /:/] for/IN/for name/NN/name in/IN/in names/NNS/names /:/: self.hands.append/JJ/self.hands.append /NN/( oldmaidhand/NN/oldmaidhand /:/( name/NN/name /:/) /:/) #/#/# deal/NN/deal the/DT/the cards/NNS/cards self.deck.deal/JJ/self.deck.deal /NN/( self.hands/NNS/self.hands /:/) print/NN/print /:/---------- cards/NNS/cards have/VBP/have been/VBN/been dealt/VBN/dealt self.printhands/NNS/self.printhands /:/( /:/) 174/CD/174 inheritance/NN/inheritance #/#/# remove/NN/remove initial/JJ/initial matches/NNS/matches matches/NNS/matches =/VBP/= self.removeallmatches/NNS/self.removeallmatches /:/( /:/) print/NN/print /:/---------- matches/NNS/matches discarded/VBD/discarded /,/, play/NN/play begins/VBZ/begins self.printhands/NNS/self.printhands /:/( /:/) #/#/# play/NN/play until/IN/until all/DT/all 50/CD/50 cards/NNS/cards are/VBP/are matched/VBN/matched turn/NN/turn =/:/= 0/-NONE-/0 numhands/NNS/numhands =/VBP/= len/VBN/len /-NONE-/( self.hands/NNS/self.hands /:/) while/IN/while matches/NNS/matches </:/< 25/CD/25 /:/: matches/NNS/matches =/VBP/= matches/NNS/matches +/:/+ self.playoneturn/JJ/self.playoneturn /NN/( turn/NN/turn /:/) turn/NN/turn =/:/= /:/( turn/NN/turn +/:/+ 1/CD/1 /CD/) %/NN/% numhands/NNS/numhands print/VBP/print /:/---------- game/NN/game is/VBZ/is over/IN/over self.printhands/NNS/self.printhands /:/( /:/) some/DT/some of/IN/of the/DT/the steps/NNS/steps of/IN/of the/DT/the game/NN/game have/VBP/have been/VBN/been separated/VBN/separated into/IN/into methods/NNP/methods. removeallmatches/NNS/removeallmatches traverses/VBZ/traverses the/DT/the list/NN/list of/IN/of hands/NNS/hands and/CC/and invokes/VBZ/invokes removematches/NNS/removematches on/IN/on each/DT/each /:/: class/NN/class oldmaidgame/NN/oldmaidgame /:/( cardgame/NN/cardgame /:/) /:/: /:/... def/NN/def removeallmatches/NNS/removeallmatches /:/( self/PRP/self /VBP/) /:/: count/NN/count =/:/= 0/-NONE-/0 for/IN/for hand/NN/hand in/IN/in self.hands/NNS/self.hands /:/: count/NN/count =/:/= count/NN/count +/:/+ hand.removematches/NNS/hand.removematches /VBP/( /:/) return/NN/return count/NN/count as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write printhands/NNS/printhands which/WDT/which traverses/NNS/traverses self.hands/VBZ/self.hands and/CC/and prints/NNS/prints each/DT/each hand/NNP/hand. count/NN/count is/VBZ/is an/DT/an accumulator/NN/accumulator that/IN/that adds/VBZ/adds up/RP/up the/DT/the number/NN/number of/IN/of matches/NNS/matches in/IN/in each/DT/each hand/NN/hand and/CC/and returns/NNS/returns the/DT/the total/NNP/total. when/WRB/when the/DT/the total/JJ/total number/NN/number of/IN/of matches/NNS/matches reaches/NNS/reaches twenty-five/JJ/twenty-five /,/, fifty/JJ/fifty cards/NNS/cards have/VBP/have been/VBN/been removed/VBN/removed from/IN/from the/DT/the hands/NNS/hands /,/, which/WDT/which means/VBZ/means that/DT/that only/RB/only one/CD/one card/NN/card is/VBZ/is left/VBN/left and/CC/and the/DT/the game/NN/game is/VBZ/is over/NNP/over. the/DT/the variable/JJ/variable turn/NN/turn keeps/NNS/keeps track/VBP/track of/IN/of which/WDT/which player/NN/player s/VBZ/s turn/NN/turn it/PRP/it is/NNP/is. it/PRP/it starts/VBZ/starts at/IN/at 0/-NONE-/0 and/CC/and increases/NNS/increases by/IN/by one/CD/one each/DT/each time/NN/time ;/:/; when/WRB/when it/PRP/it reaches/VBZ/reaches numhands/NNS/numhands /,/, the/DT/the modulus/NN/modulus operator/NN/operator wraps/NNS/wraps it/PRP/it back/RB/back around/IN/around to/TO/to 0/CD/0. the/DT/the method/NN/method playoneturn/NN/playoneturn takes/VBZ/takes an/DT/an argument/NN/argument that/IN/that indicates/VBZ/indicates whose/WP$/whose turn/NN/turn it/PRP/it is/NNP/is. the/DT/the return/NN/return value/NN/value is/VBZ/is the/DT/the number/NN/number of/IN/of matches/NNS/matches made/VBN/made during/IN/during this/DT/this turn/NN/turn /:/: 16.7/CD/16.7 oldmaidgame/NN/oldmaidgame class/NN/class 175/CD/175 class/NN/class oldmaidgame/NN/oldmaidgame /:/( cardgame/NN/cardgame /:/) /:/: /:/... def/NN/def playoneturn/NN/playoneturn /:/( self/NN/self /,/, i/PRP/i /VBP/) /:/: if/IN/if self.hands/NNS/self.hands /VBP/[ i/PRP/i /VBP/] .isempty/JJ/.isempty /NN/( /:/) /:/: return/NN/return 0/-NONE-/0 neighbor/NN/neighbor =/:/= self.findneighbor/JJ/self.findneighbor /NN/( i/PRP/i /VBP/) pickedcard/RB/pickedcard =/:/= self.hands/NNS/self.hands /VBP/[ neighbor/NN/neighbor /:/] .popcard/JJ/.popcard /NN/( /:/) self.hands/NNS/self.hands /VBP/[ i/PRP/i /VBP/] .addcard/JJ/.addcard /NN/( pickedcard/NN/pickedcard /:/) print/NN/print hand/NN/hand /,/, self.hands/NNS/self.hands /:/[ i/PRP/i /VBP/] .name/JJ/.name /,/, picked/VBD/picked /,/, pickedcard/NN/pickedcard count/NN/count =/:/= self.hands/NNS/self.hands /VBP/[ i/PRP/i /VBP/] .removematches/NNS/.removematches /:/( /:/) self.hands/NNS/self.hands /VBP/[ i/PRP/i /VBP/] .shuffle/JJ/.shuffle /NN/( /:/) return/NN/return count/NN/count if/IN/if a/DT/a player/NN/player s/VBZ/s hand/NN/hand is/VBZ/is empty/JJ/empty /,/, that/IN/that player/NN/player is/VBZ/is out/RP/out of/IN/of the/DT/the game/NN/game /,/, so/RB/so he/PRP/he or/CC/or she/PRP/she does/VBZ/does nothing/NN/nothing and/CC/and returns/NNS/returns 0/CD/0. otherwise/NN/otherwise /,/, a/DT/a turn/NN/turn consists/VBZ/consists of/IN/of finding/NN/finding the/DT/the first/JJ/first player/NN/player on/IN/on the/DT/the left/NN/left that/IN/that has/VBZ/has cards/NNS/cards /,/, taking/VBG/taking one/CD/one card/NN/card from/IN/from the/DT/the neighbor/NN/neighbor /,/, and/CC/and checking/NN/checking for/IN/for matches/NNP/matches. before/IN/before returning/VBG/returning /,/, the/DT/the cards/NNS/cards in/IN/in the/DT/the hand/NN/hand are/VBP/are shuffled/VBN/shuffled so/RB/so that/IN/that the/DT/the next/JJ/next player/NN/player s/NNS/s choice/NN/choice is/VBZ/is random/NNP/random. the/DT/the method/NN/method findneighbor/NN/findneighbor starts/VBZ/starts with/IN/with the/DT/the player/NN/player to/TO/to the/DT/the immediate/JJ/immediate left/NN/left and/CC/and continues/VBZ/continues around/IN/around the/DT/the circle/NN/circle until/IN/until it/PRP/it finds/VBZ/finds a/DT/a player/NN/player that/WDT/that still/RB/still has/VBZ/has cards/NNS/cards /:/: class/NN/class oldmaidgame/NN/oldmaidgame /:/( cardgame/NN/cardgame /:/) /:/: /:/... def/NN/def findneighbor/NN/findneighbor /:/( self/NN/self /,/, i/PRP/i /VBP/) /:/: numhands/NNS/numhands =/VBP/= len/VBN/len /-NONE-/( self.hands/NNS/self.hands /:/) for/IN/for next/JJ/next in/IN/in range/NN/range /:/( 1,numhands/CD/1,numhands /CD/) /:/: neighbor/NN/neighbor =/:/= /:/( i/PRP/i +/VBP/+ next/JJ/next /NN/) %/NN/% numhands/NNS/numhands if/IN/if not/RB/not self.hands/NNS/self.hands /:/[ neighbor/NN/neighbor /:/] .isempty/JJ/.isempty /NN/( /:/) /:/: return/NN/return neighbor/NN/neighbor if/IN/if findneighbor/NN/findneighbor ever/RB/ever went/VBD/went all/DT/all the/DT/the way/NN/way around/IN/around the/DT/the circle/NN/circle without/IN/without finding/NN/finding cards/NNS/cards /,/, it/PRP/it would/MD/would return/VB/return none/NN/none and/CC/and cause/VB/cause an/DT/an error/NN/error elsewhere/RB/elsewhere in/IN/in the/DT/the program/NNP/program. fortunately/RB/fortunately /,/, we/PRP/we can/MD/can prove/VB/prove that/IN/that that/DT/that will/MD/will never/RB/never happen/VB/happen /:/( as/IN/as long/RB/long as/IN/as the/DT/the end/NN/end of/IN/of the/DT/the game/NN/game is/VBZ/is detected/VBN/detected correctly/RB/correctly /:/) /./. we/PRP/we have/VBP/have omitted/VBN/omitted the/DT/the printhands/NNS/printhands method/NNP/method. you/PRP/you can/MD/can write/VB/write that/IN/that one/CD/one yourself/NNP/yourself. the/DT/the following/VBG/following output/NN/output is/VBZ/is from/IN/from a/DT/a truncated/VBN/truncated form/NN/form of/IN/of the/DT/the game/NN/game where/WRB/where only/RB/only the/DT/the top/JJ/top fifteen/NN/fifteen cards/NNS/cards /:/( tens/NNS/tens and/CC/and higher/JJR/higher /:/) were/VBD/were dealt/VBN/dealt to/TO/to three/CD/three players/NNP/players. with/IN/with this/DT/this small/JJ/small deck/NN/deck /,/, play/NN/play stops/NNS/stops after/IN/after seven/CD/seven matches/NNS/matches instead/RB/instead of/IN/of twenty-five/NNP/twenty-five. >/NNP/> >/NNP/> >/NNP/> import/NN/import cards/NNS/cards >/:/> >/:/> >/:/> game/NN/game =/:/= cards.oldmaidgame/JJ/cards.oldmaidgame /NN/( /:/) >/:/> >/:/> >/:/> game.play/JJ/game.play /NN/( /:/[ allen,jeff,chris/NNP/allen,jeff,chris /:/] /:/) 176/CD/176 inheritance/NN/inheritance /:/---------- cards/NNS/cards have/VBP/have been/VBN/been dealt/VBN/dealt hand/NN/hand allen/NN/allen contains/VBZ/contains king/VBG/king of/IN/of hearts/NNS/hearts jack/VBP/jack of/IN/of clubs/NNS/clubs queen/IN/queen of/IN/of spades/NNS/spades king/VBG/king of/IN/of spades/NNS/spades 10/CD/10 of/IN/of diamonds/NNS/diamonds hand/VBP/hand jeff/NN/jeff contains/NNS/contains queen/IN/queen of/IN/of hearts/NNS/hearts jack/VBP/jack of/IN/of spades/NNS/spades jack/VBP/jack of/IN/of hearts/NNS/hearts king/VBG/king of/IN/of diamonds/NNS/diamonds queen/IN/queen of/IN/of diamonds/NNS/diamonds hand/VBP/hand chris/NNS/chris contains/NNS/contains jack/VBP/jack of/IN/of diamonds/NNS/diamonds king/VBG/king of/IN/of clubs/NNS/clubs 10/CD/10 of/IN/of spades/NNS/spades 10/CD/10 of/IN/of hearts/NNS/hearts 10/CD/10 of/IN/of clubs/NNS/clubs hand/VBP/hand jeff/NN/jeff /:/: queen/IN/queen of/IN/of hearts/NNS/hearts matches/NNS/matches queen/VBP/queen of/IN/of diamonds/NNS/diamonds hand/VBP/hand chris/NNS/chris /:/: 10/CD/10 of/IN/of spades/NNS/spades matches/NNS/matches 10/CD/10 of/IN/of clubs/NNS/clubs /:/---------- matches/NNS/matches discarded/VBD/discarded /,/, play/NN/play begins/VBZ/begins hand/NN/hand allen/NN/allen contains/VBZ/contains king/VBG/king of/IN/of hearts/NNS/hearts jack/VBP/jack of/IN/of clubs/NNS/clubs queen/IN/queen of/IN/of spades/NNS/spades king/VBG/king of/IN/of spades/NNS/spades 10/CD/10 of/IN/of diamonds/NNS/diamonds hand/VBP/hand jeff/NN/jeff contains/NNS/contains jack/VBP/jack of/IN/of spades/NNS/spades jack/VBP/jack of/IN/of hearts/NNS/hearts king/VBG/king of/IN/of diamonds/NNS/diamonds hand/VBP/hand chris/NNS/chris contains/NNS/contains jack/VBP/jack of/IN/of diamonds/NNS/diamonds king/VBG/king of/IN/of clubs/NNS/clubs 10/CD/10 of/IN/of hearts/NNS/hearts 16.8/CD/16.8 glossary/JJ/glossary 177/CD/177 hand/NN/hand allen/NN/allen picked/VBD/picked king/VBG/king of/IN/of diamonds/NNS/diamonds hand/VBP/hand allen/VBN/allen /:/: king/VBG/king of/IN/of hearts/NNS/hearts matches/NNS/matches king/VBG/king of/IN/of diamonds/NNS/diamonds hand/VBP/hand jeff/NN/jeff picked/VBN/picked 10/CD/10 of/IN/of hearts/NNS/hearts hand/VBP/hand chris/NNS/chris picked/VBN/picked jack/NN/jack of/IN/of clubs/NNS/clubs hand/VBP/hand allen/VBN/allen picked/VBN/picked jack/NN/jack of/IN/of hearts/NNS/hearts hand/VBP/hand jeff/NN/jeff picked/VBN/picked jack/NN/jack of/IN/of diamonds/NNS/diamonds hand/VBP/hand chris/NNS/chris picked/VBN/picked queen/NNS/queen of/IN/of spades/NNS/spades hand/VBP/hand allen/VBN/allen picked/VBN/picked jack/NN/jack of/IN/of diamonds/NNS/diamonds hand/VBP/hand allen/VBN/allen /:/: jack/NN/jack of/IN/of hearts/NNS/hearts matches/NNS/matches jack/VBP/jack of/IN/of diamonds/NNS/diamonds hand/VBP/hand jeff/NN/jeff picked/VBN/picked king/VBG/king of/IN/of clubs/NNS/clubs hand/VBP/hand chris/NNS/chris picked/VBN/picked king/VBG/king of/IN/of spades/NNS/spades hand/VBP/hand allen/VBN/allen picked/VBN/picked 10/CD/10 of/IN/of hearts/NNS/hearts hand/VBP/hand allen/VBN/allen /:/: 10/CD/10 of/IN/of diamonds/NNS/diamonds matches/NNS/matches 10/CD/10 of/IN/of hearts/NNS/hearts hand/VBP/hand jeff/NN/jeff picked/VBN/picked queen/NN/queen of/IN/of spades/NNS/spades hand/VBP/hand chris/NNS/chris picked/VBN/picked jack/NN/jack of/IN/of spades/NNS/spades hand/VBP/hand chris/NNS/chris /:/: jack/NN/jack of/IN/of clubs/NNS/clubs matches/NNS/matches jack/VBP/jack of/IN/of spades/NNS/spades hand/VBP/hand jeff/NN/jeff picked/VBN/picked king/VBG/king of/IN/of spades/NNS/spades hand/VBP/hand jeff/NN/jeff /:/: king/VBG/king of/IN/of clubs/NNS/clubs matches/NNS/matches king/VBG/king of/IN/of spades/NNS/spades /:/---------- game/NN/game is/VBZ/is over/IN/over hand/NN/hand allen/NN/allen is/VBZ/is empty/JJ/empty hand/NN/hand jeff/NN/jeff contains/VBZ/contains queen/VBN/queen of/IN/of spades/NNS/spades hand/VBP/hand chris/NNS/chris is/VBZ/is empty/JJ/empty so/RB/so jeff/IN/jeff loses/NNP/loses. 16.8/CD/16.8 glossary/JJ/glossary inheritance/NN/inheritance /:/: the/DT/the ability/NN/ability to/TO/to define/VB/define a/DT/a new/JJ/new class/NN/class that/WDT/that is/VBZ/is a/DT/a modified/VBN/modified version/NN/version of/IN/of a/DT/a previously/RB/previously defined/VBN/defined class/NNP/class. parent/NN/parent class/NN/class /:/: the/DT/the class/NN/class from/IN/from which/WDT/which a/DT/a child/NN/child class/NN/class inherits/NNP/inherits. child/NN/child class/NN/class /:/: a/DT/a new/JJ/new class/NN/class created/VBN/created by/IN/by inheriting/NN/inheriting from/IN/from an/DT/an existing/VBG/existing class/NN/class ;/:/; also/RB/also called/VBN/called a/DT/a subclass/NNP/subclass. 178/CD/178 inheritance/NN/inheritance chapter/NN/chapter 17/CD/17 linked/VBN/linked lists/NNS/lists 17.1/CD/17.1 embedded/VBD/embedded references/NNS/references we/PRP/we have/VBP/have seen/VBN/seen examples/NNS/examples of/IN/of attributes/NNS/attributes that/WDT/that refer/NN/refer to/TO/to other/JJ/other objects/NNS/objects /,/, which/WDT/which we/PRP/we called/VBD/called embedded/VBN/embedded references/NNS/references /:/( see/VB/see section/NN/section 12.8/CD/12.8 /CD/) /./. a/DT/a common/JJ/common data/NNS/data structure/NN/structure /,/, the/DT/the linked/VBN/linked list/NN/list /,/, takes/VBZ/takes advantage/NN/advantage of/IN/of this/DT/this feature/NNP/feature. linked/VBD/linked lists/NNS/lists are/VBP/are made/VBN/made up/RP/up of/IN/of nodes/NNS/nodes /,/, where/WRB/where each/DT/each node/NN/node contains/VBZ/contains a/DT/a reference/NN/reference to/TO/to the/DT/the next/JJ/next node/NN/node in/IN/in the/DT/the list/NNP/list. in/IN/in addition/NN/addition /,/, each/DT/each node/NN/node contains/VBZ/contains a/DT/a unit/NN/unit of/IN/of data/NNS/data called/VBN/called the/DT/the cargo/NNP/cargo. a/DT/a linked/VBN/linked list/NN/list is/VBZ/is considered/VBN/considered a/DT/a recursive/JJ/recursive data/NNS/data structure/NN/structure because/IN/because it/PRP/it has/VBZ/has a/DT/a recursive/JJ/recursive definition/NNP/definition. a/DT/a linked/VBN/linked list/NN/list is/VBZ/is either/DT/either /:/: the/DT/the empty/NN/empty list/NN/list /,/, represented/VBD/represented by/IN/by none/NN/none /,/, or/CC/or a/DT/a node/NN/node that/WDT/that contains/VBZ/contains a/DT/a cargo/NN/cargo object/NN/object and/CC/and a/DT/a reference/NN/reference to/TO/to a/DT/a linked/VBN/linked list/NNP/list. recursive/JJ/recursive data/NNS/data structures/NNS/structures lend/VBP/lend themselves/PRP/themselves to/TO/to recursive/VB/recursive methods/NNP/methods. 17.2/CD/17.2 the/DT/the node/NN/node class/NN/class as/IN/as usual/JJ/usual when/WRB/when writing/VBG/writing a/DT/a new/JJ/new class/NN/class /,/, we/PRP/we ll/VBP/ll start/NN/start with/IN/with the/DT/the initialization/NN/initialization and/CC/and str/NN/str methods/NNS/methods so/RB/so that/IN/that we/PRP/we can/MD/can test/VB/test the/DT/the basic/JJ/basic mechanism/NN/mechanism of/IN/of creating/VBG/creating and/CC/and displaying/VBG/displaying the/DT/the new/JJ/new type/NN/type /:/: 180/CD/180 linked/VBN/linked lists/NNS/lists class/NN/class node/NN/node /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /,/, cargo/NN/cargo =/:/= none/NN/none /,/, next/JJ/next =/NN/= none/NN/none /:/) /:/: self.cargo/JJ/self.cargo =/NN/= cargo/NN/cargo self.next/JJ/self.next =/NN/= next/IN/next def/NN/def __str__/NNP/__str__ /NNP/( self/NN/self /:/) /:/: return/NN/return str/NN/str /:/( self.cargo/JJ/self.cargo /NN/) as/IN/as usual/JJ/usual /,/, the/DT/the parameters/NNS/parameters for/IN/for the/DT/the initialization/NN/initialization method/NN/method are/VBP/are optional/NNP/optional. by/IN/by default/NN/default /,/, both/DT/both the/DT/the cargo/NN/cargo and/CC/and the/DT/the link/NN/link /,/, next/JJ/next /,/, are/VBP/are set/VBN/set to/TO/to none/NNP/none. the/DT/the string/NN/string representation/NN/representation of/IN/of a/DT/a node/NN/node is/VBZ/is just/RB/just the/DT/the string/NN/string representation/NN/representation of/IN/of the/DT/the cargo/NNP/cargo. since/IN/since any/DT/any value/NN/value can/MD/can be/VB/be passed/VBN/passed to/TO/to the/DT/the str/NN/str function/NN/function /,/, we/PRP/we can/MD/can store/VB/store any/DT/any value/NN/value in/IN/in a/DT/a list/NNP/list. to/TO/to test/NN/test the/DT/the implementation/NN/implementation so/RB/so far/RB/far /,/, we/PRP/we can/MD/can create/VB/create a/DT/a node/NN/node and/CC/and print/VBP/print it/PRP/it /:/: >/:/> >/:/> >/:/> node/NN/node =/:/= node/NN/node /:/( test/NN/test /:/) >/:/> >/:/> >/:/> print/NN/print node/NN/node test/NN/test to/TO/to make/VB/make it/PRP/it interesting/JJ/interesting /,/, we/PRP/we need/VBP/need a/DT/a list/NN/list with/IN/with more/JJR/more than/IN/than one/CD/one node/NN/node /:/: >/:/> >/:/> >/:/> node1/NNP/node1 =/:/= node/NN/node /:/( 1/CD/1 /CD/) >/CD/> >/CD/> >/CD/> node2/NNP/node2 =/NNP/= node/NN/node /:/( 2/CD/2 /CD/) >/CD/> >/CD/> >/CD/> node3/NNP/node3 =/NNP/= node/NN/node /:/( 3/CD/3 /CD/) this/DT/this code/NN/code creates/VBZ/creates three/CD/three nodes/NNS/nodes /,/, but/CC/but we/PRP/we don/VBP/don t/NN/t have/VBP/have a/DT/a list/NN/list yet/RB/yet because/IN/because the/DT/the nodes/NNS/nodes are/VBP/are not/RB/not linked/NNP/linked. the/DT/the state/NN/state diagram/NN/diagram looks/NNS/looks like/IN/like this/DT/this /:/: cargo/NN/cargo next/IN/next 2/CD/2 node2/NNP/node2 none/NN/none cargo/NN/cargo next/IN/next 1/CD/1 node1/NNP/node1 none/NN/none cargo/NN/cargo next/IN/next 3/CD/3 node3/NNP/node3 none/NN/none to/TO/to link/VB/link the/DT/the nodes/NNS/nodes /,/, we/PRP/we have/VBP/have to/TO/to make/VB/make the/DT/the first/JJ/first node/NN/node refer/NN/refer to/TO/to the/DT/the second/JJ/second and/CC/and the/DT/the second/JJ/second node/NN/node refer/NN/refer to/TO/to the/DT/the third/JJ/third /:/: >/:/> >/:/> >/:/> node1.next/JJ/node1.next =/NN/= node2/NNP/node2 >/NNP/> >/NNP/> >/NNP/> node2.next/NNP/node2.next =/NNP/= node3/NNP/node3 the/DT/the reference/NN/reference of/IN/of the/DT/the third/JJ/third node/NN/node is/VBZ/is none/NN/none /,/, which/WDT/which indicates/VBZ/indicates that/IN/that it/PRP/it is/VBZ/is the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. now/RB/now the/DT/the state/NN/state diagram/NN/diagram looks/NNS/looks like/IN/like this/DT/this /:/: 17.3/CD/17.3 lists/NNS/lists as/IN/as collections/NNS/collections 181/CD/181 cargo/NN/cargo next/IN/next 1/CD/1 node1/NNP/node1 cargo/NN/cargo next/IN/next 2/CD/2 node2/NNP/node2 cargo/NN/cargo next/IN/next 3/CD/3 node3/NNP/node3 none/NN/none now/RB/now you/PRP/you know/VBP/know how/WRB/how to/TO/to create/VB/create nodes/NNS/nodes and/CC/and link/NN/link them/PRP/them into/IN/into lists/NNP/lists. what/WP/what might/MD/might be/VB/be less/RBR/less clear/JJ/clear at/IN/at this/DT/this point/NN/point is/VBZ/is why/NNP/why. 17.3/CD/17.3 lists/NNS/lists as/IN/as collections/NNS/collections lists/NNS/lists are/VBP/are useful/JJ/useful because/IN/because they/PRP/they provide/VBP/provide a/DT/a way/NN/way to/TO/to assemble/VB/assemble multiple/NN/multiple objects/NNS/objects into/IN/into a/DT/a single/JJ/single entity/NN/entity /,/, sometimes/RB/sometimes called/VBN/called a/DT/a collection/NNP/collection. in/IN/in the/DT/the example/NN/example /,/, the/DT/the first/JJ/first node/NN/node of/IN/of the/DT/the list/NN/list serves/VBZ/serves as/IN/as a/DT/a reference/NN/reference to/TO/to the/DT/the entire/JJ/entire list/NNP/list. to/TO/to pass/VB/pass the/DT/the list/NN/list as/IN/as an/DT/an argument/NN/argument /,/, we/PRP/we only/RB/only have/VBP/have to/TO/to pass/VB/pass a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first node/NNP/node. for/IN/for example/NN/example /,/, the/DT/the function/NN/function printlist/NN/printlist takes/VBZ/takes a/DT/a single/JJ/single node/NN/node as/IN/as an/DT/an argument/NNP/argument. starting/NN/starting with/IN/with the/DT/the head/NN/head of/IN/of the/DT/the list/NN/list /,/, it/PRP/it prints/VBZ/prints each/DT/each node/NN/node until/IN/until it/PRP/it gets/VBZ/gets to/TO/to the/DT/the end/NN/end /:/: def/NN/def printlist/NN/printlist /:/( node/NN/node /:/) /:/: while/IN/while node/NN/node /:/: print/NN/print node/NN/node /,/, node/NN/node =/:/= node.next/JJ/node.next print/NN/print to/TO/to invoke/VB/invoke this/DT/this function/NN/function /,/, we/PRP/we pass/VBP/pass a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first node/NN/node /:/: >/:/> >/:/> >/:/> printlist/NN/printlist /:/( node1/NNP/node1 /:/) 1/CD/1 2/CD/2 3/CD/3 inside/NN/inside printlist/NN/printlist we/PRP/we have/VBP/have a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first node/NN/node of/IN/of the/DT/the list/NN/list /,/, but/CC/but there/EX/there is/VBZ/is no/DT/no variable/JJ/variable that/IN/that refers/NNS/refers to/TO/to the/DT/the other/JJ/other nodes/NNP/nodes. we/PRP/we have/VBP/have to/TO/to use/VB/use the/DT/the next/JJ/next value/NN/value from/IN/from each/DT/each node/NN/node to/TO/to get/VB/get to/TO/to the/DT/the next/JJ/next node/NNP/node. to/TO/to traverse/VB/traverse a/DT/a linked/VBN/linked list/NN/list /,/, it/PRP/it is/VBZ/is common/JJ/common to/TO/to use/VB/use a/DT/a loop/NN/loop variable/JJ/variable like/IN/like node/NN/node to/TO/to refer/VB/refer to/TO/to each/DT/each of/IN/of the/DT/the nodes/NNS/nodes in/IN/in succession/NNP/succession. this/DT/this diagram/NN/diagram shows/VBZ/shows the/DT/the nodes/NNS/nodes in/IN/in the/DT/the list/NN/list and/CC/and the/DT/the values/NNS/values that/WDT/that node/NN/node takes/VBZ/takes on/IN/on /:/: 182/CD/182 linked/VBN/linked lists/NNS/lists node1/NNP/node1 cargo/NN/cargo y/NN/y 1/CD/1 cargo/NN/cargo y/NN/y 2/CD/2 node2/NNP/node2 cargo/NN/cargo y/NN/y 3/CD/3 node3/NNP/node3 none/NN/none node/NN/node by/IN/by convention/NN/convention /,/, lists/NNS/lists are/VBP/are often/RB/often printed/VBN/printed in/IN/in brackets/NNS/brackets with/IN/with commas/NNS/commas between/IN/between the/DT/the elements/NNS/elements /,/, as/IN/as in/IN/in /NNP/[ 1/CD/1 /,/, 2/CD/2 /,/, 3/CD/3 /:/] /./. as/IN/as an/DT/an exercise/NN/exercise /,/, modify/NN/modify printlist/NN/printlist so/RB/so that/IN/that it/PRP/it generates/VBZ/generates output/NN/output in/IN/in this/DT/this format/NNP/format. 17.4/CD/17.4 lists/NNS/lists and/CC/and recursion/NN/recursion it/PRP/it is/VBZ/is natural/JJ/natural to/TO/to express/NN/express many/JJ/many list/NN/list operations/NNS/operations using/VBG/using recursive/JJ/recursive methods/NNP/methods. for/IN/for example/NN/example /,/, the/DT/the following/VBG/following is/VBZ/is a/DT/a recursive/JJ/recursive algorithm/NN/algorithm for/IN/for printing/NN/printing a/DT/a list/NN/list backwards/NNS/backwards /:/: 1/CD/1. separate/JJ/separate the/DT/the list/NN/list into/IN/into two/CD/two pieces/NNS/pieces /:/: the/DT/the first/JJ/first node/NN/node /:/( called/VBN/called the/DT/the head/NN/head /:/) ;/:/; and/CC/and the/DT/the rest/NN/rest /:/( called/VBN/called the/DT/the tail/NN/tail /:/) /./. 2/CD/2. print/NN/print the/DT/the tail/NN/tail backward/NNP/backward. 3/CD/3. print/NN/print the/DT/the head/NNP/head. of/IN/of course/NN/course /,/, step/VB/step 2/CD/2 /,/, the/DT/the recursive/JJ/recursive call/NN/call /,/, assumes/VBZ/assumes that/IN/that we/PRP/we have/VBP/have a/DT/a way/NN/way of/IN/of printing/VBG/printing a/DT/a list/NN/list backward/NNP/backward. but/CC/but if/IN/if we/PRP/we assume/VBP/assume that/IN/that the/DT/the recursive/JJ/recursive call/NN/call works/NNS/works the/DT/the leap/NN/leap of/IN/of faith/NN/faith then/RB/then we/PRP/we can/MD/can convince/VB/convince ourselves/NNS/ourselves that/WDT/that this/DT/this algorithm/NN/algorithm works/NNP/works. all/DT/all we/PRP/we need/VBP/need are/VBP/are a/DT/a base/NN/base case/NN/case and/CC/and a/DT/a way/NN/way of/IN/of proving/VBG/proving that/IN/that for/IN/for any/DT/any list/NN/list /,/, we/PRP/we will/MD/will eventually/RB/eventually get/VB/get to/TO/to the/DT/the base/NN/base case/NNP/case. given/NN/given the/DT/the recursive/JJ/recursive definition/NN/definition of/IN/of a/DT/a list/NN/list /,/, a/DT/a natural/JJ/natural base/NN/base case/NN/case is/VBZ/is the/DT/the empty/NN/empty list/NN/list /,/, represented/VBD/represented by/IN/by none/NN/none /:/: def/NN/def printbackward/NN/printbackward /:/( list/NN/list /:/) /:/: if/IN/if list/NN/list =/:/= =/:/= none/NN/none /:/: return/NN/return head/NN/head =/:/= list/NN/list tail/NN/tail =/:/= list.next/JJ/list.next printbackward/NN/printbackward /:/( tail/NN/tail /:/) print/NN/print head/NN/head /,/, the/DT/the first/JJ/first line/NN/line handles/NNS/handles the/DT/the base/NN/base case/NN/case by/IN/by doing/NN/doing nothing/NNP/nothing. the/DT/the next/JJ/next two/CD/two lines/NNS/lines split/NN/split the/DT/the list/NN/list into/IN/into head/NN/head and/CC/and tail/NNP/tail. the/DT/the last/JJ/last two/CD/two lines/NNS/lines print/VBP/print the/DT/the list/NNP/list. the/DT/the comma/NN/comma at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the last/JJ/last line/NN/line keeps/NNS/keeps python/VBP/python from/IN/from printing/VBG/printing a/DT/a newline/NN/newline after/IN/after each/DT/each node/NNP/node. 17.5/CD/17.5 infinite/NN/infinite lists/NNS/lists 183/CD/183 we/PRP/we invoke/VBP/invoke this/DT/this function/NN/function as/IN/as we/PRP/we invoked/VBD/invoked printlist/NN/printlist /:/: >/:/> >/:/> >/:/> printbackward/NN/printbackward /:/( node1/NNP/node1 /:/) 3/CD/3 2/CD/2 1/CD/1 the/DT/the result/NN/result is/VBZ/is a/DT/a backward/NN/backward list/NNP/list. you/PRP/you might/MD/might wonder/VB/wonder why/WRB/why printlist/NN/printlist and/CC/and printbackward/NN/printbackward are/VBP/are functions/NNS/functions and/CC/and not/RB/not methods/NNS/methods in/IN/in the/DT/the node/NN/node class/NNP/class. the/DT/the reason/NN/reason is/VBZ/is that/IN/that we/PRP/we want/VBP/want to/TO/to use/VB/use none/NN/none to/TO/to represent/VB/represent the/DT/the empty/NN/empty list/NN/list and/CC/and it/PRP/it is/VBZ/is not/RB/not legal/JJ/legal to/TO/to invoke/VB/invoke a/DT/a method/NN/method on/IN/on none/NNP/none. this/DT/this limitation/NN/limitation makes/VBZ/makes it/PRP/it awkward/RB/awkward to/TO/to write/VB/write list-manipulating/JJ/list-manipulating code/NN/code in/IN/in a/DT/a clean/JJ/clean object-oriented/JJ/object-oriented style/NNP/style. can/MD/can we/PRP/we prove/VBP/prove that/IN/that printbackward/NN/printbackward will/MD/will always/RB/always terminate/VB/terminate in/IN/in other/JJ/other words/NNS/words /,/, will/MD/will it/PRP/it always/RB/always reach/VBP/reach the/DT/the base/NN/base case/NN/case in/IN/in fact/NN/fact /,/, the/DT/the answer/NN/answer is/VBZ/is no/NNP/no. some/DT/some lists/NNS/lists will/MD/will make/VB/make this/DT/this function/NN/function crash/NNP/crash. 17.5/CD/17.5 infinite/NN/infinite lists/NNS/lists there/EX/there is/VBZ/is nothing/NN/nothing to/TO/to prevent/VB/prevent a/DT/a node/NN/node from/IN/from referring/VBG/referring back/RB/back to/TO/to an/DT/an earlier/JJR/earlier node/NN/node in/IN/in the/DT/the list/NN/list /,/, including/VBG/including itself/NNP/itself. for/IN/for example/NN/example /,/, this/DT/this figure/NN/figure shows/VBZ/shows a/DT/a list/NN/list with/IN/with two/CD/two nodes/NNS/nodes /,/, one/CD/one of/IN/of which/WDT/which refers/NNS/refers to/TO/to itself/PRP/itself /:/: cargo/NN/cargo next/IN/next 1/CD/1 cargo/NN/cargo next/IN/next 2/CD/2 list/NN/list if/IN/if we/PRP/we invoke/VBP/invoke printlist/VBP/printlist on/IN/on this/DT/this list/NN/list /,/, it/PRP/it will/MD/will loop/VB/loop forever/NNP/forever. if/IN/if we/PRP/we invoke/VBP/invoke printbackward/RB/printbackward /,/, it/PRP/it will/MD/will recurse/VB/recurse infinitely/NNP/infinitely. this/DT/this sort/NN/sort of/IN/of behavior/NN/behavior makes/VBZ/makes infinite/JJ/infinite lists/NNS/lists difficult/JJ/difficult to/TO/to work/VB/work with/NNP/with. nevertheless/NN/nevertheless /,/, they/PRP/they are/VBP/are occasionally/RB/occasionally useful/NNP/useful. for/IN/for example/NN/example /,/, we/PRP/we might/MD/might represent/VB/represent a/DT/a number/NN/number as/IN/as a/DT/a list/NN/list of/IN/of digits/NNS/digits and/CC/and use/VB/use an/DT/an infinite/JJ/infinite list/NN/list to/TO/to represent/VB/represent a/DT/a repeating/NN/repeating fraction/NNP/fraction. regardless/NN/regardless /,/, it/PRP/it is/VBZ/is problematic/JJ/problematic that/IN/that we/PRP/we can/MD/can not/RB/not prove/VB/prove that/IN/that printlist/NN/printlist and/CC/and printbackward/NN/printbackward terminate/NNP/terminate. the/DT/the best/JJS/best we/PRP/we can/MD/can do/VB/do is/VBZ/is the/DT/the hypothetical/JJ/hypothetical statement/NN/statement /,/, if/IN/if the/DT/the list/NN/list contains/VBZ/contains no/DT/no loops/NNS/loops /,/, then/RB/then these/DT/these functions/NNS/functions will/MD/will terminate/NNP/terminate. this/DT/this sort/NN/sort of/IN/of claim/NN/claim is/VBZ/is called/VBN/called a/DT/a precondition/NNP/precondition. it/PRP/it imposes/VBZ/imposes a/DT/a constraint/NN/constraint on/IN/on one/CD/one of/IN/of the/DT/the arguments/NNS/arguments and/CC/and describes/NNS/describes the/DT/the behavior/NN/behavior of/IN/of the/DT/the function/NN/function if/IN/if the/DT/the constraint/NN/constraint is/VBZ/is satisfied/NNP/satisfied. you/PRP/you will/MD/will see/VB/see more/RBR/more examples/NNS/examples soon/NNP/soon. 184/CD/184 linked/VBD/linked lists/NNS/lists 17.6/CD/17.6 the/DT/the fundamental/JJ/fundamental ambiguity/NN/ambiguity theorem/NN/theorem one/CD/one part/NN/part of/IN/of printbackward/NN/printbackward might/MD/might have/VB/have raised/VBN/raised an/DT/an eyebrow/NN/eyebrow /:/: head/NN/head =/:/= list/NN/list tail/NN/tail =/:/= list.next/JJ/list.next after/IN/after the/DT/the first/JJ/first assignment/NN/assignment /,/, head/NN/head and/CC/and list/NN/list have/VBP/have the/DT/the same/JJ/same type/NN/type and/CC/and the/DT/the same/JJ/same value/NNP/value. so/IN/so why/WRB/why did/VBD/did we/PRP/we create/VBP/create a/DT/a new/JJ/new variable/JJ/variable the/DT/the reason/NN/reason is/VBZ/is that/IN/that the/DT/the two/CD/two variables/NNS/variables play/VBP/play different/JJ/different roles/NNP/roles. we/PRP/we think/VBP/think of/IN/of head/NN/head as/IN/as a/DT/a reference/NN/reference to/TO/to a/DT/a single/JJ/single node/NN/node /,/, and/CC/and we/PRP/we think/VBP/think of/IN/of list/NN/list as/IN/as a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first node/NN/node of/IN/of a/DT/a list/NNP/list. these/DT/these roles/NNS/roles are/VBP/are not/RB/not part/NN/part of/IN/of the/DT/the program/NN/program ;/:/; they/PRP/they are/VBP/are in/IN/in the/DT/the mind/NN/mind of/IN/of the/DT/the programmer/NNP/programmer. in/IN/in general/JJ/general we/PRP/we can/MD/can t/VB/t tell/NN/tell by/IN/by looking/VBG/looking at/IN/at a/DT/a program/NN/program what/WP/what role/NN/role a/DT/a variable/JJ/variable plays/NNP/plays. this/DT/this ambiguity/NN/ambiguity can/MD/can be/VB/be useful/JJ/useful /,/, but/CC/but it/PRP/it can/MD/can also/RB/also make/VB/make programs/NNS/programs difficult/JJ/difficult to/TO/to read/NNP/read. we/PRP/we often/RB/often use/VBP/use variable/JJ/variable names/NNS/names like/IN/like node/NN/node and/CC/and list/NN/list to/TO/to document/NN/document how/WRB/how we/PRP/we intend/VBP/intend to/TO/to use/VB/use a/DT/a variable/JJ/variable and/CC/and sometimes/RB/sometimes create/VB/create additional/JJ/additional variables/NNS/variables to/TO/to disambiguate/NNP/disambiguate. we/PRP/we could/MD/could have/VB/have written/VBN/written printbackward/NN/printbackward without/IN/without head/NN/head and/CC/and tail/NN/tail /,/, which/WDT/which makes/VBZ/makes it/PRP/it more/JJR/more concise/NN/concise but/CC/but possibly/RB/possibly less/JJR/less clear/JJ/clear /:/: def/JJ/def printbackward/NN/printbackward /:/( list/NN/list /:/) /:/: if/IN/if list/NN/list =/:/= =/:/= none/NN/none /:/: return/NN/return printbackward/NN/printbackward /:/( list.next/JJ/list.next /NN/) print/NN/print list/NN/list /,/, looking/VBG/looking at/IN/at the/DT/the two/CD/two function/NN/function calls/NNS/calls /,/, we/PRP/we have/VBP/have to/TO/to remember/VB/remember that/IN/that printbackward/NN/printbackward treats/NNS/treats its/PRP$/its argument/NN/argument as/IN/as a/DT/a collection/NN/collection and/CC/and print/VBP/print treats/NNS/treats its/PRP$/its argument/NN/argument as/IN/as a/DT/a single/JJ/single object/NNP/object. the/DT/the fundamental/JJ/fundamental ambiguity/NN/ambiguity theorem/NN/theorem describes/VBZ/describes the/DT/the ambiguity/NN/ambiguity that/IN/that is/VBZ/is inherent/JJ/inherent in/IN/in a/DT/a reference/NN/reference to/TO/to a/DT/a node/NN/node /:/: a/DT/a variable/JJ/variable that/IN/that refers/NNS/refers to/TO/to a/DT/a node/NN/node might/MD/might treat/VB/treat the/DT/the node/NN/node as/IN/as a/DT/a single/JJ/single object/NN/object or/CC/or as/IN/as the/DT/the first/JJ/first in/IN/in a/DT/a list/NN/list of/IN/of nodes/NNP/nodes. 17.7/CD/17.7 modifying/VBG/modifying lists/NNS/lists there/RB/there are/VBP/are two/CD/two ways/NNS/ways to/TO/to modify/VB/modify a/DT/a linked/VBN/linked list/NNP/list. obviously/RB/obviously /,/, we/PRP/we can/MD/can change/VB/change the/DT/the cargo/NN/cargo of/IN/of one/CD/one of/IN/of the/DT/the nodes/NNS/nodes /,/, but/CC/but the/DT/the more/RBR/more interesting/JJ/interesting operations/NNS/operations are/VBP/are the/DT/the ones/NNS/ones that/WDT/that add/VBP/add /,/, remove/IN/remove /,/, or/CC/or reorder/NN/reorder the/DT/the nodes/NNP/nodes. as/IN/as an/DT/an example/NN/example /,/, let/VB/let s/NNS/s write/VB/write a/DT/a function/NN/function that/WDT/that removes/VBZ/removes the/DT/the second/JJ/second node/NN/node in/IN/in the/DT/the list/NN/list and/CC/and returns/NNS/returns a/DT/a reference/NN/reference to/TO/to the/DT/the removed/JJ/removed node/NN/node /:/: 17.8/CD/17.8 wrappers/NNS/wrappers and/CC/and helpers/NNS/helpers 185/CD/185 def/NN/def removesecond/NN/removesecond /:/( list/NN/list /:/) /:/: if/IN/if list/NN/list =/:/= =/:/= none/NN/none /:/: return/NN/return first/RB/first =/./= list/NN/list second/NN/second =/:/= list.next/JJ/list.next #/#/# make/NN/make the/DT/the first/JJ/first node/NN/node refer/NN/refer to/TO/to the/DT/the third/JJ/third first.next/JJ/first.next =/NN/= second.next/JJ/second.next #/#/# separate/JJ/separate the/DT/the second/JJ/second node/NN/node from/IN/from the/DT/the rest/NN/rest of/IN/of the/DT/the list/NN/list second.next/JJ/second.next =/NN/= none/NN/none return/NN/return second/NN/second again/RB/again /,/, we/PRP/we are/VBP/are using/VBG/using temporary/JJ/temporary variables/NNS/variables to/TO/to make/VB/make the/DT/the code/NN/code more/JJR/more readable/NNP/readable. here/RB/here is/VBZ/is how/WRB/how to/TO/to use/VB/use this/DT/this function/NN/function /:/: >/:/> >/:/> >/:/> printlist/NN/printlist /:/( node1/NNP/node1 /:/) 1/CD/1 2/CD/2 3/CD/3 >/CD/> >/CD/> >/CD/> removed/VBN/removed =/-NONE-/= removesecond/IN/removesecond /NNP/( node1/NNP/node1 /NNP/) >/NNP/> >/NNP/> >/NNP/> printlist/NN/printlist /:/( removed/VBD/removed /CD/) 2/CD/2 >/CD/> >/CD/> >/CD/> printlist/NN/printlist /:/( node1/NNP/node1 /:/) 1/CD/1 3/CD/3 this/DT/this state/NN/state diagram/NN/diagram shows/VBZ/shows the/DT/the effect/NN/effect of/IN/of the/DT/the operation/NN/operation /:/: cargo/NN/cargo next/IN/next 1/CD/1 cargo/NN/cargo next/IN/next 2/CD/2 second/JJ/second cargo/NN/cargo next/IN/next 3/CD/3 none/NN/none first/RB/first what/WP/what happens/NNS/happens if/IN/if you/PRP/you invoke/VBP/invoke this/DT/this function/NN/function and/CC/and pass/NN/pass a/DT/a list/NN/list with/IN/with only/RB/only one/CD/one element/NN/element /:/( a/DT/a singleton/NN/singleton /:/) what/WP/what happens/NNS/happens if/IN/if you/PRP/you pass/VBP/pass the/DT/the empty/NN/empty list/NN/list as/IN/as an/DT/an argument/NN/argument is/VBZ/is there/EX/there a/DT/a precondition/NN/precondition for/IN/for this/DT/this function/NN/function if/IN/if so/RB/so /,/, fix/CD/fix the/DT/the function/NN/function to/TO/to handle/VB/handle a/DT/a violation/NN/violation of/IN/of the/DT/the precondition/NN/precondition in/IN/in a/DT/a reasonable/JJ/reasonable way/NNP/way. 17.8/CD/17.8 wrappers/NNS/wrappers and/CC/and helpers/NNS/helpers it/PRP/it is/VBZ/is often/RB/often useful/JJ/useful to/TO/to divide/VB/divide a/DT/a list/NN/list operation/NN/operation into/IN/into two/CD/two functions/NNP/functions. for/IN/for example/NN/example /,/, to/TO/to print/VB/print a/DT/a list/NN/list backward/NN/backward in/IN/in the/DT/the format/NN/format /:/[ 3/CD/3 2/CD/2 1/CD/1 /CD/] we/PRP/we can/MD/can use/VB/use the/DT/the printbackward/NN/printbackward function/NN/function to/TO/to print/VB/print 3/CD/3 2/CD/2 1/CD/1 but/CC/but we/PRP/we need/VBP/need a/DT/a separate/JJ/separate function/NN/function to/TO/to print/VB/print the/DT/the brackets/NNP/brackets. let/NN/let s/VBZ/s call/NN/call it/PRP/it printbackwardnicely/RB/printbackwardnicely /:/: 186/CD/186 linked/VBN/linked lists/NNS/lists def/IN/def printbackwardnicely/RB/printbackwardnicely /:/( list/NN/list /:/) /:/: print/NN/print /:/[ /,/, printbackward/NN/printbackward /:/( list/NN/list /:/) print/NN/print /:/] /,/, again/RB/again /,/, it/PRP/it is/VBZ/is a/DT/a good/JJ/good idea/NN/idea to/TO/to check/VB/check functions/NNS/functions like/IN/like this/DT/this to/TO/to see/VB/see if/IN/if they/PRP/they work/VBP/work with/IN/with special/JJ/special cases/NNS/cases like/IN/like an/DT/an empty/JJ/empty list/NN/list or/CC/or a/DT/a singleton/NNP/singleton. when/WRB/when we/PRP/we use/VBP/use this/DT/this function/NN/function elsewhere/RB/elsewhere in/IN/in the/DT/the program/NN/program /,/, we/PRP/we invoke/VBP/invoke printbackwardnicely/RB/printbackwardnicely directly/RB/directly /,/, and/CC/and it/PRP/it invokes/VBZ/invokes printbackward/NN/printbackward on/IN/on our/PRP$/our behalf/NNP/behalf. in/IN/in that/DT/that sense/NN/sense /,/, printbackwardnicely/RB/printbackwardnicely acts/VBZ/acts as/IN/as a/DT/a wrapper/NN/wrapper /,/, and/CC/and it/PRP/it uses/VBZ/uses printbackward/NN/printbackward as/IN/as a/DT/a helper/NNP/helper. 17.9/CD/17.9 the/DT/the linkedlist/NN/linkedlist class/NN/class there/EX/there are/VBP/are some/DT/some subtle/JJ/subtle problems/NNS/problems with/IN/with the/DT/the way/NN/way we/PRP/we have/VBP/have been/VBN/been implementing/VBG/implementing lists/NNP/lists. in/IN/in a/DT/a reversal/NN/reversal of/IN/of cause/NN/cause and/CC/and effect/NN/effect /,/, we/PRP/we ll/VBP/ll propose/VBP/propose an/DT/an alternative/JJ/alternative implementation/NN/implementation first/RB/first and/CC/and then/RB/then explain/VB/explain what/WP/what problems/NNS/problems it/PRP/it solves/NNP/solves. first/RB/first /,/, we/PRP/we ll/VBP/ll create/JJ/create a/DT/a new/JJ/new class/NN/class called/VBN/called linkedlist/NNP/linkedlist. its/PRP$/its attributes/NNS/attributes are/VBP/are an/DT/an integer/NN/integer that/IN/that contains/NNS/contains the/DT/the length/NN/length of/IN/of the/DT/the list/NN/list and/CC/and a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first node/NNP/node. linkedlist/NN/linkedlist objects/NNS/objects serve/VBP/serve as/IN/as handles/NNS/handles for/IN/for manipulating/VBG/manipulating lists/NNS/lists of/IN/of node/NN/node objects/NNS/objects /:/: class/NN/class linkedlist/NN/linkedlist /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /:/) /:/: self.length/JJ/self.length =/NN/= 0/-NONE-/0 self.head/JJ/self.head =/NN/= none/NN/none one/CD/one nice/NN/nice thing/NN/thing about/IN/about the/DT/the linkedlist/NN/linkedlist class/NN/class is/VBZ/is that/IN/that it/PRP/it provides/VBZ/provides a/DT/a natural/JJ/natural place/NN/place to/TO/to put/VB/put wrapper/NN/wrapper functions/NNS/functions like/IN/like printbackwardnicely/RB/printbackwardnicely /,/, which/WDT/which we/PRP/we can/MD/can make/VB/make a/DT/a method/NN/method of/IN/of the/DT/the linkedlist/NN/linkedlist class/NN/class /:/: class/NN/class linkedlist/NN/linkedlist /:/: /:/... def/NN/def printbackward/NN/printbackward /:/( self/NN/self /:/) /:/: print/NN/print /:/[ /,/, if/IN/if self.head/JJ/self.head !/./! =/:/= none/NN/none /:/: self.head.printbackward/JJ/self.head.printbackward /NN/( /:/) print/NN/print /:/] /,/, class/NN/class node/NN/node /:/: /:/... def/NN/def printbackward/NN/printbackward /:/( self/NN/self /:/) /:/: if/IN/if self.next/JJ/self.next !/./! =/:/= none/NN/none /:/: 17.10/CD/17.10 invariants/NNS/invariants 187/CD/187 tail/NN/tail =/:/= self.next/JJ/self.next tail.printbackward/JJ/tail.printbackward /NN/( /:/) print/NN/print self.cargo/-NONE-/self.cargo /,/, just/RB/just to/TO/to make/VB/make things/NNS/things confusing/VBG/confusing /,/, we/PRP/we renamed/VBD/renamed printbackwardnicely/NNP/printbackwardnicely. now/RB/now there/RB/there are/VBP/are two/CD/two methods/NNS/methods named/VBN/named printbackward/NN/printbackward /:/: one/CD/one in/IN/in the/DT/the node/NN/node class/NN/class /:/( the/DT/the helper/NN/helper /:/) ;/:/; and/CC/and one/CD/one in/IN/in the/DT/the linkedlist/NN/linkedlist class/NN/class /:/( the/DT/the wrapper/NN/wrapper /:/) /./. when/WRB/when the/DT/the wrapper/NN/wrapper invokes/VBZ/invokes self.head.printbackward/JJ/self.head.printbackward /,/, it/PRP/it is/VBZ/is invoking/VBG/invoking the/DT/the helper/NN/helper /,/, because/IN/because self.head/JJ/self.head is/VBZ/is a/DT/a node/NN/node object/NNP/object. another/DT/another benefit/NN/benefit of/IN/of the/DT/the linkedlist/NN/linkedlist class/NN/class is/VBZ/is that/IN/that it/PRP/it makes/VBZ/makes it/PRP/it easier/JJR/easier to/TO/to add/VB/add or/CC/or remove/VB/remove the/DT/the first/JJ/first element/NN/element of/IN/of a/DT/a list/NNP/list. for/IN/for example/NN/example /,/, addfirst/NN/addfirst is/VBZ/is a/DT/a method/NN/method for/IN/for linkedlists/NNS/linkedlists ;/:/; it/PRP/it takes/VBZ/takes an/DT/an item/NN/item of/IN/of cargo/NN/cargo as/IN/as an/DT/an argument/NN/argument and/CC/and puts/NNS/puts it/PRP/it at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list /:/: class/NN/class linkedlist/NN/linkedlist /:/: /:/... def/NN/def addfirst/NN/addfirst /:/( self/NN/self /,/, cargo/NN/cargo /:/) /:/: node/NN/node =/:/= node/NN/node /:/( cargo/NN/cargo /:/) node.next/JJ/node.next =/NN/= self.head/JJ/self.head self.head/JJ/self.head =/NN/= node/NN/node self.length/NN/self.length =/:/= self.length/JJ/self.length +/NN/+ 1/CD/1 as/IN/as usual/JJ/usual /,/, you/PRP/you should/MD/should check/VB/check code/NN/code like/IN/like this/DT/this to/TO/to see/VB/see if/IN/if it/PRP/it handles/VBZ/handles the/DT/the special/JJ/special cases/NNP/cases. for/IN/for example/NN/example /,/, what/WP/what happens/NNS/happens if/IN/if the/DT/the list/NN/list is/VBZ/is initially/RB/initially empty/JJ/empty 17.10/CD/17.10 invariants/NNS/invariants some/DT/some lists/NNS/lists are/VBP/are well/RB/well formed/VBN/formed ;/:/; others/NNS/others are/VBP/are not/NNP/not. for/IN/for example/NN/example /,/, if/IN/if a/DT/a list/NN/list contains/VBZ/contains a/DT/a loop/NN/loop /,/, it/PRP/it will/MD/will cause/VB/cause many/JJ/many of/IN/of our/PRP$/our methods/NNS/methods to/TO/to crash/VB/crash /,/, so/RB/so we/PRP/we might/MD/might want/VB/want to/TO/to require/VB/require that/IN/that lists/NNS/lists contain/VBP/contain no/DT/no loops/NNP/loops. another/DT/another requirement/NN/requirement is/VBZ/is that/IN/that the/DT/the length/NN/length value/NN/value in/IN/in the/DT/the linkedlist/NN/linkedlist object/NN/object should/MD/should be/VB/be equal/JJ/equal to/TO/to the/DT/the actual/JJ/actual number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the list/NNP/list. requirements/NNS/requirements like/IN/like these/DT/these are/VBP/are called/VBN/called invariants/NNS/invariants because/IN/because /,/, ideally/RB/ideally /,/, they/PRP/they should/MD/should be/VB/be true/JJ/true of/IN/of every/DT/every object/NN/object all/DT/all the/DT/the time/NNP/time. specifying/NN/specifying invariants/NNS/invariants for/IN/for objects/NNS/objects is/VBZ/is a/DT/a useful/JJ/useful programming/NN/programming practice/NN/practice because/IN/because it/PRP/it makes/VBZ/makes it/PRP/it easier/JJR/easier to/TO/to prove/VB/prove the/DT/the correctness/NN/correctness of/IN/of code/NN/code /,/, check/NN/check the/DT/the integrity/NN/integrity of/IN/of data/NNS/data structures/NNS/structures /,/, and/CC/and detect/VB/detect errors/NNP/errors. one/CD/one thing/NN/thing that/WDT/that is/VBZ/is sometimes/RB/sometimes confusing/VBG/confusing about/IN/about invariants/NNS/invariants is/VBZ/is that/IN/that there/EX/there are/VBP/are times/NNS/times when/WRB/when they/PRP/they are/VBP/are violated/NNP/violated. for/IN/for example/NN/example /,/, in/IN/in the/DT/the middle/NN/middle of/IN/of addfirst/JJ/addfirst /,/, after/IN/after we/PRP/we have/VBP/have added/VBN/added the/DT/the node/NN/node but/CC/but before/IN/before we/PRP/we have/VBP/have incremented/VBN/incremented length/NN/length /,/, the/DT/the invariant/NN/invariant is/VBZ/is violated/NNP/violated. this/DT/this kind/NN/kind of/IN/of violation/NN/violation is/VBZ/is acceptable/JJ/acceptable ;/:/; in/IN/in fact/NN/fact /,/, it/PRP/it is/VBZ/is often/RB/often impossible/JJ/impossible to/TO/to modify/VB/modify an/DT/an object/NN/object without/IN/without violating/NN/violating an/DT/an invariant/NN/invariant for/IN/for at/IN/at least/JJS/least a/DT/a little/RB/little while/NNP/while. 188/CD/188 linked/VBD/linked lists/NNS/lists normally/RB/normally /,/, we/PRP/we require/VBP/require that/IN/that every/DT/every method/NN/method that/IN/that violates/NNS/violates an/DT/an invariant/JJ/invariant must/NN/must restore/NN/restore the/DT/the invariant/NNP/invariant. if/IN/if there/EX/there is/VBZ/is any/DT/any significant/JJ/significant stretch/NN/stretch of/IN/of code/NN/code in/IN/in which/WDT/which the/DT/the invariant/NN/invariant is/VBZ/is violated/VBN/violated /,/, it/PRP/it is/VBZ/is important/JJ/important for/IN/for the/DT/the comments/NNS/comments to/TO/to make/VB/make that/IN/that clear/JJ/clear /,/, so/IN/so that/IN/that no/DT/no operations/NNS/operations are/VBP/are performed/VBN/performed that/IN/that depend/NN/depend on/IN/on the/DT/the invariant/NNP/invariant. 17.11/CD/17.11 glossary/JJ/glossary embedded/JJ/embedded reference/NN/reference /:/: a/DT/a reference/NN/reference stored/VBN/stored in/IN/in an/DT/an attribute/NN/attribute of/IN/of an/DT/an object/NNP/object. linked/VBD/linked list/NN/list /:/: a/DT/a data/NN/data structure/NN/structure that/WDT/that implements/VBZ/implements a/DT/a collection/NN/collection using/VBG/using a/DT/a sequence/NN/sequence of/IN/of linked/VBN/linked nodes/NNP/nodes. node/NN/node /:/: an/DT/an element/NN/element of/IN/of a/DT/a list/NN/list /,/, usually/RB/usually implemented/VBN/implemented as/IN/as an/DT/an object/NN/object that/IN/that contains/NNS/contains a/DT/a reference/NN/reference to/TO/to another/DT/another object/NN/object of/IN/of the/DT/the same/JJ/same type/NNP/type. cargo/NN/cargo /:/: an/DT/an item/NN/item of/IN/of data/NNS/data contained/VBN/contained in/IN/in a/DT/a node/NNP/node. link/NN/link /:/: an/DT/an embedded/JJ/embedded reference/NN/reference used/VBN/used to/TO/to link/VB/link one/CD/one object/NN/object to/TO/to another/NNP/another. precondition/NN/precondition /:/: an/DT/an assertion/NN/assertion that/IN/that must/MD/must be/VB/be true/JJ/true in/IN/in order/NN/order for/IN/for a/DT/a method/NN/method to/TO/to work/VB/work correctly/NNP/correctly. fundamental/JJ/fundamental ambiguity/NN/ambiguity theorem/NN/theorem /:/: a/DT/a reference/NN/reference to/TO/to a/DT/a list/NN/list node/NN/node can/MD/can be/VB/be treated/VBN/treated as/IN/as a/DT/a single/JJ/single object/NN/object or/CC/or as/IN/as the/DT/the first/JJ/first in/IN/in a/DT/a list/NN/list of/IN/of nodes/NNP/nodes. singleton/NN/singleton /:/: a/DT/a linked/VBN/linked list/NN/list with/IN/with a/DT/a single/JJ/single node/NNP/node. wrapper/NN/wrapper /:/: a/DT/a method/NN/method that/WDT/that acts/VBZ/acts as/RB/as a/DT/a middleman/NN/middleman between/IN/between a/DT/a caller/NN/caller and/CC/and a/DT/a helper/NN/helper method/NN/method /,/, often/RB/often making/VBG/making the/DT/the method/NN/method easier/NN/easier or/CC/or less/JJR/less error-prone/JJ/error-prone to/TO/to invoke/NNP/invoke. helper/NN/helper /:/: a/DT/a method/NN/method that/WDT/that is/VBZ/is not/RB/not invoked/VBN/invoked directly/RB/directly by/IN/by a/DT/a caller/NN/caller but/CC/but is/VBZ/is used/VBN/used by/IN/by another/DT/another method/NN/method to/TO/to perform/VB/perform part/NN/part of/IN/of an/DT/an operation/NNP/operation. invariant/NN/invariant /:/: an/DT/an assertion/NN/assertion that/IN/that should/MD/should be/VB/be true/JJ/true of/IN/of an/DT/an object/NN/object at/IN/at all/DT/all times/NNS/times /VBP/( except/IN/except perhaps/RB/perhaps while/IN/while the/DT/the object/NN/object is/VBZ/is being/VBG/being modified/VBN/modified /-NONE-/) /./. chapter/NN/chapter 18/CD/18 stacks/NNS/stacks 18.1/CD/18.1 abstract/NN/abstract data/NNS/data types/NNS/types the/DT/the data/NNS/data types/VBZ/types you/PRP/you have/VBP/have seen/VBN/seen so/RB/so far/RB/far are/VBP/are all/DT/all concrete/JJ/concrete /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that we/PRP/we have/VBP/have completely/RB/completely specified/VBN/specified how/WRB/how they/PRP/they are/VBP/are implemented/NNP/implemented. for/IN/for example/NN/example /,/, the/DT/the card/NN/card class/NN/class represents/VBZ/represents a/DT/a card/NN/card using/VBG/using two/CD/two integers/NNP/integers. as/IN/as we/PRP/we discussed/VBD/discussed at/IN/at the/DT/the time/NN/time /,/, that/IN/that is/VBZ/is not/RB/not the/DT/the only/JJ/only way/NN/way to/TO/to represent/VB/represent a/DT/a card/NN/card ;/:/; there/EX/there are/VBP/are many/JJ/many alternative/NN/alternative implementations/NNP/implementations. an/DT/an abstract/NN/abstract data/NNS/data type/NN/type /,/, or/CC/or adt/VB/adt /,/, specifies/NNS/specifies a/DT/a set/NN/set of/IN/of operations/NNS/operations /:/( or/CC/or methods/NNS/methods /:/) and/CC/and the/DT/the semantics/NNS/semantics of/IN/of the/DT/the operations/NNS/operations /:/( what/WP/what they/PRP/they do/VBP/do /:/) /,/, but/CC/but it/PRP/it does/VBZ/does not/RB/not specify/VB/specify the/DT/the implementation/NN/implementation of/IN/of the/DT/the operations/NNP/operations. that/IN/that s/NNS/s what/WP/what makes/VBZ/makes it/PRP/it abstract/NNP/abstract. why/WRB/why is/VBZ/is that/IN/that useful/JJ/useful it/PRP/it simplifies/VBZ/simplifies the/DT/the task/NN/task of/IN/of specifying/VBG/specifying an/DT/an algorithm/NN/algorithm if/IN/if you/PRP/you can/MD/can denote/VB/denote the/DT/the operations/NNS/operations you/PRP/you need/VBP/need without/IN/without having/VBG/having to/TO/to think/VB/think at/IN/at the/DT/the same/JJ/same time/NN/time about/IN/about how/WRB/how the/DT/the operations/NNS/operations are/VBP/are performed/NNP/performed. since/IN/since there/EX/there are/VBP/are usually/RB/usually many/JJ/many ways/NNS/ways to/TO/to implement/VB/implement an/DT/an adt/NN/adt /,/, it/PRP/it might/MD/might be/VB/be useful/JJ/useful to/TO/to write/VB/write an/DT/an algorithm/NN/algorithm that/IN/that can/MD/can be/VB/be used/VBN/used with/IN/with any/DT/any of/IN/of the/DT/the possible/JJ/possible implementations/NNP/implementations. well-known/NNP/well-known adts/VBZ/adts /,/, such/JJ/such as/IN/as the/DT/the stack/NN/stack adt/NN/adt in/IN/in this/DT/this chapter/NN/chapter /,/, are/VBP/are often/RB/often implemented/VBN/implemented in/IN/in standard/JJ/standard libraries/NNS/libraries so/IN/so they/PRP/they can/MD/can be/VB/be written/VBN/written once/RB/once and/CC/and used/VBD/used by/IN/by many/JJ/many programmers/NNP/programmers. the/DT/the operations/NNS/operations on/IN/on adts/NNS/adts provide/VBP/provide a/DT/a common/JJ/common high-level/JJ/high-level language/NN/language for/IN/for specifying/NN/specifying and/CC/and talking/VBG/talking about/IN/about algorithms/NNP/algorithms. 190/CD/190 stacks/NNS/stacks when/WRB/when we/PRP/we talk/VBP/talk about/IN/about adts/NNS/adts /,/, we/PRP/we often/RB/often distinguish/JJ/distinguish the/DT/the code/NN/code that/IN/that uses/NNS/uses the/DT/the adt/NN/adt /,/, called/VBN/called the/DT/the client/NN/client code/NN/code /,/, from/IN/from the/DT/the code/NN/code that/IN/that implements/NNS/implements the/DT/the adt/NN/adt /,/, called/VBN/called the/DT/the provider/NN/provider code/NNP/code. 18.2/CD/18.2 the/DT/the stack/NN/stack adt/NN/adt in/IN/in this/DT/this chapter/NN/chapter /,/, we/PRP/we will/MD/will look/VB/look at/IN/at one/CD/one common/JJ/common adt/NN/adt /,/, the/DT/the stack/NNP/stack. a/DT/a stack/NN/stack is/VBZ/is a/DT/a collection/NN/collection /,/, meaning/VBG/meaning that/IN/that it/PRP/it is/VBZ/is a/DT/a data/NN/data structure/NN/structure that/WDT/that contains/VBZ/contains multiple/VBP/multiple elements/NNP/elements. other/JJ/other collections/NNS/collections we/PRP/we have/VBP/have seen/VBN/seen include/NN/include dictionaries/NNS/dictionaries and/CC/and lists/NNP/lists. an/DT/an adt/NN/adt is/VBZ/is defined/VBN/defined by/IN/by the/DT/the operations/NNS/operations that/IN/that can/MD/can be/VB/be performed/VBN/performed on/IN/on it/PRP/it /,/, which/WDT/which is/VBZ/is called/VBN/called an/DT/an interface/NNP/interface. the/DT/the interface/NN/interface for/IN/for a/DT/a stack/NN/stack consists/VBZ/consists of/IN/of these/DT/these operations/NNS/operations /:/: init/NN/init /:/: initialize/NN/initialize a/DT/a new/JJ/new empty/NN/empty stack/NNP/stack. push/NN/push /:/: add/JJ/add a/DT/a new/JJ/new item/NN/item to/TO/to the/DT/the stack/NNP/stack. pop/NN/pop /:/: remove/NN/remove and/CC/and return/NN/return an/DT/an item/NN/item from/IN/from the/DT/the stack/NNP/stack. the/DT/the item/NN/item that/IN/that is/VBZ/is returned/VBN/returned is/VBZ/is always/RB/always the/DT/the last/JJ/last one/CD/one that/WDT/that was/VBD/was added/NNP/added. isempty/NN/isempty /:/: check/NN/check whether/IN/whether the/DT/the stack/NN/stack is/VBZ/is empty/NNP/empty. a/DT/a stack/NN/stack is/VBZ/is sometimes/RB/sometimes called/VBN/called a/DT/a last/JJ/last in/IN/in /,/, first/JJ/first out/IN/out or/CC/or lifo/RB/lifo data/NNS/data structure/VBP/structure /,/, because/IN/because the/DT/the last/JJ/last item/NN/item added/VBD/added is/VBZ/is the/DT/the first/JJ/first to/TO/to be/VB/be removed/NNP/removed. 18.3/CD/18.3 implementing/VBG/implementing stacks/NNS/stacks with/IN/with python/NN/python lists/NNS/lists the/DT/the list/NN/list operations/NNS/operations that/WDT/that python/IN/python provides/NNS/provides are/VBP/are similar/JJ/similar to/TO/to the/DT/the operations/NNS/operations that/IN/that define/NN/define a/DT/a stack/NNP/stack. the/DT/the interface/NN/interface isn/NN/isn t/NN/t exactly/RB/exactly what/WP/what it/PRP/it is/VBZ/is supposed/VBN/supposed to/TO/to be/VB/be /,/, but/CC/but we/PRP/we can/MD/can write/VB/write code/NN/code to/TO/to translate/VB/translate from/IN/from the/DT/the stack/NN/stack adt/NN/adt to/TO/to the/DT/the built-in/JJ/built-in operations/NNP/operations. this/DT/this code/NN/code is/VBZ/is called/VBN/called an/DT/an implementation/NN/implementation of/IN/of the/DT/the stack/NN/stack adt/NNP/adt. in/IN/in general/JJ/general /,/, an/DT/an implementation/NN/implementation is/VBZ/is a/DT/a set/NN/set of/IN/of methods/NNS/methods that/WDT/that satisfy/NN/satisfy the/DT/the syntactic/JJ/syntactic and/CC/and semantic/JJ/semantic requirements/NNS/requirements of/IN/of an/DT/an interface/NNP/interface. here/RB/here is/VBZ/is an/DT/an implementation/NN/implementation of/IN/of the/DT/the stack/NN/stack adt/NN/adt that/WDT/that uses/VBZ/uses a/DT/a python/NN/python list/NN/list /:/: class/NN/class stack/NN/stack /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /:/) /:/: self.items/NNS/self.items =/VBP/= /:/[ /:/] def/NN/def push/NN/push /:/( self/NN/self /,/, item/NN/item /:/) /:/: self.items.append/JJ/self.items.append /NN/( item/NN/item /:/) 18.4/CD/18.4 pushing/VBG/pushing and/CC/and popping/VBG/popping 191/CD/191 def/NN/def pop/NN/pop /:/( self/NN/self /:/) /:/: return/NN/return self.items.pop/NN/self.items.pop /:/( /:/) def/NN/def isempty/NN/isempty /:/( self/NN/self /:/) /:/: return/NN/return /:/( self.items/NNS/self.items =/VBP/= =/:/= /:/[ /:/] /:/) a/DT/a stack/NN/stack object/NN/object contains/VBZ/contains an/DT/an attribute/NN/attribute named/VBN/named items/NNS/items that/IN/that is/VBZ/is a/DT/a list/NN/list of/IN/of items/NNS/items in/IN/in the/DT/the stack/NNP/stack. the/DT/the initialization/NN/initialization method/NN/method sets/VBZ/sets items/NNS/items to/TO/to the/DT/the empty/NN/empty list/NNP/list. to/TO/to push/VB/push a/DT/a new/JJ/new item/NN/item onto/IN/onto the/DT/the stack/NN/stack /,/, push/JJ/push appends/NNS/appends it/PRP/it onto/IN/onto items/NNP/items. to/TO/to pop/VB/pop an/DT/an item/NN/item off/IN/off the/DT/the stack/NN/stack /,/, pop/NN/pop uses/NNS/uses the/DT/the homonymous1/NNP/homonymous1 list/NN/list method/NN/method to/TO/to remove/VB/remove and/CC/and return/VB/return the/DT/the last/JJ/last item/NN/item on/IN/on the/DT/the list/NNP/list. finally/RB/finally /,/, to/TO/to check/VB/check if/IN/if the/DT/the stack/NN/stack is/VBZ/is empty/JJ/empty /,/, isempty/NN/isempty compares/VBZ/compares items/NNS/items to/TO/to the/DT/the empty/NN/empty list/NNP/list. an/DT/an implementation/NN/implementation like/IN/like this/DT/this /,/, in/IN/in which/WDT/which the/DT/the methods/NNS/methods consist/VBP/consist of/IN/of simple/JJ/simple invocations/NNS/invocations of/IN/of existing/VBG/existing methods/NNS/methods /,/, is/VBZ/is called/VBN/called a/DT/a veneer/NNP/veneer. in/IN/in real/JJ/real life/NN/life /,/, veneer/NN/veneer is/VBZ/is a/DT/a thin/JJ/thin coating/NN/coating of/IN/of good/JJ/good quality/NN/quality wood/NN/wood used/VBD/used in/IN/in furniture-making/JJ/furniture-making to/TO/to hide/VB/hide lower/JJR/lower quality/NN/quality wood/NN/wood underneath/NNP/underneath. computer/NN/computer scientists/NNS/scientists use/VBP/use this/DT/this metaphor/NN/metaphor to/TO/to describe/VB/describe a/DT/a small/JJ/small piece/NN/piece of/IN/of code/NN/code that/IN/that hides/NNS/hides the/DT/the details/NNS/details of/IN/of an/DT/an implementation/NN/implementation and/CC/and provides/VBZ/provides a/DT/a simpler/NN/simpler /,/, or/CC/or more/JJR/more standard/JJ/standard /,/, interface/NNP/interface. 18.4/CD/18.4 pushing/VBG/pushing and/CC/and popping/VBG/popping a/DT/a stack/NN/stack is/VBZ/is a/DT/a generic/JJ/generic data/NNS/data structure/NN/structure /,/, which/WDT/which means/VBZ/means that/DT/that we/PRP/we can/MD/can add/VB/add any/DT/any type/NN/type of/IN/of item/NN/item to/TO/to it/NNP/it. the/DT/the following/VBG/following example/NN/example pushes/NNS/pushes two/CD/two integers/NNS/integers and/CC/and a/DT/a string/NN/string onto/IN/onto the/DT/the stack/NN/stack /:/: >/:/> >/:/> >/:/> s/NNS/s =/VBP/= stack/NN/stack /:/( /:/) >/:/> >/:/> >/:/> s.push/JJ/s.push /NN/( 54/CD/54 /CD/) >/CD/> >/CD/> >/CD/> s.push/JJ/s.push /NN/( 45/CD/45 /CD/) >/CD/> >/CD/> >/CD/> s.push/JJ/s.push /NN/( +/:/+ /:/) we/PRP/we can/MD/can use/VB/use isempty/NN/isempty and/CC/and pop/VB/pop to/TO/to remove/VB/remove and/CC/and print/VB/print all/DT/all of/IN/of the/DT/the items/NNS/items on/IN/on the/DT/the stack/NN/stack /:/: while/IN/while not/RB/not s.isempty/JJ/s.isempty /NN/( /:/) /:/: print/NN/print s.pop/NN/s.pop /:/( /:/) /,/, the/DT/the output/NN/output is/VBZ/is +/:/+ 45/CD/45 54/CD/54. in/IN/in other/JJ/other words/NNS/words /,/, we/PRP/we just/RB/just used/VBN/used a/DT/a stack/NN/stack to/TO/to print/VB/print the/DT/the items/NNS/items backward/VBP/backward !/./! granted/VBN/granted /,/, it/PRP/it s/VBZ/s not/RB/not the/DT/the standard/JJ/standard format/NN/format for/IN/for printing/NN/printing a/DT/a list/NN/list /,/, but/CC/but by/IN/by using/VBG/using a/DT/a stack/NN/stack /,/, it/PRP/it was/VBD/was remarkably/RB/remarkably easy/JJ/easy to/TO/to do/NNP/do. 1/CD/1 same-named/JJ/same-named 192/CD/192 stacks/NNS/stacks you/PRP/you should/MD/should compare/VB/compare this/DT/this bit/NN/bit of/IN/of code/NN/code to/TO/to the/DT/the implementation/NN/implementation of/IN/of printbackward/NN/printbackward in/IN/in section/NN/section 17.4/CD/17.4. there/EX/there is/VBZ/is a/DT/a natural/JJ/natural parallel/NN/parallel between/IN/between the/DT/the recursive/JJ/recursive version/NN/version of/IN/of printbackward/NN/printbackward and/CC/and the/DT/the stack/NN/stack algorithm/NN/algorithm here/NNP/here. the/DT/the difference/NN/difference is/VBZ/is that/IN/that printbackward/NN/printbackward uses/NNS/uses the/DT/the runtime/NN/runtime stack/NN/stack to/TO/to keep/VB/keep track/NN/track of/IN/of the/DT/the nodes/NNS/nodes while/IN/while it/PRP/it traverses/VBZ/traverses the/DT/the list/NN/list /,/, and/CC/and then/RB/then prints/NNS/prints them/PRP/them on/IN/on the/DT/the way/NN/way back/RB/back from/IN/from the/DT/the recursion/NNP/recursion. the/DT/the stack/NN/stack algorithm/NN/algorithm does/VBZ/does the/DT/the same/JJ/same thing/NN/thing /,/, except/IN/except that/DT/that it/PRP/it uses/VBZ/uses a/DT/a stack/NN/stack object/NN/object instead/RB/instead of/IN/of the/DT/the runtime/NN/runtime stack/NNP/stack. 18.5/CD/18.5 using/VBG/using a/DT/a stack/NN/stack to/TO/to evaluate/VB/evaluate postfix/NN/postfix in/IN/in most/JJS/most programming/NN/programming languages/NNS/languages /,/, mathematical/JJ/mathematical expressions/NNS/expressions are/VBP/are written/VBN/written with/IN/with the/DT/the operator/NN/operator between/IN/between the/DT/the two/CD/two operands/NNS/operands /,/, as/IN/as in/IN/in 1/CD/1 +/CD/+ 2/CD/2. this/DT/this format/NN/format is/VBZ/is called/VBN/called infix/-NONE-/infix. an/DT/an alternative/JJ/alternative used/JJ/used by/IN/by some/DT/some calculators/NNS/calculators is/VBZ/is called/VBN/called postfix/-NONE-/postfix. in/IN/in postfix/NN/postfix /,/, the/DT/the operator/NN/operator follows/VBZ/follows the/DT/the operands/NNS/operands /,/, as/IN/as in/IN/in 1/CD/1 2/CD/2 +/CD/+ /./. the/DT/the reason/NN/reason postfix/NN/postfix is/VBZ/is sometimes/RB/sometimes useful/JJ/useful is/VBZ/is that/IN/that there/EX/there is/VBZ/is a/DT/a natural/JJ/natural way/NN/way to/TO/to evaluate/VB/evaluate a/DT/a postfix/NN/postfix expression/NN/expression using/VBG/using a/DT/a stack/NN/stack /:/: starting/VBG/starting at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the expression/NN/expression /,/, get/NN/get one/CD/one term/NN/term /:/( operator/NN/operator or/CC/or operand/NN/operand /:/) at/IN/at a/DT/a time/NNP/time. if/IN/if the/DT/the term/NN/term is/VBZ/is an/DT/an operand/NN/operand /,/, push/JJ/push it/PRP/it on/IN/on the/DT/the stack/NNP/stack. if/IN/if the/DT/the term/NN/term is/VBZ/is an/DT/an operator/NN/operator /,/, pop/NN/pop two/CD/two operands/NNS/operands off/IN/off the/DT/the stack/NN/stack /,/, perform/NN/perform the/DT/the operation/NN/operation on/IN/on them/PRP/them /,/, and/CC/and push/VB/push the/DT/the result/NN/result back/RB/back on/IN/on the/DT/the stack/NNP/stack. when/WRB/when you/PRP/you get/VBP/get to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the expression/NN/expression /,/, there/EX/there should/MD/should be/VB/be exactly/RB/exactly one/CD/one operand/NN/operand left/NN/left on/IN/on the/DT/the stack/NNP/stack. that/IN/that operand/NN/operand is/VBZ/is the/DT/the result/NNP/result. as/IN/as an/DT/an exercise/NN/exercise /,/, apply/RB/apply this/DT/this algorithm/NN/algorithm to/TO/to the/DT/the expression/NN/expression 1/CD/1 2/CD/2 +/CD/+ 3/CD/3 /./. this/DT/this example/NN/example demonstrates/VBZ/demonstrates one/CD/one of/IN/of the/DT/the advantages/NNS/advantages of/IN/of postfix/NN/postfix there/EX/there is/VBZ/is no/DT/no need/NN/need to/TO/to use/VB/use parentheses/NNS/parentheses to/TO/to control/NN/control the/DT/the order/NN/order of/IN/of operations/NNP/operations. to/TO/to get/VB/get the/DT/the same/JJ/same result/NN/result in/IN/in infix/NN/infix /,/, we/PRP/we would/MD/would have/VB/have to/TO/to write/VB/write /:/( 1/CD/1 +/CD/+ 2/CD/2 /CD/) 3/CD/3. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a postfix/NN/postfix expression/NN/expression that/WDT/that is/VBZ/is equivalent/NN/equivalent to/TO/to 1/CD/1 +/CD/+ 2/CD/2 3/CD/3. 18.6/CD/18.6 parsing/VBG/parsing to/TO/to implement/VB/implement the/DT/the previous/JJ/previous algorithm/NN/algorithm /,/, we/PRP/we need/VBP/need to/TO/to be/VB/be able/JJ/able to/TO/to traverse/VB/traverse a/DT/a string/NN/string and/CC/and break/VB/break it/PRP/it into/IN/into operands/NNS/operands and/CC/and operators/NNP/operators. this/DT/this process/NN/process is/VBZ/is an/DT/an example/NN/example of/IN/of parsing/NN/parsing /,/, 18.7/CD/18.7 evaluating/VBG/evaluating postfix/NN/postfix 193/CD/193 and/CC/and the/DT/the results/NNS/results the/DT/the individual/JJ/individual chunks/NNS/chunks of/IN/of the/DT/the string/NN/string are/VBP/are called/VBN/called tokens/NNP/tokens. you/PRP/you might/MD/might remember/VB/remember these/DT/these words/NNS/words from/IN/from chapter/NN/chapter 1/CD/1. python/NN/python provides/VBZ/provides a/DT/a split/NN/split method/NN/method in/IN/in both/DT/both the/DT/the string/NN/string and/CC/and re/NN/re /:/( regular/JJ/regular expression/NN/expression /:/) modules/NNP/modules. the/DT/the function/NN/function string.split/NN/string.split splits/NNS/splits a/DT/a string/VBG/string into/IN/into a/DT/a list/NN/list using/VBG/using a/DT/a single/JJ/single character/NN/character as/IN/as a/DT/a delimiter/NNP/delimiter. for/IN/for example/NN/example /:/: >/NN/> >/:/> >/:/> import/NN/import string/NN/string >/:/> >/:/> >/:/> string.split/JJ/string.split /NN/( now/RB/now is/VBZ/is the/DT/the time/NN/time /,/, /:/) /:/[ now/RB/now /,/, is/VBZ/is /,/, the/DT/the /,/, time/NN/time /:/] in/IN/in this/DT/this case/NN/case /,/, the/DT/the delimiter/NN/delimiter is/VBZ/is the/DT/the space/NN/space character/NN/character /,/, so/RB/so the/DT/the string/NN/string is/VBZ/is split/VBN/split at/IN/at each/DT/each space/NNP/space. the/DT/the function/NN/function re.split/NN/re.split is/VBZ/is more/RBR/more powerful/JJ/powerful /,/, allowing/VBG/allowing us/PRP/us to/TO/to provide/VB/provide a/DT/a regular/JJ/regular expression/NN/expression instead/RB/instead of/IN/of a/DT/a delimiter/NNP/delimiter. a/DT/a regular/JJ/regular expression/NN/expression is/VBZ/is a/DT/a way/NN/way of/IN/of specifying/VBG/specifying a/DT/a set/NN/set of/IN/of strings/NNP/strings. for/IN/for example/NN/example /,/, /:/[ a-z/JJ/a-z /NN/] is/VBZ/is the/DT/the set/NN/set of/IN/of all/DT/all letters/NNS/letters and/CC/and /:/[ 0-9/CD/0-9 /CD/] is/VBZ/is the/DT/the set/NN/set of/IN/of all/DT/all digits/NNP/digits. the/DT/the ^/NNP/^ operator/NN/operator negates/VBZ/negates a/DT/a set/NN/set /,/, so/RB/so /:/[ ^/:/^ 0-9/CD/0-9 /CD/] is/VBZ/is the/DT/the set/NN/set of/IN/of every/DT/every character/NN/character that/IN/that is/VBZ/is not/RB/not a/DT/a digit/NN/digit /,/, which/WDT/which is/VBZ/is exactly/RB/exactly the/DT/the set/NN/set we/PRP/we want/VBP/want to/TO/to use/VB/use to/TO/to split/VB/split up/RP/up postfix/CD/postfix expressions/NNS/expressions /:/: >/:/> >/:/> >/:/> import/NN/import re/NN/re >/:/> >/:/> >/:/> re.split/JJ/re.split /NN/( /:/( /:/[ ^/:/^ 0-9/CD/0-9 /CD/] /CD/) /,/, 123/CD/123 +/:/+ 456/CD/456 //CD// /CD/) /CD/[ 123/CD/123 /,/, +/:/+ /,/, 456/CD/456 /,/, /,/, /,/, //:// /,/, /:/] notice/NN/notice that/IN/that the/DT/the order/NN/order of/IN/of the/DT/the arguments/NNS/arguments is/VBZ/is different/JJ/different from/IN/from string.split/JJ/string.split ;/:/; the/DT/the delimiter/NN/delimiter comes/VBZ/comes before/IN/before the/DT/the string/NNP/string. the/DT/the resulting/VBG/resulting list/NN/list includes/VBZ/includes the/DT/the operands/NNS/operands 123/CD/123 and/CC/and 456/CD/456 and/CC/and the/DT/the operators/NNS/operators and/CC/and //NNP//. it/PRP/it also/RB/also includes/VBZ/includes two/CD/two empty/JJ/empty strings/NNS/strings that/WDT/that are/VBP/are inserted/VBN/inserted as/IN/as phantom/NN/phantom operands/NNS/operands /,/, whenever/RB/whenever an/DT/an operator/NN/operator appears/VBZ/appears without/IN/without a/DT/a number/NN/number before/IN/before or/CC/or after/IN/after it/NNP/it. 18.7/CD/18.7 evaluating/VBG/evaluating postfix/NN/postfix to/TO/to evaluate/VB/evaluate a/DT/a postfix/NN/postfix expression/NN/expression /,/, we/PRP/we will/MD/will use/VB/use the/DT/the parser/NN/parser from/IN/from the/DT/the previous/JJ/previous section/NN/section and/CC/and the/DT/the algorithm/NN/algorithm from/IN/from the/DT/the section/NN/section before/IN/before that/NNP/that. to/TO/to keep/VB/keep things/NNS/things simple/JJ/simple /,/, we/PRP/we ll/VBP/ll start/NN/start with/IN/with an/DT/an evaluator/NN/evaluator that/IN/that only/RB/only implements/VBZ/implements the/DT/the operators/NNS/operators +/:/+ and/CC/and /:/: 194/CD/194 stacks/NNS/stacks def/IN/def evalpostfix/NN/evalpostfix /:/( expr/NN/expr /:/) /:/: import/NN/import re/NN/re tokenlist/NN/tokenlist =/:/= re.split/JJ/re.split /NN/( /:/( /:/[ ^/:/^ 0-9/CD/0-9 /CD/] /CD/) /,/, expr/NN/expr /:/) stack/NN/stack =/:/= stack/NN/stack /:/( /:/) for/IN/for token/NN/token in/IN/in tokenlist/NN/tokenlist /:/: if/IN/if token/NNS/token =/VBP/= =/:/= or/CC/or token/VBN/token =/-NONE-/= =/:/= /:/: continue/NN/continue if/IN/if token/JJ/token =/NN/= =/:/= +/:/+ /:/: sum/NN/sum =/:/= stack.pop/JJ/stack.pop /NN/( /:/) +/:/+ stack.pop/JJ/stack.pop /NN/( /:/) stack.push/JJ/stack.push /NN/( sum/NN/sum /:/) elif/IN/elif token/NN/token =/:/= =/:/= /:/: product/NN/product =/:/= stack.pop/JJ/stack.pop /NN/( /:/) stack.pop/JJ/stack.pop /NN/( /:/) stack.push/JJ/stack.push /NN/( product/NN/product /:/) else/NN/else /:/: stack.push/JJ/stack.push /NN/( int/NN/int /:/( token/NN/token /:/) /:/) return/NN/return stack.pop/NN/stack.pop /:/( /:/) the/DT/the first/JJ/first condition/NN/condition takes/VBZ/takes care/NN/care of/IN/of spaces/NNS/spaces and/CC/and empty/JJ/empty strings/NNP/strings. the/DT/the next/JJ/next two/CD/two conditions/NNS/conditions handle/JJ/handle operators/NNP/operators. we/PRP/we assume/VBP/assume /,/, for/IN/for now/RB/now /,/, that/IN/that anything/NN/anything else/RB/else must/MD/must be/VB/be an/DT/an operand/NNP/operand. of/IN/of course/NN/course /,/, it/PRP/it would/MD/would be/VB/be better/JJR/better to/TO/to check/VB/check for/IN/for erroneous/JJ/erroneous input/NN/input and/CC/and report/NN/report an/DT/an error/NN/error message/NN/message /,/, but/CC/but we/PRP/we ll/VBP/ll get/NN/get to/TO/to that/DT/that later/NNP/later. let/VBD/let s/NNS/s test/NN/test it/PRP/it by/IN/by evaluating/VBG/evaluating the/DT/the postfix/NN/postfix form/NN/form of/IN/of /NNP/( 56/CD/56 +/CD/+ 47/CD/47 /CD/) 2/CD/2 /:/: >/:/> >/:/> >/:/> print/NN/print evalpostfix/NN/evalpostfix /:/( 56/CD/56 47/CD/47 +/CD/+ 2/CD/2 /CD/) 206/CD/206 that/WDT/that s/VBZ/s close/JJ/close enough/NNP/enough. 18.8/CD/18.8 clients/NNS/clients and/CC/and providers/NNS/providers one/CD/one of/IN/of the/DT/the fundamental/JJ/fundamental goals/NNS/goals of/IN/of an/DT/an adt/NN/adt is/VBZ/is to/TO/to separate/JJ/separate the/DT/the interests/NNS/interests of/IN/of the/DT/the provider/NN/provider /,/, who/WP/who writes/VBZ/writes the/DT/the code/NN/code that/IN/that implements/NNS/implements the/DT/the adt/NN/adt /,/, and/CC/and the/DT/the client/NN/client /,/, who/WP/who uses/NNS/uses the/DT/the adt/NNP/adt. the/DT/the provider/NN/provider only/RB/only has/VBZ/has to/TO/to worry/VB/worry about/IN/about whether/IN/whether the/DT/the implementation/NN/implementation is/VBZ/is correct/JJ/correct in/IN/in accord/NN/accord with/IN/with the/DT/the specification/NN/specification of/IN/of the/DT/the adt/NN/adt and/CC/and not/RB/not how/WRB/how it/PRP/it will/MD/will be/VB/be used/NNP/used. conversely/RB/conversely /,/, the/DT/the client/NN/client assumes/VBZ/assumes that/IN/that the/DT/the implementation/NN/implementation of/IN/of the/DT/the adt/NN/adt is/VBZ/is correct/JJ/correct and/CC/and doesn/NN/doesn t/NN/t worry/NN/worry about/IN/about the/DT/the details/NNP/details. when/WRB/when you/PRP/you are/VBP/are using/VBG/using one/CD/one of/IN/of python/NN/python s/NNS/s built-in/JJ/built-in types/NNS/types /,/, you/PRP/you have/VBP/have the/DT/the luxury/NN/luxury of/IN/of thinking/VBG/thinking exclusively/RB/exclusively as/IN/as a/DT/a client/NNP/client. of/IN/of course/NN/course /,/, when/WRB/when you/PRP/you implement/VBP/implement an/DT/an adt/NN/adt /,/, you/PRP/you also/RB/also have/VBP/have to/TO/to write/VB/write client/NN/client code/NN/code to/TO/to test/NN/test it/NNP/it. in/IN/in that/DT/that case/NN/case /,/, you/PRP/you play/VBP/play both/DT/both roles/NNS/roles /,/, which/WDT/which can/MD/can be/VB/be confusing/NNP/confusing. you/PRP/you should/MD/should make/VB/make some/DT/some effort/NN/effort to/TO/to keep/VB/keep track/NN/track of/IN/of which/WDT/which role/NN/role you/PRP/you are/VBP/are playing/VBG/playing at/IN/at any/DT/any moment/NNP/moment. 18.9/CD/18.9 glossary/JJ/glossary 195/CD/195 18.9/CD/18.9 glossary/JJ/glossary abstract/NN/abstract data/NNS/data type/NN/type /:/( adt/NN/adt /:/) /:/: a/DT/a data/NN/data type/NN/type /:/( usually/RB/usually a/DT/a collection/NN/collection of/IN/of objects/NNS/objects /:/) that/IN/that is/VBZ/is defined/VBN/defined by/IN/by a/DT/a set/NN/set of/IN/of operations/NNS/operations but/CC/but that/IN/that can/MD/can be/VB/be implemented/VBN/implemented in/IN/in a/DT/a variety/NN/variety of/IN/of ways/NNP/ways. interface/NN/interface /:/: the/DT/the set/NN/set of/IN/of operations/NNS/operations that/WDT/that define/NN/define an/DT/an adt/NNP/adt. implementation/NN/implementation /:/: code/NN/code that/IN/that satisfies/NNS/satisfies the/DT/the syntactic/JJ/syntactic and/CC/and semantic/JJ/semantic requirements/NNS/requirements of/IN/of an/DT/an interface/NNP/interface. client/NN/client /:/: a/DT/a program/NN/program /NN/( or/CC/or the/DT/the person/NN/person who/WP/who wrote/VBD/wrote it/PRP/it /:/) that/IN/that uses/NNS/uses an/DT/an adt/NNP/adt. provider/NN/provider /:/: the/DT/the code/NN/code /:/( or/CC/or the/DT/the person/NN/person who/WP/who wrote/VBD/wrote it/PRP/it /:/) that/IN/that implements/NNS/implements an/DT/an adt/NNP/adt. veneer/NN/veneer /:/: a/DT/a class/NN/class definition/NN/definition that/WDT/that implements/VBZ/implements an/DT/an adt/NN/adt with/IN/with method/NN/method definitions/NNS/definitions that/WDT/that are/VBP/are invocations/NNS/invocations of/IN/of other/JJ/other methods/NNS/methods /,/, sometimes/RB/sometimes with/IN/with simple/JJ/simple transformations/NNP/transformations. the/DT/the veneer/NN/veneer does/VBZ/does no/DT/no significant/JJ/significant work/NN/work /,/, but/CC/but it/PRP/it improves/VBZ/improves or/CC/or standardizes/NNS/standardizes the/DT/the interface/NN/interface seen/VBN/seen by/IN/by the/DT/the client/NNP/client. generic/JJ/generic data/NNS/data structure/NN/structure /:/: a/DT/a kind/NN/kind of/IN/of data/NNS/data structure/VBP/structure that/IN/that can/MD/can contain/VB/contain data/NNS/data of/IN/of any/DT/any type/NNP/type. infix/NN/infix /:/: a/DT/a way/NN/way of/IN/of writing/VBG/writing mathematical/JJ/mathematical expressions/NNS/expressions with/IN/with the/DT/the operators/NNS/operators between/IN/between the/DT/the operands/NNP/operands. postfix/NN/postfix /:/: a/DT/a way/NN/way of/IN/of writing/VBG/writing mathematical/JJ/mathematical expressions/NNS/expressions with/IN/with the/DT/the operators/NNS/operators after/IN/after the/DT/the operands/NNP/operands. parse/NN/parse /:/: to/TO/to read/VB/read a/DT/a string/NN/string of/IN/of characters/NNS/characters or/CC/or tokens/NNS/tokens and/CC/and analyze/VB/analyze its/PRP$/its grammatical/JJ/grammatical structure/NNP/structure. token/NN/token /:/: a/DT/a set/NN/set of/IN/of characters/NNS/characters that/WDT/that are/VBP/are treated/VBN/treated as/IN/as a/DT/a unit/NN/unit for/IN/for purposes/NNS/purposes of/IN/of parsing/VBG/parsing /,/, such/JJ/such as/IN/as the/DT/the words/NNS/words in/IN/in a/DT/a natural/JJ/natural language/NNP/language. delimiter/NN/delimiter /:/: a/DT/a character/NN/character that/WDT/that is/VBZ/is used/VBN/used to/TO/to separate/JJ/separate tokens/NNS/tokens /,/, such/JJ/such as/IN/as punctuation/NN/punctuation in/IN/in a/DT/a natural/JJ/natural language/NNP/language. 196/CD/196 stacks/NNS/stacks chapter/NN/chapter 19/CD/19 queues/NNS/queues this/DT/this chapter/NN/chapter presents/NNS/presents two/CD/two adts/NNS/adts /:/: the/DT/the queue/NN/queue and/CC/and the/DT/the priority/NN/priority queue/NNP/queue. in/IN/in real/JJ/real life/NN/life /,/, a/DT/a queue/NN/queue is/VBZ/is a/DT/a line/NN/line of/IN/of customers/NNS/customers waiting/VBG/waiting for/IN/for service/NN/service of/IN/of some/DT/some kind/NNP/kind. in/IN/in most/JJS/most cases/NNS/cases /,/, the/DT/the first/JJ/first customer/NN/customer in/IN/in line/NN/line is/VBZ/is the/DT/the next/JJ/next customer/NN/customer to/TO/to be/VB/be served/NNP/served. there/RB/there are/VBP/are exceptions/NNS/exceptions /,/, though/NNP/though. at/IN/at airports/NNS/airports /,/, customers/NNS/customers whose/WP$/whose flights/NNS/flights are/VBP/are leaving/VBG/leaving soon/RB/soon are/VBP/are sometimes/RB/sometimes taken/VBN/taken from/IN/from the/DT/the middle/NN/middle of/IN/of the/DT/the queue/NNP/queue. at/IN/at supermarkets/NNS/supermarkets /,/, a/DT/a polite/JJ/polite customer/NN/customer might/MD/might let/VB/let someone/NN/someone with/IN/with only/RB/only a/DT/a few/JJ/few items/NNS/items go/VBP/go first/NNP/first. the/DT/the rule/NN/rule that/IN/that determines/NNS/determines who/WP/who goes/VBZ/goes next/JJ/next is/VBZ/is called/VBN/called the/DT/the queueing/NN/queueing policy/NNP/policy. the/DT/the simplest/JJS/simplest queueing/VBG/queueing policy/NN/policy is/VBZ/is called/VBN/called fifo/NN/fifo /,/, for/IN/for first-in-first-out/NNP/first-in-first-out. the/DT/the most/RBS/most general/JJ/general queueing/NN/queueing policy/NN/policy is/VBZ/is priority/NN/priority queueing/VBG/queueing /,/, in/IN/in which/WDT/which each/DT/each customer/NN/customer is/VBZ/is assigned/VBN/assigned a/DT/a priority/NN/priority and/CC/and the/DT/the customer/NN/customer with/IN/with the/DT/the highest/JJS/highest priority/NN/priority goes/VBZ/goes first/JJ/first /,/, regardless/RB/regardless of/IN/of the/DT/the order/NN/order of/IN/of arrival/NNP/arrival. we/PRP/we say/VBP/say this/DT/this is/VBZ/is the/DT/the most/RBS/most general/JJ/general policy/NN/policy because/IN/because the/DT/the priority/NN/priority can/MD/can be/VB/be based/VBN/based on/IN/on anything/NN/anything /:/: what/WP/what time/NN/time a/DT/a flight/NN/flight leaves/VBZ/leaves ;/:/; how/WRB/how many/JJ/many groceries/NNS/groceries the/DT/the customer/NN/customer has/VBZ/has ;/:/; or/CC/or how/WRB/how important/JJ/important the/DT/the customer/NN/customer is/NNP/is. of/IN/of course/NN/course /,/, not/RB/not all/DT/all queueing/VBG/queueing policies/NNS/policies are/VBP/are fair/JJ/fair /,/, but/CC/but fairness/NN/fairness is/VBZ/is in/IN/in the/DT/the eye/NN/eye of/IN/of the/DT/the beholder/NNP/beholder. the/DT/the queue/NN/queue adt/NN/adt and/CC/and the/DT/the priority/NN/priority queue/NN/queue adt/NN/adt have/VBP/have the/DT/the same/JJ/same set/NN/set of/IN/of operations/NNP/operations. the/DT/the difference/NN/difference is/VBZ/is in/IN/in the/DT/the semantics/NNS/semantics of/IN/of the/DT/the operations/NNS/operations /:/: a/DT/a queue/NN/queue uses/VBZ/uses the/DT/the fifo/NN/fifo policy/NN/policy ;/:/; and/CC/and a/DT/a priority/NN/priority queue/NN/queue /:/( as/IN/as the/DT/the name/NN/name suggests/VBZ/suggests /:/) uses/NNS/uses the/DT/the priority/NN/priority queueing/VBG/queueing policy/NNP/policy. 19.1/CD/19.1 the/DT/the queue/NN/queue adt/NN/adt the/DT/the queue/NN/queue adt/NN/adt is/VBZ/is defined/VBN/defined by/IN/by the/DT/the following/JJ/following operations/NNS/operations /:/: init/NN/init /:/: initialize/NN/initialize a/DT/a new/JJ/new empty/NN/empty queue/NNP/queue. insert/NN/insert /:/: add/JJ/add a/DT/a new/JJ/new item/NN/item to/TO/to the/DT/the queue/NNP/queue. 198/CD/198 queues/NNS/queues remove/VBP/remove /:/: remove/IN/remove and/CC/and return/NN/return an/DT/an item/NN/item from/IN/from the/DT/the queue/NNP/queue. the/DT/the item/NN/item that/IN/that is/VBZ/is returned/VBN/returned is/VBZ/is the/DT/the first/JJ/first one/CD/one that/WDT/that was/VBD/was added/NNP/added. isempty/NN/isempty /:/: check/NN/check whether/IN/whether the/DT/the queue/NN/queue is/VBZ/is empty/NNP/empty. 19.2/CD/19.2 linked/VBD/linked queue/JJ/queue the/DT/the first/JJ/first implementation/NN/implementation of/IN/of the/DT/the queue/NN/queue adt/NN/adt we/PRP/we will/MD/will look/VB/look at/IN/at is/VBZ/is called/VBN/called a/DT/a linked/VBN/linked queue/NN/queue because/IN/because it/PRP/it is/VBZ/is made/VBN/made up/RP/up of/IN/of linked/VBN/linked node/NN/node objects/NNP/objects. here/RB/here is/VBZ/is the/DT/the class/NN/class definition/NN/definition /:/: class/NN/class queue/NN/queue /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /:/) /:/: self.length/JJ/self.length =/NN/= 0/-NONE-/0 self.head/JJ/self.head =/NN/= none/NN/none def/NN/def isempty/NN/isempty /:/( self/NN/self /:/) /:/: return/NN/return /:/( self.length/JJ/self.length =/NN/= =/:/= 0/-NONE-/0 /:/) def/NN/def insert/NN/insert /:/( self/NN/self /,/, cargo/NN/cargo /:/) /:/: node/NN/node =/:/= node/NN/node /:/( cargo/NN/cargo /:/) node.next/JJ/node.next =/NN/= none/NN/none if/IN/if self.head/JJ/self.head =/NN/= =/:/= none/NN/none /:/: #/#/# if/IN/if list/NN/list is/VBZ/is empty/JJ/empty the/DT/the new/JJ/new node/NN/node goes/VBZ/goes first/JJ/first self.head/JJ/self.head =/NN/= node/NN/node else/RB/else /:/: #/#/# find/NN/find the/DT/the last/JJ/last node/NN/node in/IN/in the/DT/the list/NN/list last/JJ/last =/NN/= self.head/JJ/self.head while/IN/while last.next/JJ/last.next /:/: last/JJ/last =/NN/= last.next/JJ/last.next #/#/# append/NN/append the/DT/the new/JJ/new node/NN/node last.next/JJ/last.next =/NN/= node/NN/node self.length/NN/self.length =/:/= self.length/JJ/self.length +/NN/+ 1/CD/1 def/NN/def remove/NN/remove /:/( self/NN/self /:/) /:/: cargo/NN/cargo =/:/= self.head.cargo/JJ/self.head.cargo self.head/JJ/self.head =/NN/= self.head.next/JJ/self.head.next self.length/NN/self.length =/:/= self.length/JJ/self.length /:/- 1/CD/1 return/NN/return cargo/NN/cargo the/DT/the methods/NNS/methods isempty/NN/isempty and/CC/and remove/VB/remove are/VBP/are identical/JJ/identical to/TO/to the/DT/the linkedlist/NN/linkedlist methods/NNS/methods isempty/NN/isempty and/CC/and removefirst/NNP/removefirst. the/DT/the insert/NN/insert method/NN/method is/VBZ/is new/JJ/new and/CC/and a/DT/a bit/NN/bit more/RBR/more complicated/NNP/complicated. we/PRP/we want/VBP/want to/TO/to insert/VB/insert new/JJ/new items/NNS/items at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. if/IN/if the/DT/the queue/NN/queue is/VBZ/is empty/JJ/empty /,/, we/PRP/we just/RB/just set/VBN/set head/NN/head to/TO/to refer/VB/refer to/TO/to the/DT/the new/JJ/new node/NNP/node. 19.3/CD/19.3 performance/NN/performance characteristics/NNS/characteristics 199/CD/199 otherwise/NN/otherwise /,/, we/PRP/we traverse/VBP/traverse the/DT/the list/NN/list to/TO/to the/DT/the last/JJ/last node/NN/node and/CC/and tack/NN/tack the/DT/the new/JJ/new node/NN/node on/IN/on the/DT/the end/NNP/end. we/PRP/we can/MD/can identify/VB/identify the/DT/the last/JJ/last node/NN/node because/IN/because its/PRP$/its next/JJ/next attribute/NN/attribute is/VBZ/is none/NNP/none. there/RB/there are/VBP/are two/CD/two invariants/NNS/invariants for/IN/for a/DT/a properly/RB/properly formed/VBN/formed queue/NN/queue object/NNP/object. the/DT/the value/NN/value of/IN/of length/NN/length should/MD/should be/VB/be the/DT/the number/NN/number of/IN/of nodes/NNS/nodes in/IN/in the/DT/the queue/NN/queue /,/, and/CC/and the/DT/the last/JJ/last node/NN/node should/MD/should have/VB/have next/JJ/next equal/JJ/equal to/TO/to none/NNP/none. convince/NN/convince yourself/PRP/yourself that/IN/that this/DT/this method/NN/method preserves/VBZ/preserves both/DT/both invariants/NNP/invariants. 19.3/CD/19.3 performance/NN/performance characteristics/NNS/characteristics normally/RB/normally when/WRB/when we/PRP/we invoke/VBP/invoke a/DT/a method/NN/method /,/, we/PRP/we are/VBP/are not/RB/not concerned/VBN/concerned with/IN/with the/DT/the details/NNS/details of/IN/of its/PRP$/its implementation/NNP/implementation. but/CC/but there/EX/there is/VBZ/is one/CD/one detail/NN/detail we/PRP/we might/MD/might want/VB/want to/TO/to know/VB/know the/DT/the performance/NN/performance characteristics/NNS/characteristics of/IN/of the/DT/the method/NNP/method. how/WRB/how long/JJ/long does/VBZ/does it/PRP/it take/VB/take /,/, and/CC/and how/WRB/how does/VBZ/does the/DT/the run/NN/run time/NN/time change/NN/change as/IN/as the/DT/the number/NN/number of/IN/of items/NNS/items in/IN/in the/DT/the collection/NN/collection increases/NNS/increases first/RB/first look/VBP/look at/IN/at remove/NNP/remove. there/RB/there are/VBP/are no/DT/no loops/NNS/loops or/CC/or function/NN/function calls/NNS/calls here/RB/here /,/, suggesting/VBG/suggesting that/IN/that the/DT/the runtime/NN/runtime of/IN/of this/DT/this method/NN/method is/VBZ/is the/DT/the same/JJ/same every/DT/every time/NNP/time. such/JJ/such a/DT/a method/NN/method is/VBZ/is called/VBN/called a/DT/a constant/JJ/constant time/NN/time operation/NNP/operation. in/IN/in reality/NN/reality /,/, the/DT/the method/NN/method might/MD/might be/VB/be slightly/RB/slightly faster/JJR/faster when/WRB/when the/DT/the list/NN/list is/VBZ/is empty/JJ/empty since/IN/since it/PRP/it skips/VBZ/skips the/DT/the body/NN/body of/IN/of the/DT/the conditional/JJ/conditional /,/, but/CC/but that/IN/that difference/NN/difference is/VBZ/is not/RB/not significant/NNP/significant. the/DT/the performance/NN/performance of/IN/of insert/NN/insert is/VBZ/is very/RB/very different/NNP/different. in/IN/in the/DT/the general/JJ/general case/NN/case /,/, we/PRP/we have/VBP/have to/TO/to traverse/VB/traverse the/DT/the list/NN/list to/TO/to find/VB/find the/DT/the last/JJ/last element/NNP/element. this/DT/this traversal/NN/traversal takes/VBZ/takes time/NN/time proportional/JJ/proportional to/TO/to the/DT/the length/NN/length of/IN/of the/DT/the list/NNP/list. since/IN/since the/DT/the runtime/NN/runtime is/VBZ/is a/DT/a linear/JJ/linear function/NN/function of/IN/of the/DT/the length/NN/length /,/, this/DT/this method/NN/method is/VBZ/is called/VBN/called linear/JJ/linear time/NNP/time. compared/VBD/compared to/TO/to constant/VB/constant time/NN/time /,/, that/IN/that s/NNS/s very/RB/very bad/NNP/bad. 19.4/CD/19.4 improved/VBN/improved linked/VBN/linked queue/NN/queue we/PRP/we would/MD/would like/VB/like an/DT/an implementation/NN/implementation of/IN/of the/DT/the queue/NN/queue adt/NN/adt that/WDT/that can/MD/can perform/VB/perform all/PDT/all operations/NNS/operations in/IN/in constant/JJ/constant time/NNP/time. one/CD/one way/NN/way to/TO/to do/VB/do that/DT/that is/VBZ/is to/TO/to modify/VB/modify the/DT/the queue/NN/queue class/NN/class so/RB/so that/IN/that it/PRP/it maintains/VBZ/maintains a/DT/a reference/NN/reference to/TO/to both/DT/both the/DT/the first/JJ/first and/CC/and the/DT/the last/JJ/last node/NN/node /,/, as/IN/as shown/NN/shown in/IN/in the/DT/the figure/NN/figure /:/: cargo/NN/cargo next/IN/next cargo/NN/cargo next/IN/next cargo/NN/cargo next/IN/next 1/CD/1 2/CD/2 3/CD/3 head/NN/head length/NN/length 3/CD/3 last/JJ/last 200/CD/200 queues/NNS/queues the/DT/the improvedqueue/NN/improvedqueue implementation/NN/implementation looks/NNS/looks like/IN/like this/DT/this /:/: class/NN/class improvedqueue/NN/improvedqueue /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /:/) /:/: self.length/JJ/self.length =/NN/= 0/-NONE-/0 self.head/JJ/self.head =/NN/= none/NN/none self.last/JJ/self.last =/NN/= none/NN/none def/NN/def isempty/NN/isempty /:/( self/NN/self /:/) /:/: return/NN/return /:/( self.length/JJ/self.length =/NN/= =/:/= 0/-NONE-/0 /:/) so/IN/so far/RB/far /,/, the/DT/the only/JJ/only change/NN/change is/VBZ/is the/DT/the attribute/NN/attribute last/NNP/last. it/PRP/it is/VBZ/is used/VBN/used in/IN/in insert/NN/insert and/CC/and remove/VB/remove methods/NNS/methods /:/: class/NN/class improvedqueue/NN/improvedqueue /:/: /:/... def/NN/def insert/NN/insert /:/( self/NN/self /,/, cargo/NN/cargo /:/) /:/: node/NN/node =/:/= node/NN/node /:/( cargo/NN/cargo /:/) node.next/JJ/node.next =/NN/= none/NN/none if/IN/if self.length/JJ/self.length =/NN/= =/:/= 0/-NONE-/0 /:/: #/#/# if/IN/if list/NN/list is/VBZ/is empty/JJ/empty /,/, the/DT/the new/JJ/new node/NN/node is/VBZ/is head/NN/head and/CC/and last/JJ/last self.head/JJ/self.head =/NN/= self.last/JJ/self.last =/NN/= node/NN/node else/RB/else /:/: #/#/# find/NN/find the/DT/the last/JJ/last node/NN/node last/JJ/last =/NN/= self.last/JJ/self.last #/#/# append/NN/append the/DT/the new/JJ/new node/NN/node last.next/JJ/last.next =/NN/= node/NN/node self.last/JJ/self.last =/NN/= node/NN/node self.length/NN/self.length =/:/= self.length/JJ/self.length +/NN/+ 1/CD/1 since/IN/since last/JJ/last keeps/NNS/keeps track/VBP/track of/IN/of the/DT/the last/JJ/last node/NN/node /,/, we/PRP/we don/VBP/don t/NN/t have/VBP/have to/TO/to search/VB/search for/IN/for it/NNP/it. as/IN/as a/DT/a result/NN/result /,/, this/DT/this method/NN/method is/VBZ/is constant/JJ/constant time/NNP/time. there/RB/there is/VBZ/is a/DT/a price/NN/price to/TO/to pay/VB/pay for/IN/for that/DT/that speed/NNP/speed. we/PRP/we have/VBP/have to/TO/to add/VB/add a/DT/a special/JJ/special case/NN/case to/TO/to remove/VB/remove to/TO/to set/VB/set last/JJ/last to/TO/to none/NN/none when/WRB/when the/DT/the last/JJ/last node/NN/node is/VBZ/is removed/VBN/removed /:/: class/NN/class improvedqueue/NN/improvedqueue /:/: /:/... def/NN/def remove/NN/remove /:/( self/NN/self /:/) /:/: cargo/NN/cargo =/:/= self.head.cargo/JJ/self.head.cargo self.head/JJ/self.head =/NN/= self.head.next/JJ/self.head.next self.length/NN/self.length =/:/= self.length/JJ/self.length /:/- 1/CD/1 if/IN/if self.length/JJ/self.length =/NN/= =/:/= 0/-NONE-/0 /:/: self.last/JJ/self.last =/NN/= none/NN/none return/NN/return cargo/NN/cargo 19.5/CD/19.5 priority/NN/priority queue/NN/queue 201/CD/201 this/DT/this implementation/NN/implementation is/VBZ/is more/RBR/more complicated/JJ/complicated than/IN/than the/DT/the linked/VBN/linked queue/NN/queue implementation/NN/implementation /,/, and/CC/and it/PRP/it is/VBZ/is more/RBR/more difficult/JJ/difficult to/TO/to demonstrate/VB/demonstrate that/IN/that it/PRP/it is/VBZ/is correct/NNP/correct. the/DT/the advantage/NN/advantage is/VBZ/is that/IN/that we/PRP/we have/VBP/have achieved/VBN/achieved the/DT/the goal/NN/goal both/DT/both insert/NN/insert and/CC/and remove/VB/remove are/VBP/are constant/JJ/constant time/NN/time operations/NNP/operations. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write an/DT/an implementation/NN/implementation of/IN/of the/DT/the queue/NN/queue adt/NN/adt using/VBG/using a/DT/a python/NN/python list/NNP/list. compare/NN/compare the/DT/the performance/NN/performance of/IN/of this/DT/this implementation/NN/implementation to/TO/to the/DT/the improvedqueue/NN/improvedqueue for/IN/for a/DT/a range/NN/range of/IN/of queue/NN/queue lengths/NNP/lengths. 19.5/CD/19.5 priority/NN/priority queue/NN/queue the/DT/the priority/NN/priority queue/NN/queue adt/NN/adt has/VBZ/has the/DT/the same/JJ/same interface/NN/interface as/IN/as the/DT/the queue/NN/queue adt/NN/adt /,/, but/CC/but different/JJ/different semantics/NNP/semantics. again/RB/again /,/, the/DT/the interface/NN/interface is/VBZ/is /:/: init/NN/init /:/: initialize/NN/initialize a/DT/a new/JJ/new empty/NN/empty queue/NNP/queue. insert/NN/insert /:/: add/JJ/add a/DT/a new/JJ/new item/NN/item to/TO/to the/DT/the queue/NNP/queue. remove/NN/remove /:/: remove/NN/remove and/CC/and return/NN/return an/DT/an item/NN/item from/IN/from the/DT/the queue/NNP/queue. the/DT/the item/NN/item that/IN/that is/VBZ/is returned/VBN/returned is/VBZ/is the/DT/the one/CD/one with/IN/with the/DT/the highest/JJS/highest priority/NNP/priority. isempty/NN/isempty /:/: check/NN/check whether/IN/whether the/DT/the queue/NN/queue is/VBZ/is empty/NNP/empty. the/DT/the semantic/JJ/semantic difference/NN/difference is/VBZ/is that/IN/that the/DT/the item/NN/item that/IN/that is/VBZ/is removed/VBN/removed from/IN/from the/DT/the queue/NN/queue is/VBZ/is not/RB/not necessarily/RB/necessarily the/DT/the first/JJ/first one/CD/one that/WDT/that was/VBD/was added/NNP/added. rather/RB/rather /,/, it/PRP/it is/VBZ/is the/DT/the item/NN/item in/IN/in the/DT/the queue/NN/queue that/IN/that has/VBZ/has the/DT/the highest/JJS/highest priority/NNP/priority. what/WP/what the/DT/the priorities/NNS/priorities are/VBP/are and/CC/and how/WRB/how they/PRP/they compare/VBP/compare to/TO/to each/DT/each other/JJ/other are/VBP/are not/RB/not specified/VBN/specified by/IN/by the/DT/the priority/NN/priority queue/NN/queue implementation/NNP/implementation. it/PRP/it depends/VBZ/depends on/IN/on which/WDT/which items/NNS/items are/VBP/are in/IN/in the/DT/the queue/NNP/queue. for/IN/for example/NN/example /,/, if/IN/if the/DT/the items/NNS/items in/IN/in the/DT/the queue/NN/queue have/VBP/have names/NNS/names /,/, we/PRP/we might/MD/might choose/VB/choose them/PRP/them in/IN/in alphabetical/JJ/alphabetical order/NNP/order. if/IN/if they/PRP/they are/VBP/are bowling/VBG/bowling scores/NNS/scores /,/, we/PRP/we might/MD/might go/VB/go from/IN/from highest/JJS/highest to/TO/to lowest/VB/lowest /,/, but/CC/but if/IN/if they/PRP/they are/VBP/are golf/PRP/golf scores/NNS/scores /,/, we/PRP/we would/MD/would go/VB/go from/IN/from lowest/JJS/lowest to/TO/to highest/NNP/highest. as/IN/as long/RB/long as/IN/as we/PRP/we can/MD/can compare/VB/compare the/DT/the items/NNS/items in/IN/in the/DT/the queue/NN/queue /,/, we/PRP/we can/MD/can find/VB/find and/CC/and remove/VB/remove the/DT/the one/CD/one with/IN/with the/DT/the highest/JJS/highest priority/NNP/priority. this/DT/this implementation/NN/implementation of/IN/of priority/NN/priority queue/NN/queue has/VBZ/has as/RB/as an/DT/an attribute/NN/attribute a/DT/a python/NN/python list/NN/list that/WDT/that contains/VBZ/contains the/DT/the items/NNS/items in/IN/in the/DT/the queue/NNP/queue. class/NN/class priorityqueue/NN/priorityqueue /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /:/) /:/: self.items/NNS/self.items =/VBP/= /:/[ /:/] def/NN/def isempty/NN/isempty /:/( self/NN/self /:/) /:/: return/NN/return self.items/NNS/self.items =/VBP/= =/:/= /:/[ /:/] 202/CD/202 queues/NNS/queues def/IN/def insert/NN/insert /:/( self/NN/self /,/, item/NN/item /:/) /:/: self.items.append/JJ/self.items.append /NN/( item/NN/item /:/) the/DT/the initialization/NN/initialization method/NN/method /,/, isempty/NN/isempty /,/, and/CC/and insert/VB/insert are/VBP/are all/DT/all veneers/NNS/veneers on/IN/on list/NN/list operations/NNP/operations. the/DT/the only/JJ/only interesting/JJ/interesting method/NN/method is/VBZ/is remove/JJ/remove /:/: class/NN/class priorityqueue/NN/priorityqueue /:/: /:/... def/NN/def remove/NN/remove /:/( self/NN/self /:/) /:/: maxi/NN/maxi =/:/= 0/-NONE-/0 for/IN/for i/PRP/i in/IN/in range/NN/range /:/( 1,len/CD/1,len /CD/( self.items/NNS/self.items /:/) /:/) /:/: if/IN/if self.items/NNS/self.items /VBP/[ i/PRP/i /VBP/] >/:/> self.items/NNS/self.items /VBP/[ maxi/NN/maxi /:/] /:/: maxi/NN/maxi =/:/= i/PRP/i item/VBP/item =/:/= self.items/NNS/self.items /VBP/[ maxi/NN/maxi /:/] self.items/NNS/self.items /VBP/[ maxi/NN/maxi /:/: maxi/NN/maxi +/:/+ 1/CD/1 /CD/] =/CD/= /CD/[ /CD/] return/NN/return item/NN/item at/IN/at the/DT/the beginning/NN/beginning of/IN/of each/DT/each iteration/NN/iteration /,/, maxi/NN/maxi holds/NNS/holds the/DT/the index/NN/index of/IN/of the/DT/the biggest/JJS/biggest item/NN/item /:/( highest/JJS/highest priority/NN/priority /:/) we/PRP/we have/VBP/have seen/VBN/seen so/RB/so far/NNP/far. each/DT/each time/NN/time through/IN/through the/DT/the loop/NN/loop /,/, the/DT/the program/NN/program compares/VBZ/compares the/DT/the i-eth/JJ/i-eth item/NN/item to/TO/to the/DT/the champion/NNP/champion. if/IN/if the/DT/the new/JJ/new item/NN/item is/VBZ/is bigger/JJR/bigger /,/, the/DT/the value/NN/value of/IN/of maxi/NN/maxi is/VBZ/is set/VBN/set to/TO/to i/NNP/i. when/WRB/when the/DT/the for/IN/for statement/NN/statement completes/NNS/completes /,/, maxi/VBP/maxi is/VBZ/is the/DT/the index/NN/index of/IN/of the/DT/the biggest/JJS/biggest item/NNP/item. this/DT/this item/NN/item is/VBZ/is removed/VBN/removed from/IN/from the/DT/the list/NN/list and/CC/and returned/NNP/returned. let/VB/let s/NNS/s test/NN/test the/DT/the implementation/NN/implementation /:/: >/:/> >/:/> >/:/> q/NN/q =/:/= priorityqueue/NN/priorityqueue /:/( /:/) >/:/> >/:/> >/:/> q.insert/JJ/q.insert /NN/( 11/CD/11 /CD/) >/CD/> >/CD/> >/CD/> q.insert/JJ/q.insert /NN/( 12/CD/12 /CD/) >/CD/> >/CD/> >/CD/> q.insert/JJ/q.insert /NN/( 14/CD/14 /CD/) >/CD/> >/CD/> >/CD/> q.insert/JJ/q.insert /NN/( 13/CD/13 /CD/) >/CD/> >/CD/> >/CD/> while/IN/while not/RB/not q.isempty/JJ/q.isempty /NN/( /:/) /:/: print/NN/print q.remove/JJ/q.remove /NN/( /:/) 14/CD/14 13/CD/13 12/CD/12 11/CD/11 if/IN/if the/DT/the queue/NN/queue contains/VBZ/contains simple/JJ/simple numbers/NNS/numbers or/CC/or strings/NNS/strings /,/, they/PRP/they are/VBP/are removed/VBN/removed in/IN/in numerical/JJ/numerical or/CC/or alphabetical/JJ/alphabetical order/NN/order /,/, from/IN/from highest/JJS/highest to/TO/to lowest/NNP/lowest. python/NN/python can/MD/can find/VB/find the/DT/the biggest/JJS/biggest integer/NN/integer or/CC/or string/VBG/string because/IN/because it/PRP/it can/MD/can compare/VB/compare them/PRP/them using/VBG/using the/DT/the built-in/NNP/built-in comparison/NN/comparison operators/NNP/operators. if/IN/if the/DT/the queue/NN/queue contains/VBZ/contains an/DT/an object/NN/object type/NN/type /,/, it/PRP/it has/VBZ/has to/TO/to provide/VB/provide a/DT/a cmp/NN/cmp method/NNP/method. when/WRB/when remove/JJ/remove uses/NNS/uses the/DT/the >/NN/> operator/NN/operator to/TO/to compare/VB/compare items/NNS/items /,/, it/PRP/it invokes/VBZ/invokes the/DT/the cmp/NN/cmp for/IN/for one/CD/one of/IN/of the/DT/the items/NNS/items and/CC/and passes/NNS/passes the/DT/the other/JJ/other as/IN/as an/DT/an argument/NNP/argument. as/IN/as long/RB/long as/IN/as the/DT/the cmp/NN/cmp method/NN/method works/NNS/works correctly/RB/correctly /,/, the/DT/the priority/NN/priority queue/NN/queue will/MD/will work/NNP/work. 19.6/CD/19.6 the/DT/the golfer/NN/golfer class/NN/class 203/CD/203 19.6/CD/19.6 the/DT/the golfer/NN/golfer class/NN/class as/IN/as an/DT/an example/NN/example of/IN/of an/DT/an object/NN/object with/IN/with an/DT/an unusual/JJ/unusual definition/NN/definition of/IN/of priority/NN/priority /,/, let/VB/let s/NNS/s implement/NN/implement a/DT/a class/NN/class called/VBN/called golfer/NN/golfer that/IN/that keeps/NNS/keeps track/VBP/track of/IN/of the/DT/the names/NNS/names and/CC/and scores/NNS/scores of/IN/of golfers/NNP/golfers. as/IN/as usual/JJ/usual /,/, we/PRP/we start/VBP/start by/IN/by defining/NN/defining init/NN/init and/CC/and str/NN/str /:/: class/NN/class golfer/NN/golfer /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /,/, name/NN/name /,/, score/NN/score /:/) /:/: self.name/JJ/self.name =/NN/= name/NN/name self.score/JJ/self.score =/NN/= score/NN/score def/NN/def __str__/NNP/__str__ /NNP/( self/NN/self /:/) /:/: return/NN/return %/NN/% -16s/VBZ/-16s /:/: %/NN/% d/NN/d %/NN/% /:/( self.name/JJ/self.name /,/, self.score/JJ/self.score /NN/) str/NN/str uses/NNS/uses the/DT/the format/NN/format operator/NN/operator to/TO/to put/VB/put the/DT/the names/NNS/names and/CC/and scores/NNS/scores in/IN/in neat/NN/neat columns/NNP/columns. next/JJ/next we/PRP/we define/VBP/define a/DT/a version/NN/version of/IN/of cmp/NN/cmp where/WRB/where the/DT/the lowest/JJS/lowest score/NN/score gets/NNS/gets highest/JJS/highest priority/NNP/priority. as/IN/as always/RB/always /,/, cmp/VB/cmp returns/NNS/returns 1/CD/1 if/IN/if self/PRP/self is/VBZ/is greater/JJR/greater than/IN/than other/JJ/other /,/, -1/-NONE-/-1 if/IN/if self/PRP/self is/VBZ/is less/JJR/less than/IN/than other/JJ/other /,/, and/CC/and 0/-NONE-/0 if/IN/if they/PRP/they are/VBP/are equal/NNP/equal. class/NN/class golfer/NN/golfer /:/: /:/... def/NN/def __cmp__/NNP/__cmp__ /NNP/( self/NN/self /,/, other/JJ/other /NN/) /:/: if/IN/if self.score/JJ/self.score </NN/< other.score/JJ/other.score /:/: return/NN/return 1/CD/1 #/#/# less/JJR/less is/VBZ/is more/JJR/more if/IN/if self.score/JJ/self.score >/NN/> other.score/JJ/other.score /:/: return/NN/return -1/-NONE-/-1 return/NN/return 0/-NONE-/0 now/RB/now we/PRP/we are/VBP/are ready/RB/ready to/TO/to test/NN/test the/DT/the priority/NN/priority queue/NN/queue with/IN/with the/DT/the golfer/NN/golfer class/NN/class /:/: >/:/> >/:/> >/:/> tiger/JJR/tiger =/NN/= golfer/NN/golfer /:/( tiger/NN/tiger woods/NNS/woods /,/, 61/CD/61 /:/) >/CD/> >/CD/> >/CD/> phil/NN/phil =/:/= golfer/NN/golfer /:/( phil/NN/phil mickelson/NN/mickelson /,/, 72/CD/72 /:/) >/CD/> >/CD/> >/CD/> hal/JJ/hal =/NN/= golfer/NN/golfer /:/( hal/JJ/hal sutton/NN/sutton /,/, 69/CD/69 /:/) >/CD/> >/CD/> >/CD/> >/CD/> >/CD/> >/CD/> pq/NN/pq =/:/= priorityqueue/NN/priorityqueue /:/( /:/) >/:/> >/:/> >/:/> pq.insert/JJ/pq.insert /NN/( tiger/NN/tiger /:/) >/:/> >/:/> >/:/> pq.insert/JJ/pq.insert /NN/( phil/NN/phil /:/) >/:/> >/:/> >/:/> pq.insert/JJ/pq.insert /NN/( hal/NN/hal /:/) >/:/> >/:/> >/:/> while/IN/while not/RB/not pq.isempty/JJ/pq.isempty /NN/( /:/) /:/: print/NN/print pq.remove/JJ/pq.remove /NN/( /:/) tiger/NN/tiger woods/NNS/woods /:/: 61/CD/61 hal/JJ/hal sutton/NN/sutton /:/: 69/CD/69 phil/NN/phil mickelson/NN/mickelson /:/: 72/CD/72 as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write an/DT/an implementation/NN/implementation of/IN/of the/DT/the priority/NN/priority queue/NN/queue adt/NN/adt using/VBG/using a/DT/a linked/JJ/linked list/NNP/list. you/PRP/you should/MD/should keep/VB/keep the/DT/the list/NN/list sorted/VBD/sorted so/RB/so that/IN/that removal/NN/removal is/VBZ/is a/DT/a constant/JJ/constant time/NN/time operation/NNP/operation. compare/NN/compare the/DT/the performance/NN/performance of/IN/of this/DT/this implementation/NN/implementation with/IN/with the/DT/the python/NN/python list/NN/list implementation/NNP/implementation. 204/CD/204 queues/NNS/queues 19.7/CD/19.7 glossary/JJ/glossary queue/NN/queue /:/: an/DT/an ordered/VBN/ordered set/NN/set of/IN/of objects/NNS/objects waiting/VBG/waiting for/IN/for a/DT/a service/NN/service of/IN/of some/DT/some kind/NNP/kind. queue/NN/queue /:/: an/DT/an adt/NN/adt that/IN/that performs/NNS/performs the/DT/the operations/NNS/operations one/CD/one might/MD/might perform/VB/perform on/IN/on a/DT/a queue/NNP/queue. queueing/NN/queueing policy/NN/policy /:/: the/DT/the rules/NNS/rules that/WDT/that determine/NN/determine which/WDT/which member/NN/member of/IN/of a/DT/a queue/NN/queue is/VBZ/is removed/VBN/removed next/NNP/next. fifo/NN/fifo /:/: first/JJ/first in/IN/in /,/, first/JJ/first out/IN/out /,/, a/DT/a queueing/NN/queueing policy/NN/policy in/IN/in which/WDT/which the/DT/the first/JJ/first member/NN/member to/TO/to arrive/VB/arrive is/VBZ/is the/DT/the first/JJ/first to/TO/to be/VB/be removed/NNP/removed. priority/NN/priority queue/NN/queue /:/: a/DT/a queueing/NN/queueing policy/NN/policy in/IN/in which/WDT/which each/DT/each member/NN/member has/VBZ/has a/DT/a priority/NN/priority determined/VBN/determined by/IN/by external/JJ/external factors/NNP/factors. the/DT/the member/NN/member with/IN/with the/DT/the highest/JJS/highest priority/NN/priority is/VBZ/is the/DT/the first/JJ/first to/TO/to be/VB/be removed/NNP/removed. priority/NN/priority queue/NN/queue /:/: an/DT/an adt/NN/adt that/IN/that defines/NNS/defines the/DT/the operations/NNS/operations one/CD/one might/MD/might perform/VB/perform on/IN/on a/DT/a priority/NN/priority queue/NNP/queue. linked/VBD/linked queue/NN/queue /:/: an/DT/an implementation/NN/implementation of/IN/of a/DT/a queue/NN/queue using/VBG/using a/DT/a linked/JJ/linked list/NNP/list. constant/NN/constant time/NN/time /:/: an/DT/an operation/NN/operation whose/WP$/whose runtime/NN/runtime does/VBZ/does not/RB/not depend/VB/depend on/IN/on the/DT/the size/NN/size of/IN/of the/DT/the data/NNS/data structure/NNP/structure. linear/NN/linear time/NN/time /:/: an/DT/an operation/NN/operation whose/WP$/whose runtime/NN/runtime is/VBZ/is a/DT/a linear/JJ/linear function/NN/function of/IN/of the/DT/the size/NN/size of/IN/of the/DT/the data/NNS/data structure/NNP/structure. chapter/NN/chapter 20/CD/20 trees/NNS/trees like/IN/like linked/VBN/linked lists/NNS/lists /,/, trees/NNS/trees are/VBP/are made/VBN/made up/RP/up of/IN/of nodes/NNP/nodes. a/DT/a common/JJ/common kind/NN/kind of/IN/of tree/NN/tree is/VBZ/is a/DT/a binary/JJ/binary tree/NN/tree /,/, in/IN/in which/WDT/which each/DT/each node/NN/node contains/VBZ/contains a/DT/a reference/NN/reference to/TO/to two/CD/two other/JJ/other nodes/NNS/nodes /:/( possibly/RB/possibly null/JJ/null /NN/) /./. these/DT/these references/NNS/references are/VBP/are referred/VBN/referred to/TO/to as/RB/as the/DT/the left/NN/left and/CC/and right/RB/right subtrees/NNP/subtrees. like/IN/like list/NN/list nodes/NNS/nodes /,/, tree/VBP/tree nodes/NNS/nodes also/RB/also contain/VBP/contain cargo/NNP/cargo. a/DT/a state/NN/state diagram/NN/diagram for/IN/for a/DT/a tree/NN/tree looks/VBZ/looks like/IN/like this/DT/this /:/: cargo/NN/cargo 1/CD/1 tree/NN/tree none/NN/none none/NN/none none/NN/none none/NN/none left/VBD/left right/RB/right left/VBN/left right/RB/right left/VBN/left right/RB/right cargo/IN/cargo 2/CD/2 cargo/NN/cargo 3/CD/3 to/TO/to avoid/JJ/avoid cluttering/NN/cluttering up/IN/up the/DT/the picture/NN/picture /,/, we/PRP/we often/RB/often omit/VBP/omit the/DT/the nones/NNP/nones. the/DT/the top/JJ/top of/IN/of the/DT/the tree/NN/tree /:/( the/DT/the node/NN/node tree/NN/tree refers/NNS/refers to/TO/to /VB/) is/VBZ/is called/VBN/called the/DT/the root/NNP/root. in/IN/in keeping/VBG/keeping with/IN/with the/DT/the tree/NN/tree metaphor/NN/metaphor /,/, the/DT/the other/JJ/other nodes/NNS/nodes are/VBP/are called/VBN/called branches/NNS/branches and/CC/and the/DT/the nodes/NNS/nodes at/IN/at the/DT/the tips/NNS/tips with/IN/with null/JJ/null references/NNS/references are/VBP/are called/VBN/called leaves/NNP/leaves. it/PRP/it may/MD/may seem/VB/seem odd/JJ/odd that/IN/that we/PRP/we draw/VBP/draw the/DT/the picture/NN/picture with/IN/with the/DT/the root/NN/root at/IN/at the/DT/the top/JJ/top and/CC/and the/DT/the leaves/NNS/leaves at/IN/at the/DT/the bottom/NN/bottom /,/, but/CC/but that/IN/that is/VBZ/is not/RB/not the/DT/the strangest/JJS/strangest thing/NNP/thing. to/TO/to make/VB/make things/NNS/things worse/JJR/worse /,/, computer/NN/computer scientists/NNS/scientists mix/VBP/mix in/IN/in another/DT/another metaphor/NN/metaphor the/DT/the family/NN/family tree/NNP/tree. the/DT/the top/JJ/top node/NN/node is/VBZ/is sometimes/RB/sometimes called/VBN/called a/DT/a parent/NN/parent and/CC/and the/DT/the nodes/NNS/nodes it/PRP/it refers/VBZ/refers to/TO/to are/VBP/are its/PRP$/its children/NNP/children. nodes/VBZ/nodes with/IN/with the/DT/the same/JJ/same parent/NN/parent are/VBP/are called/VBN/called siblings/NNP/siblings. 206/CD/206 trees/NNS/trees finally/RB/finally /,/, there/EX/there is/VBZ/is a/DT/a geometric/JJ/geometric vocabulary/NN/vocabulary for/IN/for talking/VBG/talking about/IN/about trees/NNP/trees. we/PRP/we already/RB/already mentioned/VBN/mentioned left/VBN/left and/CC/and right/RB/right /,/, but/CC/but there/EX/there is/VBZ/is also/RB/also up/IN/up /CD/( toward/IN/toward the/DT/the parent/root/JJ/parent/root /NN/) and/CC/and down/IN/down /CD/( toward/IN/toward the/DT/the children/leaves/NNS/children/leaves /:/) /./. also/RB/also /,/, all/DT/all of/IN/of the/DT/the nodes/NNS/nodes that/WDT/that are/VBP/are the/DT/the same/JJ/same distance/NN/distance from/IN/from the/DT/the root/NN/root comprise/NN/comprise a/DT/a level/NN/level of/IN/of the/DT/the tree/NNP/tree. we/PRP/we probably/RB/probably don/VBP/don t/NN/t need/NN/need three/CD/three metaphors/NNS/metaphors for/IN/for talking/VBG/talking about/IN/about trees/NNS/trees /,/, but/CC/but there/EX/there they/PRP/they are/NNP/are. like/IN/like linked/VBN/linked lists/NNS/lists /,/, trees/NNS/trees are/VBP/are recursive/JJ/recursive data/NNS/data structures/NNS/structures because/IN/because they/PRP/they are/VBP/are defined/VBN/defined recursively/NNP/recursively. a/DT/a tree/NN/tree is/VBZ/is either/DT/either /:/: the/DT/the empty/NN/empty tree/NN/tree /,/, represented/VBD/represented by/IN/by none/NN/none /,/, or/CC/or a/DT/a node/NN/node that/WDT/that contains/VBZ/contains an/DT/an object/NN/object reference/NN/reference and/CC/and two/CD/two tree/JJ/tree references/NNP/references. 20.1/CD/20.1 building/NN/building trees/NNS/trees the/DT/the process/NN/process of/IN/of assembling/VBG/assembling a/DT/a tree/NN/tree is/VBZ/is similar/JJ/similar to/TO/to the/DT/the process/NN/process of/IN/of assembling/VBG/assembling a/DT/a linked/JJ/linked list/NNP/list. each/DT/each constructor/NN/constructor invocation/NN/invocation builds/NNS/builds a/DT/a single/JJ/single node/NNP/node. class/NN/class tree/NN/tree /:/: def/NN/def __init__/NNP/__init__ /NNP/( self/NN/self /,/, cargo/NN/cargo /,/, left/VBN/left =/-NONE-/= none/NN/none /,/, right/RB/right =/:/= none/NN/none /:/) /:/: self.cargo/JJ/self.cargo =/NN/= cargo/NN/cargo self.left/NN/self.left =/:/= left/VBN/left self.right/JJ/self.right =/NN/= right/RB/right def/JJ/def __str__/NNP/__str__ /NNP/( self/NN/self /:/) /:/: return/NN/return str/NN/str /:/( self.cargo/JJ/self.cargo /NN/) the/DT/the cargo/NN/cargo can/MD/can be/VB/be any/DT/any type/NN/type /,/, but/CC/but the/DT/the arguments/NNS/arguments for/IN/for left/NN/left and/CC/and right/RB/right should/MD/should be/VB/be tree/JJ/tree nodes/NNP/nodes. left/NN/left and/CC/and right/RB/right are/VBP/are optional/JJ/optional ;/:/; the/DT/the default/NN/default value/NN/value is/VBZ/is none/NNP/none. to/TO/to print/VB/print a/DT/a node/NN/node /,/, we/PRP/we just/RB/just print/VBP/print the/DT/the cargo/NNP/cargo. one/CD/one way/NN/way to/TO/to build/VB/build a/DT/a tree/NN/tree is/VBZ/is from/IN/from the/DT/the bottom/NN/bottom up/NNP/up. allocate/NN/allocate the/DT/the child/NN/child nodes/VBZ/nodes first/JJ/first /:/: left/VBN/left =/-NONE-/= tree/NN/tree /:/( 2/CD/2 /CD/) right/NN/right =/:/= tree/NN/tree /:/( 3/CD/3 /CD/) then/RB/then create/JJ/create the/DT/the parent/NN/parent node/NN/node and/CC/and link/NN/link it/PRP/it to/TO/to the/DT/the children/NNS/children /:/: tree/NN/tree =/:/= tree/NN/tree /:/( 1/CD/1 /,/, left/VBN/left /,/, right/RB/right /:/) ;/:/; we/PRP/we can/MD/can write/VB/write this/DT/this code/NN/code more/JJR/more concisely/RB/concisely by/IN/by nesting/NN/nesting constructor/NN/constructor invocations/NNS/invocations /:/: >/:/> >/:/> >/:/> tree/NN/tree =/:/= tree/NN/tree /:/( 1/CD/1 /,/, tree/NN/tree /:/( 2/CD/2 /CD/) /,/, tree/NN/tree /:/( 3/CD/3 /CD/) /CD/) either/DT/either way/NN/way /,/, the/DT/the result/NN/result is/VBZ/is the/DT/the tree/NN/tree at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the chapter/NNP/chapter. 20.2/CD/20.2 traversing/VBG/traversing trees/NNS/trees 207/CD/207 20.2/CD/20.2 traversing/VBG/traversing trees/NNS/trees any/DT/any time/NN/time you/PRP/you see/VBP/see a/DT/a new/JJ/new data/NNS/data structure/VBP/structure /,/, your/PRP$/your first/JJ/first question/NN/question should/MD/should be/VB/be /,/, how/WRB/how do/VBP/do i/PRP/i traverse/VB/traverse it/PRP/it the/DT/the most/RBS/most natural/JJ/natural way/NN/way to/TO/to traverse/VB/traverse a/DT/a tree/NN/tree is/VBZ/is recursively/NNP/recursively. for/IN/for example/NN/example /,/, if/IN/if the/DT/the tree/NN/tree contains/VBZ/contains integers/NNS/integers as/IN/as cargo/NN/cargo /,/, this/DT/this function/NN/function returns/NNS/returns their/PRP$/their sum/NN/sum /:/: def/NN/def total/NN/total /:/( tree/NN/tree /:/) /:/: if/IN/if tree/NN/tree =/:/= =/:/= none/NN/none /:/: return/NN/return 0/-NONE-/0 return/NN/return total/NN/total /:/( tree.left/JJ/tree.left /NN/) +/:/+ total/JJ/total /NN/( tree.right/JJ/tree.right /NN/) +/:/+ tree.cargo/JJ/tree.cargo the/DT/the base/NN/base case/NN/case is/VBZ/is the/DT/the empty/NN/empty tree/NN/tree /,/, which/WDT/which contains/VBZ/contains no/DT/no cargo/NN/cargo /,/, so/RB/so the/DT/the sum/NN/sum is/VBZ/is 0/CD/0. the/DT/the recursive/JJ/recursive step/NN/step makes/VBZ/makes two/CD/two recursive/JJ/recursive calls/NNS/calls to/TO/to find/VB/find the/DT/the sum/NN/sum of/IN/of the/DT/the child/NN/child trees/NNP/trees. when/WRB/when the/DT/the recursive/JJ/recursive calls/NNS/calls complete/JJ/complete /,/, we/PRP/we add/VBP/add the/DT/the cargo/NN/cargo of/IN/of the/DT/the parent/NN/parent and/CC/and return/NN/return the/DT/the total/NNP/total. 20.3/CD/20.3 expression/NN/expression trees/NNS/trees a/DT/a tree/NN/tree is/VBZ/is a/DT/a natural/JJ/natural way/NN/way to/TO/to represent/VB/represent the/DT/the structure/NN/structure of/IN/of an/DT/an expression/NNP/expression. unlike/IN/unlike other/JJ/other notations/NNS/notations /,/, it/PRP/it can/MD/can represent/VB/represent the/DT/the computation/NN/computation unambiguously/NNP/unambiguously. for/IN/for example/NN/example /,/, the/DT/the infix/NN/infix expression/NN/expression 1/CD/1 +/CD/+ 2/CD/2 3/CD/3 is/VBZ/is ambiguous/JJ/ambiguous unless/NN/unless we/PRP/we know/VBP/know that/IN/that the/DT/the multiplication/NN/multiplication happens/VBZ/happens before/IN/before the/DT/the addition/NNP/addition. this/DT/this expression/NN/expression tree/NN/tree represents/VBZ/represents the/DT/the same/JJ/same computation/NN/computation /:/: cargo/NN/cargo 2/CD/2 cargo/NN/cargo 1/CD/1 cargo/NN/cargo +/:/+ cargo/NN/cargo cargo/NN/cargo 3/CD/3 tree/NN/tree left/VBN/left right/NN/right left/VBN/left right/NN/right left/VBN/left right/NN/right left/VBN/left right/NN/right left/VBN/left right/NN/right the/DT/the nodes/NNS/nodes of/IN/of an/DT/an expression/NN/expression tree/NN/tree can/MD/can be/VB/be operands/NNS/operands like/IN/like 1/CD/1 and/CC/and 2/CD/2 or/CC/or operators/NNS/operators like/IN/like +/NN/+ and/CC/and /./. operands/NNS/operands are/VBP/are leaf/IN/leaf nodes/NNS/nodes ;/:/; operator/NN/operator nodes/VBZ/nodes contain/NN/contain references/NNS/references to/TO/to their/PRP$/their operands/NNP/operands. /NNP/( all/DT/all of/IN/of these/DT/these operators/NNS/operators are/VBP/are binary/JJ/binary /,/, meaning/NN/meaning they/PRP/they have/VBP/have exactly/RB/exactly two/CD/two operands/NNP/operands. /NNP/) we/PRP/we can/MD/can build/VB/build this/DT/this tree/NN/tree like/IN/like this/DT/this /:/: >/:/> >/:/> >/:/> tree/NN/tree =/:/= tree/NN/tree /:/( +/:/+ /,/, tree/VBP/tree /:/( 1/CD/1 /CD/) /,/, tree/NN/tree /:/( /,/, tree/VBP/tree /:/( 2/CD/2 /CD/) /,/, tree/NN/tree /:/( 3/CD/3 /CD/) /CD/) /CD/) 208/CD/208 trees/NNS/trees looking/VBG/looking at/IN/at the/DT/the figure/NN/figure /,/, there/EX/there is/VBZ/is no/DT/no question/NN/question what/WP/what the/DT/the order/NN/order of/IN/of operations/NNS/operations is/VBZ/is ;/:/; the/DT/the multiplication/NN/multiplication happens/VBZ/happens first/JJ/first in/IN/in order/NN/order to/TO/to compute/VB/compute the/DT/the second/JJ/second operand/NN/operand of/IN/of the/DT/the addition/NNP/addition. expression/NN/expression trees/NNS/trees have/VBP/have many/JJ/many uses/NNP/uses. the/DT/the example/NN/example in/IN/in this/DT/this chapter/NN/chapter uses/VBZ/uses trees/NNS/trees to/TO/to translate/VB/translate expressions/NNS/expressions to/TO/to postfix/VB/postfix /,/, prefix/NN/prefix /,/, and/CC/and infix/NNP/infix. similar/JJ/similar trees/NNS/trees are/VBP/are used/VBN/used inside/NN/inside compilers/NNS/compilers to/TO/to parse/VB/parse /,/, optimize/VB/optimize /,/, and/CC/and translate/VB/translate programs/NNP/programs. 20.4/CD/20.4 tree/NN/tree traversal/NN/traversal we/PRP/we can/MD/can traverse/VB/traverse an/DT/an expression/NN/expression tree/NN/tree and/CC/and print/VBP/print the/DT/the contents/NNS/contents like/IN/like this/DT/this /:/: def/NN/def printtree/NN/printtree /:/( tree/NN/tree /:/) /:/: if/IN/if tree/NN/tree =/:/= =/:/= none/NN/none /:/: return/NN/return print/NN/print tree.cargo/-NONE-/tree.cargo /,/, printtree/VBP/printtree /:/( tree.left/JJ/tree.left /NN/) printtree/NN/printtree /:/( tree.right/JJ/tree.right /NN/) in/IN/in other/JJ/other words/NNS/words /,/, to/TO/to print/VB/print a/DT/a tree/NN/tree /,/, first/JJ/first print/NN/print the/DT/the contents/NNS/contents of/IN/of the/DT/the root/NN/root /,/, then/RB/then print/VBP/print the/DT/the entire/JJ/entire left/NN/left subtree/NN/subtree /,/, and/CC/and then/RB/then print/VBP/print the/DT/the entire/JJ/entire right/NN/right subtree/NNP/subtree. this/DT/this way/NN/way of/IN/of traversing/VBG/traversing a/DT/a tree/NN/tree is/VBZ/is called/VBN/called a/DT/a preorder/NN/preorder /,/, because/IN/because the/DT/the contents/NNS/contents of/IN/of the/DT/the root/NN/root appear/NN/appear before/IN/before the/DT/the contents/NNS/contents of/IN/of the/DT/the children/NNP/children. for/IN/for the/DT/the previous/JJ/previous example/NN/example /,/, the/DT/the output/NN/output is/VBZ/is /:/: >/:/> >/:/> >/:/> tree/NN/tree =/:/= tree/NN/tree /:/( +/:/+ /,/, tree/VBP/tree /:/( 1/CD/1 /CD/) /,/, tree/NN/tree /:/( /,/, tree/VBP/tree /:/( 2/CD/2 /CD/) /,/, tree/NN/tree /:/( 3/CD/3 /CD/) /CD/) /CD/) >/CD/> >/CD/> >/CD/> printtree/CD/printtree /CD/( tree/NN/tree /:/) +/:/+ 1/CD/1 2/CD/2 3/CD/3 this/DT/this format/NN/format is/VBZ/is different/JJ/different from/IN/from both/DT/both postfix/NN/postfix and/CC/and infix/CD/infix ;/:/; it/PRP/it is/VBZ/is another/DT/another notation/NN/notation called/VBN/called prefix/NN/prefix /,/, in/IN/in which/WDT/which the/DT/the operators/NNS/operators appear/VBP/appear before/IN/before their/PRP$/their operands/NNP/operands. you/PRP/you might/MD/might suspect/VB/suspect that/IN/that if/IN/if you/PRP/you traverse/VBP/traverse the/DT/the tree/NN/tree in/IN/in a/DT/a different/JJ/different order/NN/order /,/, you/PRP/you will/MD/will get/VB/get the/DT/the expression/NN/expression in/IN/in a/DT/a different/JJ/different notation/NNP/notation. for/IN/for example/NN/example /,/, if/IN/if you/PRP/you print/VBP/print the/DT/the subtrees/NNS/subtrees first/RB/first and/CC/and then/RB/then the/DT/the root/NN/root node/NN/node /,/, you/PRP/you get/VBP/get /:/: def/NN/def printtreepostorder/NN/printtreepostorder /:/( tree/NN/tree /:/) /:/: if/IN/if tree/NN/tree =/:/= =/:/= none/NN/none /:/: return/NN/return printtreepostorder/NN/printtreepostorder /:/( tree.left/JJ/tree.left /NN/) printtreepostorder/NN/printtreepostorder /:/( tree.right/JJ/tree.right /NN/) print/NN/print tree.cargo/-NONE-/tree.cargo /,/, the/DT/the result/NN/result /,/, 1/CD/1 2/CD/2 3/CD/3 +/CD/+ /,/, is/VBZ/is in/IN/in postfix/NN/postfix !/./! this/DT/this order/NN/order of/IN/of traversal/NN/traversal is/VBZ/is called/VBN/called postorder/NNP/postorder. finally/RB/finally /,/, to/TO/to traverse/VB/traverse a/DT/a tree/NN/tree inorder/NN/inorder /,/, you/PRP/you print/VBP/print the/DT/the left/NN/left tree/NN/tree /,/, then/RB/then the/DT/the root/NN/root /,/, and/CC/and then/RB/then the/DT/the right/NN/right tree/NN/tree /:/: 20.4/CD/20.4 tree/NN/tree traversal/NN/traversal 209/CD/209 def/NN/def printtreeinorder/NN/printtreeinorder /:/( tree/NN/tree /:/) /:/: if/IN/if tree/NN/tree =/:/= =/:/= none/NN/none /:/: return/NN/return printtreeinorder/NN/printtreeinorder /:/( tree.left/JJ/tree.left /NN/) print/NN/print tree.cargo/-NONE-/tree.cargo /,/, printtreeinorder/NN/printtreeinorder /:/( tree.right/JJ/tree.right /NN/) the/DT/the result/NN/result is/VBZ/is 1/CD/1 +/CD/+ 2/CD/2 3/CD/3 /,/, which/WDT/which is/VBZ/is the/DT/the expression/NN/expression in/IN/in infix/NNP/infix. to/TO/to be/VB/be fair/JJ/fair /,/, we/PRP/we should/MD/should point/VB/point out/RP/out that/IN/that we/PRP/we have/VBP/have omitted/VBN/omitted an/DT/an important/JJ/important complication/NNP/complication. sometimes/RB/sometimes when/WRB/when we/PRP/we write/VBP/write an/DT/an expression/NN/expression in/IN/in infix/NN/infix /,/, we/PRP/we have/VBP/have to/TO/to use/VB/use parentheses/NNS/parentheses to/TO/to preserve/VB/preserve the/DT/the order/NN/order of/IN/of operations/NNP/operations. so/RB/so an/DT/an inorder/NN/inorder traversal/NN/traversal is/VBZ/is not/RB/not quite/RB/quite sufficient/JJ/sufficient to/TO/to generate/VB/generate an/DT/an infix/NN/infix expression/NNP/expression. nevertheless/NN/nevertheless /,/, with/IN/with a/DT/a few/JJ/few improvements/NNS/improvements /,/, the/DT/the expression/NN/expression tree/NN/tree and/CC/and the/DT/the three/CD/three recursive/JJ/recursive traversals/NNS/traversals provide/VBP/provide a/DT/a general/JJ/general way/NN/way to/TO/to translate/VB/translate expressions/NNS/expressions from/IN/from one/CD/one format/NN/format to/TO/to another/NNP/another. as/IN/as an/DT/an exercise/NN/exercise /,/, modify/NN/modify printtreeinorder/NN/printtreeinorder so/RB/so that/IN/that it/PRP/it puts/VBZ/puts parentheses/NNS/parentheses around/IN/around every/DT/every operator/NN/operator and/CC/and pair/NN/pair of/IN/of operands/NNP/operands. is/VBZ/is the/DT/the output/NN/output correct/NN/correct and/CC/and unambiguous/JJ/unambiguous are/VBP/are the/DT/the parentheses/NNS/parentheses always/RB/always necessary/JJ/necessary if/IN/if we/PRP/we do/VBP/do an/DT/an inorder/NN/inorder traversal/NN/traversal and/CC/and keep/VB/keep track/NN/track of/IN/of what/WP/what level/NN/level in/IN/in the/DT/the tree/NN/tree we/PRP/we are/VBP/are on/IN/on /,/, we/PRP/we can/MD/can generate/VB/generate a/DT/a graphical/JJ/graphical representation/NN/representation of/IN/of a/DT/a tree/NN/tree /:/: def/NN/def printtreeindented/VBD/printtreeindented /CD/( tree/NN/tree /,/, level/NN/level =/:/= 0/-NONE-/0 /:/) /:/: if/IN/if tree/NN/tree =/:/= =/:/= none/NN/none /:/: return/NN/return printtreeindented/VBD/printtreeindented /CD/( tree.right/JJ/tree.right /,/, level/NN/level +/:/+ 1/CD/1 /CD/) print/NN/print level/NN/level +/:/+ str/NN/str /:/( tree.cargo/JJ/tree.cargo /NN/) printtreeindented/VBD/printtreeindented /CD/( tree.left/JJ/tree.left /,/, level/NN/level +/:/+ 1/CD/1 /CD/) the/DT/the parameter/NN/parameter level/NN/level keeps/NNS/keeps track/VBP/track of/IN/of where/WRB/where we/PRP/we are/VBP/are in/IN/in the/DT/the tree/NNP/tree. by/IN/by default/NN/default /,/, it/PRP/it is/VBZ/is initially/RB/initially 0/CD/0. each/DT/each time/NN/time we/PRP/we make/VBP/make a/DT/a recursive/JJ/recursive call/NN/call /,/, we/PRP/we pass/VBP/pass level/NN/level +/:/+ 1/CD/1 because/IN/because the/DT/the child/NN/child s/VBZ/s level/NN/level is/VBZ/is always/RB/always one/CD/one greater/JJR/greater than/IN/than the/DT/the parent/NN/parent s/NNP/s. each/DT/each item/NN/item is/VBZ/is indented/VBN/indented by/IN/by two/CD/two spaces/NNS/spaces per/IN/per level/NNP/level. the/DT/the result/NN/result for/IN/for the/DT/the example/NN/example tree/NN/tree is/VBZ/is /:/: >/:/> >/:/> >/:/> printtreeindented/VBN/printtreeindented /-NONE-/( tree/NN/tree /:/) 3/CD/3 2/CD/2 +/CD/+ 1/CD/1 if/IN/if you/PRP/you look/VBP/look at/IN/at the/DT/the output/NN/output sideways/VBZ/sideways /,/, you/PRP/you see/VBP/see a/DT/a simplified/JJ/simplified version/NN/version of/IN/of the/DT/the original/JJ/original figure/NNP/figure. 210/CD/210 trees/NNS/trees 20.5/CD/20.5 building/VBG/building an/DT/an expression/NN/expression tree/NN/tree in/IN/in this/DT/this section/NN/section /,/, we/PRP/we parse/VBP/parse infix/CD/infix expressions/NNS/expressions and/CC/and build/VB/build the/DT/the corresponding/NN/corresponding expression/NN/expression trees/NNP/trees. for/IN/for example/NN/example /,/, the/DT/the expression/NN/expression /:/( 3/CD/3 +/CD/+ 7/CD/7 /CD/) 9/CD/9 yields/NNS/yields the/DT/the following/VBG/following tree/NN/tree /:/: 9/CD/9 3/CD/3 7/CD/7 +/CD/+ notice/NN/notice that/WDT/that we/PRP/we have/VBP/have simplified/VBN/simplified the/DT/the diagram/NN/diagram by/IN/by leaving/NN/leaving out/IN/out the/DT/the names/NNS/names of/IN/of the/DT/the attributes/NNP/attributes. the/DT/the parser/NN/parser we/PRP/we will/MD/will write/VB/write handles/NNS/handles expressions/NNS/expressions that/WDT/that include/VBP/include numbers/NNS/numbers /,/, parentheses/NNS/parentheses /,/, and/CC/and the/DT/the operators/NNS/operators +/:/+ and/CC/and /./. we/PRP/we assume/VBP/assume that/IN/that the/DT/the input/NN/input string/VBG/string has/VBZ/has already/RB/already been/VBN/been tokenized/VBN/tokenized into/IN/into a/DT/a python/NN/python list/NNP/list. the/DT/the token/NN/token list/NN/list for/IN/for /CD/( 3/CD/3 +/CD/+ 7/CD/7 /CD/) 9/CD/9 is/VBZ/is /:/: /:/[ /:/( /,/, 3/CD/3 /,/, +/:/+ /,/, 7/CD/7 /,/, /NNP/) /,/, /,/, 9/CD/9 /,/, end/NN/end /:/] the/DT/the end/NN/end token/NN/token is/VBZ/is useful/JJ/useful for/IN/for preventing/NN/preventing the/DT/the parser/NN/parser from/IN/from reading/NN/reading past/NN/past the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. as/IN/as an/DT/an exercise/NN/exercise /,/, write/JJ/write a/DT/a function/NN/function that/WDT/that takes/VBZ/takes an/DT/an expression/NN/expression string/VBG/string and/CC/and returns/NNS/returns a/DT/a token/NN/token list/NNP/list. the/DT/the first/JJ/first function/NN/function we/PRP/we ll/VBP/ll write/JJ/write is/VBZ/is gettoken/VBN/gettoken /,/, which/WDT/which takes/VBZ/takes a/DT/a token/NN/token list/NN/list and/CC/and an/DT/an expected/VBN/expected token/NN/token as/IN/as arguments/NNP/arguments. it/PRP/it compares/VBZ/compares the/DT/the expected/VBN/expected token/NN/token to/TO/to the/DT/the first/JJ/first token/NN/token on/IN/on the/DT/the list/NN/list /:/: if/IN/if they/PRP/they match/VBP/match /,/, it/PRP/it removes/VBZ/removes the/DT/the token/NN/token from/IN/from the/DT/the list/NN/list and/CC/and returns/NNS/returns true/JJ/true ;/:/; otherwise/NN/otherwise /,/, it/PRP/it returns/VBZ/returns false/NN/false /:/: def/NN/def gettoken/NN/gettoken /:/( tokenlist/NN/tokenlist /,/, expected/VBN/expected /-NONE-/) /:/: if/IN/if tokenlist/NN/tokenlist /:/[ 0/-NONE-/0 /:/] =/:/= =/:/= expected/VBN/expected /:/: del/NN/del tokenlist/NN/tokenlist /:/[ 0/-NONE-/0 /:/] return/NN/return true/NN/true else/RB/else /:/: return/NN/return false/NN/false since/IN/since tokenlist/NN/tokenlist refers/NNS/refers to/TO/to a/DT/a mutable/JJ/mutable object/NN/object /,/, the/DT/the changes/NNS/changes made/VBN/made here/RB/here are/VBP/are visible/JJ/visible to/TO/to any/DT/any other/JJ/other variable/JJ/variable that/IN/that refers/NNS/refers to/TO/to the/DT/the same/JJ/same object/NNP/object. 20.5/CD/20.5 building/NN/building an/DT/an expression/NN/expression tree/NN/tree 211/CD/211 the/DT/the next/JJ/next function/NN/function /,/, getnumber/NN/getnumber /,/, handles/VBZ/handles operands/NNP/operands. if/IN/if the/DT/the next/JJ/next token/NN/token in/IN/in tokenlist/NN/tokenlist is/VBZ/is a/DT/a number/NN/number /,/, getnumber/NN/getnumber removes/NNS/removes it/PRP/it and/CC/and returns/NNS/returns a/DT/a leaf/NN/leaf node/NN/node containing/VBG/containing the/DT/the number/NN/number ;/:/; otherwise/NN/otherwise /,/, it/PRP/it returns/VBZ/returns none/NNP/none. def/NN/def getnumber/NN/getnumber /:/( tokenlist/NN/tokenlist /:/) /:/: x/NN/x =/:/= tokenlist/NN/tokenlist /:/[ 0/-NONE-/0 /:/] if/IN/if not/RB/not isinstance/NN/isinstance /:/( x/NN/x /,/, int/NN/int /:/) /:/: return/NN/return none/NN/none del/NN/del tokenlist/NN/tokenlist /:/[ 0/-NONE-/0 /:/] return/NN/return tree/NN/tree /:/( x/NN/x /,/, none/NN/none /,/, none/NN/none /:/) before/IN/before continuing/VBG/continuing /,/, we/PRP/we should/MD/should test/VB/test getnumber/NN/getnumber in/IN/in isolation/NNP/isolation. we/PRP/we assign/VBP/assign a/DT/a list/NN/list of/IN/of numbers/NNS/numbers to/TO/to tokenlist/VB/tokenlist /,/, extract/NN/extract the/DT/the first/JJ/first /,/, print/NN/print the/DT/the result/NN/result /,/, and/CC/and print/VBP/print what/WP/what remains/NNS/remains of/IN/of the/DT/the token/NN/token list/NN/list /:/: >/:/> >/:/> >/:/> tokenlist/NN/tokenlist =/:/= /:/[ 9/CD/9 /,/, 11/CD/11 /,/, end/NN/end /:/] >/:/> >/:/> >/:/> x/NN/x =/:/= getnumber/NN/getnumber /:/( tokenlist/NN/tokenlist /:/) >/:/> >/:/> >/:/> printtreepostorder/NN/printtreepostorder /:/( x/NN/x /:/) 9/CD/9 >/CD/> >/CD/> >/CD/> print/NN/print tokenlist/NN/tokenlist /:/[ 11/CD/11 /,/, end/NN/end /:/] the/DT/the next/JJ/next method/NN/method we/PRP/we need/VBP/need is/VBZ/is getproduct/NN/getproduct /,/, which/WDT/which builds/NNS/builds an/DT/an expression/NN/expression tree/NN/tree for/IN/for products/NNP/products. a/DT/a simple/JJ/simple product/NN/product has/VBZ/has two/CD/two numbers/NNS/numbers as/IN/as operands/NNS/operands /,/, like/IN/like 3/CD/3 7/CD/7. here/RB/here is/VBZ/is a/DT/a version/NN/version of/IN/of getproduct/NN/getproduct that/IN/that handles/NNS/handles simple/VBP/simple products/NNP/products. def/NN/def getproduct/NN/getproduct /:/( tokenlist/NN/tokenlist /:/) /:/: a/DT/a =/NN/= getnumber/NN/getnumber /:/( tokenlist/NN/tokenlist /:/) if/IN/if gettoken/JJ/gettoken /NN/( tokenlist/NN/tokenlist /,/, /:/) /:/: b/LS/b =/:/= getnumber/NN/getnumber /:/( tokenlist/NN/tokenlist /:/) return/NN/return tree/NN/tree /:/( /,/, a/DT/a /,/, b/NN/b /:/) else/NN/else /:/: return/NN/return a/DT/a assuming/NN/assuming that/WDT/that getnumber/NN/getnumber succeeds/VBZ/succeeds and/CC/and returns/NNS/returns a/DT/a singleton/NN/singleton tree/NN/tree /,/, we/PRP/we assign/VBP/assign the/DT/the first/JJ/first operand/NN/operand to/TO/to a/NNP/a. if/IN/if the/DT/the next/JJ/next character/NN/character is/VBZ/is /,/, we/PRP/we get/VBP/get the/DT/the second/JJ/second number/NN/number and/CC/and build/VB/build an/DT/an expression/NN/expression tree/NN/tree with/IN/with a/DT/a /,/, b/NN/b /,/, and/CC/and the/DT/the operator/NNP/operator. if/IN/if the/DT/the next/JJ/next character/NN/character is/VBZ/is anything/NN/anything else/RB/else /,/, then/RB/then we/PRP/we just/RB/just return/VBP/return the/DT/the leaf/NN/leaf node/NN/node with/IN/with a/NNP/a. here/RB/here are/VBP/are two/CD/two examples/NNS/examples /:/: >/:/> >/:/> >/:/> tokenlist/NN/tokenlist =/:/= /:/[ 9/CD/9 /,/, /,/, 11/CD/11 /,/, end/NN/end /:/] >/:/> >/:/> >/:/> tree/NN/tree =/:/= getproduct/NN/getproduct /:/( tokenlist/NN/tokenlist /:/) >/:/> >/:/> >/:/> printtreepostorder/NN/printtreepostorder /:/( tree/NN/tree /:/) 9/CD/9 11/CD/11 212/CD/212 trees/NNS/trees >/:/> >/:/> >/:/> tokenlist/NN/tokenlist =/:/= /:/[ 9/CD/9 /,/, +/:/+ /,/, 11/CD/11 /,/, end/NN/end /:/] >/:/> >/:/> >/:/> tree/NN/tree =/:/= getproduct/NN/getproduct /:/( tokenlist/NN/tokenlist /:/) >/:/> >/:/> >/:/> printtreepostorder/NN/printtreepostorder /:/( tree/NN/tree /:/) 9/CD/9 the/DT/the second/JJ/second example/NN/example implies/NNS/implies that/WDT/that we/PRP/we consider/VBP/consider a/DT/a single/JJ/single operand/NN/operand to/TO/to be/VB/be a/DT/a kind/NN/kind of/IN/of product/NNP/product. this/DT/this definition/NN/definition of/IN/of product/NN/product is/VBZ/is counterintuitive/JJ/counterintuitive /,/, but/CC/but it/PRP/it turns/VBZ/turns out/RP/out to/TO/to be/VB/be useful/NNP/useful. now/RB/now we/PRP/we have/VBP/have to/TO/to deal/VB/deal with/IN/with compound/NN/compound products/NNS/products /,/, like/IN/like like/IN/like 3/CD/3 5/CD/5 13/CD/13. we/PRP/we treat/VBP/treat this/DT/this expression/NN/expression as/IN/as a/DT/a product/NN/product of/IN/of products/NNS/products /,/, namely/RB/namely 3/CD/3 /CD/( 5/CD/5 13/CD/13 /CD/) /./. the/DT/the resulting/VBG/resulting tree/NN/tree is/VBZ/is /:/: 3/CD/3 5/CD/5 13/CD/13 with/IN/with a/DT/a small/JJ/small change/NN/change in/IN/in getproduct/NN/getproduct /,/, we/PRP/we can/MD/can handle/VB/handle an/DT/an arbitrarily/NN/arbitrarily long/RB/long product/NN/product /:/: def/NN/def getproduct/NN/getproduct /:/( tokenlist/NN/tokenlist /:/) /:/: a/DT/a =/NN/= getnumber/NN/getnumber /:/( tokenlist/NN/tokenlist /:/) if/IN/if gettoken/JJ/gettoken /NN/( tokenlist/NN/tokenlist /,/, /:/) /:/: b/LS/b =/:/= getproduct/NN/getproduct /:/( tokenlist/NN/tokenlist /:/) #/#/# this/DT/this line/NN/line changed/VBD/changed return/NN/return tree/NN/tree /:/( /,/, a/DT/a /,/, b/NN/b /:/) else/NN/else /:/: return/NN/return a/DT/a in/IN/in other/JJ/other words/NNS/words /,/, a/DT/a product/NN/product can/MD/can be/VB/be either/RB/either a/DT/a singleton/NN/singleton or/CC/or a/DT/a tree/NN/tree with/IN/with at/IN/at the/DT/the root/NN/root /,/, a/DT/a number/NN/number on/IN/on the/DT/the left/NN/left /,/, and/CC/and a/DT/a product/NN/product on/IN/on the/DT/the right/NNP/right. this/DT/this kind/NN/kind of/IN/of recursive/JJ/recursive definition/NN/definition should/MD/should be/VB/be starting/VBG/starting to/TO/to feel/VB/feel familiar/NNP/familiar. let/VB/let s/NNS/s test/NN/test the/DT/the new/JJ/new version/NN/version with/IN/with a/DT/a compound/NN/compound product/NN/product /:/: >/:/> >/:/> >/:/> tokenlist/NN/tokenlist =/:/= /:/[ 2/CD/2 /,/, /,/, 3/LS/3 /,/, /,/, 5/CD/5 /,/, /,/, 7/CD/7 /,/, end/NN/end /:/] >/:/> >/:/> >/:/> tree/NN/tree =/:/= getproduct/NN/getproduct /:/( tokenlist/NN/tokenlist /:/) >/:/> >/:/> >/:/> printtreepostorder/NN/printtreepostorder /:/( tree/NN/tree /:/) 2/CD/2 3/CD/3 5/CD/5 7/CD/7 next/JJ/next we/PRP/we will/MD/will add/VB/add the/DT/the ability/NN/ability to/TO/to parse/VB/parse sums/NNP/sums. again/RB/again /,/, we/PRP/we use/VBP/use a/DT/a slightly/RB/slightly counterintuitive/JJ/counterintuitive definition/NN/definition of/IN/of sum/NNP/sum. for/IN/for us/PRP/us /,/, a/DT/a sum/NN/sum can/MD/can be/VB/be a/DT/a tree/NN/tree with/IN/with +/CD/+ at/IN/at the/DT/the root/NN/root /,/, a/DT/a product/NN/product on/IN/on the/DT/the left/NN/left /,/, and/CC/and a/DT/a sum/NN/sum on/IN/on the/DT/the right/NNP/right. or/CC/or /,/, a/DT/a sum/NN/sum can/MD/can be/VB/be just/RB/just a/DT/a product/NNP/product. 20.5/CD/20.5 building/NN/building an/DT/an expression/NN/expression tree/NN/tree 213/CD/213 if/IN/if you/PRP/you are/VBP/are willing/JJ/willing to/TO/to play/VB/play along/IN/along with/IN/with this/DT/this definition/NN/definition /,/, it/PRP/it has/VBZ/has a/DT/a nice/JJ/nice property/NN/property /:/: we/PRP/we can/MD/can represent/VB/represent any/DT/any expression/NN/expression /:/( without/IN/without parentheses/NNS/parentheses /:/) as/IN/as a/DT/a sum/NN/sum of/IN/of products/NNP/products. this/DT/this property/NN/property is/VBZ/is the/DT/the basis/NN/basis of/IN/of our/PRP$/our parsing/NN/parsing algorithm/NNP/algorithm. getsum/NN/getsum tries/NNS/tries to/TO/to build/VB/build a/DT/a tree/NN/tree with/IN/with a/DT/a product/NN/product on/IN/on the/DT/the left/NN/left and/CC/and a/DT/a sum/NN/sum on/IN/on the/DT/the right/NNP/right. but/CC/but if/IN/if it/PRP/it doesn/VBP/doesn t/NN/t find/NN/find a/DT/a +/NN/+ /,/, it/PRP/it just/RB/just builds/VBZ/builds a/DT/a product/NNP/product. def/NN/def getsum/NN/getsum /:/( tokenlist/NN/tokenlist /:/) /:/: a/DT/a =/NN/= getproduct/NN/getproduct /:/( tokenlist/NN/tokenlist /:/) if/IN/if gettoken/JJ/gettoken /NN/( tokenlist/NN/tokenlist /,/, +/:/+ /:/) /:/: b/LS/b =/:/= getsum/NN/getsum /:/( tokenlist/NN/tokenlist /:/) return/NN/return tree/NN/tree /:/( +/:/+ /,/, a/DT/a /,/, b/NN/b /:/) else/NN/else /:/: return/NN/return a/DT/a let/NN/let s/VBZ/s test/NN/test it/PRP/it with/IN/with 9/CD/9 11/CD/11 +/CD/+ 5/CD/5 7/CD/7 /:/: >/:/> >/:/> >/:/> tokenlist/NN/tokenlist =/:/= /:/[ 9/CD/9 /,/, /,/, 11/CD/11 /,/, +/:/+ /,/, 5/CD/5 /,/, /,/, 7/CD/7 /,/, end/NN/end /:/] >/:/> >/:/> >/:/> tree/NN/tree =/:/= getsum/NN/getsum /:/( tokenlist/NN/tokenlist /:/) >/:/> >/:/> >/:/> printtreepostorder/NN/printtreepostorder /:/( tree/NN/tree /:/) 9/CD/9 11/CD/11 5/CD/5 7/CD/7 +/CD/+ we/PRP/we are/VBP/are almost/RB/almost done/VBN/done /,/, but/CC/but we/PRP/we still/RB/still have/VBP/have to/TO/to handle/VB/handle parentheses/NNP/parentheses. anywhere/RB/anywhere in/IN/in an/DT/an expression/NN/expression where/WRB/where there/EX/there can/MD/can be/VB/be a/DT/a number/NN/number /,/, there/EX/there can/MD/can also/RB/also be/VB/be an/DT/an entire/JJ/entire sum/NN/sum enclosed/VBN/enclosed in/IN/in parentheses/NNP/parentheses. we/PRP/we just/RB/just need/VBP/need to/TO/to modify/VB/modify getnumber/NN/getnumber to/TO/to handle/VB/handle subexpressions/NNS/subexpressions /:/: def/NN/def getnumber/NN/getnumber /:/( tokenlist/NN/tokenlist /:/) /:/: if/IN/if gettoken/NNS/gettoken /VBP/( tokenlist/NN/tokenlist /,/, /:/( /:/) /:/: x/NN/x =/:/= getsum/NN/getsum /:/( tokenlist/NN/tokenlist /:/) #/#/# get/NN/get the/DT/the subexpression/NN/subexpression gettoken/NN/gettoken /:/( tokenlist/NN/tokenlist /,/, /:/) /:/) #/#/# remove/NN/remove the/DT/the closing/JJ/closing parenthesis/NN/parenthesis return/NN/return x/NN/x else/RB/else /:/: x/NN/x =/:/= tokenlist/NN/tokenlist /:/[ 0/-NONE-/0 /:/] if/IN/if not/RB/not isinstance/NN/isinstance /:/( x/NN/x /,/, int/NN/int /:/) /:/: return/NN/return none/NN/none tokenlist/NN/tokenlist /:/[ 0/-NONE-/0 /:/: 1/LS/1 /:/] =/:/= /:/[ /:/] return/NN/return tree/NN/tree /:/( x/NN/x /,/, none/NN/none /,/, none/NN/none /:/) let/NN/let s/NNS/s test/NN/test this/DT/this code/NN/code with/IN/with 9/CD/9 /CD/( 11/CD/11 +/CD/+ 5/CD/5 /CD/) 7/CD/7 /:/: >/:/> >/:/> >/:/> tokenlist/NN/tokenlist =/:/= /:/[ 9/CD/9 /,/, /,/, /:/( /,/, 11/CD/11 /,/, +/:/+ /,/, 5/CD/5 /,/, /NNP/) /,/, /,/, 7/CD/7 /,/, end/NN/end /:/] >/:/> >/:/> >/:/> tree/NN/tree =/:/= getsum/NN/getsum /:/( tokenlist/NN/tokenlist /:/) >/:/> >/:/> >/:/> printtreepostorder/NN/printtreepostorder /:/( tree/NN/tree /:/) 9/CD/9 11/CD/11 5/CD/5 +/CD/+ 7/CD/7 214/CD/214 trees/NNS/trees the/DT/the parser/NN/parser handled/VBD/handled the/DT/the parentheses/NNS/parentheses correctly/RB/correctly ;/:/; the/DT/the addition/NN/addition happens/VBZ/happens before/IN/before the/DT/the multiplication/NNP/multiplication. in/IN/in the/DT/the final/JJ/final version/NN/version of/IN/of the/DT/the program/NN/program /,/, it/PRP/it would/MD/would be/VB/be a/DT/a good/JJ/good idea/NN/idea to/TO/to give/VB/give getnumber/NN/getnumber a/DT/a name/NN/name more/RBR/more descriptive/JJ/descriptive of/IN/of its/PRP$/its new/JJ/new role/NNP/role. 20.6/CD/20.6 handling/NN/handling errors/NNS/errors throughout/IN/throughout the/DT/the parser/NN/parser /,/, we/PRP/we ve/VBP/ve been/VBN/been assuming/VBG/assuming that/IN/that expressions/NNS/expressions are/VBP/are well-formed/NNP/well-formed. for/IN/for example/NN/example /,/, when/WRB/when we/PRP/we reach/VBP/reach the/DT/the end/NN/end of/IN/of a/DT/a subexpression/NN/subexpression /,/, we/PRP/we assume/VBP/assume that/IN/that the/DT/the next/JJ/next character/NN/character is/VBZ/is a/DT/a close/JJ/close parenthesis/NNP/parenthesis. if/IN/if there/EX/there is/VBZ/is an/DT/an error/NN/error and/CC/and the/DT/the next/JJ/next character/NN/character is/VBZ/is something/NN/something else/RB/else /,/, we/PRP/we should/MD/should deal/VB/deal with/IN/with it/NNP/it. def/NN/def getnumber/NN/getnumber /:/( tokenlist/NN/tokenlist /:/) /:/: if/IN/if gettoken/NNS/gettoken /VBP/( tokenlist/NN/tokenlist /,/, /:/( /:/) /:/: x/NN/x =/:/= getsum/NN/getsum /:/( tokenlist/NN/tokenlist /:/) if/IN/if not/RB/not gettoken/VBN/gettoken /-NONE-/( tokenlist/NN/tokenlist /,/, /:/) /:/) /:/: raise/VB/raise valueerror/NN/valueerror /,/, missing/VBG/missing parenthesis/NN/parenthesis return/NN/return x/NN/x else/RB/else /:/: #/#/# the/DT/the rest/NN/rest of/IN/of the/DT/the function/NN/function omitted/VBD/omitted the/DT/the raise/NN/raise statement/NN/statement creates/VBZ/creates an/DT/an exception/NN/exception ;/:/; in/IN/in this/DT/this case/NN/case a/DT/a valueerror/NNP/valueerror. if/IN/if the/DT/the function/NN/function that/IN/that called/VBN/called getnumber/NN/getnumber /,/, or/CC/or one/CD/one of/IN/of the/DT/the other/JJ/other functions/NNS/functions in/IN/in the/DT/the traceback/NN/traceback /,/, handles/VBZ/handles the/DT/the exception/NN/exception /,/, then/RB/then the/DT/the program/NN/program can/MD/can continue/NNP/continue. otherwise/VB/otherwise /,/, python/NN/python will/MD/will print/VB/print an/DT/an error/NN/error message/NN/message and/CC/and quit/NNP/quit. as/IN/as an/DT/an exercise/NN/exercise /,/, find/VBP/find other/JJ/other places/NNS/places in/IN/in these/DT/these functions/NNS/functions where/WRB/where errors/NNS/errors can/MD/can occur/VB/occur and/CC/and add/VB/add appropriate/JJ/appropriate raise/NN/raise statements/NNP/statements. test/NN/test your/PRP$/your code/NN/code with/IN/with improperly/RB/improperly formed/VBN/formed expressions/NNP/expressions. 20.7/CD/20.7 the/DT/the animal/JJ/animal tree/NN/tree in/IN/in this/DT/this section/NN/section /,/, we/PRP/we develop/VB/develop a/DT/a small/JJ/small program/NN/program that/WDT/that uses/VBZ/uses a/DT/a tree/NN/tree to/TO/to represent/VB/represent a/DT/a knowledge/NN/knowledge base/NNP/base. the/DT/the program/NN/program interacts/NNS/interacts with/IN/with the/DT/the user/NN/user to/TO/to create/VB/create a/DT/a tree/NN/tree of/IN/of questions/NNS/questions and/CC/and animal/JJ/animal names/NNP/names. here/RB/here is/VBZ/is a/DT/a sample/NN/sample run/VBN/run /:/: 20.7/CD/20.7 the/DT/the animal/JJ/animal tree/NN/tree 215/CD/215 are/VBP/are you/PRP/you thinking/VBG/thinking of/IN/of an/DT/an animal/JJ/animal y/NN/y is/VBZ/is it/PRP/it a/DT/a bird/NN/bird n/NN/n what/WP/what is/VBZ/is the/DT/the animals/NNS/animals name/VBD/name dog/NN/dog what/WP/what question/NN/question would/MD/would distinguish/VB/distinguish a/DT/a dog/NN/dog from/IN/from a/DT/a bird/JJ/bird can/NN/can it/PRP/it fly/RB/fly if/IN/if the/DT/the animal/JJ/animal were/VBD/were dog/NN/dog the/DT/the answer/NN/answer would/MD/would be/VB/be n/VBN/n are/VBP/are you/PRP/you thinking/VBG/thinking of/IN/of an/DT/an animal/JJ/animal y/NN/y can/MD/can it/PRP/it fly/RB/fly n/VBP/n is/VBZ/is it/PRP/it a/DT/a dog/NN/dog n/NN/n what/WP/what is/VBZ/is the/DT/the animals/NNS/animals name/VBD/name cat/JJ/cat what/WP/what question/NN/question would/MD/would distinguish/VB/distinguish a/DT/a cat/NN/cat from/IN/from a/DT/a dog/NN/dog does/VBZ/does it/PRP/it bark/VB/bark if/IN/if the/DT/the animal/JJ/animal were/VBD/were cat/VBN/cat the/DT/the answer/NN/answer would/MD/would be/VB/be n/VBN/n are/VBP/are you/PRP/you thinking/VBG/thinking of/IN/of an/DT/an animal/JJ/animal y/NN/y can/MD/can it/PRP/it fly/RB/fly n/VBP/n does/VBZ/does it/PRP/it bark/VB/bark y/NN/y is/VBZ/is it/PRP/it a/DT/a dog/NN/dog y/NN/y i/PRP/i rule/NN/rule !/./! are/VBP/are you/PRP/you thinking/VBG/thinking of/IN/of an/DT/an animal/JJ/animal n/NN/n here/RB/here is/VBZ/is the/DT/the tree/NN/tree this/DT/this dialog/NN/dialog builds/VBZ/builds /:/: bird/JJ/bird n/NN/n n/NN/n y/NN/y y/NN/y can/MD/can it/PRP/it fly/RB/fly does/VBZ/does it/PRP/it bark/VB/bark cat/JJ/cat dog/NN/dog at/IN/at the/DT/the beginning/NN/beginning of/IN/of each/DT/each round/NN/round /,/, the/DT/the program/NN/program starts/VBZ/starts at/IN/at the/DT/the top/JJ/top of/IN/of the/DT/the tree/NN/tree and/CC/and asks/VBZ/asks the/DT/the first/JJ/first question/NNP/question. depending/NN/depending on/IN/on the/DT/the answer/NN/answer /,/, it/PRP/it moves/VBZ/moves to/TO/to the/DT/the left/NN/left or/CC/or right/RB/right child/JJ/child and/CC/and continues/VBZ/continues until/IN/until it/PRP/it gets/VBZ/gets to/TO/to a/DT/a leaf/NN/leaf node/NNP/node. at/IN/at that/DT/that point/NN/point /,/, it/PRP/it makes/VBZ/makes a/DT/a guess/NNP/guess. if/IN/if the/DT/the guess/NN/guess is/VBZ/is not/RB/not correct/JJ/correct /,/, it/PRP/it asks/VBZ/asks the/DT/the user/NN/user for/IN/for the/DT/the name/NN/name of/IN/of the/DT/the new/JJ/new animal/JJ/animal and/CC/and a/DT/a question/NN/question that/WDT/that distinguishes/VBZ/distinguishes the/DT/the /NN/( bad/JJ/bad /NN/) guess/NN/guess from/IN/from the/DT/the new/JJ/new animal/NNP/animal. then/RB/then it/PRP/it adds/VBZ/adds a/DT/a node/NN/node to/TO/to the/DT/the tree/NN/tree with/IN/with the/DT/the new/JJ/new question/NN/question and/CC/and the/DT/the new/JJ/new animal/NNP/animal. here/RB/here is/VBZ/is the/DT/the code/NN/code /:/: 216/CD/216 trees/NNS/trees def/IN/def animal/JJ/animal /NN/( /:/) /:/: #/#/# start/NN/start with/IN/with a/DT/a singleton/NN/singleton root/NN/root =/:/= tree/NN/tree /:/( bird/NN/bird /:/) #/#/# loop/NN/loop until/IN/until the/DT/the user/NN/user quits/VBZ/quits while/IN/while true/JJ/true /:/: print/NN/print if/IN/if not/RB/not yes/VBZ/yes /:/( are/VBP/are you/PRP/you thinking/VBG/thinking of/IN/of an/DT/an animal/JJ/animal /NN/) /:/: break/NN/break #/#/# walk/NN/walk the/DT/the tree/NN/tree tree/NN/tree =/:/= root/NN/root while/IN/while tree.getleft/JJ/tree.getleft /NN/( /:/) !/./! =/:/= none/NN/none /:/: prompt/NN/prompt =/:/= tree.getcargo/JJ/tree.getcargo /NN/( /:/) +/:/+ if/IN/if yes/NNS/yes /VBP/( prompt/NN/prompt /:/) /:/: tree/NN/tree =/:/= tree.getright/JJ/tree.getright /NN/( /:/) else/NN/else /:/: tree/JJ/tree =/NN/= tree.getleft/JJ/tree.getleft /NN/( /:/) #/#/# make/NN/make a/DT/a guess/NN/guess guess/NN/guess =/:/= tree.getcargo/JJ/tree.getcargo /NN/( /:/) prompt/NN/prompt =/:/= is/VBZ/is it/PRP/it a/DT/a +/NN/+ guess/NN/guess +/:/+ if/IN/if yes/NNS/yes /VBP/( prompt/NN/prompt /:/) /:/: print/NN/print i/PRP/i rule/NN/rule !/./! continue/NN/continue #/#/# get/NN/get new/JJ/new information/NN/information prompt/NN/prompt =/:/= what/WP/what is/VBZ/is the/DT/the animal/JJ/animal s/NNS/s name/NN/name animal/JJ/animal =/NN/= raw_input/NN/raw_input /:/( prompt/NN/prompt /:/) prompt/NN/prompt =/:/= what/WP/what question/NN/question would/MD/would distinguish/VB/distinguish a/DT/a %/NN/% s/VBZ/s from/IN/from a/DT/a %/NN/% s/VBZ/s question/NN/question =/:/= raw_input/NNP/raw_input /:/( prompt/NN/prompt %/NN/% /:/( animal,guess/JJ/animal,guess /NN/) /:/) #/#/# add/NN/add new/JJ/new information/NN/information to/TO/to the/DT/the tree/NN/tree tree.setcargo/-NONE-/tree.setcargo /./( question/NN/question /:/) prompt/NN/prompt =/:/= if/IN/if the/DT/the animal/JJ/animal were/VBD/were %/NN/% s/NNS/s the/DT/the answer/NN/answer would/MD/would be/VB/be if/IN/if yes/NNS/yes /VBP/( prompt/NN/prompt %/NN/% animal/NN/animal /:/) /:/: tree.setleft/JJ/tree.setleft /NN/( tree/NN/tree /:/( guess/NN/guess /:/) /:/) tree.setright/JJ/tree.setright /NN/( tree/NN/tree /:/( animal/JJ/animal /NN/) /:/) else/NN/else /:/: tree.setleft/JJ/tree.setleft /NN/( tree/NN/tree /:/( animal/JJ/animal /NN/) /:/) tree.setright/JJ/tree.setright /NN/( tree/NN/tree /:/( guess/NN/guess /:/) /:/) the/DT/the function/NN/function yes/VBZ/yes is/VBZ/is a/DT/a helper/NN/helper ;/:/; it/PRP/it prints/VBZ/prints a/DT/a prompt/NN/prompt and/CC/and then/RB/then takes/VBZ/takes input/NN/input from/IN/from the/DT/the user/NNP/user. if/IN/if the/DT/the response/NN/response begins/VBZ/begins with/IN/with y/NN/y or/CC/or y/NN/y /,/, the/DT/the function/NN/function returns/NNS/returns true/JJ/true /:/: 20.8/CD/20.8 glossary/JJ/glossary 217/CD/217 def/NN/def yes/NNS/yes /:/( ques/NNS/ques /VBP/) /:/: from/IN/from string/VBG/string import/NN/import lower/JJR/lower ans/NNS/ans =/:/= lower/JJR/lower /NN/( raw_input/NN/raw_input /:/( ques/NNS/ques /VBP/) /:/) return/NN/return /:/( ans/NNS/ans /VBP/[ 0/-NONE-/0 /:/] =/:/= =/:/= y/NN/y /:/) the/DT/the condition/NN/condition of/IN/of the/DT/the outer/NN/outer loop/NN/loop is/VBZ/is true/JJ/true /,/, which/WDT/which means/VBZ/means it/PRP/it will/MD/will continue/VB/continue until/IN/until the/DT/the break/NN/break statement/NN/statement executes/VBZ/executes /,/, if/IN/if the/DT/the user/NN/user is/VBZ/is not/RB/not thinking/VBG/thinking of/IN/of an/DT/an animal/NNP/animal. the/DT/the inner/NN/inner while/IN/while loop/NN/loop walks/NNS/walks the/DT/the tree/NN/tree from/IN/from top/JJ/top to/TO/to bottom/VB/bottom /,/, guided/VBN/guided by/IN/by the/DT/the user/NN/user s/VBZ/s responses/NNP/responses. when/WRB/when a/DT/a new/JJ/new node/NN/node is/VBZ/is added/VBN/added to/TO/to the/DT/the tree/NN/tree /,/, the/DT/the new/JJ/new question/NN/question replaces/NNS/replaces the/DT/the cargo/NN/cargo /,/, and/CC/and the/DT/the two/CD/two children/NNS/children are/VBP/are the/DT/the new/JJ/new animal/JJ/animal and/CC/and the/DT/the original/JJ/original cargo/NNP/cargo. one/CD/one shortcoming/VBG/shortcoming of/IN/of the/DT/the program/NN/program is/VBZ/is that/IN/that when/WRB/when it/PRP/it exits/VBZ/exits /,/, it/PRP/it forgets/VBZ/forgets everything/VBG/everything you/PRP/you carefully/RB/carefully taught/VBD/taught it/PRP/it !/./! as/IN/as an/DT/an exercise/NN/exercise /,/, think/VBP/think of/IN/of various/JJ/various ways/NNS/ways you/PRP/you might/MD/might save/VB/save the/DT/the knowledge/NN/knowledge tree/NN/tree in/IN/in a/DT/a file/NNP/file. implement/NN/implement the/DT/the one/CD/one you/PRP/you think/VBP/think is/VBZ/is easiest/NNP/easiest. 20.8/CD/20.8 glossary/JJ/glossary binary/JJ/binary tree/NN/tree /:/: a/DT/a tree/NN/tree in/IN/in which/WDT/which each/DT/each node/NN/node refers/NNS/refers to/TO/to zero/VB/zero /,/, one/CD/one /,/, or/CC/or two/CD/two dependent/JJ/dependent nodes/NNP/nodes. root/NN/root /:/: the/DT/the topmost/JJS/topmost node/NN/node in/IN/in a/DT/a tree/NN/tree /,/, with/IN/with no/DT/no parent/NNP/parent. leaf/NN/leaf /:/: a/DT/a bottom-most/JJ/bottom-most node/NN/node in/IN/in a/DT/a tree/NN/tree /,/, with/IN/with no/DT/no children/NNP/children. parent/NN/parent /:/: the/DT/the node/NN/node that/IN/that refers/NNS/refers to/TO/to a/DT/a given/VBN/given node/NNP/node. child/NN/child /:/: one/CD/one of/IN/of the/DT/the nodes/NNS/nodes referred/VBD/referred to/TO/to by/IN/by a/DT/a node/NNP/node. siblings/NNS/siblings /:/: nodes/NNS/nodes that/WDT/that share/NN/share a/DT/a common/JJ/common parent/NNP/parent. level/NN/level /:/: the/DT/the set/NN/set of/IN/of nodes/NNS/nodes equidistant/VBP/equidistant from/IN/from the/DT/the root/NNP/root. binary/NN/binary operator/NN/operator /:/: an/DT/an operator/NN/operator that/IN/that takes/VBZ/takes two/CD/two operands/NNP/operands. subexpression/NN/subexpression /:/: an/DT/an expression/NN/expression in/IN/in parentheses/NNS/parentheses that/WDT/that acts/VBZ/acts as/RB/as a/DT/a single/JJ/single operand/NN/operand in/IN/in a/DT/a larger/JJR/larger expression/NNP/expression. preorder/NN/preorder /:/: a/DT/a way/NN/way to/TO/to traverse/VB/traverse a/DT/a tree/NN/tree /,/, visiting/VBG/visiting each/DT/each node/NN/node before/IN/before its/PRP$/its children/NNP/children. prefix/NN/prefix notation/NN/notation /:/: a/DT/a way/NN/way of/IN/of writing/VBG/writing a/DT/a mathematical/JJ/mathematical expression/NN/expression with/IN/with each/DT/each operator/NN/operator appearing/VBG/appearing before/IN/before its/PRP$/its operands/NNP/operands. 218/CD/218 trees/NNS/trees postorder/JJR/postorder /:/: a/DT/a way/NN/way to/TO/to traverse/VB/traverse a/DT/a tree/NN/tree /,/, visiting/VBG/visiting the/DT/the children/NNS/children of/IN/of each/DT/each node/NN/node before/IN/before the/DT/the node/NN/node itself/NNP/itself. inorder/NN/inorder /:/: a/DT/a way/NN/way to/TO/to traverse/VB/traverse a/DT/a tree/NN/tree /,/, visiting/VBG/visiting the/DT/the left/NN/left subtree/NN/subtree /,/, then/RB/then the/DT/the root/NN/root /,/, and/CC/and then/RB/then the/DT/the right/NN/right subtree/NNP/subtree. 