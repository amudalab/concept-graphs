notes september::0.0287117565337
elem::0.0197393326169
lecture notes::0.01899072724
top data::0.0179448478335
stack::0.0170271113765
returns true::0.0148041078029
begin return::0.0143558782668
14.07.94::0.0143558782668
procedure empty::0.0143558782668
procedure full::0.0143558782668
empty boolean::0.0143558782668
adds element::0.0143558782668
full boolean::0.0143558782668
null return::0.0127115735371
fifo::0.0122932132182
@requires is_stack(s::0.0107669087001
is_stack(s::0.0107669087001
struct list::0.0107669087001
tortoise::0.0107297474797
procedure::0.010600411234
return false::0.0105990186563
stacks::0.0101619047775
jacob::0.00949536362
september::0.00949536362
circular queues::0.0091969264112
list item::0.0091969264112
begin::0.0090585571339
null::0.00901644770221
s->top::0.00897242391677
esau::0.00897242391677
p->next::0.00897242391677
hare::0.0083084431675
fifo queue::0.00807594911114
element::0.00787505031546
elements::0.00784415989283
boolean::0.00773196402033
end empty::0.00717793913342
integer stack::0.00717793913342
distinguish full::0.00717793913342
sio import::0.00717793913342
is_stack(s @ensures::0.00717793913342
abstract operations::0.00717793913342
start list::0.00717793913342
returns top::0.00717793913342
procedure pop::0.00717793913342
procedure enqueue(elem::0.00717793913342
return w.n::0.00717793913342
pop empty::0.00717793913342
text elements::0.00717793913342
bool is_empty(stack::0.00717793913342
exports main::0.00717793913342
record info::0.00717793913342
first-out queues::0.00717793913342
stack s_new::0.00717793913342
procedure dequeue::0.00717793913342
empty procedure::0.00717793913342
end stack::0.00717793913342
list end::0.00717793913342
type elem::0.00717793913342
full begin::0.00717793913342
returns first::0.00717793913342
end full::0.00717793913342
void push(elem::0.00717793913342
max end::0.00717793913342
const max::0.00717793913342
begin end::0.00717793913342
return stack.top::0.00717793913342
push(elem::0.00717793913342
bool is_segment(list::0.00717793913342
procedure push(elem::0.00717793913342
is_segment(list start::0.00717793913342
elem pop(stack::0.00717793913342
stored elements::0.00717793913342
end fifo::0.00717793913342
info array::0.00717793913342
implementation module::0.00717793913342
mod max::0.00717793913342
import error::0.00717793913342
@ensures::0.00717793913342
queues::0.00716197377632
max::0.00715394232779
empty::0.00714767875034
dequeue::0.007121522715
returns::0.00650530845836
list::0.00648141434324
var::0.00635941119377
queue::0.00620961261934
return::0.00614867910819
struct stack::0.00613128427414
stack stack::0.00613128427414
stack interface::0.00613128427414
element type::0.00613128427414
easiest implementation::0.00613128427414
empty stack::0.00613128427414
bool::0.00605696183336
data structure::0.00555936428761
const::0.00551903043026
stack implementation::0.00551903043026
dec(w.n::0.00538345435006
inc(w.n::0.00538345435006
w.out::0.00538345435006
plate::0.00538345435006
w.in::0.00538345435006
@requires::0.00538345435006
increments::0.00533566232912
return true::0.00533566232912
full::0.0051635573719
true::0.00512329475298
circular::0.00492356701868
data structures::0.00486166209251
removes::0.00486166209251
top element::0.00474768181
enqueue::0.00474768181
empty full::0.00474768181
linked lists::0.00463315966026
top::0.00455860572961
pop::0.00451622282887
typedef struct::0.00447237557098
notes::0.00440242604787
pointer::0.00428959321104
fatal error::0.00423960746252
struct::0.00413106990118
o(1::0.0038601217271
o(n::0.0038601217271
null pointer::0.00370102695072
jewish commentator::0.00358896956671
reuse empty::0.00358896956671
program knowing::0.00358896956671
supress warning::0.00358896956671
overflow note::0.00358896956671
elem end::0.00358896956671
getint putint::0.00358896956671
original is_segment::0.00358896956671
operation initialize(s::0.00358896956671
s_new @ensures::0.00358896956671
begin puttext("fifo::0.00358896956671
lecture bool::0.00358896956671
list first->data::0.00358896956671
alloc(struct list::0.00358896956671
makes stacks::0.00358896956671
initialize stack::0.00358896956671
stacks l8.9::0.00358896956671
return s->top::0.00358896956671
detecting circularity::0.00358896956671
@ensures is_stack(\result::0.00358896956671
short-circuiting evaluation::0.00358896956671
l8.2 type::0.00358896956671
stacks l8.3::0.00358896956671
stack push(x,s::0.00358896956671
call top::0.00358896956671
manipulation code::0.00358896956671
puttext::0.00358896956671
predicate bool::0.00358896956671
plate containers::0.00358896956671
constant-time operations::0.00358896956671
h->next->next::0.00358896956671
var stack::0.00358896956671
is_stack(\result @ensures::0.00358896956671
interface interface::0.00358896956671
incorrectly claim::0.00358896956671
bool is_circular(list::0.00358896956671
return stack.info[stack.top::0.00358896956671
code elem::0.00358896956671
code void::0.00358896956671
wasteful moving::0.00358896956671
minimum operations::0.00358896956671
story jacob::0.00358896956671
programming stacks::0.00358896956671
stacks l8.2::0.00358896956671
stacks l8.4::0.00358896956671
stacks l8.5::0.00358896956671
stacks l8.6::0.00358896956671
elem data::0.00358896956671
is_empty(s::0.00358896956671
modula-3 procedures::0.00358896956671
containers common::0.00358896956671
stack elements::0.00358896956671
cardinal::0.00358896956671
stackuser exports::0.00358896956671
tortoise takes::0.00358896956671
sio::0.00358896956671
data struct::0.00358896956671
dequeue utility::0.00358896956671
procedures call::0.00358896956671
text queue::0.00358896956671
error getint::0.00358896956671
brother rashi::0.00358896956671
index variable::0.00358896956671
end pop::0.00358896956671
previously unused::0.00358896956671
biblical story::0.00358896956671
push procedure::0.00358896956671
adds elements::0.00358896956671
is_segment(s->top null::0.00358896956671
full(s empty(s::0.00358896956671
stackuser::0.00358896956671
inc(stack.top stack.info[stack.top::0.00358896956671
empty queues::0.00358896956671
alloc(struct stack::0.00358896956671
priority queues(heaps::0.00358896956671
time events::0.00358896956671
valid stack::0.00358896956671
dequeue empty::0.00358896956671
read element::0.00358896956671
fifo priority::0.00358896956671
end stackuser::0.00358896956671
operations priority::0.00358896956671
reach null::0.00358896956671
11th century::0.00358896956671
null bool::0.00358896956671
operations lets::0.00358896956671
enter texts::0.00358896956671
commentator explained::0.00358896956671
loaded plate::0.00358896956671
queue fifo::0.00358896956671
interface stack::0.00358896956671
q->next::0.00358896956671
fifo queues::0.00358896956671
alloc(struct::0.00358896956671
enqueue procedure::0.00358896956671
line abstract::0.00358896956671
time circular::0.00358896956671
fifouser::0.00358896956671
list top::0.00358896956671
end dequeue::0.00358896956671
top cardinal::0.00358896956671
queries defining::0.00358896956671
tortoise enters::0.00358896956671
interface fifo::0.00358896956671
full trip::0.00358896956671
begin inc(stack.top::0.00358896956671
is_empty(stack::0.00358896956671
routines procedure::0.00358896956671
maintaining procedure::0.00358896956671
array bigger::0.00358896956671
clean plate::0.00358896956671
s->top->data s->top::0.00358896956671
hand skips::0.00358896956671
stack.info[stack.top::0.00358896956671
gettext puttext::0.00358896956671
narrow tube::0.00358896956671
simplest solutions::0.00358896956671
writing pointer::0.00358896956671
null guarding::0.00358896956671
error gettext::0.00358896956671
fifo user::0.00358896956671
decrements number::0.00358896956671
supress::0.00358896956671
pop procedure::0.00358896956671
enqueue(gettext end::0.00358896956671
twin brothers::0.00358896956671
s_new::0.00358896956671
pop(stack::0.00358896956671
dec(stack.top return::0.00358896956671
entered number::0.00358896956671
top field::0.00358896956671
arrive stacks::0.00358896956671
jacob justified::0.00358896956671
explicitly clear::0.00358896956671
is_segment predicate::0.00358896956671
w.info[w.out::0.00358896956671
@ensures is_empty(s::0.00358896956671
enqueue operations::0.00358896956671
supports insertions::0.00358896956671
clear previously::0.00358896956671
stacks l8.8::0.00358896956671
first head::0.00358896956671
p->next return::0.00358896956671
push(getint::0.00358896956671
o(n steps::0.00358896956671
l->next hare::0.00358896956671
spring loaded::0.00358896956671
general contracts::0.00358896956671
stack.top::0.00358896956671
module fifo::0.00358896956671
stack s->top::0.00358896956671
is_empty(\result::0.00358896956671
plates don::0.00358896956671
structure invariant::0.00358896956671
removes oldest::0.00358896956671
knowing declarations::0.00358896956671
increments in-pointer::0.00358896956671
pop(x,s::0.00358896956671
list segment::0.00358896956671
explicitly rejected::0.00358896956671
stack module::0.00358896956671
begin dec(stack.top::0.00358896956671
initialize(s full(s::0.00358896956671
single steps::0.00358896956671
module stack::0.00358896956671
empty(s::0.00358896956671
circularity checking::0.00358896956671
unused cells::0.00358896956671
false circular::0.00358896956671
pointer positions::0.00358896956671
bool is_stack::0.00358896956671
@ensures is_stack(s::0.00358896956671
tortoise list::0.00358896956671
enqueue(elem::0.00358896956671
remove number::0.00358896956671
contract diverges::0.00358896956671
stack import::0.00358896956671
marginally acceptable::0.00358896956671
boolean queries::0.00358896956671
queues(heaps::0.00358896956671
structure operations::0.00358896956671
space note::0.00358896956671
import enqueue::0.00358896956671
puttext("fifo user::0.00358896956671
end fifouser::0.00358896956671
is_stack stack::0.00358896956671
begin puttext("stack::0.00358896956671
tail elements::0.00358896956671
invariant raises::0.00358896956671
type fifo::0.00358896956671
w.n::0.00358896956671
end push::0.00358896956671
putint puttext::0.00358896956671
interface type::0.00358896956671
born first::0.00358896956671
module stackuser::0.00358896956671
stacks l8.7::0.00358896956671
import push::0.00358896956671
queues suppose::0.00358896956671
module fifouser::0.00358896956671
s->top->next return::0.00358896956671
item set::0.00358896956671
programmer discipline::0.00358896956671
reuse linked::0.00358896956671
stackuser fifo::0.00358896956671
begin w.info[w.in::0.00358896956671
defined typedef::0.00358896956671
increments number::0.00358896956671
fifo import::0.00358896956671
dining halls::0.00358896956671
remove minimum::0.00358896956671
rightful place::0.00358896956671
14.02.95::0.00358896956671
conceived first::0.00358896956671
@loop_invariant is_segment(t::0.00358896956671
is_segment(list::0.00358896956671
interface stacks::0.00358896956671
stack type::0.00358896956671
century jewish::0.00358896956671
pervasive data::0.00358896956671
code bool::0.00358896956671
puttext("stack user::0.00358896956671
inherited issac::0.00358896956671
enter numbers::0.00358896956671
stack bool::0.00358896956671
s->top s->top::0.00358896956671
assert(s->top::0.00358896956671
putint(pop::0.00358896956671
add entered::0.00358896956671
end enqueue::0.00358896956671
fifouser exports::0.00358896956671
top ends::0.00358896956671
queues double-ended::0.00358896956671
oldest element::0.00358896956671
integer elements::0.00358896956671
array adds::0.00358896956671
start data::0.00358896956671
increments out-pointer::0.00358896956671
complexity o(n::0.00358896956671
current top::0.00358896956671
hare takes::0.00358896956671
calls stacks::0.00358896956671
return is_segment(s->top::0.00358896956671
previously constituted::0.00358896956671
null h->next::0.00358896956671
auxiliary loop::0.00358896956671
@ensures is_empty(\result::0.00358896956671
solutions proposed::0.00358896956671
famous 11th::0.00358896956671
pointer manipulation::0.00358896956671
efficient queues::0.00358896956671
return points::0.00358896956671
suppress warning::0.00358896956671
type module::0.00358896956671
queue satisify::0.00358896956671
place first::0.00358896956671
implementation::0.00357383937517
typedef::0.00335428167823
false::0.00324296250111
adds::0.00314252138602
end::0.00310624529246
alternative implementation::0.00306564213707
top pointer::0.00306564213707
array note::0.00306564213707
enqueue dequeue::0.00306564213707
list struct::0.00306564213707
special null::0.00306564213707
efficient solution::0.00306564213707
neighboring elements::0.00306564213707
maintaining pointers::0.00306564213707
queues queues::0.00306564213707
push pop::0.00306564213707
start pointer::0.00306564213707
operations work::0.00306564213707
back pointer::0.00306564213707
module module::0.00306564213707
queues circular::0.00306564213707
double-ended queues::0.00306564213707
out data::0.00306564213707
stack finally::0.00306564213707
queue interface::0.00306564213707
set top::0.00306564213707
garbage collected::0.00306564213707
import::0.00299131969629
pointers::0.00298890823697
maximum number::0.00291699725551
item::0.00289678060823
loop::0.00281712723999
runtime system::0.00275951521513
remove items::0.00275951521513
list first::0.00275951521513
warning::0.00273182515959
module::0.0026502180128
first element::0.00258069875936
condition inside::0.00254231470743
utility routines::0.00254231470743
previous lecture::0.00254231470743
search operation::0.00254231470743
list starting::0.00254231470743
user module::0.00254231470743
lecture::0.00244765213266
typical stack::0.002373840905
requires o(n::0.002373840905
last-in first-out::0.002373840905
first data::0.002373840905
queue implementation::0.002373840905
suppress::0.002373840905
linked list::0.00231742448658
list list::0.00223618778549
solution requires::0.00223618778549
items stored::0.00223618778549
pointers point::0.00223618778549
array::0.00219569775128
important applications::0.00211980373126
exports::0.00211980373126
first-in first-out::0.00211980373126
procedures::0.00204211824756
fatal::0.00201898727779
first-out::0.00201898727779
empty space::0.00201898727779
first out::0.00201898727779
data field::0.00201898727779
lists::0.00194466483701
interesting question::0.00193006086355
decrements::0.00193006086355
text::0.00187314095019
extremely important::0.00185051347536
procedure calls::0.00185051347536
circular list::0.00185051347536
type::0.00180036571715
puttext("stack::0.00179448478335
patriarch::0.00179448478335
is_stack(\result::0.00179448478335
semester::0.00179448478335
biblical::0.00179448478335
puttext("fifo::0.00179448478335
is_stack::0.00179448478335
gettext::0.00179448478335
inc(stack.top::0.00179448478335
circularity::0.00179448478335
first->next::0.00179448478335
plates::0.00179448478335
is_segment(t::0.00179448478335
puttext(dequeue::0.00179448478335
rashi::0.00179448478335
overtake::0.00179448478335
enqueues::0.00179448478335
l->next::0.00179448478335
halls::0.00179448478335
satisify::0.00179448478335
s->top->next::0.00179448478335
s->top->data::0.00179448478335
first->data::0.00179448478335
h->next::0.00179448478335
w.info[w.in::0.00179448478335
twin::0.00179448478335
dec(stack.top::0.00179448478335
birthright::0.00179448478335
is_segment(s->top::0.00179448478335
l8.8::0.00179448478335
l8.9::0.00179448478335
l8.2::0.00179448478335
l8.3::0.00179448478335
l8.6::0.00179448478335
l8.4::0.00179448478335
l8.5::0.00179448478335
issac::0.00179448478335
dereference::0.00179448478335
is_circular(list::0.00179448478335
in-pointer::0.00179448478335
l8.7::0.00179448478335
out-pointer::0.00179448478335
initialize(s::0.00179448478335
putint::0.00179448478335
commentator::0.00179448478335
push(x,s::0.00179448478335
short-circuiting::0.00179448478335
dequeuing::0.00179448478335
is_segment::0.00179448478335
stumble::0.00179448478335
@loop_invariant::0.00179448478335
jewish::0.00179448478335
full(s::0.00179448478335
enqueue(gettext::0.00179448478335
t->next::0.00179448478335
rightful::0.00179448478335
easiest::0.00178429938931
important consideration::0.00177855410971
ring::0.00176681200853
push::0.00176681200853
structures::0.00174584521445
integer::0.00174584521445
priority queue::0.00171286035585
wasteful::0.00165242796047
reuse::0.00160972330796
infinite loop::0.00159647630162
remove::0.00158846203412
dereferenced::0.00153282106853
soup::0.00153282106853
fairer::0.00153282106853
tricking::0.00153282106853
getint::0.00153282106853
israel::0.00153282106853
items::0.00153158868567
operations::0.0014816605127
iteration::0.00144988814424
contract::0.00144988814424
info::0.00144988814424
linked::0.00140856362
lecture lecture::0.00140673343391
mod::0.00140673343391
stand::0.00140673343391
stores::0.0013898410719
floyd::0.00137975760756
constant-time::0.00137975760756
justified::0.00137975760756
born::0.00137975760756
brothers::0.00137975760756
tube::0.00137975760756
void::0.00132718604572
virtual machine::0.00132718604572
brother::0.00127115735371
dining::0.00127115735371
texts::0.00127115735371
bowl::0.00127115735371
constituted::0.00127115735371
modula-3::0.00127115735371
maintain::0.0012707696273
abstract::0.00123446041334
initialize::0.00122166551542
check::0.00121313009991
structure::0.00118787304089
double-ended::0.0011869204525
washed::0.0011869204525
guarding::0.0011869204525
diverges::0.0011869204525
last-in::0.0011869204525
popping::0.0011869204525
11th::0.00111809389274
marginally::0.00111809389274
predicate::0.00111809389274
polymorphic::0.00111809389274
lifo::0.00111809389274
skips::0.00111809389274
knowing::0.00110060651197
checking::0.00109784887564
interface::0.0010828589599
first-in::0.00105990186563
hungry::0.00105990186563
invariant::0.00105990186563
record::0.00102105912378
pervasive::0.00100949363889
traverses::0.00100949363889
spring::0.00100949363889
insertions::0.00100949363889
good idea::0.000996302745656
total number::0.000996302745656
explicitly::0.000996302745656
contracts::0.000965030431774
maintaining::0.000949099758128
note::0.000926595534287
auxiliary::0.000925256737679
declarations::0.000889277054854
solution::0.00086591862349
segment::0.000862719727038
popped::0.000856430177923
incorrectly::0.000856430177923
exploit::0.000856430177923
simulations::0.000856430177923
rejected::0.000826213980236
century::0.000826213980236
maximum::0.000823144729275
distinguish::0.000822973608891
read::0.000804687342324
enter::0.000803858616076
story::0.000798238150808
discipline::0.000798238150808
raises::0.000798238150808
rely::0.000798238150808
containers::0.000798238150808
trip::0.000798238150808
tricky::0.000798238150808
don::0.00077219327671
client::0.000767021950036
ends::0.000767021950036
steps::0.000749256380078
enforce::0.000747829924072
conceived::0.000747829924072
inherited::0.000747829924072
pushing::0.000747829924072
priority::0.000731899250425
exercise::0.000724944072122
queries::0.000724944072122
complexity::0.000714932201839
creating::0.000714932201839
oldest::0.000703366716954
narrow::0.000703366716954
claim::0.000703366716954
suggested::0.000703366716954
runtime::0.000703366716954
data::0.000701212232096
error::0.000699329180759
tail::0.000682956289898
start::0.000670616702693
famous::0.000663593022859
garbage::0.000663593022859
manipulation::0.000645174689839
completes::0.000645174689839
collected::0.000645174689839
allocating::0.000645174689839
clean::0.000645174689839
adjust::0.000627613340033
evaluation::0.000627613340033
code::0.000625715462351
entered::0.000610832757711
creation::0.000610832757711
draw::0.000610832757711
writing::0.000605773101189
supports::0.000605773101189
previously::0.000605773101189
verify::0.000594766463102
neighboring::0.000594766463102
accessible::0.000594766463102
instance::0.000591391678033
algorithm::0.000591391678033
add::0.000588316745763
field::0.000588316745763
catch::0.000579356121645
enters::0.000579356121645
terminology::0.000579356121645
follow::0.000577279082327
satisfied::0.000564550265415
defining::0.000564550265415
detecting::0.000564550265415
advance::0.000564550265415
unused::0.000564550265415
student::0.000564550265415
infinite::0.000564550265415
effects::0.000564550265415
stored::0.000555957320572
cells::0.000550303255984
explained::0.000550303255984
marked::0.000550303255984
programmer::0.000550303255984
positions::0.000536574435988
consideration::0.000536574435988
routines::0.000536574435988
overflow::0.000536574435988
events::0.000536574435988
identical::0.000536574435988
assume::0.000536458228216
finally::0.00052449688557
lots::0.000523327429641
solutions::0.000523327429641
property::0.000523327429641
proposed::0.000523327429641
slower::0.000510529561889
cycle::0.000510529561889
step::0.000510421100189
main::0.000505473134481
introduce::0.000498151372828
terminates::0.000498151372828
file::0.000497731694137
class::0.000493886837565
closer::0.000486166209251
lets::0.000486166209251
pushed::0.000474549879064
organized::0.000452337534774
implementing::0.000452337534774
extremely::0.000452337534774
call::0.000449469268875
implement::0.000449004988861
implementations::0.000431359863519
head::0.000431359863519
moves::0.000431359863519
chosen::0.000421292575077
reading::0.000421292575077
valid::0.000421292575077
create::0.000414418702692
condition::0.000411486804446
study::0.000411486804446
build::0.000411486804446
terminate::0.000411486804446
loaded::0.000411486804446
acceptable::0.000401929308038
determined::0.000401929308038
idea::0.000392832325982
search::0.000392607823481
action::0.000392607823481
interesting::0.000392607823481
task::0.000392607823481
utility::0.000392607823481
test::0.000392607823481
program::0.000392211163842
insert::0.000383510975018
points::0.000381347639907
defined::0.000381347639907
arrive::0.000374628190039
counter::0.000374628190039
front::0.000374628190039
language::0.000374628190039
generic::0.000374628190039
efficient::0.000370638213715
alternative::0.000365949625213
update::0.000365949625213
practice::0.00035746610092
simplest::0.00035746610092
bigger::0.000349169042891
minimum::0.000341050430123
introduced::0.000325318947903
logical::0.000325318947903
commonly::0.000317692406825
created::0.000317692406825
clear::0.000317692406825
half::0.000310216896331
user::0.000300060952859
first::0.000296734089771
slightly::0.000295695839016
typical::0.000288639541163
care::0.000288639541163
calls::0.000288639541163
hand::0.000288639541163
moving::0.000288639541163
index::0.000281712723999
represent::0.000274910721167
copy::0.000274910721167
programs::0.000274910721167
number::0.000272256993565
needed::0.000268229114108
diagram::0.000261663714821
state::0.000261663714821
complete::0.000261663714821
due::0.000255210550095
programming::0.000242626019982
longer::0.000242626019982
variable::0.000236487658007
rest::0.000230447514049
move::0.000224502494431
virtual::0.000224502494431
order::0.000224114768016
easy::0.000218649649381
inside::0.000218649649381
starting::0.000218649649381
takes::0.000217200507702
show::0.000207209351346
machine::0.000207209351346
support::0.000207209351346
simple::0.000202581214726
lines::0.00020161664248
space::0.000200040635239
change::0.000196105581921
total::0.000196105581921
question::0.000196105581921
good::0.000191604772198
write::0.000190673819954
previous::0.000190673819954
numbers::0.000185319106857
difficult::0.000185319106857
reason::0.000185319106857
discuss::0.000180039287312
fast::0.000180039287312
point::0.000179480865046
important::0.00017501065614
current::0.00017483229519
reach::0.00017483229519
special::0.000169696148698
original::0.000169696148698
requires::0.000154694137128
applications::0.000145014095372
provide::0.000135576080194
ways::0.000135576080194
details::0.000135576080194
suppose::0.00012636828362
common::0.000121847260197
line::0.000121847260197
makes::0.000117379741267
size::0.000117379741267
find::0.000112964475218
case::0.000112831076952
set::0.000112057384008
problem::0.000112057384008
place::0.000104285910392
general::0.000104285910392
similar::0.00010002031762
single::0.00010002031762
run::9.58023860989e-05
work::9.16310625102e-05
operation::8.750532807e-05
give::7.93867153025e-05
form::7.53919590433e-05
back::7.53919590433e-05
out::6.80642483913e-05
system::5.60286920039e-05
time::5.29880253851e-05
