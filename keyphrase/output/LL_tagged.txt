linked/VBD/linked lists/NNS/lists in/IN/in chapter/NN/chapter 2/CD/2 /,/, arrays/VBZ/arrays /,/, we/PRP/we saw/VBD/saw that/IN/that arrays/NNS/arrays had/VBD/had certain/JJ/certain disadvantages/NNS/disadvantages as/IN/as data/NNS/data storage/NN/storage structures/NNP/structures. in/IN/in an/DT/an unordered/VBN/unordered array/NN/array /,/, searching/VBG/searching is/VBZ/is slow/JJ/slow /,/, whereas/NNS/whereas in/IN/in an/DT/an ordered/VBN/ordered array/NN/array /,/, insertion/NN/insertion is/VBZ/is slow/NNP/slow. in/IN/in both/DT/both kinds/NNS/kinds of/IN/of arrays/NNS/arrays /,/, deletion/NN/deletion is/VBZ/is slow/NNP/slow. also/RB/also /,/, the/DT/the size/NN/size of/IN/of an/DT/an array/NN/array can/MD/can t/VB/t be/VB/be changed/VBN/changed after/IN/after it/PRP/it s/VBZ/s created/NNP/created. in/IN/in this/DT/this chapter/NN/chapter we/PRP/we ll/VBP/ll look/VBP/look at/IN/at a/DT/a data/NN/data storage/NN/storage structure/NN/structure that/WDT/that solves/VBZ/solves some/DT/some of/IN/of these/DT/these problems/NNS/problems the/DT/the linked/VBN/linked list/NNP/list. linked/VBD/linked lists/NNS/lists are/VBP/are probably/RB/probably the/DT/the second/JJ/second most/JJS/most commonly/RB/commonly used/JJ/used generalpurpose/NN/generalpurpose storage/NN/storage structures/NNS/structures after/IN/after arrays/NNP/arrays. the/DT/the linked/VBN/linked list/NN/list is/VBZ/is a/DT/a versatile/JJ/versatile mechanism/NN/mechanism suitable/JJ/suitable for/IN/for use/NN/use in/IN/in many/JJ/many kinds/NNS/kinds of/IN/of general/JJ/general purpose/NN/purpose databases/NNP/databases. it/PRP/it can/MD/can also/RB/also replace/VB/replace an/DT/an array/NN/array as/IN/as the/DT/the basis/NN/basis for/IN/for other/JJ/other storage/NN/storage structures/NNS/structures such/JJ/such as/IN/as stacks/NNS/stacks and/CC/and queues/NNP/queues. in/IN/in fact/NN/fact /,/, you/PRP/you can/MD/can use/VB/use a/DT/a linked/VBN/linked list/NN/list in/IN/in many/JJ/many cases/NNS/cases in/IN/in which/WDT/which you/PRP/you use/VBP/use an/DT/an array/NN/array /,/, unless/IN/unless you/PRP/you need/VBP/need frequent/NN/frequent random/NN/random access/NN/access to/TO/to individual/JJ/individual items/NNS/items using/VBG/using an/DT/an index/NNP/index. linked/VBD/linked lists/NNS/lists aren/VBN/aren t/NN/t the/DT/the solution/NN/solution to/TO/to all/DT/all data/NNS/data storage/VBP/storage problems/NNS/problems /,/, but/CC/but they/PRP/they are/VBP/are surprisingly/RB/surprisingly versatile/JJ/versatile and/CC/and conceptually/RB/conceptually simpler/JJR/simpler than/IN/than some/DT/some other/JJ/other popular/JJ/popular structures/NNS/structures such/JJ/such as/IN/as trees/NNP/trees. we/PRP/we ll/VBP/ll investigate/JJ/investigate their/PRP$/their strengths/NNS/strengths and/CC/and weaknesses/NNS/weaknesses as/IN/as we/PRP/we go/VBP/go along/NNP/along. in/IN/in this/DT/this chapter/NN/chapter we/PRP/we ll/VBP/ll look/VBP/look at/IN/at simple/JJ/simple linked/VBN/linked lists/NNS/lists /,/, doubleended/VBD/doubleended lists/NNS/lists /,/, sorted/VBD/sorted lists/NNS/lists /,/, doubly/RB/doubly linked/VBN/linked lists/NNS/lists /,/, and/CC/and lists/NNS/lists with/IN/with iterators/NNS/iterators /:/( an/DT/an approach/NN/approach to/TO/to random/VB/random access/NN/access to/TO/to list/NN/list elements/NNS/elements /:/) /./. we/PRP/we ll/VBP/ll also/RB/also examine/NN/examine the/DT/the idea/NN/idea of/IN/of abstract/NN/abstract data/NNS/data types/NNS/types /VBP/( adts/NNS/adts /:/) /,/, and/CC/and see/VB/see how/WRB/how stacks/NNS/stacks and/CC/and queues/NNS/queues can/MD/can be/VB/be viewed/VBN/viewed as/IN/as adts/NNS/adts and/CC/and how/WRB/how they/PRP/they can/MD/can be/VB/be implemented/VBN/implemented as/IN/as linked/VBN/linked lists/NNS/lists instead/RB/instead of/IN/of arrays/NNP/arrays. links/NNS/links in/IN/in a/DT/a linked/VBN/linked list/NN/list /,/, each/DT/each data/NN/data item/NN/item is/VBZ/is embedded/VBN/embedded in/IN/in a/DT/a link/NNP/link. a/DT/a link/NN/link is/VBZ/is an/DT/an object/NN/object of/IN/of a/DT/a class/NN/class called/VBN/called something/NN/something like/IN/like link/NNP/link. because/IN/because there/EX/there are/VBP/are many/JJ/many similar/JJ/similar links/NNS/links in/IN/in a/DT/a list/NN/list /,/, it/PRP/it makes/VBZ/makes sense/NN/sense to/TO/to use/VB/use a/DT/a separate/JJ/separate class/NN/class for/IN/for them/PRP/them /,/, distinct/VBP/distinct from/IN/from the/DT/the linked/VBN/linked list/NN/list itself/NNP/itself. each/DT/each link/NN/link object/NN/object contains/VBZ/contains a/DT/a reference/NN/reference /:/( usually/RB/usually called/VBN/called next/JJ/next /NN/) to/TO/to the/DT/the next/JJ/next link/NN/link in/IN/in the/DT/the list/NNP/list. a/DT/a field/NN/field in/IN/in the/DT/the list/NN/list itself/PRP/itself contains/VBZ/contains a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first link/NNP/link. this/DT/this relationship/NN/relationship is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 5.1/CD/5.1. 180/CD/180 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists linked/VBN/linked list/NN/list first/RB/first data/NNS/data link/VBP/link next/JJ/next data/NNS/data link/VBP/link next/JJ/next data/NNS/data link/VBP/link next/JJ/next data/NNS/data link/VBP/link next/JJ/next null/NN/null figure/NN/figure 5.1/CD/5.1 links/NNS/links in/IN/in a/DT/a list/NNP/list. here/RB/here s/VBZ/s part/NN/part of/IN/of the/DT/the definition/NN/definition of/IN/of a/DT/a class/NN/class link/NNP/link. it/PRP/it contains/VBZ/contains some/DT/some data/NNS/data and/CC/and a/DT/a reference/NN/reference to/TO/to the/DT/the next/JJ/next link/NN/link class/NN/class link/NN/link /:/{ public/JJ/public int/NN/int idata/NN/idata data/NNS/data public/JJ/public double/JJ/double ddata/NN/ddata data/NNS/data public/JJ/public link/NN/link next/IN/next reference/NN/reference to/TO/to next/JJ/next link/NN/link /:/} this/DT/this kind/NN/kind of/IN/of class/NN/class definition/NN/definition is/VBZ/is sometimes/RB/sometimes called/VBN/called self/PRP/self referential/JJ/referential because/IN/because it/PRP/it contains/VBZ/contains a/DT/a field/NN/field called/VBN/called next/JJ/next in/IN/in this/DT/this case/NN/case of/IN/of the/DT/the same/JJ/same type/NN/type as/IN/as itself/NNP/itself. we/PRP/we show/VBP/show only/RB/only two/CD/two data/NNS/data items/NNS/items in/IN/in the/DT/the link/NN/link an/DT/an int/NN/int and/CC/and a/DT/a double/NNP/double. in/IN/in a/DT/a typical/JJ/typical application/NN/application there/EX/there would/MD/would be/VB/be many/JJ/many more/NNP/more. a/DT/a personnel/NN/personnel record/NN/record /,/, for/IN/for example/NN/example /,/, might/MD/might have/VB/have name/NN/name /,/, address/NN/address /,/, social/JJ/social security/NN/security number/NN/number /,/, title/NN/title /,/, salary/NN/salary /,/, and/CC/and many/JJ/many other/JJ/other fields/NNP/fields. often/RB/often an/DT/an object/NN/object of/IN/of a/DT/a class/NN/class that/WDT/that contains/VBZ/contains this/DT/this data/NN/data is/VBZ/is used/VBN/used instead/RB/instead of/IN/of the/DT/the items/NNS/items class/NN/class link/NN/link /:/{ public/JJ/public inventoryitem/NN/inventoryitem ii/NN/ii object/NN/object holding/VBG/holding data/NNS/data public/JJ/public link/NN/link next/IN/next reference/NN/reference to/TO/to next/JJ/next link/NN/link /:/} references/NNS/references and/CC/and basic/JJ/basic types/NNS/types you/PRP/you can/MD/can easily/RB/easily get/VB/get confused/VBN/confused about/IN/about references/NNS/references in/IN/in the/DT/the context/NN/context of/IN/of linked/VBN/linked lists/NNS/lists /,/, so/RB/so let/VB/let s/NNS/s review/VB/review how/WRB/how they/PRP/they work/NNP/work. being/VBG/being able/JJ/able to/TO/to put/VB/put a/DT/a field/NN/field of/IN/of type/NN/type link/NN/link inside/NN/inside the/DT/the class/NN/class definition/NN/definition of/IN/of this/DT/this same/JJ/same type/NN/type may/MD/may seem/VB/seem odd/NNP/odd. wouldn/NN/wouldn t/NN/t the/DT/the compiler/NN/compiler be/VB/be confused/VBN/confused how/WRB/how can/MD/can it/PRP/it figure/VB/figure out/RP/out how/WRB/how big/JJ/big to/TO/to make/VB/make a/DT/a link/NN/link object/NN/object if/IN/if a/DT/a link/NN/link contains/VBZ/contains a/DT/a link/NN/link and/CC/and the/DT/the compiler/NN/compiler doesn/NN/doesn t/NN/t already/RB/already know/VB/know how/WRB/how big/JJ/big a/DT/a link/NN/link object/NN/object is/VBZ/is the/DT/the answer/NN/answer is/VBZ/is that/IN/that in/IN/in java/NN/java a/DT/a link/NN/link object/NN/object doesn/NN/doesn t/NN/t really/RB/really contain/VBP/contain another/DT/another link/NN/link object/NN/object /,/, although/IN/although it/PRP/it may/MD/may look/VB/look like/IN/like it/PRP/it does/NNP/does. the/DT/the next/JJ/next field/NN/field of/IN/of type/NN/type link/NN/link is/VBZ/is only/RB/only a/DT/a reference/NN/reference to/TO/to another/DT/another link/NN/link /,/, not/RB/not an/DT/an object/NNP/object. a/DT/a reference/NN/reference is/VBZ/is a/DT/a number/NN/number that/WDT/that refers/NNS/refers to/TO/to an/DT/an object/NNP/object. it/PRP/it s/VBZ/s the/DT/the object/NN/object s/VBZ/s address/NN/address in/IN/in the/DT/the computer/NN/computer s/NNS/s memory/NN/memory /,/, but/CC/but you/PRP/you don/VBP/don t/NN/t need/NN/need to/TO/to know/VB/know its/PRP$/its value/NN/value you/PRP/you just/RB/just treat/VBP/treat it/PRP/it as/IN/as a/DT/a magic/JJ/magic number/NN/number that/WDT/that tells/VBZ/tells you/PRP/you where/WRB/where the/DT/the object/NN/object is/NNP/is. in/IN/in a/DT/a given/VBN/given computer/operating/JJ/computer/operating system/NN/system /,/, all/DT/all references/NNS/references /,/, no/DT/no matter/NN/matter what/WP/what they/PRP/they refer/VBP/refer to/TO/to /,/, are/VBP/are the/DT/the same/JJ/same size/NNP/size. thus/RB/thus /,/, it/PRP/it s/VBZ/s no/DT/no problem/NN/problem for/IN/for the/DT/the compiler/NN/compiler to/TO/to figure/VB/figure out/RP/out how/WRB/how big/JJ/big this/DT/this field/NN/field should/MD/should be/VB/be and/CC/and thereby/VB/thereby construct/NN/construct an/DT/an entire/JJ/entire link/NN/link object/NNP/object. note/NN/note that/IN/that in/IN/in java/NN/java /,/, primitive/JJ/primitive types/NNS/types such/JJ/such as/IN/as int/NN/int and/CC/and double/JJ/double are/VBP/are stored/VBN/stored quite/RB/quite differently/RB/differently than/IN/than objects/NNP/objects. fields/NNS/fields containing/VBG/containing primitive/JJ/primitive types/NNS/types do/VBP/do not/RB/not contain/VB/contain references/NNS/references /,/, but/CC/but actual/JJ/actual numerical/JJ/numerical values/NNS/values like/IN/like 7/CD/7 or/CC/or 3.14159/CD/3.14159. a/DT/a variable/JJ/variable definition/NN/definition like/IN/like double/JJ/double salary/NN/salary =/:/= 65000.00/CD/65000.00 creates/NNS/creates a/DT/a space/NN/space in/IN/in memory/NN/memory and/CC/and puts/NNS/puts the/DT/the number/NN/number 65000.00/CD/65000.00 into/IN/into this/DT/this space/NNP/space. however/RB/however /,/, a/DT/a reference/NN/reference to/TO/to an/DT/an object/NN/object like/IN/like link/NN/link alink/NN/alink =/:/= somelink/NN/somelink puts/NNS/puts a/DT/a reference/NN/reference to/TO/to an/DT/an object/NN/object of/IN/of type/NN/type link/NN/link /,/, called/VBN/called somelink/NN/somelink /,/, into/IN/into alink/NNP/alink. the/DT/the somelink/NN/somelink object/NN/object itself/PRP/itself is/VBZ/is located/VBN/located elsewhere/-NONE-/elsewhere. it/PRP/it isn/VBP/isn t/NN/t moved/VBD/moved /,/, or/CC/or even/RB/even created/VBN/created /,/, by/IN/by this/DT/this statement/NN/statement it/PRP/it must/MD/must have/VB/have been/VBN/been created/VBN/created before/NNP/before. to/TO/to create/VB/create an/DT/an object/NN/object /,/, you/PRP/you must/MD/must always/RB/always use/VB/use new/JJ/new link/NN/link somelink/NN/somelink =/:/= new/JJ/new link/NN/link /:/( /:/) even/RB/even the/DT/the somelink/NN/somelink field/NN/field doesn/NN/doesn t/NN/t hold/NN/hold an/DT/an object/NN/object it/PRP/it s/VBZ/s still/RB/still just/RB/just a/DT/a reference/NNP/reference. the/DT/the object/NN/object is/VBZ/is somewhere/RB/somewhere else/RB/else in/IN/in memory/NN/memory /,/, as/IN/as shown/NN/shown in/IN/in figure/NN/figure 5.2/CD/5.2. other/JJ/other languages/NNS/languages /,/, such/JJ/such as/IN/as c/NN/c +/:/+ +/:/+ /,/, handle/JJ/handle objects/NNS/objects quite/RB/quite differently/RB/differently than/IN/than java/NNP/java. in/IN/in c/NN/c +/:/+ +/:/+ a/DT/a field/NN/field like/IN/like link/NN/link next/IN/next actually/RB/actually contains/VBZ/contains an/DT/an object/NN/object of/IN/of type/NN/type link/NNP/link. you/PRP/you can/MD/can t/VB/t write/JJ/write a/DT/a self/NN/self referential/NN/referential class/NN/class definition/NN/definition in/IN/in c/NN/c +/:/+ +/:/+ /:/( although/IN/although you/PRP/you can/MD/can put/VB/put a/DT/a pointer/NN/pointer to/TO/to a/DT/a link/NN/link in/IN/in class/NN/class link/NN/link a/DT/a pointer/NN/pointer is/VBZ/is similar/JJ/similar to/TO/to a/DT/a reference/NN/reference /:/) /./. c/NN/c +/:/+ +/:/+ programmers/NNS/programmers should/MD/should keep/VB/keep in/IN/in mind/NN/mind how/WRB/how java/NN/java handles/NNS/handles objects/NNS/objects this/DT/this usage/NN/usage may/MD/may be/VB/be counter/RBR/counter intuitive/NNP/intuitive. links/NNS/links 181/CD/181 figure/NN/figure 5.2/CD/5.2 objects/NNS/objects and/CC/and references/NNS/references in/IN/in memory/NNP/memory. relationship/NN/relationship /,/, not/RB/not position/NN/position let/VB/let s/NNS/s examine/NN/examine one/CD/one of/IN/of the/DT/the major/JJ/major ways/NNS/ways in/IN/in which/WDT/which linked/VBN/linked lists/NNS/lists differ/VBP/differ from/IN/from arrays/NNP/arrays. in/IN/in an/DT/an array/NN/array each/DT/each item/NN/item occupies/NNS/occupies a/DT/a particular/JJ/particular position/NNP/position. this/DT/this position/NN/position can/MD/can be/VB/be directly/RB/directly accessed/VBN/accessed using/VBG/using an/DT/an index/NN/index number/NNP/number. it/PRP/it s/VBZ/s like/IN/like a/DT/a row/NN/row of/IN/of houses/NNS/houses you/PRP/you can/MD/can find/VB/find a/DT/a particular/JJ/particular house/NN/house using/VBG/using its/PRP$/its address/NNP/address. in/IN/in a/DT/a list/NN/list the/DT/the only/JJ/only way/NN/way to/TO/to find/VB/find a/DT/a particular/JJ/particular element/NN/element is/VBZ/is to/TO/to follow/VB/follow along/IN/along the/DT/the chain/NN/chain of/IN/of elements/NNP/elements. it/PRP/it s/VBZ/s more/JJR/more like/IN/like human/JJ/human relations/NNP/relations. maybe/NN/maybe you/PRP/you ask/VBP/ask harry/JJ/harry where/WRB/where bob/NN/bob is/NNP/is. harry/NN/harry doesn/NN/doesn t/NN/t know/VB/know /,/, but/CC/but he/PRP/he thinks/VBZ/thinks jane/NN/jane might/MD/might know/VB/know /,/, so/RB/so you/PRP/you go/VBP/go and/CC/and ask/NN/ask jane/NNP/jane. jane/NN/jane saw/VBD/saw bob/NN/bob leave/NN/leave the/DT/the office/NN/office with/IN/with sally/RB/sally /,/, so/RB/so you/PRP/you call/VBP/call sally/RB/sally s/VBZ/s cell/NN/cell phone/NNP/phone. she/PRP/she dropped/VBD/dropped bob/NN/bob off/IN/off at/IN/at 182/CD/182 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists alink/VBP/alink somelink/NN/somelink object/NN/object of/IN/of type/NN/type link/NN/link memory/NN/memory alink/NN/alink and/CC/and somelink/NN/somelink refer/NN/refer to/TO/to an/DT/an object/NN/object of/IN/of type/NN/type link/NN/link peter/NN/peter s/NNS/s office/NN/office /,/, so/RB/so but/CC/but you/PRP/you get/VBP/get the/DT/the idea/NNP/idea. you/PRP/you can/MD/can t/VB/t access/NN/access a/DT/a data/NN/data item/NN/item directly/RB/directly you/PRP/you must/MD/must use/VB/use relationships/NNS/relationships between/IN/between the/DT/the items/NNS/items to/TO/to locate/VB/locate it/NNP/it. you/PRP/you start/VB/start with/IN/with the/DT/the first/JJ/first item/NN/item /,/, go/VBP/go to/TO/to the/DT/the second/JJ/second /,/, then/RB/then the/DT/the third/JJ/third /,/, until/IN/until you/PRP/you find/VBP/find what/WP/what you/PRP/you re/VBP/re looking/VBG/looking for/NNP/for. the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NN/applet the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NN/applet provides/VBZ/provides three/CD/three list/NN/list operations/NNP/operations. you/PRP/you can/MD/can insert/VB/insert a/DT/a new/JJ/new data/NNS/data item/VBP/item /,/, search/NN/search for/IN/for a/DT/a data/NN/data item/NN/item with/IN/with a/DT/a specified/VBN/specified key/JJ/key /,/, and/CC/and delete/JJ/delete a/DT/a data/NN/data item/NN/item with/IN/with a/DT/a specified/VBN/specified key/NNP/key. these/DT/these operations/NNS/operations are/VBP/are the/DT/the same/JJ/same ones/NNS/ones we/PRP/we explored/VBD/explored in/IN/in the/DT/the array/NN/array workshop/NN/workshop applet/NN/applet in/IN/in chapter/NN/chapter 2/CD/2 they/PRP/they re/VBP/re suitable/JJ/suitable for/IN/for a/DT/a general/JJ/general purpose/NN/purpose database/NN/database application/NNP/application. figure/NN/figure 5.3/CD/5.3 shows/NNS/shows how/WRB/how the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NN/applet looks/NNS/looks when/WRB/when it/PRP/it s/VBZ/s started/NNP/started. initially/RB/initially /,/, there/EX/there are/VBP/are 13/CD/13 links/NNS/links on/IN/on the/DT/the list/NNP/list. the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NN/applet 183/CD/183 figure/NN/figure 5.3/CD/5.3 the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NNP/applet. the/DT/the insert/NN/insert button/NN/button if/IN/if you/PRP/you think/VBP/think 13/CD/13 is/VBZ/is an/DT/an unlucky/JJ/unlucky number/NN/number /,/, you/PRP/you can/MD/can insert/VB/insert a/DT/a new/JJ/new link/NNP/link. press/NN/press the/DT/the ins/NNS/ins button/VBP/button /,/, and/CC/and you/PRP/you ll/VBP/ll be/VB/be prompted/VBN/prompted to/TO/to enter/VB/enter a/DT/a key/JJ/key value/NN/value between/IN/between 0/-NONE-/0 and/CC/and 999/CD/999. subsequent/NN/subsequent presses/NNS/presses will/MD/will generate/VB/generate a/DT/a link/NN/link with/IN/with this/DT/this data/NNS/data in/IN/in it/PRP/it /,/, as/IN/as shown/NN/shown in/IN/in figure/NN/figure 5.4/CD/5.4. in/IN/in this/DT/this version/NN/version of/IN/of a/DT/a linked/VBN/linked list/NN/list /,/, new/JJ/new links/NNS/links are/VBP/are always/RB/always inserted/VBN/inserted at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NNP/list. this/DT/this is/VBZ/is the/DT/the simplest/JJS/simplest approach/NN/approach /,/, although/IN/although you/PRP/you can/MD/can also/RB/also insert/VB/insert links/NNS/links anywhere/RB/anywhere in/IN/in the/DT/the list/NN/list /,/, as/IN/as we/PRP/we ll/VBP/ll see/VBP/see later/NNP/later. a/DT/a final/JJ/final press/NN/press on/IN/on ins/NNS/ins will/MD/will redraw/VB/redraw the/DT/the list/NN/list so/RB/so the/DT/the newly/RB/newly inserted/VBN/inserted link/NN/link lines/NNS/lines up/IN/up with/IN/with the/DT/the other/JJ/other links/NNP/links. this/DT/this redrawing/NN/redrawing doesn/NN/doesn t/NN/t represent/NN/represent anything/NN/anything happening/VBG/happening in/IN/in the/DT/the program/NN/program itself/PRP/itself /,/, it/PRP/it just/RB/just makes/VBZ/makes the/DT/the display/NN/display neater/NNP/neater. figure/NN/figure 5.4/CD/5.4 a/DT/a new/JJ/new link/NN/link being/VBG/being inserted/NNP/inserted. the/DT/the find/NN/find button/NN/button the/DT/the find/NN/find button/NN/button allows/VBZ/allows you/PRP/you to/TO/to find/VB/find a/DT/a link/NN/link with/IN/with a/DT/a specified/VBN/specified key/JJ/key value/NNP/value. when/WRB/when prompted/VBD/prompted /,/, type/NN/type in/IN/in the/DT/the value/NN/value of/IN/of an/DT/an existing/VBG/existing link/NN/link /,/, preferably/RB/preferably one/CD/one somewhere/RB/somewhere in/IN/in the/DT/the middle/NN/middle of/IN/of the/DT/the list/NNP/list. as/IN/as you/PRP/you continue/VBP/continue to/TO/to press/NN/press the/DT/the button/NN/button /,/, you/PRP/you ll/VBP/ll see/VB/see the/DT/the red/NN/red arrow/NN/arrow move/NN/move along/IN/along the/DT/the list/NN/list /,/, looking/VBG/looking for/IN/for the/DT/the link/NNP/link. a/DT/a message/NN/message informs/VBZ/informs you/PRP/you when/WRB/when the/DT/the arrow/NN/arrow finds/NNS/finds the/DT/the link/NNP/link. if/IN/if you/PRP/you type/VBP/type a/DT/a non/NN/non existent/NN/existent key/NN/key value/NN/value /,/, the/DT/the arrow/NN/arrow will/MD/will search/VB/search all/DT/all the/DT/the way/NN/way to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list before/IN/before reporting/VBG/reporting that/IN/that the/DT/the item/NN/item can/MD/can t/VB/t be/VB/be found/NNP/found. the/DT/the delete/JJ/delete button/NN/button you/PRP/you can/MD/can also/RB/also delete/VB/delete a/DT/a key/JJ/key with/IN/with a/DT/a specified/VBN/specified value/NNP/value. type/NN/type in/IN/in the/DT/the value/NN/value of/IN/of an/DT/an existing/VBG/existing link/NN/link and/CC/and repeatedly/RB/repeatedly press/NN/press del/NNP/del. again/RB/again /,/, the/DT/the arrow/NN/arrow will/MD/will move/VB/move along/IN/along the/DT/the list/NN/list /,/, looking/VBG/looking for/IN/for the/DT/the link/NNP/link. when/WRB/when the/DT/the arrow/NN/arrow finds/NNS/finds the/DT/the link/NN/link /,/, it/PRP/it simply/RB/simply removes/VBZ/removes that/IN/that link/NN/link and/CC/and connects/NNS/connects the/DT/the arrow/NN/arrow from/IN/from the/DT/the previous/JJ/previous link/NN/link straight/NN/straight across/IN/across to/TO/to the/DT/the following/VBG/following link/NNP/link. this/DT/this is/VBZ/is how/WRB/how links/NNS/links are/VBP/are removed/VBN/removed the/DT/the reference/NN/reference to/TO/to the/DT/the preceding/NN/preceding link/NN/link is/VBZ/is changed/VBN/changed to/TO/to point/NN/point to/TO/to the/DT/the following/VBG/following link/NNP/link. a/DT/a final/JJ/final keypress/NN/keypress redraws/NNS/redraws the/DT/the picture/NN/picture /,/, but/CC/but again/RB/again redrawing/VBG/redrawing just/RB/just provides/VBZ/provides evenly/RB/evenly spaced/VBN/spaced links/NNS/links for/IN/for aesthetic/JJ/aesthetic reasons/NNS/reasons the/DT/the length/NN/length of/IN/of the/DT/the arrows/NNS/arrows doesn/VBP/doesn t/NN/t correspond/NN/correspond to/TO/to anything/NN/anything in/IN/in the/DT/the program/NNP/program. note/NN/note the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NN/applet can/MD/can create/VB/create both/DT/both unsorted/VBN/unsorted and/CC/and sorted/VBN/sorted lists/NNP/lists. unsorted/VBD/unsorted is/VBZ/is the/DT/the default/NNP/default. we/PRP/we ll/VBP/ll show/NN/show how/WRB/how to/TO/to use/VB/use the/DT/the applet/NN/applet for/IN/for sorted/VBN/sorted lists/NNS/lists when/WRB/when we/PRP/we discuss/VBP/discuss them/PRP/them later/JJ/later in/IN/in this/DT/this chapter/NNP/chapter. 184/CD/184 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists a/DT/a simple/JJ/simple linked/VBN/linked list/NN/list our/PRP$/our first/JJ/first example/NN/example program/NN/program /,/, linklist.java/NNP/linklist.java /,/, demonstrates/VBZ/demonstrates a/DT/a simple/JJ/simple linked/VBN/linked list/NNP/list. the/DT/the only/JJ/only operations/NNS/operations allowed/VBN/allowed in/IN/in this/DT/this version/NN/version of/IN/of a/DT/a list/NN/list are/VBP/are inserting/VBG/inserting an/DT/an item/NN/item at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list deleting/VBG/deleting the/DT/the item/NN/item at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list iterating/VBG/iterating through/IN/through the/DT/the list/NN/list to/TO/to display/VB/display its/PRP$/its contents/NNS/contents these/DT/these operations/NNS/operations are/VBP/are fairly/RB/fairly easy/JJ/easy to/TO/to carry/VB/carry out/RP/out /,/, so/RB/so we/PRP/we ll/VBP/ll start/NN/start with/IN/with them/NNP/them. /NNP/( as/IN/as we/PRP/we ll/VBP/ll see/VBP/see later/JJ/later /,/, these/DT/these operations/NNS/operations are/VBP/are also/RB/also all/DT/all you/PRP/you need/VBP/need to/TO/to use/VB/use a/DT/a linked/VBN/linked list/NN/list as/IN/as the/DT/the basis/NN/basis for/IN/for a/DT/a stack/NNP/stack. /NNP/) before/IN/before we/PRP/we get/VBP/get to/TO/to the/DT/the complete/JJ/complete linklist.java/NN/linklist.java program/NN/program /,/, we/PRP/we ll/VBP/ll look/VBP/look at/IN/at some/DT/some important/JJ/important parts/NNS/parts of/IN/of the/DT/the link/NN/link and/CC/and linklist/NN/linklist classes/NNP/classes. the/DT/the link/NN/link class/NN/class you/PRP/you ve/VBP/ve already/RB/already seen/VBN/seen the/DT/the data/NNS/data part/NN/part of/IN/of the/DT/the link/NN/link class/NNP/class. here/RB/here s/VBZ/s the/DT/the complete/JJ/complete class/NN/class definition/NN/definition class/NN/class link/NN/link /:/{ public/JJ/public int/NN/int idata/NN/idata data/NNS/data item/VBP/item public/JJ/public double/JJ/double ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( int/NN/int id/VBD/id /,/, double/JJ/double dd/NN/dd /:/) constructor/NN/constructor /:/{ idata/NN/idata =/:/= id/JJ/id initialize/NN/initialize data/NNS/data ddata/VBP/ddata =/:/= dd/NN/dd /:/( next/JJ/next is/VBZ/is automatically/RB/automatically /:/} set/NN/set to/TO/to null/VB/null /:/) public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display ourself/PRP/ourself /:/{ system.out.print/JJ/system.out.print /NN/( /:/{ +/:/+ idata/NN/idata +/:/+ /,/, +/:/+ ddata/NN/ddata +/:/+ /:/} /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link in/IN/in addition/NN/addition to/TO/to the/DT/the data/NNS/data /,/, there/EX/there s/VBZ/s a/DT/a constructor/NN/constructor and/CC/and a/DT/a method/NN/method /,/, displaylink/NN/displaylink /:/( /:/) /,/, that/IN/that displays/NNS/displays the/DT/the link/NN/link s/VBZ/s data/NNS/data in/IN/in the/DT/the format/NN/format /:/{ 22/CD/22 /,/, 33.9/CD/33.9 /:/} /./. object/NN/object purists/NNS/purists would/MD/would probably/RB/probably object/VB/object to/TO/to naming/VB/naming this/DT/this method/NN/method displaylink/NN/displaylink /:/( /:/) /,/, arguing/VBG/arguing that/IN/that it/PRP/it should/MD/should be/VB/be simply/RB/simply display/VB/display /:/( /:/) /./. using/VBG/using the/DT/the shorter/NN/shorter name/NN/name would/MD/would be/VB/be in/IN/in the/DT/the spirit/NN/spirit of/IN/of polymorphism/NN/polymorphism /,/, but/CC/but it/PRP/it makes/VBZ/makes the/DT/the listing/NN/listing somewhat/RB/somewhat harder/JJR/harder to/TO/to understand/VB/understand when/WRB/when you/PRP/you see/VBP/see a/DT/a statement/NN/statement like/IN/like a/DT/a simple/JJ/simple linked/VBN/linked list/NN/list 185/CD/185 current.display/JJ/current.display /NN/( /:/) and/CC/and you/PRP/you ve/VBP/ve forgotten/VBN/forgotten whether/IN/whether current/JJ/current is/VBZ/is a/DT/a link/NN/link object/NN/object /,/, a/DT/a linklist/NN/linklist object/NN/object /,/, or/CC/or something/NN/something else/NNP/else. the/DT/the constructor/NN/constructor initializes/VBZ/initializes the/DT/the data/NNP/data. there/RB/there s/VBZ/s no/DT/no need/NN/need to/TO/to initialize/VB/initialize the/DT/the next/JJ/next field/NN/field because/IN/because it/PRP/it s/VBZ/s automatically/RB/automatically set/VBN/set to/TO/to null/VB/null when/WRB/when it/PRP/it s/VBZ/s created/NNP/created. /NNP/( however/RB/however /,/, you/PRP/you could/MD/could set/VB/set it/PRP/it to/TO/to null/VB/null explicitly/RB/explicitly /,/, for/IN/for clarity/NNP/clarity. /:/) the/DT/the null/NN/null value/NN/value means/VBZ/means it/PRP/it doesn/VBP/doesn t/NN/t refer/NN/refer to/TO/to anything/NN/anything /,/, which/WDT/which is/VBZ/is the/DT/the situation/NN/situation until/IN/until the/DT/the link/NN/link is/VBZ/is connected/VBN/connected to/TO/to other/JJ/other links/NNP/links. we/PRP/we ve/VBP/ve made/VBN/made the/DT/the storage/NN/storage type/NN/type of/IN/of the/DT/the link/NN/link fields/NNS/fields /:/( idata/NN/idata and/CC/and so/RB/so on/IN/on /NNP/) public/NNP/public. if/IN/if they/PRP/they were/VBD/were private/JJ/private /,/, we/PRP/we would/MD/would need/VB/need to/TO/to provide/VB/provide public/JJ/public methods/NNS/methods to/TO/to access/NN/access them/PRP/them /,/, which/WDT/which would/MD/would require/VB/require extra/JJ/extra code/NN/code /,/, thus/RB/thus making/VBG/making the/DT/the listing/NN/listing longer/NN/longer and/CC/and harder/NN/harder to/TO/to read/NNP/read. ideally/RB/ideally /,/, for/IN/for security/NN/security we/PRP/we would/MD/would probably/RB/probably want/VB/want to/TO/to restrict/VB/restrict link/NN/link object/NN/object access/NN/access to/TO/to methods/NNS/methods of/IN/of the/DT/the linklist/NN/linklist class/NNP/class. however/RB/however /,/, without/IN/without an/DT/an inheritance/NN/inheritance relationship/NN/relationship between/IN/between these/DT/these classes/NNS/classes /,/, that/IN/that s/NNS/s not/RB/not very/RB/very convenient/NNP/convenient. we/PRP/we could/MD/could use/VB/use the/DT/the default/NN/default access/NN/access specifier/NN/specifier /:/( no/DT/no keyword/NN/keyword /:/) to/TO/to give/VB/give the/DT/the data/NNS/data package/NN/package access/NN/access /NN/( access/NN/access restricted/VBD/restricted to/TO/to classes/NNS/classes in/IN/in the/DT/the same/JJ/same directory/NN/directory /:/) /,/, but/CC/but that/IN/that has/VBZ/has no/DT/no effect/NN/effect in/IN/in these/DT/these demo/NN/demo programs/NNS/programs /,/, which/WDT/which occupy/NN/occupy only/RB/only one/CD/one directory/NN/directory anyway/NNP/anyway. the/DT/the public/NN/public specifier/NN/specifier at/IN/at least/JJS/least makes/NNS/makes it/PRP/it clear/VBP/clear that/IN/that this/DT/this data/NN/data isn/NN/isn t/NN/t private/NNP/private. in/IN/in a/DT/a more/RBR/more serious/JJ/serious program/NN/program you/PRP/you would/MD/would probably/RB/probably want/VB/want to/TO/to make/VB/make all/PDT/all the/DT/the data/NNS/data fields/NNS/fields in/IN/in the/DT/the link/NN/link class/NN/class private/NNP/private. the/DT/the linklist/NN/linklist class/NN/class the/DT/the linklist/NN/linklist class/NN/class contains/VBZ/contains only/RB/only one/CD/one data/NNS/data item/NN/item a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first link/NN/link on/IN/on the/DT/the list/NNP/list. this/DT/this reference/NN/reference is/VBZ/is called/VBN/called first/NNP/first. it/PRP/it s/VBZ/s the/DT/the only/JJ/only permanent/NN/permanent information/NN/information the/DT/the list/NN/list maintains/VBZ/maintains about/IN/about the/DT/the location/NN/location of/IN/of any/DT/any of/IN/of the/DT/the links/NNP/links. it/PRP/it finds/VBZ/finds the/DT/the other/JJ/other links/NNS/links by/IN/by following/VBG/following the/DT/the chain/NN/chain of/IN/of references/NNS/references from/IN/from first/JJ/first /,/, using/VBG/using each/DT/each link/NN/link s/VBZ/s next/JJ/next field/NN/field class/NN/class linklist/NN/linklist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first link/NN/link on/IN/on list/NN/list public/JJ/public void/JJ/void linklist/NN/linklist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null no/DT/no items/NNS/items on/IN/on list/NN/list yet/RB/yet /./} public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if list/NN/list is/VBZ/is empty/JJ/empty /NN/{ return/NN/return /:/( first/JJ/first =/NN/= =/:/= null/NN/null /:/) /:/} 186/CD/186 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists /:/... other/JJ/other methods/NNS/methods go/VBP/go here/RB/here /:/} the/DT/the constructor/NN/constructor for/IN/for linklist/NN/linklist sets/NNS/sets first/RB/first to/TO/to null/NNP/null. this/DT/this isn/NN/isn t/NN/t really/RB/really necessary/JJ/necessary because/IN/because /,/, as/IN/as we/PRP/we noted/VBD/noted /,/, references/NNS/references are/VBP/are set/VBN/set to/TO/to null/VB/null automatically/RB/automatically when/WRB/when they/PRP/they re/VBP/re created/NNP/created. however/RB/however /,/, the/DT/the explicit/NN/explicit constructor/NN/constructor makes/VBZ/makes it/PRP/it clear/RB/clear that/IN/that this/DT/this is/VBZ/is how/WRB/how first/RB/first begins/NNP/begins. when/WRB/when first/JJ/first has/VBZ/has the/DT/the value/NN/value null/NN/null /,/, we/PRP/we know/VBP/know there/RB/there are/VBP/are no/DT/no items/NNS/items on/IN/on the/DT/the list/NNP/list. if/IN/if there/EX/there were/VBD/were any/DT/any items/NNS/items /,/, first/JJ/first would/MD/would contain/VB/contain a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first one/NNP/one. the/DT/the isempty/NN/isempty /:/( /:/) method/NN/method uses/NNS/uses this/DT/this fact/NN/fact to/TO/to determine/VB/determine whether/IN/whether the/DT/the list/NN/list is/VBZ/is empty/NNP/empty. the/DT/the insertfirst/NN/insertfirst /:/( /:/) method/NN/method the/DT/the insertfirst/NN/insertfirst /:/( /:/) method/NN/method of/IN/of linklist/NN/linklist inserts/NNS/inserts a/DT/a new/JJ/new link/NN/link at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NNP/list. this/DT/this is/VBZ/is the/DT/the easiest/JJS/easiest place/NN/place to/TO/to insert/VB/insert a/DT/a link/NN/link because/IN/because first/JJ/first already/RB/already points/VBZ/points to/TO/to the/DT/the first/JJ/first link/NNP/link. to/TO/to insert/VB/insert the/DT/the new/JJ/new link/NN/link /,/, we/PRP/we need/VBP/need only/RB/only set/VBN/set the/DT/the next/JJ/next field/NN/field in/IN/in the/DT/the newly/RB/newly created/VBN/created link/NN/link to/TO/to point/NN/point to/TO/to the/DT/the old/JJ/old first/JJ/first link/NN/link and/CC/and then/RB/then change/VB/change first/JJ/first so/IN/so it/PRP/it points/VBZ/points to/TO/to the/DT/the newly/RB/newly created/VBN/created link/NNP/link. this/DT/this situation/NN/situation is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 5.5/CD/5.5. a/DT/a simple/JJ/simple linked/VBN/linked list/NN/list 187/CD/187 a/DT/a /NN/) before/IN/before insertion/NN/insertion b/NN/b /:/) after/IN/after insertion/NN/insertion first/RB/first next/JJ/next next/JJ/next next/JJ/next next/JJ/next first/JJ/first next/JJ/next next/JJ/next next/JJ/next next/JJ/next null/NN/null null/NN/null 42/CD/42 7/CD/7 98/CD/98 14/CD/14 42/CD/42 link/NN/link next/IN/next 33/CD/33 7/CD/7 98/CD/98 14/CD/14 42/CD/42 7/CD/7 98/CD/98 14/CD/14 figure/NN/figure 5.5/CD/5.5 inserting/VBG/inserting a/DT/a new/JJ/new link/NNP/link. in/IN/in insertfirst/JJ/insertfirst /NN/( /:/) we/PRP/we begin/VBP/begin by/IN/by creating/VBG/creating the/DT/the new/JJ/new link/NN/link using/VBG/using the/DT/the data/NNS/data passed/VBD/passed as/IN/as arguments/NNP/arguments. then/RB/then we/PRP/we change/VBP/change the/DT/the link/NN/link references/NNS/references as/IN/as we/PRP/we just/RB/just noted/VBD/noted insert/NN/insert at/IN/at start/NN/start of/IN/of list/NN/list public/JJ/public void/JJ/void insertfirst/NN/insertfirst /:/( int/NN/int id/VBD/id /,/, double/JJ/double dd/NN/dd /:/) /:/{ make/VBP/make new/JJ/new link/NN/link link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( id/JJ/id /,/, dd/JJ/dd /NN/) newlink.next/JJ/newlink.next =/NN/= first/RB/first newlink/VBP/newlink old/JJ/old first/JJ/first first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink /:/} the/DT/the arrows/NNS/arrows in/IN/in the/DT/the comments/NNS/comments in/IN/in the/DT/the last/JJ/last two/CD/two statements/NNS/statements mean/JJ/mean that/IN/that a/DT/a link/NN/link /:/( or/CC/or the/DT/the first/JJ/first field/NN/field /:/) connects/NNS/connects to/TO/to the/DT/the next/JJ/next /NN/( downstream/NN/downstream /:/) link/NNP/link. /:/( in/IN/in doubly/RB/doubly linked/VBN/linked lists/NNS/lists we/PRP/we ll/VBP/ll see/VBP/see upstream/NN/upstream connections/NNS/connections as/IN/as well/RB/well /,/, symbolized/VBN/symbolized by/IN/by arrows/NNP/arrows. /NNP/) compare/NN/compare these/DT/these two/CD/two statements/NNS/statements with/IN/with figure/NN/figure 5.5/CD/5.5. make/NN/make sure/NN/sure you/PRP/you understand/VBP/understand how/WRB/how the/DT/the statements/NNS/statements cause/VBP/cause the/DT/the links/NNS/links to/TO/to be/VB/be changed/VBN/changed /,/, as/IN/as shown/NN/shown in/IN/in the/DT/the figure/NNP/figure. this/DT/this kind/NN/kind of/IN/of reference/NN/reference manipulation/NN/manipulation is/VBZ/is the/DT/the heart/NN/heart of/IN/of linked/VBN/linked list/NN/list algorithms/NNP/algorithms. the/DT/the deletefirst/NN/deletefirst /:/( /:/) method/NN/method the/DT/the deletefirst/NN/deletefirst /:/( /:/) method/NN/method is/VBZ/is the/DT/the reverse/NN/reverse of/IN/of insertfirst/JJ/insertfirst /NN/( /:/) /./. it/PRP/it disconnects/VBZ/disconnects the/DT/the first/JJ/first link/NN/link by/IN/by rerouting/NN/rerouting first/RB/first to/TO/to point/VB/point to/TO/to the/DT/the second/JJ/second link/NNP/link. this/DT/this second/JJ/second link/NN/link is/VBZ/is found/VBN/found by/IN/by looking/NN/looking at/IN/at the/DT/the next/JJ/next field/NN/field in/IN/in the/DT/the first/JJ/first link/NN/link public/NN/public link/NN/link deletefirst/NN/deletefirst /:/( /:/) delete/JJ/delete first/JJ/first item/NN/item /:/{ /:/( assumes/NNS/assumes list/VBP/list not/RB/not empty/JJ/empty /NN/) link/NN/link temp/NN/temp =/:/= first/JJ/first save/NN/save reference/NN/reference to/TO/to link/VB/link first/RB/first =/./= first.next/JJ/first.next delete/NN/delete it/PRP/it first/RB/first old/JJ/old next/JJ/next return/NN/return temp/NN/temp return/NN/return deleted/VBD/deleted link/NN/link /:/} the/DT/the second/JJ/second statement/NN/statement is/VBZ/is all/DT/all you/PRP/you need/VBP/need to/TO/to remove/VB/remove the/DT/the first/JJ/first link/NN/link from/IN/from the/DT/the list/NNP/list. we/PRP/we choose/VBP/choose to/TO/to also/RB/also return/VB/return the/DT/the link/NN/link /,/, for/IN/for the/DT/the convenience/NN/convenience of/IN/of the/DT/the user/NN/user of/IN/of the/DT/the linked/VBN/linked list/NN/list /,/, so/RB/so we/PRP/we save/VBP/save it/PRP/it in/IN/in temp/NN/temp before/IN/before deleting/VBG/deleting it/PRP/it and/CC/and return/VB/return the/DT/the value/NN/value of/IN/of temp/NNP/temp. figure/NN/figure 5.6/CD/5.6 shows/NNS/shows how/WRB/how first/JJ/first is/VBZ/is rerouted/VBN/rerouted to/TO/to delete/VB/delete the/DT/the object/NNP/object. in/IN/in c/NN/c +/:/+ +/:/+ and/CC/and similar/JJ/similar languages/NNS/languages /,/, you/PRP/you would/MD/would need/VB/need to/TO/to worry/VB/worry about/IN/about deleting/VBG/deleting the/DT/the link/NN/link itself/PRP/itself after/IN/after it/PRP/it was/VBD/was disconnected/VBN/disconnected from/IN/from the/DT/the list/NNP/list. it/PRP/it s/VBZ/s in/IN/in memory/NN/memory somewhere/RB/somewhere /,/, but/CC/but now/RB/now nothing/NN/nothing refers/NNS/refers to/TO/to it/NNP/it. what/WP/what will/MD/will become/VB/become of/IN/of it/PRP/it in/IN/in java/NN/java /,/, the/DT/the garbage/NN/garbage collection/NN/collection process/NN/process will/MD/will destroy/VB/destroy it/PRP/it at/IN/at some/DT/some point/NN/point in/IN/in the/DT/the future/NN/future it/PRP/it s/VBZ/s not/RB/not your/PRP$/your responsibility/NNP/responsibility. notice/NN/notice that/WDT/that the/DT/the deletefirst/JJS/deletefirst /:/( /:/) method/NN/method assumes/VBZ/assumes the/DT/the list/NN/list is/VBZ/is not/RB/not empty/NNP/empty. before/IN/before calling/VBG/calling it/PRP/it /,/, your/PRP$/your program/NN/program should/MD/should verify/VB/verify this/DT/this fact/NN/fact with/IN/with the/DT/the isempty/NN/isempty /:/( /:/) method/NNP/method. 188/CD/188 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists figure/VBP/figure 5.6/CD/5.6 deleting/VBG/deleting a/DT/a link/NNP/link. the/DT/the displaylist/NN/displaylist /:/( /:/) method/NN/method to/TO/to display/VB/display the/DT/the list/NN/list /,/, you/PRP/you start/VBP/start at/IN/at first/JJ/first and/CC/and follow/RB/follow the/DT/the chain/NN/chain of/IN/of references/NNS/references from/IN/from link/NN/link to/TO/to link/NNP/link. a/DT/a variable/JJ/variable current/JJ/current points/NNS/points to/TO/to /VB/( or/CC/or technically/RB/technically refers/NNS/refers to/TO/to /VB/) each/DT/each link/NN/link in/IN/in turn/NNP/turn. it/PRP/it starts/VBZ/starts off/RP/off pointing/VBG/pointing to/TO/to first/JJ/first /,/, which/WDT/which holds/NNS/holds a/DT/a reference/NN/reference to/TO/to the/DT/the first/JJ/first link/NNP/link. the/DT/the statement/NN/statement current/JJ/current =/NN/= current.next/JJ/current.next changes/NNS/changes current/JJ/current to/TO/to point/NN/point to/TO/to the/DT/the next/JJ/next link/NN/link because/IN/because that/DT/that s/VBZ/s what/WP/what s/NNS/s in/IN/in the/DT/the next/JJ/next field/NN/field in/IN/in each/DT/each link/NNP/link. here/RB/here s/VBZ/s the/DT/the entire/JJ/entire displaylist/NN/displaylist /:/( /:/) method/NN/method public/JJ/public void/JJ/void displaylist/NN/displaylist /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning of/IN/of list/NN/list while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list is/VBZ/is indicated/VBN/indicated by/IN/by the/DT/the next/JJ/next field/NN/field in/IN/in the/DT/the last/JJ/last link/NN/link pointing/VBG/pointing to/TO/to null/VB/null rather/RB/rather than/IN/than another/DT/another link/NNP/link. how/WRB/how did/VBD/did this/DT/this field/NN/field get/NN/get to/TO/to be/VB/be null/JJ/null it/PRP/it started/VBD/started that/IN/that way/NN/way when/WRB/when the/DT/the link/NN/link was/VBD/was created/VBN/created and/CC/and was/VBD/was never/RB/never given/VBN/given any/DT/any other/JJ/other value/NN/value because/IN/because it/PRP/it was/VBD/was always/RB/always at/IN/at a/DT/a simple/JJ/simple linked/VBN/linked list/NN/list 189/CD/189 a/DT/a /NN/) before/IN/before deletion/NN/deletion b/NN/b /:/) after/IN/after deletion/NN/deletion first/RB/first first/JJ/first null/NN/null null/NN/null 27/CD/27 94/CD/94 6/CD/6 33/CD/33 94/CD/94 6/CD/6 33/CD/33 the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. the/DT/the while/NN/while loop/NN/loop uses/NNS/uses this/DT/this condition/NN/condition to/TO/to terminate/VB/terminate itself/PRP/itself when/WRB/when it/PRP/it reaches/VBZ/reaches the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. figure/NN/figure 5.7/CD/5.7 shows/NNS/shows how/WRB/how current/JJ/current steps/NNS/steps along/IN/along the/DT/the list/NNP/list. 190/CD/190 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists first/RB/first next/JJ/next next/JJ/next next/JJ/next next/JJ/next null/NN/null a/DT/a /NN/) before/IN/before current/JJ/current =/NN/= current.next/JJ/current.next current/NN/current first/RB/first next/JJ/next next/JJ/next next/JJ/next next/JJ/next null/NN/null b/NN/b /:/) after/IN/after current/JJ/current =/NN/= current.next/JJ/current.next current/NN/current figure/NN/figure 5.7/CD/5.7 stepping/VBG/stepping along/IN/along the/DT/the list/NNP/list. at/IN/at each/DT/each link/NN/link /,/, the/DT/the displaylist/NN/displaylist /:/( /:/) method/NN/method calls/VBZ/calls the/DT/the displaylink/NN/displaylink /:/( /:/) method/NN/method to/TO/to display/VB/display the/DT/the data/NNS/data in/IN/in the/DT/the link/NNP/link. the/DT/the linklist.java/NNP/linklist.java program/NN/program listing/NN/listing 5.1/CD/5.1 shows/NNS/shows the/DT/the complete/JJ/complete linklist.java/NN/linklist.java program/NNP/program. you/PRP/you ve/VBP/ve already/RB/already seen/VBN/seen all/DT/all the/DT/the components/NNS/components except/IN/except the/DT/the main/JJ/main /NN/( /:/) routine/NNP/routine. listing/NN/listing 5.1/CD/5.1 the/DT/the linklist.java/NNP/linklist.java program/NN/program linklist.java/NN/linklist.java demonstrates/VBZ/demonstrates linked/VBN/linked list/NN/list to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java linklistapp/NN/linklistapp class/NN/class link/NN/link /:/{ public/JJ/public int/NN/int idata/NN/idata data/NNS/data item/VBP/item /:/( key/JJ/key /NN/) public/JJ/public double/JJ/double ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( int/NN/int id/VBD/id /,/, double/JJ/double dd/NN/dd /:/) constructor/NN/constructor /:/{ idata/NN/idata =/:/= id/JJ/id initialize/NN/initialize data/NNS/data ddata/VBP/ddata =/:/= dd/NN/dd /:/( next/JJ/next is/VBZ/is automatically/RB/automatically /:/} set/NN/set to/TO/to null/VB/null /:/) public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display ourself/PRP/ourself /:/{ system.out.print/JJ/system.out.print /NN/( /:/{ +/:/+ idata/NN/idata +/:/+ /,/, +/:/+ ddata/NN/ddata +/:/+ /:/} /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link class/NN/class linklist/NN/linklist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first link/NN/link on/IN/on list/NN/list public/JJ/public linklist/NN/linklist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null no/DT/no items/NNS/items on/IN/on list/NN/list yet/RB/yet /./} public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if list/NN/list is/VBZ/is empty/JJ/empty /NN/{ return/NN/return /:/( first/JJ/first =/NN/= =/:/= null/NN/null /:/) /:/} insert/NN/insert at/IN/at start/NN/start of/IN/of list/NN/list public/JJ/public void/JJ/void insertfirst/NN/insertfirst /:/( int/NN/int id/VBD/id /,/, double/JJ/double dd/NN/dd /:/) /:/{ make/VBP/make new/JJ/new link/NN/link link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( id/JJ/id /,/, dd/JJ/dd /NN/) newlink.next/JJ/newlink.next =/NN/= first/RB/first newlink/VBP/newlink old/JJ/old first/JJ/first first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink /:/} public/JJ/public link/NN/link deletefirst/NN/deletefirst /:/( /:/) delete/JJ/delete first/JJ/first item/NN/item /:/{ /:/( assumes/NNS/assumes list/VBP/list not/RB/not empty/JJ/empty /NN/) link/NN/link temp/NN/temp =/:/= first/JJ/first save/NN/save reference/NN/reference to/TO/to link/VB/link first/RB/first =/./= first.next/JJ/first.next delete/NN/delete it/PRP/it first/RB/first old/JJ/old next/JJ/next return/NN/return temp/NN/temp return/NN/return deleted/VBD/deleted link/NN/link /:/} a/DT/a simple/JJ/simple linked/VBN/linked list/NN/list 191/CD/191 listing/NN/listing 5.1/CD/5.1 continued/VBD/continued public/JJ/public void/JJ/void displaylist/NN/displaylist /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning of/IN/of list/NN/list while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} /:/} end/NN/end class/NN/class linklist/NN/linklist class/NN/class linklistapp/NN/linklistapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ linklist/NN/linklist thelist/NN/thelist =/:/= new/JJ/new linklist/NN/linklist /:/( /:/) make/VBP/make new/JJ/new list/NN/list thelist.insertfirst/JJ/thelist.insertfirst /NN/( 22/CD/22 /,/, 2.99/CD/2.99 /:/) insert/NN/insert four/CD/four items/NNS/items thelist.insertfirst/JJ/thelist.insertfirst /NN/( 44/CD/44 /,/, 4.99/CD/4.99 /:/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 66/CD/66 /,/, 6.99/CD/6.99 /:/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 88/CD/88 /,/, 8.99/CD/8.99 /:/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display list/NN/list while/IN/while /CD/( !/./! thelist.isempty/JJ/thelist.isempty /NN/( /:/) /:/) until/IN/until it/PRP/it s/VBZ/s empty/JJ/empty /,/, /:/{ link/NN/link alink/NN/alink =/:/= thelist.deletefirst/JJ/thelist.deletefirst /NN/( /:/) delete/JJ/delete link/NN/link system.out.print/JJ/system.out.print /NN/( deleted/VBD/deleted /CD/) display/NN/display it/PRP/it alink.displaylink/VBP/alink.displaylink /:/( /:/) system.out.println/JJ/system.out.println /NN/( /:/) /:/} thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display list/NN/list /:/} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class linklistapp/NN/linklistapp 192/CD/192 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.1/CD/5.1 continued/VBN/continued in/IN/in main/NN/main /:/( /:/) we/PRP/we create/VBP/create a/DT/a new/JJ/new list/NN/list /,/, insert/NN/insert four/CD/four new/JJ/new links/NNS/links into/IN/into it/PRP/it with/IN/with insertfirst/JJ/insertfirst /NN/( /:/) /,/, and/CC/and display/NN/display it/NNP/it. then/RB/then /,/, in/IN/in the/DT/the while/NN/while loop/NN/loop /,/, we/PRP/we remove/VBP/remove the/DT/the items/NNS/items one/CD/one by/IN/by one/CD/one with/IN/with deletefirst/JJ/deletefirst /NN/( /:/) until/IN/until the/DT/the list/NN/list is/VBZ/is empty/NNP/empty. the/DT/the empty/NN/empty list/NN/list is/VBZ/is then/RB/then displayed/NNP/displayed. here/RB/here s/VBZ/s the/DT/the output/NN/output from/IN/from linklist.java/NNP/linklist.java list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/{ 88/CD/88 /,/, 8.99/CD/8.99 /:/} /CD/{ 66/CD/66 /,/, 6.99/CD/6.99 /:/} /CD/{ 44/CD/44 /,/, 4.99/CD/4.99 /:/} /CD/{ 22/CD/22 /,/, 2.99/CD/2.99 /:/} deleted/VBN/deleted /-NONE-/{ 88/CD/88 /,/, 8.99/CD/8.99 /:/} deleted/VBN/deleted /-NONE-/{ 66/CD/66 /,/, 6.99/CD/6.99 /:/} deleted/VBN/deleted /-NONE-/{ 44/CD/44 /,/, 4.99/CD/4.99 /:/} deleted/VBN/deleted /-NONE-/{ 22/CD/22 /,/, 2.99/CD/2.99 /:/} list/NN/list /:/( first/JJ/first last/JJ/last /NN/) finding/NN/finding and/CC/and deleting/VBG/deleting specified/VBN/specified links/NNS/links our/PRP$/our next/JJ/next example/NN/example program/NN/program adds/VBZ/adds methods/NNS/methods to/TO/to search/VB/search a/DT/a linked/VBN/linked list/NN/list for/IN/for a/DT/a data/NN/data item/NN/item with/IN/with a/DT/a specified/VBN/specified key/JJ/key value/NN/value and/CC/and to/TO/to delete/VB/delete an/DT/an item/NN/item with/IN/with a/DT/a specified/VBN/specified key/JJ/key value/NNP/value. these/DT/these /,/, along/IN/along with/IN/with insertion/NN/insertion at/IN/at the/DT/the start/NN/start of/IN/of the/DT/the list/NN/list /,/, are/VBP/are the/DT/the same/JJ/same operations/NNS/operations carried/VBN/carried out/RP/out by/IN/by the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NNP/applet. the/DT/the complete/JJ/complete linklist2.java/NN/linklist2.java program/NN/program is/VBZ/is shown/VBN/shown in/IN/in listing/NN/listing 5.2/CD/5.2. listing/NN/listing 5.2/CD/5.2 the/DT/the linklist2.java/NNP/linklist2.java program/NN/program linklist2.java/NN/linklist2.java demonstrates/VBZ/demonstrates linked/VBN/linked list/NN/list to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java linklist2app/NNP/linklist2app class/NN/class link/NN/link /:/{ public/JJ/public int/NN/int idata/NN/idata data/NNS/data item/VBP/item /:/( key/JJ/key /NN/) public/JJ/public double/JJ/double ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( int/NN/int id/VBD/id /,/, double/JJ/double dd/NN/dd /:/) constructor/NN/constructor /:/{ idata/NN/idata =/:/= id/JJ/id ddata/NN/ddata =/:/= dd/NN/dd /:/} public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display ourself/PRP/ourself /:/{ system.out.print/JJ/system.out.print /NN/( /:/{ +/:/+ idata/NN/idata +/:/+ /,/, +/:/+ ddata/NN/ddata +/:/+ /:/} /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link finding/NN/finding and/CC/and deleting/VBG/deleting specified/VBN/specified links/NNS/links 193/CD/193 class/NN/class linklist/NN/linklist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first link/NN/link on/IN/on list/NN/list public/JJ/public linklist/NN/linklist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null no/DT/no links/NNS/links on/IN/on list/NN/list yet/RB/yet /./} public/JJ/public void/JJ/void insertfirst/NN/insertfirst /:/( int/NN/int id/VBD/id /,/, double/JJ/double dd/NN/dd /:/) /:/{ make/VBP/make new/JJ/new link/NN/link link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( id/JJ/id /,/, dd/JJ/dd /NN/) newlink.next/JJ/newlink.next =/NN/= first/RB/first it/PRP/it points/VBZ/points to/TO/to old/JJ/old first/JJ/first link/NN/link first/RB/first =/./= newlink/NN/newlink now/RB/now first/JJ/first points/NNS/points to/TO/to this/DT/this /NN/} public/NN/public link/NN/link find/NN/find /:/( int/NN/int key/NN/key /:/) find/NN/find link/NN/link with/IN/with given/VBN/given key/JJ/key /NN/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at first/JJ/first while/IN/while /NNP/( current.idata/NNP/current.idata !/./! =/:/= key/JJ/key /NN/) while/IN/while no/DT/no match/NN/match /,/, /:/{ if/IN/if /CD/( current.next/JJ/current.next =/NN/= =/:/= null/NN/null /:/) if/IN/if end/NN/end of/IN/of list/NN/list /,/, return/NN/return null/NN/null didn/NN/didn t/NN/t find/NN/find it/PRP/it else/RB/else not/RB/not end/VB/end of/IN/of list/NN/list /,/, current/JJ/current =/NN/= current.next/JJ/current.next go/NN/go to/TO/to next/JJ/next link/NN/link /:/} return/NN/return current/JJ/current found/NN/found it/PRP/it /:/} public/JJ/public link/NN/link delete/NN/delete /:/( int/NN/int key/NN/key /:/) delete/JJ/delete link/NN/link with/IN/with given/VBN/given key/JJ/key /NN/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) link/NN/link current/JJ/current =/NN/= first/RB/first search/NN/search for/IN/for link/NN/link link/NN/link previous/JJ/previous =/NN/= first/RB/first while/IN/while /CD/( current.idata/NNP/current.idata !/./! =/:/= key/JJ/key /NN/) /:/{ if/IN/if /CD/( current.next/JJ/current.next =/NN/= =/:/= null/NN/null /:/) return/NN/return null/NN/null didn/NN/didn t/NN/t find/NN/find it/PRP/it else/RB/else /:/{ previous/JJ/previous =/NN/= current/JJ/current go/NN/go to/TO/to next/JJ/next link/NN/link 194/CD/194 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.2/CD/5.2 continued/VBN/continued current/JJ/current =/NN/= current.next/JJ/current.next /NN/} /:/} found/NN/found it/PRP/it if/IN/if /CD/( current/JJ/current =/NN/= =/:/= first/JJ/first /NN/) if/IN/if first/JJ/first link/NN/link /,/, first/JJ/first =/NN/= first.next/JJ/first.next change/NN/change first/RB/first else/RB/else otherwise/RB/otherwise /,/, previous.next/JJ/previous.next =/NN/= current.next/JJ/current.next bypass/NN/bypass it/PRP/it return/VBP/return current/JJ/current /NN/} public/JJ/public void/JJ/void displaylist/NN/displaylist /:/( /:/) display/NN/display the/DT/the list/NN/list /:/{ system.out.print/JJ/system.out.print /NN/( list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning of/IN/of list/NN/list while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} /:/} end/NN/end class/NN/class linklist/NN/linklist class/NN/class linklist2app/NNP/linklist2app /NNP/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ linklist/NN/linklist thelist/NN/thelist =/:/= new/JJ/new linklist/NN/linklist /:/( /:/) make/VBP/make list/NN/list thelist.insertfirst/JJ/thelist.insertfirst /NN/( 22/CD/22 /,/, 2.99/CD/2.99 /:/) insert/NN/insert 4/CD/4 items/NNS/items thelist.insertfirst/JJ/thelist.insertfirst /NN/( 44/CD/44 /,/, 4.99/CD/4.99 /:/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 66/CD/66 /,/, 6.99/CD/6.99 /:/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 88/CD/88 /,/, 8.99/CD/8.99 /:/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display list/NN/list link/NN/link f/NN/f =/:/= thelist.find/JJ/thelist.find /NN/( 44/CD/44 /CD/) find/NN/find item/NN/item if/IN/if /CD/( f/NN/f !/./! =/:/= null/NN/null /:/) system.out.println/JJ/system.out.println /NN/( found/VBD/found link/NN/link with/IN/with key/JJ/key +/NN/+ f.idata/NNP/f.idata /NNP/) else/NN/else finding/VBG/finding and/CC/and deleting/VBG/deleting specified/VBN/specified links/NNS/links 195/CD/195 listing/VBG/listing 5.2/CD/5.2 continued/VBN/continued system.out.println/JJ/system.out.println /NN/( can/MD/can t/VB/t find/VB/find link/NN/link /:/) link/NN/link d/NN/d =/:/= thelist.delete/JJ/thelist.delete /NN/( 66/CD/66 /CD/) delete/JJ/delete item/NN/item if/IN/if /CD/( d/NN/d !/./! =/:/= null/NN/null /:/) system.out.println/JJ/system.out.println /NN/( deleted/VBD/deleted link/NN/link with/IN/with key/JJ/key +/NN/+ d.idata/NNP/d.idata /NNP/) else/NN/else system.out.println/-NONE-/system.out.println /./( can/MD/can t/VB/t delete/JJ/delete link/NN/link /:/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display list/NN/list /:/} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class linklist2app/NNP/linklist2app the/DT/the main/JJ/main /NN/( /:/) routine/NN/routine makes/VBZ/makes a/DT/a list/NN/list /,/, inserts/NNS/inserts four/CD/four items/NNS/items /,/, and/CC/and displays/NNS/displays the/DT/the resulting/VBG/resulting list/NNP/list. it/PRP/it then/RB/then searches/VBZ/searches for/IN/for the/DT/the item/NN/item with/IN/with key/JJ/key 44/CD/44 /,/, deletes/VBZ/deletes the/DT/the item/NN/item with/IN/with key/JJ/key 66/CD/66 /,/, and/CC/and displays/NNS/displays the/DT/the list/NN/list again/NNP/again. here/RB/here s/VBZ/s the/DT/the output/NN/output list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/{ 88/CD/88 /,/, 8.99/CD/8.99 /:/} /CD/{ 66/CD/66 /,/, 6.99/CD/6.99 /:/} /CD/{ 44/CD/44 /,/, 4.99/CD/4.99 /:/} /CD/{ 22/CD/22 /,/, 2.99/CD/2.99 /:/} found/NN/found link/NN/link with/IN/with key/JJ/key 44/CD/44 deleted/VBN/deleted link/NN/link with/IN/with key/JJ/key 66/CD/66 list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/{ 88/CD/88 /,/, 8.99/CD/8.99 /:/} /CD/{ 44/CD/44 /,/, 4.99/CD/4.99 /:/} /CD/{ 22/CD/22 /,/, 2.99/CD/2.99 /:/} the/DT/the find/NN/find /:/( /:/) method/NN/method the/DT/the find/NN/find /:/( /:/) method/NN/method works/NNS/works much/RB/much like/IN/like the/DT/the displaylist/NN/displaylist /:/( /:/) method/NN/method in/IN/in the/DT/the linklist.java/NNP/linklist.java program/NNP/program. the/DT/the reference/NN/reference current/JJ/current initially/RB/initially points/VBZ/points to/TO/to first/RB/first and/CC/and then/RB/then steps/VBZ/steps its/PRP$/its way/NN/way along/IN/along the/DT/the links/NNS/links by/IN/by setting/VBG/setting itself/PRP/itself repeatedly/RB/repeatedly to/TO/to current.next/NNP/current.next. at/IN/at each/DT/each link/NN/link /,/, find/VBP/find /:/( /:/) checks/NNS/checks whether/IN/whether that/DT/that link/NN/link s/VBZ/s key/JJ/key is/VBZ/is the/DT/the one/CD/one it/PRP/it s/VBZ/s looking/VBG/looking for/NNP/for. if/IN/if the/DT/the key/JJ/key is/VBZ/is found/VBN/found /,/, it/PRP/it returns/VBZ/returns with/IN/with a/DT/a reference/NN/reference to/TO/to that/DT/that link/NNP/link. if/IN/if find/NN/find /:/( /:/) reaches/NNS/reaches the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list without/IN/without finding/NN/finding the/DT/the desired/VBN/desired link/NN/link /,/, it/PRP/it returns/VBZ/returns null/NNP/null. the/DT/the delete/JJ/delete /NN/( /:/) method/NN/method the/DT/the delete/JJ/delete /NN/( /:/) method/NN/method is/VBZ/is similar/JJ/similar to/TO/to find/VB/find /:/( /:/) in/IN/in the/DT/the way/NN/way it/PRP/it searches/VBZ/searches for/IN/for the/DT/the link/NN/link to/TO/to be/VB/be deleted/NNP/deleted. however/RB/however /,/, it/PRP/it needs/VBZ/needs to/TO/to maintain/VB/maintain a/DT/a reference/NN/reference not/RB/not only/RB/only to/TO/to the/DT/the current/JJ/current link/NN/link /:/( current/JJ/current /NN/) /,/, but/CC/but to/TO/to the/DT/the link/NN/link preceding/VBG/preceding the/DT/the current/JJ/current link/NN/link /:/( previous/JJ/previous /NN/) /./. it/PRP/it does/VBZ/does so/RB/so because/IN/because /,/, if/IN/if it/PRP/it deletes/VBZ/deletes the/DT/the current/JJ/current link/NN/link /,/, it/PRP/it must/MD/must connect/VB/connect the/DT/the preceding/NN/preceding link/NN/link to/TO/to the/DT/the following/VBG/following link/NN/link /,/, as/IN/as shown/NN/shown in/IN/in figure/NN/figure 5.8/CD/5.8. the/DT/the only/JJ/only way/NN/way to/TO/to tell/VB/tell where/WRB/where the/DT/the preceding/NN/preceding link/NN/link is/VBZ/is located/VBN/located is/VBZ/is to/TO/to maintain/VB/maintain a/DT/a reference/NN/reference to/TO/to it/NNP/it. 196/CD/196 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.2/CD/5.2 continued/VBN/continued figure/NN/figure 5.8/CD/5.8 deleting/VBG/deleting a/DT/a specified/VBN/specified link/NNP/link. at/IN/at each/DT/each cycle/NN/cycle through/IN/through the/DT/the while/NN/while loop/NN/loop /,/, just/RB/just before/IN/before current/JJ/current is/VBZ/is set/VBN/set to/TO/to current.next/JJ/current.next /,/, previous/JJ/previous is/VBZ/is set/VBN/set to/TO/to current/NNP/current. this/DT/this keeps/VBZ/keeps it/PRP/it pointing/VBG/pointing at/IN/at the/DT/the link/NN/link preceding/VBG/preceding current/NNP/current. to/TO/to delete/VB/delete the/DT/the current/JJ/current link/NN/link once/RB/once it/PRP/it s/VBZ/s found/VBN/found /,/, the/DT/the next/JJ/next field/NN/field of/IN/of the/DT/the previous/JJ/previous link/NN/link is/VBZ/is set/VBN/set to/TO/to the/DT/the next/JJ/next link/NNP/link. a/DT/a special/JJ/special case/NN/case arises/NNS/arises if/IN/if the/DT/the current/JJ/current link/NN/link is/VBZ/is the/DT/the first/JJ/first link/NN/link because/IN/because the/DT/the first/JJ/first link/NN/link is/VBZ/is pointed/VBN/pointed to/TO/to by/IN/by the/DT/the linklist/NN/linklist s/VBZ/s first/JJ/first field/NN/field and/CC/and not/RB/not by/IN/by another/DT/another link/NNP/link. in/IN/in this/DT/this case/NN/case the/DT/the link/NN/link is/VBZ/is deleted/VBN/deleted by/IN/by changing/NN/changing first/RB/first to/TO/to point/VB/point to/TO/to first.next/JJ/first.next /,/, as/IN/as we/PRP/we saw/VBD/saw in/IN/in the/DT/the linklist.java/NNP/linklist.java program/NN/program with/IN/with the/DT/the deletefirst/JJ/deletefirst /NN/( /:/) method/NNP/method. here/RB/here s/VBZ/s the/DT/the code/NN/code that/IN/that covers/NNS/covers these/DT/these two/CD/two possibilities/NNS/possibilities found/VBD/found it/PRP/it if/IN/if /CD/( current/JJ/current =/NN/= =/:/= first/JJ/first /NN/) if/IN/if first/JJ/first link/NN/link /,/, first/JJ/first =/NN/= first.next/JJ/first.next change/NN/change first/RB/first else/RB/else otherwise/RB/otherwise /,/, previous.next/JJ/previous.next =/NN/= current.next/JJ/current.next bypass/NN/bypass link/NN/link other/JJ/other methods/NNS/methods we/PRP/we ve/VBP/ve seen/VBN/seen methods/NNS/methods to/TO/to insert/VB/insert and/CC/and delete/VB/delete items/NNS/items at/IN/at the/DT/the start/NN/start of/IN/of a/DT/a list/NN/list /,/, and/CC/and to/TO/to find/VB/find a/DT/a specified/VBN/specified item/NN/item and/CC/and delete/JJ/delete a/DT/a specified/VBN/specified item/NNP/item. you/PRP/you can/MD/can imagine/VB/imagine other/JJ/other useful/JJ/useful list/NN/list methods/NNP/methods. for/IN/for example/NN/example /,/, an/DT/an insertafter/NN/insertafter /:/( /:/) method/NN/method could/MD/could find/VB/find a/DT/a link/NN/link with/IN/with a/DT/a specified/VBN/specified key/JJ/key value/NN/value and/CC/and insert/NN/insert a/DT/a new/JJ/new link/NN/link following/VBG/following it/NNP/it. we/PRP/we ll/VBP/ll see/VBP/see such/JJ/such a/DT/a method/NN/method when/WRB/when we/PRP/we talk/VBP/talk about/IN/about list/NN/list iterators/NNS/iterators at/IN/at the/DT/the end/NN/end of/IN/of this/DT/this chapter/NNP/chapter. finding/NN/finding and/CC/and deleting/VBG/deleting specified/VBN/specified links/NNS/links 197/CD/197 a/DT/a /NN/) before/IN/before deletion/NN/deletion b/NN/b /:/) after/IN/after deletion/NN/deletion first/RB/first next/JJ/next next/JJ/next next/JJ/next previous/JJ/previous current/JJ/current next/JJ/next null/NN/null first/RB/first null/JJ/null previous/JJ/previous current/JJ/current 17/CD/17 44/CD/44 98/CD/98 73/CD/73 17/CD/17 44/CD/44 73/CD/73 next/JJ/next next/JJ/next next/JJ/next 17/CD/17 44/CD/44 98/CD/98 17/CD/17 73/CD/73 double/JJ/double ended/JJ/ended lists/NNS/lists a/DT/a double/JJ/double ended/VBN/ended list/NN/list is/VBZ/is similar/JJ/similar to/TO/to an/DT/an ordinary/JJ/ordinary linked/VBN/linked list/NN/list /,/, but/CC/but it/PRP/it has/VBZ/has one/CD/one additional/JJ/additional feature/NN/feature a/DT/a reference/NN/reference to/TO/to the/DT/the last/JJ/last link/NN/link as/IN/as well/RB/well as/IN/as to/TO/to the/DT/the first/NNP/first. figure/NN/figure 5.9/CD/5.9 shows/NNS/shows such/JJ/such a/DT/a list/NNP/list. 198/CD/198 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists first/RB/first last/JJ/last next/JJ/next next/JJ/next next/JJ/next next/JJ/next null/NN/null figure/NN/figure 5.9/CD/5.9 a/DT/a double/JJ/double ended/VBN/ended list/NNP/list. the/DT/the reference/NN/reference to/TO/to the/DT/the last/JJ/last link/NN/link permits/NNS/permits you/PRP/you to/TO/to insert/VB/insert a/DT/a new/JJ/new link/NN/link directly/RB/directly at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list as/IN/as well/RB/well as/IN/as at/IN/at the/DT/the beginning/NNP/beginning. of/IN/of course/NN/course /,/, you/PRP/you can/MD/can insert/VB/insert a/DT/a new/JJ/new link/NN/link at/IN/at the/DT/the end/NN/end of/IN/of an/DT/an ordinary/JJ/ordinary single/JJ/single ended/JJ/ended list/NN/list by/IN/by iterating/NN/iterating through/IN/through the/DT/the entire/JJ/entire list/NN/list until/IN/until you/PRP/you reach/VBP/reach the/DT/the end/NN/end /,/, but/CC/but this/DT/this approach/NN/approach is/VBZ/is inefficient/NNP/inefficient. access/NN/access to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list as/IN/as well/RB/well as/IN/as the/DT/the beginning/NN/beginning makes/VBZ/makes the/DT/the double/JJ/double ended/VBD/ended list/NN/list suitable/JJ/suitable for/IN/for certain/JJ/certain situations/NNS/situations that/WDT/that a/DT/a single/JJ/single ended/VBN/ended list/NN/list can/MD/can t/VB/t handle/JJ/handle efficiently/NNP/efficiently. one/CD/one such/JJ/such situation/NN/situation is/VBZ/is implementing/VBG/implementing a/DT/a queue/NN/queue we/PRP/we ll/VBP/ll see/VBP/see how/WRB/how this/DT/this technique/NN/technique works/VBZ/works in/IN/in the/DT/the next/JJ/next section/NNP/section. listing/NN/listing 5.3/CD/5.3 contains/NNS/contains the/DT/the firstlastlist.java/NNP/firstlastlist.java program/NN/program /,/, which/WDT/which demonstrates/VBZ/demonstrates a/DT/a doubleended/VBN/doubleended list/NNP/list. /NNP/( incidentally/RB/incidentally /,/, don/NN/don t/NN/t confuse/NN/confuse the/DT/the double/JJ/double ended/VBD/ended list/NN/list with/IN/with the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list /,/, which/WDT/which we/PRP/we ll/VBP/ll explore/RB/explore later/JJ/later in/IN/in this/DT/this chapter/NNP/chapter. /NNP/) listing/NN/listing 5.3/CD/5.3 the/DT/the firstlastlist.java/NNP/firstlastlist.java program/NN/program firstlastlist.java/NN/firstlastlist.java demonstrates/VBZ/demonstrates list/NN/list with/IN/with first/JJ/first and/CC/and last/JJ/last references/NNS/references to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java firstlastapp/NN/firstlastapp class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( long/JJ/long d/NN/d /:/) constructor/NN/constructor /:/{ ddata/NN/ddata =/:/= d/NN/d /:/} public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display this/DT/this link/NN/link /:/{ system.out.print/JJ/system.out.print /NN/( ddata/NN/ddata +/:/+ /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link class/NN/class firstlastlist/NN/firstlastlist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first link/NN/link private/JJ/private link/NN/link last/JJ/last ref/NN/ref to/TO/to last/JJ/last link/NN/link public/JJ/public firstlastlist/NN/firstlastlist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null no/DT/no links/NNS/links on/IN/on list/NN/list yet/RB/yet last/JJ/last =/NN/= null/NN/null /:/} public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if no/DT/no links/NNS/links /VBP/{ return/NN/return first/RB/first =/./= =/:/= null/NN/null /:/} public/JJ/public void/JJ/void insertfirst/NN/insertfirst /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert at/IN/at front/NN/front of/IN/of list/NN/list /:/{ link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) make/VB/make new/JJ/new link/NN/link if/IN/if /CD/( isempty/NN/isempty /:/( /:/) /:/) if/IN/if empty/JJ/empty list/NN/list /,/, last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last newlink.next/JJ/newlink.next =/NN/= first/RB/first newlink/VBP/newlink old/JJ/old first/JJ/first first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink /:/} public/JJ/public void/JJ/void insertlast/NN/insertlast /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert at/IN/at end/NN/end of/IN/of list/NN/list /:/{ link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) make/VB/make new/JJ/new link/NN/link if/IN/if /CD/( isempty/NN/isempty /:/( /:/) /:/) if/IN/if empty/JJ/empty list/NN/list /,/, first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink else/RB/else last.next/JJ/last.next =/NN/= newlink/NN/newlink old/JJ/old last/JJ/last newlink/NN/newlink last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last /NN/} public/JJ/public long/JJ/long deletefirst/NN/deletefirst /:/( /:/) delete/JJ/delete first/JJ/first link/NN/link /:/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) long/JJ/long temp/NN/temp =/:/= first.ddata/NNP/first.ddata if/IN/if /NNP/( first.next/JJ/first.next =/NN/= =/:/= null/NN/null /:/) if/IN/if only/RB/only one/CD/one item/NN/item double/JJ/double ended/VBD/ended lists/NNS/lists 199/CD/199 listing/VBG/listing 5.3/CD/5.3 continued/VBN/continued last/JJ/last =/NN/= null/NN/null null/NN/null last/JJ/last first/JJ/first =/NN/= first.next/JJ/first.next first/JJ/first old/JJ/old next/JJ/next return/NN/return temp/NN/temp /:/} public/JJ/public void/JJ/void displaylist/NN/displaylist /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} /:/} end/NN/end class/NN/class firstlastlist/NN/firstlastlist class/NN/class firstlastapp/NN/firstlastapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ make/VB/make a/DT/a new/JJ/new list/NN/list firstlastlist/NN/firstlastlist thelist/NN/thelist =/:/= new/JJ/new firstlastlist/NN/firstlastlist /:/( /:/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 22/CD/22 /CD/) insert/NN/insert at/IN/at front/NN/front thelist.insertfirst/JJ/thelist.insertfirst /NN/( 44/CD/44 /CD/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 66/CD/66 /CD/) thelist.insertlast/JJ/thelist.insertlast /NN/( 11/CD/11 /CD/) insert/NN/insert at/IN/at rear/JJ/rear thelist.insertlast/JJ/thelist.insertlast /NN/( 33/CD/33 /CD/) thelist.insertlast/JJ/thelist.insertlast /NN/( 55/CD/55 /CD/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display the/DT/the list/NN/list thelist.deletefirst/JJ/thelist.deletefirst /NN/( /:/) delete/JJ/delete first/JJ/first two/CD/two items/NNS/items thelist.deletefirst/JJ/thelist.deletefirst /NN/( /:/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display again/RB/again /./} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class firstlastapp/NN/firstlastapp 200/CD/200 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.3/CD/5.3 continued/VBN/continued for/IN/for simplicity/NN/simplicity /,/, in/IN/in this/DT/this program/NN/program we/PRP/we ve/VBP/ve reduced/VBN/reduced the/DT/the number/NN/number of/IN/of data/NNS/data items/NNS/items in/IN/in each/DT/each link/NN/link from/IN/from two/CD/two to/TO/to one/NNP/one. this/DT/this makes/VBZ/makes it/PRP/it easier/JJR/easier to/TO/to display/VB/display the/DT/the link/NN/link contents/NNP/contents. /NNP/( remember/NN/remember that/WDT/that in/IN/in a/DT/a serious/JJ/serious program/NN/program there/EX/there would/MD/would be/VB/be many/JJ/many more/JJR/more data/NNS/data items/NNS/items /,/, or/CC/or a/DT/a reference/NN/reference to/TO/to another/DT/another object/NN/object containing/VBG/containing many/JJ/many data/NNS/data items/NNP/items. /NNP/) this/DT/this program/NN/program inserts/NNS/inserts three/CD/three items/NNS/items at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the list/NN/list /,/, inserts/NNS/inserts three/CD/three more/JJR/more at/IN/at the/DT/the end/NN/end /,/, and/CC/and displays/NNS/displays the/DT/the resulting/VBG/resulting list/NNP/list. it/PRP/it then/RB/then deletes/VBZ/deletes the/DT/the first/JJ/first two/CD/two items/NNS/items and/CC/and displays/NNS/displays the/DT/the list/NN/list again/NNP/again. here/RB/here s/VBZ/s the/DT/the output/NN/output list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 66/CD/66 44/CD/44 22/CD/22 11/CD/11 33/CD/33 55/CD/55 list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 22/CD/22 11/CD/11 33/CD/33 55/CD/55 notice/NN/notice how/WRB/how repeated/VBN/repeated insertions/NNS/insertions at/IN/at the/DT/the front/NN/front of/IN/of the/DT/the list/NN/list reverse/NN/reverse the/DT/the order/NN/order of/IN/of the/DT/the items/NNS/items /,/, while/IN/while repeated/VBN/repeated insertions/NNS/insertions at/IN/at the/DT/the end/NN/end preserve/NN/preserve the/DT/the order/NNP/order. the/DT/the double/JJ/double ended/VBD/ended list/NN/list class/NN/class is/VBZ/is called/VBN/called the/DT/the firstlastlist/NNP/firstlastlist. as/IN/as discussed/VBN/discussed /,/, it/PRP/it has/VBZ/has two/CD/two data/NNS/data items/NNS/items /,/, first/JJ/first and/CC/and last/JJ/last /,/, which/WDT/which point/NN/point to/TO/to the/DT/the first/JJ/first item/NN/item and/CC/and the/DT/the last/JJ/last item/NN/item in/IN/in the/DT/the list/NNP/list. if/IN/if there/EX/there is/VBZ/is only/RB/only one/CD/one item/NN/item in/IN/in the/DT/the list/NN/list /,/, both/DT/both first/JJ/first and/CC/and last/JJ/last point/NN/point to/TO/to it/PRP/it /,/, and/CC/and if/IN/if there/EX/there are/VBP/are no/DT/no items/NNS/items /,/, they/PRP/they are/VBP/are both/DT/both null/NNP/null. the/DT/the class/NN/class has/VBZ/has a/DT/a new/JJ/new method/NN/method /,/, insertlast/JJ/insertlast /NN/( /:/) /,/, that/IN/that inserts/NNS/inserts a/DT/a new/JJ/new item/NN/item at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NNP/list. this/DT/this process/NN/process involves/VBZ/involves modifying/VBG/modifying last.next/JJ/last.next to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NN/link and/CC/and then/RB/then changing/VBG/changing last/JJ/last to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NN/link /,/, as/IN/as shown/NN/shown in/IN/in figure/NN/figure 5.10/CD/5.10. double/JJ/double ended/JJ/ended lists/NNS/lists 201/CD/201 first/JJ/first last/JJ/last first/RB/first next/JJ/next next/JJ/next next/JJ/next next/JJ/next null/NN/null a/DT/a /NN/) before/IN/before insertion/NN/insertion first/RB/first last/JJ/last next/JJ/next next/JJ/next next/JJ/next next/JJ/next null/NN/null b/NN/b /:/) after/IN/after insertion/NN/insertion figure/NN/figure 5.10/CD/5.10 insertion/NN/insertion at/IN/at the/DT/the end/NN/end of/IN/of a/DT/a list/NNP/list. the/DT/the insertion/NN/insertion and/CC/and deletion/NN/deletion routines/NNS/routines are/VBP/are similar/JJ/similar to/TO/to those/DT/those in/IN/in a/DT/a single/JJ/single ended/VBN/ended list/NNP/list. however/RB/however /,/, both/DT/both insertion/NN/insertion routines/NNS/routines must/MD/must watch/VB/watch out/RP/out for/IN/for the/DT/the special/JJ/special case/NN/case when/WRB/when the/DT/the list/NN/list is/VBZ/is empty/JJ/empty prior/RB/prior to/TO/to the/DT/the insertion/NNP/insertion. that/IN/that is/VBZ/is /,/, if/IN/if isempty/NN/isempty /:/( /:/) is/VBZ/is true/JJ/true /,/, then/RB/then insertfirst/JJ/insertfirst /NN/( /:/) must/MD/must set/VB/set last/JJ/last to/TO/to the/DT/the new/JJ/new link/NN/link /,/, and/CC/and insertlast/JJ/insertlast /NN/( /:/) must/MD/must set/VB/set first/JJ/first to/TO/to the/DT/the new/JJ/new link/NNP/link. if/IN/if inserting/VBG/inserting at/IN/at the/DT/the beginning/NN/beginning with/IN/with insertfirst/JJ/insertfirst /NN/( /:/) /,/, first/JJ/first is/VBZ/is set/VBN/set to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NN/link /,/, although/IN/although when/WRB/when inserting/VBG/inserting at/IN/at the/DT/the end/NN/end with/IN/with insertlast/JJ/insertlast /NN/( /:/) /,/, last/JJ/last is/VBZ/is set/VBN/set to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NNP/link. deleting/NN/deleting from/IN/from the/DT/the start/NN/start of/IN/of the/DT/the list/NN/list is/VBZ/is also/RB/also a/DT/a special/JJ/special case/NN/case if/IN/if it/PRP/it s/VBZ/s the/DT/the last/JJ/last item/NN/item on/IN/on the/DT/the list/NN/list last/JJ/last must/MD/must be/VB/be set/VBN/set to/TO/to point/NN/point to/TO/to null/VB/null in/IN/in this/DT/this case/NNP/case. unfortunately/RB/unfortunately /,/, making/VBG/making a/DT/a list/NN/list double/JJ/double ended/VBD/ended doesn/NN/doesn t/NN/t help/NN/help you/PRP/you to/TO/to delete/VB/delete the/DT/the last/JJ/last link/NN/link because/IN/because there/EX/there is/VBZ/is still/RB/still no/DT/no reference/NN/reference to/TO/to the/DT/the next/JJ/next to/TO/to last/JJ/last link/NN/link /,/, whose/WP$/whose next/JJ/next field/NN/field would/MD/would need/VB/need to/TO/to be/VB/be changed/VBN/changed to/TO/to null/VB/null if/IN/if the/DT/the last/JJ/last link/NN/link were/VBD/were deleted/NNP/deleted. to/TO/to conveniently/RB/conveniently delete/JJ/delete the/DT/the last/JJ/last link/NN/link /,/, you/PRP/you would/MD/would need/VB/need a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list /,/, which/WDT/which we/PRP/we ll/VBP/ll look/VBP/look at/IN/at soon/NNP/soon. /NNP/( of/IN/of course/NN/course /,/, you/PRP/you could/MD/could also/RB/also traverse/VB/traverse the/DT/the entire/JJ/entire list/NN/list to/TO/to find/VB/find the/DT/the last/JJ/last link/NN/link /,/, but/CC/but that/IN/that s/NNS/s not/RB/not very/RB/very efficient/NNP/efficient. /:/) linked/VBD/linked list/NN/list efficiency/NN/efficiency insertion/NN/insertion and/CC/and deletion/NN/deletion at/IN/at the/DT/the beginning/NN/beginning of/IN/of a/DT/a linked/VBN/linked list/NN/list are/VBP/are very/RB/very fast/NNP/fast. they/PRP/they involve/VBP/involve changing/VBG/changing only/RB/only one/CD/one or/CC/or two/CD/two references/NNS/references /,/, which/WDT/which takes/VBZ/takes o/RB/o /:/( 1/CD/1 /CD/) time/NNP/time. finding/NN/finding /,/, deleting/VBG/deleting /,/, or/CC/or inserting/VBG/inserting next/JJ/next to/TO/to a/DT/a specific/JJ/specific item/NN/item requires/VBZ/requires searching/VBG/searching through/IN/through /,/, on/IN/on the/DT/the average/NN/average /,/, half/DT/half the/DT/the items/NNS/items in/IN/in the/DT/the list/NNP/list. this/DT/this requires/VBZ/requires o/NN/o /:/( n/NN/n /:/) comparisons/NNP/comparisons. an/DT/an array/NN/array is/VBZ/is also/RB/also o/RB/o /:/( n/NN/n /:/) for/IN/for these/DT/these operations/NNS/operations /,/, but/CC/but the/DT/the linked/VBN/linked list/NN/list is/VBZ/is nevertheless/NN/nevertheless faster/NN/faster because/IN/because nothing/NN/nothing needs/VBZ/needs to/TO/to be/VB/be moved/VBN/moved when/WRB/when an/DT/an item/NN/item is/VBZ/is inserted/VBN/inserted or/CC/or deleted/NNP/deleted. the/DT/the increased/VBN/increased efficiency/NN/efficiency can/MD/can be/VB/be significant/JJ/significant /,/, especially/RB/especially if/IN/if a/DT/a copy/NN/copy takes/VBZ/takes much/RB/much longer/JJR/longer than/IN/than a/DT/a comparison/NNP/comparison. of/IN/of course/NN/course /,/, another/DT/another important/JJ/important advantage/NN/advantage of/IN/of linked/VBN/linked lists/NNS/lists over/IN/over arrays/NNS/arrays is/VBZ/is that/IN/that a/DT/a linked/VBN/linked list/NN/list uses/NNS/uses exactly/RB/exactly as/IN/as much/JJ/much memory/NN/memory as/IN/as it/PRP/it needs/VBZ/needs and/CC/and can/MD/can expand/VB/expand to/TO/to fill/VB/fill all/DT/all of/IN/of available/JJ/available memory/NNP/memory. the/DT/the size/NN/size of/IN/of an/DT/an array/NN/array is/VBZ/is fixed/VBN/fixed when/WRB/when it/PRP/it s/VBZ/s created/VBN/created this/DT/this usually/RB/usually leads/VBZ/leads to/TO/to inefficiency/NN/inefficiency because/IN/because the/DT/the array/NN/array is/VBZ/is too/RB/too large/JJ/large /,/, or/CC/or to/TO/to running/VBG/running out/RP/out of/IN/of room/NN/room because/IN/because the/DT/the array/NN/array is/VBZ/is too/RB/too small/NNP/small. vectors/NNS/vectors /,/, which/WDT/which are/VBP/are expandable/JJ/expandable arrays/NNS/arrays /,/, may/MD/may solve/VB/solve this/DT/this problem/NN/problem to/TO/to some/DT/some extent/NN/extent /,/, but/CC/but they/PRP/they usually/RB/usually expand/VBP/expand in/IN/in fixed/VBN/fixed sized/VBN/sized increments/NNS/increments /:/( such/JJ/such as/IN/as doubling/NN/doubling the/DT/the size/NN/size of/IN/of the/DT/the array/NN/array whenever/NN/whenever it/PRP/it s/VBZ/s about/IN/about to/TO/to overflow/VB/overflow /:/) /./. this/DT/this solution/NN/solution is/VBZ/is still/RB/still not/RB/not as/IN/as efficient/JJ/efficient a/DT/a use/NN/use of/IN/of memory/NN/memory as/IN/as a/DT/a linked/VBN/linked list/NNP/list. abstract/NN/abstract data/NNS/data types/NNS/types in/IN/in this/DT/this section/NN/section we/PRP/we ll/VBP/ll shift/NN/shift gears/NNS/gears and/CC/and discuss/NNS/discuss a/DT/a topic/JJ/topic that/IN/that s/NNS/s more/RBR/more general/JJ/general than/IN/than linked/VBN/linked lists/NNS/lists abstract/VBP/abstract data/NNS/data types/NNS/types /VBP/( adts/NNS/adts /:/) /./. what/WP/what is/VBZ/is an/DT/an adt/NN/adt roughly/RB/roughly speaking/VBG/speaking /,/, it/PRP/it s/VBZ/s a/DT/a way/NN/way of/IN/of looking/VBG/looking at/IN/at a/DT/a data/NN/data structure/NN/structure focusing/VBG/focusing on/IN/on what/WP/what it/PRP/it does/VBZ/does and/CC/and ignoring/VBG/ignoring how/WRB/how it/PRP/it does/VBZ/does its/PRP$/its job/NNP/job. 202/CD/202 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists stacks/NNS/stacks and/CC/and queues/NNS/queues are/VBP/are examples/NNS/examples of/IN/of adts/NNP/adts. we/PRP/we ve/VBP/ve already/RB/already seen/VBN/seen that/IN/that both/DT/both stacks/NNS/stacks and/CC/and queues/NNS/queues can/MD/can be/VB/be implemented/VBN/implemented using/VBG/using arrays/NNP/arrays. before/IN/before we/PRP/we return/VBP/return to/TO/to a/DT/a discussion/NN/discussion of/IN/of adts/NNS/adts /,/, let/VB/let s/NNS/s see/VB/see how/WRB/how stacks/NNS/stacks and/CC/and queues/NNS/queues can/MD/can be/VB/be implemented/VBN/implemented using/VBG/using linked/VBN/linked lists/NNP/lists. this/DT/this discussion/NN/discussion will/MD/will demonstrate/VB/demonstrate the/DT/the abstract/NN/abstract nature/NN/nature of/IN/of stacks/NNS/stacks and/CC/and queues/NNS/queues how/WRB/how they/PRP/they can/MD/can be/VB/be considered/VBN/considered separately/RB/separately from/IN/from their/PRP$/their implementation/NNP/implementation. a/DT/a stack/NN/stack implemented/VBN/implemented by/IN/by a/DT/a linked/VBN/linked list/NN/list when/WRB/when we/PRP/we created/VBD/created a/DT/a stack/NN/stack in/IN/in chapter/NN/chapter 4/CD/4 /,/, stacks/NNS/stacks and/CC/and queues/NNS/queues /,/, we/PRP/we used/VBD/used an/DT/an ordinary/JJ/ordinary java/NN/java array/NN/array to/TO/to hold/VB/hold the/DT/the stack/NN/stack s/VBZ/s data/NNP/data. the/DT/the stack/NN/stack s/VBZ/s push/JJ/push /NN/( /:/) and/CC/and pop/VB/pop /:/( /:/) operations/NNS/operations were/VBD/were actually/RB/actually carried/VBN/carried out/RP/out by/IN/by array/NN/array operations/NNS/operations such/JJ/such as/IN/as arr/NN/arr /:/[ +/:/+ +/:/+ top/JJ/top /NN/] =/:/= data/NNS/data and/CC/and data/NNS/data =/:/= arr/NN/arr /:/[ top/JJ/top /NN/] which/WDT/which insert/NN/insert data/NNS/data into/IN/into /,/, and/CC/and take/VB/take it/PRP/it out/RP/out of/IN/of /,/, an/DT/an array/NNP/array. we/PRP/we can/MD/can also/RB/also use/VB/use a/DT/a linked/VBN/linked list/NN/list to/TO/to hold/VB/hold a/DT/a stack/NN/stack s/VBZ/s data/NNP/data. in/IN/in this/DT/this case/NN/case the/DT/the push/NN/push /:/( /:/) and/CC/and pop/VB/pop /:/( /:/) operations/NNS/operations would/MD/would be/VB/be carried/VBN/carried out/RP/out by/IN/by operations/NNS/operations like/IN/like thelist.insertfirst/JJ/thelist.insertfirst /NN/( data/NNS/data /:/) and/CC/and data/NNS/data =/:/= thelist.deletefirst/JJ/thelist.deletefirst /NN/( /:/) the/DT/the user/NN/user of/IN/of the/DT/the stack/NN/stack class/NN/class calls/VBZ/calls push/JJ/push /NN/( /:/) and/CC/and pop/VB/pop /:/( /:/) to/TO/to insert/VB/insert and/CC/and delete/VB/delete items/NNS/items without/IN/without knowing/VBG/knowing /,/, or/CC/or needing/VBG/needing to/TO/to know/VB/know /,/, whether/IN/whether the/DT/the stack/NN/stack is/VBZ/is implemented/VBN/implemented as/RB/as an/DT/an array/NN/array or/CC/or as/IN/as a/DT/a linked/VBN/linked list/NNP/list. listing/NN/listing 5.4/CD/5.4 shows/NNS/shows how/WRB/how a/DT/a stack/NN/stack class/NN/class called/VBN/called linkstack/NN/linkstack can/MD/can be/VB/be implemented/VBN/implemented using/VBG/using the/DT/the linklist/NN/linklist class/NN/class instead/RB/instead of/IN/of an/DT/an array/NNP/array. /NNP/( object/NN/object purists/NNS/purists would/MD/would argue/VB/argue that/IN/that the/DT/the name/NN/name linkstack/NN/linkstack should/MD/should be/VB/be simply/RB/simply stack/VB/stack because/IN/because users/NNS/users of/IN/of this/DT/this class/NN/class shouldn/NN/shouldn t/NN/t need/VBP/need to/TO/to know/VB/know that/IN/that it/PRP/it s/VBZ/s implemented/VBN/implemented as/IN/as a/DT/a list/NNP/list. /NNP/) listing/NN/listing 5.4/CD/5.4 the/DT/the linkstack.java/NNP/linkstack.java program/NN/program linkstack.java/NN/linkstack.java demonstrates/VBZ/demonstrates a/DT/a stack/NN/stack implemented/VBN/implemented as/IN/as a/DT/a list/NN/list to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java linkstackapp/NN/linkstackapp class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list abstract/NN/abstract data/NNS/data types/NNS/types 203/CD/203 public/JJ/public link/NN/link /:/( long/JJ/long dd/NN/dd /:/) constructor/NN/constructor /:/{ ddata/NN/ddata =/:/= dd/NN/dd /:/} public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display ourself/PRP/ourself /:/{ system.out.print/JJ/system.out.print /NN/( ddata/NN/ddata +/:/+ /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link class/NN/class linklist/NN/linklist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first item/NN/item on/IN/on list/NN/list public/JJ/public linklist/NN/linklist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null /:/} no/DT/no items/NNS/items on/IN/on list/NN/list yet/RB/yet public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if list/NN/list is/VBZ/is empty/JJ/empty /NN/{ return/NN/return /:/( first/JJ/first =/NN/= =/:/= null/NN/null /:/) /:/} public/JJ/public void/JJ/void insertfirst/NN/insertfirst /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert at/IN/at start/NN/start of/IN/of list/NN/list /:/{ make/VB/make new/JJ/new link/NN/link link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) newlink.next/JJ/newlink.next =/NN/= first/RB/first newlink/VBP/newlink old/JJ/old first/JJ/first first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink /:/} public/JJ/public long/JJ/long deletefirst/NN/deletefirst /:/( /:/) delete/JJ/delete first/JJ/first item/NN/item /:/{ /:/( assumes/NNS/assumes list/VBP/list not/RB/not empty/JJ/empty /NN/) link/NN/link temp/NN/temp =/:/= first/JJ/first save/NN/save reference/NN/reference to/TO/to link/VB/link first/RB/first =/./= first.next/JJ/first.next delete/NN/delete it/PRP/it first/RB/first old/JJ/old next/JJ/next return/NN/return temp.ddata/NN/temp.ddata return/NN/return deleted/VBD/deleted link/NN/link /:/} public/JJ/public void/JJ/void displaylist/NN/displaylist /:/( /:/) /:/{ link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning of/IN/of list/NN/list while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) 204/CD/204 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.4/CD/5.4 continued/VBN/continued /-NONE-/} /:/} end/NN/end class/NN/class linklist/NN/linklist class/NN/class linkstack/NN/linkstack /:/{ private/JJ/private linklist/NN/linklist thelist/NN/thelist public/JJ/public linkstack/NN/linkstack /:/( /:/) constructor/NN/constructor /:/{ thelist/NN/thelist =/:/= new/JJ/new linklist/NN/linklist /:/( /:/) /:/} public/JJ/public void/JJ/void push/NN/push /:/( long/JJ/long j/NN/j /:/) put/VBD/put item/NN/item on/IN/on top/JJ/top of/IN/of stack/NN/stack /:/{ thelist.insertfirst/JJ/thelist.insertfirst /NN/( j/NN/j /:/) /:/} public/JJ/public long/JJ/long pop/NN/pop /:/( /:/) take/VB/take item/NN/item from/IN/from top/JJ/top of/IN/of stack/NN/stack /:/{ return/NN/return thelist.deletefirst/JJ/thelist.deletefirst /NN/( /:/) /:/} public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if stack/NN/stack is/VBZ/is empty/JJ/empty /NN/{ return/NN/return /:/( thelist.isempty/JJ/thelist.isempty /NN/( /:/) /:/) /:/} public/JJ/public void/JJ/void displaystack/NN/displaystack /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( stack/NN/stack /:/( top/JJ/top bottom/NN/bottom /:/) /:/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) /:/} /:/} end/NN/end class/NN/class linkstack/NN/linkstack class/NN/class linkstackapp/NN/linkstackapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ linkstack/NN/linkstack thestack/NN/thestack =/:/= new/JJ/new linkstack/NN/linkstack /:/( /:/) make/VBP/make stack/NN/stack abstract/NN/abstract data/NNS/data types/NNS/types 205/CD/205 listing/VBG/listing 5.4/CD/5.4 continued/VBN/continued thestack.push/JJ/thestack.push /NN/( 20/CD/20 /CD/) push/NN/push items/NNS/items thestack.push/JJ/thestack.push /NN/( 40/CD/40 /CD/) thestack.displaystack/JJ/thestack.displaystack /NN/( /:/) display/NN/display stack/NN/stack thestack.push/JJ/thestack.push /NN/( 60/CD/60 /CD/) push/NN/push items/NNS/items thestack.push/JJ/thestack.push /NN/( 80/CD/80 /CD/) thestack.displaystack/JJ/thestack.displaystack /NN/( /:/) display/NN/display stack/NN/stack thestack.pop/NN/thestack.pop /:/( /:/) pop/NN/pop items/NNS/items thestack.pop/JJ/thestack.pop /NN/( /:/) thestack.displaystack/JJ/thestack.displaystack /NN/( /:/) display/NN/display stack/NN/stack /:/} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class linkstackapp/NN/linkstackapp the/DT/the main/JJ/main /NN/( /:/) routine/NN/routine creates/VBZ/creates a/DT/a stack/NN/stack object/NN/object /,/, pushes/VBZ/pushes two/CD/two items/NNS/items on/IN/on it/PRP/it /,/, displays/VBZ/displays the/DT/the stack/NN/stack /,/, pushes/VBZ/pushes two/CD/two more/JJR/more items/NNS/items /,/, and/CC/and displays/NNS/displays the/DT/the stack/NN/stack again/NNP/again. finally/RB/finally /,/, it/PRP/it pops/VBZ/pops two/CD/two items/NNS/items and/CC/and displays/NNS/displays the/DT/the stack/NN/stack a/DT/a third/JJ/third time/NNP/time. here/RB/here s/VBZ/s the/DT/the output/NN/output stack/NN/stack /:/( top/JJ/top bottom/NN/bottom /:/) 40/CD/40 20/CD/20 stack/NN/stack /:/( top/JJ/top bottom/NN/bottom /:/) 80/CD/80 60/CD/60 40/CD/40 20/CD/20 stack/NN/stack /:/( top/JJ/top bottom/NN/bottom /:/) 40/CD/40 20/CD/20 notice/NN/notice the/DT/the overall/JJ/overall organization/NN/organization of/IN/of this/DT/this program/NNP/program. the/DT/the main/JJ/main /NN/( /:/) routine/NN/routine in/IN/in the/DT/the linkstackapp/NN/linkstackapp class/NN/class relates/VBZ/relates only/RB/only to/TO/to the/DT/the linkstack/NN/linkstack class/NNP/class. the/DT/the linkstack/NN/linkstack class/NN/class relates/VBZ/relates only/RB/only to/TO/to the/DT/the linklist/NN/linklist class/NNP/class. there/EX/there s/VBZ/s no/DT/no communication/NN/communication between/IN/between main/JJ/main /NN/( /:/) and/CC/and the/DT/the linklist/NN/linklist class/NNP/class. more/RBR/more specifically/RB/specifically /,/, when/WRB/when a/DT/a statement/NN/statement in/IN/in main/NN/main /:/( /:/) calls/NNS/calls the/DT/the push/NN/push /:/( /:/) operation/NN/operation in/IN/in the/DT/the linkstack/NN/linkstack class/NN/class /,/, this/DT/this method/NN/method in/IN/in turn/NN/turn calls/NNS/calls insertfirst/VBP/insertfirst /:/( /:/) in/IN/in the/DT/the linklist/NN/linklist class/NN/class to/TO/to actually/RB/actually insert/VB/insert data/NNP/data. similarly/RB/similarly /,/, pop/NN/pop /:/( /:/) calls/NNS/calls deletefirst/VBP/deletefirst /:/( /:/) to/TO/to delete/VB/delete an/DT/an item/NN/item /,/, and/CC/and displaystack/NN/displaystack /:/( /:/) calls/NNS/calls displaylist/VBP/displaylist /:/( /:/) to/TO/to display/VB/display the/DT/the stack/NNP/stack. to/TO/to the/DT/the class/NN/class user/NN/user /,/, writing/VBG/writing code/NN/code in/IN/in main/NN/main /:/( /:/) /,/, there/EX/there is/VBZ/is no/DT/no difference/NN/difference between/IN/between using/VBG/using the/DT/the list/NN/list based/VBN/based linkstack/NN/linkstack class/NN/class and/CC/and using/VBG/using the/DT/the array/NN/array based/VBN/based stack/NN/stack class/NN/class from/IN/from the/DT/the stack.java/NNP/stack.java program/NN/program /:/( listing/VBG/listing 4.1/CD/4.1 /CD/) in/IN/in chapter/NN/chapter 4/CD/4. a/DT/a queue/NN/queue implemented/VBN/implemented by/IN/by a/DT/a linked/VBN/linked list/NN/list here/RB/here s/VBZ/s a/DT/a similar/JJ/similar example/NN/example of/IN/of an/DT/an adt/NN/adt implemented/VBN/implemented with/IN/with a/DT/a linked/VBN/linked list/NNP/list. listing/NN/listing 5.5/CD/5.5 shows/NNS/shows a/DT/a queue/NN/queue implemented/VBN/implemented as/IN/as a/DT/a double/JJ/double ended/VBN/ended linked/VBN/linked list/NNP/list. 206/CD/206 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.4/CD/5.4 continued/VBN/continued listing/NN/listing 5.5/CD/5.5 the/DT/the linkqueue.java/NNP/linkqueue.java program/NN/program linkqueue.java/NN/linkqueue.java demonstrates/VBZ/demonstrates queue/NN/queue implemented/VBN/implemented as/IN/as double/JJ/double ended/VBD/ended list/NN/list to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java linkqueueapp/NN/linkqueueapp class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( long/JJ/long d/NN/d /:/) constructor/NN/constructor /:/{ ddata/NN/ddata =/:/= d/NN/d /:/} public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display this/DT/this link/NN/link /:/{ system.out.print/JJ/system.out.print /NN/( ddata/NN/ddata +/:/+ /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link class/NN/class firstlastlist/NN/firstlastlist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first item/NN/item private/JJ/private link/NN/link last/JJ/last ref/NN/ref to/TO/to last/JJ/last item/NN/item public/JJ/public firstlastlist/NN/firstlastlist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null no/DT/no items/NNS/items on/IN/on list/NN/list yet/RB/yet last/JJ/last =/NN/= null/NN/null /:/} public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if no/DT/no links/NNS/links /VBP/{ return/NN/return first/RB/first =/./= =/:/= null/NN/null /:/} public/JJ/public void/JJ/void insertlast/NN/insertlast /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert at/IN/at end/NN/end of/IN/of list/NN/list /:/{ link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) make/VB/make new/JJ/new link/NN/link if/IN/if /CD/( isempty/NN/isempty /:/( /:/) /:/) if/IN/if empty/JJ/empty list/NN/list /,/, first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink else/RB/else last.next/JJ/last.next =/NN/= newlink/NN/newlink old/JJ/old last/JJ/last newlink/NN/newlink last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last /NN/} abstract/NN/abstract data/NNS/data types/NNS/types 207/CD/207 public/JJ/public long/JJ/long deletefirst/NN/deletefirst /:/( /:/) delete/JJ/delete first/JJ/first link/NN/link /:/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) long/JJ/long temp/NN/temp =/:/= first.ddata/NNP/first.ddata if/IN/if /NNP/( first.next/JJ/first.next =/NN/= =/:/= null/NN/null /:/) if/IN/if only/RB/only one/CD/one item/NN/item last/JJ/last =/NN/= null/NN/null null/NN/null last/JJ/last first/JJ/first =/NN/= first.next/JJ/first.next first/JJ/first old/JJ/old next/JJ/next return/NN/return temp/NN/temp /:/} public/JJ/public void/JJ/void displaylist/NN/displaylist /:/( /:/) /:/{ link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} /:/} end/NN/end class/NN/class firstlastlist/NN/firstlastlist class/NN/class linkqueue/NN/linkqueue /:/{ private/JJ/private firstlastlist/NN/firstlastlist thelist/NN/thelist public/JJ/public linkqueue/NN/linkqueue /:/( /:/) constructor/NN/constructor /:/{ thelist/NN/thelist =/:/= new/JJ/new firstlastlist/NN/firstlastlist /:/( /:/) /:/} make/VBP/make a/DT/a 2/CD/2 ended/VBD/ended list/NN/list public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if queue/JJ/queue is/VBZ/is empty/JJ/empty /NN/{ return/NN/return thelist.isempty/NN/thelist.isempty /:/( /:/) /:/} public/JJ/public void/JJ/void insert/NN/insert /:/( long/JJ/long j/NN/j /:/) insert/NN/insert /,/, rear/JJ/rear of/IN/of queue/NN/queue /:/{ thelist.insertlast/JJ/thelist.insertlast /NN/( j/NN/j /:/) /:/} public/JJ/public long/JJ/long remove/NN/remove /:/( /:/) remove/IN/remove /,/, front/NN/front of/IN/of queue/NN/queue /:/{ return/NN/return thelist.deletefirst/JJ/thelist.deletefirst /NN/( /:/) /:/} public/JJ/public void/JJ/void displayqueue/NN/displayqueue /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( queue/NN/queue /:/( front/NN/front rear/NN/rear /:/) /:/) 208/CD/208 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.5/CD/5.5 continued/VBN/continued thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) /:/} /:/} end/NN/end class/NN/class linkqueue/NN/linkqueue class/NN/class linkqueueapp/NN/linkqueueapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ linkqueue/NN/linkqueue thequeue/NN/thequeue =/:/= new/JJ/new linkqueue/NN/linkqueue /:/( /:/) thequeue.insert/JJ/thequeue.insert /NN/( 20/CD/20 /CD/) insert/NN/insert items/NNS/items thequeue.insert/JJ/thequeue.insert /NN/( 40/CD/40 /CD/) thequeue.displayqueue/JJ/thequeue.displayqueue /NN/( /:/) display/NN/display queue/NN/queue thequeue.insert/NN/thequeue.insert /:/( 60/CD/60 /CD/) insert/NN/insert items/NNS/items thequeue.insert/JJ/thequeue.insert /NN/( 80/CD/80 /CD/) thequeue.displayqueue/JJ/thequeue.displayqueue /NN/( /:/) display/NN/display queue/NN/queue thequeue.remove/JJ/thequeue.remove /NN/( /:/) remove/NN/remove items/NNS/items thequeue.remove/JJ/thequeue.remove /NN/( /:/) thequeue.displayqueue/JJ/thequeue.displayqueue /NN/( /:/) display/NN/display queue/NN/queue /:/} end/NN/end main/NN/main /:/( /:/) the/DT/the program/NN/program creates/VBZ/creates a/DT/a queue/NN/queue /,/, inserts/NNS/inserts two/CD/two items/NNS/items /,/, inserts/NNS/inserts two/CD/two more/JJR/more items/NNS/items /,/, and/CC/and removes/NNS/removes two/CD/two items/NNS/items following/VBG/following each/DT/each of/IN/of these/DT/these operations/NNS/operations the/DT/the queue/NN/queue is/VBZ/is displayed/NNP/displayed. here/RB/here s/VBZ/s the/DT/the output/NN/output queue/NN/queue /:/( front/NN/front rear/NN/rear /:/) 20/CD/20 40/CD/40 queue/NN/queue /:/( front/NN/front rear/NN/rear /:/) 20/CD/20 40/CD/40 60/CD/60 80/CD/80 queue/NN/queue /:/( front/NN/front rear/NN/rear /:/) 60/CD/60 80/CD/80 here/RB/here the/DT/the methods/NNS/methods insert/VBP/insert /:/( /:/) and/CC/and remove/VB/remove /:/( /:/) in/IN/in the/DT/the linkqueue/NN/linkqueue class/NN/class are/VBP/are implemented/VBN/implemented by/IN/by the/DT/the insertlast/JJ/insertlast /NN/( /:/) and/CC/and deletefirst/JJ/deletefirst /NN/( /:/) methods/NNS/methods of/IN/of the/DT/the firstlastlist/NN/firstlastlist class/NNP/class. we/PRP/we ve/VBP/ve substituted/VBN/substituted a/DT/a linked/VBN/linked list/NN/list for/IN/for the/DT/the array/NN/array used/VBD/used to/TO/to implement/VB/implement the/DT/the queue/NN/queue in/IN/in the/DT/the queue.java/NNP/queue.java program/NN/program /:/( listing/VBG/listing 4.4/CD/4.4 /CD/) of/IN/of chapter/NN/chapter 4/CD/4. the/DT/the linkstack.java/NNP/linkstack.java and/CC/and linkqueue.java/NNP/linkqueue.java programs/NNS/programs emphasize/VBP/emphasize that/IN/that stacks/NNS/stacks and/CC/and queues/NNS/queues are/VBP/are conceptual/JJ/conceptual entities/NNS/entities /,/, separate/JJ/separate from/IN/from their/PRP$/their implementations/NNP/implementations. a/DT/a stack/NN/stack can/MD/can be/VB/be implemented/VBN/implemented equally/RB/equally well/RB/well by/IN/by an/DT/an array/NN/array or/CC/or by/IN/by a/DT/a linked/VBN/linked list/NNP/list. what/WP/what s/VBZ/s important/JJ/important about/IN/about a/DT/a stack/NN/stack is/VBZ/is abstract/NN/abstract data/NNS/data types/NNS/types 209/CD/209 listing/VBG/listing 5.5/CD/5.5 continued/VBN/continued the/DT/the push/NN/push /:/( /:/) and/CC/and pop/VB/pop /:/( /:/) operations/NNS/operations and/CC/and how/WRB/how they/PRP/they re/VBP/re used/VBN/used it/PRP/it s/VBZ/s not/RB/not the/DT/the underlying/VBG/underlying mechanism/NN/mechanism used/VBN/used to/TO/to implement/VB/implement these/DT/these operations/NNP/operations. when/WRB/when would/MD/would you/PRP/you use/VB/use a/DT/a linked/VBN/linked list/NN/list as/IN/as opposed/VBN/opposed to/TO/to an/DT/an array/NN/array as/IN/as the/DT/the implementation/NN/implementation of/IN/of a/DT/a stack/NN/stack or/CC/or queue/VB/queue one/CD/one consideration/NN/consideration is/VBZ/is how/WRB/how accurately/RB/accurately you/PRP/you can/MD/can predict/VB/predict the/DT/the amount/NN/amount of/IN/of data/NNS/data the/DT/the stack/NN/stack or/CC/or queue/VB/queue will/MD/will need/VB/need to/TO/to hold/NNP/hold. if/IN/if this/DT/this isn/NN/isn t/NN/t clear/NN/clear /,/, the/DT/the linked/VBN/linked list/NN/list gives/VBZ/gives you/PRP/you more/JJR/more flexibility/NN/flexibility than/IN/than an/DT/an array/NNP/array. both/DT/both are/VBP/are fast/RB/fast /,/, so/RB/so speed/VBN/speed is/VBZ/is probably/RB/probably not/RB/not a/DT/a major/JJ/major consideration/NNP/consideration. data/NNS/data types/NNS/types and/CC/and abstraction/NN/abstraction where/WRB/where does/VBZ/does the/DT/the term/NN/term abstract/NN/abstract data/NNS/data type/NN/type come/NN/come from/IN/from let/NN/let s/NNS/s look/VBP/look at/IN/at the/DT/the data/NNS/data type/NN/type part/NN/part of/IN/of it/PRP/it first/RB/first and/CC/and then/RB/then return/VB/return to/TO/to abstract/NNP/abstract. data/NNS/data types/NNS/types the/DT/the phrase/NN/phrase data/NNS/data type/NN/type covers/NNS/covers a/DT/a lot/NN/lot of/IN/of ground/NNP/ground. it/PRP/it was/VBD/was first/JJ/first applied/VBN/applied to/TO/to built/VB/built in/IN/in types/NNS/types such/JJ/such as/IN/as int/NN/int and/CC/and double/NNP/double. this/DT/this is/VBZ/is probably/RB/probably what/WP/what you/PRP/you first/RB/first think/VBP/think of/IN/of when/WRB/when you/PRP/you hear/VBP/hear the/DT/the term/NNP/term. when/WRB/when you/PRP/you talk/VBP/talk about/IN/about a/DT/a primitive/JJ/primitive type/NN/type /,/, you/PRP/you re/VBP/re actually/RB/actually referring/VBG/referring to/TO/to two/CD/two things/NNS/things a/DT/a data/NN/data item/NN/item with/IN/with certain/JJ/certain characteristics/NNS/characteristics and/CC/and permissible/JJ/permissible operations/NNS/operations on/IN/on that/DT/that data/NNP/data. for/IN/for example/NN/example /,/, type/NN/type int/NN/int variables/NNS/variables in/IN/in java/NN/java can/MD/can have/VB/have whole/JJ/whole number/NN/number values/NNS/values between/IN/between 2,147,483,648/CD/2,147,483,648 and/CC/and +/CD/+ 2,147,483,647/CD/2,147,483,647 /,/, and/CC/and the/DT/the operators/NNS/operators and/CC/and so/RB/so on/IN/on can/MD/can be/VB/be applied/VBN/applied to/TO/to them/NNP/them. the/DT/the data/NNS/data type/NN/type s/NNS/s permissible/JJ/permissible operations/NNS/operations are/VBP/are an/DT/an inseparable/JJ/inseparable part/NN/part of/IN/of its/PRP$/its identity/NN/identity understanding/VBG/understanding the/DT/the type/NN/type means/VBZ/means understanding/NN/understanding what/WP/what operations/NNS/operations can/MD/can be/VB/be performed/VBN/performed on/IN/on it/NNP/it. with/IN/with the/DT/the advent/NN/advent of/IN/of object/NN/object oriented/VBN/oriented programming/NN/programming /,/, you/PRP/you could/MD/could now/RB/now create/VB/create your/PRP$/your own/JJ/own data/NNS/data types/NNS/types using/VBG/using classes/NNP/classes. some/DT/some of/IN/of these/DT/these data/NNS/data types/NNS/types represent/VBP/represent numerical/JJ/numerical quantities/NNS/quantities that/WDT/that are/VBP/are used/VBN/used in/IN/in ways/NNS/ways similar/JJ/similar to/TO/to primitive/JJ/primitive types/NNP/types. you/PRP/you can/MD/can /,/, for/IN/for example/NN/example /,/, define/NN/define a/DT/a class/NN/class for/IN/for time/NN/time /:/( with/IN/with fields/NNS/fields for/IN/for hours/NNS/hours /,/, minutes/NNS/minutes /,/, seconds/NNS/seconds /:/) /,/, a/DT/a class/NN/class for/IN/for fractions/NNS/fractions /:/( with/IN/with numerator/NN/numerator and/CC/and denominator/NN/denominator fields/NNS/fields /:/) /,/, and/CC/and a/DT/a class/NN/class for/IN/for extra/JJ/extra long/JJ/long numbers/NNS/numbers /:/( characters/NNS/characters in/IN/in a/DT/a string/NN/string represent/NN/represent the/DT/the digits/NNS/digits /:/) /./. all/DT/all these/DT/these classes/NNS/classes can/MD/can be/VB/be added/VBN/added and/CC/and subtracted/VBN/subtracted like/IN/like int/NN/int and/CC/and double/JJ/double /,/, except/IN/except that/DT/that in/IN/in java/NN/java you/PRP/you must/MD/must use/VB/use methods/NNS/methods with/IN/with functional/JJ/functional notation/NN/notation like/IN/like add/NN/add /:/( /:/) and/CC/and sub/NN/sub /:/( /:/) rather/RB/rather than/IN/than operators/NNS/operators like/IN/like +/NN/+ and/CC/and /./. the/DT/the phrase/NN/phrase data/NNS/data type/NN/type seems/VBZ/seems to/TO/to fit/VB/fit naturally/RB/naturally with/IN/with such/JJ/such quantity/NN/quantity oriented/VBN/oriented classes/NNP/classes. however/RB/however /,/, it/PRP/it is/VBZ/is also/RB/also applied/VBN/applied to/TO/to classes/NNS/classes that/IN/that don/NN/don t/NN/t have/VBP/have this/DT/this quantitative/JJ/quantitative aspect/NNP/aspect. in/IN/in fact/NN/fact /,/, any/DT/any class/NN/class represents/VBZ/represents a/DT/a data/NN/data type/NN/type /,/, in/IN/in the/DT/the sense/NN/sense that/IN/that a/DT/a class/NN/class is/VBZ/is made/VBN/made up/RP/up of/IN/of data/NNS/data /:/( fields/NNS/fields /VBP/) and/CC/and permissible/JJ/permissible operations/NNS/operations on/IN/on that/DT/that data/NN/data /:/( methods/NNS/methods /VBP/) /./. by/IN/by extension/NN/extension /,/, when/WRB/when a/DT/a data/NN/data storage/NN/storage structure/NN/structure like/IN/like a/DT/a stack/NN/stack or/CC/or queue/VB/queue is/VBZ/is represented/VBN/represented by/IN/by a/DT/a class/NN/class /,/, it/PRP/it too/RB/too can/MD/can be/VB/be referred/VBN/referred to/TO/to as/RB/as a/DT/a data/NN/data type/NNP/type. a/DT/a stack/NN/stack is/VBZ/is different/JJ/different in/IN/in many/JJ/many ways/NNS/ways from/IN/from an/DT/an int/NN/int /,/, but/CC/but they/PRP/they are/VBP/are both/DT/both defined/VBN/defined as/IN/as a/DT/a certain/JJ/certain arrangement/NN/arrangement of/IN/of data/NNS/data and/CC/and a/DT/a set/NN/set of/IN/of operations/NNS/operations on/IN/on that/DT/that data/NNP/data. 210/CD/210 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists abstraction/NN/abstraction the/DT/the word/NN/word abstract/NN/abstract means/VBZ/means considered/VBN/considered apart/NN/apart from/IN/from detailed/JJ/detailed specifications/NNS/specifications or/CC/or implementation/NNP/implementation. an/DT/an abstraction/NN/abstraction is/VBZ/is the/DT/the essence/NN/essence or/CC/or important/JJ/important characteristics/NNS/characteristics of/IN/of something/NNP/something. the/DT/the office/NN/office of/IN/of president/NN/president /,/, for/IN/for example/NN/example /,/, is/VBZ/is an/DT/an abstraction/NN/abstraction /,/, considered/VBN/considered apart/NN/apart from/IN/from the/DT/the individual/JJ/individual who/WP/who happens/NNS/happens to/TO/to occupy/VB/occupy that/IN/that office/NNP/office. the/DT/the powers/NNS/powers and/CC/and responsibilities/NNS/responsibilities of/IN/of the/DT/the office/NN/office remain/NN/remain the/DT/the same/JJ/same /,/, while/IN/while individual/JJ/individual office/NN/office holders/NNS/holders come/VBP/come and/CC/and go/NNP/go. in/IN/in object/NN/object oriented/VBN/oriented programming/NN/programming /,/, then/RB/then /,/, an/DT/an abstract/NN/abstract data/NNS/data type/NN/type is/VBZ/is a/DT/a class/NN/class considered/VBN/considered without/IN/without regard/NN/regard to/TO/to its/PRP$/its implementation/NNP/implementation. it/PRP/it s/VBZ/s a/DT/a description/NN/description of/IN/of the/DT/the data/NNS/data in/IN/in the/DT/the class/NN/class /:/( fields/NNS/fields /VBP/) /,/, a/DT/a list/NN/list of/IN/of operations/NNS/operations /:/( methods/NNS/methods /VBP/) that/IN/that can/MD/can be/VB/be carried/VBN/carried out/RP/out on/IN/on that/DT/that data/NN/data /,/, and/CC/and instructions/NNS/instructions on/IN/on how/WRB/how to/TO/to use/VB/use these/DT/these operations/NNP/operations. specifically/RB/specifically excluded/VBD/excluded are/VBP/are the/DT/the details/NNS/details of/IN/of how/WRB/how the/DT/the methods/NNS/methods carry/VBP/carry out/RP/out their/PRP$/their tasks/NNP/tasks. as/IN/as a/DT/a class/NN/class user/NN/user /,/, you/PRP/you re/VBP/re told/JJ/told what/WP/what methods/NNS/methods to/TO/to call/VB/call /,/, how/WRB/how to/TO/to call/VB/call them/PRP/them /,/, and/CC/and the/DT/the results/NNS/results you/PRP/you can/MD/can expect/VB/expect /,/, but/CC/but not/RB/not how/WRB/how they/PRP/they work/NNP/work. the/DT/the meaning/NN/meaning of/IN/of abstract/NN/abstract data/NNS/data type/NN/type is/VBZ/is further/RBR/further extended/VBN/extended when/WRB/when it/PRP/it s/VBZ/s applied/VBN/applied to/TO/to data/NNS/data structures/NNS/structures such/JJ/such as/IN/as stacks/NNS/stacks and/CC/and queues/NNP/queues. as/IN/as with/IN/with any/DT/any class/NN/class /,/, it/PRP/it means/VBZ/means the/DT/the data/NNS/data and/CC/and the/DT/the operations/NNS/operations that/IN/that can/MD/can be/VB/be performed/VBN/performed on/IN/on it/PRP/it /,/, but/CC/but in/IN/in this/DT/this context/NN/context even/RB/even the/DT/the fundamentals/NNS/fundamentals of/IN/of how/WRB/how the/DT/the data/NNS/data is/VBZ/is stored/VBN/stored become/NN/become invisible/JJ/invisible to/TO/to the/DT/the user/NNP/user. users/NNS/users not/RB/not only/RB/only don/RB/don t/VB/t know/RB/know how/WRB/how the/DT/the methods/NNS/methods work/VBP/work /,/, they/PRP/they also/RB/also don/VBP/don t/VBN/t know/NN/know what/WP/what structure/NN/structure is/VBZ/is used/VBN/used to/TO/to store/VB/store the/DT/the data/NNP/data. for/IN/for the/DT/the stack/NN/stack /,/, the/DT/the user/NN/user knows/VBZ/knows that/IN/that push/JJ/push /NN/( /:/) and/CC/and pop/VB/pop /:/( /:/) /:/( and/CC/and perhaps/RB/perhaps a/DT/a few/JJ/few other/JJ/other methods/NNS/methods /:/) exist/NN/exist and/CC/and how/WRB/how they/PRP/they work/NNP/work. the/DT/the user/NN/user doesn/NN/doesn t/NN/t /:/( at/IN/at least/JJS/least not/RB/not usually/RB/usually /:/) need/VBP/need to/TO/to know/VB/know how/WRB/how push/JJ/push /NN/( /:/) and/CC/and pop/VB/pop /:/( /:/) work/NN/work /,/, or/CC/or whether/IN/whether data/NNS/data is/VBZ/is stored/VBN/stored in/IN/in an/DT/an array/NN/array /,/, a/DT/a linked/VBN/linked list/NN/list /,/, or/CC/or some/DT/some other/JJ/other data/NNS/data structure/NN/structure like/IN/like a/DT/a tree/NNP/tree. the/DT/the interface/NN/interface an/DT/an adt/NN/adt specification/NN/specification is/VBZ/is often/RB/often called/VBN/called an/DT/an interface/NNP/interface. it/PRP/it s/VBZ/s what/WP/what the/DT/the class/NN/class user/NN/user sees/NNS/sees usually/RB/usually its/PRP$/its public/JJ/public methods/NNP/methods. in/IN/in a/DT/a stack/NN/stack class/NN/class /,/, push/JJ/push /NN/( /:/) and/CC/and pop/VB/pop /:/( /:/) and/CC/and similar/JJ/similar methods/NNS/methods form/NN/form the/DT/the interface/NNP/interface. adt/NN/adt lists/NNS/lists now/RB/now that/IN/that we/PRP/we know/VBP/know what/WP/what an/DT/an abstract/NN/abstract data/NNS/data type/NN/type is/VBZ/is /,/, we/PRP/we can/MD/can mention/VB/mention another/DT/another one/CD/one the/DT/the list/NNP/list. a/DT/a list/NN/list /:/( sometimes/RB/sometimes called/VBN/called a/DT/a linear/JJ/linear list/NN/list /:/) is/VBZ/is a/DT/a group/NN/group of/IN/of items/NNS/items arranged/VBN/arranged in/IN/in a/DT/a linear/NN/linear order/NNP/order. that/IN/that is/VBZ/is /,/, they/PRP/they re/VBP/re lined/VBN/lined up/RP/up in/IN/in a/DT/a certain/JJ/certain way/NN/way /,/, like/IN/like beads/NNS/beads on/IN/on a/DT/a string/NN/string or/CC/or houses/NNS/houses on/IN/on a/DT/a street/NNP/street. lists/VBZ/lists support/NN/support certain/JJ/certain fundamental/NN/fundamental operations/NNP/operations. you/PRP/you can/MD/can insert/VB/insert an/DT/an item/NN/item /,/, delete/JJ/delete an/DT/an item/NN/item /,/, and/CC/and usually/RB/usually read/VB/read an/DT/an item/NN/item from/IN/from a/DT/a specified/VBN/specified location/NN/location /:/( the/DT/the third/JJ/third item/NN/item /,/, say/VB/say /:/) /./. don/NN/don t/NN/t confuse/NN/confuse the/DT/the adt/NN/adt list/NN/list with/IN/with the/DT/the linked/VBN/linked list/NN/list we/PRP/we ve/VBP/ve been/VBN/been discussing/VBG/discussing in/IN/in this/DT/this chapter/NNP/chapter. a/DT/a list/NN/list is/VBZ/is defined/VBN/defined by/IN/by its/PRP$/its interface/NN/interface the/DT/the specific/JJ/specific methods/NNS/methods used/VBN/used to/TO/to interact/VB/interact with/IN/with it/NNP/it. this/DT/this interface/NN/interface can/MD/can be/VB/be implemented/VBN/implemented by/IN/by various/JJ/various structures/NNS/structures /,/, including/VBG/including arrays/NNS/arrays and/CC/and linked/VBD/linked lists/NNP/lists. the/DT/the list/NN/list is/VBZ/is an/DT/an abstraction/NN/abstraction of/IN/of such/JJ/such data/NNS/data structures/NNP/structures. abstract/NN/abstract data/NNS/data types/NNS/types 211/CD/211 adts/NNS/adts as/IN/as a/DT/a design/NN/design tool/NN/tool the/DT/the adt/NN/adt concept/NN/concept is/VBZ/is a/DT/a useful/JJ/useful aid/NN/aid in/IN/in the/DT/the software/NN/software design/NN/design process/NNP/process. if/IN/if you/PRP/you need/VBP/need to/TO/to store/VB/store data/NNS/data /,/, start/NN/start by/IN/by considering/NN/considering the/DT/the operations/NNS/operations that/IN/that need/NN/need to/TO/to be/VB/be performed/VBN/performed on/IN/on that/DT/that data/NNP/data. do/VBP/do you/PRP/you need/VBP/need access/NN/access to/TO/to the/DT/the last/JJ/last item/NN/item inserted/VBD/inserted the/DT/the first/JJ/first one/CD/one an/DT/an item/NN/item with/IN/with a/DT/a specified/VBN/specified key/JJ/key an/DT/an item/NN/item in/IN/in a/DT/a certain/JJ/certain position/NN/position answering/VBG/answering such/JJ/such questions/NNS/questions leads/NNS/leads to/TO/to the/DT/the definition/NN/definition of/IN/of an/DT/an adt/NNP/adt. only/RB/only after/IN/after the/DT/the adt/NN/adt is/VBZ/is completely/RB/completely defined/VBN/defined should/MD/should you/PRP/you worry/VB/worry about/IN/about the/DT/the details/NNS/details of/IN/of how/WRB/how to/TO/to represent/VB/represent the/DT/the data/NNS/data and/CC/and how/WRB/how to/TO/to code/VB/code the/DT/the methods/NNS/methods that/WDT/that access/NN/access the/DT/the data/NNP/data. by/IN/by decoupling/NN/decoupling the/DT/the specification/NN/specification of/IN/of the/DT/the adt/NN/adt from/IN/from the/DT/the implementation/NN/implementation details/NNS/details /,/, you/PRP/you can/MD/can simplify/VB/simplify the/DT/the design/NN/design process/NNP/process. you/PRP/you also/RB/also make/VBP/make it/PRP/it easier/JJR/easier to/TO/to change/VB/change the/DT/the implementation/NN/implementation at/IN/at some/DT/some future/JJ/future time/NNP/time. if/IN/if a/DT/a user/NN/user relates/VBZ/relates only/RB/only to/TO/to the/DT/the adt/NN/adt interface/NN/interface /,/, you/PRP/you should/MD/should be/VB/be able/JJ/able to/TO/to change/VB/change the/DT/the implementation/NN/implementation without/IN/without breaking/VBG/breaking the/DT/the user/NN/user s/VBZ/s code/NNP/code. of/IN/of course/NN/course /,/, once/RB/once the/DT/the adt/NN/adt has/VBZ/has been/VBN/been designed/VBN/designed /,/, the/DT/the underlying/VBG/underlying data/NNS/data structure/NN/structure must/MD/must be/VB/be carefully/RB/carefully chosen/VBN/chosen to/TO/to make/VB/make the/DT/the specified/VBN/specified operations/NNS/operations as/RB/as efficient/JJ/efficient as/IN/as possible/NNP/possible. if/IN/if you/PRP/you need/VBP/need random/NN/random access/NN/access to/TO/to element/NN/element n/NN/n /,/, for/IN/for example/NN/example /,/, the/DT/the linked/VBN/linked list/NN/list representation/NN/representation isn/NN/isn t/NN/t so/RB/so good/JJ/good because/IN/because random/NN/random access/NN/access isn/NN/isn t/NN/t an/DT/an efficient/NN/efficient operation/NN/operation for/IN/for a/DT/a linked/VBN/linked list/NNP/list. you/PRP/you d/VBD/d be/VB/be better/JJR/better off/IN/off with/IN/with an/DT/an array/NNP/array. note/NN/note remember/NN/remember that/WDT/that the/DT/the adt/NN/adt concept/NN/concept is/VBZ/is only/RB/only a/DT/a conceptual/JJ/conceptual tool/NNP/tool. data/NNS/data storage/NN/storage structures/NNS/structures are/VBP/are not/RB/not divided/VBN/divided cleanly/RB/cleanly into/IN/into some/DT/some that/WDT/that are/VBP/are adts/NNS/adts and/CC/and some/DT/some that/WDT/that are/VBP/are used/VBN/used to/TO/to implement/VB/implement adts/NNP/adts. a/DT/a linked/VBN/linked list/NN/list /,/, for/IN/for example/NN/example /,/, doesn/NN/doesn t/NN/t need/VBP/need to/TO/to be/VB/be wrapped/VBN/wrapped in/IN/in a/DT/a list/NN/list interface/NN/interface to/TO/to be/VB/be useful/JJ/useful it/PRP/it can/MD/can act/VB/act as/IN/as an/DT/an adt/NN/adt on/IN/on its/PRP$/its own/JJ/own /,/, or/CC/or it/PRP/it can/MD/can be/VB/be used/VBN/used to/TO/to implement/VB/implement another/DT/another data/NN/data type/NN/type such/JJ/such as/IN/as a/DT/a queue/NNP/queue. a/DT/a linked/VBN/linked list/NN/list can/MD/can be/VB/be implemented/VBN/implemented using/VBG/using an/DT/an array/NN/array /,/, and/CC/and an/DT/an array/NN/array type/NN/type structure/NN/structure can/MD/can be/VB/be implemented/VBN/implemented using/VBG/using a/DT/a linked/JJ/linked list/NNP/list. what/WP/what s/VBZ/s an/DT/an adt/NN/adt and/CC/and what/WP/what s/NNS/s a/DT/a more/RBR/more basic/JJ/basic structure/NN/structure must/MD/must be/VB/be determined/VBN/determined in/IN/in a/DT/a given/VBN/given context/NNP/context. sorted/VBD/sorted lists/NNS/lists in/IN/in the/DT/the linked/VBN/linked lists/NNS/lists we/PRP/we ve/VBP/ve seen/VBN/seen thus/RB/thus far/RB/far /,/, there/EX/there was/VBD/was no/DT/no requirement/NN/requirement that/IN/that data/NNS/data be/VB/be stored/VBN/stored in/IN/in order/NNP/order. however/RB/however /,/, for/IN/for certain/JJ/certain applications/NNS/applications it/PRP/it s/VBZ/s useful/JJ/useful to/TO/to maintain/VB/maintain the/DT/the data/NNS/data in/IN/in sorted/JJ/sorted order/NN/order within/IN/within the/DT/the list/NNP/list. a/DT/a list/NN/list with/IN/with this/DT/this characteristic/JJ/characteristic is/VBZ/is called/VBN/called a/DT/a sorted/VBN/sorted list/NNP/list. in/IN/in a/DT/a sorted/VBN/sorted list/NN/list /,/, the/DT/the items/NNS/items are/VBP/are arranged/VBN/arranged in/IN/in sorted/VBN/sorted order/NN/order by/IN/by key/JJ/key value/NNP/value. deletion/NN/deletion is/VBZ/is often/RB/often limited/VBN/limited to/TO/to the/DT/the smallest/JJS/smallest /:/( or/CC/or the/DT/the largest/JJS/largest /:/) item/NN/item in/IN/in the/DT/the list/NN/list /,/, which/WDT/which is/VBZ/is at/IN/at the/DT/the start/NN/start of/IN/of the/DT/the list/NN/list /,/, although/IN/although sometimes/RB/sometimes find/VBP/find /:/( /:/) and/CC/and delete/JJ/delete /NN/( /:/) methods/NNS/methods /,/, which/WDT/which search/NN/search through/IN/through the/DT/the list/NN/list for/IN/for specified/VBN/specified links/NNS/links /,/, are/VBP/are used/VBN/used as/IN/as well/NNP/well. in/IN/in general/JJ/general you/PRP/you can/MD/can use/VB/use a/DT/a sorted/VBN/sorted list/NN/list in/IN/in most/JJS/most situations/NNS/situations in/IN/in which/WDT/which you/PRP/you use/VBP/use a/DT/a sorted/VBN/sorted array/NNP/array. the/DT/the advantages/NNS/advantages of/IN/of a/DT/a sorted/VBN/sorted list/NN/list over/IN/over a/DT/a sorted/VBN/sorted array/NN/array are/VBP/are speed/VBN/speed of/IN/of insertion/NN/insertion /:/( because/IN/because elements/NNS/elements don/VBP/don t/NN/t need/NN/need to/TO/to be/VB/be moved/VBN/moved /-NONE-/) and/CC/and the/DT/the fact/NN/fact that/IN/that a/DT/a list/NN/list can/MD/can expand/VB/expand to/TO/to fill/VB/fill 212/CD/212 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists available/JJ/available memory/NN/memory /,/, while/IN/while an/DT/an array/NN/array is/VBZ/is limited/VBN/limited to/TO/to a/DT/a fixed/VBN/fixed size/NNP/size. however/RB/however /,/, a/DT/a sorted/VBN/sorted list/NN/list is/VBZ/is somewhat/RB/somewhat more/RBR/more difficult/JJ/difficult to/TO/to implement/NN/implement than/IN/than a/DT/a sorted/VBN/sorted array/NNP/array. later/JJ/later we/PRP/we ll/VBP/ll look/VBP/look at/IN/at one/CD/one application/NN/application for/IN/for sorted/VBN/sorted lists/NNS/lists sorting/VBG/sorting data/NNP/data. a/DT/a sorted/JJ/sorted list/NN/list can/MD/can also/RB/also be/VB/be used/VBN/used to/TO/to implement/VB/implement a/DT/a priority/NN/priority queue/NN/queue /,/, although/IN/although a/DT/a heap/NN/heap /:/( see/NN/see chapter/NN/chapter 12/CD/12 /,/, heaps/RB/heaps /:/) is/VBZ/is a/DT/a more/RBR/more common/JJ/common implementation/NNP/implementation. the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NN/applet introduced/VBD/introduced at/IN/at the/DT/the beginning/NN/beginning of/IN/of this/DT/this chapter/NN/chapter demonstrates/VBZ/demonstrates sorted/VBN/sorted as/IN/as well/RB/well as/IN/as unsorted/VBN/unsorted lists/NNP/lists. to/TO/to see/VB/see how/WRB/how sorted/VBN/sorted lists/NNS/lists work/VBP/work /,/, use/NN/use the/DT/the new/JJ/new button/NN/button to/TO/to create/VB/create a/DT/a new/JJ/new list/NN/list with/IN/with about/RB/about 20/CD/20 links/NNS/links /,/, and/CC/and when/WRB/when prompted/VBD/prompted /,/, click/NN/click on/IN/on the/DT/the sorted/VBN/sorted button/NNP/button. the/DT/the result/NN/result is/VBZ/is a/DT/a list/NN/list with/IN/with data/NNS/data in/IN/in sorted/JJ/sorted order/NN/order /,/, as/IN/as shown/NN/shown in/IN/in figure/NN/figure 5.11/CD/5.11. sorted/VBN/sorted lists/NNS/lists 213/CD/213 figure/NN/figure 5.11/CD/5.11 the/DT/the linklist/NN/linklist workshop/NN/workshop applet/NN/applet with/IN/with a/DT/a sorted/VBN/sorted list/NNP/list. use/NN/use the/DT/the ins/NNS/ins button/VBP/button to/TO/to insert/VB/insert a/DT/a new/JJ/new item/NNP/item. type/NN/type in/IN/in a/DT/a value/NN/value that/WDT/that will/MD/will fall/VB/fall somewhere/RB/somewhere in/IN/in the/DT/the middle/NN/middle of/IN/of the/DT/the list/NNP/list. watch/NN/watch as/IN/as the/DT/the algorithm/NN/algorithm traverses/VBZ/traverses the/DT/the links/NNS/links /,/, looking/VBG/looking for/IN/for the/DT/the appropriate/NN/appropriate insertion/NN/insertion place/NNP/place. when/WRB/when it/PRP/it finds/VBZ/finds the/DT/the correct/NN/correct location/NN/location /,/, it/PRP/it inserts/VBZ/inserts the/DT/the new/JJ/new link/NN/link /,/, as/IN/as shown/NN/shown in/IN/in figure/NN/figure 5.12/CD/5.12. with/IN/with the/DT/the next/JJ/next press/NN/press of/IN/of ins/NNS/ins /,/, the/DT/the list/NN/list will/MD/will be/VB/be redrawn/VBN/redrawn to/TO/to regularize/VB/regularize its/PRP$/its appearance/NNP/appearance. you/PRP/you can/MD/can also/RB/also find/VB/find a/DT/a specified/VBN/specified link/NN/link using/VBG/using the/DT/the find/NN/find button/NN/button and/CC/and delete/JJ/delete a/DT/a specified/VBN/specified link/NN/link using/VBG/using the/DT/the del/NN/del button/NNP/button. java/NN/java code/NN/code to/TO/to insert/VB/insert an/DT/an item/NN/item in/IN/in a/DT/a sorted/VBN/sorted list/NN/list to/TO/to insert/VB/insert an/DT/an item/NN/item in/IN/in a/DT/a sorted/VBN/sorted list/NN/list /,/, the/DT/the algorithm/NN/algorithm must/MD/must first/RB/first search/VB/search through/IN/through the/DT/the list/NN/list until/IN/until it/PRP/it finds/VBZ/finds the/DT/the appropriate/NN/appropriate place/NN/place to/TO/to put/VB/put the/DT/the item/NN/item this/DT/this is/VBZ/is just/RB/just before/IN/before the/DT/the first/JJ/first item/NN/item that/WDT/that s/VBZ/s larger/JJR/larger /,/, as/IN/as shown/NN/shown in/IN/in figure/NN/figure 5.12/CD/5.12. figure/NN/figure 5.12/CD/5.12 a/DT/a newly/RB/newly inserted/VBN/inserted link/NNP/link. when/WRB/when the/DT/the algorithm/NN/algorithm finds/NNS/finds where/WRB/where to/TO/to put/VB/put it/PRP/it /,/, the/DT/the item/NN/item can/MD/can be/VB/be inserted/VBN/inserted in/IN/in the/DT/the usual/JJ/usual way/NN/way by/IN/by changing/NN/changing next/IN/next in/IN/in the/DT/the new/JJ/new link/NN/link to/TO/to point/NN/point to/TO/to the/DT/the next/JJ/next link/NN/link and/CC/and changing/VBG/changing next/JJ/next in/IN/in the/DT/the previous/JJ/previous link/NN/link to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NNP/link. however/RB/however /,/, we/PRP/we need/VBP/need to/TO/to consider/VB/consider some/DT/some special/JJ/special cases/NNS/cases the/DT/the link/NN/link might/MD/might need/VB/need to/TO/to be/VB/be inserted/VBN/inserted at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list /,/, or/CC/or it/PRP/it might/MD/might need/VB/need to/TO/to go/VB/go at/IN/at the/DT/the end/NNP/end. let/NN/let s/VBZ/s look/NN/look at/IN/at the/DT/the code/NN/code public/NN/public void/VBD/void insert/NN/insert /:/( long/JJ/long key/JJ/key /NN/) insert/NN/insert in/IN/in order/NN/order /:/{ link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( key/JJ/key /NN/) make/NN/make new/JJ/new link/NN/link link/NN/link previous/JJ/previous =/NN/= null/NN/null start/NN/start at/IN/at first/JJ/first link/NN/link current/NN/current =/:/= first/JJ/first until/IN/until end/NN/end of/IN/of list/NN/list /,/, while/IN/while /NNP/( current/JJ/current !/./! =/:/= null/NN/null &&/:/&& key/JJ/key current.ddata/NN/current.ddata /:/) /:/{ or/CC/or key/JJ/key current/JJ/current /,/, previous/JJ/previous =/NN/= current/JJ/current current/JJ/current =/NN/= current.next/JJ/current.next go/NN/go to/TO/to next/JJ/next item/NN/item /:/} if/IN/if /CD/( previous/JJ/previous =/NN/= =/:/= null/NN/null /:/) at/IN/at beginning/NN/beginning of/IN/of list/NN/list first/RB/first =/./= newlink/NN/newlink first/RB/first newlink/VBP/newlink else/RB/else not/RB/not at/IN/at beginning/NN/beginning previous.next/JJ/previous.next =/NN/= newlink/NN/newlink old/JJ/old prev/NN/prev newlink/NN/newlink newlink.next/JJ/newlink.next =/NN/= current/JJ/current newlink/NN/newlink old/JJ/old current/NN/current /:/} end/NN/end insert/NN/insert /:/( /:/) we/PRP/we need/VBP/need to/TO/to maintain/VB/maintain a/DT/a previous/JJ/previous reference/NN/reference as/IN/as we/PRP/we move/VBP/move along/IN/along /,/, so/RB/so we/PRP/we can/MD/can modify/VB/modify the/DT/the previous/JJ/previous link/NN/link s/NNS/s next/JJ/next field/NN/field to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NNP/link. after/IN/after creating/VBG/creating the/DT/the new/JJ/new link/NN/link /,/, we/PRP/we 214/CD/214 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists prepare/VBP/prepare to/TO/to search/NN/search for/IN/for the/DT/the insertion/NN/insertion point/NN/point by/IN/by setting/NN/setting current/JJ/current to/TO/to first/JJ/first in/IN/in the/DT/the usual/JJ/usual way/NNP/way. we/PRP/we also/RB/also set/VBD/set previous/JJ/previous to/TO/to null/VB/null this/DT/this step/NN/step is/VBZ/is important/JJ/important because/IN/because later/JJ/later we/PRP/we ll/VBP/ll use/VBP/use this/DT/this null/NN/null value/NN/value to/TO/to determine/VB/determine whether/IN/whether we/PRP/we re/VBP/re still/RB/still at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NNP/list. the/DT/the while/NN/while loop/NN/loop is/VBZ/is similar/JJ/similar to/TO/to those/DT/those we/PRP/we ve/VBP/ve used/VBN/used before/IN/before to/TO/to search/NN/search for/IN/for the/DT/the insertion/NN/insertion point/NN/point /,/, but/CC/but there/EX/there s/VBZ/s an/DT/an added/VBN/added condition/NNP/condition. the/DT/the loop/NN/loop terminates/VBZ/terminates when/WRB/when the/DT/the key/JJ/key of/IN/of the/DT/the link/NN/link currently/RB/currently being/VBG/being examined/VBN/examined /-NONE-/( current.ddata/NNP/current.ddata /NNP/) is/VBZ/is no/DT/no longer/NN/longer smaller/JJR/smaller than/IN/than the/DT/the key/JJ/key of/IN/of the/DT/the link/NN/link being/VBG/being inserted/VBN/inserted /-NONE-/( key/JJ/key /NN/) this/DT/this is/VBZ/is the/DT/the most/RBS/most usual/JJ/usual case/NN/case /,/, where/WRB/where a/DT/a key/JJ/key is/VBZ/is inserted/VBN/inserted somewhere/RB/somewhere in/IN/in the/DT/the middle/NN/middle of/IN/of the/DT/the list/NNP/list. however/RB/however /,/, the/DT/the while/NN/while loop/NN/loop also/RB/also terminates/VBZ/terminates if/IN/if current/JJ/current is/VBZ/is null/NNP/null. this/DT/this happens/VBZ/happens at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /:/( the/DT/the next/JJ/next field/NN/field of/IN/of the/DT/the last/JJ/last element/NN/element is/VBZ/is null/JJ/null /NN/) /,/, or/CC/or if/IN/if the/DT/the list/NN/list is/VBZ/is empty/JJ/empty to/TO/to begin/VB/begin with/IN/with /CD/( first/JJ/first is/VBZ/is null/RB/null /:/) /./. when/WRB/when the/DT/the while/NN/while loop/NN/loop terminates/VBZ/terminates /,/, then/RB/then /,/, we/PRP/we may/MD/may be/VB/be at/IN/at the/DT/the beginning/NN/beginning /,/, the/DT/the middle/NN/middle /,/, or/CC/or the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /,/, or/CC/or the/DT/the list/NN/list may/MD/may be/VB/be empty/NNP/empty. if/IN/if we/PRP/we re/VBP/re at/IN/at the/DT/the beginning/NN/beginning /,/, or/CC/or the/DT/the list/NN/list is/VBZ/is empty/JJ/empty /,/, previous/JJ/previous will/MD/will be/VB/be null/JJ/null so/IN/so we/PRP/we set/VBP/set first/JJ/first to/TO/to the/DT/the new/JJ/new link/NNP/link. otherwise/RB/otherwise /,/, we/PRP/we re/VBP/re in/IN/in the/DT/the middle/NN/middle of/IN/of the/DT/the list/NN/list /,/, or/CC/or at/IN/at the/DT/the end/NN/end /,/, and/CC/and we/PRP/we set/VBD/set previous.next/JJ/previous.next to/TO/to the/DT/the new/JJ/new link/NNP/link. in/IN/in any/DT/any case/NN/case we/PRP/we set/VBD/set the/DT/the new/JJ/new link/NN/link s/NNS/s next/JJ/next field/NN/field to/TO/to current/NNP/current. if/IN/if we/PRP/we re/VBP/re at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /,/, current/JJ/current is/VBZ/is null/JJ/null /,/, so/RB/so the/DT/the new/JJ/new link/NN/link s/NNS/s next/JJ/next field/NN/field is/VBZ/is appropriately/RB/appropriately set/VBN/set to/TO/to this/DT/this value/NNP/value. the/DT/the sortedlist.java/NNP/sortedlist.java program/NN/program the/DT/the sortedlist.java/NNP/sortedlist.java example/NN/example shown/NN/shown in/IN/in listing/NN/listing 5.6/CD/5.6 presents/NNS/presents a/DT/a sortedlist/NN/sortedlist class/NN/class with/IN/with insert/NN/insert /:/( /:/) /,/, remove/VBP/remove /:/( /:/) /,/, and/CC/and displaylist/NN/displaylist /:/( /:/) methods/NNP/methods. only/RB/only the/DT/the insert/NN/insert /:/( /:/) routine/NN/routine is/VBZ/is different/JJ/different from/IN/from its/PRP$/its counterpart/NN/counterpart in/IN/in non/NN/non sorted/VBN/sorted lists/NNP/lists. listing/NN/listing 5.6/CD/5.6 the/DT/the sortedlist.java/NNP/sortedlist.java program/NN/program sortedlist.java/NN/sortedlist.java demonstrates/VBZ/demonstrates sorted/VBN/sorted list/NN/list to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java sortedlistapp/NN/sortedlistapp class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( long/JJ/long dd/NN/dd /:/) constructor/NN/constructor /:/{ ddata/NN/ddata =/:/= dd/NN/dd /:/} public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display this/DT/this link/NN/link /:/{ system.out.print/JJ/system.out.print /NN/( ddata/NN/ddata +/:/+ /:/) /:/} sorted/VBN/sorted lists/NNS/lists 215/CD/215 /CD/} end/NN/end class/NN/class link/NN/link class/NN/class sortedlist/NN/sortedlist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first item/NN/item on/IN/on list/NN/list public/JJ/public sortedlist/NN/sortedlist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null /:/} public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if no/DT/no links/NNS/links /VBP/{ return/NN/return /:/( first/JJ/first =/NN/= =/:/= null/NN/null /:/) /:/} public/JJ/public void/JJ/void insert/NN/insert /:/( long/JJ/long key/JJ/key /NN/) insert/NN/insert /,/, in/IN/in order/NN/order /:/{ link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( key/JJ/key /NN/) make/NN/make new/JJ/new link/NN/link link/NN/link previous/JJ/previous =/NN/= null/NN/null start/NN/start at/IN/at first/JJ/first link/NN/link current/NN/current =/:/= first/JJ/first until/IN/until end/NN/end of/IN/of list/NN/list /,/, while/IN/while /NNP/( current/JJ/current !/./! =/:/= null/NN/null &&/:/&& key/JJ/key current.ddata/NN/current.ddata /:/) /:/{ or/CC/or key/JJ/key current/JJ/current /,/, previous/JJ/previous =/NN/= current/JJ/current current/JJ/current =/NN/= current.next/JJ/current.next go/NN/go to/TO/to next/JJ/next item/NN/item /:/} if/IN/if /CD/( previous/JJ/previous =/NN/= =/:/= null/NN/null /:/) at/IN/at beginning/NN/beginning of/IN/of list/NN/list first/RB/first =/./= newlink/NN/newlink first/RB/first newlink/VBP/newlink else/RB/else not/RB/not at/IN/at beginning/NN/beginning previous.next/JJ/previous.next =/NN/= newlink/NN/newlink old/JJ/old prev/NN/prev newlink/NN/newlink newlink.next/JJ/newlink.next =/NN/= current/JJ/current newlink/NN/newlink old/JJ/old current/NN/current /:/} end/NN/end insert/NN/insert /:/( /:/) public/JJ/public link/NN/link remove/IN/remove /CD/( /CD/) return/NN/return &/CC/& delete/JJ/delete first/JJ/first link/NN/link /:/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) link/NN/link temp/NN/temp =/:/= first/JJ/first save/NN/save first/RB/first first/JJ/first =/NN/= first.next/JJ/first.next delete/NN/delete first/RB/first return/NN/return temp/NN/temp return/NN/return value/NN/value /:/} public/JJ/public void/JJ/void displaylist/NN/displaylist /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning of/IN/of list/NN/list 216/CD/216 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.6/CD/5.6 continued/VBN/continued while/IN/while /NNP/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} /:/} end/NN/end class/NN/class sortedlist/NN/sortedlist class/NN/class sortedlistapp/NN/sortedlistapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ create/JJ/create new/JJ/new list/NN/list sortedlist/NN/sortedlist thesortedlist/NN/thesortedlist =/:/= new/JJ/new sortedlist/NN/sortedlist /:/( /:/) thesortedlist.insert/JJ/thesortedlist.insert /NN/( 20/CD/20 /CD/) insert/NN/insert 2/CD/2 items/NNS/items thesortedlist.insert/JJ/thesortedlist.insert /NN/( 40/CD/40 /CD/) thesortedlist.displaylist/JJ/thesortedlist.displaylist /NN/( /:/) display/NN/display list/NN/list thesortedlist.insert/NN/thesortedlist.insert /:/( 10/CD/10 /CD/) insert/NN/insert 3/CD/3 more/JJR/more items/NNS/items thesortedlist.insert/JJ/thesortedlist.insert /NN/( 30/CD/30 /CD/) thesortedlist.insert/JJ/thesortedlist.insert /NN/( 50/CD/50 /CD/) thesortedlist.displaylist/JJ/thesortedlist.displaylist /NN/( /:/) display/NN/display list/NN/list thesortedlist.remove/JJ/thesortedlist.remove /NN/( /:/) remove/NN/remove an/DT/an item/NN/item thesortedlist.displaylist/NN/thesortedlist.displaylist /:/( /:/) display/NN/display list/NN/list /:/} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class sortedlistapp/NN/sortedlistapp in/IN/in main/NN/main /:/( /:/) we/PRP/we insert/VBP/insert two/CD/two items/NNS/items with/IN/with key/JJ/key values/NNS/values 20/CD/20 and/CC/and 40/CD/40. then/RB/then we/PRP/we insert/VBP/insert three/CD/three more/JJR/more items/NNS/items /,/, with/IN/with values/NNS/values 10/CD/10 /,/, 30/CD/30 /,/, and/CC/and 50/CD/50. these/DT/these values/NNS/values are/VBP/are inserted/VBN/inserted at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list /,/, in/IN/in the/DT/the middle/NN/middle /,/, and/CC/and at/IN/at the/DT/the end/NN/end /,/, showing/VBG/showing that/IN/that the/DT/the insert/NN/insert /:/( /:/) routine/NN/routine correctly/RB/correctly handles/VBZ/handles these/DT/these special/JJ/special cases/NNP/cases. finally/RB/finally /,/, we/PRP/we remove/VBP/remove one/CD/one item/NN/item /,/, to/TO/to show/VB/show removal/JJ/removal is/VBZ/is always/RB/always from/IN/from the/DT/the front/NN/front of/IN/of the/DT/the list/NNP/list. after/IN/after each/DT/each change/NN/change /,/, the/DT/the list/NN/list is/VBZ/is displayed/NNP/displayed. here/RB/here s/VBZ/s the/DT/the output/NN/output from/IN/from sortedlist.java/NNP/sortedlist.java list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 20/CD/20 40/CD/40 list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 10/CD/10 20/CD/20 30/CD/30 40/CD/40 50/CD/50 list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 20/CD/20 30/CD/30 40/CD/40 50/CD/50 sorted/VBN/sorted lists/NNS/lists 217/CD/217 listing/VBG/listing 5.6/CD/5.6 continued/VBN/continued efficiency/NN/efficiency of/IN/of sorted/VBN/sorted linked/VBN/linked lists/NNS/lists insertion/NN/insertion and/CC/and deletion/NN/deletion of/IN/of arbitrary/JJ/arbitrary items/NNS/items in/IN/in the/DT/the sorted/VBN/sorted linked/VBN/linked list/NN/list require/NN/require o/NN/o /:/( n/NN/n /:/) comparisons/NNS/comparisons /VBP/( n/2/-NONE-/n/2 on/IN/on the/DT/the average/NN/average /:/) because/IN/because the/DT/the appropriate/NN/appropriate location/NN/location must/MD/must be/VB/be found/VBN/found by/IN/by stepping/NN/stepping through/IN/through the/DT/the list/NNP/list. however/RB/however /,/, the/DT/the minimum/JJ/minimum value/NN/value can/MD/can be/VB/be found/VBN/found /,/, or/CC/or deleted/VBN/deleted /,/, in/IN/in o/NN/o /:/( 1/CD/1 /CD/) time/NN/time because/IN/because it/PRP/it s/VBZ/s at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NNP/list. if/IN/if an/DT/an application/NN/application frequently/RB/frequently accesses/VBZ/accesses the/DT/the minimum/JJ/minimum item/NN/item /,/, and/CC/and fast/RB/fast insertion/NN/insertion isn/NN/isn t/NN/t critical/JJ/critical /,/, then/RB/then a/DT/a sorted/VBN/sorted linked/VBN/linked list/NN/list is/VBZ/is an/DT/an effective/JJ/effective choice/NNP/choice. a/DT/a priority/NN/priority queue/NN/queue might/MD/might be/VB/be implemented/VBN/implemented by/IN/by a/DT/a sorted/JJ/sorted linked/VBN/linked list/NN/list /,/, for/IN/for example/NNP/example. list/NN/list insertion/NN/insertion sort/NN/sort a/DT/a sorted/JJ/sorted list/NN/list can/MD/can be/VB/be used/VBN/used as/IN/as a/DT/a fairly/RB/fairly efficient/JJ/efficient sorting/NN/sorting mechanism/NNP/mechanism. suppose/NN/suppose you/PRP/you have/VB/have an/DT/an array/NN/array of/IN/of unsorted/VBN/unsorted data/NNS/data items/NNP/items. if/IN/if you/PRP/you take/VBP/take the/DT/the items/NNS/items from/IN/from the/DT/the array/NN/array and/CC/and insert/NN/insert them/PRP/them one/CD/one by/IN/by one/CD/one into/IN/into the/DT/the sorted/JJ/sorted list/NN/list /,/, they/PRP/they ll/VBP/ll be/VB/be placed/VBN/placed in/IN/in sorted/VBN/sorted order/NN/order automatically/NNP/automatically. if/IN/if you/PRP/you then/RB/then remove/VBP/remove them/PRP/them from/IN/from the/DT/the list/NN/list and/CC/and put/VBD/put them/PRP/them back/RB/back in/IN/in the/DT/the array/NN/array /,/, the/DT/the array/NN/array will/MD/will be/VB/be sorted/NNP/sorted. this/DT/this type/NN/type of/IN/of sort/NN/sort turns/VBZ/turns out/RP/out to/TO/to be/VB/be substantially/RB/substantially more/JJR/more efficient/JJ/efficient than/IN/than the/DT/the more/RBR/more usual/JJ/usual insertion/NN/insertion sort/NN/sort within/IN/within an/DT/an array/NN/array /,/, described/VBD/described in/IN/in chapter/NN/chapter 3/CD/3 /,/, simple/JJ/simple sorting/NN/sorting /,/, because/IN/because fewer/JJR/fewer copies/NNS/copies are/VBP/are necessary/NNP/necessary. it/PRP/it s/VBZ/s still/RB/still an/DT/an o/NN/o /:/( n2/NNP/n2 /:/) process/NN/process because/IN/because inserting/VBG/inserting each/DT/each item/NN/item into/IN/into the/DT/the sorted/JJ/sorted list/NN/list involves/VBZ/involves comparing/VBG/comparing a/DT/a new/JJ/new item/NN/item with/IN/with an/DT/an average/JJ/average of/IN/of half/NN/half the/DT/the items/NNS/items already/RB/already in/IN/in the/DT/the list/NN/list /,/, and/CC/and there/EX/there are/VBP/are n/NN/n items/NNS/items to/TO/to insert/VB/insert /,/, resulting/VBG/resulting in/IN/in about/IN/about n2/4/-NONE-/n2/4 comparisons/NNP/comparisons. however/RB/however /,/, each/DT/each item/NN/item is/VBZ/is copied/VBN/copied only/RB/only twice/NN/twice once/RB/once from/IN/from the/DT/the array/NN/array to/TO/to the/DT/the list/NN/list and/CC/and once/RB/once from/IN/from the/DT/the list/NN/list to/TO/to the/DT/the array/NNP/array. n/NN/n */-NONE-/* 2/CD/2 copies/NNS/copies compares/VBZ/compares favorably/RB/favorably with/IN/with the/DT/the insertion/NN/insertion sort/NN/sort within/IN/within an/DT/an array/NN/array /,/, where/WRB/where there/EX/there are/VBP/are about/IN/about n2/NNP/n2 copies/NNP/copies. listing/NN/listing 5.7/CD/5.7 shows/NNS/shows the/DT/the listinsertionsort.java/NNP/listinsertionsort.java program/NN/program /,/, which/WDT/which starts/VBZ/starts with/IN/with an/DT/an array/NN/array of/IN/of unsorted/VBN/unsorted items/NNS/items of/IN/of type/NN/type link/NN/link /,/, inserts/NNS/inserts them/PRP/them into/IN/into a/DT/a sorted/JJ/sorted list/NN/list /:/( using/VBG/using a/DT/a constructor/NN/constructor /:/) /,/, and/CC/and then/RB/then removes/VBZ/removes them/PRP/them and/CC/and places/NNS/places them/PRP/them back/RB/back into/IN/into the/DT/the array/NNP/array. listing/NN/listing 5.7/CD/5.7 the/DT/the listinsertionsort.java/NNP/listinsertionsort.java program/NN/program listinsertionsort.java/NN/listinsertionsort.java demonstrates/VBZ/demonstrates sorted/VBN/sorted list/NN/list used/VBN/used for/IN/for sorting/NN/sorting to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java listinsertionsortapp/NN/listinsertionsortapp class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( long/JJ/long dd/NN/dd /:/) constructor/NN/constructor /:/{ ddata/NN/ddata =/:/= dd/NN/dd /:/} 218/CD/218 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists /:/} end/NN/end class/NN/class link/NN/link class/NN/class sortedlist/NN/sortedlist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first item/NN/item on/IN/on list/NN/list public/JJ/public sortedlist/NN/sortedlist /:/( /:/) constructor/NN/constructor /:/( no/DT/no args/NNS/args /VBP/) /:/{ first/JJ/first =/NN/= null/NN/null /:/} initialize/NN/initialize list/NN/list public/JJ/public sortedlist/NN/sortedlist /:/( link/NN/link /:/[ /:/] linkarr/NN/linkarr /:/) constructor/NN/constructor /:/( array/NN/array /:/{ as/IN/as argument/NN/argument /:/) first/JJ/first =/NN/= null/NN/null initialize/NN/initialize list/NN/list for/IN/for /CD/( int/NN/int j/NN/j =/:/= 0/-NONE-/0 j/NN/j linkarr.length/NN/linkarr.length j/NN/j +/:/+ +/:/+ /:/) copy/NN/copy array/NN/array insert/NN/insert /:/( linkarr/NN/linkarr /:/[ j/NN/j /:/] /:/) to/TO/to list/VB/list /:/} public/JJ/public void/JJ/void insert/NN/insert /:/( link/NN/link k/NN/k /:/) insert/NN/insert /:/( in/IN/in order/NN/order /:/) /:/{ link/NN/link previous/JJ/previous =/NN/= null/NN/null start/NN/start at/IN/at first/JJ/first link/NN/link current/NN/current =/:/= first/JJ/first until/IN/until end/NN/end of/IN/of list/NN/list /,/, while/IN/while /NNP/( current/JJ/current !/./! =/:/= null/NN/null &&/:/&& k.ddata/NNP/k.ddata current.ddata/NNP/current.ddata /NNP/) /NNP/{ or/CC/or key/JJ/key current/JJ/current /,/, previous/JJ/previous =/NN/= current/JJ/current current/JJ/current =/NN/= current.next/JJ/current.next go/NN/go to/TO/to next/JJ/next item/NN/item /:/} if/IN/if /CD/( previous/JJ/previous =/NN/= =/:/= null/NN/null /:/) at/IN/at beginning/NN/beginning of/IN/of list/NN/list first/RB/first =/./= k/NN/k first/RB/first k/NN/k else/RB/else not/RB/not at/IN/at beginning/NN/beginning previous.next/JJ/previous.next =/NN/= k/NN/k old/JJ/old prev/NN/prev k/NN/k k.next/JJ/k.next =/NN/= current/JJ/current k/NN/k old/JJ/old current/NN/current /:/} end/NN/end insert/NN/insert /:/( /:/) public/JJ/public link/NN/link remove/IN/remove /CD/( /CD/) return/NN/return &/CC/& delete/JJ/delete first/JJ/first link/NN/link /:/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) link/NN/link temp/NN/temp =/:/= first/JJ/first save/NN/save first/RB/first first/JJ/first =/NN/= first.next/JJ/first.next delete/NN/delete first/RB/first return/NN/return temp/NN/temp return/NN/return value/NN/value /:/} /:/} end/NN/end class/NN/class sortedlist/NN/sortedlist sorted/VBD/sorted lists/NNS/lists 219/CD/219 listing/VBG/listing 5.7/CD/5.7 continued/VBN/continued class/NN/class listinsertionsortapp/NN/listinsertionsortapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ int/NN/int size/NN/size =/:/= 10/CD/10 create/NN/create array/NN/array of/IN/of links/NNS/links link/VBP/link /:/[ /:/] linkarray/NN/linkarray =/:/= new/JJ/new link/NN/link /:/[ size/NN/size /:/] for/IN/for /CD/( int/NN/int j/NN/j =/:/= 0/-NONE-/0 j/NN/j size/NN/size j/NN/j +/:/+ +/:/+ /:/) fill/NN/fill array/NN/array with/IN/with links/NNS/links /:/{ random/NN/random number/NN/number int/NN/int n/NN/n =/:/= /:/( int/NN/int /:/) /:/( java.lang.math.random/JJ/java.lang.math.random /NN/( /:/) */-NONE-/* 99/CD/99 /CD/) link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( n/NN/n /:/) make/VB/make link/NN/link linkarray/NN/linkarray /:/[ j/NN/j /:/] =/:/= newlink/NN/newlink put/VBD/put in/IN/in array/NN/array /:/} display/NN/display array/NN/array contents/NNS/contents system.out.print/JJ/system.out.print /NN/( unsorted/VBD/unsorted array/NN/array /:/) for/IN/for /CD/( int/NN/int j/NN/j =/:/= 0/-NONE-/0 j/NN/j size/NN/size j/NN/j +/:/+ +/:/+ /:/) system.out.print/JJ/system.out.print /NN/( linkarray/NN/linkarray /:/[ j/NN/j /:/] .ddata/NNP/.ddata +/:/+ /:/) system.out.println/JJ/system.out.println /NN/( /:/) create/NN/create new/JJ/new list/NN/list initialized/VBN/initialized with/IN/with array/NN/array sortedlist/NN/sortedlist thesortedlist/NN/thesortedlist =/:/= new/JJ/new sortedlist/NN/sortedlist /:/( linkarray/NN/linkarray /:/) for/IN/for /CD/( int/NN/int j/NN/j =/:/= 0/-NONE-/0 j/NN/j size/NN/size j/NN/j +/:/+ +/:/+ /:/) links/NNS/links from/IN/from list/NN/list to/TO/to array/VB/array linkarray/NN/linkarray /:/[ j/NN/j /:/] =/:/= thesortedlist.remove/JJ/thesortedlist.remove /NN/( /:/) display/NN/display array/NN/array contents/NNS/contents system.out.print/JJ/system.out.print /NN/( sorted/VBD/sorted array/NN/array /:/) for/IN/for /CD/( int/NN/int j/NN/j =/:/= 0/-NONE-/0 j/NN/j size/NN/size j/NN/j +/:/+ +/:/+ /:/) system.out.print/JJ/system.out.print /NN/( linkarray/NN/linkarray /:/[ j/NN/j /:/] .ddata/NNP/.ddata +/:/+ /:/) system.out.println/JJ/system.out.println /NN/( /:/) /:/} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class listinsertionsortapp/NN/listinsertionsortapp this/DT/this program/NN/program displays/VBZ/displays the/DT/the values/NNS/values in/IN/in the/DT/the array/NN/array before/IN/before the/DT/the sorting/NN/sorting operation/NN/operation and/CC/and again/RB/again afterward/NNP/afterward. here/RB/here s/VBZ/s some/DT/some sample/NN/sample output/NN/output unsorted/VBD/unsorted array/NN/array 59/CD/59 69/CD/69 41/CD/41 56/CD/56 84/CD/84 15/CD/15 86/CD/86 81/CD/81 37/CD/37 35/CD/35 sorted/VBN/sorted array/NN/array 15/CD/15 35/CD/35 37/CD/37 41/CD/41 56/CD/56 59/CD/59 69/CD/69 81/CD/81 84/CD/84 86/CD/86 220/CD/220 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.7/CD/5.7 continued/VBN/continued the/DT/the output/NN/output will/MD/will be/VB/be different/JJ/different each/DT/each time/NN/time because/IN/because the/DT/the initial/JJ/initial values/NNS/values are/VBP/are generated/VBN/generated randomly/NNP/randomly. a/DT/a new/JJ/new constructor/NN/constructor for/IN/for sortedlist/NN/sortedlist takes/VBZ/takes an/DT/an array/NN/array of/IN/of link/NN/link objects/NNS/objects as/IN/as an/DT/an argument/NN/argument and/CC/and inserts/NNS/inserts the/DT/the entire/JJ/entire contents/NNS/contents of/IN/of this/DT/this array/NN/array into/IN/into the/DT/the newly/RB/newly created/VBN/created list/NNP/list. by/IN/by doing/VBG/doing so/RB/so /,/, it/PRP/it helps/VBZ/helps make/VB/make things/NNS/things easier/JJR/easier for/IN/for the/DT/the client/NN/client /:/( the/DT/the main/JJ/main /NN/( /:/) routine/NN/routine /:/) /./. we/PRP/we ve/VBP/ve also/RB/also made/VBN/made a/DT/a change/NN/change to/TO/to the/DT/the insert/NN/insert /:/( /:/) routine/NN/routine in/IN/in this/DT/this program/NNP/program. it/PRP/it now/RB/now accepts/VBZ/accepts a/DT/a link/NN/link object/NN/object as/IN/as an/DT/an argument/NN/argument /,/, rather/RB/rather than/IN/than a/DT/a long/NNP/long. we/PRP/we do/VBP/do this/DT/this so/RB/so we/PRP/we can/MD/can store/VB/store link/NN/link objects/NNS/objects in/IN/in the/DT/the array/NN/array and/CC/and insert/NN/insert them/PRP/them directly/RB/directly into/IN/into the/DT/the list/NNP/list. in/IN/in the/DT/the sortedlist.java/NNP/sortedlist.java program/NN/program /:/( listing/VBG/listing 5.6/CD/5.6 /CD/) /,/, it/PRP/it was/VBD/was more/JJR/more convenient/JJ/convenient to/TO/to have/VB/have the/DT/the insert/NN/insert /:/( /:/) routine/NN/routine create/NN/create each/DT/each link/NN/link object/NN/object /,/, using/VBG/using the/DT/the long/JJ/long value/NN/value passed/VBN/passed as/IN/as an/DT/an argument/NNP/argument. the/DT/the downside/NN/downside of/IN/of the/DT/the list/NN/list insertion/NN/insertion sort/NN/sort /,/, compared/VBN/compared with/IN/with an/DT/an array/NN/array based/VBN/based insertion/NN/insertion sort/NN/sort /,/, is/VBZ/is that/IN/that it/PRP/it takes/VBZ/takes somewhat/RB/somewhat more/JJR/more than/IN/than twice/NN/twice as/IN/as much/JJ/much memory/NN/memory the/DT/the array/NN/array and/CC/and linked/VBD/linked list/NN/list must/MD/must be/VB/be in/IN/in memory/NN/memory at/IN/at the/DT/the same/JJ/same time/NNP/time. however/RB/however /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a sorted/VBN/sorted linked/VBN/linked list/NN/list class/NN/class handy/NN/handy /,/, the/DT/the list/NN/list insertion/NN/insertion sort/NN/sort is/VBZ/is a/DT/a convenient/JJ/convenient way/NN/way to/TO/to sort/VB/sort arrays/NNS/arrays that/WDT/that aren/NNS/aren t/VBP/t too/RB/too large/NNP/large. doubly/RB/doubly linked/VBD/linked lists/NNS/lists let/VB/let s/NNS/s examine/NN/examine another/DT/another variation/NN/variation on/IN/on the/DT/the linked/VBN/linked list/NN/list the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list /:/( not/RB/not to/TO/to be/VB/be confused/VBN/confused with/IN/with the/DT/the double/JJ/double ended/VBD/ended list/NN/list /:/) /./. what/WP/what s/NNS/s the/DT/the advantage/NN/advantage of/IN/of a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list a/DT/a potential/JJ/potential problem/NN/problem with/IN/with ordinary/JJ/ordinary linked/VBN/linked lists/NNS/lists is/VBZ/is that/IN/that it/PRP/it s/VBZ/s difficult/JJ/difficult to/TO/to traverse/VB/traverse backward/NN/backward along/IN/along the/DT/the list/NNP/list. a/DT/a statement/NN/statement like/IN/like current/NN/current =/:/= current.next/JJ/current.next steps/NNS/steps conveniently/RB/conveniently to/TO/to the/DT/the next/JJ/next link/NN/link /,/, but/CC/but there/EX/there s/VBZ/s no/DT/no corresponding/NN/corresponding way/NN/way to/TO/to go/VB/go to/TO/to the/DT/the previous/JJ/previous link/NNP/link. depending/NN/depending on/IN/on the/DT/the application/NN/application /,/, this/DT/this limitation/NN/limitation could/MD/could pose/VB/pose problems/NNP/problems. for/IN/for example/NN/example /,/, imagine/NN/imagine a/DT/a text/NN/text editor/NN/editor in/IN/in which/WDT/which a/DT/a linked/VBD/linked list/NN/list is/VBZ/is used/VBN/used to/TO/to store/VB/store the/DT/the text/NNP/text. each/DT/each text/NN/text line/NN/line on/IN/on the/DT/the screen/NN/screen is/VBZ/is stored/VBN/stored as/RB/as a/DT/a string/NN/string object/NN/object embedded/VBD/embedded in/IN/in a/DT/a link/NNP/link. when/WRB/when the/DT/the editor/NN/editor s/VBZ/s user/NN/user moves/NNS/moves the/DT/the cursor/NN/cursor downward/NN/downward on/IN/on the/DT/the screen/NN/screen /,/, the/DT/the program/NN/program steps/VBZ/steps to/TO/to the/DT/the next/JJ/next link/NN/link to/TO/to manipulate/VB/manipulate or/CC/or display/VB/display the/DT/the new/JJ/new line/NNP/line. but/CC/but what/WP/what happens/NNS/happens if/IN/if the/DT/the user/NN/user moves/VBZ/moves the/DT/the cursor/NN/cursor upward/NN/upward in/IN/in an/DT/an ordinary/JJ/ordinary linked/VBN/linked list/NN/list /,/, you/PRP/you would/MD/would need/VB/need to/TO/to return/VB/return current/JJ/current /NN/( or/CC/or its/PRP$/its equivalent/NN/equivalent /:/) to/TO/to the/DT/the start/NN/start of/IN/of the/DT/the list/NN/list and/CC/and then/RB/then step/VB/step all/DT/all the/DT/the way/NN/way down/IN/down again/RB/again to/TO/to the/DT/the new/JJ/new current/JJ/current link/NNP/link. this/DT/this isn/NN/isn t/NN/t very/RB/very efficient/NNP/efficient. you/PRP/you want/VBP/want to/TO/to make/VB/make a/DT/a single/JJ/single step/NN/step upward/NNP/upward. the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list provides/VBZ/provides this/DT/this capability/NNP/capability. it/PRP/it allows/VBZ/allows you/PRP/you to/TO/to traverse/VB/traverse backward/NN/backward as/IN/as well/RB/well as/IN/as forward/RB/forward through/IN/through the/DT/the list/NNP/list. the/DT/the secret/NN/secret is/VBZ/is that/IN/that each/DT/each link/NN/link has/VBZ/has two/CD/two references/NNS/references to/TO/to other/JJ/other links/NNS/links instead/RB/instead of/IN/of one/NNP/one. the/DT/the first/JJ/first is/VBZ/is to/TO/to the/DT/the next/JJ/next link/NN/link /,/, as/IN/as in/IN/in ordinary/JJ/ordinary lists/NNP/lists. the/DT/the second/JJ/second is/VBZ/is to/TO/to the/DT/the previous/JJ/previous link/NNP/link. this/DT/this type/NN/type of/IN/of list/NN/list is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 5.13/CD/5.13. doubly/RB/doubly linked/VBN/linked lists/NNS/lists 221/CD/221 figure/NN/figure 5.13/CD/5.13 a/DT/a doubly/RB/doubly linked/VBN/linked list/NNP/list. the/DT/the beginning/NN/beginning of/IN/of the/DT/the specification/NN/specification for/IN/for the/DT/the link/NN/link class/NN/class in/IN/in a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list looks/NNS/looks like/IN/like this/DT/this class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link previous/JJ/previous previous/JJ/previous link/NN/link in/IN/in list/NN/list /:/... /:/} the/DT/the downside/NN/downside of/IN/of doubly/RB/doubly linked/VBN/linked lists/NNS/lists is/VBZ/is that/IN/that every/DT/every time/NN/time you/PRP/you insert/VBP/insert or/CC/or delete/JJ/delete a/DT/a link/NN/link you/PRP/you must/MD/must deal/VB/deal with/IN/with four/CD/four links/NNS/links instead/RB/instead of/IN/of two/CD/two two/CD/two attachments/NNS/attachments to/TO/to the/DT/the previous/JJ/previous link/NN/link and/CC/and two/CD/two attachments/NNS/attachments to/TO/to the/DT/the following/VBG/following one/NNP/one. also/RB/also /,/, of/IN/of course/NN/course /,/, each/DT/each link/NN/link is/VBZ/is a/DT/a little/RB/little bigger/JJR/bigger because/IN/because of/IN/of the/DT/the extra/JJ/extra reference/NNP/reference. a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list doesn/NN/doesn t/NN/t necessarily/RB/necessarily need/VBP/need to/TO/to be/VB/be a/DT/a double/JJ/double ended/VBN/ended list/NN/list /:/( keeping/VBG/keeping a/DT/a reference/NN/reference to/TO/to the/DT/the last/JJ/last element/NN/element on/IN/on the/DT/the list/NN/list /:/) but/CC/but creating/VBG/creating it/PRP/it this/DT/this way/NN/way is/VBZ/is useful/JJ/useful /,/, so/RB/so we/PRP/we ll/VBP/ll include/VBP/include it/PRP/it in/IN/in our/PRP$/our example/NNP/example. we/PRP/we ll/VBP/ll show/NN/show the/DT/the complete/JJ/complete listing/NN/listing for/IN/for the/DT/the doublylinked.java/NNP/doublylinked.java program/NN/program soon/RB/soon /,/, but/CC/but first/RB/first let/VBP/let s/NNS/s examine/VBP/examine some/DT/some of/IN/of the/DT/the methods/NNS/methods in/IN/in its/PRP$/its doublylinkedlist/NN/doublylinkedlist class/NNP/class. traversal/NN/traversal two/CD/two display/NN/display methods/NNS/methods demonstrate/VBP/demonstrate traversal/NN/traversal of/IN/of a/DT/a doubly/RB/doubly linked/VBN/linked list/NNP/list. the/DT/the displayforward/NN/displayforward /:/( /:/) method/NN/method is/VBZ/is the/DT/the same/JJ/same as/IN/as the/DT/the displaylist/NN/displaylist /:/( /:/) method/NN/method we/PRP/we ve/VBP/ve seen/VBN/seen in/IN/in ordinary/JJ/ordinary linked/VBN/linked lists/NNP/lists. the/DT/the displaybackward/NN/displaybackward /:/( /:/) method/NN/method is/VBZ/is similar/JJ/similar but/CC/but starts/VBZ/starts at/IN/at the/DT/the last/JJ/last element/NN/element in/IN/in the/DT/the list/NN/list and/CC/and proceeds/NNS/proceeds toward/IN/toward the/DT/the start/NN/start of/IN/of the/DT/the list/NN/list /,/, going/VBG/going to/TO/to each/DT/each element/NN/element s/VBZ/s previous/JJ/previous field/NNP/field. this/DT/this code/NN/code fragment/NN/fragment shows/VBZ/shows how/WRB/how this/DT/this process/NN/process works/VBZ/works link/NN/link current/JJ/current =/NN/= last/JJ/last start/NN/start at/IN/at end/NN/end while/IN/while /NNP/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until start/NN/start of/IN/of list/NN/list /,/, current/JJ/current =/NN/= current.previous/JJ/current.previous move/NN/move to/TO/to previous/JJ/previous link/NN/link 222/CD/222 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists first/RB/first last/JJ/last next/JJ/next prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev null/NN/null null/NN/null incidentally/RB/incidentally /,/, some/DT/some people/NNS/people take/VBP/take the/DT/the view/NN/view that/IN/that /,/, because/IN/because you/PRP/you can/MD/can go/VB/go either/DT/either way/NN/way equally/RB/equally easily/RB/easily on/IN/on a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list /,/, there/EX/there is/VBZ/is no/DT/no preferred/VBN/preferred direction/NN/direction and/CC/and therefore/RB/therefore terms/NNS/terms like/IN/like previous/JJ/previous and/CC/and next/JJ/next are/VBP/are inappropriate/NNP/inappropriate. if/IN/if you/PRP/you prefer/VBP/prefer /,/, you/PRP/you can/MD/can substitute/VB/substitute directionneutral/JJ/directionneutral terms/NNS/terms such/JJ/such as/IN/as left/NN/left and/CC/and right/NNP/right. insertion/NN/insertion we/PRP/we ve/VBP/ve included/VBN/included several/JJ/several insertion/NN/insertion routines/NNS/routines in/IN/in the/DT/the doublylinkedlist/NN/doublylinkedlist class/NNP/class. the/DT/the insertfirst/NN/insertfirst /:/( /:/) method/NN/method inserts/NNS/inserts at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list /,/, insertlast/JJ/insertlast /NN/( /:/) inserts/NNS/inserts at/IN/at the/DT/the end/NN/end /,/, and/CC/and insertafter/NN/insertafter /:/( /:/) inserts/NNS/inserts following/VBG/following an/DT/an element/NN/element with/IN/with a/DT/a specified/VBN/specified key/NNP/key. unless/IN/unless the/DT/the list/NN/list is/VBZ/is empty/JJ/empty /,/, the/DT/the insertfirst/NN/insertfirst /:/( /:/) routine/NN/routine changes/NNS/changes the/DT/the previous/JJ/previous field/NN/field in/IN/in the/DT/the old/JJ/old first/JJ/first link/NN/link to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NN/link and/CC/and changes/NNS/changes the/DT/the next/JJ/next field/NN/field in/IN/in the/DT/the new/JJ/new link/NN/link to/TO/to point/NN/point to/TO/to the/DT/the old/JJ/old first/JJ/first link/NNP/link. finally/RB/finally /,/, it/PRP/it sets/VBZ/sets first/JJ/first to/TO/to point/NN/point to/TO/to the/DT/the new/JJ/new link/NNP/link. this/DT/this process/NN/process is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 5.14/CD/5.14. doubly/RB/doubly linked/VBN/linked lists/NNS/lists 223/CD/223 first/JJ/first last/JJ/last next/JJ/next old/JJ/old first/JJ/first link/NN/link prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev null/NN/null null/NN/null new/JJ/new link/NN/link figure/NN/figure 5.14/CD/5.14 insertion/NN/insertion at/IN/at the/DT/the beginning/NNP/beginning. if/IN/if the/DT/the list/NN/list is/VBZ/is empty/JJ/empty /,/, the/DT/the last/JJ/last field/NN/field must/MD/must be/VB/be changed/VBN/changed instead/RB/instead of/IN/of the/DT/the first.previous/JJ/first.previous field/NNP/field. here/RB/here s/VBZ/s the/DT/the code/NN/code if/IN/if /CD/( isempty/NN/isempty /:/( /:/) /:/) if/IN/if empty/JJ/empty list/NN/list /,/, last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last else/NN/else first.previous/JJ/first.previous =/NN/= newlink/NN/newlink newlink/NN/newlink old/JJ/old first/JJ/first newlink.next/JJ/newlink.next =/NN/= first/RB/first newlink/VBP/newlink old/JJ/old first/JJ/first first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink the/DT/the insertlast/NN/insertlast /:/( /:/) method/NN/method is/VBZ/is the/DT/the same/JJ/same process/NN/process applied/VBD/applied to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list it/PRP/it s/VBZ/s a/DT/a mirror/NN/mirror image/NN/image of/IN/of insertfirst/JJ/insertfirst /NN/( /:/) /./. the/DT/the insertafter/NN/insertafter /:/( /:/) method/NN/method inserts/NNS/inserts a/DT/a new/JJ/new link/NN/link following/VBG/following the/DT/the link/NN/link with/IN/with a/DT/a specified/VBN/specified key/JJ/key value/NNP/value. it/PRP/it s/VBZ/s a/DT/a bit/NN/bit more/RBR/more complicated/JJ/complicated because/IN/because four/CD/four connections/NNS/connections must/MD/must be/VB/be made/NNP/made. first/RB/first /,/, the/DT/the link/NN/link with/IN/with the/DT/the specified/VBN/specified key/JJ/key value/NN/value must/MD/must be/VB/be found/NNP/found. this/DT/this procedure/NN/procedure is/VBZ/is handled/VBN/handled the/DT/the same/JJ/same way/NN/way as/IN/as the/DT/the find/NN/find /:/( /:/) routine/NN/routine in/IN/in the/DT/the linklist2.java/NNP/linklist2.java program/NN/program /:/( listing/VBG/listing 5.2/CD/5.2 /CD/) /./. then/RB/then /,/, assuming/VBG/assuming we/PRP/we re/VBP/re not/RB/not at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /,/, two/CD/two connections/NNS/connections must/MD/must be/VB/be made/VBN/made between/IN/between the/DT/the new/JJ/new link/NN/link and/CC/and the/DT/the next/JJ/next link/NN/link /,/, and/CC/and two/CD/two more/RBR/more between/IN/between current/JJ/current and/CC/and the/DT/the new/JJ/new link/NNP/link. this/DT/this process/NN/process is/VBZ/is shown/VBN/shown in/IN/in figure/NN/figure 5.15/CD/5.15. 224/CD/224 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists first/RB/first last/JJ/last next/JJ/next current/JJ/current prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev next/IN/next prev/NN/prev null/NN/null null/NN/null figure/NN/figure 5.15/CD/5.15 insertion/NN/insertion at/IN/at an/DT/an arbitrary/JJ/arbitrary location/NNP/location. if/IN/if the/DT/the new/JJ/new link/NN/link will/MD/will be/VB/be inserted/VBN/inserted at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /,/, its/PRP$/its next/JJ/next field/NN/field must/MD/must point/VB/point to/TO/to null/VB/null /,/, and/CC/and last/JJ/last must/MD/must point/VB/point to/TO/to the/DT/the new/JJ/new link/NNP/link. here/RB/here s/VBZ/s the/DT/the insertafter/NN/insertafter /:/( /:/) code/NN/code that/IN/that deals/NNS/deals with/IN/with the/DT/the links/NNS/links if/IN/if /CD/( current/JJ/current =/NN/= =/:/= last/JJ/last /NN/) if/IN/if last/JJ/last link/NN/link /,/, /:/{ newlink.next/JJ/newlink.next =/NN/= null/NN/null newlink/NN/newlink null/NN/null last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last /NN/} else/RB/else not/RB/not last/JJ/last link/NN/link /,/, /:/{ newlink.next/JJ/newlink.next =/NN/= current.next/JJ/current.next newlink/NN/newlink old/JJ/old next/JJ/next newlink/NN/newlink old/JJ/old next/JJ/next current.next.previous/JJ/current.next.previous =/NN/= newlink/NN/newlink /:/} newlink.previous/JJ/newlink.previous =/NN/= current/JJ/current old/JJ/old current/JJ/current newlink/NN/newlink current.next/JJ/current.next =/NN/= newlink/NN/newlink old/JJ/old current/NN/current newlink/NN/newlink perhaps/RB/perhaps you/PRP/you re/VBP/re unfamiliar/JJ/unfamiliar with/IN/with the/DT/the use/NN/use of/IN/of two/CD/two dot/JJ/dot operators/NNS/operators in/IN/in the/DT/the same/JJ/same expression/NNP/expression. it/PRP/it s/VBZ/s a/DT/a natural/JJ/natural extension/NN/extension of/IN/of a/DT/a single/JJ/single dot/NN/dot operator/NNP/operator. the/DT/the expression/NN/expression current.next.previous/JJ/current.next.previous means/NNS/means the/DT/the previous/JJ/previous field/NN/field of/IN/of the/DT/the link/NN/link referred/VBD/referred to/TO/to by/IN/by the/DT/the next/JJ/next field/NN/field in/IN/in the/DT/the link/NN/link current/NNP/current. deletion/NN/deletion there/RB/there are/VBP/are three/CD/three deletion/NN/deletion routines/NNS/routines deletefirst/VBP/deletefirst /:/( /:/) /,/, deletelast/JJ/deletelast /NN/( /:/) /,/, and/CC/and deletekey/NN/deletekey /:/( /:/) /./. the/DT/the first/JJ/first two/CD/two are/VBP/are fairly/RB/fairly straightforward/NNP/straightforward. in/IN/in deletekey/NN/deletekey /:/( /:/) /,/, the/DT/the key/JJ/key being/VBG/being deleted/VBN/deleted is/VBZ/is current/NNP/current. assuming/VBG/assuming the/DT/the link/NN/link to/TO/to be/VB/be deleted/VBN/deleted is/VBZ/is neither/DT/neither the/DT/the first/JJ/first nor/CC/nor the/DT/the last/JJ/last one/CD/one in/IN/in the/DT/the list/NN/list /,/, the/DT/the next/JJ/next field/NN/field of/IN/of current.previous/JJ/current.previous /NN/( the/DT/the link/NN/link before/IN/before the/DT/the one/CD/one being/VBG/being deleted/VBN/deleted /-NONE-/) is/VBZ/is set/VBN/set to/TO/to point/NN/point to/TO/to current.next/JJ/current.next /NN/( the/DT/the link/NN/link following/VBG/following the/DT/the one/CD/one being/VBG/being deleted/VBN/deleted /-NONE-/) /,/, and/CC/and the/DT/the previous/JJ/previous field/NN/field of/IN/of current.next/JJ/current.next is/VBZ/is set/VBN/set to/TO/to point/NN/point to/TO/to current.previous/NNP/current.previous. this/DT/this disconnects/VBZ/disconnects the/DT/the current/JJ/current link/NN/link from/IN/from the/DT/the list/NNP/list. figure/NN/figure 5.16/CD/5.16 shows/NNS/shows how/WRB/how this/DT/this disconnection/NN/disconnection looks/VBZ/looks /,/, and/CC/and the/DT/the following/VBG/following two/CD/two statements/NNS/statements carry/VBP/carry it/PRP/it out/RP/out current.previous.next/JJ/current.previous.next =/NN/= current.next/JJ/current.next current.next.previous/JJ/current.next.previous =/NN/= current.previous/JJ/current.previous doubly/RB/doubly linked/VBN/linked lists/NNS/lists 225/CD/225 first/JJ/first current.prev/NN/current.prev last/JJ/last next/JJ/next prev/NN/prev prev/NN/prev prev/NN/prev next/IN/next next/JJ/next null/NN/null null/NN/null current/NN/current current.next/JJ/current.next figure/NN/figure 5.16/CD/5.16 deleting/VBG/deleting an/DT/an arbitrary/JJ/arbitrary link/NNP/link. special/JJ/special cases/NNS/cases arise/VBP/arise if/IN/if the/DT/the link/NN/link to/TO/to be/VB/be deleted/VBN/deleted is/VBZ/is either/DT/either the/DT/the first/JJ/first or/CC/or last/JJ/last in/IN/in the/DT/the list/NN/list because/IN/because first/JJ/first or/CC/or last/JJ/last must/MD/must be/VB/be set/VBN/set to/TO/to point/NN/point to/TO/to the/DT/the next/JJ/next or/CC/or the/DT/the previous/JJ/previous link/NNP/link. here/RB/here s/VBZ/s the/DT/the code/NN/code from/IN/from deletekey/NN/deletekey /:/( /:/) for/IN/for dealing/NN/dealing with/IN/with link/NN/link connections/NNS/connections if/IN/if /CD/( current/JJ/current =/NN/= =/:/= first/JJ/first /NN/) first/RB/first item/NN/item first/RB/first =/./= current.next/JJ/current.next first/JJ/first old/JJ/old next/JJ/next else/NN/else not/RB/not first/JJ/first old/JJ/old previous/JJ/previous old/JJ/old next/JJ/next current.previous.next/JJ/current.previous.next =/NN/= current.next/JJ/current.next if/IN/if /NNP/( current/JJ/current =/NN/= =/:/= last/JJ/last /NN/) last/JJ/last item/NN/item last/JJ/last =/NN/= current.previous/JJ/current.previous old/JJ/old previous/JJ/previous last/JJ/last else/NN/else not/RB/not last/JJ/last old/JJ/old previous/JJ/previous old/JJ/old next/JJ/next current.next.previous/JJ/current.next.previous =/NN/= current.previous/JJ/current.previous the/DT/the doublylinked.java/NNP/doublylinked.java program/NN/program listing/NN/listing 5.8/CD/5.8 shows/NNS/shows the/DT/the complete/JJ/complete doublylinked.java/NN/doublylinked.java program/NN/program /,/, which/WDT/which includes/VBZ/includes all/DT/all the/DT/the routines/NNS/routines just/RB/just discussed/NNP/discussed. listing/NN/listing 5.8/CD/5.8 the/DT/the doublylinked.java/NNP/doublylinked.java program/NN/program doublylinked.java/NN/doublylinked.java demonstrates/VBZ/demonstrates doubly/RB/doubly linked/VBN/linked list/NN/list to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java doublylinkedapp/NN/doublylinkedapp class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link previous/JJ/previous previous/JJ/previous link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( long/JJ/long d/NN/d /:/) constructor/NN/constructor /:/{ ddata/NN/ddata =/:/= d/NN/d /:/} public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display this/DT/this link/NN/link /:/{ system.out.print/JJ/system.out.print /NN/( ddata/NN/ddata +/:/+ /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link class/NN/class doublylinkedlist/NN/doublylinkedlist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first item/NN/item private/JJ/private link/NN/link last/JJ/last ref/NN/ref to/TO/to last/JJ/last item/NN/item public/JJ/public doublylinkedlist/NN/doublylinkedlist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null no/DT/no items/NNS/items on/IN/on list/NN/list yet/RB/yet last/JJ/last =/NN/= null/NN/null /:/} 226/CD/226 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if no/DT/no links/NNS/links /VBP/{ return/NN/return first/RB/first =/./= =/:/= null/NN/null /:/} public/JJ/public void/JJ/void insertfirst/NN/insertfirst /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert at/IN/at front/NN/front of/IN/of list/NN/list /:/{ link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) make/VB/make new/JJ/new link/NN/link if/IN/if /CD/( isempty/NN/isempty /:/( /:/) /:/) if/IN/if empty/JJ/empty list/NN/list /,/, last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last else/NN/else first.previous/JJ/first.previous =/NN/= newlink/NN/newlink newlink/NN/newlink old/JJ/old first/JJ/first newlink.next/JJ/newlink.next =/NN/= first/RB/first newlink/VBP/newlink old/JJ/old first/JJ/first first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink /:/} public/JJ/public void/JJ/void insertlast/NN/insertlast /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert at/IN/at end/NN/end of/IN/of list/NN/list /:/{ link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) make/VB/make new/JJ/new link/NN/link if/IN/if /CD/( isempty/NN/isempty /:/( /:/) /:/) if/IN/if empty/JJ/empty list/NN/list /,/, first/JJ/first =/NN/= newlink/NN/newlink first/RB/first newlink/VBP/newlink else/RB/else /:/{ last.next/JJ/last.next =/NN/= newlink/NN/newlink old/JJ/old last/JJ/last newlink/NN/newlink newlink.previous/JJ/newlink.previous =/NN/= last/JJ/last old/JJ/old last/JJ/last newlink/NN/newlink /:/} last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last /NN/} public/JJ/public link/NN/link deletefirst/NN/deletefirst /:/( /:/) delete/JJ/delete first/JJ/first link/NN/link /:/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) link/NN/link temp/NN/temp =/:/= first/JJ/first if/IN/if /NNP/( first.next/JJ/first.next =/NN/= =/:/= null/NN/null /:/) if/IN/if only/RB/only one/CD/one item/NN/item last/JJ/last =/NN/= null/NN/null null/NN/null last/JJ/last else/NN/else first.next.previous/JJ/first.next.previous =/NN/= null/NN/null null/NN/null old/JJ/old next/JJ/next first/JJ/first =/NN/= first.next/JJ/first.next first/JJ/first old/JJ/old next/JJ/next return/NN/return temp/NN/temp /:/} public/JJ/public link/NN/link deletelast/NN/deletelast /:/( /:/) delete/JJ/delete last/JJ/last link/NN/link doubly/RB/doubly linked/VBN/linked lists/NNS/lists 227/CD/227 listing/VBG/listing 5.8/CD/5.8 continued/VBN/continued /-NONE-/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) link/NN/link temp/NN/temp =/:/= last/JJ/last if/IN/if /CD/( first.next/JJ/first.next =/NN/= =/:/= null/NN/null /:/) if/IN/if only/RB/only one/CD/one item/NN/item first/RB/first =/./= null/RB/null first/JJ/first null/NN/null else/RB/else last.previous.next/JJ/last.previous.next =/NN/= null/NN/null old/JJ/old previous/JJ/previous null/NN/null last/JJ/last =/NN/= last.previous/JJ/last.previous old/JJ/old previous/JJ/previous last/JJ/last return/NN/return temp/NN/temp /:/} insert/NN/insert dd/NN/dd just/RB/just after/IN/after key/JJ/key public/JJ/public boolean/JJ/boolean insertafter/NN/insertafter /:/( long/JJ/long key/JJ/key /,/, long/RB/long dd/VBD/dd /CD/) /CD/{ /CD/( assumes/NNS/assumes non/IN/non empty/JJ/empty list/NN/list /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning while/IN/while /CD/( current.ddata/NNP/current.ddata !/./! =/:/= key/JJ/key /NN/) until/IN/until match/NN/match is/VBZ/is found/VBN/found /,/, /NNP/{ current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link if/IN/if /CD/( current/JJ/current =/NN/= =/:/= null/NN/null /:/) return/NN/return false/NN/false didn/NN/didn t/NN/t find/NN/find it/PRP/it /:/} link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) make/VB/make new/JJ/new link/NN/link if/IN/if /CD/( current/JJ/current =/NN/= =/:/= last/JJ/last /NN/) if/IN/if last/JJ/last link/NN/link /,/, /:/{ newlink.next/JJ/newlink.next =/NN/= null/NN/null newlink/NN/newlink null/NN/null last/JJ/last =/NN/= newlink/NN/newlink newlink/NN/newlink last/JJ/last /NN/} else/RB/else not/RB/not last/JJ/last link/NN/link /,/, /:/{ newlink.next/JJ/newlink.next =/NN/= current.next/JJ/current.next newlink/NN/newlink old/JJ/old next/JJ/next newlink/NN/newlink old/JJ/old next/JJ/next current.next.previous/JJ/current.next.previous =/NN/= newlink/NN/newlink /:/} newlink.previous/JJ/newlink.previous =/NN/= current/JJ/current old/JJ/old current/JJ/current newlink/NN/newlink current.next/JJ/current.next =/NN/= newlink/NN/newlink old/JJ/old current/NN/current newlink/NN/newlink return/NN/return true/NN/true found/VBD/found it/PRP/it /,/, did/VBD/did insertion/NN/insertion /:/} public/JJ/public link/NN/link deletekey/NN/deletekey /:/( long/JJ/long key/JJ/key /NN/) delete/NN/delete item/NN/item w//NN/w/ given/VBN/given key/JJ/key /NN/{ /:/( assumes/NNS/assumes non/VBP/non empty/JJ/empty list/NN/list /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning 228/CD/228 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.8/CD/5.8 continued/VBN/continued while/IN/while /NNP/( current.ddata/NNP/current.ddata !/./! =/:/= key/JJ/key /NN/) until/IN/until match/NN/match is/VBZ/is found/VBN/found /,/, /NNP/{ current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link if/IN/if /CD/( current/JJ/current =/NN/= =/:/= null/NN/null /:/) return/NN/return null/NN/null didn/NN/didn t/NN/t find/NN/find it/PRP/it /:/} if/IN/if /CD/( current/JJ/current =/NN/= =/:/= first/JJ/first /NN/) found/VBD/found it/PRP/it first/RB/first item/VBP/item first/RB/first =/:/= current.next/JJ/current.next first/JJ/first old/JJ/old next/JJ/next else/NN/else not/RB/not first/JJ/first old/JJ/old previous/JJ/previous old/JJ/old next/JJ/next current.previous.next/JJ/current.previous.next =/NN/= current.next/JJ/current.next if/IN/if /NNP/( current/JJ/current =/NN/= =/:/= last/JJ/last /NN/) last/JJ/last item/NN/item last/JJ/last =/NN/= current.previous/JJ/current.previous old/JJ/old previous/JJ/previous last/JJ/last else/NN/else not/RB/not last/JJ/last old/JJ/old previous/JJ/previous old/JJ/old next/JJ/next current.next.previous/JJ/current.next.previous =/NN/= current.previous/JJ/current.previous return/NN/return current/JJ/current return/NN/return value/NN/value /:/} public/JJ/public void/JJ/void displayforward/NN/displayforward /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( list/NN/list /:/( first/JJ/first last/JJ/last /NN/) /:/) link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) display/NN/display data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} public/JJ/public void/JJ/void displaybackward/NN/displaybackward /:/( /:/) /:/{ system.out.print/JJ/system.out.print /NN/( list/NN/list /:/( last/JJ/last first/JJ/first /NN/) /:/) link/NN/link current/JJ/current =/NN/= last/JJ/last start/NN/start at/IN/at end/NN/end while/IN/while /NNP/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until start/NN/start of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) display/NN/display data/NNS/data current/JJ/current =/NN/= current.previous/JJ/current.previous move/NN/move to/TO/to previous/JJ/previous link/NN/link /:/} doubly/RB/doubly linked/VBN/linked lists/NNS/lists 229/CD/229 listing/VBG/listing 5.8/CD/5.8 continued/VBN/continued system.out.println/JJ/system.out.println /NN/( /:/) /:/} /:/} end/NN/end class/NN/class doublylinkedlist/NN/doublylinkedlist class/NN/class doublylinkedapp/NN/doublylinkedapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ make/VB/make a/DT/a new/JJ/new list/NN/list doublylinkedlist/NN/doublylinkedlist thelist/NN/thelist =/:/= new/JJ/new doublylinkedlist/NN/doublylinkedlist /:/( /:/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 22/CD/22 /CD/) insert/NN/insert at/IN/at front/NN/front thelist.insertfirst/JJ/thelist.insertfirst /NN/( 44/CD/44 /CD/) thelist.insertfirst/JJ/thelist.insertfirst /NN/( 66/CD/66 /CD/) thelist.insertlast/JJ/thelist.insertlast /NN/( 11/CD/11 /CD/) insert/NN/insert at/IN/at rear/JJ/rear thelist.insertlast/JJ/thelist.insertlast /NN/( 33/CD/33 /CD/) thelist.insertlast/JJ/thelist.insertlast /NN/( 55/CD/55 /CD/) thelist.displayforward/JJ/thelist.displayforward /NN/( /:/) display/NN/display list/NN/list forward/RB/forward thelist.displaybackward/JJ/thelist.displaybackward /NN/( /:/) display/NN/display list/NN/list backward/NN/backward thelist.deletefirst/JJ/thelist.deletefirst /NN/( /:/) delete/JJ/delete first/JJ/first item/NN/item thelist.deletelast/JJ/thelist.deletelast /NN/( /:/) delete/JJ/delete last/JJ/last item/NN/item thelist.deletekey/JJ/thelist.deletekey /NN/( 11/CD/11 /CD/) delete/JJ/delete item/NN/item with/IN/with key/JJ/key 11/CD/11 thelist.displayforward/JJ/thelist.displayforward /NN/( /:/) display/NN/display list/NN/list forward/RB/forward thelist.insertafter/JJ/thelist.insertafter /NN/( 22/CD/22 /,/, 77/CD/77 /:/) insert/NN/insert 77/CD/77 after/IN/after 22/CD/22 thelist.insertafter/JJ/thelist.insertafter /NN/( 33/CD/33 /,/, 88/CD/88 /:/) insert/NN/insert 88/CD/88 after/IN/after 33/CD/33 thelist.displayforward/JJ/thelist.displayforward /NN/( /:/) display/NN/display list/NN/list forward/RB/forward /./} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class doublylinkedapp/NN/doublylinkedapp in/IN/in main/NN/main /:/( /:/) we/PRP/we insert/VBP/insert some/DT/some items/NNS/items at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list and/CC/and at/IN/at the/DT/the end/NN/end /,/, display/NN/display the/DT/the items/NNS/items going/VBG/going both/DT/both forward/NN/forward and/CC/and backward/NN/backward /,/, delete/JJ/delete the/DT/the first/JJ/first and/CC/and last/JJ/last items/NNS/items and/CC/and the/DT/the item/NN/item with/IN/with key/JJ/key 11/CD/11 /,/, display/NN/display the/DT/the list/NN/list again/RB/again /./( forward/RB/forward only/RB/only /:/) /,/, insert/NN/insert two/CD/two items/NNS/items using/VBG/using the/DT/the insertafter/NN/insertafter /:/( /:/) method/NN/method /,/, and/CC/and display/NN/display the/DT/the list/NN/list again/NNP/again. here/RB/here s/VBZ/s the/DT/the output/NN/output 230/CD/230 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.8/CD/5.8 continued/VBN/continued list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 66/CD/66 44/CD/44 22/CD/22 11/CD/11 33/CD/33 55/CD/55 list/NN/list /:/( last/JJ/last first/JJ/first /NN/) 55/CD/55 33/CD/33 11/CD/11 22/CD/22 44/CD/44 66/CD/66 list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 44/CD/44 22/CD/22 33/CD/33 list/NN/list /:/( first/JJ/first last/JJ/last /NN/) 44/CD/44 22/CD/22 77/CD/77 33/CD/33 88/CD/88 the/DT/the deletion/NN/deletion methods/NNS/methods and/CC/and the/DT/the insertafter/NN/insertafter /:/( /:/) method/NN/method assume/NN/assume that/WDT/that the/DT/the list/NN/list isn/NN/isn t/NN/t empty/NNP/empty. although/IN/although for/IN/for simplicity/NN/simplicity we/PRP/we don/VBP/don t/NN/t show/NN/show it/PRP/it in/IN/in main/JJ/main /NN/( /:/) /,/, isempty/NN/isempty /:/( /:/) should/MD/should be/VB/be used/VBN/used to/TO/to verify/VB/verify that/IN/that there/EX/there s/NNS/s something/NN/something in/IN/in the/DT/the list/NN/list before/IN/before attempting/VBG/attempting such/JJ/such insertions/NNS/insertions and/CC/and deletions/NNP/deletions. doubly/RB/doubly linked/VBD/linked list/NN/list as/IN/as basis/NN/basis for/IN/for deques/NNS/deques a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list can/MD/can be/VB/be used/VBN/used as/IN/as the/DT/the basis/NN/basis for/IN/for a/DT/a deque/NN/deque /,/, mentioned/VBD/mentioned in/IN/in the/DT/the preceding/NN/preceding chapter/NNP/chapter. in/IN/in a/DT/a deque/NN/deque you/PRP/you can/MD/can insert/VB/insert and/CC/and delete/VB/delete at/IN/at either/DT/either end/NN/end /,/, and/CC/and the/DT/the doubly/RB/doubly linked/VBN/linked list/NN/list provides/VBZ/provides this/DT/this capability/NNP/capability. iterators/NNS/iterators we/PRP/we ve/VBP/ve seen/VBN/seen how/WRB/how the/DT/the user/NN/user of/IN/of a/DT/a list/NN/list can/MD/can find/VB/find a/DT/a link/NN/link with/IN/with a/DT/a given/VBN/given key/JJ/key using/NN/using a/DT/a find/NN/find /:/( /:/) method/NNP/method. the/DT/the method/NN/method starts/VBZ/starts at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list and/CC/and examines/NNS/examines each/DT/each link/NN/link until/IN/until it/PRP/it finds/VBZ/finds one/CD/one matching/VBG/matching the/DT/the search/NN/search key/NNP/key. other/JJ/other operations/NNS/operations we/PRP/we ve/VBP/ve looked/VBN/looked at/IN/at /,/, such/JJ/such as/IN/as deleting/NN/deleting a/DT/a specified/VBN/specified link/NN/link or/CC/or inserting/VBG/inserting before/IN/before or/CC/or after/IN/after a/DT/a specified/VBN/specified link/NN/link /,/, also/RB/also involve/VBP/involve searching/VBG/searching through/IN/through the/DT/the list/NN/list to/TO/to find/VB/find the/DT/the specified/VBN/specified link/NNP/link. however/RB/however /,/, these/DT/these methods/NNS/methods don/VBP/don t/NN/t give/VB/give the/DT/the user/NN/user any/DT/any control/NN/control over/IN/over the/DT/the traversal/NN/traversal to/TO/to the/DT/the specified/VBN/specified item/NNP/item. suppose/NN/suppose you/PRP/you wanted/VBD/wanted to/TO/to traverse/VB/traverse a/DT/a list/NN/list /,/, performing/VBG/performing some/DT/some operation/NN/operation on/IN/on certain/JJ/certain links/NNP/links. for/IN/for example/NN/example /,/, imagine/NN/imagine a/DT/a personnel/NN/personnel file/NN/file stored/VBD/stored as/IN/as a/DT/a linked/VBN/linked list/NNP/list. you/PRP/you might/MD/might want/VB/want to/TO/to increase/VB/increase the/DT/the wages/NNS/wages of/IN/of all/DT/all employees/NNS/employees who/WP/who were/VBD/were being/VBG/being paid/VBN/paid minimum/JJ/minimum wage/NN/wage /,/, without/IN/without affecting/NN/affecting employees/NNS/employees already/RB/already above/IN/above the/DT/the minimum/NNP/minimum. or/CC/or suppose/VB/suppose that/IN/that in/IN/in a/DT/a list/NN/list of/IN/of mailorder/NN/mailorder customers/NNS/customers /,/, you/PRP/you decided/VBD/decided to/TO/to delete/VB/delete all/DT/all customers/NNS/customers who/WP/who had/VBD/had not/RB/not ordered/VBN/ordered anything/NN/anything in/IN/in six/CD/six months/NNP/months. in/IN/in an/DT/an array/NN/array /,/, such/JJ/such operations/NNS/operations are/VBP/are easy/JJ/easy because/IN/because you/PRP/you can/MD/can use/VB/use an/DT/an array/NN/array index/NN/index to/TO/to keep/VB/keep track/NN/track of/IN/of your/PRP$/your position/NNP/position. you/PRP/you can/MD/can operate/VB/operate on/IN/on one/CD/one item/NN/item /,/, then/RB/then increment/JJ/increment the/DT/the index/NN/index to/TO/to point/NN/point to/TO/to the/DT/the next/JJ/next item/NN/item /,/, and/CC/and see/VB/see if/IN/if that/DT/that item/NN/item is/VBZ/is a/DT/a suitable/JJ/suitable candidate/NN/candidate for/IN/for the/DT/the operation/NNP/operation. however/RB/however /,/, in/IN/in a/DT/a linked/VBN/linked list/NN/list /,/, the/DT/the links/NNS/links don/VBP/don t/NN/t have/VBP/have fixed/VBN/fixed index/NN/index numbers/NNP/numbers. how/WRB/how can/MD/can we/PRP/we provide/VB/provide a/DT/a list/NN/list s/VBZ/s user/NN/user with/IN/with something/NN/something analogous/JJ/analogous to/TO/to an/DT/an array/NN/array index/NN/index you/PRP/you could/MD/could repeatedly/RB/repeatedly use/VB/use find/NN/find /:/( /:/) to/TO/to look/VB/look for/IN/for appropriate/JJ/appropriate items/NNS/items in/IN/in a/DT/a list/NN/list /,/, but/CC/but that/IN/that approach/NN/approach requires/VBZ/requires many/JJ/many comparisons/NNS/comparisons to/TO/to find/VB/find each/DT/each link/NNP/link. it/PRP/it s/VBZ/s far/RB/far more/JJR/more efficient/JJ/efficient to/TO/to step/VB/step from/IN/from link/NN/link to/TO/to link/VB/link /,/, checking/VBG/checking whether/IN/whether each/DT/each one/CD/one meets/NNS/meets certain/JJ/certain criteria/NNS/criteria and/CC/and performing/VBG/performing the/DT/the appropriate/NN/appropriate operation/NN/operation if/IN/if it/PRP/it does/NNP/does. iterators/NNS/iterators 231/CD/231 a/DT/a reference/NN/reference in/IN/in the/DT/the list/NN/list itself/PRP/itself as/IN/as users/NNS/users of/IN/of a/DT/a list/NN/list class/NN/class /,/, what/WP/what we/PRP/we need/VBP/need is/VBZ/is access/NN/access to/TO/to a/DT/a reference/NN/reference that/WDT/that can/MD/can point/VB/point to/TO/to any/DT/any arbitrary/JJ/arbitrary link/NNP/link. this/DT/this way/NN/way /,/, we/PRP/we can/MD/can examine/VB/examine or/CC/or modify/VB/modify the/DT/the link/NNP/link. we/PRP/we should/MD/should be/VB/be able/JJ/able to/TO/to increment/NN/increment the/DT/the reference/NN/reference so/RB/so we/PRP/we can/MD/can traverse/VB/traverse along/IN/along the/DT/the list/NN/list /,/, looking/VBG/looking at/IN/at each/DT/each link/NN/link in/IN/in turn/NN/turn /,/, and/CC/and we/PRP/we should/MD/should be/VB/be able/JJ/able to/TO/to access/NN/access the/DT/the link/NN/link pointed/VBD/pointed to/TO/to by/IN/by the/DT/the reference/NNP/reference. assuming/NN/assuming we/PRP/we create/VBP/create such/JJ/such a/DT/a reference/NN/reference /,/, where/WRB/where will/MD/will it/PRP/it be/VB/be installed/VBN/installed one/CD/one possibility/NN/possibility is/VBZ/is to/TO/to use/VB/use a/DT/a field/NN/field in/IN/in the/DT/the list/NN/list itself/PRP/itself /,/, called/VBN/called current/JJ/current or/CC/or something/NN/something similar/NNP/similar. you/PRP/you could/MD/could access/VB/access a/DT/a link/NN/link using/VBG/using current/JJ/current and/CC/and increment/NN/increment current/JJ/current to/TO/to move/VB/move to/TO/to the/DT/the next/JJ/next link/NNP/link. one/CD/one problem/NN/problem with/IN/with this/DT/this approach/NN/approach is/VBZ/is that/IN/that you/PRP/you might/MD/might need/VB/need more/RBR/more than/IN/than one/CD/one such/JJ/such reference/NN/reference /,/, just/RB/just as/IN/as you/PRP/you often/RB/often use/VBP/use several/JJ/several array/NN/array indices/NNS/indices at/IN/at the/DT/the same/JJ/same time/NNP/time. how/WRB/how many/JJ/many would/MD/would be/VB/be appropriate/JJ/appropriate there/EX/there s/VBZ/s no/DT/no way/NN/way to/TO/to know/VB/know how/WRB/how many/JJ/many the/DT/the user/NN/user might/MD/might need/NNP/need. thus/RB/thus /,/, it/PRP/it seems/VBZ/seems easier/JJR/easier to/TO/to allow/VB/allow the/DT/the user/NN/user to/TO/to create/VB/create as/IN/as many/JJ/many such/JJ/such references/NNS/references as/IN/as necessary/NNP/necessary. to/TO/to make/VB/make this/DT/this possible/JJ/possible in/IN/in an/DT/an object/NN/object oriented/VBN/oriented language/NN/language /,/, it/PRP/it s/VBZ/s natural/JJ/natural to/TO/to embed/VBN/embed each/DT/each reference/NN/reference in/IN/in a/DT/a class/NN/class object/NNP/object. this/DT/this object/NN/object can/MD/can t/VB/t be/VB/be the/DT/the same/JJ/same as/IN/as the/DT/the list/NN/list class/NN/class because/IN/because there/EX/there s/NNS/s only/RB/only one/CD/one list/NN/list object/NN/object /,/, so/RB/so it/PRP/it is/VBZ/is normally/RB/normally implemented/VBN/implemented as/IN/as a/DT/a separate/JJ/separate class/NNP/class. an/DT/an iterator/NN/iterator class/NN/class objects/NNS/objects containing/VBG/containing references/NNS/references to/TO/to items/NNS/items in/IN/in data/NNS/data structures/NNS/structures /,/, used/VBN/used to/TO/to traverse/VB/traverse these/DT/these structures/NNS/structures /,/, are/VBP/are commonly/RB/commonly called/VBN/called iterators/NNS/iterators /:/( or/CC/or sometimes/RB/sometimes /,/, as/IN/as in/IN/in certain/JJ/certain java/NN/java classes/NNS/classes /,/, enumerators/NNS/enumerators /:/) /./. here/RB/here s/VBZ/s a/DT/a preliminary/JJ/preliminary idea/NN/idea of/IN/of how/WRB/how they/PRP/they look/VBP/look class/NN/class listiterator/NN/listiterator /:/( /:/) /:/{ private/JJ/private link/NN/link current/JJ/current /:/... /:/} the/DT/the current/JJ/current field/NN/field contains/NNS/contains a/DT/a reference/NN/reference to/TO/to the/DT/the link/NN/link the/DT/the iterator/NN/iterator currently/RB/currently points/VBZ/points to/NNP/to. /NNP/( the/DT/the term/NN/term points/NNS/points as/IN/as used/VBN/used here/RB/here doesn/JJ/doesn t/NN/t refer/NN/refer to/TO/to pointers/NNS/pointers in/IN/in c/NN/c +/:/+ +/:/+ we/PRP/we re/VBP/re using/VBG/using it/PRP/it in/IN/in its/PRP$/its generic/JJ/generic sense/NN/sense to/TO/to mean/VB/mean refers/NNS/refers to/-NONE-/to. /:/) to/TO/to use/VB/use such/JJ/such an/DT/an iterator/NN/iterator /,/, the/DT/the user/NN/user might/MD/might create/VB/create a/DT/a list/NN/list and/CC/and then/RB/then create/VB/create an/DT/an iterator/NN/iterator object/NN/object associated/VBN/associated with/IN/with the/DT/the list/NNP/list. actually/RB/actually /,/, as/IN/as it/PRP/it turns/VBZ/turns out/RP/out /,/, letting/VBG/letting the/DT/the list/NN/list create/NN/create the/DT/the iterator/NN/iterator is/VBZ/is easier/JJR/easier /,/, so/RB/so it/PRP/it can/MD/can pass/VB/pass the/DT/the iterator/NN/iterator certain/NN/certain information/NN/information /,/, such/JJ/such as/IN/as a/DT/a reference/NN/reference to/TO/to its/PRP$/its first/JJ/first field/NNP/field. thus/RB/thus /,/, we/PRP/we add/VBP/add a/DT/a getiterator/NN/getiterator /:/( /:/) method/NN/method to/TO/to the/DT/the list/NN/list class/NN/class this/DT/this method/NN/method returns/NNS/returns a/DT/a suitable/JJ/suitable iterator/NN/iterator object/NN/object to/TO/to the/DT/the user/NNP/user. here/RB/here s/VBZ/s some/DT/some abbreviated/VBN/abbreviated code/NN/code in/IN/in main/NN/main /:/( /:/) that/IN/that shows/NNS/shows how/WRB/how the/DT/the class/NN/class user/NN/user would/MD/would invoke/VB/invoke an/DT/an iterator/NN/iterator public/NN/public static/JJ/static void/NN/void main/NN/main /:/( /:/... /:/) /:/{ linklist/NN/linklist thelist/NN/thelist =/:/= new/JJ/new linklist/NN/linklist /:/( /:/) make/VBP/make list/NN/list listiterator/NN/listiterator iter1/NNP/iter1 =/NNP/= thelist.getiterator/NNP/thelist.getiterator /NNP/( /NNP/) make/VBP/make iter/NN/iter 232/CD/232 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists link/VBP/link alink/NN/alink =/:/= iter1.getcurrent/JJ/iter1.getcurrent /NN/( /:/) access/NN/access link/NN/link at/IN/at iterator/NN/iterator iter1.nextlink/NN/iter1.nextlink /:/( /:/) move/NN/move iter/NN/iter to/TO/to next/JJ/next link/NN/link /:/} after/IN/after we/PRP/we ve/VBP/ve made/VBN/made the/DT/the iterator/NN/iterator object/NN/object /,/, we/PRP/we can/MD/can use/VB/use it/PRP/it to/TO/to access/NN/access the/DT/the link/NN/link it/PRP/it points/VBZ/points to/TO/to or/CC/or increment/NN/increment it/PRP/it so/RB/so it/PRP/it points/VBZ/points to/TO/to the/DT/the next/JJ/next link/NN/link /,/, as/IN/as shown/NN/shown in/IN/in the/DT/the second/JJ/second two/CD/two statements/NNP/statements. we/PRP/we call/VBP/call the/DT/the iterator/NN/iterator object/NN/object iter1/NNP/iter1 to/TO/to emphasize/VB/emphasize that/IN/that you/PRP/you could/MD/could make/VB/make more/RBR/more iterators/NNS/iterators /:/( iter2/NNP/iter2 and/CC/and so/RB/so on/IN/on /NNP/) the/DT/the same/JJ/same way/NNP/way. the/DT/the iterator/NN/iterator always/RB/always points/VBZ/points to/TO/to some/DT/some link/NN/link in/IN/in the/DT/the list/NNP/list. it/PRP/it s/VBZ/s associated/VBN/associated with/IN/with the/DT/the list/NN/list /,/, but/CC/but it/PRP/it s/VBZ/s not/RB/not the/DT/the same/JJ/same as/IN/as the/DT/the list/NN/list or/CC/or the/DT/the same/JJ/same as/IN/as a/DT/a link/NNP/link. figure/NN/figure 5.17/CD/5.17 shows/NNS/shows two/CD/two iterators/NNS/iterators pointing/VBG/pointing to/TO/to links/NNS/links in/IN/in a/DT/a list/NNP/list. iterators/NNS/iterators 233/CD/233 first/JJ/first next/JJ/next next/JJ/next next/JJ/next next/JJ/next null/NN/null current/JJ/current list/NN/list iterator/NN/iterator 1/CD/1 linked/VBN/linked list/NN/list current/JJ/current list/NN/list iterator/NN/iterator 2/CD/2 figure/NN/figure 5.17/CD/5.17 list/NN/list iterators/NNP/iterators. additional/JJ/additional iterator/NN/iterator features/NNS/features we/PRP/we ve/VBP/ve seen/VBN/seen several/JJ/several programs/NNS/programs in/IN/in which/WDT/which the/DT/the use/NN/use of/IN/of a/DT/a previous/JJ/previous field/NN/field made/VBD/made performing/VBG/performing certain/JJ/certain operations/NNS/operations simpler/JJR/simpler /,/, such/JJ/such as/IN/as deleting/NN/deleting a/DT/a link/NN/link from/IN/from an/DT/an arbitrary/JJ/arbitrary location/NNP/location. such/JJ/such a/DT/a field/NN/field is/VBZ/is also/RB/also useful/JJ/useful in/IN/in an/DT/an iterator/NNP/iterator. also/RB/also /,/, it/PRP/it may/MD/may be/VB/be that/IN/that the/DT/the iterator/NN/iterator will/MD/will need/VB/need to/TO/to change/VB/change the/DT/the value/NN/value of/IN/of the/DT/the list/NN/list s/VBZ/s first/JJ/first field/NN/field for/IN/for instance/NN/instance /,/, if/IN/if an/DT/an item/NN/item is/VBZ/is inserted/VBN/inserted or/CC/or deleted/VBN/deleted at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NNP/list. if/IN/if the/DT/the iterator/NN/iterator is/VBZ/is an/DT/an object/NN/object of/IN/of a/DT/a separate/JJ/separate class/NN/class /,/, how/WRB/how can/MD/can it/PRP/it access/VBZ/access a/DT/a private/JJ/private field/NN/field /,/, such/JJ/such as/IN/as first/JJ/first /,/, in/IN/in the/DT/the list/NN/list one/CD/one solution/NN/solution is/VBZ/is for/IN/for the/DT/the list/NN/list to/TO/to pass/VB/pass a/DT/a reference/NN/reference from/IN/from itself/PRP/itself to/TO/to the/DT/the iterator/NN/iterator when/WRB/when it/PRP/it creates/VBZ/creates the/DT/the iterator/NNP/iterator. this/DT/this reference/NN/reference is/VBZ/is stored/VBN/stored in/IN/in a/DT/a field/NN/field in/IN/in the/DT/the iterator/NNP/iterator. the/DT/the list/NN/list must/MD/must then/RB/then provide/VB/provide public/JJ/public methods/NNS/methods that/WDT/that allow/VBP/allow the/DT/the iterator/NN/iterator to/TO/to change/VB/change first/NNP/first. these/DT/these linklist/NN/linklist methods/NNS/methods are/VBP/are getfirst/RB/getfirst /:/( /:/) and/CC/and setfirst/JJ/setfirst /NN/( /:/) /./. /:/( the/DT/the weakness/NN/weakness of/IN/of this/DT/this approach/NN/approach is/VBZ/is that/IN/that these/DT/these methods/NNS/methods allow/VBP/allow anyone/NN/anyone to/TO/to change/VB/change first/RB/first /,/, which/WDT/which introduces/NNS/introduces an/DT/an element/NN/element of/IN/of risk/NNP/risk. /NNP/) here/RB/here s/VBZ/s a/DT/a revised/VBN/revised /NN/( although/IN/although still/RB/still incomplete/JJ/incomplete /NN/) iterator/NN/iterator class/NN/class that/WDT/that incorporates/VBZ/incorporates these/DT/these additional/JJ/additional fields/NNS/fields /,/, along/IN/along with/IN/with reset/NN/reset /:/( /:/) and/CC/and nextlink/NN/nextlink /:/( /:/) methods/NNS/methods class/VBP/class listiterator/NN/listiterator /:/( /:/) /:/{ private/JJ/private link/NN/link current/JJ/current reference/NN/reference to/TO/to current/JJ/current link/NN/link private/JJ/private link/NN/link previous/JJ/previous reference/NN/reference to/TO/to previous/JJ/previous link/NN/link private/JJ/private linklist/NN/linklist ourlist/NN/ourlist reference/NN/reference to/TO/to parent/NN/parent list/NN/list public/JJ/public void/JJ/void reset/NN/reset /:/( /:/) set/NN/set to/TO/to start/VB/start of/IN/of list/NN/list /:/{ current/JJ/current =/NN/= ourlist.getfirst/JJ/ourlist.getfirst /NN/( /:/) current/JJ/current first/JJ/first previous/JJ/previous =/NN/= null/NN/null previous/JJ/previous null/NN/null /:/} public/JJ/public void/JJ/void nextlink/NN/nextlink /:/( /:/) go/IN/go to/TO/to next/JJ/next link/NN/link /:/{ previous/JJ/previous =/NN/= current/JJ/current set/NN/set previous/JJ/previous to/TO/to this/DT/this current/JJ/current =/NN/= current.next/JJ/current.next set/NN/set this/DT/this to/TO/to next/JJ/next /NN/} /:/... /:/} we/PRP/we might/MD/might note/VB/note /,/, for/IN/for you/PRP/you old/JJ/old time/NN/time c/NN/c +/:/+ +/:/+ programmers/NNS/programmers /,/, that/IN/that in/IN/in c/NN/c +/:/+ +/:/+ the/DT/the connection/NN/connection between/IN/between the/DT/the iterator/NN/iterator and/CC/and the/DT/the list/NN/list is/VBZ/is typically/RB/typically provided/VBN/provided by/IN/by making/NN/making the/DT/the iterator/NN/iterator class/NN/class a/DT/a friend/NN/friend of/IN/of the/DT/the list/NN/list class/NNP/class. however/RB/however /,/, java/NN/java has/VBZ/has no/DT/no friend/NN/friend classes/NNS/classes /,/, which/WDT/which are/VBP/are controversial/JJ/controversial in/IN/in any/DT/any case/NN/case because/IN/because they/PRP/they are/VBP/are a/DT/a chink/NN/chink in/IN/in the/DT/the armor/NN/armor of/IN/of data/NNS/data hiding/NNP/hiding. iterator/NN/iterator methods/NNS/methods additional/JJ/additional methods/NNS/methods can/MD/can make/VB/make the/DT/the iterator/NN/iterator a/DT/a flexible/JJ/flexible and/CC/and powerful/JJ/powerful class/NNP/class. all/DT/all operations/NNS/operations previously/RB/previously performed/VBD/performed by/IN/by the/DT/the class/NN/class that/IN/that involve/JJ/involve iterating/NN/iterating through/IN/through the/DT/the list/NN/list /,/, such/JJ/such as/IN/as insertafter/NN/insertafter /:/( /:/) /,/, are/VBP/are more/RBR/more naturally/RB/naturally performed/VBN/performed by/IN/by the/DT/the iterator/NNP/iterator. in/IN/in our/PRP$/our example/NN/example the/DT/the iterator/NN/iterator includes/VBZ/includes the/DT/the following/VBG/following methods/NNS/methods reset/NN/reset /:/( /:/) sets/NNS/sets the/DT/the iterator/NN/iterator to/TO/to the/DT/the start/NN/start of/IN/of the/DT/the list/NN/list nextlink/NN/nextlink /:/( /:/) moves/NNS/moves the/DT/the iterator/NN/iterator to/TO/to the/DT/the next/JJ/next link/NN/link getcurrent/NN/getcurrent /:/( /:/) returns/NNS/returns the/DT/the link/NN/link at/IN/at the/DT/the iterator/NN/iterator atend/NN/atend /:/( /:/) returns/NNS/returns true/VBP/true if/IN/if the/DT/the iterator/NN/iterator is/VBZ/is at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list 234/CD/234 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists insertafter/IN/insertafter /CD/( /CD/) inserts/NNS/inserts a/DT/a new/JJ/new link/NN/link after/IN/after the/DT/the iterator/NN/iterator insertbefore/NN/insertbefore /:/( /:/) inserts/NNS/inserts a/DT/a new/JJ/new link/NN/link before/IN/before the/DT/the iterator/NN/iterator deletecurrent/NN/deletecurrent /:/( /:/) deletes/NNS/deletes the/DT/the link/NN/link at/IN/at the/DT/the iterator/NN/iterator the/DT/the user/NN/user can/MD/can position/NN/position the/DT/the iterator/NN/iterator using/VBG/using reset/NN/reset /:/( /:/) and/CC/and nextlink/NN/nextlink /:/( /:/) /,/, check/NN/check whether/IN/whether it/PRP/it s/VBZ/s at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list with/IN/with atend/NN/atend /:/( /:/) /,/, and/CC/and perform/NN/perform the/DT/the other/JJ/other operations/NNS/operations shown/NNP/shown. deciding/VBG/deciding which/WDT/which tasks/NNS/tasks should/MD/should be/VB/be carried/VBN/carried out/RP/out by/IN/by an/DT/an iterator/NN/iterator and/CC/and which/WDT/which by/IN/by the/DT/the list/NN/list itself/PRP/itself is/VBZ/is not/RB/not always/RB/always easy/NNP/easy. an/DT/an insertbefore/NN/insertbefore /:/( /:/) method/NN/method works/NNS/works best/JJS/best in/IN/in the/DT/the iterator/NN/iterator /,/, but/CC/but an/DT/an insertfirst/JJ/insertfirst /NN/( /:/) routine/NN/routine that/IN/that always/RB/always inserts/NNS/inserts at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list might/MD/might be/VB/be more/RBR/more appropriate/JJ/appropriate in/IN/in the/DT/the list/NN/list class/NNP/class. we/PRP/we ve/VBP/ve kept/VBN/kept a/DT/a displaylist/NN/displaylist /:/( /:/) routine/NN/routine in/IN/in the/DT/the list/NN/list /,/, but/CC/but this/DT/this operation/NN/operation could/MD/could also/RB/also be/VB/be handled/VBN/handled with/IN/with getcurrent/NN/getcurrent /:/( /:/) and/CC/and nextlink/NN/nextlink /:/( /:/) calls/NNS/calls to/TO/to the/DT/the iterator/NNP/iterator. the/DT/the interiterator.java/NNP/interiterator.java program/NN/program the/DT/the interiterator.java/NNP/interiterator.java program/NN/program includes/VBZ/includes an/DT/an interactive/JJ/interactive interface/NN/interface that/WDT/that permits/VBZ/permits the/DT/the user/NN/user to/TO/to control/NN/control the/DT/the iterator/NN/iterator directly/NNP/directly. after/IN/after you/PRP/you ve/VBP/ve started/VBN/started the/DT/the program/NN/program /,/, you/PRP/you can/MD/can perform/VB/perform the/DT/the following/VBG/following actions/NNS/actions by/IN/by typing/VBG/typing the/DT/the appropriate/NN/appropriate letter/NN/letter s/NNS/s show/VBP/show the/DT/the list/NN/list contents/NNS/contents r/VBP/r reset/VBN/reset the/DT/the iterator/NN/iterator to/TO/to the/DT/the start/NN/start of/IN/of the/DT/the list/NN/list n/NN/n go/VB/go to/TO/to the/DT/the next/JJ/next link/NN/link g/NN/g get/NN/get the/DT/the contents/NNS/contents of/IN/of the/DT/the current/JJ/current link/NN/link b/NN/b insert/NN/insert before/IN/before the/DT/the current/JJ/current link/NN/link a/DT/a insert/NN/insert a/DT/a new/JJ/new link/NN/link after/IN/after the/DT/the current/JJ/current link/NN/link d/NN/d delete/NN/delete the/DT/the current/JJ/current link/NN/link listing/NN/listing 5.9/CD/5.9 shows/NNS/shows the/DT/the complete/JJ/complete interiterator.java/NN/interiterator.java program/NNP/program. listing/NN/listing 5.9/CD/5.9 the/DT/the interiterator.java/NNP/interiterator.java program/NN/program interiterator.java/NN/interiterator.java demonstrates/VBZ/demonstrates iterators/NNS/iterators on/IN/on a/DT/a linked/VBN/linked listlistiterator/NN/listlistiterator to/TO/to run/VB/run this/DT/this program/NN/program c/NN/c java/NN/java interiterapp/NN/interiterapp import/NN/import java.io/NNP/java.io. */-NONE-/* for/IN/for i/o/JJ/i/o class/NN/class link/NN/link /:/{ public/JJ/public long/JJ/long ddata/NN/ddata data/NNS/data item/VBP/item iterators/NNS/iterators 235/CD/235 public/JJ/public link/NN/link next/IN/next next/JJ/next link/NN/link in/IN/in list/NN/list public/NN/public link/NN/link /:/( long/JJ/long dd/NN/dd /:/) constructor/NN/constructor /:/{ ddata/NN/ddata =/:/= dd/NN/dd /:/} public/JJ/public void/JJ/void displaylink/NN/displaylink /:/( /:/) display/NN/display ourself/PRP/ourself /:/{ system.out.print/JJ/system.out.print /NN/( ddata/NN/ddata +/:/+ /:/) /:/} /:/} end/NN/end class/NN/class link/NN/link class/NN/class linklist/NN/linklist /:/{ private/JJ/private link/NN/link first/RB/first ref/JJ/ref to/TO/to first/JJ/first item/NN/item on/IN/on list/NN/list public/JJ/public linklist/NN/linklist /:/( /:/) constructor/NN/constructor /:/{ first/JJ/first =/NN/= null/NN/null /:/} no/DT/no items/NNS/items on/IN/on list/NN/list yet/RB/yet public/JJ/public link/NN/link getfirst/NN/getfirst /:/( /:/) get/NN/get value/NN/value of/IN/of first/JJ/first /CD/{ return/NN/return first/RB/first /./} public/JJ/public void/JJ/void setfirst/NN/setfirst /:/( link/NN/link f/NN/f /:/) set/NN/set first/RB/first to/TO/to new/JJ/new link/NN/link /:/{ first/JJ/first =/NN/= f/NN/f /:/} public/JJ/public boolean/JJ/boolean isempty/NN/isempty /:/( /:/) true/JJ/true if/IN/if list/NN/list is/VBZ/is empty/JJ/empty /NN/{ return/NN/return first/RB/first =/./= =/:/= null/NN/null /:/} public/JJ/public listiterator/NN/listiterator getiterator/NN/getiterator /:/( /:/) return/NN/return iterator/NN/iterator /:/{ return/NN/return new/JJ/new listiterator/NN/listiterator /:/( this/DT/this /NN/) initialized/VBD/initialized with/IN/with /CD/} this/DT/this list/NN/list public/NN/public void/VBD/void displaylist/NN/displaylist /:/( /:/) /:/{ link/NN/link current/JJ/current =/NN/= first/RB/first start/VB/start at/IN/at beginning/NN/beginning of/IN/of list/NN/list while/IN/while /CD/( current/JJ/current !/./! =/:/= null/NN/null /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ current.displaylink/JJ/current.displaylink /NN/( /:/) print/NN/print data/NNS/data current/JJ/current =/NN/= current.next/JJ/current.next move/NN/move to/TO/to next/JJ/next link/NN/link /:/} system.out.println/JJ/system.out.println /NN/( /:/) /:/} 236/CD/236 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.9/CD/5.9 continued/VBN/continued /-NONE-/} end/NN/end class/NN/class linklist/NN/linklist class/NN/class listiterator/NN/listiterator /:/{ private/JJ/private link/NN/link current/JJ/current current/JJ/current link/NN/link private/JJ/private link/NN/link previous/JJ/previous previous/JJ/previous link/NN/link private/JJ/private linklist/NN/linklist ourlist/NN/ourlist our/PRP$/our linked/VBN/linked list/NN/list public/JJ/public listiterator/NN/listiterator /:/( linklist/NN/linklist list/NN/list /:/) constructor/NN/constructor /:/{ ourlist/NN/ourlist =/:/= list/NN/list reset/NN/reset /:/( /:/) /:/} public/JJ/public void/JJ/void reset/NN/reset /:/( /:/) start/NN/start at/IN/at first/JJ/first /CD/{ current/JJ/current =/NN/= ourlist.getfirst/JJ/ourlist.getfirst /NN/( /:/) previous/JJ/previous =/NN/= null/NN/null /:/} public/JJ/public boolean/JJ/boolean atend/NN/atend /:/( /:/) true/JJ/true if/IN/if last/JJ/last link/NN/link /:/{ return/NN/return /:/( current.next/JJ/current.next =/NN/= =/:/= null/NN/null /:/) /:/} public/JJ/public void/JJ/void nextlink/NN/nextlink /:/( /:/) go/IN/go to/TO/to next/JJ/next link/NN/link /:/{ previous/JJ/previous =/NN/= current/JJ/current current/JJ/current =/NN/= current.next/JJ/current.next /NN/} public/JJ/public link/NN/link getcurrent/NN/getcurrent /:/( /:/) get/NN/get current/JJ/current link/NN/link /:/{ return/NN/return current/JJ/current /NN/} public/JJ/public void/JJ/void insertafter/NN/insertafter /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert after/IN/after /CD/{ current/JJ/current link/NN/link link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) if/IN/if /CD/( ourlist.isempty/JJ/ourlist.isempty /NN/( /:/) /:/) empty/NN/empty list/NN/list /:/{ ourlist.setfirst/JJ/ourlist.setfirst /NN/( newlink/NN/newlink /:/) current/JJ/current =/NN/= newlink/NN/newlink iterators/NNS/iterators 237/CD/237 listing/VBG/listing 5.9/CD/5.9 continued/VBN/continued /-NONE-/} else/RB/else not/RB/not empty/JJ/empty /NN/{ newlink.next/JJ/newlink.next =/NN/= current.next/JJ/current.next current.next/JJ/current.next =/NN/= newlink/NN/newlink nextlink/NN/nextlink /:/( /:/) point/NN/point to/TO/to new/JJ/new link/NN/link /:/} /:/} public/JJ/public void/JJ/void insertbefore/NN/insertbefore /:/( long/JJ/long dd/NN/dd /:/) insert/NN/insert before/IN/before /CD/{ current/JJ/current link/NN/link link/NN/link newlink/NN/newlink =/:/= new/JJ/new link/NN/link /:/( dd/NN/dd /:/) if/IN/if /CD/( previous/JJ/previous =/NN/= =/:/= null/NN/null /:/) beginning/NN/beginning of/IN/of list/NN/list /:/{ /:/( or/CC/or empty/JJ/empty list/NN/list /:/) newlink.next/JJ/newlink.next =/NN/= ourlist.getfirst/JJ/ourlist.getfirst /NN/( /:/) ourlist.setfirst/JJ/ourlist.setfirst /NN/( newlink/NN/newlink /:/) reset/NN/reset /:/( /:/) /:/} else/RB/else not/RB/not beginning/VBG/beginning /:/{ newlink.next/JJ/newlink.next =/NN/= previous.next/JJ/previous.next previous.next/JJ/previous.next =/NN/= newlink/NN/newlink current/NN/current =/:/= newlink/NN/newlink /:/} /:/} public/JJ/public long/JJ/long deletecurrent/NN/deletecurrent /:/( /:/) delete/JJ/delete item/NN/item at/IN/at current/JJ/current /NN/{ long/RB/long value/NN/value =/:/= current.ddata/NNP/current.ddata if/IN/if /NNP/( previous/JJ/previous =/NN/= =/:/= null/NN/null /:/) beginning/NN/beginning of/IN/of list/NN/list /:/{ ourlist.setfirst/JJ/ourlist.setfirst /NN/( current.next/JJ/current.next /NN/) reset/NN/reset /:/( /:/) /:/} else/RB/else not/RB/not beginning/VBG/beginning /:/{ previous.next/JJ/previous.next =/NN/= current.next/JJ/current.next if/IN/if /NNP/( atend/NN/atend /:/( /:/) /:/) reset/NN/reset /:/( /:/) else/RB/else 238/CD/238 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.9/CD/5.9 continued/VBN/continued current/JJ/current =/NN/= current.next/JJ/current.next /NN/} return/NN/return value/NN/value /:/} /:/} end/NN/end class/NN/class listiterator/NN/listiterator class/NN/class interiterapp/NN/interiterapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) throws/NNS/throws ioexception/NN/ioexception /:/{ linklist/NN/linklist thelist/NN/thelist =/:/= new/JJ/new linklist/NN/linklist /:/( /:/) new/JJ/new list/NN/list listiterator/NN/listiterator iter1/NNP/iter1 =/NNP/= thelist.getiterator/NNP/thelist.getiterator /NNP/( /NNP/) new/JJ/new iter/NN/iter long/RB/long value/NN/value iter1.insertafter/NN/iter1.insertafter /:/( 20/CD/20 /CD/) insert/NN/insert items/NNS/items iter1.insertafter/JJ/iter1.insertafter /NN/( 40/CD/40 /CD/) iter1.insertafter/JJ/iter1.insertafter /NN/( 80/CD/80 /CD/) iter1.insertbefore/JJ/iter1.insertbefore /NN/( 60/CD/60 /CD/) while/IN/while /CD/( true/JJ/true /NN/) /:/{ system.out.print/JJ/system.out.print /NN/( enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, /:/) system.out.print/JJ/system.out.print /NN/( next/IN/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete /NN/) system.out.flush/JJ/system.out.flush /NN/( /:/) int/NN/int choice/NN/choice =/:/= getchar/NN/getchar /:/( /:/) get/NN/get user/NN/user s/NNS/s option/NN/option switch/NN/switch /:/( choice/NN/choice /:/) /:/{ case/NN/case s/NNS/s show/VBP/show list/NN/list if/IN/if /CD/( !/./! thelist.isempty/JJ/thelist.isempty /NN/( /:/) /:/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) else/NN/else system.out.println/-NONE-/system.out.println /./( list/NN/list is/VBZ/is empty/JJ/empty /NN/) break/NN/break case/NN/case r/NN/r reset/NN/reset /:/( to/TO/to first/JJ/first /NN/) iter1.reset/NN/iter1.reset /:/( /:/) break/NN/break case/NN/case n/NN/n advance/NN/advance to/TO/to next/JJ/next item/NN/item if/IN/if /CD/( !/./! thelist.isempty/JJ/thelist.isempty /NN/( /:/) &&/:/&& !/./! iter1.atend/JJ/iter1.atend /NN/( /:/) /:/) iter1.nextlink/JJ/iter1.nextlink /NN/( /:/) else/NN/else iterators/NNS/iterators 239/CD/239 listing/VBG/listing 5.9/CD/5.9 continued/VBN/continued system.out.println/JJ/system.out.println /NN/( can/MD/can t/VB/t go/VB/go to/TO/to next/JJ/next link/NN/link /:/) break/NN/break case/NN/case g/NN/g get/NN/get current/NN/current item/NN/item if/IN/if /CD/( !/./! thelist.isempty/JJ/thelist.isempty /NN/( /:/) /:/) /:/{ value/NN/value =/:/= iter1.getcurrent/JJ/iter1.getcurrent /NN/( /:/) .ddata/NNP/.ddata system.out.println/NNP/system.out.println /NNP/( returned/VBD/returned +/NNP/+ value/NN/value /:/) /:/} else/RB/else system.out.println/JJ/system.out.println /NN/( list/NN/list is/VBZ/is empty/JJ/empty /NN/) break/NN/break case/NN/case b/NN/b insert/NN/insert before/IN/before current/JJ/current system.out.print/JJ/system.out.print /NN/( enter/NN/enter value/NN/value to/TO/to insert/VB/insert /:/) system.out.flush/JJ/system.out.flush /NN/( /:/) value/NN/value =/:/= getint/NN/getint /:/( /:/) iter1.insertbefore/JJ/iter1.insertbefore /NN/( value/NN/value /:/) break/NN/break case/NN/case a/DT/a insert/NN/insert after/IN/after current/JJ/current system.out.print/JJ/system.out.print /NN/( enter/NN/enter value/NN/value to/TO/to insert/VB/insert /:/) system.out.flush/JJ/system.out.flush /NN/( /:/) value/NN/value =/:/= getint/NN/getint /:/( /:/) iter1.insertafter/JJ/iter1.insertafter /NN/( value/NN/value /:/) break/NN/break case/NN/case d/NN/d delete/NN/delete current/NN/current item/NN/item if/IN/if /CD/( !/./! thelist.isempty/JJ/thelist.isempty /NN/( /:/) /:/) /:/{ value/NN/value =/:/= iter1.deletecurrent/JJ/iter1.deletecurrent /NN/( /:/) system.out.println/JJ/system.out.println /NN/( deleted/VBD/deleted +/CD/+ value/NN/value /:/) /:/} else/RB/else system.out.println/JJ/system.out.println /NN/( can/MD/can t/VB/t delete/JJ/delete /NN/) break/NN/break default/NN/default system.out.println/NN/system.out.println /:/( invalid/JJ/invalid entry/NN/entry /:/) /:/} end/NN/end switch/NN/switch /:/} end/NN/end while/IN/while /NNP/} end/NN/end main/NN/main /:/( /:/) public/JJ/public static/JJ/static string/NN/string getstring/VBG/getstring /NN/( /:/) throws/VBZ/throws ioexception/NN/ioexception /:/{ inputstreamreader/NN/inputstreamreader isr/NN/isr =/:/= new/JJ/new inputstreamreader/NN/inputstreamreader /:/( system.in/JJ/system.in /NN/) 240/CD/240 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists listing/VBG/listing 5.9/CD/5.9 continued/VBN/continued bufferedreader/NN/bufferedreader br/NN/br =/:/= new/JJ/new bufferedreader/NN/bufferedreader /:/( isr/NN/isr /:/) string/VBG/string s/NNS/s =/:/= br.readline/JJ/br.readline /NN/( /:/) return/NN/return s/NNS/s /VBP/} public/JJ/public static/JJ/static char/NN/char getchar/NN/getchar /:/( /:/) throws/VBZ/throws ioexception/NN/ioexception /:/{ string/VBG/string s/NNS/s =/:/= getstring/VBG/getstring /:/( /:/) return/NN/return s.charat/JJ/s.charat /NN/( 0/-NONE-/0 /./) /:/} public/JJ/public static/JJ/static int/NN/int getint/NN/getint /:/( /:/) throws/VBZ/throws ioexception/NN/ioexception /:/{ string/VBG/string s/NNS/s =/:/= getstring/VBG/getstring /:/( /:/) return/NN/return integer.parseint/JJ/integer.parseint /NN/( s/NNS/s /:/) /:/} /:/} end/NN/end class/NN/class interiterapp/NN/interiterapp the/DT/the main/JJ/main /NN/( /:/) routine/NN/routine inserts/NNS/inserts four/CD/four items/NNS/items into/IN/into the/DT/the list/NN/list /,/, using/VBG/using an/DT/an iterator/NN/iterator and/CC/and its/PRP$/its insertafter/NN/insertafter /:/( /:/) method/NNP/method. then/RB/then it/PRP/it waits/VBZ/waits for/IN/for the/DT/the user/NN/user to/TO/to interact/VB/interact with/IN/with it/NNP/it. in/IN/in the/DT/the following/JJ/following sample/NN/sample interaction/NN/interaction /,/, the/DT/the user/NN/user displays/VBZ/displays the/DT/the list/NN/list /,/, resets/NNS/resets the/DT/the iterator/NN/iterator to/TO/to the/DT/the beginning/NN/beginning /,/, goes/VBZ/goes forward/RB/forward two/CD/two links/NNS/links /,/, gets/NNS/gets the/DT/the current/JJ/current link/NN/link s/NNS/s key/JJ/key value/NN/value /:/( which/WDT/which is/VBZ/is 60/CD/60 /CD/) /,/, inserts/NNS/inserts 100/CD/100 before/IN/before this/DT/this /,/, inserts/VBZ/inserts 7/CD/7 after/IN/after the/DT/the 100/CD/100 /,/, and/CC/and displays/NNS/displays the/DT/the list/NN/list again/RB/again enter/JJR/enter first/JJ/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete s/NNS/s 20/CD/20 40/CD/40 60/CD/60 80/CD/80 enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete r/NN/r enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete n/NN/n enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete n/NN/n enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete g/NN/g returned/VBD/returned 60/CD/60 enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete b/NN/b enter/NN/enter value/NN/value to/TO/to insert/VB/insert 100/CD/100 iterators/NNS/iterators 241/CD/241 listing/VBG/listing 5.9/CD/5.9 continued/VBN/continued enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete a/DT/a enter/NN/enter value/NN/value to/TO/to insert/VB/insert 7/CD/7 enter/NN/enter first/RB/first letter/NN/letter of/IN/of show/NN/show /,/, reset/NN/reset /,/, next/JJ/next /,/, get/NN/get /,/, before/IN/before /,/, after/IN/after /,/, delete/JJ/delete s/NNS/s 20/CD/20 40/CD/40 100/CD/100 7/CD/7 60/CD/60 80/CD/80 experimenting/VBG/experimenting with/IN/with the/DT/the interiterator.java/NNP/interiterator.java program/NN/program will/MD/will give/VB/give you/PRP/you a/DT/a feeling/VBG/feeling for/IN/for how/WRB/how the/DT/the iterator/NN/iterator moves/VBZ/moves along/IN/along the/DT/the links/NNS/links and/CC/and how/WRB/how it/PRP/it can/MD/can insert/VB/insert and/CC/and delete/VB/delete links/NNS/links anywhere/RB/anywhere in/IN/in the/DT/the list/NNP/list. where/WRB/where does/VBZ/does the/DT/the iterator/NN/iterator point/NN/point one/CD/one of/IN/of the/DT/the design/NN/design issues/NNS/issues in/IN/in an/DT/an iterator/NN/iterator class/NN/class is/VBZ/is deciding/VBG/deciding where/WRB/where the/DT/the iterator/NN/iterator should/MD/should point/VB/point following/VBG/following various/JJ/various operations/NNP/operations. when/WRB/when you/PRP/you delete/VBP/delete an/DT/an item/NN/item with/IN/with deletecurrent/NN/deletecurrent /:/( /:/) /,/, should/MD/should the/DT/the iterator/NN/iterator end/NN/end up/IN/up pointing/VBG/pointing to/TO/to the/DT/the next/JJ/next item/NN/item /,/, to/TO/to the/DT/the previous/JJ/previous item/NN/item /,/, or/CC/or back/RB/back at/IN/at the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NN/list keeping/VBG/keeping the/DT/the iterator/NN/iterator in/IN/in the/DT/the vicinity/NN/vicinity of/IN/of the/DT/the deleted/VBN/deleted item/NN/item is/VBZ/is convenient/JJ/convenient because/IN/because the/DT/the chances/NNS/chances are/VBP/are the/DT/the class/NN/class user/NN/user will/MD/will be/VB/be carrying/VBG/carrying out/RP/out other/JJ/other operations/NNS/operations there/NNP/there. however/RB/however /,/, you/PRP/you can/MD/can t/VB/t move/VB/move it/PRP/it to/TO/to the/DT/the previous/JJ/previous item/NN/item because/IN/because there/EX/there s/NNS/s no/DT/no way/NN/way to/TO/to reset/VB/reset the/DT/the list/NN/list s/VBZ/s previous/JJ/previous field/NN/field to/TO/to the/DT/the previous/JJ/previous item/NNP/item. /NNP/( you/PRP/you would/MD/would need/VB/need a/DT/a doubly/RB/doubly linked/VBN/linked list/NN/list for/IN/for that/DT/that task/NNP/task. /NNP/) our/PRP$/our solution/NN/solution is/VBZ/is to/TO/to move/VB/move the/DT/the iterator/NN/iterator to/TO/to the/DT/the link/NN/link following/VBG/following the/DT/the deleted/JJ/deleted link/NNP/link. if/IN/if we/PRP/we ve/VBP/ve just/RB/just deleted/VBN/deleted the/DT/the item/NN/item at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list /,/, the/DT/the iterator/NN/iterator is/VBZ/is set/VBN/set to/TO/to the/DT/the beginning/NN/beginning of/IN/of the/DT/the list/NNP/list. following/VBG/following calls/NNS/calls to/TO/to insertbefore/VB/insertbefore /:/( /:/) and/CC/and insertafter/NN/insertafter /:/( /:/) /,/, we/PRP/we return/VBP/return with/IN/with current/JJ/current pointing/VBG/pointing to/TO/to the/DT/the newly/RB/newly inserted/VBN/inserted item/NNP/item. the/DT/the atend/NN/atend /:/( /:/) method/NN/method there/RB/there s/VBZ/s another/DT/another question/NN/question about/IN/about the/DT/the atend/NN/atend /:/( /:/) method/NNP/method. it/PRP/it could/MD/could return/VB/return true/JJ/true when/WRB/when the/DT/the iterator/NN/iterator points/NNS/points to/TO/to the/DT/the last/JJ/last valid/NN/valid link/NN/link in/IN/in the/DT/the list/NN/list /,/, or/CC/or it/PRP/it could/MD/could return/VB/return true/JJ/true when/WRB/when the/DT/the iterator/NN/iterator points/NNS/points past/JJ/past the/DT/the last/JJ/last link/NN/link /:/( and/CC/and is/VBZ/is thus/RB/thus not/RB/not pointing/VBG/pointing to/TO/to a/DT/a valid/JJ/valid link/NN/link /:/) /./. with/IN/with the/DT/the first/JJ/first approach/NN/approach /,/, a/DT/a loop/NN/loop condition/NN/condition used/VBD/used to/TO/to iterate/VB/iterate through/IN/through the/DT/the list/NN/list becomes/VBZ/becomes awkward/NN/awkward because/IN/because you/PRP/you need/VBP/need to/TO/to perform/VB/perform an/DT/an operation/NN/operation on/IN/on the/DT/the last/JJ/last link/NN/link before/IN/before checking/NN/checking whether/IN/whether it/PRP/it is/VBZ/is the/DT/the last/JJ/last link/NN/link /:/( and/CC/and terminating/VBG/terminating the/DT/the loop/NN/loop if/IN/if it/PRP/it is/VBZ/is /:/) /./. however/RB/however /,/, the/DT/the second/JJ/second approach/NN/approach doesn/NN/doesn t/NN/t allow/NN/allow you/PRP/you to/TO/to find/VB/find out/RP/out you/PRP/you re/VBP/re at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the list/NN/list until/IN/until it/PRP/it s/VBZ/s too/RB/too late/JJ/late to/TO/to do/VB/do anything/NN/anything with/IN/with the/DT/the last/JJ/last link/NNP/link. /NNP/( you/PRP/you couldn/VBP/couldn t/NN/t look/NN/look for/IN/for the/DT/the last/JJ/last link/NN/link and/CC/and then/RB/then delete/JJ/delete it/PRP/it /,/, for/IN/for example/NNP/example. /:/) this/DT/this is/VBZ/is because/IN/because when/WRB/when atend/NN/atend /:/( /:/) became/VBD/became true/JJ/true /,/, the/DT/the iterator/NN/iterator would/MD/would no/RB/no longer/RBR/longer point/NN/point to/TO/to the/DT/the last/JJ/last link/NN/link /:/( or/CC/or indeed/RB/indeed any/DT/any valid/JJ/valid link/NN/link /:/) /,/, and/CC/and you/PRP/you can/MD/can t/VB/t back/RB/back up/IN/up the/DT/the iterator/NN/iterator in/IN/in a/DT/a singly/RB/singly linked/VBN/linked list/NNP/list. we/PRP/we take/VBP/take the/DT/the first/JJ/first approach/NNP/approach. this/DT/this way/NN/way /,/, the/DT/the iterator/NN/iterator always/RB/always points/VBZ/points to/TO/to a/DT/a valid/JJ/valid link/NN/link /,/, although/IN/although you/PRP/you must/MD/must be/VB/be careful/JJ/careful when/WRB/when writing/VBG/writing a/DT/a loop/NN/loop that/WDT/that iterates/VBZ/iterates through/IN/through the/DT/the list/NN/list /,/, as/IN/as we/PRP/we ll/VBP/ll see/VBP/see next/NNP/next. 242/CD/242 chapter/NN/chapter 5/CD/5 linked/VBN/linked lists/NNS/lists iterative/VBP/iterative operations/NNS/operations as/IN/as we/PRP/we noted/VBD/noted /,/, an/DT/an iterator/NN/iterator allows/VBZ/allows you/PRP/you to/TO/to traverse/VB/traverse the/DT/the list/NN/list /,/, performing/VBG/performing operations/NNS/operations on/IN/on certain/JJ/certain data/NNS/data items/NNP/items. here/RB/here s/VBZ/s a/DT/a code/NN/code fragment/NN/fragment that/WDT/that displays/VBZ/displays the/DT/the list/NN/list contents/NNS/contents /,/, using/VBG/using an/DT/an iterator/NN/iterator instead/RB/instead of/IN/of the/DT/the list/NN/list s/VBZ/s displaylist/NN/displaylist /:/( /:/) method/NN/method iter1.reset/JJ/iter1.reset /NN/( /:/) start/NN/start at/IN/at first/JJ/first long/JJ/long value/NN/value =/:/= iter1.getcurrent/JJ/iter1.getcurrent /NN/( /:/) .ddata/NNP/.ddata display/NN/display link/NN/link system.out.println/NN/system.out.println /:/( value/NN/value +/:/+ /:/) while/IN/while /CD/( !/./! iter1.atend/JJ/iter1.atend /NN/( /:/) /:/) until/IN/until end/NN/end /,/, /NNP/{ iter1.nextlink/NNP/iter1.nextlink /NNP/( /NNP/) go/VB/go to/TO/to next/JJ/next link/NN/link /,/, long/RB/long value/NN/value =/:/= iter1.getcurrent/JJ/iter1.getcurrent /NN/( /:/) .ddata/NNP/.ddata display/NN/display it/PRP/it system.out.println/JJ/system.out.println /NN/( value/NN/value +/:/+ /:/) /:/} although/IN/although we/PRP/we don/VBP/don t/NN/t do/VBP/do so/RB/so here/RB/here /,/, you/PRP/you should/MD/should check/VB/check with/IN/with isempty/NN/isempty /:/( /:/) to/TO/to be/VB/be sure/JJ/sure the/DT/the list/NN/list is/VBZ/is not/RB/not empty/JJ/empty before/IN/before calling/NN/calling getcurrent/NN/getcurrent /:/( /:/) /./. the/DT/the following/VBG/following code/NN/code shows/NNS/shows how/WRB/how you/PRP/you could/MD/could delete/VB/delete all/DT/all items/NNS/items with/IN/with keys/NNS/keys that/IN/that are/VBP/are multiples/NNS/multiples of/IN/of 3/CD/3. we/PRP/we show/VBP/show only/RB/only the/DT/the revised/VBN/revised main/NN/main /:/( /:/) routine/NN/routine everything/NN/everything else/RB/else is/VBZ/is the/DT/the same/JJ/same as/IN/as in/IN/in interiterator.java/NNP/interiterator.java /NNP/( listing/NN/listing 5.9/CD/5.9 /CD/) /./. class/NN/class interiterapp/NN/interiterapp /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) throws/NNS/throws ioexception/NN/ioexception /:/{ linklist/NN/linklist thelist/NN/thelist =/:/= new/JJ/new linklist/NN/linklist /:/( /:/) new/JJ/new list/NN/list listiterator/NN/listiterator iter1/NNP/iter1 =/NNP/= thelist.getiterator/NNP/thelist.getiterator /NNP/( /NNP/) new/JJ/new iter/NN/iter iter1.insertafter/NN/iter1.insertafter /:/( 21/CD/21 /CD/) insert/NN/insert links/NNS/links iter1.insertafter/JJ/iter1.insertafter /NN/( 40/CD/40 /CD/) iter1.insertafter/JJ/iter1.insertafter /NN/( 30/CD/30 /CD/) iter1.insertafter/JJ/iter1.insertafter /NN/( 7/CD/7 /CD/) iter1.insertafter/JJ/iter1.insertafter /NN/( 45/CD/45 /CD/) thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display list/NN/list iter1.reset/NN/iter1.reset /:/( /:/) start/NN/start at/IN/at first/JJ/first link/NN/link link/NN/link alink/NN/alink =/:/= iter1.getcurrent/JJ/iter1.getcurrent /NN/( /:/) get/NN/get it/PRP/it if/IN/if /CD/( alink.ddata/NNP/alink.ddata %/NN/% 3/CD/3 =/CD/= =/CD/= 0/-NONE-/0 /:/) if/IN/if divisible/JJ/divisible by/IN/by 3/CD/3 /,/, iter1.deletecurrent/JJ/iter1.deletecurrent /NN/( /:/) delete/JJ/delete it/PRP/it while/IN/while /CD/( !/./! iter1.atend/JJ/iter1.atend /NN/( /:/) /:/) until/IN/until end/NN/end of/IN/of list/NN/list /,/, /:/{ iterators/NNS/iterators 243/CD/243 iter1.nextlink/NN/iter1.nextlink /:/( /:/) go/IN/go to/TO/to next/JJ/next link/NN/link alink/NN/alink =/:/= iter1.getcurrent/JJ/iter1.getcurrent /NN/( /:/) get/NN/get link/NN/link if/IN/if /CD/( alink.ddata/NNP/alink.ddata %/NN/% 3/CD/3 =/CD/= =/CD/= 0/-NONE-/0 /:/) if/IN/if divisible/JJ/divisible by/IN/by 3/CD/3 /,/, iter1.deletecurrent/JJ/iter1.deletecurrent /NN/( /:/) delete/JJ/delete it/PRP/it /:/} thelist.displaylist/JJ/thelist.displaylist /NN/( /:/) display/NN/display list/NN/list /:/} end/NN/end main/NN/main /:/( /:/) /:/} end/NN/end class/NN/class interiterapp/NN/interiterapp we/PRP/we insert/VBP/insert five/CD/five links/NNS/links and/CC/and display/NN/display the/DT/the list/NNP/list. then/RB/then we/PRP/we iterate/VBP/iterate through/IN/through the/DT/the list/NN/list /,/, deleting/VBG/deleting those/DT/those links/NNS/links with/IN/with keys/NNS/keys divisible/JJ/divisible by/IN/by 3/CD/3 /,/, and/CC/and display/NN/display the/DT/the list/NN/list again/NNP/again. here/RB/here s/VBZ/s the/DT/the output/NN/output 21/CD/21 40/CD/40 30/CD/30 7/CD/7 45/CD/45 40/CD/40 7/CD/7 again/RB/again /,/, although/IN/although we/PRP/we don/VBP/don t/NN/t show/NN/show it/PRP/it here/RB/here /,/, it/PRP/it s/VBZ/s important/JJ/important to/TO/to check/VB/check whether/IN/whether the/DT/the list/NN/list is/VBZ/is empty/JJ/empty before/IN/before calling/NN/calling deletecurrent/NN/deletecurrent /:/( /:/) /./. 