java/NN/java programming/NN/programming language/NN/language was/VBD/was originally/RB/originally developed/VBN/developed by/IN/by sun/NN/sun microsystems/NNS/microsystems which/WDT/which was/VBD/was initiated/VBN/initiated by/IN/by james/NNS/james gosling/VBG/gosling and/CC/and released/VBN/released in/IN/in 1995/CD/1995 as/IN/as core/JJR/core component/NN/component of/IN/of sun/NN/sun microsystems/NNS/microsystems ’/:/’ java/NN/java platform/NN/platform /:/( java/NN/java 1.0/CD/1.0 /CD/[ j2se/NNP/j2se /NNP/] /NNP/) /./. as/IN/as of/IN/of december/NN/december 2008/CD/2008 /,/, the/DT/the latest/JJS/latest release/NN/release of/IN/of the/DT/the java/NN/java standard/NN/standard edition/NN/edition is/VBZ/is 6/CD/6 /CD/( j2se/NNP/j2se /NNP/) /./. with/IN/with the/DT/the advancement/NN/advancement of/IN/of java/NN/java and/CC/and its/PRP$/its widespread/JJ/widespread popularity/NN/popularity /,/, multiple/NN/multiple configurations/NNS/configurations were/VBD/were built/VBN/built to/TO/to suite/VB/suite various/JJ/various types/NNS/types of/IN/of platforms/NNP/platforms. ex/NN/ex /:/: j2ee/NNP/j2ee for/IN/for enterprise/NN/enterprise applications/NNS/applications /,/, j2me/NNP/j2me for/IN/for mobile/JJ/mobile applications/NNP/applications. sun/NN/sun microsystems/NNS/microsystems has/VBZ/has renamed/VBN/renamed the/DT/the new/JJ/new j2/NNP/j2 versions/NNS/versions as/IN/as java/NN/java se/NN/se /,/, java/NN/java ee/NN/ee and/CC/and java/NN/java me/PRP/me /,/, respectively/NNP/respectively. java/NN/java is/VBZ/is guaranteed/VBN/guaranteed to/TO/to be/VB/be write/JJ/write once/NN/once /,/, run/VBN/run anywhere/NNP/anywhere. java/NN/java is/VBZ/is /:/: •/:/• object/NN/object oriented/VBD/oriented /:/: in/IN/in java/NN/java /,/, everything/NN/everything is/VBZ/is an/DT/an object/NNP/object. java/NN/java can/MD/can be/VB/be easily/RB/easily extended/VBN/extended since/IN/since it/PRP/it is/VBZ/is based/VBN/based on/IN/on the/DT/the object/NN/object model/NNP/model. •/NNP/• platform/NN/platform independent/NN/independent /:/: unlike/IN/unlike many/JJ/many other/JJ/other programming/NN/programming languages/NNS/languages including/VBG/including c/NN/c and/CC/and c/NN/c +/:/+ +/:/+ /,/, when/WRB/when java/NN/java is/VBZ/is compiled/VBN/compiled /,/, it/PRP/it is/VBZ/is not/RB/not compiled/VBN/compiled into/IN/into platform/NN/platform specific/JJ/specific machine/NN/machine /,/, rather/RB/rather into/IN/into platform/NN/platform independent/JJ/independent byte/NN/byte code/NNP/code. this/DT/this byte/NN/byte code/NN/code is/VBZ/is distributed/VBN/distributed over/IN/over the/DT/the web/NN/web and/CC/and interpreted/VBD/interpreted by/IN/by virtual/JJ/virtual machine/NN/machine /:/( jvm/NN/jvm /:/) on/IN/on whichever/NN/whichever platform/NN/platform it/PRP/it is/VBZ/is being/VBG/being run/NNP/run. •/NNP/• simple/NN/simple /:/: java/NN/java is/VBZ/is designed/VBN/designed to/TO/to be/VB/be easy/JJ/easy to/TO/to learn/NNP/learn. if/IN/if you/PRP/you understand/VBP/understand the/DT/the basic/JJ/basic concept/NN/concept of/IN/of oop,java/NNP/oop,java would/MD/would be/VB/be easy/JJ/easy to/TO/to master/NNP/master. •/NNP/• secure/NN/secure /:/: with/IN/with java/NN/java 's/POS/'s secure/NN/secure feature/NN/feature /,/, it/PRP/it enables/VBZ/enables to/TO/to develop/VB/develop virus-free/JJ/virus-free /,/, tamper-free/JJ/tamper-free systems/NNP/systems. authentication/NN/authentication techniques/NNS/techniques are/VBP/are based/VBN/based on/IN/on public-key/JJ/public-key encryption/NNP/encryption. •/NNP/• architectural-neutral/NNP/architectural-neutral /:/: java/NN/java compiler/NN/compiler generates/VBZ/generates an/DT/an architecture-neutral/JJ/architecture-neutral object/NN/object file/NN/file format/NN/format /,/, which/WDT/which makes/VBZ/makes the/DT/the compiled/VBN/compiled code/NN/code to/TO/to be/VB/be executable/JJ/executable on/IN/on many/JJ/many processors/NNS/processors /,/, with/IN/with the/DT/the presence/NN/presence of/IN/of java/NN/java runtime/NN/runtime system/NNP/system. •/NNP/• portable/JJ/portable /:/: being/VBG/being architectural-neutral/JJ/architectural-neutral and/CC/and having/VBG/having no/DT/no implementation/NN/implementation dependent/NN/dependent aspects/NNS/aspects of/IN/of the/DT/the specification/NN/specification makes/VBZ/makes java/NN/java portable/NNP/portable. compiler/NN/compiler injava/NN/injava is/VBZ/is written/VBN/written in/IN/in ansi/NN/ansi c/NN/c with/IN/with a/DT/a clean/JJ/clean portability/NN/portability boundary/NN/boundary which/WDT/which is/VBZ/is a/DT/a posix/NN/posix subset/NNP/subset. •/NNP/• robust/MD/robust /:/: java/VB/java makes/NNS/makes an/DT/an effort/NN/effort to/TO/to eliminate/VB/eliminate error/NN/error prone/NN/prone situations/NNS/situations by/IN/by emphasizing/VBG/emphasizing mainly/RB/mainly on/IN/on compile/JJ/compile time/NN/time error/NN/error checking/VBG/checking and/CC/and runtime/JJ/runtime checking/NNP/checking. chapter/NN/chapter 1/CD/1 •/CD/• multithreaded/VBN/multithreaded /:/: with/IN/with java/NN/java 's/POS/'s multithreaded/VBN/multithreaded feature/NN/feature /,/, it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to write/VB/write programs/NNS/programs that/WDT/that can/MD/can do/VB/do many/JJ/many tasks/NNS/tasks simultaneously/NNP/simultaneously. this/DT/this design/NN/design feature/NN/feature allows/VBZ/allows developers/NNS/developers to/TO/to construct/VB/construct smoothly/RB/smoothly running/VBG/running interactive/JJ/interactive applications/NNP/applications. •/NNP/• interpreted/VBD/interpreted /:/: java/NN/java byte/NN/byte code/NN/code is/VBZ/is translated/VBN/translated on/IN/on the/DT/the fly/NN/fly to/TO/to native/VB/native machine/NN/machine instructions/NNS/instructions and/CC/and is/VBZ/is not/RB/not stored/VBN/stored anywhere/NNP/anywhere. the/DT/the development/NN/development process/NN/process is/VBZ/is more/RBR/more rapid/JJ/rapid and/CC/and analytical/JJ/analytical since/IN/since the/DT/the linking/NN/linking is/VBZ/is an/DT/an incremental/JJ/incremental and/CC/and lightweight/NN/lightweight process/NNP/process. •/NNP/• high/JJ/high performance/NN/performance /:/: with/IN/with the/DT/the use/NN/use of/IN/of just-in-time/JJ/just-in-time compilers/NNS/compilers /,/, java/NN/java enables/NNS/enables high/JJ/high performance/NNP/performance. •/NNP/• distributed/VBD/distributed /:/: java/NN/java is/VBZ/is designed/VBN/designed for/IN/for the/DT/the distributed/VBN/distributed environment/NN/environment of/IN/of the/DT/the internet/NNP/internet. •/NNP/• dynamic/JJ/dynamic /:/: java/NN/java is/VBZ/is considered/VBN/considered to/TO/to be/VB/be more/JJR/more dynamic/JJ/dynamic than/IN/than c/NN/c or/CC/or c/NN/c +/:/+ +/:/+ since/IN/since it/PRP/it is/VBZ/is designed/VBN/designed to/TO/to adapt/VB/adapt to/TO/to an/DT/an evolving/NN/evolving environment/NNP/environment. java/NN/java programs/NNS/programs can/MD/can carry/VB/carry extensive/JJ/extensive amount/NN/amount of/IN/of run-time/JJ/run-time information/NN/information that/WDT/that can/MD/can be/VB/be used/VBN/used to/TO/to verify/VB/verify and/CC/and resolve/VB/resolve accesses/NNS/accesses to/TO/to objects/NNS/objects on/IN/on run-time/NNP/run-time. history/NN/history of/IN/of java/NN/java /:/: james/NNS/james gosling/VBG/gosling initiated/VBN/initiated the/DT/the java/NN/java language/NN/language project/NN/project in/IN/in june/NN/june 1991/CD/1991 for/IN/for use/NN/use in/IN/in one/CD/one of/IN/of his/PRP$/his many/JJ/many set-top/JJ/set-top box/NN/box projects/NNP/projects. the/DT/the language/NN/language /,/, initially/RB/initially called/VBN/called oak/NN/oak after/IN/after an/DT/an oak/NN/oak tree/NN/tree that/WDT/that stood/NN/stood outside/VBP/outside gosling/VBG/gosling 's/POS/'s office/NN/office /,/, also/RB/also went/VBD/went by/IN/by the/DT/the name/NN/name green/NN/green and/CC/and ended/VBD/ended up/RP/up later/JJ/later being/VBG/being renamed/VBN/renamed as/IN/as java/NN/java /,/, from/IN/from a/DT/a list/NN/list of/IN/of random/NN/random words/NNP/words. sun/NN/sun released/VBD/released the/DT/the first/JJ/first public/JJ/public implementation/NN/implementation as/IN/as java/NN/java 1.0/CD/1.0 in/IN/in 1995/CD/1995. it/PRP/it promised/VBD/promised write/JJ/write once/NN/once /,/, run/VBN/run anywhere/RB/anywhere /:/( wora/NN/wora /:/) /,/, providing/VBG/providing no-cost/JJ/no-cost run-times/NNS/run-times on/IN/on popular/JJ/popular platforms/NNP/platforms. on/IN/on 13/CD/13 november/NN/november 2006/CD/2006 /,/, sun/NN/sun released/VBD/released much/RB/much of/IN/of java/NN/java as/IN/as free/JJ/free and/CC/and open/JJ/open source/NN/source software/NN/software under/IN/under the/DT/the terms/NNS/terms of/IN/of the/DT/the gnu/NN/gnu general/NN/general public/JJ/public license/NN/license /:/( gpl/NN/gpl /:/) /./. on/IN/on 8/CD/8 may/MD/may 2007/CD/2007 /,/, sun/NN/sun finished/VBD/finished the/DT/the process/NN/process /,/, making/VBG/making all/DT/all of/IN/of java/NN/java 's/POS/'s core/NN/core code/NN/code free/JJ/free and/CC/and open-source/JJ/open-source /,/, aside/JJ/aside from/IN/from a/DT/a small/JJ/small portion/NN/portion of/IN/of code/NN/code to/TO/to which/WDT/which sun/NN/sun did/VBD/did not/RB/not hold/VB/hold the/DT/the copyright/NNP/copyright. tools/NNS/tools you/PRP/you will/MD/will need/VB/need /:/: for/IN/for performing/NN/performing the/DT/the examples/NNS/examples discussed/VBD/discussed in/IN/in this/DT/this tutorial/JJ/tutorial /,/, you/PRP/you will/MD/will need/VB/need a/DT/a pentium/NN/pentium 200-mhz/CD/200-mhz computer/NN/computer with/IN/with a/DT/a minimum/JJ/minimum of/IN/of 64/CD/64 mb/NN/mb of/IN/of ram/NN/ram /:/( 128/CD/128 mb/NN/mb of/IN/of ram/NN/ram recommended/VBD/recommended /CD/) /./. you/PRP/you also/RB/also will/MD/will need/VB/need the/DT/the following/VBG/following softwares/NNS/softwares /:/: •/:/• linux/NN/linux 7.1/CD/7.1 or/CC/or windows/VBZ/windows 95/98/2000/xp/CD/95/98/2000/xp operating/VBG/operating system/NNP/system. •/NNP/• java/NN/java jdk/NN/jdk 5/CD/5 •/CD/• microsoft/NN/microsoft notepad/NN/notepad or/CC/or any/DT/any other/JJ/other text/NN/text editor/NN/editor this/DT/this tutorial/JJ/tutorial will/MD/will provide/VB/provide the/DT/the necessary/JJ/necessary skills/NNS/skills to/TO/to create/VB/create gui/NN/gui /,/, networking/VBG/networking /,/, and/CC/and web/NN/web applications/NNS/applications using/VBG/using java/NNP/java. next/JJ/next chapter/NN/chapter will/MD/will guide/VB/guide you/PRP/you to/TO/to where/WRB/where you/PRP/you can/MD/can obtain/VB/obtain java/NN/java and/CC/and its/PRP$/its documentation/NNP/documentation. finally/RB/finally /,/, it/PRP/it instructs/VBZ/instructs you/PRP/you on/IN/on how/WRB/how to/TO/to install/VB/install java/NN/java and/CC/and prepare/NN/prepare an/DT/an environment/NN/environment to/TO/to develop/VB/develop java/NN/java applications/NNP/applications. java/NN/java environment/NN/environment setup/NN/setup before/IN/before we/PRP/we proceed/VBP/proceed further/RB/further /,/, it/PRP/it is/VBZ/is important/JJ/important that/IN/that we/PRP/we set/VBP/set up/RP/up the/DT/the java/NN/java environment/NN/environment correctly/NNP/correctly. this/DT/this section/NN/section guides/VBZ/guides you/PRP/you on/IN/on how/WRB/how to/TO/to download/VB/download and/CC/and set/VB/set up/RP/up java/NN/java on/IN/on your/PRP$/your machine/NNP/machine. please/NN/please follow/NN/follow the/DT/the following/VBG/following steps/NNS/steps to/TO/to set/VB/set up/RP/up the/DT/the environment/NNP/environment. java/NN/java se/NN/se is/VBZ/is freely/RB/freely available/JJ/available from/IN/from the/DT/the link/NN/link download/NN/download java/NNP/java. so/RB/so you/PRP/you download/VBD/download a/DT/a version/NN/version based/VBN/based on/IN/on your/PRP$/your operating/NN/operating system/NNP/system. follow/NN/follow the/DT/the instructions/NNS/instructions to/TO/to download/VB/download java/NN/java and/CC/and run/VBP/run the/DT/the .exe/JJ/.exe to/TO/to install/VB/install java/NN/java on/IN/on your/PRP$/your machine/NNP/machine. once/RB/once you/PRP/you installed/VBD/installed java/NN/java on/IN/on your/PRP$/your machine/NN/machine /,/, you/PRP/you would/MD/would need/VB/need to/TO/to set/VB/set environment/NN/environment variables/NNS/variables to/TO/to point/VB/point to/TO/to correct/VB/correct installation/NN/installation directories/NNS/directories /:/: setting/VBG/setting up/RP/up the/DT/the path/NN/path for/IN/for windows/NNS/windows 2000/xp/CD/2000/xp /:/: assuming/VBG/assuming you/PRP/you have/VBP/have installed/VBN/installed java/NN/java in/IN/in c/NN/c /:/: \/:/\ program/NN/program files/NNS/files \/:/\ java/NN/java \/:/\ jdk/NN/jdk directory/NN/directory /:/: •/:/• right-click/JJ/right-click on/IN/on 'my/JJ/'my computer/NN/computer '/''/' and/CC/and select/VB/select 'properties'/NNP/'properties'. •/NNP/• click/NN/click on/IN/on the/DT/the 'environment/JJ/'environment variables/NNS/variables '/POS/' button/NN/button under/IN/under the/DT/the 'advanced/JJ/'advanced '/POS/' tab/NNP/tab. •/NNP/• now/RB/now /,/, alter/NN/alter the/DT/the 'path/JJ/'path '/POS/' variable/JJ/variable so/RB/so that/IN/that it/PRP/it also/RB/also contains/VBZ/contains the/DT/the path/NN/path to/TO/to the/DT/the java/NN/java executable/NNP/executable. example/NN/example /,/, if/IN/if the/DT/the path/NN/path is/VBZ/is currently/RB/currently set/VBN/set to/TO/to 'c/NNP/'c /:/: \/:/\ windows/NNS/windows \/VBP/\ system32/NNP/system32 '/POS/' /,/, then/RB/then change/VB/change your/PRP$/your path/NN/path to/TO/to read/VB/read 'c/JJ/'c /:/: \/:/\ windows/NNS/windows \/VBP/\ system32/NNP/system32 ;/:/; c/NN/c /:/: \/:/\ program/NN/program files/NNS/files \/:/\ java/NN/java \/:/\ jdk/NN/jdk \/:/\ bin'/NNP/bin'. setting/NN/setting up/IN/up the/DT/the path/NN/path for/IN/for windows/NNS/windows 95/98/me/CD/95/98/me /:/: assuming/VBG/assuming you/PRP/you have/VBP/have installed/VBN/installed java/NN/java in/IN/in c/NN/c /:/: \/:/\ program/NN/program files/NNS/files \/:/\ java/NN/java \/:/\ jdk/NN/jdk directory/NN/directory /:/: •/:/• edit/NN/edit the/DT/the 'c/JJ/'c /:/: \/:/\ autoexec.bat/JJ/autoexec.bat '/''/' file/NN/file and/CC/and add/NN/add the/DT/the following/VBG/following line/NN/line at/IN/at the/DT/the end/NN/end /:/: 'set/JJ/'set path/NN/path =/:/= %/NN/% path/NN/path %/NN/% ;/:/; c/NN/c /:/: \/:/\ program/NN/program files/NNS/files \/:/\ java/NN/java \/:/\ jdk/NN/jdk \/:/\ bin/NN/bin '/''/' setting/VBG/setting up/RP/up the/DT/the path/NN/path for/IN/for linux/NN/linux /,/, unix/NN/unix /,/, solaris/VBZ/solaris /,/, freebsd/JJ/freebsd /:/: environment/NN/environment variable/JJ/variable path/NN/path should/MD/should be/VB/be set/VBN/set to/TO/to point/NN/point to/TO/to where/WRB/where the/DT/the java/NN/java binaries/NNS/binaries have/VBP/have been/VBN/been installed/NNP/installed. refer/NN/refer to/TO/to your/PRP$/your shell/NN/shell documentation/NN/documentation if/IN/if you/PRP/you have/VBP/have trouble/JJ/trouble doing/VBG/doing this/NNP/this. example/NN/example /,/, if/IN/if you/PRP/you use/VBP/use bash/NN/bash as/IN/as your/PRP$/your shell/NN/shell /,/, then/RB/then you/PRP/you would/MD/would add/VB/add the/DT/the following/VBG/following line/NN/line to/TO/to the/DT/the end/NN/end of/IN/of your/PRP$/your '.bashrc/JJ/'.bashrc /:/: export/NN/export path/NN/path =/:/= /path/to/java/JJ//path/to/java /:/: $/$/$ path/NN/path '/''/' chapter/NN/chapter 2/CD/2 popular/JJ/popular java/NN/java editors/NNS/editors /:/: to/TO/to write/VB/write your/PRP$/your java/NN/java programs/NNS/programs /,/, you/PRP/you will/MD/will need/VB/need a/DT/a text/NN/text editor/NNP/editor. there/EX/there are/VBP/are even/RB/even more/RBR/more sophisticated/JJ/sophisticated ides/NNS/ides available/JJ/available in/IN/in the/DT/the market/NNP/market. but/CC/but for/IN/for now/RB/now /,/, you/PRP/you can/MD/can consider/VB/consider one/CD/one of/IN/of the/DT/the following/JJ/following /:/: •/:/• notepad/NN/notepad /:/: on/IN/on windows/NNS/windows machine/NN/machine /,/, you/PRP/you can/MD/can use/VB/use any/DT/any simple/NN/simple text/NN/text editor/NN/editor like/IN/like notepad/NN/notepad /:/( recommended/VBD/recommended for/IN/for this/DT/this tutorial/JJ/tutorial /NN/) /,/, textpad/NNP/textpad. •/NNP/• netbeans/VBZ/netbeans /:/: is/VBZ/is a/DT/a java/NN/java ide/NN/ide that/WDT/that is/VBZ/is open-source/JJ/open-source and/CC/and free/JJ/free which/WDT/which can/MD/can be/VB/be downloaded/VBN/downloaded fromhttp/NN/fromhttp /:/: //www.netbeans.org/index.html/NNP///www.netbeans.org/index.html. •/:/• eclipse/NN/eclipse /:/: is/VBZ/is also/RB/also a/DT/a java/NN/java ide/NN/ide developed/VBD/developed by/IN/by the/DT/the eclipse/NN/eclipse open-source/NN/open-source community/NN/community and/CC/and can/MD/can be/VB/be downloaded/VBN/downloaded from/IN/from http/NN/http /:/: //www.eclipse.org//NNP///www.eclipse.org/. next/JJ/next chapter/NN/chapter will/MD/will teach/VB/teach you/PRP/you how/WRB/how to/TO/to write/VB/write and/CC/and run/VBN/run your/PRP$/your first/JJ/first java/NN/java program/NN/program and/CC/and some/DT/some of/IN/of the/DT/the important/JJ/important basic/JJ/basic syntaxes/NNS/syntaxes in/IN/in java/NN/java needed/VBN/needed for/IN/for developing/VBG/developing applications/NNP/applications. java/NN/java basic/JJ/basic syntax/NN/syntax when/WRB/when we/PRP/we consider/VBP/consider a/DT/a java/NN/java program/NN/program /,/, it/PRP/it can/MD/can be/VB/be defined/VBN/defined as/IN/as a/DT/a collection/NN/collection of/IN/of objects/NNS/objects that/WDT/that communicate/NN/communicate via/IN/via invoking/VBG/invoking each/DT/each other/JJ/other 's/POS/'s methods/NNP/methods. let/NN/let us/PRP/us now/RB/now briefly/RB/briefly look/VBP/look into/IN/into what/WP/what do/VBP/do class/NN/class /,/, object/JJ/object /,/, methods/NNS/methods and/CC/and instance/NN/instance variables/NNS/variables mean/NNP/mean. •/NNP/• object/NN/object /:/- objects/NNS/objects have/VBP/have states/NNS/states and/CC/and behaviors/NNP/behaviors. example/NN/example /:/: a/DT/a dog/NN/dog has/VBZ/has states-color/JJ/states-color /,/, name/NN/name /,/, breed/VBD/breed as/IN/as well/RB/well as/IN/as behaviors/NNS/behaviors -wagging/JJ/-wagging /,/, barking/VBG/barking /,/, eating/NNP/eating. an/DT/an object/NN/object is/VBZ/is an/DT/an instance/NN/instance of/IN/of a/DT/a class/NNP/class. •/NNP/• class/NN/class /:/- a/DT/a class/NN/class can/MD/can be/VB/be defined/VBN/defined as/IN/as a/DT/a template/blue/JJ/template/blue print/NN/print that/WDT/that describes/VBZ/describes the/DT/the behaviors/states/NNS/behaviors/states that/WDT/that object/NN/object of/IN/of its/PRP$/its type/NN/type support/NNP/support. •/NNP/• methods/NNS/methods /:/- a/DT/a method/NN/method is/VBZ/is basically/RB/basically a/DT/a behavior/NNP/behavior. a/DT/a class/NN/class can/MD/can contain/VB/contain many/JJ/many methods/NNP/methods. it/PRP/it is/VBZ/is in/IN/in methods/NNS/methods where/WRB/where the/DT/the logics/NNS/logics are/VBP/are written/VBN/written /,/, data/NNS/data is/VBZ/is manipulated/VBN/manipulated and/CC/and all/DT/all the/DT/the actions/NNS/actions are/VBP/are executed/NNP/executed. •/NNP/• instance/NN/instance variables/NNS/variables /:/- each/DT/each object/NN/object has/VBZ/has its/PRP$/its unique/JJ/unique set/NN/set of/IN/of instance/NN/instance variables/NNP/variables. an/DT/an object/NN/object 's/POS/'s state/NN/state is/VBZ/is created/VBN/created by/IN/by the/DT/the values/NNS/values assigned/VBD/assigned to/TO/to these/DT/these instance/NN/instance variables/NNP/variables. first/RB/first java/VB/java program/NN/program /:/: let/VB/let us/PRP/us look/VB/look at/IN/at a/DT/a simple/JJ/simple code/NN/code that/WDT/that would/MD/would print/VB/print the/DT/the words/NNS/words hello/VBP/hello world/NNP/world. public/JJ/public class/NN/class myfirstjavaprogram/NN/myfirstjavaprogram /:/{ //:// */-NONE-/* this/DT/this is/VBZ/is my/PRP$/my first/JJ/first java/NN/java program/NNP/program. */-NONE-/* this/DT/this will/MD/will print/VB/print 'hello/-NONE-/'hello world/NN/world '/''/' as/IN/as the/DT/the output/NN/output */-NONE-/* //:// public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ system.out.println/JJ/system.out.println /NN/( "/:/" hello/NN/hello world/NN/world "/:/" /:/) ;/:/; ///:/// prints/NNS/prints hello/VBP/hello world/NN/world /:/} /:/} let/VB/let 's/POS/'s look/NN/look at/IN/at how/WRB/how to/TO/to save/VB/save the/DT/the file/NN/file /,/, compile/JJ/compile and/CC/and run/VBP/run the/DT/the program/NNP/program. please/NN/please follow/NN/follow the/DT/the steps/NNS/steps given/VBN/given below/IN/below /:/: •/:/• open/JJ/open notepad/NN/notepad and/CC/and add/VBD/add the/DT/the code/NN/code as/IN/as above/NNP/above. •/NNP/• save/VBD/save the/DT/the file/NN/file as/IN/as /:/: myfirstjavaprogram.java/NNP/myfirstjavaprogram.java. •/:/• open/JJ/open a/DT/a command/NN/command prompt/NN/prompt window/NN/window and/CC/and go/VB/go o/RB/o the/DT/the directory/NN/directory where/WRB/where you/PRP/you saved/VBD/saved the/DT/the class/NNP/class. assume/NN/assume it/PRP/it 's/VBZ/'s c/NN/c /:/: \/:/\ /./. •/:/• type/NN/type '/''/' javac/NN/javac myfirstjavaprogram.java/-NONE-/myfirstjavaprogram.java '/''/' and/CC/and press/NN/press enter/NN/enter to/TO/to compile/VB/compile your/PRP$/your code/NNP/code. if/IN/if there/EX/there are/VBP/are no/DT/no errors/NNS/errors in/IN/in your/PRP$/your code/NN/code /,/, the/DT/the command/NN/command prompt/NN/prompt will/MD/will take/VB/take you/PRP/you to/TO/to the/DT/the next/JJ/next line/NN/line /:/( assumption/NN/assumption /:/: the/DT/the path/NN/path variable/JJ/variable is/VBZ/is set/VBN/set /-NONE-/) /./. chapter/NN/chapter 3/CD/3 •/CD/• now/RB/now /,/, type/NN/type '/''/' java/NN/java myfirstjavaprogram/NN/myfirstjavaprogram '/''/' to/TO/to run/VB/run your/PRP$/your program/NNP/program. •/NNP/• you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to see/VB/see '/POS/' hello/NN/hello world/NN/world '/''/' printed/VBN/printed on/IN/on the/DT/the window/NNP/window. c/NN/c /:/: >/:/> javac/NN/javac myfirstjavaprogram.java/-NONE-/myfirstjavaprogram.java c/NN/c /:/: >/:/> java/NN/java myfirstjavaprogram/NN/myfirstjavaprogram helloworld/NN/helloworld basic/JJ/basic syntax/NN/syntax /:/: about/IN/about java/NN/java programs/NNS/programs /,/, it/PRP/it is/VBZ/is very/RB/very important/JJ/important to/TO/to keep/VB/keep in/IN/in mind/NN/mind the/DT/the following/VBG/following points/NNP/points. •/NNP/• case/NN/case sensitivity/NN/sensitivity /:/- java/NN/java is/VBZ/is case/NN/case sensitive/JJ/sensitive /,/, which/WDT/which means/VBZ/means identifier/JJR/identifier hello/NN/hello and/CC/and hello/NN/hello would/MD/would have/VB/have different/JJ/different meaning/NN/meaning in/IN/in java/NNP/java. •/NNP/• class/NN/class names/VBZ/names /:/- for/IN/for all/PDT/all class/NN/class names/NNS/names /,/, the/DT/the first/JJ/first letter/NN/letter should/MD/should be/VB/be in/IN/in upper/JJR/upper case/NNP/case. if/IN/if several/JJ/several words/NNS/words are/VBP/are used/VBN/used to/TO/to form/NN/form a/DT/a name/NN/name of/IN/of the/DT/the class/NN/class /,/, each/DT/each inner/NN/inner word/NN/word 's/POS/'s first/JJ/first letter/NN/letter should/MD/should be/VB/be in/IN/in upper/JJR/upper case/NNP/case. example/NN/example class/NN/class myfirstjavaclass/NN/myfirstjavaclass •/:/• method/NN/method names/NNS/names /:/- all/DT/all method/NN/method names/NNS/names should/MD/should start/VB/start with/IN/with a/DT/a lower/JJR/lower case/NN/case letter/NNP/letter. if/IN/if several/JJ/several words/NNS/words are/VBP/are used/VBN/used to/TO/to form/NN/form the/DT/the name/NN/name of/IN/of the/DT/the method/NN/method /,/, then/RB/then each/DT/each inner/NN/inner word/NN/word 's/POS/'s first/JJ/first letter/NN/letter should/MD/should be/VB/be in/IN/in upper/JJR/upper case/NNP/case. example/NN/example public/JJ/public void/NN/void mymethodname/NN/mymethodname /:/( /:/) •/:/• program/NN/program file/NN/file name/NN/name /:/- name/NN/name of/IN/of the/DT/the program/NN/program file/NN/file should/MD/should exactly/RB/exactly match/VB/match the/DT/the class/NN/class name/NNP/name. when/WRB/when saving/VBG/saving the/DT/the file/NN/file /,/, you/PRP/you should/MD/should save/VB/save it/PRP/it using/VBG/using the/DT/the class/NN/class name/NN/name /:/( remember/NN/remember java/NN/java is/VBZ/is case/NN/case sensitive/JJ/sensitive /NN/) and/CC/and append/NN/append '.java/NN/'.java '/''/' to/TO/to the/DT/the end/NN/end of/IN/of the/DT/the name/NN/name /:/( if/IN/if the/DT/the file/NN/file name/NN/name and/CC/and the/DT/the class/NN/class name/NN/name do/VBP/do not/RB/not match/VB/match your/PRP$/your program/NN/program will/MD/will not/RB/not compile/VB/compile /:/) /./. example/NN/example /:/: assume/NN/assume 'myfirstjavaprogram/NN/'myfirstjavaprogram '/''/' is/VBZ/is the/DT/the class/NN/class name/NN/name /,/, then/RB/then the/DT/the file/NN/file should/MD/should be/VB/be saved/VBN/saved as'myfirstjavaprogram.java/-NONE-/as'myfirstjavaprogram.java '/''/' •/:/• public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string args/NNS/args /:/[ /:/] /:/) /:/- java/NN/java program/NN/program processing/NN/processing starts/VBZ/starts from/IN/from the/DT/the main/JJ/main /NN/( /:/) method/NN/method /,/, which/WDT/which is/VBZ/is a/DT/a mandatory/NN/mandatory part/NN/part of/IN/of every/DT/every java/NN/java program/NNP/program. java/NN/java identifiers/NNS/identifiers /:/: all/DT/all java/NN/java components/NNS/components require/VBP/require names/NNP/names. names/NNS/names used/VBN/used for/IN/for classes/NNS/classes /,/, variables/NNS/variables and/CC/and methods/NNS/methods are/VBP/are called/VBN/called identifiers/NNP/identifiers. in/IN/in java/NN/java /,/, there/EX/there are/VBP/are several/JJ/several points/NNS/points to/TO/to remember/VB/remember about/IN/about identifiers/NNP/identifiers. they/PRP/they are/VBP/are as/IN/as follows/NNS/follows /:/: •/:/• all/DT/all identifiers/NNS/identifiers should/MD/should begin/VB/begin with/IN/with a/DT/a letter/NN/letter /:/( a/DT/a to/TO/to z/VB/z or/CC/or a/DT/a to/TO/to z/VB/z /:/) /,/, currency/NN/currency character/NN/character /:/( $/$/$ /CD/) or/CC/or an/DT/an underscore/NN/underscore /:/( _/NNP/_ /:/) /./. •/:/• after/IN/after the/DT/the first/JJ/first character/NN/character /,/, identifiers/NNS/identifiers can/MD/can have/VB/have any/DT/any combination/NN/combination of/IN/of characters/NNP/characters. •/NNP/• a/DT/a keyword/NN/keyword can/MD/can not/RB/not be/VB/be used/VBN/used as/IN/as an/DT/an identifier/NNP/identifier. •/NNP/• most/RBS/most importantly/RB/importantly identifiers/NNS/identifiers are/VBP/are case/NN/case sensitive/NNP/sensitive. •/NNP/• examples/NNS/examples of/IN/of legal/JJ/legal identifiers/NNS/identifiers /:/: age/NN/age /,/, $/$/$ salary/NN/salary /,/, _value/NNP/_value /,/, __1_value/NNP/__1_value •/NNP/• examples/NNS/examples of/IN/of illegal/JJ/illegal identifiers/NNS/identifiers /:/: 123abc/JJ/123abc /,/, -salary/JJ/-salary java/NN/java modifiers/NNS/modifiers /:/: like/IN/like other/JJ/other languages/NNS/languages /,/, it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to modify/VB/modify classes/NNS/classes /,/, methods/NNS/methods /,/, etc/NNP/etc. /,/, by/IN/by using/NN/using modifiers/NNP/modifiers. there/EX/there are/VBP/are two/CD/two categories/NNS/categories of/IN/of modifiers/NNS/modifiers /:/: •/:/• access/NN/access modifiers/NNS/modifiers /:/: default/NN/default /,/, public/JJ/public /,/, protected/VBN/protected /,/, private/JJ/private •/NN/• non-access/JJ/non-access modifiers/NNS/modifiers /:/: final/JJ/final /,/, abstract/NN/abstract /,/, strictfp/NN/strictfp we/PRP/we will/MD/will be/VB/be looking/VBG/looking into/IN/into more/JJR/more details/NNS/details about/IN/about modifiers/NNS/modifiers in/IN/in the/DT/the next/JJ/next section/NNP/section. java/NN/java variables/NNS/variables /:/: we/PRP/we would/MD/would see/VB/see following/VBG/following type/NN/type of/IN/of variables/NNS/variables in/IN/in java/NN/java /:/: •/:/• local/JJ/local variables/NNS/variables •/:/• class/NN/class variables/NNS/variables /:/( static/JJ/static variables/NNS/variables /:/) •/:/• instance/NN/instance variables/NNS/variables /:/( non-static/JJ/non-static variables/NNS/variables /:/) java/NN/java arrays/NNS/arrays /:/: arrays/NNS/arrays are/VBP/are objects/NNS/objects that/IN/that store/NN/store multiple/NNS/multiple variables/NNS/variables of/IN/of the/DT/the same/JJ/same type/NNP/type. however/RB/however /,/, an/DT/an array/NN/array itself/PRP/itself is/VBZ/is an/DT/an object/NN/object on/IN/on the/DT/the heap/NNP/heap. we/PRP/we will/MD/will look/VB/look into/IN/into how/WRB/how to/TO/to declare/VB/declare /,/, construct/NN/construct and/CC/and initialize/VB/initialize in/IN/in the/DT/the upcoming/NN/upcoming chapters/NNP/chapters. java/NN/java enums/NNS/enums /:/: enums/NNS/enums were/VBD/were introduced/VBN/introduced in/IN/in java/NN/java 5.0/CD/5.0. enums/NNS/enums restrict/VBP/restrict a/DT/a variable/JJ/variable to/TO/to have/VB/have one/CD/one of/IN/of only/RB/only a/DT/a few/JJ/few predefined/VBN/predefined values/NNP/values. the/DT/the values/NNS/values in/IN/in this/DT/this enumerated/VBN/enumerated list/NN/list are/VBP/are called/VBN/called enums/NNP/enums. with/IN/with the/DT/the use/NN/use of/IN/of enums/NNS/enums /,/, it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to reduce/VB/reduce the/DT/the number/NN/number of/IN/of bugs/NNS/bugs in/IN/in your/PRP$/your code/NNP/code. for/IN/for example/NN/example /,/, if/IN/if we/PRP/we consider/VBP/consider an/DT/an application/NN/application for/IN/for a/DT/a fresh/JJ/fresh juice/NN/juice shop/NN/shop /,/, it/PRP/it would/MD/would be/VB/be possible/JJ/possible to/TO/to restrict/VB/restrict the/DT/the glass/NN/glass size/NN/size to/TO/to small/JJ/small /,/, medium/NN/medium and/CC/and large/NNP/large. this/DT/this would/MD/would make/VB/make sure/JJ/sure that/IN/that it/PRP/it would/MD/would not/RB/not allow/VB/allow anyone/NN/anyone to/TO/to order/NN/order any/DT/any size/NN/size other/JJ/other than/IN/than the/DT/the small/JJ/small /,/, medium/NN/medium or/CC/or large/NNP/large. example/NN/example /:/: class/NN/class freshjuice/NN/freshjuice /:/{ enum/NN/enum freshjuicesize/NN/freshjuicesize /:/{ small/JJ/small /,/, meduim/JJ/meduim /,/, large/JJ/large /NN/} freshjuicesize/NN/freshjuicesize size/NN/size ;/:/; /:/} public/JJ/public class/NN/class freshjuicetest/NN/freshjuicetest /:/{ public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string args/NNS/args /:/[ /:/] /:/) /:/{ freshjuice/NN/freshjuice juice/NN/juice =/:/= new/JJ/new freshjuice/NN/freshjuice /:/( /:/) ;/:/; juice.size/JJ/juice.size =/NN/= freshjuice.freshjuicesize.meduim/JJ/freshjuice.freshjuicesize.meduim ;/:/; /:/} /:/} note/NN/note /:/: enums/NNS/enums can/MD/can be/VB/be declared/VBN/declared as/IN/as their/PRP$/their own/JJ/own or/CC/or inside/NN/inside a/DT/a class/NNP/class. methods/VBZ/methods /,/, variables/NNS/variables /,/, constructors/NNS/constructors can/MD/can be/VB/be defined/VBN/defined inside/NN/inside enums/NNS/enums as/IN/as well/NNP/well. java/NN/java keywords/NNS/keywords /:/: the/DT/the following/VBG/following list/NN/list shows/NNS/shows the/DT/the reserved/JJ/reserved words/NNS/words in/IN/in java/NNP/java. these/DT/these reserved/VBD/reserved words/NNS/words may/MD/may not/RB/not be/VB/be used/VBN/used as/IN/as constant/JJ/constant or/CC/or variable/JJ/variable or/CC/or any/DT/any other/JJ/other identifier/NN/identifier names/NNP/names. abstract/NN/abstract assert/NN/assert boolean/NN/boolean break/NN/break byte/NN/byte case/NN/case catch/NN/catch char/NN/char class/NN/class const/NN/const continue/NN/continue default/NN/default do/VBP/do double/JJ/double else/NN/else enum/NN/enum extends/NNS/extends final/JJ/final finally/RB/finally float/JJ/float for/IN/for goto/NN/goto if/IN/if implements/NNS/implements import/VBP/import instanceof/IN/instanceof int/NN/int interface/NN/interface long/RB/long native/JJ/native new/JJ/new package/NN/package private/JJ/private protected/VBN/protected public/JJ/public return/NN/return short/JJ/short static/JJ/static strictfp/NN/strictfp super/NN/super switch/NN/switch synchronized/VBD/synchronized this/DT/this throw/NN/throw throws/VBZ/throws transient/NN/transient try/NN/try void/VBD/void volatile/JJ/volatile while/IN/while comments/NNS/comments in/IN/in java/NN/java java/NN/java supports/NNS/supports single-line/JJ/single-line and/CC/and multi-line/JJ/multi-line comments/NNS/comments very/RB/very similar/JJ/similar to/TO/to c/VB/c and/CC/and c/NN/c +/:/+ +/:/+ /./. all/DT/all characters/NNS/characters available/JJ/available inside/NN/inside any/DT/any comment/NN/comment are/VBP/are ignored/VBN/ignored by/IN/by java/NN/java compiler/NNP/compiler. public/JJ/public class/NN/class myfirstjavaprogram/NN/myfirstjavaprogram /:/{ //:// */-NONE-/* this/DT/this is/VBZ/is my/PRP$/my first/JJ/first java/NN/java program/NNP/program. */-NONE-/* this/DT/this will/MD/will print/VB/print 'hello/-NONE-/'hello world/NN/world '/''/' as/IN/as the/DT/the output/NN/output */-NONE-/* this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of multi-line/JJ/multi-line comments/NNP/comments. */-NONE-/* //:// public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ ///:/// this/DT/this is/VBZ/is an/DT/an example/NN/example of/IN/of single/JJ/single line/NN/line comment/NN/comment //:// */-NONE-/* this/DT/this is/VBZ/is also/RB/also an/DT/an example/NN/example of/IN/of single/JJ/single line/NN/line comment/NNP/comment. */-NONE-/* //:// system.out.println/JJ/system.out.println /NN/( "/:/" hello/NN/hello world/NN/world "/:/" /:/) ;/:/; /:/} /:/} using/VBG/using blank/NN/blank lines/NNS/lines /:/: a/DT/a line/NN/line containing/VBG/containing only/RB/only whitespace/NN/whitespace /,/, possibly/RB/possibly with/IN/with a/DT/a comment/NN/comment /,/, is/VBZ/is known/VBN/known as/IN/as a/DT/a blank/NN/blank line/NN/line /,/, and/CC/and java/NN/java totally/RB/totally ignores/VBZ/ignores it/NNP/it. inheritance/NN/inheritance /:/: java/NN/java classes/NNS/classes can/MD/can be/VB/be derived/VBN/derived from/IN/from classes/NNP/classes. basically/RB/basically /,/, if/IN/if you/PRP/you need/VBP/need to/TO/to create/VB/create a/DT/a new/JJ/new class/NN/class and/CC/and here/RB/here is/VBZ/is already/RB/already a/DT/a class/NN/class that/WDT/that has/VBZ/has some/DT/some of/IN/of the/DT/the code/NN/code you/PRP/you require/VBP/require /,/, then/RB/then it/PRP/it is/VBZ/is possible/JJ/possible to/TO/to derive/JJ/derive your/PRP$/your new/JJ/new class/NN/class from/IN/from the/DT/the already/RB/already existing/VBG/existing code/NNP/code. this/DT/this concept/NN/concept allows/VBZ/allows you/PRP/you to/TO/to reuse/VB/reuse the/DT/the fields/NNS/fields and/CC/and methods/NNS/methods of/IN/of the/DT/the existing/VBG/existing class/NN/class without/IN/without having/VBG/having to/TO/to rewrite/VB/rewrite the/DT/the code/NN/code in/IN/in a/DT/a new/JJ/new class/NNP/class. in/IN/in this/DT/this scenario/NN/scenario /,/, the/DT/the existing/VBG/existing class/NN/class is/VBZ/is called/VBN/called the/DT/the superclass/NN/superclass and/CC/and the/DT/the derived/JJ/derived class/NN/class is/VBZ/is called/VBN/called the/DT/the subclass/NNP/subclass. interfaces/NNS/interfaces /:/: in/IN/in java/NN/java language/NN/language /,/, an/DT/an interface/NN/interface can/MD/can be/VB/be defined/VBN/defined as/IN/as a/DT/a contract/NN/contract between/IN/between objects/NNS/objects on/IN/on how/WRB/how to/TO/to communicate/VB/communicate with/IN/with each/DT/each other/NNP/other. interfaces/NNS/interfaces play/VBP/play a/DT/a vital/JJ/vital role/NN/role when/WRB/when it/PRP/it comes/VBZ/comes to/TO/to the/DT/the concept/NN/concept of/IN/of inheritance/NNP/inheritance. an/DT/an interface/NN/interface defines/VBZ/defines the/DT/the methods/NNS/methods /,/, a/DT/a deriving/NN/deriving class/NN/class /:/( subclass/NN/subclass /:/) should/MD/should use/NNP/use. but/CC/but the/DT/the implementation/NN/implementation of/IN/of the/DT/the methods/NNS/methods is/VBZ/is totally/RB/totally up/IN/up to/TO/to the/DT/the subclass/NNP/subclass. the/DT/the next/JJ/next section/NN/section explains/VBZ/explains about/IN/about objects/NNS/objects and/CC/and classes/NNS/classes in/IN/in java/NN/java programming/NNP/programming. at/IN/at the/DT/the end/NN/end of/IN/of the/DT/the session/NN/session /,/, you/PRP/you will/MD/will be/VB/be able/JJ/able to/TO/to get/VB/get a/DT/a clear/JJ/clear picture/NN/picture as/IN/as to/TO/to what/WP/what are/VBP/are objects/NNS/objects and/CC/and what/WP/what are/VBP/are classes/NNS/classes in/IN/in java/NNP/java. java/NN/java object/NN/object &/CC/& classes/NNS/classes java/VBP/java is/VBZ/is an/DT/an object-oriented/JJ/object-oriented language/NNP/language. as/IN/as a/DT/a language/NN/language that/WDT/that has/VBZ/has the/DT/the object/NN/object oriented/VBD/oriented feature/NN/feature /,/, java/NN/java supports/NNS/supports the/DT/the following/VBG/following fundamental/JJ/fundamental concepts/NNS/concepts /:/: •/:/• polymorphism/NN/polymorphism •/:/• inheritance/NN/inheritance •/:/• encapsulation/NN/encapsulation •/:/• abstraction/NN/abstraction •/:/• classes/NNS/classes •/VBP/• objects/NNS/objects •/:/• instance/NN/instance •/:/• method/NN/method •/:/• message/NN/message parsing/NN/parsing in/IN/in this/DT/this chapter/NN/chapter /,/, we/PRP/we will/MD/will look/VB/look into/IN/into the/DT/the concepts/NNS/concepts classes/VBZ/classes and/CC/and objects/NNP/objects. •/NNP/• object/NN/object /:/- objects/NNS/objects have/VBP/have states/NNS/states and/CC/and behaviors/NNP/behaviors. example/NN/example /:/: a/DT/a dog/NN/dog has/VBZ/has states-color/JJ/states-color /,/, name/NN/name /,/, breed/VBD/breed as/IN/as well/RB/well as/IN/as behaviors/NNS/behaviors -wagging/JJ/-wagging /,/, barking/VBG/barking /,/, eating/NNP/eating. an/DT/an object/NN/object is/VBZ/is an/DT/an instance/NN/instance of/IN/of a/DT/a class/NNP/class. •/NNP/• class/NN/class /:/- a/DT/a class/NN/class can/MD/can be/VB/be defined/VBN/defined as/IN/as a/DT/a template/blue/JJ/template/blue print/NN/print that/WDT/that describes/VBZ/describes the/DT/the behaviors/states/NNS/behaviors/states that/WDT/that object/NN/object of/IN/of its/PRP$/its type/NN/type support/NNP/support. objects/NNS/objects in/IN/in java/NN/java /:/: let/VB/let us/PRP/us now/RB/now look/VBP/look deep/JJ/deep into/IN/into what/WP/what are/VBP/are objects/NNP/objects. if/IN/if we/PRP/we consider/VBP/consider the/DT/the real-world/JJ/real-world we/PRP/we can/MD/can find/VB/find many/JJ/many objects/NNS/objects around/IN/around us/PRP/us /,/, cars/NNS/cars /,/, dogs/NNS/dogs /,/, humans/NNS/humans /,/, etc/NNP/etc. all/DT/all these/DT/these objects/NNS/objects have/VBP/have a/DT/a state/NN/state and/CC/and behavior/NNP/behavior. if/IN/if we/PRP/we consider/VBP/consider a/DT/a dog/NN/dog /,/, then/RB/then its/PRP$/its state/NN/state is/VBZ/is /:/- name/NN/name /,/, breed/VBD/breed /,/, color/NN/color /,/, and/CC/and the/DT/the behavior/NN/behavior is/VBZ/is /:/- barking/VBG/barking /,/, wagging/VBG/wagging /,/, running/VBG/running if/IN/if you/PRP/you compare/VBP/compare the/DT/the software/NN/software object/NN/object with/IN/with a/DT/a real/JJ/real world/NN/world object/NN/object /,/, they/PRP/they have/VBP/have very/RB/very similar/JJ/similar characteristics/NNP/characteristics. software/NN/software objects/NNS/objects also/RB/also have/VBP/have a/DT/a state/NN/state and/CC/and behavior/NNP/behavior. a/DT/a software/NN/software object/NN/object 's/POS/'s state/NN/state is/VBZ/is stored/VBN/stored in/IN/in fields/NNS/fields and/CC/and behavior/JJ/behavior is/VBZ/is shown/VBN/shown via/IN/via methods/NNP/methods. so/RB/so in/IN/in software/NN/software development/NN/development /,/, methods/NNS/methods operate/VBP/operate on/IN/on the/DT/the internal/JJ/internal state/NN/state of/IN/of an/DT/an object/NN/object and/CC/and the/DT/the object-to-object/JJ/object-to-object communication/NN/communication is/VBZ/is done/VBN/done via/IN/via methods/NNP/methods. chapter/NN/chapter 4/CD/4 classes/NNS/classes in/IN/in java/NN/java /:/: a/DT/a class/NN/class is/VBZ/is a/DT/a blue/JJ/blue print/NN/print from/IN/from which/WDT/which individual/JJ/individual objects/NNS/objects are/VBP/are created/NNP/created. a/DT/a sample/NN/sample of/IN/of a/DT/a class/NN/class is/VBZ/is given/VBN/given below/IN/below /:/: public/JJ/public class/NN/class dog/NN/dog /:/{ string/VBG/string breed/NN/breed ;/:/; int/NN/int age/NN/age ;/:/; string/VBG/string color/NN/color ;/:/; void/JJ/void barking/NN/barking /:/( /:/) /:/{ /:/} void/JJ/void hungry/NN/hungry /:/( /:/) /:/{ /:/} void/JJ/void sleeping/NN/sleeping /:/( /:/) /:/{ /:/} /:/} a/DT/a class/NN/class can/MD/can contain/VB/contain any/DT/any of/IN/of the/DT/the following/JJ/following variable/JJ/variable types/NNP/types. •/NNP/• local/JJ/local variables/NNS/variables /:/: variables/NNS/variables defined/VBD/defined inside/NN/inside methods/NNS/methods /,/, constructors/NNS/constructors or/CC/or blocks/NNS/blocks are/VBP/are called/VBN/called local/JJ/local variables/NNP/variables. the/DT/the variable/JJ/variable will/MD/will be/VB/be declared/VBN/declared and/CC/and initialized/VBN/initialized within/IN/within the/DT/the method/NN/method and/CC/and the/DT/the variable/JJ/variable will/MD/will be/VB/be destroyed/VBN/destroyed when/WRB/when the/DT/the method/NN/method has/VBZ/has completed/NNP/completed. •/NNP/• instance/NN/instance variables/NNS/variables /:/: instance/NN/instance variables/NNS/variables are/VBP/are variables/NNS/variables within/IN/within a/DT/a class/NN/class but/CC/but outside/IN/outside any/DT/any method/NNP/method. these/DT/these variables/NNS/variables are/VBP/are instantiated/VBN/instantiated when/WRB/when the/DT/the class/NN/class is/VBZ/is loaded/NNP/loaded. instance/NN/instance variables/NNS/variables can/MD/can be/VB/be accessed/VBN/accessed from/IN/from inside/NN/inside any/DT/any method/NN/method /,/, constructor/NN/constructor or/CC/or blocks/NNS/blocks of/IN/of that/DT/that particular/JJ/particular class/NNP/class. •/NNP/• class/NN/class variables/NNS/variables /:/: class/NN/class variables/NNS/variables are/VBP/are variables/NNS/variables declared/VBN/declared within/IN/within a/DT/a class/NN/class /,/, outside/IN/outside any/DT/any method/NN/method /,/, with/IN/with the/DT/the static/JJ/static keyword/NNP/keyword. a/DT/a class/NN/class can/MD/can have/VB/have any/DT/any number/NN/number of/IN/of methods/NNS/methods to/TO/to access/NN/access the/DT/the value/NN/value of/IN/of various/JJ/various kinds/NNS/kinds of/IN/of methods/NNP/methods. in/IN/in the/DT/the above/NN/above example/NN/example /,/, barking/NN/barking /:/( /:/) /,/, hungry/NN/hungry /:/( /:/) and/CC/and sleeping/VBG/sleeping /:/( /:/) are/VBP/are methods/NNP/methods. below/IN/below mentioned/VBN/mentioned are/VBP/are some/DT/some of/IN/of the/DT/the important/JJ/important topics/NNS/topics that/WDT/that need/VBP/need to/TO/to be/VB/be discussed/VBN/discussed when/WRB/when looking/VBG/looking into/IN/into classes/NNS/classes of/IN/of the/DT/the java/NN/java language/NNP/language. constructors/NNS/constructors /:/: when/WRB/when discussing/VBG/discussing about/IN/about classes/NNS/classes /,/, one/CD/one of/IN/of the/DT/the most/RBS/most important/JJ/important subtopic/NN/subtopic would/MD/would be/VB/be constructors/NNP/constructors. every/DT/every class/NN/class has/VBZ/has a/DT/a constructor/NNP/constructor. if/IN/if we/PRP/we do/VBP/do not/RB/not explicitly/RB/explicitly write/JJ/write a/DT/a constructor/NN/constructor for/IN/for a/DT/a class/NN/class the/DT/the java/NN/java compiler/NN/compiler builds/NNS/builds a/DT/a default/NN/default constructor/NN/constructor for/IN/for that/DT/that class/NNP/class. each/DT/each time/NN/time a/DT/a new/JJ/new object/NN/object is/VBZ/is created/VBN/created /,/, at/IN/at least/JJS/least one/CD/one constructor/NN/constructor will/MD/will be/VB/be invoked/NNP/invoked. the/DT/the main/JJ/main rule/NN/rule of/IN/of constructors/NNS/constructors is/VBZ/is that/IN/that they/PRP/they should/MD/should have/VB/have the/DT/the same/JJ/same name/NN/name as/IN/as the/DT/the class/NNP/class. a/DT/a class/NN/class can/MD/can have/VB/have more/JJR/more than/IN/than one/CD/one constructor/NNP/constructor. example/NN/example of/IN/of a/DT/a constructor/NN/constructor is/VBZ/is given/VBN/given below/IN/below /:/: public/JJ/public class/NN/class puppy/NN/puppy /:/{ public/JJ/public puppy/NN/puppy /:/( /:/) /:/{ /:/} public/JJ/public puppy/NN/puppy /:/( string/VBG/string name/NN/name /:/) /:/{ ///:/// this/DT/this constructor/NN/constructor has/VBZ/has one/CD/one parameter/NN/parameter /,/, name/NNP/name. /NNP/} /NNP/} java/NN/java also/RB/also supports/VBZ/supports singleton/NN/singleton classes/NNS/classes where/WRB/where you/PRP/you would/MD/would be/VB/be able/JJ/able to/TO/to create/VB/create only/RB/only one/CD/one instance/NN/instance of/IN/of a/DT/a class/NNP/class. singleton/NN/singleton classes/NNS/classes the/DT/the singleton/NN/singleton 's/POS/'s purpose/NN/purpose is/VBZ/is to/TO/to control/NN/control object/NN/object creation/NN/creation /,/, limiting/VBG/limiting the/DT/the number/NN/number of/IN/of objects/NNS/objects to/TO/to one/CD/one only/NNP/only. since/IN/since there/EX/there is/VBZ/is only/RB/only one/CD/one singleton/NN/singleton instance/NN/instance /,/, any/DT/any instance/NN/instance fields/NNS/fields of/IN/of a/DT/a singleton/NN/singleton will/MD/will occur/VB/occur only/RB/only once/RB/once per/IN/per class/NN/class /,/, just/RB/just like/IN/like static/JJ/static fields/NNP/fields. singletons/NNS/singletons often/RB/often control/NN/control access/NN/access to/TO/to resources/NNS/resources such/JJ/such as/IN/as database/NN/database connections/NNS/connections or/CC/or sockets/NNP/sockets. for/IN/for example/NN/example /,/, if/IN/if you/PRP/you have/VBP/have a/DT/a license/NN/license for/IN/for only/RB/only one/CD/one connection/NN/connection for/IN/for your/PRP$/your database/NN/database or/CC/or your/PRP$/your jdbc/NN/jdbc driver/NN/driver has/VBZ/has trouble/JJ/trouble with/IN/with multithreading/NN/multithreading /,/, the/DT/the singleton/NN/singleton makes/VBZ/makes sure/NN/sure that/IN/that only/RB/only one/CD/one connection/NN/connection is/VBZ/is made/VBN/made or/CC/or that/IN/that only/RB/only one/CD/one thread/NN/thread can/MD/can access/NN/access the/DT/the connection/NN/connection at/IN/at a/DT/a time/NNP/time. implementing/NN/implementing singletons/NNS/singletons /:/: example/NN/example 1/CD/1 /:/: the/DT/the easiest/JJS/easiest implementation/NN/implementation consists/NNS/consists of/IN/of a/DT/a private/JJ/private constructor/NN/constructor and/CC/and a/DT/a field/NN/field to/TO/to hold/VB/hold its/PRP$/its result/NN/result /,/, and/CC/and a/DT/a static/JJ/static accessor/NN/accessor method/NN/method with/IN/with a/DT/a name/NN/name like/IN/like getinstance/NN/getinstance /:/( /:/) /./. the/DT/the private/JJ/private field/NN/field can/MD/can be/VB/be assigned/VBN/assigned from/IN/from within/IN/within a/DT/a static/JJ/static initializer/NN/initializer block/NN/block or/CC/or /,/, more/RBR/more simply/RB/simply /,/, using/VBG/using an/DT/an initializer/NNP/initializer. the/DT/the getinstance/NN/getinstance /:/( /:/) method/NN/method /:/( which/WDT/which must/MD/must be/VB/be public/JJ/public /NN/) then/RB/then simply/RB/simply returns/NNS/returns this/DT/this instance/NN/instance /:/: ///:/// file/NN/file name/NN/name /:/: singleton.java/JJ/singleton.java public/JJ/public class/NN/class singleton/NN/singleton /:/{ private/JJ/private static/JJ/static singleton/NN/singleton singleton/NN/singleton =/:/= new/JJ/new singleton/NN/singleton /:/( /:/) ;/:/; //:// */-NONE-/* a/DT/a private/JJ/private constructor/NN/constructor prevents/NNS/prevents any/DT/any other/JJ/other */-NONE-/* class/NN/class from/IN/from instantiating/NNP/instantiating. */-NONE-/* //:// private/JJ/private singleton/NN/singleton /:/( /:/) /:/{ /:/} //:// */-NONE-/* static/JJ/static 'instance/NN/'instance '/''/' method/NN/method */-NONE-/* //:// public/JJ/public static/JJ/static singleton/NN/singleton getinstance/NN/getinstance /:/( /:/) /:/{ return/NN/return singleton/NN/singleton ;/:/; /:/} //:// */-NONE-/* other/JJ/other methods/NNS/methods protected/VBD/protected by/IN/by singleton-ness/JJ/singleton-ness */-NONE-/* //:// protected/VBN/protected static/JJ/static void/JJ/void demomethod/NN/demomethod /:/( /:/) /:/{ system.out.println/JJ/system.out.println /NN/( "/:/" demomethod/NN/demomethod for/IN/for singleton/NN/singleton "/:/" /:/) ;/:/; /:/} /:/} ///:/// file/NN/file name/NN/name /:/: singletondemo.java/JJ/singletondemo.java public/JJ/public lasssingletondemo/NN/lasssingletondemo /:/{ public/JJ/public staticvoid/JJ/staticvoid main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ singleton/NN/singleton tmp/NN/tmp =/:/= singleton.getinstance/NN/singleton.getinstance /:/( /:/) ;/:/; tmp.demomethod/JJ/tmp.demomethod /NN/( /:/) ;/:/; /:/} /:/} this/DT/this would/MD/would produce/VB/produce the/DT/the following/VBG/following result/NN/result /:/: demomethod/NN/demomethod for/IN/for singleton/NN/singleton example/NN/example 2/CD/2 /:/: following/VBG/following implementation/NN/implementation shows/NNS/shows a/DT/a classic/JJ/classic singleton/NN/singleton design/NN/design pattern/NN/pattern /:/: public/JJ/public class/NN/class classicsingleton/NN/classicsingleton /:/{ private/JJ/private static/JJ/static classicsingleton/NN/classicsingleton instance/NN/instance =/:/= null/NN/null ;/:/; protected/VBN/protected classicsingleton/NN/classicsingleton /:/( /:/) /:/{ ///:/// exists/NNS/exists only/RB/only to/TO/to defeat/VB/defeat instantiation/NNP/instantiation. /NNP/} public/JJ/public static/JJ/static classicsingleton/NN/classicsingleton getinstance/NN/getinstance /:/( /:/) /:/{ if/IN/if /CD/( instance/NN/instance =/:/= =/:/= null/JJ/null /NN/) /:/{ instance/NN/instance =/:/= new/JJ/new classicsingleton/NN/classicsingleton /:/( /:/) ;/:/; /:/} return/NN/return instance/NN/instance ;/:/; /:/} /:/} the/DT/the classicsingleton/NN/classicsingleton class/NN/class maintains/VBZ/maintains a/DT/a static/JJ/static reference/NN/reference to/TO/to the/DT/the lone/NN/lone singleton/NN/singleton instance/NN/instance and/CC/and returns/NNS/returns that/WDT/that reference/NN/reference from/IN/from the/DT/the static/JJ/static getinstance/NN/getinstance /:/( /:/) method/NNP/method. here/RB/here classicsingleton/NN/classicsingleton class/NN/class employs/NNS/employs a/DT/a technique/NN/technique known/VBN/known as/IN/as lazy/JJ/lazy instantiation/NN/instantiation to/TO/to create/VB/create the/DT/the singleton/NN/singleton ;/:/; as/IN/as a/DT/a result/NN/result /,/, the/DT/the singleton/NN/singleton instance/NN/instance is/VBZ/is not/RB/not created/VBN/created until/IN/until the/DT/the getinstance/NN/getinstance /:/( /:/) method/NN/method is/VBZ/is called/VBN/called for/IN/for the/DT/the first/JJ/first time/NNP/time. this/DT/this technique/NN/technique ensures/VBZ/ensures that/IN/that singleton/NN/singleton instances/NNS/instances are/VBP/are created/VBN/created only/RB/only when/WRB/when needed/NNP/needed. creating/NN/creating an/DT/an object/NN/object /:/: as/IN/as mentioned/VBN/mentioned previously/RB/previously /,/, a/DT/a class/NN/class provides/VBZ/provides the/DT/the blueprints/NNS/blueprints for/IN/for objects/NNP/objects. so/RB/so basically/RB/basically an/DT/an object/NN/object is/VBZ/is created/VBN/created from/IN/from a/DT/a class/NNP/class. in/IN/in java/NN/java the/DT/the new/JJ/new keyword/NN/keyword is/VBZ/is used/VBN/used to/TO/to create/VB/create new/JJ/new objects/NNP/objects. there/RB/there are/VBP/are three/CD/three steps/NNS/steps when/WRB/when creating/VBG/creating an/DT/an object/NN/object from/IN/from a/DT/a class/NN/class /:/: •/:/• declaration/NN/declaration /:/: a/DT/a variable/JJ/variable declaration/NN/declaration with/IN/with a/DT/a variable/JJ/variable name/NN/name with/IN/with an/DT/an object/NN/object type/NNP/type. •/NNP/• instantiation/NN/instantiation /:/: the/DT/the 'new/JJ/'new '/POS/' keyword/NN/keyword is/VBZ/is used/VBN/used to/TO/to create/VB/create the/DT/the object/NNP/object. •/NNP/• initialization/NN/initialization /:/: the/DT/the 'new/JJ/'new '/POS/' keyword/NN/keyword is/VBZ/is followed/VBN/followed by/IN/by a/DT/a call/NN/call to/TO/to a/DT/a constructor/NNP/constructor. this/DT/this call/NN/call initializes/VBZ/initializes the/DT/the new/JJ/new object/NNP/object. example/NN/example of/IN/of creating/NN/creating an/DT/an object/NN/object is/VBZ/is given/VBN/given below/IN/below /:/: public/JJ/public class/NN/class puppy/NN/puppy /:/{ public/JJ/public puppy/NN/puppy /:/( string/VBG/string name/NN/name /:/) /:/{ ///:/// this/DT/this constructor/NN/constructor has/VBZ/has one/CD/one parameter/NN/parameter /,/, name/NNP/name. system.out.println/NNP/system.out.println /NNP/( "/NNP/" passed/VBD/passed name/NN/name is/VBZ/is /:/: "/:/" +/:/+ name/NN/name /:/) ;/:/; /:/} public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ ///:/// following/VBG/following statement/NN/statement would/MD/would create/VB/create an/DT/an object/NN/object mypuppy/NN/mypuppy puppy/NN/puppy mypuppy/NN/mypuppy =/:/= new/JJ/new puppy/NN/puppy /:/( "/:/" tommy/NN/tommy "/:/" /:/) ;/:/; /:/} /:/} if/IN/if we/PRP/we compile/VBP/compile and/CC/and run/VBN/run the/DT/the above/NN/above program/NN/program /,/, then/RB/then it/PRP/it would/MD/would produce/VB/produce the/DT/the following/VBG/following result/NN/result /:/: passednameis/NN/passednameis /:/: tommy/NN/tommy accessing/VBG/accessing instance/NN/instance variables/NNS/variables and/CC/and methods/NNS/methods /:/: instance/NN/instance variables/NNS/variables and/CC/and methods/NNS/methods are/VBP/are accessed/VBN/accessed via/IN/via created/VBN/created objects/NNP/objects. to/TO/to access/NN/access an/DT/an instance/NN/instance variable/JJ/variable the/DT/the fully/RB/fully qualified/VBN/qualified path/NN/path should/MD/should be/VB/be as/RB/as follows/VBZ/follows /:/: //:// */-NONE-/* first/JJ/first create/VB/create an/DT/an object/NN/object */-NONE-/* //:// objectreference/NN/objectreference =/:/= new/JJ/new constructor/NN/constructor /:/( /:/) ;/:/; //:// */-NONE-/* now/RB/now call/VBP/call a/DT/a variable/JJ/variable as/IN/as follows/NNS/follows */-NONE-/* //VB// objectreference.variablename/JJ/objectreference.variablename ;/:/; //:// */-NONE-/* now/RB/now you/PRP/you can/MD/can call/VB/call a/DT/a class/NN/class method/NN/method as/IN/as follows/NNS/follows */-NONE-/* //VB// objectreference.methodname/JJ/objectreference.methodname /NN/( /:/) ;/:/; example/NN/example /:/: this/DT/this example/NN/example explains/VBZ/explains how/WRB/how to/TO/to access/NN/access instance/NN/instance variables/NNS/variables and/CC/and methods/NNS/methods of/IN/of a/DT/a class/NN/class /:/: public/JJ/public class/NN/class puppy/NN/puppy /:/{ int/NN/int puppyage/NN/puppyage ;/:/; public/JJ/public puppy/NN/puppy /:/( string/VBG/string name/NN/name /:/) /:/{ ///:/// this/DT/this constructor/NN/constructor has/VBZ/has one/CD/one parameter/NN/parameter /,/, name/NNP/name. system.out.println/NNP/system.out.println /NNP/( "/NNP/" passed/VBD/passed name/NN/name is/VBZ/is /:/: "/:/" +/:/+ name/NN/name /:/) ;/:/; /:/} public/JJ/public void/JJ/void setage/NN/setage /:/( int/NN/int age/NN/age /:/) /:/{ puppyage/NN/puppyage =/:/= age/NN/age ;/:/; /:/} public/JJ/public int/NN/int getage/NN/getage /:/( /:/) /:/{ system.out.println/JJ/system.out.println /NN/( "/:/" puppy/NN/puppy 's/POS/'s age/NN/age is/VBZ/is /:/: "/:/" +/:/+ puppyage/NN/puppyage /:/) ;/:/; return/NN/return puppyage/NN/puppyage ;/:/; /:/} public/JJ/public static/JJ/static void/JJ/void main/NN/main /:/( string/VBG/string /:/[ /:/] args/NNS/args /VBP/) /:/{ //:// */-NONE-/* object/VB/object creation/NN/creation */-NONE-/* //:// puppy/NN/puppy mypuppy/NN/mypuppy =/:/= newpuppy/NN/newpuppy /:/( "/:/" tommy/NN/tommy "/:/" /:/) ;/:/; //:// */-NONE-/* call/VB/call class/NN/class method/NN/method to/TO/to set/VB/set puppy/JJ/puppy 's/POS/'s age/NN/age */-NONE-/* //:// mypuppy.setage/JJ/mypuppy.setage /NN/( 2/CD/2 /CD/) ;/:/; //:// */-NONE-/* call/VB/call another/DT/another class/NN/class method/NN/method to/TO/to get/VB/get puppy/JJ/puppy 's/POS/'s age/NN/age */-NONE-/* //:// mypuppy.getage/JJ/mypuppy.getage /NN/( /:/) ;/:/; //:// */-NONE-/* you/PRP/you can/MD/can access/VB/access instance/NN/instance variable/JJ/variable as/IN/as follows/NNS/follows as/IN/as well/RB/well */-NONE-/* //VB// system.out.println/JJ/system.out.println /NN/( "/:/" variable/JJ/variable value/NN/value /:/: "/:/" +/:/+ mypuppy.puppyage/JJ/mypuppy.puppyage /NN/) ;/:/; /:/} /:/} if/IN/if we/PRP/we compile/VBP/compile and/CC/and run/VBN/run the/DT/the above/NN/above program/NN/program /,/, then/RB/then it/PRP/it would/MD/would produce/VB/produce the/DT/the following/VBG/following result/NN/result /:/: passedname/NN/passedname is/VBZ/is /:/: tommy/NN/tommy puppy/NN/puppy 's/POS/'s age/NN/age is/VBZ/is /:/: 2/CD/2 variable/JJ/variable value/NN/value /:/: 2/CD/2 source/NN/source file/NN/file declaration/NN/declaration rules/NNS/rules /:/: as/IN/as the/DT/the last/JJ/last part/NN/part of/IN/of this/DT/this section/NN/section /,/, let/VB/let ’/:/’ s/NNS/s now/RB/now look/VBP/look into/IN/into the/DT/the source/NN/source file/NN/file declaration/NN/declaration rules/NNP/rules. these/DT/these rules/NNS/rules are/VBP/are essential/JJ/essential when/WRB/when declaring/VBG/declaring classes/NNS/classes /,/, import/NN/import statements/NNS/statements and/CC/and package/NN/package statements/NNS/statements in/IN/in a/DT/a source/NN/source file/NNP/file. •/NNP/• there/RB/there can/MD/can be/VB/be only/RB/only one/CD/one public/JJ/public class/NN/class per/IN/per source/NN/source file/NNP/file. •/NNP/• a/DT/a source/NN/source file/NN/file can/MD/can have/VB/have multiple/NNS/multiple non/IN/non public/JJ/public classes/NNP/classes. simply/RB/simply easy/JJ/easy learning/NN/learning •/:/• the/DT/the public/NN/public class/NN/class name/NN/name should/MD/should be/VB/be the/DT/the name/NN/name of/IN/of the/DT/the source/NN/source file/NN/file as/IN/as well/RB/well which/WDT/which should/MD/should be/VB/be appended/VBN/appended by/IN/by .java/NNP/.java at/IN/at the/DT/the end/NNP/end. for/IN/for example/NN/example /:/: the/DT/the class/NN/class name/NN/name is/VBZ/is /./. public/JJ/public class/NN/class employee/NN/employee /:/{ /:/} then/RB/then the/DT/the source/NN/source file/NN/file should/MD/should be/VB/be as/RB/as employee.java/NNP/employee.java. •/NNP/• if/IN/if the/DT/the class/NN/class is/VBZ/is defined/VBN/defined inside/NN/inside a/DT/a package/NN/package /,/, then/RB/then the/DT/the package/NN/package statement/NN/statement should/MD/should be/VB/be the/DT/the first/JJ/first statement/NN/statement in/IN/in the/DT/the source/NN/source file/NNP/file. •/NNP/• if/IN/if import/NN/import statements/NNS/statements are/VBP/are present/JJ/present then/RB/then they/PRP/they must/MD/must be/VB/be written/VBN/written between/IN/between the/DT/the package/NN/package statement/NN/statement and/CC/and the/DT/the class/NN/class declaration/NNP/declaration. if/IN/if there/EX/there are/VBP/are no/DT/no package/NN/package statements/NNS/statements then/RB/then the/DT/the import/NN/import statement/NN/statement should/MD/should be/VB/be the/DT/the first/JJ/first line/NN/line in/IN/in the/DT/the source/NN/source file/NNP/file. •/NNP/• import/NN/import and/CC/and package/NN/package statements/NNS/statements will/MD/will imply/RB/imply to/TO/to all/DT/all the/DT/the classes/NNS/classes present/VBP/present in/IN/in the/DT/the source/NN/source file/NNP/file. it/PRP/it is/VBZ/is not/RB/not possible/JJ/possible to/TO/to declare/VB/declare different/JJ/different import/NN/import and/or/NN/and/or package/NN/package statements/NNS/statements to/TO/to different/JJ/different classes/NNS/classes in/IN/in the/DT/the source/NN/source file/NNP/file. classes/NNS/classes have/VBP/have several/JJ/several access/NN/access levels/NNS/levels and/CC/and there/EX/there are/VBP/are different/JJ/different types/NNS/types of/IN/of classes/NNS/classes ;/:/; abstract/NN/abstract classes/NNS/classes /,/, final/JJ/final classes/NNS/classes /,/, etc/NNP/etc. i/PRP/i will/MD/will be/VB/be explaining/VBG/explaining about/IN/about all/DT/all these/DT/these in/IN/in the/DT/the access/NN/access modifiers/NNS/modifiers chapter/NNP/chapter. apart/NN/apart from/IN/from the/DT/the above/NN/above mentioned/VBD/mentioned types/NNS/types of/IN/of classes/NNS/classes /,/, java/NN/java also/RB/also has/VBZ/has some/DT/some special/JJ/special classes/NNS/classes called/VBN/called inner/NN/inner classes/NNS/classes and/CC/and anonymous/JJ/anonymous classes/NNP/classes. java/NN/java package/NN/package /:/: in/IN/in simple/JJ/simple /,/, it/PRP/it is/VBZ/is a/DT/a way/NN/way of/IN/of categorizing/VBG/categorizing the/DT/the classes/NNS/classes and/CC/and interfaces/NNP/interfaces. when/WRB/when developing/VBG/developing applications/NNS/applications in/IN/in java/NN/java /,/, hundreds/VBZ/hundreds of/IN/of classes/NNS/classes and/CC/and interfaces/NNS/interfaces will/MD/will be/VB/be written/VBN/written /,/, therefore/RB/therefore categorizing/VBG/categorizing these/DT/these classes/NNS/classes is/VBZ/is a/DT/a must/MD/must as/IN/as well/RB/well as/IN/as makes/NNS/makes life/NN/life much/RB/much easier/NNP/easier. import/NN/import statements/NNS/statements /:/: in/IN/in java/NN/java if/IN/if a/DT/a fully/RB/fully qualified/VBN/qualified name/NN/name /,/, which/WDT/which includes/VBZ/includes the/DT/the package/NN/package and/CC/and the/DT/the class/NN/class name/NN/name /,/, is/VBZ/is given/VBN/given /,/, then/RB/then the/DT/the compiler/NN/compiler can/MD/can easily/RB/easily locate/VB/locate the/DT/the source/NN/source code/NN/code or/CC/or classes/NNP/classes. import/NN/import statement/NN/statement is/VBZ/is a/DT/a way/NN/way of/IN/of giving/VBG/giving the/DT/the proper/NN/proper location/NN/location for/IN/for the/DT/the compiler/NN/compiler to/TO/to find/VB/find that/IN/that particular/JJ/particular class/NNP/class. for/IN/for example,the/NNP/example,the following/VBG/following line/NN/line would/MD/would ask/VB/ask compiler/NN/compiler to/TO/to load/VB/load all/DT/all the/DT/the classes/NNS/classes available/JJ/available in/IN/in directory/NN/directory java_installation/java/io/NN/java_installation/java/io import/NN/import java.io/NNP/java.io. */-NONE-/* ;/:/; a/DT/a simple/JJ/simple case/NN/case study/NN/study /:/: for/IN/for our/PRP$/our case/NN/case study/NN/study /,/, we/PRP/we will/MD/will be/VB/be creating/VBG/creating two/CD/two classes/NNP/classes. they/PRP/they are/VBP/are employee/NN/employee and/CC/and employeetest/NNP/employeetest. first/RB/first open/JJ/open notepad/NN/notepad and/CC/and add/VBD/add the/DT/the following/VBG/following code/NNP/code. remember/NN/remember this/DT/this is/VBZ/is the/DT/the employee/NN/employee class/NN/class and/CC/and the/DT/the class/NN/class is/VBZ/is a/DT/a public/JJ/public class/NNP/class. now/RB/now /,/, save/VBP/save this/DT/this source/NN/source file/NN/file with/IN/with the/DT/the name/NN/name employee.java/NNP/employee.java. the/DT/the employee/NN/employee class/NN/class has/VBZ/has four/CD/four instance/NN/instance variables/NNS/variables name/VBD/name /,/, age/NN/age /,/, designation/NN/designation and/CC/and salary/NNP/salary. the/DT/the class/NN/class has/VBZ/has one/CD/one explicitly/RB/explicitly defined/VBN/defined constructor/NN/constructor /,/, which/WDT/which takes/VBZ/takes a/DT/a parameter/NNP/parameter. import/NN/import java.io/NNP/java.io. */-NONE-/* ;/:/; public/JJ/public class/NN/class employee/NN/employee /:/{ string/VBG/string name/NN/name ;/:/; int/NN/int age/NN/age ;/:/; string/VBG/string designation/NN/designation ;/:/; double/JJ/double salary/NN/salary ;/:/; ///:/// this/DT/this is/VBZ/is the/DT/the constructor/NN/constructor of/IN/of the/DT/the class/NN/class employee/NN/employee public/JJ/public employee/NN/employee /:/( string/VBG/string name/NN/name /:/) /:/{ this.name/JJ/this.name =/NN/= name/NN/name ;/:/; /:/} ///:/// assign/NN/assign the/DT/the age/NN/age of/IN/of the/DT/the employee/NN/employee to/TO/to the/DT/the variable/JJ/variable age/NNP/age. public/JJ/public void/JJ/void empage/NN/empage /:/( int/NN/int empage/NN/empage /:/) /:/{ age/NN/age =/:/= empage/NN/empage ;/:/; /:/} //:// */-NONE-/* assign/VB/assign the/DT/the designation/NN/designation to/TO/to the/DT/the variable/JJ/variable designation/NNP/designation. */-NONE-/* //:// public/JJ/public void/JJ/void empdesignation/NN/empdesignation /:/( string/VBG/string empdesig/NN/empdesig /:/) /:/{ designation/NN/designation =/:/= empdesig/NN/empdesig ;/:/; /:/} //:// */-NONE-/* assign/VB/assign the/DT/the salary/NN/salary to/TO/to the/DT/the variable/JJ/variable salary/NNP/salary. */-NONE-/* //:// public/JJ/public void/JJ/void empsalary/JJ/empsalary /NN/( double/JJ/double empsalary/NN/empsalary /:/) /:/{ salary/NN/salary =/:/= empsalary/JJ/empsalary ;/:/; /:/} //:// */-NONE-/* print/VB/print the/DT/the employee/NN/employee details/NNS/details */-NONE-/* //VB// public/JJ/public void/JJ/void printemployee/NN/printemployee /:/( /:/) /:/{ system.out.println/JJ/system.out.println /NN/( "/:/" name/NN/name /:/: "/:/" +/:/+ name/NN/name /:/) ;/:/; system.out.println/JJ/system.out.println /NN/( "/:/" age/NN/age /:/: "/:/" +/:/+ age/NN/age /:/) ;/:/; system.out.println/JJ/system.out.println /NN/( "/:/" designation/NN/designation /:/: "/:/" +/:/+ designation/NN/designation /:/) ;/:/; system.out.println/JJ/system.out.println /NN/( "/:/" salary/NN/salary /:/: "/:/" +/:/+ salary/NN/salary /:/) ;/:/; /:/} /:/} as/IN/as mentioned/VBN/mentioned previously/RB/previously in/IN/in this/DT/this tutorial/JJ/tutorial /,/, processing/NN/processing starts/VBZ/starts from/IN/from the/DT/the main/JJ/main method/NNP/method. therefore/NN/therefore in-order/NN/in-order for/IN/for us/PRP/us to/TO/to run/VB/run this/DT/this employee/NN/employee class/NN/class there/EX/there should/MD/should be/VB/be main/JJ/main method/NN/method and/CC/and objects/NNS/objects should/MD/should be/VB/be created/NNP/created. we/PRP/we will/MD/will be/VB/be creating/VBG/creating a/DT/a separate/JJ/separate class/NN/class for/IN/for these/DT/these tasks/NNP/tasks. given/VBN/given below/IN/below is/VBZ/is the/DT/the employeetest/JJS/employeetest class/NN/class /,/, which/WDT/which creates/VBZ/creates two/CD/two instances/NNS/instances of/IN/of the/DT/the class/NN/class employee/NN/employee and/CC/and invokes/VBZ/invokes the/DT/the methods/NNS/methods for/IN/for each/DT/each object/NN/object to/TO/to assign/VB/assign values/NNS/values for/IN/for each/DT/each variable/NNP/variable. save/VBP/save the/DT/the following/VBG/following code/NN/code in/IN/in employeetest.java/NNP/employeetest.java file/NN/file import/NN/import java.io/NNP/java.io. */-NONE-/* ;/:/; publicclassemployeetest/JJS/publicclassemployeetest /:/{ publicstaticvoid/JJ/publicstaticvoid main/NN/main /:/( string/VBG/string args/NNS/args /:/[ /:/] /:/) /:/{ //:// */-NONE-/* create/VB/create two/CD/two objects/NNS/objects using/VBG/using constructor/NN/constructor */-NONE-/* //:// employee/NN/employee empone/NN/empone =/:/= newemployee/NN/newemployee /:/( "/:/" james/NNS/james smith/IN/smith "/CD/" /CD/) ;/:/; employee/NN/employee emptwo/CD/emptwo =/CD/= newemployee/NN/newemployee /:/( "/:/" mary/JJ/mary anne/NN/anne "/:/" /:/) ;/:/; ///:/// invoking/VBG/invoking methods/NNS/methods for/IN/for each/DT/each object/NN/object created/VBN/created empone.empage/NN/empone.empage /:/( 26/CD/26 /CD/) ;/:/; empone.empdesignation/NN/empone.empdesignation /:/( "/:/" senior/JJ/senior software/NN/software engineer/NN/engineer "/:/" /:/) ;/:/; empone.empsalary/JJ/empone.empsalary /NN/( 1000/CD/1000 /CD/) ;/:/; empone.printemployee/JJ/empone.printemployee /NN/( /:/) ;/:/; emptwo.empage/JJ/emptwo.empage /NN/( 21/CD/21 /CD/) ;/:/; emptwo.empdesignation/NN/emptwo.empdesignation /:/( "/:/" software/NN/software engineer/NN/engineer "/:/" /:/) ;/:/; emptwo.empsalary/JJ/emptwo.empsalary /NN/( 500/CD/500 /CD/) ;/:/; emptwo.printemployee/JJ/emptwo.printemployee /NN/( /:/) ;/:/; /:/} /:/} now/RB/now /,/, compile/IN/compile both/DT/both the/DT/the classes/NNS/classes and/CC/and then/RB/then run/VBN/run employeetest/NN/employeetest to/TO/to see/VB/see the/DT/the result/NN/result as/IN/as follows/NNS/follows /:/: c/NN/c /:/: >/:/> javac/NN/javac employee.java/-NONE-/employee.java c/NN/c /:/: >/:/> vi/NN/vi employeetest.java/-NONE-/employeetest.java c/NN/c /:/: >/:/> javac/NN/javac employeetest.java/-NONE-/employeetest.java c/NN/c /:/: >/:/> java/NN/java employeetest/NN/employeetest name/NN/name /:/: jamessmith/IN/jamessmith age/NN/age /:/: 26/CD/26 designation/NN/designation /:/: seniorsoftwareengineer/NN/seniorsoftwareengineer salary/NN/salary /:/: 1000.0/CD/1000.0 name/NN/name /:/: maryanne/NN/maryanne age/NN/age /:/: 21/CD/21 designation/NN/designation /:/: softwareengineer/NN/softwareengineer salary/NN/salary /:/: 500.0/CD/500.0 next/JJ/next session/NN/session will/MD/will discuss/VB/discuss basic/JJ/basic data/NNS/data types/NNS/types in/IN/in java/NN/java and/CC/and how/WRB/how they/PRP/they can/MD/can be/VB/be used/VBN/used when/WRB/when developing/VBG/developing java/NN/java applications/NNP/applications. java/NN/java basic/JJ/basic data/NNS/data types/NNS/types variables/NNS/variables are/VBP/are nothing/VBG/nothing but/CC/but reserved/VBD/reserved memory/NN/memory locations/NNS/locations to/TO/to store/VB/store values/NNP/values. this/DT/this means/VBZ/means that/IN/that when/WRB/when you/PRP/you create/VBP/create a/DT/a variable/JJ/variable you/PRP/you reserve/VBP/reserve some/DT/some space/NN/space in/IN/in memory/NNP/memory. based/VBN/based on/IN/on the/DT/the data/NNS/data type/NN/type of/IN/of a/DT/a variable/JJ/variable /,/, the/DT/the operating/NN/operating system/NN/system allocates/VBZ/allocates memory/NN/memory and/CC/and decides/VBZ/decides what/WP/what can/MD/can be/VB/be stored/VBN/stored in/IN/in the/DT/the reserved/VBN/reserved memory/NNP/memory. therefore/RB/therefore /,/, by/IN/by assigning/NN/assigning different/JJ/different data/NNS/data types/NNS/types to/TO/to variables/NNS/variables /,/, you/PRP/you can/MD/can store/VB/store integers/NNS/integers /,/, decimals/NNS/decimals /,/, or/CC/or characters/NNS/characters in/IN/in these/DT/these variables/NNP/variables. there/RB/there are/VBP/are two/CD/two data/NNS/data types/NNS/types available/JJ/available in/IN/in java/NN/java /:/: •/:/• primitive/JJ/primitive data/NNS/data types/NNS/types •/VBP/• reference/object/JJ/reference/object data/NNS/data types/NNS/types primitive/VBP/primitive data/NNS/data types/NNS/types /:/: there/EX/there are/VBP/are eight/CD/eight primitive/JJ/primitive data/NNS/data types/NNS/types supported/VBD/supported by/IN/by java/NNP/java. primitive/JJ/primitive data/NNS/data types/NNS/types are/VBP/are predefined/VBN/predefined by/IN/by the/DT/the language/NN/language and/CC/and named/VBD/named by/IN/by a/DT/a keyword/NNP/keyword. let/NN/let us/PRP/us now/RB/now look/VBP/look into/IN/into detail/NN/detail about/IN/about the/DT/the eight/CD/eight primitive/JJ/primitive data/NNS/data types/NNP/types. byte/NN/byte /:/: •/:/• byte/NN/byte data/NNS/data type/NN/type is/VBZ/is an/DT/an 8-bit/JJ/8-bit signed/VBN/signed two/CD/two 's/POS/'s complement/NN/complement integer/NNP/integer. •/NNP/• minimum/NN/minimum value/NN/value is/VBZ/is -128/-NONE-/-128 /:/( -2/-NONE-/-2 ^/:/^ 7/CD/7 /CD/) •/CD/• maximum/NN/maximum value/NN/value is/VBZ/is 127/CD/127 /CD/( inclusive/JJ/inclusive /NN/) /:/( 2/CD/2 ^/CD/^ 7/CD/7 -1/-NONE-/-1 /:/) •/:/• default/NN/default value/NN/value is/VBZ/is 0/-NONE-/0 •/:/• byte/NN/byte data/NNS/data type/NN/type is/VBZ/is used/VBN/used to/TO/to save/VB/save space/NN/space in/IN/in large/JJ/large arrays/NNS/arrays /,/, mainly/RB/mainly in/IN/in place/NN/place of/IN/of integers/NNS/integers /,/, since/IN/since a/DT/a byte/NN/byte is/VBZ/is four/CD/four times/NNS/times smaller/JJR/smaller than/IN/than an/DT/an int/NNP/int. •/NNP/• example/NN/example /:/: byte/NN/byte a/DT/a =/NN/= 100/CD/100 /,/, byte/JJ/byte b/NN/b =/:/= -50/-NONE-/-50 short/JJ/short /:/: •/:/• short/JJ/short data/NNS/data type/NN/type is/VBZ/is a/DT/a 16-bit/JJ/16-bit signed/VBN/signed two/CD/two 's/POS/'s complement/NN/complement integer/NNP/integer. chapter/NN/chapter 5/CD/5 •/CD/• minimum/JJ/minimum value/NN/value is/VBZ/is -32,768/-NONE-/-32,768 /:/( -2/-NONE-/-2 ^/:/^ 15/CD/15 /CD/) •/CD/• maximum/NN/maximum value/NN/value is/VBZ/is 32,767/CD/32,767 /CD/( inclusive/JJ/inclusive /NN/) /:/( 2/CD/2 ^/CD/^ 15/CD/15 -1/-NONE-/-1 /:/) •/:/• short/JJ/short data/NNS/data type/NN/type can/MD/can also/RB/also be/VB/be used/VBN/used to/TO/to save/VB/save memory/NN/memory as/IN/as byte/NN/byte data/NNS/data type/NNP/type. a/DT/a short/JJ/short is/VBZ/is 2/CD/2 times/NNS/times smaller/JJR/smaller than/IN/than an/DT/an int/NN/int •/:/• default/NN/default value/NN/value is/VBZ/is 0/CD/0. •/CD/• example/NN/example /:/: short/JJ/short s/NNS/s =/:/= 10000/CD/10000 /,/, short/JJ/short r/NN/r =/:/= -20000/-NONE-/-20000 int/VBP/int /:/: •/:/• int/NN/int data/NNS/data type/NN/type is/VBZ/is a/DT/a 32-bit/JJ/32-bit signed/VBN/signed two/CD/two 's/POS/'s complement/NN/complement integer/NNP/integer. •/NNP/• minimum/NN/minimum value/NN/value is/VBZ/is /:/- 2,147,483,648/CD/2,147,483,648. /CD/( -2/-NONE-/-2 ^/:/^ 31/CD/31 /CD/) •/CD/• maximum/NN/maximum value/NN/value is/VBZ/is 2,147,483,647/CD/2,147,483,647 /CD/( inclusive/JJ/inclusive /NN/) /./. /NN/( 2/CD/2 ^/CD/^ 31/CD/31 -1/-NONE-/-1 /:/) •/:/• int/NN/int is/VBZ/is generally/RB/generally used/VBN/used as/IN/as the/DT/the default/NN/default data/NNS/data type/NN/type for/IN/for integral/JJ/integral values/NNS/values unless/IN/unless there/EX/there is/VBZ/is a/DT/a concern/NN/concern about/IN/about memory/NNP/memory. •/NNP/• the/DT/the default/NN/default value/NN/value is/VBZ/is 0/CD/0. •/CD/• example/NN/example /:/: int/NN/int a/DT/a =/NN/= 100000/CD/100000 /,/, int/JJ/int b/NN/b =/:/= -200000/-NONE-/-200000 long/RB/long /:/: •/:/• long/JJ/long data/NNS/data type/NN/type is/VBZ/is a/DT/a 64-bit/JJ/64-bit signed/VBN/signed two/CD/two 's/POS/'s complement/NN/complement integer/NNP/integer. •/NNP/• minimum/NN/minimum value/NN/value is/VBZ/is -9,223,372,036,854,775,808/NNP/-9,223,372,036,854,775,808. /:/( -2/-NONE-/-2 ^/:/^ 63/CD/63 /CD/) •/CD/• maximum/NN/maximum value/NN/value is/VBZ/is 9,223,372,036,854,775,807/CD/9,223,372,036,854,775,807 /CD/( inclusive/JJ/inclusive /NN/) /./. /NN/( 2/CD/2 ^/CD/^ 63/CD/63 -1/-NONE-/-1 /:/) •/:/• this/DT/this type/NN/type is/VBZ/is used/VBN/used when/WRB/when a/DT/a wider/NN/wider range/NN/range than/IN/than int/NN/int is/VBZ/is needed/NNP/needed. •/:/• default/NN/default value/NN/value is/VBZ/is 0l/CD/0l. •/CD/• example/NN/example /:/: int/NN/int a/DT/a =/NN/= 100000l/CD/100000l /,/, int/JJ/int b/NN/b =/:/= -200000l/JJ/-200000l float/NN/float /:/: •/:/• float/JJ/float data/NNS/data type/NN/type is/VBZ/is a/DT/a single-precision/NN/single-precision 32-bit/CD/32-bit ieee/NN/ieee 754/CD/754 floating/VBG/floating point/NNP/point. •/NNP/• float/NN/float is/VBZ/is mainly/RB/mainly used/VBN/used to/TO/to save/VB/save memory/NN/memory in/IN/in large/JJ/large arrays/NNS/arrays of/IN/of floating/VBG/floating point/NN/point numbers/NNP/numbers. •/NNP/• default/NN/default value/NN/value is/VBZ/is 0.0f/CD/0.0f. •/CD/• float/JJ/float data/NNS/data type/NN/type is/VBZ/is never/RB/never used/VBN/used for/IN/for precise/NN/precise values/NNS/values such/JJ/such as/IN/as currency/NNP/currency. •/NNP/• example/NN/example /:/: float/NN/float f1/NNP/f1 =/NNP/= 234.5f/CD/234.5f double/JJ/double /:/: •/:/• double/JJ/double data/NNS/data type/NN/type is/VBZ/is a/DT/a double-precision/NN/double-precision 64-bit/CD/64-bit ieee/NN/ieee 754/CD/754 floating/VBG/floating point/NNP/point. •/NNP/• this/DT/this data/NN/data type/NN/type is/VBZ/is generally/RB/generally used/VBN/used as/IN/as the/DT/the default/NN/default data/NNS/data type/NN/type for/IN/for decimal/JJ/decimal values/NNS/values /,/, generally/RB/generally the/DT/the default/NN/default choice/NNP/choice. •/NNP/• double/JJ/double data/NNS/data type/NN/type should/MD/should never/RB/never be/VB/be used/VBN/used for/IN/for precise/NN/precise values/NNS/values such/JJ/such as/IN/as currency/NNP/currency. •/NNP/• default/NN/default value/NN/value is/VBZ/is 0.0d/CD/0.0d. •/CD/• example/NN/example /:/: double/JJ/double d1/NNP/d1 =/NNP/= 123.4/CD/123.4 boolean/JJ/boolean /:/: •/:/• boolean/JJ/boolean data/NNS/data type/NN/type represents/NNS/represents one/CD/one bit/NN/bit of/IN/of information/NNP/information. •/NNP/• there/RB/there are/VBP/are only/RB/only two/CD/two possible/JJ/possible values/NNS/values /:/: true/JJ/true and/CC/and false/NNP/false. •/NNP/• this/DT/this data/NN/data type/NN/type is/VBZ/is used/VBN/used for/IN/for simple/JJ/simple flags/NNS/flags that/WDT/that track/NN/track true/false/-NONE-/true/false conditions/NNP/conditions. •/NNP/• default/NN/default value/NN/value is/VBZ/is false/NNP/false. •/:/• example/NN/example /:/: boolean/JJ/boolean one/CD/one =/CD/= true/JJ/true char/NN/char /:/: •/:/• char/NN/char data/NNS/data type/NN/type is/VBZ/is a/DT/a single/JJ/single 16-bit/JJ/16-bit unicode/NN/unicode character/NNP/character. •/NNP/• minimum/NN/minimum value/NN/value is/VBZ/is '/''/' \/:/\ u0000/NNP/u0000 '/POS/' /NN/( or/CC/or 0/-NONE-/0 /:/) /./. •/:/• maximum/NN/maximum value/NN/value is/VBZ/is '/''/' \/:/\ uffff/NN/uffff '/''/' /:/( or/CC/or 65,535/CD/65,535 inclusive/JJ/inclusive /NN/) /./. •/NN/• char/NN/char data/NNS/data type/NN/type is/VBZ/is used/VBN/used to/TO/to store/VB/store any/DT/any character/NNP/character. •/NNP/• example/NN/example /:/: char/NN/char lettera/NN/lettera =/:/= 'a/JJ/'a '/''/' reference/NN/reference data/NNS/data types/NNS/types /:/: •/:/• reference/NN/reference variables/NNS/variables are/VBP/are created/VBN/created using/VBG/using defined/VBN/defined constructors/NNS/constructors of/IN/of the/DT/the classes/NNP/classes. they/PRP/they are/VBP/are used/VBN/used to/TO/to access/NN/access objects/NNP/objects. these/DT/these variables/NNS/variables are/VBP/are declared/VBN/declared to/TO/to be/VB/be of/IN/of a/DT/a specific/JJ/specific type/NN/type that/WDT/that can/MD/can not/RB/not be/VB/be changed/NNP/changed. for/IN/for example/NN/example /,/, employee/NN/employee /,/, puppy/NN/puppy /,/, etc/FW/etc. •/:/• class/NN/class objects/NNS/objects and/CC/and various/JJ/various types/NNS/types of/IN/of array/NN/array variables/NNS/variables come/VBP/come under/IN/under reference/NN/reference data/NNS/data type/NNP/type. •/NNP/• default/NN/default value/NN/value of/IN/of any/DT/any reference/NN/reference variable/JJ/variable is/VBZ/is null/NNP/null. •/:/• a/DT/a reference/NN/reference variable/JJ/variable can/MD/can be/VB/be used/VBN/used to/TO/to refer/VB/refer to/TO/to any/DT/any object/NN/object of/IN/of the/DT/the declared/VBN/declared type/NN/type or/CC/or any/DT/any compatible/JJ/compatible type/NNP/type. •/NNP/• example/NN/example /:/: animal/JJ/animal animal/JJ/animal =/NN/= new/JJ/new animal/JJ/animal /NN/( "/:/" giraffe/NN/giraffe "/:/" /:/) ;/:/; 