introduction to computer
computer programming summer
marek janicki june
assignment at office
tuesday that week
week the midterm
regular lecture room
lecture room june
class who requires
requires a volunteer
disability by signing
posting your notes
make a significant
individual s capacity
person to accessibility
huron st suite
notice the quality
improves through volunteering
receive a certificate
certificate of recognition
change an immutable
lot of work
things like ints
ints and strings
takes a lot
things like images
object without keeping
keeping the original
making a big
tossing the rest
rest is wasteful
allowed to change
functions that change
ints are immutable
aliasing let pic
sets the green
pics are mutable
show a picture
aliasing and functions
calls a function
bunch of assignment
parameters are assigned
local variable refers
functions can change
change mutable objects
immutable ones june
slow in high-dimensional
high-dimensional spaces python
grouping similar items
i-1 because lists
lists are indexed
element list named
list named list_name
lists are mutable
index into lists
lists are heterogeneous
lists themselves june
functions and methods
returns the length
return the min
min and max
returns the sum
sum of elements
numbered not defined
defined for lists
lists of strings
adds the value
sorts the list
inserts the element
index specified remove
removes the first
instance of value
counts the number
number of instances
instances of value
looping over lists
loops for item
item in list
item = list
tricky with immutable
objects for item
item is immutable
alter the list
returns an ordered
list of ints
j-1 inclusive range
returns a list
ints so range
modify a list
element by element
makes a list
beginning to j-1
worried about aliasing
make a tuple
items are referenced
referenced by tuple_name
single element tuples
strings revisted strings
tuples of individual
strings can reference
reference individual characters
characters by string
defined on strings
string methods revisted
index into strings
string methods find
give the index
matching the substring
character exists rfind
lists because lists
lists of lists
represent a grid
grid or higher
higher dimenstional space
elements by list_name
item in list_name
item2 in item
err..complete the questions
spaces in program
code snippets represents
represents a common
common error made
introductory programming student
ripped these errors
introductory programming website
code snippet program
snippet program text
sentence " my_list
my_string to lowercase
lowercase program text
print every element
element in my_list
my_list in reverse
reverse order program
order program text
reverse the order
order of elements
elements in my_list
my_list program text
add the resulting
value to my_list
string program text
bigger_input = user_input
create a backup
copy of my_list
remove the largest
element from my_list
new_list = my_list
finds the position
function always returns
returns the correct
correct value program
value program text
prints all elements
elements of my_list
finds the largest
list program text
integer in list
list assumes list
return i return
return max page
names ! disclaimer
style in subsequent
meaningful variable names
names every variable
variable is created
reflect the values
values you choose
choose to store
find the bug
code the function
function should swap
swap the maximum
maximum and minimum
swap_max_min max_position temp
max_position temp list
temp list min_position
list min_position answer
written a function
function that calculates
calculates the square
write a square
square root function
program that controls
kind of important
function works correctly
works correctly staring
write a couple
couple of test
cases to make
works program text
returns the square
root of num
print " test
built-in zip function
function to make
make the last
last three lines
complete our testing
variety of test
cases in order
order to catch
test every random
made a big
fact that lists
mutable the reason
objects are immutable
primitives like integers
integers and booleans
object is immutable
variables are pointing
two different strings
meaning this revelation
strings have member
functions for strings
variable table day
functions in lists
modified the list
return value strings
strings are immutable
string member functions
member functions work
work it turns
out that member
functions of strings
tend to return
print message message.lower
effect print message
print message message
message = message.lower
print message output
function that converts
converts a string
string into lowercase
python quick reference
quick reference website
reference website shown
shown in class
reminder before starting
completely different characters
functions that manipulate
generally a good
idea to deal
functions that return
string ­ str.capitalize
returns a copy
copy of str
converted to uppercase
lowercase ­ str.strip
beginning and end
test " .strip
functions which return
string ­ str.count
returns the number
number of times
times substring appears
appears within str
str ­ str.find
returns the position
instance of substring
substring within str
str rfind returns
substring ­ s.startswith
ends with substring
functions which transform
transform the string
types ­ str.split
list of words
words in str
mississippi " .split
tricky it takes
takes a list
list of strings
seq and combines
string each element
element in seq
seq is separated
separated by separator
world " day
counterpart of lists
unlike a list
tuple as multi-dimensional
store an integer
store a two-dimensional
develop an instinct
tuples versus lists
creates the tuple
tuple with elements
tuples are ordered
ples of sequences
nything e syntax
syntax e item
sequence eq ring
e.g plus operator
ach ch pic
stored a sequence
sequence of items
store a table
create a singleton
tuples in tuples
strings and tuples
exa he case
case of strings
nt an official
similar in fact
return t returns
returns the equence
sequence for strings
dat es store
completely different types
equal to combine
combine two sequences
data where lists
integer also note
formats using str
tuples ! note
sequence notation lists
examples of sequences
series of ordered
sequence of characters
syntax ­ indexing
return the item
position ­ length
sequence ­ slicing
seq is true
item of seq
seq is equal
e.g " ello
true ­ concatenation
operator to combine
e.g " yay
loops we learned
works on lists
last major topic
dictionaries like lists
note that dictionaries
dictionaries are considered
matter what order
order we list
call the names
primitives and immutable
remember that dictionaries
fact that dictionaries
dictionaries are unordered
creates an empty
table the amount
amount of spacing
irrelevant ­ len
works on dictionaries
find the number
number of entries
dictionary has length
access or change
change a value
two identical keys
keys – writing
change the value
dictionary with identical
remove that entry
entry with key
dictionary member functions
dictionaries have member
removes all items
removes the entry
function also returns
returns the value
loops and dictionaries
loops with dictionaries
dictionaries for loops
loops will iterate
computer programming
programming summer
marek janicki
janicki june
office hours
hours assignment
held monday
held june
regular lecture
lecture room
room june
volunteer note-taker
volunteer notetaker
significant difference
accessibility services
students notice
notetaking improves
recognition june
immutable objects
nt change
immutable object
small things
large things
images june
mutable objects
large object
big copy
mutable object
define functions
change objects
immutable june
initialised picture
green june
assignment statements
local variables
local variable
variable refers
first june
lists recall
high-dimensional spaces
spaces python
similar items
list denoted
i-th element
element list
list named
named list_name
mutable june
empty list
back list_name
back lists
functions lists
methods len
list min
defined sum
re numbered
strings june
methods append
list sort
consistent notions
element value
first instance
value count
list june
similar operation
list python
block item
lists loops
list elements
function range
ordered list
ints ranging
i-1 range
inclusive range
list element
block june
list slicing
perform operations
aliasing carelessness
tuple tuple_name
single element
element tuples
avoid ambiguity
strings revisted
revisted strings
considered tuples
individual characters
list knowlege
characters min
slice strings
lists june
string methods
methods revisted
methods find
first character
character exists
exists rfind
right find
nested lists
higher dimenstional
dimenstional space
reference elements
nested loops
block csc
block page
worksheet session
program text
common errors
code snippets
snippets represents
common error
error made
introductory programming
programming student
programming website
wrong assume
definitions occur
code snippet
snippet program
convert my_string
lowercase program
reverse order
order program
my_list program
my_list.reverse answer
string representation
number entered
resulting value
string program
backup copy
largest element
my_list my_list.remove
function finds
last instance
list hints
syntax errors
correct value
value program
def rindex
last occurrence
return len
my_ list
list program
def find_max
largest integer
list assumes
assumes list
positive integers
max page
meaningful names
bit exaggerated
programming style
subsequent courses
meaningful variable
variable names
introductory student
class imagine
minimum elements
list well..maybe
swap_max_min max_position
max_position temp
temp list
list min_position
min_position answer
test cases
square root
negative number
function returns
root function
larger program
function works
works correctly
works program
assume sqrt_3
def custom_sqrt
code snipped
test case
built-in zip
zip function
point fill
testing code
unique cases
wide variety
random number
delicate balance
notes session
big deal
changed strings
treated strings
member functions
variable table
table day
strings revisited
lists modified
return value
value strings
string member
functions work
strings tend
print message
message message.lower
effect print
message message
message output
string functions
python quick
quick reference
reference website
website shown
quick reminder
writing functions
manipulate strings
good idea
single case
letters converted
string removed
string replaced
return information
times substring
substring appears
str rfind
rfind returns
string starts
true functions
delimiter string
strings seq
returned string
tuples tuples
immutable counterpart
multi-dimensional data
two-dimensional coordinate
versus lists
create tuples
elements ered
characters nything
integer ach
lists stored
dictionaries store
nest tuples
ree elements
sequen sequence
official term
last major
list similarl
ordered items
store data
dictionar page
singleton tuple
elements notation
section day
sequence notation
notation lists
characters sequence
indexing seq
length len
slice sequences
sliced lists
returns true
operator works
string day
major topic
table page
list entries
left keys
right values
store primitives
e.g lists
dictionary notation
curly braces
empty dictionary
index notation
print example_dict
identical keys
writing example_dict
make sense
identical values
del example_dict
false day
dictionary member
dictionaries remember
csc
108h
introduction
computer
programming
summer
marek
janicki
june
administration
clear
questions
assignment
office
hours
last
out
weekend
deadline
moved
27th
held
monday
tuesday
week
midterm
30th
regular
lecture
room
request
volunteer
note-taker
student
class
requires
notetaker
accommodation
disability
signing
posting
notes
make
significant
difference
individual
capacity
fully
participate
http
person
accessibility
services
huron
suite
students
notice
quality
notetaking
improves
volunteering
receive
certificate
recognition
immutable
objects
ve
nt
change
making
int
throw
object
lot
work
identical
small
things
ints
strings
takes
large
images
mutable
keeping
original
big
copy
modifying
tossing
rest
wasteful
re
allowed
define
functions
return
aliasing
print
screen
pic
initialised
picture
sets
green
pixel
media.set_green
pixel,0
media.show
pics
show
calls
function
effectively
beginning
bunch
statements
parameters
assigned
local
variables
variable
refers
break
first
lists
recall
co-ordinate
annoying
easily
slow
high-dimensional
spaces
python
grouping
similar
items
list
denoted
list_name
list_elt0
list_elt1
list_eltn
i-th
element
i-1
indexed
means
elements
named
empty
index
back
returns
heterogeneous
type
lots
methods
len
length
min
max
long
defined
sum
numbered
append
value
adds
end
sort
sorts
consistent
notions
insert
inserts
remove
removes
instance
count
counts
number
instances
looping
operation
loops
item
block
equivalent
tricky
alter
indices
range
ordered
ranging
i,j
j-1
inclusive
i,j,k
step
i,k
i,k,1
modify
slicing
perform
operations
sublist
makes
aliased
tuples
worried
carelessness
tuple
tuple_name
item0,item1,item2
referenced
single
avoid
ambiguity
revisted
considered
characters
knowlege
gained
apply
reference
string
heterogenous
slice
find
substring
give
character
matching
left
exists
rfind
right
substring,i,j
nested
matrices
represent
grid
higher
dimenstional
space
naturally
loop
item2
page
worksheet
session
administrivia
instructions
err..complete
calculators
laptops
output
write
program
text
problem
common
errors
code
snippets
represents
error
made
introductory
ripped
website
wrong
assume
definitions
occur
snippet
my_string
sentence
my_list
4,2,6,8
user_input
my_integer
convert
lowercase
my_string.lower
answer
reverse
order
my_list.reverse
representation
entered
user
multiply
add
resulting
bigger_input
my_list.append
create
backup
largest
new_list
my_list.remove
finds
position
hints
syntax
correct
def
rindex
occurrence
prints
my_
find_max
integer
assumes
positive
integers
meaningful
names
disclaimer
bit
exaggerated
learn
style
subsequent
courses
thing
imprint
created
reason
reflect
values
choose
store
written
imagine
bug
stuff
elif
task
swap
maximum
minimum
well..maybe
swap_max_min
max_position
temp
min_position
test
cases
calculates
square
root
negative
don
larger
controls
robot
kind
important
works
correctly
staring
minutes
solution..instead
couple
sq_3
sqrt_3
initialized
test_cases
_____
test_case_answers
custom_sqrt
num
snipped
case
failed
note
built-in
zip
lines
prettier
point
fill
blanks
complete
testing
unique
1,2,3,4,5,6
gave
wide
variety
catch
bugs
random
delicate
balance
day
earlier
deal
fact
changed
prime
treated
primitives
booleans
matter
two
pointing
treat
meaning
revelation
member
easiest
directly
stored
table
revisited
modified
turns
tend
message
message.lower
effect
lower
converts
memorize
remember
quick
shown
reminder
starting
completely
writing
manipulate
generally
good
idea
str.capitalize
str.lower
str
letters
converted
uppercase
str.strip
whitespace
removed
.strip
str.replace
old,new
replaced
hallo
.replace
ell
information
str.count
times
appears
str.find
str.rfind
s.startswith
str.endswith
true
starts
ends
.startswith
false
.endswith
transform
types
str.split
separator
words
delimiter
world
mihir
.split
mississippi
ippi
separator.join
seq
combines
separated
returned
.join
counterpart
unlike
multi-dimensional
data
two-dimensional
coordinate
6,-3
ll
develop
instinct
versus
continue
easier
parentheses
1,3,8
creates
expect
1,3
3,1
uple
formats
teger
ered
ples
sequences
nything
sequence
ring
e.g
operator
ach
dictionaries
singleton
mer
4,6
nest
ree
exa
sequen
official
term
share
equence
eck
learned
iterates
major
dat
similarl
equal
combine
dictionarie
dictionar
tup
notation
similarly
1,2
1,2,3
covered
section
examples
series
observation
thes
indexing
sliced
hel
operators
check
ello
concatenation
duplicate
yay
topic
unordered
entries
call
keys
dictionary
intuitive
fundamentally
curly
braces
example_dict
amount
spacing
colon
irrelevant
access
implies
mapped
sense
del
entry
key
d.clear
d.copy
d.pop
iterate
