an operating system  os  is an intermediary between users and computer hardware it provides users an environment in which a user can execute programs conveniently and efficiently in technical terms  it is a software which manages hardware an operating system controls the allocation of resources and services such as memory  processors  devices and information definition an operating system is a program that acts as an interface between the user and the computer hardware and controls the execution of all kinds of programs conceptual view of an operating system following are some of important functions of an operating system memory management processor management device management file management security control over system performance job accounting error detecting aids coordination between other software and users memory management memory management refers to management of primary memory or main memory main memory is a large array of words or bytes where each word or byte has its own address main memory provides a fast storage that can be access directly by the cpu so for a program to be executed  it must in the main memory operating system does the following activities for memory management keeps tracks of primary memory i.e what part of it are in use by whom  what part are not in use in multiprogramming  os decides which process will get memory when and how much allocates the memory when the process requests it to do so de-allocates the memory when the process no longer needs it or has been terminated the task of fulfilling an allocation request consists of locating a block of unused memory of sufficient size memory requests are satisfied by allocating portions from a large pool of memory called the heap or free store at any given time  some parts of the heap are in use  while some are " free "  unused  and thus available for future allocations several issues complicate the implementation  such as external fragmentation  which arises when there are many small gaps between allocated memory blocks  which invalidates their use for an allocation request the allocator 's metadata can also inflate the size of  individually  small allocations this is often managed by chunking the memory management system must track outstanding allocations to ensure that they do not overlap and that no memory is ever " lost " as a memory leak efficiency  edit  the specific dynamic memory allocation algorithm implemented can impact performance significantly a study conducted in 1994 by digital equipment corporation illustrates the overheads involved for a variety of allocators the lowest average instruction path length required to allocate a single memory slot was 52  as measured with an instruction level profiler on a variety of software    2  implementations  edit  since the precise location of the allocation is not known in advance  the memory is accessed indirectly  usually through a pointer reference the specific algorithm used to organize the memory area and allocate and deallocate chunks is interlinked with the kernel  and may use any of the following methods  fixed-size blocks allocation  edit  main article  memory pool fixed-size blocks allocation  also called memory pool allocation  uses a free list of fixed-size blocks of memory  often all of the same size   this works well for simple embedded systems where no large objects need to be allocated  but suffers from fragmentation  especially with long memory addresses however  due to the significantly reduced overhead this method can substantially improve performance for objects that need frequent allocation / de-allocation and is often used in video games buddy blocks  edit  for more details on this topic  see buddy memory allocation in this system  memory is allocated into several pools of memory instead of just one  where each pool represents blocks of memory of a certain power of two in size all blocks of a particular size are kept in a sorted linked list or tree and all new blocks that are formed during allocation are added to their respective memory pools for later use if a smaller size is requested than is available  the smallest available size is selected and halved one of the resulting halves is selected  and the process repeats until the request is complete when a block is allocated  the allocator will start with the smallest sufficiently large block to avoid needlessly breaking blocks when a block is freed  it is compared to its buddy if they are both free  they are combined and placed in the next-largest size buddy-block list systems with virtual memory  edit  main articles  memory protection and shared memory virtual memory is a method of decoupling the memory organization from the physical hardware the applications operate memory via virtual addresses each time an attempt to access stored data is made  virtual memory data orders translate the virtual address to a physical address in this way addition of virtual memory enables granular control over memory systems and methods of access in virtual memory systems the operating system limits how a process can access the memory this feature  called memory protection  can be used to disallow a process to read or write to memory that is not allocated to it  preventing malicious or malfunctioning code in one program from interfering with the operation of another even though the memory allocated for specific processes is normally isolated  processes sometimes need to be able to share information shared memory is one of the fastest techniques for inter-process communication memory is usually classified by access rate into primary storage and secondary storage memory management systems  among other operations  also handle the moving of information between these two levels of memory processor management in multiprogramming environment  os decides which process gets the processor when and how much time this function is called process scheduling operating system does the following activities for processor management keeps tracks of processor and status of process program responsible for this task is known as traffic controller allocates the processor  cpu  to a process de-allocates processor when processor is no longer required device management os manages device communication via their respective drivers operating system does the following activities for device management keeps tracks of all devices program responsible for this task is known as the i/o controller decides which process gets the device when and for how much time allocates the device in the efficient way de-allocates devices file management a file system is normally organized into directories for easy navigation and usage these directories may contain files and other directions operating system does the following activities for file management keeps track of information  location  uses  status etc the collective facilities are often known as file system decides who gets the resources allocates the resources de-allocates the resources other important activities following are some of the important activities that operating system does security  by means of password and similar other techniques  preventing unauthorized access to programs and data control over system performance  recording delays between request for a service and response from the system job accounting  keeping track of time and resources used by various jobs and users error detecting aids  production of dumps  traces  error messages and other debugging and error detecting aids coordination between other softwares and users  coordination and assignment of compilers  interpreters  assemblers and other software to the various users of the computer systems  